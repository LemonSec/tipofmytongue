1
00:00:05,200 --> 00:00:09,889
and good afternoon Singapore in these

2
00:00:08,058 --> 00:00:11,450
last two days we've heard some great

3
00:00:09,889 --> 00:00:13,940
presentations with practical

4
00:00:11,450 --> 00:00:15,919
recommendations and the theme about

5
00:00:13,940 --> 00:00:18,800
building constructive relationships

6
00:00:15,920 --> 00:00:21,950
between security teams and DevOps teams

7
00:00:18,800 --> 00:00:23,570
and I am here to put an end to that or

8
00:00:21,950 --> 00:00:28,040
perhaps I'll rephrase that I'm here to

9
00:00:23,570 --> 00:00:30,079
help end the day on that note so the

10
00:00:28,040 --> 00:00:32,149
title of my presentation is actually

11
00:00:30,079 --> 00:00:34,280
quite honestly rather boring and said

12
00:00:32,149 --> 00:00:36,230
what I usually like to do is start off

13
00:00:34,280 --> 00:00:39,200
with the metaphor of the American West

14
00:00:36,230 --> 00:00:42,319
and by that I mean an Italian movie

15
00:00:39,200 --> 00:00:45,110
filmed in Spain the good the bad the

16
00:00:42,320 --> 00:00:48,650
ugly is Sergio Leone's three-hour epic

17
00:00:45,110 --> 00:00:51,320
Western it's about three gunslingers who

18
00:00:48,650 --> 00:00:53,870
form shifting uneasy relationships as

19
00:00:51,320 --> 00:00:57,350
they search for a hidden cache of stolen

20
00:00:53,870 --> 00:00:59,660
gold gold blondie he's the Clint

21
00:00:57,350 --> 00:01:02,540
Eastwood character he's the good he has

22
00:00:59,660 --> 00:01:03,890
this quote $200,000 is a lot of money

23
00:01:02,540 --> 00:01:06,770
we're going to have to earn it

24
00:01:03,890 --> 00:01:08,720
well bug bounties also have a lot of

25
00:01:06,770 --> 00:01:10,759
money and most of the time you have to

26
00:01:08,720 --> 00:01:12,500
earn it as well as if you're running a

27
00:01:10,760 --> 00:01:13,909
bug bounty program that can be a pretty

28
00:01:12,500 --> 00:01:15,830
expensive proposition

29
00:01:13,909 --> 00:01:18,740
so one of the things we want to explore

30
00:01:15,830 --> 00:01:20,298
here is how are we going to invest our

31
00:01:18,740 --> 00:01:23,000
time how are we going to invest our

32
00:01:20,299 --> 00:01:25,460
money and what how can we find that

33
00:01:23,000 --> 00:01:28,600
hitting cash where we're doing so in a

34
00:01:25,460 --> 00:01:31,039
way that's efficient and cost-effective

35
00:01:28,600 --> 00:01:34,100
so Clint Eastwood also has another great

36
00:01:31,040 --> 00:01:36,110
line you see in this world there's two

37
00:01:34,100 --> 00:01:39,110
kinds of people my friend those with

38
00:01:36,110 --> 00:01:41,000
loaded guns and those who dig now that

39
00:01:39,110 --> 00:01:43,549
is highly motivating but it's not very

40
00:01:41,000 --> 00:01:45,560
collaborative so whether we're trying to

41
00:01:43,549 --> 00:01:47,060
gather more information about a bounty

42
00:01:45,560 --> 00:01:49,880
report to get some details about

43
00:01:47,060 --> 00:01:51,560
reproduction steps or we're trying to

44
00:01:49,880 --> 00:01:54,020
where we're handing off vulnerability

45
00:01:51,560 --> 00:01:56,049
information to developers we should do

46
00:01:54,020 --> 00:01:58,759
so in a way that really emphasizes

47
00:01:56,049 --> 00:02:00,259
participation and empathy that's been

48
00:01:58,760 --> 00:02:02,840
one of the underlying themes at these

49
00:02:00,259 --> 00:02:04,610
past two days because after all we want

50
00:02:02,840 --> 00:02:06,799
to avoid that moment when Lee Van

51
00:02:04,610 --> 00:02:09,408
Cleef's character shows up and reminds

52
00:02:06,799 --> 00:02:11,530
us at gunpoint to people dig a lot

53
00:02:09,408 --> 00:02:14,480
quicker than one

54
00:02:11,530 --> 00:02:17,450
and of course there's the third Tuco

55
00:02:14,480 --> 00:02:20,030
he's played by Eli Wallach he's the the

56
00:02:17,450 --> 00:02:22,099
ugly he has a fantastic line there are

57
00:02:20,030 --> 00:02:23,060
two kinds of Spurs my friend those that

58
00:02:22,099 --> 00:02:25,119
come in by the door

59
00:02:23,060 --> 00:02:27,739
those that come in by the window in

60
00:02:25,120 --> 00:02:30,530
other words were always going to have

61
00:02:27,739 --> 00:02:32,959
loans so our applications either already

62
00:02:30,530 --> 00:02:35,900
have vulnerabilities or they're going to

63
00:02:32,959 --> 00:02:37,010
have vulnerabilities ideally we're going

64
00:02:35,900 --> 00:02:38,870
to find them before they reach

65
00:02:37,010 --> 00:02:39,858
production unfortunately that's not

66
00:02:38,870 --> 00:02:41,810
always the case

67
00:02:39,859 --> 00:02:44,450
what we want to do is find them in

68
00:02:41,810 --> 00:02:47,480
production in a way that minimizes the

69
00:02:44,450 --> 00:02:50,480
risk to the applications user with their

70
00:02:47,480 --> 00:02:53,000
data and the application systems you can

71
00:02:50,480 --> 00:02:55,578
sort of think of this as two-factor or

72
00:02:53,000 --> 00:02:57,709
app SEC something you know something you

73
00:02:55,579 --> 00:02:59,659
have you know there's going to be bones

74
00:02:57,709 --> 00:03:01,450
you have hope that they won't be

75
00:02:59,659 --> 00:03:04,159
exploited before they're found in fix

76
00:03:01,450 --> 00:03:07,388
and if you cross your fingers while this

77
00:03:04,159 --> 00:03:10,189
is biometric two-factor abscess

78
00:03:07,389 --> 00:03:11,450
so what this boils down to is this idea

79
00:03:10,189 --> 00:03:12,049
of how are we going to discover those

80
00:03:11,450 --> 00:03:13,969
bones

81
00:03:12,049 --> 00:03:16,370
we have bug bounties pen testing and

82
00:03:13,969 --> 00:03:19,459
even scanners that we'll get into but we

83
00:03:16,370 --> 00:03:21,019
have an overarching goal to fix

84
00:03:19,459 --> 00:03:22,760
vulnerabilities but we have a lot of

85
00:03:21,019 --> 00:03:25,220
different motivations for getting there

86
00:03:22,760 --> 00:03:27,048
we have bug bounty hunters who are

87
00:03:25,220 --> 00:03:29,870
asking what's the price for this vault

88
00:03:27,049 --> 00:03:32,599
and who are very often incentivized to

89
00:03:29,870 --> 00:03:34,310
find the highest impact or argue for a

90
00:03:32,599 --> 00:03:36,798
higher impact phone so they can get a

91
00:03:34,310 --> 00:03:39,319
better price for it you have a DevOps

92
00:03:36,799 --> 00:03:41,389
team they're asking the questions what's

93
00:03:39,319 --> 00:03:43,790
it going to cost me to fix this phone my

94
00:03:41,389 --> 00:03:46,519
time is valuable what's it going to cost

95
00:03:43,790 --> 00:03:48,888
to our deployment pipeline what's it

96
00:03:46,519 --> 00:03:51,139
going to cost to our deadlines and then

97
00:03:48,889 --> 00:03:53,299
there's also the idea of what's the

98
00:03:51,139 --> 00:03:55,430
value should we bother doing this type

99
00:03:53,299 --> 00:03:57,319
of on discovery what are we getting out

100
00:03:55,430 --> 00:03:59,299
of it and so calling out those nuances

101
00:03:57,319 --> 00:04:02,298
there's difference between those ideas

102
00:03:59,299 --> 00:04:04,040
of price cost and value and hopefully

103
00:04:02,299 --> 00:04:05,419
throughout the next few slides we'll get

104
00:04:04,040 --> 00:04:07,310
a little bit better sense of how we

105
00:04:05,419 --> 00:04:10,939
might quantify that or how we can sort

106
00:04:07,310 --> 00:04:13,099
of think about that in general before we

107
00:04:10,939 --> 00:04:16,519
go too far I do want to take a slight

108
00:04:13,099 --> 00:04:18,620
diversion into talking about bum bug

109
00:04:16,519 --> 00:04:20,180
bounties and vulnerabilities and the

110
00:04:18,620 --> 00:04:23,270
herds and the hordes that are out there

111
00:04:20,180 --> 00:04:24,060
so vulnerability disclosure itself could

112
00:04:23,270 --> 00:04:26,250
be an epic

113
00:04:24,060 --> 00:04:28,620
three hour discussion what we'll do is

114
00:04:26,250 --> 00:04:31,680
just focus on under an hour more that

115
00:04:28,620 --> 00:04:34,830
aspect of optimizing our time and budget

116
00:04:31,680 --> 00:04:37,080
by wouldn't - I do want to focus on a

117
00:04:34,830 --> 00:04:39,300
few things one of it for example is the

118
00:04:37,080 --> 00:04:42,210
term of art currently is coordinated

119
00:04:39,300 --> 00:04:44,610
disclosure with the opposite implication

120
00:04:42,210 --> 00:04:46,830
being uncoordinated that's a little bit

121
00:04:44,610 --> 00:04:49,770
more value neutral than seeing

122
00:04:46,830 --> 00:04:51,510
responsible or irresponsible or even at

123
00:04:49,770 --> 00:04:54,570
the very far end of the spectrum when

124
00:04:51,510 --> 00:04:56,280
bug bounty reports are very are almost

125
00:04:54,570 --> 00:04:58,530
indistinguishable from something like

126
00:04:56,280 --> 00:05:00,570
extortion but if you want to learn more

127
00:04:58,530 --> 00:05:02,820
about this I highly recommend looking at

128
00:05:00,570 --> 00:05:05,159
the work by Katie mu Soros who has done

129
00:05:02,820 --> 00:05:07,979
this for well over a decade very

130
00:05:05,160 --> 00:05:10,710
well-regarded and expert in this field

131
00:05:07,979 --> 00:05:12,930
is very much focused on the ins and outs

132
00:05:10,710 --> 00:05:16,739
and how to go about you know how to

133
00:05:12,930 --> 00:05:18,840
approach vulnerability disclosure so

134
00:05:16,740 --> 00:05:20,040
with that aside let's actually dive into

135
00:05:18,840 --> 00:05:22,320
some numbers if we're talking about

136
00:05:20,040 --> 00:05:24,930
metrics metrics of course in numbers and

137
00:05:22,320 --> 00:05:27,000
what's actually really cool is about

138
00:05:24,930 --> 00:05:29,520
these are one of the few areas where we

139
00:05:27,000 --> 00:05:32,130
have strong numbers in other words the

140
00:05:29,520 --> 00:05:34,799
price of a bounty for the most part

141
00:05:32,130 --> 00:05:38,250
reflects the risk associated with the

142
00:05:34,800 --> 00:05:39,990
vulnerability so you might have a $50

143
00:05:38,250 --> 00:05:42,240
cross-site scripting that can only be

144
00:05:39,990 --> 00:05:43,800
you know it's a self PROSITE scripting

145
00:05:42,240 --> 00:05:46,380
very difficult you know a very low

146
00:05:43,800 --> 00:05:49,229
impact or that other end of the spectrum

147
00:05:46,380 --> 00:05:51,360
might have a $10,000 price side

148
00:05:49,229 --> 00:05:53,580
scripting because it can be delivered to

149
00:05:51,360 --> 00:05:56,430
anybody's inbox in a web-based email

150
00:05:53,580 --> 00:05:58,560
system and extract you know sensitive

151
00:05:56,430 --> 00:06:00,810
information let alone cookies or

152
00:05:58,560 --> 00:06:03,780
something like that so you you have this

153
00:06:00,810 --> 00:06:05,400
wide variance and on average and bug

154
00:06:03,780 --> 00:06:07,679
bounty programs I've been familiar with

155
00:06:05,400 --> 00:06:12,780
the average price of a valen was around

156
00:06:07,680 --> 00:06:15,180
$800 and in some more public publicly

157
00:06:12,780 --> 00:06:18,359
reported data I've seen the average be

158
00:06:15,180 --> 00:06:20,280
around $1000 so keep this number in mind

159
00:06:18,360 --> 00:06:21,870
because we're going to revisit it as we

160
00:06:20,280 --> 00:06:25,559
build some models and we talk about

161
00:06:21,870 --> 00:06:28,530
metrics one of the other things I want

162
00:06:25,560 --> 00:06:31,410
to do is we build this idea of models

163
00:06:28,530 --> 00:06:33,419
and build this idea of metrics is what

164
00:06:31,410 --> 00:06:35,610
about the work that's going into bug

165
00:06:33,419 --> 00:06:38,090
bounties or what does this wisdom of the

166
00:06:35,610 --> 00:06:41,880
crowd look like what we might discover

167
00:06:38,090 --> 00:06:45,090
spoilers is that the thought the entire

168
00:06:41,880 --> 00:06:47,070
crowd itself is not uniformly wise there

169
00:06:45,090 --> 00:06:49,739
actually may be a very small cohort of

170
00:06:47,070 --> 00:06:52,860
people that are earning the majority of

171
00:06:49,740 --> 00:06:55,200
the money or equally reporting the

172
00:06:52,860 --> 00:06:56,640
majority of the vulnerabilities so

173
00:06:55,200 --> 00:06:58,289
that's something that we want to know

174
00:06:56,640 --> 00:07:00,539
about we should be aware about and

175
00:06:58,290 --> 00:07:01,800
there's a reason we want to do that and

176
00:07:00,540 --> 00:07:03,120
we'll get to that reason shortly I'm

177
00:07:01,800 --> 00:07:05,970
going to try to keep you in suspense as

178
00:07:03,120 --> 00:07:08,070
much as possible so as I build suspense

179
00:07:05,970 --> 00:07:10,110
basically going to revisit and start to

180
00:07:08,070 --> 00:07:12,510
reformulate our question which really

181
00:07:10,110 --> 00:07:14,670
just says we want to know where our

182
00:07:12,510 --> 00:07:16,770
flaws are we'd like to find them but how

183
00:07:14,670 --> 00:07:18,930
can we do so effectively we care about

184
00:07:16,770 --> 00:07:21,810
time we care about money two very

185
00:07:18,930 --> 00:07:25,010
important things also two very important

186
00:07:21,810 --> 00:07:30,090
tracks off of the Dark Side of the Moon

187
00:07:25,010 --> 00:07:32,400
so war metrics noise notoriously bug

188
00:07:30,090 --> 00:07:34,530
bounties have a lot of noise what I've

189
00:07:32,400 --> 00:07:36,510
shown here are vulnerabilities that were

190
00:07:34,530 --> 00:07:38,880
then reported through pen testing as

191
00:07:36,510 --> 00:07:41,430
well as through bug bounties and this

192
00:07:38,880 --> 00:07:44,159
over here we're on Colonia to note on

193
00:07:41,430 --> 00:07:46,350
the right-hand column is the valid so

194
00:07:44,160 --> 00:07:49,410
roughly from the metrics I had available

195
00:07:46,350 --> 00:07:51,990
around 80 percent percent of the vols

196
00:07:49,410 --> 00:07:54,990
from the pen testing or valid and about

197
00:07:51,990 --> 00:07:57,810
33% out of bug bounties were valid this

198
00:07:54,990 --> 00:08:02,030
probably the bug bounty number is

199
00:07:57,810 --> 00:08:05,520
probably close to other industry numbers

200
00:08:02,030 --> 00:08:07,770
yeah the point here being that the noise

201
00:08:05,520 --> 00:08:10,200
is going to be a distraction or noise is

202
00:08:07,770 --> 00:08:12,690
something you have to filter out but

203
00:08:10,200 --> 00:08:14,130
there's also stories we can start to to

204
00:08:12,690 --> 00:08:16,620
tell and things that we can interrogate

205
00:08:14,130 --> 00:08:19,080
about our data and it's not always the

206
00:08:16,620 --> 00:08:21,120
fault here of bug bounty researchers

207
00:08:19,080 --> 00:08:22,469
that we get duplicates and that's one of

208
00:08:21,120 --> 00:08:25,620
the reasons I wanted to highlight that

209
00:08:22,470 --> 00:08:28,830
column duplicates can also be a measure

210
00:08:25,620 --> 00:08:31,920
of your DevOps speed or the the maturity

211
00:08:28,830 --> 00:08:34,079
model or in the speed with which you can

212
00:08:31,920 --> 00:08:36,930
respond to Vols so if you get a bone

213
00:08:34,080 --> 00:08:39,479
report on a Friday afternoon and you're

214
00:08:36,929 --> 00:08:41,640
able to push out a fix by well we heard

215
00:08:39,479 --> 00:08:43,919
earlier today could fix actually push

216
00:08:41,640 --> 00:08:45,480
out a fix on Saturday morning or maybe

217
00:08:43,919 --> 00:08:47,490
we want to take the weekend the fix

218
00:08:45,480 --> 00:08:49,230
doesn't come out till Monday that's a

219
00:08:47,490 --> 00:08:50,960
good way of minimizing how many

220
00:08:49,230 --> 00:08:53,750
duplicate reports are going to come in

221
00:08:50,960 --> 00:08:55,550
for that long however if you're not able

222
00:08:53,750 --> 00:08:58,400
to fix that bone and um in a matter of

223
00:08:55,550 --> 00:09:00,829
days let alone weeks or a worse case let

224
00:08:58,400 --> 00:09:02,630
alone months you're likely going to get

225
00:09:00,830 --> 00:09:04,880
a whole lot of duplicate reports for

226
00:09:02,630 --> 00:09:06,890
that vulnerability so it's not just the

227
00:09:04,880 --> 00:09:08,660
case that duplicate is noise because a

228
00:09:06,890 --> 00:09:10,970
lot of people are in are you know

229
00:09:08,660 --> 00:09:12,650
telling you what you already know it's

230
00:09:10,970 --> 00:09:14,920
also an indicator that you don't

231
00:09:12,650 --> 00:09:17,060
necessarily have a robust enough

232
00:09:14,920 --> 00:09:21,469
development process to be able to fix

233
00:09:17,060 --> 00:09:24,290
quickly those bones that do come in so

234
00:09:21,470 --> 00:09:26,750
here's our first insight not really too

235
00:09:24,290 --> 00:09:28,400
earth-shattering probably something that

236
00:09:26,750 --> 00:09:29,840
we could have predicted before we even

237
00:09:28,400 --> 00:09:31,880
started this presentation

238
00:09:29,840 --> 00:09:34,130
what's the idea that yes there's noise

239
00:09:31,880 --> 00:09:36,530
out there and all these vulnerabilities

240
00:09:34,130 --> 00:09:38,240
call them false positives call them just

241
00:09:36,530 --> 00:09:40,310
distractions they're going to make us

242
00:09:38,240 --> 00:09:42,590
less efficient and they actually cost

243
00:09:40,310 --> 00:09:44,660
money so they cost money if we're going

244
00:09:42,590 --> 00:09:46,550
to outsource the people who are going to

245
00:09:44,660 --> 00:09:49,130
do the triage for our bug bounty program

246
00:09:46,550 --> 00:09:53,329
or they just cost money for our hourly

247
00:09:49,130 --> 00:09:55,340
rate for contractors etc and what we

248
00:09:53,330 --> 00:09:58,100
want to do is try to avoid paying for

249
00:09:55,340 --> 00:10:00,050
for this noise as much as possible and

250
00:09:58,100 --> 00:10:01,370
to do that we're going to continue to

251
00:10:00,050 --> 00:10:03,050
collect more metrics and we're going to

252
00:10:01,370 --> 00:10:05,540
build a model sort of a mental model

253
00:10:03,050 --> 00:10:07,670
about our own discovery efforts to

254
00:10:05,540 --> 00:10:10,819
figure out how well are we using it how

255
00:10:07,670 --> 00:10:12,380
can we optimize it now before we

256
00:10:10,820 --> 00:10:13,970
continue with some additional metrics

257
00:10:12,380 --> 00:10:16,580
one of the things I wanted to make sure

258
00:10:13,970 --> 00:10:19,010
was it set the tone that nothing about

259
00:10:16,580 --> 00:10:21,770
this is trying to position bug bounties

260
00:10:19,010 --> 00:10:24,020
or pen testing as one better than the

261
00:10:21,770 --> 00:10:26,120
other they're very different beasts they

262
00:10:24,020 --> 00:10:28,069
serve a very different purpose and what

263
00:10:26,120 --> 00:10:29,960
we're going to look at is ways to think

264
00:10:28,070 --> 00:10:32,210
about how we might align them either

265
00:10:29,960 --> 00:10:35,030
with the rate of our development process

266
00:10:32,210 --> 00:10:37,490
the size of our development team the

267
00:10:35,030 --> 00:10:39,829
size of our security team or even just

268
00:10:37,490 --> 00:10:41,660
how many you know how many eyeballs do

269
00:10:39,830 --> 00:10:45,200
we want to throw into our app sect

270
00:10:41,660 --> 00:10:47,360
program so one of the other things that

271
00:10:45,200 --> 00:10:50,180
we can say about this is what's

272
00:10:47,360 --> 00:10:52,460
interesting here is that that big

273
00:10:50,180 --> 00:10:53,510
outlier of the most reported well

274
00:10:52,460 --> 00:10:55,340
there's a whole lot of cross-site

275
00:10:53,510 --> 00:10:57,050
scripting because cross-site scripting

276
00:10:55,340 --> 00:10:58,790
is kind of the cockroach of the internet

277
00:10:57,050 --> 00:11:01,969
it's just everywhere it's never going to

278
00:10:58,790 --> 00:11:03,260
go away unfortunately but there's also a

279
00:11:01,970 --> 00:11:04,790
lot of misconfigurations

280
00:11:03,260 --> 00:11:07,040
and

281
00:11:04,790 --> 00:11:08,689
most of the findings coming from our pen

282
00:11:07,040 --> 00:11:09,829
testing and coming from our bounty

283
00:11:08,690 --> 00:11:11,990
programs are related to

284
00:11:09,830 --> 00:11:14,750
misconfigurations maybe we're even

285
00:11:11,990 --> 00:11:16,880
overpaying for that information for the

286
00:11:14,750 --> 00:11:18,740
most part scanner should actually be

287
00:11:16,880 --> 00:11:20,090
pretty good at identifying these types

288
00:11:18,740 --> 00:11:23,270
of miss configuration problems

289
00:11:20,090 --> 00:11:26,300
especially something as simple as the

290
00:11:23,270 --> 00:11:28,340
tls cipher suite or what protocols are

291
00:11:26,300 --> 00:11:30,859
enabled something like an SSL labs or

292
00:11:28,340 --> 00:11:32,210
what hardened eyes can provide us or an

293
00:11:30,860 --> 00:11:34,760
even with like a configuration

294
00:11:32,210 --> 00:11:36,860
management in our CI CD pipeline those

295
00:11:34,760 --> 00:11:38,600
are great ways of fixing those miss

296
00:11:36,860 --> 00:11:41,690
configurations so we're not paying

297
00:11:38,600 --> 00:11:43,970
someone a large hourly rate or large

298
00:11:41,690 --> 00:11:47,080
bounties just to tell us something that

299
00:11:43,970 --> 00:11:49,280
that scanner should have told us already

300
00:11:47,080 --> 00:11:51,160
whereas scanners aren't going to be as

301
00:11:49,280 --> 00:11:53,630
good with something like probably

302
00:11:51,160 --> 00:11:55,520
authentication and sessions they might

303
00:11:53,630 --> 00:11:57,320
not even be as good as sensitive data

304
00:11:55,520 --> 00:11:58,970
exposures if they don't understand the

305
00:11:57,320 --> 00:12:03,410
context of what actually is being

306
00:11:58,970 --> 00:12:05,360
exposed so set that aside and let's move

307
00:12:03,410 --> 00:12:07,150
on and we'll take our first dimension

308
00:12:05,360 --> 00:12:09,110
and look at the dimension of time

309
00:12:07,150 --> 00:12:11,000
partially because I'm a Doctor Who fan

310
00:12:09,110 --> 00:12:13,160
so I like to bring in time and time

311
00:12:11,000 --> 00:12:15,230
related references into my presentations

312
00:12:13,160 --> 00:12:19,640
in this case we're talking about

313
00:12:15,230 --> 00:12:23,000
efficiency and time and pen tests versus

314
00:12:19,640 --> 00:12:24,920
bug bounties so as you might guess when

315
00:12:23,000 --> 00:12:27,020
you pay for a pen test you're getting a

316
00:12:24,920 --> 00:12:28,729
lot I'm not going to say all they're

317
00:12:27,020 --> 00:12:32,150
getting a lot of loans in a relatively

318
00:12:28,730 --> 00:12:33,950
fixed time period over a bug bounty you

319
00:12:32,150 --> 00:12:36,530
may get the exact same number of bones

320
00:12:33,950 --> 00:12:38,660
as we saw from this previous slide they

321
00:12:36,530 --> 00:12:40,189
track pretty closely to each other there

322
00:12:38,660 --> 00:12:42,230
are experts out there in the bug bounty

323
00:12:40,190 --> 00:12:45,230
world just as there are experts within

324
00:12:42,230 --> 00:12:47,510
pen testing they got point here is that

325
00:12:45,230 --> 00:12:50,120
may take you rather than two weeks it

326
00:12:47,510 --> 00:12:52,340
may take two months or a hundred days or

327
00:12:50,120 --> 00:12:53,690
a full year to get the same number of

328
00:12:52,340 --> 00:12:57,650
vulnerabilities that you might have

329
00:12:53,690 --> 00:12:59,900
gotten out of the pen test so what if we

330
00:12:57,650 --> 00:13:02,990
also then switched from just looking at

331
00:12:59,900 --> 00:13:05,270
time to also looking at the cost there

332
00:13:02,990 --> 00:13:07,460
are some ways if we just looked at bug

333
00:13:05,270 --> 00:13:10,730
bounty reports and how they build and

334
00:13:07,460 --> 00:13:12,230
build over time on average there's going

335
00:13:10,730 --> 00:13:14,120
to be a certain time where they're cost

336
00:13:12,230 --> 00:13:15,920
effective meaning they're below that

337
00:13:14,120 --> 00:13:18,380
line where you'd actually pay for a pen

338
00:13:15,920 --> 00:13:20,449
test so that's great

339
00:13:18,380 --> 00:13:22,939
you're actually saving money by just

340
00:13:20,450 --> 00:13:24,980
having a bug bounty program because

341
00:13:22,940 --> 00:13:26,870
there's not that many vulnerabilities

342
00:13:24,980 --> 00:13:29,950
coming in or you don't have a whole lot

343
00:13:26,870 --> 00:13:32,540
of huge outliers that are those 10,000

344
00:13:29,950 --> 00:13:35,960
$15,000 types of vulnerabilities and

345
00:13:32,540 --> 00:13:38,750
over time however that may increase so a

346
00:13:35,960 --> 00:13:42,170
bug bounty our sorry a pen test may only

347
00:13:38,750 --> 00:13:43,250
be a one week or a two week effort but

348
00:13:42,170 --> 00:13:45,860
afterwards you're going to have a

349
00:13:43,250 --> 00:13:47,690
hundred days 200 days so maybe you're

350
00:13:45,860 --> 00:13:49,430
going to find that same number of voles

351
00:13:47,690 --> 00:13:51,620
you would in a pen test it's just going

352
00:13:49,430 --> 00:13:53,510
to take longer to get there so in a way

353
00:13:51,620 --> 00:13:54,800
it could be a matter a measure of your

354
00:13:53,510 --> 00:13:58,010
patience or a measure of your

355
00:13:54,800 --> 00:13:59,930
expectation now the other thing to think

356
00:13:58,010 --> 00:14:03,050
about here and the other what this

357
00:13:59,930 --> 00:14:05,180
doesn't capture is the rate of releases

358
00:14:03,050 --> 00:14:07,310
for your application so one of the

359
00:14:05,180 --> 00:14:09,890
things here is that this sort of assumes

360
00:14:07,310 --> 00:14:13,280
we developed an application we deployed

361
00:14:09,890 --> 00:14:15,170
it and then nothing changed so obviously

362
00:14:13,280 --> 00:14:17,630
applications do change we heard again

363
00:14:15,170 --> 00:14:20,089
earlier today an application being

364
00:14:17,630 --> 00:14:22,340
deployed 20 times a day obviously that's

365
00:14:20,090 --> 00:14:24,410
a pretty massive a very fast rate of

366
00:14:22,340 --> 00:14:27,140
change but there's some other metrics

367
00:14:24,410 --> 00:14:29,600
again spoilers or keep you in suspense

368
00:14:27,140 --> 00:14:32,390
that we can talk about how to match up

369
00:14:29,600 --> 00:14:37,160
how we're doing Bowl discovery with this

370
00:14:32,390 --> 00:14:39,560
type of frequency a rate of change again

371
00:14:37,160 --> 00:14:40,640
trying to not jump around too much on

372
00:14:39,560 --> 00:14:43,130
you but I wanted to make another

373
00:14:40,640 --> 00:14:46,310
reference to a fantastic sci-fi movie

374
00:14:43,130 --> 00:14:48,410
from 1981 called scanners but talk about

375
00:14:46,310 --> 00:14:49,849
web application scanners that are near

376
00:14:48,410 --> 00:14:52,069
and dear to my heart because they

377
00:14:49,850 --> 00:14:54,800
represent automation and one of the

378
00:14:52,070 --> 00:14:57,620
tenets of DevOps that I like to really

379
00:14:54,800 --> 00:15:00,890
emphasize is automation and feedback

380
00:14:57,620 --> 00:15:04,100
loops so feedback loops a very basic

381
00:15:00,890 --> 00:15:06,949
engineering principle automation also a

382
00:15:04,100 --> 00:15:09,170
very basic engineering principle so I

383
00:15:06,950 --> 00:15:11,150
don't have a lot of data around scanner

384
00:15:09,170 --> 00:15:14,300
so that's why you don't see them in a

385
00:15:11,150 --> 00:15:16,189
lot of my graphs and metrics but we can

386
00:15:14,300 --> 00:15:18,380
already assume that they're going to

387
00:15:16,190 --> 00:15:20,150
have a lot of overlaps and what pen

388
00:15:18,380 --> 00:15:22,939
testing can do or what bug bound you can

389
00:15:20,150 --> 00:15:25,220
do for example if you're paying bounties

390
00:15:22,940 --> 00:15:27,350
based on things somebody who's been

391
00:15:25,220 --> 00:15:29,630
running and and that somebody who's have

392
00:15:27,350 --> 00:15:31,820
been running open das or necess you're

393
00:15:29,630 --> 00:15:32,540
basically subsidizing people to run

394
00:15:31,820 --> 00:15:34,400
scans

395
00:15:32,540 --> 00:15:36,380
that you should be doing yourself so

396
00:15:34,400 --> 00:15:38,329
again that's probably a wasted amount of

397
00:15:36,380 --> 00:15:39,820
budget and wasted effort if you're

398
00:15:38,330 --> 00:15:42,800
getting those types of vulnerabilities

399
00:15:39,820 --> 00:15:46,160
start investing that money into scanners

400
00:15:42,800 --> 00:15:48,709
the same thing to is that if we were

401
00:15:46,160 --> 00:15:50,390
throw them onto this graph they would

402
00:15:48,710 --> 00:15:52,580
likely be down in that lower left-hand

403
00:15:50,390 --> 00:15:54,890
corner where there are efficient in time

404
00:15:52,580 --> 00:15:56,960
and they're cost effective doesn't mean

405
00:15:54,890 --> 00:15:59,150
they have a zero cost but it means we

406
00:15:56,960 --> 00:16:00,980
can use feedback loops if we get a about

407
00:15:59,150 --> 00:16:03,650
a bug dining report in a production

408
00:16:00,980 --> 00:16:06,050
system now let's go back and adjust one

409
00:16:03,650 --> 00:16:08,900
of our QA tests one of our acceptance

410
00:16:06,050 --> 00:16:10,760
tests one of our development linters to

411
00:16:08,900 --> 00:16:12,920
see can we find this vulnerability

412
00:16:10,760 --> 00:16:16,189
within our code so that we can you know

413
00:16:12,920 --> 00:16:17,750
watch for a regression as well as can we

414
00:16:16,190 --> 00:16:19,760
take advantage of this scanner that's

415
00:16:17,750 --> 00:16:21,320
not only watching for a regression but

416
00:16:19,760 --> 00:16:23,660
look for this same vulnerable pattern

417
00:16:21,320 --> 00:16:25,460
elsewhere within our code base so that's

418
00:16:23,660 --> 00:16:32,030
where scanner is and automation are

419
00:16:25,460 --> 00:16:33,830
going to be a fantastic help for us so

420
00:16:32,030 --> 00:16:36,410
let's go back to that idea of that I

421
00:16:33,830 --> 00:16:37,790
alluded to you before about the pace of

422
00:16:36,410 --> 00:16:41,990
development or the frequency of

423
00:16:37,790 --> 00:16:44,300
deployment and tie that in to as a

424
00:16:41,990 --> 00:16:47,150
parallel to the frequency of bug bounty

425
00:16:44,300 --> 00:16:49,490
reports so what I did here is I looked

426
00:16:47,150 --> 00:16:52,130
at reports and I just start said how

427
00:16:49,490 --> 00:16:56,180
many days are there between valid

428
00:16:52,130 --> 00:17:00,170
reports and 50% of the valid reports

429
00:16:56,180 --> 00:17:03,380
came within roughly four days and 95% of

430
00:17:00,170 --> 00:17:06,200
them overall took had about 22 days in

431
00:17:03,380 --> 00:17:08,540
between them so there's a couple things

432
00:17:06,200 --> 00:17:10,490
we can take from here if we're saying if

433
00:17:08,540 --> 00:17:12,859
we're thinking four days between Bolen

434
00:17:10,490 --> 00:17:14,930
between download reports we can say

435
00:17:12,859 --> 00:17:16,790
great we're probably going to get two

436
00:17:14,930 --> 00:17:19,280
reports a week for our moment for our

437
00:17:16,790 --> 00:17:22,339
application and if we say on average

438
00:17:19,280 --> 00:17:24,379
that's $1,000 we can already sort a set

439
00:17:22,339 --> 00:17:27,169
of up some expectations that we might be

440
00:17:24,380 --> 00:17:29,900
spending $100,000 a year on this

441
00:17:27,170 --> 00:17:31,610
application for bug bounty now obviously

442
00:17:29,900 --> 00:17:34,070
things are going to change your

443
00:17:31,610 --> 00:17:36,620
applications may be very different but

444
00:17:34,070 --> 00:17:38,899
this is helpful in the sense of saying

445
00:17:36,620 --> 00:17:40,820
what's going on in our environment and

446
00:17:38,900 --> 00:17:42,530
how can we start to gather some

447
00:17:40,820 --> 00:17:44,980
informative metrics to help us with

448
00:17:42,530 --> 00:17:47,110
forecasting or just give us a sense of

449
00:17:44,980 --> 00:17:49,540
how worried should I be about this

450
00:17:47,110 --> 00:17:51,580
application or how much money am I going

451
00:17:49,540 --> 00:17:52,710
to have to spend on it if we're

452
00:17:51,580 --> 00:17:54,699
imagining you were going to spend

453
00:17:52,710 --> 00:17:55,600
$100,000 on the voluntour this

454
00:17:54,700 --> 00:17:57,580
application

455
00:17:55,600 --> 00:18:00,370
maybe we actually want to invest in a

456
00:17:57,580 --> 00:18:02,409
Wow and get rid of a lot of whole swaths

457
00:18:00,370 --> 00:18:04,479
of these types of vulnerabilities or

458
00:18:02,410 --> 00:18:07,140
will pay for consultants or will pay for

459
00:18:04,480 --> 00:18:09,100
something else to come in and help us

460
00:18:07,140 --> 00:18:12,040
there's a couple other things that we

461
00:18:09,100 --> 00:18:15,428
can also think about this in making sure

462
00:18:12,040 --> 00:18:17,530
I know if all the stage in 2016 there

463
00:18:15,429 --> 00:18:22,809
was roughly 33 days about a month in

464
00:18:17,530 --> 00:18:25,928
between valid reports at the most so

465
00:18:22,809 --> 00:18:28,090
what we could say here is that we set up

466
00:18:25,929 --> 00:18:30,309
a program for our application it's been

467
00:18:28,090 --> 00:18:33,340
a month since we had the last valid

468
00:18:30,309 --> 00:18:34,690
vulnerabilities submitted for it what

469
00:18:33,340 --> 00:18:37,570
does that mean well we might be

470
00:18:34,690 --> 00:18:39,429
optimistic and think that all of the

471
00:18:37,570 --> 00:18:41,320
bones have been found or perhaps it

472
00:18:39,429 --> 00:18:43,179
means that all of the interesting or the

473
00:18:41,320 --> 00:18:43,659
easy bones have been found it's been a

474
00:18:43,179 --> 00:18:46,690
month

475
00:18:43,660 --> 00:18:49,030
so that maybe will give us a sense of

476
00:18:46,690 --> 00:18:51,520
confidence if it's a legacy system that

477
00:18:49,030 --> 00:18:53,410
doesn't change very often maybe that

478
00:18:51,520 --> 00:18:56,350
month is a really good indicator that

479
00:18:53,410 --> 00:18:58,000
yes in fact we actually have scoured and

480
00:18:56,350 --> 00:19:00,189
cleanse that application of all the

481
00:18:58,000 --> 00:19:01,540
really bad vulnerabilities it was an

482
00:19:00,190 --> 00:19:04,240
application that's constantly changing

483
00:19:01,540 --> 00:19:06,070
and it has been a month since we've

484
00:19:04,240 --> 00:19:09,580
gotten our last ballot vulnerability

485
00:19:06,070 --> 00:19:10,720
report for it maybe it means something

486
00:19:09,580 --> 00:19:12,120
else this is where you have to be

487
00:19:10,720 --> 00:19:14,890
perhaps a little bit more pessimistic

488
00:19:12,120 --> 00:19:18,280
perhaps it means that the bounty hunters

489
00:19:14,890 --> 00:19:20,020
are in are uninterested maybe they did

490
00:19:18,280 --> 00:19:21,850
find all the easy cross-site scripting

491
00:19:20,020 --> 00:19:23,200
but they wanted to move on and they

492
00:19:21,850 --> 00:19:25,928
don't want to bother looking at the

493
00:19:23,200 --> 00:19:27,700
author of the OAuth implementation or

494
00:19:25,929 --> 00:19:29,200
they're not aware that there's a new

495
00:19:27,700 --> 00:19:31,240
feature that's been released that may

496
00:19:29,200 --> 00:19:33,130
actually have some new cross-site

497
00:19:31,240 --> 00:19:34,929
scripting vulnerabilities in it or

498
00:19:33,130 --> 00:19:36,910
perhaps they got bored or because

499
00:19:34,929 --> 00:19:39,010
there's a particular market for bounty

500
00:19:36,910 --> 00:19:41,230
programs maybe you're not paying enough

501
00:19:39,010 --> 00:19:43,360
maybe at this point you can say our

502
00:19:41,230 --> 00:19:45,070
average payout was a thousand dollars

503
00:19:43,360 --> 00:19:46,809
but now we're going to up into two

504
00:19:45,070 --> 00:19:48,639
thousand or perhaps we're going to say

505
00:19:46,809 --> 00:19:51,220
we'll pay five thousand dollars for this

506
00:19:48,640 --> 00:19:52,680
particular class of bugs because our

507
00:19:51,220 --> 00:19:55,200
program is going

508
00:19:52,680 --> 00:19:57,240
so these are different ways that by

509
00:19:55,200 --> 00:19:59,310
having a few numbers that can be

510
00:19:57,240 --> 00:20:01,440
informative we can start to make some

511
00:19:59,310 --> 00:20:04,139
decisions we can start to make some

512
00:20:01,440 --> 00:20:06,390
hypotheses and then test them and say if

513
00:20:04,140 --> 00:20:09,450
we increase the bounty for this do we

514
00:20:06,390 --> 00:20:12,420
start to get more valid reports coming

515
00:20:09,450 --> 00:20:14,130
in there's some other things that we

516
00:20:12,420 --> 00:20:16,590
continue to take advantage of that so I

517
00:20:14,130 --> 00:20:19,020
mentioned the size of crowds just how

518
00:20:16,590 --> 00:20:22,439
wise are these crowds really well in

519
00:20:19,020 --> 00:20:25,560
this case it was about 8% of the

520
00:20:22,440 --> 00:20:27,600
researchers were responsible for 50% of

521
00:20:25,560 --> 00:20:30,179
the vulnerabilities reported on this

522
00:20:27,600 --> 00:20:32,639
platform so if you have a thousand

523
00:20:30,180 --> 00:20:35,840
people pretty much 80 of them are

524
00:20:32,640 --> 00:20:39,240
responsible for half of the reports so

525
00:20:35,840 --> 00:20:40,679
one thing we could say it's been a month

526
00:20:39,240 --> 00:20:43,020
since we got something valid for

527
00:20:40,680 --> 00:20:45,780
application rather than try to double

528
00:20:43,020 --> 00:20:47,610
the size of the participants from 1,000

529
00:20:45,780 --> 00:20:50,190
to 2,000 within our bug bounty program

530
00:20:47,610 --> 00:20:53,969
what if we flint and found those 80

531
00:20:50,190 --> 00:20:55,980
people and said dear 80 people we're

532
00:20:53,970 --> 00:20:58,560
going to give you a fixed price for this

533
00:20:55,980 --> 00:21:01,440
week here's some money please go take a

534
00:20:58,560 --> 00:21:04,020
look at our application again or we're

535
00:21:01,440 --> 00:21:07,020
going to pay you double for our normal

536
00:21:04,020 --> 00:21:08,820
bounties for you 80 people because we've

537
00:21:07,020 --> 00:21:10,860
seen that you produce quality work for

538
00:21:08,820 --> 00:21:14,010
us so these are ways we can switch

539
00:21:10,860 --> 00:21:16,199
incentives to help us rather rather than

540
00:21:14,010 --> 00:21:19,020
perhaps driving in an undesirable

541
00:21:16,200 --> 00:21:21,450
behavior so it could be much more

542
00:21:19,020 --> 00:21:23,460
helpful to say who in our program who

543
00:21:21,450 --> 00:21:25,650
are these 80 people let's find them

544
00:21:23,460 --> 00:21:28,050
rather than just say we want bigger and

545
00:21:25,650 --> 00:21:31,830
bigger and bigger programs and doubling

546
00:21:28,050 --> 00:21:33,690
the size of those crowds for example now

547
00:21:31,830 --> 00:21:36,330
I've been comparing bug bounties and pen

548
00:21:33,690 --> 00:21:38,760
tests so it seems fair to say what did

549
00:21:36,330 --> 00:21:42,000
the data look like for pen testers in

550
00:21:38,760 --> 00:21:44,370
this case about 15 percent of the pen

551
00:21:42,000 --> 00:21:46,700
testers were responsible for 50 percent

552
00:21:44,370 --> 00:21:49,409
of the vulnerabilities and about

553
00:21:46,700 --> 00:21:52,170
two-thirds of them were responsible for

554
00:21:49,410 --> 00:21:56,490
95 percent of the vulnerabilities so

555
00:21:52,170 --> 00:21:58,230
this is close again pen testers are

556
00:21:56,490 --> 00:22:00,660
probably more focused they may have a

557
00:21:58,230 --> 00:22:03,000
higher average number of years of

558
00:22:00,660 --> 00:22:04,649
experience but there's also something

559
00:22:03,000 --> 00:22:08,140
that this doesn't capture

560
00:22:04,649 --> 00:22:09,820
pentesting typically is engaging someone

561
00:22:08,140 --> 00:22:12,070
to take a look at your application and

562
00:22:09,820 --> 00:22:13,658
follow through on a methodology so

563
00:22:12,070 --> 00:22:15,580
rather than play sort of that slot

564
00:22:13,659 --> 00:22:18,070
machine mentality of bug bounty programs

565
00:22:15,580 --> 00:22:20,110
and say can I find that easy sequel

566
00:22:18,070 --> 00:22:22,480
injection in or that really impactful

567
00:22:20,110 --> 00:22:24,879
crossing scripting or that low-hanging

568
00:22:22,480 --> 00:22:27,429
fruit that's easy to find what should

569
00:22:24,880 --> 00:22:29,440
happen is that a pen test will go

570
00:22:27,429 --> 00:22:31,690
through that methodology and give you

571
00:22:29,440 --> 00:22:33,880
that feedback that says yes you had

572
00:22:31,690 --> 00:22:35,769
these phones that were present but here

573
00:22:33,880 --> 00:22:38,740
is where so here are some areas where we

574
00:22:35,769 --> 00:22:40,480
saw some good application design where

575
00:22:38,740 --> 00:22:43,059
here are some positive feedback about

576
00:22:40,480 --> 00:22:45,370
what the application did well in terms

577
00:22:43,059 --> 00:22:48,879
of security controls so it's one of the

578
00:22:45,370 --> 00:22:52,090
things too is that numbers can capture

579
00:22:48,880 --> 00:22:54,130
certain aspects of information but I

580
00:22:52,090 --> 00:22:55,480
really wouldn't rate a researcher just

581
00:22:54,130 --> 00:22:58,330
on the number of reports that they

582
00:22:55,480 --> 00:23:00,850
generate because it's also important to

583
00:22:58,330 --> 00:23:02,110
not only find out what our flaws are but

584
00:23:00,850 --> 00:23:04,149
what we're doing well getting that

585
00:23:02,110 --> 00:23:05,709
positive feedback about the application

586
00:23:04,149 --> 00:23:07,449
so that's one of the other you know

587
00:23:05,710 --> 00:23:09,639
underlying themes here that I want to

588
00:23:07,450 --> 00:23:12,779
emphasize is that we're not we're trying

589
00:23:09,639 --> 00:23:16,918
to not abuse metrics too much or read

590
00:23:12,779 --> 00:23:20,440
something that isn't supported by them

591
00:23:16,919 --> 00:23:22,419
and we are still going to make some some

592
00:23:20,440 --> 00:23:25,120
some claims here that hopefully will be

593
00:23:22,419 --> 00:23:28,059
at least supported by opinion of course

594
00:23:25,120 --> 00:23:29,918
if not maybe some data as well

595
00:23:28,059 --> 00:23:32,168
and those big claims I'll say is that

596
00:23:29,919 --> 00:23:34,960
most phones and fax may just be noise

597
00:23:32,169 --> 00:23:39,909
and many voles perhaps aren't even worth

598
00:23:34,960 --> 00:23:41,980
fixing now I say this in the spirit that

599
00:23:39,909 --> 00:23:44,289
a bug is a bug and they should be

600
00:23:41,980 --> 00:23:46,899
addressed a lot of vulnerabilities just

601
00:23:44,289 --> 00:23:49,750
may fall into a category of code quality

602
00:23:46,899 --> 00:23:52,479
something like missing an HTTP only

603
00:23:49,750 --> 00:23:53,230
cookie versus something that's like a

604
00:23:52,480 --> 00:23:57,159
RCE

605
00:23:53,230 --> 00:23:59,529
in a Java framework like struts that's

606
00:23:57,159 --> 00:24:03,399
clearly a security bug so here the idea

607
00:23:59,529 --> 00:24:05,679
is what loans are we seeing is it just

608
00:24:03,399 --> 00:24:08,260
an observer effect is it because you

609
00:24:05,679 --> 00:24:10,510
know XML entity encoding just jumped on

610
00:24:08,260 --> 00:24:12,580
to the Olaf's top 10 this year so

611
00:24:10,510 --> 00:24:14,649
therefore everybody is looking for X X E

612
00:24:12,580 --> 00:24:16,678
and it's not like suddenly there's more

613
00:24:14,649 --> 00:24:19,289
of them there's just more people looking

614
00:24:16,679 --> 00:24:22,830
a particular vote or is there something

615
00:24:19,289 --> 00:24:24,809
like bones that are being reported being

616
00:24:22,830 --> 00:24:27,269
labeled as bones but they don't really

617
00:24:24,809 --> 00:24:29,879
impact a security or importantly a

618
00:24:27,269 --> 00:24:32,549
privacy context within the application

619
00:24:29,879 --> 00:24:33,928
so above is a bug it should be fixed but

620
00:24:32,549 --> 00:24:35,850
that's more of a code quality issue

621
00:24:33,929 --> 00:24:37,529
we'll talk a little bit about that and

622
00:24:35,850 --> 00:24:39,509
more but if I were to try to summarize

623
00:24:37,529 --> 00:24:43,019
that my take on this phrase would be

624
00:24:39,509 --> 00:24:46,350
will always have bugs eyes or shallow or

625
00:24:43,019 --> 00:24:48,059
eyes get tired or they get bored or they

626
00:24:46,350 --> 00:24:50,730
aren't aware of a particular bug class

627
00:24:48,059 --> 00:24:53,759
or there's a new bug class that came out

628
00:24:50,730 --> 00:24:55,369
for example that that example of XML

629
00:24:53,759 --> 00:24:58,590
entity encoding or clickjacking

630
00:24:55,369 --> 00:25:01,289
clickjacking was you know came onto the

631
00:24:58,590 --> 00:25:03,740
scene everybody was reporting it we had

632
00:25:01,289 --> 00:25:06,210
X frame options being demonstrated and

633
00:25:03,740 --> 00:25:09,029
extreme options was a great example of

634
00:25:06,210 --> 00:25:12,450
having a framework level if you will way

635
00:25:09,029 --> 00:25:14,309
of destroying an entire bug class but I

636
00:25:12,450 --> 00:25:17,490
think there are some valid arguments to

637
00:25:14,309 --> 00:25:20,158
be made of just how impactful could a

638
00:25:17,490 --> 00:25:22,529
real-life exploit be from clickjacking

639
00:25:20,159 --> 00:25:26,399
versus other types of vulnerabilities

640
00:25:22,529 --> 00:25:28,860
within web applications and part of this

641
00:25:26,399 --> 00:25:32,039
if I'm trying to beat a dead horse or

642
00:25:28,860 --> 00:25:33,719
reiterate my point is saying do we have

643
00:25:32,039 --> 00:25:35,789
a bug ops team or do we have a DevOps

644
00:25:33,720 --> 00:25:38,009
team and again here's where I like to

645
00:25:35,789 --> 00:25:39,720
call out that idea of a culture that is

646
00:25:38,009 --> 00:25:41,850
either just maintaining the status quo

647
00:25:39,720 --> 00:25:45,360
trying to fix bugs move on to the next

648
00:25:41,850 --> 00:25:48,029
bug or is this a culture of engineering

649
00:25:45,360 --> 00:25:50,039
that's embracing automation and using

650
00:25:48,029 --> 00:25:53,070
feedback loops using those feedback

651
00:25:50,039 --> 00:25:54,869
loops to say huh why is this the 15th

652
00:25:53,070 --> 00:25:57,269
time we've had this cross-site scripting

653
00:25:54,869 --> 00:25:59,279
thought is it because we're using get

654
00:25:57,269 --> 00:26:02,100
blame and we can see who's been

655
00:25:59,279 --> 00:26:03,809
committing this is it because the

656
00:26:02,100 --> 00:26:05,820
developers don't have the right tools or

657
00:26:03,809 --> 00:26:07,470
they haven't we don't have good feedback

658
00:26:05,820 --> 00:26:09,240
well if you don't have good linters even

659
00:26:07,470 --> 00:26:10,950
just to acknowledge right to identify I

660
00:26:09,240 --> 00:26:13,649
should say that these vulnerabilities

661
00:26:10,950 --> 00:26:17,159
are coming in so this is really where I

662
00:26:13,649 --> 00:26:19,529
like to emphasize that idea of DevOps

663
00:26:17,159 --> 00:26:21,899
and devstack ops this idea that we have

664
00:26:19,529 --> 00:26:25,019
monitoring and production to provide

665
00:26:21,899 --> 00:26:27,149
feedback loops for us and one of the

666
00:26:25,019 --> 00:26:29,139
things I would argue is that security is

667
00:26:27,149 --> 00:26:32,418
going to be an emergent process from

668
00:26:29,139 --> 00:26:34,610
meaning let's have a process let's have

669
00:26:32,419 --> 00:26:38,240
some automation and let's actually use

670
00:26:34,610 --> 00:26:43,610
that to reduce vulnerabilities and as an

671
00:26:38,240 --> 00:26:48,830
example of that I like to talk about

672
00:26:43,610 --> 00:26:50,570
HTTP so since easily the late 90s

673
00:26:48,830 --> 00:26:52,279
there's a dooming bloom crowd who's

674
00:26:50,570 --> 00:26:55,970
saying the sky is falling we should be

675
00:26:52,279 --> 00:26:57,889
using HTTP developers go use HTTP HTTPS

676
00:26:55,970 --> 00:26:59,899
Everywhere come on please use HTTPS

677
00:26:57,889 --> 00:27:04,008
we're going to start blaming and shaming

678
00:26:59,899 --> 00:27:06,979
you for not using HTTPS nice but not

679
00:27:04,009 --> 00:27:09,999
really helpful what let's encrypt did at

680
00:27:06,980 --> 00:27:13,129
least in my mind was turn that sort of

681
00:27:09,999 --> 00:27:15,710
coercive approach and just like yelling

682
00:27:13,129 --> 00:27:17,480
at people to go go deploy ancient PS

683
00:27:15,710 --> 00:27:20,809
it's you a more collaborative approach

684
00:27:17,480 --> 00:27:22,940
they identified what does a DevOps team

685
00:27:20,809 --> 00:27:26,029
need in order to actually effectively

686
00:27:22,940 --> 00:27:28,429
deploy HTTPS and there's two key two

687
00:27:26,029 --> 00:27:31,220
aspects to this I think one is the

688
00:27:28,429 --> 00:27:33,529
initial cost so the cost is now zero

689
00:27:31,220 --> 00:27:36,080
certs are free awesome

690
00:27:33,529 --> 00:27:38,990
so we addressed the issue of budget but

691
00:27:36,080 --> 00:27:42,340
that's a one-time problem the other

692
00:27:38,990 --> 00:27:45,499
problem is ongoing maintenance meaning

693
00:27:42,340 --> 00:27:47,869
the how do you deploy how do you

694
00:27:45,499 --> 00:27:51,350
maintain how do you rotate certificates

695
00:27:47,869 --> 00:27:52,789
when they expire or in unfortunate

696
00:27:51,350 --> 00:27:56,600
scenarios what if they're compromised

697
00:27:52,789 --> 00:27:58,970
and not being able to that that idea of

698
00:27:56,600 --> 00:28:01,789
key rotation or certificate rotation is

699
00:27:58,970 --> 00:28:05,059
critical to an effective production

700
00:28:01,789 --> 00:28:07,249
scale deployment of HTTPS if you can't

701
00:28:05,059 --> 00:28:09,950
rotate your keys you effectively you

702
00:28:07,249 --> 00:28:10,940
know don't have good HTTPS especially if

703
00:28:09,950 --> 00:28:12,499
you don't know when they're going to

704
00:28:10,940 --> 00:28:13,999
expire and you can't update them so

705
00:28:12,499 --> 00:28:17,869
that's why I like to highlight what

706
00:28:13,999 --> 00:28:20,509
let's encrypt did is to say cost is free

707
00:28:17,869 --> 00:28:23,600
and here's your acne protocol so all the

708
00:28:20,509 --> 00:28:26,899
DevOps teams now can basically deploy

709
00:28:23,600 --> 00:28:29,779
HTTPS certs not only in production but

710
00:28:26,899 --> 00:28:31,668
now these certs are also so easy to

711
00:28:29,779 --> 00:28:33,799
obtain they can be in your staging

712
00:28:31,669 --> 00:28:36,289
environment and your dev environment so

713
00:28:33,799 --> 00:28:38,809
also no longer do we have those kludgy

714
00:28:36,289 --> 00:28:40,309
code where developers are disabling

715
00:28:38,809 --> 00:28:41,580
those certificate checks about

716
00:28:40,309 --> 00:28:44,220
self-signed cert

717
00:28:41,580 --> 00:28:46,409
or invalid certs you've got valid certs

718
00:28:44,220 --> 00:28:48,960
everywhere and a lot more encryption and

719
00:28:46,410 --> 00:28:50,790
this is a great thing and I think what I

720
00:28:48,960 --> 00:28:53,400
like to call out about that is it's an

721
00:28:50,790 --> 00:28:55,620
also way of doing applied threat

722
00:28:53,400 --> 00:28:57,210
modeling now threat modeling in general

723
00:28:55,620 --> 00:28:58,790
I think is a great exercise it's a great

724
00:28:57,210 --> 00:29:01,530
way just to build security awareness

725
00:28:58,790 --> 00:29:04,379
it's something that you can do with your

726
00:29:01,530 --> 00:29:06,270
dev ops team and secure you can guide

727
00:29:04,380 --> 00:29:10,110
that process but it's a great way for

728
00:29:06,270 --> 00:29:12,000
security to identify or find out what

729
00:29:10,110 --> 00:29:13,379
our developers have struggling with

730
00:29:12,000 --> 00:29:14,880
maybe you know what are their areas of

731
00:29:13,380 --> 00:29:16,980
ignorance what do they not know about

732
00:29:14,880 --> 00:29:18,840
and it's a way to say what are you

733
00:29:16,980 --> 00:29:21,210
trying to do let's try to do that

734
00:29:18,840 --> 00:29:23,699
securely rather than just saying no and

735
00:29:21,210 --> 00:29:26,190
it's something that can influence design

736
00:29:23,700 --> 00:29:28,290
and it can inform implementation and

737
00:29:26,190 --> 00:29:30,900
threat modeling is another important

738
00:29:28,290 --> 00:29:32,970
aspect for example - bug bounties when

739
00:29:30,900 --> 00:29:36,180
you're trying to go back to say here's a

740
00:29:32,970 --> 00:29:38,250
$50 vulnerability here's a $15,000

741
00:29:36,180 --> 00:29:40,020
vulnerability it's based on realistic

742
00:29:38,250 --> 00:29:43,200
threats it's not based on a threat that

743
00:29:40,020 --> 00:29:46,710
says well if it's a Friday afternoon and

744
00:29:43,200 --> 00:29:48,960
the planets have aligned and you know

745
00:29:46,710 --> 00:29:50,910
somebody clicks on this then they do a

746
00:29:48,960 --> 00:29:52,650
sequence of for other things then

747
00:29:50,910 --> 00:29:54,270
they're going to be exploited that's

748
00:29:52,650 --> 00:29:56,490
something that's a likelihood that's

749
00:29:54,270 --> 00:29:57,780
probably pretty low and is not a threat

750
00:29:56,490 --> 00:30:01,500
you should necessarily be concerned

751
00:29:57,780 --> 00:30:04,320
about and what this is leading into is

752
00:30:01,500 --> 00:30:07,080
this idea of risk reduction so we're not

753
00:30:04,320 --> 00:30:08,909
trying to attain perfect security so to

754
00:30:07,080 --> 00:30:11,820
bring us back to the idea of metrics and

755
00:30:08,910 --> 00:30:14,160
numbers a lot of ways we want to manage

756
00:30:11,820 --> 00:30:16,790
numbers we want to increase something or

757
00:30:14,160 --> 00:30:19,200
decrease something now I'd probably

758
00:30:16,790 --> 00:30:21,480
strongly argue that we're not trying to

759
00:30:19,200 --> 00:30:23,970
attain a hundred percent security we're

760
00:30:21,480 --> 00:30:26,520
trying to lower our risk and we're not

761
00:30:23,970 --> 00:30:27,900
going to get to zero zero risk but we're

762
00:30:26,520 --> 00:30:29,700
going to reduce it to soar that

763
00:30:27,900 --> 00:30:31,800
background radiation of the internet

764
00:30:29,700 --> 00:30:34,890
where you have people just running in

765
00:30:31,800 --> 00:30:38,820
map running zmapp or any Metasploit know

766
00:30:34,890 --> 00:30:40,590
an apt or a non apt but does all that

767
00:30:38,820 --> 00:30:42,540
that noise that happens in the internet

768
00:30:40,590 --> 00:30:44,909
that's where you're trying to reduce the

769
00:30:42,540 --> 00:30:48,720
the risk - and a lot of this comes from

770
00:30:44,910 --> 00:30:50,370
fixing vulnerabilities so a lot of the

771
00:30:48,720 --> 00:30:52,260
graphs I was showing earlier was about

772
00:30:50,370 --> 00:30:53,199
discovering vulnerabilities using bug

773
00:30:52,260 --> 00:30:56,320
bounties using

774
00:30:53,200 --> 00:30:59,470
testing for example well I have now are

775
00:30:56,320 --> 00:31:01,539
some insight well some observations I'll

776
00:30:59,470 --> 00:31:03,549
say about what did it look like from

777
00:31:01,539 --> 00:31:06,519
what we saw about vulnerabilities being

778
00:31:03,549 --> 00:31:09,370
fixed here vulnerabilities that I pulled

779
00:31:06,519 --> 00:31:11,200
out and classified by broad categories

780
00:31:09,370 --> 00:31:15,039
so these roughly map to data loss top

781
00:31:11,200 --> 00:31:17,200
ten and I think they tell a story that

782
00:31:15,039 --> 00:31:18,970
it seems reasonable if we looked at the

783
00:31:17,200 --> 00:31:21,970
top you know sequel injection is up

784
00:31:18,970 --> 00:31:23,649
there so that far side that left-hand

785
00:31:21,970 --> 00:31:26,350
side that means they were fixed much

786
00:31:23,649 --> 00:31:29,260
more quickly than average and down here

787
00:31:26,350 --> 00:31:31,480
we see redirects and forwards took quite

788
00:31:29,260 --> 00:31:33,940
an outlier it took much longer than

789
00:31:31,480 --> 00:31:35,620
average to fix and in a way that kind of

790
00:31:33,940 --> 00:31:37,630
resonates you know redirects and

791
00:31:35,620 --> 00:31:41,260
forwards actually fell off the Ola so

792
00:31:37,630 --> 00:31:43,029
top ten this year so our data kind of

793
00:31:41,260 --> 00:31:46,090
seems to support that that makes sense

794
00:31:43,029 --> 00:31:48,309
and what it tells us here is what not

795
00:31:46,090 --> 00:31:51,158
the security team necessarily is

796
00:31:48,309 --> 00:31:52,928
prioritizing here's what developers are

797
00:31:51,159 --> 00:31:55,029
prioritizing here's what they're fixing

798
00:31:52,929 --> 00:31:56,470
and fixing quickly and here's what

799
00:31:55,029 --> 00:31:59,200
they're not fixing so quickly or not

800
00:31:56,470 --> 00:32:01,570
carrying about now another way to look

801
00:31:59,200 --> 00:32:03,519
at this data as I say rather than bone

802
00:32:01,570 --> 00:32:05,769
category what was the risk of that

803
00:32:03,519 --> 00:32:07,600
vulnerability and again we would have

804
00:32:05,769 --> 00:32:09,789
expected at least we would have hoped

805
00:32:07,600 --> 00:32:12,100
going back to our two-factor app sack

806
00:32:09,789 --> 00:32:15,100
we'd hope that the critical volunteer

807
00:32:12,100 --> 00:32:16,779
quickly and the negligible or the least

808
00:32:15,100 --> 00:32:19,899
critical bones yes those can take a

809
00:32:16,779 --> 00:32:21,940
little bit longer here we see something

810
00:32:19,899 --> 00:32:24,370
a bit more messy now I haven't had time

811
00:32:21,940 --> 00:32:27,549
to get to dive into this data to come up

812
00:32:24,370 --> 00:32:29,559
with would be a strong answer but I'm

813
00:32:27,549 --> 00:32:31,929
going to use it as an exercise to say

814
00:32:29,559 --> 00:32:34,000
how do we interrogate data or how can we

815
00:32:31,929 --> 00:32:36,370
kind of dummy check if you will or just

816
00:32:34,000 --> 00:32:37,870
build some hypotheses or some stories

817
00:32:36,370 --> 00:32:41,229
about that data that will go and then

818
00:32:37,870 --> 00:32:43,239
follow up on later so this you know

819
00:32:41,230 --> 00:32:44,440
below medium there's an outlier there

820
00:32:43,240 --> 00:32:47,169
that those are getting fixed a lot

821
00:32:44,440 --> 00:32:51,610
quickly there could be a couple reasons

822
00:32:47,169 --> 00:32:53,740
for this one perhaps were mismanaging to

823
00:32:51,610 --> 00:32:55,809
metric one of the traps of having

824
00:32:53,740 --> 00:32:57,250
metrics is that we want this number to

825
00:32:55,809 --> 00:32:59,590
go down or we want this number to go up

826
00:32:57,250 --> 00:33:01,960
what if we want the number of you know

827
00:32:59,590 --> 00:33:04,939
bones to go down or we want our our SLA

828
00:33:01,960 --> 00:33:07,849
for fixing bones to go down very quickly

829
00:33:04,940 --> 00:33:10,099
maybe these Vols are at this outlier

830
00:33:07,849 --> 00:33:11,779
that this green line maybe those were

831
00:33:10,099 --> 00:33:13,700
just the easiest phones to fix and

832
00:33:11,779 --> 00:33:15,590
developers were motivated by lowering

833
00:33:13,700 --> 00:33:18,349
the metric I just wanted to fix the

834
00:33:15,590 --> 00:33:21,738
easiest phones that's great but that

835
00:33:18,349 --> 00:33:23,960
metric drove some unfort some perverse

836
00:33:21,739 --> 00:33:26,539
it was a perverse incentive it drove

837
00:33:23,960 --> 00:33:28,849
some undesirable behavior because sure

838
00:33:26,539 --> 00:33:31,009
they were fixing vulnerabilities faster

839
00:33:28,849 --> 00:33:33,349
and they closed a lot of those bugs more

840
00:33:31,009 --> 00:33:35,389
quickly but you could ask did he

841
00:33:33,349 --> 00:33:37,428
actually really reduce risk and that's

842
00:33:35,389 --> 00:33:39,320
what we care about so maybe that's one

843
00:33:37,429 --> 00:33:41,539
story about that or that's one at least

844
00:33:39,320 --> 00:33:44,119
trap to be aware of if you're managing

845
00:33:41,539 --> 00:33:45,769
to a very specific metric we're not

846
00:33:44,119 --> 00:33:48,228
stepping back to look at the bigger

847
00:33:45,769 --> 00:33:50,059
picture but there could be other reasons

848
00:33:48,229 --> 00:33:52,789
there could be more optimistic reasons

849
00:33:50,059 --> 00:33:54,379
about that one could be maybe these are

850
00:33:52,789 --> 00:33:58,099
vulnerabilities that were just destroyed

851
00:33:54,379 --> 00:34:00,168
by a framework change maybe the dev team

852
00:33:58,099 --> 00:34:02,389
said we're going to invest and switch

853
00:34:00,169 --> 00:34:04,519
our front-end and do a big investment

854
00:34:02,389 --> 00:34:07,969
but a big shift into something like

855
00:34:04,519 --> 00:34:09,379
react j/s it's much much harder to

856
00:34:07,970 --> 00:34:11,029
introduce cross-site scripting

857
00:34:09,379 --> 00:34:13,699
vulnerabilities into react

858
00:34:11,029 --> 00:34:15,980
so maybe doubt just got rid of a whole

859
00:34:13,699 --> 00:34:18,439
swath of vulnerabilities there or they

860
00:34:15,980 --> 00:34:20,899
deployed CSRF tokens on their

861
00:34:18,440 --> 00:34:24,109
development framework and buy one you

862
00:34:20,899 --> 00:34:25,520
know framework change CSRF went away or

863
00:34:24,109 --> 00:34:27,859
maybe you know for example that's the

864
00:34:25,520 --> 00:34:29,389
clickjacking with extreme options so

865
00:34:27,859 --> 00:34:31,339
there could be some stories around this

866
00:34:29,389 --> 00:34:33,770
but it's something to look at and be

867
00:34:31,339 --> 00:34:35,750
aware of about what's the data we're

868
00:34:33,770 --> 00:34:37,940
collecting and is it reflecting what we

869
00:34:35,750 --> 00:34:39,980
might expect and if it's surprising us

870
00:34:37,940 --> 00:34:41,659
let's dive into a little bit deeper to

871
00:34:39,980 --> 00:34:46,879
figure out what that surprise might be

872
00:34:41,659 --> 00:34:50,690
and as I mentioned there's a big picture

873
00:34:46,879 --> 00:34:52,730
to be aware of so ultimately we do want

874
00:34:50,690 --> 00:34:54,319
to fix phones we don't just care about

875
00:34:52,730 --> 00:34:56,089
knowing what our flaws are it's of

876
00:34:54,319 --> 00:34:57,980
course nice because we want to fix them

877
00:34:56,089 --> 00:35:01,160
but fixing them is where we're actually

878
00:34:57,980 --> 00:35:03,380
reducing risk in despite those

879
00:35:01,160 --> 00:35:05,240
categories and the average days of fewer

880
00:35:03,380 --> 00:35:07,930
or greater vulnerability is being fixed

881
00:35:05,240 --> 00:35:11,930
whether by category or whether by risk

882
00:35:07,930 --> 00:35:14,359
we were barely getting above 50% fix so

883
00:35:11,930 --> 00:35:16,120
overall the big picture that's not great

884
00:35:14,359 --> 00:35:18,470
now we should still

885
00:35:16,120 --> 00:35:20,660
support it they'll be constructive and

886
00:35:18,470 --> 00:35:22,549
say this is still good because the

887
00:35:20,660 --> 00:35:24,770
critical bones at least are the ones

888
00:35:22,550 --> 00:35:27,410
that are above that 50% line and the

889
00:35:24,770 --> 00:35:28,850
less critical arm but again what if we

890
00:35:27,410 --> 00:35:30,740
were actually to step back and have a

891
00:35:28,850 --> 00:35:34,009
conversation about this what is this

892
00:35:30,740 --> 00:35:36,049
employee maybe it actually means that a

893
00:35:34,010 --> 00:35:38,210
lot of these vulnerabilities don't

894
00:35:36,050 --> 00:35:40,280
really matter or maybe they just fall

895
00:35:38,210 --> 00:35:43,100
into that category of code quality

896
00:35:40,280 --> 00:35:45,560
versus actually having a security impact

897
00:35:43,100 --> 00:35:47,450
so maybe we're actually giving our where

898
00:35:45,560 --> 00:35:49,940
we're taking in too much noise from a

899
00:35:47,450 --> 00:35:52,399
bug bounty program or passing on too

900
00:35:49,940 --> 00:35:54,680
many vulnerabilities from our automated

901
00:35:52,400 --> 00:35:56,660
scanners are from our pen tests maybe we

902
00:35:54,680 --> 00:35:59,180
should just focus on one or two

903
00:35:56,660 --> 00:36:02,240
categories get rid of you know lower

904
00:35:59,180 --> 00:36:04,910
this baseline so that we see the risk

905
00:36:02,240 --> 00:36:07,129
that's getting fits fix is the risk that

906
00:36:04,910 --> 00:36:09,529
we actually care about so maybe we're

907
00:36:07,130 --> 00:36:12,020
actually measuring something and the 50%

908
00:36:09,530 --> 00:36:13,670
line is actually much better than we

909
00:36:12,020 --> 00:36:15,020
care about because we can get rid of a

910
00:36:13,670 --> 00:36:18,920
lot of the noise so we'll take a

911
00:36:15,020 --> 00:36:21,350
risk-based approach to that and another

912
00:36:18,920 --> 00:36:23,840
way of looking at this data is because I

913
00:36:21,350 --> 00:36:27,020
like using metaphors I like to talk

914
00:36:23,840 --> 00:36:29,360
about a endemic risk or I take this

915
00:36:27,020 --> 00:36:32,360
metaphor of the the American Centers for

916
00:36:29,360 --> 00:36:34,070
Disease Control the CDC they're the the

917
00:36:32,360 --> 00:36:36,740
organization that tracks things like

918
00:36:34,070 --> 00:36:39,020
plague outbreaks and important things

919
00:36:36,740 --> 00:36:40,640
like zombie operates you can go to their

920
00:36:39,020 --> 00:36:43,460
website and you can look for you know

921
00:36:40,640 --> 00:36:45,290
how to prepare for a zombie outbreak and

922
00:36:43,460 --> 00:36:48,770
you will find a report on such a thing

923
00:36:45,290 --> 00:36:51,770
so I hear you've been warned and now you

924
00:36:48,770 --> 00:36:53,240
can be prepared but the idea here is

925
00:36:51,770 --> 00:36:55,190
that we have outbreaks of

926
00:36:53,240 --> 00:36:56,540
vulnerabilities you can also look at

927
00:36:55,190 --> 00:36:58,550
this as sort of your blood splatter

928
00:36:56,540 --> 00:37:00,650
chart if this is the first time you've

929
00:36:58,550 --> 00:37:02,150
ever dumped your application into a bug

930
00:37:00,650 --> 00:37:04,760
bounty program that's never been tested

931
00:37:02,150 --> 00:37:07,550
before you get a wave of vulnerabilities

932
00:37:04,760 --> 00:37:09,440
that come in but the idea here is that a

933
00:37:07,550 --> 00:37:12,800
lot of what I've shown it's been kind of

934
00:37:09,440 --> 00:37:14,810
snapshots in time what's often more

935
00:37:12,800 --> 00:37:16,640
important is a trend so as I was

936
00:37:14,810 --> 00:37:19,400
mentioning we want numbers to go up for

937
00:37:16,640 --> 00:37:21,710
numbers to go down in this case we

938
00:37:19,400 --> 00:37:23,990
probably we want to see applications

939
00:37:21,710 --> 00:37:26,420
move from that pandemic quadrant where

940
00:37:23,990 --> 00:37:27,459
we have a huge outbreak of high risk

941
00:37:26,420 --> 00:37:30,190
bulbs

942
00:37:27,460 --> 00:37:32,590
and tons of them you know make matters

943
00:37:30,190 --> 00:37:34,030
even worse we'd love to get them back in

944
00:37:32,590 --> 00:37:36,570
that lower left-hand corner where

945
00:37:34,030 --> 00:37:38,440
they're just sporadic where we have the

946
00:37:36,570 --> 00:37:42,010
acceptance where we acknowledge that

947
00:37:38,440 --> 00:37:44,590
there will always be bones but if we can

948
00:37:42,010 --> 00:37:46,570
fix them quickly and if the impact of

949
00:37:44,590 --> 00:37:48,760
those goals has been reduced because we

950
00:37:46,570 --> 00:37:50,470
have compensating controls because we

951
00:37:48,760 --> 00:37:53,110
can deploy a laugh

952
00:37:50,470 --> 00:37:55,870
rule change quickly because our CV CICE

953
00:37:53,110 --> 00:37:58,090
pipeline has a lot of tests in it that

954
00:37:55,870 --> 00:38:00,759
allows us to deploy quickly with

955
00:37:58,090 --> 00:38:03,130
confidence meaning that this code change

956
00:38:00,760 --> 00:38:05,320
we don't have to cross our fingers we

957
00:38:03,130 --> 00:38:07,480
can just look at our test acceptance

958
00:38:05,320 --> 00:38:09,340
dashboard and say we're pretty sure that

959
00:38:07,480 --> 00:38:11,200
these lines of code aren't going to

960
00:38:09,340 --> 00:38:12,700
break our production system that's

961
00:38:11,200 --> 00:38:15,299
another case where I like to emphasize

962
00:38:12,700 --> 00:38:18,879
that mentality of DevOps where you have

963
00:38:15,300 --> 00:38:20,800
automation feedback loops and a CI CV

964
00:38:18,880 --> 00:38:23,050
process with a whole lot of touch points

965
00:38:20,800 --> 00:38:25,300
so again this is just another way of

966
00:38:23,050 --> 00:38:27,700
just looking very very simple numbers

967
00:38:25,300 --> 00:38:30,850
nonetheless in this case I'm using risk

968
00:38:27,700 --> 00:38:33,040
as just impact times likelihood scale of

969
00:38:30,850 --> 00:38:36,490
one to five you can also perhaps track

970
00:38:33,040 --> 00:38:37,930
this as cbss v3 collect this from all of

971
00:38:36,490 --> 00:38:40,060
your different scanners all of your

972
00:38:37,930 --> 00:38:42,279
different reporting tools and say number

973
00:38:40,060 --> 00:38:44,860
of findings or you gives us change what

974
00:38:42,280 --> 00:38:49,180
these axes are but still have the idea

975
00:38:44,860 --> 00:38:51,010
that in what are we in February of 2018

976
00:38:49,180 --> 00:38:53,109
our app was up here in the pandemic

977
00:38:51,010 --> 00:38:54,970
quadrant but we did something that at

978
00:38:53,110 --> 00:38:57,280
least said we're still getting a lot of

979
00:38:54,970 --> 00:38:59,020
findings or so a lot of bugs here but we

980
00:38:57,280 --> 00:39:00,490
least reduce the average risk for it

981
00:38:59,020 --> 00:39:03,100
eventually getting it down in that

982
00:39:00,490 --> 00:39:04,600
sporadic and you can also perhaps

983
00:39:03,100 --> 00:39:07,630
measure this with your bug bounty

984
00:39:04,600 --> 00:39:10,299
program maybe you could say how mature

985
00:39:07,630 --> 00:39:12,130
is our devops program or how matured or

986
00:39:10,300 --> 00:39:14,320
how quickly do we think we can fix

987
00:39:12,130 --> 00:39:16,930
phones or how we killed entire classes

988
00:39:14,320 --> 00:39:17,980
of olds maybe we're paying you know if

989
00:39:16,930 --> 00:39:19,870
we're just going to get a whole lot of

990
00:39:17,980 --> 00:39:21,970
all in 2,000 phones or that hundred

991
00:39:19,870 --> 00:39:23,710
thousand Vollmer parts we don't want to

992
00:39:21,970 --> 00:39:25,209
pay much more than $1 for that loan

993
00:39:23,710 --> 00:39:28,240
because this is going to bust our budget

994
00:39:25,210 --> 00:39:30,520
but maybe we have a good program in

995
00:39:28,240 --> 00:39:32,830
place we're still you know pretty low on

996
00:39:30,520 --> 00:39:34,900
the maturity model but we can pay that

997
00:39:32,830 --> 00:39:36,640
average thousand dollar for bug bounties

998
00:39:34,900 --> 00:39:38,590
so you're just kind of enumerate in

999
00:39:36,640 --> 00:39:40,310
figure out what the flaws are and then

1000
00:39:38,590 --> 00:39:42,230
eventually you're increasing or

1001
00:39:40,310 --> 00:39:44,779
magnitudes on payouts because you're

1002
00:39:42,230 --> 00:39:47,000
starting to exterminate whole classes of

1003
00:39:44,780 --> 00:39:48,710
bullets and I use it while I like

1004
00:39:47,000 --> 00:39:50,420
alliteration I also wanted to use

1005
00:39:48,710 --> 00:39:52,220
exterminate so I can make another Daleks

1006
00:39:50,420 --> 00:39:54,890
reference so that's the other reason for

1007
00:39:52,220 --> 00:39:58,459
that and then if you're increasing on

1008
00:39:54,890 --> 00:40:00,200
and on you get to the point where you've

1009
00:39:58,460 --> 00:40:02,600
increased the magnitude of your bounty

1010
00:40:00,200 --> 00:40:05,299
payouts until you're making certain

1011
00:40:02,600 --> 00:40:07,430
types of bones just extinct they just

1012
00:40:05,300 --> 00:40:10,670
shouldn't happen unless there was some

1013
00:40:07,430 --> 00:40:12,980
egregious failure both within these

1014
00:40:10,670 --> 00:40:16,090
developer awareness the developer

1015
00:40:12,980 --> 00:40:18,200
process for code reviews the automated

1016
00:40:16,090 --> 00:40:20,720
linters that you have the automated

1017
00:40:18,200 --> 00:40:23,450
tests that you have and the design that

1018
00:40:20,720 --> 00:40:25,459
you've created for your applications

1019
00:40:23,450 --> 00:40:29,680
that's where you can see very mature

1020
00:40:25,460 --> 00:40:32,840
companies are able to say $100,000

1021
00:40:29,680 --> 00:40:34,759
$250,000 for a fundamental flaw within

1022
00:40:32,840 --> 00:40:38,420
our operating system within our chip

1023
00:40:34,760 --> 00:40:42,050
design things like this so if I were try

1024
00:40:38,420 --> 00:40:44,900
to start to summarize this your security

1025
00:40:42,050 --> 00:40:47,030
from crowds can still come you may have

1026
00:40:44,900 --> 00:40:49,400
a cast of thousands in your epic bug

1027
00:40:47,030 --> 00:40:52,910
bounty program but it may only be those

1028
00:40:49,400 --> 00:40:55,370
80 people or so or that 8% or 12% or so

1029
00:40:52,910 --> 00:40:58,040
that are giving you all of those really

1030
00:40:55,370 --> 00:41:00,080
reasonable really good reports based on

1031
00:40:58,040 --> 00:41:02,330
reasonable threat models if you're

1032
00:41:00,080 --> 00:41:04,130
getting them in put those low reports

1033
00:41:02,330 --> 00:41:06,020
into your issue tracking system where

1034
00:41:04,130 --> 00:41:08,450
the developers live work with the

1035
00:41:06,020 --> 00:41:09,860
developers tool sets don't force them

1036
00:41:08,450 --> 00:41:11,480
into different tell affinity of

1037
00:41:09,860 --> 00:41:14,000
different tool sets different tools

1038
00:41:11,480 --> 00:41:15,760
bring those CIN when you talk about

1039
00:41:14,000 --> 00:41:18,770
automating with pre-production steps

1040
00:41:15,760 --> 00:41:21,680
bring that into that CI CD pipeline it

1041
00:41:18,770 --> 00:41:23,690
is fantastic introduce new tools but

1042
00:41:21,680 --> 00:41:26,000
make sure they work within the ecosystem

1043
00:41:23,690 --> 00:41:28,450
of what DevOps uses rather than try to

1044
00:41:26,000 --> 00:41:32,450
convince DevOps to create a whole new

1045
00:41:28,450 --> 00:41:34,520
ecosystem and one of the things to shift

1046
00:41:32,450 --> 00:41:36,319
left the very common phrase I like the

1047
00:41:34,520 --> 00:41:39,020
idea of being shiftless because

1048
00:41:36,320 --> 00:41:42,200
automation is you know let's us be lazy

1049
00:41:39,020 --> 00:41:43,580
but one of the emphasis one of the

1050
00:41:42,200 --> 00:41:46,700
things I want to emphasize from this

1051
00:41:43,580 --> 00:41:49,130
presentation is that I'm not trying to

1052
00:41:46,700 --> 00:41:51,350
say find those phones earlier you know

1053
00:41:49,130 --> 00:41:52,740
do bug bounties or do pen testing

1054
00:41:51,350 --> 00:41:56,130
earlier on that

1055
00:41:52,740 --> 00:41:58,169
SDLC it means shift the security

1056
00:41:56,130 --> 00:42:01,170
knowledge shift what you're doing with

1057
00:41:58,170 --> 00:42:04,230
security earlier within that SDLC do you

1058
00:42:01,170 --> 00:42:06,720
even have security controls we make you

1059
00:42:04,230 --> 00:42:09,750
know we we make fun of people for having

1060
00:42:06,720 --> 00:42:11,790
bad passwords but we also as developers

1061
00:42:09,750 --> 00:42:13,680
and devops teams we have passwords for

1062
00:42:11,790 --> 00:42:15,930
our service accounts how do we handle

1063
00:42:13,680 --> 00:42:18,450
keys how do we do our secrets management

1064
00:42:15,930 --> 00:42:19,950
when we're deploying to stage and

1065
00:42:18,450 --> 00:42:22,290
environments when we're deploying to

1066
00:42:19,950 --> 00:42:23,730
production within cloud environments

1067
00:42:22,290 --> 00:42:26,820
these are important things to understand

1068
00:42:23,730 --> 00:42:29,310
and we can do security from the very

1069
00:42:26,820 --> 00:42:31,170
basics again there's nothing

1070
00:42:29,310 --> 00:42:33,810
earth-shattering but about me saying

1071
00:42:31,170 --> 00:42:36,750
know where your apps are scanners can be

1072
00:42:33,810 --> 00:42:38,850
very helpful for this enumerate those

1073
00:42:36,750 --> 00:42:41,130
dependency graphs we saw today in

1074
00:42:38,850 --> 00:42:43,799
yesterday some great examples of what

1075
00:42:41,130 --> 00:42:46,290
happens in that app dependency it's one

1076
00:42:43,800 --> 00:42:47,700
thing to say fantastic you've done some

1077
00:42:46,290 --> 00:42:50,100
great code reviews you have a nice

1078
00:42:47,700 --> 00:42:51,960
process designed around the code that

1079
00:42:50,100 --> 00:42:54,240
you're actually writing what about all

1080
00:42:51,960 --> 00:42:56,490
that code that you're importing so let's

1081
00:42:54,240 --> 00:42:59,490
not forget that and of course let's

1082
00:42:56,490 --> 00:43:02,339
figure out you know let's not fall into

1083
00:42:59,490 --> 00:43:04,200
the the Druids principle where no one

1084
00:43:02,340 --> 00:43:07,470
knows who they were what they were doing

1085
00:43:04,200 --> 00:43:09,540
who actually owns and is in charge of

1086
00:43:07,470 --> 00:43:11,609
the apps you have and one of the ways I

1087
00:43:09,540 --> 00:43:13,500
like to summarize this and you know it's

1088
00:43:11,609 --> 00:43:16,170
one of my goals is to try to get get a

1089
00:43:13,500 --> 00:43:19,260
get get myself quoted somehow is that

1090
00:43:16,170 --> 00:43:22,320
app sack is the continuation of DevOps

1091
00:43:19,260 --> 00:43:25,230
by their own means so this is sort of my

1092
00:43:22,320 --> 00:43:28,530
on cyberwar am i on politics of

1093
00:43:25,230 --> 00:43:30,720
cybersecurity meaning give the DevOps

1094
00:43:28,530 --> 00:43:33,450
team the tools and information that they

1095
00:43:30,720 --> 00:43:37,140
need in order to build security controls

1096
00:43:33,450 --> 00:43:39,600
process into betsy ICD pipeline and act

1097
00:43:37,140 --> 00:43:41,759
as that consultant act as a participant

1098
00:43:39,600 --> 00:43:44,060
and act with empathy and understanding

1099
00:43:41,760 --> 00:43:46,980
what are the real challenges they have

1100
00:43:44,060 --> 00:43:48,930
rather than what are the things that you

1101
00:43:46,980 --> 00:43:51,420
really worry about because you went to a

1102
00:43:48,930 --> 00:43:53,609
security conference recently and may not

1103
00:43:51,420 --> 00:43:55,859
be the case that meltdown inspector

1104
00:43:53,609 --> 00:43:57,210
should be your highest priority when

1105
00:43:55,859 --> 00:43:59,100
you're dealing with trying to eradicate

1106
00:43:57,210 --> 00:44:01,619
cross-site scripting vulnerabilities

1107
00:43:59,100 --> 00:44:02,630
from your web application that's not on

1108
00:44:01,619 --> 00:44:05,480
a shared can

1109
00:44:02,630 --> 00:44:10,130
environment so again just that idea of a

1110
00:44:05,480 --> 00:44:12,440
risk-based approach so going back to our

1111
00:44:10,130 --> 00:44:14,180
three gunslingers you know the the

1112
00:44:12,440 --> 00:44:17,210
American West itself is rife with

1113
00:44:14,180 --> 00:44:20,569
mythology and Sergio Leone's films are

1114
00:44:17,210 --> 00:44:22,549
definitely even more so so mythology in

1115
00:44:20,569 --> 00:44:24,440
itself is not necessarily a bad thing it

1116
00:44:22,549 --> 00:44:26,690
gives us grand stories it gives us

1117
00:44:24,440 --> 00:44:31,279
insight on things like the human

1118
00:44:26,690 --> 00:44:33,829
condition and others in other scenarios

1119
00:44:31,279 --> 00:44:36,619
it just merely entertains or gives us a

1120
00:44:33,829 --> 00:44:39,710
time capsule on well intentioned but

1121
00:44:36,619 --> 00:44:43,279
perhaps ill informed thought but with

1122
00:44:39,710 --> 00:44:45,019
metrics we can revisit OPSEC mythologies

1123
00:44:43,279 --> 00:44:47,450
and our understanding and our

1124
00:44:45,019 --> 00:44:49,848
appreciation of them so whether you're

1125
00:44:47,450 --> 00:44:51,740
aiming for a fistful of bowls from a pen

1126
00:44:49,849 --> 00:44:53,750
test or you're just looking to bug

1127
00:44:51,740 --> 00:44:56,058
bounties for a few dollars more use

1128
00:44:53,750 --> 00:44:58,609
metrics to guide that strategy because

1129
00:44:56,059 --> 00:45:02,680
after all $200,000 there's a lot of

1130
00:44:58,609 --> 00:45:06,578
money let's spend it wisely thank you

1131
00:45:02,680 --> 00:45:10,490
[Applause]

1132
00:45:06,579 --> 00:45:12,410
and with that hopefully everyone is has

1133
00:45:10,490 --> 00:45:14,058
some questions or they're eager to leave

1134
00:45:12,410 --> 00:45:16,670
for the afternoon after such a great

1135
00:45:14,059 --> 00:45:19,339
conference and I see one hand already

1136
00:45:16,670 --> 00:45:22,069
so yes questions so all of those metrics

1137
00:45:19,339 --> 00:45:25,970
that you got are you sharing those

1138
00:45:22,069 --> 00:45:28,369
somewhere so I can't share the raw data

1139
00:45:25,970 --> 00:45:30,259
for it but the slides have been posted

1140
00:45:28,369 --> 00:45:32,410
and again we'll be posting the slides I

1141
00:45:30,259 --> 00:45:35,210
believe Def Con will be posting the

1142
00:45:32,410 --> 00:45:39,788
videos for this as well very nice cool

1143
00:45:35,210 --> 00:45:43,369
thank you all so I asked more questions

1144
00:45:39,789 --> 00:45:46,849
okay do you have it could you had so

1145
00:45:43,369 --> 00:45:48,170
many great ideas do you're like a listed

1146
00:45:46,849 --> 00:45:50,180
like kind of like if you're gonna

1147
00:45:48,170 --> 00:45:51,859
strategize between these different

1148
00:45:50,180 --> 00:45:54,319
options like bug bounty or pen testing

1149
00:45:51,859 --> 00:45:55,519
and all of these things like I would

1150
00:45:54,319 --> 00:45:56,900
love to see like one of those charts

1151
00:45:55,519 --> 00:45:58,308
where it's like if there's this if that

1152
00:45:56,900 --> 00:45:59,990
that because I'm a narrative that's how

1153
00:45:58,309 --> 00:46:01,789
I think so

1154
00:45:59,990 --> 00:46:05,058
so that's a great question so the mic

1155
00:46:01,789 --> 00:46:06,349
might be quiet so the question was do

1156
00:46:05,059 --> 00:46:08,630
you have basically do you have a

1157
00:46:06,349 --> 00:46:09,799
flowchart that says if you're really if

1158
00:46:08,630 --> 00:46:11,299
you're this worried you should do this

1159
00:46:09,799 --> 00:46:14,059
if you're not as worried do this and so

1160
00:46:11,299 --> 00:46:15,529
on and so forth so that is a great

1161
00:46:14,059 --> 00:46:16,280
question I should have you know I don't

1162
00:46:15,529 --> 00:46:17,660
have a recipe

1163
00:46:16,280 --> 00:46:19,760
you have this this this and this that I

1164
00:46:17,660 --> 00:46:21,859
think is great for all context or for

1165
00:46:19,760 --> 00:46:24,370
all apps because I I'm very much a fan

1166
00:46:21,860 --> 00:46:26,840
of seeing what's the context for this as

1167
00:46:24,370 --> 00:46:29,660
however if we're going to go into napkin

1168
00:46:26,840 --> 00:46:32,480
math napkin metrics I would say never

1169
00:46:29,660 --> 00:46:34,609
start with a bug bounty program do some

1170
00:46:32,480 --> 00:46:37,340
an internal security program first for

1171
00:46:34,610 --> 00:46:39,020
your application do a pen test do

1172
00:46:37,340 --> 00:46:42,020
something that's both that's basically

1173
00:46:39,020 --> 00:46:44,570
bounded on cost and bounded on time to

1174
00:46:42,020 --> 00:46:47,000
say what do we think our baseline is for

1175
00:46:44,570 --> 00:46:49,340
the security of this application then

1176
00:46:47,000 --> 00:46:51,560
open the doors to the hordes of the

1177
00:46:49,340 --> 00:46:53,450
Internet to say what are all the

1178
00:46:51,560 --> 00:46:57,020
vulnerabilities here what did the pen

1179
00:46:53,450 --> 00:46:59,419
testers mix miss as well as you know pen

1180
00:46:57,020 --> 00:47:01,790
tests are still a point in time so

1181
00:46:59,420 --> 00:47:04,310
applications live throughout time

1182
00:47:01,790 --> 00:47:05,960
however wibbly-wobbly it may be so there

1183
00:47:04,310 --> 00:47:09,230
is a good place for having bug bounties

1184
00:47:05,960 --> 00:47:11,680
as an ongoing monitor if you will of

1185
00:47:09,230 --> 00:47:16,940
that and the other thing I will say

1186
00:47:11,680 --> 00:47:19,190
always look at autumn a shamanic devoxx

1187
00:47:16,940 --> 00:47:20,660
mentality so that's perhaps a bit vague

1188
00:47:19,190 --> 00:47:24,650
that's how it would start to answer that

1189
00:47:20,660 --> 00:47:27,049
question so as you look at the places

1190
00:47:24,650 --> 00:47:29,300
where bugs weren't fixed have you

1191
00:47:27,050 --> 00:47:32,240
started to dive into the the whys are

1192
00:47:29,300 --> 00:47:33,950
they a grenaded to certain companies or

1193
00:47:32,240 --> 00:47:35,299
they aggregated with certain behaviors

1194
00:47:33,950 --> 00:47:36,740
you know how do you how do you think

1195
00:47:35,300 --> 00:47:38,210
about going after that problem because

1196
00:47:36,740 --> 00:47:40,370
that's how you get to the next level

1197
00:47:38,210 --> 00:47:42,770
with those particular companies

1198
00:47:40,370 --> 00:47:45,200
absolutely and in the interest of time I

1199
00:47:42,770 --> 00:47:46,550
had a whole bunch of other graphs and

1200
00:47:45,200 --> 00:47:48,169
things with you know pretty colors to

1201
00:47:46,550 --> 00:47:50,210
show off one of the things I was looking

1202
00:47:48,170 --> 00:47:52,550
at is you know it's hi lot about

1203
00:47:50,210 --> 00:47:54,680
averages but there's another thing what

1204
00:47:52,550 --> 00:47:56,240
about the median what are you know what

1205
00:47:54,680 --> 00:47:58,580
does that what do those graphs look like

1206
00:47:56,240 --> 00:48:01,189
for the companies the organizations that

1207
00:47:58,580 --> 00:48:03,110
are doing really really well so on

1208
00:48:01,190 --> 00:48:05,510
average I'm trying to marathon my head I

1209
00:48:03,110 --> 00:48:08,030
think overall the orgs it was something

1210
00:48:05,510 --> 00:48:09,950
like 79 or 80 days was that average time

1211
00:48:08,030 --> 00:48:12,470
to fix for the orgs that we're doing

1212
00:48:09,950 --> 00:48:15,319
really well it was much closer to 30 to

1213
00:48:12,470 --> 00:48:17,240
45 days so this ADA was definitely

1214
00:48:15,320 --> 00:48:18,800
skewed by a lot of outliers from

1215
00:48:17,240 --> 00:48:21,229
companies that just weren't fixing

1216
00:48:18,800 --> 00:48:23,540
vulnerabilities so there is a way to go

1217
00:48:21,230 --> 00:48:26,000
and say you know start asking those

1218
00:48:23,540 --> 00:48:28,270
questions of what's wrong do we not have

1219
00:48:26,000 --> 00:48:29,950
you know good incentives

1220
00:48:28,270 --> 00:48:32,350
doing do we need a more of a you know

1221
00:48:29,950 --> 00:48:34,569
carrot-and-stick approach or you know

1222
00:48:32,350 --> 00:48:36,880
why are these being ignored or you know

1223
00:48:34,570 --> 00:48:38,410
not to be overly cynical are these are

1224
00:48:36,880 --> 00:48:41,200
these the types of companies to just say

1225
00:48:38,410 --> 00:48:43,960
we need a pen test because we need to

1226
00:48:41,200 --> 00:48:45,850
meet some particular requirement or we

1227
00:48:43,960 --> 00:48:47,500
already know we need to satisfy a vendor

1228
00:48:45,850 --> 00:48:49,450
secure you know a third-party vendor is

1229
00:48:47,500 --> 00:48:50,860
secure any questionnaire so there are a

1230
00:48:49,450 --> 00:48:52,810
lot of things they can go in there I

1231
00:48:50,860 --> 00:48:55,300
haven't looked into it in too much

1232
00:48:52,810 --> 00:48:56,320
detail just to try to figure out what's

1233
00:48:55,300 --> 00:48:58,000
the difference being companies they're

1234
00:48:56,320 --> 00:49:00,400
doing really well and those that aren't

1235
00:48:58,000 --> 00:49:03,430
and there was no commonality I saw at

1236
00:49:00,400 --> 00:49:05,140
least in terms of size of company or

1237
00:49:03,430 --> 00:49:07,540
industry vertical or anything like that

1238
00:49:05,140 --> 00:49:09,129
so it's one of those things that if I'm

1239
00:49:07,540 --> 00:49:10,570
lucky a year from now I'll be able to

1240
00:49:09,130 --> 00:49:13,560
come back and maybe build I answer that

1241
00:49:10,570 --> 00:49:13,560
question a little bit better

1242
00:49:14,380 --> 00:49:18,910
other questions I've I'm standing on

1243
00:49:16,930 --> 00:49:20,560
this side of the stage so I feel bad so

1244
00:49:18,910 --> 00:49:22,120
I'll wander over here and our poor

1245
00:49:20,560 --> 00:49:23,470
camera guy has been trying to track me

1246
00:49:22,120 --> 00:49:25,420
as I paced back and forth

1247
00:49:23,470 --> 00:49:27,189
I don't wanna ignore this side so all

1248
00:49:25,420 --> 00:49:29,350
will just awkwardly stare at each other

1249
00:49:27,190 --> 00:49:33,030
until francois tells us that we're done

1250
00:49:29,350 --> 00:49:33,029
for the day or if anybody has questions

1251
00:49:33,180 --> 00:49:38,250
okay yes

1252
00:49:46,589 --> 00:49:51,460
so I question if I understood correctly

1253
00:49:49,150 --> 00:49:53,500
you know is there rule of thumb about

1254
00:49:51,460 --> 00:49:54,910
what this you have an application what's

1255
00:49:53,500 --> 00:49:57,700
the rule of thumb that you might expect

1256
00:49:54,910 --> 00:50:03,058
for a bug bounty or to spend on a pen

1257
00:49:57,700 --> 00:50:05,740
test for it so typically you know

1258
00:50:03,059 --> 00:50:07,720
applications are different and the

1259
00:50:05,740 --> 00:50:10,680
influence is different I would say just

1260
00:50:07,720 --> 00:50:13,598
using my you know my math the same

1261
00:50:10,680 --> 00:50:16,390
$100,000 maybe expect that because you

1262
00:50:13,599 --> 00:50:17,799
might get two vulnerabilities a week the

1263
00:50:16,390 --> 00:50:20,288
average price might be a thousand

1264
00:50:17,799 --> 00:50:22,000
dollars a better way I guess a better

1265
00:50:20,289 --> 00:50:24,490
way it might explain doubt is that if

1266
00:50:22,000 --> 00:50:26,260
you haven't done poundings before talk

1267
00:50:24,490 --> 00:50:28,569
to somebody who's done bug bounties and

1268
00:50:26,260 --> 00:50:31,329
make sure to don't start from scratch to

1269
00:50:28,569 --> 00:50:33,009
say here's our email address let us know

1270
00:50:31,329 --> 00:50:38,049
and we're going to try to figure out how

1271
00:50:33,010 --> 00:50:39,430
much we pay look to look to see I'm

1272
00:50:38,049 --> 00:50:41,980
trying to figure out how to answer this

1273
00:50:39,430 --> 00:50:43,450
concisely let me step back and say has

1274
00:50:41,980 --> 00:50:46,180
the application ever been tested before

1275
00:50:43,450 --> 00:50:48,700
if it hasn't don't do the bug bounty if

1276
00:50:46,180 --> 00:50:52,509
it has you're probably in that category

1277
00:50:48,700 --> 00:50:54,669
of you know $0 to $5,000 range

1278
00:50:52,510 --> 00:50:56,589
is a common range for bug bounty don't

1279
00:50:54,670 --> 00:50:58,599
look at somebody like Google and

1280
00:50:56,589 --> 00:51:01,270
Facebook and Apple because they have

1281
00:50:58,599 --> 00:51:03,190
massive user populations that can be put

1282
00:51:01,270 --> 00:51:07,029
at risk they have massive budgets for

1283
00:51:03,190 --> 00:51:08,559
that look for these other areas so it's

1284
00:51:07,029 --> 00:51:10,420
it's basically the other reason I'm

1285
00:51:08,559 --> 00:51:12,309
stumbling for an answer is that it's

1286
00:51:10,420 --> 00:51:15,160
hard to say how many bones are does an

1287
00:51:12,309 --> 00:51:16,750
application have so one of the ways so a

1288
00:51:15,160 --> 00:51:20,049
couple other ways you could do that is

1289
00:51:16,750 --> 00:51:22,240
say run a pen test first find out over a

1290
00:51:20,049 --> 00:51:24,130
two-week period you know typically pen

1291
00:51:22,240 --> 00:51:25,868
tests are on an hourly rate something

1292
00:51:24,130 --> 00:51:28,270
like that how many vulnerabilities do

1293
00:51:25,869 --> 00:51:29,799
they report if they reported ten

1294
00:51:28,270 --> 00:51:32,650
vulnerabilities two of them are high

1295
00:51:29,799 --> 00:51:35,109
risk and they're the eight of them were

1296
00:51:32,650 --> 00:51:38,049
medium say to high risk Falls might be a

1297
00:51:35,109 --> 00:51:40,509
$5,000 bounty eight medium risk might be

1298
00:51:38,049 --> 00:51:42,038
eight thousand dollars and so maybe

1299
00:51:40,510 --> 00:51:44,319
that's something to start a budget with

1300
00:51:42,039 --> 00:51:45,700
or say verjus go and experiment we're

1301
00:51:44,319 --> 00:51:49,058
going to open the doors on this bounty

1302
00:51:45,700 --> 00:51:51,368
program for a month and we have a twenty

1303
00:51:49,059 --> 00:51:52,990
thousand dollar bucket if that bucket is

1304
00:51:51,369 --> 00:51:55,270
spent before the end of the month we're

1305
00:51:52,990 --> 00:51:55,919
done if not we'll keep it open for

1306
00:51:55,270 --> 00:51:57,839
another one

1307
00:51:55,920 --> 00:52:00,329
so there are a couple different ways of

1308
00:51:57,839 --> 00:52:02,970
strategies for approaching that and the

1309
00:52:00,329 --> 00:52:04,980
reason I the reason I can't give you a

1310
00:52:02,970 --> 00:52:06,689
great answer is because the context is a

1311
00:52:04,980 --> 00:52:09,450
lot different between are you looking at

1312
00:52:06,690 --> 00:52:11,279
this very single application are you

1313
00:52:09,450 --> 00:52:12,538
looking across enterprise are you

1314
00:52:11,279 --> 00:52:14,250
looking at and what the type of the

1315
00:52:12,539 --> 00:52:18,779
application might be so hopefully that

1316
00:52:14,250 --> 00:52:20,190
helps a bit so yeah yeah I understand we

1317
00:52:18,779 --> 00:52:22,289
could I'd love to talk more about that

1318
00:52:20,190 --> 00:52:23,880
and find some more you know find some

1319
00:52:22,289 --> 00:52:27,510
more details because there then maybe I

1320
00:52:23,880 --> 00:52:28,049
can answer a little bit better other

1321
00:52:27,510 --> 00:52:30,059
questions

1322
00:52:28,049 --> 00:52:31,529
my voice hasn't completely gone so I

1323
00:52:30,059 --> 00:52:40,170
could probably answer at least another

1324
00:52:31,529 --> 00:52:43,670
question yes thank you I just want to

1325
00:52:40,170 --> 00:52:48,839
assess the bug bounty data includes

1326
00:52:43,670 --> 00:52:53,039
black-market bounty or just normal bug

1327
00:52:48,839 --> 00:52:54,960
bounties precise so the bug bounty data

1328
00:52:53,039 --> 00:52:57,150
here is a combination of both public and

1329
00:52:54,960 --> 00:53:00,539
private programs so they've been kind of

1330
00:52:57,150 --> 00:53:03,660
mixed together often private programs

1331
00:53:00,539 --> 00:53:05,700
tend to have filters for example of who

1332
00:53:03,660 --> 00:53:07,288
participates in them so for example if

1333
00:53:05,700 --> 00:53:09,210
you were to look at that graph where I

1334
00:53:07,289 --> 00:53:10,970
show that 8% of the people we're

1335
00:53:09,210 --> 00:53:14,519
reporting 50% of the vulnerabilities

1336
00:53:10,970 --> 00:53:16,200
private programs tend to be just that 8

1337
00:53:14,519 --> 00:53:17,939
percent of people so that's actually to

1338
00:53:16,200 --> 00:53:20,430
go back to your question that's saying

1339
00:53:17,940 --> 00:53:22,140
you know questioning how to get into you

1340
00:53:20,430 --> 00:53:24,359
know how much to spend on a bug bounty

1341
00:53:22,140 --> 00:53:26,848
program starting with a private closed

1342
00:53:24,359 --> 00:53:29,640
program with a dozen a few dozen people

1343
00:53:26,849 --> 00:53:33,029
may be a good way to start because those

1344
00:53:29,640 --> 00:53:34,920
people might be more incentivized to be

1345
00:53:33,029 --> 00:53:36,569
friendly about it give you higher

1346
00:53:34,920 --> 00:53:38,400
quality reports and so on

1347
00:53:36,569 --> 00:53:42,259
so hopefully that answers your question

1348
00:53:38,400 --> 00:53:42,259
about the composition

1349
00:53:42,470 --> 00:53:55,848
oh oh oh okay so the other so the other

1350
00:53:54,080 --> 00:53:58,549
angle the question was so this was bug

1351
00:53:55,849 --> 00:54:00,680
bounty data private public programs and

1352
00:53:58,550 --> 00:54:03,010
then what about dark market or no

1353
00:54:00,680 --> 00:54:05,720
selling vulnerabilities on you know to

1354
00:54:03,010 --> 00:54:08,570
outside of bug bounty programs a short

1355
00:54:05,720 --> 00:54:11,810
answer is no none of this data included

1356
00:54:08,570 --> 00:54:16,040
that for one I had no access to goods to

1357
00:54:11,810 --> 00:54:18,349
such data and also to degree my theory

1358
00:54:16,040 --> 00:54:20,270
behind it would also be that there's a

1359
00:54:18,349 --> 00:54:22,550
lot of applications out there for which

1360
00:54:20,270 --> 00:54:24,800
there is no black market for such

1361
00:54:22,550 --> 00:54:28,160
vulnerabilities you know Facebook Google

1362
00:54:24,800 --> 00:54:30,200
Apple those are easy examples of here's

1363
00:54:28,160 --> 00:54:31,759
a pone to own work no you have

1364
00:54:30,200 --> 00:54:33,080
competitions where this is a hundred

1365
00:54:31,760 --> 00:54:34,609
thousand two hundred thousand dollar

1366
00:54:33,080 --> 00:54:37,009
reward for these types of

1367
00:54:34,609 --> 00:54:38,840
vulnerabilities clearly there would be a

1368
00:54:37,010 --> 00:54:41,359
market of you know black market a dark

1369
00:54:38,840 --> 00:54:44,030
market or such things like that but for

1370
00:54:41,359 --> 00:54:46,759
a b2b SAS application that very few

1371
00:54:44,030 --> 00:54:48,500
people know of there's probably it's

1372
00:54:46,760 --> 00:54:50,990
unlikely that there's a black market for

1373
00:54:48,500 --> 00:54:53,270
such information so it's definitely a

1374
00:54:50,990 --> 00:54:55,310
gap there I would be curious about what

1375
00:54:53,270 --> 00:54:57,259
that actually looks like but I don't

1376
00:54:55,310 --> 00:55:00,790
have any good informed opinion or you

1377
00:54:57,260 --> 00:55:00,790
know informed opinion about that so

1378
00:55:01,420 --> 00:55:04,840
but I'm very very much Mike well thank

1379
00:55:04,570 --> 00:55:10,460
you

1380
00:55:04,840 --> 00:55:10,460
[Applause]

