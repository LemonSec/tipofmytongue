1
00:00:01,610 --> 00:00:06,540
so good morning everyone my name Stephen

2
00:00:06,540 --> 00:00:11,099
Archer from f5 I can't really see you

3
00:00:11,099 --> 00:00:13,650
very well because I'm being blinded by

4
00:00:13,650 --> 00:00:16,289
the lights but just out of interest I

5
00:00:16,289 --> 00:00:17,850
wonder how many of you have actually

6
00:00:17,850 --> 00:00:24,269
heard of f5 Wow that's well about

7
00:00:24,269 --> 00:00:27,180
three-quarters of you I would guess okay

8
00:00:27,180 --> 00:00:31,260
so the title of the presentation is what

9
00:00:31,260 --> 00:00:34,079
is ingress really so the main aim of

10
00:00:34,079 --> 00:00:36,090
this presentation is to answer that

11
00:00:36,090 --> 00:00:39,420
question I'm also going to talk about

12
00:00:39,420 --> 00:00:42,210
what I five are looking to do in the

13
00:00:42,210 --> 00:00:47,309
kind of near and medium future and talk

14
00:00:47,309 --> 00:00:50,899
a little bit about f5 cloud services and

15
00:00:50,899 --> 00:00:55,079
yeah I guess if you've got any questions

16
00:00:55,079 --> 00:00:58,770
of us our booth is just inside the the

17
00:00:58,770 --> 00:01:01,379
first door there so please come and see

18
00:01:01,379 --> 00:01:05,069
is a little bit later so first of all I

19
00:01:05,069 --> 00:01:07,229
wanted to share some news if you hadn't

20
00:01:07,229 --> 00:01:09,869
heard I mean how many of you had heard

21
00:01:09,869 --> 00:01:14,600
that recently back in May a five yeah

22
00:01:14,600 --> 00:01:18,960
completed the acquisition of nginx and I

23
00:01:18,960 --> 00:01:21,270
just wanted to share some of the views

24
00:01:21,270 --> 00:01:24,720
of the new combined team those from the

25
00:01:24,720 --> 00:01:26,670
f5 side and those from the nginx side

26
00:01:26,670 --> 00:01:28,799
and I've actually personally been

27
00:01:28,799 --> 00:01:31,619
working pretty closely with a bunch of

28
00:01:31,619 --> 00:01:34,369
the nginx guys over the last six months

29
00:01:34,369 --> 00:01:38,270
and we've formed a really fantastic team

30
00:01:38,270 --> 00:01:41,759
so from the f5 side those of you that

31
00:01:41,759 --> 00:01:44,490
know f5 I mean we have Prague the most

32
00:01:44,490 --> 00:01:49,290
comprehensive a DC solution anywhere and

33
00:01:49,290 --> 00:01:51,750
we I guess if you're a service provider

34
00:01:51,750 --> 00:01:54,090
we could provide you with you know eight

35
00:01:54,090 --> 00:01:56,579
bladed chassis that will handle billions

36
00:01:56,579 --> 00:01:59,790
of current connections handle you know

37
00:01:59,790 --> 00:02:02,299
multi terabits per second of traffic

38
00:02:02,299 --> 00:02:05,820
it's a very complex product very capable

39
00:02:05,820 --> 00:02:09,419
very open architecture and we can handle

40
00:02:09,419 --> 00:02:12,710
huge workloads but we can only shrink

41
00:02:12,710 --> 00:02:16,310
down so far so the smallest we currently

42
00:02:16,310 --> 00:02:19,220
make that capability available is in the

43
00:02:19,220 --> 00:02:22,550
form of a virtual appliance but the

44
00:02:22,550 --> 00:02:24,950
acquisition of nginx means that we now

45
00:02:24,950 --> 00:02:27,200
have a data plane that can run in a

46
00:02:27,200 --> 00:02:30,260
container so the nginx source code is

47
00:02:30,260 --> 00:02:32,390
tiny you know less than 2 megabytes in

48
00:02:32,390 --> 00:02:35,450
size so that means that we can go into

49
00:02:35,450 --> 00:02:39,200
areas that we previously couldn't and

50
00:02:39,200 --> 00:02:42,380
from the nginx side they tell me that

51
00:02:42,380 --> 00:02:45,650
they are really really happy with the

52
00:02:45,650 --> 00:02:50,140
cultural fit within f5 and and also

53
00:02:50,140 --> 00:02:52,640
they're really really excited that the

54
00:02:52,640 --> 00:02:55,130
extra resources that f5 can bring to

55
00:02:55,130 --> 00:03:01,640
nginx now f5 have also committed to not

56
00:03:01,640 --> 00:03:03,320
just maintain in the open source but

57
00:03:03,320 --> 00:03:06,550
we're actually going to increase our

58
00:03:06,550 --> 00:03:09,620
efforts in in open source so that is not

59
00:03:09,620 --> 00:03:13,520
going to go away and I think from the

60
00:03:13,520 --> 00:03:14,900
engine exercise that they were working

61
00:03:14,900 --> 00:03:16,940
on nginx controller I think they had a

62
00:03:16,940 --> 00:03:20,000
team of around 20 people and since May

63
00:03:20,000 --> 00:03:24,620
we've moved a comparative team in f5

64
00:03:24,620 --> 00:03:25,640
that we're working on a similar

65
00:03:25,640 --> 00:03:28,700
controller into the nginx business unit

66
00:03:28,700 --> 00:03:30,950
and that is now a hundred and forty

67
00:03:30,950 --> 00:03:33,740
people so nginx have really been able to

68
00:03:33,740 --> 00:03:36,080
accelerate the things that they wanted

69
00:03:36,080 --> 00:03:38,810
to do with controller and we're going to

70
00:03:38,810 --> 00:03:42,070
be delivering the first kind of combined

71
00:03:42,070 --> 00:03:45,770
product later this year and early next

72
00:03:45,770 --> 00:03:47,150
year so there's some really really cool

73
00:03:47,150 --> 00:03:51,740
stuff on the way so back to the title of

74
00:03:51,740 --> 00:03:53,960
the presentation what is ingress really

75
00:03:53,960 --> 00:03:57,130
and what I wanted you to do and this I

76
00:03:57,130 --> 00:04:01,040
built this presentation after talking

77
00:04:01,040 --> 00:04:04,060
with various people at devops

78
00:04:04,060 --> 00:04:07,490
communities and you know meetups and

79
00:04:07,490 --> 00:04:10,670
conferences like this and some people

80
00:04:10,670 --> 00:04:12,950
and I'm sure in this audience many of

81
00:04:12,950 --> 00:04:15,590
you will already know what ingress is an

82
00:04:15,590 --> 00:04:18,140
application ingress in particular but

83
00:04:18,140 --> 00:04:20,390
many don't have a clear idea of what it

84
00:04:20,390 --> 00:04:22,940
is so what I'm going to do is start the

85
00:04:22,940 --> 00:04:24,919
beginning explain what it is and then

86
00:04:24,919 --> 00:04:26,419
we'll get a bit more

87
00:04:26,419 --> 00:04:29,150
technical after that and the way I want

88
00:04:29,150 --> 00:04:34,400
you to do it is with an analogy now one

89
00:04:34,400 --> 00:04:37,580
thing to say is the application ingress

90
00:04:37,580 --> 00:04:39,620
or ingress as a term has been co-opted

91
00:04:39,620 --> 00:04:44,319
by a welter almost to exclusively mean

92
00:04:44,319 --> 00:04:46,460
traffic arriving into a kubernetes

93
00:04:46,460 --> 00:04:49,370
cluster but it's much much more than

94
00:04:49,370 --> 00:04:54,020
that so in this analogy I am one of a

95
00:04:54,020 --> 00:04:56,330
supplier of your company and I need to

96
00:04:56,330 --> 00:04:59,860
deliver some goods to your organization

97
00:04:59,860 --> 00:05:03,289
so in order to do that the first thing I

98
00:05:03,289 --> 00:05:05,529
need to do is to make some inquiries so

99
00:05:05,529 --> 00:05:08,960
I get on the phone and I found one of

100
00:05:08,960 --> 00:05:11,449
your call centers in order to try and

101
00:05:11,449 --> 00:05:14,689
find a precise address for one of your

102
00:05:14,689 --> 00:05:19,250
warehouses so speak to the person I get

103
00:05:19,250 --> 00:05:25,039
an address of a warehouse and this data

104
00:05:25,039 --> 00:05:27,919
they're all sorry this these goods that

105
00:05:27,919 --> 00:05:29,569
want to send is analogous to sending

106
00:05:29,569 --> 00:05:33,259
data to an application the warehouse is

107
00:05:33,259 --> 00:05:37,819
analogous to an IP address and you know

108
00:05:37,819 --> 00:05:39,889
telephoning the the call center is

109
00:05:39,889 --> 00:05:44,060
analogous to a DNS lookup so I've got

110
00:05:44,060 --> 00:05:46,939
the precise address so I can now start

111
00:05:46,939 --> 00:05:50,509
to pack the goods into crates so these

112
00:05:50,509 --> 00:05:53,300
are data packets of course I can load

113
00:05:53,300 --> 00:05:56,569
them onto a truck and I can lock the

114
00:05:56,569 --> 00:05:58,759
truck with a padlock and the padlock is

115
00:05:58,759 --> 00:06:01,430
provided kindly by your organization I

116
00:06:01,430 --> 00:06:04,219
don't have the keys and this is

117
00:06:04,219 --> 00:06:07,729
obviously analogous to TLS encryption so

118
00:06:07,729 --> 00:06:12,050
now the truck is ready to roll so I can

119
00:06:12,050 --> 00:06:15,860
plot a route to the warehouse and this

120
00:06:15,860 --> 00:06:17,629
is obviously the equivalence of routing

121
00:06:17,629 --> 00:06:21,020
across a data network but there's a

122
00:06:21,020 --> 00:06:23,810
problem with the warehouse for some

123
00:06:23,810 --> 00:06:27,050
reason it's not available so I need to

124
00:06:27,050 --> 00:06:29,060
go back to the call center to try and

125
00:06:29,060 --> 00:06:32,870
find an alternate location now if this

126
00:06:32,870 --> 00:06:36,740
was DNS I would keep throwing the call

127
00:06:36,740 --> 00:06:38,629
center and they would keep giving me the

128
00:06:38,629 --> 00:06:40,890
same address

129
00:06:40,890 --> 00:06:42,820
obviously we've seen that that address

130
00:06:42,820 --> 00:06:45,070
is not available so you know this can be

131
00:06:45,070 --> 00:06:49,570
a problem with DNS if the call center

132
00:06:49,570 --> 00:06:51,760
was the equivalent of GSL B or global

133
00:06:51,760 --> 00:06:53,980
server load balancing then immediately

134
00:06:53,980 --> 00:06:56,020
they would be aware that the warehouse

135
00:06:56,020 --> 00:06:58,510
is not available they would be able to

136
00:06:58,510 --> 00:07:00,340
give me a different address of a

137
00:07:00,340 --> 00:07:02,410
warehouse that was available and had

138
00:07:02,410 --> 00:07:06,850
capacity to handle the incoming Goods so

139
00:07:06,850 --> 00:07:10,230
that's what happens

140
00:07:10,230 --> 00:07:13,690
we now have an alternate address so I

141
00:07:13,690 --> 00:07:17,320
can get my my truck on the road and when

142
00:07:17,320 --> 00:07:19,780
I arrive at the warehouse which is

143
00:07:19,780 --> 00:07:22,240
equivalent of your application IP

144
00:07:22,240 --> 00:07:29,170
address I'm sent to Bay 443 and this is

145
00:07:29,170 --> 00:07:32,560
obviously equivalent of a TCP port and

146
00:07:32,560 --> 00:07:35,860
once there the employees within the

147
00:07:35,860 --> 00:07:38,260
warehouse have the keys for the padlock

148
00:07:38,260 --> 00:07:40,660
so they're able to unlock the truck and

149
00:07:40,660 --> 00:07:44,910
unpack the crates opening the crates

150
00:07:44,910 --> 00:07:48,040
there are smaller packages inside and

151
00:07:48,040 --> 00:07:50,080
these packages have additional address

152
00:07:50,080 --> 00:07:53,580
labels addressed to other individuals or

153
00:07:53,580 --> 00:07:57,070
buildings within the organization and

154
00:07:57,070 --> 00:07:59,740
one of them is addressed to mr. Baldrick

155
00:07:59,740 --> 00:08:03,400
and he could be seen as an equivalent to

156
00:08:03,400 --> 00:08:06,850
a vulnerable web server with access to a

157
00:08:06,850 --> 00:08:10,780
database and he's opens his box and

158
00:08:10,780 --> 00:08:13,690
finds a free gift inside a nice pair of

159
00:08:13,690 --> 00:08:16,750
bluetooth headphones with a dongle and

160
00:08:16,750 --> 00:08:19,390
through social engineering he plugs it

161
00:08:19,390 --> 00:08:21,970
into his laptop but obviously this is

162
00:08:21,970 --> 00:08:25,240
analogous to executing malicious code on

163
00:08:25,240 --> 00:08:29,250
your web server not a great place to be

164
00:08:29,250 --> 00:08:34,539
so a question would be would you allow

165
00:08:34,539 --> 00:08:36,549
trucks from anywhere in the world

166
00:08:36,549 --> 00:08:40,299
locked trucks to drive straight into

167
00:08:40,299 --> 00:08:42,159
your warehouse without any checks

168
00:08:42,159 --> 00:08:47,620
whatsoever and I mean I I wouldn't but

169
00:08:47,620 --> 00:08:49,630
actually this is what many organizations

170
00:08:49,630 --> 00:08:50,710
and many of our customers are doing

171
00:08:50,710 --> 00:08:52,830
they're allowing

172
00:08:52,830 --> 00:08:55,500
cryptid traffic all the way through to

173
00:08:55,500 --> 00:09:01,400
their web servers so when we look at

174
00:09:01,400 --> 00:09:03,390
automated deployments actually the

175
00:09:03,390 --> 00:09:08,550
picture is worse there I say many of the

176
00:09:08,550 --> 00:09:12,300
people that we speak to find that trying

177
00:09:12,300 --> 00:09:15,690
to automate securities is difficult and

178
00:09:15,690 --> 00:09:19,560
therefore we find you know a small

179
00:09:19,560 --> 00:09:21,690
number of people or customers who are

180
00:09:21,690 --> 00:09:23,850
able to do full automation so I'm

181
00:09:23,850 --> 00:09:26,520
talking about CIC dsquared where we've

182
00:09:26,520 --> 00:09:30,900
got automation from from the application

183
00:09:30,900 --> 00:09:32,580
all the way through to the ingress where

184
00:09:32,580 --> 00:09:34,440
you know you've now got your application

185
00:09:34,440 --> 00:09:39,540
available and on the internet the

186
00:09:39,540 --> 00:09:41,520
challenge people have mean with with

187
00:09:41,520 --> 00:09:44,400
with security means that either they

188
00:09:44,400 --> 00:09:48,150
miss out that last mile so you know

189
00:09:48,150 --> 00:09:51,360
within the development teams automation

190
00:09:51,360 --> 00:09:53,100
is working just just brilliant but then

191
00:09:53,100 --> 00:09:54,660
they have to open a ticket with an

192
00:09:54,660 --> 00:09:57,020
infrastructure team in order to open

193
00:09:57,020 --> 00:10:00,510
firewalls and other things so you're not

194
00:10:00,510 --> 00:10:03,110
gaining all the benefits of automation

195
00:10:03,110 --> 00:10:06,000
the other alternative is that actually

196
00:10:06,000 --> 00:10:08,100
we just forget about security or

197
00:10:08,100 --> 00:10:10,440
together in in the infrastructure which

198
00:10:10,440 --> 00:10:13,500
I obviously think is not a great idea

199
00:10:13,500 --> 00:10:17,940
but it really genuinely does happen so

200
00:10:17,940 --> 00:10:20,580
what could we have done differently so

201
00:10:20,580 --> 00:10:23,010
first of all we could have checked the

202
00:10:23,010 --> 00:10:26,640
routing manifests um that came with the

203
00:10:26,640 --> 00:10:28,710
lorry and we could have identified that

204
00:10:28,710 --> 00:10:31,020
it came from an unfriendly nation-state

205
00:10:31,020 --> 00:10:33,330
and actually we could just have an

206
00:10:33,330 --> 00:10:35,580
embargo and block all traffic from that

207
00:10:35,580 --> 00:10:38,100
nation-state and this is equivalent to

208
00:10:38,100 --> 00:10:40,620
geo blocking quite a simple security

209
00:10:40,620 --> 00:10:43,470
technique we could have checked the

210
00:10:43,470 --> 00:10:46,200
credentials of the driver or the

211
00:10:46,200 --> 00:10:48,930
registration plate of the lorry and if

212
00:10:48,930 --> 00:10:50,670
we looked on a crime database we could

213
00:10:50,670 --> 00:10:52,740
have seen that those were associated

214
00:10:52,740 --> 00:10:54,990
with a previous crime and we could have

215
00:10:54,990 --> 00:10:57,600
blocked on that basis and that's like an

216
00:10:57,600 --> 00:11:00,990
IP reputation database we could have

217
00:11:00,990 --> 00:11:04,410
checked the fingerprints of the driver

218
00:11:04,410 --> 00:11:06,120
and that's kind of like device

219
00:11:06,120 --> 00:11:07,260
fingerprinting

220
00:11:07,260 --> 00:11:08,970
and we could have found that you know

221
00:11:08,970 --> 00:11:11,430
that device we've seen you know

222
00:11:11,430 --> 00:11:15,829
performing malicious things previously

223
00:11:16,100 --> 00:11:19,940
now when the truck got to the warehouse

224
00:11:19,940 --> 00:11:22,140
what would it have looked like if we'd

225
00:11:22,140 --> 00:11:25,920
have implemented a network firewall well

226
00:11:25,920 --> 00:11:28,470
I guess it would have been somebody

227
00:11:28,470 --> 00:11:30,329
saying you're not allowed to go to port

228
00:11:30,329 --> 00:11:34,200
4-4-2 and you're not allowed to go to so

229
00:11:34,200 --> 00:11:37,230
port gate four four four you're only

230
00:11:37,230 --> 00:11:40,110
allowed two four four three now in this

231
00:11:40,110 --> 00:11:42,570
warehouse four four two and four four

232
00:11:42,570 --> 00:11:43,740
four were locked shut

233
00:11:43,740 --> 00:11:46,800
anyway so it didn't really provide much

234
00:11:46,800 --> 00:11:49,320
benefit so in this scenario a firewall

235
00:11:49,320 --> 00:11:51,660
doesn't really do very much a firewall

236
00:11:51,660 --> 00:11:54,690
cannot unlock that truck it doesn't have

237
00:11:54,690 --> 00:11:56,970
the keys so it cannot inspect the goods

238
00:11:56,970 --> 00:11:59,910
it can only make sure we go to Bay four

239
00:11:59,910 --> 00:12:07,380
four four so what about wife if we put a

240
00:12:07,380 --> 00:12:08,910
wife in this scenario it would be kind

241
00:12:08,910 --> 00:12:12,720
of like creating a secure zone at bay

242
00:12:12,720 --> 00:12:15,089
four four four where we unpack all the

243
00:12:15,089 --> 00:12:19,520
crates so a wife has the capability of

244
00:12:19,520 --> 00:12:22,529
obviously decrypting the traffic so you

245
00:12:22,529 --> 00:12:24,300
know we can now start to unpack the

246
00:12:24,300 --> 00:12:26,899
crates have a look what's inside and

247
00:12:26,899 --> 00:12:29,970
specifically talking about f5s wife we

248
00:12:29,970 --> 00:12:32,760
have a normalization engine and it's

249
00:12:32,760 --> 00:12:37,050
it's unique to f5 and what this does

250
00:12:37,050 --> 00:12:39,570
it does multiple classes of decoding so

251
00:12:39,570 --> 00:12:41,970
in this analogy packing and unpacking

252
00:12:41,970 --> 00:12:44,100
smaller and smaller boxes kind of like a

253
00:12:44,100 --> 00:12:47,459
Russian doll and only when we get to the

254
00:12:47,459 --> 00:12:50,699
the smallest doll which is the raw HTTP

255
00:12:50,699 --> 00:12:53,390
do we then start to apply our signatures

256
00:12:53,390 --> 00:12:55,829
which means we have a much smaller set

257
00:12:55,829 --> 00:12:58,980
of signatures so you may look and look

258
00:12:58,980 --> 00:13:00,720
at other wife technology and find that

259
00:13:00,720 --> 00:13:03,199
they've got more signatures than we have

260
00:13:03,199 --> 00:13:05,880
but this is the problem for one attack

261
00:13:05,880 --> 00:13:07,680
they all have a signature for the big

262
00:13:07,680 --> 00:13:10,079
doll the next doll the next doll and

263
00:13:10,079 --> 00:13:12,410
then they kind of run out of capacity

264
00:13:12,410 --> 00:13:14,760
whereas we can keep going we can unwrap

265
00:13:14,760 --> 00:13:16,020
these dolls and we only apply the

266
00:13:16,020 --> 00:13:18,120
signature on the

267
00:13:18,120 --> 00:13:21,089
core HTTP underneath actually you can

268
00:13:21,089 --> 00:13:24,600
choose how many dolls you open and if we

269
00:13:24,600 --> 00:13:27,270
reach that limit so if you set four for

270
00:13:27,270 --> 00:13:29,279
example we might do for decoding rounds

271
00:13:29,279 --> 00:13:32,339
and at the end of that if we're still

272
00:13:32,339 --> 00:13:34,170
faced with another doll that you can

273
00:13:34,170 --> 00:13:37,080
open another round of encoding is needed

274
00:13:37,080 --> 00:13:39,300
will just determine that that's an

275
00:13:39,300 --> 00:13:44,160
attack and we will drop the traffic okay

276
00:13:44,160 --> 00:13:49,020
so if we look at other things we could

277
00:13:49,020 --> 00:13:51,690
have done if we'd have sent all of these

278
00:13:51,690 --> 00:13:54,240
parcels to a mailroom that's kind of

279
00:13:54,240 --> 00:13:57,089
analogous to an API gateway where

280
00:13:57,089 --> 00:13:59,580
additional inspection of the addresses

281
00:13:59,580 --> 00:14:03,360
the HTTP headers is done so in the

282
00:14:03,360 --> 00:14:05,279
mailroom they may have certain addresses

283
00:14:05,279 --> 00:14:07,529
that you know are not permitted so you

284
00:14:07,529 --> 00:14:09,649
know they'll been or hopefully recycle

285
00:14:09,649 --> 00:14:13,290
whatever they find and letters to the

286
00:14:13,290 --> 00:14:17,700
CEO would probably be opened by a PA and

287
00:14:17,700 --> 00:14:20,399
in given another level of inspection so

288
00:14:20,399 --> 00:14:21,420
there are lots of things that we could

289
00:14:21,420 --> 00:14:26,570
have done differently or better so

290
00:14:26,570 --> 00:14:29,880
hopefully I've kind of explained that

291
00:14:29,880 --> 00:14:32,279
ingresses is more than just packets

292
00:14:32,279 --> 00:14:35,089
arriving in a kubernetes cluster

293
00:14:35,089 --> 00:14:38,820
actually ingress has or application

294
00:14:38,820 --> 00:14:40,760
ingress has a whole number of

295
00:14:40,760 --> 00:14:43,110
infrastructure components so we've

296
00:14:43,110 --> 00:14:46,200
talked about DNS GSLV routing networking

297
00:14:46,200 --> 00:14:48,810
woth but there's other things DDoS

298
00:14:48,810 --> 00:14:52,440
mitigation and things like health

299
00:14:52,440 --> 00:14:55,520
checking circuit breaking a be testing

300
00:14:55,520 --> 00:14:58,020
service discovery and so on and so and

301
00:14:58,020 --> 00:14:59,760
so on there's there's lots of functions

302
00:14:59,760 --> 00:15:03,360
that are included in this all of these

303
00:15:03,360 --> 00:15:05,520
functions are performed by an

304
00:15:05,520 --> 00:15:08,279
application delivery controller and ago

305
00:15:08,279 --> 00:15:12,860
ingress is actually application delivery

306
00:15:12,860 --> 00:15:17,370
so what I want to do now is oh I meant

307
00:15:17,370 --> 00:15:19,940
to say actually

308
00:15:22,009 --> 00:15:29,069
No so customers have many components

309
00:15:29,069 --> 00:15:32,660
that form their ingress data path and

310
00:15:32,660 --> 00:15:35,069
typically we're talking about I don't

311
00:15:35,069 --> 00:15:38,329
know seven to nine is kind of typical

312
00:15:38,329 --> 00:15:42,050
these are the common ones listed here

313
00:15:42,050 --> 00:15:44,850
and what you'll find is that you talk to

314
00:15:44,850 --> 00:15:47,970
ten customers and they'll have ten

315
00:15:47,970 --> 00:15:51,569
different sets of services with

316
00:15:51,569 --> 00:15:54,509
different vendors no two customers

317
00:15:54,509 --> 00:15:56,670
really are alike

318
00:15:56,670 --> 00:15:59,160
and it's a complex picture and I'm sure

319
00:15:59,160 --> 00:16:02,220
you all have a similar picture to this

320
00:16:02,220 --> 00:16:06,559
in your environment and it gets worse

321
00:16:06,559 --> 00:16:10,079
many customers will have different sets

322
00:16:10,079 --> 00:16:12,420
of Enders for different application

323
00:16:12,420 --> 00:16:15,360
architectures so for the monolithic

324
00:16:15,360 --> 00:16:17,069
applications they may have a different

325
00:16:17,069 --> 00:16:19,920
set of vendors in place different teams

326
00:16:19,920 --> 00:16:22,350
are making decisions and buying

327
00:16:22,350 --> 00:16:27,089
different vendors for micro services and

328
00:16:27,089 --> 00:16:28,679
then you move to public cloud and you've

329
00:16:28,679 --> 00:16:32,009
got another set again and what you tend

330
00:16:32,009 --> 00:16:36,559
to find is that these individual vendors

331
00:16:36,559 --> 00:16:40,019
kind of organizations tend to create

332
00:16:40,019 --> 00:16:44,730
silos around them so you have multiple

333
00:16:44,730 --> 00:16:49,889
silos along this data path and then it

334
00:16:49,889 --> 00:16:51,899
gets even more complex because you know

335
00:16:51,899 --> 00:16:54,089
if you've if you've got you know

336
00:16:54,089 --> 00:16:56,610
multiple environments then you know you

337
00:16:56,610 --> 00:17:02,550
may have even more silos and each of

338
00:17:02,550 --> 00:17:05,880
these vendors have their own management

339
00:17:05,880 --> 00:17:08,939
interfaces their own orchestration

340
00:17:08,939 --> 00:17:11,789
frameworks and it becomes really complex

341
00:17:11,789 --> 00:17:13,890
to be able to manage you know each team

342
00:17:13,890 --> 00:17:15,720
in each silo are comfortable with their

343
00:17:15,720 --> 00:17:19,980
interface other teams maybe maybe not

344
00:17:19,980 --> 00:17:23,760
and and it means that when customers

345
00:17:23,760 --> 00:17:26,339
want to do automation they need to learn

346
00:17:26,339 --> 00:17:29,070
all of these different capabilities and

347
00:17:29,070 --> 00:17:32,250
the peculiarities of each of them and

348
00:17:32,250 --> 00:17:33,840
it's left to the customer really to try

349
00:17:33,840 --> 00:17:34,169
and stay

350
00:17:34,169 --> 00:17:36,899
them all together which we think is a

351
00:17:36,899 --> 00:17:42,659
big problem and I'm sure you've all been

352
00:17:42,659 --> 00:17:44,340
in a position similar to this I mean

353
00:17:44,340 --> 00:17:48,019
I've been at f5 for nine years and

354
00:17:48,019 --> 00:17:50,220
previously when I was a consultant you

355
00:17:50,220 --> 00:17:53,220
know I was on calls till goodness knows

356
00:17:53,220 --> 00:17:55,739
what time at night trying to diagnose

357
00:17:55,739 --> 00:17:59,850
problems and because f5 is always in the

358
00:17:59,850 --> 00:18:00,629
data path

359
00:18:00,629 --> 00:18:03,590
we're always involved in those calls I

360
00:18:03,590 --> 00:18:06,899
like to say rarely are we the cause of

361
00:18:06,899 --> 00:18:08,850
the problem but I guess I would say that

362
00:18:08,850 --> 00:18:13,830
but I like to think that's true trying

363
00:18:13,830 --> 00:18:17,879
to diagnose which of these solutions you

364
00:18:17,879 --> 00:18:19,080
know is the cause of the problem is

365
00:18:19,080 --> 00:18:22,100
really hard work with all these silos

366
00:18:22,100 --> 00:18:25,440
blaming each other you know not

367
00:18:25,440 --> 00:18:26,850
necessarily being as helpful as they

368
00:18:26,850 --> 00:18:33,239
might be it can be really tricky so this

369
00:18:33,239 --> 00:18:37,259
is the the power of the combined f5 and

370
00:18:37,259 --> 00:18:40,049
enginex you can see that we've got a

371
00:18:40,049 --> 00:18:43,080
presence in every step between the code

372
00:18:43,080 --> 00:18:46,440
deployed on the application server all

373
00:18:46,440 --> 00:18:49,409
the way through to the customer with f5

374
00:18:49,409 --> 00:18:51,210
technology we're actually reaching into

375
00:18:51,210 --> 00:18:53,879
the browser even with with JavaScript so

376
00:18:53,879 --> 00:18:56,309
we're literally from end to end we are

377
00:18:56,309 --> 00:18:59,480
the only vendor that has this end-to-end

378
00:18:59,480 --> 00:19:03,119
capability so this is what it kind of

379
00:19:03,119 --> 00:19:04,499
looks like today you can see we've got

380
00:19:04,499 --> 00:19:07,769
some nginx stuff here as big IP stuff

381
00:19:07,769 --> 00:19:12,359
here nginx at the end but between us we

382
00:19:12,359 --> 00:19:16,379
can be deployed in any architecture and

383
00:19:16,379 --> 00:19:17,730
actually we've got many different

384
00:19:17,730 --> 00:19:20,489
consumption models so whether you want

385
00:19:20,489 --> 00:19:22,559
to you know buy your own license or pay

386
00:19:22,559 --> 00:19:24,269
hourly or whatever you want to do

387
00:19:24,269 --> 00:19:29,639
there's a solution for you so what we

388
00:19:29,639 --> 00:19:31,619
what we're doing next and we've already

389
00:19:31,619 --> 00:19:34,139
started on this is that we're going to

390
00:19:34,139 --> 00:19:36,779
start stitching together the control

391
00:19:36,779 --> 00:19:38,489
planes of all of our products because at

392
00:19:38,489 --> 00:19:41,429
the moment they're kind of separate and

393
00:19:41,429 --> 00:19:43,049
one of the things that we're working on

394
00:19:43,049 --> 00:19:46,039
is is project overwatch so this is

395
00:19:46,039 --> 00:19:47,740
providing a

396
00:19:47,740 --> 00:19:49,780
consistent single pane of glass to be

397
00:19:49,780 --> 00:19:54,270
able to manage all of your device's

398
00:19:54,330 --> 00:19:58,450
components and services we're also going

399
00:19:58,450 --> 00:20:00,190
to be adding in capabilities to add

400
00:20:00,190 --> 00:20:02,260
other vendors into that solution and

401
00:20:02,260 --> 00:20:04,360
that's delivered software as a service

402
00:20:04,360 --> 00:20:07,780
in the cloud so that's one of f5 cloud

403
00:20:07,780 --> 00:20:10,660
services new services it's available

404
00:20:10,660 --> 00:20:14,890
today in preview we've also got things

405
00:20:14,890 --> 00:20:16,720
like intelligent threat services so this

406
00:20:16,720 --> 00:20:19,929
is a capability that's being built by

407
00:20:19,929 --> 00:20:22,960
our security team there's there's lots

408
00:20:22,960 --> 00:20:24,429
of capabilities there we'll talk a

409
00:20:24,429 --> 00:20:29,470
little bit about them later and of

410
00:20:29,470 --> 00:20:32,860
course we've got yeah future services so

411
00:20:32,860 --> 00:20:36,370
we're going to expand on this code to

412
00:20:36,370 --> 00:20:37,960
customer story so we're going to be

413
00:20:37,960 --> 00:20:40,679
adding new capabilities in either end

414
00:20:40,679 --> 00:20:43,290
we're working on many of them already

415
00:20:43,290 --> 00:20:46,480
some of these are partially available

416
00:20:46,480 --> 00:20:48,970
already but we're again going to build

417
00:20:48,970 --> 00:20:52,300
on those and I suppose once we've got a

418
00:20:52,300 --> 00:20:55,450
single coherent platform for management

419
00:20:55,450 --> 00:20:58,990
and visibility the next step is to start

420
00:20:58,990 --> 00:21:01,600
creating insights from that building

421
00:21:01,600 --> 00:21:03,640
intelligence centralized intelligence

422
00:21:03,640 --> 00:21:06,580
that can really provide business

423
00:21:06,580 --> 00:21:08,980
benefits out of this fantastic

424
00:21:08,980 --> 00:21:11,020
visibility that we have of your

425
00:21:11,020 --> 00:21:14,280
application end to end

426
00:21:15,480 --> 00:21:19,780
so I was probably a little bit chicken I

427
00:21:19,780 --> 00:21:23,830
was going to do a live demo I thought

428
00:21:23,830 --> 00:21:25,900
actually you know what I'm just going to

429
00:21:25,900 --> 00:21:28,140
build some slides that show the demo

430
00:21:28,140 --> 00:21:33,370
just in case anything went wrong so why

431
00:21:33,370 --> 00:21:37,360
do we need ingress security well I mean

432
00:21:37,360 --> 00:21:39,820
I'm I'm pretty sure you all know better

433
00:21:39,820 --> 00:21:43,210
than I do that you know building

434
00:21:43,210 --> 00:21:45,010
applications and building security into

435
00:21:45,010 --> 00:21:47,070
up locations is not a perfect science

436
00:21:47,070 --> 00:21:49,510
there are things that you can do

437
00:21:49,510 --> 00:21:52,720
obviously having a fantastic engineer is

438
00:21:52,720 --> 00:21:55,179
probably the best of them somebody who

439
00:21:55,179 --> 00:21:57,660
really understands security

440
00:21:57,660 --> 00:21:59,370
but there are tools out there you know

441
00:21:59,370 --> 00:22:01,440
such tools and you know dependency

442
00:22:01,440 --> 00:22:04,380
libraries and stuff like that that will

443
00:22:04,380 --> 00:22:07,350
allow you to identify some of them more

444
00:22:07,350 --> 00:22:11,040
obvious kind of vulnerabilities there

445
00:22:11,040 --> 00:22:12,900
are server-side security tools that you

446
00:22:12,900 --> 00:22:16,320
can deploy but again none of them are

447
00:22:16,320 --> 00:22:18,660
perfect and you know I talk to customers

448
00:22:18,660 --> 00:22:21,300
who tell me that in order to try and

449
00:22:21,300 --> 00:22:23,280
detect all of their vulnerabilities at

450
00:22:23,280 --> 00:22:25,530
the code level and they're using half a

451
00:22:25,530 --> 00:22:28,170
dozen different tools because no one

452
00:22:28,170 --> 00:22:31,190
tool is perfect and can cover all bases

453
00:22:31,190 --> 00:22:33,570
and actually using them all together is

454
00:22:33,570 --> 00:22:37,230
pretty much unworkable now I'd be

455
00:22:37,230 --> 00:22:39,120
interested to hear your views on this

456
00:22:39,120 --> 00:22:41,730
I'm not going to ask you now but if you

457
00:22:41,730 --> 00:22:44,270
disagree with me and you think that

458
00:22:44,270 --> 00:22:46,890
actually it's possible to have excellent

459
00:22:46,890 --> 00:22:49,980
security through the you know the build

460
00:22:49,980 --> 00:22:52,530
process then please come and tell me

461
00:22:52,530 --> 00:22:54,300
because I don't want to be at the next

462
00:22:54,300 --> 00:22:57,840
conference telling people lies so you

463
00:22:57,840 --> 00:23:00,720
know I'm kind of regurgitating what I've

464
00:23:00,720 --> 00:23:05,400
heard from from our customers so how can

465
00:23:05,400 --> 00:23:08,760
you automate security there are a number

466
00:23:08,760 --> 00:23:10,770
of things that you can do and the first

467
00:23:10,770 --> 00:23:13,050
of those the thing on the left is is

468
00:23:13,050 --> 00:23:16,170
negative security and on the right it's

469
00:23:16,170 --> 00:23:18,750
intelligent security and these are the

470
00:23:18,750 --> 00:23:20,850
only two ways I I think that it's

471
00:23:20,850 --> 00:23:24,540
possible to build security into the

472
00:23:24,540 --> 00:23:26,300
ingress into the data path

473
00:23:26,300 --> 00:23:31,410
so negative security is signatures but

474
00:23:31,410 --> 00:23:34,080
if you want to automate a solution that

475
00:23:34,080 --> 00:23:35,910
uses negative security and signatures

476
00:23:35,910 --> 00:23:38,520
then those signatures need to be highly

477
00:23:38,520 --> 00:23:44,100
accurate and f5 we have all of our

478
00:23:44,100 --> 00:23:46,950
signatures are categorized in terms of

479
00:23:46,950 --> 00:23:52,890
their their accuracy so you want to use

480
00:23:52,890 --> 00:23:55,740
our high accuracy signatures we also

481
00:23:55,740 --> 00:23:58,260
have a service called threat campaigns

482
00:23:58,260 --> 00:24:03,780
which allows us to bring in very high

483
00:24:03,780 --> 00:24:07,050
accuracy signatures on demand and in

484
00:24:07,050 --> 00:24:09,090
reaction to what kind of attacks are

485
00:24:09,090 --> 00:24:12,780
actually ongoing in the wild today and

486
00:24:12,780 --> 00:24:15,690
as those attacks modify and changed then

487
00:24:15,690 --> 00:24:17,580
we'll take those signatures out and

488
00:24:17,580 --> 00:24:20,390
replace them with with different ones so

489
00:24:20,390 --> 00:24:23,190
the trick with negative security is the

490
00:24:23,190 --> 00:24:25,410
more accurate your signature the more

491
00:24:25,410 --> 00:24:27,420
computationally expensive it is

492
00:24:27,420 --> 00:24:30,000
so with threat campaigns we have very

493
00:24:30,000 --> 00:24:31,500
high accuracy but we have a low number

494
00:24:31,500 --> 00:24:34,380
of them and they're targeted so that's

495
00:24:34,380 --> 00:24:37,350
really useful we also have bot

496
00:24:37,350 --> 00:24:40,530
signatures so bot signatures are again

497
00:24:40,530 --> 00:24:42,960
really useful a lot of the bots are

498
00:24:42,960 --> 00:24:44,580
quite helpful in that they provide a

499
00:24:44,580 --> 00:24:47,180
user agent so they're easy to identify

500
00:24:47,180 --> 00:24:50,070
bots thing which is very very low false

501
00:24:50,070 --> 00:24:52,560
positive and others that try and emulate

502
00:24:52,560 --> 00:24:56,310
a browser and often fail to get the HTTP

503
00:24:56,310 --> 00:24:59,400
headers in the right order and then some

504
00:24:59,400 --> 00:25:03,210
try and pretend to be good bots but on

505
00:25:03,210 --> 00:25:06,330
so we can do a reverse look-up on the

506
00:25:06,330 --> 00:25:08,400
source address of that bot and determine

507
00:25:08,400 --> 00:25:10,290
whether it really is a good bot or not

508
00:25:10,290 --> 00:25:12,090
so there's lots of things we can do with

509
00:25:12,090 --> 00:25:15,390
negative security but I think far better

510
00:25:15,390 --> 00:25:17,940
is to add some intelligence into the

511
00:25:17,940 --> 00:25:20,430
system and this is something that we're

512
00:25:20,430 --> 00:25:21,810
working on at f5

513
00:25:21,810 --> 00:25:23,580
there's a lot of work going on on

514
00:25:23,580 --> 00:25:27,800
centralized analytics so centralized

515
00:25:27,800 --> 00:25:29,970
understanding and finding fingerprinting

516
00:25:29,970 --> 00:25:33,000
of every single device on earth that's

517
00:25:33,000 --> 00:25:37,410
the goal so that's underway but today

518
00:25:37,410 --> 00:25:40,500
what can we do well positive security

519
00:25:40,500 --> 00:25:42,450
for an application is a much better

520
00:25:42,450 --> 00:25:46,260
place than negative security so I'm

521
00:25:46,260 --> 00:25:48,030
going to show you a little example of

522
00:25:48,030 --> 00:25:49,550
how our

523
00:25:49,550 --> 00:25:52,910
declarative API for our advanced wife

524
00:25:52,910 --> 00:25:56,610
can help with that and of course today

525
00:25:56,610 --> 00:25:59,130
we've got very limited time so there's

526
00:25:59,130 --> 00:26:02,160
only so much we can talk about actually

527
00:26:02,160 --> 00:26:03,330
the most difficult thing has been

528
00:26:03,330 --> 00:26:05,460
actually what do we have to leave out

529
00:26:05,460 --> 00:26:09,420
today so back to this slide that we saw

530
00:26:09,420 --> 00:26:10,890
earlier we're going to kind of focus in

531
00:26:10,890 --> 00:26:17,250
on application security and I hope this

532
00:26:17,250 --> 00:26:19,890
is visible to you all it kind of looks

533
00:26:19,890 --> 00:26:23,580
okay to me so what this is this is

534
00:26:23,580 --> 00:26:27,150
a screenshot of my CI CD pipeline in

535
00:26:27,150 --> 00:26:32,370
gitlab I'm sure yours in reality is

536
00:26:32,370 --> 00:26:33,810
going to be much more complex than this

537
00:26:33,810 --> 00:26:36,300
but it really just kind of proves the

538
00:26:36,300 --> 00:26:36,630
point

539
00:26:36,630 --> 00:26:40,590
and shows that adding positive security

540
00:26:40,590 --> 00:26:44,760
actually can be pretty simple so we've

541
00:26:44,760 --> 00:26:47,430
got some dependency scanning sassed

542
00:26:47,430 --> 00:26:52,550
we're building and deploying to staging

543
00:26:52,550 --> 00:26:57,690
then deploy the wife the wife policy

544
00:26:57,690 --> 00:27:00,300
onto the wife in line in front of the

545
00:27:00,300 --> 00:27:04,159
application in the staging environment

546
00:27:08,450 --> 00:27:13,369
so this is the wife policy its JSON its

547
00:27:13,369 --> 00:27:17,989
declarative so we just post this to the

548
00:27:17,989 --> 00:27:21,440
wife and it will deploy this this policy

549
00:27:21,440 --> 00:27:24,999
so we define the policy give it a name

550
00:27:24,999 --> 00:27:27,649
we define the template that we want to

551
00:27:27,649 --> 00:27:29,480
use so we have a number of templates

552
00:27:29,480 --> 00:27:31,429
built in on the platform but you can

553
00:27:31,429 --> 00:27:33,700
create your own with your own standards

554
00:27:33,700 --> 00:27:37,009
but this is a good suggestion Rapid

555
00:27:37,009 --> 00:27:40,460
Deployment the enforcement mode blocking

556
00:27:40,460 --> 00:27:43,789
or transparent you specify the server

557
00:27:43,789 --> 00:27:45,649
technologies that you're using for your

558
00:27:45,649 --> 00:27:48,950
application in this case we've got my

559
00:27:48,950 --> 00:27:51,909
sequel and unix/linux

560
00:27:51,909 --> 00:27:55,249
and then we've got blocking settings so

561
00:27:55,249 --> 00:27:57,619
what I've got in this case is that I'm

562
00:27:57,619 --> 00:28:00,980
going to block on file types so we have

563
00:28:00,980 --> 00:28:02,720
a default list of file types that we

564
00:28:02,720 --> 00:28:06,859
deem is okay you know pretty safe things

565
00:28:06,859 --> 00:28:08,629
that you would expect for a web

566
00:28:08,629 --> 00:28:14,299
application and because obviously the

567
00:28:14,299 --> 00:28:16,009
screen is not long enough this is a

568
00:28:16,009 --> 00:28:20,539
continuation so signature settings so

569
00:28:20,539 --> 00:28:22,129
I'm not going to put my signatures into

570
00:28:22,129 --> 00:28:24,259
staging and putting them straight into

571
00:28:24,259 --> 00:28:26,929
production so to speak and then I'm

572
00:28:26,929 --> 00:28:31,580
going to for my policy builder I want to

573
00:28:31,580 --> 00:28:35,600
learn from you know testers not not from

574
00:28:35,600 --> 00:28:37,759
bots and then I've got a couple of web

575
00:28:37,759 --> 00:28:40,609
hooks set up so so we now have the

576
00:28:40,609 --> 00:28:44,989
ability to send web hooks so this one is

577
00:28:44,989 --> 00:28:47,570
going to be triggered every time we

578
00:28:47,570 --> 00:28:51,080
apply a wife policy and this one every

579
00:28:51,080 --> 00:28:54,980
time we receive an illegal request so in

580
00:28:54,980 --> 00:28:59,090
my lab this goes to slack but you can

581
00:28:59,090 --> 00:29:01,220
obviously use this to to trigger your

582
00:29:01,220 --> 00:29:03,830
pipeline and then we've got a

583
00:29:03,830 --> 00:29:06,799
modification section and because this is

584
00:29:06,799 --> 00:29:08,809
a base policy there are no modifications

585
00:29:08,809 --> 00:29:15,830
yet so those parts of defining the base

586
00:29:15,830 --> 00:29:18,139
policy and the adjustments so the

587
00:29:18,139 --> 00:29:20,149
adjustments I mean things like you know

588
00:29:20,149 --> 00:29:21,929
making your application specific

589
00:29:21,929 --> 00:29:25,080
so like the server technologies the

590
00:29:25,080 --> 00:29:27,509
blocking settings and so on and then

591
00:29:27,509 --> 00:29:29,309
here we're defining the policy

592
00:29:29,309 --> 00:29:31,590
modifications of which there are none

593
00:29:31,590 --> 00:29:35,869
yet so this is my pipeline so I've now

594
00:29:35,869 --> 00:29:39,419
deployed my wife policy and I've got

595
00:29:39,419 --> 00:29:42,029
some some testing some functional

596
00:29:42,029 --> 00:29:44,700
testing so again in my lab it's just a

597
00:29:44,700 --> 00:29:47,879
few curls to pull different files down

598
00:29:47,879 --> 00:29:49,679
I'm sure you're so way more

599
00:29:49,679 --> 00:29:52,080
sophisticated than that but in this case

600
00:29:52,080 --> 00:29:56,159
my requests were rejected actually

601
00:29:56,159 --> 00:29:58,639
blocked by the wife

602
00:29:58,639 --> 00:30:04,019
so next my pipeline reaches out to the

603
00:30:04,019 --> 00:30:09,179
wife sends a curl and asks for an export

604
00:30:09,179 --> 00:30:13,200
of the suggestions so suggestions in our

605
00:30:13,200 --> 00:30:16,649
wife what the wife provides you when

606
00:30:16,649 --> 00:30:20,879
you're in learning mode so as you're in

607
00:30:20,879 --> 00:30:23,309
your test environment and the wife

608
00:30:23,309 --> 00:30:26,100
policy blocks something and it will give

609
00:30:26,100 --> 00:30:27,360
you a suggestion and say well actually

610
00:30:27,360 --> 00:30:29,940
if you meant that to get through to your

611
00:30:29,940 --> 00:30:32,610
application you need to disable this or

612
00:30:32,610 --> 00:30:35,519
this or this so there are suggestions to

613
00:30:35,519 --> 00:30:37,769
help you loosen the policy to fit the

614
00:30:37,769 --> 00:30:42,980
application so when you send a girl to

615
00:30:42,980 --> 00:30:45,840
to the API this is the response that you

616
00:30:45,840 --> 00:30:51,299
get in there is the suggestions and we

617
00:30:51,299 --> 00:30:53,879
have entity changes that it's

618
00:30:53,879 --> 00:30:55,830
recommending and in this case we've got

619
00:30:55,830 --> 00:30:58,350
two of them I've got space for the rest

620
00:30:58,350 --> 00:31:00,179
of that down there but there are two in

621
00:31:00,179 --> 00:31:03,509
this case and that section we can just

622
00:31:03,509 --> 00:31:06,360
pull that out and we can merge that into

623
00:31:06,360 --> 00:31:08,399
the policy so you can see in the

624
00:31:08,399 --> 00:31:10,139
modifications section I've literally

625
00:31:10,139 --> 00:31:11,960
just merged those straight in there and

626
00:31:11,960 --> 00:31:14,789
I can repost this because it's

627
00:31:14,789 --> 00:31:18,539
declarative back to the wife and then

628
00:31:18,539 --> 00:31:21,330
rerun the pipeline and second time

629
00:31:21,330 --> 00:31:24,029
around it's now successful so I've

630
00:31:24,029 --> 00:31:26,429
deployed a policy I've run some test

631
00:31:26,429 --> 00:31:28,799
traffic the wife told me what I needed

632
00:31:28,799 --> 00:31:31,830
to do to make it better I fixed it I

633
00:31:31,830 --> 00:31:35,450
rerun it and now everything is working

634
00:31:35,450 --> 00:31:40,170
so now I create my production tag and

635
00:31:40,170 --> 00:31:42,960
then I can deploy boom to production

636
00:31:42,960 --> 00:31:45,990
then I can do my dashed testing you can

637
00:31:45,990 --> 00:31:48,840
get your pen testers in and you're on

638
00:31:48,840 --> 00:31:53,280
the road so hopefully that all kind of

639
00:31:53,280 --> 00:31:53,760
makes sense

640
00:31:53,760 --> 00:31:55,860
pretty simple example but I just wanted

641
00:31:55,860 --> 00:31:59,700
to explain how easy it can be so don't

642
00:31:59,700 --> 00:32:02,480
let anybody tell you that automating

643
00:32:02,480 --> 00:32:05,430
security in the ingress path is

644
00:32:05,430 --> 00:32:09,540
difficult so just a quick couple of

645
00:32:09,540 --> 00:32:14,820
minutes on f5 cloud services so this is

646
00:32:14,820 --> 00:32:18,200
the mission the objective I should say

647
00:32:18,200 --> 00:32:21,270
cloud native software as a service

648
00:32:21,270 --> 00:32:23,610
solutions for enhanced application

649
00:32:23,610 --> 00:32:26,760
delivery security and insights so what

650
00:32:26,760 --> 00:32:28,860
we're doing is we're building a whole

651
00:32:28,860 --> 00:32:31,640
set of new services and platforms in AWS

652
00:32:31,640 --> 00:32:37,470
energy or other clouds to follow so some

653
00:32:37,470 --> 00:32:40,980
of those for example we've got global

654
00:32:40,980 --> 00:32:42,360
server load balancing as a service

655
00:32:42,360 --> 00:32:46,620
authoritative DNS we've got overwatch

656
00:32:46,620 --> 00:32:49,560
that I mentioned earlier and essential

657
00:32:49,560 --> 00:32:53,220
at protect is is kind of like a a subset

658
00:32:53,220 --> 00:32:55,860
of wife features and that are available

659
00:32:55,860 --> 00:32:58,170
as a service in the cloud or when you

660
00:32:58,170 --> 00:33:01,500
decide to to purchase one of these

661
00:33:01,500 --> 00:33:04,160
services you login to the portal you

662
00:33:04,160 --> 00:33:07,550
purchase the service and we deploy

663
00:33:07,550 --> 00:33:09,780
containerized instances of our

664
00:33:09,780 --> 00:33:12,960
technology in the region that you want

665
00:33:12,960 --> 00:33:16,110
to deploy in so for AWS for example you

666
00:33:16,110 --> 00:33:19,500
know if you want to deploy in UK sorry

667
00:33:19,500 --> 00:33:22,170
you Wes to you specify that and we will

668
00:33:22,170 --> 00:33:23,460
deploy your service there and we'll

669
00:33:23,460 --> 00:33:30,450
connect with your environment so with

670
00:33:30,450 --> 00:33:33,420
that hopefully I've answered my own

671
00:33:33,420 --> 00:33:39,120
question which is what was ingress we

672
00:33:39,120 --> 00:33:41,580
talked a little bit about what f5 and

673
00:33:41,580 --> 00:33:44,100
nginx are doing together and what we're

674
00:33:44,100 --> 00:33:45,790
doing in the future

675
00:33:45,790 --> 00:33:47,890
and if you've got any questions well

676
00:33:47,890 --> 00:33:49,330
we're just through the door over there

677
00:33:49,330 --> 00:33:52,060
so please come and say hello come on

678
00:33:52,060 --> 00:33:54,190
tell me I'm wrong if if anything I said

679
00:33:54,190 --> 00:33:56,890
didn't make sense to you and of course

680
00:33:56,890 --> 00:33:58,900
yeah any questions come and Sears thank

681
00:33:58,900 --> 00:34:20,380
you very much right sorry I should have

682
00:34:20,380 --> 00:34:24,280
said I thought we were running late so

683
00:34:24,280 --> 00:34:26,739
yeah if you've got questions yeah one

684
00:34:26,739 --> 00:34:29,440
quick question could you provide perhaps

685
00:34:29,440 --> 00:34:33,250
one or two specific actionable takeaways

686
00:34:33,250 --> 00:34:34,810
for your talk that would benefit

687
00:34:34,810 --> 00:34:36,730
attendees regardless of if they buy your

688
00:34:36,730 --> 00:34:43,630
product actionable takeaways so I think

689
00:34:43,630 --> 00:34:45,820
that the biggest challenge we have as a

690
00:34:45,820 --> 00:34:48,250
vendor is that we're trying to build

691
00:34:48,250 --> 00:34:51,790
solutions that will allow you to break

692
00:34:51,790 --> 00:34:53,500
down those barriers between the silos

693
00:34:53,500 --> 00:34:57,220
and organizations so you know devstack

694
00:34:57,220 --> 00:35:01,120
ops I don't know most organizations dev

695
00:35:01,120 --> 00:35:06,400
SEC hops they're not combined and and

696
00:35:06,400 --> 00:35:10,240
that's really my suggestion really is it

697
00:35:10,240 --> 00:35:13,300
you know we can build the tools but you

698
00:35:13,300 --> 00:35:16,120
guys need to build the organization that

699
00:35:16,120 --> 00:35:18,310
can leverage them so we have all these

700
00:35:18,310 --> 00:35:19,870
automation capabilities we've got

701
00:35:19,870 --> 00:35:23,290
fantastic capabilities but it's getting

702
00:35:23,290 --> 00:35:25,060
the development people talking to the

703
00:35:25,060 --> 00:35:27,790
guys that actually probably own the silo

704
00:35:27,790 --> 00:35:31,420
that own f5 in your environment so that

705
00:35:31,420 --> 00:35:33,340
would be the key takeaway go and talk to

706
00:35:33,340 --> 00:35:36,220
them find out who they are try and smash

707
00:35:36,220 --> 00:35:39,010
down those barriers and get automating

708
00:35:39,010 --> 00:35:40,870
because it you know once you've done

709
00:35:40,870 --> 00:35:43,930
that it's easy does that answer the

710
00:35:43,930 --> 00:35:48,460
question no I don't believe so

711
00:35:48,460 --> 00:35:54,100
thank you anyway Costigan what based on

712
00:35:54,100 --> 00:35:59,160
your experiences what can someone do

713
00:35:59,160 --> 00:36:02,110
some effective practical thing someone

714
00:36:02,110 --> 00:36:04,240
can do that's not by your product

715
00:36:04,240 --> 00:36:06,910
like maybe some insights you don't worry

716
00:36:06,910 --> 00:36:07,390
about it

717
00:36:07,390 --> 00:36:11,020
I was gonna say you're not gonna get me

718
00:36:11,020 --> 00:36:15,100
to say don't buy our product don't buy

719
00:36:15,100 --> 00:36:18,760
our product no Dubai product any other

720
00:36:18,760 --> 00:36:21,090
questions

721
00:36:24,540 --> 00:36:27,900
we're good thank you very much as we've

722
00:36:27,900 --> 00:36:30,920
got 20 minute breaks

