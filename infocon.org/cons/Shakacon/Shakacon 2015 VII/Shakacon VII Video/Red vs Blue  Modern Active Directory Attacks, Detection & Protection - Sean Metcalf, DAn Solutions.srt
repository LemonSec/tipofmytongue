1
00:00:05,420 --> 00:00:10,920
my name is Sean Metcalfe and this is Red
vs Blue modern Active Directory attacks

2
00:00:10,920 --> 00:00:19,780
detection protection

3
00:00:19,780 --> 00:00:24,020
standard Active Directory attack methods
in some ways to detect them and defend

4
00:00:24,020 --> 00:00:29,210
against them and the CTO of dan
solutions nighty services company

5
00:00:29,210 --> 00:00:33,480
focused on Microsoft platform
engineering and security solutions and

6
00:00:33,480 --> 00:00:36,819
as Jason mention I'm one of about a
hundred Active Directory Microsoft

7
00:00:36,820 --> 00:00:41,650
Certified masters in the world focuses
on Active Directory security and I

8
00:00:41,650 --> 00:00:47,920
regularly post results my research 280
security dot org it's more important

9
00:00:47,920 --> 00:00:52,870
than ever for defensive teams understand
current attacks script at 47 was talking

10
00:00:52,870 --> 00:00:56,660
about this morning in order to fully
understand how to defend against attacks

11
00:00:56,660 --> 00:01:00,290
you really need to see what they are and
how they work and understand what that

12
00:01:00,290 --> 00:01:04,559
attack detail is so I cover some of the
better-known attack methods as well as a

13
00:01:04,559 --> 00:01:09,420
couple of new ones which is being shown
here for the first time the talk also

14
00:01:09,420 --> 00:01:13,570
covers brand-new forged congress take it
along lines of golden silver gold and

15
00:01:13,570 --> 00:01:18,940
silver tickets which are used for
persistence the average inspection time

16
00:01:18,940 --> 00:01:24,820
of the breach was over six months in
2014 and most of those organizations

17
00:01:24,820 --> 00:01:26,548
didn't detect it themselves

18
00:01:26,549 --> 00:01:31,590
someone else told them that it so this
is a post exploit talk so everything

19
00:01:31,590 --> 00:01:35,700
that you just heard about malware that
happened has happened already and now

20
00:01:35,700 --> 00:01:38,979
it's the next step what is the attacker
do once they get on the system once they

21
00:01:38,979 --> 00:01:42,929
get the network we start this talk with
the understanding that the perimeters

22
00:01:42,930 --> 00:01:49,399
compromise regularly perimeter defenses
used to be enough the castle's hi outer

23
00:01:49,399 --> 00:01:53,079
wall and moat are not enough anymore
because attackers got really did it

24
00:01:53,079 --> 00:01:57,119
swimming and climbing and of course
email goes right through the perimeter

25
00:01:57,119 --> 00:02:03,189
defenses so I'll air defenses was
necessary from the outermost council

26
00:02:03,189 --> 00:02:07,139
also several interior walls Monse
Michelle in Normandy France on the left

27
00:02:07,140 --> 00:02:10,840
was a real-life inspiration for the
design amnesty writ in Lord of the Rings

28
00:02:10,840 --> 00:02:15,570
fell to the great example the lair
defense even if in Sakura gets inside

29
00:02:15,570 --> 00:02:19,519
the outer walls are several more to get
through unless of course you have a win

30
00:02:19,520 --> 00:02:26,010
as cool flying around and Kerberos which
were gonna talk about quite a bit here a

31
00:02:26,010 --> 00:02:30,109
user has a ticket which is used to gain
access to a resource the ticket granting

32
00:02:30,110 --> 00:02:31,830
ticket for TGT

33
00:02:31,830 --> 00:02:36,790
is the authentication taken as the first
to get you get when you log on at that

34
00:02:36,790 --> 00:02:37,530
point

35
00:02:37,530 --> 00:02:42,810
use that to get a TSA taken granting
service ticket which provides access to

36
00:02:42,810 --> 00:02:47,890
the Kerberos enable service the key
point of this graphic is that the data

37
00:02:47,890 --> 00:02:49,899
is written when the ticket is create it

38
00:02:49,900 --> 00:02:57,630
including the group membership let's
walk through this flow so user logs on

39
00:02:57,630 --> 00:03:02,260
with username and password password is
converted to the NTLM password hash

40
00:03:02,260 --> 00:03:09,530
which is used as part of that
authentication ticket requests TGT

41
00:03:09,530 --> 00:03:14,580
request as part of the step one which is
the AAS request and the DEC checks the

42
00:03:14,580 --> 00:03:19,160
user information such as the log on
restrictions group membership etc and

43
00:03:19,160 --> 00:03:25,900
creates a TGT the TGT is encrypted with
the demand curve TGT account and only

44
00:03:25,900 --> 00:03:29,980
that account can open read it which
means only the DCE can view it so it's

45
00:03:29,980 --> 00:03:35,030
under back to the user as part of the
Sept two which is the ACE response then

46
00:03:35,030 --> 00:03:40,989
the user wants to access a resource we
log in like an Exchange server share so

47
00:03:40,989 --> 00:03:45,709
then you have Sep 3 which is that he's
yes request where that TTT it got and

48
00:03:45,709 --> 00:03:49,720
step two is sent back to the demand
controller say hey it's still me I need

49
00:03:49,720 --> 00:03:53,670
a service ticket and then the bank
stroller goes ahead and checks the TGT

50
00:03:53,670 --> 00:03:58,359
by checking to see if it can open it was
packed validation to see if the check

51
00:03:58,360 --> 00:04:03,430
some checks out and then delivers the
TGS to the user based on the information

52
00:04:03,430 --> 00:04:08,190
that was already provided at that point
the user connects to the server hosting

53
00:04:08,190 --> 00:04:14,260
service and Sep 5 part of an AP request
and presents at TGS at service ticket so

54
00:04:14,260 --> 00:04:19,409
it's ok this is who I say I am and then
the Application Server service on that

55
00:04:19,410 --> 00:04:23,390
opens up that TDs and if it's valid then
checks to see if the user should have

56
00:04:23,390 --> 00:04:28,510
access future authentication is required
then Sep 6 happens but that really

57
00:04:28,510 --> 00:04:32,469
doesn't happen and the part in orange
pretty much never happens which SPAC

58
00:04:32,470 --> 00:04:37,030
validation of that actual TGS they go to
the application server

59
00:04:37,030 --> 00:04:43,260
so the key points of this process is
that Microsoft uses the NTLM password

60
00:04:43,260 --> 00:04:48,960
hash for Kerberos Arshi for encryption
this is going to come and play later

61
00:04:48,960 --> 00:04:55,900
policy is also only checked when that
TTT is created and that each is the user

62
00:04:55,900 --> 00:05:01,159
authenticator to the Dec so if I have a
TGT and I present to the DCU the DEC

63
00:05:01,160 --> 00:05:05,630
believes that I am me so if I get
someone else's TGT and presented to the

64
00:05:05,630 --> 00:05:07,560
Dec its gonna believe that I am that
person

65
00:05:07,560 --> 00:05:12,680
the DEC only checks user account after
the TGT is 20 minutes old to see if the

66
00:05:12,680 --> 00:05:17,210
user's account YouTube account is valid
and enabled so there's some interesting

67
00:05:17,210 --> 00:05:21,430
things with that and as I mentioned the
TGS pactel additional occurs in specific

68
00:05:21,430 --> 00:05:25,540
circumstances effectively if it runs as
a service pack validations optional

69
00:05:25,540 --> 00:05:31,620
disabled by default so let's talk about
all fence and what attackers or after

70
00:05:31,620 --> 00:05:35,030
other than maybe sharks with frickin
laser beams on their heads

71
00:05:35,030 --> 00:05:43,080
backers of two primary goals data access
and persistence so attackers are always

72
00:05:43,080 --> 00:05:45,180
the people out on the internet trying
again

73
00:05:45,180 --> 00:05:50,520
insiders have that persistence and want
to find the juiciest aidid extract

74
00:05:50,520 --> 00:05:54,669
well if you work with computers either
on the InfoSec siders and admits time

75
00:05:54,669 --> 00:05:57,090
learn power show if you haven't already

76
00:05:57,090 --> 00:06:02,400
Dave Kennedy called PowerShell bash for
Windows it's that powerful our shows a

77
00:06:02,400 --> 00:06:07,370
built-in Windows component and all
supported versions of Windows starting

78
00:06:07,370 --> 00:06:13,500
next week we just 2003 goes on the way
and it provides access to WMI and calm

79
00:06:13,500 --> 00:06:18,569
leveraging the dotnet framework is a
Microsoft binary least PowerShell that

80
00:06:18,569 --> 00:06:22,639
easy is so it's white listed in blocking
it can break things especially exchange

81
00:06:22,639 --> 00:06:29,380
or other Microsoft apps and logon
scripts and a lot of other things but

82
00:06:29,380 --> 00:06:32,500
the thing that attackers love about
power shows it can download and execute

83
00:06:32,500 --> 00:06:37,740
code from memory and memory from the
Internet using a command like called

84
00:06:37,740 --> 00:06:42,250
invoke expression and the.net download
function which makes it a favorite act

85
00:06:42,250 --> 00:06:47,060
like she did nothing else check out the
powersports get over posit worried

86
00:06:47,060 --> 00:06:51,159
because this is what is hackers are
using quite extensively specifically

87
00:06:51,159 --> 00:06:56,449
invoke make a switch enables many
cast-iron memory it's a powershell

88
00:06:56,449 --> 00:07:00,419
version and it enables dumping
credentials without touching anything

89
00:07:00,419 --> 00:07:06,210
that or ever touching disc get upp
password finds and decrypts the

90
00:07:06,210 --> 00:07:10,880
passwords in Group Policy Preferences
will talk about minute and PowerView

91
00:07:10,880 --> 00:07:17,389
includes great tool for finding work
computers admins are logged onto the

92
00:07:17,389 --> 00:07:20,650
easiest way for service discovery when
an attacker is on the network doing

93
00:07:20,650 --> 00:07:24,989
recon is by something I call spin
scanning just leveraging standard LDAP

94
00:07:24,990 --> 00:07:30,250
queries using and looking for service
principal names or spends is in the

95
00:07:30,250 --> 00:07:33,599
signpost that are used to identify
service on a server that supports

96
00:07:33,599 --> 00:07:38,969
Kerberos authentication server the
service registries at spin and Active

97
00:07:38,969 --> 00:07:42,509
Directory associating with the computer
or the user object if it's using a

98
00:07:42,509 --> 00:07:48,650
service account and spin scanning enable
service discovery without network port

99
00:07:48,650 --> 00:07:55,620
scanning so basically you can see that
the sequel server has a spin associated

100
00:07:55,620 --> 00:08:00,529
with it what's in blue is the service
spent i per class and then what's in

101
00:08:00,529 --> 00:08:01,849
oranges the FQDN

102
00:08:01,849 --> 00:08:07,128
about server often it's the NetBIOS name
as well and that the NUC after the colon

103
00:08:07,129 --> 00:08:10,929
his support that it's running on so I
can scan the entire Active Directory

104
00:08:10,929 --> 00:08:14,878
forest and find out all the City sequel
servers that are there and we'll put

105
00:08:14,879 --> 00:08:19,059
your running on now may not show a port
but it may show the instance which is

106
00:08:19,059 --> 00:08:24,899
just as Valley I wrote a powershell
script that does this and it just simply

107
00:08:24,899 --> 00:08:31,149
looks for that MS SQL service principal
name now this can be run as an admin his

108
00:08:31,149 --> 00:08:35,110
career as a user no admin rights
required and leverages the functionality

109
00:08:35,110 --> 00:08:41,719
you get powerful version 2 which is on
Windows 7 2008 or two by default so you

110
00:08:41,719 --> 00:08:44,980
can see here you can get a lot of
information is a user about what's out

111
00:08:44,980 --> 00:08:50,720
there is for a sequel go such as The
Secret Service count on the bottom so

112
00:08:50,720 --> 00:08:53,790
getting the main out in Active Directory
unfortunately there's a belief that

113
00:08:53,790 --> 00:08:58,849
gettin da rights and most enterprises is
difficult I spoken to a number of Penn

114
00:08:58,850 --> 00:09:03,610
testers and red teamers and pretty much
they say that closing in on a per cent

115
00:09:03,610 --> 00:09:09,209
they get to demand admin in hours maybe
a couple of days they're taking their

116
00:09:09,209 --> 00:09:13,268
time it takes a week but realistically
and a lot of enterprises its way to easy

117
00:09:13,269 --> 00:09:18,279
there several different ways an attacker
escalates access from any user on the

118
00:09:18,279 --> 00:09:23,610
system to demand out there generally
speaking admins like most people often

119
00:09:23,610 --> 00:09:28,910
hit the easy but I don't think out of
the box or back service account

120
00:09:28,910 --> 00:09:33,969
passwords rarely change even if there's
policy so let's talk about service

121
00:09:33,970 --> 00:09:39,180
accounts you can also spend scan for
service accounts I found this to be the

122
00:09:39,180 --> 00:09:43,050
most reliable way to find service
accounts in Active Directory because

123
00:09:43,050 --> 00:09:46,810
these accounts that you find through
here are the accounts are running as a

124
00:09:46,810 --> 00:09:53,229
service on the server and this is much
better than trying to look search within

125
00:09:53,230 --> 00:09:57,680
Active Directory for service in the name
as he see in the encounter or what have

126
00:09:57,680 --> 00:10:02,079
you and the script discovers all service
accounts which are those user accounts

127
00:10:02,079 --> 00:10:05,069
with The Associated span and the
actor-director force and provides its

128
00:10:05,069 --> 00:10:09,519
level of information and I can see here
that this sequel age and is running on a

129
00:10:09,519 --> 00:10:12,750
lot of for instance equal servers that I
can check and target

130
00:10:12,750 --> 00:10:18,810
attacker and crack service account
passwords without admin access for

131
00:10:18,810 --> 00:10:23,770
communication to the target server if
you were using service account passwords

132
00:10:23,770 --> 00:10:28,990
that are the same length as your domain
password minimum you need to change that

133
00:10:28,990 --> 00:10:34,260
so here's the scenario the attacker gets
a foothold on a computer and request the

134
00:10:34,260 --> 00:10:38,680
TGS ticket that service ticket from the
demand control maybe this is the

135
00:10:38,680 --> 00:10:42,579
attacker that has malware running on
that system and requested on behalf of

136
00:10:42,580 --> 00:10:44,900
the user the user never sees it

137
00:10:44,900 --> 00:10:49,350
ok so we go ahead and target those those
service accounts we mentioned and showed

138
00:10:49,350 --> 00:10:55,370
in the last slide we get the service
tickets for those services get those on

139
00:10:55,370 --> 00:10:59,060
the system they gonna memory there in
the userspace I can track them from

140
00:10:59,060 --> 00:11:03,939
memory saving the file you can upload
them to a web server web site on the

141
00:11:03,940 --> 00:11:08,850
internet and then I can have my computer
that I own somewhere else connected that

142
00:11:08,850 --> 00:11:13,330
pull down those ticket files and run at
all its Python base called Kerberos

143
00:11:13,330 --> 00:11:19,230
against it and then Kerberos is going to
tell me which passwords are associated

144
00:11:19,230 --> 00:11:23,240
for those servers principal names or
those whose TGS tickets which are

145
00:11:23,240 --> 00:11:27,980
associated with the service account so
without access to the main controller

146
00:11:27,980 --> 00:11:32,000
without admin access on the network I've
now cracked service accounts within the

147
00:11:32,000 --> 00:11:37,100
demand without any unusual activity in
the environment and if your service

148
00:11:37,100 --> 00:11:42,990
account passwords are we are using
regular words and phrases that I have

149
00:11:42,990 --> 00:11:50,230
been one of these is a member of demand
admin since gay came over so timid in

150
00:11:50,230 --> 00:11:53,830
release Kerberos the Derby Conn last
year so this is a publicly available on

151
00:11:53,830 --> 00:11:59,450
the Internet

152
00:11:59,450 --> 00:12:07,080
2006 Microsoft desktop Sanders
policymaker which they rebranded

153
00:12:07,080 --> 00:12:12,010
re-released with Windows Server 2008 as
Group Policy Preferences

154
00:12:12,010 --> 00:12:15,990
Group Policy Preferences provides useful
capability leverage group policy to

155
00:12:15,990 --> 00:12:20,280
deploy a scheduled task explicit
credentials and change the local admin

156
00:12:20,280 --> 00:12:24,030
passwords on their computers large
number of computers are wants pretty

157
00:12:24,030 --> 00:12:28,910
much every computer in the Ennio you be
confidential prudential password is a

158
00:12:28,910 --> 00:12:33,500
yes 256 bit encrypted which should be
good enough

159
00:12:33,500 --> 00:12:38,770
Microsoft published it on MSDN so the
private key for this encryption is

160
00:12:38,770 --> 00:12:43,600
available on MSDN which means that the
attackers can just take the encrypted

161
00:12:43,600 --> 00:12:46,340
data run an AST crypt against it

162
00:12:46,340 --> 00:12:52,110
using this aske and get the credentials
this issue was first identified publicly

163
00:12:52,110 --> 00:12:56,780
in January 2012 by milling around the
blog post explaining windows 2008 Group

164
00:12:56,780 --> 00:13:03,209
Policy Preferences just a few months
later Chris Campbell posted about it

165
00:13:03,210 --> 00:13:09,470
wrote some powerful code to do this this
is now part of Powersports so all of the

166
00:13:09,470 --> 00:13:14,220
domingo policies are in the stock
location so all the attacker has to do

167
00:13:14,220 --> 00:13:20,410
is search this location for XML files as
XML files that have credentials have a C

168
00:13:20,410 --> 00:13:25,860
password attribute which has that random
blog data by using that decrypt

169
00:13:25,860 --> 00:13:31,240
est crypt function we can take that blob
of data and decrypt it it's a pretty

170
00:13:31,240 --> 00:13:36,790
good password but now the attacker has
it again if that's a domain admin

171
00:13:36,790 --> 00:13:43,050
prudential the attacker and that work
well Microsoft fix this kind of two

172
00:13:43,050 --> 00:13:47,550
years after the idea issues identified
exploited there's a patch MS-forty now

173
00:13:47,550 --> 00:13:52,819
25 release last year but this must be
installed on all of the computers are

174
00:13:52,820 --> 00:13:58,420
used to manage Group Policy and all it
doesn't stop you from putting in the

175
00:13:58,420 --> 00:14:01,660
credentials but the issue is that if you
already have a policy preference

176
00:14:01,660 --> 00:14:06,130
credentials are insist ball this doesn't
remove them so you do have to go back

177
00:14:06,130 --> 00:14:11,840
and check Microsoft has a script to scan
siskel to let you know if if you have

178
00:14:11,840 --> 00:14:12,670
this issue

179
00:14:12,670 --> 00:14:18,160
not so even if there are no domain admin
credentials in Group Policy Preferences

180
00:14:18,160 --> 00:14:22,469
the same local admin account credentials
across multiple computers can lead to

181
00:14:22,470 --> 00:14:27,310
widespread compromise standard West
build image added passwords are set

182
00:14:27,310 --> 00:14:29,920
install usually never change

183
00:14:29,920 --> 00:14:34,630
attackers love this because a sink
single system compromise with escalates

184
00:14:34,630 --> 00:14:38,090
and can move laterally across all these
other systems because they have the

185
00:14:38,090 --> 00:14:42,710
exact same local admin account and
password and all they have to do is find

186
00:14:42,710 --> 00:14:50,590
one computer that a domain admin is
logged onto again its two main over many

187
00:14:50,590 --> 00:14:55,660
cats Windows program created by Benjamin
doping 2007 learn more about Windows

188
00:14:55,660 --> 00:15:00,640
credentials are just some of the many
catholics capabilities and for this talk

189
00:15:00,640 --> 00:15:04,710
will be focusing on credentials after
injection items listed within a strict

190
00:15:04,710 --> 00:15:09,180
required debugger system rights and the
powersports will invoke kneecaps

191
00:15:09,180 --> 00:15:14,319
provides functionality and PowerShell
and I use both interchangeably both

192
00:15:14,320 --> 00:15:19,330
inner invoking katsumi gets cuz they
actively invoke many cats as many guests

193
00:15:19,330 --> 00:15:23,380
let's look at what it does it does
credentials from Alsace that's a

194
00:15:23,380 --> 00:15:27,250
protected space and memory in Windows
which includes any account of logged on

195
00:15:27,250 --> 00:15:28,800
recently

196
00:15:28,800 --> 00:15:32,930
you can see here it shows the cleartext
password for users which may include

197
00:15:32,930 --> 00:15:38,790
credentials from Edmonds that have
logged on days or even weeks ago so log

198
00:15:38,790 --> 00:15:43,959
off properly or reboot now Microsoft's
this again and when does a tough one in

199
00:15:43,960 --> 00:15:48,630
2012 are too since they don't store
these passwords and reversal will form

200
00:15:48,630 --> 00:15:55,590
where you can see the clear text here or
the alum hash is not stored here either

201
00:15:55,590 --> 00:16:02,180
Kb 287 1997 came out last spring back
porch this into Windows 7 2008 R two

202
00:16:02,180 --> 00:16:08,989
which enables better clearing of
credentials in LCS and there's a reg key

203
00:16:08,990 --> 00:16:13,420
to you can enable with this patch which
will prevent that clear text password

204
00:16:13,420 --> 00:16:16,620
from being stored in Alsace again it's
reversible but it's effectively cleared

205
00:16:16,620 --> 00:16:21,930
tax as you can see on the right if I
ever service configured with explicit

206
00:16:21,930 --> 00:16:24,520
credentials those credentials are
analysis

207
00:16:24,520 --> 00:16:29,760
us so if a server gets compromised that
has credentials running as demand admin

208
00:16:29,760 --> 00:16:33,550
the attacker after they can dump these
credentials now has two main admin

209
00:16:33,550 --> 00:16:34,939
access on the network

210
00:16:34,940 --> 00:16:41,610
don't use built-in groups create custom
delegation members of plant operators

211
00:16:41,610 --> 00:16:47,820
and account operators can log on to the
main controllers by default so if you

212
00:16:47,820 --> 00:16:51,930
were using account operators or print
operators in the demand you need to stop

213
00:16:51,930 --> 00:16:55,229
doing that you can do that by modifying
the group policy that applies to make

214
00:16:55,230 --> 00:17:01,960
change this group policy please because
if this is the scenario situation in

215
00:17:01,960 --> 00:17:06,620
your enterprise attacker to compromise a
single helpdesk account potentially

216
00:17:06,619 --> 00:17:12,708
compromising the main so there are two
primary options for an attacker

217
00:17:12,709 --> 00:17:18,950
credentials using code directly on the
DCE or remotely or to copy the data from

218
00:17:18,950 --> 00:17:25,180
somewhere that exist on the network to
an attacker control system so let's look

219
00:17:25,180 --> 00:17:28,760
at what many cats can do we can dump
credentials from Alsace on the DEC

220
00:17:28,760 --> 00:17:33,980
weekend unpretentious from the Active
Directory database on the DEC and the

221
00:17:33,980 --> 00:17:38,140
script EDT account password hashes most
useful because it enables the attacker

222
00:17:38,140 --> 00:17:39,680
to create golden tickets

223
00:17:39,680 --> 00:17:45,160
hella or we could use the default
administrator account the top pass the

224
00:17:45,160 --> 00:17:48,440
house and just continue with that when
that password changes we can't do

225
00:17:48,440 --> 00:17:55,110
anything with course there's no need for
custom software because we can use task

226
00:17:55,110 --> 00:18:02,689
manager to do an LDAP Elsass process
stop it dumps else asked to a fire part

227
00:18:02,690 --> 00:18:07,500
of a dump file format although domain
credentials on ABC but it will provide

228
00:18:07,500 --> 00:18:12,260
some interesting ones and many cats can
use this dump file the same manner as

229
00:18:12,260 --> 00:18:16,740
when it connects alsace so we can still
get the same information now without

230
00:18:16,740 --> 00:18:23,500
using any custom software on the PC
server we can also use W W Mac which is

231
00:18:23,500 --> 00:18:26,360
a remote W my function to run

232
00:18:26,360 --> 00:18:32,100
coder run run a command on a road system
which is built into Windows and has been

233
00:18:32,100 --> 00:18:35,439
there for years you can also use
PowerShell remoting do the same thing

234
00:18:35,440 --> 00:18:40,710
effectively as will create or copying
System Volume Shadow Copy backup copy

235
00:18:40,710 --> 00:18:45,250
the files from the VSS snapshot to the
local computer and then we have what we

236
00:18:45,250 --> 00:18:49,800
need we have two did file screenshot
shows the attacker use the cleartext

237
00:18:49,800 --> 00:18:54,970
password discovered earlier using many
cats but if we don't have that we just

238
00:18:54,970 --> 00:19:00,390
passed the ticket that we may have
stolen from another user right and use W

239
00:19:00,390 --> 00:19:08,630
Mexican actor the Dec so NDSU tell us
the command utility for natively working

240
00:19:08,630 --> 00:19:13,720
with the Active Directory database
enables offense a creation for Dec promo

241
00:19:13,720 --> 00:19:20,190
IFM is used for PC promo to install for
media so the server is being promoted to

242
00:19:20,190 --> 00:19:23,670
a domain controller doesn't have to copy
all that demand data from another Dec

243
00:19:23,670 --> 00:19:29,250
across the network which will save a lot
of time if you have a large main the IFM

244
00:19:29,250 --> 00:19:34,760
set as a copy of the NTSB I did file
created in this instance in ctown spy

245
00:19:34,760 --> 00:19:39,040
may be staged on a share for copying to
a server that's going to be promoted to

246
00:19:39,040 --> 00:19:44,659
EDC may be found on a new server that is
not even more potent yet which may not

247
00:19:44,660 --> 00:19:50,510
be properly secured this does happen in
large environments with lots of DC's and

248
00:19:50,510 --> 00:19:54,360
this file may not be properly secured
and if it's not properly secured a

249
00:19:54,360 --> 00:20:00,689
problem because an attacker may be able
to grab the NTS did file off the backup

250
00:20:00,690 --> 00:20:06,220
share or virtual Dec storage virtual
DC's yes I'm thinking that do because

251
00:20:06,220 --> 00:20:09,920
you want to make sure that any network
accessible location with Dec data spot

252
00:20:09,920 --> 00:20:15,640
is properly secured losing control of
this Dec data from years ago can result

253
00:20:15,640 --> 00:20:20,920
in a full eighty compromise since the
curb chichi account password doesn't

254
00:20:20,920 --> 00:20:26,240
change only demand and should have
access to this Dec data so is the case

255
00:20:26,240 --> 00:20:33,690
someone else does they're effectively
demand you run VMware vCenter admins are

256
00:20:33,690 --> 00:20:37,200
full VMware admins on in that
environment

257
00:20:37,200 --> 00:20:41,370
and they were able to clone a virtual
Dec a copy the data to a local hard

258
00:20:41,370 --> 00:20:46,709
drive without bringing any alarm bells
or any Active Directory security alert

259
00:20:46,710 --> 00:20:51,549
there's no event logs that occur in
eighty when this happens your vCenter

260
00:20:51,549 --> 00:20:56,149
admin group is an Active Directory you
might want to change that

261
00:20:56,149 --> 00:21:00,070
want to delegate the proper rights to
the appropriate groups don't provide an

262
00:21:00,070 --> 00:21:03,460
attacker the ability to a backdoor
Active Directory through server admin

263
00:21:03,460 --> 00:21:09,549
account your virtual admins need to be
considered the main happens because once

264
00:21:09,549 --> 00:21:14,470
an attacker has the NTS typedef I'll
have all of the Active Directory

265
00:21:14,470 --> 00:21:19,789
credentials the screenshots from Cali
box with the impact on Tools installed

266
00:21:19,789 --> 00:21:25,539
the deed is done using the secrets Tom
python script in Elam and packet it's

267
00:21:25,539 --> 00:21:29,000
easy to get the date you on the demand
and I've highlighted the curb TTT

268
00:21:29,000 --> 00:21:42,690
account password hash year

269
00:21:42,690 --> 00:21:46,410
so while passed the house gets all the
press really any credential theft and

270
00:21:46,410 --> 00:21:51,170
reuses bad kid this is protecting the
credentials of your high-level add you

271
00:21:51,170 --> 00:21:56,410
to manage your enterprise admins and he
delegated that group attackers will

272
00:21:56,410 --> 00:22:01,510
often steal and reuse Icarus seconds but
better than that if I'm an attacker and

273
00:22:01,510 --> 00:22:07,210
IQ TNT on password hash I can convert
that into a curb risk-taking and the

274
00:22:07,210 --> 00:22:10,680
password hash that enter your password
as doesn't change till the user change

275
00:22:10,680 --> 00:22:15,710
their password so I can use it in
something called overpass the hash right

276
00:22:15,710 --> 00:22:19,690
basically inject the centerline password
hashing to local system using many cats

277
00:22:19,690 --> 00:22:25,500
and then request Icarus take it as part
of the normal process because many

278
00:22:25,500 --> 00:22:30,330
client many cats clears the keys and
puts the NTLM NTLM hash into the

279
00:22:30,330 --> 00:22:35,040
Kerberos service provider so that way
when I connect to a Kerberos enable

280
00:22:35,040 --> 00:22:39,840
service it does the normal crew stopped
but with the NTLM password hash live

281
00:22:39,840 --> 00:22:44,120
injected in this has used to get those
Kerberos tickets while connecting to the

282
00:22:44,120 --> 00:22:50,060
resources passed the house has some is
detectable I mean you look for when this

283
00:22:50,060 --> 00:22:50,580
event

284
00:22:50,580 --> 00:22:54,990
4624 and you can see that so if I'm an
attacker why would I use something

285
00:22:54,990 --> 00:22:58,720
that's detectable why not use this
Kerberos tickets are normal and we're

286
00:22:58,720 --> 00:23:06,730
going to see that November 18 2014 so
year ago Microsoft released the MS 14068

287
00:23:06,730 --> 00:23:10,930
patch to fix a major issue and now the
courier service validated the pack

288
00:23:10,930 --> 00:23:16,920
validation checks on Kerberos tickets MS
11 or 13 was the last batch relating to

289
00:23:16,920 --> 00:23:22,870
this so this has happened before any
image 14068 exploit enables a user to

290
00:23:22,870 --> 00:23:27,219
modify their Kerberos ticket to become
an ad and the best description of this

291
00:23:27,220 --> 00:23:31,700
is writing pile on your boarding pass as
you get on the plane and its a flight

292
00:23:31,700 --> 00:23:35,230
attendant you're escorted to the cockpit
and then you're asked if you like coffee

293
00:23:35,230 --> 00:23:38,860
before you take off any this is really
bad

294
00:23:38,860 --> 00:23:45,610
and exploiting a vulnerability takes
five minutes I catch was the first

295
00:23:45,610 --> 00:23:50,270
published exploit them as 14068 and that
was two weeks after the patch release

296
00:23:50,270 --> 00:23:57,320
written by Sylvia I guess of python
script that runs on any Python cable

297
00:23:57,320 --> 00:24:04,020
system berry pie maybe we can run
anywhere on the network as long as I can

298
00:24:04,020 --> 00:24:10,220
he communicate with an unpatched to make
sure you want I can you get a pike and

299
00:24:10,220 --> 00:24:15,860
generated see cache file and you inject
that TTT and memory using many cats for

300
00:24:15,860 --> 00:24:20,760
uses it may not be using this ticket
access to the admin dollar share is

301
00:24:20,760 --> 00:24:27,140
granted a mitigating factor here is that
if you have a patched 2008 or to Dec

302
00:24:27,140 --> 00:24:35,620
2008 EC or if you have Windows 2012 2012
ROTC in the same site that ticket won't

303
00:24:35,620 --> 00:24:38,168
work or may not work depending on which
to see it

304
00:24:38,169 --> 00:24:43,750
communicating with but benjamin dopey of
many cats time he wrote his own

305
00:24:43,750 --> 00:24:44,710
windows-based

306
00:24:44,710 --> 00:24:50,030
14068 exploit called Kat Keogh and
improves on high-tech it finds and

307
00:24:50,030 --> 00:24:54,100
targets the vulnerable DC's in the
environment and works regardless if they

308
00:24:54,100 --> 00:24:57,899
are patched or 2012 2012 are to be
seized on the site

309
00:24:57,900 --> 00:25:03,990
same exploit path spike act but it adds
another step at the end resulting in

310
00:25:03,990 --> 00:25:09,309
having a ballot EGT which can be
presented to NEDC and I kept the TGT

311
00:25:09,309 --> 00:25:13,639
that it had had their checks on there so
it was a patch to see it would ignored

312
00:25:13,640 --> 00:25:16,270
it would pick up an error

313
00:25:16,270 --> 00:25:23,900
Benjamin's khaki suede is it uses the
exploit generated TGT to get an

314
00:25:23,900 --> 00:25:30,809
impersonation TGT which works everywhere
he goes on get up and this graphic shows

315
00:25:30,809 --> 00:25:36,790
the 1402 68 exploit attempting to
exploit HTC in the site one by one the

316
00:25:36,790 --> 00:25:40,990
first highlight package and Plaxico
Burress air response from patch 2008 R

317
00:25:40,990 --> 00:25:44,950
two D see blue highlight is the AAS
request

318
00:25:44,950 --> 00:25:50,809
to an unpatched 2008 R two D C which
responds with an ass response as we

319
00:25:50,809 --> 00:25:56,279
mentioned earlier that's where you get
your TGT so we can see that this is

320
00:25:56,279 --> 00:26:01,760
searching for it I found it and
exploited it so user admin five minutes

321
00:26:01,760 --> 00:26:08,490
to alter Mann yes I'm trends report
which was released earlier this year one

322
00:26:08,490 --> 00:26:13,730
attacker to compromise a few computers
quickly get to Manhattan rights to once

323
00:26:13,730 --> 00:26:17,750
they get domain admin rights to use cold
it Korea's golden tickets to persist

324
00:26:17,750 --> 00:26:23,169
even when all the demand passwords are
reset to let's look at korea scorching

325
00:26:23,169 --> 00:26:27,570
forging her mistake its depends on the
password hash available to the attacker

326
00:26:27,570 --> 00:26:32,250
a golden ticket requires occurred TTT
password data while a silver take it

327
00:26:32,250 --> 00:26:37,120
requires the service account password
data an attacker can create ford's

328
00:26:37,120 --> 00:26:42,820
Kerberos tickets anywhere even offline
and use anywhere on the network with out

329
00:26:42,820 --> 00:26:47,149
elevator rights of access without
modifying any groups

330
00:26:47,149 --> 00:26:50,699
granted they have to get to Manhattan
rights in order to you first have the

331
00:26:50,700 --> 00:26:56,919
curb TTT but as I've shown that can
happen a lot of enterprises the courtesy

332
00:26:56,919 --> 00:27:04,750
account encrypts and signs the pack in
the service tickets the TGS as well as

333
00:27:04,750 --> 00:27:08,000
in TGT is it actually increases that
will occur to you to use the only one

334
00:27:08,000 --> 00:27:12,830
that can open it to see password does
not changed except when raising the main

335
00:27:12,830 --> 00:27:17,080
functional level from a lower level of
2008 or above so if you're in a

336
00:27:17,080 --> 00:27:20,908
situation where you're running 2003 when
you go up to 2008 it's going to change

337
00:27:20,909 --> 00:27:25,659
because there's a yes encryption support
I seen her teaching accounts in

338
00:27:25,659 --> 00:27:30,730
environments which have passwords in
2002 and 2003 meaning they have never

339
00:27:30,730 --> 00:27:36,419
changed since the 80 demand was stood up
to a compromise this password needs to

340
00:27:36,419 --> 00:27:42,220
change twice since new password or cat
with the curb TGT account and both are

341
00:27:42,220 --> 00:27:44,750
valid for tickets

342
00:27:44,750 --> 00:27:49,460
Microsoft posted occurred TTT password
change script on TechNet earlier this

343
00:27:49,460 --> 00:27:55,710
year which you can check out and test
before using production now the courage

344
00:27:55,710 --> 00:27:58,070
et count has the same password last Sept

345
00:27:58,070 --> 00:28:02,419
is when the demand was set up until it's
changed the MSDS key version number

346
00:28:02,420 --> 00:28:06,400
increments each time the password is
changed and if the password last cent

347
00:28:06,400 --> 00:28:10,210
date is the same as account creation
date then you know it's never changed

348
00:28:10,210 --> 00:28:14,170
you already see if you have a read only
domain controller in your environment it

349
00:28:14,170 --> 00:28:18,960
has occurred to YouTube account shown on
the bottom those random numbers after it

350
00:28:18,960 --> 00:28:25,430
is cryptographically isolated from the
domain eg account has a back link

351
00:28:25,430 --> 00:28:33,000
pointing back to the RTC its associated
with golden tickets became infamous you

352
00:28:33,000 --> 00:28:37,260
know more famous during stepped-up wall
and Benjamin Delphi's presentation of

353
00:28:37,260 --> 00:28:41,860
black hat last year in Vegas golden
ticket is about EDT since encrypted and

354
00:28:41,860 --> 00:28:46,219
signed by the two main parties et
account it bypasses the security checks

355
00:28:46,220 --> 00:28:52,340
the DEC typically does because ABC's not
involved in its creation used to get

356
00:28:52,340 --> 00:28:55,590
back at TGS service tickets from the Dec

357
00:28:55,590 --> 00:28:59,550
in the 84th and provides a great method
for persisting on a demain with access

358
00:28:59,550 --> 00:29:05,480
to everything you can see here there's
no a US request to respond steps one and

359
00:29:05,480 --> 00:29:09,680
two are skipped when you're using a
forged TGT from the workstation but

360
00:29:09,680 --> 00:29:13,690
everything else works just fine so let's
step through creating a golden ticket

361
00:29:13,690 --> 00:29:18,560
first we need to curb TTT account
password and use older method up top we

362
00:29:18,560 --> 00:29:21,730
can use a newer one down below which
gives us both the current and the

363
00:29:21,730 --> 00:29:27,910
previous years ago and taking using
account and Luke Skywalker whose domain

364
00:29:27,910 --> 00:29:34,400
admin in my lab who has the ridge 2601
which belongs to Luke Skywalker and many

365
00:29:34,400 --> 00:29:39,240
cashiers at the curb TTT account and
password as its service came see service

366
00:29:39,240 --> 00:29:47,010
be there to encrypt and sign that EDT
group IDs listener domain users domain

367
00:29:47,010 --> 00:29:52,750
admins Group Policy creator Owners
scheme admins and enterprises so this

368
00:29:52,750 --> 00:29:57,190
ticket when I presented to the domain
controller it's going to say I have full

369
00:29:57,190 --> 00:30:02,270
access on the domain and as you can see
on the bottom and who are my local

370
00:30:02,270 --> 00:30:05,320
Windows box says i'm joe user

371
00:30:05,320 --> 00:30:12,610
or I can create a fictional user I can
forge a golden ticket and Sam Darth

372
00:30:12,610 --> 00:30:18,639
Vader which doesn't exist on the network
and impersonate Luke Skywalker and spoof

373
00:30:18,639 --> 00:30:25,490
is accessed by using the same rich 2601
know that we could make up

374
00:30:25,490 --> 00:30:32,149
impersonated different account such as a
CEO or director R&D and use that rid or

375
00:30:32,149 --> 00:30:36,219
even add Luke Skywalker's read to the
groupId field which would still provide

376
00:30:36,220 --> 00:30:40,559
access to whatever access that person
has including all the groups that

377
00:30:40,559 --> 00:30:44,139
they're a member of this means golden
tickets can be customized impersonate

378
00:30:44,139 --> 00:30:50,399
any one was moved out to us anything it
seemed pretty straightforward but what

379
00:30:50,399 --> 00:30:55,989
are silver tickets while the golden
ticket is a force TGT valid for gaining

380
00:30:55,990 --> 00:31:00,059
access to any courier service in the
network the silver taken as a forage TGS

381
00:31:00,059 --> 00:31:04,059
which means that its scope is limited to
whatever services target announced a

382
00:31:04,059 --> 00:31:10,110
specific server attacker needs a service
account password hash maybe using

383
00:31:10,110 --> 00:31:14,870
Kerberos did earlier my opinions over
tickets can be more dangerous than

384
00:31:14,870 --> 00:31:18,549
golden tickets while the scope is more
limited than golden tickets are required

385
00:31:18,549 --> 00:31:23,149
has to be easier to get and there's no
communication with the main stroller

386
00:31:23,149 --> 00:31:30,428
logging your security events on your
DC's you may never see this so so we're

387
00:31:30,429 --> 00:31:35,720
taking exploitation scenario companys
was breached the name the attacker

388
00:31:35,720 --> 00:31:39,509
dumped all of the eighty credentials to
corporate I T decided instead of

389
00:31:39,509 --> 00:31:43,059
rebuilding the whole thing which will
take us years and will go bankrupt let's

390
00:31:43,059 --> 00:31:46,490
just connect to the internet changeover
user accounts or service counter admin

391
00:31:46,490 --> 00:31:50,230
accounts and the curb Pvt we're gonna
change twice so that way the Golden

392
00:31:50,230 --> 00:31:54,600
Tickets camp use it they were using that
but the attacker still has a domain

393
00:31:54,600 --> 00:32:00,590
controller password hashes for the
Associated eighty computer account with

394
00:32:00,590 --> 00:32:05,129
us well we're gonna create a silver
ticket booking look Skywalker's our

395
00:32:05,129 --> 00:32:09,620
buddy and we're going to target the SIP
service on the domain controller which

396
00:32:09,620 --> 00:32:13,850
rides access to the windows filesystem
see dollar dollar etcetera and this

397
00:32:13,850 --> 00:32:16,949
enables the attacker to connect to the
window shares on the DCs

398
00:32:16,950 --> 00:32:22,850
so once the silver tickets create
injected we can access to see our share

399
00:32:22,850 --> 00:32:26,709
on the PC and copy or exploit script to
see when his temper somewhere more

400
00:32:26,710 --> 00:32:34,240
interesting well that's nice but how do
we get it to run another silver taking

401
00:32:34,240 --> 00:32:37,880
impersonating which I Walker again cuz
he's going to show up and logs for all

402
00:32:37,880 --> 00:32:43,559
this activity targeting the host service
on the PC which provides access to

403
00:32:43,559 --> 00:32:47,440
several internal Windows components
which service host automatically covers

404
00:32:47,440 --> 00:32:54,039
this enables creation of a scheduled
task so we use a silver ticket for host

405
00:32:54,039 --> 00:32:58,100
to create or modify scheduled task in
the target PC to run the uploaded

406
00:32:58,100 --> 00:33:02,110
exploit script course we use an
innocuous sounding name or replace an

407
00:33:02,110 --> 00:33:07,219
existing one valid and we confirm that's
ready to run so you are Scott agent

408
00:33:07,220 --> 00:33:11,029
health check is ready to run excellent
what happens when it runs well we

409
00:33:11,029 --> 00:33:17,330
recover my eyes anime so with the
computer account password hash an

410
00:33:17,330 --> 00:33:21,750
attacker to compromise the computer if
that attackers it if that computers ADC

411
00:33:21,750 --> 00:33:26,769
an attacker to compromise a demain all
using silver tickets will by default the

412
00:33:26,769 --> 00:33:31,010
computer password change every 30 days
and two passwords are stored on the

413
00:33:31,010 --> 00:33:36,169
computer account by default much like
her beauty validation won't solve this

414
00:33:36,169 --> 00:33:41,429
because these services are system
services we can create silver tickets

415
00:33:41,429 --> 00:33:47,549
also 24 the WS man HTTP service and then
we can use PowerShell remoting that

416
00:33:47,549 --> 00:33:52,710
connect to the Dec to do the exact same
thing but then we have a show let's talk

417
00:33:52,710 --> 00:33:58,130
about something new

418
00:33:58,130 --> 00:34:07,310
talk about trust tickets for the other
TTT

419
00:34:07,310 --> 00:34:11,090
trust is created their shared past were
called in and around key to success for

420
00:34:11,090 --> 00:34:14,690
all trust whether created by an admin
automatically went out in a new domain

421
00:34:14,690 --> 00:34:20,110
to inaccurately force so after user in
the blue demand is already logged on and

422
00:34:20,110 --> 00:34:24,090
wants to access a resource in the Green
Man across the trust Dec in the blue

423
00:34:24,090 --> 00:34:28,419
demand creates and sends a new TGT to
the user along with referral to the

424
00:34:28,418 --> 00:34:34,859
green demande si this cross trust PDT is
formatted same as any TGT but it's not

425
00:34:34,860 --> 00:34:38,980
signed by the curb chichi account for
either of these demands it signed and

426
00:34:38,980 --> 00:34:44,040
encrypted with the Enter round key of
the forest trust so we get access to

427
00:34:44,040 --> 00:34:49,540
this trust password then we can forge
this cross the main ticket which means

428
00:34:49,540 --> 00:34:53,418
that we can impersonate any user on the
blue demand and get access to any

429
00:34:53,418 --> 00:34:58,540
service or resource in the green the man
that has been permission for the Blue to

430
00:34:58,540 --> 00:35:04,550
me let's see how this works in practice
with an external trust so we're gonna

431
00:35:04,550 --> 00:35:11,760
have a hair and a man here to different
force one other thing with the trust

432
00:35:11,760 --> 00:35:15,980
password also called the trust key it
was extracted can be extracted along

433
00:35:15,980 --> 00:35:20,000
with all user data when dumping eighty
credentials on the top external dollar

434
00:35:20,000 --> 00:35:26,690
sign is a computer account effectively
its trusses and associated user account

435
00:35:26,690 --> 00:35:32,990
which contains a tent on the top this
data can be used for trust tickets we

436
00:35:32,990 --> 00:35:36,229
use a trust password for the external
trust to create the trust to get file

437
00:35:36,230 --> 00:35:43,030
and the trust password is the same as
what I used to create it so to create a

438
00:35:43,030 --> 00:35:47,190
trust in another forest what often
happens is an admin is over here and

439
00:35:47,190 --> 00:35:50,660
types and a password oftentimes a
password emailed over to the other admin

440
00:35:50,660 --> 00:35:53,870
and the other forest and they type it in
over here as well that doesn't change

441
00:35:53,870 --> 00:35:57,880
for 30 days which means anyone who has
the knowledge of that trust password

442
00:35:57,880 --> 00:36:02,540
during those 30 days can create a trust
in person a user's in that blue demand

443
00:36:02,540 --> 00:36:06,970
and access resources in the green in
order to do this we use many caps again

444
00:36:06,970 --> 00:36:08,980
and the process is very similar

445
00:36:08,980 --> 00:36:14,470
creating gold ticket back to same
command just with different options

446
00:36:14,470 --> 00:36:20,509
service key is that trust password hash
and the target is the target domain to

447
00:36:20,510 --> 00:36:25,580
recreate that trust ticket file we use
it and asked EGS Kerberos tool that

448
00:36:25,580 --> 00:36:31,220
benjamin don't be rude and we request a
TDS for service in that targeted to main

449
00:36:31,220 --> 00:36:36,240
resulting TGS we save to file them we
injected and then we can access to share

450
00:36:36,240 --> 00:36:43,459
that we shouldn't be able to access so
we can use this access any resource in

451
00:36:43,460 --> 00:36:47,520
the target domain granted access to
users in the source that mean we can

452
00:36:47,520 --> 00:36:52,240
just smoke then we can impersonate the
limitation here is the trusting them and

453
00:36:52,240 --> 00:36:56,618
that's a man that we're trying to get
access to the resources that are located

454
00:36:56,619 --> 00:37:01,670
there has to have explicit permission
set for groups of users in the trusted

455
00:37:01,670 --> 00:37:05,510
to man-to-man where we're coming from
however a lot of these things tend to be

456
00:37:05,510 --> 00:37:09,850
the way way over permission which means
that it's possible that we can get to me

457
00:37:09,850 --> 00:37:17,368
an admin rights in that green just by
virtue of creating interesting to see

458
00:37:17,369 --> 00:37:22,260
how this works between remains in a deep
forest many cats can extract all trust

459
00:37:22,260 --> 00:37:25,800
data from the accurate read to me know
that the trust he doesn't change for 30

460
00:37:25,800 --> 00:37:26,490
days

461
00:37:26,490 --> 00:37:30,560
trusting the main machine account
policy-setting same content as earlier

462
00:37:30,560 --> 00:37:36,980
service tea service key is the password
and the name target is the target man a

463
00:37:36,980 --> 00:37:42,600
cutie and we went through the same
process we injected but once this target

464
00:37:42,600 --> 00:37:48,279
is past user is an enterprise admin for
the 84th and has da writes the dc-in the

465
00:37:48,280 --> 00:37:53,650
target the main so even if we've
compromised that one demand in the 80

466
00:37:53,650 --> 00:37:58,250
forests a child I mean we can now
customize the parent and become NEA and

467
00:37:58,250 --> 00:38:02,470
the entire course I'm golden tickets not
really help with this because a golden

468
00:38:02,470 --> 00:38:04,368
ticket is limited to its on demand

469
00:38:04,369 --> 00:38:10,340
unless that demand is the route to man
the parent domain and host the EA group

470
00:38:10,340 --> 00:38:13,730
this gets around that

471
00:38:13,730 --> 00:38:17,490
so in a multi-domain 84 seats to man as
a trust with the least one other domain

472
00:38:17,490 --> 00:38:22,129
and each trusses and associated password
can be used for trusting so we can

473
00:38:22,130 --> 00:38:26,460
compromise a one-man to potentially
compromised another reducing the eighty

474
00:38:26,460 --> 00:38:30,000
computer account policy can mitigate
this attack since the trespasser change

475
00:38:30,000 --> 00:38:34,720
on schedule change more frequently so
the best medication courses don't let

476
00:38:34,720 --> 00:38:41,730
attackers so that's hockey fence
computer security defense sometimes

477
00:38:41,730 --> 00:38:45,890
feels like it's 300 vs 300,000

478
00:38:45,890 --> 00:38:49,190
team activity should align with one of
these items each of these should raise

479
00:38:49,190 --> 00:38:53,369
the bar making the attackers job more
difficult really what we need to do is

480
00:38:53,369 --> 00:38:57,730
set up as many hutus possible that
hackers have to jump through them which

481
00:38:57,730 --> 00:39:01,010
increases the potential assault tip
their hand and let us know that were on

482
00:39:01,010 --> 00:39:03,630
there on our network

483
00:39:03,630 --> 00:39:08,930
14068 exploit packets can be detected on
the wire according to the curb respect a

484
00:39:08,930 --> 00:39:15,569
TGT might actually request request
without a pack but at EGS shin so if you

485
00:39:15,570 --> 00:39:19,230
create it IDs things that are set up
this way you can detect when these are

486
00:39:19,230 --> 00:39:25,680
being used at the beginning of this year
identified indicators to detect golden

487
00:39:25,680 --> 00:39:29,868
tickets and so ridiculous I discovered
events relating to forge Kerberos

488
00:39:29,869 --> 00:39:34,160
tickets are correctly include the name
and information service tickets have a

489
00:39:34,160 --> 00:39:40,399
blank domain name or made up CD and so
the short to medium or NetBIOS name and

490
00:39:40,400 --> 00:39:43,950
while detection of this type is never
100% work great

491
00:39:43,950 --> 00:39:49,359
identifying won four tickets four years
subsequently many castles updated in

492
00:39:49,359 --> 00:39:55,900
April on the main field is now shown on
the bottom so any use of newer many cats

493
00:39:55,900 --> 00:39:58,990
worsens will likely have to demand field
set on the bottom lesser customized

494
00:39:58,990 --> 00:40:04,180
noted the Golden Ticket events are on
the DC's and silver tickets will be on

495
00:40:04,180 --> 00:40:09,270
that targeted server unless of course
that target server is the Dec so if

496
00:40:09,270 --> 00:40:12,380
you're not pulling a security events
from your other servers in addition to

497
00:40:12,380 --> 00:40:17,930
your DC's may want to look at that and
this is an example of what gets log when

498
00:40:17,930 --> 00:40:21,399
we create that fictional user later
using a said that doesn't exist that's

499
00:40:21,400 --> 00:40:23,119
it doesn't resolve is it doesn't

500
00:40:23,119 --> 00:40:28,140
zest and this is where we say the
account name is Darth Vader and we use

501
00:40:28,140 --> 00:40:34,410
Skywalker's so there's some unusual
things that show up in these events if

502
00:40:34,410 --> 00:40:38,308
you have a Dec without the MS 14068
patchy may see these events on the Dec

503
00:40:38,309 --> 00:40:45,130
one of them is 14068 duties use key
points of the slide ensure your PC build

504
00:40:45,130 --> 00:40:51,640
process involves patching server with Ms
14068 before running Dec from you don't

505
00:40:51,640 --> 00:40:58,339
do that she will very likely a
compromised our show has been talked

506
00:40:58,339 --> 00:40:59,930
about PowerShell past years

507
00:40:59,930 --> 00:41:03,999
embraced on blocking our shows at all
just like the others it can be abused

508
00:41:03,999 --> 00:41:08,459
the attackers not gonna use PowerShell
their use W make their gonna use to be

509
00:41:08,460 --> 00:41:15,369
my they're going to use VBScript they're
gonna use anything they can exact a note

510
00:41:15,369 --> 00:41:18,829
that block in the PowerShell daddy
exceed doesn't stop our show from being

511
00:41:18,829 --> 00:41:22,369
run our show as part of the Windows
management framework which works under

512
00:41:22,369 --> 00:41:28,430
the covers and the execution policy is
not a security man so you want to limit

513
00:41:28,430 --> 00:41:35,249
PowerShell remoting on by using when are
am and if possible disabled PowerShell

514
00:41:35,249 --> 00:41:42,089
remoting on DC's once your PowerShell v3
enabled v3 out there you can enable

515
00:41:42,089 --> 00:41:46,749
PowerShell module logging which writes
all of the code that shows up in

516
00:41:46,749 --> 00:41:50,720
PowerShell into the operation to
PowerShell operation law you can pull

517
00:41:50,720 --> 00:41:53,988
that back into your event monitoring
system actually see what's going on in

518
00:41:53,989 --> 00:41:57,999
your environment which makes it easier
to detect offensive power show usage

519
00:41:57,999 --> 00:42:04,169
better yet leverage metering if you have
a sec I'm a lot of organizations do or

520
00:42:04,170 --> 00:42:05,539
something similar

521
00:42:05,539 --> 00:42:09,589
check to see who is running our show if
you have a user that's been executing

522
00:42:09,589 --> 00:42:14,029
our show and a whole bunch of systems on
last four hours that's probably bad but

523
00:42:14,029 --> 00:42:17,299
it's time to start evaluating and
identify how how people are using these

524
00:42:17,299 --> 00:42:22,700
tools that way when something bad
happens you know that it's abnormal and

525
00:42:22,700 --> 00:42:26,430
you can also track PowerShell remoting
usage croon uploaded or check the event

526
00:42:26,430 --> 00:42:31,710
logs on the client it's an ideal six on
services about 9,400

527
00:42:31,710 --> 00:42:35,770
PowerShell version 5 will be out very
soon and has several compelling security

528
00:42:35,770 --> 00:42:41,730
enhance system my transcripts his powers
group policy to help our salon all

529
00:42:41,730 --> 00:42:46,430
system PowerShell commands and save them
just transcripts to share for parsing

530
00:42:46,430 --> 00:42:50,990
script block logging PowerShell oxy
obfuscated code as well as the dynamic

531
00:42:50,990 --> 00:42:55,890
general it generated code and that way
you have the exact code that executes

532
00:42:55,890 --> 00:43:02,020
constrain our show automatically enables
PowerShell constrain mode when a blocker

533
00:43:02,020 --> 00:43:07,210
policy is set to allow this limits the
power show code execution policy where

534
00:43:07,210 --> 00:43:12,589
it's only the core capability the
advanced capability which the attacker

535
00:43:12,589 --> 00:43:18,920
tools use at work and then windows 10 at
time our integration which automatically

536
00:43:18,920 --> 00:43:23,859
passes all of that code that would be
executed into the anti-malware software

537
00:43:23,859 --> 00:43:28,549
product you have installed and if it
sees something in malicious our show on

538
00:43:28,550 --> 00:43:35,609
running so medication level one is what
I considered low difficulty there's a

539
00:43:35,609 --> 00:43:39,799
lot on the slide the key points or
minimize your admin rights prevent local

540
00:43:39,800 --> 00:43:44,070
admins from logging on other computers
prevent protect service accounts from

541
00:43:44,070 --> 00:43:48,230
making by making their passwords longer
don't use Group Policy Preferences the

542
00:43:48,230 --> 00:43:51,580
store your credentials prevent
credentials from being passed when using

543
00:43:51,580 --> 00:43:58,380
RDP level two little more moderate
difficulty to install configure and

544
00:43:58,380 --> 00:44:01,560
share your local admin password your
random regularly change with capability

545
00:44:01,560 --> 00:44:07,170
change force a change within a worse
additional service camp reductions are

546
00:44:07,170 --> 00:44:08,560
necessary

547
00:44:08,560 --> 00:44:13,029
2003 is end of life every sentence he
wanna come off the network soon as you

548
00:44:13,030 --> 00:44:13,450
can

549
00:44:13,450 --> 00:44:17,609
don't let admins use admin admin
credentials on the same computers are

550
00:44:17,609 --> 00:44:20,900
used for office tasks as web browsing
e-mail etcetera log your PowerShell

551
00:44:20,900 --> 00:44:28,130
usage and we get into the it's
complicated level of medication with

552
00:44:28,130 --> 00:44:31,470
that said their tremendous benefits to
implementing these medications in the

553
00:44:31,470 --> 00:44:34,319
most important takeaway from the slides
protect your eighty admins from

554
00:44:34,320 --> 00:44:40,000
prudential best way to do that is your
domain admins group remain out and have

555
00:44:40,000 --> 00:44:44,040
full admin rights action directory all
domain controllers all server all

556
00:44:44,040 --> 00:44:44,690
computers

557
00:44:44,690 --> 00:44:48,540
workstations does that make sense that
day

558
00:44:48,540 --> 00:44:51,810
da is administration from the nineteen
nineties and it's time to shift to a

559
00:44:51,810 --> 00:44:57,410
focus on financial protection away from
the way we used to do things and it's

560
00:44:57,410 --> 00:45:02,310
all data model needs to be revamped
protect against his current address and

561
00:45:02,310 --> 00:45:06,480
the separation of administration is
necessary to ensure that a compromise of

562
00:45:06,480 --> 00:45:09,369
one level doesn't compromise your entire
domain because when that happens you're

563
00:45:09,369 --> 00:45:14,430
in for a world of hurt and you want to
make sure that this new admin model is

564
00:45:14,430 --> 00:45:19,310
configured so you're de your demands are
your eighty admins are on log on PCs or

565
00:45:19,310 --> 00:45:23,060
special adding workstation special Admin
service not your standard workstations

566
00:45:23,060 --> 00:45:28,700
are going on to all this can be enforced
by Group Policy additionally smart card

567
00:45:28,700 --> 00:45:36,419
authentication can enable you to rotate
those password hashes via script with

568
00:45:36,420 --> 00:45:39,589
more advanced attacks of birds on
becoming an undetectable a new attack

569
00:45:39,589 --> 00:45:43,910
method or attack attack detection
paradigm is necessary

570
00:45:43,910 --> 00:45:47,950
Microsoft bought a ride only last year
career at the required technology and

571
00:45:47,950 --> 00:45:50,839
Microsoft advanced threat analysts
Microsoft is listening I don't work for

572
00:45:50,839 --> 00:45:52,400
them but this is pretty cool

573
00:45:52,400 --> 00:45:58,109
basically it's haps the network device
with a sensor and watches that

574
00:45:58,109 --> 00:46:00,900
authentication traffic going to the DC's

575
00:46:00,900 --> 00:46:03,810
starts base lining what the user
behavior is and based on that it says

576
00:46:03,810 --> 00:46:09,040
this is abnormal wear this is normal it
can detect a lot of these current modern

577
00:46:09,040 --> 00:46:12,810
attacks currently in preview but
Microsoft looking to release it soon I'm

578
00:46:12,810 --> 00:46:16,990
pretty excited about it this is an
example of what fires when you see

579
00:46:16,990 --> 00:46:22,240
something unusual goes hey this guy
logged on 29 abnormal computers and only

580
00:46:22,240 --> 00:46:27,500
usually only logs onto these two over
here and ask for resource I want to

581
00:46:27,500 --> 00:46:33,119
access read all these other resources
never touched them before starting with

582
00:46:33,119 --> 00:46:36,680
Windows standards new architecture to
protect credentials on the right side

583
00:46:36,680 --> 00:46:41,899
and blue traditional s all the high
level of Wes this is where else aspirins

584
00:46:41,900 --> 00:46:46,670
and traditionally wear credential store
they've moved them over to the isolated

585
00:46:46,670 --> 00:46:51,300
user mode into a new service called
Alice a Ella so it's a separate

586
00:46:51,300 --> 00:46:52,820
microkernel

587
00:46:52,820 --> 00:46:58,010
which runs on its own so compromised of
Windows itself the Windows kernel cannot

588
00:46:58,010 --> 00:47:01,490
compromises credentials they are
protected and you probably have noticed

589
00:47:01,490 --> 00:47:09,029
this it's a hypervisor so completely
separated from the actual Windows OS so

590
00:47:09,030 --> 00:47:12,960
there's a few other medications that are
highly recommended ranging from periodic

591
00:47:12,960 --> 00:47:17,040
lethality scheduled task sensitive
systems isolating systems from the

592
00:47:17,040 --> 00:47:18,610
internet the don't need it

593
00:47:18,610 --> 00:47:22,720
during the event logs at a level that we
may not have looked out for implementing

594
00:47:22,720 --> 00:47:26,189
comprehensive password string change
strategy which involves two main

595
00:47:26,190 --> 00:47:30,580
computer password changes when we have a
a breach recovery scenario scheduling

596
00:47:30,580 --> 00:47:35,509
regular regular ATT account password
changes and mapping own apt activities

597
00:47:35,510 --> 00:47:42,420
potential risk factors within your
organization so to summarize attackers

598
00:47:42,420 --> 00:47:46,980
will get code running on your network
they will get code running on a computer

599
00:47:46,980 --> 00:47:51,720
in your environment what happens next is
up to you my time is up

600
00:47:51,720 --> 00:47:58,160
thank you

601
00:47:58,160 --> 00:48:22,950
questions a small amount of it

