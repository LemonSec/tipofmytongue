1
00:00:00,890 --> 00:00:03,250
[Applause]

2
00:00:02,980 --> 00:00:05,660
[Music]

3
00:00:03,250 --> 00:00:07,259
[Applause]

4
00:00:05,660 --> 00:00:09,870
good afternoon

5
00:00:07,259 --> 00:00:11,309
so in this session I will<font color="#E5E5E5"> talk about</font>

6
00:00:09,870 --> 00:00:14,040
<font color="#E5E5E5">something interesting</font>

7
00:00:11,309 --> 00:00:18,320
enjoy security<font color="#CCCCCC"> especially the security</font>

8
00:00:14,040 --> 00:00:18,320
of a<font color="#E5E5E5"> SOC drivers</font><font color="#CCCCCC"> in android corner</font>

9
00:00:18,529 --> 00:00:23,180
<font color="#CCCCCC">before this talk let me introduce myself</font>

10
00:00:21,840 --> 00:00:26,519
<font color="#CCCCCC">at first</font>

11
00:00:23,180 --> 00:00:29,220
and my name is sevenson<font color="#E5E5E5"> I'm currently</font>

12
00:00:26,519 --> 00:00:32,519
working as a security researcher<font color="#E5E5E5"> and the</font>

13
00:00:29,220 --> 00:00:35,160
solution developer<font color="#CCCCCC"> extruding micro my</font>

14
00:00:32,520 --> 00:00:38,180
<font color="#E5E5E5">focus is</font><font color="#CCCCCC"> of the one to the mobile survey</font>

15
00:00:35,160 --> 00:00:40,890
research and they<font color="#E5E5E5"> explore detection I</font>

16
00:00:38,180 --> 00:00:43,890
have over seven<font color="#CCCCCC"> years in security</font>

17
00:00:40,890 --> 00:00:47,219
industry<font color="#E5E5E5"> since 2015</font>

18
00:00:43,890 --> 00:00:48,960
I begin to disclose and<font color="#CCCCCC"> drawbacks and</font>

19
00:00:47,219 --> 00:00:51,030
personally<font color="#E5E5E5"> I'm handbags not for</font>

20
00:00:48,960 --> 00:00:54,180
<font color="#CCCCCC">exploitation</font><font color="#E5E5E5"> but for deploying</font>

21
00:00:51,030 --> 00:00:56,699
<font color="#CCCCCC">protective solutions you marry</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

22
00:00:54,180 --> 00:01:00,780
following<font color="#CCCCCC"> two blows to getting some</font>

23
00:00:56,699 --> 00:01:02,760
typical articles<font color="#CCCCCC"> from</font><font color="#E5E5E5"> me so for your</font>

24
00:01:00,780 --> 00:01:06,170
information<font color="#E5E5E5"> what will be covered</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> this</font>

25
00:01:02,760 --> 00:01:08,700
talk I will go<font color="#E5E5E5"> through some bug hunting</font>

26
00:01:06,170 --> 00:01:11,460
experiences yes<font color="#E5E5E5"> your</font><font color="#CCCCCC"> medium framework</font>

27
00:01:08,700 --> 00:01:13,369
this<font color="#CCCCCC"> will include post the universe</font>

28
00:01:11,460 --> 00:01:15,539
<font color="#E5E5E5">based on the correct place back</font><font color="#CCCCCC"> hunting</font>

29
00:01:13,369 --> 00:01:19,560
<font color="#E5E5E5">now there will be some typical corner</font>

30
00:01:15,540 --> 00:01:23,159
<font color="#CCCCCC">but</font><font color="#E5E5E5"> believe I will introduce why and how</font>

31
00:01:19,560 --> 00:01:25,920
this bug have happens<font color="#E5E5E5"> and there</font><font color="#CCCCCC"> be also</font>

32
00:01:23,159 --> 00:01:30,659
a potential exploitation chain<font color="#CCCCCC"> targeted</font>

33
00:01:25,920 --> 00:01:33,180
respects<font color="#E5E5E5"> by</font><font color="#CCCCCC"> introduced to</font><font color="#E5E5E5"> this we're</font>

34
00:01:30,659 --> 00:01:35,040
<font color="#CCCCCC">going to how to reach these</font><font color="#E5E5E5"> backs and</font>

35
00:01:33,180 --> 00:01:38,310
there will be<font color="#CCCCCC"> some tips to</font><font color="#E5E5E5"> Connor</font>

36
00:01:35,040 --> 00:01:40,979
developers especially<font color="#CCCCCC"> as soon as of</font><font color="#E5E5E5"> a</font>

37
00:01:38,310 --> 00:01:43,950
<font color="#E5E5E5">SOC gravity CalPERS for their security</font>

38
00:01:40,979 --> 00:01:47,700
<font color="#E5E5E5">security the water world will not be</font>

39
00:01:43,950 --> 00:01:49,409
<font color="#E5E5E5">covered in</font><font color="#CCCCCC"> this talk don't expect a</font>

40
00:01:47,700 --> 00:01:52,020
<font color="#E5E5E5">detail expressed explore the</font>

41
00:01:49,409 --> 00:01:55,890
introduction<font color="#CCCCCC"> and all a demo because</font><font color="#E5E5E5"> that</font>

42
00:01:52,020 --> 00:01:58,229
is currently<font color="#E5E5E5"> not my focus and this</font>

43
00:01:55,890 --> 00:01:59,969
<font color="#E5E5E5">research</font><font color="#CCCCCC"> discolors</font><font color="#E5E5E5"> the following hundred</font>

44
00:01:58,229 --> 00:02:02,820
<font color="#E5E5E5">bucks always my color palette</font>

45
00:01:59,969 --> 00:02:05,070
<font color="#CCCCCC">bookbags and a media related in less</font>

46
00:02:02,820 --> 00:02:09,030
than one month<font color="#E5E5E5"> our delicate bug hunting</font>

47
00:02:05,070 --> 00:02:12,209
I should say that before<font color="#E5E5E5"> this talk over</font>

48
00:02:09,030 --> 00:02:13,390
the bugs<font color="#E5E5E5"> how in already</font><font color="#CCCCCC"> response Pollack</font>

49
00:02:12,209 --> 00:02:21,850
is closer to winner

50
00:02:13,390 --> 00:02:24,279
now be fixed<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so the agenda first I</font>

51
00:02:21,850 --> 00:02:27,910
will give<font color="#E5E5E5"> a background introduction why</font>

52
00:02:24,280 --> 00:02:31,360
I did this<font color="#CCCCCC"> research</font><font color="#E5E5E5"> the thing I will</font>

53
00:02:27,910 --> 00:02:33,850
<font color="#E5E5E5">give you an example</font><font color="#CCCCCC"> of how</font><font color="#E5E5E5"> to fasten a</font>

54
00:02:31,360 --> 00:02:37,180
<font color="#CCCCCC">user space middle model year</font><font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> joining</font>

55
00:02:33,850 --> 00:02:39,609
<font color="#E5E5E5">and the therapy also some introduction</font>

56
00:02:37,180 --> 00:02:41,910
associate an<font color="#CCCCCC"> outside-in</font><font color="#E5E5E5"> corner the</font>

57
00:02:39,610 --> 00:02:46,180
<font color="#E5E5E5">advance</font><font color="#CCCCCC"> to make a sound</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> framework</font>

58
00:02:41,910 --> 00:02:48,700
which was inherited<font color="#E5E5E5"> by Android and I</font>

59
00:02:46,180 --> 00:02:51,060
will also give an analysis<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

60
00:02:48,700 --> 00:02:54,040
attack surface and what is the issue

61
00:02:51,060 --> 00:02:58,709
<font color="#CCCCCC">major there will be also some typical</font>

62
00:02:54,040 --> 00:03:01,209
<font color="#CCCCCC">counterparts</font><font color="#E5E5E5"> kusu and some thinking</font>

63
00:02:58,709 --> 00:03:05,140
<font color="#CCCCCC">exploitation and finding their</font>

64
00:03:01,209 --> 00:03:08,020
conclusion so the<font color="#CCCCCC"> background</font><font color="#E5E5E5"> why</font>

65
00:03:05,140 --> 00:03:11,109
delighted with the research since<font color="#CCCCCC"> it</font>

66
00:03:08,020 --> 00:03:13,780
<font color="#E5E5E5">2015 the Android</font><font color="#CCCCCC"> media server</font><font color="#E5E5E5"> packs</font>

67
00:03:11,110 --> 00:03:18,900
there is<font color="#CCCCCC"> a burst of back disclosure</font>

68
00:03:13,780 --> 00:03:21,610
<font color="#E5E5E5">since August of 2015</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is because</font>

69
00:03:18,900 --> 00:03:23,980
during<font color="#E5E5E5"> that time the google launches</font>

70
00:03:21,610 --> 00:03:28,350
today i'm georgia<font color="#E5E5E5"> bag buggy for project</font>

71
00:03:23,980 --> 00:03:30,820
hydro VIP<font color="#CCCCCC"> and the first meters are back</font>

72
00:03:28,350 --> 00:03:38,190
<font color="#E5E5E5">about</font><font color="#CCCCCC"> a Libra stage of right</font><font color="#E5E5E5"> with a</font>

73
00:03:30,820 --> 00:03:42,790
disclosed in 2015 in 2016<font color="#E5E5E5"> black hat so</font>

74
00:03:38,190 --> 00:03:44,980
in 20 2016 this meteor server<font color="#CCCCCC"> back</font>

75
00:03:42,790 --> 00:03:47,829
spread from the lead stage of<font color="#E5E5E5"> ride and</font>

76
00:03:44,980 --> 00:03:49,959
module to<font color="#E5E5E5"> open max and finally to</font>

77
00:03:47,830 --> 00:03:52,299
software<font color="#E5E5E5"> and hardware codecs from the</font>

78
00:03:49,959 --> 00:03:53,799
upper<font color="#E5E5E5"> level to the low level the most of</font>

79
00:03:52,299 --> 00:03:57,070
the users based<font color="#E5E5E5"> media</font><font color="#CCCCCC"> models are</font>

80
00:03:53,799 --> 00:04:01,150
affected so<font color="#CCCCCC"> it quickly becomes a very</font>

81
00:03:57,070 --> 00:04:04,269
but however<font color="#E5E5E5"> feedbacks</font><font color="#CCCCCC"> in corner of that</font>

82
00:04:01,150 --> 00:04:07,239
<font color="#E5E5E5">patch</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> closed before</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> research</font>

83
00:04:04,269 --> 00:04:11,170
<font color="#E5E5E5">before the half the second half of 2016</font>

84
00:04:07,239 --> 00:04:16,660
<font color="#CCCCCC">so that's why I decide to to this</font>

85
00:04:11,170 --> 00:04:19,630
research so let's quickly have a general

86
00:04:16,660 --> 00:04:22,660
reveal that why and how media<font color="#CCCCCC"> backs</font>

87
00:04:19,630 --> 00:04:24,580
<font color="#CCCCCC">difference becomes</font><font color="#E5E5E5"> so hot or Android if</font>

88
00:04:22,660 --> 00:04:26,110
you look at the history of<font color="#E5E5E5"> the Android</font>

89
00:04:24,580 --> 00:04:30,810
security polluting<font color="#CCCCCC"> design</font>

90
00:04:26,110 --> 00:04:33,819
<font color="#E5E5E5">since 2015 enjoy</font><font color="#CCCCCC"> a meter server box</font>

91
00:04:30,810 --> 00:04:37,210
<font color="#E5E5E5">there about half our bags and military</font>

92
00:04:33,819 --> 00:04:40,270
<font color="#CCCCCC">bugs</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> ridiculous and the evening</font>

93
00:04:37,210 --> 00:04:43,900
in 2016 in the 2017

94
00:04:40,270 --> 00:04:48,719
<font color="#E5E5E5">there are also about 20%</font><font color="#CCCCCC"> are all these</font>

95
00:04:43,900 --> 00:04:53,349
<font color="#E5E5E5">bags are military box</font><font color="#CCCCCC"> year user space</font>

96
00:04:48,719 --> 00:04:56,740
and the<font color="#CCCCCC"> says that most of these media</font>

97
00:04:53,349 --> 00:05:03,039
box<font color="#CCCCCC"> assist as critical or high severity</font>

98
00:04:56,740 --> 00:05:06,099
by Google so the Rosa<font color="#E5E5E5"> the reason could</font>

99
00:05:03,039 --> 00:05:08,800
be<font color="#E5E5E5"> possible because there could be four</font>

100
00:05:06,099 --> 00:05:11,469
<font color="#CCCCCC">reason the first reason may be that</font>

101
00:05:08,800 --> 00:05:15,250
<font color="#E5E5E5">meter</font><font color="#CCCCCC"> bags upon with the remote budget</font>

102
00:05:11,469 --> 00:05:19,300
because based on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Google we</font><font color="#CCCCCC"> RP policy</font>

103
00:05:15,250 --> 00:05:21,159
<font color="#E5E5E5">a removable pad</font><font color="#CCCCCC"> maybe get a higher back</font>

104
00:05:19,300 --> 00:05:24,460
<font color="#CCCCCC">bungee</font><font color="#E5E5E5"> and the higher severity</font>

105
00:05:21,159 --> 00:05:27,069
assessment<font color="#E5E5E5"> so basically this means</font>

106
00:05:24,460 --> 00:05:29,948
higher<font color="#CCCCCC"> bat bungee and Eva et is only a</font>

107
00:05:27,069 --> 00:05:32,919
toss the skills the<font color="#CCCCCC"> real-life</font>

108
00:05:29,949 --> 00:05:36,580
exploitability has to be<font color="#E5E5E5"> brooded in 20</font>

109
00:05:32,919 --> 00:05:39,310
2016<font color="#E5E5E5"> the</font><font color="#CCCCCC"> North Beach has open source to</font>

110
00:05:36,580 --> 00:05:41,830
the working exploit with named as a

111
00:05:39,310 --> 00:05:44,589
metaphor<font color="#CCCCCC"> target at</font><font color="#E5E5E5"> leave a stage of</font>

112
00:05:41,830 --> 00:05:46,508
<font color="#CCCCCC">rider</font><font color="#E5E5E5"> vulnerability and the</font><font color="#CCCCCC"> late</font>

113
00:05:44,589 --> 00:05:51,190
laughter reason may be<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> emitter</font>

114
00:05:46,509 --> 00:05:55,870
mirror server<font color="#E5E5E5"> bags I use it fast but is</font>

115
00:05:51,190 --> 00:05:58,389
<font color="#CCCCCC">that</font><font color="#E5E5E5"> true I will give you example so how</font>

116
00:05:55,870 --> 00:06:04,810
easily<font color="#CCCCCC"> to Kate and me the back just to</font>

117
00:05:58,389 --> 00:06:07,810
<font color="#E5E5E5">it so before</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 200 meter server</font><font color="#CCCCCC"> box</font><font color="#E5E5E5"> we</font>

118
00:06:04,810 --> 00:06:10,990
should know that<font color="#E5E5E5"> which which medium</font><font color="#CCCCCC"> body</font>

119
00:06:07,810 --> 00:06:12,969
<font color="#E5E5E5">should I get to hide the bags so in</font>

120
00:06:10,990 --> 00:06:16,689
order<font color="#E5E5E5"> to practice an effective</font>

121
00:06:12,969 --> 00:06:18,669
<font color="#E5E5E5">experience</font><font color="#CCCCCC"> I choose</font><font color="#E5E5E5"> a fi oh I'm making a</font>

122
00:06:16,689 --> 00:06:21,219
look<font color="#CCCCCC"> fuzzy</font><font color="#E5E5E5"> loop because it</font><font color="#CCCCCC"> is a carriage</font>

123
00:06:18,669 --> 00:06:25,389
<font color="#E5E5E5">a</font><font color="#CCCCCC"> pissed</font><font color="#E5E5E5"> fighting tool very effective</font>

124
00:06:21,219 --> 00:06:28,509
and for the target because I only<font color="#CCCCCC"> want</font>

125
00:06:25,389 --> 00:06:31,949
to further single module with less

126
00:06:28,509 --> 00:06:36,009
dependency<font color="#CCCCCC"> because in general what if</font>

127
00:06:31,949 --> 00:06:37,690
the module<font color="#E5E5E5"> is more dedicated it possible</font>

128
00:06:36,009 --> 00:06:39,120
it<font color="#E5E5E5"> means that you</font><font color="#CCCCCC"> are facing will be</font>

129
00:06:37,690 --> 00:06:41,610
more effective

130
00:06:39,120 --> 00:06:44,040
so based on this the third-party modules

131
00:06:41,610 --> 00:06:46,020
in the external directory which is

132
00:06:44,040 --> 00:06:49,320
<font color="#E5E5E5">located in the</font><font color="#CCCCCC"> osep Android Open Source</font>

133
00:06:46,020 --> 00:06:51,810
<font color="#CCCCCC">Project is scooped so I go through all</font>

134
00:06:49,320 --> 00:06:53,870
<font color="#E5E5E5">the those modules</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> externality</font>

135
00:06:51,810 --> 00:06:57,180
<font color="#CCCCCC">tree I find that there are some modules</font>

136
00:06:53,870 --> 00:06:59,669
<font color="#E5E5E5">so let's look at a bit a related most of</font>

137
00:06:57,180 --> 00:07:04,020
them are<font color="#E5E5E5"> software architects such as</font>

138
00:06:59,669 --> 00:07:07,198
live ABC the PVC<font color="#E5E5E5"> and mpeg-2</font><font color="#CCCCCC"> Li but we BX</font>

139
00:07:04,020 --> 00:07:11,880
<font color="#CCCCCC">all over the map working as a software</font>

140
00:07:07,199 --> 00:07:14,190
<font color="#E5E5E5">sort of architects so they're given</font>

141
00:07:11,880 --> 00:07:16,169
<font color="#CCCCCC">funding there are some tips you debater</font>

142
00:07:14,190 --> 00:07:18,660
not<font color="#CCCCCC"> fussed with the test code in the</font>

143
00:07:16,169 --> 00:07:20,630
celebrities because<font color="#E5E5E5"> enjoy the idea</font>

144
00:07:18,660 --> 00:07:24,419
always<font color="#E5E5E5"> invoke them differently</font>

145
00:07:20,630 --> 00:07:27,590
the second you need<font color="#E5E5E5"> to understand how</font>

146
00:07:24,419 --> 00:07:31,049
you how and Jordan<font color="#CCCCCC"> works them because</font>

147
00:07:27,590 --> 00:07:36,169
<font color="#CCCCCC">only personally so that you can write</font><font color="#E5E5E5"> a</font>

148
00:07:31,050 --> 00:07:39,270
QC quickly<font color="#E5E5E5"> where you find a</font><font color="#CCCCCC"> crash</font><font color="#E5E5E5"> so</font>

149
00:07:36,169 --> 00:07:42,419
let's see how software<font color="#CCCCCC"> codec applying</font>

150
00:07:39,270 --> 00:07:44,729
voltage<font color="#E5E5E5"> invoking Android so basically</font>

151
00:07:42,419 --> 00:07:48,120
there is<font color="#E5E5E5"> a function</font><font color="#CCCCCC"> enjoy the waste</font>

152
00:07:44,729 --> 00:07:50,520
frameworks<font color="#E5E5E5"> names</font><font color="#CCCCCC"> on queue</font><font color="#E5E5E5"> views this is</font>

153
00:07:48,120 --> 00:07:52,680
a function that servers are<font color="#CCCCCC"> the calling</font>

154
00:07:50,520 --> 00:07:55,440
invoking the codec API to concluded the

155
00:07:52,680 --> 00:07:57,960
powers or you<font color="#CCCCCC"> include the buffers from</font>

156
00:07:55,440 --> 00:08:00,930
<font color="#E5E5E5">the media file so basically</font><font color="#CCCCCC"> the water</font>

157
00:07:57,960 --> 00:08:05,010
<font color="#CCCCCC">there the loop will loop</font><font color="#E5E5E5"> two cases it</font>

158
00:08:00,930 --> 00:08:07,530
buffer from the meat of our and to<font color="#CCCCCC"> set</font>

159
00:08:05,010 --> 00:08:10,889
some decoder arguments and<font color="#CCCCCC"> range looks</font>

160
00:08:07,530 --> 00:08:13,469
<font color="#CCCCCC">ABA function so there</font><font color="#E5E5E5"> is a parameter</font><font color="#CCCCCC"> you</font>

161
00:08:10,889 --> 00:08:15,449
need this<font color="#E5E5E5"> I I to be</font><font color="#CCCCCC"> technically a</font>

162
00:08:13,470 --> 00:08:18,330
function this parameter

163
00:08:15,449 --> 00:08:21,990
reference to<font color="#CCCCCC"> our users based offer</font><font color="#E5E5E5"> this</font>

164
00:08:18,330 --> 00:08:24,510
is a codec buffer so this is a typical

165
00:08:21,990 --> 00:08:31,349
signal<font color="#E5E5E5"> that enjoy your vocals software</font>

166
00:08:24,510 --> 00:08:35,510
IP is so what is the codec<font color="#CCCCCC"> take let's</font>

167
00:08:31,349 --> 00:08:39,838
open up a<font color="#E5E5E5"> video file you</font><font color="#CCCCCC"> will find</font><font color="#E5E5E5"> that</font>

168
00:08:35,510 --> 00:08:42,088
it's not far far away behind<font color="#E5E5E5"> it the</font>

169
00:08:39,839 --> 00:08:46,470
first<font color="#CCCCCC"> big beginning over</font><font color="#E5E5E5"> the middle file</font>

170
00:08:42,089 --> 00:08:49,079
there was a buffer in this example is

171
00:08:46,470 --> 00:08:52,430
<font color="#CCCCCC">ffo</font><font color="#E5E5E5"> all of them very effective because</font><font color="#CCCCCC"> I</font>

172
00:08:49,079 --> 00:08:54,729
crafted so this at

173
00:08:52,430 --> 00:08:58,989
typically the codec buffer that

174
00:08:54,730 --> 00:09:02,510
encapsulated<font color="#E5E5E5"> in the video file so we</font><font color="#CCCCCC"> can</font>

175
00:08:58,990 --> 00:09:05,410
emulate this protect protect data and

176
00:09:02,510 --> 00:09:08,180
the past<font color="#E5E5E5"> dating and video file and the</font>

177
00:09:05,410 --> 00:09:09,980
<font color="#CCCCCC">Collett</font><font color="#E5E5E5"> enjoyed always a framework to</font>

178
00:09:08,180 --> 00:09:12,349
part of this and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> decoder so that</font>

179
00:09:09,980 --> 00:09:17,600
will<font color="#E5E5E5"> either will be a typical</font><font color="#CCCCCC"> fuzzy</font>

180
00:09:12,350 --> 00:09:19,670
scenario so how<font color="#E5E5E5"> to</font><font color="#CCCCCC"> us I know how I'm</font>

181
00:09:17,600 --> 00:09:22,459
Jordan looks with<font color="#CCCCCC"> it I'll protect APs</font>

182
00:09:19,670 --> 00:09:24,260
<font color="#E5E5E5">and I get a rubbery buffer data which</font>

183
00:09:22,459 --> 00:09:26,869
can<font color="#CCCCCC"> be passed to the critical libraries</font>

184
00:09:24,260 --> 00:09:29,750
to your mugs<font color="#CCCCCC"> let me to do some encoding</font>

185
00:09:26,870 --> 00:09:31,610
<font color="#CCCCCC">or decoding logics</font><font color="#E5E5E5"> the buffer can</font><font color="#CCCCCC"> be</font>

186
00:09:29,750 --> 00:09:33,770
easily<font color="#E5E5E5"> built engine beautiful I just</font>

187
00:09:31,610 --> 00:09:36,950
need to<font color="#E5E5E5"> replace</font><font color="#CCCCCC"> that puddle</font><font color="#E5E5E5"> in the</font>

188
00:09:33,770 --> 00:09:39,260
middle<font color="#CCCCCC"> runs</font><font color="#E5E5E5"> so and also the</font><font color="#CCCCCC"> codec</font>

189
00:09:36,950 --> 00:09:41,870
modules are less dependency this means

190
00:09:39,260 --> 00:09:45,310
that it can<font color="#CCCCCC"> be easily to be</font><font color="#E5E5E5"> built with a</font>

191
00:09:41,870 --> 00:09:48,350
FAL so this is a typical<font color="#CCCCCC"> scenario</font>

192
00:09:45,310 --> 00:09:52,520
<font color="#E5E5E5">perfectly fits so where should I wait</font>

193
00:09:48,350 --> 00:09:55,520
just<font color="#CCCCCC"> already</font><font color="#E5E5E5"> coded test editing so this</font>

194
00:09:52,520 --> 00:09:58,040
is the after wrong about one<font color="#E5E5E5"> days</font><font color="#CCCCCC"> or</font>

195
00:09:55,520 --> 00:10:00,439
several<font color="#E5E5E5"> hours I got this result from the</font>

196
00:09:58,040 --> 00:10:02,510
airfield<font color="#CCCCCC"> I got hundreds of</font><font color="#E5E5E5"> unique</font>

197
00:10:00,440 --> 00:10:06,890
questions in the house after

198
00:10:02,510 --> 00:10:09,350
<font color="#E5E5E5">confirmation that all these</font><font color="#CCCCCC"> bugs value</font>

199
00:10:06,890 --> 00:10:11,350
the<font color="#CCCCCC"> bugs</font><font color="#E5E5E5"> and all of them are removable</font>

200
00:10:09,350 --> 00:10:16,730
<font color="#E5E5E5">bugs</font>

201
00:10:11,350 --> 00:10:19,240
so this is my critic valve that I'd

202
00:10:16,730 --> 00:10:22,220
always<font color="#CCCCCC"> caramel so software codecs</font>

203
00:10:19,240 --> 00:10:26,540
decoders and<font color="#E5E5E5"> the part of sort of a codec</font>

204
00:10:22,220 --> 00:10:29,360
it includes<font color="#E5E5E5"> it has been proved</font><font color="#CCCCCC"> to be</font>

205
00:10:26,540 --> 00:10:31,699
extremely<font color="#CCCCCC"> effective and I have already</font>

206
00:10:29,360 --> 00:10:33,730
<font color="#CCCCCC">opened</font><font color="#E5E5E5"> sources to Google to address</font><font color="#CCCCCC"> the</font>

207
00:10:31,700 --> 00:10:36,529
<font color="#CCCCCC">Chrissy team</font>

208
00:10:33,730 --> 00:10:40,190
so this is just the beginning of<font color="#E5E5E5"> this</font>

209
00:10:36,529 --> 00:10:43,339
talk this<font color="#E5E5E5"> is not the the real folks so</font>

210
00:10:40,190 --> 00:10:46,910
the next I will let's move to the<font color="#CCCCCC"> kernel</font>

211
00:10:43,339 --> 00:10:48,980
part<font color="#E5E5E5"> I could imagine that there should</font>

212
00:10:46,910 --> 00:10:52,610
<font color="#CCCCCC">be two parts internal parts</font><font color="#E5E5E5"> that had the</font>

213
00:10:48,980 --> 00:10:55,160
<font color="#CCCCCC">data</font><font color="#E5E5E5"> since one</font><font color="#CCCCCC"> is a for for enjoy our</font>

214
00:10:52,610 --> 00:10:57,920
audio<font color="#E5E5E5"> the other is valid for all</font><font color="#CCCCCC"> the</font>

215
00:10:55,160 --> 00:10:59,360
<font color="#CCCCCC">video there could be</font><font color="#E5E5E5"> all the children</font>

216
00:10:57,920 --> 00:11:02,329
<font color="#CCCCCC">already remember so</font><font color="#E5E5E5"> this time I decided</font>

217
00:10:59,360 --> 00:11:05,400
<font color="#E5E5E5">to look at</font><font color="#CCCCCC"> the audio part so</font><font color="#E5E5E5"> let's look</font>

218
00:11:02,329 --> 00:11:07,469
at the Android Audio architecture

219
00:11:05,400 --> 00:11:10,050
so<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> form the picture that you can</font>

220
00:11:07,470 --> 00:11:12,810
find that the<font color="#CCCCCC"> upper-level</font><font color="#E5E5E5"> the media</font>

221
00:11:10,050 --> 00:11:16,859
player<font color="#CCCCCC"> for applications where you look</font>

222
00:11:12,810 --> 00:11:20,670
the media server<font color="#E5E5E5"> of through the binder</font>

223
00:11:16,860 --> 00:11:23,790
<font color="#E5E5E5">IPC inter-process coding and the major</font>

224
00:11:20,670 --> 00:11:26,339
server processes will finally call the

225
00:11:23,790 --> 00:11:30,650
underlying<font color="#E5E5E5"> Linux kernel drivers through</font>

226
00:11:26,340 --> 00:11:33,620
the<font color="#CCCCCC"> et al so based only on Jurassic</font>

227
00:11:30,650 --> 00:11:37,530
<font color="#CCCCCC">Security Bulletin there how a lot</font><font color="#E5E5E5"> of</font>

228
00:11:33,620 --> 00:11:39,090
<font color="#CCCCCC">sillies disclose the</font><font color="#E5E5E5"> tools</font><font color="#CCCCCC"> oppose the</font>

229
00:11:37,530 --> 00:11:43,110
middle<font color="#E5E5E5"> server patch the audio server</font>

230
00:11:39,090 --> 00:11:45,420
<font color="#E5E5E5">patch also the</font><font color="#CCCCCC"> har part so but</font><font color="#E5E5E5"> there are</font>

231
00:11:43,110 --> 00:11:46,620
quite<font color="#E5E5E5"> a strange that before the June of</font>

232
00:11:45,420 --> 00:11:48,900
2016

233
00:11:46,620 --> 00:11:52,200
they're only<font color="#E5E5E5"> festivities kiss closely</font>

234
00:11:48,900 --> 00:11:55,560
<font color="#CCCCCC">uni uni</font><font color="#E5E5E5"> spreader patch so I can't</font>

235
00:11:52,200 --> 00:11:59,580
believe<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> why I decided</font><font color="#CCCCCC"> to</font>

236
00:11:55,560 --> 00:12:03,410
look at this so there could be a comes<font color="#CCCCCC"> a</font>

237
00:11:59,580 --> 00:12:07,320
question<font color="#E5E5E5"> that how</font><font color="#CCCCCC"> many bugs</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a module</font>

238
00:12:03,410 --> 00:12:11,010
should be<font color="#CCCCCC"> except acceptable so based</font><font color="#E5E5E5"> on</font>

239
00:12:07,320 --> 00:12:13,190
the code complete so in 1992 Microsoft

240
00:12:11,010 --> 00:12:16,410
as a result

241
00:12:13,190 --> 00:12:19,020
<font color="#CCCCCC">half-half detect</font><font color="#E5E5E5"> percale see this means</font>

242
00:12:16,410 --> 00:12:22,380
that every once on the lines<font color="#E5E5E5"> of code</font>

243
00:12:19,020 --> 00:12:24,120
<font color="#CCCCCC">there could be only a half defect</font><font color="#E5E5E5"> so</font>

244
00:12:22,380 --> 00:12:27,450
this is a standard<font color="#E5E5E5"> or the Microsoft in</font>

245
00:12:24,120 --> 00:12:31,340
1992<font color="#E5E5E5"> so if we follow</font><font color="#CCCCCC"> the Microsoft</font>

246
00:12:27,450 --> 00:12:34,230
sustainers I have calculated<font color="#CCCCCC"> all the</font>

247
00:12:31,340 --> 00:12:37,350
sound<font color="#E5E5E5"> the driver</font><font color="#CCCCCC"> relate</font><font color="#E5E5E5"> to the coding in</font>

248
00:12:34,230 --> 00:12:41,520
the corner<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> comp devices with</font>

249
00:12:37,350 --> 00:12:45,890
<font color="#CCCCCC">muscle Dakota from kokum so there could</font>

250
00:12:41,520 --> 00:12:48,780
be more<font color="#CCCCCC"> than 250,000 C lines of C code</font>

251
00:12:45,890 --> 00:12:50,280
<font color="#E5E5E5">so if we follow the Microsoft standard</font>

252
00:12:48,780 --> 00:12:53,370
there could it be more<font color="#CCCCCC"> than</font><font color="#E5E5E5"> 100 bucks</font>

253
00:12:50,280 --> 00:12:58,530
<font color="#CCCCCC">but</font><font color="#E5E5E5"> if we currently have</font><font color="#CCCCCC"> four this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font>

254
00:12:53,370 --> 00:13:00,150
very strange scenario so<font color="#E5E5E5"> and I suppose</font>

255
00:12:58,530 --> 00:13:04,470
<font color="#E5E5E5">that there will be a lot</font><font color="#CCCCCC"> of things</font><font color="#E5E5E5"> that</font>

256
00:13:00,150 --> 00:13:08,310
we still<font color="#CCCCCC"> have a long way to go</font><font color="#E5E5E5"> so what</font>

257
00:13:04,470 --> 00:13:11,040
<font color="#E5E5E5">is the also</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> at once in Omotesando</font>

258
00:13:08,310 --> 00:13:13,170
architecture that is a software

259
00:13:11,040 --> 00:13:15,060
<font color="#CCCCCC">framework and a part of linux kernel</font>

260
00:13:13,170 --> 00:13:17,490
that provides application<font color="#E5E5E5"> programming</font>

261
00:13:15,060 --> 00:13:18,290
interfaces for<font color="#E5E5E5"> sonic Adam device</font>

262
00:13:17,490 --> 00:13:21,470
<font color="#CCCCCC">Girardi's</font>

263
00:13:18,290 --> 00:13:24,620
visit the<font color="#E5E5E5"> the sound card</font><font color="#CCCCCC"> sound the</font>

264
00:13:21,470 --> 00:13:28,550
management of the Linux corner so it is

265
00:13:24,620 --> 00:13:31,759
starting<font color="#CCCCCC"> 1998 a very very older</font><font color="#E5E5E5"> had a</font>

266
00:13:28,550 --> 00:13:34,670
very old history at the replace to the

267
00:13:31,759 --> 00:13:40,149
previous opens<font color="#E5E5E5"> open sound system in this</font>

268
00:13:34,670 --> 00:13:45,529
corner<font color="#CCCCCC"> 2.6 NH is inherited by</font><font color="#E5E5E5"> Android</font>

269
00:13:40,149 --> 00:13:48,350
under the<font color="#E5E5E5"> a SOC the</font><font color="#CCCCCC"> a super special me</font>

270
00:13:45,529 --> 00:13:50,720
<font color="#CCCCCC">is that</font><font color="#E5E5E5"> to the also</font><font color="#CCCCCC"> system-on-chip</font><font color="#E5E5E5"> it's</font>

271
00:13:48,350 --> 00:13:55,970
a basically a sub-project<font color="#CCCCCC"> a wowza</font>

272
00:13:50,720 --> 00:13:58,579
it was designed to for<font color="#E5E5E5"> especially for</font>

273
00:13:55,970 --> 00:14:00,290
mobile<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example the mobile</font>

274
00:13:58,579 --> 00:14:02,060
<font color="#E5E5E5">device has some different</font>

275
00:14:00,290 --> 00:14:05,509
<font color="#CCCCCC">functionalities analogous with</font>

276
00:14:02,060 --> 00:14:07,489
<font color="#E5E5E5">traditional test public platforms</font>

277
00:14:05,509 --> 00:14:09,709
because for example<font color="#CCCCCC"> the some</font><font color="#E5E5E5"> that</font>

278
00:14:07,490 --> 00:14:12,620
control the power<font color="#E5E5E5"> management is</font>

279
00:14:09,709 --> 00:14:15,469
different<font color="#E5E5E5"> so that's why this SOC</font>

280
00:14:12,620 --> 00:14:18,050
<font color="#E5E5E5">projector you develop it so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is the</font>

281
00:14:15,470 --> 00:14:23,180
<font color="#E5E5E5">whole architecture of the SOC</font><font color="#CCCCCC"> I find</font>

282
00:14:18,050 --> 00:14:25,490
that<font color="#E5E5E5"> they're either machine</font><font color="#CCCCCC"> 3 module</font>

283
00:14:23,180 --> 00:14:28,310
<font color="#E5E5E5">machine platform</font><font color="#CCCCCC"> takes the machine could</font>

284
00:14:25,490 --> 00:14:31,190
<font color="#CCCCCC">be like some motherboard or our mobile</font>

285
00:14:28,310 --> 00:14:34,040
<font color="#E5E5E5">devices in the platform like the</font>

286
00:14:31,190 --> 00:14:37,240
processor for the ARM processor the

287
00:14:34,040 --> 00:14:39,589
<font color="#E5E5E5">codex is a solid rubber so</font>

288
00:14:37,240 --> 00:14:42,680
from this architecture<font color="#CCCCCC"> we can see that</font>

289
00:14:39,589 --> 00:14:46,069
that could<font color="#E5E5E5"> take as a main functionality</font>

290
00:14:42,680 --> 00:14:49,040
with a<font color="#E5E5E5"> codec driver is to transform the</font>

291
00:14:46,069 --> 00:14:52,399
teach the origin to analog analog on

292
00:14:49,040 --> 00:14:55,010
audio so it has also a<font color="#CCCCCC"> directly</font>

293
00:14:52,399 --> 00:15:02,680
<font color="#E5E5E5">interface to</font><font color="#CCCCCC"> co walk to communicate with</font>

294
00:14:55,010 --> 00:15:06,439
the processor so what is attack surface

295
00:15:02,680 --> 00:15:08,779
taking<font color="#CCCCCC"> this nexus 6p for example if you</font>

296
00:15:06,439 --> 00:15:12,519
<font color="#E5E5E5">find that there are so</font><font color="#CCCCCC"> many character</font>

297
00:15:08,779 --> 00:15:17,569
devices<font color="#CCCCCC"> under the do i sound this pass</font>

298
00:15:12,519 --> 00:15:21,050
<font color="#E5E5E5">basically there are five the</font><font color="#CCCCCC"> control</font>

299
00:15:17,569 --> 00:15:24,319
device the compressed<font color="#E5E5E5"> device</font><font color="#CCCCCC"> enough h WD</font>

300
00:15:21,050 --> 00:15:29,420
p and the PCM playback the capture each

301
00:15:24,319 --> 00:15:30,949
device has different functionalities but

302
00:15:29,420 --> 00:15:31,860
the for once on the car<font color="#CCCCCC"> that i could it</font>

303
00:15:30,949 --> 00:15:35,219
be

304
00:15:31,860 --> 00:15:38,570
only one card number<font color="#E5E5E5"> so you may find</font>

305
00:15:35,220 --> 00:15:42,270
that the control device<font color="#E5E5E5"> only has one</font>

306
00:15:38,570 --> 00:15:47,070
kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> device</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> control conclusive</font>

307
00:15:42,270 --> 00:15:48,800
<font color="#E5E5E5">their own but for HW GDP in</font><font color="#CCCCCC"> playbacks in</font>

308
00:15:47,070 --> 00:15:52,490
the capture there are a lot of other

309
00:15:48,800 --> 00:15:57,060
devices because there has defend

310
00:15:52,490 --> 00:15:59,130
functionalities now there are second

311
00:15:57,060 --> 00:16:03,500
attack surface<font color="#E5E5E5"> batting under the device</font>

312
00:15:59,130 --> 00:16:06,450
<font color="#E5E5E5">there could be some vendor specific</font>

313
00:16:03,500 --> 00:16:09,540
character drivers for example in

314
00:16:06,450 --> 00:16:13,230
Qualcomm device<font color="#CCCCCC"> there are</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> ASE</font>

315
00:16:09,540 --> 00:16:17,280
driver or<font color="#CCCCCC"> AMR impeach rubber so this is</font>

316
00:16:13,230 --> 00:16:22,710
a specifically design for<font color="#E5E5E5"> a hardware</font>

317
00:16:17,280 --> 00:16:26,550
decoding or encoding<font color="#CCCCCC"> so let's first take</font>

318
00:16:22,710 --> 00:16:29,750
a look<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the control device so this is</font>

319
00:16:26,550 --> 00:16:31,890
the chart that services<font color="#CCCCCC"> a control device</font>

320
00:16:29,750 --> 00:16:34,740
<font color="#E5E5E5">you may find</font><font color="#CCCCCC"> that there are</font><font color="#E5E5E5"> three</font>

321
00:16:31,890 --> 00:16:38,490
<font color="#E5E5E5">function pointers the given for the</font><font color="#CCCCCC"> gate</font>

322
00:16:34,740 --> 00:16:40,500
put these three function pointers<font color="#E5E5E5"> a user</font>

323
00:16:38,490 --> 00:16:44,730
accessible interfaces which<font color="#E5E5E5"> means that</font>

324
00:16:40,500 --> 00:16:46,590
the<font color="#E5E5E5"> user space code could invoke the</font>

325
00:16:44,730 --> 00:16:51,120
<font color="#E5E5E5">current space code is</font><font color="#CCCCCC"> released three</font>

326
00:16:46,590 --> 00:16:53,700
different function pointers so there is

327
00:16:51,120 --> 00:16:57,450
the assumption that<font color="#CCCCCC"> we know that how</font>

328
00:16:53,700 --> 00:17:00,390
user space code<font color="#E5E5E5"> UVO consistory function</font>

329
00:16:57,450 --> 00:17:04,620
<font color="#E5E5E5">part then we can know how to</font><font color="#CCCCCC"> fast the</font>

330
00:17:00,390 --> 00:17:08,129
corner so<font color="#CCCCCC"> let's see from</font><font color="#E5E5E5"> the kernel code</font>

331
00:17:04,619 --> 00:17:10,290
<font color="#CCCCCC">I'll</font><font color="#E5E5E5"> control that response to this user</font>

332
00:17:08,130 --> 00:17:13,949
space<font color="#E5E5E5"> commanding I find that there are</font>

333
00:17:10,290 --> 00:17:17,970
UFO sonar control control<font color="#E5E5E5"> cottage info</font>

334
00:17:13,949 --> 00:17:21,150
and the<font color="#CCCCCC"> read and write</font><font color="#E5E5E5"> so let's first</font>

335
00:17:17,970 --> 00:17:23,790
check in the read the<font color="#CCCCCC"> weightages</font>

336
00:17:21,150 --> 00:17:29,820
correspond ability to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> boat</font>

337
00:17:23,790 --> 00:17:32,639
so if user space code<font color="#CCCCCC"> call this right</font>

338
00:17:29,820 --> 00:17:35,010
this right<font color="#CCCCCC"> command</font><font color="#E5E5E5"> to the corner the</font>

339
00:17:32,640 --> 00:17:37,500
<font color="#CCCCCC">reverse firstly possibly a buffer you</font>

340
00:17:35,010 --> 00:17:40,350
<font color="#E5E5E5">the buffer control the structure use</font>

341
00:17:37,500 --> 00:17:43,650
some liquid<font color="#E5E5E5"> rating the value this</font><font color="#CCCCCC"> are</font>

342
00:17:40,350 --> 00:17:44,928
<font color="#CCCCCC">free</font><font color="#E5E5E5"> from user space and the finally</font>

343
00:17:43,650 --> 00:17:48,559
called<font color="#E5E5E5"> the Sonic</font>

344
00:17:44,929 --> 00:17:51,409
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> diamond right with the same</font>

345
00:17:48,559 --> 00:17:53,658
<font color="#E5E5E5">buffer the</font><font color="#CCCCCC"> powerful in the dysfunction</font>

346
00:17:51,409 --> 00:17:57,019
is where firstly<font color="#CCCCCC"> finding ID catches a</font>

347
00:17:53,659 --> 00:17:58,730
control object and the users control

348
00:17:57,019 --> 00:18:02,980
<font color="#E5E5E5">project to finally call the function</font>

349
00:17:58,730 --> 00:18:06,950
pointers<font color="#E5E5E5"> so if we want to invoke this</font>

350
00:18:02,980 --> 00:18:09,320
put<font color="#E5E5E5"> interface we should firstly find the</font>

351
00:18:06,950 --> 00:18:12,049
control object<font color="#E5E5E5"> the picture object that</font>

352
00:18:09,320 --> 00:18:16,039
you find based<font color="#E5E5E5"> only control ID so we</font>

353
00:18:12,049 --> 00:18:18,408
<font color="#CCCCCC">need to know what is a control ID so</font>

354
00:18:16,039 --> 00:18:21,740
<font color="#E5E5E5">this is basically the user space buffer</font>

355
00:18:18,409 --> 00:18:24,799
you<font color="#E5E5E5"> can find that the first element is</font>

356
00:18:21,740 --> 00:18:27,619
<font color="#CCCCCC">the sunny contain the IP and the server</font>

357
00:18:24,799 --> 00:18:30,559
there<font color="#E5E5E5"> is a union buffer with this buffer</font>

358
00:18:27,619 --> 00:18:35,178
typically from a universe pace but have

359
00:18:30,559 --> 00:18:38,450
different<font color="#E5E5E5"> the types type so what is the</font>

360
00:18:35,179 --> 00:18:40,549
<font color="#CCCCCC">NYP</font><font color="#E5E5E5"> let's check the function that</font><font color="#CCCCCC"> uses</font>

361
00:18:38,450 --> 00:18:44,450
this<font color="#CCCCCC"> ID to</font><font color="#E5E5E5"> find an object I'll control</font>

362
00:18:40,549 --> 00:18:47,990
<font color="#E5E5E5">can we find</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> finally it will compare</font>

363
00:18:44,450 --> 00:18:51,769
this<font color="#CCCCCC"> IG num ID under this ID structure</font>

364
00:18:47,990 --> 00:18:54,259
to check if the ID match the<font color="#CCCCCC"> calendar</font>

365
00:18:51,769 --> 00:18:58,850
<font color="#CCCCCC">control object</font><font color="#E5E5E5"> if it's much it will</font>

366
00:18:54,259 --> 00:19:01,330
return the kinship directly so I could

367
00:18:58,850 --> 00:19:06,110
guess<font color="#CCCCCC"> that maybe</font><font color="#E5E5E5"> the cinema IDs</font>

368
00:19:01,330 --> 00:19:09,549
<font color="#E5E5E5">incremental from zero</font><font color="#CCCCCC"> so is</font><font color="#E5E5E5"> that true</font>

369
00:19:06,110 --> 00:19:13,189
I like some<font color="#E5E5E5"> code the tabs the ID in my</font>

370
00:19:09,549 --> 00:19:16,090
<font color="#E5E5E5">Nexus devices from this sample</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> may</font>

371
00:19:13,190 --> 00:19:20,809
find<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> see is the</font><font color="#CCCCCC"> number IDs is</font>

372
00:19:16,090 --> 00:19:24,199
indeed incremental from from<font color="#E5E5E5"> one to more</font>

373
00:19:20,809 --> 00:19:26,629
than<font color="#CCCCCC"> 1000</font><font color="#E5E5E5"> so there could be so many</font>

374
00:19:24,200 --> 00:19:31,820
control objects<font color="#E5E5E5"> so that</font><font color="#CCCCCC"> could be</font>

375
00:19:26,629 --> 00:19:34,189
potentially a big attack surface so the

376
00:19:31,820 --> 00:19:38,029
next thing is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know how</font>

377
00:19:34,190 --> 00:19:39,769
this input is used because we<font color="#E5E5E5"> know we</font>

378
00:19:38,029 --> 00:19:43,909
know<font color="#CCCCCC"> how to get</font><font color="#E5E5E5"> it integer then we</font>

379
00:19:39,769 --> 00:19:46,820
should know how<font color="#CCCCCC"> is put or write read is</font>

380
00:19:43,909 --> 00:19:50,049
used so formally a technical piece of

381
00:19:46,820 --> 00:19:52,519
some code we can find that for example

382
00:19:50,049 --> 00:19:55,580
<font color="#E5E5E5">this control</font><font color="#CCCCCC"> universally</font>

383
00:19:52,519 --> 00:19:58,610
<font color="#CCCCCC">pastor to the global variable</font>

384
00:19:55,580 --> 00:20:04,010
<font color="#CCCCCC">Emerson's</font><font color="#E5E5E5"> slamfire</font><font color="#CCCCCC"> XH</font>

385
00:19:58,610 --> 00:20:06,110
and then this<font color="#CCCCCC"> elbow elbow is again pasta</font>

386
00:20:04,010 --> 00:20:09,230
<font color="#E5E5E5">to a local</font><font color="#CCCCCC"> variable</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a look over</font>

387
00:20:06,110 --> 00:20:12,889
<font color="#E5E5E5">bikes each account and finally passing</font>

388
00:20:09,230 --> 00:20:15,830
as<font color="#E5E5E5"> an argument</font><font color="#CCCCCC"> in this function</font><font color="#E5E5E5"> sound</font>

389
00:20:12,890 --> 00:20:19,430
associated<font color="#E5E5E5"> channel back</font><font color="#CCCCCC"> past action so</font>

390
00:20:15,830 --> 00:20:26,179
it<font color="#CCCCCC"> assuming that this</font><font color="#E5E5E5"> a user space value</font>

391
00:20:19,430 --> 00:20:31,060
<font color="#E5E5E5">is</font><font color="#CCCCCC"> used soup complicated so the logical</font>

392
00:20:26,180 --> 00:20:35,150
seems very complicated<font color="#E5E5E5"> so how many puts</font>

393
00:20:31,060 --> 00:20:38,300
in the corner let's search it

394
00:20:35,150 --> 00:20:40,550
I'm parabola structure I find that<font color="#CCCCCC"> to</font>

395
00:20:38,300 --> 00:20:42,169
their mother<font color="#E5E5E5"> mm it means that the</font>

396
00:20:40,550 --> 00:20:45,290
possibility<font color="#CCCCCC"> their mo more than 2</font>

397
00:20:42,170 --> 00:20:48,380
thousand kotis sniffs that we are in

398
00:20:45,290 --> 00:20:53,720
<font color="#E5E5E5">vocalist</font><font color="#CCCCCC"> pout from the personal</font><font color="#E5E5E5"> the user</font>

399
00:20:48,380 --> 00:20:59,540
<font color="#CCCCCC">spaces buffer so this could be a</font><font color="#E5E5E5"> big the</font>

400
00:20:53,720 --> 00:21:04,160
attack surface so the next step is just

401
00:20:59,540 --> 00:21:07,010
to fuzz it so it's very<font color="#E5E5E5"> simple to write</font>

402
00:21:04,160 --> 00:21:10,340
it<font color="#E5E5E5"> falling</font><font color="#CCCCCC"> lesson ten lines of code</font>

403
00:21:07,010 --> 00:21:13,190
fuzzy<font color="#E5E5E5"> is this kind of watched the first</font>

404
00:21:10,340 --> 00:21:17,409
I open these control device and are

405
00:21:13,190 --> 00:21:20,750
passing<font color="#E5E5E5"> craft a very big value to this</font>

406
00:21:17,410 --> 00:21:23,540
user space buffer<font color="#E5E5E5"> and then I keep the</font>

407
00:21:20,750 --> 00:21:26,870
Nama ID incremental from<font color="#E5E5E5"> one to mother</font>

408
00:21:23,540 --> 00:21:29,060
<font color="#CCCCCC">once on the auto servant and use this</font>

409
00:21:26,870 --> 00:21:32,330
element the<font color="#E5E5E5"> son of change I will control</font>

410
00:21:29,060 --> 00:21:35,000
any minute<font color="#E5E5E5"> right command to the</font><font color="#CCCCCC"> vocals I</font>

411
00:21:32,330 --> 00:21:42,050
<font color="#CCCCCC">will control to pass into the corner</font>

412
00:21:35,000 --> 00:21:44,750
directly so what is a result<font color="#CCCCCC"> the result</font>

413
00:21:42,050 --> 00:21:47,450
is surprising so I got a<font color="#CCCCCC"> buzzer</font>

414
00:21:44,750 --> 00:21:49,700
<font color="#CCCCCC">McConnell crash happened continues even</font>

415
00:21:47,450 --> 00:21:54,220
I<font color="#CCCCCC"> fix one of</font><font color="#E5E5E5"> those bags there could be</font>

416
00:21:49,700 --> 00:21:54,220
continued at<font color="#E5E5E5"> a corner</font><font color="#CCCCCC"> cross happened</font>

417
00:21:54,430 --> 00:22:01,250
after<font color="#E5E5E5"> checking these bags</font><font color="#CCCCCC"> I find that</font>

418
00:21:58,000 --> 00:22:05,000
this bag types or must cover all the

419
00:22:01,250 --> 00:22:07,160
common<font color="#E5E5E5"> bathtubs that</font><font color="#CCCCCC"> we we</font><font color="#E5E5E5"> are facing</font>

420
00:22:05,000 --> 00:22:10,300
for example<font color="#CCCCCC"> stackoverflow hey Buffalo</font>

421
00:22:07,160 --> 00:22:12,320
<font color="#CCCCCC">they use out free</font><font color="#E5E5E5"> rest conditions or</font>

422
00:22:10,300 --> 00:22:17,120
similar<font color="#CCCCCC"> almost</font>

423
00:22:12,320 --> 00:22:20,120
the common pocket apps are covered and

424
00:22:17,120 --> 00:22:22,909
<font color="#E5E5E5">this is a buggy ecosystem it should be</font>

425
00:22:20,120 --> 00:22:25,639
said that<font color="#E5E5E5"> this defect code is not only</font>

426
00:22:22,910 --> 00:22:29,300
<font color="#E5E5E5">in one winter or to enrich the whole</font>

427
00:22:25,640 --> 00:22:32,110
<font color="#E5E5E5">acres ecosystem is affected</font><font color="#CCCCCC"> so for</font>

428
00:22:29,300 --> 00:22:37,480
<font color="#E5E5E5">example the outside project the</font><font color="#CCCCCC"> Cockrum</font>

429
00:22:32,110 --> 00:22:43,399
<font color="#CCCCCC">nht nvidia DTS even the device</font>

430
00:22:37,480 --> 00:22:46,340
manufacturer for example<font color="#E5E5E5"> 1</font><font color="#CCCCCC"> + so let's go</font>

431
00:22:43,400 --> 00:22:49,900
review some some of the typical<font color="#E5E5E5"> bags for</font>

432
00:22:46,340 --> 00:22:52,459
example for cocoa device codex<font color="#CCCCCC"> river</font>

433
00:22:49,900 --> 00:22:57,290
take the case one<font color="#E5E5E5"> auto button to access</font>

434
00:22:52,460 --> 00:22:59,930
<font color="#E5E5E5">the closed list</font><font color="#CCCCCC"> the code</font><font color="#E5E5E5"> technic buffer</font>

435
00:22:57,290 --> 00:23:02,930
the control<font color="#E5E5E5"> powerful user space directly</font>

436
00:22:59,930 --> 00:23:06,680
<font color="#E5E5E5">and there's no sanity checking and the</font>

437
00:23:02,930 --> 00:23:09,080
<font color="#E5E5E5">use this value to</font><font color="#CCCCCC"> do as index of the</font>

438
00:23:06,680 --> 00:23:13,060
array so<font color="#CCCCCC"> that will cause direct across</font>

439
00:23:09,080 --> 00:23:15,980
<font color="#CCCCCC">Auto button access now</font><font color="#E5E5E5"> I'm on the</font>

440
00:23:13,060 --> 00:23:20,780
developers<font color="#E5E5E5"> because there is a</font><font color="#CCCCCC"> note are</font>

441
00:23:15,980 --> 00:23:24,110
checking some some people<font color="#CCCCCC"> the pointer</font>

442
00:23:20,780 --> 00:23:28,000
use<font color="#E5E5E5"> et Colin checking it is now so it</font>

443
00:23:24,110 --> 00:23:31,370
will<font color="#E5E5E5"> directly lead to</font><font color="#CCCCCC"> a lab</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> at MPT</font>

444
00:23:28,000 --> 00:23:35,570
the<font color="#E5E5E5"> capable follow because this value</font>

445
00:23:31,370 --> 00:23:40,010
<font color="#E5E5E5">also it has not checked the</font><font color="#CCCCCC"> volatility</font>

446
00:23:35,570 --> 00:23:43,820
so already used to<font color="#E5E5E5"> as a in a loop at</font><font color="#CCCCCC"> the</font>

447
00:23:40,010 --> 00:23:49,220
index in a loop so we are definitely

448
00:23:43,820 --> 00:23:53,889
causing hip over<font color="#E5E5E5"> overflow</font><font color="#CCCCCC"> also there's a</font>

449
00:23:49,220 --> 00:24:00,020
type of<font color="#E5E5E5"> confusion bags because</font><font color="#CCCCCC"> kokum</font>

450
00:23:53,890 --> 00:24:03,440
incorrectly use this a structure so this

451
00:24:00,020 --> 00:24:07,220
will cause the type confusion<font color="#E5E5E5"> and you</font>

452
00:24:03,440 --> 00:24:09,800
<font color="#CCCCCC">live to colonel cross so this is a</font>

453
00:24:07,220 --> 00:24:14,060
typical for<font color="#E5E5E5"> for bags that I share</font><font color="#CCCCCC"> video</font>

454
00:24:09,800 --> 00:24:17,300
<font color="#CCCCCC">a lot of battle here I will</font><font color="#E5E5E5"> not go</font>

455
00:24:14,060 --> 00:24:19,940
through<font color="#CCCCCC"> on one by one and so we just</font>

456
00:24:17,300 --> 00:24:23,060
<font color="#CCCCCC">talked about a boot which is</font><font color="#E5E5E5"> that users</font>

457
00:24:19,940 --> 00:24:25,880
<font color="#CCCCCC">best</font><font color="#E5E5E5"> could write something to Connor but</font>

458
00:24:23,060 --> 00:24:27,470
<font color="#E5E5E5">what about a kid possibly that</font>

459
00:24:25,880 --> 00:24:29,540
means that<font color="#E5E5E5"> the user space</font><font color="#CCCCCC"> coder will</font>

460
00:24:27,470 --> 00:24:35,270
really<font color="#CCCCCC"> some shit from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> corner</font><font color="#E5E5E5"> German</font>

461
00:24:29,540 --> 00:24:38,510
so but<font color="#E5E5E5"> but basically the gate is not</font>

462
00:24:35,270 --> 00:24:41,300
difficult to<font color="#E5E5E5"> be fast to</font><font color="#CCCCCC"> listen to Connor</font>

463
00:24:38,510 --> 00:24:44,810
cries because the only<font color="#E5E5E5"> really some</font>

464
00:24:41,300 --> 00:24:49,399
sensitive data<font color="#E5E5E5"> so I decide to</font><font color="#CCCCCC"> audio the</font>

465
00:24:44,810 --> 00:24:51,950
code<font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> typical example that</font>

466
00:24:49,400 --> 00:24:55,700
<font color="#CCCCCC">arrays an uninitialized stock</font><font color="#E5E5E5"> variable</font>

467
00:24:51,950 --> 00:24:58,580
<font color="#E5E5E5">leakage the cocoa cocoa encounter that</font>

468
00:24:55,700 --> 00:25:01,220
<font color="#E5E5E5">is this group this array</font><font color="#CCCCCC"> Luca rail has</font>

469
00:24:58,580 --> 00:25:03,159
not been initialized<font color="#CCCCCC"> and as there</font><font color="#E5E5E5"> is no</font>

470
00:25:01,220 --> 00:25:07,250
return<font color="#CCCCCC"> value check after the calling</font>

471
00:25:03,160 --> 00:25:10,280
<font color="#CCCCCC">check</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> the passing value and</font>

472
00:25:07,250 --> 00:25:12,560
<font color="#E5E5E5">finally it will be passed divided to the</font>

473
00:25:10,280 --> 00:25:17,500
user space control buffer<font color="#E5E5E5"> so it will be</font>

474
00:25:12,560 --> 00:25:22,190
due to<font color="#E5E5E5"> a corner stack leakage</font>

475
00:25:17,500 --> 00:25:25,790
also the<font color="#E5E5E5"> information disclosure</font><font color="#CCCCCC"> pledges</font>

476
00:25:22,190 --> 00:25:27,760
<font color="#E5E5E5">also the</font><font color="#CCCCCC"> user specifies the use as</font><font color="#E5E5E5"> the</font>

477
00:25:25,790 --> 00:25:32,420
index<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the loop</font>

478
00:25:27,760 --> 00:25:34,520
<font color="#E5E5E5">and there is no any sanity checking</font><font color="#CCCCCC"> in</font>

479
00:25:32,420 --> 00:25:39,590
<font color="#CCCCCC">digger</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> following Hippogriff</font><font color="#E5E5E5"> all</font>

480
00:25:34,520 --> 00:25:43,550
follow also because<font color="#E5E5E5"> of the lake house</font>

481
00:25:39,590 --> 00:25:46,459
sanity checking of<font color="#CCCCCC"> the us-based</font><font color="#E5E5E5"> value so</font>

482
00:25:43,550 --> 00:25:49,760
this is all<font color="#CCCCCC"> about in the welcome for</font>

483
00:25:46,460 --> 00:25:51,650
<font color="#E5E5E5">home code so I could get</font><font color="#CCCCCC"> because it is</font>

484
00:25:49,760 --> 00:25:54,200
also a former<font color="#E5E5E5"> worker is a common formal</font>

485
00:25:51,650 --> 00:25:56,450
work<font color="#CCCCCC"> but</font><font color="#E5E5E5"> many different devices of the</font>

486
00:25:54,200 --> 00:25:59,870
different hardware<font color="#CCCCCC"> maybe have the same</font>

487
00:25:56,450 --> 00:26:06,410
<font color="#CCCCCC">logic</font><font color="#E5E5E5"> so what about these other vendors</font>

488
00:25:59,870 --> 00:26:08,649
<font color="#E5E5E5">are also this kind of problem so this is</font>

489
00:26:06,410 --> 00:26:12,110
a crunch that this is a question<font color="#CCCCCC"> that</font>

490
00:26:08,650 --> 00:26:15,110
happened during my files<font color="#CCCCCC"> I finalized in</font>

491
00:26:12,110 --> 00:26:20,090
our<font color="#E5E5E5"> author project there is also a stack</font>

492
00:26:15,110 --> 00:26:23,870
overflow problem<font color="#CCCCCC"> but there is</font><font color="#E5E5E5"> an index</font>

493
00:26:20,090 --> 00:26:26,480
used in the loop as a written<font color="#CCCCCC"> text older</font>

494
00:26:23,870 --> 00:26:28,939
array but it didn't check<font color="#E5E5E5"> if how to</font>

495
00:26:26,480 --> 00:26:30,770
reaches the max<font color="#E5E5E5"> value so</font><font color="#CCCCCC"> they were</font>

496
00:26:28,940 --> 00:26:34,940
definitely<font color="#CCCCCC"> caused the stacker</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> even</font>

497
00:26:30,770 --> 00:26:38,860
the kernel<font color="#CCCCCC"> quest</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> I look at the</font>

498
00:26:34,940 --> 00:26:38,860
inside some and reader devices

499
00:26:38,940 --> 00:26:45,840
the nvidia tegra<font color="#E5E5E5"> 200 of tang</font>

500
00:26:42,629 --> 00:26:49,109
there are also since<font color="#CCCCCC"> sometime lot</font><font color="#E5E5E5"> of</font>

501
00:26:45,840 --> 00:26:50,728
code has a same logic to<font color="#E5E5E5"> also get a</font>

502
00:26:49,109 --> 00:26:53,580
value<font color="#E5E5E5"> from the color from the</font><font color="#CCCCCC"> other</font>

503
00:26:50,729 --> 00:26:57,539
space<font color="#E5E5E5"> and there's no Santa chicken</font><font color="#CCCCCC"> just</font>

504
00:26:53,580 --> 00:27:00,869
using unity directly<font color="#E5E5E5"> this is a buffer</font>

505
00:26:57,539 --> 00:27:14,269
overflow case is<font color="#E5E5E5"> also a buffer</font><font color="#CCCCCC"> over</font>

506
00:27:00,869 --> 00:27:15,709
Lucas<font color="#CCCCCC"> autobahn access to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same XP so</font>

507
00:27:14,269 --> 00:27:19,940
after finding

508
00:27:15,710 --> 00:27:22,409
Raeleen<font color="#CCCCCC"> in so many bags that i find that</font>

509
00:27:19,940 --> 00:27:24,679
<font color="#E5E5E5">it may be a common problem that</font>

510
00:27:22,409 --> 00:27:27,809
developers<font color="#CCCCCC"> corner developers a</font>

511
00:27:24,679 --> 00:27:31,049
misunderstanding of this<font color="#E5E5E5"> logic there may</font>

512
00:27:27,809 --> 00:27:34,200
be some<font color="#E5E5E5"> coming issues happened the</font>

513
00:27:31,049 --> 00:27:37,379
device which<font color="#E5E5E5"> are tested</font><font color="#CCCCCC"> only i only test</font>

514
00:27:34,200 --> 00:27:39,570
the service<font color="#E5E5E5"> Nexus 6p</font><font color="#CCCCCC"> one plus three and</font>

515
00:27:37,379 --> 00:27:41,699
a pixel<font color="#CCCCCC"> C because I would have these</font>

516
00:27:39,570 --> 00:27:44,269
three devices<font color="#CCCCCC"> I will not try the other</font>

517
00:27:41,700 --> 00:27:47,220
yet but<font color="#CCCCCC"> I basically could imagine that</font>

518
00:27:44,269 --> 00:27:51,330
there could be more<font color="#E5E5E5"> than other vendors</font>

519
00:27:47,220 --> 00:27:53,789
affected by this kind<font color="#CCCCCC"> of problem if you</font>

520
00:27:51,330 --> 00:27:57,389
are<font color="#E5E5E5"> interested in my taste test</font><font color="#CCCCCC"> the</font>

521
00:27:53,789 --> 00:28:01,169
yourself so what is the problem

522
00:27:57,389 --> 00:28:04,199
<font color="#CCCCCC">let's read so the stroke this struck</font><font color="#E5E5E5"> the</font>

523
00:28:01,169 --> 00:28:07,710
user space struct<font color="#E5E5E5"> but passing in a gate</font>

524
00:28:04,200 --> 00:28:11,220
<font color="#CCCCCC">boot is originally designed to</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> rid</font>

525
00:28:07,710 --> 00:28:13,529
of<font color="#E5E5E5"> gate and write values from or to the</font>

526
00:28:11,220 --> 00:28:16,830
codec hardware which is<font color="#E5E5E5"> really basically</font>

527
00:28:13,529 --> 00:28:19,559
it is only used<font color="#E5E5E5"> to read and write values</font>

528
00:28:16,830 --> 00:28:22,529
to the create<font color="#E5E5E5"> hardware register this</font>

529
00:28:19,559 --> 00:28:25,799
<font color="#E5E5E5">shouldn't be</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> too complicated to</font>

530
00:28:22,529 --> 00:28:28,590
some logic<font color="#E5E5E5"> that very glad that is very</font>

531
00:28:25,799 --> 00:28:30,479
<font color="#CCCCCC">complicated</font><font color="#E5E5E5"> so it</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> did the</font>

532
00:28:28,590 --> 00:28:35,488
<font color="#E5E5E5">kernel</font><font color="#CCCCCC"> buffer but</font><font color="#E5E5E5"> is data coming from</font>

533
00:28:30,479 --> 00:28:37,379
<font color="#CCCCCC">user space</font><font color="#E5E5E5"> it's often misused by printer</font>

534
00:28:35,489 --> 00:28:40,950
developer to the some complications but

535
00:28:37,379 --> 00:28:43,259
<font color="#E5E5E5">without the sanity checking so this</font>

536
00:28:40,950 --> 00:28:46,889
<font color="#E5E5E5">exposed in a wide</font><font color="#CCCCCC"> range of corner go to</font>

537
00:28:43,259 --> 00:28:49,349
the<font color="#CCCCCC"> to</font><font color="#E5E5E5"> Euler space and the possibility</font>

538
00:28:46,889 --> 00:28:51,129
because the also our project<font color="#E5E5E5"> whether the</font>

539
00:28:49,349 --> 00:28:54,770
<font color="#CCCCCC">fourth design</font>

540
00:28:51,130 --> 00:28:56,390
actually the vendor the<font color="#E5E5E5"> collector</font>

541
00:28:54,770 --> 00:29:03,230
developers whether<font color="#E5E5E5"> the implementation</font>

542
00:28:56,390 --> 00:29:05,540
<font color="#E5E5E5">there could be some gaps so we have just</font>

543
00:29:03,230 --> 00:29:07,880
<font color="#CCCCCC">a book</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about the control but</font>

544
00:29:05,540 --> 00:29:10,430
what a bubble the others because there

545
00:29:07,880 --> 00:29:12,010
are a lot<font color="#CCCCCC"> of attack surface loved inside</font>

546
00:29:10,430 --> 00:29:16,820
the<font color="#E5E5E5"> tremor</font>

547
00:29:12,010 --> 00:29:19,820
this is<font color="#CCCCCC"> hardware DEP this RTGS is a code</font>

548
00:29:16,820 --> 00:29:23,629
<font color="#E5E5E5">at the defect color from TGS the rest</font>

549
00:29:19,820 --> 00:29:26,510
condition<font color="#E5E5E5"> will definitely</font><font color="#CCCCCC"> cause you F or</font>

550
00:29:23,630 --> 00:29:29,260
type<font color="#E5E5E5"> of free then there is you know or</font>

551
00:29:26,510 --> 00:29:31,700
some blocks for this global variable

552
00:29:29,260 --> 00:29:34,550
<font color="#E5E5E5">sake</font><font color="#CCCCCC"> Paloma is a global level</font><font color="#E5E5E5"> but it's</font>

553
00:29:31,700 --> 00:29:38,030
there is no it doesn't keep it<font color="#CCCCCC"> as there</font>

554
00:29:34,550 --> 00:29:41,480
<font color="#CCCCCC">is no log to control this so</font><font color="#E5E5E5"> Lisa to</font>

555
00:29:38,030 --> 00:29:43,670
stress<font color="#CCCCCC"> risk</font><font color="#E5E5E5"> condition to do to call this</font>

556
00:29:41,480 --> 00:29:50,060
<font color="#E5E5E5">never be definitely a risk additionally</font>

557
00:29:43,670 --> 00:29:52,370
we will<font color="#E5E5E5"> definitely get to UF also</font><font color="#CCCCCC"> on the</font>

558
00:29:50,060 --> 00:29:56,659
playback<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the capture that also use</font>

559
00:29:52,370 --> 00:30:00,590
after free<font color="#E5E5E5"> some pointers is freed but</font>

560
00:29:56,660 --> 00:30:05,330
not<font color="#CCCCCC"> certain now</font><font color="#E5E5E5"> this will lead it to</font><font color="#CCCCCC"> a</font>

561
00:30:00,590 --> 00:30:08,209
<font color="#CCCCCC">talent pointer and the</font><font color="#E5E5E5"> Wayne I call it</font>

562
00:30:05,330 --> 00:30:11,210
from the<font color="#CCCCCC"> port interface this pointer</font>

563
00:30:08,210 --> 00:30:15,380
will<font color="#CCCCCC"> be twerpy we used this will finally</font>

564
00:30:11,210 --> 00:30:17,300
cut<font color="#E5E5E5"> the use of the</font><font color="#CCCCCC"> field also in</font>

565
00:30:15,380 --> 00:30:25,460
<font color="#CCCCCC">hideaway fire effects there are</font><font color="#E5E5E5"> some a</font>

566
00:30:17,300 --> 00:30:28,850
lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> autobahns access so</font><font color="#E5E5E5"> we have just</font>

567
00:30:25,460 --> 00:30:32,360
revealed some typical<font color="#CCCCCC"> dead bugs</font>

568
00:30:28,850 --> 00:30:34,340
what about exploitation<font color="#E5E5E5"> so the unit</font>

569
00:30:32,360 --> 00:30:38,120
<font color="#E5E5E5">stalker will not go through as a detail</font>

570
00:30:34,340 --> 00:30:41,510
how<font color="#E5E5E5"> to install</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> back because that</font><font color="#CCCCCC"> can</font>

571
00:30:38,120 --> 00:30:45,020
<font color="#CCCCCC">remember focus but</font><font color="#E5E5E5"> I will introduce some</font>

572
00:30:41,510 --> 00:30:47,690
<font color="#E5E5E5">thinking how to export</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> this box</font>

573
00:30:45,020 --> 00:30:49,879
essentially how to reach this box from a

574
00:30:47,690 --> 00:30:51,280
<font color="#E5E5E5">third-party application</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> unprivileged</font>

575
00:30:49,880 --> 00:30:54,950
in an application

576
00:30:51,280 --> 00:30:58,129
look at<font color="#E5E5E5"> this sound occurs sound the</font>

577
00:30:54,950 --> 00:31:01,460
driver it can be only<font color="#E5E5E5"> accessible from</font>

578
00:30:58,130 --> 00:31:05,349
<font color="#CCCCCC">the processors</font><font color="#E5E5E5"> that's within the aig</font>

579
00:31:01,460 --> 00:31:08,869
audio group so I check the

580
00:31:05,349 --> 00:31:11,049
all the process that<font color="#E5E5E5"> in this are ard</font>

581
00:31:08,869 --> 00:31:15,549
audio<font color="#E5E5E5"> groups</font><font color="#CCCCCC"> I find that most of</font><font color="#E5E5E5"> the</font>

582
00:31:11,049 --> 00:31:18,229
<font color="#CCCCCC">system</font><font color="#E5E5E5"> web applications and the system</font>

583
00:31:15,549 --> 00:31:20,658
<font color="#CCCCCC">persist on</font><font color="#E5E5E5"> the middle</font><font color="#CCCCCC"> media-related</font><font color="#E5E5E5"> a</font>

584
00:31:18,229 --> 00:31:22,999
server processes<font color="#CCCCCC"> I in this score</font><font color="#E5E5E5"> for</font>

585
00:31:20,659 --> 00:31:25,279
<font color="#E5E5E5">example the audio server the camera</font>

586
00:31:22,999 --> 00:31:31,489
server<font color="#CCCCCC"> media server the system server</font>

587
00:31:25,279 --> 00:31:36,409
and<font color="#E5E5E5"> also some</font><font color="#CCCCCC"> Google GMs</font><font color="#E5E5E5"> or some other</font>

588
00:31:31,489 --> 00:31:40,039
system applications from<font color="#E5E5E5"> Google so</font>

589
00:31:36,409 --> 00:31:42,470
basically if we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to exploit</font><font color="#E5E5E5"> these</font>

590
00:31:40,039 --> 00:31:45,799
cornerbacks<font color="#CCCCCC"> we should firstly</font><font color="#E5E5E5"> compile</font>

591
00:31:42,470 --> 00:31:49,849
these certain applications or system

592
00:31:45,799 --> 00:31:53,509
servers so is that<font color="#E5E5E5"> impulse is that</font>

593
00:31:49,849 --> 00:31:57,889
possible let's look<font color="#E5E5E5"> at the</font><font color="#CCCCCC"> address</font>

594
00:31:53,509 --> 00:32:00,440
<font color="#E5E5E5">security bulletins in this year or</font><font color="#CCCCCC"> last</font>

595
00:31:57,889 --> 00:32:03,019
year we<font color="#CCCCCC"> found</font><font color="#E5E5E5"> that there</font><font color="#CCCCCC"> are lots of</font>

596
00:32:00,440 --> 00:32:04,519
<font color="#E5E5E5">middle middle server backs</font><font color="#CCCCCC"> our system</font>

597
00:32:03,019 --> 00:32:08,869
server<font color="#CCCCCC"> bugs the audio server back</font>

598
00:32:04,519 --> 00:32:13,970
disclosed continuously<font color="#E5E5E5"> a lot o most of</font>

599
00:32:08,869 --> 00:32:16,249
my<font color="#CCCCCC"> our</font><font color="#E5E5E5"> privilege escalation backs which</font>

600
00:32:13,970 --> 00:32:19,460
means that<font color="#CCCCCC"> a</font><font color="#E5E5E5"> third party</font><font color="#CCCCCC"> application can</font>

601
00:32:16,249 --> 00:32:22,129
compromise<font color="#CCCCCC"> again for these bugs to</font><font color="#E5E5E5"> get a</font>

602
00:32:19,460 --> 00:32:27,559
code execution<font color="#E5E5E5"> in middle server this</font>

603
00:32:22,129 --> 00:32:29,959
<font color="#E5E5E5">privilege AG processes and so there</font>

604
00:32:27,559 --> 00:32:32,450
could<font color="#CCCCCC"> be two proposal that</font><font color="#E5E5E5"> which the</font>

605
00:32:29,960 --> 00:32:34,399
corner to our backs

606
00:32:32,450 --> 00:32:37,940
the first one is changing<font color="#E5E5E5"> from the</font>

607
00:32:34,399 --> 00:32:40,488
system server<font color="#E5E5E5"> project</font><font color="#CCCCCC"> Google particular</font>

608
00:32:37,940 --> 00:32:42,799
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> ruled this that</font><font color="#E5E5E5"> with a single</font>

609
00:32:40,489 --> 00:32:43,749
bag that gain the system server could<font color="#E5E5E5"> an</font>

610
00:32:42,799 --> 00:32:48,139
<font color="#CCCCCC">execution</font>

611
00:32:43,749 --> 00:32:51,440
so we<font color="#E5E5E5"> basically we could the</font><font color="#CCCCCC"> level</font><font color="#E5E5E5"> of</font>

612
00:32:48,139 --> 00:32:52,939
<font color="#E5E5E5">these bags from a local application to</font>

613
00:32:51,440 --> 00:32:55,340
compromise the system server

614
00:32:52,940 --> 00:32:57,769
we cater the hood excursion into the

615
00:32:55,340 --> 00:33:00,499
system server<font color="#E5E5E5"> then we get it probably</font>

616
00:32:57,769 --> 00:33:02,809
access<font color="#CCCCCC"> privilege to the sound each</font>

617
00:33:00,499 --> 00:33:04,580
rubber<font color="#CCCCCC"> kunsan</font><font color="#E5E5E5"> each rubber then we can to</font>

618
00:33:02,809 --> 00:33:06,369
<font color="#E5E5E5">CUDA exclusion</font><font color="#CCCCCC"> in so mature and refined</font>

619
00:33:04,580 --> 00:33:12,019
educated<font color="#E5E5E5"> routed through the</font><font color="#CCCCCC"> probability</font>

620
00:33:06,369 --> 00:33:14,570
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> a local root</font><font color="#E5E5E5"> case then the</font>

621
00:33:12,019 --> 00:33:18,390
second property<font color="#CCCCCC"> that we can chain in</font>

622
00:33:14,570 --> 00:33:21,720
firmly some audio meters or bugs because

623
00:33:18,390 --> 00:33:24,420
even in July in this month<font color="#CCCCCC"> there's still</font>

624
00:33:21,720 --> 00:33:28,170
a lot<font color="#E5E5E5"> o removable media server bugs</font>

625
00:33:24,420 --> 00:33:28,830
reported a bit on the<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> ad Joystiq</font>

626
00:33:28,170 --> 00:33:31,380
apology

627
00:33:28,830 --> 00:33:34,260
so we<font color="#CCCCCC"> basically we</font><font color="#E5E5E5"> can explore this</font>

628
00:33:31,380 --> 00:33:36,510
video server<font color="#CCCCCC"> backs to get it included</font>

629
00:33:34,260 --> 00:33:40,140
execution in audio<font color="#CCCCCC"> our media server</font>

630
00:33:36,510 --> 00:33:42,660
processes and finally there's no from

631
00:33:40,140 --> 00:33:47,430
the middle server process<font color="#CCCCCC"> we can't get</font>

632
00:33:42,660 --> 00:33:50,340
could can reach these bugs<font color="#E5E5E5"> so by</font><font color="#CCCCCC"> calling</font>

633
00:33:47,430 --> 00:33:54,180
<font color="#E5E5E5">this Sunday driver parks in corner we</font>

634
00:33:50,340 --> 00:33:58,620
can<font color="#E5E5E5"> finally at the most get a remote</font>

635
00:33:54,180 --> 00:34:02,880
Road destroyed so not Peter has proved

636
00:33:58,620 --> 00:34:05,879
this<font color="#E5E5E5"> in their metaphor working</font><font color="#CCCCCC"> real-life</font>

637
00:34:02,880 --> 00:34:09,930
<font color="#E5E5E5">okay still for the exploit not and from</font>

638
00:34:05,880 --> 00:34:12,900
<font color="#CCCCCC">a remote</font><font color="#E5E5E5"> leadership media file to get to</font>

639
00:34:09,929 --> 00:34:14,730
the code<font color="#E5E5E5"> execution emitter server this</font>

640
00:34:12,900 --> 00:34:19,320
<font color="#E5E5E5">has been improved</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the open</font><font color="#CCCCCC"> sourced</font>

641
00:34:14,730 --> 00:34:21,870
in github so but there could be some

642
00:34:19,320 --> 00:34:23,370
<font color="#CCCCCC">challenges</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> Google might occur in</font>

643
00:34:21,870 --> 00:34:27,210
<font color="#E5E5E5">the military Pegasus</font><font color="#CCCCCC"> intervention</font>

644
00:34:23,370 --> 00:34:29,609
<font color="#E5E5E5">version so if you want to eat Florence</font>

645
00:34:27,210 --> 00:34:31,560
in this way for<font color="#CCCCCC"> example explore through</font>

646
00:34:29,610 --> 00:34:33,110
the middle server<font color="#CCCCCC"> an audio server that</font>

647
00:34:31,560 --> 00:34:36,299
will<font color="#E5E5E5"> be definitely difficult</font><font color="#CCCCCC"> because</font>

648
00:34:33,110 --> 00:34:38,510
<font color="#CCCCCC">these privileges</font><font color="#E5E5E5"> are separated and</font>

649
00:34:36,300 --> 00:34:43,470
restrict with a limited access

650
00:34:38,510 --> 00:34:45,240
privileges<font color="#E5E5E5"> and you may need to</font><font color="#CCCCCC"> add</font>

651
00:34:43,469 --> 00:34:51,799
additional<font color="#E5E5E5"> barriers to break this</font>

652
00:34:45,239 --> 00:34:55,919
limitation<font color="#E5E5E5"> our restriction so the</font>

653
00:34:51,800 --> 00:34:59,100
conclusions the<font color="#CCCCCC"> first of kernel</font>

654
00:34:55,920 --> 00:35:01,830
developers<font color="#E5E5E5"> is a sketch boot interface to</font>

655
00:34:59,100 --> 00:35:04,890
configure the a sock SOC<font color="#CCCCCC"> codecs</font><font color="#E5E5E5"> but</font>

656
00:35:01,830 --> 00:35:07,410
often<font color="#CCCCCC"> with sanity checking and then this</font>

657
00:35:04,890 --> 00:35:11,160
opens<font color="#CCCCCC"> up attack</font><font color="#E5E5E5"> surface in</font><font color="#CCCCCC"> color</font><font color="#E5E5E5"> but</font>

658
00:35:07,410 --> 00:35:16,500
this<font color="#CCCCCC"> attacker is would usually be with</font>

659
00:35:11,160 --> 00:35:20,490
under overlooked so local or remote<font color="#E5E5E5"> a</font>

660
00:35:16,500 --> 00:35:22,560
<font color="#CCCCCC">rope road is a surgically</font><font color="#E5E5E5"> possible by</font>

661
00:35:20,490 --> 00:35:26,759
<font color="#E5E5E5">changing the backs from certain media or</font>

662
00:35:22,560 --> 00:35:29,490
audio camera servers<font color="#E5E5E5"> the</font><font color="#CCCCCC"> a SOC drivers</font>

663
00:35:26,760 --> 00:35:31,079
should be careful<font color="#CCCCCC"> when</font><font color="#E5E5E5"> handling this</font>

664
00:35:29,490 --> 00:35:33,299
<font color="#CCCCCC">guitar put interface</font>

665
00:35:31,079 --> 00:35:34,829
<font color="#CCCCCC">indicating</font><font color="#E5E5E5"> userspace values are</font><font color="#CCCCCC"> simply</font>

666
00:35:33,299 --> 00:35:41,430
used to<font color="#CCCCCC"> write away</font><font color="#E5E5E5"> the collected</font>

667
00:35:34,829 --> 00:35:43,859
<font color="#CCCCCC">register only so this</font><font color="#E5E5E5"> the main problem</font>

668
00:35:41,430 --> 00:35:48,598
<font color="#E5E5E5">is do letter that the</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> project</font>

669
00:35:43,859 --> 00:35:52,979
designs the logic and how how you how to

670
00:35:48,599 --> 00:35:55,729
use this code<font color="#E5E5E5"> to</font><font color="#CCCCCC"> to communicating from</font>

671
00:35:52,979 --> 00:35:58,169
<font color="#CCCCCC">the US based coder to</font><font color="#E5E5E5"> kernel code but</font>

672
00:35:55,729 --> 00:36:01,308
unfortunately the corner<font color="#E5E5E5"> developer the</font>

673
00:35:58,170 --> 00:36:04,849
most codec<font color="#E5E5E5"> driver developers</font>

674
00:36:01,309 --> 00:36:08,279
misunderstood<font color="#E5E5E5"> this so they think that</font>

675
00:36:04,849 --> 00:36:10,920
the use a concealer buffer<font color="#E5E5E5"> already a</font>

676
00:36:08,279 --> 00:36:13,229
<font color="#CCCCCC">corner buffer or something else without</font>

677
00:36:10,920 --> 00:36:15,809
to any<font color="#E5E5E5"> sanity checking before use it and</font>

678
00:36:13,229 --> 00:36:18,049
also they do they use this corner bar

679
00:36:15,809 --> 00:36:20,549
<font color="#CCCCCC">user space buffer to a lot of</font>

680
00:36:18,049 --> 00:36:22,619
<font color="#E5E5E5">complicated C's allows you a</font><font color="#CCCCCC"> lot of</font>

681
00:36:20,549 --> 00:36:28,589
<font color="#E5E5E5">different</font><font color="#CCCCCC"> and complicated</font><font color="#E5E5E5"> logical so</font>

682
00:36:22,619 --> 00:36:38,900
this leads to this issue<font color="#CCCCCC"> okay so this is</font>

683
00:36:28,589 --> 00:36:38,900
a measuring so any questions<font color="#CCCCCC"> okay</font>

684
00:36:46,170 --> 00:36:49,170
Alice

685
00:36:54,180 --> 00:37:03,850
definitely I didn't try they always

686
00:36:56,290 --> 00:37:05,860
tonight<font color="#E5E5E5"> but I think and I'm</font><font color="#CCCCCC"> not sure</font><font color="#E5E5E5"> the</font>

687
00:37:03,850 --> 00:37:14,319
<font color="#E5E5E5">outer corner use the same</font><font color="#CCCCCC"> travel</font>

688
00:37:05,860 --> 00:37:17,800
<font color="#E5E5E5">different but</font><font color="#CCCCCC"> maybe different</font><font color="#E5E5E5"> so if it</font>

689
00:37:14,320 --> 00:37:21,700
<font color="#E5E5E5">uses a totally different framework to</font>

690
00:37:17,800 --> 00:37:23,740
control this<font color="#E5E5E5"> codec driver so that</font><font color="#CCCCCC"> will</font>

691
00:37:21,700 --> 00:37:31,299
be not affected<font color="#E5E5E5"> but I'm I</font><font color="#CCCCCC"> cannot</font>

692
00:37:23,740 --> 00:37:33,370
<font color="#E5E5E5">mushrooms best additionally because</font><font color="#CCCCCC"> this</font>

693
00:37:31,300 --> 00:37:35,680
<font color="#CCCCCC">Paxton needed to be accessed from the</font>

694
00:37:33,370 --> 00:37:37,960
<font color="#CCCCCC">privileged</font><font color="#E5E5E5"> process which Mossad a</font>

695
00:37:35,680 --> 00:37:40,450
<font color="#E5E5E5">third-party application</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> I'm</font>

696
00:37:37,960 --> 00:37:42,070
privileged direct patient cannot to call

697
00:37:40,450 --> 00:37:44,710
this box which is<font color="#CCCCCC"> dispatcher</font><font color="#E5E5E5"> that you</font>

698
00:37:42,070 --> 00:37:46,480
should first<font color="#CCCCCC"> the chaining additional box</font>

699
00:37:44,710 --> 00:37:49,600
together the system<font color="#E5E5E5"> server privileged</font>

700
00:37:46,480 --> 00:37:52,240
the<font color="#CCCCCC"> layer to finally to compromise the</font>

701
00:37:49,600 --> 00:37:58,330
corner so that<font color="#CCCCCC"> may</font><font color="#E5E5E5"> be also different in</font>

702
00:37:52,240 --> 00:38:02,910
I<font color="#CCCCCC"> always almost them yeah</font>

703
00:37:58,330 --> 00:38:02,910
laughing<font color="#CCCCCC"> may be a big opportunity second</font>

704
00:38:03,210 --> 00:38:13,390
so any<font color="#E5E5E5"> other questions</font><font color="#CCCCCC"> okay so if you</font>

705
00:38:11,050 --> 00:38:16,810
have any question<font color="#E5E5E5"> you came</font><font color="#CCCCCC"> pimmy from</font>

706
00:38:13,390 --> 00:38:19,650
the Twitter or<font color="#CCCCCC"> my gmail after this talk</font>

707
00:38:16,810 --> 00:38:19,650
thank you

