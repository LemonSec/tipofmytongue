1
00:00:13,049 --> 00:00:13,490
yet

2
00:00:13,490 --> 00:00:17,310
China I guess from the bar too long

3
00:00:17,310 --> 00:00:21,950
I'm

4
00:00:21,950 --> 00:00:26,369
I max Appel I work at intrepid a screw
which is

5
00:00:26,369 --> 00:00:30,448
NCC group company now I'm a senior
consultant

6
00:00:30,449 --> 00:00:34,070
and the research co director were based
in New York City

7
00:00:34,070 --> 00:00:39,359
a I've done some past research a an NFC
and mobile wallets

8
00:00:39,359 --> 00:00:42,719
the Bay Area sports fan so it's good to
see

9
00:00:42,719 --> 00:00:45,870
more Giants fans out here New York

10
00:00:45,870 --> 00:00:49,599
doing so hot now

11
00:00:49,600 --> 00:00:54,499
%uh services talks going to focus on the
Android Open Source project

12
00:00:54,499 --> 00:00:59,829
and OEM's kinda where the two meet what
the OEM's ad on top

13
00:00:59,829 --> 00:01:02,969
the Android Open Source project and what
the consequences are so

14
00:01:02,969 --> 00:01:06,400
ruining some application issues I'm
kinda

15
00:01:06,400 --> 00:01:10,149
delve into some OEM specific
vulnerabilities to cover chipsets back

16
00:01:10,149 --> 00:01:10,829
doors

17
00:01:10,829 --> 00:01:14,639
look at the preloaded applications show
you as a tool for that

18
00:01:14,640 --> 00:01:17,729
they fit together %ah and

19
00:01:17,729 --> 00:01:21,969
and can give you an overview routing
post Android 4.0 that's the theme the

20
00:01:21,969 --> 00:01:22,699
stock

21
00:01:22,700 --> 00:01:27,299
I first what is the Android Open Source
project

22
00:01:27,299 --> 00:01:31,490
its its Android right what

23
00:01:31,490 --> 00:01:35,109
what it really is comprised that is
occurring all hardware abstraction layer

24
00:01:35,109 --> 00:01:38,359
same system services that it's up to the
oh yeah

25
00:01:38,359 --> 00:01:42,520
their equipment manufacture to to
implement the

26
00:01:42,520 --> 00:01:46,749
the harder a factual error code and
drivers for the specific hardware so I

27
00:01:46,749 --> 00:01:48,270
got on this device

28
00:01:48,270 --> 00:01:53,170
you can't just bill the Android Open
Source project loaded onto the device

29
00:01:53,170 --> 00:01:56,390
who dat cuz unit the drivers et cetera

30
00:01:56,390 --> 00:01:59,600
entered open source project can be bill

31
00:01:59,600 --> 00:02:03,559
s kinda sure Android for the Nexus 4
7:10

32
00:02:03,560 --> 00:02:06,960
some Galaxy Nexus devices but everything
else

33
00:02:06,960 --> 00:02:11,140
i sat on their and then with a typically
do is add outs on top

34
00:02:11,140 --> 00:02:16,190
that I'm so you get kind of a sandwich
in OEM sandwich at the lower layer

35
00:02:16,190 --> 00:02:19,720
the application where arms where focus
on

36
00:02:19,720 --> 00:02:23,600
oh %um components not ESP itself

37
00:02:23,600 --> 00:02:27,690
I some device components axiom

38
00:02:27,690 --> 00:02:32,810
really happy that 15 gave us talk before
mine cuz it covered a lot of the stuff

39
00:02:32,810 --> 00:02:37,340
I was gonna come to try to rush through
so hope we're here for that I was an

40
00:02:37,340 --> 00:02:40,480
awesome talking gave a lot of good
background for this stock

41
00:02:40,480 --> 00:02:44,660
to the bootloader like you mentioned
also

42
00:02:44,660 --> 00:02:48,470
insures that only sign code can be
booted I it's the first thing that runs

43
00:02:48,470 --> 00:02:49,970
when you turn your device on

44
00:02:49,970 --> 00:02:55,380
I will cover developer unlocking versus
exploit unlocking your bootloader

45
00:02:55,380 --> 00:02:59,210
which allowed to run unsigned code so
that's where a lot of the

46
00:02:59,210 --> 00:03:03,040
Android 4.0 roots are coming from essay
4.0 on time

47
00:03:03,040 --> 00:03:06,280
4.0 4.1 4.2 4.22

48
00:03:06,280 --> 00:03:10,740
I the recovery partition recovery how
useful it can be

49
00:03:10,740 --> 00:03:14,000
right it allows you to on

50
00:03:14,000 --> 00:03:17,000
out write to the file system as

51
00:03:17,000 --> 00:03:20,070
the reviews are before the device group
kinda separate

52
00:03:20,070 --> 00:03:23,480
partition you can boot into on then
we'll cover

53
00:03:23,480 --> 00:03:28,299
the file system and some permissions so
such system has your binary said so

54
00:03:28,300 --> 00:03:32,080
read-only partition I'm look at data
local prop

55
00:03:32,080 --> 00:03:35,170
I we suffer an exploit but thats

56
00:03:35,170 --> 00:03:39,530
that settings on the device and and
there you can set it to be.

57
00:03:39,530 --> 00:03:44,810
i/debug devices and if you read access
and we look at a an interesting simply

58
00:03:44,810 --> 00:03:45,330
attack

59
00:03:45,330 --> 00:03:48,620
so

60
00:03:48,620 --> 00:03:51,940
to begin I server bootloader unlocking

61
00:03:51,940 --> 00:03:56,750
sounds like we said allows outbidding
unsigned code which can be a custom ROM

62
00:03:56,750 --> 00:03:57,910
or a colonel

63
00:03:57,910 --> 00:04:02,880
I once it unlocks a different OEM's have
different ways of signifying that the

64
00:04:02,880 --> 00:04:04,450
bootloader is unlocked

65
00:04:04,450 --> 00:04:08,980
I HTC has amassed flag display ass on
her ass off

66
00:04:08,980 --> 00:04:12,070
I Nexus has if

67
00:04:12,070 --> 00:04:15,549
Nexus tablet that some like to cuddle or
unlock some porn boots

68
00:04:15,550 --> 00:04:18,820
otherwise it's got a lock symbol on that
now Qualcomm

69
00:04:18,820 --> 00:04:22,040
chipsets have a secure flag

70
00:04:22,040 --> 00:04:27,060
so keep in mind as we go through the
Ceres two very different scenarios for

71
00:04:27,060 --> 00:04:28,120
bootloader unlocking

72
00:04:28,120 --> 00:04:31,850
there's developer unlock where your data
partition all your

73
00:04:31,850 --> 00:04:35,630
all your text messages an app data and
everything is white

74
00:04:35,630 --> 00:04:39,630
and then there's exploit unlocking
bootloader where that stuff is not quite

75
00:04:39,630 --> 00:04:44,810
this with the bootloader looks like
locked on the left there

76
00:04:44,810 --> 00:04:48,230
is an HTC device on the right is a

77
00:04:48,230 --> 00:04:52,750
Samsung device you can see maybe it's a
little small

78
00:04:52,750 --> 00:04:56,670
SAMSUNG official a little point

79
00:04:56,670 --> 00:05:00,160
this point cool director sam se official

80
00:05:00,160 --> 00:05:03,440
a sister official a and then he

81
00:05:03,440 --> 00:05:06,490
CS locked

82
00:05:06,490 --> 00:05:09,920
so those two locked bootloaders to some
other

83
00:05:09,920 --> 00:05:13,730
bootloader exploit unlocks that have
come out I

84
00:05:13,730 --> 00:05:17,670
I mean if you're familiar with at least
one of these

85
00:05:17,670 --> 00:05:21,100
yeah okay cool under vote was the first

86
00:05:21,100 --> 00:05:24,650
first warner's for HTC only I mean
they've kept it going

87
00:05:24,650 --> 00:05:27,940
Norwalk muscle HTC devices I

88
00:05:27,940 --> 00:05:33,360
set that s flag of and give you
capability to leave it off

89
00:05:33,360 --> 00:05:36,360
motor choppers pretty recent this is
like a really powerful one

90
00:05:36,360 --> 00:05:40,080
effects a ton of devices

91
00:05:40,080 --> 00:05:44,139
as it was found by Dan Rosenberg and
Odin

92
00:05:44,139 --> 00:05:51,139
warps come back

93
00:05:52,600 --> 00:05:55,520
hits why it's anyway

94
00:05:55,520 --> 00:05:59,580
you can still see it Odin and I'm our
Samsung

95
00:05:59,580 --> 00:06:02,930
I'm dollars the open source
implementation Odin

96
00:06:02,930 --> 00:06:07,980
and their allies you to flash custom
loaders depends divisive I swear that's

97
00:06:07,980 --> 00:06:09,360
gone away for data partition

98
00:06:09,360 --> 00:06:16,360
right the sandboxes

99
00:06:18,120 --> 00:06:21,170
is why that's happening %ah so

100
00:06:21,170 --> 00:06:28,170
then developer unlocking I'll

101
00:06:29,650 --> 00:06:34,700
always keep talking HTC dev

102
00:06:34,700 --> 00:06:38,440
nations the developer site well as you
use Facebook which

103
00:06:38,440 --> 00:06:42,820
which Steven mentioned I'm in a device
token to unlock the bootloader and wipe

104
00:06:42,820 --> 00:06:43,849
your data partition

105
00:06:43,850 --> 00:06:50,850
on and motorola is now doing the same
thing so

106
00:06:58,979 --> 00:07:05,979
at sorry

107
00:07:08,699 --> 00:07:14,340
you know this get their CS the bar you
can suffer through that for free drinks

108
00:07:14,340 --> 00:07:14,940
right

109
00:07:14,940 --> 00:07:18,760
um iight so here's some on los Pilares

110
00:07:18,760 --> 00:07:22,740
so it is the the same to or similar
products on the left there you can see

111
00:07:22,740 --> 00:07:26,560
on lot right above the fuzzy stuff

112
00:07:26,560 --> 00:07:31,530
and then over here custom a so is what
it looks like when it's on like

113
00:07:31,530 --> 00:07:35,869
I and then a developer unlocks this is
on now

114
00:07:35,870 --> 00:07:38,990
my Nexus 7 device really simple fast

115
00:07:38,990 --> 00:07:41,860
oh yeah man law that's the whole thing
on the bootloader is unlocked and you

116
00:07:41,860 --> 00:07:42,949
can see there says

117
00:07:42,949 --> 00:07:48,070
a racing user data so this is a
developer unlock

118
00:07:48,070 --> 00:07:52,150
way to user data shows that lock sale
lot

119
00:07:52,150 --> 00:07:56,250
and then that's really easy to relock

120
00:07:56,250 --> 00:08:00,680
Sun developer devices the Nexus devices
really easy to lock and unlock your

121
00:08:00,680 --> 00:08:01,440
bootloader

122
00:08:01,440 --> 00:08:05,199
every time you unlock it because it's
not happening within exploit skin whiter

123
00:08:05,199 --> 00:08:06,130
data partition

124
00:08:06,130 --> 00:08:10,780
which which can be a pain I

125
00:08:10,780 --> 00:08:14,049
so once you unlock your bootloader I
would cover the ways you can do that you

126
00:08:14,050 --> 00:08:17,960
still have root access which is what
you're going for in the first place

127
00:08:17,960 --> 00:08:23,130
similar loader on lock allows you to
write furloughed on sign code

128
00:08:23,130 --> 00:08:27,250
and then the next step is usually to
flash a recovery image

129
00:08:27,250 --> 00:08:32,890
I she can do that through fast food or
to flash

130
00:08:32,890 --> 00:08:36,990
a custom ROM or kernel so

131
00:08:36,990 --> 00:08:40,490
custom recovery image is I won't go into
this too much just doing it covered it

132
00:08:40,490 --> 00:08:41,150
so well

133
00:08:41,150 --> 00:08:44,939
clockworkmod team when recovery project
is a million of them out there

134
00:08:44,940 --> 00:08:49,830
I it's their their device specific so
the purpose of this is to allow you

135
00:08:49,830 --> 00:08:54,900
to write your SU binary the route
component on as the user

136
00:08:54,900 --> 00:08:58,010
allows low-level system access for
device imaging

137
00:08:58,010 --> 00:09:02,620
really really useful like you should
know you can back up your whole device

138
00:09:02,620 --> 00:09:07,670
image it do whatever you want and then
flashes back okay

139
00:09:07,670 --> 00:09:10,680
finally route so all route is

140
00:09:10,680 --> 00:09:15,140
just like 1x route to binary with a sec
you I debate

141
00:09:15,140 --> 00:09:19,329
I owned by root so when you execute it
is your root shell

142
00:09:19,329 --> 00:09:22,359
typically just named SU I instead

143
00:09:22,360 --> 00:09:29,360
Systemax finesse you other taper fruit
that you can have as debugging

144
00:09:29,800 --> 00:09:33,750
so there's no binary here if you have it
data local prop

145
00:09:33,750 --> 00:09:37,140
any the following here just keep these
mind

146
00:09:37,140 --> 00:09:42,540
when you start up a DB you'll have a
ratio

147
00:09:42,540 --> 00:09:46,160
so two different two different kinds
every she can achieve

148
00:09:46,160 --> 00:09:50,199
I'm if we wanted to hide

149
00:09:50,200 --> 00:09:56,270
for example I most applications probably
95 percent the applications are a look

150
00:09:56,270 --> 00:09:56,770
at

151
00:09:56,770 --> 00:10:00,920
are only looking for evidence over
they're looking for superuser a PK

152
00:10:00,920 --> 00:10:05,219
system and it is really dry some exploit
junk and a local town

153
00:10:05,220 --> 00:10:09,980
or that s your binary I so one really
simple thing that I like to do on

154
00:10:09,980 --> 00:10:10,850
devices

155
00:10:10,850 --> 00:10:15,709
stick once I root them to a kind of hide
the root access from now where

156
00:10:15,709 --> 00:10:19,180
from applications they're texting resist
name law

157
00:10:19,180 --> 00:10:23,620
it whatever you want steeped in the
system expand directory

158
00:10:23,620 --> 00:10:27,010
and down US-run

159
00:10:27,010 --> 00:10:30,510
law right so messy just run law your
Excel

160
00:10:30,510 --> 00:10:37,279
same exact thing out how

161
00:10:37,279 --> 00:10:41,540
how are we gonna reviews devices on so
divided up into three kinds right

162
00:10:41,540 --> 00:10:42,650
there's drive-by roots

163
00:10:42,650 --> 00:10:46,360
Cesar the bad ones is the ones that an
attacker might use once they get

164
00:10:46,360 --> 00:10:49,900
physical access to your device or

165
00:10:49,900 --> 00:10:53,420
I'm some of them could be run from our
like a look at the

166
00:10:53,420 --> 00:10:56,560
exes attack which could be run from our

167
00:10:56,560 --> 00:11:00,500
and there's a user initiated routes that
require the user

168
00:11:00,500 --> 00:11:04,230
to have physical access to the vice

169
00:11:04,230 --> 00:11:08,790
probably interact with that during the
attack really explain they may be

170
00:11:08,790 --> 00:11:09,699
difficult

171
00:11:09,700 --> 00:11:14,829
taxi queue have a race condition or
something and then there's the data

172
00:11:14,829 --> 00:11:20,349
wiping routes that we covered and
they're not particularly interesting so

173
00:11:20,350 --> 00:11:23,630
drive-by device rates just a certain
with

174
00:11:23,630 --> 00:11:28,370
I on a lost or stolen device

175
00:11:28,370 --> 00:11:32,010
attacker could execute these to gain
access to your data caesar the really

176
00:11:32,010 --> 00:11:34,600
bad ones these are the ones that we'd
like to prevent

177
00:11:34,600 --> 00:11:37,760
on if if my phone gets lost

178
00:11:37,760 --> 00:11:41,110
and it's locked the passcode I

179
00:11:41,110 --> 00:11:44,829
I don't want someone to have access to
that data if one of these

180
00:11:44,829 --> 00:11:49,870
roots exists on the device devices
vulnerable to want to be tried by roots

181
00:11:49,870 --> 00:11:53,390
attacker could have access to my data I

182
00:11:53,390 --> 00:11:56,550
sister be bootloader unlocks

183
00:11:56,550 --> 00:12:01,579
obviously if you have a TV in a mold on
your device

184
00:12:01,579 --> 00:12:05,550
it opens up a lot more attacks right so
that's a that's something that you can

185
00:12:05,550 --> 00:12:06,410
do

186
00:12:06,410 --> 00:12:10,230
to prevent some of these from becoming
drive-by roots

187
00:12:10,230 --> 00:12:14,560
is have ADB disable

188
00:12:14,560 --> 00:12:18,949
then we have the user initiates can't be
initiated by malware

189
00:12:18,949 --> 00:12:23,680
users probably aware that his his or her
device is rooted

190
00:12:23,680 --> 00:12:26,800
summer complex and and then summer
simple so

191
00:12:26,800 --> 00:12:32,030
wall will require the devices on stage
using one of these user roots

192
00:12:32,030 --> 00:12:35,720
I data data wiping roots

193
00:12:35,720 --> 00:12:38,870
we covered is

194
00:12:38,870 --> 00:12:42,140
so what we've seen in in Android 4.0

195
00:12:42,140 --> 00:12:45,150
as opposed to Android 2.2 X

196
00:12:45,150 --> 00:12:50,150
to some extent three-point taxes much
there much difference

197
00:12:50,150 --> 00:12:55,060
pretty landscapes I Android 4.0

198
00:12:55,060 --> 00:12:59,060
added a lot of protections I on device
encryption SLR

199
00:12:59,060 --> 00:13:03,260
doubt I'm not an expert these I just
know it makes it hard to explain the

200
00:13:03,260 --> 00:13:04,250
device

201
00:13:04,250 --> 00:13:07,660
I much much harder to write local
exploits

202
00:13:07,660 --> 00:13:12,500
so we used to see a time right have you
familiar with the server rush dinner

203
00:13:12,500 --> 00:13:15,329
break rage against the cage there's a
million of them right

204
00:13:15,329 --> 00:13:18,989
I couldn't even fit them all in one
slide these were all the local privilege

205
00:13:18,990 --> 00:13:22,209
escalation attacks on Android 2.2 X

206
00:13:22,209 --> 00:13:25,270
I'm most of these could be tried by
roots

207
00:13:25,270 --> 00:13:29,910
I is really kinda like a wild west
landscape

208
00:13:29,910 --> 00:13:33,880
pose 4.0 i've seen one Android Open
Source

209
00:13:33,880 --> 00:13:37,360
exploit it was really involved race
condition with

210
00:13:37,360 --> 00:13:40,689
the backup utility I and I think

211
00:13:40,689 --> 00:13:44,969
I saw this used to launch a

212
00:13:44,970 --> 00:13:48,500
developer on lock to change here carry
ID code

213
00:13:48,500 --> 00:13:51,709
lie to launch daylighting attack

214
00:13:51,709 --> 00:13:56,199
so Free 4.0 impose 4.0 the landscape has
changed

215
00:13:56,199 --> 00:14:00,969
quite a bit but devices come out and two
days later the root it sometimes two

216
00:14:00,970 --> 00:14:03,270
hours later so

217
00:14:03,270 --> 00:14:07,100
how how is that happening

218
00:14:07,100 --> 00:14:11,010
so most serious is focusing on

219
00:14:11,010 --> 00:14:14,930
oh %um components occurred oh %um
sandwich either the applications or the

220
00:14:14,930 --> 00:14:17,489
low-level code that we talked about
before

221
00:14:17,490 --> 00:14:23,000
and so will cover Exynos motor chopper
common and some OEM specific back doors

222
00:14:23,000 --> 00:14:27,550
I'm where the the main ones was the is
ette hardcoded password which made the

223
00:14:27,550 --> 00:14:28,660
news

224
00:14:28,660 --> 00:14:31,689
give or up in arms about this

225
00:14:31,689 --> 00:14:35,380
I'm LG as a as a similar

226
00:14:35,380 --> 00:14:38,900
back door is not I remote back door

227
00:14:38,900 --> 00:14:42,130
but it's less public so I got an LG
device here

228
00:14:42,130 --> 00:14:46,110
and all try to rate it will tempt the
democrats too much

229
00:14:46,110 --> 00:14:50,160
but and then we've got a CTD device with
a FTM

230
00:14:50,160 --> 00:14:53,530
mode again these are all public I'm not
like dropping

231
00:14:53,530 --> 00:14:57,579
trappings there it is fall water

232
00:14:57,579 --> 00:15:00,939
so Exynos briefly I it's a

233
00:15:00,939 --> 00:15:05,380
Exynos chipset is a arm-based
system-on-a-chip manufactured by Samsung

234
00:15:05,380 --> 00:15:09,910
which means Samsung is responsible for
the driver component to interact with

235
00:15:09,910 --> 00:15:11,300
the hardware abstraction layer

236
00:15:11,300 --> 00:15:15,729
right on their adding that coat on top
of the Android Open Source project

237
00:15:15,730 --> 00:15:18,970
so the issue the very bottom you can see
here's

238
00:15:18,970 --> 00:15:24,140
out I the second command I issue is
sound

239
00:15:24,140 --> 00:15:27,319
just listen out the Exynos memory dad

240
00:15:27,319 --> 00:15:30,770
I its rewrite for everybody

241
00:15:30,770 --> 00:15:35,040
and the mistake that Samsung made is
that that gave you rewrite access to all

242
00:15:35,040 --> 00:15:37,480
physical memory

243
00:15:37,480 --> 00:15:41,670
so there it it's pretty simple

244
00:15:41,670 --> 00:15:45,149
find a memory location you wanna write
to

245
00:15:45,149 --> 00:15:48,480
rights to it and get through I

246
00:15:48,480 --> 00:15:54,000
Exynos abuse a PK by the 16-member our

247
00:15:54,000 --> 00:15:57,529
and a patch is the issue changes the
permissions

248
00:15:57,529 --> 00:16:01,510
once you have route to this to the Top
Gear publisher first these

249
00:16:01,510 --> 00:16:04,610
I so that other applications can't
explain it

250
00:16:04,610 --> 00:16:10,750
but the real patch had to come from from
the kernel patch from Sams

251
00:16:10,750 --> 00:16:14,120
the other interesting one that affected
a ton of devices

252
00:16:14,120 --> 00:16:18,920
I should mention action us for Samsung
only and it affected

253
00:16:18,920 --> 00:16:23,240
most have their the line all the all the

254
00:16:23,240 --> 00:16:27,810
devices with these accidents processors
I'm moto chopper also affected

255
00:16:27,810 --> 00:16:31,630
on a device it was called murder trial
for assume for a

256
00:16:31,630 --> 00:16:37,240
Motorola I'm it turns out it affects
Samsung Motorola hallway

257
00:16:37,240 --> 00:16:42,750
this device here using motor chopper

258
00:16:42,750 --> 00:16:46,950
so he Dan Rosenberg from azinger does
tons of awesome Android security

259
00:16:46,950 --> 00:16:48,600
research

260
00:16:48,600 --> 00:16:52,250
you found in arm trusts own exploit on
hot the bootloader

261
00:16:52,250 --> 00:16:57,190
I'm and then and then if your room
binary

262
00:16:57,190 --> 00:17:02,700
through a simple I it doesn't take a few
minutes it takes like a second

263
00:17:02,700 --> 00:17:05,439
when you reboot the device you have
roots in this is potentially something

264
00:17:05,439 --> 00:17:09,230
that I malicious application could run
on the device and then just wait for the

265
00:17:09,230 --> 00:17:10,770
user to rebuild it

266
00:17:10,770 --> 00:17:14,379
or send a reboot command once it as

267
00:17:14,380 --> 00:17:17,429
I'm so anything with this Qualcomm
chipset on that relies on

268
00:17:17,429 --> 00:17:21,449
trusts on a smaller bolt-on chopper so
again

269
00:17:21,449 --> 00:17:25,000
this is not an Android Open Source
project components

270
00:17:25,000 --> 00:17:28,159
this is a Qualcomm concurrent excuse me

271
00:17:28,159 --> 00:17:31,419
Qualcomm component

272
00:17:31,419 --> 00:17:35,450
I soul all time the democrats will try
to rate this old

273
00:17:35,450 --> 00:17:39,840
device but pretty briefly

274
00:17:39,840 --> 00:17:43,100
someone posted this on line sounds like
that can't be true

275
00:17:43,100 --> 00:17:46,240
up so I pulled off a DVD intrude and Ida

276
00:17:46,240 --> 00:17:50,060
I think echoes China

277
00:17:50,060 --> 00:17:54,540
and she says that look at st. car je
secured

278
00:17:54,540 --> 00:17:59,050
like okay so look at it and strings

279
00:17:59,050 --> 00:18:03,510
truly briefly hi it's not our back door
it doesn't mean that LG has accessed

280
00:18:03,510 --> 00:18:04,520
your device

281
00:18:04,520 --> 00:18:10,320
up and it just gives you a a real a TV
show

282
00:18:10,320 --> 00:18:14,399
so I opened a DVD and Ida %ah

283
00:18:14,399 --> 00:18:18,219
went to the string cross referencing you
see here tries to read

284
00:18:18,220 --> 00:18:22,460
this file sticker GE Security and you
know without being a somewhere expert

285
00:18:22,460 --> 00:18:24,200
three dollars assembly is here

286
00:18:24,200 --> 00:18:28,679
check LG official enable root so me that
file has something to do with through

287
00:18:28,679 --> 00:18:35,560
so you

288
00:18:35,560 --> 00:18:41,560
this is gonna be treated

289
00:18:41,560 --> 00:18:46,720
make sure not rated

290
00:18:46,720 --> 00:18:53,720
so

291
00:18:54,580 --> 00:18:58,120
so I just touch that file right there's
nothing in it it's not just a

292
00:18:58,120 --> 00:19:02,560
or note on the desk so

293
00:19:02,560 --> 00:19:05,870
now on the device itself all I'm doing
is

294
00:19:05,870 --> 00:19:10,010
what am i doing developer options

295
00:19:10,010 --> 00:19:14,160
the camera scan on forget turn off USB
debugging

296
00:19:14,160 --> 00:19:17,680
wait a second turn it back on

297
00:19:17,680 --> 00:19:24,680
yes return

298
00:19:33,110 --> 00:19:33,649
so

299
00:19:33,650 --> 00:19:38,120
as super simple and thats LG devices
only

300
00:19:38,120 --> 00:19:44,489
on see

301
00:19:44,490 --> 00:19:50,880
backed here

302
00:19:50,880 --> 00:19:57,880
ID's

303
00:19:58,400 --> 00:20:02,750
okay so this is my little backup slide
you pretty much just follow the

304
00:20:02,750 --> 00:20:09,120
directions you get a real so

305
00:20:09,120 --> 00:20:12,250
this could have hidden route is not so
bad but

306
00:20:12,250 --> 00:20:17,230
like two days ago once a finished
preparing for the stock someone

307
00:20:17,230 --> 00:20:20,910
K case released el cheapo

308
00:20:20,910 --> 00:20:24,910
I which is a race condition in an LG
specific backup app

309
00:20:24,910 --> 00:20:29,760
I it's locally exploitable armani says
that in some cases it can be a drive-by

310
00:20:29,760 --> 00:20:32,060
read it could be something that could be
used by Mauer

311
00:20:32,060 --> 00:20:36,720
so this one is much worse right I'm in
effect forty-plus

312
00:20:36,720 --> 00:20:40,020
Lt devices so between this moto chopper

313
00:20:40,020 --> 00:20:45,190
and Exynos you've probably got ninety
percent of the smart phones out there

314
00:20:45,190 --> 00:20:45,890
covered

315
00:20:45,890 --> 00:20:51,070
right ninety percent of the popular
devices I

316
00:20:51,070 --> 00:20:54,560
this morning really took the democrats
on so

317
00:20:54,560 --> 00:20:58,340
I've got busy T device I'm just going

318
00:20:58,340 --> 00:21:02,310
to you cover a a a soft linking

319
00:21:02,310 --> 00:21:06,690
abilities this was a really common one
maybe six months ago we're seeing time's

320
00:21:06,690 --> 00:21:06,980
a

321
00:21:06,980 --> 00:21:11,550
devices being reverse engineered and
then the initialization scripts kinda

322
00:21:11,550 --> 00:21:13,040
exploited through some links

323
00:21:13,040 --> 00:21:16,720
so when the device person actualization
script will go through

324
00:21:16,720 --> 00:21:20,530
and Sep permissions on particular folder
so one folder is

325
00:21:20,530 --> 00:21:23,960
data local town I'm slashed a to slash
local slashed him

326
00:21:23,960 --> 00:21:27,680
and your foal for write access into that
folder

327
00:21:27,680 --> 00:21:31,030
so it wants to give you write access one

328
00:21:31,030 --> 00:21:35,190
when it boots so will try to exploit

329
00:21:35,190 --> 00:21:38,620
I oh so the first part

330
00:21:38,620 --> 00:21:41,679
this route the devices of

331
00:21:41,680 --> 00:21:47,570
I'm just gonna booted into FTM which is
there engineering so

332
00:21:47,570 --> 00:21:51,780
picture is still the device for you lose
it i turn it off

333
00:21:51,780 --> 00:21:55,320
when i turn it on volume down and power

334
00:21:55,320 --> 00:22:00,950
I'll just take in a minute so

335
00:22:00,950 --> 00:22:05,540
the way that it should work you should
not have right or execute accessing data

336
00:22:05,540 --> 00:22:06,110
local

337
00:22:06,110 --> 00:22:09,550
the way it works

338
00:22:09,550 --> 00:22:13,240
in FTM road however okay now you can see
it just as FTM

339
00:22:13,240 --> 00:22:20,240
just like on the slide

340
00:22:23,640 --> 00:22:30,640
so

341
00:22:34,770 --> 00:22:38,389
a so you can see

342
00:22:38,390 --> 00:22:42,370
I you should not have access to data
local you do an FTM

343
00:22:42,370 --> 00:22:45,729
I their allies

344
00:22:45,730 --> 00:22:48,980
like that so from here it's it's pretty
simple

345
00:22:48,980 --> 00:22:52,860
apps its actually here

346
00:22:52,860 --> 00:22:58,189
so we're just gonna linked data

347
00:22:58,190 --> 00:23:01,790
with data local way

348
00:23:01,790 --> 00:23:08,480
up

349
00:23:08,480 --> 00:23:15,480
just gonna make a backup my data local
town okay

350
00:23:18,970 --> 00:23:22,860
now now we're gonna link data with data
local temp so that when that

351
00:23:22,860 --> 00:23:24,689
initialization script goes

352
00:23:24,690 --> 00:23:28,279
we're gonna get write access to slash
aid

353
00:23:28,279 --> 00:23:33,159
and what is what is located in slash
data that we looked at before

354
00:23:33,159 --> 00:23:36,159
so that local that prop

355
00:23:36,159 --> 00:23:39,620
file which controls whether the devices
return

356
00:23:39,620 --> 00:23:44,070
right alright so

357
00:23:44,070 --> 00:23:49,749
3 the device now old is taking a minute

358
00:23:49,749 --> 00:23:53,769
and we're gonna reboot into a standard
Android

359
00:23:53,769 --> 00:23:56,879
not doing the FTM stuff anymore on

360
00:23:56,879 --> 00:24:01,699
so there's two issues here the first is
that the unit script doesn't check if

361
00:24:01,700 --> 00:24:04,799
if it's a symlink before it SATs I

362
00:24:04,799 --> 00:24:08,360
rewrite execute permissions on data
local time

363
00:24:08,360 --> 00:24:12,949
and then the second issue is FTM this

364
00:24:12,950 --> 00:24:16,009
can pretty much undermine any security

365
00:24:16,009 --> 00:24:20,240
that you set on the device and this is a
custom 00 a.m.

366
00:24:20,240 --> 00:24:23,399
component on top of the Android Open
Source project

367
00:24:23,399 --> 00:24:27,549
right so

368
00:24:27,549 --> 00:24:30,869
its weird ice pack

369
00:24:30,869 --> 00:24:34,658
okay

370
00:24:34,659 --> 00:24:38,879
so now we'll just a

371
00:24:38,879 --> 00:24:44,369
was

372
00:24:44,369 --> 00:24:50,309
echo $this- R O Connell cue you to

373
00:24:50,309 --> 00:24:57,309
data local up

374
00:25:02,280 --> 00:25:06,629
and now show

375
00:25:06,630 --> 00:25:09,690
apps yeah so we're

376
00:25:09,690 --> 00:25:14,090
we didn't have before but now we have
read/write access to slash data

377
00:25:14,090 --> 00:25:18,959
and you can see up the contents of local

378
00:25:18,960 --> 00:25:24,160
prop apps

379
00:25:24,160 --> 00:25:30,950
we did

380
00:25:30,950 --> 00:25:37,950
did I miss something

381
00:25:41,530 --> 00:25:43,990
0 thanks okay so it's fine

382
00:25:43,990 --> 00:25:47,910
hey rival will reboot it

383
00:25:47,910 --> 00:25:52,550
I'll take in a minute

384
00:25:52,550 --> 00:25:56,510
and then that local profile will get

385
00:25:56,510 --> 00:26:00,000
will get red the device its

386
00:26:00,000 --> 00:26:07,000
and we should every

387
00:26:22,340 --> 00:26:25,730
its the survey spirits particularly
slowly

388
00:26:25,730 --> 00:26:32,730
we go

389
00:26:32,900 --> 00:26:38,670
another thanks yes

390
00:26:38,670 --> 00:26:42,430
a okay so I mean I get this morning
kicked off

391
00:26:42,430 --> 00:26:49,430
before I talk about it go because it
takes a little while

392
00:26:50,070 --> 00:26:54,530
what I'm going to do

393
00:26:54,530 --> 00:26:57,670
is use a tool that all describe it a
little bit

394
00:26:57,670 --> 00:27:02,590
onto on it this this while a device to
show

395
00:27:02,590 --> 00:27:06,110
I some entry points into some the
default applications so

396
00:27:06,110 --> 00:27:10,040
you'll just have to trust me that I will
explain it but I'm gonna kick it off now

397
00:27:10,040 --> 00:27:11,200
so we can go

398
00:27:11,200 --> 00:27:15,710
full of absentee compile them what we're
talking about the rest the stuff

399
00:27:15,710 --> 00:27:21,830
keep you from the bar any longer so

400
00:27:21,830 --> 00:27:25,370
to a we're going to

401
00:27:25,370 --> 00:27:28,850
get the PK's going to filter we want all
the ones

402
00:27:28,850 --> 00:27:35,850
better OEM specific call okay so it's
going through its gonna get them in its

403
00:27:40,280 --> 00:27:41,550
gonna do you compile them

404
00:27:41,550 --> 00:27:48,550
and we'll talk about other stuff okay so
beyond rude recovered some ways to root

405
00:27:48,780 --> 00:27:52,260
devices using OEM components now we're
gonna cover some with the

406
00:27:52,260 --> 00:27:55,710
default applications that are installed
by OEM so

407
00:27:55,710 --> 00:27:59,680
we covered the bottom where the OEM
sandwich will look at the top layer

408
00:27:59,680 --> 00:28:03,990
I'll give you a little bit a background
on

409
00:28:03,990 --> 00:28:08,110
Android applications how me before
Android developers are no

410
00:28:08,110 --> 00:28:14,939
everything is as on the slide okay we're
gonna go over the whole thing the soho

411
00:28:14,940 --> 00:28:19,050
for he was 54 applications turn your
sleep cool Android manager job

412
00:28:19,050 --> 00:28:23,470
hi right supported and he's got all the
applications

413
00:28:23,470 --> 00:28:28,450
how sir hope

414
00:28:28,450 --> 00:28:32,020
applications have and points to
communicate with each other

415
00:28:32,020 --> 00:28:35,760
and sometimes for for inter-process
communication right I'm

416
00:28:35,760 --> 00:28:39,540
an app wants to launch another part of
an app us or use these

417
00:28:39,540 --> 00:28:43,980
and points user declared in a file
called Android manifest %uh tax and now

418
00:28:43,980 --> 00:28:49,990
which is packaged with every Android
application Android applications are

419
00:28:49,990 --> 00:28:53,440
dot a PK file such with the tools doing
the background

420
00:28:53,440 --> 00:28:56,490
polling of the ones I was following in
their class name

421
00:28:56,490 --> 00:28:59,930
I mean it's going to be compiled %uh

422
00:28:59,930 --> 00:29:02,930
so we're gonna look at four content
providers

423
00:29:02,930 --> 00:29:07,640
activities services and receivers and
they all have

424
00:29:07,640 --> 00:29:11,870
distinct functionality will cover how to
attack

425
00:29:11,870 --> 00:29:16,419
i'm ok at permission leakage a review
for dove permission leakage have seen it

426
00:29:16,420 --> 00:29:17,380
in the news

427
00:29:17,380 --> 00:29:22,030
on okay is currently dois

428
00:29:22,030 --> 00:29:25,670
six months or a year ago when couples
are discovering that

429
00:29:25,670 --> 00:29:29,900
is applications that are installed on
your device have permissions that you

430
00:29:29,900 --> 00:29:33,210
never granted to them because they came
pre-installed and you can't uninstall

431
00:29:33,210 --> 00:29:33,800
them

432
00:29:33,800 --> 00:29:37,240
I and they could potentially have

433
00:29:37,240 --> 00:29:40,900
unprotected on points that attackers
could exploit kinda the

434
00:29:40,900 --> 00:29:44,790
high-level overview this and then we'll
look at share you ladies

435
00:29:44,790 --> 00:29:49,690
has some the default applications share
you ID's kinda undermine Android

436
00:29:49,690 --> 00:29:50,680
security model

437
00:29:50,680 --> 00:29:54,330
I so activity services

438
00:29:54,330 --> 00:29:57,830
and receivers are activated via these
things called and text messages which is

439
00:29:57,830 --> 00:29:58,250
just

440
00:29:58,250 --> 00:30:02,050
the Android OS messaging system they
pass from app to app

441
00:30:02,050 --> 00:30:05,870
and they launch various components on
these three and points or launch

442
00:30:05,870 --> 00:30:09,620
via in 10 messages they can be sent from

443
00:30:09,620 --> 00:30:13,219
app to app or they can be sent the ATP

444
00:30:13,220 --> 00:30:16,330
so that's what the stools going to do
spit out a way for you to

445
00:30:16,330 --> 00:30:20,419
interact with each one of these and
points using the Android

446
00:30:20,420 --> 00:30:24,430
II activity manager a.m. I

447
00:30:24,430 --> 00:30:28,160
says what it looks like in intent filter
declared an Android manifest that we

448
00:30:28,160 --> 00:30:30,870
talked about before this one's for
flashlight test

449
00:30:30,870 --> 00:30:34,219
you can see the activity activity is
just like a screen

450
00:30:34,220 --> 00:30:38,340
I'm and then the intent filter so effin
intent

451
00:30:38,340 --> 00:30:43,209
down there a TV show a.m. activity
manager start

452
00:30:43,210 --> 00:30:46,610
give it the the right component names

453
00:30:46,610 --> 00:30:51,419
it it will hit this code so you can and
to compile the application and look and

454
00:30:51,420 --> 00:30:52,120
see it

455
00:30:52,120 --> 00:30:55,989
the actual code it's heading I

456
00:30:55,990 --> 00:30:59,010
so content providers are different kind
of the other three

457
00:30:59,010 --> 00:31:02,520
their handle into a database

458
00:31:02,520 --> 00:31:07,260
you can access them via contents colon
slash slash

459
00:31:07,260 --> 00:31:11,580
they specify an authority for access I
mean you can access

460
00:31:11,580 --> 00:31:14,580
table after the authority

461
00:31:14,580 --> 00:31:19,830
activities on makeup and applications
you I

462
00:31:19,830 --> 00:31:23,350
when you so you open up your email
that's one activity then you click an

463
00:31:23,350 --> 00:31:26,219
email message it opens up a new activity
in your reply

464
00:31:26,220 --> 00:31:33,140
opens up a new activity every time you
hit back it closes one activity

465
00:31:33,140 --> 00:31:36,800
activities I can be declared in the
Android manifest

466
00:31:36,800 --> 00:31:40,500
and they can have intent filters as

467
00:31:40,500 --> 00:31:44,460
my doing here and they can have intent
filters as

468
00:31:44,460 --> 00:31:49,860
as child objects and and they can be
launched be in 10 messages

469
00:31:49,860 --> 00:31:53,000
%uh services or processes that run
detached

470
00:31:53,000 --> 00:31:56,800
from the main at their point is not to

471
00:31:56,800 --> 00:32:01,580
not to block the main Android thread
they can also contain intent filters and

472
00:32:01,580 --> 00:32:03,520
can be launched at way from

473
00:32:03,520 --> 00:32:07,389
the command line or from another
application and then receivers

474
00:32:07,390 --> 00:32:12,790
are pretty interesting day

475
00:32:12,790 --> 00:32:16,610
they can also contain for intent filters
so there's last three that were covered

476
00:32:16,610 --> 00:32:18,399
before can all be launched

477
00:32:18,400 --> 00:32:23,030
the 10 messages

478
00:32:23,030 --> 00:32:27,280
I see have some general protections for
the iOS Android and

479
00:32:27,280 --> 00:32:31,600
points you can have a permission on your
Android manifest which specifies who's

480
00:32:31,600 --> 00:32:32,550
allowed

481
00:32:32,550 --> 00:32:38,379
to interact with that application II you
can create permissions and then you can

482
00:32:38,380 --> 00:32:41,550
specifier protection level so if you say

483
00:32:41,550 --> 00:32:46,720
dangerous if a nap requests your
permission

484
00:32:46,720 --> 00:32:52,429
user gets I guess all notification that
app is requesting dangerous permission

485
00:32:52,429 --> 00:32:56,240
or you can say signature or system which
is always

486
00:32:56,240 --> 00:33:00,010
what what would recommend so that allows

487
00:33:00,010 --> 00:33:03,150
only applications and system app up

488
00:33:03,150 --> 00:33:06,970
or with the shared signatures so I
create two APs

489
00:33:06,970 --> 00:33:11,890
and I create a permission this says
protection level signature or system

490
00:33:11,890 --> 00:33:17,660
my abs can talk to each other but nobody
else can talk to them

491
00:33:17,660 --> 00:33:24,000
I you can also set to all your
activities and services receivers

492
00:33:24,000 --> 00:33:28,850
to be exploring the false false which
means your application can access them

493
00:33:28,850 --> 00:33:33,149
I'm so one could one portion of the
application can access another portion

494
00:33:33,150 --> 00:33:37,580
I'm but nobody else can access them
because they're not exported

495
00:33:37,580 --> 00:33:41,090
so post 4.2 it's a little bit different
story

496
00:33:41,090 --> 00:33:45,449
34.2 this was a big issue because if you
have an activity

497
00:33:45,450 --> 00:33:49,970
with intent filter I under its
automatically exported

498
00:33:49,970 --> 00:33:53,290
I everything's exported false by default

499
00:33:53,290 --> 00:33:58,100
have intent filter it gets exported so
think people didn't totally realize that

500
00:33:58,100 --> 00:34:02,480
suppose 4.2 its always false unless you
explicitly say

501
00:34:02,480 --> 00:34:06,150
export people's true

502
00:34:06,150 --> 00:34:09,280
I content providers

503
00:34:09,280 --> 00:34:12,520
here you can specify a little bit more
granular you can specify

504
00:34:12,520 --> 00:34:16,639
read and right eyes to separate
permission so people can read the

505
00:34:16,639 --> 00:34:17,679
database

506
00:34:17,679 --> 00:34:20,909
know if you have another permission you
can right base

507
00:34:20,909 --> 00:34:25,220
and you can also sex for you was false
for these activities same story

508
00:34:25,219 --> 00:34:30,540
Center permission honor and said export
it equals false

509
00:34:30,540 --> 00:34:33,649
I services same thing

510
00:34:33,649 --> 00:34:39,129
receivers a little bit different I any
app can register a broadcast receiver

511
00:34:39,129 --> 00:34:42,649
and then it's up to whoever sends that
broadcast message

512
00:34:42,649 --> 00:34:45,969
to specify the permission required

513
00:34:45,969 --> 00:34:50,120
from the receiver so the permission that
the receiver needs to have in order to

514
00:34:50,120 --> 00:34:52,219
access that broadcast message

515
00:34:52,219 --> 00:34:57,339
I'm million said export it was false on
the receivers

516
00:34:57,340 --> 00:35:01,190
okay so there's a there's a major
problem %ah

517
00:35:01,190 --> 00:35:05,109
with the preloaded applications and
there's two layers of these preloaded

518
00:35:05,109 --> 00:35:06,830
applications you have

519
00:35:06,830 --> 00:35:10,940
applications that the OEM is loading you
have the applications that and I know is

520
00:35:10,940 --> 00:35:11,609
loading

521
00:35:11,609 --> 00:35:15,080
so by the time your Android device
actually gets to you

522
00:35:15,080 --> 00:35:19,350
if it's not one of the Nexus devices or
running pure Android

523
00:35:19,350 --> 00:35:23,150
it looks like Java hi as two layers

524
00:35:23,150 --> 00:35:27,830
pre-installed apps I'm and then they're
installed with the

525
00:35:27,830 --> 00:35:31,480
default permissions that that the user
never went through

526
00:35:31,480 --> 00:35:34,790
accepted so

527
00:35:34,790 --> 00:35:38,090
%uh permission leakage will cover like a
made-up

528
00:35:38,090 --> 00:35:42,020
example in a real-world example us to
say you have a weather application a

529
00:35:42,020 --> 00:35:44,340
request location permission

530
00:35:44,340 --> 00:35:48,340
its its pre installed on the device it's
granted location for missions

531
00:35:48,340 --> 00:35:51,640
and then it exports a content provider
and activity

532
00:35:51,640 --> 00:35:56,900
all because it has no permissions on the
content provider and the activity

533
00:35:56,900 --> 00:36:00,970
I has the potential to to be exploited
or to leak

534
00:36:00,970 --> 00:36:05,609
I location data you can see that path it
can get location data and then it

535
00:36:05,609 --> 00:36:10,370
exports sections ovitz code to be
interacted with by other applications

536
00:36:10,370 --> 00:36:14,130
I'm so potential to for daily catch
their

537
00:36:14,130 --> 00:36:17,420
I October last year

538
00:36:17,420 --> 00:36:20,650
i Thomas can release to Android SMS for

539
00:36:20,650 --> 00:36:24,390
is a real-world permission leakage I

540
00:36:24,390 --> 00:36:28,440
and it was actually on a on Android Open
Source project application

541
00:36:28,440 --> 00:36:33,430
so it exported this SMS receiver service
with no permissions are sections

542
00:36:33,430 --> 00:36:37,410
so any app could send an intense message
to that receiver

543
00:36:37,410 --> 00:36:42,279
I and it looked just like you receiving
an SMS message so

544
00:36:42,280 --> 00:36:47,430
those kinda social engineering thing you
can get the user to act on

545
00:36:47,430 --> 00:36:51,529
fake SMS message that they had received

546
00:36:51,530 --> 00:36:56,190
I so put together a tool to kinda expose
these endpoints

547
00:36:56,190 --> 00:37:00,530
I meant to look at at and rain and and
points

548
00:37:00,530 --> 00:37:04,530
with no permissions and no protections
and I made a mistake one of my coworkers

549
00:37:04,530 --> 00:37:08,220
tool say a name that the manifest
analyzer

550
00:37:08,220 --> 00:37:13,020
I and/or fast

551
00:37:13,020 --> 00:37:17,259
so it it parses Android manifest files
into objects like

552
00:37:17,260 --> 00:37:20,670
you saw their accent now XML files

553
00:37:20,670 --> 00:37:25,120
on FB I top-level tag has a permission

554
00:37:25,120 --> 00:37:28,740
all the maximal children should inherit
that permission

555
00:37:28,740 --> 00:37:33,689
I'm so it's an object-based up parser

556
00:37:33,690 --> 00:37:36,700
and it its

557
00:37:36,700 --> 00:37:39,700
the the point if it is kinda give you a
quick way

558
00:37:39,700 --> 00:37:43,710
to assess I O M applications on a device

559
00:37:43,710 --> 00:37:47,190
and access various unprotected
components I

560
00:37:47,190 --> 00:37:51,160
and kinda give you a place to to delve
deeper

561
00:37:51,160 --> 00:37:54,870
so for this thing ran about cool

562
00:37:54,870 --> 00:37:58,330
that so you so they come in the nation
whose is this

563
00:37:58,330 --> 00:38:03,240
I so it it so it launches a an office
does it take get

564
00:38:03,240 --> 00:38:07,180
anything with WoW and the title it goes
through

565
00:38:07,180 --> 00:38:10,890
and fines despair

566
00:38:10,890 --> 00:38:14,950
if fines a all the unprotected
activities

567
00:38:14,950 --> 00:38:18,700
on this device it taunt it's not usually
this many

568
00:38:18,700 --> 00:38:22,240
I and all the hidden codes

569
00:38:22,240 --> 00:38:26,189
so the pound town codes on you guys
remember the Samsung

570
00:38:26,190 --> 00:38:31,890
vulnerability that would that will allow
you to wipe someone's device

571
00:38:31,890 --> 00:38:35,089
so if find stuff like that

572
00:38:35,089 --> 00:38:39,580
%uh so it'll it'll go through each
manifest manifest manifest

573
00:38:39,580 --> 00:38:44,210
and then I'll give you a summary at the
end so there are no unprotected content

574
00:38:44,210 --> 00:38:45,000
providers

575
00:38:45,000 --> 00:38:48,300
there's lots of hidden codes and now
what's

576
00:38:48,300 --> 00:38:52,620
news so does that work

577
00:38:52,620 --> 00:38:56,490
the flashlight so

578
00:38:56,490 --> 00:38:59,669
then we can just office in the other
window cuz the

579
00:38:59,670 --> 00:39:04,359
I Sisto connected conscious activity

580
00:39:04,359 --> 00:39:09,440
it pops up a screen says flashlight test

581
00:39:09,440 --> 00:39:12,850
they really can turn on the flashlight

582
00:39:12,850 --> 00:39:17,359
so there's there's more malicious are
ways to use this

583
00:39:17,359 --> 00:39:22,819
you sometimes find engineering menus

584
00:39:22,820 --> 00:39:27,630
lotto water a interesting hidden menus

585
00:39:27,630 --> 00:39:32,500
are exported as activities

586
00:39:32,500 --> 00:39:37,030
K it looks forty by the wall
applications

587
00:39:37,030 --> 00:39:40,780
%uh and then it shows all the
applications which

588
00:39:40,780 --> 00:39:46,410
share you I D which right now it's just
looking for applications which request

589
00:39:46,410 --> 00:39:50,259
sharing the I Android system you I D

590
00:39:50,260 --> 00:39:54,850
so I I'm really not sure why

591
00:39:54,850 --> 00:39:58,730
some of these need the system you i'd
which which undermines the

592
00:39:58,730 --> 00:40:02,690
Android security morrow little bit
because any application with the same

593
00:40:02,690 --> 00:40:04,030
you I D

594
00:40:04,030 --> 00:40:09,050
can access I data from other
applications with the same you I D

595
00:40:09,050 --> 00:40:12,130
on and it it gets the same permissions

596
00:40:12,130 --> 00:40:15,609
so if you were to exploit one of these
applications

597
00:40:15,609 --> 00:40:19,150
and you have the permissions %uh the
system you I T

598
00:40:19,150 --> 00:40:23,220
%uh sir kinda ads unnecessary

599
00:40:23,220 --> 00:40:26,799
attack actor so look at some other
things

600
00:40:26,800 --> 00:40:31,660
the school found or

601
00:40:31,660 --> 00:40:36,390
I also the content providers

602
00:40:36,390 --> 00:40:40,029
so Iran on this LG device and I found

603
00:40:40,030 --> 00:40:43,230
this unprotected LG email content
providers so

604
00:40:43,230 --> 00:40:47,950
in the manifest it looks like this you
can see and explore it was true

605
00:40:47,950 --> 00:40:52,100
and then you can access the the content
provider from there

606
00:40:52,100 --> 00:40:55,240
II services which are not

607
00:40:55,240 --> 00:40:58,669
particularly interesting except here I

608
00:40:58,670 --> 00:41:01,920
is again on this while a device I think
one of the ones that came up before

609
00:41:01,920 --> 00:41:02,690
their

610
00:41:02,690 --> 00:41:05,839
it's a copy file service she could then

611
00:41:05,839 --> 00:41:09,299
launch that service from the command
line you could maybe files that are

612
00:41:09,300 --> 00:41:11,050
added some extra strings

613
00:41:11,050 --> 00:41:15,060
I'm you can reverse the application and
figure out what it's doing with

614
00:41:15,060 --> 00:41:19,049
a with the extra strings that it takes

615
00:41:19,050 --> 00:41:23,150
I unprotected activities

616
00:41:23,150 --> 00:41:26,589
so we saw one we saw the flashlight 1
here's one for

617
00:41:26,589 --> 00:41:29,920
I listing files local file activity

618
00:41:29,920 --> 00:41:34,420
so this one is so to

619
00:41:34,420 --> 00:41:38,330
to to compile the application look at it
and indexes are

620
00:41:38,330 --> 00:41:42,400
you can see actually where receives the
in 10 message and it looks for

621
00:41:42,400 --> 00:41:45,620
extra strain called past I

622
00:41:45,620 --> 00:41:49,540
and passes out of so

623
00:41:49,540 --> 00:41:52,990
you can see if if we launch it with the
same thing that I an office

624
00:41:52,990 --> 00:41:56,209
spit out and then dash dash yes we're
just exercising

625
00:41:56,210 --> 00:41:59,410
say half given a pass I'm

626
00:41:59,410 --> 00:42:03,180
starts up that text messages received by
the application and processed and it

627
00:42:03,180 --> 00:42:03,680
gives us

628
00:42:03,680 --> 00:42:08,950
activity which lists that portion the
filesystem

629
00:42:08,950 --> 00:42:13,629
so has a preparing for this

630
00:42:13,630 --> 00:42:16,830
as other courts lab had given a talk

631
00:42:16,830 --> 00:42:20,870
that that picked solely on samsung

632
00:42:20,870 --> 00:42:23,890
and they found a great example
unprotected

633
00:42:23,890 --> 00:42:27,940
receiver so I asked them in with their
permission

634
00:42:27,940 --> 00:42:32,460
showing example because it's so cool so
did the same thing I'm missus

635
00:42:32,460 --> 00:42:35,540
like me recreating it they found

636
00:42:35,540 --> 00:42:39,050
a a place in the application

637
00:42:39,050 --> 00:42:42,940
where the input is controlled by an
intense message and it says

638
00:42:42,940 --> 00:42:48,710
do shell command and launches a shell
with a pram streak

639
00:42:48,710 --> 00:42:52,270
I so if you're on Sat

640
00:42:52,270 --> 00:42:56,250
you just give it an escape

641
00:42:56,250 --> 00:42:59,859
you can you can run any shell command
that you want

642
00:42:59,859 --> 00:43:03,120
by launching in 10 message this is
something that Mauer could do

643
00:43:03,120 --> 00:43:06,690
something you can do from the command
line and you can see here we launch the

644
00:43:06,690 --> 00:43:07,550
intent

645
00:43:07,550 --> 00:43:10,570
and just cat that filing you can see

646
00:43:10,570 --> 00:43:13,690
just ran ID

647
00:43:13,690 --> 00:43:17,730
been put out put into that file so this
could be used to

648
00:43:17,730 --> 00:43:21,930
download malicious files to launch an
exploit

649
00:43:21,930 --> 00:43:25,120
to do really anything

650
00:43:25,120 --> 00:43:28,960
sithole in summary so has the

651
00:43:28,960 --> 00:43:32,250
LG backup program we looked at some app
stores

652
00:43:32,250 --> 00:43:36,549
have some on their ability or bug report

653
00:43:36,549 --> 00:43:39,950
pending that can talk about yet

654
00:43:39,950 --> 00:43:43,669
I don't worry im from it toll-free at
Penn

655
00:43:43,670 --> 00:43:49,150
the wheel annoyed Picard says why would
you do that

656
00:43:49,150 --> 00:43:53,480
using Google Play App Store use Android
wifi hotspot

657
00:43:53,480 --> 00:43:57,560
top told him for in a wifi connection
manager backup programs

658
00:43:57,560 --> 00:44:02,609
keep the app's that are loaded on the
device to a minimum

659
00:44:02,609 --> 00:44:06,450
so example App Store issues

660
00:44:06,450 --> 00:44:10,080
if you have a third-party application
store as well as the default app some

661
00:44:10,080 --> 00:44:11,319
advice

662
00:44:11,319 --> 00:44:15,410
you can't run it securely because of how
Android is set up

663
00:44:15,410 --> 00:44:18,980
I you have to either check this box

664
00:44:18,980 --> 00:44:23,700
that lets unknown sources I but you
could stall

665
00:44:23,700 --> 00:44:28,069
II applications that your operating
system doesn't recognize the signature

666
00:44:28,069 --> 00:44:28,710
for

667
00:44:28,710 --> 00:44:32,000
so I could be something that you've
signed or or someone else assign

668
00:44:32,000 --> 00:44:35,230
I think that's how the Amazon app store
works

669
00:44:35,230 --> 00:44:39,640
or you have to do this workaround and
have

670
00:44:39,640 --> 00:44:43,259
and ringtone extra not unknown source so
what that says

671
00:44:43,260 --> 00:44:48,030
is if you include it with the intent
messages

672
00:44:48,030 --> 00:44:51,600
don't treat this application install
request as if it were coming from an

673
00:44:51,600 --> 00:44:52,710
unknown source

674
00:44:52,710 --> 00:44:57,049
treated as if it were coming from this
application that launched the intent

675
00:44:57,049 --> 00:45:00,920
so if that's an App Store not fringe
system trusts the App Store

676
00:45:00,920 --> 00:45:05,120
by extension the operating system truss
anything that the App Store wants to

677
00:45:05,120 --> 00:45:07,170
install

678
00:45:07,170 --> 00:45:11,690
I that combines with you need ssl/tls

679
00:45:11,690 --> 00:45:14,900
for your App Store in transit otherwise

680
00:45:14,900 --> 00:45:18,430
application can be modified on the way
who knows what could be added to it and

681
00:45:18,430 --> 00:45:19,180
then it would be

682
00:45:19,180 --> 00:45:25,140
trusted by the fall and install because
you're bypassing the signature checking

683
00:45:25,140 --> 00:45:28,259
also bad things can happen

684
00:45:28,260 --> 00:45:31,750
%uh we saw that long lists about the
cations were shared you ID's

685
00:45:31,750 --> 00:45:35,049
shared system UMTS societies are under a
thousand

686
00:45:35,049 --> 00:45:38,280
no applications should use the system
you ideas because they should be

687
00:45:38,280 --> 00:45:40,140
requesting individual permissions

688
00:45:40,140 --> 00:45:43,740
its all time I'm so an office at it and
I

689
00:45:43,740 --> 00:45:47,850
nuit checking a

690
00:45:47,850 --> 00:45:51,790
a commissioner for OEM applications that
have shared system you ID can

691
00:45:51,790 --> 00:45:55,940
undermine the security model allows
access to the existing permissions for

692
00:45:55,940 --> 00:45:56,780
that user

693
00:45:56,780 --> 00:46:01,890
for that user ID I shares data and it
gives you the same you ideas

694
00:46:01,890 --> 00:46:06,759
an existing processes models the sandbox

695
00:46:06,760 --> 00:46:10,520
okay to the bar the wrap-up

696
00:46:10,520 --> 00:46:13,600
the Android Open Source project can
really add whatever it wants whatever

697
00:46:13,600 --> 00:46:17,440
exploit Prevention's whatever encryption
or security but until

698
00:46:17,440 --> 00:46:20,880
oh %um start paying attention to
security on the applications that

699
00:46:20,880 --> 00:46:22,870
they're loading onto the device

700
00:46:22,870 --> 00:46:27,540
and the drivers that they're writing for
device I

701
00:46:27,540 --> 00:46:31,410
devices will continue to be rooted
within hours have coming out and you'll

702
00:46:31,410 --> 00:46:32,569
see

703
00:46:32,569 --> 00:46:35,640
exploits which affect entire classes of

704
00:46:35,640 --> 00:46:40,339
up devices so what the OEM's can do

705
00:46:40,339 --> 00:46:44,910
all course is not possible to not modify
the Android Open Source project everyone

706
00:46:44,910 --> 00:46:48,049
needs their special brand and running on
the device

707
00:46:48,049 --> 00:46:51,810
I thing you can do is pass former
abilities and deploy

708
00:46:51,810 --> 00:46:55,970
patches quickly I'm on those few
applications as possible I don't need

709
00:46:55,970 --> 00:46:58,589
roller coaster tycoon on my phone

710
00:46:58,589 --> 00:47:03,440
in a place where I can't uninstall it I

711
00:47:03,440 --> 00:47:07,750
top reinvent the wheel I and they don't
share user ID

712
00:47:07,750 --> 00:47:11,310
a system ID's unless it's absolutely
necessary

713
00:47:11,310 --> 00:47:15,319
on there's no reason to kinda work
around the sandbox

714
00:47:15,319 --> 00:47:18,940
and then this would be like a dream come
true

715
00:47:18,940 --> 00:47:23,220
dole put pre-installed applications in a
read-only file system

716
00:47:23,220 --> 00:47:26,730
so the user can assaulting without
rooting the device

717
00:47:26,730 --> 00:47:30,280
but them in data app were all the other
happy applications go that can be

718
00:47:30,280 --> 00:47:32,330
uninstalled by the user

719
00:47:32,330 --> 00:47:35,900
and last year's a use a lot loader

720
00:47:35,900 --> 00:47:40,069
don't don't allow it an attacker to run
unsigned code

721
00:47:40,069 --> 00:47:45,319
on my device what the mobile network
operators are kinda the man in the

722
00:47:45,319 --> 00:47:46,299
middle here

723
00:47:46,299 --> 00:47:49,589
what they can do they can vet
applications that are pre-loaded

724
00:47:49,589 --> 00:47:52,960
I'm they can ask though %um not to
preload applications

725
00:47:52,960 --> 00:47:56,640
they can help the OEM's push out Patch's
quickly once those vulnerabilities are

726
00:47:56,640 --> 00:47:57,779
discovered

727
00:47:57,780 --> 00:48:01,480
they can mandate the latest software
version is the latest Android

728
00:48:01,480 --> 00:48:05,850
the latest fixes on whatever
applications though %um has

729
00:48:05,850 --> 00:48:09,740
and they can not reinvent the wheel

730
00:48:09,740 --> 00:48:14,129
we saw okay what you can do

731
00:48:14,130 --> 00:48:17,380
so actually I deviance toppers /a
perfect I

732
00:48:17,380 --> 00:48:20,900
overshoot this line his whole talk was
the slide

733
00:48:20,900 --> 00:48:25,830
I annual really into great detail

734
00:48:25,830 --> 00:48:29,670
you can install CyanogenMod I

735
00:48:29,670 --> 00:48:33,710
barring that you can keep your device up
today when those annoying pop-ups come

736
00:48:33,710 --> 00:48:35,960
up that say we're gonna need an hour

737
00:48:35,960 --> 00:48:39,839
your device and then we're gonna rebuild
at the end you could lose some data

738
00:48:39,839 --> 00:48:44,120
you have to do it you care for
downloading from marketplace's

739
00:48:44,120 --> 00:48:48,080
use Google Play which is I using
signature check

740
00:48:48,080 --> 00:48:51,160
not trying to work around it don't you

741
00:48:51,160 --> 00:48:54,960
root your device if you have to I'm
written and hide

742
00:48:54,960 --> 00:48:58,549
ru like we were never before

743
00:48:58,549 --> 00:49:03,180
a don't don't disable bootloader code
signature checks they're there for a

744
00:49:03,180 --> 00:49:05,600
reason

745
00:49:05,600 --> 00:49:09,440
and check permissions when you're
installing applications and checked them

746
00:49:09,440 --> 00:49:10,109
on the

747
00:49:10,109 --> 00:49:13,150
pre-installed applications

748
00:49:13,150 --> 00:49:17,520
so we'd like to see an Android 4.3 is a
Google controlled secure

749
00:49:17,520 --> 00:49:20,589
chain kinda like the windows 8 model

750
00:49:20,589 --> 00:49:23,850
native support for hardware so you can
just build

751
00:49:23,850 --> 00:49:27,370
the Android Open Source project and
deploy it without room for

752
00:49:27,370 --> 00:49:30,720
oh %um mistakes reading drivers

753
00:49:30,720 --> 00:49:33,959
and then the ability to revoke
application permissions: which

754
00:49:33,960 --> 00:49:37,520
which TV uncovered I've we could granule
early

755
00:49:37,520 --> 00:49:41,440
revoke application for missions or spoof
the information

756
00:49:41,440 --> 00:49:45,089
on that they're getting back like GPS
I'll

757
00:49:45,089 --> 00:49:49,390
that that would be a dream come true so
I posted my tool here

758
00:49:49,390 --> 00:49:53,060
I I war continue making updates to it

759
00:49:53,060 --> 00:49:57,250
probably over the next month in Gravette
now if anyone wants to contribute to the

760
00:49:57,250 --> 00:49:59,299
repository or shoot me an email with

761
00:49:59,299 --> 00:50:03,930
features you'd like to see so the Angola
South kinda an API that anyone can just

762
00:50:03,930 --> 00:50:06,149
important as a Python library

763
00:50:06,150 --> 00:50:09,819
and then use it to to parse through your
manifest file

764
00:50:09,819 --> 00:50:13,089
I is my Twitter and retweet very much a
few

765
00:50:13,089 --> 00:50:17,640
feel free to tweet at me a and I G is
higher

766
00:50:17,640 --> 00:50:24,640
so thanks a lot for listening enjoy the
open bar integral bitterly

767
00:50:26,790 --> 00:50:31,130
is checked them on the pre-installed
applications

768
00:50:31,130 --> 00:50:35,510
so we'd like to see an Android 4.3 is a
Google controlled secure

769
00:50:35,510 --> 00:50:38,580
chain kinda like the windows 8 model

770
00:50:38,580 --> 00:50:41,830
native support for hardware so you can
just build

771
00:50:41,830 --> 00:50:44,859
the Android Open Source project and
deploy it without room

772
00:50:44,859 --> 00:50:48,700
for oh %um mistakes reading drivers I'm

773
00:50:48,700 --> 00:50:51,939
and then the ability to revoke
application permissions: which

774
00:50:51,940 --> 00:50:55,500
which TV and covered I've we could
granule early

775
00:50:55,500 --> 00:50:59,420
revoke application for missions or spoof
the information

776
00:50:59,420 --> 00:51:03,080
I'm that they're getting back like GPS
%ah

777
00:51:03,080 --> 00:51:07,370
that that would be a dream come true so
I posted my tool here

778
00:51:07,370 --> 00:51:11,040
I I war continue making updates to it

779
00:51:11,040 --> 00:51:15,240
probably over the next month grab it now
if anyone wants to contribute to the

780
00:51:15,240 --> 00:51:17,189
repository or shoot me an email with

781
00:51:17,190 --> 00:51:21,500
features you'd like to see though the
angolans have kind of an API that anyone

782
00:51:21,500 --> 00:51:24,130
can just important as a Python library

783
00:51:24,130 --> 00:51:27,799
and then use it to to parse through
manifest file

784
00:51:27,799 --> 00:51:31,080
I is my Twitter I don't tweet very much
a few

785
00:51:31,080 --> 00:51:35,630
feel free to tweet at me a and I G is
higher

786
00:51:35,630 --> 00:51:42,630
so thanks a lot for listening enjoy the
open bar integral bitterly

787
00:51:44,780 --> 00:51:45,030
is

