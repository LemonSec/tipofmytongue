1
00:00:00,080 --> 00:00:03,179
violation it says no you cannot go to
the site there's something fishy going

2
00:00:03,179 --> 00:00:03,520
on

3
00:00:03,520 --> 00:00:07,040
on so China that didn't really work so
well

4
00:00:07,040 --> 00:00:10,660
on like I said its strict

5
00:00:10,660 --> 00:00:14,360
it enforces that the correct sir it is
used it also

6
00:00:14,360 --> 00:00:19,390
enforces that HTTPS only issues the way
that you use an

7
00:00:19,390 --> 00:00:22,980
you set the strict transport security
header you can set the message

8
00:00:22,980 --> 00:00:26,410
this is for the Cirque on you can also
send food supplement so

9
00:00:26,410 --> 00:00:29,840
if we have the seventh about.com it
would also apply to just forget about

10
00:00:29,840 --> 00:00:31,320
Colorado about.com

11
00:00:31,320 --> 00:00:34,410
so the

12
00:00:34,410 --> 00:00:37,828
migration path for implementing this you
had the header

13
00:00:37,829 --> 00:00:41,180
it works it's pretty awesome this is
what is your security features this is a

14
00:00:41,180 --> 00:00:41,870
huge win

15
00:00:41,870 --> 00:00:45,218
if you're running a site that's public
facing should probably have interest yes

16
00:00:45,219 --> 00:00:48,980
on and you should obviously have all
your suffering over SSL in first place

17
00:00:48,980 --> 00:00:52,209
on some problems with this

18
00:00:52,210 --> 00:00:55,850
there's still a small window we can be
attacked which is before

19
00:00:55,850 --> 00:00:59,480
the browsers made the first request to
the website so before the browser's ever

20
00:00:59,480 --> 00:01:00,980
seen this Justice Center

21
00:01:00,980 --> 00:01:05,149
someone to amend the middle attack by
capturing that initial request

22
00:01:05,150 --> 00:01:09,010
to HTTP GET have become the solution to
this his brother certainly

23
00:01:09,010 --> 00:01:12,479
so from there are some guys at Google
our

24
00:01:12,479 --> 00:01:16,080
working on the protein the included a
fingerprint up to get a book from

25
00:01:16,080 --> 00:01:16,979
certificate

26
00:01:16,979 --> 00:01:20,210
Inc from so when you download pro it
ships with the get home

27
00:01:20,210 --> 00:01:24,039
a certificate fingerprint so that even
the first time you visit the site

28
00:01:24,040 --> 00:01:27,470
it knows with the fingerprint isn't it
will air out if its is the wrong

29
00:01:27,470 --> 00:01:28,460
fingerprint so there's

30
00:01:28,460 --> 00:01:31,789
I'll and but that doesn't really work
for everyone but it's a a pretty cool

31
00:01:31,790 --> 00:01:32,659
way to

32
00:01:32,659 --> 00:01:37,130
to narrow the window the text form in
the military on

33
00:01:37,130 --> 00:01:40,470
another thing that might be asking
yourself if you do web application

34
00:01:40,470 --> 00:01:41,048
security

35
00:01:41,049 --> 00:01:44,189
if you strip running Berber fiddler are

36
00:01:44,189 --> 00:01:47,758
to a which is intercepting proxy that
you're intentionally running

37
00:01:47,759 --> 00:01:51,720
that is going to run on issue 2 b.s
traffic it does not break that

38
00:01:51,720 --> 00:01:56,310
the if you have a a certain stalled
locally so for reports we refusing for

39
00:01:56,310 --> 00:01:57,659
perfect were

40
00:01:57,659 --> 00:02:01,149
whatever you have been abusing it will
allow that so that's not gonna break

41
00:02:01,149 --> 00:02:01,600
your

42
00:02:01,600 --> 00:02:05,490
or something proxies something if you're
at a company that has our corporate

43
00:02:05,490 --> 00:02:06,079
proxy

44
00:02:06,079 --> 00:02:09,378
thats intercept all the traffic at this
rate is installed booklets are going to

45
00:02:09,378 --> 00:02:10,679
break are

46
00:02:10,679 --> 00:02:16,280
your proxies right so the next to
counter a talk about as I cross or

47
00:02:16,280 --> 00:02:17,280
injuries or sharing

48
00:02:17,280 --> 00:02:20,750
I'm this technology actually has a
pretty good adoption rate

49
00:02:20,750 --> 00:02:23,940
so this is definitely something that you
can use I'm

50
00:02:23,940 --> 00:02:27,079
and you know the main the main issue
with with cores or

51
00:02:27,080 --> 00:02:30,739
what actually solves is you know you
wanna make in a tax request

52
00:02:30,739 --> 00:02:33,230
other domain and you get the night
breakers at the violation the same

53
00:02:33,230 --> 00:02:34,200
margin principal

54
00:02:34,200 --> 00:02:39,099
I'm so the solution is with with cross
or sorry sir sharing is

55
00:02:39,099 --> 00:02:42,410
make a request specifying your chin
header

56
00:02:42,410 --> 00:02:46,180
to another domain the server responds
with the access control our gym better

57
00:02:46,180 --> 00:02:49,489
I will look at some other specifics
behind that in this particular

58
00:02:49,489 --> 00:02:52,709
example it's it's a wild card system
allow any word

59
00:02:52,709 --> 00:02:56,920
and the access is granted for that
request so let's take a look

60
00:02:56,920 --> 00:03:00,780
at an example here so a client senza

61
00:03:00,780 --> 00:03:05,879
the orchard Hyderabad bake and dine at
the server sends back the access control

62
00:03:05,879 --> 00:03:10,140
I'm yes I am allowed access bob bacon
that that if the client server

63
00:03:10,140 --> 00:03:13,819
Orjan don't match what happens is
nothing you actually just don't get the

64
00:03:13,819 --> 00:03:15,018
resource in

65
00:03:15,019 --> 00:03:19,540
it's pretty much denied that point and

66
00:03:19,540 --> 00:03:23,239
what about things like cookies for
example I it's pretty much the same

67
00:03:23,239 --> 00:03:27,519
I'm accept that you're gonna need to
specify that you want to credentials

68
00:03:27,519 --> 00:03:28,260
along with it

69
00:03:28,260 --> 00:03:32,220
and obviously this I'm falls in the fact
that you know makes

70
00:03:32,220 --> 00:03:35,359
you know if you request resources as
cookies you know make sure

71
00:03:35,360 --> 00:03:38,400
you're doing other good security
precautions and mechanisms

72
00:03:38,400 --> 00:03:41,860
on the servers and need to send the
following to

73
00:03:41,860 --> 00:03:45,940
I which is same you're basically allowed
to send a special so you'll see here

74
00:03:45,940 --> 00:03:48,090
that it says specifying that

75
00:03:48,090 --> 00:03:52,480
access control allow credentials is set
to true on

76
00:03:52,480 --> 00:03:56,329
we'll take a look at some other the
Hatters smoothie

77
00:03:56,330 --> 00:04:00,290
the things you can do with simple
request a simple request are basically

78
00:04:00,290 --> 00:04:00,849
you know

79
00:04:00,849 --> 00:04:04,250
what we saw few slight prior here where

80
00:04:04,250 --> 00:04:07,409
me make a request to server sends back
the access allowed

81
00:04:07,409 --> 00:04:11,750
so for doing simple request were allowed
to do things like

82
00:04:11,750 --> 00:04:14,810
get post head are also allowed to

83
00:04:14,810 --> 00:04:19,259
request these kinds of simple headers
things like except

84
00:04:19,259 --> 00:04:22,759
I content language content type only
that

85
00:04:22,759 --> 00:04:26,570
the types that are listed below here so
things like performance

86
00:04:26,570 --> 00:04:32,180
form data at explain documents things
can get a little bit more complicated

87
00:04:32,180 --> 00:04:32,840
though

88
00:04:32,840 --> 00:04:36,729
if we wanted to on something potentially
using

89
00:04:36,729 --> 00:04:40,070
a different kind HTTP verbs so maybe we
don't wanna do you

90
00:04:40,070 --> 00:04:43,969
on get poster had but we need to do with
we need to do with the week

91
00:04:43,970 --> 00:04:47,050
but for some reason I'm things to get a
little bit more complicated

92
00:04:47,050 --> 00:04:50,470
walk I walk through an example up what

93
00:04:50,470 --> 00:04:53,729
what the difference between a simple
request an ensemble

94
00:04:53,729 --> 00:04:57,090
so for the non simple request I'm

95
00:04:57,090 --> 00:05:00,039
you need to do what's called a pre-fight
request this is basically like a

96
00:05:00,040 --> 00:05:01,840
permissions check it sank a my love

97
00:05:01,840 --> 00:05:06,349
do this stuff I the server sends back to
the permissions that are allowed

98
00:05:06,350 --> 00:05:10,490
and then you actually facilitate the
rest of the request

99
00:05:10,490 --> 00:05:14,130
so kinda looks like this I'm so here we
have

100
00:05:14,130 --> 00:05:19,330
on a request specifying your chin up API
to pop dot com

101
00:05:19,330 --> 00:05:24,330
were requesting the method but and were
also requesting a custom header

102
00:05:24,330 --> 00:05:28,560
for the host AP I dot Allison I'm so

103
00:05:28,560 --> 00:05:31,650
we make that request the server response
back and says

104
00:05:31,650 --> 00:05:35,580
on this isn't allowed origin a API to
buy back OBB

105
00:05:35,580 --> 00:05:38,880
here's a list of allowed methods so we
see get post and put

106
00:05:38,880 --> 00:05:42,580
we requested but so we see that that
isn't allowed method

107
00:05:42,580 --> 00:05:46,919
and we also see that our custom header
is also specified

108
00:05:46,919 --> 00:05:50,090
so we go and facilitate that request
abut

109
00:05:50,090 --> 00:05:53,758
we specified the custom headers value we
specify viewers

110
00:05:53,759 --> 00:05:58,150
flag on and now we get a response back
from a server

111
00:05:58,150 --> 00:06:01,758
tells us that the or you know the
origins allowed and the request goes

112
00:06:01,759 --> 00:06:02,250
through

113
00:06:02,250 --> 00:06:07,280
if you don't see K you know if the
server didn't send a response

114
00:06:07,280 --> 00:06:10,960
so you gonna get something like this
where you gonna see you know can't load

115
00:06:10,960 --> 00:06:12,900
this particular resource

116
00:06:12,900 --> 00:06:16,120
because the origin is not allowed by the
access control allowed origin so once

117
00:06:16,120 --> 00:06:16,610
again

118
00:06:16,610 --> 00:06:19,910
those those values have to imagine if
they don't the request

119
00:06:19,910 --> 00:06:23,680
go through so

120
00:06:23,680 --> 00:06:27,100
on you know what's kinda the idea here
fear you know if you're developing and

121
00:06:27,100 --> 00:06:28,580
implementing this technology

122
00:06:28,580 --> 00:06:31,919
you're just a couple things you wanna
keeping the consideration

123
00:06:31,919 --> 00:06:35,758
up Internet Explorer doesn't do course
by default so you have to send

124
00:06:35,759 --> 00:06:39,270
X the main request object once again if
you're working on this and just keep

125
00:06:39,270 --> 00:06:39,948
that in mind

126
00:06:39,949 --> 00:06:44,430
there's these right up how to do course
request with I

127
00:06:44,430 --> 00:06:48,190
you also can switch scheme so with on
you know you

128
00:06:48,190 --> 00:06:52,569
are you're switching between HTTP and
HTTPS during the request

129
00:06:52,569 --> 00:06:55,770
there's a possibility that you know you
switch came

130
00:06:55,770 --> 00:07:00,210
it's not gonna work this game has to
match when you're making scores request

131
00:07:00,210 --> 00:07:03,789
in to be specific on the browser version
I'm

132
00:07:03,789 --> 00:07:09,180
you know there's a descend listed

133
00:07:09,180 --> 00:07:12,360
cross-browser examples on to get help

134
00:07:12,360 --> 00:07:15,669
dot com slash new abscess page so if you
guys are interested

135
00:07:15,669 --> 00:07:19,500
and actually used to work in here with
me and has it the same right up

136
00:07:19,500 --> 00:07:25,520
on a project called HTTP shell that side
catwalks you some other stuff

137
00:07:25,520 --> 00:07:28,750
on nothing you gonna just be careful
with is a user credentials Hatter

138
00:07:28,750 --> 00:07:32,710
I I mean obviously I kinda said that
before but you know any time you're

139
00:07:32,710 --> 00:07:33,219
saying

140
00:07:33,220 --> 00:07:36,250
credentials across other Orjan set
something

141
00:07:36,250 --> 00:07:40,069
did chance a sub so the something to
keep in the back here at

142
00:07:40,069 --> 00:07:44,569
comment and really up you know course is
useful

143
00:07:44,569 --> 00:07:48,780
but unless you have cross site request
forgery if your site's vulnerable to see

144
00:07:48,780 --> 00:07:49,729
Sir

145
00:07:49,729 --> 00:07:53,590
attacks than cores as early provide you
any additional security

146
00:07:53,590 --> 00:07:57,330
so you know before you go about rolling
out a strategy like crosswords research

147
00:07:57,330 --> 00:07:58,128
sharing

148
00:07:58,129 --> 00:08:02,910
make sure that your cáceres toughest
I'd implemented correctly

149
00:08:02,910 --> 00:08:08,349
on so how many people are familiar with
cross to an XML files or see them when

150
00:08:08,349 --> 00:08:08,969
they're doing

151
00:08:08,970 --> 00:08:12,900
and faster ap psych yeah a people

152
00:08:12,900 --> 00:08:17,020
so don't do this right if you look at
this policy here

153
00:08:17,020 --> 00:08:20,780
you see that I'm basically allowing
access from any domain

154
00:08:20,780 --> 00:08:24,580
no security I'm I'm basically after
seeing while Rd everything that was

155
00:08:24,580 --> 00:08:26,490
actually means is

156
00:08:26,490 --> 00:08:31,849
this particular on file here we we think
about like the Flash cross-domain policy

157
00:08:31,849 --> 00:08:35,458
and and really what this is is it's
course for flash

158
00:08:35,458 --> 00:08:39,559
I'm before allowing you know access from
any domain

159
00:08:39,559 --> 00:08:43,239
were basically introducing sea serpent
or application by

160
00:08:43,240 --> 00:08:47,660
posting a flash app for some flash for
example

161
00:08:47,660 --> 00:08:51,810
to nearly specific on how how you're
allowing access for the staff

162
00:08:51,810 --> 00:08:55,518
I'm in and if you can do it you know we
will do our search for cross-domain

163
00:08:55,519 --> 00:08:57,390
files to see the most indecisive

164
00:08:57,390 --> 00:09:00,699
have them wide open like this which is
really bad practice

165
00:09:00,700 --> 00:09:04,360
so definitely take a look at being a
little bit more

166
00:09:04,360 --> 00:09:08,540
granular with your approach and don't
just wild card everything especially

167
00:09:08,540 --> 00:09:11,969
centered around flash abs

168
00:09:11,970 --> 00:09:15,870
so another problem that was a lot on the
Internet is cross site scripting

169
00:09:15,870 --> 00:09:18,800
for those people who do not know
cross-site scripting is when an attacker

170
00:09:18,800 --> 00:09:20,130
is able to inject

171
00:09:20,130 --> 00:09:24,170
JavaScript into the user's Dom there's a
lot of ways that this can happen but

172
00:09:24,170 --> 00:09:26,490
it's a big problem

173
00:09:26,490 --> 00:09:29,769
the old fix the traditional pics is to
filter input

174
00:09:29,769 --> 00:09:32,899
which means don't allow malicious input
and to include

175
00:09:32,899 --> 00:09:37,180
out up but which is to to is similar to
the encoding

176
00:09:37,180 --> 00:09:40,719
I'll the out but they're going to be are
fighting back to the user the problem

177
00:09:40,720 --> 00:09:42,010
with the solution

178
00:09:42,010 --> 00:09:45,040
is that its arts and developers are bad
at it and

179
00:09:45,040 --> 00:09:48,099
it's not the developers about it so much
as it is this restore

180
00:09:48,100 --> 00:09:52,560
arm there were whenever you see a
cross-site scripting vulnerability it's

181
00:09:52,560 --> 00:09:53,869
cuz developer messed up

182
00:09:53,870 --> 00:09:58,730
or because a library messed up or
something was implemented wrong

183
00:09:58,730 --> 00:10:02,860
this is not something that's easy and
that's why was not present script and

184
00:10:02,860 --> 00:10:04,089
Internet still on the Los

185
00:10:04,089 --> 00:10:07,410
10 this is not %uh pics issue

186
00:10:07,410 --> 00:10:10,709
a new solution for it and it's not so
much a replacement for the old solution

187
00:10:10,709 --> 00:10:11,540
that as it is

188
00:10:11,540 --> 00:10:14,500
something to augmented you should still
be doing the old solution should still

189
00:10:14,500 --> 00:10:14,890
be

190
00:10:14,890 --> 00:10:18,420
including output but content security
policies mitigation

191
00:10:18,420 --> 00:10:21,829
that it so it's a fallback it something
you can

192
00:10:21,829 --> 00:10:25,120
rely on to address cross site scripting
when

193
00:10:25,120 --> 00:10:28,920
a developer does make a mistake and
above your application and Neil

194
00:10:28,920 --> 00:10:32,500
talked quite a bit about yesterday sorry
for the brief here is

195
00:10:32,500 --> 00:10:35,649
what the brothers corporate looks like I
should have some sample at the

196
00:10:35,649 --> 00:10:39,180
the beginning when does showing the
graphs %uh support is not

197
00:10:39,180 --> 00:10:42,689
really there yet across all browsers but
it's going pretty good especially with

198
00:10:42,690 --> 00:10:43,220
chrome

199
00:10:43,220 --> 00:10:46,459
and Internet or out from in Firefox

200
00:10:46,459 --> 00:10:50,119
so it was you too your socially
disallowing

201
00:10:50,120 --> 00:10:54,959
in mind scripts and I'll in mind event
handlers on scripts

202
00:10:54,959 --> 00:10:58,719
there are on its allied troops
disallowing

203
00:10:58,720 --> 00:11:02,790
dynamic JavaScript once again we'll talk
about all the stuff yesterday

204
00:11:02,790 --> 00:11:06,370
the way that you said it is with the
content security policy header

205
00:11:06,370 --> 00:11:09,720
and there's a little bit of
inconsistency here between browsers with

206
00:11:09,720 --> 00:11:12,779
the Aurora version of Firefox is no
mention yesterday

207
00:11:12,779 --> 00:11:16,029
the move to the center to center after
the

208
00:11:16,029 --> 00:11:19,920
hernán you specify a directive first
impressions for suppression

209
00:11:19,920 --> 00:11:23,089
some acorn another directive and more
source oppressions

210
00:11:23,089 --> 00:11:26,000
the directions that you can specify or
defaults for scripts for styles for

211
00:11:26,000 --> 00:11:27,130
CyberSource

212
00:11:27,130 --> 00:11:30,510
I'll the default sources what

213
00:11:30,510 --> 00:11:33,850
gets used if you don't specify any of
the other ones

214
00:11:33,850 --> 00:11:37,829
scripts or says what domains are allowed
to for the brosser les is a large load

215
00:11:37,829 --> 00:11:38,729
transcript from

216
00:11:38,730 --> 00:11:42,029
styles for SWAT the Windsor it slow to
load

217
00:11:42,029 --> 00:11:45,990
it's just us from and thus

218
00:11:45,990 --> 00:11:49,070
this sorry

219
00:11:49,070 --> 00:11:52,230
on so here's a sample just p

220
00:11:52,230 --> 00:11:55,470
header value were saying that the

221
00:11:55,470 --> 00:11:59,300
that scripts can come from some that may
not come overreach its UPS

222
00:11:59,300 --> 00:12:04,389
on 4909 you can also specify the sources

223
00:12:04,389 --> 00:12:08,560
are in any part of that you can just say
the skin if she suggests we can just say

224
00:12:08,560 --> 00:12:09,329
the domain

225
00:12:09,329 --> 00:12:13,699
you can do wild cards you can to any
combination of those states

226
00:12:13,700 --> 00:12:17,450
he also says self so if this is on
about.com self within the hour long

227
00:12:17,450 --> 00:12:20,980
strips from that had a comment only get
about

228
00:12:20,980 --> 00:12:25,540
you also specify unsafe in mind which
essentially defense the whole header

229
00:12:25,540 --> 00:12:29,060
and says we are allowing in mind scripts
so don't do that

230
00:12:29,060 --> 00:12:32,279
on safety vel same deal your defaming

231
00:12:32,279 --> 00:12:36,720
the security feature so in order to do
this

232
00:12:36,720 --> 00:12:40,589
it's not easy you have to go through
move all your and then scripts

233
00:12:40,589 --> 00:12:44,290
if you have an existing web application
you probably have a lot of mine scripts

234
00:12:44,290 --> 00:12:48,010
are it's a big task to go through to
remove all those

235
00:12:48,010 --> 00:12:51,700
once you get that done even had the
header and you can rejoice

236
00:12:51,700 --> 00:12:56,279
on a few pick up so you'll notice as you
mentioned yesterday

237
00:12:56,279 --> 00:12:59,380
CSP breaks a lot of stuff that includes
bookmarklets

238
00:12:59,380 --> 00:13:03,070
and brother sentence I thought it was
funny that mill called out LastPass

239
00:13:03,070 --> 00:13:06,860
because at abuses and they the

240
00:13:06,860 --> 00:13:11,060
do not play well with CSP also is you
mentioned yesterday

241
00:13:11,060 --> 00:13:15,800
their reporting is not very good on
those getting better

242
00:13:15,800 --> 00:13:20,139
some up problems might run into if
you're going to whitelist sources

243
00:13:20,139 --> 00:13:23,269
make sure that the thing for the sources
that you're allowing

244
00:13:23,269 --> 00:13:28,120
if you allow Arkham I then anything of
making money demand so if there is a

245
00:13:28,120 --> 00:13:30,620
process for finger but it still
exploitable

246
00:13:30,620 --> 00:13:34,279
make sure that you can control the
demands or where the street

247
00:13:34,279 --> 00:13:37,310
and also as I mentioned before three new
specifying unsafe

248
00:13:37,310 --> 00:13:40,469
minor and safety valve there socially
defaming the whole thing

249
00:13:40,470 --> 00:13:45,269
injure open yourself back up to script
yes so actually the next technology

250
00:13:45,269 --> 00:13:49,360
or gonna be talking about I'm is been
actually proposed and

251
00:13:49,360 --> 00:13:53,529
latest drafter CSP 1.1 which is a

252
00:13:53,529 --> 00:13:56,399
another way to address prostate
scripting so we'll touch on this

253
00:13:56,399 --> 00:13:57,329
approach but

254
00:13:57,329 --> 00:14:01,560
be on the lookout for this also be
wrapped tied into CSP

255
00:14:01,560 --> 00:14:06,000
on so process right thing is still
really sneaky its present on the site's

256
00:14:06,000 --> 00:14:10,620
on and you know wanted this the ways
that we can protect against cross-site

257
00:14:10,620 --> 00:14:11,430
scripting is

258
00:14:11,430 --> 00:14:15,000
is actually with problems South and so

259
00:14:15,000 --> 00:14:20,860
Firefox is our this as process getting
protection that's coming soon

260
00:14:20,860 --> 00:14:24,360
the browsers on the left here all have
support for access

261
00:14:24,360 --> 00:14:27,990
protection here's kinda the

262
00:14:27,990 --> 00:14:33,110
the overview of the technologies we see
that size Firefox pretty much

263
00:14:33,110 --> 00:14:37,790
you know pretty good support I think
Firefox's main reason for not doing

264
00:14:37,790 --> 00:14:41,160
process getting protection is that they
fit they felt that this was just the

265
00:14:41,160 --> 00:14:42,420
wrong approach

266
00:14:42,420 --> 00:14:45,870
I mean and and and I think for some
reason is that

267
00:14:45,870 --> 00:14:49,000
that actually might be they might be
onto something there

268
00:14:49,000 --> 00:14:52,209
but I what kinda touch will be later

269
00:14:52,209 --> 00:14:56,609
so I am cromer controlled by the axe
Access Protection header

270
00:14:56,610 --> 00:15:00,130
which operates in three modes are River
operates in blocking mode

271
00:15:00,130 --> 00:15:03,600
and kinda this modification motor which
we can call mode 1

272
00:15:03,600 --> 00:15:07,670
and then modes here which is basically
like out so let's take a look at how I E

273
00:15:07,670 --> 00:15:08,589
does it so

274
00:15:08,589 --> 00:15:13,810
quite requests a resource on server
sinuses the header

275
00:15:13,810 --> 00:15:17,339
the brother browser either modifies your
blocks across site scripting

276
00:15:17,339 --> 00:15:21,410
so I'm in the first example here if this
is a header that sand

277
00:15:21,410 --> 00:15:24,529
on this actually prevent surrendering a
page so we can kind of imagine making

278
00:15:24,529 --> 00:15:26,410
request to resource

279
00:15:26,410 --> 00:15:30,730
we passing a parameter and gets rank and
we put script alert one

280
00:15:30,730 --> 00:15:34,310
make a request that resource I'm the
header SATs

281
00:15:34,310 --> 00:15:38,040
I'm on the response to the server on the
page basically is gonna give you about

282
00:15:38,040 --> 00:15:38,620
blank

283
00:15:38,620 --> 00:15:42,470
it's not gonna rendering at all gonna
put a blank page

284
00:15:42,470 --> 00:15:46,690
alternatively if to cross site scripting
protection header set to 1

285
00:15:46,690 --> 00:15:50,250
the surtax to cross site scripting and
then attempts to modify the patient

286
00:15:50,250 --> 00:15:51,509
block the attack

287
00:15:51,509 --> 00:15:55,300
so what does some kinda dynamic
heuristic stop it tries to run your page

288
00:15:55,300 --> 00:15:56,339
removes the

289
00:15:56,339 --> 00:16:00,470
the job script that was reflected back
user I'm still tries to render the page

290
00:16:00,470 --> 00:16:02,100
for you

291
00:16:02,100 --> 00:16:06,990
I'm if it's a 20 you basically about the
protection altogether

292
00:16:06,990 --> 00:16:10,420
so crumbs implementation of this is
known as process ripping out under

293
00:16:10,420 --> 00:16:14,170
a different day before that's what
they've landed on I recently in listens

294
00:16:14,170 --> 00:16:17,229
to the process scripting protection
hunters but it's on by default

295
00:16:17,230 --> 00:16:20,540
so if you aren't even sending these
cross-site scripting protection hunters

296
00:16:20,540 --> 00:16:24,139
it's gonna be turned on on however for
some reason really need to disable

297
00:16:24,139 --> 00:16:26,480
crumbs cross-site scripting auditor

298
00:16:26,480 --> 00:16:29,490
you can go ahead and specify the Access
Protection

299
00:16:29,490 --> 00:16:34,560
under 20 analysts to you it's actually
integrated directly into WebKit

300
00:16:34,560 --> 00:16:39,160
a man has full support for WebKit
browsers I'm as I can alluded to earlier

301
00:16:39,160 --> 00:16:42,660
Firefox I it's coming it's coming

302
00:16:42,660 --> 00:16:46,130
same I'm remember the bill that is

303
00:16:46,130 --> 00:16:48,800
are they were playing around with it on
their nightly builds for a while and I

304
00:16:48,800 --> 00:16:51,099
think it might have made it into a row
while but

305
00:16:51,100 --> 00:16:54,690
okay so it's definitely that's coming up
so it'll be interesting to take a look

306
00:16:54,690 --> 00:16:55,600
at

307
00:16:55,600 --> 00:16:59,060
I'm especially for these kinds of things
I'm which have been

308
00:16:59,060 --> 00:17:03,369
some other problems that we've seen any
other browser this technology

309
00:17:03,370 --> 00:17:07,650
on we see here some false positives so
we have

310
00:17:07,650 --> 00:17:10,780
I reflective cross-site scripting
protection appears to target legitimate

311
00:17:10,780 --> 00:17:14,189
iframes is false positive rates for this
was a chrome issue that somebody

312
00:17:14,189 --> 00:17:15,289
reported

313
00:17:15,289 --> 00:17:18,599
so that's not good right you don't want
to be busting your eye frames on your

314
00:17:18,599 --> 00:17:23,049
application that's thats that's bad it's
also not perfect so

315
00:17:23,049 --> 00:17:28,429
here's an example uva/uvb access honor
bypass

316
00:17:28,429 --> 00:17:33,429
with the Paleo that you can see you we
can see back there but basically

317
00:17:33,429 --> 00:17:37,549
irate here on and if you can will go
around and take a look at some other

318
00:17:37,549 --> 00:17:38,980
bypass mechanisms

319
00:17:38,980 --> 00:17:42,150
you know every few months or so somebody
comes up with a really crappy way

320
00:17:42,150 --> 00:17:45,770
to bypass the Access Protection the
disclosure on in the browser companies

321
00:17:45,770 --> 00:17:46,789
fix it

322
00:17:46,789 --> 00:17:50,129
you can definitely see that it's not
much different than blacklist think so

323
00:17:50,130 --> 00:17:54,910
we can run into some issues for using
this as our primary defense

324
00:17:54,910 --> 00:17:58,630
it's also doesn't protect against or
crossing scripting as

325
00:17:58,630 --> 00:18:02,049
obvious right because house gonna know
that that was in part to the website

326
00:18:02,049 --> 00:18:05,830
the first place so so here kinda using
this as a

327
00:18:05,830 --> 00:18:11,000
protection mechanism against or cross
site scripting gonna be outta luck

328
00:18:11,000 --> 00:18:14,500
so it's kinda the the path here for
developers

329
00:18:14,500 --> 00:18:18,440
you really want to just pass tough cross
a script its cross expecting protection

330
00:18:18,440 --> 00:18:20,280
breaks for application

331
00:18:20,280 --> 00:18:23,220
maybe some legacy code or something this
is going to have an issue with but in

332
00:18:23,220 --> 00:18:25,690
general you know if it breaks a picture
code

333
00:18:25,690 --> 00:18:29,799
and if it doesn't break it you know
senator block on

334
00:18:29,799 --> 00:18:33,299
and also keep in mind that this is
really your last line of defense

335
00:18:33,299 --> 00:18:37,650
at this point you really relying on on
somebody else to do the security for you

336
00:18:37,650 --> 00:18:38,410
so

337
00:18:38,410 --> 00:18:41,970
you don't really rely solely on browser
for cross-site scripting protection

338
00:18:41,970 --> 00:18:44,910
but this is something that you can
definitely work and here overall

339
00:18:44,910 --> 00:18:47,390
cross-site scripting mitigation strategy

340
00:18:47,390 --> 00:18:49,799
and one other things I'll be really nice
as I can I mentioned earlier is that

341
00:18:49,799 --> 00:18:52,350
they're gonna type this header into

342
00:18:52,350 --> 00:18:55,860
the CSP 1.1 specification you can
actually

343
00:18:55,860 --> 00:18:58,740
use that cut and security policy not
only knew all the stuff the ballot

344
00:18:58,740 --> 00:18:59,690
discussing

345
00:18:59,690 --> 00:19:02,700
but use this as an additional last line
of defense

346
00:19:02,700 --> 00:19:06,039
on top of that CSP stuff to really give
you an awesome layered approach for

347
00:19:06,039 --> 00:19:09,970
battling prostate scripting

348
00:19:09,970 --> 00:19:14,240
so are when you're on a application
intestines you

349
00:19:14,240 --> 00:19:18,270
find a page where you provide input

350
00:19:18,270 --> 00:19:22,330
and it reflects the directly back to you

351
00:19:22,330 --> 00:19:25,490
you get excited you think you can press
it's ripping and then you see that the

352
00:19:25,490 --> 00:19:26,169
content-type

353
00:19:26,169 --> 00:19:31,490
is set to to explain and then you are
set because your expertise in the work

354
00:19:31,490 --> 00:19:34,570
but sometimes browsers decide to

355
00:19:34,570 --> 00:19:38,030
render content-type text/plain as HTML

356
00:19:38,030 --> 00:19:41,580
of Internet Explorer has a long history
of this known as mine

357
00:19:41,580 --> 00:19:45,039
mime type: sniffing where it actually
looks at the content above the file

358
00:19:45,039 --> 00:19:48,690
to the term the mime type: rather than
the content-type header

359
00:19:48,690 --> 00:19:52,370
are similarly there there been summer
issues

360
00:19:52,370 --> 00:19:55,689
with to expand and specific in other
browsers

361
00:19:55,690 --> 00:19:59,990
where a text plan document it rendered
as HTML

362
00:19:59,990 --> 00:20:05,130
a solution for this is the No snooker
the

363
00:20:05,130 --> 00:20:08,630
rather support is pretty good for forces
and sported

364
00:20:08,630 --> 00:20:13,140
from those I he does all some other
mobile browsers are not support it very

365
00:20:13,140 --> 00:20:15,250
well and they're actually doing even
worse things

366
00:20:15,250 --> 00:20:18,320
are I was talking to the

367
00:20:18,320 --> 00:20:22,168
the Apple guys the mobile Safari if it's
text/plain

368
00:20:22,169 --> 00:20:26,419
it are it does not look at anything it
does not stop the constant open the the

369
00:20:26,419 --> 00:20:28,900
document it only looks at the URL so no
matter what

370
00:20:28,900 --> 00:20:32,570
the your licence when to render it is
that that type

371
00:20:32,570 --> 00:20:37,350
on so that's a big issue and it doesn't
even respect the

372
00:20:37,350 --> 00:20:41,260
knows that her but prom night you do so
it cultures all that a lot

373
00:20:41,260 --> 00:20:43,750
social it does is it it tells the
browser to stop sniffing the

374
00:20:43,750 --> 00:20:46,590
content-type

375
00:20:46,590 --> 00:20:50,750
so content-type text/plain actually
means content-type text/plain

376
00:20:50,750 --> 00:20:54,020
on and this means that if you want

377
00:20:54,020 --> 00:20:59,100
a file to be is for CSS you have to
specify a patient CSS

378
00:20:59,100 --> 00:21:03,780
on javascript must be text/javascript
repetition job script and so on

379
00:21:03,780 --> 00:21:06,960
the way that you said it is with the
expensive type options header

380
00:21:06,960 --> 00:21:10,840
to set the value to know sniff

381
00:21:10,840 --> 00:21:14,100
and up profit as another

382
00:21:14,100 --> 00:21:18,480
really easy one for a while us we're
talking about iframe sandboxing

383
00:21:18,480 --> 00:21:24,130
I'm just has pretty decent support with
the exception of

384
00:21:24,130 --> 00:21:29,169
explorer and export and supports it but
most modern Firefox and Chrome browsers

385
00:21:29,169 --> 00:21:31,919
and Safari support this feature so

386
00:21:31,919 --> 00:21:36,020
if you're on a light year shot a lock
and County ID is here

387
00:21:36,020 --> 00:21:39,220
you know the use case for this is is

388
00:21:39,220 --> 00:21:42,350
pic thinking and the example of hosting
a third-party widget on your site

389
00:21:42,350 --> 00:21:45,809
any for revenue or something like that
on and you know

390
00:21:45,809 --> 00:21:49,789
with should you trust these widgets
would you let them access your down

391
00:21:49,789 --> 00:21:52,309
execute scripts

392
00:21:52,309 --> 00:21:56,039
maybe you should should you let them
read write cookies access local storage

393
00:21:56,039 --> 00:21:58,320
like a local Siebel database

394
00:21:58,320 --> 00:22:01,340
I would you let you know which lets me
hang out in your house

395
00:22:01,340 --> 00:22:05,199
if the page and high-fives on you know
probably not

396
00:22:05,200 --> 00:22:09,909
especially if you know who they were
sorry with sandbox as it provides

397
00:22:09,909 --> 00:22:11,500
restrictions for the stuff that we
should

398
00:22:11,500 --> 00:22:15,620
maybe don't fully trust this does stuff
like you allow you to disable

399
00:22:15,620 --> 00:22:19,090
forms and scripts for those widgets
allows you to disable plugins

400
00:22:19,090 --> 00:22:22,879
the same ol those which is from doing
pop-ups prevent leaks from targeting

401
00:22:22,880 --> 00:22:24,620
other browser contacts

402
00:22:24,620 --> 00:22:28,709
so gives us more granularity for what
that

403
00:22:28,710 --> 00:22:31,919
what that happened about a knife can
actually do

404
00:22:31,919 --> 00:22:35,240
so the way that works as a brother
parses a attribute

405
00:22:35,240 --> 00:22:38,440
and then it forces those restrictions so
here

406
00:22:38,440 --> 00:22:42,230
we have some we have some some company
that has a widget

407
00:22:42,230 --> 00:22:46,020
and we are specifying right here we see
we're just specifying the sandbox

408
00:22:46,020 --> 00:22:47,870
attributes

409
00:22:47,870 --> 00:22:52,360
that's pretty much it on from a security
perspective

410
00:22:52,360 --> 00:22:56,428
all these things here are ways that we
can make be

411
00:22:56,429 --> 00:23:00,380
the sandbox a little bit more open so
for some reason if we need a cop

412
00:23:00,380 --> 00:23:03,960
bed and an iframe sandbox to you to be
able to

413
00:23:03,960 --> 00:23:08,549
execute scripts be able to work with
forms and all the stuff then

414
00:23:08,549 --> 00:23:11,770
you know we can actually turn all the
settings on kinda

415
00:23:11,770 --> 00:23:15,679
you know the fangs the technology so if
you're you know security on

416
00:23:15,679 --> 00:23:19,669
you're looking at this stuff you know
see how permissiveness and boxes and if

417
00:23:19,669 --> 00:23:22,919
there's anything that you can but
actually used to your advantage

418
00:23:22,919 --> 00:23:26,030
it's also not enabled by default so in
general if you're

419
00:23:26,030 --> 00:23:29,629
create an iframe sets you have to
actually specified at sandbox attribute

420
00:23:29,630 --> 00:23:31,929
it's not be there by

421
00:23:31,929 --> 00:23:36,470
by default so and another thing kinda
dimension as

422
00:23:36,470 --> 00:23:40,370
you know this can potentially break
brain busters by 10 ways we can actually

423
00:23:40,370 --> 00:23:42,989
get away from frame busting technologies

424
00:23:42,990 --> 00:23:46,970
is using extreme options and so we're
kinda just

425
00:23:46,970 --> 00:23:50,740
go and get dive right in had first right
into this one too

426
00:23:50,740 --> 00:23:54,429
so extreme options has really get
support on

427
00:23:54,429 --> 00:23:57,289
overall its its green with the exception
of some of the old versions of Internet

428
00:23:57,289 --> 00:23:59,870
Explorer

429
00:23:59,870 --> 00:24:03,209
and really a purpose in this was to
prevent clickjacking attacks

430
00:24:03,210 --> 00:24:06,159
I'm sure everybody here is some
familiarity with the Jackets will do

431
00:24:06,159 --> 00:24:06,640
really

432
00:24:06,640 --> 00:24:10,850
brief overview on how they work user
visits a malicious site

433
00:24:10,850 --> 00:24:14,959
iframe is positioned over a link user
click link click happens on iframe

434
00:24:14,960 --> 00:24:18,059
okay see any is a user's really realize
with a click and

435
00:24:18,059 --> 00:24:21,490
the clicking and they're performing an
action iframe that actually doing some

436
00:24:21,490 --> 00:24:23,220
sorta sensitive function

437
00:24:23,220 --> 00:24:26,490
may be transferring money from a bank
account or up

438
00:24:26,490 --> 00:24:32,090
checking you out on some shop
application logged into

439
00:24:32,090 --> 00:24:35,459
so with this works as a hatter tells the
browser the page can be rendered in a

440
00:24:35,460 --> 00:24:36,190
frame

441
00:24:36,190 --> 00:24:39,720
there's a few options for extreme
options are than I i

442
00:24:39,720 --> 00:24:42,850
same origin allow from you are I comets

443
00:24:42,850 --> 00:24:45,980
still not a standard yet at the latest
draft

444
00:24:45,980 --> 00:24:51,470
I'll although might've been updated for
a slave summertime in February

445
00:24:51,470 --> 00:24:54,470
and also Google's been kinda pushing
around a new header

446
00:24:54,470 --> 00:24:57,580
so my class says I'm

447
00:24:57,580 --> 00:25:01,520
put that he thinks that they should
allow at add allow all

448
00:25:01,520 --> 00:25:05,700
as a accepted value on that originally
when I read what the hell out

449
00:25:05,700 --> 00:25:08,460
the purpose of the law like I was a
little confused on why that would be a

450
00:25:08,460 --> 00:25:09,360
good idea

451
00:25:09,360 --> 00:25:13,240
because basically what allow all those
is it allows a resource be framed by all

452
00:25:13,240 --> 00:25:13,809
origins

453
00:25:13,809 --> 00:25:17,059
so it basically turns off the protection

454
00:25:17,059 --> 00:25:20,110
but then I thought was that ask him but

455
00:25:20,110 --> 00:25:23,219
I thought was maybe that the purpose of
specifying the allow

456
00:25:23,220 --> 00:25:26,490
all Orjan is a kinda fundamentally shift
the use a back strain

457
00:25:26,490 --> 00:25:30,710
options moore's at the fall better
potentially use that so that every

458
00:25:30,710 --> 00:25:34,620
site sending that allow all in the event
that they don't already have the option

459
00:25:34,620 --> 00:25:37,799
figured kinda change a little bit a
security model of course people start

460
00:25:37,799 --> 00:25:39,029
using this technology I

461
00:25:39,029 --> 00:25:42,039
I think that's the purpose on but

462
00:25:42,039 --> 00:25:46,129
you now what will have to kinda see how
that pans out

463
00:25:46,130 --> 00:25:49,169
so you know from from a security
perspective

464
00:25:49,169 --> 00:25:53,230
if we see I'm if we see this option
enabled

465
00:25:53,230 --> 00:25:56,350
really should check be allowed from
scope on

466
00:25:56,350 --> 00:25:59,428
you know see you know check the your I
that's allowed in

467
00:25:59,429 --> 00:26:03,850
and and you know czar vulnerabilities
associated with that

468
00:26:03,850 --> 00:26:07,090
and its kinda as it has been discussed I
think so a skier

469
00:26:07,090 --> 00:26:11,090
one or the other absecon gurus that have
really cool demo of

470
00:26:11,090 --> 00:26:15,689
had a kinda get past all clickjacking
stuff by doing so redirects

471
00:26:15,690 --> 00:26:18,909
I'm and basically that's a concept I
love you know we have so many

472
00:26:18,909 --> 00:26:22,429
user click on a page or click on a page
on the clicking

473
00:26:22,429 --> 00:26:26,309
I'm you know request is made that free
cash is

474
00:26:26,309 --> 00:26:31,408
the resource that you would potentially
have used an iframe for a quick check

475
00:26:31,409 --> 00:26:34,669
does a quick 302 redirect you
accidentally clicked that

476
00:26:34,669 --> 00:26:37,789
portion of the page where the redirect
happens and you transfer money in your

477
00:26:37,789 --> 00:26:38,210
bank

478
00:26:38,210 --> 00:26:41,799
or something like that I'm so you know
doesn't really address

479
00:26:41,799 --> 00:26:45,520
that sort of attack but doesn't rest
this the the more common

480
00:26:45,520 --> 00:26:49,020
clickjacking attacks at the scene

481
00:26:49,020 --> 00:26:52,190
so you know from over from
implementation sandpoint

482
00:26:52,190 --> 00:26:55,340
really with developers in New is this
that I this one possible

483
00:26:55,340 --> 00:26:59,309
I'm you know peace be is limited with
your scope as you possibly can if you

484
00:26:59,309 --> 00:26:59,850
don't want your

485
00:26:59,850 --> 00:27:04,270
out that in bed and I France so on
that's kinda my recommendation on that

486
00:27:04,270 --> 00:27:08,340
we have enough time to do this one cool

487
00:27:08,340 --> 00:27:12,809
so something that isn't a header
JavaScript photography

488
00:27:12,809 --> 00:27:16,428
I'll there's been a lot of talk in the
last year or so

489
00:27:16,429 --> 00:27:20,010
in the security community about how bad
job scriptwriter fears

490
00:27:20,010 --> 00:27:24,090
Montesano Chicago security firm rotary
the also white paper

491
00:27:24,090 --> 00:27:28,360
talking about how stupid it is haitian
ever do just kept cryptography

492
00:27:28,360 --> 00:27:32,139
are their main contentions with a were
that there's not

493
00:27:32,140 --> 00:27:36,120
good native JavaScript API support for
so you can't get

494
00:27:36,120 --> 00:27:39,469
good pseudo-random this on

495
00:27:39,470 --> 00:27:43,110
their other problem with drugs jobs for
productive is that

496
00:27:43,110 --> 00:27:46,600
if you can't trust the server that is

497
00:27:46,600 --> 00:27:49,629
that you're sending data to to do
photography on the server side then why

498
00:27:49,630 --> 00:27:50,960
can you trust that server

499
00:27:50,960 --> 00:27:54,240
to century Bella JavaScript that is
going to do the

500
00:27:54,240 --> 00:27:57,779
photography creek with on and I think
those were all the points

501
00:27:57,779 --> 00:28:01,200
my only contention with that and the
only reason why I think the job script

502
00:28:01,200 --> 00:28:03,070
photography could be useful

503
00:28:03,070 --> 00:28:07,470
is if you're going to be taking a
javascript entrust interesting that one

504
00:28:07,470 --> 00:28:08,120
server

505
00:28:08,120 --> 00:28:11,189
and then doing photography and a and
send it to another server

506
00:28:11,190 --> 00:28:14,700
so if the the server hosting the data in
this report hosting the code are two

507
00:28:14,700 --> 00:28:15,169
different

508
00:28:15,169 --> 00:28:19,500
servers you need to and you don't trust
the the server hosting the data

509
00:28:19,500 --> 00:28:23,059
on so

510
00:28:23,059 --> 00:28:26,549
likely we don't need to do all the jobs
for all the

511
00:28:26,549 --> 00:28:30,000
cryptographic primitives and JavaScript
anymore because soon we will have this

512
00:28:30,000 --> 00:28:31,590
when the doctor to API

513
00:28:31,590 --> 00:28:35,110
which is going to provide us with a lot
of the up photography primitives

514
00:28:35,110 --> 00:28:38,570
directly in javascript so we can get
things like good randomness and we can

515
00:28:38,570 --> 00:28:39,789
get a lot of these

516
00:28:39,789 --> 00:28:43,070
other algorithms and from those
implemented in

517
00:28:43,070 --> 00:28:46,770
faster code for us as another problem
with JavaScript are

518
00:28:46,770 --> 00:28:50,500
has been that it's really slow so some
the API

519
00:28:50,500 --> 00:28:54,360
methods that will be getting will not
occur to that in crypt in the crypt

520
00:28:54,360 --> 00:28:58,360
with these you can specify what our
insurers it's a little bit up there in

521
00:28:58,360 --> 00:28:59,000
terms of what

522
00:28:59,000 --> 00:29:02,049
our rooms the the brothers weren't
actually implement

523
00:29:02,049 --> 00:29:05,460
but expects some pretty standard things

524
00:29:05,460 --> 00:29:08,470
on another issue

525
00:29:08,470 --> 00:29:12,630
out that's been talked about a fair
amount recently with this API

526
00:29:12,630 --> 00:29:16,029
is that it's going to spread a lot of
legacy our events and

527
00:29:16,029 --> 00:29:20,039
the concern with that is that people are
going to start doing photography bad

528
00:29:20,039 --> 00:29:23,770
like they always do and using these is
really crappy

529
00:29:23,770 --> 00:29:27,480
photography algorithms because the
browser support him issue that it seems

530
00:29:27,480 --> 00:29:31,029
this trend in JavaScript API so they
think that it's safe to use

531
00:29:31,029 --> 00:29:35,029
but definitely do your research before
you decide on older than it really does

532
00:29:35,029 --> 00:29:35,860
need JavaScript

533
00:29:35,860 --> 00:29:39,889
crypto using the new API other methods
are you get

534
00:29:39,890 --> 00:29:43,730
sign in verify computer its merits

535
00:29:43,730 --> 00:29:47,399
your have a little bit ability to do
public few photography

536
00:29:47,399 --> 00:29:50,860
so you can generate his robe is
important his expertise

537
00:29:50,860 --> 00:29:54,490
are importing and exporting it's a
little bit

538
00:29:54,490 --> 00:29:58,000
I'll I think there's still some work to
be done here are

539
00:29:58,000 --> 00:30:01,360
right now something from tuitions i've
seen

540
00:30:01,360 --> 00:30:04,860
people are restoring the stuff in the
local store but I was just talking with

541
00:30:04,860 --> 00:30:09,120
some folks are there would be pretty
cool if this was stored out of bed and

542
00:30:09,120 --> 00:30:13,489
out of scope so that the JavaScript and
actually access the key material

543
00:30:13,490 --> 00:30:16,590
I'll just something to think about

544
00:30:16,590 --> 00:30:20,439
some love the algorithms that are you
supported so the sign in verifying

545
00:30:20,440 --> 00:30:23,880
the recommended one that the
specification record

546
00:30:23,880 --> 00:30:27,659
recommends that all browsers implement
try to 56

547
00:30:27,659 --> 00:30:31,309
arm yes you read this I don't feel like
reading a bunch of

548
00:30:31,309 --> 00:30:34,620
letters and numbers on

549
00:30:34,620 --> 00:30:39,100
Sierra worker trophy more security on

550
00:30:39,100 --> 00:30:43,129
as I said before there's a really good
paper the grocery from Asano about why

551
00:30:43,130 --> 00:30:44,470
you shouldn't do drugs Krypton

552
00:30:44,470 --> 00:30:47,770
or art photography and rub strip in the
first place a lot of those points are

553
00:30:47,770 --> 00:30:51,279
still valid just because we're the strip
that doesn't mean that it's a good idea

554
00:30:51,279 --> 00:30:54,470
if you don't trust the server you
probably shouldn't trust the jobs report

555
00:30:54,470 --> 00:30:56,000
sent to you

556
00:30:56,000 --> 00:30:59,169
on for Cummins

557
00:30:59,169 --> 00:31:02,380
like I mentioned before support for all
the algorithms

558
00:31:02,380 --> 00:31:05,820
that shouldn't be used in the first
place it could be heard

559
00:31:05,820 --> 00:31:10,059
developers to to use and secure opens
another issue that I notice was reading

560
00:31:10,059 --> 00:31:11,570
through the spec

561
00:31:11,570 --> 00:31:14,908
the suspicion is not go into great
detail about how

562
00:31:14,909 --> 00:31:18,370
entropy should be collected the if he is
going to provide you with some

563
00:31:18,370 --> 00:31:22,110
shoulda reminisce but there's not a
whole lot of details on how

564
00:31:22,110 --> 00:31:25,350
should gather that RIM randomness so it
will be interesting to see as the

565
00:31:25,350 --> 00:31:26,709
brothers are confirming this

566
00:31:26,710 --> 00:31:29,409
where they're going to the entropy and
the quality of the HP that getting this

567
00:31:29,409 --> 00:31:31,799
from Scripture

568
00:31:31,799 --> 00:31:35,320
for people to start playing with us now
for the browser start supporting it

569
00:31:35,320 --> 00:31:38,740
polka dot net its jobs for polyfill that
does

570
00:31:38,740 --> 00:31:42,350
all up the art photography from Daves
directly in javascript

571
00:31:42,350 --> 00:31:45,610
and it mimics the XI directly so if you

572
00:31:45,610 --> 00:31:48,639
go ahead and build your javascript
crypto application

573
00:31:48,640 --> 00:31:52,779
using the pope reply brief then when the
browser structures for

574
00:31:52,779 --> 00:31:56,830
for Tiger though Qatar the trip to Ikea
excuse me then you can switch over

575
00:31:56,830 --> 00:32:02,480
without having to change her
fermentation because API is identical

576
00:32:02,480 --> 00:32:06,350
just a couple comments on something
keepin' in the back your mind for like

577
00:32:06,350 --> 00:32:08,230
the next year so

578
00:32:08,230 --> 00:32:11,390
just can elicit some things that I think
will be interesting

579
00:32:11,390 --> 00:32:14,470
knapsack perspective things like
universal across a script thanks for the

580
00:32:14,470 --> 00:32:14,909
idea

581
00:32:14,909 --> 00:32:18,730
finding a cross-site scripting
vulnerability browser incentive

582
00:32:18,730 --> 00:32:22,690
in a web application which is kinda
interesting see be able to trigger

583
00:32:22,690 --> 00:32:26,309
prostate scripting with the browser
vulnerability I

584
00:32:26,309 --> 00:32:29,899
know it any radical chrome team recently
found a universal process scripting

585
00:32:29,899 --> 00:32:31,889
vulnerability in their brother was able
to

586
00:32:31,890 --> 00:32:35,820
used to bypass and security policy we're
talking about

587
00:32:35,820 --> 00:32:40,340
on third-party plug-ins API's mobile
applications I

588
00:32:40,340 --> 00:32:43,850
they're still definitely some
misconceptions how easy it is proxy

589
00:32:43,850 --> 00:32:46,899
work with mobile applications back and
services

590
00:32:46,899 --> 00:32:50,760
the same goes with API's just because
you don't have it was dole

591
00:32:50,760 --> 00:32:54,908
or or welcome at a doc doesn't mean
versus an attacker

592
00:32:54,909 --> 00:32:57,950
eventually request for the services

593
00:32:57,950 --> 00:33:01,970
on many things like framework bones I
mean there's quite a bit rails issues

594
00:33:01,970 --> 00:33:02,480
lately

595
00:33:02,480 --> 00:33:05,779
so you know keep an eye on popular web
frameworks

596
00:33:05,779 --> 00:33:09,659
abilities associated with them potential
potentially allow you to perform some

597
00:33:09,659 --> 00:33:12,950
attacks bypasses protections we're
talking about

598
00:33:12,950 --> 00:33:17,480
I'm once again bands up application that
you can play with the browser's

599
00:33:17,480 --> 00:33:21,230
mistakes is up on his personal the rain
here so definitely copy

600
00:33:21,230 --> 00:33:24,940
address take a look at that those graphs
and then

601
00:33:24,940 --> 00:33:29,159
with a whole bunch references at pretty
much with their top

602
00:33:29,159 --> 00:33:35,640
thank you guys you have any questions

603
00:33:35,640 --> 00:33:37,000
group core thank you

