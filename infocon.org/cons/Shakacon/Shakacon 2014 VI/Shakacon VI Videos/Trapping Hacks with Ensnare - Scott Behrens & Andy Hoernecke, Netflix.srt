1
00:00:04,360 --> 00:00:10,930
will go ahead and get you guys started
I'm so I think we had a lot of kinda

2
00:00:10,930 --> 00:00:12,099
offense

3
00:00:12,099 --> 00:00:16,259
or into talks today he is enjoying the
talks today

4
00:00:16,260 --> 00:00:21,320
alright will like their so last

5
00:00:21,320 --> 00:00:26,090
but not least for today we have a I
think I might be our first defense talk

6
00:00:26,090 --> 00:00:29,948
today possibly which is something you
always have to think about

7
00:00:29,949 --> 00:00:33,170
I trapping hacks within snare by Scott

8
00:00:33,170 --> 00:00:36,409
turn burns skip great and Andy

9
00:00:36,409 --> 00:00:39,470
karnicki hi me right

10
00:00:39,470 --> 00:00:42,559
I am so ya so this is a Scots a two-fer

11
00:00:42,559 --> 00:00:47,390
so he's going after deviance a record
only need like for 45 min ago so

12
00:00:47,390 --> 00:00:54,390
anyway big round of applause everybody
thank you

13
00:00:56,820 --> 00:00:57,449
alright is

14
00:00:57,449 --> 00:01:02,519
we we good cool call so I wouldn't be
talking about a snare and we'll discuss

15
00:01:02,519 --> 00:01:03,969
their up the quick bio I'm

16
00:01:03,969 --> 00:01:07,350
claims ask our parents I work as a
senior Application Security Engineer

17
00:01:07,350 --> 00:01:08,280
Netflix

18
00:01:08,280 --> 00:01:12,330
on the cloud security team and
accommodation breaking making

19
00:01:12,330 --> 00:01:16,619
I'm actually while I'm automatic just a
quick poll the audience here

20
00:01:16,619 --> 00:01:20,409
how many people here do ap sector apk a
security South either making

21
00:01:20,409 --> 00:01:24,070
knapsack that breaking things her hands

22
00:01:24,070 --> 00:01:27,729
K handful on their developers are coding
some sorta language

23
00:01:27,729 --> 00:01:32,640
any rails Ruby folks out there crap

24
00:01:32,640 --> 00:01:35,929
I'm cool Brent I'm also dues

25
00:01:35,929 --> 00:01:39,470
times he research spoke at on Hampel
conferences on

26
00:01:39,470 --> 00:01:42,880
like drumming cooking all that sort of
stuff my Twitter handle is a

27
00:01:42,880 --> 00:01:46,440
how r bit so you know not we'd all out
but

28
00:01:46,440 --> 00:01:50,390
feel pretty say I and I'm

29
00:01:50,390 --> 00:01:54,140
any or Nikkei I'm also i've seen your
application security engineer at Netflix

30
00:01:54,140 --> 00:01:55,409
on the cloud security team

31
00:01:55,409 --> 00:01:59,560
also do research and a the visualization
and security

32
00:01:59,560 --> 00:02:02,800
I want to travel so I'm really have to
be up here this week

33
00:02:02,800 --> 00:02:06,369
that's why we're here

34
00:02:06,369 --> 00:02:09,610
we're here to talk about us there which
is an open-source rail jam

35
00:02:09,610 --> 00:02:14,349
that I and II have a recently released
that the provides web application intact

36
00:02:14,349 --> 00:02:16,030
the texan response capabilities

37
00:02:16,030 --> 00:02:20,250
requires minimal configuration it's also
super customizable

38
00:02:20,250 --> 00:02:23,810
even read the baby here's where the link
their I'm BBS second

39
00:02:23,810 --> 00:02:27,830
can jot that down there make sure to the
guys and get after the conference

40
00:02:27,830 --> 00:02:30,970
so

41
00:02:30,970 --> 00:02:34,830
you really here to kind of talk about
how things are in the security industry

42
00:02:34,830 --> 00:02:38,129
and as as we can see here things are
really so get these are the company's

43
00:02:38,129 --> 00:02:42,000
I think since the beginning in 2014 that
have had some sort of a preacher some

44
00:02:42,000 --> 00:02:42,610
sort of

45
00:02:42,610 --> 00:02:46,450
information exposure and this is just a
small subset of some the companies that

46
00:02:46,450 --> 00:02:47,579
have recently been

47
00:02:47,580 --> 00:02:54,510
discussed and major media outlets right
and so I guess the question you can ask

48
00:02:54,510 --> 00:02:56,790
ourselves is are we really winning the
race here

49
00:02:56,790 --> 00:03:00,019
it seems that data breaches are just
happening like every single day

50
00:03:00,019 --> 00:03:04,100
and as we see that attackers are getting
quicker compromising systems over the

51
00:03:04,100 --> 00:03:05,109
past ten years

52
00:03:05,110 --> 00:03:08,370
and this is a quote from way maker
basically says that the bad guys are

53
00:03:08,370 --> 00:03:10,500
winning at a faster rate than the good
guys are winning

54
00:03:10,500 --> 00:03:13,760
I think that we can all cab agree that
that does seem to be the case

55
00:03:13,760 --> 00:03:20,760
so why is this a case I think it's
because

56
00:03:21,620 --> 00:03:25,800
the complexity of attacks it seems that
responding to attacks is pretty hard

57
00:03:25,800 --> 00:03:28,800
so we have traditional tax things like
sequel injection and cross-site

58
00:03:28,800 --> 00:03:29,780
scripting

59
00:03:29,780 --> 00:03:34,560
tax at a kinda been in the you know a
lot of top 10 for forever

60
00:03:34,560 --> 00:03:38,660
we also have business logic attacks with
her super hard sometimes attack to

61
00:03:38,660 --> 00:03:39,530
respond to

62
00:03:39,530 --> 00:03:42,630
we have direct object reference right
that's pretty easy

63
00:03:42,630 --> 00:03:46,209
to find and discover also kinda hard to
detect though potentially

64
00:03:46,209 --> 00:03:50,830
authorization authentication tax
distributed denial-of-service right

65
00:03:50,830 --> 00:03:56,870
so i'm having a look difficulty with
remote here

66
00:03:56,870 --> 00:04:03,440
I know I shouldn't be there and
everywhere ways here

67
00:04:03,440 --> 00:04:07,740
on so I think one of the reasons that
this is the case is that application

68
00:04:07,740 --> 00:04:08,880
complexity has

69
00:04:08,880 --> 00:04:13,530
really kind at application become quite
complex these days

70
00:04:13,530 --> 00:04:16,789
and their environments have gotten
extraordinarily complex so like

71
00:04:16,789 --> 00:04:19,829
for dad Netflix for example where any
and I both work

72
00:04:19,829 --> 00:04:22,979
we know we have an agile development
shops were doing caused the plane with

73
00:04:22,979 --> 00:04:23,758
every day

74
00:04:23,759 --> 00:04:27,470
we have certain applications in certain
regions that might be running different

75
00:04:27,470 --> 00:04:30,860
versions code we're running a beat ass
so some users may be experiencing a

76
00:04:30,860 --> 00:04:31,509
different

77
00:04:31,509 --> 00:04:34,680
cite code other users so we have a lot
of

78
00:04:34,680 --> 00:04:38,090
things going on and give us a lot less
time actually catching remediate

79
00:04:38,090 --> 00:04:39,008
vulnerabilities

80
00:04:39,009 --> 00:04:42,169
and

81
00:04:42,169 --> 00:04:46,180
I think that the solution to this
problem is you know as an industry week

82
00:04:46,180 --> 00:04:48,639
we tend to think that we can solve
everything with the new clients like

83
00:04:48,639 --> 00:04:51,250
let's throw some technology up at

84
00:04:51,250 --> 00:04:55,550
this is a quote that says the industry
is long needed about walls and we note

85
00:04:55,550 --> 00:04:56,479
about Wallace

86
00:04:56,479 --> 00:04:59,690
know that is we needed

87
00:04:59,690 --> 00:05:04,410
so I think they were coming this place
where

88
00:05:04,410 --> 00:05:07,440
you know here's a kind of a comic that
represents I can I think we're at

89
00:05:07,440 --> 00:05:10,830
in the scariest re so you still coming
and why we need your scary finds

90
00:05:10,830 --> 00:05:14,030
we already have a laugh load balancer
firewall we have about wall and behavior

91
00:05:14,030 --> 00:05:14,888
Alex engine

92
00:05:14,889 --> 00:05:17,889
given ours a lighter blue take all my
money rain

93
00:05:17,889 --> 00:05:21,480
so I think we're just kinda had a place
we try throw stuff at it and

94
00:05:21,480 --> 00:05:24,970
our philosophy least my contacts
application security is at

95
00:05:24,970 --> 00:05:28,889
applications can be really start in the
application right so

96
00:05:28,889 --> 00:05:32,260
you know we try to cook encourage people
to do secure coding

97
00:05:32,260 --> 00:05:36,460
security awareness you know performed
some pentasa country code all that sort

98
00:05:36,460 --> 00:05:37,099
of stuff

99
00:05:37,100 --> 00:05:40,740
and I feel like new tears about
appliances they can be useful but they

100
00:05:40,740 --> 00:05:43,169
often increase complexity in the
environment

101
00:05:43,169 --> 00:05:47,010
and a mask the underlying problems aside
assaulting them Frank so we also feel

102
00:05:47,010 --> 00:05:50,940
we often feel that the best approach is
really just a start

103
00:05:50,940 --> 00:05:53,940
with the inside the application that's
probably the best place to identify and

104
00:05:53,940 --> 00:05:57,880
actually handle the attacks I might be
going on

105
00:05:57,880 --> 00:06:01,760
and 22 tax actually look like all really
depends on a techniques that are used

106
00:06:01,760 --> 00:06:05,389
so with the manual pac-10's be a lil bit
slow maybe a lil bit more targeted

107
00:06:05,389 --> 00:06:10,060
if it's an automated attack at times be
fastened all over the map

108
00:06:10,060 --> 00:06:13,020
and how are most welcome vulnerabilities
exploited while through manipulation

109
00:06:13,020 --> 00:06:14,359
things like headers

110
00:06:14,360 --> 00:06:18,070
cookies parameters path me that were
operations

111
00:06:18,070 --> 00:06:22,050
with a flow the that you identify a web
application

112
00:06:22,050 --> 00:06:24,699
now in general you have to actually
identify the water bill in order to

113
00:06:24,699 --> 00:06:25,660
exploit it

114
00:06:25,660 --> 00:06:29,900
and so what kinda just steps you would
not meet its can might look like

115
00:06:29,900 --> 00:06:33,250
these tend to be a little bit easier to
tact I think on they're likely to

116
00:06:33,250 --> 00:06:34,160
include a lot

117
00:06:34,160 --> 00:06:37,740
a much higher velocity you gonna see
lots when usual were invalid request

118
00:06:37,740 --> 00:06:39,199
potentially

119
00:06:39,199 --> 00:06:41,940
many the requests are gonna be for pages
are functionally doesn't even exist

120
00:06:41,940 --> 00:06:45,870
within your application

121
00:06:45,870 --> 00:06:50,000
so automated scanning logic is you know
typically maybe I'm the user setting up

122
00:06:50,000 --> 00:06:53,070
the automated scanning are manually
browser spire the site for some other

123
00:06:53,070 --> 00:06:53,599
time

124
00:06:53,600 --> 00:06:56,690
I'm to create some exclusions you know I
wanna lock my

125
00:06:56,690 --> 00:06:59,790
Apple my automated scanner out one
running automates can

126
00:06:59,790 --> 00:07:02,690
and then check some fault an exam in
response the for signs up on abilities

127
00:07:02,690 --> 00:07:04,469
Rep

128
00:07:04,470 --> 00:07:07,479
so here I just picked some page on

129
00:07:07,479 --> 00:07:10,590
that looks like on time and run a scan
and hear some behavior that the

130
00:07:10,590 --> 00:07:12,830
automated scanner did this is for bird

131
00:07:12,830 --> 00:07:16,060
the sanity check basically make sure the
site up

132
00:07:16,060 --> 00:07:20,400
that some policy actions tax sir doing
scrambler checks after doing some cookie

133
00:07:20,400 --> 00:07:23,000
tracks and so forth so on so forth

134
00:07:23,000 --> 00:07:27,100
so what we actually hang can
observations we make about thats Kanwal

135
00:07:27,100 --> 00:07:30,120
the thing is kinda predictable right
it's kinda doing stuff and specific

136
00:07:30,120 --> 00:07:32,440
order every time I visit a page it's
going to run those checks in that

137
00:07:32,440 --> 00:07:34,270
specific orderlies Cooper

138
00:07:34,270 --> 00:07:37,669
one of the more on Essex a basic
scanners

139
00:07:37,669 --> 00:07:41,180
and one so we often see running out our
site for example I'm to check some

140
00:07:41,180 --> 00:07:42,960
policy files check grammer's cookies

141
00:07:42,960 --> 00:07:46,180
headers refer in a progressive kinda
linearly

142
00:07:46,180 --> 00:07:49,669
manual testers 10 the kinda this a
little bit differently day

143
00:07:49,669 --> 00:07:53,609
use a combination of the browser proxy
scripts some command line tools

144
00:07:53,610 --> 00:07:54,830
potentially

145
00:07:54,830 --> 00:07:58,130
to include some targeted scans I would
imagine

146
00:07:58,130 --> 00:08:01,150
pressures probably looking for things
like user input that's been handled

147
00:08:01,150 --> 00:08:02,590
unsafely

148
00:08:02,590 --> 00:08:05,719
what kinda edge cases might we identify
any application

149
00:08:05,720 --> 00:08:10,560
where some hidden their last visited
areas on the site

150
00:08:10,560 --> 00:08:14,620
will come after day since we make about
the manual a the manual Thacker

151
00:08:14,620 --> 00:08:18,789
wall exploited times are likely to be
seen randomly throughout the attacked

152
00:08:18,789 --> 00:08:21,710
recession right so you kinda browsing
the site for some amount of time you

153
00:08:21,710 --> 00:08:23,080
clicking around

154
00:08:23,080 --> 00:08:26,930
and your may be facing a couple fields
here and there to be fewer overall

155
00:08:26,930 --> 00:08:28,449
request potentially

156
00:08:28,449 --> 00:08:31,620
lower velocity but at the end of the day
it's basically the same techniques and

157
00:08:31,620 --> 00:08:35,110
detection strategies

158
00:08:35,110 --> 00:08:38,800
so how do we know catch these attacks
right only great signatures we all know

159
00:08:38,799 --> 00:08:39,899
how all those work

160
00:08:39,899 --> 00:08:42,919
um week in new exception handling at
times be

161
00:08:42,919 --> 00:08:46,540
pretty decent right things like checking
for invalid pass may be incorrect data

162
00:08:46,540 --> 00:08:47,040
types

163
00:08:47,040 --> 00:08:50,680
hey why are you putting managers in the
data type that it should be a string

164
00:08:50,680 --> 00:08:53,920
or we could do testing security
functionality check some things like

165
00:08:53,920 --> 00:08:57,139
week 10 the right authorization checks
are code you know I should not be able

166
00:08:57,139 --> 00:09:02,310
to access your profile you should be
able access mine potentially

167
00:09:02,310 --> 00:09:05,939
and what else I'm another kid mechanism
we could potentially use are things like

168
00:09:05,940 --> 00:09:06,850
honey traps

169
00:09:06,850 --> 00:09:10,300
I'm and these are basically trip wires
that dynamically changing and Tyson

170
00:09:10,300 --> 00:09:11,439
attacker

171
00:09:11,440 --> 00:09:14,690
and we think that these will work pretty
well for manual attackers

172
00:09:14,690 --> 00:09:18,680
and they don't really have any impact
our underlying application functionality

173
00:09:18,680 --> 00:09:22,359
and allowed to take notice a bad
behavior within the application

174
00:09:22,360 --> 00:09:26,120
we'll take a look at what honey trap
might look like so here we have fun

175
00:09:26,120 --> 00:09:29,570
a few guys read this in the back but I
basically took on

176
00:09:29,570 --> 00:09:33,339
prison for proxy web application and i'm
taking a look at a cookie here that

177
00:09:33,339 --> 00:09:34,730
might be interesting sad

178
00:09:34,730 --> 00:09:38,339
right now if you guys are doing a
application assessment for

179
00:09:38,339 --> 00:09:41,690
for somebody with and use on a cookie
get so it's a tad nichols' false

180
00:09:41,690 --> 00:09:45,680
how many used for the true also be
honest here yet I mean I know looks a

181
00:09:45,680 --> 00:09:47,219
little obvious but like a lot

182
00:09:47,220 --> 00:09:50,670
right you gonna flip in the true you're
gonna see what happens and we can take

183
00:09:50,670 --> 00:09:52,260
advantage of the fact that

184
00:09:52,260 --> 00:09:56,380
as you know what's goodie sasser even
black hat hackers will work areas right

185
00:09:56,380 --> 00:09:57,980
now wanna see what happens

186
00:09:57,980 --> 00:10:01,690
I'm here's another I'm cramming her this
one has a USB printer

187
00:10:01,690 --> 00:10:07,220
ominous for a POST request the you know
to perform some action against the site

188
00:10:07,220 --> 00:10:10,649
if you guys saw this you 8026 106 how
many would

189
00:10:10,649 --> 00:10:13,830
maybe incremented Ackerman at during an
assessment right

190
00:10:13,830 --> 00:10:18,100
like pretty much everybody great so once
again we're kinda taking a manager that

191
00:10:18,100 --> 00:10:23,080
on will be honest with with here these
are the what we're actually doing honey

192
00:10:23,080 --> 00:10:25,830
traps a suspect that has an effect the
application

193
00:10:25,830 --> 00:10:29,140
and so does actually been a little bit
prior work in the honey trap

194
00:10:29,140 --> 00:10:32,240
area I'm not security actually has
support for this

195
00:10:32,240 --> 00:10:35,940
on its just a lil bit complicated to set
up and you have to support not security

196
00:10:35,940 --> 00:10:37,820
in your application environment

197
00:10:37,820 --> 00:10:41,380
absence there was no loss project that a
Java project that

198
00:10:41,380 --> 00:10:45,279
tried to tackle this problem protocol
features and stuff but requires either

199
00:10:45,279 --> 00:10:49,520
I'm me conoces a commercial product
there we've really seen any action from

200
00:10:49,520 --> 00:10:51,140
these guys it's okay things have

201
00:10:51,140 --> 00:10:56,370
really been updated since 2011 or so to
smother Wasson IDS as I have some

202
00:10:56,370 --> 00:11:00,290
on some functionality in the space we
really wanted something that was

203
00:11:00,290 --> 00:11:04,230
really easy to use that we could use
this honey trap kinda technology with

204
00:11:04,230 --> 00:11:07,690
we want to have really advanced response
handling and what we can talk in what we

205
00:11:07,690 --> 00:11:08,120
mean

206
00:11:08,120 --> 00:11:11,680
with that but basically kinda
technologies and techniques we use to

207
00:11:11,680 --> 00:11:15,040
confuse the attacker while they're
potentially performing attack

208
00:11:15,040 --> 00:11:19,180
wanna some those extensible we want to
tweak a track metrics and

209
00:11:19,180 --> 00:11:23,079
and something that also worked with in
the App Player we really wanted to be

210
00:11:23,080 --> 00:11:25,709
effective at fourteen both automated
scanners and manual

211
00:11:25,709 --> 00:11:30,660
testers answer and snare

212
00:11:30,660 --> 00:11:33,779
and so the way the internet works as a
sits alongside the application

213
00:11:33,779 --> 00:11:37,939
and examines requests a common that logs
bad behavior and we define that as

214
00:11:37,940 --> 00:11:39,279
violations

215
00:11:39,279 --> 00:11:42,399
the response to the bad behavior
optionally you can kinda just use it as

216
00:11:42,399 --> 00:11:44,250
a mattress collection tool you can

217
00:11:44,250 --> 00:11:47,350
use it to you really screw with the
attacker

218
00:11:47,350 --> 00:11:51,230
and it's also said and then at the end
of it actually sets these traps to catch

219
00:11:51,230 --> 00:11:57,100
catch hackers on new responses from the
server

220
00:11:57,100 --> 00:12:00,529
so so I'm gonna walk you through a
little bit of balancing are actually

221
00:12:00,529 --> 00:12:03,100
works and what we've actually
implemented in this

222
00:12:03,100 --> 00:12:07,420
in this remark I so what will start out
with a little background a standard web

223
00:12:07,420 --> 00:12:09,920
application when someone makes a request

224
00:12:09,920 --> 00:12:13,599
up the browser will sign that request to
the server and the server is going to

225
00:12:13,600 --> 00:12:15,120
take that information

226
00:12:15,120 --> 00:12:19,180
determine what I'll put it needs to sign
back and render back a response

227
00:12:19,180 --> 00:12:23,140
and within snare what we've done is
we've added a couple more stops

228
00:12:23,140 --> 00:12:27,110
and so I walked through each one of
these I think I know

229
00:12:27,110 --> 00:12:31,640
feature the different stops that and
stairs going to perform

230
00:12:31,640 --> 00:12:35,480
so can we start with a request and then
I as soon as the server receives a

231
00:12:35,480 --> 00:12:36,120
request

232
00:12:36,120 --> 00:12:39,570
we're going to start by checking for
violations and

233
00:12:39,570 --> 00:12:42,720
has got mentioned a violation is
basically anything and the request that

234
00:12:42,720 --> 00:12:44,180
might be a bullish its

235
00:12:44,180 --> 00:12:47,819
so we could be matching out a signature
we could be noticing that the user has

236
00:12:47,820 --> 00:12:50,440
gone to a bad path that doesn't exist

237
00:12:50,440 --> 00:12:54,850
%uh so maybe there running something I
like I directly busting to all and

238
00:12:54,850 --> 00:12:55,860
they're trying to fight

239
00:12:55,860 --> 00:13:00,410
admin have this or of just you know
files that don't actually exist

240
00:13:00,410 --> 00:13:04,140
orkut exist on your website but they
shouldn't have access to

241
00:13:04,140 --> 00:13:07,399
I or they could have trip something like
a trap which will talk about a little

242
00:13:07,399 --> 00:13:08,560
later

243
00:13:08,560 --> 00:13:12,439
or really are we've made and stare so
it's very flexible and you could

244
00:13:12,440 --> 00:13:17,170
input any custom logic you wanted here
out but anyways any violations are found

245
00:13:17,170 --> 00:13:20,779
we're going to start here and we're
going to loggers violations are to carry

246
00:13:20,779 --> 00:13:23,339
out attacks tops

247
00:13:23,339 --> 00:13:27,110
so the second step is we are going to
determine the threshold that the

248
00:13:27,110 --> 00:13:31,760
that user that the requester falls and
and basically what this means is we're

249
00:13:31,760 --> 00:13:34,930
where grouping different people that are
making a request for a website

250
00:13:34,930 --> 00:13:39,279
into groups are they a good users are
they legitimate users just using the

251
00:13:39,279 --> 00:13:40,290
site normally

252
00:13:40,290 --> 00:13:43,930
are their users that have done a couple
bad things like maybe flip that had been

253
00:13:43,930 --> 00:13:45,279
flagged a true

254
00:13:45,279 --> 00:13:48,839
and change the parameter to that maybe
they shouldn't have

255
00:13:48,839 --> 00:13:52,339
or can we tell that they're actually
really bad because they're their release

256
00:13:52,339 --> 00:13:55,420
scanning our website hard with something
like ap scanner per

257
00:13:55,420 --> 00:13:58,870
that met made it on the bed requests and
we know that they're just a century

258
00:13:58,870 --> 00:14:00,310
trying to exploit

259
00:14:00,310 --> 00:14:04,589
%uh the site or find our abilities so in
the stuff we determined

260
00:14:04,589 --> 00:14:09,519
how bad they are and how we're going to
respond to them based on that

261
00:14:09,519 --> 00:14:12,740
to step three is actually to run
whatever response we need to send back

262
00:14:12,740 --> 00:14:13,279
to them

263
00:14:13,279 --> 00:14:17,910
and basically this means up if we have
identify that this user is an attacker

264
00:14:17,910 --> 00:14:20,110
and that there at least a little bit bad

265
00:14:20,110 --> 00:14:23,399
I we might want to do something
different than that just render backed

266
00:14:23,399 --> 00:14:24,060
the

267
00:14:24,060 --> 00:14:27,359
native response that the application
would usually side

268
00:14:27,360 --> 00:14:30,950
so this could be something like
modifying the response to changing the

269
00:14:30,950 --> 00:14:33,480
content of the response that goes back
to the user

270
00:14:33,480 --> 00:14:36,870
it could replace the response entirely
so maybe instead o

271
00:14:36,870 --> 00:14:40,769
sending back I'll you know the user's
account profile we're going to some

272
00:14:40,769 --> 00:14:42,089
backup for or

273
00:14:42,089 --> 00:14:45,889
to make it look like it doesn't exist
anymore are maybe we're going to do

274
00:14:45,889 --> 00:14:47,620
something completely custom

275
00:14:47,620 --> 00:14:52,510
and will have some are examples to walk
down a little bit up

276
00:14:52,510 --> 00:14:56,720
and so the final stop is to set traps
right so

277
00:14:56,720 --> 00:15:00,019
Scott talk a little bit about this
concept up honey traps

278
00:15:00,019 --> 00:15:03,870
this is where this comes into play I
we've gone through kinda the

279
00:15:03,870 --> 00:15:06,820
this other responses up to this point
and decided what we're going to send

280
00:15:06,820 --> 00:15:07,829
back to the user

281
00:15:07,829 --> 00:15:11,699
so at this point we decide okay are we
going to in inject some type up a trap

282
00:15:11,700 --> 00:15:13,889
into this response is well

283
00:15:13,889 --> 00:15:17,420
that the user my trip so are we going to
add a cookie to the

284
00:15:17,420 --> 00:15:21,410
I the user's session are we going to
insert some typable for parameter and

285
00:15:21,410 --> 00:15:25,620
in any forms that the user is getting
back to see if we can

286
00:15:25,620 --> 00:15:28,700
I identify them as a you know at

287
00:15:28,700 --> 00:15:32,100
attempting to manipulate those one
really they should be invisible to a

288
00:15:32,100 --> 00:15:33,190
normal user

289
00:15:33,190 --> 00:15:36,310
and someone who's just browsing this the
site normally wouldn't even see those

290
00:15:36,310 --> 00:15:36,989
let alone

291
00:15:36,990 --> 00:15:42,560
paper with them so those are kinda the
four stops and now I walk into some

292
00:15:42,560 --> 00:15:44,819
other more granular details about what
these things

293
00:15:44,820 --> 00:15:49,800
are I and how and how they work so first
for back to the violations and and kinda

294
00:15:49,800 --> 00:15:50,589
as I mentioned

295
00:15:50,589 --> 00:15:54,649
violations are just instances that we've
identified a bad behavior

296
00:15:54,649 --> 00:15:59,050
and what we'll do is we'll track those
over time so each time an attacker or

297
00:15:59,050 --> 00:16:02,410
user does something that we identify as
a violation will

298
00:16:02,410 --> 00:16:05,800
what's actually login or database and we
will track that

299
00:16:05,800 --> 00:16:09,000
again these can be triggered by things
like bad path so

300
00:16:09,000 --> 00:16:12,860
slash admin or some type of an exploit
strain cross-site scripting or seek on

301
00:16:12,860 --> 00:16:13,820
jacks &

302
00:16:13,820 --> 00:16:17,589
I and a parameter or tampering with the
trap

303
00:16:17,589 --> 00:16:21,760
and I will talk about configurations by
but each of these can be weighted so

304
00:16:21,760 --> 00:16:23,430
that if it's something like

305
00:16:23,430 --> 00:16:26,519
it's clearly a single injection time to
maybe we'll wait that

306
00:16:26,519 --> 00:16:30,430
a lot higher than someone hitting up 404
page in just reaching a page that's no

307
00:16:30,430 --> 00:16:32,569
longer there or isn't there

308
00:16:32,570 --> 00:16:35,389
up because you know what we really want
to do is make sure that we're not

309
00:16:35,389 --> 00:16:38,089
punishing her are making the site now at
work

310
00:16:38,089 --> 00:16:42,740
for users who are just browsing the site
arm lamp

311
00:16:42,740 --> 00:16:47,089
I and we wanted to kinda inject a note
on violations and authorizations

312
00:16:47,089 --> 00:16:50,410
saw one other the really cool and I
think important things that you can do

313
00:16:50,410 --> 00:16:51,579
with ensnare

314
00:16:51,579 --> 00:16:54,819
as you can hook this into your existing
authorization logic

315
00:16:54,820 --> 00:16:57,980
so you know if you develop your
application in a secure way he should

316
00:16:57,980 --> 00:17:00,410
already have checks in place to say

317
00:17:00,410 --> 00:17:04,668
I is this user trying to access another
user's bank account is this user trying

318
00:17:04,669 --> 00:17:07,789
to access some data that they shouldn't
have access to

319
00:17:07,789 --> 00:17:11,138
so you should already be able to
identify that and respond to that in

320
00:17:11,138 --> 00:17:12,119
some way by

321
00:17:12,119 --> 00:17:16,438
sending back a 500 error 401 or whatever
your application does in those

322
00:17:16,439 --> 00:17:17,939
circumstances

323
00:17:17,939 --> 00:17:21,220
but what in sterilizing to do is
essentially hook into the in stair

324
00:17:21,220 --> 00:17:23,319
framework and say we've identified

325
00:17:23,319 --> 00:17:26,490
I and authorization violation and then
we can handle them

326
00:17:26,490 --> 00:17:30,320
through all the response capabilities
that and spare provides as well

327
00:17:30,320 --> 00:17:33,789
and that's really easy to do you can do
that with one line of code

328
00:17:33,789 --> 00:17:40,039
I and one of your controllers I you know
when you're running back a response

329
00:17:40,039 --> 00:17:43,179
and %ah and just a kinda briefly mention
again

330
00:17:43,179 --> 00:17:46,240
violations are tracked based on a
combination

331
00:17:46,240 --> 00:17:49,669
or any of the IP address session ID and
user ID

332
00:17:49,669 --> 00:17:53,559
so what we've attempted to do is make it
so that we we have some ability to track

333
00:17:53,559 --> 00:17:54,330
users

334
00:17:54,330 --> 00:17:57,418
across their different sessions across
their different

335
00:17:57,419 --> 00:18:00,820
I'll you know movements you know if
they're changing IP addresses are

336
00:18:00,820 --> 00:18:01,830
they're coming through

337
00:18:01,830 --> 00:18:07,019
door for example I and we're trying to
make it as persistent as possible

338
00:18:07,019 --> 00:18:10,119
any violations that are identified are
stored in the database

339
00:18:10,119 --> 00:18:12,978
and that you know we can essentially
Corey those to see how many have

340
00:18:12,979 --> 00:18:15,049
happened over time for each user

341
00:18:15,049 --> 00:18:20,059
upper for each IP address for such a nap

342
00:18:20,059 --> 00:18:24,549
so the next piece to circle back to is
the threshold so this is again trying to

343
00:18:24,549 --> 00:18:25,289
identify

344
00:18:25,289 --> 00:18:29,649
how bad the attacker actually is I is
this someone who's just a normal user or

345
00:18:29,649 --> 00:18:31,908
is this someone who's attacking the site

346
00:18:31,909 --> 00:18:35,190
and the threshold configuration allows

347
00:18:35,190 --> 00:18:39,580
great flexibility in granularity
essentially these can be set up in any

348
00:18:39,580 --> 00:18:43,289
in any combination you want them to be
it allows very

349
00:18:43,289 --> 00:18:46,720
powerful state handling because you can
do things from

350
00:18:46,720 --> 00:18:50,429
here trying to confuse the attacker so
you know maybe they're trying some

351
00:18:50,429 --> 00:18:51,509
sequel injection at

352
00:18:51,509 --> 00:18:54,509
a Thompson there they're getting back
responses indicating they're not working

353
00:18:54,509 --> 00:18:58,100
but then all the sudden they start
getting back 500 error messages

354
00:18:58,100 --> 00:19:01,228
of which would be really confusing
because sometimes that indicates you

355
00:19:01,229 --> 00:19:01,519
have

356
00:19:01,519 --> 00:19:05,450
you've triggered some type of an
exception so they keep testing at nine

357
00:19:05,450 --> 00:19:05,759
all

358
00:19:05,759 --> 00:19:09,039
although some they're going for a
horseback and then it goes back to

359
00:19:09,039 --> 00:19:10,019
acting normal

360
00:19:10,019 --> 00:19:14,119
and I just can't figure out exactly
what's going on up so you can make it so

361
00:19:14,119 --> 00:19:14,549
it's

362
00:19:14,549 --> 00:19:17,529
it somewhat random how you can make it
so they move through different

363
00:19:17,529 --> 00:19:19,509
thresholds in different states

364
00:19:19,509 --> 00:19:23,970
and and the goal here is to create false
negatives are false positives for the

365
00:19:23,970 --> 00:19:25,149
user

366
00:19:25,149 --> 00:19:31,389
up while while having no impact on
actual legitimate users

367
00:19:31,389 --> 00:19:34,949
and thresholds can be configured in a
few different ways so the first one

368
00:19:34,950 --> 00:19:38,389
would be the trap count so this is
essentially how many traps or violations

369
00:19:38,389 --> 00:19:39,049
have a

370
00:19:39,049 --> 00:19:42,668
have they accrued during their time that
we've been monitoring out them on the

371
00:19:42,669 --> 00:19:43,899
Site

372
00:19:43,899 --> 00:19:48,658
how long have they banned and the
structural threshold so how long I'll

373
00:19:48,659 --> 00:19:52,809
has it been since we blasting a
violation from and then the other part

374
00:19:52,809 --> 00:19:55,658
is the response is that we want to send
back

375
00:19:55,659 --> 00:19:58,679
so we have a quick example that we can
walk through

376
00:19:58,679 --> 00:20:02,669
I'll hopefully you guys can read this
diagram up at the top we have a little

377
00:20:02,669 --> 00:20:07,229
attacker who is browsing our website and
he's sending a taxi sending some people

378
00:20:07,229 --> 00:20:07,679
Jack

379
00:20:07,679 --> 00:20:10,869
injection attacks towards our site I'll

380
00:20:10,869 --> 00:20:15,600
and once he reaches 5 violation so his
son five data requests or five

381
00:20:15,600 --> 00:20:19,678
I exploit strings to the site we're
going to move him into trap threshold

382
00:20:19,679 --> 00:20:20,450
what

383
00:20:20,450 --> 00:20:23,929
and we're going to keep in there for six
hundred cycads and

384
00:20:23,929 --> 00:20:26,809
and what this means is we're going to
use the following different response

385
00:20:26,809 --> 00:20:28,049
types

386
00:20:28,049 --> 00:20:32,100
for twenty percent of his response hurt
his requests were going to delay him for

387
00:20:32,100 --> 00:20:32,799
15

388
00:20:32,799 --> 00:20:37,279
10 to 15 seconds so we're going to
inject a random delay in the response

389
00:20:37,279 --> 00:20:40,960
for thirty percent of the responses were
going to redirect them back to the room

390
00:20:40,960 --> 00:20:42,879
right so we're basically going to just

391
00:20:42,879 --> 00:20:46,789
redirect them I regardless of what he's
trying to do is going and back at the

392
00:20:46,789 --> 00:20:48,749
root out the home page

393
00:20:48,749 --> 00:20:52,190
and then for the other 50 percent we're
going to do nothing meaning we're just

394
00:20:52,190 --> 00:20:54,570
going to render the response packets are
all

395
00:20:54,570 --> 00:20:57,908
to cannot kind of imagine that this is
going to get number one frustrating

396
00:20:57,909 --> 00:21:00,029
because you're trying to test is this

397
00:21:00,029 --> 00:21:03,559
exploits during going to work here for
cross-site scripting or is this Privacy

398
00:21:03,559 --> 00:21:04,629
Contact ball

399
00:21:04,629 --> 00:21:07,879
and you can't get a good read on it
because other spots you get back

400
00:21:07,879 --> 00:21:12,820
keeps changing by anyways attackers
persistent he keeps trying

401
00:21:12,820 --> 00:21:16,658
and he gets up to a violation out of 20
and at that point we're going to move

402
00:21:16,659 --> 00:21:19,159
him into trap threshold number two

403
00:21:19,159 --> 00:21:23,119
and we're going to keep in their poor
1600 second side after his last

404
00:21:23,119 --> 00:21:24,049
violation

405
00:21:24,049 --> 00:21:28,330
is locked and so on in this response for
power going to do

406
00:21:28,330 --> 00:21:32,070
is sixty percent of the time we're going
to delay him for 20 seconds

407
00:21:32,070 --> 00:21:35,879
OSA now it's going to take a lot longer
to actually a performing this task

408
00:21:35,879 --> 00:21:38,109
because he's going to be delayed

409
00:21:38,109 --> 00:21:41,889
significantly a lot of the time about 20
percent of the time we're going to give

410
00:21:41,889 --> 00:21:45,449
him 500 error messages back to
regardless of what is requesting it's

411
00:21:45,450 --> 00:21:47,090
just going to get a five hundred air

412
00:21:47,090 --> 00:21:49,908
and then the other 20 percent will do
nothing meaning render the response

413
00:21:49,909 --> 00:21:50,869
again

414
00:21:50,869 --> 00:21:54,470
so this is just kinda sample out how
this could be configured it's really

415
00:21:54,470 --> 00:21:56,849
completely customizable and flexible

416
00:21:56,849 --> 00:22:00,439
are this is kind of an example config
file where we have three different

417
00:22:00,440 --> 00:22:02,249
threshold group set up

418
00:22:02,249 --> 00:22:06,179
and you can kinda see here if you look
at the top one out the timers that the

419
00:22:06,179 --> 00:22:07,419
600 seconds

420
00:22:07,419 --> 00:22:10,679
there's a trap counter five so we'll
start rigor in these responses after

421
00:22:10,679 --> 00:22:13,409
someone reaches 5 Trapster violations

422
00:22:13,409 --> 00:22:17,009
and that the responses Wilson packard
that the redirect fifty percent of the

423
00:22:17,009 --> 00:22:20,090
time the throttling twenty percent of
the time and nothing ten percent of the

424
00:22:20,090 --> 00:22:21,449
time

425
00:22:21,450 --> 00:22:25,409
up so this is just a an example config
file you can have as many or as few of

426
00:22:25,409 --> 00:22:26,460
these as you want

427
00:22:26,460 --> 00:22:33,229
and each one can have as many years I as
few responses as you want

428
00:22:33,229 --> 00:22:36,269
OSA speaking a response is what exactly
are they

429
00:22:36,269 --> 00:22:39,769
up there they're really just the
technique or techniques used to prevent

430
00:22:39,769 --> 00:22:42,789
someone from being successful in
attacking your website

431
00:22:42,789 --> 00:22:46,080
two things we might want to do maybe
what we want to slow the attacker down

432
00:22:46,080 --> 00:22:47,009
by traveling about

433
00:22:47,009 --> 00:22:50,090
so it takes a really long time to get a
response back if they're trying to see

434
00:22:50,090 --> 00:22:50,959
if something is

435
00:22:50,960 --> 00:22:55,139
is cross site scripting tool are maybe
we want to alert on that you've

436
00:22:55,139 --> 00:22:58,478
identified the attack so maybe you would
pop up to a message to them on the

437
00:22:58,479 --> 00:22:58,979
screen

438
00:22:58,979 --> 00:23:02,200
saying hey we know what you're doing
would appreciate if you stop or

439
00:23:02,200 --> 00:23:05,320
wheeler to the security team there where
your behavior

440
00:23:05,320 --> 00:23:08,418
I maybe we want to block the attacker
completely so

441
00:23:08,419 --> 00:23:12,509
we could just stand back 500 messages we
could redirect them to Disney dot com we

442
00:23:12,509 --> 00:23:14,409
could send back for ORS

443
00:23:14,409 --> 00:23:17,960
we could do any of those things just say
you know get of course I we're not

444
00:23:17,960 --> 00:23:19,700
really interested in your traffic and

445
00:23:19,700 --> 00:23:24,619
I maybe we do on alert yesterday himself
will send out an email so that people

446
00:23:24,619 --> 00:23:27,279
know that the sites potentially under
attack

447
00:23:27,279 --> 00:23:30,889
up maybe we want to annoy the attackers
so maybe every other request will

448
00:23:30,889 --> 00:23:33,580
will put up to capture that they have to
solve that they want to continue using

449
00:23:33,580 --> 00:23:34,859
the site

450
00:23:34,859 --> 00:23:39,099
are maybe we want to hack the hackers so
maybe what we want to inject the beef up

451
00:23:39,099 --> 00:23:42,570
and start collecting data back from the
attacker and figure out who they are

452
00:23:42,570 --> 00:23:44,158
where they're coming from

453
00:23:44,159 --> 00:23:49,169
I'll and help take over their system or
something right

454
00:23:49,169 --> 00:23:52,549
we didn't implement that but it's just
an example of something you could do if

455
00:23:52,549 --> 00:23:55,179
you wanted to develop

456
00:23:55,179 --> 00:23:58,389
right I

457
00:23:58,389 --> 00:24:01,399
so all these responses have a

458
00:24:01,399 --> 00:24:04,789
various configuration settings so for
example we talked earlier

459
00:24:04,789 --> 00:24:08,519
out that there's options for things like
the throttle you can give them arrange a

460
00:24:08,519 --> 00:24:12,099
time period you want to throttle the
user between two and ten seconds for

461
00:24:12,099 --> 00:24:13,220
example

462
00:24:13,220 --> 00:24:17,200
com every response can be with waited so
it happens a a random

463
00:24:17,200 --> 00:24:21,099
percentage at the time %uh so that it
looks funny or you could make it happen

464
00:24:21,099 --> 00:24:24,099
every time if you wanted so like I said
if you wanted to just come back

465
00:24:24,099 --> 00:24:28,210
500 error messages once an attacker
reaches a certain threshold

466
00:24:28,210 --> 00:24:31,769
a bad miss you can do that as well and
then also each

467
00:24:31,769 --> 00:24:35,009
request contribute trigger multiple
responses

468
00:24:35,009 --> 00:24:38,629
so you can imagine something where you
you try to these are tense I can see

469
00:24:38,629 --> 00:24:40,779
make them solve the cash on that you
give them a 40

470
00:24:40,779 --> 00:24:44,139
market right so you could be really
obnoxious what this if you wanted to

471
00:24:44,139 --> 00:24:45,998
help

472
00:24:45,999 --> 00:24:49,559
all and the last part up the last of the
stuff that that

473
00:24:49,559 --> 00:24:52,599
and scared us before entering the
response back is setting up the traps

474
00:24:52,599 --> 00:24:55,489
and just to go into a little more detail
about what the traps are

475
00:24:55,489 --> 00:25:00,749
they're basically injected tests that we
can use to check for violations

476
00:25:00,749 --> 00:25:05,499
and we talked about a couple other types
of violations before things like six

477
00:25:05,499 --> 00:25:08,929
signature-based or you know bad pads and
things like that

478
00:25:08,929 --> 00:25:13,090
so not all violations require traps but
this is just an optional extra part that

479
00:25:13,090 --> 00:25:14,570
you can go a little farther

480
00:25:14,570 --> 00:25:18,168
and try to entice people to actually
attack your site so that you can

481
00:25:18,169 --> 00:25:23,029
identify somewhat early on that these
are potentially not malicious people

482
00:25:23,029 --> 00:25:26,309
and we thought a little bit about kind
of the intelligent so how you want to

483
00:25:26,309 --> 00:25:27,369
design is

484
00:25:27,369 --> 00:25:31,119
I you know I I think the obvious thing
to do is to do

485
00:25:31,119 --> 00:25:34,259
out very lucrative names like the bar
norad and

486
00:25:34,259 --> 00:25:38,210
are you I D and have those is cookie
values are

487
00:25:38,210 --> 00:25:41,950
parameter values and try to trick people
into changing those see that you can

488
00:25:41,950 --> 00:25:43,359
identify them trying to

489
00:25:43,359 --> 00:25:48,369
by Pastor authorization controls hot you
can also do things like put benign a

490
00:25:48,369 --> 00:25:49,330
random type

491
00:25:49,330 --> 00:25:53,408
out names for these things in there
because again if they they look out of

492
00:25:53,409 --> 00:25:53,929
place

493
00:25:53,929 --> 00:25:57,239
if there's a good chance that an
attacker special Emanuel Thacker all

494
00:25:57,239 --> 00:25:58,320
start playing with these

495
00:25:58,320 --> 00:26:01,428
and if it's not a made its can it's
probably going to essentially perforce

496
00:26:01,429 --> 00:26:01,789
any

497
00:26:01,789 --> 00:26:04,989
everything anyway so it will definitely
pick up on top I

498
00:26:04,989 --> 00:26:08,090
but the point is really to to draw the
attention I love

499
00:26:08,090 --> 00:26:11,109
hot someone malicious while

500
00:26:11,109 --> 00:26:14,478
not drawing the attention of someone
who's just legitimately using your

501
00:26:14,479 --> 00:26:17,999
using the site and out we we built in
some

502
00:26:17,999 --> 00:26:21,840
different cookies and primers that you
can enable with essentially just one

503
00:26:21,840 --> 00:26:22,609
line

504
00:26:22,609 --> 00:26:26,239
you can also do totally custom ones and
you can set them up to

505
00:26:26,239 --> 00:26:29,719
custom random values are you can specify
custom

506
00:26:29,719 --> 00:26:32,840
algorithms to generate those values art

507
00:26:32,840 --> 00:26:37,059
so that looks totally unique your site

508
00:26:37,059 --> 00:26:44,059
and now we have a quick demo that
Scott's gonna lock her up

509
00:26:48,690 --> 00:26:51,809
call alright so for demo here

510
00:26:51,809 --> 00:26:55,000
spit

511
00:26:55,000 --> 00:27:02,000
second

512
00:27:03,070 --> 00:27:07,580
tire for a demo here on you can see I'm
just log on this site with the site

513
00:27:07,580 --> 00:27:11,449
like a recipe book so I logged in to
create an account

514
00:27:11,450 --> 00:27:14,770
awesome name right there or one equals
one right

515
00:27:14,770 --> 00:27:18,740
up soho so I'm adding some comments just
kinda showing its

516
00:27:18,740 --> 00:27:22,200
really basic site do you use the Site
not very security-conscious

517
00:27:22,200 --> 00:27:25,630
decided to go ahead and add inspired to
their site miss kinda browsing around

518
00:27:25,630 --> 00:27:29,210
I'm doing my usual thing I'm telling up
my proxy locks ok I want to look at your

519
00:27:29,210 --> 00:27:32,250
request potentially in a land where
things are going in the site

520
00:27:32,250 --> 00:27:35,300
adding some comments now there's a
conscript

521
00:27:35,300 --> 00:27:38,300
love different users on the site and its
kinda interesting to the next thing I'm

522
00:27:38,300 --> 00:27:39,050
doing is I'm

523
00:27:39,050 --> 00:27:42,200
go ahead and taking a look at one of the
request actually

524
00:27:42,200 --> 00:27:45,850
up to actually the

525
00:27:45,850 --> 00:27:48,659
see what kinda cookies are being set and
here's a bright cookies that were

526
00:27:48,660 --> 00:27:50,420
actually created and sent by in spare

527
00:27:50,420 --> 00:27:53,530
Michael hard to read the back but on

528
00:27:53,530 --> 00:27:57,070
there's also some POS printers I'm
looking at here on

529
00:27:57,070 --> 00:28:00,840
for this particular particular model
which is a common model there's this one

530
00:28:00,840 --> 00:28:04,899
cookie called you track hit tracking
cookie time to go ahead and send it over

531
00:28:04,900 --> 00:28:05,990
to repeater

532
00:28:05,990 --> 00:28:10,260
and I'm gonna change the value up this
particular parameter

533
00:28:10,260 --> 00:28:14,190
I'm which books at some hacks string or
something in it so I go ahead and change

534
00:28:14,190 --> 00:28:15,570
a primer to fussing

535
00:28:15,570 --> 00:28:19,460
this and I go ahead and send the request

536
00:28:19,460 --> 00:28:23,210
long-haul and that what ends up
happening here to get a 302

537
00:28:23,210 --> 00:28:26,400
to being redirected to a particular

538
00:28:26,400 --> 00:28:30,650
page so that strange going to fall that
redirect I'm being redirected again to

539
00:28:30,650 --> 00:28:31,340
another page

540
00:28:31,340 --> 00:28:35,330
go ahead a potentially follow every
directed

541
00:28:35,330 --> 00:28:38,669
peering redirected to another page
they've even eighty what's going on here

542
00:28:38,670 --> 00:28:42,830
actually at redirect loop

543
00:28:42,830 --> 00:28:46,280
to super annoying if you're testing
application and it fills your proxy Log

544
00:28:46,280 --> 00:28:46,680
its

545
00:28:46,680 --> 00:28:51,160
super obnoxious to go ahead I'm a look
if you are going to refresh the page

546
00:28:51,160 --> 00:28:54,440
out I'm getting if the page isn't
redirecting properly your message in

547
00:28:54,440 --> 00:28:56,190
Firefox and I've done something I

548
00:28:56,190 --> 00:28:59,240
10 she shouldn't have next thing I'm
doing here is

549
00:28:59,240 --> 00:29:02,480
I'm going to attempt to do another
attack on the page I'm a little confused

550
00:29:02,480 --> 00:29:04,230
on what's going on at the apt

551
00:29:04,230 --> 00:29:08,230
school had an attack again this time I'm
gonna try to post to this recipe

552
00:29:08,230 --> 00:29:12,990
6 because I i believe this is on a
recipe that I don't actual not a manager

553
00:29:12,990 --> 00:29:14,390
Obama go ahead and try to

554
00:29:14,390 --> 00:29:18,450
potentially update that page even though
I don't have write access to it you know

555
00:29:18,450 --> 00:29:18,960
basically

556
00:29:18,960 --> 00:29:22,990
exploit direct object reference
portability cycle had an attempt to

557
00:29:22,990 --> 00:29:25,020
exploit that I get a 404 not found

558
00:29:25,020 --> 00:29:28,389
well that's interesting I'm pretty sure
that that page was there wasn't kennedy

559
00:29:28,390 --> 00:29:31,310
et routes expecting to see how we go
back to the router the site

560
00:29:31,310 --> 00:29:34,649
weird I got another 404 we go back to
the root out

561
00:29:34,650 --> 00:29:38,120
now the site loaded up okay that's cool
me wanna go back and try to visit

562
00:29:38,120 --> 00:29:39,389
another page here

563
00:29:39,390 --> 00:29:44,060
it's taking forever the site is not
loading and I got another redirect loop

564
00:29:44,060 --> 00:29:47,389
okay so I create it's really strange
state with the application

565
00:29:47,390 --> 00:29:52,500
now as you know the person administering
the site we can actually take a look at

566
00:29:52,500 --> 00:29:54,040
some basic metrics here we have it

567
00:29:54,040 --> 00:29:58,170
dashboard that allows you to kinda track
and see what's going on so we can see

568
00:29:58,170 --> 00:30:01,490
where the violation types are occurring
or the anchoring and parameters reading

569
00:30:01,490 --> 00:30:05,400
occurring in bad pass are the
authorization bone abilities to be

570
00:30:05,400 --> 00:30:08,790
talked about that ability to hook into
existing authorization checks with in

571
00:30:08,790 --> 00:30:09,629
your code

572
00:30:09,630 --> 00:30:13,720
or the cookie violations and where the
source of these violations coming from

573
00:30:13,720 --> 00:30:14,450
we can look at the

574
00:30:14,450 --> 00:30:17,740
IP addresses the sessions or the User
objects

575
00:30:17,740 --> 00:30:21,520
I can actually go into the violations
table and look at

576
00:30:21,520 --> 00:30:25,360
exactly where the violation occurred and
what time I can see the value that was

577
00:30:25,360 --> 00:30:25,860
expected

578
00:30:25,860 --> 00:30:29,939
expected the value that I observed as
well as the way to the violation for

579
00:30:29,940 --> 00:30:30,770
example

580
00:30:30,770 --> 00:30:33,320
were really concerned about
authorization bone abilities we make

581
00:30:33,320 --> 00:30:34,840
sure the increase the weight of those

582
00:30:34,840 --> 00:30:40,129
those up violation comp I'm kinda scan
through here and and basically take a

583
00:30:40,130 --> 00:30:42,110
look at what's going on there's other
options too

584
00:30:42,110 --> 00:30:45,510
the configuration options give you some
example configurations that you could

585
00:30:45,510 --> 00:30:47,530
potentially implementing your
application

586
00:30:47,530 --> 00:30:51,030
if you want to and I heard you guys when
you check the price caps just

587
00:30:51,030 --> 00:30:54,879
play around in the dashboard and all
that good stuff

588
00:30:54,880 --> 00:31:01,880
call shop

589
00:31:02,740 --> 00:31:05,639
so

590
00:31:05,639 --> 00:31:08,879
we're totally love and miss you have
going on right now on

591
00:31:08,879 --> 00:31:13,100
this is a site I we love for you guys to
play with it since their daughter of a

592
00:31:13,100 --> 00:31:14,570
laptop

593
00:31:14,570 --> 00:31:18,580
I this is not a production at like that
recipe said he saw it change your cell

594
00:31:18,580 --> 00:31:21,779
okay you can clearly create names with
special characters

595
00:31:21,779 --> 00:31:25,059
so I we threw together really quick

596
00:31:25,059 --> 00:31:29,090
may be unstable please don't try to
knock it down like don't toss the site

597
00:31:29,090 --> 00:31:32,779
that's haha right now know we'll have a
good time with it I'm scared or afraid

598
00:31:32,779 --> 00:31:34,249
of you wanna rubber

599
00:31:34,249 --> 00:31:38,830
ask and it something I said and I we can
actually point for authorization attacks

600
00:31:38,830 --> 00:31:42,509
because you know I would be awesome so
if you guys

601
00:31:42,509 --> 00:31:45,899
you get some balls going let me know if
find it cheaper knowing hit me up on

602
00:31:45,899 --> 00:31:46,498
Twitter

603
00:31:46,499 --> 00:31:52,080
love to hear about it it's all the
questions we get asked

604
00:31:52,080 --> 00:31:55,080
I'm you know we're not thinking about
when we were really right missus

605
00:31:55,080 --> 00:31:59,570
coleen sees is going to add entire
process so we derive was measured using

606
00:31:59,570 --> 00:32:00,789
why slow

607
00:32:00,789 --> 00:32:04,970
and we determine that on a native
application

608
00:32:04,970 --> 00:32:10,080
the average difference in response time
was 6.7 percent and I sound like a lot

609
00:32:10,080 --> 00:32:13,330
but we're talking about the average
network latency on the weather

610
00:32:13,330 --> 00:32:17,309
6.7 per sec is very very very small it's
like an average

611
00:32:17,309 --> 00:32:20,379
delay maybe 10 milliseconds so much your

612
00:32:20,379 --> 00:32:24,779
provide exported mission-critical
application on a dedicated network that

613
00:32:24,779 --> 00:32:27,590
has no jitter and latency and I think
that we think that this is pretty

614
00:32:27,590 --> 00:32:28,499
acceptable

615
00:32:28,499 --> 00:32:31,580
up by yet this was test it out

616
00:32:31,580 --> 00:32:37,539
and that's roughly right around six
percent switch it up when it's ready

617
00:32:37,539 --> 00:32:38,549
with its there

618
00:32:38,549 --> 00:32:43,100
we have some documentation and that's
pretty close out kinda walking

619
00:32:43,100 --> 00:32:47,330
exactly how to setup and working and
your application we included example

620
00:32:47,330 --> 00:32:51,389
configuration file that you basically
copied into your

621
00:32:51,389 --> 00:32:55,039
application to tournaments they're on
there's more

622
00:32:55,039 --> 00:32:58,629
configuration examples on the dashboard
an annotated so you know how to use them

623
00:32:58,629 --> 00:32:59,209
in

624
00:32:59,210 --> 00:33:03,009
we encourage you at some point customize
the app the configuration you can use

625
00:33:03,009 --> 00:33:04,639
example want to get started

626
00:33:04,639 --> 00:33:09,658
we definitely hurt starting long though
not wanna creole one redirecting arena

627
00:33:09,659 --> 00:33:10,720
directing people to

628
00:33:10,720 --> 00:33:14,899
busy guy if they're legitimate users so
playing live alone will make sure you

629
00:33:14,899 --> 00:33:15,699
have a good idea

630
00:33:15,700 --> 00:33:20,159
where it should be causing response to
turn into your trap violations make

631
00:33:20,159 --> 00:33:20,700
sense

632
00:33:20,700 --> 00:33:24,230
want to get all the tweaks so turned out
in force more literate

633
00:33:24,230 --> 00:33:29,159
and screw the attackers so some final
thoughts on

634
00:33:29,159 --> 00:33:33,059
it's there %uh this is a security right
in a certain sense at least on the track

635
00:33:33,059 --> 00:33:34,070
surface and

636
00:33:34,070 --> 00:33:37,720
ethical miscreant really we think is
here to see our class security

637
00:33:37,720 --> 00:33:40,799
up my thought is that

638
00:33:40,799 --> 00:33:44,139
you know it's really just an additional
layer on top a secure coding on

639
00:33:44,139 --> 00:33:48,559
and if I can filter out even one
attacker from my site because

640
00:33:48,559 --> 00:33:51,109
they're trying to run a sequel
injections can to keep getting

641
00:33:51,109 --> 00:33:51,710
redirected

642
00:33:51,710 --> 00:33:55,480
delayed everything becomes ineffective
as a West like if we can cut some in the

643
00:33:55,480 --> 00:33:56,369
noise out

644
00:33:56,369 --> 00:34:00,090
its it is an effective tool and it's
there is actually

645
00:34:00,090 --> 00:34:03,720
even a big chunk of it is the security
with the honey trap stuff

646
00:34:03,720 --> 00:34:06,980
um its it's also in its own sense

647
00:34:06,980 --> 00:34:09,980
just a more advanced way in in
monitoring attacks

648
00:34:09,980 --> 00:34:13,389
if I have the ability to hook into
existing authorization functionality my

649
00:34:13,389 --> 00:34:14,329
application

650
00:34:14,329 --> 00:34:17,750
and making smart decisions on that i
think is a lot of value in that

651
00:34:17,750 --> 00:34:21,909
I mean within the application where we
have so much we so much day that where

652
00:34:21,909 --> 00:34:23,059
we can potentially collect

653
00:34:23,059 --> 00:34:27,540
and oftentimes when I try to access your
profile to to perform up direct ops

654
00:34:27,540 --> 00:34:30,849
preference on my desk in air message
back but that's really interesting stuff

655
00:34:30,849 --> 00:34:31,099
we

656
00:34:31,040 --> 00:34:34,460
something that we should know about and
we can extract that out

657
00:34:34,460 --> 00:34:37,649
love that it's there and once they're
actually handle that logic and I think

658
00:34:37,649 --> 00:34:39,549
that's something that really powerful
because

659
00:34:39,549 --> 00:34:43,889
we are to do so much for the stuff in
the code why not why not take that

660
00:34:43,889 --> 00:34:49,589
that they don't actually do something
with it there is some stuff we still

661
00:34:49,589 --> 00:34:50,460
have yet to do

662
00:34:50,460 --> 00:34:54,159
I'm we do not have a real sport ish in
the corners and only works rails 3

663
00:34:54,159 --> 00:34:57,430
we also would like some more trapped
types especially

664
00:34:57,430 --> 00:35:00,589
get parameter so right now we can said
honey trap crafters

665
00:35:00,589 --> 00:35:05,049
just words and post I also think other
hunters would be useful

666
00:35:05,049 --> 00:35:08,430
be called his head arbitrary hunters and
stuff like that

667
00:35:08,430 --> 00:35:12,509
the site's cookies also this idea
threshold start the way

668
00:35:12,510 --> 00:35:16,059
this is something I came up with in the
event that you can move into a threshold

669
00:35:16,059 --> 00:35:18,740
group see running a sequel injection
attack

670
00:35:18,740 --> 00:35:22,649
I would like to the lady when the
threshold time for certain user gets an

671
00:35:22,650 --> 00:35:26,849
so you hit your cunt request sequence
action a threshold group then you browse

672
00:35:26,849 --> 00:35:29,859
the site for like another five minutes
and boom it turns on a threshold

673
00:35:29,859 --> 00:35:33,520
that way they want people to correlate
which request potentially put them in an

674
00:35:33,520 --> 00:35:36,029
event state change within the
application I think I'll make it super

675
00:35:36,029 --> 00:35:37,440
hard identified

676
00:35:37,440 --> 00:35:42,089
when you've actually cost a change in
the application we all like to implement

677
00:35:42,089 --> 00:35:42,880
whitelisting

678
00:35:42,880 --> 00:35:45,520
because obviously there's gonna be some
legitimate times are you gonna wanna

679
00:35:45,520 --> 00:35:48,069
potentially run this has been a run a
scan answer site

680
00:35:48,069 --> 00:35:51,730
and just more response types like
somebody should write that the fuck

681
00:35:51,730 --> 00:35:55,430
would be really cool hour maybe work in
Metasploit Java

682
00:35:55,430 --> 00:36:00,618
like to trigger when use doesn't really
bad at all staff up

683
00:36:00,619 --> 00:36:05,130
so just got cancer has gone fast I get
parameters we cannot ask her to read and

684
00:36:05,130 --> 00:36:05,510
write

685
00:36:05,510 --> 00:36:09,130
you to test for this thus we want to do
that every call

686
00:36:09,130 --> 00:36:13,170
it's like the not most not fun thing in
the world so up

687
00:36:13,170 --> 00:36:16,279
a and in just a couple configuration
caveats you know that

688
00:36:16,279 --> 00:36:19,589
attracting need to be intelligent if
you're if you're setting traps that

689
00:36:19,589 --> 00:36:21,750
don't make sense based on the
application

690
00:36:21,750 --> 00:36:25,540
flowing here you know if you got my
shopping cart like your trappings have

691
00:36:25,540 --> 00:36:27,920
nothing to do with your shopping cart
system

692
00:36:27,920 --> 00:36:31,480
users might not trigger those same I
think some she's gonna

693
00:36:31,480 --> 00:36:34,680
and the same goes with the threshold
group like be smart about exactly when

694
00:36:34,680 --> 00:36:37,210
you play some things with special people
what kind response

695
00:36:37,210 --> 00:36:40,359
you do you want to ensure you're not
effecting

696
00:36:40,359 --> 00:36:44,710
with giving users experience i site

697
00:36:44,710 --> 00:36:50,579
and with that we have any questions up

698
00:36:50,579 --> 00:36:55,240
yep re

699
00:36:55,240 --> 00:36:59,390
when through it there there for

700
00:36:59,390 --> 00:37:05,240
himself

701
00:37:05,240 --> 00:37:06,950
I think there's there's kinda a couple
uses

