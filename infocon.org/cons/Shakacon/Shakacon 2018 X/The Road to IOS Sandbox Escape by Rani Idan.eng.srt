1
00:00:02,960 --> 00:00:10,140
so hi my name<font color="#CCCCCC"> is Ronnie</font><font color="#E5E5E5"> and I'm a</font>

2
00:00:06,750 --> 00:00:14,400
<font color="#E5E5E5">security researcher at</font><font color="#CCCCCC"> Imperium I'm</font>

3
00:00:10,140 --> 00:00:16,080
super excited to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> here it's really my</font>

4
00:00:14,400 --> 00:00:21,030
<font color="#CCCCCC">honor to be in Chicago</font><font color="#E5E5E5"> first time in</font>

5
00:00:16,079 --> 00:00:24,269
<font color="#E5E5E5">Hawaii</font><font color="#CCCCCC"> and today I'll speak about</font><font color="#E5E5E5"> my own</font>

6
00:00:21,030 --> 00:00:26,789
<font color="#E5E5E5">experience with in Iowa's research to be</font>

7
00:00:24,270 --> 00:00:30,600
honest<font color="#E5E5E5"> all the information are</font><font color="#CCCCCC"> going to</font>

8
00:00:26,789 --> 00:00:34,559
share with<font color="#E5E5E5"> you today is few months and</font>

9
00:00:30,600 --> 00:00:38,609
<font color="#E5E5E5">that I'm learning</font><font color="#CCCCCC"> how I was operating</font>

10
00:00:34,559 --> 00:00:45,239
system works and when I started the

11
00:00:38,609 --> 00:00:48,389
researcher was really newbie<font color="#CCCCCC"> to Wes so</font>

12
00:00:45,239 --> 00:00:52,199
basically I<font color="#CCCCCC"> started I came to iOS</font><font color="#E5E5E5"> and</font>

13
00:00:48,389 --> 00:00:54,859
<font color="#E5E5E5">mobile research after</font><font color="#CCCCCC"> few years of</font>

14
00:00:52,199 --> 00:00:57,210
experience<font color="#CCCCCC"> with different platforms</font><font color="#E5E5E5"> so</font>

15
00:00:54,859 --> 00:01:01,620
what I<font color="#E5E5E5"> really</font><font color="#CCCCCC"> want to show you today is</font>

16
00:00:57,210 --> 00:01:04,379
how<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can conduct the</font><font color="#E5E5E5"> same research</font>

17
00:01:01,620 --> 00:01:06,658
methodologies even to iOS which is

18
00:01:04,379 --> 00:01:11,579
<font color="#E5E5E5">repeatedly for some reason known as</font>

19
00:01:06,659 --> 00:01:17,090
complicated<font color="#E5E5E5"> so what are we going to</font>

20
00:01:11,579 --> 00:01:17,089
<font color="#E5E5E5">cover today and use this one and rule 11</font>

21
00:01:17,450 --> 00:01:23,670
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> we'll start by covering some basic</font>

22
00:01:20,009 --> 00:01:26,280
turns over I<font color="#E5E5E5"> where specifically over the</font>

23
00:01:23,670 --> 00:01:30,119
iOS<font color="#CCCCCC"> cont organization also</font><font color="#E5E5E5"> also known as</font>

24
00:01:26,280 --> 00:01:33,179
the sandbox<font color="#E5E5E5"> and we will cover this dirt</font>

25
00:01:30,119 --> 00:01:36,780
<font color="#E5E5E5">cache which</font><font color="#CCCCCC"> is important file for for</font>

26
00:01:33,179 --> 00:01:39,179
the research a conductor and few words

27
00:01:36,780 --> 00:01:40,770
<font color="#E5E5E5">about lunch Lee basically we can have a</font>

28
00:01:39,179 --> 00:01:44,869
whole presentation only<font color="#E5E5E5"> on launch day</font>

29
00:01:40,770 --> 00:01:48,719
and specifically<font color="#CCCCCC"> over mass messages and</font>

30
00:01:44,869 --> 00:01:52,409
I will share with you<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> the</font>

31
00:01:48,719 --> 00:01:54,149
difficulties ahead<font color="#E5E5E5"> over iOS and my own</font>

32
00:01:52,409 --> 00:01:57,479
<font color="#E5E5E5">research on</font><font color="#CCCCCC"> me the</font><font color="#E5E5E5"> server</font><font color="#CCCCCC"> D and brew</font>

33
00:01:54,149 --> 00:02:00,929
<font color="#E5E5E5">today and whether we they're going to be</font>

34
00:01:57,479 --> 00:02:05,509
<font color="#CCCCCC">ETA soon</font><font color="#E5E5E5"> but actually the ones already</font>

35
00:02:00,929 --> 00:02:05,509
jailbroken is so<font color="#CCCCCC"> No</font>

36
00:02:06,020 --> 00:02:13,260
so let's start<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> Ronnie done so</font>

37
00:02:10,348 --> 00:02:15,750
already said hey I'm a security

38
00:02:13,260 --> 00:02:18,599
<font color="#CCCCCC">researcher</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> Peru until up steam</font><font color="#E5E5E5"> I'm</font>

39
00:02:15,750 --> 00:02:21,690
director of<font color="#CCCCCC"> platforms research I live in</font>

40
00:02:18,599 --> 00:02:24,268
Tel Aviv<font color="#E5E5E5"> in Israel and basically this</font>

41
00:02:21,690 --> 00:02:27,450
means<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to the beach probably</font>

42
00:02:24,269 --> 00:02:31,380
every weekend<font color="#E5E5E5"> and by the way it took me</font>

43
00:02:27,450 --> 00:02:33,060
30 hours to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get here so yeah it</font>

44
00:02:31,380 --> 00:02:36,870
was<font color="#E5E5E5"> really</font><font color="#CCCCCC"> tough I'm still from the</font><font color="#E5E5E5"> I</font>

45
00:02:33,060 --> 00:02:39,870
can't recover<font color="#E5E5E5"> from the jetlag and anyway</font>

46
00:02:36,870 --> 00:02:41,780
and<font color="#CCCCCC"> i'm i west researcher and i decided</font>

47
00:02:39,870 --> 00:02:45,450
to put<font color="#E5E5E5"> it in different bullet just to</font>

48
00:02:41,780 --> 00:02:47,459
explain it again this was all<font color="#E5E5E5"> new area</font>

49
00:02:45,450 --> 00:02:52,079
<font color="#E5E5E5">to me so everything I'm standing you</font>

50
00:02:47,459 --> 00:02:58,250
here go<font color="#E5E5E5"> on do it</font><font color="#CCCCCC"> for yourself and</font><font color="#E5E5E5"> learn</font>

51
00:02:52,080 --> 00:02:58,250
<font color="#CCCCCC">new things</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> iOS</font><font color="#E5E5E5"> only rough overview</font>

52
00:02:58,849 --> 00:03:05,429
evolved from<font color="#E5E5E5"> always six and is based</font>

53
00:03:01,530 --> 00:03:07,739
upon<font color="#E5E5E5"> down in operating system in many</font>

54
00:03:05,430 --> 00:03:10,410
<font color="#E5E5E5">ways you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> find a lot of overlapping</font>

55
00:03:07,739 --> 00:03:12,900
code between<font color="#E5E5E5"> iOS and all the other OS</font>

56
00:03:10,410 --> 00:03:15,709
devices including micro a sandwich was

57
00:03:12,900 --> 00:03:18,739
that's why it might<font color="#CCCCCC"> be interesting to</font>

58
00:03:15,709 --> 00:03:21,750
choose the<font color="#CCCCCC"> tack surface that might be</font>

59
00:03:18,739 --> 00:03:25,440
also<font color="#E5E5E5"> true</font><font color="#CCCCCC"> for all the other platforms</font><font color="#E5E5E5"> in</font>

60
00:03:21,750 --> 00:03:29,190
my<font color="#E5E5E5"> case it wasn't for Mac OS and</font>

61
00:03:25,440 --> 00:03:31,799
xnu kernel<font color="#E5E5E5"> the iOS is based upon the X</font>

62
00:03:29,190 --> 00:03:35,340
<font color="#E5E5E5">in</font><font color="#CCCCCC"> you kernel which all the sources are</font>

63
00:03:31,799 --> 00:03:37,980
publicly publicly available which is a

64
00:03:35,340 --> 00:03:40,170
really<font color="#CCCCCC"> strong reference</font><font color="#E5E5E5"> I think this is</font>

65
00:03:37,980 --> 00:03:45,000
the most important reference you can

66
00:03:40,170 --> 00:03:49,220
<font color="#E5E5E5">have over iOS and I always reinforces</font>

67
00:03:45,000 --> 00:03:52,700
<font color="#E5E5E5">the sandbox the sandbox limitations and</font>

68
00:03:49,220 --> 00:03:54,810
just I<font color="#E5E5E5"> want to put another term that I'm</font>

69
00:03:52,700 --> 00:03:58,078
<font color="#E5E5E5">really sure that</font><font color="#CCCCCC"> most of you already</font>

70
00:03:54,810 --> 00:04:02,069
<font color="#E5E5E5">know is the jailbreak it is process</font>

71
00:03:58,079 --> 00:04:04,829
which means<font color="#E5E5E5"> full execute of read and</font>

72
00:04:02,069 --> 00:04:07,589
<font color="#E5E5E5">write that is obtained over the system</font>

73
00:04:04,829 --> 00:04:11,250
partition<font color="#E5E5E5"> it is done in a lot of ways</font>

74
00:04:07,590 --> 00:04:15,810
and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> work what we're going</font><font color="#CCCCCC"> to</font>

75
00:04:11,250 --> 00:04:17,380
talk about<font color="#E5E5E5"> today okay now let's have an</font>

76
00:04:15,810 --> 00:04:20,140
overview<font color="#CCCCCC"> over I over</font>

77
00:04:17,380 --> 00:04:23,830
just really<font color="#CCCCCC"> rough</font><font color="#E5E5E5"> over you and really I</font>

78
00:04:20,140 --> 00:04:26,500
try to<font color="#E5E5E5"> flatten it and we can logically</font>

79
00:04:23,830 --> 00:04:28,690
separate it into three<font color="#CCCCCC"> different parts</font>

80
00:04:26,500 --> 00:04:34,750
<font color="#CCCCCC">we have the application core services</font>

81
00:04:28,690 --> 00:04:36,430
and the kernel and basically what<font color="#CCCCCC"> it</font>

82
00:04:34,750 --> 00:04:39,070
what<font color="#CCCCCC"> it</font><font color="#E5E5E5"> means that</font><font color="#CCCCCC"> the application are</font>

83
00:04:36,430 --> 00:04:42,550
are the<font color="#E5E5E5"> send was profile one application</font>

84
00:04:39,070 --> 00:04:44,980
wishes to use in our case YouTube<font color="#CCCCCC"> who</font>

85
00:04:42,550 --> 00:04:48,940
will want<font color="#E5E5E5"> to decode</font><font color="#CCCCCC"> some frames</font><font color="#E5E5E5"> it will</font>

86
00:04:44,980 --> 00:04:50,650
use<font color="#CCCCCC"> the video</font><font color="#E5E5E5"> toolbox API and as for one</font>

87
00:04:48,940 --> 00:04:54,460
of the core services<font color="#CCCCCC"> in</font><font color="#E5E5E5"> that case made a</font>

88
00:04:50,650 --> 00:04:56,229
server D to handle the<font color="#CCCCCC"> requests and main</font>

89
00:04:54,460 --> 00:05:00,669
server D on the behalf of<font color="#E5E5E5"> who YouTube</font>

90
00:04:56,230 --> 00:05:06,190
will use one of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> IO key drivers on</font>

91
00:05:00,670 --> 00:05:08,800
the kernel side so<font color="#E5E5E5"> and I think it's</font>

92
00:05:06,190 --> 00:05:11,110
important<font color="#E5E5E5"> to say at this point</font><font color="#CCCCCC"> that also</font>

93
00:05:08,800 --> 00:05:13,780
<font color="#CCCCCC">the core services are operated and</font>

94
00:05:11,110 --> 00:05:16,510
treated by different sandbox profiles

95
00:05:13,780 --> 00:05:20,619
<font color="#E5E5E5">that means</font><font color="#CCCCCC"> major server they will not be</font>

96
00:05:16,510 --> 00:05:25,990
able<font color="#E5E5E5"> to access</font><font color="#CCCCCC"> blue</font><font color="#E5E5E5"> to D if it doesn't</font>

97
00:05:20,620 --> 00:05:27,580
need to so if you're<font color="#E5E5E5"> choosing an attack</font>

98
00:05:25,990 --> 00:05:31,090
surface you will want to<font color="#E5E5E5"> choose an</font>

99
00:05:27,580 --> 00:05:34,750
attack surface that has the much larger

100
00:05:31,090 --> 00:05:42,900
<font color="#E5E5E5">impact from an application over to the</font>

101
00:05:34,750 --> 00:05:45,730
kernel<font color="#E5E5E5"> so in order to improve some</font>

102
00:05:42,900 --> 00:05:47,679
performance up and decided<font color="#CCCCCC"> to take all</font>

103
00:05:45,730 --> 00:05:50,080
the system libraries and combine<font color="#CCCCCC"> it into</font>

104
00:05:47,680 --> 00:05:52,570
one big<font color="#CCCCCC"> file that is being loaded to</font>

105
00:05:50,080 --> 00:05:57,880
each process and it's called the<font color="#CCCCCC"> lead</font>

106
00:05:52,570 --> 00:05:59,950
<font color="#CCCCCC">shared cache</font><font color="#E5E5E5"> basically you can find the</font>

107
00:05:57,880 --> 00:06:03,310
<font color="#E5E5E5">equivalent in Windows I don't know like</font>

108
00:05:59,950 --> 00:06:06,760
kernel32.dll<font color="#CCCCCC"> all system libraries are</font>

109
00:06:03,310 --> 00:06:10,060
combined both<font color="#CCCCCC"> the public SDK or the</font>

110
00:06:06,760 --> 00:06:13,300
private<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> file size is</font>

111
00:06:10,060 --> 00:06:15,580
approximately<font color="#E5E5E5"> 700 megabyte and we will</font>

112
00:06:13,300 --> 00:06:19,660
understand<font color="#CCCCCC"> later</font><font color="#E5E5E5"> wise actually huge</font>

113
00:06:15,580 --> 00:06:23,050
problem and there are<font color="#E5E5E5"> several</font><font color="#CCCCCC"> ways to</font>

114
00:06:19,660 --> 00:06:26,110
analyze I am using idea or<font color="#CCCCCC"> j2</font><font color="#E5E5E5"> you can</font>

115
00:06:23,050 --> 00:06:28,560
find a lot of<font color="#E5E5E5"> open source tools out</font>

116
00:06:26,110 --> 00:06:28,560
there<font color="#E5E5E5"> and</font>

117
00:06:29,430 --> 00:06:37,870
so what is IP seen again in<font color="#E5E5E5"> the aspect</font>

118
00:06:35,290 --> 00:06:40,750
of iOS<font color="#CCCCCC"> it is used to communities to</font>

119
00:06:37,870 --> 00:06:44,080
communication between processes<font color="#E5E5E5"> Apple</font>

120
00:06:40,750 --> 00:06:48,370
<font color="#E5E5E5">decided to implement several</font><font color="#CCCCCC"> IPC</font>

121
00:06:44,080 --> 00:06:51,729
mechanisms such as<font color="#CCCCCC"> X</font><font color="#E5E5E5"> PC mathematician</font>

122
00:06:48,370 --> 00:06:54,220
distributed objects and<font color="#CCCCCC"> Bay and they are</font>

123
00:06:51,730 --> 00:06:57,100
all based upon mass messages<font color="#E5E5E5"> that means</font>

124
00:06:54,220 --> 00:07:00,130
the cornerstone of all the apples IPC

125
00:06:57,100 --> 00:07:02,920
<font color="#E5E5E5">the mass messages so I found it</font><font color="#CCCCCC"> really</font>

126
00:07:00,130 --> 00:07:06,130
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> to fully understand</font><font color="#E5E5E5"> mass</font>

127
00:07:02,920 --> 00:07:08,410
messages and basically I couldn't really

128
00:07:06,130 --> 00:07:11,620
read the references they have<font color="#E5E5E5"> on demand</font>

129
00:07:08,410 --> 00:07:14,530
page because it's not going to help<font color="#E5E5E5"> so</font>

130
00:07:11,620 --> 00:07:16,270
in that<font color="#CCCCCC"> case it was just reading the</font>

131
00:07:14,530 --> 00:07:20,049
kernel source code and understanding

132
00:07:16,270 --> 00:07:23,530
<font color="#E5E5E5">knock messages and</font><font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> also decided</font><font color="#CCCCCC"> to</font>

133
00:07:20,050 --> 00:07:26,110
implement<font color="#E5E5E5"> all the well-known POSIX IPC</font>

134
00:07:23,530 --> 00:07:33,150
and like I<font color="#E5E5E5"> said it realized on</font><font color="#CCCCCC"> mass</font>

135
00:07:26,110 --> 00:07:37,150
messages<font color="#CCCCCC"> so what are mass messages</font><font color="#E5E5E5"> it's</font>

136
00:07:33,150 --> 00:07:39,159
used<font color="#E5E5E5"> within the kernel and user mode in</font>

137
00:07:37,150 --> 00:07:41,460
order to<font color="#E5E5E5"> send mass message</font><font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to</font>

138
00:07:39,160 --> 00:07:46,180
use the mass message<font color="#CCCCCC"> drop Cisco</font><font color="#E5E5E5"> and</font>

139
00:07:41,460 --> 00:07:49,030
let's go through<font color="#CCCCCC"> several fields in the</font>

140
00:07:46,180 --> 00:07:51,160
<font color="#CCCCCC">struct we have the message bits its</font>

141
00:07:49,030 --> 00:07:54,010
field used to set the type of<font color="#E5E5E5"> the</font>

142
00:07:51,160 --> 00:07:56,410
message the<font color="#E5E5E5"> center of the mesh</font><font color="#CCCCCC"> message</font>

143
00:07:54,010 --> 00:07:58,599
may specify the message is<font color="#E5E5E5"> complex</font><font color="#CCCCCC"> if</font>

144
00:07:56,410 --> 00:08:00,850
the<font color="#E5E5E5"> message is complex</font><font color="#CCCCCC"> that means you</font>

145
00:07:58,600 --> 00:08:04,900
can<font color="#E5E5E5"> also send data the data is going to</font>

146
00:08:00,850 --> 00:08:08,050
<font color="#CCCCCC">be</font><font color="#E5E5E5"> added after</font><font color="#CCCCCC"> the header and the remote</font>

147
00:08:04,900 --> 00:08:12,370
part basically specifies the recipient

148
00:08:08,050 --> 00:08:16,300
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> message the destination</font><font color="#E5E5E5"> of the</font>

149
00:08:12,370 --> 00:08:20,680
message the local<font color="#E5E5E5"> port</font><font color="#CCCCCC"> isn't actually</font><font color="#E5E5E5"> an</font>

150
00:08:16,300 --> 00:08:24,610
<font color="#CCCCCC">axillary port which you can tell the</font>

151
00:08:20,680 --> 00:08:27,900
recipient<font color="#E5E5E5"> to which port to return the</font>

152
00:08:24,610 --> 00:08:32,280
message<font color="#E5E5E5"> and there is the message ID</font>

153
00:08:27,900 --> 00:08:35,079
which<font color="#E5E5E5"> is conventionally used to convey</font>

154
00:08:32,280 --> 00:08:38,289
which function<font color="#CCCCCC"> to invoke on it's on the</font>

155
00:08:35,080 --> 00:08:41,860
side of<font color="#E5E5E5"> the server and basically just</font>

156
00:08:38,289 --> 00:08:42,559
<font color="#CCCCCC">just a number that you can the recipient</font>

157
00:08:41,860 --> 00:08:44,899
can<font color="#E5E5E5"> use to</font>

158
00:08:42,559 --> 00:08:53,180
decide which function it<font color="#E5E5E5"> needs to use</font>

159
00:08:44,899 --> 00:08:55,100
<font color="#E5E5E5">and so okay we have this tract but in</font>

160
00:08:53,180 --> 00:08:57,620
order that<font color="#CCCCCC"> processors will be</font><font color="#E5E5E5"> able to</font>

161
00:08:55,100 --> 00:09:00,350
locate each other and get a remote<font color="#CCCCCC"> port</font>

162
00:08:57,620 --> 00:09:06,319
<font color="#E5E5E5">there they are going</font><font color="#CCCCCC"> to need</font><font color="#E5E5E5"> someone</font><font color="#CCCCCC"> to</font>

163
00:09:00,350 --> 00:09:08,870
resolve some kind of constant name<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to</font>

164
00:09:06,319 --> 00:09:12,939
our<font color="#E5E5E5"> mode port that's why we're using</font>

165
00:09:08,870 --> 00:09:15,620
lunch<font color="#E5E5E5"> day lunch</font><font color="#CCCCCC"> beam practice is a</font>

166
00:09:12,939 --> 00:09:18,829
unified service management framework

167
00:09:15,620 --> 00:09:23,680
<font color="#CCCCCC">basically that</font><font color="#E5E5E5"> means and again</font><font color="#CCCCCC"> I'm</font>

168
00:09:18,829 --> 00:09:27,769
<font color="#CCCCCC">really flattened English D it's used to</font>

169
00:09:23,680 --> 00:09:29,420
start new demos or kill them it's

170
00:09:27,769 --> 00:09:34,129
basically the watchdog from the user

171
00:09:29,420 --> 00:09:37,370
user<font color="#E5E5E5"> mode space so when a process wishes</font>

172
00:09:34,129 --> 00:09:39,589
to check in as a new<font color="#CCCCCC"> math</font><font color="#E5E5E5"> server it's</font>

173
00:09:37,370 --> 00:09:42,920
going<font color="#E5E5E5"> to ask to use</font><font color="#CCCCCC"> the bootstrap</font>

174
00:09:39,589 --> 00:09:46,959
<font color="#CCCCCC">check-in function and going to ask from</font>

175
00:09:42,920 --> 00:09:50,660
lunch<font color="#E5E5E5"> D to hold that</font><font color="#CCCCCC"> mascot</font><font color="#E5E5E5"> and</font>

176
00:09:46,959 --> 00:09:53,029
eventually process we will<font color="#E5E5E5"> be able to</font>

177
00:09:50,660 --> 00:09:57,620
call<font color="#CCCCCC"> booster plug up with the same name</font>

178
00:09:53,029 --> 00:10:02,240
and get for lunch<font color="#E5E5E5"> D the</font><font color="#CCCCCC"> Mac port that it</font>

179
00:09:57,620 --> 00:10:04,819
will it will<font color="#E5E5E5"> communicate and eventually</font>

180
00:10:02,240 --> 00:10:07,160
the Basel processes are going<font color="#CCCCCC"> to</font>

181
00:10:04,819 --> 00:10:10,819
communicate between<font color="#CCCCCC"> each other</font><font color="#E5E5E5"> without</font>

182
00:10:07,160 --> 00:10:12,379
<font color="#E5E5E5">using a lunch T so while I was</font>

183
00:10:10,819 --> 00:10:14,329
researching<font color="#CCCCCC"> I always had several</font>

184
00:10:12,379 --> 00:10:18,949
difficulties<font color="#CCCCCC"> I think it's worth to</font>

185
00:10:14,329 --> 00:10:21,529
<font color="#CCCCCC">mention some of them basically devices</font>

186
00:10:18,949 --> 00:10:26,378
gel that means you cannot really<font color="#E5E5E5"> have</font>

187
00:10:21,529 --> 00:10:30,379
any utility like a DP or debug processes

188
00:10:26,379 --> 00:10:33,439
you cannot attach debugger to any of the

189
00:10:30,379 --> 00:10:35,029
<font color="#E5E5E5">side</font><font color="#CCCCCC"> daemons that means</font><font color="#E5E5E5"> most of the</font><font color="#CCCCCC"> time</font>

190
00:10:33,439 --> 00:10:37,250
you<font color="#CCCCCC"> are going</font><font color="#E5E5E5"> to use the device console</font>

191
00:10:35,029 --> 00:10:39,529
or the<font color="#E5E5E5"> crash reports if you</font><font color="#CCCCCC"> manage to</font>

192
00:10:37,250 --> 00:10:42,459
<font color="#E5E5E5">crash</font><font color="#CCCCCC"> a demo and you're trying</font><font color="#E5E5E5"> to debug</font>

193
00:10:39,529 --> 00:10:46,370
<font color="#E5E5E5">it in order to exploit a vulnerability</font>

194
00:10:42,459 --> 00:10:48,888
<font color="#E5E5E5">and you cannot flash all</font><font color="#CCCCCC"> versions that's</font>

195
00:10:46,370 --> 00:10:52,660
why you need<font color="#E5E5E5"> to have in</font><font color="#CCCCCC"> your work</font><font color="#E5E5E5"> on</font>

196
00:10:48,889 --> 00:10:54,510
<font color="#E5E5E5">your desktop just</font><font color="#CCCCCC"> a bunch of devices and</font>

197
00:10:52,660 --> 00:10:56,910
there are

198
00:10:54,510 --> 00:11:00,180
<font color="#E5E5E5">I don't really share the document</font>

199
00:10:56,910 --> 00:11:01,980
<font color="#E5E5E5">anything</font><font color="#CCCCCC"> that is not for the developers</font>

200
00:11:00,180 --> 00:11:05,099
that means you cannot really<font color="#E5E5E5"> have any</font>

201
00:11:01,980 --> 00:11:07,920
insight of<font color="#CCCCCC"> the internal documentation</font>

202
00:11:05,100 --> 00:11:09,240
<font color="#E5E5E5">that's why you need some people in the</font>

203
00:11:07,920 --> 00:11:11,550
<font color="#E5E5E5">community that</font><font color="#CCCCCC"> are sharing</font><font color="#E5E5E5"> their</font>

204
00:11:09,240 --> 00:11:15,530
knowledge<font color="#E5E5E5"> and the church</font><font color="#CCCCCC"> cache was just</font>

205
00:11:11,550 --> 00:11:20,280
enormous<font color="#E5E5E5"> for</font><font color="#CCCCCC"> Ida</font><font color="#E5E5E5"> so it might sound</font>

206
00:11:15,530 --> 00:11:24,959
<font color="#E5E5E5">really weird bullet but it was really a</font>

207
00:11:20,280 --> 00:11:26,610
headache<font color="#CCCCCC"> I hate I had to buy a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

208
00:11:24,960 --> 00:11:30,120
<font color="#CCCCCC">farm sticks and create a huge work</font>

209
00:11:26,610 --> 00:11:31,800
<font color="#CCCCCC">station</font><font color="#E5E5E5"> and until finally</font><font color="#CCCCCC"> either fixed</font>

210
00:11:30,120 --> 00:11:35,310
their issues with digital<font color="#CCCCCC"> cash and he</font>

211
00:11:31,800 --> 00:11:41,449
started to handle it properly<font color="#E5E5E5"> in the</font>

212
00:11:35,310 --> 00:11:44,130
aspect of memory<font color="#E5E5E5"> management sorry and</font>

213
00:11:41,450 --> 00:11:46,530
while working on<font color="#CCCCCC"> deterred can see you I</font>

214
00:11:44,130 --> 00:11:48,510
<font color="#E5E5E5">just had to a lot to have a lot of</font>

215
00:11:46,530 --> 00:11:51,240
precautions like<font color="#E5E5E5"> not trying to reference</font>

216
00:11:48,510 --> 00:11:55,920
<font color="#E5E5E5">between functions basically because</font>

217
00:11:51,240 --> 00:12:01,290
either<font color="#E5E5E5"> will just crash so what is the</font>

218
00:11:55,920 --> 00:12:03,270
sandbox escape<font color="#E5E5E5"> basically and it means in</font>

219
00:12:01,290 --> 00:12:05,280
general sandbox escape<font color="#CCCCCC"> is a type of</font>

220
00:12:03,270 --> 00:12:08,220
<font color="#E5E5E5">owner abilities that give the attacker</font>

221
00:12:05,280 --> 00:12:11,490
executing malicious<font color="#CCCCCC"> cause code</font><font color="#E5E5E5"> on behalf</font>

222
00:12:08,220 --> 00:12:15,390
of elevated process such as<font color="#CCCCCC"> the demons</font>

223
00:12:11,490 --> 00:12:17,940
<font color="#E5E5E5">so in our case we are assembled a</font>

224
00:12:15,390 --> 00:12:23,130
malicious application<font color="#E5E5E5"> with a nice icon</font>

225
00:12:17,940 --> 00:12:25,220
<font color="#E5E5E5">there and we intending to get malicious</font>

226
00:12:23,130 --> 00:12:28,830
code execution over<font color="#E5E5E5"> one of the services</font>

227
00:12:25,220 --> 00:12:32,070
<font color="#E5E5E5">the reason why we want to do this is to</font>

228
00:12:28,830 --> 00:12:34,560
widen our attack surface to the<font color="#E5E5E5"> kernel</font>

229
00:12:32,070 --> 00:12:37,110
because<font color="#E5E5E5"> eventually of course</font><font color="#CCCCCC"> it is</font>

230
00:12:34,560 --> 00:12:39,479
possible<font color="#CCCCCC"> to gain to find a vulnerability</font>

231
00:12:37,110 --> 00:12:41,150
<font color="#E5E5E5">and exploit</font><font color="#CCCCCC"> it from</font><font color="#E5E5E5"> malicious</font>

232
00:12:39,480 --> 00:12:46,830
application<font color="#CCCCCC"> directly to the kernel</font>

233
00:12:41,150 --> 00:12:50,610
however however<font color="#E5E5E5"> it's much more easier</font>

234
00:12:46,830 --> 00:12:53,850
you might say<font color="#E5E5E5"> if you already being able</font>

235
00:12:50,610 --> 00:12:59,970
<font color="#E5E5E5">to execute malicious code code over one</font>

236
00:12:53,850 --> 00:13:02,700
of the services so and eventually from

237
00:12:59,970 --> 00:13:06,930
that core services to gain access to the

238
00:13:02,700 --> 00:13:08,160
kernel<font color="#CCCCCC"> so at this moment</font><font color="#E5E5E5"> I got some</font>

239
00:13:06,930 --> 00:13:12,300
overview<font color="#E5E5E5"> over iOS</font>

240
00:13:08,160 --> 00:13:15,030
and I decided to<font color="#CCCCCC"> start choosing</font><font color="#E5E5E5"> my next</font>

241
00:13:12,300 --> 00:13:18,540
target<font color="#CCCCCC"> so I used s beetle by</font><font color="#E5E5E5"> Jonathan</font>

242
00:13:15,030 --> 00:13:23,040
<font color="#E5E5E5">Levine and basically what</font><font color="#CCCCCC"> this beetle</font>

243
00:13:18,540 --> 00:13:25,790
does is just<font color="#E5E5E5"> a tool that can be used in</font>

244
00:13:23,040 --> 00:13:30,209
<font color="#CCCCCC">order to inspect</font><font color="#E5E5E5"> the sandbox profile of</font>

245
00:13:25,790 --> 00:13:34,650
processes while<font color="#E5E5E5"> using it with a</font><font color="#CCCCCC"> maja</font>

246
00:13:30,210 --> 00:13:37,970
<font color="#CCCCCC">mock argument with the PID you can just</font>

247
00:13:34,650 --> 00:13:41,459
compile regular application to check

248
00:13:37,970 --> 00:13:45,450
which<font color="#E5E5E5"> my servers are accessible from</font>

249
00:13:41,460 --> 00:13:50,400
<font color="#E5E5E5">within the sandbox so today we are going</font>

250
00:13:45,450 --> 00:13:52,920
<font color="#E5E5E5">to focus over two different demons which</font>

251
00:13:50,400 --> 00:13:56,130
are the<font color="#E5E5E5"> common core media decompression</font>

252
00:13:52,920 --> 00:13:58,589
session which<font color="#CCCCCC"> is being executed on a</font>

253
00:13:56,130 --> 00:14:00,360
massive<font color="#E5E5E5"> server day and come up a server</font>

254
00:13:58,590 --> 00:14:03,540
<font color="#CCCCCC">bluetooth which is being</font><font color="#E5E5E5"> executed under</font>

255
00:14:00,360 --> 00:14:07,290
blue today<font color="#E5E5E5"> and both of them were</font>

256
00:14:03,540 --> 00:14:10,140
interesting<font color="#CCCCCC"> to me because specifically</font>

257
00:14:07,290 --> 00:14:13,199
blue today because it's communicating

258
00:14:10,140 --> 00:14:15,030
with a lot<font color="#E5E5E5"> of other</font><font color="#CCCCCC"> processes which has</font>

259
00:14:13,200 --> 00:14:19,140
a lot of impact and we will see it<font color="#CCCCCC"> later</font>

260
00:14:15,030 --> 00:14:21,689
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the last vulnerability and so from</font>

261
00:14:19,140 --> 00:14:23,910
that<font color="#E5E5E5"> point would just it was all about</font>

262
00:14:21,690 --> 00:14:27,690
<font color="#CCCCCC">just taking</font><font color="#E5E5E5"> the strings of the</font><font color="#CCCCCC"> mock</font>

263
00:14:23,910 --> 00:14:31,980
message<font color="#E5E5E5"> mark servers and</font><font color="#CCCCCC"> searching them</font>

264
00:14:27,690 --> 00:14:34,080
in the<font color="#CCCCCC"> third cache and from because it</font>

265
00:14:31,980 --> 00:14:35,430
was<font color="#E5E5E5"> just a matter of referencing a</font>

266
00:14:34,080 --> 00:14:39,780
little and fighting where they are

267
00:14:35,430 --> 00:14:41,880
initializing the<font color="#CCCCCC"> new</font><font color="#E5E5E5"> a Mac server so</font>

268
00:14:39,780 --> 00:14:44,010
let's have a look over<font color="#E5E5E5"> the</font>

269
00:14:41,880 --> 00:14:47,790
initialization<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the decompression</font>

270
00:14:44,010 --> 00:14:50,069
session server in<font color="#E5E5E5"> many server</font><font color="#CCCCCC"> d there</font>

271
00:14:47,790 --> 00:14:53,910
are fewer arguments the first argument

272
00:14:50,070 --> 00:14:57,750
is the name of<font color="#CCCCCC"> the server and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> third</font>

273
00:14:53,910 --> 00:15:01,290
argument<font color="#E5E5E5"> is the handler</font><font color="#CCCCCC"> for each</font><font color="#E5E5E5"> message</font>

274
00:14:57,750 --> 00:15:05,040
that is being<font color="#E5E5E5"> received the decompression</font>

275
00:15:01,290 --> 00:15:06,959
session<font color="#CCCCCC"> Mac server</font><font color="#E5E5E5"> internally</font><font color="#CCCCCC"> fig RPC</font>

276
00:15:05,040 --> 00:15:09,780
start server is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call boots up</font>

277
00:15:06,960 --> 00:15:12,660
checking<font color="#E5E5E5"> and will register an event</font>

278
00:15:09,780 --> 00:15:15,750
<font color="#CCCCCC">handler with the how it's called bTW</font>

279
00:15:12,660 --> 00:15:19,560
decompression session server struct<font color="#CCCCCC"> AB</font>

280
00:15:15,750 --> 00:15:20,620
sorry its function so let's have a look

281
00:15:19,560 --> 00:15:26,979
over<font color="#E5E5E5"> this function</font>

282
00:15:20,620 --> 00:15:31,270
<font color="#E5E5E5">this</font><font color="#CCCCCC"> much messages handlers</font><font color="#E5E5E5"> so the first</font>

283
00:15:26,980 --> 00:15:33,580
thing you you you have<font color="#E5E5E5"> to see that it's</font>

284
00:15:31,270 --> 00:15:35,829
<font color="#CCCCCC">going to it's</font><font color="#E5E5E5"> that there are two</font>

285
00:15:33,580 --> 00:15:38,320
arguments<font color="#E5E5E5"> for the function</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> and out</font>

286
00:15:35,830 --> 00:15:41,580
message<font color="#E5E5E5"> and it's going to take the in</font>

287
00:15:38,320 --> 00:15:44,940
message<font color="#E5E5E5"> in message taking</font><font color="#CCCCCC"> the message ID</font>

288
00:15:41,580 --> 00:15:48,340
<font color="#E5E5E5">subtracting some constant value and</font>

289
00:15:44,940 --> 00:15:51,310
eventually going to<font color="#E5E5E5"> check if it's</font><font color="#CCCCCC"> lower</font>

290
00:15:48,340 --> 00:15:55,030
equal some number which are which<font color="#E5E5E5"> is the</font>

291
00:15:51,310 --> 00:15:59,260
<font color="#E5E5E5">number of handles that are</font><font color="#CCCCCC"> available</font><font color="#E5E5E5"> for</font>

292
00:15:55,030 --> 00:16:02,110
this server<font color="#E5E5E5"> and it's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> acquire</font>

293
00:15:59,260 --> 00:16:05,439
<font color="#E5E5E5">the handler address the actual pointer</font>

294
00:16:02,110 --> 00:16:08,980
for the function and eventually<font color="#E5E5E5"> it's</font>

295
00:16:05,440 --> 00:16:11,020
going to<font color="#E5E5E5"> call it so the first thing was</font>

296
00:16:08,980 --> 00:16:13,540
<font color="#CCCCCC">to just</font><font color="#E5E5E5"> enumerate over the handlers and</font>

297
00:16:11,020 --> 00:16:17,650
see which handles are accessible<font color="#E5E5E5"> for us</font>

298
00:16:13,540 --> 00:16:19,689
<font color="#E5E5E5">from within the sandbox so it was</font><font color="#CCCCCC"> diving</font>

299
00:16:17,650 --> 00:16:23,819
<font color="#E5E5E5">into this VD decompression station</font>

300
00:16:19,690 --> 00:16:29,850
subsystem<font color="#CCCCCC"> strike</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> truck is</font>

301
00:16:23,820 --> 00:16:40,530
basically just<font color="#CCCCCC"> an array of different</font>

302
00:16:29,850 --> 00:16:46,750
function addresses sorry so I decided to

303
00:16:40,530 --> 00:16:49,569
<font color="#E5E5E5">focus on</font><font color="#CCCCCC"> X decode frame which was</font>

304
00:16:46,750 --> 00:16:53,830
basically the<font color="#E5E5E5"> actual logic of the</font>

305
00:16:49,570 --> 00:16:57,040
decompression session and what<font color="#E5E5E5"> XD cold</font>

306
00:16:53,830 --> 00:17:00,850
frame the exit code frame parameters are

307
00:16:57,040 --> 00:17:04,869
just an<font color="#E5E5E5"> in and out message so let's dive</font>

308
00:17:00,850 --> 00:17:07,780
into X decode frame X decode frame

309
00:17:04,869 --> 00:17:09,399
basically<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> back end of BTD convey</font>

310
00:17:07,780 --> 00:17:14,619
to decompression session decode frame

311
00:17:09,400 --> 00:17:17,410
<font color="#CCCCCC">and API call it is again</font><font color="#E5E5E5"> accessible from</font>

312
00:17:14,619 --> 00:17:19,479
within<font color="#E5E5E5"> the sandbox and</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> to decode</font>

313
00:17:17,410 --> 00:17:22,060
frames from serialized buffer and

314
00:17:19,480 --> 00:17:23,950
eventually it's going<font color="#E5E5E5"> to return message</font>

315
00:17:22,060 --> 00:17:28,089
with the result code back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> client</font>

316
00:17:23,950 --> 00:17:31,480
<font color="#E5E5E5">back to the application so it looked</font>

317
00:17:28,089 --> 00:17:34,330
<font color="#E5E5E5">like a really nice attack surface to my</font>

318
00:17:31,480 --> 00:17:36,640
opinion<font color="#CCCCCC"> placed so I decided</font><font color="#E5E5E5"> to</font>

319
00:17:34,330 --> 00:17:41,409
have a look over the<font color="#E5E5E5"> serialization</font>

320
00:17:36,640 --> 00:17:44,980
process<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> main goal</font><font color="#CCCCCC"> I had in</font><font color="#E5E5E5"> mind</font>

321
00:17:41,410 --> 00:17:47,680
<font color="#E5E5E5">was just to take manual analysis</font><font color="#CCCCCC"> over</font>

322
00:17:44,980 --> 00:17:51,700
the<font color="#E5E5E5"> serialization process intercepting</font>

323
00:17:47,680 --> 00:17:55,840
legitimate buffers because<font color="#CCCCCC"> I'm lazy for</font>

324
00:17:51,700 --> 00:17:59,260
going through<font color="#E5E5E5"> reversing all of</font><font color="#CCCCCC"> the</font>

325
00:17:55,840 --> 00:18:01,689
branches<font color="#CCCCCC"> there</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> modifying</font><font color="#E5E5E5"> corrupting</font>

326
00:17:59,260 --> 00:18:04,300
each<font color="#E5E5E5"> is realized buffer and eventually</font>

327
00:18:01,690 --> 00:18:07,540
replying get back to the two minutes

328
00:18:04,300 --> 00:18:11,169
<font color="#CCCCCC">already</font><font color="#E5E5E5"> and hopefully I will find just</font>

329
00:18:07,540 --> 00:18:13,800
bunch of<font color="#CCCCCC"> our</font><font color="#E5E5E5"> abilities there so let's</font>

330
00:18:11,170 --> 00:18:16,720
have an<font color="#E5E5E5"> overview over the decompressions</font>

331
00:18:13,800 --> 00:18:18,639
process first an applique when

332
00:18:16,720 --> 00:18:20,740
application wants<font color="#E5E5E5"> to use the compression</font>

333
00:18:18,640 --> 00:18:27,790
session is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> call the session</font>

334
00:18:20,740 --> 00:18:32,760
create API call it's going<font color="#CCCCCC"> to it's going</font>

335
00:18:27,790 --> 00:18:36,250
<font color="#E5E5E5">to send the math message with all the</font>

336
00:18:32,760 --> 00:18:38,140
with all the request parameters you made

337
00:18:36,250 --> 00:18:40,870
it's already on medicine server this

338
00:18:38,140 --> 00:18:44,980
<font color="#E5E5E5">side this message is going</font><font color="#CCCCCC"> to be handled</font>

339
00:18:40,870 --> 00:18:47,260
<font color="#CCCCCC">by the excrete</font><font color="#E5E5E5"> callback afterwards</font><font color="#CCCCCC"> when</font>

340
00:18:44,980 --> 00:18:50,890
<font color="#E5E5E5">application wants to decode</font><font color="#CCCCCC"> some frame</font>

341
00:18:47,260 --> 00:18:56,010
is going to serialize that frame<font color="#E5E5E5"> send it</font>

342
00:18:50,890 --> 00:18:56,010
with mock message<font color="#E5E5E5"> to XD code frame and</font>

343
00:18:57,900 --> 00:19:04,900
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> Sira the serialization</font>

344
00:19:01,510 --> 00:19:07,240
<font color="#CCCCCC">processes was just about</font><font color="#E5E5E5"> reversing the</font>

345
00:19:04,900 --> 00:19:10,980
function<font color="#E5E5E5"> this long name create sample</font>

346
00:19:07,240 --> 00:19:14,020
buffer from<font color="#CCCCCC"> seer life</font><font color="#E5E5E5"> blah blah blah and</font>

347
00:19:10,980 --> 00:19:17,290
<font color="#E5E5E5">it's just a</font><font color="#CCCCCC"> regular TLV or in that case</font>

348
00:19:14,020 --> 00:19:21,700
<font color="#E5E5E5">LTV type length</font><font color="#CCCCCC"> value a serialization</font>

349
00:19:17,290 --> 00:19:24,040
and the strike is pretty simple<font color="#E5E5E5"> and easy</font>

350
00:19:21,700 --> 00:19:26,230
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> four bytes that are declaring</font>

351
00:19:24,040 --> 00:19:29,320
the size of the<font color="#E5E5E5"> next node four bytes of</font>

352
00:19:26,230 --> 00:19:34,540
the<font color="#E5E5E5"> type of the node and it's going</font>

353
00:19:29,320 --> 00:19:39,460
<font color="#E5E5E5">nested to each node so basically all I</font>

354
00:19:34,540 --> 00:19:41,170
had to do was to implement to implement

355
00:19:39,460 --> 00:19:43,800
this realization<font color="#CCCCCC"> process I did this or</font>

356
00:19:41,170 --> 00:19:48,160
Python<font color="#E5E5E5"> just so I</font><font color="#CCCCCC"> could play with it</font>

357
00:19:43,800 --> 00:19:52,240
manually<font color="#E5E5E5"> or fuzzing it</font>

358
00:19:48,160 --> 00:19:54,790
<font color="#CCCCCC">though matically and i did the</font><font color="#E5E5E5"> same and</font>

359
00:19:52,240 --> 00:19:56,530
they also implemented<font color="#CCCCCC"> it</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> C so I could</font>

360
00:19:54,790 --> 00:19:59,080
<font color="#E5E5E5">create an application that will start</font>

361
00:19:56,530 --> 00:20:08,050
<font color="#E5E5E5">sending serialize buffers directly</font>

362
00:19:59,080 --> 00:20:10,139
without<font color="#E5E5E5"> all of the API checks so what I</font>

363
00:20:08,050 --> 00:20:12,370
was<font color="#CCCCCC"> trying to</font><font color="#E5E5E5"> do again it was the</font>

364
00:20:10,140 --> 00:20:14,350
<font color="#E5E5E5">modifier</font><font color="#CCCCCC"> I'm sorry</font>

365
00:20:12,370 --> 00:20:20,139
<font color="#E5E5E5">it was the intercept modify and replay</font>

366
00:20:14,350 --> 00:20:23,500
so all I had to<font color="#CCCCCC"> do is just intercepting</font>

367
00:20:20,140 --> 00:20:26,650
legitimate serialize buffers modifying

368
00:20:23,500 --> 00:20:29,590
those buffers on different places maybe

369
00:20:26,650 --> 00:20:31,780
the size<font color="#E5E5E5"> maybe the actual content it was</font>

370
00:20:29,590 --> 00:20:35,740
never interesting to modify that Monday

371
00:20:31,780 --> 00:20:39,480
or the type of the node<font color="#E5E5E5"> and eventually</font>

372
00:20:35,740 --> 00:20:43,180
<font color="#CCCCCC">replaying it back to XD code frame so</font>

373
00:20:39,480 --> 00:20:45,640
what I did<font color="#CCCCCC"> here was again first time I</font>

374
00:20:43,180 --> 00:20:49,720
ever<font color="#CCCCCC"> tried to do anything on iOS so I</font>

375
00:20:45,640 --> 00:20:52,150
just decided to fuzzy<font color="#CCCCCC"> because it might</font>

376
00:20:49,720 --> 00:20:55,530
work<font color="#E5E5E5"> and I want to realize if I'm having</font>

377
00:20:52,150 --> 00:20:58,750
at<font color="#E5E5E5"> least any case with this research so</font>

378
00:20:55,530 --> 00:21:02,790
what came out of<font color="#E5E5E5"> it was actually about</font>

379
00:20:58,750 --> 00:21:05,740
<font color="#CCCCCC">three</font><font color="#E5E5E5"> thousand</font><font color="#CCCCCC"> thirty</font><font color="#E5E5E5"> two crashes and</font>

380
00:21:02,790 --> 00:21:08,379
different and when I went through<font color="#E5E5E5"> the</font>

381
00:21:05,740 --> 00:21:11,470
crashes<font color="#CCCCCC"> I came</font><font color="#E5E5E5"> out with</font><font color="#CCCCCC"> 31 unique</font>

382
00:21:08,380 --> 00:21:15,280
<font color="#E5E5E5">crashes it's a lot it means a lot to me</font>

383
00:21:11,470 --> 00:21:17,800
<font color="#CCCCCC">and I started</font><font color="#E5E5E5"> to manually analysis each</font>

384
00:21:15,280 --> 00:21:21,070
one of them and they came<font color="#CCCCCC"> with some</font>

385
00:21:17,800 --> 00:21:25,810
story sets up and forgotten some naughty

386
00:21:21,070 --> 00:21:29,860
references some<font color="#CCCCCC"> use</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> free bugs some</font>

387
00:21:25,810 --> 00:21:34,600
<font color="#CCCCCC">out-of-bounds</font><font color="#E5E5E5"> read all right so it was</font>

388
00:21:29,860 --> 00:21:39,629
really<font color="#E5E5E5"> great</font><font color="#CCCCCC"> success for me and it was</font>

389
00:21:34,600 --> 00:21:43,000
about iOS<font color="#E5E5E5"> ten point three I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> and</font>

390
00:21:39,630 --> 00:21:48,100
while I was heading to<font color="#E5E5E5"> Vegas</font><font color="#CCCCCC"> to just</font>

391
00:21:43,000 --> 00:21:53,140
regular conferences waste of<font color="#CCCCCC"> time and in</font>

392
00:21:48,100 --> 00:21:56,469
<font color="#E5E5E5">Vegas and I I saw that Apple decided to</font>

393
00:21:53,140 --> 00:22:00,490
refactor some of<font color="#E5E5E5"> Medisave a day along</font>

394
00:21:56,470 --> 00:22:03,640
<font color="#E5E5E5">with</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> iPad multitasking stuff</font>

395
00:22:00,490 --> 00:22:07,120
so I decided to check my PLC code and

396
00:22:03,640 --> 00:22:08,860
see if anything is working but no Apple

397
00:22:07,120 --> 00:22:12,129
decided<font color="#CCCCCC"> to refactor all of their</font>

398
00:22:08,860 --> 00:22:18,250
callbacks<font color="#E5E5E5"> for some reason and I ended up</font>

399
00:22:12,130 --> 00:22:20,679
with<font color="#E5E5E5"> nothing probably so what I decided</font>

400
00:22:18,250 --> 00:22:25,179
to do was just instead<font color="#E5E5E5"> of going through</font>

401
00:22:20,679 --> 00:22:27,280
<font color="#E5E5E5">Mesa Verde again well just to continue</font>

402
00:22:25,179 --> 00:22:30,550
<font color="#E5E5E5">to the</font><font color="#CCCCCC"> next demo because</font><font color="#E5E5E5"> if I achieved</font>

403
00:22:27,280 --> 00:22:34,000
that<font color="#E5E5E5"> much only in a few months</font><font color="#CCCCCC"> I can do</font>

404
00:22:30,550 --> 00:22:37,059
much more in blue today<font color="#E5E5E5"> so velocity was</font>

405
00:22:34,000 --> 00:22:38,679
rebranded from<font color="#CCCCCC"> busy server it implements</font>

406
00:22:37,059 --> 00:22:42,040
<font color="#E5E5E5">the Bluetooth stack on day on the user</font>

407
00:22:38,679 --> 00:22:44,710
mode side and each process will do the

408
00:22:42,040 --> 00:22:47,409
dynamic communication using<font color="#CCCCCC"> bluetooth II</font>

409
00:22:44,710 --> 00:22:48,330
and it is some<font color="#E5E5E5"> kind of trusted broker or</font>

410
00:22:47,410 --> 00:22:54,190
call service

411
00:22:48,330 --> 00:22:58,030
so again in<font color="#CCCCCC"> order to understand if this</font>

412
00:22:54,190 --> 00:23:00,490
is a legitimate<font color="#CCCCCC"> attack surface I had to</font>

413
00:22:58,030 --> 00:23:03,850
understand why their<font color="#CCCCCC"> ability is</font><font color="#E5E5E5"> using a</font>

414
00:23:00,490 --> 00:23:06,580
lot of<font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> kit and if I will keep</font>

415
00:23:03,850 --> 00:23:10,510
communication<font color="#E5E5E5"> and I found that indeed</font>

416
00:23:06,580 --> 00:23:12,760
blue today is has a lot point of<font color="#CCCCCC"> context</font>

417
00:23:10,510 --> 00:23:16,629
between blue<font color="#CCCCCC"> 2d and all the other core</font>

418
00:23:12,760 --> 00:23:20,890
services and blue 2d and the kernel<font color="#E5E5E5"> so I</font>

419
00:23:16,630 --> 00:23:23,410
just took my<font color="#E5E5E5"> Ida Python Ida Python</font>

420
00:23:20,890 --> 00:23:26,620
skills and improved it a little<font color="#E5E5E5"> and I</font>

421
00:23:23,410 --> 00:23:30,760
came out<font color="#CCCCCC"> with a way to automate all of</font>

422
00:23:26,620 --> 00:23:34,479
the<font color="#E5E5E5"> mock message sending mock message</font>

423
00:23:30,760 --> 00:23:36,730
<font color="#E5E5E5">handler sending messages and I could</font>

424
00:23:34,480 --> 00:23:39,429
just<font color="#E5E5E5"> extract all the</font><font color="#CCCCCC"> handlers with all</font>

425
00:23:36,730 --> 00:23:42,130
the arguments<font color="#E5E5E5"> to each mock message</font>

426
00:23:39,429 --> 00:23:48,429
struct so I could easily automate the

427
00:23:42,130 --> 00:23:51,370
process now let's dive in to two

428
00:23:48,429 --> 00:23:55,690
different callbacks ahead which are the

429
00:23:51,370 --> 00:24:02,409
BT local device get per<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> again</font>

430
00:23:55,690 --> 00:24:05,559
<font color="#E5E5E5">just to put it in this muck muck endler</font>

431
00:24:02,410 --> 00:24:08,530
is being executed under under brutal day

432
00:24:05,559 --> 00:24:10,300
<font color="#E5E5E5">and it's getting</font><font color="#CCCCCC"> to parameters again the</font>

433
00:24:08,530 --> 00:24:13,500
in and the out message just<font color="#E5E5E5"> like in -</font>

434
00:24:10,300 --> 00:24:13,500
<font color="#E5E5E5">every day and</font>

435
00:24:13,649 --> 00:24:21,340
let's dive in to the internal

436
00:24:16,619 --> 00:24:24,849
<font color="#CCCCCC">implementation of get pair devices which</font>

437
00:24:21,340 --> 00:24:26,978
is<font color="#E5E5E5"> getting a stiff argument data that is</font>

438
00:24:24,849 --> 00:24:31,779
absolutely controlled by us by sandbox

439
00:24:26,979 --> 00:24:35,399
application<font color="#E5E5E5"> so take a look at it maybe</font>

440
00:24:31,779 --> 00:24:38,499
<font color="#E5E5E5">you</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> find what's going on here so</font>

441
00:24:35,399 --> 00:24:41,889
let's go<font color="#E5E5E5"> through</font><font color="#CCCCCC"> it the fifth argument</font>

442
00:24:38,499 --> 00:24:43,929
<font color="#E5E5E5">is controlled by us and afterwards it's</font>

443
00:24:41,889 --> 00:24:46,840
going to do something it was<font color="#E5E5E5"> pretty odd</font>

444
00:24:43,929 --> 00:24:50,549
at first<font color="#CCCCCC"> sight</font><font color="#E5E5E5"> it's going to reference</font>

445
00:24:46,840 --> 00:24:55,359
<font color="#E5E5E5">the first local variable on</font><font color="#CCCCCC"> the stack</font>

446
00:24:50,549 --> 00:24:59,220
subtracting funded address<font color="#E5E5E5"> a data this</font>

447
00:24:55,359 --> 00:25:02,439
is<font color="#E5E5E5"> absolutely controlled by us and</font>

448
00:24:59,220 --> 00:25:07,960
eventually it's going<font color="#CCCCCC"> to put it in some</font>

449
00:25:02,440 --> 00:25:09,580
pointer on<font color="#CCCCCC"> the stack so what happened</font>

450
00:25:07,960 --> 00:25:13,090
<font color="#E5E5E5">tried to do here</font><font color="#CCCCCC"> was to</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> look</font>

451
00:25:09,580 --> 00:25:15,939
dynamically allocate every array on the

452
00:25:13,090 --> 00:25:19,149
stack<font color="#E5E5E5"> and let's have a look over the</font>

453
00:25:15,940 --> 00:25:21,659
<font color="#E5E5E5">disassembly of</font><font color="#CCCCCC"> this we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see that</font><font color="#E5E5E5"> we</font>

454
00:25:19,149 --> 00:25:24,399
they<font color="#CCCCCC"> are taking the fifth argument</font>

455
00:25:21,659 --> 00:25:26,519
subtracting taking the stack pointer

456
00:25:24,399 --> 00:25:29,649
which is the first local variable

457
00:25:26,519 --> 00:25:33,519
<font color="#E5E5E5">subtracting from the stack pointer data</font>

458
00:25:29,649 --> 00:25:34,149
is controlled<font color="#E5E5E5"> by us and just</font>

459
00:25:33,519 --> 00:25:36,279
<font color="#CCCCCC">good-evening</font>

460
00:25:34,149 --> 00:25:41,678
it back in the stack point in the stack

461
00:25:36,279 --> 00:25:44,889
pointer<font color="#E5E5E5"> so it just meant it just means</font>

462
00:25:41,679 --> 00:25:48,220
that<font color="#E5E5E5"> we have full control over the stack</font>

463
00:25:44,889 --> 00:25:52,299
pointer<font color="#CCCCCC"> relatively so it is closely to</font>

464
00:25:48,220 --> 00:25:54,940
happen<font color="#E5E5E5"> and I acknowledge it it is</font>

465
00:25:52,299 --> 00:25:57,489
relative<font color="#E5E5E5"> control stack of the</font><font color="#CCCCCC"> relative</font>

466
00:25:54,940 --> 00:25:59,379
control over the stack<font color="#CCCCCC"> pointer</font><font color="#E5E5E5"> and it</font>

467
00:25:57,489 --> 00:26:01,720
eventually could lead to an info leak

468
00:25:59,379 --> 00:26:05,619
inside of the internal implementation<font color="#CCCCCC"> of</font>

469
00:26:01,720 --> 00:26:11,919
the<font color="#E5E5E5"> catbird get per devices and the same</font>

470
00:26:05,619 --> 00:26:14,830
bug is being<font color="#E5E5E5"> exists on all of the sorry</font>

471
00:26:11,919 --> 00:26:18,879
<font color="#CCCCCC">in six different</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> to mark</font><font color="#E5E5E5"> callbacks</font>

472
00:26:14,830 --> 00:26:22,119
so<font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> fixed it and</font><font color="#CCCCCC"> fix it</font><font color="#E5E5E5"> just by</font>

473
00:26:18,879 --> 00:26:24,699
checking<font color="#E5E5E5"> the the size of the data</font><font color="#CCCCCC"> in</font>

474
00:26:22,119 --> 00:26:27,010
<font color="#E5E5E5">this control whereas which they limited</font>

475
00:26:24,700 --> 00:26:30,530
to<font color="#E5E5E5"> 100</font>

476
00:26:27,010 --> 00:26:34,850
so let's talk<font color="#E5E5E5"> for a moment understand</font>

477
00:26:30,530 --> 00:26:38,570
how blue<font color="#E5E5E5"> to the communication is working</font>

478
00:26:34,850 --> 00:26:40,490
with all the<font color="#CCCCCC"> each client so</font><font color="#E5E5E5"> plot2d just</font>

479
00:26:38,570 --> 00:26:42,830
<font color="#E5E5E5">hold the list of all the touch clients</font>

480
00:26:40,490 --> 00:26:45,590
just<font color="#E5E5E5"> like the other</font><font color="#CCCCCC"> diamonds or even</font>

481
00:26:42,830 --> 00:26:49,159
<font color="#E5E5E5">regular applications and whenever</font>

482
00:26:45,590 --> 00:26:53,870
application or a demo<font color="#E5E5E5"> wishes to use blue</font>

483
00:26:49,160 --> 00:26:59,330
2d capabilities it's going to to call<font color="#CCCCCC"> bt</font>

484
00:26:53,870 --> 00:27:02,479
session touch and blue<font color="#CCCCCC"> 2d will hold that</font>

485
00:26:59,330 --> 00:27:07,070
all of the session<font color="#CCCCCC"> information</font><font color="#E5E5E5"> within</font>

486
00:27:02,480 --> 00:27:09,080
blue to the memory and<font color="#CCCCCC"> afterwards part</font>

487
00:27:07,070 --> 00:27:13,460
<font color="#E5E5E5">of the initialization process showing</font>

488
00:27:09,080 --> 00:27:17,419
even<font color="#E5E5E5"> as firm and pay</font><font color="#CCCCCC"> attention</font><font color="#E5E5E5"> to this</font>

489
00:27:13,460 --> 00:27:20,690
<font color="#CCCCCC">one it's going</font><font color="#E5E5E5"> to call</font><font color="#CCCCCC"> bt local device</font>

490
00:27:17,420 --> 00:27:27,740
at Corbett's<font color="#E5E5E5"> basically it's going to ask</font>

491
00:27:20,690 --> 00:27:31,550
from<font color="#E5E5E5"> routine to hold</font><font color="#CCCCCC"> address address of</font>

492
00:27:27,740 --> 00:27:34,370
the event callback handler<font color="#E5E5E5"> in the</font>

493
00:27:31,550 --> 00:27:37,460
address<font color="#CCCCCC"> space of</font><font color="#E5E5E5"> sharing d and it's</font>

494
00:27:34,370 --> 00:27:42,320
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> hold that address within blue</font>

495
00:27:37,460 --> 00:27:45,940
<font color="#CCCCCC">2d memory so whenever an event is going</font>

496
00:27:42,320 --> 00:27:48,889
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> called</font><font color="#CCCCCC"> I mean one</font><font color="#E5E5E5"> sharing D</font>

497
00:27:45,940 --> 00:27:51,830
attached to blue<font color="#CCCCCC"> 2d</font><font color="#E5E5E5"> and blue to define</font>

498
00:27:48,890 --> 00:27:53,900
new event<font color="#E5E5E5"> that it needs to</font><font color="#CCCCCC"> notify and</font>

499
00:27:51,830 --> 00:27:59,780
notify sharing<font color="#E5E5E5"> be it's going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> tell</font>

500
00:27:53,900 --> 00:28:04,250
sharing<font color="#CCCCCC"> D which what is the handler for</font>

501
00:27:59,780 --> 00:28:07,070
each event<font color="#CCCCCC"> message so let's have a look</font>

502
00:28:04,250 --> 00:28:10,280
over<font color="#CCCCCC"> the BT local device at</font><font color="#E5E5E5"> callbacks</font>

503
00:28:07,070 --> 00:28:12,590
implementation so that callbacks

504
00:28:10,280 --> 00:28:14,149
internal implementation<font color="#E5E5E5"> just getting</font>

505
00:28:12,590 --> 00:28:18,970
three parameters that are<font color="#E5E5E5"> fully</font>

506
00:28:14,150 --> 00:28:22,580
controlled by us by<font color="#E5E5E5"> the attacker and</font>

507
00:28:18,970 --> 00:28:26,270
<font color="#CCCCCC">basically it's the session session</font>

508
00:28:22,580 --> 00:28:33,740
<font color="#E5E5E5">token' it's the address</font><font color="#CCCCCC"> that we want to</font>

509
00:28:26,270 --> 00:28:35,720
register<font color="#E5E5E5"> and the actual data so let's I</font>

510
00:28:33,740 --> 00:28:38,210
decided to take<font color="#CCCCCC"> a look</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> this session</font>

511
00:28:35,720 --> 00:28:40,010
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it seemed way to me</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> just saw</font>

512
00:28:38,210 --> 00:28:43,640
<font color="#CCCCCC">that</font><font color="#E5E5E5"> in Mesa Verde they decided</font>

513
00:28:40,010 --> 00:28:46,280
check if had to check the session by the

514
00:28:43,640 --> 00:28:49,040
local port<font color="#E5E5E5"> and here they using some</font>

515
00:28:46,280 --> 00:28:51,379
session<font color="#CCCCCC"> token' so how they</font><font color="#E5E5E5"> are they</font>

516
00:28:49,040 --> 00:28:52,909
verifying the session<font color="#E5E5E5"> basically they're</font>

517
00:28:51,380 --> 00:28:56,140
<font color="#CCCCCC">just taking</font><font color="#E5E5E5"> the session token' and</font>

518
00:28:52,910 --> 00:28:58,910
enumerated<font color="#E5E5E5"> over</font><font color="#CCCCCC"> all of the sessions</font><font color="#E5E5E5"> and</font>

519
00:28:56,140 --> 00:29:01,520
checking if the<font color="#E5E5E5"> session token' exists in</font>

520
00:28:58,910 --> 00:29:06,410
all of<font color="#E5E5E5"> the sessions if not it's going to</font>

521
00:29:01,520 --> 00:29:10,790
return<font color="#E5E5E5"> seven which</font><font color="#CCCCCC"> is I don't know which</font>

522
00:29:06,410 --> 00:29:15,110
which session<font color="#E5E5E5"> is it it is so I had an</font>

523
00:29:10,790 --> 00:29:19,820
idea let's try as a malicious

524
00:29:15,110 --> 00:29:21,830
application<font color="#E5E5E5"> let's try to add callbacks</font>

525
00:29:19,820 --> 00:29:25,820
<font color="#E5E5E5">and to brute-force that session token'</font>

526
00:29:21,830 --> 00:29:32,629
if I'm succeeding<font color="#CCCCCC"> I'm being able to let</font>

527
00:29:25,820 --> 00:29:37,310
blue today add new<font color="#E5E5E5"> callback that may be</font>

528
00:29:32,630 --> 00:29:40,760
invoked<font color="#E5E5E5"> a new callback on the address</font>

529
00:29:37,310 --> 00:29:44,860
space<font color="#E5E5E5"> of another process and I will</font>

530
00:29:40,760 --> 00:29:48,800
allegedly<font color="#CCCCCC"> be able to make other demons</font>

531
00:29:44,860 --> 00:29:52,040
jump to arbitrarily address that is

532
00:29:48,800 --> 00:29:56,240
controlled by me<font color="#E5E5E5"> so I</font><font color="#CCCCCC"> took a look over</font>

533
00:29:52,040 --> 00:29:58,700
there it's over<font color="#CCCCCC"> the decision talk</font>

534
00:29:56,240 --> 00:30:02,150
<font color="#E5E5E5">initialization process and I found out</font>

535
00:29:58,700 --> 00:30:04,870
that basically this is<font color="#E5E5E5"> all I needed to</font>

536
00:30:02,150 --> 00:30:08,470
<font color="#E5E5E5">brute was the token just two bytes and</font>

537
00:30:04,870 --> 00:30:11,179
someone<font color="#E5E5E5"> with this is changing so</font>

538
00:30:08,470 --> 00:30:14,150
basically this<font color="#CCCCCC"> is all the POC code for</font>

539
00:30:11,180 --> 00:30:17,510
the next one<font color="#E5E5E5"> so I decided</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> execute it</font>

540
00:30:14,150 --> 00:30:22,940
<font color="#CCCCCC">and the results were just</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> will I</font>

541
00:30:17,510 --> 00:30:26,330
call<font color="#E5E5E5"> it weird because what happened next</font>

542
00:30:22,940 --> 00:30:29,480
was I got<font color="#E5E5E5"> on the crash reports that all</font>

543
00:30:26,330 --> 00:30:34,159
of the demons on the<font color="#CCCCCC"> iOS device just</font>

544
00:30:29,480 --> 00:30:36,920
crashed<font color="#E5E5E5"> and they all jumped to address</font>

545
00:30:34,160 --> 00:30:39,980
that was just controlled by me and I

546
00:30:36,920 --> 00:30:45,650
also had control over<font color="#E5E5E5"> few of the</font>

547
00:30:39,980 --> 00:30:48,890
registers so basically that's it<font color="#CCCCCC"> it was</font>

548
00:30:45,650 --> 00:30:52,420
that<font color="#CCCCCC"> easy and I beliefs</font><font color="#E5E5E5"> Ida to fix this</font>

549
00:30:48,890 --> 00:30:52,420
one with

550
00:30:52,840 --> 00:31:01,040
with initialization initializing the

551
00:30:56,810 --> 00:31:05,450
session<font color="#CCCCCC"> token' with some random</font><font color="#E5E5E5"> 32-bit</font>

552
00:31:01,040 --> 00:31:06,080
instead of<font color="#E5E5E5"> two bytes and so they changed</font>

553
00:31:05,450 --> 00:31:11,600
it a little

554
00:31:06,080 --> 00:31:13,490
and now<font color="#E5E5E5"> to probably a</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> I got a</font>

555
00:31:11,600 --> 00:31:19,090
lot on<font color="#E5E5E5"> Twitter is it going to be</font>

556
00:31:13,490 --> 00:31:21,590
<font color="#CCCCCC">jailbreak then</font><font color="#E5E5E5"> no there are new ones and</font>

557
00:31:19,090 --> 00:31:24,409
there are some references<font color="#CCCCCC"> I think that</font>

558
00:31:21,590 --> 00:31:27,439
you should all know if you're willing to

559
00:31:24,410 --> 00:31:32,600
<font color="#E5E5E5">start researching over iOS you can find</font>

560
00:31:27,440 --> 00:31:35,210
a more extensive code of the<font color="#CCCCCC"> PLC of the</font>

561
00:31:32,600 --> 00:31:37,159
last<font color="#CCCCCC"> vulnerability</font><font color="#E5E5E5"> on my github and I</font>

562
00:31:35,210 --> 00:31:39,620
want to share some credits to few

563
00:31:37,160 --> 00:31:42,770
colleagues first<font color="#E5E5E5"> is imperative</font><font color="#CCCCCC"> for the</font>

564
00:31:39,620 --> 00:31:46,520
paycheck and<font color="#E5E5E5"> you're not only been for</font>

565
00:31:42,770 --> 00:31:49,010
making a lot<font color="#CCCCCC"> of great references Adam</font>

566
00:31:46,520 --> 00:31:53,930
<font color="#CCCCCC">Tamara Nikias which</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> calls from my</font>

567
00:31:49,010 --> 00:32:02,120
team and basically that's it<font color="#E5E5E5"> thank you</font>

568
00:31:53,930 --> 00:32:04,270
<font color="#CCCCCC">and if you have any questions so thank</font>

569
00:32:02,120 --> 00:32:04,270
you

