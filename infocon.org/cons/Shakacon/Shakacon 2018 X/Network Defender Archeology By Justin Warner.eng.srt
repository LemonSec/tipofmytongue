1
00:00:00,060 --> 00:00:05,609
good morning everybody<font color="#E5E5E5"> so my name is</font>

2
00:00:03,959 --> 00:00:07,350
Justin<font color="#E5E5E5"> Warner I'm a technical director</font>

3
00:00:05,609 --> 00:00:07,589
<font color="#CCCCCC">at a small little startup in Seattle</font>

4
00:00:07,350 --> 00:00:09,629
called

5
00:00:07,589 --> 00:00:11,250
<font color="#CCCCCC">ice berg I kind of focus on threat</font>

6
00:00:09,630 --> 00:00:12,719
research<font color="#E5E5E5"> and</font><font color="#CCCCCC"> detection it</font><font color="#E5E5E5"> spent a lot of</font>

7
00:00:11,250 --> 00:00:14,460
time digging through packets being<font color="#E5E5E5"> a</font>

8
00:00:12,719 --> 00:00:16,049
<font color="#CCCCCC">network</font><font color="#E5E5E5"> nerd</font><font color="#CCCCCC"> it's been a couple years in</font>

9
00:00:14,460 --> 00:00:16,560
<font color="#E5E5E5">the Air Force</font><font color="#CCCCCC"> never</font><font color="#E5E5E5"> got stationed in</font>

10
00:00:16,049 --> 00:00:18,330
<font color="#CCCCCC">Hawaii</font>

11
00:00:16,560 --> 00:00:21,570
unfortunately spent all my time<font color="#E5E5E5"> at an</font>

12
00:00:18,330 --> 00:00:23,130
army<font color="#E5E5E5"> base</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then I did some years</font><font color="#CCCCCC"> of</font>

13
00:00:21,570 --> 00:00:24,630
red teaming which is where I got a lot

14
00:00:23,130 --> 00:00:26,730
of<font color="#CCCCCC"> inspiration over</font><font color="#E5E5E5"> the work I do now</font>

15
00:00:24,630 --> 00:00:31,470
basically<font color="#CCCCCC"> breaking into companies and</font>

16
00:00:26,730 --> 00:00:33,260
large<font color="#E5E5E5"> fortune 100</font><font color="#CCCCCC"> organizations I have a</font>

17
00:00:31,470 --> 00:00:35,339
<font color="#CCCCCC">beautiful</font><font color="#E5E5E5"> wife and young daughter</font>

18
00:00:33,260 --> 00:00:36,930
<font color="#CCCCCC">they're back home they weren't able to</font>

19
00:00:35,340 --> 00:00:39,780
come<font color="#E5E5E5"> along unfortunately she had to work</font>

20
00:00:36,930 --> 00:00:41,489
as well<font color="#E5E5E5"> this is Alex he did a lot of</font>

21
00:00:39,780 --> 00:00:42,690
<font color="#E5E5E5">research</font><font color="#CCCCCC"> with me on this so kind of</font>

22
00:00:41,489 --> 00:00:45,149
<font color="#E5E5E5">giving him a</font><font color="#CCCCCC"> shout-out he wasn't able to</font>

23
00:00:42,690 --> 00:00:48,030
make<font color="#CCCCCC"> it today</font><font color="#E5E5E5"> he's a security engineer</font>

24
00:00:45,149 --> 00:00:49,800
<font color="#CCCCCC">on</font><font color="#E5E5E5"> our team</font><font color="#CCCCCC"> in turn turned engineer so</font>

25
00:00:48,030 --> 00:00:53,190
young guy<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> field but</font><font color="#CCCCCC"> just</font>

26
00:00:49,800 --> 00:00:54,690
brilliant in terms<font color="#CCCCCC"> of packet space</font><font color="#E5E5E5"> it's</font>

27
00:00:53,190 --> 00:00:57,300
quick story<font color="#CCCCCC"> to hopefully lighten up the</font>

28
00:00:54,690 --> 00:00:58,709
crowd<font color="#E5E5E5"> I arrived on Monday</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> all</font>

29
00:00:57,300 --> 00:01:00,629
<font color="#CCCCCC">excited normally when I</font><font color="#E5E5E5"> come here with</font>

30
00:00:58,710 --> 00:01:02,250
<font color="#E5E5E5">my wife she's from Oahu</font><font color="#CCCCCC"> I get to do no</font>

31
00:01:00,629 --> 00:01:06,390
tourist stuff because it's all like

32
00:01:02,250 --> 00:01:08,040
local life restaurants family in-laws so

33
00:01:06,390 --> 00:01:09,960
I got to come<font color="#CCCCCC"> out here by</font><font color="#E5E5E5"> myself I lined</font>

34
00:01:08,040 --> 00:01:11,460
up<font color="#E5E5E5"> a whole slew of activities I'm gonna</font>

35
00:01:09,960 --> 00:01:13,229
hit every hike I've ever wanted<font color="#CCCCCC"> to hike</font>

36
00:01:11,460 --> 00:01:15,809
and<font color="#E5E5E5"> I'm gonna take a ride in a</font>

37
00:01:13,229 --> 00:01:17,640
<font color="#CCCCCC">helicopter and</font><font color="#E5E5E5"> all these things</font><font color="#CCCCCC"> I wish I</font>

38
00:01:15,810 --> 00:01:19,619
would have<font color="#E5E5E5"> done</font><font color="#CCCCCC"> that after this talk</font><font color="#E5E5E5"> cuz</font>

39
00:01:17,640 --> 00:01:21,479
my legs are dead but I was able<font color="#E5E5E5"> to get</font>

40
00:01:19,619 --> 00:01:23,400
<font color="#E5E5E5">some</font><font color="#CCCCCC"> very good</font><font color="#E5E5E5"> views so just know as I</font>

41
00:01:21,479 --> 00:01:25,890
strut around<font color="#E5E5E5"> up here</font><font color="#CCCCCC"> I'm feeling the</font>

42
00:01:23,400 --> 00:01:27,210
pain<font color="#CCCCCC"> I want to give a special shout out</font>

43
00:01:25,890 --> 00:01:29,520
<font color="#CCCCCC">to all</font><font color="#E5E5E5"> the people</font><font color="#CCCCCC"> who influence</font><font color="#E5E5E5"> this</font>

44
00:01:27,210 --> 00:01:31,589
presentation research nowadays is pretty

45
00:01:29,520 --> 00:01:33,210
<font color="#E5E5E5">much never original</font><font color="#CCCCCC"> you're always</font>

46
00:01:31,590 --> 00:01:34,770
<font color="#E5E5E5">learning from somebody</font><font color="#CCCCCC"> whether</font><font color="#E5E5E5"> it's a</font>

47
00:01:33,210 --> 00:01:36,658
thread actor or others<font color="#E5E5E5"> or</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> space</font>

48
00:01:34,770 --> 00:01:38,250
so I want<font color="#E5E5E5"> to give a call out to</font><font color="#CCCCCC"> all</font>

49
00:01:36,659 --> 00:01:39,810
these<font color="#E5E5E5"> folks who really kind of gave me</font>

50
00:01:38,250 --> 00:01:41,840
the<font color="#CCCCCC"> inspiration</font><font color="#E5E5E5"> they did a lot of the</font>

51
00:01:39,810 --> 00:01:44,759
offensive work that led to<font color="#E5E5E5"> this research</font>

52
00:01:41,840 --> 00:01:46,020
so let's start<font color="#E5E5E5"> with a story</font><font color="#CCCCCC"> so why are</font>

53
00:01:44,759 --> 00:01:48,090
<font color="#CCCCCC">we here what is this talk gonna be all</font>

54
00:01:46,020 --> 00:01:50,130
about<font color="#CCCCCC"> well first it's the 90s we got</font>

55
00:01:48,090 --> 00:01:51,810
asked we had to go back<font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> there are</font>

56
00:01:50,130 --> 00:01:54,420
these<font color="#E5E5E5"> really cool movies things like</font>

57
00:01:51,810 --> 00:01:55,799
hackers<font color="#E5E5E5"> old computers that some people</font>

58
00:01:54,420 --> 00:01:56,600
might not<font color="#CCCCCC"> even</font><font color="#E5E5E5"> recognize depending how</font>

59
00:01:55,799 --> 00:02:00,060
old you are

60
00:01:56,600 --> 00:02:03,059
<font color="#CCCCCC">windows 3-1 Windows 95 we start</font>

61
00:02:00,060 --> 00:02:05,060
progressing<font color="#E5E5E5"> getting better gooeys</font><font color="#CCCCCC"> funny</font>

62
00:02:03,060 --> 00:02:07,380
books with dogs on them called<font color="#E5E5E5"> decom</font>

63
00:02:05,060 --> 00:02:08,818
<font color="#E5E5E5">don't know why they chose dogs but it's</font>

64
00:02:07,380 --> 00:02:11,250
a great<font color="#E5E5E5"> cover</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is actually the book</font>

65
00:02:08,818 --> 00:02:13,410
<font color="#E5E5E5">I read to like learn this material it's</font>

66
00:02:11,250 --> 00:02:13,830
a fantastic<font color="#E5E5E5"> book</font><font color="#CCCCCC"> and then we progressed</font>

67
00:02:13,410 --> 00:02:15,900
the modern

68
00:02:13,830 --> 00:02:18,300
when<font color="#E5E5E5"> V</font><font color="#CCCCCC"> calm</font><font color="#E5E5E5"> is no longer just</font><font color="#CCCCCC"> a protocol</font>

69
00:02:15,900 --> 00:02:19,890
<font color="#E5E5E5">it's being used it's being abused</font><font color="#CCCCCC"> so</font>

70
00:02:18,300 --> 00:02:21,750
there's people like Matt Nelson<font color="#CCCCCC"> goes by</font>

71
00:02:19,890 --> 00:02:23,279
enigma<font color="#E5E5E5"> writing a whole bunch of blog</font>

72
00:02:21,750 --> 00:02:26,550
post on how<font color="#E5E5E5"> attackers can use this</font>

73
00:02:23,280 --> 00:02:30,510
protocol<font color="#CCCCCC"> great post by cyber reason over</font>

74
00:02:26,550 --> 00:02:31,770
detailing all of this another post again

75
00:02:30,510 --> 00:02:34,079
just continuing to<font color="#E5E5E5"> be abused by</font>

76
00:02:31,770 --> 00:02:36,900
attackers<font color="#CCCCCC"> it's been</font><font color="#E5E5E5"> covered by mitre</font>

77
00:02:34,080 --> 00:02:38,850
attack it's a<font color="#E5E5E5"> well-known</font><font color="#CCCCCC"> technique</font><font color="#E5E5E5"> it's</font>

78
00:02:36,900 --> 00:02:40,350
been used<font color="#E5E5E5"> by</font><font color="#CCCCCC"> apt 33</font><font color="#E5E5E5"> and a</font><font color="#CCCCCC"> couple of the</font>

79
00:02:38,850 --> 00:02:42,180
threat groups<font color="#CCCCCC"> to</font><font color="#E5E5E5"> fire</font><font color="#CCCCCC"> AI tracks and</font>

80
00:02:40,350 --> 00:02:44,760
<font color="#E5E5E5">other people report so it's being used</font>

81
00:02:42,180 --> 00:02:46,590
<font color="#E5E5E5">in the wild</font><font color="#CCCCCC"> and just last</font><font color="#E5E5E5"> week I was</font>

82
00:02:44,760 --> 00:02:48,630
<font color="#CCCCCC">lucky enough on Friday thinking I would</font>

83
00:02:46,590 --> 00:02:50,130
take Friday off before<font color="#E5E5E5"> my trip somebody</font>

84
00:02:48,630 --> 00:02:52,440
dropped a new lateral spread technique

85
00:02:50,130 --> 00:02:55,410
using<font color="#CCCCCC"> decomp</font><font color="#E5E5E5"> so I got to spend my entire</font>

86
00:02:52,440 --> 00:02:59,640
<font color="#CCCCCC">day off</font><font color="#E5E5E5"> researching and making sure my</font>

87
00:02:55,410 --> 00:03:00,810
presentation wasn't<font color="#CCCCCC"> a giant lie so kind</font>

88
00:02:59,640 --> 00:03:02,549
of<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> back a while we're here it's</font>

89
00:03:00,810 --> 00:03:05,430
<font color="#CCCCCC">gonna be a quick</font><font color="#E5E5E5"> one a lot</font><font color="#CCCCCC"> of run a</font>

90
00:03:02,550 --> 00:03:08,700
couple<font color="#E5E5E5"> times essentially attackers using</font>

91
00:03:05,430 --> 00:03:10,470
<font color="#CCCCCC">command-line tools</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> powershell notably</font>

92
00:03:08,700 --> 00:03:11,880
or just their own native applications

93
00:03:10,470 --> 00:03:14,520
<font color="#E5E5E5">they can</font><font color="#CCCCCC"> leverage a protocol</font><font color="#E5E5E5"> called</font>

94
00:03:11,880 --> 00:03:16,890
<font color="#E5E5E5">decom</font><font color="#CCCCCC"> to cause command execution</font><font color="#E5E5E5"> on a</font>

95
00:03:14,520 --> 00:03:19,530
remote<font color="#CCCCCC"> system</font><font color="#E5E5E5"> the entire interaction on</font>

96
00:03:16,890 --> 00:03:20,910
<font color="#CCCCCC">the network will happen via decom</font><font color="#E5E5E5"> a</font>

97
00:03:19,530 --> 00:03:22,890
normal<font color="#CCCCCC"> Windows protocol that's been</font>

98
00:03:20,910 --> 00:03:26,220
<font color="#CCCCCC">built-in since early days</font><font color="#E5E5E5"> of Windows</font>

99
00:03:22,890 --> 00:03:27,958
very few people think it odd you'll note

100
00:03:26,220 --> 00:03:30,660
that<font color="#E5E5E5"> when this slide right here</font><font color="#CCCCCC"> the top</font>

101
00:03:27,959 --> 00:03:33,000
<font color="#E5E5E5">of the screen here</font><font color="#CCCCCC"> is bro IDs</font><font color="#E5E5E5"> running</font>

102
00:03:30,660 --> 00:03:34,290
capturing all the SMB RPC<font color="#E5E5E5"> in the bottom</font>

103
00:03:33,000 --> 00:03:36,180
part of the<font color="#E5E5E5"> screen is Cercado of the</font>

104
00:03:34,290 --> 00:03:38,489
standard rule set<font color="#CCCCCC"> what you'll hopefully</font>

105
00:03:36,180 --> 00:03:40,500
see is that Cercado doesn't throw any

106
00:03:38,489 --> 00:03:41,820
alerts by common lateral spread

107
00:03:40,500 --> 00:03:45,180
techniques that have been<font color="#E5E5E5"> documented for</font>

108
00:03:41,820 --> 00:03:47,100
a couple<font color="#CCCCCC"> years</font><font color="#E5E5E5"> and bro produces really</font>

109
00:03:45,180 --> 00:03:50,100
nothing of any<font color="#E5E5E5"> value so if you look at</font>

110
00:03:47,100 --> 00:03:52,350
<font color="#E5E5E5">all the log output here</font><font color="#CCCCCC"> you see one</font>

111
00:03:50,100 --> 00:03:54,329
called a function and then a whole<font color="#CCCCCC"> bunch</font>

112
00:03:52,350 --> 00:03:56,459
of unknowns there literally<font color="#E5E5E5"> labeled</font>

113
00:03:54,330 --> 00:03:57,870
unknown what<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> come to find</font><font color="#CCCCCC"> out</font>

114
00:03:56,459 --> 00:04:00,090
<font color="#E5E5E5">later as these</font><font color="#CCCCCC"> are actually incorrectly</font>

115
00:03:57,870 --> 00:04:02,790
parsed in fact so<font color="#CCCCCC"> it's mislabeling</font>

116
00:04:00,090 --> 00:04:05,250
events<font color="#CCCCCC"> so</font><font color="#E5E5E5"> people are not really able to</font>

117
00:04:02,790 --> 00:04:07,859
<font color="#E5E5E5">trust their defensive tools for attack</font>

118
00:04:05,250 --> 00:04:10,320
techniques<font color="#E5E5E5"> like this again it's been</font>

119
00:04:07,860 --> 00:04:12,420
abused<font color="#CCCCCC"> by adversaries and everyone talks</font>

120
00:04:10,320 --> 00:04:14,430
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> that's because in</font>

121
00:04:12,420 --> 00:04:16,019
point<font color="#E5E5E5"> has been all the</font><font color="#CCCCCC"> rage lately</font><font color="#E5E5E5"> with</font>

122
00:04:14,430 --> 00:04:19,019
<font color="#E5E5E5">all the different</font><font color="#CCCCCC"> tools</font><font color="#E5E5E5"> coming out both</font>

123
00:04:16,019 --> 00:04:20,850
paid in public<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's important that</font>

124
00:04:19,019 --> 00:04:22,470
we<font color="#CCCCCC"> have a balanced approach</font><font color="#E5E5E5"> and so this</font>

125
00:04:20,850 --> 00:04:26,220
is going<font color="#E5E5E5"> to be solely focused pretty</font>

126
00:04:22,470 --> 00:04:27,650
much on the network side<font color="#CCCCCC"> of this so kind</font>

127
00:04:26,220 --> 00:04:28,759
of diving<font color="#E5E5E5"> it on a 101</font>

128
00:04:27,650 --> 00:04:30,380
these are the books<font color="#E5E5E5"> where we learn this</font>

129
00:04:28,759 --> 00:04:31,669
there's we read a couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these note</font>

130
00:04:30,380 --> 00:04:33,080
that these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> older than</font><font color="#CCCCCC"> the</font>

131
00:04:31,669 --> 00:04:36,139
partner<font color="#CCCCCC"> I worked on this presentation</font>

132
00:04:33,080 --> 00:04:38,180
with these<font color="#E5E5E5"> books are all like 1993 97</font>

133
00:04:36,139 --> 00:04:42,050
the guy I worked on this<font color="#E5E5E5"> with is born in</font>

134
00:04:38,180 --> 00:04:44,449
like 2004<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think or something</font><font color="#CCCCCC"> so this</font>

135
00:04:42,050 --> 00:04:46,580
<font color="#E5E5E5">material is significantly dated it's not</font>

136
00:04:44,449 --> 00:04:48,919
<font color="#E5E5E5">updated it's not well resourced</font><font color="#CCCCCC"> the</font>

137
00:04:46,580 --> 00:04:50,810
<font color="#E5E5E5">Internet is not</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> maintaining good</font>

138
00:04:48,919 --> 00:04:52,909
documentation on<font color="#E5E5E5"> D column</font><font color="#CCCCCC"> it was</font>

139
00:04:50,810 --> 00:04:55,100
extremely hard as taken months to<font color="#E5E5E5"> kind</font>

140
00:04:52,910 --> 00:04:58,310
<font color="#E5E5E5">of learn and get to this point where we</font>

141
00:04:55,100 --> 00:04:59,690
<font color="#CCCCCC">are so what is calm so before we can</font>

142
00:04:58,310 --> 00:05:02,210
<font color="#E5E5E5">talk about D calm we have to talk about</font>

143
00:04:59,690 --> 00:05:04,250
calm calm is essentially a language

144
00:05:02,210 --> 00:05:06,680
independent<font color="#CCCCCC"> model to expose application</font>

145
00:05:04,250 --> 00:05:08,720
functionality<font color="#CCCCCC"> inside of a computer</font><font color="#E5E5E5"> so if</font>

146
00:05:06,680 --> 00:05:10,550
a particular<font color="#E5E5E5"> application wants to allow</font>

147
00:05:08,720 --> 00:05:12,830
you<font color="#E5E5E5"> to I don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> programmatically</font>

148
00:05:10,550 --> 00:05:16,400
<font color="#E5E5E5">create a</font><font color="#CCCCCC"> Word document you</font><font color="#E5E5E5"> can create a</font>

149
00:05:12,830 --> 00:05:18,169
<font color="#E5E5E5">calm object to enable that</font><font color="#CCCCCC"> the code the</font>

150
00:05:16,400 --> 00:05:20,000
compiled code<font color="#E5E5E5"> or the element is what's</font>

151
00:05:18,169 --> 00:05:21,020
called<font color="#E5E5E5"> a component or an object so</font>

152
00:05:20,000 --> 00:05:23,630
you'll hear me kind of<font color="#E5E5E5"> use those</font>

153
00:05:21,020 --> 00:05:25,490
interchangeably<font color="#E5E5E5"> components or objects</font>

154
00:05:23,630 --> 00:05:27,110
are identified by class IDs<font color="#E5E5E5"> which</font>

155
00:05:25,490 --> 00:05:29,360
<font color="#E5E5E5">represent</font><font color="#CCCCCC"> it's a unique identifier or</font>

156
00:05:27,110 --> 00:05:31,280
<font color="#CCCCCC">which represents the particular object</font>

157
00:05:29,360 --> 00:05:32,900
being used<font color="#CCCCCC"> this will be important when</font>

158
00:05:31,280 --> 00:05:35,150
<font color="#CCCCCC">we start to talk about indicators</font><font color="#E5E5E5"> of</font>

159
00:05:32,900 --> 00:05:37,250
this use components are typically

160
00:05:35,150 --> 00:05:38,150
registered on a system meaning<font color="#E5E5E5"> that they</font>

161
00:05:37,250 --> 00:05:40,010
have to go through<font color="#CCCCCC"> a registration</font>

162
00:05:38,150 --> 00:05:42,469
<font color="#CCCCCC">process the system has to</font><font color="#E5E5E5"> know they</font>

163
00:05:40,010 --> 00:05:43,789
exist<font color="#CCCCCC"> big</font><font color="#E5E5E5"> bold on typically there's been</font>

164
00:05:42,470 --> 00:05:46,580
a little<font color="#CCCCCC"> bit of research lately</font><font color="#E5E5E5"> to show</font>

165
00:05:43,789 --> 00:05:49,340
registration free<font color="#CCCCCC"> comm using ActiveX and</font>

166
00:05:46,580 --> 00:05:51,169
a couple other components but for the

167
00:05:49,340 --> 00:05:52,429
<font color="#E5E5E5">most</font><font color="#CCCCCC"> part these are attackers are</font><font color="#E5E5E5"> gonna</font>

168
00:05:51,169 --> 00:05:54,799
abuse things that are that are

169
00:05:52,430 --> 00:05:56,360
<font color="#E5E5E5">registered on</font><font color="#CCCCCC"> the system and present</font><font color="#E5E5E5"> and</font>

170
00:05:54,800 --> 00:05:58,430
they<font color="#CCCCCC"> usually implement one or more</font>

171
00:05:56,360 --> 00:05:59,750
interfaces<font color="#E5E5E5"> and that's the magic</font><font color="#CCCCCC"> word</font><font color="#E5E5E5"> so</font>

172
00:05:58,430 --> 00:06:01,880
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> dive in a little</font><font color="#CCCCCC"> bit more</font>

173
00:05:59,750 --> 00:06:04,789
<font color="#E5E5E5">so what specifically is</font><font color="#CCCCCC"> a comm interface</font>

174
00:06:01,880 --> 00:06:08,449
it's a specific piece<font color="#CCCCCC"> of functionality</font>

175
00:06:04,789 --> 00:06:10,490
that's going to be exposed for use<font color="#CCCCCC"> so</font>

176
00:06:08,449 --> 00:06:12,979
what what that means is is if you

177
00:06:10,490 --> 00:06:14,780
familiar with<font color="#CCCCCC"> programming styles</font><font color="#E5E5E5"> an</font>

178
00:06:12,979 --> 00:06:17,690
<font color="#E5E5E5">interface is something you implement or</font>

179
00:06:14,780 --> 00:06:19,549
extend to get common<font color="#E5E5E5"> functionality</font><font color="#CCCCCC"> so</font>

180
00:06:17,690 --> 00:06:21,680
there<font color="#E5E5E5"> are a whole</font><font color="#CCCCCC"> bunch of common</font><font color="#E5E5E5"> comm</font>

181
00:06:19,550 --> 00:06:23,150
<font color="#CCCCCC">quote-unquote interfaces which have</font>

182
00:06:21,680 --> 00:06:26,210
normal functionality that you<font color="#E5E5E5"> can</font>

183
00:06:23,150 --> 00:06:29,299
<font color="#CCCCCC">basically extend in your application an</font>

184
00:06:26,210 --> 00:06:31,400
example would<font color="#E5E5E5"> be I dispatch so if a comm</font>

185
00:06:29,300 --> 00:06:33,440
object extends the I dispatch interface

186
00:06:31,400 --> 00:06:35,239
it'll automatically inherit all the

187
00:06:33,440 --> 00:06:39,289
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> comm allows you to do</font>

188
00:06:35,240 --> 00:06:40,580
automation or dynamic casting<font color="#E5E5E5"> so you'll</font>

189
00:06:39,289 --> 00:06:41,409
note on<font color="#E5E5E5"> the window on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> right when we</font>

190
00:06:40,580 --> 00:06:44,679
look at<font color="#E5E5E5"> an exam</font>

191
00:06:41,409 --> 00:06:46,029
object like<font color="#CCCCCC"> MMC 200</font><font color="#E5E5E5"> you can see that</font>

192
00:06:44,679 --> 00:06:48,128
some<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> interfaces are in fact</font>

193
00:06:46,029 --> 00:06:50,139
implemented like I<font color="#E5E5E5"> dispatch I unknown</font>

194
00:06:48,129 --> 00:06:51,689
<font color="#E5E5E5">and these are things</font><font color="#CCCCCC"> that you'll see get</font>

195
00:06:50,139 --> 00:06:54,819
used over the network

196
00:06:51,689 --> 00:06:57,459
so progressing on<font color="#CCCCCC"> 2d comm which is the</font>

197
00:06:54,819 --> 00:06:59,019
distributed network<font color="#E5E5E5"> version of comm it's</font>

198
00:06:57,459 --> 00:07:00,909
<font color="#E5E5E5">basically what</font><font color="#CCCCCC"> comm looks like on the</font>

199
00:06:59,019 --> 00:07:04,569
network<font color="#E5E5E5"> it's good to note that this is a</font>

200
00:07:00,909 --> 00:07:06,789
protocol<font color="#CCCCCC"> that rides on top of</font><font color="#E5E5E5"> RPC so a</font>

201
00:07:04,569 --> 00:07:09,009
lot of the<font color="#CCCCCC"> interchange will be we'll</font>

202
00:07:06,789 --> 00:07:10,869
start with RPC calls familiar if you're

203
00:07:09,009 --> 00:07:14,019
familiar with RPC<font color="#E5E5E5"> and then dive down</font>

204
00:07:10,869 --> 00:07:18,039
<font color="#CCCCCC">into</font><font color="#E5E5E5"> very specific response and request</font>

205
00:07:14,019 --> 00:07:19,569
structures called<font color="#CCCCCC"> PD</font><font color="#E5E5E5"> use 4d comm and so</font>

206
00:07:18,039 --> 00:07:21,429
you'll kind of see an<font color="#E5E5E5"> intermix you'll</font>

207
00:07:19,569 --> 00:07:22,659
solve<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Broz RPC parser picked out</font>

208
00:07:21,429 --> 00:07:24,489
like one or two<font color="#CCCCCC"> things that</font><font color="#E5E5E5"> look</font>

209
00:07:22,659 --> 00:07:26,438
<font color="#E5E5E5">familiar and then all the unknowns was</font>

210
00:07:24,489 --> 00:07:29,469
all the<font color="#E5E5E5"> decom stuff that it's not really</font>

211
00:07:26,439 --> 00:07:31,360
<font color="#E5E5E5">familiar with in this case what a client</font>

212
00:07:29,469 --> 00:07:33,219
<font color="#E5E5E5">can be practically blind</font><font color="#CCCCCC"> so a client</font>

213
00:07:31,360 --> 00:07:34,899
<font color="#CCCCCC">does not need to know</font><font color="#E5E5E5"> the functionality</font>

214
00:07:33,219 --> 00:07:36,610
or really how to use it they can

215
00:07:34,899 --> 00:07:39,819
instantiate decom objects and then

216
00:07:36,610 --> 00:07:42,009
explore<font color="#E5E5E5"> them get help</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> use them with</font>

217
00:07:39,819 --> 00:07:44,409
no<font color="#CCCCCC"> knowledge all the code is executed on</font>

218
00:07:42,009 --> 00:07:46,360
<font color="#E5E5E5">the server so</font><font color="#CCCCCC"> I as a</font><font color="#E5E5E5"> decom client I am</font>

219
00:07:44,409 --> 00:07:51,759
<font color="#CCCCCC">basically</font><font color="#E5E5E5"> getting code execution on a</font>

220
00:07:46,360 --> 00:07:53,969
server so<font color="#E5E5E5"> talking a little bit about</font>

221
00:07:51,759 --> 00:07:56,409
what the message<font color="#E5E5E5"> structure looks like</font><font color="#CCCCCC"> I</font>

222
00:07:53,969 --> 00:07:57,759
wish there was<font color="#E5E5E5"> some centralized resource</font>

223
00:07:56,409 --> 00:07:59,550
when I went<font color="#E5E5E5"> through this so I tried</font><font color="#CCCCCC"> to</font>

224
00:07:57,759 --> 00:08:02,169
break this down as easy as possible

225
00:07:59,550 --> 00:08:03,699
<font color="#E5E5E5">essentially</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> decomp communications</font>

226
00:08:02,169 --> 00:08:05,889
are going to start with<font color="#E5E5E5"> some sort of RPC</font>

227
00:08:03,699 --> 00:08:08,129
bind or what's<font color="#E5E5E5"> called an ultra context</font>

228
00:08:05,889 --> 00:08:11,199
<font color="#E5E5E5">these two function calls allow a</font>

229
00:08:08,129 --> 00:08:13,269
<font color="#E5E5E5">particular client to attach to an</font>

230
00:08:11,199 --> 00:08:15,879
interface<font color="#E5E5E5"> so again if we're</font><font color="#CCCCCC"> talking</font>

231
00:08:13,269 --> 00:08:17,739
<font color="#CCCCCC">about I dispatch</font><font color="#E5E5E5"> there will be a bind or</font>

232
00:08:15,879 --> 00:08:19,689
an alter context<font color="#E5E5E5"> which announces I'm</font>

233
00:08:17,739 --> 00:08:21,818
attaching<font color="#CCCCCC"> to the I dispatch interface</font>

234
00:08:19,689 --> 00:08:23,800
which is<font color="#E5E5E5"> where all</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> messages are</font><font color="#CCCCCC"> going</font>

235
00:08:21,819 --> 00:08:25,449
<font color="#CCCCCC">to go to it's a way that they can do</font>

236
00:08:23,800 --> 00:08:27,789
asynchronous communications and still

237
00:08:25,449 --> 00:08:30,579
track what interface is being involved

238
00:08:27,789 --> 00:08:33,250
<font color="#E5E5E5">all of</font><font color="#CCCCCC"> the messages that</font><font color="#E5E5E5"> follow the</font>

239
00:08:30,579 --> 00:08:35,198
specific<font color="#CCCCCC"> PDUs will</font><font color="#E5E5E5"> be in a very common</font>

240
00:08:33,250 --> 00:08:37,208
format<font color="#E5E5E5"> so they should</font><font color="#CCCCCC"> be very</font><font color="#E5E5E5"> structured</font>

241
00:08:35,198 --> 00:08:39,370
the<font color="#CCCCCC"> request will always have it what's</font>

242
00:08:37,208 --> 00:08:41,888
called<font color="#E5E5E5"> a this structure whoever named</font>

243
00:08:39,370 --> 00:08:43,568
<font color="#E5E5E5">these like get extra bonus points</font><font color="#CCCCCC"> and</font>

244
00:08:41,889 --> 00:08:46,629
the response will<font color="#CCCCCC"> be that so there's</font>

245
00:08:43,568 --> 00:08:48,399
this and of that it's<font color="#E5E5E5"> really clever</font><font color="#CCCCCC"> and</font>

246
00:08:46,629 --> 00:08:50,079
then following<font color="#CCCCCC"> the this and</font><font color="#E5E5E5"> that they're</font>

247
00:08:48,399 --> 00:08:52,000
<font color="#E5E5E5">going to be the arguments that are</font>

248
00:08:50,079 --> 00:08:53,380
<font color="#E5E5E5">passed as inputs or outputs so there's</font>

249
00:08:52,000 --> 00:08:54,310
going to<font color="#E5E5E5"> be either</font><font color="#CCCCCC"> input arguments or</font>

250
00:08:53,380 --> 00:08:56,889
return arguments

251
00:08:54,310 --> 00:08:58,569
coming<font color="#E5E5E5"> back in these structures</font><font color="#CCCCCC"> in every</font>

252
00:08:56,889 --> 00:09:00,970
<font color="#E5E5E5">decom message we should be able to</font>

253
00:08:58,569 --> 00:09:01,990
<font color="#CCCCCC">identify</font><font color="#E5E5E5"> that this in that structure</font><font color="#CCCCCC"> so</font>

254
00:09:00,970 --> 00:09:03,879
it's very important<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> start</font>

255
00:09:01,990 --> 00:09:05,410
looking<font color="#E5E5E5"> on the wire</font><font color="#CCCCCC"> what you're looking</font>

256
00:09:03,879 --> 00:09:08,649
for is<font color="#CCCCCC"> to kind of pick that</font><font color="#E5E5E5"> out as an</font>

257
00:09:05,410 --> 00:09:10,240
anchor point<font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> dive in on how bad</font>

258
00:09:08,649 --> 00:09:12,970
guys have been<font color="#E5E5E5"> using this is the fun</font>

259
00:09:10,240 --> 00:09:16,240
part<font color="#CCCCCC"> the sexy part</font><font color="#E5E5E5"> of this talk</font><font color="#CCCCCC"> short</font>

260
00:09:12,970 --> 00:09:18,430
so this talk<font color="#E5E5E5"> D column</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> used really</font>

261
00:09:16,240 --> 00:09:19,360
across<font color="#CCCCCC"> the</font><font color="#E5E5E5"> lifecycle</font><font color="#CCCCCC"> so there's you</font>

262
00:09:18,430 --> 00:09:20,888
might have heard a lot<font color="#CCCCCC"> of these</font>

263
00:09:19,360 --> 00:09:21,939
different techniques there's a common

264
00:09:20,889 --> 00:09:24,449
set of<font color="#E5E5E5"> researchers</font><font color="#CCCCCC"> that have</font><font color="#E5E5E5"> been</font>

265
00:09:21,939 --> 00:09:26,949
heavily<font color="#E5E5E5"> focused on this but essentially</font>

266
00:09:24,449 --> 00:09:28,870
across the lifecycle primarily in these

267
00:09:26,949 --> 00:09:30,699
<font color="#CCCCCC">phases so code execution lateral</font>

268
00:09:28,870 --> 00:09:31,930
movement<font color="#E5E5E5"> and persistence</font>

269
00:09:30,699 --> 00:09:34,089
there are a number<font color="#CCCCCC"> of different</font>

270
00:09:31,930 --> 00:09:35,859
<font color="#E5E5E5">techniques that use calm the reason I</font>

271
00:09:34,089 --> 00:09:38,379
love<font color="#E5E5E5"> this as a red</font><font color="#CCCCCC"> teamer as</font><font color="#E5E5E5"> an attacker</font>

272
00:09:35,860 --> 00:09:40,509
is because it's so legacy that it's not

273
00:09:38,379 --> 00:09:42,670
well documented<font color="#E5E5E5"> and</font><font color="#CCCCCC"> pretty much everyone</font>

274
00:09:40,509 --> 00:09:44,800
just trusts<font color="#E5E5E5"> it safe because it's been</font>

275
00:09:42,670 --> 00:09:46,509
<font color="#E5E5E5">around so long and there's really</font>

276
00:09:44,800 --> 00:09:48,279
nothing<font color="#CCCCCC"> that inspects into it so what</font>

277
00:09:46,509 --> 00:09:50,259
<font color="#CCCCCC">options do you have you're not just</font>

278
00:09:48,279 --> 00:09:51,249
going<font color="#E5E5E5"> to outright block it god forbid</font>

279
00:09:50,259 --> 00:09:55,149
<font color="#CCCCCC">you kill like a line</font><font color="#E5E5E5"> of business</font>

280
00:09:51,249 --> 00:09:57,730
application or access to<font color="#CCCCCC"> a big SCADA</font>

281
00:09:55,149 --> 00:09:59,230
environment the<font color="#E5E5E5"> other thing is is the</font>

282
00:09:57,730 --> 00:10:01,029
<font color="#CCCCCC">host of network indicators</font><font color="#E5E5E5"> because the</font>

283
00:09:59,230 --> 00:10:02,769
tools don't really parse them<font color="#CCCCCC"> they can</font>

284
00:10:01,029 --> 00:10:05,079
very heavily<font color="#E5E5E5"> it's a very dynamic</font>

285
00:10:02,769 --> 00:10:06,910
protocol so you'll see in<font color="#E5E5E5"> lateral</font>

286
00:10:05,079 --> 00:10:08,769
movement we're gonna dive in<font color="#E5E5E5"> on this</font>

287
00:10:06,910 --> 00:10:11,110
specifically but in some<font color="#CCCCCC"> of the neat</font>

288
00:10:08,769 --> 00:10:12,759
ones to look at I<font color="#E5E5E5"> would say is very</font>

289
00:10:11,110 --> 00:10:16,149
people are familiar<font color="#E5E5E5"> with</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> SCT</font>

290
00:10:12,759 --> 00:10:18,100
scripts or<font color="#E5E5E5"> comm scriptlets comm</font>

291
00:10:16,149 --> 00:10:20,350
hijacking has been<font color="#E5E5E5"> around for years as a</font>

292
00:10:18,100 --> 00:10:22,000
persistence technique<font color="#E5E5E5"> Matt and</font><font color="#CCCCCC"> Casey</font>

293
00:10:20,350 --> 00:10:24,730
document<font color="#CCCCCC"> this very well on the endpoint</font>

294
00:10:22,000 --> 00:10:26,740
<font color="#E5E5E5">side</font><font color="#CCCCCC"> in this link</font><font color="#E5E5E5"> so take a look at this</font>

295
00:10:24,730 --> 00:10:28,720
presentation<font color="#CCCCCC"> it kind of</font><font color="#E5E5E5"> goes into</font><font color="#CCCCCC"> a lot</font>

296
00:10:26,740 --> 00:10:32,920
<font color="#CCCCCC">of the</font><font color="#E5E5E5"> endpoint focused parts of these</font>

297
00:10:28,720 --> 00:10:35,259
techniques<font color="#E5E5E5"> so how do attackers find calm</font>

298
00:10:32,920 --> 00:10:37,179
objects to abuse like what what inspired

299
00:10:35,259 --> 00:10:39,069
<font color="#E5E5E5">them what made them go look at a</font>

300
00:10:37,179 --> 00:10:41,529
<font color="#CCCCCC">particular object to use for a lateral</font>

301
00:10:39,069 --> 00:10:43,420
<font color="#E5E5E5">movement</font><font color="#CCCCCC"> the key thing they</font><font color="#E5E5E5"> really want</font>

302
00:10:41,529 --> 00:10:47,079
to<font color="#CCCCCC"> look</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> is things</font><font color="#E5E5E5"> that execute code</font>

303
00:10:43,420 --> 00:10:49,149
Microsoft is full of binaries and things

304
00:10:47,079 --> 00:10:51,248
<font color="#E5E5E5">that just allow you to compile or</font>

305
00:10:49,149 --> 00:10:53,290
execute<font color="#E5E5E5"> code it's extremely common and</font>

306
00:10:51,249 --> 00:10:55,179
so it's kind of a focal point for

307
00:10:53,290 --> 00:10:57,939
researchers let me find every way I can

308
00:10:55,179 --> 00:11:00,249
spawn<font color="#E5E5E5"> the program inside</font><font color="#CCCCCC"> windows</font>

309
00:10:57,939 --> 00:11:01,719
another key piece<font color="#E5E5E5"> of</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is is objects</font>

310
00:11:00,249 --> 00:11:04,480
<font color="#E5E5E5">that have no explicit launch permission</font>

311
00:11:01,720 --> 00:11:07,120
<font color="#E5E5E5">what that means is it falls back to the</font>

312
00:11:04,480 --> 00:11:08,080
windows default<font color="#E5E5E5"> windows default launch</font>

313
00:11:07,120 --> 00:11:09,460
permission is<font color="#E5E5E5"> forward</font>

314
00:11:08,080 --> 00:11:12,250
<font color="#E5E5E5">traitors to be able to launch them</font>

315
00:11:09,460 --> 00:11:13,930
remotely<font color="#E5E5E5"> so if you're an admin you you</font>

316
00:11:12,250 --> 00:11:16,480
you gain access<font color="#E5E5E5"> an environment you</font>

317
00:11:13,930 --> 00:11:19,120
escalate<font color="#CCCCCC"> these common objects by default</font>

318
00:11:16,480 --> 00:11:21,420
<font color="#E5E5E5">are at your disposal</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> a it's a</font>

319
00:11:19,120 --> 00:11:24,850
it's<font color="#E5E5E5"> a feature not a flaw don't worry</font>

320
00:11:21,420 --> 00:11:26,500
<font color="#CCCCCC">it's supposed to be there there are many</font>

321
00:11:24,850 --> 00:11:28,240
different tools<font color="#E5E5E5"> you can explore common</font>

322
00:11:26,500 --> 00:11:29,500
classes one of my favorite was watching

323
00:11:28,240 --> 00:11:31,810
<font color="#E5E5E5">Matt and</font><font color="#CCCCCC"> Olson back in the days to work</font>

324
00:11:29,500 --> 00:11:33,610
with<font color="#E5E5E5"> this young kid and he would just</font>

325
00:11:31,810 --> 00:11:35,349
<font color="#E5E5E5">sit in the registry and just like</font>

326
00:11:33,610 --> 00:11:36,550
manually scroll through the registry and

327
00:11:35,350 --> 00:11:38,050
click on<font color="#E5E5E5"> things I'm like you know</font>

328
00:11:36,550 --> 00:11:40,240
there's a better<font color="#E5E5E5"> way to do this</font><font color="#CCCCCC"> like</font>

329
00:11:38,050 --> 00:11:42,400
there's<font color="#E5E5E5"> commands and scripting languages</font>

330
00:11:40,240 --> 00:11:44,470
and things<font color="#E5E5E5"> you could use but he found a</font>

331
00:11:42,400 --> 00:11:46,150
<font color="#CCCCCC">number of these just</font><font color="#E5E5E5"> by spending hours</font>

332
00:11:44,470 --> 00:11:47,410
digging<font color="#E5E5E5"> through the registry and looking</font>

333
00:11:46,150 --> 00:11:49,900
at weird things<font color="#E5E5E5"> that he didn't know</font>

334
00:11:47,410 --> 00:11:52,959
<font color="#E5E5E5">existed it's kind of an eccentric</font>

335
00:11:49,900 --> 00:11:55,390
<font color="#E5E5E5">researcher brain right there all of</font>

336
00:11:52,960 --> 00:11:57,130
these applications<font color="#E5E5E5"> match the spec so</font>

337
00:11:55,390 --> 00:11:58,569
some<font color="#CCCCCC"> of you might recognize</font><font color="#E5E5E5"> these icons</font>

338
00:11:57,130 --> 00:12:00,730
<font color="#E5E5E5">they're probably deployed on your</font>

339
00:11:58,570 --> 00:12:03,130
enterprise computers and all of them

340
00:12:00,730 --> 00:12:05,380
expose code execution functionality<font color="#E5E5E5"> and</font>

341
00:12:03,130 --> 00:12:06,820
have no explicit launch permission set

342
00:12:05,380 --> 00:12:09,970
which<font color="#E5E5E5"> means administrators can use them</font>

343
00:12:06,820 --> 00:12:11,350
<font color="#E5E5E5">so by</font><font color="#CCCCCC"> installing office</font><font color="#E5E5E5"> you're</font><font color="#CCCCCC"> enabling</font>

344
00:12:09,970 --> 00:12:16,660
this technique we're in it to<font color="#CCCCCC"> show and</font>

345
00:12:11,350 --> 00:12:20,350
<font color="#E5E5E5">talk about so it's I skipped one let me</font>

346
00:12:16,660 --> 00:12:23,050
step back<font color="#E5E5E5"> a little bit so talking about</font>

347
00:12:20,350 --> 00:12:24,700
<font color="#E5E5E5">finding a demo this</font><font color="#CCCCCC"> is a component</font><font color="#E5E5E5"> snap</font>

348
00:12:23,050 --> 00:12:26,859
in a window you'll see<font color="#E5E5E5"> when we come into</font>

349
00:12:24,700 --> 00:12:29,110
the component<font color="#E5E5E5"> snap in administrators in</font>

350
00:12:26,860 --> 00:12:31,390
fact is<font color="#E5E5E5"> a loud default launch by remote</font>

351
00:12:29,110 --> 00:12:34,030
so this is a way<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can check</font><font color="#CCCCCC"> that it's</font>

352
00:12:31,390 --> 00:12:35,680
the default<font color="#E5E5E5"> fallback coming into a tool</font>

353
00:12:34,030 --> 00:12:37,240
called<font color="#CCCCCC"> Oh Ellie view we can basically</font>

354
00:12:35,680 --> 00:12:39,760
search<font color="#E5E5E5"> comm objects and we can use a</font>

355
00:12:37,240 --> 00:12:41,470
Python syntax<font color="#E5E5E5"> so we can say show me all</font>

356
00:12:39,760 --> 00:12:43,540
comm objects that have no launch

357
00:12:41,470 --> 00:12:45,010
permission defined<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> could scroll</font>

358
00:12:43,540 --> 00:12:46,300
<font color="#CCCCCC">through all these and look at each one</font>

359
00:12:45,010 --> 00:12:48,610
I'm going<font color="#E5E5E5"> to skip to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> one I know is</font>

360
00:12:46,300 --> 00:12:50,109
interesting<font color="#E5E5E5"> in</font><font color="#CCCCCC"> most the application you</font>

361
00:12:48,610 --> 00:12:52,290
can<font color="#E5E5E5"> see here that this</font><font color="#CCCCCC"> cobb object has</font>

362
00:12:50,110 --> 00:12:55,480
an app ID<font color="#E5E5E5"> no explicit launch permission</font>

363
00:12:52,290 --> 00:12:56,890
has a class ID<font color="#E5E5E5"> that we can then use</font><font color="#CCCCCC"> to</font>

364
00:12:55,480 --> 00:12:58,810
instantiate so I'm going<font color="#E5E5E5"> to come over to</font>

365
00:12:56,890 --> 00:13:00,670
<font color="#E5E5E5">my window</font><font color="#CCCCCC"> I'm just going</font><font color="#E5E5E5"> to do a quick</font>

366
00:12:58,810 --> 00:13:03,430
instantiation of this and you'll see

367
00:13:00,670 --> 00:13:05,439
I'll be<font color="#E5E5E5"> able to explore so I</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> basically</font>

368
00:13:03,430 --> 00:13:07,510
have an<font color="#E5E5E5"> MMC snap-in</font><font color="#CCCCCC"> column object</font><font color="#E5E5E5"> that</font>

369
00:13:05,440 --> 00:13:08,950
has a document<font color="#E5E5E5"> property which has a</font>

370
00:13:07,510 --> 00:13:10,180
whole bunch<font color="#CCCCCC"> of sub properties and</font>

371
00:13:08,950 --> 00:13:12,280
eventually when we<font color="#E5E5E5"> get down to the</font>

372
00:13:10,180 --> 00:13:13,989
interesting stuff<font color="#E5E5E5"> you'll find that we</font>

373
00:13:12,280 --> 00:13:17,290
have a<font color="#E5E5E5"> command called execute shell</font>

374
00:13:13,990 --> 00:13:19,620
command not not interesting at all to

375
00:13:17,290 --> 00:13:19,620
<font color="#E5E5E5">look at</font>

376
00:13:20,090 --> 00:13:25,280
kind of weaponizing that now we take the

377
00:13:22,580 --> 00:13:27,140
MMC 2.0 application and we do a<font color="#CCCCCC"> get type</font>

378
00:13:25,280 --> 00:13:30,740
which will essentially resolve the class

379
00:13:27,140 --> 00:13:32,300
ID for us<font color="#CCCCCC"> whenever on</font><font color="#E5E5E5"> that note that I'm</font>

380
00:13:30,740 --> 00:13:34,010
using<font color="#CCCCCC"> PowerShell here good this could</font><font color="#E5E5E5"> be</font>

381
00:13:32,300 --> 00:13:35,329
done entirely without PowerShell as well

382
00:13:34,010 --> 00:13:38,210
<font color="#E5E5E5">PowerShell is just an easy way</font><font color="#CCCCCC"> to make</font>

383
00:13:35,330 --> 00:13:39,560
<font color="#E5E5E5">this demo show</font><font color="#CCCCCC"> and then I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

384
00:13:38,210 --> 00:13:41,840
<font color="#E5E5E5">create an instance of it which</font><font color="#CCCCCC"> means I'm</font>

385
00:13:39,560 --> 00:13:44,000
going<font color="#E5E5E5"> to actually run the</font><font color="#CCCCCC"> program and</font>

386
00:13:41,840 --> 00:13:45,500
get<font color="#E5E5E5"> a pointer back to the object</font><font color="#CCCCCC"> itself</font>

387
00:13:44,000 --> 00:13:47,990
<font color="#CCCCCC">and I'm going to</font><font color="#E5E5E5"> tell it to run a</font>

388
00:13:45,500 --> 00:13:51,380
program<font color="#E5E5E5"> it's just this easy</font><font color="#CCCCCC"> this is</font>

389
00:13:47,990 --> 00:13:53,090
<font color="#E5E5E5">again</font><font color="#CCCCCC"> built-in to Windows and calculator</font>

390
00:13:51,380 --> 00:13:55,640
<font color="#E5E5E5">launch yay</font>

391
00:13:53,090 --> 00:13:57,800
over the network<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is entirely decom</font>

392
00:13:55,640 --> 00:13:59,510
so this is all a native Windows protocol

393
00:13:57,800 --> 00:14:01,189
and nothing really<font color="#E5E5E5"> super suspicious</font><font color="#CCCCCC"> or</font>

394
00:13:59,510 --> 00:14:03,980
sticks out here in fact most tools don't

395
00:14:01,190 --> 00:14:04,790
parse it one more for you<font color="#CCCCCC"> in case you</font>

396
00:14:03,980 --> 00:14:06,110
want to<font color="#E5E5E5"> be a little bit more</font>

397
00:14:04,790 --> 00:14:08,209
sophisticated<font color="#E5E5E5"> you don't want to just</font>

398
00:14:06,110 --> 00:14:10,370
<font color="#E5E5E5">spawn programs in this case we're gonna</font>

399
00:14:08,210 --> 00:14:13,100
<font color="#E5E5E5">use</font><font color="#CCCCCC"> Microsoft Excel</font><font color="#E5E5E5"> so that class ID</font>

400
00:14:10,370 --> 00:14:15,500
represents Microsoft Excel we're gonna

401
00:14:13,100 --> 00:14:18,290
create an instance of it<font color="#E5E5E5"> and then we're</font>

402
00:14:15,500 --> 00:14:20,660
going<font color="#CCCCCC"> to load a</font><font color="#E5E5E5"> DLL so we're gonna force</font>

403
00:14:18,290 --> 00:14:23,060
<font color="#E5E5E5">Excel to load a malicious DLL from disk</font>

404
00:14:20,660 --> 00:14:25,699
so this is no<font color="#E5E5E5"> longer spawning in each</font>

405
00:14:23,060 --> 00:14:28,489
secondary code<font color="#E5E5E5"> I'm loading a DLL into</font>

406
00:14:25,700 --> 00:14:30,410
excels program space and that DLL was

407
00:14:28,490 --> 00:14:32,480
planted by<font color="#E5E5E5"> me notice it's not an actual</font>

408
00:14:30,410 --> 00:14:34,310
sneaky location like don't plant your

409
00:14:32,480 --> 00:14:36,770
<font color="#E5E5E5">malicious deals in the C Drive if you're</font>

410
00:14:34,310 --> 00:14:38,869
a red teamer<font color="#CCCCCC"> but it works well for</font><font color="#E5E5E5"> the</font>

411
00:14:36,770 --> 00:14:40,430
well it works well for<font color="#E5E5E5"> the demo</font><font color="#CCCCCC"> you know</font>

412
00:14:38,870 --> 00:14:42,890
that<font color="#E5E5E5"> this is supposed to be loading an</font>

413
00:14:40,430 --> 00:14:45,859
<font color="#CCCCCC">Excel snapping or adding objects</font><font color="#E5E5E5"> and my</font>

414
00:14:42,890 --> 00:14:47,270
DLL is just like a standard<font color="#E5E5E5"> run main DLL</font>

415
00:14:45,860 --> 00:14:49,490
it's nothing<font color="#CCCCCC"> fancy and</font><font color="#E5E5E5"> it just works</font>

416
00:14:47,270 --> 00:14:52,189
<font color="#CCCCCC">like it does</font><font color="#E5E5E5"> Excel doesn't care</font><font color="#CCCCCC"> it kicks</font>

417
00:14:49,490 --> 00:14:55,730
off execution<font color="#CCCCCC"> it doesn't validate that</font>

418
00:14:52,190 --> 00:14:57,620
<font color="#E5E5E5">it's an actual snap in our library so</font>

419
00:14:55,730 --> 00:14:59,270
let's look at what this looks<font color="#CCCCCC"> like for</font>

420
00:14:57,620 --> 00:15:00,380
me I kind of<font color="#E5E5E5"> I've used all these</font>

421
00:14:59,270 --> 00:15:02,180
techniques<font color="#E5E5E5"> for years and when I</font>

422
00:15:00,380 --> 00:15:05,930
converted over<font color="#CCCCCC"> to the blue team side I</font>

423
00:15:02,180 --> 00:15:07,729
was frankly<font color="#E5E5E5"> utterly amazed that that</font>

424
00:15:05,930 --> 00:15:09,500
<font color="#E5E5E5">nothing found it so I wanted</font><font color="#CCCCCC"> to dive in</font>

425
00:15:07,730 --> 00:15:11,510
what we're gonna<font color="#CCCCCC"> basically walk through</font>

426
00:15:09,500 --> 00:15:13,640
is what we call or<font color="#E5E5E5"> I work with a</font>

427
00:15:11,510 --> 00:15:15,800
detection<font color="#CCCCCC"> process so it's basically kind</font>

428
00:15:13,640 --> 00:15:17,689
of a measured<font color="#CCCCCC"> process of taking</font><font color="#E5E5E5"> a</font>

429
00:15:15,800 --> 00:15:19,609
behavior technique and breaking it<font color="#E5E5E5"> down</font>

430
00:15:17,690 --> 00:15:21,860
<font color="#CCCCCC">maybe this is useful for</font><font color="#E5E5E5"> you if you work</font>

431
00:15:19,610 --> 00:15:23,690
in detection<font color="#E5E5E5"> or in a sock and you do</font>

432
00:15:21,860 --> 00:15:25,340
this kind<font color="#CCCCCC"> of research we're gonna focus</font>

433
00:15:23,690 --> 00:15:26,720
on two<font color="#CCCCCC"> key steps here and kind of break</font>

434
00:15:25,340 --> 00:15:28,250
them<font color="#CCCCCC"> down but note that</font><font color="#E5E5E5"> there's a whole</font>

435
00:15:26,720 --> 00:15:30,140
<font color="#E5E5E5">bunch of other steps that are involved</font>

436
00:15:28,250 --> 00:15:31,490
in<font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> detection operations like</font>

437
00:15:30,140 --> 00:15:33,730
I<font color="#E5E5E5"> don't know actually building</font>

438
00:15:31,490 --> 00:15:35,649
indicators and maintaining them over

439
00:15:33,730 --> 00:15:38,380
<font color="#E5E5E5">long term which is the hard part</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font>

440
00:15:35,649 --> 00:15:40,690
life so let's walk through<font color="#CCCCCC"> what exactly</font>

441
00:15:38,380 --> 00:15:42,550
<font color="#E5E5E5">happened on that behavior so you'll</font>

442
00:15:40,690 --> 00:15:45,790
<font color="#E5E5E5">remember that we started by</font>

443
00:15:42,550 --> 00:15:47,349
instantiating<font color="#E5E5E5"> the object so this is</font>

444
00:15:45,790 --> 00:15:50,230
what's called<font color="#CCCCCC"> in</font><font color="#E5E5E5"> comms language as</font>

445
00:15:47,350 --> 00:15:51,940
activation during<font color="#E5E5E5"> activation on the wire</font>

446
00:15:50,230 --> 00:15:53,440
there's a number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> different things</font>

447
00:15:51,940 --> 00:15:55,240
that<font color="#E5E5E5"> occur and we're gonna break those</font>

448
00:15:53,440 --> 00:15:56,889
<font color="#CCCCCC">down in a second but essentially what</font>

449
00:15:55,240 --> 00:15:59,620
happens during the stage is an object is

450
00:15:56,889 --> 00:16:01,000
created<font color="#E5E5E5"> a process</font><font color="#CCCCCC"> is started</font><font color="#E5E5E5"> and the</font>

451
00:15:59,620 --> 00:16:03,730
<font color="#E5E5E5">pointer is passed over</font><font color="#CCCCCC"> the network</font><font color="#E5E5E5"> back</font>

452
00:16:01,000 --> 00:16:05,589
to the client<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> we'll have an</font>

453
00:16:03,730 --> 00:16:07,839
optional set of operations that may or

454
00:16:05,589 --> 00:16:09,519
<font color="#E5E5E5">may not occur these operations are</font><font color="#CCCCCC"> what</font>

455
00:16:07,839 --> 00:16:12,310
are called type operations<font color="#CCCCCC"> and they're</font>

456
00:16:09,519 --> 00:16:14,769
used to<font color="#E5E5E5"> enable a</font><font color="#CCCCCC"> user to explore the com</font>

457
00:16:12,310 --> 00:16:16,209
object<font color="#E5E5E5"> so if you remember when I was in</font>

458
00:16:14,769 --> 00:16:18,399
my little<font color="#CCCCCC"> PowerShell window and like</font>

459
00:16:16,209 --> 00:16:20,109
<font color="#E5E5E5">exploring the MMC object I was getting a</font>

460
00:16:18,399 --> 00:16:23,139
list of<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> functions and properties</font>

461
00:16:20,110 --> 00:16:24,970
<font color="#E5E5E5">that's done via type operations so</font>

462
00:16:23,139 --> 00:16:26,589
you'll only<font color="#E5E5E5"> really see these if a user</font>

463
00:16:24,970 --> 00:16:29,260
<font color="#E5E5E5">is manually interacting with the object</font>

464
00:16:26,589 --> 00:16:30,970
<font color="#E5E5E5">which can be a cool note to know whether</font>

465
00:16:29,260 --> 00:16:34,569
the attacker is interactive or whether

466
00:16:30,970 --> 00:16:37,180
this is programmatic and the final step

467
00:16:34,570 --> 00:16:38,800
will be execution so the attacker will

468
00:16:37,180 --> 00:16:40,750
then call a specific<font color="#CCCCCC"> function which</font>

469
00:16:38,800 --> 00:16:43,089
allows<font color="#E5E5E5"> them</font><font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> code or load code</font>

470
00:16:40,750 --> 00:16:45,100
in the environment<font color="#E5E5E5"> so diving a tiny bit</font>

471
00:16:43,089 --> 00:16:46,660
deeper this is what the activation<font color="#E5E5E5"> phase</font>

472
00:16:45,100 --> 00:16:48,279
actually<font color="#E5E5E5"> looks like on the</font><font color="#CCCCCC"> wire so if</font>

473
00:16:46,660 --> 00:16:50,350
you were to peek at<font color="#E5E5E5"> this these</font><font color="#CCCCCC"> are kind</font>

474
00:16:48,279 --> 00:16:51,850
<font color="#E5E5E5">of calls that you're gonna see and kind</font>

475
00:16:50,350 --> 00:16:53,620
<font color="#CCCCCC">of if you were to trace on the system</font>

476
00:16:51,850 --> 00:16:55,260
these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> the specific</font><font color="#E5E5E5"> comm interfaces</font>

477
00:16:53,620 --> 00:16:57,699
<font color="#E5E5E5">that</font><font color="#CCCCCC"> are gonna get hit during activation</font>

478
00:16:55,260 --> 00:16:59,199
we dug through<font color="#CCCCCC"> each of these this could</font>

479
00:16:57,699 --> 00:17:01,000
be a rabbit hole in itself you<font color="#CCCCCC"> could</font>

480
00:16:59,199 --> 00:17:03,279
spend probably<font color="#E5E5E5"> weeks just trying</font><font color="#CCCCCC"> to</font>

481
00:17:01,000 --> 00:17:04,660
understand all of these<font color="#E5E5E5"> calls we kind of</font>

482
00:17:03,279 --> 00:17:07,869
want<font color="#CCCCCC"> to highlight or dive in on one</font>

483
00:17:04,660 --> 00:17:09,549
<font color="#CCCCCC">specific one</font><font color="#E5E5E5"> so as we step</font><font color="#CCCCCC"> through these</font>

484
00:17:07,869 --> 00:17:11,198
we're<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> show you pretty pcap and</font>

485
00:17:09,549 --> 00:17:13,150
<font color="#E5E5E5">bytes and the reason for</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> mainly</font>

486
00:17:11,199 --> 00:17:14,650
<font color="#CCCCCC">just to highlight</font><font color="#E5E5E5"> what we found</font>

487
00:17:13,150 --> 00:17:16,660
<font color="#E5E5E5">again this protocol was fairly</font>

488
00:17:14,650 --> 00:17:18,250
undocumented so the function that we

489
00:17:16,660 --> 00:17:19,720
highlighted<font color="#E5E5E5"> as the most important was</font>

490
00:17:18,250 --> 00:17:23,439
<font color="#E5E5E5">the function called remote key class</font>

491
00:17:19,720 --> 00:17:25,929
object and during<font color="#E5E5E5"> this the client</font><font color="#CCCCCC"> will</font>

492
00:17:23,439 --> 00:17:28,030
pass a particular class ID<font color="#E5E5E5"> which</font>

493
00:17:25,929 --> 00:17:29,770
identifies<font color="#CCCCCC"> the decom object that</font><font color="#E5E5E5"> it</font>

494
00:17:28,030 --> 00:17:32,918
wants<font color="#CCCCCC"> to get a pointer to it wants to</font>

495
00:17:29,770 --> 00:17:34,870
activate so the class ID makes a really

496
00:17:32,919 --> 00:17:37,030
great indicator should<font color="#E5E5E5"> stick out for you</font>

497
00:17:34,870 --> 00:17:38,469
<font color="#CCCCCC">which is why this</font><font color="#E5E5E5"> is so important you'll</font>

498
00:17:37,030 --> 00:17:39,940
note that<font color="#E5E5E5"> when we loaded Wireshark it</font>

499
00:17:38,470 --> 00:17:41,500
didn't<font color="#CCCCCC"> actually parse any of this</font><font color="#E5E5E5"> it</font>

500
00:17:39,940 --> 00:17:43,210
<font color="#CCCCCC">just said stub data and</font><font color="#E5E5E5"> gave us a giant</font>

501
00:17:41,500 --> 00:17:46,090
byte string so<font color="#E5E5E5"> that was relatively</font>

502
00:17:43,210 --> 00:17:47,110
unhelpful but the way we found<font color="#E5E5E5"> this is</font>

503
00:17:46,090 --> 00:17:49,540
by<font color="#E5E5E5"> literally control</font>

504
00:17:47,110 --> 00:17:51,040
and<font color="#E5E5E5"> Wireshark for a class ID like phone</font>

505
00:17:49,540 --> 00:17:53,649
wondering which packets include<font color="#E5E5E5"> that</font>

506
00:17:51,040 --> 00:17:55,360
indicator<font color="#E5E5E5"> you'll see that we were able</font>

507
00:17:53,650 --> 00:17:56,350
<font color="#CCCCCC">to power</font><font color="#E5E5E5"> salt this class ID in this</font>

508
00:17:55,360 --> 00:17:58,299
fancy gooood

509
00:17:56,350 --> 00:18:00,669
which then if you do a<font color="#E5E5E5"> google</font><font color="#CCCCCC"> search</font>

510
00:17:58,299 --> 00:18:03,760
you'll find it ties to the application

511
00:18:00,670 --> 00:18:05,679
<font color="#CCCCCC">object of MMC it sticks</font><font color="#E5E5E5"> out like a</font><font color="#CCCCCC"> sore</font>

512
00:18:03,760 --> 00:18:07,600
thumb<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the MSDN</font><font color="#CCCCCC"> document documentation</font>

513
00:18:05,679 --> 00:18:09,250
so if you if we were to find this<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font>

514
00:18:07,600 --> 00:18:10,740
wild<font color="#E5E5E5"> you if you have a class ID what do</font>

515
00:18:09,250 --> 00:18:13,000
you do with<font color="#E5E5E5"> it</font><font color="#CCCCCC"> let's</font><font color="#E5E5E5"> go to</font><font color="#CCCCCC"> google</font>

516
00:18:10,740 --> 00:18:16,390
generally the big ones will<font color="#CCCCCC"> be very</font>

517
00:18:13,000 --> 00:18:18,910
<font color="#CCCCCC">well-documented the next part of the</font><font color="#E5E5E5"> I</font>

518
00:18:16,390 --> 00:18:20,770
type<font color="#E5E5E5"> info operations so there are three</font>

519
00:18:18,910 --> 00:18:22,270
main functions<font color="#E5E5E5"> that we saw getting used</font>

520
00:18:20,770 --> 00:18:23,770
there's actually like I think<font color="#E5E5E5"> eight or</font>

521
00:18:22,270 --> 00:18:25,690
ten<font color="#E5E5E5"> total but we</font><font color="#CCCCCC"> really want to</font>

522
00:18:23,770 --> 00:18:27,070
<font color="#E5E5E5">highlight these three the first one is</font>

523
00:18:25,690 --> 00:18:28,990
get function description<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

524
00:18:27,070 --> 00:18:31,210
essentially used to resolve<font color="#E5E5E5"> an ordinal</font>

525
00:18:28,990 --> 00:18:32,710
or<font color="#E5E5E5"> like a single identifier to the</font>

526
00:18:31,210 --> 00:18:34,929
<font color="#E5E5E5">actual member ID which is a unique</font>

527
00:18:32,710 --> 00:18:36,910
<font color="#CCCCCC">identifier for that function again we're</font>

528
00:18:34,929 --> 00:18:38,290
all about indicators<font color="#E5E5E5"> we want to pick out</font>

529
00:18:36,910 --> 00:18:40,419
what we're able to<font color="#E5E5E5"> use to</font><font color="#CCCCCC"> identify</font>

530
00:18:38,290 --> 00:18:42,428
what's<font color="#CCCCCC"> going on the next step is get</font>

531
00:18:40,419 --> 00:18:45,190
names which is where the client will

532
00:18:42,429 --> 00:18:47,620
actually resolve<font color="#E5E5E5"> a member ID that I got</font>

533
00:18:45,190 --> 00:18:49,960
from<font color="#E5E5E5"> the first one</font><font color="#CCCCCC"> to a name</font><font color="#E5E5E5"> so a</font><font color="#CCCCCC"> human</font>

534
00:18:47,620 --> 00:18:52,510
readable<font color="#E5E5E5"> text string that</font><font color="#CCCCCC"> is then</font><font color="#E5E5E5"> passed</font>

535
00:18:49,960 --> 00:18:55,840
back<font color="#E5E5E5"> this is again this is</font><font color="#CCCCCC"> how I allow</font>

536
00:18:52,510 --> 00:18:57,820
external<font color="#CCCCCC"> xre exploration of the object</font>

537
00:18:55,840 --> 00:19:00,159
and<font color="#E5E5E5"> the final one which is really</font><font color="#CCCCCC"> neat</font>

538
00:18:57,820 --> 00:19:01,809
<font color="#CCCCCC">is get documentation</font><font color="#E5E5E5"> so if you want the</font>

539
00:19:00,160 --> 00:19:04,150
<font color="#CCCCCC">help</font><font color="#E5E5E5"> Docs</font><font color="#CCCCCC"> if you want to do like get</font>

540
00:19:01,809 --> 00:19:05,740
help in<font color="#CCCCCC"> powershell on a particular</font>

541
00:19:04,150 --> 00:19:07,510
column object that's all handled<font color="#CCCCCC"> via</font>

542
00:19:05,740 --> 00:19:09,370
<font color="#CCCCCC">decon function called</font><font color="#E5E5E5"> get documentation</font>

543
00:19:07,510 --> 00:19:11,620
<font color="#CCCCCC">and it</font><font color="#E5E5E5"> literally</font><font color="#CCCCCC"> flat passes</font><font color="#E5E5E5"> in</font>

544
00:19:09,370 --> 00:19:12,820
<font color="#E5E5E5">clear-text the entire doc stream so it</font>

545
00:19:11,620 --> 00:19:15,939
can be pretty<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see over</font>

546
00:19:12,820 --> 00:19:18,399
<font color="#CCCCCC">the</font><font color="#E5E5E5"> wire and explore this is what all of</font>

547
00:19:15,940 --> 00:19:19,690
<font color="#E5E5E5">those calls look like in Wireshark again</font>

548
00:19:18,400 --> 00:19:22,360
<font color="#E5E5E5">I hope that you can see that they are</font>

549
00:19:19,690 --> 00:19:24,460
<font color="#E5E5E5">all generic none of them are parsed none</font>

550
00:19:22,360 --> 00:19:26,918
<font color="#E5E5E5">of them are typed or identified they</font>

551
00:19:24,460 --> 00:19:29,500
just identify as dce/rpc<font color="#E5E5E5"> request</font>

552
00:19:26,919 --> 00:19:32,559
<font color="#E5E5E5">response with like an interface ID</font><font color="#CCCCCC"> it's</font>

553
00:19:29,500 --> 00:19:34,540
like the least useful<font color="#E5E5E5"> least</font><font color="#CCCCCC"> useful parts</font>

554
00:19:32,559 --> 00:19:36,010
of Wireshark<font color="#E5E5E5"> I've seen we we've seen</font>

555
00:19:34,540 --> 00:19:37,418
<font color="#CCCCCC">this use in the</font><font color="#E5E5E5"> wild and we</font><font color="#CCCCCC"> actually got</font>

556
00:19:36,010 --> 00:19:38,710
<font color="#CCCCCC">picked</font><font color="#E5E5E5"> up and</font><font color="#CCCCCC"> this is how we started</font>

557
00:19:37,419 --> 00:19:41,590
<font color="#E5E5E5">down this</font><font color="#CCCCCC"> road as we went in</font><font color="#E5E5E5"> and we're</font>

558
00:19:38,710 --> 00:19:42,850
like this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not helpful I need to</font>

559
00:19:41,590 --> 00:19:44,860
understand what's going<font color="#CCCCCC"> on here</font>

560
00:19:42,850 --> 00:19:50,290
and so we're<font color="#CCCCCC"> gonna come</font><font color="#E5E5E5"> back to this and</font>

561
00:19:44,860 --> 00:19:53,520
<font color="#E5E5E5">how we can work to fix this</font><font color="#CCCCCC"> slides here</font>

562
00:19:50,290 --> 00:19:56,350
<font color="#E5E5E5">the last piece is I dispatch invoke so</font>

563
00:19:53,520 --> 00:19:58,600
this is the execution<font color="#CCCCCC"> phase this</font><font color="#E5E5E5"> is</font>

564
00:19:56,350 --> 00:20:00,790
<font color="#E5E5E5">where the client</font><font color="#CCCCCC"> actually tells the</font>

565
00:19:58,600 --> 00:20:02,800
comma object on the I dispatch interface

566
00:20:00,790 --> 00:20:04,060
wants<font color="#E5E5E5"> to invoke a function you'll note</font>

567
00:20:02,800 --> 00:20:05,860
<font color="#CCCCCC">that again</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> clear-text</font>

568
00:20:04,060 --> 00:20:07,540
the function arguments are<font color="#E5E5E5"> passed so you</font>

569
00:20:05,860 --> 00:20:11,889
can see the<font color="#CCCCCC"> unicode string</font><font color="#E5E5E5"> there at the</font>

570
00:20:07,540 --> 00:20:14,020
bottom<font color="#E5E5E5"> for</font><font color="#CCCCCC"> windows calc c so this is</font>

571
00:20:11,890 --> 00:20:16,270
<font color="#CCCCCC">where if you were to</font><font color="#E5E5E5"> fewer to see this</font>

572
00:20:14,020 --> 00:20:17,800
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> know what</font><font color="#E5E5E5"> was being spawned and</font>

573
00:20:16,270 --> 00:20:19,660
you could trace<font color="#CCCCCC"> it back to</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> specific</font>

574
00:20:17,800 --> 00:20:23,770
function was being used<font color="#CCCCCC"> based on</font><font color="#E5E5E5"> the</font>

575
00:20:19,660 --> 00:20:25,030
member ID<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that get names so take a</font>

576
00:20:23,770 --> 00:20:27,610
breath<font color="#CCCCCC"> a breath of fresh air no more</font>

577
00:20:25,030 --> 00:20:29,410
packet<font color="#CCCCCC"> bites for</font><font color="#E5E5E5"> a while</font><font color="#CCCCCC"> the next step</font>

578
00:20:27,610 --> 00:20:30,010
but we kind of look<font color="#CCCCCC"> out as</font><font color="#E5E5E5"> defining</font>

579
00:20:29,410 --> 00:20:31,800
criteria

580
00:20:30,010 --> 00:20:34,090
so<font color="#CCCCCC"> within</font><font color="#E5E5E5"> detection engineering</font>

581
00:20:31,800 --> 00:20:35,830
<font color="#CCCCCC">detection seems</font><font color="#E5E5E5"> very magic to people</font>

582
00:20:34,090 --> 00:20:38,230
it's<font color="#E5E5E5"> like how do</font><font color="#CCCCCC"> I I got to do</font><font color="#E5E5E5"> this</font>

583
00:20:35,830 --> 00:20:39,909
magic<font color="#E5E5E5"> behavioral analysis and AI</font><font color="#CCCCCC"> and</font>

584
00:20:38,230 --> 00:20:42,010
machine<font color="#CCCCCC"> learning models and</font><font color="#E5E5E5"> it's gonna</font>

585
00:20:39,910 --> 00:20:42,970
<font color="#CCCCCC">magically pop out a bad guy but nine</font>

586
00:20:42,010 --> 00:20:44,920
times<font color="#E5E5E5"> out of</font><font color="#CCCCCC"> ten it's</font><font color="#E5E5E5"> not that</font>

587
00:20:42,970 --> 00:20:47,320
complicated<font color="#CCCCCC"> it's a simple</font><font color="#E5E5E5"> equation</font>

588
00:20:44,920 --> 00:20:48,520
<font color="#CCCCCC">you'll have</font><font color="#E5E5E5"> things that</font><font color="#CCCCCC"> definitely are</font>

589
00:20:47,320 --> 00:20:50,830
<font color="#E5E5E5">used by bad</font><font color="#CCCCCC"> guys</font>

590
00:20:48,520 --> 00:20:53,200
aka strict criteria it's required<font color="#CCCCCC"> for</font>

591
00:20:50,830 --> 00:20:54,820
the technique<font color="#CCCCCC"> to exist</font><font color="#E5E5E5"> and you'll have</font>

592
00:20:53,200 --> 00:20:57,730
loose criteria which<font color="#E5E5E5"> are things that</font>

593
00:20:54,820 --> 00:20:59,770
<font color="#E5E5E5">sometimes might be present</font><font color="#CCCCCC"> if they exist</font>

594
00:20:57,730 --> 00:21:01,240
and<font color="#E5E5E5"> you have exclusion criteria so you</font>

595
00:20:59,770 --> 00:21:03,550
<font color="#E5E5E5">have things that should never be there</font>

596
00:21:01,240 --> 00:21:05,650
<font color="#E5E5E5">if they exist or things you</font><font color="#CCCCCC"> don't care</font>

597
00:21:03,550 --> 00:21:07,000
about if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> just make a little simple</font>

598
00:21:05,650 --> 00:21:09,400
equation out of that so<font color="#E5E5E5"> take all your</font>

599
00:21:07,000 --> 00:21:11,050
strict criteria<font color="#E5E5E5"> and them together and</font>

600
00:21:09,400 --> 00:21:13,060
take all<font color="#CCCCCC"> your loose criterion or them</font>

601
00:21:11,050 --> 00:21:14,530
together<font color="#E5E5E5"> take your solution criteria and</font>

602
00:21:13,060 --> 00:21:16,510
<font color="#CCCCCC">not them you essentially have a</font>

603
00:21:14,530 --> 00:21:19,780
detection<font color="#E5E5E5"> so this is kind of an equation</font>

604
00:21:16,510 --> 00:21:22,600
for detecting behaviors<font color="#E5E5E5"> and breaking</font>

605
00:21:19,780 --> 00:21:25,629
down particular attack chains into these

606
00:21:22,600 --> 00:21:27,699
criteria<font color="#E5E5E5"> for us when we look at this we</font>

607
00:21:25,630 --> 00:21:29,410
break down strict<font color="#CCCCCC"> so</font><font color="#E5E5E5"> essentially what</font>

608
00:21:27,700 --> 00:21:31,420
was common<font color="#E5E5E5"> across all the</font><font color="#CCCCCC"> different</font>

609
00:21:29,410 --> 00:21:33,760
cases we looked<font color="#CCCCCC"> at this there was always</font>

610
00:21:31,420 --> 00:21:35,140
an<font color="#E5E5E5"> activation has to be an activation</font>

611
00:21:33,760 --> 00:21:37,030
<font color="#E5E5E5">for the D common object to get mapped</font>

612
00:21:35,140 --> 00:21:38,980
<font color="#E5E5E5">which means that the remote gate class</font>

613
00:21:37,030 --> 00:21:42,040
object or<font color="#E5E5E5"> co-create instance another</font>

614
00:21:38,980 --> 00:21:43,570
<font color="#E5E5E5">case</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> always be there what this</font>

615
00:21:42,040 --> 00:21:45,730
<font color="#E5E5E5">allows</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to do is that</font><font color="#CCCCCC"> that's a</font><font color="#E5E5E5"> very</font>

616
00:21:43,570 --> 00:21:47,800
strict key piece of<font color="#CCCCCC"> our detection</font><font color="#E5E5E5"> the</font>

617
00:21:45,730 --> 00:21:49,240
next piece<font color="#CCCCCC"> is some</font><font color="#E5E5E5"> method of initiating</font>

618
00:21:47,800 --> 00:21:51,340
execution this could be via the<font color="#E5E5E5"> I</font>

619
00:21:49,240 --> 00:21:53,560
dispatch we talked about this could be

620
00:21:51,340 --> 00:21:56,230
via some other<font color="#CCCCCC"> comm load method that's</font>

621
00:21:53,560 --> 00:21:57,669
<font color="#CCCCCC">used but those two key</font><font color="#E5E5E5"> pieces have to</font><font color="#CCCCCC"> be</font>

622
00:21:56,230 --> 00:22:00,340
<font color="#E5E5E5">there when we dive in on loose you'll</font>

623
00:21:57,670 --> 00:22:02,080
see a lot of the indicators are

624
00:22:00,340 --> 00:22:05,290
interchangeable so<font color="#CCCCCC"> we can't base our</font>

625
00:22:02,080 --> 00:22:07,689
<font color="#E5E5E5">detection strictly on class ID</font><font color="#CCCCCC"> unless we</font>

626
00:22:05,290 --> 00:22:09,399
<font color="#E5E5E5">know all of the</font><font color="#CCCCCC"> know and Bad's</font><font color="#E5E5E5"> we can't</font>

627
00:22:07,690 --> 00:22:11,050
base our<font color="#E5E5E5"> detection strictly on like the</font>

628
00:22:09,400 --> 00:22:12,760
presence of<font color="#CCCCCC"> I type info because that</font>

629
00:22:11,050 --> 00:22:13,960
might not be there<font color="#E5E5E5"> if a user is</font><font color="#CCCCCC"> not</font>

630
00:22:12,760 --> 00:22:17,350
<font color="#E5E5E5">exploring</font>

631
00:22:13,960 --> 00:22:20,169
and so on so let's actually start

632
00:22:17,350 --> 00:22:22,299
<font color="#E5E5E5">talking about the NSM capabilities or</font>

633
00:22:20,169 --> 00:22:25,480
what we can<font color="#E5E5E5"> actually do in real life to</font>

634
00:22:22,299 --> 00:22:26,860
make this happen<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> what we call</font>

635
00:22:25,480 --> 00:22:29,710
<font color="#E5E5E5">the detection spectrum again a little</font>

636
00:22:26,860 --> 00:22:31,508
bit more detection 101 stuff here<font color="#CCCCCC"> a lot</font>

637
00:22:29,710 --> 00:22:33,580
<font color="#E5E5E5">of people again</font><font color="#CCCCCC"> are quick to</font><font color="#E5E5E5"> rush to</font>

638
00:22:31,509 --> 00:22:36,249
<font color="#CCCCCC">behavioral detection without</font>

639
00:22:33,580 --> 00:22:37,509
understanding<font color="#E5E5E5"> where it falls really</font>

640
00:22:36,249 --> 00:22:39,009
<font color="#CCCCCC">there's a number</font><font color="#E5E5E5"> of different kinds</font><font color="#CCCCCC"> of</font>

641
00:22:37,509 --> 00:22:40,809
<font color="#E5E5E5">detection there's atomic indicators</font>

642
00:22:39,009 --> 00:22:43,240
which everyone kind of bashes on but

643
00:22:40,809 --> 00:22:45,279
<font color="#E5E5E5">sometimes they're the most useful so</font>

644
00:22:43,240 --> 00:22:47,950
like maybe<font color="#E5E5E5"> not an IP address but a</font>

645
00:22:45,279 --> 00:22:49,690
domain<font color="#CCCCCC"> name like if it's bad it's bad</font>

646
00:22:47,950 --> 00:22:51,639
<font color="#E5E5E5">maybe we should just go look</font><font color="#CCCCCC"> for domain</font>

647
00:22:49,690 --> 00:22:54,820
name maybe it's actually<font color="#E5E5E5"> at simple a</font>

648
00:22:51,639 --> 00:22:56,529
hash another one<font color="#CCCCCC"> obviously they're weak</font>

649
00:22:54,820 --> 00:22:57,610
so when<font color="#E5E5E5"> you start going down</font><font color="#CCCCCC"> the line</font><font color="#E5E5E5"> of</font>

650
00:22:56,529 --> 00:22:59,799
<font color="#E5E5E5">all the different properties or</font>

651
00:22:57,610 --> 00:23:01,748
characteristics<font color="#E5E5E5"> of these I consider a</font>

652
00:22:59,799 --> 00:23:03,700
weak or fragile<font color="#E5E5E5"> because the attacker can</font>

653
00:23:01,749 --> 00:23:06,730
easily<font color="#E5E5E5"> change it but note that</font><font color="#CCCCCC"> it's very</font>

654
00:23:03,700 --> 00:23:08,919
high<font color="#CCCCCC"> confidence</font><font color="#E5E5E5"> and then we can look at</font>

655
00:23:06,730 --> 00:23:10,360
<font color="#E5E5E5">more event based indicators or</font>

656
00:23:08,919 --> 00:23:12,879
behavioral detection with machine

657
00:23:10,360 --> 00:23:14,709
<font color="#CCCCCC">learning and</font><font color="#E5E5E5"> modeling and</font><font color="#CCCCCC"> and we kind</font><font color="#E5E5E5"> of</font>

658
00:23:12,879 --> 00:23:17,320
get<font color="#CCCCCC"> to a more</font><font color="#E5E5E5"> robust state but usually</font>

659
00:23:14,710 --> 00:23:19,779
lower confidence<font color="#E5E5E5"> you start to and get a</font>

660
00:23:17,320 --> 00:23:22,240
lot of false<font color="#CCCCCC"> positives and requirements</font>

661
00:23:19,779 --> 00:23:24,549
<font color="#CCCCCC">for tuning</font><font color="#E5E5E5"> and learning and training and</font>

662
00:23:22,240 --> 00:23:26,679
it gets very complicated<font color="#E5E5E5"> very fast</font><font color="#CCCCCC"> in an</font>

663
00:23:24,549 --> 00:23:28,509
ideal<font color="#E5E5E5"> world</font><font color="#CCCCCC"> you deploy lots of these</font>

664
00:23:26,679 --> 00:23:29,950
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things across</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> spectrum you</font>

665
00:23:28,509 --> 00:23:32,049
don't rely on one you<font color="#E5E5E5"> don't just have</font>

666
00:23:29,950 --> 00:23:33,820
behavioral<font color="#E5E5E5"> you have behavioral you have</font>

667
00:23:32,049 --> 00:23:36,190
some simple event metadata based ones

668
00:23:33,820 --> 00:23:38,740
and you<font color="#CCCCCC"> have atomic indicators you do</font>

669
00:23:36,190 --> 00:23:41,169
use like<font color="#E5E5E5"> thread Intel atomic indicator</font>

670
00:23:38,740 --> 00:23:43,869
feeds<font color="#CCCCCC"> and you really get</font><font color="#E5E5E5"> as much</font>

671
00:23:41,169 --> 00:23:46,240
coverage as<font color="#CCCCCC"> possible</font><font color="#E5E5E5"> so imagine this</font>

672
00:23:43,869 --> 00:23:47,740
dotted<font color="#E5E5E5"> line is our attack surface this</font>

673
00:23:46,240 --> 00:23:50,470
<font color="#E5E5E5">is</font><font color="#CCCCCC"> all the different ways that</font><font color="#E5E5E5"> you can</font>

674
00:23:47,740 --> 00:23:52,570
run this class of attack<font color="#E5E5E5"> decom lateral</font>

675
00:23:50,470 --> 00:23:54,009
spread and then these are<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the</font>

676
00:23:52,570 --> 00:23:55,749
different<font color="#E5E5E5"> methods</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> doing this</font><font color="#CCCCCC"> so these</font>

677
00:23:54,009 --> 00:23:57,490
are all the different class IDs and ways

678
00:23:55,749 --> 00:23:59,289
<font color="#E5E5E5">to instantiate objects and ways to</font>

679
00:23:57,490 --> 00:24:01,749
<font color="#E5E5E5">execute functions</font>

680
00:23:59,289 --> 00:24:04,269
our goal is defenders and detection

681
00:24:01,749 --> 00:24:06,999
engineers is to<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> overlay</font>

682
00:24:04,269 --> 00:24:09,190
methods different detections<font color="#E5E5E5"> across the</font>

683
00:24:06,999 --> 00:24:11,559
spectrum<font color="#CCCCCC"> that allow us to cover as much</font>

684
00:24:09,190 --> 00:24:13,299
<font color="#CCCCCC">of this attack surface as possible note</font>

685
00:24:11,559 --> 00:24:15,700
<font color="#CCCCCC">that I</font><font color="#E5E5E5"> always leave method outside the</font>

686
00:24:13,299 --> 00:24:17,799
circles because it's just not realistic

687
00:24:15,700 --> 00:24:19,539
<font color="#E5E5E5">to find every single attack of every</font>

688
00:24:17,799 --> 00:24:22,149
class of<font color="#E5E5E5"> technique I'm a realist I was a</font>

689
00:24:19,539 --> 00:24:25,690
red teamer for<font color="#E5E5E5"> awhile</font><font color="#CCCCCC"> I tend to be</font>

690
00:24:22,149 --> 00:24:27,969
paranoid<font color="#CCCCCC"> so they you also</font><font color="#E5E5E5"> note</font><font color="#CCCCCC"> that</font>

691
00:24:25,690 --> 00:24:29,440
there are<font color="#E5E5E5"> cases where there is over</font>

692
00:24:27,970 --> 00:24:30,490
so like the<font color="#CCCCCC"> method in the</font><font color="#E5E5E5"> middle where</font>

693
00:24:29,440 --> 00:24:33,010
it's overlapping on three different

694
00:24:30,490 --> 00:24:34,210
<font color="#CCCCCC">detection</font><font color="#E5E5E5"> that's beautiful because</font><font color="#CCCCCC"> when</font>

695
00:24:33,010 --> 00:24:36,340
you start getting<font color="#E5E5E5"> things that hit on</font>

696
00:24:34,210 --> 00:24:37,690
multiple detection<font color="#E5E5E5"> it increases the</font>

697
00:24:36,340 --> 00:24:39,129
<font color="#CCCCCC">confidence in clustering of</font><font color="#E5E5E5"> that</font>

698
00:24:37,690 --> 00:24:41,580
detection<font color="#E5E5E5"> so it could be more meaningful</font>

699
00:24:39,130 --> 00:24:45,610
<font color="#CCCCCC">for you when you start</font><font color="#E5E5E5"> looking at them</font>

700
00:24:41,580 --> 00:24:47,409
so let's talk<font color="#CCCCCC"> NSM we'll start by looking</font>

701
00:24:45,610 --> 00:24:49,750
<font color="#CCCCCC">at the kind</font><font color="#E5E5E5"> of three generic techniques</font>

702
00:24:47,410 --> 00:24:51,850
that most<font color="#E5E5E5"> companies employ</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> SM wise</font>

703
00:24:49,750 --> 00:24:54,490
there's there's kind of three generic

704
00:24:51,850 --> 00:24:56,770
ways<font color="#E5E5E5"> one there's rule-based</font><font color="#CCCCCC"> ideas</font><font color="#E5E5E5"> so</font>

705
00:24:54,490 --> 00:24:59,020
this<font color="#E5E5E5"> is things like</font><font color="#CCCCCC"> sura cotta</font><font color="#E5E5E5"> or snore</font>

706
00:24:56,770 --> 00:25:03,850
or paid solutions that<font color="#CCCCCC"> I won't</font><font color="#E5E5E5"> stand up</font>

707
00:24:59,020 --> 00:25:05,530
here<font color="#CCCCCC"> and talk about</font><font color="#E5E5E5"> these these are very</font>

708
00:25:03,850 --> 00:25:07,659
good in<font color="#CCCCCC"> that they provide high</font>

709
00:25:05,530 --> 00:25:10,450
confidence<font color="#E5E5E5"> alerting if the signatures</font>

710
00:25:07,660 --> 00:25:14,080
are good key<font color="#E5E5E5"> very big star signatures</font>

711
00:25:10,450 --> 00:25:15,880
<font color="#E5E5E5">are important but they lack context and</font>

712
00:25:14,080 --> 00:25:17,740
generally<font color="#E5E5E5"> these are only for knowing bad</font>

713
00:25:15,880 --> 00:25:19,480
<font color="#E5E5E5">so you have to know something as an</font>

714
00:25:17,740 --> 00:25:22,180
attack technique<font color="#E5E5E5"> before you'll have a</font>

715
00:25:19,480 --> 00:25:23,620
<font color="#E5E5E5">signature for it</font><font color="#CCCCCC"> and what that means is</font>

716
00:25:22,180 --> 00:25:25,390
so you can't be you<font color="#E5E5E5"> can't be very</font>

717
00:25:23,620 --> 00:25:28,570
generic<font color="#E5E5E5"> it's hard to get generic and</font>

718
00:25:25,390 --> 00:25:30,580
still be fruitful<font color="#E5E5E5"> then you have metadata</font>

719
00:25:28,570 --> 00:25:32,020
<font color="#E5E5E5">extraction these are things like</font><font color="#CCCCCC"> row</font><font color="#E5E5E5"> IDs</font>

720
00:25:30,580 --> 00:25:34,540
is a really good example<font color="#CCCCCC"> of that we'll</font>

721
00:25:32,020 --> 00:25:36,100
talk<font color="#E5E5E5"> about it a little bit more but this</font>

722
00:25:34,540 --> 00:25:37,840
inspects traffic and extract relevant

723
00:25:36,100 --> 00:25:39,459
<font color="#E5E5E5">indicators from the traffic so this</font>

724
00:25:37,840 --> 00:25:41,649
isn't capturing all<font color="#CCCCCC"> traffic at all time</font>

725
00:25:39,460 --> 00:25:43,330
it's not<font color="#CCCCCC"> just giving you alerts</font><font color="#E5E5E5"> it's</font>

726
00:25:41,650 --> 00:25:45,670
giving you telemetry<font color="#E5E5E5"> it's common phrase</font>

727
00:25:43,330 --> 00:25:48,010
for it<font color="#E5E5E5"> and this enables things like time</font>

728
00:25:45,670 --> 00:25:50,710
series analysis and outlier detection

729
00:25:48,010 --> 00:25:52,990
and and other slightly<font color="#E5E5E5"> more advanced</font>

730
00:25:50,710 --> 00:25:54,610
techniques of identifying bad stuff<font color="#E5E5E5"> note</font>

731
00:25:52,990 --> 00:25:56,980
the purpose of metadata distraction is

732
00:25:54,610 --> 00:25:58,959
not purely alerting<font color="#CCCCCC"> it's also</font><font color="#E5E5E5"> you start</font>

733
00:25:56,980 --> 00:26:00,280
<font color="#CCCCCC">getting into a forensics element being</font>

734
00:25:58,960 --> 00:26:02,290
<font color="#E5E5E5">able to watch</font><font color="#CCCCCC"> what happened in an</font>

735
00:26:00,280 --> 00:26:04,870
environment<font color="#E5E5E5"> and then the last</font><font color="#CCCCCC"> ones full</font>

736
00:26:02,290 --> 00:26:06,580
<font color="#E5E5E5">content or pcap so this can be</font><font color="#CCCCCC"> very</font>

737
00:26:04,870 --> 00:26:08,169
<font color="#CCCCCC">tough to</font><font color="#E5E5E5"> scale unless you have like data</font>

738
00:26:06,580 --> 00:26:10,860
centers worth of disk arrays<font color="#CCCCCC"> to like</font>

739
00:26:08,170 --> 00:26:15,280
store a fortune one or two<font color="#E5E5E5"> companies</font>

740
00:26:10,860 --> 00:26:17,469
pcap all the time<font color="#E5E5E5"> but</font><font color="#CCCCCC"> uh it can be very</font>

741
00:26:15,280 --> 00:26:20,050
useful<font color="#CCCCCC"> I mean frankly as a network nerd</font>

742
00:26:17,470 --> 00:26:22,480
like<font color="#CCCCCC"> pcap is generally always very</font><font color="#E5E5E5"> very</font>

743
00:26:20,050 --> 00:26:25,180
good I want<font color="#E5E5E5"> some method of</font><font color="#CCCCCC"> getting</font><font color="#E5E5E5"> pcap</font>

744
00:26:22,480 --> 00:26:28,380
on demand at the<font color="#E5E5E5"> bare minimum</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that</font>

745
00:26:25,180 --> 00:26:31,060
allows<font color="#CCCCCC"> me to dive deep when I need to</font>

746
00:26:28,380 --> 00:26:32,800
usually this<font color="#CCCCCC"> peak app will</font><font color="#E5E5E5"> be paired</font>

747
00:26:31,060 --> 00:26:34,840
with like some method of<font color="#E5E5E5"> indexing the</font>

748
00:26:32,800 --> 00:26:36,850
<font color="#E5E5E5">metadata so someone will collect all the</font>

749
00:26:34,840 --> 00:26:39,070
peak out but like<font color="#CCCCCC"> pcaps hard to use for</font>

750
00:26:36,850 --> 00:26:40,870
a sock so how does peak app you use<font color="#E5E5E5"> it</font>

751
00:26:39,070 --> 00:26:42,790
gets indexed<font color="#E5E5E5"> and it becomes metadata</font>

752
00:26:40,870 --> 00:26:47,379
inside of<font color="#CCCCCC"> a sim</font><font color="#E5E5E5"> very similar to the</font>

753
00:26:42,790 --> 00:26:48,879
<font color="#E5E5E5">number two part metadata extraction so</font>

754
00:26:47,380 --> 00:26:50,110
let's look at how we can actually start

755
00:26:48,880 --> 00:26:51,370
detecting<font color="#CCCCCC"> decom in these three</font>

756
00:26:50,110 --> 00:26:53,590
techniques<font color="#CCCCCC"> we'll start with an</font><font color="#E5E5E5"> IDs</font>

757
00:26:51,370 --> 00:26:55,270
signature so this is an example

758
00:26:53,590 --> 00:26:56,740
signature that when we were looking<font color="#CCCCCC"> into</font>

759
00:26:55,270 --> 00:26:59,260
this research we actually deployed

760
00:26:56,740 --> 00:27:01,300
across<font color="#E5E5E5"> our our base</font><font color="#CCCCCC"> and started</font><font color="#E5E5E5"> to use</font>

761
00:26:59,260 --> 00:27:03,100
in production<font color="#E5E5E5"> environments</font><font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is</font>

762
00:27:01,300 --> 00:27:05,080
again this is there is no prior worked

763
00:27:03,100 --> 00:27:07,300
on an IDs for these<font color="#CCCCCC"> decal objects so</font>

764
00:27:05,080 --> 00:27:09,010
kind<font color="#E5E5E5"> of starting fresh breaking the</font>

765
00:27:07,300 --> 00:27:12,730
pieces<font color="#CCCCCC"> apart essentially we're looking</font>

766
00:27:09,010 --> 00:27:15,610
for a particular<font color="#CCCCCC"> op number</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> zero three</font>

767
00:27:12,730 --> 00:27:18,160
is a particular<font color="#CCCCCC"> op number for a</font><font color="#E5E5E5"> dce/rpc</font>

768
00:27:15,610 --> 00:27:19,780
remote<font color="#E5E5E5"> key class object so I'm</font>

769
00:27:18,160 --> 00:27:22,450
<font color="#E5E5E5">specifically</font><font color="#CCCCCC"> looking for remote key</font>

770
00:27:19,780 --> 00:27:25,629
class object<font color="#E5E5E5"> my favorite is the miao</font>

771
00:27:22,450 --> 00:27:27,700
signature<font color="#E5E5E5"> super cool</font><font color="#CCCCCC"> i have</font><font color="#E5E5E5"> no idea</font><font color="#CCCCCC"> what</font>

772
00:27:25,630 --> 00:27:29,500
<font color="#E5E5E5">it's in decom it's common in</font><font color="#CCCCCC"> d</font><font color="#E5E5E5"> column</font>

773
00:27:27,700 --> 00:27:31,510
for<font color="#E5E5E5"> certain stages of the things the</font>

774
00:27:29,500 --> 00:27:33,520
packets literally<font color="#CCCCCC"> meow at each other so</font>

775
00:27:31,510 --> 00:27:35,679
this is a perfect placement<font color="#CCCCCC"> for a gift</font>

776
00:27:33,520 --> 00:27:38,200
if<font color="#CCCCCC"> I had sound but decided not to go</font>

777
00:27:35,679 --> 00:27:41,320
that route<font color="#E5E5E5"> and</font><font color="#CCCCCC"> in the last stage on the</font>

778
00:27:38,200 --> 00:27:43,270
the big piece is the class ID<font color="#E5E5E5"> so</font>

779
00:27:41,320 --> 00:27:45,100
<font color="#E5E5E5">essentially I can</font><font color="#CCCCCC"> create a fairly</font><font color="#E5E5E5"> well</font>

780
00:27:43,270 --> 00:27:46,720
tuned<font color="#E5E5E5"> IDs signature to look for</font>

781
00:27:45,100 --> 00:27:49,149
instantiations<font color="#CCCCCC"> a particular decom</font>

782
00:27:46,720 --> 00:27:51,880
classes and if I can get<font color="#E5E5E5"> an</font><font color="#CCCCCC"> okay</font>

783
00:27:49,150 --> 00:27:53,980
exhaustive list of<font color="#CCCCCC"> deaqon objects-- I</font>

784
00:27:51,880 --> 00:27:56,350
can start<font color="#E5E5E5"> detecting decom lateral</font>

785
00:27:53,980 --> 00:27:58,000
movement<font color="#E5E5E5"> I'll put the caveat</font><font color="#CCCCCC"> that you</font>

786
00:27:56,350 --> 00:28:00,159
need to have an IDs like<font color="#E5E5E5"> looking at</font>

787
00:27:58,000 --> 00:28:01,840
<font color="#E5E5E5">internal traffic</font><font color="#CCCCCC"> east-west and</font><font color="#E5E5E5"> that</font>

788
00:28:00,160 --> 00:28:04,030
isn't<font color="#E5E5E5"> always common but it's a really</font>

789
00:28:01,840 --> 00:28:05,439
good<font color="#E5E5E5"> this is really good</font><font color="#CCCCCC"> justification</font>

790
00:28:04,030 --> 00:28:08,950
for those who are looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> it as</font><font color="#E5E5E5"> to</font>

791
00:28:05,440 --> 00:28:10,270
why<font color="#E5E5E5"> deploy network tools internally the</font>

792
00:28:08,950 --> 00:28:12,070
next piece<font color="#CCCCCC"> we'll talk</font><font color="#E5E5E5"> about is metadata</font>

793
00:28:10,270 --> 00:28:13,900
<font color="#CCCCCC">extraction</font><font color="#E5E5E5"> so we're gonna focus on bro</font>

794
00:28:12,070 --> 00:28:15,820
IDs it's the open source capability that

795
00:28:13,900 --> 00:28:17,080
<font color="#CCCCCC">allows this and a lot of products are</font>

796
00:28:15,820 --> 00:28:18,520
<font color="#E5E5E5">built on top of it and a lot of</font>

797
00:28:17,080 --> 00:28:21,460
<font color="#E5E5E5">companies build on top of</font><font color="#CCCCCC"> it for</font>

798
00:28:18,520 --> 00:28:22,840
homegrown solutions<font color="#E5E5E5"> there are three key</font>

799
00:28:21,460 --> 00:28:24,460
<font color="#E5E5E5">pieces you need to understand for bro</font>

800
00:28:22,840 --> 00:28:27,520
IDs to start<font color="#E5E5E5"> weren't</font><font color="#CCCCCC"> wondering how we</font>

801
00:28:24,460 --> 00:28:29,320
can detect decom one is bin pack so bin

802
00:28:27,520 --> 00:28:31,389
pack is<font color="#CCCCCC"> the bro IDs element that allows</font>

803
00:28:29,320 --> 00:28:34,090
<font color="#CCCCCC">you</font><font color="#E5E5E5"> to define parsers it's essentially a</font>

804
00:28:31,390 --> 00:28:36,610
language that<font color="#E5E5E5"> you can define structures</font>

805
00:28:34,090 --> 00:28:38,800
at<font color="#E5E5E5"> to parse out of the network the next</font>

806
00:28:36,610 --> 00:28:41,530
step is events so when a bin pack

807
00:28:38,800 --> 00:28:44,110
signature matches<font color="#E5E5E5"> it'll cause an event</font>

808
00:28:41,530 --> 00:28:46,480
to fire<font color="#E5E5E5"> so there's a holy venting engine</font>

809
00:28:44,110 --> 00:28:48,459
inside of<font color="#E5E5E5"> bro</font><font color="#CCCCCC"> and then when any event</font>

810
00:28:46,480 --> 00:28:51,040
fires<font color="#E5E5E5"> it's handled by an event handler</font>

811
00:28:48,460 --> 00:28:52,990
which is a script so<font color="#CCCCCC"> scripts are written</font>

812
00:28:51,040 --> 00:28:54,168
<font color="#E5E5E5">dynamically they are meant to consume</font>

813
00:28:52,990 --> 00:28:55,999
<font color="#CCCCCC">Network events</font><font color="#E5E5E5"> and</font>

814
00:28:54,169 --> 00:28:57,679
do things with them they<font color="#E5E5E5"> can do things</font>

815
00:28:55,999 --> 00:29:00,440
like output events they<font color="#CCCCCC"> can do some</font>

816
00:28:57,679 --> 00:29:02,090
basic detection and<font color="#CCCCCC"> analysis</font><font color="#E5E5E5"> essentially</font>

817
00:29:00,440 --> 00:29:03,859
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> do anything</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do and like</font>

818
00:29:02,090 --> 00:29:07,189
languages like C which is<font color="#CCCCCC"> grows</font>

819
00:29:03,859 --> 00:29:08,869
underneath<font color="#E5E5E5"> under the hood so what's</font>

820
00:29:07,190 --> 00:29:10,759
wrong with<font color="#E5E5E5"> bro</font><font color="#CCCCCC"> why did we</font><font color="#E5E5E5"> get all</font><font color="#CCCCCC"> those</font>

821
00:29:08,869 --> 00:29:12,049
<font color="#CCCCCC">anote unknown</font><font color="#E5E5E5"> those my first question is</font>

822
00:29:10,759 --> 00:29:14,210
like<font color="#E5E5E5"> bro is usually</font><font color="#CCCCCC"> really good the</font>

823
00:29:12,049 --> 00:29:17,119
parsers are verily they lean forward

824
00:29:14,210 --> 00:29:18,559
they're usually out<font color="#E5E5E5"> really</font><font color="#CCCCCC"> early and</font><font color="#E5E5E5"> D</font>

825
00:29:17,119 --> 00:29:20,119
<font color="#E5E5E5">coms been around so long like why isn't</font>

826
00:29:18,559 --> 00:29:22,279
parsing<font color="#E5E5E5"> well I went to the</font><font color="#CCCCCC"> bro source</font>

827
00:29:20,119 --> 00:29:23,899
code<font color="#CCCCCC"> and you'll see this picture like</font>

828
00:29:22,279 --> 00:29:25,879
two of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> biggest functions that are</font>

829
00:29:23,899 --> 00:29:28,820
important for dce/rpc<font color="#E5E5E5"> or literally just</font>

830
00:29:25,879 --> 00:29:31,428
commented<font color="#CCCCCC"> out and</font><font color="#E5E5E5"> bros parser like the</font>

831
00:29:28,820 --> 00:29:33,559
<font color="#E5E5E5">hashtags</font><font color="#CCCCCC"> DCE ultra</font><font color="#E5E5E5"> contacts they're</font>

832
00:29:31,429 --> 00:29:36,590
<font color="#E5E5E5">simply not</font><font color="#CCCCCC"> even handling</font><font color="#E5E5E5"> alter context</font>

833
00:29:33,559 --> 00:29:39,080
and bros current<font color="#CCCCCC"> our</font><font color="#E5E5E5"> pc parser</font><font color="#CCCCCC"> which</font>

834
00:29:36,590 --> 00:29:41,059
means that<font color="#CCCCCC"> anytime an alter contacts is</font>

835
00:29:39,080 --> 00:29:42,678
used to change the<font color="#E5E5E5"> interface that you're</font>

836
00:29:41,059 --> 00:29:45,019
looking at are using calls<font color="#E5E5E5"> to but</font><font color="#CCCCCC"> i</font>

837
00:29:42,679 --> 00:29:46,820
won't see it and so all<font color="#CCCCCC"> of the calls</font>

838
00:29:45,019 --> 00:29:49,580
after<font color="#E5E5E5"> that outs or contacts are actually</font>

839
00:29:46,820 --> 00:29:51,678
mislabeled<font color="#E5E5E5"> their false events they're</font>

840
00:29:49,580 --> 00:29:53,840
not<font color="#E5E5E5"> helpful they could cause alerts when</font>

841
00:29:51,679 --> 00:29:56,359
they<font color="#E5E5E5"> don't need to it's a huge</font><font color="#CCCCCC"> problem</font>

842
00:29:53,840 --> 00:29:58,820
<font color="#CCCCCC">so that's one of the big</font><font color="#E5E5E5"> problems and</font>

843
00:29:56,359 --> 00:30:00,859
<font color="#E5E5E5">the other one is is because bros is an</font>

844
00:29:58,820 --> 00:30:02,480
RPC parser it's not focused strictly on

845
00:30:00,859 --> 00:30:04,609
decomp<font color="#CCCCCC"> it doesn't parse out some of the</font>

846
00:30:02,480 --> 00:30:06,049
<font color="#E5E5E5">decomp specific pieces</font><font color="#CCCCCC"> like the class</font>

847
00:30:04,609 --> 00:30:08,600
ideas which<font color="#E5E5E5"> are really important to</font>

848
00:30:06,049 --> 00:30:09,859
<font color="#E5E5E5">start</font><font color="#CCCCCC"> to identify malicious use so those</font>

849
00:30:08,600 --> 00:30:13,129
are the kind of<font color="#E5E5E5"> key pieces that we</font>

850
00:30:09,859 --> 00:30:15,859
identified and wanted<font color="#CCCCCC"> to set out</font><font color="#E5E5E5"> to fix</font>

851
00:30:13,129 --> 00:30:17,209
a little<font color="#CCCCCC"> bit so the first</font><font color="#E5E5E5"> piece and</font><font color="#CCCCCC"> the</font>

852
00:30:15,859 --> 00:30:19,158
the piece we were able<font color="#E5E5E5"> to get done in</font>

853
00:30:17,210 --> 00:30:21,980
relatively short form and<font color="#E5E5E5"> present to you</font>

854
00:30:19,159 --> 00:30:24,350
today was the<font color="#CCCCCC"> ability to</font><font color="#E5E5E5"> parse class IDs</font>

855
00:30:21,980 --> 00:30:25,850
<font color="#CCCCCC">so essentially what we had to do is</font><font color="#E5E5E5"> we</font>

856
00:30:24,350 --> 00:30:29,238
had to<font color="#E5E5E5"> go into</font><font color="#CCCCCC"> bros underlying source</font>

857
00:30:25,850 --> 00:30:32,330
code and<font color="#E5E5E5"> modify the ability</font><font color="#CCCCCC"> to parse the</font>

858
00:30:29,239 --> 00:30:34,070
full dce/rpc stub so you'll note<font color="#CCCCCC"> that</font>

859
00:30:32,330 --> 00:30:36,049
when<font color="#E5E5E5"> pcap we showed you that stub data</font>

860
00:30:34,070 --> 00:30:38,480
essentially<font color="#E5E5E5"> it's all the decom specific</font>

861
00:30:36,049 --> 00:30:40,730
stuff of the RPC<font color="#CCCCCC"> message we want</font><font color="#E5E5E5"> to pass</font>

862
00:30:38,480 --> 00:30:42,980
<font color="#CCCCCC">that to the</font><font color="#E5E5E5"> event handler so</font><font color="#CCCCCC"> I can do</font>

863
00:30:40,730 --> 00:30:45,019
<font color="#E5E5E5">even handle or logic to say if this</font><font color="#CCCCCC"> is a</font>

864
00:30:42,980 --> 00:30:47,960
particular<font color="#E5E5E5"> operation like remote get</font>

865
00:30:45,019 --> 00:30:50,809
class<font color="#E5E5E5"> object I can extract the CLS ID</font>

866
00:30:47,960 --> 00:30:53,090
and log it that allows us<font color="#CCCCCC"> to</font><font color="#E5E5E5"> start to</font>

867
00:30:50,809 --> 00:30:54,889
get those indicators and down on paper

868
00:30:53,090 --> 00:30:57,889
so<font color="#CCCCCC"> that we can do forensics and trace</font>

869
00:30:54,889 --> 00:31:00,289
what is going<font color="#E5E5E5"> on this is the bro script</font>

870
00:30:57,889 --> 00:31:01,699
I use this is super ugly<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> read</font>

871
00:31:00,289 --> 00:31:04,158
disclaimers here you'll note<font color="#CCCCCC"> that this</font>

872
00:31:01,700 --> 00:31:05,899
is still<font color="#E5E5E5"> like beta this is internal work</font>

873
00:31:04,159 --> 00:31:07,530
being done we're actually looking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> try</font>

874
00:31:05,899 --> 00:31:09,780
to<font color="#E5E5E5"> submit a pull request a bro</font>

875
00:31:07,530 --> 00:31:12,240
to<font color="#E5E5E5"> fix up all of this decom work</font><font color="#CCCCCC"> but</font>

876
00:31:09,780 --> 00:31:14,280
it's a lot longer of a process so we're

877
00:31:12,240 --> 00:31:16,350
<font color="#E5E5E5">this is beta this is running it works in</font>

878
00:31:14,280 --> 00:31:17,820
production<font color="#CCCCCC"> I've</font><font color="#E5E5E5"> tested this essentially</font>

879
00:31:16,350 --> 00:31:19,560
what<font color="#E5E5E5"> this</font><font color="#CCCCCC"> does is look for the two</font>

880
00:31:17,820 --> 00:31:21,419
<font color="#E5E5E5">different methods</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> doing activation</font><font color="#CCCCCC"> a</font>

881
00:31:19,560 --> 00:31:23,820
remote<font color="#CCCCCC"> kit class object and remote</font>

882
00:31:21,420 --> 00:31:27,600
create instance and parse out class IDs

883
00:31:23,820 --> 00:31:30,149
and log them in<font color="#E5E5E5"> the RPC log and we're</font>

884
00:31:27,600 --> 00:31:31,260
<font color="#CCCCCC">gonna get a image of</font><font color="#E5E5E5"> that soon so let's</font>

885
00:31:30,150 --> 00:31:32,610
look at that natural imagery I'm gonna

886
00:31:31,260 --> 00:31:35,190
do the<font color="#E5E5E5"> same technique I'm gonna do an</font>

887
00:31:32,610 --> 00:31:36,419
MMC<font color="#CCCCCC"> 2o application I'm gonna create the</font>

888
00:31:35,190 --> 00:31:38,310
<font color="#CCCCCC">instance I'm</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to spawn a command</font>

889
00:31:36,420 --> 00:31:38,880
<font color="#E5E5E5">and when I come</font><font color="#CCCCCC"> over to my defensive</font>

890
00:31:38,310 --> 00:31:41,790
tools

891
00:31:38,880 --> 00:31:43,290
so<font color="#E5E5E5"> yeh calculator when I come over to my</font>

892
00:31:41,790 --> 00:31:45,840
defensive tools you'll see I have<font color="#E5E5E5"> some</font>

893
00:31:43,290 --> 00:31:48,870
added<font color="#E5E5E5"> stuff instead of I now have the</font>

894
00:31:45,840 --> 00:31:51,659
class ID of the object<font color="#CCCCCC"> that was ran</font><font color="#E5E5E5"> its</font>

895
00:31:48,870 --> 00:31:54,959
that class ID<font color="#E5E5E5"> tracks to MMC</font><font color="#CCCCCC"> I also have</font>

896
00:31:51,660 --> 00:31:56,850
a circuit a signature that fired<font color="#E5E5E5"> so no</font>

897
00:31:54,960 --> 00:31:58,740
longer<font color="#CCCCCC"> is my telemetry</font><font color="#E5E5E5"> completely</font>

898
00:31:56,850 --> 00:32:00,120
useless<font color="#CCCCCC"> I have the basics</font>

899
00:31:58,740 --> 00:32:02,070
I have enough to do some forensic

900
00:32:00,120 --> 00:32:05,250
analysis and say what<font color="#CCCCCC"> comm was used and</font>

901
00:32:02,070 --> 00:32:09,570
I have<font color="#E5E5E5"> enough to do some basic alerting</font>

902
00:32:05,250 --> 00:32:12,060
when this stuff is<font color="#CCCCCC"> firing off so again</font>

903
00:32:09,570 --> 00:32:13,200
it's a<font color="#E5E5E5"> little bit better</font><font color="#CCCCCC"> there's still a</font>

904
00:32:12,060 --> 00:32:15,419
lot of<font color="#E5E5E5"> room to grow</font>

905
00:32:13,200 --> 00:32:16,530
we still<font color="#E5E5E5"> haven't fixed the full decomp</font>

906
00:32:15,420 --> 00:32:20,150
part so that's<font color="#E5E5E5"> what we're working on</font>

907
00:32:16,530 --> 00:32:22,649
internally<font color="#E5E5E5"> now</font><font color="#CCCCCC"> to add back the broom but</font>

908
00:32:20,150 --> 00:32:24,780
<font color="#CCCCCC">getting this has been enough for us so</font>

909
00:32:22,650 --> 00:32:26,370
again we we see red<font color="#E5E5E5"> team</font><font color="#CCCCCC"> dolled all the</font>

910
00:32:24,780 --> 00:32:27,660
time and our customer environments doing

911
00:32:26,370 --> 00:32:28,830
<font color="#E5E5E5">this stuff this is</font><font color="#CCCCCC"> like their favorite</font>

912
00:32:27,660 --> 00:32:30,810
<font color="#E5E5E5">technique because they think it's going</font>

913
00:32:28,830 --> 00:32:32,159
<font color="#E5E5E5">under the radar and with this</font><font color="#CCCCCC"> up and</font>

914
00:32:30,810 --> 00:32:35,510
deployed internally we've we've had

915
00:32:32,160 --> 00:32:37,710
<font color="#E5E5E5">success a number of times</font><font color="#CCCCCC"> now pitching</font>

916
00:32:35,510 --> 00:32:39,240
so what do you do with this data<font color="#CCCCCC"> so we</font>

917
00:32:37,710 --> 00:32:41,970
have<font color="#E5E5E5"> telemetry that's not the end of the</font>

918
00:32:39,240 --> 00:32:43,530
pipe<font color="#E5E5E5"> so I like getting creative I like</font>

919
00:32:41,970 --> 00:32:45,720
doing multiple forms<font color="#E5E5E5"> of detection here</font>

920
00:32:43,530 --> 00:32:48,389
are for example detection<font color="#E5E5E5"> that you could</font>

921
00:32:45,720 --> 00:32:50,970
deploy<font color="#E5E5E5"> or build with this with this</font>

922
00:32:48,390 --> 00:32:52,440
telemetry<font color="#E5E5E5"> so first the simplest we could</font>

923
00:32:50,970 --> 00:32:55,050
just build detection<font color="#E5E5E5"> round known bad</font>

924
00:32:52,440 --> 00:32:56,670
<font color="#CCCCCC">decom</font><font color="#E5E5E5"> it's like I have</font><font color="#CCCCCC"> 8 or 10 objects</font>

925
00:32:55,050 --> 00:32:58,649
which red teamers have put out blogs on

926
00:32:56,670 --> 00:33:00,930
pretty guaranteed that<font color="#CCCCCC"> thread actors</font>

927
00:32:58,650 --> 00:33:03,450
will follow the red teamers fun facts

928
00:33:00,930 --> 00:33:05,670
<font color="#E5E5E5">like</font><font color="#CCCCCC"> apt</font><font color="#E5E5E5"> 32 they pretty much are</font><font color="#CCCCCC"> on a</font>

929
00:33:03,450 --> 00:33:07,260
<font color="#E5E5E5">six-week lag time</font><font color="#CCCCCC"> - all</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> blogs</font><font color="#E5E5E5"> that</font>

930
00:33:05,670 --> 00:33:09,060
the<font color="#CCCCCC"> red team folks put out</font><font color="#E5E5E5"> it's like</font>

931
00:33:07,260 --> 00:33:11,040
<font color="#CCCCCC">will see a red teamer blog and</font><font color="#E5E5E5"> six weeks</font>

932
00:33:09,060 --> 00:33:13,020
<font color="#E5E5E5">later 85032 will use it like we see</font><font color="#CCCCCC"> it</font>

933
00:33:11,040 --> 00:33:15,780
<font color="#CCCCCC">in the wild</font><font color="#E5E5E5"> and customer environments</font>

934
00:33:13,020 --> 00:33:18,420
and so if you can just follow<font color="#E5E5E5"> and get</font>

935
00:33:15,780 --> 00:33:20,910
<font color="#E5E5E5">that level</font><font color="#CCCCCC"> of coverage you're 75 percent</font>

936
00:33:18,420 --> 00:33:21,149
of the way there<font color="#E5E5E5"> we could also look for</font>

937
00:33:20,910 --> 00:33:22,739
big

938
00:33:21,149 --> 00:33:25,258
indicators of when it's<font color="#E5E5E5"> being</font>

939
00:33:22,739 --> 00:33:28,049
instantiated<font color="#CCCCCC"> so we could actually trace</font>

940
00:33:25,259 --> 00:33:29,820
the I dispatch and vote calls<font color="#E5E5E5"> log the</font>

941
00:33:28,049 --> 00:33:31,830
member IDs and<font color="#E5E5E5"> tracked what type of</font>

942
00:33:29,820 --> 00:33:33,029
<font color="#E5E5E5">functions those go</font><font color="#CCCCCC"> back to so in</font>

943
00:33:31,830 --> 00:33:35,249
<font color="#CCCCCC">addition to</font><font color="#E5E5E5"> just looking for</font><font color="#CCCCCC"> about</font>

944
00:33:33,029 --> 00:33:37,320
objects we<font color="#CCCCCC"> can actually look for</font><font color="#E5E5E5"> bad use</font>

945
00:33:35,249 --> 00:33:38,999
of<font color="#E5E5E5"> bad objects</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> will help reduce</font>

946
00:33:37,320 --> 00:33:40,229
false positives because<font color="#E5E5E5"> you won't worry</font>

947
00:33:38,999 --> 00:33:42,989
about<font color="#E5E5E5"> things where objects are getting</font>

948
00:33:40,229 --> 00:33:44,759
used<font color="#E5E5E5"> normally we could do fun things</font>

949
00:33:42,989 --> 00:33:46,889
like anomaly detection or<font color="#E5E5E5"> novelty</font>

950
00:33:44,759 --> 00:33:48,989
detection on decom so I don't know if

951
00:33:46,889 --> 00:33:51,629
two workstations<font color="#CCCCCC"> who have never talked</font>

952
00:33:48,989 --> 00:33:54,479
<font color="#CCCCCC">before begin</font><font color="#E5E5E5"> talking over</font><font color="#CCCCCC"> D comm using</font>

953
00:33:51,629 --> 00:33:56,699
the MMC object a spawn calculator<font color="#E5E5E5"> like</font>

954
00:33:54,479 --> 00:33:59,009
that should<font color="#E5E5E5"> stand out that's a needle</font>

955
00:33:56,700 --> 00:34:01,259
<font color="#E5E5E5">it's in a haystack</font><font color="#CCCCCC"> but it's a big needle</font>

956
00:33:59,009 --> 00:34:04,619
<font color="#E5E5E5">that should like be read in the haystack</font>

957
00:34:01,259 --> 00:34:07,259
of<font color="#E5E5E5"> black so it should be very easy</font><font color="#CCCCCC"> to</font>

958
00:34:04,619 --> 00:34:09,089
<font color="#E5E5E5">pick out generally the D coms gonna be</font>

959
00:34:07,259 --> 00:34:10,799
very standard between<font color="#CCCCCC"> certain systems</font>

960
00:34:09,089 --> 00:34:12,569
like line of business applications<font color="#CCCCCC"> and</font>

961
00:34:10,799 --> 00:34:14,879
then we could<font color="#E5E5E5"> this is my favorite is</font>

962
00:34:12,569 --> 00:34:17,849
<font color="#CCCCCC">actually modeling</font><font color="#E5E5E5"> decom to identify</font>

963
00:34:14,879 --> 00:34:19,799
<font color="#E5E5E5">interactive use of when a human is doing</font>

964
00:34:17,849 --> 00:34:22,260
the<font color="#CCCCCC"> decom</font><font color="#E5E5E5"> so basically create a</font>

965
00:34:19,799 --> 00:34:24,809
statistical model<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at normal use</font>

966
00:34:22,260 --> 00:34:27,210
of<font color="#CCCCCC"> AI type info</font><font color="#E5E5E5"> versus like adversary</font>

967
00:34:24,809 --> 00:34:28,859
use of<font color="#E5E5E5"> AI type info operations and being</font>

968
00:34:27,210 --> 00:34:30,539
able to pick<font color="#CCCCCC"> out like</font><font color="#E5E5E5"> when an adversary</font>

969
00:34:28,859 --> 00:34:31,949
is exploring objects that normal<font color="#CCCCCC"> people</font>

970
00:34:30,539 --> 00:34:33,839
shouldn't explore in ways they shouldn't

971
00:34:31,949 --> 00:34:35,189
do and this this<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> lot more</font>

972
00:34:33,839 --> 00:34:36,690
<font color="#CCCCCC">sophisticated would take a lot of</font>

973
00:34:35,190 --> 00:34:39,359
training<font color="#CCCCCC"> data which is hard</font><font color="#E5E5E5"> to come by</font>

974
00:34:36,690 --> 00:34:42,990
<font color="#CCCCCC">but this is a route that we really want</font>

975
00:34:39,359 --> 00:34:45,779
to<font color="#E5E5E5"> go</font><font color="#CCCCCC"> down and check</font><font color="#E5E5E5"> out so I've ignored</font>

976
00:34:42,989 --> 00:34:47,069
pcap up<font color="#E5E5E5"> till now</font><font color="#CCCCCC"> and primarily because</font>

977
00:34:45,779 --> 00:34:49,500
we're focused on detection<font color="#E5E5E5"> but when we</font>

978
00:34:47,069 --> 00:34:51,179
get<font color="#E5E5E5"> to forensics pcap is very very</font>

979
00:34:49,500 --> 00:34:52,949
important even if you don't<font color="#CCCCCC"> have a tool</font>

980
00:34:51,179 --> 00:34:54,629
<font color="#CCCCCC">the constantly running</font><font color="#E5E5E5"> peak app during</font>

981
00:34:52,949 --> 00:34:55,859
<font color="#E5E5E5">an incident response it's pretty</font>

982
00:34:54,629 --> 00:34:59,009
guaranteed<font color="#E5E5E5"> that you're gonna collect</font>

983
00:34:55,859 --> 00:35:00,420
pcap from<font color="#E5E5E5"> compromised host the most</font>

984
00:34:59,010 --> 00:35:01,980
<font color="#E5E5E5">common tool that people use to look at</font>

985
00:35:00,420 --> 00:35:03,240
<font color="#E5E5E5">pcap is Wireshark there's other</font><font color="#CCCCCC"> things</font>

986
00:35:01,980 --> 00:35:06,539
like cloud shark for<font color="#CCCCCC"> the enterprise</font>

987
00:35:03,240 --> 00:35:09,629
versions or<font color="#E5E5E5"> cyber chef which is analysis</font>

988
00:35:06,539 --> 00:35:11,789
tool the<font color="#CCCCCC"> Wireshark spy Farm Market</font>

989
00:35:09,630 --> 00:35:14,069
<font color="#E5E5E5">prevalence or</font><font color="#CCCCCC"> sharks built on top</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> two</font>

990
00:35:11,789 --> 00:35:17,460
key concepts so there's dissectors which

991
00:35:14,069 --> 00:35:19,680
are the<font color="#CCCCCC"> inline</font><font color="#E5E5E5"> C code ways of analyzing</font>

992
00:35:17,460 --> 00:35:21,630
protocols and parsing them out so this

993
00:35:19,680 --> 00:35:24,419
is<font color="#CCCCCC"> written</font><font color="#E5E5E5"> in C it's hard coded inside</font>

994
00:35:21,630 --> 00:35:25,980
the Wireshark source code<font color="#CCCCCC"> and it's you</font>

995
00:35:24,420 --> 00:35:28,200
have<font color="#E5E5E5"> to rebuild Wireshark to use it and</font>

996
00:35:25,980 --> 00:35:30,599
then there's<font color="#E5E5E5"> plugins which enable you to</font>

997
00:35:28,200 --> 00:35:32,250
do<font color="#CCCCCC"> - I</font><font color="#E5E5E5"> section but it's written in Lua</font>

998
00:35:30,599 --> 00:35:33,539
<font color="#CCCCCC">and</font><font color="#E5E5E5"> it's a little</font><font color="#CCCCCC"> bit more dynamic</font><font color="#E5E5E5"> you</font>

999
00:35:32,250 --> 00:35:33,810
don't have to rebuild Wireshark every

1000
00:35:33,539 --> 00:35:38,520
time

1001
00:35:33,810 --> 00:35:41,130
deploy a<font color="#E5E5E5"> plugin now parts of decom or</font>

1002
00:35:38,520 --> 00:35:43,080
handled<font color="#E5E5E5"> in Wireshark parts so you'll see</font>

1003
00:35:41,130 --> 00:35:45,360
like<font color="#E5E5E5"> one or two functions and operations</font>

1004
00:35:43,080 --> 00:35:47,790
implemented<font color="#CCCCCC"> but</font><font color="#E5E5E5"> for the most part</font>

1005
00:35:45,360 --> 00:35:51,180
there's a huge blank slate<font color="#CCCCCC"> and Wireshark</font>

1006
00:35:47,790 --> 00:35:53,040
that just wasn't<font color="#E5E5E5"> handled properly</font><font color="#CCCCCC"> those</font>

1007
00:35:51,180 --> 00:35:55,440
are all those generic<font color="#CCCCCC"> PD use and</font><font color="#E5E5E5"> request</font>

1008
00:35:53,040 --> 00:36:00,330
and response structures that<font color="#E5E5E5"> that are</font>

1009
00:35:55,440 --> 00:36:01,890
left out here<font color="#CCCCCC"> there are also several and</font>

1010
00:36:00,330 --> 00:36:05,040
<font color="#E5E5E5">endpoints and operations that lock</font>

1011
00:36:01,890 --> 00:36:07,080
dissection<font color="#E5E5E5"> so you'll note that the</font>

1012
00:36:05,040 --> 00:36:09,210
remote<font color="#CCCCCC"> gate class object was a was</font>

1013
00:36:07,080 --> 00:36:11,190
written<font color="#E5E5E5"> it recognizes it is dissected it</font>

1014
00:36:09,210 --> 00:36:13,590
but it didn't do<font color="#E5E5E5"> any</font><font color="#CCCCCC"> further dissection</font>

1015
00:36:11,190 --> 00:36:16,590
besides pulling the data<font color="#E5E5E5"> which again</font>

1016
00:36:13,590 --> 00:36:18,270
isn't very<font color="#E5E5E5"> helpful</font><font color="#CCCCCC"> so what we wanted to</font>

1017
00:36:16,590 --> 00:36:20,640
<font color="#E5E5E5">focus on is contributing back to</font>

1018
00:36:18,270 --> 00:36:23,310
Wireshark to build out all<font color="#E5E5E5"> the modern</font>

1019
00:36:20,640 --> 00:36:24,810
<font color="#E5E5E5">decomp protocols we saw used so we're</font>

1020
00:36:23,310 --> 00:36:26,580
<font color="#CCCCCC">gonna be submitting a pull request in a</font>

1021
00:36:24,810 --> 00:36:29,130
couple days<font color="#CCCCCC"> of Wireshark</font><font color="#E5E5E5"> to add all just</font>

1022
00:36:26,580 --> 00:36:32,460
<font color="#CCCCCC">decom stuff and get</font><font color="#E5E5E5"> it into the tool for</font>

1023
00:36:29,130 --> 00:36:34,890
use the key things we<font color="#E5E5E5"> did is we added</font>

1024
00:36:32,460 --> 00:36:36,720
references to new<font color="#CCCCCC"> dissectors for all the</font>

1025
00:36:34,890 --> 00:36:39,930
different<font color="#CCCCCC"> interfaces that we didn't have</font>

1026
00:36:36,720 --> 00:36:42,509
<font color="#E5E5E5">before we built out a specific packet</font>

1027
00:36:39,930 --> 00:36:44,370
decom<font color="#E5E5E5"> - type info so we implemented</font><font color="#CCCCCC"> the</font>

1028
00:36:42,510 --> 00:36:47,460
entire<font color="#CCCCCC"> I type info interface and</font>

1029
00:36:44,370 --> 00:36:49,440
Wireshark<font color="#E5E5E5"> and we added some</font><font color="#CCCCCC"> things to</font>

1030
00:36:47,460 --> 00:36:49,800
system activator to allow I dispatch to

1031
00:36:49,440 --> 00:36:51,330
work

1032
00:36:49,800 --> 00:36:55,020
I'm not how many<font color="#E5E5E5"> people have</font><font color="#CCCCCC"> done</font>

1033
00:36:51,330 --> 00:36:57,480
<font color="#E5E5E5">protocol re before</font><font color="#CCCCCC"> or networking okay I</font>

1034
00:36:55,020 --> 00:36:59,340
see a<font color="#CCCCCC"> couple hands</font><font color="#E5E5E5"> this is a monster and</font>

1035
00:36:57,480 --> 00:37:01,380
it's like it's it's<font color="#E5E5E5"> truly an art it's</font>

1036
00:36:59,340 --> 00:37:03,870
less<font color="#E5E5E5"> than a science it's it's kind of</font>

1037
00:37:01,380 --> 00:37:06,660
like<font color="#E5E5E5"> solving</font><font color="#CCCCCC"> a like 50 thousand piece</font>

1038
00:37:03,870 --> 00:37:08,310
jigsaw puzzle where you<font color="#CCCCCC"> have to find</font>

1039
00:37:06,660 --> 00:37:09,629
<font color="#E5E5E5">edges but it takes you like hours to get</font>

1040
00:37:08,310 --> 00:37:11,520
edges<font color="#E5E5E5"> but if you get those edges you</font>

1041
00:37:09,630 --> 00:37:13,800
really can start<font color="#E5E5E5"> trucking along it's</font>

1042
00:37:11,520 --> 00:37:15,060
very very similar<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that so I have some</font>

1043
00:37:13,800 --> 00:37:17,160
tips<font color="#CCCCCC"> for you based on</font><font color="#E5E5E5"> all the work we</font>

1044
00:37:15,060 --> 00:37:19,650
<font color="#E5E5E5">did here if you ever have to do this</font><font color="#CCCCCC"> I</font>

1045
00:37:17,160 --> 00:37:22,470
hope you heed this advice<font color="#CCCCCC"> I think it's</font>

1046
00:37:19,650 --> 00:37:24,000
useful<font color="#E5E5E5"> so leverage</font><font color="#CCCCCC"> existing</font><font color="#E5E5E5"> dissectors</font>

1047
00:37:22,470 --> 00:37:25,200
one of the biggest<font color="#CCCCCC"> learning gaps is</font>

1048
00:37:24,000 --> 00:37:27,690
actually trying to figure<font color="#CCCCCC"> out</font><font color="#E5E5E5"> how</font>

1049
00:37:25,200 --> 00:37:29,370
Wireshark works and how the<font color="#CCCCCC"> dye</font><font color="#E5E5E5"> sectors</font>

1050
00:37:27,690 --> 00:37:31,140
work<font color="#E5E5E5"> like what are the functions you</font>

1051
00:37:29,370 --> 00:37:33,690
have<font color="#CCCCCC"> at your disposal to</font><font color="#E5E5E5"> do dissection</font>

1052
00:37:31,140 --> 00:37:35,129
how does the tree structure<font color="#E5E5E5"> work but if</font>

1053
00:37:33,690 --> 00:37:36,960
you just go read<font color="#CCCCCC"> some other dissectors</font>

1054
00:37:35,130 --> 00:37:38,790
that<font color="#E5E5E5"> you understand like I don't know go</font>

1055
00:37:36,960 --> 00:37:40,320
read the<font color="#E5E5E5"> FP FTP die sucker you</font>

1056
00:37:38,790 --> 00:37:42,240
<font color="#E5E5E5">understand the protocol it's a very</font>

1057
00:37:40,320 --> 00:37:43,260
simple<font color="#CCCCCC"> one and you can go ahead</font><font color="#E5E5E5"> and</font>

1058
00:37:42,240 --> 00:37:45,209
<font color="#CCCCCC">figure out all the different</font>

1059
00:37:43,260 --> 00:37:47,310
functionality there and then start

1060
00:37:45,210 --> 00:37:47,730
working<font color="#CCCCCC"> fun fact</font><font color="#E5E5E5"> the huge part of our</font>

1061
00:37:47,310 --> 00:37:49,740
<font color="#E5E5E5">deck</font>

1062
00:37:47,730 --> 00:37:51,839
stuff is<font color="#E5E5E5"> like copy paste of other RPC</font>

1063
00:37:49,740 --> 00:37:53,910
dissectors because a lot<font color="#CCCCCC"> of the</font>

1064
00:37:51,839 --> 00:37:55,500
functionality works and works<font color="#CCCCCC"> great and</font>

1065
00:37:53,910 --> 00:37:57,420
<font color="#E5E5E5">it was written by better</font><font color="#CCCCCC"> C coders than</font>

1066
00:37:55,500 --> 00:37:58,859
me so I it's less<font color="#E5E5E5"> likely that I'm</font>

1067
00:37:57,420 --> 00:38:02,400
implementing like a buffer overflow<font color="#CCCCCC"> and</font>

1068
00:37:58,859 --> 00:38:04,680
Wireshark which is important and<font color="#E5E5E5"> then</font>

1069
00:38:02,400 --> 00:38:05,670
<font color="#CCCCCC">use official documentation</font><font color="#E5E5E5"> RFC's are a</font>

1070
00:38:04,680 --> 00:38:07,919
really great<font color="#E5E5E5"> step</font>

1071
00:38:05,670 --> 00:38:10,079
if you've ever ever read an RFC<font color="#CCCCCC"> I highly</font>

1072
00:38:07,920 --> 00:38:12,510
encourage it<font color="#E5E5E5"> you'll that's good bedtime</font>

1073
00:38:10,079 --> 00:38:15,450
material<font color="#E5E5E5"> you'll get a good good sleep</font>

1074
00:38:12,510 --> 00:38:18,329
afterwards<font color="#E5E5E5"> but very useful</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> Network</font>

1075
00:38:15,450 --> 00:38:20,640
folks<font color="#CCCCCC"> even better</font><font color="#E5E5E5"> for decom specifically</font>

1076
00:38:18,329 --> 00:38:23,220
<font color="#CCCCCC">MSDN</font><font color="#E5E5E5"> so pretty much all of the decom</font>

1077
00:38:20,640 --> 00:38:25,078
functionality is sort of<font color="#CCCCCC"> documented</font>

1078
00:38:23,220 --> 00:38:26,549
misty and<font color="#E5E5E5"> it's documented like 15</font>

1079
00:38:25,079 --> 00:38:28,560
<font color="#E5E5E5">different times in different places</font><font color="#CCCCCC"> so</font>

1080
00:38:26,550 --> 00:38:30,030
<font color="#CCCCCC">you'll go</font><font color="#E5E5E5"> to like one page where it's</font>

1081
00:38:28,560 --> 00:38:31,950
<font color="#E5E5E5">documented and it's different than</font><font color="#CCCCCC"> the</font>

1082
00:38:30,030 --> 00:38:33,780
<font color="#CCCCCC">other way it's documented</font><font color="#E5E5E5"> so you have to</font>

1083
00:38:31,950 --> 00:38:35,399
kind of sort out what year it was

1084
00:38:33,780 --> 00:38:36,450
<font color="#E5E5E5">published and how likely it is the</font>

1085
00:38:35,400 --> 00:38:39,390
author knew<font color="#CCCCCC"> they were talking about</font>

1086
00:38:36,450 --> 00:38:42,089
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> always a</font><font color="#E5E5E5"> fun thing to do when</font>

1087
00:38:39,390 --> 00:38:43,560
<font color="#E5E5E5">you're trying to re I like to encourage</font>

1088
00:38:42,089 --> 00:38:45,240
people<font color="#CCCCCC"> to use multiple variations of the</font>

1089
00:38:43,560 --> 00:38:46,828
attack<font color="#E5E5E5"> don't ever just run one version</font>

1090
00:38:45,240 --> 00:38:48,598
<font color="#E5E5E5">of the attack and try to re it like get</font>

1091
00:38:46,829 --> 00:38:51,240
<font color="#CCCCCC">five</font><font color="#E5E5E5"> side-by-side so you can start to</font>

1092
00:38:48,599 --> 00:38:53,010
<font color="#E5E5E5">identify common elements</font><font color="#CCCCCC"> I like to</font>

1093
00:38:51,240 --> 00:38:54,868
<font color="#CCCCCC">identify high confidence markers so</font>

1094
00:38:53,010 --> 00:38:56,819
<font color="#E5E5E5">specifically in the terms of</font><font color="#CCCCCC"> decon</font><font color="#E5E5E5"> this</font>

1095
00:38:54,869 --> 00:38:58,410
<font color="#CCCCCC">is our</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that structure</font><font color="#CCCCCC"> but</font>

1096
00:38:56,819 --> 00:39:00,839
identifying<font color="#E5E5E5"> to this and that structure</font>

1097
00:38:58,410 --> 00:39:02,250
<font color="#E5E5E5">inside of</font><font color="#CCCCCC"> the request responses</font><font color="#E5E5E5"> we know</font>

1098
00:39:00,839 --> 00:39:04,200
where the anchors are going to be for

1099
00:39:02,250 --> 00:39:06,060
the inputs and<font color="#E5E5E5"> outputs</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we can start</font>

1100
00:39:04,200 --> 00:39:08,310
<font color="#CCCCCC">working through</font><font color="#E5E5E5"> those inputs and outputs</font>

1101
00:39:06,060 --> 00:39:09,299
sequentially<font color="#E5E5E5"> this could also be like</font><font color="#CCCCCC"> the</font>

1102
00:39:08,310 --> 00:39:10,770
end of the packet

1103
00:39:09,300 --> 00:39:12,930
sometimes the end of the packet is your

1104
00:39:10,770 --> 00:39:14,369
best marker start from the end where<font color="#E5E5E5"> you</font>

1105
00:39:12,930 --> 00:39:15,990
know the last thing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> going to be and</font>

1106
00:39:14,369 --> 00:39:19,140
start working<font color="#CCCCCC"> backwards to identify all</font>

1107
00:39:15,990 --> 00:39:21,000
the elements<font color="#CCCCCC"> I like to highlight there's</font>

1108
00:39:19,140 --> 00:39:22,618
no guarantee that<font color="#E5E5E5"> other people did it</font>

1109
00:39:21,000 --> 00:39:24,030
<font color="#E5E5E5">right there's no guarantee that other</font>

1110
00:39:22,619 --> 00:39:25,829
people understand the protocol better

1111
00:39:24,030 --> 00:39:27,300
than you that was a<font color="#CCCCCC"> bad assumption that</font>

1112
00:39:25,829 --> 00:39:29,069
we<font color="#E5E5E5"> spun our wheels on</font><font color="#CCCCCC"> for a long</font><font color="#E5E5E5"> time</font>

1113
00:39:27,300 --> 00:39:31,530
we're reading blogs on D column thinking

1114
00:39:29,069 --> 00:39:34,140
that we just trust this guy like it'll

1115
00:39:31,530 --> 00:39:36,000
lead<font color="#CCCCCC"> us down the right way</font><font color="#E5E5E5"> and weeks go</font>

1116
00:39:34,140 --> 00:39:38,730
by and<font color="#CCCCCC"> he</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> actually completely</font><font color="#E5E5E5"> wrong</font>

1117
00:39:36,000 --> 00:39:40,349
<font color="#CCCCCC">in</font><font color="#E5E5E5"> this documentation so you</font><font color="#CCCCCC"> have to</font>

1118
00:39:38,730 --> 00:39:42,720
trust the verify the work that you're

1119
00:39:40,349 --> 00:39:44,250
doing and and have a<font color="#E5E5E5"> little confidence</font>

1120
00:39:42,720 --> 00:39:46,589
that you know how<font color="#E5E5E5"> to read an MSD in spec</font>

1121
00:39:44,250 --> 00:39:47,760
and know what it's doing<font color="#CCCCCC"> a little hint</font>

1122
00:39:46,589 --> 00:39:49,410
<font color="#CCCCCC">after writing</font><font color="#E5E5E5"> a whole bunch of these</font>

1123
00:39:47,760 --> 00:39:51,540
decomp parsers we found this cool tool

1124
00:39:49,410 --> 00:39:53,250
called<font color="#CCCCCC"> P IDL which simply takes an</font>

1125
00:39:51,540 --> 00:39:55,890
interface definition<font color="#E5E5E5"> and become and</font>

1126
00:39:53,250 --> 00:39:57,810
converts it<font color="#CCCCCC"> to a dissector for you</font><font color="#E5E5E5"> so I</font>

1127
00:39:55,890 --> 00:39:59,220
have no idea<font color="#CCCCCC"> why this stuff</font><font color="#E5E5E5"> hasn't been</font>

1128
00:39:57,810 --> 00:40:01,830
implemented<font color="#CCCCCC"> on Wireshark cuz it's tool</font>

1129
00:39:59,220 --> 00:40:03,270
<font color="#E5E5E5">all the work so if you ever</font><font color="#CCCCCC"> run across</font>

1130
00:40:01,830 --> 00:40:05,700
like<font color="#E5E5E5"> really weird stuff that you see in</font>

1131
00:40:03,270 --> 00:40:07,020
decom and you want to get<font color="#CCCCCC"> a dissector</font>

1132
00:40:05,700 --> 00:40:08,700
working pretty quick

1133
00:40:07,020 --> 00:40:11,670
<font color="#E5E5E5">use this tool it can be very very</font>

1134
00:40:08,700 --> 00:40:14,669
helpful<font color="#E5E5E5"> so this is what we end up with</font>

1135
00:40:11,670 --> 00:40:20,460
<font color="#CCCCCC">I'm actually gonna roll to a quick demo</font>

1136
00:40:14,670 --> 00:40:22,050
<font color="#E5E5E5">see if it slides over</font><font color="#CCCCCC"> the demos not a</font>

1137
00:40:20,460 --> 00:40:26,220
clutch or<font color="#E5E5E5"> so it's not a big deal if not</font>

1138
00:40:22,050 --> 00:40:28,290
<font color="#E5E5E5">but yeah it's okay we'll keep going</font>

1139
00:40:26,220 --> 00:40:29,970
basically all I wanted<font color="#E5E5E5"> to show you was</font>

1140
00:40:28,290 --> 00:40:31,320
<font color="#CCCCCC">that we were able to get this all parsed</font>

1141
00:40:29,970 --> 00:40:34,259
out so you can<font color="#E5E5E5"> see in the screenshot to</font>

1142
00:40:31,320 --> 00:40:36,300
the<font color="#CCCCCC"> get names response this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> type</font>

1143
00:40:34,260 --> 00:40:40,320
<font color="#CCCCCC">seven which was not</font><font color="#E5E5E5"> previously working</font>

1144
00:40:36,300 --> 00:40:41,760
in<font color="#E5E5E5"> decom</font><font color="#CCCCCC"> it was just saying</font><font color="#E5E5E5"> like random</font>

1145
00:40:40,320 --> 00:40:43,109
weird garbage it didn't parse it out

1146
00:40:41,760 --> 00:40:45,090
you'll<font color="#E5E5E5"> see that it</font><font color="#CCCCCC"> actually tells</font><font color="#E5E5E5"> us</font>

1147
00:40:43,109 --> 00:40:48,180
this is a get name response it parses

1148
00:40:45,090 --> 00:40:50,160
<font color="#CCCCCC">that structure it gives us</font><font color="#E5E5E5"> all the names</font>

1149
00:40:48,180 --> 00:40:52,290
that it found<font color="#CCCCCC"> so we can do a full</font>

1150
00:40:50,160 --> 00:40:54,779
forensic dissection and<font color="#E5E5E5"> filtering now on</font>

1151
00:40:52,290 --> 00:40:57,060
Wireshark<font color="#CCCCCC"> to kind</font><font color="#E5E5E5"> of go through</font><font color="#CCCCCC"> this</font>

1152
00:40:54,780 --> 00:40:59,400
information<font color="#E5E5E5"> this was very very this</font>

1153
00:40:57,060 --> 00:41:00,990
<font color="#CCCCCC">seemed</font><font color="#E5E5E5"> simple on this</font><font color="#CCCCCC"> picture</font><font color="#E5E5E5"> but it has</font>

1154
00:40:59,400 --> 00:41:06,780
been extremely<font color="#CCCCCC"> useful</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a forensic</font>

1155
00:41:00,990 --> 00:41:09,598
<font color="#CCCCCC">context on these</font><font color="#E5E5E5"> texts right and now my</font>

1156
00:41:06,780 --> 00:41:15,599
pointer stumps<font color="#CCCCCC"> so the kind of rounding</font>

1157
00:41:09,599 --> 00:41:17,099
out here so I would be negligent<font color="#CCCCCC"> if I</font>

1158
00:41:15,599 --> 00:41:19,050
didn't<font color="#E5E5E5"> address some amount of endpoint</font>

1159
00:41:17,099 --> 00:41:20,730
detection this<font color="#E5E5E5"> I'm a I'm a network nerd</font>

1160
00:41:19,050 --> 00:41:23,190
I've been a couple years<font color="#E5E5E5"> doing network</font>

1161
00:41:20,730 --> 00:41:24,990
analysis now and the<font color="#CCCCCC"> air force</font><font color="#E5E5E5"> I did a</font>

1162
00:41:23,190 --> 00:41:26,280
lot<font color="#E5E5E5"> of network analysis but as a red</font>

1163
00:41:24,990 --> 00:41:30,899
teamer I knew a lot about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> endpoint</font>

1164
00:41:26,280 --> 00:41:32,430
so the best detection<font color="#CCCCCC"> czar balanced</font><font color="#E5E5E5"> and</font>

1165
00:41:30,900 --> 00:41:33,540
the best approaches are balanced<font color="#E5E5E5"> they're</font>

1166
00:41:32,430 --> 00:41:35,160
not all<font color="#CCCCCC"> networked they're not all</font>

1167
00:41:33,540 --> 00:41:36,180
endpoint<font color="#CCCCCC"> there they're</font><font color="#E5E5E5"> taking</font><font color="#CCCCCC"> network</font>

1168
00:41:35,160 --> 00:41:38,368
<font color="#E5E5E5">and endpoint and putting them together</font>

1169
00:41:36,180 --> 00:41:41,368
in a<font color="#E5E5E5"> common view and making use out of</font>

1170
00:41:38,369 --> 00:41:44,700
<font color="#E5E5E5">that data</font><font color="#CCCCCC"> so why is endpoint</font><font color="#E5E5E5"> required</font>

1171
00:41:41,369 --> 00:41:47,520
here fun<font color="#E5E5E5"> facts</font><font color="#CCCCCC"> our PC can be encrypted</font>

1172
00:41:44,700 --> 00:41:49,049
<font color="#CCCCCC">in most locations it's not yet because</font>

1173
00:41:47,520 --> 00:41:52,020
your domain controllers<font color="#CCCCCC"> are like</font><font color="#E5E5E5"> 15</font>

1174
00:41:49,050 --> 00:41:54,270
<font color="#CCCCCC">years behind spec and that's</font><font color="#E5E5E5"> okay for me</font>

1175
00:41:52,020 --> 00:41:57,030
because I like it<font color="#CCCCCC"> not encrypted</font><font color="#E5E5E5"> but if</font>

1176
00:41:54,270 --> 00:41:58,380
in<font color="#CCCCCC"> future environments like 2016</font>

1177
00:41:57,030 --> 00:42:01,050
functional level and above you're gonna

1178
00:41:58,380 --> 00:42:02,880
start<font color="#E5E5E5"> seeing packet privacy enabled so</font>

1179
00:42:01,050 --> 00:42:05,550
you're gonna<font color="#E5E5E5"> start seeing RPC details</font>

1180
00:42:02,880 --> 00:42:06,780
encrypted on the wire<font color="#E5E5E5"> so it's a good</font>

1181
00:42:05,550 --> 00:42:08,660
<font color="#E5E5E5">motivator to start thinking about</font>

1182
00:42:06,780 --> 00:42:10,740
endpoint detections that are reliable

1183
00:42:08,660 --> 00:42:12,690
<font color="#E5E5E5">additionally an adversary you can</font>

1184
00:42:10,740 --> 00:42:14,609
<font color="#CCCCCC">actually force the packet privacy flow</font>

1185
00:42:12,690 --> 00:42:16,319
so for<font color="#CCCCCC"> your red teamers you don't want</font>

1186
00:42:14,609 --> 00:42:18,029
to get inspection on<font color="#CCCCCC"> decom</font><font color="#E5E5E5"> you can</font>

1187
00:42:16,319 --> 00:42:20,460
<font color="#E5E5E5">actually enforce packet privacy on the</font>

1188
00:42:18,030 --> 00:42:22,140
command line<font color="#CCCCCC"> I'll note that we have had</font>

1189
00:42:20,460 --> 00:42:24,539
somebody do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they force packet</font>

1190
00:42:22,140 --> 00:42:26,490
privacy and that's<font color="#CCCCCC"> actually an indicator</font>

1191
00:42:24,539 --> 00:42:28,380
because like the<font color="#E5E5E5"> environment doesn't</font>

1192
00:42:26,490 --> 00:42:29,970
<font color="#E5E5E5">have packet privacy anywhere and then</font>

1193
00:42:28,380 --> 00:42:32,940
all of a sudden<font color="#CCCCCC"> one</font><font color="#E5E5E5"> decom connection</font>

1194
00:42:29,970 --> 00:42:34,859
with packet privacy stands up like you

1195
00:42:32,940 --> 00:42:36,359
<font color="#E5E5E5">know it's that's not good so sometimes</font>

1196
00:42:34,859 --> 00:42:38,400
the<font color="#CCCCCC"> best evasions are actually the best</font>

1197
00:42:36,359 --> 00:42:41,520
indicators<font color="#E5E5E5"> so let's let's look at</font>

1198
00:42:38,400 --> 00:42:42,930
<font color="#CCCCCC">endpoint the endpoint can</font><font color="#E5E5E5"> actually be</font>

1199
00:42:41,520 --> 00:42:44,280
pretty<font color="#E5E5E5"> damning</font><font color="#CCCCCC"> for these attacks if you</font>

1200
00:42:42,930 --> 00:42:45,569
can get<font color="#E5E5E5"> command line logging this is</font>

1201
00:42:44,280 --> 00:42:47,579
gonna be your<font color="#E5E5E5"> best bet on the endpoint</font>

1202
00:42:45,569 --> 00:42:52,079
for<font color="#CCCCCC"> decom</font><font color="#E5E5E5"> one of your best bets</font><font color="#CCCCCC"> that's</font>

1203
00:42:47,579 --> 00:42:54,359
<font color="#E5E5E5">easiest also so</font><font color="#CCCCCC"> decon processes that</font>

1204
00:42:52,079 --> 00:42:56,700
<font color="#E5E5E5">spawn will spawn underneath the decom</font>

1205
00:42:54,359 --> 00:42:59,640
<font color="#E5E5E5">launch service so it'll be an SVC host</font>

1206
00:42:56,700 --> 00:43:01,470
that stedy<font color="#CCCCCC"> cated for decom and so I</font>

1207
00:42:59,640 --> 00:43:03,270
<font color="#E5E5E5">don't know if you have like 15</font><font color="#CCCCCC"> Excel</font>

1208
00:43:01,470 --> 00:43:06,419
objects in a word<font color="#CCCCCC"> object and an MMC</font>

1209
00:43:03,270 --> 00:43:08,160
object<font color="#CCCCCC"> spotting over/under SVC host you</font>

1210
00:43:06,420 --> 00:43:09,660
have<font color="#E5E5E5"> an adversary you should probably be</font>

1211
00:43:08,160 --> 00:43:11,308
worried about<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> adversary is</font>

1212
00:43:09,660 --> 00:43:13,859
probably also pretty sloppy<font color="#E5E5E5"> but you'll</font>

1213
00:43:11,309 --> 00:43:16,410
see on the screenshot here you have

1214
00:43:13,859 --> 00:43:20,220
<font color="#E5E5E5">Outlook and Excel Outlook</font><font color="#CCCCCC"> in Excel</font><font color="#E5E5E5"> or</font>

1215
00:43:16,410 --> 00:43:21,990
both under the<font color="#E5E5E5"> SVC</font><font color="#CCCCCC"> host process many of</font>

1216
00:43:20,220 --> 00:43:24,270
<font color="#CCCCCC">the decom objects actually don't allow</font>

1217
00:43:21,990 --> 00:43:25,740
you<font color="#E5E5E5"> to gracefully exit like there's no</font>

1218
00:43:24,270 --> 00:43:28,950
way to shut<font color="#E5E5E5"> down the D comma object</font>

1219
00:43:25,740 --> 00:43:31,049
gracefully and<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> adversary is gonna</font>

1220
00:43:28,950 --> 00:43:32,220
be stuck with<font color="#E5E5E5"> a running process</font><font color="#CCCCCC"> that</font>

1221
00:43:31,049 --> 00:43:34,170
they<font color="#E5E5E5"> won't be able to kill unless they</font>

1222
00:43:32,220 --> 00:43:35,520
<font color="#E5E5E5">get on the</font><font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> and that's assuming</font>

1223
00:43:34,170 --> 00:43:37,470
a perfect adversary which you should

1224
00:43:35,520 --> 00:43:40,170
never assume because<font color="#E5E5E5"> they have life</font>

1225
00:43:37,470 --> 00:43:42,328
problems<font color="#E5E5E5"> too and so a lot of times there</font>

1226
00:43:40,170 --> 00:43:43,619
<font color="#E5E5E5">will be these processes and like hanging</font>

1227
00:43:42,329 --> 00:43:45,420
around<font color="#CCCCCC"> for long periods of</font><font color="#E5E5E5"> time</font>

1228
00:43:43,619 --> 00:43:47,069
<font color="#CCCCCC">especially on server environments so</font>

1229
00:43:45,420 --> 00:43:48,270
don't get<font color="#E5E5E5"> rebooted often so if you're</font>

1230
00:43:47,069 --> 00:43:49,440
<font color="#E5E5E5">going like threat hunting and you're</font>

1231
00:43:48,270 --> 00:43:51,000
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> like process sweeps in an</font>

1232
00:43:49,440 --> 00:43:52,529
environment<font color="#CCCCCC"> to go look for potential</font>

1233
00:43:51,000 --> 00:43:54,450
malicious use hit your server

1234
00:43:52,529 --> 00:43:55,829
environments<font color="#E5E5E5"> and start looking for child</font>

1235
00:43:54,450 --> 00:43:58,379
<font color="#E5E5E5">processes under D</font><font color="#CCCCCC"> com</font>

1236
00:43:55,829 --> 00:44:01,289
it's a pretty simple analytic to run<font color="#E5E5E5"> it</font>

1237
00:43:58,380 --> 00:44:03,150
<font color="#E5E5E5">can be pretty useful another fun fact is</font>

1238
00:44:01,289 --> 00:44:04,619
office applications that start<font color="#E5E5E5"> viacom</font>

1239
00:44:03,150 --> 00:44:06,569
are going to have the embedding<font color="#E5E5E5"> or</font><font color="#CCCCCC"> whack</font>

1240
00:44:04,619 --> 00:44:08,339
automation flag and these will be

1241
00:44:06,569 --> 00:44:10,558
<font color="#E5E5E5">indications</font><font color="#CCCCCC"> that respond purely via</font>

1242
00:44:08,339 --> 00:44:12,660
decom<font color="#E5E5E5"> note that this will happen</font>

1243
00:44:10,559 --> 00:44:15,119
sometimes legitimately<font color="#E5E5E5"> because for some</font>

1244
00:44:12,660 --> 00:44:16,799
people<font color="#CCCCCC"> they actually</font><font color="#E5E5E5"> use office as like</font>

1245
00:44:15,119 --> 00:44:19,319
a programmatic object<font color="#E5E5E5"> in their</font>

1246
00:44:16,799 --> 00:44:21,180
environment<font color="#E5E5E5"> so don't necessarily go</font>

1247
00:44:19,319 --> 00:44:22,829
running to<font color="#E5E5E5"> the CISO every time you see</font>

1248
00:44:21,180 --> 00:44:26,730
this<font color="#E5E5E5"> that would be bad and</font><font color="#CCCCCC"> you could</font>

1249
00:44:22,829 --> 00:44:28,470
hurt your job so we're going<font color="#E5E5E5"> to wrap up</font>

1250
00:44:26,730 --> 00:44:30,150
so what kind of what<font color="#CCCCCC"> takeaways</font><font color="#E5E5E5"> where I</font>

1251
00:44:28,470 --> 00:44:31,319
want you guys<font color="#CCCCCC"> to have out of</font><font color="#E5E5E5"> this so</font>

1252
00:44:30,150 --> 00:44:33,030
there's obviously<font color="#E5E5E5"> the technical</font>

1253
00:44:31,320 --> 00:44:34,320
takeaways<font color="#E5E5E5"> hopefully you can take some of</font>

1254
00:44:33,030 --> 00:44:36,540
<font color="#E5E5E5">these detection styles some of these</font>

1255
00:44:34,320 --> 00:44:37,770
<font color="#CCCCCC">Cercado signatures you</font><font color="#E5E5E5"> can go replicate</font>

1256
00:44:36,540 --> 00:44:40,950
<font color="#E5E5E5">this and get it into your environments</font>

1257
00:44:37,770 --> 00:44:42,690
so you're protected<font color="#CCCCCC"> there's a broader</font>

1258
00:44:40,950 --> 00:44:43,828
process here<font color="#CCCCCC"> that I don't know</font><font color="#E5E5E5"> if anyone</font>

1259
00:44:42,690 --> 00:44:46,829
caught that we kind of follow and I

1260
00:44:43,829 --> 00:44:49,950
<font color="#E5E5E5">follow this is my everyday job basically</font>

1261
00:44:46,829 --> 00:44:51,270
<font color="#E5E5E5">we take an adversary technique</font><font color="#CCCCCC"> I emulate</font>

1262
00:44:49,950 --> 00:44:54,839
it in a lab environment<font color="#E5E5E5"> with lots of</font>

1263
00:44:51,270 --> 00:44:58,950
telemetry<font color="#CCCCCC"> I try to look for specific</font>

1264
00:44:54,839 --> 00:45:00,450
phases<font color="#E5E5E5"> or pieces of</font><font color="#CCCCCC"> the attack I conduct</font>

1265
00:44:58,950 --> 00:45:01,950
analysis<font color="#E5E5E5"> so this can</font><font color="#CCCCCC"> be either</font><font color="#E5E5E5"> network</font>

1266
00:45:00,450 --> 00:45:03,509
or in point analysis and<font color="#E5E5E5"> then I take all</font>

1267
00:45:01,950 --> 00:45:05,640
the artifacts and<font color="#E5E5E5"> I can identify to</font>

1268
00:45:03,510 --> 00:45:06,960
build detection so this is detection

1269
00:45:05,640 --> 00:45:09,000
engineering if you've<font color="#E5E5E5"> never heard of</font>

1270
00:45:06,960 --> 00:45:10,800
<font color="#E5E5E5">this role</font><font color="#CCCCCC"> it includes a little bit of</font>

1271
00:45:09,000 --> 00:45:12,720
<font color="#E5E5E5">read a little bit of blue and it's a ton</font>

1272
00:45:10,800 --> 00:45:15,480
of fun<font color="#CCCCCC"> and then there's an on become</font>

1273
00:45:12,720 --> 00:45:17,819
specific takeaways<font color="#E5E5E5"> so this is the idea</font>

1274
00:45:15,480 --> 00:45:20,760
<font color="#CCCCCC">that our mission</font><font color="#E5E5E5"> on the blue side is to</font>

1275
00:45:17,820 --> 00:45:22,170
<font color="#E5E5E5">detect threats</font><font color="#CCCCCC"> but a lot of</font><font color="#E5E5E5"> times we</font>

1276
00:45:20,760 --> 00:45:24,780
don't have the capabilities we<font color="#CCCCCC"> need</font>

1277
00:45:22,170 --> 00:45:26,099
<font color="#E5E5E5">built in no matter how awesome the tool</font>

1278
00:45:24,780 --> 00:45:27,720
is or how long<font color="#E5E5E5"> it's been around or how</font>

1279
00:45:26,099 --> 00:45:29,790
long the attacks been around there are

1280
00:45:27,720 --> 00:45:31,439
going to be weaknesses and holes<font color="#E5E5E5"> and so</font>

1281
00:45:29,790 --> 00:45:34,920
you need to<font color="#E5E5E5"> understand where your holes</font>

1282
00:45:31,440 --> 00:45:36,750
lie what visibility gaps do you have and

1283
00:45:34,920 --> 00:45:39,089
you<font color="#E5E5E5"> need to work to mock up that</font>

1284
00:45:36,750 --> 00:45:41,339
<font color="#E5E5E5">behavior and increase visibility in</font>

1285
00:45:39,089 --> 00:45:42,720
those gaps<font color="#E5E5E5"> this is an iterative process</font>

1286
00:45:41,339 --> 00:45:44,970
it will take years<font color="#E5E5E5"> in a real</font>

1287
00:45:42,720 --> 00:45:46,890
organization<font color="#E5E5E5"> to continue</font><font color="#CCCCCC"> to do this but</font>

1288
00:45:44,970 --> 00:45:48,450
some of the best customers I've ever

1289
00:45:46,890 --> 00:45:50,578
worked<font color="#E5E5E5"> with on the consulting</font><font color="#CCCCCC"> side as</font>

1290
00:45:48,450 --> 00:45:52,560
well as on the<font color="#E5E5E5"> defensive side our folks</font>

1291
00:45:50,579 --> 00:45:54,750
<font color="#E5E5E5">that do regular detection testing</font>

1292
00:45:52,560 --> 00:45:57,299
regular gap analysis of their<font color="#CCCCCC"> telemetry</font>

1293
00:45:54,750 --> 00:45:58,589
and<font color="#E5E5E5"> their systems to figure out what's</font>

1294
00:45:57,300 --> 00:46:02,550
<font color="#E5E5E5">the most</font><font color="#CCCCCC"> likely place that they're</font><font color="#E5E5E5"> going</font>

1295
00:45:58,589 --> 00:46:03,960
<font color="#CCCCCC">to</font><font color="#E5E5E5"> get popped so that is it</font><font color="#CCCCCC"> for me I</font>

1296
00:46:02,550 --> 00:46:09,720
should have<font color="#CCCCCC"> a couple</font><font color="#E5E5E5"> minutes at least</font>

1297
00:46:03,960 --> 00:46:13,010
<font color="#E5E5E5">for questions there are any sweets</font>

1298
00:46:09,720 --> 00:46:15,350
<font color="#E5E5E5">packets make people sleep</font>

1299
00:46:13,010 --> 00:46:17,120
<font color="#CCCCCC">I get it my interns sleep all the</font><font color="#E5E5E5"> time</font>

1300
00:46:15,350 --> 00:46:18,529
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> cool I'll</font><font color="#E5E5E5"> be around after the</font>

1301
00:46:17,120 --> 00:46:20,810
<font color="#CCCCCC">Connaught in the hallways and</font><font color="#E5E5E5"> in the</font>

1302
00:46:18,530 --> 00:46:22,310
back so feel free<font color="#E5E5E5"> to connect and I was</font>

1303
00:46:20,810 --> 00:46:24,080
awesome<font color="#CCCCCC"> being</font><font color="#E5E5E5"> out here thank you guys so</font>

1304
00:46:22,310 --> 00:46:27,820
<font color="#CCCCCC">much for</font><font color="#E5E5E5"> your time and listen to me</font>

1305
00:46:24,080 --> 00:46:27,819
jabber on<font color="#E5E5E5"> about this have a good day</font>

