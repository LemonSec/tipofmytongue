1
00:00:00,030 --> 00:00:06,000
great<font color="#CCCCCC"> how's</font><font color="#E5E5E5"> everybody doing yeah so I'm</font>

2
00:00:04,380 --> 00:00:13,340
the last<font color="#E5E5E5"> talk so</font><font color="#CCCCCC"> that means I can go</font>

3
00:00:06,000 --> 00:00:17,910
<font color="#CCCCCC">over</font><font color="#E5E5E5"> maybe maybe a little bit</font><font color="#CCCCCC"> I just</font>

4
00:00:13,340 --> 00:00:21,180
thank you yeah so a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> me</font>

5
00:00:17,910 --> 00:00:24,119
<font color="#CCCCCC">I was stationed here</font><font color="#E5E5E5"> I was in what was</font>

6
00:00:21,180 --> 00:00:24,779
called first radio battalion back in the

7
00:00:24,119 --> 00:00:29,550
90s

8
00:00:24,779 --> 00:00:31,619
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> battled yes and it was an</font><font color="#E5E5E5"> amazing</font>

9
00:00:29,550 --> 00:00:33,450
experience<font color="#CCCCCC"> in fact first ray of</font>

10
00:00:31,619 --> 00:00:34,950
<font color="#CCCCCC">battalion is now in California</font><font color="#E5E5E5"> so I'm</font>

11
00:00:33,450 --> 00:00:36,270
glad<font color="#E5E5E5"> I had</font><font color="#CCCCCC"> that opportunity while it</font>

12
00:00:34,950 --> 00:00:39,120
lasted

13
00:00:36,270 --> 00:00:41,160
<font color="#CCCCCC">I really enjoyed a lot manalo</font><font color="#E5E5E5"> Beach</font><font color="#CCCCCC"> and</font>

14
00:00:39,120 --> 00:00:44,160
I<font color="#E5E5E5"> think I spent too much time at</font><font color="#CCCCCC"> dukes</font>

15
00:00:41,160 --> 00:00:49,050
and mousses and<font color="#E5E5E5"> World Cafe and Zanzibar</font>

16
00:00:44,160 --> 00:00:52,078
and<font color="#CCCCCC"> Pure Barre and yeah these</font><font color="#E5E5E5"> old places</font>

17
00:00:49,050 --> 00:00:54,510
<font color="#E5E5E5">right all right so it's been eight years</font>

18
00:00:52,079 --> 00:00:55,410
since<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> been back to Oahu so I was</font>

19
00:00:54,510 --> 00:01:01,879
<font color="#CCCCCC">wondering if there are any new</font>

20
00:00:55,410 --> 00:01:06,479
<font color="#CCCCCC">transportation options so</font><font color="#E5E5E5"> caillou bird</font>

21
00:01:01,879 --> 00:01:09,330
<font color="#E5E5E5">it was a long trip</font><font color="#CCCCCC"> I actually did</font>

22
00:01:06,479 --> 00:01:10,679
confirm and<font color="#E5E5E5"> did try to pay and I</font>

23
00:01:09,330 --> 00:01:12,090
<font color="#CCCCCC">cancelled at the last</font><font color="#E5E5E5"> minute because it</font>

24
00:01:10,680 --> 00:01:17,400
was unknown amount and I was like this

25
00:01:12,090 --> 00:01:19,229
could<font color="#E5E5E5"> be bad so after the Marines</font><font color="#CCCCCC"> I went</font>

26
00:01:17,400 --> 00:01:21,030
to the<font color="#E5E5E5"> University of Florida</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I later</font>

27
00:01:19,229 --> 00:01:24,509
worked<font color="#E5E5E5"> for</font><font color="#CCCCCC"> government contractors such</font>

28
00:01:21,030 --> 00:01:26,759
as PwC Booz Allen and then I went into

29
00:01:24,509 --> 00:01:29,750
<font color="#CCCCCC">commercial world with</font><font color="#E5E5E5"> Leviathan security</font>

30
00:01:26,759 --> 00:01:33,060
now I met<font color="#E5E5E5"> octa</font><font color="#CCCCCC"> who</font><font color="#E5E5E5"> hears heard of octa</font><font color="#CCCCCC"> a</font>

31
00:01:29,750 --> 00:01:36,270
couple of you<font color="#E5E5E5"> okay so we do identity</font>

32
00:01:33,060 --> 00:01:39,000
access management and I'm<font color="#CCCCCC"> the lead</font>

33
00:01:36,270 --> 00:01:41,460
researcher on the internal research and

34
00:01:39,000 --> 00:01:45,600
exploitation team or otherwise known<font color="#E5E5E5"> as</font>

35
00:01:41,460 --> 00:01:48,059
<font color="#E5E5E5">Rex</font><font color="#CCCCCC"> a nice little dinosaur I also write</font>

36
00:01:45,600 --> 00:01:52,110
code<font color="#CCCCCC"> and I like to flip bits for fun</font>

37
00:01:48,060 --> 00:01:53,970
that's my github<font color="#CCCCCC"> no</font><font color="#E5E5E5"> sig ant work in that</font>

38
00:01:52,110 --> 00:01:57,180
background at all with<font color="#E5E5E5"> the secret</font>

39
00:01:53,970 --> 00:01:59,100
squirrel being the name right<font color="#CCCCCC"> I wrote</font>

40
00:01:57,180 --> 00:02:02,640
<font color="#E5E5E5">something called backdoor factory which</font>

41
00:01:59,100 --> 00:02:05,189
will do file infection on elf<font color="#CCCCCC"> mock oh</font>

42
00:02:02,640 --> 00:02:07,740
and PE files and the<font color="#E5E5E5"> files still work</font>

43
00:02:05,189 --> 00:02:10,530
normally<font color="#CCCCCC"> it does it on</font><font color="#E5E5E5"> the fly it's</font>

44
00:02:07,740 --> 00:02:13,290
automatic it's<font color="#E5E5E5"> doesn't statically there</font>

45
00:02:10,530 --> 00:02:16,680
were this in<font color="#E5E5E5"> 2013 and then</font><font color="#CCCCCC"> I wrote</font>

46
00:02:13,290 --> 00:02:20,010
BDF proxy which will infect<font color="#E5E5E5"> binaries</font>

47
00:02:16,680 --> 00:02:23,610
during download<font color="#CCCCCC"> over</font><font color="#E5E5E5"> HTTP</font><font color="#CCCCCC"> it's kind of</font>

48
00:02:20,010 --> 00:02:25,798
<font color="#E5E5E5">fun so this led</font><font color="#CCCCCC"> to me finding a sabre</font>

49
00:02:23,610 --> 00:02:28,830
<font color="#CCCCCC">cybercrime group infecting</font><font color="#E5E5E5"> Windows</font>

50
00:02:25,799 --> 00:02:34,620
applications over<font color="#E5E5E5"> tor</font><font color="#CCCCCC"> and this was back</font>

51
00:02:28,830 --> 00:02:36,030
and like<font color="#E5E5E5"> October 2014</font><font color="#CCCCCC"> yeah so</font><font color="#E5E5E5"> enough</font>

52
00:02:34,620 --> 00:02:38,160
about<font color="#E5E5E5"> me</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> we're going to talk about</font>

53
00:02:36,030 --> 00:02:41,099
<font color="#E5E5E5">some code signing basics</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> gonna give</font>

54
00:02:38,160 --> 00:02:42,659
you a demo I'm flipping the script<font color="#E5E5E5"> I'm</font>

55
00:02:41,099 --> 00:02:45,839
gonna do the demo<font color="#CCCCCC"> upfront to show you</font>

56
00:02:42,659 --> 00:02:48,420
impact<font color="#CCCCCC"> then I'll</font><font color="#E5E5E5"> talk about the details</font>

57
00:02:45,840 --> 00:02:51,090
<font color="#E5E5E5">and do some what</font><font color="#CCCCCC"> about isms with</font>

58
00:02:48,420 --> 00:02:53,160
<font color="#E5E5E5">gatekeeper and then we'll talk about the</font>

59
00:02:51,090 --> 00:02:55,890
<font color="#E5E5E5">disclosure</font><font color="#CCCCCC"> process how to do these</font>

60
00:02:53,160 --> 00:02:59,099
things<font color="#E5E5E5"> correctly and how I found the</font>

61
00:02:55,890 --> 00:03:01,200
vulnerability<font color="#E5E5E5"> so so code</font><font color="#CCCCCC"> signing is a</font>

62
00:02:59,099 --> 00:03:04,560
security construct<font color="#E5E5E5"> that allows for</font>

63
00:03:01,200 --> 00:03:08,459
consumer<font color="#CCCCCC"> end-users to verify who signed</font>

64
00:03:04,560 --> 00:03:10,790
the code<font color="#E5E5E5"> and also to verify</font><font color="#CCCCCC"> that the</font>

65
00:03:08,459 --> 00:03:14,849
code in question has not<font color="#CCCCCC"> been modified</font>

66
00:03:10,790 --> 00:03:17,250
<font color="#CCCCCC">any</font><font color="#E5E5E5"> failure either at the OS level or a</font>

67
00:03:14,849 --> 00:03:19,679
<font color="#CCCCCC">third party developed tools can have</font>

68
00:03:17,250 --> 00:03:21,989
<font color="#E5E5E5">disastrous side effects especially</font><font color="#CCCCCC"> for</font>

69
00:03:19,680 --> 00:03:25,650
security practitioners that do defense

70
00:03:21,989 --> 00:03:28,760
and<font color="#E5E5E5"> Incident Response now</font>

71
00:03:25,650 --> 00:03:31,560
both Windows and Mac<font color="#CCCCCC"> OS</font><font color="#E5E5E5"> or Mac OS</font>

72
00:03:28,760 --> 00:03:34,380
support the concept<font color="#E5E5E5"> of portable</font><font color="#CCCCCC"> sign</font>

73
00:03:31,560 --> 00:03:36,959
code<font color="#CCCCCC"> there have</font><font color="#E5E5E5"> been issues in code</font>

74
00:03:34,380 --> 00:03:41,880
signing in<font color="#E5E5E5"> the past however we're</font>

75
00:03:36,959 --> 00:03:45,359
focusing on issues<font color="#E5E5E5"> in and Mac OS</font>

76
00:03:41,880 --> 00:03:47,639
<font color="#CCCCCC">third-party developed code</font><font color="#E5E5E5"> so I'm gonna</font>

77
00:03:45,359 --> 00:03:53,340
<font color="#E5E5E5">go ahead and do the demo excuse me while</font>

78
00:03:47,639 --> 00:03:59,069
I try<font color="#E5E5E5"> to fix everything here</font><font color="#CCCCCC"> okay in</font>

79
00:03:53,340 --> 00:04:01,680
<font color="#E5E5E5">this demo we have Google Santa</font><font color="#CCCCCC"> in full</font>

80
00:03:59,069 --> 00:04:03,208
lockdown mode and Google Santa<font color="#E5E5E5"> is a</font>

81
00:04:01,680 --> 00:04:07,260
white listing - who knows<font color="#CCCCCC"> what</font><font color="#E5E5E5"> white</font>

82
00:04:03,209 --> 00:04:08,879
listing<font color="#E5E5E5"> is a lot of you okay so this is</font>

83
00:04:07,260 --> 00:04:13,230
<font color="#E5E5E5">developed by Google and they use it</font>

84
00:04:08,879 --> 00:04:17,430
<font color="#E5E5E5">internally</font><font color="#CCCCCC"> by default</font><font color="#E5E5E5"> only native</font><font color="#CCCCCC"> apple</font>

85
00:04:13,230 --> 00:04:21,390
code<font color="#E5E5E5"> and Mac OS</font><font color="#CCCCCC"> app store code can run</font>

86
00:04:17,430 --> 00:04:23,520
and I'm in this in this demo<font color="#CCCCCC"> the concept</font>

87
00:04:21,390 --> 00:04:25,560
is<font color="#CCCCCC"> that I was able</font><font color="#E5E5E5"> to get onto the box</font>

88
00:04:23,520 --> 00:04:28,409
via<font color="#CCCCCC"> phishing social engineering</font>

89
00:04:25,560 --> 00:04:30,930
<font color="#CCCCCC">is USB</font><font color="#E5E5E5"> devices or post exploitation and</font>

90
00:04:28,410 --> 00:04:33,510
I dropped a executable<font color="#CCCCCC"> on the machine</font>

91
00:04:30,930 --> 00:04:35,700
and I'm<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to bypass whitelisting and</font>

92
00:04:33,510 --> 00:04:38,580
this also will<font color="#CCCCCC"> show that this can allow</font>

93
00:04:35,700 --> 00:04:41,960
<font color="#E5E5E5">for persistence in plain sight</font><font color="#CCCCCC"> so let's</font>

94
00:04:38,580 --> 00:04:45,419
go ahead<font color="#E5E5E5"> and do the demo so you</font>

95
00:04:41,960 --> 00:04:47,789
<font color="#E5E5E5">everybody see that it's kind of small</font>

96
00:04:45,419 --> 00:04:50,969
so on the Left we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> there's so</font>

97
00:04:47,790 --> 00:04:54,240
there's<font color="#CCCCCC"> two VMs here or or two</font><font color="#E5E5E5"> there's a</font>

98
00:04:50,970 --> 00:04:55,710
VM on<font color="#E5E5E5"> the left and in this VM it is High</font>

99
00:04:54,240 --> 00:04:57,480
Sierra fully patched there's two

100
00:04:55,710 --> 00:05:00,120
terminals open the top one is a root

101
00:04:57,480 --> 00:05:02,520
<font color="#CCCCCC">shell just just I'm going to show</font><font color="#E5E5E5"> you a</font>

102
00:05:00,120 --> 00:05:05,190
privilege privilege<font color="#E5E5E5"> escalation</font>

103
00:05:02,520 --> 00:05:07,590
bug<font color="#CCCCCC"> in homebrew if you install it</font>

104
00:05:05,190 --> 00:05:10,219
default<font color="#E5E5E5"> and then also in</font><font color="#CCCCCC"> the lower</font>

105
00:05:07,590 --> 00:05:13,260
terminal is just the regular<font color="#E5E5E5"> admin user</font>

106
00:05:10,220 --> 00:05:15,720
<font color="#CCCCCC">and so on the right we</font><font color="#E5E5E5"> just have</font><font color="#CCCCCC"> netcat</font>

107
00:05:13,260 --> 00:05:21,570
<font color="#E5E5E5">listening on a port and i'm going to get</font>

108
00:05:15,720 --> 00:05:24,060
some shells back so I'm going to<font color="#CCCCCC"> open</font>

109
00:05:21,570 --> 00:05:28,020
<font color="#CCCCCC">calculator to show that regular</font>

110
00:05:24,060 --> 00:05:31,520
applications run and then I'm showing

111
00:05:28,020 --> 00:05:35,820
that Santa control is indeed in<font color="#E5E5E5"> or</font>

112
00:05:31,520 --> 00:05:37,560
Santa's in<font color="#CCCCCC"> lockdown mode</font><font color="#E5E5E5"> okay I'm going</font>

113
00:05:35,820 --> 00:05:40,219
<font color="#E5E5E5">to try</font><font color="#CCCCCC"> to actually execute netcat from</font>

114
00:05:37,560 --> 00:05:42,270
<font color="#CCCCCC">in</font><font color="#E5E5E5"> map</font><font color="#CCCCCC"> suite</font><font color="#E5E5E5"> and it does not execute</font>

115
00:05:40,220 --> 00:05:45,200
<font color="#E5E5E5">Santa blocked it as it should</font><font color="#CCCCCC"> have</font>

116
00:05:42,270 --> 00:05:45,200
because it's not signed

117
00:05:52,020 --> 00:06:00,159
so I'm gonna show you<font color="#E5E5E5"> right</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> LS so</font>

118
00:05:56,139 --> 00:06:01,750
LS this is the malicious binary<font color="#E5E5E5"> and I'm</font>

119
00:06:00,160 --> 00:06:04,300
going<font color="#E5E5E5"> to execute</font><font color="#CCCCCC"> that you'll notice that</font>

120
00:06:01,750 --> 00:06:07,930
it's an user local<font color="#CCCCCC"> Bend all four routes</font>

121
00:06:04,300 --> 00:06:10,780
<font color="#E5E5E5">and the normal user user local bin is</font>

122
00:06:07,930 --> 00:06:12,490
what is first in the path<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so if an</font>

123
00:06:10,780 --> 00:06:14,739
attacker gets<font color="#E5E5E5"> on your machine and drops</font>

124
00:06:12,490 --> 00:06:17,340
a<font color="#CCCCCC"> executable into</font><font color="#E5E5E5"> use or local bin and</font>

125
00:06:14,740 --> 00:06:19,539
if you have homebrew<font color="#E5E5E5"> that means that if</font>

126
00:06:17,340 --> 00:06:22,210
<font color="#CCCCCC">the any attacker that</font><font color="#E5E5E5"> gets on your</font>

127
00:06:19,539 --> 00:06:25,570
<font color="#E5E5E5">machine can write to this directory so</font>

128
00:06:22,210 --> 00:06:26,919
we're gonna go ahead<font color="#E5E5E5"> and execute LS and</font>

129
00:06:25,570 --> 00:06:29,889
you'll see I<font color="#E5E5E5"> get a connect back shell</font>

130
00:06:26,919 --> 00:06:34,630
<font color="#E5E5E5">okay and notice that</font><font color="#CCCCCC"> whitelisting isn't</font>

131
00:06:29,889 --> 00:06:36,639
is installed on this machine and<font color="#CCCCCC"> i</font>

132
00:06:34,630 --> 00:06:40,659
<font color="#CCCCCC">bypassed it</font><font color="#E5E5E5"> so here we go</font>

133
00:06:36,639 --> 00:06:43,509
<font color="#E5E5E5">now so we had the connection back I am</font>

134
00:06:40,660 --> 00:06:45,660
the tester user<font color="#E5E5E5"> and now I'm going to</font>

135
00:06:43,509 --> 00:06:55,440
show<font color="#CCCCCC"> you that the same path exists in</font>

136
00:06:45,660 --> 00:06:55,440
for the root user okay<font color="#E5E5E5"> so now execute LS</font>

137
00:06:57,270 --> 00:07:01,680
and then I get a connection<font color="#E5E5E5"> back for</font>

138
00:06:59,530 --> 00:07:01,679
<font color="#CCCCCC">root</font>

139
00:07:04,539 --> 00:07:17,509
<font color="#E5E5E5">yep</font><font color="#CCCCCC"> pretty easy so</font><font color="#E5E5E5"> that I'm going</font><font color="#CCCCCC"> to</font>

140
00:07:08,389 --> 00:07:19,789
<font color="#E5E5E5">disable Santa lockdown mode and I'm</font>

141
00:07:17,509 --> 00:07:23,000
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to use objective sees what's your</font>

142
00:07:19,789 --> 00:07:31,729
sign tool to show that it also<font color="#E5E5E5"> thinks</font>

143
00:07:23,000 --> 00:07:33,099
that<font color="#E5E5E5"> assigned by Apple now this is not</font>

144
00:07:31,729 --> 00:07:35,990
signed by Apple

145
00:07:33,099 --> 00:07:39,919
so I does everybody<font color="#E5E5E5"> get the impact of</font>

146
00:07:35,990 --> 00:07:45,229
<font color="#E5E5E5">this bug so now I'm going</font><font color="#CCCCCC"> to use Apple's</font>

147
00:07:39,919 --> 00:07:46,729
own code sign tool to show that this<font color="#E5E5E5"> is</font>

148
00:07:45,229 --> 00:07:48,139
signed by Apple<font color="#E5E5E5"> and that just shows who</font>

149
00:07:46,729 --> 00:07:50,690
<font color="#CCCCCC">is</font><font color="#E5E5E5"> signed now I'm gonna do what we call</font>

150
00:07:48,139 --> 00:07:56,449
strict checking to show that it is

151
00:07:50,690 --> 00:08:05,330
validly signed all right so that's the

152
00:07:56,449 --> 00:08:11,800
<font color="#E5E5E5">demo so how does this uh yes thank you</font>

153
00:08:05,330 --> 00:08:18,409
<font color="#E5E5E5">thank</font><font color="#CCCCCC"> you let me change your arrangement</font>

154
00:08:11,800 --> 00:08:20,900
<font color="#E5E5E5">all right all right so this bug was</font>

155
00:08:18,409 --> 00:08:22,460
published<font color="#CCCCCC"> a month ago</font><font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> a month</font>

156
00:08:20,900 --> 00:08:24,349
ago and<font color="#E5E5E5"> it kind of hit a lot of</font>

157
00:08:22,460 --> 00:08:28,609
<font color="#CCCCCC">different news outlets</font><font color="#E5E5E5"> it motherboard</font>

158
00:08:24,349 --> 00:08:30,199
<font color="#CCCCCC">ours</font><font color="#E5E5E5"> Gizmodo</font><font color="#CCCCCC"> Washington</font><font color="#E5E5E5"> Post</font><font color="#CCCCCC"> and so</font>

159
00:08:28,610 --> 00:08:32,779
there's a couple conditions for this<font color="#E5E5E5"> bug</font>

160
00:08:30,199 --> 00:08:34,459
<font color="#E5E5E5">it takes advantage of the</font><font color="#CCCCCC"> fad or a</font>

161
00:08:32,779 --> 00:08:37,010
universal binary format and we'll go

162
00:08:34,458 --> 00:08:38,989
into<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> mock oh and the fat</font>

163
00:08:37,010 --> 00:08:44,420
file must<font color="#E5E5E5"> be signed by Apple and the</font>

164
00:08:38,990 --> 00:08:46,040
second one must be<font color="#CCCCCC"> i386 and it doesn't</font>

165
00:08:44,420 --> 00:08:51,380
<font color="#CCCCCC">necessarily have to</font><font color="#E5E5E5"> be signed or it can</font>

166
00:08:46,040 --> 00:08:53,089
be self signed<font color="#E5E5E5"> and one way to way it's</font>

167
00:08:51,380 --> 00:08:57,800
malicious<font color="#E5E5E5"> is that basically you use a</font>

168
00:08:53,089 --> 00:08:59,839
CPU type in the fat header<font color="#E5E5E5"> that is not</font>

169
00:08:57,800 --> 00:09:03,170
<font color="#CCCCCC">native to that chipset I mean we'll</font>

170
00:08:59,839 --> 00:09:04,640
discuss this<font color="#E5E5E5"> so in the vulnerability</font>

171
00:09:03,170 --> 00:09:07,040
exists in the difference<font color="#CCCCCC"> between how the</font>

172
00:09:04,640 --> 00:09:09,140
Mokka<font color="#E5E5E5"> load or load sign code versus how</font>

173
00:09:07,040 --> 00:09:12,680
it properly use cosine and api's check

174
00:09:09,140 --> 00:09:14,069
<font color="#E5E5E5">sign code and is exploited</font><font color="#CCCCCC"> via a</font>

175
00:09:12,680 --> 00:09:16,109
malformed universe

176
00:09:14,070 --> 00:09:19,080
<font color="#E5E5E5">fad binary and we'll talk about that</font>

177
00:09:16,110 --> 00:09:21,540
right<font color="#E5E5E5"> now so I'm just gonna run this is</font>

178
00:09:19,080 --> 00:09:22,410
just a file command<font color="#E5E5E5"> on bin</font><font color="#CCCCCC"> sink and</font>

179
00:09:21,540 --> 00:09:26,010
you'll see that there are<font color="#E5E5E5"> two</font>

180
00:09:22,410 --> 00:09:29,880
architectures<font color="#E5E5E5"> and one is 64-bit and one</font>

181
00:09:26,010 --> 00:09:31,080
is<font color="#E5E5E5"> I 386 and</font><font color="#CCCCCC"> that's basically you see</font>

182
00:09:29,880 --> 00:09:34,080
the<font color="#CCCCCC"> diagram below that and that's</font>

183
00:09:31,080 --> 00:09:36,180
basically what a<font color="#E5E5E5"> fat or universal binary</font>

184
00:09:34,080 --> 00:09:37,770
is it's the same program compiled<font color="#E5E5E5"> for</font>

185
00:09:36,180 --> 00:09:43,170
different chipsets so that is<font color="#E5E5E5"> portable</font>

186
00:09:37,770 --> 00:09:45,240
<font color="#E5E5E5">between between different computers now</font>

187
00:09:43,170 --> 00:09:49,620
<font color="#E5E5E5">and the fat file really became in a</font>

188
00:09:45,240 --> 00:09:52,980
prominence with OS<font color="#CCCCCC"> X leopard</font><font color="#E5E5E5"> because it</font>

189
00:09:49,620 --> 00:09:54,690
was PPC<font color="#E5E5E5"> to Intel chipset and I think</font>

190
00:09:52,980 --> 00:09:57,450
that was like<font color="#CCCCCC"> two thousand seven so</font><font color="#E5E5E5"> this</font>

191
00:09:54,690 --> 00:10:01,740
bug<font color="#E5E5E5"> it could have existed in third-party</font>

192
00:09:57,450 --> 00:10:04,020
tools since 2007<font color="#E5E5E5"> so and there's no</font>

193
00:10:01,740 --> 00:10:07,230
signing on<font color="#CCCCCC"> the fat header or the</font><font color="#E5E5E5"> file</font>

194
00:10:04,020 --> 00:10:10,020
itself so you can<font color="#E5E5E5"> modify these and no</font>

195
00:10:07,230 --> 00:10:13,410
signature<font color="#CCCCCC"> shets</font><font color="#E5E5E5"> checks are in place</font><font color="#CCCCCC"> and</font>

196
00:10:10,020 --> 00:10:14,670
so the<font color="#E5E5E5"> devote and also the the want</font>

197
00:10:13,410 --> 00:10:18,420
<font color="#E5E5E5">ability exists in the difference between</font>

198
00:10:14,670 --> 00:10:20,310
<font color="#CCCCCC">how the maka loader loads</font><font color="#E5E5E5"> code versus</font>

199
00:10:18,420 --> 00:10:22,709
how and<font color="#E5E5E5"> properly use cosign</font><font color="#CCCCCC"> api used</font><font color="#E5E5E5"> to</font>

200
00:10:20,310 --> 00:10:26,369
check the<font color="#CCCCCC"> code so it's a bit</font><font color="#E5E5E5"> of a</font>

201
00:10:22,710 --> 00:10:31,440
<font color="#CCCCCC">bait-and-switch and i'll explain that so</font>

202
00:10:26,370 --> 00:10:34,740
- so you can see this<font color="#CCCCCC"> i we're using a</font>

203
00:10:31,440 --> 00:10:36,750
<font color="#E5E5E5">command that actually comes with xcode</font>

204
00:10:34,740 --> 00:10:38,700
developer tools called lipo I'm not

205
00:10:36,750 --> 00:10:42,420
kidding it's actually called lipo<font color="#CCCCCC"> it's</font>

206
00:10:38,700 --> 00:10:44,360
for working with fat files and you<font color="#E5E5E5"> can</font>

207
00:10:42,420 --> 00:10:47,219
create a fat file just by using<font color="#CCCCCC"> create</font>

208
00:10:44,360 --> 00:10:49,680
<font color="#E5E5E5">then later</font><font color="#CCCCCC"> on there's a thin so</font><font color="#E5E5E5"> you can</font>

209
00:10:47,220 --> 00:10:51,690
thin a fat file<font color="#E5E5E5"> obviously this was</font>

210
00:10:49,680 --> 00:10:55,260
<font color="#E5E5E5">written before everybody was</font><font color="#CCCCCC"> very</font>

211
00:10:51,690 --> 00:10:56,670
<font color="#E5E5E5">sensitive on the subject maybe they</font>

212
00:10:55,260 --> 00:11:00,439
should<font color="#E5E5E5"> change it we can get</font><font color="#CCCCCC"> it we can</font>

213
00:10:56,670 --> 00:11:02,610
<font color="#E5E5E5">get a position</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> petition started</font><font color="#CCCCCC"> so</font>

214
00:11:00,440 --> 00:11:07,170
what I'm<font color="#CCCCCC"> doing here is</font><font color="#E5E5E5"> I'm gonna create</font>

215
00:11:02,610 --> 00:11:09,630
this<font color="#E5E5E5"> Frankenstein binary and yeah so</font>

216
00:11:07,170 --> 00:11:11,729
this<font color="#E5E5E5"> is what this will look like this</font>

217
00:11:09,630 --> 00:11:13,470
tool the header will look like<font color="#E5E5E5"> in mock</font>

218
00:11:11,730 --> 00:11:16,380
<font color="#E5E5E5">Oh view you can download mock Oh view</font>

219
00:11:13,470 --> 00:11:18,570
there's a I think it's on one of these

220
00:11:16,380 --> 00:11:22,110
downloads stuff for free<font color="#E5E5E5"> sites that are</font>

221
00:11:18,570 --> 00:11:26,070
totally trustworthy<font color="#CCCCCC"> so you can see that</font>

222
00:11:22,110 --> 00:11:27,480
the<font color="#E5E5E5"> Python x86 64 bit</font><font color="#CCCCCC"> code is first and</font>

223
00:11:26,070 --> 00:11:29,670
then you<font color="#E5E5E5"> have</font>

224
00:11:27,480 --> 00:11:35,520
right after<font color="#E5E5E5"> that and if I run code sign</font>

225
00:11:29,670 --> 00:11:38,040
on this you'll see<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the that</font><font color="#CCCCCC"> it says</font>

226
00:11:35,520 --> 00:11:40,680
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so I'm running on Python first and</font>

227
00:11:38,040 --> 00:11:42,480
there's no team identify right and then

228
00:11:40,680 --> 00:11:44,609
I run on<font color="#E5E5E5"> net cat next and you'll see</font>

229
00:11:42,480 --> 00:11:47,240
that the signature is<font color="#CCCCCC"> ad-hoc self-signed</font>

230
00:11:44,610 --> 00:11:50,070
<font color="#E5E5E5">and there's also no team identify</font><font color="#CCCCCC"> err</font>

231
00:11:47,240 --> 00:11:52,790
<font color="#E5E5E5">okay so if if I want to</font><font color="#CCCCCC"> execute the</font>

232
00:11:50,070 --> 00:11:56,790
Python code<font color="#CCCCCC"> Python has this interesting</font>

233
00:11:52,790 --> 00:11:58,620
<font color="#E5E5E5">bug that probably could</font><font color="#CCCCCC"> be abused it has</font>

234
00:11:56,790 --> 00:12:00,209
to be named<font color="#E5E5E5"> Python so if you</font><font color="#CCCCCC"> renamed</font>

235
00:11:58,620 --> 00:12:02,130
<font color="#E5E5E5">Python to something else</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> look for</font>

236
00:12:00,210 --> 00:12:04,320
loaded libraries<font color="#CCCCCC"> that are</font><font color="#E5E5E5"> not are the</font>

237
00:12:02,130 --> 00:12:06,350
same name<font color="#CCCCCC"> as executable it's kind of</font>

238
00:12:04,320 --> 00:12:09,030
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> fun so it has to be named</font><font color="#CCCCCC"> Python</font>

239
00:12:06,350 --> 00:12:10,350
<font color="#CCCCCC">and so I</font><font color="#E5E5E5"> just copied it the attempt and</font>

240
00:12:09,030 --> 00:12:14,490
I execute<font color="#E5E5E5"> it and you see that</font><font color="#CCCCCC"> Python</font>

241
00:12:10,350 --> 00:12:17,760
<font color="#E5E5E5">executes now how can we get netcat to</font>

242
00:12:14,490 --> 00:12:20,910
execute without messing up<font color="#E5E5E5"> the</font>

243
00:12:17,760 --> 00:12:23,670
signatures well what we need<font color="#E5E5E5"> to do is is</font>

244
00:12:20,910 --> 00:12:25,110
set the<font color="#CCCCCC"> CPU type for the first binary</font>

245
00:12:23,670 --> 00:12:28,469
slice and the fat file to an invalid

246
00:12:25,110 --> 00:12:31,980
type for the native operating system so

247
00:12:28,470 --> 00:12:33,690
<font color="#E5E5E5">basically I just flipped</font><font color="#CCCCCC"> a bet</font><font color="#E5E5E5"> a bit by</font>

248
00:12:31,980 --> 00:12:36,000
setting the CPU type to an invalid type

249
00:12:33,690 --> 00:12:38,940
or in a<font color="#CCCCCC"> non-native type you could</font><font color="#E5E5E5"> also</font>

250
00:12:36,000 --> 00:12:42,990
you can set it to<font color="#E5E5E5"> PowerPC or whatever</font>

251
00:12:38,940 --> 00:12:46,140
the<font color="#CCCCCC"> maka over loader will skip over the</font>

252
00:12:42,990 --> 00:12:49,350
validly signed maka binary<font color="#E5E5E5"> and execute</font>

253
00:12:46,140 --> 00:12:50,520
the malicious non-apple<font color="#CCCCCC"> signed code it</font>

254
00:12:49,350 --> 00:12:54,780
just<font color="#CCCCCC"> skipped</font><font color="#E5E5E5"> right over because it's</font>

255
00:12:50,520 --> 00:12:57,569
<font color="#CCCCCC">can't execute so in this example</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> see</font>

256
00:12:54,780 --> 00:12:59,880
that<font color="#E5E5E5"> after I made</font><font color="#CCCCCC"> that change netcat</font>

257
00:12:57,570 --> 00:13:02,940
execute<font color="#E5E5E5"> still called</font><font color="#CCCCCC"> python but</font><font color="#E5E5E5"> netcat</font>

258
00:12:59,880 --> 00:13:05,490
execute and then you'll see if<font color="#CCCCCC"> i run</font>

259
00:13:02,940 --> 00:13:10,290
code sign on it<font color="#CCCCCC"> it still has the same</font>

260
00:13:05,490 --> 00:13:13,770
<font color="#E5E5E5">team identifier and it's still valid so</font>

261
00:13:10,290 --> 00:13:16,890
that's that's<font color="#E5E5E5"> pretty pretty awesome so</font>

262
00:13:13,770 --> 00:13:19,790
what vendors were affected everyone<font color="#E5E5E5"> that</font>

263
00:13:16,890 --> 00:13:23,819
I<font color="#E5E5E5"> could get my hands on and test</font>

264
00:13:19,790 --> 00:13:27,290
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> everyone that had the code</font>

265
00:13:23,820 --> 00:13:29,580
signing feature as<font color="#CCCCCC"> part of their their</font>

266
00:13:27,290 --> 00:13:33,120
their<font color="#CCCCCC"> feature</font><font color="#E5E5E5"> set product feature set</font>

267
00:13:29,580 --> 00:13:34,950
<font color="#E5E5E5">and part of each bug report we provided</font>

268
00:13:33,120 --> 00:13:38,190
<font color="#CCCCCC">four samples to the vendor so that they</font>

269
00:13:34,950 --> 00:13:40,050
can<font color="#E5E5E5"> fully test it let me go over these</font>

270
00:13:38,190 --> 00:13:42,630
<font color="#E5E5E5">so the first one</font>

271
00:13:40,050 --> 00:13:45,540
<font color="#E5E5E5">is it's not signed that</font><font color="#CCCCCC"> means the</font>

272
00:13:42,630 --> 00:13:47,279
malicious code is not<font color="#E5E5E5"> signed and it</font>

273
00:13:45,540 --> 00:13:49,260
wasn't really malicious I wasn't sending

274
00:13:47,279 --> 00:13:52,920
<font color="#CCCCCC">vendors malicious code</font>

275
00:13:49,260 --> 00:13:54,899
it was just examples<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> header is</font>

276
00:13:52,920 --> 00:13:59,069
malformed<font color="#E5E5E5"> the next one is</font><font color="#CCCCCC"> actually a</font>

277
00:13:54,899 --> 00:14:01,860
PowerPC<font color="#CCCCCC"> Apple PowerPC signed binary that</font>

278
00:13:59,070 --> 00:14:07,829
<font color="#E5E5E5">I took off a OS X leopard</font><font color="#CCCCCC"> ISO that I</font>

279
00:14:01,860 --> 00:14:09,329
found it was<font color="#E5E5E5"> dusty</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the headers so</font>

280
00:14:07,829 --> 00:14:11,459
it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> it's a non malformed header</font>

281
00:14:09,329 --> 00:14:13,979
it's a normal header<font color="#E5E5E5"> and the malicious</font>

282
00:14:11,459 --> 00:14:15,689
code is<font color="#E5E5E5"> ad hoc sign the next one is</font><font color="#CCCCCC"> ad</font>

283
00:14:13,980 --> 00:14:18,149
<font color="#CCCCCC">hoc sign malformed header and then I</font>

284
00:14:15,690 --> 00:14:21,630
actually took the terminal<font color="#CCCCCC"> application</font>

285
00:14:18,149 --> 00:14:24,079
that<font color="#E5E5E5"> comes with apple</font><font color="#CCCCCC"> and I was able to</font>

286
00:14:21,630 --> 00:14:33,060
create<font color="#E5E5E5"> a malicious terminal application</font>

287
00:14:24,079 --> 00:14:37,890
<font color="#E5E5E5">that came back</font><font color="#CCCCCC"> assigned so the first</font>

288
00:14:33,060 --> 00:14:41,640
vendor<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> f-secure little</font><font color="#CCCCCC"> flock er X</font>

289
00:14:37,890 --> 00:14:44,010
<font color="#E5E5E5">fence so it came back this is the what I</font>

290
00:14:41,640 --> 00:14:48,360
<font color="#E5E5E5">would call the weakest sample it came</font>

291
00:14:44,010 --> 00:14:53,250
back as signed as<font color="#CCCCCC"> Apple</font><font color="#E5E5E5"> and so</font>

292
00:14:48,360 --> 00:14:55,230
<font color="#CCCCCC">objective-c tools if if the tool had</font>

293
00:14:53,250 --> 00:14:59,130
<font color="#E5E5E5">code signing as part of the feature set</font>

294
00:14:55,230 --> 00:15:02,010
it if my samples would come back

295
00:14:59,130 --> 00:15:04,860
<font color="#E5E5E5">assigned by Apple so this is a what's</font>

296
00:15:02,010 --> 00:15:06,660
your sign and then this<font color="#E5E5E5"> is TAS Explorer</font>

297
00:15:04,860 --> 00:15:09,950
but I think all the<font color="#CCCCCC"> tools are effect I</font>

298
00:15:06,660 --> 00:15:14,130
think block block Lulu<font color="#CCCCCC"> a</font><font color="#E5E5E5"> knock</font><font color="#CCCCCC"> knock I</font>

299
00:15:09,950 --> 00:15:15,930
think they're they're all<font color="#E5E5E5"> affected</font><font color="#CCCCCC"> so</font>

300
00:15:14,130 --> 00:15:17,970
then we have<font color="#CCCCCC"> Google Santa's</font><font color="#E5E5E5"> whitelisting</font>

301
00:15:15,930 --> 00:15:19,560
tool you see that comes back is

302
00:15:17,970 --> 00:15:22,170
<font color="#CCCCCC">whitelisted it's</font><font color="#E5E5E5"> okay</font>

303
00:15:19,560 --> 00:15:24,810
<font color="#CCCCCC">greens</font><font color="#E5E5E5"> good and then it shows a full</font>

304
00:15:22,170 --> 00:15:29,430
<font color="#E5E5E5">chain as being apple and then</font><font color="#CCCCCC"> yelp OSX</font>

305
00:15:24,810 --> 00:15:32,729
collector<font color="#E5E5E5"> so OSX collector would only</font>

306
00:15:29,430 --> 00:15:35,160
return an error<font color="#E5E5E5"> if there was a failure</font>

307
00:15:32,730 --> 00:15:37,380
so I had to modify the code to get get

308
00:15:35,160 --> 00:15:39,569
everything to print<font color="#CCCCCC"> zeros if everything</font>

309
00:15:37,380 --> 00:15:44,310
was<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> shows that everything</font>

310
00:15:39,570 --> 00:15:46,709
<font color="#E5E5E5">is</font><font color="#CCCCCC"> okay then</font><font color="#E5E5E5"> carbon black</font><font color="#CCCCCC"> I don't if</font><font color="#E5E5E5"> you</font>

311
00:15:44,310 --> 00:15:49,439
<font color="#CCCCCC">can see it but</font><font color="#E5E5E5"> it says it's valid and</font>

312
00:15:46,709 --> 00:15:52,888
it's signed by Apple and the<font color="#CCCCCC"> virustotal</font>

313
00:15:49,440 --> 00:15:56,399
<font color="#CCCCCC">on it they by</font><font color="#E5E5E5"> heard of</font><font color="#CCCCCC"> irish</font><font color="#E5E5E5"> total</font>

314
00:15:52,889 --> 00:15:58,769
that's a joke<font color="#E5E5E5"> so this everything came</font>

315
00:15:56,399 --> 00:16:01,139
back signed by<font color="#E5E5E5"> Apple you're getting kind</font>

316
00:15:58,769 --> 00:16:02,220
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the picture</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> oh it's query maybe</font>

317
00:16:01,139 --> 00:16:06,870
a couple<font color="#CCCCCC"> people</font><font color="#E5E5E5"> have heard of those</font>

318
00:16:02,220 --> 00:16:09,029
query<font color="#CCCCCC"> and they had a pretty</font><font color="#E5E5E5"> good fix and</font>

319
00:16:06,870 --> 00:16:14,459
then<font color="#E5E5E5"> Little Snitch</font><font color="#CCCCCC"> so Little Snitch</font>

320
00:16:09,029 --> 00:16:16,620
<font color="#E5E5E5">actually did the best</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> actually they</font>

321
00:16:14,459 --> 00:16:19,888
actually<font color="#CCCCCC"> would tell you so I'm gonna</font>

322
00:16:16,620 --> 00:16:21,420
read<font color="#CCCCCC"> it because internal differs from</font>

323
00:16:19,889 --> 00:16:23,160
the<font color="#E5E5E5"> version on disk</font><font color="#CCCCCC"> it has no code</font>

324
00:16:21,420 --> 00:16:24,449
signature but the<font color="#CCCCCC"> dispersion does this</font>

325
00:16:23,160 --> 00:16:28,529
means<font color="#E5E5E5"> that the running process was</font>

326
00:16:24,449 --> 00:16:32,849
<font color="#E5E5E5">probably maliciously modified</font><font color="#CCCCCC"> it's half</font>

327
00:16:28,529 --> 00:16:36,870
true<font color="#CCCCCC"> the reason they do this</font><font color="#E5E5E5"> check is</font>

328
00:16:32,850 --> 00:16:38,970
because your code<font color="#E5E5E5"> can be modified at</font>

329
00:16:36,870 --> 00:16:40,620
<font color="#E5E5E5">runtime</font><font color="#CCCCCC"> so this is a pretty good check</font>

330
00:16:38,970 --> 00:16:43,440
all they're doing is<font color="#E5E5E5"> just checking the</font>

331
00:16:40,620 --> 00:16:45,630
the<font color="#E5E5E5"> runtime executable but if you were</font>

332
00:16:43,440 --> 00:16:47,459
to go into<font color="#CCCCCC"> the settings and you'll see</font>

333
00:16:45,630 --> 00:16:50,790
bottom right-hand quarter corner it<font color="#E5E5E5"> says</font>

334
00:16:47,459 --> 00:16:51,959
signed by Apple<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then you look at the</font>

335
00:16:50,790 --> 00:16:53,880
<font color="#E5E5E5">certificate and</font><font color="#CCCCCC"> it shows that</font><font color="#E5E5E5"> it's</font>

336
00:16:51,959 --> 00:16:55,649
signed by Apple and so if all your other

337
00:16:53,880 --> 00:16:57,990
<font color="#E5E5E5">tools are saying that it's signed by</font>

338
00:16:55,649 --> 00:17:01,019
Apple you you might think that it's a

339
00:16:57,990 --> 00:17:03,630
bug and<font color="#E5E5E5"> Little Snitch</font><font color="#CCCCCC"> versus</font><font color="#E5E5E5"> everything</font>

340
00:17:01,019 --> 00:17:04,919
else or<font color="#E5E5E5"> vice</font><font color="#CCCCCC"> versa but</font><font color="#E5E5E5"> most I think</font><font color="#CCCCCC"> most</font>

341
00:17:03,630 --> 00:17:09,990
<font color="#E5E5E5">people would run the code based on my</font>

342
00:17:04,919 --> 00:17:12,209
experience<font color="#CCCCCC"> so that's the list of known</font>

343
00:17:09,990 --> 00:17:15,179
vendors I feel like I have a runs

344
00:17:12,209 --> 00:17:16,589
<font color="#E5E5E5">Rumsfeld problem of unknown knowns or</font>

345
00:17:15,179 --> 00:17:20,540
known unknowns I can remember how that

346
00:17:16,589 --> 00:17:23,099
<font color="#E5E5E5">goes but yeah so after this came out</font>

347
00:17:20,540 --> 00:17:25,980
there<font color="#E5E5E5"> was some comments on ours and like</font>

348
00:17:23,099 --> 00:17:27,869
oh thank<font color="#CCCCCC"> God for</font><font color="#E5E5E5"> gatekeeper and so</font><font color="#CCCCCC"> gate</font>

349
00:17:25,980 --> 00:17:29,700
gatekeeper<font color="#CCCCCC"> who knows about gatekeeper</font>

350
00:17:27,869 --> 00:17:31,290
everybody knows<font color="#E5E5E5"> about gatekeeper a</font>

351
00:17:29,700 --> 00:17:33,570
couple of you so<font color="#E5E5E5"> gate keeper is a</font>

352
00:17:31,290 --> 00:17:35,629
security<font color="#CCCCCC"> feature that</font><font color="#E5E5E5"> enforces code</font>

353
00:17:33,570 --> 00:17:38,129
signing<font color="#E5E5E5"> and verifies downloaded</font>

354
00:17:35,630 --> 00:17:41,929
applications<font color="#CCCCCC"> before</font><font color="#E5E5E5"> allowing</font><font color="#CCCCCC"> them to run</font>

355
00:17:38,130 --> 00:17:44,360
and that's only<font color="#CCCCCC"> a one-time</font><font color="#E5E5E5"> verification</font>

356
00:17:41,929 --> 00:17:46,559
so if you<font color="#E5E5E5"> modify it after the fact</font>

357
00:17:44,360 --> 00:17:48,570
<font color="#CCCCCC">gatekeepers not</font><font color="#E5E5E5"> going to check or</font>

358
00:17:46,559 --> 00:17:52,710
doesn't do anything but<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is how</font>

359
00:17:48,570 --> 00:17:55,580
Apple sees gatekeeper<font color="#CCCCCC"> and this is how</font><font color="#E5E5E5"> I</font>

360
00:17:52,710 --> 00:17:55,580
see<font color="#CCCCCC"> gatekeeper</font>

361
00:17:57,159 --> 00:18:02,559
and there's a<font color="#E5E5E5"> reason I think this and</font>

362
00:18:00,190 --> 00:18:05,019
I'm<font color="#CCCCCC"> not the</font><font color="#E5E5E5"> only one so this is a slide</font>

363
00:18:02,559 --> 00:18:08,830
<font color="#CCCCCC">from Patrick</font><font color="#E5E5E5"> waddles 2016 gatekeeper</font>

364
00:18:05,019 --> 00:18:12,009
exposed talk and I'll talk about<font color="#E5E5E5"> some of</font>

365
00:18:08,830 --> 00:18:14,470
the details<font color="#CCCCCC"> of why many people that do</font>

366
00:18:12,009 --> 00:18:19,720
red teaming and<font color="#E5E5E5"> pen testing</font><font color="#CCCCCC"> fill this</font>

367
00:18:14,470 --> 00:18:21,519
way so if<font color="#CCCCCC"> you're targeted</font><font color="#E5E5E5"> you know</font>

368
00:18:19,720 --> 00:18:24,429
you'll get<font color="#E5E5E5"> the picture</font><font color="#CCCCCC"> after this so if</font>

369
00:18:21,519 --> 00:18:27,009
you follow the standard method of

370
00:18:24,429 --> 00:18:28,590
getting<font color="#E5E5E5"> app bundles and DM</font><font color="#CCCCCC"> G's and</font><font color="#E5E5E5"> you</font>

371
00:18:27,009 --> 00:18:31,629
download<font color="#E5E5E5"> them through a browser</font>

372
00:18:28,590 --> 00:18:33,759
<font color="#CCCCCC">gatekeeper will protect you gatekeeper</font>

373
00:18:31,629 --> 00:18:35,559
does not look at standalone<font color="#CCCCCC"> mokou</font>

374
00:18:33,759 --> 00:18:39,039
binaries<font color="#E5E5E5"> and that is the executable</font>

375
00:18:35,559 --> 00:18:41,139
format<font color="#E5E5E5"> right so this is</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> I tend to</font>

376
00:18:39,039 --> 00:18:44,259
use when I'm setting up a persistence

377
00:18:41,139 --> 00:18:46,000
method<font color="#CCCCCC"> I just use a mock</font><font color="#E5E5E5"> oh there's no</font>

378
00:18:44,259 --> 00:18:48,850
need<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> an app bundle if somebody's</font>

379
00:18:46,000 --> 00:18:52,149
using<font color="#E5E5E5"> that bundle</font><font color="#CCCCCC"> there either they've</font>

380
00:18:48,850 --> 00:18:55,240
infected the supply chain tool chain of

381
00:18:52,149 --> 00:18:58,750
a developer<font color="#CCCCCC"> we've seen that</font><font color="#E5E5E5"> with Mac OS</font>

382
00:18:55,240 --> 00:19:01,779
<font color="#E5E5E5">or they have a signing certificate</font><font color="#CCCCCC"> or</font>

383
00:18:58,750 --> 00:19:03,730
they're<font color="#E5E5E5"> not very sophisticated</font><font color="#CCCCCC"> now if</font>

384
00:19:01,779 --> 00:19:05,649
you download a zip file a zip

385
00:19:03,730 --> 00:19:09,100
application<font color="#E5E5E5"> bundle for press application</font>

386
00:19:05,649 --> 00:19:11,350
bundle<font color="#E5E5E5"> via zip format you're protected</font>

387
00:19:09,100 --> 00:19:15,428
<font color="#E5E5E5">unless</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> use 7-zip and then you're not</font>

388
00:19:11,350 --> 00:19:18,129
protected<font color="#CCCCCC"> if you if your application</font>

389
00:19:15,429 --> 00:19:21,700
bundle is been compressed with 7-zip

390
00:19:18,129 --> 00:19:23,379
<font color="#CCCCCC">you're not protected if the application</font>

391
00:19:21,700 --> 00:19:27,220
is Todd you're protected<font color="#E5E5E5"> unless they use</font>

392
00:19:23,379 --> 00:19:31,090
7-zip to uncompress it<font color="#E5E5E5"> then you're not</font>

393
00:19:27,220 --> 00:19:34,750
protected<font color="#CCCCCC"> if the user uses curl or W</font><font color="#E5E5E5"> get</font>

394
00:19:31,090 --> 00:19:39,939
<font color="#E5E5E5">you're not protected or if that bundles</font>

395
00:19:34,750 --> 00:19:42,070
on USB<font color="#E5E5E5"> you're not protected so yeah it's</font>

396
00:19:39,940 --> 00:19:47,200
a very<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't consider it a security</font>

397
00:19:42,070 --> 00:19:50,529
boundary but Apple does so I initially

398
00:19:47,200 --> 00:19:56,110
when I I found<font color="#E5E5E5"> this bug</font><font color="#CCCCCC"> I decided to</font>

399
00:19:50,529 --> 00:19:58,389
<font color="#E5E5E5">contact Apple directly and this started</font>

400
00:19:56,110 --> 00:20:00,610
let's<font color="#E5E5E5"> say it</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> the con we'll just</font>

401
00:19:58,389 --> 00:20:03,340
talk<font color="#CCCCCC"> about contacting</font><font color="#E5E5E5"> them first</font><font color="#CCCCCC"> so I</font>

402
00:20:00,610 --> 00:20:06,919
<font color="#CCCCCC">sent the initial sample it's a Apple</font>

403
00:20:03,340 --> 00:20:08,540
where the malicious code was<font color="#CCCCCC"> not signed</font>

404
00:20:06,920 --> 00:20:11,660
and I already<font color="#E5E5E5"> knew</font><font color="#CCCCCC"> what they're</font><font color="#E5E5E5"> going to</font>

405
00:20:08,540 --> 00:20:13,700
tell me so it's<font color="#CCCCCC"> kind of a</font><font color="#E5E5E5"> setup because</font>

406
00:20:11,660 --> 00:20:16,010
<font color="#CCCCCC">I've</font><font color="#E5E5E5"> been down this path</font><font color="#CCCCCC"> before on</font>

407
00:20:13,700 --> 00:20:17,930
<font color="#CCCCCC">code-signing</font><font color="#E5E5E5"> issues and</font><font color="#CCCCCC"> products</font>

408
00:20:16,010 --> 00:20:20,150
<font color="#E5E5E5">security you know provided a</font>

409
00:20:17,930 --> 00:20:21,770
<font color="#CCCCCC">recommendation and I turn around</font><font color="#E5E5E5"> and</font>

410
00:20:20,150 --> 00:20:25,220
<font color="#CCCCCC">provide a bypass to their</font>

411
00:20:21,770 --> 00:20:26,510
recommendations<font color="#E5E5E5"> and then they provide</font>

412
00:20:25,220 --> 00:20:29,030
another<font color="#E5E5E5"> recommendation that doesn't</font>

413
00:20:26,510 --> 00:20:31,400
solve<font color="#E5E5E5"> the issue and I respond with</font><font color="#CCCCCC"> a</font>

414
00:20:29,030 --> 00:20:32,899
workflow<font color="#E5E5E5"> to solve the issue and I hope</font>

415
00:20:31,400 --> 00:20:35,270
that they'll address it<font color="#E5E5E5"> because my goal</font>

416
00:20:32,900 --> 00:20:37,370
with the entire<font color="#CCCCCC"> problem was for</font><font color="#E5E5E5"> them to</font>

417
00:20:35,270 --> 00:20:39,620
<font color="#CCCCCC">fix it</font><font color="#E5E5E5"> on the back</font><font color="#CCCCCC"> end so that</font>

418
00:20:37,370 --> 00:20:43,540
developers<font color="#E5E5E5"> didn't have to do anything in</font>

419
00:20:39,620 --> 00:20:46,689
their code<font color="#CCCCCC"> so they'd be frictionless</font>

420
00:20:43,540 --> 00:20:48,440
however<font color="#CCCCCC"> they let me know that</font>

421
00:20:46,690 --> 00:20:50,270
<font color="#E5E5E5">third-party developers we're gonna have</font>

422
00:20:48,440 --> 00:20:53,870
to work it out<font color="#E5E5E5"> and they were gonna</font>

423
00:20:50,270 --> 00:20:55,160
<font color="#E5E5E5">update some documentation so I guess</font>

424
00:20:53,870 --> 00:20:57,560
you're<font color="#CCCCCC"> asking your next question is</font>

425
00:20:55,160 --> 00:21:04,760
Apple vulnerable to any of this<font color="#E5E5E5"> and I</font>

426
00:20:57,560 --> 00:21:07,370
tested<font color="#E5E5E5"> a number of scenarios and they</font>

427
00:21:04,760 --> 00:21:10,040
are not in a security<font color="#E5E5E5"> sense for</font><font color="#CCCCCC"> example</font>

428
00:21:07,370 --> 00:21:12,439
I could<font color="#CCCCCC"> not access key chain from</font>

429
00:21:10,040 --> 00:21:15,350
unsigned code<font color="#E5E5E5"> directly without entering</font>

430
00:21:12,440 --> 00:21:17,330
<font color="#E5E5E5">a password</font><font color="#CCCCCC"> so there's really I haven't</font>

431
00:21:15,350 --> 00:21:19,969
<font color="#E5E5E5">found any instances maybe they are maybe</font>

432
00:21:17,330 --> 00:21:22,310
I just<font color="#CCCCCC"> haven't looked</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> it fully but</font>

433
00:21:19,970 --> 00:21:25,460
<font color="#E5E5E5">this is kind of an interesting bug so</font>

434
00:21:22,310 --> 00:21:29,659
this is the system information app<font color="#E5E5E5"> and</font>

435
00:21:25,460 --> 00:21:33,950
my terminal POC is<font color="#E5E5E5"> there and it comes</font>

436
00:21:29,660 --> 00:21:36,740
back<font color="#CCCCCC"> assigned by Apple but I don't</font>

437
00:21:33,950 --> 00:21:38,390
consider this<font color="#E5E5E5"> a security bug because I</font>

438
00:21:36,740 --> 00:21:40,670
hope you're<font color="#E5E5E5"> not making security</font>

439
00:21:38,390 --> 00:21:44,060
decisions off the security<font color="#CCCCCC"> information</font>

440
00:21:40,670 --> 00:21:46,610
out<font color="#CCCCCC"> but if it was if this was built in</font>

441
00:21:44,060 --> 00:21:48,590
as a security<font color="#E5E5E5"> feature into Mac then I'll</font>

442
00:21:46,610 --> 00:21:51,110
consider<font color="#CCCCCC"> a security issue but as of</font>

443
00:21:48,590 --> 00:21:53,629
<font color="#CCCCCC">right now</font><font color="#E5E5E5"> I don't if somebody else wants</font>

444
00:21:51,110 --> 00:21:54,699
<font color="#CCCCCC">to report</font><font color="#E5E5E5"> it go ahead good luck with</font>

445
00:21:53,630 --> 00:21:57,350
that

446
00:21:54,700 --> 00:21:59,180
<font color="#E5E5E5">so the developers were really excited</font>

447
00:21:57,350 --> 00:22:02,240
<font color="#E5E5E5">about this book as you can probably see</font>

448
00:21:59,180 --> 00:22:07,100
<font color="#E5E5E5">this is some of the reactions this was</font>

449
00:22:02,240 --> 00:22:08,960
very<font color="#E5E5E5"> common yeah god help anyone using</font>

450
00:22:07,100 --> 00:22:12,189
these API so I like<font color="#CCCCCC"> that and this was</font>

451
00:22:08,960 --> 00:22:12,190
<font color="#CCCCCC">somebody sent me</font><font color="#E5E5E5"> this offline</font>

452
00:22:14,320 --> 00:22:19,070
<font color="#CCCCCC">it was great I just leave this in the</font>

453
00:22:17,600 --> 00:22:25,760
background sometimes<font color="#E5E5E5"> I'm having a bad</font>

454
00:22:19,070 --> 00:22:28,820
day<font color="#E5E5E5"> so how did we go</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> yeah April 9th I</font>

455
00:22:25,760 --> 00:22:32,658
was able<font color="#E5E5E5"> to tell all everyone we were</font>

456
00:22:28,820 --> 00:22:34,939
<font color="#CCCCCC">able to find</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> other that we knew were</font>

457
00:22:32,659 --> 00:22:38,659
affected and then at the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> time I was</font>

458
00:22:34,940 --> 00:22:42,380
<font color="#E5E5E5">in contact with CMU sir and their</font>

459
00:22:38,659 --> 00:22:45,200
recommendation was a blog post<font color="#CCCCCC"> to get</font>

460
00:22:42,380 --> 00:22:47,510
this information out because because<font color="#CCCCCC"> of</font>

461
00:22:45,200 --> 00:22:49,220
<font color="#E5E5E5">the code signing aspect a lot of people</font>

462
00:22:47,510 --> 00:22:51,799
could<font color="#CCCCCC"> have developed</font><font color="#E5E5E5"> their</font><font color="#CCCCCC"> own internal</font>

463
00:22:49,220 --> 00:22:53,899
tools to check code<font color="#CCCCCC"> signing and we just</font>

464
00:22:51,799 --> 00:22:56,809
you know<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to the Rumsfeld question</font>

465
00:22:53,899 --> 00:22:59,959
<font color="#E5E5E5">unknown knowns no known unknowns you</font>

466
00:22:56,809 --> 00:23:05,440
know<font color="#E5E5E5"> so on June 12th we did the public</font>

467
00:22:59,960 --> 00:23:08,450
<font color="#E5E5E5">disclosure</font><font color="#CCCCCC"> and yeah yeah so here we are</font>

468
00:23:05,440 --> 00:23:13,899
<font color="#CCCCCC">so this was Apple's documentation</font><font color="#E5E5E5"> on</font>

469
00:23:08,450 --> 00:23:16,970
June 9th<font color="#CCCCCC"> thank you Google Google</font><font color="#E5E5E5"> cache</font>

470
00:23:13,899 --> 00:23:20,479
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> sec static code check</font>

471
00:23:16,970 --> 00:23:22,279
validity<font color="#E5E5E5"> API documentation</font>

472
00:23:20,480 --> 00:23:26,179
sometime after June 12th

473
00:23:22,279 --> 00:23:27,919
<font color="#E5E5E5">we got updated</font><font color="#CCCCCC"> and I'll read it out when</font>

474
00:23:26,179 --> 00:23:30,409
checking<font color="#CCCCCC"> in</font><font color="#E5E5E5"> your universal binary</font>

475
00:23:27,919 --> 00:23:33,320
include the<font color="#CCCCCC"> Kasich</font><font color="#E5E5E5"> CS check all</font>

476
00:23:30,409 --> 00:23:35,090
architectures flag<font color="#E5E5E5"> otherwise the method</font>

477
00:23:33,320 --> 00:23:36,799
<font color="#E5E5E5">verifies only one slice</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the binary</font>

478
00:23:35,090 --> 00:23:39,199
potentially indicating success<font color="#E5E5E5"> without</font>

479
00:23:36,799 --> 00:23:41,149
testing all slices be aware that the

480
00:23:39,200 --> 00:23:42,980
slices<font color="#E5E5E5"> of a universal binary</font><font color="#CCCCCC"> don't have</font>

481
00:23:41,149 --> 00:23:47,239
to be<font color="#E5E5E5"> signed by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> same signer for</font><font color="#CCCCCC"> the</font>

482
00:23:42,980 --> 00:23:50,809
test<font color="#CCCCCC"> do</font><font color="#E5E5E5"> to pass one slice might be ad</font>

483
00:23:47,240 --> 00:23:52,700
<font color="#E5E5E5">hoc signed thank you but the</font><font color="#CCCCCC"> validity</font>

484
00:23:50,809 --> 00:23:54,799
check<font color="#E5E5E5"> doesn't know which slice you're</font>

485
00:23:52,700 --> 00:23:57,049
going to run<font color="#CCCCCC"> for example the user might</font>

486
00:23:54,799 --> 00:23:58,850
be using the arch command-line utility

487
00:23:57,049 --> 00:24:00,350
to pick a 32-bit architecture<font color="#CCCCCC"> even</font>

488
00:23:58,850 --> 00:24:03,469
though a 64-bit<font color="#E5E5E5"> architecture is</font>

489
00:24:00,350 --> 00:24:05,629
available in fact that flag alone is<font color="#E5E5E5"> not</font>

490
00:24:03,470 --> 00:24:08,870
good enough<font color="#E5E5E5"> they that</font><font color="#CCCCCC"> is also not</font>

491
00:24:05,630 --> 00:24:12,500
correct<font color="#E5E5E5"> but whatever so how do we do it</font>

492
00:24:08,870 --> 00:24:13,850
correctly<font color="#CCCCCC"> well so let's say your non</font>

493
00:24:12,500 --> 00:24:15,529
developer or you're just<font color="#CCCCCC"> doing things</font>

494
00:24:13,850 --> 00:24:18,289
<font color="#E5E5E5">via the command line</font><font color="#CCCCCC"> you got a bunch</font><font color="#E5E5E5"> of</font>

495
00:24:15,529 --> 00:24:20,059
bash scripts<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are you know helping</font>

496
00:24:18,289 --> 00:24:22,639
you out<font color="#CCCCCC"> that's what your</font><font color="#E5E5E5"> everybody just</font>

497
00:24:20,059 --> 00:24:23,940
uses bash scripts I guess so there's a

498
00:24:22,639 --> 00:24:27,389
couple<font color="#E5E5E5"> ways you can</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> it</font>

499
00:24:23,940 --> 00:24:30,719
<font color="#E5E5E5">code sign you can use</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> V's you can</font>

500
00:24:27,389 --> 00:24:34,529
use two V's<font color="#CCCCCC"> it's about the same if</font><font color="#E5E5E5"> you</font>

501
00:24:30,719 --> 00:24:35,759
<font color="#E5E5E5">look at the source and then you</font><font color="#CCCCCC"> got to</font>

502
00:24:34,529 --> 00:24:38,369
pass this what was called the

503
00:24:35,759 --> 00:24:42,059
requirement flag<font color="#CCCCCC"> and you just pass</font>

504
00:24:38,369 --> 00:24:44,158
anchor<font color="#CCCCCC"> Apple and then some app or you</font>

505
00:24:42,059 --> 00:24:47,249
can do a PID an actual<font color="#E5E5E5"> running process</font>

506
00:24:44,159 --> 00:24:48,599
and that's<font color="#CCCCCC"> a pretty good check if you</font>

507
00:24:47,249 --> 00:24:50,999
want to see what's going<font color="#E5E5E5"> on in your</font>

508
00:24:48,599 --> 00:24:53,099
current process list<font color="#E5E5E5"> now this that</font>

509
00:24:50,999 --> 00:24:57,779
anchor Apple only<font color="#E5E5E5"> checks for native</font>

510
00:24:53,099 --> 00:25:00,658
<font color="#E5E5E5">Apple applications okay so if you want</font>

511
00:24:57,779 --> 00:25:04,889
to<font color="#CCCCCC"> check to see if it</font><font color="#E5E5E5"> comes from</font><font color="#CCCCCC"> a Apple</font>

512
00:25:00,659 --> 00:25:07,199
cert<font color="#CCCCCC"> assign cert or you know Apple sign</font>

513
00:25:04,889 --> 00:25:10,228
developer cert<font color="#E5E5E5"> you do anchor</font><font color="#CCCCCC"> Apple</font>

514
00:25:07,199 --> 00:25:12,629
generic same concept<font color="#E5E5E5"> and then if you</font>

515
00:25:10,229 --> 00:25:14,519
want<font color="#E5E5E5"> an if the application is failing</font>

516
00:25:12,629 --> 00:25:16,708
<font color="#E5E5E5">and you want to kind</font><font color="#CCCCCC"> of figure out why</font>

517
00:25:14,519 --> 00:25:18,119
you can use<font color="#E5E5E5"> lipo and then you have the</font>

518
00:25:16,709 --> 00:25:22,529
thin command so you<font color="#E5E5E5"> can thin out your</font>

519
00:25:18,119 --> 00:25:27,599
fat file<font color="#CCCCCC"> and then you just check the</font>

520
00:25:22,529 --> 00:25:31,349
output<font color="#CCCCCC"> of that simple right</font><font color="#E5E5E5"> so on the</font>

521
00:25:27,599 --> 00:25:33,779
developer side<font color="#E5E5E5"> it depends how you want</font>

522
00:25:31,349 --> 00:25:35,879
to do is on what you want to<font color="#CCCCCC"> see</font><font color="#E5E5E5"> so</font>

523
00:25:33,779 --> 00:25:38,339
you're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use the sec requirement</font>

524
00:25:35,879 --> 00:25:41,339
create with string<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're gonna pass</font>

525
00:25:38,339 --> 00:25:42,690
<font color="#CCCCCC">anchor Apple or Anchor Apple generic and</font>

526
00:25:41,339 --> 00:25:44,849
you're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to take the</font><font color="#E5E5E5"> output of</font><font color="#CCCCCC"> that</font>

527
00:25:42,690 --> 00:25:47,219
and pass it to<font color="#CCCCCC"> sec static check code</font>

528
00:25:44,849 --> 00:25:48,509
validity with all of these flags enabled

529
00:25:47,219 --> 00:25:51,739
all of them

530
00:25:48,509 --> 00:25:56,849
<font color="#CCCCCC">I think that's every flag</font><font color="#E5E5E5"> may be</font>

531
00:25:51,739 --> 00:25:59,399
possible<font color="#E5E5E5"> for this and then then you may</font>

532
00:25:56,849 --> 00:26:01,678
have<font color="#CCCCCC"> to break it out even further to see</font>

533
00:25:59,399 --> 00:26:04,139
words<font color="#E5E5E5"> where it fails and I think</font><font color="#CCCCCC"> OS</font>

534
00:26:01,679 --> 00:26:06,839
query actually implemented that so they

535
00:26:04,139 --> 00:26:08,849
actually strip out every architecture<font color="#E5E5E5"> in</font>

536
00:26:06,839 --> 00:26:13,649
the fat file to<font color="#E5E5E5"> make sure that</font>

537
00:26:08,849 --> 00:26:17,039
everything is<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so yeah so</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a</font>

538
00:26:13,649 --> 00:26:18,988
pretty<font color="#E5E5E5"> simple process as far as</font>

539
00:26:17,039 --> 00:26:23,339
discovery<font color="#E5E5E5"> I've been wrestling around</font>

540
00:26:18,989 --> 00:26:24,719
with fat files for or signing for a

541
00:26:23,339 --> 00:26:28,440
little while

542
00:26:24,719 --> 00:26:31,589
reported this<font color="#E5E5E5"> issue back in 2015</font><font color="#CCCCCC"> this</font>

543
00:26:28,440 --> 00:26:35,399
was I<font color="#E5E5E5"> think June</font>

544
00:26:31,589 --> 00:26:36,539
it was a resource<font color="#E5E5E5"> error kind</font><font color="#CCCCCC"> of fun but</font>

545
00:26:35,399 --> 00:26:39,238
<font color="#E5E5E5">then I did a talk</font>

546
00:26:36,539 --> 00:26:40,799
schmuck<font color="#E5E5E5"> on in 2016 called hiding from</font>

547
00:26:39,239 --> 00:26:43,649
the investigator you could actually at

548
00:26:40,799 --> 00:26:46,079
the time<font color="#CCCCCC"> I think iOS 9</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> could take an</font>

549
00:26:43,649 --> 00:26:48,658
append<font color="#E5E5E5"> like a gig of data to an iOS</font>

550
00:26:46,079 --> 00:26:50,428
<font color="#E5E5E5">application uploaded to the phone via</font>

551
00:26:48,659 --> 00:26:52,619
<font color="#CCCCCC">iTunes walk around with</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> that data</font>

552
00:26:50,429 --> 00:26:54,269
your app<font color="#E5E5E5"> works fine and then</font><font color="#CCCCCC"> you know</font>

553
00:26:52,619 --> 00:26:56,849
let's say you're crossing<font color="#E5E5E5"> borders</font><font color="#CCCCCC"> then</font>

554
00:26:54,269 --> 00:26:58,379
you<font color="#E5E5E5"> could just pull the file down back</font>

555
00:26:56,849 --> 00:27:01,678
through iTunes and you have your data

556
00:26:58,379 --> 00:27:03,619
<font color="#E5E5E5">you're able</font><font color="#CCCCCC"> to smuggle</font><font color="#E5E5E5"> the data right</font><font color="#CCCCCC"> so</font>

557
00:27:01,679 --> 00:27:06,209
that's kind of<font color="#E5E5E5"> fun</font><font color="#CCCCCC"> kind of a fun talk</font>

558
00:27:03,619 --> 00:27:09,779
but what there<font color="#E5E5E5"> was during that during</font>

559
00:27:06,209 --> 00:27:11,009
that<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> I noticed that while</font><font color="#E5E5E5"> doing</font>

560
00:27:09,779 --> 00:27:15,089
research<font color="#CCCCCC"> on the talk I noticed that if</font>

561
00:27:11,009 --> 00:27:18,119
you<font color="#E5E5E5"> were to put a</font><font color="#CCCCCC"> single</font><font color="#E5E5E5"> knot in between</font>

562
00:27:15,089 --> 00:27:21,208
<font color="#CCCCCC">Macha binaries in the padding area of</font>

563
00:27:18,119 --> 00:27:23,849
the fat file you would get a error<font color="#E5E5E5"> it</font>

564
00:27:21,209 --> 00:27:25,319
just just something<font color="#E5E5E5"> wrong right wouldn't</font>

565
00:27:23,849 --> 00:27:29,639
<font color="#E5E5E5">tell you what it's</font><font color="#CCCCCC"> just an inter</font>

566
00:27:25,319 --> 00:27:32,849
internal error occurred<font color="#E5E5E5"> great so that</font>

567
00:27:29,639 --> 00:27:36,119
made<font color="#E5E5E5"> me want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look more into Universal</font>

568
00:27:32,849 --> 00:27:38,849
binaries or<font color="#E5E5E5"> fat binaries to see you know</font>

569
00:27:36,119 --> 00:27:40,619
what else I<font color="#CCCCCC"> could find and so I got</font>

570
00:27:38,849 --> 00:27:45,119
<font color="#E5E5E5">right on that and almost two years</font><font color="#CCCCCC"> later</font>

571
00:27:40,619 --> 00:27:46,649
I decided to<font color="#E5E5E5"> look at this again I was it</font>

572
00:27:45,119 --> 00:27:52,109
was you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> Christmas season everything</font>

573
00:27:46,649 --> 00:27:57,359
was slower and yeah so I took a<font color="#E5E5E5"> Perl</font>

574
00:27:52,109 --> 00:27:59,039
binary used<font color="#E5E5E5"> backdoor factory to infect</font>

575
00:27:57,359 --> 00:28:01,019
it and then I all I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> all I did was</font>

576
00:27:59,039 --> 00:28:02,879
append data to the end and you see<font color="#E5E5E5"> that</font>

577
00:28:01,019 --> 00:28:07,469
it fails<font color="#E5E5E5"> code signing strict checking</font>

578
00:28:02,879 --> 00:28:10,978
and<font color="#E5E5E5"> yeah I just I uploaded it to</font>

579
00:28:07,469 --> 00:28:14,069
virustotal and it came<font color="#CCCCCC"> back as valid and</font>

580
00:28:10,979 --> 00:28:15,359
I knew at that moment<font color="#E5E5E5"> that I number one</font>

581
00:28:14,069 --> 00:28:18,799
<font color="#E5E5E5">shouldn't have uploaded</font><font color="#CCCCCC"> at the</font>

582
00:28:15,359 --> 00:28:21,569
<font color="#CCCCCC">virustotal</font><font color="#E5E5E5"> because then everybody has it</font>

583
00:28:18,799 --> 00:28:25,349
<font color="#CCCCCC">but</font><font color="#E5E5E5"> I realized at that point that I'm</font>

584
00:28:21,569 --> 00:28:27,089
kind of on the right<font color="#CCCCCC"> track so being that</font>

585
00:28:25,349 --> 00:28:30,689
<font color="#CCCCCC">this was really important I put it off</font>

586
00:28:27,089 --> 00:28:32,639
until February 13th<font color="#CCCCCC"> most who must I know</font>

587
00:28:30,690 --> 00:28:35,699
what happened is I had<font color="#E5E5E5"> a kid and just</font>

588
00:28:32,639 --> 00:28:39,309
<font color="#E5E5E5">life got busy</font><font color="#CCCCCC"> so I finally got</font><font color="#E5E5E5"> around to</font>

589
00:28:35,699 --> 00:28:42,009
<font color="#CCCCCC">it around February 13th</font><font color="#E5E5E5"> and so</font>

590
00:28:39,309 --> 00:28:43,749
<font color="#E5E5E5">I'm back using lipo and I tried to put</font>

591
00:28:42,009 --> 00:28:46,480
<font color="#CCCCCC">two</font><font color="#E5E5E5"> I want to see what I could do with a</font>

592
00:28:43,749 --> 00:28:50,559
fat file format<font color="#E5E5E5"> and so I tried to put</font>

593
00:28:46,480 --> 00:28:54,070
two architectures<font color="#CCCCCC"> in the same fat binary</font>

594
00:28:50,559 --> 00:28:55,029
and I failed gloriously<font color="#CCCCCC"> it wouldn't let</font>

595
00:28:54,070 --> 00:28:57,549
<font color="#E5E5E5">me do it now</font>

596
00:28:55,029 --> 00:28:59,980
generally if I see something<font color="#CCCCCC"> like</font><font color="#E5E5E5"> this</font>

597
00:28:57,549 --> 00:29:03,720
like a safety feature in a program it

598
00:28:59,980 --> 00:29:05,289
makes me<font color="#E5E5E5"> question well what if I did</font><font color="#CCCCCC"> it</font>

599
00:29:03,720 --> 00:29:07,509
what happened

600
00:29:05,289 --> 00:29:12,090
so I manually created the fat file<font color="#E5E5E5"> and a</font>

601
00:29:07,509 --> 00:29:15,009
hex editor<font color="#E5E5E5"> and and then it goes it goes</font>

602
00:29:12,090 --> 00:29:17,320
<font color="#CCCCCC">execute and it failed so I'm like well</font>

603
00:29:15,009 --> 00:29:19,119
that's<font color="#E5E5E5"> not good</font><font color="#CCCCCC"> so then I</font><font color="#E5E5E5"> started</font>

604
00:29:17,320 --> 00:29:22,689
<font color="#E5E5E5">playing around like I started reading</font>

605
00:29:19,119 --> 00:29:25,990
source code<font color="#E5E5E5"> and I figured out that if I</font>

606
00:29:22,690 --> 00:29:30,190
could flip a bit on the<font color="#E5E5E5"> CPU types that</font>

607
00:29:25,990 --> 00:29:33,039
it might<font color="#E5E5E5"> execute and then I was able to</font>

608
00:29:30,190 --> 00:29:36,580
<font color="#E5E5E5">solve that</font><font color="#CCCCCC"> problem so then at that point</font>

609
00:29:33,039 --> 00:29:38,139
I knew<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> on to</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> and</font>

610
00:29:36,580 --> 00:29:41,139
didn't<font color="#E5E5E5"> take after after that it didn't</font>

611
00:29:38,139 --> 00:29:42,969
take long<font color="#E5E5E5"> to actually start by passing</font>

612
00:29:41,139 --> 00:29:46,840
<font color="#CCCCCC">through</font><font color="#E5E5E5"> third-party code signing checks</font>

613
00:29:42,970 --> 00:29:48,519
and after<font color="#E5E5E5"> that happened you you all saw</font>

614
00:29:46,840 --> 00:29:52,899
the results of<font color="#CCCCCC"> that at the</font><font color="#E5E5E5"> start of the</font>

615
00:29:48,519 --> 00:29:54,970
talk<font color="#E5E5E5"> so if that is my conclusion</font><font color="#CCCCCC"> to this</font>

616
00:29:52,899 --> 00:29:57,719
talk or at least at least<font color="#E5E5E5"> that's the how</font>

617
00:29:54,970 --> 00:30:00,820
I<font color="#E5E5E5"> discovered the bug in conclusion</font><font color="#CCCCCC"> I</font>

618
00:29:57,720 --> 00:30:04,389
really encourage<font color="#E5E5E5"> people to take a look</font>

619
00:30:00,820 --> 00:30:07,149
if you're into reading source code and

620
00:30:04,389 --> 00:30:09,459
and<font color="#E5E5E5"> reading</font><font color="#CCCCCC"> see I encourage people to</font>

621
00:30:07,149 --> 00:30:11,379
take more of a look<font color="#E5E5E5"> at code signing I</font>

622
00:30:09,460 --> 00:30:15,399
think that you could<font color="#CCCCCC"> actually find a lot</font>

623
00:30:11,379 --> 00:30:17,259
<font color="#CCCCCC">of bugs in the api's themselves those</font>

624
00:30:15,399 --> 00:30:20,018
<font color="#E5E5E5">that probably need to be</font><font color="#CCCCCC"> fuzz a</font><font color="#E5E5E5"> little</font>

625
00:30:17,259 --> 00:30:22,119
bit more and I believe that<font color="#CCCCCC"> these bugs</font>

626
00:30:20,019 --> 00:30:25,119
are<font color="#E5E5E5"> going to continue to</font><font color="#CCCCCC"> happen over and</font>

627
00:30:22,119 --> 00:30:28,168
<font color="#CCCCCC">over and over because</font><font color="#E5E5E5"> it's not being</font>

628
00:30:25,119 --> 00:30:32,168
fully addressed by the operating<font color="#E5E5E5"> system</font>

629
00:30:28,169 --> 00:30:33,940
<font color="#CCCCCC">maker and so I think</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> if you have a</font>

630
00:30:32,169 --> 00:30:35,669
product<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you run across</font><font color="#CCCCCC"> that does go</font>

631
00:30:33,940 --> 00:30:40,240
to signing checks you should take<font color="#E5E5E5"> these</font>

632
00:30:35,669 --> 00:30:42,309
binaries<font color="#E5E5E5"> and test it test it for sure</font>

633
00:30:40,240 --> 00:30:44,980
and there's the blog post if you<font color="#E5E5E5"> just</font>

634
00:30:42,309 --> 00:30:49,590
search I<font color="#CCCCCC"> can be</font><font color="#E5E5E5"> Apple you should be able</font>

635
00:30:44,980 --> 00:30:49,590
<font color="#E5E5E5">to find it but any questions</font>

636
00:30:51,090 --> 00:31:05,080
anything at all no because<font color="#CCCCCC"> iOS so I it</font>

637
00:31:00,369 --> 00:31:07,629
has I forgot the<font color="#E5E5E5"> there's a there's a sis</font>

638
00:31:05,080 --> 00:31:11,139
control that you<font color="#E5E5E5"> can use on Mac that</font>

639
00:31:07,629 --> 00:31:14,978
actually enforces its its OS wide

640
00:31:11,139 --> 00:31:16,869
co-signing checks and if this is

641
00:31:14,979 --> 00:31:22,109
automatically compiled into the kernel

642
00:31:16,869 --> 00:31:24,609
<font color="#E5E5E5">on iOS so it doesn't</font><font color="#CCCCCC"> work on iOS I</font>

643
00:31:22,109 --> 00:31:32,249
forgot<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I just can't</font><font color="#CCCCCC"> remember this</font><font color="#E5E5E5"> -</font>

644
00:31:24,609 --> 00:31:34,389
<font color="#CCCCCC">scoffs off my head any other questions</font>

645
00:31:32,249 --> 00:31:39,190
<font color="#E5E5E5">all right well thank you for your time</font>

646
00:31:34,389 --> 00:31:42,059
yep<font color="#E5E5E5"> actually I don't think so I think</font>

647
00:31:39,190 --> 00:31:44,710
<font color="#CCCCCC">PCs are better</font><font color="#E5E5E5"> actually the mitigation</font><font color="#CCCCCC"> I</font>

648
00:31:42,059 --> 00:31:46,960
did a talk on a met last summer<font color="#CCCCCC"> DEFCON</font>

649
00:31:44,710 --> 00:31:49,059
and I was bypassing<font color="#CCCCCC"> he met and and they</font>

650
00:31:46,960 --> 00:31:53,919
fixed<font color="#CCCCCC"> it and I</font><font color="#E5E5E5"> bypass their fixes and</font>

651
00:31:49,059 --> 00:31:56,529
they<font color="#CCCCCC"> map Windows 10 is gone is blown</font>

652
00:31:53,919 --> 00:31:58,149
back out of<font color="#E5E5E5"> the water as far as</font><font color="#CCCCCC"> security</font>

653
00:31:56,529 --> 00:32:01,479
<font color="#E5E5E5">mitigations it's not even they're not</font>

654
00:31:58,149 --> 00:32:04,988
even the<font color="#CCCCCC"> same realm</font><font color="#E5E5E5"> anymore</font>

655
00:32:01,479 --> 00:32:06,659
any other questions<font color="#E5E5E5"> all right</font><font color="#CCCCCC"> well thank</font>

656
00:32:04,989 --> 00:32:11,219
<font color="#CCCCCC">you</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> your time thanks for thanks for</font>

657
00:32:06,659 --> 00:32:11,219
Chaka Khan<font color="#E5E5E5"> putting this on</font>

