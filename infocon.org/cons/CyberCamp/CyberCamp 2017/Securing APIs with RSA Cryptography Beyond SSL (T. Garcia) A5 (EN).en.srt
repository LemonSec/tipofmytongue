1
00:00:17,490 --> 00:00:24,659
then all our estar

2
00:00:21,240 --> 00:00:31,189
afternoon I'm going to tell you about an

3
00:00:24,660 --> 00:00:38,400
initiative that we had in Madrid

4
00:00:31,189 --> 00:00:45,410
singular porque well for the project we

5
00:00:38,400 --> 00:00:45,410
carry carried out with api's with

6
00:00:45,890 --> 00:01:06,720
cryptography and signature strategies we

7
00:01:00,680 --> 00:01:12,930
used before but techniques that made

8
00:01:06,720 --> 00:01:17,549
deployment much more complex much more

9
00:01:12,930 --> 00:01:21,810
insecure and e-signature has simplified

10
00:01:17,549 --> 00:01:25,429
all this deployment tremendously and I'd

11
00:01:21,810 --> 00:01:30,119
like to begin with an introduction to

12
00:01:25,429 --> 00:01:34,789
e-signature everything is based on two

13
00:01:30,119 --> 00:01:37,369
things first of all the key the

14
00:01:34,789 --> 00:01:40,429
passwords

15
00:01:37,369 --> 00:01:45,170
here we have a private and a public

16
00:01:40,429 --> 00:01:45,170
password that are interchangeable

17
00:01:46,340 --> 00:02:01,850
everything that could encoded with

18
00:01:51,740 --> 00:02:01,850
password is decoded with another one

19
00:02:08,690 --> 00:02:15,810
there are two characteristics here and

20
00:02:12,420 --> 00:02:19,530
these were these two passwords if I keep

21
00:02:15,810 --> 00:02:21,959
one for me and I make the other one

22
00:02:19,530 --> 00:02:24,330
public letting everybody know that it's

23
00:02:21,959 --> 00:02:30,410
mine if somebody in Kurds something with

24
00:02:24,330 --> 00:02:34,490
my signature only I will be able to dick

25
00:02:30,410 --> 00:02:39,320
to encrypt it

26
00:02:34,490 --> 00:02:47,810
for instance the triple G's this is how

27
00:02:39,320 --> 00:02:51,829
the ein has encrypted bank or credit

28
00:02:47,810 --> 00:02:54,380
card for instance or account this has to

29
00:02:51,830 --> 00:02:58,280
be distributed through all the ATMs in

30
00:02:54,380 --> 00:03:02,120
this country so that when I use the card

31
00:02:58,280 --> 00:03:03,860
and I put in my PA n number this must

32
00:03:02,120 --> 00:03:09,250
correspond to the one that's been

33
00:03:03,860 --> 00:03:13,220
encrypted with in the magnetic band

34
00:03:09,250 --> 00:03:19,760
whenever something fails the whole

35
00:03:13,220 --> 00:03:22,360
system fails a symmetric encrypting or

36
00:03:19,760 --> 00:03:32,329
cryptography solves the problem of

37
00:03:22,360 --> 00:03:35,780
password distribution the problem of a

38
00:03:32,330 --> 00:03:38,120
secret password or a custody or

39
00:03:35,780 --> 00:03:40,760
something that or for instance the

40
00:03:38,120 --> 00:03:42,230
blockchain thing some people don't know

41
00:03:40,760 --> 00:03:44,540
what to do with them because they're

42
00:03:42,230 --> 00:03:49,340
very afraid of losing them but if we

43
00:03:44,540 --> 00:03:53,390
change this that is if I encrypt

44
00:03:49,340 --> 00:03:57,470
something with my private password

45
00:03:53,390 --> 00:04:03,260
everybody will be able to encrypt it

46
00:03:57,470 --> 00:04:05,269
with public password and this public one

47
00:04:03,260 --> 00:04:07,670
needs to have been encrypted with my

48
00:04:05,269 --> 00:04:10,130
private one and it's an operation that

49
00:04:07,670 --> 00:04:12,708
only I can do it and this is what the

50
00:04:10,130 --> 00:04:16,010
concept of signature comes in place if

51
00:04:12,709 --> 00:04:19,690
it's an operation that only I can do and

52
00:04:16,010 --> 00:04:22,690
if everybody can check that I've done it

53
00:04:19,690 --> 00:04:26,090
they can check that it's my signature

54
00:04:22,690 --> 00:04:28,580
this is something that only I can did

55
00:04:26,090 --> 00:04:30,770
nobody can copy it and it's this is it's

56
00:04:28,580 --> 00:04:36,599
easy to verify that my signature is my

57
00:04:30,770 --> 00:04:41,900
signature by any outside observer

58
00:04:36,600 --> 00:04:46,890
America and then we have another concept

59
00:04:41,900 --> 00:04:50,969
and that is the digital print the

60
00:04:46,890 --> 00:04:55,110
digital print something was referred to

61
00:04:50,970 --> 00:05:00,020
as a digital signature in the police by

62
00:04:55,110 --> 00:05:08,580
the police forces this is a larger

63
00:05:00,020 --> 00:05:16,560
figure up to 212 bytes and this is for

64
00:05:08,580 --> 00:05:19,050
instance the letter in the ID card for

65
00:05:16,560 --> 00:05:23,700
instance the good thing about algorithms

66
00:05:19,050 --> 00:05:27,600
in digital footprint for instance if I

67
00:05:23,700 --> 00:05:31,409
have one of these footprints that

68
00:05:27,600 --> 00:05:36,030
corresponds to a binary of certain Megas

69
00:05:31,410 --> 00:05:39,210
or 500 500 of but I can not generate a

70
00:05:36,030 --> 00:05:41,549
binary that will have this print this is

71
00:05:39,210 --> 00:05:44,719
something that's due to mathematical

72
00:05:41,550 --> 00:05:49,500
complexity the first algorithms of

73
00:05:44,720 --> 00:05:56,850
digital Footwear that foot print print

74
00:05:49,500 --> 00:06:00,660
that were used through a given CRC you

75
00:05:56,850 --> 00:06:04,160
can generate binary with this as CRC the

76
00:06:00,660 --> 00:06:09,060
algorithms that were mentioned before

77
00:06:04,160 --> 00:06:14,270
maxilla md5 were used with SSL I don't

78
00:06:09,060 --> 00:06:18,600
have internet explorer 5 or the 90s that

79
00:06:14,270 --> 00:06:24,359
the past and now we use the algorithms

80
00:06:18,600 --> 00:06:33,600
that belong to a sh a algorithms sha-1

81
00:06:24,360 --> 00:06:38,390
or broken a few years ago we use the sh2

82
00:06:33,600 --> 00:06:38,390
family and this is

83
00:06:44,130 --> 00:06:52,840
this is not a security problem and then

84
00:06:47,710 --> 00:06:57,909
we are working on the sha-3 family the

85
00:06:52,840 --> 00:07:01,450
sha-2 given length of the print the

86
00:06:57,910 --> 00:07:05,260
longer the print this is not much more

87
00:07:01,450 --> 00:07:08,890
secure the national security scheme

88
00:07:05,260 --> 00:07:10,840
which is a series of rules in Spain that

89
00:07:08,890 --> 00:07:18,210
says the minimum standards that have

90
00:07:10,840 --> 00:07:27,549
been met for have to be met for security

91
00:07:18,210 --> 00:07:32,700
speak of a given amount of but if we

92
00:07:27,550 --> 00:07:35,860
combine the digital print where the

93
00:07:32,700 --> 00:07:38,289
e-signature we get a couple of very

94
00:07:35,860 --> 00:07:41,380
interesting things only I have the

95
00:07:38,290 --> 00:07:48,480
private password and only I can do

96
00:07:41,380 --> 00:07:48,480
transactions with the private password

97
00:07:51,990 --> 00:07:59,730
the private password if somebody has

98
00:07:55,630 --> 00:07:59,730
done something with it it must be me

99
00:08:05,610 --> 00:08:12,250
encryption and I encrypt the digital

100
00:08:09,730 --> 00:08:14,140
print of a document since this print

101
00:08:12,250 --> 00:08:15,730
corresponds to a single document and

102
00:08:14,140 --> 00:08:18,490
from the print I cannot generate a

103
00:08:15,730 --> 00:08:21,160
document with the presence of logarithms

104
00:08:18,490 --> 00:08:23,860
or algorithms this means that this

105
00:08:21,160 --> 00:08:27,520
signature corresponds to one single one

106
00:08:23,860 --> 00:08:30,010
so document just like my signature that

107
00:08:27,520 --> 00:08:31,750
I put on a document and I cannot remove

108
00:08:30,010 --> 00:08:33,549
it and put it in a different one because

109
00:08:31,750 --> 00:08:38,830
it's going to be on paper and I'm not

110
00:08:33,549 --> 00:08:43,569
move it around same thing here that the

111
00:08:38,830 --> 00:08:45,850
print is related to the signature and

112
00:08:43,570 --> 00:08:48,240
the print is related or linked to the

113
00:08:45,850 --> 00:08:51,880
document because it's corresponds to it

114
00:08:48,240 --> 00:08:55,510
the print corresponds to one document of

115
00:08:51,880 --> 00:08:59,110
the document is as lightly modified the

116
00:08:55,510 --> 00:09:01,660
digital print also changes thus we

117
00:08:59,110 --> 00:09:03,160
ensure the integrity of a document if a

118
00:09:01,660 --> 00:09:05,620
document comes to me and it's been

119
00:09:03,160 --> 00:09:09,730
signed I can be sure that this document

120
00:09:05,620 --> 00:09:13,180
hasn't been modified so with some simple

121
00:09:09,730 --> 00:09:16,120
operations we've achieved two things the

122
00:09:13,180 --> 00:09:18,729
lack of repudiation of operations and

123
00:09:16,120 --> 00:09:23,410
the integrity of the message we signed

124
00:09:18,730 --> 00:09:26,110
and we are sending this translated into

125
00:09:23,410 --> 00:09:30,880
API is very interesting because this is

126
00:09:26,110 --> 00:09:35,290
not just to identify the signee or the

127
00:09:30,880 --> 00:09:42,689
person who puts the signature owns the

128
00:09:35,290 --> 00:09:45,189
signature private password bird here

129
00:09:42,690 --> 00:09:47,170
here we cannot ensure the integrity of

130
00:09:45,190 --> 00:09:49,630
the message the message may have been

131
00:09:47,170 --> 00:09:55,229
modified and if we have the electronic

132
00:09:49,630 --> 00:09:55,230
signature we control the identity of the

133
00:09:55,560 --> 00:10:02,199
the one who originally the message and

134
00:09:58,630 --> 00:10:05,760
the integrity of a message per se this

135
00:10:02,200 --> 00:10:08,620
taken taken to the world of certificates

136
00:10:05,760 --> 00:10:11,529
can generate a couple of passwords and

137
00:10:08,620 --> 00:10:16,170
this is not a problem normally we've

138
00:10:11,529 --> 00:10:22,510
resorted to to sort of certification

139
00:10:16,170 --> 00:10:25,319
service supplier provider being

140
00:10:22,510 --> 00:10:30,959
Catalonia senpai in the Basque Country

141
00:10:25,320 --> 00:10:37,360
etc and the Ministry of

142
00:10:30,959 --> 00:10:43,388
tourism all the digital general somebody

143
00:10:37,360 --> 00:10:48,540
tells us which institutions can issue

144
00:10:43,389 --> 00:10:52,690
certificates public password private pub

145
00:10:48,540 --> 00:10:53,980
password Russell says who these data

146
00:10:52,690 --> 00:10:56,709
belong to you and this is something

147
00:10:53,980 --> 00:11:00,160
that's been verified in a register when

148
00:10:56,709 --> 00:11:03,069
I have a register where the name that

149
00:11:00,160 --> 00:11:07,689
says one español español and which has

150
00:11:03,069 --> 00:11:09,819
been issued by this is by a notary

151
00:11:07,690 --> 00:11:13,120
public well this means that the person

152
00:11:09,819 --> 00:11:20,229
who obtained this certificate went to an

153
00:11:13,120 --> 00:11:23,829
office showed his ID and controller made

154
00:11:20,230 --> 00:11:27,190
sure that he is you see he says he is

155
00:11:23,829 --> 00:11:32,050
and issues the certificates when I say

156
00:11:27,190 --> 00:11:36,389
that it's me that I am I what I reef or

157
00:11:32,050 --> 00:11:43,769
I mean is the identity as the

158
00:11:36,389 --> 00:11:49,230
identity Spanish identity that is I have

159
00:11:43,769 --> 00:11:53,470
ID on paper that says that I am Tomas

160
00:11:49,230 --> 00:11:56,139
because this is issued by the Spanish

161
00:11:53,470 --> 00:11:58,089
police this certificate says that this

162
00:11:56,139 --> 00:12:00,519
is mine because there's an authority

163
00:11:58,089 --> 00:12:02,980
who's verifying my identity with my

164
00:12:00,519 --> 00:12:05,980
passwords apart from this this

165
00:12:02,980 --> 00:12:09,040
certificate that contains my passwords

166
00:12:05,980 --> 00:12:11,290
and my public and private passwords has

167
00:12:09,040 --> 00:12:15,670
been signed by the institution that

168
00:12:11,290 --> 00:12:22,120
issues it so I can check Tomas has this

169
00:12:15,670 --> 00:12:24,880
public password because this certificate

170
00:12:22,120 --> 00:12:30,899
has been signed by the national police

171
00:12:24,880 --> 00:12:30,899
force issues that I trust

172
00:12:38,850 --> 00:12:42,850
certificate rhymes to me apart from it

173
00:12:42,009 --> 00:12:47,370
being signed

174
00:12:42,850 --> 00:12:47,370
I can check whether this is valid or not

175
00:12:50,819 --> 00:13:09,248
call the institution say listen lost it

176
00:12:56,290 --> 00:13:19,719
so this certificate is say no it's been

177
00:13:09,249 --> 00:13:24,160
cancelled all certificates suffer this

178
00:13:19,720 --> 00:13:26,499
vulnerability have been cancelled even

179
00:13:24,160 --> 00:13:36,699
though they have been signed by the

180
00:13:26,499 --> 00:13:39,490
National the police is this serial

181
00:13:36,699 --> 00:13:42,839
number valid or not and they'll say no

182
00:13:39,490 --> 00:13:46,149
so we've set up a very comfortable

183
00:13:42,839 --> 00:13:49,930
confidence or trust structure because it

184
00:13:46,149 --> 00:13:58,769
allows us to verify whose originating a

185
00:13:49,930 --> 00:13:58,769
message and this is whether it's legal

186
00:14:04,199 --> 00:14:16,779
personal we said about the integrity of

187
00:14:13,600 --> 00:14:24,209
messages another concept that I'd like

188
00:14:16,779 --> 00:14:24,209
to introduce here is digital software

189
00:14:25,319 --> 00:14:30,040
the concept of signature that I

190
00:14:28,660 --> 00:14:34,600
mentioned before we spoke about

191
00:14:30,040 --> 00:14:37,990
encrypting a digital print and a whole

192
00:14:34,600 --> 00:14:39,790
document symmetric cryptography is

193
00:14:37,990 --> 00:14:43,180
extremely cost where from

194
00:14:39,790 --> 00:14:47,670
point of view hardware if the 15 mega

195
00:14:43,180 --> 00:14:54,609
PDF can't mass to me I cannot encrypt a

196
00:14:47,670 --> 00:14:58,360
50 mega document because it is too heavy

197
00:14:54,610 --> 00:15:01,360
for the computer so there's quite a good

198
00:14:58,360 --> 00:15:05,790
solutions which is the digital envelope

199
00:15:01,360 --> 00:15:18,070
so I randomly generate a symmetric

200
00:15:05,790 --> 00:15:22,199
password key a symmetric but give

201
00:15:18,070 --> 00:15:22,200
somebody the password one saying listen

202
00:15:22,920 --> 00:15:31,390
decode this with this password know what

203
00:15:27,370 --> 00:15:34,150
I do is encrypt this password with the

204
00:15:31,390 --> 00:15:39,490
public passwords word message

205
00:15:34,150 --> 00:15:45,490
yes to this person I can encrypt it

206
00:15:39,490 --> 00:15:51,210
he encrypted it's a single use and this

207
00:15:45,490 --> 00:15:51,210
password is not going to be used again

208
00:15:53,280 --> 00:16:00,579
so we have quite a good combination of

209
00:15:57,540 --> 00:16:03,250
symmetric cryptography and asymmetric

210
00:16:00,580 --> 00:16:07,420
cryptography and there's an advantage

211
00:16:03,250 --> 00:16:14,850
and that is that a digital envelope one

212
00:16:07,420 --> 00:16:14,849
could pay pkcs7 and there may be

213
00:16:27,390 --> 00:16:35,010
it may be more than one a recipient I

214
00:16:29,610 --> 00:16:39,839
can send the different passwords in an

215
00:16:35,010 --> 00:16:43,769
envelope and the message with several

216
00:16:39,839 --> 00:16:47,370
recipients and I can also assign the

217
00:16:43,769 --> 00:16:51,570
whole message because the envelope I can

218
00:16:47,370 --> 00:16:53,820
generate a print and encrypt but print

219
00:16:51,570 --> 00:16:58,050
with my private password so that the

220
00:16:53,820 --> 00:17:00,600
message will be encrypted for some

221
00:16:58,050 --> 00:17:02,550
specific recipients and each one of them

222
00:17:00,600 --> 00:17:04,470
will control this with their password

223
00:17:02,550 --> 00:17:07,109
and they'll know that it comes from me

224
00:17:04,470 --> 00:17:09,929
because there's been signed by me so

225
00:17:07,109 --> 00:17:16,919
we've covered the whole cycle we can

226
00:17:09,929 --> 00:17:21,689
define the recipients and we can say who

227
00:17:16,920 --> 00:17:23,550
the sender is the message originated we

228
00:17:21,689 --> 00:17:26,610
control the integrity of the message

229
00:17:23,550 --> 00:17:29,610
that are hasn't been modified along the

230
00:17:26,609 --> 00:17:33,959
way and also the confidentiality of the

231
00:17:29,610 --> 00:17:38,639
message that's been encrypted from the

232
00:17:33,960 --> 00:17:43,980
beginning and this antenna Sahib for

233
00:17:38,640 --> 00:17:45,809
Solano's knows women and before we go

234
00:17:43,980 --> 00:17:50,520
and I'd like to say that the more

235
00:17:45,809 --> 00:18:03,980
broadly used the algorithms are yes

236
00:17:50,520 --> 00:18:10,740
never say DSA is no longer used MD - md5

237
00:18:03,980 --> 00:18:14,419
sha-1 m's the digital print algorithms

238
00:18:10,740 --> 00:18:21,270
that are used right now are the sh2

239
00:18:14,419 --> 00:18:26,809
family sha-2 - for etc and the future

240
00:18:21,270 --> 00:18:29,690
ones are sha-3 that being prepared

241
00:18:26,809 --> 00:18:33,100
elliptical algorithms for instance

242
00:18:29,690 --> 00:18:38,409
coming and will be here soon

243
00:18:33,100 --> 00:18:43,709
Emily knows many empty empty - md5 sha-1

244
00:18:38,409 --> 00:18:43,710
are obsolete as I said before because

245
00:18:47,009 --> 00:18:58,539
when they allow you to have them in the

246
00:18:53,159 --> 00:19:06,850
protocols president was we have sha-2

247
00:18:58,539 --> 00:19:17,070
family nobody use them there's more

248
00:19:06,850 --> 00:19:20,918
vulnerable recommend using sha-512 and

249
00:19:17,070 --> 00:19:23,168
sha-3 is being created right now there

250
00:19:20,919 --> 00:19:26,799
was a tendency presented several

251
00:19:23,169 --> 00:19:34,289
algorithms and the one who wins is

252
00:19:26,799 --> 00:19:34,289
called sha-3 there's IBM and others

253
00:19:35,669 --> 00:19:45,070
participating in the tender and who can

254
00:19:38,649 --> 00:19:49,719
issue these certificates here we have in

255
00:19:45,070 --> 00:19:52,658
National Police Social Security but also

256
00:19:49,720 --> 00:20:01,600
private companies like Bank of Santander

257
00:19:52,659 --> 00:20:05,019
and symmetric encryption algorithms is

258
00:20:01,600 --> 00:20:08,139
obsolete it was used in the banks in the

259
00:20:05,019 --> 00:20:18,940
80s it was a cracked with a machine

260
00:20:08,139 --> 00:20:23,729
called G crack this made the whole

261
00:20:18,940 --> 00:20:23,730
banking sector to create a new algorithm

262
00:20:24,610 --> 00:20:30,409
with co-hosts raised low passes primero

263
00:20:27,800 --> 00:20:32,930
you know lo troll otro acabas de decir

264
00:20:30,410 --> 00:20:38,900
la la compra de y el que esto Santa or

265
00:20:32,930 --> 00:20:41,990
essa and the one is used now is a yes la

266
00:20:38,900 --> 00:20:44,750
film electronica tyrannous peculiar

267
00:20:41,990 --> 00:20:49,070
areas particular la electronic signature

268
00:20:44,750 --> 00:20:51,740
has certain peculiarities the earth as a

269
00:20:49,070 --> 00:20:54,710
key doesn't give us information about

270
00:20:51,740 --> 00:20:57,470
who make the signature when you create

271
00:20:54,710 --> 00:21:01,550
your electronic signature you don't use

272
00:20:57,470 --> 00:21:03,920
your encoded signature only you include

273
00:21:01,550 --> 00:21:07,730
certain metadata for example my

274
00:21:03,920 --> 00:21:16,460
certificate with the public key where I

275
00:21:07,730 --> 00:21:22,940
signed it why I signed it these encoding

276
00:21:16,460 --> 00:21:26,980
algorithm are usually called BC k1 this

277
00:21:22,940 --> 00:21:33,530
is used in order to create the ad

278
00:21:26,980 --> 00:21:39,080
standards advanced electronic signature

279
00:21:33,530 --> 00:21:44,420
we have si es si a DES which is based on

280
00:21:39,080 --> 00:21:49,909
a s and one which is a binary system and

281
00:21:44,420 --> 00:21:55,490
then P a des which is C a DES within a

282
00:21:49,910 --> 00:22:01,070
PDF file these formats are european

283
00:21:55,490 --> 00:22:06,350
standard and the american standard CA

284
00:22:01,070 --> 00:22:10,090
des CMS and pa des is PDF as far as I

285
00:22:06,350 --> 00:22:10,090
know it doesn't have a particular name

286
00:22:10,930 --> 00:22:19,010
today so we have this infrastructure for

287
00:22:16,160 --> 00:22:23,810
the electronic signature and why are we

288
00:22:19,010 --> 00:22:27,170
interested in replacing SSL for this SSL

289
00:22:23,810 --> 00:22:30,320
uses certificates it's the same thing in

290
00:22:27,170 --> 00:22:31,660
the insides but there are several

291
00:22:30,320 --> 00:22:36,340
problems

292
00:22:31,660 --> 00:22:39,640
to it the ssl we use every day is the

293
00:22:36,340 --> 00:22:45,399
server as a spell i go into google and

294
00:22:39,640 --> 00:22:47,920
the bar there is a lock if i click on it

295
00:22:45,400 --> 00:22:51,640
it says that this is a google web site

296
00:22:47,920 --> 00:22:53,800
because this has been established via

297
00:22:51,640 --> 00:22:58,800
electronic signature and then very

298
00:22:53,800 --> 00:23:01,419
ziying says that Google is Google I know

299
00:22:58,800 --> 00:23:04,629
like this that Google is no other thing

300
00:23:01,420 --> 00:23:08,530
but Google then we have the SS l

301
00:23:04,630 --> 00:23:12,310
function that requests a certificate

302
00:23:08,530 --> 00:23:15,760
from the client as well if you go to the

303
00:23:12,310 --> 00:23:19,210
tax authorities website you are asks for

304
00:23:15,760 --> 00:23:21,870
a client certificate in this case we are

305
00:23:19,210 --> 00:23:26,050
using electronic signature digital

306
00:23:21,870 --> 00:23:30,040
fingerprints and a series of codes in

307
00:23:26,050 --> 00:23:33,100
order to cipher the transport in HTTP

308
00:23:30,040 --> 00:23:35,050
and this guarantee is exactly the same

309
00:23:33,100 --> 00:23:36,909
thing as the electronic signature there

310
00:23:35,050 --> 00:23:40,800
are several problems regarding this

311
00:23:36,910 --> 00:23:47,940
first of all transport transportation

312
00:23:40,800 --> 00:23:50,879
SSL runs below HTTP this means that my

313
00:23:47,940 --> 00:23:54,310
application doesn't allow me to control

314
00:23:50,880 --> 00:23:58,060
SSL I can control the web server and

315
00:23:54,310 --> 00:24:01,780
what I can do is have the where this the

316
00:23:58,060 --> 00:24:05,320
web server passing certain information

317
00:24:01,780 --> 00:24:08,700
to my application in case of web traffic

318
00:24:05,320 --> 00:24:13,030
that is I can use an Apache for a front

319
00:24:08,700 --> 00:24:13,990
that can end up by sending me the data I

320
00:24:13,030 --> 00:24:17,470
lose control

321
00:24:13,990 --> 00:24:19,600
I cannot tell which certificates and

322
00:24:17,470 --> 00:24:23,800
what I want and which I don't want it is

323
00:24:19,600 --> 00:24:29,379
extremely annoying anyway I may be

324
00:24:23,800 --> 00:24:31,360
interested in relinquishes security in

325
00:24:29,380 --> 00:24:33,970
terms of transportation and using

326
00:24:31,360 --> 00:24:35,409
security for application on the applet

327
00:24:33,970 --> 00:24:38,160
for the application on the application

328
00:24:35,410 --> 00:24:38,160
level so to say

329
00:24:40,000 --> 00:24:49,680
with this I gained legal support SSL has

330
00:24:44,950 --> 00:24:52,420
electronic signatures underneath RSA

331
00:24:49,680 --> 00:24:55,870
certificates and digital finger trims

332
00:24:52,420 --> 00:24:59,290
but if I use electronic signatures from

333
00:24:55,870 --> 00:25:00,669
my application I can do that according

334
00:24:59,290 --> 00:25:05,620
to the law

335
00:25:00,670 --> 00:25:09,100
59 / 2003 transactions can have a legal

336
00:25:05,620 --> 00:25:12,459
value that may be interesting for me at

337
00:25:09,100 --> 00:25:19,899
a certain stage the application we

338
00:25:12,460 --> 00:25:23,440
created for the Spanish Mint intended

339
00:25:19,900 --> 00:25:28,200
that well the goal was that the spanish

340
00:25:23,440 --> 00:25:30,460
mint would issue certificates that would

341
00:25:28,200 --> 00:25:36,270
classify people in a certain

342
00:25:30,460 --> 00:25:40,870
registration status I don't want to

343
00:25:36,270 --> 00:25:45,220
specify which registry it was but I'm

344
00:25:40,870 --> 00:25:46,899
not allowed to well it was let's

345
00:25:45,220 --> 00:25:48,940
simplify the example I have a

346
00:25:46,900 --> 00:25:51,550
certificate saying I own a house and

347
00:25:48,940 --> 00:25:55,270
this is certified by the Spanish mint

348
00:25:51,550 --> 00:25:58,110
and this is a legal document but if the

349
00:25:55,270 --> 00:26:01,930
spanish mint knows that i own a house

350
00:25:58,110 --> 00:26:05,080
the spanish mint is interested that this

351
00:26:01,930 --> 00:26:07,420
certification is also signed because if

352
00:26:05,080 --> 00:26:12,520
it turns out that i don't own the house

353
00:26:07,420 --> 00:26:14,320
that is a legal evidence because in the

354
00:26:12,520 --> 00:26:16,629
end of the day it is the the character

355
00:26:14,320 --> 00:26:25,840
the register that certifies that i

356
00:26:16,630 --> 00:26:29,470
really own that house so these spanish

357
00:26:25,840 --> 00:26:33,100
mints has a request from the registry

358
00:26:29,470 --> 00:26:35,770
requiring the signature in the past we

359
00:26:33,100 --> 00:26:40,120
used to go to an artery with a notary

360
00:26:35,770 --> 00:26:42,960
deed and the notary with sign that this

361
00:26:40,120 --> 00:26:49,000
was so on there were also property

362
00:26:42,960 --> 00:26:52,870
registers remember well if you buy or

363
00:26:49,000 --> 00:26:54,210
sell a real estate property you go to

364
00:26:52,870 --> 00:27:00,369
the red

365
00:26:54,210 --> 00:27:03,999
and you obtain a certificate with a

366
00:27:00,369 --> 00:27:07,480
traditional stamp and signed by somebody

367
00:27:03,999 --> 00:27:11,590
saying that this is so but if I need to

368
00:27:07,480 --> 00:27:13,769
know through API that a certain real

369
00:27:11,590 --> 00:27:22,090
state property doesn't have any

370
00:27:13,769 --> 00:27:25,149
encumbrances if I am in trouble I can go

371
00:27:22,090 --> 00:27:27,789
to the judge and said this a IP came

372
00:27:25,149 --> 00:27:29,619
from this institution and it has a

373
00:27:27,789 --> 00:27:31,239
signature then this is something

374
00:27:29,619 --> 00:27:33,459
extremely important

375
00:27:31,239 --> 00:27:34,749
come on demo system okay Sammy look at

376
00:27:33,460 --> 00:27:36,609
how do we do this

377
00:27:34,749 --> 00:27:40,529
this is something that I'm interested in

378
00:27:36,609 --> 00:27:44,230
I was surprised too because we'd be

379
00:27:40,529 --> 00:27:46,389
trying out this electronic signature for

380
00:27:44,230 --> 00:27:50,789
a long time they took us very little to

381
00:27:46,389 --> 00:27:54,248
set it up we have a couple of projects

382
00:27:50,789 --> 00:27:58,359
that solve that do everything for us and

383
00:27:54,249 --> 00:28:00,840
this is in G hub and this is something

384
00:27:58,359 --> 00:28:03,129
we use with public administration a

385
00:28:00,840 --> 00:28:09,820
McGarrett emulation application code you

386
00:28:03,129 --> 00:28:12,158
have Melissa my brains are well we find

387
00:28:09,820 --> 00:28:14,830
that people find it extremely difficult

388
00:28:12,159 --> 00:28:18,639
you can go into a town council in order

389
00:28:14,830 --> 00:28:23,590
to get our residence permit or

390
00:28:18,639 --> 00:28:26,459
certificate or whatever very difficult

391
00:28:23,590 --> 00:28:30,699
to use even though web applications have

392
00:28:26,460 --> 00:28:33,789
problems well I must say that libraries

393
00:28:30,700 --> 00:28:37,080
are extremely stable and they are

394
00:28:33,789 --> 00:28:40,658
audited every year by the National

395
00:28:37,080 --> 00:28:45,279
Center in order to make sure that there

396
00:28:40,659 --> 00:28:47,350
is no security breach that everything is

397
00:28:45,279 --> 00:28:53,760
secure

398
00:28:47,350 --> 00:28:58,379
and and this works practically with any

399
00:28:53,760 --> 00:29:01,390
operating system it's a very stable Java

400
00:28:58,380 --> 00:29:05,080
Android lacks some of these things but

401
00:29:01,390 --> 00:29:12,880
this works with Windows Mac Solaris etc

402
00:29:05,080 --> 00:29:16,659
and and we have it with Java 7 buddy

403
00:29:12,880 --> 00:29:20,860
uses Java 6 anymore and I'm going to

404
00:29:16,660 --> 00:29:23,760
show you an example and later on I'll

405
00:29:20,860 --> 00:29:25,870
try to upload them to github if

406
00:29:23,760 --> 00:29:28,780
anybody's interested so we're gonna be

407
00:29:25,870 --> 00:29:33,310
working with XML it's every standard way

408
00:29:28,780 --> 00:29:37,330
to send message messages the signature

409
00:29:33,310 --> 00:29:39,730
passwords and I'm still being

410
00:29:37,330 --> 00:29:45,780
theoretical I know but the signature

411
00:29:39,730 --> 00:29:45,780
passwords are generated in a password

412
00:29:46,020 --> 00:29:54,280
store warehouse this is only my password

413
00:29:52,030 --> 00:29:58,990
and it's only mine and nobody else can

414
00:29:54,280 --> 00:30:02,440
have it so this must be stored in a

415
00:29:58,990 --> 00:30:03,520
given warehouse when the mint gives us a

416
00:30:02,440 --> 00:30:05,710
certificate

417
00:30:03,520 --> 00:30:09,420
well the they don't give me a password I

418
00:30:05,710 --> 00:30:13,060
generate my own password in my PC and

419
00:30:09,420 --> 00:30:15,100
we'll say give me a public password

420
00:30:13,060 --> 00:30:16,000
because I'm the one who generates the

421
00:30:15,100 --> 00:30:21,399
private one

422
00:30:16,000 --> 00:30:25,510
so mint is the one that needs to provide

423
00:30:21,400 --> 00:30:27,700
me with a public one this hasn't been

424
00:30:25,510 --> 00:30:29,770
generated in the case of the police this

425
00:30:27,700 --> 00:30:33,190
has a bit generated by the police it was

426
00:30:29,770 --> 00:30:42,700
generated inside the ID card and nobody

427
00:30:33,190 --> 00:30:45,520
else nobody did anything with it ability

428
00:30:42,700 --> 00:30:47,820
is very theoretical in this case and

429
00:30:45,520 --> 00:30:47,820
with

430
00:30:49,450 --> 00:30:57,830
so when I use my private passwords in

431
00:30:55,370 --> 00:31:01,159
order to send a message I must have

432
00:30:57,830 --> 00:31:04,629
access to warehouse with passwords

433
00:31:01,160 --> 00:31:07,760
there's an SH hardware model that

434
00:31:04,630 --> 00:31:10,340
generates and manages the series of our

435
00:31:07,760 --> 00:31:14,150
passwords we I can have this in a smart

436
00:31:10,340 --> 00:31:18,939
card I can have them in a little file in

437
00:31:14,150 --> 00:31:24,890
fact I'm uploading this from P 12

438
00:31:18,940 --> 00:31:28,160
extension and but I could have of my

439
00:31:24,890 --> 00:31:31,790
passwords in smart card or something

440
00:31:28,160 --> 00:31:34,220
that is somehow protected Mozilla and

441
00:31:31,790 --> 00:31:37,250
the fourth Firefox that has its

442
00:31:34,220 --> 00:31:41,210
passwords in software would with a very

443
00:31:37,250 --> 00:31:44,090
high level of security if you go in

444
00:31:41,210 --> 00:31:49,240
Firefox there's something that's called

445
00:31:44,090 --> 00:32:15,620
activate certain mode and within this

446
00:31:49,240 --> 00:32:19,190
certificate so here I upload private can

447
00:32:15,620 --> 00:32:21,439
and when I encrypt it will be done

448
00:32:19,190 --> 00:32:27,520
inside the card and some operations are

449
00:32:21,440 --> 00:32:32,200
based look because it's 50 mega process

450
00:32:27,520 --> 00:32:37,090
very complex operations and generating

451
00:32:32,200 --> 00:32:37,090
is something that takes 2 or 3 minutes

452
00:32:49,049 --> 00:32:55,230
I send this and something comes out of

453
00:32:53,309 --> 00:32:58,129
this and I'm going to try with an

454
00:32:55,230 --> 00:32:58,129
Eclipse Eclipse

455
00:33:19,519 --> 00:33:30,330
OSR terminalia Madiba peripheral

456
00:33:23,099 --> 00:33:32,249
temporal argh está más o menos Ave estas

457
00:33:30,330 --> 00:33:35,759
una film assadís esta su mensaje fear

458
00:33:32,249 --> 00:33:45,130
model is a sound message if we look at

459
00:33:35,759 --> 00:33:49,539
the example a film Otto

460
00:33:45,130 --> 00:33:59,020
hola mundo and I signed hello world and

461
00:33:49,539 --> 00:34:02,230
this is what it generates what's inside

462
00:33:59,020 --> 00:34:04,418
a signature universe area they refer

463
00:34:02,230 --> 00:34:08,530
anthias all nodos the series of

464
00:34:04,419 --> 00:34:13,450
references to nodes etc and this is the

465
00:34:08,530 --> 00:34:19,899
signature you see here is the encryption

466
00:34:13,449 --> 00:34:24,489
with my private password made a data

467
00:34:19,899 --> 00:34:27,690
that make up the standard this is the

468
00:34:24,489 --> 00:34:31,569
signature in the simplest possible form

469
00:34:27,690 --> 00:34:39,960
this is the certificate that I've used

470
00:34:31,570 --> 00:34:39,960
in order to sign from the certificate

471
00:34:46,500 --> 00:34:49,699
[Music]

472
00:35:02,250 --> 00:35:12,750
certificate yo necesito esta casa es el

473
00:35:05,680 --> 00:35:19,890
el colegio no Dario's the agency of

474
00:35:12,750 --> 00:35:19,890
certification metadata here

475
00:35:27,340 --> 00:35:32,320
[Music]

476
00:35:28,520 --> 00:35:38,000
poor assumed it was just his summarize

477
00:35:32,320 --> 00:35:43,580
date etc we can put in lot of data where

478
00:35:38,000 --> 00:35:48,320
I signed it legally binding they were

479
00:35:43,580 --> 00:35:51,680
doing transaction services when you

480
00:35:48,320 --> 00:35:54,230
write Madrid September thirtieth Madrid

481
00:35:51,680 --> 00:35:56,120
has a legal value it's not the same to

482
00:35:54,230 --> 00:35:58,660
sign something in Madrid or in

483
00:35:56,120 --> 00:36:02,799
Sebastopol or in Mauritius Island

484
00:35:58,660 --> 00:36:06,140
because obviously you're under a given

485
00:36:02,800 --> 00:36:09,110
legislation and also the tell the date

486
00:36:06,140 --> 00:36:13,370
is very relevant indeed I can sign a

487
00:36:09,110 --> 00:36:17,020
contract but I need to sign it date of

488
00:36:13,370 --> 00:36:21,140
the signature set when the contract

489
00:36:17,020 --> 00:36:23,320
comes into force emotionnal n el otro

490
00:36:21,140 --> 00:36:27,410
lado

491
00:36:23,320 --> 00:36:30,430
well next step is signature validation

492
00:36:27,410 --> 00:36:33,350
this is all my JIT hop code

493
00:36:30,430 --> 00:36:37,250
setting all this up with Java from

494
00:36:33,350 --> 00:36:39,589
scratch is really complicated so the

495
00:36:37,250 --> 00:36:41,240
signature validation is made up of two

496
00:36:39,590 --> 00:36:43,970
steps first of all you have to validate

497
00:36:41,240 --> 00:36:47,959
the signature itself that is you take

498
00:36:43,970 --> 00:36:50,089
the public key you check that the

499
00:36:47,960 --> 00:36:52,010
private key has been used to the

500
00:36:50,090 --> 00:36:56,660
corresponding one I check that all the

501
00:36:52,010 --> 00:37:00,740
digital footprints match so that I can

502
00:36:56,660 --> 00:37:03,560
verify that the public and private keys

503
00:37:00,740 --> 00:37:06,740
match together and that the public key

504
00:37:03,560 --> 00:37:09,200
matches with the certificate within then

505
00:37:06,740 --> 00:37:12,740
I have to take the certificate and ask

506
00:37:09,200 --> 00:37:16,279
the issuer whether it is valid or not

507
00:37:12,740 --> 00:37:22,479
this is a very serious issue I've heard

508
00:37:16,280 --> 00:37:26,270
a lot of things regarding the rock

509
00:37:22,480 --> 00:37:29,950
vulnerability of ID cards there is not a

510
00:37:26,270 --> 00:37:33,309
service of historic validations

511
00:37:29,950 --> 00:37:35,200
if I go to validation Authority

512
00:37:33,309 --> 00:37:37,990
to find out whether a certificate is

513
00:37:35,200 --> 00:37:44,169
valid or not I cannot ask whether it was

514
00:37:37,990 --> 00:37:46,390
valid on August 13 2016 if I ask if that

515
00:37:44,170 --> 00:37:48,819
certificate or if I that ID card is

516
00:37:46,390 --> 00:37:51,970
valid they answer whether it is valid

517
00:37:48,819 --> 00:37:55,270
today this is a problem we will see how

518
00:37:51,970 --> 00:38:00,879
it is solved and I've been written in

519
00:37:55,270 --> 00:38:04,299
several security forum that if I have a

520
00:38:00,880 --> 00:38:06,640
signature attached to my ID but the

521
00:38:04,299 --> 00:38:09,549
certificates have been revoked but my

522
00:38:06,640 --> 00:38:13,629
signature was before the revocation or

523
00:38:09,549 --> 00:38:16,450
to put it in simpler words if I sign

524
00:38:13,630 --> 00:38:18,579
today that I am the proxy of my company

525
00:38:16,450 --> 00:38:23,558
and I sign a document I get fired

526
00:38:18,579 --> 00:38:26,109
tomorrow how do I know that if their

527
00:38:23,559 --> 00:38:28,809
certificates saying that I am the proxy

528
00:38:26,109 --> 00:38:32,920
of my company was valid or not when I

529
00:38:28,809 --> 00:38:34,960
signed it there's no way to know it for

530
00:38:32,920 --> 00:38:39,700
that there is another technology which

531
00:38:34,960 --> 00:38:42,040
is called time seals and we will see it

532
00:38:39,700 --> 00:38:44,379
later on for validation there are three

533
00:38:42,040 --> 00:38:46,029
operations validation two operations are

534
00:38:44,380 --> 00:38:55,990
a validation of the signature and

535
00:38:46,030 --> 00:38:57,790
validation of the certificate primeiro

536
00:38:55,990 --> 00:39:00,490
if there is a dialogue between two parts

537
00:38:57,790 --> 00:39:03,099
of the AI API there are two things

538
00:39:00,490 --> 00:39:07,270
involved if I need to know somebody's

539
00:39:03,099 --> 00:39:13,000
identity at all costs I need to use a

540
00:39:07,270 --> 00:39:16,119
provider of my confidence all the way I

541
00:39:13,000 --> 00:39:18,760
just go okay I know you are you just

542
00:39:16,119 --> 00:39:22,240
give me your public key but if I need a

543
00:39:18,760 --> 00:39:24,880
third-party verification I need to use a

544
00:39:22,240 --> 00:39:27,430
provider so the parties need to have

545
00:39:24,880 --> 00:39:30,250
certificates issued by providers and

546
00:39:27,430 --> 00:39:33,759
then with that certificate I can know if

547
00:39:30,250 --> 00:39:36,790
that is my user or not if I use a

548
00:39:33,760 --> 00:39:39,060
certificate I can obtain that I did his

549
00:39:36,790 --> 00:39:44,880
ID number

550
00:39:39,060 --> 00:39:51,600
if I find that this idea is correct from

551
00:39:44,880 --> 00:39:54,540
a trustworthy source then I can go on we

552
00:39:51,600 --> 00:39:56,670
were talking before about the date of

553
00:39:54,540 --> 00:39:58,620
the signature and it is very relevant

554
00:39:56,670 --> 00:40:01,710
let's go back to my example if I'm

555
00:39:58,620 --> 00:40:03,330
trying to get a certificate stating that

556
00:40:01,710 --> 00:40:06,000
a real estate property doesn't have an

557
00:40:03,330 --> 00:40:10,230
encumbrance system that is signed that

558
00:40:06,000 --> 00:40:11,940
is so on a particular date and the

559
00:40:10,230 --> 00:40:18,870
situation may be different on a

560
00:40:11,940 --> 00:40:23,280
different date so for example if the

561
00:40:18,870 --> 00:40:25,470
text I signed was on a particular date

562
00:40:23,280 --> 00:40:28,860
according to the document how can I bear

563
00:40:25,470 --> 00:40:31,169
if I that this date is correct who says

564
00:40:28,860 --> 00:40:32,730
that the 13th of January is really the

565
00:40:31,170 --> 00:40:37,500
13th of January

566
00:40:32,730 --> 00:40:40,670
that's when the time seals come into

567
00:40:37,500 --> 00:40:43,950
play there is a further certification

568
00:40:40,670 --> 00:40:46,020
certifying the moment when the

569
00:40:43,950 --> 00:40:47,939
certification was signed and this comes

570
00:40:46,020 --> 00:40:50,850
from a third party not from the party

571
00:40:47,940 --> 00:40:53,400
originating the document or receiving it

572
00:40:50,850 --> 00:40:55,950
it is a third party that certifies the

573
00:40:53,400 --> 00:41:01,290
time at which the document was signed

574
00:40:55,950 --> 00:41:04,410
the disadvantage of this is that they

575
00:41:01,290 --> 00:41:09,120
are at a cost and they cost make charge

576
00:41:04,410 --> 00:41:11,580
by message there are some PSAs which are

577
00:41:09,120 --> 00:41:13,230
free of charge but their validity in

578
00:41:11,580 --> 00:41:17,370
Spain is limited it's better than

579
00:41:13,230 --> 00:41:21,620
nothing of course but I think that in

580
00:41:17,370 --> 00:41:24,779
Spain there's only one legally binding

581
00:41:21,620 --> 00:41:27,509
time sealing Authority that is for free

582
00:41:24,780 --> 00:41:30,960
and it's the Catalan autonomous

583
00:41:27,510 --> 00:41:34,740
government the Valencian government was

584
00:41:30,960 --> 00:41:38,340
giving it out for free also but you need

585
00:41:34,740 --> 00:41:41,339
to request to or to make more than sorry

586
00:41:38,340 --> 00:41:42,810
you cannot make more than 40 requests in

587
00:41:41,340 --> 00:41:43,820
one hour or something like that I've

588
00:41:42,810 --> 00:41:51,299
never tried it

589
00:41:43,820 --> 00:41:55,990
fortunately our classes support the

590
00:41:51,300 --> 00:41:59,950
generation of a time seal so what I do

591
00:41:55,990 --> 00:42:05,259
is to provide certain parameters URL and

592
00:41:59,950 --> 00:42:08,230
the hash algorithm this is because I

593
00:42:05,260 --> 00:42:12,000
don't give the entire transaction to the

594
00:42:08,230 --> 00:42:17,109
authority I only send the digital

595
00:42:12,000 --> 00:42:24,880
fingerprint let's move on to another

596
00:42:17,109 --> 00:42:28,810
example now the example I just ran is

597
00:42:24,880 --> 00:42:34,720
not summarized for PowerPoint purposes

598
00:42:28,810 --> 00:42:36,369
it's really very small is the signature

599
00:42:34,720 --> 00:42:39,129
validation this there's absolutely

600
00:42:36,369 --> 00:42:42,850
nothing it just says that it's valid as

601
00:42:39,130 --> 00:42:45,520
long as it's valid of course correct

602
00:42:42,850 --> 00:42:54,450
signature and here we have the

603
00:42:45,520 --> 00:42:58,570
certificate if you allow me I'm going to

604
00:42:54,450 --> 00:43:00,819
go backwards a little bit when I

605
00:42:58,570 --> 00:43:03,609
validate a signature I said that I

606
00:43:00,820 --> 00:43:06,220
usually go to the validation Authority

607
00:43:03,609 --> 00:43:11,049
this Authority has two systems one

608
00:43:06,220 --> 00:43:14,140
called crl where I download a list of

609
00:43:11,050 --> 00:43:15,280
revoked certificates within their period

610
00:43:14,140 --> 00:43:18,609
of validity

611
00:43:15,280 --> 00:43:21,580
so I download a list with several serial

612
00:43:18,609 --> 00:43:24,790
numbers and if my certificate is within

613
00:43:21,580 --> 00:43:27,910
that period of validity and also within

614
00:43:24,790 --> 00:43:29,170
that list it means it's bad and the list

615
00:43:27,910 --> 00:43:32,410
includes the code

616
00:43:29,170 --> 00:43:35,440
specifying why it is bad why the code

617
00:43:32,410 --> 00:43:39,549
has been revoked because it's corrupt or

618
00:43:35,440 --> 00:43:47,440
whatever reason the validation by list

619
00:43:39,550 --> 00:43:52,619
of revoke Asian is quite inadequate why

620
00:43:47,440 --> 00:43:55,600
can i download the list and reuse it

621
00:43:52,619 --> 00:43:57,850
people use the system download the list

622
00:43:55,600 --> 00:44:02,560
in the morning and use it for the entire

623
00:43:57,850 --> 00:44:04,339
day so this gives me 24 hours of time to

624
00:44:02,560 --> 00:44:08,020
make missed

625
00:44:04,340 --> 00:44:11,090
because if I download the list at 9:00

626
00:44:08,020 --> 00:44:13,910
those signatures will be considered

627
00:44:11,090 --> 00:44:17,540
valid for that entire today although

628
00:44:13,910 --> 00:44:23,569
they have been revoked according to the

629
00:44:17,540 --> 00:44:26,690
EU legislation these leads lists need to

630
00:44:23,570 --> 00:44:28,700
include revoked certificates even if

631
00:44:26,690 --> 00:44:31,210
they are out of the period of validity

632
00:44:28,700 --> 00:44:35,299
this means that the size is going to

633
00:44:31,210 --> 00:44:37,550
increase hugely so this includes not

634
00:44:35,300 --> 00:44:41,210
only Spanish ID cards but also mask

635
00:44:37,550 --> 00:44:44,240
cards this means that the list contains

636
00:44:41,210 --> 00:44:47,210
30 thousand entries what do i do do i

637
00:44:44,240 --> 00:44:51,109
download them every five minutes do I

638
00:44:47,210 --> 00:44:54,080
have to go through a list of 30,000

639
00:44:51,110 --> 00:44:58,210
items that's very complicated there is

640
00:44:54,080 --> 00:45:02,240
another system called us use that beam

641
00:44:58,210 --> 00:45:06,320
and I use it in order to find out

642
00:45:02,240 --> 00:45:10,390
whether the certificates have been

643
00:45:06,320 --> 00:45:15,710
revoked or not this is a lot faster than

644
00:45:10,390 --> 00:45:17,830
downloaded a very exhaustive list and

645
00:45:15,710 --> 00:45:19,930
this appoints also using up a lot of

646
00:45:17,830 --> 00:45:26,210
memory

647
00:45:19,930 --> 00:45:30,940
so this owes that as B tells me if the

648
00:45:26,210 --> 00:45:34,670
certificate is valid now yes or no C RL

649
00:45:30,940 --> 00:45:36,710
does the same thing I cannot use seer L

650
00:45:34,670 --> 00:45:40,010
to find out whether a certificate was

651
00:45:36,710 --> 00:45:42,560
valid a year ago it just skips me

652
00:45:40,010 --> 00:45:46,810
today's information so we solve this

653
00:45:42,560 --> 00:45:46,810
with the use of a time seal

654
00:45:56,270 --> 00:46:10,850
he was come to loss in this case all I'm

655
00:46:02,720 --> 00:46:13,370
going to run this one the URL of the

656
00:46:10,850 --> 00:46:15,730
time ceiling authority from the

657
00:46:13,370 --> 00:46:21,560
Catalonian government which is the only

658
00:46:15,730 --> 00:46:26,360
legal valid one for free in Spain it is

659
00:46:21,560 --> 00:46:28,460
identified via an O ID number and it's

660
00:46:26,360 --> 00:46:33,830
not very clear where there are several

661
00:46:28,460 --> 00:46:36,230
policies and what it says here is that

662
00:46:33,830 --> 00:46:39,340
this what it certifies is the existence

663
00:46:36,230 --> 00:46:44,810
of a particular document in a particular

664
00:46:39,340 --> 00:46:48,500
moment but they don't certify the moment

665
00:46:44,810 --> 00:46:50,660
of the signature I can sign it today and

666
00:46:48,500 --> 00:46:54,800
send it for validation the day after so

667
00:46:50,660 --> 00:46:56,990
the signature has one date the stamp or

668
00:46:54,800 --> 00:47:00,140
the ceiling has another date and there

669
00:46:56,990 --> 00:47:03,439
is a maximum deadline between the

670
00:47:00,140 --> 00:47:06,560
signature and these stamping I can also

671
00:47:03,440 --> 00:47:08,990
sign today using tomorrow's date and

672
00:47:06,560 --> 00:47:13,730
sending it for stamping tomorrow but

673
00:47:08,990 --> 00:47:15,649
that's not really relevant so with this

674
00:47:13,730 --> 00:47:22,880
cap cert data

675
00:47:15,650 --> 00:47:26,680
I think the Wi-Fi is working I'm going

676
00:47:22,880 --> 00:47:26,680
to delete the temp file

677
00:47:35,920 --> 00:47:46,720
got better me now this is done I'm going

678
00:47:42,819 --> 00:47:49,329
to close to the older one avoid

679
00:47:46,720 --> 00:47:54,149
confusion the only difference between

680
00:47:49,329 --> 00:47:54,150
this document and the former one is that

681
00:47:55,980 --> 00:48:03,279
here we can see and in silly

682
00:48:00,059 --> 00:48:07,630
encapsulated time seal this chunk

683
00:48:03,279 --> 00:48:10,930
contains the documents digital footprint

684
00:48:07,630 --> 00:48:13,749
of course this node is excluded because

685
00:48:10,930 --> 00:48:20,169
otherwise the time sale wouldn't work

686
00:48:13,749 --> 00:48:24,999
and here I can verify what the message

687
00:48:20,170 --> 00:48:34,660
was and when it was sent to see a little

688
00:48:24,999 --> 00:48:38,970
bit what it has inside it's on base64 I

689
00:48:34,660 --> 00:48:38,970
have the time seal here

690
00:48:44,690 --> 00:48:47,470
Aki

691
00:48:49,170 --> 00:48:57,930
look at me and this is what I get back

692
00:48:52,950 --> 00:49:03,660
from the time sailing Authority it's not

693
00:48:57,930 --> 00:49:07,740
particularly clear because the time seal

694
00:49:03,660 --> 00:49:10,319
is signed in this case by concert I need

695
00:49:07,740 --> 00:49:16,279
to verify that the time seal has been

696
00:49:10,320 --> 00:49:16,280
issued by NF trustworthy Authority here

697
00:49:17,660 --> 00:49:25,710
we have the signature the validation

698
00:49:22,650 --> 00:49:28,890
from the time the sealing service of the

699
00:49:25,710 --> 00:49:36,360
Catalonian government so this very

700
00:49:28,890 --> 00:49:39,750
simple step just let me have the whole

701
00:49:36,360 --> 00:49:42,690
package I can see who made the

702
00:49:39,750 --> 00:49:45,630
transaction I can verify that the

703
00:49:42,690 --> 00:49:48,210
transaction hasn't been modified I know

704
00:49:45,630 --> 00:49:50,970
when it was made and this is based on

705
00:49:48,210 --> 00:49:52,920
evidence that provides legal security

706
00:49:50,970 --> 00:49:56,910
for trans section this is free software

707
00:49:52,920 --> 00:50:00,900
so that cost is zero you are watching

708
00:49:56,910 --> 00:50:06,569
the examples it's only 25 lines and we

709
00:50:00,900 --> 00:50:10,230
can have authority is for free

710
00:50:06,570 --> 00:50:15,270
you know the to avoid the cost of the

711
00:50:10,230 --> 00:50:21,420
paying services I have the time sealing

712
00:50:15,270 --> 00:50:27,270
service and this will usually have an

713
00:50:21,420 --> 00:50:29,820
idea a time seal is 20 cents I think

714
00:50:27,270 --> 00:50:32,910
this is very very expensive because if

715
00:50:29,820 --> 00:50:37,550
we use a massive API 20 cents is a huge

716
00:50:32,910 --> 00:50:42,470
amount of money but I can use these free

717
00:50:37,550 --> 00:50:46,560
applications or even create my own TSA

718
00:50:42,470 --> 00:50:53,220
they are sometimes sold with with

719
00:50:46,560 --> 00:50:56,549
hardware using the GPS time and using

720
00:50:53,220 --> 00:51:00,359
the official time in Spain this allows

721
00:50:56,550 --> 00:51:05,400
us to have the certainty of the time

722
00:51:00,359 --> 00:51:08,788
these examples using the confidentiality

723
00:51:05,400 --> 00:51:12,420
of the message and this is something

724
00:51:08,789 --> 00:51:14,489
that so is giving us when I use soap

725
00:51:12,420 --> 00:51:18,119
security I'm going to have electronic

726
00:51:14,489 --> 00:51:20,970
signatures but I can have xlm encryption

727
00:51:18,119 --> 00:51:24,839
that will encrypt the message but I

728
00:51:20,970 --> 00:51:26,819
prefer not using so because it generates

729
00:51:24,839 --> 00:51:29,839
a lot of noise in the transactions and

730
00:51:26,819 --> 00:51:34,650
if I want confidentiality I use digital

731
00:51:29,839 --> 00:51:41,190
envelopes this is an asymmetric encoding

732
00:51:34,650 --> 00:51:46,470
system where the symmetric code is

733
00:51:41,190 --> 00:51:49,259
paired to the public key so it is really

734
00:51:46,470 --> 00:51:51,988
easy to generate a digital envelope in

735
00:51:49,259 --> 00:51:55,049
this case I take the public part of this

736
00:51:51,989 --> 00:51:58,049
certificate for the receiver and I

737
00:51:55,049 --> 00:52:02,430
generate the envelope in this case I'm

738
00:51:58,049 --> 00:52:07,190
not signing the envelope but signing an

739
00:52:02,430 --> 00:52:07,190
envelope works in the exact same way so

740
00:52:10,309 --> 00:52:17,450
here you can see that the generation of

741
00:52:13,410 --> 00:52:17,450
a digital envelope is dead simple

742
00:52:29,060 --> 00:52:36,259
konista código and using this codec in

743
00:52:33,260 --> 00:52:38,650
generate and open the envelope we are

744
00:52:36,260 --> 00:52:44,680
talking about 90 lines including

745
00:52:38,650 --> 00:52:48,970
comments so it's really ridiculous

746
00:52:44,680 --> 00:52:53,089
opening a digital envelope it's even

747
00:52:48,970 --> 00:52:56,419
simpler I use my key store open the

748
00:52:53,090 --> 00:53:01,340
envelope and take out the data it is as

749
00:52:56,420 --> 00:53:08,570
simple as that an interesting thing that

750
00:53:01,340 --> 00:53:13,270
we need to bear in mind is not as used

751
00:53:08,570 --> 00:53:16,910
as Jason as well in with regards to

752
00:53:13,270 --> 00:53:22,150
messages the reason why is the

753
00:53:16,910 --> 00:53:26,740
canonization since every slight

754
00:53:22,150 --> 00:53:29,990
modification in message would cause a

755
00:53:26,740 --> 00:53:32,359
mismatch in the fingerprints therefore

756
00:53:29,990 --> 00:53:36,649
invalidating the signatures I need to

757
00:53:32,360 --> 00:53:42,670
remove any irrelevant data from the

758
00:53:36,650 --> 00:53:46,850
message that is meaningless spaces

759
00:53:42,670 --> 00:53:49,250
tabulations etc all these little things

760
00:53:46,850 --> 00:53:52,190
can cause the system to tell me that the

761
00:53:49,250 --> 00:53:55,760
message has been altered this is the

762
00:53:52,190 --> 00:54:00,740
only problem we had at the mint we had X

763
00:53:55,760 --> 00:54:03,470
M else without canonizing and that's how

764
00:54:00,740 --> 00:54:08,870
they were signed and this was a problem

765
00:54:03,470 --> 00:54:13,009
because the / r / n of windows were

766
00:54:08,870 --> 00:54:15,290
translated into / r / n into line x and

767
00:54:13,010 --> 00:54:18,920
it said that the signature wasn't valid

768
00:54:15,290 --> 00:54:22,040
so i had to manually modify the message

769
00:54:18,920 --> 00:54:25,790
in order to validate the signature so we

770
00:54:22,040 --> 00:54:30,170
have to canonize the xml in order to

771
00:54:25,790 --> 00:54:33,350
avoid this you can canonize it with

772
00:54:30,170 --> 00:54:37,400
comments without comments there are

773
00:54:33,350 --> 00:54:40,290
several procedures but if I have an XML

774
00:54:37,400 --> 00:54:43,230
I don't mind if you

775
00:54:40,290 --> 00:54:46,320
and two strikes or spaces because the

776
00:54:43,230 --> 00:54:49,050
digital finger tray fingerprint is going

777
00:54:46,320 --> 00:54:53,640
to be the same however in Jason there is

778
00:54:49,050 --> 00:54:57,960
no canonical way and spaces for example

779
00:54:53,640 --> 00:55:01,279
and significance and there is no

780
00:54:57,960 --> 00:55:04,620
standard whereas we have it in this case

781
00:55:01,280 --> 00:55:10,760
you know the to canonize jason so what i

782
00:55:04,620 --> 00:55:14,730
see what i doing is to delete jason as a

783
00:55:10,760 --> 00:55:18,200
java class if we all use the same jason

784
00:55:14,730 --> 00:55:19,770
mg the end is going to be the same agent

785
00:55:18,200 --> 00:55:25,020
jason sorry

786
00:55:19,770 --> 00:55:30,540
so this forces you to have the same

787
00:55:25,020 --> 00:55:34,259
jason classes everywhere so at the end

788
00:55:30,540 --> 00:55:37,290
of the day if i develop both parts i

789
00:55:34,260 --> 00:55:38,490
need to put the JSON code we learn the

790
00:55:37,290 --> 00:55:43,110
code

791
00:55:38,490 --> 00:55:46,770
instead of using j r e because if there

792
00:55:43,110 --> 00:55:48,960
is a change tomorrow in java 10 and they

793
00:55:46,770 --> 00:55:54,509
introduced slash 0 for example then

794
00:55:48,960 --> 00:55:57,000
there is a signature mismatch again and

795
00:55:54,510 --> 00:56:00,750
now i'm going to tell you about what we

796
00:55:57,000 --> 00:56:03,060
gained here at them and the project was

797
00:56:00,750 --> 00:56:04,710
set up in less than one month it was up

798
00:56:03,060 --> 00:56:08,400
and running in less than one month it's

799
00:56:04,710 --> 00:56:15,770
very simple it's 60 lines of code per

800
00:56:08,400 --> 00:56:20,520
operation and the keys were stored in a

801
00:56:15,770 --> 00:56:23,759
pkcs12 file it's pretty unsafe but they

802
00:56:20,520 --> 00:56:29,580
trust the source we knew the message

803
00:56:23,760 --> 00:56:31,830
came from the register and whenever we

804
00:56:29,580 --> 00:56:34,650
texted the register they were sure that

805
00:56:31,830 --> 00:56:38,310
it came from us and it was very clear

806
00:56:34,650 --> 00:56:43,170
that messages weren't manipulated at any

807
00:56:38,310 --> 00:56:45,570
point I was also able to legally defend

808
00:56:43,170 --> 00:56:47,850
that I had received that message from

809
00:56:45,570 --> 00:56:51,140
the registry and that is the reason why

810
00:56:47,850 --> 00:56:53,279
I had taken certain actions with my

811
00:56:51,140 --> 00:56:57,990
clients with every

812
00:56:53,280 --> 00:57:03,540
I request the cost was nine euros and it

813
00:56:57,990 --> 00:57:07,109
was a massive service at the end of the

814
00:57:03,540 --> 00:57:11,670
year the invoice is going to be 700

815
00:57:07,110 --> 00:57:15,090
thousand euros so I made requests for

816
00:57:11,670 --> 00:57:19,290
evidence because in case of an attack if

817
00:57:15,090 --> 00:57:21,870
the cost is 9 euros the the call or the

818
00:57:19,290 --> 00:57:27,540
text it is terrible

819
00:57:21,870 --> 00:57:30,080
imagine if it is hacked it's going to be

820
00:57:27,540 --> 00:57:35,310
you it's going to be a huge amount of

821
00:57:30,080 --> 00:57:38,430
money if it is attacked by a script but

822
00:57:35,310 --> 00:57:40,799
the signature allows me to legally

823
00:57:38,430 --> 00:57:44,910
defend that everything that hasn't been

824
00:57:40,800 --> 00:57:48,150
signed by me cannot be charged then the

825
00:57:44,910 --> 00:57:52,609
legal part here was very important as I

826
00:57:48,150 --> 00:57:59,130
say dates were very important and all

827
00:57:52,610 --> 00:58:04,800
transactions had a time seal if a

828
00:57:59,130 --> 00:58:08,460
customer of mine wants to sue me because

829
00:58:04,800 --> 00:58:11,220
they say that the certificate doesn't

830
00:58:08,460 --> 00:58:13,320
match reality I can go to the judge and

831
00:58:11,220 --> 00:58:15,930
say well this is the information

832
00:58:13,320 --> 00:58:18,510
provided by the American tile register

833
00:58:15,930 --> 00:58:21,000
at that particular date the signatures

834
00:58:18,510 --> 00:58:25,560
been validated by a third party and this

835
00:58:21,000 --> 00:58:28,890
signature is validated by the Spanish

836
00:58:25,560 --> 00:58:36,890
law therefore it's not my problem

837
00:58:28,890 --> 00:58:36,890
anymore and so on and so forth

838
00:58:36,920 --> 00:58:45,080
I've very rarely seen these systems and

839
00:58:42,270 --> 00:58:49,050
there are usually terrible messages and

840
00:58:45,080 --> 00:58:52,110
SSL systems I've recently seen these

841
00:58:49,050 --> 00:58:54,390
systems in the cloud signature systems

842
00:58:52,110 --> 00:58:59,400
of the Valencian government when I want

843
00:58:54,390 --> 00:59:04,109
to perform a signature and the cloud if

844
00:58:59,400 --> 00:59:05,280
I want to give powers to the Valencian

845
00:59:04,110 --> 00:59:08,609
government

846
00:59:05,280 --> 00:59:11,400
well does has security issues because

847
00:59:08,609 --> 00:59:15,450
that petition from me needs to be signed

848
00:59:11,400 --> 00:59:17,700
as well because there is a way there

849
00:59:15,450 --> 00:59:21,598
needs to be a way to prove that I

850
00:59:17,700 --> 00:59:26,759
requested that so this power conferring

851
00:59:21,599 --> 00:59:30,450
things simplifies things a lot so it's

852
00:59:26,760 --> 00:59:31,410
not about creating API security with 300

853
00:59:30,450 --> 00:59:33,299
lines of code

854
00:59:31,410 --> 00:59:36,779
what's important here is that we have

855
00:59:33,300 --> 00:59:40,130
the legal certainty that we cannot have

856
00:59:36,780 --> 00:59:57,780
from SSL or from other oath

857
00:59:40,130 --> 01:00:00,530
authentication tokens review the

858
00:59:57,780 --> 01:00:05,430
Technology Transfer Center of the

859
01:00:00,530 --> 01:00:12,570
Spanish government now due to recent

860
01:00:05,430 --> 01:00:14,790
legislation the software generated in

861
01:00:12,570 --> 01:00:19,020
public administration is the software

862
01:00:14,790 --> 01:00:22,710
that we all pay for is now open-source

863
01:00:19,020 --> 01:00:25,710
there are certain projects and most of

864
01:00:22,710 --> 01:00:29,520
the software here has very little

865
01:00:25,710 --> 01:00:32,869
activity if you can see here these are

866
01:00:29,520 --> 01:00:35,759
plain lines what are the signature

867
01:00:32,869 --> 01:00:38,490
project which is called client afirma is

868
01:00:35,760 --> 01:00:44,310
quite active here you can see that it's

869
01:00:38,490 --> 01:00:45,689
been a DEP updated two hours ago here

870
01:00:44,310 --> 01:00:50,339
you can see that there are comments

871
01:00:45,690 --> 01:00:54,599
almost every day almost every week this

872
01:00:50,339 --> 01:00:57,660
is not a dead project it's not a

873
01:00:54,599 --> 01:01:01,109
software that the tax authority is

874
01:00:57,660 --> 01:01:05,040
released and then forgot about and no it

875
01:01:01,109 --> 01:01:08,250
is alive it is very active and it's used

876
01:01:05,040 --> 01:01:09,810
in several different projects so this

877
01:01:08,250 --> 01:01:16,020
was all for me thank you very much for

878
01:01:09,810 --> 01:01:18,540
staying and do not hesitate to ask me I

879
01:01:16,020 --> 01:01:20,660
will now give you my

880
01:01:18,540 --> 01:01:20,660
yes

881
01:01:22,480 --> 01:01:29,980
well co-co-co lab so I'll be happy to

882
01:01:27,420 --> 01:01:31,930
collaborate with you I don't have a

883
01:01:29,980 --> 01:01:34,300
contract with tax authorities or the

884
01:01:31,930 --> 01:01:38,140
Ministry of Industry I do it on a

885
01:01:34,300 --> 01:01:40,540
personal level I help people setting up

886
01:01:38,140 --> 01:01:42,400
signature solutions I'm not trying to

887
01:01:40,540 --> 01:01:45,250
sell anything here but I think they're

888
01:01:42,400 --> 01:01:47,200
pretty good so if you believe that I can

889
01:01:45,250 --> 01:01:49,109
help you setting up the sort of

890
01:01:47,200 --> 01:01:51,910
infrastructure please don't hesitate to

891
01:01:49,109 --> 01:01:54,770
call me to ask your questions or to

892
01:01:51,910 --> 01:01:58,158
invite me wherever you decide feet

893
01:01:54,770 --> 01:01:58,159
[Applause]

894
01:02:03,310 --> 01:02:05,370
you

