1
00:00:02,090 --> 00:00:15,309
[Music]

2
00:00:09,880 --> 00:00:17,170
Kate algunos de todos good afternoon

3
00:00:15,309 --> 00:00:21,380
everyone

4
00:00:17,170 --> 00:00:27,020
we're ready to start welcome to the

5
00:00:21,380 --> 00:00:30,610
first session of cyber Camp 2018 it's

6
00:00:27,020 --> 00:00:34,460
such a pleasure meeting here in Malaga

7
00:00:30,610 --> 00:00:38,090
many of you don't originally come from

8
00:00:34,460 --> 00:00:40,910
Malaga but some of you from afar I also

9
00:00:38,090 --> 00:00:42,829
want to greet people who are watching us

10
00:00:40,910 --> 00:00:46,578
and following what we're doing on

11
00:00:42,829 --> 00:00:50,450
streaming some of them just outside here

12
00:00:46,579 --> 00:00:59,450
some of them whatever and we are here a

13
00:00:50,450 --> 00:01:01,579
ready to start to hear from Paco does

14
00:00:59,450 --> 00:01:04,820
this go Jose Ramirez Lopez who's at

15
00:01:01,579 --> 00:01:08,180
pentester and let me just remind you

16
00:01:04,819 --> 00:01:11,320
before we started to encourage you to

17
00:01:08,180 --> 00:01:17,869
share what we are doing here on Twitter

18
00:01:11,320 --> 00:01:22,699
we've got the cyber camp a 18 1 8 hash

19
00:01:17,869 --> 00:01:26,720
tag you can say also there use a cyber

20
00:01:22,700 --> 00:01:31,160
Camp es and incident so we're ready to

21
00:01:26,720 --> 00:01:36,410
hear from Paco he's here to tell us how

22
00:01:31,160 --> 00:01:43,848
to use a network knowledge reversing on

23
00:01:36,410 --> 00:01:47,090
Droid 2 for pentesting he is an IT

24
00:01:43,849 --> 00:01:50,179
engineer by the university of seville

25
00:01:47,090 --> 00:01:56,209
he's an expert in cyber security and

26
00:01:50,179 --> 00:02:01,369
right now he is preparing his PhD

27
00:01:56,209 --> 00:02:03,500
dissertation mostly focusing on IOT so

28
00:02:01,369 --> 00:02:06,280
Paco the floor is all yours you've got

29
00:02:03,500 --> 00:02:09,699
two hours ahead of you

30
00:02:06,280 --> 00:02:12,550
thank you very much for coming and

31
00:02:09,699 --> 00:02:14,530
attending my workshop and I want to

32
00:02:12,550 --> 00:02:18,520
thank cyber camp the organizers

33
00:02:14,530 --> 00:02:25,060
logically for allowing me to be here wow

34
00:02:18,520 --> 00:02:32,140
this is a pretty striking title we're

35
00:02:25,060 --> 00:02:36,340
here to talk about communications on

36
00:02:32,140 --> 00:02:43,839
mobile devices and IOT I'm going to tell

37
00:02:36,340 --> 00:02:47,950
you about a always an OS mobile I will

38
00:02:43,840 --> 00:02:50,680
also tell you something about SSL bypass

39
00:02:47,950 --> 00:02:54,660
and communications so that we have a

40
00:02:50,680 --> 00:02:58,270
basic knowledge before we start as such

41
00:02:54,660 --> 00:03:03,190
we will see how the SSL communications

42
00:02:58,270 --> 00:03:06,790
bypass can be done both for the web use

43
00:03:03,190 --> 00:03:11,340
or mobile phone use or whatever device

44
00:03:06,790 --> 00:03:17,019
and then the following step will see

45
00:03:11,340 --> 00:03:21,600
setting different mobile configurations

46
00:03:17,019 --> 00:03:27,090
for the bypass to be done we will see

47
00:03:21,600 --> 00:03:33,239
countermeasures for instance SSL pin

48
00:03:27,090 --> 00:03:39,310
pinning sorry which you can do through

49
00:03:33,239 --> 00:03:41,200
admin access owners but we will see that

50
00:03:39,310 --> 00:03:44,140
that's the easiest way but then we will

51
00:03:41,200 --> 00:03:47,200
see more complex ways to go around that

52
00:03:44,140 --> 00:03:50,200
and then we will see that all these

53
00:03:47,200 --> 00:03:54,609
knowledge for Android for iOS that can

54
00:03:50,200 --> 00:03:56,950
also be used for IOT devices is the same

55
00:03:54,610 --> 00:04:00,459
concept at the end of the day is just

56
00:03:56,950 --> 00:04:01,329
using devices that are connected to the

57
00:04:00,459 --> 00:04:10,000
Internet

58
00:04:01,330 --> 00:04:13,060
so and then working online so this is my

59
00:04:10,000 --> 00:04:17,790
disclaimer saying that we will be

60
00:04:13,060 --> 00:04:20,769
working on controlled environments and

61
00:04:17,790 --> 00:04:24,450
what I'm going to tell you about during

62
00:04:20,769 --> 00:04:28,330
my workshop well I've got that

63
00:04:24,450 --> 00:04:31,150
information from blogs from reliable

64
00:04:28,330 --> 00:04:34,210
sources for those of you who don't know

65
00:04:31,150 --> 00:04:37,090
me this is me up on the screen my name

66
00:04:34,210 --> 00:04:40,419
is Paco Ramirez I work for in know tech

67
00:04:37,090 --> 00:04:43,659
in Madrid I'm cyber security consultant

68
00:04:40,420 --> 00:04:48,460
I'm a pen tester and I've been working

69
00:04:43,660 --> 00:04:52,300
for four years in security issues mostly

70
00:04:48,460 --> 00:04:56,799
connected with hacking I'm an IT

71
00:04:52,300 --> 00:05:01,330
engineer I have done a master's degree

72
00:04:56,800 --> 00:05:04,540
on security and I'm now doing my PhD on

73
00:05:01,330 --> 00:05:09,240
smart applications I'm an honorary

74
00:05:04,540 --> 00:05:15,310
professor at the university of seville

75
00:05:09,240 --> 00:05:17,520
and just as a reminder that we I want to

76
00:05:15,310 --> 00:05:21,300
tell you that we are doing the OS

77
00:05:17,520 --> 00:05:24,909
chapter in Seville where we organise

78
00:05:21,300 --> 00:05:27,190
presentations and meetings on security

79
00:05:24,910 --> 00:05:29,380
here we can see a list of the

80
00:05:27,190 --> 00:05:32,200
certificates that I've been covering

81
00:05:29,380 --> 00:05:36,280
during my professional career so let's

82
00:05:32,200 --> 00:05:39,180
start with our always mobile I don't

83
00:05:36,280 --> 00:05:41,469
know if you're familiar with all of us

84
00:05:39,180 --> 00:05:45,910
for those of you who are not familiar

85
00:05:41,470 --> 00:05:48,700
with it I'm going to tell you some basic

86
00:05:45,910 --> 00:05:52,470
information so that you know how it can

87
00:05:48,700 --> 00:05:56,200
be used in auditing for instance I was

88
00:05:52,470 --> 00:06:01,830
started as a community working on a

89
00:05:56,200 --> 00:06:01,830
project to analyze web applications

90
00:06:02,730 --> 00:06:10,910
and what can we see on wasp or wasp

91
00:06:07,460 --> 00:06:14,250
gives us information about well known

92
00:06:10,910 --> 00:06:20,330
vulnerabilities on Web Services and we

93
00:06:14,250 --> 00:06:25,740
have a top 10 for the best known unit

94
00:06:20,330 --> 00:06:29,969
which is reviewed and updated every four

95
00:06:25,740 --> 00:06:34,890
years here we have information on the

96
00:06:29,970 --> 00:06:37,020
results for 2013 and 2017 with the top

97
00:06:34,890 --> 00:06:38,990
10 vulnerabilities best known

98
00:06:37,020 --> 00:06:43,590
vulnerabilities worldwide

99
00:06:38,990 --> 00:06:47,970
what else can always contribute well

100
00:06:43,590 --> 00:06:52,830
many of us here work on security or

101
00:06:47,970 --> 00:06:59,640
maybe we want to orders an application

102
00:06:52,830 --> 00:07:03,659
where we have this quite some guidelines

103
00:06:59,640 --> 00:07:09,120
to do different controls on a web

104
00:07:03,660 --> 00:07:12,900
application to make it a more secure it

105
00:07:09,120 --> 00:07:15,210
tells us how to go one control at a time

106
00:07:12,900 --> 00:07:18,870
giving you information about the

107
00:07:15,210 --> 00:07:24,239
controls involved and say for instance

108
00:07:18,870 --> 00:07:27,390
the first control for printing what

109
00:07:24,240 --> 00:07:30,930
information can I get about a server for

110
00:07:27,390 --> 00:07:31,860
instance a on publications information

111
00:07:30,930 --> 00:07:36,630
on that domain

112
00:07:31,860 --> 00:07:40,590
well the wasp tells us how to test every

113
00:07:36,630 --> 00:07:43,909
control it tells us about how you have a

114
00:07:40,590 --> 00:07:47,010
white box gray box black box auditing

115
00:07:43,910 --> 00:07:51,410
options and how the tests can be

116
00:07:47,010 --> 00:07:51,409
modified depending on the type of orders

117
00:07:52,220 --> 00:07:59,520
I'm here to tell you mostly about mobile

118
00:07:56,190 --> 00:08:03,000
possibilities and IOT possibilities I'm

119
00:07:59,520 --> 00:08:06,830
more of an expert on the mobile side of

120
00:08:03,000 --> 00:08:12,479
things and there was a recent project

121
00:08:06,830 --> 00:08:17,818
which is I was just like it was applied

122
00:08:12,479 --> 00:08:22,590
for the internet for the web but from

123
00:08:17,819 --> 00:08:26,910
mobile applications here we can see some

124
00:08:22,590 --> 00:08:31,399
of the information that has been coming

125
00:08:26,910 --> 00:08:35,940
up for mobile applications recently and

126
00:08:31,399 --> 00:08:37,620
during my workshop we will see a bit

127
00:08:35,940 --> 00:08:42,260
like the testing guide for the web

128
00:08:37,620 --> 00:08:48,990
something similar but for mobile

129
00:08:42,260 --> 00:08:52,740
Arendt's environments in mobile

130
00:08:48,990 --> 00:08:55,350
environments it very much depends on the

131
00:08:52,740 --> 00:08:58,589
app that we're going to be auditing or

132
00:08:55,350 --> 00:09:01,920
securing for certain controls then you

133
00:08:58,589 --> 00:09:04,589
have different levels okay then for

134
00:09:01,920 --> 00:09:08,699
mosfilm they only talk so if we are

135
00:09:04,589 --> 00:09:10,500
discussing what a TMS are that we see on

136
00:09:08,700 --> 00:09:12,000
Google maybe there are some controls

137
00:09:10,500 --> 00:09:16,230
that I need to use that are a bit

138
00:09:12,000 --> 00:09:19,709
complex for the application and then

139
00:09:16,230 --> 00:09:22,459
what about a Health application if this

140
00:09:19,709 --> 00:09:25,949
data are critical we need to follow

141
00:09:22,459 --> 00:09:28,109
tighter controls that's why all West

142
00:09:25,950 --> 00:09:32,820
mobile has the following layers three of

143
00:09:28,110 --> 00:09:37,110
them one is standard security second

144
00:09:32,820 --> 00:09:40,760
level but beam in depth security and

145
00:09:37,110 --> 00:09:43,680
another one that is reverse engineering

146
00:09:40,760 --> 00:09:46,140
based on the kind of app we've want to

147
00:09:43,680 --> 00:09:53,410
audit we can meet we need controls from

148
00:09:46,140 --> 00:09:55,750
one block or the other we have

149
00:09:53,410 --> 00:10:01,689
storage cryptography and many other

150
00:09:55,750 --> 00:10:03,639
types last one is reverse engineering

151
00:10:01,690 --> 00:10:10,120
and then on the guideline the retrieved

152
00:10:03,639 --> 00:10:11,920
columns there and depending on the one

153
00:10:10,120 --> 00:10:15,040
that we'll be auditing we would have

154
00:10:11,920 --> 00:10:16,750
first column the first current control

155
00:10:15,040 --> 00:10:23,680
the first audit and the other ones the

156
00:10:16,750 --> 00:10:26,170
rest of the audits so what can we

157
00:10:23,680 --> 00:10:28,180
highlight of all this guide of this

158
00:10:26,170 --> 00:10:32,139
whole guideline I feel there's there's

159
00:10:28,180 --> 00:10:34,089
five of them that are worth pinpointing

160
00:10:32,139 --> 00:10:39,689
or that we should take into account when

161
00:10:34,089 --> 00:10:48,310
running our tests first one SSL pinon

162
00:10:39,689 --> 00:10:51,639
that is a masking code that's the

163
00:10:48,310 --> 00:10:54,939
measure I have for the source code that

164
00:10:51,639 --> 00:10:58,029
is on our app and through reverse

165
00:10:54,939 --> 00:11:00,639
engineering someone could remove it but

166
00:10:58,029 --> 00:11:02,920
if I change it or modify it so when

167
00:11:00,639 --> 00:11:06,130
someone gets the code finds it is not

168
00:11:02,920 --> 00:11:08,439
legible I make their attack bit more

169
00:11:06,130 --> 00:11:12,089
difficult they cannot see that those

170
00:11:08,439 --> 00:11:15,250
features in my app that's why I refer to

171
00:11:12,089 --> 00:11:18,699
obfuscated code here so all that code

172
00:11:15,250 --> 00:11:22,360
coming in into my app comes out in a

173
00:11:18,699 --> 00:11:26,849
different way and how is that instead of

174
00:11:22,360 --> 00:11:32,470
following I don't know sensitive code

175
00:11:26,850 --> 00:11:34,149
encryption I say ABC or one two three so

176
00:11:32,470 --> 00:11:37,790
it becomes more complicated when reading

177
00:11:34,149 --> 00:11:39,800
it and then

178
00:11:37,790 --> 00:11:42,439
what about mobile apps were we have the

179
00:11:39,800 --> 00:11:45,199
writ detection detection as well if you

180
00:11:42,440 --> 00:11:51,590
have someone having access as an admin

181
00:11:45,200 --> 00:11:54,860
into our device if that information for

182
00:11:51,590 --> 00:11:58,660
example the Samba I'm proud of the died

183
00:11:54,860 --> 00:12:01,160
of device since they have admin permit

184
00:11:58,660 --> 00:12:02,630
they can have access so if I use some

185
00:12:01,160 --> 00:12:04,550
controls to make sure that they didn't

186
00:12:02,630 --> 00:12:07,730
have access to that sensitive

187
00:12:04,550 --> 00:12:14,089
information on Samba I am secure in my

188
00:12:07,730 --> 00:12:17,390
app then we have the decoration mud

189
00:12:14,090 --> 00:12:21,260
model because if I manage to decorate or

190
00:12:17,390 --> 00:12:24,620
clean and up and see what it does if I

191
00:12:21,260 --> 00:12:26,060
can debug it sorry I can modify it so it

192
00:12:24,620 --> 00:12:31,430
does something else it should not be

193
00:12:26,060 --> 00:12:35,239
done that's why it is run here you have

194
00:12:31,430 --> 00:12:38,930
an example where you implement both it

195
00:12:35,240 --> 00:12:42,980
is simple on Android you have the source

196
00:12:38,930 --> 00:12:47,569
code there and you just ask can you

197
00:12:42,980 --> 00:12:51,430
debug it is it a debugging activated do

198
00:12:47,570 --> 00:12:57,709
I have access to the sandbox

199
00:12:51,430 --> 00:13:01,709
so that's regarding the admin permits

200
00:12:57,709 --> 00:13:05,790
then changes in the source code or what

201
00:13:01,709 --> 00:13:09,059
I call anti anti tampering same us with

202
00:13:05,790 --> 00:13:11,339
ATMs or TPVs that you use for payment if

203
00:13:09,059 --> 00:13:13,139
with any device you open it up any box

204
00:13:11,339 --> 00:13:15,689
you open it up there's a system in there

205
00:13:13,139 --> 00:13:18,120
so the firmware inside gets deleted so

206
00:13:15,689 --> 00:13:19,769
anyone that's trying to tamper with the

207
00:13:18,120 --> 00:13:23,279
ATM they will not have access to the

208
00:13:19,769 --> 00:13:25,860
source code sometimes in our own mobile

209
00:13:23,279 --> 00:13:29,370
phone so it's the same concept but not

210
00:13:25,860 --> 00:13:32,189
exactly identical if I check the

211
00:13:29,370 --> 00:13:33,990
signature on the app because I use my

212
00:13:32,189 --> 00:13:39,959
certificate for signature if the

213
00:13:33,990 --> 00:13:41,819
certificate I have is not it's not the

214
00:13:39,959 --> 00:13:44,309
one they have so the apps and mine are

215
00:13:41,819 --> 00:13:46,860
not the same I closed it down

216
00:13:44,309 --> 00:13:49,499
that means the salmon has tampered with

217
00:13:46,860 --> 00:13:52,800
my app so it's not legit anymore and

218
00:13:49,499 --> 00:13:56,670
that's how we detect modification and

219
00:13:52,800 --> 00:13:59,699
then SSL binnen that's what we're going

220
00:13:56,670 --> 00:14:01,769
to discuss next and that's why I left it

221
00:13:59,699 --> 00:14:07,800
hang in there and I'll explain what it

222
00:14:01,769 --> 00:14:16,290
is in a minute so next SS adult

223
00:14:07,800 --> 00:14:18,829
communications so we have to

224
00:14:16,290 --> 00:14:21,870
encryption symmetrical and asymmetrical

225
00:14:18,829 --> 00:14:24,000
symmetrical the well-known one where I

226
00:14:21,870 --> 00:14:27,209
encrypt and gave you a key and you with

227
00:14:24,000 --> 00:14:29,730
them same key can decipher my message

228
00:14:27,209 --> 00:14:31,349
you can decrypt it but there's another

229
00:14:29,730 --> 00:14:34,949
kind of encryption where I say that I

230
00:14:31,350 --> 00:14:37,769
use this key as encryption part but you

231
00:14:34,949 --> 00:14:41,250
can only decrypt it with another key not

232
00:14:37,769 --> 00:14:43,319
the same one as for encryption so that's

233
00:14:41,250 --> 00:14:51,360
a private key and public key concept

234
00:14:43,319 --> 00:14:52,889
right this is Anna and Bob typical

235
00:14:51,360 --> 00:14:57,149
example both have a private and public

236
00:14:52,889 --> 00:15:00,480
key and if I want to send a message from

237
00:14:57,149 --> 00:15:04,470
an to Bob Anna can sign with their

238
00:15:00,480 --> 00:15:07,500
private Bob can decrypt it with a public

239
00:15:04,470 --> 00:15:09,509
key but never with his private key and

240
00:15:07,500 --> 00:15:13,920
just the other way around if I'm using a

241
00:15:09,509 --> 00:15:19,230
public key you can only decrypt it with

242
00:15:13,920 --> 00:15:22,639
Anna's private key that's why it is

243
00:15:19,230 --> 00:15:27,750
asymmetrical so we've shared previously

244
00:15:22,639 --> 00:15:33,690
propriety keys a symmetrical encryption

245
00:15:27,750 --> 00:15:38,399
is what's used by servers nowadays that

246
00:15:33,690 --> 00:15:42,959
we find on on the our browsers so we

247
00:15:38,399 --> 00:15:45,000
have h HT TP and HTTPS which is the

248
00:15:42,959 --> 00:15:50,430
secure protocol what's the difference

249
00:15:45,000 --> 00:15:53,130
here if it is HTTPS the server is giving

250
00:15:50,430 --> 00:15:54,779
me its public key so that my

251
00:15:53,130 --> 00:15:56,730
communication is encrypted and then

252
00:15:54,779 --> 00:16:01,290
decrypt it on the server with the

253
00:15:56,730 --> 00:16:01,800
private key so far supposedly it's so

254
00:16:01,290 --> 00:16:03,599
good

255
00:16:01,800 --> 00:16:06,569
it seems communication goes through a

256
00:16:03,600 --> 00:16:09,120
secure Channel I can never break up that

257
00:16:06,569 --> 00:16:12,120
encryption because if it moves from my

258
00:16:09,120 --> 00:16:13,589
computer to the server the server has a

259
00:16:12,120 --> 00:16:16,800
private key I didn't have it so it

260
00:16:13,589 --> 00:16:19,649
cannot read the message they also need

261
00:16:16,800 --> 00:16:22,639
to take into account and is kind of a

262
00:16:19,649 --> 00:16:26,100
security recommendation for a browser

263
00:16:22,639 --> 00:16:29,210
web site let's say you see the green

264
00:16:26,100 --> 00:16:31,790
lock means it is secure

265
00:16:29,210 --> 00:16:37,730
so the certificate given by the server

266
00:16:31,790 --> 00:16:42,709
is secure if I see an eye it means that

267
00:16:37,730 --> 00:16:47,000
is uncertified is usually H HTP and if

268
00:16:42,710 --> 00:16:48,710
it's crushed or red or a non-secure

269
00:16:47,000 --> 00:16:50,390
similar it means there is some problem

270
00:16:48,710 --> 00:16:51,830
with the certificate either it's been

271
00:16:50,390 --> 00:16:58,840
replaced with one that is not valid

272
00:16:51,830 --> 00:17:01,850
anymore or else it's expired and

273
00:16:58,840 --> 00:17:09,590
certificate example that is easily you

274
00:17:01,850 --> 00:17:15,050
is let's encrypt now we move on to

275
00:17:09,589 --> 00:17:18,730
bypass on SSL so there are two different

276
00:17:15,050 --> 00:17:21,710
kinds of communications on web servers

277
00:17:18,730 --> 00:17:23,560
data that are encrypted and those that

278
00:17:21,710 --> 00:17:27,230
are not included because they are

279
00:17:23,560 --> 00:17:29,300
transferred through HTTP if it's SSL

280
00:17:27,230 --> 00:17:32,780
communication I cannot see the

281
00:17:29,300 --> 00:17:34,820
information I've just explained that but

282
00:17:32,780 --> 00:17:40,010
it is not totally true and I'm about to

283
00:17:34,820 --> 00:17:42,790
explain it so if I open my browser and I

284
00:17:40,010 --> 00:17:46,640
use Wireshark as an interception

285
00:17:42,790 --> 00:17:50,800
Weierstrass checks the traffic of my

286
00:17:46,640 --> 00:17:54,170
computer to see the data on my network

287
00:17:50,800 --> 00:18:00,020
so I have white shark here and receive

288
00:17:54,170 --> 00:18:06,530
there's nothing to be seen yes that's a

289
00:18:00,020 --> 00:18:09,410
secure channel but we can run a SSL

290
00:18:06,530 --> 00:18:13,910
bypass and that's the idea of skipping

291
00:18:09,410 --> 00:18:16,480
it so what this is I have the server and

292
00:18:13,910 --> 00:18:20,900
I have the app whether it is wet or

293
00:18:16,480 --> 00:18:23,990
mobile server sends the public key and

294
00:18:20,900 --> 00:18:27,920
the certificate for the encryption but

295
00:18:23,990 --> 00:18:30,080
what if they stay in the middle so I run

296
00:18:27,920 --> 00:18:33,230
a man in the middle right in the middle

297
00:18:30,080 --> 00:18:36,320
of the communication that is and I get

298
00:18:33,230 --> 00:18:38,270
the certificate I encrypted myself and

299
00:18:36,320 --> 00:18:40,159
then to the user

300
00:18:38,270 --> 00:18:41,330
oh the client I sent another certificate

301
00:18:40,160 --> 00:18:43,429
in the end

302
00:18:41,330 --> 00:18:45,619
that communication always follows our

303
00:18:43,429 --> 00:18:49,340
encrypted channel but in between and

304
00:18:45,619 --> 00:18:50,928
breaking it up from the server to me

305
00:18:49,340 --> 00:18:53,470
there is a certificate I get that

306
00:18:50,929 --> 00:18:56,200
information I decrypt it and then

307
00:18:53,470 --> 00:18:59,269
following another certificate which is

308
00:18:56,200 --> 00:19:01,580
one I have but not the regular one

309
00:18:59,269 --> 00:19:09,259
I send information back to the third

310
00:19:01,580 --> 00:19:12,710
party so tools that we have sub-project

311
00:19:09,259 --> 00:19:18,820
Charles proxy Charles proxy and birth

312
00:19:12,710 --> 00:19:18,820
rate burglar said you can use them

313
00:19:21,850 --> 00:19:27,820
we'll see how would you break up that

314
00:19:23,720 --> 00:19:27,820
communication so

315
00:19:58,420 --> 00:20:11,380
as I was saying I've started my proxy

316
00:20:01,270 --> 00:20:15,040
here using birth this is bear only thing

317
00:20:11,380 --> 00:20:18,580
I have to say is go to the proxy tab and

318
00:20:15,040 --> 00:20:26,139
then options I click I want to start a

319
00:20:18,580 --> 00:20:30,730
proxy port 8080 and I would say for the

320
00:20:26,140 --> 00:20:33,580
whole interface the network interface on

321
00:20:30,730 --> 00:20:36,820
my device I have the proxy on the 8080

322
00:20:33,580 --> 00:20:39,040
port or a given address IP whatever you

323
00:20:36,820 --> 00:20:45,189
start your proxy which is 1918 perhaps

324
00:20:39,040 --> 00:20:49,889
same so I've decided it there it is

325
00:20:45,190 --> 00:20:49,890
running already and you can see it here

326
00:21:13,080 --> 00:21:25,199
so we have the browser settings here

327
00:21:18,299 --> 00:21:29,940
then proxy and there this proxy will run

328
00:21:25,200 --> 00:21:35,119
on port 8080 that's the local address

329
00:21:29,940 --> 00:21:43,799
right and that's where the perhaps it is

330
00:21:35,119 --> 00:21:50,399
if I say use burp that's where the

331
00:21:43,799 --> 00:21:52,440
communication is so yes communication is

332
00:21:50,399 --> 00:21:53,758
running through the proxy but I don't

333
00:21:52,440 --> 00:21:57,629
have the certificate to break down

334
00:21:53,759 --> 00:22:02,009
communication here you see um burp I can

335
00:21:57,629 --> 00:22:05,939
set up the certificate just a lie do you

336
00:22:02,009 --> 00:22:11,330
store it you save it and then on your

337
00:22:05,940 --> 00:22:11,330
settings for the browser security

338
00:22:14,750 --> 00:22:24,600
certificate and we can import it and

339
00:22:20,090 --> 00:22:26,250
already imported this one so this one's

340
00:22:24,600 --> 00:22:31,980
been boarded their certificate which

341
00:22:26,250 --> 00:22:34,530
means that from the server to my proxy

342
00:22:31,980 --> 00:22:37,760
and from my proxy to the website with

343
00:22:34,530 --> 00:22:37,760
another certificate right

344
00:22:44,040 --> 00:22:53,668
so green block here it is secure and

345
00:22:51,600 --> 00:23:00,330
this is not the certificate they wanted

346
00:22:53,669 --> 00:23:06,840
is the one that I've installed myself so

347
00:23:00,330 --> 00:23:09,120
this is the ask me a journal yes it's

348
00:23:06,840 --> 00:23:10,668
the a/s newspaper that's the name of the

349
00:23:09,120 --> 00:23:13,159
newspaper so I can see everything

350
00:23:10,669 --> 00:23:16,950
crystal clear

351
00:23:13,160 --> 00:23:20,370
that's an SSL bypass we are bypassing

352
00:23:16,950 --> 00:23:27,559
the encrypted communication that's what

353
00:23:20,370 --> 00:23:27,559
we are breaking up with so moving on

354
00:23:35,410 --> 00:23:43,630
what about mo bile or smartphones just

355
00:23:39,880 --> 00:23:47,650
the same as with websites just the same

356
00:23:43,630 --> 00:23:50,050
same concept and SSL bypass web or

357
00:23:47,650 --> 00:23:52,330
mobile is just the same we just need to

358
00:23:50,050 --> 00:23:57,250
set up the proxy for our mobile phone

359
00:23:52,330 --> 00:23:59,379
for our smart phone so did you get the

360
00:23:57,250 --> 00:24:10,630
certificate to set it up on your defies

361
00:23:59,380 --> 00:24:13,240
and through a proxy it goes I'll be

362
00:24:10,630 --> 00:24:15,640
using the app for the University of

363
00:24:13,240 --> 00:24:23,760
Seville to run my bath my purse on

364
00:24:15,640 --> 00:24:23,760
Android this is my virtual machine

365
00:24:35,000 --> 00:24:37,960
from starting

366
00:24:54,400 --> 00:24:59,500
so this is an Android emulated but this

367
00:24:57,460 --> 00:25:04,210
there is a free of charge version that

368
00:24:59,500 --> 00:25:06,940
you can download and play with it these

369
00:25:04,210 --> 00:25:08,440
is one of androids emulators as I said

370
00:25:06,940 --> 00:25:10,990
and I'll show how you set up the

371
00:25:08,440 --> 00:25:13,470
certificate same as with the web but for

372
00:25:10,990 --> 00:25:13,470
Android

373
00:25:29,700 --> 00:25:44,340
there it is first of all see where I am

374
00:25:35,970 --> 00:25:49,340
so am I locked on to this Wi-Fi since I

375
00:25:44,340 --> 00:25:49,340
am it works

376
00:26:01,620 --> 00:26:14,449
I have imprison it for a while to see if

377
00:26:04,440 --> 00:26:17,850
it works so I have to say change the

378
00:26:14,450 --> 00:26:21,960
network and so I have to say this goes

379
00:26:17,850 --> 00:26:32,668
through my IP address the one for my

380
00:26:21,960 --> 00:26:37,919
proxy machine 192 103 again pour this

381
00:26:32,669 --> 00:26:41,100
8080 I save it and there you seen the

382
00:26:37,919 --> 00:26:44,279
prep scene and I set up a proxy count

383
00:26:41,100 --> 00:26:49,799
lead into this IP address and the 8-bit

384
00:26:44,279 --> 00:26:52,940
port 8080 and so my smart phone

385
00:26:49,799 --> 00:26:55,020
communications are channeled through

386
00:26:52,940 --> 00:27:00,210
what I've just said it

387
00:26:55,020 --> 00:27:02,879
yes but live and once this is done I

388
00:27:00,210 --> 00:27:05,929
need to install the certificate and how

389
00:27:02,880 --> 00:27:10,789
do I do so same as before

390
00:27:05,929 --> 00:27:18,480
here it TTP

391
00:27:10,789 --> 00:27:20,940
colon slash burp for new Android

392
00:27:18,480 --> 00:27:23,820
versions 7 and onwards I can just push

393
00:27:20,940 --> 00:27:25,320
it this button here and it set it up for

394
00:27:23,820 --> 00:27:26,039
me this is previous version this is

395
00:27:25,320 --> 00:27:27,750
number 6

396
00:27:26,039 --> 00:27:33,090
another thing we need to do for it to

397
00:27:27,750 --> 00:27:36,720
work is we choose settings input an

398
00:27:33,090 --> 00:27:42,178
export certificate and I export it on

399
00:27:36,720 --> 00:27:44,250
p12 certificate dot p12

400
00:27:42,179 --> 00:27:49,260
I add a password I downloaded and

401
00:27:44,250 --> 00:27:52,279
install it on my cell phone and so I can

402
00:27:49,260 --> 00:27:52,279
have it on my device

403
00:27:53,820 --> 00:28:01,560
how can they have it on the cellphone

404
00:27:56,410 --> 00:28:06,960
well we need to again choose settings

405
00:28:01,560 --> 00:28:06,960
and then security

406
00:28:22,670 --> 00:28:29,510
so this is credentials and that's where

407
00:28:25,190 --> 00:28:37,370
I say the certificate you see there I

408
00:28:29,510 --> 00:28:46,129
click and I want it on my device so here

409
00:28:37,370 --> 00:28:48,799
same as before so same for the cell

410
00:28:46,130 --> 00:28:52,250
phone as with the web and if I'm in

411
00:28:48,799 --> 00:28:56,559
there if I get in there which is the AAS

412
00:28:52,250 --> 00:28:56,559
noob newspaper website

413
00:29:08,180 --> 00:29:13,030
and same same here

414
00:29:14,100 --> 00:29:19,129
with a university Servius website

415
00:29:27,770 --> 00:29:35,010
check this out here you see the user

416
00:29:31,680 --> 00:29:36,960
name and the password there's a man in

417
00:29:35,010 --> 00:29:40,440
the middle attack and these that was

418
00:29:36,960 --> 00:29:45,480
encrypted I've broken it and I conducted

419
00:29:40,440 --> 00:29:47,130
I've run in as is as a bypass so just

420
00:29:45,480 --> 00:29:58,650
one proxy a certificate that's all it

421
00:29:47,130 --> 00:30:06,810
taken and then for iOS devices it is the

422
00:29:58,650 --> 00:30:10,670
same except that same I need to set up

423
00:30:06,810 --> 00:30:14,820
the proxy for the phone so it is off I

424
00:30:10,670 --> 00:30:18,140
turned on manually I stayed IP address

425
00:30:14,820 --> 00:30:22,320
and port same with a certificate HTTP

426
00:30:18,140 --> 00:30:27,200
colon slash burp and I set it up just

427
00:30:22,320 --> 00:30:32,120
the same settings and everything and

428
00:30:27,200 --> 00:30:35,580
just like that on Android and on iOS

429
00:30:32,120 --> 00:30:39,050
with we've broken the communications

430
00:30:35,580 --> 00:30:39,050
we've we've broken them up

431
00:30:40,910 --> 00:30:53,770
so whatever Twitter or any other app we

432
00:30:45,560 --> 00:30:59,200
can test it and see that on the alert

433
00:30:53,770 --> 00:30:59,200
tac4 burp you get this message

434
00:30:59,980 --> 00:31:06,920
well the SSL has failed and so we cannot

435
00:31:04,010 --> 00:31:11,750
lock we did not manage to break that

436
00:31:06,920 --> 00:31:13,910
chain up and so further later we will

437
00:31:11,750 --> 00:31:20,270
explain why and how we can keep it up

438
00:31:13,910 --> 00:31:22,880
but before that let me say because this

439
00:31:20,270 --> 00:31:26,629
happened to me back in the day with

440
00:31:22,880 --> 00:31:28,460
Android versions actually well let me

441
00:31:26,630 --> 00:31:29,090
explain what it to happen what happened

442
00:31:28,460 --> 00:31:31,580
to me

443
00:31:29,090 --> 00:31:35,149
did same thing I've just done but there

444
00:31:31,580 --> 00:31:37,189
came a point for a time where the

445
00:31:35,150 --> 00:31:40,480
practice it was empty nothing was going

446
00:31:37,190 --> 00:31:43,010
on nothing

447
00:31:40,480 --> 00:31:45,980
nothing going through the proxy and this

448
00:31:43,010 --> 00:31:48,950
is so very weird this is so wrong

449
00:31:45,980 --> 00:31:52,750
so I started checking would I've seen

450
00:31:48,950 --> 00:31:56,480
now so device certificate burp or some

451
00:31:52,750 --> 00:31:59,780
proxy setup was right making sure the

452
00:31:56,480 --> 00:32:03,860
certificate is a valid one it was

453
00:31:59,780 --> 00:32:06,950
alright so he same but but would what

454
00:32:03,860 --> 00:32:10,610
was happening so I looked into it and I

455
00:32:06,950 --> 00:32:13,700
realized that undred version from number

456
00:32:10,610 --> 00:32:16,879
700 onwards these net were said app

457
00:32:13,700 --> 00:32:20,690
changes the combinations change and now

458
00:32:16,880 --> 00:32:24,640
just done differently so Android from

459
00:32:20,690 --> 00:32:27,300
this version onwards has released a

460
00:32:24,640 --> 00:32:31,210
method

461
00:32:27,300 --> 00:32:39,389
to set up the network security so what

462
00:32:31,210 --> 00:32:43,950
does it do on the Android manifest file

463
00:32:39,390 --> 00:32:43,950
sorry about that my phone's ringing

464
00:32:45,000 --> 00:32:56,620
on the Android manifest file they've had

465
00:32:52,960 --> 00:33:03,640
the security setup which is an XML file

466
00:32:56,620 --> 00:33:06,729
where I specify what's the security say

467
00:33:03,640 --> 00:33:08,890
set up for my app or what the

468
00:33:06,730 --> 00:33:12,220
certificate is so on Android manifest

469
00:33:08,890 --> 00:33:15,580
which is an XML file for every Android

470
00:33:12,220 --> 00:33:20,700
app where I state the pet mints the main

471
00:33:15,580 --> 00:33:29,350
purpose and everything is stated there I

472
00:33:20,700 --> 00:33:37,630
also state the security setup so we've

473
00:33:29,350 --> 00:33:42,429
said you need to take the network

474
00:33:37,630 --> 00:33:47,050
security config as a fire and XML folder

475
00:33:42,430 --> 00:33:49,410
there is an echo security file config

476
00:33:47,050 --> 00:33:49,409
file

477
00:33:50,490 --> 00:33:56,170
what is that you whatever tax are needed

478
00:33:53,920 --> 00:34:00,100
and so we say for these domains

479
00:33:56,170 --> 00:34:02,860
I need this certificate that's the one

480
00:34:00,100 --> 00:34:06,669
that validates what they want and with

481
00:34:02,860 --> 00:34:08,830
that if I try to conduct an SSL Viper's

482
00:34:06,670 --> 00:34:18,300
since there is no certificate checking

483
00:34:08,830 --> 00:34:18,299
it out it doesn't work but go in deeper

484
00:34:18,440 --> 00:34:28,550
I realize where this file where you need

485
00:34:22,668 --> 00:34:30,980
to specify that you've got a URL and you

486
00:34:28,550 --> 00:34:35,210
need to import the c8u one two years

487
00:34:30,980 --> 00:34:37,609
well it is a pain because there I need

488
00:34:35,210 --> 00:34:40,609
to produce another app so that I can

489
00:34:37,609 --> 00:34:42,589
reuse it again so I found this method

490
00:34:40,609 --> 00:34:46,069
came up with this method the same file

491
00:34:42,589 --> 00:34:48,710
but instead of saying this is the URL

492
00:34:46,069 --> 00:34:50,960
this is the domain and this is the

493
00:34:48,710 --> 00:34:55,909
certificate what about using the systems

494
00:34:50,960 --> 00:34:59,990
and the users so if we opt this setup to

495
00:34:55,909 --> 00:35:07,040
the app it works just the same as we've

496
00:34:59,990 --> 00:35:15,770
done so far let me show you a short demo

497
00:35:07,040 --> 00:35:22,250
on how this can be run we'll be using

498
00:35:15,770 --> 00:35:26,540
apktool so you send the APK file as used

499
00:35:22,250 --> 00:35:29,480
on android and APK 2d compiles it into

500
00:35:26,540 --> 00:35:36,099
an intermediate code which is not Java

501
00:35:29,480 --> 00:35:39,410
or assembler it is a color division and

502
00:35:36,099 --> 00:35:42,940
we will get the Android manifest at the

503
00:35:39,410 --> 00:35:42,940
file and D compile it

504
00:36:06,569 --> 00:36:24,308
can you see this better now right so

505
00:36:16,299 --> 00:36:38,470
here I have a PK tool which is a tool is

506
00:36:24,309 --> 00:36:41,890
the be safe first one is decode to

507
00:36:38,470 --> 00:36:49,359
decompile and second one is built to

508
00:36:41,890 --> 00:37:00,038
build what's on our ap cave so we use

509
00:36:49,359 --> 00:37:03,130
apktool d-4d compiling this is the

510
00:37:00,039 --> 00:37:08,940
virtual secretariat app for the

511
00:37:03,130 --> 00:37:12,299
university and so the demo rounds

512
00:37:08,940 --> 00:37:12,299
decompose at all

513
00:37:23,460 --> 00:37:34,380
and that's a folder

514
00:37:26,520 --> 00:37:34,380
sorry comfy sea views demo

515
00:37:42,960 --> 00:37:47,040
so this is a structure a folder

516
00:37:45,329 --> 00:37:50,160
structure where I have my Android

517
00:37:47,040 --> 00:37:55,558
manifest the file we'll be using and in

518
00:37:50,160 --> 00:37:59,520
here we need to find an XML a folder if

519
00:37:55,559 --> 00:38:03,119
it's not we will make it but we should

520
00:37:59,520 --> 00:38:11,240
have one here if not we just make it

521
00:38:03,119 --> 00:38:15,020
ourselves that's what we have today

522
00:38:11,240 --> 00:38:15,020
Andre manifest first

523
00:38:19,530 --> 00:38:30,240
OpenNet and where it says application

524
00:38:25,350 --> 00:38:30,240
android column network

525
00:38:31,190 --> 00:38:57,420
security convict equal at xml / network

526
00:38:50,520 --> 00:39:04,230
security convict dot data no need for

527
00:38:57,420 --> 00:39:10,440
xml so we've added that feature to the

528
00:39:04,230 --> 00:39:12,860
android manifest so i save it and here

529
00:39:10,440 --> 00:39:12,860
you have it

530
00:39:14,760 --> 00:39:22,320
been ready have this little folder and

531
00:39:19,680 --> 00:39:26,490
here you see there's nothing about it

532
00:39:22,320 --> 00:39:28,140
same folder file rather where i stayed

533
00:39:26,490 --> 00:39:31,950
with the use of certificates to be used

534
00:39:28,140 --> 00:39:35,549
are i have to copy it first and take it

535
00:39:31,950 --> 00:39:39,600
here to the network folder if there's

536
00:39:35,550 --> 00:39:41,840
not such a folder i just open one create

537
00:39:39,600 --> 00:39:41,839
one

538
00:39:55,440 --> 00:40:07,650
this money made Eve take a melon

539
00:40:00,930 --> 00:40:07,649
yeah illegal okay xml and then copy copy

540
00:40:08,369 --> 00:40:26,999
net security come for xml for a while

541
00:40:21,460 --> 00:40:30,519
ago PL it is copied and now back again

542
00:40:26,999 --> 00:40:32,649
where I have my demo folder I've changed

543
00:40:30,519 --> 00:40:34,689
that I changed the Android manifest and

544
00:40:32,650 --> 00:40:41,079
I've added the folder and I recompile it

545
00:40:34,690 --> 00:40:47,670
again I stayed what the folder is and I

546
00:40:41,079 --> 00:40:48,940
say this is savea's dot modified dot apk

547
00:40:47,670 --> 00:40:57,940
alright

548
00:40:48,940 --> 00:40:58,700
once again I compiled it all in order to

549
00:40:57,940 --> 00:41:00,020
use this app

550
00:40:58,700 --> 00:41:05,720
[Music]

551
00:41:00,020 --> 00:41:09,080
same as with the SSL bypass but instead

552
00:41:05,720 --> 00:41:11,270
using this method so we have the app we

553
00:41:09,080 --> 00:41:26,360
just set it up on our device and in just

554
00:41:11,270 --> 00:41:31,310
reading next on is with a new version

555
00:41:26,360 --> 00:41:36,560
something similar happens where we need

556
00:41:31,310 --> 00:41:39,620
to go in team general part of side of

557
00:41:36,560 --> 00:41:42,049
information so there is the settings set

558
00:41:39,620 --> 00:41:47,299
in the sense produce information we push

559
00:41:42,050 --> 00:41:50,000
it and we need to validate the

560
00:41:47,300 --> 00:41:51,800
certificate otherwise is off it's

561
00:41:50,000 --> 00:41:56,560
happened that to me that I cut the

562
00:41:51,800 --> 00:42:02,000
certificate same as with any other case

563
00:41:56,560 --> 00:42:03,650
it was working it was working and so why

564
00:42:02,000 --> 00:42:06,530
is it not working now because there was

565
00:42:03,650 --> 00:42:11,080
a dull factor so you need to go in to

566
00:42:06,530 --> 00:42:15,560
produce information and confidence

567
00:42:11,080 --> 00:42:17,890
Sutton and see a needs to be on for it

568
00:42:15,560 --> 00:42:17,890
to work

569
00:42:25,380 --> 00:42:32,890
so I just wanted to say that essence L

570
00:42:29,710 --> 00:42:37,120
bypass comes with this problem in recent

571
00:42:32,890 --> 00:42:40,770
versions but next the larger problem

572
00:42:37,120 --> 00:42:45,250
many people have when working in

573
00:42:40,770 --> 00:42:50,320
auditing of mobile apps and as we've

574
00:42:45,250 --> 00:42:51,640
seen on Twitter there is these fail so

575
00:42:50,320 --> 00:42:54,910
there's a failure in the communication

576
00:42:51,640 --> 00:43:03,190
so SSL fails and why is that because we

577
00:42:54,910 --> 00:43:06,310
implement SSL pinon same as before with

578
00:43:03,190 --> 00:43:14,320
the SSL bypass and as I was sayin what

579
00:43:06,310 --> 00:43:16,690
if the app or the web query sends a

580
00:43:14,320 --> 00:43:19,390
query about what that if what what's

581
00:43:16,690 --> 00:43:21,430
this certificate you're given me that

582
00:43:19,390 --> 00:43:24,759
way you can say whether it's legit or

583
00:43:21,430 --> 00:43:28,480
not I can say this certificate you're

584
00:43:24,760 --> 00:43:30,310
given me I have stored it with the hash

585
00:43:28,480 --> 00:43:36,640
code and I check whether it is a valid

586
00:43:30,310 --> 00:43:38,350
or not that's SSL pinning it is just

587
00:43:36,640 --> 00:43:43,420
checking the hash code for the

588
00:43:38,350 --> 00:43:46,690
certificate that's it

589
00:43:43,420 --> 00:43:48,400
start the HTTP communication and

590
00:43:46,690 --> 00:43:51,519
certificates grunted and then the

591
00:43:48,400 --> 00:43:54,609
abscess all right but before using it

592
00:43:51,519 --> 00:43:57,759
I'll try and see certificates I've

593
00:43:54,609 --> 00:43:59,589
stored or saved and let's see if they

594
00:43:57,760 --> 00:44:01,630
are the same or not if it's the same

595
00:43:59,589 --> 00:44:06,630
active on with the communication if not

596
00:44:01,630 --> 00:44:13,299
I thought it I hope the communication

597
00:44:06,630 --> 00:44:17,039
that's what SSL pinyin is all about and

598
00:44:13,299 --> 00:44:20,200
that's what happened with Twitter

599
00:44:17,039 --> 00:44:24,339
because it implements as as a pin

600
00:44:20,200 --> 00:44:32,769
we cannot bypass SSL as we've done

601
00:44:24,339 --> 00:44:35,859
before we need to go bit further so what

602
00:44:32,769 --> 00:44:38,200
about SSL pinon what do we do it's a

603
00:44:35,859 --> 00:44:41,078
mask there's nothing we can do

604
00:44:38,200 --> 00:44:45,598
well that's not it we'll see in a minute

605
00:44:41,079 --> 00:44:49,660
that there are other measures on how to

606
00:44:45,599 --> 00:44:53,519
break the SSL Binion if it's poorly

607
00:44:49,660 --> 00:44:59,558
implemented or in a different way so

608
00:44:53,519 --> 00:45:03,758
first example here which is an SL SL

609
00:44:59,559 --> 00:45:05,619
bypass for SSL pinon with a root on the

610
00:45:03,759 --> 00:45:09,490
device so if I have a root access

611
00:45:05,619 --> 00:45:12,460
modifies I can follow some techniques in

612
00:45:09,490 --> 00:45:17,319
order to break the communication what do

613
00:45:12,460 --> 00:45:18,970
I need to do making sure that the

614
00:45:17,319 --> 00:45:21,369
certificate is not checked or the

615
00:45:18,970 --> 00:45:26,169
certificate that is indeed check is the

616
00:45:21,369 --> 00:45:29,759
one I want the fake there's several ways

617
00:45:26,170 --> 00:45:29,759
around it first one

618
00:45:31,470 --> 00:45:43,660
tools there are automated tools to

619
00:45:36,060 --> 00:45:51,430
deactivate SSL pinon but you need root

620
00:45:43,660 --> 00:45:53,560
access or a jailbreak into the device so

621
00:45:51,430 --> 00:45:55,000
let me explain what these tools are I

622
00:45:53,560 --> 00:45:57,850
think that's what people enjoyed the

623
00:45:55,000 --> 00:46:00,250
most because it is a big button tool

624
00:45:57,850 --> 00:46:03,850
easy because it is installed on your

625
00:46:00,250 --> 00:46:06,090
device you push the button and so the

626
00:46:03,850 --> 00:46:09,610
problem is solved

627
00:46:06,090 --> 00:46:11,520
that's why on Android we have SSL

628
00:46:09,610 --> 00:46:15,700
unpinning

629
00:46:11,520 --> 00:46:18,009
we can have so many more but this is one

630
00:46:15,700 --> 00:46:21,339
is the most used and the most the best

631
00:46:18,010 --> 00:46:28,240
known one but you know but before using

632
00:46:21,340 --> 00:46:31,150
this tool we need to have which is which

633
00:46:28,240 --> 00:46:33,399
is this what we have super as you if we

634
00:46:31,150 --> 00:46:37,540
want to have that on our Android device

635
00:46:33,400 --> 00:46:40,930
we need to see how to stall at Super as

636
00:46:37,540 --> 00:46:42,670
you on our Android device that we have

637
00:46:40,930 --> 00:46:44,799
different modules every mobile is

638
00:46:42,670 --> 00:46:48,460
different when you are about to set it

639
00:46:44,800 --> 00:46:51,220
up so you need to have root access you

640
00:46:48,460 --> 00:46:54,480
can use this super su and once you have

641
00:46:51,220 --> 00:47:00,209
it we need to install the xposed

642
00:46:54,480 --> 00:47:04,510
framework so what we need to do is

643
00:47:00,210 --> 00:47:07,680
simple framework install and update and

644
00:47:04,510 --> 00:47:07,680
that's it

645
00:47:11,500 --> 00:47:19,250
so we find the SSL and pinon we push the

646
00:47:15,770 --> 00:47:23,210
button here you install it you restart

647
00:47:19,250 --> 00:47:25,100
the cellphone and it's already ready so

648
00:47:23,210 --> 00:47:32,030
we can follow the same technique as with

649
00:47:25,100 --> 00:47:38,810
SSL bypass but bypassing measures that

650
00:47:32,030 --> 00:47:40,850
we had the emulators are they have will

651
00:47:38,810 --> 00:47:43,580
you cannot install it there you need to

652
00:47:40,850 --> 00:47:47,839
have a physical device because this

653
00:47:43,580 --> 00:47:50,290
one's only been done for a RM and if you

654
00:47:47,840 --> 00:47:53,320
didn't know that let me tell you that

655
00:47:50,290 --> 00:47:55,790
usually they have an underline area and

656
00:47:53,320 --> 00:48:00,260
infrastructure and these app is only

657
00:47:55,790 --> 00:48:03,290
been done for IRM infrastructures so my

658
00:48:00,260 --> 00:48:05,930
emulator is running on Intel as oh it

659
00:48:03,290 --> 00:48:12,670
doesn't work it says that architecture

660
00:48:05,930 --> 00:48:16,169
is incompatible so it it doesn't work

661
00:48:12,670 --> 00:48:16,170
then iOS

662
00:48:19,210 --> 00:48:32,840
we have SSL Killswitch Ching simple -

663
00:48:28,340 --> 00:48:36,200
you know Syria

664
00:48:32,840 --> 00:48:38,120
so Syria when jailbreaking so

665
00:48:36,200 --> 00:48:40,460
jailbreaking means that you install

666
00:48:38,120 --> 00:48:43,460
Syria which is a repository and you need

667
00:48:40,460 --> 00:48:46,880
to solve the right repository to have

668
00:48:43,460 --> 00:48:49,520
the SSL Killswitch installed if you lock

669
00:48:46,880 --> 00:48:52,250
it up on the internet you have a great

670
00:48:49,520 --> 00:48:56,360
manual to see how it is done but I found

671
00:48:52,250 --> 00:48:58,730
it on Syria's repository so only thing

672
00:48:56,360 --> 00:49:01,840
you have to do is jailbreak it restart

673
00:48:58,730 --> 00:49:06,320
the device and it's already there so

674
00:49:01,840 --> 00:49:10,190
just like this with also bypassed the

675
00:49:06,320 --> 00:49:13,250
SSL bypass you can go have a mobile bi

676
00:49:10,190 --> 00:49:19,220
or eyebrows a demo for you to see how

677
00:49:13,250 --> 00:49:21,580
works if it works if it connects with

678
00:49:19,220 --> 00:49:21,580
the phone

679
00:49:43,680 --> 00:49:46,680
mento

680
00:50:11,870 --> 00:50:15,430
Molly yeah

681
00:50:22,390 --> 00:50:28,450
went away back away I talked about it I

682
00:50:25,049 --> 00:50:37,170
just wanted to see how it works is

683
00:50:28,450 --> 00:50:41,169
connecting now well this is my iOS phone

684
00:50:37,170 --> 00:50:48,880
and I couldn't show you earlier because

685
00:50:41,170 --> 00:50:52,869
it wasn't online so I'm logged onto the

686
00:50:48,880 --> 00:51:04,119
Wi-Fi now can you see I don't know if I

687
00:50:52,869 --> 00:51:06,569
can make the letter size any bigger I am

688
00:51:04,119 --> 00:51:06,569
buried on my own

689
00:51:31,570 --> 00:51:38,100
why I don't know sir get a connector

690
00:51:35,100 --> 00:51:38,100
Molly

691
00:51:47,560 --> 00:51:56,710
why is he interconnected my apologies

692
00:51:53,680 --> 00:51:58,270
but the connection doesn't seem to be

693
00:51:56,710 --> 00:52:00,820
working but anyway let me just show you

694
00:51:58,270 --> 00:52:04,600
how it works here on my mobile mobile

695
00:52:00,820 --> 00:52:08,140
phone this is Wi-Fi configuration here

696
00:52:04,600 --> 00:52:11,290
we need to tell the system that it has

697
00:52:08,140 --> 00:52:16,470
to go through a proxy air which is

698
00:52:11,290 --> 00:52:16,470
manual we need to tell the system

699
00:52:32,950 --> 00:52:47,828
manual proxy and here we need to type

700
00:52:39,420 --> 00:52:58,140
the IP address I need to tell the system

701
00:52:47,829 --> 00:53:07,710
go through 104 201 and the port is 80 88

702
00:52:58,140 --> 00:53:11,799
so that's that done and now I go to http

703
00:53:07,710 --> 00:53:16,540
double slash pool I don't know if you

704
00:53:11,800 --> 00:53:18,430
can see anything from that distance but

705
00:53:16,540 --> 00:53:22,089
this is where you can install a

706
00:53:18,430 --> 00:53:25,569
certificate it asks you do you allow it

707
00:53:22,089 --> 00:53:30,700
yes I say yes we need to type in the

708
00:53:25,570 --> 00:53:33,760
code and then we press to install that's

709
00:53:30,700 --> 00:53:37,348
verification done and now for the second

710
00:53:33,760 --> 00:53:43,210
step I need to go to the general area

711
00:53:37,349 --> 00:53:47,680
here I go to information and right at

712
00:53:43,210 --> 00:53:52,780
the end it says settings or adjustments

713
00:53:47,680 --> 00:53:54,190
for a system security I need to accept

714
00:53:52,780 --> 00:53:58,300
that because otherwise you won't be

715
00:53:54,190 --> 00:54:03,450
installed properly as the certificate

716
00:53:58,300 --> 00:54:06,760
installed and this is the SSD kill sweet

717
00:54:03,450 --> 00:54:12,819
it says it's been installed I have

718
00:54:06,760 --> 00:54:15,300
installed the application correctly and

719
00:54:12,819 --> 00:54:21,210
then any application even Apple

720
00:54:15,300 --> 00:54:21,210
Communications will work you see

721
00:54:23,250 --> 00:54:32,559
well any application I use for instance

722
00:54:27,250 --> 00:54:35,410
eBay well look at that long list of

723
00:54:32,559 --> 00:54:38,010
applications that are working including

724
00:54:35,410 --> 00:54:45,009
Google as well it's just once they go to

725
00:54:38,010 --> 00:54:50,109
to break that sever so simple right you

726
00:54:45,010 --> 00:54:55,569
can understand that this is a tool which

727
00:54:50,109 --> 00:55:00,460
is good for SSL pinning breaking liked

728
00:54:55,569 --> 00:55:04,990
risky tools that I used to implement SSL

729
00:55:00,460 --> 00:55:09,700
pinning tools now let's continue with

730
00:55:04,990 --> 00:55:11,439
the next section of my presentation well

731
00:55:09,700 --> 00:55:20,770
we said there are different tools for

732
00:55:11,440 --> 00:55:24,309
SSL pinning bypass and then we need to

733
00:55:20,770 --> 00:55:28,630
see if those tools are common if they

734
00:55:24,309 --> 00:55:31,660
can be jailbroken because otherwise they

735
00:55:28,630 --> 00:55:35,290
might not work this is a I call it a fad

736
00:55:31,660 --> 00:55:40,240
button too but sometimes the application

737
00:55:35,290 --> 00:55:43,058
then crashes it can't be installed we

738
00:55:40,240 --> 00:55:47,618
can encounter different different

739
00:55:43,059 --> 00:55:51,119
problems or maybe the device we're using

740
00:55:47,619 --> 00:55:54,730
cannot be routed because it's

741
00:55:51,119 --> 00:55:55,720
proprietary for whatever reason we can't

742
00:55:54,730 --> 00:55:58,480
do it

743
00:55:55,720 --> 00:56:01,828
on that particular device or maybe there

744
00:55:58,480 --> 00:56:06,930
is a control on that app to detect a

745
00:56:01,829 --> 00:56:12,160
routing or jailbreaking on that device

746
00:56:06,930 --> 00:56:15,069
and in that case this solution will not

747
00:56:12,160 --> 00:56:17,440
work right so there what other

748
00:56:15,069 --> 00:56:20,349
possibilities do we have this is the

749
00:56:17,440 --> 00:56:21,850
next process it would be modifying the

750
00:56:20,349 --> 00:56:29,000
app

751
00:56:21,850 --> 00:56:32,150
just like we use the apktool

752
00:56:29,000 --> 00:56:38,180
or hoop there are different ways

753
00:56:32,150 --> 00:56:41,150
different tools the way to do it would

754
00:56:38,180 --> 00:56:43,640
be modifying the app checking the

755
00:56:41,150 --> 00:56:47,630
different process for SSL pinning to be

756
00:56:43,640 --> 00:56:50,060
done and also modifying the certificate

757
00:56:47,630 --> 00:56:57,320
or the signature well here we see the

758
00:56:50,060 --> 00:56:59,630
steps first creating a store for empty

759
00:56:57,320 --> 00:57:02,480
keys you can see the different steps

760
00:56:59,630 --> 00:57:06,320
that we're going to be covering and

761
00:57:02,480 --> 00:57:09,230
running through now this is where we can

762
00:57:06,320 --> 00:57:13,330
see that in this particular application

763
00:57:09,230 --> 00:57:16,190
there was local task manager II

764
00:57:13,330 --> 00:57:18,590
manager factory that's where we can

765
00:57:16,190 --> 00:57:21,380
modify things and change the certificate

766
00:57:18,590 --> 00:57:23,960
so that we can have our certificates and

767
00:57:21,380 --> 00:57:25,820
just by compiling that application you

768
00:57:23,960 --> 00:57:30,980
don't need any more tools it would just

769
00:57:25,820 --> 00:57:34,910
work but logically if we touch the

770
00:57:30,980 --> 00:57:37,670
source code on Android or iOS for that

771
00:57:34,910 --> 00:57:40,759
application then that's going to fail if

772
00:57:37,670 --> 00:57:43,760
we need to modify the source code for

773
00:57:40,760 --> 00:57:49,880
one reason or another we'll end up in

774
00:57:43,760 --> 00:57:52,790
the application closing is not a a good

775
00:57:49,880 --> 00:57:58,180
method at the end of a day most of our

776
00:57:52,790 --> 00:58:00,800
time is just cumbersome for what it does

777
00:57:58,180 --> 00:58:04,850
but look at this quote up on this screen

778
00:58:00,800 --> 00:58:07,960
a bad method is better than having no

779
00:58:04,850 --> 00:58:07,960
method at all right

780
00:58:09,289 --> 00:58:16,650
so when we talk about modifying the app

781
00:58:13,289 --> 00:58:21,299
well it would be my last resort if I had

782
00:58:16,650 --> 00:58:26,309
no other way to do it then I would go

783
00:58:21,299 --> 00:58:30,329
about it that way but fortunately we

784
00:58:26,309 --> 00:58:31,979
have more methods to resort to for

785
00:58:30,329 --> 00:58:38,219
instance let me just start with an

786
00:58:31,979 --> 00:58:41,549
explanation of what hooking is and then

787
00:58:38,219 --> 00:58:49,079
we'll continue with the pinning SSL

788
00:58:41,549 --> 00:58:52,140
pinning what is hooking then a hook it

789
00:58:49,079 --> 00:58:56,159
reminds me of Captain Hook and Peter Pan

790
00:58:52,140 --> 00:58:59,009
it means that we hook up to a process

791
00:58:56,159 --> 00:59:02,959
that's running on the memory hooking

792
00:58:59,009 --> 00:59:05,609
means debugging a function but

793
00:59:02,959 --> 00:59:08,759
dynamically so that is a function that's

794
00:59:05,609 --> 00:59:12,299
running on the memory dynamically not

795
00:59:08,759 --> 00:59:15,239
with static code we would be modifying

796
00:59:12,299 --> 00:59:18,809
it dynamically then so that the outcomes

797
00:59:15,239 --> 00:59:22,319
are what we need here we see the diagram

798
00:59:18,809 --> 00:59:25,079
a process that goes through a function

799
00:59:22,319 --> 00:59:27,419
and it gives me an outcome but the

800
00:59:25,079 --> 00:59:29,309
second possibility through hooking

801
00:59:27,419 --> 00:59:31,709
instead of going through the normal

802
00:59:29,309 --> 00:59:36,209
function it will go through a different

803
00:59:31,709 --> 00:59:38,129
function I set that happens dynamically

804
00:59:36,209 --> 00:59:43,259
on the memory and then the outcome will

805
00:59:38,130 --> 00:59:45,599
be different how can we go about hooking

806
00:59:43,259 --> 00:59:49,529
it sounds more complex than it is

807
00:59:45,599 --> 00:59:55,709
actually because we now have tools that

808
00:59:49,529 --> 00:59:59,159
allow two who come to processes in a

809
00:59:55,709 --> 01:00:05,848
very simple manner one of the tools is

810
00:59:59,159 --> 01:00:07,819
Frieda hooking to where as the process

811
01:00:05,849 --> 01:00:11,039
is running on the memory through

812
01:00:07,819 --> 01:00:14,880
JavaScript code which is simple then I

813
01:00:11,039 --> 01:00:17,759
say hey this function that's running on

814
01:00:14,880 --> 01:00:21,160
this device instead of saying true you

815
01:00:17,759 --> 01:00:26,200
should say false or it should say no

816
01:00:21,160 --> 01:00:30,549
and thanks to that the process modifies

817
01:00:26,200 --> 01:00:35,038
the app so this is one of the possible

818
01:00:30,549 --> 01:00:38,920
tools freedom which we'll be using I

819
01:00:35,039 --> 01:00:42,329
would now like to show you a case for

820
01:00:38,920 --> 01:00:45,579
you to see how to skip the routing

821
01:00:42,329 --> 01:00:47,470
detection on an Android device because

822
01:00:45,579 --> 01:00:51,009
there's a function that says hey this

823
01:00:47,470 --> 01:00:56,169
mobile phone has been routed is ruses

824
01:00:51,009 --> 01:01:00,009
well I tell the function to say false

825
01:00:56,170 --> 01:01:05,970
for instance or say no and then it would

826
01:01:00,009 --> 01:01:09,369
skip that part in the case if we use

827
01:01:05,970 --> 01:01:12,970
freedom before we use it we need to

828
01:01:09,369 --> 01:01:17,019
provide a file in JavaScript with a

829
01:01:12,970 --> 01:01:20,109
particular structure well this is one

830
01:01:17,019 --> 01:01:24,008
possible structure but there are many

831
01:01:20,109 --> 01:01:26,680
different sites where you can find files

832
01:01:24,009 --> 01:01:32,279
like this with different examples but

833
01:01:26,680 --> 01:01:37,078
basically when we click we need to say

834
01:01:32,279 --> 01:01:37,079
when there's a main main activity

835
01:01:37,440 --> 01:01:42,359
instead of doing a then do B

836
01:01:48,020 --> 01:01:54,800
works on this video when I'm going to

837
01:01:51,020 --> 01:01:56,480
click on the function what would happen

838
01:01:54,800 --> 01:01:58,730
normally is that the application will

839
01:01:56,480 --> 01:02:01,910
close right but look what happens now

840
01:01:58,730 --> 01:02:05,180
I'm calling on Frieda I provide it with

841
01:02:01,910 --> 01:02:09,170
a JavaScript file and the parameters of

842
01:02:05,180 --> 01:02:14,540
the process you see how Frieda gets on

843
01:02:09,170 --> 01:02:17,410
with it and the time comes when he says

844
01:02:14,540 --> 01:02:22,130
the on clip has been modified

845
01:02:17,410 --> 01:02:25,460
well once that modification has been

846
01:02:22,130 --> 01:02:28,100
done a I press ok and that's how it

847
01:02:25,460 --> 01:02:31,220
skipped it the application has been

848
01:02:28,100 --> 01:02:34,190
modified and that's done not a on the

849
01:02:31,220 --> 01:02:38,240
static code but dynamically through

850
01:02:34,190 --> 01:02:41,990
JavaScript I've said if this happens

851
01:02:38,240 --> 01:02:44,569
then they should be the outcome now's

852
01:02:41,990 --> 01:02:48,290
the idea for hooking write and modifying

853
01:02:44,570 --> 01:02:53,690
a function so that the final outcome is

854
01:02:48,290 --> 01:02:56,660
different let's continue now and see how

855
01:02:53,690 --> 01:03:01,490
we could do the same thing to skip SSL

856
01:02:56,660 --> 01:03:03,620
pin pinning because we want to skip that

857
01:03:01,490 --> 01:03:04,700
checking of the certificates rights

858
01:03:03,620 --> 01:03:08,960
that's the idea

859
01:03:04,700 --> 01:03:14,779
so the hooking tool in instead of

860
01:03:08,960 --> 01:03:17,020
checking it you will skip it for a

861
01:03:14,780 --> 01:03:19,610
mobile phone without rooting or

862
01:03:17,020 --> 01:03:23,990
jailbreak I think this is the best way

863
01:03:19,610 --> 01:03:27,710
to do the bypass how can we go about it

864
01:03:23,990 --> 01:03:34,549
first decompiling the app to add a

865
01:03:27,710 --> 01:03:38,900
Frieda framework so that instead of

866
01:03:34,550 --> 01:03:41,210
giving it the JavaScript freedom will

867
01:03:38,900 --> 01:03:45,590
provide us with a file that can be

868
01:03:41,210 --> 01:03:50,840
embedded in the application just like we

869
01:03:45,590 --> 01:03:53,960
did with the apk to of decompiling then

870
01:03:50,840 --> 01:03:56,859
compiling same thing but providing the

871
01:03:53,960 --> 01:03:59,980
Frieda library

872
01:03:56,859 --> 01:04:04,720
so that when the application starts to

873
01:03:59,980 --> 01:04:08,759
run that functionality will work without

874
01:04:04,720 --> 01:04:12,339
any problem the idea decompiling the app

875
01:04:08,759 --> 01:04:16,329
adding the frida framework cache and

876
01:04:12,339 --> 01:04:19,239
then some other functions all of that is

877
01:04:16,329 --> 01:04:25,180
then compiled again on the app and then

878
01:04:19,239 --> 01:04:30,880
it is a it works on gadget mode let's

879
01:04:25,180 --> 01:04:35,259
run the demo for you to see just for you

880
01:04:30,880 --> 01:04:39,989
to see how simple it is because

881
01:04:35,259 --> 01:04:39,989
unfortunately we have a tool called

882
01:04:40,200 --> 01:04:52,480
objection objection runs on freedom as

883
01:04:45,910 --> 01:04:56,410
well it uses freedom and thanks to that

884
01:04:52,480 --> 01:04:58,559
I can patch I can do all these things

885
01:04:56,410 --> 01:05:06,489
that we're going through but

886
01:04:58,559 --> 01:05:08,789
automatically patching apk that's what I

887
01:05:06,489 --> 01:05:08,789
say

888
01:05:11,260 --> 01:05:22,960
oh dear I forgot to connect it up to my

889
01:05:22,240 --> 01:05:25,770
mobile phone

890
01:05:22,960 --> 01:05:25,770
that's quite basic

891
01:05:52,140 --> 01:05:55,140
momento

892
01:05:57,780 --> 01:06:05,520
well Alison Masseria Valley does anyway

893
01:06:00,390 --> 01:06:09,049
no come over winter want a male era here

894
01:06:05,520 --> 01:06:12,990
we have it it detected the Arctic

895
01:06:09,050 --> 01:06:17,820
architecture of my mobile phone and just

896
01:06:12,990 --> 01:06:23,040
through USB it finds that and downloads

897
01:06:17,820 --> 01:06:25,620
the gadget from freedom from the

898
01:06:23,040 --> 01:06:31,200
internet and then it just patches the

899
01:06:25,620 --> 01:06:35,120
app it's simple isn't it just one single

900
01:06:31,200 --> 01:06:37,700
function to modify and compile and

901
01:06:35,120 --> 01:06:40,859
instead of going through all the motions

902
01:06:37,700 --> 01:06:44,220
it does it just very simply

903
01:06:40,860 --> 01:06:50,070
automatically and for the application

904
01:06:44,220 --> 01:06:54,470
CBS dot objection dot apk as you can see

905
01:06:50,070 --> 01:06:54,470
up on the screen now I need to say

906
01:06:54,590 --> 01:06:57,590
install

907
01:06:59,870 --> 01:07:07,220
I don't know if it's been installed

908
01:07:03,320 --> 01:07:11,270
already yeah it says it says something's

909
01:07:07,220 --> 01:07:14,020
wrong because it's I uh I have it

910
01:07:11,270 --> 01:07:14,020
installed already

911
01:07:33,880 --> 01:07:43,140
either

912
01:07:35,400 --> 01:07:51,470
the application and now all we need to

913
01:07:43,140 --> 01:07:54,480
say is objection exploit just look at it

914
01:07:51,470 --> 01:07:59,308
what's happened it connected to the

915
01:07:54,480 --> 01:07:59,700
process through objection on my mobile

916
01:07:59,309 --> 01:08:03,720
phone

917
01:07:59,700 --> 01:08:09,210
and I can then do anything give it a

918
01:08:03,720 --> 01:08:11,549
fire whatever and then why is objection

919
01:08:09,210 --> 01:08:16,099
so useful in this particular case well

920
01:08:11,549 --> 01:08:16,099
because I say Android SSL pinning here

921
01:08:19,960 --> 01:08:32,420
disabled I have deactivated like that

922
01:08:26,118 --> 01:08:36,939
the task manager checking and all of

923
01:08:32,420 --> 01:08:39,980
that with objections through hooking and

924
01:08:36,939 --> 01:08:46,428
on a mobile phone without routing

925
01:08:39,979 --> 01:08:50,328
without any problems is simple you see

926
01:08:46,429 --> 01:08:59,920
how powerful objection is and what can I

927
01:08:50,328 --> 01:09:10,130
do now all sorts of things Android

928
01:08:59,920 --> 01:09:18,649
hooking list adding activities method

929
01:09:10,130 --> 01:09:21,078
types all sorts we are skipping the

930
01:09:18,649 --> 01:09:24,710
checking of applications like that on

931
01:09:21,078 --> 01:09:29,868
Android just with one single a line of

932
01:09:24,710 --> 01:09:32,658
code you see we've already seen three

933
01:09:29,868 --> 01:09:35,179
different methods to overcome that

934
01:09:32,658 --> 01:09:40,549
problem on Android let's continue now

935
01:09:35,179 --> 01:09:43,609
with the presentation because it's not

936
01:09:40,549 --> 01:09:49,009
just Android a we also have iOS and

937
01:09:43,609 --> 01:09:52,670
that's a bit harder to do if we don't

938
01:09:49,009 --> 01:09:55,989
have jailbreak on iPhone then because

939
01:09:52,670 --> 01:10:00,019
it's a closed system it makes our life

940
01:09:55,989 --> 01:10:02,539
harder but it can still be done not as

941
01:10:00,019 --> 01:10:09,800
easily as on Android is a little bit

942
01:10:02,539 --> 01:10:13,309
harder for instance we can get the like

943
01:10:09,800 --> 01:10:16,820
for the apk file but for iOS for

944
01:10:13,309 --> 01:10:20,960
instance we can use the class 2 tool

945
01:10:16,820 --> 01:10:25,549
that does a dumping of the file and

946
01:10:20,960 --> 01:10:28,430
convert it into an iPad a fire or we can

947
01:10:25,550 --> 01:10:32,360
find on the Internet

948
01:10:28,430 --> 01:10:36,900
one of those applications that can do it

949
01:10:32,360 --> 01:10:39,929
so if we have a phone with Jay jailbreak

950
01:10:36,900 --> 01:10:41,990
is easier otherwise you can get it on

951
01:10:39,930 --> 01:10:45,870
the Internet

952
01:10:41,990 --> 01:10:50,760
well this is like we used to do with apk

953
01:10:45,870 --> 01:10:53,970
the next step would be modifying it on

954
01:10:50,760 --> 01:10:57,060
Android you can modify an application

955
01:10:53,970 --> 01:11:00,680
install it and it still works fine

956
01:10:57,060 --> 01:11:03,840
why because Android doesn't super check

957
01:11:00,680 --> 01:11:08,730
developers and signatures and so on

958
01:11:03,840 --> 01:11:12,600
whereas iers makes things harder we need

959
01:11:08,730 --> 01:11:16,349
to set up a profile developer sorry a

960
01:11:12,600 --> 01:11:20,940
developer profile we need a Macintosh

961
01:11:16,350 --> 01:11:25,350
system with everything set up so we can

962
01:11:20,940 --> 01:11:28,889
create a developer profile on the

963
01:11:25,350 --> 01:11:33,350
accounts tab we create a profile and

964
01:11:28,890 --> 01:11:40,260
there we create an iron certificate a

965
01:11:33,350 --> 01:11:43,320
profile certificate once we do that we

966
01:11:40,260 --> 01:11:46,530
run this command we can see up on the

967
01:11:43,320 --> 01:11:50,250
screen and look at that code

968
01:11:46,530 --> 01:11:56,280
double double oh whatever

969
01:11:50,250 --> 01:11:59,010
a code which is like the core of our

970
01:11:56,280 --> 01:12:03,840
signature that's what Apple then checks

971
01:11:59,010 --> 01:12:06,210
to see that we are the developer and so

972
01:12:03,840 --> 01:12:09,240
we can continue to work once we have

973
01:12:06,210 --> 01:12:12,270
that code we go to objection and we will

974
01:12:09,240 --> 01:12:14,210
do exactly the same as earlier but with

975
01:12:12,270 --> 01:12:17,940
patch IPA

976
01:12:14,210 --> 01:12:20,690
plus the code that we got here

977
01:12:17,940 --> 01:12:20,690
right

978
01:12:22,119 --> 01:12:31,089
right that's done a either then sign IPA

979
01:12:26,260 --> 01:12:34,339
modify it and so on so for us to use

980
01:12:31,089 --> 01:12:36,949
objections we need to use a Mac

981
01:12:34,339 --> 01:12:42,789
Macintosh system here because we need a

982
01:12:36,949 --> 01:12:46,339
certain Xcode tools for a tool to work

983
01:12:42,789 --> 01:12:50,889
right let's just see an example for you

984
01:12:46,339 --> 01:12:50,889
to get an idea of how it works

985
01:13:00,010 --> 01:13:05,979
but there is a little bit stuck I see

986
01:13:11,810 --> 01:13:24,450
let's restore and refresh it's

987
01:13:21,600 --> 01:13:27,260
definitely stuck so I'm going to stop it

988
01:13:24,450 --> 01:13:27,260
and start it again

989
01:13:28,520 --> 01:13:38,610
it's going to take a little while so

990
01:13:30,900 --> 01:13:42,120
let's keep going so that's one way to go

991
01:13:38,610 --> 01:13:47,790
about it or I could also use the open

992
01:13:42,120 --> 01:13:51,890
tool that means that I would provide the

993
01:13:47,790 --> 01:13:56,490
binary code of IPA because IPA is like a

994
01:13:51,890 --> 01:14:00,000
dot zip file and that can be open and

995
01:13:56,490 --> 01:14:05,190
then get the binary code and with open

996
01:14:00,000 --> 01:14:08,340
to inserting SH that's one other

997
01:14:05,190 --> 01:14:14,690
possibility but the easiest way is using

998
01:14:08,340 --> 01:14:14,690
Xcode and objection to compile the app

999
01:14:25,260 --> 01:14:32,280
so for that installation to work I need

1000
01:14:28,890 --> 01:14:36,150
to use it to which I find here mobile

1001
01:14:32,280 --> 01:14:40,440
tools impactor are you familiar with

1002
01:14:36,150 --> 01:14:47,269
this are you familiar with impactor it's

1003
01:14:40,440 --> 01:14:53,070
a tool where I go here I say install and

1004
01:14:47,270 --> 01:14:58,050
then I need to tell the system that IPA

1005
01:14:53,070 --> 01:15:03,120
is fine I think if the system my Korean

1006
01:14:58,050 --> 01:15:08,100
shows grid credentials and I can then

1007
01:15:03,120 --> 01:15:10,800
sign on the device and then once we've

1008
01:15:08,100 --> 01:15:12,840
overcome that barrier then the rest of

1009
01:15:10,800 --> 01:15:17,870
the process is just like we saw earlier

1010
01:15:12,840 --> 01:15:17,870
I see that that's working now

1011
01:15:51,130 --> 01:16:01,990
I'm going to close it again is stuck

1012
01:15:53,890 --> 01:16:07,680
once again right look at that the app is

1013
01:16:01,990 --> 01:16:10,960
running on my iPhone and the hooking

1014
01:16:07,680 --> 01:16:13,810
from there is like for Android if I want

1015
01:16:10,960 --> 01:16:26,280
to skip SSL pinning what do I do now I

1016
01:16:13,810 --> 01:16:30,990
use SSL pinning here and disable enter

1017
01:16:26,280 --> 01:16:38,340
and then it does its own thing and

1018
01:16:30,990 --> 01:16:38,340
disables it or deactivate deactivates it

1019
01:16:40,830 --> 01:16:49,120
and then if we would continue like we

1020
01:16:44,740 --> 01:16:51,910
saw earlier getting the Xcode oh yeah

1021
01:16:49,120 --> 01:16:54,760
it's telling me now to update it but

1022
01:16:51,910 --> 01:17:00,160
anyhow I would get Reax code and then

1023
01:16:54,760 --> 01:17:06,700
run objection then objection

1024
01:17:00,160 --> 01:17:09,840
pants IPA batching just like we saw

1025
01:17:06,700 --> 01:17:14,019
earlier with Xcode I would patch it and

1026
01:17:09,840 --> 01:17:21,220
then install it on the iPhone so

1027
01:17:14,020 --> 01:17:24,820
objection Explorer would be on Explorer

1028
01:17:21,220 --> 01:17:29,200
the system would understand the gadget

1029
01:17:24,820 --> 01:17:34,620
is working and it would hook and the

1030
01:17:29,200 --> 01:17:38,080
same thing again jailbreak here it is

1031
01:17:34,620 --> 01:17:42,690
where we can raise the detection for

1032
01:17:38,080 --> 01:17:45,870
jailbreak and all of that without

1033
01:17:42,690 --> 01:17:50,849
jailbreak would work exactly the same

1034
01:17:45,870 --> 01:17:50,849
just like we've seen now with jailbreak

1035
01:17:55,090 --> 01:17:59,020
holla at eleven more get my chart or not

1036
01:17:57,400 --> 01:18:03,400
this is our demo

1037
01:17:59,020 --> 01:18:06,820
we're free that on iOS so then there's

1038
01:18:03,400 --> 01:18:10,900
all of these that I've explained SSL pin

1039
01:18:06,820 --> 01:18:14,920
as well by person I really like playing

1040
01:18:10,900 --> 01:18:24,129
around with IOT devices and lumps and

1041
01:18:14,920 --> 01:18:26,639
sockets and everything and this concept

1042
01:18:24,130 --> 01:18:28,929
can be used for any device if I wanna

1043
01:18:26,639 --> 01:18:33,340
tap onto the communications of any

1044
01:18:28,929 --> 01:18:37,540
device it can be done so I thought of

1045
01:18:33,340 --> 01:18:44,040
auditing and smart bulb that had Wi-Fi

1046
01:18:37,540 --> 01:18:49,989
connection so this is my flow chart

1047
01:18:44,040 --> 01:18:50,980
right so this is my app my mobile app

1048
01:18:49,989 --> 01:18:55,509
the bulb

1049
01:18:50,980 --> 01:18:57,940
both of my router and then on the cloud

1050
01:18:55,510 --> 01:19:06,340
and that way I would know whether it was

1051
01:18:57,940 --> 01:19:08,199
on or off so first time you turn on add

1052
01:19:06,340 --> 01:19:12,480
there was something funny about it I was

1053
01:19:08,199 --> 01:19:15,460
supposed to go on to a Oh an open Wi-Fi

1054
01:19:12,480 --> 01:19:19,239
so no security on an open Wi-Fi network

1055
01:19:15,460 --> 01:19:24,550
and then I should send my Wi-Fi

1056
01:19:19,239 --> 01:19:29,019
credentials of course I didn't I opened

1057
01:19:24,550 --> 01:19:30,969
an another spot with some pass routes

1058
01:19:29,020 --> 01:19:36,760
and and credentials and that's what I

1059
01:19:30,969 --> 01:19:40,560
said to the bulb once once it's been set

1060
01:19:36,760 --> 01:19:43,060
up all communication are through HTTP

1061
01:19:40,560 --> 01:19:49,179
and everything would go on the router

1062
01:19:43,060 --> 01:19:52,150
and up on the cloud from the after the

1063
01:19:49,179 --> 01:19:54,969
router we know how we can bypass as well

1064
01:19:52,150 --> 01:19:57,690
right what about work certificate

1065
01:19:54,969 --> 01:20:00,719
bypassing or SSL Finnin

1066
01:19:57,690 --> 01:20:05,250
that you cannot escape but here I had a

1067
01:20:00,719 --> 01:20:07,770
problem with bulb how do I set up a

1068
01:20:05,250 --> 01:20:09,980
certificate on a bub complicated isn't

1069
01:20:07,770 --> 01:20:09,980
it

1070
01:20:11,030 --> 01:20:17,489
damn it I have a problem either I open

1071
01:20:15,300 --> 01:20:20,969
it up and brewing it in order to install

1072
01:20:17,489 --> 01:20:24,959
it or I need to find a way around it and

1073
01:20:20,969 --> 01:20:30,540
as usual a man in the middle a man in

1074
01:20:24,960 --> 01:20:32,430
the middle to find out what's going on

1075
01:20:30,540 --> 01:20:36,480
there you need to be in the middle of

1076
01:20:32,430 --> 01:20:39,630
the communication so when dipper and

1077
01:20:36,480 --> 01:20:48,000
dipper and found a tool as a little

1078
01:20:39,630 --> 01:20:52,670
split Iselle split from my device to the

1079
01:20:48,000 --> 01:20:59,969
server is HTTPS but if the client alas

1080
01:20:52,670 --> 01:21:05,150
said it will be HTTP HTTP so it is not

1081
01:20:59,969 --> 01:21:08,850
encrypt it so SSL split is split in it

1082
01:21:05,150 --> 01:21:10,110
so I get the HTTP and if the client

1083
01:21:08,850 --> 01:21:15,150
allows for it

1084
01:21:10,110 --> 01:21:21,049
I can happen HTTP communication so I can

1085
01:21:15,150 --> 01:21:25,059
split it that's rare

1086
01:21:21,050 --> 01:21:32,260
I could see the communications both bulb

1087
01:21:25,060 --> 01:21:38,030
with that ad a mine same as with phones

1088
01:21:32,260 --> 01:21:43,430
iOS Android and everything else just the

1089
01:21:38,030 --> 01:21:45,800
same can be used for any other device so

1090
01:21:43,430 --> 01:21:49,250
if we have a clear in mind and we know

1091
01:21:45,800 --> 01:21:52,100
that I have an SSM communication I have

1092
01:21:49,250 --> 01:21:54,410
the server I know who the client is with

1093
01:21:52,100 --> 01:21:57,470
the tools that I have and I need to see

1094
01:21:54,410 --> 01:21:59,210
how we can break it cannot have a clear

1095
01:21:57,470 --> 01:22:01,610
method because there are many examples

1096
01:21:59,210 --> 01:22:03,830
and many connection methods there are

1097
01:22:01,610 --> 01:22:05,900
many kinds of bulbs is not just Wi-Fi

1098
01:22:03,830 --> 01:22:08,540
connected but next to the infrared

1099
01:22:05,900 --> 01:22:10,759
device and then something else but in

1100
01:22:08,540 --> 01:22:13,070
the end the underlying idea is just the

1101
01:22:10,760 --> 01:22:15,260
same an SSL communication channel a

1102
01:22:13,070 --> 01:22:18,730
certificate in between I need to have

1103
01:22:15,260 --> 01:22:18,730
something in the middle to break it up

1104
01:22:22,870 --> 01:22:30,650
this is the practical side of the

1105
01:22:25,880 --> 01:22:33,470
workshop and so I like to draw some

1106
01:22:30,650 --> 01:22:37,370
conclusions before we will leave I was

1107
01:22:33,470 --> 01:22:40,490
talking to a colleague in the morning so

1108
01:22:37,370 --> 01:22:44,410
Bukka you explained everything that can

1109
01:22:40,490 --> 01:22:48,019
be broken right but if I'm a developer

1110
01:22:44,410 --> 01:22:50,660
so how can I sort it out this is a

1111
01:22:48,020 --> 01:22:55,490
problem isn't it because I came in here

1112
01:22:50,660 --> 01:22:58,580
and I destroyed it everything right but

1113
01:22:55,490 --> 01:23:02,719
indeed because people don't take the

1114
01:22:58,580 --> 01:23:06,980
necessary measures and if we did maybe

1115
01:23:02,720 --> 01:23:10,630
we could sort it out some clients asked

1116
01:23:06,980 --> 01:23:14,929
ok doofus you bypassed SSL pinning right

1117
01:23:10,630 --> 01:23:17,180
but then I need to talk to the head of

1118
01:23:14,930 --> 01:23:19,690
the development and explain how team is

1119
01:23:17,180 --> 01:23:19,690
all that

1120
01:23:20,360 --> 01:23:25,349
so it's not about the frame we're here

1121
01:23:23,010 --> 01:23:27,080
it's not something that I set up and I

1122
01:23:25,350 --> 01:23:31,190
say okay sold it out

1123
01:23:27,080 --> 01:23:35,690
fixed it it came up with fixed like that

1124
01:23:31,190 --> 01:23:39,719
problem is how do I fix it every app

1125
01:23:35,690 --> 01:23:43,230
every app have control methods and they

1126
01:23:39,720 --> 01:23:46,380
can all be split but it's not the same

1127
01:23:43,230 --> 01:23:48,690
using the fences on their left side or

1128
01:23:46,380 --> 01:23:51,930
the one on the right side that is the

1129
01:23:48,690 --> 01:23:55,589
Chinese wall because if I use a barbed

1130
01:23:51,930 --> 01:23:59,130
wire in a five minutes they've cut it

1131
01:23:55,590 --> 01:24:01,110
out but with a bull they take it takes

1132
01:23:59,130 --> 01:24:09,660
them two weeks and maybe they give up

1133
01:24:01,110 --> 01:24:13,200
what do we need to do and I've said this

1134
01:24:09,660 --> 01:24:16,050
before so five types of control that I

1135
01:24:13,200 --> 01:24:19,110
think are very much important and if we

1136
01:24:16,050 --> 01:24:22,500
follow all five of them all five of them

1137
01:24:19,110 --> 01:24:24,599
our application security will increase

1138
01:24:22,500 --> 01:24:27,210
by X percent I cannot really tell what

1139
01:24:24,600 --> 01:24:28,980
the x-men's but you yourselves make

1140
01:24:27,210 --> 01:24:34,500
checking the controls you can understand

1141
01:24:28,980 --> 01:24:38,309
why if we do not use SSL binnen as we

1142
01:24:34,500 --> 01:24:40,020
know it someone by bypassing SSL can see

1143
01:24:38,310 --> 01:24:44,040
our communication there's no need for

1144
01:24:40,020 --> 01:24:48,360
anything else for them right but then if

1145
01:24:44,040 --> 01:24:51,990
we use SSL pinon we've seen that it can

1146
01:24:48,360 --> 01:24:55,160
be split and then if we have a cell

1147
01:24:51,990 --> 01:24:58,200
phone that is routed or jail break on it

1148
01:24:55,160 --> 01:25:04,470
easier because with just button or a

1149
01:24:58,200 --> 01:25:07,290
button app we can split it so it would

1150
01:25:04,470 --> 01:25:10,680
be easy to have a detection as well so

1151
01:25:07,290 --> 01:25:13,380
that when the app goes on working it

1152
01:25:10,680 --> 01:25:19,040
says it's been routed this cannot work

1153
01:25:13,380 --> 01:25:24,570
or should not be working then even I

1154
01:25:19,040 --> 01:25:25,559
cannot modify the code same as before if

1155
01:25:24,570 --> 01:25:28,530
I

1156
01:25:25,559 --> 01:25:31,379
have a device that is rooted so I can

1157
01:25:28,530 --> 01:25:35,009
not run the app as I thought so I have

1158
01:25:31,379 --> 01:25:37,439
SSL pinning and they have a rooted cell

1159
01:25:35,010 --> 01:25:41,129
phone but still we've seen ways to do it

1160
01:25:37,439 --> 01:25:45,089
without red what if I add a control

1161
01:25:41,129 --> 01:25:50,599
where you cannot modify this app so I

1162
01:25:45,089 --> 01:25:54,199
check the signature so maybe maybe

1163
01:25:50,599 --> 01:25:58,319
that's even worse isn't it

1164
01:25:54,199 --> 01:26:00,268
alright this is still that could fall

1165
01:25:58,319 --> 01:26:06,479
through reverse and we can find the code

1166
01:26:00,269 --> 01:26:09,749
and I can skip it again but that's why

1167
01:26:06,479 --> 01:26:14,699
we have code obfuscation right if we

1168
01:26:09,749 --> 01:26:19,199
have it they will open our app they'll

1169
01:26:14,699 --> 01:26:21,449
see our source code and they don't know

1170
01:26:19,199 --> 01:26:24,749
what it is and it will take them two

1171
01:26:21,449 --> 01:26:28,978
months three months to fight them so and

1172
01:26:24,749 --> 01:26:33,869
no one spent so much time on that or

1173
01:26:28,979 --> 01:26:39,300
else they have lots of time and then

1174
01:26:33,869 --> 01:26:44,579
debugging it is true that we've got the

1175
01:26:39,300 --> 01:26:50,699
USB connection if I locked out the

1176
01:26:44,579 --> 01:26:52,919
debugging will not work either right so

1177
01:26:50,699 --> 01:26:56,518
you see this is not just one is there

1178
01:26:52,919 --> 01:26:58,769
hole of it the whole of security that's

1179
01:26:56,519 --> 01:27:01,379
what all five controls I find are

1180
01:26:58,769 --> 01:27:04,319
important because before that well

1181
01:27:01,379 --> 01:27:06,800
everything is ok it's a it will bleed

1182
01:27:04,319 --> 01:27:09,839
and broken but if we don't do it right

1183
01:27:06,800 --> 01:27:10,679
from the basis from the beginning we're

1184
01:27:09,839 --> 01:27:13,219
in trouble

1185
01:27:10,679 --> 01:27:13,219
right

1186
01:27:14,140 --> 01:27:23,500
so we can have an SSL pinning bypass we

1187
01:27:18,200 --> 01:27:28,790
can broken API so on and so forth

1188
01:27:23,500 --> 01:27:32,150
and this in my workshop and happy to

1189
01:27:28,790 --> 01:27:48,070
take questions if there any now is the

1190
01:27:32,150 --> 01:27:48,070
time make it up right microphone please

1191
01:28:04,590 --> 01:28:07,550
are you fine

1192
01:28:12,260 --> 01:28:22,650
all that well I want to hello good

1193
01:28:15,989 --> 01:28:24,150
afternoon down we all to the encrypted

1194
01:28:22,650 --> 01:28:27,360
communications and what's up

1195
01:28:24,150 --> 01:28:27,360
[Music]

1196
01:28:33,110 --> 01:28:39,960
do we need to lock out in order to go

1197
01:28:37,320 --> 01:28:42,599
back and see the user and name and the

1198
01:28:39,960 --> 01:28:44,400
password so I only go to your first

1199
01:28:42,600 --> 01:28:46,889
question I'm sorry you'll have to ask me

1200
01:28:44,400 --> 01:28:54,239
the second question again and so first

1201
01:28:46,889 --> 01:28:57,239
question what's up I don't know what

1202
01:28:54,239 --> 01:29:09,718
what's up because I haven't checked it

1203
01:28:57,239 --> 01:29:12,150
bad so I have SSL Finan measures and

1204
01:29:09,719 --> 01:29:13,650
underline that there is another degree

1205
01:29:12,150 --> 01:29:16,080
of encryptions there's a double

1206
01:29:13,650 --> 01:29:18,599
encryption that's well I'm not sure but

1207
01:29:16,080 --> 01:29:21,420
that's what's up says the private key

1208
01:29:18,600 --> 01:29:24,810
things that you have so I might see that

1209
01:29:21,420 --> 01:29:32,070
you are communicating on whatsapp but I

1210
01:29:24,810 --> 01:29:34,409
cannot see what you're sending whatsapp

1211
01:29:32,070 --> 01:29:37,500
is not using SSL pin and I'm being told

1212
01:29:34,409 --> 01:29:39,150
but with and SSL bypass I don't think

1213
01:29:37,500 --> 01:29:43,760
you will say because it's an end-to-end

1214
01:29:39,150 --> 01:29:43,759
encryption and then session you asked

1215
01:29:49,189 --> 01:29:56,780
yes for you to see the user it would

1216
01:29:53,699 --> 01:29:56,780
need to lock back

1217
01:29:58,290 --> 01:30:01,290
sure

1218
01:30:20,530 --> 01:30:28,219
it says setup at home such as the bulb

1219
01:30:25,219 --> 01:30:33,110
or the nerve of the fridge or the

1220
01:30:28,219 --> 01:30:35,150
microwave Amazon had an IRC microwave

1221
01:30:33,110 --> 01:30:37,670
released just recently so you're an

1222
01:30:35,150 --> 01:30:40,098
expert in security and you see the poor

1223
01:30:37,670 --> 01:30:42,650
practice is that so many manufacturers

1224
01:30:40,099 --> 01:30:46,670
follow so what about how what about

1225
01:30:42,650 --> 01:30:49,579
these deployment what I see is well in

1226
01:30:46,670 --> 01:30:51,499
the end is changing almost everyone in

1227
01:30:49,579 --> 01:30:55,209
the end have those devices at home

1228
01:30:51,499 --> 01:30:58,429
actually I'd really enjoy everything

1229
01:30:55,209 --> 01:31:03,079
sockets and everything but I also like

1230
01:30:58,429 --> 01:31:06,289
security at home right so it's all about

1231
01:31:03,079 --> 01:31:09,228
paying attention and been interested in

1232
01:31:06,289 --> 01:31:12,619
what manufacturers do so they need to

1233
01:31:09,229 --> 01:31:17,959
have some minimum goals right such as

1234
01:31:12,619 --> 01:31:20,449
follow it no one else knows what's up my

1235
01:31:17,959 --> 01:31:21,889
players if it's on or off that way they

1236
01:31:20,449 --> 01:31:26,360
don't want to know whether I'm home or

1237
01:31:21,889 --> 01:31:29,900
not in the end what I've just said it's

1238
01:31:26,360 --> 01:31:33,009
only applicable for IOT well not really

1239
01:31:29,900 --> 01:31:35,478
also for SSL pinning and everything else

1240
01:31:33,010 --> 01:31:40,639
whether they use it or not

1241
01:31:35,479 --> 01:31:44,360
that's up to the manufacturer the knits

1242
01:31:40,639 --> 01:31:47,479
to be an audit or someone and in the end

1243
01:31:44,360 --> 01:31:50,139
there will be an attack or and they have

1244
01:31:47,479 --> 01:31:50,139
to reply

1245
01:31:54,660 --> 01:32:16,639
and so it follows this in your

1246
01:32:09,990 --> 01:32:16,639
experience does it work with Bank apps

1247
01:32:17,000 --> 01:32:23,220
so you need to your username and

1248
01:32:21,180 --> 01:32:26,820
password every time whether it is be the

1249
01:32:23,220 --> 01:32:29,700
VA or Santander bank in your experience

1250
01:32:26,820 --> 01:32:34,290
can you cut the key or I have the user

1251
01:32:29,700 --> 01:32:38,550
and key it depends because as the

1252
01:32:34,290 --> 01:32:43,110
colleague was saying bank accounts or

1253
01:32:38,550 --> 01:32:46,950
apps have a double factor in creation so

1254
01:32:43,110 --> 01:32:49,320
an SSL pinning or an SSL pi pass is do

1255
01:32:46,950 --> 01:32:52,410
both so I add an extra level of security

1256
01:32:49,320 --> 01:32:56,400
and what I do is what I send I send it

1257
01:32:52,410 --> 01:32:59,070
encrypted I encrypted on my cell phone

1258
01:32:56,400 --> 01:33:02,160
on my app and then decrypt him on the

1259
01:32:59,070 --> 01:33:03,750
server side which is something to be

1260
01:33:02,160 --> 01:33:07,769
considered if all the controls that I've

1261
01:33:03,750 --> 01:33:13,650
mentioned if I'm decrypting on the cell

1262
01:33:07,770 --> 01:33:17,490
phone if I manage to see what part of

1263
01:33:13,650 --> 01:33:20,610
the code has been encrypted that's why

1264
01:33:17,490 --> 01:33:22,620
code obfuscation is important because if

1265
01:33:20,610 --> 01:33:25,170
I see where in the code it is encrypted

1266
01:33:22,620 --> 01:33:31,490
and I can spline it it is pointless

1267
01:33:25,170 --> 01:33:31,490
right but there there was a questions

1268
01:33:36,380 --> 01:33:44,630
I have a couple of questions if I'm

1269
01:33:43,880 --> 01:33:49,760
allowed

1270
01:33:44,630 --> 01:33:53,480
first one once we've done we've we've

1271
01:33:49,760 --> 01:34:21,230
done the SSL bypass with JavaScript can

1272
01:33:53,480 --> 01:34:28,429
we sorry once again so text can you read

1273
01:34:21,230 --> 01:34:31,969
it on JavaScript yes with freedom what

1274
01:34:28,430 --> 01:34:34,040
I've explained is any feature can be

1275
01:34:31,970 --> 01:34:38,060
modified for it to do whatever you want

1276
01:34:34,040 --> 01:34:41,660
if you want to have a record or a lock

1277
01:34:38,060 --> 01:34:44,780
you can change it so that everything

1278
01:34:41,660 --> 01:34:48,500
that you write is recorded you can

1279
01:34:44,780 --> 01:34:53,719
change it and then if you want to see

1280
01:34:48,500 --> 01:34:57,700
something else you can get also a lock

1281
01:34:53,720 --> 01:35:02,480
cut so same as I said and with the USB

1282
01:34:57,700 --> 01:35:06,260
but you use vodka and everything done by

1283
01:35:02,480 --> 01:35:11,139
the device is registered and you can see

1284
01:35:06,260 --> 01:35:14,300
that second question once you've opened

1285
01:35:11,140 --> 01:35:19,010
the SSL connection and you've edited it

1286
01:35:14,300 --> 01:35:22,900
you can send to the device a function or

1287
01:35:19,010 --> 01:35:26,610
feature that would have sorry about that

1288
01:35:22,900 --> 01:35:29,440
access to the memory where it would read

1289
01:35:26,610 --> 01:35:36,150
any other information for any other

1290
01:35:29,440 --> 01:35:41,650
program that can be whatever it depends

1291
01:35:36,150 --> 01:35:44,769
usually it it runs on a Sun box so

1292
01:35:41,650 --> 01:35:47,170
depending on the purpose you can have

1293
01:35:44,770 --> 01:35:51,460
access outside or inside the sandbox it

1294
01:35:47,170 --> 01:35:53,410
routes it you might not have access but

1295
01:35:51,460 --> 01:35:57,670
only permission to have access to your

1296
01:35:53,410 --> 01:36:00,670
sandbox ready rigid routes you can have

1297
01:35:57,670 --> 01:36:04,000
instead of a file have something else at

1298
01:36:00,670 --> 01:36:06,430
this part of the device so that was

1299
01:36:04,000 --> 01:36:08,950
meltdown inspectors of vulnerability

1300
01:36:06,430 --> 01:36:15,720
right yeah Mahler's no more questions on

1301
01:36:08,950 --> 01:36:15,720
my site thank you there's one more here

1302
01:36:26,440 --> 01:36:33,019
so you have your cellphone and your PC

1303
01:36:29,810 --> 01:36:35,239
connected to skip the route route sorry

1304
01:36:33,020 --> 01:36:38,390
do you need to do it every time or well

1305
01:36:35,239 --> 01:36:39,889
this does dynamic there are two kinds

1306
01:36:38,390 --> 01:36:43,160
that I've explained you can change the

1307
01:36:39,890 --> 01:36:45,739
app not advisable because your change in

1308
01:36:43,160 --> 01:36:49,010
the static code of the app and once you

1309
01:36:45,739 --> 01:36:51,230
change it you set it up and this will

1310
01:36:49,010 --> 01:36:53,330
never be requested again because this is

1311
01:36:51,230 --> 01:36:55,639
part of the code that has been changed

1312
01:36:53,330 --> 01:36:58,730
but then dynamically what you're

1313
01:36:55,640 --> 01:37:03,080
changing is memory as well as if you'd

1314
01:36:58,730 --> 01:37:07,218
wear a computer when you run an app all

1315
01:37:03,080 --> 01:37:10,040
the code it goes into the memory so if

1316
01:37:07,219 --> 01:37:14,510
you change it on memory and turn it of

1317
01:37:10,040 --> 01:37:17,840
it all is erased and then you reload the

1318
01:37:14,510 --> 01:37:21,170
code that you had stomach would I had do

1319
01:37:17,840 --> 01:37:26,270
you check it yes there need to will be

1320
01:37:21,170 --> 01:37:30,170
again anyway apart from skipping the

1321
01:37:26,270 --> 01:37:35,180
route just keep the fingerprint

1322
01:37:30,170 --> 01:37:37,520
verification in any app yes yes it's

1323
01:37:35,180 --> 01:37:42,110
just the same you need to see wearing

1324
01:37:37,520 --> 01:37:44,540
the code becomes the chicken s so that

1325
01:37:42,110 --> 01:37:47,449
you're gonna skip it so that they're

1326
01:37:44,540 --> 01:37:51,199
always tests positive yes all about

1327
01:37:47,449 --> 01:37:54,469
skipping it saying ask credentials I

1328
01:37:51,199 --> 01:37:56,330
want your fingerprint haven't skipped it

1329
01:37:54,469 --> 01:37:58,280
but maybe it doesn't make any sense

1330
01:37:56,330 --> 01:38:00,199
because a fingerprint is used for Apple

1331
01:37:58,280 --> 01:38:03,410
to give you credentials to luck

1332
01:38:00,199 --> 01:38:05,120
somewhere right so I understand if you

1333
01:38:03,410 --> 01:38:08,630
just skip that there's no credential but

1334
01:38:05,120 --> 01:38:11,900
instead of skipping it can you not make

1335
01:38:08,630 --> 01:38:13,660
sure that up things it's tested positive

1336
01:38:11,900 --> 01:38:18,410
only does he know because it's an ad for

1337
01:38:13,660 --> 01:38:20,239
now has all this church as it needs for

1338
01:38:18,410 --> 01:38:21,800
the fingerprint and credentials you need

1339
01:38:20,239 --> 01:38:24,468
to skip it so that it's not requested

1340
01:38:21,800 --> 01:38:26,180
but if not requested no sessions started

1341
01:38:24,469 --> 01:38:29,170
and they make no sense it's no point in

1342
01:38:26,180 --> 01:38:29,170
it thank you

1343
01:38:38,699 --> 01:38:45,309
if you were one well in our shoes but if

1344
01:38:42,760 --> 01:38:46,900
you were a student very much interested

1345
01:38:45,310 --> 01:38:51,280
in cybersecurity

1346
01:38:46,900 --> 01:38:53,199
so I'm working on what development will

1347
01:38:51,280 --> 01:38:57,519
rather study web development and I'd

1348
01:38:53,199 --> 01:39:02,949
like to know about the cybersecurity

1349
01:38:57,520 --> 01:39:07,260
practices where would you start if you

1350
01:39:02,949 --> 01:39:10,509
like to development for web and mobile

1351
01:39:07,260 --> 01:39:15,250
all wasp is a good starting point to

1352
01:39:10,510 --> 01:39:17,170
start reading it and CL control every

1353
01:39:15,250 --> 01:39:20,409
control that can be used for a web so I

1354
01:39:17,170 --> 01:39:22,389
develop it and this controls Ward which

1355
01:39:20,409 --> 01:39:24,339
ones do I follow which ones do I not you

1356
01:39:22,389 --> 01:39:26,770
will see facts

1357
01:39:24,340 --> 01:39:31,210
even if you are into security and you do

1358
01:39:26,770 --> 01:39:32,679
things right over 50% after cases are

1359
01:39:31,210 --> 01:39:38,219
not explained because it's unknowns

1360
01:39:32,679 --> 01:39:42,239
under explained so I feel for everyone

1361
01:39:38,219 --> 01:39:45,310
well you and those on streaming for

1362
01:39:42,239 --> 01:39:49,150
mobiles and web it is important to read

1363
01:39:45,310 --> 01:39:52,210
always guide lines one of the most

1364
01:39:49,150 --> 01:39:55,150
bundle years and see the requirements

1365
01:39:52,210 --> 01:40:02,380
they are requesting which are the

1366
01:39:55,150 --> 01:40:04,030
minimum requirements if you ask me it

1367
01:40:02,380 --> 01:40:07,800
has to do with what development affiant

1368
01:40:04,030 --> 01:40:07,800
as I'm studying but

1369
01:40:08,660 --> 01:40:16,610
you work as a pen tester right if I were

1370
01:40:11,900 --> 01:40:21,879
interested in security as such in the

1371
01:40:16,610 --> 01:40:24,530
end it's just the same in other for

1372
01:40:21,880 --> 01:40:26,780
attending temple testing you can use

1373
01:40:24,530 --> 01:40:29,900
always guidance as well so you can

1374
01:40:26,780 --> 01:40:32,960
attack and defend and probably if I have

1375
01:40:29,900 --> 01:40:35,599
a to audit an app I don't know it by

1376
01:40:32,960 --> 01:40:38,960
heart the guidelines but I know where

1377
01:40:35,600 --> 01:40:39,980
the Sun run in order to test that one

1378
01:40:38,960 --> 01:40:44,810
thing or the other

1379
01:40:39,980 --> 01:40:48,700
both what matters is no windy not so

1380
01:40:44,810 --> 01:40:48,700
strong suits are forgiving application

1381
01:41:02,200 --> 01:41:10,190
let's focus on forensics for gaze

1382
01:41:06,350 --> 01:41:12,020
resolution an investigation it's used

1383
01:41:10,190 --> 01:41:15,320
for attacking right but as a forensic

1384
01:41:12,020 --> 01:41:20,140
analyst how can I TEKT the dive being

1385
01:41:15,320 --> 01:41:25,880
attacked that my sister's been attacked

1386
01:41:20,140 --> 01:41:30,650
good question all right you need to

1387
01:41:25,880 --> 01:41:33,260
consider this way well first off the app

1388
01:41:30,650 --> 01:41:37,099
on the device might not be legitimate so

1389
01:41:33,260 --> 01:41:40,220
that could be one example of an attack

1390
01:41:37,100 --> 01:41:42,440
or a breach if I managed to find an app

1391
01:41:40,220 --> 01:41:44,840
on my device where the signature is not

1392
01:41:42,440 --> 01:41:48,349
the original signature I know it is not

1393
01:41:44,840 --> 01:41:52,190
legitimate and what's difficult here is

1394
01:41:48,350 --> 01:41:56,600
since I am modifier on the Lakota memory

1395
01:41:52,190 --> 01:41:58,280
if I don't turn it off I might see that

1396
01:41:56,600 --> 01:42:01,400
it's been changed but if I've turned my

1397
01:41:58,280 --> 01:42:04,550
phone off it's gone is lost so it's

1398
01:42:01,400 --> 01:42:07,670
complicated only thing I can do is check

1399
01:42:04,550 --> 01:42:10,310
in the signature in the app and see

1400
01:42:07,670 --> 01:42:12,620
whether it's been breached

1401
01:42:10,310 --> 01:42:14,930
but since if you are touching it

1402
01:42:12,620 --> 01:42:19,180
dynamically if it goes off everything is

1403
01:42:14,930 --> 01:42:19,180
gone right

1404
01:42:24,460 --> 01:42:31,239
the API keys for Google services can

1405
01:42:28,699 --> 01:42:34,969
they be masked can they be office gated

1406
01:42:31,239 --> 01:42:37,549
well I think there are ways not to go

1407
01:42:34,969 --> 01:42:41,469
through the API key directly if I'm not

1408
01:42:37,550 --> 01:42:45,530
mistaken not sure but I think in the end

1409
01:42:41,469 --> 01:42:47,719
you have a token and I think you can

1410
01:42:45,530 --> 01:42:53,360
have random tokens that can be used as

1411
01:42:47,719 --> 01:42:56,210
API keys because if you see the apk API

1412
01:42:53,360 --> 01:43:00,769
key on the app the service could be used

1413
01:42:56,210 --> 01:43:03,800
at will but there ways not to use it and

1414
01:43:00,770 --> 01:43:05,449
only use it in a must way or as said by

1415
01:43:03,800 --> 01:43:10,040
the colleagues you don't want to send it

1416
01:43:05,449 --> 01:43:15,620
just encrypt it about from SSL send it

1417
01:43:10,040 --> 01:43:17,420
encrypted as well so if they confine the

1418
01:43:15,620 --> 01:43:22,219
app yes of course I can use code

1419
01:43:17,420 --> 01:43:27,949
obfuscation so the apk API K is not

1420
01:43:22,219 --> 01:43:30,650
enough well actually I have this feature

1421
01:43:27,949 --> 01:43:32,599
which is ABC I have different letters I

1422
01:43:30,650 --> 01:43:35,629
don't know what it means I don't know

1423
01:43:32,600 --> 01:43:38,440
how it is being encrypted so you need to

1424
01:43:35,630 --> 01:43:38,440
play around with it

1425
01:43:41,840 --> 01:43:49,310
but it would extend the process right

1426
01:43:44,760 --> 01:43:51,630
and so Molly it would take lots of time

1427
01:43:49,310 --> 01:43:53,640
masking would take a lot of phlegm but

1428
01:43:51,630 --> 01:43:56,880
if you see that a feature or a function

1429
01:43:53,640 --> 01:43:58,890
is ABC a it means whatever and B means

1430
01:43:56,880 --> 01:44:00,330
whatever plus one and there is no

1431
01:43:58,890 --> 01:44:02,390
relationship but there are many classes

1432
01:44:00,330 --> 01:44:04,920
there and in many classes the name is a

1433
01:44:02,390 --> 01:44:07,710
so the name is just the same I don't

1434
01:44:04,920 --> 01:44:11,790
know which one switch is a bit confusing

1435
01:44:07,710 --> 01:44:15,500
I've tried it and it's a bit messy all

1436
01:44:11,790 --> 01:44:21,360
right okay thank you everyone

1437
01:44:15,500 --> 01:44:24,430
[Applause]

1438
01:44:21,360 --> 01:44:24,429
[Music]

1439
01:44:24,660 --> 01:44:29,090
you

1440
01:44:25,730 --> 01:44:29,089
[Music]

