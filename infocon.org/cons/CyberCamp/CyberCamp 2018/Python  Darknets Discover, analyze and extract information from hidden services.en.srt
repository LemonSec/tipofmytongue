1
00:00:01,890 --> 00:00:08,179
[Music]

2
00:00:11,490 --> 00:00:23,570
hello good evening everyone so this

3
00:00:19,420 --> 00:00:26,539
presentation is about Python darknets

4
00:00:23,570 --> 00:00:30,189
and I'm going to share with you research

5
00:00:26,539 --> 00:00:32,800
that I did I will show you proof of

6
00:00:30,189 --> 00:00:37,329
concepts that I developed for other

7
00:00:32,800 --> 00:00:41,319
systems and what I did in terms of

8
00:00:37,329 --> 00:00:44,510
retrieving information automatically

9
00:00:41,320 --> 00:00:48,589
about hidden services in torque I

10
00:00:44,510 --> 00:00:51,019
introduce myself my name is Daniel also

11
00:00:48,589 --> 00:00:53,540
known as ad astra I am a trainer and

12
00:00:51,019 --> 00:00:57,409
consultant and every center of IT

13
00:00:53,540 --> 00:01:00,170
security I've been managing and running

14
00:00:57,409 --> 00:01:01,070
the block the hacker wider come for a

15
00:01:00,170 --> 00:01:04,369
few years now

16
00:01:01,070 --> 00:01:08,600
and I would like to I always say DS

17
00:01:04,369 --> 00:01:16,460
because this is part of my lifestyle the

18
00:01:08,600 --> 00:01:20,060
way I see Life I do IT security because

19
00:01:16,460 --> 00:01:22,729
I love IT security is very much inside

20
00:01:20,060 --> 00:01:25,340
me and I hope that those of you who are

21
00:01:22,729 --> 00:01:28,670
here or those of you who are starting

22
00:01:25,340 --> 00:01:31,430
also take into account that philosophy

23
00:01:28,670 --> 00:01:35,060
or at least this is my hope I would like

24
00:01:31,430 --> 00:01:41,540
you all to be very much willing to learn

25
00:01:35,060 --> 00:01:48,290
and to see IT security beyond job that

26
00:01:41,540 --> 00:01:53,210
will help you make a living and well

27
00:01:48,290 --> 00:01:56,659
this is my email address you can contact

28
00:01:53,210 --> 00:01:59,990
me for anything that you may need I will

29
00:01:56,659 --> 00:02:01,430
answer will answer not immediately but

30
00:01:59,990 --> 00:02:04,960
as soon as I can

31
00:02:01,430 --> 00:02:09,379
will answer because I also have life

32
00:02:04,960 --> 00:02:13,629
outside my job even though you may think

33
00:02:09,378 --> 00:02:16,730
that this is not my case all right so my

34
00:02:13,629 --> 00:02:19,099
presentation will be about Python how

35
00:02:16,730 --> 00:02:21,829
many of you are aware of Python or

36
00:02:19,099 --> 00:02:25,890
working Python

37
00:02:21,830 --> 00:02:27,480
well nearly everyone in here okay on

38
00:02:25,890 --> 00:02:31,738
this front bro

39
00:02:27,480 --> 00:02:34,590
so lots of young people here I guess

40
00:02:31,739 --> 00:02:38,580
you come from a university your students

41
00:02:34,590 --> 00:02:40,709
and I guess does you study in Ruby

42
00:02:38,580 --> 00:02:45,020
Python that you're so working with Java

43
00:02:40,709 --> 00:02:46,530
do you also do scripting Java using it

44
00:02:45,020 --> 00:02:49,190
okay

45
00:02:46,530 --> 00:02:49,190
no from

46
00:02:52,380 --> 00:02:58,500
I will also tell you how you can

47
00:02:54,930 --> 00:03:02,610
disclose hidden services in the deep way

48
00:02:58,500 --> 00:03:06,480
that may have malicious content that is

49
00:03:02,610 --> 00:03:10,610
to say illegal content and how we can

50
00:03:06,480 --> 00:03:13,230
extract information from these spaces

51
00:03:10,610 --> 00:03:16,320
well we should not forget that there is

52
00:03:13,230 --> 00:03:20,609
a wide range of information available in

53
00:03:16,320 --> 00:03:24,000
tor or rip web and this information is

54
00:03:20,610 --> 00:03:27,480
not a static but rather dynamic often we

55
00:03:24,000 --> 00:03:33,450
have hidden services today services that

56
00:03:27,480 --> 00:03:36,120
are exposing any type of content content

57
00:03:33,450 --> 00:03:38,100
which goes against the law illicit

58
00:03:36,120 --> 00:03:40,560
concept that it's available today and

59
00:03:38,100 --> 00:03:42,630
tomorrow stops being available and not

60
00:03:40,560 --> 00:03:45,300
because it has been censored but just

61
00:03:42,630 --> 00:03:47,760
because of the content creator has

62
00:03:45,300 --> 00:03:50,340
decided to shut down that content or

63
00:03:47,760 --> 00:03:53,810
perhaps that content is only available a

64
00:03:50,340 --> 00:03:56,640
specific times during the day or for

65
00:03:53,810 --> 00:04:00,630
specific periods of time and then it is

66
00:03:56,640 --> 00:04:03,230
removed from the Deep Web and what is

67
00:04:00,630 --> 00:04:03,230
this about

68
00:04:11,280 --> 00:04:17,548
first of all we will talk about

69
00:04:12,930 --> 00:04:20,340
anonymous webs that are available in the

70
00:04:17,548 --> 00:04:24,000
market then what are the anonymity

71
00:04:20,339 --> 00:04:26,460
solutions that are available show me the

72
00:04:24,000 --> 00:04:29,220
ones that you have heard after and

73
00:04:26,460 --> 00:04:32,479
others well there are very many others

74
00:04:29,220 --> 00:04:34,980
and free net descend riffle or tour

75
00:04:32,480 --> 00:04:37,350
however these are the ones that are most

76
00:04:34,980 --> 00:04:39,210
frequently used for all types of

77
00:04:37,350 --> 00:04:42,570
activities not only for criminal

78
00:04:39,210 --> 00:04:45,289
activities but also for other activities

79
00:04:42,570 --> 00:04:49,620
for which these solutions have been

80
00:04:45,290 --> 00:04:53,100
created initially as I say often tor is

81
00:04:49,620 --> 00:04:58,560
associated with child pornography

82
00:04:53,100 --> 00:05:02,580
selling of arms and forging of documents

83
00:04:58,560 --> 00:05:08,480
passwords so this is what we most often

84
00:05:02,580 --> 00:05:13,219
hear about this door and others but

85
00:05:08,480 --> 00:05:17,970
these solutions store free medicines are

86
00:05:13,220 --> 00:05:21,000
having thought or a thought so that some

87
00:05:17,970 --> 00:05:23,100
of the content in it is not censored is

88
00:05:21,000 --> 00:05:25,710
not forbidden especially in this country

89
00:05:23,100 --> 00:05:26,700
where there is strong restrictions to

90
00:05:25,710 --> 00:05:28,289
access the Internet

91
00:05:26,700 --> 00:05:32,520
with this I'm referring to countries

92
00:05:28,290 --> 00:05:35,130
such as China where there are

93
00:05:32,520 --> 00:05:38,219
limitations in terms of accessing some

94
00:05:35,130 --> 00:05:40,020
services expressing some opinions so in

95
00:05:38,220 --> 00:05:45,240
these cases we have solutions such as

96
00:05:40,020 --> 00:05:48,060
doors to allowing you to go out there to

97
00:05:45,240 --> 00:05:50,880
go outside and to access that content

98
00:05:48,060 --> 00:05:58,110
that otherwise you would not have access

99
00:05:50,880 --> 00:06:01,890
in this type of environment so so this

100
00:05:58,110 --> 00:06:04,500
is the type of solutions these solutions

101
00:06:01,890 --> 00:06:06,990
have been created for that we should not

102
00:06:04,500 --> 00:06:09,240
overlook we should not forget that or

103
00:06:06,990 --> 00:06:11,880
Freenet dissent and others have been

104
00:06:09,240 --> 00:06:14,610
created to preserve privacy and

105
00:06:11,880 --> 00:06:15,759
anonymity of people they were not

106
00:06:14,610 --> 00:06:19,029
originally

107
00:06:15,759 --> 00:06:21,879
as a platform to commit criminal

108
00:06:19,029 --> 00:06:25,469
activities despite the also being used

109
00:06:21,879 --> 00:06:36,039
for criminal activities so we have

110
00:06:25,469 --> 00:06:39,219
others such as riffle and so when rifle

111
00:06:36,039 --> 00:06:42,729
is not fully implemented but it is there

112
00:06:39,219 --> 00:06:46,110
and nowadays - Darnell includes more

113
00:06:42,729 --> 00:06:51,008
illegal services than the other

114
00:06:46,110 --> 00:06:53,589
solutions so as I said before tor is the

115
00:06:51,009 --> 00:06:57,840
most widespread the most popular

116
00:06:53,589 --> 00:07:00,900
solution and therefore the most used

117
00:06:57,840 --> 00:07:00,900
[Music]

118
00:07:01,439 --> 00:07:10,620
publicizing and publishing some illegal

119
00:07:08,139 --> 00:07:10,620
content

120
00:07:20,870 --> 00:07:29,840
well we also find one malicious content

121
00:07:24,740 --> 00:07:35,060
in these solutions about tor and all

122
00:07:29,840 --> 00:07:37,190
these web so this dark net has been

123
00:07:35,060 --> 00:07:39,139
widely discussed I'm not going to tell

124
00:07:37,190 --> 00:07:41,600
you what tour is about because I'm sure

125
00:07:39,139 --> 00:07:44,300
you are all over of it and those of you

126
00:07:41,600 --> 00:07:47,690
who are not aware of it I recommend you

127
00:07:44,300 --> 00:07:50,540
listen to from a mono presentation there

128
00:07:47,690 --> 00:07:53,419
are sitting here in this room they also

129
00:07:50,540 --> 00:07:57,050
gave that present a presentation one or

130
00:07:53,419 --> 00:08:02,450
two years ago at cyber camp and actually

131
00:07:57,050 --> 00:08:08,030
they it's a presentation that you can

132
00:08:02,450 --> 00:08:10,580
watch the infidel website as I say they

133
00:08:08,030 --> 00:08:13,130
delivered in that position two years ago

134
00:08:10,580 --> 00:08:19,099
and I recommend you watch it because

135
00:08:13,130 --> 00:08:23,240
they explained very well all the Burnet

136
00:08:19,100 --> 00:08:25,580
as well as others so this is a good way

137
00:08:23,240 --> 00:08:28,550
this is a good introduction for those of

138
00:08:25,580 --> 00:08:32,150
you who want to find out more about tor

139
00:08:28,550 --> 00:08:35,570
other than tor well I'm going to talk

140
00:08:32,150 --> 00:08:38,120
about Python so I hope that you have

141
00:08:35,570 --> 00:08:40,729
some basic knowledge about Python

142
00:08:38,120 --> 00:08:44,529
because I will be mentioning some tools

143
00:08:40,729 --> 00:08:48,200
and libraries that are included in this

144
00:08:44,529 --> 00:08:51,990
language as I say I expect you to have

145
00:08:48,200 --> 00:08:55,120
some basic

146
00:08:51,990 --> 00:08:59,700
information and knowledge about it and I

147
00:08:55,120 --> 00:09:03,910
will try this presentation to reach

148
00:08:59,700 --> 00:09:06,120
everyone in all the targets here in this

149
00:09:03,910 --> 00:09:06,120
room

150
00:09:09,990 --> 00:09:13,190
I was a center

151
00:09:13,590 --> 00:09:21,840
what is that well the first thing that

152
00:09:16,560 --> 00:09:24,869
we have to do is to find addresses to be

153
00:09:21,840 --> 00:09:27,420
aware of the available services and the

154
00:09:24,870 --> 00:09:28,400
question is how did you do that on the

155
00:09:27,420 --> 00:09:31,500
Internet

156
00:09:28,400 --> 00:09:35,730
if you want to find content what do you

157
00:09:31,500 --> 00:09:40,560
do well you make a set even in Google or

158
00:09:35,730 --> 00:09:44,490
you name it cheap flights here there do

159
00:09:40,560 --> 00:09:51,180
Google that so do you use search engines

160
00:09:44,490 --> 00:09:53,839
and those of you who are new to the know

161
00:09:51,180 --> 00:09:53,839
start page

162
00:09:54,249 --> 00:10:03,019
well take a look at it it is quite good

163
00:09:58,629 --> 00:10:05,149
it is a search engine that redirect all

164
00:10:03,019 --> 00:10:09,680
your searches to Google

165
00:10:05,149 --> 00:10:13,490
therefore you no longer have to give all

166
00:10:09,680 --> 00:10:15,469
your data to big Google then you go

167
00:10:13,490 --> 00:10:19,309
through a start page which is kind of

168
00:10:15,470 --> 00:10:21,290
like a proxy so the advantage is that

169
00:10:19,309 --> 00:10:23,120
you will get the same results that you

170
00:10:21,290 --> 00:10:26,149
will get in Google but this is a

171
00:10:23,120 --> 00:10:28,639
different search engine yet exactly the

172
00:10:26,149 --> 00:10:39,330
same results and you are not exposing

173
00:10:28,639 --> 00:10:41,700
your privacy so

174
00:10:39,330 --> 00:10:43,709
in solution such as doors we find

175
00:10:41,700 --> 00:10:44,370
exactly the same thing lots of search

176
00:10:43,709 --> 00:10:49,410
engines

177
00:10:44,370 --> 00:10:53,279
lots of indexing pages with onion

178
00:10:49,410 --> 00:10:58,649
addresses that help us to find addresses

179
00:10:53,279 --> 00:11:01,050
to find content that may have a lineal

180
00:10:58,649 --> 00:11:05,430
content illegal content in them we may

181
00:11:01,050 --> 00:11:14,130
use fresh onion for that and do such as

182
00:11:05,430 --> 00:11:17,099
Isis - forged passports so key items

183
00:11:14,130 --> 00:11:20,370
that you could type in in any search

184
00:11:17,100 --> 00:11:24,329
engine and then you will get onion

185
00:11:20,370 --> 00:11:28,470
addresses as result sufferance s if you

186
00:11:24,329 --> 00:11:31,709
want to hire a hacker or any illegal

187
00:11:28,470 --> 00:11:34,220
content you can think of you can easily

188
00:11:31,709 --> 00:11:37,680
search it through these type of

189
00:11:34,220 --> 00:11:40,050
solutions and through the available set

190
00:11:37,680 --> 00:11:42,479
sentence ok this is already starting

191
00:11:40,050 --> 00:11:46,319
point will have a number of search

192
00:11:42,480 --> 00:11:50,279
engines that we can use to automate our

193
00:11:46,320 --> 00:11:54,870
searches and then we will get a number

194
00:11:50,279 --> 00:11:58,399
of onion addresses that are indexed in

195
00:11:54,870 --> 00:11:58,399
these societies

196
00:11:58,750 --> 00:12:07,130
also as I said before a deep we're after

197
00:12:02,890 --> 00:12:09,890
is dynamic you will not find the same

198
00:12:07,130 --> 00:12:14,330
services all the time and as I said

199
00:12:09,890 --> 00:12:16,970
before while you may see find a service

200
00:12:14,330 --> 00:12:19,420
today and that service for whatever

201
00:12:16,970 --> 00:12:24,080
reason may not be available tomorrow

202
00:12:19,420 --> 00:12:27,800
because anyone can publish content in

203
00:12:24,080 --> 00:12:31,130
TOR actually it is very very simple you

204
00:12:27,800 --> 00:12:34,430
only need to add two lines to the config

205
00:12:31,130 --> 00:12:36,980
file and that's it that is enough for

206
00:12:34,430 --> 00:12:39,140
you to are okay

207
00:12:36,980 --> 00:12:44,890
publish the service in the Deep Web

208
00:12:39,140 --> 00:12:48,590
after with its associated onion address

209
00:12:44,890 --> 00:12:51,850
so if you stop your tour instance that

210
00:12:48,590 --> 00:12:53,980
will be enough for the service not to be

211
00:12:51,850 --> 00:12:56,570
available anymore

212
00:12:53,980 --> 00:12:59,330
references to take down the service but

213
00:12:56,570 --> 00:13:04,510
it is Apache ordination or any other

214
00:12:59,330 --> 00:13:04,510
service behind it okay as simple as that

215
00:13:06,820 --> 00:13:14,620
so were to start so very many sites to

216
00:13:11,920 --> 00:13:18,819
use darklings offers very many onion

217
00:13:14,620 --> 00:13:22,080
addresses to find this type of services

218
00:13:18,820 --> 00:13:26,140
with illegal contents also two links

219
00:13:22,080 --> 00:13:29,500
deep link some of these are search

220
00:13:26,140 --> 00:13:33,720
engines that we can use right away in

221
00:13:29,500 --> 00:13:33,720
turn so this is fresh onions

222
00:13:36,930 --> 00:13:43,979
amia is quite good by cool sacred search

223
00:13:41,760 --> 00:13:48,270
engine

224
00:13:43,980 --> 00:13:48,270
it's often quite updated

225
00:13:49,080 --> 00:13:59,430
but fresh onions or amia is that

226
00:13:56,730 --> 00:14:03,170
sentence like any other to type in your

227
00:13:59,430 --> 00:14:03,170
side's Linux

228
00:14:05,339 --> 00:14:10,619
so non-malicious

229
00:14:13,900 --> 00:14:20,150
[Music]

230
00:14:16,160 --> 00:14:24,800
and when we browse this type of a spaces

231
00:14:20,150 --> 00:14:26,540
we'll have to get used to lower speed so

232
00:14:24,800 --> 00:14:32,780
this is everything that we get as a

233
00:14:26,540 --> 00:14:34,500
result these are onion addresses that

234
00:14:32,780 --> 00:14:37,629
match our search

235
00:14:34,500 --> 00:14:37,629
[Music]

236
00:14:39,209 --> 00:14:46,599
so what we got as a result everything

237
00:14:42,699 --> 00:14:49,060
that matches Linux but we could have

238
00:14:46,600 --> 00:14:54,699
entered other search term for instance I

239
00:14:49,060 --> 00:14:56,719
don't know passport or - or Isis are you

240
00:14:54,699 --> 00:15:01,969
getting me

241
00:14:56,720 --> 00:15:06,640
and now we will be having a number of

242
00:15:01,970 --> 00:15:09,110
earning addresses so analyzed later on

243
00:15:06,640 --> 00:15:11,540
we're doing that manually it doesn't

244
00:15:09,110 --> 00:15:14,870
really make sense because we may get

245
00:15:11,540 --> 00:15:19,579
hundreds of results sometimes thousands

246
00:15:14,870 --> 00:15:21,980
of results so it doesn't really make

247
00:15:19,580 --> 00:15:24,710
sense to do that manually you just don't

248
00:15:21,980 --> 00:15:26,990
want to go one by one to check whether

249
00:15:24,710 --> 00:15:29,690
they are available or not whether they

250
00:15:26,990 --> 00:15:33,350
have the contents that you are looking

251
00:15:29,690 --> 00:15:36,590
for do as I say you can automate that

252
00:15:33,350 --> 00:15:39,100
through scripted as I will be showing

253
00:15:36,590 --> 00:15:42,100
you this is a very practical

254
00:15:39,100 --> 00:15:45,200
presentation I have some videos here

255
00:15:42,100 --> 00:15:46,940
just in case I need them but because

256
00:15:45,200 --> 00:15:51,040
these two connection is running very

257
00:15:46,940 --> 00:15:51,040
well I will do everything life

258
00:15:55,139 --> 00:16:01,360
so we have well we can use very many

259
00:15:58,089 --> 00:16:04,300
search engines so what do we need to

260
00:16:01,360 --> 00:16:06,550
interact with these sites in a

261
00:16:04,300 --> 00:16:09,849
programmatic matter well we only need to

262
00:16:06,550 --> 00:16:13,089
know the HTML structure of the websites

263
00:16:09,850 --> 00:16:16,690
how do I do my search well they okay let

264
00:16:13,089 --> 00:16:17,500
me show you such receive z-cube

265
00:16:16,690 --> 00:16:19,990
parameter

266
00:16:17,500 --> 00:16:23,199
well from Python script what do I have

267
00:16:19,990 --> 00:16:23,949
to do I have to type in the on an

268
00:16:23,199 --> 00:16:26,949
address

269
00:16:23,949 --> 00:16:30,519
- and search and then the Q parameter

270
00:16:26,949 --> 00:16:33,670
which is the search button whatever kids

271
00:16:30,519 --> 00:16:35,860
whatever search them that I introduced I

272
00:16:33,670 --> 00:16:38,680
could do that within program as a matter

273
00:16:35,860 --> 00:16:42,339
with python script and it will only take

274
00:16:38,680 --> 00:16:47,380
like three lines okay two lines plus the

275
00:16:42,339 --> 00:16:51,060
proxy liner you can do any type of

276
00:16:47,380 --> 00:16:56,570
search fresh onions

277
00:16:51,060 --> 00:17:02,420
well fresh onions also shows you life

278
00:16:56,570 --> 00:17:04,590
addresses so it doesn't show the

279
00:17:02,420 --> 00:17:07,500
addresses that are not pointing at

280
00:17:04,589 --> 00:17:11,849
anything or having taken down so it only

281
00:17:07,500 --> 00:17:13,770
shows you active life addresses it shows

282
00:17:11,849 --> 00:17:16,740
you when it has been published when it

283
00:17:13,770 --> 00:17:20,910
was last visited and the last time when

284
00:17:16,740 --> 00:17:23,040
it was published and then it gives you

285
00:17:20,910 --> 00:17:26,520
the address as well as the entire

286
00:17:23,040 --> 00:17:31,740
already name of the site and well you

287
00:17:26,520 --> 00:17:34,100
can do any search or - or Isis Isis you

288
00:17:31,740 --> 00:17:34,100
name it

289
00:17:44,870 --> 00:17:47,340
cyberwar

290
00:17:45,950 --> 00:17:52,239
[Music]

291
00:17:47,340 --> 00:17:56,399
okay britain german in russian several

292
00:17:52,239 --> 00:18:01,570
onion domains some of them are

293
00:17:56,399 --> 00:18:07,779
supplicated but in anyway they match the

294
00:18:01,570 --> 00:18:11,889
search term Isis shows content

295
00:18:07,779 --> 00:18:14,580
containing Isis and then you see onion

296
00:18:11,889 --> 00:18:14,580
addresses

297
00:18:15,120 --> 00:18:24,889
this was published four weeks ago and

298
00:18:17,909 --> 00:18:28,049
seen a day ago so very easy to search

299
00:18:24,889 --> 00:18:30,539
for disciple free to make this type of

300
00:18:28,049 --> 00:18:33,408
searches but then you can also get lots

301
00:18:30,539 --> 00:18:33,408
of crap

302
00:18:41,350 --> 00:18:44,850
okay what to do now

303
00:18:45,010 --> 00:18:49,600
when you do this type of searches and

304
00:18:48,100 --> 00:18:52,418
you come up to the services these

305
00:18:49,600 --> 00:18:56,620
services are data sources think about

306
00:18:52,419 --> 00:19:00,610
them as databases so lots of information

307
00:18:56,620 --> 00:19:03,909
you can consult what type of language

308
00:19:00,610 --> 00:19:10,000
are we using we are not using SQL but we

309
00:19:03,910 --> 00:19:13,570
are using HTTP requests so here we are

310
00:19:10,000 --> 00:19:17,320
talking about HTTP hidden services web

311
00:19:13,570 --> 00:19:19,990
service but in the Deep Web of tools you

312
00:19:17,320 --> 00:19:23,260
can get any type of service as long as

313
00:19:19,990 --> 00:19:25,570
they support HTTP protocol we will be

314
00:19:23,260 --> 00:19:28,809
focusing on HTTP which is the most

315
00:19:25,570 --> 00:19:31,720
common web services therefore we want to

316
00:19:28,809 --> 00:19:34,660
consult these databases and then to

317
00:19:31,720 --> 00:19:38,830
check that the addresses that these

318
00:19:34,660 --> 00:19:41,440
databases Britain published for instance

319
00:19:38,830 --> 00:19:44,590
if I typing Isis for this specific

320
00:19:41,440 --> 00:19:46,299
search then I get a number of onion

321
00:19:44,590 --> 00:19:48,490
addresses then I have to check that

322
00:19:46,299 --> 00:19:50,200
those onion addresses I have returning

323
00:19:48,490 --> 00:19:53,830
anything to me that is to say that they

324
00:19:50,200 --> 00:19:55,809
are life so if I check these addresses

325
00:19:53,830 --> 00:19:59,649
or consultants addresses and then then

326
00:19:55,809 --> 00:20:01,928
it tells me that it is down it is of no

327
00:19:59,650 --> 00:20:05,679
use at all so I'm interested in those

328
00:20:01,929 --> 00:20:08,049
services which are life and well those

329
00:20:05,679 --> 00:20:10,450
that are down what could I use them for

330
00:20:08,049 --> 00:20:14,290
well just for me to know that at a given

331
00:20:10,450 --> 00:20:18,220
point in time the address was life and

332
00:20:14,290 --> 00:20:20,260
that it is not life anymore so how do we

333
00:20:18,220 --> 00:20:23,049
resolve the issue of solving the

334
00:20:20,260 --> 00:20:25,929
plumbing in the pythonic way have you

335
00:20:23,049 --> 00:20:29,010
ever heard about pythonic libraries or

336
00:20:25,929 --> 00:20:29,010
pythonic toad

337
00:20:30,210 --> 00:20:41,070
only three of you four or five okay so

338
00:20:38,020 --> 00:20:45,970
we talked about solving a problem in the

339
00:20:41,070 --> 00:20:51,310
pythonic way we mean that python has

340
00:20:45,970 --> 00:20:55,120
been designed so that things are solved

341
00:20:51,310 --> 00:20:57,970
easily only through a few lines of code

342
00:20:55,120 --> 00:21:01,090
in the most straightforward manner

343
00:20:57,970 --> 00:21:03,340
possible so when I develop something

344
00:21:01,090 --> 00:21:06,340
when I create something I'd like to

345
00:21:03,340 --> 00:21:08,169
focus on the problem but not on the

346
00:21:06,340 --> 00:21:10,209
problems that I make it from the actual

347
00:21:08,170 --> 00:21:16,900
language for instance if you're working

348
00:21:10,210 --> 00:21:19,420
on Java a very cool language so you may

349
00:21:16,900 --> 00:21:23,860
come up with very many problems problems

350
00:21:19,420 --> 00:21:27,340
within libraries it is a quite complex

351
00:21:23,860 --> 00:21:30,850
language however you don't find so many

352
00:21:27,340 --> 00:21:33,370
problems in Python in Python we focus

353
00:21:30,850 --> 00:21:36,219
more on the problem on solving the

354
00:21:33,370 --> 00:21:38,290
problem and that is the objective that

355
00:21:36,220 --> 00:21:41,230
is to say solving things in a

356
00:21:38,290 --> 00:21:43,830
straightforward manner so going right

357
00:21:41,230 --> 00:21:47,380
away to the problem and this is what

358
00:21:43,830 --> 00:21:51,159
Python allows us to do how to solve the

359
00:21:47,380 --> 00:21:54,460
problem like this so we consult

360
00:21:51,160 --> 00:21:59,620
databases number of directories number

361
00:21:54,460 --> 00:22:03,370
of search engines key terms any content

362
00:21:59,620 --> 00:22:06,780
we may be interested in and then we make

363
00:22:03,370 --> 00:22:11,020
our consultations through HTTP requests

364
00:22:06,780 --> 00:22:16,270
second applying patterns to our queries

365
00:22:11,020 --> 00:22:19,900
so search patterns for instance if we

366
00:22:16,270 --> 00:22:22,480
look for child porn or Isis so fast

367
00:22:19,900 --> 00:22:26,290
passports anything we may be interested

368
00:22:22,480 --> 00:22:28,180
in then we filter those addresses so we

369
00:22:26,290 --> 00:22:31,570
are only interested in those who

370
00:22:28,180 --> 00:22:33,720
currently live that are responding to

371
00:22:31,570 --> 00:22:35,759
our requests

372
00:22:33,720 --> 00:22:38,580
so we are not interested in those

373
00:22:35,759 --> 00:22:40,500
addresses that take us nowhere and you

374
00:22:38,580 --> 00:22:45,080
just don't want to open it and to say

375
00:22:40,500 --> 00:22:51,110
well not found so we filtered those out

376
00:22:45,080 --> 00:22:54,389
then because queries against each of the

377
00:22:51,110 --> 00:22:57,209
active addresses and analysis of the

378
00:22:54,389 --> 00:22:59,129
response we will analyze the addresses

379
00:22:57,210 --> 00:23:02,190
that we will find in a programmatic

380
00:22:59,129 --> 00:23:04,559
manner and then we will analyze the

381
00:23:02,190 --> 00:23:07,620
response and then what we mean by

382
00:23:04,559 --> 00:23:10,230
propose getting the HTTP code that the

383
00:23:07,620 --> 00:23:17,100
server returns to us and to analyze it

384
00:23:10,230 --> 00:23:20,220
simple well very very simple we just get

385
00:23:17,100 --> 00:23:23,340
the return the text of the response

386
00:23:20,220 --> 00:23:26,240
which is just the ordinary HTTP code we

387
00:23:23,340 --> 00:23:31,019
analyze it and furnaces we check the

388
00:23:26,240 --> 00:23:36,740
labels and links pointing at other onion

389
00:23:31,019 --> 00:23:41,220
addresses oh using Bitcoin addresses

390
00:23:36,740 --> 00:23:43,860
user names email addresses telephone

391
00:23:41,220 --> 00:23:47,509
numbers for since for Spain or with

392
00:23:43,860 --> 00:23:50,668
Spanish country code or for instance

393
00:23:47,509 --> 00:23:54,919
landline numbers or mobile telephone

394
00:23:50,669 --> 00:24:00,830
numbers all that could be done in very

395
00:23:54,919 --> 00:24:00,830
easy way then

396
00:24:01,310 --> 00:24:07,649
story

397
00:24:03,399 --> 00:24:10,840
the websites that we found as well as

398
00:24:07,649 --> 00:24:12,879
any information information that you get

399
00:24:10,840 --> 00:24:15,908
you may store it in the file in the

400
00:24:12,879 --> 00:24:19,779
database that information can be stored

401
00:24:15,909 --> 00:24:24,539
to analyze it later and offline we are

402
00:24:19,779 --> 00:24:30,299
not going to be log onto the net where

403
00:24:24,539 --> 00:24:33,129
okay all the time we can also do

404
00:24:30,299 --> 00:24:38,679
spidering for each of the services found

405
00:24:33,129 --> 00:24:40,809
do you know what a spidering is well

406
00:24:38,679 --> 00:24:41,429
more people have pressed their hands

407
00:24:40,809 --> 00:24:44,428
down

408
00:24:41,429 --> 00:24:44,429
good

409
00:24:44,690 --> 00:24:54,510
so when we find that pays side so we

410
00:24:50,910 --> 00:24:57,210
want to do strapping we just want to see

411
00:24:54,510 --> 00:24:59,370
all the links that it's pointing us to

412
00:24:57,210 --> 00:25:02,010
discover more on you addresses related

413
00:24:59,370 --> 00:25:03,629
to that service that will be the most

414
00:25:02,010 --> 00:25:06,300
interesting thing to do

415
00:25:03,630 --> 00:25:09,810
that is to say to get more other

416
00:25:06,300 --> 00:25:13,290
addresses from that this is a simple

417
00:25:09,810 --> 00:25:15,840
algorithm and then applying patterns -

418
00:25:13,290 --> 00:25:18,870
expressions to detect illegal content

419
00:25:15,840 --> 00:25:21,540
any Content that we are consulting any

420
00:25:18,870 --> 00:25:24,629
HTTP address that we analyze we apply a

421
00:25:21,540 --> 00:25:27,210
regular expression to it to extract

422
00:25:24,630 --> 00:25:29,520
email addresses from that onion address

423
00:25:27,210 --> 00:25:32,070
or as I said before well Bitcoin

424
00:25:29,520 --> 00:25:34,620
addresses whatever you can think of

425
00:25:32,070 --> 00:25:37,950
credit cards these are just patterns of

426
00:25:34,620 --> 00:25:41,040
regular expressions that you find in

427
00:25:37,950 --> 00:25:44,640
through Stack Overflow or through any

428
00:25:41,040 --> 00:25:46,770
other case you can think of on the

429
00:25:44,640 --> 00:25:51,240
internet and last we isolate the

430
00:25:46,770 --> 00:25:52,770
services - match these patterns so we

431
00:25:51,240 --> 00:25:57,560
have onion addresses which is

432
00:25:52,770 --> 00:26:01,800
interesting cup content and feeding with

433
00:25:57,560 --> 00:26:05,550
specific patterns so credit cards or any

434
00:26:01,800 --> 00:26:08,700
type of numbers landlines mobile numbers

435
00:26:05,550 --> 00:26:12,510
this is what we are looking for and now

436
00:26:08,700 --> 00:26:18,110
each of these steps how do we do it well

437
00:26:12,510 --> 00:26:18,110
we do that through in Python

438
00:26:18,640 --> 00:26:27,940
taking database we need toward to be up

439
00:26:22,480 --> 00:26:32,440
with the process in order to use it then

440
00:26:27,940 --> 00:26:34,720
we require requests requests socks or

441
00:26:32,440 --> 00:26:37,150
socks by the sir libraries in Python

442
00:26:34,720 --> 00:26:45,070
it's requests humidity it doesn't even

443
00:26:37,150 --> 00:26:49,570
work with - requests 99% of you is a

444
00:26:45,070 --> 00:26:56,168
library in order to create HTTP clients

445
00:26:49,570 --> 00:26:58,720
with a import request request dot

446
00:26:56,169 --> 00:27:02,370
whatever the method you want to use and

447
00:26:58,720 --> 00:27:07,960
the address you want to point after

448
00:27:02,370 --> 00:27:14,649
release 2.10 of request we can implement

449
00:27:07,960 --> 00:27:18,549
different things then our Python script

450
00:27:14,650 --> 00:27:20,740
imports request to specify the proxy

451
00:27:18,549 --> 00:27:22,660
songs that it's up in the local machine

452
00:27:20,740 --> 00:27:26,620
and then we launch the script with

453
00:27:22,660 --> 00:27:29,919
request and we say request that get add

454
00:27:26,620 --> 00:27:32,139
red onion address proxies in the list of

455
00:27:29,919 --> 00:27:36,130
proxies which would be one towards us

456
00:27:32,140 --> 00:27:39,100
proxy and with this we can check the

457
00:27:36,130 --> 00:27:43,809
data sources our search engines

458
00:27:39,100 --> 00:27:46,059
themselves yes doing HTTP requests

459
00:27:43,809 --> 00:27:47,710
through a library it's very simple it's

460
00:27:46,059 --> 00:27:53,620
three lines then it gets more

461
00:27:47,710 --> 00:27:56,130
complicated applying several patents to

462
00:27:53,620 --> 00:28:00,010
queries

463
00:27:56,130 --> 00:28:03,280
we have it certain genes some of them

464
00:28:00,010 --> 00:28:07,540
received patterns the world won't search

465
00:28:03,280 --> 00:28:11,020
for their URL others are a webform they

466
00:28:07,540 --> 00:28:14,000
have a box and the request has to be

467
00:28:11,020 --> 00:28:16,780
made afterwards

468
00:28:14,000 --> 00:28:19,610
it's supposed to request with a specific

469
00:28:16,780 --> 00:28:23,000
parameter depending on the structure of

470
00:28:19,610 --> 00:28:25,879
its search engine we need to create the

471
00:28:23,000 --> 00:28:28,610
routine decode routine that would be

472
00:28:25,880 --> 00:28:31,540
second step and third filtering

473
00:28:28,610 --> 00:28:34,969
addresses were interested in we use

474
00:28:31,540 --> 00:28:40,580
requests we have an on your address in

475
00:28:34,970 --> 00:28:43,040
the results we carry out HTTP requests

476
00:28:40,580 --> 00:28:55,220
it's like clicking on the link and very

477
00:28:43,040 --> 00:28:57,470
fine whether it's up or not Ricardo's s

478
00:28:55,220 --> 00:29:00,520
doesn't ask admission fee ok this is a

479
00:28:57,470 --> 00:29:05,540
very simple script for the first checks

480
00:29:00,520 --> 00:29:08,810
we use requests we import the proxy Sox

481
00:29:05,540 --> 00:29:11,510
specification for instance has to be up

482
00:29:08,810 --> 00:29:14,409
in this case in my machine so I did it

483
00:29:11,510 --> 00:29:14,410
in no time

484
00:29:22,460 --> 00:29:28,440
well on Taurasi Alberto noventa thing

485
00:29:25,289 --> 00:29:32,220
cuenta is therapy pools 9050 will be

486
00:29:28,440 --> 00:29:34,499
open and proxy soaks all the requests

487
00:29:32,220 --> 00:29:38,149
through this port will be routed through

488
00:29:34,499 --> 00:29:41,159
tor they will go directly to tor

489
00:29:38,149 --> 00:29:45,059
what do we have here we have a series of

490
00:29:41,159 --> 00:29:48,029
proxies wonderful it's a dictionary in

491
00:29:45,059 --> 00:29:51,749
Python and what do we do next the

492
00:29:48,029 --> 00:29:54,570
simplest thing over them all we create a

493
00:29:51,749 --> 00:29:57,659
function called search under dear

494
00:29:54,570 --> 00:30:05,399
there's another search engine that would

495
00:29:57,659 --> 00:30:07,080
check under there it's a different

496
00:30:05,399 --> 00:30:14,908
search engine such as the ones I've

497
00:30:07,080 --> 00:30:17,489
explained before but it's specific it's

498
00:30:14,909 --> 00:30:20,809
malicious because it offers a lot of

499
00:30:17,489 --> 00:30:23,809
services which are illegal per se

500
00:30:20,809 --> 00:30:23,809
business

501
00:30:24,220 --> 00:30:34,310
markets scroll communications core sites

502
00:30:30,820 --> 00:30:40,250
hosting other languages that's a bit of

503
00:30:34,310 --> 00:30:42,889
everything but it's certainly does not

504
00:30:40,250 --> 00:30:45,140
filter addresses you could have

505
00:30:42,890 --> 00:30:47,810
everything here so it's a good source

506
00:30:45,140 --> 00:30:50,470
data for our goal what do we do with the

507
00:30:47,810 --> 00:30:54,830
script we'd send the onion address and

508
00:30:50,470 --> 00:31:00,980
when we carry out a search for example

509
00:30:54,830 --> 00:31:04,909
passports in under there the HTTP

510
00:31:00,980 --> 00:31:07,450
request is made and take a look at the

511
00:31:04,910 --> 00:31:09,320
structure in this case search it would

512
00:31:07,450 --> 00:31:12,190
passport there's one on this structure

513
00:31:09,320 --> 00:31:15,860
this is the other one

514
00:31:12,190 --> 00:31:21,380
when do do this without pagination it

515
00:31:15,860 --> 00:31:26,479
would do the term which is included in

516
00:31:21,380 --> 00:31:29,150
the search filter you want pages we were

517
00:31:26,480 --> 00:31:32,320
not we don't want to keep just a result

518
00:31:29,150 --> 00:31:35,480
in the first page 20 pages 30 pages

519
00:31:32,320 --> 00:31:37,760
depending on how patient we are because

520
00:31:35,480 --> 00:31:41,720
it's going to take time what do we do

521
00:31:37,760 --> 00:31:44,780
now is a reserved word here that will

522
00:31:41,720 --> 00:31:49,660
that we will replace later and would

523
00:31:44,780 --> 00:31:53,620
create a cycle for

524
00:31:49,660 --> 00:31:58,420
we created a loop for there were

525
00:31:53,620 --> 00:32:02,550
repeated four four pages using these

526
00:31:58,420 --> 00:32:08,140
criteria to search to rubbish

527
00:32:02,550 --> 00:32:11,649
we're going to look for rubbish we I

528
00:32:08,140 --> 00:32:18,540
trade each one of these criteria we

529
00:32:11,650 --> 00:32:21,630
replace criteria wildcard this text

530
00:32:18,540 --> 00:32:25,180
string with any of these criteria when

531
00:32:21,630 --> 00:32:28,000
concatenated with a dress desert with

532
00:32:25,180 --> 00:32:30,850
Korea requires this is very simple this

533
00:32:28,000 --> 00:32:32,680
would be addressed to search this would

534
00:32:30,850 --> 00:32:39,240
be equivalent to this

535
00:32:32,680 --> 00:32:39,240
and lastly important we need to specify

536
00:32:39,540 --> 00:32:48,750
we're going to go this HTTP request

537
00:32:50,000 --> 00:33:04,630
it's very simple we're using Python it's

538
00:32:53,630 --> 00:33:07,660
a simple proof of concept Python 3 park1

539
00:33:04,630 --> 00:33:10,730
this is going to take a while

540
00:33:07,660 --> 00:33:13,190
I'm but we can see here I'm taking this

541
00:33:10,730 --> 00:33:16,730
and the only thing the script is doing

542
00:33:13,190 --> 00:33:18,650
this first proof of concept is designing

543
00:33:16,730 --> 00:33:25,520
the address I'm looking for and the code

544
00:33:18,650 --> 00:33:28,610
of response page 1 page 1 and child-porn

545
00:33:25,520 --> 00:33:32,330
CP drugs we're going through the loop

546
00:33:28,610 --> 00:33:33,649
and when it says response 200 it means

547
00:33:32,330 --> 00:33:38,120
the request has been made then the

548
00:33:33,650 --> 00:33:43,870
answer is 200 HTTP 200 saying it's ok to

549
00:33:38,120 --> 00:33:43,870
study status codes Nate DT be simple

550
00:33:44,200 --> 00:33:50,510
what we've done with the problem is 30

551
00:33:47,210 --> 00:33:55,340
those criteria and going through 4 pages

552
00:33:50,510 --> 00:33:59,890
with a script in Python which removing

553
00:33:55,340 --> 00:34:04,490
comments and things which I'll use less

554
00:33:59,890 --> 00:34:09,340
it's just 20 lines but taking something

555
00:34:04,490 --> 00:34:12,949
that would be 15 so that's a basic

556
00:34:09,340 --> 00:34:18,210
search engine next proof of concept less

557
00:34:12,949 --> 00:34:22,319
let's get deeper into the problem first

558
00:34:18,210 --> 00:34:25,379
we keep what we had before and here

559
00:34:22,319 --> 00:34:26,849
we'll start with her crawling process it

560
00:34:25,379 --> 00:34:30,118
gets a bit complicated but not too much

561
00:34:26,849 --> 00:34:32,849
so we continue with the same thing we're

562
00:34:30,119 --> 00:34:34,040
using the same search and in which is

563
00:34:32,849 --> 00:34:37,589
under there

564
00:34:34,040 --> 00:34:44,940
and we say let's search for this

565
00:34:37,589 --> 00:34:50,668
criteria violence - Isis we have to say

566
00:34:44,940 --> 00:34:54,260
that this was designed for activities

567
00:34:50,668 --> 00:34:54,259
developed by law enforcement

568
00:34:55,360 --> 00:35:05,700
you don't usually do this I think but

569
00:35:00,690 --> 00:35:05,700
you know it's not too complicated

570
00:35:06,120 --> 00:35:15,160
what we see here we are requesting this

571
00:35:10,300 --> 00:35:18,610
to this onion address we replace

572
00:35:15,160 --> 00:35:25,049
criteria wildcard by whatever thing you

573
00:35:18,610 --> 00:35:28,930
want to look for and then after the

574
00:35:25,050 --> 00:35:36,630
before during a request we invoke this

575
00:35:28,930 --> 00:35:42,540
function we create a queue and that Q

576
00:35:36,630 --> 00:35:45,400
it's a an LIF o Q it's a toughness stuck

577
00:35:42,540 --> 00:35:48,759
like a stack what the K said what's the

578
00:35:45,400 --> 00:35:52,950
same way the trusses are getting in the

579
00:35:48,760 --> 00:35:52,950
last ins the first out simple

580
00:35:54,620 --> 00:36:00,210
it's a recursive process it's not yet

581
00:35:58,110 --> 00:36:01,830
but it will be we have a process in

582
00:36:00,210 --> 00:36:05,910
which we go through all the elements of

583
00:36:01,830 --> 00:36:06,960
the keel not W this red edge from this

584
00:36:05,910 --> 00:36:09,600
iterations

585
00:36:06,960 --> 00:36:12,810
it's an HTTP request for each onion

586
00:36:09,600 --> 00:36:18,049
address uncovered and what do we do with

587
00:36:12,810 --> 00:36:21,060
this address we try to extract the links

588
00:36:18,050 --> 00:36:25,320
we search with under day or any other

589
00:36:21,060 --> 00:36:28,290
search engine you want we see search for

590
00:36:25,320 --> 00:36:31,230
Isis it's going to show a series of

591
00:36:28,290 --> 00:36:35,700
onion addresses which include Isis as a

592
00:36:31,230 --> 00:36:38,400
criteria then we take in each one of

593
00:36:35,700 --> 00:36:41,160
them using our program we carry out our

594
00:36:38,400 --> 00:36:44,930
HTTP request against each one of these

595
00:36:41,160 --> 00:36:49,250
links for each of the pages with said

596
00:36:44,930 --> 00:36:52,710
and these gets four pages we obtain

597
00:36:49,250 --> 00:36:55,050
responses what interest what what is it

598
00:36:52,710 --> 00:36:58,290
of interest for us in these pages are

599
00:36:55,050 --> 00:37:02,880
the links to other pages so spider and

600
00:36:58,290 --> 00:37:04,950
processor crawling processes we invoke a

601
00:37:02,880 --> 00:37:10,140
function called get links which has

602
00:37:04,950 --> 00:37:15,350
nothing and open an empty list the next

603
00:37:10,140 --> 00:37:15,350
proof of concept we use more things

604
00:37:15,580 --> 00:37:21,880
in this particular case number two we do

605
00:37:19,720 --> 00:37:25,660
the same thing we did before with crawl

606
00:37:21,880 --> 00:37:27,850
we carry out the crawling process and

607
00:37:25,660 --> 00:37:29,890
then with gatlings we use a wonderful

608
00:37:27,850 --> 00:37:33,850
library code beautifulsoup

609
00:37:29,890 --> 00:37:37,420
is it familiar to you but those who you

610
00:37:33,850 --> 00:37:38,589
who put it behind you know that with

611
00:37:37,420 --> 00:37:43,150
beautifulsoup

612
00:37:38,590 --> 00:37:49,410
we can analyze the structure of website

613
00:37:43,150 --> 00:37:53,290
whether it's a team xml or any other

614
00:37:49,410 --> 00:37:55,210
here we have beautiful soup which does

615
00:37:53,290 --> 00:38:01,420
wonderful thing going with a couple of

616
00:37:55,210 --> 00:38:04,330
lines we can tell it to extract every

617
00:38:01,420 --> 00:38:07,900
link in an HTML code and store it in a

618
00:38:04,330 --> 00:38:11,410
list it's wonderful because we have HTML

619
00:38:07,900 --> 00:38:14,140
code that we've previously checked and

620
00:38:11,410 --> 00:38:18,009
that most likely will include malicious

621
00:38:14,140 --> 00:38:19,960
content or legal content and out of this

622
00:38:18,010 --> 00:38:23,920
page we're going to extract all the

623
00:38:19,960 --> 00:38:30,040
links with the tags with the attribute 8

624
00:38:23,920 --> 00:38:32,650
r EF links in this HTML structure what I

625
00:38:30,040 --> 00:38:36,900
were interested what are we interested

626
00:38:32,650 --> 00:38:39,820
in here the onion address create

627
00:38:36,900 --> 00:38:41,740
database series of onion and trusses

628
00:38:39,820 --> 00:38:45,240
which are directly or indirectly linked

629
00:38:41,740 --> 00:38:48,310
to search patterns that we have included

630
00:38:45,240 --> 00:38:51,939
we check that it is a valid address with

631
00:38:48,310 --> 00:38:55,900
this function is it a valid address and

632
00:38:51,940 --> 00:38:59,920
here we use the validators package that

633
00:38:55,900 --> 00:39:04,360
python has is and I say please validated

634
00:38:59,920 --> 00:39:07,890
it this add read is not taught to web or

635
00:39:04,360 --> 00:39:11,440
dot onion because we want everything

636
00:39:07,890 --> 00:39:14,470
before the point onion they taught onion

637
00:39:11,440 --> 00:39:19,930
to check that it's valid address the

638
00:39:14,470 --> 00:39:21,669
minimum length of 16 or 16 or 56 onion

639
00:39:19,930 --> 00:39:25,029
addresses have this length

640
00:39:21,670 --> 00:39:27,880
normal addresses used to have 16 new

641
00:39:25,030 --> 00:39:32,950
generation which was launched last year

642
00:39:27,880 --> 00:39:36,819
it can have up to 56 we want to validate

643
00:39:32,950 --> 00:39:40,419
it to check that it's a valid address

644
00:39:36,819 --> 00:39:45,160
not just any silly text that may be

645
00:39:40,420 --> 00:39:50,609
included in HTML and we extract

646
00:39:45,160 --> 00:39:56,200
plaintext onion so on in addressed we

647
00:39:50,609 --> 00:40:01,170
return that the onion address and here

648
00:39:56,200 --> 00:40:01,169
below we say we're only interested in

649
00:40:01,470 --> 00:40:06,549
single addresses with greater said it's

650
00:40:04,750 --> 00:40:08,559
a collection in faithlyn

651
00:40:06,549 --> 00:40:10,630
that says that every element including

652
00:40:08,559 --> 00:40:12,640
it does not admit it duplicate it's a

653
00:40:10,630 --> 00:40:16,770
list in Python legalist every element

654
00:40:12,640 --> 00:40:21,578
agree they are unique you can't have

655
00:40:16,770 --> 00:40:26,040
duplicated addresses they're not going

656
00:40:21,579 --> 00:40:30,299
to be duplicated this is what we return

657
00:40:26,040 --> 00:40:30,299
we're going to have a lot of links

658
00:40:31,440 --> 00:40:41,130
now and we will go through them here

659
00:40:37,160 --> 00:40:45,560
here we get the links we go through them

660
00:40:41,130 --> 00:40:45,560
that dynamically included in the queue

661
00:40:47,450 --> 00:40:51,629
we're going to do the links we fight

662
00:40:50,099 --> 00:40:54,780
we're going to create a queue with a lot

663
00:40:51,630 --> 00:40:57,119
of addresses and later on we'll we'll

664
00:40:54,780 --> 00:41:00,050
process them so let's execute this

665
00:40:57,119 --> 00:41:00,050
process

666
00:41:09,550 --> 00:41:16,010
mr. Botha dharamendra

667
00:41:11,870 --> 00:41:18,290
this can take a while well this is just

668
00:41:16,010 --> 00:41:21,170
a proof of concept as I said at the

669
00:41:18,290 --> 00:41:24,200
beginning this type of tools this

670
00:41:21,170 --> 00:41:26,000
breadth of concepts are just extraction

671
00:41:24,200 --> 00:41:30,439
from other project in which I've worked

672
00:41:26,000 --> 00:41:32,510
to some of my clients they're not

673
00:41:30,440 --> 00:41:36,280
usually executed in this way they're

674
00:41:32,510 --> 00:41:41,600
useless acute in servers with a more

675
00:41:36,280 --> 00:41:44,960
solid server infrastructure it's not

676
00:41:41,600 --> 00:41:46,819
enough by just launching the script you

677
00:41:44,960 --> 00:41:49,880
need to put this into celery which is a

678
00:41:46,820 --> 00:41:53,300
programmed task to be launched once in a

679
00:41:49,880 --> 00:41:55,340
while and it will take the time it needs

680
00:41:53,300 --> 00:41:58,700
it's a process that can take quite a lot

681
00:41:55,340 --> 00:42:01,190
of time this is the process it's looking

682
00:41:58,700 --> 00:42:05,210
for child porn page one and it's

683
00:42:01,190 --> 00:42:07,460
starting to extract all these onion

684
00:42:05,210 --> 00:42:11,480
addresses for someone here this one is

685
00:42:07,460 --> 00:42:14,360
interesting when it shows this type of

686
00:42:11,480 --> 00:42:16,210
failure it shows that the service was up

687
00:42:14,360 --> 00:42:18,530
at some point but it's not up anymore

688
00:42:16,210 --> 00:42:21,260
but the typical case in which the

689
00:42:18,530 --> 00:42:23,630
service at some point was available that

690
00:42:21,260 --> 00:42:26,680
onion interest was registered in under

691
00:42:23,630 --> 00:42:26,680
day but it's not anymore

692
00:42:28,290 --> 00:42:41,670
host in ritual the crawling process

693
00:42:32,220 --> 00:42:45,180
continues and till we stop it we have

694
00:42:41,670 --> 00:42:47,790
something to work with a lot of onion

695
00:42:45,180 --> 00:42:50,580
addresses that will allow us to extract

696
00:42:47,790 --> 00:42:59,390
information that may have illegal things

697
00:42:50,580 --> 00:42:59,390
in them I launched it again

698
00:43:01,770 --> 00:43:14,130
I prefer some other thing yes that amino

699
00:43:10,619 --> 00:43:18,510
for normal so I don't like this term

700
00:43:14,130 --> 00:43:22,950
either like this one but it is less

701
00:43:18,510 --> 00:43:27,090
violent I guess let's see what I can

702
00:43:22,950 --> 00:43:30,529
find with this first one it says nope

703
00:43:27,090 --> 00:43:30,530
it's looking for more

704
00:43:31,579 --> 00:43:36,789
you always have to check that it's up

705
00:43:37,119 --> 00:43:45,680
here it has found this address let's

706
00:43:40,519 --> 00:43:51,038
check nobilis podemos explorer Armando

707
00:43:45,680 --> 00:43:51,038
we can't explode them manually later on

708
00:43:53,229 --> 00:44:00,410
con mucha path NCO club okay so Thursday

709
00:43:56,559 --> 00:44:05,150
was a tiempo it takes time so I'm going

710
00:44:00,410 --> 00:44:09,549
to change this it has to connect okay

711
00:44:05,150 --> 00:44:09,549
let's see some other

712
00:44:11,220 --> 00:44:18,118
this is timed out

713
00:44:15,260 --> 00:44:21,780
it hasn't answered it hasn't responded

714
00:44:18,119 --> 00:44:25,770
in 15 seconds so that's timeout perhaps

715
00:44:21,780 --> 00:44:30,240
the network is the connection is a bit

716
00:44:25,770 --> 00:44:36,200
slow this one green draughts

717
00:44:30,240 --> 00:44:36,200
let's see this one copy

718
00:44:39,609 --> 00:44:42,569
let's see

719
00:44:45,899 --> 00:44:50,529
one otra Asuna las direcciones commotion

720
00:44:49,029 --> 00:44:52,689
contrada con esta pro se Minter's and

721
00:44:50,529 --> 00:44:54,959
this is one of the addresses we've found

722
00:44:52,689 --> 00:44:59,908
with the simple procedure and it shows

723
00:44:54,959 --> 00:44:59,908
prices in case you want to deal

724
00:45:07,900 --> 00:45:18,880
so with obtained part of the results

725
00:45:13,529 --> 00:45:24,670
this was the first part of a job we have

726
00:45:18,880 --> 00:45:26,890
a series of addresses with this topics

727
00:45:24,670 --> 00:45:30,670
we need to analyze the addresses in

728
00:45:26,890 --> 00:45:33,308
order to extract the information and

729
00:45:30,670 --> 00:45:35,759
right now we have the fourth part what

730
00:45:33,309 --> 00:45:35,759
do we do

731
00:45:36,540 --> 00:45:44,580
before we stopped here just crawling

732
00:45:40,950 --> 00:45:48,149
process and including every onion

733
00:45:44,580 --> 00:45:51,779
dresnok cube now we're going to take a

734
00:45:48,150 --> 00:45:55,830
step further and we're going to process

735
00:45:51,780 --> 00:45:59,580
each URL it's linked how we just

736
00:45:55,830 --> 00:46:04,860
received the link and we apply regular

737
00:45:59,580 --> 00:46:07,799
expressions in this case we just have a

738
00:46:04,860 --> 00:46:10,650
pattern a regular expression in order to

739
00:46:07,800 --> 00:46:15,330
say what's incurred in this text it's an

740
00:46:10,650 --> 00:46:19,910
email or a Bitcoin address and the same

741
00:46:15,330 --> 00:46:27,950
we send an HTTP request against that

742
00:46:19,910 --> 00:46:30,420
address matches with regular expression

743
00:46:27,950 --> 00:46:34,710
given the content we're giving this

744
00:46:30,420 --> 00:46:38,330
contains 8 t ml code of the website

745
00:46:34,710 --> 00:46:38,330
we've just found

746
00:46:38,880 --> 00:46:47,410
if they're sukhoi incidents we print it

747
00:46:43,869 --> 00:46:54,040
on our screen much much and there are no

748
00:46:47,410 --> 00:46:57,160
matches no matches this is the

749
00:46:54,040 --> 00:47:00,340
interesting part of it once everything

750
00:46:57,160 --> 00:47:04,379
is done we save to our database or

751
00:47:00,340 --> 00:47:09,369
whatever you want they will it's usually

752
00:47:04,380 --> 00:47:12,400
database persistent story now it's

753
00:47:09,369 --> 00:47:19,720
looking for Isis page one the same

754
00:47:12,400 --> 00:47:23,020
crawling process it's found an address

755
00:47:19,720 --> 00:47:25,319
which is this one and I say ok let's see

756
00:47:23,020 --> 00:47:25,320
what it is

757
00:47:46,290 --> 00:47:53,680
actually I can only forget the NS so now

758
00:47:49,980 --> 00:47:55,900
we should analyze the content of this

759
00:47:53,680 --> 00:47:59,020
internally but it has found an Isis

760
00:47:55,900 --> 00:48:01,750
button in this page so this should be

761
00:47:59,020 --> 00:48:03,310
something here there's a threat so there

762
00:48:01,750 --> 00:48:06,960
should be something related to it

763
00:48:03,310 --> 00:48:10,779
this was timed out it analyzes

764
00:48:06,960 --> 00:48:16,420
connections and if it finds matches it

765
00:48:10,780 --> 00:48:19,270
says Matt or Nomad it finds patterns for

766
00:48:16,420 --> 00:48:20,950
email address or Bitcoin addresses in

767
00:48:19,270 --> 00:48:25,990
this specific case but we could use

768
00:48:20,950 --> 00:48:27,700
regular expressions for credit cards you

769
00:48:25,990 --> 00:48:31,470
have to be creative here

770
00:48:27,700 --> 00:48:31,470
anything you want to extract

771
00:48:34,660 --> 00:48:41,920
you have to bear in mind this is just a

772
00:48:39,559 --> 00:48:45,920
proof of concept

773
00:48:41,920 --> 00:48:51,199
these are extraction extracts from tools

774
00:48:45,920 --> 00:48:53,269
I've created for clients what platform

775
00:48:51,199 --> 00:48:58,249
do usually create so that this is

776
00:48:53,269 --> 00:49:01,848
powerful use flask Django based on

777
00:48:58,249 --> 00:49:06,288
services and micro services with the

778
00:49:01,849 --> 00:49:09,829
server which is powerful enough so that

779
00:49:06,289 --> 00:49:14,420
this type of process is execute in a

780
00:49:09,829 --> 00:49:19,430
continuous way in order to get a lot of

781
00:49:14,420 --> 00:49:22,430
information you need a table with lots

782
00:49:19,430 --> 00:49:25,759
of onion addresses which will be the

783
00:49:22,430 --> 00:49:28,069
entry points the search engines for

784
00:49:25,759 --> 00:49:37,059
which we're going to carry out our

785
00:49:28,069 --> 00:49:37,058
searches this is what we find in Python

786
00:49:38,650 --> 00:49:41,999
before continuing

787
00:49:42,730 --> 00:49:48,460
well the idea of this talk is it well

788
00:49:46,300 --> 00:49:52,240
I've seen a lot of young people many of

789
00:49:48,460 --> 00:49:54,970
your students perhaps and I would like

790
00:49:52,240 --> 00:49:57,040
to show you how powerful Python is as a

791
00:49:54,970 --> 00:49:59,709
language and all the things you can do

792
00:49:57,040 --> 00:50:02,829
with this type of programming languages

793
00:49:59,710 --> 00:50:06,190
the message is for you to create your

794
00:50:02,829 --> 00:50:09,339
own things it's not just launch tools

795
00:50:06,190 --> 00:50:11,349
that have already been created open your

796
00:50:09,339 --> 00:50:17,320
mind be creative and create your own

797
00:50:11,349 --> 00:50:19,450
tools it can be in this sense or

798
00:50:17,320 --> 00:50:21,609
something else something that you're

799
00:50:19,450 --> 00:50:25,000
passionate about it will be gratifying

800
00:50:21,609 --> 00:50:26,799
and you're going to learn a lot this is

801
00:50:25,000 --> 00:50:28,930
a piece of advice for those of you who

802
00:50:26,800 --> 00:50:32,740
are still studying you're finishing your

803
00:50:28,930 --> 00:50:35,410
studies in my opinion it's a very good

804
00:50:32,740 --> 00:50:38,259
piece of advice and it will help you

805
00:50:35,410 --> 00:50:41,020
from a professional point of view I will

806
00:50:38,260 --> 00:50:46,470
suffice you to take part in projects to

807
00:50:41,020 --> 00:50:49,540
create your things or add something to

808
00:50:46,470 --> 00:50:51,660
projects which have which are already

809
00:50:49,540 --> 00:50:54,940
available any questions

810
00:50:51,660 --> 00:50:56,529
so either always crystal clear or you

811
00:50:54,940 --> 00:50:59,470
haven't understood anything

812
00:50:56,530 --> 00:51:02,589
perhaps it's the second one and details

813
00:50:59,470 --> 00:51:06,930
in the presentation I'll answer as soon

814
00:51:02,589 --> 00:51:06,930
as I can thank you

815
00:51:09,460 --> 00:51:11,520
you

