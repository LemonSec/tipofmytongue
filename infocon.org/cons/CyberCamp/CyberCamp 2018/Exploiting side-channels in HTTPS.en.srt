1
00:00:02,470 --> 00:00:08,340
[Music]

2
00:00:10,460 --> 00:00:17,669
Cadell we were yesterday sir good

3
00:00:14,429 --> 00:00:21,539
afternoon everyone welcome back after

4
00:00:17,669 --> 00:00:23,700
lunch I hope you make the most of it I

5
00:00:21,539 --> 00:00:28,109
hope that you have your batteries fully

6
00:00:23,700 --> 00:00:32,070
charged back again we've covered the

7
00:00:28,109 --> 00:00:34,350
first few hours of this edition of cyber

8
00:00:32,070 --> 00:00:37,559
camp and we're all ready to continue now

9
00:00:34,350 --> 00:00:40,440
with our workshops welcome back again as

10
00:00:37,559 --> 00:00:43,589
I said both for those of you who here

11
00:00:40,440 --> 00:00:46,829
and those who are on streaming here we

12
00:00:43,590 --> 00:00:50,129
have with us jose silva a principal

13
00:00:46,829 --> 00:00:54,210
security consultant at NCC group who

14
00:00:50,129 --> 00:01:02,180
will be telling us about a side channel

15
00:00:54,210 --> 00:01:08,610
attacks on HTTPS he is an engineer in IT

16
00:01:02,180 --> 00:01:13,530
in computer science he's now doing he

17
00:01:08,610 --> 00:01:15,630
his PhD dissertation preparing it and I

18
00:01:13,530 --> 00:01:23,009
hope that you make the most of his

19
00:01:15,630 --> 00:01:29,729
presentation good afternoon thank you

20
00:01:23,009 --> 00:01:35,220
very much for joining us so we're ready

21
00:01:29,729 --> 00:01:42,950
to start with our workshop and the idea

22
00:01:35,220 --> 00:01:46,950
started with my some of my research well

23
00:01:42,950 --> 00:01:49,170
I've been introduced my name is Jose

24
00:01:46,950 --> 00:01:53,310
Silva I've been working for most of my

25
00:01:49,170 --> 00:01:57,110
professional career in security really

26
00:01:53,310 --> 00:01:59,790
taking things apart with the excuse of

27
00:01:57,110 --> 00:02:02,979
auditing products and finding things

28
00:01:59,790 --> 00:02:08,200
that were wrong with them

29
00:02:02,979 --> 00:02:14,890
and when I have some free time I like

30
00:02:08,199 --> 00:02:19,720
doing research I also travel to

31
00:02:14,890 --> 00:02:22,958
Argentina in London in Spain giving

32
00:02:19,720 --> 00:02:27,989
lectures and presentations on security

33
00:02:22,959 --> 00:02:31,209
issues and this has to do with

34
00:02:27,989 --> 00:02:35,680
side-channel attacks and that's the

35
00:02:31,209 --> 00:02:40,660
title for our workshop I'm not going to

36
00:02:35,680 --> 00:02:43,090
tell you about all the HTTP attacks in

37
00:02:40,660 --> 00:02:46,720
general but about this type in

38
00:02:43,090 --> 00:02:52,930
particular and it started because I was

39
00:02:46,720 --> 00:02:55,540
auditing a product and one of the

40
00:02:52,930 --> 00:02:59,560
applications they had had this type of

41
00:02:55,540 --> 00:03:01,599
vulnerability breach and it looked quite

42
00:02:59,560 --> 00:03:06,340
similar to other things I had seen in

43
00:03:01,599 --> 00:03:09,149
the past but looking into it I became

44
00:03:06,340 --> 00:03:13,269
more and more interested in it I found

45
00:03:09,150 --> 00:03:15,760
many systems were affected by this

46
00:03:13,269 --> 00:03:19,150
without vulnerability at different

47
00:03:15,760 --> 00:03:24,370
companies I started giving presentations

48
00:03:19,150 --> 00:03:27,549
on it and I found that when I prepared

49
00:03:24,370 --> 00:03:31,420
different breaches and attacks to study

50
00:03:27,549 --> 00:03:34,590
this issue I found there was a lot of

51
00:03:31,420 --> 00:03:37,929
uncertainty and there was a lack of

52
00:03:34,590 --> 00:03:41,799
general lack of knowledge and I thought

53
00:03:37,930 --> 00:03:45,150
well let's prepare this workshop on site

54
00:03:41,799 --> 00:03:47,980
channels and Santa side-channel attacks

55
00:03:45,150 --> 00:03:50,880
so here we have the table of contents

56
00:03:47,980 --> 00:03:50,880
for my presentation

57
00:03:53,380 --> 00:03:58,609
can I ask you raise your hand if you

58
00:03:55,820 --> 00:04:01,769
know what a side channel is oh dear very

59
00:03:58,610 --> 00:04:03,310
few people fair enough

60
00:04:01,770 --> 00:04:07,580
[Music]

61
00:04:03,310 --> 00:04:14,090
so what is this side channel let's

62
00:04:07,580 --> 00:04:19,459
imagine this scenario we often hear

63
00:04:14,090 --> 00:04:23,120
about Pentagon's and because I live with

64
00:04:19,459 --> 00:04:26,390
Vallot in Valencia in eastern Spain I

65
00:04:23,120 --> 00:04:28,790
see this situation quite often let's

66
00:04:26,390 --> 00:04:33,289
imagine this is a regional Minister who

67
00:04:28,790 --> 00:04:36,140
owns a car his car is home then the

68
00:04:33,290 --> 00:04:40,190
following day he still got the same

69
00:04:36,140 --> 00:04:42,409
belongings and the same thing again

70
00:04:40,190 --> 00:04:44,600
in future but little by little he's

71
00:04:42,410 --> 00:04:47,120
adding more and more properties at

72
00:04:44,600 --> 00:04:52,520
Castle in Scotland his own private jet

73
00:04:47,120 --> 00:04:54,920
and yet there's not a briefcase there

74
00:04:52,520 --> 00:04:56,810
with a lot of cash but look at the

75
00:04:54,920 --> 00:04:59,630
difference between these two days

76
00:04:56,810 --> 00:05:02,120
something has happened in between them

77
00:04:59,630 --> 00:05:05,390
how do we know that because we see a

78
00:05:02,120 --> 00:05:07,930
change in the environment that's a clue

79
00:05:05,390 --> 00:05:11,710
that something happened and this is what

80
00:05:07,930 --> 00:05:15,950
side-channel attacks take advantage of

81
00:05:11,710 --> 00:05:20,539
it's quite common in a cryptography I

82
00:05:15,950 --> 00:05:25,969
might not see the whole encryption and

83
00:05:20,540 --> 00:05:28,670
decryption scenario but let's imagine an

84
00:05:25,970 --> 00:05:32,120
authentication system which is badly

85
00:05:28,670 --> 00:05:35,510
done where character by character it

86
00:05:32,120 --> 00:05:40,360
takes if your password is right well if

87
00:05:35,510 --> 00:05:44,990
you get the first one right sorry wrong

88
00:05:40,360 --> 00:05:46,740
the response time is a telltale whether

89
00:05:44,990 --> 00:05:51,780
it takes longer

90
00:05:46,740 --> 00:05:53,849
to calculate if the character is correct

91
00:05:51,780 --> 00:05:55,679
at the beginning of the word or at the

92
00:05:53,849 --> 00:05:58,650
end of the word which is something that

93
00:05:55,680 --> 00:06:02,970
has been exploited in the field of

94
00:05:58,650 --> 00:06:14,429
hardware you are supposed to have a

95
00:06:02,970 --> 00:06:19,349
gadget where cryptographic information

96
00:06:14,430 --> 00:06:21,780
and keys are contained that you're not

97
00:06:19,349 --> 00:06:26,849
supposed to access so that you can then

98
00:06:21,780 --> 00:06:30,989
replicate the gadget elsewhere so these

99
00:06:26,849 --> 00:06:34,289
techniques are used to try and skip all

100
00:06:30,990 --> 00:06:38,610
the security barriers that you have for

101
00:06:34,289 --> 00:06:42,419
this type of hardware because really

102
00:06:38,610 --> 00:06:45,210
Sychar knows all of them are based on

103
00:06:42,419 --> 00:06:51,150
this basic idea but then they use

104
00:06:45,210 --> 00:06:54,960
different means to go about it we need

105
00:06:51,150 --> 00:07:02,130
to find a way to add an input stimulus

106
00:06:54,960 --> 00:07:06,090
stimulus in the case of the password I

107
00:07:02,130 --> 00:07:09,830
gave earlier well you need to stimulus

108
00:07:06,090 --> 00:07:13,229
you need to earn characters for possible

109
00:07:09,830 --> 00:07:16,349
passwords passwords and then there are

110
00:07:13,229 --> 00:07:20,039
there is a need for monitoring what is

111
00:07:16,349 --> 00:07:23,819
happening to monitor the environment to

112
00:07:20,039 --> 00:07:26,340
see if it takes longer or shorter to see

113
00:07:23,819 --> 00:07:30,630
if a character is right and at the end

114
00:07:26,340 --> 00:07:34,650
of that process we and over and above

115
00:07:30,630 --> 00:07:38,669
that is what we call the Oracle is the

116
00:07:34,650 --> 00:07:40,560
system that we use to ask questions for

117
00:07:38,669 --> 00:07:45,590
instance in a password the first letter

118
00:07:40,560 --> 00:07:49,039
is a I try and I measure the time it

119
00:07:45,590 --> 00:07:53,818
takes to tell me if it's correct or not

120
00:07:49,039 --> 00:07:54,860
when I say is it a well it took longer

121
00:07:53,819 --> 00:07:58,220
than

122
00:07:54,860 --> 00:08:01,910
when I asked is be correct is incorrect

123
00:07:58,220 --> 00:08:07,190
or C correct and that's how I can tell

124
00:08:01,910 --> 00:08:09,140
the system can tell if the answer was

125
00:08:07,190 --> 00:08:14,170
right and this is what we can do as well

126
00:08:09,140 --> 00:08:17,330
to explore these breaches or failures

127
00:08:14,170 --> 00:08:20,810
sometimes they're very subtle and if

128
00:08:17,330 --> 00:08:22,400
we're not careful we won't see it so

129
00:08:20,810 --> 00:08:28,580
that's the general idea for side

130
00:08:22,400 --> 00:08:32,299
channels which is a term that comes up

131
00:08:28,580 --> 00:08:36,919
in many different contexts but we've

132
00:08:32,299 --> 00:08:40,990
focused it on site channels for HTTPS in

133
00:08:36,919 --> 00:08:47,000
during our presentation so we're typing

134
00:08:40,990 --> 00:08:55,190
triple w dot google.com browser if it's

135
00:08:47,000 --> 00:09:01,670
an MS then it tries to guess what IP it

136
00:08:55,190 --> 00:09:06,800
is so that's how we find the IP address

137
00:09:01,670 --> 00:09:10,270
that's when the browser connects to the

138
00:09:06,800 --> 00:09:17,979
server and what it gets in return is

139
00:09:10,270 --> 00:09:17,980
HTML code our browser processes the HTML

140
00:09:20,490 --> 00:09:29,990
and it decides that it needs more

141
00:09:23,280 --> 00:09:34,020
resources to render that CCSA's images

142
00:09:29,990 --> 00:09:36,750
scripting code all of that and when it

143
00:09:34,020 --> 00:09:37,439
realizes that those are the resources it

144
00:09:36,750 --> 00:09:42,030
needs

145
00:09:37,440 --> 00:09:44,580
that's when connections start to the

146
00:09:42,030 --> 00:09:48,150
sites whether it is that server or a

147
00:09:44,580 --> 00:09:50,820
different server and it accesses that

148
00:09:48,150 --> 00:09:53,100
information and only then that's when we

149
00:09:50,820 --> 00:09:56,810
see the website that's what the browser

150
00:09:53,100 --> 00:09:56,810
does on the Internet

151
00:09:57,500 --> 00:10:03,000
right so well we open a browser oh dear

152
00:10:01,560 --> 00:10:11,119
the resolution on the screen is not

153
00:10:03,000 --> 00:10:15,990
great is it so as I was saying this is

154
00:10:11,120 --> 00:10:17,940
the capture a I'm sniffer I can't

155
00:10:15,990 --> 00:10:21,000
remember if in this case it was Google

156
00:10:17,940 --> 00:10:24,600
what it could be google.com right you

157
00:10:21,000 --> 00:10:29,360
access it and this is what you get and

158
00:10:24,600 --> 00:10:35,100
what information would we access them

159
00:10:29,360 --> 00:10:37,170
HTTP really when you browse on it would

160
00:10:35,100 --> 00:10:39,030
you believe that you can't see anything

161
00:10:37,170 --> 00:10:44,760
from the Internet can you raise your

162
00:10:39,030 --> 00:10:47,689
hand if you believe that most of you are

163
00:10:44,760 --> 00:10:51,180
not raising your hand because you know

164
00:10:47,690 --> 00:10:53,940
what I'm getting at but in fact most

165
00:10:51,180 --> 00:10:56,130
people think you can you know you have

166
00:10:53,940 --> 00:11:00,560
your little log everything looks green

167
00:10:56,130 --> 00:11:03,930
on HTTPS everything is right or what is

168
00:11:00,560 --> 00:11:06,780
encrypted is data but that doesn't mean

169
00:11:03,930 --> 00:11:10,290
that you can't see anything in fact a on

170
00:11:06,780 --> 00:11:13,890
the request you can see a which page

171
00:11:10,290 --> 00:11:20,030
it's connecting up to on the DNS query

172
00:11:13,890 --> 00:11:22,500
and if the browser asks who is

173
00:11:20,030 --> 00:11:23,589
google.com that's because you've typed

174
00:11:22,500 --> 00:11:27,130
that right

175
00:11:23,590 --> 00:11:31,030
then you can see data on the certificate

176
00:11:27,130 --> 00:11:34,330
you can see the IPS how many connections

177
00:11:31,030 --> 00:11:38,020
it's making you can see all of that

178
00:11:34,330 --> 00:11:40,360
that's not protected or private so if

179
00:11:38,020 --> 00:11:42,670
your browser is making seven connections

180
00:11:40,360 --> 00:11:46,030
somebody who's connected to the Internet

181
00:11:42,670 --> 00:11:48,610
can see that that you've visited three

182
00:11:46,030 --> 00:11:52,810
pages and that is taken you three

183
00:11:48,610 --> 00:11:55,660
minutes to read a particular screen

184
00:11:52,810 --> 00:11:58,030
because it's taken you three minutes to

185
00:11:55,660 --> 00:12:00,430
make the next connection and also you

186
00:11:58,030 --> 00:12:04,300
can see the size of the information

187
00:12:00,430 --> 00:12:15,459
that's transferred the number of bytes

188
00:12:04,300 --> 00:12:20,800
is there you can see it and in fact HTTP

189
00:12:15,460 --> 00:12:26,170
is a protocol that runs over CP TCP

190
00:12:20,800 --> 00:12:34,780
sorry and on a capture you can see TLS

191
00:12:26,170 --> 00:12:38,020
records on the screenshot some are used

192
00:12:34,780 --> 00:12:42,699
for hand shape where certificate the

193
00:12:38,020 --> 00:12:46,600
certificate is sent there is you can see

194
00:12:42,700 --> 00:12:49,090
the type of encrypted - encrypting to be

195
00:12:46,600 --> 00:12:52,210
used and then there's this application

196
00:12:49,090 --> 00:12:53,980
data what does that mean it's telling us

197
00:12:52,210 --> 00:12:58,060
that's data

198
00:12:53,980 --> 00:13:00,700
it's the HTTP request and the response

199
00:12:58,060 --> 00:13:03,670
from this server which is encrypted we

200
00:13:00,700 --> 00:13:09,130
can't see it Asajj well we know how big

201
00:13:03,670 --> 00:13:12,459
it is and that event that situation can

202
00:13:09,130 --> 00:13:15,210
then be used as its side channel for

203
00:13:12,460 --> 00:13:15,210
this type of attack

204
00:13:18,889 --> 00:13:26,189
so I started off telling you that we

205
00:13:22,529 --> 00:13:31,079
need a way to generate some kind of

206
00:13:26,189 --> 00:13:34,920
stimulus that's what we'll call it and

207
00:13:31,079 --> 00:13:37,800
one of the easiest ways to do so is to

208
00:13:34,920 --> 00:13:40,079
be in the middle of things if I'm

209
00:13:37,800 --> 00:13:45,180
connected here and somebody is connected

210
00:13:40,079 --> 00:13:47,459
elsewhere so between my system and the

211
00:13:45,180 --> 00:13:52,559
other one there is the man in the middle

212
00:13:47,459 --> 00:13:56,430
attacks there are many different types

213
00:13:52,559 --> 00:13:59,509
of attacks but the basic idea is that

214
00:13:56,430 --> 00:14:04,589
instead of following the normal route

215
00:13:59,509 --> 00:14:08,069
bundles you would go through my system

216
00:14:04,589 --> 00:14:10,529
it just goes through it when we hear man

217
00:14:08,069 --> 00:14:14,459
in the middle we think is that TLS

218
00:14:10,529 --> 00:14:16,680
tunnel that will be broken and you will

219
00:14:14,459 --> 00:14:20,399
see a warning you won't you won't see

220
00:14:16,680 --> 00:14:24,029
any kind of old warning as long as you I

221
00:14:20,399 --> 00:14:26,339
don't touch the TLS records there won't

222
00:14:24,029 --> 00:14:28,559
be any kind of warning I'll just see

223
00:14:26,339 --> 00:14:31,800
them go through I don't touch them and

224
00:14:28,559 --> 00:14:35,309
nothing much happens it's like getting a

225
00:14:31,800 --> 00:14:38,519
box that's closed with secrets inside

226
00:14:35,309 --> 00:14:42,809
but I can still pick up the box take it

227
00:14:38,519 --> 00:14:45,990
deliver it do all sorts follow different

228
00:14:42,809 --> 00:14:49,319
routes and at the end of the day the

229
00:14:45,990 --> 00:14:51,600
recipient doesn't care as long as it

230
00:14:49,319 --> 00:14:52,949
gets the box I can even shake it I can

231
00:14:51,600 --> 00:14:56,550
see how heavy it is

232
00:14:52,949 --> 00:15:02,339
and the final recipient won't even know

233
00:14:56,550 --> 00:15:06,990
I've done that this is not the main

234
00:15:02,339 --> 00:15:09,389
topic of our workshop here today that we

235
00:15:06,990 --> 00:15:11,339
can see up on the screen now there's a

236
00:15:09,389 --> 00:15:14,399
lot of literature about it but it's just

237
00:15:11,339 --> 00:15:17,249
a reminder of different ways these

238
00:15:14,399 --> 00:15:21,569
attacks different shapes and forms they

239
00:15:17,249 --> 00:15:24,769
can take at the end of my workshop you

240
00:15:21,569 --> 00:15:26,449
will see what kind of attack I prepared

241
00:15:24,769 --> 00:15:30,529
when I started with this piece of

242
00:15:26,449 --> 00:15:36,679
research and one of the things that

243
00:15:30,529 --> 00:15:42,709
you're told when you go to bounties one

244
00:15:36,679 --> 00:15:45,470
of the things we hear is that that

245
00:15:42,709 --> 00:15:48,410
scenario is not very realistic

246
00:15:45,470 --> 00:15:50,360
something like that they say if you can

247
00:15:48,410 --> 00:15:53,209
do the same thing and not be the man in

248
00:15:50,360 --> 00:15:54,769
the middle is much better but you can

249
00:15:53,209 --> 00:15:56,929
understand that there are many

250
00:15:54,769 --> 00:16:04,899
situations when you connect to a hotel

251
00:15:56,929 --> 00:16:11,920
or an airport or where internet provider

252
00:16:04,899 --> 00:16:15,709
providers have ended up changing dns

253
00:16:11,920 --> 00:16:18,649
codes because of different attacks and

254
00:16:15,709 --> 00:16:20,719
once the routers have changed you're in

255
00:16:18,649 --> 00:16:23,089
a man-in-the-middle situation because

256
00:16:20,720 --> 00:16:25,160
you are the one who will be asked if

257
00:16:23,089 --> 00:16:28,399
your Google if you if I want to

258
00:16:25,160 --> 00:16:30,740
intercept Google traffic all I need to

259
00:16:28,399 --> 00:16:33,529
do is when somebody asks hey who's

260
00:16:30,740 --> 00:16:36,290
Google I have to say it's me and the

261
00:16:33,529 --> 00:16:39,259
traffic will come to me then and you've

262
00:16:36,290 --> 00:16:43,790
probably heard about situations where

263
00:16:39,259 --> 00:16:47,059
internet providers have been hacked it's

264
00:16:43,790 --> 00:16:51,849
not that an unusual scenario even though

265
00:16:47,059 --> 00:16:51,850
some people think it's very unusual

266
00:16:58,510 --> 00:17:02,870
enters una una de las casillas I'm gonna

267
00:17:01,250 --> 00:17:07,069
sell for God Allah Tala para que no

268
00:17:02,870 --> 00:17:09,440
suena esto se podría ser and can

269
00:17:07,069 --> 00:17:12,379
something like this beaten fine it can

270
00:17:09,440 --> 00:17:14,150
be done but how can I do it you might be

271
00:17:12,380 --> 00:17:18,980
wondering there's not just one single

272
00:17:14,150 --> 00:17:25,490
tool for you to do it but this is quite

273
00:17:18,980 --> 00:17:28,670
a common one better cap it said to wear

274
00:17:25,490 --> 00:17:35,690
the second release came up just a few

275
00:17:28,670 --> 00:17:38,210
months ago by go it's got an interactive

276
00:17:35,690 --> 00:17:41,660
terminal that you access and through

277
00:17:38,210 --> 00:17:44,540
different commands you can tell the

278
00:17:41,660 --> 00:17:49,430
system of shame the pointer is not

279
00:17:44,540 --> 00:17:53,810
working which in IP it should intercept

280
00:17:49,430 --> 00:17:59,710
if it should be runs with spoofing which

281
00:17:53,810 --> 00:17:59,710
domain and can you see that a HTTP

282
00:18:01,270 --> 00:18:09,260
address well the idea is that I

283
00:18:05,150 --> 00:18:12,170
intercept target.com then I say you send

284
00:18:09,260 --> 00:18:14,570
it to me and then I will redirect it

285
00:18:12,170 --> 00:18:18,350
wherever it has to go but then when I

286
00:18:14,570 --> 00:18:21,500
respond I change the contents so you can

287
00:18:18,350 --> 00:18:23,780
add JavaScript code that was not part of

288
00:18:21,500 --> 00:18:28,490
the page and that's the stimulus the

289
00:18:23,780 --> 00:18:35,950
JavaScript code if I can run JavaScript

290
00:18:28,490 --> 00:18:39,380
code for my Victim browsers separate

291
00:18:35,950 --> 00:18:44,080
through same origin policy so that you

292
00:18:39,380 --> 00:18:51,340
can't access some other websites data

293
00:18:44,080 --> 00:18:54,970
but I can tell the user to send requests

294
00:18:51,340 --> 00:18:58,549
for instance very silly example if I

295
00:18:54,970 --> 00:19:02,240
send an image to the user and that image

296
00:18:58,549 --> 00:19:06,260
has a URL then the browser will have to

297
00:19:02,240 --> 00:19:08,330
connect to that URL and that will be the

298
00:19:06,260 --> 00:19:16,280
stimulus that I mentioned earlier the

299
00:19:08,330 --> 00:19:18,620
stimulus we need so what can you see

300
00:19:16,280 --> 00:19:22,520
well nothing really you can't see

301
00:19:18,620 --> 00:19:30,820
anything but this is what the JavaScript

302
00:19:22,520 --> 00:19:36,940
file looks like let me just show you

303
00:19:30,820 --> 00:19:36,939
this page here which is in the G Bob

304
00:19:48,750 --> 00:19:53,059
I don't know if you can see

305
00:19:50,970 --> 00:19:59,659
much here is the resolution good enough

306
00:19:53,059 --> 00:20:06,120
how many of you are familiar with beef

307
00:19:59,659 --> 00:20:10,380
it's a tool that does this you have to

308
00:20:06,120 --> 00:20:14,789
inject JavaScript on the HTTP traffic

309
00:20:10,380 --> 00:20:17,700
which is not encrypted I insist

310
00:20:14,789 --> 00:20:21,270
it is not encrypted we will see what

311
00:20:17,700 --> 00:20:24,630
happens if it is encrypted so then you

312
00:20:21,270 --> 00:20:28,770
can add the beef script or whichever

313
00:20:24,630 --> 00:20:31,350
other script you want to use and thanks

314
00:20:28,770 --> 00:20:33,690
to that you can act on the browser for

315
00:20:31,350 --> 00:20:36,870
instance changing these images and I

316
00:20:33,690 --> 00:20:40,320
want to see my pirate instead or I want

317
00:20:36,870 --> 00:20:43,489
to redirect to this other website with

318
00:20:40,320 --> 00:20:47,480
completely different contents whatever

319
00:20:43,490 --> 00:20:51,059
whatever different contents yeah yeah

320
00:20:47,480 --> 00:20:55,500
you have very dirty minds you are

321
00:20:51,059 --> 00:20:59,370
giggling so I could use beef but I can

322
00:20:55,500 --> 00:21:02,190
use any other code so this is what you

323
00:20:59,370 --> 00:21:04,080
would need to do for the attack not with

324
00:21:02,190 --> 00:21:07,980
a beef code but with a different type of

325
00:21:04,080 --> 00:21:16,199
code but I just wanted to show you this

326
00:21:07,980 --> 00:21:18,480
website address with a link to scripts

327
00:21:16,200 --> 00:21:20,700
like these because there are many many

328
00:21:18,480 --> 00:21:34,380
different scripts for to do all sorts of

329
00:21:20,700 --> 00:21:36,720
things you know it's a piece of code in

330
00:21:34,380 --> 00:21:39,299
this case so that the user will end up

331
00:21:36,720 --> 00:21:41,730
mining bitcoins for instance there are

332
00:21:39,299 --> 00:21:44,520
all sorts of things as I was saying you

333
00:21:41,730 --> 00:21:47,390
can do here we can see lots of different

334
00:21:44,520 --> 00:21:47,389
examples

335
00:21:51,389 --> 00:22:04,299
so this is this scenario that we are

336
00:21:58,019 --> 00:22:08,859
describing we have this server a server

337
00:22:04,299 --> 00:22:12,369
that injects JavaScript or we can run

338
00:22:08,859 --> 00:22:14,978
JavaScript on the victims browser and

339
00:22:12,369 --> 00:22:18,789
that can be done through injecting

340
00:22:14,979 --> 00:22:22,299
JavaScript when the user is browsing on

341
00:22:18,789 --> 00:22:25,839
a website which is not encrypted or if

342
00:22:22,299 --> 00:22:28,330
they visit our web sites we control

343
00:22:25,839 --> 00:22:32,139
that's how we would serve them the

344
00:22:28,330 --> 00:22:35,859
JavaScript and what do we manage then

345
00:22:32,139 --> 00:22:38,258
well connecting to the website that's

346
00:22:35,859 --> 00:22:44,349
vulnerable to the side channel attack

347
00:22:38,259 --> 00:22:48,039
how through a TCP proxy or capturing it

348
00:22:44,349 --> 00:22:51,789
from the internet through a sniffer so

349
00:22:48,039 --> 00:22:53,529
we can measure times and sizes and

350
00:22:51,789 --> 00:22:58,779
seeing if the box we're carrying

351
00:22:53,529 --> 00:23:01,109
secretly is heavy or light or what then

352
00:22:58,779 --> 00:23:05,649
we need a certain amount of intelligence

353
00:23:01,109 --> 00:23:10,119
that tells JavaScript a to tell the

354
00:23:05,649 --> 00:23:12,039
browser to do this checking a password

355
00:23:10,119 --> 00:23:16,389
that starts with an A for instance and

356
00:23:12,039 --> 00:23:19,440
then I listen carefully and see how what

357
00:23:16,389 --> 00:23:24,178
the weight is and that's how I decide

358
00:23:19,440 --> 00:23:28,379
that a might be good or B might be right

359
00:23:24,179 --> 00:23:31,629
depending on how heavy it is I then

360
00:23:28,379 --> 00:23:35,559
decide is that information that should

361
00:23:31,629 --> 00:23:38,549
be encrypted is right or not even though

362
00:23:35,559 --> 00:23:41,440
I haven't breached that encryption

363
00:23:38,549 --> 00:23:45,969
haven't deep decrypted it that's the

364
00:23:41,440 --> 00:23:48,969
magic of HTTPS let me just tell you this

365
00:23:45,969 --> 00:23:53,830
story as well this was the first test I

366
00:23:48,969 --> 00:23:56,320
run for this type of attack well I will

367
00:23:53,830 --> 00:23:59,379
go back to my story I I visited a cost

368
00:23:56,320 --> 00:24:02,320
who had a problem and I had to come up

369
00:23:59,380 --> 00:24:05,020
with a solution so for those of us who

370
00:24:02,320 --> 00:24:06,820
work with pentesting sometimes our main

371
00:24:05,020 --> 00:24:11,020
problem is that we have very limited

372
00:24:06,820 --> 00:24:15,060
time to do what we have to do and you

373
00:24:11,020 --> 00:24:18,220
can't imagine the rubbish rubish

374
00:24:15,060 --> 00:24:19,929
programming that we do sometimes because

375
00:24:18,220 --> 00:24:23,260
of the lack of time and this is my

376
00:24:19,930 --> 00:24:25,330
rubbish I came up at that time for that

377
00:24:23,260 --> 00:24:28,450
particular problem look at that that's

378
00:24:25,330 --> 00:24:34,360
my rear view mirror with my mobile phone

379
00:24:28,450 --> 00:24:37,750
stuck to it as rubbish solution right

380
00:24:34,360 --> 00:24:42,729
well my solution was pretty pretty much

381
00:24:37,750 --> 00:24:45,640
this kind of rubbish I noticed there

382
00:24:42,730 --> 00:24:48,760
were many different images that were

383
00:24:45,640 --> 00:24:54,190
loaded from the PHP point that had a

384
00:24:48,760 --> 00:24:56,650
slip and then I was tested with slip 0 B

385
00:24:54,190 --> 00:25:03,130
with slip 1 and so on

386
00:24:56,650 --> 00:25:07,210
so when the user worked with a Qi HTML

387
00:25:03,130 --> 00:25:10,870
code or Java Script with the images well

388
00:25:07,210 --> 00:25:14,230
in my case the first time I used HTML so

389
00:25:10,870 --> 00:25:16,659
what happens is that you see the

390
00:25:14,230 --> 00:25:19,980
connections after testing a after

391
00:25:16,660 --> 00:25:27,250
testing B with a distance of 1 second

392
00:25:19,980 --> 00:25:31,290
lag one second apart and that's how you

393
00:25:27,250 --> 00:25:31,290
reach your conclusions and this is how I

394
00:25:31,470 --> 00:25:37,090
told the customer that they were

395
00:25:34,090 --> 00:25:39,459
vulnerable to this type of attack and

396
00:25:37,090 --> 00:25:43,360
then the development was done at a later

397
00:25:39,460 --> 00:25:46,060
date this was my second attempt a little

398
00:25:43,360 --> 00:25:48,939
bit later with JavaScript which is a bit

399
00:25:46,060 --> 00:25:51,490
faster it doesn't need to wait for one

400
00:25:48,940 --> 00:25:54,370
second it doesn't need to be one second

401
00:25:51,490 --> 00:25:57,700
apart just getting all the images so

402
00:25:54,370 --> 00:26:00,580
that once the first image is loaded then

403
00:25:57,700 --> 00:26:03,910
it'll loads the second one and so on and

404
00:26:00,580 --> 00:26:05,980
that's how it was much faster because a

405
00:26:03,910 --> 00:26:07,660
you don't need to tell the system to

406
00:26:05,980 --> 00:26:10,060
wait for one second

407
00:26:07,660 --> 00:26:13,050
take shorter than a second because

408
00:26:10,060 --> 00:26:15,909
obviously you need to first test A to Z

409
00:26:13,050 --> 00:26:19,060
for the first character then start again

410
00:26:15,910 --> 00:26:22,240
from scratch for the second character so

411
00:26:19,060 --> 00:26:25,450
it can take quite a while is this low

412
00:26:22,240 --> 00:26:31,690
process that needs to be optimized as

413
00:26:25,450 --> 00:26:33,990
much as possible so let's go back to the

414
00:26:31,690 --> 00:26:36,820
explanation oh I forgot to mention I

415
00:26:33,990 --> 00:26:42,600
found a problem how many of you have

416
00:26:36,820 --> 00:26:48,280
tried HTTP - not many of you again and

417
00:26:42,600 --> 00:26:51,399
there's a problem here because when a

418
00:26:48,280 --> 00:26:56,920
request is send and the response is then

419
00:26:51,400 --> 00:27:02,650
seen in HTTP - the system is non

420
00:26:56,920 --> 00:27:07,530
synchronous or asynchronous asynchronous

421
00:27:02,650 --> 00:27:11,410
you don't need to wait for every quest

422
00:27:07,530 --> 00:27:14,200
to be sent and then get the response the

423
00:27:11,410 --> 00:27:16,540
system can wait for 10 requests before

424
00:27:14,200 --> 00:27:19,660
it responds so logically in that

425
00:27:16,540 --> 00:27:23,800
situation is almost impossible seeing

426
00:27:19,660 --> 00:27:27,300
what response corresponds to what risk

427
00:27:23,800 --> 00:27:31,300
requests so you might not end up with

428
00:27:27,300 --> 00:27:34,629
ABCD at the end of the process you can't

429
00:27:31,300 --> 00:27:37,270
measure the time the way I described

430
00:27:34,630 --> 00:27:40,420
earlier you don't know how far to

431
00:27:37,270 --> 00:27:43,629
measure your time logically if they come

432
00:27:40,420 --> 00:27:49,600
in the right order I can match the first

433
00:27:43,630 --> 00:27:54,820
request with the first response but in

434
00:27:49,600 --> 00:27:56,649
this other case you can't it's not such

435
00:27:54,820 --> 00:27:59,299
a simple system what did I

436
00:27:56,650 --> 00:28:03,259
decide well dispatch Ito

437
00:27:59,299 --> 00:28:06,649
I decided to go nice and slow why does

438
00:28:03,259 --> 00:28:11,869
it say fiesta up on the screen because I

439
00:28:06,649 --> 00:28:16,969
decided to give it a zani name for my

440
00:28:11,869 --> 00:28:22,070
tool for it to be a big fest or a

441
00:28:16,970 --> 00:28:26,860
festival so in this case when the first

442
00:28:22,070 --> 00:28:28,610
movie HTML request starts that's not

443
00:28:26,860 --> 00:28:31,399
really a problem

444
00:28:28,610 --> 00:28:36,258
it's only a problem when all the

445
00:28:31,399 --> 00:28:43,850
resources come into play I only had one

446
00:28:36,259 --> 00:28:49,039
request I get the response but remember

447
00:28:43,850 --> 00:28:54,259
that requests are asynchronous that

448
00:28:49,039 --> 00:28:57,289
means that I have my little box I can do

449
00:28:54,259 --> 00:28:59,720
things with it I can't open it though I

450
00:28:57,289 --> 00:29:01,730
can leave it on the floor for a while I

451
00:28:59,720 --> 00:29:04,070
can follow a different route to take the

452
00:29:01,730 --> 00:29:06,799
books to the final destination

453
00:29:04,070 --> 00:29:09,999
as long anything near enough as long as

454
00:29:06,799 --> 00:29:18,859
I don't open it you see different colors

455
00:29:09,999 --> 00:29:22,070
blue red and purple connections when I

456
00:29:18,859 --> 00:29:26,989
don't know which response corresponds to

457
00:29:22,070 --> 00:29:31,129
rich requests then I stop one until the

458
00:29:26,989 --> 00:29:33,830
server sends a response and then I know

459
00:29:31,129 --> 00:29:37,899
how that's the red one and only then I

460
00:29:33,830 --> 00:29:42,379
let the blue request go when I get the

461
00:29:37,899 --> 00:29:47,959
response for the blue request then I let

462
00:29:42,379 --> 00:29:50,168
the purple one go so I decided to give

463
00:29:47,960 --> 00:29:56,809
this a name and I called it a

464
00:29:50,169 --> 00:29:59,749
multiplexing which I found was useful to

465
00:29:56,809 --> 00:30:04,039
measure what was happening on Google

466
00:29:59,749 --> 00:30:07,809
Facebook all those big websites they all

467
00:30:04,039 --> 00:30:10,929
use HTTPS to

468
00:30:07,809 --> 00:30:19,619
well when HTTP is used otherwise they

469
00:30:10,929 --> 00:30:24,719
use a 1.1 so here we can see an example

470
00:30:19,619 --> 00:30:30,728
which has to do with the Akamai website

471
00:30:24,719 --> 00:30:33,960
that explains about a HTTP 2 and on the

472
00:30:30,729 --> 00:30:39,309
Left we have the comparison with HTTP

473
00:30:33,960 --> 00:30:43,239
the HTTP 1 with different threads pieces

474
00:30:39,309 --> 00:30:47,049
of different squares for at a time in

475
00:30:43,239 --> 00:30:48,969
the first quadrant so it upload them

476
00:30:47,049 --> 00:30:51,309
some enforce because there is four

477
00:30:48,969 --> 00:30:55,059
threats and you see that this one is

478
00:30:51,309 --> 00:30:57,759
faster and is asynchronous so it

479
00:30:55,059 --> 00:31:00,519
uploaded chunk is chunks as they come

480
00:30:57,759 --> 00:31:03,609
and in between we see what happens where

481
00:31:00,519 --> 00:31:06,190
you get sees HTTP T and run it through

482
00:31:03,609 --> 00:31:08,529
the tool I produces one by one one by

483
00:31:06,190 --> 00:31:11,080
one because this is what it does as

484
00:31:08,529 --> 00:31:14,080
stops and let's one through and then

485
00:31:11,080 --> 00:31:17,349
back again the beginning and I said this

486
00:31:14,080 --> 00:31:20,589
hat to go to be activated manually with

487
00:31:17,349 --> 00:31:22,839
a flak because if you check this out so

488
00:31:20,589 --> 00:31:25,029
what do you think what was a problem you

489
00:31:22,839 --> 00:31:25,539
see here if you do it as the one in the

490
00:31:25,029 --> 00:31:31,539
middle

491
00:31:25,539 --> 00:31:32,979
anyone anything speed there so very slow

492
00:31:31,539 --> 00:31:35,700
so if you're needed

493
00:31:32,979 --> 00:31:38,409
why would you have it on so i

494
00:31:35,700 --> 00:31:42,239
deactivated it is able to it and even

495
00:31:38,409 --> 00:31:42,239
necessary back on

496
00:31:47,460 --> 00:31:51,789
so now that we understand what that

497
00:31:49,750 --> 00:31:56,620
setting is when the context is less

498
00:31:51,789 --> 00:31:59,259
patio chains so we have several types of

499
00:31:56,620 --> 00:32:03,729
side channel attacks the most widely

500
00:31:59,259 --> 00:32:07,840
used are those that are sized based size

501
00:32:03,730 --> 00:32:10,899
based for the AP P data packages that's

502
00:32:07,840 --> 00:32:16,620
what we were saying before so those are

503
00:32:10,899 --> 00:32:16,620
the sizes we need to watch those sizes

504
00:32:18,269 --> 00:32:23,379
one of the first view that were

505
00:32:20,320 --> 00:32:28,330
published were the ones that I know were

506
00:32:23,379 --> 00:32:30,789
based on information well they were mine

507
00:32:28,330 --> 00:32:32,769
based on size but then there was

508
00:32:30,789 --> 00:32:35,200
encryption feature the encryption

509
00:32:32,769 --> 00:32:38,820
feature is about gathering data it's not

510
00:32:35,200 --> 00:32:41,409
just for HTTP but generally speaking

511
00:32:38,820 --> 00:32:43,750
well it's not encryption but compression

512
00:32:41,409 --> 00:32:45,970
here so we would get secret data or

513
00:32:43,750 --> 00:32:48,610
considered secret and data given by

514
00:32:45,970 --> 00:32:50,590
users and compress them together even if

515
00:32:48,610 --> 00:33:01,350
you encrypt them together that's usually

516
00:32:50,590 --> 00:33:05,289
a poor idea anyone why no one reason is

517
00:33:01,350 --> 00:33:09,610
because the compression algorithms they

518
00:33:05,289 --> 00:33:12,940
try to reuse by it flows inordinate to

519
00:33:09,610 --> 00:33:14,469
repeat them so if I'm in control of part

520
00:33:12,940 --> 00:33:17,500
of the data and I know there's a secret

521
00:33:14,470 --> 00:33:24,029
in there I might run tests as we said we

522
00:33:17,500 --> 00:33:24,029
the password ABC a a BB CC and

523
00:33:24,930 --> 00:33:36,960
and if would I act there is equals the

524
00:33:29,910 --> 00:33:41,040
secret the result will be smaller so be

525
00:33:36,960 --> 00:33:43,800
for an HTTP comparative connection it is

526
00:33:41,040 --> 00:33:46,470
crunch and then encrypted next to

527
00:33:43,800 --> 00:33:52,980
session cookie I can control the URL for

528
00:33:46,470 --> 00:33:55,500
example so I try it out letters and if I

529
00:33:52,980 --> 00:33:58,350
do it right when I say when I type ABC

530
00:33:55,500 --> 00:34:02,910
that package will be smaller than if I

531
00:33:58,350 --> 00:34:05,100
do not get there heat so if I force it

532
00:34:02,910 --> 00:34:07,380
into many queries and request queries

533
00:34:05,100 --> 00:34:12,239
and requests I check and if the size

534
00:34:07,380 --> 00:34:15,900
goes a smaller or bigger I will know so

535
00:34:12,239 --> 00:34:19,229
if I try it and it is bigger now it

536
00:34:15,900 --> 00:34:22,220
means that is another match for other

537
00:34:19,230 --> 00:34:27,659
information there if it's just the same

538
00:34:22,219 --> 00:34:36,810
then it means that that was it so this

539
00:34:27,659 --> 00:34:40,770
is the encryption used for the web looks

540
00:34:36,810 --> 00:34:44,429
like this you have a text chain like

541
00:34:40,770 --> 00:34:46,170
here and instead well so you compress it

542
00:34:44,429 --> 00:34:48,690
and it's see that it's part of it that

543
00:34:46,170 --> 00:34:52,020
it is repeated and so it replaces that

544
00:34:48,690 --> 00:34:53,940
part of the string the test stream with

545
00:34:52,020 --> 00:34:55,889
I don't know how many bytes a few of

546
00:34:53,940 --> 00:34:58,530
them but it'll be kind of a pointer

547
00:34:55,889 --> 00:35:00,720
saying these part of this tree I will

548
00:34:58,530 --> 00:35:02,880
not say what it is but I'll explain to

549
00:35:00,720 --> 00:35:05,520
you where there's this similar strain so

550
00:35:02,880 --> 00:35:08,790
go 20 characters characters back and

551
00:35:05,520 --> 00:35:12,170
pick foo and that's the way to crunch it

552
00:35:08,790 --> 00:35:12,170
you compress it so what about

553
00:35:12,400 --> 00:35:19,609
what about and you can try this actually

554
00:35:16,100 --> 00:35:23,319
we will try it in a minute so that you

555
00:35:19,609 --> 00:35:26,569
see it live what what if I'm going to

556
00:35:23,320 --> 00:35:31,850
get a token whatever it is and I start

557
00:35:26,570 --> 00:35:34,400
like this and I trying and I compress it

558
00:35:31,850 --> 00:35:39,230
or zip it with gzip and I see how many

559
00:35:34,400 --> 00:35:44,200
characters in there and it says 43 why

560
00:35:39,230 --> 00:35:46,910
43 because that's how can somehow

561
00:35:44,200 --> 00:35:53,359
removed it and move it to the pointer

562
00:35:46,910 --> 00:35:55,879
and this would be six characters if we

563
00:35:53,359 --> 00:36:00,619
add an a since that a is not a match

564
00:35:55,880 --> 00:36:08,930
here this a would be independent so size

565
00:36:00,619 --> 00:36:12,350
will go up by one bind what if we try

566
00:36:08,930 --> 00:36:17,240
with an a that character will not show

567
00:36:12,350 --> 00:36:19,790
on the compressed text and so there's

568
00:36:17,240 --> 00:36:22,220
the B and the bit will increase and say

569
00:36:19,790 --> 00:36:24,680
instead of six choose sevens of the size

570
00:36:22,220 --> 00:36:29,379
of the package will be just the same

571
00:36:24,680 --> 00:36:32,210
even though I add a letter to it and

572
00:36:29,380 --> 00:36:38,450
since it is a match the size will be the

573
00:36:32,210 --> 00:36:41,420
same same with the others if I heat it

574
00:36:38,450 --> 00:36:44,509
the size will not be changed the number

575
00:36:41,420 --> 00:36:46,150
will go up thus the only thing and here

576
00:36:44,510 --> 00:36:52,580
you have a few examples

577
00:36:46,150 --> 00:36:55,090
this is gzip gzip uses same as sites

578
00:36:52,580 --> 00:36:55,090
websites

579
00:36:55,570 --> 00:37:10,240
so let me show this to you so well

580
00:37:06,910 --> 00:37:22,480
trying to keep this dynamic and not to

581
00:37:10,240 --> 00:37:30,430
bore you Dan can you see that let me

582
00:37:22,480 --> 00:37:36,660
explain this team secret txt would be a

583
00:37:30,430 --> 00:37:40,990
secret word that I've typed there an

584
00:37:36,660 --> 00:37:44,109
HTTP request is basically an HTTP

585
00:37:40,990 --> 00:37:48,060
request password it uh stands for the

586
00:37:44,110 --> 00:37:48,060
request from our browser to the server

587
00:37:49,320 --> 00:37:55,780
so this would be replaced with real

588
00:37:54,100 --> 00:37:58,360
secret I've done it like there's just so

589
00:37:55,780 --> 00:38:06,430
that you don't see it and you don't

590
00:37:58,360 --> 00:38:09,060
cheat but basically split split this

591
00:38:06,430 --> 00:38:09,060
screen

592
00:38:17,480 --> 00:38:44,150
let's see if I managed to show it in a

593
00:38:22,070 --> 00:38:51,950
visible print gasps is a replacement in

594
00:38:44,150 --> 00:38:56,980
the HTTP request and size so if it's s H

595
00:38:51,950 --> 00:39:02,720
size it will keep on trying to guys and

596
00:38:56,980 --> 00:39:05,750
sipping so these are 307 307 characters

597
00:39:02,720 --> 00:39:08,990
we will modified here and as we save its

598
00:39:05,750 --> 00:39:16,190
in this every second we would need to

599
00:39:08,990 --> 00:39:16,848
see some changes there trying to keep it

600
00:39:16,190 --> 00:39:23,000
short

601
00:39:16,849 --> 00:39:33,109
I'll ask for a number anyone a number 8

602
00:39:23,000 --> 00:39:43,000
- 8 307 - 308 failure or success failure

603
00:39:33,109 --> 00:39:43,000
so another one - someone say 308

604
00:39:44,200 --> 00:39:57,149
so again let's see how it changes well

605
00:39:54,150 --> 00:39:57,150
for

606
00:40:03,950 --> 00:40:23,000
Janet co8 did we nail it 5-3

607
00:40:30,250 --> 00:40:41,090
three would be do we change it or do we

608
00:40:36,560 --> 00:40:50,000
move on to the next one

609
00:40:41,090 --> 00:40:52,340
Oh smart girl I don't remember I don't

610
00:40:50,000 --> 00:40:56,890
remember which name which number I chose

611
00:40:52,340 --> 00:40:56,890
to be honest at seven maybe

612
00:41:33,310 --> 00:41:54,409
Oh III swear it was seven

613
00:41:51,290 --> 00:41:54,409
[Music]

614
00:42:18,029 --> 00:42:23,969
but out now adulteress

615
00:42:21,359 --> 00:42:26,689
all other know goes it was number three

616
00:42:23,969 --> 00:42:26,689
actually

617
00:42:27,799 --> 00:42:32,219
you gotta know what there are some

618
00:42:30,299 --> 00:42:35,099
conditions and I'll explain which one

619
00:42:32,219 --> 00:42:42,029
and what this one should not fail here

620
00:42:35,099 --> 00:42:52,519
but okay so which one was it for

621
00:42:42,029 --> 00:42:52,519
characters by it's okay

622
00:43:01,690 --> 00:43:10,650
I don't resolutely on their donor alarm

623
00:43:05,830 --> 00:43:10,650
after all I didn't we try to number one

624
00:43:32,440 --> 00:43:48,690
I'll explain in a minute why this is

625
00:43:34,150 --> 00:43:48,690
happening what did I do

626
00:44:01,090 --> 00:44:03,970
so there's something to state here

627
00:44:02,500 --> 00:44:06,390
there's something where I'm failing

628
00:44:03,970 --> 00:44:06,390
myself

629
00:44:23,390 --> 00:44:32,299
cigarette now see what a Roman era where

630
00:44:29,809 --> 00:44:35,619
the poor guys don't know let me see why

631
00:44:32,299 --> 00:44:35,619
this is not working

632
00:44:37,910 --> 00:44:43,730
get another nice telephone service it's

633
00:44:41,240 --> 00:44:47,180
in local this is not on our server this

634
00:44:43,730 --> 00:44:50,960
is local this is a text file I will

635
00:44:47,180 --> 00:44:52,069
check out why this is not working but

636
00:44:50,960 --> 00:44:54,830
this could work

637
00:44:52,070 --> 00:44:59,180
yes but but sometimes this happened

638
00:44:54,830 --> 00:45:01,430
because this one here it's a really this

639
00:44:59,180 --> 00:45:03,319
it's happening like this because I had

640
00:45:01,430 --> 00:45:06,200
tried it before

641
00:45:03,320 --> 00:45:09,470
well doesn't matter it might happen well

642
00:45:06,200 --> 00:45:11,390
I'm ahead of myself here but it might

643
00:45:09,470 --> 00:45:15,140
happen and the thing is what I've just

644
00:45:11,390 --> 00:45:17,029
explained is just half of the zip in

645
00:45:15,140 --> 00:45:17,690
Tibor compression time I'll explain that

646
00:45:17,030 --> 00:45:20,930
in a minute

647
00:45:17,690 --> 00:45:26,210
but then there is some coding with

648
00:45:20,930 --> 00:45:31,339
Huffman notes not Huffman of Hoffman is

649
00:45:26,210 --> 00:45:36,320
it some some code in there and the

650
00:45:31,340 --> 00:45:41,420
characters can be shortened and this can

651
00:45:36,320 --> 00:45:47,270
be misleading with Huffman coding but on

652
00:45:41,420 --> 00:45:53,800
paper it should work this is an attack

653
00:45:47,270 --> 00:45:53,800
known as crime using javascript

654
00:45:55,260 --> 00:46:03,090
so it would send queries queries to your

655
00:45:58,500 --> 00:46:08,010
site so the cookie name for a session is

656
00:46:03,090 --> 00:46:09,090
token and crime good at token equal and

657
00:46:08,010 --> 00:46:15,950
it would try it out

658
00:46:09,090 --> 00:46:20,130
ABC trying all the letters in the cookie

659
00:46:15,950 --> 00:46:23,368
and then would measure the size of the

660
00:46:20,130 --> 00:46:25,800
respond of the reply and so the size

661
00:46:23,369 --> 00:46:28,250
would be the same if it was a success

662
00:46:25,800 --> 00:46:31,980
and if it was a failure the size of the

663
00:46:28,250 --> 00:46:35,660
of the query will refer to the query and

664
00:46:31,980 --> 00:46:35,660
not to the reply here it would grow

665
00:46:36,619 --> 00:46:44,630
breach was quite similar just the same

666
00:46:40,950 --> 00:46:48,419
but instead of on the request on the

667
00:46:44,630 --> 00:46:52,080
reply when crime was published and it

668
00:46:48,420 --> 00:46:55,920
was uncomfortable to protect yourself

669
00:46:52,080 --> 00:47:03,840
from crime the idea was to disable the

670
00:46:55,920 --> 00:47:05,760
TLS compression and so admins we're

671
00:47:03,840 --> 00:47:09,150
disabled in it but they realize it was

672
00:47:05,760 --> 00:47:10,800
so dangerous to keep it on for this kind

673
00:47:09,150 --> 00:47:15,650
of attacks that most of the SSL

674
00:47:10,800 --> 00:47:19,680
libraries now are not even supporting

675
00:47:15,650 --> 00:47:26,520
compression the attack that I've just

676
00:47:19,680 --> 00:47:29,069
shown to you explained to you it's tears

677
00:47:26,520 --> 00:47:32,280
now because the TLS libraries that you

678
00:47:29,070 --> 00:47:39,690
will find cannot are not compatible even

679
00:47:32,280 --> 00:47:45,050
if you want to use it you won't be able

680
00:47:39,690 --> 00:47:45,050
to use it in order to try this out

681
00:47:46,520 --> 00:47:50,150
that's a couple of good

682
00:47:59,650 --> 00:48:05,330
Mario para probar estas cosas meta Niamh

683
00:48:04,910 --> 00:48:09,290
Oh

684
00:48:05,330 --> 00:48:12,170
so here I have my own folder that it is

685
00:48:09,290 --> 00:48:15,500
but like and you can download it it's an

686
00:48:12,170 --> 00:48:18,530
ad isn't docker and this is something

687
00:48:15,500 --> 00:48:21,890
that someone have done a very old David

688
00:48:18,530 --> 00:48:29,420
debian very old and I set up a web

689
00:48:21,890 --> 00:48:44,480
server with this basis and that's where

690
00:48:29,420 --> 00:48:46,280
I got a silly site if you want to play

691
00:48:44,480 --> 00:48:52,130
around with it what you need to do is

692
00:48:46,280 --> 00:48:54,520
start to don't they start doaker here

693
00:48:52,130 --> 00:48:54,520
you have it

694
00:49:00,599 --> 00:49:05,289
Vietnam under-filled if you don't know

695
00:49:02,470 --> 00:49:08,230
who I know it's not a good certificate

696
00:49:05,289 --> 00:49:12,210
because is a self-signed certificate but

697
00:49:08,230 --> 00:49:16,720
that's the site this is a site that

698
00:49:12,210 --> 00:49:22,630
supports compression so you can try all

699
00:49:16,720 --> 00:49:36,350
these attacks here actually if you

700
00:49:22,630 --> 00:49:38,069
happen to use this right here let me see

701
00:49:36,350 --> 00:49:42,960
[Music]

702
00:49:38,069 --> 00:49:42,960
what local look back

703
00:49:56,200 --> 00:49:59,200
good

704
00:50:04,630 --> 00:50:08,650
let's try something like this

705
00:50:21,700 --> 00:50:42,950
TCP destination port 443 new destination

706
00:50:31,819 --> 00:50:47,660
for four three I'd rather roll this in

707
00:50:42,950 --> 00:50:51,819
your own bridge I think it's better than

708
00:50:47,660 --> 00:50:51,819
on crime at least more useful nowadays

709
00:51:04,200 --> 00:51:11,549
I think I better use bridge this time so

710
00:51:10,049 --> 00:51:13,230
what happened with rich this was another

711
00:51:11,549 --> 00:51:15,619
to attack quite similar to what we've

712
00:51:13,230 --> 00:51:22,140
seen is also based on compression but

713
00:51:15,619 --> 00:51:25,799
compression and response so TLS and

714
00:51:22,140 --> 00:51:26,779
we've said that they they are not

715
00:51:25,799 --> 00:51:33,000
compatible anymore

716
00:51:26,780 --> 00:51:34,530
but on top of TLS we have HTTP which

717
00:51:33,000 --> 00:51:38,460
were also supported compression on

718
00:51:34,530 --> 00:51:41,640
response so they use the very same

719
00:51:38,460 --> 00:51:45,540
i-team as with bridge but here what they

720
00:51:41,640 --> 00:51:48,058
did was okay what I need is sending a

721
00:51:45,540 --> 00:51:52,920
request for a parameter that is seen on

722
00:51:48,059 --> 00:51:56,280
the response kind of a cross-site

723
00:51:52,920 --> 00:51:58,410
scripting but no need to have script

724
00:51:56,280 --> 00:52:00,690
code just need to have the text content

725
00:51:58,410 --> 00:52:03,750
so that would be more than enough and so

726
00:52:00,690 --> 00:52:09,270
they say okay so for a parameter that I

727
00:52:03,750 --> 00:52:12,000
know that is reflected I would send it

728
00:52:09,270 --> 00:52:13,380
and so when I see the reflection of the

729
00:52:12,000 --> 00:52:17,339
parameter on the response and you can

730
00:52:13,380 --> 00:52:21,780
follow the same technique to learn the

731
00:52:17,339 --> 00:52:24,589
folly of secrets such as an token the

732
00:52:21,780 --> 00:52:28,980
one used so that if you are checking as

733
00:52:24,589 --> 00:52:31,799
a form you cannot be prompted to reply

734
00:52:28,980 --> 00:52:35,059
if you haven't been to the forum and

735
00:52:31,799 --> 00:52:35,059
enter your data

736
00:52:39,210 --> 00:52:42,140
I'll show to you

737
00:52:49,140 --> 00:53:00,089
yeah one is why is it not dying

738
00:53:03,970 --> 00:53:07,220
[Applause]

739
00:53:29,290 --> 00:53:34,800
one word so let's start this one

740
00:53:51,710 --> 00:53:58,220
same here this is not a valid

741
00:53:54,960 --> 00:53:58,220
certificate doesn't matter

742
00:54:01,710 --> 00:54:08,970
so basically let's check it like this

743
00:54:06,539 --> 00:54:17,630
because this is this way is easier to

744
00:54:08,970 --> 00:54:23,029
see can you see this is better alright

745
00:54:17,630 --> 00:54:23,029
let's let's start white shark

746
00:54:30,290 --> 00:54:49,020
seven if we force the request valium

747
00:54:41,000 --> 00:54:53,900
equal vertical earth and here lets us

748
00:54:49,020 --> 00:55:10,050
take what we want see the wrists pounds

749
00:54:53,900 --> 00:55:12,210
originated in four four three and it

750
00:55:10,050 --> 00:55:18,349
should be application data that's the

751
00:55:12,210 --> 00:55:28,890
type alright can't see anything can you

752
00:55:18,349 --> 00:55:35,130
okay let's see if I can magnify it can

753
00:55:28,890 --> 00:55:39,210
you see it can you see the number five

754
00:55:35,130 --> 00:55:48,260
nine two let's try and latch it a bit

755
00:55:39,210 --> 00:55:48,260
further 519 right all right all right

756
00:55:52,010 --> 00:56:00,900
let's try and a five nine three this

757
00:55:58,050 --> 00:56:02,940
already on the network the other one was

758
00:56:00,900 --> 00:56:06,569
a fake but this one is a real one so

759
00:56:02,940 --> 00:56:11,880
it's increased failure success I'm

760
00:56:06,569 --> 00:56:14,250
showing the value to you year so so

761
00:56:11,880 --> 00:56:16,790
we've tried so is it a failure or a

762
00:56:14,250 --> 00:56:19,570
success a failure

763
00:56:16,790 --> 00:56:23,100
let's try B

764
00:56:19,570 --> 00:56:27,610
and you will see that a given time 5:19

765
00:56:23,100 --> 00:56:29,290
failure success and you will see some

766
00:56:27,610 --> 00:56:36,790
point these will not work and I'll

767
00:56:29,290 --> 00:56:40,330
explain why five nine three once again

768
00:56:36,790 --> 00:56:41,860
that's because it's not an e oh but you

769
00:56:40,330 --> 00:56:44,790
cannot see you cannot see what I'm

770
00:56:41,860 --> 00:56:52,360
typing can you but you trust me turn G

771
00:56:44,790 --> 00:56:54,690
so I typed a Franny and here you have a

772
00:56:52,360 --> 00:56:54,690
scene

773
00:57:03,260 --> 00:57:09,860
boy card in me I'll write them so you

774
00:57:07,580 --> 00:57:16,370
see this is a scene this is the seam and

775
00:57:09,860 --> 00:57:25,990
yet the size is not T let's try

776
00:57:16,370 --> 00:57:25,990
something if you cannot see it

777
00:57:42,930 --> 00:57:46,290
let's try something

778
00:58:04,350 --> 00:58:08,540
but no circle my third bucket area all

779
00:58:06,330 --> 00:58:08,540
right

780
00:58:27,270 --> 00:58:36,509
whatever what is the druggist Emporium

781
00:58:30,330 --> 00:58:40,410
no the postal affair just notice that

782
00:58:36,510 --> 00:58:42,480
when I type theis typed C which is meant

783
00:58:40,410 --> 00:58:44,690
to be the right one it told me it was

784
00:58:42,480 --> 00:58:48,119
wrong why is that

785
00:58:44,690 --> 00:58:51,720
well I told you earlier that I have to

786
00:58:48,119 --> 00:58:55,860
look for chains that were present but

787
00:58:51,720 --> 00:58:59,000
imagine I say value equals whatever well

788
00:58:55,860 --> 00:59:03,540
there might be some other value equals

789
00:58:59,000 --> 00:59:09,390
right I can't decide where I get my

790
00:59:03,540 --> 00:59:12,770
chunks from let's see what happens if I

791
00:59:09,390 --> 00:59:17,330
don't just get value i I want to get a

792
00:59:12,770 --> 00:59:17,330
bigger chunk

793
00:59:24,860 --> 00:59:35,340
let me type something like this and then

794
00:59:30,000 --> 00:59:38,250
value equals inverted commas whatever

795
00:59:35,340 --> 00:59:41,340
and that whatever is going to be a

796
00:59:38,250 --> 00:59:44,609
longer chunk of the contents which is

797
00:59:41,340 --> 00:59:47,100
not secret you can see what comes before

798
00:59:44,609 --> 00:59:51,650
the token right you can see that chunk

799
00:59:47,100 --> 00:59:51,650
that piece of text let's try with that

800
01:00:38,680 --> 01:00:52,509
I'm going to restart so I must confess

801
01:00:47,500 --> 01:00:54,880
if I start copying and pasting we could

802
01:00:52,510 --> 01:00:58,240
be here until tomorrow because the chunk

803
01:00:54,880 --> 01:01:06,120
is longer now now the size is larger as

804
01:00:58,240 --> 01:01:06,120
well says 5 8 9 right now I try with B

805
01:01:23,030 --> 01:01:27,610
am I doing this right I wonder

806
01:02:05,440 --> 01:02:12,450
with just this I can't see what's wrong

807
01:02:10,089 --> 01:02:12,450
here

808
01:02:16,910 --> 01:02:20,960
something is going badly rock

809
01:02:41,480 --> 01:02:45,550
I don't always going wrong with the

810
01:02:43,160 --> 01:02:45,549
chains

811
01:02:47,810 --> 01:02:54,549
five eight nine right so i test i

812
01:03:42,320 --> 01:03:50,960
for them well today is the day when

813
01:03:47,430 --> 01:03:50,960
demos have to go wrong right

814
01:04:53,289 --> 01:05:02,920
well I honestly have no idea what's

815
01:04:58,009 --> 01:05:07,069
going wrong in theory as I get a longer

816
01:05:02,920 --> 01:05:11,239
text then the algorithm has a better

817
01:05:07,069 --> 01:05:14,029
idea because what we're saying to our

818
01:05:11,239 --> 01:05:17,170
algorithm is hey this is the chain you

819
01:05:14,029 --> 01:05:17,170
need to reproduce

820
01:05:23,349 --> 01:05:29,390
I've just thought of what might be the

821
01:05:26,420 --> 01:05:32,180
reason why this is going wrong let me

822
01:05:29,390 --> 01:05:34,970
just check something else otherwise how

823
01:05:32,180 --> 01:05:35,538
just who just leave it and check some

824
01:05:34,970 --> 01:05:39,859
other time

825
01:05:35,539 --> 01:05:42,729
I was just thinking now it might be

826
01:05:39,859 --> 01:05:42,729
because of the browser

827
01:06:16,680 --> 01:06:24,790
I'm just going to clean this now and get

828
01:06:20,590 --> 01:06:27,210
this chunk it's piece of text and see if

829
01:06:24,790 --> 01:06:27,210
that works

830
01:06:58,560 --> 01:07:05,220
well actually this might come in useful

831
01:07:00,810 --> 01:07:09,200
because then I can use this for an

832
01:07:05,220 --> 01:07:09,200
explanation I had to give you later on

833
01:07:25,029 --> 01:07:36,829
right now B then C I still get 96 right

834
01:07:33,769 --> 01:07:40,640
I can see the reason why it was going

835
01:07:36,829 --> 01:07:43,819
wrong was the browser I have no idea why

836
01:07:40,640 --> 01:07:46,819
Firefox does two different connections

837
01:07:43,819 --> 01:07:52,329
the second one is always 96 because I'm

838
01:07:46,819 --> 01:07:52,329
getting it right can you see what I mean

839
01:07:52,750 --> 01:08:05,119
so why on earth is this going wrong I

840
01:08:00,950 --> 01:08:10,430
was thinking the reason might be that I

841
01:08:05,119 --> 01:08:16,339
tested it in the past using Firefox as a

842
01:08:10,430 --> 01:08:20,330
browser but the idea is that is very

843
01:08:16,339 --> 01:08:25,009
different if the browser it works with a

844
01:08:20,330 --> 01:08:29,920
flow encryption or block encryption why

845
01:08:25,009 --> 01:08:33,939
is that an important difference because

846
01:08:29,920 --> 01:08:37,670
look at this situation in a follow

847
01:08:33,939 --> 01:08:41,448
encryption the idea is that from the

848
01:08:37,670 --> 01:08:46,219
password and this seed there is a jet of

849
01:08:41,448 --> 01:08:49,370
data shall we say and then the length of

850
01:08:46,219 --> 01:08:54,069
the message that we want to send is cut

851
01:08:49,370 --> 01:08:57,769
shorter and that's how you get an XOR

852
01:08:54,069 --> 01:09:00,380
at the top we got the letter right at

853
01:08:57,770 --> 01:09:01,940
the bottom I got the letter wrong was

854
01:09:00,380 --> 01:09:04,790
the difference between those two just

855
01:09:01,939 --> 01:09:07,759
one bite and that tells us if we got it

856
01:09:04,790 --> 01:09:10,219
right or wrong what happens when a

857
01:09:07,759 --> 01:09:15,580
Krypton encryption works with blocks

858
01:09:10,219 --> 01:09:18,649
instead this might happen because

859
01:09:15,580 --> 01:09:21,738
encryption happens at the level of books

860
01:09:18,649 --> 01:09:23,608
when you get a message of a certain

861
01:09:21,738 --> 01:09:26,608
length and there is

862
01:09:23,609 --> 01:09:28,679
a refill strategy I'm not going to go

863
01:09:26,609 --> 01:09:31,679
into detail about that but that's the

864
01:09:28,679 --> 01:09:33,899
idea so whether you're right or wrong as

865
01:09:31,679 --> 01:09:41,399
long as the number of blocks doesn't

866
01:09:33,899 --> 01:09:46,339
change then the size is the same and the

867
01:09:41,399 --> 01:09:49,858
results seem to be the same so crime and

868
01:09:46,339 --> 01:09:53,009
rich those tools what do they do

869
01:09:49,859 --> 01:09:58,170
to solve this problem well refill and

870
01:09:53,009 --> 01:10:01,980
refill until the time comes when the

871
01:09:58,170 --> 01:10:04,409
length well actually when I said refill

872
01:10:01,980 --> 01:10:08,250
and that would be with characters they

873
01:10:04,409 --> 01:10:13,739
could see were not present and the token

874
01:10:08,250 --> 01:10:17,239
craf token until there's a new block

875
01:10:13,739 --> 01:10:21,809
that that is obvious because the size is

876
01:10:17,239 --> 01:10:25,860
larger so they go one step back to run

877
01:10:21,810 --> 01:10:28,380
the test then why is that because if

878
01:10:25,860 --> 01:10:31,650
they get it wrong the additional

879
01:10:28,380 --> 01:10:34,679
character would generate a new book and

880
01:10:31,650 --> 01:10:38,250
in that case you would see there is a

881
01:10:34,679 --> 01:10:40,110
difference in size whereas if you get it

882
01:10:38,250 --> 01:10:43,440
right the size will remain the same

883
01:10:40,110 --> 01:10:47,849
there won't be a new block and then we

884
01:10:43,440 --> 01:10:50,719
will see the size another problem we had

885
01:10:47,850 --> 01:10:55,679
just now had to do with Huffman encoding

886
01:10:50,719 --> 01:10:58,850
because zipping signals to the chain

887
01:10:55,679 --> 01:11:01,949
that repeated and then there's Hoffman

888
01:10:58,850 --> 01:11:04,469
encoding which at the end of the day is

889
01:11:01,949 --> 01:11:07,940
a way to portray the most common

890
01:11:04,469 --> 01:11:11,790
characters with a smaller bit sequence

891
01:11:07,940 --> 01:11:14,599
they noticed and that for instance when

892
01:11:11,790 --> 01:11:14,600
you say a

893
01:11:14,809 --> 01:11:22,090
the package didn't grow larger because

894
01:11:18,260 --> 01:11:24,800
the a made this tree different and that

895
01:11:22,090 --> 01:11:35,119
recoding made the character characters

896
01:11:24,800 --> 01:11:43,639
not change even though your guess is

897
01:11:35,119 --> 01:11:46,940
wrong so that's why I think the demo

898
01:11:43,639 --> 01:11:48,710
might have gone wrong now and it's very

899
01:11:46,940 --> 01:11:51,230
annoying because it was working

900
01:11:48,710 --> 01:11:53,030
beautifully well one hour ago and the

901
01:11:51,230 --> 01:11:56,000
compression algorithm should have worked

902
01:11:53,030 --> 01:11:58,840
perfectly the same exactly the same but

903
01:11:56,000 --> 01:12:02,449
you know what computer science is like

904
01:11:58,840 --> 01:12:10,550
so there's this double check strategy

905
01:12:02,449 --> 01:12:13,759
that's what they came up with the

906
01:12:10,550 --> 01:12:16,429
guessing happened on the one site for

907
01:12:13,760 --> 01:12:19,489
the characters as we saw earlier and

908
01:12:16,429 --> 01:12:23,150
then there was a double check another

909
01:12:19,489 --> 01:12:27,799
check at the other end what happened is

910
01:12:23,150 --> 01:12:32,150
if they got it wrong but the size of

911
01:12:27,800 --> 01:12:36,260
their package had to do with Hoffman

912
01:12:32,150 --> 01:12:39,829
encoding the final result would be the

913
01:12:36,260 --> 01:12:43,309
same for both of these tests the Hoffman

914
01:12:39,829 --> 01:12:46,519
tree would be altered and then this size

915
01:12:43,309 --> 01:12:51,380
would change well these two requests are

916
01:12:46,520 --> 01:12:54,800
the same size but if you test b and b is

917
01:12:51,380 --> 01:12:59,210
right then the b would increase the

918
01:12:54,800 --> 01:13:01,130
value from 9 to 10 and in that case that

919
01:12:59,210 --> 01:13:02,929
would be the size right whereas if you

920
01:13:01,130 --> 01:13:08,000
checked the at the other end the other

921
01:13:02,929 --> 01:13:11,539
size when b goes because of that first

922
01:13:08,000 --> 01:13:15,409
stage that will not have an impact on

923
01:13:11,539 --> 01:13:17,509
the Hoff Huffman encoding so for every

924
01:13:15,409 --> 01:13:21,170
position there were two checks one

925
01:13:17,510 --> 01:13:24,440
before one after so they could compare

926
01:13:21,170 --> 01:13:26,450
the size had changed and also checking

927
01:13:24,440 --> 01:13:29,330
if they were eggs

928
01:13:26,450 --> 01:13:34,790
clearly same between the two to really

929
01:13:29,330 --> 01:13:37,790
double check if the guess was right so

930
01:13:34,790 --> 01:13:39,950
if you have a problem that like we had

931
01:13:37,790 --> 01:13:44,030
just now with the demo this might be the

932
01:13:39,950 --> 01:13:48,260
reason although as I said in theory if

933
01:13:44,030 --> 01:13:50,660
you ship the same set of data the final

934
01:13:48,260 --> 01:13:56,810
out outcome would still be the same so

935
01:13:50,660 --> 01:13:58,639
who knows what happened really I also

936
01:13:56,810 --> 01:14:02,300
wanted to tell you about a number of

937
01:13:58,640 --> 01:14:04,280
techniques for instance deactivating the

938
01:14:02,300 --> 01:14:06,830
zipping at the server side so that

939
01:14:04,280 --> 01:14:10,940
responses are not compressed are not

940
01:14:06,830 --> 01:14:16,300
zipped but even so I showed you that

941
01:14:10,940 --> 01:14:20,990
image earlier which is on docker hub

942
01:14:16,300 --> 01:14:28,790
that's that can be activated if you

943
01:14:20,990 --> 01:14:32,139
install at the beginning is normally

944
01:14:28,790 --> 01:14:35,990
deactivated and sometimes you see a

945
01:14:32,140 --> 01:14:38,510
forum asking how to activate a

946
01:14:35,990 --> 01:14:39,950
compression and then somebody answers

947
01:14:38,510 --> 01:14:42,830
say hey be careful with doing that

948
01:14:39,950 --> 01:14:46,690
because you might have this problem if

949
01:14:42,830 --> 01:14:48,050
you do it then there are the time based

950
01:14:46,690 --> 01:14:53,210
techniques

951
01:14:48,050 --> 01:14:56,810
what's the idea there well who would win

952
01:14:53,210 --> 01:14:58,550
in a race with asterisks or Alex can you

953
01:14:56,810 --> 01:15:00,260
raise your hand if you think Asterix

954
01:14:58,550 --> 01:15:04,550
would win raise your hand if you think

955
01:15:00,260 --> 01:15:06,740
Obelix would win the final answer is

956
01:15:04,550 --> 01:15:09,890
that they would both win because they

957
01:15:06,740 --> 01:15:11,480
both drink their magic potion but in

958
01:15:09,890 --> 01:15:15,140
real in the real world

959
01:15:11,480 --> 01:15:18,129
asterisk Asterix would win if you're

960
01:15:15,140 --> 01:15:21,380
really big then it takes you longer

961
01:15:18,130 --> 01:15:25,130
running is harder and just asked me if

962
01:15:21,380 --> 01:15:28,180
you don't believe me we were talking

963
01:15:25,130 --> 01:15:32,540
about requests with longer or shorter

964
01:15:28,180 --> 01:15:35,270
responses if your request has a longer a

965
01:15:32,540 --> 01:15:38,210
larger response then that takes longer

966
01:15:35,270 --> 01:15:43,040
to get to the browser than a smaller

967
01:15:38,210 --> 01:15:45,350
that's a clever idea so what some people

968
01:15:43,040 --> 01:15:49,040
did was hey let's do away with

969
01:15:45,350 --> 01:15:51,830
monitoring on the internet and then on

970
01:15:49,040 --> 01:15:54,200
JavaScript where I asked for requests

971
01:15:51,830 --> 01:15:58,730
I'm going to measure how long it takes

972
01:15:54,200 --> 01:16:02,300
to load an image for instance that's how

973
01:15:58,730 --> 01:16:06,110
I can tell if I if it's been if it's

974
01:16:02,300 --> 01:16:09,530
taken shorter or longer and I can attack

975
01:16:06,110 --> 01:16:11,360
you just when you visit my website I can

976
01:16:09,530 --> 01:16:12,950
send you my JavaScript and I can attack

977
01:16:11,360 --> 01:16:21,920
you and you don't even need to be at

978
01:16:12,950 --> 01:16:25,580
home when that happens something else

979
01:16:21,920 --> 01:16:30,650
these attacks do apart from the

980
01:16:25,580 --> 01:16:35,290
difference in the time for loading now

981
01:16:30,650 --> 01:16:38,960
the Internet is faster it's not so easy

982
01:16:35,290 --> 01:16:42,519
measuring response times so another

983
01:16:38,960 --> 01:16:46,610
possibility is sending a package just

984
01:16:42,520 --> 01:16:49,310
like we said for bridge later sending a

985
01:16:46,610 --> 01:16:52,670
request a request that reflects part of

986
01:16:49,310 --> 01:16:57,350
the contents sending a request then that

987
01:16:52,670 --> 01:17:00,200
will have such a long response just like

988
01:16:57,350 --> 01:17:03,040
we did with encrypting earlier staying

989
01:17:00,200 --> 01:17:08,030
at the edge of the blog so that I know

990
01:17:03,040 --> 01:17:11,200
if I failed or succeeded well something

991
01:17:08,030 --> 01:17:17,150
very similar but for TCP packages

992
01:17:11,200 --> 01:17:20,840
generating a request that will be at the

993
01:17:17,150 --> 01:17:25,009
limit of the tcp package so that if you

994
01:17:20,840 --> 01:17:27,620
have a longer response by one byte say

995
01:17:25,010 --> 01:17:30,800
in the encrypting then a different

996
01:17:27,620 --> 01:17:33,769
package will have to be sent so the

997
01:17:30,800 --> 01:17:38,980
round-trip time for the package and the

998
01:17:33,770 --> 01:17:38,980
ck well the time would be maximized then

999
01:17:39,420 --> 01:17:44,890
here we can see a script or rather we

1000
01:17:42,280 --> 01:17:48,370
can't see a script because of the bad

1001
01:17:44,890 --> 01:17:53,560
resolution on the screen and the letter

1002
01:17:48,370 --> 01:17:56,680
size that it you know that there are

1003
01:17:53,560 --> 01:18:02,080
JavaScript commands that measure the

1004
01:17:56,680 --> 01:18:03,310
performance on websites that can be used

1005
01:18:02,080 --> 01:18:06,430
in this situation

1006
01:18:03,310 --> 01:18:10,090
I must confess I've always been rather

1007
01:18:06,430 --> 01:18:13,240
skeptical talking about these attacks it

1008
01:18:10,090 --> 01:18:16,690
depends on the latency or the DNS when

1009
01:18:13,240 --> 01:18:20,469
you connect the network on latency the

1010
01:18:16,690 --> 01:18:25,480
server latency and very much depend on

1011
01:18:20,470 --> 01:18:29,470
the Wi-Fi network or if you use a mobile

1012
01:18:25,480 --> 01:18:30,549
phone so these attacks that seem to work

1013
01:18:29,470 --> 01:18:32,890
fine

1014
01:18:30,550 --> 01:18:36,340
at the lab but I have my doubts them

1015
01:18:32,890 --> 01:18:40,270
they would work in the real world that's

1016
01:18:36,340 --> 01:18:45,270
why I brought you this example this is

1017
01:18:40,270 --> 01:18:50,250
Uncle Prado one of the authors and

1018
01:18:45,270 --> 01:18:54,610
designers of bridge and he asked the

1019
01:18:50,250 --> 01:18:57,030
person in charge of time an attack that

1020
01:18:54,610 --> 01:19:02,530
was similar to bridge but based on

1021
01:18:57,030 --> 01:19:05,139
timing in this case so the author of

1022
01:19:02,530 --> 01:19:07,269
time said something a bit nasty about

1023
01:19:05,140 --> 01:19:10,250
bridge and then one of the bridge

1024
01:19:07,270 --> 01:19:11,909
authors this man

1025
01:19:10,250 --> 01:19:15,309
[Music]

1026
01:19:11,909 --> 01:19:16,839
Arkel he said what about your

1027
01:19:15,309 --> 01:19:20,709
proof-of-concept

1028
01:19:16,840 --> 01:19:23,019
there code for this - where is that

1029
01:19:20,709 --> 01:19:30,188
available for us to see if it works or

1030
01:19:23,019 --> 01:19:35,139
not so the response was the following I

1031
01:19:30,189 --> 01:19:37,179
didn't do a fully functional POC because

1032
01:19:35,139 --> 01:19:42,219
otherwise it that we might end up with

1033
01:19:37,179 --> 01:19:50,739
zero day and I thought wow that's a bit

1034
01:19:42,219 --> 01:19:56,320
much the truth of the matter is that for

1035
01:19:50,739 --> 01:19:59,499
these timing attacks in most cases it's

1036
01:19:56,320 --> 01:20:01,989
like showing a demo but you can't see

1037
01:19:59,499 --> 01:20:07,179
anything in detail and you can you've

1038
01:20:01,989 --> 01:20:12,419
seen it but you haven't you've only seen

1039
01:20:07,179 --> 01:20:12,419
it very superficially superficially I

1040
01:20:12,479 --> 01:20:18,820
haven't seen a proof of contact concepts

1041
01:20:16,809 --> 01:20:22,709
for this where you can really see the

1042
01:20:18,820 --> 01:20:22,709
tools in detail to be honest

1043
01:20:27,920 --> 01:20:34,949
this is quite similar now to the attack

1044
01:20:32,070 --> 01:20:41,130
I designed this is the cross site

1045
01:20:34,949 --> 01:20:46,219
searches attacks which are not a based

1046
01:20:41,130 --> 01:20:49,230
on zipping because most websites disable

1047
01:20:46,219 --> 01:20:52,590
zipping the idea here is that some

1048
01:20:49,230 --> 01:20:55,369
websites have their own search engines

1049
01:20:52,590 --> 01:20:57,750
where you can ask for information and

1050
01:20:55,369 --> 01:21:00,449
some of those search engines are

1051
01:20:57,750 --> 01:21:06,030
particularly powerful for instance a I

1052
01:21:00,449 --> 01:21:10,230
might say hey find in my book phone

1053
01:21:06,030 --> 01:21:12,809
numbers that start with a 93 for

1054
01:21:10,230 --> 01:21:16,549
instance and because inverted commas

1055
01:21:12,810 --> 01:21:20,400
nobody can read encrypted information

1056
01:21:16,550 --> 01:21:23,340
because actions are protected for

1057
01:21:20,400 --> 01:21:26,219
instance for bank transfers or for

1058
01:21:23,340 --> 01:21:29,610
resetting passwords all of that is well

1059
01:21:26,219 --> 01:21:32,909
protected but any forms that have to do

1060
01:21:29,610 --> 01:21:36,179
with queries developers and security

1061
01:21:32,909 --> 01:21:45,388
experts tend to think that you can't

1062
01:21:36,179 --> 01:21:49,880
read them because is HTTP let me tell

1063
01:21:45,389 --> 01:21:54,239
you about these attacks how do they work

1064
01:21:49,880 --> 01:21:58,250
the same JavaScript modified but instead

1065
01:21:54,239 --> 01:22:00,980
of sending requests for no particular

1066
01:21:58,250 --> 01:22:06,570
functionality like in the case of time

1067
01:22:00,980 --> 01:22:11,669
then requests are sent to search engines

1068
01:22:06,570 --> 01:22:15,150
checking a B whatever and see what the

1069
01:22:11,670 --> 01:22:17,730
request says if it says something long

1070
01:22:15,150 --> 01:22:20,489
then that means I've got something right

1071
01:22:17,730 --> 01:22:23,218
that search engine has something that

1072
01:22:20,489 --> 01:22:26,129
starts with an A for instance whereas if

1073
01:22:23,219 --> 01:22:29,040
the response is tiny it means I've got

1074
01:22:26,130 --> 01:22:32,670
it wrong my guess is wrong if there is a

1075
01:22:29,040 --> 01:22:35,749
vulnerable application for instance with

1076
01:22:32,670 --> 01:22:39,449
somebody's phone book

1077
01:22:35,749 --> 01:22:44,478
that's how that can be exploited and get

1078
01:22:39,449 --> 01:22:53,280
information even if the victim is using

1079
01:22:44,479 --> 01:22:56,789
HTTP communications do you think this

1080
01:22:53,280 --> 01:23:00,799
had anything to do with stream ciphers

1081
01:22:56,789 --> 01:23:00,799
and block site ciphers

1082
01:23:03,440 --> 01:23:09,469
and why if anybody wants to volunteer

1083
01:23:05,840 --> 01:23:13,700
and reply who said yes and I'll pick on

1084
01:23:09,470 --> 01:23:14,690
you in this case there is very response

1085
01:23:13,700 --> 01:23:20,929
will be yes

1086
01:23:14,690 --> 01:23:27,349
but the answer is yes because if there

1087
01:23:20,930 --> 01:23:35,180
is a block cipher and the difference in

1088
01:23:27,350 --> 01:23:38,720
size is bigger well that's not really a

1089
01:23:35,180 --> 01:23:43,670
problem in the practice because the

1090
01:23:38,720 --> 01:23:47,450
normal Bullock size is 16 bytes that is

1091
01:23:43,670 --> 01:23:52,220
16 characters that is one single impulse

1092
01:23:47,450 --> 01:23:56,179
the information on an entry if it's

1093
01:23:52,220 --> 01:23:59,720
under 16 characters that could be a

1094
01:23:56,180 --> 01:24:04,040
problem on HTML what does that mean if

1095
01:23:59,720 --> 01:24:06,680
every result has ten characters then if

1096
01:24:04,040 --> 01:24:10,730
you have one additional result that

1097
01:24:06,680 --> 01:24:12,110
would generate an additional block so

1098
01:24:10,730 --> 01:24:16,400
that wouldn't be a problem in the

1099
01:24:12,110 --> 01:24:18,530
practice Huffman encoding is that an

1100
01:24:16,400 --> 01:24:22,009
issue not really because there is no

1101
01:24:18,530 --> 01:24:24,790
compression is padding an issue no we're

1102
01:24:22,010 --> 01:24:24,790
not gonna have that problem

1103
01:24:25,579 --> 01:24:36,869
this is an attack that can also be

1104
01:24:28,979 --> 01:24:38,999
time-based requests and instead of

1105
01:24:36,869 --> 01:24:43,710
checking for size we would be checking

1106
01:24:38,999 --> 01:24:46,340
for time just like the other type the

1107
01:24:43,710 --> 01:24:50,820
other attack I described earlier

1108
01:24:46,340 --> 01:24:55,800
checking for time and then do the

1109
01:24:50,820 --> 01:25:04,099
computation I haven't seen a proof of

1110
01:24:55,800 --> 01:25:08,420
concept for this either nathaniel color

1111
01:25:04,099 --> 01:25:12,769
Galanter shows the to run the demo

1112
01:25:08,420 --> 01:25:15,449
nothing was published honest no details

1113
01:25:12,769 --> 01:25:17,159
so I'm not saying this doesn't work I'm

1114
01:25:15,449 --> 01:25:20,489
just saying that I haven't been able to

1115
01:25:17,159 --> 01:25:24,170
verify it works and I checked the other

1116
01:25:20,489 --> 01:25:29,218
option the one for the network and I saw

1117
01:25:24,170 --> 01:25:30,780
how many issues that involves I'm rather

1118
01:25:29,219 --> 01:25:33,380
skeptical it might work

1119
01:25:30,780 --> 01:25:39,119
in certain very particular environments

1120
01:25:33,380 --> 01:25:47,280
only in this case the author used a

1121
01:25:39,119 --> 01:25:50,429
technique where he tried to find as one

1122
01:25:47,280 --> 01:25:52,949
parameter that would be present in the

1123
01:25:50,429 --> 01:25:55,499
different responses to make it larger

1124
01:25:52,949 --> 01:26:00,150
for instance if the difference is three

1125
01:25:55,499 --> 01:26:02,400
bytes when you load and try and measure

1126
01:26:00,150 --> 01:26:06,869
the time difference you're not going to

1127
01:26:02,400 --> 01:26:10,888
be able to compute that you need

1128
01:26:06,869 --> 01:26:14,210
something more consistent than that so

1129
01:26:10,889 --> 01:26:14,210
where does that leaders

1130
01:26:15,550 --> 01:26:25,540
well to the new type of side channel

1131
01:26:18,720 --> 01:26:28,060
attack because this all started with a

1132
01:26:25,540 --> 01:26:31,470
problem a customer had as I said earlier

1133
01:26:28,060 --> 01:26:37,030
instead of it being quite based on time

1134
01:26:31,470 --> 01:26:39,070
it was based on size so when I designed

1135
01:26:37,030 --> 01:26:40,990
my first two I decided

1136
01:26:39,070 --> 01:26:44,710
oh I'm going to check on Google or

1137
01:26:40,990 --> 01:26:48,630
Facebook I bet and they I want to test

1138
01:26:44,710 --> 01:26:52,350
this and it didn't work on any of them

1139
01:26:48,630 --> 01:26:56,560
why well probably because of random

1140
01:26:52,350 --> 01:27:01,570
elements this is an example of curling

1141
01:26:56,560 --> 01:27:04,210
on Google measuring characters and

1142
01:27:01,570 --> 01:27:08,429
there's one size one minute the next

1143
01:27:04,210 --> 01:27:13,600
second a different size that means

1144
01:27:08,430 --> 01:27:16,860
there's not one standard size why well

1145
01:27:13,600 --> 01:27:20,260
because they have these hellish

1146
01:27:16,860 --> 01:27:25,000
JavaScript for every request sometimes

1147
01:27:20,260 --> 01:27:27,460
with random names is impossible

1148
01:27:25,000 --> 01:27:30,490
measuring the time for this type of

1149
01:27:27,460 --> 01:27:33,730
request was totally impossible and I

1150
01:27:30,490 --> 01:27:37,420
don't like losing so I thought and

1151
01:27:33,730 --> 01:27:42,250
thought and thought again and I came up

1152
01:27:37,420 --> 01:27:45,100
with an idea I thought well size is not

1153
01:27:42,250 --> 01:27:48,760
the only element that we can use for

1154
01:27:45,100 --> 01:27:50,800
side channels size or time which is

1155
01:27:48,760 --> 01:27:53,770
connected with size at the end of the

1156
01:27:50,800 --> 01:27:58,690
day so it's size again but this there

1157
01:27:53,770 --> 01:28:00,930
are more elements here we can use like

1158
01:27:58,690 --> 01:28:00,929
both

1159
01:28:01,240 --> 01:28:11,200
I came up with this idea who uses Google

1160
01:28:06,420 --> 01:28:12,220
contacts for your contacts well quite a

1161
01:28:11,200 --> 01:28:18,700
lot of you right

1162
01:28:12,220 --> 01:28:30,040
I suddenly realized that every result a

1163
01:28:18,700 --> 01:28:34,780
load a loads an image and I found that

1164
01:28:30,040 --> 01:28:38,100
if I test something and that fails you

1165
01:28:34,780 --> 01:28:42,759
can see on the network one connection

1166
01:28:38,100 --> 01:28:45,700
for image loading to the place where

1167
01:28:42,760 --> 01:28:48,760
Google has images what is that well is

1168
01:28:45,700 --> 01:28:51,550
your own picture right there the picture

1169
01:28:48,760 --> 01:28:54,940
that you can see on the right and if you

1170
01:28:51,550 --> 01:28:58,390
get it right what you get is two images

1171
01:28:54,940 --> 01:29:01,269
my own image and the image that's been

1172
01:28:58,390 --> 01:29:04,210
found and loaded so if we count the

1173
01:29:01,270 --> 01:29:09,820
number of connections could we know then

1174
01:29:04,210 --> 01:29:12,030
and calculate the number of results well

1175
01:29:09,820 --> 01:29:16,090
the answer to that question was yes

1176
01:29:12,030 --> 01:29:18,880
although it's rather a complex answer

1177
01:29:16,090 --> 01:29:21,850
because there is a cache for instance

1178
01:29:18,880 --> 01:29:25,210
for ten images when you test it again

1179
01:29:21,850 --> 01:29:27,520
and you got it right again you get your

1180
01:29:25,210 --> 01:29:31,930
results and if they had been present in

1181
01:29:27,520 --> 01:29:35,490
the previous page you can't see them

1182
01:29:31,930 --> 01:29:40,240
loading because they have been cached

1183
01:29:35,490 --> 01:29:46,809
the browser doesn't make the connection

1184
01:29:40,240 --> 01:29:50,019
to the images I checked an example it

1185
01:29:46,810 --> 01:29:54,280
say they are saved for 24 hours and when

1186
01:29:50,020 --> 01:29:56,710
our images cached when the browser gets

1187
01:29:54,280 --> 01:29:57,749
the image if the browser sends a request

1188
01:29:56,710 --> 01:30:02,159
and I

1189
01:29:57,749 --> 01:30:07,769
see it I make a note of it and then I

1190
01:30:02,159 --> 01:30:12,329
need to let it go well I do but I still

1191
01:30:07,769 --> 01:30:14,909
know a request has been made and the

1192
01:30:12,329 --> 01:30:17,789
image won't be cached because there's

1193
01:30:14,909 --> 01:30:19,018
never been a response that's why

1194
01:30:17,789 --> 01:30:24,779
browsers

1195
01:30:19,019 --> 01:30:29,209
try two three times maybe but because

1196
01:30:24,779 --> 01:30:32,939
the number of times they try is

1197
01:30:29,209 --> 01:30:34,139
deterministic for instance say I have

1198
01:30:32,939 --> 01:30:38,459
two images right

1199
01:30:34,139 --> 01:30:40,469
I don't care going from one connection

1200
01:30:38,459 --> 01:30:43,499
with two connections or from two

1201
01:30:40,469 --> 01:30:46,589
connections to four because it tries

1202
01:30:43,499 --> 01:30:49,219
twice for every connection as long as I

1203
01:30:46,589 --> 01:30:54,479
see the difference that's enough for me

1204
01:30:49,219 --> 01:30:55,889
yes and you cannot really see that but

1205
01:30:54,479 --> 01:30:59,399
there was another trick that I came up

1206
01:30:55,889 --> 01:31:02,939
with because okay you're using that side

1207
01:30:59,399 --> 01:31:05,939
right lesson 24 hours ago so you will

1208
01:31:02,939 --> 01:31:08,969
have passion images right but from your

1209
01:31:05,939 --> 01:31:13,649
local CDN if you route it so that it

1210
01:31:08,969 --> 01:31:15,869
goes through when Osiris when they go

1211
01:31:13,649 --> 01:31:18,089
onto the Facebook from when Osiris or

1212
01:31:15,869 --> 01:31:20,429
what on to Google or whatever Google

1213
01:31:18,089 --> 01:31:24,389
Facebook will say okay take this because

1214
01:31:20,429 --> 01:31:27,239
you come from one is iris IP so get the

1215
01:31:24,389 --> 01:31:28,889
images from my CDN there where the path

1216
01:31:27,239 --> 01:31:31,558
is completely different from what you

1217
01:31:28,889 --> 01:31:37,199
put upload here which I have not been

1218
01:31:31,559 --> 01:31:42,269
cached so there you can run the attack

1219
01:31:37,199 --> 01:31:47,629
anyway so all of this I said okay so

1220
01:31:42,269 --> 01:31:51,479
who's vulnerable here and so as it seems

1221
01:31:47,629 --> 01:31:55,259
Gmail was not but Google inbox that has

1222
01:31:51,479 --> 01:32:02,789
access to you the emails in Google it

1223
01:31:55,259 --> 01:32:08,369
was Google Drive just the same because

1224
01:32:02,789 --> 01:32:10,469
there is a preview profile so there you

1225
01:32:08,369 --> 01:32:12,959
have that image that you cannot see but

1226
01:32:10,469 --> 01:32:18,199
you see the line right there line there

1227
01:32:12,959 --> 01:32:21,599
is a preview I've loaded their Dropbox

1228
01:32:18,199 --> 01:32:23,279
had it one last for Dropbox the image

1229
01:32:21,599 --> 01:32:25,079
was uploaded when you couldn't find

1230
01:32:23,279 --> 01:32:26,639
anything else but it doesn't matter

1231
01:32:25,079 --> 01:32:30,239
because what we check is the difference

1232
01:32:26,639 --> 01:32:33,089
between much and a failure and that's

1233
01:32:30,239 --> 01:32:37,768
what we try and find a difference and

1234
01:32:33,089 --> 01:32:42,029
Facebook had it on facebook messenger

1235
01:32:37,769 --> 01:32:44,699
you use the browser for searching and

1236
01:32:42,029 --> 01:32:47,789
you would see as many images as chats

1237
01:32:44,699 --> 01:32:56,608
were the words that he had typed where

1238
01:32:47,789 --> 01:32:59,699
much even though it is on video but and

1239
01:32:56,609 --> 01:33:02,509
it seems it's not my day for demos I'll

1240
01:32:59,699 --> 01:33:02,509
try and do it

1241
01:33:27,959 --> 01:33:33,099
mr. dharamendra de la cosa lava guy in

1242
01:33:30,939 --> 01:33:37,919
the double our mother fiesta this is

1243
01:33:33,099 --> 01:33:45,749
fiesta it looks this looks like a shot

1244
01:33:37,919 --> 01:33:45,749
right sharp as but this is Stanley as

1245
01:33:45,929 --> 01:33:52,469
met exploit

1246
01:33:47,829 --> 01:33:52,469
most of them are not yet implemented

1247
01:33:58,079 --> 01:34:16,389
these aims to be met exploit this is a

1248
01:34:13,239 --> 01:34:19,379
crowd site search the one that we saw

1249
01:34:16,389 --> 01:34:19,379
checked their size

1250
01:34:28,360 --> 01:34:31,589
let's see if it works

1251
01:34:41,900 --> 01:34:45,740
let's run it

1252
01:35:00,400 --> 01:35:05,620
but it the way the fear is this

1253
01:35:03,420 --> 01:35:10,780
motivational wanna open are lucky we

1254
01:35:05,620 --> 01:35:14,800
open our career and condos though let's

1255
01:35:10,780 --> 01:35:17,370
start this one in case the session is

1256
01:35:14,800 --> 01:35:17,370
over now

1257
01:35:28,300 --> 01:35:45,350
this is a sinless site that has an

1258
01:35:32,570 --> 01:35:50,259
agenda or a phone list that I made up so

1259
01:35:45,350 --> 01:35:50,260
this is an example the first example

1260
01:35:52,240 --> 01:36:06,679
that was here let's say images if I

1261
01:36:03,200 --> 01:36:16,160
visit this site maybe we could inject

1262
01:36:06,680 --> 01:36:18,190
this JavaScript that I said before all

1263
01:36:16,160 --> 01:36:27,080
right

1264
01:36:18,190 --> 01:36:30,230
let's see what happens see down here

1265
01:36:27,080 --> 01:36:32,000
some images uploading those images it

1266
01:36:30,230 --> 01:36:38,230
says five five five five five five

1267
01:36:32,000 --> 01:36:41,840
whatever so that's tryin phone numbers

1268
01:36:38,230 --> 01:36:45,889
trying to get those phone numbers out of

1269
01:36:41,840 --> 01:36:48,350
the phone list the hands it is in

1270
01:36:45,890 --> 01:36:51,430
between this is a victim which we could

1271
01:36:48,350 --> 01:36:55,690
mask and hide and this here you can see

1272
01:36:51,430 --> 01:37:02,720
number right

1273
01:36:55,690 --> 01:37:04,849
so trying numbers one by one and so when

1274
01:37:02,720 --> 01:37:07,520
it's finished on the right side it'll

1275
01:37:04,850 --> 01:37:09,980
start on the left side so tried every

1276
01:37:07,520 --> 01:37:13,730
possibility none of them is good enough

1277
01:37:09,980 --> 01:37:16,639
and started on the left side these are

1278
01:37:13,730 --> 01:37:21,049
you--is numbers 555 and it says he is

1279
01:37:16,640 --> 01:37:22,820
one and he kept his arm searching and it

1280
01:37:21,050 --> 01:37:26,270
gets the phone numbers because I've

1281
01:37:22,820 --> 01:37:28,549
given five five five fine left to right

1282
01:37:26,270 --> 01:37:32,110
but maybe I could have years to name as

1283
01:37:28,550 --> 01:37:32,110
a gives me the number

1284
01:37:38,730 --> 01:37:43,440
Roots add and then here when it is over

1285
01:37:41,190 --> 01:37:48,599
he's I forget found it and there's

1286
01:37:43,440 --> 01:37:53,000
another one here another one and here

1287
01:37:48,600 --> 01:37:53,000
let me see if I can magnify

1288
01:37:59,130 --> 01:38:10,150
see the numbers at all another one found

1289
01:38:08,139 --> 01:38:14,110
so here you have the numbers every

1290
01:38:10,150 --> 01:38:29,860
number train and get in the numbers

1291
01:38:14,110 --> 01:38:39,460
right not not my phone list

1292
01:38:29,860 --> 01:38:42,610
I wish have you just seen that let's

1293
01:38:39,460 --> 01:38:46,619
hope for that well let's run it till

1294
01:38:42,610 --> 01:38:51,639
it's complete but here you see a picture

1295
01:38:46,619 --> 01:38:54,400
an image of every of proof and checking

1296
01:38:51,639 --> 01:38:57,849
the size and this was quite similar to

1297
01:38:54,400 --> 01:39:00,549
what I found for a client when doing

1298
01:38:57,849 --> 01:39:03,880
this but I was a bit tacky when doing

1299
01:39:00,550 --> 01:39:06,599
this but here you have it you have the

1300
01:39:03,880 --> 01:39:06,599
phones there

1301
01:39:23,630 --> 01:39:28,580
connections next the one as I said with

1302
01:39:26,780 --> 01:39:31,179
this technique I tried with Google

1303
01:39:28,580 --> 01:39:38,540
Facebook and everything it didn't work

1304
01:39:31,180 --> 01:39:41,060
sir so I got to thinking and I came up

1305
01:39:38,540 --> 01:39:45,980
with the connections and this is what

1306
01:39:41,060 --> 01:39:49,280
implements connections here I said

1307
01:39:45,980 --> 01:39:54,110
Google was vulnerable Facebook as well

1308
01:39:49,280 --> 01:39:56,690
Dropbox as well so I reported it some

1309
01:39:54,110 --> 01:40:01,580
fixed it as a mother's didn't Google

1310
01:39:56,690 --> 01:40:04,820
didn't Google claims this is not deemed

1311
01:40:01,580 --> 01:40:07,370
a problem so that I was told they

1312
01:40:04,820 --> 01:40:09,110
wouldn't fix it so every good product

1313
01:40:07,370 --> 01:40:16,849
that I've shown to you are vulnerable to

1314
01:40:09,110 --> 01:40:26,540
this signe so let's start from the top

1315
01:40:16,850 --> 01:40:28,960
of it only thing is only thing is about

1316
01:40:26,540 --> 01:40:28,960
Google

1317
01:40:32,590 --> 01:40:41,060
for the

1318
01:40:34,070 --> 01:40:43,219
which is to be uploaded I cannot I've

1319
01:40:41,060 --> 01:40:44,630
looked Google content and sent the

1320
01:40:43,219 --> 01:40:50,150
request as if it were a mere image

1321
01:40:44,630 --> 01:40:54,650
anyone why if I blowed the content from

1322
01:40:50,150 --> 01:41:02,690
a request on to contact Google contacts

1323
01:40:54,650 --> 01:41:03,888
as if it were an image it'll get the

1324
01:41:02,690 --> 01:41:05,570
HTML content

1325
01:41:03,889 --> 01:41:09,260
I'll it'll try to interpret it as an

1326
01:41:05,570 --> 01:41:11,719
image and it'll fail because it is not

1327
01:41:09,260 --> 01:41:14,929
an image but it will not bring the

1328
01:41:11,719 --> 01:41:17,329
images because it will render nothing we

1329
01:41:14,929 --> 01:41:19,730
said so so we need to upload it with a

1330
01:41:17,329 --> 01:41:27,670
frame Oh Google will not allow for that

1331
01:41:19,730 --> 01:41:32,540
or on a pop-up open somewhere or a tab

1332
01:41:27,670 --> 01:41:35,510
let's use an open window because it's

1333
01:41:32,540 --> 01:41:37,639
easier to see and then I'll show to you

1334
01:41:35,510 --> 01:41:40,520
how we have it with two tabs over words

1335
01:41:37,639 --> 01:41:43,400
have it more hidden for a console

1336
01:41:40,520 --> 01:41:46,010
proof-of-concept I use a window because

1337
01:41:43,400 --> 01:41:48,199
it's more visible but it's true though

1338
01:41:46,010 --> 01:41:50,239
that I implemented it up as well because

1339
01:41:48,199 --> 01:41:51,980
oftentimes when explaining things people

1340
01:41:50,239 --> 01:41:55,040
said ok you can see the window Kenji

1341
01:41:51,980 --> 01:41:56,959
well because I didn't mean to hide it

1342
01:41:55,040 --> 01:42:02,290
but you but you can hide it if you wish

1343
01:41:56,960 --> 01:42:02,290
so I implemented an agent service to see

1344
01:42:07,210 --> 01:42:17,140
there's another agenda which you cannot

1345
01:42:09,800 --> 01:42:22,040
see either but I will zoom in and then

1346
01:42:17,140 --> 01:42:32,930
let's see we get where Wolverines phone

1347
01:42:22,040 --> 01:42:36,560
can we get it I've always wanted it you

1348
01:42:32,930 --> 01:42:38,080
know único que tenemos Cabrillo Santa

1349
01:42:36,560 --> 01:42:41,780
Rita

1350
01:42:38,080 --> 01:42:44,630
Sika Sika sky above upon an automatic a

1351
01:42:41,780 --> 01:42:53,870
speed calibration that so it says

1352
01:42:44,630 --> 01:42:56,150
automatic speed calibration so in the

1353
01:42:53,870 --> 01:43:02,330
end when you render a whole page it

1354
01:42:56,150 --> 01:43:04,700
takes some time to upload actually this

1355
01:43:02,330 --> 01:43:07,160
kind of attacks is much lower than

1356
01:43:04,700 --> 01:43:14,210
others because it needs to wait for the

1357
01:43:07,160 --> 01:43:16,280
whole page to be rendered so here during

1358
01:43:14,210 --> 01:43:19,940
the calibration and there's some testing

1359
01:43:16,280 --> 01:43:22,509
and the statuses shorter time and large

1360
01:43:19,940 --> 01:43:25,280
in it to see to what the standard when

1361
01:43:22,510 --> 01:43:27,980
it starts getting what it is pecked it

1362
01:43:25,280 --> 01:43:30,889
so try to explain with a good and a fake

1363
01:43:27,980 --> 01:43:36,440
request and then it sees how long it has

1364
01:43:30,890 --> 01:43:37,970
to wait and so once it's there it starts

1365
01:43:36,440 --> 01:43:39,860
distracting characters that time is

1366
01:43:37,970 --> 01:43:42,200
needed because if it's too long that

1367
01:43:39,860 --> 01:43:45,469
time it'll be way too slow and if it -

1368
01:43:42,200 --> 01:43:47,750
way - too short a time I might sent to

1369
01:43:45,470 --> 01:43:50,050
another query before it is rendered so I

1370
01:43:47,750 --> 01:43:54,170
would lose some of the connections there

1371
01:43:50,050 --> 01:43:55,010
down there you see one to one I had

1372
01:43:54,170 --> 01:43:58,840
typed it

1373
01:43:55,010 --> 01:44:03,680
I say start on one so that it wouldn't

1374
01:43:58,840 --> 01:44:07,760
go both ways to zero

1375
01:44:03,680 --> 01:44:12,530
I get you cannot see that but the upper

1376
01:44:07,760 --> 01:44:17,480
line what it says is no results and when

1377
01:44:12,530 --> 01:44:19,790
it shows what when it shows Dundee it is

1378
01:44:17,480 --> 01:44:23,469
a result that's what it is but you don't

1379
01:44:19,790 --> 01:44:23,470
see the picture because if you remember

1380
01:44:24,040 --> 01:44:28,280
I'm just throwing the image because I

1381
01:44:26,450 --> 01:44:32,269
want unloved it to be uploaded because

1382
01:44:28,280 --> 01:44:36,410
I'm not interested but that's a 5-1 Oh

1383
01:44:32,270 --> 01:44:38,120
team one - Oh Team five five five if I'm

1384
01:44:36,410 --> 01:44:42,320
not mistaken oh one or something like

1385
01:44:38,120 --> 01:44:46,960
that so it keeps trying every character

1386
01:44:42,320 --> 01:44:46,960
and says nothing is when it is one yes

1387
01:44:48,190 --> 01:44:56,830
here basically on the network it seems

1388
01:44:54,560 --> 01:44:58,790
you've seen the traffic but browsers

1389
01:44:56,830 --> 01:45:02,660
oftentimes the things that are a bit

1390
01:44:58,790 --> 01:45:03,700
weird at that time where I say wait for

1391
01:45:02,660 --> 01:45:08,030
that long

1392
01:45:03,700 --> 01:45:11,690
server takes longer to reply and it

1393
01:45:08,030 --> 01:45:13,490
fails some it runs several tests for

1394
01:45:11,690 --> 01:45:15,349
every correct character to make sure

1395
01:45:13,490 --> 01:45:16,450
that if I say this is a good one is a

1396
01:45:15,350 --> 01:45:19,280
good one

1397
01:45:16,450 --> 01:45:27,590
and sometimes it even face I don't know

1398
01:45:19,280 --> 01:45:30,170
about this one so if I find this is a

1399
01:45:27,590 --> 01:45:32,510
valid character when I see check the

1400
01:45:30,170 --> 01:45:35,000
others I send a request the previous

1401
01:45:32,510 --> 01:45:36,980
good one is considered a good one and

1402
01:45:35,000 --> 01:45:39,200
then I have the round one and XX or

1403
01:45:36,980 --> 01:45:41,839
whatever the stream I choose that I know

1404
01:45:39,200 --> 01:45:44,990
will not be there so if they look very

1405
01:45:41,840 --> 01:45:48,650
much alike I say okay that means that I

1406
01:45:44,990 --> 01:45:51,010
was mistaken the other time and I

1407
01:45:48,650 --> 01:45:53,750
discard it so there are some

1408
01:45:51,010 --> 01:45:56,960
optimizations for the code to make sure

1409
01:45:53,750 --> 01:45:58,970
there are no mistakes still I've run it

1410
01:45:56,960 --> 01:46:00,770
sunup some many times and sometimes

1411
01:45:58,970 --> 01:46:03,890
there are mistakes that though so

1412
01:46:00,770 --> 01:46:06,620
following the traffic these rules can

1413
01:46:03,890 --> 01:46:09,530
cause a mistake and so I'm skeptical

1414
01:46:06,620 --> 01:46:13,099
about time and because I see the package

1415
01:46:09,530 --> 01:46:19,579
and there's a mistake right

1416
01:46:13,099 --> 01:46:21,290
the mechanism cannot say that no but I

1417
01:46:19,579 --> 01:46:23,540
think it's serious

1418
01:46:21,290 --> 01:46:26,329
what woods missing here one characters

1419
01:46:23,540 --> 01:46:29,150
when I got after to get Edo 166 okay

1420
01:46:26,329 --> 01:46:32,239
now it'll take it some time because

1421
01:46:29,150 --> 01:46:38,480
it'll look for characters in the

1422
01:46:32,239 --> 01:46:42,949
beginning before Wolverine and so this

1423
01:46:38,480 --> 01:46:45,619
is an under on your Wi-Fi getting your

1424
01:46:42,949 --> 01:46:47,860
Google contact place as you rip the

1425
01:46:45,619 --> 01:46:51,098
newspaper

1426
01:46:47,860 --> 01:46:51,098
see what I mean

1427
01:46:54,130 --> 01:46:57,969
so what it says is

1428
01:47:02,150 --> 01:47:07,879
- contrato Walborn in Canasta telefono

1429
01:47:16,680 --> 01:47:24,120
whatever though I'd save that one's true

1430
01:47:27,079 --> 01:47:30,079
oops

1431
01:47:32,170 --> 01:47:35,100
I must help

1432
01:47:35,490 --> 01:47:41,670
most of the villa you can't see can you

1433
01:47:43,320 --> 01:47:57,340
write this to other demos failed so I

1434
01:47:55,390 --> 01:47:57,850
hope you don't really need to go on my

1435
01:47:57,340 --> 01:48:04,000
word

1436
01:47:57,850 --> 01:48:06,400
can you see you says is the same who

1437
01:48:04,000 --> 01:48:18,990
will change their Google contact list

1438
01:48:06,400 --> 01:48:18,990
just right now I forgot about the tabs

1439
01:48:42,820 --> 01:48:48,830
as I was told about the little window

1440
01:48:45,860 --> 01:48:50,780
goes a little window is not a low

1441
01:48:48,830 --> 01:48:52,730
profile you would not give that to you

1442
01:48:50,780 --> 01:48:55,900
user but I was not meaning to hide it

1443
01:48:52,730 --> 01:49:00,530
was I so that's what they came up with

1444
01:48:55,900 --> 01:49:02,540
see that it says that the loading of

1445
01:49:00,530 --> 01:49:06,530
upload and technique is open you see

1446
01:49:02,540 --> 01:49:09,580
image and frame and open and tab so

1447
01:49:06,530 --> 01:49:09,580
let's change it

1448
01:49:24,019 --> 01:49:32,639
and let's let's click here I'll show the

1449
01:49:30,959 --> 01:49:35,280
real video in a minute but as you click

1450
01:49:32,639 --> 01:49:37,079
it takes you somewhere else well they

1451
01:49:35,280 --> 01:49:39,509
keep you busy with whatever it is a

1452
01:49:37,079 --> 01:49:44,369
snake game or whatever and the top as

1453
01:49:39,510 --> 01:49:47,129
you can see and the one in between in

1454
01:49:44,369 --> 01:49:53,009
the middle brother is the one you see

1455
01:49:47,129 --> 01:49:54,570
that uploading doing something there but

1456
01:49:53,010 --> 01:49:56,579
there's a JavaScript here and one the

1457
01:49:54,570 --> 01:50:01,169
first-ever script change is the blink to

1458
01:49:56,579 --> 01:50:04,438
open another tab there's another

1459
01:50:01,169 --> 01:50:08,789
javascript code so as it is open and I'm

1460
01:50:04,439 --> 01:50:11,579
there the JavaScript here that you open

1461
01:50:08,789 --> 01:50:15,030
saying okay try this try that try

1462
01:50:11,579 --> 01:50:18,299
whatever and there is another JavaScript

1463
01:50:15,030 --> 01:50:26,849
code and if the my mouse gets out of

1464
01:50:18,300 --> 01:50:29,280
this side it pops out and so if it's out

1465
01:50:26,849 --> 01:50:33,590
of that page where the user is to be

1466
01:50:29,280 --> 01:50:36,239
entertained is it swaps at the side or

1467
01:50:33,590 --> 01:50:39,379
the page and so that you can see again

1468
01:50:36,239 --> 01:50:39,379
can't see it

1469
01:50:52,160 --> 01:51:06,570
so error management is is yet to be

1470
01:50:56,370 --> 01:51:09,960
improved this was a test for me but

1471
01:51:06,570 --> 01:51:12,030
there are so many ways around it in all

1472
01:51:09,960 --> 01:51:15,230
that you hide the web poke abs or

1473
01:51:12,030 --> 01:51:17,160
traffic I don't know if you know these

1474
01:51:15,230 --> 01:51:24,660
YouTube channel live

1475
01:51:17,160 --> 01:51:26,099
overflow some glands people teach

1476
01:51:24,660 --> 01:51:27,719
different things on their YouTube

1477
01:51:26,100 --> 01:51:29,910
channel it's it's quite good by the way

1478
01:51:27,719 --> 01:51:32,460
and one of the things they do is first

1479
01:51:29,910 --> 01:51:35,849
they pick because there's some some

1480
01:51:32,460 --> 01:51:39,300
companies that for advertising they have

1481
01:51:35,850 --> 01:51:44,640
pop-unders so instead of opening the

1482
01:51:39,300 --> 01:51:48,390
Pope app they use fails in browser so

1483
01:51:44,640 --> 01:51:50,489
you open the Pope up behind earner and

1484
01:51:48,390 --> 01:51:55,230
in the background I don't know what I go

1485
01:51:50,489 --> 01:51:58,320
but there it is and live overflow they

1486
01:51:55,230 --> 01:52:00,959
have several of these to download the

1487
01:51:58,320 --> 01:52:03,570
demo version reverse engineering and

1488
01:52:00,960 --> 01:52:10,800
they find what the trick is maybe open a

1489
01:52:03,570 --> 01:52:15,120
PDF and then closing it but this is

1490
01:52:10,800 --> 01:52:17,040
patch up by developers so I decided not

1491
01:52:15,120 --> 01:52:18,360
to use any of these techniques because

1492
01:52:17,040 --> 01:52:20,670
this is a technique that you develop

1493
01:52:18,360 --> 01:52:27,360
today and maybe tomorrow another one so

1494
01:52:20,670 --> 01:52:29,910
I did what I said because I use the tabs

1495
01:52:27,360 --> 01:52:33,030
cuz I found this was easy this is from

1496
01:52:29,910 --> 01:52:35,760
the wired which is well done in the UK

1497
01:52:33,030 --> 01:52:37,830
and you would click on a piece of news

1498
01:52:35,760 --> 01:52:40,469
and as you were reading it you see on

1499
01:52:37,830 --> 01:52:44,940
the top left side it is uploading this

1500
01:52:40,469 --> 01:52:46,710
dusting and as you move the mouse I say

1501
01:52:44,940 --> 01:52:47,460
well I'm gonna click what was recessed

1502
01:52:46,710 --> 01:52:51,429
here

1503
01:52:47,460 --> 01:52:56,170
uploading and if you also got lots of

1504
01:52:51,429 --> 01:53:02,380
Tubbs because I divided it there so that

1505
01:52:56,170 --> 01:53:05,699
I see in what it has been done but if

1506
01:53:02,380 --> 01:53:08,469
there are a few more times

1507
01:53:05,699 --> 01:53:12,219
odds are that one of those times is

1508
01:53:08,469 --> 01:53:15,999
digging into their contact list quite

1509
01:53:12,219 --> 01:53:20,139
high live probable and that's all I

1510
01:53:15,999 --> 01:53:21,749
wanted to say and conclusions well a few

1511
01:53:20,139 --> 01:53:26,139
more that could be added to but just

1512
01:53:21,749 --> 01:53:28,389
compression is the is the devil don't

1513
01:53:26,139 --> 01:53:31,630
use it exploiting a site channel is

1514
01:53:28,389 --> 01:53:33,939
time-consuming got it a stream so see

1515
01:53:31,630 --> 01:53:36,189
there's there are many requests and in

1516
01:53:33,939 --> 01:53:38,499
order to get a number phone number like

1517
01:53:36,189 --> 01:53:41,800
this it's taken several minutes right

1518
01:53:38,499 --> 01:53:44,559
three minutes or so so in other to get

1519
01:53:41,800 --> 01:53:49,059
lots of data it would take hours but it

1520
01:53:44,559 --> 01:53:51,369
works it does it is a slow but still it

1521
01:53:49,059 --> 01:53:55,329
works and if someone wants to dig data

1522
01:53:51,369 --> 01:53:57,639
out through site channeling yeah sure

1523
01:53:55,329 --> 01:53:59,499
Wi-Fi with them for 20 minutes have an

1524
01:53:57,639 --> 01:54:06,130
hour I know and they can get lots of

1525
01:53:59,499 --> 01:54:09,010
information out right third one avoid

1526
01:54:06,130 --> 01:54:11,170
site channels avoid and such as pretty

1527
01:54:09,010 --> 01:54:15,519
difficult actually when I reported this

1528
01:54:11,170 --> 01:54:17,499
fate a mistake or back and the people

1529
01:54:15,519 --> 01:54:19,179
who were supposed to fix it they would

1530
01:54:17,499 --> 01:54:21,159
say what what's your suggestion to fix

1531
01:54:19,179 --> 01:54:24,039
it because there's a pretty complicated

1532
01:54:21,159 --> 01:54:26,499
isn't it and then now I solve this for

1533
01:54:24,039 --> 01:54:29,110
you and they would say what well would I

1534
01:54:26,499 --> 01:54:35,860
run demise the number of images it is

1535
01:54:29,110 --> 01:54:42,429
big mess then they did was treated as I

1536
01:54:35,860 --> 01:54:45,039
CL see as RF actually the force 12 some

1537
01:54:42,429 --> 01:54:48,239
some of them didn't fix it but Facebook

1538
01:54:45,039 --> 01:54:50,630
Dropbox what they did was at an anti

1539
01:54:48,239 --> 01:54:55,040
CSRF token

1540
01:54:50,630 --> 01:54:58,970
Dropbox I didn't also as anti CSRF token

1541
01:54:55,040 --> 01:55:01,100
and so when having access to the forum

1542
01:54:58,970 --> 01:55:03,440
that without coming from the forum

1543
01:55:01,100 --> 01:55:08,780
itself that would be a poke up and they

1544
01:55:03,440 --> 01:55:10,610
would say are you sure or and so they

1545
01:55:08,780 --> 01:55:13,849
wouldn't click and there would not be as

1546
01:55:10,610 --> 01:55:16,190
such and no images so for efficiency I

1547
01:55:13,850 --> 01:55:18,320
think it was worth it and more with it

1548
01:55:16,190 --> 01:55:23,809
than token and it was another solution

1549
01:55:18,320 --> 01:55:27,469
that I found was good enough but I feel

1550
01:55:23,810 --> 01:55:31,670
this attacks that are based on a browser

1551
01:55:27,470 --> 01:55:34,010
you need to have a token so that there

1552
01:55:31,670 --> 01:55:37,190
are no requests on that searcher on that

1553
01:55:34,010 --> 01:55:40,010
browser and that's been all thank you

1554
01:55:37,190 --> 01:55:48,969
for your attention that's my email

1555
01:55:40,010 --> 01:55:48,970
account I would be happy to teach reply

1556
01:55:49,540 --> 01:55:53,140
questions everything's clear

1557
01:55:51,530 --> 01:56:02,670
so thank you very much to all of you

1558
01:55:53,140 --> 01:56:04,619
[Applause]

1559
01:56:02,670 --> 01:56:04,950
[Music]

1560
01:56:04,619 --> 01:56:10,858
you

1561
01:56:04,950 --> 01:56:10,858
[Music]

