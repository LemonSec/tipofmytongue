1
00:00:01,910 --> 00:00:04,979
[Music]

2
00:00:11,599 --> 00:00:15,080
good morning everybody

3
00:00:15,949 --> 00:00:24,150
first of all I'd like to say that I'm

4
00:00:19,260 --> 00:00:25,769
very proud to be here today as kakapo

5
00:00:24,150 --> 00:00:30,479
was saying I'm here for the sixth year

6
00:00:25,769 --> 00:00:34,349
at cyber camp we've been going around

7
00:00:30,480 --> 00:00:36,149
several different cities and it's great

8
00:00:34,350 --> 00:00:39,890
to be here and it's great to know that

9
00:00:36,149 --> 00:00:39,890
they wanted me to be here with them

10
00:00:41,540 --> 00:00:49,289
today's workshop is about VLE and in

11
00:00:46,860 --> 00:00:52,110
this workshop we're going to see what we

12
00:00:49,289 --> 00:00:54,690
can do with these kinds of devices how

13
00:00:52,110 --> 00:00:59,280
can we can do sniffing with ble devices

14
00:00:54,690 --> 00:01:01,949
and how we can hack should we say and

15
00:00:59,280 --> 00:01:04,320
get into the safety elements of these

16
00:01:01,949 --> 00:01:08,820
devices and a different scenarios that

17
00:01:04,319 --> 00:01:11,279
we can come across in this field here's

18
00:01:08,820 --> 00:01:14,970
a brief presentation of Who I am

19
00:01:11,280 --> 00:01:19,229
I work in telefónica I'm the director of

20
00:01:14,970 --> 00:01:22,650
the universe of the uem in the debrief

21
00:01:19,229 --> 00:01:26,369
IT security and there's a few other

22
00:01:22,650 --> 00:01:28,380
little bits and pieces there so what are

23
00:01:26,369 --> 00:01:30,090
we going to see here today in this

24
00:01:28,380 --> 00:01:35,939
workshop we're going to start with a

25
00:01:30,090 --> 00:01:39,560
little bit of a theory about ble I'm

26
00:01:35,939 --> 00:01:39,559
going to ask you a couple of questions

27
00:01:41,060 --> 00:01:47,490
have you ever taken two to see what the

28
00:01:45,299 --> 00:01:51,509
security is or you've worked with a ble

29
00:01:47,490 --> 00:01:54,360
device how many of you okay so you're

30
00:01:51,509 --> 00:01:56,210
going to learn a lot today because if

31
00:01:54,360 --> 00:01:58,710
most of you have not worked with them

32
00:01:56,210 --> 00:02:00,479
then that's a good thing because

33
00:01:58,710 --> 00:02:04,559
everything that you'll see today will be

34
00:02:00,479 --> 00:02:08,330
something new for you how many of you

35
00:02:04,560 --> 00:02:11,330
got have got two devices that use ble

36
00:02:08,330 --> 00:02:15,110
I think pretty much all of you should be

37
00:02:11,330 --> 00:02:19,100
raising your hands because your mobile

38
00:02:15,110 --> 00:02:24,320
devices your smartphones use ble perhaps

39
00:02:19,100 --> 00:02:26,390
you have a watch or we have locators

40
00:02:24,320 --> 00:02:30,010
such as the one I have here you've got

41
00:02:26,390 --> 00:02:33,260
things around you that use ble these

42
00:02:30,010 --> 00:02:36,890
intelligent bracelets that you can have

43
00:02:33,260 --> 00:02:38,690
and this is a good thing about ble and

44
00:02:36,890 --> 00:02:42,640
doing this workshop is that it's

45
00:02:38,690 --> 00:02:46,310
something that's very familiar to you

46
00:02:42,640 --> 00:02:48,350
so this is a little bit of the theory

47
00:02:46,310 --> 00:02:52,100
then we'll go in the first part into

48
00:02:48,350 --> 00:02:53,720
sniffing and I'd like you to be able to

49
00:02:52,100 --> 00:02:57,680
use what we've learned today when you

50
00:02:53,720 --> 00:03:03,770
get home it's about how can I sniff into

51
00:02:57,680 --> 00:03:07,190
that to traffic on the network we get to

52
00:03:03,770 --> 00:03:09,680
the Y sock and you've got a network

53
00:03:07,190 --> 00:03:13,160
cable and you catch a traffic it's all

54
00:03:09,680 --> 00:03:17,739
about that basically you go to the ICP

55
00:03:13,160 --> 00:03:20,600
and you see you see a PC AP packet and

56
00:03:17,739 --> 00:03:22,190
doing this in bluetooth at the beginning

57
00:03:20,600 --> 00:03:24,680
people say oh I don't know about this

58
00:03:22,190 --> 00:03:26,300
but - we'll have a look into the

59
00:03:24,680 --> 00:03:31,670
different points of view of sniffing and

60
00:03:26,300 --> 00:03:34,010
then we'll do an analysis of the Tk we

61
00:03:31,670 --> 00:03:36,829
will capture the traffic as if it were

62
00:03:34,010 --> 00:03:40,519
on a network but using ble technology

63
00:03:36,830 --> 00:03:42,020
and we will analyze that traffic so

64
00:03:40,520 --> 00:03:44,180
we're going to simulate a number of

65
00:03:42,020 --> 00:03:47,090
devices using these plaques that I have

66
00:03:44,180 --> 00:03:50,530
here we'll do a number of things and

67
00:03:47,090 --> 00:03:52,910
we'll work using these - these plaques

68
00:03:50,530 --> 00:03:58,250
first of all will work with a few

69
00:03:52,910 --> 00:04:01,430
attacks we will attack these devices and

70
00:03:58,250 --> 00:04:06,560
we'll do a using a technique which is

71
00:04:01,430 --> 00:04:09,550
like jamming and hijacking I can some

72
00:04:06,560 --> 00:04:15,310
see some of you smiling so that's good

73
00:04:09,550 --> 00:04:15,310
and we'll also do encrypted attacks

74
00:04:15,490 --> 00:04:22,610
so in these devices that connect to

75
00:04:18,980 --> 00:04:26,390
iPods or your earphones or with your

76
00:04:22,610 --> 00:04:28,730
watch or your mobile phone then is that

77
00:04:26,390 --> 00:04:31,550
encrypted or is it not sometimes it is

78
00:04:28,730 --> 00:04:33,110
sometimes it isn't so how is it

79
00:04:31,550 --> 00:04:35,600
encrypted and we'll have a look at those

80
00:04:33,110 --> 00:04:38,900
cases and we'll have a look at what you

81
00:04:35,600 --> 00:04:44,210
can do in order to attack when there is

82
00:04:38,900 --> 00:04:50,320
encryption we'll also talk a little bit

83
00:04:44,210 --> 00:04:54,380
about spoofing spoofing on devices Oh

84
00:04:50,320 --> 00:04:55,730
what you can see with that traffic

85
00:04:54,380 --> 00:05:01,940
that's going through the air should we

86
00:04:55,730 --> 00:05:04,010
say can it be spoofed can it not it

87
00:05:01,940 --> 00:05:06,140
seems like we've got a lot of time but

88
00:05:04,010 --> 00:05:09,440
in actual fact we need to do several

89
00:05:06,140 --> 00:05:11,479
tests using physical devices and we'll

90
00:05:09,440 --> 00:05:15,100
probably come across a few failures as

91
00:05:11,480 --> 00:05:15,100
well so we're we better get on with it

92
00:05:16,990 --> 00:05:23,570
so before we begin what do we need and

93
00:05:20,750 --> 00:05:26,030
how can we do this at home it's being

94
00:05:23,570 --> 00:05:27,920
streamed you can have a look at this

95
00:05:26,030 --> 00:05:29,750
when you get home and see what we've

96
00:05:27,920 --> 00:05:32,990
used in this workshop and repeat it at

97
00:05:29,750 --> 00:05:37,520
home so what do you need in terms of

98
00:05:32,990 --> 00:05:39,500
hardware actually I've got three micro

99
00:05:37,520 --> 00:05:42,260
bit plaques it says two one here but

100
00:05:39,500 --> 00:05:45,320
I've got three they've got to display

101
00:05:42,260 --> 00:05:47,450
some sensors Bluetooth radio frequency

102
00:05:45,320 --> 00:05:52,190
and they've got lots of different things

103
00:05:47,450 --> 00:05:54,229
on these tiny little square pieces we're

104
00:05:52,190 --> 00:05:55,940
going to use a Bluetooth adapter as well

105
00:05:54,230 --> 00:06:01,250
a very standard one you might will have

106
00:05:55,940 --> 00:06:03,290
one at home and an Android device in

107
00:06:01,250 --> 00:06:06,920
this particular particular case it does

108
00:06:03,290 --> 00:06:10,610
need to be Android but it could be an

109
00:06:06,920 --> 00:06:14,090
iOS in another given case in terms of

110
00:06:10,610 --> 00:06:17,450
software we're going to analyze the

111
00:06:14,090 --> 00:06:19,880
traffic so we need to be able to see the

112
00:06:17,450 --> 00:06:20,810
sections that we're capturing will use

113
00:06:19,880 --> 00:06:25,700
Wireshark

114
00:06:20,810 --> 00:06:27,430
HCI - this are available on any lineups

115
00:06:25,700 --> 00:06:32,150
you don't need to install it

116
00:06:27,430 --> 00:06:33,680
we do need to install btle Jack we need

117
00:06:32,150 --> 00:06:36,219
that in order to be able to do this

118
00:06:33,680 --> 00:06:39,770
sniffing and to do a number of attacks

119
00:06:36,220 --> 00:06:41,570
it's available on github and you can

120
00:06:39,770 --> 00:06:47,690
download it and install it right onto

121
00:06:41,570 --> 00:06:50,480
your plaques we've also got better cab

122
00:06:47,690 --> 00:06:52,670
we can use a we've got got tool we've

123
00:06:50,480 --> 00:06:54,980
got NRF connect I'm sure many of you

124
00:06:52,670 --> 00:06:59,240
will like that because you can download

125
00:06:54,980 --> 00:07:01,850
that download that onto your mobile you

126
00:06:59,240 --> 00:07:03,800
can scan and send the commands from your

127
00:07:01,850 --> 00:07:07,010
mobile because and that people like it

128
00:07:03,800 --> 00:07:10,280
because it's very easy to use and then

129
00:07:07,010 --> 00:07:13,670
i've got my own tool which is a home pwn

130
00:07:10,280 --> 00:07:17,989
we'll have a look at that later so let's

131
00:07:13,670 --> 00:07:20,150
go to the boring part it's 10 past 10 so

132
00:07:17,990 --> 00:07:21,200
to get you a bit woken up this morning

133
00:07:20,150 --> 00:07:30,830
let's have a look a little bit of the

134
00:07:21,200 --> 00:07:32,270
theory so Bluetooth Low Energy I'm going

135
00:07:30,830 --> 00:07:35,810
to move across here so that the camera

136
00:07:32,270 --> 00:07:37,880
wakes up a little bit as well as are

137
00:07:35,810 --> 00:07:39,560
saying it's a wireless protocol

138
00:07:37,880 --> 00:07:42,650
Bluetooth Low Energy it allows us to

139
00:07:39,560 --> 00:07:46,250
connect to devices at very low

140
00:07:42,650 --> 00:07:49,760
consumption level and the transfer level

141
00:07:46,250 --> 00:07:53,080
is lower much lower than with Bluetooth

142
00:07:49,760 --> 00:07:55,780
you can connect to a smartphone or other

143
00:07:53,080 --> 00:07:59,620
devices or something that has limited

144
00:07:55,780 --> 00:08:02,719
material so that we use less battery

145
00:07:59,620 --> 00:08:07,730
this protocol was created for that

146
00:08:02,720 --> 00:08:11,300
purpose there's communication on the

147
00:08:07,730 --> 00:08:13,430
frequency bad which is 2.4 gigahertz are

148
00:08:11,300 --> 00:08:16,820
you familiar with that yes it's the one

149
00:08:13,430 --> 00:08:21,650
that you have on your Wi-Fi it's 2.4 2.5

150
00:08:16,820 --> 00:08:23,360
the Wi-Fi usually this is important

151
00:08:21,650 --> 00:08:27,530
because we'll see this in the workshop

152
00:08:23,360 --> 00:08:30,200
I'm going to use 40 channels just 40

153
00:08:27,530 --> 00:08:32,620
radio frequency channels these are 2

154
00:08:30,200 --> 00:08:32,620
megahertz

155
00:08:33,570 --> 00:08:44,970
and out of those 43 of these are eight

156
00:08:37,500 --> 00:08:46,589
DV this basically means that so that

157
00:08:44,970 --> 00:08:54,060
your devices say to everybody else here

158
00:08:46,589 --> 00:08:57,959
I am basically your device's discovery

159
00:08:54,060 --> 00:09:00,449
show they're using these channels when

160
00:08:57,959 --> 00:09:04,469
somebody wants to connect to your device

161
00:09:00,449 --> 00:09:08,519
using ble where there is a request for a

162
00:09:04,470 --> 00:09:10,079
connection to one of those channels so a

163
00:09:08,519 --> 00:09:11,790
little bit later we'll see that

164
00:09:10,079 --> 00:09:13,258
somewhere three of these we'll be able

165
00:09:11,790 --> 00:09:16,740
to cover all the channels we won't miss

166
00:09:13,259 --> 00:09:19,259
any connection if we miss one of them

167
00:09:16,740 --> 00:09:21,149
then the device will have to go through

168
00:09:19,259 --> 00:09:26,880
these two three different channels until

169
00:09:21,149 --> 00:09:32,339
it finds a connection pattern we have a

170
00:09:26,880 --> 00:09:36,810
66% connection and as long as we're in

171
00:09:32,339 --> 00:09:39,949
within the radius of the the pattern

172
00:09:36,810 --> 00:09:39,949
then we'll be able to make a connection

173
00:09:40,519 --> 00:09:48,920
so this is all about being here and all

174
00:09:44,639 --> 00:09:51,899
the rest on was 37 channels for data and

175
00:09:48,920 --> 00:09:56,610
here's a bit of a diagram to make that a

176
00:09:51,899 --> 00:09:58,529
bit more clear and also in this one so

177
00:09:56,610 --> 00:10:02,100
you have the frequencies down at the

178
00:09:58,529 --> 00:10:07,560
bottom and the channel number they're

179
00:10:02,100 --> 00:10:12,779
not in order and then it goes from twos

180
00:10:07,560 --> 00:10:14,670
to two's in frequency in megahertz they

181
00:10:12,779 --> 00:10:18,180
go one two three four and then right up

182
00:10:14,670 --> 00:10:20,699
to the 38 they're not in order there's a

183
00:10:18,180 --> 00:10:27,000
difference between the 37 and 38 they're

184
00:10:20,699 --> 00:10:32,069
not together so this is what we've got

185
00:10:27,000 --> 00:10:33,720
to play with in bluetooth this is where

186
00:10:32,069 --> 00:10:36,870
your device is your mobile with your

187
00:10:33,720 --> 00:10:38,519
watch your lutein your mobile with your

188
00:10:36,870 --> 00:10:43,019
earphones everything that's got

189
00:10:38,519 --> 00:10:46,120
Bluetooth this is and ble they all work

190
00:10:43,019 --> 00:10:51,140
within this different space

191
00:10:46,120 --> 00:10:54,580
and the request for connection are used

192
00:10:51,140 --> 00:11:00,530
through the channels that I mentioned so

193
00:10:54,580 --> 00:11:03,070
how do we hop between channels then so

194
00:11:00,530 --> 00:11:06,530
this is a little bit more complex

195
00:11:03,070 --> 00:11:08,060
we've got channels to capture those

196
00:11:06,530 --> 00:11:10,280
connections I'm here and I want to be

197
00:11:08,060 --> 00:11:13,670
with you so how do we hop between

198
00:11:10,280 --> 00:11:15,050
channels the data goes through the

199
00:11:13,670 --> 00:11:16,849
channels they don't go through the same

200
00:11:15,050 --> 00:11:20,300
channels all the time there are

201
00:11:16,850 --> 00:11:22,820
different hops you are sent a number of

202
00:11:20,300 --> 00:11:26,150
bites through channel 5 and then we go

203
00:11:22,820 --> 00:11:28,520
to 12 and then we go to 19 and 16 and

204
00:11:26,150 --> 00:11:32,530
there are changes of channels that's how

205
00:11:28,520 --> 00:11:32,530
it works the protocol works in this way

206
00:11:32,740 --> 00:11:41,870
down there it says there is a hop

207
00:11:36,190 --> 00:11:43,370
interval pattern so how many

208
00:11:41,870 --> 00:11:46,640
milliseconds we're going to change

209
00:11:43,370 --> 00:11:48,290
channel this is remembered in the device

210
00:11:46,640 --> 00:11:51,260
and then there's an increment in the hop

211
00:11:48,290 --> 00:11:55,550
as well to which channel we're going to

212
00:11:51,260 --> 00:11:59,450
go if it's an increase of 7 then we'll

213
00:11:55,550 --> 00:12:01,670
change it to a different channel so here

214
00:11:59,450 --> 00:12:05,930
you have a an image to be able to see it

215
00:12:01,670 --> 00:12:08,930
a little bit more clearly so here we

216
00:12:05,930 --> 00:12:11,780
have the frequency and the time we can

217
00:12:08,930 --> 00:12:15,140
start in one channel but it can't see

218
00:12:11,780 --> 00:12:18,260
the number here here it's in the orange

219
00:12:15,140 --> 00:12:21,500
value on the left and then we go to a

220
00:12:18,260 --> 00:12:24,380
different channel and in the hop

221
00:12:21,500 --> 00:12:27,290
interval with other and the receptor and

222
00:12:24,380 --> 00:12:29,810
the emitter change channel and they send

223
00:12:27,290 --> 00:12:32,300
a data through the different channels

224
00:12:29,810 --> 00:12:36,010
that's how that's how we do the the the

225
00:12:32,300 --> 00:12:38,839
channels hop and this is a channel map

226
00:12:36,010 --> 00:12:42,530
this indicates in a connection the

227
00:12:38,840 --> 00:12:47,090
channels that we're going to be using so

228
00:12:42,530 --> 00:12:49,240
we have the hot interval that's the time

229
00:12:47,090 --> 00:12:52,070
I'm going to be on a channel the

230
00:12:49,240 --> 00:12:56,570
increment of the hop and that's where

231
00:12:52,070 --> 00:12:58,640
I'm going to and we have the channel map

232
00:12:56,570 --> 00:13:02,600
and I can see the flow of that

233
00:12:58,640 --> 00:13:05,390
connection so it's a connection between

234
00:13:02,600 --> 00:13:08,000
device a and device B and the pattern

235
00:13:05,390 --> 00:13:11,439
that I'm going to use and the algorithm

236
00:13:08,000 --> 00:13:14,090
for the channel selection is also known

237
00:13:11,440 --> 00:13:16,370
this is essential for sniffing we

238
00:13:14,090 --> 00:13:18,140
wouldn't be able to do sniffing if we

239
00:13:16,370 --> 00:13:22,790
didn't know to which channels we would

240
00:13:18,140 --> 00:13:28,189
be hopping to so that's the next

241
00:13:22,790 --> 00:13:31,300
question the hopping algorithms where

242
00:13:28,190 --> 00:13:38,630
there are two channel 1 and channel 2

243
00:13:31,300 --> 00:13:44,689
selecting so in ble we have a different

244
00:13:38,630 --> 00:13:50,000
version for point X and 5 this is goes

245
00:13:44,690 --> 00:13:53,000
along with channel 1 and in the revision

246
00:13:50,000 --> 00:13:56,540
of the algorithm there was a new version

247
00:13:53,000 --> 00:13:59,060
so we have different options here and

248
00:13:56,540 --> 00:14:02,839
this is quite interesting so we have

249
00:13:59,060 --> 00:14:05,630
algorithm 1 with channel selection I can

250
00:14:02,840 --> 00:14:07,970
copy the hops because I know this

251
00:14:05,630 --> 00:14:10,460
algorithm I have the channel and the

252
00:14:07,970 --> 00:14:14,330
increase in the hop and that gives me

253
00:14:10,460 --> 00:14:17,870
emoji 37 because there are 37 channels

254
00:14:14,330 --> 00:14:21,890
of data I can't go to 38 39

255
00:14:17,870 --> 00:14:27,950
I have to to go to this them because

256
00:14:21,890 --> 00:14:30,319
those are the advertisement channels so

257
00:14:27,950 --> 00:14:34,810
what are the roles in this ble game

258
00:14:30,320 --> 00:14:37,160
there are several concepts for the

259
00:14:34,810 --> 00:14:39,560
theoretical side this is very important

260
00:14:37,160 --> 00:14:42,920
and we have to cover this part as well

261
00:14:39,560 --> 00:14:46,910
as the practical side so broadcasters or

262
00:14:42,920 --> 00:14:51,170
in other words beacons they're used to

263
00:14:46,910 --> 00:14:53,000
send advertisements when a device is

264
00:14:51,170 --> 00:14:55,219
visible when it's listening to those

265
00:14:53,000 --> 00:14:57,950
channels and another device wants to

266
00:14:55,220 --> 00:15:00,110
connect it sends a message saying I want

267
00:14:57,950 --> 00:15:04,030
to connect using one of those three

268
00:15:00,110 --> 00:15:09,040
channels so the broadcast ray is

269
00:15:04,030 --> 00:15:16,689
there and sending those requests then we

270
00:15:09,040 --> 00:15:18,819
have the slave and master roles the

271
00:15:16,690 --> 00:15:20,350
slave role is the one at other

272
00:15:18,820 --> 00:15:22,660
connections it's waiting there for

273
00:15:20,350 --> 00:15:23,530
somebody to ask for a connection and

274
00:15:22,660 --> 00:15:27,689
accept it

275
00:15:23,530 --> 00:15:31,350
the master role does active scanning and

276
00:15:27,690 --> 00:15:35,410
connects the packet against the slave

277
00:15:31,350 --> 00:15:37,810
and then we have the observer the

278
00:15:35,410 --> 00:15:40,480
observer is listening to the three

279
00:15:37,810 --> 00:15:48,939
advertisement channels to capture that

280
00:15:40,480 --> 00:15:52,960
request for connection so we have these

281
00:15:48,940 --> 00:15:57,460
slave and it identifies with this scheme

282
00:15:52,960 --> 00:16:00,760
that you can see on here this diagram we

283
00:15:57,460 --> 00:16:04,110
can see what happens if we receive a

284
00:16:00,760 --> 00:16:08,410
connection or a quest for connection I

285
00:16:04,110 --> 00:16:12,900
move on to a connection status and then

286
00:16:08,410 --> 00:16:16,360
I listen to here to see what I can hear

287
00:16:12,900 --> 00:16:18,819
so in the master role which initiates

288
00:16:16,360 --> 00:16:24,220
the connect the connections this is what

289
00:16:18,820 --> 00:16:25,839
we have here on this flow diagram so

290
00:16:24,220 --> 00:16:30,880
we're finishing with a faerie side now

291
00:16:25,839 --> 00:16:35,350
don't worry but it does get a little bit

292
00:16:30,880 --> 00:16:38,860
more complicated this workshop I think

293
00:16:35,350 --> 00:16:41,080
you probably enjoy it but when you see

294
00:16:38,860 --> 00:16:43,180
the part of many many bytes so it does

295
00:16:41,080 --> 00:16:47,380
look a little bit more complex I'm sure

296
00:16:43,180 --> 00:16:48,969
we'll manage so here at the top on the

297
00:16:47,380 --> 00:16:51,990
screen you can see the Bluetooth

298
00:16:48,970 --> 00:16:51,990
Bluetooth layer

299
00:16:57,570 --> 00:17:03,779
at the beginning we have a preamble and

300
00:17:00,540 --> 00:17:05,339
we can see a connection with the layer

301
00:17:03,779 --> 00:17:09,020
for the internet so that's the part of

302
00:17:05,339 --> 00:17:09,020
the the back that you can see at the top

303
00:17:11,540 --> 00:17:17,639
so there is a superior protocol that

304
00:17:15,089 --> 00:17:21,089
we've got the Bluetooth layer another

305
00:17:17,640 --> 00:17:22,290
layer and the ATT of the Bluetooth

306
00:17:21,089 --> 00:17:26,339
protocol is the one that we're

307
00:17:22,290 --> 00:17:29,220
interested in we'll see the values that

308
00:17:26,339 --> 00:17:32,220
are being sent and the devices will see

309
00:17:29,220 --> 00:17:34,169
in lower layers and we'll also see the

310
00:17:32,220 --> 00:17:38,090
characteristics that we're going that

311
00:17:34,169 --> 00:17:38,090
are being sent we'll see that later on

312
00:17:38,299 --> 00:17:43,740
we need to know what is being sent and

313
00:17:41,280 --> 00:17:47,129
how it's been sent I don't know if

314
00:17:43,740 --> 00:17:51,110
you're already connected with this so

315
00:17:47,130 --> 00:17:51,110
now let's move on to the stiffing part

316
00:17:53,960 --> 00:18:01,049
we can look at this in two different

317
00:17:57,510 --> 00:18:02,580
ways from a an android mobile Android

318
00:18:01,049 --> 00:18:06,750
because it's simpler in this per case

319
00:18:02,580 --> 00:18:09,210
and if we have an Android mobile we have

320
00:18:06,750 --> 00:18:11,780
certain characteristics that can go

321
00:18:09,210 --> 00:18:15,840
through the Bluetooth from your device

322
00:18:11,780 --> 00:18:17,700
and if you want to investigate or look

323
00:18:15,840 --> 00:18:19,770
into a different types of tools or

324
00:18:17,700 --> 00:18:21,540
device to which you're going to connect

325
00:18:19,770 --> 00:18:23,700
through Bluetooth and know what packets

326
00:18:21,540 --> 00:18:25,799
are being sent from the mobile to the

327
00:18:23,700 --> 00:18:28,290
device this is the characteristic that

328
00:18:25,799 --> 00:18:32,668
you need in order to identify it and

329
00:18:28,290 --> 00:18:35,399
pick it up the other way of looking at

330
00:18:32,669 --> 00:18:38,010
it is is what is the medium that is used

331
00:18:35,400 --> 00:18:43,799
for transmission yeah you're right it's

332
00:18:38,010 --> 00:18:48,120
the air should we say this is the means

333
00:18:43,799 --> 00:18:52,230
of transmission the air what can the air

334
00:18:48,120 --> 00:18:56,189
capture and who can capture that anybody

335
00:18:52,230 --> 00:18:59,309
can over Wi-Fi anybody anything can

336
00:18:56,190 --> 00:19:02,960
capture that traffic you might not be

337
00:18:59,309 --> 00:19:02,960
able to see it but you can't capture it

338
00:19:03,740 --> 00:19:08,190
if we're in this room for example we can

339
00:19:06,900 --> 00:19:11,160
catch about

340
00:19:08,190 --> 00:19:12,480
so we're going to use hardware the

341
00:19:11,160 --> 00:19:14,160
plaques that was showing you before in

342
00:19:12,480 --> 00:19:16,800
order to capture that traffic that is

343
00:19:14,160 --> 00:19:19,580
going through the air so through these

344
00:19:16,800 --> 00:19:22,770
are the two focuses so if I have the

345
00:19:19,580 --> 00:19:24,899
device and something like this it's just

346
00:19:22,770 --> 00:19:27,650
connected through ble and my mobile

347
00:19:24,900 --> 00:19:29,910
mobile in the app I want to see how they

348
00:19:27,650 --> 00:19:33,770
connect and the commands that are being

349
00:19:29,910 --> 00:19:37,320
sent through so that I get the alert

350
00:19:33,770 --> 00:19:40,620
then I've got to use the application to

351
00:19:37,320 --> 00:19:42,929
see if it's operative and record all the

352
00:19:40,620 --> 00:19:47,219
Bluetooth connections and then I can

353
00:19:42,930 --> 00:19:48,630
apply that and analyze it but if I

354
00:19:47,220 --> 00:19:50,280
didn't have that application I would

355
00:19:48,630 --> 00:19:52,740
like to know how this is communicating

356
00:19:50,280 --> 00:19:55,290
then I have to sniff the traffic in raw

357
00:19:52,740 --> 00:20:01,500
and then I can find either encrypted or

358
00:19:55,290 --> 00:20:04,649
decrypted traffic so um case a and just

359
00:20:01,500 --> 00:20:08,400
to summarize we install the app on

360
00:20:04,650 --> 00:20:11,370
Android we buy an object locator which

361
00:20:08,400 --> 00:20:15,060
comes with an application and that keeps

362
00:20:11,370 --> 00:20:19,110
sending different communications to the

363
00:20:15,060 --> 00:20:22,790
device then we have to activate and

364
00:20:19,110 --> 00:20:27,449
enable the Bluetooth HCI snoop lock and

365
00:20:22,790 --> 00:20:29,850
we configure it so everything we can

366
00:20:27,450 --> 00:20:32,490
even say everything the device sends

367
00:20:29,850 --> 00:20:34,409
through bluetooth you can store in this

368
00:20:32,490 --> 00:20:37,290
file and where is this going to be

369
00:20:34,410 --> 00:20:41,100
stored in the internal memory it depends

370
00:20:37,290 --> 00:20:43,590
on what you have really now on this

371
00:20:41,100 --> 00:20:47,639
device for example it is being stored on

372
00:20:43,590 --> 00:20:52,080
Android data and the name ends with

373
00:20:47,640 --> 00:20:56,190
snoop dot log even if it's a dot log

374
00:20:52,080 --> 00:20:59,070
this is not a text file and you take

375
00:20:56,190 --> 00:21:01,800
that from your device you move it on to

376
00:20:59,070 --> 00:21:03,540
your machine and you rename it and then

377
00:21:01,800 --> 00:21:05,970
you open it and that's where you see

378
00:21:03,540 --> 00:21:08,070
that all the communications between you

379
00:21:05,970 --> 00:21:12,510
mobile application and the device has

380
00:21:08,070 --> 00:21:17,340
been sniffed and you didn't have an

381
00:21:12,510 --> 00:21:19,730
encrypted layer I'm going to show you a

382
00:21:17,340 --> 00:21:19,730
little example

383
00:21:22,660 --> 00:21:28,030
so you can see where we can find this

384
00:21:44,140 --> 00:21:51,710
episode I'll also send you it right I'm

385
00:21:48,620 --> 00:22:00,189
going to show you the PC AP so you see

386
00:21:51,710 --> 00:22:00,190
an example and whilst this is loading

387
00:22:05,170 --> 00:22:07,860
right

388
00:22:13,559 --> 00:22:21,908
so this is an example of PC AP where

389
00:22:18,850 --> 00:22:24,789
we've sniffed traffic between an mobile

390
00:22:21,909 --> 00:22:28,350
application that is communicating

391
00:22:24,789 --> 00:22:32,350
through Bailey with any device obviously

392
00:22:28,350 --> 00:22:34,059
we have filters for this and as I was

393
00:22:32,350 --> 00:22:42,850
saying what we're really interested in

394
00:22:34,059 --> 00:22:44,980
is the protocol this one here if you

395
00:22:42,850 --> 00:22:46,389
look at it you can see the layers that's

396
00:22:44,980 --> 00:22:48,820
what we're interested in because that's

397
00:22:46,389 --> 00:22:53,110
where all the data is being sent so this

398
00:22:48,820 --> 00:22:56,500
is what will make a lock to open or an

399
00:22:53,110 --> 00:22:59,110
object to beep for example or the watch

400
00:22:56,500 --> 00:23:01,360
to do something for your earphones to

401
00:22:59,110 --> 00:23:04,120
put the volume up everything's been done

402
00:23:01,360 --> 00:23:07,889
through commands on this protocol but

403
00:23:04,120 --> 00:23:11,229
the same just as it happens with tcp/ip

404
00:23:07,889 --> 00:23:13,529
architecture we have a Bluetooth battery

405
00:23:11,230 --> 00:23:17,049
with different layers here a different

406
00:23:13,529 --> 00:23:18,610
stack Bluetooth stack and we will look

407
00:23:17,049 --> 00:23:22,450
into this in more detail when we start

408
00:23:18,610 --> 00:23:24,629
with the sniffing which is going to open

409
00:23:22,450 --> 00:23:24,629
this

410
00:23:29,420 --> 00:23:31,480
you

411
00:23:54,490 --> 00:24:16,250
just a second as I bet right so this is

412
00:24:13,460 --> 00:24:19,400
just to show you where you have to go

413
00:24:16,250 --> 00:24:22,640
and and that's mostly if you have

414
00:24:19,400 --> 00:24:26,870
Android you go to settings developer

415
00:24:22,640 --> 00:24:29,150
options and that's where you can see

416
00:24:26,870 --> 00:24:32,750
this that I'm showing here so you have

417
00:24:29,150 --> 00:24:36,740
that option you ticket and once you have

418
00:24:32,750 --> 00:24:40,550
it that device will be taking all the

419
00:24:36,740 --> 00:24:43,250
Bluetooth traffic onto a file and from

420
00:24:40,550 --> 00:24:44,960
that file you will then be able to play

421
00:24:43,250 --> 00:24:48,320
with all that information so it's just

422
00:24:44,960 --> 00:24:50,750
an example and I'm showing this one and

423
00:24:48,320 --> 00:24:52,760
so just remember that the format is

424
00:24:50,750 --> 00:24:55,910
going to be dot log you take it out of

425
00:24:52,760 --> 00:25:01,280
the Android you use PC ap and that's

426
00:24:55,910 --> 00:25:05,750
done and then you can look at it now

427
00:25:01,280 --> 00:25:10,940
let's continue this is very easy and

428
00:25:05,750 --> 00:25:18,280
this is mostly it now and the other

429
00:25:10,940 --> 00:25:22,430
approach let's say we done usually

430
00:25:18,280 --> 00:25:24,080
necessarily will have an attacker and we

431
00:25:22,430 --> 00:25:25,490
didn't necessarily know which commands

432
00:25:24,080 --> 00:25:28,580
are being sent from one site to the

433
00:25:25,490 --> 00:25:30,470
other so what we're going to use is them

434
00:25:28,580 --> 00:25:32,840
this kind of sniffer like the one I'm

435
00:25:30,470 --> 00:25:35,270
showing a little plate and this is going

436
00:25:32,840 --> 00:25:38,750
to start listening to everything that's

437
00:25:35,270 --> 00:25:40,850
going through the air so ideally we

438
00:25:38,750 --> 00:25:43,910
would have three plates like this one

439
00:25:40,850 --> 00:25:45,800
why because then you would have each

440
00:25:43,910 --> 00:25:50,090
plate for one of the advertisement

441
00:25:45,800 --> 00:25:52,610
channels 37 38 and 39 and why would we

442
00:25:50,090 --> 00:25:54,620
do that so that we can sniff all the

443
00:25:52,610 --> 00:25:56,030
connection packages know that there's a

444
00:25:54,620 --> 00:25:59,959
new connection and then follow it

445
00:25:56,030 --> 00:26:02,870
through the channel flow so for this

446
00:25:59,960 --> 00:26:04,539
we're going to use a tool called better

447
00:26:02,870 --> 00:26:10,129
jack

448
00:26:04,539 --> 00:26:12,950
BTL e jack and with this tool the - I

449
00:26:10,129 --> 00:26:14,899
option we're going to detect these two

450
00:26:12,950 --> 00:26:19,070
plates we're going to connect them

451
00:26:14,899 --> 00:26:21,918
through UBS at USB to the machine and

452
00:26:19,070 --> 00:26:23,389
then the microwave starts working in a

453
00:26:21,919 --> 00:26:25,580
different way so this is basically just

454
00:26:23,389 --> 00:26:28,609
adding a program so that it changed the

455
00:26:25,580 --> 00:26:31,820
way it functions so first of all we have

456
00:26:28,609 --> 00:26:35,349
mode 1 this is a new connection sniffing

457
00:26:31,820 --> 00:26:39,559
so we can tell the micro bit to sniff

458
00:26:35,349 --> 00:26:42,649
only new connections for example and you

459
00:26:39,559 --> 00:26:44,809
start use that listening and on one

460
00:26:42,649 --> 00:26:47,418
channel if we only have one microbe it's

461
00:26:44,809 --> 00:26:50,329
going to have to hop until it captures

462
00:26:47,419 --> 00:26:52,639
it sniffs packet and we might lose some

463
00:26:50,329 --> 00:26:54,408
connection packages if we have to we're

464
00:26:52,639 --> 00:26:56,418
covering two out of three so we might

465
00:26:54,409 --> 00:26:58,820
slow loose connections but if we have

466
00:26:56,419 --> 00:27:02,419
three micro bit then we're not losing

467
00:26:58,820 --> 00:27:04,158
any connections and then we have the

468
00:27:02,419 --> 00:27:05,809
option of sniffing an existing

469
00:27:04,159 --> 00:27:09,649
connection because this connection might

470
00:27:05,809 --> 00:27:11,829
not be new data might have been being

471
00:27:09,649 --> 00:27:14,178
sent for awhile for example your

472
00:27:11,829 --> 00:27:17,089
earphones with your mobile device

473
00:27:14,179 --> 00:27:19,729
there's a constant flow of data and we

474
00:27:17,089 --> 00:27:21,049
might want to follow that connection so

475
00:27:19,729 --> 00:27:22,329
how do we do this because this

476
00:27:21,049 --> 00:27:26,450
connection has already been established

477
00:27:22,329 --> 00:27:29,389
we have the - s option and as you can

478
00:27:26,450 --> 00:27:33,019
see - C is for new connections and - S

479
00:27:29,389 --> 00:27:36,799
is for existing connections I will show

480
00:27:33,019 --> 00:27:38,479
this later on the demo part but what we

481
00:27:36,799 --> 00:27:39,918
will get is something like what you're

482
00:27:38,479 --> 00:27:41,570
seeing on the screen and this is a bit

483
00:27:39,919 --> 00:27:45,019
scary I know because you start seeing 0

484
00:27:41,570 --> 00:27:50,149
9 0 F and you think oh my goodness what

485
00:27:45,019 --> 00:27:53,859
is this well these are the bytes of the

486
00:27:50,149 --> 00:27:57,498
data part of everything that's being

487
00:27:53,859 --> 00:27:59,989
sent this is the in caption let's cut

488
00:27:57,499 --> 00:28:01,700
encapsulated part that we should that

489
00:27:59,989 --> 00:28:04,940
was shown they'll show it with the white

490
00:28:01,700 --> 00:28:07,579
Chuck white check is going to actually

491
00:28:04,940 --> 00:28:09,950
make this a bit more beautiful and make

492
00:28:07,579 --> 00:28:11,928
it make it more understandable to us but

493
00:28:09,950 --> 00:28:13,700
we can actually simplify this as well

494
00:28:11,929 --> 00:28:16,460
because there aren't that many bye

495
00:28:13,700 --> 00:28:20,269
that are being sent and we can identify

496
00:28:16,460 --> 00:28:22,029
how and what white shark is saying is

497
00:28:20,269 --> 00:28:24,440
reflected here now I know this is a bit

498
00:28:22,029 --> 00:28:28,539
crazier but it can be done now if you

499
00:28:24,440 --> 00:28:32,750
see there at the top you see that it is

500
00:28:28,539 --> 00:28:36,559
saying got connect wreck so the micro

501
00:28:32,750 --> 00:28:39,679
bit on these channels I have mentioned

502
00:28:36,559 --> 00:28:42,049
at checking whether this connection

503
00:28:39,679 --> 00:28:44,179
package and one of them says hey I found

504
00:28:42,049 --> 00:28:46,460
a connection package it identifies a

505
00:28:44,179 --> 00:28:49,340
connection package and it's telling you

506
00:28:46,460 --> 00:28:52,700
that it's traveling from this Mac to a

507
00:28:49,340 --> 00:28:56,779
different Mac now the my concept here is

508
00:28:52,700 --> 00:28:59,389
very similar to that of an a cart it's

509
00:28:56,779 --> 00:29:02,179
an ID that is created at randomly chose

510
00:28:59,389 --> 00:29:04,399
as it used to happen some years ago but

511
00:29:02,179 --> 00:29:06,470
in some other devices they're not

512
00:29:04,399 --> 00:29:09,830
created at random but they are unique

513
00:29:06,470 --> 00:29:12,320
rather then you also have access address

514
00:29:09,830 --> 00:29:14,689
which is well beatriz it is accessing

515
00:29:12,320 --> 00:29:17,779
from and when you have two connections

516
00:29:14,690 --> 00:29:20,059
between devices you have an access

517
00:29:17,779 --> 00:29:22,340
address to identify that connection it's

518
00:29:20,059 --> 00:29:25,100
exactly a sort of identifier then we

519
00:29:22,340 --> 00:29:27,408
have CRC to see that the data that we're

520
00:29:25,100 --> 00:29:32,240
sending and not corrupted you can see

521
00:29:27,409 --> 00:29:35,600
that we have a Hopf interval 24 and that

522
00:29:32,240 --> 00:29:38,029
means that every 30 milliseconds there's

523
00:29:35,600 --> 00:29:41,840
a change of channels which is hopping

524
00:29:38,029 --> 00:29:45,320
from one channel to another and then you

525
00:29:41,840 --> 00:29:49,240
can see a hop increment with a value of

526
00:29:45,320 --> 00:29:51,710
6 so that means that if we going or

527
00:29:49,240 --> 00:29:55,490
hopping channels every 6 so we're going

528
00:29:51,710 --> 00:29:58,820
to go from 1 to 7 then to 13 etc and

529
00:29:55,490 --> 00:30:00,710
with mod 37 we can go backwards or

530
00:29:58,820 --> 00:30:03,049
forwards depending on what we want and

531
00:30:00,710 --> 00:30:07,309
you can see here also the channel map

532
00:30:03,049 --> 00:30:12,168
and we have one fffff that means 5 bytes

533
00:30:07,309 --> 00:30:14,690
and if a channel is being used or can be

534
00:30:12,169 --> 00:30:16,730
used it will have it will make more

535
00:30:14,690 --> 00:30:19,159
noise than the others and so that

536
00:30:16,730 --> 00:30:24,139
channel is going to be set to 1 so every

537
00:30:19,159 --> 00:30:26,389
channel from 0 to 39 5 bytes right if

538
00:30:24,139 --> 00:30:27,059
you think about say every channel is a

539
00:30:26,389 --> 00:30:31,529
but

540
00:30:27,059 --> 00:30:33,330
is a bit so zero if you can use it if

541
00:30:31,529 --> 00:30:35,789
you cannot use that one if you can use

542
00:30:33,330 --> 00:30:37,649
it so you've got the map here and as you

543
00:30:35,789 --> 00:30:39,480
can see you can use most of them because

544
00:30:37,649 --> 00:30:41,389
there are many apps and that is going to

545
00:30:39,480 --> 00:30:44,340
change depending on the connection and

546
00:30:41,389 --> 00:30:46,289
then you have the timeouts as well so as

547
00:30:44,340 --> 00:30:48,149
you can see there's a lot of information

548
00:30:46,289 --> 00:30:53,429
here that you can check afterwards on

549
00:30:48,149 --> 00:30:56,279
white shark as well and how do we then

550
00:30:53,429 --> 00:31:00,509
put this on a file because everything

551
00:30:56,279 --> 00:31:03,029
that I have been explaining is shown on

552
00:31:00,509 --> 00:31:06,240
the screen but of course is way too many

553
00:31:03,029 --> 00:31:10,679
weirds by so how can we have this on a

554
00:31:06,240 --> 00:31:15,210
PC ap file what Chuck will allow us to

555
00:31:10,679 --> 00:31:18,360
do it with - X we will indicate the

556
00:31:15,210 --> 00:31:20,039
format with - oh we will say where we

557
00:31:18,360 --> 00:31:23,969
want the information to be stored and

558
00:31:20,039 --> 00:31:26,610
with - W we will have a pipe to connect

559
00:31:23,970 --> 00:31:28,679
the teletrac exit with what Chuck and

560
00:31:26,610 --> 00:31:31,889
this is very important by the way that

561
00:31:28,679 --> 00:31:36,210
and the former B minus X Nordic and that

562
00:31:31,889 --> 00:31:40,248
has to be like this so we're going to

563
00:31:36,210 --> 00:31:40,249
start with the practical part now

564
00:32:03,160 --> 00:32:18,430
I'm just going to connect this well

565
00:32:16,720 --> 00:32:20,290
let's see if we can see it this has a

566
00:32:18,430 --> 00:32:23,520
program as you can see this is

567
00:32:20,290 --> 00:32:26,200
simulating lock yeah can you see it yeah

568
00:32:23,520 --> 00:32:28,960
more or less I'm not very good at

569
00:32:26,200 --> 00:32:34,000
drawing but more or less you can you can

570
00:32:28,960 --> 00:32:36,700
see it right it's a padlock and this is

571
00:32:34,000 --> 00:32:38,440
actually simulating a smart lock so

572
00:32:36,700 --> 00:32:40,480
instead of doing it physically we're

573
00:32:38,440 --> 00:32:44,890
going to simulate it so we have a

574
00:32:40,480 --> 00:32:47,920
program with a display when it is locked

575
00:32:44,890 --> 00:32:51,850
we send commands that annal the key to

576
00:32:47,920 --> 00:32:53,920
open the padlock and it won't open so we

577
00:32:51,850 --> 00:32:59,260
need to know which command we have to

578
00:32:53,920 --> 00:33:02,400
send for the padlock to actually open so

579
00:32:59,260 --> 00:33:06,940
on a real smart lock this would open

580
00:33:02,400 --> 00:33:08,860
when we send a command to open from the

581
00:33:06,940 --> 00:33:10,510
mobile application but because we do not

582
00:33:08,860 --> 00:33:12,969
have the mobile application we want to

583
00:33:10,510 --> 00:33:15,780
know what is being sent in order to open

584
00:33:12,970 --> 00:33:20,170
it so we're going to sniff that traffic

585
00:33:15,780 --> 00:33:28,840
so we come to the development

586
00:33:20,170 --> 00:33:40,920
environment a bit later on can you see

587
00:33:28,840 --> 00:33:40,919
this how about now yeah okay

588
00:33:42,300 --> 00:33:48,090
so we're going to connect the plates

589
00:33:45,730 --> 00:33:48,090
first

590
00:33:57,000 --> 00:34:07,379
remember with - I what we do is to put

591
00:34:03,909 --> 00:34:10,450
the BTL Ajax program to that plate

592
00:34:07,379 --> 00:34:13,899
automatically as you can see they're

593
00:34:10,449 --> 00:34:17,879
flashing their this that's vibrating you

594
00:34:13,899 --> 00:34:22,270
can see the light flashing here and done

595
00:34:17,879 --> 00:34:28,089
now the next thing we can do is either

596
00:34:22,270 --> 00:34:30,310
wait for new connections and because we

597
00:34:28,089 --> 00:34:31,929
have detected or the application has

598
00:34:30,310 --> 00:34:35,409
detected that we have two connections

599
00:34:31,929 --> 00:34:37,329
and the wheels to have vbt aleejack it's

600
00:34:35,409 --> 00:34:39,099
telling us that it has detected to

601
00:34:37,329 --> 00:34:43,329
remember that if we have three micro

602
00:34:39,099 --> 00:34:49,960
bits we want to miss any package now

603
00:34:43,329 --> 00:34:51,879
with another application see as you can

604
00:34:49,960 --> 00:35:01,420
see we were already sniffing bluetooth

605
00:34:51,879 --> 00:35:11,890
packages so what we're going to do is to

606
00:35:01,420 --> 00:35:14,220
connect this and you can see it on the

607
00:35:11,890 --> 00:35:14,220
screen here

608
00:35:25,839 --> 00:35:29,480
there we go I hope you will not get to

609
00:35:28,490 --> 00:35:31,308
see all my messages and everything

610
00:35:29,480 --> 00:35:34,660
because because this could happen but

611
00:35:31,309 --> 00:35:40,359
well we'll see

612
00:35:34,660 --> 00:35:42,558
well this tool is called and RF Connect

613
00:35:40,359 --> 00:35:46,279
so I think one of the things that you

614
00:35:42,559 --> 00:35:48,530
will take from this workshop is this

615
00:35:46,280 --> 00:35:50,839
application which is quite cool and you

616
00:35:48,530 --> 00:35:53,660
can see that we can see all the devices

617
00:35:50,839 --> 00:35:56,660
that are within our range and on this

618
00:35:53,660 --> 00:35:58,848
room we're seeing quite a lot of devices

619
00:35:56,660 --> 00:36:04,490
which are close to us we have a filter

620
00:35:58,849 --> 00:36:05,630
here if we want to lower the amount of

621
00:36:04,490 --> 00:36:08,868
devices that we're seeing

622
00:36:05,630 --> 00:36:18,140
can you see eight seven out of fifty one

623
00:36:08,869 --> 00:36:24,230
at the top so we're going to start

624
00:36:18,140 --> 00:36:29,900
sniffing here again and when I tap on

625
00:36:24,230 --> 00:36:33,140
connect these stats sniffing data and if

626
00:36:29,900 --> 00:36:35,329
I send something then we will be able to

627
00:36:33,140 --> 00:36:37,328
see it here is this encrypted or not

628
00:36:35,329 --> 00:36:40,819
that's what we need to look into now

629
00:36:37,329 --> 00:36:43,520
because this is sending it to a PC AP

630
00:36:40,819 --> 00:36:45,829
file and we will see you straight away

631
00:36:43,520 --> 00:36:47,150
whether this is encrypted or not but you

632
00:36:45,829 --> 00:36:50,390
can see all the information that it's

633
00:36:47,150 --> 00:36:55,309
already giving us received connection

634
00:36:50,390 --> 00:36:58,098
package origin destination you can see

635
00:36:55,309 --> 00:37:01,460
the access address which is like the

636
00:36:58,099 --> 00:37:05,450
session identifier then the hop interval

637
00:37:01,460 --> 00:37:08,170
the hop increase and the channel map and

638
00:37:05,450 --> 00:37:10,490
this changes depending on the noise

639
00:37:08,170 --> 00:37:12,680
because the device might say well in

640
00:37:10,490 --> 00:37:14,000
these channels there's more noise so I'm

641
00:37:12,680 --> 00:37:15,589
not going to do anything here and I'm

642
00:37:14,000 --> 00:37:17,809
going to move on to other channels with

643
00:37:15,589 --> 00:37:20,569
us less noise now this is a first step

644
00:37:17,809 --> 00:37:23,109
now another thing that we need to be

645
00:37:20,569 --> 00:37:23,109
familiar with

646
00:37:30,200 --> 00:37:37,500
is what happens with existing

647
00:37:34,109 --> 00:37:39,779
connections when there's already a data

648
00:37:37,500 --> 00:37:41,750
flow we're going to send something over

649
00:37:39,780 --> 00:37:44,760
here

650
00:37:41,750 --> 00:37:47,430
see another package has arrived another

651
00:37:44,760 --> 00:37:49,349
one now what's interesting about this is

652
00:37:47,430 --> 00:37:50,790
because obviously no one around me is

653
00:37:49,349 --> 00:37:53,670
doing anything with Bluetooth this is

654
00:37:50,790 --> 00:37:58,740
really easy to see because this

655
00:37:53,670 --> 00:38:00,150
connection here is sending packages so

656
00:37:58,740 --> 00:38:02,970
as you can see this is being replicated

657
00:38:00,150 --> 00:38:06,390
being reused and this is the access

658
00:38:02,970 --> 00:38:08,790
application the access address and it's

659
00:38:06,390 --> 00:38:10,680
the same one as this one here whereas in

660
00:38:08,790 --> 00:38:12,839
this case we have a new one here because

661
00:38:10,680 --> 00:38:15,660
I have connected and disconnected and so

662
00:38:12,839 --> 00:38:19,009
in my connection address might change so

663
00:38:15,660 --> 00:38:22,618
what we're doing is facilitating making

664
00:38:19,010 --> 00:38:24,089
BTO Ajax work easier because I'm saying

665
00:38:22,619 --> 00:38:26,250
well there's a connection here and what

666
00:38:24,089 --> 00:38:29,940
I want you to do is to attack this

667
00:38:26,250 --> 00:38:32,550
connection in several ways so we can

668
00:38:29,940 --> 00:38:34,470
either keep sniffing traffic from here

669
00:38:32,550 --> 00:38:36,780
or we can hijack it which I will show

670
00:38:34,470 --> 00:38:42,240
you later on so this is an interesting

671
00:38:36,780 --> 00:38:45,119
value and as I was saying we could also

672
00:38:42,240 --> 00:38:46,709
connect this to white shark so we're

673
00:38:45,119 --> 00:38:48,950
going to do it now so you see how it's

674
00:38:46,710 --> 00:38:48,950
done

675
00:38:55,550 --> 00:38:58,150
right

676
00:39:10,980 --> 00:39:18,440
so let's see what we need to put in here

677
00:39:14,060 --> 00:39:22,020
in the - see once we've got the physical

678
00:39:18,440 --> 00:39:23,940
direction of the objective which is the

679
00:39:22,020 --> 00:39:27,599
plate that we have here if there's no

680
00:39:23,940 --> 00:39:29,130
random element to this in a mobile

681
00:39:27,599 --> 00:39:34,500
device there would be but not in this

682
00:39:29,130 --> 00:39:39,079
particular case so we'll put this Mac in

683
00:39:34,500 --> 00:39:43,109
right here will indicate the format and

684
00:39:39,079 --> 00:39:51,109
where we want it to save the fire for

685
00:39:43,109 --> 00:39:53,460
example we can say cyber camp PC ap and

686
00:39:51,109 --> 00:39:57,990
this is where we're going to create the

687
00:39:53,460 --> 00:40:04,290
pipe remember we have to a pipe - for

688
00:39:57,990 --> 00:40:07,229
the flow of data and you can see that

689
00:40:04,290 --> 00:40:14,849
the btle jack is says that it's waiting

690
00:40:07,230 --> 00:40:17,520
for Wireshark let me come to the

691
00:40:14,849 --> 00:40:23,819
interface management section and the

692
00:40:17,520 --> 00:40:37,880
pipes and I'll put in the pipe that I've

693
00:40:23,819 --> 00:40:37,880
just created tell if you're not

694
00:40:38,120 --> 00:40:44,759
when I select my pant for the time being

695
00:40:42,090 --> 00:40:47,460
there's nothing here we'll see now when

696
00:40:44,760 --> 00:40:49,280
we can act we'll connect to the same

697
00:40:47,460 --> 00:40:51,570
application as before

698
00:40:49,280 --> 00:40:53,370
remember there are packets that I can

699
00:40:51,570 --> 00:40:55,320
lose because I've only got two or two

700
00:40:53,370 --> 00:41:04,350
three so there's a percentage of loss

701
00:40:55,320 --> 00:41:18,120
there give me just a second

702
00:41:04,350 --> 00:41:28,040
I got a mother yes though Odie its run

703
00:41:18,120 --> 00:41:28,040
out of battery power okay now we're back

704
00:41:31,370 --> 00:41:37,549
sometimes you can lose the connection as

705
00:41:34,260 --> 00:41:41,330
you can see there it says sniffing again

706
00:41:37,550 --> 00:41:45,780
and it's so capturing once again and

707
00:41:41,330 --> 00:41:48,120
we're capturing all that traffic we're

708
00:41:45,780 --> 00:41:51,480
taking it to Wireshark and we can put it

709
00:41:48,120 --> 00:41:53,580
in a PC ap file and then we can start to

710
00:41:51,480 --> 00:41:57,240
analyze the analysis we'll do that

711
00:41:53,580 --> 00:42:00,210
afterwards but right now we can see some

712
00:41:57,240 --> 00:42:05,580
things here if we do a filter using the

713
00:42:00,210 --> 00:42:07,680
attribute code protocol we can see that

714
00:42:05,580 --> 00:42:11,450
there are a number of readings number of

715
00:42:07,680 --> 00:42:14,759
requests for reading and sending of data

716
00:42:11,450 --> 00:42:19,620
the name of the plate for example or any

717
00:42:14,760 --> 00:42:21,600
detail being sent by this device because

718
00:42:19,620 --> 00:42:25,580
when you connect and it's everything is

719
00:42:21,600 --> 00:42:28,020
very very clear in the MRF connection

720
00:42:25,580 --> 00:42:30,240
then you can see that there are a number

721
00:42:28,020 --> 00:42:32,870
of data that's transferred from one side

722
00:42:30,240 --> 00:42:32,870
to the other

723
00:42:36,320 --> 00:42:42,870
when you connect with these as gates for

724
00:42:40,200 --> 00:42:45,299
example they're so popular now you can

725
00:42:42,870 --> 00:42:49,170
see that a lot of information is being

726
00:42:45,300 --> 00:42:51,510
sent in to your mobile this the speed

727
00:42:49,170 --> 00:42:54,090
that you've been going at and the

728
00:42:51,510 --> 00:42:56,490
distance and so on and all of this

729
00:42:54,090 --> 00:42:58,860
information goes from the sensors to the

730
00:42:56,490 --> 00:43:00,720
mobile devices and that goes through ble

731
00:42:58,860 --> 00:43:09,390
connection and all of this can be

732
00:43:00,720 --> 00:43:13,640
captured and you might find that in this

733
00:43:09,390 --> 00:43:17,790
particular case it's not encrypted the

734
00:43:13,640 --> 00:43:29,629
packet is not encrypted in ATT it can or

735
00:43:17,790 --> 00:43:29,630
cannot be encrypted so let's continue

736
00:43:30,050 --> 00:43:37,020
we're not capturing commands and not

737
00:43:34,790 --> 00:43:41,360
capturing currently how to open the

738
00:43:37,020 --> 00:43:46,070
padlock but we're going to continue and

739
00:43:41,360 --> 00:43:46,070
we go on to the next section now

740
00:43:52,430 --> 00:43:59,609
obviously a backup but so this is PC ap

741
00:43:56,100 --> 00:44:02,460
analysis there are two ways of capturing

742
00:43:59,610 --> 00:44:05,760
that traffic either from the app the

743
00:44:02,460 --> 00:44:07,890
device or through these plates using the

744
00:44:05,760 --> 00:44:10,470
plate so there are more solutions there

745
00:44:07,890 --> 00:44:12,450
are it's not the only solution there are

746
00:44:10,470 --> 00:44:16,529
some which are a bit more homemade like

747
00:44:12,450 --> 00:44:20,339
this one or other more complex ones so

748
00:44:16,530 --> 00:44:22,950
PC AP analysis means that I have some

749
00:44:20,340 --> 00:44:28,080
sections and I need to know what to do

750
00:44:22,950 --> 00:44:30,210
with them this is why I find out whether

751
00:44:28,080 --> 00:44:31,680
and it encrypts it or not it's important

752
00:44:30,210 --> 00:44:38,370
because it will take me down one route

753
00:44:31,680 --> 00:44:42,480
or another so what can we get from a PC

754
00:44:38,370 --> 00:44:45,000
ap so we have to align in first place

755
00:44:42,480 --> 00:44:49,680
with a PC ap we can get a Bluetooth

756
00:44:45,000 --> 00:44:52,590
profile so that we all understand it

757
00:44:49,680 --> 00:44:55,669
it's what it is is the description of

758
00:44:52,590 --> 00:45:00,630
the type of device based on its services

759
00:44:55,670 --> 00:45:03,030
it says if we're connecting to speaker

760
00:45:00,630 --> 00:45:05,430
or something else and then we have the

761
00:45:03,030 --> 00:45:11,789
service it defines the functions of the

762
00:45:05,430 --> 00:45:15,359
device the functions of the device are

763
00:45:11,789 --> 00:45:18,180
the entire set of a profile you can see

764
00:45:15,359 --> 00:45:20,460
that in the picture what we're most

765
00:45:18,180 --> 00:45:26,848
interested in in ble is the

766
00:45:20,460 --> 00:45:30,690
characteristics these are properties in

767
00:45:26,849 --> 00:45:33,089
the device that can give us information

768
00:45:30,690 --> 00:45:35,220
about the device or to send information

769
00:45:33,089 --> 00:45:38,520
and for it to do something I'll give you

770
00:45:35,220 --> 00:45:42,538
an example in the padlock that we were

771
00:45:38,520 --> 00:45:43,980
simulating it can cannot give us

772
00:45:42,539 --> 00:45:47,460
information what it can say I'm a

773
00:45:43,980 --> 00:45:49,559
padlock I've got this series number it

774
00:45:47,460 --> 00:45:51,059
can give us that information but in

775
00:45:49,559 --> 00:45:54,380
order to be able to capture that

776
00:45:51,059 --> 00:45:57,410
information and use it in their normal

777
00:45:54,380 --> 00:45:59,400
application we need notification

778
00:45:57,410 --> 00:46:03,029
characteristics and reading

779
00:45:59,400 --> 00:46:05,400
characteristics so with the apps that

780
00:46:03,029 --> 00:46:07,079
we've been using and we look at later on

781
00:46:05,400 --> 00:46:10,200
we need to be able to see the different

782
00:46:07,079 --> 00:46:13,130
characteristics for connection and it'll

783
00:46:10,200 --> 00:46:15,930
say if it has reading or writing

784
00:46:13,130 --> 00:46:19,230
characteristics both and what you can do

785
00:46:15,930 --> 00:46:21,990
with those characteristics it's setting

786
00:46:19,230 --> 00:46:31,140
up the context for what it the device is

787
00:46:21,990 --> 00:46:34,140
for if we want to send something to the

788
00:46:31,140 --> 00:46:37,710
padlock to open it we have to use her

789
00:46:34,140 --> 00:46:39,450
writing characteristics we might send

790
00:46:37,710 --> 00:46:41,640
something and it might send something

791
00:46:39,450 --> 00:46:43,589
back in different characteristics and we

792
00:46:41,640 --> 00:46:44,549
have to play with that and return with

793
00:46:43,589 --> 00:46:47,849
that that's a little bit of the game

794
00:46:44,549 --> 00:46:50,160
that we have to play you'll see that

795
00:46:47,849 --> 00:46:53,630
when you use this technology but you

796
00:46:50,160 --> 00:46:53,629
need to understand what's behind it

797
00:46:56,420 --> 00:47:03,630
these other captures of the gatherings

798
00:47:00,660 --> 00:47:06,500
and we've got the handler concept here

799
00:47:03,630 --> 00:47:10,970
the handler concept

800
00:47:06,500 --> 00:47:15,030
so I've got these zero x08

801
00:47:10,970 --> 00:47:18,450
characteristic here or these zero X zero

802
00:47:15,030 --> 00:47:20,250
zero six four it depends on the

803
00:47:18,450 --> 00:47:23,308
application the characteristics that

804
00:47:20,250 --> 00:47:25,140
you'll have so don't stop using a device

805
00:47:23,309 --> 00:47:27,089
because you'd understand what they're

806
00:47:25,140 --> 00:47:29,490
being asked for all of a sudden you get

807
00:47:27,089 --> 00:47:30,990
something different to what you've used

808
00:47:29,490 --> 00:47:33,509
before but it's all the same it's just

809
00:47:30,990 --> 00:47:38,609
not a lesson of something that has come

810
00:47:33,510 --> 00:47:42,780
before so we have the attribute protocol

811
00:47:38,609 --> 00:47:47,720
of the ble at the end of the day we can

812
00:47:42,780 --> 00:47:52,049
read and write but without a response

813
00:47:47,720 --> 00:47:57,629
there will be an alarm and the padlock

814
00:47:52,049 --> 00:48:00,569
will open but I won't get a response but

815
00:47:57,630 --> 00:48:02,849
you could have a device that indicates

816
00:48:00,569 --> 00:48:06,960
the Equality of the air the humidity

817
00:48:02,849 --> 00:48:09,569
levels and so on using bluetooth I could

818
00:48:06,960 --> 00:48:11,579
ask about the quality of the air and a

819
00:48:09,569 --> 00:48:16,650
given time I can do that over Wi-Fi as

820
00:48:11,579 --> 00:48:20,190
well but it could be Bluetooth and if I

821
00:48:16,650 --> 00:48:24,470
send a request I'm expecting a response

822
00:48:20,190 --> 00:48:24,470
in a different kind of characteristics

823
00:48:26,660 --> 00:48:32,759
so let's move on to this slide I said we

824
00:48:31,440 --> 00:48:36,270
will be able to see the information

825
00:48:32,760 --> 00:48:45,270
using why Sir Wi-Fi or to do it in this

826
00:48:36,270 --> 00:48:48,809
way when we see this in other kind of

827
00:48:45,270 --> 00:48:51,380
areas we said this is crazy but we

828
00:48:48,809 --> 00:48:54,599
linked it to once if we see that they're

829
00:48:51,380 --> 00:48:57,440
aligned it's just represented in a

830
00:48:54,599 --> 00:49:00,510
different way but if we go step by step

831
00:48:57,440 --> 00:49:04,799
we will see that what we see in worship

832
00:49:00,510 --> 00:49:06,390
is what we're seeing here in the packet

833
00:49:04,799 --> 00:49:08,940
that we've selected the one in the

834
00:49:06,390 --> 00:49:11,868
middle the data that's been sent is one

835
00:49:08,940 --> 00:49:11,869
byte just one

836
00:49:13,300 --> 00:49:18,850
and then we have the handle the alias

837
00:49:16,090 --> 00:49:25,000
for the characteristic they're two bytes

838
00:49:18,850 --> 00:49:34,569
you have to see that there you read it

839
00:49:25,000 --> 00:49:41,110
backwards so and have a look at the the

840
00:49:34,570 --> 00:49:46,110
Opie Opie code as well it's five - this

841
00:49:41,110 --> 00:49:49,570
is a writing permission and you can get

842
00:49:46,110 --> 00:49:51,580
components that is much simpler way but

843
00:49:49,570 --> 00:49:54,220
you do have the IP code here then we

844
00:49:51,580 --> 00:49:57,040
have the CID what is it encapsulating

845
00:49:54,220 --> 00:50:01,319
the four bytes they have on the

846
00:49:57,040 --> 00:50:05,800
right-hand side of the 0 0 this is the

847
00:50:01,320 --> 00:50:07,870
ATT and then we have the upper layer is

848
00:50:05,800 --> 00:50:10,150
what's it's saying is that we this has

849
00:50:07,870 --> 00:50:14,230
been encapsulated and then we have the

850
00:50:10,150 --> 00:50:16,510
size of the packet there 4 bytes because

851
00:50:14,230 --> 00:50:20,290
we have the operating code on the right

852
00:50:16,510 --> 00:50:24,420
and the 0 are the properties that we're

853
00:50:20,290 --> 00:50:29,470
working with remember this is their

854
00:50:24,420 --> 00:50:35,910
writing you don't need to remember this

855
00:50:29,470 --> 00:50:38,259
but you will come across it and you

856
00:50:35,910 --> 00:50:39,910
might find that you will say well

857
00:50:38,260 --> 00:50:42,640
without white shock what can I do and

858
00:50:39,910 --> 00:50:45,399
what information can I get from of this

859
00:50:42,640 --> 00:50:53,230
if not you can go to white shark and

860
00:50:45,400 --> 00:50:55,960
that's it so now my watch has gone a

861
00:50:53,230 --> 00:51:00,760
little bit crazy so let's go to the

862
00:50:55,960 --> 00:51:02,670
attack side now the replay attack this

863
00:51:00,760 --> 00:51:07,030
is the first one we've done the sniffing

864
00:51:02,670 --> 00:51:09,670
we have sniffed the traffic we've looked

865
00:51:07,030 --> 00:51:11,140
at it from two point of view whether

866
00:51:09,670 --> 00:51:16,570
you've got the app or without the app

867
00:51:11,140 --> 00:51:20,379
and sniffing the air and now we're we're

868
00:51:16,570 --> 00:51:23,760
going to do is see if with that PC ap

869
00:51:20,380 --> 00:51:27,690
that packet if I can capture

870
00:51:23,760 --> 00:51:29,880
a section with the value for example in

871
00:51:27,690 --> 00:51:33,570
this padlock that I have you suddenly it

872
00:51:29,880 --> 00:51:36,720
opens a replay attack could do that I

873
00:51:33,570 --> 00:51:40,830
would take that section I connect to the

874
00:51:36,720 --> 00:51:43,049
padlock and I copy it if there's no

875
00:51:40,830 --> 00:51:46,950
other controls then the padlock will

876
00:51:43,050 --> 00:51:52,109
open I have a key which is a packet a

877
00:51:46,950 --> 00:51:56,640
section I sent it and it will open so

878
00:51:52,109 --> 00:51:59,569
it's as easy as that should we say there

879
00:51:56,640 --> 00:52:02,190
are two ways of looking this as well

880
00:51:59,570 --> 00:52:08,880
because it can be encrypted or not

881
00:52:02,190 --> 00:52:14,700
encrypted so what are most devices that

882
00:52:08,880 --> 00:52:17,880
use ble like nowadays they can use the

883
00:52:14,700 --> 00:52:20,580
rules of the game that they wish many of

884
00:52:17,880 --> 00:52:24,180
the devices that you use will use non

885
00:52:20,580 --> 00:52:27,569
encrypted connections because it's

886
00:52:24,180 --> 00:52:30,089
closer for various different reasons it

887
00:52:27,570 --> 00:52:31,770
will if you sniff that air then you will

888
00:52:30,090 --> 00:52:34,710
see several different things and even

889
00:52:31,770 --> 00:52:37,320
sensitive information because we capture

890
00:52:34,710 --> 00:52:39,150
the order that opens the padlock and we

891
00:52:37,320 --> 00:52:41,190
can replicate that to open whichever

892
00:52:39,150 --> 00:52:54,420
padlock we're interested in we're

893
00:52:41,190 --> 00:52:59,700
auditing that I wanted to show you the

894
00:52:54,420 --> 00:53:04,770
main code scheme environment this is a

895
00:52:59,700 --> 00:53:08,040
project in the UK and it's a very simple

896
00:53:04,770 --> 00:53:13,800
I don't know how many of you know these

897
00:53:08,040 --> 00:53:17,820
grants this is very similar similar it's

898
00:53:13,800 --> 00:53:21,390
microsoft language you can program it in

899
00:53:17,820 --> 00:53:25,010
blocks and it can be programmed with

900
00:53:21,390 --> 00:53:25,009
micro Python Python

901
00:53:26,109 --> 00:53:32,009
you can do lots of things in this memory

902
00:53:28,630 --> 00:53:34,930
and this picture of the different blocks

903
00:53:32,009 --> 00:53:37,900
it represents the padlock that we were

904
00:53:34,930 --> 00:53:44,078
using in the exercise first of all it's

905
00:53:37,900 --> 00:53:47,589
locked so when the plate is started

906
00:53:44,079 --> 00:53:51,640
there is a closed padlock the objective

907
00:53:47,589 --> 00:53:54,730
is to open it there is another event

908
00:53:51,640 --> 00:54:00,700
which is when a device connects to the

909
00:53:54,730 --> 00:54:03,880
plate and that at that point what we can

910
00:54:00,700 --> 00:54:06,279
do is listen to what is being sent the

911
00:54:03,880 --> 00:54:09,220
commands that are being sent and there's

912
00:54:06,279 --> 00:54:11,109
a sniffer and what is sent is the same

913
00:54:09,220 --> 00:54:14,558
as what I've got here then I can open

914
00:54:11,109 --> 00:54:16,799
the padlock if it is not sent in the

915
00:54:14,559 --> 00:54:20,589
same way or go through a different

916
00:54:16,799 --> 00:54:25,210
branch than it will not open it's very

917
00:54:20,589 --> 00:54:30,369
simple so when it's open we'll see a

918
00:54:25,210 --> 00:54:38,140
bite on the screen with blocks this code

919
00:54:30,369 --> 00:54:41,799
can be managed very easily we download

920
00:54:38,140 --> 00:54:46,660
this environment on a web and we get dot

921
00:54:41,799 --> 00:54:50,739
X file and then we have to take that to

922
00:54:46,660 --> 00:54:55,118
the micro bit we set up a disk unit I

923
00:54:50,739 --> 00:54:58,359
open it and paste it and suddenly it it

924
00:54:55,119 --> 00:55:02,319
will flash and it will be turned into a

925
00:54:58,359 --> 00:55:05,739
smart lock or a simulated smart lock I'm

926
00:55:02,319 --> 00:55:08,230
going to show you something else now

927
00:55:05,739 --> 00:55:09,910
but even from this environment we can

928
00:55:08,230 --> 00:55:13,239
say that the communication should be

929
00:55:09,910 --> 00:55:16,359
encrypted and this is useful for the

930
00:55:13,239 --> 00:55:21,130
encrypted attack so we have the whole

931
00:55:16,359 --> 00:55:24,960
environment in order to play with so

932
00:55:21,130 --> 00:55:24,960
let's go now to the example

933
00:55:35,450 --> 00:55:41,000
let's see if we are able to capture that

934
00:55:37,920 --> 00:55:41,000
traffic or not

935
00:55:47,030 --> 00:55:50,020
huh

936
00:55:53,459 --> 00:56:01,739
so let's tell the microbots to start

937
00:55:56,640 --> 00:56:01,739
capturing and send it all to white shock

938
00:56:03,659 --> 00:56:20,109
we have this here waiting so now I'm

939
00:56:15,729 --> 00:56:21,218
going to connect and one of the things I

940
00:56:20,109 --> 00:56:26,049
need to look at is the code because I

941
00:56:21,219 --> 00:56:31,799
can't remember it right now so I'm going

942
00:56:26,049 --> 00:56:36,788
to connect now by going tada

943
00:56:31,799 --> 00:56:54,089
remember I'm going to send the command

944
00:56:36,789 --> 00:56:54,089
that opens the padlock 8 4 b h p h 4f

945
00:56:57,279 --> 00:57:18,529
funny when Sonia wrote I mean they don't

946
00:57:00,400 --> 00:57:19,069
know I've captured this iPhone no no

947
00:57:18,529 --> 00:57:34,819
okay

948
00:57:19,069 --> 00:57:37,730
so the padlock is now open okay II then

949
00:57:34,819 --> 00:57:45,349
I was a fifty and we have the file let's

950
00:57:37,730 --> 00:57:50,509
go to the file where did I save it it

951
00:57:45,349 --> 00:57:53,559
was right here I think we called it

952
00:57:50,509 --> 00:57:53,559
cyber camp I think

953
00:58:00,340 --> 00:58:13,380
it was a feature so we have the filter

954
00:58:08,050 --> 00:58:18,010
on this file from the protocol from our

955
00:58:13,380 --> 00:58:20,950
application so we need to look when we

956
00:58:18,010 --> 00:58:23,200
get the right commands this is a command

957
00:58:20,950 --> 00:58:25,569
that comes out from the mobile app to

958
00:58:23,200 --> 00:58:27,850
the device to do something to write

959
00:58:25,570 --> 00:58:29,710
something on that device and this

960
00:58:27,850 --> 00:58:33,060
particular case the padlock to do

961
00:58:29,710 --> 00:58:35,860
something and in this case it is opening

962
00:58:33,060 --> 00:58:37,960
if we have a look at this traffic

963
00:58:35,860 --> 00:58:44,490
traffic you see it's not complicated we

964
00:58:37,960 --> 00:58:44,490
have a handle and we also have a value

965
00:58:45,000 --> 00:58:55,150
who wrt X and we've captured that and

966
00:58:52,120 --> 00:59:05,680
we've done this with our own application

967
00:58:55,150 --> 00:59:07,390
and we can replay that section so

968
00:59:05,680 --> 00:59:09,839
without needing to snip anything without

969
00:59:07,390 --> 00:59:15,279
the application we can replay that

970
00:59:09,840 --> 00:59:23,260
section then block so let's do an

971
00:59:15,280 --> 00:59:25,150
example now and for this example we're

972
00:59:23,260 --> 00:59:32,040
going to use we're going to get rid of

973
00:59:25,150 --> 00:59:35,280
this plate and we're going to use

974
00:59:32,040 --> 00:59:35,279
another machine

975
00:59:49,880 --> 01:00:02,130
right so we're going to reset this so

976
00:59:58,170 --> 01:00:04,500
it's locked again see now you can see

977
01:00:02,130 --> 01:00:12,350
smart lock and then you see the little

978
01:00:04,500 --> 01:00:12,350
padlock yeah done

979
01:00:18,990 --> 01:00:27,399
so when this machine starts we will see

980
01:00:23,950 --> 01:00:28,629
that we have a Bluetooth device which is

981
01:00:27,400 --> 01:00:34,060
what I was telling you which was

982
01:00:28,630 --> 01:00:35,950
optional device might have integrated

983
01:00:34,060 --> 01:00:37,630
Bluetooth but in this case because it's

984
01:00:35,950 --> 01:00:40,149
a virtual unit which and have it

985
01:00:37,630 --> 01:00:50,680
integrated on the device we need and

986
01:00:40,150 --> 01:00:58,110
that we're going to use an open source

987
01:00:50,680 --> 01:00:58,109
tool which is called compound home pun

988
01:01:08,380 --> 01:01:13,640
first of all there's a series of modules

989
01:01:10,520 --> 01:01:16,820
so you can fiddle with its in on github

990
01:01:13,640 --> 01:01:18,950
but and the first thing we're going to

991
01:01:16,820 --> 01:01:20,390
do is see if this has recognized our

992
01:01:18,950 --> 01:01:25,660
adapter which it has

993
01:01:20,390 --> 01:01:29,600
and now we're going to load a module and

994
01:01:25,660 --> 01:01:33,649
say that the signal doesn't have to have

995
01:01:29,600 --> 01:01:35,900
a very broad range and so we're going to

996
01:01:33,650 --> 01:01:39,530
start scanning all the devices around

997
01:01:35,900 --> 01:01:48,730
here now as you can see we are detecting

998
01:01:39,530 --> 01:01:48,730
several devices but we have not detected

999
01:01:50,260 --> 01:02:05,030
their one we were looking for let's just

1000
01:01:54,470 --> 01:02:07,868
increase the range the RSSI hmm started

1001
01:02:05,030 --> 01:02:07,869
testing it let's see

1002
01:02:23,589 --> 01:02:28,970
so we've got the mark here we've got

1003
01:02:26,960 --> 01:02:30,950
them kind of address in this case it's

1004
01:02:28,970 --> 01:02:33,649
random important could be random could

1005
01:02:30,950 --> 01:02:38,689
be public but we will see it straight

1006
01:02:33,650 --> 01:02:42,049
away and now we're going to load another

1007
01:02:38,690 --> 01:02:45,979
module BOE module to read the

1008
01:02:42,049 --> 01:02:49,759
characteristics and see its features as

1009
01:02:45,979 --> 01:02:57,140
well so we've got the module options

1010
01:02:49,759 --> 01:02:59,930
here and we give it the Mac now careful

1011
01:02:57,140 --> 01:03:02,839
here because we could manage with random

1012
01:02:59,930 --> 01:03:05,720
or public the type of address so we need

1013
01:03:02,839 --> 01:03:07,609
to know which one it is so we connect

1014
01:03:05,720 --> 01:03:13,819
and here we have all the characteristics

1015
01:03:07,609 --> 01:03:18,259
so the UID and handle these are very

1016
01:03:13,819 --> 01:03:20,119
important we see the two features and

1017
01:03:18,259 --> 01:03:23,859
the kind of permission and this is

1018
01:03:20,119 --> 01:03:27,489
important because if it's all read-only

1019
01:03:23,859 --> 01:03:32,119
then it will try to run loader to see

1020
01:03:27,489 --> 01:03:35,200
what information it gives so we have

1021
01:03:32,119 --> 01:03:38,930
text information and that is read

1022
01:03:35,200 --> 01:03:41,118
automatically but there's other kinds of

1023
01:03:38,930 --> 01:03:51,219
information that it's not so easy to

1024
01:03:41,119 --> 01:03:55,460
read and by the way in the snapshot with

1025
01:03:51,219 --> 01:03:57,979
taken if I go back to my PC ap you can

1026
01:03:55,460 --> 01:04:02,960
see this characteristic true that it is

1027
01:03:57,979 --> 01:04:05,390
very long but look at a series of bytes

1028
01:04:02,960 --> 01:04:08,119
or some things and and see that they

1029
01:04:05,390 --> 01:04:11,089
coincide with this one which is writing

1030
01:04:08,119 --> 01:04:13,460
a right characteristic this is necessary

1031
01:04:11,089 --> 01:04:18,170
we sense something it has to be right

1032
01:04:13,460 --> 01:04:22,390
characteristic so we copy the UID and we

1033
01:04:18,170 --> 01:04:29,229
go on to a right characteristic module

1034
01:04:22,390 --> 01:04:29,229
we've got the options the Mac the UID

1035
01:04:29,940 --> 01:04:34,650
here when it asks for data we have to

1036
01:04:32,400 --> 01:04:50,960
use the code that we used before this

1037
01:04:34,650 --> 01:04:50,960
here on the snapshot 8d m n4 f b h4 s

1038
01:04:52,160 --> 01:04:59,868
don't forget the encode which could be a

1039
01:04:55,740 --> 01:05:09,169
C or decimal in this case it's a C and

1040
01:04:59,869 --> 01:05:13,490
let's launch it before we launch it

1041
01:05:09,170 --> 01:05:13,490
let's do it this way so you can see it

1042
01:05:21,540 --> 01:05:26,320
now picture if this doesn't work and

1043
01:05:24,460 --> 01:05:30,340
we've been here all morning and now it

1044
01:05:26,320 --> 01:05:37,710
doesn't work it could happen

1045
01:05:30,340 --> 01:05:40,630
by the way oh there we go

1046
01:05:37,710 --> 01:05:40,990
now it's set by we've done something

1047
01:05:40,630 --> 01:05:54,780
wrong

1048
01:05:40,990 --> 01:05:54,779
let's check eight the m n4 f b h4 f

1049
01:06:04,520 --> 01:06:24,870
it's returning I fold somewhere I'm just

1050
01:06:10,470 --> 01:06:28,410
checking the code again the data yeah

1051
01:06:24,870 --> 01:06:30,870
business returning a failure for some

1052
01:06:28,410 --> 01:06:40,560
reason but we have a video thankfully so

1053
01:06:30,870 --> 01:06:44,060
I can show it to you anyway now it has

1054
01:06:40,560 --> 01:06:44,060
opened it let's try it again okay

1055
01:06:53,250 --> 01:06:58,369
there you go you can see the padlock

1056
01:07:04,109 --> 01:07:14,489
yeah unlock and open see so this is the

1057
01:07:11,729 --> 01:07:18,089
easiest example because that eros day is

1058
01:07:14,489 --> 01:07:21,180
just you capture the frame you sniff the

1059
01:07:18,089 --> 01:07:25,049
frame that has activated and unlocked

1060
01:07:21,180 --> 01:07:27,209
the device and I can just replay it but

1061
01:07:25,049 --> 01:07:29,969
it could happen that there's a more

1062
01:07:27,209 --> 01:07:33,149
complex logic for example there's a data

1063
01:07:29,969 --> 01:07:35,009
are being send and there's an answer and

1064
01:07:33,150 --> 01:07:37,319
something else needs to be done all

1065
01:07:35,009 --> 01:07:40,529
directly let's encrypt it and that

1066
01:07:37,319 --> 01:07:47,130
obviously makes our intentions and

1067
01:07:40,529 --> 01:07:51,809
objective more complicated to attain so

1068
01:07:47,130 --> 01:07:57,499
let's continue now now replay attack is

1069
01:07:51,809 --> 01:08:00,479
clear right easy you can do it at home

1070
01:07:57,499 --> 01:08:02,640
with your devices please with your own

1071
01:08:00,479 --> 01:08:06,209
devices or if you're auditing another

1072
01:08:02,640 --> 01:08:10,049
device right so next attack

1073
01:08:06,209 --> 01:08:13,019
hijacking now how many of you know the

1074
01:08:10,049 --> 01:08:15,930
word how hijacking or have seen it in

1075
01:08:13,019 --> 01:08:20,818
some sort of attack where have you seen

1076
01:08:15,930 --> 01:08:25,889
a more most often websites the old

1077
01:08:20,819 --> 01:08:28,230
cookies yeah well we have hijacking here

1078
01:08:25,889 --> 01:08:29,730
as well and you can see this example

1079
01:08:28,229 --> 01:08:32,149
here we have the different goals that we

1080
01:08:29,729 --> 01:08:35,848
mentioned during the theory central

1081
01:08:32,149 --> 01:08:39,049
slave master and attacker so this is a

1082
01:08:35,849 --> 01:08:41,909
communication between the phone and

1083
01:08:39,049 --> 01:08:43,830
after example scusa any device

1084
01:08:41,908 --> 01:08:48,618
there's the flow here but then the

1085
01:08:43,830 --> 01:08:54,028
attacker arrives and it starts sending

1086
01:08:48,618 --> 01:08:56,608
timeout packets and so this can actually

1087
01:08:54,029 --> 01:09:00,599
have two outcomes a jamming attack on

1088
01:08:56,609 --> 01:09:02,549
the one hand so services denied and the

1089
01:09:00,599 --> 01:09:05,429
application is disconnected from the

1090
01:09:02,549 --> 01:09:07,339
device and those done through btle jack

1091
01:09:05,429 --> 01:09:10,609
as well

1092
01:09:07,339 --> 01:09:13,130
all on the other hand we could instead

1093
01:09:10,609 --> 01:09:14,810
of doing a jamming we could lose the

1094
01:09:13,130 --> 01:09:17,300
connection between the slave and the

1095
01:09:14,810 --> 01:09:20,980
master and then that's when we would

1096
01:09:17,300 --> 01:09:23,779
come in with the access address to

1097
01:09:20,979 --> 01:09:25,120
pretend in some way to be that

1098
01:09:23,779 --> 01:09:30,920
connection

1099
01:09:25,120 --> 01:09:32,630
so that's how we managed to get control

1100
01:09:30,920 --> 01:09:35,690
of that connection there was an existing

1101
01:09:32,630 --> 01:09:38,180
connection so we've thrown away at the

1102
01:09:35,689 --> 01:09:39,858
person who was connected and we have

1103
01:09:38,180 --> 01:09:42,430
connected ourselves so it's it's

1104
01:09:39,859 --> 01:09:45,319
completely hijacking that connection

1105
01:09:42,430 --> 01:09:47,210
I've got a video here because I haven't

1106
01:09:45,319 --> 01:09:48,620
been able to bring all the devices but I

1107
01:09:47,210 --> 01:09:51,830
wanted to show you what we can do with

1108
01:09:48,620 --> 01:09:53,450
me till Jack BT old Jack doesn't work

1109
01:09:51,830 --> 01:09:55,400
with every device it depends on the

1110
01:09:53,450 --> 01:09:57,530
implementation that's been done in the

1111
01:09:55,400 --> 01:09:59,839
background but I'm going to show you an

1112
01:09:57,530 --> 01:10:02,030
example which works in this video you'll

1113
01:09:59,840 --> 01:10:06,380
see it later what's interesting here is

1114
01:10:02,030 --> 01:10:09,320
that with me te le Jack I have thrown

1115
01:10:06,380 --> 01:10:12,560
away the legitimate device I have

1116
01:10:09,320 --> 01:10:14,750
hijacked that connection and you can see

1117
01:10:12,560 --> 01:10:16,520
the discover option so I can get all the

1118
01:10:14,750 --> 01:10:19,790
characteristics of that device and I can

1119
01:10:16,520 --> 01:10:23,030
interact with it with said device and

1120
01:10:19,790 --> 01:10:24,410
have to know what I can send and

1121
01:10:23,030 --> 01:10:26,630
everything so there's a sniffing that

1122
01:10:24,410 --> 01:10:27,950
has to be done previously but anyway I'm

1123
01:10:26,630 --> 01:10:30,020
going to show you this example so you

1124
01:10:27,950 --> 01:10:35,139
see how it works can you see it properly

1125
01:10:30,020 --> 01:10:38,140
yeah right we are activating here the

1126
01:10:35,140 --> 01:10:38,140
session

1127
01:10:47,510 --> 01:10:52,710
see there's an access address here

1128
01:10:50,130 --> 01:11:01,920
channel not all the east concepts you

1129
01:10:52,710 --> 01:11:05,400
already know by now and see here this

1130
01:11:01,920 --> 01:11:09,180
here we are inputting the access address

1131
01:11:05,400 --> 01:11:12,660
we want to hijack and with - T we do

1132
01:11:09,180 --> 01:11:17,160
hijacking with - J we do the jamming

1133
01:11:12,660 --> 01:11:24,150
attack small as the same and this could

1134
01:11:17,160 --> 01:11:26,580
take some time because now it has to get

1135
01:11:24,150 --> 01:11:28,920
the channel map we have to extract it

1136
01:11:26,580 --> 01:11:30,420
because we haven't been sniffing the

1137
01:11:28,920 --> 01:11:32,580
connection packets that this is a

1138
01:11:30,420 --> 01:11:36,420
previous an existing connection so we

1139
01:11:32,580 --> 01:11:38,670
have to determine first the channel map

1140
01:11:36,420 --> 01:11:45,390
and this is what takes the longest

1141
01:11:38,670 --> 01:11:47,880
obviously then with CSE it's actually

1142
01:11:45,390 --> 01:11:50,070
quite easy to extract and quite quickly

1143
01:11:47,880 --> 01:11:52,830
there's the hop interval that has to be

1144
01:11:50,070 --> 01:11:54,690
calculated as well as the increment and

1145
01:11:52,830 --> 01:11:58,430
that's quite quickly as well but quick

1146
01:11:54,690 --> 01:12:01,669
as well and now from here it gives us

1147
01:11:58,430 --> 01:12:04,650
the information it says hijacked

1148
01:12:01,670 --> 01:12:11,160
successful at is all yours and what do

1149
01:12:04,650 --> 01:12:19,969
you do now so what we would do here is

1150
01:12:11,160 --> 01:12:26,730
with discover we start getting then

1151
01:12:19,970 --> 01:12:29,910
range 0 0 0 8 - 0 0 0 9 0 0 0 9 - 0 0 0

1152
01:12:26,730 --> 01:12:31,919
e these are handle ranges that means

1153
01:12:29,910 --> 01:12:33,599
that we have different characteristics

1154
01:12:31,920 --> 01:12:36,480
which are grouped here we don't know in

1155
01:12:33,600 --> 01:12:38,730
on which one in that range in that

1156
01:12:36,480 --> 01:12:42,269
interval there may be two three four

1157
01:12:38,730 --> 01:12:44,519
characteristics we don't know and in the

1158
01:12:42,270 --> 01:12:48,030
end we obtained this information that we

1159
01:12:44,520 --> 01:12:52,110
see here we've got permissions right

1160
01:12:48,030 --> 01:12:54,389
read only notification only right and

1161
01:12:52,110 --> 01:13:01,449
the value the handle value

1162
01:12:54,389 --> 01:13:03,880
and here is will we can write over write

1163
01:13:01,449 --> 01:13:05,650
to the characteristic and interact with

1164
01:13:03,880 --> 01:13:08,050
his device but what were mad as he is

1165
01:13:05,650 --> 01:13:11,409
then we have hijacked the connection so

1166
01:13:08,050 --> 01:13:14,579
we have thrown out the connection that

1167
01:13:11,409 --> 01:13:18,369
the device was using and we are in now

1168
01:13:14,579 --> 01:13:20,799
and with jamming what happens is

1169
01:13:18,369 --> 01:13:25,299
something very similar as you can see

1170
01:13:20,800 --> 01:13:27,340
here instead of minus T we're going to

1171
01:13:25,300 --> 01:13:29,170
use minus J you see it there at the top

1172
01:13:27,340 --> 01:13:34,749
I don't know if you can see it but at

1173
01:13:29,170 --> 01:13:37,179
the very top you will see minus J and at

1174
01:13:34,749 --> 01:13:40,269
the other day this is denying service so

1175
01:13:37,179 --> 01:13:42,130
it is sending time out packets and as if

1176
01:13:40,269 --> 01:13:46,360
the connection had timed out sort of the

1177
01:13:42,130 --> 01:13:48,880
application loses connection and now we

1178
01:13:46,360 --> 01:13:51,518
have a different scenario but and this

1179
01:13:48,880 --> 01:13:58,510
is the difficult scenario so now we have

1180
01:13:51,519 --> 01:14:01,479
encrypted connection so this device with

1181
01:13:58,510 --> 01:14:03,309
the mobile application is encrypted how

1182
01:14:01,479 --> 01:14:06,639
do we know that because the moment we

1183
01:14:03,309 --> 01:14:10,710
sniff the frames it will be we will find

1184
01:14:06,639 --> 01:14:12,999
out immediately and how does this work

1185
01:14:10,710 --> 01:14:15,130
information can be encrypted in

1186
01:14:12,999 --> 01:14:22,150
different ways it's usually through a

1187
01:14:15,130 --> 01:14:25,929
pin number usually six digits in a

1188
01:14:22,150 --> 01:14:28,239
corporate environment something more

1189
01:14:25,929 --> 01:14:30,789
formal the solution might be in a

1190
01:14:28,239 --> 01:14:33,369
different kind of encryption but you

1191
01:14:30,789 --> 01:14:36,639
have to think that these devices usually

1192
01:14:33,369 --> 01:14:39,280
have a very low computing capacity so

1193
01:14:36,639 --> 01:14:40,690
the encryption is not going to be very

1194
01:14:39,280 --> 01:14:43,449
powerful because it would take too long

1195
01:14:40,690 --> 01:14:45,518
and it wouldn't have enough resources so

1196
01:14:43,449 --> 01:14:48,369
we have the option of at least

1197
01:14:45,519 --> 01:14:52,989
encrypting it with a pin number for

1198
01:14:48,369 --> 01:14:55,960
example between master devices so what

1199
01:14:52,989 --> 01:14:58,089
I'm going to show you is how easy it is

1200
01:14:55,960 --> 01:15:03,099
to configure this case with make up code

1201
01:14:58,090 --> 01:15:05,770
and if the encryption is through pin we

1202
01:15:03,099 --> 01:15:09,370
have crackle which is

1203
01:15:05,770 --> 01:15:13,810
- you have it on github and you have to

1204
01:15:09,370 --> 01:15:19,180
compile it on C by the way so crackle

1205
01:15:13,810 --> 01:15:22,810
cracks and encrypts pl8 connections and

1206
01:15:19,180 --> 01:15:26,920
we get a temporary key which is Tek so

1207
01:15:22,810 --> 01:15:35,500
with TK and L cake and LT k we can get

1208
01:15:26,920 --> 01:15:37,570
the short period and long period key we

1209
01:15:35,500 --> 01:15:40,930
need to modify something here because

1210
01:15:37,570 --> 01:15:43,630
when we sniff those encrypted frames we

1211
01:15:40,930 --> 01:15:45,160
will give them to this tool and if we

1212
01:15:43,630 --> 01:15:46,840
have all the components by the way

1213
01:15:45,160 --> 01:15:49,150
there's quite a few components we need

1214
01:15:46,840 --> 01:15:50,710
to sniff on this frame then we could get

1215
01:15:49,150 --> 01:15:53,679
to the example that I'm showing you here

1216
01:15:50,710 --> 01:15:57,460
as you can see here we are finding out

1217
01:15:53,680 --> 01:16:01,290
the pin it says how it was done and if I

1218
01:15:57,460 --> 01:16:04,810
use - oh here then I get the PC AP

1219
01:16:01,290 --> 01:16:07,000
packet already decrypted which is cool

1220
01:16:04,810 --> 01:16:09,580
because then we can analyze what is

1221
01:16:07,000 --> 01:16:12,190
being sent between the two devices even

1222
01:16:09,580 --> 01:16:14,920
if it's encrypted and here you have an

1223
01:16:12,190 --> 01:16:18,219
example of the decrypted packet so we're

1224
01:16:14,920 --> 01:16:20,800
going to do this example but before we

1225
01:16:18,220 --> 01:16:28,680
do that let's go to make code a little

1226
01:16:20,800 --> 01:16:32,910
bit which I have opened around here and

1227
01:16:28,680 --> 01:16:32,910
we go into import

1228
01:16:51,869 --> 01:17:01,630
now this is another program this has a

1229
01:16:58,619 --> 01:17:04,179
higher iteration it's got different

1230
01:17:01,630 --> 01:17:07,210
sensors and you can send commands and

1231
01:17:04,179 --> 01:17:09,280
this command goes onto the plate and

1232
01:17:07,210 --> 01:17:10,840
asks it to respond with a different

1233
01:17:09,280 --> 01:17:12,909
characteristics you don't have to

1234
01:17:10,840 --> 01:17:14,770
subscribe all read a new characteristic

1235
01:17:12,909 --> 01:17:18,369
say for example that you ask it to give

1236
01:17:14,770 --> 01:17:21,790
you the temperature the plate

1237
01:17:18,369 --> 01:17:26,219
temperature ambient temperature of the

1238
01:17:21,790 --> 01:17:29,230
plate so this this game where you send

1239
01:17:26,219 --> 01:17:35,920
request and you get an answer is a full

1240
01:17:29,230 --> 01:17:40,349
circle but here we have a different

1241
01:17:35,920 --> 01:17:40,350
solution and that means that the plate

1242
01:17:41,610 --> 01:17:47,080
in order to pair with it will need a pin

1243
01:17:44,710 --> 01:17:50,020
and the connection is going to be

1244
01:17:47,080 --> 01:17:51,969
encrypted so wherever we whatever

1245
01:17:50,020 --> 01:17:54,190
connection we make is going to be

1246
01:17:51,969 --> 01:18:03,869
encrypted and so we have to apply

1247
01:17:54,190 --> 01:18:03,869
crackle so let's do this

1248
01:18:07,360 --> 01:18:15,440
so first of all when we sniff we have to

1249
01:18:12,650 --> 01:18:18,379
change the format the former that

1250
01:18:15,440 --> 01:18:23,240
crackle is expecting is this one which

1251
01:18:18,380 --> 01:18:26,000
is the raw data let's call this sniff

1252
01:18:23,240 --> 01:18:30,290
cyber camp 2 and everything else is

1253
01:18:26,000 --> 01:18:34,870
exactly the same just having this on the

1254
01:18:30,290 --> 01:18:34,870
type have an exit file and on

1255
01:19:02,670 --> 01:19:05,330
right

1256
01:19:08,219 --> 01:19:12,400
well I knew the plates if I don't have

1257
01:19:10,869 --> 01:19:21,070
the place is going to be difficult to do

1258
01:19:12,400 --> 01:19:24,969
this as you can see obviously workshops

1259
01:19:21,070 --> 01:19:35,380
which entail using hardware is a bit of

1260
01:19:24,969 --> 01:19:43,719
fiddling around but well now it's

1261
01:19:35,380 --> 01:19:45,610
capturing we can change the freeware on

1262
01:19:43,719 --> 01:19:50,100
this quite easily when we connect the

1263
01:19:45,610 --> 01:19:56,170
plate to the device we have a micro bit

1264
01:19:50,100 --> 01:19:59,320
entity here and we simply take it from

1265
01:19:56,170 --> 01:20:07,630
the file firmware over here we copy it

1266
01:19:59,320 --> 01:20:16,780
over here just wait a second because so

1267
01:20:07,630 --> 01:20:18,489
we can do that so that you can see it as

1268
01:20:16,780 --> 01:20:27,780
I was saying we have to connect just

1269
01:20:18,489 --> 01:20:32,709
connect connect again here we have the

1270
01:20:27,780 --> 01:20:39,790
micro bit just flash it up quickly I've

1271
01:20:32,710 --> 01:20:43,030
got the program here so a bit of you we

1272
01:20:39,790 --> 01:20:46,000
paste it over here and then when we

1273
01:20:43,030 --> 01:20:49,139
finish we have the program and the

1274
01:20:46,000 --> 01:20:49,139
communication will now be encrypted

1275
01:20:54,309 --> 01:21:06,909
so now let's remove this one and we'll

1276
01:21:02,869 --> 01:21:06,909
connect the micro bit once again

1277
01:21:35,080 --> 01:21:41,360
now things are a little bit different

1278
01:21:38,950 --> 01:21:48,290
because in order to be able to connect

1279
01:21:41,360 --> 01:21:53,750
we need something now we need to put in

1280
01:21:48,290 --> 01:21:58,340
a pin when we have an app we need to do

1281
01:21:53,750 --> 01:22:04,130
the pairing with the microwave which is

1282
01:21:58,340 --> 01:22:08,440
encrypted and the connection to us so

1283
01:22:04,130 --> 01:22:13,460
the RF connect application that comes up

1284
01:22:08,440 --> 01:22:24,589
you may have this remembered so you have

1285
01:22:13,460 --> 01:22:27,380
to get rid of the device we're going to

1286
01:22:24,590 --> 01:22:30,040
get a PC ap just like this one here when

1287
01:22:27,380 --> 01:22:30,040
we select it

1288
01:22:49,630 --> 01:22:59,810
if you have any more here we have 175

1289
01:22:55,160 --> 01:23:03,080
different packets as you can see these

1290
01:22:59,810 --> 01:23:06,980
are all low energy levels low energy low

1291
01:23:03,080 --> 01:23:09,410
energy so we don't see the protocol

1292
01:23:06,980 --> 01:23:12,219
attribute we don't see the handle we

1293
01:23:09,410 --> 01:23:17,530
don't see anything it's on a lower level

1294
01:23:12,220 --> 01:23:21,950
when we go through h HTTP on to a page

1295
01:23:17,530 --> 01:23:23,960
the data field is encrypted and we see

1296
01:23:21,950 --> 01:23:27,290
just that we don't see the layer of the

1297
01:23:23,960 --> 01:23:34,070
applications so it's simply similar in

1298
01:23:27,290 --> 01:23:37,730
this given case this means that the

1299
01:23:34,070 --> 01:23:43,790
traffic is encrypted and here we have

1300
01:23:37,730 --> 01:23:46,719
the connect request and in that we can

1301
01:23:43,790 --> 01:23:51,470
see all the information of the channel

1302
01:23:46,720 --> 01:23:56,030
we can see the address the address for

1303
01:23:51,470 --> 01:24:00,080
access which channel is being used the

1304
01:23:56,030 --> 01:24:05,420
interval and the increments we have the

1305
01:24:00,080 --> 01:24:08,660
hop here we can see all of this and we

1306
01:24:05,420 --> 01:24:11,060
can also see another element down here

1307
01:24:08,660 --> 01:24:13,610
at the bottom there's an encryption

1308
01:24:11,060 --> 01:24:17,330
request there's a response and deserve

1309
01:24:13,610 --> 01:24:24,530
initiation so what we see after that is

1310
01:24:17,330 --> 01:24:25,640
all encrypted this capture is also very

1311
01:24:24,530 --> 01:24:30,469
interesting because otherwise the

1312
01:24:25,640 --> 01:24:33,950
crackle won't work we have the pairing

1313
01:24:30,470 --> 01:24:37,480
request and the response for that and a

1314
01:24:33,950 --> 01:24:41,660
confirmation and the two pairing packets

1315
01:24:37,480 --> 01:24:44,780
these are the requirements the request

1316
01:24:41,660 --> 01:24:47,139
and the confirmation and the random we

1317
01:24:44,780 --> 01:24:52,210
need all of these packets in order to

1318
01:24:47,140 --> 01:24:52,210
crack the communication using crackle

1319
01:24:54,200 --> 01:25:05,010
so how does crackle work it's really

1320
01:24:58,440 --> 01:25:08,580
quite simple we insert the PC ap we can

1321
01:25:05,010 --> 01:25:12,350
put a pc IP output as well and we can

1322
01:25:08,580 --> 01:25:12,350
also put in the LT k if we've got it

1323
01:25:23,890 --> 01:25:34,580
see fear you've here we put cypher info

1324
01:25:29,980 --> 01:25:37,160
and now it's starting to crack we could

1325
01:25:34,580 --> 01:25:38,780
say that the workshop here so coming to

1326
01:25:37,160 --> 01:25:41,240
an end now because we really wouldn't

1327
01:25:38,780 --> 01:25:43,130
have time to get all of this in maybe

1328
01:25:41,240 --> 01:25:47,780
not an hour but it will take quite a

1329
01:25:43,130 --> 01:25:49,640
long time to do this cracking but what

1330
01:25:47,780 --> 01:25:55,580
we need to do is to know how to capture

1331
01:25:49,640 --> 01:26:04,130
that traffic we should have put in the

1332
01:25:55,580 --> 01:26:07,970
minus zero option and I have the

1333
01:26:04,130 --> 01:26:10,760
encryption package here we had 165

1334
01:26:07,970 --> 01:26:19,490
packages before now we have this same

1335
01:26:10,760 --> 01:26:22,250
capture here with the 175 packages these

1336
01:26:19,490 --> 01:26:26,900
are all low energy lazy layers have been

1337
01:26:22,250 --> 01:26:29,090
converted now into ATT's because we've

1338
01:26:26,900 --> 01:26:35,179
been able to decipher everything in

1339
01:26:29,090 --> 01:26:37,640
these layers in package 164 with 3 32

1340
01:26:35,180 --> 01:26:39,700
bytes of weight we have a command and

1341
01:26:37,640 --> 01:26:41,480
the use of the handle and the

1342
01:26:39,700 --> 01:26:47,870
characteristic that we're sending to

1343
01:26:41,480 --> 01:26:49,969
this command so the program sends

1344
01:26:47,870 --> 01:26:51,980
requests of temperature and give me

1345
01:26:49,970 --> 01:26:55,310
information and all of that interaction

1346
01:26:51,980 --> 01:27:00,469
with the plate is all encrypted with a

1347
01:26:55,310 --> 01:27:02,390
pin since we haven't captured the pin

1348
01:27:00,470 --> 01:27:04,730
and everything we need we have done that

1349
01:27:02,390 --> 01:27:07,520
and everything we need to do the

1350
01:27:04,730 --> 01:27:08,809
encryption we can do that we can't do

1351
01:27:07,520 --> 01:27:11,020
this in the workshop because we wouldn't

1352
01:27:08,810 --> 01:27:17,930
have time to get through it all

1353
01:27:11,020 --> 01:27:19,940
so we have the non-encrypted laver so we

1354
01:27:17,930 --> 01:27:22,220
have their TM PF here sending this

1355
01:27:19,940 --> 01:27:24,879
characteristic and we could use that to

1356
01:27:22,220 --> 01:27:28,160
send those commands and those requests

1357
01:27:24,880 --> 01:27:30,400
and receive the information that we're

1358
01:27:28,160 --> 01:27:30,400
looking for

1359
01:27:30,960 --> 01:27:34,300
[Music]

1360
01:27:32,159 --> 01:27:46,268
so now that we've seen that we're going

1361
01:27:34,300 --> 01:27:48,789
to continue with this section here and

1362
01:27:46,269 --> 01:27:55,900
this is a what we call about the

1363
01:27:48,789 --> 01:28:01,360
spoofing the impersonation we have been

1364
01:27:55,900 --> 01:28:07,170
looking at stealing with Bluetooth going

1365
01:28:01,360 --> 01:28:10,150
into a speaker that it is possible and

1366
01:28:07,170 --> 01:28:13,949
we can make that speaker look like a

1367
01:28:10,150 --> 01:28:17,249
real one or even make it connect to you

1368
01:28:13,949 --> 01:28:20,249
this is all about spoofing and

1369
01:28:17,249 --> 01:28:20,249
impersonation

1370
01:28:22,170 --> 01:28:32,889
there was a attack that was called dirty

1371
01:28:26,289 --> 01:28:36,280
tooth that was patched at the time and

1372
01:28:32,889 --> 01:28:42,510
this was more of a blue tooth than a BL

1373
01:28:36,280 --> 01:28:45,999
e issue you could connect a speaker and

1374
01:28:42,510 --> 01:28:49,320
the speaker would have an audio profile

1375
01:28:45,999 --> 01:28:53,920
and when you were content contacted and

1376
01:28:49,320 --> 01:29:01,509
post diría the speaker would change the

1377
01:28:53,920 --> 01:29:04,119
profile you have some conditions for a

1378
01:29:01,510 --> 01:29:06,670
profile and all of a sudden it has a

1379
01:29:04,119 --> 01:29:11,348
different kind of behavior what is that

1380
01:29:06,670 --> 01:29:13,949
behavior for example is what it is able

1381
01:29:11,349 --> 01:29:17,739
to do what could it do it could extract

1382
01:29:13,949 --> 01:29:19,869
contact details when you're going in a

1383
01:29:17,739 --> 01:29:23,348
car the device contacts to the car and

1384
01:29:19,869 --> 01:29:29,768
what would person to happen to your to

1385
01:29:23,349 --> 01:29:35,260
your contacts so dirty tooth this is

1386
01:29:29,769 --> 01:29:38,519
what it would do it would allow you to

1387
01:29:35,260 --> 01:29:40,980
connect to an audio profile

1388
01:29:38,519 --> 01:29:44,039
they could extract information such as

1389
01:29:40,980 --> 01:29:46,499
calls and contacts and so on this is

1390
01:29:44,039 --> 01:29:51,239
what we are calling but this is spoofing

1391
01:29:46,499 --> 01:29:54,480
as well it's stealing a profile and if

1392
01:29:51,239 --> 01:30:00,360
you're not notified then they can take

1393
01:29:54,480 --> 01:30:03,650
information from you people in X Y have

1394
01:30:00,360 --> 01:30:07,380
done some research into this and in the

1395
01:30:03,650 --> 01:30:11,039
airdrop protocol if you're familiar with

1396
01:30:07,380 --> 01:30:16,440
that I don't know are you know does

1397
01:30:11,039 --> 01:30:21,570
anybody here know airdrop we know that

1398
01:30:16,440 --> 01:30:26,308
everything else is Android airdrop is an

1399
01:30:21,570 --> 01:30:28,679
apple protocol there was some research

1400
01:30:26,309 --> 01:30:31,469
in which they showed very many things

1401
01:30:28,679 --> 01:30:32,880
and I'm going to talk about the things

1402
01:30:31,469 --> 01:30:34,710
that we were talking about before the

1403
01:30:32,880 --> 01:30:37,230
things that are going in the air things

1404
01:30:34,710 --> 01:30:38,969
that are moving around us as you can see

1405
01:30:37,230 --> 01:30:42,089
in the image when we have our mark and

1406
01:30:38,969 --> 01:30:44,579
iPhone and iPad a home pod and so on we

1407
01:30:42,090 --> 01:30:46,440
have any kind of element I don't know if

1408
01:30:44,579 --> 01:30:50,219
you know that they connect between each

1409
01:30:46,440 --> 01:30:51,900
other when you're calling when you're

1410
01:30:50,219 --> 01:30:54,409
being called on your phone how to sit

1411
01:30:51,900 --> 01:30:57,388
your watch know that you're being called

1412
01:30:54,409 --> 01:30:59,400
there's an ID that says that you're

1413
01:30:57,389 --> 01:31:02,130
being called that the phone doesn't have

1414
01:30:59,400 --> 01:31:04,049
a card but there is a communication for

1415
01:31:02,130 --> 01:31:06,570
to them through ble

1416
01:31:04,050 --> 01:31:09,840
so that traffic can be sent and data can

1417
01:31:06,570 --> 01:31:12,389
be sent and this is what they looked

1418
01:31:09,840 --> 01:31:17,760
into and they came up with a number of

1419
01:31:12,389 --> 01:31:24,900
tools and these tools can be used to

1420
01:31:17,760 --> 01:31:28,050
detect these statuses of the different

1421
01:31:24,900 --> 01:31:33,150
devices such as the Mac iPhone iPad and

1422
01:31:28,050 --> 01:31:37,650
so on and with the status I mean things

1423
01:31:33,150 --> 01:31:41,098
like the iPhone has been unblocked it's

1424
01:31:37,650 --> 01:31:43,920
unblocked but the screen is active the

1425
01:31:41,099 --> 01:31:45,420
iPhone is calling this a call coming in

1426
01:31:43,920 --> 01:31:47,639
this call going out all that kind of

1427
01:31:45,420 --> 01:31:50,909
information which travels through the

1428
01:31:47,639 --> 01:31:51,760
air so what is this information it's all

1429
01:31:50,909 --> 01:31:53,920
leaks

1430
01:31:51,760 --> 01:31:56,890
it's all leaked some information at the

1431
01:31:53,920 --> 01:31:58,780
end of the day and if we can read it and

1432
01:31:56,890 --> 01:32:07,150
if it's out there in the air it can be

1433
01:31:58,780 --> 01:32:08,559
used you can have a look into this and

1434
01:32:07,150 --> 01:32:12,900
you'll see that some of the information

1435
01:32:08,560 --> 01:32:15,520
that were sent on occasions was a hashed

1436
01:32:12,900 --> 01:32:18,790
number telephone numbers these were

1437
01:32:15,520 --> 01:32:21,790
difficult to capture and you had to

1438
01:32:18,790 --> 01:32:24,400
spoof a device in order Draper to do

1439
01:32:21,790 --> 01:32:30,030
this as difficult you could capture

1440
01:32:24,400 --> 01:32:34,480
those hashes and you could have a small

1441
01:32:30,030 --> 01:32:36,160
database with small I say but the way

1442
01:32:34,480 --> 01:32:38,860
they have millions of possibilities but

1443
01:32:36,160 --> 01:32:43,510
it does have a plain text with all of

1444
01:32:38,860 --> 01:32:47,110
that hash information on it but what I

1445
01:32:43,510 --> 01:32:49,000
want to show you is what is moving

1446
01:32:47,110 --> 01:32:53,410
around in the air and what we can easily

1447
01:32:49,000 --> 01:33:02,260
capture so let me share the screen with

1448
01:32:53,410 --> 01:33:09,400
you once again so let me show you two

1449
01:33:02,260 --> 01:33:14,950
things this and this so that spoofing of

1450
01:33:09,400 --> 01:33:17,170
airports for example was interesting so

1451
01:33:14,950 --> 01:33:19,599
when you go to an iPhone when you go

1452
01:33:17,170 --> 01:33:20,950
near to a phone it's like magic because

1453
01:33:19,600 --> 01:33:26,110
you have to make the connection between

1454
01:33:20,950 --> 01:33:29,110
the two that's done using ble ble

1455
01:33:26,110 --> 01:33:31,120
package is sent oh and Here I am here's

1456
01:33:29,110 --> 01:33:32,559
the airport here's the iPhone and they

1457
01:33:31,120 --> 01:33:37,390
make the link it's kind of like magic

1458
01:33:32,560 --> 01:33:45,550
but it's just ble really so ble is more

1459
01:33:37,390 --> 01:33:48,850
present than you think so you can spoof

1460
01:33:45,550 --> 01:33:51,100
this with a message connecting is

1461
01:33:48,850 --> 01:33:53,520
another issue but I can show you an

1462
01:33:51,100 --> 01:33:53,520
example

1463
01:33:55,360 --> 01:34:08,360
so if you see the X wave research you'll

1464
01:33:59,060 --> 01:34:10,340
have all the scripts and everything so

1465
01:34:08,360 --> 01:34:14,950
using the pool there tool that we had

1466
01:34:10,340 --> 01:34:14,950
from before I can show you something now

1467
01:34:21,390 --> 01:34:32,100
for example we can do something with the

1468
01:34:25,060 --> 01:34:35,440
air pods I see nothing to you now hi

1469
01:34:32,100 --> 01:34:37,410
let's see if it works yeah I think it's

1470
01:34:35,440 --> 01:34:41,250
working has the Bluetooth connection

1471
01:34:37,410 --> 01:34:47,860
gone in yes it has but I need to reboot

1472
01:34:41,250 --> 01:34:50,020
them the device just a minute so you get

1473
01:34:47,860 --> 01:34:52,980
the idea we can catch everything that

1474
01:34:50,020 --> 01:34:57,760
circulating around in the air

1475
01:34:52,980 --> 01:34:59,830
we can send a notification and capture

1476
01:34:57,760 --> 01:35:06,820
that notification of like I'm an airport

1477
01:34:59,830 --> 01:35:10,870
here I am and I want to show you what I

1478
01:35:06,820 --> 01:35:14,139
showed you on the presentation the

1479
01:35:10,870 --> 01:35:18,370
devices if any of them make themselves

1480
01:35:14,140 --> 01:35:22,720
available I said I mentioned Mac but in

1481
01:35:18,370 --> 01:35:25,780
match actually they're quite random you

1482
01:35:22,720 --> 01:35:29,220
can change from iOS different versions I

1483
01:35:25,780 --> 01:35:29,219
can't remember them exactly right now

1484
01:35:47,400 --> 01:35:59,299
my hobby yell a lot dollar we hadn't

1485
01:35:54,440 --> 01:35:59,299
achieved a connection with the adapter

1486
01:36:31,979 --> 01:36:37,569
there you have it simply because it's

1487
01:36:35,019 --> 01:36:40,300
close to the adapter it's sending a

1488
01:36:37,569 --> 01:36:42,879
message and the device is saying these

1489
01:36:40,300 --> 01:36:45,149
are not your airports but they need to

1490
01:36:42,879 --> 01:36:48,129
be connected this is just an example

1491
01:36:45,149 --> 01:36:49,959
that information and messages are being

1492
01:36:48,129 --> 01:36:55,239
sent through the air mainly around

1493
01:36:49,959 --> 01:36:57,459
status so the invitation ocation work

1494
01:36:55,239 --> 01:37:01,629
that I was talking about went into much

1495
01:36:57,459 --> 01:37:04,780
more detail but we can also see another

1496
01:37:01,629 --> 01:37:09,239
thing here which is like reading the

1497
01:37:04,780 --> 01:37:09,239
state of the devices

1498
01:37:17,559 --> 01:37:24,170
so now we have an iPhone and an iPad

1499
01:37:20,119 --> 01:37:29,539
around here they're right here in the

1500
01:37:24,170 --> 01:37:36,380
first row I'm changing the status I open

1501
01:37:29,539 --> 01:37:37,940
the screen and a blog now it's on/off if

1502
01:37:36,380 --> 01:37:41,840
i unblock then it comes back to your

1503
01:37:37,940 --> 01:37:44,058
home screen you see that it's being

1504
01:37:41,840 --> 01:37:48,139
identified as in the iPad it can be a

1505
01:37:44,059 --> 01:37:52,179
mixture sometimes maybe somebody might

1506
01:37:48,139 --> 01:37:55,070
call me now so I'm going to turn it off

1507
01:37:52,179 --> 01:37:56,749
so if somebody's calling then you'll see

1508
01:37:55,070 --> 01:38:01,389
that there's a call coming in or a call

1509
01:37:56,749 --> 01:38:04,190
going out and so on these are all ble

1510
01:38:01,389 --> 01:38:06,559
packets that can be read in the air and

1511
01:38:04,190 --> 01:38:09,919
information to be taken from them it's

1512
01:38:06,559 --> 01:38:11,539
all around us and in this case it's not

1513
01:38:09,920 --> 01:38:14,780
encrypted because it's of little

1514
01:38:11,539 --> 01:38:16,820
importance but more important things are

1515
01:38:14,780 --> 01:38:24,920
encrypted but they are actually leaks of

1516
01:38:16,820 --> 01:38:27,440
course and yeah just almost we're

1517
01:38:24,920 --> 01:38:32,300
drawing to them conclusion we're almost

1518
01:38:27,440 --> 01:38:35,058
done and let's just talk about we have

1519
01:38:32,300 --> 01:38:36,920
to take from this workshop there's a lot

1520
01:38:35,059 --> 01:38:39,349
of fiddling there's a lot of hardware

1521
01:38:36,920 --> 01:38:41,119
some of you will like it and others will

1522
01:38:39,349 --> 01:38:42,769
prepare itself where and not really like

1523
01:38:41,119 --> 01:38:46,039
this because they usually like to fiddle

1524
01:38:42,769 --> 01:38:47,599
around with stuff and erst and whereas

1525
01:38:46,039 --> 01:38:49,639
some others will say oh no no I really

1526
01:38:47,599 --> 01:38:51,320
like this I want to start with v-a-l-e

1527
01:38:49,639 --> 01:38:53,630
it's really interesting there aren't

1528
01:38:51,320 --> 01:38:57,499
really cool tools so it's just a matter

1529
01:38:53,630 --> 01:38:59,920
of having some clear conceptions and it

1530
01:38:57,499 --> 01:39:02,360
it will be easy for you to grow of this

1531
01:38:59,920 --> 01:39:05,239
and the first things that you have to

1532
01:39:02,360 --> 01:39:08,329
take from here is that encrypted

1533
01:39:05,239 --> 01:39:09,678
connections when there is sensitive

1534
01:39:08,329 --> 01:39:12,349
information and it's usually the case

1535
01:39:09,679 --> 01:39:14,719
and this kind of devices we were playing

1536
01:39:12,349 --> 01:39:16,999
with a simulated bat lock but could you

1537
01:39:14,719 --> 01:39:19,780
picture if this happened with a device

1538
01:39:16,999 --> 01:39:22,070
that has say for example health data and

1539
01:39:19,780 --> 01:39:24,739
that information is just travelling

1540
01:39:22,070 --> 01:39:26,539
freely around the air so that is

1541
01:39:24,739 --> 01:39:28,398
sensitive information and it

1542
01:39:26,539 --> 01:39:30,889
it is or it should be much more

1543
01:39:28,399 --> 01:39:33,739
protected than other things now read

1544
01:39:30,889 --> 01:39:37,309
also depends if this backlog was a read

1545
01:39:33,739 --> 01:39:39,678
lock on where it was for it to be more

1546
01:39:37,309 --> 01:39:44,059
or less sensitive now you can do replay

1547
01:39:39,679 --> 01:39:46,039
if the data are fixed and nor variable

1548
01:39:44,059 --> 01:39:48,709
so we were talking about sniffing days

1549
01:39:46,039 --> 01:39:51,199
that the value was always the same and

1550
01:39:48,709 --> 01:39:54,079
then it did something when it identified

1551
01:39:51,199 --> 01:39:56,358
that value this could be interesting but

1552
01:39:54,079 --> 01:40:00,049
you would need to study the logic of

1553
01:39:56,359 --> 01:40:02,689
that application it's a reverse engineer

1554
01:40:00,049 --> 01:40:05,409
engineering you can always do hijacking

1555
01:40:02,689 --> 01:40:08,389
which is a bit like jamming a little

1556
01:40:05,409 --> 01:40:12,280
service denial and then you can spoof

1557
01:40:08,389 --> 01:40:14,629
that access address and read

1558
01:40:12,280 --> 01:40:17,209
characteristics or send commands through

1559
01:40:14,629 --> 01:40:20,809
those characteristics now main concepts

1560
01:40:17,209 --> 01:40:24,679
who have seen channel map hop how bill-e

1561
01:40:20,809 --> 01:40:27,349
works in which channels it is the

1562
01:40:24,679 --> 01:40:30,049
characteristics because ideas a we all

1563
01:40:27,349 --> 01:40:32,679
depend on them be it to write to read

1564
01:40:30,049 --> 01:40:34,969
for different devices because I daresay

1565
01:40:32,679 --> 01:40:40,369
the connections are you going to scan

1566
01:40:34,969 --> 01:40:42,409
are connectable but of course you need

1567
01:40:40,369 --> 01:40:44,598
to know how to work with them know the

1568
01:40:42,409 --> 01:40:49,728
logics know the security of those

1569
01:40:44,599 --> 01:40:52,189
devices and then you have to also take

1570
01:40:49,729 --> 01:40:55,789
from here that you can break the

1571
01:40:52,189 --> 01:40:58,010
encryption with an EC six digit PIN at

1572
01:40:55,789 --> 01:41:03,309
by sniffing everything that's necessary

1573
01:40:58,010 --> 01:41:05,869
for example in W apa2 you have to cat

1574
01:41:03,309 --> 01:41:08,059
sniffing handshake so you could crack it

1575
01:41:05,869 --> 01:41:12,429
and this is very similar but with

1576
01:41:08,059 --> 01:41:15,260
pairing and also with the data is

1577
01:41:12,429 --> 01:41:16,699
encryption starting yes it is starting

1578
01:41:15,260 --> 01:41:18,229
and then you get a temporary password

1579
01:41:16,699 --> 01:41:21,018
and then you get the long-term and

1580
01:41:18,229 --> 01:41:27,289
short-term passwords and you can decrypt

1581
01:41:21,019 --> 01:41:30,049
the packet so this is a quite new world

1582
01:41:27,289 --> 01:41:32,119
it's true that there are many people who

1583
01:41:30,049 --> 01:41:32,650
are developing a lot of devices and

1584
01:41:32,119 --> 01:41:35,949
video

1585
01:41:32,650 --> 01:41:38,769
aniseh was saying in this field there

1586
01:41:35,949 --> 01:41:41,129
are many companies that do more or less

1587
01:41:38,770 --> 01:41:44,469
what they want really because they

1588
01:41:41,130 --> 01:41:46,900
program and they code things the way

1589
01:41:44,469 --> 01:41:48,070
they want and sometimes they think about

1590
01:41:46,900 --> 01:41:50,199
security and sometimes they

1591
01:41:48,070 --> 01:41:54,940
unfortunately don't think about security

1592
01:41:50,199 --> 01:41:58,780
so these tools are going to allow you to

1593
01:41:54,940 --> 01:42:00,849
audit at least your devices please also

1594
01:41:58,780 --> 01:42:03,449
make sure that you respect the rules of

1595
01:42:00,850 --> 01:42:05,920
the game and the you do not go over

1596
01:42:03,449 --> 01:42:07,690
anything that you shouldn't go over and

1597
01:42:05,920 --> 01:42:10,530
don't do anything you shouldn't be doing

1598
01:42:07,690 --> 01:42:14,500
but for example there are companies

1599
01:42:10,530 --> 01:42:18,759
which are already hiring people to have

1600
01:42:14,500 --> 01:42:21,340
BOE audits to see if their wireless

1601
01:42:18,760 --> 01:42:24,760
communications are secure if the

1602
01:42:21,340 --> 01:42:29,440
applications logic is secure as well for

1603
01:42:24,760 --> 01:42:33,640
transmissions so obviously this is quite

1604
01:42:29,440 --> 01:42:35,320
present nowadays so I think this is all

1605
01:42:33,640 --> 01:42:37,210
from me I just wanted to share with you

1606
01:42:35,320 --> 01:42:38,920
a few interesting links especially for

1607
01:42:37,210 --> 01:42:41,739
those of you who are following us on

1608
01:42:38,920 --> 01:42:44,560
streaming so you can follow this again

1609
01:42:41,739 --> 01:42:46,809
the video and I think will be available

1610
01:42:44,560 --> 01:42:53,280
from tonight onwards so if you have any

1611
01:42:46,810 --> 01:42:55,630
question now oh the previous slide yet

1612
01:42:53,280 --> 01:42:58,509
you will find the video afterwards don't

1613
01:42:55,630 --> 01:43:03,429
worry okay thank you if you have any

1614
01:42:58,510 --> 01:43:06,239
questions just let me know this seems to

1615
01:43:03,429 --> 01:43:06,239
be a question over there

1616
01:43:14,550 --> 01:43:21,639
well first of all thank you for your

1617
01:43:17,500 --> 01:43:25,360
presentation so I couldn't see you there

1618
01:43:21,639 --> 01:43:28,469
you are you've shown a flowchart when

1619
01:43:25,360 --> 01:43:32,860
you were talking about hijacking and

1620
01:43:28,469 --> 01:43:35,860
there was a smartphone and a BOE device

1621
01:43:32,860 --> 01:43:37,690
I was wondering the applications that

1622
01:43:35,860 --> 01:43:41,759
communicate from the smartphone with the

1623
01:43:37,690 --> 01:43:45,250
BOE device they usually also have HTTPS

1624
01:43:41,760 --> 01:43:50,409
connections against an API you mean on

1625
01:43:45,250 --> 01:43:54,280
Wi-Fi yeah how would you approach a red

1626
01:43:50,409 --> 01:43:59,049
team audit when there's an API a

1627
01:43:54,280 --> 01:44:01,659
smartphone and a BOE device what would

1628
01:43:59,050 --> 01:44:03,850
be the objective because it depends for

1629
01:44:01,659 --> 01:44:06,099
example if you do reverse engineering of

1630
01:44:03,850 --> 01:44:09,489
the communication protocol of all these

1631
01:44:06,100 --> 01:44:12,850
devices via the API of a smartphone or

1632
01:44:09,489 --> 01:44:14,799
the the smartphone with the BOE the API

1633
01:44:12,850 --> 01:44:16,929
can send requests to the smartphone and

1634
01:44:14,800 --> 01:44:20,260
this in turn send message to the BOE

1635
01:44:16,929 --> 01:44:23,980
device so what are you saying is that

1636
01:44:20,260 --> 01:44:25,179
you get orders through HTTPS through to

1637
01:44:23,980 --> 01:44:27,489
the application then through the

1638
01:44:25,179 --> 01:44:29,020
application to the BOE against the

1639
01:44:27,489 --> 01:44:33,218
device that we want to control or we are

1640
01:44:29,020 --> 01:44:35,550
controlling right so HTTP would be more

1641
01:44:33,219 --> 01:44:39,909
strengthened so we would first of all

1642
01:44:35,550 --> 01:44:42,940
analyze that but the weakest link here

1643
01:44:39,909 --> 01:44:45,190
would be when you connect the device to

1644
01:44:42,940 --> 01:44:47,320
be Lily because if that connection

1645
01:44:45,190 --> 01:44:49,030
is not encrypted then you would attack

1646
01:44:47,320 --> 01:44:51,880
the B or e part because you can see

1647
01:44:49,030 --> 01:44:54,130
what's being sent through HTTPS but if

1648
01:44:51,880 --> 01:44:57,219
the application is Britch as you were

1649
01:44:54,130 --> 01:44:57,820
saying the device is rich and what I

1650
01:44:57,219 --> 01:45:01,690
gave

1651
01:44:57,820 --> 01:45:04,360
through a Wi-Fi channel I am sending or

1652
01:45:01,690 --> 01:45:06,969
resending through another channel and if

1653
01:45:04,360 --> 01:45:09,790
this is not encrypted and by the way pin

1654
01:45:06,969 --> 01:45:13,150
is not necessarily secure but if you do

1655
01:45:09,790 --> 01:45:15,929
if you pair once then they have to sniff

1656
01:45:13,150 --> 01:45:18,638
your pairing because when we talk about

1657
01:45:15,929 --> 01:45:20,949
decrypting where we talk about sniffing

1658
01:45:18,639 --> 01:45:24,400
the pairing but anyway if the BOE

1659
01:45:20,949 --> 01:45:26,320
channel is not secure then those

1660
01:45:24,400 --> 01:45:28,809
commands that are being sent through HD

1661
01:45:26,320 --> 01:45:30,759
TPS you would attack that and especially

1662
01:45:28,810 --> 01:45:34,360
if you are a team you have three vectors

1663
01:45:30,760 --> 01:45:36,940
digital physical and social or social

1664
01:45:34,360 --> 01:45:38,889
engineering human factor world so you

1665
01:45:36,940 --> 01:45:40,690
would have to go to the most physical

1666
01:45:38,890 --> 01:45:42,310
side you'll have to be close to that

1667
01:45:40,690 --> 01:45:44,410
communications because that would be the

1668
01:45:42,310 --> 01:45:47,590
weakest link and that's where the

1669
01:45:44,410 --> 01:45:50,170
attacker would look for okay and I have

1670
01:45:47,590 --> 01:45:51,970
another question please so for example

1671
01:45:50,170 --> 01:45:55,570
we are studying the communication

1672
01:45:51,970 --> 01:45:58,540
protocol and we unfair from that the

1673
01:45:55,570 --> 01:46:01,990
flow chart and the status chart but

1674
01:45:58,540 --> 01:46:04,000
there is one thing within BL e devices

1675
01:46:01,990 --> 01:46:06,700
such as scooters or bicycles this

1676
01:46:04,000 --> 01:46:10,000
usually a SIM card so and that's what we

1677
01:46:06,700 --> 01:46:12,130
didn't really get because that side

1678
01:46:10,000 --> 01:46:15,130
which is a telecommunication side how

1679
01:46:12,130 --> 01:46:20,380
would you audit that you mean for the

1680
01:46:15,130 --> 01:46:23,230
sim card right well we would have to

1681
01:46:20,380 --> 01:46:27,310
really see what type of communication is

1682
01:46:23,230 --> 01:46:29,950
being stablished see if it's 3G GSM 4G

1683
01:46:27,310 --> 01:46:32,110
and so depending on the type of

1684
01:46:29,950 --> 01:46:34,330
communication and we will need which

1685
01:46:32,110 --> 01:46:36,490
test we have to associate to each

1686
01:46:34,330 --> 01:46:38,890
because obviously for G has higher

1687
01:46:36,490 --> 01:46:43,240
security so we need to run some tests

1688
01:46:38,890 --> 01:46:45,550
and we would have to choose a

1689
01:46:43,240 --> 01:46:47,110
methodology for those tests and then

1690
01:46:45,550 --> 01:46:49,150
start from there

1691
01:46:47,110 --> 01:46:50,920
so if I have understood correctly is the

1692
01:46:49,150 --> 01:46:53,200
same scenario that we had before but

1693
01:46:50,920 --> 01:46:55,360
with a SIM card with an adit thin card

1694
01:46:53,200 --> 01:46:57,849
so just take into account that the

1695
01:46:55,360 --> 01:47:01,299
channel if you coming out through a

1696
01:46:57,850 --> 01:47:06,160
mobile network a 4G network you are

1697
01:47:01,300 --> 01:47:09,600
getting traffic HTTP traffic and let's

1698
01:47:06,160 --> 01:47:13,360
say it's robust and that there's no

1699
01:47:09,600 --> 01:47:15,490
weaknesses so it would be the same thing

1700
01:47:13,360 --> 01:47:17,650
because the the weakest link would be

1701
01:47:15,490 --> 01:47:20,050
the connection with BOE how are you

1702
01:47:17,650 --> 01:47:22,179
going to audit that then then you would

1703
01:47:20,050 --> 01:47:24,130
have to first of all determine the

1704
01:47:22,180 --> 01:47:28,750
encryption that the mobile communication

1705
01:47:24,130 --> 01:47:30,340
is using with which layer 3G 4G GSM and

1706
01:47:28,750 --> 01:47:31,690
that's where you can run a series of

1707
01:47:30,340 --> 01:47:33,790
tests as well because obviously that

1708
01:47:31,690 --> 01:47:35,500
could be a weakest link as well in that

1709
01:47:33,790 --> 01:47:39,630
layer thank you very much

1710
01:47:35,500 --> 01:47:39,630
any other questions there was one here

1711
01:47:44,219 --> 01:47:54,159
hello yeah my question is if you are

1712
01:47:50,469 --> 01:47:57,010
under attack it depends on the device

1713
01:47:54,159 --> 01:47:58,809
that's being spoofed or depending on

1714
01:47:57,010 --> 01:48:04,540
that device they will get different

1715
01:47:58,810 --> 01:48:06,610
information right yeah so from that

1716
01:48:04,540 --> 01:48:08,140
attack how much information can be

1717
01:48:06,610 --> 01:48:10,259
attack again or what kind of information

1718
01:48:08,140 --> 01:48:13,210
can they get pictures

1719
01:48:10,260 --> 01:48:14,679
it depends for example with dirty twos

1720
01:48:13,210 --> 01:48:18,870
and by the way for you to know we have a

1721
01:48:14,679 --> 01:48:22,929
look at it at what they did was to spoof

1722
01:48:18,870 --> 01:48:24,880
at speaker and it was an audio profile

1723
01:48:22,929 --> 01:48:26,440
and you could hear music this was blue -

1724
01:48:24,880 --> 01:48:28,179
it's not really by the way then they

1725
01:48:26,440 --> 01:48:31,599
would change the profile and will become

1726
01:48:28,179 --> 01:48:33,909
a hands-off device and hands of devices

1727
01:48:31,600 --> 01:48:37,000
have different functionalities such as

1728
01:48:33,909 --> 01:48:41,259
for example extracting your contacts and

1729
01:48:37,000 --> 01:48:44,890
your co locks and even the devices that

1730
01:48:41,260 --> 01:48:46,510
were on your contact list so there they

1731
01:48:44,890 --> 01:48:48,610
could do that but on the examples that

1732
01:48:46,510 --> 01:48:50,949
we've been seeing which is sniffing raw

1733
01:48:48,610 --> 01:48:53,500
traffic and then we have to apply the

1734
01:48:50,949 --> 01:48:55,389
different layers with white chaff to see

1735
01:48:53,500 --> 01:48:58,989
exactly what we are sniffing and that's

1736
01:48:55,390 --> 01:49:03,670
really what is complex so when we start

1737
01:48:58,989 --> 01:49:05,320
when we are sniffing stuff through our

1738
01:49:03,670 --> 01:49:06,520
mobile application then we have an

1739
01:49:05,320 --> 01:49:08,080
advantage because we have the

1740
01:49:06,520 --> 01:49:09,940
application ourselves we know what we're

1741
01:49:08,080 --> 01:49:12,280
doing and then we can interpret that

1742
01:49:09,940 --> 01:49:14,110
traffic because we COF press this button

1743
01:49:12,280 --> 01:49:16,179
and then this has been sent through

1744
01:49:14,110 --> 01:49:18,309
Bluetooth so we see exactly what can be

1745
01:49:16,179 --> 01:49:20,230
extracted but it really depends on how

1746
01:49:18,310 --> 01:49:23,140
you approach it so if we're talking

1747
01:49:20,230 --> 01:49:25,480
about spoofing and if that device has

1748
01:49:23,140 --> 01:49:28,060
trusted you anything that you can

1749
01:49:25,480 --> 01:49:30,428
instruct in terms of functionalities

1750
01:49:28,060 --> 01:49:32,650
from that device can be more or less it

1751
01:49:30,429 --> 01:49:37,350
really depends but are with dead - for

1752
01:49:32,650 --> 01:49:44,170
example its contacts and cold locks and

1753
01:49:37,350 --> 01:49:45,940
say I spoof I scooter can I can I then

1754
01:49:44,170 --> 01:49:51,340
use a different profile can I change the

1755
01:49:45,940 --> 01:49:53,980
profile no that is a different thing say

1756
01:49:51,340 --> 01:49:56,080
you spoof airports or headphones

1757
01:49:53,980 --> 01:49:58,239
not even spoofing them and I think we

1758
01:49:56,080 --> 01:49:59,050
aren't mixing up spoofing and hijacking

1759
01:49:58,239 --> 01:50:02,650
here yeah

1760
01:49:59,050 --> 01:50:04,870
if you hijack a headphone connection

1761
01:50:02,650 --> 01:50:08,650
then you can maybe turn the volume up or

1762
01:50:04,870 --> 01:50:10,630
change the song so depending on the

1763
01:50:08,650 --> 01:50:12,820
device and its functionalities and you

1764
01:50:10,630 --> 01:50:19,560
can do more or less things thank you

1765
01:50:12,820 --> 01:50:22,299
very much any other questions

1766
01:50:19,560 --> 01:50:26,620
no I think we're almost done then oh

1767
01:50:22,300 --> 01:50:31,600
there we go there's another question my

1768
01:50:26,620 --> 01:50:34,719
question is can we sniff BL e modules

1769
01:50:31,600 --> 01:50:42,910
with a normal or classic Bluetooth

1770
01:50:34,719 --> 01:50:47,890
module yeah you mean maybe not with

1771
01:50:42,910 --> 01:50:50,920
every module it depends on the

1772
01:50:47,890 --> 01:50:55,000
characteristics of the device these

1773
01:50:50,920 --> 01:50:56,830
little plates thought for something else

1774
01:50:55,000 --> 01:50:58,540
but but you can do with these plates

1775
01:50:56,830 --> 01:51:00,820
though with this device I've got here

1776
01:50:58,540 --> 01:51:03,460
that little one that I've brought it

1777
01:51:00,820 --> 01:51:05,949
depends it depends on the on the

1778
01:51:03,460 --> 01:51:09,250
features it depends on the Bluetooth

1779
01:51:05,949 --> 01:51:12,699
version it has to be 4.0 or higher

1780
01:51:09,250 --> 01:51:14,920
because vo he is from dot zero 4.0 or

1781
01:51:12,699 --> 01:51:19,690
higher but if it's older than that then

1782
01:51:14,920 --> 01:51:23,560
you won't be able to do it thank you any

1783
01:51:19,690 --> 01:51:25,660
other questions I thought there wouldn't

1784
01:51:23,560 --> 01:51:29,320
the wouldn't be questions and there are

1785
01:51:25,660 --> 01:51:31,559
loads of questions hi first of all thank

1786
01:51:29,320 --> 01:51:34,360
you very much for this presentation and

1787
01:51:31,560 --> 01:51:35,739
picking up from what my colleague was

1788
01:51:34,360 --> 01:51:40,410
saying because we've been doing some

1789
01:51:35,739 --> 01:51:44,559
research on scooters motorbikes etc and

1790
01:51:40,410 --> 01:51:46,769
as he was saying obviously there's

1791
01:51:44,560 --> 01:51:49,900
there's some possibility of having and

1792
01:51:46,770 --> 01:51:51,640
more secure connections via different

1793
01:51:49,900 --> 01:51:57,389
media and I wanted to ask you have you

1794
01:51:51,640 --> 01:52:02,199
ever worked with smart locks because I

1795
01:51:57,390 --> 01:52:04,880
infer that the in that case you don't

1796
01:52:02,199 --> 01:52:09,780
have that possibility or do you

1797
01:52:04,880 --> 01:52:12,179
because if you say have an inhibitor a

1798
01:52:09,780 --> 01:52:13,559
3G inhibitor for example then that

1799
01:52:12,179 --> 01:52:15,690
person couldn't be able to get into

1800
01:52:13,559 --> 01:52:23,280
their home for example unless they had

1801
01:52:15,690 --> 01:52:29,969
something so are those smart looks more

1802
01:52:23,280 --> 01:52:33,259
centered on ble protocol well yeah we

1803
01:52:29,969 --> 01:52:37,130
can find the kind of smart locks yeah

1804
01:52:33,260 --> 01:52:40,829
there's a group of smart looks that

1805
01:52:37,130 --> 01:52:43,050
definitely focused on this and how do

1806
01:52:40,829 --> 01:52:46,110
they do it well the protocol could be

1807
01:52:43,050 --> 01:52:47,550
encrypted of course or it should relieve

1808
01:52:46,110 --> 01:52:51,179
because obviously there's something

1809
01:52:47,550 --> 01:52:53,280
quite sensitive because our example was

1810
01:52:51,179 --> 01:52:56,849
quite easy and it was encrypted and then

1811
01:52:53,280 --> 01:52:59,099
decrypted it will depend on the

1812
01:52:56,849 --> 01:53:02,729
computing abilities of the snap-loc as

1813
01:52:59,099 --> 01:53:06,119
well we know that the pin is not secure

1814
01:53:02,729 --> 01:53:08,610
but then obviously you have to be in you

1815
01:53:06,119 --> 01:53:10,228
have to take into account pairing

1816
01:53:08,610 --> 01:53:12,570
sniffing and many other considerations

1817
01:53:10,229 --> 01:53:16,739
so it's almost being at the right time

1818
01:53:12,570 --> 01:53:19,558
in the right place but then how this can

1819
01:53:16,739 --> 01:53:21,869
be applied it's very different if this

1820
01:53:19,559 --> 01:53:25,590
channel can be strengthened and it can

1821
01:53:21,869 --> 01:53:28,679
become something just like HTTP in a

1822
01:53:25,590 --> 01:53:37,139
different environment for example yeah

1823
01:53:28,679 --> 01:53:38,720
thank you no more questions okay well

1824
01:53:37,139 --> 01:53:48,659
thank you very much

1825
01:53:38,720 --> 01:53:48,659
[Music]

