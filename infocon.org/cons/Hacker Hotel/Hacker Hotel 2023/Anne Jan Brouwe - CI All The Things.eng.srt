1
00:00:01,220 --> 00:00:05,700
uh hello my name is anion Brower I am a

2
00:00:05,700 --> 00:00:09,300
developer and have been for the last 20

3
00:00:09,300 --> 00:00:11,219
years professionally I started

4
00:00:11,219 --> 00:00:13,259
programming when I was six and then I

5
00:00:13,259 --> 00:00:15,960
got a commodore 64. and those cassette

6
00:00:15,960 --> 00:00:18,420
types of floppies are nice but very

7
00:00:18,420 --> 00:00:22,619
expensive so I went to this library on

8
00:00:22,619 --> 00:00:25,380
my bike got some books with basic code

9
00:00:25,380 --> 00:00:28,380
started typing started fixing the books

10
00:00:28,380 --> 00:00:29,960
with pencils

11
00:00:29,960 --> 00:00:32,340
because there were many typos in there

12
00:00:32,340 --> 00:00:35,399
as well and yeah that's kind of how I

13
00:00:35,399 --> 00:00:37,500
started programming and always kept on

14
00:00:37,500 --> 00:00:38,460
doing it

15
00:00:38,460 --> 00:00:40,980
um they do a completely different study

16
00:00:40,980 --> 00:00:43,860
because I thought well when I when I'm

17
00:00:43,860 --> 00:00:46,500
finished with uh studying it's going to

18
00:00:46,500 --> 00:00:49,320
be 2000 so the Millennium book will be

19
00:00:49,320 --> 00:00:51,059
solved and there will be no work for all

20
00:00:51,059 --> 00:00:53,340
those ID people

21
00:00:53,340 --> 00:00:55,879
good idea anyway

22
00:00:55,879 --> 00:00:59,940
uh 2021 I started working as a developer

23
00:00:59,940 --> 00:01:03,660
for C plus plus then iPhone PHP all

24
00:01:03,660 --> 00:01:05,220
kinds of languages

25
00:01:05,220 --> 00:01:08,159
and never stopped going uh also been

26
00:01:08,159 --> 00:01:09,960
doing a lot of Open Source stuff with

27
00:01:09,960 --> 00:01:12,540
batch team cutie pass and some demo

28
00:01:12,540 --> 00:01:14,939
scene stuff which in my case is also

29
00:01:14,939 --> 00:01:17,280
open source it's not mandatory in a demo

30
00:01:17,280 --> 00:01:19,320
scene but I kind of like doing it that

31
00:01:19,320 --> 00:01:21,240
way

32
00:01:21,240 --> 00:01:24,420
um so where are we here for

33
00:01:24,420 --> 00:01:26,820
continuous integration and what is

34
00:01:26,820 --> 00:01:28,920
continuous integration well according to

35
00:01:28,920 --> 00:01:32,040
Wikipedia Grady Bush said in 1991

36
00:01:32,040 --> 00:01:34,080
continuous integration is the practice

37
00:01:34,080 --> 00:01:35,880
of emerging all developers working

38
00:01:35,880 --> 00:01:38,759
copies into a shared Mainline

39
00:01:38,759 --> 00:01:41,100
several times a day well apparently he

40
00:01:41,100 --> 00:01:43,740
didn't say this several times a day but

41
00:01:43,740 --> 00:01:45,479
we'll keep the quote

42
00:01:45,479 --> 00:01:49,320
um what I think CIO is it is a way of

43
00:01:49,320 --> 00:01:51,960
reducing regression so

44
00:01:51,960 --> 00:01:54,540
things that used to work and all of a

45
00:01:54,540 --> 00:01:56,880
sudden stopped working by making sure

46
00:01:56,880 --> 00:01:58,560
changes don't accidentally break

47
00:01:58,560 --> 00:02:02,100
existing features and contracts

48
00:02:02,100 --> 00:02:06,240
that was during a lunch conversation and

49
00:02:06,240 --> 00:02:08,459
something else I really don't like the

50
00:02:08,459 --> 00:02:10,800
continuous integration term I prefer

51
00:02:10,800 --> 00:02:14,940
continuous Improvement because

52
00:02:15,180 --> 00:02:17,280
that's that's what it's all about in my

53
00:02:17,280 --> 00:02:20,280
opinion so why do we do it

54
00:02:20,280 --> 00:02:21,900
well

55
00:02:21,900 --> 00:02:24,720
the first thing said merging it several

56
00:02:24,720 --> 00:02:26,780
times a day into a main line

57
00:02:26,780 --> 00:02:29,280
as soon as people start coding start

58
00:02:29,280 --> 00:02:33,180
working you get a separation of both and

59
00:02:33,180 --> 00:02:34,680
sometimes it's hard to integrate those

60
00:02:34,680 --> 00:02:37,560
together and you want to keep that as

61
00:02:37,560 --> 00:02:40,379
easy as possible so small changes

62
00:02:40,379 --> 00:02:43,319
several times a day is better than one

63
00:02:43,319 --> 00:02:48,480
Bitcoin huge master plan of danger

64
00:02:48,480 --> 00:02:52,379
um also UCI to prevent regression so

65
00:02:52,379 --> 00:02:54,900
something that used to work you try

66
00:02:54,900 --> 00:02:56,819
fixing something on completely opposite

67
00:02:56,819 --> 00:02:58,920
side of the code and something there

68
00:02:58,920 --> 00:03:01,080
stops worrying you want to at least

69
00:03:01,080 --> 00:03:02,519
detect that

70
00:03:02,519 --> 00:03:04,379
and the other thing is proving that your

71
00:03:04,379 --> 00:03:07,140
code works because well it works for my

72
00:03:07,140 --> 00:03:09,360
machine it's not an excuse you can use

73
00:03:09,360 --> 00:03:11,640
in actual work

74
00:03:11,640 --> 00:03:12,959
so

75
00:03:12,959 --> 00:03:15,780
how do you do it well step one you need

76
00:03:15,780 --> 00:03:17,159
the Repository

77
00:03:17,159 --> 00:03:20,700
without a single source of truth truth

78
00:03:20,700 --> 00:03:23,519
so your code repository you can't have

79
00:03:23,519 --> 00:03:26,040
continuous Improvement or integration in

80
00:03:26,040 --> 00:03:27,060
my opinion

81
00:03:27,060 --> 00:03:29,220
you need to have tests for your code

82
00:03:29,220 --> 00:03:32,040
because having code having code running

83
00:03:32,040 --> 00:03:34,140
yeah that's fun but

84
00:03:34,140 --> 00:03:36,239
what is it doing what is it running is

85
00:03:36,239 --> 00:03:37,739
it working the same on my machine or

86
00:03:37,739 --> 00:03:38,760
somewhere else

87
00:03:38,760 --> 00:03:41,640
you also need automate builds this is

88
00:03:41,640 --> 00:03:43,379
not always the case

89
00:03:43,379 --> 00:03:46,379
but in most cases it is an automated

90
00:03:46,379 --> 00:03:49,260
testing and one thing in my opinion

91
00:03:49,260 --> 00:03:51,060
that's really important

92
00:03:51,060 --> 00:03:54,239
always create a test for a bug fix even

93
00:03:54,239 --> 00:03:57,840
more so do it test driven so first

94
00:03:57,840 --> 00:04:01,260
you have your problem someone says oh if

95
00:04:01,260 --> 00:04:03,420
I press this button and on that button

96
00:04:03,420 --> 00:04:05,760
and then that button it breaks so you

97
00:04:05,760 --> 00:04:07,920
then write some test code that does the

98
00:04:07,920 --> 00:04:10,560
clickies make sure that yes it fails

99
00:04:10,560 --> 00:04:13,799
that do your fix I see that it doesn't

100
00:04:13,799 --> 00:04:17,220
fail anymore hey now you have

101
00:04:17,220 --> 00:04:18,858
um in Dutch

102
00:04:18,858 --> 00:04:22,400
so you have I forgot the word

103
00:04:22,400 --> 00:04:25,740
yeah something like that covered the

104
00:04:25,740 --> 00:04:29,280
case that it actually works as you know

105
00:04:29,280 --> 00:04:32,280
you have a proof of work so what are

106
00:04:32,280 --> 00:04:34,680
some common CI platforms well

107
00:04:34,680 --> 00:04:38,419
a list most of you know gitlab GitHub

108
00:04:38,419 --> 00:04:40,620
Jenkins Travis

109
00:04:40,620 --> 00:04:43,259
all kinds of stuff

110
00:04:43,259 --> 00:04:44,520
um

111
00:04:44,520 --> 00:04:46,919
and they have their own Ci's

112
00:04:46,919 --> 00:04:49,380
Travis I wouldn't advise anymore it's

113
00:04:49,380 --> 00:04:51,780
not available for open source it used to

114
00:04:51,780 --> 00:04:53,639
be free for open source so if you have

115
00:04:53,639 --> 00:04:57,600
the public repository of code with a OC

116
00:04:57,600 --> 00:04:59,880
approved license you could use all their

117
00:04:59,880 --> 00:05:02,780
stuff for free not anymore

118
00:05:02,780 --> 00:05:08,460
so let's do some CI something very basic

119
00:05:08,460 --> 00:05:11,699
we make a folder we go into that folder

120
00:05:11,699 --> 00:05:15,840
we add some markdown so I like Ci

121
00:05:15,840 --> 00:05:19,139
because it helps put it in it first

122
00:05:19,139 --> 00:05:20,400
commit

123
00:05:20,400 --> 00:05:25,198
upload it push and

124
00:05:27,900 --> 00:05:31,758
um am I missing something

125
00:05:32,100 --> 00:05:35,520
um oh yeah then we need CI so

126
00:05:35,520 --> 00:05:39,840
we go and put a GitHub workflow yaml

127
00:05:39,840 --> 00:05:42,900
file it's very simple here it needs a

128
00:05:42,900 --> 00:05:45,600
name it needs to know when to run and it

129
00:05:45,600 --> 00:05:47,940
needs to have at least one job in this

130
00:05:47,940 --> 00:05:50,639
case linting running on Ubuntu

131
00:05:50,639 --> 00:05:54,000
going there check out and run mark

132
00:05:54,000 --> 00:05:55,500
dunlint

133
00:05:55,500 --> 00:05:58,199
pretty simple

134
00:05:58,199 --> 00:06:00,600
the more realistic would be to just copy

135
00:06:00,600 --> 00:06:01,979
it from your

136
00:06:01,979 --> 00:06:05,100
um your stash of templates but then what

137
00:06:05,100 --> 00:06:07,620
happens uh oh

138
00:06:07,620 --> 00:06:09,660
lindenfield

139
00:06:09,660 --> 00:06:13,740
because anyone know why it went wrong

140
00:06:13,740 --> 00:06:18,139
it was a very simple bit of markdown

141
00:06:18,180 --> 00:06:20,520
uh they didn't think oh sorry linting is

142
00:06:20,520 --> 00:06:23,819
like spell check so

143
00:06:23,819 --> 00:06:26,880
um if you have a language that has rules

144
00:06:26,880 --> 00:06:29,699
you can check if you are abiding to

145
00:06:29,699 --> 00:06:30,840
those rules

146
00:06:30,840 --> 00:06:33,539
so in the case of markdown there is a

147
00:06:33,539 --> 00:06:36,139
way to make for example the hashtag

148
00:06:36,139 --> 00:06:42,840
becomes a header H1 in HTML well new

149
00:06:42,840 --> 00:06:45,600
line is new line for example lists you

150
00:06:45,600 --> 00:06:48,720
do with stars Etc so that you can check

151
00:06:48,720 --> 00:06:51,240
if you abide to the rules that are

152
00:06:51,240 --> 00:06:53,340
defined for the markdown language

153
00:06:53,340 --> 00:06:57,258
and that's what the markdown linter does

154
00:06:57,660 --> 00:07:00,300
um so anyone who has it to guess what's

155
00:07:00,300 --> 00:07:02,600
wrong

156
00:07:05,639 --> 00:07:08,000
correct

157
00:07:10,100 --> 00:07:13,319
so in the easiest way we add the new

158
00:07:13,319 --> 00:07:15,380
line

159
00:07:15,380 --> 00:07:18,300
we we do some local ending to see if

160
00:07:18,300 --> 00:07:21,180
it's actually correct then we commit and

161
00:07:21,180 --> 00:07:24,060
we push and

162
00:07:24,060 --> 00:07:26,220
tada

163
00:07:26,220 --> 00:07:27,660
works

164
00:07:27,660 --> 00:07:29,940
nice

165
00:07:29,940 --> 00:07:34,080
so now whenever we do any changes

166
00:07:34,080 --> 00:07:37,740
to the markdown it will always be tested

167
00:07:37,740 --> 00:07:41,639
and we had that bit of yamo setting up

168
00:07:41,639 --> 00:07:44,340
building the running the action

169
00:07:44,340 --> 00:07:47,520
markdownlin complete the job

170
00:07:47,520 --> 00:07:49,500
everything automated

171
00:07:49,500 --> 00:07:53,160
so what can you see I well if you can

172
00:07:53,160 --> 00:07:56,340
build something so compiling

173
00:07:56,340 --> 00:07:57,380
um

174
00:07:57,380 --> 00:07:59,940
packing all kinds of ways to build

175
00:07:59,940 --> 00:08:04,139
things in at least a computer way if you

176
00:08:04,139 --> 00:08:06,780
can run it execute a script or whatever

177
00:08:06,780 --> 00:08:09,419
if you can test it write automated test

178
00:08:09,419 --> 00:08:13,979
script then you can CI it but

179
00:08:13,979 --> 00:08:15,120
yeah

180
00:08:15,120 --> 00:08:19,139
also if you can lint it or analyze it

181
00:08:19,139 --> 00:08:23,039
so what is that Printing and analyzing

182
00:08:23,039 --> 00:08:24,720
the same list

183
00:08:24,720 --> 00:08:26,280
oh

184
00:08:26,280 --> 00:08:30,479
is here so limping syntax and coding

185
00:08:30,479 --> 00:08:34,500
standards so that is in case of the

186
00:08:34,500 --> 00:08:36,599
markdown after a header you need a new

187
00:08:36,599 --> 00:08:39,539
line for readability in a lot of

188
00:08:39,539 --> 00:08:41,520
languages There are rules about tabs or

189
00:08:41,520 --> 00:08:43,399
spaces or

190
00:08:43,399 --> 00:08:47,880
do you end with a semicolon or not that

191
00:08:47,880 --> 00:08:49,140
kind of stuff

192
00:08:49,140 --> 00:08:51,959
um analyzing well you can look at the

193
00:08:51,959 --> 00:08:55,260
code without even really interpreting it

194
00:08:55,260 --> 00:08:57,839
and do some static analysis of the code

195
00:08:57,839 --> 00:09:01,440
this type that is requested here is that

196
00:09:01,440 --> 00:09:02,940
actually the type that I'm putting in

197
00:09:02,940 --> 00:09:05,339
where I'm calling it

198
00:09:05,339 --> 00:09:07,140
um those kind of stuff can be done with

199
00:09:07,140 --> 00:09:09,540
a static analysis tool

200
00:09:09,540 --> 00:09:11,220
um you can check for dependencies

201
00:09:11,220 --> 00:09:13,800
availability vulnerabilities

202
00:09:13,800 --> 00:09:15,839
Etc and whether or not something

203
00:09:15,839 --> 00:09:17,580
compiles

204
00:09:17,580 --> 00:09:19,560
you can check for code execution and

205
00:09:19,560 --> 00:09:21,899
basic functioning in case with C plus

206
00:09:21,899 --> 00:09:24,779
plus program or something you can just

207
00:09:24,779 --> 00:09:26,040
run it

208
00:09:26,040 --> 00:09:29,040
see if it exits with a zero or with some

209
00:09:29,040 --> 00:09:30,360
other error code

210
00:09:30,360 --> 00:09:32,580
and you can do some unit testing feature

211
00:09:32,580 --> 00:09:35,399
testing end-to-end testing I'll get back

212
00:09:35,399 --> 00:09:36,600
to those

213
00:09:36,600 --> 00:09:40,700
so why would you not see I

214
00:09:40,700 --> 00:09:43,339
it takes time

215
00:09:43,339 --> 00:09:47,100
it takes time and it puts out a lot of

216
00:09:47,100 --> 00:09:51,060
carbon because every time you commit and

217
00:09:51,060 --> 00:09:54,300
you push a lot of VMS somewhere in the

218
00:09:54,300 --> 00:09:57,300
data center get spun up run code compile

219
00:09:57,300 --> 00:09:59,880
code and then just throw all the stuff

220
00:09:59,880 --> 00:10:02,040
away and only present you with a check

221
00:10:02,040 --> 00:10:04,980
or a cross or some comments about what

222
00:10:04,980 --> 00:10:07,080
went wrong so

223
00:10:07,080 --> 00:10:10,440
yeah that is not really good for the

224
00:10:10,440 --> 00:10:12,720
environment but on the other hand it

225
00:10:12,720 --> 00:10:15,540
does save a lot of development hours and

226
00:10:15,540 --> 00:10:17,940
other stuff so is it that bad for the

227
00:10:17,940 --> 00:10:19,860
climate I don't know

228
00:10:19,860 --> 00:10:22,440
I don't think so Anya because most of

229
00:10:22,440 --> 00:10:25,980
the energy is used to maintain the basic

230
00:10:25,980 --> 00:10:28,680
infrastructure and actually using the

231
00:10:28,680 --> 00:10:31,920
equipment as just minimal extra energy

232
00:10:31,920 --> 00:10:35,339
use so you're pretty okay don't worry

233
00:10:35,339 --> 00:10:39,360
too much okay yeah

234
00:10:45,839 --> 00:10:48,360
so let's get to some real world examples

235
00:10:48,360 --> 00:10:52,079
that I have been met with uh Kitty boss

236
00:10:52,079 --> 00:10:54,600
uh there's anybody here not no kitty

237
00:10:54,600 --> 00:10:59,220
boss good does anybody here uh have has

238
00:10:59,220 --> 00:11:01,800
everybody here heard of the US Standard

239
00:11:01,800 --> 00:11:04,079
Unix script manager

240
00:11:04,079 --> 00:11:07,079
uh it is a bunch of scripts it uses

241
00:11:07,079 --> 00:11:10,320
three to make a list of your folders it

242
00:11:10,320 --> 00:11:13,800
uses gpg and get as a backend for

243
00:11:13,800 --> 00:11:16,680
storing gpg for encryption you can also

244
00:11:16,680 --> 00:11:19,560
encrypt from multiple recipients so if

245
00:11:19,560 --> 00:11:22,140
you want to share part of your password

246
00:11:22,140 --> 00:11:25,560
store you can select a folder and see

247
00:11:25,560 --> 00:11:28,140
with whom do I want to share this who

248
00:11:28,140 --> 00:11:30,899
should be able to decrypt this QT pass

249
00:11:30,899 --> 00:11:34,320
is a front end years ago I was working

250
00:11:34,320 --> 00:11:37,260
at a company total internet something I

251
00:11:37,260 --> 00:11:39,200
forgot the name

252
00:11:39,200 --> 00:11:43,500
and the way they shared secrets about

253
00:11:43,500 --> 00:11:46,260
their projects was literally with a

254
00:11:46,260 --> 00:11:48,600
window share that everybody could Mount

255
00:11:48,600 --> 00:11:51,120
to even from the guest Network that have

256
00:11:51,120 --> 00:11:53,160
a whole folder structure with all the

257
00:11:53,160 --> 00:11:56,180
contracts and also a DOT passwords file

258
00:11:56,180 --> 00:11:59,760
it was a text file with plain text all

259
00:11:59,760 --> 00:12:02,339
credentials for staging production

260
00:12:02,339 --> 00:12:05,100
whatever well yeah that's not something

261
00:12:05,100 --> 00:12:08,760
we can have so we as developers went

262
00:12:08,760 --> 00:12:11,160
over to pause because we're all using

263
00:12:11,160 --> 00:12:14,640
MacBooks so it was easy to do to run

264
00:12:14,640 --> 00:12:18,019
that stuff it was just Brew install pass

265
00:12:18,019 --> 00:12:21,420
and that your gpg set up everybody could

266
00:12:21,420 --> 00:12:22,620
work with it

267
00:12:22,620 --> 00:12:24,540
and the developers were happy because it

268
00:12:24,540 --> 00:12:26,760
would fit very well into their flow with

269
00:12:26,760 --> 00:12:28,860
pause you can literally just use tap

270
00:12:28,860 --> 00:12:31,500
competition so you type pause

271
00:12:31,500 --> 00:12:35,220
space part of the project name tab part

272
00:12:35,220 --> 00:12:39,000
of what you want a website app enter you

273
00:12:39,000 --> 00:12:42,120
get your credentials after you unlock

274
00:12:42,120 --> 00:12:44,760
your gpg key or however you do that

275
00:12:44,760 --> 00:12:46,740
stuff

276
00:12:46,740 --> 00:12:48,899
um managers

277
00:12:48,899 --> 00:12:53,160
they are afraid of terminals

278
00:12:53,160 --> 00:12:55,620
and just doing that simple stuff our

279
00:12:55,620 --> 00:12:58,500
space some letters step some letters

280
00:12:58,500 --> 00:13:01,440
yeah no they they refused

281
00:13:01,440 --> 00:13:03,660
so I thought well what to do

282
00:13:03,660 --> 00:13:06,480
um I've been playing around with cute

283
00:13:06,480 --> 00:13:09,060
framework that's an easy way to do

284
00:13:09,060 --> 00:13:10,980
graphical apps that work on Windows

285
00:13:10,980 --> 00:13:13,260
Linux Mac and look like a native

286
00:13:13,260 --> 00:13:14,579
application

287
00:13:14,579 --> 00:13:17,339
so in Windows it looks like a Windows

288
00:13:17,339 --> 00:13:19,620
app on Mac OS it looks like a Mac OS app

289
00:13:19,620 --> 00:13:21,839
on Linux it looks like whatever you're

290
00:13:21,839 --> 00:13:26,579
running there KDE gnome whatever

291
00:13:26,579 --> 00:13:27,600
um

292
00:13:27,600 --> 00:13:30,360
so I thought okay well we have three so

293
00:13:30,360 --> 00:13:32,639
eight three few four files that's the

294
00:13:32,639 --> 00:13:34,620
standard component drag in

295
00:13:34,620 --> 00:13:36,959
hook up to a path

296
00:13:36,959 --> 00:13:38,519
um what else do we need oh yeah we need

297
00:13:38,519 --> 00:13:42,120
a text View and if you click it just

298
00:13:42,120 --> 00:13:44,820
decodes so that was one evening of work

299
00:13:44,820 --> 00:13:47,760
and I had read only interface for

300
00:13:47,760 --> 00:13:50,519
interfacing with boss for managers super

301
00:13:50,519 --> 00:13:52,260
easy

302
00:13:52,260 --> 00:13:54,839
um extra plus point

303
00:13:54,839 --> 00:13:59,399
the company we were working at um

304
00:13:59,399 --> 00:14:02,360
we used Mac OS mail and the Mac

305
00:14:02,360 --> 00:14:05,220
integrated DPG stuff

306
00:14:05,220 --> 00:14:07,320
and all of a sudden everybody who was

307
00:14:07,320 --> 00:14:09,540
mailing someone else in company was

308
00:14:09,540 --> 00:14:11,339
sending and created emails they they

309
00:14:11,339 --> 00:14:13,560
just didn't know because it was a

310
00:14:13,560 --> 00:14:17,519
transparent so that was a fun upside

311
00:14:17,519 --> 00:14:19,680
um well since I like open source I put

312
00:14:19,680 --> 00:14:20,760
it in open

313
00:14:20,760 --> 00:14:23,639
somewhere and I did a small hackathon we

314
00:14:23,639 --> 00:14:27,000
were starting with ayek a never really

315
00:14:27,000 --> 00:14:30,019
existed hackerspace in Amsterdam

316
00:14:30,019 --> 00:14:34,139
and we to to make it some fun uh we did

317
00:14:34,139 --> 00:14:36,540
a haircut from um who wants to do

318
00:14:36,540 --> 00:14:38,399
translations for this because the cute

319
00:14:38,399 --> 00:14:42,120
framework does translations nicely and

320
00:14:42,120 --> 00:14:42,720
um

321
00:14:42,720 --> 00:14:45,480
said so everybody who starts who knows a

322
00:14:45,480 --> 00:14:47,459
new language that's not in there I'll

323
00:14:47,459 --> 00:14:49,500
buy you dinner everybody who does a

324
00:14:49,500 --> 00:14:51,720
bunch of translations of stuff I'll get

325
00:14:51,720 --> 00:14:54,060
you a beer wow that was fun got a lot of

326
00:14:54,060 --> 00:14:55,980
languages in anyway

327
00:14:55,980 --> 00:14:58,440
um that needed some

328
00:14:58,440 --> 00:15:01,920
uh continuous integration because I

329
00:15:01,920 --> 00:15:03,899
don't run Windows so how do I make the

330
00:15:03,899 --> 00:15:07,320
kidspass installer.exe

331
00:15:07,320 --> 00:15:10,860
um I can't spin up a virtual box with

332
00:15:10,860 --> 00:15:13,620
there but that doesn't scale well so

333
00:15:13,620 --> 00:15:15,839
with just a bit of yamo I can just spin

334
00:15:15,839 --> 00:15:19,459
up a machine somewhere make it create a

335
00:15:19,459 --> 00:15:21,600
installer.exe and upload it back

336
00:15:21,600 --> 00:15:24,420
together as an artifact for example

337
00:15:24,420 --> 00:15:27,060
attack well that works and we can also

338
00:15:27,060 --> 00:15:29,100
do some code quality metrics in an

339
00:15:29,100 --> 00:15:30,839
automated way

340
00:15:30,839 --> 00:15:33,180
I used to do that with Travis because

341
00:15:33,180 --> 00:15:36,120
GitHub actions didn't exist back then I

342
00:15:36,120 --> 00:15:39,060
was already on GitHub and Travis was the

343
00:15:39,060 --> 00:15:41,760
highest on the Google or doctorco or

344
00:15:41,760 --> 00:15:43,740
whatever I could find and

345
00:15:43,740 --> 00:15:47,060
enemy for open source so hey

346
00:15:48,959 --> 00:15:52,139
and Windows app there nearly the same

347
00:15:52,139 --> 00:15:54,480
syntax I could build a Windows installer

348
00:15:54,480 --> 00:15:57,120
and run install maker or whatever that

349
00:15:57,120 --> 00:15:58,320
stuff is

350
00:15:58,320 --> 00:16:02,399
and I worked for quite some a while

351
00:16:02,399 --> 00:16:05,399
um recently I got some time finally to

352
00:16:05,399 --> 00:16:07,199
play again and

353
00:16:07,199 --> 00:16:10,800
uh well Travis was an issue so I need to

354
00:16:10,800 --> 00:16:12,839
make some actions to build Mac OS and

355
00:16:12,839 --> 00:16:17,519
win Linux and windows builds

356
00:16:17,519 --> 00:16:19,560
um yeah I don't have those currently but

357
00:16:19,560 --> 00:16:21,480
I did find something other that was fun

358
00:16:21,480 --> 00:16:24,660
it was super linter it's like a linter

359
00:16:24,660 --> 00:16:26,220
with a cape

360
00:16:26,220 --> 00:16:29,519
what is super litter well it has a lot

361
00:16:29,519 --> 00:16:31,139
of languages that it automatically

362
00:16:31,139 --> 00:16:33,500
detects it just goes through your

363
00:16:33,500 --> 00:16:36,360
repository and says oh this ends with

364
00:16:36,360 --> 00:16:39,480
DOT jyml that's probably a yamo file

365
00:16:39,480 --> 00:16:41,759
let's yamo lint it this is a MD file

366
00:16:41,759 --> 00:16:45,480
markdown nice it has 42 different types

367
00:16:45,480 --> 00:16:48,800
in there and yes that includes English

368
00:16:48,800 --> 00:16:52,440
it does a lot of checks on English not

369
00:16:52,440 --> 00:16:55,980
just spelling checks uh but also jargon

370
00:16:55,980 --> 00:16:58,560
checks in case of QT bus it were

371
00:16:58,560 --> 00:17:01,019
complaining that I was using Mac OS with

372
00:17:01,019 --> 00:17:03,660
a small M Mac OS with a capital and an

373
00:17:03,660 --> 00:17:07,140
OS X in the same file yeah that's not

374
00:17:07,140 --> 00:17:10,079
consistent so that gave me a warning so

375
00:17:10,079 --> 00:17:12,119
that was really fun

376
00:17:12,119 --> 00:17:13,919
um it is used and supported by GitHub

377
00:17:13,919 --> 00:17:17,459
it's actually on github.com GitHub super

378
00:17:17,459 --> 00:17:19,199
linter

379
00:17:19,199 --> 00:17:21,179
um and it's under active development it

380
00:17:21,179 --> 00:17:24,480
works really well so we have that done

381
00:17:24,480 --> 00:17:26,280
and

382
00:17:26,280 --> 00:17:28,559
I needed something else someone told me

383
00:17:28,559 --> 00:17:31,020
you need a white paper if you want to be

384
00:17:31,020 --> 00:17:33,000
taken seriously with a software project

385
00:17:33,000 --> 00:17:36,179
you need a white paper I'm like the

386
00:17:36,179 --> 00:17:38,640
is a white I've seen white papers people

387
00:17:38,640 --> 00:17:40,679
give it me and just go like

388
00:17:40,679 --> 00:17:42,980
that's a lot of

389
00:17:42,980 --> 00:17:46,200
I'm never gonna read that so I thought

390
00:17:46,200 --> 00:17:48,600
what can I do well I have very good code

391
00:17:48,600 --> 00:17:50,880
comments in there because cutie boss

392
00:17:50,880 --> 00:17:54,600
took a lot of love to write and I'll

393
00:17:54,600 --> 00:17:57,780
explain in a bit later uh how that also

394
00:17:57,780 --> 00:17:59,160
happened

395
00:17:59,160 --> 00:18:01,260
um so can't I just ought to generate

396
00:18:01,260 --> 00:18:03,480
that documentation well you can with

397
00:18:03,480 --> 00:18:06,120
doxygen for example you could create all

398
00:18:06,120 --> 00:18:08,640
these things it has connection charts it

399
00:18:08,640 --> 00:18:11,280
has explanations about all the different

400
00:18:11,280 --> 00:18:14,280
things interlinks with with angers it's

401
00:18:14,280 --> 00:18:17,280
awesome so after a bit of coding it

402
00:18:17,280 --> 00:18:18,960
starts with the readme and the change

403
00:18:18,960 --> 00:18:21,900
log if there's an index and with five

404
00:18:21,900 --> 00:18:24,780
lines of code I could generate a 340

405
00:18:24,780 --> 00:18:27,539
page white paper that is automatically

406
00:18:27,539 --> 00:18:29,880
generated every time I make a new

407
00:18:29,880 --> 00:18:32,100
version as soon as I take a new version

408
00:18:32,100 --> 00:18:35,220
it uploads the auto generator it's white

409
00:18:35,220 --> 00:18:38,039
paper to my website that's nice

410
00:18:38,039 --> 00:18:40,919
so I still need to have a Mac and linear

411
00:18:40,919 --> 00:18:43,440
Windows build I don't know why I wrote

412
00:18:43,440 --> 00:18:45,120
Linux because that's the only thing I

413
00:18:45,120 --> 00:18:47,520
run myself but

414
00:18:47,520 --> 00:18:49,260
um so I can

415
00:18:49,260 --> 00:18:51,900
Auto generate those again Travis was

416
00:18:51,900 --> 00:18:53,880
doing it for me they stopped being free

417
00:18:53,880 --> 00:18:56,820
so I stopped using them

418
00:18:56,820 --> 00:18:59,100
and yeah I'm seriously looking for

419
00:18:59,100 --> 00:19:00,660
volunteers to help me out with that kind

420
00:19:00,660 --> 00:19:02,600
of stuff or at least

421
00:19:02,600 --> 00:19:04,799
enthused me to do it because every time

422
00:19:04,799 --> 00:19:07,200
I want to start on I don't want to start

423
00:19:07,200 --> 00:19:09,480
a Windows VM and debug how I have to

424
00:19:09,480 --> 00:19:11,419
build this

425
00:19:11,419 --> 00:19:14,880
anyway another project that I had a lot

426
00:19:14,880 --> 00:19:16,740
of fun with continuous integration with

427
00:19:16,740 --> 00:19:20,100
you might know from batch team not this

428
00:19:20,100 --> 00:19:23,400
bash team but the Shah MCH

429
00:19:23,400 --> 00:19:26,340
Etc batch team we have Hatchery it's an

430
00:19:26,340 --> 00:19:29,580
app store for micro python apps that run

431
00:19:29,580 --> 00:19:33,780
on badass and there when I was building

432
00:19:33,780 --> 00:19:37,140
that I found out that code coverage is a

433
00:19:37,140 --> 00:19:39,960
fun game it's a really really fun name

434
00:19:39,960 --> 00:19:41,880
and not just that it's an addicting game

435
00:19:41,880 --> 00:19:45,299
it works the same as with those simple

436
00:19:45,299 --> 00:19:47,880
clicky click apps games on your phone

437
00:19:47,880 --> 00:19:50,400
that just you you do very simple follow

438
00:19:50,400 --> 00:19:52,260
simple instructions you don't really

439
00:19:52,260 --> 00:19:54,480
have to think you're just clicking away

440
00:19:54,480 --> 00:19:57,299
and you see the numbers improve more

441
00:19:57,299 --> 00:20:00,480
stars the bar gets more green and it's

442
00:20:00,480 --> 00:20:03,539
the same with unit testing if you look

443
00:20:03,539 --> 00:20:06,179
at code coverage like these lists and

444
00:20:06,179 --> 00:20:09,600
you think oh hmm that's a bit low so you

445
00:20:09,600 --> 00:20:12,059
could do some extra testing in the uh to

446
00:20:12,059 --> 00:20:14,640
add some extra tests to cover more code

447
00:20:14,640 --> 00:20:18,240
in the config files that's nice so every

448
00:20:18,240 --> 00:20:20,039
time you have like 10 minutes to spare

449
00:20:20,039 --> 00:20:21,960
or you're bored during a meeting or

450
00:20:21,960 --> 00:20:24,840
whatever you can go I can up that number

451
00:20:24,840 --> 00:20:28,080
again get it higher make it more fun and

452
00:20:28,080 --> 00:20:30,120
that works with the same dopamine

453
00:20:30,120 --> 00:20:31,679
receptors in your brightness those

454
00:20:31,679 --> 00:20:34,080
clicky games it really works and I've

455
00:20:34,080 --> 00:20:35,520
tested this also with skeptical

456
00:20:35,520 --> 00:20:38,340
developers just like okay

457
00:20:38,340 --> 00:20:40,320
these graphs and look at

458
00:20:40,320 --> 00:20:44,160
drops and airdrops and we got some

459
00:20:44,160 --> 00:20:45,840
competition going of people getting more

460
00:20:45,840 --> 00:20:47,280
and more coverage

461
00:20:47,280 --> 00:20:49,799
something else that is really fun and

462
00:20:49,799 --> 00:20:52,200
can be automated is automated API

463
00:20:52,200 --> 00:20:54,600
documentation with just a couple of dock

464
00:20:54,600 --> 00:20:57,059
blocks in your code

465
00:20:57,059 --> 00:20:59,580
you can have Auto generated

466
00:20:59,580 --> 00:21:02,460
client pages that for all the API

467
00:21:02,460 --> 00:21:04,679
endpoints in this case a batch basket

468
00:21:04,679 --> 00:21:08,880
list so you have a basket that contains

469
00:21:08,880 --> 00:21:13,559
for a badge basket whatever shot 2017 it

470
00:21:13,559 --> 00:21:16,020
just lists and gives it Json it auto

471
00:21:16,020 --> 00:21:19,559
generates this page so everybody who is

472
00:21:19,559 --> 00:21:22,020
wondering how does this API work can

473
00:21:22,020 --> 00:21:23,580
just play with the API without

474
00:21:23,580 --> 00:21:26,640
installing anything just going to URL

475
00:21:26,640 --> 00:21:28,440
works like a jump

476
00:21:28,440 --> 00:21:31,440
and that's all automated

477
00:21:31,440 --> 00:21:33,900
so yeah actually

478
00:21:33,900 --> 00:21:37,020
um code coverage awesome uh it's like in

479
00:21:37,020 --> 00:21:40,500
the high 90s we have open API and then I

480
00:21:40,500 --> 00:21:42,120
thought oh yeah I found out about this

481
00:21:42,120 --> 00:21:45,600
super linter let's try it

482
00:21:45,600 --> 00:21:48,780
no uh

483
00:21:48,780 --> 00:21:52,500
Hatchery is written in PHP PHP uses a

484
00:21:52,500 --> 00:21:54,240
lot of extensions if you want to do

485
00:21:54,240 --> 00:21:56,640
interesting stuff the crypto we use in

486
00:21:56,640 --> 00:21:59,400
archery is done with lip sodium and

487
00:21:59,400 --> 00:22:01,500
that's an extra PHP extension you have

488
00:22:01,500 --> 00:22:03,960
to install on your server the standard

489
00:22:03,960 --> 00:22:06,960
Docker image for super linter didn't

490
00:22:06,960 --> 00:22:09,780
allow you to add extra modules so that

491
00:22:09,780 --> 00:22:11,760
really doesn't work some other languages

492
00:22:11,760 --> 00:22:14,520
probably also not good so yeah I thought

493
00:22:14,520 --> 00:22:16,980
let's do something about it well when I

494
00:22:16,980 --> 00:22:19,700
find the time

495
00:22:21,480 --> 00:22:24,539
um and here I went home

496
00:22:24,539 --> 00:22:28,799
went very wrong interesting

497
00:22:28,940 --> 00:22:31,620
uh let's see yeah

498
00:22:31,620 --> 00:22:35,159
um batch team is not just the Hatchery

499
00:22:35,159 --> 00:22:37,740
um we also have a lot of firmware for

500
00:22:37,740 --> 00:22:39,840
different badges for different models

501
00:22:39,840 --> 00:22:43,320
and every time we add some stuff it

502
00:22:43,320 --> 00:22:45,480
might break one of the other badges

503
00:22:45,480 --> 00:22:49,200
so we do firmware builds for every model

504
00:22:49,200 --> 00:22:52,080
of badge that we support on every Comet

505
00:22:52,080 --> 00:22:57,720
or at least every push to a pull request

506
00:22:57,720 --> 00:22:59,940
um and then we can check is this still

507
00:22:59,940 --> 00:23:02,039
working will this still run on a batch

508
00:23:02,039 --> 00:23:05,700
we don't do very extensive tests like

509
00:23:05,700 --> 00:23:08,640
um emulating some batch screens that

510
00:23:08,640 --> 00:23:10,679
kind of stuff but if you have something

511
00:23:10,679 --> 00:23:14,520
that's Emily viewable for example fpga

512
00:23:14,520 --> 00:23:17,039
code lots of people say oh yeah that's

513
00:23:17,039 --> 00:23:21,000
really hard to automate no no you run 90

514
00:23:21,000 --> 00:23:23,280
of your development time with an fpga

515
00:23:23,280 --> 00:23:25,980
you are playing with an emulator you are

516
00:23:25,980 --> 00:23:27,539
playing you're synthesizing the code

517
00:23:27,539 --> 00:23:30,059
running it in an emulator why not do

518
00:23:30,059 --> 00:23:33,179
that in your tests why not have tests on

519
00:23:33,179 --> 00:23:35,880
emulators so that's one of the things on

520
00:23:35,880 --> 00:23:39,360
my wish list for batch team to run batch

521
00:23:39,360 --> 00:23:42,419
emulators and do some low level or high

522
00:23:42,419 --> 00:23:44,220
level testing instead of low level

523
00:23:44,220 --> 00:23:46,080
testing

524
00:23:46,080 --> 00:23:48,720
some more real world examples as many

525
00:23:48,720 --> 00:23:51,419
people here know I work for the last two

526
00:23:51,419 --> 00:23:54,360
years for the Ministry of Health and I'm

527
00:23:54,360 --> 00:23:58,158
in the so-called turkey Steam

528
00:24:00,380 --> 00:24:02,940
there's a reason for that um first

529
00:24:02,940 --> 00:24:06,600
application we made was called brba

530
00:24:06,600 --> 00:24:09,780
because nobody dared to put a document

531
00:24:09,780 --> 00:24:12,419
on a Minister's desk that said the

532
00:24:12,419 --> 00:24:14,000
application that is going to be

533
00:24:14,000 --> 00:24:16,740
recording all the vaccinations is called

534
00:24:16,740 --> 00:24:18,960
brani banani

535
00:24:18,960 --> 00:24:21,419
so we called it brba which stands for

536
00:24:21,419 --> 00:24:25,620
the fail of the uh

537
00:24:29,220 --> 00:24:30,659
thank you

538
00:24:30,659 --> 00:24:33,799
for summer um

539
00:24:35,120 --> 00:24:40,320
sorry in English later we added uh HQ

540
00:24:40,320 --> 00:24:43,400
kvi that gave me

541
00:24:43,400 --> 00:24:46,500
ckvp all kinds of stupid background

542
00:24:46,500 --> 00:24:48,720
names that were mostly names of cats but

543
00:24:48,720 --> 00:24:51,179
all those four letter acronyms in Dutch

544
00:24:51,179 --> 00:24:56,360
that's the letter of cording that is vla

545
00:24:56,720 --> 00:24:59,400
so our theme started to be called the

546
00:24:59,400 --> 00:25:03,780
vla team or flat team and then later the

547
00:25:03,780 --> 00:25:06,799
municipal Health System

548
00:25:06,799 --> 00:25:10,580
they needed something for people without

549
00:25:10,580 --> 00:25:13,440
uh Dutch social security number for

550
00:25:13,440 --> 00:25:15,840
example refugees coming here getting

551
00:25:15,840 --> 00:25:18,179
vaccinated they also have to have a way

552
00:25:18,179 --> 00:25:20,159
to authenticate themselves so we call

553
00:25:20,159 --> 00:25:22,140
that the patient ID authentication

554
00:25:22,140 --> 00:25:25,520
provider and then a very very smart

555
00:25:25,520 --> 00:25:30,419
bureaucrat set yes but Pap that is not

556
00:25:30,419 --> 00:25:33,779
avla I said no but it is a liquid

557
00:25:33,779 --> 00:25:36,200
dessert

558
00:25:38,220 --> 00:25:40,320
so from then on we were called the

559
00:25:40,320 --> 00:25:43,679
Twitches team and yes it was a back road

560
00:25:43,679 --> 00:25:45,960
again we went for pop and then thought

561
00:25:45,960 --> 00:25:48,059
how can we integrate

562
00:25:48,059 --> 00:25:48,659
um

563
00:25:48,659 --> 00:25:52,679
anyway with everything in government we

564
00:25:52,679 --> 00:25:55,500
have to serve all the people and

565
00:25:55,500 --> 00:25:58,919
every solution no solution ever serves

566
00:25:58,919 --> 00:26:00,840
older people so there are just lots of

567
00:26:00,840 --> 00:26:02,760
exemption routes and my team has a lot

568
00:26:02,760 --> 00:26:04,080
of applications

569
00:26:04,080 --> 00:26:07,400
so yes

570
00:26:07,400 --> 00:26:10,880
uh yeah that's a good question

571
00:26:10,880 --> 00:26:13,500
I would prefer to not have those

572
00:26:13,500 --> 00:26:16,440
exemption routes be necessary I would

573
00:26:16,440 --> 00:26:19,020
prefer it if the main line streams

574
00:26:19,020 --> 00:26:22,340
within government that concerns citizens

575
00:26:22,340 --> 00:26:25,140
don't need all those exemption routes so

576
00:26:25,140 --> 00:26:29,419
I'm still ontiver good question

577
00:26:29,539 --> 00:26:32,460
so uh yeah industry of Health flop

578
00:26:32,460 --> 00:26:34,980
projects there are so many exemptions

579
00:26:34,980 --> 00:26:38,400
and in this case we really needed to

580
00:26:38,400 --> 00:26:42,059
work 24 7 all the stupid edge cases so

581
00:26:42,059 --> 00:26:44,100
this is my first time actually doing

582
00:26:44,100 --> 00:26:47,240
real end-to-end testing and Cane testing

583
00:26:47,240 --> 00:26:49,080
and

584
00:26:49,080 --> 00:26:50,840
um

585
00:26:50,840 --> 00:26:54,240
for end-to-end testing is just the

586
00:26:54,240 --> 00:26:56,580
application and in case of a web

587
00:26:56,580 --> 00:26:58,919
application having a browser click

588
00:26:58,919 --> 00:27:00,659
through all the options

589
00:27:00,659 --> 00:27:02,340
well you don't want to do that every

590
00:27:02,340 --> 00:27:04,559
time there is a big change if you want

591
00:27:04,559 --> 00:27:07,380
to automate that so we used a system for

592
00:27:07,380 --> 00:27:09,840
that and chain testing all the things

593
00:27:09,840 --> 00:27:12,779
together so if you make a change in

594
00:27:12,779 --> 00:27:14,400
application a that connects to

595
00:27:14,400 --> 00:27:15,720
application B

596
00:27:15,720 --> 00:27:18,059
why not just bring both up in the

597
00:27:18,059 --> 00:27:20,760
current versions and do all tests on

598
00:27:20,760 --> 00:27:25,860
that and then API guarantees so as long

599
00:27:25,860 --> 00:27:28,740
as when there are apis you need some

600
00:27:28,740 --> 00:27:31,799
Json schemas if it's a Json API

601
00:27:31,799 --> 00:27:34,639
what the

602
00:27:35,279 --> 00:27:38,279
no

603
00:27:39,000 --> 00:27:41,960
it's not what

604
00:27:41,960 --> 00:27:44,640
yeah let's do it again I hope you have

605
00:27:44,640 --> 00:27:47,360
another half an hour

606
00:27:49,380 --> 00:27:50,880
foreign

607
00:27:50,880 --> 00:27:52,679
what was that

608
00:27:52,679 --> 00:27:54,179
what was there almost there almost there

609
00:27:54,179 --> 00:27:55,799
oh

610
00:27:55,799 --> 00:27:58,679
almost there oh yeah

611
00:27:58,679 --> 00:28:00,120
Bluetooth

612
00:28:00,120 --> 00:28:02,059
yeah

613
00:28:02,059 --> 00:28:05,400
so yeah you want to make sure that your

614
00:28:05,400 --> 00:28:08,940
apis are consistent because an API of an

615
00:28:08,940 --> 00:28:11,340
application is a contract with other

616
00:28:11,340 --> 00:28:12,840
people using it

617
00:28:12,840 --> 00:28:15,600
so your apis you should always check and

618
00:28:15,600 --> 00:28:17,340
how do you check if

619
00:28:17,340 --> 00:28:19,620
what the Json will probably contain

620
00:28:19,620 --> 00:28:21,240
different data well there's something

621
00:28:21,240 --> 00:28:24,120
for that it's called Json schemas

622
00:28:24,120 --> 00:28:26,640
which is very nice because it can be

623
00:28:26,640 --> 00:28:29,580
used for nearly anything that uses Json

624
00:28:29,580 --> 00:28:33,600
a Json schema is a Json file that

625
00:28:33,600 --> 00:28:36,720
explains what the other Json files

626
00:28:36,720 --> 00:28:39,539
should look like for example it should

627
00:28:39,539 --> 00:28:45,620
contain a name a date of birth and a

628
00:28:45,620 --> 00:28:47,640
an age

629
00:28:47,640 --> 00:28:49,880
I don't know why both

630
00:28:49,880 --> 00:28:53,419
name should be a string of X length

631
00:28:53,419 --> 00:28:56,520
minimal maximum and that you can write

632
00:28:56,520 --> 00:28:58,679
in your Json schema it will always check

633
00:28:58,679 --> 00:29:01,919
date of birth should be a string of what

634
00:29:01,919 --> 00:29:02,960
is it

635
00:29:02,960 --> 00:29:09,679
4 plus 2 plus 2 plus 2 well 10 or so

636
00:29:09,679 --> 00:29:12,960
length because a date of birth is not a

637
00:29:12,960 --> 00:29:15,059
date at least not in an adult so there

638
00:29:15,059 --> 00:29:16,500
are people without a month there are

639
00:29:16,500 --> 00:29:20,419
people without a day it's a mess

640
00:29:20,960 --> 00:29:25,200
please start using Json schemas because

641
00:29:25,200 --> 00:29:28,559
it's really really good and you really

642
00:29:28,559 --> 00:29:31,559
really want that if you want any help

643
00:29:31,559 --> 00:29:33,840
with it just get me on Signal or

644
00:29:33,840 --> 00:29:35,220
anything

645
00:29:35,220 --> 00:29:36,600
um

646
00:29:36,600 --> 00:29:39,899
so yeah uh end-to-end testing we are

647
00:29:39,899 --> 00:29:42,659
using Robo framework which uses selenium

648
00:29:42,659 --> 00:29:46,140
which many people might know about Robot

649
00:29:46,140 --> 00:29:48,600
Framework is really nice because it uses

650
00:29:48,600 --> 00:29:51,120
a combination of cucumber language which

651
00:29:51,120 --> 00:29:52,740
is a fun language

652
00:29:52,740 --> 00:29:56,340
um it's manager speak it's literally go

653
00:29:56,340 --> 00:30:00,620
to page a click on link B see if there's

654
00:30:00,620 --> 00:30:02,600
words

655
00:30:02,600 --> 00:30:06,000
it's really fun but Robot Framework is

656
00:30:06,000 --> 00:30:08,399
not just the Cucumber language it also

657
00:30:08,399 --> 00:30:11,580
uses python so one of the testers we

658
00:30:11,580 --> 00:30:14,520
hired was like yeah I have done these

659
00:30:14,520 --> 00:30:16,860
and twin things and I can do everything

660
00:30:16,860 --> 00:30:20,159
except I just can't get Beyond statue or

661
00:30:20,159 --> 00:30:22,320
Vlog again that's the two-factor

662
00:30:22,320 --> 00:30:24,899
authentication said yes but you know

663
00:30:24,899 --> 00:30:26,520
what two factor is it's like a shared

664
00:30:26,520 --> 00:30:29,159
secrets and an hmac with time

665
00:30:29,159 --> 00:30:31,740
so that's this one liner in Python and

666
00:30:31,740 --> 00:30:35,700
he was oh oh in that case works and he

667
00:30:35,700 --> 00:30:37,260
had to factor authentication and now

668
00:30:37,260 --> 00:30:39,419
does it for everything

669
00:30:39,419 --> 00:30:42,120
um so it's on the one hand you have

670
00:30:42,120 --> 00:30:45,179
managers that can write some of the

671
00:30:45,179 --> 00:30:47,940
tests and on the other hand developers

672
00:30:47,940 --> 00:30:51,059
can do whatever they want

673
00:30:51,059 --> 00:30:55,399
so to summarize

674
00:30:55,500 --> 00:30:58,799
what to say I if you can build it run it

675
00:30:58,799 --> 00:31:01,740
test it lint it and I put the wrong

676
00:31:01,740 --> 00:31:03,020
slide here

677
00:31:03,020 --> 00:31:04,679
analyze it

678
00:31:04,679 --> 00:31:07,080
then you should see I so if you're an

679
00:31:07,080 --> 00:31:10,919
author well it's in a language so why

680
00:31:10,919 --> 00:31:13,500
not do a spell check automated

681
00:31:13,500 --> 00:31:15,899
um and and or style check if you're a

682
00:31:15,899 --> 00:31:18,299
graphician there are usually also rules

683
00:31:18,299 --> 00:31:20,940
to making graphics for example how

684
00:31:20,940 --> 00:31:23,279
should this fit on a sticker or what are

685
00:31:23,279 --> 00:31:25,740
the borders that kind of stuff if you

686
00:31:25,740 --> 00:31:28,679
are a pen tester it's mostly yaml Jason

687
00:31:28,679 --> 00:31:30,720
all that kind of stuff

688
00:31:30,720 --> 00:31:34,140
if whatever language you use go and do

689
00:31:34,140 --> 00:31:36,179
continuous integration

690
00:31:36,179 --> 00:31:39,020
ah

691
00:31:39,020 --> 00:31:43,100
broken slide deck yep

692
00:31:44,100 --> 00:31:46,140
yes I should have linted them and I

693
00:31:46,140 --> 00:31:48,419
shouldn't have done it in uh LibreOffice

694
00:31:48,419 --> 00:31:51,320
but in latex

695
00:31:53,820 --> 00:31:56,640
extremely horrible it's a zip file with

696
00:31:56,640 --> 00:31:59,880
xmls and this is it's crime against

697
00:31:59,880 --> 00:32:02,880
humanity

698
00:32:03,600 --> 00:32:07,260
so uh any questions

699
00:32:07,260 --> 00:32:09,559
foreign

700
00:32:16,860 --> 00:32:19,760
any plants

701
00:32:21,140 --> 00:32:24,600
any plans on using jet GPD in your auto

702
00:32:24,600 --> 00:32:27,380
documentation creation

703
00:32:27,380 --> 00:32:31,620
so chat GPT uh no I I am planning on

704
00:32:31,620 --> 00:32:35,159
using in my test automation

705
00:32:35,159 --> 00:32:36,779
so

706
00:32:36,779 --> 00:32:39,059
um I've been looking in into ways to

707
00:32:39,059 --> 00:32:43,080
have the Cucumber uh stuff be spewed out

708
00:32:43,080 --> 00:32:44,159
like so

709
00:32:44,159 --> 00:32:48,299
um you just give jet GPT uh a a big

710
00:32:48,299 --> 00:32:50,159
screenshot of a website and say you make

711
00:32:50,159 --> 00:32:51,600
some tests for this

712
00:32:51,600 --> 00:32:54,899
and it starts to kind of work

713
00:32:54,899 --> 00:32:56,700
um sometimes I use it for documentation

714
00:32:56,700 --> 00:32:59,640
but most automated I want to be in

715
00:32:59,640 --> 00:33:02,299
control of whatever that's the The

716
00:33:02,299 --> 00:33:06,480
Superficial intelligence of chat EPT gbt

717
00:33:06,480 --> 00:33:09,120
is trying to feed me because yeah jet

718
00:33:09,120 --> 00:33:11,520
GPT is like a populist

719
00:33:11,520 --> 00:33:15,299
um uh populist politician it's very very

720
00:33:15,299 --> 00:33:17,700
convincingly telling complete and utter

721
00:33:17,700 --> 00:33:20,120


722
00:33:21,799 --> 00:33:24,779
yes I know

723
00:33:24,779 --> 00:33:27,440
discussion

724
00:33:28,679 --> 00:33:31,740
I mean also the the white paper was

725
00:33:31,740 --> 00:33:34,380
already 340 pages I don't think that GPT

726
00:33:34,380 --> 00:33:36,659
needs to add anything no no no no no I

727
00:33:36,659 --> 00:33:39,419
agree I completely agree and small form

728
00:33:39,419 --> 00:33:43,580
to even and with with lots of graphics

729
00:33:44,700 --> 00:33:47,600
yeah I could

730
00:33:48,120 --> 00:33:51,199
any other questions

731
00:33:51,360 --> 00:33:53,640
no well then I would like to thank you

732
00:33:53,640 --> 00:33:55,100
all for listening

733
00:33:55,100 --> 00:33:59,550
[Applause]

