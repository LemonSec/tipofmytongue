1
00:00:07,759 --> 00:00:09,120
all right so for the last talk of the

2
00:00:09,120 --> 00:00:11,200
day uh we're gonna have patrick wardle

3
00:00:11,200 --> 00:00:13,840
talk about

4
00:00:15,599 --> 00:00:16,800
no welcome to my talk we're gonna be

5
00:00:16,800 --> 00:00:18,640
talking about uh documents of dooms

6
00:00:18,640 --> 00:00:20,480
looking at various macro based attacks

7
00:00:20,480 --> 00:00:22,640
on mac os

8
00:00:22,640 --> 00:00:24,320
i'm gonna skip this slide i assume by

9
00:00:24,320 --> 00:00:27,119
now hopefully you know who i am now we

10
00:00:27,119 --> 00:00:28,240
should check

11
00:00:28,240 --> 00:00:30,480
so today we're going to be talking about

12
00:00:30,480 --> 00:00:32,558
malicious office documents so first

13
00:00:32,558 --> 00:00:34,640
we're going to start by looking at

14
00:00:34,640 --> 00:00:37,040
recent recent attacks targeting mac os

15
00:00:37,040 --> 00:00:39,680
users attacks that leverage

16
00:00:39,680 --> 00:00:42,320
or utilize macro lace documents

17
00:00:42,320 --> 00:00:43,920
we're then going to talk about how to

18
00:00:43,920 --> 00:00:45,920
analyze these documents uh specifically

19
00:00:45,920 --> 00:00:48,640
how to extract the macro code from them

20
00:00:48,640 --> 00:00:51,039
analyze those macros and then also look

21
00:00:51,039 --> 00:00:52,640
at the payloads

22
00:00:52,640 --> 00:00:54,160
finally and we'll see these current

23
00:00:54,160 --> 00:00:56,960
attacks are rather lame so we'll end by

24
00:00:56,960 --> 00:00:58,719
talking about a new attack and an

25
00:00:58,719 --> 00:01:01,120
exploit chain that combines a few zero

26
00:01:01,120 --> 00:01:03,359
days that allows us to break out of

27
00:01:03,359 --> 00:01:05,840
microsoft's sandbox and persistently

28
00:01:05,840 --> 00:01:08,479
infect macos bypassing some of apple's

29
00:01:08,479 --> 00:01:11,600
latest security mechanisms as well

30
00:01:11,600 --> 00:01:13,600
so let's dive in uh start by looking at

31
00:01:13,600 --> 00:01:15,759
some recent macro based attacks

32
00:01:15,759 --> 00:01:17,520
targeting mac os

33
00:01:17,520 --> 00:01:19,520
so first just to make sure we're on the

34
00:01:19,520 --> 00:01:22,640
same page what is a macro i've added the

35
00:01:22,640 --> 00:01:25,600
official definition from microsoft but

36
00:01:25,600 --> 00:01:27,920
in short you can think of macro as

37
00:01:27,920 --> 00:01:30,159
embedded code in an office document and

38
00:01:30,159 --> 00:01:33,040
this is normally written in vba

39
00:01:33,040 --> 00:01:35,119
software it allows us to add codes to

40
00:01:35,119 --> 00:01:37,520
documents made a little example we have

41
00:01:37,520 --> 00:01:40,159
some bb script we can see we embed that

42
00:01:40,159 --> 00:01:42,159
into an office document when the

43
00:01:42,159 --> 00:01:44,479
document is opened and the user clicks

44
00:01:44,479 --> 00:01:45,439
allow

45
00:01:45,439 --> 00:01:47,200
there'll be a little pop-up saying hello

46
00:01:47,200 --> 00:01:48,720
world

47
00:01:48,720 --> 00:01:50,079
now from a security point of view i'm

48
00:01:50,079 --> 00:01:51,360
sure you can all imagine this is a

49
00:01:51,360 --> 00:01:53,200
horrible idea

50
00:01:53,200 --> 00:01:56,560
so you know even back in the day in 1999

51
00:01:56,560 --> 00:01:58,719
the infamous uh melissa virus which

52
00:01:58,719 --> 00:01:59,600
caused

53
00:01:59,600 --> 00:02:03,040
a large amount of damage especially for

54
00:02:03,040 --> 00:02:05,759
the context of the late 90s was you

55
00:02:05,759 --> 00:02:08,639
guessed it a macro based virus now

56
00:02:08,639 --> 00:02:12,080
microsoft has added some mitigations for

57
00:02:12,080 --> 00:02:14,080
example now there's alerts that users

58
00:02:14,080 --> 00:02:16,560
have to click through to enable macros

59
00:02:16,560 --> 00:02:19,520
and also now office is sandbox but we'll

60
00:02:19,520 --> 00:02:22,080
see this really hasn't stopped attackers

61
00:02:22,080 --> 00:02:24,400
too much and really hasn't mitigated the

62
00:02:24,400 --> 00:02:27,280
threat at least fully

63
00:02:27,280 --> 00:02:29,120
now traditionally these macro base

64
00:02:29,120 --> 00:02:31,280
attacks have targeted microsoft windows

65
00:02:31,280 --> 00:02:32,640
system so if you talk to someone about a

66
00:02:32,640 --> 00:02:33,519
mag

67
00:02:33,519 --> 00:02:35,120
macro based attack they'll probably

68
00:02:35,120 --> 00:02:36,400
think oh yeah this is just you know

69
00:02:36,400 --> 00:02:39,440
microsoft on windows and this is for two

70
00:02:39,440 --> 00:02:41,920
reasons first and foremost these macros

71
00:02:41,920 --> 00:02:44,800
are a microsoft creation and thus they

72
00:02:44,800 --> 00:02:46,319
only work on

73
00:02:46,319 --> 00:02:48,480
microsoft products so for example if you

74
00:02:48,480 --> 00:02:51,760
open a macro document in apple's office

75
00:02:51,760 --> 00:02:54,400
suite for example in

76
00:02:54,400 --> 00:02:57,120
notes or pages it's not going to work

77
00:02:57,120 --> 00:02:58,480
the other thing is

78
00:02:58,480 --> 00:03:00,400
traditionally windows computers have

79
00:03:00,400 --> 00:03:02,480
just been more prevalent however as

80
00:03:02,480 --> 00:03:04,319
we've talked or heard some other talks

81
00:03:04,319 --> 00:03:05,680
in this in this conference have

82
00:03:05,680 --> 00:03:07,920
mentioned macs are becoming a lot more

83
00:03:07,920 --> 00:03:10,800
prevalent especially in the enterprise

84
00:03:10,800 --> 00:03:13,200
and a lot of these macs in the

85
00:03:13,200 --> 00:03:15,680
enterprise uses microsoft office so they

86
00:03:15,680 --> 00:03:19,120
have office on macs so hackers have you

87
00:03:19,120 --> 00:03:21,519
know fairly obviously seen this as a new

88
00:03:21,519 --> 00:03:23,760
attack vector new targets and so have

89
00:03:23,760 --> 00:03:25,840
started to develop macro based attacks

90
00:03:25,840 --> 00:03:29,280
targeting specifically mac os

91
00:03:29,280 --> 00:03:31,519
so now let's look at some recent attacks

92
00:03:31,519 --> 00:03:34,080
attacks that leveraged macro laced

93
00:03:34,080 --> 00:03:36,480
documents we're going to look at in this

94
00:03:36,480 --> 00:03:38,959
section uh kind of a high level of just

95
00:03:38,959 --> 00:03:40,720
some of the attacks and then in the next

96
00:03:40,720 --> 00:03:42,879
section we'll dive into the specifics of

97
00:03:42,879 --> 00:03:44,879
these attacks how to pull out the macros

98
00:03:44,879 --> 00:03:46,720
and look at their payload

99
00:03:46,720 --> 00:03:49,920
so starting in 2017 we have a document

100
00:03:49,920 --> 00:03:52,400
that appears to be about trump's

101
00:03:52,400 --> 00:03:54,480
unfortunate election victory

102
00:03:54,480 --> 00:03:57,280
uh it's really actually not about this

103
00:03:57,280 --> 00:03:59,599
but if the user was tricked in to open

104
00:03:59,599 --> 00:04:02,560
it and again clicked on enabled macros

105
00:04:02,560 --> 00:04:04,640
it would infect their system and again

106
00:04:04,640 --> 00:04:06,799
this is one of the first instances

107
00:04:06,799 --> 00:04:09,599
of a macro attack but specifically

108
00:04:09,599 --> 00:04:12,159
targeting mac users so microsoft office

109
00:04:12,159 --> 00:04:14,239
on mac os

110
00:04:14,239 --> 00:04:16,160
moving on to 2018 we have another

111
00:04:16,160 --> 00:04:18,320
document it's about bitcoin at the time

112
00:04:18,320 --> 00:04:20,399
there's a very trendy topic uh it was

113
00:04:20,399 --> 00:04:22,560
sent to you know users or those who

114
00:04:22,560 --> 00:04:24,240
potentially would be interested in

115
00:04:24,240 --> 00:04:26,880
bitcoin to kind of get them to open that

116
00:04:26,880 --> 00:04:29,040
again if they open the document they

117
00:04:29,040 --> 00:04:31,040
would be infected now we'll dig into

118
00:04:31,040 --> 00:04:32,720
this more shortly but probably the most

119
00:04:32,720 --> 00:04:35,040
interesting part about this attack is it

120
00:04:35,040 --> 00:04:37,280
actually contained a sandbox escape

121
00:04:37,280 --> 00:04:40,080
which allowed the macro code to execute

122
00:04:40,080 --> 00:04:41,919
outside the sandbox and allow the

123
00:04:41,919 --> 00:04:43,600
attackers to do more damage to the

124
00:04:43,600 --> 00:04:45,280
system

125
00:04:45,280 --> 00:04:48,400
onto 2019 we have a office document from

126
00:04:48,400 --> 00:04:51,280
very prolific lazarus group lazarus

127
00:04:51,280 --> 00:04:53,120
group are the north koreans very

128
00:04:53,120 --> 00:04:55,360
persistent apt group

129
00:04:55,360 --> 00:04:57,120
and so to take away from this is it's

130
00:04:57,120 --> 00:04:59,759
kind of interesting to see even somewhat

131
00:04:59,759 --> 00:05:02,639
sophisticated apt groups jump on the hey

132
00:05:02,639 --> 00:05:05,440
let's target mac os users via macros

133
00:05:05,440 --> 00:05:06,960
bandwagon

134
00:05:06,960 --> 00:05:08,560
again if the user opens the document

135
00:05:08,560 --> 00:05:10,800
they have to click enable macros but if

136
00:05:10,800 --> 00:05:12,639
they do they will the system will be

137
00:05:12,639 --> 00:05:14,479
infected and the remote attackers will

138
00:05:14,479 --> 00:05:17,840
have access to the box

139
00:05:17,840 --> 00:05:19,360
that's kind of an overview of some

140
00:05:19,360 --> 00:05:21,600
recent attacks let's now dive into how

141
00:05:21,600 --> 00:05:24,000
we go about analyzing these documents

142
00:05:24,000 --> 00:05:26,240
for example how we can extract the

143
00:05:26,240 --> 00:05:28,479
embedded macros and analyze them both

144
00:05:28,479 --> 00:05:33,280
that macro code and any embedded payload

145
00:05:33,280 --> 00:05:34,960
so first obviously once we have a

146
00:05:34,960 --> 00:05:36,720
malicious document we need to figure out

147
00:05:36,720 --> 00:05:39,280
how to extract the macro code so that we

148
00:05:39,280 --> 00:05:40,880
can analyze it

149
00:05:40,880 --> 00:05:42,800
now we don't have time to go into the

150
00:05:42,800 --> 00:05:45,199
file format of microsoft office and how

151
00:05:45,199 --> 00:05:47,600
macros are installed or rather

152
00:05:47,600 --> 00:05:49,919
integrated embedded in the documents but

153
00:05:49,919 --> 00:05:51,360
really you don't have to worry about

154
00:05:51,360 --> 00:05:53,280
that unless you really want to nerd out

155
00:05:53,280 --> 00:05:55,199
on that stuff because the good news is

156
00:05:55,199 --> 00:05:56,960
there's a lot of tools out there that if

157
00:05:56,960 --> 00:05:59,600
you basically give the tool

158
00:05:59,600 --> 00:06:01,440
a document that contains embedded macros

159
00:06:01,440 --> 00:06:04,160
it will extract those macros for you so

160
00:06:04,160 --> 00:06:07,120
my frame it is the ole tool suite that's

161
00:06:07,120 --> 00:06:09,199
available on github open source

162
00:06:09,199 --> 00:06:11,199
uh if you download it specifically one

163
00:06:11,199 --> 00:06:14,240
of the tools is ole vba if you execute

164
00:06:14,240 --> 00:06:16,800
that with the dash c flag and pass the

165
00:06:16,800 --> 00:06:18,319
path to

166
00:06:18,319 --> 00:06:19,680
the document which has the embedded

167
00:06:19,680 --> 00:06:22,240
macros it'll parse the document and dump

168
00:06:22,240 --> 00:06:24,720
all the macros to standard out so here

169
00:06:24,720 --> 00:06:26,720
for example we did it on the kind of

170
00:06:26,720 --> 00:06:28,800
proof of concept hello world file i

171
00:06:28,800 --> 00:06:30,560
created at the beginning you can see yes

172
00:06:30,560 --> 00:06:32,479
indeed there is the recreation or

173
00:06:32,479 --> 00:06:34,560
actually the macro code that's been

174
00:06:34,560 --> 00:06:37,360
extracted from the document there's also

175
00:06:37,360 --> 00:06:40,000
some online websites where you can take

176
00:06:40,000 --> 00:06:42,400
a document if you think it has macros in

177
00:06:42,400 --> 00:06:44,720
it upload it and it will extract the

178
00:06:44,720 --> 00:06:46,560
mattress i like to do it locally because

179
00:06:46,560 --> 00:06:47,520
you know we don't always want to be

180
00:06:47,520 --> 00:06:50,800
sharing these documents in the web

181
00:06:50,800 --> 00:06:53,520
so now we understand how to extract the

182
00:06:53,520 --> 00:06:55,280
macro code so let's return to the

183
00:06:55,280 --> 00:06:57,360
documents the attacks we just talked

184
00:06:57,360 --> 00:06:58,160
about

185
00:06:58,160 --> 00:07:00,880
and look at what some of these malicious

186
00:07:00,880 --> 00:07:02,080
macros

187
00:07:02,080 --> 00:07:03,599
so we'll start with the document from

188
00:07:03,599 --> 00:07:07,440
2018. if we run that ole vba

189
00:07:07,440 --> 00:07:08,319
script

190
00:07:08,319 --> 00:07:10,800
passing the path to the document bdc

191
00:07:10,800 --> 00:07:12,639
i'll parse the document and extract the

192
00:07:12,639 --> 00:07:14,800
macros first thing i want to point out

193
00:07:14,800 --> 00:07:18,080
is the auto open function now this is a

194
00:07:18,080 --> 00:07:20,880
microsoft api and according to the api

195
00:07:20,880 --> 00:07:22,720
specifications it'll automatically

196
00:07:22,720 --> 00:07:25,199
execute whatever you specify there again

197
00:07:25,199 --> 00:07:26,960
assuming the user has clicked enabled

198
00:07:26,960 --> 00:07:29,120
manuals so here we can see there's

199
00:07:29,120 --> 00:07:31,759
simply a call to a method or function

200
00:07:31,759 --> 00:07:33,840
called fischer if we go down a little

201
00:07:33,840 --> 00:07:35,360
further in the code we can see the

202
00:07:35,360 --> 00:07:37,680
implementation or the macro code that

203
00:07:37,680 --> 00:07:40,000
fisher method and what it does

204
00:07:40,000 --> 00:07:42,080
you can see simply it concatenates a

205
00:07:42,080 --> 00:07:44,800
base64 encoded string and then it's

206
00:07:44,800 --> 00:07:46,960
going to decode and execute this via

207
00:07:46,960 --> 00:07:48,720
python

208
00:07:48,720 --> 00:07:50,960
so we can manually decode the string i

209
00:07:50,960 --> 00:07:52,720
usually just hop into a python

210
00:07:52,720 --> 00:07:55,599
interpreter use the base64 decode module

211
00:07:55,599 --> 00:07:57,440
pass the string and we can see that it

212
00:07:57,440 --> 00:07:59,680
decodes to some python code which makes

213
00:07:59,680 --> 00:08:01,520
sense because again they execute this

214
00:08:01,520 --> 00:08:04,720
via python it does four things it first

215
00:08:04,720 --> 00:08:06,400
checks if little snitch is running

216
00:08:06,400 --> 00:08:08,639
little snitch is very popular firewall

217
00:08:08,639 --> 00:08:10,160
product for mac os

218
00:08:10,160 --> 00:08:12,639
then downloads a second stage payload

219
00:08:12,639 --> 00:08:13,720
from

220
00:08:13,720 --> 00:08:15,919
securitychecking.org it decrypts this

221
00:08:15,919 --> 00:08:18,240
payload and then executes the decrypted

222
00:08:18,240 --> 00:08:21,280
payload now if you do enough analysis uh

223
00:08:21,280 --> 00:08:24,160
on python backdoors and macro code you

224
00:08:24,160 --> 00:08:25,680
know this code will start to look

225
00:08:25,680 --> 00:08:27,599
familiar especially that check of little

226
00:08:27,599 --> 00:08:29,360
snitch so as soon as you see that it's

227
00:08:29,360 --> 00:08:31,680
like hey i've seen this before and what

228
00:08:31,680 --> 00:08:34,159
it is it turns out to be part of empire

229
00:08:34,159 --> 00:08:36,240
empire is a very popular open source

230
00:08:36,240 --> 00:08:39,200
backdoor for mac os so all the attackers

231
00:08:39,200 --> 00:08:41,599
did is they basically took python this

232
00:08:41,599 --> 00:08:44,159
python backdoor empire and encoded it

233
00:08:44,159 --> 00:08:46,640
into their macro code

234
00:08:46,640 --> 00:08:49,040
now unfortunately securitychecking.org

235
00:08:49,040 --> 00:08:50,480
this is the attackers command control

236
00:08:50,480 --> 00:08:53,200
server was offline at the time i did

237
00:08:53,200 --> 00:08:55,200
this analysis so we're not sure what

238
00:08:55,200 --> 00:08:57,519
that second stage payload was but it's

239
00:08:57,519 --> 00:08:59,600
likely to just be a second stage empire

240
00:08:59,600 --> 00:09:01,040
payload again since the attackers

241
00:09:01,040 --> 00:09:03,360
already using this backdoor makes sense

242
00:09:03,360 --> 00:09:06,640
they use other components as well

243
00:09:06,640 --> 00:09:09,200
we move on to that bitcoin document from

244
00:09:09,200 --> 00:09:12,480
2018. again using ole vba we can dump

245
00:09:12,480 --> 00:09:14,720
the embedded macros

246
00:09:14,720 --> 00:09:17,200
somewhat similar this code is executed

247
00:09:17,200 --> 00:09:18,880
again automatically if the user clicks

248
00:09:18,880 --> 00:09:22,080
allow buy another api microsoft api

249
00:09:22,080 --> 00:09:23,839
instead of the auto open this one uses

250
00:09:23,839 --> 00:09:26,000
the document open which is conceptually

251
00:09:26,000 --> 00:09:28,240
exactly the same user opens the document

252
00:09:28,240 --> 00:09:29,920
whatever code is specified in that

253
00:09:29,920 --> 00:09:32,480
method will be automatically executed by

254
00:09:32,480 --> 00:09:34,080
word again

255
00:09:34,080 --> 00:09:36,480
it contains some encoded python and then

256
00:09:36,480 --> 00:09:38,959
this embedded property list which is a

257
00:09:38,959 --> 00:09:41,760
little unusual a little strange

258
00:09:41,760 --> 00:09:44,399
we do decode the python base64 encoded

259
00:09:44,399 --> 00:09:46,720
so very easy to decode we can see it

260
00:09:46,720 --> 00:09:51,480
connects out to a server at 192.202.1

261
00:09:51,760 --> 00:09:54,160
and all it does is it then expects a

262
00:09:54,160 --> 00:09:56,959
second stage payload which turned out to

263
00:09:56,959 --> 00:09:58,720
be metasploits interpreter so this

264
00:09:58,720 --> 00:10:00,880
command control server this ip address

265
00:10:00,880 --> 00:10:03,760
was still active at the time of analysis

266
00:10:03,760 --> 00:10:05,360
so i could go grab that second stage

267
00:10:05,360 --> 00:10:07,440
payload and again it turned out to be uh

268
00:10:07,440 --> 00:10:09,760
metasploits uh payload and you know this

269
00:10:09,760 --> 00:10:11,839
is nothing fancy but it does give the

270
00:10:11,839 --> 00:10:14,399
attackers access to the remote system

271
00:10:14,399 --> 00:10:16,240
allows them to run other files commands

272
00:10:16,240 --> 00:10:19,040
processes etc etc

273
00:10:19,040 --> 00:10:20,640
now i mentioned kind of an interesting

274
00:10:20,640 --> 00:10:22,560
piece of this

275
00:10:22,560 --> 00:10:24,320
attack was that embedded property list

276
00:10:24,320 --> 00:10:25,839
and also the fact that it contained

277
00:10:25,839 --> 00:10:27,600
sandbox escape

278
00:10:27,600 --> 00:10:29,600
so recent versions of mac os and we'll

279
00:10:29,600 --> 00:10:31,360
talk about this a little bit more if

280
00:10:31,360 --> 00:10:33,360
microsoft office is running it's running

281
00:10:33,360 --> 00:10:36,079
in a sandbox and what a sandbox is is

282
00:10:36,079 --> 00:10:37,760
basically something that constricts or

283
00:10:37,760 --> 00:10:40,000
constrains the activity of whatever is

284
00:10:40,000 --> 00:10:42,240
running inside so even if the user

285
00:10:42,240 --> 00:10:44,399
clicks allow for example allows a

286
00:10:44,399 --> 00:10:47,200
malicious macros to execute these macros

287
00:10:47,200 --> 00:10:48,560
are going to be limited

288
00:10:48,560 --> 00:10:50,079
about what they can do so for example

289
00:10:50,079 --> 00:10:51,120
they're not going to be able to

290
00:10:51,120 --> 00:10:53,680
persistently install a back door

291
00:10:53,680 --> 00:10:55,600
access the user's keychain et cetera et

292
00:10:55,600 --> 00:10:56,720
cetera

293
00:10:56,720 --> 00:10:58,959
a while ago though a researcher security

294
00:10:58,959 --> 00:11:01,200
researcher named adam chester was

295
00:11:01,200 --> 00:11:04,240
analyzing microsoft office sandbox and

296
00:11:04,240 --> 00:11:06,640
he noticed in the sandbox there was an

297
00:11:06,640 --> 00:11:09,440
exception that basically said

298
00:11:09,440 --> 00:11:11,519
even though office was sandboxed it

299
00:11:11,519 --> 00:11:13,680
could write to anywhere on the file

300
00:11:13,680 --> 00:11:16,480
system as long as that file

301
00:11:16,480 --> 00:11:18,560
ended until the dollar sign the file

302
00:11:18,560 --> 00:11:19,360
name

303
00:11:19,360 --> 00:11:21,120
so what he figured out was that he could

304
00:11:21,120 --> 00:11:24,399
create a launch agent that on the next

305
00:11:24,399 --> 00:11:26,880
login would be automatically executed by

306
00:11:26,880 --> 00:11:29,760
mac os and since it was executed by mac

307
00:11:29,760 --> 00:11:32,560
os instead of code within the sandbox it

308
00:11:32,560 --> 00:11:34,800
would be executing outside the context

309
00:11:34,800 --> 00:11:36,880
of the sound box in other words it was a

310
00:11:36,880 --> 00:11:38,640
sandbox escape

311
00:11:38,640 --> 00:11:41,200
so what the attackers did adam posted a

312
00:11:41,200 --> 00:11:43,440
guest blog on objective-c as they likely

313
00:11:43,440 --> 00:11:45,519
read this blog and then they stole or

314
00:11:45,519 --> 00:11:48,880
rather copied his code verbatim into

315
00:11:48,880 --> 00:11:50,639
their macro into their malicious

316
00:11:50,639 --> 00:11:51,680
document

317
00:11:51,680 --> 00:11:53,440
now this kind of makes sense because

318
00:11:53,440 --> 00:11:55,360
again they're likely wanting to escape

319
00:11:55,360 --> 00:11:57,600
out of the constraints of sandbox and

320
00:11:57,600 --> 00:11:59,200
attackers are usually lazy so if

321
00:11:59,200 --> 00:12:00,639
someone's already created a sandbox

322
00:12:00,639 --> 00:12:02,480
escape why not just copy it so that's

323
00:12:02,480 --> 00:12:04,480
exactly what the attackers did in this

324
00:12:04,480 --> 00:12:06,480
case

325
00:12:06,480 --> 00:12:08,560
finally let's look at the last document

326
00:12:08,560 --> 00:12:11,360
lazarus groups apt document again using

327
00:12:11,360 --> 00:12:14,480
the ole vba tool we extract the code and

328
00:12:14,480 --> 00:12:16,240
it turns out the macro code which is

329
00:12:16,240 --> 00:12:19,200
executed by the auto open api is very

330
00:12:19,200 --> 00:12:21,279
straightforward it simply connects out

331
00:12:21,279 --> 00:12:24,160
to a command control server via curl and

332
00:12:24,160 --> 00:12:26,240
then downloads and executes a second

333
00:12:26,240 --> 00:12:28,720
stage payload the second stage payload

334
00:12:28,720 --> 00:12:31,600
was one of lazarus group's uh persistent

335
00:12:31,600 --> 00:12:33,440
back doors which would then give a more

336
00:12:33,440 --> 00:12:36,079
persistent access to the

337
00:12:36,079 --> 00:12:37,839
to the system again since this was

338
00:12:37,839 --> 00:12:39,760
sandbox at least on recent versions of

339
00:12:39,760 --> 00:12:42,079
office and mac os it's likely that that

340
00:12:42,079 --> 00:12:45,360
perhaps would fail

341
00:12:45,360 --> 00:12:47,680
so that's kind of an overview of recent

342
00:12:47,680 --> 00:12:50,480
macro based attacks against mac users

343
00:12:50,480 --> 00:12:52,880
specifically and it kind of gives us an

344
00:12:52,880 --> 00:12:55,519
understanding of the status quo

345
00:12:55,519 --> 00:12:57,279
now we're going to shift gears a little

346
00:12:57,279 --> 00:13:00,240
bit and talk about a new zero click

347
00:13:00,240 --> 00:13:02,639
macro based exploit chain

348
00:13:02,639 --> 00:13:04,480
and we might be asking

349
00:13:04,480 --> 00:13:07,360
why we want to do this and in my opinion

350
00:13:07,360 --> 00:13:09,519
simply just because current macro based

351
00:13:09,519 --> 00:13:12,160
attacks are incredibly lame and let's

352
00:13:12,160 --> 00:13:14,399
list the ways so first all of them

353
00:13:14,399 --> 00:13:16,480
require the user click

354
00:13:16,480 --> 00:13:19,519
enable macros so any time the user gets

355
00:13:19,519 --> 00:13:21,920
one of these uh documents that contain

356
00:13:21,920 --> 00:13:23,680
embedded macro code

357
00:13:23,680 --> 00:13:25,600
office will pop up this huge warning

358
00:13:25,600 --> 00:13:26,959
that basically says

359
00:13:26,959 --> 00:13:28,720
you know this document contains this

360
00:13:28,720 --> 00:13:31,040
macro code you really probably shouldn't

361
00:13:31,040 --> 00:13:32,800
open it unless you know you really know

362
00:13:32,800 --> 00:13:35,360
where it's from now some users will

363
00:13:35,360 --> 00:13:37,200
still click allow as we all know that's

364
00:13:37,200 --> 00:13:39,199
why we have great job security

365
00:13:39,199 --> 00:13:41,680
but there are the majority that

366
00:13:41,680 --> 00:13:43,120
hopefully will be like yeah i probably

367
00:13:43,120 --> 00:13:44,399
shouldn't click this especially if it's

368
00:13:44,399 --> 00:13:46,800
some some random email address so that

369
00:13:46,800 --> 00:13:48,320
to me is kind of a showstopper at least

370
00:13:48,320 --> 00:13:51,279
from a more sophisticated attack

371
00:13:51,279 --> 00:13:53,839
also microsoft has now patched adam's

372
00:13:53,839 --> 00:13:55,839
sandbox bug which means that all these

373
00:13:55,839 --> 00:13:57,440
macro based attacks are going to be

374
00:13:57,440 --> 00:13:59,600
again executing in the context of the

375
00:13:59,600 --> 00:14:01,839
sandbox which really means they can't do

376
00:14:01,839 --> 00:14:04,160
much damage to the system and then

377
00:14:04,160 --> 00:14:06,800
finally on catalina and kudos to apple

378
00:14:06,800 --> 00:14:09,360
for this uh catalina introduces kind of

379
00:14:09,360 --> 00:14:11,760
this idea of notarization which means

380
00:14:11,760 --> 00:14:14,399
any file that comes in in a document or

381
00:14:14,399 --> 00:14:16,480
is downloaded from the web has to be

382
00:14:16,480 --> 00:14:18,639
notarized so even if the attackers find

383
00:14:18,639 --> 00:14:21,040
a new way to execute macros perhaps even

384
00:14:21,040 --> 00:14:23,120
break out of the sandbox they then try

385
00:14:23,120 --> 00:14:25,760
to execute a second stage payload mac os

386
00:14:25,760 --> 00:14:27,519
will block that because obviously that's

387
00:14:27,519 --> 00:14:30,160
not going to be notarized by apple so in

388
00:14:30,160 --> 00:14:31,519
a way these current attacks is really

389
00:14:31,519 --> 00:14:33,519
game over blocked

390
00:14:33,519 --> 00:14:35,279
so that was really the

391
00:14:35,279 --> 00:14:37,519
inspiration because anytime a company

392
00:14:37,519 --> 00:14:40,320
such as microsoft patches something or

393
00:14:40,320 --> 00:14:42,839
apple introduces some security

394
00:14:42,839 --> 00:14:44,639
mechanisms i don't know if this is an

395
00:14:44,639 --> 00:14:46,399
issue but i really want to break them

396
00:14:46,399 --> 00:14:48,480
like this gets me like excited so i

397
00:14:48,480 --> 00:14:50,320
really wanted to poke on this and say

398
00:14:50,320 --> 00:14:52,000
you know could the attackers do a better

399
00:14:52,000 --> 00:14:55,120
job here and are or is microsoft's patch

400
00:14:55,120 --> 00:14:57,360
and apple's new security mechanisms

401
00:14:57,360 --> 00:14:59,519
really kind of

402
00:14:59,519 --> 00:15:01,519
as valuable as their marketing partner

403
00:15:01,519 --> 00:15:03,680
departments would like us to believe

404
00:15:03,680 --> 00:15:06,320
so let's walk through this exploit chain

405
00:15:06,320 --> 00:15:08,560
so the exploit chain starts with a very

406
00:15:08,560 --> 00:15:10,399
neat bug it was not found by me was

407
00:15:10,399 --> 00:15:12,399
found by two other security researchers

408
00:15:12,399 --> 00:15:15,040
in conjunction with cert and what they

409
00:15:15,040 --> 00:15:18,000
found is that even if macros are turned

410
00:15:18,000 --> 00:15:20,639
off they could create a document that

411
00:15:20,639 --> 00:15:22,720
contained macros that would be

412
00:15:22,720 --> 00:15:24,480
automatically executed when the user

413
00:15:24,480 --> 00:15:26,079
opened the document there would be no

414
00:15:26,079 --> 00:15:28,959
alerts no prompts it's pretty neat

415
00:15:28,959 --> 00:15:30,800
so how did they do this

416
00:15:30,800 --> 00:15:32,800
well turns out they have used an

417
00:15:32,800 --> 00:15:36,560
incredibly old file format called sylk

418
00:15:36,560 --> 00:15:38,560
and this file format is literally from

419
00:15:38,560 --> 00:15:40,720
the 1980s so in terms of computer

420
00:15:40,720 --> 00:15:42,480
technologies that's ancient i mean that

421
00:15:42,480 --> 00:15:44,079
was before i was even born and i'm

422
00:15:44,079 --> 00:15:46,639
pretty old so this is like a really old

423
00:15:46,639 --> 00:15:49,040
file format they also found that if they

424
00:15:49,040 --> 00:15:51,759
use this old file format and they wrote

425
00:15:51,759 --> 00:15:54,079
macros in a precursor language that

426
00:15:54,079 --> 00:15:58,639
predated vb it's called xlm not xml xlm

427
00:15:58,639 --> 00:16:00,880
they found that microsoft would still

428
00:16:00,880 --> 00:16:02,320
support this file format because

429
00:16:02,320 --> 00:16:04,880
microsoft is all about compatibility

430
00:16:04,880 --> 00:16:06,000
and they found if they created a

431
00:16:06,000 --> 00:16:08,639
document using this ancient file format

432
00:16:08,639 --> 00:16:11,120
and wrote the macro code in this really

433
00:16:11,120 --> 00:16:14,000
old school macro language

434
00:16:14,000 --> 00:16:16,160
even if macros were set to be fully

435
00:16:16,160 --> 00:16:18,240
blocked in the system security settings

436
00:16:18,240 --> 00:16:20,560
in office they would be automatically

437
00:16:20,560 --> 00:16:22,880
and silently executed

438
00:16:22,880 --> 00:16:24,560
so i wrote a simple proof of concept

439
00:16:24,560 --> 00:16:26,639
based on their codes again credit to

440
00:16:26,639 --> 00:16:28,320
them for finding this bug what we're

441
00:16:28,320 --> 00:16:29,600
going to see is we're going to see me

442
00:16:29,600 --> 00:16:31,680
downloading an office document from the

443
00:16:31,680 --> 00:16:33,440
web opening in this and then we're going

444
00:16:33,440 --> 00:16:36,720
to see the document spawning calc.app

445
00:16:36,720 --> 00:16:38,480
again with no prompts so the first thing

446
00:16:38,480 --> 00:16:40,959
i do i go to this website this slk file

447
00:16:40,959 --> 00:16:43,040
is downloaded double click it it's open

448
00:16:43,040 --> 00:16:46,160
in excel there's macro code in that and

449
00:16:46,160 --> 00:16:48,639
calculator is automatically executed so

450
00:16:48,639 --> 00:16:50,800
this is a great first step we have the

451
00:16:50,800 --> 00:16:53,519
ability now to execute code with no

452
00:16:53,519 --> 00:16:56,240
alerts no warnings so far so good

453
00:16:56,240 --> 00:16:58,639
however we noticed and stressed several

454
00:16:58,639 --> 00:17:00,160
times that

455
00:17:00,160 --> 00:17:02,959
on recent versions of mac os and on more

456
00:17:02,959 --> 00:17:05,919
recent versions of microsoft office

457
00:17:05,919 --> 00:17:09,039
office itself is going to be sandbox so

458
00:17:09,039 --> 00:17:11,039
sure we can spawn calculator but if we

459
00:17:11,039 --> 00:17:12,720
look on the slide we can see that

460
00:17:12,720 --> 00:17:16,559
spawning calc is actually sandboxed

461
00:17:16,559 --> 00:17:18,400
and as i mentioned if you're sandbox you

462
00:17:18,400 --> 00:17:20,079
really can't do anything like you can

463
00:17:20,079 --> 00:17:22,000
spawn calc and that's cool but that's

464
00:17:22,000 --> 00:17:23,760
not as cool as it used to be right back

465
00:17:23,760 --> 00:17:25,839
in the day you spawn cal game over right

466
00:17:25,839 --> 00:17:27,520
now though you need to break out of the

467
00:17:27,520 --> 00:17:29,520
sandbox because if you're an attacker

468
00:17:29,520 --> 00:17:31,120
you want to do things like install a

469
00:17:31,120 --> 00:17:33,919
keylogger install a persistent backdoor

470
00:17:33,919 --> 00:17:35,520
dump the keychain right all those kind

471
00:17:35,520 --> 00:17:38,559
of more problematic activities you can't

472
00:17:38,559 --> 00:17:40,160
do that while you're in the sandbox and

473
00:17:40,160 --> 00:17:42,240
that's exactly why sandboxes were

474
00:17:42,240 --> 00:17:44,480
designed so in short we need to find a

475
00:17:44,480 --> 00:17:48,400
new sandbox escape to do any real damage

476
00:17:48,400 --> 00:17:50,240
so i started looking at microsoft's

477
00:17:50,240 --> 00:17:52,480
patch for adam's bug and it turns out

478
00:17:52,480 --> 00:17:54,559
they didn't actually fix or address the

479
00:17:54,559 --> 00:17:58,080
faulty regex they simply created

480
00:17:58,080 --> 00:17:59,919
another kind of exception to the

481
00:17:59,919 --> 00:18:02,640
exception that basically said sure you

482
00:18:02,640 --> 00:18:04,320
can still create files anywhere on the

483
00:18:04,320 --> 00:18:06,080
file system as long as they start with

484
00:18:06,080 --> 00:18:07,200
tilde

485
00:18:07,200 --> 00:18:09,679
dollar sign but you can't write to the

486
00:18:09,679 --> 00:18:11,360
application script directory or the

487
00:18:11,360 --> 00:18:13,360
launch agent directory so they basically

488
00:18:13,360 --> 00:18:15,760
shut down his attack vector without

489
00:18:15,760 --> 00:18:17,600
actually addressing the bug a lot of

490
00:18:17,600 --> 00:18:19,200
times we see these large companies

491
00:18:19,200 --> 00:18:21,039
patching these bugs in this manner and

492
00:18:21,039 --> 00:18:23,200
yes it kind of stops that one attack but

493
00:18:23,200 --> 00:18:24,559
usually doesn't address the more

494
00:18:24,559 --> 00:18:26,840
systemic or underlying

495
00:18:26,840 --> 00:18:29,520
issue so our goal of course is to be

496
00:18:29,520 --> 00:18:32,799
able to execute a binary a random binary

497
00:18:32,799 --> 00:18:35,360
outside the context of the sandbox so we

498
00:18:35,360 --> 00:18:38,240
can persist so we can do evil things

499
00:18:38,240 --> 00:18:40,000
so we just noted that even on the most

500
00:18:40,000 --> 00:18:42,160
recent version of microsoft office we

501
00:18:42,160 --> 00:18:44,720
can still create these files anywhere on

502
00:18:44,720 --> 00:18:46,400
the file system as long as start with

503
00:18:46,400 --> 00:18:48,799
tilde dollar sign except for the launch

504
00:18:48,799 --> 00:18:51,200
agent directory

505
00:18:51,200 --> 00:18:52,960
turns out we can also do some other neat

506
00:18:52,960 --> 00:18:55,360
things via the sandbox for example we

507
00:18:55,360 --> 00:18:57,440
can see that we can both download and

508
00:18:57,440 --> 00:18:58,720
execute

509
00:18:58,720 --> 00:18:59,600
code

510
00:18:59,600 --> 00:19:01,919
so fired up a process monitor using that

511
00:19:01,919 --> 00:19:04,240
xlm macro languages wrote the

512
00:19:04,240 --> 00:19:06,640
instructions to go out to a web server

513
00:19:06,640 --> 00:19:08,480
and pull something down via curl and

514
00:19:08,480 --> 00:19:10,480
then because it was named tilde dollar

515
00:19:10,480 --> 00:19:11,840
sign i could write it anywhere i just

516
00:19:11,840 --> 00:19:13,360
wrote it to the temp directory and then

517
00:19:13,360 --> 00:19:15,440
somewhat surprisingly i was able to

518
00:19:15,440 --> 00:19:16,559
spawn that

519
00:19:16,559 --> 00:19:18,559
now it's really important to note that

520
00:19:18,559 --> 00:19:20,080
though we can talk to the network and

521
00:19:20,080 --> 00:19:22,640
download and execute scripts those will

522
00:19:22,640 --> 00:19:25,280
still be sandbox because on mac os

523
00:19:25,280 --> 00:19:28,320
anytime you spawn a child process if the

524
00:19:28,320 --> 00:19:30,400
parent process is sandboxed the child

525
00:19:30,400 --> 00:19:32,160
will be sandboxed as well which makes

526
00:19:32,160 --> 00:19:33,440
sense right this is a really smart

527
00:19:33,440 --> 00:19:35,520
design decision

528
00:19:35,520 --> 00:19:36,840
but it's still a

529
00:19:36,840 --> 00:19:40,240
start so what we can do i found via a

530
00:19:40,240 --> 00:19:42,640
python script again name it until the

531
00:19:42,640 --> 00:19:44,559
dollar sign and put it anywhere we want

532
00:19:44,559 --> 00:19:46,799
we can create a login

533
00:19:46,799 --> 00:19:48,880
now a login item is automatically

534
00:19:48,880 --> 00:19:51,520
started the next time the user logs in

535
00:19:51,520 --> 00:19:54,400
and since it's started by mac os

536
00:19:54,400 --> 00:19:57,760
not directly via by us via the sandbox

537
00:19:57,760 --> 00:20:00,400
this means it's not going to be sandbox

538
00:20:00,400 --> 00:20:02,559
so in a way we've now just found sandbox

539
00:20:02,559 --> 00:20:04,840
escape and we can confirm this by

540
00:20:04,840 --> 00:20:07,200
persisting again via our python script

541
00:20:07,200 --> 00:20:08,559
which is sandbox

542
00:20:08,559 --> 00:20:11,200
we can persist terminal.app and if we

543
00:20:11,200 --> 00:20:13,520
log out and then log back in on the

544
00:20:13,520 --> 00:20:15,039
bottom of the slide we can see if we

545
00:20:15,039 --> 00:20:16,799
look at the sandbox

546
00:20:16,799 --> 00:20:18,960
column in activity monitor we can see

547
00:20:18,960 --> 00:20:20,720
that instance of terminal that we

548
00:20:20,720 --> 00:20:23,840
persisted is not sandbox and we shout

549
00:20:23,840 --> 00:20:25,840
out to jaren who talked about true tree

550
00:20:25,840 --> 00:20:28,320
earlier we can now nicely see a process

551
00:20:28,320 --> 00:20:30,320
list confirming that yes again

552
00:20:30,320 --> 00:20:32,960
terminal.app was executed automatically

553
00:20:32,960 --> 00:20:35,360
by the login window when the user

554
00:20:35,360 --> 00:20:37,200
re-logged in and again this is why we

555
00:20:37,200 --> 00:20:39,280
are now outside the context of the

556
00:20:39,280 --> 00:20:41,440
sandbox

557
00:20:41,440 --> 00:20:42,559
however

558
00:20:42,559 --> 00:20:43,520
we

559
00:20:43,520 --> 00:20:46,320
run right into catalina's new security

560
00:20:46,320 --> 00:20:48,159
requirements specifically the quarantine

561
00:20:48,159 --> 00:20:50,480
and notarization issues so yes we can

562
00:20:50,480 --> 00:20:53,120
persist say an arbitrary binary as a

563
00:20:53,120 --> 00:20:56,240
login item and yes it will in theory be

564
00:20:56,240 --> 00:20:58,320
executed outside the context of the

565
00:20:58,320 --> 00:21:02,159
sandbox but before it's run mac os on

566
00:21:02,159 --> 00:21:04,720
catalina will check and since this

567
00:21:04,720 --> 00:21:07,200
binary is likely downloaded by us via

568
00:21:07,200 --> 00:21:08,960
our malicious macro code it's going to

569
00:21:08,960 --> 00:21:10,640
have a quarantine attribute set which

570
00:21:10,640 --> 00:21:12,799
means the system is going to check if it

571
00:21:12,799 --> 00:21:15,120
has been notarized by apple and since it

572
00:21:15,120 --> 00:21:16,960
obviously won't be it will be

573
00:21:16,960 --> 00:21:19,039
resoundingly blocked and this will be

574
00:21:19,039 --> 00:21:22,159
logged to the system

575
00:21:22,159 --> 00:21:26,080
but hope is not lost uh if and this is

576
00:21:26,080 --> 00:21:28,799
still a big if if we can create a launch

577
00:21:28,799 --> 00:21:31,039
agent we can specify arguments in the

578
00:21:31,039 --> 00:21:33,360
property list file we create and what we

579
00:21:33,360 --> 00:21:36,640
can do is we can create a interactive

580
00:21:36,640 --> 00:21:40,159
remote shell that leverages bash

581
00:21:40,159 --> 00:21:42,400
and since bash is an apple process apple

582
00:21:42,400 --> 00:21:44,320
binary that's already on the system

583
00:21:44,320 --> 00:21:46,320
there won't be any quarantine checks

584
00:21:46,320 --> 00:21:48,080
that's implemented so this would then

585
00:21:48,080 --> 00:21:50,480
allow bash to connect out to our command

586
00:21:50,480 --> 00:21:52,640
control server outside the context of

587
00:21:52,640 --> 00:21:54,320
the sandbox which would allow us to

588
00:21:54,320 --> 00:21:55,919
download and execute files that would

589
00:21:55,919 --> 00:21:56,880
not be

590
00:21:56,880 --> 00:21:59,200
uh quarantined and thus not

591
00:21:59,200 --> 00:22:01,919
be validated for having been notarized

592
00:22:01,919 --> 00:22:04,159
but recall microsoft's patch

593
00:22:04,159 --> 00:22:07,039
specifically prevents us from creating

594
00:22:07,039 --> 00:22:08,640
launch agents

595
00:22:08,640 --> 00:22:11,280
so we have these two potential pieces

596
00:22:11,280 --> 00:22:13,360
but we can't really put them together so

597
00:22:13,360 --> 00:22:15,600
this is frustrating like i

598
00:22:15,600 --> 00:22:17,120
munged on this for a good day because it

599
00:22:17,120 --> 00:22:19,520
really annoyed me so we can escape the

600
00:22:19,520 --> 00:22:21,840
sandbox right that's cool

601
00:22:21,840 --> 00:22:24,000
uh via login items but login items

602
00:22:24,000 --> 00:22:26,000
cannot take arguments you can't pass

603
00:22:26,000 --> 00:22:28,480
anything to the item you're persisting

604
00:22:28,480 --> 00:22:30,559
they also can't be random binaries

605
00:22:30,559 --> 00:22:33,120
because again when they are about to be

606
00:22:33,120 --> 00:22:35,440
launched mac os will be like gtfo this

607
00:22:35,440 --> 00:22:37,679
is not warranty so sure we can persist

608
00:22:37,679 --> 00:22:39,919
calculator or we can persist terminal

609
00:22:39,919 --> 00:22:41,679
that will be executed but again since we

610
00:22:41,679 --> 00:22:43,360
can't pass any command line arguments

611
00:22:43,360 --> 00:22:46,000
this is essentially useless

612
00:22:46,000 --> 00:22:48,400
and sure as we showed we can also bypass

613
00:22:48,400 --> 00:22:50,400
or get around sidestep apple's

614
00:22:50,400 --> 00:22:52,559
quarantine and notarization requirements

615
00:22:52,559 --> 00:22:54,640
using a launch agent

616
00:22:54,640 --> 00:22:56,480
but again we can't create a launch agent

617
00:22:56,480 --> 00:22:58,320
because microsoft has specifically

618
00:22:58,320 --> 00:23:00,480
patched that attack vector

619
00:23:00,480 --> 00:23:02,480
so in other words what we need to do is

620
00:23:02,480 --> 00:23:05,200
we need to find a way for the system or

621
00:23:05,200 --> 00:23:07,600
an apple binary again with no arguments

622
00:23:07,600 --> 00:23:11,440
to create a launch agent for us

623
00:23:11,440 --> 00:23:13,280
so i kind of had this random idea and

624
00:23:13,280 --> 00:23:14,799
this was kind of an epiphany i'm very

625
00:23:14,799 --> 00:23:16,880
proud of this but i said

626
00:23:16,880 --> 00:23:19,440
what happens if i persist it's weird

627
00:23:19,440 --> 00:23:20,880
that i get proud of these things but you

628
00:23:20,880 --> 00:23:23,200
know maybe i need a new home but anyways

629
00:23:23,200 --> 00:23:26,159
i said what happens if i persist a zip

630
00:23:26,159 --> 00:23:29,440
file like can you even do that and okay

631
00:23:29,440 --> 00:23:31,280
let's give this a try you know what does

632
00:23:31,280 --> 00:23:33,440
this do and it turns out if you persist

633
00:23:33,440 --> 00:23:36,880
a you know a zip file or some other file

634
00:23:36,880 --> 00:23:39,120
on login mac os will automatically

635
00:23:39,120 --> 00:23:41,279
invoke the file handle handler to

636
00:23:41,279 --> 00:23:43,440
process that type of file so this means

637
00:23:43,440 --> 00:23:46,080
if we persist a zip file when the user

638
00:23:46,080 --> 00:23:48,320
logs in again apple will execute the

639
00:23:48,320 --> 00:23:51,919
archive utility to unzip our file

640
00:23:51,919 --> 00:23:53,760
now remember we want to create a launch

641
00:23:53,760 --> 00:23:56,159
agent but due to office's

642
00:23:56,159 --> 00:23:57,840
custom sandbox rule we can't actually

643
00:23:57,840 --> 00:23:59,440
write any files to the launch agent

644
00:23:59,440 --> 00:24:01,440
directory but if that doesn't exist

645
00:24:01,440 --> 00:24:03,039
which it doesn't on default installs of

646
00:24:03,039 --> 00:24:05,520
mac os what we can do is we can place a

647
00:24:05,520 --> 00:24:07,440
zip file one directory up from the

648
00:24:07,440 --> 00:24:09,520
launch agent directory specifically in

649
00:24:09,520 --> 00:24:10,400
tilda

650
00:24:10,400 --> 00:24:14,000
library we persist then that zip file

651
00:24:14,000 --> 00:24:17,039
then when the user logs in mac os will

652
00:24:17,039 --> 00:24:19,039
be like oh you persisted a zip file i

653
00:24:19,039 --> 00:24:20,559
know exactly what to do you probably

654
00:24:20,559 --> 00:24:22,400
want to unzip that file

655
00:24:22,400 --> 00:24:25,039
if we create that zip file in a special

656
00:24:25,039 --> 00:24:26,960
format that has the launch agent

657
00:24:26,960 --> 00:24:29,360
directory and then a launch agent p list

658
00:24:29,360 --> 00:24:32,240
for us the archive directory will create

659
00:24:32,240 --> 00:24:34,880
that launch agent for us and again this

660
00:24:34,880 --> 00:24:36,960
all works because even though microsoft

661
00:24:36,960 --> 00:24:39,679
office has this rule to block creating

662
00:24:39,679 --> 00:24:42,000
the uh launch agents we are now outside

663
00:24:42,000 --> 00:24:44,799
the sandbox and archive utility is doing

664
00:24:44,799 --> 00:24:47,120
the one for us

665
00:24:47,120 --> 00:24:49,440
so here's the entire exploration the

666
00:24:49,440 --> 00:24:52,159
user opens one of these old school slk

667
00:24:52,159 --> 00:24:55,440
files this contains these xlm macro code

668
00:24:55,440 --> 00:24:57,200
which again it's automatically executed

669
00:24:57,200 --> 00:24:59,679
with no alerts what this does is it

670
00:24:59,679 --> 00:25:01,919
downloads and persists this specially

671
00:25:01,919 --> 00:25:04,080
crafted zip file

672
00:25:04,080 --> 00:25:06,400
and then the next time the user logs in

673
00:25:06,400 --> 00:25:08,320
archive utility which is assigned apple

674
00:25:08,320 --> 00:25:10,320
binary doesn't have to be notarized or

675
00:25:10,320 --> 00:25:12,880
anything will execute outside the

676
00:25:12,880 --> 00:25:14,240
context of the sandbox because we're

677
00:25:14,240 --> 00:25:16,159
running as a login item it will kindly

678
00:25:16,159 --> 00:25:18,559
unzip the zip archive for us and we'll

679
00:25:18,559 --> 00:25:20,960
create the launch agent for us now we

680
00:25:20,960 --> 00:25:22,640
have to wait one more time until the

681
00:25:22,640 --> 00:25:24,799
user logs out and logs in again but

682
00:25:24,799 --> 00:25:27,600
since now we've created a launch agent

683
00:25:27,600 --> 00:25:30,000
this again is also started automatically

684
00:25:30,000 --> 00:25:32,320
by mac os which will then execute our

685
00:25:32,320 --> 00:25:34,640
bash based back door so again here's our

686
00:25:34,640 --> 00:25:36,400
bash based back door it is now

687
00:25:36,400 --> 00:25:38,640
persistently installed as a launch agent

688
00:25:38,640 --> 00:25:40,880
when the user logs in the second time it

689
00:25:40,880 --> 00:25:43,360
it'll be automatically started by mac os

690
00:25:43,360 --> 00:25:45,039
it's running outside the context of the

691
00:25:45,039 --> 00:25:48,080
sandbox awesome and it's also then

692
00:25:48,080 --> 00:25:50,640
allows us to download and unquarantine

693
00:25:50,640 --> 00:25:51,520
files

694
00:25:51,520 --> 00:25:53,279
so this is great this is basically game

695
00:25:53,279 --> 00:25:54,080
over

696
00:25:54,080 --> 00:25:56,159
so what is what did i decide to persist

697
00:25:56,159 --> 00:25:58,240
now that i have sandbox escape i thought

698
00:25:58,240 --> 00:25:59,760
it'd be really neat and kind of the

699
00:25:59,760 --> 00:26:01,600
ultimate uh confirmation of this

700
00:26:01,600 --> 00:26:04,559
technique to persist an unsigned piece

701
00:26:04,559 --> 00:26:06,880
of repurposed malware and as you can see

702
00:26:06,880 --> 00:26:08,400
in the slack logs again i want to give a

703
00:26:08,400 --> 00:26:10,400
shout out to jaren because he kind of

704
00:26:10,400 --> 00:26:11,200
like

705
00:26:11,200 --> 00:26:12,640
helped me through this whole process i

706
00:26:12,640 --> 00:26:14,159
was trying a bunch of things and kept

707
00:26:14,159 --> 00:26:16,400
failing uh so obviously when i got to

708
00:26:16,400 --> 00:26:18,480
the end and i got this all to work i was

709
00:26:18,480 --> 00:26:20,559
i was really stoked and so thank you for

710
00:26:20,559 --> 00:26:21,840
joining

711
00:26:21,840 --> 00:26:23,760
hanging out with his like emotional

712
00:26:23,760 --> 00:26:26,480
roller coaster

713
00:26:26,640 --> 00:26:27,520
so

714
00:26:27,520 --> 00:26:28,880
let's wrap this up

715
00:26:28,880 --> 00:26:31,840
so first as the responsible security

716
00:26:31,840 --> 00:26:33,120
researcher that i

717
00:26:33,120 --> 00:26:34,400
generally am

718
00:26:34,400 --> 00:26:36,720
i reported

719
00:26:36,720 --> 00:26:39,120
i reported these bugs to both uh apple

720
00:26:39,120 --> 00:26:41,039
and microsoft last year

721
00:26:41,039 --> 00:26:43,520
microsoft was kind of like yeah this is

722
00:26:43,520 --> 00:26:45,279
valid but this is a known issue on the

723
00:26:45,279 --> 00:26:47,279
apple side and i was like yeah because i

724
00:26:47,279 --> 00:26:49,760
also reported this to apple so as far as

725
00:26:49,760 --> 00:26:51,919
i know microsoft didn't do anything

726
00:26:51,919 --> 00:26:54,159
apple on the other side acknowledged my

727
00:26:54,159 --> 00:26:56,400
submission and then i didn't really hear

728
00:26:56,400 --> 00:26:57,919
a lot from them followed up with them

729
00:26:57,919 --> 00:27:00,080
last week and they said ah we fixed this

730
00:27:00,080 --> 00:27:00,840
in

731
00:27:00,840 --> 00:27:04,240
1015.3 so kudos to them you know be nice

732
00:27:04,240 --> 00:27:05,279
if there was a little more back and

733
00:27:05,279 --> 00:27:07,039
forth communication but at the end of

734
00:27:07,039 --> 00:27:08,880
the day the good news is they have i

735
00:27:08,880 --> 00:27:11,760
believe comprehensively fix this so

736
00:27:11,760 --> 00:27:13,279
kudos to apple for you know kind of

737
00:27:13,279 --> 00:27:15,360
taking this a little more seriously than

738
00:27:15,360 --> 00:27:18,159
perhaps uh microsoft

739
00:27:18,159 --> 00:27:20,159
now i briefly want to mention detection

740
00:27:20,159 --> 00:27:22,320
for these and other type exploits

741
00:27:22,320 --> 00:27:23,679
because it turns out if you're looking

742
00:27:23,679 --> 00:27:25,600
for the right things which you should be

743
00:27:25,600 --> 00:27:28,000
it's actually pretty easy to detect this

744
00:27:28,000 --> 00:27:30,320
even though we're leveraging a series of

745
00:27:30,320 --> 00:27:31,440
zero days

746
00:27:31,440 --> 00:27:32,720
so the first thing is if you're

747
00:27:32,720 --> 00:27:34,320
monitoring processes and if you're

748
00:27:34,320 --> 00:27:36,240
creating an endpoint security product

749
00:27:36,240 --> 00:27:38,799
you should be monitoring processes

750
00:27:38,799 --> 00:27:41,520
we can see that microsoft excel has

751
00:27:41,520 --> 00:27:44,000
spawned both pearl and python like

752
00:27:44,000 --> 00:27:46,480
that's a big red flag like i

753
00:27:46,480 --> 00:27:47,760
i'm not aware of any legitimate

754
00:27:47,760 --> 00:27:49,600
scenarios where like words should be

755
00:27:49,600 --> 00:27:51,279
spawning python and if it is you should

756
00:27:51,279 --> 00:27:53,279
be able to probably understand or look

757
00:27:53,279 --> 00:27:54,640
and figure out if it is legitimate but

758
00:27:54,640 --> 00:27:55,440
again

759
00:27:55,440 --> 00:27:57,840
look for this this is not legitimate

760
00:27:57,840 --> 00:27:59,200
behavior

761
00:27:59,200 --> 00:28:00,799
and then second if you're monitoring for

762
00:28:00,799 --> 00:28:02,960
persistence which again is something you

763
00:28:02,960 --> 00:28:04,159
i think you should be doing because the

764
00:28:04,159 --> 00:28:05,919
majority of malware a lot of exploits

765
00:28:05,919 --> 00:28:08,399
will have some persistent component

766
00:28:08,399 --> 00:28:11,360
you would see a zip file being persisted

767
00:28:11,360 --> 00:28:13,840
as a login item so first anytime a login

768
00:28:13,840 --> 00:28:15,679
item is persisted take a look at that

769
00:28:15,679 --> 00:28:17,039
because that might be just a normal

770
00:28:17,039 --> 00:28:19,120
piece of malware persistent but if you

771
00:28:19,120 --> 00:28:21,039
see something that's not an application

772
00:28:21,039 --> 00:28:23,440
being persistent like that's a big red

773
00:28:23,440 --> 00:28:25,440
flag

774
00:28:25,440 --> 00:28:27,919
all right so that is a wrap uh

775
00:28:27,919 --> 00:28:29,440
we kind of showed today the current

776
00:28:29,440 --> 00:28:31,679
state of affairs in macro world we saw

777
00:28:31,679 --> 00:28:33,679
that attackers yes they are now kind of

778
00:28:33,679 --> 00:28:36,480
focusing more and more on mac os as max

779
00:28:36,480 --> 00:28:38,720
become more prevalent in the enterprise

780
00:28:38,720 --> 00:28:40,799
uh luckily though current macro based

781
00:28:40,799 --> 00:28:43,440
attacks are pretty lame however we

782
00:28:43,440 --> 00:28:45,600
showed if we poked around and kind of

783
00:28:45,600 --> 00:28:48,240
abused some features of mac os that we

784
00:28:48,240 --> 00:28:51,120
were pretty easily able to find a zero

785
00:28:51,120 --> 00:28:53,600
click exploit that could be delivered to

786
00:28:53,600 --> 00:28:56,880
users and allow us to remotely infect

787
00:28:56,880 --> 00:28:59,279
macos users even at the time on fully

788
00:28:59,279 --> 00:29:01,679
patched uh macos systems running the

789
00:29:01,679 --> 00:29:04,559
latest version of microsoft office and

790
00:29:04,559 --> 00:29:06,960
yes again kudos to apple for the new

791
00:29:06,960 --> 00:29:08,960
quarantine and notarization enhancements

792
00:29:08,960 --> 00:29:10,320
those are good

793
00:29:10,320 --> 00:29:11,039
but

794
00:29:11,039 --> 00:29:12,159
i always like to say that apple's

795
00:29:12,159 --> 00:29:14,080
security enhancements are not a panacea

796
00:29:14,080 --> 00:29:15,440
right so they're a step in the right

797
00:29:15,440 --> 00:29:16,880
direction and they make it definitely

798
00:29:16,880 --> 00:29:19,120
harder to exploit uh but you know we

799
00:29:19,120 --> 00:29:20,960
should always i think be still

800
00:29:20,960 --> 00:29:22,799
monitoring the system for suspicious

801
00:29:22,799 --> 00:29:24,880
activities because attackers will always

802
00:29:24,880 --> 00:29:27,679
be able to find ways around that so

803
00:29:27,679 --> 00:29:29,760
that's a wrap uh mahalo for attending my

804
00:29:29,760 --> 00:29:32,640
talk we have a few minutes if there's

805
00:29:32,640 --> 00:29:35,440
any questions about macros bypasses or

806
00:29:35,440 --> 00:29:37,919
anything else

807
00:29:38,240 --> 00:29:41,240
yes

808
00:29:42,799 --> 00:29:44,480
so the question is

809
00:29:44,480 --> 00:29:46,240
you know i i have a problem and i've

810
00:29:46,240 --> 00:29:47,679
talked about this with some friends you

811
00:29:47,679 --> 00:29:49,039
know when when i get stuck at something

812
00:29:49,039 --> 00:29:50,880
at work it's just you know it's like go

813
00:29:50,880 --> 00:29:52,799
go home and leave work and it's like no

814
00:29:52,799 --> 00:29:54,880
it's just kind of on my mind so i

815
00:29:54,880 --> 00:29:56,240
remember it was the weekend and i was

816
00:29:56,240 --> 00:29:58,240
like man i live in hawaii and it's the

817
00:29:58,240 --> 00:29:59,840
weekend i should be stoked i was like

818
00:29:59,840 --> 00:30:01,039
man like

819
00:30:01,039 --> 00:30:04,159
i know i know i can break this and i was

820
00:30:04,159 --> 00:30:06,480
like what can i do so when i kind of got

821
00:30:06,480 --> 00:30:08,320
the zip fix the

822
00:30:08,320 --> 00:30:11,120
zip trick working i was i was ecstatic

823
00:30:11,120 --> 00:30:13,279
yeah so you know i guess we have our

824
00:30:13,279 --> 00:30:16,080
moments every time

825
00:30:16,080 --> 00:30:17,679
any other questions

826
00:30:17,679 --> 00:30:20,559
yeah jaren so the

827
00:30:20,559 --> 00:30:23,559
microsoft

828
00:30:26,720 --> 00:30:28,640
correct so that was patched uh

829
00:30:28,640 --> 00:30:30,640
eventually so by the

830
00:30:30,640 --> 00:30:31,360
so

831
00:30:31,360 --> 00:30:33,120
the back story on that is the original

832
00:30:33,120 --> 00:30:34,720
researchers found that this would work

833
00:30:34,720 --> 00:30:37,360
on office 2011. and so microsoft said

834
00:30:37,360 --> 00:30:39,279
not fix that's way too old uh the

835
00:30:39,279 --> 00:30:40,799
problem was what cert found is if the

836
00:30:40,799 --> 00:30:43,039
user had selected disable macros as the

837
00:30:43,039 --> 00:30:44,640
top security settings which i think is

838
00:30:44,640 --> 00:30:47,200
the best security settings to fix that

839
00:30:47,200 --> 00:30:48,960
if that setting was enabled those macros

840
00:30:48,960 --> 00:30:50,880
would still automatically execute so

841
00:30:50,880 --> 00:30:52,720
cert kind of found that and pushed out

842
00:30:52,720 --> 00:30:55,120
an alert before microsoft had had a fix

843
00:30:55,120 --> 00:30:57,200
so that was a zero day vulnerability for

844
00:30:57,200 --> 00:30:59,519
a few months but yes microsoft went back

845
00:30:59,519 --> 00:31:02,000
and specifically addressed the automatic

846
00:31:02,000 --> 00:31:04,640
macro code execution but the sandbox

847
00:31:04,640 --> 00:31:06,880
escape and quarantine thing uh i didn't

848
00:31:06,880 --> 00:31:08,240
point this out but you could plug that

849
00:31:08,240 --> 00:31:10,000
into any attack so if you have a buffer

850
00:31:10,000 --> 00:31:11,600
overflow in word or another way to

851
00:31:11,600 --> 00:31:13,440
execute macros or if you're just using

852
00:31:13,440 --> 00:31:15,360
traditional methods that the attacker

853
00:31:15,360 --> 00:31:17,039
would user would still have to click

854
00:31:17,039 --> 00:31:19,200
allow you could kind of couple those

855
00:31:19,200 --> 00:31:22,000
components and have this now uh generic

856
00:31:22,000 --> 00:31:24,159
sandbox escape and bypass of apple's

857
00:31:24,159 --> 00:31:26,000
quarantine mechanisms

858
00:31:26,000 --> 00:31:27,120
yeah so

859
00:31:27,120 --> 00:31:28,320
it's a nice kind of component you can

860
00:31:28,320 --> 00:31:30,480
swap in different pieces of this to

861
00:31:30,480 --> 00:31:32,880
build other exploit chains

862
00:31:32,880 --> 00:31:34,240
yes

863
00:31:34,240 --> 00:31:37,120
i'm very curious

864
00:31:37,120 --> 00:31:39,200
me too uh there's some apple attendees

865
00:31:39,200 --> 00:31:40,559
here they probably will be able to share

866
00:31:40,559 --> 00:31:42,320
some more information uh if i had the

867
00:31:42,320 --> 00:31:44,640
gas and i might be totally wrong

868
00:31:44,640 --> 00:31:46,720
they probably prevented

869
00:31:46,720 --> 00:31:48,799
uh the creation of login items uh

870
00:31:48,799 --> 00:31:51,039
because in theory

871
00:31:51,039 --> 00:31:52,320
if you're sandbox you shouldn't be able

872
00:31:52,320 --> 00:31:54,240
to create a login item um so that to me

873
00:31:54,240 --> 00:31:56,399
was very surprising that i could do that

874
00:31:56,399 --> 00:31:58,320
um that was really kind of

875
00:31:58,320 --> 00:32:00,000
the second step after executing the

876
00:32:00,000 --> 00:32:01,519
macros so i think that was the first

877
00:32:01,519 --> 00:32:03,120
thing that they did

878
00:32:03,120 --> 00:32:04,960
i'm not sure if they addressed the

879
00:32:04,960 --> 00:32:07,279
quarantine and notarization issue

880
00:32:07,279 --> 00:32:08,480
because again like i mentioned to

881
00:32:08,480 --> 00:32:10,080
jaron's question in theory you could

882
00:32:10,080 --> 00:32:11,760
take that piece and use that in another

883
00:32:11,760 --> 00:32:14,880
attack so say you have a browser bug or

884
00:32:14,880 --> 00:32:16,080
some other exploit that gives you

885
00:32:16,080 --> 00:32:18,320
arbitrary code execution on mac os if

886
00:32:18,320 --> 00:32:20,640
you want to persist something uh in a

887
00:32:20,640 --> 00:32:22,480
manner if you do a straight persistence

888
00:32:22,480 --> 00:32:23,679
quarantine is probably going to kick

889
00:32:23,679 --> 00:32:25,519
your butt with notarization

890
00:32:25,519 --> 00:32:26,559
unless you use one of the tricks that

891
00:32:26,559 --> 00:32:28,399
maybe vladimir talked about yesterday uh

892
00:32:28,399 --> 00:32:30,640
but in this case you create a login uh

893
00:32:30,640 --> 00:32:32,399
sorry a launch agent using something

894
00:32:32,399 --> 00:32:35,360
like bash uh and then i don't believe

895
00:32:35,360 --> 00:32:36,880
bash that's the quarantine attribute so

896
00:32:36,880 --> 00:32:38,720
notarization checks don't even apply or

897
00:32:38,720 --> 00:32:41,039
if bash does you can remove them

898
00:32:41,039 --> 00:32:43,200
directly before running that

899
00:32:43,200 --> 00:32:44,720
i believe apple probably is going to do

900
00:32:44,720 --> 00:32:46,640
something about that i imagine moving

901
00:32:46,640 --> 00:32:48,080
forward in

902
00:32:48,080 --> 00:32:50,159
10.16 they're probably going to say

903
00:32:50,159 --> 00:32:52,159
everything has to be notarized that's

904
00:32:52,159 --> 00:32:54,399
obviously the path they're going down

905
00:32:54,399 --> 00:32:56,159
so for now it's kind of dependent on the

906
00:32:56,159 --> 00:32:57,760
quarantine attribute so that's not there

907
00:32:57,760 --> 00:33:02,158
notarization checks aren't uh enforced

908
00:33:02,240 --> 00:33:03,200
yes

909
00:33:03,200 --> 00:33:05,679
no ask away i love so for for uh the

910
00:33:05,679 --> 00:33:07,840
library exhibit distraction is that

911
00:33:07,840 --> 00:33:09,120
something that's always happened because

912
00:33:09,120 --> 00:33:10,640
i'm not familiar with that behavior it

913
00:33:10,640 --> 00:33:12,159
was just in libraries it was just

914
00:33:12,159 --> 00:33:14,559
extracted

915
00:33:14,559 --> 00:33:16,240
yeah

916
00:33:16,240 --> 00:33:17,919
that was like

917
00:33:17,919 --> 00:33:19,679
you

918
00:33:19,679 --> 00:33:20,559
oh

919
00:33:20,559 --> 00:33:23,440
yeah yeah yeah so yeah if you persist

920
00:33:23,440 --> 00:33:24,880
but the thing is there's other file

921
00:33:24,880 --> 00:33:26,640
formats that you could probably persist

922
00:33:26,640 --> 00:33:28,559
so it's kind of interesting that apple

923
00:33:28,559 --> 00:33:30,399
allows you to persist

924
00:33:30,399 --> 00:33:32,399
non-apps um again it's probably a

925
00:33:32,399 --> 00:33:33,840
usability thing but i can't really think

926
00:33:33,840 --> 00:33:35,679
of a usability case where you're like i

927
00:33:35,679 --> 00:33:37,360
want to persist um

928
00:33:37,360 --> 00:33:39,279
that so this is kind of an interesting

929
00:33:39,279 --> 00:33:41,200
surprising trick

930
00:33:41,200 --> 00:33:43,039
what's your question over here yes

931
00:33:43,039 --> 00:33:46,039
yes

932
00:33:53,440 --> 00:33:54,799
yeah so the question was kind of looking

933
00:33:54,799 --> 00:33:57,360
into these other microsoft file formats

934
00:33:57,360 --> 00:33:58,559
you know i really like to just focus on

935
00:33:58,559 --> 00:34:01,360
mac os stuff uh so i really didn't dig

936
00:34:01,360 --> 00:34:04,559
too much into these microsoft specific

937
00:34:04,559 --> 00:34:07,120
uh languages and support uh the

938
00:34:07,120 --> 00:34:09,599
researchers that found the the original

939
00:34:09,599 --> 00:34:11,440
bug that originally

940
00:34:11,440 --> 00:34:13,599
they only recognized affecting uh office

941
00:34:13,599 --> 00:34:15,918
2011. they gave some really good talks

942
00:34:15,918 --> 00:34:18,960
and um i think if i hop to here i've

943
00:34:18,960 --> 00:34:21,040
cited some of their blog posts for

944
00:34:21,040 --> 00:34:23,440
example like the abusing the sylk file

945
00:34:23,440 --> 00:34:24,639
format they really go into all the

946
00:34:24,639 --> 00:34:26,879
details of that uh but i don't know if

947
00:34:26,879 --> 00:34:28,639
they've mentioned uh ole or some of the

948
00:34:28,639 --> 00:34:30,239
other specific file types so maybe

949
00:34:30,239 --> 00:34:31,918
something good to look into kind of

950
00:34:31,918 --> 00:34:33,918
outside my area of expertise um but

951
00:34:33,918 --> 00:34:34,879
again it'd be interesting to see if

952
00:34:34,879 --> 00:34:36,320
there's other avenues that you could

953
00:34:36,320 --> 00:34:38,639
kick off this same exploit chain

954
00:34:38,639 --> 00:34:41,040
as well

955
00:34:45,440 --> 00:34:47,199
yeah no they were the one like when i

956
00:34:47,199 --> 00:34:48,800
read about this bug i was like what the

957
00:34:48,800 --> 00:34:51,359
hell i was like it's xml no xlm it's

958
00:34:51,359 --> 00:34:53,359
like uh excel for

959
00:34:53,359 --> 00:34:54,239
you know

960
00:34:54,239 --> 00:34:56,159
macro language and this file format

961
00:34:56,159 --> 00:34:58,320
again it's back from the 1980s so you

962
00:34:58,320 --> 00:34:59,200
know one thing that's great about

963
00:34:59,200 --> 00:35:02,000
microsoft is they support these legacy

964
00:35:02,000 --> 00:35:03,599
file formats and applications that were

965
00:35:03,599 --> 00:35:05,599
just written eons before security was

966
00:35:05,599 --> 00:35:07,520
even on everyone's mind apple does a

967
00:35:07,520 --> 00:35:08,960
little better job right they have no

968
00:35:08,960 --> 00:35:10,480
problem saying our way or the highway

969
00:35:10,480 --> 00:35:11,839
and a lot of times that is to kick out

970
00:35:11,839 --> 00:35:13,680
legacy stuff which from a security point

971
00:35:13,680 --> 00:35:16,000
of view makes a lot of sense so users

972
00:35:16,000 --> 00:35:17,839
complain and loan kernel extension is a

973
00:35:17,839 --> 00:35:19,920
great example but purely from a security

974
00:35:19,920 --> 00:35:21,280
point of view that's actually a really

975
00:35:21,280 --> 00:35:23,680
good idea

976
00:35:23,839 --> 00:35:25,280
awesome

977
00:35:25,280 --> 00:35:29,720
all right we have prizes to give away so

978
00:35:38,000 --> 00:35:41,960
give me one second

979
00:35:48,480 --> 00:35:51,640
all right

980
00:36:01,920 --> 00:36:04,920
oh

981
00:36:49,680 --> 00:36:51,760
all right so you're all at the objective

982
00:36:51,760 --> 00:36:53,680
by the sea conference in case

983
00:36:53,680 --> 00:36:56,480
that was not obvious

984
00:36:56,880 --> 00:36:58,800
uh it's gonna wrap this up have a few

985
00:36:58,800 --> 00:36:59,839
final

986
00:36:59,839 --> 00:37:01,920
to-do's uh before we

987
00:37:01,920 --> 00:37:04,320
go on our merry way ah so again as i

988
00:37:04,320 --> 00:37:05,760
mentioned at the beginning this

989
00:37:05,760 --> 00:37:08,160
conference is made possible by you know

990
00:37:08,160 --> 00:37:10,880
a few supporters uh first and foremost

991
00:37:10,880 --> 00:37:13,200
all the patreon supporters of objective

992
00:37:13,200 --> 00:37:16,079
c yourself included uh your financial

993
00:37:16,079 --> 00:37:18,720
support goes to creating this amazing

994
00:37:18,720 --> 00:37:21,359
conference also the free open source

995
00:37:21,359 --> 00:37:23,839
security tools on objective by the sea

996
00:37:23,839 --> 00:37:26,079
blogs uh and you know i got a lot of

997
00:37:26,079 --> 00:37:27,280
really cool emails from people around

998
00:37:27,280 --> 00:37:29,119
the world who you know thank me

999
00:37:29,119 --> 00:37:30,720
personally for a lot of the work i do

1000
00:37:30,720 --> 00:37:32,160
but i always like to say hey it's kind

1001
00:37:32,160 --> 00:37:34,240
of this more community app so really it

1002
00:37:34,240 --> 00:37:36,560
couldn't be done without all of you so

1003
00:37:36,560 --> 00:37:39,520
round of applause to you

1004
00:37:41,510 --> 00:37:44,160
[Applause]

1005
00:37:44,160 --> 00:37:46,320
also i want to play josh posix ninja for

1006
00:37:46,320 --> 00:37:47,839
that awesome quote

1007
00:37:47,839 --> 00:37:49,599
i'm gonna print that out

1008
00:37:49,599 --> 00:37:51,200
put it above my bed

1009
00:37:51,200 --> 00:37:52,720
all right i also want to thank the

1010
00:37:52,720 --> 00:37:55,119
sponsors of the conference

1011
00:37:55,119 --> 00:37:56,560
you know we have a lot of really great

1012
00:37:56,560 --> 00:37:59,200
sponsors who also financially contribute

1013
00:37:59,200 --> 00:38:01,760
to running a conference uh but more so a

1014
00:38:01,760 --> 00:38:02,720
lot of these companies are very

1015
00:38:02,720 --> 00:38:05,760
passionate about mac security and uh you

1016
00:38:05,760 --> 00:38:07,520
know published a lot of great research

1017
00:38:07,520 --> 00:38:09,200
you know for example uh we had some

1018
00:38:09,200 --> 00:38:11,440
speakers from the various uh sponsors

1019
00:38:11,440 --> 00:38:12,640
who talked about some really cool

1020
00:38:12,640 --> 00:38:14,240
research they're doing really pushing

1021
00:38:14,240 --> 00:38:16,000
the envelope working with apple to

1022
00:38:16,000 --> 00:38:18,800
create and improve security of mac os

1023
00:38:18,800 --> 00:38:20,880
users around the world so let's give

1024
00:38:20,880 --> 00:38:22,770
them a round of applause

1025
00:38:22,770 --> 00:38:27,159
[Applause]

1026
00:38:28,160 --> 00:38:31,119
also speaker sponsors uh you know hawaii

1027
00:38:31,119 --> 00:38:33,119
is kind of far away from oh pretty much

1028
00:38:33,119 --> 00:38:35,359
everything um

1029
00:38:35,359 --> 00:38:36,240
i know it's a great place to go and

1030
00:38:36,240 --> 00:38:37,839
visit but i just want to acknowledge

1031
00:38:37,839 --> 00:38:40,720
these companies for uh you know letting

1032
00:38:40,720 --> 00:38:42,079
their speakers come out talk about the

1033
00:38:42,079 --> 00:38:43,760
research they do covering lodging and

1034
00:38:43,760 --> 00:38:45,839
travel costs uh definitely not something

1035
00:38:45,839 --> 00:38:47,839
i take for granted so

1036
00:38:47,839 --> 00:38:49,200
one more round of applause for our

1037
00:38:49,200 --> 00:38:52,399
incredible speaker sponsors

1038
00:38:52,440 --> 00:38:55,570
[Applause]

1039
00:38:56,240 --> 00:38:58,079
cool so we also have some exciting news

1040
00:38:58,079 --> 00:38:59,599
we mentioned at the beginning that

1041
00:38:59,599 --> 00:39:02,000
t-shirt sales 100 the sales go to a

1042
00:39:02,000 --> 00:39:04,079
local charity again the charity we chose

1043
00:39:04,079 --> 00:39:05,200
is

1044
00:39:05,200 --> 00:39:06,560
who works with

1045
00:39:06,560 --> 00:39:09,920
families uh here on the island of maui

1046
00:39:09,920 --> 00:39:11,440
families who have children with

1047
00:39:11,440 --> 00:39:14,320
development developmental needs uh we

1048
00:39:14,320 --> 00:39:16,960
sold uh between 50 and 60 t-shirts which

1049
00:39:16,960 --> 00:39:18,640
means we raised 1500

1050
00:39:18,640 --> 00:39:20,800
uh the conference matches that 100

1051
00:39:20,800 --> 00:39:23,200
so we actually raised over 3 000 which

1052
00:39:23,200 --> 00:39:24,880
is the most we have ever raised at an

1053
00:39:24,880 --> 00:39:26,800
objective by the sea conference so this

1054
00:39:26,800 --> 00:39:28,140
is all thanks to you

1055
00:39:28,140 --> 00:39:34,239
[Applause]

1056
00:39:35,839 --> 00:39:37,680
a few other people to say uh our

1057
00:39:37,680 --> 00:39:39,040
speakers you know people always come and

1058
00:39:39,040 --> 00:39:40,560
say patrick thanks for organizing this

1059
00:39:40,560 --> 00:39:42,000
conference and i was like well this

1060
00:39:42,000 --> 00:39:43,680
conference wouldn't be happening without

1061
00:39:43,680 --> 00:39:46,000
one the attendees and you know to our

1062
00:39:46,000 --> 00:39:48,800
speakers uh so again thank you for all

1063
00:39:48,800 --> 00:39:50,720
the speakers as a speaker i know the

1064
00:39:50,720 --> 00:39:54,079
amount of time and effort it takes um

1065
00:39:54,079 --> 00:39:55,440
you know doing a lot of research the

1066
00:39:55,440 --> 00:39:57,359
emotional roller coaster uh creating

1067
00:39:57,359 --> 00:39:58,640
your slides

1068
00:39:58,640 --> 00:40:00,079
and you know believe it or not i even

1069
00:40:00,079 --> 00:40:01,760
still get nervous coming up here and

1070
00:40:01,760 --> 00:40:04,720
talking so uh you know i know public

1071
00:40:04,720 --> 00:40:05,760
speaking for a lot of speakers

1072
00:40:05,760 --> 00:40:07,280
especially in our field is you know

1073
00:40:07,280 --> 00:40:09,040
something that we would rather not be

1074
00:40:09,040 --> 00:40:11,680
doing so i just want to really recognize

1075
00:40:11,680 --> 00:40:13,839
and thank the speakers who

1076
00:40:13,839 --> 00:40:14,960
are willing to come up and share their

1077
00:40:14,960 --> 00:40:17,040
research even if it's in hawaii so let's

1078
00:40:17,040 --> 00:40:19,450
give them a round of applause

1079
00:40:19,450 --> 00:40:25,760
[Applause]

1080
00:40:25,760 --> 00:40:27,839
so uh we will be posting all the slides

1081
00:40:27,839 --> 00:40:29,359
from the conference on the objective by

1082
00:40:29,359 --> 00:40:32,000
the sea website uh so if you want pdfs

1083
00:40:32,000 --> 00:40:35,760
those the photos from the conference uh

1084
00:40:35,760 --> 00:40:37,520
that brian has been taking brian shoots

1085
00:40:37,520 --> 00:40:39,119
our conference every year it's hawaii

1086
00:40:39,119 --> 00:40:40,720
it's great he's uh kind of a

1087
00:40:40,720 --> 00:40:43,520
photographer that gets nerds so

1088
00:40:43,520 --> 00:40:46,079
uh you know he kind of hurt himself

1089
00:40:46,079 --> 00:40:47,520
in a good way

1090
00:40:47,520 --> 00:40:49,040
so uh he's taking a lot of cool pictures

1091
00:40:49,040 --> 00:40:51,280
so we'll put those up on uh flickr as

1092
00:40:51,280 --> 00:40:53,680
soon as we get them

1093
00:40:53,680 --> 00:40:55,119
another thanks i want to thank the

1094
00:40:55,119 --> 00:40:57,760
conference crew uh oftentimes i get a

1095
00:40:57,760 --> 00:40:59,359
lot of the kudos for organizing a great

1096
00:40:59,359 --> 00:41:01,119
conference in hawaii and it's great but

1097
00:41:01,119 --> 00:41:02,720
really like behind the scenes they're

1098
00:41:02,720 --> 00:41:05,040
doing all the hard work so first and

1099
00:41:05,040 --> 00:41:07,520
foremost andy who is the queen of the

1100
00:41:07,520 --> 00:41:09,520
objective c conference and actually this

1101
00:41:09,520 --> 00:41:11,520
conference was her idea so in a way we

1102
00:41:11,520 --> 00:41:13,040
should all give her a round of applause

1103
00:41:13,040 --> 00:41:15,119
because it wasn't for her none of us

1104
00:41:15,119 --> 00:41:18,440
would be here

1105
00:41:25,520 --> 00:41:27,359
she's gonna kill me

1106
00:41:27,359 --> 00:41:30,640
uh i also want to thank andrew christina

1107
00:41:30,640 --> 00:41:31,920
jaren uh

1108
00:41:31,920 --> 00:41:35,520
andrew and christina i have a 22 month

1109
00:41:35,520 --> 00:41:36,480
old

1110
00:41:36,480 --> 00:41:38,720
son i get that right uh you know left

1111
00:41:38,720 --> 00:41:40,160
them for away come and help out with the

1112
00:41:40,160 --> 00:41:41,359
conference they've been here for a few

1113
00:41:41,359 --> 00:41:43,599
days helping uh they've been at all the

1114
00:41:43,599 --> 00:41:45,599
objectives by the sea conferences uh

1115
00:41:45,599 --> 00:41:47,520
jaren supporting as well so again it's

1116
00:41:47,520 --> 00:41:49,119
incredible for me as a conference

1117
00:41:49,119 --> 00:41:50,880
organizer to know that things will run

1118
00:41:50,880 --> 00:41:53,119
smoothly because of their support so

1119
00:41:53,119 --> 00:41:54,830
round of applause to you guys as well

1120
00:41:54,830 --> 00:41:57,969
[Applause]

1121
00:42:00,640 --> 00:42:02,640
all right so at the beginning we

1122
00:42:02,640 --> 00:42:04,400
mentioned that we were going to give

1123
00:42:04,400 --> 00:42:06,480
away some airpods to

1124
00:42:06,480 --> 00:42:08,319
the social influencer that was the

1125
00:42:08,319 --> 00:42:10,640
person who was the most prolific tweeter

1126
00:42:10,640 --> 00:42:12,800
supporter on social media of the

1127
00:42:12,800 --> 00:42:16,560
conference so max are you still around

1128
00:42:16,560 --> 00:42:18,799
yes

1129
00:42:25,359 --> 00:42:27,920
uh he tweeted almost all the talks

1130
00:42:27,920 --> 00:42:30,319
content shout outs that's incredibly

1131
00:42:30,319 --> 00:42:32,720
helpful uh as a as a conference you know

1132
00:42:32,720 --> 00:42:33,599
we can

1133
00:42:33,599 --> 00:42:36,079
not touch

1134
00:42:41,200 --> 00:42:44,480
matt also runs a conference in vancouver

1135
00:42:44,480 --> 00:42:46,560
so if you're interested in matt adam

1136
00:42:46,560 --> 00:42:48,319
type stuff max security stuff definitely

1137
00:42:48,319 --> 00:42:50,160
check out his conference uh he's a great

1138
00:42:50,160 --> 00:42:52,160
friend organizes an amazing conference

1139
00:42:52,160 --> 00:42:53,760
and vancouver is a really cool place to

1140
00:42:53,760 --> 00:42:55,520
visit so thank you patrick i want to hug

1141
00:42:55,520 --> 00:42:56,319
you but

1142
00:42:56,319 --> 00:42:59,839
we'll hug in you know two weeks

1143
00:43:06,800 --> 00:43:09,280
we also mentioned that the

1144
00:43:09,280 --> 00:43:10,240
the best

1145
00:43:10,240 --> 00:43:12,160
conference themed picture would win a

1146
00:43:12,160 --> 00:43:14,560
t-shirt uh you know try not to talk or

1147
00:43:14,560 --> 00:43:16,319
joke about the coronavirus too much

1148
00:43:16,319 --> 00:43:18,160
because you know in all seriousness it's

1149
00:43:18,160 --> 00:43:20,079
the worldwide pandemic however i love

1150
00:43:20,079 --> 00:43:22,400
this picture because you know we're out

1151
00:43:22,400 --> 00:43:25,040
here uh learning about mac security uh

1152
00:43:25,040 --> 00:43:26,800
so this was a very creative picture name

1153
00:43:26,800 --> 00:43:29,200
uh that was taken by yon and was posted

1154
00:43:29,200 --> 00:43:31,839
on social media so jan if you're here

1155
00:43:31,839 --> 00:43:35,520
perfect we have some t-shirts for you

1156
00:43:39,119 --> 00:43:41,200
where did you find the mask

1157
00:43:41,200 --> 00:43:42,400
like i thought those were like a really

1158
00:43:42,400 --> 00:43:44,079
short supply

1159
00:43:44,079 --> 00:43:44,880
yeah

1160
00:43:44,880 --> 00:43:46,960
actually i bought masks before coming

1161
00:43:46,960 --> 00:43:52,440
okay that's a smart thing so awesome um

1162
00:43:53,050 --> 00:43:56,129
[Music]

1163
00:44:03,520 --> 00:44:07,640
and thank you for purchasing one

1164
00:44:08,480 --> 00:44:10,800
that's a great picture

1165
00:44:10,800 --> 00:44:11,760
so

1166
00:44:11,760 --> 00:44:12,960
yeah

1167
00:44:12,960 --> 00:44:17,160
hold it up hold up

1168
00:44:23,760 --> 00:44:25,599
awesome you're very creative thanks

1169
00:44:25,599 --> 00:44:28,640
again made me laugh

1170
00:44:30,000 --> 00:44:31,839
all right uh before we do the last

1171
00:44:31,839 --> 00:44:34,079
raffle of course objective by the sea is

1172
00:44:34,079 --> 00:44:36,400
going to continue uh you know this was a

1173
00:44:36,400 --> 00:44:38,000
rather challenging year even worldwide

1174
00:44:38,000 --> 00:44:39,520
events but you know we're gonna move

1175
00:44:39,520 --> 00:44:41,839
past that and uh be back for four

1176
00:44:41,839 --> 00:44:45,280
version 4.0 uh our goal is to go back to

1177
00:44:45,280 --> 00:44:47,680
europe we try to do one in hawaii uh and

1178
00:44:47,680 --> 00:44:48,839
then somewhere

1179
00:44:48,839 --> 00:44:51,839
international end of you know q4 2020

1180
00:44:51,839 --> 00:44:54,079
tentatively again we'll have the best

1181
00:44:54,079 --> 00:44:56,319
mac security researchers and ios hackers

1182
00:44:56,319 --> 00:44:58,800
and researchers talking and again we

1183
00:44:58,800 --> 00:45:00,240
will probably keep the conference around

1184
00:45:00,240 --> 00:45:04,400
the thousands not 100 attendees

1185
00:45:04,400 --> 00:45:07,200
wow i couldn't handle that um

1186
00:45:07,200 --> 00:45:08,880
and so i would like to personally invite

1187
00:45:08,880 --> 00:45:10,880
you to that of course we'll tweet about

1188
00:45:10,880 --> 00:45:13,920
this and post about this um but you know

1189
00:45:13,920 --> 00:45:15,599
i love organizing this conference and

1190
00:45:15,599 --> 00:45:16,960
hanging out with you all so i would be

1191
00:45:16,960 --> 00:45:20,800
super stoked if i see you back

1192
00:45:20,800 --> 00:45:23,359
we're gonna do a group photo uh right

1193
00:45:23,359 --> 00:45:25,280
after this i really need to order these

1194
00:45:25,280 --> 00:45:27,760
slides better okay before we say aloha

1195
00:45:27,760 --> 00:45:30,319
and do the group photos we have a raffle

1196
00:45:30,319 --> 00:45:31,839
for some interesting

1197
00:45:31,839 --> 00:45:34,160
items so the first raffle we want to do

1198
00:45:34,160 --> 00:45:35,920
is there are some people here in the

1199
00:45:35,920 --> 00:45:37,839
audience who have been to every single

1200
00:45:37,839 --> 00:45:40,800
objective by the sea conference so

1201
00:45:40,800 --> 00:45:42,079
if you have been to every single

1202
00:45:42,079 --> 00:45:44,880
conference to raise your hand all three

1203
00:45:44,880 --> 00:45:46,480
awesome all right so what we're going to

1204
00:45:46,480 --> 00:45:49,040
do is we're going to do a raffle

1205
00:45:49,040 --> 00:45:50,079
and

1206
00:45:50,079 --> 00:45:51,680
whoever number is closest to the

1207
00:45:51,680 --> 00:45:53,200
randomly generated number which is going

1208
00:45:53,200 --> 00:45:54,880
to be accurately randomly generated will

1209
00:45:54,880 --> 00:45:56,400
either win a

1210
00:45:56,400 --> 00:45:57,760
latest generation apple watch or a

1211
00:45:57,760 --> 00:46:01,520
nintendo switch so sweet right

1212
00:46:01,520 --> 00:46:03,280
we are going to hop into google which

1213
00:46:03,280 --> 00:46:06,240
has a random number generator

1214
00:46:06,240 --> 00:46:08,160
i'm going to click generate

1215
00:46:08,160 --> 00:46:09,520
and then it's up to you to you know if

1216
00:46:09,520 --> 00:46:10,560
you're close to this yellow out and

1217
00:46:10,560 --> 00:46:11,359
we'll try to figure it out i was

1218
00:46:11,359 --> 00:46:12,560
thinking there's a better way but you

1219
00:46:12,560 --> 00:46:16,079
know i'm lazy so all right 44

1220
00:46:16,079 --> 00:46:18,560
who has a number that's close to 44

1221
00:46:18,560 --> 00:46:21,440
40 who's been sorry who's been to every

1222
00:46:21,440 --> 00:46:23,119
objective by this conference we'll do it

1223
00:46:23,119 --> 00:46:24,240
we'll do the next raffle for her for

1224
00:46:24,240 --> 00:46:26,000
everyone

1225
00:46:26,000 --> 00:46:29,839
29 okay he's good at math

1226
00:46:29,839 --> 00:46:31,190
okay so 29.

1227
00:46:31,190 --> 00:46:37,119
[Music]

1228
00:46:37,119 --> 00:46:39,920
sure yeah

1229
00:46:40,640 --> 00:46:42,240
okay we're gonna we're gonna do a redo

1230
00:46:42,240 --> 00:46:44,160
then

1231
00:46:44,160 --> 00:46:47,200
all right google says 95 this one should

1232
00:46:47,200 --> 00:46:51,279
be easier because it goes up to 100.

1233
00:46:51,520 --> 00:46:54,520
59.

1234
00:46:58,160 --> 00:46:59,920
okay who has a hot who has been to every

1235
00:46:59,920 --> 00:47:02,079
conference who has a high

1236
00:47:02,079 --> 00:47:04,640
ish number

1237
00:47:05,599 --> 00:47:11,560
josh what's yours 78 78 mike

1238
00:47:22,079 --> 00:47:24,559
yeah well 80 closer to us

1239
00:47:24,559 --> 00:47:27,520
all right mike get up here

1240
00:47:34,640 --> 00:47:36,880
so this is randomly selected so you can

1241
00:47:36,880 --> 00:47:40,000
accept it uh either a nintendo switch or

1242
00:47:40,000 --> 00:47:42,319
latest generation apple watch

1243
00:47:42,319 --> 00:47:42,690
awesome

1244
00:47:42,690 --> 00:47:44,240
[Music]

1245
00:47:44,240 --> 00:47:45,520
all right we gotta follow this because

1246
00:47:45,520 --> 00:47:47,200
this is a this is a good one why is this

1247
00:47:47,200 --> 00:47:48,480
open

1248
00:47:48,480 --> 00:47:50,000
ah you know

1249
00:47:50,000 --> 00:47:51,280
we'll give a talk next time on

1250
00:47:51,280 --> 00:47:54,160
implanting uh

1251
00:47:56,000 --> 00:47:57,280
thanks dude

1252
00:47:57,280 --> 00:47:58,319
thank you

1253
00:47:58,319 --> 00:47:59,520
awesome

1254
00:47:59,520 --> 00:48:01,920
all right

1255
00:48:03,760 --> 00:48:06,160
again we want to just thank those who

1256
00:48:06,160 --> 00:48:08,400
attend our conferences many years around

1257
00:48:08,400 --> 00:48:10,160
stoke awesome

1258
00:48:10,160 --> 00:48:11,440
so now we're going to do a general

1259
00:48:11,440 --> 00:48:13,680
raffle this is open to everybody again

1260
00:48:13,680 --> 00:48:14,720
we're going to use

1261
00:48:14,720 --> 00:48:16,079
google's random number generator i hope

1262
00:48:16,079 --> 00:48:18,839
nobody's manning men in the middling

1263
00:48:18,839 --> 00:48:21,440
this this is going to be an exact match

1264
00:48:21,440 --> 00:48:23,440
so we'll do this until someone has

1265
00:48:23,440 --> 00:48:24,720
this

1266
00:48:24,720 --> 00:48:27,118
tracy

1267
00:48:27,440 --> 00:48:30,440
awesome

1268
00:48:31,470 --> 00:48:34,540
[Applause]

1269
00:48:41,560 --> 00:48:45,049
[Music]

1270
00:48:46,720 --> 00:48:49,720
oh

1271
00:48:55,760 --> 00:48:59,000
thanks man

1272
00:49:03,440 --> 00:49:07,440
all right so this that is this a video

1273
00:49:07,440 --> 00:49:09,040
oh maybe it is so when we were in

1274
00:49:09,040 --> 00:49:11,760
majorca spec maybe looking for potential

1275
00:49:11,760 --> 00:49:13,599
places we brought the drone and did a

1276
00:49:13,599 --> 00:49:15,520
drone shot i think we should maybe do

1277
00:49:15,520 --> 00:49:16,640
conferences

1278
00:49:16,640 --> 00:49:18,960
it's beautiful anyways uh aloha which

1279
00:49:18,960 --> 00:49:21,200
means hello uh i love you and also

1280
00:49:21,200 --> 00:49:23,359
goodbye in this context it's it's the

1281
00:49:23,359 --> 00:49:26,240
latter two um thank you again for making

1282
00:49:26,240 --> 00:49:28,079
the trek out here uh you know i know

1283
00:49:28,079 --> 00:49:29,680
it's kind of difficult travel conditions

1284
00:49:29,680 --> 00:49:31,760
given everything that's going on

1285
00:49:31,760 --> 00:49:33,760
but i'm stoked that we were able to pull

1286
00:49:33,760 --> 00:49:35,760
this off together so thanks again one

1287
00:49:35,760 --> 00:49:39,160
more round of applause

1288
00:49:47,359 --> 00:49:49,520
so now we're going to do a group photo

1289
00:49:49,520 --> 00:49:52,000
maybe down by the lobby outside would be

1290
00:49:52,000 --> 00:49:55,000
good

1291
00:50:09,440 --> 00:50:12,319
okay outside the queen is spoken so to

1292
00:50:12,319 --> 00:50:13,920
get to the aloha sign basically just

1293
00:50:13,920 --> 00:50:15,760
walk out and go past the lobby and then

1294
00:50:15,760 --> 00:50:17,280
it's kind of where a lot of you ate

1295
00:50:17,280 --> 00:50:19,839
lunch kind of past that so follow the

1296
00:50:19,839 --> 00:50:21,760
objective c-shirts

1297
00:50:21,760 --> 00:50:25,559
but grab all your stuff

1298
00:50:34,720 --> 00:50:36,799
you

