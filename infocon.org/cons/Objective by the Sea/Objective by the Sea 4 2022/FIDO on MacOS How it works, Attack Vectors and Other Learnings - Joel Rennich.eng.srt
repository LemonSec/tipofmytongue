1
00:00:03,919 --> 00:00:06,480
next up we have joel from jamf uh who's

2
00:00:06,480 --> 00:00:08,639
gonna be talking about uh some

3
00:00:08,639 --> 00:00:09,920
interesting topics that i don't know

4
00:00:09,920 --> 00:00:10,960
much about so i'm actually really

5
00:00:10,960 --> 00:00:13,280
excited to hear about this so let's give

6
00:00:13,280 --> 00:00:15,250
joel a round of applause

7
00:00:15,250 --> 00:00:18,420
[Applause]

8
00:00:19,039 --> 00:00:20,720
since i know everyone has lunch

9
00:00:20,720 --> 00:00:23,840
reservations for 12 45

10
00:00:23,840 --> 00:00:26,960
i've doubled most of my slides in this

11
00:00:26,960 --> 00:00:28,720
uh so that

12
00:00:28,720 --> 00:00:30,720
that we can have time plus with a little

13
00:00:30,720 --> 00:00:32,479
bit of luck i've got some live cooking

14
00:00:32,479 --> 00:00:34,160
in here but i seem to be shorter than

15
00:00:34,160 --> 00:00:35,520
most

16
00:00:35,520 --> 00:00:36,719
uh

17
00:00:36,719 --> 00:00:39,920
we have assistance thank you

18
00:00:40,079 --> 00:00:44,000
get rid of this all right fantastic

19
00:00:44,000 --> 00:00:46,559
uh oh you can see me looking for

20
00:00:46,559 --> 00:00:48,800
last minute additions

21
00:00:48,800 --> 00:00:49,600
um

22
00:00:49,600 --> 00:00:52,000
all right hello

23
00:00:52,000 --> 00:00:54,320
i'm the last thing between you and lunch

24
00:00:54,320 --> 00:00:56,399
i'm the hype person for lunch is that

25
00:00:56,399 --> 00:00:58,399
what i got to do all right we're talking

26
00:00:58,399 --> 00:01:01,440
about fido fast identity online um

27
00:01:01,440 --> 00:01:02,640
something that i've been having a lot of

28
00:01:02,640 --> 00:01:06,560
fun with the last maybe year or so

29
00:01:06,560 --> 00:01:07,760
especially it's gotten a little more

30
00:01:07,760 --> 00:01:10,560
mature and has kind of come into wider

31
00:01:10,560 --> 00:01:11,680
usage

32
00:01:11,680 --> 00:01:13,200
a lot more identity providers are

33
00:01:13,200 --> 00:01:15,360
supporting it by default

34
00:01:15,360 --> 00:01:16,479
and you're seeing a lot of people

35
00:01:16,479 --> 00:01:18,080
including apple

36
00:01:18,080 --> 00:01:19,680
working it into the system a lot more

37
00:01:19,680 --> 00:01:21,759
than it ever was before so that's a

38
00:01:21,759 --> 00:01:24,080
fantastic time to learn more about it

39
00:01:24,080 --> 00:01:26,400
and also see what you can do

40
00:01:26,400 --> 00:01:28,880
about maybe trying to subvert it or bend

41
00:01:28,880 --> 00:01:30,400
it to your will

42
00:01:30,400 --> 00:01:32,479
so i'm joel i do identity things as

43
00:01:32,479 --> 00:01:35,119
patrick mentioned at jamf and then uh

44
00:01:35,119 --> 00:01:37,119
for the most part you can find me places

45
00:01:37,119 --> 00:01:39,280
under the name mac troll

46
00:01:39,280 --> 00:01:40,880
there's a long story there but that's

47
00:01:40,880 --> 00:01:42,399
for later

48
00:01:42,399 --> 00:01:43,920
so there we go

49
00:01:43,920 --> 00:01:45,040
all right

50
00:01:45,040 --> 00:01:48,159
this is the non-click bait headline that

51
00:01:48,159 --> 00:01:49,680
i'm going to put in here

52
00:01:49,680 --> 00:01:51,840
no matter what i talk about over the

53
00:01:51,840 --> 00:01:54,640
next 30 45 minutes

54
00:01:54,640 --> 00:01:57,040
fido is pretty much in every way more

55
00:01:57,040 --> 00:01:59,520
secure and more usable than using a

56
00:01:59,520 --> 00:02:02,079
password all right so

57
00:02:02,079 --> 00:02:04,159
there's no intent to scare i'm not

58
00:02:04,159 --> 00:02:06,880
trying to fear monger here i want very

59
00:02:06,880 --> 00:02:09,520
much to have more fido have public

60
00:02:09,520 --> 00:02:10,800
private key being used for

61
00:02:10,800 --> 00:02:13,680
authentication that's fantastic right uh

62
00:02:13,680 --> 00:02:15,599
but as with all things it's something

63
00:02:15,599 --> 00:02:17,120
that we should understand and be aware

64
00:02:17,120 --> 00:02:19,760
of before we dive into it

65
00:02:19,760 --> 00:02:22,080
um the focus here is going to be on mac

66
00:02:22,080 --> 00:02:24,160
os um that's because it's just a little

67
00:02:24,160 --> 00:02:25,760
bit easier to demo a little bit easier

68
00:02:25,760 --> 00:02:27,120
to debug

69
00:02:27,120 --> 00:02:29,440
the good thing about what apple has done

70
00:02:29,440 --> 00:02:31,200
and since this is very heavily browser

71
00:02:31,200 --> 00:02:33,280
focused and things like that almost

72
00:02:33,280 --> 00:02:36,160
everything that i show here is

73
00:02:36,160 --> 00:02:39,280
completely replicable to ios

74
00:02:39,280 --> 00:02:41,200
right with the exception of maybe it's a

75
00:02:41,200 --> 00:02:43,599
little harder to fit a usb uh security

76
00:02:43,599 --> 00:02:45,920
key into your phone but you can do that

77
00:02:45,920 --> 00:02:47,840
over nfc and some other things

78
00:02:47,840 --> 00:02:50,080
other really nice thing is with ios 15

79
00:02:50,080 --> 00:02:52,160
being out you can have extensions in

80
00:02:52,160 --> 00:02:53,360
safari

81
00:02:53,360 --> 00:02:54,720
that are pretty much identical to

82
00:02:54,720 --> 00:02:56,640
extensions that you would have in chrome

83
00:02:56,640 --> 00:02:58,720
or on safari on the mac

84
00:02:58,720 --> 00:03:00,000
and so some of the things that we're

85
00:03:00,000 --> 00:03:02,080
going to do a little bit later will be

86
00:03:02,080 --> 00:03:05,360
again very replicable on ios as well and

87
00:03:05,360 --> 00:03:06,800
to go through that so just keep that in

88
00:03:06,800 --> 00:03:08,400
mind as we go

89
00:03:08,400 --> 00:03:11,040
all right fido in 30 seconds before we

90
00:03:11,040 --> 00:03:12,879
get into doing the fun things

91
00:03:12,879 --> 00:03:15,599
um probably the biggest place where fido

92
00:03:15,599 --> 00:03:16,800
came out although you wouldn't know it

93
00:03:16,800 --> 00:03:18,640
because they don't really reference fido

94
00:03:18,640 --> 00:03:20,239
but windows hello

95
00:03:20,239 --> 00:03:21,680
when you're using a security key or

96
00:03:21,680 --> 00:03:23,120
something like that windows hello for

97
00:03:23,120 --> 00:03:25,200
business i think specifically

98
00:03:25,200 --> 00:03:27,280
you can use a yubikey

99
00:03:27,280 --> 00:03:29,120
that is feitien a couple of them that

100
00:03:29,120 --> 00:03:31,680
are out there to sign into your windows

101
00:03:31,680 --> 00:03:32,480
pc

102
00:03:32,480 --> 00:03:35,040
and it works really well uh tied into

103
00:03:35,040 --> 00:03:37,200
your azure account it's a really smooth

104
00:03:37,200 --> 00:03:38,959
flow it'd be really great to have more

105
00:03:38,959 --> 00:03:40,959
of that on the mac side actually as you

106
00:03:40,959 --> 00:03:41,920
go there

107
00:03:41,920 --> 00:03:43,280
over the last couple of years you've

108
00:03:43,280 --> 00:03:46,239
seen again pretty much any and every idp

109
00:03:46,239 --> 00:03:49,280
has now supported fido authentication

110
00:03:49,280 --> 00:03:51,599
including as far as facebook you can

111
00:03:51,599 --> 00:03:53,040
sign into your personal facebook with

112
00:03:53,040 --> 00:03:54,319
the fido key

113
00:03:54,319 --> 00:03:56,480
github supports it now and then pretty

114
00:03:56,480 --> 00:03:58,799
much all of the major identity providers

115
00:03:58,799 --> 00:04:00,560
apologies to anyone in this room who

116
00:04:00,560 --> 00:04:02,000
supports it but i didn't put your logo

117
00:04:02,000 --> 00:04:03,280
on the slide

118
00:04:03,280 --> 00:04:04,799
because i know it's a lot more than just

119
00:04:04,799 --> 00:04:07,120
this

120
00:04:07,280 --> 00:04:09,599
so as we go and talk about fido let's

121
00:04:09,599 --> 00:04:10,879
kind of break it down to a couple of

122
00:04:10,879 --> 00:04:13,280
component parts there's primarily three

123
00:04:13,280 --> 00:04:15,040
kind of buckets of things that we're

124
00:04:15,040 --> 00:04:17,440
talking about when we talk fido you have

125
00:04:17,440 --> 00:04:20,079
the relying party which is the web page

126
00:04:20,079 --> 00:04:21,680
the service the identity provider

127
00:04:21,680 --> 00:04:23,440
whatever that you may be using that's

128
00:04:23,440 --> 00:04:25,360
going to be authenticating you you have

129
00:04:25,360 --> 00:04:27,840
your mac which is your platform your

130
00:04:27,840 --> 00:04:30,560
iphone would be your platform sometimes

131
00:04:30,560 --> 00:04:32,560
because we've got to be very confusing

132
00:04:32,560 --> 00:04:34,000
in this industry it's sometimes called

133
00:04:34,000 --> 00:04:35,520
the user agent

134
00:04:35,520 --> 00:04:37,280
even though it has nothing to do with

135
00:04:37,280 --> 00:04:39,440
your user agent string all right so you

136
00:04:39,440 --> 00:04:40,880
sometimes here refer to that so that's

137
00:04:40,880 --> 00:04:43,280
the platform that's typically seen as

138
00:04:43,280 --> 00:04:45,120
the browser so if you're going to be

139
00:04:45,120 --> 00:04:48,400
doing fido within chrome or safari or

140
00:04:48,400 --> 00:04:50,800
opera or firefox or whatever your

141
00:04:50,800 --> 00:04:52,800
preferred browser is

142
00:04:52,800 --> 00:04:54,720
that's going to be what's mostly

143
00:04:54,720 --> 00:04:56,400
managing the interaction between that

144
00:04:56,400 --> 00:04:58,479
relying party and then the third piece

145
00:04:58,479 --> 00:05:00,000
here which is your fido key or your

146
00:05:00,000 --> 00:05:01,199
authenticator

147
00:05:01,199 --> 00:05:02,720
authenticator can be primarily two

148
00:05:02,720 --> 00:05:04,479
different kinds you can have external

149
00:05:04,479 --> 00:05:06,400
authenticators sometimes known as

150
00:05:06,400 --> 00:05:08,000
roaming authenticators sometimes known

151
00:05:08,000 --> 00:05:10,160
as cross-platform authenticators and

152
00:05:10,160 --> 00:05:12,080
those are going to be your ub keys your

153
00:05:12,080 --> 00:05:13,919
thetis your faith-ins and the other ones

154
00:05:13,919 --> 00:05:16,000
like that and then you can have platform

155
00:05:16,000 --> 00:05:17,759
authenticators and apple's done a lot of

156
00:05:17,759 --> 00:05:20,320
good work here allowing you to use face

157
00:05:20,320 --> 00:05:23,199
id touch id on your devices so they've

158
00:05:23,199 --> 00:05:24,560
implemented actually a layer of

159
00:05:24,560 --> 00:05:28,000
biometrics into this right

160
00:05:28,000 --> 00:05:29,360
between the relying party and the

161
00:05:29,360 --> 00:05:32,479
platform it's primarily web authent and

162
00:05:32,479 --> 00:05:34,000
sometimes you'll actually hear this not

163
00:05:34,000 --> 00:05:35,039
referred to as any sort of

164
00:05:35,039 --> 00:05:37,039
phytoauthentication but you'll have it

165
00:05:37,039 --> 00:05:39,039
fall under the web authent bucket

166
00:05:39,039 --> 00:05:41,680
in particular if your back end key is

167
00:05:41,680 --> 00:05:44,160
not fido compliant you will refer to

168
00:05:44,160 --> 00:05:46,720
this as a web authent transaction

169
00:05:46,720 --> 00:05:48,880
instead of anything to do with fido

170
00:05:48,880 --> 00:05:51,199
i'll direct you to apple's new syncing

171
00:05:51,199 --> 00:05:53,759
cloud keys that do not mention fido

172
00:05:53,759 --> 00:05:55,680
anywhere in there but they heavily make

173
00:05:55,680 --> 00:05:57,840
use of the web authent name all right so

174
00:05:57,840 --> 00:05:59,199
web authent is the part between the

175
00:05:59,199 --> 00:06:01,360
relying party in the browser and then

176
00:06:01,360 --> 00:06:04,240
between your browser and your fido key

177
00:06:04,240 --> 00:06:06,080
it's typically ctap client to

178
00:06:06,080 --> 00:06:08,000
authenticator protocol

179
00:06:08,000 --> 00:06:09,440
that's how they that's the actual

180
00:06:09,440 --> 00:06:11,280
protocol that's going in between there

181
00:06:11,280 --> 00:06:13,440
and it's typically done over c bore

182
00:06:13,440 --> 00:06:16,479
concise binary ordering representation

183
00:06:16,479 --> 00:06:19,120
right similar to asn 1 but not quite the

184
00:06:19,120 --> 00:06:21,680
same as you have that so these are kind

185
00:06:21,680 --> 00:06:23,440
of the major components that we've got

186
00:06:23,440 --> 00:06:26,319
there uh here's the travel set of keys

187
00:06:26,319 --> 00:06:28,880
that i have that i take with me uh sam i

188
00:06:28,880 --> 00:06:30,880
believe has a few more uh we've been

189
00:06:30,880 --> 00:06:34,080
comparing oh do you have the the k33 oh

190
00:06:34,080 --> 00:06:36,319
no i've only got the k35 and google

191
00:06:36,319 --> 00:06:38,800
packaging uh so you can see there's a

192
00:06:38,800 --> 00:06:41,600
variety of uh names and identities and

193
00:06:41,600 --> 00:06:43,360
other things most of them are going to

194
00:06:43,360 --> 00:06:46,000
be usb based in some form that's

195
00:06:46,000 --> 00:06:48,319
typically the most common they'll also

196
00:06:48,319 --> 00:06:50,080
show up in

197
00:06:50,080 --> 00:06:51,120
nfc

198
00:06:51,120 --> 00:06:52,400
if you're using that with your phone or

199
00:06:52,400 --> 00:06:54,639
mobile device also can show up over

200
00:06:54,639 --> 00:06:56,560
bluetooth although bluetooth kind of

201
00:06:56,560 --> 00:06:58,639
became a bag of screaming cats and

202
00:06:58,639 --> 00:07:00,880
support for that is kind of iffy as you

203
00:07:00,880 --> 00:07:03,120
go through there's also some fun things

204
00:07:03,120 --> 00:07:05,039
where people have tried to combine fido

205
00:07:05,039 --> 00:07:07,039
with a lot of other form factors so

206
00:07:07,039 --> 00:07:09,039
there's a smart card there

207
00:07:09,039 --> 00:07:11,440
with a very small battery in it that can

208
00:07:11,440 --> 00:07:13,120
actually do bluetooth and fido in

209
00:07:13,120 --> 00:07:14,639
addition to actually operating as a

210
00:07:14,639 --> 00:07:16,400
smart card as well

211
00:07:16,400 --> 00:07:18,319
right so a lot of different form factors

212
00:07:18,319 --> 00:07:20,240
that are in there um

213
00:07:20,240 --> 00:07:22,400
you can have some that keep your bitcoin

214
00:07:22,400 --> 00:07:24,560
right this is a treasure i don't know

215
00:07:24,560 --> 00:07:26,880
the exact pronunciation but a lot of

216
00:07:26,880 --> 00:07:29,599
folks will mingle the fido piece with

217
00:07:29,599 --> 00:07:31,759
some sort of bitcoin wallet

218
00:07:31,759 --> 00:07:33,759
under the covers it's p256 keys

219
00:07:33,759 --> 00:07:36,000
primarily all right so there is a good

220
00:07:36,000 --> 00:07:37,680
crossover between what you're doing that

221
00:07:37,680 --> 00:07:39,599
this one's got a nice led display on it

222
00:07:39,599 --> 00:07:41,199
that you can do some work with

223
00:07:41,199 --> 00:07:43,759
here's one that i don't think is sold

224
00:07:43,759 --> 00:07:45,440
this is motive

225
00:07:45,440 --> 00:07:46,960
but it was a fido key that you could

226
00:07:46,960 --> 00:07:49,759
wear as a ring and to prove it was still

227
00:07:49,759 --> 00:07:52,319
you it had some patented method of

228
00:07:52,319 --> 00:07:54,479
determining your gait and how you held

229
00:07:54,479 --> 00:07:57,039
your hands and so as long as you were

230
00:07:57,039 --> 00:07:58,879
still gesticulating the way you normally

231
00:07:58,879 --> 00:08:01,440
gesticulated it would allow you to do

232
00:08:01,440 --> 00:08:04,080
this kind of magic hand wave uh and do a

233
00:08:04,080 --> 00:08:06,479
fido operation it was kind of cool uh i

234
00:08:06,479 --> 00:08:07,840
don't know how well it did they got

235
00:08:07,840 --> 00:08:09,120
bought by one of the other wearable

236
00:08:09,120 --> 00:08:11,440
companies so probably fantastic

237
00:08:11,440 --> 00:08:13,120
for the people that owned and had

238
00:08:13,120 --> 00:08:14,319
started that

239
00:08:14,319 --> 00:08:16,639
here's another one i find this kind of

240
00:08:16,639 --> 00:08:18,639
fascinating it's got a nice led display

241
00:08:18,639 --> 00:08:20,319
it's a couple inches long

242
00:08:20,319 --> 00:08:23,280
and its method of proving you were using

243
00:08:23,280 --> 00:08:25,840
it was you would write out your pin code

244
00:08:25,840 --> 00:08:28,240
and have the ability to to do

245
00:08:28,240 --> 00:08:30,160
handwriting recognition as you would

246
00:08:30,160 --> 00:08:32,000
write your pin code on the table

247
00:08:32,000 --> 00:08:33,679
so some folks have come up with some

248
00:08:33,679 --> 00:08:35,039
really interesting ways on these

249
00:08:35,039 --> 00:08:36,559
hardware pieces

250
00:08:36,559 --> 00:08:38,479
however i do believe that the vast

251
00:08:38,479 --> 00:08:40,320
majority of users are going to use what

252
00:08:40,320 --> 00:08:41,919
they already have in front of them and

253
00:08:41,919 --> 00:08:43,679
that primarily is then going to be face

254
00:08:43,679 --> 00:08:45,360
id or touch id if you're on an apple

255
00:08:45,360 --> 00:08:47,519
device it's certainly the path of least

256
00:08:47,519 --> 00:08:49,760
resistance as we go forward right so the

257
00:08:49,760 --> 00:08:51,600
hardware ones are cool

258
00:08:51,600 --> 00:08:53,440
i'm not a hardware hacker so we're going

259
00:08:53,440 --> 00:08:55,519
to focus from here on out mostly on

260
00:08:55,519 --> 00:08:57,279
things you can do with the platform

261
00:08:57,279 --> 00:08:59,120
authenticators and without having an

262
00:08:59,120 --> 00:09:01,200
authenticator attached at all all right

263
00:09:01,200 --> 00:09:02,720
i'm sure there's probably

264
00:09:02,720 --> 00:09:04,000
vulnerabilities in some of these

265
00:09:04,000 --> 00:09:04,959
hardware

266
00:09:04,959 --> 00:09:06,320
but i'm not the one that's going to find

267
00:09:06,320 --> 00:09:08,480
those so i've focused uh just on the

268
00:09:08,480 --> 00:09:10,240
platforms and other places that you can

269
00:09:10,240 --> 00:09:11,440
get to

270
00:09:11,440 --> 00:09:12,320
all right

271
00:09:12,320 --> 00:09:14,560
with that is kind of a couple of ground

272
00:09:14,560 --> 00:09:18,000
concepts of what fido is let's get into

273
00:09:18,000 --> 00:09:19,360
kind of some of the fun things that you

274
00:09:19,360 --> 00:09:20,880
can play around with as a security

275
00:09:20,880 --> 00:09:22,720
researcher or someone who's just curious

276
00:09:22,720 --> 00:09:23,920
about this

277
00:09:23,920 --> 00:09:26,000
situation

278
00:09:26,000 --> 00:09:28,640
one of the basic precepts about fido and

279
00:09:28,640 --> 00:09:30,800
this is really great specifically in the

280
00:09:30,800 --> 00:09:33,519
consumer space it gets a little bit more

281
00:09:33,519 --> 00:09:35,600
annoying in the enterprise space is that

282
00:09:35,600 --> 00:09:37,760
fido has a very strong focus on

283
00:09:37,760 --> 00:09:40,880
anonymity whenever you sign up for a new

284
00:09:40,880 --> 00:09:42,640
service whenever you use your fido key

285
00:09:42,640 --> 00:09:44,480
to create a new credential there's

286
00:09:44,480 --> 00:09:46,080
nothing that should relate that

287
00:09:46,080 --> 00:09:48,399
credential to any other credential that

288
00:09:48,399 --> 00:09:50,720
may be on your fido key all right

289
00:09:50,720 --> 00:09:54,000
they're both just random p256 key pairs

290
00:09:54,000 --> 00:09:55,920
uh and there shouldn't be anything that

291
00:09:55,920 --> 00:09:57,920
connect those two together

292
00:09:57,920 --> 00:09:59,440
of course maybe that's not always the

293
00:09:59,440 --> 00:10:00,320
case

294
00:10:00,320 --> 00:10:02,640
as we'll see in a little bit

295
00:10:02,640 --> 00:10:05,839
so vendors do unique things

296
00:10:05,839 --> 00:10:07,600
sometimes vendors follow the protocols

297
00:10:07,600 --> 00:10:09,120
very well sometimes they don't follow

298
00:10:09,120 --> 00:10:11,040
the protocols very well and then when

299
00:10:11,040 --> 00:10:12,640
some vendors don't follow the protocols

300
00:10:12,640 --> 00:10:14,320
very well other vendors have to then

301
00:10:14,320 --> 00:10:16,480
relax their adherence to the protocol to

302
00:10:16,480 --> 00:10:18,480
be able to allow users to use the things

303
00:10:18,480 --> 00:10:20,160
they think should work so that they're

304
00:10:20,160 --> 00:10:22,000
calling the right vendor when it doesn't

305
00:10:22,000 --> 00:10:24,240
work instead of the one vendor that was

306
00:10:24,240 --> 00:10:25,519
actually following the protocol but

307
00:10:25,519 --> 00:10:28,720
seems like they're the one that broke it

308
00:10:28,720 --> 00:10:30,880
i'll show you this so there's a couple

309
00:10:30,880 --> 00:10:32,800
of pieces when you go through a fido

310
00:10:32,800 --> 00:10:35,600
authentication one is there's a key id

311
00:10:35,600 --> 00:10:38,720
length when you send your public key off

312
00:10:38,720 --> 00:10:40,959
to the relying party you've got to give

313
00:10:40,959 --> 00:10:42,880
it some sort of name or some sort of

314
00:10:42,880 --> 00:10:45,600
identifier and that's the key id right

315
00:10:45,600 --> 00:10:48,000
usually a bunch of base 64 can be of any

316
00:10:48,000 --> 00:10:50,240
length up to i think the protocol is an

317
00:10:50,240 --> 00:10:54,079
unsigned 32-bit integer which is 64 000

318
00:10:54,079 --> 00:10:55,760
bits or something like that

319
00:10:55,760 --> 00:10:57,279
anyway a lot

320
00:10:57,279 --> 00:10:59,440
fun fact you can actually go over that

321
00:10:59,440 --> 00:11:01,760
and great things happen all right

322
00:11:01,760 --> 00:11:03,920
there's also a sign count

323
00:11:03,920 --> 00:11:05,120
in the

324
00:11:05,120 --> 00:11:06,640
attempt to

325
00:11:06,640 --> 00:11:08,959
prevent an authenticator from maybe

326
00:11:08,959 --> 00:11:11,120
getting cloned and used somewhere else

327
00:11:11,120 --> 00:11:12,880
every time the authenticator makes a

328
00:11:12,880 --> 00:11:14,959
signature so every time it proves who it

329
00:11:14,959 --> 00:11:17,600
is it should keep an internal count of

330
00:11:17,600 --> 00:11:19,200
how many signing events that have

331
00:11:19,200 --> 00:11:21,360
happened if you're the relying party

332
00:11:21,360 --> 00:11:23,519
you're supposed to keep track of this so

333
00:11:23,519 --> 00:11:25,680
that if i sign in from one place and the

334
00:11:25,680 --> 00:11:28,240
sign count is 15 but then i sign in from

335
00:11:28,240 --> 00:11:30,399
another place and the sign count is 10

336
00:11:30,399 --> 00:11:32,720
that's a bad thing right that means that

337
00:11:32,720 --> 00:11:34,399
somebody might have compromised my key

338
00:11:34,399 --> 00:11:36,399
it might have cloned my credential and

339
00:11:36,399 --> 00:11:37,600
now they're using it at a different

340
00:11:37,600 --> 00:11:39,600
place right so there's a sign count

341
00:11:39,600 --> 00:11:42,480
that's built into this all right let's

342
00:11:42,480 --> 00:11:44,480
do a demo we got some live cooking of

343
00:11:44,480 --> 00:11:47,279
some things here uh that's uh should be

344
00:11:47,279 --> 00:11:48,160
fun

345
00:11:48,160 --> 00:11:50,959
and if not you can go to lunch all right

346
00:11:50,959 --> 00:11:53,279
uh this is one of my favorite sites when

347
00:11:53,279 --> 00:11:54,959
you're playing around with web authen

348
00:11:54,959 --> 00:11:56,880
it's called web off n

349
00:11:56,880 --> 00:11:59,120
dot me and it's got a whole debugging

350
00:11:59,120 --> 00:12:01,279
page there's another one from singular

351
00:12:01,279 --> 00:12:02,800
key that's really nice singular key i

352
00:12:02,800 --> 00:12:03,760
think got purchased today

353
00:12:03,760 --> 00:12:05,279
congratulations to anybody from

354
00:12:05,279 --> 00:12:08,320
singularkey got picked up by ping

355
00:12:08,320 --> 00:12:09,839
i noticed that when i logged into their

356
00:12:09,839 --> 00:12:12,480
site today um so this is uh

357
00:12:12,480 --> 00:12:14,800
webauthn.mean if you scroll down you're

358
00:12:14,800 --> 00:12:17,360
able to go through and kind of pick all

359
00:12:17,360 --> 00:12:19,839
of the settings uh you can kind of look

360
00:12:19,839 --> 00:12:22,399
at what the protocol allows for and go

361
00:12:22,399 --> 00:12:24,079
in and just kind of edit these it's

362
00:12:24,079 --> 00:12:26,000
really cool and if i hit register this

363
00:12:26,000 --> 00:12:29,040
is what a typical user sees in chrome so

364
00:12:29,040 --> 00:12:30,720
i'm getting the option of either using

365
00:12:30,720 --> 00:12:33,279
an external key i could plug in one of

366
00:12:33,279 --> 00:12:35,440
these devices and then use that usb

367
00:12:35,440 --> 00:12:37,519
setting at the top or i can actually use

368
00:12:37,519 --> 00:12:39,279
this device all right and i'm going to

369
00:12:39,279 --> 00:12:41,920
go down to this device well i timed out

370
00:12:41,920 --> 00:12:44,000
too slow go to this device and now i'm

371
00:12:44,000 --> 00:12:46,560
going to get prompted to take my finger

372
00:12:46,560 --> 00:12:49,200
and put it on the touch id

373
00:12:49,200 --> 00:12:50,800
and when i've done that i've now

374
00:12:50,800 --> 00:12:54,160
generated a brand new p256 key

375
00:12:54,160 --> 00:12:55,200
pretty cool

376
00:12:55,200 --> 00:12:57,680
back to the number one idea from this

377
00:12:57,680 --> 00:12:58,880
session

378
00:12:58,880 --> 00:13:00,399
fido keys are always better than

379
00:13:00,399 --> 00:13:03,440
passwords having a p256 key is amazing

380
00:13:03,440 --> 00:13:05,920
right i can now do pki i'm doing a

381
00:13:05,920 --> 00:13:08,959
signature to prove who i am and i i

382
00:13:08,959 --> 00:13:10,399
haven't looked at the chromium code but

383
00:13:10,399 --> 00:13:12,240
i'm going to trust them a little bit

384
00:13:12,240 --> 00:13:14,399
it's most likely actually secured within

385
00:13:14,399 --> 00:13:17,200
the secure enclave since p256 keys can

386
00:13:17,200 --> 00:13:19,519
be generated from the secure enclave

387
00:13:19,519 --> 00:13:21,440
google should be doing that and now i

388
00:13:21,440 --> 00:13:24,959
have an incredibly strong authentication

389
00:13:24,959 --> 00:13:27,519
process built into my device without

390
00:13:27,519 --> 00:13:29,120
having to buy anything external plug it

391
00:13:29,120 --> 00:13:30,560
in or anything else like that pretty

392
00:13:30,560 --> 00:13:31,600
cool right

393
00:13:31,600 --> 00:13:34,320
well some fun things that they do first

394
00:13:34,320 --> 00:13:36,079
of all we'll note this for later the

395
00:13:36,079 --> 00:13:38,880
credential id is always 80 bytes

396
00:13:38,880 --> 00:13:39,760
all right

397
00:13:39,760 --> 00:13:41,360
it's one of the ways that even though

398
00:13:41,360 --> 00:13:44,240
the keys should be completely anonymous

399
00:13:44,240 --> 00:13:46,240
each key and i'll give you a chart from

400
00:13:46,240 --> 00:13:49,040
what i've kind of found has a particular

401
00:13:49,040 --> 00:13:50,880
fingerprint that's probably too strong

402
00:13:50,880 --> 00:13:52,560
of word a particular type

403
00:13:52,560 --> 00:13:54,880
so the chrome browser will always do 80

404
00:13:54,880 --> 00:13:57,839
byte keys if you're seeing a fido

405
00:13:57,839 --> 00:14:00,560
transaction and you see 80 byte keys

406
00:14:00,560 --> 00:14:02,639
you're most likely

407
00:14:02,639 --> 00:14:04,320
that's chrome all right so it's a good

408
00:14:04,320 --> 00:14:06,320
way of doing that the other thing here

409
00:14:06,320 --> 00:14:08,880
if we look up and there's a sign count

410
00:14:08,880 --> 00:14:10,880
that gets issued

411
00:14:10,880 --> 00:14:13,120
um like i said every time you have this

412
00:14:13,120 --> 00:14:14,720
you get a sign count for what this is so

413
00:14:14,720 --> 00:14:17,600
i'm gonna and this sign count here is uh

414
00:14:17,600 --> 00:14:20,000
one six three three one two four three

415
00:14:20,000 --> 00:14:21,920
one five

416
00:14:21,920 --> 00:14:24,240
who can tell me what that is

417
00:14:24,240 --> 00:14:26,079
it's a time stamp

418
00:14:26,079 --> 00:14:27,839
it's a time stamp from like five seconds

419
00:14:27,839 --> 00:14:29,440
ago

420
00:14:29,440 --> 00:14:31,519
do you think you can predict the

421
00:14:31,519 --> 00:14:33,199
signature count that's going to come

422
00:14:33,199 --> 00:14:34,480
with every

423
00:14:34,480 --> 00:14:37,839
key operation that's performed by chrome

424
00:14:37,839 --> 00:14:38,400
yes

425
00:14:38,400 --> 00:14:40,160
[Laughter]

426
00:14:40,160 --> 00:14:41,519
every time it performs a signature

427
00:14:41,519 --> 00:14:43,279
operation it just uses the current time

428
00:14:43,279 --> 00:14:45,760
stamp and it iterates forward

429
00:14:45,760 --> 00:14:48,000
on the one hand this is maybe clever

430
00:14:48,000 --> 00:14:50,240
it's always advancing

431
00:14:50,240 --> 00:14:51,920
no matter where that key is being used

432
00:14:51,920 --> 00:14:54,959
anywhere else it's going to be that

433
00:14:54,959 --> 00:14:57,120
it is predictable

434
00:14:57,120 --> 00:14:58,720
but then the signature count is always

435
00:14:58,720 --> 00:15:00,959
supposed to go up so if you were an

436
00:15:00,959 --> 00:15:02,800
attacker you could probably just guess

437
00:15:02,800 --> 00:15:06,000
at a really large 32-bit integer and use

438
00:15:06,000 --> 00:15:07,600
that as your signature account so i'm

439
00:15:07,600 --> 00:15:10,320
not certain that this is a real

440
00:15:10,320 --> 00:15:13,199
flaw in any way but it does do a couple

441
00:15:13,199 --> 00:15:14,959
of things one it's made most of the

442
00:15:14,959 --> 00:15:17,440
vendors ignore the sign count

443
00:15:17,440 --> 00:15:19,519
all right and we'll show you the even

444
00:15:19,519 --> 00:15:21,519
worse reason why most vendors ignore the

445
00:15:21,519 --> 00:15:23,839
sign count shortly uh it also means that

446
00:15:23,839 --> 00:15:26,079
this is another identifying factor if

447
00:15:26,079 --> 00:15:28,000
you are looking at a fido transaction

448
00:15:28,000 --> 00:15:30,560
and you do see a signature count that

449
00:15:30,560 --> 00:15:32,639
amazingly matches the time stamp from

450
00:15:32,639 --> 00:15:35,120
maybe seconds ago you're also have a

451
00:15:35,120 --> 00:15:36,800
really good indication that you're

452
00:15:36,800 --> 00:15:38,320
looking at somebody that's using chrome

453
00:15:38,320 --> 00:15:40,320
all right so some cool things there the

454
00:15:40,320 --> 00:15:41,759
other thing that they're doing we didn't

455
00:15:41,759 --> 00:15:43,440
ask for an attestation statement we're

456
00:15:43,440 --> 00:15:44,959
going to talk about that later but

457
00:15:44,959 --> 00:15:47,759
chrome always supplies an a.a grid an

458
00:15:47,759 --> 00:15:49,440
authenticator

459
00:15:49,440 --> 00:15:52,720
generic or you know universal id right

460
00:15:52,720 --> 00:15:54,639
these are supposed to be unique for each

461
00:15:54,639 --> 00:15:56,480
authenticator and this one is

462
00:15:56,480 --> 00:15:58,480
however they always send it whether you

463
00:15:58,480 --> 00:16:00,800
ask for attestation or not when we flip

464
00:16:00,800 --> 00:16:02,240
over to safari here you're going to see

465
00:16:02,240 --> 00:16:04,480
that safari and every other key that

466
00:16:04,480 --> 00:16:07,040
i've tested will send all zeros unless

467
00:16:07,040 --> 00:16:08,800
you're asking for an attestation to

468
00:16:08,800 --> 00:16:10,720
actually be given right so it's another

469
00:16:10,720 --> 00:16:12,000
indicator that this is coming from

470
00:16:12,000 --> 00:16:13,920
chrome as a browser

471
00:16:13,920 --> 00:16:16,320
so now if we go over to safari and we go

472
00:16:16,320 --> 00:16:18,399
to this same page and we kind of go

473
00:16:18,399 --> 00:16:20,800
through the same operation here so hit

474
00:16:20,800 --> 00:16:23,600
debugger

475
00:16:23,600 --> 00:16:25,120
scroll down and we're just going to hit

476
00:16:25,120 --> 00:16:27,279
register and we're going to hit continue

477
00:16:27,279 --> 00:16:29,519
and i'm going to tap my finger and now

478
00:16:29,519 --> 00:16:32,079
i'm going to have the same process done

479
00:16:32,079 --> 00:16:34,000
by safari and you're going to notice a

480
00:16:34,000 --> 00:16:35,680
couple of different things first of all

481
00:16:35,680 --> 00:16:37,680
the a grid is zero all right that's what

482
00:16:37,680 --> 00:16:39,040
it's supposed to be it should be zeroed

483
00:16:39,040 --> 00:16:41,040
out so we're not leaking any sort of

484
00:16:41,040 --> 00:16:42,800
identifying information about what piece

485
00:16:42,800 --> 00:16:44,800
of hardware that we have here the key

486
00:16:44,800 --> 00:16:47,360
size is 20 so the credential id length

487
00:16:47,360 --> 00:16:48,880
is 20 bytes

488
00:16:48,880 --> 00:16:50,240
and i shouldn't say the key size isn't

489
00:16:50,240 --> 00:16:52,959
20 the key size is a p256 the credential

490
00:16:52,959 --> 00:16:55,600
id which is the handle for the key is 20

491
00:16:55,600 --> 00:16:58,240
bytes in length it's very short uh most

492
00:16:58,240 --> 00:17:00,399
of the other the hardware devices

493
00:17:00,399 --> 00:17:01,759
because they're unless you're using a

494
00:17:01,759 --> 00:17:03,920
resident key the key is encrypted into

495
00:17:03,920 --> 00:17:05,520
the key handle kind of a clever way of

496
00:17:05,520 --> 00:17:07,119
doing these things right in this case

497
00:17:07,119 --> 00:17:09,280
it's 20 bytes kind of a big tip off it's

498
00:17:09,280 --> 00:17:11,760
coming from safari right other thing

499
00:17:11,760 --> 00:17:13,679
here they have a sign count of zero

500
00:17:13,679 --> 00:17:15,520
which is appropriate for this time

501
00:17:15,520 --> 00:17:17,679
because we've just created this key all

502
00:17:17,679 --> 00:17:19,280
right but now i'm going to go over and

503
00:17:19,280 --> 00:17:21,039
i'm actually going to use this key so

504
00:17:21,039 --> 00:17:23,039
web authentic me has the ability to just

505
00:17:23,039 --> 00:17:24,559
hit authenticate i'm going to hit

506
00:17:24,559 --> 00:17:26,880
authenticate safari pops this up says

507
00:17:26,880 --> 00:17:28,480
account from security keys great it's a

508
00:17:28,480 --> 00:17:31,120
nice little ui and i wasn't fast enough

509
00:17:31,120 --> 00:17:32,799
so safari pops this up gonna hit

510
00:17:32,799 --> 00:17:35,919
continue uh hit touch id again and i

511
00:17:35,919 --> 00:17:38,799
will have just generated uh a signature

512
00:17:38,799 --> 00:17:41,039
all right the signature is uh it's

513
00:17:41,039 --> 00:17:42,480
there's some client data there's an

514
00:17:42,480 --> 00:17:43,840
origin there's a couple of things that

515
00:17:43,840 --> 00:17:45,840
are done it's hashed and then there's a

516
00:17:45,840 --> 00:17:47,840
signature performed over that hash and

517
00:17:47,840 --> 00:17:49,760
then that proves that you have access to

518
00:17:49,760 --> 00:17:51,679
that private key it's a nice fairly

519
00:17:51,679 --> 00:17:53,679
smooth way of doing this and i think

520
00:17:53,679 --> 00:17:55,039
it's a it's a really good protocol for

521
00:17:55,039 --> 00:17:57,440
that aspect safari however comes down

522
00:17:57,440 --> 00:18:01,200
here and the sign count is still zero

523
00:18:01,200 --> 00:18:04,559
if i go back to chrome and i use the

524
00:18:04,559 --> 00:18:07,200
same key that i just authenticated with

525
00:18:07,200 --> 00:18:08,640
you will see the sign count is

526
00:18:08,640 --> 00:18:10,880
incremented up of course it also happens

527
00:18:10,880 --> 00:18:13,120
to be the current timestamp

528
00:18:13,120 --> 00:18:14,720
so because of this you have this

529
00:18:14,720 --> 00:18:16,880
interesting behavior between these two

530
00:18:16,880 --> 00:18:19,120
with the safari platform authenticator

531
00:18:19,120 --> 00:18:21,280
always returning zero

532
00:18:21,280 --> 00:18:23,280
a lot of the relying parties have had to

533
00:18:23,280 --> 00:18:25,200
ignore the signature count

534
00:18:25,200 --> 00:18:27,360
right because if they want to be

535
00:18:27,360 --> 00:18:29,600
compatible if they want gram-off they

536
00:18:29,600 --> 00:18:31,200
want other folks to be able to use this

537
00:18:31,200 --> 00:18:32,320
and to be able to use the hardware

538
00:18:32,320 --> 00:18:34,000
that's in front of them you have to

539
00:18:34,000 --> 00:18:35,760
start ignoring that signature count or

540
00:18:35,760 --> 00:18:38,720
expecting it to be zero across the way

541
00:18:38,720 --> 00:18:39,760
so

542
00:18:39,760 --> 00:18:41,440
again not bad i don't know that that's

543
00:18:41,440 --> 00:18:43,440
an attack by any means but just an

544
00:18:43,440 --> 00:18:44,640
interesting little learning as we've

545
00:18:44,640 --> 00:18:46,320
gone through this

546
00:18:46,320 --> 00:18:47,360
all right

547
00:18:47,360 --> 00:18:51,760
back to the slides there's keynote

548
00:18:51,760 --> 00:18:54,120
so here's a quick little chart uh

549
00:18:54,120 --> 00:18:56,400
non-authoritative non-guaranteed

550
00:18:56,400 --> 00:18:58,559
not for use in nuclear reactors or in

551
00:18:58,559 --> 00:19:01,039
medical devices uh of going through a

552
00:19:01,039 --> 00:19:03,280
lot of the keys that i had on hand uh

553
00:19:03,280 --> 00:19:04,720
you can kind of see that there is uh

554
00:19:04,720 --> 00:19:07,200
some differences ubico for example is a

555
00:19:07,200 --> 00:19:10,400
64 byte id length um you know and that

556
00:19:10,400 --> 00:19:12,480
distinguishes it a little bit from fedes

557
00:19:12,480 --> 00:19:14,880
and feytien and some of the others

558
00:19:14,880 --> 00:19:16,880
some have signature counts that are

559
00:19:16,880 --> 00:19:19,280
based on the device so they just have a

560
00:19:19,280 --> 00:19:21,120
common signature count for every key on

561
00:19:21,120 --> 00:19:23,280
that device some have a signature count

562
00:19:23,280 --> 00:19:25,360
that's based on the key some have one

563
00:19:25,360 --> 00:19:26,720
that have a little bit of a random

564
00:19:26,720 --> 00:19:28,240
jitter in it

565
00:19:28,240 --> 00:19:30,640
pretty much all of them return all zeros

566
00:19:30,640 --> 00:19:33,280
if you're not asking for attestation um

567
00:19:33,280 --> 00:19:35,520
however the apple platform is 20 bytes

568
00:19:35,520 --> 00:19:37,679
the signature count is always zeros they

569
00:19:37,679 --> 00:19:40,799
do do a good job of the aaa grids

570
00:19:40,799 --> 00:19:42,240
on the attestation it gets a little bit

571
00:19:42,240 --> 00:19:44,160
complicated we'll talk about that uh

572
00:19:44,160 --> 00:19:46,240
shortly as we get into that and then

573
00:19:46,240 --> 00:19:47,679
with chrome

574
00:19:47,679 --> 00:19:49,440
they do attestation where they self

575
00:19:49,440 --> 00:19:50,799
attest

576
00:19:50,799 --> 00:19:53,760
with an attestation in fido

577
00:19:53,760 --> 00:19:55,600
the requirement is that you don't have

578
00:19:55,600 --> 00:19:58,160
an attestation that encompasses less

579
00:19:58,160 --> 00:20:00,640
than a hundred thousand devices right so

580
00:20:00,640 --> 00:20:02,159
you're signing it with a private key

581
00:20:02,159 --> 00:20:04,080
that was burned in at the factory and

582
00:20:04,080 --> 00:20:06,240
that private key is the same private key

583
00:20:06,240 --> 00:20:08,559
on up to or hopefully more than a

584
00:20:08,559 --> 00:20:10,640
hundred thousand other devices and that

585
00:20:10,640 --> 00:20:12,400
way even though you get this attestation

586
00:20:12,400 --> 00:20:14,720
that proves this came from this

587
00:20:14,720 --> 00:20:17,360
particular piece of hardware this brand

588
00:20:17,360 --> 00:20:18,720
all right you're gonna get a similar

589
00:20:18,720 --> 00:20:20,960
attestation statement from other devices

590
00:20:20,960 --> 00:20:22,559
in there

591
00:20:22,559 --> 00:20:25,039
that would require apple or anybody

592
00:20:25,039 --> 00:20:27,200
doing a platform to ship an actual

593
00:20:27,200 --> 00:20:30,080
private key on your platform that is

594
00:20:30,080 --> 00:20:31,760
shared with a number of other ones and

595
00:20:31,760 --> 00:20:34,240
that's kind of a complicated problem and

596
00:20:34,240 --> 00:20:35,280
so

597
00:20:35,280 --> 00:20:38,320
apple does not really do attestation

598
00:20:38,320 --> 00:20:39,600
i think there's good reasons for that

599
00:20:39,600 --> 00:20:41,200
until we get to the syncing platform

600
00:20:41,200 --> 00:20:42,559
authenticators which we'll talk about

601
00:20:42,559 --> 00:20:44,559
shortly and then on the chrome platform

602
00:20:44,559 --> 00:20:47,120
they do a self attestation the private

603
00:20:47,120 --> 00:20:48,960
key that's generated when you generate a

604
00:20:48,960 --> 00:20:51,440
new fido key is then used to perform an

605
00:20:51,440 --> 00:20:52,960
attestation statement so it's

606
00:20:52,960 --> 00:20:54,799
effectively signing its own key and

607
00:20:54,799 --> 00:20:56,640
saying this is my key i'm proving that i

608
00:20:56,640 --> 00:20:59,120
have it which is a valid way of doing it

609
00:20:59,120 --> 00:21:00,640
a lot of relying parties have just

610
00:21:00,640 --> 00:21:03,039
decided to ignore the attestation

611
00:21:03,039 --> 00:21:05,039
is unfortunately what has come out of

612
00:21:05,039 --> 00:21:06,880
this we'll cover that shortly

613
00:21:06,880 --> 00:21:09,200
all right recently apple came out with

614
00:21:09,200 --> 00:21:11,440
the sinking platform authenticator apple

615
00:21:11,440 --> 00:21:13,520
thought this was really cool i agree it

616
00:21:13,520 --> 00:21:15,600
is cool right because one of the issues

617
00:21:15,600 --> 00:21:16,960
with fido if you're going to use the

618
00:21:16,960 --> 00:21:18,960
platform authenticator the one that's

619
00:21:18,960 --> 00:21:20,720
built into your laptop the key is

620
00:21:20,720 --> 00:21:23,120
ensconced within the secure enclave you

621
00:21:23,120 --> 00:21:26,000
don't have that same key on your phone

622
00:21:26,000 --> 00:21:28,640
so if i sign into facebook on my mac and

623
00:21:28,640 --> 00:21:30,559
then i go over to facebook on my phone

624
00:21:30,559 --> 00:21:33,120
i've got to have a different key a

625
00:21:33,120 --> 00:21:35,120
different method of signing in and there

626
00:21:35,120 --> 00:21:36,559
is a little bit of

627
00:21:36,559 --> 00:21:38,240
complexity especially when you're

628
00:21:38,240 --> 00:21:40,320
talking about consumers for having to

629
00:21:40,320 --> 00:21:42,559
enroll each of their devices as a

630
00:21:42,559 --> 00:21:45,120
hardware key right so starting with mac

631
00:21:45,120 --> 00:21:50,559
os um monterey or ios 15 apple now has

632
00:21:50,559 --> 00:21:52,320
the option of doing what they call a

633
00:21:52,320 --> 00:21:54,480
syncing platform authenticator they

634
00:21:54,480 --> 00:21:56,080
don't reference this as fido because

635
00:21:56,080 --> 00:21:58,080
it's not typically technically fido

636
00:21:58,080 --> 00:22:00,559
compliant fido requires that the key is

637
00:22:00,559 --> 00:22:02,880
locked into hardware and here apple is

638
00:22:02,880 --> 00:22:04,480
now putting your keys into your icloud

639
00:22:04,480 --> 00:22:05,520
keychain

640
00:22:05,520 --> 00:22:07,280
so if you create an account in github

641
00:22:07,280 --> 00:22:09,360
using a fido key on your mac and you

642
00:22:09,360 --> 00:22:12,240
have an icloud account that key will

643
00:22:12,240 --> 00:22:14,080
then be replicated through your icloud

644
00:22:14,080 --> 00:22:16,640
keychain and will be available on other

645
00:22:16,640 --> 00:22:18,240
devices that you've enrolled into that

646
00:22:18,240 --> 00:22:21,120
icloud account pretty simple pretty easy

647
00:22:21,120 --> 00:22:22,960
if you happen to crack somebody's icloud

648
00:22:22,960 --> 00:22:24,559
account of course you now have these

649
00:22:24,559 --> 00:22:26,720
keys there all right goods and badges to

650
00:22:26,720 --> 00:22:28,799
convenience here um

651
00:22:28,799 --> 00:22:30,960
it is a little weird as i mentioned

652
00:22:30,960 --> 00:22:33,360
earlier authenticators can fall under a

653
00:22:33,360 --> 00:22:35,760
platform bucket or a cross-platform

654
00:22:35,760 --> 00:22:37,200
bucket

655
00:22:37,200 --> 00:22:39,120
this is technically a cross-platform

656
00:22:39,120 --> 00:22:40,960
authenticator because it crosses

657
00:22:40,960 --> 00:22:42,720
platforms it's the same key showing up

658
00:22:42,720 --> 00:22:44,640
in multiple places apple is still

659
00:22:44,640 --> 00:22:47,360
reporting it as a platform authenticator

660
00:22:47,360 --> 00:22:49,120
so you do have some confusion with

661
00:22:49,120 --> 00:22:51,039
services such as azure

662
00:22:51,039 --> 00:22:52,559
and windows hello who are looking for a

663
00:22:52,559 --> 00:22:54,799
specific cross-platform authenticator

664
00:22:54,799 --> 00:22:56,000
we'll show you how to correct that

665
00:22:56,000 --> 00:22:57,360
shortly

666
00:22:57,360 --> 00:22:59,440
all right so anytime you come into a new

667
00:22:59,440 --> 00:23:01,360
protocol something that's interesting to

668
00:23:01,360 --> 00:23:03,600
you what do you do well you try to get

669
00:23:03,600 --> 00:23:05,679
involved and you try to get wedged into

670
00:23:05,679 --> 00:23:07,440
that process right

671
00:23:07,440 --> 00:23:09,280
if it's an internet protocol you set up

672
00:23:09,280 --> 00:23:10,880
a reverse proxy you start looking at

673
00:23:10,880 --> 00:23:12,159
what's going through you can see what

674
00:23:12,159 --> 00:23:14,640
you can poke at well how do you do this

675
00:23:14,640 --> 00:23:16,159
with fido

676
00:23:16,159 --> 00:23:18,559
well you can interrupt the flow all

677
00:23:18,559 --> 00:23:21,440
right when a relying party is using a

678
00:23:21,440 --> 00:23:23,600
fido key for authentication it's calling

679
00:23:23,600 --> 00:23:25,919
a couple of apis in the browser the

680
00:23:25,919 --> 00:23:27,679
first one is navigator credentials

681
00:23:27,679 --> 00:23:29,679
create that will actually create the

682
00:23:29,679 --> 00:23:33,520
credential so your web page whatever

683
00:23:33,520 --> 00:23:35,200
language or whatever you're doing you

684
00:23:35,200 --> 00:23:36,720
can call the navigator credentials

685
00:23:36,720 --> 00:23:39,520
create api that api is provided by the

686
00:23:39,520 --> 00:23:41,679
browser itself the browser then goes and

687
00:23:41,679 --> 00:23:43,919
does the things that it wants to do

688
00:23:43,919 --> 00:23:44,799
all right

689
00:23:44,799 --> 00:23:46,720
there's also a corresponding navigator

690
00:23:46,720 --> 00:23:49,120
credentials get this is where you pass

691
00:23:49,120 --> 00:23:50,400
in the key handle

692
00:23:50,400 --> 00:23:52,960
then allow the browser to try and find

693
00:23:52,960 --> 00:23:55,440
that key get the user to touch it fondle

694
00:23:55,440 --> 00:23:56,960
it do whatever they can to prove their

695
00:23:56,960 --> 00:23:59,440
user presence and then that completes

696
00:23:59,440 --> 00:24:01,120
that process as they go through all

697
00:24:01,120 --> 00:24:03,520
right so these are the two main apis

698
00:24:03,520 --> 00:24:05,679
that a lot of relying parties are using

699
00:24:05,679 --> 00:24:08,720
uh beautiful thing uh javascript

700
00:24:08,720 --> 00:24:11,360
injection cool stuff you can override

701
00:24:11,360 --> 00:24:14,960
these all right so if you wanna have

702
00:24:14,960 --> 00:24:17,520
a little bit of uh entry point within

703
00:24:17,520 --> 00:24:20,640
this uh obviously hacking hardware is is

704
00:24:20,640 --> 00:24:23,600
typically uh fairly high uh you know

705
00:24:23,600 --> 00:24:25,520
complexity uh but getting into the

706
00:24:25,520 --> 00:24:27,440
browser if you can find a way to do that

707
00:24:27,440 --> 00:24:29,440
if you can get in with a content script

708
00:24:29,440 --> 00:24:31,440
and overwrite these functions you'll

709
00:24:31,440 --> 00:24:34,480
effectively own this whole process

710
00:24:34,480 --> 00:24:36,080
all right now

711
00:24:36,080 --> 00:24:37,679
good thing is and i'll refer you i'll

712
00:24:37,679 --> 00:24:40,400
tap the sign fido is more secure than

713
00:24:40,400 --> 00:24:42,799
passwords in pretty much every way so

714
00:24:42,799 --> 00:24:44,240
even if you are in the flow there's

715
00:24:44,240 --> 00:24:45,600
still a lot of things you can't do i

716
00:24:45,600 --> 00:24:46,559
mean we're still talking about

717
00:24:46,559 --> 00:24:48,960
signatures we're still talking about pki

718
00:24:48,960 --> 00:24:51,279
however you have a much better chance of

719
00:24:51,279 --> 00:24:53,120
leveraging any purchase that you have in

720
00:24:53,120 --> 00:24:55,120
here as you go through so also gives you

721
00:24:55,120 --> 00:24:57,600
a way of providing fido services within

722
00:24:57,600 --> 00:25:00,080
a custom web view or other web window

723
00:25:00,080 --> 00:25:01,600
one of the embedded ones that you have

724
00:25:01,600 --> 00:25:03,120
there because otherwise fido really

725
00:25:03,120 --> 00:25:05,200
won't work out of the box with those

726
00:25:05,200 --> 00:25:07,440
so once you have control what can you do

727
00:25:07,440 --> 00:25:08,880
uh you can change the add to station

728
00:25:08,880 --> 00:25:10,640
requirements if the relying party is

729
00:25:10,640 --> 00:25:12,880
asking for a platform authenticator you

730
00:25:12,880 --> 00:25:14,960
can flip that to cross-platform and then

731
00:25:14,960 --> 00:25:16,799
you can pass it to the real

732
00:25:16,799 --> 00:25:19,440
navigator credentials create function

733
00:25:19,440 --> 00:25:21,120
at which point you'll have bypassed

734
00:25:21,120 --> 00:25:22,720
whatever the relying party is trying to

735
00:25:22,720 --> 00:25:24,000
ask for

736
00:25:24,000 --> 00:25:26,159
the response from the authenticator has

737
00:25:26,159 --> 00:25:28,480
no indication as to whether it's a

738
00:25:28,480 --> 00:25:30,720
platform or cross-platform authenticator

739
00:25:30,720 --> 00:25:33,440
so once you flip this in the request uh

740
00:25:33,440 --> 00:25:35,279
it's off to the races from there right

741
00:25:35,279 --> 00:25:37,039
so that's one thing you can do

742
00:25:37,039 --> 00:25:40,159
you can change or add an attestation

743
00:25:40,159 --> 00:25:42,480
when you create a key an attestation

744
00:25:42,480 --> 00:25:44,640
statement can be added proving that this

745
00:25:44,640 --> 00:25:46,000
key came from a certain piece of

746
00:25:46,000 --> 00:25:48,320
hardware uh that attestation statement

747
00:25:48,320 --> 00:25:50,240
can be removed swapped out for something

748
00:25:50,240 --> 00:25:51,679
else all right so you can actually

749
00:25:51,679 --> 00:25:53,679
provide an attestation within a web

750
00:25:53,679 --> 00:25:55,440
extension which is kind of fun we'll

751
00:25:55,440 --> 00:25:57,200
show you that a little bit uh here's a

752
00:25:57,200 --> 00:26:00,159
little diagram from mozilla

753
00:26:00,159 --> 00:26:01,840
and shows you kind of how this works for

754
00:26:01,840 --> 00:26:04,000
more of a developer's perspective and

755
00:26:04,000 --> 00:26:05,360
what we're going to do is we're putting

756
00:26:05,360 --> 00:26:07,760
our web extension right here

757
00:26:07,760 --> 00:26:09,440
all right so that's where we're going to

758
00:26:09,440 --> 00:26:11,440
fit and again just a web extension

759
00:26:11,440 --> 00:26:13,679
chrome safari all i've tested this with

760
00:26:13,679 --> 00:26:14,640
that

761
00:26:14,640 --> 00:26:17,279
safari on ios 15 with the new extensions

762
00:26:17,279 --> 00:26:19,039
you can do this as well and put these

763
00:26:19,039 --> 00:26:21,120
places in so the first thing that you

764
00:26:21,120 --> 00:26:22,480
need to do is you need to provide a

765
00:26:22,480 --> 00:26:24,880
public key credential is user verifying

766
00:26:24,880 --> 00:26:27,120
platform authenticator available this is

767
00:26:27,120 --> 00:26:28,720
the function that tells the relying

768
00:26:28,720 --> 00:26:31,440
party that you are fido capable so as

769
00:26:31,440 --> 00:26:33,120
long as you respond with a promise that

770
00:26:33,120 --> 00:26:35,840
results to yes and this is my first

771
00:26:35,840 --> 00:26:37,360
javascript ever that you're going to see

772
00:26:37,360 --> 00:26:39,360
so if i get any of the javascript things

773
00:26:39,360 --> 00:26:41,760
wrong please correct me so as long as

774
00:26:41,760 --> 00:26:43,679
you respond with a pro a promise that

775
00:26:43,679 --> 00:26:46,000
says yes the relying party believes you

776
00:26:46,000 --> 00:26:47,919
can do fido operations so that's the

777
00:26:47,919 --> 00:26:49,360
first piece

778
00:26:49,360 --> 00:26:51,279
once you've done that you can take over

779
00:26:51,279 --> 00:26:53,520
navigator credentials create

780
00:26:53,520 --> 00:26:55,760
a dictionary of options is passed to

781
00:26:55,760 --> 00:26:57,039
this function

782
00:26:57,039 --> 00:26:59,120
just some json with a challenge and a

783
00:26:59,120 --> 00:27:00,880
couple other pieces in it that's where

784
00:27:00,880 --> 00:27:02,960
you can have your fun pass that on to

785
00:27:02,960 --> 00:27:05,279
the real function if you want to and

786
00:27:05,279 --> 00:27:08,159
then navigator credentials crea i get

787
00:27:08,159 --> 00:27:09,840
this is where the relying party says

788
00:27:09,840 --> 00:27:11,600
okay i know you have a key you've

789
00:27:11,600 --> 00:27:13,440
already registered it with me i want to

790
00:27:13,440 --> 00:27:15,760
now do an authentication operation so

791
00:27:15,760 --> 00:27:17,520
i'm going to pass this down to you all

792
00:27:17,520 --> 00:27:19,520
right very similar you get a bundle of

793
00:27:19,520 --> 00:27:21,279
options play around with those do

794
00:27:21,279 --> 00:27:23,039
whatever you need to this is not as

795
00:27:23,039 --> 00:27:25,279
interesting uh well

796
00:27:25,279 --> 00:27:26,799
it is very interesting but it's not as

797
00:27:26,799 --> 00:27:28,640
interesting from a getting wedged into

798
00:27:28,640 --> 00:27:30,720
the process perspective because at this

799
00:27:30,720 --> 00:27:32,559
point in time it's just asking for a

800
00:27:32,559 --> 00:27:34,320
signature from a private key that it

801
00:27:34,320 --> 00:27:36,159
already knows the public side so i'm not

802
00:27:36,159 --> 00:27:38,159
really certain that there's a lot of

803
00:27:38,159 --> 00:27:39,600
nefarious things you can do at this

804
00:27:39,600 --> 00:27:41,760
stage but certainly the navigator

805
00:27:41,760 --> 00:27:43,200
credentials create

806
00:27:43,200 --> 00:27:44,640
is where if you were an attacker you'd

807
00:27:44,640 --> 00:27:45,919
probably think about having a little bit

808
00:27:45,919 --> 00:27:47,360
more fun

809
00:27:47,360 --> 00:27:49,679
all right here's my really awful this is

810
00:27:49,679 --> 00:27:51,039
like only the second or third time i've

811
00:27:51,039 --> 00:27:53,600
written javascript it's mostly

812
00:27:53,600 --> 00:27:56,240
uh cut and paste from slack a stack

813
00:27:56,240 --> 00:27:57,440
overflow

814
00:27:57,440 --> 00:27:59,200
so forgive me

815
00:27:59,200 --> 00:28:01,039
but here's what you can do you add this

816
00:28:01,039 --> 00:28:03,760
into a content script uh injecting this

817
00:28:03,760 --> 00:28:05,440
content script through a web extension

818
00:28:05,440 --> 00:28:07,200
or some other way getting it into the

819
00:28:07,200 --> 00:28:10,320
web page you can wrap the real create

820
00:28:10,320 --> 00:28:12,799
functionality all right so you'll

821
00:28:12,799 --> 00:28:14,480
package that up you'll set it to the

822
00:28:14,480 --> 00:28:16,720
side you'll provide your own function to

823
00:28:16,720 --> 00:28:18,960
do that and in this particular case all

824
00:28:18,960 --> 00:28:20,720
i'm doing is logging out what's going

825
00:28:20,720 --> 00:28:21,600
through

826
00:28:21,600 --> 00:28:23,200
if you are troubleshooting any sort of

827
00:28:23,200 --> 00:28:25,360
phyto authentication issues

828
00:28:25,360 --> 00:28:27,200
it is a little bit complicated to get

829
00:28:27,200 --> 00:28:29,039
the browser to give up what's going on

830
00:28:29,039 --> 00:28:31,279
that's not a bad thing however if you

831
00:28:31,279 --> 00:28:32,799
want to troubleshoot it see what's being

832
00:28:32,799 --> 00:28:34,399
asked for seeing what the response is

833
00:28:34,399 --> 00:28:36,399
coming back from this is an easy way of

834
00:28:36,399 --> 00:28:38,080
doing that all right

835
00:28:38,080 --> 00:28:39,520
and that just shows you so all we're

836
00:28:39,520 --> 00:28:41,440
doing here is we're creating our own

837
00:28:41,440 --> 00:28:44,399
navigator credentials create and once we

838
00:28:44,399 --> 00:28:47,200
have just logged the options that are

839
00:28:47,200 --> 00:28:49,720
going through we pass the options

840
00:28:49,720 --> 00:28:52,480
unmolested to the real navigator

841
00:28:52,480 --> 00:28:54,720
credentials create function

842
00:28:54,720 --> 00:28:56,080
and that way the user doesn't even know

843
00:28:56,080 --> 00:28:57,279
anything's changed there's a really

844
00:28:57,279 --> 00:28:58,880
great thing about this they'll still get

845
00:28:58,880 --> 00:29:00,480
prompted for touch id

846
00:29:00,480 --> 00:29:02,240
the origin all that stuff will work as

847
00:29:02,240 --> 00:29:05,120
expected uh and then the

848
00:29:05,120 --> 00:29:07,440
the response will come in uh we log the

849
00:29:07,440 --> 00:29:09,279
response and then move from there so

850
00:29:09,279 --> 00:29:11,520
it's a pretty slick way of doing this

851
00:29:11,520 --> 00:29:14,080
so let's do a demo all right so i'm

852
00:29:14,080 --> 00:29:17,039
going to go back into chrome here

853
00:29:17,039 --> 00:29:18,559
and i'm going to go to the singular key

854
00:29:18,559 --> 00:29:22,080
page again it's a really nice

855
00:29:22,080 --> 00:29:24,399
just a debugger for this and i'm going

856
00:29:24,399 --> 00:29:26,799
to hit open up the javascript console

857
00:29:26,799 --> 00:29:28,640
and i've got a web extension here

858
00:29:28,640 --> 00:29:30,240
already loaded

859
00:29:30,240 --> 00:29:32,399
and it's going to provide then some

860
00:29:32,399 --> 00:29:34,720
logging and if i hit register here you

861
00:29:34,720 --> 00:29:36,399
can see i'm already starting to log out

862
00:29:36,399 --> 00:29:38,159
everything that's going through so now

863
00:29:38,159 --> 00:29:39,679
i've got the ability to see what's going

864
00:29:39,679 --> 00:29:41,679
through this process i'm going to use my

865
00:29:41,679 --> 00:29:43,679
touch id here and then i can see the

866
00:29:43,679 --> 00:29:45,520
actual response

867
00:29:45,520 --> 00:29:47,760
this debugging page actually gives it to

868
00:29:47,760 --> 00:29:49,200
you here as well so you can actually

869
00:29:49,200 --> 00:29:51,600
compare and contrast but if you're not

870
00:29:51,600 --> 00:29:53,279
on a page that happens to have a debug

871
00:29:53,279 --> 00:29:55,679
console built in uh this is a nice way

872
00:29:55,679 --> 00:29:57,039
of seeing what's going in and out of the

873
00:29:57,039 --> 00:29:59,039
process all right and again it just

874
00:29:59,039 --> 00:30:00,720
shows up here you can kind of take a

875
00:30:00,720 --> 00:30:02,960
look this is the uh i think it's the

876
00:30:02,960 --> 00:30:05,760
seabor as base64 encoding so you can go

877
00:30:05,760 --> 00:30:07,760
into c board.me or some other places

878
00:30:07,760 --> 00:30:09,440
decode that and you can actually see

879
00:30:09,440 --> 00:30:11,520
what's going on there so once you get it

880
00:30:11,520 --> 00:30:12,880
into javascript and once you get that

881
00:30:12,880 --> 00:30:14,480
web extension in there

882
00:30:14,480 --> 00:30:16,799
it's pretty easy to then you know log

883
00:30:16,799 --> 00:30:18,480
out what you need to or make changes as

884
00:30:18,480 --> 00:30:20,640
you'd like to going through there

885
00:30:20,640 --> 00:30:25,520
all right um so that is there

886
00:30:25,520 --> 00:30:28,240
all right so again fido is more secure

887
00:30:28,240 --> 00:30:30,159
than using a password in every way all

888
00:30:30,159 --> 00:30:30,960
right

889
00:30:30,960 --> 00:30:32,880
good we'll just we'll keep reiterating

890
00:30:32,880 --> 00:30:35,520
that but it's a good way of entering in

891
00:30:35,520 --> 00:30:37,600
keys can lie

892
00:30:37,600 --> 00:30:40,720
a basic precept of phytoauthentication

893
00:30:40,720 --> 00:30:42,799
and this is why it's so good for

894
00:30:42,799 --> 00:30:44,799
protection against phishing

895
00:30:44,799 --> 00:30:47,360
is that when you interact with a key

896
00:30:47,360 --> 00:30:49,840
you have to have some degree of user

897
00:30:49,840 --> 00:30:51,919
presence right if you've got the yubi

898
00:30:51,919 --> 00:30:53,919
keys you've got this little disk you've

899
00:30:53,919 --> 00:30:56,000
got to press the disk if you've got the

900
00:30:56,000 --> 00:30:57,679
ones that are usb-c you've got to make

901
00:30:57,679 --> 00:30:59,279
sure you find little contacts and don't

902
00:30:59,279 --> 00:31:01,039
accidentally hit them when you paste

903
00:31:01,039 --> 00:31:02,799
your one-time password into slack or

904
00:31:02,799 --> 00:31:04,799
whatever else right so you've got to

905
00:31:04,799 --> 00:31:07,200
have some sort of interaction with the

906
00:31:07,200 --> 00:31:09,440
key to prove you're there this is a

907
00:31:09,440 --> 00:31:12,000
really good thing right and it is

908
00:31:12,000 --> 00:31:14,399
anti-phishing protection if you happen

909
00:31:14,399 --> 00:31:16,240
to run across a drive-by or something

910
00:31:16,240 --> 00:31:17,679
else that's trying to use your

911
00:31:17,679 --> 00:31:20,240
credentials there's at least some

912
00:31:20,240 --> 00:31:22,240
physical interaction that's required

913
00:31:22,240 --> 00:31:23,679
before your credentials are going to be

914
00:31:23,679 --> 00:31:25,840
used in potentially a malicious way so

915
00:31:25,840 --> 00:31:27,600
that's great

916
00:31:27,600 --> 00:31:28,880
however

917
00:31:28,880 --> 00:31:32,720
all of these are set by the key

918
00:31:32,720 --> 00:31:34,720
all right it's the key that determines

919
00:31:34,720 --> 00:31:36,240
whether user presence has actually

920
00:31:36,240 --> 00:31:38,559
happened or not

921
00:31:38,559 --> 00:31:40,640
let's show why this matters all right

922
00:31:40,640 --> 00:31:42,960
who's familiar with the cloud flare

923
00:31:42,960 --> 00:31:45,440
challenge

924
00:31:45,519 --> 00:31:47,600
all right wow okay

925
00:31:47,600 --> 00:31:49,039
cool well this is good then it's a

926
00:31:49,039 --> 00:31:50,640
learning experience for everyone all

927
00:31:50,640 --> 00:31:52,399
right so this is the cloud for flare

928
00:31:52,399 --> 00:31:56,320
challenge who likes captchas

929
00:31:56,640 --> 00:31:58,720
thank you sam all right if you're tired

930
00:31:58,720 --> 00:32:01,519
of picking out buses and bicycles and

931
00:32:01,519 --> 00:32:03,679
street signs or whatever else uh

932
00:32:03,679 --> 00:32:07,039
cloudfair presented this as a way of

933
00:32:07,039 --> 00:32:09,039
requiring an actual user right because

934
00:32:09,039 --> 00:32:11,440
what is a capture doing it's

935
00:32:11,440 --> 00:32:13,679
presumably proving that you're a human

936
00:32:13,679 --> 00:32:15,679
right you're not some sort of artificial

937
00:32:15,679 --> 00:32:16,880
turk or something else like that

938
00:32:16,880 --> 00:32:18,559
mechanical turk that's just running

939
00:32:18,559 --> 00:32:20,320
through this you're in fact an actual

940
00:32:20,320 --> 00:32:22,080
human behind the

941
00:32:22,080 --> 00:32:25,360
screen that's being able to do that

942
00:32:25,760 --> 00:32:27,039
or you're training a machine learning

943
00:32:27,039 --> 00:32:28,720
algorithm absolutely

944
00:32:28,720 --> 00:32:30,240
but i don't think we're training it very

945
00:32:30,240 --> 00:32:32,320
well because it keeps asking me the same

946
00:32:32,320 --> 00:32:32,840
questions

947
00:32:32,840 --> 00:32:35,600
[Laughter]

948
00:32:35,600 --> 00:32:37,840
just to be a pain that's good that's

949
00:32:37,840 --> 00:32:38,580
rebel

950
00:32:38,580 --> 00:32:40,320
[Laughter]

951
00:32:40,320 --> 00:32:41,840
so here we are at the cloudflare

952
00:32:41,840 --> 00:32:43,760
challenge i'm going to try verify with

953
00:32:43,760 --> 00:32:46,240
ct uh cap and i'm going to do this

954
00:32:46,240 --> 00:32:48,480
through here and i'm going to fail

955
00:32:48,480 --> 00:32:49,919
and i'm failing because there's no

956
00:32:49,919 --> 00:32:52,880
attestation format all right because

957
00:32:52,880 --> 00:32:54,720
these platform authenticators in chrome

958
00:32:54,720 --> 00:32:56,320
and safari don't have a way of doing

959
00:32:56,320 --> 00:32:58,080
attestation

960
00:32:58,080 --> 00:33:00,159
i'll put a big asterisk on that but

961
00:33:00,159 --> 00:33:02,240
we'll leave that alone for now

962
00:33:02,240 --> 00:33:03,679
they can't pass through this even though

963
00:33:03,679 --> 00:33:06,159
i did do a user interaction if i use one

964
00:33:06,159 --> 00:33:08,240
of my fido keys from you know yubiko

965
00:33:08,240 --> 00:33:09,679
whatever thetas whatever we'd be able to

966
00:33:09,679 --> 00:33:11,919
get through that however i look at this

967
00:33:11,919 --> 00:33:13,679
and i said well you know this could be

968
00:33:13,679 --> 00:33:15,679
fun to play around with so what do you

969
00:33:15,679 --> 00:33:16,960
do when you want to play around with

970
00:33:16,960 --> 00:33:19,600
things well you get a tool and this tool

971
00:33:19,600 --> 00:33:21,360
now that i've lost my cursor come back

972
00:33:21,360 --> 00:33:22,320
here

973
00:33:22,320 --> 00:33:26,399
there we go keynote was hogging it so

974
00:33:26,399 --> 00:33:30,480
this is a software-based fido key

975
00:33:30,480 --> 00:33:33,200
uh i've loaded in these uh java or these

976
00:33:33,200 --> 00:33:34,799
apis that i explained before the

977
00:33:34,799 --> 00:33:36,559
navigator credentials create navigator

978
00:33:36,559 --> 00:33:38,640
credentials get and i've actually backed

979
00:33:38,640 --> 00:33:40,960
this entirely with my own code so now

980
00:33:40,960 --> 00:33:42,880
i'm able to actually do attestation

981
00:33:42,880 --> 00:33:44,720
statements so in this case i'm at the

982
00:33:44,720 --> 00:33:46,559
same cloudflare challenge i'm going to

983
00:33:46,559 --> 00:33:48,480
start out with this and it's going to

984
00:33:48,480 --> 00:33:49,679
fail right

985
00:33:49,679 --> 00:33:51,440
because i'm not providing an attestation

986
00:33:51,440 --> 00:33:53,039
statement you notice my hands didn't

987
00:33:53,039 --> 00:33:56,000
touch anything all right since i own the

988
00:33:56,000 --> 00:34:00,720
key i can lie about the user presence

989
00:34:01,120 --> 00:34:02,159
all right

990
00:34:02,159 --> 00:34:04,880
now i'm going to select attestation here

991
00:34:04,880 --> 00:34:07,679
and i'm going to retry this and again no

992
00:34:07,679 --> 00:34:10,159
touching keys and i've successfully

993
00:34:10,159 --> 00:34:12,239
actually navigated through

994
00:34:12,239 --> 00:34:14,560
uh the cloud flare challenge

995
00:34:14,560 --> 00:34:16,800
all right because again since i own the

996
00:34:16,800 --> 00:34:18,879
key i can lie about whether user

997
00:34:18,879 --> 00:34:20,879
presence was there i can say the user

998
00:34:20,879 --> 00:34:23,040
was fully verified i can add my own

999
00:34:23,040 --> 00:34:25,359
attestation i can generate a credential

1000
00:34:25,359 --> 00:34:26,879
id length of

1001
00:34:26,879 --> 00:34:28,800
50 000 bytes and see if i hit an

1002
00:34:28,800 --> 00:34:30,960
overflow or some other way so it's kind

1003
00:34:30,960 --> 00:34:32,399
of a fun fuzzing tool that i've been

1004
00:34:32,399 --> 00:34:33,918
playing around with and looking at how

1005
00:34:33,918 --> 00:34:35,359
you can interact

1006
00:34:35,359 --> 00:34:37,760
with some of these places unless you

1007
00:34:37,760 --> 00:34:39,440
think i'm just

1008
00:34:39,440 --> 00:34:40,960
making this up

1009
00:34:40,960 --> 00:34:42,960
here's an octa login

1010
00:34:42,960 --> 00:34:45,199
and i'm going to sign in with an account

1011
00:34:45,199 --> 00:34:47,040
here

1012
00:34:47,040 --> 00:34:48,399
and first it's going to prompt me for my

1013
00:34:48,399 --> 00:34:50,560
password

1014
00:34:50,560 --> 00:34:52,159
which hopefully i remember

1015
00:34:52,159 --> 00:34:53,199
all right

1016
00:34:53,199 --> 00:34:55,359
and now it says hey you've got a policy

1017
00:34:55,359 --> 00:34:56,480
that says you need to roll an

1018
00:34:56,480 --> 00:34:58,640
authenticator well sure i've got

1019
00:34:58,640 --> 00:35:01,280
authenticator so uh mfa enrollment

1020
00:35:01,280 --> 00:35:02,800
required great

1021
00:35:02,800 --> 00:35:04,560
click on that i want to do a security

1022
00:35:04,560 --> 00:35:06,880
key set up

1023
00:35:06,880 --> 00:35:09,440
and configure factor

1024
00:35:09,440 --> 00:35:11,920
enroll

1025
00:35:12,000 --> 00:35:13,359
and now i've just enrolled the key in

1026
00:35:13,359 --> 00:35:15,520
octa

1027
00:35:15,520 --> 00:35:18,160
pretty cool right

1028
00:35:18,560 --> 00:35:20,079
a stunned silence in the room i guess

1029
00:35:20,079 --> 00:35:22,480
that's good and now to pass the hoop

1030
00:35:22,480 --> 00:35:23,920
over the floating assistant what i'm

1031
00:35:23,920 --> 00:35:25,839
going to go back into is i'm going to

1032
00:35:25,839 --> 00:35:27,839
sign out and i'm going to go back in and

1033
00:35:27,839 --> 00:35:29,599
authenticate as this user

1034
00:35:29,599 --> 00:35:32,320
this is octa factor sequencing so i

1035
00:35:32,320 --> 00:35:34,240
don't even need a password i can just

1036
00:35:34,240 --> 00:35:37,440
hit this and i'll verify

1037
00:35:37,440 --> 00:35:39,520
and now i'm in my octa dashboard

1038
00:35:39,520 --> 00:35:41,759
all right

1039
00:35:42,480 --> 00:35:45,040
i actually think this is pretty cool i

1040
00:35:45,040 --> 00:35:47,280
do a lot with mutual tls which is tried

1041
00:35:47,280 --> 00:35:48,640
and true very good way of doing

1042
00:35:48,640 --> 00:35:49,920
authentication

1043
00:35:49,920 --> 00:35:52,079
the world does not seem to be excited

1044
00:35:52,079 --> 00:35:54,960
about mutual tls going forward web off

1045
00:35:54,960 --> 00:35:57,200
end seems to be the new hotness

1046
00:35:57,200 --> 00:35:58,720
and i think this is an interesting way

1047
00:35:58,720 --> 00:36:01,200
of possibly doing web off n

1048
00:36:01,200 --> 00:36:03,760
instead of mutual tls by doing this kind

1049
00:36:03,760 --> 00:36:06,079
of transaction under the covers right

1050
00:36:06,079 --> 00:36:08,320
since my key is software based i could

1051
00:36:08,320 --> 00:36:10,240
do things such as continuous conditional

1052
00:36:10,240 --> 00:36:12,640
access there's other options that i have

1053
00:36:12,640 --> 00:36:14,480
in here to validate that you are who you

1054
00:36:14,480 --> 00:36:16,400
say you are and you are on a trusted

1055
00:36:16,400 --> 00:36:18,320
platform all right so some interesting

1056
00:36:18,320 --> 00:36:20,079
things there and just in case you think

1057
00:36:20,079 --> 00:36:22,160
i'm picking on octa uh here i'm going to

1058
00:36:22,160 --> 00:36:25,440
go log into one login up let me log out

1059
00:36:25,440 --> 00:36:26,800
and i'll show you that the same thing

1060
00:36:26,800 --> 00:36:29,359
works there

1061
00:36:29,440 --> 00:36:31,599
and i don't necessarily see this as any

1062
00:36:31,599 --> 00:36:33,599
kind of security issue it says here's

1063
00:36:33,599 --> 00:36:36,000
web authent and

1064
00:36:36,000 --> 00:36:37,520
now i'm going to be authenticated and

1065
00:36:37,520 --> 00:36:39,200
i'm sitting at my dashboard

1066
00:36:39,200 --> 00:36:40,480
by having gone through there pretty cool

1067
00:36:40,480 --> 00:36:42,320
passwordless right exciting

1068
00:36:42,320 --> 00:36:44,160
um this this isn't a problem with

1069
00:36:44,160 --> 00:36:46,960
relying parties it's more you've got to

1070
00:36:46,960 --> 00:36:48,640
be trusting of the browser that you're

1071
00:36:48,640 --> 00:36:51,839
using if i own your platform i can start

1072
00:36:51,839 --> 00:36:54,320
doing things like this that maybe the

1073
00:36:54,320 --> 00:36:56,560
user wasn't even expecting right and one

1074
00:36:56,560 --> 00:36:58,000
of the potential attacks here would be

1075
00:36:58,000 --> 00:36:59,839
if i can get wedged into your browser in

1076
00:36:59,839 --> 00:37:01,040
this format

1077
00:37:01,040 --> 00:37:02,320
the user

1078
00:37:02,320 --> 00:37:04,880
thinks they're using their touch id all

1079
00:37:04,880 --> 00:37:06,800
right but i could have actually done the

1080
00:37:06,800 --> 00:37:09,599
entire operation regardless of what the

1081
00:37:09,599 --> 00:37:12,000
platform sends back to me however i

1082
00:37:12,000 --> 00:37:13,520
could let the platform be triggered

1083
00:37:13,520 --> 00:37:15,440
every time so the user would still

1084
00:37:15,440 --> 00:37:17,440
thinking they've got the security of

1085
00:37:17,440 --> 00:37:19,760
touch id face id whatever being involved

1086
00:37:19,760 --> 00:37:21,599
in this but in the meantime i've

1087
00:37:21,599 --> 00:37:23,359
exfiltrated the key

1088
00:37:23,359 --> 00:37:25,520
all right because i'm not as nice as

1089
00:37:25,520 --> 00:37:27,359
google and apple and i don't keep

1090
00:37:27,359 --> 00:37:29,520
credentials in the secure enclave uh

1091
00:37:29,520 --> 00:37:31,440
because that makes them harder right so

1092
00:37:31,440 --> 00:37:33,920
this is one of the ways that these

1093
00:37:33,920 --> 00:37:35,839
platform authenticators or fido keys in

1094
00:37:35,839 --> 00:37:37,839
general can lie if you don't trust the

1095
00:37:37,839 --> 00:37:38,640
key

1096
00:37:38,640 --> 00:37:39,839
a lot of this comes back to the

1097
00:37:39,839 --> 00:37:42,000
attestation statement right so the

1098
00:37:42,000 --> 00:37:44,400
attestation statement should prove that

1099
00:37:44,400 --> 00:37:47,200
your key is a good key all right it

1100
00:37:47,200 --> 00:37:49,520
should have a good connection between

1101
00:37:49,520 --> 00:37:51,359
this is from a known batch from a vendor

1102
00:37:51,359 --> 00:37:54,000
that i trust that does the right thing

1103
00:37:54,000 --> 00:37:56,240
however with the platforms themselves

1104
00:37:56,240 --> 00:37:57,920
safari and google not providing

1105
00:37:57,920 --> 00:38:01,040
attestation for very valid reasons but

1106
00:38:01,040 --> 00:38:02,800
it's caused most of the relying parties

1107
00:38:02,800 --> 00:38:04,640
to just bail on either bothering to do

1108
00:38:04,640 --> 00:38:07,440
the attestation checks and that allows

1109
00:38:07,440 --> 00:38:09,359
me to then use my own software-based key

1110
00:38:09,359 --> 00:38:11,520
for these things

1111
00:38:11,520 --> 00:38:13,760
all right

1112
00:38:13,760 --> 00:38:14,560
so

1113
00:38:14,560 --> 00:38:16,720
only trust keys with attestation

1114
00:38:16,720 --> 00:38:18,560
maybe

1115
00:38:18,560 --> 00:38:21,920
i don't know right on the one hand

1116
00:38:21,920 --> 00:38:23,770
fido is much more secure than passwords

1117
00:38:23,770 --> 00:38:25,599
[Laughter]

1118
00:38:25,599 --> 00:38:27,920
so i'd prefer that anybody use a fido

1119
00:38:27,920 --> 00:38:30,560
key use pki to do this authentication as

1120
00:38:30,560 --> 00:38:33,920
opposed to a password on the other hand

1121
00:38:33,920 --> 00:38:35,920
you've got some rough edges all right be

1122
00:38:35,920 --> 00:38:37,599
aware of that

1123
00:38:37,599 --> 00:38:40,240
speaking of attestation all right so

1124
00:38:40,240 --> 00:38:42,480
this is when you issue a navigator

1125
00:38:42,480 --> 00:38:44,480
credentials create command this is the

1126
00:38:44,480 --> 00:38:46,079
response that comes back from the

1127
00:38:46,079 --> 00:38:47,599
authenticator key

1128
00:38:47,599 --> 00:38:48,400
so

1129
00:38:48,400 --> 00:38:50,000
you get a couple of things here's the

1130
00:38:50,000 --> 00:38:53,760
public side of a p256 key pretty uh

1131
00:38:53,760 --> 00:38:55,680
pretty explanatory there there's the key

1132
00:38:55,680 --> 00:38:57,839
id so that's the key handle that

1133
00:38:57,839 --> 00:39:00,000
references the key on that authenticator

1134
00:39:00,000 --> 00:39:02,480
so that when you get requested to log in

1135
00:39:02,480 --> 00:39:04,640
again you do a signing operation that's

1136
00:39:04,640 --> 00:39:06,240
the key handle that's going to be used

1137
00:39:06,240 --> 00:39:07,200
all right

1138
00:39:07,200 --> 00:39:09,680
the relying party stores the public key

1139
00:39:09,680 --> 00:39:11,200
and it makes it a very easy way of

1140
00:39:11,200 --> 00:39:12,960
validating that you have the right

1141
00:39:12,960 --> 00:39:14,079
private key when you've done that

1142
00:39:14,079 --> 00:39:16,800
signature again basic pki there's a set

1143
00:39:16,800 --> 00:39:18,720
of flags in there the user present user

1144
00:39:18,720 --> 00:39:19,920
reserved

1145
00:39:19,920 --> 00:39:21,760
none of this is

1146
00:39:21,760 --> 00:39:23,520
really signed by the key that you've

1147
00:39:23,520 --> 00:39:26,000
created because the belief was if you

1148
00:39:26,000 --> 00:39:27,520
just created the key why do you need to

1149
00:39:27,520 --> 00:39:29,119
sign it because it's all coming back in

1150
00:39:29,119 --> 00:39:31,680
an atomic operation however if you are

1151
00:39:31,680 --> 00:39:33,599
involved in the middle you would be able

1152
00:39:33,599 --> 00:39:36,880
to actually change these flags all right

1153
00:39:36,880 --> 00:39:38,800
there's an attestation statement here up

1154
00:39:38,800 --> 00:39:39,920
at the top

1155
00:39:39,920 --> 00:39:42,400
and this is a signature that's run over

1156
00:39:42,400 --> 00:39:45,839
this chunk of auth data right and again

1157
00:39:45,839 --> 00:39:47,440
if you're on a hardware key that has an

1158
00:39:47,440 --> 00:39:48,640
attestation

1159
00:39:48,640 --> 00:39:50,320
key that's going to be a private key

1160
00:39:50,320 --> 00:39:51,839
that was burned into the factory that's

1161
00:39:51,839 --> 00:39:54,000
on up to hopefully more than a hundred

1162
00:39:54,000 --> 00:39:57,040
thousand uh authenticators so that way

1163
00:39:57,040 --> 00:39:58,720
you can validate that it is coming from

1164
00:39:58,720 --> 00:40:00,880
a particular piece of hardware uh if you

1165
00:40:00,880 --> 00:40:02,400
don't have that at the station because

1166
00:40:02,400 --> 00:40:04,640
you're in a browser and the you know you

1167
00:40:04,640 --> 00:40:06,560
don't have that access to that burned in

1168
00:40:06,560 --> 00:40:08,720
key uh then you can add in whatever

1169
00:40:08,720 --> 00:40:10,560
attestation you want and that would

1170
00:40:10,560 --> 00:40:12,400
allow you to manipulate other pieces

1171
00:40:12,400 --> 00:40:15,119
within this auth data sign it with your

1172
00:40:15,119 --> 00:40:17,119
own attestation statement and then send

1173
00:40:17,119 --> 00:40:19,760
it up or just remove the attestation

1174
00:40:19,760 --> 00:40:21,119
statement

1175
00:40:21,119 --> 00:40:23,040
since most relying parties don't care

1176
00:40:23,040 --> 00:40:25,040
whether attestation comes or not when

1177
00:40:25,040 --> 00:40:26,720
you're creating this key that does give

1178
00:40:26,720 --> 00:40:28,880
you some opportunities here

1179
00:40:28,880 --> 00:40:29,760
all right

1180
00:40:29,760 --> 00:40:32,000
uh another demo we've got if i go back

1181
00:40:32,000 --> 00:40:34,160
into oh i've got

1182
00:40:34,160 --> 00:40:36,880
safari developer preview where is that

1183
00:40:36,880 --> 00:40:38,720
here it is all right safari technology

1184
00:40:38,720 --> 00:40:41,119
preview and what i've got here um and i

1185
00:40:41,119 --> 00:40:42,160
need to

1186
00:40:42,160 --> 00:40:44,640
this is uh keynote hog in the cursor

1187
00:40:44,640 --> 00:40:46,160
again there we are all right let's make

1188
00:40:46,160 --> 00:40:49,119
this bigger so you all can see this

1189
00:40:49,119 --> 00:40:51,280
so i've got here a

1190
00:40:51,280 --> 00:40:52,880
just that same debug page in

1191
00:40:52,880 --> 00:40:55,119
webauthen.me and i'm going to ask for

1192
00:40:55,119 --> 00:40:57,280
direct attestation so i'm going to say

1193
00:40:57,280 --> 00:40:59,040
create me a key i'm going to use the

1194
00:40:59,040 --> 00:41:01,040
platform authenticator i've got platform

1195
00:41:01,040 --> 00:41:03,119
up here i'm going to say create me a key

1196
00:41:03,119 --> 00:41:05,520
and uh do an

1197
00:41:05,520 --> 00:41:08,000
attestation for it and if i go down here

1198
00:41:08,000 --> 00:41:09,680
and hit register i'm going to hit

1199
00:41:09,680 --> 00:41:12,400
continue i'm going to touch touch id and

1200
00:41:12,400 --> 00:41:14,240
i'm going to get the shake all right

1201
00:41:14,240 --> 00:41:16,400
because the apple platform authenticator

1202
00:41:16,400 --> 00:41:19,599
says i can't do direct attestation so

1203
00:41:19,599 --> 00:41:21,520
too bad so sad right

1204
00:41:21,520 --> 00:41:22,560
however

1205
00:41:22,560 --> 00:41:24,960
uh if i go to my preferences

1206
00:41:24,960 --> 00:41:28,240
i have a apple phyto key manager

1207
00:41:28,240 --> 00:41:30,240
uh it's a web extension i'm not sure

1208
00:41:30,240 --> 00:41:31,520
where it came from

1209
00:41:31,520 --> 00:41:32,560
i

1210
00:41:32,560 --> 00:41:34,480
must have installed something on my

1211
00:41:34,480 --> 00:41:37,119
device now granted this is not an easy

1212
00:41:37,119 --> 00:41:39,119
hurdle right getting a web extension

1213
00:41:39,119 --> 00:41:41,760
installed in safari is not

1214
00:41:41,760 --> 00:41:43,760
trivial but it's certainly not

1215
00:41:43,760 --> 00:41:46,000
impossible uh especially not when you

1216
00:41:46,000 --> 00:41:48,160
call it something very intriguing and

1217
00:41:48,160 --> 00:41:50,160
you put a logo on it that may match

1218
00:41:50,160 --> 00:41:52,319
somebody else's so i'm just going to hit

1219
00:41:52,319 --> 00:41:54,480
this and i'm going to enable it and now

1220
00:41:54,480 --> 00:41:55,920
i'm going to go back into here i'm going

1221
00:41:55,920 --> 00:41:57,760
to open up the console actually you

1222
00:41:57,760 --> 00:41:59,680
don't need to see the console we'll do

1223
00:41:59,680 --> 00:42:01,599
this we're in and then i just need to

1224
00:42:01,599 --> 00:42:04,079
reload the page so it makes sure that i

1225
00:42:04,079 --> 00:42:06,960
load that web extension and i can go

1226
00:42:06,960 --> 00:42:08,960
back here to add to station and i can

1227
00:42:08,960 --> 00:42:10,400
say direct

1228
00:42:10,400 --> 00:42:13,200
and uh let's make it a cross platform i

1229
00:42:13,200 --> 00:42:14,960
think i'm already covering that and if i

1230
00:42:14,960 --> 00:42:17,040
hit register again it says do you want

1231
00:42:17,040 --> 00:42:19,119
to save a pass key so i can hit continue

1232
00:42:19,119 --> 00:42:22,160
i'm prompted to do my touch id and now i

1233
00:42:22,160 --> 00:42:24,160
actually have a key that was created

1234
00:42:24,160 --> 00:42:26,800
however what i've done is i've added in

1235
00:42:26,800 --> 00:42:30,240
an attestation object on the way back

1236
00:42:30,240 --> 00:42:32,240
from the platform authenticator back

1237
00:42:32,240 --> 00:42:35,040
into the web page

1238
00:42:39,359 --> 00:42:42,720
another hush silence wow that's exciting

1239
00:42:42,720 --> 00:42:43,680
all right

1240
00:42:43,680 --> 00:42:45,520
so i think there's some fun things that

1241
00:42:45,520 --> 00:42:47,520
can be done here uh if you're following

1242
00:42:47,520 --> 00:42:49,680
along at home this signature is garbage

1243
00:42:49,680 --> 00:42:52,160
i don't know how to sign things in json

1244
00:42:52,160 --> 00:42:54,240
uh so i've just put in a bunch of random

1245
00:42:54,240 --> 00:42:58,160
bits but it does fit the actual uh

1246
00:42:58,160 --> 00:43:00,560
formatting uh but if the relying party

1247
00:43:00,560 --> 00:43:02,640
web authentic it's a great site but it

1248
00:43:02,640 --> 00:43:04,880
doesn't actually validate the

1249
00:43:04,880 --> 00:43:06,800
information that it's given right

1250
00:43:06,800 --> 00:43:08,400
so if this was a real relying party

1251
00:43:08,400 --> 00:43:09,839
they'd find that this signature didn't

1252
00:43:09,839 --> 00:43:11,599
match however

1253
00:43:11,599 --> 00:43:13,440
there's no reason to believe that if i

1254
00:43:13,440 --> 00:43:15,520
knew more about javascript i'd be able

1255
00:43:15,520 --> 00:43:18,000
to do that signature and finish that up

1256
00:43:18,000 --> 00:43:19,760
right so that's a place to go into there

1257
00:43:19,760 --> 00:43:21,520
and if i download this key i think i

1258
00:43:21,520 --> 00:43:22,960
grabbed us

1259
00:43:22,960 --> 00:43:24,400
i think i just took an authent an

1260
00:43:24,400 --> 00:43:26,960
attestation statement from yubikey uh

1261
00:43:26,960 --> 00:43:28,720
and i threw it in here

1262
00:43:28,720 --> 00:43:30,319
so it would be a valid certificate it

1263
00:43:30,319 --> 00:43:32,640
just wouldn't be a valid signature

1264
00:43:32,640 --> 00:43:33,920
so all kinds of fun that you can have

1265
00:43:33,920 --> 00:43:35,440
there so that's some of the things that

1266
00:43:35,440 --> 00:43:37,359
you can do with these web extensions as

1267
00:43:37,359 --> 00:43:38,880
you go through there

1268
00:43:38,880 --> 00:43:40,400
so how do you protect yourself against

1269
00:43:40,400 --> 00:43:42,160
this

1270
00:43:42,160 --> 00:43:44,079
unfortunately it's complicated right if

1271
00:43:44,079 --> 00:43:46,079
you go to octa

1272
00:43:46,079 --> 00:43:48,720
and you enable fido web authn

1273
00:43:48,720 --> 00:43:50,800
you don't have an option of trusting

1274
00:43:50,800 --> 00:43:53,280
just one set of attestation

1275
00:43:53,280 --> 00:43:55,839
certificates or not

1276
00:43:55,839 --> 00:43:57,200
there's goods and bad for that good

1277
00:43:57,200 --> 00:43:59,119
thing is it becomes much more usable for

1278
00:43:59,119 --> 00:44:01,040
more people and again

1279
00:44:01,040 --> 00:44:03,440
fido authentication is more secure than

1280
00:44:03,440 --> 00:44:06,079
passwords in every way all right however

1281
00:44:06,079 --> 00:44:07,280
as a

1282
00:44:07,280 --> 00:44:09,200
enterprise as somebody who wants to be a

1283
00:44:09,200 --> 00:44:10,960
little more controlling over what keys

1284
00:44:10,960 --> 00:44:13,520
users may use you don't have that option

1285
00:44:13,520 --> 00:44:15,760
unless you think i'm picking on octa

1286
00:44:15,760 --> 00:44:18,000
one login same thing this is the options

1287
00:44:18,000 --> 00:44:19,599
that you have in one login for

1288
00:44:19,599 --> 00:44:22,079
determining what fido keys can be used

1289
00:44:22,079 --> 00:44:24,319
for your organization you get to pick

1290
00:44:24,319 --> 00:44:25,760
the icon

1291
00:44:25,760 --> 00:44:27,839
and then call it something

1292
00:44:27,839 --> 00:44:29,440
you have that if you go into azure

1293
00:44:29,440 --> 00:44:31,680
azure's got a little bit more here

1294
00:44:31,680 --> 00:44:33,520
and in fact you can enforce ad to

1295
00:44:33,520 --> 00:44:35,440
station and you can actually enforce key

1296
00:44:35,440 --> 00:44:37,119
restrictions

1297
00:44:37,119 --> 00:44:39,040
so you can go in there and actually set

1298
00:44:39,040 --> 00:44:41,200
specific i think when you enforce

1299
00:44:41,200 --> 00:44:42,800
attestation

1300
00:44:42,800 --> 00:44:44,720
it goes back fido alliance keeps a

1301
00:44:44,720 --> 00:44:47,680
metadata server of all the validated

1302
00:44:47,680 --> 00:44:49,200
authorized

1303
00:44:49,200 --> 00:44:51,440
fido devices out there and attestation

1304
00:44:51,440 --> 00:44:53,440
statements and azure will go back to

1305
00:44:53,440 --> 00:44:55,599
that metadata server and require that

1306
00:44:55,599 --> 00:44:58,000
your key actually have one of those

1307
00:44:58,000 --> 00:45:00,079
validated statements or validated uh

1308
00:45:00,079 --> 00:45:02,000
certificate chains in there and so

1309
00:45:02,000 --> 00:45:03,359
that's what happens when you turn on

1310
00:45:03,359 --> 00:45:05,599
force attestation of course at that

1311
00:45:05,599 --> 00:45:09,040
point nobody can use safari or google or

1312
00:45:09,040 --> 00:45:10,800
chrome excuse me for the built-in

1313
00:45:10,800 --> 00:45:12,720
platform authenticators so there is a

1314
00:45:12,720 --> 00:45:14,640
trade-off as you go into that

1315
00:45:14,640 --> 00:45:17,359
azure also allows you to enforce

1316
00:45:17,359 --> 00:45:18,560
key restrictions

1317
00:45:18,560 --> 00:45:19,760
and when you enforce those key

1318
00:45:19,760 --> 00:45:21,280
restrictions you can actually limit it

1319
00:45:21,280 --> 00:45:23,520
to an a grid so actually a little more

1320
00:45:23,520 --> 00:45:26,000
specific to a device type all right and

1321
00:45:26,000 --> 00:45:27,520
so there's some cool things to do but

1322
00:45:27,520 --> 00:45:29,200
there's some pretty big trade-offs and

1323
00:45:29,200 --> 00:45:30,800
i'm not familiar with that many places

1324
00:45:30,800 --> 00:45:32,079
that have actually enabled a lot of

1325
00:45:32,079 --> 00:45:32,960
these

1326
00:45:32,960 --> 00:45:35,119
although i think the attestation is on

1327
00:45:35,119 --> 00:45:38,240
by default but if you turn that off

1328
00:45:38,240 --> 00:45:39,760
then you've got some more flexibility

1329
00:45:39,760 --> 00:45:42,800
there of course so again trade-offs

1330
00:45:42,800 --> 00:45:45,040
may be good maybe bad hard to say

1331
00:45:45,040 --> 00:45:47,839
always require attestation

1332
00:45:47,839 --> 00:45:49,119
i don't know

1333
00:45:49,119 --> 00:45:51,520
um i don't i wouldn't classify this as a

1334
00:45:51,520 --> 00:45:54,000
vulnerability i would classify this as

1335
00:45:54,000 --> 00:45:55,760
you need to be aware of this for your

1336
00:45:55,760 --> 00:45:57,760
organization and decide what you want to

1337
00:45:57,760 --> 00:46:01,119
do all right again fido keys are more

1338
00:46:01,119 --> 00:46:02,800
secure

1339
00:46:02,800 --> 00:46:05,440
so that's fine uh if you're not so nice

1340
00:46:05,440 --> 00:46:06,960
if i had to come up with how i was going

1341
00:46:06,960 --> 00:46:10,160
to attack this uh if i could get somehow

1342
00:46:10,160 --> 00:46:11,920
in your browser and i could get that web

1343
00:46:11,920 --> 00:46:13,680
extension in there i would immediately

1344
00:46:13,680 --> 00:46:16,240
stop your keys from working

1345
00:46:16,240 --> 00:46:18,800
the user would probably then go

1346
00:46:18,800 --> 00:46:20,400
go through some sort of key

1347
00:46:20,400 --> 00:46:23,440
re-enrollment uh ceremony at which point

1348
00:46:23,440 --> 00:46:25,440
i would take over and i would have that

1349
00:46:25,440 --> 00:46:27,440
newly registered key

1350
00:46:27,440 --> 00:46:29,040
i would then be able to use that from

1351
00:46:29,040 --> 00:46:30,400
then on i would then be able to

1352
00:46:30,400 --> 00:46:33,359
exfiltrate that key and ideally profit

1353
00:46:33,359 --> 00:46:34,960
or do something else

1354
00:46:34,960 --> 00:46:36,800
i don't know if there's a great

1355
00:46:36,800 --> 00:46:38,880
way of preventing this unless you go

1356
00:46:38,880 --> 00:46:40,960
back to attestation which is where you

1357
00:46:40,960 --> 00:46:43,359
have other problems and maybe infringe

1358
00:46:43,359 --> 00:46:45,920
upon usability that users have there uh

1359
00:46:45,920 --> 00:46:48,079
so the moral of the story

1360
00:46:48,079 --> 00:46:50,000
don't blindly trust a browser if you're

1361
00:46:50,000 --> 00:46:51,760
at this conference and you're blindly

1362
00:46:51,760 --> 00:46:54,240
trusting the browser you're probably had

1363
00:46:54,240 --> 00:46:58,240
a rude awakening or otherwise right

1364
00:46:58,240 --> 00:46:59,839
vendors try as best they can but they

1365
00:46:59,839 --> 00:47:01,359
don't always get it right so in this

1366
00:47:01,359 --> 00:47:03,040
particular case be a little more aware

1367
00:47:03,040 --> 00:47:05,040
of what your attack

1368
00:47:05,040 --> 00:47:06,640
surface is here

1369
00:47:06,640 --> 00:47:08,160
attestation can keep out some of the

1370
00:47:08,160 --> 00:47:10,000
riff raff but it'll certainly increase

1371
00:47:10,000 --> 00:47:11,520
complexity

1372
00:47:11,520 --> 00:47:13,200
and you may or may not want that for

1373
00:47:13,200 --> 00:47:14,480
your environment

1374
00:47:14,480 --> 00:47:15,520
it may

1375
00:47:15,520 --> 00:47:17,119
reduce the number of people that can use

1376
00:47:17,119 --> 00:47:19,440
fido which would be in general a bad

1377
00:47:19,440 --> 00:47:20,400
thing

1378
00:47:20,400 --> 00:47:22,480
as you would then be leaving them with

1379
00:47:22,480 --> 00:47:24,000
passwords or maybe other things that

1380
00:47:24,000 --> 00:47:25,680
would be a much worse form of

1381
00:47:25,680 --> 00:47:27,040
authentication

1382
00:47:27,040 --> 00:47:28,240
and

1383
00:47:28,240 --> 00:47:29,920
fido is more secure in every way than

1384
00:47:29,920 --> 00:47:31,839
using a password all right so i just

1385
00:47:31,839 --> 00:47:33,680
want to leave that with you

1386
00:47:33,680 --> 00:47:36,720
if you're intrigued love to chat

1387
00:47:36,720 --> 00:47:38,240
you know interested if people are

1388
00:47:38,240 --> 00:47:40,079
interested in this as a tool kit and

1389
00:47:40,079 --> 00:47:41,920
what else can be done here i think this

1390
00:47:41,920 --> 00:47:44,800
is a poorly explored corner

1391
00:47:44,800 --> 00:47:47,280
of the world um there's a lot of you

1392
00:47:47,280 --> 00:47:49,040
know quite a few vendors now offering

1393
00:47:49,040 --> 00:47:51,119
hardware keys which i think you know

1394
00:47:51,119 --> 00:47:52,960
being hardware are probably in pretty

1395
00:47:52,960 --> 00:47:54,720
good shape but now the platform

1396
00:47:54,720 --> 00:47:56,319
authenticators and being done inside the

1397
00:47:56,319 --> 00:47:57,920
browser is getting a little more

1398
00:47:57,920 --> 00:48:00,400
interesting here and with that

1399
00:48:00,400 --> 00:48:02,800
thanks

1400
00:48:04,079 --> 00:48:05,040
and

1401
00:48:05,040 --> 00:48:06,559
happy to take any questions because i

1402
00:48:06,559 --> 00:48:08,960
think we're we've got time right

1403
00:48:08,960 --> 00:48:09,680
so

1404
00:48:09,680 --> 00:48:12,960
everything you demonstrated

1405
00:48:17,760 --> 00:48:19,680
unless well as soon as i'm in the

1406
00:48:19,680 --> 00:48:22,559
browser you don't know what you're using

1407
00:48:22,559 --> 00:48:24,160
right you might think you're using your

1408
00:48:24,160 --> 00:48:26,960
yubikey but if i've taken over those

1409
00:48:26,960 --> 00:48:30,800
credentials navigate credentials create

1410
00:48:33,440 --> 00:48:35,520
correct or i'd block the key from being

1411
00:48:35,520 --> 00:48:36,400
used

1412
00:48:36,400 --> 00:48:38,559
as a general user you would

1413
00:48:38,559 --> 00:48:40,400
not want to call the help desk so you

1414
00:48:40,400 --> 00:48:43,520
would re-enroll and uh then

1415
00:48:43,520 --> 00:48:45,040
then good times

1416
00:48:45,040 --> 00:48:46,000
right

1417
00:48:46,000 --> 00:48:49,240
other questions

1418
00:48:52,480 --> 00:48:54,000
so the question is when you're in the

1419
00:48:54,000 --> 00:48:56,400
browser can you proxy the data like off

1420
00:48:56,400 --> 00:48:58,160
the box

1421
00:48:58,160 --> 00:48:59,520
sure

1422
00:48:59,520 --> 00:49:01,440
i mean if your web extension has the

1423
00:49:01,440 --> 00:49:03,359
abilities to do that right i mean in the

1424
00:49:03,359 --> 00:49:06,720
manifest you have to enable certain uh

1425
00:49:06,720 --> 00:49:09,119
abilities to go in and out and that's

1426
00:49:09,119 --> 00:49:10,800
where my javascript was failing me

1427
00:49:10,800 --> 00:49:13,200
pretty good uh but yes i i don't think

1428
00:49:13,200 --> 00:49:15,200
there's any reason why you couldn't and

1429
00:49:15,200 --> 00:49:17,200
i think there's actually a product i

1430
00:49:17,200 --> 00:49:19,920
think there's some out there cloud-based

1431
00:49:19,920 --> 00:49:22,319
um phytokeys

1432
00:49:22,319 --> 00:49:24,160
where it's a good thing right keep your

1433
00:49:24,160 --> 00:49:27,760
p256 keys in an hsm that's fantastic

1434
00:49:27,760 --> 00:49:30,720
and this would be one way of doing that

1435
00:49:30,720 --> 00:49:33,280
other questions

1436
00:49:33,280 --> 00:49:35,970
thank you very much enjoy lunch

1437
00:49:35,970 --> 00:49:41,709
[Applause]

