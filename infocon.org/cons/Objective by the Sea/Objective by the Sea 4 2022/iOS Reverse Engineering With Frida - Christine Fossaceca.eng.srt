1
00:00:04,160 --> 00:00:05,680
produce christine who's going to be

2
00:00:05,680 --> 00:00:06,879
talking about

3
00:00:06,879 --> 00:00:08,720
reverse engineering on ios this is going

4
00:00:08,720 --> 00:00:10,960
to be an awesome talk because

5
00:00:10,960 --> 00:00:12,799
for a lot of us myself included first

6
00:00:12,799 --> 00:00:14,559
engineering on ios seems a little

7
00:00:14,559 --> 00:00:16,160
daunting but i think christine's going

8
00:00:16,160 --> 00:00:19,119
to mis dispel that and give us the tools

9
00:00:19,119 --> 00:00:21,279
to help us become proficient ios

10
00:00:21,279 --> 00:00:23,359
reverser so hand it off to christine

11
00:00:23,359 --> 00:00:26,080
round of applause

12
00:00:26,160 --> 00:00:28,880
thank you thank you for having me

13
00:00:28,880 --> 00:00:31,760
so my name is christine thoseica and my

14
00:00:31,760 --> 00:00:33,840
talk is reverse engineering ios with

15
00:00:33,840 --> 00:00:35,840
frida

16
00:00:35,840 --> 00:00:38,000
so a little bit about me

17
00:00:38,000 --> 00:00:39,920
i'm a senior reverse engineer at the

18
00:00:39,920 --> 00:00:42,320
mitre corporation i specialize in mobile

19
00:00:42,320 --> 00:00:44,960
reverse engineering specifically ios i'm

20
00:00:44,960 --> 00:00:46,879
considered an ios reverse engineering

21
00:00:46,879 --> 00:00:49,360
subject matter expert and i do really

22
00:00:49,360 --> 00:00:51,520
enjoy reverse engineering ios

23
00:00:51,520 --> 00:00:53,120
um

24
00:00:53,120 --> 00:00:54,800
in addition to that i'm also a

25
00:00:54,800 --> 00:00:56,719
researcher part of the furious mac

26
00:00:56,719 --> 00:00:58,879
research team which is a collaboration

27
00:00:58,879 --> 00:01:00,640
between mitre and the united states

28
00:01:00,640 --> 00:01:02,399
naval academy

29
00:01:02,399 --> 00:01:05,039
photo op

30
00:01:05,119 --> 00:01:07,520
and so our research team focuses on

31
00:01:07,520 --> 00:01:09,119
mentoring midshipmen and teaching them

32
00:01:09,119 --> 00:01:10,640
about different security and privacy

33
00:01:10,640 --> 00:01:13,200
topics and also publishing so i've had

34
00:01:13,200 --> 00:01:15,360
the opportunity to publish a paper

35
00:01:15,360 --> 00:01:16,880
with some of the professors at the naval

36
00:01:16,880 --> 00:01:18,080
academy

37
00:01:18,080 --> 00:01:20,080
we recently just got a paper accepted

38
00:01:20,080 --> 00:01:21,280
into

39
00:01:21,280 --> 00:01:23,280
the workshop on privacy in the

40
00:01:23,280 --> 00:01:25,520
electronic society

41
00:01:25,520 --> 00:01:27,439
and our paper is on circumventing

42
00:01:27,439 --> 00:01:29,840
apple's air tag anti-tracking framework

43
00:01:29,840 --> 00:01:31,759
so you heard ava talk about it in her

44
00:01:31,759 --> 00:01:34,400
keynote you can learn even more about it

45
00:01:34,400 --> 00:01:36,880
in november 2021

46
00:01:36,880 --> 00:01:38,799
i'm also a dog mom and i thought i

47
00:01:38,799 --> 00:01:40,400
needed to introduce honey because she'll

48
00:01:40,400 --> 00:01:42,320
be making an appearance in some of my

49
00:01:42,320 --> 00:01:44,159
later slides unfortunately she couldn't

50
00:01:44,159 --> 00:01:45,200
be here

51
00:01:45,200 --> 00:01:48,240
in hawaii in person

52
00:01:48,240 --> 00:01:51,040
i'm also an advocate for women in cyber

53
00:01:51,040 --> 00:01:53,200
i'm part of the

54
00:01:53,200 --> 00:01:55,040
black cuddy um

55
00:01:55,040 --> 00:01:56,560
discord group which was started by

56
00:01:56,560 --> 00:01:58,560
marion marsh alec um pink flawed on

57
00:01:58,560 --> 00:02:00,960
twitter um i've also presented a lot of

58
00:02:00,960 --> 00:02:03,360
introvert intro to reverse engineering

59
00:02:03,360 --> 00:02:05,520
topics um at least and at the diana

60
00:02:05,520 --> 00:02:08,160
initiative and i'm also a co-host at her

61
00:02:08,160 --> 00:02:10,318
hacks podcast which is a podcast by

62
00:02:10,318 --> 00:02:12,640
women for everyone where we talk about

63
00:02:12,640 --> 00:02:13,760
different

64
00:02:13,760 --> 00:02:15,680
experiences that we have as women in

65
00:02:15,680 --> 00:02:17,440
cyber as well as talk about technical

66
00:02:17,440 --> 00:02:21,440
topics like how to stay private online

67
00:02:21,599 --> 00:02:24,080
all right so what you came here for

68
00:02:24,080 --> 00:02:25,760
i'm going to teach you how to reverse

69
00:02:25,760 --> 00:02:28,400
engineer ios using frida

70
00:02:28,400 --> 00:02:29,680
but first i want to tell you a little

71
00:02:29,680 --> 00:02:31,120
bit about frida give you a little bit of

72
00:02:31,120 --> 00:02:33,040
history then i'll tell you how you can

73
00:02:33,040 --> 00:02:34,319
set it up

74
00:02:34,319 --> 00:02:35,760
um and then i want to walk you through

75
00:02:35,760 --> 00:02:37,680
my methodologies this is kind of like

76
00:02:37,680 --> 00:02:40,000
what i do i have three main uses of

77
00:02:40,000 --> 00:02:42,879
frito three main methodologies

78
00:02:42,879 --> 00:02:45,200
on how um i reverse engineer depending

79
00:02:45,200 --> 00:02:46,800
on what i'm doing

80
00:02:46,800 --> 00:02:48,160
um so i want to walk you through those

81
00:02:48,160 --> 00:02:50,080
so that you can do them yourself and

82
00:02:50,080 --> 00:02:51,680
then i'm going to tell you some hot tool

83
00:02:51,680 --> 00:02:53,200
tips which are just things i've picked

84
00:02:53,200 --> 00:02:55,040
up from some of my peers in the industry

85
00:02:55,040 --> 00:02:57,040
who've either also given a frida

86
00:02:57,040 --> 00:02:59,120
presentation or i've asked them a

87
00:02:59,120 --> 00:03:00,560
question and they told me like this is

88
00:03:00,560 --> 00:03:02,480
how you do that um so i would like to

89
00:03:02,480 --> 00:03:04,560
share that with you and then if we have

90
00:03:04,560 --> 00:03:08,720
time i'll have some questions at the end

91
00:03:09,680 --> 00:03:11,200
all right

92
00:03:11,200 --> 00:03:13,840
so frida this is a very brief history

93
00:03:13,840 --> 00:03:16,800
um so it started oh it was created by

94
00:03:16,800 --> 00:03:19,120
olandre ravnus who is a researcher at

95
00:03:19,120 --> 00:03:20,640
now secure

96
00:03:20,640 --> 00:03:22,480
and i you probably noticed that my last

97
00:03:22,480 --> 00:03:23,680
name is kind of hard to pronounce and

98
00:03:23,680 --> 00:03:25,920
his name i was very confused so he very

99
00:03:25,920 --> 00:03:27,920
kindly sent me a voice memo on how to

100
00:03:27,920 --> 00:03:29,120
pronounce it

101
00:03:29,120 --> 00:03:31,360
he also is really nice because he always

102
00:03:31,360 --> 00:03:33,280
answers all of my frida questions

103
00:03:33,280 --> 00:03:36,400
whenever i send him twitter dms

104
00:03:36,400 --> 00:03:39,599
but he presented on frida in 2015 and he

105
00:03:39,599 --> 00:03:42,080
said think of it as a library for

106
00:03:42,080 --> 00:03:43,920
building debuggers

107
00:03:43,920 --> 00:03:45,440
which is interesting because you know

108
00:03:45,440 --> 00:03:46,879
you might want to debug something so

109
00:03:46,879 --> 00:03:48,560
you're like okay this is a tool so i

110
00:03:48,560 --> 00:03:50,239
don't have to start from scratch and i

111
00:03:50,239 --> 00:03:51,280
have some

112
00:03:51,280 --> 00:03:54,959
foundation um to build blocks on top of

113
00:03:54,959 --> 00:03:56,799
which is interesting

114
00:03:56,799 --> 00:03:58,080
and then if you go on their website

115
00:03:58,080 --> 00:04:00,239
you'll see that frida is a dynamic

116
00:04:00,239 --> 00:04:02,560
instrumentation toolkit and you're like

117
00:04:02,560 --> 00:04:04,480
okay

118
00:04:04,480 --> 00:04:06,400
so what does that mean

119
00:04:06,400 --> 00:04:07,280
um

120
00:04:07,280 --> 00:04:08,799
let's dive into that a little bit um

121
00:04:08,799 --> 00:04:10,159
some of you might know what that means

122
00:04:10,159 --> 00:04:12,400
some of you may not so when i first hear

123
00:04:12,400 --> 00:04:14,720
dynamic i think of it in the context of

124
00:04:14,720 --> 00:04:17,519
static analysis and dynamic analysis

125
00:04:17,519 --> 00:04:19,839
like in reverse engineering so static is

126
00:04:19,839 --> 00:04:22,240
code that is not running and dynamic is

127
00:04:22,240 --> 00:04:24,160
code that is running so as a dynamic

128
00:04:24,160 --> 00:04:26,240
analysis toolkit frida is running so

129
00:04:26,240 --> 00:04:28,960
you're using it on a running process

130
00:04:28,960 --> 00:04:30,960
instrumentation is also a weird word

131
00:04:30,960 --> 00:04:32,479
when i first started i was like what

132
00:04:32,479 --> 00:04:34,400
does that mean um and that just

133
00:04:34,400 --> 00:04:36,800
describes how you're handling the binary

134
00:04:36,800 --> 00:04:37,919
itself

135
00:04:37,919 --> 00:04:40,000
so when normally when you're writing c

136
00:04:40,000 --> 00:04:41,600
or if you're writing python you can

137
00:04:41,600 --> 00:04:44,080
write your own debug statements you can

138
00:04:44,080 --> 00:04:46,160
write information before a function is

139
00:04:46,160 --> 00:04:48,560
called after a function is called during

140
00:04:48,560 --> 00:04:50,560
being called but you can't do that on a

141
00:04:50,560 --> 00:04:52,639
black box binary because you don't have

142
00:04:52,639 --> 00:04:55,040
the source code so frida can be used to

143
00:04:55,040 --> 00:04:57,120
inject code into a process using

144
00:04:57,120 --> 00:05:00,000
javascript so dynamic instrumentation is

145
00:05:00,000 --> 00:05:02,479
literally taking a running process and

146
00:05:02,479 --> 00:05:04,639
shoving code either before the function

147
00:05:04,639 --> 00:05:06,720
into the function after the function you

148
00:05:06,720 --> 00:05:08,639
can modify the parameters you can modify

149
00:05:08,639 --> 00:05:10,720
the return value you can modify any of

150
00:05:10,720 --> 00:05:12,479
the computational

151
00:05:12,479 --> 00:05:14,160
methods that are happening

152
00:05:14,160 --> 00:05:17,120
during execution so it's pretty powerful

153
00:05:17,120 --> 00:05:18,560
and it's useful especially if you're

154
00:05:18,560 --> 00:05:20,240
doing native process debugging which is

155
00:05:20,240 --> 00:05:21,759
an example where you would never have

156
00:05:21,759 --> 00:05:24,080
source code unless you literally work at

157
00:05:24,080 --> 00:05:27,758
apple like some people in the audience

158
00:05:29,120 --> 00:05:31,520
so in general freya also

159
00:05:31,520 --> 00:05:32,240
is

160
00:05:32,240 --> 00:05:33,600
really great because it's actually

161
00:05:33,600 --> 00:05:35,759
available on almost every platform you

162
00:05:35,759 --> 00:05:39,120
can use it on mac os on pc on linux

163
00:05:39,120 --> 00:05:41,680
your host machine can be the target or

164
00:05:41,680 --> 00:05:43,280
you can have a remote device like

165
00:05:43,280 --> 00:05:45,199
android or ios

166
00:05:45,199 --> 00:05:47,360
and you can also use it to debug node.js

167
00:05:47,360 --> 00:05:48,880
which makes sense because you're using

168
00:05:48,880 --> 00:05:51,520
javascript injection so of course you

169
00:05:51,520 --> 00:05:53,840
can use javascript to debug itself

170
00:05:53,840 --> 00:05:56,080
um and it can be used for application

171
00:05:56,080 --> 00:05:58,880
reversing or native process reversing

172
00:05:58,880 --> 00:06:01,120
so my presentation is going to be

173
00:06:01,120 --> 00:06:03,520
specifically on native process reversing

174
00:06:03,520 --> 00:06:06,240
but there's a really great tutorial for

175
00:06:06,240 --> 00:06:08,319
reverse engineering ios apps which was

176
00:06:08,319 --> 00:06:10,639
given by orr begum of celebrate in his

177
00:06:10,639 --> 00:06:14,240
dfrws 2020 workshop and he goes into how

178
00:06:14,240 --> 00:06:16,319
to reverse engineer instagram so that's

179
00:06:16,319 --> 00:06:17,440
really awesome if you want to look at

180
00:06:17,440 --> 00:06:21,120
application specific debugging

181
00:06:21,120 --> 00:06:22,880
all right so we're just gonna

182
00:06:22,880 --> 00:06:25,759
jump into the demo um

183
00:06:25,759 --> 00:06:28,639
so if you're re-watching this talk

184
00:06:28,639 --> 00:06:30,080
if you want to follow along or if you

185
00:06:30,080 --> 00:06:32,240
want to do it later you can use exactly

186
00:06:32,240 --> 00:06:34,080
what i'm doing or you can do your own

187
00:06:34,080 --> 00:06:35,919
thing you just need an iphone and a

188
00:06:35,919 --> 00:06:38,160
computer i'm specifically using an

189
00:06:38,160 --> 00:06:41,919
iphone 7 it's on ios 14.7.1 and you'll

190
00:06:41,919 --> 00:06:45,039
see later why i haven't updated

191
00:06:45,039 --> 00:06:47,120
i'm using the check green jailbreak and

192
00:06:47,120 --> 00:06:50,479
i'm using frida 15.

193
00:06:50,800 --> 00:06:52,720
so prepping your computer

194
00:06:52,720 --> 00:06:54,639
it's really easy all you have to do is

195
00:06:54,639 --> 00:06:56,560
pip install free to tools and then

196
00:06:56,560 --> 00:06:57,919
you're done

197
00:06:57,919 --> 00:07:00,080
free to 15 was recently released and it

198
00:07:00,080 --> 00:07:02,479
was built with python 3.9 and i

199
00:07:02,479 --> 00:07:03,759
recommend having the latest version of

200
00:07:03,759 --> 00:07:05,840
python your mileage will vary if you

201
00:07:05,840 --> 00:07:09,280
don't so 3.9 free to 15.

202
00:07:09,280 --> 00:07:11,840
also you probably want to have the same

203
00:07:11,840 --> 00:07:14,160
version of frida on your phone as on

204
00:07:14,160 --> 00:07:16,160
your computer because if you don't have

205
00:07:16,160 --> 00:07:18,560
the same version there could be

206
00:07:18,560 --> 00:07:21,199
like issues with how it communicates so

207
00:07:21,199 --> 00:07:22,400
make sure that the one that you put on

208
00:07:22,400 --> 00:07:24,080
your device is the same and i can show

209
00:07:24,080 --> 00:07:27,199
you how to check that as well

210
00:07:27,599 --> 00:07:29,199
so freedom on your host machine is

211
00:07:29,199 --> 00:07:31,440
relatively easy freedom on your device

212
00:07:31,440 --> 00:07:33,360
not as easy

213
00:07:33,360 --> 00:07:35,199
so if you have an iphone that's an

214
00:07:35,199 --> 00:07:37,599
iphone 10 or earlier you can just use

215
00:07:37,599 --> 00:07:38,960
check rain

216
00:07:38,960 --> 00:07:41,120
i think before check grant came out

217
00:07:41,120 --> 00:07:42,639
jailbreaking could have been like an

218
00:07:42,639 --> 00:07:44,400
entire conference talk

219
00:07:44,400 --> 00:07:46,720
but now like all of that stuff is pretty

220
00:07:46,720 --> 00:07:49,199
deprecated um the old tools that people

221
00:07:49,199 --> 00:07:52,080
used to work like city impactor are like

222
00:07:52,080 --> 00:07:53,440
they don't even work anymore because all

223
00:07:53,440 --> 00:07:55,280
the stuff has changed so

224
00:07:55,280 --> 00:07:57,840
check grant has really changed the game

225
00:07:57,840 --> 00:07:59,680
and if you haven't heard of it it's a

226
00:07:59,680 --> 00:08:01,840
jailbreak that's built on the checkmate

227
00:08:01,840 --> 00:08:05,039
exploit and so it only works on

228
00:08:05,039 --> 00:08:07,360
the a11 chipset and earlier because it's

229
00:08:07,360 --> 00:08:09,680
an exploit in apple's application

230
00:08:09,680 --> 00:08:11,680
processor

231
00:08:11,680 --> 00:08:13,919
so it will never work on anything like

232
00:08:13,919 --> 00:08:16,319
a12 bionic or later so that's why like

233
00:08:16,319 --> 00:08:19,520
xs xr you can't use check green

234
00:08:19,520 --> 00:08:21,599
but if you do have like an iphone 11 and

235
00:08:21,599 --> 00:08:22,960
you're like well how am i supposed to do

236
00:08:22,960 --> 00:08:24,400
this demo

237
00:08:24,400 --> 00:08:26,000
you can actually

238
00:08:26,000 --> 00:08:28,080
use a different jailbreak

239
00:08:28,080 --> 00:08:29,919
so alt store is a great tool that you

240
00:08:29,919 --> 00:08:32,559
can use to side load

241
00:08:32,559 --> 00:08:34,320
and you have to pair it with a specific

242
00:08:34,320 --> 00:08:35,440
jailbreak

243
00:08:35,440 --> 00:08:37,279
so there's tons out there i think

244
00:08:37,279 --> 00:08:38,958
uncover is one of the most reliable

245
00:08:38,958 --> 00:08:40,880
jailbreaks that's the one i use for

246
00:08:40,880 --> 00:08:42,958
later devices

247
00:08:42,958 --> 00:08:44,800
one main difference between check green

248
00:08:44,800 --> 00:08:47,680
and uncover is check green will work

249
00:08:47,680 --> 00:08:51,040
even on newer versions of ios

250
00:08:51,040 --> 00:08:52,959
they usually release

251
00:08:52,959 --> 00:08:54,480
beta releases

252
00:08:54,480 --> 00:08:56,720
and they say that it's not supported but

253
00:08:56,720 --> 00:08:58,320
then they actually allow you to modify

254
00:08:58,320 --> 00:08:59,680
some parameters

255
00:08:59,680 --> 00:09:01,600
and say yeah i'm like willing to take

256
00:09:01,600 --> 00:09:03,680
the risk to break my phone and just run

257
00:09:03,680 --> 00:09:05,920
it and like nine times out of ten check

258
00:09:05,920 --> 00:09:09,200
green will work even on 147.1 even on 14

259
00:09:09,200 --> 00:09:11,279
8 which i just tried

260
00:09:11,279 --> 00:09:13,360
um unfortunately with uncover you can't

261
00:09:13,360 --> 00:09:15,680
do that so they have like a

262
00:09:15,680 --> 00:09:17,040
check where they check your os and

263
00:09:17,040 --> 00:09:18,560
they're like sorry we haven't released

264
00:09:18,560 --> 00:09:19,279
that

265
00:09:19,279 --> 00:09:22,000
no you may not run at your own risk um

266
00:09:22,000 --> 00:09:23,440
so yeah that's one thing if you have

267
00:09:23,440 --> 00:09:25,519
like a phone on a newer version

268
00:09:25,519 --> 00:09:27,360
you literally just are you have to make

269
00:09:27,360 --> 00:09:29,360
your own jailbreak or wait for the

270
00:09:29,360 --> 00:09:32,640
uncover people to release something new

271
00:09:32,640 --> 00:09:34,880
also i don't think anyone has any iphone

272
00:09:34,880 --> 00:09:36,880
5s anymore but

273
00:09:36,880 --> 00:09:38,880
if you do i'm sorry

274
00:09:38,880 --> 00:09:42,800
this is for 64-bit devices only

275
00:09:44,320 --> 00:09:46,080
all right so last step to prepare your

276
00:09:46,080 --> 00:09:48,800
ios device normally jailbreaks will give

277
00:09:48,800 --> 00:09:51,120
you cydia which is basically a package

278
00:09:51,120 --> 00:09:52,320
manager

279
00:09:52,320 --> 00:09:54,080
for anything that's jailbroken but if

280
00:09:54,080 --> 00:09:55,600
for some reason the jailbreak that

281
00:09:55,600 --> 00:09:57,600
you're using didn't include cydia you

282
00:09:57,600 --> 00:09:59,120
can just download it directly from

283
00:09:59,120 --> 00:10:01,279
sorek's website they have debian files

284
00:10:01,279 --> 00:10:03,600
and you just double click it and install

285
00:10:03,600 --> 00:10:05,600
and you're good

286
00:10:05,600 --> 00:10:08,480
frida is not a default source in cydia

287
00:10:08,480 --> 00:10:10,640
so you can just add it as a source

288
00:10:10,640 --> 00:10:11,760
and then

289
00:10:11,760 --> 00:10:13,680
download and install freedom you're

290
00:10:13,680 --> 00:10:15,360
ready to go

291
00:10:15,360 --> 00:10:16,480
the one thing is you want to make sure

292
00:10:16,480 --> 00:10:19,440
you pick the top frida because they

293
00:10:19,440 --> 00:10:22,480
recently updated so previously there's

294
00:10:22,480 --> 00:10:23,760
all these different versions of frida

295
00:10:23,760 --> 00:10:25,360
because there was freedom for 32-bit

296
00:10:25,360 --> 00:10:27,360
devices there was frida

297
00:10:27,360 --> 00:10:29,279
for and that's um

298
00:10:29,279 --> 00:10:31,839
a 32-bit not 32-bit

299
00:10:31,839 --> 00:10:34,240
um and then frida for a12 plus which is

300
00:10:34,240 --> 00:10:37,680
64-bit step and later so

301
00:10:37,680 --> 00:10:39,600
um frida

302
00:10:39,600 --> 00:10:41,519
15 came out and kind of combined

303
00:10:41,519 --> 00:10:42,880
everything together so that you just

304
00:10:42,880 --> 00:10:45,360
need one version of frida so

305
00:10:45,360 --> 00:10:46,560
that's why

306
00:10:46,560 --> 00:10:48,399
um just pick that one

307
00:10:48,399 --> 00:10:52,000
and so i can actually show you

308
00:10:52,000 --> 00:10:54,240
on my phone

309
00:10:54,240 --> 00:10:57,680
so this is jailbroken if you go to cydia

310
00:10:57,680 --> 00:11:01,680
you look at your installed packages

311
00:11:01,680 --> 00:11:05,200
i'm on 15.1.3 which is fine

312
00:11:05,200 --> 00:11:07,120
um so then i know that i picked the

313
00:11:07,120 --> 00:11:08,880
right one so that's the way to check if

314
00:11:08,880 --> 00:11:13,160
you like clicked and you're not sure

315
00:11:16,480 --> 00:11:18,079
all right so we're done

316
00:11:18,079 --> 00:11:19,680
we're ready

317
00:11:19,680 --> 00:11:21,120
all right so now i'm gonna actually just

318
00:11:21,120 --> 00:11:22,640
um show you

319
00:11:22,640 --> 00:11:24,000
so i always

320
00:11:24,000 --> 00:11:26,160
try to sanity check first because

321
00:11:26,160 --> 00:11:27,760
sometimes like you might accidentally

322
00:11:27,760 --> 00:11:30,160
have the wrong version of frida or

323
00:11:30,160 --> 00:11:31,440
something's not working that's supposed

324
00:11:31,440 --> 00:11:33,200
to maybe there's like

325
00:11:33,200 --> 00:11:34,959
your version of ios needs like a certain

326
00:11:34,959 --> 00:11:36,720
cherry pick pull request from github or

327
00:11:36,720 --> 00:11:37,680
something

328
00:11:37,680 --> 00:11:39,519
um because you can also build free

329
00:11:39,519 --> 00:11:42,000
yourself so just to make sure

330
00:11:42,000 --> 00:11:43,680
everything's working double check your

331
00:11:43,680 --> 00:11:46,160
freedom version

332
00:11:46,160 --> 00:11:47,760
just like python

333
00:11:47,760 --> 00:11:49,360
and then um you can

334
00:11:49,360 --> 00:11:52,560
call frida ps ps stands for process list

335
00:11:52,560 --> 00:11:54,000
you probably all know that

336
00:11:54,000 --> 00:11:57,839
and then dash u which is usb

337
00:11:57,839 --> 00:12:00,160
so one common pitfall that i have when

338
00:12:00,160 --> 00:12:01,760
i'm usually doing stuff with frida is

339
00:12:01,760 --> 00:12:04,000
sometimes i forget to do the dash u and

340
00:12:04,000 --> 00:12:05,760
then i'm like oh like i cannot find like

341
00:12:05,760 --> 00:12:07,600
this process like what is going on and

342
00:12:07,600 --> 00:12:10,880
like oh i forgot the u so

343
00:12:10,880 --> 00:12:14,639
everything seems like it's working

344
00:12:14,720 --> 00:12:17,200
um so then

345
00:12:17,200 --> 00:12:19,519
we'll just jump into the methodology so

346
00:12:19,519 --> 00:12:20,959
the first one is called connect and

347
00:12:20,959 --> 00:12:23,360
explore this methodology is more for

348
00:12:23,360 --> 00:12:24,800
when you're just trying to kind of see

349
00:12:24,800 --> 00:12:26,560
what's going on in the phone maybe you

350
00:12:26,560 --> 00:12:28,240
need to get the load addresses of some

351
00:12:28,240 --> 00:12:29,760
certain libraries

352
00:12:29,760 --> 00:12:31,200
um you want to see

353
00:12:31,200 --> 00:12:32,560
kind of what's happening

354
00:12:32,560 --> 00:12:33,760
and you're just not really sure like

355
00:12:33,760 --> 00:12:35,040
what you want to do

356
00:12:35,040 --> 00:12:36,399
or you want to write a lot of javascript

357
00:12:36,399 --> 00:12:39,200
which i don't like doing but

358
00:12:39,200 --> 00:12:41,920
that's what i use this for

359
00:12:41,920 --> 00:12:44,079
so

360
00:12:45,040 --> 00:12:46,959
and because i have done a lot of air tag

361
00:12:46,959 --> 00:12:50,079
reversing i have done

362
00:12:50,079 --> 00:12:52,800
a lot of frida usage with bluetooth d so

363
00:12:52,800 --> 00:12:53,920
that's what i'm going to demonstrate

364
00:12:53,920 --> 00:12:54,880
today

365
00:12:54,880 --> 00:12:57,519
so it's really easy you just say frida

366
00:12:57,519 --> 00:13:00,000
u bluetooth d

367
00:13:00,000 --> 00:13:01,600
and then can everybody see this is this

368
00:13:01,600 --> 00:13:03,360
big enough because if not i can make it

369
00:13:03,360 --> 00:13:06,320
bigger

370
00:13:06,320 --> 00:13:07,120
good

371
00:13:07,120 --> 00:13:09,360
okay

372
00:13:10,320 --> 00:13:12,480
and that's it so you can either use the

373
00:13:12,480 --> 00:13:15,200
process name or the pid

374
00:13:15,200 --> 00:13:16,079
um

375
00:13:16,079 --> 00:13:17,200
so

376
00:13:17,200 --> 00:13:18,160
something that can be a little

377
00:13:18,160 --> 00:13:19,839
discouraging when you first use frida

378
00:13:19,839 --> 00:13:20,800
even though there's a lot of great

379
00:13:20,800 --> 00:13:22,480
features and

380
00:13:22,480 --> 00:13:24,639
it is on version 15. it still is

381
00:13:24,639 --> 00:13:28,000
freeware so things like this happen

382
00:13:28,000 --> 00:13:29,680
and you're like did i just download

383
00:13:29,680 --> 00:13:32,160
malware what is this

384
00:13:32,160 --> 00:13:33,200
but it's not their fault it's a great

385
00:13:33,200 --> 00:13:34,959
tool just you know

386
00:13:34,959 --> 00:13:36,560
they got a lot of things that are really

387
00:13:36,560 --> 00:13:38,720
great that they're they're adding um so

388
00:13:38,720 --> 00:13:42,000
instead you tab complete

389
00:13:42,079 --> 00:13:44,720
and this is how you use frida so if you

390
00:13:44,720 --> 00:13:45,680
don't know what you're doing and you're

391
00:13:45,680 --> 00:13:46,959
like oh i don't remember like what

392
00:13:46,959 --> 00:13:48,959
christine said or i want to explore

393
00:13:48,959 --> 00:13:50,320
something different just tab complete

394
00:13:50,320 --> 00:13:51,760
and you can explore all of these

395
00:13:51,760 --> 00:13:53,360
different modules which is really

396
00:13:53,360 --> 00:13:54,480
awesome

397
00:13:54,480 --> 00:13:56,560
um so as an example

398
00:13:56,560 --> 00:13:57,680
something that's kind of cool is they

399
00:13:57,680 --> 00:13:59,440
have this math one kind of like numpy i

400
00:13:59,440 --> 00:14:00,839
guess

401
00:14:00,839 --> 00:14:02,480
and

402
00:14:02,480 --> 00:14:03,680
you have some constants that you might

403
00:14:03,680 --> 00:14:05,040
want to use they have like functions

404
00:14:05,040 --> 00:14:06,880
like absolute value so i don't like

405
00:14:06,880 --> 00:14:08,560
matlab maybe if you're like doing

406
00:14:08,560 --> 00:14:10,000
something like that

407
00:14:10,000 --> 00:14:11,519
so that's interesting it's kind of like

408
00:14:11,519 --> 00:14:13,440
fun things to play with

409
00:14:13,440 --> 00:14:15,360
so

410
00:14:15,360 --> 00:14:17,279
what we want to look at is the process

411
00:14:17,279 --> 00:14:19,839
itself so we can type process and it'll

412
00:14:19,839 --> 00:14:21,680
tell us the architecture code signing

413
00:14:21,680 --> 00:14:24,320
policy we'll get the pit again

414
00:14:24,320 --> 00:14:25,680
um

415
00:14:25,680 --> 00:14:28,399
so now what we want to look at is the

416
00:14:28,399 --> 00:14:30,160
libraries that are accessed by this

417
00:14:30,160 --> 00:14:32,160
process because we want to figure out

418
00:14:32,160 --> 00:14:34,560
what are some libraries that are touched

419
00:14:34,560 --> 00:14:35,519
by

420
00:14:35,519 --> 00:14:36,800
bluetooth d

421
00:14:36,800 --> 00:14:40,079
so we can say mods equals process dot

422
00:14:40,079 --> 00:14:42,000
numerate

423
00:14:42,000 --> 00:14:46,320
modules and save it into a variable

424
00:14:46,320 --> 00:14:48,399
and then it prints out so you might be

425
00:14:48,399 --> 00:14:50,000
confused because i keep saying modules

426
00:14:50,000 --> 00:14:51,360
and that's not really a word that we

427
00:14:51,360 --> 00:14:52,560
hear in

428
00:14:52,560 --> 00:14:54,720
ios um

429
00:14:54,720 --> 00:14:56,560
so and then i say modules but you're

430
00:14:56,560 --> 00:14:59,600
seeing like dyld and like some die libs

431
00:14:59,600 --> 00:15:00,720
and then if i scroll up a little more

432
00:15:00,720 --> 00:15:01,839
you see like some frameworks and you're

433
00:15:01,839 --> 00:15:03,440
like what is she talking about what is

434
00:15:03,440 --> 00:15:06,000
the module what is happening

435
00:15:06,000 --> 00:15:07,040
and so

436
00:15:07,040 --> 00:15:09,839
go back to the slides um this is an old

437
00:15:09,839 --> 00:15:12,399
slide from jonathan levin's class

438
00:15:12,399 --> 00:15:14,639
it says osx architecture but it's like

439
00:15:14,639 --> 00:15:16,399
kind of the same thing like mac os and

440
00:15:16,399 --> 00:15:18,160
ios so

441
00:15:18,160 --> 00:15:21,040
i'm saying modules and freda and an

442
00:15:21,040 --> 00:15:23,279
apple we just say like frameworks or

443
00:15:23,279 --> 00:15:25,839
private frameworks or public frameworks

444
00:15:25,839 --> 00:15:28,560
a module is a library it's a framework

445
00:15:28,560 --> 00:15:30,720
it's all the same thing so i might say

446
00:15:30,720 --> 00:15:32,480
library might say module might say

447
00:15:32,480 --> 00:15:34,000
framework and in this talk i'm just

448
00:15:34,000 --> 00:15:35,600
talking about like dynamically linked

449
00:15:35,600 --> 00:15:37,120
libraries

450
00:15:37,120 --> 00:15:39,360
so if you look at this

451
00:15:39,360 --> 00:15:41,040
architecture

452
00:15:41,040 --> 00:15:44,560
cli like demons this is my bluetooth d d

453
00:15:44,560 --> 00:15:45,680
for demon

454
00:15:45,680 --> 00:15:48,480
and it's calling these different public

455
00:15:48,480 --> 00:15:50,079
and private frameworks

456
00:15:50,079 --> 00:15:52,079
so just so there's no confusion somebody

457
00:15:52,079 --> 00:15:53,920
else is in their talk talking about you

458
00:15:53,920 --> 00:15:56,000
know you want to have the same language

459
00:15:56,000 --> 00:15:56,880
um

460
00:15:56,880 --> 00:15:59,759
so i thought that might be helpful

461
00:15:59,759 --> 00:16:02,079
so this is interesting but i just saw

462
00:16:02,079 --> 00:16:04,000
like every single module that's touched

463
00:16:04,000 --> 00:16:05,680
by bluetooth d and i don't want to

464
00:16:05,680 --> 00:16:07,920
reverse engineer all of bluetooth d i

465
00:16:07,920 --> 00:16:09,920
want to look at like a very small part

466
00:16:09,920 --> 00:16:11,199
of bluetooth d

467
00:16:11,199 --> 00:16:14,000
so something i can do is actually run a

468
00:16:14,000 --> 00:16:15,600
filter

469
00:16:15,600 --> 00:16:18,079
so you can say list mods as a new

470
00:16:18,079 --> 00:16:19,920
variable and then i can have this filter

471
00:16:19,920 --> 00:16:22,240
function and i can literally just sort

472
00:16:22,240 --> 00:16:25,040
through this list

473
00:16:25,199 --> 00:16:26,959
and then i find three interesting

474
00:16:26,959 --> 00:16:28,959
libraries so now i can get closer to

475
00:16:28,959 --> 00:16:32,399
finding that needle in the haystack

476
00:16:32,399 --> 00:16:34,480
and what's really awesome is you get the

477
00:16:34,480 --> 00:16:36,399
base address so this is the actual base

478
00:16:36,399 --> 00:16:37,360
address

479
00:16:37,360 --> 00:16:39,040
loaded in memory of that library so

480
00:16:39,040 --> 00:16:40,880
that's awesome for finding like function

481
00:16:40,880 --> 00:16:42,480
offsets

482
00:16:42,480 --> 00:16:43,680
and things that you need if you're

483
00:16:43,680 --> 00:16:44,880
trying to

484
00:16:44,880 --> 00:16:46,399
figure out where a function is being

485
00:16:46,399 --> 00:16:47,600
called or if you want to hook into a

486
00:16:47,600 --> 00:16:49,600
specific function you also have the

487
00:16:49,600 --> 00:16:52,160
entire path so you know where to find it

488
00:16:52,160 --> 00:16:53,440
on the phone if you want to pull that

489
00:16:53,440 --> 00:16:56,639
binary off the device

490
00:16:59,040 --> 00:17:00,399
the other thing that you might want to

491
00:17:00,399 --> 00:17:02,480
do is maybe there's a reason that you're

492
00:17:02,480 --> 00:17:04,400
trying to like modify memory and you

493
00:17:04,400 --> 00:17:06,319
want to know like if there's readable

494
00:17:06,319 --> 00:17:08,720
writable executable memory

495
00:17:08,720 --> 00:17:10,880
so you can say

496
00:17:10,880 --> 00:17:12,799
process

497
00:17:12,799 --> 00:17:15,679
enumerate

498
00:17:17,039 --> 00:17:19,839
ranges

499
00:17:19,839 --> 00:17:22,240
and then like if you want readable

500
00:17:22,240 --> 00:17:23,760
writable memory

501
00:17:23,760 --> 00:17:26,319
and then it will actually list out

502
00:17:26,319 --> 00:17:28,480
in a dictionary for you

503
00:17:28,480 --> 00:17:31,280
all of the ranges where they start

504
00:17:31,280 --> 00:17:33,039
how big they are

505
00:17:33,039 --> 00:17:36,240
so that i found helpful in the past

506
00:17:36,240 --> 00:17:38,080
the last thing i want to show you in

507
00:17:38,080 --> 00:17:40,160
this frida cli

508
00:17:40,160 --> 00:17:42,960
is how to connect

509
00:17:42,960 --> 00:17:44,480
a script because it can be really

510
00:17:44,480 --> 00:17:46,320
annoying like once you kind of know what

511
00:17:46,320 --> 00:17:47,760
you're doing like i wanna have to keep

512
00:17:47,760 --> 00:17:49,760
typing in this window

513
00:17:49,760 --> 00:17:51,200
all the time i wanna

514
00:17:51,200 --> 00:17:53,600
be able to move a little bit faster

515
00:17:53,600 --> 00:17:54,320
so

516
00:17:54,320 --> 00:17:57,919
here's a very simple javascript script

517
00:17:57,919 --> 00:18:00,320
that's also probably very small can you

518
00:18:00,320 --> 00:18:02,879
guys see that

519
00:18:04,400 --> 00:18:06,880
there maybe that's a little better

520
00:18:06,880 --> 00:18:08,400
um

521
00:18:08,400 --> 00:18:10,640
so you can connect again with the

522
00:18:10,640 --> 00:18:13,520
command line using the dash l flag so

523
00:18:13,520 --> 00:18:16,799
frida u bluetooth d

524
00:18:16,799 --> 00:18:19,360
dash l

525
00:18:19,360 --> 00:18:20,960
enumerate

526
00:18:20,960 --> 00:18:23,600
modules

527
00:18:24,160 --> 00:18:26,160
module names

528
00:18:26,160 --> 00:18:27,679
all right

529
00:18:27,679 --> 00:18:29,039
and it's just printing out those same

530
00:18:29,039 --> 00:18:31,360
module names that we saw before

531
00:18:31,360 --> 00:18:32,080
so

532
00:18:32,080 --> 00:18:33,679
something else you can do if you don't

533
00:18:33,679 --> 00:18:35,200
want to reconnect

534
00:18:35,200 --> 00:18:36,880
disconnect and reconnect you can just

535
00:18:36,880 --> 00:18:38,480
literally paste into that window and i

536
00:18:38,480 --> 00:18:40,160
found that helpful because sometimes i

537
00:18:40,160 --> 00:18:41,200
just want to

538
00:18:41,200 --> 00:18:43,679
run a script

539
00:18:43,679 --> 00:18:45,360
so all right

540
00:18:45,360 --> 00:18:47,679
now you know

541
00:18:47,679 --> 00:18:49,120
where to find a library that might be

542
00:18:49,120 --> 00:18:50,799
interesting to you

543
00:18:50,799 --> 00:18:51,840
you know

544
00:18:51,840 --> 00:18:53,600
how to find the load address

545
00:18:53,600 --> 00:18:54,799
but really christina's not really

546
00:18:54,799 --> 00:18:56,640
interesting like i want to know specific

547
00:18:56,640 --> 00:18:58,400
functions i want to know how i can hook

548
00:18:58,400 --> 00:19:00,320
a specific function get some data that i

549
00:19:00,320 --> 00:19:01,520
might want

550
00:19:01,520 --> 00:19:04,400
and you can do that um but you need my

551
00:19:04,400 --> 00:19:06,720
second methodology which i call catch

552
00:19:06,720 --> 00:19:09,280
and release um so this is using frida

553
00:19:09,280 --> 00:19:11,200
trace

554
00:19:11,200 --> 00:19:12,080
so

555
00:19:12,080 --> 00:19:13,280
one

556
00:19:13,280 --> 00:19:15,760
other pitfall with freda trace is you

557
00:19:15,760 --> 00:19:19,120
need to be aware in ios specifically of

558
00:19:19,120 --> 00:19:21,760
objective-c versus non-objective-c

559
00:19:21,760 --> 00:19:23,280
functions

560
00:19:23,280 --> 00:19:25,600
so you might

561
00:19:25,600 --> 00:19:28,240
think that you have the right syntax and

562
00:19:28,240 --> 00:19:29,679
then if you don't and you have the wrong

563
00:19:29,679 --> 00:19:32,400
flag you will not hook anything

564
00:19:32,400 --> 00:19:35,039
so like as an example if i said free to

565
00:19:35,039 --> 00:19:37,280
trace dash i and then i put this

566
00:19:37,280 --> 00:19:39,840
objective c syntax in nothing would hook

567
00:19:39,840 --> 00:19:41,840
and i'd be like oh there's no functions

568
00:19:41,840 --> 00:19:44,080
called location that bluetooth d uses

569
00:19:44,080 --> 00:19:46,480
like that doesn't make any sense so

570
00:19:46,480 --> 00:19:48,000
really just be careful with this syntax

571
00:19:48,000 --> 00:19:50,640
so dash m is for location is for

572
00:19:50,640 --> 00:19:52,559
objective c and dash i is for

573
00:19:52,559 --> 00:19:56,000
non-objective-c functions

574
00:19:56,080 --> 00:19:57,919
so i thought it would be fun if i did a

575
00:19:57,919 --> 00:20:00,160
demonstration on reverse engineering the

576
00:20:00,160 --> 00:20:02,960
ios zero click exploit showing how i can

577
00:20:02,960 --> 00:20:04,840
use fruited trace to

578
00:20:04,840 --> 00:20:07,440
actuate i know a lot of people already

579
00:20:07,440 --> 00:20:08,640
talked about this i'm like the fourth

580
00:20:08,640 --> 00:20:10,240
person to talk about it i'm going to

581
00:20:10,240 --> 00:20:11,760
talk about it again in case some people

582
00:20:11,760 --> 00:20:13,919
didn't see the other talks so this was

583
00:20:13,919 --> 00:20:16,559
first reported as megalodon by amnesty

584
00:20:16,559 --> 00:20:17,760
international

585
00:20:17,760 --> 00:20:19,360
and then it was later reported by

586
00:20:19,360 --> 00:20:22,080
citizen lab as forced entry

587
00:20:22,080 --> 00:20:25,120
there's also another report um mickey

588
00:20:25,120 --> 00:20:27,120
gin reverse engineered this

589
00:20:27,120 --> 00:20:29,520
and published it with trend micro

590
00:20:29,520 --> 00:20:31,360
um i recommend reading that i took a

591
00:20:31,360 --> 00:20:32,480
screenshot from that for this

592
00:20:32,480 --> 00:20:34,400
presentation

593
00:20:34,400 --> 00:20:36,480
so basically the exploit was a series of

594
00:20:36,480 --> 00:20:39,200
gifs that were maliciously encoded as

595
00:20:39,200 --> 00:20:41,679
pdfs and sent to a target device via

596
00:20:41,679 --> 00:20:43,840
imessage

597
00:20:43,840 --> 00:20:45,360
so in this demonstration i'm going to

598
00:20:45,360 --> 00:20:46,880
show you how you can trigger some of

599
00:20:46,880 --> 00:20:50,480
those same functions using imessage

600
00:20:50,480 --> 00:20:52,480
i thought it was weird but also

601
00:20:52,480 --> 00:20:54,080
interesting how sending a gif could

602
00:20:54,080 --> 00:20:56,640
trigger something pdf

603
00:20:56,640 --> 00:20:58,000
so i started looking into mickey's

604
00:20:58,000 --> 00:20:59,919
report to figure out kind of what was

605
00:20:59,919 --> 00:21:03,120
going on

606
00:21:03,120 --> 00:21:05,360
so in this screenshot he actually

607
00:21:05,360 --> 00:21:08,080
reverse engineered um the actual exploit

608
00:21:08,080 --> 00:21:09,600
function and then he looked at apple's

609
00:21:09,600 --> 00:21:11,840
patch to see what had changed so the

610
00:21:11,840 --> 00:21:14,000
exploit itself was in the jbig two

611
00:21:14,000 --> 00:21:16,480
stream read text region function

612
00:21:16,480 --> 00:21:18,320
which is here at the top

613
00:21:18,320 --> 00:21:20,240
but then we can see there's like a call

614
00:21:20,240 --> 00:21:22,400
chain of other functions

615
00:21:22,400 --> 00:21:23,840
so

616
00:21:23,840 --> 00:21:26,720
core graphics was the main framework or

617
00:21:26,720 --> 00:21:28,880
library that was affected here and you

618
00:21:28,880 --> 00:21:31,280
see something called cgpdf

619
00:21:31,280 --> 00:21:32,159
source

620
00:21:32,159 --> 00:21:33,760
and so i thought this was particularly

621
00:21:33,760 --> 00:21:35,520
interesting

622
00:21:35,520 --> 00:21:39,120
and i wanted to focus on this

623
00:21:43,520 --> 00:21:44,880
so

624
00:21:44,880 --> 00:21:48,159
let's go back here

625
00:21:53,840 --> 00:21:55,760
so what i decided to do was use free to

626
00:21:55,760 --> 00:21:58,240
trace and this time because we're

627
00:21:58,240 --> 00:22:00,080
looking at imessage i'm connecting to

628
00:22:00,080 --> 00:22:02,880
the messages process and then it's a

629
00:22:02,880 --> 00:22:05,440
non-objective c function you can see

630
00:22:05,440 --> 00:22:07,039
in here it's just a normal function name

631
00:22:07,039 --> 00:22:09,520
that's not objective c syntax

632
00:22:09,520 --> 00:22:11,280
so i use

633
00:22:11,280 --> 00:22:14,880
quotes and then asterisk cgpdf source

634
00:22:14,880 --> 00:22:16,640
and i'm going to try to connect to my

635
00:22:16,640 --> 00:22:19,120
target device so let me also pull up my

636
00:22:19,120 --> 00:22:20,480
device

637
00:22:20,480 --> 00:22:22,080
so you can see

638
00:22:22,080 --> 00:22:24,799
what's happening

639
00:22:25,600 --> 00:22:26,880
so something that's a little bit

640
00:22:26,880 --> 00:22:28,640
different between messages and bluetooth

641
00:22:28,640 --> 00:22:32,320
d is messages won't let you connect

642
00:22:32,320 --> 00:22:33,679
right away because of the way that the

643
00:22:33,679 --> 00:22:36,320
process is like idle there's actually a

644
00:22:36,320 --> 00:22:38,480
helper process that controls when

645
00:22:38,480 --> 00:22:40,080
messages is triggered so the helper

646
00:22:40,080 --> 00:22:42,159
process is always running but messages

647
00:22:42,159 --> 00:22:44,880
is in this idle state so you can watch

648
00:22:44,880 --> 00:22:48,799
if i don't attach in time it will fail

649
00:22:49,120 --> 00:22:51,200
so

650
00:22:51,200 --> 00:22:52,960
failed to attach so what you have to do

651
00:22:52,960 --> 00:22:55,840
if you want to connect to messages

652
00:22:55,840 --> 00:22:57,679
is you can just like send a text message

653
00:22:57,679 --> 00:22:58,880
or something

654
00:22:58,880 --> 00:23:01,600
or an imesses message just to actuate so

655
00:23:01,600 --> 00:23:03,840
now you can see that it's connecting i

656
00:23:03,840 --> 00:23:05,840
got this text message and it's

657
00:23:05,840 --> 00:23:08,559
instrumenting and suddenly i hooked all

658
00:23:08,559 --> 00:23:11,360
of these functions

659
00:23:12,000 --> 00:23:13,600
so

660
00:23:13,600 --> 00:23:15,280
now i'm going to send a gif and see if

661
00:23:15,280 --> 00:23:18,158
anything is triggered

662
00:23:20,559 --> 00:23:23,840
so here's one

663
00:23:24,240 --> 00:23:25,919
sorry there's

664
00:23:25,919 --> 00:23:27,919
it's loading the connectivity in here is

665
00:23:27,919 --> 00:23:31,039
a little a little slow

666
00:23:34,640 --> 00:23:36,080
and then you'll see it pop up on the

667
00:23:36,080 --> 00:23:38,480
device

668
00:23:38,480 --> 00:23:40,720
so what you're going to see here is the

669
00:23:40,720 --> 00:23:43,200
messages will pop up on the device but

670
00:23:43,200 --> 00:23:45,120
you won't actually get

671
00:23:45,120 --> 00:23:47,919
any triggers which is interesting

672
00:23:47,919 --> 00:23:49,440
because i thought that i was supposed to

673
00:23:49,440 --> 00:23:51,360
be triggering something in core graphics

674
00:23:51,360 --> 00:23:54,720
and the cg pdf function

675
00:23:54,720 --> 00:23:57,720
so

676
00:24:10,159 --> 00:24:12,480
okay here we go it's almost there

677
00:24:12,480 --> 00:24:14,159
all right you can see the phone it got

678
00:24:14,159 --> 00:24:16,159
it got one

679
00:24:16,159 --> 00:24:17,760
i sent i sent two but i'll just start

680
00:24:17,760 --> 00:24:19,279
talking about one so there's there's two

681
00:24:19,279 --> 00:24:21,360
so it's not going to have any

682
00:24:21,360 --> 00:24:22,720
any

683
00:24:22,720 --> 00:24:25,760
hook even though i'm actuating

684
00:24:25,760 --> 00:24:28,000
then if i click on messages and i

685
00:24:28,000 --> 00:24:30,240
actually open it

686
00:24:30,240 --> 00:24:32,080
so i open the gifts then suddenly i'm

687
00:24:32,080 --> 00:24:33,360
like getting all these hoax and it's

688
00:24:33,360 --> 00:24:35,200
like okay so that's how the gif gets

689
00:24:35,200 --> 00:24:37,440
connected to pdf but you're like oh wait

690
00:24:37,440 --> 00:24:39,120
a minute christine this is zero click

691
00:24:39,120 --> 00:24:41,360
and that was like for sure a click just

692
00:24:41,360 --> 00:24:42,400
now

693
00:24:42,400 --> 00:24:46,039
so you're right

694
00:24:46,159 --> 00:24:48,400
so we have to do something different

695
00:24:48,400 --> 00:24:50,720
um so what i did

696
00:24:50,720 --> 00:24:54,480
was i used my elite hacking skills

697
00:24:54,480 --> 00:24:56,960
to create a psc

698
00:24:56,960 --> 00:25:00,000
with microsoft word

699
00:25:00,000 --> 00:25:01,360
this is my

700
00:25:01,360 --> 00:25:03,200
exploit

701
00:25:03,200 --> 00:25:07,039
and i saved this file as a pdf

702
00:25:07,039 --> 00:25:09,600
and then i changed it from dot pdf to

703
00:25:09,600 --> 00:25:12,080
dot gif

704
00:25:12,880 --> 00:25:16,960
so now if i send that

705
00:25:16,960 --> 00:25:19,600
to the phone

706
00:25:20,559 --> 00:25:23,039
sorry i gotta

707
00:25:23,039 --> 00:25:24,559
send it from my

708
00:25:24,559 --> 00:25:28,120
my google drive

709
00:25:34,640 --> 00:25:37,440
now suddenly

710
00:25:37,520 --> 00:25:40,080
everything is triggering

711
00:25:40,080 --> 00:25:41,679
and there's no click sorry it's like

712
00:25:41,679 --> 00:25:43,919
very it's very slow coming up on here

713
00:25:43,919 --> 00:25:45,600
okay

714
00:25:45,600 --> 00:25:47,039
so that was

715
00:25:47,039 --> 00:25:48,880
i didn't click i didn't do anything and

716
00:25:48,880 --> 00:25:51,200
it just suddenly triggered what's really

717
00:25:51,200 --> 00:25:53,679
interesting

718
00:25:54,400 --> 00:25:56,400
is that there's nothing there but i

719
00:25:56,400 --> 00:25:58,720
doubt you definitely saw it got an image

720
00:25:58,720 --> 00:26:00,320
message so let me send that again

721
00:26:00,320 --> 00:26:01,360
because it's a little

722
00:26:01,360 --> 00:26:04,000
it's weird

723
00:26:08,720 --> 00:26:12,480
so you can see i'm sending something

724
00:26:12,960 --> 00:26:14,320
and my phone just buzzed i guess you

725
00:26:14,320 --> 00:26:15,840
couldn't hear it but and then nothing

726
00:26:15,840 --> 00:26:17,279
comes in but you can see these again

727
00:26:17,279 --> 00:26:18,720
these are hooking

728
00:26:18,720 --> 00:26:19,600
so

729
00:26:19,600 --> 00:26:22,480
that's really interesting um

730
00:26:22,480 --> 00:26:23,600
i just i thought that was really

731
00:26:23,600 --> 00:26:24,960
interesting um and it's because it's a

732
00:26:24,960 --> 00:26:27,120
pdf it's not a gif so it can't render

733
00:26:27,120 --> 00:26:28,640
but these are these functions are being

734
00:26:28,640 --> 00:26:29,760
called

735
00:26:29,760 --> 00:26:31,440
so

736
00:26:31,440 --> 00:26:33,360
something else you can do free to trace

737
00:26:33,360 --> 00:26:34,240
actually

738
00:26:34,240 --> 00:26:35,840
that's kind of like the instrumentation

739
00:26:35,840 --> 00:26:37,360
portion that i was talking about earlier

740
00:26:37,360 --> 00:26:38,960
because remember you're trying to hook

741
00:26:38,960 --> 00:26:40,320
functions you're trying to harness this

742
00:26:40,320 --> 00:26:43,200
binary and insert debuggable code

743
00:26:43,200 --> 00:26:45,679
so you actually get that when you use

744
00:26:45,679 --> 00:26:48,159
free to trace automatically

745
00:26:48,159 --> 00:26:50,320
so

746
00:26:50,320 --> 00:26:51,919
in this folder i'm in this objective by

747
00:26:51,919 --> 00:26:54,240
the c folder and i called free to trace

748
00:26:54,240 --> 00:26:56,400
freda will automatically for me create

749
00:26:56,400 --> 00:26:58,880
this handlers folder

750
00:26:58,880 --> 00:27:00,480
and every single time all those

751
00:27:00,480 --> 00:27:02,159
functions list and you see like all

752
00:27:02,159 --> 00:27:03,600
those

753
00:27:03,600 --> 00:27:06,320
all those files that are like listed

754
00:27:06,320 --> 00:27:08,080
that's everything that's being hooked so

755
00:27:08,080 --> 00:27:09,600
i've run free to trace a bunch of times

756
00:27:09,600 --> 00:27:10,960
in this folder so i have a lot of hooks

757
00:27:10,960 --> 00:27:12,720
that were already created

758
00:27:12,720 --> 00:27:14,640
but you can see down here

759
00:27:14,640 --> 00:27:17,279
core graphics is what i was hooking and

760
00:27:17,279 --> 00:27:20,000
then all the core graphics source files

761
00:27:20,000 --> 00:27:23,120
so it just creates kind of like a

762
00:27:23,120 --> 00:27:26,880
very generic auto generated um on entry

763
00:27:26,880 --> 00:27:29,279
on leave

764
00:27:29,279 --> 00:27:31,440
and then it just logs that it attached

765
00:27:31,440 --> 00:27:33,360
to this function but here what's really

766
00:27:33,360 --> 00:27:35,360
interesting is now you have access to

767
00:27:35,360 --> 00:27:37,279
the arguments of that function you have

768
00:27:37,279 --> 00:27:38,720
access to the return value of that

769
00:27:38,720 --> 00:27:39,600
function

770
00:27:39,600 --> 00:27:41,840
and you can actually start to inject

771
00:27:41,840 --> 00:27:43,440
code so this is where you can inject

772
00:27:43,440 --> 00:27:46,559
code into the process

773
00:27:46,960 --> 00:27:49,600
so something else i want to show you is

774
00:27:49,600 --> 00:27:51,360
how to figure out the call chain of

775
00:27:51,360 --> 00:27:52,960
what's happening so you can use this

776
00:27:52,960 --> 00:27:55,600
back trace function from frida so you

777
00:27:55,600 --> 00:27:58,799
can print out the call chain happening

778
00:27:58,799 --> 00:28:00,480
during this trigger

779
00:28:00,480 --> 00:28:02,159
so let's i know it's a little slow but

780
00:28:02,159 --> 00:28:05,039
let's sugar this one more time

781
00:28:05,039 --> 00:28:07,760
um with this back trace and i'm gonna

782
00:28:07,760 --> 00:28:10,640
send my hack

783
00:28:15,200 --> 00:28:16,720
and hopefully it sounds a little a

784
00:28:16,720 --> 00:28:18,799
little faster

785
00:28:18,799 --> 00:28:20,240
all right

786
00:28:20,240 --> 00:28:22,240
yeah and now you can see the entire back

787
00:28:22,240 --> 00:28:24,240
trace from this function

788
00:28:24,240 --> 00:28:25,600
so

789
00:28:25,600 --> 00:28:27,760
this is laying the foundation for you if

790
00:28:27,760 --> 00:28:29,679
you wanted to reverse engineer this

791
00:28:29,679 --> 00:28:31,120
because now you can see okay well

792
00:28:31,120 --> 00:28:32,159
there's all these other functions that

793
00:28:32,159 --> 00:28:34,799
are called and um i definitely recommend

794
00:28:34,799 --> 00:28:36,880
like reading mikki jin's report reading

795
00:28:36,880 --> 00:28:38,960
the amnesty international report looking

796
00:28:38,960 --> 00:28:40,559
at his call chain

797
00:28:40,559 --> 00:28:42,799
and then

798
00:28:42,799 --> 00:28:44,799
reverse engineering the binary itself so

799
00:28:44,799 --> 00:28:46,480
you can pull the binary off the phone

800
00:28:46,480 --> 00:28:48,799
and see which of these functions are

801
00:28:48,799 --> 00:28:51,039
connected to

802
00:28:51,039 --> 00:28:55,320
the exploited function

803
00:28:58,080 --> 00:29:00,000
all right

804
00:29:00,000 --> 00:29:02,320
so

805
00:29:03,760 --> 00:29:05,600
free to trace is probably one of my

806
00:29:05,600 --> 00:29:08,080
favorite parts of frida but the thing i

807
00:29:08,080 --> 00:29:11,120
don't like is javascript

808
00:29:11,120 --> 00:29:13,120
javascript is just not very friendly

809
00:29:13,120 --> 00:29:15,360
which is why my third methodology is

810
00:29:15,360 --> 00:29:18,320
using python

811
00:29:18,320 --> 00:29:19,760
so

812
00:29:19,760 --> 00:29:22,000
it's really easy to use python with

813
00:29:22,000 --> 00:29:23,120
frida

814
00:29:23,120 --> 00:29:24,720
all you have to do is install the python

815
00:29:24,720 --> 00:29:26,559
binding so you can say pip3 install

816
00:29:26,559 --> 00:29:27,840
frida and now you have the python

817
00:29:27,840 --> 00:29:29,200
bindings and you can do everything you

818
00:29:29,200 --> 00:29:31,679
do in freeda with python

819
00:29:31,679 --> 00:29:33,360
i really like it because i don't like

820
00:29:33,360 --> 00:29:35,520
writing javascript so i feel like i can

821
00:29:35,520 --> 00:29:37,520
run my javascript files from python and

822
00:29:37,520 --> 00:29:38,799
then i can just iterate a little bit

823
00:29:38,799 --> 00:29:41,919
faster you can also pass data back to

824
00:29:41,919 --> 00:29:44,480
python and continue to operate on it so

825
00:29:44,480 --> 00:29:46,159
something that's really frustrating for

826
00:29:46,159 --> 00:29:49,520
me is especially in object

827
00:29:49,520 --> 00:29:52,080
javascript it has all these objects and

828
00:29:52,080 --> 00:29:53,840
you're like what is the type of this

829
00:29:53,840 --> 00:29:55,200
data and they're just like it's an

830
00:29:55,200 --> 00:29:57,279
object and that's not useful at all so

831
00:29:57,279 --> 00:29:58,480
python gives you a little bit more

832
00:29:58,480 --> 00:30:00,320
verbose type information so it's just

833
00:30:00,320 --> 00:30:03,440
better for me to pass it back

834
00:30:03,440 --> 00:30:05,440
a special thanks to my co-worker ryan

835
00:30:05,440 --> 00:30:07,279
grangenet because he's really good at

836
00:30:07,279 --> 00:30:10,159
javascript and i wanted to have a cooler

837
00:30:10,159 --> 00:30:12,640
demo so he helped me with that

838
00:30:12,640 --> 00:30:16,000
so special thanks brian

839
00:30:16,000 --> 00:30:17,120
all right

840
00:30:17,120 --> 00:30:19,360
so now i'm going to show you some python

841
00:30:19,360 --> 00:30:21,360
scripts

842
00:30:21,360 --> 00:30:24,080
that you can use

843
00:30:25,760 --> 00:30:27,919
all right so this script is pretty basic

844
00:30:27,919 --> 00:30:29,840
it's like one of the boilerplate ones um

845
00:30:29,840 --> 00:30:32,080
and i just modified it to connect to one

846
00:30:32,080 --> 00:30:33,279
that i

847
00:30:33,279 --> 00:30:34,840
was using

848
00:30:34,840 --> 00:30:39,279
so remember before we were doing frida

849
00:30:39,279 --> 00:30:42,000
u you have to do a bunch of other things

850
00:30:42,000 --> 00:30:43,840
in python to connect to it so you have

851
00:30:43,840 --> 00:30:44,559
to

852
00:30:44,559 --> 00:30:46,240
get the device manager

853
00:30:46,240 --> 00:30:47,760
actually connect to the device enumerate

854
00:30:47,760 --> 00:30:51,200
the processes on the device um

855
00:30:51,200 --> 00:30:54,240
get usb device but this

856
00:30:54,240 --> 00:30:56,480
you can just read your script in uh with

857
00:30:56,480 --> 00:30:58,559
python and then you

858
00:30:58,559 --> 00:30:59,440
create

859
00:30:59,440 --> 00:31:01,120
and load your script and it so it's

860
00:31:01,120 --> 00:31:02,799
pretty easy this is like

861
00:31:02,799 --> 00:31:05,600
all boilerplate so what you can do is

862
00:31:05,600 --> 00:31:07,120
take your script that you wrote and

863
00:31:07,120 --> 00:31:08,159
remember this is the one that i was

864
00:31:08,159 --> 00:31:10,000
copying facing before but now it's being

865
00:31:10,000 --> 00:31:12,000
loaded by python

866
00:31:12,000 --> 00:31:14,240
so to show you that it's the same

867
00:31:14,240 --> 00:31:17,440
i can say python3

868
00:31:17,440 --> 00:31:19,440
enumerate modules

869
00:31:19,440 --> 00:31:20,720
oh and then you have to give it a

870
00:31:20,720 --> 00:31:23,039
process like you do with frida so we

871
00:31:23,039 --> 00:31:25,039
were doing bluetooth d before so i'm

872
00:31:25,039 --> 00:31:28,640
going to do bluetooth d again

873
00:31:29,039 --> 00:31:30,880
and you can see it printed out the same

874
00:31:30,880 --> 00:31:32,480
thing

875
00:31:32,480 --> 00:31:34,720
so

876
00:31:34,960 --> 00:31:37,039
that's interesting but

877
00:31:37,039 --> 00:31:38,480
we want to print out the data with

878
00:31:38,480 --> 00:31:41,440
python not with javascript so what i'm

879
00:31:41,440 --> 00:31:43,679
going to do instead is comment out this

880
00:31:43,679 --> 00:31:44,880
console

881
00:31:44,880 --> 00:31:47,039
and use this function called send and

882
00:31:47,039 --> 00:31:50,640
this will send my data over to python

883
00:31:50,640 --> 00:31:52,880
but then you have to receive the data

884
00:31:52,880 --> 00:31:55,440
also in python so that's where this on

885
00:31:55,440 --> 00:31:57,279
message comes in so you can see there's

886
00:31:57,279 --> 00:31:58,159
this

887
00:31:58,159 --> 00:32:00,320
on message callback function which

888
00:32:00,320 --> 00:32:02,399
allows you to pass data from javascript

889
00:32:02,399 --> 00:32:04,640
to python

890
00:32:04,640 --> 00:32:06,960
it passes it through a dictionary so you

891
00:32:06,960 --> 00:32:09,120
can just pass

892
00:32:09,120 --> 00:32:11,360
message type equal send and then you

893
00:32:11,360 --> 00:32:14,320
collect the payload from that dictionary

894
00:32:14,320 --> 00:32:15,519
and you can print it so i'm going to

895
00:32:15,519 --> 00:32:17,519
print out the same thing but from

896
00:32:17,519 --> 00:32:18,799
python

897
00:32:18,799 --> 00:32:22,480
instead of printing from javascript

898
00:32:22,480 --> 00:32:24,080
okay so now you've seen me print the

899
00:32:24,080 --> 00:32:25,600
modules like eight times and you're

900
00:32:25,600 --> 00:32:27,039
probably bored

901
00:32:27,039 --> 00:32:28,240
so let me show you something a little

902
00:32:28,240 --> 00:32:29,919
more interesting

903
00:32:29,919 --> 00:32:33,679
i'm going to show you how to dump memory

904
00:32:33,679 --> 00:32:38,240
so this is almost the same python script

905
00:32:38,240 --> 00:32:39,440
but this

906
00:32:39,440 --> 00:32:43,840
is connected to a different

907
00:32:44,240 --> 00:32:47,039
frida script

908
00:32:47,519 --> 00:32:49,919
this one

909
00:32:49,919 --> 00:32:52,399
and so you can see again i'm printing

910
00:32:52,399 --> 00:32:54,320
this

911
00:32:54,320 --> 00:32:56,640
data that's being sent um but everything

912
00:32:56,640 --> 00:32:59,200
else here is the same as it was before

913
00:32:59,200 --> 00:33:00,960
this is what's changed and this is why i

914
00:33:00,960 --> 00:33:03,519
don't like javascript because this what

915
00:33:03,519 --> 00:33:05,600
is this

916
00:33:05,600 --> 00:33:08,080
so this is why you want to take your

917
00:33:08,080 --> 00:33:10,000
all your bytes and pass it back all of

918
00:33:10,000 --> 00:33:11,840
your like data and pass it back to

919
00:33:11,840 --> 00:33:13,440
python because i don't know what to do

920
00:33:13,440 --> 00:33:14,880
with this this was very hard this is

921
00:33:14,880 --> 00:33:16,640
what i needed ryan's help because i was

922
00:33:16,640 --> 00:33:18,720
like what is happening here like it kept

923
00:33:18,720 --> 00:33:20,559
trying to print it out as like this hex

924
00:33:20,559 --> 00:33:22,080
dump and i was like i just want the

925
00:33:22,080 --> 00:33:23,840
bytes i don't want

926
00:33:23,840 --> 00:33:27,120
ascii what is going on here so

927
00:33:27,120 --> 00:33:29,120
we love python we love doing things in

928
00:33:29,120 --> 00:33:30,640
python so

929
00:33:30,640 --> 00:33:32,720
once you parse all of this and

930
00:33:32,720 --> 00:33:34,559
do all this craziness in javascript you

931
00:33:34,559 --> 00:33:36,159
can just send it back

932
00:33:36,159 --> 00:33:37,519
and get what you need

933
00:33:37,519 --> 00:33:39,600
then once you have a string of bytes you

934
00:33:39,600 --> 00:33:41,440
can do so much more

935
00:33:41,440 --> 00:33:43,279
so on python you already have access to

936
00:33:43,279 --> 00:33:45,039
all these libraries you have capstone if

937
00:33:45,039 --> 00:33:48,240
you want to disassemble you have um

938
00:33:48,240 --> 00:33:49,840
all the representation things if you

939
00:33:49,840 --> 00:33:51,360
want to like change it to bytes or

940
00:33:51,360 --> 00:33:53,120
something so

941
00:33:53,120 --> 00:33:55,519
this is why i definitely recommend

942
00:33:55,519 --> 00:33:58,960
trying to move back from javascript into

943
00:33:58,960 --> 00:34:01,279
python

944
00:34:01,279 --> 00:34:04,279
so

945
00:34:11,599 --> 00:34:14,239
much better that's a lot better than

946
00:34:14,239 --> 00:34:16,879
my original one was like just printing

947
00:34:16,879 --> 00:34:18,960
out all these bites and it was not

948
00:34:18,960 --> 00:34:21,760
useful at all so i definitely recommend

949
00:34:21,760 --> 00:34:26,320
trying to use python to pass data back

950
00:34:28,719 --> 00:34:30,959
okay

951
00:34:33,679 --> 00:34:35,839
so the last thing i want to show you um

952
00:34:35,839 --> 00:34:37,679
are some hot tool tips that i've learned

953
00:34:37,679 --> 00:34:40,399
some from some of my friends and peers

954
00:34:40,399 --> 00:34:42,159
in the industry who are part of the

955
00:34:42,159 --> 00:34:44,079
frida community

956
00:34:44,079 --> 00:34:46,000
so the first thing that's

957
00:34:46,000 --> 00:34:47,760
i saw on twitter so i recommend

958
00:34:47,760 --> 00:34:49,760
following frida on twitter um

959
00:34:49,760 --> 00:34:51,918
exploitable added this as a pull request

960
00:34:51,918 --> 00:34:54,560
because it's open source you can do case

961
00:34:54,560 --> 00:34:57,040
insensitive searching which you're like

962
00:34:57,040 --> 00:34:59,200
okay like is that really like that

963
00:34:59,200 --> 00:35:01,359
interesting but it is because you can

964
00:35:01,359 --> 00:35:04,240
actually access so many more functions

965
00:35:04,240 --> 00:35:06,320
i really like using free to trace and i

966
00:35:06,320 --> 00:35:08,240
like doing this actuation based

967
00:35:08,240 --> 00:35:10,160
searching where i'm trying to actually

968
00:35:10,160 --> 00:35:11,839
run something and see the function

969
00:35:11,839 --> 00:35:13,920
that's triggered and figure out how to

970
00:35:13,920 --> 00:35:15,440
trigger it and why it's triggered and

971
00:35:15,440 --> 00:35:17,040
what the call chain is

972
00:35:17,040 --> 00:35:18,800
but if i want to do that i need to make

973
00:35:18,800 --> 00:35:20,560
sure that i get full coverage because i

974
00:35:20,560 --> 00:35:22,160
might be triggering some function that

975
00:35:22,160 --> 00:35:23,760
like really doesn't matter in this other

976
00:35:23,760 --> 00:35:25,520
really interesting function or if i'm

977
00:35:25,520 --> 00:35:27,520
not hooking enough functions i might

978
00:35:27,520 --> 00:35:29,599
think that nothing is being triggered

979
00:35:29,599 --> 00:35:32,640
when really something is being triggered

980
00:35:32,640 --> 00:35:35,200
so as an example i'm going to show you

981
00:35:35,200 --> 00:35:37,040
free to trace with this case sensitive

982
00:35:37,040 --> 00:35:40,640
and how many more functions i can get

983
00:35:40,640 --> 00:35:42,240
just by using

984
00:35:42,240 --> 00:35:45,839
this case insensitive

985
00:35:47,599 --> 00:35:50,560
flag okay

986
00:35:51,200 --> 00:35:52,720
oh also

987
00:35:52,720 --> 00:35:54,640
do not copy and paste into the command

988
00:35:54,640 --> 00:35:56,560
line because rita

989
00:35:56,560 --> 00:35:59,599
will complain and you won't know why

990
00:35:59,599 --> 00:36:02,720
all right so let me show you first

991
00:36:02,720 --> 00:36:04,960
um oh no i did it again let me just

992
00:36:04,960 --> 00:36:07,960
retype

993
00:36:14,800 --> 00:36:15,920
i'll just

994
00:36:15,920 --> 00:36:17,200
i

995
00:36:17,200 --> 00:36:19,280
star

996
00:36:19,280 --> 00:36:22,280
location

997
00:36:27,359 --> 00:36:29,599
all right so it's connecting and i got

998
00:36:29,599 --> 00:36:33,280
85 functions that's that's kind of cool

999
00:36:33,280 --> 00:36:34,400
that's okay

1000
00:36:34,400 --> 00:36:39,480
um so if i do this slash i

1001
00:36:40,960 --> 00:36:42,480
i get 94 functions and you're like all

1002
00:36:42,480 --> 00:36:44,400
right like that's that's pretty good so

1003
00:36:44,400 --> 00:36:46,079
what if we look at

1004
00:36:46,079 --> 00:36:48,720
objective c

1005
00:36:49,440 --> 00:36:51,200
so this would be

1006
00:36:51,200 --> 00:36:53,760
star for the plus minus

1007
00:36:53,760 --> 00:36:57,040
and then you need to start again for the

1008
00:36:57,040 --> 00:37:00,320
class name and then star

1009
00:37:00,320 --> 00:37:02,640
location

1010
00:37:02,640 --> 00:37:04,400
and then

1011
00:37:04,400 --> 00:37:07,400
close

1012
00:37:09,839 --> 00:37:11,680
so this one i get 506 functions that's

1013
00:37:11,680 --> 00:37:12,720
pretty good and that's why you want to

1014
00:37:12,720 --> 00:37:14,800
look at both objective c and regular

1015
00:37:14,800 --> 00:37:16,800
functions because you might actually be

1016
00:37:16,800 --> 00:37:18,400
using an objective c function and not a

1017
00:37:18,400 --> 00:37:21,720
regular function

1018
00:37:23,200 --> 00:37:25,200
now let's add that case insensitive flag

1019
00:37:25,200 --> 00:37:28,078
which is interesting

1020
00:37:28,720 --> 00:37:30,960
and i get 660 that's like over 100 and

1021
00:37:30,960 --> 00:37:31,760
more

1022
00:37:31,760 --> 00:37:33,520
um so that's i really like using the

1023
00:37:33,520 --> 00:37:35,280
case and sensitive searching

1024
00:37:35,280 --> 00:37:37,280
um because especially like let's say you

1025
00:37:37,280 --> 00:37:39,359
have a typo like you will not hook the

1026
00:37:39,359 --> 00:37:40,480
function that you think you're hooking

1027
00:37:40,480 --> 00:37:42,160
you'll miss it and then you won't be

1028
00:37:42,160 --> 00:37:44,079
able to do all those other things like

1029
00:37:44,079 --> 00:37:45,680
putting a back trace examining the

1030
00:37:45,680 --> 00:37:47,200
arguments so you really want to make

1031
00:37:47,200 --> 00:37:48,839
sure that you get as much coverage as

1032
00:37:48,839 --> 00:37:51,280
possible when you're trying to find that

1033
00:37:51,280 --> 00:37:54,240
needle in the haystack

1034
00:37:54,720 --> 00:37:56,000
all right

1035
00:37:56,000 --> 00:37:58,320
the next thing i actually just

1036
00:37:58,320 --> 00:38:00,160
learned this last week and i had to add

1037
00:38:00,160 --> 00:38:01,119
it

1038
00:38:01,119 --> 00:38:03,680
thank you dr jessica classen

1039
00:38:03,680 --> 00:38:06,400
she did a little like presentation where

1040
00:38:06,400 --> 00:38:07,839
she was showing everybody her

1041
00:38:07,839 --> 00:38:09,520
methodologies

1042
00:38:09,520 --> 00:38:11,520
on how she uses frida and she taught me

1043
00:38:11,520 --> 00:38:13,760
this no pause flag which is pretty

1044
00:38:13,760 --> 00:38:14,800
awesome

1045
00:38:14,800 --> 00:38:16,320
um because

1046
00:38:16,320 --> 00:38:18,240
before i was complaining like oh when

1047
00:38:18,240 --> 00:38:19,920
i'm trying to use frida i have to like

1048
00:38:19,920 --> 00:38:21,599
disconnect and then reconnect and

1049
00:38:21,599 --> 00:38:23,040
disconnect and that's why i like using

1050
00:38:23,040 --> 00:38:25,599
python but this no pause flag is awesome

1051
00:38:25,599 --> 00:38:28,079
because i actually don't have to do that

1052
00:38:28,079 --> 00:38:30,320
so

1053
00:38:31,680 --> 00:38:34,000
sofrita

1054
00:38:34,000 --> 00:38:35,680
dash u

1055
00:38:35,680 --> 00:38:37,599
um let me connect to bluetooth d because

1056
00:38:37,599 --> 00:38:39,040
that's

1057
00:38:39,040 --> 00:38:41,359
faster

1058
00:38:41,359 --> 00:38:43,040
and then

1059
00:38:43,040 --> 00:38:43,680
dash l

1060
00:38:43,680 --> 00:38:45,839
[Music]

1061
00:38:45,839 --> 00:38:47,119
no

1062
00:38:47,119 --> 00:38:49,520
pause

1063
00:38:54,160 --> 00:38:56,240
all right

1064
00:38:56,240 --> 00:39:00,439
so now that i'm connected to this

1065
00:39:01,680 --> 00:39:04,560
i can change this to like module name

1066
00:39:04,560 --> 00:39:06,000
and module

1067
00:39:06,000 --> 00:39:07,599
base let's say i want all the base

1068
00:39:07,599 --> 00:39:09,599
addresses to print so it just makes it a

1069
00:39:09,599 --> 00:39:11,040
lot easier because you instead of having

1070
00:39:11,040 --> 00:39:14,079
to be in the command line you can just

1071
00:39:14,079 --> 00:39:15,920
modify this function

1072
00:39:15,920 --> 00:39:17,280
so i really like that that was a really

1073
00:39:17,280 --> 00:39:18,640
awesome thing that i learned so i'm

1074
00:39:18,640 --> 00:39:21,040
probably going to be using the cli more

1075
00:39:21,040 --> 00:39:22,079
now

1076
00:39:22,079 --> 00:39:24,880
thank you jessica

1077
00:39:25,839 --> 00:39:27,520
and then the last thing that i learned

1078
00:39:27,520 --> 00:39:28,400
um

1079
00:39:28,400 --> 00:39:30,320
was how to hook an ephemeral process

1080
00:39:30,320 --> 00:39:32,640
which was a laundry um they recently

1081
00:39:32,640 --> 00:39:35,280
added this this is uh still work in

1082
00:39:35,280 --> 00:39:38,160
progress from free to 15. so

1083
00:39:38,160 --> 00:39:40,000
if you try it um there still might be

1084
00:39:40,000 --> 00:39:42,079
some bugs i tried it and it was like hit

1085
00:39:42,079 --> 00:39:44,240
or miss depending on the process

1086
00:39:44,240 --> 00:39:46,320
and this comes into play again with that

1087
00:39:46,320 --> 00:39:48,970
zero click exploit if you read through

1088
00:39:48,970 --> 00:39:50,160
[Music]

1089
00:39:50,160 --> 00:39:52,320
um the amnesty international

1090
00:39:52,320 --> 00:39:53,760
or the citizen lab or one of those

1091
00:39:53,760 --> 00:39:55,920
reports you'll see that there's this

1092
00:39:55,920 --> 00:39:58,880
weird process called i am transfer agent

1093
00:39:58,880 --> 00:40:00,960
that's one of the core

1094
00:40:00,960 --> 00:40:02,079
functions

1095
00:40:02,079 --> 00:40:04,079
um in that call chain

1096
00:40:04,079 --> 00:40:06,640
and you actually can't connect to it and

1097
00:40:06,640 --> 00:40:08,319
it's because it's one of these ephemeral

1098
00:40:08,319 --> 00:40:10,880
processes so it's constantly respawning

1099
00:40:10,880 --> 00:40:12,400
over and over again and so you can't

1100
00:40:12,400 --> 00:40:14,800
hook it so they use this thing called

1101
00:40:14,800 --> 00:40:17,680
spawn gating and with the w flag you can

1102
00:40:17,680 --> 00:40:20,480
do it and you have to pass the bundle id

1103
00:40:20,480 --> 00:40:22,319
and then dash i open

1104
00:40:22,319 --> 00:40:23,839
and then that will create kind of like

1105
00:40:23,839 --> 00:40:24,960
an open

1106
00:40:24,960 --> 00:40:25,839
hook

1107
00:40:25,839 --> 00:40:28,000
and it waits for the process and then it

1108
00:40:28,000 --> 00:40:31,119
catches it once it runs so

1109
00:40:31,119 --> 00:40:33,359
it's a work in progress i've tried it

1110
00:40:33,359 --> 00:40:35,440
and um there are still like some issues

1111
00:40:35,440 --> 00:40:36,240
but i

1112
00:40:36,240 --> 00:40:38,079
you know i really think that it's a cool

1113
00:40:38,079 --> 00:40:40,000
thing because i've run into a femoral

1114
00:40:40,000 --> 00:40:41,520
process before and i'm like i can't

1115
00:40:41,520 --> 00:40:42,960
access this like how am i supposed to

1116
00:40:42,960 --> 00:40:46,160
hook this if it keeps dying

1117
00:40:46,160 --> 00:40:47,359
so i'm kind of looking forward to

1118
00:40:47,359 --> 00:40:51,078
updates on that

1119
00:40:52,240 --> 00:40:54,000
all right so

1120
00:40:54,000 --> 00:40:56,319
in conclusion

1121
00:40:56,319 --> 00:40:58,640
frida is free so that's why you should

1122
00:40:58,640 --> 00:41:01,520
use it it is also open source so if

1123
00:41:01,520 --> 00:41:03,760
something is broken uh make a ticket or

1124
00:41:03,760 --> 00:41:06,400
make a contribution via github

1125
00:41:06,400 --> 00:41:09,200
it's also easy to use at least i hope

1126
00:41:09,200 --> 00:41:12,640
you think that it's easy to use

1127
00:41:14,800 --> 00:41:15,839
so

1128
00:41:15,839 --> 00:41:17,680
if you have any questions i think we

1129
00:41:17,680 --> 00:41:20,240
have some time or you can talk to me in

1130
00:41:20,240 --> 00:41:23,560
discord or you can email me christine

1131
00:41:23,560 --> 00:41:25,119
herhackspodcast.com

1132
00:41:25,119 --> 00:41:28,800
or you can message me on twitter

1133
00:41:32,720 --> 00:41:34,800
first one can you trace c and objective

1134
00:41:34,800 --> 00:41:37,599
c at the same time

1135
00:41:37,599 --> 00:41:41,119
oh i don't think so

1136
00:41:46,880 --> 00:41:49,520
yes i have to get it release reviewed

1137
00:41:49,520 --> 00:41:52,480
but yes i can do i can definitely do

1138
00:41:52,480 --> 00:41:54,640
that

1139
00:42:00,400 --> 00:42:02,960
yeah oh my

1140
00:42:12,400 --> 00:42:14,240
oh i don't know

1141
00:42:14,240 --> 00:42:16,240
anything about their security device

1142
00:42:16,240 --> 00:42:17,440
program

1143
00:42:17,440 --> 00:42:18,640
um

1144
00:42:18,640 --> 00:42:21,040
so yeah i guess it depends um

1145
00:42:21,040 --> 00:42:23,200
if the security device is debuggable

1146
00:42:23,200 --> 00:42:26,079
with like xcode then maybe because there

1147
00:42:26,079 --> 00:42:28,079
is a way to use freda i didn't really

1148
00:42:28,079 --> 00:42:29,599
want to demo it because i don't really

1149
00:42:29,599 --> 00:42:31,440
use it for that and so i was like well i

1150
00:42:31,440 --> 00:42:32,800
could do this but like i don't really

1151
00:42:32,800 --> 00:42:34,640
use it this way um and that's more for

1152
00:42:34,640 --> 00:42:37,440
like app debugging so if you have a mac

1153
00:42:37,440 --> 00:42:39,040
and you have xcode there's like this

1154
00:42:39,040 --> 00:42:41,040
thing called debug server and you can

1155
00:42:41,040 --> 00:42:43,200
use frida it's kind of the same way that

1156
00:42:43,200 --> 00:42:46,960
you can write test apps for your device

1157
00:42:46,960 --> 00:42:47,839
and

1158
00:42:47,839 --> 00:42:49,839
not have to jailbreak it you can utilize

1159
00:42:49,839 --> 00:42:52,000
that same thing and use freda on like a

1160
00:42:52,000 --> 00:42:54,400
non-jailbroken device but for native

1161
00:42:54,400 --> 00:42:55,520
processes

1162
00:42:55,520 --> 00:42:57,839
you have to jailbreak it so the security

1163
00:42:57,839 --> 00:43:00,720
device if it's similar to production

1164
00:43:00,720 --> 00:43:02,800
then maybe

1165
00:43:02,800 --> 00:43:04,240
that'd be cool yeah hey if you get a

1166
00:43:04,240 --> 00:43:05,680
security device

1167
00:43:05,680 --> 00:43:08,079
i volunteer to take a look at it

1168
00:43:08,079 --> 00:43:11,480
hook me up

1169
00:43:17,520 --> 00:43:19,599
you

