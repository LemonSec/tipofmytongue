1
00:00:00,659 --> 00:00:03,559
bye

2
00:00:08,540 --> 00:00:11,820
so welcome everyone I have a little

3
00:00:11,820 --> 00:00:14,700
prologue before my presentation starts

4
00:00:14,700 --> 00:00:18,300
and it's kind of related to my talk and

5
00:00:18,300 --> 00:00:21,800
it might sound familiar

6
00:00:21,840 --> 00:00:23,820
the word is changed

7
00:00:23,820 --> 00:00:26,160
I feel it in the sandbox

8
00:00:26,160 --> 00:00:28,859
I feel it in the entitlements

9
00:00:28,859 --> 00:00:32,660
I smell it in the camera

10
00:00:34,399 --> 00:00:39,680
only if he will live now who remember it

11
00:00:41,160 --> 00:00:43,620
it began with the forging of the great

12
00:00:43,620 --> 00:00:46,699
privacy rules

13
00:00:46,980 --> 00:00:49,700
three were given to the root user

14
00:00:49,700 --> 00:00:55,140
Immortal advises fairest of all beings

15
00:00:55,140 --> 00:00:57,300
it's great people and clients of the

16
00:00:57,300 --> 00:00:59,160
upper spaceship

17
00:00:59,160 --> 00:01:00,480
and nine

18
00:01:00,480 --> 00:01:02,520
nine rules were gifted to Upper

19
00:01:02,520 --> 00:01:05,640
processes which above all as desire

20
00:01:05,640 --> 00:01:07,500
power

21
00:01:07,500 --> 00:01:10,080
for within these rules Force bound the

22
00:01:10,080 --> 00:01:13,260
strength and we to govern privacy

23
00:01:13,260 --> 00:01:16,500
but they were all of them deceived

24
00:01:16,500 --> 00:01:19,200
for another rule was made

25
00:01:19,200 --> 00:01:21,720
in the land of Cupertino in the fires of

26
00:01:21,720 --> 00:01:24,180
Intel CPUs

27
00:01:24,180 --> 00:01:28,080
the dark lord privacy forged in secret a

28
00:01:28,080 --> 00:01:31,020
master rule to control all others and

29
00:01:31,020 --> 00:01:33,060
into it is true he put his will to

30
00:01:33,060 --> 00:01:35,520
dominate all processes

31
00:01:35,520 --> 00:01:38,579
one rule through them all

32
00:01:38,579 --> 00:01:41,280
One By One The freelance of Mac OS fair

33
00:01:41,280 --> 00:01:43,920
to the power of the rule

34
00:01:43,920 --> 00:01:46,979
but there were some who resisted

35
00:01:46,979 --> 00:01:49,560
the last Alliance of Legacy software

36
00:01:49,560 --> 00:01:51,720
disabled Library validation and Bug

37
00:01:51,720 --> 00:01:53,880
Hunters

38
00:01:53,880 --> 00:01:57,600
marched against the armies of DCC

39
00:01:57,600 --> 00:02:01,640
and on the slopes of air compaton

40
00:02:02,579 --> 00:02:06,000
they vote for the freedom of Mac OS

41
00:02:06,000 --> 00:02:09,598
so with that uh

42
00:02:09,598 --> 00:02:12,720
let me start my presentation about the

43
00:02:12,720 --> 00:02:15,360
Achilles heel of endpoint security which

44
00:02:15,360 --> 00:02:18,959
is in secret at PCC talk uh at the end

45
00:02:18,959 --> 00:02:21,000
then we will see why and how it's

46
00:02:21,000 --> 00:02:23,040
related to privacy

47
00:02:23,040 --> 00:02:25,800
so few words about myself I'm currently

48
00:02:25,800 --> 00:02:28,200
working at offensive security and I'm

49
00:02:28,200 --> 00:02:30,720
the lead content developer for our Mac

50
00:02:30,720 --> 00:02:33,420
OS control bypasses training

51
00:02:33,420 --> 00:02:36,599
I used to be a red and blue teamer I do

52
00:02:36,599 --> 00:02:39,720
Macos buck hunting in my free time I

53
00:02:39,720 --> 00:02:41,580
married have two kids and I would like

54
00:02:41,580 --> 00:02:44,060
to do trade running

55
00:02:44,060 --> 00:02:47,580
so if you follow me for Macos stuff you

56
00:02:47,580 --> 00:02:50,400
will notice that I'm using Twitter as

57
00:02:50,400 --> 00:02:53,180
Instagram photonic so

58
00:02:53,180 --> 00:02:55,739
I will briefly talk about the endpoint

59
00:02:55,739 --> 00:02:58,739
security framework then briefly talk

60
00:02:58,739 --> 00:03:00,540
about how we install an endpoint

61
00:03:00,540 --> 00:03:01,980
security client

62
00:03:01,980 --> 00:03:05,120
and then we start to go through various

63
00:03:05,120 --> 00:03:08,940
the first cve and then we will see how

64
00:03:08,940 --> 00:03:11,879
Apple fixed it how I bypassed it how

65
00:03:11,879 --> 00:03:13,860
they fix it again how I bypassed it

66
00:03:13,860 --> 00:03:17,239
again and ultimately the story went on

67
00:03:17,239 --> 00:03:19,980
and we will see how this whole story

68
00:03:19,980 --> 00:03:23,400
evolved uh into something

69
00:03:23,400 --> 00:03:26,400
and and at the very end I will talk

70
00:03:26,400 --> 00:03:28,739
about the full disk access

71
00:03:28,739 --> 00:03:31,379
so endpoint security uh just a really

72
00:03:31,379 --> 00:03:34,680
brief overview Scott and I gave a very

73
00:03:34,680 --> 00:03:37,099
good obts talk a couple of years ago

74
00:03:37,099 --> 00:03:39,599
reviewing the entire framework

75
00:03:39,599 --> 00:03:42,840
uh it has many many building blocks it

76
00:03:42,840 --> 00:03:45,180
has a canal extension as a base

77
00:03:45,180 --> 00:03:50,340
which is tied to the Mac F the mandatory

78
00:03:50,340 --> 00:03:53,220
Access Control framework then obviously

79
00:03:53,220 --> 00:03:56,879
it has a client-side API a dialib the

80
00:03:56,879 --> 00:03:59,760
leave endpoint security dialib which we

81
00:03:59,760 --> 00:04:01,500
can use from our endpoint security

82
00:04:01,500 --> 00:04:03,060
client

83
00:04:03,060 --> 00:04:05,340
there is also the system extension

84
00:04:05,340 --> 00:04:08,159
framework which is basically used for

85
00:04:08,159 --> 00:04:10,080
installing and uninstalling a system

86
00:04:10,080 --> 00:04:13,220
extension we don't have to use that

87
00:04:13,220 --> 00:04:16,380
it's really only in the case if our

88
00:04:16,380 --> 00:04:18,418
endpoint security client runs as a

89
00:04:18,418 --> 00:04:19,978
system extension

90
00:04:19,978 --> 00:04:23,220
and then there is the CIS XD the system

91
00:04:23,220 --> 00:04:25,500
extension Daemon which is used for

92
00:04:25,500 --> 00:04:28,020
verifying and installing the system

93
00:04:28,020 --> 00:04:30,840
extension and then we have the endpoint

94
00:04:30,840 --> 00:04:32,400
security demon

95
00:04:32,400 --> 00:04:35,160
that can load uh the system extension

96
00:04:35,160 --> 00:04:38,520
using launch D and we also have a the

97
00:04:38,520 --> 00:04:40,979
system extension CTR which can be used

98
00:04:40,979 --> 00:04:43,919
for some basic controls of the system

99
00:04:43,919 --> 00:04:46,020
extension although

100
00:04:46,020 --> 00:04:48,960
uh it's it's very basic like you cannot

101
00:04:48,960 --> 00:04:50,880
remove a system extension or anything

102
00:04:50,880 --> 00:04:53,400
like that or at least on one trade it

103
00:04:53,400 --> 00:04:54,900
didn't work

104
00:04:54,900 --> 00:04:56,960
uh endpoint security

105
00:04:56,960 --> 00:05:00,300
basically has a very

106
00:05:00,300 --> 00:05:01,680
um

107
00:05:01,680 --> 00:05:03,660
tight relationship with the Mac

108
00:05:03,660 --> 00:05:07,320
framework it has I think about 100 hooks

109
00:05:07,320 --> 00:05:10,259
these days and

110
00:05:10,259 --> 00:05:13,080
they are kind of mapped out to user mode

111
00:05:13,080 --> 00:05:16,740
so all the events you can sign up for in

112
00:05:16,740 --> 00:05:19,440
user mode like the es event type notify

113
00:05:19,440 --> 00:05:22,919
CH root they have an equivalent hook in

114
00:05:22,919 --> 00:05:26,780
Canon space and basically they are tight

115
00:05:26,780 --> 00:05:30,259
together this is like a very simplified

116
00:05:30,259 --> 00:05:32,520
view of this

117
00:05:32,520 --> 00:05:34,620
and I think it's really powerful because

118
00:05:34,620 --> 00:05:37,020
the the Mac framework was never

119
00:05:37,020 --> 00:05:39,060
officially supported by Apple for third

120
00:05:39,060 --> 00:05:41,880
parties although many people use that it

121
00:05:41,880 --> 00:05:45,120
was not supported and we kind of get it

122
00:05:45,120 --> 00:05:48,600
now in user mode and and I think it's

123
00:05:48,600 --> 00:05:51,660
really powerful and a great framework

124
00:05:51,660 --> 00:05:55,740
so how we install a client uh

125
00:05:55,740 --> 00:05:59,220
the one crucial thing for any system

126
00:05:59,220 --> 00:06:00,900
extension or any endpoint security

127
00:06:00,900 --> 00:06:04,080
client is that they have to have full

128
00:06:04,080 --> 00:06:06,840
disk access permissions so that means

129
00:06:06,840 --> 00:06:10,020
that the open system preferences go to

130
00:06:10,020 --> 00:06:13,880
privacy unlock privacy and then finally

131
00:06:13,880 --> 00:06:16,620
Grant full disk access permission to

132
00:06:16,620 --> 00:06:18,240
these

133
00:06:18,240 --> 00:06:21,479
application so it's it's very user

134
00:06:21,479 --> 00:06:24,600
interaction heavy and and I understand

135
00:06:24,600 --> 00:06:27,539
why because it's a very powerful thing

136
00:06:27,539 --> 00:06:31,039
to have to run endpoint Security

137
00:06:31,039 --> 00:06:34,979
application so it can do really anything

138
00:06:34,979 --> 00:06:38,520
on our system so it's understandable

139
00:06:38,520 --> 00:06:41,880
that there is a control behind that

140
00:06:41,880 --> 00:06:44,160
and if you are not providing this

141
00:06:44,160 --> 00:06:47,520
permission to the endpoints security

142
00:06:47,520 --> 00:06:50,220
client it will throw an es new client

143
00:06:50,220 --> 00:06:52,220
result are not permitted

144
00:06:52,220 --> 00:06:55,620
error and basically it cannot register

145
00:06:55,620 --> 00:06:57,120
itself

146
00:06:57,120 --> 00:06:59,100
so for example if we run the process

147
00:06:59,100 --> 00:07:02,280
monitor from terminal and if terminal

148
00:07:02,280 --> 00:07:04,620
doesn't have full disk access

149
00:07:04,620 --> 00:07:07,500
it will throw this error which again

150
00:07:07,500 --> 00:07:09,300
basically means that it lacks TCC

151
00:07:09,300 --> 00:07:11,400
permission

152
00:07:11,400 --> 00:07:15,360
now if we revoke this permission like

153
00:07:15,360 --> 00:07:19,220
the full disk access the client

154
00:07:40,740 --> 00:07:44,400
it is this permission should be hard as

155
00:07:44,400 --> 00:07:46,319
well because if you can easily revoke it

156
00:07:46,319 --> 00:07:48,780
then basically you can easily disabled

157
00:07:48,780 --> 00:07:51,780
and and disarm any security software on

158
00:07:51,780 --> 00:07:53,220
the system

159
00:07:53,220 --> 00:07:55,940
so it should be hard right

160
00:07:55,940 --> 00:08:00,060
turned out that it wasn't that hard

161
00:08:00,060 --> 00:08:04,020
so this is the exploit for the

162
00:08:04,020 --> 00:08:06,360
for the first CV

163
00:08:06,360 --> 00:08:09,419
so let's let's see what happens here

164
00:08:09,419 --> 00:08:12,479
so the user went through all this

165
00:08:12,479 --> 00:08:14,280
authentication opening system

166
00:08:14,280 --> 00:08:16,259
preferences and everything and finally

167
00:08:16,259 --> 00:08:18,960
he's happy running his endpoint security

168
00:08:18,960 --> 00:08:21,720
client and then the attacker comes

169
00:08:21,720 --> 00:08:25,080
as a user like it doesn't have to be

170
00:08:25,080 --> 00:08:27,120
root and runs this command and suddenly

171
00:08:27,120 --> 00:08:30,419
everything is cleared the permission is

172
00:08:30,419 --> 00:08:33,599
revoked and if the attacker Keys the

173
00:08:33,599 --> 00:08:36,899
endpoint security client then

174
00:08:36,899 --> 00:08:41,419
it's done basically bypassed

175
00:08:41,419 --> 00:08:44,640
so you might think that like killing the

176
00:08:44,640 --> 00:08:46,920
endpoint security client will you will

177
00:08:46,920 --> 00:08:49,860
need to have root access but as we heard

178
00:08:49,860 --> 00:08:52,920
many times from voycheck yesterday you

179
00:08:52,920 --> 00:08:55,620
can just ask the client like hey prompt

180
00:08:55,620 --> 00:08:57,420
your password to authenticate and the

181
00:08:57,420 --> 00:08:59,279
client the the user will happily

182
00:08:59,279 --> 00:09:02,880
authenticate we can also find an all day

183
00:09:02,880 --> 00:09:04,800
to elevate our privileges so there are

184
00:09:04,800 --> 00:09:06,899
so many options or if we delivered our

185
00:09:06,899 --> 00:09:09,300
Marvel to a package which can run as

186
00:09:09,300 --> 00:09:11,160
roots often

187
00:09:11,160 --> 00:09:13,740
uh then we are already root anyways so

188
00:09:13,740 --> 00:09:16,620
it's I think having root is not it's a

189
00:09:16,620 --> 00:09:19,140
barrier but not as high as we as you

190
00:09:19,140 --> 00:09:21,740
think about it

191
00:09:21,779 --> 00:09:26,399
so how Apple fixed this uh reset option

192
00:09:26,399 --> 00:09:29,459
okay they said that okay if you now want

193
00:09:29,459 --> 00:09:32,700
to reset an endpoint a full disk access

194
00:09:32,700 --> 00:09:34,860
permission for an endpoint security

195
00:09:34,860 --> 00:09:36,300
client

196
00:09:36,300 --> 00:09:38,820
we need you to authorize it so they

197
00:09:38,820 --> 00:09:40,800
prompt you for a password and if you

198
00:09:40,800 --> 00:09:42,019
don't

199
00:09:42,019 --> 00:09:45,839
authenticate then it will not work so if

200
00:09:45,839 --> 00:09:49,140
you're not clear the the TCC database it

201
00:09:49,140 --> 00:09:52,399
will not clear the permission

202
00:09:53,820 --> 00:09:56,339
it wasn't eligible for a bounty

203
00:09:56,339 --> 00:09:59,120
unfortunately

204
00:09:59,360 --> 00:10:02,760
so let's see how I bypassed it for the

205
00:10:02,760 --> 00:10:04,920
first time

206
00:10:04,920 --> 00:10:07,260
so how this authorization happens really

207
00:10:07,260 --> 00:10:12,420
in PCC util so TCC went on and wanted to

208
00:10:12,420 --> 00:10:16,279
acquire the com apple TCC

209
00:10:16,279 --> 00:10:19,680
utl.admin authorization right and if we

210
00:10:19,680 --> 00:10:21,540
check this authorization right in the

211
00:10:21,540 --> 00:10:24,180
authorization database we will see that

212
00:10:24,180 --> 00:10:27,360
it's authenticate admin known shared so

213
00:10:27,360 --> 00:10:29,519
basically even if you are root you will

214
00:10:29,519 --> 00:10:32,399
be forced to authenticate as an admin

215
00:10:32,399 --> 00:10:34,500
user and you will have to type your

216
00:10:34,500 --> 00:10:36,600
password to authenticate

217
00:10:36,600 --> 00:10:39,000
which is fine

218
00:10:39,000 --> 00:10:41,700
but what if we are root if we are root

219
00:10:41,700 --> 00:10:43,380
already we can

220
00:10:43,380 --> 00:10:45,060
and we assume that we are good because

221
00:10:45,060 --> 00:10:46,800
we need to kill the endpoint security

222
00:10:46,800 --> 00:10:49,560
client we can just edit the database

223
00:10:49,560 --> 00:10:52,260
like if you are authorization database

224
00:10:52,260 --> 00:10:55,260
is is not protected by anything if you

225
00:10:55,260 --> 00:10:58,140
are rude you can change it freely as as

226
00:10:58,140 --> 00:10:59,519
much as you want

227
00:10:59,519 --> 00:11:02,959
so we just edit the rule and say hello

228
00:11:02,959 --> 00:11:06,420
and and then we go back to TCC util and

229
00:11:06,420 --> 00:11:10,640
reset and and done

230
00:11:10,680 --> 00:11:12,800
um

231
00:11:13,160 --> 00:11:15,899
ineligible for about

232
00:11:15,899 --> 00:11:17,760
even more unfortunate

233
00:11:17,760 --> 00:11:21,300
because I really hardly working on this

234
00:11:21,300 --> 00:11:24,180
so how they fix the authorization

235
00:11:24,180 --> 00:11:26,040
problem

236
00:11:26,040 --> 00:11:27,959
you can bypass it if there is no

237
00:11:27,959 --> 00:11:29,519
authorization

238
00:11:29,519 --> 00:11:32,399
to be fair you need to have something

239
00:11:32,399 --> 00:11:35,279
else now so authorization is gone like

240
00:11:35,279 --> 00:11:37,680
completely gone

241
00:11:37,680 --> 00:11:39,660
um now you need to have full disk access

242
00:11:39,660 --> 00:11:43,980
permission uh for terminal or from

243
00:11:43,980 --> 00:11:47,000
wherever you run this is the util

244
00:11:47,000 --> 00:11:52,680
to reset this right so interestingly

245
00:11:52,680 --> 00:11:54,899
there is an interesting thing here how

246
00:11:54,899 --> 00:11:58,500
this is util knows which application has

247
00:11:58,500 --> 00:12:00,740
full disk access

248
00:12:00,740 --> 00:12:04,510
granted it can read the TCC database

249
00:12:04,510 --> 00:12:05,820
[Music]

250
00:12:05,820 --> 00:12:08,339
so it has a com apple private ECC

251
00:12:08,339 --> 00:12:11,220
manager access read entitlement with

252
00:12:11,220 --> 00:12:13,680
specifically permitting it to read who

253
00:12:13,680 --> 00:12:15,560
has full disk access

254
00:12:15,560 --> 00:12:18,540
permission now if you are a player you

255
00:12:18,540 --> 00:12:21,300
can do that if you are not you need to

256
00:12:21,300 --> 00:12:22,760
read Cedric's

257
00:12:22,760 --> 00:12:25,380
post about how you find out if you have

258
00:12:25,380 --> 00:12:26,579
full disk access

259
00:12:26,579 --> 00:12:29,100
or not you you need to do some trickery

260
00:12:29,100 --> 00:12:31,140
there

261
00:12:31,140 --> 00:12:34,560
uh there was also an interesting bug in

262
00:12:34,560 --> 00:12:36,500
TCC util

263
00:12:36,500 --> 00:12:39,959
so what this is YouTube will do is we'll

264
00:12:39,959 --> 00:12:42,920
try to reset every entry line by line

265
00:12:42,920 --> 00:12:45,899
and if it fails to do it because maybe

266
00:12:45,899 --> 00:12:47,779
it doesn't have full disk access right

267
00:12:47,779 --> 00:12:51,180
uh it will fail out and exit so

268
00:12:51,180 --> 00:12:53,639
basically if you don't provide it the

269
00:12:53,639 --> 00:12:57,000
necessary rights it might fail clearing

270
00:12:57,000 --> 00:13:00,060
other entries as well if if it pairs

271
00:13:00,060 --> 00:13:02,279
right away with an endpoint security

272
00:13:02,279 --> 00:13:04,820
client

273
00:13:05,040 --> 00:13:06,779
so this was one

274
00:13:06,779 --> 00:13:09,839
this was a fix

275
00:13:09,839 --> 00:13:12,779
upper Deeds they changed now we will see

276
00:13:12,779 --> 00:13:15,899
at the end but until two days ago I told

277
00:13:15,899 --> 00:13:18,420
that this is the the Final Fix

278
00:13:18,420 --> 00:13:21,779
but how we can still bypass this whole

279
00:13:21,779 --> 00:13:23,399
concept

280
00:13:23,399 --> 00:13:25,680
um I go back to one of my favorite

281
00:13:25,680 --> 00:13:28,980
things tricks mounting

282
00:13:28,980 --> 00:13:32,700
so how does TCC UT know that an

283
00:13:32,700 --> 00:13:34,920
application in the

284
00:13:34,920 --> 00:13:37,620
this an application from the TCC

285
00:13:37,620 --> 00:13:40,380
database is an endpoint security client

286
00:13:40,380 --> 00:13:43,079
like there is no entry related to that

287
00:13:43,079 --> 00:13:45,000
in the database at all

288
00:13:45,000 --> 00:13:48,000
so what it needs to do is go read the

289
00:13:48,000 --> 00:13:50,700
binary from the disk and check if it has

290
00:13:50,700 --> 00:13:52,680
the com F developer endpoint security

291
00:13:52,680 --> 00:13:55,740
client entitlement which means that in

292
00:13:55,740 --> 00:13:57,300
that case it's an endpoint security

293
00:13:57,300 --> 00:13:58,980
client

294
00:13:58,980 --> 00:14:00,260
so

295
00:14:00,260 --> 00:14:05,420
what we can do is Mount over

296
00:14:05,420 --> 00:14:07,860
the the endpoint security client

297
00:14:07,860 --> 00:14:10,500
directory which we can typically do

298
00:14:10,500 --> 00:14:14,040
unless it has some self protection

299
00:14:14,040 --> 00:14:17,880
we Mount over we we mask out the

300
00:14:17,880 --> 00:14:21,300
endpoint security client and then we run

301
00:14:21,300 --> 00:14:23,820
um TCC utsat

302
00:14:23,820 --> 00:14:26,940
and because it will not find the file

303
00:14:26,940 --> 00:14:28,920
it it will think that okay it's not an

304
00:14:28,920 --> 00:14:30,720
endpoint security client and it will

305
00:14:30,720 --> 00:14:34,920
basically clear uh the database

306
00:14:34,920 --> 00:14:38,579
uh I don't know yet

307
00:14:38,579 --> 00:14:41,060
please

308
00:14:42,060 --> 00:14:42,839
um

309
00:14:42,839 --> 00:14:45,019
so another bypass

310
00:14:45,019 --> 00:14:48,600
for this whole idea

311
00:14:48,600 --> 00:14:51,839
so TCC already went through several

312
00:14:51,839 --> 00:14:54,320
evolutions and there are a lot of fixes

313
00:14:54,320 --> 00:14:56,579
in that

314
00:14:56,579 --> 00:15:00,060
what we can do and it worked on Ventura

315
00:15:00,060 --> 00:15:03,300
beta 5 as well

316
00:15:03,300 --> 00:15:06,360
get an old TCC deal

317
00:15:06,360 --> 00:15:08,720
and use that

318
00:15:08,720 --> 00:15:12,420
because all TCC could still clear the

319
00:15:12,420 --> 00:15:14,639
database and it didn't have any of the

320
00:15:14,639 --> 00:15:16,620
checks for full disk access

321
00:15:16,620 --> 00:15:19,980
authorization whatever so just take an

322
00:15:19,980 --> 00:15:23,399
odd one from Big Sur and use that so

323
00:15:23,399 --> 00:15:25,380
here we use we can see on the screen

324
00:15:25,380 --> 00:15:26,639
that we have

325
00:15:26,639 --> 00:15:29,220
two DC duties on the system default and

326
00:15:29,220 --> 00:15:31,860
one I took from Big Sur

327
00:15:31,860 --> 00:15:34,320
the system default for Via network but

328
00:15:34,320 --> 00:15:35,760
the other one

329
00:15:35,760 --> 00:15:37,800
wheel

330
00:15:37,800 --> 00:15:41,240
MV the Apple mobile file Integrity

331
00:15:41,240 --> 00:15:44,579
kernel extension already has some

332
00:15:44,579 --> 00:15:48,440
limitation for which DCC UT you can run

333
00:15:48,440 --> 00:15:52,440
on Mac OS but it wasn't perfect so it's

334
00:15:52,440 --> 00:15:53,880
still out of for some reason I didn't

335
00:15:53,880 --> 00:15:56,220
dig into why you could still run the one

336
00:15:56,220 --> 00:15:58,800
from Big Sur

337
00:15:58,800 --> 00:15:59,519
um

338
00:15:59,519 --> 00:16:01,019
I don't know

339
00:16:01,019 --> 00:16:03,300
please

340
00:16:03,300 --> 00:16:07,019
so finally and this is new stuff so two

341
00:16:07,019 --> 00:16:10,440
days ago I got a notification from Apple

342
00:16:10,440 --> 00:16:12,540
that hey you want to check our latest

343
00:16:12,540 --> 00:16:15,420
beta we fixed everything and I mean

344
00:16:15,420 --> 00:16:17,639
thank you it's it's the very last minute

345
00:16:17,639 --> 00:16:20,100
addition to my talk

346
00:16:20,100 --> 00:16:23,220
um and I was like but what did you did

347
00:16:23,220 --> 00:16:26,459
exactly like okay you fixed it but I

348
00:16:26,459 --> 00:16:29,040
mean in two days it's it's hard to find

349
00:16:29,040 --> 00:16:31,199
what what you didn't talk about luckily

350
00:16:31,199 --> 00:16:32,519
they have doubt

351
00:16:32,519 --> 00:16:37,079
uh with some stuff so I can dig it a

352
00:16:37,079 --> 00:16:39,360
little hopefully it's it's it's a really

353
00:16:39,360 --> 00:16:42,720
good fix now at least it looks like uh

354
00:16:42,720 --> 00:16:43,680
that

355
00:16:43,680 --> 00:16:46,320
so but before I go into the fix

356
00:16:46,320 --> 00:16:48,680
um there is awesome

357
00:16:48,680 --> 00:16:51,720
unintentional fix or or protection in

358
00:16:51,720 --> 00:16:55,639
Ventura so in Ventura TCC has a new

359
00:16:55,639 --> 00:16:59,100
protection it will protect applications

360
00:16:59,100 --> 00:17:02,399
from other applications so your

361
00:17:02,399 --> 00:17:05,220
applications your application cannot

362
00:17:05,220 --> 00:17:07,020
modify

363
00:17:07,020 --> 00:17:10,020
an existing application on the system so

364
00:17:10,020 --> 00:17:12,419
if you try to drop a file or overwrite a

365
00:17:12,419 --> 00:17:14,880
file in another application you need to

366
00:17:14,880 --> 00:17:17,839
have a new TCC permission for that

367
00:17:17,839 --> 00:17:20,699
specifically this TCC service system

368
00:17:20,699 --> 00:17:22,459
policy app bundles

369
00:17:22,459 --> 00:17:25,040
permission and if you don't have that

370
00:17:25,040 --> 00:17:28,760
you cannot modify an application

371
00:17:28,760 --> 00:17:31,440
this includes mounting over an

372
00:17:31,440 --> 00:17:34,500
application so it it kind of solves its

373
00:17:34,500 --> 00:17:37,620
Mount issue unintentionally so this

374
00:17:37,620 --> 00:17:40,500
wasn't a fixed for this specific issue

375
00:17:40,500 --> 00:17:44,039
this was a new security mitigation in in

376
00:17:44,039 --> 00:17:46,320
Monterey and it kind of already

377
00:17:46,320 --> 00:17:50,659
prevented one of the bypasses

378
00:17:51,120 --> 00:17:53,460
um so it protects the es clients from

379
00:17:53,460 --> 00:17:55,860
with messing around

380
00:17:55,860 --> 00:17:59,460
but what the rear fix was like from two

381
00:17:59,460 --> 00:18:02,400
days ago uh what happened

382
00:18:02,400 --> 00:18:05,520
TCC utility is back to square one so

383
00:18:05,520 --> 00:18:08,640
it's it's right there where it started

384
00:18:08,640 --> 00:18:09,740
from

385
00:18:09,740 --> 00:18:12,600
and now the entire

386
00:18:12,600 --> 00:18:16,500
clear or reset logic I've always moved

387
00:18:16,500 --> 00:18:19,020
to the TCC demon

388
00:18:19,020 --> 00:18:21,539
so DC CO2 doesn't do anything anymore

389
00:18:21,539 --> 00:18:25,820
just calling an API and then pccd will

390
00:18:25,820 --> 00:18:29,520
determine what can be reset what not and

391
00:18:29,520 --> 00:18:32,000
then it will do all the checks

392
00:18:32,000 --> 00:18:35,880
uh what the other thing they did now we

393
00:18:35,880 --> 00:18:39,780
have a new TCC permission called the TCC

394
00:18:39,780 --> 00:18:42,720
service endpoint security client so this

395
00:18:42,720 --> 00:18:45,620
means that this is a new TCC permission

396
00:18:45,620 --> 00:18:49,559
marking in the TCC database that this

397
00:18:49,559 --> 00:18:51,120
application is an endpoint security

398
00:18:51,120 --> 00:18:52,440
client

399
00:18:52,440 --> 00:18:55,260
which is nice because it no longer needs

400
00:18:55,260 --> 00:18:57,120
to read it from a disk

401
00:18:57,120 --> 00:18:58,679
uh

402
00:18:58,679 --> 00:19:00,900
now interestingly if we go to system

403
00:19:00,900 --> 00:19:03,480
preferences and privacy this is still

404
00:19:03,480 --> 00:19:05,220
under full disk access

405
00:19:05,220 --> 00:19:08,640
so there is some magic happening behind

406
00:19:08,640 --> 00:19:10,679
the scenes

407
00:19:10,679 --> 00:19:13,200
so the user still see it as a full disk

408
00:19:13,200 --> 00:19:16,440
access but if it's provided for an

409
00:19:16,440 --> 00:19:18,539
endpoint security client in the database

410
00:19:18,539 --> 00:19:21,120
it will be sure it will show up as an

411
00:19:21,120 --> 00:19:24,299
endpoint security client uh See since

412
00:19:24,299 --> 00:19:26,700
some there is some translation happening

413
00:19:26,700 --> 00:19:28,320
here here

414
00:19:28,320 --> 00:19:31,679
I I always fear that there there is a

415
00:19:31,679 --> 00:19:35,160
room for error in this situation but I

416
00:19:35,160 --> 00:19:39,000
hope it they get it right also if you

417
00:19:39,000 --> 00:19:41,340
have an endpoint security client which

418
00:19:41,340 --> 00:19:43,799
runs from the command line

419
00:19:43,799 --> 00:19:46,440
you still Grant full disk access for

420
00:19:46,440 --> 00:19:49,200
like terminal and then you can run your

421
00:19:49,200 --> 00:19:51,240
endpoint security client and in that

422
00:19:51,240 --> 00:19:54,240
case it doesn't have an endpoint

423
00:19:54,240 --> 00:19:58,760
security client uh permission

424
00:19:59,100 --> 00:20:03,320
so this is how it's fixed uh eventually

425
00:20:03,320 --> 00:20:07,280
I think it mitigates all of the issues

426
00:20:07,280 --> 00:20:10,260
at this point

427
00:20:10,260 --> 00:20:13,200
now we will see

428
00:20:13,200 --> 00:20:14,600
but

429
00:20:14,600 --> 00:20:17,940
when I found the very first CV when it

430
00:20:17,940 --> 00:20:21,179
all started so I said TCC utility reset

431
00:20:21,179 --> 00:20:26,100
all so that worked but if I tried TCC UT

432
00:20:26,100 --> 00:20:28,919
reset system policy oil files which is

433
00:20:28,919 --> 00:20:34,140
full disk access it didn't work so

434
00:20:34,140 --> 00:20:35,400
someone

435
00:20:35,400 --> 00:20:37,860
already talked about this problem that

436
00:20:37,860 --> 00:20:41,240
maybe you shouldn't reset or clear

437
00:20:41,240 --> 00:20:44,520
endpoint security permissions so easily

438
00:20:44,520 --> 00:20:47,160
and actually going I started to go back

439
00:20:47,160 --> 00:20:49,140
okay when when this was really

440
00:20:49,140 --> 00:20:52,820
introduced and and I think I found it in

441
00:20:52,820 --> 00:20:57,360
Catalina like 15.4 very I think it was

442
00:20:57,360 --> 00:21:01,320
the first version but it wasn't

443
00:21:01,320 --> 00:21:04,140
working but if we go back to the very

444
00:21:04,140 --> 00:21:06,000
first edition of Catalina so like the

445
00:21:06,000 --> 00:21:08,720
first release you could do TCC

446
00:21:08,720 --> 00:21:12,120
reset system policy or files there so

447
00:21:12,120 --> 00:21:14,299
somewhere in between someone

448
00:21:14,299 --> 00:21:16,799
talked about this that hey this is an

449
00:21:16,799 --> 00:21:19,380
issue and we should do something about

450
00:21:19,380 --> 00:21:20,880
it

451
00:21:20,880 --> 00:21:24,179
so that's when the really first

452
00:21:24,179 --> 00:21:27,660
issue was fixed not properly

453
00:21:27,660 --> 00:21:29,400
but

454
00:21:29,400 --> 00:21:31,740
but it came up

455
00:21:31,740 --> 00:21:33,360
so

456
00:21:33,360 --> 00:21:36,720
how dcute evolved over time

457
00:21:36,720 --> 00:21:39,360
in Catalina at the

458
00:21:39,360 --> 00:21:41,340
when when basically endpoint security

459
00:21:41,340 --> 00:21:44,640
came out TCC util had no restrictions

460
00:21:44,640 --> 00:21:49,500
then at 15.4 tccut started to limit the

461
00:21:49,500 --> 00:21:51,720
use of the system policy or file

462
00:21:51,720 --> 00:21:53,700
commands

463
00:21:53,700 --> 00:21:56,039
and then from Monterey it started to

464
00:21:56,039 --> 00:21:56,880
limit

465
00:21:56,880 --> 00:21:59,039
both the all and the system policy all

466
00:21:59,039 --> 00:22:02,760
files part with authorization

467
00:22:02,760 --> 00:22:05,820
from 12.3

468
00:22:05,820 --> 00:22:08,039
the same but now with the full disk

469
00:22:08,039 --> 00:22:11,940
access requirement and now with Ventura

470
00:22:11,940 --> 00:22:14,760
the logic is moved back to thesis move

471
00:22:14,760 --> 00:22:17,940
to tccd and there are new TCC

472
00:22:17,940 --> 00:22:21,659
permissions for ES clients so I think

473
00:22:21,659 --> 00:22:22,930
this was a nice

474
00:22:22,930 --> 00:22:24,600
[Music]

475
00:22:24,600 --> 00:22:27,900
story here with TCC util

476
00:22:27,900 --> 00:22:30,480
I also want to talk about food disk

477
00:22:30,480 --> 00:22:33,240
access a little bit

478
00:22:33,240 --> 00:22:37,140
it's really becoming one of the absolute

479
00:22:37,140 --> 00:22:40,980
power the the ultimate the rule or well

480
00:22:40,980 --> 00:22:44,760
it's not a rule it's a permission uh but

481
00:22:44,760 --> 00:22:46,700
it's it's really a master permission

482
00:22:46,700 --> 00:22:50,700
when it comes to not just TCC but

483
00:22:50,700 --> 00:22:52,140
everything else

484
00:22:52,140 --> 00:22:54,960
so what it controls today and this might

485
00:22:54,960 --> 00:22:57,659
be not not a complete list this is what

486
00:22:57,659 --> 00:23:00,659
I know about it might be much more so it

487
00:23:00,659 --> 00:23:03,600
controls full access to the uh to the

488
00:23:03,600 --> 00:23:05,700
TCC database at least for the user mode

489
00:23:05,700 --> 00:23:08,760
but if you have uh for disk access you

490
00:23:08,760 --> 00:23:12,480
can also read the the system byte

491
00:23:12,480 --> 00:23:14,039
database

492
00:23:14,039 --> 00:23:16,620
in general it provides You full access

493
00:23:16,620 --> 00:23:21,960
to to every private file of the user

494
00:23:21,960 --> 00:23:25,320
it controls now partially the endpoint

495
00:23:25,320 --> 00:23:27,960
security client registration

496
00:23:27,960 --> 00:23:31,140
it controls the ability to mount an apfs

497
00:23:31,140 --> 00:23:32,400
snapshots

498
00:23:32,400 --> 00:23:35,640
it controls access to some of the data

499
00:23:35,640 --> 00:23:37,860
voids on the system

500
00:23:37,860 --> 00:23:40,200
and it also controls access to like

501
00:23:40,200 --> 00:23:42,539
system administration config files like

502
00:23:42,539 --> 00:23:44,280
sudo Pam

503
00:23:44,280 --> 00:23:48,360
like if you want to change a sudo

504
00:23:48,360 --> 00:23:51,960
file or a pem file you will get a TCC

505
00:23:51,960 --> 00:23:54,179
prompt that hey do you let I don't know

506
00:23:54,179 --> 00:23:55,880
terminal

507
00:23:55,880 --> 00:23:58,919
modify your system administration system

508
00:23:58,919 --> 00:24:01,500
settings or something like that if you

509
00:24:01,500 --> 00:24:03,299
have full disk access

510
00:24:03,299 --> 00:24:06,480
this prompt is gone uh

511
00:24:06,480 --> 00:24:11,220
so it's it's way too powerful and

512
00:24:11,220 --> 00:24:15,299
it it's not but it really feels like a

513
00:24:15,299 --> 00:24:16,380
lightweight

514
00:24:16,380 --> 00:24:19,740
sip but for user mode what a user can

515
00:24:19,740 --> 00:24:23,340
like turn on and off uh easily

516
00:24:23,340 --> 00:24:25,679
and and because of

517
00:24:25,679 --> 00:24:28,200
it controlling so many things I think

518
00:24:28,200 --> 00:24:30,659
this is bad because for convenience

519
00:24:30,659 --> 00:24:33,659
people especially power users will just

520
00:24:33,659 --> 00:24:36,240
say okay I will give terminal food is

521
00:24:36,240 --> 00:24:39,000
access and I'm done and I don't want to

522
00:24:39,000 --> 00:24:40,860
deal with all these prompts all these

523
00:24:40,860 --> 00:24:42,780
permissions whatever

524
00:24:42,780 --> 00:24:46,140
and depending on the application

525
00:24:46,140 --> 00:24:49,020
having full disk access you might be

526
00:24:49,020 --> 00:24:52,080
easily inject code into the application

527
00:24:52,080 --> 00:24:54,960
like with terminal it's really easy you

528
00:24:54,960 --> 00:25:00,360
just edit the zsh RC file or create a

529
00:25:00,360 --> 00:25:03,419
terminal script or whatever and at that

530
00:25:03,419 --> 00:25:06,179
point you run commands in the context of

531
00:25:06,179 --> 00:25:07,380
terminal

532
00:25:07,380 --> 00:25:09,860
and you inherit it uh

533
00:25:09,860 --> 00:25:13,020
all of its permissions and and you get

534
00:25:13,020 --> 00:25:15,960
full disk access I think a much better

535
00:25:15,960 --> 00:25:19,679
way would be to to make more granular

536
00:25:19,679 --> 00:25:24,140
rules so all of this should be split up

537
00:25:24,140 --> 00:25:27,360
to different rules

538
00:25:27,360 --> 00:25:29,039
or permissions

539
00:25:29,039 --> 00:25:31,799
and and I also think that TCC database

540
00:25:31,799 --> 00:25:33,779
should be moved Under full seat

541
00:25:33,779 --> 00:25:37,860
protection uh so like having food disk

542
00:25:37,860 --> 00:25:39,720
access allowing us to

543
00:25:39,720 --> 00:25:42,299
completely controlling uh this database

544
00:25:42,299 --> 00:25:45,299
it's just bad so and it probably should

545
00:25:45,299 --> 00:25:49,020
be only the TCC demon who can modify uh

546
00:25:49,020 --> 00:25:53,220
that file at the that point I also think

547
00:25:53,220 --> 00:25:56,640
that anyone could read the database like

548
00:25:56,640 --> 00:25:59,700
the only risk there is really just some

549
00:25:59,700 --> 00:26:02,039
enumeration you know what's on the

550
00:26:02,039 --> 00:26:04,980
system but there is really no

551
00:26:04,980 --> 00:26:08,039
security implications there with reading

552
00:26:08,039 --> 00:26:10,320
the database so that would be actually a

553
00:26:10,320 --> 00:26:12,419
load

554
00:26:12,419 --> 00:26:13,740
um

555
00:26:13,740 --> 00:26:15,240
that was it

556
00:26:15,240 --> 00:26:16,559
thank you

557
00:26:16,559 --> 00:26:18,678
um

558
00:26:26,220 --> 00:26:28,940
any questions

559
00:26:34,140 --> 00:26:36,840
could you repeat the question uh so the

560
00:26:36,840 --> 00:26:38,279
question was what happens if I delete

561
00:26:38,279 --> 00:26:40,980
the TCC database

562
00:26:40,980 --> 00:26:41,720
um

563
00:26:41,720 --> 00:26:45,539
nothing it will be recreated I think so

564
00:26:45,539 --> 00:26:46,860
I

565
00:26:46,860 --> 00:26:48,480
yes

566
00:26:48,480 --> 00:26:49,559
yes

567
00:26:49,559 --> 00:26:52,860
but normally you you cannot access uh

568
00:26:52,860 --> 00:26:55,140
the database unless you have food disk

569
00:26:55,140 --> 00:26:57,260
access

570
00:27:11,640 --> 00:27:14,520
that's a good question I never dealt

571
00:27:14,520 --> 00:27:17,580
with MDM delivered TCC permissions so I

572
00:27:17,580 --> 00:27:19,440
don't know what happens if you run this

573
00:27:19,440 --> 00:27:22,260
command with uh

574
00:27:22,260 --> 00:27:25,200
since MDM permission I think they are

575
00:27:25,200 --> 00:27:26,940
installed through a profile

576
00:27:26,940 --> 00:27:29,700
I think that profile might be reapplied

577
00:27:29,700 --> 00:27:32,400
and so it's not being cleared but this

578
00:27:32,400 --> 00:27:36,140
is a guess so I I don't know

579
00:27:37,020 --> 00:27:39,500
yes

580
00:28:03,860 --> 00:28:06,779
so the question is that many

581
00:28:06,779 --> 00:28:09,360
applications ask for full disk access I

582
00:28:09,360 --> 00:28:10,200
think

583
00:28:10,200 --> 00:28:12,840
uh it's actually not the application uh

584
00:28:12,840 --> 00:28:14,880
it's oftentimes not the application

585
00:28:14,880 --> 00:28:17,400
asking for it but they somehow do

586
00:28:17,400 --> 00:28:19,620
something that they show up in the

587
00:28:19,620 --> 00:28:22,340
Privacy pane under the food disk access

588
00:28:22,340 --> 00:28:25,500
part that you can either Grant or not

589
00:28:25,500 --> 00:28:29,460
grant that right I usually just

590
00:28:29,460 --> 00:28:32,220
either don't Grant or evoke all of them

591
00:28:32,220 --> 00:28:35,940
so I have also the same issue I have

592
00:28:35,940 --> 00:28:38,159
like I don't I think like eight

593
00:28:38,159 --> 00:28:40,860
application showing up in my full disk

594
00:28:40,860 --> 00:28:42,539
access

595
00:28:42,539 --> 00:28:44,100
um

596
00:28:44,100 --> 00:28:48,179
um requirement or or table and I just

597
00:28:48,179 --> 00:28:50,039
revoked it from all of them or didn't

598
00:28:50,039 --> 00:28:53,400
Grant it it at the first place and

599
00:28:53,400 --> 00:28:56,580
so for example one of them was VMware

600
00:28:56,580 --> 00:29:00,059
and I asked them why do you ask for food

601
00:29:00,059 --> 00:29:02,520
is access and they came back surprised

602
00:29:02,520 --> 00:29:05,159
that we don't need it

603
00:29:05,159 --> 00:29:07,679
so my guess is that many times it's

604
00:29:07,679 --> 00:29:09,659
somehow the system

605
00:29:09,659 --> 00:29:11,220
uh

606
00:29:11,220 --> 00:29:15,000
will automatically ask for its for some

607
00:29:15,000 --> 00:29:18,000
reason because they might try to access

608
00:29:18,000 --> 00:29:20,159
something that requires food is access

609
00:29:20,159 --> 00:29:22,980
and then this database is populated like

610
00:29:22,980 --> 00:29:25,919
for example if we try similarly if an

611
00:29:25,919 --> 00:29:30,020
application tries to access the desktop

612
00:29:30,020 --> 00:29:33,360
further than the system automatically

613
00:29:33,360 --> 00:29:35,820
will ask for desktop for their

614
00:29:35,820 --> 00:29:36,840
permission

615
00:29:36,840 --> 00:29:40,639
for the application itself

616
00:29:41,399 --> 00:29:43,620
yeah just just don't give food this

617
00:29:43,620 --> 00:29:44,880
access to anything

618
00:29:44,880 --> 00:29:47,600
really so that that's that's my rule

619
00:29:47,600 --> 00:29:50,520
even if you have to like for terminal

620
00:29:50,520 --> 00:29:52,620
because you do something with it that

621
00:29:52,620 --> 00:29:55,020
requires food is access

622
00:29:55,020 --> 00:29:58,620
for that time give it and then revoke

623
00:29:58,620 --> 00:30:00,678
um

624
00:30:01,140 --> 00:30:05,000
unless it's an endpoint security client

625
00:30:07,320 --> 00:30:09,918
yes

626
00:30:11,520 --> 00:30:14,399
a bug is reported to Apple it's kind of

627
00:30:14,399 --> 00:30:16,620
fixed and then the onus it seems is

628
00:30:16,620 --> 00:30:18,000
almost on the security research to go

629
00:30:18,000 --> 00:30:19,559
validate it a lot of times it's

630
00:30:19,559 --> 00:30:22,380
incomplete as an outsider as someone who

631
00:30:22,380 --> 00:30:24,299
reports a lot a lot of bugs Apple do you

632
00:30:24,299 --> 00:30:27,059
have any suggestions of hey how do we

633
00:30:27,059 --> 00:30:29,039
get this right or how can the process be

634
00:30:29,039 --> 00:30:33,320
improved so it's not dragged out so long

635
00:30:33,360 --> 00:30:36,860
it's a tough question yeah I think one

636
00:30:36,860 --> 00:30:39,779
one way the process could be improved

637
00:30:39,779 --> 00:30:42,020
although it doesn't scale

638
00:30:42,020 --> 00:30:45,299
for for more architectural changes they

639
00:30:45,299 --> 00:30:49,980
could consult the the finder

640
00:30:49,980 --> 00:30:52,919
if the fix is good enough or what the

641
00:30:52,919 --> 00:30:57,240
finder thinks about the fix and

642
00:30:57,419 --> 00:31:00,179
and then both of so both apple and the

643
00:31:00,179 --> 00:31:01,980
finder can think through or have a

644
00:31:01,980 --> 00:31:03,480
chance to Think Through of that fix if

645
00:31:03,480 --> 00:31:06,539
it's sufficient or not but

646
00:31:06,539 --> 00:31:09,480
I think it also doesn't scale like

647
00:31:09,480 --> 00:31:13,260
um there are I don't know 50 60 bucks

648
00:31:13,260 --> 00:31:15,299
fixed in a single

649
00:31:15,299 --> 00:31:19,919
uh update I I think you cannot do this

650
00:31:19,919 --> 00:31:22,380
for every single bug

651
00:31:22,380 --> 00:31:27,059
so for some I would do it

652
00:31:27,059 --> 00:31:28,919
um

653
00:31:28,919 --> 00:31:32,240
I have no better idea

654
00:31:34,740 --> 00:31:37,140
any other questions

655
00:31:37,140 --> 00:31:41,779
if not then thank you and I would like

