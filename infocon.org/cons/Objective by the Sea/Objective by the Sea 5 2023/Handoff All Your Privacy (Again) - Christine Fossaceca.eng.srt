1
00:00:00,659 --> 00:00:03,380
why

2
00:00:07,919 --> 00:00:10,440
next up we have Christine who is going

3
00:00:10,440 --> 00:00:12,240
to be talking about privacy

4
00:00:12,240 --> 00:00:15,059
considerations in the context of handoff

5
00:00:15,059 --> 00:00:18,119
and continuity so let's give a round of

6
00:00:18,119 --> 00:00:19,770
applause for Christine

7
00:00:19,770 --> 00:00:28,319
[Applause]

8
00:00:31,920 --> 00:00:34,099
foreign

9
00:00:40,079 --> 00:00:42,420
okay that looks a little dangerous but

10
00:00:42,420 --> 00:00:44,760
hopefully it stays plugged in all right

11
00:00:44,760 --> 00:00:47,219
my name is Christine vasika and again

12
00:00:47,219 --> 00:00:50,280
this is hand off all your privacy

13
00:00:50,280 --> 00:00:52,260
um so please turn off your Bluetooth

14
00:00:52,260 --> 00:00:54,840
if you haven't already

15
00:00:54,840 --> 00:00:57,360
um otherwise my demo might not work

16
00:00:57,360 --> 00:00:58,980
um someone did actually mention to add

17
00:00:58,980 --> 00:01:01,860
more RAM to my VM and it worked so thank

18
00:01:01,860 --> 00:01:04,920
you I think it's a little more stable

19
00:01:04,920 --> 00:01:07,560
so just a little bit about me

20
00:01:07,560 --> 00:01:09,060
um I'm currently a senior mobile

21
00:01:09,060 --> 00:01:11,460
security researcher at Microsoft on the

22
00:01:11,460 --> 00:01:13,920
defender for endpoint team a lot of you

23
00:01:13,920 --> 00:01:15,780
may not know that at Microsoft we

24
00:01:15,780 --> 00:01:17,820
actually work to protect devices across

25
00:01:17,820 --> 00:01:20,159
all platforms so in addition to Windows

26
00:01:20,159 --> 00:01:23,100
we have protections for Mac OS Linux

27
00:01:23,100 --> 00:01:26,939
Android and my specialty iOS

28
00:01:26,939 --> 00:01:29,580
um outside of Microsoft I'm on the

29
00:01:29,580 --> 00:01:31,259
Furious Mac research team which

30
00:01:31,259 --> 00:01:33,360
specializes in Apple device privacy

31
00:01:33,360 --> 00:01:35,700
research and there's presentations based

32
00:01:35,700 --> 00:01:37,680
off of that research and I'm also a

33
00:01:37,680 --> 00:01:39,900
co-host of her hacks podcast which is a

34
00:01:39,900 --> 00:01:42,119
podcast by women in cyber security for

35
00:01:42,119 --> 00:01:43,799
everyone

36
00:01:43,799 --> 00:01:44,759
um so we've been doing a lot of

37
00:01:44,759 --> 00:01:46,799
preparation on the podcast and we will

38
00:01:46,799 --> 00:01:49,680
release in four days October 11th which

39
00:01:49,680 --> 00:01:52,439
is Ada loveliest day so check it out it

40
00:01:52,439 --> 00:01:53,880
will be available everywhere you get

41
00:01:53,880 --> 00:01:56,100
your podcasts

42
00:01:56,100 --> 00:01:57,240
all right

43
00:01:57,240 --> 00:01:59,280
so in my presentation I'm going to talk

44
00:01:59,280 --> 00:02:01,020
to you about what the continuity

45
00:02:01,020 --> 00:02:02,880
protocol is

46
00:02:02,880 --> 00:02:04,799
um and how it works and talk about our

47
00:02:04,799 --> 00:02:07,079
past research then I'm going to show you

48
00:02:07,079 --> 00:02:09,300
how you can capture continuity data on

49
00:02:09,300 --> 00:02:10,139
your own

50
00:02:10,139 --> 00:02:12,180
and then I'm going to dig into the

51
00:02:12,180 --> 00:02:14,099
nitty-gritty of different continuity

52
00:02:14,099 --> 00:02:15,959
packets so that you can understand bite

53
00:02:15,959 --> 00:02:18,120
by bite exactly what information is

54
00:02:18,120 --> 00:02:23,000
being collected distributed and leaked

55
00:02:23,340 --> 00:02:25,379
all right and hopefully hopefully the

56
00:02:25,379 --> 00:02:28,020
demo works so

57
00:02:28,020 --> 00:02:30,599
um so what information is your iPhone or

58
00:02:30,599 --> 00:02:33,599
MacBook giving away about you iOS and

59
00:02:33,599 --> 00:02:35,760
Mac OS use a variety of protocols that

60
00:02:35,760 --> 00:02:38,459
fall under the continuity umbrella and

61
00:02:38,459 --> 00:02:40,680
that will share information across users

62
00:02:40,680 --> 00:02:42,840
devices to give you a seamless

63
00:02:42,840 --> 00:02:44,400
experience

64
00:02:44,400 --> 00:02:46,680
however much of this information can

65
00:02:46,680 --> 00:02:48,420
either be passed in the clear and

66
00:02:48,420 --> 00:02:50,580
sniffed and captured or even mimicked by

67
00:02:50,580 --> 00:02:53,340
other nearby devices

68
00:02:53,340 --> 00:02:55,980
so it's called it's powered via a

69
00:02:55,980 --> 00:02:58,080
combination of Wi-Fi and Bluetooth

70
00:02:58,080 --> 00:02:59,160
um and I'm only going to show you the

71
00:02:59,160 --> 00:03:02,459
Bluetooth component of it but an example

72
00:03:02,459 --> 00:03:04,500
of continuity would be like resuming

73
00:03:04,500 --> 00:03:06,959
browsing from Safari on your iPhone to

74
00:03:06,959 --> 00:03:08,879
Safari on your Mac

75
00:03:08,879 --> 00:03:10,739
um the universal clipboard instant

76
00:03:10,739 --> 00:03:13,620
hotspot auto unlock things like that

77
00:03:13,620 --> 00:03:15,420
so we've done a lot of reverse

78
00:03:15,420 --> 00:03:17,159
engineering on this protocol the first

79
00:03:17,159 --> 00:03:19,379
paper was published in 2019 which was

80
00:03:19,379 --> 00:03:21,620
called hand off all your privacy

81
00:03:21,620 --> 00:03:24,599
we also did a presentation at shmukon in

82
00:03:24,599 --> 00:03:27,420
2020 where we dug into how you set up

83
00:03:27,420 --> 00:03:30,480
the capture yourself and that's when we

84
00:03:30,480 --> 00:03:33,239
first presented our custom dissector

85
00:03:33,239 --> 00:03:35,519
which is open source

86
00:03:35,519 --> 00:03:38,099
um we also recently published a paper

87
00:03:38,099 --> 00:03:40,140
called who tracks The Trackers where we

88
00:03:40,140 --> 00:03:42,959
show how to create a counterfeit device

89
00:03:42,959 --> 00:03:44,879
we also disclose a lot of this

90
00:03:44,879 --> 00:03:47,760
information to Apple so

91
00:03:47,760 --> 00:03:50,659
I don't know what happened

92
00:03:56,099 --> 00:03:57,480
we disclose a lot of this information

93
00:03:57,480 --> 00:03:59,959
I'll just I'll move over here

94
00:03:59,959 --> 00:04:02,519
and so we

95
00:04:02,519 --> 00:04:06,659
okay well I can I can talk with okay

96
00:04:06,659 --> 00:04:10,019
from The Refuge speed

97
00:04:10,019 --> 00:04:12,299
oh

98
00:04:12,299 --> 00:04:13,439
download

99
00:04:13,439 --> 00:04:15,599
that reverses me

100
00:04:15,599 --> 00:04:18,139
okay

101
00:04:20,760 --> 00:04:23,759
the Classen and Alex Heinrich were in

102
00:04:23,759 --> 00:04:25,740
the audience over here

103
00:04:25,740 --> 00:04:28,680
um and they've written prolifically on

104
00:04:28,680 --> 00:04:30,660
not just continuity but also a lot of

105
00:04:30,660 --> 00:04:34,620
other Apple research check out air guard

106
00:04:34,620 --> 00:04:37,380
which Alex wrote there's also open

107
00:04:37,380 --> 00:04:39,360
Haystack which helps you create your own

108
00:04:39,360 --> 00:04:41,400
air tag

109
00:04:41,400 --> 00:04:43,880
um and there's another research team

110
00:04:43,880 --> 00:04:46,800
insa which is in Lion France and they

111
00:04:46,800 --> 00:04:48,780
actually did a lot of the

112
00:04:48,780 --> 00:04:51,300
other packet parsing information that

113
00:04:51,300 --> 00:04:52,560
I'm going to be showing here today so

114
00:04:52,560 --> 00:04:54,540
our original continuity parser was not

115
00:04:54,540 --> 00:04:56,820
based off of reversing it was just like

116
00:04:56,820 --> 00:04:59,580
us doing manual testing

117
00:04:59,580 --> 00:05:01,139
um but then when they published their

118
00:05:01,139 --> 00:05:03,540
paper called discontinued privacy they

119
00:05:03,540 --> 00:05:04,800
reverse engineered a lot of the

120
00:05:04,800 --> 00:05:06,240
information and compared to the Apple

121
00:05:06,240 --> 00:05:08,340
spec and that gave us even more

122
00:05:08,340 --> 00:05:10,800
information so I'll talk about both of

123
00:05:10,800 --> 00:05:13,520
our disclosures

124
00:05:13,800 --> 00:05:16,199
here we go

125
00:05:16,199 --> 00:05:19,919
okay yay thank you I appreciate it

126
00:05:19,919 --> 00:05:23,460
all right sorry about that everybody

127
00:05:23,460 --> 00:05:25,860
okay so that was the slide

128
00:05:25,860 --> 00:05:28,400
so

129
00:05:28,500 --> 00:05:30,060
all right so you might be wondering what

130
00:05:30,060 --> 00:05:31,919
types of information is being sent in

131
00:05:31,919 --> 00:05:33,600
the clear and how are you capturing it

132
00:05:33,600 --> 00:05:35,520
and this is where um we have some

133
00:05:35,520 --> 00:05:37,199
problems because

134
00:05:37,199 --> 00:05:39,120
continuity is actually disclosing

135
00:05:39,120 --> 00:05:41,340
pattern of life or

136
00:05:41,340 --> 00:05:42,660
um like device fingerprinting

137
00:05:42,660 --> 00:05:44,580
information and so from a privacy

138
00:05:44,580 --> 00:05:47,340
perspective that's really bad

139
00:05:47,340 --> 00:05:51,300
so this is just a like a demo that I was

140
00:05:51,300 --> 00:05:53,039
using for something else um so I just

141
00:05:53,039 --> 00:05:54,300
wanted to show you what the packets are

142
00:05:54,300 --> 00:05:56,280
so from the pattern of Life information

143
00:05:56,280 --> 00:05:58,199
that there is is whether or not your air

144
00:05:58,199 --> 00:06:00,539
pods are connected if Wi-Fi is on or off

145
00:06:00,539 --> 00:06:02,639
if your airdrops on or off it'll even

146
00:06:02,639 --> 00:06:05,340
say well iOS version you're on

147
00:06:05,340 --> 00:06:07,320
um so we're gonna demo this later so you

148
00:06:07,320 --> 00:06:08,580
don't have to worry too much about

149
00:06:08,580 --> 00:06:10,020
what's on this slide

150
00:06:10,020 --> 00:06:10,680
um

151
00:06:10,680 --> 00:06:12,600
and you might want to know how I'm

152
00:06:12,600 --> 00:06:15,360
capturing this so I'm not going to go

153
00:06:15,360 --> 00:06:17,400
into the whole thing because only 25

154
00:06:17,400 --> 00:06:19,020
minute talk we just lost a little bit of

155
00:06:19,020 --> 00:06:21,419
time but you can use a Bluetooth

156
00:06:21,419 --> 00:06:23,699
Hardware dongle such as an Uber tooth

157
00:06:23,699 --> 00:06:25,740
which is what I'm using or you can use

158
00:06:25,740 --> 00:06:28,680
an NRF sniffer those are a little bit

159
00:06:28,680 --> 00:06:30,180
more reliable I think because the

160
00:06:30,180 --> 00:06:32,340
antenna is smaller so it's a little bit

161
00:06:32,340 --> 00:06:35,100
easier to do a capture in a big room

162
00:06:35,100 --> 00:06:37,919
like this and then if you go to our

163
00:06:37,919 --> 00:06:40,620
repository which is under Furious Mac on

164
00:06:40,620 --> 00:06:43,020
GitHub you can see our continuity parser

165
00:06:43,020 --> 00:06:46,080
the hardest part about it is you have to

166
00:06:46,080 --> 00:06:48,120
compile Wireshark from source and

167
00:06:48,120 --> 00:06:50,479
compile our parser into it or it's a

168
00:06:50,479 --> 00:06:52,160
dissector

169
00:06:52,160 --> 00:06:54,780
and so depending on the platform you're

170
00:06:54,780 --> 00:06:56,940
using is a little bit difficult I think

171
00:06:56,940 --> 00:06:59,400
what was causing my issues is I'm

172
00:06:59,400 --> 00:07:01,919
running a VM right now because I have to

173
00:07:01,919 --> 00:07:03,840
do USB pass-through and I think it's

174
00:07:03,840 --> 00:07:05,300
like using a lot of

175
00:07:05,300 --> 00:07:09,660
resources so I just can't win

176
00:07:09,660 --> 00:07:11,759
oh thank you I am coming up on the

177
00:07:11,759 --> 00:07:14,280
there's a break right

178
00:07:14,280 --> 00:07:16,800
um so in my talk I'm gonna explain how

179
00:07:16,800 --> 00:07:19,560
you can look at an apple ble packet and

180
00:07:19,560 --> 00:07:22,919
understand what everything is bite by

181
00:07:22,919 --> 00:07:24,960
bite because even though this is like

182
00:07:24,960 --> 00:07:26,880
the generic format for a continuity

183
00:07:26,880 --> 00:07:29,039
packet they actually vary in length and

184
00:07:29,039 --> 00:07:31,740
they vary in fields because it's very

185
00:07:31,740 --> 00:07:33,060
extensible for different types of

186
00:07:33,060 --> 00:07:35,099
traffic especially if Apple wants to add

187
00:07:35,099 --> 00:07:37,380
new types of packets

188
00:07:37,380 --> 00:07:39,539
so the best way to do that is to go

189
00:07:39,539 --> 00:07:41,639
through packet by packet

190
00:07:41,639 --> 00:07:42,960
um so I have three types of packets here

191
00:07:42,960 --> 00:07:46,620
that we're going to dissect together

192
00:07:46,620 --> 00:07:48,539
so the first information that we're

193
00:07:48,539 --> 00:07:50,220
going to look at is the access address

194
00:07:50,220 --> 00:07:52,979
and this is at a 24 byte offset so

195
00:07:52,979 --> 00:07:54,240
there's a little bit of a difference

196
00:07:54,240 --> 00:07:56,460
between classic Bluetooth protocol and

197
00:07:56,460 --> 00:07:59,880
Bluetooth low energy and so all ble or

198
00:07:59,880 --> 00:08:01,620
Bluetooth low energy packets are going

199
00:08:01,620 --> 00:08:03,960
to be tagged with this same exact access

200
00:08:03,960 --> 00:08:05,460
address

201
00:08:05,460 --> 00:08:06,360
um so I'm just going to ignore

202
00:08:06,360 --> 00:08:08,039
everything before that because it's not

203
00:08:08,039 --> 00:08:10,020
Apple specific information and it's more

204
00:08:10,020 --> 00:08:12,960
related to like classic Bluetooth or

205
00:08:12,960 --> 00:08:15,240
Bluetooth connection so that information

206
00:08:15,240 --> 00:08:18,240
is not important

207
00:08:18,240 --> 00:08:19,500
um the next thing that we're going to

208
00:08:19,500 --> 00:08:21,720
look at is the next two bytes which is

209
00:08:21,720 --> 00:08:24,180
the packet header and again that's also

210
00:08:24,180 --> 00:08:26,460
not Apple specific so we can just kind

211
00:08:26,460 --> 00:08:29,719
of ignore that

212
00:08:29,759 --> 00:08:31,259
all right so the next thing is the

213
00:08:31,259 --> 00:08:33,000
advertising address and like I said

214
00:08:33,000 --> 00:08:34,200
before

215
00:08:34,200 --> 00:08:37,440
um this is something that comes from

216
00:08:37,440 --> 00:08:39,479
your any Bluetooth device that you have

217
00:08:39,479 --> 00:08:42,120
so all Bailey devices will have some

218
00:08:42,120 --> 00:08:43,979
type of advertising address and you can

219
00:08:43,979 --> 00:08:45,959
think of this as the Bluetooth Mac

220
00:08:45,959 --> 00:08:47,880
address

221
00:08:47,880 --> 00:08:51,060
um so apple has a specific design

222
00:08:51,060 --> 00:08:53,040
specification that requires that any

223
00:08:53,040 --> 00:08:55,140
device that is going to be using

224
00:08:55,140 --> 00:08:57,300
Bluetooth with apple needs to rotate the

225
00:08:57,300 --> 00:09:00,060
MAC address every 15 minutes and that's

226
00:09:00,060 --> 00:09:01,920
because this Bluetooth Mac address much

227
00:09:01,920 --> 00:09:04,860
like a private Wi-Fi address needs to

228
00:09:04,860 --> 00:09:07,200
stay private so it's going to rotate

229
00:09:07,200 --> 00:09:08,880
every 15 minutes so that if you're going

230
00:09:08,880 --> 00:09:10,740
from location to location you're not

231
00:09:10,740 --> 00:09:14,040
beaconing those same fixed bytes

232
00:09:14,040 --> 00:09:15,899
um so if you're like a developer and you

233
00:09:15,899 --> 00:09:18,120
want to integrate your iot device with

234
00:09:18,120 --> 00:09:20,040
apple they want you to also rotate your

235
00:09:20,040 --> 00:09:22,200
Mac address or your advertising address

236
00:09:22,200 --> 00:09:24,959
every 15 minutes

237
00:09:24,959 --> 00:09:27,480
um not all devices do that so this is

238
00:09:27,480 --> 00:09:29,339
something that Apple does and it is

239
00:09:29,339 --> 00:09:31,080
really good from a privacy perspective

240
00:09:31,080 --> 00:09:33,660
so you'll see these next six bytes are

241
00:09:33,660 --> 00:09:35,220
the advertising address

242
00:09:35,220 --> 00:09:38,100
now when these bytes are parsed it's not

243
00:09:38,100 --> 00:09:39,480
always consistent

244
00:09:39,480 --> 00:09:42,839
um from the endginess why so this is you

245
00:09:42,839 --> 00:09:44,580
swap the endess but

246
00:09:44,580 --> 00:09:46,560
you don't assume when you're parsing

247
00:09:46,560 --> 00:09:47,519
these packets that you're always

248
00:09:47,519 --> 00:09:48,959
swapping the ending in there so I just

249
00:09:48,959 --> 00:09:51,979
wanted to point that out

250
00:09:52,500 --> 00:09:54,480
all right so getting rid of all of that

251
00:09:54,480 --> 00:09:56,700
now we're going to look at um the next

252
00:09:56,700 --> 00:09:58,380
three fields at once and that's because

253
00:09:58,380 --> 00:10:00,120
the field highlighted in blue is

254
00:10:00,120 --> 00:10:02,580
actually optional so in your parsing

255
00:10:02,580 --> 00:10:04,860
this information you need to know

256
00:10:04,860 --> 00:10:06,660
whether or not you have that optional

257
00:10:06,660 --> 00:10:08,940
field there

258
00:10:08,940 --> 00:10:10,440
um so I'm actually going to skip ahead

259
00:10:10,440 --> 00:10:12,980
to the third frame which is in yellow

260
00:10:12,980 --> 00:10:15,959
and that's because this is always going

261
00:10:15,959 --> 00:10:18,480
to be static so you probably see that

262
00:10:18,480 --> 00:10:19,880
string that says

263
00:10:19,880 --> 00:10:24,360
ff4c00 and the fs is the manufacturer ID

264
00:10:24,360 --> 00:10:27,420
so all Bluetooth devices that come from

265
00:10:27,420 --> 00:10:29,640
different manufacturers can have their

266
00:10:29,640 --> 00:10:32,940
own specific manufacturer specific data

267
00:10:32,940 --> 00:10:35,040
that's going to be passed in those later

268
00:10:35,040 --> 00:10:37,140
Bluetooth fields and so

269
00:10:37,140 --> 00:10:40,080
the FF flag lets you know that oh the

270
00:10:40,080 --> 00:10:42,779
manufacturer specific data is coming if

271
00:10:42,779 --> 00:10:44,459
you want to know what manufacturer that

272
00:10:44,459 --> 00:10:46,800
is that's going to be represented by the

273
00:10:46,800 --> 00:10:49,200
company ID and apples is

274
00:10:49,200 --> 00:10:51,959
zero zero four C but then when it's the

275
00:10:51,959 --> 00:10:53,279
endings is swapped

276
00:10:53,279 --> 00:10:55,019
so something else that's really

277
00:10:55,019 --> 00:10:57,540
important to know if you are running a

278
00:10:57,540 --> 00:10:59,459
capture and you're seeing this

279
00:10:59,459 --> 00:11:01,380
advertising address and you're seeing

280
00:11:01,380 --> 00:11:03,060
information saying oh yeah this is Apple

281
00:11:03,060 --> 00:11:05,220
traffic that doesn't mean that it's

282
00:11:05,220 --> 00:11:06,899
actually coming from Apple because like

283
00:11:06,899 --> 00:11:09,060
I said before we were able to easily

284
00:11:09,060 --> 00:11:12,360
counterfeit those packets so

285
00:11:12,360 --> 00:11:14,160
just because the device is beaconing

286
00:11:14,160 --> 00:11:15,600
that it's coming from an Apple Company

287
00:11:15,600 --> 00:11:17,220
ID doesn't mean it's actually a

288
00:11:17,220 --> 00:11:19,620
legitimate Apple device it does mean

289
00:11:19,620 --> 00:11:22,140
that the Apple framework find my

290
00:11:22,140 --> 00:11:24,180
framework will allow you to ride that

291
00:11:24,180 --> 00:11:26,519
protocol so anybody can use the find my

292
00:11:26,519 --> 00:11:27,899
protocol as long as they're beginning

293
00:11:27,899 --> 00:11:30,740
the correct information

294
00:11:30,779 --> 00:11:32,880
all right so in the first packet there's

295
00:11:32,880 --> 00:11:34,680
only one bite so that's just going to be

296
00:11:34,680 --> 00:11:36,240
the length field

297
00:11:36,240 --> 00:11:38,579
and this length is letting you know how

298
00:11:38,579 --> 00:11:40,560
much Apple specific data is being sent

299
00:11:40,560 --> 00:11:42,899
in the rest of the packet so there's

300
00:11:42,899 --> 00:11:44,459
seven bytes

301
00:11:44,459 --> 00:11:45,240
um

302
00:11:45,240 --> 00:11:47,820
and the next one you have four bytes

303
00:11:47,820 --> 00:11:49,620
ahead of it and so that means that you

304
00:11:49,620 --> 00:11:52,640
have that optional field

305
00:11:52,860 --> 00:11:54,959
um and then that optional field is just

306
00:11:54,959 --> 00:11:57,300
that's like a ble Channel information so

307
00:11:57,300 --> 00:11:59,880
like it's not really Apple specific so

308
00:11:59,880 --> 00:12:01,500
we don't have to go into what it is um

309
00:12:01,500 --> 00:12:03,180
but you see that it's hex 10 which means

310
00:12:03,180 --> 00:12:05,820
there's 10 bytes of data

311
00:12:05,820 --> 00:12:08,339
and this other packet also has the

312
00:12:08,339 --> 00:12:11,640
optional field and you have 19 bytes of

313
00:12:11,640 --> 00:12:13,440
data so

314
00:12:13,440 --> 00:12:15,720
you might start to think well how are

315
00:12:15,720 --> 00:12:16,980
they leaking all the sensitive

316
00:12:16,980 --> 00:12:18,360
information there's only like seven

317
00:12:18,360 --> 00:12:20,519
bytes available to you and all these

318
00:12:20,519 --> 00:12:22,019
packets are all different lengths so how

319
00:12:22,019 --> 00:12:23,640
do you know like what they are what

320
00:12:23,640 --> 00:12:25,260
they're doing

321
00:12:25,260 --> 00:12:27,959
so Apple has implemented the Apple type

322
00:12:27,959 --> 00:12:29,459
and that's one of the first pieces of

323
00:12:29,459 --> 00:12:31,680
Apple specific or manufacturer specific

324
00:12:31,680 --> 00:12:33,180
information

325
00:12:33,180 --> 00:12:35,700
and all of the Apple types correspond to

326
00:12:35,700 --> 00:12:37,380
what type of packet is going to be

327
00:12:37,380 --> 00:12:38,640
beaconed

328
00:12:38,640 --> 00:12:41,160
so I created this table so that we can

329
00:12:41,160 --> 00:12:43,980
figure out what packets we've collected

330
00:12:43,980 --> 00:12:47,160
and these are the Apple message types

331
00:12:47,160 --> 00:12:49,380
so I have it in HEX and in decimal

332
00:12:49,380 --> 00:12:51,000
because even though you can see in the

333
00:12:51,000 --> 00:12:53,519
packet it's saying hex 12. if you're

334
00:12:53,519 --> 00:12:54,839
trying to use any of like the Apple

335
00:12:54,839 --> 00:12:58,019
debugging tools it'll actually present

336
00:12:58,019 --> 00:13:00,180
to you in decimal so

337
00:13:00,180 --> 00:13:01,980
you just have to like kind of have those

338
00:13:01,980 --> 00:13:03,959
conversions on hand so I always call

339
00:13:03,959 --> 00:13:06,959
type 18 find my but when we collect it

340
00:13:06,959 --> 00:13:10,740
it's actually 12. so um just for you

341
00:13:10,740 --> 00:13:12,600
know quick conversions

342
00:13:12,600 --> 00:13:14,399
something else that was kind of funny

343
00:13:14,399 --> 00:13:15,779
when we first started doing this

344
00:13:15,779 --> 00:13:18,720
research is there wasn't any find my

345
00:13:18,720 --> 00:13:21,240
packets being beaconed um because it was

346
00:13:21,240 --> 00:13:25,320
back in like 2018 2019 but

347
00:13:25,320 --> 00:13:27,899
sometime around

348
00:13:27,899 --> 00:13:31,079
um 2020 I guess so

349
00:13:31,079 --> 00:13:33,060
we would always update the parsers and

350
00:13:33,060 --> 00:13:34,920
Sam teplov who's on the Furious Mac team

351
00:13:34,920 --> 00:13:37,139
this was kind of like his baby so he was

352
00:13:37,139 --> 00:13:38,639
every time a new Wireshark version was

353
00:13:38,639 --> 00:13:39,839
coming out he's like yeah I'm going to

354
00:13:39,839 --> 00:13:42,600
Port it to the new Wireshark version and

355
00:13:42,600 --> 00:13:44,639
he started noticing that there was this

356
00:13:44,639 --> 00:13:47,459
new message type type 18 coming from his

357
00:13:47,459 --> 00:13:48,899
phone and we were like oh we've never

358
00:13:48,899 --> 00:13:50,940
seen this before like what is this it

359
00:13:50,940 --> 00:13:53,459
wasn't published in any papers and so

360
00:13:53,459 --> 00:13:55,680
Sam discovered

361
00:13:55,680 --> 00:13:58,139
um the find my protocol for offline

362
00:13:58,139 --> 00:14:00,300
finding and for air tags before air tags

363
00:14:00,300 --> 00:14:02,160
were like even mentioned so that was

364
00:14:02,160 --> 00:14:04,260
pretty cool because that was how we

365
00:14:04,260 --> 00:14:06,360
started doing research on creating your

366
00:14:06,360 --> 00:14:08,100
own air tag and writing the find my

367
00:14:08,100 --> 00:14:10,019
protocol before air tags were released

368
00:14:10,019 --> 00:14:12,660
and what's really funny is Tu darmstadt

369
00:14:12,660 --> 00:14:14,399
also did the same thing with their open

370
00:14:14,399 --> 00:14:16,800
Haystack framework so I think that was

371
00:14:16,800 --> 00:14:18,420
even released before air tags came out

372
00:14:18,420 --> 00:14:21,199
so it was pretty cool

373
00:14:21,300 --> 00:14:23,579
um so the next type of message is hex 10

374
00:14:23,579 --> 00:14:26,760
which is type 16 and that's nearby so

375
00:14:26,760 --> 00:14:28,440
nearby is something that I want to dig

376
00:14:28,440 --> 00:14:30,540
into because that is really saying a lot

377
00:14:30,540 --> 00:14:33,600
of pattern of Life information

378
00:14:33,600 --> 00:14:36,779
and then handoff remember that's like

379
00:14:36,779 --> 00:14:39,720
shared uh shared clipboard things like

380
00:14:39,720 --> 00:14:42,420
that so that is a type c which is type

381
00:14:42,420 --> 00:14:45,079
12.

382
00:14:45,300 --> 00:14:47,459
so let's dig into what nearby messages

383
00:14:47,459 --> 00:14:49,980
are leaking about you

384
00:14:49,980 --> 00:14:51,959
so you might think oh this packet is

385
00:14:51,959 --> 00:14:54,180
pretty small like how much pattern of

386
00:14:54,180 --> 00:14:55,380
Life information is actually being

387
00:14:55,380 --> 00:14:57,360
shared and it's about to get even

388
00:14:57,360 --> 00:14:58,860
smaller because the next field is

389
00:14:58,860 --> 00:15:01,019
another length

390
00:15:01,019 --> 00:15:02,760
um so you really only have five bites of

391
00:15:02,760 --> 00:15:05,279
information because the last three bytes

392
00:15:05,279 --> 00:15:06,959
are actually the cyclic redundancy check

393
00:15:06,959 --> 00:15:09,660
so you're losing three bytes at the end

394
00:15:09,660 --> 00:15:12,180
so you might be thinking okay like you

395
00:15:12,180 --> 00:15:14,100
don't have that much space What could

396
00:15:14,100 --> 00:15:17,160
they possibly be beginning

397
00:15:17,160 --> 00:15:19,019
but it's actually a lot especially just

398
00:15:19,019 --> 00:15:20,940
in the first two bites

399
00:15:20,940 --> 00:15:23,220
so the first bite is actually reserved

400
00:15:23,220 --> 00:15:25,920
for future use it's not even used so

401
00:15:25,920 --> 00:15:27,779
there could be more pattern of Life data

402
00:15:27,779 --> 00:15:30,120
that's implemented later on the second

403
00:15:30,120 --> 00:15:32,220
one is whether or not your airdrop is on

404
00:15:32,220 --> 00:15:34,320
or off so that means that if your

405
00:15:34,320 --> 00:15:36,240
airdrop turns on or off like I showed

406
00:15:36,240 --> 00:15:37,500
earlier

407
00:15:37,500 --> 00:15:40,019
it's just one bite but anybody can see

408
00:15:40,019 --> 00:15:41,040
that if they sniff your Bluetooth

409
00:15:41,040 --> 00:15:42,000
traffic

410
00:15:42,000 --> 00:15:45,060
the next fight is reserved and then the

411
00:15:45,060 --> 00:15:48,600
next next bite next bit is um primary

412
00:15:48,600 --> 00:15:51,180
iCloud so what does that mean

413
00:15:51,180 --> 00:15:54,420
um so if you're using

414
00:15:54,420 --> 00:15:57,480
um a new Macbook with a new Apple ID

415
00:15:57,480 --> 00:16:00,240
that you just created your device will

416
00:16:00,240 --> 00:16:02,160
not be weakening any continuity

417
00:16:02,160 --> 00:16:03,899
Bluetooth packets and that's because

418
00:16:03,899 --> 00:16:06,240
it's for a continuous seamless

419
00:16:06,240 --> 00:16:07,860
experience but you don't have a device

420
00:16:07,860 --> 00:16:10,380
to share it with so

421
00:16:10,380 --> 00:16:12,600
um in our testing we found that you'll

422
00:16:12,600 --> 00:16:14,579
get radio Silence from the Bluetooth

423
00:16:14,579 --> 00:16:17,459
receiver but the moment that you log in

424
00:16:17,459 --> 00:16:19,800
with that same Apple ID to a secondary

425
00:16:19,800 --> 00:16:22,079
device all of a sudden it gets really

426
00:16:22,079 --> 00:16:24,360
really noisy and you see all of those

427
00:16:24,360 --> 00:16:26,399
Bluetooth packets

428
00:16:26,399 --> 00:16:30,240
um so primary iCloud is letting you know

429
00:16:30,240 --> 00:16:32,880
which device was basically first on on

430
00:16:32,880 --> 00:16:35,279
the network or on the on the protocol

431
00:16:35,279 --> 00:16:37,860
with your iCloud account so that's what

432
00:16:37,860 --> 00:16:40,759
that bit is for

433
00:16:40,860 --> 00:16:42,899
um so the next one is action codes and

434
00:16:42,899 --> 00:16:44,699
this is probably the most sensitive

435
00:16:44,699 --> 00:16:46,259
information

436
00:16:46,259 --> 00:16:47,820
um so you'd think oh I only have four

437
00:16:47,820 --> 00:16:50,220
bits like that's not that much but

438
00:16:50,220 --> 00:16:53,399
it's very interesting

439
00:16:53,399 --> 00:16:56,519
um so if you take a phone call or use

440
00:16:56,519 --> 00:16:58,620
FaceTime your phone will start beaconing

441
00:16:58,620 --> 00:17:01,500
action code 14 saying oh this person's

442
00:17:01,500 --> 00:17:03,120
like in a phone call

443
00:17:03,120 --> 00:17:04,799
um if you get into your car and you

444
00:17:04,799 --> 00:17:06,839
start driving it'll start beaconing

445
00:17:06,839 --> 00:17:09,240
action code 13.

446
00:17:09,240 --> 00:17:11,760
um so from a user privacy perspective

447
00:17:11,760 --> 00:17:13,679
let's say you're sitting in a coffee

448
00:17:13,679 --> 00:17:15,599
shop and you're listening to her hacks

449
00:17:15,599 --> 00:17:17,760
podcast and the audio is playing and

450
00:17:17,760 --> 00:17:19,140
your screen is off

451
00:17:19,140 --> 00:17:20,579
somebody will be able to find you

452
00:17:20,579 --> 00:17:23,220
because they'll say oh somebody's

453
00:17:23,220 --> 00:17:25,319
beginning number

454
00:17:25,319 --> 00:17:27,240
um action code five and then they can

455
00:17:27,240 --> 00:17:28,919
look around and say well who's like has

456
00:17:28,919 --> 00:17:31,380
their headphones in and is listening to

457
00:17:31,380 --> 00:17:33,419
something

458
00:17:33,419 --> 00:17:35,280
um or let's say you're watching some

459
00:17:35,280 --> 00:17:36,900
objective by the Sea videos on YouTube

460
00:17:36,900 --> 00:17:39,360
and you're like this looking at your

461
00:17:39,360 --> 00:17:41,160
phone then they'll be able to say okay

462
00:17:41,160 --> 00:17:44,280
who is beaconing number nine and then

463
00:17:44,280 --> 00:17:46,620
they can correlate what you're doing

464
00:17:46,620 --> 00:17:50,760
with what your device ID information is

465
00:17:50,760 --> 00:17:52,200
um it also gives information like

466
00:17:52,200 --> 00:17:54,960
whether or not a phone is locked so if

467
00:17:54,960 --> 00:17:56,760
somebody wants to steal your phone and

468
00:17:56,760 --> 00:17:58,500
they want to make sure it's unlocked so

469
00:17:58,500 --> 00:18:00,179
they can log you out of your Apple ID

470
00:18:00,179 --> 00:18:03,120
and resell it then they can just wait

471
00:18:03,120 --> 00:18:05,340
for your phone to be beaconing that 11

472
00:18:05,340 --> 00:18:07,919
active user which is letting you know

473
00:18:07,919 --> 00:18:10,980
that it's unlocked or they can if once

474
00:18:10,980 --> 00:18:13,740
they see action code number seven that's

475
00:18:13,740 --> 00:18:16,860
transition idle from locked screen so

476
00:18:16,860 --> 00:18:20,280
whenever your phone is going from locked

477
00:18:20,280 --> 00:18:23,340
mode to when you're unlocking your phone

478
00:18:23,340 --> 00:18:25,200
it will start beginning seven and then

479
00:18:25,200 --> 00:18:27,419
if you let your phone sit on the table

480
00:18:27,419 --> 00:18:30,299
and it goes from unlocked to locked so

481
00:18:30,299 --> 00:18:33,059
we'll know their time is running out if

482
00:18:33,059 --> 00:18:34,620
it starts speaking to number seven and

483
00:18:34,620 --> 00:18:35,760
they have to wait for you to unlock it

484
00:18:35,760 --> 00:18:37,440
again

485
00:18:37,440 --> 00:18:39,720
and that was just information in one

486
00:18:39,720 --> 00:18:42,179
bite so let's see this other bite

487
00:18:42,179 --> 00:18:43,740
um so there's auto unlock information

488
00:18:43,740 --> 00:18:46,679
with like face ID unlock or watch unlock

489
00:18:46,679 --> 00:18:48,600
whether or not your watch is actually

490
00:18:48,600 --> 00:18:50,220
locked or not

491
00:18:50,220 --> 00:18:52,080
whether or not there's an off tag

492
00:18:52,080 --> 00:18:55,320
present another Reserve bit whether your

493
00:18:55,320 --> 00:18:58,080
Wi-Fi is on or off and um whether or not

494
00:18:58,080 --> 00:18:59,880
you have a four bite off tag and in this

495
00:18:59,880 --> 00:19:01,140
one you'll see we have a three by off

496
00:19:01,140 --> 00:19:03,179
tag and whether or not your airpods are

497
00:19:03,179 --> 00:19:05,220
connected

498
00:19:05,220 --> 00:19:07,260
um so what is the off tag

499
00:19:07,260 --> 00:19:09,960
um so an auth tag is actually part of

500
00:19:09,960 --> 00:19:12,600
the AES GCM specification and that just

501
00:19:12,600 --> 00:19:14,039
allows you to pass additional

502
00:19:14,039 --> 00:19:15,660
information

503
00:19:15,660 --> 00:19:18,360
um in a continuing session and so

504
00:19:18,360 --> 00:19:19,980
something that we had found out about

505
00:19:19,980 --> 00:19:22,640
the auth tags and had reported to Apple

506
00:19:22,640 --> 00:19:25,559
was that they were ruining the

507
00:19:25,559 --> 00:19:27,960
preservation of privacy in different

508
00:19:27,960 --> 00:19:29,880
connections because they weren't cycling

509
00:19:29,880 --> 00:19:31,919
the off tags at the same time as the

510
00:19:31,919 --> 00:19:34,500
advertising IDs so remember the

511
00:19:34,500 --> 00:19:37,260
advertising IDs have to rotate every 15

512
00:19:37,260 --> 00:19:39,900
minutes so if you're watching somebody's

513
00:19:39,900 --> 00:19:41,900
traffic based on their advertising ID

514
00:19:41,900 --> 00:19:44,940
every 15 minutes it's going to cycle and

515
00:19:44,940 --> 00:19:46,620
then you're going to figure out you know

516
00:19:46,620 --> 00:19:48,000
what their new one is but it's really

517
00:19:48,000 --> 00:19:50,580
hard to do that well they're also

518
00:19:50,580 --> 00:19:52,919
beginning the auth tag at the exact same

519
00:19:52,919 --> 00:19:55,620
time and if the advertising ID rolls

520
00:19:55,620 --> 00:19:58,440
over but the off tag doesn't then you

521
00:19:58,440 --> 00:20:00,539
know what their new advertising ID is

522
00:20:00,539 --> 00:20:03,480
and you can continuously track them

523
00:20:03,480 --> 00:20:04,980
um so we don't want that so we did

524
00:20:04,980 --> 00:20:07,440
disclose that to Apple and they fixed it

525
00:20:07,440 --> 00:20:10,860
so the next type of message is handoff

526
00:20:10,860 --> 00:20:13,140
um so this one has 14 bytes of Apple

527
00:20:13,140 --> 00:20:16,860
specific data not including the CRC

528
00:20:16,860 --> 00:20:19,140
and the first byte tells you whether or

529
00:20:19,140 --> 00:20:20,760
not there's like a cut or copy performed

530
00:20:20,760 --> 00:20:23,100
because remember that's shared clipboard

531
00:20:23,100 --> 00:20:24,600
um stuff like that

532
00:20:24,600 --> 00:20:26,700
there's also a nonce

533
00:20:26,700 --> 00:20:28,740
and then another off tag

534
00:20:28,740 --> 00:20:30,960
and this one does have an encrypted

535
00:20:30,960 --> 00:20:32,580
payload so you might think oh this is

536
00:20:32,580 --> 00:20:34,799
great like nobody can get my shared

537
00:20:34,799 --> 00:20:36,840
clipboard information like how secure

538
00:20:36,840 --> 00:20:39,900
and from one standpoint like yeah that's

539
00:20:39,900 --> 00:20:41,220
really awesome that they're using

540
00:20:41,220 --> 00:20:42,600
encryption we don't want people to know

541
00:20:42,600 --> 00:20:44,039
everything you're like copying and

542
00:20:44,039 --> 00:20:45,600
pasting

543
00:20:45,600 --> 00:20:47,039
um so it won't compromise the

544
00:20:47,039 --> 00:20:49,260
confidentiality of the data but it is

545
00:20:49,260 --> 00:20:51,179
still an information disclosure issue

546
00:20:51,179 --> 00:20:53,280
because we found out that the nonses

547
00:20:53,280 --> 00:20:56,220
were sequential so that means that if

548
00:20:56,220 --> 00:20:58,320
two devices are passing information back

549
00:20:58,320 --> 00:21:00,600
and forth the sequential nonses will let

550
00:21:00,600 --> 00:21:01,919
you know that there's this conversation

551
00:21:01,919 --> 00:21:04,380
happening and whose devices are

552
00:21:04,380 --> 00:21:05,820
correlated with each other and we don't

553
00:21:05,820 --> 00:21:07,740
want that because again pattern of life

554
00:21:07,740 --> 00:21:11,400
that it is bad for your privacy

555
00:21:11,400 --> 00:21:13,380
so the last one I'm going to show you is

556
00:21:13,380 --> 00:21:16,679
proximity pairing which is um type 7

557
00:21:16,679 --> 00:21:20,039
and that has to do with your air pods so

558
00:21:20,039 --> 00:21:22,679
if you have air pods

559
00:21:22,679 --> 00:21:24,360
they will be sending this information at

560
00:21:24,360 --> 00:21:25,559
all times

561
00:21:25,559 --> 00:21:28,679
so that's length uh 25 bytes of Apple

562
00:21:28,679 --> 00:21:30,240
specific data

563
00:21:30,240 --> 00:21:32,340
and so the first one is just the prefix

564
00:21:32,340 --> 00:21:34,860
letting you know it's starting the frame

565
00:21:34,860 --> 00:21:39,419
the next one is device model and so if I

566
00:21:39,419 --> 00:21:41,520
want to like steal someone's airpods Pro

567
00:21:41,520 --> 00:21:43,200
all I have to do is wait for their

568
00:21:43,200 --> 00:21:46,860
airpods Pro to come up because we know

569
00:21:46,860 --> 00:21:48,780
that they always have the same device

570
00:21:48,780 --> 00:21:50,299
strings

571
00:21:50,299 --> 00:21:54,360
so there are some new air pods around so

572
00:21:54,360 --> 00:21:57,059
if anybody wants to let me um look at

573
00:21:57,059 --> 00:22:00,000
what your device ID is I would love to

574
00:22:00,000 --> 00:22:03,360
because I want to update the dissector

575
00:22:03,360 --> 00:22:06,960
so the next byte is status codes and

576
00:22:06,960 --> 00:22:08,700
this is a little weird and I'm going to

577
00:22:08,700 --> 00:22:11,159
demonstrate this so is it functional or

578
00:22:11,159 --> 00:22:14,700
is it like spooky and so from a

579
00:22:14,700 --> 00:22:16,440
functional standpoint remember you know

580
00:22:16,440 --> 00:22:18,900
continuous seamless experience if you

581
00:22:18,900 --> 00:22:20,340
take one of your airpods out of your

582
00:22:20,340 --> 00:22:22,860
ears you want your audio to pause and

583
00:22:22,860 --> 00:22:25,080
that's really really useful but at the

584
00:22:25,080 --> 00:22:28,020
same time it just

585
00:22:28,020 --> 00:22:31,799
is like a lot of information and earlier

586
00:22:31,799 --> 00:22:33,900
when I was testing I was able to figure

587
00:22:33,900 --> 00:22:34,679
out

588
00:22:34,679 --> 00:22:37,440
whose data I was seeing because I saw oh

589
00:22:37,440 --> 00:22:39,539
somebody has one left airpod in their

590
00:22:39,539 --> 00:22:41,220
ear and the other in the case and I had

591
00:22:41,220 --> 00:22:43,559
to like ask them to put both of them in

592
00:22:43,559 --> 00:22:45,600
the case so

593
00:22:45,600 --> 00:22:47,640
um yeah this information I don't know if

594
00:22:47,640 --> 00:22:50,340
it's necessarily like

595
00:22:50,340 --> 00:22:52,380
good to be beaconing that because it's

596
00:22:52,380 --> 00:22:54,179
pattern of Life information and so from

597
00:22:54,179 --> 00:22:55,740
my perspective why don't they just

598
00:22:55,740 --> 00:22:58,260
encrypt that

599
00:22:58,260 --> 00:23:00,000
um there's also battery levels and your

600
00:23:00,000 --> 00:23:02,220
right airpod left airpod and case all

601
00:23:02,220 --> 00:23:04,200
have different advertising IDs and so

602
00:23:04,200 --> 00:23:06,960
they all have their own battery levels

603
00:23:06,960 --> 00:23:09,360
there's also the lid open count and so

604
00:23:09,360 --> 00:23:10,919
this was actually

605
00:23:10,919 --> 00:23:13,020
um published in the discontinued privacy

606
00:23:13,020 --> 00:23:17,280
paper by insa in Lion France and they

607
00:23:17,280 --> 00:23:20,039
found that every time you opened your

608
00:23:20,039 --> 00:23:21,720
airpod lid it would increment

609
00:23:21,720 --> 00:23:23,340
sequentially

610
00:23:23,340 --> 00:23:26,640
so from a privacy perspective you don't

611
00:23:26,640 --> 00:23:28,620
want to have any static numbers

612
00:23:28,620 --> 00:23:32,400
traveling with you so again this ruins

613
00:23:32,400 --> 00:23:35,100
the Privacy preservation of your air

614
00:23:35,100 --> 00:23:37,440
your advertising address rolling every

615
00:23:37,440 --> 00:23:39,840
15 minutes because yeah you're rolling

616
00:23:39,840 --> 00:23:42,179
every 15 minutes but then there's like

617
00:23:42,179 --> 00:23:44,700
number you know 32 following you

618
00:23:44,700 --> 00:23:47,100
everywhere you go so people will know oh

619
00:23:47,100 --> 00:23:49,679
number 32 is Christine oh and it just

620
00:23:49,679 --> 00:23:52,380
went to 33 so that must be her

621
00:23:52,380 --> 00:23:53,159
um

622
00:23:53,159 --> 00:23:56,520
so now it's just one for everybody else

623
00:23:56,520 --> 00:23:59,280
also again if you're an iPhone a thief

624
00:23:59,280 --> 00:24:01,380
and you're you know preparing to steal

625
00:24:01,380 --> 00:24:03,120
something you might want to know what

626
00:24:03,120 --> 00:24:06,059
color of advice is but it's in a case so

627
00:24:06,059 --> 00:24:09,120
how will you know and lucky for you

628
00:24:09,120 --> 00:24:11,520
um all the airpods will tell you that so

629
00:24:11,520 --> 00:24:13,740
I have a white iPhone but you wouldn't

630
00:24:13,740 --> 00:24:16,200
know that because it's in a case

631
00:24:16,200 --> 00:24:18,360
um but you do know that because it's my

632
00:24:18,360 --> 00:24:20,820
airpods are telling everybody

633
00:24:20,820 --> 00:24:22,740
so then that's the end of the packet and

634
00:24:22,740 --> 00:24:24,360
then the rest is the actual like

635
00:24:24,360 --> 00:24:27,780
Bluetooth encrypted data and the CRC

636
00:24:27,780 --> 00:24:29,760
okay so I know we're like running up on

637
00:24:29,760 --> 00:24:32,159
the break but um I'm gonna do the demo

638
00:24:32,159 --> 00:24:34,200
now so again turn off your Bluetooth

639
00:24:34,200 --> 00:24:36,000
please

640
00:24:36,000 --> 00:24:39,860
I will find you if you don't

641
00:24:43,500 --> 00:24:47,240
all right please work

642
00:24:55,919 --> 00:24:59,840
oh my God it's doing it thank God

643
00:24:59,880 --> 00:25:01,320
all right so I'm going to do a quick

644
00:25:01,320 --> 00:25:05,039
demonstration of of my airpods so both

645
00:25:05,039 --> 00:25:07,140
airpods are in the case and now I'm

646
00:25:07,140 --> 00:25:10,320
taking them out and so we're gonna

647
00:25:10,320 --> 00:25:12,960
it's a little laggy for you guys here we

648
00:25:12,960 --> 00:25:16,220
go so both my air pods are in my ear

649
00:25:16,980 --> 00:25:19,020
one is out one is out of the case what's

650
00:25:19,020 --> 00:25:20,460
weird is I can put it in my case and

651
00:25:20,460 --> 00:25:22,320
it's going to tell me that too so if

652
00:25:22,320 --> 00:25:23,760
somebody's trying to steal your air pods

653
00:25:23,760 --> 00:25:25,440
they can even if they just want one

654
00:25:25,440 --> 00:25:26,760
because like maybe they lost one of

655
00:25:26,760 --> 00:25:27,840
theirs

656
00:25:27,840 --> 00:25:30,720
they'll be like oh one of their one of

657
00:25:30,720 --> 00:25:32,039
your airpods is still in the case and

658
00:25:32,039 --> 00:25:35,159
just like swipe as they walk by so

659
00:25:35,159 --> 00:25:36,779
um so if anybody wants to play with this

660
00:25:36,779 --> 00:25:38,580
also during the break um it seems like

661
00:25:38,580 --> 00:25:41,520
it's working for now so or if you um

662
00:25:41,520 --> 00:25:42,960
have your air pods and you want to see

663
00:25:42,960 --> 00:25:45,679
what yours look like

664
00:25:46,380 --> 00:25:50,100
all right so just to to end I'm glad I

665
00:25:50,100 --> 00:25:51,900
didn't have to use my backup demo

666
00:25:51,900 --> 00:25:55,500
because I wouldn't have been as cool

667
00:25:55,500 --> 00:25:58,380
um so we are presenting an upcoming

668
00:25:58,380 --> 00:26:01,559
paper at pet Symposium we're talking

669
00:26:01,559 --> 00:26:04,320
about how to prevent people from putting

670
00:26:04,320 --> 00:26:06,539
counterfeit air tags on the find my

671
00:26:06,539 --> 00:26:07,980
framework

672
00:26:07,980 --> 00:26:09,480
um so hopefully Apple decides to do

673
00:26:09,480 --> 00:26:11,960
something like that here's some

674
00:26:11,960 --> 00:26:14,159
resources for you if you want to read

675
00:26:14,159 --> 00:26:16,559
more about this stuff

676
00:26:16,559 --> 00:26:19,460
and yeah

677
00:26:19,480 --> 00:26:25,230
[Applause]

678
00:26:32,700 --> 00:26:35,039
is that honey all right I don't know if

679
00:26:35,039 --> 00:26:37,260
we have time for questions

680
00:26:37,260 --> 00:26:40,279
you should have said no

681
00:26:40,919 --> 00:26:43,520
yes

682
00:26:47,900 --> 00:26:50,640
so when we originally did it we were

683
00:26:50,640 --> 00:26:53,220
just testing so we were like trying to

684
00:26:53,220 --> 00:26:55,860
figure out what was going on so we would

685
00:26:55,860 --> 00:26:57,779
look at what bits were changing and we

686
00:26:57,779 --> 00:26:59,700
did different things

687
00:26:59,700 --> 00:27:01,740
um and then the discontinued privacy

688
00:27:01,740 --> 00:27:03,900
paper came out and they they excited us

689
00:27:03,900 --> 00:27:07,799
but they had a way more verbose

690
00:27:07,799 --> 00:27:09,360
um

691
00:27:09,360 --> 00:27:11,580
collection because they reverse

692
00:27:11,580 --> 00:27:13,380
engineered it so they found a lot of the

693
00:27:13,380 --> 00:27:15,960
logging information in Apple's binaries

694
00:27:15,960 --> 00:27:19,380
so yeah that was that was super helpful

695
00:27:19,380 --> 00:27:20,460
um they found out that's how they found

696
00:27:20,460 --> 00:27:23,220
like the lid thing because we didn't

697
00:27:23,220 --> 00:27:24,900
really know that much about

698
00:27:24,900 --> 00:27:26,940
um the airpods stuff at the time because

699
00:27:26,940 --> 00:27:28,440
we were just trying to understand phone

700
00:27:28,440 --> 00:27:29,760
behavior and then we're like oh wow

701
00:27:29,760 --> 00:27:32,039
airpods is like a whole nother

702
00:27:32,039 --> 00:27:34,140
space so yeah that's why I really I love

703
00:27:34,140 --> 00:27:36,120
like that other people are doing it

704
00:27:36,120 --> 00:27:37,500
because you can all kind of work off of

705
00:27:37,500 --> 00:27:39,799
each other

706
00:27:46,080 --> 00:27:47,279
all right I think there's no more

707
00:27:47,279 --> 00:27:51,960
questions oh no I missed somebody sorry

708
00:27:52,320 --> 00:27:54,179
if somebody had a question

709
00:27:54,179 --> 00:27:55,860
yes oh and I'll repeat it this time

710
00:27:55,860 --> 00:27:58,580
sorry for

711
00:27:59,760 --> 00:28:01,760
you

712
00:28:05,520 --> 00:28:07,980
so the question was have we studied any

713
00:28:07,980 --> 00:28:10,020
other peer-to-peer Bluetooth Frameworks

714
00:28:10,020 --> 00:28:11,100
and

715
00:28:11,100 --> 00:28:12,840
try to see if the traffic is encrypted

716
00:28:12,840 --> 00:28:15,120
or not and we haven't yet we were

717
00:28:15,120 --> 00:28:19,080
thinking of looking at um other like iot

718
00:28:19,080 --> 00:28:21,779
devices like tile and stuff like that

719
00:28:21,779 --> 00:28:23,640
um but we have not

720
00:28:23,640 --> 00:28:26,480
looked at that

721
00:28:28,860 --> 00:28:32,460
oh yeah yeah definitely actually um

722
00:28:32,460 --> 00:28:34,620
Alex who's sitting like two rows behind

723
00:28:34,620 --> 00:28:37,440
you has looked at a lot of other things

724
00:28:37,440 --> 00:28:39,960
so he has his app called airguard will

725
00:28:39,960 --> 00:28:43,260
detect different types of Bluetooth data

726
00:28:43,260 --> 00:28:44,640
so he might actually know the answer to

727
00:28:44,640 --> 00:28:47,159
that but if you run actually in my other

728
00:28:47,159 --> 00:28:48,960
phone I have it

729
00:28:48,960 --> 00:28:50,640
okay

730
00:28:50,640 --> 00:28:52,559
yeah Alex is also a great resource for

731
00:28:52,559 --> 00:28:54,740
that

732
00:28:58,320 --> 00:29:01,580
oh yes in the back

733
00:29:18,240 --> 00:29:20,220
can you um would you mind coming along

734
00:29:20,220 --> 00:29:22,320
I'm sorry because I or do we have a

735
00:29:22,320 --> 00:29:24,960
microphone because I

736
00:29:24,960 --> 00:29:28,460
sorry thank you

737
00:29:33,899 --> 00:29:36,899
in a state of Silence when there is a

738
00:29:36,899 --> 00:29:38,399
new Apple device with a single Apple ID

739
00:29:38,399 --> 00:29:40,200
that is not associated with any other

740
00:29:40,200 --> 00:29:41,240
device

741
00:29:41,240 --> 00:29:43,919
does the host actually parse the

742
00:29:43,919 --> 00:29:45,779
incoming beacons this question is

743
00:29:45,779 --> 00:29:48,179
because I'm wondering if a new Mac with

744
00:29:48,179 --> 00:29:50,460
a new Association at polady could

745
00:29:50,460 --> 00:29:51,960
actually help the find my network

746
00:29:51,960 --> 00:29:54,539
identify an hypothetical stolen iPhone I

747
00:29:54,539 --> 00:29:57,480
I see um yeah so

748
00:29:57,480 --> 00:30:00,419
find my will still work if you like

749
00:30:00,419 --> 00:30:02,880
enroll in find my because you can use

750
00:30:02,880 --> 00:30:04,440
like the browser

751
00:30:04,440 --> 00:30:07,260
but we found that the offline finding

752
00:30:07,260 --> 00:30:08,880
messages which are part of continuity

753
00:30:08,880 --> 00:30:11,399
will not be triggered so that's actually

754
00:30:11,399 --> 00:30:13,380
um kind of bad for people who like maybe

755
00:30:13,380 --> 00:30:15,299
have an iPhone but no other Apple

756
00:30:15,299 --> 00:30:17,520
devices because in a lot of our testing

757
00:30:17,520 --> 00:30:19,200
we were like oh we want to you know

758
00:30:19,200 --> 00:30:21,480
capture these offline finding messages

759
00:30:21,480 --> 00:30:24,600
from iPhones and we're like oh it's not

760
00:30:24,600 --> 00:30:26,399
working like is this device too old

761
00:30:26,399 --> 00:30:28,260
what's going on

762
00:30:28,260 --> 00:30:30,059
um and that's when we made the discovery

763
00:30:30,059 --> 00:30:32,340
you have to have at least two Apple

764
00:30:32,340 --> 00:30:34,559
devices logged in otherwise it won't

765
00:30:34,559 --> 00:30:35,820
trigger

766
00:30:35,820 --> 00:30:37,080
um so yeah that's a good point so if you

767
00:30:37,080 --> 00:30:38,399
have an iPhone and you don't have any

768
00:30:38,399 --> 00:30:40,860
other Apple stuff you can't necessarily

769
00:30:40,860 --> 00:30:42,620
leverage offline finding because

770
00:30:42,620 --> 00:30:45,659
continuity won't trigger

771
00:30:45,659 --> 00:30:47,340
good question that's a really good

772
00:30:47,340 --> 00:30:49,520
question

773
00:30:54,910 --> 00:31:05,929
[Applause]

