1
00:00:00,659 --> 00:00:03,559
bye

2
00:00:08,039 --> 00:00:11,460
all right good day everybody uh as you

3
00:00:11,460 --> 00:00:13,500
heard my name is Matt Carman I'm here to

4
00:00:13,500 --> 00:00:15,240
present to you sandboxing with ESF

5
00:00:15,240 --> 00:00:18,379
playground on Mac OS

6
00:00:19,560 --> 00:00:21,300
a little bit about me I'm a Mac OS

7
00:00:21,300 --> 00:00:23,400
security Reacher at con researcher at

8
00:00:23,400 --> 00:00:24,600
congee

9
00:00:24,600 --> 00:00:26,880
I have a background in

10
00:00:26,880 --> 00:00:28,279
whoa

11
00:00:28,279 --> 00:00:31,920
Hopper crashing uh

12
00:00:31,920 --> 00:00:35,160
the malware analysis and detection QA

13
00:00:35,160 --> 00:00:36,540
and support

14
00:00:36,540 --> 00:00:39,239
I'm a self-taught programmer a father

15
00:00:39,239 --> 00:00:41,040
and as you may be able to tell them from

16
00:00:41,040 --> 00:00:43,879
my Twitter I'm pretty quiet

17
00:00:44,219 --> 00:00:46,200
these are some of the things that occupy

18
00:00:46,200 --> 00:00:49,160
my time outside of work

19
00:00:49,260 --> 00:00:52,200
and just a little Flex slide

20
00:00:52,200 --> 00:00:54,120
my agenda today I just wanted to go over

21
00:00:54,120 --> 00:00:56,280
my influences some of the driving

22
00:00:56,280 --> 00:00:58,340
factors and goals for this

23
00:00:58,340 --> 00:01:00,960
a little bit of the implementation I did

24
00:01:00,960 --> 00:01:03,180
have a demonstration lined up but it's

25
00:01:03,180 --> 00:01:06,659
struggling right now so just going over

26
00:01:06,659 --> 00:01:09,540
some of the details

27
00:01:09,540 --> 00:01:11,640
through that and then some of the

28
00:01:11,640 --> 00:01:13,740
planned enhancements that I have

29
00:01:13,740 --> 00:01:16,619
so first off what is the sandbox and in

30
00:01:16,619 --> 00:01:19,140
relation to malware analysis and

31
00:01:19,140 --> 00:01:21,060
computer security a Sandbox is just a

32
00:01:21,060 --> 00:01:22,560
environment that you can run malware in

33
00:01:22,560 --> 00:01:25,500
safely and not have to worry about doing

34
00:01:25,500 --> 00:01:27,420
damage to the system and reset it to a

35
00:01:27,420 --> 00:01:29,880
clean State afterwards

36
00:01:29,880 --> 00:01:31,380
it's also ideally you're going to be

37
00:01:31,380 --> 00:01:32,759
recording any actions that are happening

38
00:01:32,759 --> 00:01:35,880
on the system any network activity so

39
00:01:35,880 --> 00:01:38,400
execution and file writing

40
00:01:38,400 --> 00:01:40,500
uh what I'm not talking about is the

41
00:01:40,500 --> 00:01:44,000
built-in Apple sandbox feature

42
00:01:45,299 --> 00:01:47,700
so credit where credit is due this

43
00:01:47,700 --> 00:01:49,740
program uses ESF playground mainly and

44
00:01:49,740 --> 00:01:52,680
jerem Bradley over there created it so

45
00:01:52,680 --> 00:01:54,119
would not be possible without that

46
00:01:54,119 --> 00:01:56,479
utility

47
00:01:56,820 --> 00:01:58,500
um also some of my inspiration came from

48
00:01:58,500 --> 00:02:00,619
a product called makamau cuckoo

49
00:02:00,619 --> 00:02:03,119
it was a customized cuckoo sandbox for

50
00:02:03,119 --> 00:02:05,520
Mac OS that had a kernel extension with

51
00:02:05,520 --> 00:02:07,320
some pretty neat features one of them

52
00:02:07,320 --> 00:02:09,000
being that you could disable sip

53
00:02:09,000 --> 00:02:10,679
entirely and it would still report that

54
00:02:10,679 --> 00:02:12,239
it was on

55
00:02:12,239 --> 00:02:13,440
um

56
00:02:13,440 --> 00:02:15,959
disabled all code signing with that so

57
00:02:15,959 --> 00:02:17,459
you could run malware without checking

58
00:02:17,459 --> 00:02:18,920
code signatures

59
00:02:18,920 --> 00:02:21,239
monitored everything on the system and

60
00:02:21,239 --> 00:02:22,800
also had some really great detection

61
00:02:22,800 --> 00:02:24,599
features that brought up events that

62
00:02:24,599 --> 00:02:26,760
were actually malicious

63
00:02:26,760 --> 00:02:27,360
um

64
00:02:27,360 --> 00:02:28,920
the unfortunate thing is right before

65
00:02:28,920 --> 00:02:30,959
this thing was released meltdown

66
00:02:30,959 --> 00:02:33,959
inspector came out and Intel systems had

67
00:02:33,959 --> 00:02:35,640
to change how they worked on the

68
00:02:35,640 --> 00:02:39,180
operating system levels some uh

69
00:02:39,180 --> 00:02:41,300
some instructions were disabled

70
00:02:41,300 --> 00:02:43,620
so right after they released or right

71
00:02:43,620 --> 00:02:45,300
before they released this it broke and

72
00:02:45,300 --> 00:02:46,620
they weren't able to get it running on

73
00:02:46,620 --> 00:02:48,360
the newest operating systems

74
00:02:48,360 --> 00:02:49,860
if you were able to get it running

75
00:02:49,860 --> 00:02:51,900
though after some work it was really

76
00:02:51,900 --> 00:02:53,760
good system recorded everything and it

77
00:02:53,760 --> 00:02:55,800
was great to work with up until Mac OS

78
00:02:55,800 --> 00:02:58,440
1014. if you are interested in that I

79
00:02:58,440 --> 00:02:59,700
can still get it to work on that but

80
00:02:59,700 --> 00:03:01,200
it's Intel so

81
00:03:01,200 --> 00:03:04,700
we'll be going away

82
00:03:05,700 --> 00:03:08,160
so it Bears repeating that uh Apple

83
00:03:08,160 --> 00:03:10,500
devices are gaining more popularity and

84
00:03:10,500 --> 00:03:12,780
so to desire to attack them

85
00:03:12,780 --> 00:03:15,239
uh more companies are dedicating

86
00:03:15,239 --> 00:03:17,459
resources like entire teams to actually

87
00:03:17,459 --> 00:03:20,819
securing their Mac use case

88
00:03:20,819 --> 00:03:22,200
um and there's a huge gap in security

89
00:03:22,200 --> 00:03:25,860
knowledge between Windows Linux and Mac

90
00:03:25,860 --> 00:03:27,840
additionally

91
00:03:27,840 --> 00:03:29,940
right now there's no sandboxing solution

92
00:03:29,940 --> 00:03:32,700
for Apple silicon x86 is on the way out

93
00:03:32,700 --> 00:03:35,519
like I said cuckoo's gone any sandboxing

94
00:03:35,519 --> 00:03:37,620
solutions that do exist are really

95
00:03:37,620 --> 00:03:40,920
expensive and you don't really get a lot

96
00:03:40,920 --> 00:03:42,060
of insight into what they're doing on

97
00:03:42,060 --> 00:03:43,760
the back end so

98
00:03:43,760 --> 00:03:46,319
they're Limited in that sense so if you

99
00:03:46,319 --> 00:03:47,700
want to collect everything from a system

100
00:03:47,700 --> 00:03:49,620
you can't do that

101
00:03:49,620 --> 00:03:52,319
uh es friend is free the application

102
00:03:52,319 --> 00:03:53,599
that I created

103
00:03:53,599 --> 00:03:56,819
but it uses at least one physical Mac

104
00:03:56,819 --> 00:04:01,579
and a paid third-party software to run

105
00:04:07,860 --> 00:04:10,379
so the goals were to gain an

106
00:04:10,379 --> 00:04:12,420
understanding of how ESF playground can

107
00:04:12,420 --> 00:04:15,180
be leveraged in our environment and with

108
00:04:15,180 --> 00:04:17,279
changes made to our product here soon

109
00:04:17,279 --> 00:04:19,199
I wanted to make something that was easy

110
00:04:19,199 --> 00:04:22,380
to set up useful with minimal expense

111
00:04:22,380 --> 00:04:24,720
again with the one physical machine that

112
00:04:24,720 --> 00:04:25,759
you need

113
00:04:25,759 --> 00:04:28,139
the server can be configured to run on

114
00:04:28,139 --> 00:04:30,180
Mac OS windows or Linux so you only need

115
00:04:30,180 --> 00:04:32,639
that one Mac OS machine so that could be

116
00:04:32,639 --> 00:04:35,759
considered a waste of a system but I

117
00:04:35,759 --> 00:04:37,979
think it's worthwhile for this case

118
00:04:37,979 --> 00:04:39,840
uh and also this is my first time trying

119
00:04:39,840 --> 00:04:41,040
to collaborate with the Apple Community

120
00:04:41,040 --> 00:04:43,740
uh our Apple security Community I'm

121
00:04:43,740 --> 00:04:46,080
really happy to be here and share what

122
00:04:46,080 --> 00:04:48,800
I've found so far

123
00:04:49,860 --> 00:04:52,860
so why physical machines as we've all

124
00:04:52,860 --> 00:04:54,240
noticed there's a lot of trouble with

125
00:04:54,240 --> 00:04:55,740
virtualization right now with M1

126
00:04:55,740 --> 00:04:58,919
processors or apple silicon

127
00:04:58,919 --> 00:05:00,979
um

128
00:05:01,620 --> 00:05:04,080
a lot of anti-vm and anti-debug logic

129
00:05:04,080 --> 00:05:05,759
can be avoided just by using a physical

130
00:05:05,759 --> 00:05:07,320
machine so we're hoping that that

131
00:05:07,320 --> 00:05:09,540
becomes less of a problem with this

132
00:05:09,540 --> 00:05:12,780
and additionally for Onyx deep freeze is

133
00:05:12,780 --> 00:05:14,759
the paid program that we just used to

134
00:05:14,759 --> 00:05:16,740
reset the system to a clean state after

135
00:05:16,740 --> 00:05:19,220
each run

136
00:05:22,800 --> 00:05:24,840
I've looked into how this works a little

137
00:05:24,840 --> 00:05:27,780
bit and it is using apfs

138
00:05:27,780 --> 00:05:30,360
snapshotting I think but um

139
00:05:30,360 --> 00:05:32,639
in a way that doesn't make them reset at

140
00:05:32,639 --> 00:05:35,880
every time so it uh it creates a volume

141
00:05:35,880 --> 00:05:38,100
outside of the normal system drive that

142
00:05:38,100 --> 00:05:39,479
they write all the changes to and then

143
00:05:39,479 --> 00:05:42,060
they just dump that afterwards

144
00:05:42,060 --> 00:05:44,060
um

145
00:05:44,880 --> 00:05:47,100
so moving on to my implementation

146
00:05:47,100 --> 00:05:49,800
details uh es friend basically just

147
00:05:49,800 --> 00:05:52,380
started as a rapper for ESF playground

148
00:05:52,380 --> 00:05:53,699
uh

149
00:05:53,699 --> 00:05:55,860
and we quickly found out dumping all

150
00:05:55,860 --> 00:05:57,900
these events into a database that we

151
00:05:57,900 --> 00:05:59,280
needed more context with all these

152
00:05:59,280 --> 00:06:00,900
events there was a lot of information

153
00:06:00,900 --> 00:06:03,419
missing that we need to take action on

154
00:06:03,419 --> 00:06:04,259
things

155
00:06:04,259 --> 00:06:06,840
so first being by collecting a little

156
00:06:06,840 --> 00:06:09,539
more data from each event to try to fill

157
00:06:09,539 --> 00:06:12,500
out the gaps on that

158
00:06:13,919 --> 00:06:16,680
and as we've seen ESF is like a block of

159
00:06:16,680 --> 00:06:18,720
chocolates they're changing it all the

160
00:06:18,720 --> 00:06:21,479
time and each event is different they

161
00:06:21,479 --> 00:06:24,360
all have their special format and until

162
00:06:24,360 --> 00:06:25,740
we see those events we actually don't

163
00:06:25,740 --> 00:06:28,440
know how to process them correctly

164
00:06:28,440 --> 00:06:31,020
so I'm working on trying to trigger

165
00:06:31,020 --> 00:06:32,460
every event but I still haven't gotten

166
00:06:32,460 --> 00:06:34,758
there yet

167
00:06:36,900 --> 00:06:39,000
and as you can see there's a lot of

168
00:06:39,000 --> 00:06:40,560
events coming through it's not very

169
00:06:40,560 --> 00:06:42,240
organized here but

170
00:06:42,240 --> 00:06:45,660
uh the counts of events made me also

171
00:06:45,660 --> 00:06:47,039
realize that we needed to filter down

172
00:06:47,039 --> 00:06:51,199
these events quite a bit more

173
00:06:53,880 --> 00:06:55,940
um

174
00:06:56,460 --> 00:06:58,680
so

175
00:06:58,680 --> 00:07:02,039
the software is written in Python and I

176
00:07:02,039 --> 00:07:03,780
wanted to use as few third-party

177
00:07:03,780 --> 00:07:05,819
libraries as possible just because as

178
00:07:05,819 --> 00:07:08,880
we've seen they are being infected and

179
00:07:08,880 --> 00:07:10,919
becoming a security risk to install more

180
00:07:10,919 --> 00:07:12,780
and more

181
00:07:12,780 --> 00:07:14,639
um

182
00:07:14,639 --> 00:07:16,560
the configuration is done all through

183
00:07:16,560 --> 00:07:21,240
boo python ESF playground proxy

184
00:07:21,240 --> 00:07:22,560
um

185
00:07:22,560 --> 00:07:24,360
submitting a file communicates only with

186
00:07:24,360 --> 00:07:26,759
the database so it pushes this file to

187
00:07:26,759 --> 00:07:28,680
the database and then the agent is

188
00:07:28,680 --> 00:07:30,120
running on a system that pulls the file

189
00:07:30,120 --> 00:07:32,099
from the database and tries to attempt

190
00:07:32,099 --> 00:07:33,240
to run it

191
00:07:33,240 --> 00:07:35,880
uh tries to attempt to run it as a key

192
00:07:35,880 --> 00:07:37,259
point because right now it's really hard

193
00:07:37,259 --> 00:07:41,060
to automate execution of malware

194
00:07:43,800 --> 00:07:45,660
so as I said before all the

195
00:07:45,660 --> 00:07:47,220
communication is done through mongodb I

196
00:07:47,220 --> 00:07:49,199
don't have to open any ports on the

197
00:07:49,199 --> 00:07:50,699
analysis machine

198
00:07:50,699 --> 00:07:52,860
all I have to do is just ask the server

199
00:07:52,860 --> 00:07:54,780
what's available and what instructions

200
00:07:54,780 --> 00:07:56,639
it wants me to do and it will do that on

201
00:07:56,639 --> 00:07:58,139
the agent

202
00:07:58,139 --> 00:08:01,259
a benefit of this actually I'm sorry

203
00:08:01,259 --> 00:08:04,080
this uh essentially is just done by

204
00:08:04,080 --> 00:08:05,520
passing a football back and forth with

205
00:08:05,520 --> 00:08:07,500
job progress integer and

206
00:08:07,500 --> 00:08:09,539
that increments whenever a new step is

207
00:08:09,539 --> 00:08:11,719
available

208
00:08:12,060 --> 00:08:15,840
as a benefit of that using mongodb is

209
00:08:15,840 --> 00:08:18,259
that we push those files to the server

210
00:08:18,259 --> 00:08:20,520
any additional files that are collected

211
00:08:20,520 --> 00:08:22,560
from analysis on the system are also put

212
00:08:22,560 --> 00:08:24,479
into mongodb so we're not cluttering the

213
00:08:24,479 --> 00:08:27,720
system with malicious files or uh you

214
00:08:27,720 --> 00:08:31,039
know pcaps or anything like that

215
00:08:33,179 --> 00:08:35,399
as I said we're using man in the middle

216
00:08:35,399 --> 00:08:37,080
proxy to capture all packets from the

217
00:08:37,080 --> 00:08:40,020
system we are using a certificate so

218
00:08:40,020 --> 00:08:41,700
that can be defeated a little bit easily

219
00:08:41,700 --> 00:08:44,520
depending on how they write it but for

220
00:08:44,520 --> 00:08:46,140
the moment it seems that nobody's really

221
00:08:46,140 --> 00:08:49,580
looking for that on Mac OS so

222
00:08:52,080 --> 00:08:55,019
uh when I display the results of what

223
00:08:55,019 --> 00:08:56,040
network

224
00:08:56,040 --> 00:08:58,200
activity is going on I basically just

225
00:08:58,200 --> 00:09:00,000
printed the headers at first and we have

226
00:09:00,000 --> 00:09:01,620
the pcap available later if you want to

227
00:09:01,620 --> 00:09:03,060
look through all the traffic and even

228
00:09:03,060 --> 00:09:06,680
try to extract any data from it

229
00:09:11,220 --> 00:09:12,779
so

230
00:09:12,779 --> 00:09:16,860
as we know that the fire hose of ESF uh

231
00:09:16,860 --> 00:09:19,019
provides way too much information so we

232
00:09:19,019 --> 00:09:20,820
need a way to filter out some of these

233
00:09:20,820 --> 00:09:22,860
events that are bad what I've done is

234
00:09:22,860 --> 00:09:24,839
sort of created an event string that

235
00:09:24,839 --> 00:09:27,839
allows us to Hash it and compare it

236
00:09:27,839 --> 00:09:29,459
quickly so that we can ignore certain

237
00:09:29,459 --> 00:09:32,940
events that we know are good and I just

238
00:09:32,940 --> 00:09:35,580
do this by running the system for

239
00:09:35,580 --> 00:09:37,019
you know

240
00:09:37,019 --> 00:09:39,060
three minutes five minutes ten minutes

241
00:09:39,060 --> 00:09:40,620
however long you want just collect all

242
00:09:40,620 --> 00:09:42,060
the information and then run a good list

243
00:09:42,060 --> 00:09:44,100
script to collect those events and

244
00:09:44,100 --> 00:09:45,899
create this list

245
00:09:45,899 --> 00:09:48,779
this is imperfect right now it might be

246
00:09:48,779 --> 00:09:51,300
filtering too well so I'm working to

247
00:09:51,300 --> 00:09:53,399
tone it down so that I can collect more

248
00:09:53,399 --> 00:09:56,839
potential malicious events

249
00:09:58,140 --> 00:09:59,700
and like I said I was going to go

250
00:09:59,700 --> 00:10:01,860
through a demo but unfortunately uh the

251
00:10:01,860 --> 00:10:03,899
network here isn't allowing me to

252
00:10:03,899 --> 00:10:06,600
communicate between the systems

253
00:10:06,600 --> 00:10:09,180
but uh and I was also trying to use my

254
00:10:09,180 --> 00:10:10,800
cell phone as the Wi-Fi network and that

255
00:10:10,800 --> 00:10:13,939
wasn't working out very well either

256
00:10:15,380 --> 00:10:18,060
let me just go ahead and

257
00:10:18,060 --> 00:10:19,860
go over some of the results though just

258
00:10:19,860 --> 00:10:21,959
so I can kind of show what I'm

259
00:10:21,959 --> 00:10:23,279
collecting

260
00:10:23,279 --> 00:10:26,339
and just so this is a good list run you

261
00:10:26,339 --> 00:10:27,240
can see

262
00:10:27,240 --> 00:10:28,560
the amount of events that we're

263
00:10:28,560 --> 00:10:30,839
collecting just from what was it 1800

264
00:10:30,839 --> 00:10:33,560
seconds so

265
00:10:33,660 --> 00:10:35,459
yeah however long that is I'm not going

266
00:10:35,459 --> 00:10:37,980
to try to do math on my head right now

267
00:10:37,980 --> 00:10:39,980
um

268
00:10:40,620 --> 00:10:43,260
quite a lot of events when we click into

269
00:10:43,260 --> 00:10:44,760
them we can actually view the raw data

270
00:10:44,760 --> 00:10:46,320
and just try to scroll through that or

271
00:10:46,320 --> 00:10:47,519
search through that but it's not very

272
00:10:47,519 --> 00:10:48,600
helpful

273
00:10:48,600 --> 00:10:52,040
so filtering them down

274
00:10:52,440 --> 00:10:54,899
um actually

275
00:10:54,899 --> 00:10:57,240
I want to do wind tape you can see we we

276
00:10:57,240 --> 00:10:59,279
lower the amount of events quite a bit

277
00:10:59,279 --> 00:11:01,560
when we filter them down but as I said

278
00:11:01,560 --> 00:11:03,360
I'm doing it too well so a lot of the

279
00:11:03,360 --> 00:11:05,160
execution output is being missing right

280
00:11:05,160 --> 00:11:07,140
now

281
00:11:07,140 --> 00:11:09,200
um

282
00:11:09,200 --> 00:11:12,980
also wanted to show

283
00:11:13,380 --> 00:11:15,540
the request headers at the bottom

284
00:11:15,540 --> 00:11:16,860
so we can

285
00:11:16,860 --> 00:11:18,660
try to find out what traffic is

286
00:11:18,660 --> 00:11:22,219
happening on the system just at a glance

287
00:11:23,519 --> 00:11:26,220
that's the results screen it is very

288
00:11:26,220 --> 00:11:28,380
basic and somebody with a lot or with a

289
00:11:28,380 --> 00:11:29,760
little more CSS knowledge would probably

290
00:11:29,760 --> 00:11:30,839
be able to make it look a lot prettier

291
00:11:30,839 --> 00:11:33,360
than this but I'm a pretty

292
00:11:33,360 --> 00:11:36,079
simple person

293
00:11:39,660 --> 00:11:40,980
so

294
00:11:40,980 --> 00:11:42,600
some of the planned enhancements I have

295
00:11:42,600 --> 00:11:43,560
for

296
00:11:43,560 --> 00:11:47,100
uh es friend is

297
00:11:47,100 --> 00:11:49,440
allow it to run as root so we can gather

298
00:11:49,440 --> 00:11:50,940
more files from the system that are

299
00:11:50,940 --> 00:11:52,260
dropped because right now I can really

300
00:11:52,260 --> 00:11:55,100
only pull user files off the system

301
00:11:55,100 --> 00:11:57,839
because I'm not running as root

302
00:11:57,839 --> 00:11:59,220
and this shouldn't be too hard to adjust

303
00:11:59,220 --> 00:12:00,560
everything

304
00:12:00,560 --> 00:12:03,300
I also want to maybe Implement some VR

305
00:12:03,300 --> 00:12:05,100
rules for Network traffic to catch some

306
00:12:05,100 --> 00:12:07,260
things that are pretty simple

307
00:12:07,260 --> 00:12:10,700
such as Shell Code

308
00:12:12,899 --> 00:12:15,120
wanted to also Implement virtualization

309
00:12:15,120 --> 00:12:16,500
when it's ready because right now none

310
00:12:16,500 --> 00:12:17,820
of the virtualization software has

311
00:12:17,820 --> 00:12:18,839
allowed you to control it through

312
00:12:18,839 --> 00:12:21,300
command line

313
00:12:21,300 --> 00:12:24,240
do more similarity matching of

314
00:12:24,240 --> 00:12:26,760
the condensed events or the event string

315
00:12:26,760 --> 00:12:28,560
with SSD it might be possible that

316
00:12:28,560 --> 00:12:29,880
there's a way that we can do partial

317
00:12:29,880 --> 00:12:31,560
matching on that to find good events or

318
00:12:31,560 --> 00:12:33,060
bad events

319
00:12:33,060 --> 00:12:34,920
I'd like to transform the output into

320
00:12:34,920 --> 00:12:36,300
something a lot better than it looks

321
00:12:36,300 --> 00:12:39,480
right now but at the moment it's a it's

322
00:12:39,480 --> 00:12:41,700
a good system that allows you to send

323
00:12:41,700 --> 00:12:44,220
the file to the system

324
00:12:44,220 --> 00:12:46,680
run the malware collect the events and

325
00:12:46,680 --> 00:12:48,360
then reboot automatically so that you

326
00:12:48,360 --> 00:12:50,540
can

327
00:12:51,000 --> 00:12:52,560
start right over

328
00:12:52,560 --> 00:12:56,420
on the same file or the next file

329
00:12:59,519 --> 00:13:01,260
automated detonation is another problem

330
00:13:01,260 --> 00:13:03,000
like I said there's a lot of new

331
00:13:03,000 --> 00:13:04,680
features in Mac OS that make you right

332
00:13:04,680 --> 00:13:06,660
click on files and select check boxes to

333
00:13:06,660 --> 00:13:09,000
actually possibly remove the quarantine

334
00:13:09,000 --> 00:13:10,860
flag but um

335
00:13:10,860 --> 00:13:14,279
I haven't looked into that all the way

336
00:13:14,279 --> 00:13:18,079
custom ESF agent would be good as well

337
00:13:18,079 --> 00:13:21,300
disabling sip may be possible but I

338
00:13:21,300 --> 00:13:22,380
don't know if it affects the way that

339
00:13:22,380 --> 00:13:24,660
our recovery software works so that's

340
00:13:24,660 --> 00:13:26,639
something I still have to test a

341
00:13:26,639 --> 00:13:28,079
professional development polish would

342
00:13:28,079 --> 00:13:31,920
help and I'm very open to suggestions so

343
00:13:31,920 --> 00:13:35,300
um I look forward to hearing any

344
00:13:36,000 --> 00:13:39,360
uh Brooklyn I just wanted to thank the

345
00:13:39,360 --> 00:13:41,700
creators of makamau cuckoo for their

346
00:13:41,700 --> 00:13:44,639
inspiration Jaren Bradley Cedric Owens

347
00:13:44,639 --> 00:13:46,860
and Tony Piazza for helping me figure

348
00:13:46,860 --> 00:13:48,380
out which events are more related to

349
00:13:48,380 --> 00:13:51,600
malicious behavior and of course kanji

350
00:13:51,600 --> 00:13:53,220
and Objective C for the opportunity to

351
00:13:53,220 --> 00:13:54,540
be here

352
00:13:54,540 --> 00:13:56,100
if you wanted to check out the project

353
00:13:56,100 --> 00:13:58,320
it's available it's published under GPL

354
00:13:58,320 --> 00:14:00,300
so everybody can check it out and run it

355
00:14:00,300 --> 00:14:02,279
I'm sorry I wasn't able to do a demo to

356
00:14:02,279 --> 00:14:04,019
show you that it was reboots

357
00:14:04,019 --> 00:14:06,480
automatically and cleans the system

358
00:14:06,480 --> 00:14:08,399
automatically and restores pretty

359
00:14:08,399 --> 00:14:10,920
quickly actually to a clean state so

360
00:14:10,920 --> 00:14:12,300
that you can start over again and not

361
00:14:12,300 --> 00:14:15,600
have to wait for recovery

362
00:14:15,600 --> 00:14:17,579
um I also wanted to open the floor

363
00:14:17,579 --> 00:14:19,320
questions and discussion if anybody had

364
00:14:19,320 --> 00:14:21,500
any

365
00:14:22,800 --> 00:14:24,420
are you going to plan to add or look

366
00:14:24,420 --> 00:14:26,160
into some of the new ESF events from

367
00:14:26,160 --> 00:14:28,380
Ventura like some of the Expert Tech

368
00:14:28,380 --> 00:14:29,700
stuff seems that would be particularly

369
00:14:29,700 --> 00:14:32,279
relevant to malware yeah absolutely any

370
00:14:32,279 --> 00:14:34,980
new events that are added uh as Darren

371
00:14:34,980 --> 00:14:36,959
if he adds them through the beta okay uh

372
00:14:36,959 --> 00:14:39,839
then they would be helpful of course and

373
00:14:39,839 --> 00:14:41,399
I would definitely want to add every

374
00:14:41,399 --> 00:14:43,079
event at the moment I'm collecting

375
00:14:43,079 --> 00:14:44,699
everything from USF playground I have

376
00:14:44,699 --> 00:14:47,220
every switch enabled okay and it dumps a

377
00:14:47,220 --> 00:14:49,380
lot of information

378
00:14:49,380 --> 00:14:50,880
um one other thing that I'm also doing

379
00:14:50,880 --> 00:14:54,720
is collecting all the syslog events

380
00:14:54,720 --> 00:14:57,120
so I'm able to

381
00:14:57,120 --> 00:14:59,699
as a you know we have to as I said

382
00:14:59,699 --> 00:15:02,399
yesterday I'm dumping it all in Json and

383
00:15:02,399 --> 00:15:04,380
just pumping it into the mongodb server

384
00:15:04,380 --> 00:15:05,940
as well so we're collecting all the

385
00:15:05,940 --> 00:15:09,240
event streams or the log stream and I'm

386
00:15:09,240 --> 00:15:10,680
hopeful that that can reveal some more

387
00:15:10,680 --> 00:15:12,600
information but it's a big fire hose as

388
00:15:12,600 --> 00:15:13,800
well that I want to try to filter down

389
00:15:13,800 --> 00:15:15,420
better

390
00:15:15,420 --> 00:15:18,120
can I ask another question yeah have you

391
00:15:18,120 --> 00:15:20,160
played around with the new uh ESF

392
00:15:20,160 --> 00:15:22,320
utility that ships with Ventura is it

393
00:15:22,320 --> 00:15:24,360
ESF logger yeah I have not but I've

394
00:15:24,360 --> 00:15:26,339
heard of it okay and I'm looking forward

395
00:15:26,339 --> 00:15:27,959
to trying it out awesome it is nice to

396
00:15:27,959 --> 00:15:30,120
see apple kind of embracing and adding

397
00:15:30,120 --> 00:15:31,980
more utilities and capabilities and yeah

398
00:15:31,980 --> 00:15:33,839
it'd be great to have all the features

399
00:15:33,839 --> 00:15:36,980
available from that as well so

400
00:15:44,420 --> 00:15:47,279
I I don't know any

401
00:15:47,279 --> 00:15:50,399
um yeah I don't know about like Joe's

402
00:15:50,399 --> 00:15:52,560
hand box or anything like that but um as

403
00:15:52,560 --> 00:15:53,880
far as I know their output doesn't give

404
00:15:53,880 --> 00:15:57,560
us any ESF events so

405
00:16:00,600 --> 00:16:02,220
yes

406
00:16:02,220 --> 00:16:04,079
full of questions this is a topic near

407
00:16:04,079 --> 00:16:06,480
and dear to my heart uh if you could ask

408
00:16:06,480 --> 00:16:09,060
Apple for one Improvement uh well what

409
00:16:09,060 --> 00:16:11,220
would that be

410
00:16:11,220 --> 00:16:13,860
to make you know this easier development

411
00:16:13,860 --> 00:16:15,120
the

412
00:16:15,120 --> 00:16:16,920
or anything language

413
00:16:16,920 --> 00:16:18,720
I'll be honest this is a very simple

414
00:16:18,720 --> 00:16:20,639
program and it's very extensible as far

415
00:16:20,639 --> 00:16:23,220
as um how you can modify it so I didn't

416
00:16:23,220 --> 00:16:24,899
run into many problems with apple

417
00:16:24,899 --> 00:16:27,120
technology in this

418
00:16:27,120 --> 00:16:28,920
um

419
00:16:28,920 --> 00:16:31,560
yeah it's it's basically just a simple

420
00:16:31,560 --> 00:16:33,000
data collector

421
00:16:33,000 --> 00:16:35,100
um and thankfully I didn't run into any

422
00:16:35,100 --> 00:16:37,560
snacks with them

423
00:16:37,560 --> 00:16:39,420
that's great

424
00:16:39,420 --> 00:16:42,720
any other questions for Matt

425
00:16:42,720 --> 00:16:44,279
awesome let's give a round of applause

426
00:16:44,279 --> 00:16:47,600
again for Matt thank you

