1
00:00:00,659 --> 00:00:03,559
bye

2
00:00:08,540 --> 00:00:11,460
hopefully everybody can hear me so today

3
00:00:11,460 --> 00:00:13,559
I am going to be talking about improving

4
00:00:13,559 --> 00:00:15,780
Mac OS security by reducing

5
00:00:15,780 --> 00:00:17,640
authentication prompts

6
00:00:17,640 --> 00:00:19,980
so just to introduce myself my name is

7
00:00:19,980 --> 00:00:21,660
Michael Epping my colleague Mark was

8
00:00:21,660 --> 00:00:22,920
supposed to be here with me but

9
00:00:22,920 --> 00:00:24,359
unfortunately he wasn't able to make it

10
00:00:24,359 --> 00:00:26,460
he has been following Along on Twitter

11
00:00:26,460 --> 00:00:28,439
uh I tried to tell him it like wasn't

12
00:00:28,439 --> 00:00:29,880
really beautiful here and he wasn't

13
00:00:29,880 --> 00:00:31,859
buying it so he's kind of mad that he's

14
00:00:31,859 --> 00:00:34,380
not here but unfortunately he's not with

15
00:00:34,380 --> 00:00:38,040
us so I'm presenting solo today so I am

16
00:00:38,040 --> 00:00:41,160
a senior product manager in the Azure ID

17
00:00:41,160 --> 00:00:42,420
product group within the security

18
00:00:42,420 --> 00:00:45,480
division at Microsoft and within the

19
00:00:45,480 --> 00:00:47,100
Azure ID product group I'm actually on a

20
00:00:47,100 --> 00:00:48,899
team called get to production and so

21
00:00:48,899 --> 00:00:51,180
what I do is I work with a large

22
00:00:51,180 --> 00:00:52,739
strategic Microsoft customers like

23
00:00:52,739 --> 00:00:56,100
Fortune 500 companies Banks security

24
00:00:56,100 --> 00:00:58,920
companies you know you name it to

25
00:00:58,920 --> 00:01:01,079
actually Implement Microsoft's features

26
00:01:01,079 --> 00:01:03,420
that come within the Azure ID product

27
00:01:03,420 --> 00:01:05,880
bundle in addition to that I also work

28
00:01:05,880 --> 00:01:07,500
with our feature teams

29
00:01:07,500 --> 00:01:09,720
to take that customer feedback and drive

30
00:01:09,720 --> 00:01:11,460
it into the product and to make

31
00:01:11,460 --> 00:01:13,380
improvements and I specifically work

32
00:01:13,380 --> 00:01:14,820
with teams that are building Mac and

33
00:01:14,820 --> 00:01:17,220
Linux features if anybody's not aware we

34
00:01:17,220 --> 00:01:19,500
just had a big new Linux announcement on

35
00:01:19,500 --> 00:01:21,960
Monday that we're now supporting Azure

36
00:01:21,960 --> 00:01:24,000
ID registration and InTune device

37
00:01:24,000 --> 00:01:25,500
management for Linux which I think is

38
00:01:25,500 --> 00:01:28,020
pretty exciting but really my heart is

39
00:01:28,020 --> 00:01:29,759
in the max space so I really want to

40
00:01:29,759 --> 00:01:31,259
talk about what we've been discussing

41
00:01:31,259 --> 00:01:34,500
with Mac OS customers and our Fortune

42
00:01:34,500 --> 00:01:36,479
500 customers and other strategic

43
00:01:36,479 --> 00:01:39,840
customers who use a lot of Macs

44
00:01:39,840 --> 00:01:41,460
so I'm going to focus on a couple things

45
00:01:41,460 --> 00:01:43,320
so I am going to talk about what is

46
00:01:43,320 --> 00:01:45,000
azure ID and conditional access I

47
00:01:45,000 --> 00:01:46,380
promise this isn't going to be like a

48
00:01:46,380 --> 00:01:48,840
Microsoft specific talk a lot of what

49
00:01:48,840 --> 00:01:50,640
I'm going to discuss is really about how

50
00:01:50,640 --> 00:01:52,799
the industry is trending in general so

51
00:01:52,799 --> 00:01:54,540
you could sub in a different IDP a

52
00:01:54,540 --> 00:01:56,520
different IDP vendor for a lot of the

53
00:01:56,520 --> 00:01:58,200
things I'm going to talk about and what

54
00:01:58,200 --> 00:01:59,640
I'm going to say is still holding true

55
00:01:59,640 --> 00:02:01,740
in the Enterprise a lot of the focus

56
00:02:01,740 --> 00:02:04,200
here is on Enterprise scenarios but it

57
00:02:04,200 --> 00:02:06,180
could also apply to schools non-profits

58
00:02:06,180 --> 00:02:08,098
you name it we'll talk about why

59
00:02:08,098 --> 00:02:09,959
prompting is bad and then the things

60
00:02:09,959 --> 00:02:11,640
that Microsoft has been working with our

61
00:02:11,640 --> 00:02:13,920
Enterprise customers to implement and

62
00:02:13,920 --> 00:02:15,120
really what I'm hoping to get out of

63
00:02:15,120 --> 00:02:16,800
this is a better understanding about

64
00:02:16,800 --> 00:02:18,599
what we're doing in the Enterprise space

65
00:02:18,599 --> 00:02:19,980
and what Apple's building in the

66
00:02:19,980 --> 00:02:21,480
Enterprise space specifically around

67
00:02:21,480 --> 00:02:24,239
identity and then hopefully pique some

68
00:02:24,239 --> 00:02:26,220
interest among people here because I

69
00:02:26,220 --> 00:02:28,140
think there's a lot of opportunity for

70
00:02:28,140 --> 00:02:30,540
let's say investigating some of the

71
00:02:30,540 --> 00:02:34,920
tools that are being used in this space

72
00:02:34,920 --> 00:02:37,860
so to start out Azure ID is not active

73
00:02:37,860 --> 00:02:39,900
directory in the cloud I get this all

74
00:02:39,900 --> 00:02:42,959
the time from customers or any random

75
00:02:42,959 --> 00:02:44,280
person I might talk to they think we're

76
00:02:44,280 --> 00:02:45,300
just running a bunch of domain

77
00:02:45,300 --> 00:02:47,280
controllers in our data center that is

78
00:02:47,280 --> 00:02:50,160
not it Azure ID is an identity service

79
00:02:50,160 --> 00:02:53,700
it's an IDP uh fundamentally just like

80
00:02:53,700 --> 00:02:55,800
there's many other idps on the market

81
00:02:55,800 --> 00:02:58,860
it's not just for office 365. for a lot

82
00:02:58,860 --> 00:03:01,260
of the major Enterprise customers we

83
00:03:01,260 --> 00:03:03,540
work with they are investing in

84
00:03:03,540 --> 00:03:06,239
migrating lots and lots of resources to

85
00:03:06,239 --> 00:03:08,819
be integrated with Azure ad so yes there

86
00:03:08,819 --> 00:03:10,260
could be Integrations with on-prem

87
00:03:10,260 --> 00:03:11,640
environments but we're also talking

88
00:03:11,640 --> 00:03:14,760
about SAS applications device identity

89
00:03:14,760 --> 00:03:17,580
consumer identity partner identities

90
00:03:17,580 --> 00:03:20,040
there's a lot of things going on in the

91
00:03:20,040 --> 00:03:21,720
cloud space

92
00:03:21,720 --> 00:03:23,940
a big Trend that our industry has seen

93
00:03:23,940 --> 00:03:25,980
is that resources are moving to the

94
00:03:25,980 --> 00:03:28,800
cloud in ever greater numbers devices

95
00:03:28,800 --> 00:03:30,720
are proliferating and especially in the

96
00:03:30,720 --> 00:03:32,519
last couple years users are working

97
00:03:32,519 --> 00:03:34,620
outside the office a lot of the old

98
00:03:34,620 --> 00:03:36,060
security paradigms that the security

99
00:03:36,060 --> 00:03:38,879
teams we talked to leveraged in the past

100
00:03:38,879 --> 00:03:40,739
like protecting everything behind the

101
00:03:40,739 --> 00:03:42,780
firewall on the corporate Network don't

102
00:03:42,780 --> 00:03:45,060
really apply anymore for a lot of our

103
00:03:45,060 --> 00:03:47,099
customers the way the industry is moving

104
00:03:47,099 --> 00:03:49,319
is towards identity being the control

105
00:03:49,319 --> 00:03:51,420
plane rather than rather than the

106
00:03:51,420 --> 00:03:53,400
network perimeter so yes what's going on

107
00:03:53,400 --> 00:03:55,799
on the devices is really critical yes

108
00:03:55,799 --> 00:03:58,379
what's going on on the app servers is

109
00:03:58,379 --> 00:04:00,060
really critical but for a lot of the

110
00:04:00,060 --> 00:04:02,459
security teams we work with identity and

111
00:04:02,459 --> 00:04:04,739
building policy around identity and who

112
00:04:04,739 --> 00:04:07,080
can access what from what device is

113
00:04:07,080 --> 00:04:08,459
really the core of their security

114
00:04:08,459 --> 00:04:11,760
strategy going forward

115
00:04:11,760 --> 00:04:14,400
Azure ID like pretty much all of the

116
00:04:14,400 --> 00:04:16,380
other vendors out there is built on Open

117
00:04:16,380 --> 00:04:18,918
Standards Open Standards are really the

118
00:04:18,918 --> 00:04:20,940
lifeblood that makes this whole thing

119
00:04:20,940 --> 00:04:23,280
work all of us need to be able to work

120
00:04:23,280 --> 00:04:26,220
with any SAS application out there it's

121
00:04:26,220 --> 00:04:28,199
really important that we that we use

122
00:04:28,199 --> 00:04:30,660
these Open Standards and that just build

123
00:04:30,660 --> 00:04:33,120
our own proprietary protocols so for

124
00:04:33,120 --> 00:04:34,800
example Microsoft's own cloud services

125
00:04:34,800 --> 00:04:37,020
are all built on openid connect so if

126
00:04:37,020 --> 00:04:38,699
you use exchange online SharePoint

127
00:04:38,699 --> 00:04:41,699
online etc etc those are all open ID

128
00:04:41,699 --> 00:04:45,060
connect oauth applications we're also

129
00:04:45,060 --> 00:04:47,759
really active in some standards bodies

130
00:04:47,759 --> 00:04:49,680
so the phyto alliance is a really big

131
00:04:49,680 --> 00:04:52,380
thing for us we really want to do this

132
00:04:52,380 --> 00:04:53,940
thing called passwordless where we stop

133
00:04:53,940 --> 00:04:55,979
having users using password-based

134
00:04:55,979 --> 00:04:58,440
credentials because it turns out that

135
00:04:58,440 --> 00:05:00,900
they're really easy to steal but we're

136
00:05:00,900 --> 00:05:02,160
also participating in some other

137
00:05:02,160 --> 00:05:04,320
standards bodies as well a big another

138
00:05:04,320 --> 00:05:06,180
big one is decentralized identity

139
00:05:06,180 --> 00:05:07,280
Foundation

140
00:05:07,280 --> 00:05:10,560
in the passwordless space and the Fido

141
00:05:10,560 --> 00:05:12,360
space there was actually a big joint

142
00:05:12,360 --> 00:05:14,340
announcement from Microsoft Apple Google

143
00:05:14,340 --> 00:05:16,919
and the Fido Foundation back in May

144
00:05:16,919 --> 00:05:19,199
around a new type of credential called a

145
00:05:19,199 --> 00:05:22,740
pass key if you've followed Apple's WWDC

146
00:05:22,740 --> 00:05:23,940
announcements there's a lot of

147
00:05:23,940 --> 00:05:25,560
discussion about their implementation of

148
00:05:25,560 --> 00:05:27,180
this as well so there's a lot of things

149
00:05:27,180 --> 00:05:31,080
evolving here in the identity space

150
00:05:31,080 --> 00:05:34,139
for Azure ID specifically the thing that

151
00:05:34,139 --> 00:05:36,419
is really at the heart of our tool set

152
00:05:36,419 --> 00:05:38,820
is what's called conditional access so

153
00:05:38,820 --> 00:05:41,039
this is basically Microsoft's zero trust

154
00:05:41,039 --> 00:05:43,080
authentication and authorization engine

155
00:05:43,080 --> 00:05:45,720
it's the thing that looks at what are

156
00:05:45,720 --> 00:05:47,460
the conditions under which a user is

157
00:05:47,460 --> 00:05:49,979
trying to access a resource and it then

158
00:05:49,979 --> 00:05:51,780
makes a decision about what they need to

159
00:05:51,780 --> 00:05:53,699
do in order to actually get access to

160
00:05:53,699 --> 00:05:56,100
that resource and this could mean that

161
00:05:56,100 --> 00:05:58,259
we apply one policy if the user's on a

162
00:05:58,259 --> 00:06:00,120
Windows device a different policy if

163
00:06:00,120 --> 00:06:01,680
they're on a Mac device a different

164
00:06:01,680 --> 00:06:04,100
policy if they're on an unknown device

165
00:06:04,100 --> 00:06:06,539
it also means that we can evaluate

166
00:06:06,539 --> 00:06:08,220
things like Risk like we have a machine

167
00:06:08,220 --> 00:06:10,979
learning engine that is evaluating every

168
00:06:10,979 --> 00:06:13,560
sign in and every user to determine risk

169
00:06:13,560 --> 00:06:15,479
we have a huge data set since we have

170
00:06:15,479 --> 00:06:17,820
one of the largest identity services in

171
00:06:17,820 --> 00:06:18,660
the world

172
00:06:18,660 --> 00:06:21,360
to build some of these ml models on we

173
00:06:21,360 --> 00:06:22,620
do have Integrations with lots of

174
00:06:22,620 --> 00:06:24,060
devices and I'm going to talk about the

175
00:06:24,060 --> 00:06:25,919
Mac integration in a moment and then

176
00:06:25,919 --> 00:06:27,900
there's other things you can do with

177
00:06:27,900 --> 00:06:29,039
this as well

178
00:06:29,039 --> 00:06:30,660
one of the things that we really strive

179
00:06:30,660 --> 00:06:33,479
for is evaluating trust every time a

180
00:06:33,479 --> 00:06:35,400
user device requests access to a

181
00:06:35,400 --> 00:06:38,280
resource so we need to constantly be

182
00:06:38,280 --> 00:06:41,340
checking to see should I intervene and

183
00:06:41,340 --> 00:06:43,199
stop this user from accessing a resource

184
00:06:43,199 --> 00:06:45,180
like is there endpoint in an unhealthy

185
00:06:45,180 --> 00:06:47,520
State like the antivirus says that

186
00:06:47,520 --> 00:06:49,080
there's something wrong and we need to

187
00:06:49,080 --> 00:06:50,699
now shut off their access to Cloud

188
00:06:50,699 --> 00:06:53,699
resources and we need to do this on a

189
00:06:53,699 --> 00:06:56,280
constant basis and the way that we do

190
00:06:56,280 --> 00:06:58,680
that is through the way that conditional

191
00:06:58,680 --> 00:07:02,100
access actually uses tokens and it's

192
00:07:02,100 --> 00:07:03,840
evaluation logic

193
00:07:03,840 --> 00:07:06,180
so what administrators do in these

194
00:07:06,180 --> 00:07:07,800
environments is they create conditional

195
00:07:07,800 --> 00:07:10,199
access policies that are really just big

196
00:07:10,199 --> 00:07:12,900
chunks of Json under the hood and so you

197
00:07:12,900 --> 00:07:14,940
do things like Define your conditions

198
00:07:14,940 --> 00:07:18,240
and then you decide what sort of policy

199
00:07:18,240 --> 00:07:19,919
you want to apply or what controls you

200
00:07:19,919 --> 00:07:22,620
want to apply based on those conditions

201
00:07:22,620 --> 00:07:24,180
so when you do this you can have

202
00:07:24,180 --> 00:07:25,979
multiple policies and they kind of all

203
00:07:25,979 --> 00:07:27,419
get squished together but the

204
00:07:27,419 --> 00:07:30,180
fundamental thing to understand is that

205
00:07:30,180 --> 00:07:32,940
if you have any policies that say a user

206
00:07:32,940 --> 00:07:35,220
should be blocked they'll be blocked so

207
00:07:35,220 --> 00:07:37,680
just as an example I have a sign in that

208
00:07:37,680 --> 00:07:40,080
I did here in my lab environment this

209
00:07:40,080 --> 00:07:42,660
was on a Mac that was in an unmanaged

210
00:07:42,660 --> 00:07:44,639
State using the edge browser I signed

211
00:07:44,639 --> 00:07:46,800
into the Azure ad portal you can see

212
00:07:46,800 --> 00:07:49,080
that Azure ID sees this device as being

213
00:07:49,080 --> 00:07:52,319
not compliant so in my environment if my

214
00:07:52,319 --> 00:07:54,240
devices are being configured or my

215
00:07:54,240 --> 00:07:55,919
policies are being configured in such a

216
00:07:55,919 --> 00:07:58,680
way that devices need to be compliant

217
00:07:58,680 --> 00:08:00,840
I would not be able to get access

218
00:08:00,840 --> 00:08:02,580
there's other Grant controls that we can

219
00:08:02,580 --> 00:08:04,440
put in place like evaluating risk

220
00:08:04,440 --> 00:08:07,440
evaluating MFA evaluating what type of

221
00:08:07,440 --> 00:08:08,780
device it is

222
00:08:08,780 --> 00:08:10,800
you know there's there's a lot of

223
00:08:10,800 --> 00:08:12,300
different options

224
00:08:12,300 --> 00:08:14,520
but fundamentally one of the things to

225
00:08:14,520 --> 00:08:16,620
understand is that we try to satisfy

226
00:08:16,620 --> 00:08:19,680
policy without user interaction and this

227
00:08:19,680 --> 00:08:22,500
is really common especially on Windows

228
00:08:22,500 --> 00:08:25,379
devices like Windows is really good at

229
00:08:25,379 --> 00:08:27,240
integrating with Azure ad it makes a lot

230
00:08:27,240 --> 00:08:29,759
of sense since we make Windows it makes

231
00:08:29,759 --> 00:08:32,700
a lot of sense and windows uses its

232
00:08:32,700 --> 00:08:36,419
tokens to set non-interactively satisfy

233
00:08:36,419 --> 00:08:38,640
these controls so we can do things like

234
00:08:38,640 --> 00:08:41,279
say identify that a device is in a

235
00:08:41,279 --> 00:08:42,899
managed or compliant State and then we

236
00:08:42,899 --> 00:08:44,760
don't need to prompt the user for MFA

237
00:08:44,760 --> 00:08:47,040
this differs a little bit on Max which

238
00:08:47,040 --> 00:08:49,380
out of the box a Mac doesn't necessarily

239
00:08:49,380 --> 00:08:51,360
have some of the same Integrations so we

240
00:08:51,360 --> 00:08:53,100
need to think about how do we manage

241
00:08:53,100 --> 00:08:55,560
Macs in our environment

242
00:08:55,560 --> 00:08:57,360
so if you're unfamiliar with what's

243
00:08:57,360 --> 00:08:59,279
being done in your organization if you

244
00:08:59,279 --> 00:09:01,560
use Azure ad it's always a good idea to

245
00:09:01,560 --> 00:09:02,580
talk to your identity and access

246
00:09:02,580 --> 00:09:04,920
management team to understand what those

247
00:09:04,920 --> 00:09:07,320
policies look like some really common

248
00:09:07,320 --> 00:09:09,180
ones that we recommend for customers in

249
00:09:09,180 --> 00:09:11,600
general are things like requiring MFA

250
00:09:11,600 --> 00:09:14,820
blocking Legacy authentication if you

251
00:09:14,820 --> 00:09:16,200
use exchange online this is going to

252
00:09:16,200 --> 00:09:18,600
happen to pretty much everybody in the

253
00:09:18,600 --> 00:09:19,560
near future

254
00:09:19,560 --> 00:09:21,420
black access in places where you don't

255
00:09:21,420 --> 00:09:24,180
do business require that a device is in

256
00:09:24,180 --> 00:09:26,519
a managed State and then where things

257
00:09:26,519 --> 00:09:27,720
start to get a little bit interesting

258
00:09:27,720 --> 00:09:30,360
for the Mac picture is stricter controls

259
00:09:30,360 --> 00:09:33,360
for non-corporate managed devices so

260
00:09:33,360 --> 00:09:34,920
what we found with Enterprise customers

261
00:09:34,920 --> 00:09:37,680
is it is really common for their Macs to

262
00:09:37,680 --> 00:09:39,660
look at look like they are unmanaged

263
00:09:39,660 --> 00:09:40,680
devices

264
00:09:40,680 --> 00:09:43,019
so a common scenario that we might hear

265
00:09:43,019 --> 00:09:45,000
an administrator configuring a policy

266
00:09:45,000 --> 00:09:47,220
for would be something like I want to

267
00:09:47,220 --> 00:09:50,399
allow users to get access to their email

268
00:09:50,399 --> 00:09:53,459
in a web browser if they're on an

269
00:09:53,459 --> 00:09:55,800
unmanaged PC like I might be at my

270
00:09:55,800 --> 00:09:57,360
parents house to help them out with

271
00:09:57,360 --> 00:09:58,740
something and I just need to check my

272
00:09:58,740 --> 00:10:00,959
email real quick that's fine but we want

273
00:10:00,959 --> 00:10:02,880
to Nuke that session after two hours

274
00:10:02,880 --> 00:10:04,920
because we don't want a persistent

275
00:10:04,920 --> 00:10:07,019
session going on that device

276
00:10:07,019 --> 00:10:09,420
this seems really good for security but

277
00:10:09,420 --> 00:10:12,420
what we found in Azure ad is that

278
00:10:12,420 --> 00:10:15,959
prompting is actually really bad so we

279
00:10:15,959 --> 00:10:17,279
need to think about how we can improve

280
00:10:17,279 --> 00:10:19,560
prompting on these devices that are

281
00:10:19,560 --> 00:10:22,500
looking to us like they are unmanaged

282
00:10:22,500 --> 00:10:24,540
so to just kind of illustrate that this

283
00:10:24,540 --> 00:10:26,640
problem exists in the wild we have a

284
00:10:26,640 --> 00:10:28,380
couple examples of tweets that we've

285
00:10:28,380 --> 00:10:31,800
seen so Amy said PSA don't blindly

286
00:10:31,800 --> 00:10:33,600
accept MFA requests if you're trying to

287
00:10:33,600 --> 00:10:35,060
log into something

288
00:10:35,060 --> 00:10:37,800
very famously in the news lately there

289
00:10:37,800 --> 00:10:39,899
has been an example of an organization

290
00:10:39,899 --> 00:10:41,519
that this happened to and the breach is

291
00:10:41,519 --> 00:10:44,399
very bad and all the attacker did was

292
00:10:44,399 --> 00:10:46,500
trick the user to accept an MFA request

293
00:10:46,500 --> 00:10:50,100
that was not initiated by the end user

294
00:10:50,100 --> 00:10:52,260
another example is I found a company

295
00:10:52,260 --> 00:10:54,240
today who refreshes their end user

296
00:10:54,240 --> 00:10:55,980
credentials every morning so every

297
00:10:55,980 --> 00:10:57,420
morning their users get a push

298
00:10:57,420 --> 00:11:00,000
notification to log in this is not good

299
00:11:00,000 --> 00:11:02,220
you are training your end users to

300
00:11:02,220 --> 00:11:05,339
accept any old MFA prompt so that is

301
00:11:05,339 --> 00:11:07,380
generally not a good idea

302
00:11:07,380 --> 00:11:09,060
and then we can also have productivity

303
00:11:09,060 --> 00:11:12,360
impacts so Reed Whiteman said I kind of

304
00:11:12,360 --> 00:11:13,860
want to write an app that tracks how

305
00:11:13,860 --> 00:11:15,779
many hours per week I spend 2fa into

306
00:11:15,779 --> 00:11:18,360
different collaboration systems if

307
00:11:18,360 --> 00:11:20,160
you're a Mac User in an environment that

308
00:11:20,160 --> 00:11:22,800
uses Azure ID you probably fall into

309
00:11:22,800 --> 00:11:24,540
this bucket where you are used to doing

310
00:11:24,540 --> 00:11:27,300
multiple sign-ins multiple mfas all the

311
00:11:27,300 --> 00:11:28,920
time

312
00:11:28,920 --> 00:11:30,480
so we do have a real world example

313
00:11:30,480 --> 00:11:32,339
that's not just pulled from Twitter so

314
00:11:32,339 --> 00:11:34,279
we did talk to a European financial

315
00:11:34,279 --> 00:11:36,600
industry customer who did a simulated

316
00:11:36,600 --> 00:11:39,000
Cyber attack so basically their red team

317
00:11:39,000 --> 00:11:41,040
got permission to password spray their

318
00:11:41,040 --> 00:11:42,300
own users

319
00:11:42,300 --> 00:11:44,700
and find users with weak passwords not

320
00:11:44,700 --> 00:11:46,019
the most complicated thing in the world

321
00:11:46,019 --> 00:11:47,940
but in most environments this is going

322
00:11:47,940 --> 00:11:50,579
to work on some decent chunk of your

323
00:11:50,579 --> 00:11:51,480
users

324
00:11:51,480 --> 00:11:53,940
then they hammered those users with

325
00:11:53,940 --> 00:11:56,040
compromised passwords with MFA prompts

326
00:11:56,040 --> 00:11:59,000
and the findings were pretty interesting

327
00:11:59,000 --> 00:12:01,200
nobody reported anything to the help

328
00:12:01,200 --> 00:12:04,880
desk so that's usually not a good sign

329
00:12:04,880 --> 00:12:07,500
also many users blindly approved those

330
00:12:07,500 --> 00:12:10,860
MFA requests that's also really bad and

331
00:12:10,860 --> 00:12:12,600
one user actually uninstalled the

332
00:12:12,600 --> 00:12:15,000
authenticator app from their device and

333
00:12:15,000 --> 00:12:16,500
it is not even clear how they were

334
00:12:16,500 --> 00:12:18,980
working anymore

335
00:12:19,980 --> 00:12:22,920
so we have this this major problem that

336
00:12:22,920 --> 00:12:25,440
if we don't give the users a good end

337
00:12:25,440 --> 00:12:28,019
user experience and we over prompt them

338
00:12:28,019 --> 00:12:30,060
we're going to train them into just

339
00:12:30,060 --> 00:12:32,040
responding to anything or ignoring

340
00:12:32,040 --> 00:12:34,440
prompts when they are valid we need to

341
00:12:34,440 --> 00:12:35,640
make sure that we're training our users

342
00:12:35,640 --> 00:12:38,220
to have good end user Behavior we've

343
00:12:38,220 --> 00:12:40,140
talked a lot over the last two days

344
00:12:40,140 --> 00:12:42,660
about you know some really cool attacks

345
00:12:42,660 --> 00:12:45,360
like zero day exploits and all sorts of

346
00:12:45,360 --> 00:12:48,060
incredible stuff but in our experience

347
00:12:48,060 --> 00:12:50,220
the vast majority of things that

348
00:12:50,220 --> 00:12:52,260
actually get an organization compromised

349
00:12:52,260 --> 00:12:55,680
are things like this almost all of the

350
00:12:55,680 --> 00:12:58,079
compromises in Azure ad are due to end

351
00:12:58,079 --> 00:12:59,579
users getting password sprayed

352
00:12:59,579 --> 00:13:01,980
organizations not using MFA or

353
00:13:01,980 --> 00:13:04,560
organizations using MFA poorly so it's

354
00:13:04,560 --> 00:13:05,880
really important to think about this

355
00:13:05,880 --> 00:13:08,220
stuff when it comes to our Mac users in

356
00:13:08,220 --> 00:13:11,279
addition to the rest of our user base

357
00:13:11,279 --> 00:13:13,980
so why is prompting bad leads to

358
00:13:13,980 --> 00:13:15,899
compromise users learn those bad

359
00:13:15,899 --> 00:13:17,579
behaviors we don't want to just hit

360
00:13:17,579 --> 00:13:19,920
approve on random MFA requests we might

361
00:13:19,920 --> 00:13:22,320
receive it also impacts productivity

362
00:13:22,320 --> 00:13:25,980
especially on platforms without SSO SSO

363
00:13:25,980 --> 00:13:28,680
being single sign-on prompting is

364
00:13:28,680 --> 00:13:30,720
especially common on Mac OS because Mac

365
00:13:30,720 --> 00:13:33,480
OS does not do SSO out of the box

366
00:13:33,480 --> 00:13:35,700
and we need to strive to improve user

367
00:13:35,700 --> 00:13:37,800
experience and security so for

368
00:13:37,800 --> 00:13:40,079
Microsoft's perspective one of the ways

369
00:13:40,079 --> 00:13:42,180
that we do this is we prompt when needed

370
00:13:42,180 --> 00:13:44,700
so the user's on a new device or they're

371
00:13:44,700 --> 00:13:46,139
signing in from a location they've never

372
00:13:46,139 --> 00:13:47,940
signed in from before where something

373
00:13:47,940 --> 00:13:49,740
looks particularly risky about that

374
00:13:49,740 --> 00:13:51,959
user's behavior and if we do need to

375
00:13:51,959 --> 00:13:53,579
prompt the user we need to try to use

376
00:13:53,579 --> 00:13:55,920
passwordless methods to try to make it

377
00:13:55,920 --> 00:13:59,040
less impactful when it is needed

378
00:13:59,040 --> 00:14:00,600
so now I'm going to talk about what

379
00:14:00,600 --> 00:14:01,560
we've been working with our Enterprise

380
00:14:01,560 --> 00:14:03,600
customers to deploy

381
00:14:03,600 --> 00:14:04,860
to help everybody get a better

382
00:14:04,860 --> 00:14:07,200
understanding about where this where

383
00:14:07,200 --> 00:14:08,880
this is leading to in the Enterprise

384
00:14:08,880 --> 00:14:10,680
space

385
00:14:10,680 --> 00:14:12,899
so the first thing that we work with

386
00:14:12,899 --> 00:14:15,000
customers on is even figuring out if we

387
00:14:15,000 --> 00:14:17,880
have a problem especially in Fortune 500

388
00:14:17,880 --> 00:14:21,120
customers who are primarily window shops

389
00:14:21,120 --> 00:14:23,760
a lot of times they are not aware of

390
00:14:23,760 --> 00:14:25,260
whether or not their users on Mac are

391
00:14:25,260 --> 00:14:28,139
having a bad experience usually they are

392
00:14:28,139 --> 00:14:30,180
if the executives are using Macs but if

393
00:14:30,180 --> 00:14:33,300
they're not then a lot of times Central

394
00:14:33,300 --> 00:14:35,820
I.T is not always aware so one of the

395
00:14:35,820 --> 00:14:38,700
things we built is pre-built data in

396
00:14:38,700 --> 00:14:40,980
Azure ad to help it organizations figure

397
00:14:40,980 --> 00:14:43,740
this out so we have pre-built workbooks

398
00:14:43,740 --> 00:14:45,540
that can use all the data that's in your

399
00:14:45,540 --> 00:14:48,779
own Azure ad tenant to give you the the

400
00:14:48,779 --> 00:14:51,000
information you need to figure out if

401
00:14:51,000 --> 00:14:52,920
you have a problem

402
00:14:52,920 --> 00:14:54,540
so the types of things that you can

403
00:14:54,540 --> 00:14:56,760
figure out pretty easily using this are

404
00:14:56,760 --> 00:14:58,500
which users are getting prompted all the

405
00:14:58,500 --> 00:15:00,480
time are there applications that are

406
00:15:00,480 --> 00:15:01,980
causing the user to be prompted all the

407
00:15:01,980 --> 00:15:04,260
time like we found that there are SAS

408
00:15:04,260 --> 00:15:06,540
applications out there that have bad

409
00:15:06,540 --> 00:15:08,760
integration recommendations that will

410
00:15:08,760 --> 00:15:10,320
automatically cause the user to be

411
00:15:10,320 --> 00:15:12,240
prompted a lot and then what is the

412
00:15:12,240 --> 00:15:13,740
state of the device and I really want to

413
00:15:13,740 --> 00:15:16,519
focus on that one

414
00:15:16,620 --> 00:15:20,220
so our second recommendation that we

415
00:15:20,220 --> 00:15:22,260
Implement with MD or with Enterprise

416
00:15:22,260 --> 00:15:24,360
customers is getting them to enroll into

417
00:15:24,360 --> 00:15:26,220
MDM we do still come across

418
00:15:26,220 --> 00:15:29,160
organizations that are not using MDM on

419
00:15:29,160 --> 00:15:32,160
Mac OS it's not common anymore but it

420
00:15:32,160 --> 00:15:34,740
does exist out there and one of the

421
00:15:34,740 --> 00:15:36,060
reasons why we need them to implement

422
00:15:36,060 --> 00:15:39,000
MDM is MDM is the only modern way to

423
00:15:39,000 --> 00:15:40,980
deploy Enterprise features to Mac OS

424
00:15:40,980 --> 00:15:42,899
like these Enterprise security features

425
00:15:42,899 --> 00:15:44,399
that we're going to talk about reducing

426
00:15:44,399 --> 00:15:46,800
these auth prompts getting antivirus

427
00:15:46,800 --> 00:15:49,019
onto the devices doing identity

428
00:15:49,019 --> 00:15:51,000
correctly on the Mac devices these

429
00:15:51,000 --> 00:15:53,160
things all require that the device is

430
00:15:53,160 --> 00:15:54,839
under MDM management

431
00:15:54,839 --> 00:15:57,180
so we can improve device security by

432
00:15:57,180 --> 00:15:58,680
integrating with things like conditional

433
00:15:58,680 --> 00:16:01,199
access that I told you about before and

434
00:16:01,199 --> 00:16:02,760
we can also improve that end user

435
00:16:02,760 --> 00:16:05,579
experience one point of confusion that

436
00:16:05,579 --> 00:16:08,279
often comes up here is you don't need to

437
00:16:08,279 --> 00:16:09,660
do both like if you don't want to use

438
00:16:09,660 --> 00:16:11,279
conditional access but you still want

439
00:16:11,279 --> 00:16:14,579
SSO for your Office 365 applications and

440
00:16:14,579 --> 00:16:17,279
other things in Azure 80 you can do that

441
00:16:17,279 --> 00:16:19,860
vice versa if you don't care about SSO

442
00:16:19,860 --> 00:16:22,019
for some reason and you do want the

443
00:16:22,019 --> 00:16:24,000
device identity stuff in conditional

444
00:16:24,000 --> 00:16:25,800
access you can do that as well they're

445
00:16:25,800 --> 00:16:28,380
separate but related features

446
00:16:28,380 --> 00:16:30,899
uh if you are a Microsoft endpoint

447
00:16:30,899 --> 00:16:32,760
manager customer in what used to be

448
00:16:32,760 --> 00:16:35,760
called InTune this all works pretty much

449
00:16:35,760 --> 00:16:37,620
out of the box so if that's your MDM of

450
00:16:37,620 --> 00:16:39,480
choice we integrate with them natively

451
00:16:39,480 --> 00:16:43,740
however if you don't I know a lot of my

452
00:16:43,740 --> 00:16:46,199
customers use jamf Pro instead of

453
00:16:46,199 --> 00:16:48,480
Microsoft Microsoft endpoint manager for

454
00:16:48,480 --> 00:16:50,399
their Macs we can still do an

455
00:16:50,399 --> 00:16:52,139
integration that lets you get that

456
00:16:52,139 --> 00:16:53,820
compliance information and the health

457
00:16:53,820 --> 00:16:56,699
information about the max into our

458
00:16:56,699 --> 00:16:58,139
services

459
00:16:58,139 --> 00:16:59,820
it's really really critical that

460
00:16:59,820 --> 00:17:02,519
customers do that so if you use jamf Pro

461
00:17:02,519 --> 00:17:05,459
this is pretty well documented if you

462
00:17:05,459 --> 00:17:07,020
use another MDM or you work at another

463
00:17:07,020 --> 00:17:08,760
MDM That You Don't See on the list here

464
00:17:08,760 --> 00:17:10,799
as one of our MDM Partners please reach

465
00:17:10,799 --> 00:17:12,419
out to me I'd be happy to put you in

466
00:17:12,419 --> 00:17:13,740
touch with the folks that can help you

467
00:17:13,740 --> 00:17:15,839
get on this list because I think that

468
00:17:15,839 --> 00:17:17,339
it's really critical for our shared

469
00:17:17,339 --> 00:17:19,199
customers that they're able to do this

470
00:17:19,199 --> 00:17:21,119
type of integration

471
00:17:21,119 --> 00:17:23,699
uh because it's really critical to

472
00:17:23,699 --> 00:17:27,959
understand without a MDM or an MDM

473
00:17:27,959 --> 00:17:29,640
that's integrated into Microsoft

474
00:17:29,640 --> 00:17:31,740
endpoint manager Azure ID is going to

475
00:17:31,740 --> 00:17:33,419
see every Mac in your organization is

476
00:17:33,419 --> 00:17:35,880
unmanaged we will have no data about it

477
00:17:35,880 --> 00:17:38,220
so if your identity teams are creating

478
00:17:38,220 --> 00:17:40,620
really really stringent policies around

479
00:17:40,620 --> 00:17:44,039
who can access what on unmanaged devices

480
00:17:44,039 --> 00:17:46,080
that is going to impact all of your Mac

481
00:17:46,080 --> 00:17:48,179
users without doing this type of MDM

482
00:17:48,179 --> 00:17:49,980
management

483
00:17:49,980 --> 00:17:52,140
so our recommendation here is enroll

484
00:17:52,140 --> 00:17:54,720
into MDM the process is really really

485
00:17:54,720 --> 00:17:57,240
simple if mems the MDM basically you do

486
00:17:57,240 --> 00:17:59,580
your MDM enrollment you create a policy

487
00:17:59,580 --> 00:18:01,020
that says what the device has to do to

488
00:18:01,020 --> 00:18:03,360
be compliant and then the flow is that

489
00:18:03,360 --> 00:18:05,520
InTune reports that data to the InTune

490
00:18:05,520 --> 00:18:07,200
cloud service and the InTune cloud

491
00:18:07,200 --> 00:18:10,679
service basically tells Azure ad whether

492
00:18:10,679 --> 00:18:12,840
the device is compliant or not and all

493
00:18:12,840 --> 00:18:14,820
Azure ID cares about is the thumbs up or

494
00:18:14,820 --> 00:18:16,020
the thumbs down

495
00:18:16,020 --> 00:18:18,419
if you use another MDM it's really

496
00:18:18,419 --> 00:18:20,460
really simple as well there's basically

497
00:18:20,460 --> 00:18:22,559
an API in the InTune service that your

498
00:18:22,559 --> 00:18:25,140
NDM can integrate with and it can report

499
00:18:25,140 --> 00:18:27,120
the same information so from the

500
00:18:27,120 --> 00:18:29,100
identity perspective you got to do one

501
00:18:29,100 --> 00:18:31,879
of these two things

502
00:18:32,160 --> 00:18:35,160
the other thing that MDM enrollment

503
00:18:35,160 --> 00:18:37,980
allows you to do is is to set up your

504
00:18:37,980 --> 00:18:40,799
SSO infrastructure and this is really

505
00:18:40,799 --> 00:18:43,380
what we need a lot of customers to do in

506
00:18:43,380 --> 00:18:45,299
order to improve the end user experience

507
00:18:45,299 --> 00:18:48,299
portion of security on Mac OS

508
00:18:48,299 --> 00:18:50,340
so just to provide a little history

509
00:18:50,340 --> 00:18:54,240
lesson on what exists in Mac OS for SSO

510
00:18:54,240 --> 00:18:56,640
capabilities Max have for a long time

511
00:18:56,640 --> 00:18:58,500
had the ability to bind to ldap

512
00:18:58,500 --> 00:19:00,480
directories like very commonly active

513
00:19:00,480 --> 00:19:03,120
directory but apple is for a couple

514
00:19:03,120 --> 00:19:04,860
years been signaling to customers that

515
00:19:04,860 --> 00:19:06,179
they really shouldn't be going in this

516
00:19:06,179 --> 00:19:08,520
direction so if your organization is

517
00:19:08,520 --> 00:19:10,740
still using ldap mind please get away

518
00:19:10,740 --> 00:19:14,400
from it better is Apple's Kerberos SSO

519
00:19:14,400 --> 00:19:17,160
extension and this has to be deployed

520
00:19:17,160 --> 00:19:20,160
through MDM so if you are not using an

521
00:19:20,160 --> 00:19:22,320
MDM you cannot do the modern way of

522
00:19:22,320 --> 00:19:24,720
integrating with an ldap directory and

523
00:19:24,720 --> 00:19:27,000
you're going to be stuck in the past and

524
00:19:27,000 --> 00:19:28,500
there's some reasons why some other

525
00:19:28,500 --> 00:19:30,419
reasons why you probably want to get on

526
00:19:30,419 --> 00:19:33,299
an MDM because more and more apple is

527
00:19:33,299 --> 00:19:36,000
deploying new features that require MDM

528
00:19:36,000 --> 00:19:39,240
as the method for deployment

529
00:19:39,240 --> 00:19:42,960
the modern way to do SSO is via tokens

530
00:19:42,960 --> 00:19:44,880
and this is the part I'm really going to

531
00:19:44,880 --> 00:19:48,539
focus on so IDP vendors can create

532
00:19:48,539 --> 00:19:50,280
plugins for what's called Apple's

533
00:19:50,280 --> 00:19:53,520
extensible Enterprise SSO framework so

534
00:19:53,520 --> 00:19:55,559
I'm gonna I come from an IDP vendor so

535
00:19:55,559 --> 00:19:58,200
Microsoft has gone and done this some of

536
00:19:58,200 --> 00:20:00,539
our competitors and other idps out in

537
00:20:00,539 --> 00:20:02,280
the out in the world are doing this as

538
00:20:02,280 --> 00:20:04,679
well and fundamentally things work

539
00:20:04,679 --> 00:20:07,860
pretty similarly again this has to be

540
00:20:07,860 --> 00:20:09,480
deployed through an MDM so if you're

541
00:20:09,480 --> 00:20:12,120
integrating with cloud services your

542
00:20:12,120 --> 00:20:14,400
integration or your identity Services

543
00:20:14,400 --> 00:20:16,740
need to be coming through an MDM in

544
00:20:16,740 --> 00:20:18,780
order to be modern there's actually two

545
00:20:18,780 --> 00:20:21,840
types of these SSO extensions that we

546
00:20:21,840 --> 00:20:23,640
can build Azure IDs type is What's

547
00:20:23,640 --> 00:20:24,960
called the redirect type so I'm

548
00:20:24,960 --> 00:20:28,200
primarily going to focus on that

549
00:20:28,200 --> 00:20:30,200
so really quickly

550
00:20:30,200 --> 00:20:33,179
why don't we want users to use Kerberos

551
00:20:33,179 --> 00:20:34,140
anymore

552
00:20:34,140 --> 00:20:37,679
so if you are using this doesn't really

553
00:20:37,679 --> 00:20:39,900
matter if you're using the ldap bind

554
00:20:39,900 --> 00:20:42,120
method or if you're using the more

555
00:20:42,120 --> 00:20:44,340
modern Kerberos SSO extension from Apple

556
00:20:44,340 --> 00:20:46,679
or if you're actually using a

557
00:20:46,679 --> 00:20:48,900
third-party tool like jamf connect would

558
00:20:48,900 --> 00:20:51,240
be the common one that we see it

559
00:20:51,240 --> 00:20:52,580
fundamentally works the same way

560
00:20:52,580 --> 00:20:55,020
Kerberos is really an artifact of

561
00:20:55,020 --> 00:20:58,320
on-premise directory services and in the

562
00:20:58,320 --> 00:21:00,900
security World those are not as relevant

563
00:21:00,900 --> 00:21:02,880
as they used to be like I said at the

564
00:21:02,880 --> 00:21:04,440
beginning of the talk a lot of resources

565
00:21:04,440 --> 00:21:06,240
are moving to the cloud and so it

566
00:21:06,240 --> 00:21:08,299
doesn't necessarily make sense for our

567
00:21:08,299 --> 00:21:11,400
tokens that we use to access services to

568
00:21:11,400 --> 00:21:13,980
come from an on-prem directory

569
00:21:13,980 --> 00:21:17,100
so in the Kerberos World regardless of

570
00:21:17,100 --> 00:21:19,380
which tool you are actually using the

571
00:21:19,380 --> 00:21:21,000
user basically authenticates to the

572
00:21:21,000 --> 00:21:22,740
device either at the lock screen if

573
00:21:22,740 --> 00:21:23,460
you're doing some password

574
00:21:23,460 --> 00:21:26,039
synchronization or once they land on the

575
00:21:26,039 --> 00:21:27,780
home screen and the device detects it

576
00:21:27,780 --> 00:21:29,400
has line of sight to domain controller

577
00:21:29,400 --> 00:21:30,960
it's going to ask for username and

578
00:21:30,960 --> 00:21:33,179
password active directory is fairly old

579
00:21:33,179 --> 00:21:34,679
at this point and it only really

580
00:21:34,679 --> 00:21:36,299
understands two ways to authenticate

581
00:21:36,299 --> 00:21:38,280
username and password or certificate

582
00:21:38,280 --> 00:21:40,559
that's it so in most orgs this is

583
00:21:40,559 --> 00:21:42,360
username and password

584
00:21:42,360 --> 00:21:44,340
the device sends those creds to active

585
00:21:44,340 --> 00:21:46,320
directory and asks for what's called a

586
00:21:46,320 --> 00:21:48,780
TGT active directory validates those

587
00:21:48,780 --> 00:21:51,000
creds and if they're valid it hands back

588
00:21:51,000 --> 00:21:53,039
the TGT

589
00:21:53,039 --> 00:21:55,260
the user tries to access an app so this

590
00:21:55,260 --> 00:21:58,320
could be a Kerberos integrated web app

591
00:21:58,320 --> 00:22:00,480
it could be a file share it could be a

592
00:22:00,480 --> 00:22:02,179
print server it doesn't really matter

593
00:22:02,179 --> 00:22:04,980
but they need some sort of artifact to

594
00:22:04,980 --> 00:22:06,659
get access to that Kerberos application

595
00:22:06,659 --> 00:22:08,760
if anybody's a Kerberos expert you'll

596
00:22:08,760 --> 00:22:10,320
notice this is like a big

597
00:22:10,320 --> 00:22:12,299
oversimplification but hopefully that's

598
00:22:12,299 --> 00:22:14,039
okay

599
00:22:14,039 --> 00:22:16,559
so what does the Mac do it sends that

600
00:22:16,559 --> 00:22:18,960
TGT to active directory and it asks for

601
00:22:18,960 --> 00:22:20,820
a ticket that is specific to the

602
00:22:20,820 --> 00:22:22,440
application that the user wants access

603
00:22:22,440 --> 00:22:25,380
to active directory validates that TGT

604
00:22:25,380 --> 00:22:28,559
and returns what's called a TGs

605
00:22:28,559 --> 00:22:30,840
the user's browser or whatever client

606
00:22:30,840 --> 00:22:32,700
they're using sends the TGs to the app

607
00:22:32,700 --> 00:22:34,260
and the user is successfully

608
00:22:34,260 --> 00:22:35,640
authenticated it's pretty

609
00:22:35,640 --> 00:22:37,020
straightforward stuff this has been

610
00:22:37,020 --> 00:22:40,799
built into Mac OS for like 20-ish years

611
00:22:40,799 --> 00:22:42,299
just to illustrate what this might look

612
00:22:42,299 --> 00:22:44,220
like on a Mac this is just from my lab

613
00:22:44,220 --> 00:22:47,159
environment we have a TGT that gives me

614
00:22:47,159 --> 00:22:49,280
access to whatever I might need

615
00:22:49,280 --> 00:22:51,780
basically it's just good for exchanging

616
00:22:51,780 --> 00:22:54,360
to a domain controller and getting those

617
00:22:54,360 --> 00:22:56,640
tgs's and then you can see here I have a

618
00:22:56,640 --> 00:23:00,419
TGs that's specific to a file share

619
00:23:00,419 --> 00:23:03,980
so let's look at where this breaks down

620
00:23:04,320 --> 00:23:06,720
so this doesn't really work over the

621
00:23:06,720 --> 00:23:09,120
Internet so as we start to see more SAS

622
00:23:09,120 --> 00:23:11,460
applications proliferate kerberosis is

623
00:23:11,460 --> 00:23:13,380
going to make less and less sense so if

624
00:23:13,380 --> 00:23:15,120
we have a SAS application instead of an

625
00:23:15,120 --> 00:23:17,820
internal Kerberos app what's going to

626
00:23:17,820 --> 00:23:19,980
happen is that the device is going to

627
00:23:19,980 --> 00:23:22,020
look for a domain controller be unable

628
00:23:22,020 --> 00:23:24,120
to find one the user can't get a ticket

629
00:23:24,120 --> 00:23:25,799
and therefore they're not going to be

630
00:23:25,799 --> 00:23:27,299
able to authenticate

631
00:23:27,299 --> 00:23:29,100
so in this case the user provides the

632
00:23:29,100 --> 00:23:30,720
device with their username and password

633
00:23:30,720 --> 00:23:34,020
and what should the device do uh you

634
00:23:34,020 --> 00:23:35,940
know you might say it should go find a

635
00:23:35,940 --> 00:23:37,320
domain controller but the only way to do

636
00:23:37,320 --> 00:23:39,360
that is going to be to use a VPN and

637
00:23:39,360 --> 00:23:41,039
another Trend we've seen with customers

638
00:23:41,039 --> 00:23:42,960
is that it is not necessarily a good

639
00:23:42,960 --> 00:23:45,900
idea to be piping all traffic over your

640
00:23:45,900 --> 00:23:47,700
VPN back into your on-prem network

641
00:23:47,700 --> 00:23:50,760
there's a lot of compromises that can

642
00:23:50,760 --> 00:23:52,140
happen that way

643
00:23:52,140 --> 00:23:54,000
and so the user doesn't have access to

644
00:23:54,000 --> 00:23:55,679
their application

645
00:23:55,679 --> 00:23:57,480
and so this is why Apple built the

646
00:23:57,480 --> 00:24:00,059
Enterprise SSO framework as more and

647
00:24:00,059 --> 00:24:01,860
more of these applications have been

648
00:24:01,860 --> 00:24:03,539
moving to the cloud more resources are

649
00:24:03,539 --> 00:24:05,400
in the cloud Macs were kind of stuck in

650
00:24:05,400 --> 00:24:06,600
the past with the way that they did

651
00:24:06,600 --> 00:24:09,539
Integrations with modern cloud services

652
00:24:09,539 --> 00:24:13,500
and modern applications so Apple a

653
00:24:13,500 --> 00:24:15,659
couple versions ago built their

654
00:24:15,659 --> 00:24:18,059
framework and we have built software on

655
00:24:18,059 --> 00:24:20,159
top of it they're actually going to be

656
00:24:20,159 --> 00:24:22,080
making this framework even more powerful

657
00:24:22,080 --> 00:24:23,940
in the future so it's a really good idea

658
00:24:23,940 --> 00:24:26,400
for organizations to one understand how

659
00:24:26,400 --> 00:24:28,260
this stuff works and to start thinking

660
00:24:28,260 --> 00:24:29,880
about deploying it

661
00:24:29,880 --> 00:24:32,700
so the solution here is to use modern

662
00:24:32,700 --> 00:24:35,640
authentication so saml is good but open

663
00:24:35,640 --> 00:24:37,919
ID connect and oauth 2 are better

664
00:24:37,919 --> 00:24:40,080
but the key advantage of modern

665
00:24:40,080 --> 00:24:42,539
authentication is that it's web-based so

666
00:24:42,539 --> 00:24:44,700
here we have the Azure ID login page but

667
00:24:44,700 --> 00:24:48,240
could be any any IDP web authentication

668
00:24:48,240 --> 00:24:50,159
has been around for a long time

669
00:24:50,159 --> 00:24:52,740
but the web gives us flexibility

670
00:24:52,740 --> 00:24:54,240
we can do things like challenge for

671
00:24:54,240 --> 00:24:56,220
certificates we can use Fido based

672
00:24:56,220 --> 00:24:59,340
credentials we can use authenticator

673
00:24:59,340 --> 00:25:02,700
apps we can do all sorts of crazy things

674
00:25:02,700 --> 00:25:04,440
to the session once we've given the user

675
00:25:04,440 --> 00:25:06,360
a token back like directed through a

676
00:25:06,360 --> 00:25:08,700
proxy service there's a lot of things

677
00:25:08,700 --> 00:25:11,159
that are made possible by using

678
00:25:11,159 --> 00:25:13,080
web-based authentication instead of this

679
00:25:13,080 --> 00:25:15,240
old Kerberos stuff that only applied to

680
00:25:15,240 --> 00:25:17,820
on-prem active directory

681
00:25:17,820 --> 00:25:20,460
so before I tell you how our plugin

682
00:25:20,460 --> 00:25:21,780
works it's really important to

683
00:25:21,780 --> 00:25:24,299
understand a couple key artifacts that

684
00:25:24,299 --> 00:25:26,220
are relevant to pretty much any device

685
00:25:26,220 --> 00:25:28,500
that integrates with Azure ID so this

686
00:25:28,500 --> 00:25:30,419
goes for Windows this goes for iOS

687
00:25:30,419 --> 00:25:32,820
Android Mac OS and Linux as of a couple

688
00:25:32,820 --> 00:25:36,419
days ago and just to reiterate our goal

689
00:25:36,419 --> 00:25:39,200
is to prompt once per user per device

690
00:25:39,200 --> 00:25:41,820
per password change so unless something

691
00:25:41,820 --> 00:25:44,400
has changed we don't want to be

692
00:25:44,400 --> 00:25:46,740
prompting those end users

693
00:25:46,740 --> 00:25:49,320
and so the primary artifacts that we

694
00:25:49,320 --> 00:25:51,000
need in order to power this experience

695
00:25:51,000 --> 00:25:53,220
with Azure ad is what's called a primary

696
00:25:53,220 --> 00:25:55,440
refresh token this is basically a

697
00:25:55,440 --> 00:25:57,600
long-term authentication token that is

698
00:25:57,600 --> 00:25:59,700
held by a broker application on whatever

699
00:25:59,700 --> 00:26:02,880
the OS is so just like that Kerberos TGT

700
00:26:02,880 --> 00:26:05,100
is a long-term session token that the

701
00:26:05,100 --> 00:26:06,480
user gets when they sign into their Mac

702
00:26:06,480 --> 00:26:08,940
in this case the primary refresh token

703
00:26:08,940 --> 00:26:10,140
is kind of like the modern replacement

704
00:26:10,140 --> 00:26:13,020
for it Windows devices use these and

705
00:26:13,020 --> 00:26:14,580
have had support for them for a number

706
00:26:14,580 --> 00:26:17,159
of years and now we are bringing this

707
00:26:17,159 --> 00:26:19,980
capability to the Mac as well

708
00:26:19,980 --> 00:26:22,260
the primary refresh token is used to

709
00:26:22,260 --> 00:26:24,299
acquire other assets like a refresh

710
00:26:24,299 --> 00:26:26,760
token access token pair that is specific

711
00:26:26,760 --> 00:26:28,320
to the application that the user is

712
00:26:28,320 --> 00:26:30,299
trying to get into so if the user is

713
00:26:30,299 --> 00:26:32,760
trying to access exchange online they

714
00:26:32,760 --> 00:26:34,620
might go to Azure ad and say Here's my

715
00:26:34,620 --> 00:26:37,080
PRT I would like a token for exchange

716
00:26:37,080 --> 00:26:38,760
online and what they're going to get in

717
00:26:38,760 --> 00:26:41,159
return is a refresh token that's good

718
00:26:41,159 --> 00:26:43,260
for a really long time and can carry

719
00:26:43,260 --> 00:26:45,059
things like multi-factor claims in it

720
00:26:45,059 --> 00:26:47,700
and an access token and the access token

721
00:26:47,700 --> 00:26:49,860
is really really short-lived and so you

722
00:26:49,860 --> 00:26:51,419
remember earlier I said that it's

723
00:26:51,419 --> 00:26:52,559
important that we're constantly

724
00:26:52,559 --> 00:26:55,740
re-evaluating policy to see if

725
00:26:55,740 --> 00:26:57,480
something's changed if we need to revoke

726
00:26:57,480 --> 00:26:59,400
access block a user from getting access

727
00:26:59,400 --> 00:27:01,980
to a service challenge for MFA things

728
00:27:01,980 --> 00:27:04,260
like that the way we do that is by

729
00:27:04,260 --> 00:27:06,059
whatever the client application is

730
00:27:06,059 --> 00:27:08,279
coming back and asking for fresh access

731
00:27:08,279 --> 00:27:11,039
tokens on roughly an hourly basis

732
00:27:11,039 --> 00:27:14,400
so applications that interact with Cloud

733
00:27:14,400 --> 00:27:16,919
idps on Macs have used access tokens and

734
00:27:16,919 --> 00:27:18,900
refresh tokens for a long time really

735
00:27:18,900 --> 00:27:22,700
the new thing is the PRT

736
00:27:22,919 --> 00:27:24,299
so there's a couple things that a

737
00:27:24,299 --> 00:27:26,039
machines or that an environment needs to

738
00:27:26,039 --> 00:27:28,320
have to actually leverage this so one is

739
00:27:28,320 --> 00:27:30,179
the apps have to be using modern auth

740
00:27:30,179 --> 00:27:32,279
and you have to be using the modern auth

741
00:27:32,279 --> 00:27:35,460
SSO framework so you have to have a

742
00:27:35,460 --> 00:27:37,620
modern IDP Azure ID is ours there's

743
00:27:37,620 --> 00:27:40,080
other ones on the market the apps have

744
00:27:40,080 --> 00:27:42,240
to integrate with that IDP your IDP

745
00:27:42,240 --> 00:27:44,100
vendor has to go create an SSO extension

746
00:27:44,100 --> 00:27:45,840
plugin I know we've done it I know one

747
00:27:45,840 --> 00:27:47,940
other vendor's done it I'm sure other

748
00:27:47,940 --> 00:27:50,100
ones are working on it you have to have

749
00:27:50,100 --> 00:27:52,559
those Max under MDM management

750
00:27:52,559 --> 00:27:56,460
and then the other thing that you need

751
00:27:56,460 --> 00:27:58,559
is What's called the Microsoft company

752
00:27:58,559 --> 00:28:01,860
portal app and again just to reiterate

753
00:28:01,860 --> 00:28:04,200
you don't actually have to use InTune or

754
00:28:04,200 --> 00:28:06,179
Microsoft endpoint manager as your MDM

755
00:28:06,179 --> 00:28:08,340
of choice really the company Portal app

756
00:28:08,340 --> 00:28:10,320
here is just a delivery vehicle for the

757
00:28:10,320 --> 00:28:13,799
SSO code so if you don't want to use

758
00:28:13,799 --> 00:28:16,740
rmdm totally fine you can still deploy

759
00:28:16,740 --> 00:28:18,779
the company Portal app and just use it

760
00:28:18,779 --> 00:28:21,419
for this this SSO piece

761
00:28:21,419 --> 00:28:23,340
so just like before we need to have the

762
00:28:23,340 --> 00:28:25,020
user authenticate establish a session

763
00:28:25,020 --> 00:28:28,440
and get a PRT instead of that TGT

764
00:28:28,440 --> 00:28:30,720
so in this case the user authenticates

765
00:28:30,720 --> 00:28:34,080
to the SSO extension and we can have

766
00:28:34,080 --> 00:28:35,820
them do it using more types of

767
00:28:35,820 --> 00:28:38,159
credentials than we did in the past so

768
00:28:38,159 --> 00:28:39,720
again on-prem active directory doesn't

769
00:28:39,720 --> 00:28:41,480
really understand a lot

770
00:28:41,480 --> 00:28:43,799
Azure ad in the cloud supports

771
00:28:43,799 --> 00:28:45,900
passwordless authentication username

772
00:28:45,900 --> 00:28:48,179
password plus MFA a whole bunch of other

773
00:28:48,179 --> 00:28:50,940
stuff so we can do a stronger way of

774
00:28:50,940 --> 00:28:53,220
signing in in order to get that user

775
00:28:53,220 --> 00:28:54,419
access

776
00:28:54,419 --> 00:28:57,360
then with those credentials in hand the

777
00:28:57,360 --> 00:28:59,400
SSO extension in the company portal will

778
00:28:59,400 --> 00:29:02,340
go acquire that PRT from Azure ad this

779
00:29:02,340 --> 00:29:04,080
doesn't require line of sight to domain

780
00:29:04,080 --> 00:29:05,760
controllers doesn't require that the

781
00:29:05,760 --> 00:29:07,679
device is on-prem just needs to have an

782
00:29:07,679 --> 00:29:09,299
internet connection so it can reach our

783
00:29:09,299 --> 00:29:10,799
urls

784
00:29:10,799 --> 00:29:13,880
then that PRT is stored in the keychain

785
00:29:13,880 --> 00:29:16,860
on the device

786
00:29:16,860 --> 00:29:19,200
just to call out prts are good for a

787
00:29:19,200 --> 00:29:22,020
rolling 14-day window they're constantly

788
00:29:22,020 --> 00:29:23,640
refreshed when the user uses the Mac

789
00:29:23,640 --> 00:29:25,080
though so as long as they're using the

790
00:29:25,080 --> 00:29:25,880
MAC

791
00:29:25,880 --> 00:29:28,679
at least once every 14 days and have an

792
00:29:28,679 --> 00:29:30,059
internet connection this thing should be

793
00:29:30,059 --> 00:29:32,039
refreshed pretty much indefinitely

794
00:29:32,039 --> 00:29:35,640
unless you set a policy to stop that

795
00:29:35,640 --> 00:29:38,279
so one other wrinkle is that there's

796
00:29:38,279 --> 00:29:39,779
actually two different flows for

797
00:29:39,779 --> 00:29:42,480
applications to ask us to go get tokens

798
00:29:42,480 --> 00:29:44,159
on their behalf so I'm going to start

799
00:29:44,159 --> 00:29:46,320
with What's called the M cell flow MCL

800
00:29:46,320 --> 00:29:48,659
is Microsoft authentication Library it's

801
00:29:48,659 --> 00:29:50,460
just an open source auth library that we

802
00:29:50,460 --> 00:29:52,200
create that you can put in your own

803
00:29:52,200 --> 00:29:53,820
applications if you want to integrate

804
00:29:53,820 --> 00:29:55,740
them with Azure ad and make it easy on

805
00:29:55,740 --> 00:29:57,600
yourself instead of using a different

806
00:29:57,600 --> 00:29:59,039
auth Library

807
00:29:59,039 --> 00:30:01,140
so basically if you have an application

808
00:30:01,140 --> 00:30:03,299
that knows about msel it can talk

809
00:30:03,299 --> 00:30:06,000
directly to our SSO broker and say go

810
00:30:06,000 --> 00:30:08,100
get me a token and just like in the

811
00:30:08,100 --> 00:30:10,020
Kerberos example except this time using

812
00:30:10,020 --> 00:30:13,260
modern tokens and the web the broker can

813
00:30:13,260 --> 00:30:15,840
send the PRT to Azure ID say I want a

814
00:30:15,840 --> 00:30:17,580
token for the application so in this

815
00:30:17,580 --> 00:30:19,200
case it might be Outlook and exchange

816
00:30:19,200 --> 00:30:21,840
online Azure ID validates that the PRT

817
00:30:21,840 --> 00:30:24,120
is still good and if everything's happy

818
00:30:24,120 --> 00:30:26,340
it Returns the access token and a

819
00:30:26,340 --> 00:30:28,559
refresh token along with it and then

820
00:30:28,559 --> 00:30:30,779
it's just passed to the application and

821
00:30:30,779 --> 00:30:32,940
the application gets access or the

822
00:30:32,940 --> 00:30:35,100
client application gets access to the

823
00:30:35,100 --> 00:30:36,720
cloud service this is pretty

824
00:30:36,720 --> 00:30:38,640
straightforward

825
00:30:38,640 --> 00:30:40,980
where Apple really did some magic in the

826
00:30:40,980 --> 00:30:43,799
OS is for applications that don't use

827
00:30:43,799 --> 00:30:46,919
Microsoft off Library there's a big need

828
00:30:46,919 --> 00:30:49,320
for SSO in pretty much any application

829
00:30:49,320 --> 00:30:52,559
and this includes things like Safari VPN

830
00:30:52,559 --> 00:30:54,899
apps any other client application that

831
00:30:54,899 --> 00:30:56,880
might be out there we've started to see

832
00:30:56,880 --> 00:30:59,820
some vendors start to adopt this and

833
00:30:59,820 --> 00:31:01,380
they look and say I need to support a

834
00:31:01,380 --> 00:31:03,600
lot of idps I don't want to build with

835
00:31:03,600 --> 00:31:06,360
Microsoft's auth libraries so there is a

836
00:31:06,360 --> 00:31:08,399
method in Mac OS to provide this SSO

837
00:31:08,399 --> 00:31:10,740
capability without using our off

838
00:31:10,740 --> 00:31:12,419
libraries

839
00:31:12,419 --> 00:31:14,399
so just like before the user might try

840
00:31:14,399 --> 00:31:16,260
to get into their application and their

841
00:31:16,260 --> 00:31:17,820
application is going to say you need a

842
00:31:17,820 --> 00:31:21,559
token go to this Azure ad URL to get it

843
00:31:21,559 --> 00:31:24,419
if that app doesn't use msel so like

844
00:31:24,419 --> 00:31:25,919
Safari is a really good example of

845
00:31:25,919 --> 00:31:27,120
course apple is not going to use

846
00:31:27,120 --> 00:31:29,059
Microsoft's auth Library

847
00:31:29,059 --> 00:31:32,399
so what happens here is the Mac OS

848
00:31:32,399 --> 00:31:34,440
Network stack basically intercepts the

849
00:31:34,440 --> 00:31:36,720
traffic and redirects it to the SSO

850
00:31:36,720 --> 00:31:38,520
extension this is a really powerful

851
00:31:38,520 --> 00:31:40,260
capability and one that is potentially

852
00:31:40,260 --> 00:31:43,679
ripe for abuse in a poorly managed

853
00:31:43,679 --> 00:31:46,380
environment so Apple mandates that this

854
00:31:46,380 --> 00:31:48,419
capability be delivered through an MDM

855
00:31:48,419 --> 00:31:49,919
and this is where a lot of the MDM

856
00:31:49,919 --> 00:31:52,380
requirement comes from but basically the

857
00:31:52,380 --> 00:31:55,200
same as before the traffic is redirected

858
00:31:55,200 --> 00:31:57,840
to the the authentication traffic is

859
00:31:57,840 --> 00:32:00,480
redirected to the SSO extension it uses

860
00:32:00,480 --> 00:32:03,840
its PRT to request a new token

861
00:32:03,840 --> 00:32:05,520
and that token is returned to the client

862
00:32:05,520 --> 00:32:07,740
application and the user gets access to

863
00:32:07,740 --> 00:32:09,960
their app and so this works in

864
00:32:09,960 --> 00:32:13,520
non-microsoft applications

865
00:32:15,480 --> 00:32:17,820
so these have to be deployed through MDM

866
00:32:17,820 --> 00:32:19,380
because essentially you're doing some

867
00:32:19,380 --> 00:32:21,240
form of Man In The Middle on your own

868
00:32:21,240 --> 00:32:23,760
traffic on the device we made it really

869
00:32:23,760 --> 00:32:25,559
easy like if you use Microsoft endpoint

870
00:32:25,559 --> 00:32:27,059
manager you barely have to configure

871
00:32:27,059 --> 00:32:30,000
anything I did write a guide for jamf

872
00:32:30,000 --> 00:32:31,919
pro because every time I talk to a jamf

873
00:32:31,919 --> 00:32:33,419
Pro customer they misconfigured this

874
00:32:33,419 --> 00:32:35,100
just because there were too many

875
00:32:35,100 --> 00:32:37,140
settings to set so we wrote a jamf pro

876
00:32:37,140 --> 00:32:39,240
specific guide and basically what you

877
00:32:39,240 --> 00:32:42,659
configure is the bundle identifier of

878
00:32:42,659 --> 00:32:44,700
the app that is going to receive the

879
00:32:44,700 --> 00:32:46,860
traffic the list of URLs that are going

880
00:32:46,860 --> 00:32:48,840
to be redirected so this ideally should

881
00:32:48,840 --> 00:32:51,360
only include Microsoft URLs if you see

882
00:32:51,360 --> 00:32:53,340
other URLs in this list someone might be

883
00:32:53,340 --> 00:32:55,880
doing something malicious and then some

884
00:32:55,880 --> 00:32:58,080
configuration items that go into a p

885
00:32:58,080 --> 00:33:00,360
list basically specifying what client

886
00:33:00,360 --> 00:33:02,039
applications on the device should

887
00:33:02,039 --> 00:33:04,740
participate in this whole scheme

888
00:33:04,740 --> 00:33:07,020
and then you're pretty much up and

889
00:33:07,020 --> 00:33:07,799
running

890
00:33:07,799 --> 00:33:10,020
if you follow our recommended config you

891
00:33:10,020 --> 00:33:11,880
can actually set it so that the user

892
00:33:11,880 --> 00:33:13,260
never even needs to open the company

893
00:33:13,260 --> 00:33:15,539
portal application in this example I

894
00:33:15,539 --> 00:33:16,980
actually opened Safari in private

895
00:33:16,980 --> 00:33:18,899
browsing mode and I got this little

896
00:33:18,899 --> 00:33:20,640
pop-up and that is just the SSO

897
00:33:20,640 --> 00:33:23,700
extension at the being prompted at the

898
00:33:23,700 --> 00:33:26,640
OS level to get provisioned so it's

899
00:33:26,640 --> 00:33:28,740
pretty slick

900
00:33:28,740 --> 00:33:30,600
the key thing to understand is that the

901
00:33:30,600 --> 00:33:32,220
company portal just has to be there on

902
00:33:32,220 --> 00:33:34,519
the device

903
00:33:34,980 --> 00:33:38,399
so a few limitations to call out the SSO

904
00:33:38,399 --> 00:33:39,899
extension from Microsoft is still in

905
00:33:39,899 --> 00:33:41,880
public preview there's a couple bugs

906
00:33:41,880 --> 00:33:43,559
that we're still working out before we

907
00:33:43,559 --> 00:33:45,360
declare General availability on this but

908
00:33:45,360 --> 00:33:47,159
it is supported so we do have customers

909
00:33:47,159 --> 00:33:49,080
who are actively deploying this so This

910
00:33:49,080 --> 00:33:51,240
does exist in the wild today

911
00:33:51,240 --> 00:33:54,000
uh apps have to use either our auth

912
00:33:54,000 --> 00:33:56,279
library or apple system Frameworks for

913
00:33:56,279 --> 00:33:57,720
Network requests

914
00:33:57,720 --> 00:33:59,399
that means that there's some

915
00:33:59,399 --> 00:34:01,440
applications that will not participate

916
00:34:01,440 --> 00:34:04,740
in this SSO scheme so the SSO extension

917
00:34:04,740 --> 00:34:07,080
is unaware of them and the operating

918
00:34:07,080 --> 00:34:09,239
system is unaware of that auth traffic

919
00:34:09,239 --> 00:34:11,399
Chrome and Firefox are the primary

920
00:34:11,399 --> 00:34:13,440
examples so if anybody in the room works

921
00:34:13,440 --> 00:34:14,820
for Google please try to get the Chrome

922
00:34:14,820 --> 00:34:18,060
people to adopt this stuff but today

923
00:34:18,060 --> 00:34:19,619
these are basically the ones that don't

924
00:34:19,619 --> 00:34:21,540
work I'm sure there's other stuff out

925
00:34:21,540 --> 00:34:23,820
there any customer we talk to we push

926
00:34:23,820 --> 00:34:25,859
them to talk to their vendors about

927
00:34:25,859 --> 00:34:28,679
supporting SSO extensions especially in

928
00:34:28,679 --> 00:34:30,719
the future in Ventura there's going to

929
00:34:30,719 --> 00:34:32,580
be more capabilities for this this

930
00:34:32,580 --> 00:34:34,379
framework is basically going to be

931
00:34:34,379 --> 00:34:36,899
extended to the Mac OS lock screen and

932
00:34:36,899 --> 00:34:39,418
so IDP vendors who build these platform

933
00:34:39,418 --> 00:34:41,399
or build these SSO extensions will be

934
00:34:41,399 --> 00:34:42,899
able to take advantage of what's called

935
00:34:42,899 --> 00:34:45,719
platform SSO to allow the user to sign

936
00:34:45,719 --> 00:34:47,940
into the Mac using credentials from the

937
00:34:47,940 --> 00:34:51,060
IDP at the lock screen so this is a new

938
00:34:51,060 --> 00:34:52,800
capability from Apple that's going to be

939
00:34:52,800 --> 00:34:55,679
coming out soon and IDP vendors are

940
00:34:55,679 --> 00:34:58,140
going to be working on adopting it so so

941
00:34:58,140 --> 00:35:00,540
it's really really important that we

942
00:35:00,540 --> 00:35:02,339
understand how to deploy this how they

943
00:35:02,339 --> 00:35:04,380
work because they're only getting more

944
00:35:04,380 --> 00:35:05,940
important in the future this is

945
00:35:05,940 --> 00:35:07,500
basically the modern replacement for

946
00:35:07,500 --> 00:35:09,359
ldap bind

947
00:35:09,359 --> 00:35:11,460
one other problem with this is that

948
00:35:11,460 --> 00:35:13,560
phyto keys are not supported as a

949
00:35:13,560 --> 00:35:15,480
passwordless auth method to bootstrap

950
00:35:15,480 --> 00:35:17,700
that SSO extension so if you saw that

951
00:35:17,700 --> 00:35:20,579
SSO extension window you cannot use a

952
00:35:20,579 --> 00:35:22,560
Fido key to bootstrap that thing it's a

953
00:35:22,560 --> 00:35:25,980
limitation from Apple unfortunately

954
00:35:25,980 --> 00:35:28,380
so if you do want to do password lists

955
00:35:28,380 --> 00:35:29,820
we recommend using the Microsoft

956
00:35:29,820 --> 00:35:34,140
authenticator app or similar options

957
00:35:34,140 --> 00:35:36,839
so I do want to do a quick aside on jamf

958
00:35:36,839 --> 00:35:38,280
connect and some other tools because

959
00:35:38,280 --> 00:35:40,619
these are tools that are being used at

960
00:35:40,619 --> 00:35:43,680
the lock screen to do sort of a IDP

961
00:35:43,680 --> 00:35:46,440
vendor-based sign-in because a lot of

962
00:35:46,440 --> 00:35:49,440
times they the organizations want to get

963
00:35:49,440 --> 00:35:52,320
the flexibility of modern auth but still

964
00:35:52,320 --> 00:35:54,660
have some of the control that the

965
00:35:54,660 --> 00:35:57,119
Kerberos SSO extension provides

966
00:35:57,119 --> 00:36:00,060
so doing MFA at the lock screen is like

967
00:36:00,060 --> 00:36:01,560
one of the big motivators I see with

968
00:36:01,560 --> 00:36:03,480
customers but I really want to caution

969
00:36:03,480 --> 00:36:06,660
people about how you set these up so one

970
00:36:06,660 --> 00:36:08,339
is you can't check for device compliance

971
00:36:08,339 --> 00:36:10,200
at the lock screen there's stuff in the

972
00:36:10,200 --> 00:36:11,579
keychain that we need that's just not

973
00:36:11,579 --> 00:36:14,160
available at the lock screen and then

974
00:36:14,160 --> 00:36:16,079
you're going to if you do this

975
00:36:16,079 --> 00:36:18,839
incorrectly you're going to see sign-in

976
00:36:18,839 --> 00:36:20,760
failures in your Azure ad sign-in logs

977
00:36:20,760 --> 00:36:22,680
and typically our machine learning

978
00:36:22,680 --> 00:36:24,480
algorithm is going to think that you're

979
00:36:24,480 --> 00:36:26,280
password spraying yourself and it's

980
00:36:26,280 --> 00:36:27,780
going to lock user accounts out so you

981
00:36:27,780 --> 00:36:29,700
need to be really careful about how this

982
00:36:29,700 --> 00:36:31,800
gets configured this specifically

983
00:36:31,800 --> 00:36:33,720
happens because customers use a protocol

984
00:36:33,720 --> 00:36:36,920
called ropc or resource owner password

985
00:36:36,920 --> 00:36:39,300
credential Grant

986
00:36:39,300 --> 00:36:39,859
um

987
00:36:39,859 --> 00:36:43,079
ropc does not have a user interactive

988
00:36:43,079 --> 00:36:45,300
component it does use HTTP as the

989
00:36:45,300 --> 00:36:47,520
transport protocol but we cannot

990
00:36:47,520 --> 00:36:49,020
interact with the end user we just get

991
00:36:49,020 --> 00:36:51,900
an HTTP post and that's it so if Azure

992
00:36:51,900 --> 00:36:54,119
ID can't challenge the user for MFA but

993
00:36:54,119 --> 00:36:55,560
there's a policy that says we have to do

994
00:36:55,560 --> 00:36:56,700
MFA

995
00:36:56,700 --> 00:36:59,040
the user is going to get blocked

996
00:36:59,040 --> 00:37:01,320
so there is an app registration

997
00:37:01,320 --> 00:37:03,480
component to this and basically what the

998
00:37:03,480 --> 00:37:05,760
flow looks like is you have a user and

999
00:37:05,760 --> 00:37:07,740
the user tosses their credentials into

1000
00:37:07,740 --> 00:37:11,579
the jamf connect client and then that

1001
00:37:11,579 --> 00:37:13,320
client sends that information to Azure

1002
00:37:13,320 --> 00:37:14,280
ad

1003
00:37:14,280 --> 00:37:15,839
if there's no policy in the way

1004
00:37:15,839 --> 00:37:17,339
basically we can issue out all the

1005
00:37:17,339 --> 00:37:18,960
tokens that you need and everybody's

1006
00:37:18,960 --> 00:37:21,720
happy and everything's good however if

1007
00:37:21,720 --> 00:37:23,520
there is a conditional access policy

1008
00:37:23,520 --> 00:37:25,859
that applies to all Cloud apps this is

1009
00:37:25,859 --> 00:37:27,780
basically a wild card in our world the

1010
00:37:27,780 --> 00:37:29,579
end result will be no tokens for the

1011
00:37:29,579 --> 00:37:33,540
user no MFA Challenge and a failed sign

1012
00:37:33,540 --> 00:37:36,599
in so this is really bad from Azure ads

1013
00:37:36,599 --> 00:37:38,520
perspective I went to the jamf

1014
00:37:38,520 --> 00:37:39,599
conference last week and I'm going to

1015
00:37:39,599 --> 00:37:41,160
try to talk to some people at jamf about

1016
00:37:41,160 --> 00:37:42,660
how we can revise some of the guidance

1017
00:37:42,660 --> 00:37:45,599
for this but today it's really common in

1018
00:37:45,599 --> 00:37:48,599
organizations to see lots of users get

1019
00:37:48,599 --> 00:37:50,400
flagged as compromised so just something

1020
00:37:50,400 --> 00:37:52,440
to look out for if you go down the jamf

1021
00:37:52,440 --> 00:37:54,540
connect road again talk to your identity

1022
00:37:54,540 --> 00:37:57,780
team if some of this is happening

1023
00:37:57,780 --> 00:37:59,579
all right the fourth thing that we're

1024
00:37:59,579 --> 00:38:01,200
working on with Mac customers is

1025
00:38:01,200 --> 00:38:04,140
adopting passwordless the reasons we

1026
00:38:04,140 --> 00:38:06,599
want to do this are there's a couple one

1027
00:38:06,599 --> 00:38:08,040
is the authenticator app is a really

1028
00:38:08,040 --> 00:38:09,540
good passwordless option for our Mac

1029
00:38:09,540 --> 00:38:12,000
users because it pretty much Works in

1030
00:38:12,000 --> 00:38:13,859
any browser on the Mac like Safari

1031
00:38:13,859 --> 00:38:16,740
Chrome Firefox you name it and the

1032
00:38:16,740 --> 00:38:18,900
authenticator app can be used for exact

1033
00:38:18,900 --> 00:38:22,020
the exact same PRT SSO stuff I just

1034
00:38:22,020 --> 00:38:24,420
showed you but on iOS instead so the

1035
00:38:24,420 --> 00:38:26,160
authenticator app is our broker on iOS

1036
00:38:26,160 --> 00:38:29,640
the company portal is our app on Mac OS

1037
00:38:29,640 --> 00:38:32,760
we also have some modes in it that make

1038
00:38:32,760 --> 00:38:34,740
it more resistant to the some of that

1039
00:38:34,740 --> 00:38:36,240
MFA hammering that we talked about

1040
00:38:36,240 --> 00:38:39,060
earlier so it is a good option for

1041
00:38:39,060 --> 00:38:40,980
organizations to look at

1042
00:38:40,980 --> 00:38:43,800
uh passwordless also provides the best

1043
00:38:43,800 --> 00:38:46,200
combination of user experience and

1044
00:38:46,200 --> 00:38:48,060
security just to prove that it's

1045
00:38:48,060 --> 00:38:50,099
actually possible Mark and I have been

1046
00:38:50,099 --> 00:38:51,839
passwordless since like the week before

1047
00:38:51,839 --> 00:38:54,240
Thanksgiving in 2020 like I don't know

1048
00:38:54,240 --> 00:38:56,040
what my password is at Microsoft I don't

1049
00:38:56,040 --> 00:38:58,740
use it I haven't used it in like two

1050
00:38:58,740 --> 00:39:02,160
years it's totally possible to go

1051
00:39:02,160 --> 00:39:04,859
passwordless and it means that I am much

1052
00:39:04,859 --> 00:39:06,540
much more difficult to fish than your

1053
00:39:06,540 --> 00:39:08,400
average end user not impossible to trick

1054
00:39:08,400 --> 00:39:11,220
me to do something stupid but it's it's

1055
00:39:11,220 --> 00:39:13,740
much more difficult so the options on

1056
00:39:13,740 --> 00:39:16,140
Mac are things like authenticator app

1057
00:39:16,140 --> 00:39:20,099
you can also use 502 keys fido2 keys are

1058
00:39:20,099 --> 00:39:22,079
probably the strongest security method

1059
00:39:22,079 --> 00:39:24,119
that we uh security authentication

1060
00:39:24,119 --> 00:39:26,940
method that we have today they only work

1061
00:39:26,940 --> 00:39:28,500
in Edge and chrome they don't work in

1062
00:39:28,500 --> 00:39:30,599
safari with Azure ad that's our fault

1063
00:39:30,599 --> 00:39:33,060
not apples we're working on that and

1064
00:39:33,060 --> 00:39:34,380
then the thing that's happening in the

1065
00:39:34,380 --> 00:39:36,540
future is going to be pass keys so

1066
00:39:36,540 --> 00:39:39,000
passwordless is going to be a ever more

1067
00:39:39,000 --> 00:39:40,260
important topic for our Enterprise

1068
00:39:40,260 --> 00:39:42,060
customers

1069
00:39:42,060 --> 00:39:43,680
um especially with the emergence of pass

1070
00:39:43,680 --> 00:39:46,079
Keys as a standard so something to think

1071
00:39:46,079 --> 00:39:48,119
about for your own organizations as time

1072
00:39:48,119 --> 00:39:49,740
goes on

1073
00:39:49,740 --> 00:39:52,980
and finally uh the fifth thing is that

1074
00:39:52,980 --> 00:39:55,380
if you go through all the work in in the

1075
00:39:55,380 --> 00:39:56,880
Enterprise of adopting all the stuff

1076
00:39:56,880 --> 00:39:58,500
that we just talked about it doesn't

1077
00:39:58,500 --> 00:40:00,900
really do you very much good if your

1078
00:40:00,900 --> 00:40:02,280
applications are still integrated with

1079
00:40:02,280 --> 00:40:04,079
an on-prem active directory or other

1080
00:40:04,079 --> 00:40:07,980
ldap directory so in those environments

1081
00:40:07,980 --> 00:40:10,460
you really need to start adopting

1082
00:40:10,460 --> 00:40:13,800
SSO so adopt modern authentication

1083
00:40:13,800 --> 00:40:16,020
integrate those applications with Azure

1084
00:40:16,020 --> 00:40:18,660
ad we can publish or your IDP of choice

1085
00:40:18,660 --> 00:40:20,099
it doesn't have to be us we like it to

1086
00:40:20,099 --> 00:40:21,720
be us

1087
00:40:21,720 --> 00:40:24,000
um but if it's Azure ad we can publish

1088
00:40:24,000 --> 00:40:25,740
all sorts of stuff like again the modern

1089
00:40:25,740 --> 00:40:28,320
auth applications are really easy we can

1090
00:40:28,320 --> 00:40:30,240
publish on-premise Legacy Kerberos

1091
00:40:30,240 --> 00:40:32,339
applications and put them behind Azure

1092
00:40:32,339 --> 00:40:34,320
ad we can do password weird

1093
00:40:34,320 --> 00:40:36,180
password-based stuffing stuff or

1094
00:40:36,180 --> 00:40:37,920
password applications we've got

1095
00:40:37,920 --> 00:40:39,660
Integrations with Partners all over the

1096
00:40:39,660 --> 00:40:42,599
place if you have other use cases we try

1097
00:40:42,599 --> 00:40:44,220
to make this really easy for customers

1098
00:40:44,220 --> 00:40:46,320
like we have this big app gallery this

1099
00:40:46,320 --> 00:40:47,820
is pretty standard in the industry at

1100
00:40:47,820 --> 00:40:50,940
this point so if you go down the road of

1101
00:40:50,940 --> 00:40:52,500
starting to play around with this stuff

1102
00:40:52,500 --> 00:40:53,880
and you're finding that some of your

1103
00:40:53,880 --> 00:40:55,859
applications are not participating in

1104
00:40:55,859 --> 00:40:58,079
this SSO stuff you can actually reach

1105
00:40:58,079 --> 00:41:00,780
out to us we have an AKA dot Ms link

1106
00:41:00,780 --> 00:41:04,079
there at the bottom that you can use to

1107
00:41:04,079 --> 00:41:06,240
actually reach out to Microsoft and say

1108
00:41:06,240 --> 00:41:09,119
Microsoft I'd really like you to go work

1109
00:41:09,119 --> 00:41:11,099
with my app vendor of choice to get this

1110
00:41:11,099 --> 00:41:12,660
integrated into your environment and

1111
00:41:12,660 --> 00:41:14,520
we'll go do it for you so we try to make

1112
00:41:14,520 --> 00:41:16,500
it easy on people

1113
00:41:16,500 --> 00:41:19,500
so just to recap a couple go Do's that

1114
00:41:19,500 --> 00:41:20,640
we're working on with our Enterprise

1115
00:41:20,640 --> 00:41:23,099
customers one is working with the

1116
00:41:23,099 --> 00:41:24,960
identity and security teams on the end

1117
00:41:24,960 --> 00:41:27,119
user experience again a lot of these

1118
00:41:27,119 --> 00:41:28,380
environments they don't know what's

1119
00:41:28,380 --> 00:41:30,180
going wrong so we're trying to make it

1120
00:41:30,180 --> 00:41:32,460
easier for them to figure that out

1121
00:41:32,460 --> 00:41:35,040
Macs need to be managed by an MDM and

1122
00:41:35,040 --> 00:41:36,839
that probably goes for iOS devices as

1123
00:41:36,839 --> 00:41:39,720
well pretty much any device that is

1124
00:41:39,720 --> 00:41:41,040
going to be accessing corporate

1125
00:41:41,040 --> 00:41:43,020
resources on a consistent basis needs to

1126
00:41:43,020 --> 00:41:45,720
be in an MDM but especially for the Macs

1127
00:41:45,720 --> 00:41:47,700
there is not a lot we can do to improve

1128
00:41:47,700 --> 00:41:50,280
end user experience or Security on a Mac

1129
00:41:50,280 --> 00:41:53,339
without MDM so it's time if you haven't

1130
00:41:53,339 --> 00:41:55,440
gone down this road yet

1131
00:41:55,440 --> 00:41:58,440
if you're if you have your max under MDM

1132
00:41:58,440 --> 00:42:01,079
management and you use Office 365 or

1133
00:42:01,079 --> 00:42:03,480
Azure ad or any of our stuff please

1134
00:42:03,480 --> 00:42:06,000
deploy our SSO extension if you use one

1135
00:42:06,000 --> 00:42:07,980
of our uh one of the other idps out on

1136
00:42:07,980 --> 00:42:11,579
the market do theirs it's it's fine like

1137
00:42:11,579 --> 00:42:13,079
if you don't want to use Microsoft stuff

1138
00:42:13,079 --> 00:42:16,680
I totally understand but whatever IDP

1139
00:42:16,680 --> 00:42:18,540
vendor you're using it is really

1140
00:42:18,540 --> 00:42:20,940
important to start adapting SSO because

1141
00:42:20,940 --> 00:42:23,220
the user experience historically on Macs

1142
00:42:23,220 --> 00:42:25,619
with cloud idps has been very poor and

1143
00:42:25,619 --> 00:42:27,420
it's damaging Security in the industry

1144
00:42:27,420 --> 00:42:30,960
so deploy those SSO extensions

1145
00:42:30,960 --> 00:42:33,420
nudge your users towards passwordless if

1146
00:42:33,420 --> 00:42:35,220
you use Microsoft again Microsoft

1147
00:42:35,220 --> 00:42:37,260
authenticator is a really easy option to

1148
00:42:37,260 --> 00:42:40,020
get started with on IOS and Android but

1149
00:42:40,020 --> 00:42:41,820
there are other options out there if you

1150
00:42:41,820 --> 00:42:43,440
want to use Smart cards and certificates

1151
00:42:43,440 --> 00:42:46,380
Fido Keys stuff like that those are all

1152
00:42:46,380 --> 00:42:48,119
really good in the future hopefully

1153
00:42:48,119 --> 00:42:50,700
passkeys is an option here as well

1154
00:42:50,700 --> 00:42:53,160
and then more SSO it's time to modernize

1155
00:42:53,160 --> 00:42:55,079
applications we really shouldn't be

1156
00:42:55,079 --> 00:42:56,700
building stuff that's built on Kerberos

1157
00:42:56,700 --> 00:42:59,940
we want customers to start adopting and

1158
00:42:59,940 --> 00:43:01,380
one final thing that I didn't put in the

1159
00:43:01,380 --> 00:43:03,180
slides but I really think is important

1160
00:43:03,180 --> 00:43:06,300
for this community is that if you're not

1161
00:43:06,300 --> 00:43:08,520
aware of this SSO stuff it's still

1162
00:43:08,520 --> 00:43:11,040
really new like Microsoft still hasn't

1163
00:43:11,040 --> 00:43:12,900
shipped our SSO extension to General

1164
00:43:12,900 --> 00:43:15,180
availability some of the other idps I

1165
00:43:15,180 --> 00:43:17,819
think are in a preview State as well so

1166
00:43:17,819 --> 00:43:19,859
if you're curious about this stuff come

1167
00:43:19,859 --> 00:43:22,079
talk to me come talk to Mark find us on

1168
00:43:22,079 --> 00:43:24,720
Twitter we would be really really happy

1169
00:43:24,720 --> 00:43:26,940
to get security researchers looking at

1170
00:43:26,940 --> 00:43:29,339
some of this and trying to find out if

1171
00:43:29,339 --> 00:43:30,599
there's rough edges or bad

1172
00:43:30,599 --> 00:43:32,400
implementations on our side or bad

1173
00:43:32,400 --> 00:43:34,380
things on Apple's side we think this is

1174
00:43:34,380 --> 00:43:36,240
the future for Mac OS and it's really

1175
00:43:36,240 --> 00:43:38,040
important that this adaption goes well

1176
00:43:38,040 --> 00:43:40,380
so if you want to help us in any way

1177
00:43:40,380 --> 00:43:42,540
please reach out I am happy to work with

1178
00:43:42,540 --> 00:43:43,560
you

1179
00:43:43,560 --> 00:43:45,720
and with that thank you I will post

1180
00:43:45,720 --> 00:43:47,520
these slides on my GitHub at that link

1181
00:43:47,520 --> 00:43:52,200
there AKA dot Ms slash aad obts 22 and

1182
00:43:52,200 --> 00:43:53,820
thanks for your time

1183
00:43:53,820 --> 00:44:03,000
[Applause]

1184
00:44:03,000 --> 00:44:06,740
uh I can take questions if you want

1185
00:44:07,140 --> 00:44:09,618
sure sure

1186
00:44:20,220 --> 00:44:23,160
uh so we took our own auth library and

1187
00:44:23,160 --> 00:44:26,160
built it into Edge sorry oh sorry uh the

1188
00:44:26,160 --> 00:44:28,380
question was about uh how do we do SSO

1189
00:44:28,380 --> 00:44:30,359
and Edge uh because I didn't mention

1190
00:44:30,359 --> 00:44:33,000
that so we took our own auth library and

1191
00:44:33,000 --> 00:44:35,220
we built it into Edge uh we have not

1192
00:44:35,220 --> 00:44:37,020
done any work yet to Upstream that into

1193
00:44:37,020 --> 00:44:40,520
chromium but I think that's a good idea

1194
00:44:59,480 --> 00:45:02,099
I haven't tested myself sorry the

1195
00:45:02,099 --> 00:45:05,220
question was around there's no support

1196
00:45:05,220 --> 00:45:07,140
for using a Fido key in the auth window

1197
00:45:07,140 --> 00:45:09,480
for the SSO extension is that changing

1198
00:45:09,480 --> 00:45:11,579
in Ventura my understanding is no

1199
00:45:11,579 --> 00:45:14,160
Ventura will have the same limitation

1200
00:45:14,160 --> 00:45:17,839
yep next question

1201
00:45:32,839 --> 00:45:35,940
how do you see the share over nature of

1202
00:45:35,940 --> 00:45:40,400
those keys and in terms

1203
00:45:41,000 --> 00:45:45,180
so the question was around uh pass keys

1204
00:45:45,180 --> 00:45:46,980
and then and the shareable nature of

1205
00:45:46,980 --> 00:45:49,740
them and how I see the industry evolving

1206
00:45:49,740 --> 00:45:52,740
around passkeys being shareable

1207
00:45:52,740 --> 00:45:54,900
um so I can't speak for apple and I

1208
00:45:54,900 --> 00:45:58,260
won't try to on the Microsoft side one

1209
00:45:58,260 --> 00:45:59,700
of the things that we're working on with

1210
00:45:59,700 --> 00:46:03,000
passkeys is the ability to have sinkable

1211
00:46:03,000 --> 00:46:05,579
ones and non-sinkable ones and having a

1212
00:46:05,579 --> 00:46:08,460
method to have at a station from the OS

1213
00:46:08,460 --> 00:46:10,680
that the pass key was Hardware bound and

1214
00:46:10,680 --> 00:46:12,900
not exportable so I think the windows

1215
00:46:12,900 --> 00:46:14,280
implementation will probably have

1216
00:46:14,280 --> 00:46:16,740
something that looks like that where in

1217
00:46:16,740 --> 00:46:19,500
your IDP you'd be able to say you know

1218
00:46:19,500 --> 00:46:21,720
to access application one I'll allow

1219
00:46:21,720 --> 00:46:23,400
syncable pass keys but this other

1220
00:46:23,400 --> 00:46:26,520
application is a really sensitive and so

1221
00:46:26,520 --> 00:46:28,079
I'm going to force it to only accept

1222
00:46:28,079 --> 00:46:31,700
non-sinkable pass keys

1223
00:46:32,640 --> 00:46:36,500
cool a question on the back

1224
00:47:04,619 --> 00:47:06,359
so the question was about how to get

1225
00:47:06,359 --> 00:47:08,099
visibility into what's going on with

1226
00:47:08,099 --> 00:47:11,300
some of the modern Earth protocols

1227
00:47:13,200 --> 00:47:14,880
um there's some really good tools for

1228
00:47:14,880 --> 00:47:17,520
debugging modern auth protocols it's all

1229
00:47:17,520 --> 00:47:20,339
web-based so fundamentally all you

1230
00:47:20,339 --> 00:47:23,520
really need is like Fiddler or in your

1231
00:47:23,520 --> 00:47:25,740
browser there's things like saml X-ray

1232
00:47:25,740 --> 00:47:28,200
and other plugins for browsers that can

1233
00:47:28,200 --> 00:47:30,180
make it really easy to grab that traffic

1234
00:47:30,180 --> 00:47:32,640
and inspect it I think the tougher part

1235
00:47:32,640 --> 00:47:34,140
is understanding how the protocols are

1236
00:47:34,140 --> 00:47:36,480
intended to work because you could look

1237
00:47:36,480 --> 00:47:39,119
at an openid connect authentication and

1238
00:47:39,119 --> 00:47:42,300
have no idea how it works so we have

1239
00:47:42,300 --> 00:47:44,940
documentation on our site on our docs

1240
00:47:44,940 --> 00:47:47,880
pages that covers how our protocols work

1241
00:47:47,880 --> 00:47:51,240
that we support in Azure ad I know other

1242
00:47:51,240 --> 00:47:53,520
IDP vendors have very similar stuff so

1243
00:47:53,520 --> 00:47:55,560
between using something like Fiddler to

1244
00:47:55,560 --> 00:47:57,720
collect the data and doing some research

1245
00:47:57,720 --> 00:47:59,099
on how the protocols work that'll

1246
00:47:59,099 --> 00:48:00,180
probably get you most the way to

1247
00:48:00,180 --> 00:48:02,220
understanding like what's happening when

1248
00:48:02,220 --> 00:48:05,460
a user authenticates if you're asking

1249
00:48:05,460 --> 00:48:08,060
specifically about our SSO extension

1250
00:48:08,060 --> 00:48:11,940
there is a method if you deploy it to go

1251
00:48:11,940 --> 00:48:13,980
to The Help menu and you can say like

1252
00:48:13,980 --> 00:48:16,380
dump logs and it'll throw all the logs

1253
00:48:16,380 --> 00:48:18,119
from the SSO extension into a file on

1254
00:48:18,119 --> 00:48:20,220
the disk so if you want to inspect what

1255
00:48:20,220 --> 00:48:21,480
we're doing on the device you can do

1256
00:48:21,480 --> 00:48:24,420
that as well we added that just a couple

1257
00:48:24,420 --> 00:48:26,280
months ago

1258
00:48:26,280 --> 00:48:28,530
okay thank you everybody

1259
00:48:28,530 --> 00:48:38,039
[Applause]

