1
00:00:03,580 --> 00:00:07,359
all right so welcome to my talk if you

2
00:00:07,359 --> 00:00:09,370
don't know by now mine is Patrick I am

3
00:00:09,370 --> 00:00:13,210
the creator of objective-c and also a

4
00:00:13,210 --> 00:00:17,109
co-founder of digital security so first

5
00:00:17,109 --> 00:00:19,539
off let's get to know our target what

6
00:00:19,539 --> 00:00:21,849
we're going to be attacking today and

7
00:00:21,849 --> 00:00:23,560
Apple actually does a really good job

8
00:00:23,560 --> 00:00:25,390
explaining this so we're gonna watch a

9
00:00:25,390 --> 00:00:28,060
short clip from the WCG well from last

10
00:00:28,060 --> 00:01:10,840
year which it's so commitment to

11
00:01:10,840 --> 00:01:15,400
security we believe that your private

12
00:01:15,400 --> 00:01:18,690
data should remain private

13
00:01:23,700 --> 00:01:27,190
and we think you should be control who

14
00:01:27,190 --> 00:01:30,640
sees it now to begin we protect your

15
00:01:30,640 --> 00:01:33,180
information on your devices using

16
00:01:33,180 --> 00:01:35,740
state-of-the-art hardware and software

17
00:01:35,740 --> 00:01:38,440
and this year we're adding greater

18
00:01:38,440 --> 00:01:41,260
protections about how apps can access

19
00:01:41,260 --> 00:01:44,530
that information today Apple devices

20
00:01:44,530 --> 00:01:47,380
check AT&T before granting an app access

21
00:01:47,380 --> 00:01:50,320
information like your location you can

22
00:01:50,320 --> 00:01:52,270
tell it's just here alert just like this

23
00:01:52,270 --> 00:01:57,070
one and provides API level protections

24
00:01:57,070 --> 00:02:00,160
for things like contacts photos calendar

25
00:02:00,160 --> 00:02:03,550
reminders but now no copy or extending

26
00:02:03,550 --> 00:02:06,640
these protections to include your camera

27
00:02:06,640 --> 00:02:09,128
and your microphone as well as

28
00:02:09,128 --> 00:02:11,050
protecting sensitive parts of your file

29
00:02:11,050 --> 00:02:13,180
system like in mail database your

30
00:02:13,180 --> 00:02:14,110
message history

31
00:02:14,110 --> 00:02:16,900
and your backups and all of this is

32
00:02:16,900 --> 00:02:19,840
protected by default for any app that

33
00:02:19,840 --> 00:02:30,310
you run on the system we make great

34
00:02:30,310 --> 00:02:34,000
videos so okay so we're not just here

35
00:02:34,000 --> 00:02:35,410
that obviously watch clips of apples

36
00:02:35,410 --> 00:02:37,780
Kiara's know they are produces very well

37
00:02:37,780 --> 00:02:39,550
so what we're going to do is it makes

38
00:02:39,550 --> 00:02:42,820
you great Mackel has to be a synthetic

39
00:02:42,820 --> 00:02:45,730
or programmatic clicks so first we look

40
00:02:45,730 --> 00:02:49,390
at specific parts of Mac OS that we can

41
00:02:49,390 --> 00:02:52,600
forget and ideally like including the

42
00:02:52,600 --> 00:02:55,540
privacy protections that Apple does it

43
00:02:55,540 --> 00:02:57,820
in more high whatever if we highlight

44
00:02:57,820 --> 00:03:00,400
some previous attacks that utilize

45
00:03:00,400 --> 00:03:03,010
synthetic or programmatic clicks as well

46
00:03:03,010 --> 00:03:06,130
as show Apple's defenses and patches and

47
00:03:06,130 --> 00:03:07,690
then finally we'll talk about a zero

48
00:03:07,690 --> 00:03:09,010
vulnerabilities that allows us to

49
00:03:09,010 --> 00:03:11,770
generate invisible synthetic clicks to

50
00:03:11,770 --> 00:03:14,110
interact with in support of UI and bug

51
00:03:14,110 --> 00:03:19,150
mouse so first what should we or what

52
00:03:19,150 --> 00:03:21,959
can you break if we have the ability to

53
00:03:21,959 --> 00:03:23,890
programmatically interact or

54
00:03:23,890 --> 00:03:27,180
synthetically interact we're DUI

55
00:03:27,180 --> 00:03:30,070
so mention on the hobby most sensitive

56
00:03:30,070 --> 00:03:34,000
actions now require explicit user so

57
00:03:34,000 --> 00:03:36,760
imagine a hacker has gained access to a

58
00:03:36,760 --> 00:03:39,070
Mac system using any of the myriad of

59
00:03:39,070 --> 00:03:40,120
features that were talked about

60
00:03:40,120 --> 00:03:42,130
previously my solution the engineer a

61
00:03:42,130 --> 00:03:45,610
free flash installers zeros so they've

62
00:03:45,610 --> 00:03:47,890
gotten code execution on Mac now

63
00:03:47,890 --> 00:03:49,480
obviously they want to do things like

64
00:03:49,480 --> 00:03:52,510
perhaps maybe criminal extension what an

65
00:03:52,510 --> 00:03:54,700
Apple script access the users

66
00:03:54,700 --> 00:03:58,030
geolocation access their photos all of

67
00:03:58,030 --> 00:04:01,209
these actions now require explicit user

68
00:04:01,209 --> 00:04:03,670
interaction so what Mac OS will now do

69
00:04:03,670 --> 00:04:06,670
is actually block this action display an

70
00:04:06,670 --> 00:04:08,830
alert to the user and only when the user

71
00:04:08,830 --> 00:04:10,500
clicks allowed in some cases

72
00:04:10,500 --> 00:04:12,370
authenticated where we actually then

73
00:04:12,370 --> 00:04:14,799
feel so obviously this is really good

74
00:04:14,799 --> 00:04:18,459
for users block for hackers and malthus

75
00:04:18,459 --> 00:04:20,858
is incredibly far back

76
00:04:20,858 --> 00:04:22,689
so now let's say of course a look at

77
00:04:22,689 --> 00:04:25,569
some of the security and privacy actions

78
00:04:25,569 --> 00:04:29,020
that will now generate in such a mix so

79
00:04:29,020 --> 00:04:30,699
first up we have kernel extension with

80
00:04:30,699 --> 00:04:34,569
so sits Mojave coefficients have to be

81
00:04:34,569 --> 00:04:37,449
explicitly approved before they are

82
00:04:37,449 --> 00:04:40,479
allowed to load so even if the attacker

83
00:04:40,479 --> 00:04:42,699
had root access and the kernel extension

84
00:04:42,699 --> 00:04:46,030
is sign Apple will block this until the

85
00:04:46,030 --> 00:04:48,490
user puts a lot and there's reason for

86
00:04:48,490 --> 00:04:49,030
this

87
00:04:49,030 --> 00:04:51,219
so I articulated an attack at Def Con

88
00:04:51,219 --> 00:04:53,710
few years ago talk about how an attacker

89
00:04:53,710 --> 00:04:56,770
could bring a sign with verbal third

90
00:04:56,770 --> 00:04:59,110
party kernel extension to assist them

91
00:04:59,110 --> 00:05:01,150
they had infected and I could load it

92
00:05:01,150 --> 00:05:03,069
consistently while it because it was

93
00:05:03,069 --> 00:05:04,900
signed and then they can rely on me

94
00:05:04,900 --> 00:05:06,370
exploit that so that you just bring

95
00:05:06,370 --> 00:05:08,590
around this kernel eccentric but even if

96
00:05:08,590 --> 00:05:10,690
the third party don't we stick actually

97
00:05:10,690 --> 00:05:13,300
that Hawaii happens happen had a

98
00:05:13,300 --> 00:05:15,400
vulnerable version they could always

99
00:05:15,400 --> 00:05:18,279
just bring back now this is not just a

100
00:05:18,279 --> 00:05:20,139
hypothetical attack this is actually

101
00:05:20,139 --> 00:05:22,210
realized by the slingshot abt group

102
00:05:22,210 --> 00:05:25,409
which targeted code signing

103
00:05:25,409 --> 00:05:28,659
enforcement's on Linux and one day I'll

104
00:05:28,659 --> 00:05:31,050
be able to talk about this a lot more

105
00:05:31,050 --> 00:05:35,169
yeah we also have the mic and the webcam

106
00:05:35,169 --> 00:05:38,409
starting with hobby any application and

107
00:05:38,409 --> 00:05:40,120
malicious code any legitimate

108
00:05:40,120 --> 00:05:42,639
application what's the access denied or

109
00:05:42,639 --> 00:05:44,889
the webcam this will be blocked by the

110
00:05:44,889 --> 00:05:48,069
system what will be shown and user has

111
00:05:48,069 --> 00:05:51,610
to explicitly allow that or device yeah

112
00:05:51,610 --> 00:05:53,440
this for security point is where the

113
00:05:53,440 --> 00:05:55,960
idea there's a myriad of Matt Bauer

114
00:05:55,960 --> 00:06:00,190
what has realized these devices to spy

115
00:06:00,190 --> 00:06:03,159
on so for example we have hacking teams

116
00:06:03,159 --> 00:06:06,190
before and also supply which so over a

117
00:06:06,190 --> 00:06:09,430
decade was spying on that users children

118
00:06:09,430 --> 00:06:12,789
through the web so such a kudos Apple

119
00:06:12,789 --> 00:06:14,139
for adding this extra layer of

120
00:06:14,139 --> 00:06:16,379
comparison

121
00:06:16,379 --> 00:06:19,120
it's highlighted apples keynotes and

122
00:06:19,120 --> 00:06:22,330
recently added protection around what we

123
00:06:22,330 --> 00:06:26,409
consider sensitive information so these

124
00:06:26,409 --> 00:06:28,690
are things like accessing the users

125
00:06:28,690 --> 00:06:31,380
contacts location

126
00:06:31,380 --> 00:06:34,020
records SMS messages so here for example

127
00:06:34,020 --> 00:06:36,270
you have some code and if you execute

128
00:06:36,270 --> 00:06:38,460
this code to access the message location

129
00:06:38,460 --> 00:06:41,430
on previous versions of my quest this

130
00:06:41,430 --> 00:06:44,460
will be able to execute their problems

131
00:06:44,460 --> 00:06:46,770
but Alice will be blocked and alert will

132
00:06:46,770 --> 00:06:49,440
reshape them these are bad for the

133
00:06:49,440 --> 00:06:51,170
attention

134
00:06:51,170 --> 00:06:53,400
another new security feature in the

135
00:06:53,400 --> 00:06:56,310
hobby is various terminal commands will

136
00:06:56,310 --> 00:06:57,570
actually be watched

137
00:06:57,570 --> 00:06:59,460
so if you pop into the terminal and try

138
00:06:59,460 --> 00:07:02,160
to create a new clock job surprisingly

139
00:07:02,160 --> 00:07:03,870
you know how do you don't block that I

140
00:07:03,870 --> 00:07:07,070
work the user and then request explicit

141
00:07:07,070 --> 00:07:11,670
yes this is used to me what you think in

142
00:07:11,670 --> 00:07:14,580
a Mojave is that app script commands

143
00:07:14,580 --> 00:07:17,370
which attempt to interact with other or

144
00:07:17,370 --> 00:07:20,670
remote processes will be blocked so I'll

145
00:07:20,670 --> 00:07:22,950
add there as we saw in previous

146
00:07:22,950 --> 00:07:25,710
presentations we've used Apple strips as

147
00:07:25,710 --> 00:07:28,110
a mechanism to for example inject code

148
00:07:28,110 --> 00:07:30,060
into the browser but then allow the

149
00:07:30,060 --> 00:07:32,210
notes just shown to steel sessions

150
00:07:32,210 --> 00:07:35,700
injections so on the slide you have some

151
00:07:35,700 --> 00:07:38,010
of this code from the piece of now

152
00:07:38,010 --> 00:07:40,920
another honor that would be injects

153
00:07:40,920 --> 00:07:43,550
being different

154
00:07:44,090 --> 00:07:46,560
we're news that on a holiday because of

155
00:07:46,560 --> 00:07:47,880
Apple's new privacy and security

156
00:07:47,880 --> 00:07:49,770
mechanisms this will now be generically

157
00:07:49,770 --> 00:07:53,910
block so we illustrate that basically

158
00:07:53,910 --> 00:07:55,950
everything worthwhile its and a half

159
00:07:55,950 --> 00:07:58,500
describe you will now be walk-on music

160
00:07:58,500 --> 00:07:59,940
versions of Mac OS

161
00:07:59,940 --> 00:08:02,250
yes well generate alerts that the user

162
00:08:02,250 --> 00:08:04,940
has to internet so what our goal is is

163
00:08:04,940 --> 00:08:08,090
topics these to basically find a way to

164
00:08:08,090 --> 00:08:10,680
programmatically or sleep slightly

165
00:08:10,680 --> 00:08:14,250
interact with these works so if we find

166
00:08:14,250 --> 00:08:16,920
such a way the beauty of this approach

167
00:08:16,920 --> 00:08:19,530
is we can generically support all these

168
00:08:19,530 --> 00:08:21,540
security and courtesy attempts for the

169
00:08:21,540 --> 00:08:23,400
single click even though some of them

170
00:08:23,400 --> 00:08:25,440
are kind of unrelated and implemented in

171
00:08:25,440 --> 00:08:27,660
different ways they all share single

172
00:08:27,660 --> 00:08:30,420
component matters the user service so we

173
00:08:30,420 --> 00:08:32,190
can say anything they click people

174
00:08:32,190 --> 00:08:33,599
example don't have to find a specific

175
00:08:33,599 --> 00:08:36,419
text like ass or a district we can just

176
00:08:36,419 --> 00:08:41,969
click a lot now the power of some events

177
00:08:41,969 --> 00:08:43,850
synthetic clicks have long

178
00:08:43,850 --> 00:08:47,000
realize so will now briefly look at some

179
00:08:47,000 --> 00:08:49,760
attacks and also how Apple has responded

180
00:08:49,760 --> 00:08:53,360
to these attacks suppose we have Apple

181
00:08:53,360 --> 00:08:54,800
stripped as I mentioned that the script

182
00:08:54,800 --> 00:08:56,990
can be used to generate synthetic event

183
00:08:56,990 --> 00:09:00,140
so all the way back in 2011 piece of

184
00:09:00,140 --> 00:09:02,270
Maya and then add several Robert was

185
00:09:02,270 --> 00:09:05,030
doping keychains to steal glasses

186
00:09:05,030 --> 00:09:07,670
now when you access the keychain this

187
00:09:07,670 --> 00:09:09,620
will display alert we can only back in

188
00:09:09,620 --> 00:09:12,410
2011 that basically would ask for use

189
00:09:12,410 --> 00:09:14,030
your consent before allowing the

190
00:09:14,030 --> 00:09:16,610
application to access the kitchen what

191
00:09:16,610 --> 00:09:18,470
devil all their head as you can see on

192
00:09:18,470 --> 00:09:21,200
the slide in first request access to the

193
00:09:21,200 --> 00:09:23,630
keychain as we generate and it works and

194
00:09:23,630 --> 00:09:25,760
then would execute a secondary script

195
00:09:25,760 --> 00:09:27,800
but you just continually try to click

196
00:09:27,800 --> 00:09:30,560
allow always yeah at the time you'll

197
00:09:30,560 --> 00:09:32,810
know she's against me synthetic clicks

198
00:09:32,810 --> 00:09:35,930
so this would get blocked and what

199
00:09:35,930 --> 00:09:41,270
knowledge meant to nor food space is

200
00:09:41,270 --> 00:09:44,510
really nicely to kind of focus out all

201
00:09:44,510 --> 00:09:46,730
right now even in 2011 these attacks we

202
00:09:46,730 --> 00:09:47,890
were going on

203
00:09:47,890 --> 00:09:50,360
we mentioned a fruit fly which is the

204
00:09:50,360 --> 00:09:52,700
piece of matte malar that would spy on

205
00:09:52,700 --> 00:09:53,900
Mac users

206
00:09:53,900 --> 00:09:55,520
it also had the ability to generate

207
00:09:55,520 --> 00:09:57,950
synthetic clicks this allowed the

208
00:09:57,950 --> 00:10:00,110
attacker to remotely interact with the

209
00:10:00,110 --> 00:10:03,260
UI so he could for example disable

210
00:10:03,260 --> 00:10:05,810
certain security prompts or move and

211
00:10:05,810 --> 00:10:09,350
click the mouse now of course Apple

212
00:10:09,350 --> 00:10:11,210
realize they had to do something about

213
00:10:11,210 --> 00:10:14,540
this and they bit in short on recent

214
00:10:14,540 --> 00:10:17,480
versions of Mac OS what they did was

215
00:10:17,480 --> 00:10:20,450
they filter out unauthorized clicks so

216
00:10:20,450 --> 00:10:24,260
now if a random program tries to say you

217
00:10:24,260 --> 00:10:26,180
can also generate a synthetic or for the

218
00:10:26,180 --> 00:10:29,750
Mac click the system will walk this he

219
00:10:29,750 --> 00:10:31,460
says ok this is not from the user I'm

220
00:10:31,460 --> 00:10:34,190
going to ignore this from a technical

221
00:10:34,190 --> 00:10:35,840
point of view chased through the way

222
00:10:35,840 --> 00:10:37,850
this is done as they check the process

223
00:10:37,850 --> 00:10:41,510
ID that is responsible for generating

224
00:10:41,510 --> 00:10:44,360
generating these system events and if

225
00:10:44,360 --> 00:10:46,490
it's coming from the system meaning has

226
00:10:46,490 --> 00:10:48,890
zero it will be allowed because they

227
00:10:48,890 --> 00:10:50,120
assume this is coming from one of the

228
00:10:50,120 --> 00:10:52,700
mouse drivers or some system components

229
00:10:52,700 --> 00:10:55,220
however if it's a random application

230
00:10:55,220 --> 00:10:56,050
that is same

231
00:10:56,050 --> 00:10:59,410
some events we system will filter that

232
00:10:59,410 --> 00:11:03,699
out and you are the clip now of course

233
00:11:03,699 --> 00:11:06,189
there's rather trivial to bypass this

234
00:11:06,189 --> 00:11:08,739
detection simply by finding ways to

235
00:11:08,739 --> 00:11:12,040
coerce or ask the system to generate

236
00:11:12,040 --> 00:11:16,959
arbitrary synthetic Lex for us so think

237
00:11:16,959 --> 00:11:19,929
about this at defqon.1 yeah turns out

238
00:11:19,929 --> 00:11:22,059
that Mac OS supports a feature called

239
00:11:22,059 --> 00:11:24,610
mouse keys which basically allows you to

240
00:11:24,610 --> 00:11:26,679
save keyboard events that assistant and

241
00:11:26,679 --> 00:11:28,449
translates into Mouse events

242
00:11:28,449 --> 00:11:30,699
so it basically turns your tour into a

243
00:11:30,699 --> 00:11:33,759
mouse there's some mappings for this so

244
00:11:33,759 --> 00:11:36,279
basically what I do is I turn on mouse

245
00:11:36,279 --> 00:11:38,860
keys then I stand it synthetic keyboard

246
00:11:38,860 --> 00:11:41,439
elects which are allowed the system then

247
00:11:41,439 --> 00:11:43,720
translated those into Mouse events and

248
00:11:43,720 --> 00:11:46,149
then we deliver them to the target so

249
00:11:46,149 --> 00:11:48,519
example where I shine it click a lot now

250
00:11:48,519 --> 00:11:50,529
the system would see and examine those

251
00:11:50,529 --> 00:11:52,959
events but 6 they were coming from the

252
00:11:52,959 --> 00:11:55,119
system because the system was doing the

253
00:11:55,119 --> 00:11:57,069
translation from the keyboard you Mouse

254
00:11:57,069 --> 00:11:59,860
the system would allow this so this gave

255
00:11:59,860 --> 00:12:02,829
me a way to interact with the UI pretty

256
00:12:02,829 --> 00:12:08,799
mohani now even funnier in my opinion

257
00:12:08,799 --> 00:12:13,269
way in to bypass these apples previously

258
00:12:13,269 --> 00:12:15,790
protection protections rather is simply

259
00:12:15,790 --> 00:12:17,980
to generate cheese synthetic mouse down

260
00:12:17,980 --> 00:12:20,769
with us so normally when you click the

261
00:12:20,769 --> 00:12:22,389
mouse and user you click which generates

262
00:12:22,389 --> 00:12:24,670
Mouse down and then you click and

263
00:12:24,670 --> 00:12:26,290
release that will generate a mouse up

264
00:12:26,290 --> 00:12:29,170
event so programmatically what I did it

265
00:12:29,170 --> 00:12:30,790
is distracting I just caught me and

266
00:12:30,790 --> 00:12:33,160
pasted the mouse down there twice this

267
00:12:33,160 --> 00:12:34,990
this thing kind of says this doesn't

268
00:12:34,990 --> 00:12:35,889
really make sense

269
00:12:35,889 --> 00:12:37,990
how can you generate two Mouse down with

270
00:12:37,990 --> 00:12:40,299
us so it said no I'm gonna help you out

271
00:12:40,299 --> 00:12:42,249
here I'm going to take that second

272
00:12:42,249 --> 00:12:44,410
mouths down a bit I will translate it

273
00:12:44,410 --> 00:12:46,809
into a mouse alphabet for you and then

274
00:12:46,809 --> 00:12:47,889
deliver it to you

275
00:12:47,889 --> 00:12:50,049
so the mouse event would then go to the

276
00:12:50,049 --> 00:12:52,540
target window which would be filtering

277
00:12:52,540 --> 00:12:54,489
the attacks and say oh this is coming

278
00:12:54,489 --> 00:12:56,529
from the system I'm going loss

279
00:12:56,529 --> 00:12:59,169
so why the code we can completely break

280
00:12:59,169 --> 00:13:03,339
all its differences I don't really got

281
00:13:03,339 --> 00:13:05,919
annoyed with me and said you know it and

282
00:13:05,919 --> 00:13:08,180
we'll have a concert tonight

283
00:13:08,180 --> 00:13:09,710
so what they basically did was twofold

284
00:13:09,710 --> 00:13:12,980
which are both very strong approaches on

285
00:13:12,980 --> 00:13:14,120
the security Queen

286
00:13:14,120 --> 00:13:16,520
firstly said okay we're gonna block any

287
00:13:16,520 --> 00:13:18,830
and all opposite that tries to

288
00:13:18,830 --> 00:13:21,080
communicate with other limit processes

289
00:13:21,080 --> 00:13:23,960
which is good because anger is also

290
00:13:23,960 --> 00:13:25,520
trying to against the second as a

291
00:13:25,520 --> 00:13:29,210
rejection mechanism so now if you're

292
00:13:29,210 --> 00:13:31,670
outstripped I see for example talk to

293
00:13:31,670 --> 00:13:33,830
Chrome or browser assistant you just

294
00:13:33,830 --> 00:13:36,470
flat-out block and she'll approach that

295
00:13:36,470 --> 00:13:39,140
 past in the wall similarly if you

296
00:13:39,140 --> 00:13:41,240
generate synthetic events which we do

297
00:13:41,240 --> 00:13:44,930
you see G or api's instead of trying to

298
00:13:44,930 --> 00:13:47,780
filter this app it just says no we're

299
00:13:47,780 --> 00:13:50,150
going to flat out reject this and not

300
00:13:50,150 --> 00:13:52,970
only do you have to click OK you can

301
00:13:52,970 --> 00:14:01,490
have to go into the system so I I saw

302
00:14:01,490 --> 00:14:03,890
this I said okay this seems like JMO

303
00:14:03,890 --> 00:14:06,170
apples basically shut the door and

304
00:14:06,170 --> 00:14:07,760
basically said okay we're not going to

305
00:14:07,760 --> 00:14:09,860
try to filter anything anymore to try

306
00:14:09,860 --> 00:14:11,990
any since that it clicks energy stones

307
00:14:11,990 --> 00:14:16,310
you completely wants so you know people

308
00:14:16,310 --> 00:14:18,190
well not really

309
00:14:18,190 --> 00:14:20,510
unfortunately if history has shown me

310
00:14:20,510 --> 00:14:23,300
anything it's that you know apples often

311
00:14:23,300 --> 00:14:26,800
struggles to get patches or fixes right

312
00:14:26,800 --> 00:14:31,310
so now when I talk about zero day for a

313
00:14:31,310 --> 00:14:33,890
necklace that allows us to generate

314
00:14:33,890 --> 00:14:36,350
synthetic clicks for example mouse

315
00:14:36,350 --> 00:14:38,390
clicks as a normal user and we'll also

316
00:14:38,390 --> 00:14:40,070
show you how to do this in invisible

317
00:14:40,070 --> 00:14:42,620
matter and this will allow three things

318
00:14:42,620 --> 00:14:45,680
like completely bypass all those recent

319
00:14:45,680 --> 00:14:49,550
local security and privacy necklaces so

320
00:14:49,550 --> 00:14:51,190
first let's talk about the OS controls

321
00:14:51,190 --> 00:14:54,530
so behind the scenes this is all handled

322
00:14:54,530 --> 00:14:56,780
by the TCC game some of the other talks

323
00:14:56,780 --> 00:14:59,690
mention this is but basically what

324
00:14:59,690 --> 00:15:02,960
happens is when a program tries to

325
00:15:02,960 --> 00:15:05,270
perform some action for example

326
00:15:05,270 --> 00:15:08,300
generating a synthetic click the TCC

327
00:15:08,300 --> 00:15:11,360
daemon is what examines the application

328
00:15:11,360 --> 00:15:13,760
to determine if it's a lot because the

329
00:15:13,760 --> 00:15:15,680
user can go in and prove and

330
00:15:15,680 --> 00:15:17,990
specifically add applications for

331
00:15:17,990 --> 00:15:20,290
example you use Google Chrome and

332
00:15:20,290 --> 00:15:23,499
new layouts want any access to my for

333
00:15:23,499 --> 00:15:25,269
your channel so the first time you do

334
00:15:25,269 --> 00:15:28,989
this yeah I'm okay for using my camera

335
00:15:28,989 --> 00:15:31,479
and my webcam and mic this will they get

336
00:15:31,479 --> 00:15:36,729
added to system file system and privacy

337
00:15:36,729 --> 00:15:39,189
pay which is then backed by the TCC

338
00:15:39,189 --> 00:15:41,379
watch TV next time you watch Chrome and

339
00:15:41,379 --> 00:15:43,329
try to join that same hangout so what

340
00:15:43,329 --> 00:15:45,339
happens is TCC beat will check the

341
00:15:45,339 --> 00:15:47,289
database and say okay yeah chrome was

342
00:15:47,289 --> 00:15:49,959
previously added by the user that's okay

343
00:15:49,959 --> 00:15:51,999
chrome can now access them well this

344
00:15:51,999 --> 00:15:53,979
idiot face file is protected by system

345
00:15:53,979 --> 00:15:54,879
integrity connection

346
00:15:54,879 --> 00:15:57,179
so now or cannot go in and manually add

347
00:15:57,179 --> 00:16:01,269
applications which is good so then the

348
00:16:01,269 --> 00:16:02,529
other day I was reading how it will

349
00:16:02,529 --> 00:16:04,569
create slaw how it agreed logs a lot

350
00:16:04,569 --> 00:16:08,079
about math yes while really good check

351
00:16:08,079 --> 00:16:11,439
91 and talk about CCTV and some changes

352
00:16:11,439 --> 00:16:13,959
a Mojave they were interesting wine he

353
00:16:13,959 --> 00:16:17,799
said that the rolls basically on sorry

354
00:16:17,799 --> 00:16:18,999
first

355
00:16:18,999 --> 00:16:21,749
besides the main TCC bass there is a

356
00:16:21,749 --> 00:16:25,359
marketing whiteness of applications and

357
00:16:25,359 --> 00:16:26,859
it says the rules in this compatibility

358
00:16:26,859 --> 00:16:29,499
database right access to protected

359
00:16:29,499 --> 00:16:31,779
functions for specific versions of

360
00:16:31,779 --> 00:16:34,839
absolute specific signatures so as you

361
00:16:34,839 --> 00:16:36,429
can see on the slide what conceptually

362
00:16:36,429 --> 00:16:38,829
happens is say an application let's

363
00:16:38,829 --> 00:16:40,629
access to Mike or generate synthetic

364
00:16:40,629 --> 00:16:44,289
click or access call records any of

365
00:16:44,289 --> 00:16:46,779
those actions in the block TCC first

366
00:16:46,779 --> 00:16:49,359
checks the TCC be babies so this is

367
00:16:49,359 --> 00:16:51,999
something the user previously explicitly

368
00:16:51,999 --> 00:16:55,179
a lot with not it checks the secondary

369
00:16:55,179 --> 00:16:58,239
undocumented whitelist and says does

370
00:16:58,239 --> 00:17:00,160
this contain this is the application

371
00:17:00,160 --> 00:17:03,549
match one of those applications in the

372
00:17:03,549 --> 00:17:06,309
latest today that wasn't you that's all

373
00:17:06,309 --> 00:17:10,388
I would say said on this so I want to

374
00:17:10,388 --> 00:17:11,888
say okay I want to dig more into this

375
00:17:11,888 --> 00:17:15,039
whiteness application database to see

376
00:17:15,039 --> 00:17:17,319
what it's all about so in step one was

377
00:17:17,319 --> 00:17:19,599
figuring out where this application

378
00:17:19,599 --> 00:17:23,319
database list so if we look at the TCC

379
00:17:23,319 --> 00:17:25,599
payment specifically its property list

380
00:17:25,599 --> 00:17:29,169
file we can see it has a watch pass for

381
00:17:29,169 --> 00:17:32,750
the file name allow applications office

382
00:17:32,750 --> 00:17:34,669
but we use something like tactics for

383
00:17:34,669 --> 00:17:38,000
which we show us what files are open by

384
00:17:38,000 --> 00:17:40,460
what applications you can see that the

385
00:17:40,460 --> 00:17:44,030
TCC payment has this file over I know

386
00:17:44,030 --> 00:17:46,490
what the process did so this is likely

387
00:17:46,490 --> 00:17:50,570
this application works so let's take a

388
00:17:50,570 --> 00:17:53,690
peek at this file so we can open the

389
00:17:53,690 --> 00:17:57,260
allow applications list not to us and we

390
00:17:57,260 --> 00:17:59,630
can see that yeah it appears to be a

391
00:17:59,630 --> 00:18:01,780
list of database property lists

392
00:18:01,780 --> 00:18:05,390
containing popular applications that are

393
00:18:05,390 --> 00:18:08,480
afforded the ability to perform actions

394
00:18:08,480 --> 00:18:11,809
that normally we generate alerts and be

395
00:18:11,809 --> 00:18:14,150
blocked so for example we can see there

396
00:18:14,150 --> 00:18:18,380
is VLC media application I've no idea

397
00:18:18,380 --> 00:18:22,190
why but it has the ability or needs the

398
00:18:22,190 --> 00:18:24,980
ability to generate synthetic effects so

399
00:18:24,980 --> 00:18:26,600
what happened behind the scenes that if

400
00:18:26,600 --> 00:18:28,730
something documented that there's a data

401
00:18:28,730 --> 00:18:31,630
entry Jesus alive applications miss

402
00:18:31,630 --> 00:18:36,080
basically saying that VLC can generate

403
00:18:36,080 --> 00:18:38,570
synthetic events it's very important to

404
00:18:38,570 --> 00:18:40,850
know that beside the name of the

405
00:18:40,850 --> 00:18:43,250
operation they also have signing

406
00:18:43,250 --> 00:18:45,409
information so it's likely that they

407
00:18:45,409 --> 00:18:47,270
validate the application so that we

408
00:18:47,270 --> 00:18:49,640
can't support these well so this list is

409
00:18:49,640 --> 00:18:52,820
system integrity production so so far so

410
00:18:52,820 --> 00:18:56,960
good but when I hacker had no which is

411
00:18:56,960 --> 00:18:59,450
actually on all time I wonder could I

412
00:18:59,450 --> 00:19:01,250
see verts one of these trusting

413
00:19:01,250 --> 00:19:05,059
applications because if I could they

414
00:19:05,059 --> 00:19:07,039
aren't given the ability to perform

415
00:19:07,039 --> 00:19:10,730
these unauthorized actions without being

416
00:19:10,730 --> 00:19:14,330
a watch because if we can do that in

417
00:19:14,330 --> 00:19:16,309
theory we should get something clicks

418
00:19:16,309 --> 00:19:20,150
and cook a lot all these other plots so

419
00:19:20,150 --> 00:19:21,980
let's take a closer look now at the

420
00:19:21,980 --> 00:19:24,950
validation logic within the TCC banner

421
00:19:24,950 --> 00:19:27,230
to see how it treats these a lot of

422
00:19:27,230 --> 00:19:29,960
applications so after a bunch of reverse

423
00:19:29,960 --> 00:19:31,760
engineering I found a method called

424
00:19:31,760 --> 00:19:36,260
matches this takes an exodus identity

425
00:19:36,260 --> 00:19:38,390
object and then the code cited

426
00:19:38,390 --> 00:19:40,460
information or specifically the code

427
00:19:40,460 --> 00:19:41,700
signing require

428
00:19:41,700 --> 00:19:43,979
the Apple turns all of an application

429
00:19:43,979 --> 00:19:47,099
from the application lists we look at

430
00:19:47,099 --> 00:19:49,259
strength in the code we can see that if

431
00:19:49,259 --> 00:19:51,419
this method is successful the basically

432
00:19:51,419 --> 00:19:53,669
says ok this allowed application is

433
00:19:53,669 --> 00:19:56,039
still valid we find it hasn't been

434
00:19:56,039 --> 00:19:58,229
tampered with so we will allow it to

435
00:19:58,229 --> 00:20:01,019
perform the action otherwise it detects

436
00:20:01,019 --> 00:20:03,419
that it's been submitted for example if

437
00:20:03,419 --> 00:20:05,579
it's trying to mess of it will say take

438
00:20:05,579 --> 00:20:06,089
a hike

439
00:20:06,089 --> 00:20:08,339
and wha allow the application trying to

440
00:20:08,339 --> 00:20:09,450
perform the action for example

441
00:20:09,450 --> 00:20:12,059
generating be synthetic event so again

442
00:20:12,059 --> 00:20:13,820
so far so good

443
00:20:13,820 --> 00:20:17,399
so take a closer look at this identity

444
00:20:17,399 --> 00:20:20,219
access class we can see that when it's

445
00:20:20,219 --> 00:20:21,299
in session

446
00:20:21,299 --> 00:20:23,579
it contains information about the

447
00:20:23,579 --> 00:20:26,159
application attempting the action so

448
00:20:26,159 --> 00:20:28,409
we're going to stick with VLC again we

449
00:20:28,409 --> 00:20:30,989
can see that at runtime when VLC tries

450
00:20:30,989 --> 00:20:33,119
to perform an action for example is see

451
00:20:33,119 --> 00:20:35,639
that it click this access identity

452
00:20:35,639 --> 00:20:37,409
object contains all the information

453
00:20:37,409 --> 00:20:40,200
about the application remember the name

454
00:20:40,200 --> 00:20:44,309
and the past died thanks to this method

455
00:20:44,309 --> 00:20:49,200
the method we can see it invokes a

456
00:20:49,200 --> 00:20:52,769
standard code signing API to verify as I

457
00:20:52,769 --> 00:20:54,479
mentioned that the application is still

458
00:20:54,479 --> 00:20:56,820
signed by these specific code signing

459
00:20:56,820 --> 00:20:59,039
requirement which is extracted out of

460
00:20:59,039 --> 00:21:01,379
that allowed application list

461
00:21:01,379 --> 00:21:02,940
so again recall in that a lot of

462
00:21:02,940 --> 00:21:04,469
application list is the name of the

463
00:21:04,469 --> 00:21:07,109
application example VLC and then all its

464
00:21:07,109 --> 00:21:09,119
code signing information for example the

465
00:21:09,119 --> 00:21:11,969
VLC developers code signing T by D

466
00:21:11,969 --> 00:21:12,989
etcetera etcetera

467
00:21:12,989 --> 00:21:16,799
yeah so far so good unfortunately the

468
00:21:16,799 --> 00:21:20,059
devil is in the details so apples

469
00:21:20,059 --> 00:21:22,799
documentation states the code signing

470
00:21:22,799 --> 00:21:26,639
api's are controlled by flax and the

471
00:21:26,639 --> 00:21:29,820
flags are passed into this again so here

472
00:21:29,820 --> 00:21:31,499
we can see an application the

473
00:21:31,499 --> 00:21:33,450
verification is performed with flag

474
00:21:33,450 --> 00:21:36,359
number sign and this is just a bitwise

475
00:21:36,359 --> 00:21:38,609
of three different values now I didn't

476
00:21:38,609 --> 00:21:40,440
recognize seven it seemed a little odd

477
00:21:40,440 --> 00:21:42,450
so I look up what these values would

478
00:21:42,450 --> 00:21:44,399
correspond to we can see the bottom of

479
00:21:44,399 --> 00:21:47,639
the slide so first we have check all

480
00:21:47,639 --> 00:21:49,889
organizations the success Macha

481
00:21:49,889 --> 00:21:52,049
refineries in each box meaning a basic

482
00:21:52,049 --> 00:21:53,460
we have 32 that

483
00:21:53,460 --> 00:21:56,600
sixty four-bit chump so what about all

484
00:21:56,600 --> 00:21:59,670
the next two values for the flag make

485
00:21:59,670 --> 00:22:03,450
zero sense excellent do not validate the

486
00:22:03,450 --> 00:22:06,690
executable and then do not dominate and

487
00:22:06,690 --> 00:22:11,490
resets so since we do not validate

488
00:22:11,490 --> 00:22:14,550
executable and do not validate resources

489
00:22:14,550 --> 00:22:17,100
or if not set if we look at the code

490
00:22:17,100 --> 00:22:18,360
signing logic

491
00:22:18,360 --> 00:22:21,270
it's basically bit ignore checking yes

492
00:22:21,270 --> 00:22:24,240
pupil or all its resources so the only

493
00:22:24,240 --> 00:22:25,980
thing it's going to do is make sure that

494
00:22:25,980 --> 00:22:28,350
the application is signed by who they

495
00:22:28,350 --> 00:22:30,810
say it is so the analogy like this

496
00:22:30,810 --> 00:22:39,840
imagine you're checking your date and

497
00:22:39,840 --> 00:22:41,880
they check that the name matches what is

498
00:22:41,880 --> 00:22:43,710
I'm booking they don't actually check

499
00:22:43,710 --> 00:22:45,930
that the paper is about a passport or

500
00:22:45,930 --> 00:22:46,590
driver's

501
00:22:46,590 --> 00:22:48,360
so basically say yeah it's not true so

502
00:22:48,360 --> 00:22:51,890
yeah here a lot on the place so detail

503
00:22:51,890 --> 00:22:55,860
so say the application executable nor

504
00:22:55,860 --> 00:22:58,200
its resources are validated it's a very

505
00:22:58,200 --> 00:23:01,500
trivial for us to subvert any of the

506
00:23:01,500 --> 00:23:03,960
applications on that allowed application

507
00:23:03,960 --> 00:23:06,300
whiteness to perform any of these

508
00:23:06,300 --> 00:23:07,740
disallowed actions for example

509
00:23:07,740 --> 00:23:11,820
generating synthetic clicks so here's

510
00:23:11,820 --> 00:23:13,980
this absolutely screen you just choose

511
00:23:13,980 --> 00:23:16,800
any application from the line

512
00:23:16,800 --> 00:23:19,230
I choose the VLC declare they had it on

513
00:23:19,230 --> 00:23:21,990
my system you can obtain it remember

514
00:23:21,990 --> 00:23:24,180
that when we're going to talk about how

515
00:23:24,180 --> 00:23:25,890
to support it and then we're gonna run

516
00:23:25,890 --> 00:23:28,380
the application and it should be able to

517
00:23:28,380 --> 00:23:30,720
execute the subverted logic which allows

518
00:23:30,720 --> 00:23:32,820
us to perform things like that events

519
00:23:32,820 --> 00:23:35,310
and in here even though Sicily seems

520
00:23:35,310 --> 00:23:38,460
effects since the validation it's not

521
00:23:38,460 --> 00:23:41,240
implemented correctly it will be a lot

522
00:23:41,240 --> 00:23:43,920
so here's an example of us using a

523
00:23:43,920 --> 00:23:46,830
rather abusing VLC which is one of the

524
00:23:46,830 --> 00:23:49,260
allowed applications now VLC is about

525
00:23:49,260 --> 00:23:50,820
about rebuilding VLC at all it's just is

526
00:23:50,820 --> 00:23:52,620
one of the applications that Apple has

527
00:23:52,620 --> 00:23:57,150
given access to perform some cabinets so

528
00:23:57,150 --> 00:23:59,370
a PLC it turns out will load any plug-in

529
00:23:59,370 --> 00:24:01,800
from its plug-in directory so what we do

530
00:24:01,800 --> 00:24:03,420
is we can just drop it let's just plug

531
00:24:03,420 --> 00:24:05,640
in that's completely unsigned we

532
00:24:05,640 --> 00:24:08,280
plug-in directory and then execute PLC

533
00:24:08,280 --> 00:24:11,700
and prefer that yes a PLC loads up this

534
00:24:11,700 --> 00:24:13,590
is not a flawed PLC it just says I don't

535
00:24:13,590 --> 00:24:20,940
load plugins because this is right now

536
00:24:20,940 --> 00:24:23,760
the real test is when our malicious

537
00:24:23,760 --> 00:24:25,530
plugin which is now loaded in the

538
00:24:25,530 --> 00:24:28,590
process contacts both VLC tries to

539
00:24:28,590 --> 00:24:31,410
perform some disallowed action example

540
00:24:31,410 --> 00:24:34,410
generating a synthetic click will not be

541
00:24:34,410 --> 00:24:35,040
allowed

542
00:24:35,040 --> 00:24:37,110
specifically what we matches code

543
00:24:37,110 --> 00:24:39,960
requirement Chuck for trying yes

544
00:24:39,960 --> 00:24:42,600
now the answer is you can see the bugger

545
00:24:42,600 --> 00:24:45,870
is yes because again the flags at Apple

546
00:24:45,870 --> 00:24:49,320
passes to the code signing API says

547
00:24:49,320 --> 00:24:51,840
don't validate resources more validate

548
00:24:51,840 --> 00:24:54,840
the execution we haven't modified VLC

549
00:24:54,840 --> 00:24:57,179
signature although we have corrupted

550
00:24:57,179 --> 00:25:00,179
this application bundle the signature is

551
00:25:00,179 --> 00:25:02,220
still valid so as you can see on slide

552
00:25:02,220 --> 00:25:06,630
it still passes the validation so here

553
00:25:06,630 --> 00:25:10,049
is a first demo what we're going to see

554
00:25:10,049 --> 00:25:12,960
is basically loading a side kernel

555
00:25:12,960 --> 00:25:14,880
exception which will allow me to ban

556
00:25:14,880 --> 00:25:18,200
textbook aside because on 10 on my boss

557
00:25:18,200 --> 00:25:21,450
10.14 about 3 with this so even the

558
00:25:21,450 --> 00:25:24,470
latest version in my castle so the first

559
00:25:24,470 --> 00:25:27,809
thing around 10.15 m3 I'm going to show

560
00:25:27,809 --> 00:25:29,070
that system integrity connection is

561
00:25:29,070 --> 00:25:33,240
Moodle I may be X at and that week it

562
00:25:33,240 --> 00:25:36,600
dot X is not loaded nothing matches

563
00:25:36,600 --> 00:25:39,450
I let me try to load my rootkit but it

564
00:25:39,450 --> 00:25:42,240
felt physically saying the user has to

565
00:25:42,240 --> 00:25:45,000
reach success we're then gonna run our

566
00:25:45,000 --> 00:25:48,330
attack which the background watches a

567
00:25:48,330 --> 00:25:51,390
suburban version of VLC visibly this

568
00:25:51,390 --> 00:25:55,020
then just an access talk that has the

569
00:25:55,020 --> 00:25:57,120
allow button and they be sent a simple

570
00:25:57,120 --> 00:25:59,100
click to like wow

571
00:25:59,100 --> 00:26:01,500
GCC is going to see this happening so

572
00:26:01,500 --> 00:26:03,510
what you go invalidate click however it

573
00:26:03,510 --> 00:26:05,520
sees that it comes from within dlc dlc

574
00:26:05,520 --> 00:26:07,740
so validates to the flock laying the

575
00:26:07,740 --> 00:26:10,320
flags they pass and then this allows the

576
00:26:10,320 --> 00:26:12,950
particular

577
00:26:13,140 --> 00:26:15,750
now might you think a for it not just

578
00:26:15,750 --> 00:26:19,620
enemy but well I'm sitting at my Mac and

579
00:26:19,620 --> 00:26:22,049
I open Word document and all the same

580
00:26:22,049 --> 00:26:24,480
there's a pop up and the mouse moves and

581
00:26:24,480 --> 00:26:26,610
unlikely clicks I know I'm gonna be

582
00:26:26,610 --> 00:26:29,190
happy then yeah I would you like put

583
00:26:29,190 --> 00:26:31,799
that map out the window right so what we

584
00:26:31,799 --> 00:26:33,299
need to do is figure out a way to make

585
00:26:33,299 --> 00:26:35,429
this attack and this so that we can

586
00:26:35,429 --> 00:26:38,280
generate a Schmitt synthetic clips for

587
00:26:38,280 --> 00:26:40,140
example to click on one of these access

588
00:26:40,140 --> 00:26:42,059
pumps without the user coming we're

589
00:26:42,059 --> 00:26:45,179
pretty simple solution that's included

590
00:26:45,179 --> 00:26:47,820
effect before this action rang the

591
00:26:47,820 --> 00:26:49,860
screens didn't because when the screen

592
00:26:49,860 --> 00:26:52,410
is then simply black but you is still

593
00:26:52,410 --> 00:26:55,470
interactive so what we can do is we can

594
00:26:55,470 --> 00:26:58,530
for example wait until the users not and

595
00:26:58,530 --> 00:27:00,299
then very easy we can programmatically

596
00:27:00,299 --> 00:27:02,910
in the street we go ahead perform the

597
00:27:02,910 --> 00:27:05,160
action get regenerate pop-up for example

598
00:27:05,160 --> 00:27:07,500
turn to access microphone you'll know

599
00:27:07,500 --> 00:27:10,110
the correct section we then can send be

600
00:27:10,110 --> 00:27:12,090
synthetic quick change your thoughts

601
00:27:12,090 --> 00:27:14,280
clicking loud this will tell the system

602
00:27:14,280 --> 00:27:18,059
to action action will be you can also

603
00:27:18,059 --> 00:27:20,669
the text way the display is going to

604
00:27:20,669 --> 00:27:22,710
sleep and we can slightly speed that up

605
00:27:22,710 --> 00:27:25,290
and then next you a hundred percent

606
00:27:25,290 --> 00:27:27,960
before three goes to sleep performing

607
00:27:27,960 --> 00:27:30,299
the same attack and then a user sitting

608
00:27:30,299 --> 00:27:31,590
where they'll just see their screen

609
00:27:31,590 --> 00:27:33,720
doing so again it's literally a way to

610
00:27:33,720 --> 00:27:36,450
pull off this attack visibly so the

611
00:27:36,450 --> 00:27:38,970
users not aware of what we're doing and

612
00:27:38,970 --> 00:27:40,860
it's the rocking with the UI soon thank

613
00:27:40,860 --> 00:27:45,900
you so let's wrap this all up well first

614
00:27:45,900 --> 00:27:47,790
I really wants you in recess the power

615
00:27:47,790 --> 00:27:50,610
of synthetic events if you have the

616
00:27:50,610 --> 00:27:53,130
ability to programmatically interact

617
00:27:53,130 --> 00:27:56,850
with the UI we can bypass basically all

618
00:27:56,850 --> 00:28:00,870
of our local security mechanisms all of

619
00:28:00,870 --> 00:28:04,380
just a single click also and not to pick

620
00:28:04,380 --> 00:28:09,830
on Apple too much very funny

621
00:28:10,220 --> 00:28:12,480
we're track that they're protecting this

622
00:28:12,480 --> 00:28:16,049
is not the best so for example return

623
00:28:16,049 --> 00:28:21,210
catch this in 2015 pretty easy and you

624
00:28:21,210 --> 00:28:23,309
know 2019 here we are Michael S is so

625
00:28:23,309 --> 00:28:25,500
completely while about you ease

626
00:28:25,500 --> 00:28:28,170
so the Mac user at the world is turning

627
00:28:28,170 --> 00:28:30,630
I'm hoping this is fixed and his talk

628
00:28:30,630 --> 00:28:32,640
will inspire them to get a fix right

629
00:28:32,640 --> 00:28:37,500
Misun also I would be so pissed that you

630
00:28:37,500 --> 00:28:40,920
know maybe a little time on security and

631
00:28:40,920 --> 00:28:43,950
less on marketing you know they are rude

632
00:28:43,950 --> 00:28:46,560
its own acts and they sweep things like

633
00:28:46,560 --> 00:28:49,560
by mass because they're secure and I

634
00:28:49,560 --> 00:28:54,540
think that we do a better job doing this

635
00:28:54,540 --> 00:28:57,180
but to me it's like disingenuous to get

636
00:28:57,180 --> 00:28:58,440
up on stage in front of millions of

637
00:28:58,440 --> 00:29:00,030
people and say you buy our computers

638
00:29:00,030 --> 00:29:02,040
because they're very sure when reality

639
00:29:02,040 --> 00:29:04,110
is they really not and then his luggage

640
00:29:04,110 --> 00:29:08,820
tribute I definitely have no ability to

641
00:29:08,820 --> 00:29:10,650
find these many bugs but it would be

642
00:29:10,650 --> 00:29:12,420
naive or arrogant for me to fake that

643
00:29:12,420 --> 00:29:14,670
there's other people out here or who

644
00:29:14,670 --> 00:29:19,260
have this same capability so these tech

645
00:29:19,260 --> 00:29:25,920
bugs would be more now you and me by

646
00:29:25,920 --> 00:29:30,240
talking also how this kind of you know

647
00:29:30,240 --> 00:29:32,220
when I talk about zero abilities I

648
00:29:32,220 --> 00:29:35,670
realize but talk about detection

649
00:29:35,670 --> 00:29:38,910
socially part of the solution as well so

650
00:29:38,910 --> 00:29:40,680
let's quickly talk about how you can

651
00:29:40,680 --> 00:29:43,560
hear me check these kind of attacks so

652
00:29:43,560 --> 00:29:46,200
first actually easy to detect some

653
00:29:46,200 --> 00:29:49,560
clicks what you can do is on system you

654
00:29:49,560 --> 00:29:51,870
can register in a bed tab which will

655
00:29:51,870 --> 00:29:54,270
ensure that any time a mouse tip is

656
00:29:54,270 --> 00:29:57,560
generated we can observe this action and

657
00:29:57,560 --> 00:30:00,810
basically exactly declare that is it

658
00:30:00,810 --> 00:30:03,480
really easy because the operating system

659
00:30:03,480 --> 00:30:06,780
will set a flag that we mouse click was

660
00:30:06,780 --> 00:30:09,090
synthetically generated and it will also

661
00:30:09,090 --> 00:30:11,610
tell me of the process that was

662
00:30:11,610 --> 00:30:14,580
responsible for generally be synthetic

663
00:30:14,580 --> 00:30:16,800
so here's going to do it just a few

664
00:30:16,800 --> 00:30:19,110
lines of code we generate and events tap

665
00:30:19,110 --> 00:30:21,630
you mention every time a mouse click is

666
00:30:21,630 --> 00:30:24,420
generate I callback will be in books and

667
00:30:24,420 --> 00:30:27,390
we can then get and State on the clip

668
00:30:27,390 --> 00:30:29,970
which isn't set to zero let's assume it

669
00:30:29,970 --> 00:30:34,140
quick so as actually I did you security

670
00:30:34,140 --> 00:30:36,240
and since this last year attracts

671
00:30:36,240 --> 00:30:37,059
insects

672
00:30:37,059 --> 00:30:39,009
because this is not something you see on

673
00:30:39,009 --> 00:30:42,789
a normal system so this means that even

674
00:30:42,789 --> 00:30:45,580
with no it a priori knowledge of this

675
00:30:45,580 --> 00:30:48,070
attack who are able to become I don't

676
00:30:48,070 --> 00:30:49,870
mean to sound like a sales pitch and

677
00:30:49,870 --> 00:30:52,870
just say you know these attacks can also

678
00:30:52,870 --> 00:30:55,029
be detected

679
00:30:55,029 --> 00:30:56,889
so again if you're tracking synthetic

680
00:30:56,889 --> 00:30:59,679
cooks and living on those you click the

681
00:30:59,679 --> 00:31:02,100
check this and any of the other

682
00:31:02,100 --> 00:31:07,749
synthetic toxin alright so thanks again

683
00:31:07,749 --> 00:31:09,700
for attending my talk also I personable

684
00:31:09,700 --> 00:31:11,259
and what you think further than

685
00:31:11,259 --> 00:31:13,539
Objective C who also sponsors of this

686
00:31:13,539 --> 00:31:16,679
wonderful conference give any questions

687
00:31:16,679 --> 00:31:21,460
come on with me or she did US Attorney

688
00:31:21,460 --> 00:31:57,240
home so that we have

689
00:32:04,649 --> 00:32:07,749
changing it like anyone with this came

690
00:32:07,749 --> 00:32:09,909
along and loads it plug-in that was

691
00:32:09,909 --> 00:32:10,779
about it

692
00:32:10,779 --> 00:32:14,169
 but yeah I'm thinking about that

693
00:32:14,169 --> 00:32:20,740
um actually it's looking see ya

694
00:32:20,740 --> 00:32:23,909
thank Erie if they are yeah they're

695
00:32:23,909 --> 00:32:27,159
validating it at one time maybe they

696
00:32:27,159 --> 00:32:31,149
would see that yeah that's a good point

697
00:32:31,149 --> 00:32:32,559
if any of the applications and loading

698
00:32:32,559 --> 00:32:34,629
extremely plugins the app don't thing

699
00:32:34,629 --> 00:32:36,820
will still be alive generally that's not

700
00:32:36,820 --> 00:32:38,830
something that applications do I mean if

701
00:32:38,830 --> 00:32:40,809
they you low external plugins they will

702
00:32:40,809 --> 00:32:43,929
be Apple trusted domains but for example

703
00:32:43,929 --> 00:32:45,450
if the application has a

704
00:32:45,450 --> 00:32:48,010
hyperbole and is looking in a user

705
00:32:48,010 --> 00:32:50,170
controlled location first before the

706
00:32:50,170 --> 00:32:51,670
system location that's outside yeah

707
00:32:51,670 --> 00:32:53,880
bundle that would still work

708
00:32:53,880 --> 00:32:56,380
that's a great thing let's see how we

709
00:32:56,380 --> 00:33:02,200
fix it you know they opted to see laughs

710
00:33:02,200 --> 00:33:04,470
a boon because everything that 150 was

711
00:33:04,470 --> 00:33:07,330
breaking as events yeah I know yeah yeah

712
00:33:07,330 --> 00:33:09,400
it's the question I don't know if it's

713
00:33:09,400 --> 00:33:11,470
somebody actually you like video games

714
00:33:11,470 --> 00:33:13,630
and maybe you know I had a tutorial than

715
00:33:13,630 --> 00:33:16,450
anything else but I have audio an ELC

716
00:33:16,450 --> 00:33:19,270
has to have the ability to generate some

717
00:33:19,270 --> 00:33:28,200
documents so I see the answer is no but

718
00:33:28,200 --> 00:33:31,120
when you are dimming the screen or

719
00:33:31,120 --> 00:33:34,120
waiting for checking when it's not sweet

720
00:33:34,120 --> 00:33:36,490
I've seen the synthetic mouse click is

721
00:33:36,490 --> 00:33:41,410
not weak or dirty back out of C correct

722
00:33:41,410 --> 00:33:44,680
so actually when this display is in

723
00:33:44,680 --> 00:33:49,120
sleep mode you is water active when you

724
00:33:49,120 --> 00:33:51,010
screensaver is on and you send a

725
00:33:51,010 --> 00:33:54,490
synthetic event it wakes up for so

726
00:33:54,490 --> 00:33:57,280
that's why DNA is the one and best

727
00:33:57,280 --> 00:33:59,440
solution because when the strands didn't

728
00:33:59,440 --> 00:34:01,630
read it's really black and any mouse

729
00:34:01,630 --> 00:34:03,070
clicks that you generated will be

730
00:34:03,070 --> 00:34:04,960
delivered to the window that's there

731
00:34:04,960 --> 00:34:06,970
even if you can't see them and it won't

732
00:34:06,970 --> 00:34:09,550
unset beginning and of course you can

733
00:34:09,550 --> 00:34:10,750
also only get it when you're done with

734
00:34:10,750 --> 00:34:12,639
the attack but again it'd be kind of

735
00:34:12,639 --> 00:34:13,899
weird if you know you're working on

736
00:34:13,899 --> 00:34:15,850
we're documenting extreme things like

737
00:34:15,850 --> 00:34:18,969
executive okay very quickly that's odd

738
00:34:18,969 --> 00:34:21,040
so what I do in the proof of concept is

739
00:34:21,040 --> 00:34:23,139
I wait until the user it's not acting

740
00:34:23,139 --> 00:34:24,940
for 50 minutes so actually I kind of

741
00:34:24,940 --> 00:34:29,199
swing the display to sleep because Apple

742
00:34:29,199 --> 00:34:32,020
takes about two seconds we dim it first

743
00:34:32,020 --> 00:34:33,580
over two seconds and then put the

744
00:34:33,580 --> 00:34:35,710
display of sleep point so what I do is I

745
00:34:35,710 --> 00:34:38,469
get an alert when Street starts there I

746
00:34:38,469 --> 00:34:41,260
speed up the bidding process 20 games in

747
00:34:41,260 --> 00:34:43,270
one second then I have one second which

748
00:34:43,270 --> 00:34:45,040
is more than enough time to perform an

749
00:34:45,040 --> 00:34:48,370
action click allow and then allow the

750
00:34:48,370 --> 00:34:50,830
screen Felicity so in that way usually

751
00:34:50,830 --> 00:34:52,870
nothing I know because the screen is

752
00:34:52,870 --> 00:34:54,510
already in the gym

753
00:34:54,510 --> 00:35:02,650
excellent question though and yours so

754
00:35:02,650 --> 00:35:06,130
in your personal opinion if Apple let's

755
00:35:06,130 --> 00:35:08,349
use their own hooks to alert you when a

756
00:35:08,349 --> 00:35:10,329
synthetic click alert just like we can

757
00:35:10,329 --> 00:35:11,890
kind of write the tool check you think

758
00:35:11,890 --> 00:35:15,099
users would like recognizer that quick

759
00:35:15,099 --> 00:35:16,750
treatment really happened then like it

760
00:35:16,750 --> 00:35:19,570
popped up and said hey PLC we all see is

761
00:35:19,570 --> 00:35:21,160
trying to click something I didn't

762
00:35:21,160 --> 00:35:23,560
install VLC yeah no that's a great point

763
00:35:23,560 --> 00:35:26,260
so those that's right spiritual we kind

764
00:35:26,260 --> 00:35:29,200
of have an advantage because you know we

765
00:35:29,200 --> 00:35:31,599
can alert the users and hopefully be

766
00:35:31,599 --> 00:35:33,490
beside things I generally don't like to

767
00:35:33,490 --> 00:35:34,869
bother the user so I hope you convert

768
00:35:34,869 --> 00:35:37,000
supplies that in Mojave you know how all

769
00:35:37,000 --> 00:35:39,460
these new policy and as many of us can

770
00:35:39,460 --> 00:35:41,200
attest to that right in the gym it's

771
00:35:41,200 --> 00:35:43,480
churchill's these also cause problems

772
00:35:43,480 --> 00:35:45,910
for legitimate studios we give talks

773
00:35:45,910 --> 00:35:47,950
toms you need a whole loading extension

774
00:35:47,950 --> 00:35:50,320
so this is something that Apple is added

775
00:35:50,320 --> 00:35:54,180
be explicit requirement and users must

776
00:35:54,180 --> 00:35:57,550
explicitly include Chrome extensions so

777
00:35:57,550 --> 00:36:00,579
if you're building a consumer security

778
00:36:00,579 --> 00:36:01,960
populate the current section through the

779
00:36:01,960 --> 00:36:05,109
firewall or a benchmark you know I tell

780
00:36:05,109 --> 00:36:06,760
the users don't open this and click a

781
00:36:06,760 --> 00:36:10,180
lot I've shown you since its inception

782
00:36:10,180 --> 00:36:13,030
this has never been secured meaning the

783
00:36:13,030 --> 00:36:15,490
bad guys have always had a way to

784
00:36:15,490 --> 00:36:18,940
circumvent this however us

785
00:36:18,940 --> 00:36:20,410
security researchers to develop

786
00:36:20,410 --> 00:36:22,359
schedules have had to play by the rules

787
00:36:22,359 --> 00:36:24,339
right you can't build 0 these injections

788
00:36:24,339 --> 00:36:26,140
I mean that was just a bad one attempt

789
00:36:26,140 --> 00:36:28,690
it I'm liking why um so we have to

790
00:36:28,690 --> 00:36:29,950
struggle with this

791
00:36:29,950 --> 00:36:32,680
there's hackers just you know all the

792
00:36:32,680 --> 00:36:35,260
way to the bank so you're not gonna have

793
00:36:35,260 --> 00:36:36,880
too much but this is sometimes

794
00:36:36,880 --> 00:36:38,800
problematic because I don't think the

795
00:36:38,800 --> 00:36:41,970
security impacts sometimes way the

796
00:36:41,970 --> 00:36:45,160
downside especially third party it's for

797
00:36:45,160 --> 00:36:47,260
sure you all there so that's kind of

798
00:36:47,260 --> 00:36:50,619
frustrating well but yeah just answer

799
00:36:50,619 --> 00:36:52,000
your question I think that's why Apple

800
00:36:52,000 --> 00:36:53,650
went the route and said look we're just

801
00:36:53,650 --> 00:36:55,990
going to block all synthetic events but

802
00:36:55,990 --> 00:36:58,660
in the end if they would've you wouldn't

803
00:36:58,660 --> 00:36:59,980
be having this discussion or if they

804
00:36:59,980 --> 00:37:02,770
were gonna coach ninth Jax correct and

805
00:37:02,770 --> 00:37:05,200
again if we were to give this code no

806
00:37:05,200 --> 00:37:06,020
they wouldn't

807
00:37:06,020 --> 00:37:07,820
you know anyone with a secured mindset

808
00:37:07,820 --> 00:37:10,190
and look at this code when immediately

809
00:37:10,190 --> 00:37:12,110
realize this so we had enough to take

810
00:37:12,110 --> 00:37:14,920
away from this bug is it's kind of neat

811
00:37:14,920 --> 00:37:17,750
once you see it from a security mindset

812
00:37:17,750 --> 00:37:20,720
assistance it's glaringly honest so I

813
00:37:20,720 --> 00:37:23,780
would also very happily it's a little

814
00:37:23,780 --> 00:37:26,000
better or have you know people with

815
00:37:26,000 --> 00:37:27,470
security backgrounds look at code before

816
00:37:27,470 --> 00:37:29,390
shipping it especially we're going to go

817
00:37:29,390 --> 00:37:39,410
up on stage and tell everyone okay sorry

818
00:37:39,410 --> 00:37:41,420
last week there's no motors limit is the

819
00:37:41,420 --> 00:37:44,480
actual use case force and everyone's

820
00:37:44,480 --> 00:37:48,950
like why would there be constant yeah so

821
00:37:48,950 --> 00:37:50,390
that's a great question so the two I

822
00:37:50,390 --> 00:37:53,119
know are accessibility software so

823
00:37:53,119 --> 00:37:54,650
that's a really important one because

824
00:37:54,650 --> 00:37:56,090
obviously users with disabilities should

825
00:37:56,090 --> 00:37:58,820
be able to interact and then the other

826
00:37:58,820 --> 00:38:01,760
cases are things like remote software so

827
00:38:01,760 --> 00:38:04,820
things like Remote Desktop probably that

828
00:38:04,820 --> 00:38:06,800
those events come to the system is

829
00:38:06,800 --> 00:38:08,510
synthetic that's because we essentially

830
00:38:08,510 --> 00:38:10,310
are programmatically generated on the

831
00:38:10,310 --> 00:38:14,240
remote system and then so you know that

832
00:38:14,240 --> 00:38:15,590
one slide that showed Apple kind of

833
00:38:15,590 --> 00:38:16,730
feeling the pressure

834
00:38:16,730 --> 00:38:18,859
well the reason they kind of struggle

835
00:38:18,859 --> 00:38:20,690
with this is because there are

836
00:38:20,690 --> 00:38:23,450
legitimate cases you know us developing

837
00:38:23,450 --> 00:38:24,920
secure tools we still probably won't

838
00:38:24,920 --> 00:38:26,960
always report those events so we can say

839
00:38:26,960 --> 00:38:29,000
okay this is a legitimate it's this

840
00:38:29,000 --> 00:38:31,760
admin I'm just coming in via VLC or

841
00:38:31,760 --> 00:38:34,580
something and admitting the system and

842
00:38:34,580 --> 00:38:36,440
then you can look at that closer but no

843
00:38:36,440 --> 00:38:38,240
applet can't really make such a

844
00:38:38,240 --> 00:38:40,460
draconian decision because Gary pointed

845
00:38:40,460 --> 00:38:42,140
out the average users just going to be

846
00:38:42,140 --> 00:38:44,450
confused and it's the impact apples

847
00:38:44,450 --> 00:38:47,680
wonderful experience

