1
00:00:03,780 --> 00:00:06,029
course not going to thank Patrick and I

2
00:00:06,029 --> 00:00:08,750
used to have me out here James this year

3
00:00:08,750 --> 00:00:12,090
this talk is going to be insane focus so

4
00:00:12,090 --> 00:00:14,070
we're shifting gears a bit from like the

5
00:00:14,070 --> 00:00:16,289
offensive side onto the defensive side

6
00:00:16,289 --> 00:00:18,930
so who's responsible here for actually

7
00:00:18,930 --> 00:00:21,980
detecting Mac OS malware in their garden

8
00:00:21,980 --> 00:00:25,199
cool so what can you like this off and

9
00:00:25,199 --> 00:00:29,039
so last year what I did at dr. Black Sea

10
00:00:29,039 --> 00:00:31,019
is actually go through how to do duck

11
00:00:31,019 --> 00:00:33,360
hunting for Mac OS and mapping that to

12
00:00:33,360 --> 00:00:35,399
even might attack framework so this is a

13
00:00:35,399 --> 00:00:37,650
bit of an extension of that and like a

14
00:00:37,650 --> 00:00:39,690
cool little story about how this tool

15
00:00:39,690 --> 00:00:42,840
came to be so to start off my name is

16
00:00:42,840 --> 00:00:44,670
Richard Cyrus I'm on the defensive

17
00:00:44,670 --> 00:00:46,680
services team expect the rocks so I

18
00:00:46,680 --> 00:00:47,820
could route to no employer liable

19
00:00:47,820 --> 00:00:49,350
offensive stuff but yes we have a

20
00:00:49,350 --> 00:00:52,380
defensive team um prior to spec erupts I

21
00:00:52,380 --> 00:00:54,330
was at Apple on their detection and

22
00:00:54,330 --> 00:00:57,930
response team and so Apple is where I

23
00:00:57,930 --> 00:01:00,600
really started to keep diving to Planet

24
00:01:00,600 --> 00:01:02,880
to do direct hunting at scale on Mac OS

25
00:01:02,880 --> 00:01:04,290
systems and then also some of the

26
00:01:04,290 --> 00:01:07,740
challenges advisors with that so one

27
00:01:07,740 --> 00:01:08,970
thing that I want to bring up was like

28
00:01:08,970 --> 00:01:11,430
three ideas regarding mac OS security

29
00:01:11,430 --> 00:01:13,610
before we dive into at all

30
00:01:13,610 --> 00:01:17,220
so one the number of Mac OS systems and

31
00:01:17,220 --> 00:01:19,080
they're an appliance is growing that's a

32
00:01:19,080 --> 00:01:22,020
known fact most organizations today once

33
00:01:22,020 --> 00:01:24,780
you join a good option sometimes of even

34
00:01:24,780 --> 00:01:26,490
having a Windows system or a Mac OS

35
00:01:26,490 --> 00:01:27,180
system

36
00:01:27,180 --> 00:01:29,970
wait and so these Mac OS systems

37
00:01:29,970 --> 00:01:32,580
especially in Windows environments our

38
00:01:32,580 --> 00:01:35,580
domain join and they're in the hands of

39
00:01:35,580 --> 00:01:38,580
people who want to be cool right so your

40
00:01:38,580 --> 00:01:40,799
executives there sea level staff like I

41
00:01:40,799 --> 00:01:43,140
need a nap because Mac school and then

42
00:01:43,140 --> 00:01:44,700
you have like your developers or your

43
00:01:44,700 --> 00:01:47,040
security team they're happy snacks and

44
00:01:47,040 --> 00:01:48,570
so the people who have Macs in the

45
00:01:48,570 --> 00:01:49,200
environment

46
00:01:49,200 --> 00:01:51,000
besides that people who can just get

47
00:01:51,000 --> 00:01:52,770
them when they walk in they're in the

48
00:01:52,770 --> 00:01:55,049
hands of folks we packed and most of

49
00:01:55,049 --> 00:01:57,030
these right that Mac assign compromised

50
00:01:57,030 --> 00:01:59,760
not only are they naively thinking that

51
00:01:59,760 --> 00:02:02,310
max don't get malware but on top of that

52
00:02:02,310 --> 00:02:04,710
they get exactly most detection teams

53
00:02:04,710 --> 00:02:06,390
aren't really focused and not less and

54
00:02:06,390 --> 00:02:08,729
so either goes undetected or they don't

55
00:02:08,729 --> 00:02:09,840
know what to do with it

56
00:02:09,840 --> 00:02:12,750
and so it's a safe fact that as max

57
00:02:12,750 --> 00:02:14,610
takes over or more of the corporate

58
00:02:14,610 --> 00:02:17,250
space we are going to be targeted for

59
00:02:17,250 --> 00:02:20,880
or mount it right from our authors and

60
00:02:20,880 --> 00:02:24,020
attackers so that takes me to point to

61
00:02:24,020 --> 00:02:27,270
Mac malware is alive and trending upward

62
00:02:27,270 --> 00:02:29,790
this is a known fact we no longer live

63
00:02:29,790 --> 00:02:31,380
in the world where it max don't get

64
00:02:31,380 --> 00:02:33,660
viruses we have like Mac and PC guy

65
00:02:33,660 --> 00:02:35,580
they're like battling that without who

66
00:02:35,580 --> 00:02:37,290
inspires this no longer live in those

67
00:02:37,290 --> 00:02:40,890
times and so not only do you not see

68
00:02:40,890 --> 00:02:43,740
like Moore's we see more spam more ad

69
00:02:43,740 --> 00:02:45,690
giving malware as was mentioned today

70
00:02:45,690 --> 00:02:49,560
but then one thing that's kind of rising

71
00:02:49,560 --> 00:02:51,450
is that apt groups are no longer just

72
00:02:51,450 --> 00:02:53,610
focused on Windows they're also focused

73
00:02:53,610 --> 00:02:55,470
on Mac OS to you so you have stuff like

74
00:02:55,470 --> 00:02:58,050
the license booth actually creating like

75
00:02:58,050 --> 00:03:00,690
a Mac OS agent you have a bt 28 in

76
00:03:00,690 --> 00:03:02,430
creating X agent and then you have like

77
00:03:02,430 --> 00:03:05,190
the Winship group who had to win tail on

78
00:03:05,190 --> 00:03:08,600
that way so Mac OS is not now

79
00:03:08,600 --> 00:03:12,420
exclusively just for adware for doing

80
00:03:12,420 --> 00:03:15,780
that ap TV actually targeting on Mac OS

81
00:03:15,780 --> 00:03:19,290
systems and so not only do they create

82
00:03:19,290 --> 00:03:21,870
their own like agents and frameworks

83
00:03:21,870 --> 00:03:23,790
they utilize existing frameworks that

84
00:03:23,790 --> 00:03:26,070
exist out there so I think for instance

85
00:03:26,070 --> 00:03:29,700
the empire project that a lot of you

86
00:03:29,700 --> 00:03:32,220
know attack percent dislike pulled off

87
00:03:32,220 --> 00:03:34,860
github and added them to like macros and

88
00:03:34,860 --> 00:03:36,660
attachments and things of that sort on

89
00:03:36,660 --> 00:03:39,570
so pretty art could change some

90
00:03:39,570 --> 00:03:42,150
attribution on if they're going about

91
00:03:42,150 --> 00:03:43,709
destroying things like off of the

92
00:03:43,709 --> 00:03:46,470
internet like puppy or any of these like

93
00:03:46,470 --> 00:03:49,739
open-source kind of to to kids and so

94
00:03:49,739 --> 00:03:51,060
one thing that we could count on is

95
00:03:51,060 --> 00:03:53,459
seeing your Mac malware on and at a

96
00:03:53,459 --> 00:03:56,010
higher level of sophistication and so as

97
00:03:56,010 --> 00:03:58,410
Apple continues to add protections and

98
00:03:58,410 --> 00:04:01,320
Mac OS with like notarization going to

99
00:04:01,320 --> 00:04:03,810
continue to do stuff like enhancements

100
00:04:03,810 --> 00:04:06,810
to dig deeper you're going to see more

101
00:04:06,810 --> 00:04:10,170
sophistication in Mac OS malware and so

102
00:04:10,170 --> 00:04:12,209
the third thing is that defensive

103
00:04:12,209 --> 00:04:14,100
controls will eventually fail or be

104
00:04:14,100 --> 00:04:15,840
bypassed so this goes back to the

105
00:04:15,840 --> 00:04:18,298
methodology of threat hunting right so

106
00:04:18,298 --> 00:04:21,029
this on the basis of saying okay no

107
00:04:21,029 --> 00:04:22,919
matter what Apple puts in place no

108
00:04:22,919 --> 00:04:24,960
matter what a product actually gives you

109
00:04:24,960 --> 00:04:27,450
you can't rely on that to save you alone

110
00:04:27,450 --> 00:04:30,330
well you have to have some

111
00:04:30,330 --> 00:04:32,610
that adversary getting enough like time

112
00:04:32,610 --> 00:04:35,280
money energy effort which they have

113
00:04:35,280 --> 00:04:37,470
we're going to identify what you have

114
00:04:37,470 --> 00:04:39,210
one in your environment and there either

115
00:04:39,210 --> 00:04:41,879
one going to bypass it or to find some

116
00:04:41,879 --> 00:04:44,159
other mechanism to on circumvent what

117
00:04:44,159 --> 00:04:46,259
you have in place so if you want to give

118
00:04:46,259 --> 00:04:48,569
detection on macro systems we have to

119
00:04:48,569 --> 00:04:50,669
have those controls in place like e TR

120
00:04:50,669 --> 00:04:53,580
products AE right because they need to

121
00:04:53,580 --> 00:04:55,409
exist you don't want it not have those

122
00:04:55,409 --> 00:04:57,990
right but you can't just rip all of our

123
00:04:57,990 --> 00:05:00,000
eggs in that basket we have to assume

124
00:05:00,000 --> 00:05:07,080
breach so there's two ways to do threat

125
00:05:07,080 --> 00:05:09,870
hunting in general across smackle s

126
00:05:09,870 --> 00:05:12,360
environments Linux Windows right and so

127
00:05:12,360 --> 00:05:14,069
it falls on their compromised

128
00:05:14,069 --> 00:05:15,770
assessments which is typically done by

129
00:05:15,770 --> 00:05:19,020
external entities or you have kind of

130
00:05:19,020 --> 00:05:20,819
like internal points whereas more

131
00:05:20,819 --> 00:05:24,050
continuous than the other team IRT more

132
00:05:24,050 --> 00:05:26,370
security operations team they are

133
00:05:26,370 --> 00:05:28,139
continually looking for threats based on

134
00:05:28,139 --> 00:05:29,610
the data that they collect in their

135
00:05:29,610 --> 00:05:32,460
environment so both of these approaches

136
00:05:32,460 --> 00:05:34,889
I had one major requirement that most

137
00:05:34,889 --> 00:05:37,620
analysts I think don't think about and

138
00:05:37,620 --> 00:05:40,650
that's data right so think about what

139
00:05:40,650 --> 00:05:43,560
they will what Vega does my product

140
00:05:43,560 --> 00:05:45,659
provide and let's go one step higher

141
00:05:45,659 --> 00:05:47,819
than that not only located at that

142
00:05:47,819 --> 00:05:51,180
product provide or how does that product

143
00:05:51,180 --> 00:05:54,330
provide that data and so historically we

144
00:05:54,330 --> 00:05:58,289
have vendors that provide a lot of Mac

145
00:05:58,289 --> 00:06:02,969
OS Vega for hunting purposes and so all

146
00:06:02,969 --> 00:06:05,190
of these vendors provide awesome awesome

147
00:06:05,190 --> 00:06:07,830
Vega effect is like Brian for hunting in

148
00:06:07,830 --> 00:06:10,279
most most corporate environments and so

149
00:06:10,279 --> 00:06:13,500
all these solutions are more than enough

150
00:06:13,500 --> 00:06:16,560
to be what you need to do however a lot

151
00:06:16,560 --> 00:06:18,270
of these solutions might not be for

152
00:06:18,270 --> 00:06:18,810
everyone

153
00:06:18,810 --> 00:06:21,419
one because for better or worse these

154
00:06:21,419 --> 00:06:24,479
solutions are like agent base and so you

155
00:06:24,479 --> 00:06:26,580
one needs to get it deployed across your

156
00:06:26,580 --> 00:06:28,169
environment until you once you get it

157
00:06:28,169 --> 00:06:29,789
deployed across your environment you

158
00:06:29,789 --> 00:06:31,319
have to be configured the right way to

159
00:06:31,319 --> 00:06:33,779
get the data that you want and they have

160
00:06:33,779 --> 00:06:35,639
to be managed over time right you can't

161
00:06:35,639 --> 00:06:37,529
have like that say for instance like

162
00:06:37,529 --> 00:06:40,860
carbon black agent from like 2008 on you

163
00:06:40,860 --> 00:06:42,650
know any mm like night

164
00:06:42,650 --> 00:06:44,930
all right it just probably like practice

165
00:06:44,930 --> 00:06:46,370
listen if you can keep those cupcakes

166
00:06:46,370 --> 00:06:50,420
okay and so the deployment and making

167
00:06:50,420 --> 00:06:52,280
its up the agents like I said has to be

168
00:06:52,280 --> 00:06:54,350
managed by at least one member of your

169
00:06:54,350 --> 00:06:57,050
team and so for some I especially would

170
00:06:57,050 --> 00:06:58,430
cost the leaves like some of these like

171
00:06:58,430 --> 00:07:00,350
you know OS where he's like free but you

172
00:07:00,350 --> 00:07:03,020
have to manage that and someone has to

173
00:07:03,020 --> 00:07:04,670
actually understand how os query works

174
00:07:04,670 --> 00:07:07,250
or you have to have like three bucks to

175
00:07:07,250 --> 00:07:09,920
you well that a considerable amount of

176
00:07:09,920 --> 00:07:12,050
change adds an organization to purchase

177
00:07:12,050 --> 00:07:14,630
some of these with eg our products until

178
00:07:14,630 --> 00:07:17,990
in my case work your consultant you know

179
00:07:17,990 --> 00:07:20,660
conducting a breach assessment and for

180
00:07:20,660 --> 00:07:22,940
me this is at least once a year where I

181
00:07:22,940 --> 00:07:25,220
come in and I need to collect data where

182
00:07:25,220 --> 00:07:26,540
I need to be hunting

183
00:07:26,540 --> 00:07:29,660
however client is like you cannot

184
00:07:29,660 --> 00:07:31,940
install any agents on any of these boxes

185
00:07:31,940 --> 00:07:34,310
but you have to grab this video it's

186
00:07:34,310 --> 00:07:37,430
like great how would you like me to do

187
00:07:37,430 --> 00:07:42,380
that and so eternally what might happen

188
00:07:42,380 --> 00:07:45,080
is if you don't have the sacs and manage

189
00:07:45,080 --> 00:07:47,120
an agent you might be looking for an

190
00:07:47,120 --> 00:07:49,010
alternative approach right especially if

191
00:07:49,010 --> 00:07:50,870
your people have a start-up or someone

192
00:07:50,870 --> 00:07:52,430
that doesn't have like a big IT staff

193
00:07:52,430 --> 00:07:54,080
and your IT staff is like one or two

194
00:07:54,080 --> 00:07:58,070
people on so and then also the flip side

195
00:07:58,070 --> 00:07:59,240
of that is that if you're a big

196
00:07:59,240 --> 00:08:01,130
corporation or big organization and you

197
00:08:01,130 --> 00:08:03,140
have the money to at least purchase one

198
00:08:03,140 --> 00:08:05,150
of these products or E or similar ETR

199
00:08:05,150 --> 00:08:08,960
product one thing that you might have is

200
00:08:08,960 --> 00:08:11,360
this real time data such that you know

201
00:08:11,360 --> 00:08:13,190
let's say you open calculate our own

202
00:08:13,190 --> 00:08:15,650
system in a few seconds in your sense

203
00:08:15,650 --> 00:08:17,960
solution you'll be able to you know see

204
00:08:17,960 --> 00:08:20,690
that a like a Richie Richie open

205
00:08:20,690 --> 00:08:23,240
calculator on this system and at what

206
00:08:23,240 --> 00:08:26,090
time like but maybe you want alternative

207
00:08:26,090 --> 00:08:28,400
data besides that real-time data like so

208
00:08:28,400 --> 00:08:30,530
if you just have an EDI product that

209
00:08:30,530 --> 00:08:32,750
gives you real-time data how can you

210
00:08:32,750 --> 00:08:35,710
identify all launch agents on a system

211
00:08:35,710 --> 00:08:37,820
you don't have a hard time doing that

212
00:08:37,820 --> 00:08:39,320
unless all of those launch agent

213
00:08:39,320 --> 00:08:40,760
binaries actually executing on that

214
00:08:40,760 --> 00:08:43,070
system at some reasonable amount of time

215
00:08:43,070 --> 00:08:45,050
and you would lead into that right so

216
00:08:45,050 --> 00:08:47,120
you might want to hire at that point in

217
00:08:47,120 --> 00:08:50,840
time data so how do you like supplement

218
00:08:50,840 --> 00:08:52,350
this real time data with

219
00:08:52,350 --> 00:08:55,290
having an agent so this is something

220
00:08:55,290 --> 00:08:57,390
that I said I'll put you don't find a

221
00:08:57,390 --> 00:08:59,160
solution to right well it's not like I

222
00:08:59,160 --> 00:09:00,480
was in the moon like the middle of a

223
00:09:00,480 --> 00:09:02,790
compromising sentiment and I was kind of

224
00:09:02,790 --> 00:09:04,980
task to get some additional data one

225
00:09:04,980 --> 00:09:07,140
because the initial render that we

226
00:09:07,140 --> 00:09:09,210
worked with two graphs and data we gave

227
00:09:09,210 --> 00:09:11,670
them requirements and it turned out less

228
00:09:11,670 --> 00:09:13,980
than desirable and then the second time

229
00:09:13,980 --> 00:09:16,830
you actually use OS X collector traded

230
00:09:16,830 --> 00:09:18,720
by the Yale team but that's not

231
00:09:18,720 --> 00:09:20,730
necessarily the sonic of hunting at

232
00:09:20,730 --> 00:09:23,220
scale is designed for if a single host

233
00:09:23,220 --> 00:09:25,050
might be compromised when you want to

234
00:09:25,050 --> 00:09:27,030
get additional data on top of that and

235
00:09:27,030 --> 00:09:29,700
so that upper thrown OSX collector was

236
00:09:29,700 --> 00:09:31,230
like the gzip file and you have to

237
00:09:31,230 --> 00:09:32,940
extract as you gzip and then you

238
00:09:32,940 --> 00:09:34,890
actually have to get the JSON file you

239
00:09:34,890 --> 00:09:37,230
need to ingest think they're saying to

240
00:09:37,230 --> 00:09:39,260
me I'm lazy that's way too many steps

241
00:09:39,260 --> 00:09:42,540
so in order to collect a big about an

242
00:09:42,540 --> 00:09:44,220
agent I needed to learn something that

243
00:09:44,220 --> 00:09:46,410
already exists on mac OS endpoints out

244
00:09:46,410 --> 00:09:48,240
of the box if you go to Apple Store I

245
00:09:48,240 --> 00:09:50,580
wanted something that can run as soon as

246
00:09:50,580 --> 00:09:52,940
you take that wrapper off no other

247
00:09:52,940 --> 00:09:56,670
applications on your system so Python is

248
00:09:56,670 --> 00:09:59,640
perfect for that I also wanted output

249
00:09:59,640 --> 00:10:01,800
from that data to be ingested by

250
00:10:01,800 --> 00:10:04,350
basically every sense solution ever and

251
00:10:04,350 --> 00:10:08,310
so JSON is perfectly and so of that data

252
00:10:08,310 --> 00:10:10,470
I wanted the data to be able to be

253
00:10:10,470 --> 00:10:13,230
enriched by third party entities and so

254
00:10:13,230 --> 00:10:16,290
let's say that you have the hash for a

255
00:10:16,290 --> 00:10:18,180
binary associated with a long statement

256
00:10:18,180 --> 00:10:20,760
right if you just have a name that might

257
00:10:20,760 --> 00:10:22,080
not be enough for it because of I can

258
00:10:22,080 --> 00:10:23,790
similarly name to something on the Mac

259
00:10:23,790 --> 00:10:25,890
OS system already but let's say if you

260
00:10:25,890 --> 00:10:27,750
had this hash now you can take a hash

261
00:10:27,750 --> 00:10:29,520
and through fire slow to do some quick

262
00:10:29,520 --> 00:10:34,260
triage so this tool is at least about a

263
00:10:34,260 --> 00:10:36,510
month ago at b-side storm in Baltimore

264
00:10:36,510 --> 00:10:40,200
but here's my two for fix in absolution

265
00:10:40,200 --> 00:10:43,020
it's a Mac OS tool it's Python case so

266
00:10:43,020 --> 00:10:45,660
it's using Python 2 7 because that's

267
00:10:45,660 --> 00:10:47,640
what Mac ships with out of the box and

268
00:10:47,640 --> 00:10:51,030
so it's a point in time collection tool

269
00:10:51,030 --> 00:10:52,740
I want to have you out there so

270
00:10:52,740 --> 00:10:55,440
basically when you run this tool the

271
00:10:55,440 --> 00:10:58,140
data that you get back will be the data

272
00:10:58,140 --> 00:11:00,030
that's collected at that given point in

273
00:11:00,030 --> 00:11:02,730
time anything that happened before and

274
00:11:02,730 --> 00:11:05,200
anything that happened after

275
00:11:05,200 --> 00:11:07,510
it's like okay it happened right and

276
00:11:07,510 --> 00:11:09,070
that's hopefully in a corporate

277
00:11:09,070 --> 00:11:10,030
environment while you have that

278
00:11:10,030 --> 00:11:12,040
real-time data to be able to get that

279
00:11:12,040 --> 00:11:13,540
context around that point in time

280
00:11:13,540 --> 00:11:16,120
collection so you might be one that okay

281
00:11:16,120 --> 00:11:17,830
like what is this thing actually doing

282
00:11:17,830 --> 00:11:20,410
we'll get into that but we start these

283
00:11:20,410 --> 00:11:22,210
are the some of the models that

284
00:11:22,210 --> 00:11:26,140
venator actually collects and so why

285
00:11:26,140 --> 00:11:28,390
these molecules per se well I feel like

286
00:11:28,390 --> 00:11:30,250
these models would be the best chance as

287
00:11:30,250 --> 00:11:32,170
an analyst to find malicious activity

288
00:11:32,170 --> 00:11:35,140
based on current Mac malware today and

289
00:11:35,140 --> 00:11:38,320
so all the Mac malygos talked about

290
00:11:38,320 --> 00:11:38,830
today

291
00:11:38,830 --> 00:11:41,590
they probably leverage one of these

292
00:11:41,590 --> 00:11:43,960
types of techniques almost guaranteed

293
00:11:43,960 --> 00:11:46,600
like I know the percentages on this but

294
00:11:46,600 --> 00:11:47,140
I mean

295
00:11:47,140 --> 00:11:50,380
Plus's know probably like 80 to 85

296
00:11:50,380 --> 00:11:52,570
percent of max our launch agent launch

297
00:11:52,570 --> 00:11:54,130
statement all right pack it up go home

298
00:11:54,130 --> 00:11:58,360
let's get clear right so like I said

299
00:11:58,360 --> 00:11:59,740
when you're doing point in time

300
00:11:59,740 --> 00:12:02,350
collection you have to focus on

301
00:12:02,350 --> 00:12:05,440
artifacts that are representative of

302
00:12:05,440 --> 00:12:08,140
course distance right because if you try

303
00:12:08,140 --> 00:12:11,410
to do real-time collection when in point

304
00:12:11,410 --> 00:12:12,640
in time you're going to miss a bunch of

305
00:12:12,640 --> 00:12:14,410
stuff so the assumption that we're

306
00:12:14,410 --> 00:12:15,850
making here what we do points on

307
00:12:15,850 --> 00:12:19,330
collection is that the attacker or some

308
00:12:19,330 --> 00:12:20,920
adversary has already achieved

309
00:12:20,920 --> 00:12:23,830
persistence on the system and so we're

310
00:12:23,830 --> 00:12:25,840
using this to the attempt to detect time

311
00:12:25,840 --> 00:12:29,050
and so when credit towards run is just a

312
00:12:29,050 --> 00:12:31,330
Python file when it's running all these

313
00:12:31,330 --> 00:12:33,850
modules are executed and then it results

314
00:12:33,850 --> 00:12:35,680
in a single file that looks like this

315
00:12:35,680 --> 00:12:37,960
and so you have this one single JSON

316
00:12:37,960 --> 00:12:39,550
file and now the trait that could be

317
00:12:39,550 --> 00:12:41,380
with this JSON file they directly ship

318
00:12:41,380 --> 00:12:43,960
it into a some solution to do additional

319
00:12:43,960 --> 00:12:46,660
analysis so already walk you through

320
00:12:46,660 --> 00:12:48,280
what this looks like from soup to nuts

321
00:12:48,280 --> 00:12:51,910
and so I'm leveraging a tool written by

322
00:12:51,910 --> 00:12:55,030
my colleague Roberto Rodriguez Paul hope

323
00:12:55,030 --> 00:12:57,280
so is the hunting out and so zakopane

324
00:12:57,280 --> 00:12:59,680
stack with a bunch of other referencing

325
00:12:59,680 --> 00:13:02,250
elements to it that you can use and so

326
00:13:02,250 --> 00:13:04,990
to give you background on this as we go

327
00:13:04,990 --> 00:13:08,200
through this right now I have five wheat

328
00:13:08,200 --> 00:13:09,100
right

329
00:13:09,100 --> 00:13:10,930
and Bobby is actually going to be the

330
00:13:10,930 --> 00:13:12,400
figure as you see Anna trickeration

331
00:13:12,400 --> 00:13:14,560
pretty soon Bobby is going to be

332
00:13:14,560 --> 00:13:17,350
configured to say okay anything and

333
00:13:17,350 --> 00:13:21,070
very directly that is a dot JSON file

334
00:13:21,070 --> 00:13:25,260
take that JSON file and ship it to my

335
00:13:25,260 --> 00:13:27,730
elasticsearch and eventually Cubana

336
00:13:27,730 --> 00:13:30,310
instance so as you can see here in the

337
00:13:30,310 --> 00:13:33,100
configuration we have basically anything

338
00:13:33,100 --> 00:13:36,340
that's intent that's a JSON file is

339
00:13:36,340 --> 00:13:39,520
going to be shipped off for analysis so

340
00:13:39,520 --> 00:13:42,700
here we're going to run Venator for the

341
00:13:42,700 --> 00:13:46,570
first time and you realize that we have

342
00:13:46,570 --> 00:13:48,310
to be in order to run this this is only

343
00:13:48,310 --> 00:13:51,100
because some artifacts that are being

344
00:13:51,100 --> 00:13:53,230
parsed has to be you have to do to be

345
00:13:53,230 --> 00:13:56,710
able to parse those artifacts so here I

346
00:13:56,710 --> 00:13:59,440
didn't hook for this until we see that

347
00:13:59,440 --> 00:14:01,720
you can specify them directly what you

348
00:14:01,720 --> 00:14:04,090
want to cook me here and so because we

349
00:14:04,090 --> 00:14:05,800
already know this is being mapped to the

350
00:14:05,800 --> 00:14:07,180
temporary directory and we're going to

351
00:14:07,180 --> 00:14:09,790
get output JSON file we're going to do

352
00:14:09,790 --> 00:14:12,490
the temporary of the directory account

353
00:14:12,490 --> 00:14:14,440
so better towards want to run through

354
00:14:14,440 --> 00:14:16,270
it's going to tell you all the things as

355
00:14:16,270 --> 00:14:18,160
it's collecting at our given point in

356
00:14:18,160 --> 00:14:22,900
time and so it's pretty quick based on

357
00:14:22,900 --> 00:14:25,180
how much you have on your system and I

358
00:14:25,180 --> 00:14:27,580
leave you at the end basically how long

359
00:14:27,580 --> 00:14:29,800
it took and how many records and then

360
00:14:29,800 --> 00:14:32,230
also tell you the location of where that

361
00:14:32,230 --> 00:14:34,750
JSON file is that's the case you weren't

362
00:14:34,750 --> 00:14:36,820
the one responsible for actually getting

363
00:14:36,820 --> 00:14:40,420
this up and running also what we'll see

364
00:14:40,420 --> 00:14:43,120
now is that this JSON file has written

365
00:14:43,120 --> 00:14:45,340
some temp directory and it's already

366
00:14:45,340 --> 00:14:47,740
being written to the bonnet is going to

367
00:14:47,740 --> 00:14:49,840
clued that pipeline that data pipeline

368
00:14:49,840 --> 00:14:52,330
and so here we see that we get a lot of

369
00:14:52,330 --> 00:14:55,210
data back video all those records back

370
00:14:55,210 --> 00:14:59,530
corresponding to the modules and so one

371
00:14:59,530 --> 00:15:00,690
of the ways that

372
00:15:00,690 --> 00:15:05,050
adversaries like to basically the key

373
00:15:05,050 --> 00:15:08,020
logon type activity on Mac OS systems is

374
00:15:08,020 --> 00:15:10,810
to register and then tap right and so

375
00:15:10,810 --> 00:15:13,000
one of the models in here to actually

376
00:15:13,000 --> 00:15:17,160
protect event acts all in your system so

377
00:15:17,160 --> 00:15:20,500
we built a module here click on event

378
00:15:20,500 --> 00:15:24,730
tax and with that we see that we have

379
00:15:24,730 --> 00:15:28,570
seven event app events correspond to

380
00:15:28,570 --> 00:15:30,100
this single host that we just collect

381
00:15:30,100 --> 00:15:31,560
the data

382
00:15:31,560 --> 00:15:34,990
now that this we're going to do what we

383
00:15:34,990 --> 00:15:37,000
call longtail analysis such that you

384
00:15:37,000 --> 00:15:39,010
want to see all the unique event tax

385
00:15:39,010 --> 00:15:41,139
without their environment so they're

386
00:15:41,139 --> 00:15:42,639
going to get a unique count of every

387
00:15:42,639 --> 00:15:46,779
event out so if you have some in here

388
00:15:46,779 --> 00:15:48,160
you'll soon see that we will have some

389
00:15:48,160 --> 00:15:52,420
duplicates so all these fields are

390
00:15:52,420 --> 00:15:54,790
associated click event Astor so we can

391
00:15:54,790 --> 00:15:57,490
get there tapping process name so this

392
00:15:57,490 --> 00:16:00,459
is the process name on the thing that's

393
00:16:00,459 --> 00:16:02,199
actually doing the tapping all right -

394
00:16:02,199 --> 00:16:04,029
this would be this malicious the

395
00:16:04,029 --> 00:16:05,829
malicious process associated with this

396
00:16:05,829 --> 00:16:08,949
tapping event so here you see when you

397
00:16:08,949 --> 00:16:10,720
have something called blueblood only

398
00:16:10,720 --> 00:16:12,970
thing else is in system or user s been

399
00:16:12,970 --> 00:16:15,279
so suspicious what we don't know about

400
00:16:15,279 --> 00:16:18,760
it yet and so here what we're going to

401
00:16:18,760 --> 00:16:20,829
do is actually look at the tax process

402
00:16:20,829 --> 00:16:24,970
ID so what process is what's the idea of

403
00:16:24,970 --> 00:16:26,529
the process that is going to actually

404
00:16:26,529 --> 00:16:29,500
tap and so here you see a result of 0

405
00:16:29,500 --> 00:16:33,100
all these this is actually understanding

406
00:16:33,100 --> 00:16:34,449
you're going back to understanding your

407
00:16:34,449 --> 00:16:36,459
data this zero doesn't actually

408
00:16:36,459 --> 00:16:38,860
represent a single process the zero

409
00:16:38,860 --> 00:16:41,199
actually represents that all processes

410
00:16:41,199 --> 00:16:43,480
on the system are being tapped at the

411
00:16:43,480 --> 00:16:45,550
smart point in time so we see here that

412
00:16:45,550 --> 00:16:48,040
hey like this blueblood thing is

413
00:16:48,040 --> 00:16:50,769
actually tackling all the processes

414
00:16:50,769 --> 00:16:53,709
across my mac OS system so that's

415
00:16:53,709 --> 00:16:56,050
something as an instant responder as a

416
00:16:56,050 --> 00:16:58,440
great hunter we watching dig into people

417
00:16:58,440 --> 00:17:02,560
so that's a event type module now this

418
00:17:02,560 --> 00:17:04,329
is going to go into like a day in a life

419
00:17:04,329 --> 00:17:05,890
of penance or like how I would actually

420
00:17:05,890 --> 00:17:08,109
use it on a compromise that's right and

421
00:17:08,109 --> 00:17:09,579
these examples are in streaming from

422
00:17:09,579 --> 00:17:12,579
Drive but once you get the data through

423
00:17:12,579 --> 00:17:14,020
dinosaur you can actually build some

424
00:17:14,020 --> 00:17:18,369
interesting relationships on it alright

425
00:17:18,369 --> 00:17:20,349
so we've done our collection they're

426
00:17:20,349 --> 00:17:22,569
ready from a couple of hosts we have

427
00:17:22,569 --> 00:17:25,089
seven hundred or one events so the first

428
00:17:25,089 --> 00:17:26,230
thing that we're going to look for our

429
00:17:26,230 --> 00:17:28,270
large launch events because that should

430
00:17:28,270 --> 00:17:31,360
be an easy one and so what the mods will

431
00:17:31,360 --> 00:17:33,280
launch agent you see the type of data

432
00:17:33,280 --> 00:17:35,950
that we pull back you can pull back ring

433
00:17:35,950 --> 00:17:38,740
like a host name the hash the executable

434
00:17:38,740 --> 00:17:41,200
associated with the launch agent the raw

435
00:17:41,200 --> 00:17:42,530
data

436
00:17:42,530 --> 00:17:46,420
the program associated with it and so

437
00:17:46,420 --> 00:17:48,470
understanding the data and knowing the

438
00:17:48,470 --> 00:17:51,140
types of foods that we have here we do

439
00:17:51,140 --> 00:17:53,750
again long tail analysis via Cabana to

440
00:17:53,750 --> 00:17:56,030
extract that from the data and do you

441
00:17:56,030 --> 00:18:01,310
our hunt and so here we have 24 events

442
00:18:01,310 --> 00:18:05,630
for larger games like in the school what

443
00:18:05,630 --> 00:18:06,800
we're actually going to do is look at

444
00:18:06,800 --> 00:18:09,260
all the unique labels associated with

445
00:18:09,260 --> 00:18:12,140
the launch agents on our system and so

446
00:18:12,140 --> 00:18:15,290
here we launch agent labels start with

447
00:18:15,290 --> 00:18:16,940
like calm about something on that Apple

448
00:18:16,940 --> 00:18:19,700
combat whatever the product is here we

449
00:18:19,700 --> 00:18:21,080
have what this new year

450
00:18:21,080 --> 00:18:23,630
managers thing looks kind of weird so

451
00:18:23,630 --> 00:18:26,810
let's get some additional information so

452
00:18:26,810 --> 00:18:28,070
another thing that you can add on top of

453
00:18:28,070 --> 00:18:30,620
that is basically what is what you run

454
00:18:30,620 --> 00:18:32,810
whenever this is called whatever the

455
00:18:32,810 --> 00:18:35,270
launch agent actually is going to launch

456
00:18:35,270 --> 00:18:38,990
right and so here we see that Java is

457
00:18:38,990 --> 00:18:41,930
actually kicking off a jar file as

458
00:18:41,930 --> 00:18:44,840
opposed to do something else so just

459
00:18:44,840 --> 00:18:46,880
doing a search on media managers we can

460
00:18:46,880 --> 00:18:49,010
see that hey like injective sleep says

461
00:18:49,010 --> 00:18:51,050
this is now where I trust factor it's

462
00:18:51,050 --> 00:18:52,070
probably something I want to think of

463
00:18:52,070 --> 00:18:59,300
people look at so now we're going to go

464
00:18:59,300 --> 00:19:03,050
into login items and so with the module

465
00:19:03,050 --> 00:19:05,840
login items you then take a look to see

466
00:19:05,840 --> 00:19:08,270
what fields that we have available to us

467
00:19:08,270 --> 00:19:10,640
that works and in the github I have all

468
00:19:10,640 --> 00:19:12,080
the fields kind of parse that what you

469
00:19:12,080 --> 00:19:15,950
actually get each thing and so here we

470
00:19:15,950 --> 00:19:17,720
see that we have signature information

471
00:19:17,720 --> 00:19:19,760
we have the application the application

472
00:19:19,760 --> 00:19:21,980
hash so let's go through that same

473
00:19:21,980 --> 00:19:23,840
exercise using launch

474
00:19:23,840 --> 00:19:30,200
I mean login items so here you'll see

475
00:19:30,200 --> 00:19:33,020
that we'll pull back some interesting

476
00:19:33,020 --> 00:19:38,500
logging items so we have the application

477
00:19:38,500 --> 00:19:43,040
give us hundred events and so here we

478
00:19:43,040 --> 00:19:44,780
see that we have a few claims that are

479
00:19:44,780 --> 00:19:47,090
look like applications and then you have

480
00:19:47,090 --> 00:19:51,440
this final presentations that app why

481
00:19:51,440 --> 00:19:53,720
wouldn't act we call final presentation

482
00:19:53,720 --> 00:19:55,149
and why's it not an apple

483
00:19:55,149 --> 00:19:57,159
in solar and it's a long night and that

484
00:19:57,159 --> 00:19:59,499
looks weird so let's actually grab the

485
00:19:59,499 --> 00:20:06,460
hash associated with this long ladder so

486
00:20:06,460 --> 00:20:08,049
we have a hash and now we could take

487
00:20:08,049 --> 00:20:09,999
this action say a virus load what do you

488
00:20:09,999 --> 00:20:12,039
think about this application final

489
00:20:12,039 --> 00:20:16,839
presentation so bill revives little that

490
00:20:16,839 --> 00:20:21,190
action and see that tell me something

491
00:20:21,190 --> 00:20:22,629
that we want to get the system to kind

492
00:20:22,629 --> 00:20:24,249
of do a hunt across there that applies

493
00:20:24,249 --> 00:20:26,049
to see okay how many of these things

494
00:20:26,049 --> 00:20:27,940
actually exists outside of this one

495
00:20:27,940 --> 00:20:32,049
system that is a infective and so the

496
00:20:32,049 --> 00:20:33,729
last thing that hasn't been talked about

497
00:20:33,729 --> 00:20:36,519
as much from the Mac OS side but

498
00:20:36,519 --> 00:20:39,219
actually browsers and things more

499
00:20:39,219 --> 00:20:41,739
specifically browser extensions so

500
00:20:41,739 --> 00:20:44,589
specifically in chrome I have models for

501
00:20:44,589 --> 00:20:47,710
Chrome Firefox and Safari so that you

502
00:20:47,710 --> 00:20:48,969
can pull back the extensions and

503
00:20:48,969 --> 00:20:50,979
identify malicious extensions so we're

504
00:20:50,979 --> 00:20:52,749
going to do that same exercise for

505
00:20:52,749 --> 00:20:56,469
Chrome extensions and so here you see

506
00:20:56,469 --> 00:20:59,049
that we have extension name extension

507
00:20:59,049 --> 00:21:03,639
update URL the Hostetter looks on it so

508
00:21:03,639 --> 00:21:05,080
they're going to do the same exercise

509
00:21:05,080 --> 00:21:14,889
for the Chrome extensions all right so

510
00:21:14,889 --> 00:21:16,239
one of the things that you want to pull

511
00:21:16,239 --> 00:21:23,919
back is the actual extension name all

512
00:21:23,919 --> 00:21:25,599
right so we pulled back all of extension

513
00:21:25,599 --> 00:21:27,759
names nothing looks too weird it's like

514
00:21:27,759 --> 00:21:31,389
YouTube downloader if the beat here we

515
00:21:31,389 --> 00:21:34,479
flash control we'll take a deeper dr.

516
00:21:34,479 --> 00:21:38,469
kind of doing with these down let's dig

517
00:21:38,469 --> 00:21:39,700
a little deeper and actually look at the

518
00:21:39,700 --> 00:21:43,649
update URL so the update URL actually

519
00:21:43,649 --> 00:21:48,070
associated with a chrome a short

520
00:21:48,070 --> 00:21:50,499
extension lysate if this extension was

521
00:21:50,499 --> 00:21:52,749
in actual chrome app store you'll see

522
00:21:52,749 --> 00:21:58,059
this like Google URL anything outside of

523
00:21:58,059 --> 00:22:01,839
that App Store is actually not from the

524
00:22:01,839 --> 00:22:04,839
plain axillary so we see that we have a

525
00:22:04,839 --> 00:22:08,269
pretty interesting update URL for

526
00:22:08,269 --> 00:22:09,649
YouTube downloader and what this

527
00:22:09,649 --> 00:22:11,899
actually represents is that anytime that

528
00:22:11,899 --> 00:22:13,909
this extension is swimming updated it's

529
00:22:13,909 --> 00:22:15,919
going to call out to this URL and

530
00:22:15,919 --> 00:22:18,799
Priestly pull down anything that it

531
00:22:18,799 --> 00:22:20,690
wants to and so the developer an

532
00:22:20,690 --> 00:22:22,279
important client can change this update

533
00:22:22,279 --> 00:22:24,469
URL it's an increment absolute it's not

534
00:22:24,469 --> 00:22:25,999
detected from that you'll see this frame

535
00:22:25,999 --> 00:22:28,969
update URL the update for the extension

536
00:22:28,969 --> 00:22:30,649
is going to go through the Chrome App

537
00:22:30,649 --> 00:22:33,320
Store as as opposed to this random Joe

538
00:22:33,320 --> 00:22:36,109
Blow this is totally not malware or

539
00:22:36,109 --> 00:22:38,479
totally not a YouTube downloader that X

540
00:22:38,479 --> 00:22:41,239
amount of time so that's a little bit

541
00:22:41,239 --> 00:22:43,450
about how I would use venator day-to-day

542
00:22:43,450 --> 00:22:46,789
so future updates one of the things that

543
00:22:46,789 --> 00:22:48,649
I wanted to add to this is actually has

544
00:22:48,649 --> 00:22:51,529
support for sending JSON files to an

545
00:22:51,529 --> 00:22:54,289
estimate bucket such that today when you

546
00:22:54,289 --> 00:22:56,119
execute credit or what happens is that

547
00:22:56,119 --> 00:22:58,579
when it's or jaques this JSON file to

548
00:22:58,579 --> 00:23:00,469
disk and then you have to have some kind

549
00:23:00,469 --> 00:23:02,629
of log and gesture actually monitoring

550
00:23:02,629 --> 00:23:04,309
for that and sending their keeper mana

551
00:23:04,309 --> 00:23:06,349
or Splunk or some of that that's sort of

552
00:23:06,349 --> 00:23:08,959
me as a consultant doing huge

553
00:23:08,959 --> 00:23:11,119
assessments it'd be ideal for me to

554
00:23:11,119 --> 00:23:12,889
actually drop that the disk and then

555
00:23:12,889 --> 00:23:14,749
actually ship that off to an s3 bucket

556
00:23:14,749 --> 00:23:16,789
like I shuffled off to an s3 bucket

557
00:23:16,789 --> 00:23:19,219
confirm that and actually remove that

558
00:23:19,219 --> 00:23:22,579
JSON file from the system right and so

559
00:23:22,579 --> 00:23:23,959
it's fun excellent bucket I could then

560
00:23:23,959 --> 00:23:26,059
send it to the same solution on my end

561
00:23:26,059 --> 00:23:28,159
and also additional modules like

562
00:23:28,159 --> 00:23:29,899
downloaded files which would be

563
00:23:29,899 --> 00:23:34,309
interesting contents of like back RC 5

564
00:23:34,309 --> 00:23:37,369
and 10 basically anything that you want

565
00:23:37,369 --> 00:23:38,450
in there if there's something that I

566
00:23:38,450 --> 00:23:40,639
missed you could just do a pull request

567
00:23:40,639 --> 00:23:43,999
on get help and I'll gladly add it in

568
00:23:43,999 --> 00:23:49,099
there and so that's it for me you could

569
00:23:49,099 --> 00:23:52,639
find me on twitter at our our cyrus and

570
00:23:52,639 --> 00:23:55,940
quickly i'll show you where when it's

571
00:23:55,940 --> 00:24:04,869
for is located on github I mean

572
00:24:07,130 --> 00:24:10,130
yeah

573
00:24:13,430 --> 00:24:16,499
[Music]

574
00:24:19,429 --> 00:24:22,279
so if we literally go and get in google

575
00:24:22,279 --> 00:24:28,369
and type minutes for they have it's the

576
00:24:28,369 --> 00:24:31,969
first one that pops up Bennett or is

577
00:24:31,969 --> 00:24:34,039
Latin for hunter I can't come up with a

578
00:24:34,039 --> 00:24:34,669
cool name

579
00:24:34,669 --> 00:24:38,149
so that's it and here you get some

580
00:24:38,149 --> 00:24:39,919
additional details about the dinosaur

581
00:24:39,919 --> 00:24:43,669
the corresponding blog post as to why I

582
00:24:43,669 --> 00:24:45,499
went this route and some of the defects

583
00:24:45,499 --> 00:24:48,080
of considerations around back door and

584
00:24:48,080 --> 00:24:50,059
then some instructions I don't like how

585
00:24:50,059 --> 00:24:52,339
to run it and the type of data that you

586
00:24:52,339 --> 00:24:55,669
get back so here I actually go through

587
00:24:55,669 --> 00:24:57,649
and name out all those fields that you

588
00:24:57,649 --> 00:25:00,109
get when those modules are run such that

589
00:25:00,109 --> 00:25:01,729
if you wanted to build those queries of

590
00:25:01,729 --> 00:25:03,529
your at least have the beginnings of a

591
00:25:03,529 --> 00:25:05,509
data model to start to map this data

592
00:25:05,509 --> 00:25:11,359
back to for protection purposes so what

593
00:25:11,359 --> 00:25:14,179
I mentioned just a single point for back

594
00:25:14,179 --> 00:25:17,029
py to run that and you're you're good to

595
00:25:17,029 --> 00:25:17,210
go

596
00:25:17,210 --> 00:25:19,729
so this point I'm gonna take some

597
00:25:19,729 --> 00:25:22,610
questions in nothing thank you free time

598
00:25:22,610 --> 00:25:25,810
[Music]

599
00:25:36,219 --> 00:25:39,349
if they should be so they still got here

600
00:25:39,349 --> 00:25:41,779
so you saw that's a dome on Elections

601
00:25:41,779 --> 00:25:45,200
one what you found the need to see parts

602
00:25:45,200 --> 00:25:46,580
and things you want to virus that all

603
00:25:46,580 --> 00:25:49,609
the other one was one do I think this is

604
00:25:49,609 --> 00:25:54,169
interesting I think so have you automate

605
00:25:54,169 --> 00:25:56,359
the please because you could surround

606
00:25:56,359 --> 00:26:00,559
all classes to like total or you could

607
00:26:00,559 --> 00:26:04,849
actually automatically find these not

608
00:26:04,849 --> 00:26:08,599
Google so it automatically stuff so it's

609
00:26:08,599 --> 00:26:10,580
not in the tool itself one of the things

610
00:26:10,580 --> 00:26:13,969
worth rendering that like I believe in a

611
00:26:13,969 --> 00:26:16,339
most destructive collusion is that you

612
00:26:16,339 --> 00:26:18,649
want the raw data and then once you get

613
00:26:18,649 --> 00:26:20,539
the raw data kind of deep enrichments on

614
00:26:20,539 --> 00:26:23,269
your end stuff like virustotal additions

615
00:26:23,269 --> 00:26:24,830
to it like enhancements that probably be

616
00:26:24,830 --> 00:26:26,869
something that do unlike the back end

617
00:26:26,869 --> 00:26:28,429
but that requires like a specific like

618
00:26:28,429 --> 00:26:30,649
Flyers total account that you'll be able

619
00:26:30,649 --> 00:26:32,240
to query a lot of those hash

620
00:26:32,240 --> 00:26:34,400
in quick fashion I supposed to be poor

621
00:26:34,400 --> 00:26:36,380
like that I think it's only like poor so

622
00:26:36,380 --> 00:26:37,760
requesting like a minute or something

623
00:26:37,760 --> 00:26:39,830
like that so exhale

624
00:26:39,830 --> 00:26:41,210
you probably want something more robust

625
00:26:41,210 --> 00:26:45,260
so it's like a I could build it in here

626
00:26:45,260 --> 00:26:47,570
but it would then take away from the

627
00:26:47,570 --> 00:26:49,250
direct hunting aspect of it it would be

628
00:26:49,250 --> 00:26:50,960
kind of almost like automated analysis

629
00:26:50,960 --> 00:27:01,070
so really dishes like you and it would

630
00:27:01,070 --> 00:27:04,970
be a real estate agent and I addictive C

631
00:27:04,970 --> 00:27:06,800
or for the live fish hold of your

632
00:27:06,800 --> 00:27:09,800
heavenly and sort of hey wonder if you

633
00:27:09,800 --> 00:27:12,470
leave I just happen to use like just

634
00:27:12,470 --> 00:27:14,720
basic you know put eyes on the floor any

635
00:27:14,720 --> 00:27:16,250
more times I could come up against

636
00:27:16,250 --> 00:27:18,560
things and we wanted to do something I'm

637
00:27:18,560 --> 00:27:20,780
not able to because you can't import

638
00:27:20,780 --> 00:27:24,110
rich General Motors oh yeah yeah like it

639
00:27:24,110 --> 00:27:26,360
the reason so there's an extra been one

640
00:27:26,360 --> 00:27:27,980
of the things this project so one of the

641
00:27:27,980 --> 00:27:30,290
things that I wanted to like was a hard

642
00:27:30,290 --> 00:27:32,900
thing for me was to actually not have

643
00:27:32,900 --> 00:27:37,250
any anything that you have any external

644
00:27:37,250 --> 00:27:39,350
dependencies right and so everything had

645
00:27:39,350 --> 00:27:41,870
to be either native Python or Mac a less

646
00:27:41,870 --> 00:27:43,730
specific Python you can try to do like

647
00:27:43,730 --> 00:27:46,070
Python 3 or down a little tyke on the

648
00:27:46,070 --> 00:27:47,750
internet it won't be the same as the Mac

649
00:27:47,750 --> 00:27:49,610
OS Python that right because it has

650
00:27:49,610 --> 00:27:51,410
additional something there and so if

651
00:27:51,410 --> 00:27:54,440
some of these like like functions API

652
00:27:54,440 --> 00:27:56,150
calls Everett like use with app I

653
00:27:56,150 --> 00:27:58,820
accepted my objective-c bridge is

654
00:27:58,820 --> 00:28:01,790
extremely difficult for me because one

655
00:28:01,790 --> 00:28:03,800
it's not documented and two for the

656
00:28:03,800 --> 00:28:05,540
Python and some of those Objective C

657
00:28:05,540 --> 00:28:08,960
apart Objective C kind of mechanisms

658
00:28:08,960 --> 00:28:11,360
mechanisms aren't documented at all so

659
00:28:11,360 --> 00:28:13,360
it's literally like trial and error from

660
00:28:13,360 --> 00:28:16,100
December of like last year all the way

661
00:28:16,100 --> 00:28:18,800
through I would say from March of this

662
00:28:18,800 --> 00:28:21,560
year so it'll look like logging items

663
00:28:21,560 --> 00:28:24,590
specifically Patrick had a blog post

664
00:28:24,590 --> 00:28:27,230
about how to parse logging items because

665
00:28:27,230 --> 00:28:30,290
the format changed and so if it wasn't

666
00:28:30,290 --> 00:28:32,240
for that I don't know if I would have

667
00:28:32,240 --> 00:28:33,500
gotten close

668
00:28:33,500 --> 00:28:36,860
Sarah Edwards is going to protect uh not

669
00:28:36,860 --> 00:28:38,870
an expert right after she actually had

670
00:28:38,870 --> 00:28:41,180
some coach that actually does some of

671
00:28:41,180 --> 00:28:43,760
that but it was in a more pythonic way

672
00:28:43,760 --> 00:28:45,700
and so I originally started with that

673
00:28:45,700 --> 00:28:47,530
and my coworkers are like there are so

674
00:28:47,530 --> 00:28:50,170
many command executions coming from this

675
00:28:50,170 --> 00:28:52,150
Python file you may need to put it down

676
00:28:52,150 --> 00:28:53,770
and so that's why I kind of revisit it

677
00:28:53,770 --> 00:28:55,300
and start to make things a little a

678
00:28:55,300 --> 00:29:03,790
little bit less noisy exam yeah I'm sure

679
00:29:03,790 --> 00:29:05,740
you had a look at and this is for a

680
00:29:05,740 --> 00:29:08,110
really large it's awful ever decide to

681
00:29:08,110 --> 00:29:13,000
update - 2 3 4 whatever wrong before of

682
00:29:13,000 --> 00:29:15,730
you know how does that impact the - or

683
00:29:15,730 --> 00:29:18,820
the justification for that so they'd

684
00:29:18,820 --> 00:29:21,670
probably be coordinate this week in the

685
00:29:21,670 --> 00:29:23,980
objective-c in that digital security

686
00:29:23,980 --> 00:29:26,110
training I realized that I should

687
00:29:26,110 --> 00:29:28,210
probably learn Swift so the next

688
00:29:28,210 --> 00:29:29,800
iteration of got a soda pop game to it

689
00:29:29,800 --> 00:29:32,200
because it might be easier on me and

690
00:29:32,200 --> 00:29:36,280
causing less heartache so yeah so

691
00:29:36,280 --> 00:29:37,930
everything you use there was in the

692
00:29:37,930 --> 00:29:40,000
cabinet so it is the final output of

693
00:29:40,000 --> 00:29:41,860
everything in JSON the final output

694
00:29:41,860 --> 00:29:44,440
isn't just a JSON file so you get like

695
00:29:44,440 --> 00:29:46,570
oh yeah you can think that JSON file and

696
00:29:46,570 --> 00:29:49,540
put it in sin solution choice yeah but

697
00:29:49,540 --> 00:29:52,660
most the time I don't have I have

698
00:29:52,660 --> 00:29:55,240
restrictions on what sin I'm able to

699
00:29:55,240 --> 00:29:56,860
work with especially with a client and

700
00:29:56,860 --> 00:29:58,840
so that could be slung second ether

701
00:29:58,840 --> 00:30:00,910
bonnet that could be great law it could

702
00:30:00,910 --> 00:30:01,450
be anything

703
00:30:01,450 --> 00:30:04,270
so then is your computer name really

704
00:30:04,270 --> 00:30:07,980
rich in cookies no now I did that yep

705
00:30:07,980 --> 00:30:10,210
yeah it was actually cash flow because

706
00:30:10,210 --> 00:30:12,010
struck the rocks is like thanks with

707
00:30:12,010 --> 00:30:16,930
those operations and so yeah everybody

708
00:30:16,930 --> 00:30:19,660
good way to emulate Safari extensions is

709
00:30:19,660 --> 00:30:22,000
Apple puts them in the keychain special

710
00:30:22,000 --> 00:30:26,260
access yeah and so I the Safari

711
00:30:26,260 --> 00:30:29,260
extensions module it's a little like

712
00:30:29,260 --> 00:30:32,110
wonky and so we take it to get some of

713
00:30:32,110 --> 00:30:34,060
the Safari extensions like I just added

714
00:30:34,060 --> 00:30:36,040
a bunch and it got a good portion of it

715
00:30:36,040 --> 00:30:37,630
but there's like one or two that he

716
00:30:37,630 --> 00:30:39,730
didn't account for it all because what's

717
00:30:39,730 --> 00:30:41,830
the reasons I have no clue and so when

718
00:30:41,830 --> 00:30:43,480
they started to do some of the changes

719
00:30:43,480 --> 00:30:45,760
for Safari extensions slowly but surely

720
00:30:45,760 --> 00:30:48,370
like those extensions were like not

721
00:30:48,370 --> 00:30:51,250
visible and then it's or anymore so all

722
00:30:51,250 --> 00:30:52,870
you have to go back and revisit those

723
00:30:52,870 --> 00:30:56,250
but yeah that's it that's a great point

724
00:30:59,110 --> 00:31:05,559
any other questions thanks for the

725
00:31:05,559 --> 00:31:06,190
presentation

726
00:31:06,190 --> 00:31:08,470
Nicholas do we have three small

727
00:31:08,470 --> 00:31:11,710
questions the first one is if you were

728
00:31:11,710 --> 00:31:21,340
to so pretty much covers a bunch of

729
00:31:21,340 --> 00:31:24,669
stuff that OS query actually covers as

730
00:31:24,669 --> 00:31:24,880
well

731
00:31:24,880 --> 00:31:27,460
well because Oh a story in itself is a

732
00:31:27,460 --> 00:31:29,500
point in time tool and so it's able to

733
00:31:29,500 --> 00:31:31,059
extract out a lot of interesting

734
00:31:31,059 --> 00:31:32,769
artifacts and so the overlap between

735
00:31:32,769 --> 00:31:35,200
bennett's wards data and OS query data

736
00:31:35,200 --> 00:31:38,649
is very very similar the difference

737
00:31:38,649 --> 00:31:40,419
between them is that OS burry has to be

738
00:31:40,419 --> 00:31:42,760
managed by a person and this tool is

739
00:31:42,760 --> 00:31:44,649
just one thing that you could run using

740
00:31:44,649 --> 00:31:46,389
like maybe like Jam across their

741
00:31:46,389 --> 00:31:47,679
environment tell it to execute or

742
00:31:47,679 --> 00:31:49,360
something ansible and you're good to go

743
00:31:49,360 --> 00:31:52,029
you know necessarily need to manage that

744
00:31:52,029 --> 00:31:54,549
so where it covers it overlap is like

745
00:31:54,549 --> 00:32:15,639
almost in some of the modules especially

746
00:32:15,639 --> 00:32:17,380
the launch agent modules the

747
00:32:17,380 --> 00:32:21,010
applications will tell you if the binary

748
00:32:21,010 --> 00:32:23,679
is signed one I'll tell you if that

749
00:32:23,679 --> 00:32:26,679
binary is Apple signed or not also if

750
00:32:26,679 --> 00:32:28,870
it's Apple sign if it's signed at all

751
00:32:28,870 --> 00:32:31,720
and if it is time who was who was that

752
00:32:31,720 --> 00:32:33,279
actually like registered to what

753
00:32:33,279 --> 00:32:34,809
developer or where did it come from

754
00:32:34,809 --> 00:32:36,309
and so I have that information in there

755
00:32:36,309 --> 00:32:39,519
oh yeah definitely it could ever be more

756
00:32:39,519 --> 00:32:50,919
robust Linux oh yeah so actually one of

757
00:32:50,919 --> 00:32:52,059
my colleagues inspect the rocks is

758
00:32:52,059 --> 00:32:54,250
actually work working on a Linux version

759
00:32:54,250 --> 00:32:56,740
and so yeah that would be probably like

760
00:32:56,740 --> 00:32:58,690
by the end of this year we'll have a

761
00:32:58,690 --> 00:33:03,299
Linux urgent show never much thank you

