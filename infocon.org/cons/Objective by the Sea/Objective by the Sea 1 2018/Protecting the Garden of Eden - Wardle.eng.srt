1
00:00:00,000 --> 00:00:03,500
all right welcome to the last talk of

2
00:00:03,500 --> 00:00:05,370
objective by the sea they say they

3
00:00:05,370 --> 00:00:07,859
always save the best talk the last so I

4
00:00:07,859 --> 00:00:11,420
have no idea why I got selected

5
00:00:16,129 --> 00:00:18,539
all right kind of weird introducing my

6
00:00:18,539 --> 00:00:20,699
own talk but you know all right so

7
00:00:20,699 --> 00:00:23,220
welcome to my talk called protecting the

8
00:00:23,220 --> 00:00:25,279
Garden of Eden

9
00:00:25,279 --> 00:00:27,300
hopefully you know my name by now it's

10
00:00:27,300 --> 00:00:29,490
Patrick Wartell I've worked at a variety

11
00:00:29,490 --> 00:00:32,308
of acronyms places currently I am the

12
00:00:32,308 --> 00:00:35,399
chief research officer at digital

13
00:00:35,399 --> 00:00:38,129
security working alongside Josh and John

14
00:00:38,129 --> 00:00:40,260
briefly at digital we are working to

15
00:00:40,260 --> 00:00:43,290
create cyber security tools for the Mac

16
00:00:43,290 --> 00:00:46,260
Enterprise so what are we going to be

17
00:00:46,260 --> 00:00:49,050
talking about today we're gonna start by

18
00:00:49,050 --> 00:00:51,660
talking about various malware specimens

19
00:00:51,660 --> 00:00:54,530
and vulnerabilities or bugs that have

20
00:00:54,530 --> 00:00:58,050
affected or still affect Mac OS today

21
00:00:58,050 --> 00:01:01,350
and after some musings some thoughts we

22
00:01:01,350 --> 00:01:03,539
are going to dive into part two where

23
00:01:03,539 --> 00:01:06,060
we're gonna talk about protections both

24
00:01:06,060 --> 00:01:08,790
those that are baked into Mojave Apple's

25
00:01:08,790 --> 00:01:10,860
latest version of Mac OS and then also

26
00:01:10,860 --> 00:01:13,140
some third-party tools and protection

27
00:01:13,140 --> 00:01:16,740
mechanisms so let's start with a brief

28
00:01:16,740 --> 00:01:20,040
history of Mac malware as well as some

29
00:01:20,040 --> 00:01:24,150
recent Mac malware specimens now first

30
00:01:24,150 --> 00:01:25,710
is a claim a statement which really

31
00:01:25,710 --> 00:01:27,630
should not be a surprise to this

32
00:01:27,630 --> 00:01:30,329
audience and that is Mac's are no more

33
00:01:30,329 --> 00:01:32,640
resistant to malware than their winter

34
00:01:32,640 --> 00:01:35,220
Windows counterparts you may be

35
00:01:35,220 --> 00:01:36,600
wondering okay well Patrick if this

36
00:01:36,600 --> 00:01:39,000
statement is true how come we are not

37
00:01:39,000 --> 00:01:41,790
inundated with Mac malware and it turns

38
00:01:41,790 --> 00:01:42,899
out there's actually a very simple

39
00:01:42,899 --> 00:01:44,700
answer for that and that is that Mac's

40
00:01:44,700 --> 00:01:48,090
still only make up less than 10% of the

41
00:01:48,090 --> 00:01:51,420
PC personal computing mark so hackers of

42
00:01:51,420 --> 00:01:53,509
course are going to focus more

43
00:01:53,509 --> 00:01:55,950
predominantly on the windows side of the

44
00:01:55,950 --> 00:01:58,140
house well still see though that there

45
00:01:58,140 --> 00:02:00,530
is a lot of Mac malware

46
00:02:00,530 --> 00:02:03,979
okay now a brief history of Mac Maur

47
00:02:03,979 --> 00:02:07,079
viruses Trojans etc that have targeted

48
00:02:07,079 --> 00:02:08,068
the apples

49
00:02:08,068 --> 00:02:10,229
ecosystems and first this is one of my

50
00:02:10,229 --> 00:02:11,999
favorite quotes the image is a little

51
00:02:11,999 --> 00:02:13,349
blurry because it's actually difficult

52
00:02:13,349 --> 00:02:15,629
to find but this was on the front page

53
00:02:15,629 --> 00:02:18,420
of Apple's website and what it states is

54
00:02:18,420 --> 00:02:22,560
that it max don't get PC viruses a Mac

55
00:02:22,560 --> 00:02:25,079
is not susceptible to the thousands of

56
00:02:25,079 --> 00:02:27,239
viruses playing windows-based computers

57
00:02:27,239 --> 00:02:30,540
and quit now from like a legalese point

58
00:02:30,540 --> 00:02:31,769
of view this is probably technically

59
00:02:31,769 --> 00:02:34,139
correct right a Windows virus kind of by

60
00:02:34,139 --> 00:02:37,139
definition does not run on Macs but this

61
00:02:37,139 --> 00:02:39,269
is an incredibly misleading and I would

62
00:02:39,269 --> 00:02:41,689
argue you almost manipulate 'men and

63
00:02:41,689 --> 00:02:44,430
actually the first in the wild computer

64
00:02:44,430 --> 00:02:46,859
virus did not impact a Windows System it

65
00:02:46,859 --> 00:02:49,829
actually infected an apple too and in

66
00:02:49,829 --> 00:02:51,900
recent years as we can see based on the

67
00:02:51,900 --> 00:02:54,930
statistics on the slides both the number

68
00:02:54,930 --> 00:02:57,689
of Mac vulnerabilities and malware

69
00:02:57,689 --> 00:03:00,150
continues to increase and in some cases

70
00:03:00,150 --> 00:03:01,849
skyrocket

71
00:03:01,849 --> 00:03:04,019
now they say a picture's worth a

72
00:03:04,019 --> 00:03:05,939
thousand words so here's a nice graph

73
00:03:05,939 --> 00:03:08,549
from McAfee really illustrating this

74
00:03:08,549 --> 00:03:10,919
claim clearly we can see that Mac Maur

75
00:03:10,919 --> 00:03:13,680
and yes this does include adware as well

76
00:03:13,680 --> 00:03:17,280
is continually continuing to grow often

77
00:03:17,280 --> 00:03:22,109
at a rather exponential rate so now

78
00:03:22,109 --> 00:03:24,509
let's look at some Mac malware specimens

79
00:03:24,509 --> 00:03:26,040
we'll start with some from a few years

80
00:03:26,040 --> 00:03:28,379
ago that are very interesting or rather

81
00:03:28,379 --> 00:03:30,060
infamous and then we'll talk about some

82
00:03:30,060 --> 00:03:33,389
from 2018 so it all started with

83
00:03:33,389 --> 00:03:35,699
flashback and flashback really proved

84
00:03:35,699 --> 00:03:37,829
beyond any doubt that Macs

85
00:03:37,829 --> 00:03:40,379
yes could get malware it's been said

86
00:03:40,379 --> 00:03:42,060
about flashback that quote it's the

87
00:03:42,060 --> 00:03:44,340
single most significant malware

88
00:03:44,340 --> 00:03:45,840
infection to ever hit in the Mac

89
00:03:45,840 --> 00:03:48,209
community and one of the reasons it was

90
00:03:48,209 --> 00:03:51,419
so prolific was that it exploited a at

91
00:03:51,419 --> 00:03:54,060
the time unpatched vulnerability that

92
00:03:54,060 --> 00:03:56,340
could automatically infect users Mac's

93
00:03:56,340 --> 00:03:58,620
system with no user interaction at all

94
00:03:58,620 --> 00:04:00,900
all the user would have to do would be

95
00:04:00,900 --> 00:04:03,780
visit a malicious website or perhaps a

96
00:04:03,780 --> 00:04:06,569
website that had been infected and the

97
00:04:06,569 --> 00:04:08,909
vulnerability which was a Java bug would

98
00:04:08,909 --> 00:04:12,150
give the attacker code execution on the

99
00:04:12,150 --> 00:04:14,489
box now the bug was known at the time

100
00:04:14,489 --> 00:04:16,620
but Apple did not release a patch for

101
00:04:16,620 --> 00:04:19,079
two months which gave hackers a really

102
00:04:19,079 --> 00:04:20,810
big window to infect

103
00:04:20,810 --> 00:04:23,240
hundreds of thousands of Macs and we can

104
00:04:23,240 --> 00:04:24,710
see the total number they reached was

105
00:04:24,710 --> 00:04:26,750
seven hundred thousand so almost a

106
00:04:26,750 --> 00:04:29,060
million max and somewhat interestingly

107
00:04:29,060 --> 00:04:32,120
about 250 of those actually were within

108
00:04:32,120 --> 00:04:36,410
Cupertino another intriguing piece of

109
00:04:36,410 --> 00:04:40,790
Mac Mauer is XSL CMD now besides the

110
00:04:40,790 --> 00:04:42,680
fact it was written or at least utilized

111
00:04:42,680 --> 00:04:44,630
by the Chinese which makes it somewhat

112
00:04:44,630 --> 00:04:47,270
interesting it actually utilized a

113
00:04:47,270 --> 00:04:50,000
zero-day exploit in its installer that

114
00:04:50,000 --> 00:04:52,250
at the time was unknown to any Mac

115
00:04:52,250 --> 00:04:54,410
security researchers so about a year

116
00:04:54,410 --> 00:04:56,870
later the zero day vulnerability was

117
00:04:56,870 --> 00:04:59,360
independently discovered the original

118
00:04:59,360 --> 00:05:02,000
malware analysis made no mention of this

119
00:05:02,000 --> 00:05:04,610
bug it's unsure if the analysts just

120
00:05:04,610 --> 00:05:05,240
missed it

121
00:05:05,240 --> 00:05:06,950
or if they chose not to say anything

122
00:05:06,950 --> 00:05:09,800
about it basically what the bug allowed

123
00:05:09,800 --> 00:05:12,560
was an unprivileged attacker to create

124
00:05:12,560 --> 00:05:15,830
files on the filesystem as root so what

125
00:05:15,830 --> 00:05:19,160
the malware used to or how the malware

126
00:05:19,160 --> 00:05:21,800
abused this vulnerability was to create

127
00:05:21,800 --> 00:05:23,810
a certain file which essentially turned

128
00:05:23,810 --> 00:05:26,300
on accessibility and once accessibility

129
00:05:26,300 --> 00:05:28,850
was turned on this loud the malware to

130
00:05:28,850 --> 00:05:32,060
install a system-wide key logger so yes

131
00:05:32,060 --> 00:05:33,140
even in 2014

132
00:05:33,140 --> 00:05:35,630
Chinese malware was using zero-day

133
00:05:35,630 --> 00:05:39,500
vulnerabilities other nation states such

134
00:05:39,500 --> 00:05:42,260
as Russia also have developed offensive

135
00:05:42,260 --> 00:05:44,450
Mac capabilities so here we're gonna

136
00:05:44,450 --> 00:05:46,940
talk about complex and ex-agent which

137
00:05:46,940 --> 00:05:49,280
are a Russian first stage and second

138
00:05:49,280 --> 00:05:52,160
stage implant stage one is complex it

139
00:05:52,160 --> 00:05:54,770
arrives to a target in an email it looks

140
00:05:54,770 --> 00:05:57,800
like a PDF document but in reality it is

141
00:05:57,800 --> 00:06:00,590
a malicious application if the user is

142
00:06:00,590 --> 00:06:02,720
tricked into running it it's going to

143
00:06:02,720 --> 00:06:05,870
execute and install complex what complex

144
00:06:05,870 --> 00:06:08,660
does is analyze the system survey the

145
00:06:08,660 --> 00:06:11,240
system and then connect to the attackers

146
00:06:11,240 --> 00:06:12,979
command and control server with

147
00:06:12,979 --> 00:06:15,289
information about the target now if the

148
00:06:15,289 --> 00:06:17,780
target is of interest to the Russians

149
00:06:17,780 --> 00:06:20,060
they will then download and install

150
00:06:20,060 --> 00:06:23,360
their persistent second stage implant

151
00:06:23,360 --> 00:06:26,060
which is called X agent this is more

152
00:06:26,060 --> 00:06:28,390
feature complete and has a lot more

153
00:06:28,390 --> 00:06:30,650
capabilities for example it allows the

154
00:06:30,650 --> 00:06:32,830
attackers full remote access

155
00:06:32,830 --> 00:06:34,800
/ the system gives them the ability to

156
00:06:34,800 --> 00:06:37,509
enumerate process exfiltrate files

157
00:06:37,509 --> 00:06:40,449
capture the screen and an ass also has a

158
00:06:40,449 --> 00:06:42,729
propensity or an interest in iphone

159
00:06:42,729 --> 00:06:45,819
backups which is very unusual capability

160
00:06:45,819 --> 00:06:47,830
but again from a cyber espionage point

161
00:06:47,830 --> 00:06:49,360
of view this is something that makes a

162
00:06:49,360 --> 00:06:52,720
lot of sense next up we have fruit fly

163
00:06:52,720 --> 00:06:56,110
fruit fly is intriguing because it was

164
00:06:56,110 --> 00:06:58,419
around for 13 years without being

165
00:06:58,419 --> 00:06:59,169
detected

166
00:06:59,169 --> 00:07:01,810
so I analyzed this malware along with

167
00:07:01,810 --> 00:07:04,000
Thomas Reid who spoke earlier today and

168
00:07:04,000 --> 00:07:06,150
during our analysis we found that

169
00:07:06,150 --> 00:07:08,710
encoded or encrypted within the malware

170
00:07:08,710 --> 00:07:10,120
were some backup command and control

171
00:07:10,120 --> 00:07:13,690
servers that were not registered at the

172
00:07:13,690 --> 00:07:15,490
time and the malware would first try to

173
00:07:15,490 --> 00:07:17,500
contact the primary command control

174
00:07:17,500 --> 00:07:19,569
servers if those were offline it would

175
00:07:19,569 --> 00:07:21,729
default to the backup so I wrote a

176
00:07:21,729 --> 00:07:23,379
custom command and control server that

177
00:07:23,379 --> 00:07:25,599
could fully task and interact with the

178
00:07:25,599 --> 00:07:28,900
malware I then registered these backup

179
00:07:28,900 --> 00:07:30,639
command control servers because they

180
00:07:30,639 --> 00:07:32,409
were available for education and since

181
00:07:32,409 --> 00:07:34,030
the primary command and control servers

182
00:07:34,030 --> 00:07:37,750
were offline all the infected victims

183
00:07:37,750 --> 00:07:40,029
started connecting to me and at that

184
00:07:40,029 --> 00:07:41,289
point that was a little worrisome

185
00:07:41,289 --> 00:07:42,849
because I could see thousands of

186
00:07:42,849 --> 00:07:44,440
infected hosts connecting to me and

187
00:07:44,440 --> 00:07:45,909
based on the information that the

188
00:07:45,909 --> 00:07:47,770
malware sends with it when it checks in

189
00:07:47,770 --> 00:07:49,240
I could see that they were predominantly

190
00:07:49,240 --> 00:07:51,610
within the United States so at this

191
00:07:51,610 --> 00:07:52,830
point we contact law enforcement

192
00:07:52,830 --> 00:07:54,880
basically saying hey look there's this

193
00:07:54,880 --> 00:07:56,680
significant intrusion that's going on

194
00:07:56,680 --> 00:07:59,340
and luckily they did an incredible job

195
00:07:59,340 --> 00:08:02,289
arresting the alleged mastermind behind

196
00:08:02,289 --> 00:08:04,599
this and it turned out that he had been

197
00:08:04,599 --> 00:08:06,849
doing this for over a decade allegedly

198
00:08:06,849 --> 00:08:09,520
to spy on everyday users including

199
00:08:09,520 --> 00:08:13,479
children now let's talk about some Mac

200
00:08:13,479 --> 00:08:15,310
malware from 2018

201
00:08:15,310 --> 00:08:17,139
so the first Mac malware specimen from

202
00:08:17,139 --> 00:08:20,020
2018 was called mommy and what it does

203
00:08:20,020 --> 00:08:22,539
is it installs a malicious root

204
00:08:22,539 --> 00:08:25,210
certificate authority or CA and then

205
00:08:25,210 --> 00:08:28,629
changes the Mac's DNS servers so what

206
00:08:28,629 --> 00:08:31,000
this allows is the malware to redirect

207
00:08:31,000 --> 00:08:33,940
all DNS requests which allows it to do

208
00:08:33,940 --> 00:08:35,589
things like read rec Search Results

209
00:08:35,589 --> 00:08:38,679
inject ads etc etc obviously this is a

210
00:08:38,679 --> 00:08:40,659
way for the attackers to financially

211
00:08:40,659 --> 00:08:45,120
gain interestingly mommy had some

212
00:08:45,120 --> 00:08:47,820
connections to a piece of Windows Maur

213
00:08:47,820 --> 00:08:50,370
specifically the thumbprint for the CA

214
00:08:50,370 --> 00:08:53,190
was exactly the same and also the DNS

215
00:08:53,190 --> 00:08:55,200
servers were essentially the same they

216
00:08:55,200 --> 00:08:57,570
were off by a few digits but for all

217
00:08:57,570 --> 00:09:00,240
purposes they were exactly the same as a

218
00:09:00,240 --> 00:09:03,300
Windows malware called DNS unlocker so

219
00:09:03,300 --> 00:09:05,670
what we can surmise from this is it's

220
00:09:05,670 --> 00:09:08,810
likely that the attackers had this

221
00:09:08,810 --> 00:09:11,370
financially beneficial Windows malware

222
00:09:11,370 --> 00:09:13,680
and decided it to rewrite and port it to

223
00:09:13,680 --> 00:09:15,570
Mac OS so that they could target more

224
00:09:15,570 --> 00:09:19,710
victims speaking of cross-platform Maur

225
00:09:19,710 --> 00:09:22,860
next up we have cross rat cross rat was

226
00:09:22,860 --> 00:09:24,750
discovered by the e FF and it was

227
00:09:24,750 --> 00:09:27,620
designed as a cyber espionage

228
00:09:27,620 --> 00:09:30,240
surveillance tools that was used by

229
00:09:30,240 --> 00:09:33,750
governments to spy on targets I analyzed

230
00:09:33,750 --> 00:09:36,779
the Mac OS code and as the analysis

231
00:09:36,779 --> 00:09:39,420
showed it supported a wide range of

232
00:09:39,420 --> 00:09:42,210
capabilities that again you would expect

233
00:09:42,210 --> 00:09:43,980
in a cyber espionage implant for an

234
00:09:43,980 --> 00:09:46,350
example the ability to run arbitrary

235
00:09:46,350 --> 00:09:48,390
commands interactively capture the

236
00:09:48,390 --> 00:09:51,779
screen exfiltrate files etc etc now good

237
00:09:51,779 --> 00:09:54,600
news is for most Mac users this malware

238
00:09:54,600 --> 00:09:56,130
was not going to be a threat or a

239
00:09:56,130 --> 00:09:58,140
problem because it was written in Java

240
00:09:58,140 --> 00:10:00,690
and most recent versions of Mac OS do

241
00:10:00,690 --> 00:10:03,560
not have Java installed by default

242
00:10:03,560 --> 00:10:06,390
another popular or interesting piece of

243
00:10:06,390 --> 00:10:09,839
malware from 2018 is wind shift and the

244
00:10:09,839 --> 00:10:11,700
most interesting thing about wind shift

245
00:10:11,700 --> 00:10:13,709
other than its targets which were also

246
00:10:13,709 --> 00:10:16,230
interesting the targets were individuals

247
00:10:16,230 --> 00:10:18,330
that would be of interest to Middle

248
00:10:18,330 --> 00:10:19,860
Eastern governments so again we can

249
00:10:19,860 --> 00:10:22,110
surmise maybe the attribution of this

250
00:10:22,110 --> 00:10:24,150
malware but it's most interesting thing

251
00:10:24,150 --> 00:10:26,310
from a technical point of view was its

252
00:10:26,310 --> 00:10:29,070
infection effector and specifically it

253
00:10:29,070 --> 00:10:31,560
abused custom URL handlers now John and

254
00:10:31,560 --> 00:10:33,029
Josh talked about this in their

255
00:10:33,029 --> 00:10:35,040
presentation yesterday about how to

256
00:10:35,040 --> 00:10:38,100
detect such URL handlers but let's

257
00:10:38,100 --> 00:10:40,290
briefly look at how the malware abused

258
00:10:40,290 --> 00:10:43,470
this to infect users systems so a user

259
00:10:43,470 --> 00:10:46,050
would visit malicious site perhaps by

260
00:10:46,050 --> 00:10:47,910
clicking on a link in a phishing email

261
00:10:47,910 --> 00:10:50,640
and once the user got to the site the

262
00:10:50,640 --> 00:10:52,440
website would automatically download a

263
00:10:52,440 --> 00:10:53,850
zip file so this is something that you

264
00:10:53,850 --> 00:10:55,380
can do in Safari again no user

265
00:10:55,380 --> 00:10:56,499
interaction required

266
00:10:56,499 --> 00:10:58,539
at this point safari as Josh mentioned

267
00:10:58,539 --> 00:11:01,359
would automatically unzip the archive

268
00:11:01,359 --> 00:11:03,759
because again safari by default treats

269
00:11:03,759 --> 00:11:06,879
some files as safe so now the zip file

270
00:11:06,879 --> 00:11:08,919
has been decompressed within the zip

271
00:11:08,919 --> 00:11:11,109
file was an application because the

272
00:11:11,109 --> 00:11:14,259
application broadcasted that it it it

273
00:11:14,259 --> 00:11:17,589
handled custom URL schemes the operating

274
00:11:17,589 --> 00:11:19,539
system Mac OS would automatically

275
00:11:19,539 --> 00:11:22,449
register those application URL handlers

276
00:11:22,449 --> 00:11:25,149
so again no user interaction up into

277
00:11:25,149 --> 00:11:27,939
this point now code on the malicious web

278
00:11:27,939 --> 00:11:30,399
site knows that the operating system or

279
00:11:30,399 --> 00:11:32,289
assumes that the operating system has

280
00:11:32,289 --> 00:11:35,139
registered these custom URL handlers so

281
00:11:35,139 --> 00:11:37,299
it goes and makes a URL request to that

282
00:11:37,299 --> 00:11:40,359
custom scheme now this will generate a

283
00:11:40,359 --> 00:11:42,549
pop-up but as we can see on the slide

284
00:11:42,549 --> 00:11:44,859
this is very attacker controlled for

285
00:11:44,859 --> 00:11:47,679
example you can specify the name of what

286
00:11:47,679 --> 00:11:49,659
you want to show so you can say do you

287
00:11:49,659 --> 00:11:51,069
want to allow this web page to open

288
00:11:51,069 --> 00:11:54,339
Apple comm a lot of users will fall for

289
00:11:54,339 --> 00:11:56,649
that so if the users click on this this

290
00:11:56,649 --> 00:11:58,929
will launch the application to handle

291
00:11:58,929 --> 00:12:00,939
the custom URL scheme and of course the

292
00:12:00,939 --> 00:12:02,919
application is the Mauer which will now

293
00:12:02,919 --> 00:12:06,639
be running kind of neat other nation

294
00:12:06,639 --> 00:12:08,589
states that are developing offensive map

295
00:12:08,589 --> 00:12:11,109
Mac capabilities are the North Koreans

296
00:12:11,109 --> 00:12:14,319
apple-juice was discovered by Kaspersky

297
00:12:14,319 --> 00:12:17,829
in 2018 and it's a North Korean malware

298
00:12:17,829 --> 00:12:20,819
that targets cryptocurrency exchanges

299
00:12:20,819 --> 00:12:24,039
with all the sanctions that countries

300
00:12:24,039 --> 00:12:25,629
have placed against the North Koreans

301
00:12:25,629 --> 00:12:27,819
their little cash-strapped so what

302
00:12:27,819 --> 00:12:29,499
they've done to kind of get around this

303
00:12:29,499 --> 00:12:30,939
is hack a lot of banks and

304
00:12:30,939 --> 00:12:33,429
cryptocurrency exchanges because this is

305
00:12:33,429 --> 00:12:35,259
a really kind of creative way for them

306
00:12:35,259 --> 00:12:37,599
to get large amounts of currencies to

307
00:12:37,599 --> 00:12:40,689
finance their operations so what the

308
00:12:40,689 --> 00:12:43,209
North Koreans did was registered a fake

309
00:12:43,209 --> 00:12:45,699
trading company and then made a fake

310
00:12:45,699 --> 00:12:48,249
installer for a fake trading app and

311
00:12:48,249 --> 00:12:50,979
then coerced or tricked users of this

312
00:12:50,979 --> 00:12:54,159
exchange to install that application as

313
00:12:54,159 --> 00:12:55,779
soon as the users installed this

314
00:12:55,779 --> 00:12:57,489
application the North Koreans would get

315
00:12:57,489 --> 00:12:59,589
access to the cryptocurrency exchange

316
00:12:59,589 --> 00:13:01,599
and obviously once you have access to

317
00:13:01,599 --> 00:13:03,639
such an exchange you can access large

318
00:13:03,639 --> 00:13:06,249
amounts of cryptocurrency funds can I

319
00:13:06,249 --> 00:13:10,179
mean finally we've got OS X creative

320
00:13:10,179 --> 00:13:10,980
updater

321
00:13:10,980 --> 00:13:14,040
this was distributed via the popular Mac

322
00:13:14,040 --> 00:13:17,490
software site Mac update comm what the

323
00:13:17,490 --> 00:13:19,620
hackers did somehow they had access to

324
00:13:19,620 --> 00:13:22,230
the site and they uploaded a Trojan eyes

325
00:13:22,230 --> 00:13:25,019
version of Firefox so now when users

326
00:13:25,019 --> 00:13:27,120
went to download Firefox from this

327
00:13:27,120 --> 00:13:28,920
website which a lot of users go to this

328
00:13:28,920 --> 00:13:30,660
website to get Mac security tools

329
00:13:30,660 --> 00:13:33,209
applications and updates once they

330
00:13:33,209 --> 00:13:35,610
downloaded this version of Firefox and

331
00:13:35,610 --> 00:13:37,980
ran it on the system they would have

332
00:13:37,980 --> 00:13:39,180
become infected

333
00:13:39,180 --> 00:13:41,779
now the malware didn't install anything

334
00:13:41,779 --> 00:13:44,790
particularly insidious but it did

335
00:13:44,790 --> 00:13:47,220
install a crypto miner to use the users

336
00:13:47,220 --> 00:13:50,940
CPU Mac to mine for cryptocurrency and

337
00:13:50,940 --> 00:13:53,100
one interesting point is that this

338
00:13:53,100 --> 00:13:55,769
malware had a lot of overlaps to another

339
00:13:55,769 --> 00:13:57,750
malware sample from a few years ago that

340
00:13:57,750 --> 00:14:00,570
was also distributed via Mac Update so

341
00:14:00,570 --> 00:14:01,980
again this is likely the same attackers

342
00:14:01,980 --> 00:14:04,800
or some connection again abusing the

343
00:14:04,800 --> 00:14:06,959
popular Mac update site as a way to

344
00:14:06,959 --> 00:14:09,329
access or infect a large number of

345
00:14:09,329 --> 00:14:12,660
victims okay so now let's briefly talk

346
00:14:12,660 --> 00:14:15,089
about malware trends so first let's look

347
00:14:15,089 --> 00:14:18,060
at trends in infection vectors most

348
00:14:18,060 --> 00:14:20,190
still today which is good from a

349
00:14:20,190 --> 00:14:22,110
security point of view still require

350
00:14:22,110 --> 00:14:24,449
user interaction that is the user is

351
00:14:24,449 --> 00:14:25,620
going to have to be tricked into

352
00:14:25,620 --> 00:14:28,290
clicking through some prompts which as

353
00:14:28,290 --> 00:14:30,360
we know a lot of users still will but

354
00:14:30,360 --> 00:14:32,220
again that's a reasonable high bar that

355
00:14:32,220 --> 00:14:34,290
does prevent some level of infection

356
00:14:34,290 --> 00:14:36,089
however we are seeing more of these

357
00:14:36,089 --> 00:14:38,550
supply chain type infections where

358
00:14:38,550 --> 00:14:40,500
hackers are going after third-party

359
00:14:40,500 --> 00:14:42,690
developer or application site sites

360
00:14:42,690 --> 00:14:45,060
hacking those sites and then uploading

361
00:14:45,060 --> 00:14:47,310
trojan eyes versions of applications or

362
00:14:47,310 --> 00:14:49,110
infecting the applications that are

363
00:14:49,110 --> 00:14:51,180
legitimately distributed through those

364
00:14:51,180 --> 00:14:53,459
sites and then any user who comes

365
00:14:53,459 --> 00:14:55,589
through those sites unwittingly will

366
00:14:55,589 --> 00:14:57,389
infect themselves if they download those

367
00:14:57,389 --> 00:14:58,740
software so this is something that's

368
00:14:58,740 --> 00:15:01,380
very program problematic and really that

369
00:15:01,380 --> 00:15:03,660
most users can't avoid or really it's

370
00:15:03,660 --> 00:15:06,569
not their fault at all and in some cases

371
00:15:06,569 --> 00:15:08,819
for example with fruit fly we have pure

372
00:15:08,819 --> 00:15:11,279
remote malware infections so again this

373
00:15:11,279 --> 00:15:13,529
is definitely more worrisome because

374
00:15:13,529 --> 00:15:15,510
users are then being infected with no

375
00:15:15,510 --> 00:15:19,560
interaction now in terms of the goals or

376
00:15:19,560 --> 00:15:22,680
the objectives of of Mac Maur the most

377
00:15:22,680 --> 00:15:24,360
common goal is to

378
00:15:24,360 --> 00:15:26,610
make money which should not be that

379
00:15:26,610 --> 00:15:29,279
surprising so adware is predominantly

380
00:15:29,279 --> 00:15:30,720
what we see you know if you get a call

381
00:15:30,720 --> 00:15:32,970
from your friend or your parents that

382
00:15:32,970 --> 00:15:35,430
hey my Mac is infected I would say

383
00:15:35,430 --> 00:15:37,920
ninety five six seven percent of the

384
00:15:37,920 --> 00:15:39,810
time it's going to be because of some

385
00:15:39,810 --> 00:15:42,149
adware and most of this adware is not

386
00:15:42,149 --> 00:15:43,740
really interested in stealing people's

387
00:15:43,740 --> 00:15:45,300
identities it's just showing annoying

388
00:15:45,300 --> 00:15:48,600
ads and generating sort of maybe

389
00:15:48,600 --> 00:15:50,990
redirecting search results etc etc

390
00:15:50,990 --> 00:15:53,070
crypto miners we're seeing kind of an

391
00:15:53,070 --> 00:15:54,750
uptick in that a few years ago there

392
00:15:54,750 --> 00:15:56,190
really weren't a lot of crypto miners

393
00:15:56,190 --> 00:15:58,800
but now a lot of malware it's ultimate

394
00:15:58,800 --> 00:16:00,870
payload or goal is to install a crypto

395
00:16:00,870 --> 00:16:04,170
miner on an end-user system and although

396
00:16:04,170 --> 00:16:07,019
apt nation-state backdoors pop up from

397
00:16:07,019 --> 00:16:09,480
time to time generally those are only

398
00:16:09,480 --> 00:16:11,630
going to be impacting a very small

399
00:16:11,630 --> 00:16:14,430
percentage of users it's doubtful that

400
00:16:14,430 --> 00:16:16,560
any of us here in this room are being

401
00:16:16,560 --> 00:16:19,560
targeted by nation-states if you are I

402
00:16:19,560 --> 00:16:21,180
apologize because they're probably going

403
00:16:21,180 --> 00:16:23,160
to get to you but from a security point

404
00:16:23,160 --> 00:16:24,690
of view these are I would say most

405
00:16:24,690 --> 00:16:27,660
interesting because they often have the

406
00:16:27,660 --> 00:16:29,339
most interesting infection techniques

407
00:16:29,339 --> 00:16:32,430
and are the most sophisticated and even

408
00:16:32,430 --> 00:16:34,140
though we don't see a lot of these we

409
00:16:34,140 --> 00:16:36,630
should make and we should really not

410
00:16:36,630 --> 00:16:38,070
assume that that's just because they're

411
00:16:38,070 --> 00:16:39,570
not out there that is to say I'm

412
00:16:39,570 --> 00:16:41,579
confident that every nation state that

413
00:16:41,579 --> 00:16:44,310
has an offensive cyber security program

414
00:16:44,310 --> 00:16:47,010
or an offensive you know hacking program

415
00:16:47,010 --> 00:16:49,320
is developing and likely has Mac

416
00:16:49,320 --> 00:16:52,949
capabilities okay so now let's talk

417
00:16:52,949 --> 00:16:55,620
about some recent mac OS bugs some

418
00:16:55,620 --> 00:16:57,570
vulnerabilities and we're really gonna

419
00:16:57,570 --> 00:17:00,329
focus on the ones that really leave us

420
00:17:00,329 --> 00:17:02,190
scratching our heads and kind of

421
00:17:02,190 --> 00:17:04,169
wondering how these ever made it into

422
00:17:04,169 --> 00:17:08,520
production code and through QA so first

423
00:17:08,520 --> 00:17:10,410
another important claim another

424
00:17:10,410 --> 00:17:12,689
important reality that is that actually

425
00:17:12,689 --> 00:17:15,240
Mac computers are easier to hack than

426
00:17:15,240 --> 00:17:18,179
modern Windows now this claim might be

427
00:17:18,179 --> 00:17:21,540
somewhat provocative but it's really the

428
00:17:21,540 --> 00:17:23,250
truth and we can back this up with

429
00:17:23,250 --> 00:17:25,770
numbers and statistics so first we can

430
00:17:25,770 --> 00:17:28,349
see that if we look at CVE counts we can

431
00:17:28,349 --> 00:17:31,140
see that Mac consistently beats out

432
00:17:31,140 --> 00:17:33,240
windows in a not so good way of having

433
00:17:33,240 --> 00:17:35,280
more reported vulnerabilities than

434
00:17:35,280 --> 00:17:37,470
Windows and again this is a lot of times

435
00:17:37,470 --> 00:17:38,230
what exploit

436
00:17:38,230 --> 00:17:40,510
and Mac use now you might say you know

437
00:17:40,510 --> 00:17:42,159
these CDE metrics are a little skewed

438
00:17:42,159 --> 00:17:43,960
they don't really give good insight into

439
00:17:43,960 --> 00:17:46,419
the security of the system okay fine

440
00:17:46,419 --> 00:17:48,610
let's discount that let's look at the

441
00:17:48,610 --> 00:17:50,950
value or the prices of zero-day

442
00:17:50,950 --> 00:17:53,919
vulnerabilities so first we can see that

443
00:17:53,919 --> 00:17:55,899
in terms of Safari bugs Safari bugs are

444
00:17:55,899 --> 00:17:58,539
cheaper than chrome or edge bugs and

445
00:17:58,539 --> 00:18:02,049
kora Mac OS Vanar abilities are cheaper

446
00:18:02,049 --> 00:18:05,139
than either Windows or Linux bugs now

447
00:18:05,139 --> 00:18:07,059
you might be thinking Patrick maybe this

448
00:18:07,059 --> 00:18:09,940
is about supply and demand in the sense

449
00:18:09,940 --> 00:18:13,210
that imagine the NSA hypothetically has

450
00:18:13,210 --> 00:18:15,760
a hundred windows targets and maybe one

451
00:18:15,760 --> 00:18:18,220
or two Mac targets this might mean they

452
00:18:18,220 --> 00:18:20,200
need more Windows capabilities so

453
00:18:20,200 --> 00:18:21,549
therefore the price is gonna be higher

454
00:18:21,549 --> 00:18:23,200
because there's more of a man this is

455
00:18:23,200 --> 00:18:25,299
not sure you still need just one Windows

456
00:18:25,299 --> 00:18:26,980
exploit to access all those windows

457
00:18:26,980 --> 00:18:29,380
systems and if you have one Mac system

458
00:18:29,380 --> 00:18:30,850
even if it's just one that you're

459
00:18:30,850 --> 00:18:32,500
interested in hacking you're still gonna

460
00:18:32,500 --> 00:18:35,620
need one exploit or vulnerability so the

461
00:18:35,620 --> 00:18:37,690
reality is just that Macs have easier

462
00:18:37,690 --> 00:18:39,700
vulnerabilities and more bugs to find

463
00:18:39,700 --> 00:18:41,200
and this is why the market dictates

464
00:18:41,200 --> 00:18:45,279
these prices okay so now on to some

465
00:18:45,279 --> 00:18:47,110
actual vulnerabilities that I hope will

466
00:18:47,110 --> 00:18:50,110
back up these claims as well so the

467
00:18:50,110 --> 00:18:51,510
first of all I want to talk about was

468
00:18:51,510 --> 00:18:54,880
password exposure flaw in encrypted

469
00:18:54,880 --> 00:18:57,010
volumes and you think about encrypted

470
00:18:57,010 --> 00:18:59,139
volumes this is where you store the most

471
00:18:59,139 --> 00:19:02,409
sensitive things so the issue was the

472
00:19:02,409 --> 00:19:05,409
password was stored in the clear as the

473
00:19:05,409 --> 00:19:08,649
password hint so very easy to replicate

474
00:19:08,649 --> 00:19:11,320
this bug you create an encrypted volume

475
00:19:11,320 --> 00:19:14,320
you set a password hint obviously not

476
00:19:14,320 --> 00:19:16,539
the password and then later once you

477
00:19:16,539 --> 00:19:19,090
unmounted this drive and mount it to

478
00:19:19,090 --> 00:19:21,549
access its contents it will prompt you

479
00:19:21,549 --> 00:19:23,860
for the password if you click show hint

480
00:19:23,860 --> 00:19:27,149
it would show you the actual password

481
00:19:27,149 --> 00:19:28,600
mine boy

482
00:19:28,600 --> 00:19:30,279
so I wrote a blog about this which I

483
00:19:30,279 --> 00:19:33,370
track down the core issue of this and in

484
00:19:33,370 --> 00:19:34,960
the slide we can see exactly what's

485
00:19:34,960 --> 00:19:37,330
going on basically as Brandon talked

486
00:19:37,330 --> 00:19:39,580
about the issue was the developer cut

487
00:19:39,580 --> 00:19:42,070
and pasted two lines of code and the

488
00:19:42,070 --> 00:19:45,220
second line he or she did not change the

489
00:19:45,220 --> 00:19:46,659
value that was being stored in the

490
00:19:46,659 --> 00:19:48,309
password hint so again this is a

491
00:19:48,309 --> 00:19:49,810
dictionary and

492
00:19:49,810 --> 00:19:51,370
password should have the password key

493
00:19:51,370 --> 00:19:52,990
should have the passport value and the

494
00:19:52,990 --> 00:19:55,090
password hint should have the password

495
00:19:55,090 --> 00:19:57,280
hint value as we can see on the slide

496
00:19:57,280 --> 00:20:00,340
the code actually stored the password in

497
00:20:00,340 --> 00:20:02,650
the clear in the password hint so as

498
00:20:02,650 --> 00:20:04,720
soon as you clicked show hint again it

499
00:20:04,720 --> 00:20:06,610
would show the password for the

500
00:20:06,610 --> 00:20:10,240
encrypted volume next is another neat

501
00:20:10,240 --> 00:20:11,860
bug this is a privilege escalation

502
00:20:11,860 --> 00:20:14,200
vulnerabilities I discovered that

503
00:20:14,200 --> 00:20:16,270
affected all recent versions of Mac OS

504
00:20:16,270 --> 00:20:19,230
and OSX for about the last 15 years

505
00:20:19,230 --> 00:20:21,910
so first let's have a look at what

506
00:20:21,910 --> 00:20:23,620
happens when a user wants to

507
00:20:23,620 --> 00:20:25,750
authenticate for example say an

508
00:20:25,750 --> 00:20:27,910
application or an installer wants to

509
00:20:27,910 --> 00:20:29,860
perform some privileged action or

510
00:20:29,860 --> 00:20:33,160
execute some privileged command so the

511
00:20:33,160 --> 00:20:34,930
application or the Installer will make a

512
00:20:34,930 --> 00:20:36,910
request to the operating system the

513
00:20:36,910 --> 00:20:38,980
operating system will display an

514
00:20:38,980 --> 00:20:41,500
authentication prompt to the user the

515
00:20:41,500 --> 00:20:42,760
user will enter their password and

516
00:20:42,760 --> 00:20:44,410
assuming the password is valid the

517
00:20:44,410 --> 00:20:46,210
system will validate that and generate

518
00:20:46,210 --> 00:20:49,810
an authentication token this token is

519
00:20:49,810 --> 00:20:52,990
then passed to a set UID process called

520
00:20:52,990 --> 00:20:56,080
security underscore off trampoline this

521
00:20:56,080 --> 00:20:58,150
will then execute the command as root

522
00:20:58,150 --> 00:21:00,310
now it's interesting if we look at the

523
00:21:00,310 --> 00:21:02,830
header file it says do not disclose this

524
00:21:02,830 --> 00:21:04,780
authentication token because obviously

525
00:21:04,780 --> 00:21:07,450
if you disclose this token malicious

526
00:21:07,450 --> 00:21:10,090
code or at hacker could use this to

527
00:21:10,090 --> 00:21:12,520
perform the authenticated privilege

528
00:21:12,520 --> 00:21:15,310
action as well and one interesting thing

529
00:21:15,310 --> 00:21:17,320
though if we look at how they pass this

530
00:21:17,320 --> 00:21:20,140
authentication token from the system to

531
00:21:20,140 --> 00:21:24,730
this s UID processes via a temp file now

532
00:21:24,730 --> 00:21:27,130
I was like okay that seems like a bad

533
00:21:27,130 --> 00:21:29,380
idea but it turns out that Apple was

534
00:21:29,380 --> 00:21:32,560
using the TMP file API which actually

535
00:21:32,560 --> 00:21:33,850
does two good things from a security

536
00:21:33,850 --> 00:21:35,830
point of view first it generates a

537
00:21:35,830 --> 00:21:38,170
randomly named file and then more

538
00:21:38,170 --> 00:21:40,750
importantly it immediately unlinks that

539
00:21:40,750 --> 00:21:43,510
file meaning that no other process on

540
00:21:43,510 --> 00:21:45,700
the system can open that file to figure

541
00:21:45,700 --> 00:21:48,010
out what's inside it so in theory even

542
00:21:48,010 --> 00:21:49,540
if that authentication token is being

543
00:21:49,540 --> 00:21:51,220
written to that temp file and in the

544
00:21:51,220 --> 00:21:52,990
file descriptor for that temp file is

545
00:21:52,990 --> 00:21:55,690
passed to the set UID process malicious

546
00:21:55,690 --> 00:21:57,180
code cannot access

547
00:21:57,180 --> 00:21:59,820
that file so this looks like it's safe

548
00:21:59,820 --> 00:22:02,850
right no not at all turns out all we

549
00:22:02,850 --> 00:22:04,950
have to do is create a ram disk which is

550
00:22:04,950 --> 00:22:08,010
an in-memory disk image that we own we

551
00:22:08,010 --> 00:22:10,500
then symlink the temp directory to point

552
00:22:10,500 --> 00:22:13,410
to our RAM disk now anytime an

553
00:22:13,410 --> 00:22:15,840
authentication token is created when the

554
00:22:15,840 --> 00:22:17,790
system goes to write to the temp file

555
00:22:17,790 --> 00:22:20,160
because of our sim link it will write to

556
00:22:20,160 --> 00:22:23,340
our Ram disk and since it's our Ram disk

557
00:22:23,340 --> 00:22:25,080
we can see whatever contents are in

558
00:22:25,080 --> 00:22:27,120
there so we can basically just wait and

559
00:22:27,120 --> 00:22:29,220
then sniff these authentication tokens

560
00:22:29,220 --> 00:22:31,620
and then we can use them and replay them

561
00:22:31,620 --> 00:22:34,140
to execute any command as root so got a

562
00:22:34,140 --> 00:22:37,200
very powerful logic local privilege

563
00:22:37,200 --> 00:22:38,820
escalation vulnerability and again

564
00:22:38,820 --> 00:22:40,110
you're like why are you passing this

565
00:22:40,110 --> 00:22:42,450
token in a temp file again just really

566
00:22:42,450 --> 00:22:46,230
not good another issue I recently found

567
00:22:46,230 --> 00:22:48,690
aloud unprivileged malicious

568
00:22:48,690 --> 00:22:51,180
applications to steal the file vault

569
00:22:51,180 --> 00:22:54,000
unlock key again this is not good so

570
00:22:54,000 --> 00:22:57,120
what happens is on Mac OS when you

571
00:22:57,120 --> 00:23:00,720
install a pkg file apples installer dot

572
00:23:00,720 --> 00:23:03,720
app would examine and read the pkg file

573
00:23:03,720 --> 00:23:06,570
and if that PKG file contained any

574
00:23:06,570 --> 00:23:09,990
plugins it would load those plugins into

575
00:23:09,990 --> 00:23:12,450
the installer dot apps address space and

576
00:23:12,450 --> 00:23:15,210
this is a problem or was a problem

577
00:23:15,210 --> 00:23:17,250
because the installer dot app has

578
00:23:17,250 --> 00:23:19,770
entitlements or privileges that allow it

579
00:23:19,770 --> 00:23:23,490
to access this file vault unlock key so

580
00:23:23,490 --> 00:23:24,870
what we could do is just create a

581
00:23:24,870 --> 00:23:28,050
malicious PKG file run it the installer

582
00:23:28,050 --> 00:23:29,580
dot app would be like oh I see you got

583
00:23:29,580 --> 00:23:31,590
some plugins yes I will load them into

584
00:23:31,590 --> 00:23:34,080
my trusted Apple entitled process space

585
00:23:34,080 --> 00:23:36,090
once your plugin is running in that

586
00:23:36,090 --> 00:23:37,740
process space it inherits all the

587
00:23:37,740 --> 00:23:40,200
entitlements that the process has so now

588
00:23:40,200 --> 00:23:42,690
we inherit the ability to access the

589
00:23:42,690 --> 00:23:45,420
file vault unlock key so we can steal

590
00:23:45,420 --> 00:23:46,860
that we can excellent rate that we can

591
00:23:46,860 --> 00:23:48,900
do whatever we want again from security

592
00:23:48,900 --> 00:23:51,170
point of view what were they thinking

593
00:23:51,170 --> 00:23:53,880
more bucks okay so now let's talk about

594
00:23:53,880 --> 00:23:56,790
abusing programmatic or synthetic events

595
00:23:56,790 --> 00:23:58,860
Josh and John talked about detecting

596
00:23:58,860 --> 00:24:00,420
these yesterday I will talk now about

597
00:24:00,420 --> 00:24:03,960
the core issues so apple understandably

598
00:24:03,960 --> 00:24:07,170
protects UI components from programmatic

599
00:24:07,170 --> 00:24:09,270
events for example the keychain they

600
00:24:09,270 --> 00:24:10,700
know that malware may

601
00:24:10,700 --> 00:24:12,860
to interact programmatically and try to

602
00:24:12,860 --> 00:24:15,680
click on the allow access button that is

603
00:24:15,680 --> 00:24:17,750
displayed so they try to block and

604
00:24:17,750 --> 00:24:20,180
filter events that are programmatically

605
00:24:20,180 --> 00:24:23,150
generated turns out that Mac OS has this

606
00:24:23,150 --> 00:24:26,210
feature called Mouse keys and what mouse

607
00:24:26,210 --> 00:24:28,820
keys does is it turns the keyboard into

608
00:24:28,820 --> 00:24:31,700
the mouse so what code could do was

609
00:24:31,700 --> 00:24:34,760
basically turn on Mouse keys then send a

610
00:24:34,760 --> 00:24:37,850
synthetic key press with mouse keys on

611
00:24:37,850 --> 00:24:40,100
the system would translate the key press

612
00:24:40,100 --> 00:24:42,740
to a mouse event and now since the mouse

613
00:24:42,740 --> 00:24:44,600
event is coming from the system

614
00:24:44,600 --> 00:24:47,840
these UI prompts would allow that so we

615
00:24:47,840 --> 00:24:49,250
could do things like dump the cheeky

616
00:24:49,250 --> 00:24:51,650
chain approved kernel extensions really

617
00:24:51,650 --> 00:24:54,010
interact with any UI component

618
00:24:54,010 --> 00:24:56,600
programmatically synthetically again not

619
00:24:56,600 --> 00:24:58,310
with some crazy vulnerability or exploit

620
00:24:58,310 --> 00:24:59,840
just using some feature that is built

621
00:24:59,840 --> 00:25:03,380
into the operating system so I reported

622
00:25:03,380 --> 00:25:05,120
this bug to Apple and they fixed it but

623
00:25:05,120 --> 00:25:06,680
turns out there's still another flaw

624
00:25:06,680 --> 00:25:10,000
that affects Mac OS at least pre Mojave

625
00:25:10,000 --> 00:25:12,170
so normally when you generate a

626
00:25:12,170 --> 00:25:14,420
synthetic click you have to simulate

627
00:25:14,420 --> 00:25:16,610
what the user does and so we think about

628
00:25:16,610 --> 00:25:18,380
a mouse click it has two parts right has

629
00:25:18,380 --> 00:25:20,180
mouse click down and then mouse click up

630
00:25:20,180 --> 00:25:22,340
so what you normally do is you send a

631
00:25:22,340 --> 00:25:24,440
mouse click down and then a synthetic

632
00:25:24,440 --> 00:25:27,980
mouse click up event however turns out

633
00:25:27,980 --> 00:25:30,740
if you send two mouse click down events

634
00:25:30,740 --> 00:25:33,860
in a row the system basically says hmmm

635
00:25:33,860 --> 00:25:35,900
the second Mouse down doesn't really

636
00:25:35,900 --> 00:25:38,120
make sense this should probably be a

637
00:25:38,120 --> 00:25:40,520
mouse up event so it kindly translates

638
00:25:40,520 --> 00:25:43,310
that second Mouse down to a second to a

639
00:25:43,310 --> 00:25:45,380
mouse up event and then delivers it to

640
00:25:45,380 --> 00:25:48,530
the UI component again since this is now

641
00:25:48,530 --> 00:25:51,380
coming from the system the UI component

642
00:25:51,380 --> 00:25:53,900
will trust the click and I kind of

643
00:25:53,900 --> 00:25:56,240
knocked on Apple earlier about copying

644
00:25:56,240 --> 00:25:58,340
and pasting code accidentally the way I

645
00:25:58,340 --> 00:26:00,410
actually found this bug was I copied and

646
00:26:00,410 --> 00:26:02,990
pasted the mouse click down twice and I

647
00:26:02,990 --> 00:26:04,760
didn't actually update it and so what I

648
00:26:04,760 --> 00:26:06,170
ran in this and I worked that was like

649
00:26:06,170 --> 00:26:08,780
oh my god I just found a bug by you know

650
00:26:08,780 --> 00:26:10,340
copy and pasting it's kind of

651
00:26:10,340 --> 00:26:12,020
embarrassing but I think it's actually

652
00:26:12,020 --> 00:26:15,010
more embarrassing for Apple

653
00:26:15,010 --> 00:26:17,860
okay another bug we have is the I am

654
00:26:17,860 --> 00:26:19,600
route runner ability this was actually

655
00:26:19,600 --> 00:26:22,000
really really bad so it turns out if you

656
00:26:22,000 --> 00:26:24,429
wanted to get root access on a Mac all

657
00:26:24,429 --> 00:26:26,320
you had to do was click authenticate

658
00:26:26,320 --> 00:26:29,860
twice as the animated gif on the slide

659
00:26:29,860 --> 00:26:32,860
shows this was actually posted to

660
00:26:32,860 --> 00:26:35,320
Apple's developer forums as a helpful

661
00:26:35,320 --> 00:26:38,110
hint so if you guys want 0 days now

662
00:26:38,110 --> 00:26:40,660
maybe just read the developer forums so

663
00:26:40,660 --> 00:26:42,010
i reverse-engineered the mac OS

664
00:26:42,010 --> 00:26:43,780
authentication mechanisms to figure out

665
00:26:43,780 --> 00:26:47,049
the cause or the root of this bug and it

666
00:26:47,049 --> 00:26:50,200
turns out the system calls the OD verify

667
00:26:50,200 --> 00:26:53,200
crypt password to verify the user

668
00:26:53,200 --> 00:26:56,020
specified password this function takes a

669
00:26:56,020 --> 00:26:58,179
boolean parameter this is very important

670
00:26:58,179 --> 00:27:00,549
that is set to true or false if the

671
00:27:00,549 --> 00:27:02,410
password matches what the user has

672
00:27:02,410 --> 00:27:05,470
previously said the problem was as we

673
00:27:05,470 --> 00:27:07,299
can see in code is that this boolean

674
00:27:07,299 --> 00:27:10,299
parameter was never checked instead the

675
00:27:10,299 --> 00:27:11,830
code was merely checking that the

676
00:27:11,830 --> 00:27:13,780
functions succeed so this function would

677
00:27:13,780 --> 00:27:15,580
also return an error message if there

678
00:27:15,580 --> 00:27:18,520
was some system error but again there

679
00:27:18,520 --> 00:27:20,140
could be a case where the password was

680
00:27:20,140 --> 00:27:22,600
incorrect the function would return okay

681
00:27:22,600 --> 00:27:24,960
and since apple was not checking this

682
00:27:24,960 --> 00:27:27,610
parameter it was always allowed to

683
00:27:27,610 --> 00:27:31,870
succeed very recently we've had probably

684
00:27:31,870 --> 00:27:33,910
which is one of the worst Mac and iOS

685
00:27:33,910 --> 00:27:36,640
bugs I am aware of and is because it is

686
00:27:36,640 --> 00:27:39,820
a pure remote trigger bug that affects

687
00:27:39,820 --> 00:27:42,070
code within the kernel so we can see the

688
00:27:42,070 --> 00:27:44,710
video the finder of this bug basically

689
00:27:44,710 --> 00:27:46,929
is sending an ICMP packet which crashes

690
00:27:46,929 --> 00:27:49,870
at the time of fully updated Mac iPhone

691
00:27:49,870 --> 00:27:54,250
and iPad the issue is or was that when

692
00:27:54,250 --> 00:27:58,450
the system receives a invalid ICMP

693
00:27:58,450 --> 00:28:00,549
packet it tries to respond with an error

694
00:28:00,549 --> 00:28:02,320
when it's responding with this error

695
00:28:02,320 --> 00:28:04,419
though it takes the corrupted invalid

696
00:28:04,419 --> 00:28:06,820
ICMP packet and copies it into a buffer

697
00:28:06,820 --> 00:28:09,610
that is too small so you have a heap

698
00:28:09,610 --> 00:28:12,190
overflow in the context of the kernel

699
00:28:12,190 --> 00:28:14,919
that is remotely trigger but really

700
00:28:14,919 --> 00:28:18,309
doesn't get worse than this ok so now

701
00:28:18,309 --> 00:28:20,679
let's talk about apples patching issues

702
00:28:20,679 --> 00:28:22,929
because you know to be fair to Apple

703
00:28:22,929 --> 00:28:24,940
everyone who writes software is going to

704
00:28:24,940 --> 00:28:26,679
have bugs in their code I write software

705
00:28:26,679 --> 00:28:28,180
my software has bugs

706
00:28:28,180 --> 00:28:29,830
so it's understandable that your bugs

707
00:28:29,830 --> 00:28:31,540
have code maybe not as bad as the ones

708
00:28:31,540 --> 00:28:33,220
we just talked about but still let's

709
00:28:33,220 --> 00:28:35,320
give them the benefit of the doubt now

710
00:28:35,320 --> 00:28:37,240
if you're gonna screw up a patch though

711
00:28:37,240 --> 00:28:39,570
that's really inexcusable and

712
00:28:39,570 --> 00:28:41,620
unfortunately Apple seems to have a

713
00:28:41,620 --> 00:28:44,470
history of bungling these patches now

714
00:28:44,470 --> 00:28:46,270
yes this is embarrassing to Apple but

715
00:28:46,270 --> 00:28:48,670
this also introduces a security risk

716
00:28:48,670 --> 00:28:51,130
because hackers can simply reverse

717
00:28:51,130 --> 00:28:54,190
engineer patches and see if Apple has

718
00:28:54,190 --> 00:28:56,860
correctly fixed the flaw and a lot of it

719
00:28:56,860 --> 00:28:58,540
a lot of times these flaws weren't

720
00:28:58,540 --> 00:29:00,190
previously known so when you reverse

721
00:29:00,190 --> 00:29:01,810
engineer the patch you say oh wow that

722
00:29:01,810 --> 00:29:03,340
was a really neat vulnerability that

723
00:29:03,340 --> 00:29:05,770
Apple found or was privately reported

724
00:29:05,770 --> 00:29:08,710
and if the patch does not correctly fix

725
00:29:08,710 --> 00:29:11,230
that issue you've now just given away a

726
00:29:11,230 --> 00:29:13,570
really powerful zero-day capability

727
00:29:13,570 --> 00:29:16,750
which hackers can and do then target Mac

728
00:29:16,750 --> 00:29:19,450
users a little secret I actually have a

729
00:29:19,450 --> 00:29:21,760
ton of CDs this is how I collect my CDs

730
00:29:21,760 --> 00:29:22,360
from Apple

731
00:29:22,360 --> 00:29:23,920
I just reverse engineer their patches

732
00:29:23,920 --> 00:29:26,410
they continually mess up how they fix

733
00:29:26,410 --> 00:29:28,510
those so then we report a vulnerability

734
00:29:28,510 --> 00:29:30,370
to Apple basically saying hey your patch

735
00:29:30,370 --> 00:29:32,680
is incomplete or I found another code

736
00:29:32,680 --> 00:29:35,350
patch path which allows me to exploit

737
00:29:35,350 --> 00:29:37,060
this vulnerability in another manner

738
00:29:37,060 --> 00:29:39,850
they will have to fix that as a CDE so

739
00:29:39,850 --> 00:29:41,890
again good to collect CVS but again from

740
00:29:41,890 --> 00:29:43,690
a security professional this really

741
00:29:43,690 --> 00:29:45,430
bothers me because it's really putting

742
00:29:45,430 --> 00:29:49,630
Mac users at risk another security issue

743
00:29:49,630 --> 00:29:51,610
lies in the fact that Apple does not

744
00:29:51,610 --> 00:29:53,830
validate apps in the Mac App Store even

745
00:29:53,830 --> 00:29:54,850
though they claim that this is the

746
00:29:54,850 --> 00:29:57,730
safest way to get software so recently

747
00:29:57,730 --> 00:29:59,560
we had a scenario where a top-grossing

748
00:29:59,560 --> 00:30:01,780
application it was number four in the

749
00:30:01,780 --> 00:30:03,610
Mac App Store number one for utilities

750
00:30:03,610 --> 00:30:06,760
meaning it was featured on apple.com had

751
00:30:06,760 --> 00:30:09,130
a very dirty secret when you read ran

752
00:30:09,130 --> 00:30:10,930
this application which again was from

753
00:30:10,930 --> 00:30:12,880
the official Mac App Store meaning had

754
00:30:12,880 --> 00:30:16,030
been validated and secured by Apple it

755
00:30:16,030 --> 00:30:18,520
would take your browsing history and

756
00:30:18,520 --> 00:30:20,890
exfiltrate it to a Chinese developer now

757
00:30:20,890 --> 00:30:22,180
I don't know about you and no offense

758
00:30:22,180 --> 00:30:23,680
the Chinese but I don't want them having

759
00:30:23,680 --> 00:30:26,260
access to my browsing history and the

760
00:30:26,260 --> 00:30:28,330
worst part about this at least again to

761
00:30:28,330 --> 00:30:30,010
me as a security professional we

762
00:30:30,010 --> 00:30:31,780
reported this vulnerability to Apple and

763
00:30:31,780 --> 00:30:33,640
they did nothing until we went to the

764
00:30:33,640 --> 00:30:35,170
media about a month later and Apple

765
00:30:35,170 --> 00:30:37,240
started getting all this bad press so

766
00:30:37,240 --> 00:30:38,890
with that within that month Apple didn't

767
00:30:38,890 --> 00:30:40,970
pull the app they didn't respond to our

768
00:30:40,970 --> 00:30:43,159
critiques what they did keep getting a

769
00:30:43,159 --> 00:30:46,730
30% cut from every sale so now I want to

770
00:30:46,730 --> 00:30:48,860
kind of switch gears and talk about some

771
00:30:48,860 --> 00:30:50,929
thoughts some musings because you know

772
00:30:50,929 --> 00:30:52,580
at this point I've hoped you were

773
00:30:52,580 --> 00:30:54,950
thinking like what's going on why are

774
00:30:54,950 --> 00:30:57,289
all their these these bugs these issues

775
00:30:57,289 --> 00:30:59,299
there's malware you know and an Apple is

776
00:30:59,299 --> 00:31:00,919
still claiming that these Macs are

777
00:31:00,919 --> 00:31:02,830
essentially unhackable

778
00:31:02,830 --> 00:31:05,240
so first let's see what the world's top

779
00:31:05,240 --> 00:31:08,090
Mac security researchers have to say and

780
00:31:08,090 --> 00:31:09,830
I'm not gonna read these because there's

781
00:31:09,830 --> 00:31:11,780
some swear words and some of them are

782
00:31:11,780 --> 00:31:14,659
pretty controversial but they're very

783
00:31:14,659 --> 00:31:16,100
interesting at least they're very

784
00:31:16,100 --> 00:31:18,650
interesting to me and even if we assume

785
00:31:18,650 --> 00:31:20,690
that these security researchers are

786
00:31:20,690 --> 00:31:22,970
completely incorrect in these claims

787
00:31:22,970 --> 00:31:26,059
which they are not Apple still has an

788
00:31:26,059 --> 00:31:28,610
issue if all the world's top third party

789
00:31:28,610 --> 00:31:30,830
Mac security researchers have these

790
00:31:30,830 --> 00:31:33,049
views of Apple so clearly something is

791
00:31:33,049 --> 00:31:36,980
going on now to me at least one of

792
00:31:36,980 --> 00:31:39,169
life's secrets to understanding a

793
00:31:39,169 --> 00:31:41,330
situation is really to understand or

794
00:31:41,330 --> 00:31:43,940
uncover the motivations behind why a

795
00:31:43,940 --> 00:31:46,460
company why a person why a software why

796
00:31:46,460 --> 00:31:47,990
are they doing what they do and for

797
00:31:47,990 --> 00:31:50,659
Apple this is a little tough to do at

798
00:31:50,659 --> 00:31:52,730
first because they tell us things like

799
00:31:52,730 --> 00:31:54,980
we deeply care about our users and

800
00:31:54,980 --> 00:31:58,070
privacy and security is paramount and I

801
00:31:58,070 --> 00:32:00,140
actually believe that they believe this

802
00:32:00,140 --> 00:32:02,600
as well but if we take a closer look at

803
00:32:02,600 --> 00:32:05,600
their actions they oftentimes don't back

804
00:32:05,600 --> 00:32:08,960
up these claims which is confusing but

805
00:32:08,960 --> 00:32:11,510
actually in reality it's really not you

806
00:32:11,510 --> 00:32:13,309
have to understand that Apple is a

807
00:32:13,309 --> 00:32:15,740
publicly traded company and in the u.s.

808
00:32:15,740 --> 00:32:19,850
by law companies have to do what's best

809
00:32:19,850 --> 00:32:22,520
for their shareholders not their users

810
00:32:22,520 --> 00:32:24,500
this is not consume some conspiracy this

811
00:32:24,500 --> 00:32:26,270
is fact and again there's recent case

812
00:32:26,270 --> 00:32:27,650
law that backs this up

813
00:32:27,650 --> 00:32:30,380
so when privacy and security means

814
00:32:30,380 --> 00:32:32,720
there's more sales Apple will gladly

815
00:32:32,720 --> 00:32:35,539
follow that route but when China says

816
00:32:35,539 --> 00:32:37,940
hey no more VPN applications in the Mac

817
00:32:37,940 --> 00:32:40,429
store or all Mac sales are coming to an

818
00:32:40,429 --> 00:32:43,039
end who do you think Apple chooses users

819
00:32:43,039 --> 00:32:45,049
or their shareholders their shareholders

820
00:32:45,049 --> 00:32:47,900
again this is by law they have to do

821
00:32:47,900 --> 00:32:49,640
this if they do not do this their

822
00:32:49,640 --> 00:32:52,159
shareholders will sue them and likely

823
00:32:52,159 --> 00:32:54,710
will win now again I don't really have a

824
00:32:54,710 --> 00:32:56,210
problem with companies trying to make

825
00:32:56,210 --> 00:32:57,190
the most money for their shareholders

826
00:32:57,190 --> 00:32:59,480
but when they're telling us that this is

827
00:32:59,480 --> 00:33:01,220
not the case but their actions speak

828
00:33:01,220 --> 00:33:03,049
otherwise personally I think that's

829
00:33:03,049 --> 00:33:06,230
misleading so now let's kind of look at

830
00:33:06,230 --> 00:33:07,880
what another company does because

831
00:33:07,880 --> 00:33:09,620
although I don't have any Microsoft

832
00:33:09,620 --> 00:33:11,539
products I love my Apple products to

833
00:33:11,539 --> 00:33:13,730
death it's really interesting to see how

834
00:33:13,730 --> 00:33:16,940
they approach security and interestingly

835
00:33:16,940 --> 00:33:19,549
if you care about security more than

836
00:33:19,549 --> 00:33:20,809
anything else you should probably be

837
00:33:20,809 --> 00:33:22,789
using a Windows Device and maybe this is

838
00:33:22,789 --> 00:33:25,580
why Jonathan had a Windows device when

839
00:33:25,580 --> 00:33:28,520
he was giving his presentation so

840
00:33:28,520 --> 00:33:30,980
Microsoft has embraced the fact that any

841
00:33:30,980 --> 00:33:33,260
software is going to have our abilities

842
00:33:33,260 --> 00:33:36,220
it's actually very emotionally mature

843
00:33:36,220 --> 00:33:38,960
stance to take so once they've accepted

844
00:33:38,960 --> 00:33:41,090
this fact they take a lot of actions

845
00:33:41,090 --> 00:33:43,010
that have really positive things for

846
00:33:43,010 --> 00:33:44,750
their end users for example they host

847
00:33:44,750 --> 00:33:46,580
their own security conference where they

848
00:33:46,580 --> 00:33:48,470
invite hackers who have hacked their

849
00:33:48,470 --> 00:33:50,299
products to give talks and then they

850
00:33:50,299 --> 00:33:52,490
listen and learn they also have very

851
00:33:52,490 --> 00:33:54,649
detailed reports articulating and

852
00:33:54,649 --> 00:33:56,600
detailing the exploits against their

853
00:33:56,600 --> 00:33:58,610
system how those exploits are working

854
00:33:58,610 --> 00:34:00,500
and what malware is attacking their

855
00:34:00,500 --> 00:34:03,140
systems they also have comprehensive bug

856
00:34:03,140 --> 00:34:04,940
bounty programs and a really solid

857
00:34:04,940 --> 00:34:06,559
relationship with external researchers

858
00:34:06,559 --> 00:34:09,379
in the outside community and the end

859
00:34:09,379 --> 00:34:11,540
result of this is that the security of

860
00:34:11,540 --> 00:34:13,520
these systems in modern Windows systems

861
00:34:13,520 --> 00:34:16,129
is actually incredible the type of bugs

862
00:34:16,129 --> 00:34:18,139
that are reported are often very very

863
00:34:18,139 --> 00:34:20,179
sophisticated the low-hanging fruits we

864
00:34:20,179 --> 00:34:22,668
see on Mac OS are rarely similar on

865
00:34:22,668 --> 00:34:25,489
Windows and often now we also see

866
00:34:25,489 --> 00:34:27,889
exploit prices for Windows continuing

867
00:34:27,889 --> 00:34:31,489
continuing to increase now in my opinion

868
00:34:31,489 --> 00:34:34,820
Apple has some room to improve first

869
00:34:34,820 --> 00:34:36,469
they are the complete opposite of

870
00:34:36,469 --> 00:34:38,719
transparent so a great example of this

871
00:34:38,719 --> 00:34:42,949
is MRT MRT is malware is Apple's malware

872
00:34:42,949 --> 00:34:45,050
removal tool and this is built into

873
00:34:45,050 --> 00:34:46,639
every version of Mac OS this is not

874
00:34:46,639 --> 00:34:48,109
something that Apple even talks about

875
00:34:48,109 --> 00:34:49,520
because talking about it would be

876
00:34:49,520 --> 00:34:51,500
admitting that Mac's get malware which

877
00:34:51,500 --> 00:34:53,359
from a sales point of view is not

878
00:34:53,359 --> 00:34:56,030
something they want to readily omit you

879
00:34:56,030 --> 00:34:57,589
know security research as though we know

880
00:34:57,589 --> 00:34:58,790
that there's there's there's this

881
00:34:58,790 --> 00:35:00,920
product and the issue is at least with

882
00:35:00,920 --> 00:35:03,560
transparency is anytime a new piece of

883
00:35:03,560 --> 00:35:05,450
Mac malware comes out that Apple

884
00:35:05,450 --> 00:35:07,190
uncovers and they cover a lot because

885
00:35:07,190 --> 00:35:07,730
they

886
00:35:07,730 --> 00:35:10,070
a lot of insight into max all over the

887
00:35:10,070 --> 00:35:12,710
world they release a new signature for

888
00:35:12,710 --> 00:35:15,170
that and name the malware the problem is

889
00:35:15,170 --> 00:35:17,480
they don't talk to the outside security

890
00:35:17,480 --> 00:35:20,060
community or the antivirus community as

891
00:35:20,060 --> 00:35:21,109
far as I know and I have a lot of

892
00:35:21,109 --> 00:35:22,820
friends in the antivirus Computer

893
00:35:22,820 --> 00:35:24,380
community who confirm this

894
00:35:24,380 --> 00:35:26,780
so as security professionals and AV

895
00:35:26,780 --> 00:35:28,820
companies who are trying to protect Mac

896
00:35:28,820 --> 00:35:30,770
users we are completely left in the dark

897
00:35:30,770 --> 00:35:32,930
we go to Apple and say hey look we know

898
00:35:32,930 --> 00:35:34,760
you found some new Mac malware because

899
00:35:34,760 --> 00:35:36,590
there's these new strings and signatures

900
00:35:36,590 --> 00:35:38,900
in this product and file you don't

901
00:35:38,900 --> 00:35:40,700
really talk about please tell us more

902
00:35:40,700 --> 00:35:42,230
and they don't so it's really

903
00:35:42,230 --> 00:35:44,480
frustrating they also never talked to

904
00:35:44,480 --> 00:35:46,609
the media their patches that we as we

905
00:35:46,609 --> 00:35:48,770
saw often have issues which in my

906
00:35:48,770 --> 00:35:51,500
opinion puts Mac users at risk they

907
00:35:51,500 --> 00:35:53,480
don't have a Mac OS bug bounty program

908
00:35:53,480 --> 00:35:55,640
and even in the recent versions of their

909
00:35:55,640 --> 00:35:57,530
operating system we keep finding these

910
00:35:57,530 --> 00:35:59,930
bugs that are just like mind-numbing ly

911
00:35:59,930 --> 00:36:02,090
simple my opinion I think it's just

912
00:36:02,090 --> 00:36:03,260
because they spend more money on

913
00:36:03,260 --> 00:36:06,020
marketing than on security and the end

914
00:36:06,020 --> 00:36:08,750
result is that Mac computers are far

915
00:36:08,750 --> 00:36:11,090
easier to hack than recent versions of

916
00:36:11,090 --> 00:36:12,800
Windows there is a huge silver lining

917
00:36:12,800 --> 00:36:15,220
which is I have great great job security

918
00:36:15,220 --> 00:36:19,160
and you know why is this all a problem

919
00:36:19,160 --> 00:36:20,900
who cares of Apple is telling people

920
00:36:20,900 --> 00:36:23,090
that Macs are more secure when this not

921
00:36:23,090 --> 00:36:25,550
is not as this is not the case and I

922
00:36:25,550 --> 00:36:27,140
love this quote because it really

923
00:36:27,140 --> 00:36:29,570
succinctly articulates the problem and

924
00:36:29,570 --> 00:36:32,180
basically shows that many people and you

925
00:36:32,180 --> 00:36:34,130
talk to non security professionals even

926
00:36:34,130 --> 00:36:36,230
users in your organization's will

927
00:36:36,230 --> 00:36:38,630
fervently believe that their Mac's are

928
00:36:38,630 --> 00:36:41,930
incredibly secure and this is a really

929
00:36:41,930 --> 00:36:45,230
detrimental because it gives a sense of

930
00:36:45,230 --> 00:36:47,480
complacency which makes them actually

931
00:36:47,480 --> 00:36:49,160
more vulnerable to threats and trends

932
00:36:49,160 --> 00:36:51,619
and a perfect example of this is fruit

933
00:36:51,619 --> 00:36:54,050
fly so as I mentioned for over 12 years

934
00:36:54,050 --> 00:36:56,740
fruit fly was infecting Mac computers

935
00:36:56,740 --> 00:37:00,530
around the u.s. and spying on victims

936
00:37:00,530 --> 00:37:02,900
mostly children through the webcam again

937
00:37:02,900 --> 00:37:05,869
largely because Mac users were naive and

938
00:37:05,869 --> 00:37:07,640
I think Apple has some responsibility in

939
00:37:07,640 --> 00:37:09,890
this as well and so here's kind of an

940
00:37:09,890 --> 00:37:11,330
interesting story which to me really

941
00:37:11,330 --> 00:37:14,330
Illustrated with striking clarity apples

942
00:37:14,330 --> 00:37:17,630
kind of approach to security so I gave a

943
00:37:17,630 --> 00:37:19,520
talk at Def Con about fruit fly from a

944
00:37:19,520 --> 00:37:20,940
technical point of view

945
00:37:20,940 --> 00:37:22,319
and at that time there was an ongoing

946
00:37:22,319 --> 00:37:25,050
investigation with the FBI that Apple

947
00:37:25,050 --> 00:37:27,839
and myself were involved with so as

948
00:37:27,839 --> 00:37:29,640
paramount for me not to compromise that

949
00:37:29,640 --> 00:37:32,270
investigation and also not to reveal any

950
00:37:32,270 --> 00:37:34,410
information about the victims for

951
00:37:34,410 --> 00:37:36,630
privacy concerns largely because most of

952
00:37:36,630 --> 00:37:39,240
them were children so after my talk I

953
00:37:39,240 --> 00:37:40,859
kind of got some negative communications

954
00:37:40,859 --> 00:37:43,680
from individual Apple basically saying

955
00:37:43,680 --> 00:37:45,869
you know giving me grief about my talk

956
00:37:45,869 --> 00:37:48,329
and my first reaction was to assume that

957
00:37:48,329 --> 00:37:49,770
this was because I had said something

958
00:37:49,770 --> 00:37:51,329
that would compromise the investigation

959
00:37:51,329 --> 00:37:54,060
or perhaps undermine the privacy of the

960
00:37:54,060 --> 00:37:56,579
victims however this did not turn out to

961
00:37:56,579 --> 00:37:59,430
be the case as we can see on the capture

962
00:37:59,430 --> 00:38:01,349
of the text messages they basically said

963
00:38:01,349 --> 00:38:02,730
we don't give a about the

964
00:38:02,730 --> 00:38:05,369
investigation we only care about the bad

965
00:38:05,369 --> 00:38:07,650
press because we do not think that this

966
00:38:07,650 --> 00:38:10,260
is a case that has any interest and

967
00:38:10,260 --> 00:38:13,290
that's me really bothered me I was like

968
00:38:13,290 --> 00:38:15,599
here you have an individual that for

969
00:38:15,599 --> 00:38:18,030
over a decade was spying on children and

970
00:38:18,030 --> 00:38:19,710
you don't think this is something that

971
00:38:19,710 --> 00:38:21,420
we should be talking about obviously

972
00:38:21,420 --> 00:38:22,950
there's other people out there that are

973
00:38:22,950 --> 00:38:24,540
equally creepy that are doing these

974
00:38:24,540 --> 00:38:27,210
horrible insidious things and we need to

975
00:38:27,210 --> 00:38:30,300
have a mature discussion about this so

976
00:38:30,300 --> 00:38:33,329
that parents and childrens can be aware

977
00:38:33,329 --> 00:38:34,829
of these risks and then adequate

978
00:38:34,829 --> 00:38:36,990
adequately mitigate this so this was

979
00:38:36,990 --> 00:38:39,210
really you know really impacted me from

980
00:38:39,210 --> 00:38:40,800
a negative point of view that again and

981
00:38:40,800 --> 00:38:42,720
this individual who may not speak for

982
00:38:42,720 --> 00:38:45,210
Apple proper really said no the only

983
00:38:45,210 --> 00:38:46,619
reason we care about this is because we

984
00:38:46,619 --> 00:38:50,609
are getting bad press okay so now let's

985
00:38:50,609 --> 00:38:52,500
gets back to some technical stuff let's

986
00:38:52,500 --> 00:38:54,510
talk about some protections starting

987
00:38:54,510 --> 00:38:56,849
with Moe hobbies because clearly we need

988
00:38:56,849 --> 00:38:59,910
some built-in protections to make sure

989
00:38:59,910 --> 00:39:03,480
that our Macs are not hacked all day so

990
00:39:03,480 --> 00:39:05,099
in Mohave Apple has actually done a lot

991
00:39:05,099 --> 00:39:06,569
of things and they're really moving the

992
00:39:06,569 --> 00:39:09,599
bar in the right right direction so

993
00:39:09,599 --> 00:39:11,369
first and foremost they have really kind

994
00:39:11,369 --> 00:39:14,280
of tried to step up improving privacy

995
00:39:14,280 --> 00:39:15,750
protections and we've shown there's

996
00:39:15,750 --> 00:39:17,400
still some issues but again they're

997
00:39:17,400 --> 00:39:19,950
moving in the right direction so now for

998
00:39:19,950 --> 00:39:22,800
example applications or binaries who

999
00:39:22,800 --> 00:39:25,410
want to access the camera or mic will

1000
00:39:25,410 --> 00:39:27,569
generate and alert this is actually a

1001
00:39:27,569 --> 00:39:29,460
really good idea because there is a ton

1002
00:39:29,460 --> 00:39:31,950
of Mac malware that attempts to spy on

1003
00:39:31,950 --> 00:39:33,330
its users the

1004
00:39:33,330 --> 00:39:36,240
the webcam or the microphone so if we

1005
00:39:36,240 --> 00:39:38,430
look at how this is implemented we can

1006
00:39:38,430 --> 00:39:40,760
see that when a binary or an application

1007
00:39:40,760 --> 00:39:43,590
wants to gain access to the mic or the

1008
00:39:43,590 --> 00:39:45,930
webcam the operating system will block

1009
00:39:45,930 --> 00:39:49,380
this request and then check if the

1010
00:39:49,380 --> 00:39:52,380
application is either entitled or has an

1011
00:39:52,380 --> 00:39:54,270
entry in the privacy database that

1012
00:39:54,270 --> 00:39:56,850
allows it obviously if it's a new

1013
00:39:56,850 --> 00:39:58,770
application or a new binary it's not

1014
00:39:58,770 --> 00:40:00,150
gonna have entitlements because these

1015
00:40:00,150 --> 00:40:02,820
entitlements are Apple specific and also

1016
00:40:02,820 --> 00:40:04,020
it's not going to be in the privacy

1017
00:40:04,020 --> 00:40:05,430
database because it has never been run

1018
00:40:05,430 --> 00:40:07,290
before so this is really good there's

1019
00:40:07,290 --> 00:40:09,300
gonna be a block a pop-up and again the

1020
00:40:09,300 --> 00:40:10,950
system will block it until the user

1021
00:40:10,950 --> 00:40:14,940
clicks allow in Mojave Apple has also

1022
00:40:14,940 --> 00:40:18,090
introduced code to block synthetic

1023
00:40:18,090 --> 00:40:20,220
events which again is a really good idea

1024
00:40:20,220 --> 00:40:22,910
now this does have some impacts to

1025
00:40:22,910 --> 00:40:25,140
usability but from a security point of

1026
00:40:25,140 --> 00:40:28,320
view this is a plus so as we can see on

1027
00:40:28,320 --> 00:40:30,420
the slide if we now execute code to

1028
00:40:30,420 --> 00:40:32,790
generate a synthetic mouse click while

1029
00:40:32,790 --> 00:40:35,100
this would have worked without being

1030
00:40:35,100 --> 00:40:37,800
blocked on previous versions of Mac OS

1031
00:40:37,800 --> 00:40:40,740
on Mojave this will generate and alert

1032
00:40:40,740 --> 00:40:42,660
and will be blocked until the user

1033
00:40:42,660 --> 00:40:44,580
basically confirms the application

1034
00:40:44,580 --> 00:40:46,770
similarly if we try to generate a

1035
00:40:46,770 --> 00:40:49,110
synthetic key press this will similarly

1036
00:40:49,110 --> 00:40:54,360
be blocked in Mojave Apple has often has

1037
00:40:54,360 --> 00:40:56,490
also introduced the notion of Apple

1038
00:40:56,490 --> 00:40:58,770
event sandboxing security researcher

1039
00:40:58,770 --> 00:41:00,510
named Felix really dove into this and

1040
00:41:00,510 --> 00:41:03,330
describes how it how it all works so I

1041
00:41:03,330 --> 00:41:05,070
would check out his blog if this is of

1042
00:41:05,070 --> 00:41:07,350
interest into you basically though as

1043
00:41:07,350 --> 00:41:10,470
Felix Notes applications now also have

1044
00:41:10,470 --> 00:41:13,710
to have approval before they can send

1045
00:41:13,710 --> 00:41:16,230
Apple events to other processes and this

1046
00:41:16,230 --> 00:41:18,210
is a good idea again from a security

1047
00:41:18,210 --> 00:41:21,140
point of view because in the past

1048
00:41:21,140 --> 00:41:23,250
applications could basically send events

1049
00:41:23,250 --> 00:41:25,110
to other processes telling them to

1050
00:41:25,110 --> 00:41:27,750
perform actions on their behalf again

1051
00:41:27,750 --> 00:41:29,670
though these things always do impact

1052
00:41:29,670 --> 00:41:32,280
usability so I read a tool called block

1053
00:41:32,280 --> 00:41:33,870
walk and we'll talk about this briefly

1054
00:41:33,870 --> 00:41:36,480
more that monitors for persistence and

1055
00:41:36,480 --> 00:41:38,790
when it detects a malicious persistence

1056
00:41:38,790 --> 00:41:40,770
attempt it will block and delete that

1057
00:41:40,770 --> 00:41:43,350
persistent item and for login items it

1058
00:41:43,350 --> 00:41:45,300
does this by sending

1059
00:41:45,300 --> 00:41:47,910
Apple event a Mojave because Apple's new

1060
00:41:47,910 --> 00:41:50,130
security protections this security tool

1061
00:41:50,130 --> 00:41:53,010
is now broken so this is understandably

1062
00:41:53,010 --> 00:41:54,660
from Apple's point of view kind of

1063
00:41:54,660 --> 00:41:56,370
difficult because sometimes their

1064
00:41:56,370 --> 00:41:58,620
security improvements break security

1065
00:41:58,620 --> 00:42:00,900
tools and again the problem is if these

1066
00:42:00,900 --> 00:42:03,210
security protections are not implemented

1067
00:42:03,210 --> 00:42:05,160
in a secure manner which often they are

1068
00:42:05,160 --> 00:42:07,410
not security tools are going to be

1069
00:42:07,410 --> 00:42:09,150
broken but hackers are still going to

1070
00:42:09,150 --> 00:42:12,630
have a way to bypass all of this finally

1071
00:42:12,630 --> 00:42:14,760
we've got at notification this is a new

1072
00:42:14,760 --> 00:42:17,160
thing in Mojave which is another great

1073
00:42:17,160 --> 00:42:19,650
security improvement so one issue that

1074
00:42:19,650 --> 00:42:23,070
Mac OS faces is that most Mac malware is

1075
00:42:23,070 --> 00:42:26,100
signed and a lot of Apple's defenses

1076
00:42:26,100 --> 00:42:28,440
basically allow a sign code for example

1077
00:42:28,440 --> 00:42:30,300
gatekeeper if you have an application

1078
00:42:30,300 --> 00:42:32,310
that is signed with the developer ID in

1079
00:42:32,310 --> 00:42:34,380
its default settings gatekeeper will not

1080
00:42:34,380 --> 00:42:36,210
block that from running so this is why

1081
00:42:36,210 --> 00:42:38,700
obviously now are off there's steal or

1082
00:42:38,700 --> 00:42:41,130
fraudulently obtained signing

1083
00:42:41,130 --> 00:42:43,140
certificates however with app

1084
00:42:43,140 --> 00:42:45,450
notification which is opted in for now

1085
00:42:45,450 --> 00:42:48,150
but in the future will be required what

1086
00:42:48,150 --> 00:42:51,180
Apple does is both scan or examine the

1087
00:42:51,180 --> 00:42:54,480
signing cert and the application so in

1088
00:42:54,480 --> 00:42:56,610
theory they can basically say okay yes

1089
00:42:56,610 --> 00:42:58,980
this is validly signed but this is

1090
00:42:58,980 --> 00:43:01,530
actually malware and and blocking so

1091
00:43:01,530 --> 00:43:02,910
again it gives more insight into what

1092
00:43:02,910 --> 00:43:05,610
the malware may be doing and shuts down

1093
00:43:05,610 --> 00:43:07,680
a big attack vector that's currently

1094
00:43:07,680 --> 00:43:11,580
used Mojave also supports the concept of

1095
00:43:11,580 --> 00:43:13,980
a hardened runtime which means that

1096
00:43:13,980 --> 00:43:16,740
third-party application developers can

1097
00:43:16,740 --> 00:43:18,780
compile their apps to thwart of a

1098
00:43:18,780 --> 00:43:21,660
variety of runtime attacks so for

1099
00:43:21,660 --> 00:43:23,600
example with the harden runtime

1100
00:43:23,600 --> 00:43:26,070
applications can now be protected from

1101
00:43:26,070 --> 00:43:28,500
things like code injection attacks again

1102
00:43:28,500 --> 00:43:29,700
this is a really good idea if you're

1103
00:43:29,700 --> 00:43:32,220
implementing a security tool it's likely

1104
00:43:32,220 --> 00:43:34,740
that if it's popular enough malware will

1105
00:43:34,740 --> 00:43:36,630
eventually look for that tool and at

1106
00:43:36,630 --> 00:43:39,540
runtime try to you know inject code into

1107
00:43:39,540 --> 00:43:41,310
it or perhaps shut it down before it

1108
00:43:41,310 --> 00:43:43,500
performs some malicious actions but if

1109
00:43:43,500 --> 00:43:45,270
you're using app notarization and have

1110
00:43:45,270 --> 00:43:47,580
opted into the hardened runtime which

1111
00:43:47,580 --> 00:43:50,220
Apple offers on Mojave you basically get

1112
00:43:50,220 --> 00:43:52,110
a nice level of self-defense and

1113
00:43:52,110 --> 00:43:56,430
protection for your tool now since as we

1114
00:43:56,430 --> 00:43:58,990
mentioned Apple has to balance usability

1115
00:43:58,990 --> 00:44:01,630
and security sometimes generally they

1116
00:44:01,630 --> 00:44:04,090
err on the side of usability which means

1117
00:44:04,090 --> 00:44:06,550
that sometimes things aren't as secure

1118
00:44:06,550 --> 00:44:07,660
as we would like

1119
00:44:07,660 --> 00:44:09,970
so third-party tools and protections in

1120
00:44:09,970 --> 00:44:12,160
my opinion still play in a very

1121
00:44:12,160 --> 00:44:15,880
important role so it's wise to assume as

1122
00:44:15,880 --> 00:44:17,980
Ritchie alluded to yesterday that if you

1123
00:44:17,980 --> 00:44:20,440
own a Mac computer or if you manage Mac

1124
00:44:20,440 --> 00:44:22,840
computers at some point some of them

1125
00:44:22,840 --> 00:44:25,260
will get hacked

1126
00:44:25,260 --> 00:44:26,920
unfortunately traditional antivirus

1127
00:44:26,920 --> 00:44:29,410
products may not detect this fruit-fly

1128
00:44:29,410 --> 00:44:31,600
being and the perfect example thirteen

1129
00:44:31,600 --> 00:44:34,150
years wasn't detected at all so in my

1130
00:44:34,150 --> 00:44:36,100
opinion the best bet is to detect

1131
00:44:36,100 --> 00:44:38,350
infections by looking for malicious

1132
00:44:38,350 --> 00:44:40,390
actions and the analogy I like to give

1133
00:44:40,390 --> 00:44:42,340
is when you get the flu or when you get

1134
00:44:42,340 --> 00:44:44,560
a cold so every year winter comes around

1135
00:44:44,560 --> 00:44:46,390
even in Hawaii and people get the flu

1136
00:44:46,390 --> 00:44:48,190
and every year the flu is new which

1137
00:44:48,190 --> 00:44:49,690
means every year you have to go get a

1138
00:44:49,690 --> 00:44:52,720
flu shot now you can kind of know that

1139
00:44:52,720 --> 00:44:54,520
you're sick without even knowing it's

1140
00:44:54,520 --> 00:44:55,960
the flu right if you have a runny nose

1141
00:44:55,960 --> 00:44:57,100
cold

1142
00:44:57,100 --> 00:44:59,650
stuffy throat etc etc you know that

1143
00:44:59,650 --> 00:45:01,300
something is wrong so we can take this

1144
00:45:01,300 --> 00:45:02,710
analogy and we can apply this to

1145
00:45:02,710 --> 00:45:05,320
generically detecting malware we can

1146
00:45:05,320 --> 00:45:07,600
look for the actions that malware do for

1147
00:45:07,600 --> 00:45:10,630
example persisting spying encrypting

1148
00:45:10,630 --> 00:45:12,820
ransoming files or exfiltrating data and

1149
00:45:12,820 --> 00:45:15,430
say okay we don't really even care what

1150
00:45:15,430 --> 00:45:18,760
the Maur is specifically but we

1151
00:45:18,760 --> 00:45:20,320
basically just care that some malicious

1152
00:45:20,320 --> 00:45:22,930
actions are occurring so let's talk

1153
00:45:22,930 --> 00:45:25,150
about how we can kind of do this so

1154
00:45:25,150 --> 00:45:26,800
first let's talk about persistence as

1155
00:45:26,800 --> 00:45:28,720
many of the presentations we heard at

1156
00:45:28,720 --> 00:45:30,970
this conference alluded to or discussed

1157
00:45:30,970 --> 00:45:33,580
essentially all Mauer is going to

1158
00:45:33,580 --> 00:45:35,980
persist and in the context of these

1159
00:45:35,980 --> 00:45:38,080
talks in this presentation persistence

1160
00:45:38,080 --> 00:45:40,570
means a way that malware can install

1161
00:45:40,570 --> 00:45:42,760
itself so that it will be automatically

1162
00:45:42,760 --> 00:45:44,859
reacts acute Adeiny time the operating

1163
00:45:44,859 --> 00:45:47,080
system starts since there's a finite

1164
00:45:47,080 --> 00:45:49,470
number of ways that malware can persist

1165
00:45:49,470 --> 00:45:51,700
let's just monitor those as a way to

1166
00:45:51,700 --> 00:45:53,470
generically detect malware when it

1167
00:45:53,470 --> 00:45:56,260
installs so the first tool I wrote is

1168
00:45:56,260 --> 00:45:58,359
knock-knock it's kind of like Auto runs

1169
00:45:58,359 --> 00:46:00,580
for Windows and what it does is it just

1170
00:46:00,580 --> 00:46:03,460
persistently rather enumerates all the

1171
00:46:03,460 --> 00:46:05,440
persistence location and tells you

1172
00:46:05,440 --> 00:46:08,650
what's there so legitimate software can

1173
00:46:08,650 --> 00:46:10,720
persist to for example Google Chrome's

1174
00:46:10,720 --> 00:46:12,080
updater and

1175
00:46:12,080 --> 00:46:14,540
a virus product etc etc but if there's

1176
00:46:14,540 --> 00:46:16,280
persistent malware on your system it

1177
00:46:16,280 --> 00:46:17,750
will show up here as well

1178
00:46:17,750 --> 00:46:19,850
so again when I get a call from friends

1179
00:46:19,850 --> 00:46:21,320
saying their computer is infected this

1180
00:46:21,320 --> 00:46:23,240
is generally the first tool I run

1181
00:46:23,240 --> 00:46:25,400
because it'll show me a list of about 10

1182
00:46:25,400 --> 00:46:27,890
files that are persisted on the system

1183
00:46:27,890 --> 00:46:30,170
and then very quickly I can say ok this

1184
00:46:30,170 --> 00:46:31,910
is Chrome you know it's signed by Chrome

1185
00:46:31,910 --> 00:46:34,370
this is Spotify you know but what is

1186
00:46:34,370 --> 00:46:36,320
this unsign process called you know

1187
00:46:36,320 --> 00:46:38,540
Adobe Flash updater and then I can go

1188
00:46:38,540 --> 00:46:39,830
and looking at and more than likely

1189
00:46:39,830 --> 00:46:43,190
that's an hour now a knock knock was

1190
00:46:43,190 --> 00:46:44,930
good but the problem is its reactive it

1191
00:46:44,930 --> 00:46:46,460
really doesn't provide any real-time

1192
00:46:46,460 --> 00:46:48,260
protection so I wanted something that

1193
00:46:48,260 --> 00:46:50,750
was a little more comprehensive so next

1194
00:46:50,750 --> 00:46:52,370
to I wrote was called block block and

1195
00:46:52,370 --> 00:46:55,070
block block monitors the locations that

1196
00:46:55,070 --> 00:46:57,680
knock-knock enumerates and any time

1197
00:46:57,680 --> 00:47:00,980
software persists itself block block

1198
00:47:00,980 --> 00:47:03,410
will alert the user so it doesn't try to

1199
00:47:03,410 --> 00:47:05,210
say if something is malicious or not by

1200
00:47:05,210 --> 00:47:06,650
design it just said hey something

1201
00:47:06,650 --> 00:47:08,630
persisted and if you're running an

1202
00:47:08,630 --> 00:47:10,700
installer from a trusted source you can

1203
00:47:10,700 --> 00:47:12,500
click allow but if you opened a word

1204
00:47:12,500 --> 00:47:14,300
document and all of a sudden block block

1205
00:47:14,300 --> 00:47:15,860
says hey just to let you know that word

1206
00:47:15,860 --> 00:47:18,650
document persisted a cron job this is

1207
00:47:18,650 --> 00:47:20,480
probably a likely indication that that

1208
00:47:20,480 --> 00:47:22,550
word document had a vulnerability or a

1209
00:47:22,550 --> 00:47:24,860
weaponized exploit and the power of

1210
00:47:24,860 --> 00:47:27,170
knock knock is since its release it has

1211
00:47:27,170 --> 00:47:29,750
been able to detect every piece of Mac

1212
00:47:29,750 --> 00:47:31,760
malware that has come out after it when

1213
00:47:31,760 --> 00:47:34,970
that malware goes to persist another

1214
00:47:34,970 --> 00:47:37,100
tool I wrote is called oversight and it

1215
00:47:37,100 --> 00:47:39,320
generically detects when any application

1216
00:47:39,320 --> 00:47:42,290
or code accesses the webcam so yes it's

1217
00:47:42,290 --> 00:47:44,300
designed to detect things like fruit fly

1218
00:47:44,300 --> 00:47:47,870
when it tries to spy on people but it

1219
00:47:47,870 --> 00:47:50,030
can also and does detect when legitimate

1220
00:47:50,030 --> 00:47:52,580
applications do surreptitious things so

1221
00:47:52,580 --> 00:47:54,530
at a user contact me saying hey I used

1222
00:47:54,530 --> 00:47:56,660
to zaman my Mac and I think your

1223
00:47:56,660 --> 00:47:58,070
application might have a bug because

1224
00:47:58,070 --> 00:48:00,170
when I turn Shazam off your application

1225
00:48:00,170 --> 00:48:02,390
does not tell me that the mic is turned

1226
00:48:02,390 --> 00:48:03,080
off as well

1227
00:48:03,080 --> 00:48:04,760
well I reverse engineered jamming it

1228
00:48:04,760 --> 00:48:06,290
turns out that Shazam was still

1229
00:48:06,290 --> 00:48:07,760
listening to you even when you turned it

1230
00:48:07,760 --> 00:48:10,130
off so again by using these generic

1231
00:48:10,130 --> 00:48:12,230
detections we have a very powerful way

1232
00:48:12,230 --> 00:48:14,720
to detect both malware and legitimate

1233
00:48:14,720 --> 00:48:17,710
applications that are doing shady things

1234
00:48:17,710 --> 00:48:19,730
ransomware is another thing that we can

1235
00:48:19,730 --> 00:48:22,130
generically detect because if you think

1236
00:48:22,130 --> 00:48:24,410
about it ransomware is going to rapidly

1237
00:48:24,410 --> 00:48:25,590
encrypt you

1238
00:48:25,590 --> 00:48:27,120
or files this is not something that

1239
00:48:27,120 --> 00:48:29,370
normally happens on an everyday basis

1240
00:48:29,370 --> 00:48:31,590
especially from an untrusted process

1241
00:48:31,590 --> 00:48:34,410
that's likely from the internet so it's

1242
00:48:34,410 --> 00:48:36,390
very easy to write a generic algorithm

1243
00:48:36,390 --> 00:48:38,190
that can monitor the file system for the

1244
00:48:38,190 --> 00:48:40,350
rapid creation of encrypted files by

1245
00:48:40,350 --> 00:48:42,570
untrusted processes so we have

1246
00:48:42,570 --> 00:48:44,280
ransomware which is the name of the tool

1247
00:48:44,280 --> 00:48:46,470
and again since its release all the

1248
00:48:46,470 --> 00:48:48,690
public Mac ransomware that has come out

1249
00:48:48,690 --> 00:48:50,400
it has been able to generically detect

1250
00:48:50,400 --> 00:48:52,620
had no a priori knowledge of that

1251
00:48:52,620 --> 00:48:54,720
ransomware but again because it uses

1252
00:48:54,720 --> 00:48:56,730
this heuristic detection it can

1253
00:48:56,730 --> 00:49:00,090
generically detect them finally we have

1254
00:49:00,090 --> 00:49:02,610
Lulu Lulu is a free open-source firewall

1255
00:49:02,610 --> 00:49:04,440
for Mac OS I'm sure you're very familiar

1256
00:49:04,440 --> 00:49:06,510
with Little Snitch and other commercial

1257
00:49:06,510 --> 00:49:07,980
products those are great products but

1258
00:49:07,980 --> 00:49:09,270
they cost a lot of money and their

1259
00:49:09,270 --> 00:49:11,340
source code is not available I thought

1260
00:49:11,340 --> 00:49:13,010
it'd be great to have a free open source

1261
00:49:13,010 --> 00:49:15,990
alternative and in terms of malware this

1262
00:49:15,990 --> 00:49:17,730
is a very powerful tool because

1263
00:49:17,730 --> 00:49:19,440
essentially all malware is going to

1264
00:49:19,440 --> 00:49:21,900
either Excel trait data or connect to a

1265
00:49:21,900 --> 00:49:24,060
command and control server for tasking

1266
00:49:24,060 --> 00:49:26,580
so what Lulu can do is it can intercept

1267
00:49:26,580 --> 00:49:28,470
those requests and alert the user

1268
00:49:28,470 --> 00:49:30,870
basically saying hey just to let you

1269
00:49:30,870 --> 00:49:33,630
know this flash updater is connecting to

1270
00:49:33,630 --> 00:49:35,550
an IP address in Russia you know some

1271
00:49:35,550 --> 00:49:37,650
users will still click allow' but no

1272
00:49:37,650 --> 00:49:39,540
hopefully some will be alerted to the

1273
00:49:39,540 --> 00:49:43,350
fact that they are infected now the

1274
00:49:43,350 --> 00:49:45,780
biggest maybe only drawback of these

1275
00:49:45,780 --> 00:49:48,060
tools is there's a lot of them and the

1276
00:49:48,060 --> 00:49:49,530
average user is probably not going to

1277
00:49:49,530 --> 00:49:50,970
know what to do right they got a pop-up

1278
00:49:50,970 --> 00:49:53,280
from block block saying something was

1279
00:49:53,280 --> 00:49:54,540
just persisted they're gonna be like

1280
00:49:54,540 --> 00:49:56,520
what is persistence they're just gonna

1281
00:49:56,520 --> 00:49:59,790
click allow' right so recently I helped

1282
00:49:59,790 --> 00:50:01,470
co-found a company called digital and

1283
00:50:01,470 --> 00:50:03,030
one of the things we're doing is really

1284
00:50:03,030 --> 00:50:04,800
trying to alleviate some of those

1285
00:50:04,800 --> 00:50:06,600
shortcomings and Josh and John gave a

1286
00:50:06,600 --> 00:50:08,970
great discussion about some of those

1287
00:50:08,970 --> 00:50:10,560
products and the techniques so I'm not

1288
00:50:10,560 --> 00:50:12,840
really gonna go into them but basically

1289
00:50:12,840 --> 00:50:14,760
just to point out again it kind of takes

1290
00:50:14,760 --> 00:50:16,740
all the amazing detection heuristics

1291
00:50:16,740 --> 00:50:19,440
from these free objective-c tools builds

1292
00:50:19,440 --> 00:50:21,930
them into a kind of way more powerful

1293
00:50:21,930 --> 00:50:24,300
monitoring capability but then as Josh

1294
00:50:24,300 --> 00:50:26,160
talked is fed into Apple's game kit

1295
00:50:26,160 --> 00:50:28,170
engine and then can very powerfully and

1296
00:50:28,170 --> 00:50:30,180
generically detect a wide range of

1297
00:50:30,180 --> 00:50:32,310
malicious actions and then for example

1298
00:50:32,310 --> 00:50:35,580
alert you generate some logs so again a

1299
00:50:35,580 --> 00:50:37,170
lot more useful I would argue in an

1300
00:50:37,170 --> 00:50:38,500
enterprise environment

1301
00:50:38,500 --> 00:50:41,050
all right so let's wrap this all up and

1302
00:50:41,050 --> 00:50:44,230
get to the raffle so the first part of

1303
00:50:44,230 --> 00:50:46,510
this talk we showed that Mac malware is

1304
00:50:46,510 --> 00:50:48,520
unfortunately on the rise this is a

1305
00:50:48,520 --> 00:50:50,830
reality users are still gonna click on

1306
00:50:50,830 --> 00:50:51,460
stuff

1307
00:50:51,460 --> 00:50:53,650
hackers are very financially motivated

1308
00:50:53,650 --> 00:50:56,440
so unfortunately Mac malware is not

1309
00:50:56,440 --> 00:50:59,290
going away anytime soon we also showed

1310
00:50:59,290 --> 00:51:01,300
that unfortunately Mac OS is riddled

1311
00:51:01,300 --> 00:51:03,670
with rather ridiculous security

1312
00:51:03,670 --> 00:51:06,340
vulnerabilities second part of the talk

1313
00:51:06,340 --> 00:51:08,980
we showed that Mojave is an incredible

1314
00:51:08,980 --> 00:51:10,810
step in the right direction

1315
00:51:10,810 --> 00:51:12,910
Apple has really implemented some

1316
00:51:12,910 --> 00:51:14,730
progressive security and private privacy

1317
00:51:14,730 --> 00:51:17,080
improvements so I do like to pick on

1318
00:51:17,080 --> 00:51:18,280
Apple a lot but I also want to

1319
00:51:18,280 --> 00:51:20,610
acknowledge and give them kudos for this

1320
00:51:20,610 --> 00:51:23,020
however I think the reality is these

1321
00:51:23,020 --> 00:51:24,850
Mojave systems are still going to get

1322
00:51:24,850 --> 00:51:26,950
infected we would be really naive to

1323
00:51:26,950 --> 00:51:28,450
think that this was not the case right

1324
00:51:28,450 --> 00:51:30,010
we showed some vulnerabilities that

1325
00:51:30,010 --> 00:51:32,980
still exist in Mojave and it's likely

1326
00:51:32,980 --> 00:51:35,080
that there's going to be more I think

1327
00:51:35,080 --> 00:51:36,820
until something really changes the Apple

1328
00:51:36,820 --> 00:51:38,620
their patches are still going to be

1329
00:51:38,620 --> 00:51:40,360
questionable the software they released

1330
00:51:40,360 --> 00:51:42,400
is still going to have bugs so hackers

1331
00:51:42,400 --> 00:51:44,620
are gonna find a way in and again Mac

1332
00:51:44,620 --> 00:51:46,900
users are unfortunately very very naive

1333
00:51:46,900 --> 00:51:49,570
largely because of the propaganda that

1334
00:51:49,570 --> 00:51:52,570
Apple continually continues to push so

1335
00:51:52,570 --> 00:51:54,130
this unfortunately means they are going

1336
00:51:54,130 --> 00:51:55,900
to click on email attachment so you're

1337
00:51:55,900 --> 00:51:57,970
gonna click on phishing links right they

1338
00:51:57,970 --> 00:52:00,040
are not as educated as their Windows

1339
00:52:00,040 --> 00:52:02,350
counterparts so again I really think

1340
00:52:02,350 --> 00:52:04,390
that third-party security tools still

1341
00:52:04,390 --> 00:52:07,900
play an important role all right so

1342
00:52:07,900 --> 00:52:11,230
Mahalo for attending my talk I also want

1343
00:52:11,230 --> 00:52:14,110
to thank all patrons the Friends of

1344
00:52:14,110 --> 00:52:14,830
objective-c

1345
00:52:14,830 --> 00:52:17,320
first and foremost Digita and really

1346
00:52:17,320 --> 00:52:22,300
this wraps up the conference so we are

1347
00:52:22,300 --> 00:52:24,010
going to take a few questions for the

1348
00:52:24,010 --> 00:52:26,470
talk and then we are going to transition

1349
00:52:26,470 --> 00:52:29,200
to the raffle now I know you all want to

1350
00:52:29,200 --> 00:52:30,670
get to the raffle so but let's at least

1351
00:52:30,670 --> 00:52:32,620
have one or two questions before we get

1352
00:52:32,620 --> 00:52:38,890
there no questions come on you can ask

1353
00:52:38,890 --> 00:52:40,360
me what Apple thinks about me no I'm

1354
00:52:40,360 --> 00:52:42,760
just don't

1355
00:52:42,760 --> 00:52:47,630
we'll get there in a second yes in the

1356
00:52:47,630 --> 00:53:06,080
front that's a great questions the

1357
00:53:06,080 --> 00:53:08,930
question was basically Apple using MDM

1358
00:53:08,930 --> 00:53:10,790
especially an enterprise what can kind

1359
00:53:10,790 --> 00:53:14,120
of the user do the average consumer I'm

1360
00:53:14,120 --> 00:53:16,850
gonna copy I know nothing about MDM this

1361
00:53:16,850 --> 00:53:18,350
is why I work with other professionals

1362
00:53:18,350 --> 00:53:21,350
who understand these things what I think

1363
00:53:21,350 --> 00:53:23,390
the third-party user can still do

1364
00:53:23,390 --> 00:53:26,450
luckily Apple has not limited too much

1365
00:53:26,450 --> 00:53:29,450
yet what security tools can do so they

1366
00:53:29,450 --> 00:53:31,280
are looking to do things like not allow

1367
00:53:31,280 --> 00:53:33,950
kernel extensions but the hope is that

1368
00:53:33,950 --> 00:53:36,050
they provide other interfaces that

1369
00:53:36,050 --> 00:53:38,120
third-party security tools can still

1370
00:53:38,120 --> 00:53:40,480
utilize to provide extra protection

1371
00:53:40,480 --> 00:53:42,650
above and beyond what is baked into the

1372
00:53:42,650 --> 00:53:44,600
operating system so I'm hopeful that

1373
00:53:44,600 --> 00:53:46,700
Apple doesn't go the route of us where

1374
00:53:46,700 --> 00:53:48,440
they lock everything down and yes you

1375
00:53:48,440 --> 00:53:50,330
have a really secure device but if

1376
00:53:50,330 --> 00:53:51,710
someone hacked your iPhone how would you

1377
00:53:51,710 --> 00:53:53,720
know you wouldn't because it's

1378
00:53:53,720 --> 00:53:55,670
essentially this black box so for the

1379
00:53:55,670 --> 00:53:57,560
average user the iPhone is incredible

1380
00:53:57,560 --> 00:54:00,020
but again nation-states do we all know

1381
00:54:00,020 --> 00:54:02,810
have completely remote capabilities that

1382
00:54:02,810 --> 00:54:04,550
allow them to infect arbitrary targets

1383
00:54:04,550 --> 00:54:06,650
even even on the latest version of iOS

1384
00:54:06,650 --> 00:54:09,170
and again the problem is because Apple

1385
00:54:09,170 --> 00:54:11,210
has locked down these devices so much

1386
00:54:11,210 --> 00:54:13,460
you can't run a process list you can't

1387
00:54:13,460 --> 00:54:15,470
see what's connecting out so once these

1388
00:54:15,470 --> 00:54:17,960
nation states have access to one of

1389
00:54:17,960 --> 00:54:19,670
these iPhones they are stoked because

1390
00:54:19,670 --> 00:54:21,320
you are never finding out there's an

1391
00:54:21,320 --> 00:54:22,070
infection on there

1392
00:54:22,070 --> 00:54:23,840
so really hope they don't go on that

1393
00:54:23,840 --> 00:54:25,730
same route with Mac OS because it would

1394
00:54:25,730 --> 00:54:27,680
really limit unfortunately what people

1395
00:54:27,680 --> 00:54:29,660
can do I love Brandon's demo with the

1396
00:54:29,660 --> 00:54:31,790
SIP because he basically showed as soon

1397
00:54:31,790 --> 00:54:33,290
as you have one vulnerability now you

1398
00:54:33,290 --> 00:54:35,300
can install something that even an

1399
00:54:35,300 --> 00:54:37,970
antivirus and admin anybody cannot

1400
00:54:37,970 --> 00:54:40,700
delete that file so again these security

1401
00:54:40,700 --> 00:54:42,250
meta gate mitigations that Apple

1402
00:54:42,250 --> 00:54:44,870
introduces a lot of times sophisticated

1403
00:54:44,870 --> 00:54:47,840
attackers can and do use that to their

1404
00:54:47,840 --> 00:54:51,850
benefit yes Mike

1405
00:54:56,300 --> 00:55:17,550
yes yes that's the Nexen questions so

1406
00:55:17,550 --> 00:55:19,349
the question is digit is amazing but

1407
00:55:19,349 --> 00:55:21,839
Objective C is 2 so you know is it

1408
00:55:21,839 --> 00:55:25,020
essentially going to neuter Objective C

1409
00:55:25,020 --> 00:55:27,240
these tools and the great thing is when

1410
00:55:27,240 --> 00:55:29,520
I started did you know with Josh none i

1411
00:55:29,520 --> 00:55:30,930
sat down and said first and foremost I

1412
00:55:30,930 --> 00:55:32,970
want to not deviate from what Objective

1413
00:55:32,970 --> 00:55:34,800
C is doing and the cool thing is they

1414
00:55:34,800 --> 00:55:36,690
were incredibly supportive so not only

1415
00:55:36,690 --> 00:55:38,160
our new tools coming out but they're all

1416
00:55:38,160 --> 00:55:40,650
gonna be open source monitor kit is open

1417
00:55:40,650 --> 00:55:42,750
source as well which is great so really

1418
00:55:42,750 --> 00:55:44,420
the approach we're taking is that

1419
00:55:44,420 --> 00:55:46,440
Objective C tools don't really work that

1420
00:55:46,440 --> 00:55:48,540
well in the enterprise anyways by design

1421
00:55:48,540 --> 00:55:50,130
so this is kind of like an enterprise

1422
00:55:50,130 --> 00:55:52,760
version that has like cloud based stuff

1423
00:55:52,760 --> 00:55:54,960
Enterprise diplôme deployment

1424
00:55:54,960 --> 00:55:57,000
centralized logging and a bunch of other

1425
00:55:57,000 --> 00:55:59,160
stuff but the objective-c tools will

1426
00:55:59,160 --> 00:56:00,869
always be free always be open source and

1427
00:56:00,869 --> 00:56:02,880
again for the average user would be free

1428
00:56:02,880 --> 00:56:03,930
and again you can still use the

1429
00:56:03,930 --> 00:56:06,390
Objective C tools in the enterprise but

1430
00:56:06,390 --> 00:56:07,680
I would recommend using the digital

1431
00:56:07,680 --> 00:56:09,180
stuff because it's been designed from

1432
00:56:09,180 --> 00:56:10,770
the ground up before that so a very

1433
00:56:10,770 --> 00:56:12,839
great question that's one of the reasons

1434
00:56:12,839 --> 00:56:14,760
I'm not working at Apple because again I

1435
00:56:14,760 --> 00:56:16,470
don't want to give up creating these

1436
00:56:16,470 --> 00:56:18,319
free tools that I passionately believe

1437
00:56:18,319 --> 00:56:30,630
helped Mac users stay secure yes that's

1438
00:56:30,630 --> 00:56:33,359
a great question um sure why not

1439
00:56:33,359 --> 00:56:35,280
so one thing I've been thinking about

1440
00:56:35,280 --> 00:56:37,319
writing is kind of a generic crypto

1441
00:56:37,319 --> 00:56:39,450
miner detector because we're seeing what

1442
00:56:39,450 --> 00:56:40,650
I kind of like to do is look at where

1443
00:56:40,650 --> 00:56:43,170
malware trends are going we saw a big

1444
00:56:43,170 --> 00:56:45,240
tick in ransomware year-and-a-half ago

1445
00:56:45,240 --> 00:56:46,859
and I was like this is something we

1446
00:56:46,859 --> 00:56:49,140
should generically be able to detect so

1447
00:56:49,140 --> 00:56:51,589
crypto minor is kind of a big one

1448
00:56:51,589 --> 00:56:54,000
keylogging detection is kind of cool

1449
00:56:54,000 --> 00:56:55,500
we've actually been working on that in

1450
00:56:55,500 --> 00:56:58,890
digit uh so I'd say those are kind of

1451
00:56:58,890 --> 00:57:00,460
maybe on the forefront of

1452
00:57:00,460 --> 00:57:03,099
of my mind and then just continually to

1453
00:57:03,099 --> 00:57:04,869
improve the other tools this is kind of

1454
00:57:04,869 --> 00:57:07,180
a catch-22 because I've released about

1455
00:57:07,180 --> 00:57:08,650
ten plus tools and people always have

1456
00:57:08,650 --> 00:57:10,630
great feature requests and so it's like

1457
00:57:10,630 --> 00:57:12,730
I do I maintain and fix those or run off

1458
00:57:12,730 --> 00:57:14,589
and write some new tool so you know the

1459
00:57:14,589 --> 00:57:18,160
struggle is real but keep those feature

1460
00:57:18,160 --> 00:57:22,990
requests coming awesome alright we are

1461
00:57:22,990 --> 00:57:26,950
now going to switch gears to talking

1462
00:57:26,950 --> 00:57:31,799
about winning stuff

1463
00:57:32,420 --> 00:57:35,499
[Music]

1464
00:57:40,880 --> 00:57:43,350
thank you thank you thank you that's

1465
00:57:43,350 --> 00:57:49,170
clapping for the prizes right okay so

1466
00:57:49,170 --> 00:57:52,440
I'm gonna put on my presenter hat be

1467
00:57:52,440 --> 00:57:54,570
very professional here not rag on Apple

1468
00:57:54,570 --> 00:57:58,320
any more apologies Apple so first and

1469
00:57:58,320 --> 00:58:00,020
foremost thank you all for attending

1470
00:58:00,020 --> 00:58:04,220
objective by the sea version 1.0

1471
00:58:04,220 --> 00:58:07,530
super-stoked you all showed up and I

1472
00:58:07,530 --> 00:58:09,210
don't know about you guys and girls but

1473
00:58:09,210 --> 00:58:12,030
I had a really incredible time again I

1474
00:58:12,030 --> 00:58:14,340
really would like to extend thanks to

1475
00:58:14,340 --> 00:58:17,070
our sponsors first and foremost digit

1476
00:58:17,070 --> 00:58:18,660
securities really partnered with us to

1477
00:58:18,660 --> 00:58:21,840
bring this this conference to a reality

1478
00:58:21,840 --> 00:58:23,820
you know incredibly supportive of my

1479
00:58:23,820 --> 00:58:25,560
open source efforts with objective-c

1480
00:58:25,560 --> 00:58:28,500
which I'm incredibly thankful for also

1481
00:58:28,500 --> 00:58:30,300
the other sponsors again Sophos

1482
00:58:30,300 --> 00:58:33,450
Malwarebytes SmugMug and flickr the

1483
00:58:33,450 --> 00:58:35,370
secure Mac and the Guardian mobile

1484
00:58:35,370 --> 00:58:38,130
firework again this conference was free

1485
00:58:38,130 --> 00:58:40,170
to attend for people in Hawaii which I

1486
00:58:40,170 --> 00:58:41,340
thought it was really important to kind

1487
00:58:41,340 --> 00:58:48,990
of encourage there's more than one and

1488
00:58:48,990 --> 00:58:52,110
then for any patreon provider so again

1489
00:58:52,110 --> 00:58:53,640
without these sponsors this conference

1490
00:58:53,640 --> 00:58:55,500
really would not be a reality so again

1491
00:58:55,500 --> 00:58:57,720
really thankful for them they're doing

1492
00:58:57,720 --> 00:58:59,460
all sorts of incredible research so if

1493
00:58:59,460 --> 00:59:01,080
you're interested in Mac stuff check

1494
00:59:01,080 --> 00:59:04,020
them out as well also on a more personal

1495
00:59:04,020 --> 00:59:05,970
note I really would like to thank all

1496
00:59:05,970 --> 00:59:08,280
the patrons the majority of you here

1497
00:59:08,280 --> 00:59:10,830
support me via patreon each month which

1498
00:59:10,830 --> 00:59:13,820
again is just a humbling mind-blowing

1499
00:59:13,820 --> 00:59:16,140
experience it really allows me to

1500
00:59:16,140 --> 00:59:18,330
develop these free open-source tools

1501
00:59:18,330 --> 00:59:20,910
that have no ads that aren't trying to

1502
00:59:20,910 --> 00:59:22,800
monetize users that aren't you know

1503
00:59:22,800 --> 00:59:25,230
feature incomplete and it's funny

1504
00:59:25,230 --> 00:59:27,540
because one of my favorite antivirus

1505
00:59:27,540 --> 00:59:29,340
company has this quote and it says if

1506
00:59:29,340 --> 00:59:31,770
the product is free you are the product

1507
00:59:31,770 --> 00:59:35,790
and I think the tools that objective-c

1508
00:59:35,790 --> 00:59:38,280
creates really go against this where

1509
00:59:38,280 --> 00:59:40,260
there really is no ulterior motive in

1510
00:59:40,260 --> 00:59:42,570
except to make these free open-source

1511
00:59:42,570 --> 00:59:44,310
tools but again this is only possible

1512
00:59:44,310 --> 00:59:46,950
because of the support of my patreon so

1513
00:59:46,950 --> 00:59:48,900
again I am incredibly indebted to you

1514
00:59:48,900 --> 00:59:51,300
and more importantly Mac users around

1515
00:59:51,300 --> 00:59:52,170
the world

1516
00:59:52,170 --> 00:59:54,599
are benefiting from your support I also

1517
00:59:54,599 --> 00:59:56,490
would like to reach out and thank Andy

1518
00:59:56,490 --> 01:00:06,000
our conference organizer so two things

1519
01:00:06,000 --> 01:00:08,700
first and you probably all know all

1520
01:00:08,700 --> 01:00:11,160
don't know this this the idea for this

1521
01:00:11,160 --> 01:00:13,530
conference was actually Andy's idea so

1522
01:00:13,530 --> 01:00:15,059
about six months ago she said Patrick

1523
01:00:15,059 --> 01:00:17,369
like you're a little stubborn and

1524
01:00:17,369 --> 01:00:19,650
sometimes a little slow like why don't

1525
01:00:19,650 --> 01:00:21,329
you have a Mac security conference in

1526
01:00:21,329 --> 01:00:23,160
Maui and in retrospect that was like

1527
01:00:23,160 --> 01:00:25,260
genius idea right so I'm forever

1528
01:00:25,260 --> 01:00:27,240
indebted to her for that and then more

1529
01:00:27,240 --> 01:00:28,770
importantly I was like this is a

1530
01:00:28,770 --> 01:00:30,059
phenomenal idea you know people are

1531
01:00:30,059 --> 01:00:31,470
gonna want to come to Maui we can nerd

1532
01:00:31,470 --> 01:00:33,150
out about mac security stuff we can all

1533
01:00:33,150 --> 01:00:35,520
hang out we have a party I have no idea

1534
01:00:35,520 --> 01:00:37,109
how to organize the conference right

1535
01:00:37,109 --> 01:00:38,970
like I hack on things and you know annoy

1536
01:00:38,970 --> 01:00:41,280
Apple so she should really ran with that

1537
01:00:41,280 --> 01:00:43,140
and really helped organize the

1538
01:00:43,140 --> 01:00:44,520
conference took care of all the details

1539
01:00:44,520 --> 01:00:46,079
so again let's just give her another

1540
01:00:46,079 --> 01:00:55,260
round of applause now I love to travel

1541
01:00:55,260 --> 01:00:58,109
and whenever I travel I always plan to I

1542
01:00:58,109 --> 01:01:00,270
always try to plan my next trick before

1543
01:01:00,270 --> 01:01:01,920
I get home some ways well I'm not that

1544
01:01:01,920 --> 01:01:03,540
bummed coming back to Maui but I'm a

1545
01:01:03,540 --> 01:01:05,190
little bummed because I'm like oh man

1546
01:01:05,190 --> 01:01:07,230
that trip was awesome so I'm sure a lot

1547
01:01:07,230 --> 01:01:09,000
of us are kind of a little sad well I'm

1548
01:01:09,000 --> 01:01:10,559
hopeful I'm hopeful I'm hoping that

1549
01:01:10,559 --> 01:01:11,700
you're a little sad that this conference

1550
01:01:11,700 --> 01:01:12,569
is over

1551
01:01:12,569 --> 01:01:14,880
so I want to end on some positive news

1552
01:01:14,880 --> 01:01:16,710
so the first thing is look for a

1553
01:01:16,710 --> 01:01:18,829
training that's going to be offered

1554
01:01:18,829 --> 01:01:20,609
digital and objective-c

1555
01:01:20,609 --> 01:01:22,260
early next year we're gonna talk and

1556
01:01:22,260 --> 01:01:24,540
offer some trainings on Mac malware

1557
01:01:24,540 --> 01:01:26,190
analysis talking about using the

1558
01:01:26,190 --> 01:01:28,049
objective-c tools and some of the tools

1559
01:01:28,049 --> 01:01:29,940
like monitor kit how you can use those

1560
01:01:29,940 --> 01:01:31,799
in your environment and also some

1561
01:01:31,799 --> 01:01:34,290
general Mac security things so follow

1562
01:01:34,290 --> 01:01:36,089
digital on Twitter I'm super stoked

1563
01:01:36,089 --> 01:01:37,890
about this training I don't know if

1564
01:01:37,890 --> 01:01:40,020
it'll be in Hawaii but I'm trying to get

1565
01:01:40,020 --> 01:01:41,700
it here again but if not maybe

1566
01:01:41,700 --> 01:01:45,839
California and even better news we're

1567
01:01:45,839 --> 01:01:49,760
going to announce objective-c 2.0

1568
01:01:49,760 --> 01:01:52,280
we are going to be doing this in Europe

1569
01:01:52,280 --> 01:01:55,250
largely because I had a lot of friends

1570
01:01:55,250 --> 01:01:57,410
that couldn't make it to this conference

1571
01:01:57,410 --> 01:01:59,330
because you know Europe is really far

1572
01:01:59,330 --> 01:02:01,580
away one of those being in beer who

1573
01:02:01,580 --> 01:02:03,619
promised me he would give a talk if I

1574
01:02:03,619 --> 01:02:06,470
did a conference in Europe so we're

1575
01:02:06,470 --> 01:02:09,340
looking for early spring late summer and

1576
01:02:09,340 --> 01:02:11,900
because of the name objective by the sea

1577
01:02:11,900 --> 01:02:13,850
it's gonna be similar incredible maybe

1578
01:02:13,850 --> 01:02:16,580
Portugal Spain summer on the sea so no

1579
01:02:16,580 --> 01:02:17,930
for a lot of you coming from the US

1580
01:02:17,930 --> 01:02:19,940
that's a very far flight but you know

1581
01:02:19,940 --> 01:02:21,950
it's still reasonably close so I hope to

1582
01:02:21,950 --> 01:02:23,840
see all of you there and yes we will

1583
01:02:23,840 --> 01:02:26,600
also be doing another one god-willing in

1584
01:02:26,600 --> 01:02:29,030
Maui next year around this same time so

1585
01:02:29,030 --> 01:02:30,980
I hope to make this an annual thing and

1586
01:02:30,980 --> 01:02:33,020
I hope to see all of you with all your

1587
01:02:33,020 --> 01:02:34,280
friends and co-workers and families

1588
01:02:34,280 --> 01:02:37,850
attending this as well all right before

1589
01:02:37,850 --> 01:02:40,600
we get to the raffle just again one last

1590
01:02:40,600 --> 01:02:43,910
Mahalo make sure to tweet about the

1591
01:02:43,910 --> 01:02:45,350
amazing time you had here so we get more

1592
01:02:45,350 --> 01:02:46,750
sponsors and more people come next year

1593
01:02:46,750 --> 01:02:49,609
also we will be posting the slides from

1594
01:02:49,609 --> 01:02:52,250
all the speakers online likely on the

1595
01:02:52,250 --> 01:02:55,520
conference website and also will we we

1596
01:02:55,520 --> 01:02:59,270
will be posting the recordings so let us

1597
01:02:59,270 --> 01:03:02,570
now get to the raffle which I'm hoping

1598
01:03:02,570 --> 01:03:03,859
isn't the only reason you're all still

1599
01:03:03,859 --> 01:03:05,890
here

1600
01:03:15,460 --> 01:03:20,480
awesome Andy will you assist me okay so

1601
01:03:20,480 --> 01:03:23,210
we have some awesome gifts prices I

1602
01:03:23,210 --> 01:03:25,240
should say so first we have the

1603
01:03:25,240 --> 01:03:29,560
incredible books by mr. Jonathan Levin

1604
01:03:29,560 --> 01:03:33,110
his company technology does all sorts of

1605
01:03:33,110 --> 01:03:34,640
incredible trainings so if you're

1606
01:03:34,640 --> 01:03:36,770
interested in Mac security I would

1607
01:03:36,770 --> 01:03:38,300
highly recommend his trainings and his

1608
01:03:38,300 --> 01:03:40,580
books he also has told me he will

1609
01:03:40,580 --> 01:03:43,370
autograph them so whoever wins those go

1610
01:03:43,370 --> 01:03:45,860
bug it's optional I don't know if that

1611
01:03:45,860 --> 01:03:49,250
means for you or for a him so you don't

1612
01:03:49,250 --> 01:03:52,970
have to get him autograph who wouldn't

1613
01:03:52,970 --> 01:03:59,110
want Jonathan's autograph okay so yes

1614
01:03:59,110 --> 01:04:02,830
you can pick it Andy come on

1615
01:04:04,630 --> 01:04:08,780
all right so the number is six nine

1616
01:04:08,780 --> 01:04:15,340
seven five seven one seven going once

1617
01:04:15,340 --> 01:04:19,430
six nine seven five seven one seven I

1618
01:04:19,430 --> 01:04:27,620
win them all right it's good this means

1619
01:04:27,620 --> 01:04:31,240
all your chances of winning increase

1620
01:04:31,240 --> 01:04:35,150
okay six nine seven five seven eight

1621
01:04:35,150 --> 01:04:39,780
three yes in the back whoo

1622
01:04:39,780 --> 01:04:46,750
[Applause]

1623
01:04:46,750 --> 01:04:49,070
again thanks for jonathan he actually

1624
01:04:49,070 --> 01:04:51,260
donated these books he was offended when

1625
01:04:51,260 --> 01:04:53,360
I offered to pay for them which i think

1626
01:04:53,360 --> 01:04:58,460
is yea good a very appreciative ha could

1627
01:04:58,460 --> 01:04:59,600
totally have just gotten socially

1628
01:04:59,600 --> 01:05:03,710
engineered incredible books you know I

1629
01:05:03,710 --> 01:05:05,300
have about five books on my bookshelf

1630
01:05:05,300 --> 01:05:08,570
and two of them are Jonathan's and when

1631
01:05:08,570 --> 01:05:10,850
version two comes out that will be six

1632
01:05:10,850 --> 01:05:12,560
books on my deck desktop so again

1633
01:05:12,560 --> 01:05:15,350
incredible books next we have the Apple

1634
01:05:15,350 --> 01:05:16,400
earpods

1635
01:05:16,400 --> 01:05:19,250
and Malwarebytes the sponsors

1636
01:05:19,250 --> 01:05:21,290
responsible for these so thank you to

1637
01:05:21,290 --> 01:05:29,210
them we have six nine seven five seven

1638
01:05:29,210 --> 01:05:35,170
two three yes

1639
01:05:40,150 --> 01:05:44,569
awesome I feel free feel free to you

1640
01:05:44,569 --> 01:05:45,890
know tweet about winning these awesome

1641
01:05:45,890 --> 01:05:50,029
gifts shameless I know but you know like

1642
01:05:50,029 --> 01:05:51,799
to have lots of people next year alright

1643
01:05:51,799 --> 01:05:54,410
now we have the fourth generation Apple

1644
01:05:54,410 --> 01:05:57,160
watch our sponsors Sophos thanks to them

1645
01:05:57,160 --> 01:05:59,930
this is you know the the most recent

1646
01:05:59,930 --> 01:06:01,970
version that just came out Space Gray

1647
01:06:01,970 --> 01:06:06,230
aluminum case I want this I don't

1648
01:06:06,230 --> 01:06:14,329
actually have an Apple watch six nine

1649
01:06:14,329 --> 01:06:22,450
seven five seven one seven Wow alright

1650
01:06:22,450 --> 01:06:29,059
promise this isn't rigged okay wow that

1651
01:06:29,059 --> 01:06:30,880
person would have done really well

1652
01:06:30,880 --> 01:06:34,579
whoever that is sucks to be them six

1653
01:06:34,579 --> 01:06:41,990
nine seven five seven five six oh six

1654
01:06:41,990 --> 01:06:49,609
nine seven five seven five six sucks to

1655
01:06:49,609 --> 01:06:56,210
be that person six nine seven five seven

1656
01:06:56,210 --> 01:06:59,740
six three

1657
01:07:04,450 --> 01:07:29,560
I I promise this is not implanted all

1658
01:07:29,560 --> 01:07:32,190
right finally we have the Nintendo

1659
01:07:32,190 --> 01:07:35,830
switch and this is thanks to digit our

1660
01:07:35,830 --> 01:07:38,440
conference partner I don't have a switch

1661
01:07:38,440 --> 01:07:46,840
either man although then I would do even

1662
01:07:46,840 --> 01:07:50,500
less work we have six nine seven five

1663
01:07:50,500 --> 01:08:04,390
eight two three that's me all right feel

1664
01:08:04,390 --> 01:08:06,250
good about this one six nine seven five

1665
01:08:06,250 --> 01:08:11,600
seven seven four oh yeah

1666
01:08:11,600 --> 01:08:20,630
[Applause]

1667
01:08:27,359 --> 01:08:30,609
all right well this wraps up the version

1668
01:08:30,609 --> 01:08:33,549
1.0 of objective by the sea again round

1669
01:08:33,549 --> 01:08:37,290
of applause for sponsors conference

1670
01:08:37,290 --> 01:08:44,670
attendees and me

