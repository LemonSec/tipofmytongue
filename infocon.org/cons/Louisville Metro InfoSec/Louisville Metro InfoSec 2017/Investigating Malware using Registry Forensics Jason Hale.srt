1
00:00:09,290 --> 00:00:14,610
<font color="#E5E5E5">all right guys</font><font color="#CCCCCC"> we're a little bit late</font>

2
00:00:12,420 --> 00:00:16,650
we're going to get<font color="#E5E5E5"> started my name is</font>

3
00:00:14,610 --> 00:00:19,650
Jason Hale<font color="#E5E5E5"> I'm here to share a little</font>

4
00:00:16,650 --> 00:00:22,288
bit<font color="#CCCCCC"> about investigating now we're using</font>

5
00:00:19,650 --> 00:00:25,259
registry forensics<font color="#E5E5E5"> so just a quick</font>

6
00:00:22,289 --> 00:00:27,240
background<font color="#E5E5E5"> on myself</font><font color="#CCCCCC"> I work at a company</font>

7
00:00:25,260 --> 00:00:29,369
<font color="#CCCCCC">called one source discovery</font><font color="#E5E5E5"> we're a</font>

8
00:00:27,240 --> 00:00:31,589
digital<font color="#E5E5E5"> forensics consulting firm based</font>

9
00:00:29,369 --> 00:00:34,410
<font color="#CCCCCC">here in Louisville so I worked it for</font>

10
00:00:31,590 --> 00:00:38,340
the<font color="#E5E5E5"> past nine years or so I primarily</font>

11
00:00:34,410 --> 00:00:41,000
focus in cases<font color="#E5E5E5"> ranging from intellectual</font>

12
00:00:38,340 --> 00:00:44,940
<font color="#E5E5E5">property theft to patent infringement</font>

13
00:00:41,000 --> 00:00:47,100
copyrights<font color="#E5E5E5"> contract disputes now our</font>

14
00:00:44,940 --> 00:00:50,459
investigations<font color="#CCCCCC"> Incident Response kind of</font>

15
00:00:47,100 --> 00:00:53,219
that whole realm<font color="#CCCCCC"> I've been there for the</font>

16
00:00:50,460 --> 00:00:54,840
past<font color="#E5E5E5"> nine years or so I'm also doing a</font>

17
00:00:53,219 --> 00:00:56,699
<font color="#E5E5E5">little bit of adjunct instructing at U</font>

18
00:00:54,840 --> 00:00:59,640
<font color="#CCCCCC">of L so see you a couple</font><font color="#E5E5E5"> more former</font>

19
00:00:56,699 --> 00:01:03,629
students here<font color="#CCCCCC"> I</font><font color="#E5E5E5"> could see you guys</font><font color="#CCCCCC"> so</font>

20
00:00:59,640 --> 00:01:04,739
we're good we'll get<font color="#E5E5E5"> started so I don't</font>

21
00:01:03,629 --> 00:01:06,658
know how many<font color="#E5E5E5"> of you have worked with</font>

22
00:01:04,739 --> 00:01:09,180
<font color="#E5E5E5">the registry too much how many of you</font>

23
00:01:06,659 --> 00:01:12,630
have some experience<font color="#CCCCCC"> messing with the</font>

24
00:01:09,180 --> 00:01:15,570
registry<font color="#CCCCCC"> to any level about half or so</font>

25
00:01:12,630 --> 00:01:17,610
<font color="#E5E5E5">of you so we'll</font><font color="#CCCCCC"> we'll go into</font><font color="#E5E5E5"> a brief</font>

26
00:01:15,570 --> 00:01:19,229
intro of<font color="#E5E5E5"> the registry</font><font color="#CCCCCC"> just to make sure</font>

27
00:01:17,610 --> 00:01:20,580
<font color="#E5E5E5">everyone's on the same playing field</font>

28
00:01:19,229 --> 00:01:22,710
when<font color="#E5E5E5"> we get into some of the actual</font>

29
00:01:20,580 --> 00:01:24,330
<font color="#E5E5E5">artifacts that we'll talk about we'll</font>

30
00:01:22,710 --> 00:01:26,369
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about why the registry is important</font>

31
00:01:24,330 --> 00:01:28,530
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> talk about what it is and</font><font color="#CCCCCC"> kind of</font>

32
00:01:26,369 --> 00:01:30,990
<font color="#CCCCCC">sum the nomenclature and terminology</font><font color="#E5E5E5"> so</font>

33
00:01:28,530 --> 00:01:32,610
that everyone's on<font color="#E5E5E5"> a equal equal ground</font>

34
00:01:30,990 --> 00:01:34,770
<font color="#E5E5E5">and then we'll get into specifically</font>

35
00:01:32,610 --> 00:01:37,579
<font color="#E5E5E5">some of the detection persistence</font><font color="#CCCCCC"> and</font>

36
00:01:34,770 --> 00:01:39,360
investigative methods that can be<font color="#E5E5E5"> used</font>

37
00:01:37,579 --> 00:01:43,798
<font color="#E5E5E5">specifically in the context of of</font>

38
00:01:39,360 --> 00:01:48,689
malware investigation<font color="#E5E5E5"> all right so</font><font color="#CCCCCC"> I</font>

39
00:01:43,799 --> 00:01:50,009
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to preface</font><font color="#E5E5E5"> this by saying when you</font>

40
00:01:48,689 --> 00:01:51,929
<font color="#E5E5E5">are doing a malware investigation</font>

41
00:01:50,009 --> 00:01:54,360
<font color="#E5E5E5">obviously there are parts outside of the</font>

42
00:01:51,930 --> 00:01:55,439
registry<font color="#CCCCCC"> file system and</font><font color="#E5E5E5"> other locations</font>

43
00:01:54,360 --> 00:01:58,409
<font color="#CCCCCC">that are going</font><font color="#E5E5E5"> to be critically</font>

44
00:01:55,439 --> 00:02:00,630
important<font color="#E5E5E5"> but this this presentation is</font>

45
00:01:58,409 --> 00:02:03,390
<font color="#CCCCCC">not suggesting that you only use</font><font color="#E5E5E5"> the</font>

46
00:02:00,630 --> 00:02:05,280
registry I'm just trying to<font color="#CCCCCC"> highlight</font>

47
00:02:03,390 --> 00:02:07,290
how important it is and<font color="#E5E5E5"> the value</font><font color="#CCCCCC"> of the</font>

48
00:02:05,280 --> 00:02:10,229
<font color="#CCCCCC">information that you can grab</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> the</font>

49
00:02:07,290 --> 00:02:12,599
registry<font color="#E5E5E5"> if you're only looking at that</font>

50
00:02:10,229 --> 00:02:14,970
okay so why is this why is<font color="#E5E5E5"> it important</font>

51
00:02:12,599 --> 00:02:16,500
<font color="#CCCCCC">I will the the high-level view here is</font>

52
00:02:14,970 --> 00:02:18,930
that there are there's a ton of

53
00:02:16,500 --> 00:02:22,050
information stored in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> registry</font>

54
00:02:18,930 --> 00:02:24,660
everything from<font color="#E5E5E5"> system installed</font>

55
00:02:22,050 --> 00:02:27,180
services installed applications<font color="#E5E5E5"> program</font>

56
00:02:24,660 --> 00:02:29,100
execution artifacts<font color="#E5E5E5"> user activity</font>

57
00:02:27,180 --> 00:02:31,830
essentially everything that<font color="#CCCCCC"> Windows</font>

58
00:02:29,100 --> 00:02:34,620
wants to keep and<font color="#E5E5E5"> maintain to enhance</font>

59
00:02:31,830 --> 00:02:36,030
the<font color="#E5E5E5"> user experience or to maintain a</font>

60
00:02:34,620 --> 00:02:38,250
history<font color="#CCCCCC"> of certain things that</font><font color="#E5E5E5"> are</font>

61
00:02:36,030 --> 00:02:40,380
happening<font color="#CCCCCC"> a lot of that is stored in</font><font color="#E5E5E5"> the</font>

62
00:02:38,250 --> 00:02:42,840
registry<font color="#E5E5E5"> and it's interesting if</font><font color="#CCCCCC"> you</font>

63
00:02:40,380 --> 00:02:45,120
take a look<font color="#E5E5E5"> at the value of the registry</font>

64
00:02:42,840 --> 00:02:47,130
relative to<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of some</font><font color="#E5E5E5"> of the other</font>

65
00:02:45,120 --> 00:02:49,290
<font color="#CCCCCC">information on</font><font color="#E5E5E5"> the disk in the context</font>

66
00:02:47,130 --> 00:02:51,390
of<font color="#E5E5E5"> an investigation</font><font color="#CCCCCC"> you may have a</font>

67
00:02:49,290 --> 00:02:54,510
couple<font color="#CCCCCC"> hundred megabytes</font><font color="#E5E5E5"> that comprise</font>

68
00:02:51,390 --> 00:02:55,708
the entire registry of<font color="#CCCCCC"> a system</font><font color="#E5E5E5"> so if</font>

69
00:02:54,510 --> 00:02:58,500
you think<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a couple hundred megabytes</font>

70
00:02:55,709 --> 00:03:01,140
as compared to<font color="#E5E5E5"> a terabyte of information</font>

71
00:02:58,500 --> 00:03:02,910
or more on an actual disk<font color="#CCCCCC"> the value of</font>

72
00:03:01,140 --> 00:03:05,220
that<font color="#E5E5E5"> information that you get from that</font>

73
00:03:02,910 --> 00:03:07,350
<font color="#E5E5E5">200 megabytes and investigating that</font>

74
00:03:05,220 --> 00:03:09,870
data is<font color="#E5E5E5"> really pretty incredible</font>

75
00:03:07,350 --> 00:03:13,620
<font color="#E5E5E5">compared to essentially everything else</font>

76
00:03:09,870 --> 00:03:16,350
<font color="#E5E5E5">in the file system</font><font color="#CCCCCC"> okay and obviously</font>

77
00:03:13,620 --> 00:03:18,690
this is registry forensics is important

78
00:03:16,350 --> 00:03:21,660
outside<font color="#CCCCCC"> of malware</font><font color="#E5E5E5"> investigation so most</font>

79
00:03:18,690 --> 00:03:23,160
any type of analysis<font color="#CCCCCC"> you would be</font><font color="#E5E5E5"> doing</font>

80
00:03:21,660 --> 00:03:26,780
<font color="#E5E5E5">on a Windows system you're probably</font>

81
00:03:23,160 --> 00:03:26,780
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to want to dig into the registry</font>

82
00:03:27,530 --> 00:03:31,590
<font color="#CCCCCC">okay so I</font><font color="#E5E5E5"> think this was pulled from</font>

83
00:03:29,880 --> 00:03:35,190
Microsoft<font color="#CCCCCC"> it's not exactly sure where</font>

84
00:03:31,590 --> 00:03:37,440
I'd grabbed this but<font color="#CCCCCC"> a</font><font color="#E5E5E5"> generic kind of</font>

85
00:03:35,190 --> 00:03:38,760
description of<font color="#E5E5E5"> the registry basically</font>

86
00:03:37,440 --> 00:03:41,010
most of<font color="#CCCCCC"> the stuff we've already covered</font>

87
00:03:38,760 --> 00:03:43,470
<font color="#E5E5E5">it's a central database</font><font color="#CCCCCC"> used to store</font>

88
00:03:41,010 --> 00:03:45,690
system configuration<font color="#E5E5E5"> and again the</font><font color="#CCCCCC"> idea</font>

89
00:03:43,470 --> 00:03:48,359
here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> I we were trying to enhance</font>

90
00:03:45,690 --> 00:03:49,739
<font color="#E5E5E5">the user</font><font color="#CCCCCC"> experience so there's a lot</font><font color="#E5E5E5"> of</font>

91
00:03:48,359 --> 00:03:52,859
things stored here that relate to

92
00:03:49,739 --> 00:03:55,769
history of execution history of file

93
00:03:52,859 --> 00:03:57,780
access and so<font color="#CCCCCC"> on which to the user they</font>

94
00:03:55,769 --> 00:04:00,000
may<font color="#E5E5E5"> not care about but from the forensic</font>

95
00:03:57,780 --> 00:04:04,350
side from the investigation side is very

96
00:04:00,000 --> 00:04:05,760
important in useful information so this

97
00:04:04,350 --> 00:04:07,290
nice little<font color="#E5E5E5"> graphic</font><font color="#CCCCCC"> here just kind of</font>

98
00:04:05,760 --> 00:04:09,720
shows<font color="#CCCCCC"> the progression</font><font color="#E5E5E5"> of the registry</font>

99
00:04:07,290 --> 00:04:12,959
all the way from<font color="#CCCCCC"> windows 3-1 to</font><font color="#E5E5E5"> Windows</font>

100
00:04:09,720 --> 00:04:16,410
10<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can see with the exception</font><font color="#CCCCCC"> of</font>

101
00:04:12,959 --> 00:04:18,659
<font color="#E5E5E5">31 it has from a visual standpoint from</font>

102
00:04:16,410 --> 00:04:21,060
a regedit standpoint<font color="#E5E5E5"> it has basically</font>

103
00:04:18,659 --> 00:04:23,130
<font color="#E5E5E5">remained the same</font><font color="#CCCCCC"> in fact if you got</font>

104
00:04:21,060 --> 00:04:23,910
down<font color="#CCCCCC"> to the binary</font><font color="#E5E5E5"> level the actual</font>

105
00:04:23,130 --> 00:04:25,740
structure of<font color="#E5E5E5"> the</font>

106
00:04:23,910 --> 00:04:28,230
<font color="#E5E5E5">registry hasn't really changed so you</font>

107
00:04:25,740 --> 00:04:31,230
can use the same registry tools that you

108
00:04:28,230 --> 00:04:32,430
used for<font color="#E5E5E5"> Windows XP for Windows 10 for</font>

109
00:04:31,230 --> 00:04:34,500
<font color="#E5E5E5">the most part you're going to be able to</font>

110
00:04:32,430 --> 00:04:38,160
see anything<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you would be able to</font>

111
00:04:34,500 --> 00:04:41,070
<font color="#E5E5E5">see with the latest and greatest tool</font><font color="#CCCCCC"> so</font>

112
00:04:38,160 --> 00:04:42,780
you<font color="#E5E5E5"> may have certain</font><font color="#CCCCCC"> information that is</font>

113
00:04:41,070 --> 00:04:44,460
moved from<font color="#E5E5E5"> one</font><font color="#CCCCCC"> location to another or</font>

114
00:04:42,780 --> 00:04:47,489
certain<font color="#CCCCCC"> information added</font><font color="#E5E5E5"> in the Windows</font>

115
00:04:44,460 --> 00:04:49,890
10 registry<font color="#E5E5E5"> is removed and so on</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> for</font>

116
00:04:47,490 --> 00:04:53,610
<font color="#E5E5E5">the most part from a binary level it</font><font color="#CCCCCC"> is</font>

117
00:04:49,890 --> 00:04:55,349
<font color="#CCCCCC">remained the same all right so I just go</font>

118
00:04:53,610 --> 00:04:56,910
<font color="#E5E5E5">over some quick terminology here so that</font>

119
00:04:55,350 --> 00:04:59,040
way everything<font color="#E5E5E5"> kind of makes sense as</font>

120
00:04:56,910 --> 00:05:01,830
we're talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> it throughout the</font>

121
00:04:59,040 --> 00:05:04,860
registry<font color="#E5E5E5"> essentially is composed of keys</font>

122
00:05:01,830 --> 00:05:09,090
<font color="#E5E5E5">sub keys and values so you can kind of</font>

123
00:05:04,860 --> 00:05:11,160
<font color="#E5E5E5">equate that to the idea</font><font color="#CCCCCC"> of folders</font>

124
00:05:09,090 --> 00:05:15,000
subfolders and files in a file system

125
00:05:11,160 --> 00:05:18,140
okay<font color="#E5E5E5"> so a registry key may contain</font>

126
00:05:15,000 --> 00:05:21,600
contain either sub keys or values

127
00:05:18,140 --> 00:05:24,000
<font color="#E5E5E5">registry keys are unique in that they</font>

128
00:05:21,600 --> 00:05:25,590
will also<font color="#E5E5E5"> contain a last right time and</font>

129
00:05:24,000 --> 00:05:28,140
this<font color="#CCCCCC"> can be equated to the last modified</font>

130
00:05:25,590 --> 00:05:29,460
<font color="#CCCCCC">time</font><font color="#E5E5E5"> okay so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't have the creation</font>

131
00:05:28,140 --> 00:05:30,719
time we don't<font color="#E5E5E5"> have access</font><font color="#CCCCCC"> time we don't</font>

132
00:05:29,460 --> 00:05:32,340
<font color="#CCCCCC">have those typical file system</font>

133
00:05:30,720 --> 00:05:34,770
<font color="#CCCCCC">timestamps that we would normally</font><font color="#E5E5E5"> see</font>

134
00:05:32,340 --> 00:05:36,869
<font color="#E5E5E5">but</font><font color="#CCCCCC"> with the registry we do have a last</font>

135
00:05:34,770 --> 00:05:40,109
<font color="#CCCCCC">modified time okay so</font><font color="#E5E5E5"> that will help</font>

136
00:05:36,870 --> 00:05:42,270
tell<font color="#CCCCCC"> us things</font><font color="#E5E5E5"> like when is the last</font>

137
00:05:40,110 --> 00:05:45,630
time<font color="#CCCCCC"> that</font><font color="#E5E5E5"> something changed</font><font color="#CCCCCC"> with this</font>

138
00:05:42,270 --> 00:05:47,340
particular registry key<font color="#E5E5E5"> okay so we don't</font>

139
00:05:45,630 --> 00:05:49,050
<font color="#E5E5E5">necessarily know what that change is we</font>

140
00:05:47,340 --> 00:05:51,900
you know it could be<font color="#CCCCCC"> a value added a</font>

141
00:05:49,050 --> 00:05:54,450
value removed something updated but if

142
00:05:51,900 --> 00:05:56,549
we know how that<font color="#E5E5E5"> particular key is</font>

143
00:05:54,450 --> 00:05:58,710
updated and the frequency<font color="#CCCCCC"> and the types</font>

144
00:05:56,550 --> 00:06:01,050
<font color="#E5E5E5">of events that update that registry key</font>

145
00:05:58,710 --> 00:06:03,330
<font color="#E5E5E5">or the values within</font><font color="#CCCCCC"> that key then we</font>

146
00:06:01,050 --> 00:06:05,790
<font color="#CCCCCC">can make some</font><font color="#E5E5E5"> inferences as to what that</font>

147
00:06:03,330 --> 00:06:07,979
<font color="#E5E5E5">lasts right</font><font color="#CCCCCC"> Tom</font><font color="#E5E5E5"> actually is so is that</font>

148
00:06:05,790 --> 00:06:10,080
<font color="#E5E5E5">the time when this particular file was</font>

149
00:06:07,980 --> 00:06:13,710
accessed or what<font color="#CCCCCC"> does out the last right</font>

150
00:06:10,080 --> 00:06:15,960
time equate to<font color="#E5E5E5"> okay so outside</font><font color="#CCCCCC"> of the</font>

151
00:06:13,710 --> 00:06:19,349
the keys and sub keys you've got values

152
00:06:15,960 --> 00:06:21,570
<font color="#E5E5E5">and eyes are essentially if you</font><font color="#CCCCCC"> think of</font>

153
00:06:19,350 --> 00:06:23,760
from<font color="#E5E5E5"> a development standpoint if you're</font>

154
00:06:21,570 --> 00:06:26,040
declaring<font color="#CCCCCC"> a variable</font><font color="#E5E5E5"> you've got a value</font>

155
00:06:23,760 --> 00:06:29,159
type or a variable<font color="#CCCCCC"> type</font><font color="#E5E5E5"> you get the name</font>

156
00:06:26,040 --> 00:06:31,650
for<font color="#E5E5E5"> something that's it's going to be</font>

157
00:06:29,160 --> 00:06:34,919
used to delineate what that is in the

158
00:06:31,650 --> 00:06:36,450
<font color="#E5E5E5">actual content the value data</font><font color="#CCCCCC"> you can</font>

159
00:06:34,919 --> 00:06:37,810
see the value type<font color="#E5E5E5"> it can range anywhere</font>

160
00:06:36,450 --> 00:06:39,789
from<font color="#E5E5E5"> a D word</font>

161
00:06:37,810 --> 00:06:42,100
for bite value in this case<font color="#CCCCCC"> a to a</font>

162
00:06:39,790 --> 00:06:43,570
string or<font color="#E5E5E5"> to a binary blob and</font><font color="#CCCCCC"> we'll</font>

163
00:06:42,100 --> 00:06:48,700
<font color="#E5E5E5">take a look at some of</font><font color="#CCCCCC"> those binary</font>

164
00:06:43,570 --> 00:06:50,320
blobs here in a<font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> alright so</font>

165
00:06:48,700 --> 00:06:54,550
when<font color="#E5E5E5"> you look at the registry and</font>

166
00:06:50,320 --> 00:06:56,139
regedit<font color="#E5E5E5"> so if you just go</font><font color="#CCCCCC"> to run</font><font color="#E5E5E5"> or type</font>

167
00:06:54,550 --> 00:06:57,970
in regedit in the search bar in Windows

168
00:06:56,139 --> 00:07:01,540
<font color="#E5E5E5">10 it'll</font><font color="#CCCCCC"> bring up something</font><font color="#E5E5E5"> looks</font>

169
00:06:57,970 --> 00:07:03,820
similar to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> screenshot here and as we</font>

170
00:07:01,540 --> 00:07:06,370
saw<font color="#E5E5E5"> in the previous couple</font><font color="#CCCCCC"> slides I just</font>

171
00:07:03,820 --> 00:07:09,760
<font color="#CCCCCC">looked the same for for several</font><font color="#E5E5E5"> years</font>

172
00:07:06,370 --> 00:07:11,560
now<font color="#E5E5E5"> but what's happening</font><font color="#CCCCCC"> here is</font><font color="#E5E5E5"> Windows</font>

173
00:07:09,760 --> 00:07:13,419
is doing a<font color="#E5E5E5"> lot of aggregation and a lot</font>

174
00:07:11,560 --> 00:07:16,090
<font color="#E5E5E5">of work for you in the background</font><font color="#CCCCCC"> and</font>

175
00:07:13,419 --> 00:07:18,940
it's actually combining<font color="#E5E5E5"> information from</font>

176
00:07:16,090 --> 00:07:23,229
<font color="#CCCCCC">multiple files on disk called registry</font>

177
00:07:18,940 --> 00:07:25,450
hives<font color="#CCCCCC"> okay and so the</font><font color="#E5E5E5"> primary hives</font><font color="#CCCCCC"> that</font>

178
00:07:23,229 --> 00:07:29,020
comprise the registry as we see it and

179
00:07:25,450 --> 00:07:30,969
<font color="#E5E5E5">regedit are these six listed here and if</font>

180
00:07:29,020 --> 00:07:32,620
<font color="#E5E5E5">you were to draw a line between these</font>

181
00:07:30,970 --> 00:07:35,350
six you would want<font color="#E5E5E5"> to do it right here</font>

182
00:07:32,620 --> 00:07:37,750
<font color="#E5E5E5">between</font><font color="#CCCCCC"> security and</font><font color="#E5E5E5"> into user and the</font>

183
00:07:35,350 --> 00:07:39,790
reason is these top<font color="#E5E5E5"> four</font><font color="#CCCCCC"> the software</font>

184
00:07:37,750 --> 00:07:41,650
<font color="#CCCCCC">system Sam</font><font color="#E5E5E5"> and security these are all</font>

185
00:07:39,790 --> 00:07:44,130
<font color="#E5E5E5">located in the system 32 config</font>

186
00:07:41,650 --> 00:07:46,900
directory which means that they<font color="#CCCCCC"> are</font>

187
00:07:44,130 --> 00:07:49,210
central<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the entire system</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> means</font>

188
00:07:46,900 --> 00:07:52,780
<font color="#E5E5E5">the information within these registry</font>

189
00:07:49,210 --> 00:07:55,060
hives<font color="#E5E5E5"> aren't necessarily associated with</font>

190
00:07:52,780 --> 00:07:57,280
a<font color="#E5E5E5"> particular user account we can't say</font>

191
00:07:55,060 --> 00:07:58,750
that because<font color="#E5E5E5"> this</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> is in the</font>

192
00:07:57,280 --> 00:08:01,030
software hive we know that<font color="#E5E5E5"> this</font>

193
00:07:58,750 --> 00:08:02,890
<font color="#E5E5E5">particular user account</font><font color="#CCCCCC"> perform</font><font color="#E5E5E5"> that</font>

194
00:08:01,030 --> 00:08:05,049
<font color="#CCCCCC">action without</font><font color="#E5E5E5"> further investigation</font>

195
00:08:02,890 --> 00:08:08,020
okay<font color="#CCCCCC"> so these are all central to</font><font color="#E5E5E5"> this</font>

196
00:08:05,050 --> 00:08:09,850
system you'll only have<font color="#CCCCCC"> one</font><font color="#E5E5E5"> active copy</font>

197
00:08:08,020 --> 00:08:12,909
<font color="#E5E5E5">that's excluding other backups and other</font>

198
00:08:09,850 --> 00:08:14,919
things<font color="#E5E5E5"> that you would</font><font color="#CCCCCC"> find the last two</font>

199
00:08:12,910 --> 00:08:17,500
here the<font color="#CCCCCC"> into user and user class Det</font>

200
00:08:14,919 --> 00:08:18,789
these are unique to<font color="#CCCCCC"> each user account so</font>

201
00:08:17,500 --> 00:08:20,860
each user account<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> system will</font>

202
00:08:18,789 --> 00:08:22,870
<font color="#CCCCCC">have their own</font><font color="#E5E5E5"> into user hive and have</font>

203
00:08:20,860 --> 00:08:24,430
their own user class<font color="#E5E5E5"> hi</font>

204
00:08:22,870 --> 00:08:26,590
and the reason this<font color="#CCCCCC"> is important</font><font color="#E5E5E5"> is</font>

205
00:08:24,430 --> 00:08:28,720
because we can take<font color="#E5E5E5"> the</font><font color="#CCCCCC"> information that</font>

206
00:08:26,590 --> 00:08:30,520
we find in those registry hives<font color="#CCCCCC"> and we</font>

207
00:08:28,720 --> 00:08:32,830
can associate<font color="#E5E5E5"> it with a particular user</font>

208
00:08:30,520 --> 00:08:35,650
account<font color="#E5E5E5"> so because we found this</font>

209
00:08:32,830 --> 00:08:37,150
information<font color="#E5E5E5"> into user hive we know that</font>

210
00:08:35,650 --> 00:08:39,309
<font color="#E5E5E5">that is</font><font color="#CCCCCC"> associated with this user</font>

211
00:08:37,150 --> 00:08:44,470
account<font color="#E5E5E5"> and the same goes for the user</font>

212
00:08:39,309 --> 00:08:47,829
class<font color="#CCCCCC"> dad okay so there are</font><font color="#E5E5E5"> three</font>

213
00:08:44,470 --> 00:08:49,839
<font color="#CCCCCC">primary questions the registry analysis</font>

214
00:08:47,830 --> 00:08:51,520
can<font color="#CCCCCC"> help answer any context of a malware</font>

215
00:08:49,839 --> 00:08:54,420
investigation

216
00:08:51,520 --> 00:08:57,550
and the first is did it execute<font color="#CCCCCC"> okay so</font>

217
00:08:54,420 --> 00:09:00,130
<font color="#E5E5E5">this did malware or something suspicious</font>

218
00:08:57,550 --> 00:09:02,260
<font color="#E5E5E5">maybe we don't know about yet execute on</font>

219
00:09:00,130 --> 00:09:04,839
<font color="#E5E5E5">the system okay and so we'll look at</font>

220
00:09:02,260 --> 00:09:06,939
quite a bit<font color="#E5E5E5"> today some program execution</font>

221
00:09:04,839 --> 00:09:09,370
artifacts<font color="#E5E5E5"> that remain in the registry</font>

222
00:09:06,940 --> 00:09:11,740
<font color="#CCCCCC">that can be leveraged in the context</font><font color="#E5E5E5"> of</font>

223
00:09:09,370 --> 00:09:13,600
<font color="#E5E5E5">a malware investigation in fact that's</font>

224
00:09:11,740 --> 00:09:16,720
<font color="#E5E5E5">where we'll</font><font color="#CCCCCC"> spend</font><font color="#E5E5E5"> the majority of the</font>

225
00:09:13,600 --> 00:09:18,040
<font color="#CCCCCC">time today</font><font color="#E5E5E5"> but it can also help the</font>

226
00:09:16,720 --> 00:09:20,800
registry analysis can also<font color="#E5E5E5"> help to</font>

227
00:09:18,040 --> 00:09:22,870
<font color="#CCCCCC">answer how</font><font color="#E5E5E5"> his persistence maintained or</font>

228
00:09:20,800 --> 00:09:25,089
in other words how is the malware how's

229
00:09:22,870 --> 00:09:28,510
the attacker maintaining a foothold in

230
00:09:25,089 --> 00:09:30,610
<font color="#E5E5E5">your network or on your system now that</font>

231
00:09:28,510 --> 00:09:32,380
can<font color="#E5E5E5"> Spain well</font><font color="#CCCCCC"> beyond</font><font color="#E5E5E5"> the registry</font><font color="#CCCCCC"> but</font>

232
00:09:30,610 --> 00:09:35,020
the registry is one<font color="#E5E5E5"> specific component</font>

233
00:09:32,380 --> 00:09:37,029
<font color="#CCCCCC">of the operating system</font><font color="#E5E5E5"> that's often</font>

234
00:09:35,020 --> 00:09:39,850
exploited<font color="#E5E5E5"> in the context of persistence</font>

235
00:09:37,029 --> 00:09:42,970
<font color="#E5E5E5">and then finally what files and folders</font>

236
00:09:39,850 --> 00:09:44,529
were accessed<font color="#CCCCCC"> and</font><font color="#E5E5E5"> obviously this</font><font color="#CCCCCC"> is most</font>

237
00:09:42,970 --> 00:09:46,450
<font color="#CCCCCC">unit type</font><font color="#E5E5E5"> of investigation you may be</font>

238
00:09:44,529 --> 00:09:48,910
interested<font color="#CCCCCC"> in files and</font><font color="#E5E5E5"> folders accessed</font>

239
00:09:46,450 --> 00:09:52,649
<font color="#E5E5E5">but that's also important in malware so</font>

240
00:09:48,910 --> 00:09:54,880
we'll look<font color="#E5E5E5"> at that as well</font><font color="#CCCCCC"> all right so</font>

241
00:09:52,649 --> 00:09:58,209
the first location we're<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to look</font>

242
00:09:54,880 --> 00:10:00,550
at with regard to program execution<font color="#E5E5E5"> is</font>

243
00:09:58,209 --> 00:10:03,099
one that's<font color="#E5E5E5"> been</font><font color="#CCCCCC"> around for a while it's</font>

244
00:10:00,550 --> 00:10:05,770
called<font color="#CCCCCC"> Mui</font><font color="#E5E5E5"> cache or movie cache this is</font>

245
00:10:03,100 --> 00:10:07,899
located<font color="#E5E5E5"> in a user hive</font><font color="#CCCCCC"> okay so either</font>

246
00:10:05,770 --> 00:10:10,630
the user class or into user<font color="#E5E5E5"> depending on</font>

247
00:10:07,899 --> 00:10:12,160
how new your operating system is most

248
00:10:10,630 --> 00:10:15,399
anything<font color="#E5E5E5"> you would look at now would be</font>

249
00:10:12,160 --> 00:10:18,219
user class<font color="#CCCCCC"> so since we can attribute</font>

250
00:10:15,399 --> 00:10:20,339
this to<font color="#CCCCCC"> a user account</font><font color="#E5E5E5"> we know at least</font>

251
00:10:18,220 --> 00:10:23,290
the context under which<font color="#E5E5E5"> this particular</font>

252
00:10:20,339 --> 00:10:25,120
executable would have been run<font color="#E5E5E5"> okay so</font>

253
00:10:23,290 --> 00:10:27,790
what we'll<font color="#E5E5E5"> find in this particular</font>

254
00:10:25,120 --> 00:10:29,770
registry key<font color="#E5E5E5"> are things like the path to</font>

255
00:10:27,790 --> 00:10:32,260
the executables launched<font color="#E5E5E5"> will find</font>

256
00:10:29,770 --> 00:10:33,970
<font color="#E5E5E5">importantly executables that were</font>

257
00:10:32,260 --> 00:10:36,399
launched<font color="#E5E5E5"> from the command line so this</font>

258
00:10:33,970 --> 00:10:38,079
is<font color="#E5E5E5"> something that separates Mui</font><font color="#CCCCCC"> cache</font>

259
00:10:36,399 --> 00:10:38,770
from some of the other artifacts that

260
00:10:38,079 --> 00:10:42,130
we'll talk about

261
00:10:38,770 --> 00:10:44,410
that require shell<font color="#E5E5E5"> interaction so in the</font>

262
00:10:42,130 --> 00:10:46,980
Mui cache you may actually<font color="#E5E5E5"> see files</font>

263
00:10:44,410 --> 00:10:49,000
that were executed<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the command line</font>

264
00:10:46,980 --> 00:10:51,130
unfortunately we don't have<font color="#E5E5E5"> a program</font>

265
00:10:49,000 --> 00:10:53,440
execution<font color="#E5E5E5"> time so we can look at this</font>

266
00:10:51,130 --> 00:10:55,750
<font color="#E5E5E5">and say</font><font color="#CCCCCC"> okay we know</font><font color="#E5E5E5"> that these these</font>

267
00:10:53,440 --> 00:10:57,339
<font color="#E5E5E5">particular</font><font color="#CCCCCC"> programs were launched but</font><font color="#E5E5E5"> we</font>

268
00:10:55,750 --> 00:10:59,650
don't necessarily know when they were

269
00:10:57,339 --> 00:11:02,170
launched without<font color="#E5E5E5"> further investigation</font>

270
00:10:59,650 --> 00:11:04,569
into other locations<font color="#E5E5E5"> so if you were to</font>

271
00:11:02,170 --> 00:11:05,439
<font color="#E5E5E5">take a look</font><font color="#CCCCCC"> at this this is a screenshot</font>

272
00:11:04,570 --> 00:11:08,800
from<font color="#E5E5E5"> a four</font>

273
00:11:05,440 --> 00:11:10,480
viewer here<font color="#E5E5E5"> you can see here the actual</font>

274
00:11:08,800 --> 00:11:12,370
value name this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> located</font><font color="#E5E5E5"> in the immune</font>

275
00:11:10,480 --> 00:11:14,590
I cash the value name is just going<font color="#E5E5E5"> to</font>

276
00:11:12,370 --> 00:11:16,930
<font color="#E5E5E5">be the pass through the executable</font><font color="#CCCCCC"> and</font>

277
00:11:14,590 --> 00:11:20,080
what's neat here<font color="#E5E5E5"> is that in the value</font>

278
00:11:16,930 --> 00:11:22,060
data<font color="#CCCCCC"> you</font><font color="#E5E5E5"> actually have the description</font>

279
00:11:20,080 --> 00:11:24,490
field of the<font color="#CCCCCC"> EXCI so this is internal</font>

280
00:11:22,060 --> 00:11:26,500
metadata from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> XE that's written</font><font color="#E5E5E5"> into</font>

281
00:11:24,490 --> 00:11:28,930
<font color="#CCCCCC">the registry so typically it's the</font>

282
00:11:26,500 --> 00:11:30,580
description field<font color="#E5E5E5"> and more recent</font>

283
00:11:28,930 --> 00:11:32,650
versions of Windows 10 you'll also see

284
00:11:30,580 --> 00:11:34,810
the company name<font color="#CCCCCC"> so in some cases</font><font color="#E5E5E5"> you</font>

285
00:11:32,650 --> 00:11:38,470
<font color="#CCCCCC">have both of</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> components located in</font>

286
00:11:34,810 --> 00:11:40,119
the<font color="#E5E5E5"> MU I</font><font color="#CCCCCC"> cache and since this is pulled</font>

287
00:11:38,470 --> 00:11:41,860
this description is pulled directly from

288
00:11:40,120 --> 00:11:44,020
<font color="#E5E5E5">the executable you can pick up on some</font>

289
00:11:41,860 --> 00:11:47,080
<font color="#E5E5E5">pretty cool</font><font color="#CCCCCC"> things that may be</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> on</font>

290
00:11:44,020 --> 00:11:48,329
so if you look here<font color="#CCCCCC"> at the third from</font>

291
00:11:47,080 --> 00:11:51,130
the bottom

292
00:11:48,330 --> 00:11:53,620
process you've got a description<font color="#E5E5E5"> called</font>

293
00:11:51,130 --> 00:11:56,050
<font color="#E5E5E5">execute processes remotely they want to</font>

294
00:11:53,620 --> 00:12:01,110
recognize<font color="#E5E5E5"> that description possibly from</font>

295
00:11:56,050 --> 00:12:05,560
an executable it is a sysinternals tool

296
00:12:01,110 --> 00:12:09,220
yes yes exec so you can see what

297
00:12:05,560 --> 00:12:12,969
happened here is the actual PS exec

298
00:12:09,220 --> 00:12:15,340
executable is just renamed<font color="#E5E5E5"> a</font><font color="#CCCCCC"> PE DXE but</font>

299
00:12:12,970 --> 00:12:17,740
when it<font color="#E5E5E5"> was run the description</font><font color="#CCCCCC"> from PS</font>

300
00:12:15,340 --> 00:12:20,560
exec because<font color="#E5E5E5"> it was a valid executable</font>

301
00:12:17,740 --> 00:12:22,840
<font color="#E5E5E5">was pulled in and saved</font><font color="#CCCCCC"> therein in the</font>

302
00:12:20,560 --> 00:12:24,369
registry and<font color="#E5E5E5"> you can see this is an</font>

303
00:12:22,840 --> 00:12:26,440
actual<font color="#E5E5E5"> just looking at the properties of</font>

304
00:12:24,370 --> 00:12:28,750
<font color="#E5E5E5">PS exec we can see sure enough the</font>

305
00:12:26,440 --> 00:12:35,560
description there's<font color="#E5E5E5"> execute process of</font>

306
00:12:28,750 --> 00:12:37,900
<font color="#E5E5E5">remotely</font><font color="#CCCCCC"> ok so app compat cache</font><font color="#E5E5E5"> this is</font>

307
00:12:35,560 --> 00:12:41,770
a pretty big<font color="#E5E5E5"> one in the in terms of</font>

308
00:12:37,900 --> 00:12:44,620
program<font color="#CCCCCC"> execution</font><font color="#E5E5E5"> this is a value in</font><font color="#CCCCCC"> the</font>

309
00:12:41,770 --> 00:12:47,710
registry in the system hive so it's<font color="#CCCCCC"> it's</font>

310
00:12:44,620 --> 00:12:49,180
global to<font color="#CCCCCC"> this system and its</font><font color="#E5E5E5"> associated</font>

311
00:12:47,710 --> 00:12:51,880
<font color="#E5E5E5">with a Windows application compatibility</font>

312
00:12:49,180 --> 00:12:53,800
database essentially you can<font color="#E5E5E5"> do you can</font>

313
00:12:51,880 --> 00:12:55,750
do a bunch<font color="#CCCCCC"> of</font><font color="#E5E5E5"> research on that but</font><font color="#CCCCCC"> the</font>

314
00:12:53,800 --> 00:12:57,219
idea<font color="#CCCCCC"> behind</font><font color="#E5E5E5"> this is exactly what it</font>

315
00:12:55,750 --> 00:12:59,440
<font color="#E5E5E5">sounds</font><font color="#CCCCCC"> like it's</font><font color="#E5E5E5"> trying to make</font><font color="#CCCCCC"> sure</font>

316
00:12:57,220 --> 00:13:02,430
<font color="#CCCCCC">Windows is trying to make sure</font><font color="#E5E5E5"> that the</font>

317
00:12:59,440 --> 00:13:04,570
<font color="#E5E5E5">executables on your system are at least</font>

318
00:13:02,430 --> 00:13:05,890
moderately compatible with your system

319
00:13:04,570 --> 00:13:08,020
they're not going<font color="#E5E5E5"> to crash it they're</font>

320
00:13:05,890 --> 00:13:10,089
not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to cause serious issues</font><font color="#E5E5E5"> but</font>

321
00:13:08,020 --> 00:13:11,319
the way that<font color="#E5E5E5"> that presents itself and</font>

322
00:13:10,089 --> 00:13:13,810
the reason that<font color="#E5E5E5"> is important in the</font>

323
00:13:11,320 --> 00:13:15,580
context<font color="#E5E5E5"> of a forensic investigation is</font>

324
00:13:13,810 --> 00:13:18,250
that<font color="#CCCCCC"> information</font><font color="#E5E5E5"> about these executables</font>

325
00:13:15,580 --> 00:13:19,340
is actually saved<font color="#E5E5E5"> in a large registry</font>

326
00:13:18,250 --> 00:13:23,720
value called<font color="#CCCCCC"> app</font>

327
00:13:19,340 --> 00:13:26,240
-<font color="#E5E5E5"> okay so you've</font><font color="#CCCCCC"> got in located in this</font>

328
00:13:23,720 --> 00:13:29,270
actual registry value you can see this

329
00:13:26,240 --> 00:13:31,460
is<font color="#E5E5E5"> in regedit</font><font color="#CCCCCC"> there's a single value</font><font color="#E5E5E5"> but</font>

330
00:13:29,270 --> 00:13:34,100
you have things like<font color="#E5E5E5"> the file name</font><font color="#CCCCCC"> the</font>

331
00:13:31,460 --> 00:13:37,850
<font color="#CCCCCC">full path to</font><font color="#E5E5E5"> the executable</font><font color="#CCCCCC"> and a</font>

332
00:13:34,100 --> 00:13:40,190
timestamp<font color="#CCCCCC"> of that executable</font><font color="#E5E5E5"> as well if</font>

333
00:13:37,850 --> 00:13:42,110
you were to look here<font color="#CCCCCC"> in regedit</font><font color="#E5E5E5"> you can</font>

334
00:13:40,190 --> 00:13:44,150
see just by<font color="#CCCCCC"> this</font><font color="#E5E5E5"> scroll bar may be kind</font>

335
00:13:42,110 --> 00:13:45,250
of<font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to see there's a ton of</font>

336
00:13:44,150 --> 00:13:48,650
<font color="#CCCCCC">information here not exactly</font>

337
00:13:45,250 --> 00:13:51,200
<font color="#E5E5E5">user-friendly to parse luckily there are</font>

338
00:13:48,650 --> 00:13:52,670
plenty of tools<font color="#E5E5E5"> out there but there are</font>

339
00:13:51,200 --> 00:13:54,860
tools<font color="#E5E5E5"> out there that do</font><font color="#CCCCCC"> this the one I'm</font>

340
00:13:52,670 --> 00:13:57,709
using here<font color="#CCCCCC"> is registry explorer</font><font color="#E5E5E5"> it's a</font>

341
00:13:54,860 --> 00:13:59,270
free tool<font color="#CCCCCC"> if you're looking at the</font>

342
00:13:57,710 --> 00:14:02,840
registry it's a great<font color="#E5E5E5"> one</font><font color="#CCCCCC"> to use this</font>

343
00:13:59,270 --> 00:14:04,790
parses<font color="#E5E5E5"> this automatically yeah so I'll</font>

344
00:14:02,840 --> 00:14:07,160
just look at the app compat cash value

345
00:14:04,790 --> 00:14:09,290
here it's going<font color="#CCCCCC"> to parse out these these</font>

346
00:14:07,160 --> 00:14:11,870
values and<font color="#E5E5E5"> I'm a client filter in this</font>

347
00:14:09,290 --> 00:14:14,300
case<font color="#CCCCCC"> - just everything in the temp</font>

348
00:14:11,870 --> 00:14:15,980
directory<font color="#CCCCCC"> so what</font><font color="#E5E5E5"> this is showing me are</font>

349
00:14:14,300 --> 00:14:20,300
executables in a temp directory

350
00:14:15,980 --> 00:14:22,100
<font color="#E5E5E5">somewhere</font><font color="#CCCCCC"> as well as a timestamp</font><font color="#E5E5E5"> now</font><font color="#CCCCCC"> the</font>

351
00:14:20,300 --> 00:14:25,400
important thing with this<font color="#E5E5E5"> timestamp is</font>

352
00:14:22,100 --> 00:14:28,130
that with the<font color="#E5E5E5"> exception</font><font color="#CCCCCC"> of older</font>

353
00:14:25,400 --> 00:14:31,040
versions of<font color="#E5E5E5"> Windows</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is going to be</font>

354
00:14:28,130 --> 00:14:33,140
the last modified<font color="#CCCCCC"> time of the executable</font>

355
00:14:31,040 --> 00:14:35,300
<font color="#CCCCCC">not in execution time so that's a</font><font color="#E5E5E5"> very</font>

356
00:14:33,140 --> 00:14:38,150
commonly misunderstood artifact or

357
00:14:35,300 --> 00:14:40,069
timestamp<font color="#CCCCCC"> because</font><font color="#E5E5E5"> people when they look</font>

358
00:14:38,150 --> 00:14:42,140
at<font color="#E5E5E5"> this they</font><font color="#CCCCCC"> want to say okay this</font>

359
00:14:40,070 --> 00:14:44,060
<font color="#E5E5E5">timestamp this must be the last time</font>

360
00:14:42,140 --> 00:14:45,770
<font color="#E5E5E5">that that program was executed</font><font color="#CCCCCC"> in</font>

361
00:14:44,060 --> 00:14:47,599
reality<font color="#E5E5E5"> that's probably not the</font><font color="#CCCCCC"> case</font>

362
00:14:45,770 --> 00:14:51,140
<font color="#CCCCCC">unless</font><font color="#E5E5E5"> you're looking</font><font color="#CCCCCC"> at an older system</font>

363
00:14:47,600 --> 00:14:53,180
in fact if you have executables that<font color="#E5E5E5"> are</font>

364
00:14:51,140 --> 00:14:54,980
time<font color="#CCCCCC"> stomped I mean you're just looking</font>

365
00:14:53,180 --> 00:14:57,979
at<font color="#E5E5E5"> the time stock value here so it's not</font>

366
00:14:54,980 --> 00:14:59,210
<font color="#E5E5E5">even may not be valuable at all other</font>

367
00:14:57,980 --> 00:15:04,940
<font color="#CCCCCC">than the fact that you can see that</font><font color="#E5E5E5"> this</font>

368
00:14:59,210 --> 00:15:07,670
executable existed at some<font color="#E5E5E5"> point I I</font>

369
00:15:04,940 --> 00:15:09,590
mentioned or I had a bullet in<font color="#E5E5E5"> a couple</font>

370
00:15:07,670 --> 00:15:11,390
slides<font color="#CCCCCC"> ago about the app</font><font color="#E5E5E5"> compat</font><font color="#CCCCCC"> cache</font>

371
00:15:09,590 --> 00:15:13,250
<font color="#CCCCCC">only being written to the registry</font>

372
00:15:11,390 --> 00:15:16,990
<font color="#E5E5E5">that's shut down and that's important</font>

373
00:15:13,250 --> 00:15:19,940
because<font color="#CCCCCC"> if you go into</font><font color="#E5E5E5"> a live scene and</font>

374
00:15:16,990 --> 00:15:22,610
you just pull the registry hives off the

375
00:15:19,940 --> 00:15:24,620
<font color="#E5E5E5">disk or you do a live image</font><font color="#CCCCCC"> you are</font>

376
00:15:22,610 --> 00:15:26,390
<font color="#E5E5E5">getting those registry hives as they</font>

377
00:15:24,620 --> 00:15:28,160
exist on the disk<font color="#CCCCCC"> you're not necessarily</font>

378
00:15:26,390 --> 00:15:29,660
<font color="#E5E5E5">getting all the cache</font><font color="#CCCCCC"> information that</font>

379
00:15:28,160 --> 00:15:32,449
hasn't<font color="#E5E5E5"> actually been written</font><font color="#CCCCCC"> to the</font>

380
00:15:29,660 --> 00:15:33,230
registry yet so in<font color="#E5E5E5"> order to get that you</font>

381
00:15:32,450 --> 00:15:36,860
<font color="#CCCCCC">would need</font><font color="#E5E5E5"> to do</font>

382
00:15:33,230 --> 00:15:38,150
a memory capture on<font color="#E5E5E5"> site or if you've</font>

383
00:15:36,860 --> 00:15:40,360
<font color="#CCCCCC">got a system that had been</font><font color="#E5E5E5"> shut down</font>

384
00:15:38,150 --> 00:15:44,030
previously you would you<font color="#E5E5E5"> would have this</font>

385
00:15:40,360 --> 00:15:46,480
<font color="#E5E5E5">but the the key here is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you could</font>

386
00:15:44,030 --> 00:15:48,470
<font color="#E5E5E5">end up with a lot of information in RAM</font>

387
00:15:46,480 --> 00:15:50,150
<font color="#E5E5E5">associated with the app compat cache</font>

388
00:15:48,470 --> 00:15:52,370
that<font color="#E5E5E5"> is not available</font><font color="#CCCCCC"> in the registry</font>

389
00:15:50,150 --> 00:15:54,920
until shut down unless you<font color="#CCCCCC"> grab the</font>

390
00:15:52,370 --> 00:15:57,140
memory dump<font color="#E5E5E5"> luckily if you do grab the</font>

391
00:15:54,920 --> 00:15:59,930
memory dump<font color="#E5E5E5"> there's a volatility</font><font color="#CCCCCC"> plug in</font>

392
00:15:57,140 --> 00:16:04,370
as the<font color="#E5E5E5"> volatilities one of the there's</font>

393
00:15:59,930 --> 00:16:06,500
kind of<font color="#E5E5E5"> two maybe</font><font color="#CCCCCC"> thirty big memory</font>

394
00:16:04,370 --> 00:16:10,190
analysis frameworks<font color="#E5E5E5"> volatility is one of</font>

395
00:16:06,500 --> 00:16:12,530
<font color="#E5E5E5">those it has a shim cache plugin so you</font>

396
00:16:10,190 --> 00:16:14,090
also<font color="#E5E5E5"> if you're doing</font><font color="#CCCCCC"> research research</font>

397
00:16:12,530 --> 00:16:16,280
on this and<font color="#CCCCCC"> you see the word swim</font><font color="#E5E5E5"> cache</font>

398
00:16:14,090 --> 00:16:18,100
that's essentially<font color="#CCCCCC"> it's that's</font><font color="#E5E5E5"> app</font>

399
00:16:16,280 --> 00:16:20,930
<font color="#E5E5E5">compat cache so they're kind of loosely</font>

400
00:16:18,100 --> 00:16:22,400
<font color="#CCCCCC">the same words</font><font color="#E5E5E5"> are used for</font><font color="#CCCCCC"> the same</font>

401
00:16:20,930 --> 00:16:24,800
<font color="#E5E5E5">thing they're different words used</font><font color="#CCCCCC"> for</font>

402
00:16:22,400 --> 00:16:26,959
the same thing<font color="#CCCCCC"> there's a swim cache</font>

403
00:16:24,800 --> 00:16:29,920
<font color="#CCCCCC">plug-in and so you can run that and</font>

404
00:16:26,960 --> 00:16:32,260
filter in this case I'm looking<font color="#CCCCCC"> for</font>

405
00:16:29,920 --> 00:16:34,490
executables in the app data directory so

406
00:16:32,260 --> 00:16:36,620
in array it's important to understand

407
00:16:34,490 --> 00:16:38,690
that you may be<font color="#CCCCCC"> missing quite</font><font color="#E5E5E5"> a bit of</font>

408
00:16:36,620 --> 00:16:43,160
information<font color="#CCCCCC"> if you don't grab a memory</font>

409
00:16:38,690 --> 00:16:43,760
<font color="#E5E5E5">dump when you're looking</font><font color="#CCCCCC"> at this all</font>

410
00:16:43,160 --> 00:16:47,300
right

411
00:16:43,760 --> 00:16:49,069
the am cache is another part<font color="#E5E5E5"> of the</font>

412
00:16:47,300 --> 00:16:51,709
application<font color="#CCCCCC"> compatibility database so</font>

413
00:16:49,070 --> 00:16:53,920
just like the app compat cache this is

414
00:16:51,710 --> 00:16:57,230
<font color="#CCCCCC">also associated with that same feature</font>

415
00:16:53,920 --> 00:16:59,449
<font color="#E5E5E5">however unlike the</font><font color="#CCCCCC"> app compat cache</font><font color="#E5E5E5"> this</font>

416
00:16:57,230 --> 00:17:01,340
is an entire registry hive all to itself

417
00:16:59,450 --> 00:17:05,450
<font color="#E5E5E5">so</font><font color="#CCCCCC"> I didn't list</font><font color="#E5E5E5"> it in the</font><font color="#CCCCCC"> primary</font><font color="#E5E5E5"> hives</font>

418
00:17:01,340 --> 00:17:07,760
<font color="#E5E5E5">in the beginning of the presentation</font><font color="#CCCCCC"> but</font>

419
00:17:05,450 --> 00:17:10,220
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> actually load this thing up</font><font color="#E5E5E5"> into</font>

420
00:17:07,760 --> 00:17:11,780
a registry viewer and look at it<font color="#E5E5E5"> just</font>

421
00:17:10,220 --> 00:17:14,089
<font color="#E5E5E5">like you</font><font color="#CCCCCC"> would any other registry hive</font>

422
00:17:11,780 --> 00:17:17,990
and this<font color="#E5E5E5"> stores a ton of information</font>

423
00:17:14,089 --> 00:17:20,929
<font color="#E5E5E5">about programs and dll's and executables</font>

424
00:17:17,990 --> 00:17:24,849
<font color="#E5E5E5">on the system okay so everything from</font>

425
00:17:20,930 --> 00:17:27,530
hash values multiple<font color="#E5E5E5"> time stamps</font>

426
00:17:24,849 --> 00:17:30,199
metadata about the<font color="#E5E5E5"> executables it's kind</font>

427
00:17:27,530 --> 00:17:32,570
of like we saw in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> MU I cache file</font>

428
00:17:30,200 --> 00:17:36,440
<font color="#E5E5E5">sizes all of</font><font color="#CCCCCC"> that is going</font><font color="#E5E5E5"> to be stored</font>

429
00:17:32,570 --> 00:17:38,000
in<font color="#E5E5E5"> this aim cache so it's technically it</font>

430
00:17:36,440 --> 00:17:39,950
was released with recent versions of

431
00:17:38,000 --> 00:17:42,980
<font color="#E5E5E5">Windows however</font><font color="#CCCCCC"> if you've going</font><font color="#E5E5E5"> back to</font>

432
00:17:39,950 --> 00:17:44,360
Windows<font color="#CCCCCC"> 7</font><font color="#E5E5E5"> I don't hand what</font><font color="#CCCCCC"> update it</font>

433
00:17:42,980 --> 00:17:45,890
was but there's an update release for

434
00:17:44,360 --> 00:17:47,030
Windows 7<font color="#E5E5E5"> and as long</font><font color="#CCCCCC"> as you've</font>

435
00:17:45,890 --> 00:17:49,310
installed<font color="#E5E5E5"> that</font>

436
00:17:47,030 --> 00:17:51,080
the<font color="#E5E5E5"> am</font><font color="#CCCCCC"> cash is going to be back ported</font>

437
00:17:49,310 --> 00:17:53,629
<font color="#CCCCCC">on</font><font color="#E5E5E5"> to your Windows 7 system as well</font><font color="#CCCCCC"> so</font>

438
00:17:51,080 --> 00:17:55,580
even<font color="#CCCCCC"> if you're looking at older systems</font>

439
00:17:53,630 --> 00:17:58,880
<font color="#E5E5E5">you could very</font><font color="#CCCCCC"> well run</font><font color="#E5E5E5"> into this</font>

440
00:17:55,580 --> 00:18:00,710
<font color="#E5E5E5">artifact so if you're to take a look at</font>

441
00:17:58,880 --> 00:18:02,480
this<font color="#E5E5E5"> in a registry viewer this is again</font>

442
00:18:00,710 --> 00:18:05,660
using<font color="#CCCCCC"> that registry</font><font color="#E5E5E5"> Explorer tool I</font>

443
00:18:02,480 --> 00:18:07,940
talked about earlier<font color="#CCCCCC"> you can see that</font>

444
00:18:05,660 --> 00:18:09,920
there is a<font color="#E5E5E5"> programs key with a bunch of</font>

445
00:18:07,940 --> 00:18:12,770
sub keys<font color="#E5E5E5"> that appear to be randomly</font>

446
00:18:09,920 --> 00:18:14,300
named<font color="#E5E5E5"> within each of</font><font color="#CCCCCC"> these sub keys</font><font color="#E5E5E5"> you</font>

447
00:18:12,770 --> 00:18:16,400
have<font color="#E5E5E5"> quite a bit of information about</font><font color="#CCCCCC"> a</font>

448
00:18:14,300 --> 00:18:18,070
particular program on that<font color="#CCCCCC"> system so in</font>

449
00:18:16,400 --> 00:18:21,710
this case we're looking<font color="#E5E5E5"> at a</font><font color="#CCCCCC"> TrueCrypt</font>

450
00:18:18,070 --> 00:18:25,490
<font color="#E5E5E5">version here and if you look at the</font>

451
00:18:21,710 --> 00:18:27,800
value names<font color="#CCCCCC"> you can see it's 0 1 1</font><font color="#E5E5E5"> 3 14</font>

452
00:18:25,490 --> 00:18:30,560
not exactly descriptive<font color="#CCCCCC"> alright so we</font>

453
00:18:27,800 --> 00:18:32,290
<font color="#CCCCCC">can see by the data ok maybe this is the</font>

454
00:18:30,560 --> 00:18:34,370
<font color="#E5E5E5">product name maybe this is the version</font>

455
00:18:32,290 --> 00:18:35,530
but some of this other<font color="#CCCCCC"> stuff we don't</font>

456
00:18:34,370 --> 00:18:38,840
<font color="#E5E5E5">know what it is</font>

457
00:18:35,530 --> 00:18:40,670
luckily that's been<font color="#E5E5E5"> documented</font><font color="#CCCCCC"> so a lot</font>

458
00:18:38,840 --> 00:18:42,919
<font color="#CCCCCC">of this we</font><font color="#E5E5E5"> we can kind of figure out</font>

459
00:18:40,670 --> 00:18:47,210
what what those particular<font color="#E5E5E5"> values are</font>

460
00:18:42,920 --> 00:18:49,340
associated with<font color="#E5E5E5"> so you can see at the</font>

461
00:18:47,210 --> 00:18:50,930
<font color="#E5E5E5">top we've got the sha-1 hash</font><font color="#CCCCCC"> so that</font>

462
00:18:49,340 --> 00:18:53,449
would<font color="#E5E5E5"> allow</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> to do white listing black</font>

463
00:18:50,930 --> 00:18:56,090
listing and looking for other instances

464
00:18:53,450 --> 00:18:58,700
<font color="#E5E5E5">of</font><font color="#CCCCCC"> this particular program</font><font color="#E5E5E5"> across an</font>

465
00:18:56,090 --> 00:19:00,770
enterprise<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this is all keep in mind</font>

466
00:18:58,700 --> 00:19:02,960
this is all<font color="#CCCCCC"> without access to the actual</font>

467
00:19:00,770 --> 00:19:05,780
program with the executable itself<font color="#CCCCCC"> so</font>

468
00:19:02,960 --> 00:19:08,240
this is based solely<font color="#E5E5E5"> on information in</font>

469
00:19:05,780 --> 00:19:11,000
the registry<font color="#E5E5E5"> where that file was stored</font>

470
00:19:08,240 --> 00:19:12,560
or executed now you've got a few

471
00:19:11,000 --> 00:19:15,350
<font color="#E5E5E5">timestamps associated with the</font>

472
00:19:12,560 --> 00:19:17,270
executable so the<font color="#E5E5E5"> file system modified</font>

473
00:19:15,350 --> 00:19:20,810
time as well as the creation time so

474
00:19:17,270 --> 00:19:22,879
<font color="#E5E5E5">this is the file system</font><font color="#CCCCCC"> timestamps you</font>

475
00:19:20,810 --> 00:19:24,409
get the<font color="#CCCCCC"> compile time of the EXCI so this</font>

476
00:19:22,880 --> 00:19:27,770
is that<font color="#E5E5E5"> some of that internal metadata</font>

477
00:19:24,410 --> 00:19:29,540
as well as the product name so what's

478
00:19:27,770 --> 00:19:32,870
<font color="#E5E5E5">kind of cool here is that if you combine</font>

479
00:19:29,540 --> 00:19:34,340
<font color="#E5E5E5">the data from the aim cache specifically</font>

480
00:19:32,870 --> 00:19:36,679
the product name in the<font color="#CCCCCC"> compile time</font>

481
00:19:34,340 --> 00:19:39,050
<font color="#CCCCCC">with the Mui cache you could be you</font>

482
00:19:36,680 --> 00:19:41,300
could<font color="#CCCCCC"> potentially build</font><font color="#E5E5E5"> a decent profile</font>

483
00:19:39,050 --> 00:19:42,770
of an executable<font color="#CCCCCC"> from</font><font color="#E5E5E5"> an internal</font>

484
00:19:41,300 --> 00:19:44,720
metadata standpoint<font color="#E5E5E5"> in other words you</font>

485
00:19:42,770 --> 00:19:46,340
have you know<font color="#E5E5E5"> when this executable is</font>

486
00:19:44,720 --> 00:19:47,660
compiled you know the product name

487
00:19:46,340 --> 00:19:49,280
behind<font color="#E5E5E5"> it</font><font color="#CCCCCC"> you know the company name</font>

488
00:19:47,660 --> 00:19:52,190
<font color="#CCCCCC">behind it and</font><font color="#E5E5E5"> you know the description</font>

489
00:19:49,280 --> 00:19:53,060
<font color="#CCCCCC">at least based on</font><font color="#E5E5E5"> the internal metadata</font>

490
00:19:52,190 --> 00:19:54,740
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> EXCI</font>

491
00:19:53,060 --> 00:19:57,110
all with that actually<font color="#E5E5E5"> having access to</font>

492
00:19:54,740 --> 00:20:01,090
<font color="#E5E5E5">that file so all just with information</font>

493
00:19:57,110 --> 00:20:01,090
stored natively in the registry

494
00:20:04,190 --> 00:20:12,480
any questions<font color="#CCCCCC"> and actually</font><font color="#E5E5E5"> one more</font>

495
00:20:10,680 --> 00:20:15,030
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> I forgot to mention with respect</font>

496
00:20:12,480 --> 00:20:18,360
to<font color="#CCCCCC"> am</font><font color="#E5E5E5"> cash one of the really neat</font><font color="#CCCCCC"> things</font>

497
00:20:15,030 --> 00:20:21,540
<font color="#E5E5E5">that this allows you to do that</font><font color="#CCCCCC"> kind of</font>

498
00:20:18,360 --> 00:20:24,360
sets this apart from other artifacts is

499
00:20:21,540 --> 00:20:27,149
it allows you<font color="#E5E5E5"> to determine executables</font>

500
00:20:24,360 --> 00:20:30,570
that arrived on your system as a result

501
00:20:27,150 --> 00:20:32,550
<font color="#E5E5E5">of program installations so for example</font>

502
00:20:30,570 --> 00:20:34,139
when you install Microsoft Office or any

503
00:20:32,550 --> 00:20:35,850
large application like that

504
00:20:34,140 --> 00:20:38,520
<font color="#CCCCCC">there going</font><font color="#E5E5E5"> to be multiple executables</font>

505
00:20:35,850 --> 00:20:40,379
<font color="#CCCCCC">dumped on your system well looking at</font>

506
00:20:38,520 --> 00:20:42,810
the<font color="#CCCCCC"> M cache and look and doing analysis</font>

507
00:20:40,380 --> 00:20:45,600
<font color="#CCCCCC">of that will allow you to</font><font color="#E5E5E5"> determine</font>

508
00:20:42,810 --> 00:20:47,429
<font color="#E5E5E5">which executables exist on your system</font>

509
00:20:45,600 --> 00:20:49,610
as a<font color="#E5E5E5"> result of some type of</font><font color="#CCCCCC"> msi</font>

510
00:20:47,430 --> 00:20:52,560
installation or some type of installer

511
00:20:49,610 --> 00:20:53,129
<font color="#E5E5E5">versus which ones do you not know how</font>

512
00:20:52,560 --> 00:20:55,500
they got there

513
00:20:53,130 --> 00:20:58,080
right so<font color="#E5E5E5"> we don't know whether they were</font>

514
00:20:55,500 --> 00:20:59,610
downloaded maybe<font color="#CCCCCC"> they're in the you know</font>

515
00:20:58,080 --> 00:21:02,639
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> in some random directory we</font>

516
00:20:59,610 --> 00:21:04,139
don't know why they're on your<font color="#E5E5E5"> system so</font>

517
00:21:02,640 --> 00:21:06,720
if you can take those handful of

518
00:21:04,140 --> 00:21:08,850
executables that<font color="#E5E5E5"> we have no idea what</font>

519
00:21:06,720 --> 00:21:10,800
program they're associated with<font color="#E5E5E5"> or how</font>

520
00:21:08,850 --> 00:21:13,290
they came to be<font color="#E5E5E5"> on your system you can</font>

521
00:21:10,800 --> 00:21:15,780
dramatically<font color="#CCCCCC"> reduce the amount of</font><font color="#E5E5E5"> data</font>

522
00:21:13,290 --> 00:21:20,700
you're<font color="#CCCCCC"> looking at and the time that it</font>

523
00:21:15,780 --> 00:21:23,760
takes you<font color="#CCCCCC"> to analyze that system so user</font>

524
00:21:20,700 --> 00:21:25,980
assist is another location<font color="#E5E5E5"> here that we</font>

525
00:21:23,760 --> 00:21:26,610
commonly look at with<font color="#E5E5E5"> regard to program</font>

526
00:21:25,980 --> 00:21:28,980
execution

527
00:21:26,610 --> 00:21:30,570
this is different from<font color="#E5E5E5"> some of the</font>

528
00:21:28,980 --> 00:21:33,720
others in<font color="#CCCCCC"> that this will require</font>

529
00:21:30,570 --> 00:21:35,929
interaction<font color="#CCCCCC"> with the shell okay so this</font>

530
00:21:33,720 --> 00:21:39,660
is<font color="#E5E5E5"> going to this is not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to catch</font>

531
00:21:35,930 --> 00:21:41,100
users running<font color="#CCCCCC"> a</font><font color="#E5E5E5"> command prompt or</font>

532
00:21:39,660 --> 00:21:42,360
<font color="#CCCCCC">executing commands from</font><font color="#E5E5E5"> the command</font>

533
00:21:41,100 --> 00:21:43,679
prompt it is going to require

534
00:21:42,360 --> 00:21:47,310
<font color="#CCCCCC">interaction with the shell so it's kind</font>

535
00:21:43,680 --> 00:21:49,110
of a caveat<font color="#CCCCCC"> here however</font><font color="#E5E5E5"> if there is</font>

536
00:21:47,310 --> 00:21:51,360
shell interaction you're going to find

537
00:21:49,110 --> 00:21:53,969
some pretty<font color="#E5E5E5"> valuable</font><font color="#CCCCCC"> information here as</font>

538
00:21:51,360 --> 00:21:57,000
far as program execution<font color="#E5E5E5"> last time</font>

539
00:21:53,970 --> 00:21:59,460
programs relaunched<font color="#E5E5E5"> the context of the</font>

540
00:21:57,000 --> 00:22:02,340
the<font color="#CCCCCC"> launch so because these are in a</font>

541
00:21:59,460 --> 00:22:04,560
this<font color="#E5E5E5"> is any into user registry hive</font><font color="#CCCCCC"> you</font>

542
00:22:02,340 --> 00:22:07,459
<font color="#CCCCCC">can tie that to a</font><font color="#E5E5E5"> specific user account</font>

543
00:22:04,560 --> 00:22:09,990
so we know this user ran this particular

544
00:22:07,460 --> 00:22:10,960
application<font color="#E5E5E5"> and here's the last time</font>

545
00:22:09,990 --> 00:22:13,900
they ran it

546
00:22:10,960 --> 00:22:16,900
yeah if you if you were to look<font color="#E5E5E5"> at these</font>

547
00:22:13,900 --> 00:22:19,090
in regedit<font color="#CCCCCC"> you would see some</font><font color="#E5E5E5"> garbage</font>

548
00:22:16,900 --> 00:22:21,600
that looks like this<font color="#E5E5E5"> because these</font>

549
00:22:19,090 --> 00:22:25,270
<font color="#E5E5E5">values in the user assist or rot13</font>

550
00:22:21,600 --> 00:22:27,159
<font color="#E5E5E5">encrypted</font><font color="#CCCCCC"> okay so if</font><font color="#E5E5E5"> you need to decrypt</font>

551
00:22:25,270 --> 00:22:29,740
those you would just<font color="#E5E5E5"> shift each letter</font>

552
00:22:27,160 --> 00:22:31,510
in<font color="#E5E5E5"> that value down 13 letters down the</font>

553
00:22:29,740 --> 00:22:36,370
alphabet<font color="#CCCCCC"> if you guys are you familiar</font>

554
00:22:31,510 --> 00:22:37,780
<font color="#E5E5E5">fuck rot13</font><font color="#CCCCCC"> so very very trivial to to</font>

555
00:22:36,370 --> 00:22:40,179
decrypt just kind of annoying if you're

556
00:22:37,780 --> 00:22:43,090
trying to<font color="#E5E5E5"> look at it and regedit</font><font color="#CCCCCC"> but</font>

557
00:22:40,180 --> 00:22:45,280
most any forensic tool or any user

558
00:22:43,090 --> 00:22:48,189
assist viewing tool will decrypt<font color="#E5E5E5"> this</font>

559
00:22:45,280 --> 00:22:49,389
for you<font color="#CCCCCC"> and show so if we're looking</font>

560
00:22:48,190 --> 00:22:52,030
here<font color="#CCCCCC"> you can actually</font><font color="#E5E5E5"> see here's an</font>

561
00:22:49,390 --> 00:22:54,490
example you can<font color="#CCCCCC"> see in this</font><font color="#E5E5E5"> case there's</font>

562
00:22:52,030 --> 00:22:55,960
actually this is like a benign

563
00:22:54,490 --> 00:22:58,780
executable but<font color="#CCCCCC"> it's showing</font><font color="#E5E5E5"> an</font>

564
00:22:55,960 --> 00:23:00,520
executable<font color="#E5E5E5"> being launched from</font><font color="#CCCCCC"> a network</font>

565
00:22:58,780 --> 00:23:03,760
<font color="#CCCCCC">resource</font><font color="#E5E5E5"> you see there's a controller</font>

566
00:23:00,520 --> 00:23:05,410
<font color="#E5E5E5">resource here</font><font color="#CCCCCC"> that's being X it's being</font>

567
00:23:03,760 --> 00:23:07,960
accessed<font color="#E5E5E5"> and there is an X C being</font>

568
00:23:05,410 --> 00:23:10,480
<font color="#E5E5E5">launched from that we can see</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the</font>

569
00:23:07,960 --> 00:23:12,250
number<font color="#E5E5E5"> of times that particular X C has</font>

570
00:23:10,480 --> 00:23:14,350
<font color="#E5E5E5">been launched as well as the last time</font>

571
00:23:12,250 --> 00:23:17,140
<font color="#CCCCCC">that it's been</font><font color="#E5E5E5"> launched</font><font color="#CCCCCC"> okay so you can</font>

572
00:23:14,350 --> 00:23:18,879
use<font color="#CCCCCC"> this run counter</font><font color="#E5E5E5"> in things like the</font>

573
00:23:17,140 --> 00:23:21,580
least frequency of occurrence analysis

574
00:23:18,880 --> 00:23:24,190
so if you find that you know most

575
00:23:21,580 --> 00:23:26,110
applications on it<font color="#E5E5E5"> on a system have</font><font color="#CCCCCC"> been</font>

576
00:23:24,190 --> 00:23:27,580
run at<font color="#E5E5E5"> least a dozen times maybe even a</font>

577
00:23:26,110 --> 00:23:29,409
few hundred<font color="#E5E5E5"> depending on what they are</font>

578
00:23:27,580 --> 00:23:30,790
<font color="#E5E5E5">but then all of a</font><font color="#CCCCCC"> sudden there's a</font>

579
00:23:29,410 --> 00:23:33,910
couple<font color="#E5E5E5"> of them that have only been run</font>

580
00:23:30,790 --> 00:23:36,129
once or twice<font color="#E5E5E5"> well if you look at those</font>

581
00:23:33,910 --> 00:23:38,230
a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> closer you may find that</font>

582
00:23:36,130 --> 00:23:40,210
those<font color="#E5E5E5"> are they could have been a dropper</font>

583
00:23:38,230 --> 00:23:43,660
<font color="#E5E5E5">it could have been some of the some of</font>

584
00:23:40,210 --> 00:23:46,140
<font color="#E5E5E5">the initial infection</font><font color="#CCCCCC"> points all just</font>

585
00:23:43,660 --> 00:23:48,280
<font color="#CCCCCC">through looking at the run counter or</font>

586
00:23:46,140 --> 00:23:55,420
<font color="#E5E5E5">the number of pounds it's actually been</font>

587
00:23:48,280 --> 00:23:58,000
executed all right so recent apps this

588
00:23:55,420 --> 00:23:59,950
<font color="#E5E5E5">is the last program execution artifact</font>

589
00:23:58,000 --> 00:24:02,820
<font color="#CCCCCC">we'll look</font><font color="#E5E5E5"> at this is new to Windows</font><font color="#CCCCCC"> 10</font>

590
00:23:59,950 --> 00:24:05,830
<font color="#E5E5E5">and</font><font color="#CCCCCC"> as far as</font><font color="#E5E5E5"> I know it is currently</font>

591
00:24:02,820 --> 00:24:07,260
undocumented<font color="#E5E5E5"> and published so if you're</font>

592
00:24:05,830 --> 00:24:11,560
looking<font color="#CCCCCC"> into it you</font><font color="#E5E5E5"> heard it here first</font>

593
00:24:07,260 --> 00:24:14,020
<font color="#CCCCCC">this</font><font color="#E5E5E5"> will track actual</font><font color="#CCCCCC"> executors</font>

594
00:24:11,560 --> 00:24:16,120
programs as well<font color="#E5E5E5"> as files access from</font>

595
00:24:14,020 --> 00:24:18,160
those programs<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it kind of combines</font><font color="#E5E5E5"> a</font>

596
00:24:16,120 --> 00:24:20,649
few different investigative techniques

597
00:24:18,160 --> 00:24:23,650
<font color="#E5E5E5">all into one location located in the</font>

598
00:24:20,650 --> 00:24:24,760
into user hive and you can see here<font color="#E5E5E5"> I'm</font>

599
00:24:23,650 --> 00:24:29,049
looking<font color="#CCCCCC"> at an example</font>

600
00:24:24,760 --> 00:24:31,629
of command<font color="#CCCCCC"> XE</font><font color="#E5E5E5"> being being run you can</font>

601
00:24:29,049 --> 00:24:34,990
see the last access time<font color="#CCCCCC"> okay so</font><font color="#E5E5E5"> this is</font>

602
00:24:31,630 --> 00:24:38,530
a this<font color="#CCCCCC"> is stored as a an 8 byte value</font>

603
00:24:34,990 --> 00:24:41,919
it's a to file time format so it's a

604
00:24:38,530 --> 00:24:43,870
pretty<font color="#E5E5E5"> standard NTFS</font><font color="#CCCCCC"> filesystem</font>

605
00:24:41,919 --> 00:24:45,669
time so you can easily<font color="#E5E5E5"> convert that if</font>

606
00:24:43,870 --> 00:24:48,699
you have the right tools<font color="#CCCCCC"> and then you</font>

607
00:24:45,669 --> 00:24:50,230
<font color="#E5E5E5">can see a launch count okay so if you're</font>

608
00:24:48,700 --> 00:24:51,850
<font color="#CCCCCC">looking at this</font><font color="#E5E5E5"> since we just talked</font>

609
00:24:50,230 --> 00:24:53,559
about<font color="#E5E5E5"> user assist you may be thinking</font>

610
00:24:51,850 --> 00:24:55,449
well<font color="#E5E5E5"> this looks</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> the same type of</font>

611
00:24:53,559 --> 00:24:57,250
<font color="#CCCCCC">information</font><font color="#E5E5E5"> that's in the user assist</font>

612
00:24:55,450 --> 00:24:59,110
<font color="#CCCCCC">fee right so you've got the path to the</font>

613
00:24:57,250 --> 00:25:02,320
executable<font color="#CCCCCC"> the number of times it was</font>

614
00:24:59,110 --> 00:25:05,139
run the last time<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it was run and in</font>

615
00:25:02,320 --> 00:25:07,418
<font color="#E5E5E5">fact in my experience in our research I</font>

616
00:25:05,140 --> 00:25:09,910
found that it is<font color="#E5E5E5"> the same right</font><font color="#CCCCCC"> so it</font>

617
00:25:07,419 --> 00:25:11,440
these these numbers<font color="#CCCCCC"> that these</font>

618
00:25:09,910 --> 00:25:14,169
<font color="#E5E5E5">statistics will match what's in the user</font>

619
00:25:11,440 --> 00:25:16,240
<font color="#E5E5E5">assist the reason however this is</font><font color="#CCCCCC"> also</font>

620
00:25:14,169 --> 00:25:18,970
important is the user assist is one of

621
00:25:16,240 --> 00:25:22,690
the most<font color="#E5E5E5"> well known locations for</font>

622
00:25:18,970 --> 00:25:24,220
storing executed<font color="#E5E5E5"> user activity in</font>

623
00:25:22,690 --> 00:25:26,890
general<font color="#CCCCCC"> right so you</font><font color="#E5E5E5"> can generalize that</font>

624
00:25:24,220 --> 00:25:28,510
so if you<font color="#E5E5E5"> have any type of anti forensic</font>

625
00:25:26,890 --> 00:25:30,820
measures being<font color="#CCCCCC"> taken whether that's from</font>

626
00:25:28,510 --> 00:25:33,010
<font color="#E5E5E5">a user standpoint of intentionally</font>

627
00:25:30,820 --> 00:25:35,799
clearing information or that's from the

628
00:25:33,010 --> 00:25:37,690
system<font color="#E5E5E5"> doing some type of</font><font color="#CCCCCC"> cleanup you</font>

629
00:25:35,799 --> 00:25:38,799
can pretty much bet that the user assist

630
00:25:37,690 --> 00:25:40,450
is going to be<font color="#E5E5E5"> one of the first</font>

631
00:25:38,799 --> 00:25:42,668
<font color="#CCCCCC">locations in the registry</font><font color="#E5E5E5"> that's going</font>

632
00:25:40,450 --> 00:25:43,210
to be wiped out from<font color="#E5E5E5"> an anti</font><font color="#CCCCCC"> forensic</font>

633
00:25:42,669 --> 00:25:45,130
standpoint

634
00:25:43,210 --> 00:25:47,950
however themes like<font color="#E5E5E5"> the recent apps and</font>

635
00:25:45,130 --> 00:25:50,320
<font color="#E5E5E5">some of the lesser-known locations</font><font color="#CCCCCC"> these</font>

636
00:25:47,950 --> 00:25:51,940
may not be<font color="#E5E5E5"> wiped</font><font color="#CCCCCC"> outs because</font><font color="#E5E5E5"> they're</font>

637
00:25:50,320 --> 00:25:53,559
<font color="#E5E5E5">not they're not known about right so you</font>

638
00:25:51,940 --> 00:25:55,559
have<font color="#E5E5E5"> to know about these locations</font>

639
00:25:53,559 --> 00:25:58,030
before<font color="#E5E5E5"> you can get rid of them</font><font color="#CCCCCC"> ok so</font>

640
00:25:55,559 --> 00:25:59,500
finding additional<font color="#E5E5E5"> locations of</font>

641
00:25:58,030 --> 00:26:01,750
information like<font color="#E5E5E5"> this will allow you to</font>

642
00:25:59,500 --> 00:26:03,820
<font color="#E5E5E5">not only uncover things that may have</font>

643
00:26:01,750 --> 00:26:05,110
been wiped out from<font color="#E5E5E5"> other locations</font><font color="#CCCCCC"> but</font>

644
00:26:03,820 --> 00:26:06,790
<font color="#E5E5E5">it can also help you increase your</font>

645
00:26:05,110 --> 00:26:08,320
overall<font color="#E5E5E5"> confidence in your findings so</font>

646
00:26:06,790 --> 00:26:10,090
if you've got<font color="#E5E5E5"> three</font><font color="#CCCCCC"> different things</font>

647
00:26:08,320 --> 00:26:11,470
showing<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> an executable has been</font>

648
00:26:10,090 --> 00:26:12,970
launched and here's the<font color="#E5E5E5"> last time it's</font>

649
00:26:11,470 --> 00:26:15,070
been launched<font color="#E5E5E5"> you're probably going to</font>

650
00:26:12,970 --> 00:26:17,530
<font color="#CCCCCC">be</font><font color="#E5E5E5"> more confident in that finding</font><font color="#CCCCCC"> as</font>

651
00:26:15,070 --> 00:26:22,809
opposed to if you<font color="#E5E5E5"> only found that in one</font>

652
00:26:17,530 --> 00:26:25,690
<font color="#CCCCCC">location okay so let's talk persistence</font>

653
00:26:22,809 --> 00:26:27,250
for<font color="#E5E5E5"> a minute now this is a pretty</font>

654
00:26:25,690 --> 00:26:28,540
<font color="#E5E5E5">expansive topic I</font><font color="#CCCCCC"> think there is</font><font color="#E5E5E5"> an</font>

655
00:26:27,250 --> 00:26:31,540
entire there's a<font color="#CCCCCC"> derby column</font>

656
00:26:28,540 --> 00:26:34,870
presentation focused on persistence

657
00:26:31,540 --> 00:26:36,879
<font color="#E5E5E5">there's plenty out there</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> expands</font>

658
00:26:34,870 --> 00:26:38,500
well beyond<font color="#E5E5E5"> the registry</font><font color="#CCCCCC"> so we're not</font>

659
00:26:36,880 --> 00:26:40,570
<font color="#E5E5E5">talking about just look</font>

660
00:26:38,500 --> 00:26:42,760
you know registry keys and values and<font color="#E5E5E5"> we</font>

661
00:26:40,570 --> 00:26:44,500
look at this but the registry is certain

662
00:26:42,760 --> 00:26:48,490
certainly<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the most prevalent</font>

663
00:26:44,500 --> 00:26:49,600
locations with regard to persistence<font color="#CCCCCC"> and</font>

664
00:26:48,490 --> 00:26:52,540
what we're<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> just to clarify</font>

665
00:26:49,600 --> 00:26:54,760
<font color="#CCCCCC">here's how is an attacker how is malware</font>

666
00:26:52,540 --> 00:26:57,220
surviving reboots or surviving<font color="#E5E5E5"> these</font>

667
00:26:54,760 --> 00:26:58,710
events that<font color="#E5E5E5"> would normally take</font><font color="#CCCCCC"> care of</font>

668
00:26:57,220 --> 00:27:01,780
them that<font color="#CCCCCC"> would normally wipe them out</font>

669
00:26:58,710 --> 00:27:03,790
<font color="#E5E5E5">okay so some of the locations and the</font>

670
00:27:01,780 --> 00:27:06,010
registry that<font color="#E5E5E5"> are important here</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> run</font>

671
00:27:03,790 --> 00:27:09,159
<font color="#CCCCCC">Keys is is a big one this is a very</font>

672
00:27:06,010 --> 00:27:11,650
<font color="#CCCCCC">well-known</font><font color="#E5E5E5"> persistence mechanism there</font>

673
00:27:09,160 --> 00:27:13,390
are other called<font color="#E5E5E5"> run keys in the</font>

674
00:27:11,650 --> 00:27:17,290
software hive<font color="#E5E5E5"> into user hives</font>

675
00:27:13,390 --> 00:27:20,020
<font color="#E5E5E5">essentially they they dictate programs</font>

676
00:27:17,290 --> 00:27:21,940
that<font color="#E5E5E5"> will launch whenever the system</font>

677
00:27:20,020 --> 00:27:24,610
either starts or when a particular user

678
00:27:21,940 --> 00:27:26,410
account logs in and so this is one<font color="#E5E5E5"> of</font>

679
00:27:24,610 --> 00:27:29,679
the<font color="#E5E5E5"> first locations</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> be</font>

680
00:27:26,410 --> 00:27:31,930
checked by either<font color="#CCCCCC"> any type of antivirus</font>

681
00:27:29,680 --> 00:27:34,660
program or an<font color="#E5E5E5"> analyst on the back end</font>

682
00:27:31,930 --> 00:27:36,700
<font color="#E5E5E5">looking for persistence</font><font color="#CCCCCC"> mechanisms so</font>

683
00:27:34,660 --> 00:27:40,150
very<font color="#CCCCCC"> well known location I don't have a</font>

684
00:27:36,700 --> 00:27:41,980
<font color="#CCCCCC">screenshot</font><font color="#E5E5E5"> of that but in which file</font>

685
00:27:40,150 --> 00:27:44,010
execution options<font color="#CCCCCC"> this is another one</font>

686
00:27:41,980 --> 00:27:46,450
that's interesting<font color="#CCCCCC"> if any of you have</font>

687
00:27:44,010 --> 00:27:50,140
are familiar with<font color="#E5E5E5"> the the sticky keys</font>

688
00:27:46,450 --> 00:27:52,000
attack<font color="#E5E5E5"> this more recent versions of that</font>

689
00:27:50,140 --> 00:27:55,330
leverage the image file execution

690
00:27:52,000 --> 00:27:57,760
options<font color="#CCCCCC"> another legitimate use of of</font>

691
00:27:55,330 --> 00:28:01,149
this is how many<font color="#E5E5E5"> of you use process</font>

692
00:27:57,760 --> 00:28:04,090
Explorer<font color="#E5E5E5"> anyone use there's an option</font><font color="#CCCCCC"> in</font>

693
00:28:01,150 --> 00:28:05,830
process<font color="#E5E5E5"> Explorer to replace task manager</font>

694
00:28:04,090 --> 00:28:07,959
with process<font color="#E5E5E5"> Explorer so that when you</font>

695
00:28:05,830 --> 00:28:10,270
press control alt<font color="#E5E5E5"> delete and go to task</font>

696
00:28:07,960 --> 00:28:12,550
manager<font color="#E5E5E5"> will actually open process</font>

697
00:28:10,270 --> 00:28:14,200
<font color="#E5E5E5">Explorer instead well what that's doing</font>

698
00:28:12,550 --> 00:28:17,200
<font color="#E5E5E5">what</font><font color="#CCCCCC"> process Explorer is actually doing</font>

699
00:28:14,200 --> 00:28:20,710
there is setting a debugger value in the

700
00:28:17,200 --> 00:28:24,310
image file execution options key<font color="#CCCCCC"> to say</font>

701
00:28:20,710 --> 00:28:26,800
hey whenever you know if this<font color="#E5E5E5"> was task</font>

702
00:28:24,310 --> 00:28:28,750
manager whenever task manager is<font color="#E5E5E5"> invoked</font>

703
00:28:26,800 --> 00:28:31,720
<font color="#CCCCCC">what I actually want you to</font><font color="#E5E5E5"> do is I want</font>

704
00:28:28,750 --> 00:28:34,210
<font color="#CCCCCC">you</font><font color="#E5E5E5"> to run process Explorer</font><font color="#CCCCCC"> okay so in</font>

705
00:28:31,720 --> 00:28:36,160
this context I mean that's<font color="#E5E5E5"> the</font>

706
00:28:34,210 --> 00:28:37,750
legitimate instance of<font color="#CCCCCC"> that but you can</font>

707
00:28:36,160 --> 00:28:39,640
see<font color="#CCCCCC"> how this could</font><font color="#E5E5E5"> easily be abused if</font>

708
00:28:37,750 --> 00:28:42,370
you've got a program<font color="#E5E5E5"> that is monitoring</font>

709
00:28:39,640 --> 00:28:48,040
for when a particular<font color="#E5E5E5"> application is</font>

710
00:28:42,370 --> 00:28:50,110
<font color="#CCCCCC">started</font><font color="#E5E5E5"> will say</font><font color="#CCCCCC"> Excel whenever Excel</font>

711
00:28:48,040 --> 00:28:52,300
dot exe<font color="#E5E5E5"> is called what I want you to do</font>

712
00:28:50,110 --> 00:28:54,340
is actually<font color="#E5E5E5"> launch this this X</font>

713
00:28:52,300 --> 00:28:55,750
<font color="#CCCCCC">that executable</font><font color="#E5E5E5"> will run in</font><font color="#CCCCCC"> the</font>

714
00:28:54,340 --> 00:28:57,909
<font color="#E5E5E5">background and then turn around and</font>

715
00:28:55,750 --> 00:28:59,920
<font color="#E5E5E5">start Excel dot exe</font><font color="#CCCCCC"> so from the user</font>

716
00:28:57,910 --> 00:29:01,809
standpoint<font color="#E5E5E5"> that's all transparent the</font>

717
00:28:59,920 --> 00:29:03,910
user sees<font color="#CCCCCC"> nothing different they click</font>

718
00:29:01,809 --> 00:29:05,740
Excel and Excel starts up but in the

719
00:29:03,910 --> 00:29:07,570
background<font color="#CCCCCC"> there's other</font><font color="#E5E5E5"> and there's</font>

720
00:29:05,740 --> 00:29:12,420
other processes<font color="#E5E5E5"> being started or at</font>

721
00:29:07,570 --> 00:29:12,419
least one all transparent to the user

722
00:29:12,510 --> 00:29:18,100
<font color="#CCCCCC">okay just</font><font color="#E5E5E5"> the idea of application</font>

723
00:29:15,550 --> 00:29:20,678
hijacking is another big<font color="#CCCCCC"> one</font><font color="#E5E5E5"> with regard</font>

724
00:29:18,100 --> 00:29:23,559
<font color="#E5E5E5">to persistence and this is kind</font><font color="#CCCCCC"> of just</font>

725
00:29:20,679 --> 00:29:26,770
a<font color="#CCCCCC"> general concept</font><font color="#E5E5E5"> not necessarily a</font>

726
00:29:23,559 --> 00:29:28,480
<font color="#E5E5E5">particular key but it what we're doing</font>

727
00:29:26,770 --> 00:29:30,730
here is we're looking<font color="#E5E5E5"> for specific</font>

728
00:29:28,480 --> 00:29:33,580
<font color="#CCCCCC">events that could</font><font color="#E5E5E5"> be Bluetooth</font>

729
00:29:30,730 --> 00:29:37,000
connections Wi-Fi connections specific

730
00:29:33,580 --> 00:29:41,620
functions or dll's being called whenever

731
00:29:37,000 --> 00:29:43,929
that happens we<font color="#E5E5E5"> want to inject our our</font>

732
00:29:41,620 --> 00:29:45,489
code that we<font color="#CCCCCC"> want to run we'll run our</font>

733
00:29:43,929 --> 00:29:48,100
code<font color="#E5E5E5"> whenever that targeted action</font>

734
00:29:45,490 --> 00:29:49,660
occurs will<font color="#E5E5E5"> preserve</font><font color="#CCCCCC"> the original action</font>

735
00:29:48,100 --> 00:29:52,389
just kind of<font color="#E5E5E5"> like we saw</font><font color="#CCCCCC"> on the image</font>

736
00:29:49,660 --> 00:29:54,490
file execution options<font color="#CCCCCC"> and then once we</font>

737
00:29:52,390 --> 00:29:56,290
have our<font color="#E5E5E5"> DLL or once we have our code</font>

738
00:29:54,490 --> 00:29:57,850
running<font color="#CCCCCC"> we'll then turn around and</font>

739
00:29:56,290 --> 00:30:01,360
launch whatever<font color="#E5E5E5"> the user would have</font>

740
00:29:57,850 --> 00:30:04,480
<font color="#E5E5E5">expected okay so an example</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this</font>

741
00:30:01,360 --> 00:30:06,129
would be things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> if you've got some</font>

742
00:30:04,480 --> 00:30:10,210
type of<font color="#E5E5E5"> downloading program a torrent</font>

743
00:30:06,130 --> 00:30:11,920
<font color="#CCCCCC">that is set</font><font color="#E5E5E5"> to scan any files that are</font>

744
00:30:10,210 --> 00:30:13,960
downloaded from the internet<font color="#CCCCCC"> when</font>

745
00:30:11,920 --> 00:30:16,240
they're complete<font color="#E5E5E5"> typically in those</font>

746
00:30:13,960 --> 00:30:18,070
types of programs you<font color="#E5E5E5"> can provide the</font>

747
00:30:16,240 --> 00:30:19,990
path to an anti-virus program<font color="#CCCCCC"> that you</font>

748
00:30:18,070 --> 00:30:22,629
want<font color="#CCCCCC"> to use to scan</font><font color="#E5E5E5"> that well there's</font>

749
00:30:19,990 --> 00:30:25,900
nothing<font color="#CCCCCC"> preventing you or an attacker</font>

750
00:30:22,630 --> 00:30:28,059
from instead of replacing replacing that

751
00:30:25,900 --> 00:30:29,700
antivirus path<font color="#E5E5E5"> with the path to an</font>

752
00:30:28,059 --> 00:30:32,020
executable<font color="#CCCCCC"> that they want</font><font color="#E5E5E5"> to launch</font>

753
00:30:29,700 --> 00:30:33,970
<font color="#E5E5E5">whenever a</font><font color="#CCCCCC"> program is downloaded so the</font>

754
00:30:32,020 --> 00:30:35,320
programs are downloaded<font color="#CCCCCC"> their executable</font>

755
00:30:33,970 --> 00:30:37,720
<font color="#E5E5E5">is launched they then turn around</font>

756
00:30:35,320 --> 00:30:39,970
<font color="#CCCCCC">launched</font><font color="#E5E5E5"> whatever was whatever antivirus</font>

757
00:30:37,720 --> 00:30:43,570
was expected and<font color="#CCCCCC"> they scan the file and</font>

758
00:30:39,970 --> 00:30:46,179
<font color="#E5E5E5">you go on</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so obviously instances</font>

759
00:30:43,570 --> 00:30:48,820
like that<font color="#CCCCCC"> are more targeted but they're</font>

760
00:30:46,179 --> 00:30:51,280
just<font color="#E5E5E5"> kind of that's an illustration of</font>

761
00:30:48,820 --> 00:30:53,139
<font color="#E5E5E5">how prevalent and how easy persistence</font>

762
00:30:51,280 --> 00:30:56,139
really is to maintain you know<font color="#CCCCCC"> and this</font>

763
00:30:53,140 --> 00:30:59,290
<font color="#E5E5E5">is</font><font color="#CCCCCC"> just looking</font><font color="#E5E5E5"> at the registry you know</font>

764
00:30:56,140 --> 00:31:00,940
there<font color="#CCCCCC"> are</font><font color="#E5E5E5"> plenty of our instances</font>

765
00:30:59,290 --> 00:31:04,600
outside of this that are even more

766
00:31:00,940 --> 00:31:06,100
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> the hexa</font><font color="#CCCCCC"> Korn blog texted</font>

767
00:31:04,600 --> 00:31:08,350
<font color="#E5E5E5">Korn calm</font>

768
00:31:06,100 --> 00:31:13,510
<font color="#E5E5E5">has a great series</font><font color="#CCCCCC"> I think he's up to</font>

769
00:31:08,350 --> 00:31:15,250
<font color="#E5E5E5">like 60 something blog post on</font><font color="#CCCCCC"> that's</font>

770
00:31:13,510 --> 00:31:17,470
called<font color="#CCCCCC"> be oddly</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> all run series but</font>

771
00:31:15,250 --> 00:31:20,380
it is a it's a series on some of these

772
00:31:17,470 --> 00:31:22,419
exotic persistence mechanisms<font color="#E5E5E5"> like using</font>

773
00:31:20,380 --> 00:31:24,970
<font color="#E5E5E5">this</font><font color="#CCCCCC"> antivirus when a program</font><font color="#E5E5E5"> is</font>

774
00:31:22,419 --> 00:31:27,100
<font color="#E5E5E5">downloaded</font><font color="#CCCCCC"> to remain persistent on</font>

775
00:31:24,970 --> 00:31:32,020
system so if you're interested<font color="#CCCCCC"> I take a</font>

776
00:31:27,100 --> 00:31:35,469
<font color="#E5E5E5">look at that and just kind of looking at</font>

777
00:31:32,020 --> 00:31:37,360
<font color="#E5E5E5">some more interesting uses</font><font color="#CCCCCC"> of the</font>

778
00:31:35,470 --> 00:31:40,360
registry and<font color="#E5E5E5"> how the registry is</font>

779
00:31:37,360 --> 00:31:42,370
presented<font color="#CCCCCC"> here how many of you have</font>

780
00:31:40,360 --> 00:31:46,780
heard of the<font color="#E5E5E5"> Unicode right-to-left</font>

781
00:31:42,370 --> 00:31:50,199
override character anybody<font color="#E5E5E5"> so a couple</font>

782
00:31:46,780 --> 00:31:52,780
<font color="#CCCCCC">of you if you've done any type of work</font>

783
00:31:50,200 --> 00:31:55,780
with code sets or anything<font color="#E5E5E5"> you may</font><font color="#CCCCCC"> have</font>

784
00:31:52,780 --> 00:31:59,889
seen this but<font color="#E5E5E5"> generally you</font><font color="#CCCCCC"> you probably</font>

785
00:31:55,780 --> 00:32:01,990
<font color="#CCCCCC">haven't</font><font color="#E5E5E5"> heard of it so this is a simple</font>

786
00:31:59,890 --> 00:32:04,630
<font color="#E5E5E5">way for malware for anything to hide in</font>

787
00:32:01,990 --> 00:32:06,250
<font color="#CCCCCC">plain sight in the registry so the</font><font color="#E5E5E5"> way</font>

788
00:32:04,630 --> 00:32:09,070
the right to left override character

789
00:32:06,250 --> 00:32:12,669
works is it takes<font color="#E5E5E5"> everything after the</font>

790
00:32:09,070 --> 00:32:15,309
rll rll character and it reverses<font color="#CCCCCC"> it so</font>

791
00:32:12,669 --> 00:32:18,299
for<font color="#E5E5E5"> example in you can do this easily</font>

792
00:32:15,309 --> 00:32:21,700
<font color="#CCCCCC">and regedit if you were to</font><font color="#E5E5E5"> create a key</font>

793
00:32:18,299 --> 00:32:23,590
insert the<font color="#E5E5E5"> unicode control character and</font>

794
00:32:21,700 --> 00:32:26,429
then insert the<font color="#CCCCCC"> right-to-left override</font>

795
00:32:23,590 --> 00:32:29,918
and then type in a<font color="#CCCCCC"> TF Oh SOR</font>

796
00:32:26,429 --> 00:32:32,140
<font color="#CCCCCC">C I am so you got the right to left</font>

797
00:32:29,919 --> 00:32:34,240
override you type in<font color="#CCCCCC"> microsoft spelled</font>

798
00:32:32,140 --> 00:32:36,460
backwards<font color="#E5E5E5"> when that registry viewer</font>

799
00:32:34,240 --> 00:32:38,289
interprets that<font color="#E5E5E5"> because it understands</font>

800
00:32:36,460 --> 00:32:39,850
<font color="#CCCCCC">unicode</font><font color="#E5E5E5"> it's going to see that</font>

801
00:32:38,289 --> 00:32:41,230
<font color="#CCCCCC">right-to-left override and it's</font><font color="#E5E5E5"> going to</font>

802
00:32:39,850 --> 00:32:43,719
reverse<font color="#CCCCCC"> that so that whenever</font><font color="#E5E5E5"> you're</font>

803
00:32:41,230 --> 00:32:46,360
looking<font color="#CCCCCC"> at it and regedit</font><font color="#E5E5E5"> or any</font><font color="#CCCCCC"> unicode</font>

804
00:32:43,720 --> 00:32:48,100
capable<font color="#CCCCCC"> registered viewer</font><font color="#E5E5E5"> it's just</font>

805
00:32:46,360 --> 00:32:50,530
going<font color="#E5E5E5"> to look like Microsoft you can</font>

806
00:32:48,100 --> 00:32:52,449
obviously<font color="#E5E5E5"> replace Microsoft with</font>

807
00:32:50,530 --> 00:32:53,950
anything you<font color="#E5E5E5"> want to call it and you can</font>

808
00:32:52,450 --> 00:32:56,919
store<font color="#E5E5E5"> this anywhere so this can be</font>

809
00:32:53,950 --> 00:33:00,669
<font color="#E5E5E5">deeply embedded in the registry where</font>

810
00:32:56,919 --> 00:33:02,440
it's not exactly<font color="#CCCCCC"> easy to find</font><font color="#E5E5E5"> okay so</font>

811
00:33:00,669 --> 00:33:05,140
you can see<font color="#CCCCCC"> how</font><font color="#E5E5E5"> this could be easily</font>

812
00:33:02,440 --> 00:33:07,960
leveraged for<font color="#E5E5E5"> malicious purposes to to</font>

813
00:33:05,140 --> 00:33:09,940
store either configuration files which

814
00:33:07,960 --> 00:33:12,039
we'll talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> in a second or</font>

815
00:33:09,940 --> 00:33:16,150
just high data that you<font color="#CCCCCC"> don't want to be</font>

816
00:33:12,039 --> 00:33:18,010
<font color="#CCCCCC">obviously visible</font><font color="#E5E5E5"> so you know we've seen</font>

817
00:33:16,150 --> 00:33:19,779
<font color="#E5E5E5">instances where registry keys will be</font>

818
00:33:18,010 --> 00:33:20,979
randomly named or other

819
00:33:19,779 --> 00:33:23,649
<font color="#E5E5E5">to kind of stick out if you're just</font>

820
00:33:20,979 --> 00:33:26,769
<font color="#CCCCCC">looking at</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> but using things like</font><font color="#E5E5E5"> the</font>

821
00:33:23,649 --> 00:33:30,668
rll rll character<font color="#E5E5E5"> can allow you to name</font>

822
00:33:26,769 --> 00:33:32,080
<font color="#E5E5E5">something</font><font color="#CCCCCC"> that looks</font><font color="#E5E5E5"> legitimate</font><font color="#CCCCCC"> but but</font>

823
00:33:30,669 --> 00:33:34,570
it's actually<font color="#CCCCCC"> something completely</font>

824
00:33:32,080 --> 00:33:36,249
different<font color="#CCCCCC"> okay so if you look at this is</font>

825
00:33:34,570 --> 00:33:38,590
looking<font color="#E5E5E5"> at it in a actual registry</font>

826
00:33:36,249 --> 00:33:40,840
forensic registry viewing tool because

827
00:33:38,590 --> 00:33:43,178
this understands Unicode<font color="#E5E5E5"> you can see</font>

828
00:33:40,840 --> 00:33:45,580
that it's<font color="#E5E5E5"> just displayed as Microsoft so</font>

829
00:33:43,179 --> 00:33:47,830
nothing looks different<font color="#E5E5E5"> visually it's</font>

830
00:33:45,580 --> 00:33:50,590
not until you<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> inspect the hex</font>

831
00:33:47,830 --> 00:33:52,119
<font color="#E5E5E5">of that particular registry key that you</font>

832
00:33:50,590 --> 00:33:54,070
see oh there's an<font color="#CCCCCC"> AR</font><font color="#E5E5E5"> ll character</font>

833
00:33:52,119 --> 00:33:56,228
<font color="#E5E5E5">followed by Microsoft spelled backwards</font>

834
00:33:54,070 --> 00:33:58,718
<font color="#E5E5E5">well obviously you're</font><font color="#CCCCCC"> probably not</font><font color="#E5E5E5"> going</font>

835
00:33:56,229 --> 00:34:01,989
to<font color="#E5E5E5"> be doing that to every registry key</font>

836
00:33:58,719 --> 00:34:07,450
that you see so it's it's<font color="#CCCCCC"> very easy to</font>

837
00:34:01,989 --> 00:34:09,250
to to blow right past this just<font color="#CCCCCC"> analyst</font>

838
00:34:07,450 --> 00:34:11,230
<font color="#E5E5E5">tip here there's a great there's a red</font>

839
00:34:09,250 --> 00:34:15,099
<font color="#CCCCCC">Ripper plug-in if anyone is reuse reg</font>

840
00:34:11,230 --> 00:34:17,109
Ripper<font color="#CCCCCC"> - good</font><font color="#E5E5E5"> great tool for registry</font>

841
00:34:15,099 --> 00:34:19,149
analysis quickly pulling important

842
00:34:17,109 --> 00:34:21,848
information out<font color="#CCCCCC"> of multiple hives or a</font>

843
00:34:19,149 --> 00:34:24,730
single<font color="#CCCCCC"> hive</font><font color="#E5E5E5"> there's an Red River plug-in</font>

844
00:34:21,849 --> 00:34:27,129
to pull out<font color="#CCCCCC"> specific paths that control</font>

845
00:34:24,730 --> 00:34:29,349
that contain the<font color="#CCCCCC"> rlo</font><font color="#E5E5E5"> control character</font>

846
00:34:27,129 --> 00:34:33,038
so that's<font color="#E5E5E5"> a great one to use if you're</font>

847
00:34:29,349 --> 00:34:41,559
looking<font color="#E5E5E5"> for this</font><font color="#CCCCCC"> specific type of thing</font>

848
00:34:33,039 --> 00:34:44,109
here okay<font color="#E5E5E5"> so the other kind of</font>

849
00:34:41,559 --> 00:34:45,730
interesting<font color="#E5E5E5"> concept within the registry</font>

850
00:34:44,109 --> 00:34:49,440
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I want to talk about here's the</font>

851
00:34:45,730 --> 00:34:53,429
idea of large registry values<font color="#CCCCCC"> okay so</font>

852
00:34:49,440 --> 00:34:56,139
this is often<font color="#E5E5E5"> utilized for things like</font>

853
00:34:53,429 --> 00:34:58,569
generally persistence in execution<font color="#E5E5E5"> but</font>

854
00:34:56,139 --> 00:35:01,569
specifically storing scripts so storing

855
00:34:58,569 --> 00:35:04,480
<font color="#CCCCCC">JavaScript storing configuration files</font>

856
00:35:01,569 --> 00:35:06,579
within<font color="#E5E5E5"> an actual registry value</font><font color="#CCCCCC"> ok so</font>

857
00:35:04,480 --> 00:35:11,490
there's nothing<font color="#CCCCCC"> necessarily</font><font color="#E5E5E5"> keeping us</font>

858
00:35:06,579 --> 00:35:14,319
from<font color="#E5E5E5"> storing a couple kilobytes or more</font>

859
00:35:11,490 --> 00:35:15,729
<font color="#E5E5E5">data within an actual registry value we</font>

860
00:35:14,319 --> 00:35:18,069
<font color="#E5E5E5">sell that</font><font color="#CCCCCC"> within the app compat cache</font>

861
00:35:15,730 --> 00:35:20,950
key when we looked at dad so<font color="#E5E5E5"> they were</font>

862
00:35:18,069 --> 00:35:22,599
<font color="#E5E5E5">app compat cash value excuse me when we</font>

863
00:35:20,950 --> 00:35:23,680
looked<font color="#E5E5E5"> at that we saw there was a ton of</font>

864
00:35:22,599 --> 00:35:25,930
<font color="#E5E5E5">information there and that's a</font>

865
00:35:23,680 --> 00:35:27,700
<font color="#E5E5E5">legitimate use of a large registry value</font>

866
00:35:25,930 --> 00:35:29,950
but there's nothing<font color="#CCCCCC"> preventing us from</font>

867
00:35:27,700 --> 00:35:32,319
instead of<font color="#E5E5E5"> storing all that app compat</font>

868
00:35:29,950 --> 00:35:33,640
<font color="#E5E5E5">cache data from store and say</font><font color="#CCCCCC"> JavaScript</font>

869
00:35:32,319 --> 00:35:36,130
<font color="#CCCCCC">or storing it</font>

870
00:35:33,640 --> 00:35:38,259
figuration data associated<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> the</font>

871
00:35:36,130 --> 00:35:38,680
<font color="#CCCCCC">malware installation we have or what</font>

872
00:35:38,260 --> 00:35:42,039
<font color="#E5E5E5">have you</font>

873
00:35:38,680 --> 00:35:44,049
<font color="#E5E5E5">and we see this</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> particularly with</font>

874
00:35:42,039 --> 00:35:45,970
<font color="#E5E5E5">file</font><font color="#CCCCCC"> list malware so when you read a lot</font>

875
00:35:44,049 --> 00:35:48,250
about<font color="#E5E5E5"> that</font><font color="#CCCCCC"> a lot of the time it's</font>

876
00:35:45,970 --> 00:35:49,868
utilizing these large registry values to

877
00:35:48,250 --> 00:35:51,910
store its information so it's all

878
00:35:49,869 --> 00:35:54,910
<font color="#E5E5E5">embedded there you can see in this case</font>

879
00:35:51,910 --> 00:35:58,720
you've got this is I<font color="#E5E5E5"> believe a from</font>

880
00:35:54,910 --> 00:36:01,660
<font color="#CCCCCC">poet's Pollock's so this is actually</font>

881
00:35:58,720 --> 00:36:04,319
some JavaScript or encoded data stored

882
00:36:01,660 --> 00:36:07,450
right there in the the registry value

883
00:36:04,319 --> 00:36:08,769
<font color="#CCCCCC">okay so you can this is pretty easy to</font>

884
00:36:07,450 --> 00:36:10,808
<font color="#E5E5E5">see</font><font color="#CCCCCC"> how it</font><font color="#E5E5E5"> can be leveraged for</font>

885
00:36:08,769 --> 00:36:12,759
<font color="#CCCCCC">malicious purposes</font><font color="#E5E5E5"> in particularly when</font>

886
00:36:10,809 --> 00:36:15,400
<font color="#E5E5E5">you combine</font><font color="#CCCCCC"> that with the our ll</font>

887
00:36:12,760 --> 00:36:19,779
character<font color="#CCCCCC"> you can see how those two</font>

888
00:36:15,400 --> 00:36:24,609
<font color="#E5E5E5">could be used to to hide quite a bit of</font>

889
00:36:19,779 --> 00:36:27,670
information there<font color="#CCCCCC"> okay so just kind of</font>

890
00:36:24,609 --> 00:36:30,609
wrapping<font color="#CCCCCC"> up here on the</font><font color="#E5E5E5"> investigation</font>

891
00:36:27,670 --> 00:36:32,890
side<font color="#E5E5E5"> this is could easily be an entire</font>

892
00:36:30,609 --> 00:36:37,089
<font color="#CCCCCC">presentation to itself so I kind of</font>

893
00:36:32,890 --> 00:36:39,038
picked one artifact that I thought if if

894
00:36:37,089 --> 00:36:41,529
you have this artifact and you know<font color="#E5E5E5"> this</font>

895
00:36:39,039 --> 00:36:44,319
is one of<font color="#E5E5E5"> the better ones to analyze in</font>

896
00:36:41,529 --> 00:36:46,599
the context<font color="#CCCCCC"> of an</font><font color="#E5E5E5"> investigation and</font>

897
00:36:44,319 --> 00:36:47,920
that's<font color="#CCCCCC"> Chell bags</font><font color="#E5E5E5"> now the the biggest</font>

898
00:36:46,599 --> 00:36:50,140
caveat here is<font color="#CCCCCC"> that this is going</font><font color="#E5E5E5"> to</font>

899
00:36:47,920 --> 00:36:52,839
<font color="#CCCCCC">require interaction with the shell but</font>

900
00:36:50,140 --> 00:36:56,348
to the<font color="#CCCCCC"> extent that the level of that the</font>

901
00:36:52,839 --> 00:36:59,109
attacker has that level<font color="#CCCCCC"> of access</font><font color="#E5E5E5"> the</font>

902
00:36:56,349 --> 00:37:01,720
amount<font color="#E5E5E5"> of data and the</font><font color="#CCCCCC"> in shell bags is</font>

903
00:36:59,109 --> 00:37:05,769
pretty significant so<font color="#CCCCCC"> shell box</font><font color="#E5E5E5"> kind of</font>

904
00:37:01,720 --> 00:37:08,078
came<font color="#E5E5E5"> around when if you've ever resized</font>

905
00:37:05,769 --> 00:37:10,629
it resized the directory moved it<font color="#E5E5E5"> from</font>

906
00:37:08,079 --> 00:37:12,339
one screen<font color="#CCCCCC"> to another</font><font color="#E5E5E5"> and closed it and</font>

907
00:37:10,630 --> 00:37:14,170
maybe<font color="#CCCCCC"> reopened</font><font color="#E5E5E5"> that same directory or a</font>

908
00:37:12,339 --> 00:37:15,910
few days later and you notice<font color="#CCCCCC"> that it</font>

909
00:37:14,170 --> 00:37:17,950
opened to the exact same<font color="#E5E5E5"> location with</font>

910
00:37:15,910 --> 00:37:21,308
<font color="#CCCCCC">the exact same dimensions</font><font color="#E5E5E5"> if anyone</font>

911
00:37:17,950 --> 00:37:22,750
noticed<font color="#E5E5E5"> that so what that what what's</font>

912
00:37:21,309 --> 00:37:24,940
happening<font color="#E5E5E5"> there shell bags are</font>

913
00:37:22,750 --> 00:37:27,039
maintaining<font color="#E5E5E5"> that information</font><font color="#CCCCCC"> that</font>

914
00:37:24,940 --> 00:37:29,470
positional<font color="#E5E5E5"> and sizing</font><font color="#CCCCCC"> information of</font>

915
00:37:27,039 --> 00:37:31,930
that specific directory<font color="#CCCCCC"> you had opened</font>

916
00:37:29,470 --> 00:37:34,029
<font color="#E5E5E5">it's maintaining that in the registry</font><font color="#CCCCCC"> so</font>

917
00:37:31,930 --> 00:37:37,000
we don't care necessarily as much<font color="#CCCCCC"> about</font>

918
00:37:34,029 --> 00:37:38,559
the sizing<font color="#CCCCCC"> and position</font><font color="#E5E5E5"> but it's the</font>

919
00:37:37,000 --> 00:37:40,599
other<font color="#E5E5E5"> information</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> she'll back store</font>

920
00:37:38,559 --> 00:37:43,390
that we care<font color="#CCCCCC"> about</font><font color="#E5E5E5"> okay so things like</font>

921
00:37:40,599 --> 00:37:45,160
you modified<font color="#E5E5E5"> access in creation times of</font>

922
00:37:43,390 --> 00:37:47,618
those<font color="#E5E5E5"> directories that were interacted</font>

923
00:37:45,160 --> 00:37:49,479
with which can allow you<font color="#E5E5E5"> to</font>

924
00:37:47,619 --> 00:37:52,869
<font color="#CCCCCC">our shellbacks can allow you</font><font color="#E5E5E5"> to</font>

925
00:37:49,479 --> 00:37:54,339
<font color="#E5E5E5">determine the structure of volumes that</font>

926
00:37:52,869 --> 00:37:56,829
<font color="#CCCCCC">have</font><font color="#E5E5E5"> been accessed from the system these</font>

927
00:37:54,339 --> 00:37:59,410
could be volumes across<font color="#E5E5E5"> the network they</font>

928
00:37:56,829 --> 00:38:01,269
could be even<font color="#CCCCCC"> zip files that are</font>

929
00:37:59,410 --> 00:38:03,249
explored by double-clicking<font color="#E5E5E5"> so if you</font>

930
00:38:01,269 --> 00:38:04,689
<font color="#E5E5E5">think of anything that you can explore</font>

931
00:38:03,249 --> 00:38:05,589
<font color="#CCCCCC">and Windows Explorer by</font><font color="#E5E5E5"> double-clicking</font>

932
00:38:04,690 --> 00:38:07,539
it

933
00:38:05,589 --> 00:38:12,940
these would show up in<font color="#CCCCCC"> shell bags ok so</font>

934
00:38:07,539 --> 00:38:14,650
FTP<font color="#E5E5E5"> sites this is another one if you</font>

935
00:38:12,940 --> 00:38:17,589
look<font color="#E5E5E5"> at it and read it it would</font><font color="#CCCCCC"> not be</font>

936
00:38:14,650 --> 00:38:19,930
fun to decipher<font color="#CCCCCC"> the highly nested</font>

937
00:38:17,589 --> 00:38:22,719
structure<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> these are just all</font>

938
00:38:19,930 --> 00:38:25,719
these values or binary<font color="#E5E5E5"> blobs</font><font color="#CCCCCC"> each of</font>

939
00:38:22,719 --> 00:38:27,579
these have nested<font color="#E5E5E5"> data structures not</font>

940
00:38:25,719 --> 00:38:30,489
fun<font color="#CCCCCC"> you wouldn't want to do</font><font color="#E5E5E5"> this by hand</font>

941
00:38:27,579 --> 00:38:33,819
<font color="#CCCCCC">so luckily</font><font color="#E5E5E5"> there's a great tool called</font>

942
00:38:30,489 --> 00:38:35,559
<font color="#E5E5E5">shell bags Explorer dad I want to I</font>

943
00:38:33,819 --> 00:38:37,210
<font color="#E5E5E5">would encourage you</font><font color="#CCCCCC"> to download if</font>

944
00:38:35,559 --> 00:38:41,559
<font color="#E5E5E5">nothing else just to look at on your own</font>

945
00:38:37,210 --> 00:38:45,660
system<font color="#CCCCCC"> so this will</font><font color="#E5E5E5"> obviously you can</font>

946
00:38:41,559 --> 00:38:47,979
feed in a registry it's a<font color="#CCCCCC"> us</font><font color="#E5E5E5"> our class</font>

947
00:38:45,660 --> 00:38:49,930
hive you<font color="#CCCCCC"> can feed that</font><font color="#E5E5E5"> directly in the</font>

948
00:38:47,979 --> 00:38:51,489
shell back to Explorer or you can open

949
00:38:49,930 --> 00:38:53,589
<font color="#E5E5E5">up your live system and take a look at</font>

950
00:38:51,489 --> 00:38:56,519
it there but what<font color="#E5E5E5"> this will</font><font color="#CCCCCC"> show you is</font>

951
00:38:53,589 --> 00:38:58,390
it<font color="#E5E5E5"> will reconstruct a good portion of</font>

952
00:38:56,519 --> 00:39:00,308
the directories<font color="#CCCCCC"> that have been</font>

953
00:38:58,390 --> 00:39:01,779
interacted with on your system<font color="#CCCCCC"> and this</font>

954
00:39:00,309 --> 00:39:03,729
is pretty much<font color="#CCCCCC"> for the lifetime of</font><font color="#E5E5E5"> your</font>

955
00:39:01,779 --> 00:39:05,469
system<font color="#E5E5E5"> so maybe that directory that you</font>

956
00:39:03,729 --> 00:39:07,749
<font color="#CCCCCC">forgot you looked at like three years</font>

957
00:39:05,469 --> 00:39:10,119
ago<font color="#CCCCCC"> or four years ago if you look at</font>

958
00:39:07,749 --> 00:39:11,529
your your<font color="#E5E5E5"> own system it's probably going</font>

959
00:39:10,119 --> 00:39:12,789
<font color="#CCCCCC">to show up</font><font color="#E5E5E5"> here and it's really pretty</font>

960
00:39:11,529 --> 00:39:15,400
<font color="#CCCCCC">incredible the amount of information</font>

961
00:39:12,789 --> 00:39:17,619
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> find in shell bags particularly</font>

962
00:39:15,400 --> 00:39:20,410
on a system that's utilized pretty

963
00:39:17,619 --> 00:39:22,719
heavily<font color="#CCCCCC"> but you can see in this case</font>

964
00:39:20,410 --> 00:39:25,328
we've got a few<font color="#E5E5E5"> different volumes that</font>

965
00:39:22,719 --> 00:39:28,359
<font color="#CCCCCC">have been explored a C Drive obviously a</font>

966
00:39:25,329 --> 00:39:30,579
P<font color="#E5E5E5"> Drive and then if you look a little</font>

967
00:39:28,359 --> 00:39:32,319
<font color="#E5E5E5">bit further</font><font color="#CCCCCC"> down you can see</font><font color="#E5E5E5"> an actual</font>

968
00:39:30,579 --> 00:39:35,769
<font color="#E5E5E5">that</font><font color="#CCCCCC"> network resource we looked at</font>

969
00:39:32,319 --> 00:39:37,900
earlier the controller<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see there</font>

970
00:39:35,769 --> 00:39:39,788
<font color="#E5E5E5">somewhere the control panel so if you</font>

971
00:39:37,900 --> 00:39:41,499
were<font color="#E5E5E5"> going in and changing different</font>

972
00:39:39,789 --> 00:39:44,589
things<font color="#E5E5E5"> within control panel applets that</font>

973
00:39:41,499 --> 00:39:47,229
<font color="#E5E5E5">would also show up in shell bags</font><font color="#CCCCCC"> all of</font>

974
00:39:44,589 --> 00:39:49,328
this would also contain<font color="#CCCCCC"> information like</font>

975
00:39:47,229 --> 00:39:50,919
may contain<font color="#CCCCCC"> information like the first</font>

976
00:39:49,329 --> 00:39:53,079
time you interacted with that<font color="#E5E5E5"> directory</font>

977
00:39:50,920 --> 00:39:55,509
in the last time<font color="#CCCCCC"> okay so we can utilize</font>

978
00:39:53,079 --> 00:39:58,390
<font color="#CCCCCC">those</font><font color="#E5E5E5"> time stamps to see what was being</font>

979
00:39:55,509 --> 00:40:00,759
accessed<font color="#E5E5E5"> and</font><font color="#CCCCCC"> when from</font><font color="#E5E5E5"> a directory</font>

980
00:39:58,390 --> 00:40:01,538
standpoint and<font color="#E5E5E5"> you can even see</font><font color="#CCCCCC"> that</font>

981
00:40:00,759 --> 00:40:04,479
there's

982
00:40:01,539 --> 00:40:06,549
specific information<font color="#E5E5E5"> about the MFT or</font>

983
00:40:04,479 --> 00:40:08,919
master file table record number so file

984
00:40:06,549 --> 00:40:11,288
system specific information<font color="#E5E5E5"> about</font><font color="#CCCCCC"> this</font>

985
00:40:08,919 --> 00:40:13,299
<font color="#E5E5E5">particular folder so that</font><font color="#CCCCCC"> we can see</font>

986
00:40:11,289 --> 00:40:14,919
that<font color="#CCCCCC"> ok this was clearly</font><font color="#E5E5E5"> an NTFS file</font>

987
00:40:13,299 --> 00:40:17,919
system that<font color="#CCCCCC"> was being</font><font color="#E5E5E5"> accessed this was</font>

988
00:40:14,919 --> 00:40:20,138
a fat file system<font color="#CCCCCC"> or what have you so a</font>

989
00:40:17,919 --> 00:40:25,388
ton of information in<font color="#CCCCCC"> shale bags</font>

990
00:40:20,139 --> 00:40:27,099
<font color="#CCCCCC">available to us just some other</font>

991
00:40:25,389 --> 00:40:28,779
locations I've got listed<font color="#CCCCCC"> here I'm not</font>

992
00:40:27,099 --> 00:40:31,059
<font color="#E5E5E5">going to cover these just from from a</font>

993
00:40:28,779 --> 00:40:35,409
time<font color="#E5E5E5"> standpoint</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> these are other</font>

994
00:40:31,059 --> 00:40:38,139
<font color="#E5E5E5">locations you don't want to look at</font><font color="#CCCCCC"> so</font>

995
00:40:35,409 --> 00:40:42,130
<font color="#E5E5E5">just kind of wrap</font><font color="#CCCCCC"> up here</font><font color="#E5E5E5"> the three</font>

996
00:40:38,139 --> 00:40:45,130
<font color="#E5E5E5">primary locations that registry can can</font>

997
00:40:42,130 --> 00:40:47,709
greatly help in with malware<font color="#CCCCCC"> a program</font>

998
00:40:45,130 --> 00:40:49,499
execution<font color="#E5E5E5"> persistence</font><font color="#CCCCCC"> inactivity we</font>

999
00:40:47,709 --> 00:40:52,868
focused today on program execution

1000
00:40:49,499 --> 00:40:57,428
<font color="#E5E5E5">looking at after Pat</font><font color="#CCCCCC"> cash</font><font color="#E5E5E5"> am cash which</font>

1001
00:40:52,869 --> 00:41:00,130
isn't<font color="#CCCCCC"> listed here mui user assist recent</font>

1002
00:40:57,429 --> 00:41:02,349
apps<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> those can help</font><font color="#CCCCCC"> illustrate or</font>

1003
00:41:00,130 --> 00:41:04,479
build a picture of what<font color="#CCCCCC"> has been</font>

1004
00:41:02,349 --> 00:41:07,380
executed<font color="#CCCCCC"> on the system</font><font color="#E5E5E5"> when was it</font>

1005
00:41:04,479 --> 00:41:10,689
executed<font color="#E5E5E5"> what programs may have existed</font>

1006
00:41:07,380 --> 00:41:12,429
and so on<font color="#E5E5E5"> and keep in mind here that</font>

1007
00:41:10,689 --> 00:41:13,989
<font color="#E5E5E5">when we when we talk about program</font>

1008
00:41:12,429 --> 00:41:17,889
execution<font color="#CCCCCC"> when we talk about activity</font>

1009
00:41:13,989 --> 00:41:19,899
and persistence this is all regardless

1010
00:41:17,889 --> 00:41:22,569
<font color="#E5E5E5">of whether or not that executable or</font>

1011
00:41:19,899 --> 00:41:24,939
that file<font color="#E5E5E5"> actually exists</font><font color="#CCCCCC"> on disk</font><font color="#E5E5E5"> so</font>

1012
00:41:22,569 --> 00:41:27,519
that<font color="#E5E5E5"> file could be on there for</font><font color="#CCCCCC"> a matter</font>

1013
00:41:24,939 --> 00:41:28,689
of seconds as long as<font color="#E5E5E5"> it's executed it's</font>

1014
00:41:27,519 --> 00:41:32,049
going to show up<font color="#E5E5E5"> here and then it could</font>

1015
00:41:28,689 --> 00:41:33,609
<font color="#CCCCCC">be</font><font color="#E5E5E5"> wiped out later we don't have that</font>

1016
00:41:32,049 --> 00:41:35,499
but<font color="#CCCCCC"> we don't</font><font color="#E5E5E5"> necessarily need</font><font color="#CCCCCC"> that</font>

1017
00:41:33,609 --> 00:41:38,109
executable<font color="#E5E5E5"> in order to build this</font>

1018
00:41:35,499 --> 00:41:40,629
picture so we saw through for example<font color="#CCCCCC"> um</font>

1019
00:41:38,109 --> 00:41:43,509
UI cache and<font color="#E5E5E5"> AM cache that you can build</font>

1020
00:41:40,630 --> 00:41:45,549
a decent profile of an executable<font color="#E5E5E5"> from</font>

1021
00:41:43,509 --> 00:41:48,069
an internal metadata standpoint<font color="#E5E5E5"> just</font><font color="#CCCCCC"> by</font>

1022
00:41:45,549 --> 00:41:51,609
the data stored in those registry keys

1023
00:41:48,069 --> 00:41:53,919
and values<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that's all I got for you</font>

1024
00:41:51,609 --> 00:41:56,739
<font color="#E5E5E5">guys if you</font><font color="#CCCCCC"> have any questions</font><font color="#E5E5E5"> I think</font>

1025
00:41:53,919 --> 00:42:00,328
<font color="#CCCCCC">I've got a couple kind of right</font><font color="#E5E5E5"> on town</font>

1026
00:41:56,739 --> 00:42:00,329
but feel free<font color="#E5E5E5"> to ask me yes</font>

1027
00:42:10,950 --> 00:42:16,020
yes<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> so the question</font><font color="#CCCCCC"> was is</font><font color="#E5E5E5"> there</font>

1028
00:42:13,349 --> 00:42:17,730
any<font color="#E5E5E5"> way to search the registry for a</font>

1029
00:42:16,020 --> 00:42:19,259
given time frame<font color="#E5E5E5"> if you know the</font>

1030
00:42:17,730 --> 00:42:23,579
specific window that<font color="#E5E5E5"> you're looking at</font>

1031
00:42:19,260 --> 00:42:25,589
in<font color="#E5E5E5"> the answer is yes</font><font color="#CCCCCC"> to an extent so</font>

1032
00:42:23,579 --> 00:42:27,450
<font color="#CCCCCC">registry explore the</font><font color="#E5E5E5"> program we were</font>

1033
00:42:25,589 --> 00:42:29,670
looking at<font color="#CCCCCC"> earlier</font><font color="#E5E5E5"> and plenty of others</font>

1034
00:42:27,450 --> 00:42:32,160
have a date filter where you can put in

1035
00:42:29,670 --> 00:42:34,890
<font color="#CCCCCC">okay show me everything with the last</font>

1036
00:42:32,160 --> 00:42:36,868
right time between you know this minute

1037
00:42:34,890 --> 00:42:38,609
<font color="#E5E5E5">and this minute</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we'll show that to</font>

1038
00:42:36,869 --> 00:42:41,700
you<font color="#E5E5E5"> the only thing I would</font><font color="#CCCCCC"> caution</font><font color="#E5E5E5"> you</font>

1039
00:42:38,609 --> 00:42:43,859
<font color="#E5E5E5">on is there are certain things</font><font color="#CCCCCC"> like the</font>

1040
00:42:41,700 --> 00:42:46,649
user assist<font color="#CCCCCC"> like the recent apps</font><font color="#E5E5E5"> that we</font>

1041
00:42:43,859 --> 00:42:48,390
looked<font color="#E5E5E5"> about that contain embedded time</font>

1042
00:42:46,650 --> 00:42:50,069
stamps that<font color="#CCCCCC"> are in binary format that</font>

1043
00:42:48,390 --> 00:42:52,529
would<font color="#E5E5E5"> necessarily show up</font><font color="#CCCCCC"> in that that</font>

1044
00:42:50,069 --> 00:42:54,180
particular search but if you were just

1045
00:42:52,530 --> 00:42:56,190
<font color="#E5E5E5">to</font><font color="#CCCCCC"> look at the last write times and want</font>

1046
00:42:54,180 --> 00:42:57,899
<font color="#CCCCCC">to timeline</font><font color="#E5E5E5"> that yes and register</font>

1047
00:42:56,190 --> 00:43:08,069
<font color="#CCCCCC">Explorer is</font><font color="#E5E5E5"> a great one for that and</font>

1048
00:42:57,900 --> 00:43:11,280
that's<font color="#E5E5E5"> free yes yes yeah</font><font color="#CCCCCC"> yeah the</font>

1049
00:43:08,069 --> 00:43:15,839
question<font color="#CCCCCC"> was</font><font color="#E5E5E5"> will autoruns</font><font color="#CCCCCC"> cat 4 catch</font>

1050
00:43:11,280 --> 00:43:18,750
image file execution options<font color="#E5E5E5"> and yes and</font>

1051
00:43:15,839 --> 00:43:20,009
<font color="#E5E5E5">autoruns will catch a good portion</font><font color="#CCCCCC"> of</font>

1052
00:43:18,750 --> 00:43:22,349
these so if you're<font color="#CCCCCC"> running</font><font color="#E5E5E5"> out of runs</font>

1053
00:43:20,010 --> 00:43:23,880
from sysinternals<font color="#E5E5E5"> that will catch a good</font>

1054
00:43:22,349 --> 00:43:25,440
<font color="#E5E5E5">portion of the persistence mechanisms</font>

1055
00:43:23,880 --> 00:43:27,960
<font color="#E5E5E5">not necessarily some of the more exotic</font>

1056
00:43:25,440 --> 00:43:29,329
ones but the<font color="#E5E5E5"> the run keys your</font><font color="#CCCCCC"> typical</font>

1057
00:43:27,960 --> 00:43:32,240
ones your image file execution options

1058
00:43:29,329 --> 00:43:35,990
<font color="#CCCCCC">this</font><font color="#E5E5E5"> stub</font><font color="#CCCCCC"> path keys which I talked about</font>

1059
00:43:32,240 --> 00:43:35,990
<font color="#CCCCCC">autorun should catch</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of it</font>

1060
00:43:36,230 --> 00:43:41,329
<font color="#CCCCCC">alright thanks yes</font>

1061
00:43:41,600 --> 00:43:45,810
[Applause]

