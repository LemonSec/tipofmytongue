1
00:00:00,000 --> 00:00:04,620
central Technical Community in this role

2
00:00:02,220 --> 00:00:07,680
he utilizes the full spectrum of f5

3
00:00:04,620 --> 00:00:10,019
technology to analyze and solve complex

4
00:00:07,680 --> 00:00:12,870
problems for f5 users all over the world

5
00:00:10,019 --> 00:00:14,549
he frequently writes articles and

6
00:00:12,870 --> 00:00:16,770
records videos that are featured on the

7
00:00:14,549 --> 00:00:18,960
dev central website John is certified in

8
00:00:16,770 --> 00:00:22,710
several industry relevant areas

9
00:00:18,960 --> 00:00:23,789
including CISSP ceh and Six Sigma which

10
00:00:22,710 --> 00:00:26,369
process improvement

11
00:00:23,789 --> 00:00:28,140
prior to his work at f5 John was

12
00:00:26,369 --> 00:00:30,179
communications officer in the US Air

13
00:00:28,140 --> 00:00:32,340
Force where he specialized in ground and

14
00:00:30,179 --> 00:00:33,989
satellite networks after leaving the Air

15
00:00:32,340 --> 00:00:35,489
Force he worked for a technology

16
00:00:33,989 --> 00:00:37,500
consulting firm where he analyzed

17
00:00:35,489 --> 00:00:40,410
cyberattacks against the u.s. DoD

18
00:00:37,500 --> 00:00:42,059
computer systems and networks John holds

19
00:00:40,410 --> 00:00:43,680
a Bachelor of Science and Computer

20
00:00:42,059 --> 00:00:46,019
Engineering and Master of Science and

21
00:00:43,680 --> 00:00:49,440
computer networks I have to tell you

22
00:00:46,020 --> 00:00:51,750
about this talk when we saw at parameter

23
00:00:49,440 --> 00:00:54,510
when we saw this abstract we all got

24
00:00:51,750 --> 00:00:56,010
giddy we're like this is great and this

25
00:00:54,510 --> 00:00:58,260
is one of those all the non-technical

26
00:00:56,010 --> 00:01:02,129
people go this is Greek to me and we go

27
00:00:58,260 --> 00:01:04,890
even better so I know we're rushing you

28
00:01:02,129 --> 00:01:07,120
here but you're good everybody please

29
00:01:04,890 --> 00:01:10,000
give it up for John Wagner

30
00:01:07,120 --> 00:01:13,720
[Applause]

31
00:01:10,000 --> 00:01:16,720
as a song as a song okay I'm gonna I'm

32
00:01:13,720 --> 00:01:22,480
gonna hook this up really quick make

33
00:01:16,720 --> 00:01:23,650
sure everybody can hear me okay good can

34
00:01:22,480 --> 00:01:26,260
everybody hear me if I put it right

35
00:01:23,650 --> 00:01:28,630
they're good to go yeah a bunch of nods

36
00:01:26,260 --> 00:01:32,530
all right I got to admit when I saw the

37
00:01:28,630 --> 00:01:35,110
LRS little name you know neck thing I

38
00:01:32,530 --> 00:01:36,730
thought at first it said LGB let's go

39
00:01:35,110 --> 00:01:39,370
blues right I know we just said that a

40
00:01:36,730 --> 00:01:42,250
second ago but the first time in you

41
00:01:39,370 --> 00:01:43,750
know in franchise history the cup came

42
00:01:42,250 --> 00:01:48,100
to st. Louis that's an exciting time

43
00:01:43,750 --> 00:01:49,510
right good to go so let's go blues all

44
00:01:48,100 --> 00:01:51,580
right well hey man it's a pleasure to be

45
00:01:49,510 --> 00:01:54,759
here at show me con like Dave said my

46
00:01:51,580 --> 00:01:56,440
name's John Wagner and I do some

47
00:01:54,759 --> 00:01:58,869
security kind of stuff for f5 networks

48
00:01:56,440 --> 00:02:00,490
and it was in the Air Force for a while

49
00:01:58,869 --> 00:02:02,350
did some consulting stuff out here at

50
00:02:00,490 --> 00:02:05,619
Scott Air Force Base just across the

51
00:02:02,350 --> 00:02:08,019
river so it's it's fun to be here and

52
00:02:05,619 --> 00:02:09,340
talk to everybody at shone week on all

53
00:02:08,020 --> 00:02:12,730
right so today we're gonna talk about

54
00:02:09,340 --> 00:02:16,060
TLS 1.3 is anybody out there heard of

55
00:02:12,730 --> 00:02:17,290
TLS 1.3 have an idea of what we're what

56
00:02:16,060 --> 00:02:20,410
we're talking about here today a little

57
00:02:17,290 --> 00:02:23,799
bit of a clue it's it's a it's a pretty

58
00:02:20,410 --> 00:02:26,620
pretty interesting advancement in the in

59
00:02:23,800 --> 00:02:28,330
the transport layer security protocol so

60
00:02:26,620 --> 00:02:30,700
the reason this is titled minor version

61
00:02:28,330 --> 00:02:33,130
major changes is if you know anything

62
00:02:30,700 --> 00:02:35,380
about TLS you've got TLS you know

63
00:02:33,130 --> 00:02:36,700
version 1 the one one one two is kind of

64
00:02:35,380 --> 00:02:38,680
the major one that we're on right now

65
00:02:36,700 --> 00:02:40,690
and so then you would just think hey 1.3

66
00:02:38,680 --> 00:02:42,370
right it's the next little the next

67
00:02:40,690 --> 00:02:44,350
little iteration maybe they'll kind of

68
00:02:42,370 --> 00:02:46,120
kind of put a new coat of paint on this

69
00:02:44,350 --> 00:02:47,880
thing brush up a couple of things but as

70
00:02:46,120 --> 00:02:50,230
it turns out this is a pretty major

71
00:02:47,880 --> 00:02:52,239
advancement in what the TLS protocol

72
00:02:50,230 --> 00:02:55,149
does for encryption on the Internet

73
00:02:52,239 --> 00:02:57,459
today so we'll we'll hop into this thing

74
00:02:55,150 --> 00:03:00,239
alright so transport you know what let

75
00:02:57,459 --> 00:03:02,590
me make sure this is turned on as well

76
00:03:00,239 --> 00:03:07,239
okay there we go all right transport

77
00:03:02,590 --> 00:03:08,799
layer security is a protocol and when

78
00:03:07,239 --> 00:03:11,950
you think about what a protocol is it's

79
00:03:08,799 --> 00:03:14,230
a set of it's a set of requirements a

80
00:03:11,950 --> 00:03:16,959
set of ideas that that establish how

81
00:03:14,230 --> 00:03:20,709
something works properly right so if you

82
00:03:16,959 --> 00:03:21,849
have you know a handshake protocol and

83
00:03:20,709 --> 00:03:22,480
you're gonna you know reach out with

84
00:03:21,849 --> 00:03:23,768
your right hand

85
00:03:22,480 --> 00:03:26,140
every time and shake somebody's hand

86
00:03:23,769 --> 00:03:29,140
that's that's in a sense of protocol so

87
00:03:26,140 --> 00:03:31,359
TLS is a protocol and fundamentally it

88
00:03:29,140 --> 00:03:34,000
provides this secure channel between two

89
00:03:31,360 --> 00:03:37,150
communicating peers and so you have a

90
00:03:34,000 --> 00:03:38,769
most typically a client so your internet

91
00:03:37,150 --> 00:03:40,780
browser on your laptop or your mobile

92
00:03:38,769 --> 00:03:42,489
phone or whatever and then you've got

93
00:03:40,780 --> 00:03:45,670
the the web server that you're trying to

94
00:03:42,489 --> 00:03:49,360
connect to right and so TLS at its at

95
00:03:45,670 --> 00:03:52,809
its fundamental you know fundamental you

96
00:03:49,360 --> 00:03:54,910
know base is providing the the protocol

97
00:03:52,810 --> 00:03:56,829
that that defines how those two peers

98
00:03:54,910 --> 00:04:01,180
are going to communicate and it provides

99
00:03:56,829 --> 00:04:03,670
this the CIA the the the Holy Trinity of

100
00:04:01,180 --> 00:04:05,200
security triad right the confidentiality

101
00:04:03,670 --> 00:04:07,569
integrity and authentication

102
00:04:05,200 --> 00:04:08,619
confidentiality I'm sure most of you

103
00:04:07,569 --> 00:04:11,379
already know all this but

104
00:04:08,620 --> 00:04:12,970
confidentiality means that only these

105
00:04:11,379 --> 00:04:16,418
two endpoints are going to be able to

106
00:04:12,970 --> 00:04:19,238
see what is shared right so if you have

107
00:04:16,418 --> 00:04:20,940
a bad guy in the middle that captures

108
00:04:19,238 --> 00:04:24,250
all of this data all this communication

109
00:04:20,940 --> 00:04:25,330
then they're gonna be able to to to

110
00:04:24,250 --> 00:04:26,650
capture that but they're not gonna be

111
00:04:25,330 --> 00:04:27,760
able to read it and they're not gonna be

112
00:04:26,650 --> 00:04:29,979
able to read it because there's been

113
00:04:27,760 --> 00:04:32,680
this encryption that has been put on top

114
00:04:29,979 --> 00:04:34,630
of this communication and so TLS is

115
00:04:32,680 --> 00:04:37,389
going to define exactly what kind of

116
00:04:34,630 --> 00:04:40,090
encryption is used to encrypt that data

117
00:04:37,389 --> 00:04:42,700
all right integrity the data cannot be

118
00:04:40,090 --> 00:04:44,020
modified if someone were to capture that

119
00:04:42,700 --> 00:04:45,669
in the middle and then change a couple

120
00:04:44,020 --> 00:04:48,760
of things you know if there's a bank

121
00:04:45,669 --> 00:04:50,919
transfer and they you know moved a 1 to

122
00:04:48,760 --> 00:04:51,880
a 10 or a 10 to a million or whatever

123
00:04:50,919 --> 00:04:54,219
you know they're gonna be able to see

124
00:04:51,880 --> 00:04:56,380
hey that data was was was changed so

125
00:04:54,220 --> 00:04:58,270
that's the integrity piece so something

126
00:04:56,380 --> 00:05:00,659
has to be there in the TLS protocol to

127
00:04:58,270 --> 00:05:02,740
ensure integrity of the information

128
00:05:00,660 --> 00:05:04,690
between the client and the server and

129
00:05:02,740 --> 00:05:06,460
then finally authentication whenever you

130
00:05:04,690 --> 00:05:09,070
as a client whenever you as a web

131
00:05:06,460 --> 00:05:11,680
browser connect to you know show me

132
00:05:09,070 --> 00:05:14,770
con-com then you want to make sure that

133
00:05:11,680 --> 00:05:17,470
the that that end web server is actually

134
00:05:14,770 --> 00:05:19,539
show me con-com or amazon.com or

135
00:05:17,470 --> 00:05:21,370
wherever you want to go right so how do

136
00:05:19,539 --> 00:05:23,349
you know it's not somebody else over

137
00:05:21,370 --> 00:05:26,169
there well you you wouldn't know that

138
00:05:23,349 --> 00:05:27,849
except for the authentication mechanisms

139
00:05:26,169 --> 00:05:30,030
that are put in place in this TLS

140
00:05:27,849 --> 00:05:31,830
protocol so that's that

141
00:05:30,030 --> 00:05:35,400
and it's basic level that's what TLS

142
00:05:31,830 --> 00:05:38,820
does all righty if you've gots if you

143
00:05:35,400 --> 00:05:40,710
guys have seen the HTTPS you know in

144
00:05:38,820 --> 00:05:42,300
your URL browser that's what we're

145
00:05:40,710 --> 00:05:44,219
talking about here not every single

146
00:05:42,300 --> 00:05:46,800
website has that you know sometimes it's

147
00:05:44,220 --> 00:05:50,070
just HTTP there's not the little secure

148
00:05:46,800 --> 00:05:52,290
lock thing up there and it's and in that

149
00:05:50,070 --> 00:05:55,230
case it's not encrypted at all it's not

150
00:05:52,290 --> 00:05:56,580
using TLS but but in this case that's

151
00:05:55,230 --> 00:05:58,410
exactly what we're talking about here

152
00:05:56,580 --> 00:05:59,490
HTTPS I would go through a quick

153
00:05:58,410 --> 00:06:02,460
timeline

154
00:05:59,490 --> 00:06:07,500
the history of the different versions of

155
00:06:02,460 --> 00:06:09,719
TLS so way back in 1994 which seems like

156
00:06:07,500 --> 00:06:14,610
you know an eternity ago in technology

157
00:06:09,720 --> 00:06:17,370
Tom right the SSL 1.0 was developed by

158
00:06:14,610 --> 00:06:20,280
Netscape and that thing was so insecure

159
00:06:17,370 --> 00:06:22,050
that it never got released at all so in

160
00:06:20,280 --> 00:06:24,090
that scape didn't even didn't even

161
00:06:22,050 --> 00:06:25,620
release its serious security flaws they

162
00:06:24,090 --> 00:06:30,060
said we're not going to do it so a year

163
00:06:25,620 --> 00:06:32,730
later they released SSL v2 in 1995 and

164
00:06:30,060 --> 00:06:35,630
then a year after that SSL v3 which by

165
00:06:32,730 --> 00:06:37,650
the way is still out there on some web

166
00:06:35,630 --> 00:06:42,000
applications today you guys probably

167
00:06:37,650 --> 00:06:43,349
know some of that alrighty and then at

168
00:06:42,000 --> 00:06:45,930
which by the way it was an interesting

169
00:06:43,350 --> 00:06:47,970
change and who took over the development

170
00:06:45,930 --> 00:06:49,530
of this so Netscape is the one that

171
00:06:47,970 --> 00:06:51,810
company is the one that started all this

172
00:06:49,530 --> 00:06:53,609
and then the IETF the internet

173
00:06:51,810 --> 00:06:56,040
Engineering Task Force took over

174
00:06:53,610 --> 00:06:58,979
ownership of the development of this

175
00:06:56,040 --> 00:07:02,729
protocol when it became SSL version 3

176
00:06:58,979 --> 00:07:06,240
back in 1996 and then in 99 they renamed

177
00:07:02,729 --> 00:07:08,039
it from SSL to TLS 1.0 still controlled

178
00:07:06,240 --> 00:07:10,890
by the IETF the internet Engineering

179
00:07:08,040 --> 00:07:13,500
Task Force which by the way just a

180
00:07:10,890 --> 00:07:15,870
little side note on this it's been 1999

181
00:07:13,500 --> 00:07:20,640
this is 2019 right we've been doing this

182
00:07:15,870 --> 00:07:22,860
for what 20 years having the acronym TLS

183
00:07:20,640 --> 00:07:24,870
and yet out there a lot when you talk

184
00:07:22,860 --> 00:07:26,550
about encryption people people say hey

185
00:07:24,870 --> 00:07:28,169
is it SSL encrypted so we're still

186
00:07:26,550 --> 00:07:30,090
saying that's a cell I don't get it

187
00:07:28,169 --> 00:07:32,430
maybe we can maybe we can be the change

188
00:07:30,090 --> 00:07:35,489
you know and start using TLS instead of

189
00:07:32,430 --> 00:07:38,640
SSL but anyway nonetheless TLS 1.1 Zac

190
00:07:35,490 --> 00:07:41,350
in 99 and then 1.1 came out seven years

191
00:07:38,640 --> 00:07:44,289
later in 2006 and then a couple year

192
00:07:41,350 --> 00:07:48,460
after that 1.2 and 1.2 is what is still

193
00:07:44,290 --> 00:07:51,850
predominantly used today and frankly has

194
00:07:48,460 --> 00:07:53,890
not had a ton of issues with it but as

195
00:07:51,850 --> 00:07:56,020
you you know as you work through the

196
00:07:53,890 --> 00:07:57,729
protocol itself you know some forms of

197
00:07:56,020 --> 00:07:59,530
encryption may not be as secure as they

198
00:07:57,730 --> 00:08:01,000
used to be or maybe you know there's

199
00:07:59,530 --> 00:08:03,940
been some kind of attack that's been

200
00:08:01,000 --> 00:08:06,310
that's been shown to you know to be

201
00:08:03,940 --> 00:08:08,680
usable on certain types of encryption or

202
00:08:06,310 --> 00:08:09,820
key exchange or whatever it is and then

203
00:08:08,680 --> 00:08:13,720
you finally fast forward all the way to

204
00:08:09,820 --> 00:08:18,010
2018 so last year the ITF ratified or

205
00:08:13,720 --> 00:08:21,160
codified the RFC 40 L s 1.3 so this

206
00:08:18,010 --> 00:08:23,830
thing is brand-new it's still it's still

207
00:08:21,160 --> 00:08:26,290
you know being deployed kind of kind of

208
00:08:23,830 --> 00:08:28,780
trickled out there but this is where the

209
00:08:26,290 --> 00:08:31,300
world is going in the in the you know in

210
00:08:28,780 --> 00:08:34,059
the in the terms of TLS encryption so

211
00:08:31,300 --> 00:08:35,979
it's interesting to know what TLS one up

212
00:08:34,059 --> 00:08:37,839
three has in it and if you're a web

213
00:08:35,979 --> 00:08:40,479
server administrator to know how to

214
00:08:37,840 --> 00:08:43,120
configure this stuff or if you turn

215
00:08:40,479 --> 00:08:45,100
something on what does that mean and how

216
00:08:43,120 --> 00:08:46,690
does that you know affect you you know

217
00:08:45,100 --> 00:08:49,570
your company or your clients or whatever

218
00:08:46,690 --> 00:08:52,980
all right so I wanted to show you also

219
00:08:49,570 --> 00:08:56,140
the prevalence or the pervasive use of

220
00:08:52,980 --> 00:08:58,780
TLS across the Internet today like we

221
00:08:56,140 --> 00:09:01,689
showed on that one lakh a second ago not

222
00:08:58,780 --> 00:09:05,199
every single website is HTTPS encrypted

223
00:09:01,690 --> 00:09:06,580
right and so Google has this cool report

224
00:09:05,200 --> 00:09:08,740
it's called the Google transparency

225
00:09:06,580 --> 00:09:11,830
report and I just pulled this yesterday

226
00:09:08,740 --> 00:09:14,320
they update it fairly frequently so as

227
00:09:11,830 --> 00:09:17,650
of was that say May 25th you can't see

228
00:09:14,320 --> 00:09:19,600
that across Google itself so these are

229
00:09:17,650 --> 00:09:22,540
these are clients accessing websites

230
00:09:19,600 --> 00:09:26,460
that use the Google search engine which

231
00:09:22,540 --> 00:09:26,459
is the most popular website in the world

232
00:09:26,790 --> 00:09:33,040
94% of those web sites are encrypted

233
00:09:30,700 --> 00:09:34,930
all right so or I'm sorry this one is

234
00:09:33,040 --> 00:09:36,459
the actual Google controlled properties

235
00:09:34,930 --> 00:09:37,870
that's I need to clarify that so these

236
00:09:36,460 --> 00:09:39,790
are the Google controlled properties so

237
00:09:37,870 --> 00:09:42,910
like Gmail or YouTube or any of the

238
00:09:39,790 --> 00:09:44,860
Google Docs that kind of stuff so 94% of

239
00:09:42,910 --> 00:09:48,400
all Google stuff is encrypted so they

240
00:09:44,860 --> 00:09:51,190
use this HTTPS all rightie htps on top

241
00:09:48,400 --> 00:09:54,160
sites this is not Google specific

242
00:09:51,190 --> 00:09:58,149
out of 100 default to HTTPS encryption

243
00:09:54,160 --> 00:10:00,910
and then 96 out of 100 they work on

244
00:09:58,149 --> 00:10:03,370
HTTPS just not every single one of them

245
00:10:00,910 --> 00:10:06,399
default ACPs so the point with all of

246
00:10:03,370 --> 00:10:08,290
this is everything is moving to

247
00:10:06,399 --> 00:10:08,949
encryption one day this is this numbers

248
00:10:08,290 --> 00:10:11,349
going to be a hundred percent

249
00:10:08,949 --> 00:10:14,889
everything's gonna be encrypted and so

250
00:10:11,350 --> 00:10:16,360
so it's interesting to again know you

251
00:10:14,889 --> 00:10:18,459
know how this whole thing works all

252
00:10:16,360 --> 00:10:21,519
right so when we look at TLS 1.3

253
00:10:18,459 --> 00:10:23,859
specifically and we talked about TLS 1.2

254
00:10:21,519 --> 00:10:25,720
and 1.2 is not like inherently broken

255
00:10:23,860 --> 00:10:29,290
we're hey it's just got these massive

256
00:10:25,720 --> 00:10:31,990
flaws like ssl 1.0 had it's interesting

257
00:10:29,290 --> 00:10:34,060
to think about what are the advantages

258
00:10:31,990 --> 00:10:36,399
of TLS 1.3 and today i'm going to talk

259
00:10:34,060 --> 00:10:38,500
about two primary advantages and the

260
00:10:36,399 --> 00:10:41,410
first one is security and if we have

261
00:10:38,500 --> 00:10:44,110
learned nothing from security those who

262
00:10:41,410 --> 00:10:46,329
have had the pleasure of watching paul

263
00:10:44,110 --> 00:10:48,910
blart mall cop 2 we know that security

264
00:10:46,329 --> 00:10:51,189
is not a is a mission not an

265
00:10:48,910 --> 00:10:54,040
intermission alright so security is one

266
00:10:51,189 --> 00:10:56,349
of the primary things that TLS 1.3

267
00:10:54,040 --> 00:10:59,769
brings and then the other one is speed

268
00:10:56,350 --> 00:11:02,139
and again on speed if you've if you've

269
00:10:59,769 --> 00:11:03,370
ever seen the Ballad of Ricky Bobby we

270
00:11:02,139 --> 00:11:06,160
all learn from both feral if we want to

271
00:11:03,370 --> 00:11:07,839
go fast all right so we also know that

272
00:11:06,160 --> 00:11:09,819
we don't really know what to do with our

273
00:11:07,839 --> 00:11:11,139
hands when we're in an interview for

274
00:11:09,819 --> 00:11:13,209
those who've seen that movie all right

275
00:11:11,139 --> 00:11:16,209
so Ricky Bobby taught us to go fast and

276
00:11:13,209 --> 00:11:17,649
paul blart tell us to be secure and so

277
00:11:16,209 --> 00:11:21,130
those are the two those are two of the

278
00:11:17,649 --> 00:11:24,100
big things at TLS 1.3 brings us I wanted

279
00:11:21,130 --> 00:11:26,560
to go over the this thing called a

280
00:11:24,100 --> 00:11:29,560
handshake a TLS handshake and this is

281
00:11:26,560 --> 00:11:32,469
prior to version 1.3 and this is where

282
00:11:29,560 --> 00:11:34,268
the client or the browser is trying to

283
00:11:32,470 --> 00:11:37,389
or is communicating with the server

284
00:11:34,269 --> 00:11:40,269
itself and so what happens in that case

285
00:11:37,389 --> 00:11:41,740
is the client and I don't know if you

286
00:11:40,269 --> 00:11:43,600
can see that really well but anyway the

287
00:11:41,740 --> 00:11:46,149
there's several steps that are involved

288
00:11:43,600 --> 00:11:48,220
here the first step is the client since

289
00:11:46,149 --> 00:11:50,259
what's called a client hello message and

290
00:11:48,220 --> 00:11:51,879
along with that client hello message the

291
00:11:50,259 --> 00:11:54,069
client so this is your internet browser

292
00:11:51,879 --> 00:11:56,230
on your laptop whatever the client is

293
00:11:54,069 --> 00:11:58,059
gonna say hey server hello I want to

294
00:11:56,230 --> 00:12:00,490
start talking secure to you right now

295
00:11:58,059 --> 00:12:02,199
and right and along with that the client

296
00:12:00,490 --> 00:12:02,850
is going to say these are the cipher

297
00:12:02,199 --> 00:12:05,248
suite

298
00:12:02,850 --> 00:12:06,629
that I support and we're going to

299
00:12:05,249 --> 00:12:08,789
decipher sweets here in a minute and

300
00:12:06,629 --> 00:12:11,339
then the server is going to respond with

301
00:12:08,789 --> 00:12:12,419
the server hello and the server hello is

302
00:12:11,339 --> 00:12:14,009
going to say ok

303
00:12:12,419 --> 00:12:16,199
I saw the Cypress sweets that's you

304
00:12:14,009 --> 00:12:19,350
support I saw the different cryptography

305
00:12:16,199 --> 00:12:21,779
that you are able to talk in so when I

306
00:12:19,350 --> 00:12:23,609
send back my hello now I have chosen one

307
00:12:21,779 --> 00:12:25,919
of those and then we're gonna start to

308
00:12:23,609 --> 00:12:27,749
talk here alrighty it also sends its

309
00:12:25,919 --> 00:12:29,879
certificate so if you guys are familiar

310
00:12:27,749 --> 00:12:33,089
with public key cryptography and the

311
00:12:29,879 --> 00:12:35,609
certificate on a server it sends that

312
00:12:33,089 --> 00:12:37,649
for authentication purposes and then it

313
00:12:35,609 --> 00:12:40,709
sends some server key exchange depending

314
00:12:37,649 --> 00:12:42,569
on the type of authentication or key

315
00:12:40,709 --> 00:12:45,299
exchange mechanism that's that's used

316
00:12:42,569 --> 00:12:47,399
and then it says server hello done so

317
00:12:45,299 --> 00:12:49,259
basically the server after the client

318
00:12:47,399 --> 00:12:51,029
hello comes in the services ok I got I

319
00:12:49,259 --> 00:12:53,189
got what you you know we're talking

320
00:12:51,029 --> 00:12:55,139
about in terms of cryptography I've made

321
00:12:53,189 --> 00:12:57,179
my decisions and now I'm sending it back

322
00:12:55,139 --> 00:12:59,669
to you with some of my cryptographic

323
00:12:57,179 --> 00:13:01,829
material and now the client has that so

324
00:12:59,669 --> 00:13:04,079
then the client is able to generate some

325
00:13:01,829 --> 00:13:06,478
of the cryptographic keys and send back

326
00:13:04,079 --> 00:13:08,159
its key exchange material and then it

327
00:13:06,479 --> 00:13:10,350
sends what's called a change cipher spec

328
00:13:08,159 --> 00:13:11,879
message and basically that's the client

329
00:13:10,350 --> 00:13:13,529
saying hey I've done some of the key

330
00:13:11,879 --> 00:13:17,159
exchange stuff now we're going to move

331
00:13:13,529 --> 00:13:18,959
to symmetric cryptography and then the

332
00:13:17,159 --> 00:13:20,639
client sends a finished message and then

333
00:13:18,959 --> 00:13:22,439
the server finally sends back a change

334
00:13:20,639 --> 00:13:24,179
cypress peck hey we're going to move the

335
00:13:22,439 --> 00:13:25,709
symmetric cryptography and then the

336
00:13:24,179 --> 00:13:28,319
server is finished and after all that

337
00:13:25,709 --> 00:13:30,748
stuff happens you finally have exchanged

338
00:13:28,319 --> 00:13:32,069
keys between client and server and then

339
00:13:30,749 --> 00:13:33,899
now you can start to communicate

340
00:13:32,069 --> 00:13:37,108
securely so that kind of to kind of talk

341
00:13:33,899 --> 00:13:40,049
through that a little bit more

342
00:13:37,109 --> 00:13:41,489
the ultimate goal really in the key

343
00:13:40,049 --> 00:13:43,079
exchange when you when you hear that

344
00:13:41,489 --> 00:13:44,220
when you hear the term key exchange and

345
00:13:43,079 --> 00:13:46,169
there's different algorithms that you

346
00:13:44,220 --> 00:13:49,019
can use for key exchange really what

347
00:13:46,169 --> 00:13:52,199
that is is that's the client and the web

348
00:13:49,019 --> 00:13:54,509
server saying hey we want to talk or we

349
00:13:52,199 --> 00:13:56,819
want to communicate in a secure way we

350
00:13:54,509 --> 00:13:59,519
want to have encrypted communication

351
00:13:56,819 --> 00:14:01,498
between the two of us but we want to use

352
00:13:59,519 --> 00:14:04,229
what's called symmetric cryptography

353
00:14:01,499 --> 00:14:06,509
which is supremely faster than

354
00:14:04,229 --> 00:14:07,470
asymmetric cryptography but that's where

355
00:14:06,509 --> 00:14:10,109
they're trying to get to they're trying

356
00:14:07,470 --> 00:14:11,399
to get to symmetric cryptography and

357
00:14:10,109 --> 00:14:13,109
there's different algorithms that you

358
00:14:11,399 --> 00:14:13,710
can use for symmetric cryptography but

359
00:14:13,109 --> 00:14:15,510
the but the

360
00:14:13,710 --> 00:14:17,700
question is how do you get to symmetric

361
00:14:15,510 --> 00:14:18,840
cryptography the thing the the

362
00:14:17,700 --> 00:14:22,530
interesting thing about symmetric

363
00:14:18,840 --> 00:14:25,410
cryptography is that the each party uses

364
00:14:22,530 --> 00:14:27,569
the same key to encrypt and decrypt

365
00:14:25,410 --> 00:14:30,240
that's why it's a whole lot faster but

366
00:14:27,570 --> 00:14:32,340
you have to have the same key and so you

367
00:14:30,240 --> 00:14:34,560
know short of me walking down the hall

368
00:14:32,340 --> 00:14:35,790
or you know driving my car across the

369
00:14:34,560 --> 00:14:37,920
country and saying hey here's my

370
00:14:35,790 --> 00:14:40,439
symmetric key and now let's use this

371
00:14:37,920 --> 00:14:42,180
thing then how in the world do you make

372
00:14:40,440 --> 00:14:45,180
sure that both ends have the same key

373
00:14:42,180 --> 00:14:47,310
right that the answer to that is the key

374
00:14:45,180 --> 00:14:48,900
exchange protocol and that's that's

375
00:14:47,310 --> 00:14:51,119
where this whole client hello server

376
00:14:48,900 --> 00:14:53,420
hello key exchange all that stuff takes

377
00:14:51,120 --> 00:14:56,040
place there's some really cool

378
00:14:53,420 --> 00:14:58,199
mathematics that go on there that say

379
00:14:56,040 --> 00:15:00,510
hey we can exchange certain bits and

380
00:14:58,200 --> 00:15:03,660
pieces of information across the open

381
00:15:00,510 --> 00:15:05,850
Internet that attackers can look at and

382
00:15:03,660 --> 00:15:07,620
see and all that stuff but even though

383
00:15:05,850 --> 00:15:09,450
they can see all that stuff we're gonna

384
00:15:07,620 --> 00:15:11,070
keep something secret you know on the

385
00:15:09,450 --> 00:15:13,530
client side on the server side and

386
00:15:11,070 --> 00:15:15,720
ultimately we're gonna arrive at a

387
00:15:13,530 --> 00:15:17,370
symmetric key that we can use for that

388
00:15:15,720 --> 00:15:19,710
symmetric encryption it's super

389
00:15:17,370 --> 00:15:23,130
fascinating stuff like how in the world

390
00:15:19,710 --> 00:15:24,870
can you let these eavesdropper attacker

391
00:15:23,130 --> 00:15:28,320
guys look at everything you're doing

392
00:15:24,870 --> 00:15:32,580
almost everything you're doing and yet

393
00:15:28,320 --> 00:15:35,670
you arrive at a shared symmetric key you

394
00:15:32,580 --> 00:15:38,370
know nonetheless and so it's a

395
00:15:35,670 --> 00:15:40,829
fascinating thing so that that is the

396
00:15:38,370 --> 00:15:42,060
purpose of this handshake or one of the

397
00:15:40,830 --> 00:15:44,580
one of the purposes I should say the

398
00:15:42,060 --> 00:15:45,989
handshake is to exchange those symmetric

399
00:15:44,580 --> 00:15:49,110
keys so that you can have that what we

400
00:15:45,990 --> 00:15:51,510
call bulk symmetric encryption that then

401
00:15:49,110 --> 00:15:54,060
lasts for the duration of the session of

402
00:15:51,510 --> 00:15:56,760
what you're trying to do when you access

403
00:15:54,060 --> 00:15:59,280
the web application so anyway but that

404
00:15:56,760 --> 00:16:04,110
is that isn't that is an overview of the

405
00:15:59,280 --> 00:16:06,480
handshake as it looks pre 1.3 so this is

406
00:16:04,110 --> 00:16:09,000
like one dot TLS 1.2 1.1 and kind of

407
00:16:06,480 --> 00:16:11,310
previous versions of TLS and we'll talk

408
00:16:09,000 --> 00:16:13,260
about the TLS 1.3 handshake here in a

409
00:16:11,310 --> 00:16:14,819
second all right to kind of dive into

410
00:16:13,260 --> 00:16:17,100
this just a little bit more I did a

411
00:16:14,820 --> 00:16:19,710
little wireshark capture this was on

412
00:16:17,100 --> 00:16:22,050
Google Chrome and this was the client

413
00:16:19,710 --> 00:16:24,740
hello itself so you can see there's

414
00:16:22,050 --> 00:16:26,920
several things here there's the you know

415
00:16:24,740 --> 00:16:29,990
it lists like hey this is TLS 1.2

416
00:16:26,920 --> 00:16:32,810
protocol this is the client hello

417
00:16:29,990 --> 00:16:34,370
message itself it's got a session ID

418
00:16:32,810 --> 00:16:35,660
link it's got all this stuff but one of

419
00:16:34,370 --> 00:16:37,910
the things that you can see there toward

420
00:16:35,660 --> 00:16:40,610
the bottom is the cipher suites that

421
00:16:37,910 --> 00:16:42,199
this specific browser so this is Google

422
00:16:40,610 --> 00:16:45,020
Chrome I don't remember what version it

423
00:16:42,200 --> 00:16:48,140
was but it comes preloaded with certain

424
00:16:45,020 --> 00:16:50,420
cipher suites that it supports and so

425
00:16:48,140 --> 00:16:52,819
when it goes to connect to this web

426
00:16:50,420 --> 00:16:54,860
server it's going to say hey web server

427
00:16:52,820 --> 00:16:56,930
I want to do this client hello thing

428
00:16:54,860 --> 00:16:59,870
these are all the cipher suites that I

429
00:16:56,930 --> 00:17:01,160
support and then and you can you'll

430
00:16:59,870 --> 00:17:02,000
notice there on the end if you can see I

431
00:17:01,160 --> 00:17:04,359
don't know it's kind of small but

432
00:17:02,000 --> 00:17:06,770
there's a hexadecimal representation

433
00:17:04,359 --> 00:17:07,939
that is different for every single

434
00:17:06,770 --> 00:17:10,220
cipher suite that's kind of a cool thing

435
00:17:07,940 --> 00:17:11,900
too if you need to know hey which exact

436
00:17:10,220 --> 00:17:13,310
cipher suite are you talking about you

437
00:17:11,900 --> 00:17:15,709
can identify it by the hexadecimal

438
00:17:13,310 --> 00:17:17,958
representation there I highlighted that

439
00:17:15,709 --> 00:17:21,350
one that you can see down there it's

440
00:17:17,959 --> 00:17:23,510
like number 11 out of the 15 hexadecimal

441
00:17:21,349 --> 00:17:25,550
0 0 3 3 the reason I highlighted that

442
00:17:23,510 --> 00:17:27,170
one is when Google's when the Google

443
00:17:25,550 --> 00:17:29,300
Chrome sends this one to the web server

444
00:17:27,170 --> 00:17:31,580
these are in order of what it would

445
00:17:29,300 --> 00:17:34,070
prefer to use so it so it's it's number

446
00:17:31,580 --> 00:17:35,990
one choice would be this you know EC DHE

447
00:17:34,070 --> 00:17:37,790
the essay that ball-ball that top one up

448
00:17:35,990 --> 00:17:39,710
there would prefer to use that one right

449
00:17:37,790 --> 00:17:42,260
it's going to send it to the server and

450
00:17:39,710 --> 00:17:43,850
then the server is going to respond so

451
00:17:42,260 --> 00:17:45,379
when the server responds you can see

452
00:17:43,850 --> 00:17:48,980
here this is the wireshark capture on

453
00:17:45,380 --> 00:17:51,920
the server side and notice which one it

454
00:17:48,980 --> 00:17:53,450
shows right it's that 0 0 3 3 1 alright

455
00:17:51,920 --> 00:17:55,070
so this is the server hello all that

456
00:17:53,450 --> 00:17:56,810
stuff so I wanted to make I wanted to

457
00:17:55,070 --> 00:17:59,600
emphasize the fact that the server is

458
00:17:56,810 --> 00:18:01,040
the one that gets to choose the

459
00:17:59,600 --> 00:18:02,209
encryption and all that stuff that

460
00:18:01,040 --> 00:18:04,580
happens all right

461
00:18:02,210 --> 00:18:06,230
so and that and frankly it makes sense

462
00:18:04,580 --> 00:18:08,360
because if you're the server if you're

463
00:18:06,230 --> 00:18:10,850
the one serving up all of this web

464
00:18:08,360 --> 00:18:12,139
application data and someone is coming

465
00:18:10,850 --> 00:18:13,820
to you someone in the form of a browser

466
00:18:12,140 --> 00:18:15,620
is coming to you saying hey I want to

467
00:18:13,820 --> 00:18:18,710
access your website I want to access

468
00:18:15,620 --> 00:18:20,120
your your stuff then then the server is

469
00:18:18,710 --> 00:18:23,270
going to say ok I got it

470
00:18:20,120 --> 00:18:26,149
but we're gonna do business on my terms

471
00:18:23,270 --> 00:18:28,220
right and I am going to configure on the

472
00:18:26,150 --> 00:18:30,620
server side what I feel like is

473
00:18:28,220 --> 00:18:32,450
appropriate and strong and good and all

474
00:18:30,620 --> 00:18:34,760
that stuff so then if you have a client

475
00:18:32,450 --> 00:18:37,010
if you have a web browser that's coming

476
00:18:34,760 --> 00:18:38,059
to you and the only cipher suites that

477
00:18:37,010 --> 00:18:40,340
they support

478
00:18:38,059 --> 00:18:43,460
our stuff that you have chosen to not

479
00:18:40,340 --> 00:18:45,289
support and can't handle then then

480
00:18:43,460 --> 00:18:46,820
that's going to be not a good thing and

481
00:18:45,289 --> 00:18:49,369
if that happens then it then the

482
00:18:46,820 --> 00:18:52,639
connection just dies at that point it

483
00:18:49,369 --> 00:18:53,809
never it never moves forward so so

484
00:18:52,639 --> 00:18:55,699
anyway so I want to highlight the fact

485
00:18:53,809 --> 00:18:57,678
that the client when it sends a client

486
00:18:55,700 --> 00:18:59,450
hello it sends a whole bunch of cipher

487
00:18:57,679 --> 00:19:01,129
suites that it can support and then the

488
00:18:59,450 --> 00:19:02,570
server gets to make the choice on all

489
00:19:01,129 --> 00:19:04,759
right this is the one that I have now

490
00:19:02,570 --> 00:19:07,820
chosen and it may or may not be your top

491
00:19:04,759 --> 00:19:09,950
one so if you're a if you're a web you

492
00:19:07,820 --> 00:19:12,710
know application or web server developer

493
00:19:09,950 --> 00:19:14,599
or administrator I should say and you

494
00:19:12,710 --> 00:19:16,669
have to figure out which cipher Suites

495
00:19:14,599 --> 00:19:19,759
you want to support you need to think

496
00:19:16,669 --> 00:19:22,609
through this and think hey do I support

497
00:19:19,759 --> 00:19:25,789
the whatever you know weak encryption

498
00:19:22,609 --> 00:19:27,289
cipher suite or not and sometimes it's a

499
00:19:25,789 --> 00:19:29,179
business decision because some of your

500
00:19:27,289 --> 00:19:32,929
clients may say hey I'm still using

501
00:19:29,179 --> 00:19:34,549
Internet Explorer 8 or whatever and I

502
00:19:32,929 --> 00:19:36,109
want to come access your web application

503
00:19:34,549 --> 00:19:38,089
and that's the only way I can come in

504
00:19:36,109 --> 00:19:40,339
because of our business decision and if

505
00:19:38,089 --> 00:19:42,589
you don't support ciphers on that really

506
00:19:40,339 --> 00:19:45,080
old browser then we can't access your

507
00:19:42,589 --> 00:19:46,369
web application and then that again it's

508
00:19:45,080 --> 00:19:49,639
just kind of those business decisions

509
00:19:46,369 --> 00:19:51,678
that you have to make but ideally you

510
00:19:49,639 --> 00:19:53,689
move forward with with the strength of

511
00:19:51,679 --> 00:19:55,820
the encryption that you support and then

512
00:19:53,690 --> 00:19:57,289
you know and then you can you can say

513
00:19:55,820 --> 00:19:59,359
hey we're only going to support the the

514
00:19:57,289 --> 00:20:01,158
stronger stuff alrighty so nonetheless

515
00:19:59,359 --> 00:20:03,129
the server hello comes in I was going to

516
00:20:01,159 --> 00:20:04,339
show you the the last little thing here

517
00:20:03,129 --> 00:20:07,728
excuse me

518
00:20:04,339 --> 00:20:09,889
is is the TLS handshake itself in

519
00:20:07,729 --> 00:20:11,839
Wireshark esis you can see that the top

520
00:20:09,889 --> 00:20:14,238
three things are the TCP connection the

521
00:20:11,839 --> 00:20:16,309
sense and a cat and ACK and now that the

522
00:20:14,239 --> 00:20:18,349
TCP connection is established now we can

523
00:20:16,309 --> 00:20:20,210
start doing this TLS level stuff right

524
00:20:18,349 --> 00:20:22,189
and then you can see the client hello

525
00:20:20,210 --> 00:20:23,779
comes in and then server hello with the

526
00:20:22,190 --> 00:20:25,489
certificate and it's this is the

527
00:20:23,779 --> 00:20:29,659
handshake that we just showed a few

528
00:20:25,489 --> 00:20:32,629
minutes ago alrighty so it goes through

529
00:20:29,659 --> 00:20:33,950
several several iterations there before

530
00:20:32,629 --> 00:20:36,408
that very bottom one there you see

531
00:20:33,950 --> 00:20:38,330
application data and that's now that's

532
00:20:36,409 --> 00:20:39,919
now the data that's being transferred

533
00:20:38,330 --> 00:20:42,949
between the client and the server in

534
00:20:39,919 --> 00:20:46,339
that symmetric encryption mode alrighty

535
00:20:42,950 --> 00:20:48,039
so so that's just a quick you know quick

536
00:20:46,339 --> 00:20:51,229
flow on Wireshark to show you how that

537
00:20:48,039 --> 00:20:52,190
handshake gets set up all right cipher

538
00:20:51,229 --> 00:20:53,330
suite component

539
00:20:52,190 --> 00:20:55,520
so I wanted to talk about this for just

540
00:20:53,330 --> 00:20:57,530
a second I know we mentioned this whole

541
00:20:55,520 --> 00:20:59,270
cipher suite the client sends the cipher

542
00:20:57,530 --> 00:21:00,710
suite the web server has to configure

543
00:20:59,270 --> 00:21:03,410
the cipher suites all that kind of stuff

544
00:21:00,710 --> 00:21:05,120
so what does the cipher suite look like

545
00:21:03,410 --> 00:21:07,400
what does it do all that stuff and there

546
00:21:05,120 --> 00:21:09,500
are there are several components of a

547
00:21:07,400 --> 00:21:11,450
cipher suite and the first one there is

548
00:21:09,500 --> 00:21:15,140
key exchange and you're gonna see things

549
00:21:11,450 --> 00:21:17,660
like D H or RSA d HS diffie-hellman RSA

550
00:21:15,140 --> 00:21:19,430
is Rivest Shamir Adelman three dudes

551
00:21:17,660 --> 00:21:21,080
that got together to figured out this

552
00:21:19,430 --> 00:21:24,410
really cool key exchange stuff what

553
00:21:21,080 --> 00:21:26,030
diffie-hellman our two guys also and so

554
00:21:24,410 --> 00:21:29,720
those are the different key exchange

555
00:21:26,030 --> 00:21:31,190
algorithms that you would see in what

556
00:21:29,720 --> 00:21:31,550
would be one of these cipher suites all

557
00:21:31,190 --> 00:21:33,020
righty

558
00:21:31,550 --> 00:21:34,730
and then the next thing that's gonna be

559
00:21:33,020 --> 00:21:36,350
part of this is the server

560
00:21:34,730 --> 00:21:38,150
authentication mechanism you're going to

561
00:21:36,350 --> 00:21:41,090
see things like DSA the digital

562
00:21:38,150 --> 00:21:43,520
signature algorithm or you'll see RSA

563
00:21:41,090 --> 00:21:44,600
which is Rivest Shamir Adelman again and

564
00:21:43,520 --> 00:21:46,310
you can use that for server

565
00:21:44,600 --> 00:21:47,570
authentication this is the piece that I

566
00:21:46,310 --> 00:21:49,010
talked about a minute ago where it's

567
00:21:47,570 --> 00:21:51,050
like hey when I connect to your server

568
00:21:49,010 --> 00:21:54,590
do I know that I'm connecting to the

569
00:21:51,050 --> 00:21:56,810
right server right the next one is the

570
00:21:54,590 --> 00:21:58,159
bulk encryption this is what I talked

571
00:21:56,810 --> 00:22:00,980
about a minute ago as well where we're

572
00:21:58,160 --> 00:22:03,440
trying to get to the bulk encryption the

573
00:22:00,980 --> 00:22:06,050
symmetric encryption algorithm and this

574
00:22:03,440 --> 00:22:10,100
is going to be things like AES or triple

575
00:22:06,050 --> 00:22:11,389
des and triple des is is not secure but

576
00:22:10,100 --> 00:22:14,419
you'll see it but it is a form of

577
00:22:11,390 --> 00:22:15,890
symmetric encryption and then finally

578
00:22:14,420 --> 00:22:19,430
you'll see this this message

579
00:22:15,890 --> 00:22:20,900
authenticate authentication which it'll

580
00:22:19,430 --> 00:22:24,020
be things like sha the secure hash

581
00:22:20,900 --> 00:22:26,210
algorithm or md5 message digest version

582
00:22:24,020 --> 00:22:27,980
5 which can be found is also not secure

583
00:22:26,210 --> 00:22:29,630
but you'll see it out there is some

584
00:22:27,980 --> 00:22:31,460
options so the interesting thing about

585
00:22:29,630 --> 00:22:34,190
this is you see things like Triple DES

586
00:22:31,460 --> 00:22:37,370
or md5 for the bulk encryption or the

587
00:22:34,190 --> 00:22:40,160
message authentication and if you allow

588
00:22:37,370 --> 00:22:41,689
that on your server then you know what

589
00:22:40,160 --> 00:22:44,300
could you be doing in terms of a

590
00:22:41,690 --> 00:22:46,400
security risk to your web server your

591
00:22:44,300 --> 00:22:48,860
web application what you could open the

592
00:22:46,400 --> 00:22:51,670
door for is you could have a malicious

593
00:22:48,860 --> 00:22:54,229
client that says hey let's downgrade and

594
00:22:51,670 --> 00:22:56,450
instead of trying to use you know the

595
00:22:54,230 --> 00:22:59,180
really high high you know sophisticated

596
00:22:56,450 --> 00:23:02,000
encryption then why don't we use stuff

597
00:22:59,180 --> 00:23:03,530
like Triple DES and md5 for things like

598
00:23:02,000 --> 00:23:04,640
bulk encryption and Method message

599
00:23:03,530 --> 00:23:06,860
authentication and the REE

600
00:23:04,640 --> 00:23:08,030
in that a client or an attacker would

601
00:23:06,860 --> 00:23:09,290
want to do that is because then they

602
00:23:08,030 --> 00:23:11,510
could take advantage of the

603
00:23:09,290 --> 00:23:14,899
vulnerabilities that are widely known

604
00:23:11,510 --> 00:23:16,879
for those specific algorithms and so if

605
00:23:14,900 --> 00:23:19,070
you offer up that stuff you need to be

606
00:23:16,880 --> 00:23:21,290
aware that hey you're opening that door

607
00:23:19,070 --> 00:23:24,110
right that goes back to the business

608
00:23:21,290 --> 00:23:26,570
decision I talked about a second ago but

609
00:23:24,110 --> 00:23:28,969
I want to tell them to be you know to

610
00:23:26,570 --> 00:23:32,000
understand the components of what a

611
00:23:28,970 --> 00:23:33,200
cipher suite has in it and this is this

612
00:23:32,000 --> 00:23:35,570
is critical when you're talking about

613
00:23:33,200 --> 00:23:37,580
the TLS protocol itself obviously all

614
00:23:35,570 --> 00:23:39,230
right so when you see a cipher suite and

615
00:23:37,580 --> 00:23:40,520
we saw a couple of examples a second ago

616
00:23:39,230 --> 00:23:41,120
it's gonna look something like this

617
00:23:40,520 --> 00:23:44,510
right here

618
00:23:41,120 --> 00:23:46,550
TLS EC DHE that's the that's names for

619
00:23:44,510 --> 00:23:48,680
elliptic curve diffie-hellman ephemeral

620
00:23:46,550 --> 00:23:50,750
so that's the key exchange part and then

621
00:23:48,680 --> 00:23:52,250
ECDSA that one specifically is the

622
00:23:50,750 --> 00:23:54,610
elliptic curve digital signature

623
00:23:52,250 --> 00:23:57,230
algorithm that's some authentication

624
00:23:54,610 --> 00:23:58,669
algorithm and then it says with AES

625
00:23:57,230 --> 00:24:02,510
that's the advanced encryption standard

626
00:23:58,670 --> 00:24:04,610
that's the bulk encryption 256 it's 256

627
00:24:02,510 --> 00:24:07,160
bit AES encryption for the bulk

628
00:24:04,610 --> 00:24:09,500
encryption right and then GCM that's a

629
00:24:07,160 --> 00:24:12,680
mode of AES the Galois counter mode

630
00:24:09,500 --> 00:24:14,000
right and then sha 384 that's the secure

631
00:24:12,680 --> 00:24:18,890
hash algorithm that's that message

632
00:24:14,000 --> 00:24:21,470
authentication 384-bit sha all right so

633
00:24:18,890 --> 00:24:24,350
you can you can potentially imagine that

634
00:24:21,470 --> 00:24:27,380
hey that's that's one cipher suite well

635
00:24:24,350 --> 00:24:30,139
what if you had you know a different

636
00:24:27,380 --> 00:24:31,940
different you know level of sha

637
00:24:30,140 --> 00:24:34,340
encryption for example or what if you

638
00:24:31,940 --> 00:24:36,230
didn't use ECDSA what if you used RSA

639
00:24:34,340 --> 00:24:37,850
for message dumping or server

640
00:24:36,230 --> 00:24:39,380
authentication or things like that you

641
00:24:37,850 --> 00:24:40,909
can imagine there's a there's a whole

642
00:24:39,380 --> 00:24:44,270
bunch of these cipher suites that you

643
00:24:40,910 --> 00:24:46,430
may have available on your web server to

644
00:24:44,270 --> 00:24:47,870
to hand out or frankly on your browser

645
00:24:46,430 --> 00:24:50,240
to be able to say hey this is everything

646
00:24:47,870 --> 00:24:53,989
that I support so I did a little search

647
00:24:50,240 --> 00:24:55,610
on the TLS 1.2 alone cipher suites that

648
00:24:53,990 --> 00:24:57,260
are available out there and there's 41

649
00:24:55,610 --> 00:24:58,520
of them I know that's an eye chart I'm

650
00:24:57,260 --> 00:25:00,290
not saying you got to look at every

651
00:24:58,520 --> 00:25:02,750
single one of those but that's a that's

652
00:25:00,290 --> 00:25:06,200
a list of just the TLS 1.2 so let's say

653
00:25:02,750 --> 00:25:09,200
you have a web server that supports TLS

654
00:25:06,200 --> 00:25:11,060
1.2 cipher suites but maybe also TLS 1.1

655
00:25:09,200 --> 00:25:12,830
or what about 1.0 what if you're really

656
00:25:11,060 --> 00:25:13,040
going way back machine kind of stuff you

657
00:25:12,830 --> 00:25:15,199
know

658
00:25:13,040 --> 00:25:17,240
now the list of cipher suites could grow

659
00:25:15,200 --> 00:25:19,549
like crazy huge

660
00:25:17,240 --> 00:25:21,799
and and then again clients are going to

661
00:25:19,549 --> 00:25:24,559
be able to potentially downgrade some of

662
00:25:21,799 --> 00:25:26,658
those connections and then use some of

663
00:25:24,559 --> 00:25:29,090
the vulnerabilities that you know that

664
00:25:26,659 --> 00:25:30,549
would exist there all right so you just

665
00:25:29,090 --> 00:25:33,649
need to be careful if you're a web

666
00:25:30,549 --> 00:25:36,740
server admin to know what you have

667
00:25:33,649 --> 00:25:38,178
configured there all right so I want to

668
00:25:36,740 --> 00:25:40,580
talk about all that stuff with TLS 1.2

669
00:25:38,179 --> 00:25:42,200
and prior with the handshake and the

670
00:25:40,580 --> 00:25:45,020
cipher suite and all that kind of stuff

671
00:25:42,200 --> 00:25:48,620
to now lead into TLS 1.3 right all right

672
00:25:45,020 --> 00:25:50,600
so TLS 1.3 well go back to the LS 1.2

673
00:25:48,620 --> 00:25:53,029
has this there's 41 of those things

674
00:25:50,600 --> 00:25:55,428
listed tell us one not one there's even

675
00:25:53,029 --> 00:25:58,130
more does anybody know how many cipher

676
00:25:55,429 --> 00:26:03,230
Suites the TLS 1.3 protocol has defined

677
00:25:58,130 --> 00:26:05,480
by chance not everybody at once it's

678
00:26:03,230 --> 00:26:07,789
fantastic I can't handle all the

679
00:26:05,480 --> 00:26:10,130
feedback I'm just kidding hey man I know

680
00:26:07,789 --> 00:26:11,299
it's after lunch you know trying to try

681
00:26:10,130 --> 00:26:13,370
to throw in a couple of a couple of

682
00:26:11,299 --> 00:26:16,190
words all righty so you see that list

683
00:26:13,370 --> 00:26:19,820
here CLS 1.3 there's five of them so

684
00:26:16,190 --> 00:26:21,890
there's a there's a fundamental I guess

685
00:26:19,820 --> 00:26:23,178
I won't call it a debate just kind of a

686
00:26:21,890 --> 00:26:26,570
thought in the world of cryptography

687
00:26:23,179 --> 00:26:29,210
that the fewer choices you give someone

688
00:26:26,570 --> 00:26:32,510
the better right and if we can make

689
00:26:29,210 --> 00:26:34,279
these choices fewer and more secure and

690
00:26:32,510 --> 00:26:36,220
all that then it's just gonna help

691
00:26:34,279 --> 00:26:38,750
everybody out right you're you're gonna

692
00:26:36,220 --> 00:26:41,630
you're gonna not let somebody trip over

693
00:26:38,750 --> 00:26:44,360
themselves and cause problems you know

694
00:26:41,630 --> 00:26:45,799
when when maybe they didn't mean to but

695
00:26:44,360 --> 00:26:47,990
they did it inadvertently or whatever

696
00:26:45,799 --> 00:26:50,149
all right so in TLS 1.3 there's five

697
00:26:47,990 --> 00:26:51,559
cipher suites a couple of cool things

698
00:26:50,149 --> 00:26:53,059
about this is you'll notice the

699
00:26:51,559 --> 00:26:55,460
hexadecimal representation I'll talk

700
00:26:53,059 --> 00:26:58,129
about that a second ago you'll notice

701
00:26:55,460 --> 00:27:01,640
the text 1 3 right and then the first

702
00:26:58,130 --> 00:27:04,070
one is comma hex 0 1 & 0 2 3 4 & 5 and

703
00:27:01,640 --> 00:27:08,000
so the hex 1 3 at the beginning there is

704
00:27:04,070 --> 00:27:10,549
the TLS 1.3 so you'll notice here - it's

705
00:27:08,000 --> 00:27:13,159
a much shorter cipher suite it doesn't

706
00:27:10,549 --> 00:27:15,500
even have the key exchange we'll get to

707
00:27:13,159 --> 00:27:18,559
that in a second that's because the

708
00:27:15,500 --> 00:27:21,830
static RSA key exchange has now been

709
00:27:18,559 --> 00:27:23,240
completely removed and so they have said

710
00:27:21,830 --> 00:27:24,710
hey we are not going to allow that

711
00:27:23,240 --> 00:27:26,360
anymore and I'll get to a story about

712
00:27:24,710 --> 00:27:28,700
that here in a second it's gonna be a

713
00:27:26,360 --> 00:27:30,729
basically blow your mind maybe not we'll

714
00:27:28,700 --> 00:27:30,730
see

715
00:27:30,740 --> 00:27:36,649
so there's only five Cypress weeds in

716
00:27:32,659 --> 00:27:40,850
TLS 1.3 here's the handshake in in TLS

717
00:27:36,649 --> 00:27:43,189
1.3 it is a one round trip handshakes

718
00:27:40,850 --> 00:27:45,740
which means the client sends a hello and

719
00:27:43,190 --> 00:27:48,919
then it also sends the supported cipher

720
00:27:45,740 --> 00:27:51,350
Suites like it did before but then this

721
00:27:48,919 --> 00:27:53,509
is a really cool thing it guesses the

722
00:27:51,350 --> 00:27:56,600
key agreement protocol

723
00:27:53,509 --> 00:27:58,190
alrighty because the key exchange

724
00:27:56,600 --> 00:28:00,830
algorithms and the key exchange

725
00:27:58,190 --> 00:28:03,919
protocols have been significantly

726
00:28:00,830 --> 00:28:07,370
reduced and TLS 1.3 the client is now

727
00:28:03,919 --> 00:28:09,679
able to guess like hey server I think I

728
00:28:07,370 --> 00:28:11,178
know what you're thinking today you know

729
00:28:09,679 --> 00:28:12,139
if I'm gonna put some emotions on the

730
00:28:11,179 --> 00:28:14,029
client and the server

731
00:28:12,139 --> 00:28:15,918
hey server I think I know what you're

732
00:28:14,029 --> 00:28:18,470
feeling today and then in the in the

733
00:28:15,919 --> 00:28:20,629
sense of key exchange and so rather than

734
00:28:18,470 --> 00:28:22,759
me sending you my supported cipher

735
00:28:20,629 --> 00:28:24,740
Suites and then waiting on a response

736
00:28:22,759 --> 00:28:27,950
from you I think I know what you're

737
00:28:24,740 --> 00:28:29,809
gonna say right and and most of the time

738
00:28:27,950 --> 00:28:31,159
the client is right when it comes to TLS

739
00:28:29,809 --> 00:28:33,379
1.3 because there's not that many

740
00:28:31,159 --> 00:28:35,659
choices when it comes to key exchange so

741
00:28:33,379 --> 00:28:38,059
what that allows them to do is say hey

742
00:28:35,659 --> 00:28:38,539
I'm gonna send you the supported cypher

743
00:28:38,059 --> 00:28:41,000
Swedes

744
00:28:38,539 --> 00:28:43,879
I'm gonna guess which cipher suite

745
00:28:41,000 --> 00:28:46,340
you're going to choose in advance and

746
00:28:43,879 --> 00:28:48,699
based on that guess I'm gonna go ahead

747
00:28:46,340 --> 00:28:51,830
and send you what's called key share

748
00:28:48,700 --> 00:28:54,889
material and that's basically my portion

749
00:28:51,830 --> 00:28:56,899
of that key exchange information that

750
00:28:54,889 --> 00:28:58,699
gets us closer to the symmetric key that

751
00:28:56,899 --> 00:29:00,889
we're trying to get to to begin with

752
00:28:58,700 --> 00:29:03,679
right excuse me

753
00:29:00,889 --> 00:29:06,258
and so if the client is right if the

754
00:29:03,679 --> 00:29:08,600
client guesses correctly then what

755
00:29:06,259 --> 00:29:10,730
happens then the client is like hey

756
00:29:08,600 --> 00:29:13,549
we're rockin and rollin like really

757
00:29:10,730 --> 00:29:15,289
really quick here right so the server is

758
00:29:13,549 --> 00:29:17,509
gonna say okay client I got your client

759
00:29:15,289 --> 00:29:19,970
hello I know what cipher suites you

760
00:29:17,509 --> 00:29:21,320
support cuz you told me and you've

761
00:29:19,970 --> 00:29:23,779
already sent me some key exchange

762
00:29:21,320 --> 00:29:26,360
material now the server saying hey wait

763
00:29:23,779 --> 00:29:28,460
a minute here client I still get to make

764
00:29:26,360 --> 00:29:30,379
the choice you'll remember that I still

765
00:29:28,460 --> 00:29:32,000
get to make the choice as the server so

766
00:29:30,379 --> 00:29:34,340
the server says I'm still gonna choose

767
00:29:32,000 --> 00:29:36,500
what cipher suite we're doing but if you

768
00:29:34,340 --> 00:29:38,480
guessed correctly good on you and I've

769
00:29:36,500 --> 00:29:39,919
already got your key share the material

770
00:29:38,480 --> 00:29:42,200
so I can go ahead and start to generate

771
00:29:39,919 --> 00:29:42,659
the symmetric key that we're going to

772
00:29:42,200 --> 00:29:44,369
use

773
00:29:42,659 --> 00:29:45,690
for the bulk encryption and we can go

774
00:29:44,369 --> 00:29:48,090
ahead and get this show on the road

775
00:29:45,690 --> 00:29:49,679
right no more not anymore these round

776
00:29:48,090 --> 00:29:51,899
trip back and forth kind of stuff

777
00:29:49,679 --> 00:29:54,690
alrighty so then the server sends back

778
00:29:51,899 --> 00:29:57,119
its hello the key agreement protocol

779
00:29:54,690 --> 00:29:59,609
that it actually chose and then its

780
00:29:57,119 --> 00:30:02,009
portion of the key share and then the

781
00:29:59,609 --> 00:30:04,769
server finished message and then right

782
00:30:02,009 --> 00:30:06,659
then the the key has already been

783
00:30:04,769 --> 00:30:09,960
established so after that one round trip

784
00:30:06,659 --> 00:30:11,909
boom the handshake is basically over the

785
00:30:09,960 --> 00:30:13,409
the client still needs to check the

786
00:30:11,909 --> 00:30:17,580
certificate to make sure that the server

787
00:30:13,409 --> 00:30:19,169
is who it says it is but then it has

788
00:30:17,580 --> 00:30:21,299
generated the keys based on now the

789
00:30:19,169 --> 00:30:24,330
server's key share and they're talking

790
00:30:21,299 --> 00:30:26,249
supremely quicker so what used to be a

791
00:30:24,330 --> 00:30:27,359
total of yo member that last one I mean

792
00:30:26,249 --> 00:30:29,639
there's like eight or ten or whatever

793
00:30:27,359 --> 00:30:31,799
steps there's all these crazy steps well

794
00:30:29,639 --> 00:30:34,199
now there's like three and so that's

795
00:30:31,799 --> 00:30:35,549
good because of the Ricky Bobby speed

796
00:30:34,200 --> 00:30:37,249
right that's what we're trying to get to

797
00:30:35,549 --> 00:30:41,369
we're trying to get to speed here

798
00:30:37,249 --> 00:30:44,399
because all of us today we just cannot

799
00:30:41,369 --> 00:30:47,428
give up those extra 50 microseconds or

800
00:30:44,399 --> 00:30:48,779
50 milliseconds of time you know we

801
00:30:47,429 --> 00:30:50,909
booked our we booked our day pretty

802
00:30:48,779 --> 00:30:54,450
tight right and so when I click on that

803
00:30:50,909 --> 00:30:57,239
on my on my phone and I click on show me

804
00:30:54,450 --> 00:30:59,849
con-com I want it I need I need some

805
00:30:57,239 --> 00:31:03,479
show me con right or I need some Amazon

806
00:30:59,849 --> 00:31:05,759
like I need it immediately and so we we

807
00:31:03,479 --> 00:31:07,379
can't wait and so that's what the IETF

808
00:31:05,759 --> 00:31:09,169
has tried to do here and frankly has

809
00:31:07,379 --> 00:31:11,759
done with TLS one up three is they have

810
00:31:09,169 --> 00:31:13,320
significantly shortened the handshake

811
00:31:11,759 --> 00:31:15,029
and they're like you're gonna get to

812
00:31:13,320 --> 00:31:16,109
your encrypted data which basically

813
00:31:15,029 --> 00:31:18,539
means you're gonna get your website

814
00:31:16,109 --> 00:31:20,460
loaded up supremely faster it's like

815
00:31:18,539 --> 00:31:22,499
twice as fast now there are other

816
00:31:20,460 --> 00:31:24,809
factors involved in this crazy thing we

817
00:31:22,499 --> 00:31:26,399
call the internet with DNS lookups and

818
00:31:24,809 --> 00:31:28,590
other things that could muddy the waters

819
00:31:26,399 --> 00:31:31,049
but in terms of the TLS protocol itself

820
00:31:28,590 --> 00:31:33,228
it's not going to be the bottleneck here

821
00:31:31,049 --> 00:31:37,049
anymore in terms of slowing things down

822
00:31:33,229 --> 00:31:40,080
alrighty so that is the TLS 1.3

823
00:31:37,049 --> 00:31:41,609
handshake okay the next thing I was

824
00:31:40,080 --> 00:31:43,199
going to go over are some notable

825
00:31:41,609 --> 00:31:46,049
changes other than just the handshake

826
00:31:43,200 --> 00:31:48,690
itself the TLS 1.3 has and this is not a

827
00:31:46,049 --> 00:31:52,440
this is not an exhaustive list but this

828
00:31:48,690 --> 00:31:53,910
is a decent interesting list the the

829
00:31:52,440 --> 00:31:56,610
first one off but there's remove support

830
00:31:53,910 --> 00:31:58,410
for weak encryption there are all kinds

831
00:31:56,610 --> 00:32:00,780
of details if you want to go out there

832
00:31:58,410 --> 00:32:01,950
and read the RFC it's 84 46 by the way

833
00:32:00,780 --> 00:32:05,760
and I think I mentioned that here in a

834
00:32:01,950 --> 00:32:07,740
second it's the new TLS 1.3 RFC but

835
00:32:05,760 --> 00:32:12,150
there's a bunch of details on old

836
00:32:07,740 --> 00:32:14,940
encryption mechanisms and algorithms and

837
00:32:12,150 --> 00:32:18,720
all that that have been deprecated s of

838
00:32:14,940 --> 00:32:21,210
TLS 1.3 the so the support for those

839
00:32:18,720 --> 00:32:23,160
have been removed which is good on one

840
00:32:21,210 --> 00:32:25,710
hand but as soon as you start removing

841
00:32:23,160 --> 00:32:27,990
support for stuff then the legacy

842
00:32:25,710 --> 00:32:29,580
applications all the old stuff people

843
00:32:27,990 --> 00:32:32,010
are gonna start screaming and freaking

844
00:32:29,580 --> 00:32:34,860
out and saying hey how dare you how dare

845
00:32:32,010 --> 00:32:37,980
you kill my internet explorer a you know

846
00:32:34,860 --> 00:32:40,709
experience right and to which I would

847
00:32:37,980 --> 00:32:43,920
say once you you know welcome to like

848
00:32:40,710 --> 00:32:46,890
1994 and get off ie eight right that

849
00:32:43,920 --> 00:32:50,130
kind of stuff so so anyway but weak

850
00:32:46,890 --> 00:32:53,580
encryption you know that it's basic

851
00:32:50,130 --> 00:32:55,290
point has been removed zero round-trip

852
00:32:53,580 --> 00:32:56,310
time resumption was added we'll get to

853
00:32:55,290 --> 00:32:58,020
that in here just second but that's

854
00:32:56,310 --> 00:32:59,250
that's really cool because we just

855
00:32:58,020 --> 00:33:01,860
talked about the handshake in a second

856
00:32:59,250 --> 00:33:03,630
ago that takes one round-trip to get to

857
00:33:01,860 --> 00:33:05,520
where you're trying to get to go now

858
00:33:03,630 --> 00:33:07,620
we're doing even better than that we got

859
00:33:05,520 --> 00:33:09,510
a zero round-trip but that's only for

860
00:33:07,620 --> 00:33:12,030
session resumption and I'll talk about

861
00:33:09,510 --> 00:33:13,830
that here in a second everything after

862
00:33:12,030 --> 00:33:16,470
the server hello is now encrypted if you

863
00:33:13,830 --> 00:33:18,120
go back to the TLS 1.2 and prior then

864
00:33:16,470 --> 00:33:20,580
nothing is really encrypted toward the

865
00:33:18,120 --> 00:33:22,889
until the basically the end of the TLS

866
00:33:20,580 --> 00:33:24,990
handshake and so a lot of that initial

867
00:33:22,890 --> 00:33:27,360
handshake setup and all that stuff is

868
00:33:24,990 --> 00:33:28,530
still in the clear which potentially

869
00:33:27,360 --> 00:33:30,120
could give some attackers the

870
00:33:28,530 --> 00:33:33,570
availability to get in there and look at

871
00:33:30,120 --> 00:33:35,550
stuff and an attack stuff now as soon as

872
00:33:33,570 --> 00:33:38,399
the server hello goes back everything's

873
00:33:35,550 --> 00:33:40,440
encrypted so that gets back to the

874
00:33:38,400 --> 00:33:42,210
security the paul blart mall cop two

875
00:33:40,440 --> 00:33:44,160
things that's sent a second ago if y'all

876
00:33:42,210 --> 00:33:45,900
remember nothing from this talk remember

877
00:33:44,160 --> 00:33:47,630
Ricky Bobby and paul blart and I think

878
00:33:45,900 --> 00:33:50,190
you'll be like yes I'm a cryptographic

879
00:33:47,630 --> 00:33:51,330
expert now I remember I remember that

880
00:33:50,190 --> 00:33:53,880
it's all coming back to me

881
00:33:51,330 --> 00:33:55,740
right all righty perfect forward secrecy

882
00:33:53,880 --> 00:33:58,470
is mandatory I'll talk about that here

883
00:33:55,740 --> 00:34:00,090
in a second but but yeah but perfect

884
00:33:58,470 --> 00:34:02,160
fortune report secrecy is mandatory

885
00:34:00,090 --> 00:34:05,310
basically what that means is the RSA

886
00:34:02,160 --> 00:34:07,200
algorithm for key exchange is no longer

887
00:34:05,310 --> 00:34:08,549
able to be used alrighty I'll go

888
00:34:07,200 --> 00:34:12,329
a little example of that here in a

889
00:34:08,550 --> 00:34:15,419
second all bulk are all supported bulk

890
00:34:12,329 --> 00:34:17,429
encryption ciphers are a EAD

891
00:34:15,418 --> 00:34:21,629
authenticated encryption with Associated

892
00:34:17,429 --> 00:34:23,280
data and basically aad ciphers excuse me

893
00:34:21,629 --> 00:34:25,710
there's there's essentially a built-in

894
00:34:23,280 --> 00:34:27,540
authentication that allows for integrity

895
00:34:25,710 --> 00:34:29,280
checks when the when the encryption

896
00:34:27,540 --> 00:34:32,460
itself happens on that bulk encryption

897
00:34:29,280 --> 00:34:35,790
it's just a more secure way of encrypt

898
00:34:32,460 --> 00:34:37,679
of bulk encrypting your data so those

899
00:34:35,790 --> 00:34:39,000
are some of the notable changes again

900
00:34:37,679 --> 00:34:41,220
that's not an exhaustive list at all

901
00:34:39,000 --> 00:34:42,418
there's a whole bunch more but those are

902
00:34:41,219 --> 00:34:44,158
some those are some interesting ones

903
00:34:42,418 --> 00:34:47,399
already I want to talk about the zero

904
00:34:44,159 --> 00:34:49,290
round-trip time resumption for a second

905
00:34:47,399 --> 00:34:50,668
I've seen statistics you know when

906
00:34:49,290 --> 00:34:52,619
you've when you see statistics on the

907
00:34:50,668 --> 00:34:55,138
internet who knows if they're right or

908
00:34:52,619 --> 00:34:58,109
not but we'll go with it I saw websites

909
00:34:55,139 --> 00:35:00,450
say that about 40% of the user

910
00:34:58,109 --> 00:35:03,270
experience when you go to a website is a

911
00:35:00,450 --> 00:35:05,848
session resumption so again this is hey

912
00:35:03,270 --> 00:35:09,570
I'm you know I've been in Amazon combine

913
00:35:05,849 --> 00:35:11,700
my stuff and and then I got off of there

914
00:35:09,570 --> 00:35:12,900
and then hey now I've now remembered I

915
00:35:11,700 --> 00:35:14,910
got to go get another thing on

916
00:35:12,900 --> 00:35:17,160
amazon.com so I got to go back right and

917
00:35:14,910 --> 00:35:19,710
so that would be a resumption of the

918
00:35:17,160 --> 00:35:22,529
previous session that you had so about

919
00:35:19,710 --> 00:35:25,589
40% ish of connections are this session

920
00:35:22,530 --> 00:35:28,829
resumption what happens is the server

921
00:35:25,589 --> 00:35:31,078
can store a ticket or the clients that

922
00:35:28,829 --> 00:35:32,550
actually could as well there's different

923
00:35:31,079 --> 00:35:34,170
ways to implement this but basically you

924
00:35:32,550 --> 00:35:37,380
could establish the session ID or a

925
00:35:34,170 --> 00:35:39,329
session ticket that is stored from the

926
00:35:37,380 --> 00:35:41,780
previous session and then you can use

927
00:35:39,329 --> 00:35:44,819
that and so when the client sends its

928
00:35:41,780 --> 00:35:47,280
HTTP request its initial HTTP request

929
00:35:44,819 --> 00:35:49,680
back to the server to now resume that

930
00:35:47,280 --> 00:35:51,390
session it's gonna say hey client hello

931
00:35:49,680 --> 00:35:53,460
which goes back to the handshake we

932
00:35:51,390 --> 00:35:55,470
talked about a little bit ago it's gonna

933
00:35:53,460 --> 00:35:58,800
send that client hello but effectively

934
00:35:55,470 --> 00:36:03,180
it's gonna say hey hello and here is my

935
00:35:58,800 --> 00:36:04,589
session ID and remember me I'm John were

936
00:36:03,180 --> 00:36:06,359
the ones that talked a couple of minutes

937
00:36:04,589 --> 00:36:08,220
ago and I bought all that stuff you know

938
00:36:06,359 --> 00:36:09,869
and the server's gonna be like oh yeah I

939
00:36:08,220 --> 00:36:12,598
remember that guy you know he needs to

940
00:36:09,869 --> 00:36:14,819
buy more stuff and I'm gonna sarin

941
00:36:12,599 --> 00:36:16,680
here's my hello here's that ID that we

942
00:36:14,819 --> 00:36:18,689
talked about a second ago and then I'm

943
00:36:16,680 --> 00:36:21,178
gonna be able to embed in that

944
00:36:18,689 --> 00:36:23,999
some of the cryptographic material that

945
00:36:21,179 --> 00:36:26,729
now you can go ahead and use and we can

946
00:36:23,999 --> 00:36:29,879
now both establish that shared key again

947
00:36:26,729 --> 00:36:32,729
and so with the initial client hello I

948
00:36:29,880 --> 00:36:34,920
can go ahead and send my first HTTP GET

949
00:36:32,729 --> 00:36:38,038
request or whatever whatever method it

950
00:36:34,920 --> 00:36:40,199
is right and so there is no roundtrip at

951
00:36:38,039 --> 00:36:42,269
all it's like let's get right to it

952
00:36:40,199 --> 00:36:44,670
I mean immediately right so that's the

953
00:36:42,269 --> 00:36:47,848
that's the essence of zero round-trip

954
00:36:44,670 --> 00:36:50,309
time so the server then can can receive

955
00:36:47,849 --> 00:36:52,769
that message receive that information it

956
00:36:50,309 --> 00:36:55,829
can reconstruct the encryption from the

957
00:36:52,769 --> 00:36:58,439
previous session it doesn't use the

958
00:36:55,829 --> 00:37:00,059
exact same encryption keys and all that

959
00:36:58,439 --> 00:37:03,598
from the previous session it uses that

960
00:37:00,059 --> 00:37:04,739
material to then create a new encryption

961
00:37:03,599 --> 00:37:07,170
key

962
00:37:04,739 --> 00:37:09,089
but since the client has sent that they

963
00:37:07,170 --> 00:37:10,769
both understand hey this is what we're

964
00:37:09,089 --> 00:37:12,328
going to use as kind of the entry point

965
00:37:10,769 --> 00:37:15,089
into now what's going to be the new

966
00:37:12,329 --> 00:37:16,559
session key so anyway so it's a really

967
00:37:15,089 --> 00:37:18,989
cool thing and again you talk about

968
00:37:16,559 --> 00:37:20,069
speed this really speeds things up

969
00:37:18,989 --> 00:37:23,009
because you don't even have to have a

970
00:37:20,069 --> 00:37:25,049
round trip at all to get things started

971
00:37:23,009 --> 00:37:27,569
alrighty one thing though in the RFC

972
00:37:25,049 --> 00:37:30,929
this is a numbness is a second ago RFC

973
00:37:27,569 --> 00:37:33,239
eighty-four 46 that's the TLS 1.3 RFC

974
00:37:30,929 --> 00:37:35,099
which by the way I meant to mention this

975
00:37:33,239 --> 00:37:37,349
a second ago this thing went through

976
00:37:35,099 --> 00:37:40,920
like I think it's I think it's like 30

977
00:37:37,349 --> 00:37:42,929
drafts or almost 30 drafts so I mean the

978
00:37:40,920 --> 00:37:44,849
so TLS one that 3 actually has been

979
00:37:42,929 --> 00:37:47,309
around in draft form form it for

980
00:37:44,849 --> 00:37:50,099
actually several years now but it just

981
00:37:47,309 --> 00:37:52,259
got codify dit just got finalized but I

982
00:37:50,099 --> 00:37:54,539
think I think it was draft 30 was the

983
00:37:52,259 --> 00:37:55,859
actual final version don't quote me on

984
00:37:54,539 --> 00:37:57,299
that it may have been in the high 20s

985
00:37:55,859 --> 00:37:58,410
but it was there was a lot of drafts

986
00:37:57,299 --> 00:37:59,819
that that went through this thing

987
00:37:58,410 --> 00:38:01,678
alright but if you dig through the

988
00:37:59,819 --> 00:38:04,049
subsections and the appendices those

989
00:38:01,679 --> 00:38:07,499
places that we all love to go when we're

990
00:38:04,049 --> 00:38:10,459
reading our RFC's then you can go to

991
00:38:07,499 --> 00:38:12,808
appendix e dot 5 and you'll notice that

992
00:38:10,459 --> 00:38:15,629
replayable 0 round-trip time data

993
00:38:12,809 --> 00:38:18,449
presents a number of security threats to

994
00:38:15,630 --> 00:38:19,890
TLS using applications and it's like now

995
00:38:18,449 --> 00:38:21,239
wait a minute you know we're supposed to

996
00:38:19,890 --> 00:38:24,359
be secure were supposed to be paul blart

997
00:38:21,239 --> 00:38:25,650
up in this thing right and and it says

998
00:38:24,359 --> 00:38:27,529
unless those applications are

999
00:38:25,650 --> 00:38:31,730
specifically engineered to

1000
00:38:27,530 --> 00:38:33,740
safe under replay and then ultimately it

1001
00:38:31,730 --> 00:38:35,750
says servers have the responsibility to

1002
00:38:33,740 --> 00:38:37,700
protect themselves against attacking

1003
00:38:35,750 --> 00:38:39,820
against the tax employing zero

1004
00:38:37,700 --> 00:38:42,020
round-trip time data replication so

1005
00:38:39,820 --> 00:38:44,270
essentially what could happen is this

1006
00:38:42,020 --> 00:38:46,250
you can have a client that sends that

1007
00:38:44,270 --> 00:38:47,630
zero round-trip time you know request

1008
00:38:46,250 --> 00:38:49,160
and it's got the the cryptographic

1009
00:38:47,630 --> 00:38:51,320
material from the previous session

1010
00:38:49,160 --> 00:38:53,029
whatever if some of some attacker were

1011
00:38:51,320 --> 00:38:55,100
able to get ahold of that then they

1012
00:38:53,030 --> 00:38:56,570
could send essentially that same zero

1013
00:38:55,100 --> 00:38:59,150
round-trip time that just that initial

1014
00:38:56,570 --> 00:39:00,950
request into the server and then the

1015
00:38:59,150 --> 00:39:04,160
server would take action on that because

1016
00:39:00,950 --> 00:39:05,390
it doesn't you know it's it's it it has

1017
00:39:04,160 --> 00:39:06,980
the information that needs to then

1018
00:39:05,390 --> 00:39:08,299
create the keys and all that stuff but

1019
00:39:06,980 --> 00:39:11,840
it's going to go ahead and process that

1020
00:39:08,300 --> 00:39:13,790
first HTTP request so whenever it does

1021
00:39:11,840 --> 00:39:17,030
that if the attacker is like hey let me

1022
00:39:13,790 --> 00:39:19,880
send that also then then the server

1023
00:39:17,030 --> 00:39:22,940
could theoretically take action on two

1024
00:39:19,880 --> 00:39:25,040
identical HTTP you know gits or posts or

1025
00:39:22,940 --> 00:39:27,310
deletes or whatever method you know is

1026
00:39:25,040 --> 00:39:29,509
being sent in there right so I did some

1027
00:39:27,310 --> 00:39:31,820
distant looking around one company

1028
00:39:29,510 --> 00:39:33,650
CloudFlare what they've done is they've

1029
00:39:31,820 --> 00:39:35,870
said hey you know this is on the server

1030
00:39:33,650 --> 00:39:37,310
side on the web server side for us to

1031
00:39:35,870 --> 00:39:41,120
make sure that we process this stuff

1032
00:39:37,310 --> 00:39:42,590
properly and so so while this could be a

1033
00:39:41,120 --> 00:39:45,920
potential problem we need to have

1034
00:39:42,590 --> 00:39:47,690
safeguards on our web application which

1035
00:39:45,920 --> 00:39:49,460
this this goes back to saying hey

1036
00:39:47,690 --> 00:39:51,140
whenever you create web applications you

1037
00:39:49,460 --> 00:39:53,510
need to create secure web applications

1038
00:39:51,140 --> 00:39:57,109
right have to have secure coding

1039
00:39:53,510 --> 00:39:59,960
practices and all that stuff well Clara

1040
00:39:57,110 --> 00:40:02,420
what CloudFlare has done is they've said

1041
00:39:59,960 --> 00:40:04,310
hey we only support 0r on chip time for

1042
00:40:02,420 --> 00:40:07,550
get requests I used to be method have

1043
00:40:04,310 --> 00:40:11,509
yet with no query parameter so it's a

1044
00:40:07,550 --> 00:40:13,190
very very you know niche targeted thing

1045
00:40:11,510 --> 00:40:13,700
that they allowed is zero round-trip

1046
00:40:13,190 --> 00:40:15,710
time

1047
00:40:13,700 --> 00:40:17,720
request to even do right so if you're

1048
00:40:15,710 --> 00:40:20,420
trying to do an HTTP POST or delete or

1049
00:40:17,720 --> 00:40:23,120
patch or any of those things then the

1050
00:40:20,420 --> 00:40:26,420
CloudFlare server for example is not

1051
00:40:23,120 --> 00:40:29,089
going to get that what they what other

1052
00:40:26,420 --> 00:40:30,920
people would say or basically a good a

1053
00:40:29,090 --> 00:40:32,420
good thing to remember here for zero

1054
00:40:30,920 --> 00:40:33,710
round-trip time resumption if you're

1055
00:40:32,420 --> 00:40:37,809
going to allow that or not on your web

1056
00:40:33,710 --> 00:40:40,269
server is this these these item potent

1057
00:40:37,809 --> 00:40:42,069
actions idempotent is where effectively

1058
00:40:40,269 --> 00:40:44,229
the state of the server does not change

1059
00:40:42,069 --> 00:40:46,209
so like if you were to if you're to say

1060
00:40:44,229 --> 00:40:47,709
give me your home page you know and then

1061
00:40:46,209 --> 00:40:48,999
I was going to request that again and

1062
00:40:47,709 --> 00:40:50,919
the state of the server is not gonna

1063
00:40:48,999 --> 00:40:53,169
change on that it's not Lea it's not

1064
00:40:50,920 --> 00:40:55,539
like you're deleting stuff or adding you

1065
00:40:53,170 --> 00:40:58,839
know things to a table or a database or

1066
00:40:55,539 --> 00:41:01,359
whatever basically the idea here or the

1067
00:40:58,839 --> 00:41:04,029
the overall the overall advice would be

1068
00:41:01,359 --> 00:41:07,449
disallow zero round-trip time resumption

1069
00:41:04,029 --> 00:41:09,489
for any non idempotent actions or

1070
00:41:07,449 --> 00:41:11,380
actions that can change things on the

1071
00:41:09,489 --> 00:41:13,749
server so if junk can be changed on the

1072
00:41:11,380 --> 00:41:15,549
server you know with an action then

1073
00:41:13,749 --> 00:41:17,109
don't allow this year on two round-trip

1074
00:41:15,549 --> 00:41:21,489
time resumption so while this is a

1075
00:41:17,109 --> 00:41:22,328
really cool feature of TLS 1.3 proceed

1076
00:41:21,489 --> 00:41:25,539
with caution

1077
00:41:22,329 --> 00:41:27,459
read appendix 8.5 and understand hey you

1078
00:41:25,539 --> 00:41:29,739
know not not everything is just

1079
00:41:27,459 --> 00:41:32,709
completely without its security issues

1080
00:41:29,739 --> 00:41:34,599
all right so that's the zero around zero

1081
00:41:32,709 --> 00:41:36,009
round-trip time the next thing I was

1082
00:41:34,599 --> 00:41:38,349
going to talk about is this idea of

1083
00:41:36,009 --> 00:41:39,640
perfect forward secrecy we talked about

1084
00:41:38,349 --> 00:41:41,369
that a second ago perfect forward

1085
00:41:39,640 --> 00:41:44,890
secrets I firs are now completely

1086
00:41:41,369 --> 00:41:46,179
eliminated until s 1.3 so I wanted to go

1087
00:41:44,890 --> 00:41:48,729
over quickly what perfect forward

1088
00:41:46,179 --> 00:41:51,969
secrecy is many of you may already know

1089
00:41:48,729 --> 00:41:54,489
this but just in case you don't back in

1090
00:41:51,969 --> 00:41:57,400
the day if you're using RSA as your as

1091
00:41:54,489 --> 00:41:58,959
your key exchange algorithm then what

1092
00:41:57,400 --> 00:42:01,150
would happen is your server would have

1093
00:41:58,959 --> 00:42:03,098
its private key and then it would hand

1094
00:42:01,150 --> 00:42:06,219
out its public key via the certificate

1095
00:42:03,099 --> 00:42:07,420
that it sends back to the client and it

1096
00:42:06,219 --> 00:42:09,429
would share the public key with the

1097
00:42:07,420 --> 00:42:11,289
whole world but that private key that

1098
00:42:09,429 --> 00:42:13,929
hangs out on the server that is a super

1099
00:42:11,289 --> 00:42:15,969
secure thing that needs to not be shared

1100
00:42:13,929 --> 00:42:20,410
with anybody right so here's what would

1101
00:42:15,969 --> 00:42:22,839
happen is bad guys would go and they

1102
00:42:20,410 --> 00:42:26,410
would intercept or capture encrypted

1103
00:42:22,839 --> 00:42:27,578
data between a client and a server you

1104
00:42:26,410 --> 00:42:31,598
know with that with that communication

1105
00:42:27,579 --> 00:42:33,880
having been you know begun by the RSA

1106
00:42:31,599 --> 00:42:35,529
key exchange and ultimately again

1107
00:42:33,880 --> 00:42:37,179
ultimately that key exchange is going to

1108
00:42:35,529 --> 00:42:39,039
land you on that bulk encryption so

1109
00:42:37,179 --> 00:42:41,619
maybe they're using AES as their bulk

1110
00:42:39,039 --> 00:42:45,219
encryption but RSA is what exchanged the

1111
00:42:41,619 --> 00:42:47,229
keys to get to the AES encryption you

1112
00:42:45,219 --> 00:42:49,580
know capability alright so a bad guy

1113
00:42:47,229 --> 00:42:51,259
captures all this AES encrypted data

1114
00:42:49,580 --> 00:42:54,529
and he just hangs on to it he hangs on

1115
00:42:51,260 --> 00:42:56,360
to it for days and days and months and

1116
00:42:54,530 --> 00:42:58,670
years and whatever but he knows it's

1117
00:42:56,360 --> 00:43:01,180
between these two people that are super

1118
00:42:58,670 --> 00:43:05,210
interesting people and he's like one day

1119
00:43:01,180 --> 00:43:08,359
one day if I could go gets that's that

1120
00:43:05,210 --> 00:43:12,110
private key off of that web server then

1121
00:43:08,360 --> 00:43:15,650
I could you know frankly very easily

1122
00:43:12,110 --> 00:43:17,630
take that private key and it creates the

1123
00:43:15,650 --> 00:43:19,370
symmetric key that was then used to

1124
00:43:17,630 --> 00:43:21,470
encrypt all that data that I got sitting

1125
00:43:19,370 --> 00:43:22,970
back here on my you know hard drive that

1126
00:43:21,470 --> 00:43:24,709
I just been storing all this stuff on

1127
00:43:22,970 --> 00:43:27,169
right and so that's exactly what would

1128
00:43:24,710 --> 00:43:29,060
happen so the bad guy steals the private

1129
00:43:27,170 --> 00:43:30,440
key you may ask yourself well how in the

1130
00:43:29,060 --> 00:43:32,570
world is someone gonna steal a private

1131
00:43:30,440 --> 00:43:34,010
key well this is a security conference

1132
00:43:32,570 --> 00:43:35,330
right so maybe you don't ask yourself

1133
00:43:34,010 --> 00:43:38,930
that maybe you're like yeah it totally

1134
00:43:35,330 --> 00:43:40,819
happens right and frankly I mean there I

1135
00:43:38,930 --> 00:43:42,290
mean there could be even less than

1136
00:43:40,820 --> 00:43:43,970
malicious reasons there could be like

1137
00:43:42,290 --> 00:43:45,770
court subpoenas or stuff like that that

1138
00:43:43,970 --> 00:43:48,259
could make you give up you know whatever

1139
00:43:45,770 --> 00:43:50,060
so for whatever reason the bad guy gets

1140
00:43:48,260 --> 00:43:52,610
ahold of the server's private key and

1141
00:43:50,060 --> 00:43:54,440
then it's a fairly trivial exercise to

1142
00:43:52,610 --> 00:43:56,270
say okay now I got your private key I'm

1143
00:43:54,440 --> 00:43:58,070
gonna generate the symmetric key that

1144
00:43:56,270 --> 00:44:00,350
was used to encrypt all of that a es

1145
00:43:58,070 --> 00:44:03,040
traffic and I've got it all stored over

1146
00:44:00,350 --> 00:44:05,690
here I'll run the decryption you know

1147
00:44:03,040 --> 00:44:07,940
routines on that traffic and now I have

1148
00:44:05,690 --> 00:44:09,800
everything that I had captured from

1149
00:44:07,940 --> 00:44:12,590
weeks and months and years prior so now

1150
00:44:09,800 --> 00:44:15,170
I have everything so that's not a good

1151
00:44:12,590 --> 00:44:18,170
thing all righty so he uses that key to

1152
00:44:15,170 --> 00:44:22,070
decrypt everything all right the reason

1153
00:44:18,170 --> 00:44:24,530
that perfect forward secrecy is mandated

1154
00:44:22,070 --> 00:44:27,560
in TLS 1.3 is perfect for word secret

1155
00:44:24,530 --> 00:44:31,070
ciphers do not rely on the server's

1156
00:44:27,560 --> 00:44:34,360
private key for for the bulk encryption

1157
00:44:31,070 --> 00:44:37,220
you know capability there is still the

1158
00:44:34,360 --> 00:44:39,200
potentially the RSA that's encryption

1159
00:44:37,220 --> 00:44:41,240
that you use to identify the server as

1160
00:44:39,200 --> 00:44:43,009
the correct server that's your that

1161
00:44:41,240 --> 00:44:45,740
you're connecting to but for the actual

1162
00:44:43,010 --> 00:44:46,640
bulk encryption key or the key exchange

1163
00:44:45,740 --> 00:44:49,009
that gets you down to the bulk

1164
00:44:46,640 --> 00:44:51,109
encryption perfect forward ciphers do

1165
00:44:49,010 --> 00:44:54,410
not rely on the server's private key

1166
00:44:51,110 --> 00:44:55,320
this is this is done most typically the

1167
00:44:54,410 --> 00:44:57,540
the diff

1168
00:44:55,320 --> 00:44:59,460
Hellman key exchange that's that does

1169
00:44:57,540 --> 00:45:03,240
not require the server private key at

1170
00:44:59,460 --> 00:45:06,720
all alrighty so the one question that

1171
00:45:03,240 --> 00:45:08,700
some may ask is why would this be a

1172
00:45:06,720 --> 00:45:12,029
problem you know does anybody in here

1173
00:45:08,700 --> 00:45:19,439
know why this may be an issue or have a

1174
00:45:12,030 --> 00:45:20,930
have a thought yeah yeah okay yeah like

1175
00:45:19,440 --> 00:45:24,450
a DLP like a day loss prevention

1176
00:45:20,930 --> 00:45:27,629
security device yep TLS inspection yeah

1177
00:45:24,450 --> 00:45:29,189
any other thoughts good to go yeah

1178
00:45:27,630 --> 00:45:31,770
there's a bunch of companies out there

1179
00:45:29,190 --> 00:45:33,090
you guys may be among them that say hey

1180
00:45:31,770 --> 00:45:35,700
I've got all these really cool security

1181
00:45:33,090 --> 00:45:37,020
devices like a DLP or maybe you know

1182
00:45:35,700 --> 00:45:39,450
some other some other really cool

1183
00:45:37,020 --> 00:45:41,880
security device some kind of you know

1184
00:45:39,450 --> 00:45:43,649
anti-malware something or whatever and

1185
00:45:41,880 --> 00:45:45,150
in order for those things to do what

1186
00:45:43,650 --> 00:45:47,640
they need to do they can't read

1187
00:45:45,150 --> 00:45:49,920
encrypted traffic right so the traffic

1188
00:45:47,640 --> 00:45:51,660
has got to be decrypted in order for

1189
00:45:49,920 --> 00:45:53,940
those things to do what they got to do

1190
00:45:51,660 --> 00:45:56,910
well how are we gonna decrease that

1191
00:45:53,940 --> 00:45:58,470
traffic and typically what companies

1192
00:45:56,910 --> 00:46:00,299
would do is they would say hey for the

1193
00:45:58,470 --> 00:46:02,009
DLP device or the other you know

1194
00:46:00,300 --> 00:46:03,780
whatever anti-malware device or whatever

1195
00:46:02,010 --> 00:46:06,540
it is I'm just going to share that

1196
00:46:03,780 --> 00:46:08,940
service private key on with that trusted

1197
00:46:06,540 --> 00:46:11,100
device and then as traffic flows across

1198
00:46:08,940 --> 00:46:14,100
it's gonna be able to decrypt as well

1199
00:46:11,100 --> 00:46:15,630
right and so everybody's happy but

1200
00:46:14,100 --> 00:46:16,920
you're sharing your keys you know but

1201
00:46:15,630 --> 00:46:20,640
you're only sharing your keys with like

1202
00:46:16,920 --> 00:46:23,130
trusted peeps right well now you can't

1203
00:46:20,640 --> 00:46:25,529
share keys because this this type of

1204
00:46:23,130 --> 00:46:27,720
encryption doesn't rely on the server

1205
00:46:25,530 --> 00:46:29,490
private key so some people are freaking

1206
00:46:27,720 --> 00:46:32,189
out over this here's a here's an email

1207
00:46:29,490 --> 00:46:35,580
that this guy sent to the internet

1208
00:46:32,190 --> 00:46:38,130
Engineering Task Force working group for

1209
00:46:35,580 --> 00:46:40,770
TLS 1.3 and I'll read this to you really

1210
00:46:38,130 --> 00:46:43,170
quick I know it's no it's the top part I

1211
00:46:40,770 --> 00:46:45,330
guess is some small letters alright he

1212
00:46:43,170 --> 00:46:48,030
said hey my name is Andrew Kennedy and I

1213
00:46:45,330 --> 00:46:49,710
work at bits the technology policy

1214
00:46:48,030 --> 00:46:51,690
division of the Financial Services

1215
00:46:49,710 --> 00:46:54,030
Roundtable this is FS round table dot

1216
00:46:51,690 --> 00:46:56,130
org slash bits my organization

1217
00:46:54,030 --> 00:46:58,770
represents approximately 100 of the top

1218
00:46:56,130 --> 00:47:01,140
150 us-based financial services

1219
00:46:58,770 --> 00:47:03,270
companies including banks insurance

1220
00:47:01,140 --> 00:47:06,420
consumer finance and asset management

1221
00:47:03,270 --> 00:47:07,720
firms and he goes on to say deprecation

1222
00:47:06,420 --> 00:47:09,190
of this RSA key

1223
00:47:07,720 --> 00:47:11,200
and TLS one not three will cause

1224
00:47:09,190 --> 00:47:13,690
significant problems for financial

1225
00:47:11,200 --> 00:47:15,460
institutions almost all of whom are

1226
00:47:13,690 --> 00:47:17,050
running TLS internally and have

1227
00:47:15,460 --> 00:47:18,700
significant security critical

1228
00:47:17,050 --> 00:47:20,890
investments in out-of-band TLS

1229
00:47:18,700 --> 00:47:22,810
decryption basically what that means is

1230
00:47:20,890 --> 00:47:24,879
we got a bunch of these security devices

1231
00:47:22,810 --> 00:47:28,480
we're a bank or a financial institution

1232
00:47:24,880 --> 00:47:30,520
and we rely on sharing that server

1233
00:47:28,480 --> 00:47:32,260
private key to these devices so that

1234
00:47:30,520 --> 00:47:34,180
they can do their job right and if we

1235
00:47:32,260 --> 00:47:36,160
don't have a server private key to be

1236
00:47:34,180 --> 00:47:38,770
able to share then they're in the dark

1237
00:47:36,160 --> 00:47:40,690
and now we don't that they basically

1238
00:47:38,770 --> 00:47:43,030
just fall out of the out of this whole

1239
00:47:40,690 --> 00:47:45,580
flow of traffic right and so that's not

1240
00:47:43,030 --> 00:47:47,470
a good thing all right so the IETF

1241
00:47:45,580 --> 00:47:48,970
working group when they got this email I

1242
00:47:47,470 --> 00:47:51,098
don't I don't think it was dated right

1243
00:47:48,970 --> 00:47:53,770
here but when they got this email they

1244
00:47:51,099 --> 00:47:56,470
were like I don't know 80% of the way

1245
00:47:53,770 --> 00:47:58,570
down the road and they had been doing

1246
00:47:56,470 --> 00:48:01,618
all this kind of work so how do you guys

1247
00:47:58,570 --> 00:48:07,050
think that the IETF working group

1248
00:48:01,619 --> 00:48:10,090
responded to this request yeah

1249
00:48:07,050 --> 00:48:12,670
fortunately I was able to steal their

1250
00:48:10,090 --> 00:48:15,670
private key and I was able to hack into

1251
00:48:12,670 --> 00:48:19,119
some actual footage of the response of

1252
00:48:15,670 --> 00:48:22,480
the working group and so they were like

1253
00:48:19,119 --> 00:48:24,250
no no no all right so here's the

1254
00:48:22,480 --> 00:48:26,680
response this is the actual response

1255
00:48:24,250 --> 00:48:29,170
back to them hi Andrew the skinny

1256
00:48:26,680 --> 00:48:31,750
talking Kenny's a nice guy because he

1257
00:48:29,170 --> 00:48:33,339
says Cheers at the end by the way hi

1258
00:48:31,750 --> 00:48:36,790
Andrew my view could starting your

1259
00:48:33,339 --> 00:48:38,740
request no so you gotta love Kenny man

1260
00:48:36,790 --> 00:48:41,440
he keeps it short and to the point

1261
00:48:38,740 --> 00:48:42,970
the raster network we're trying to build

1262
00:48:41,440 --> 00:48:45,070
a more secure Internet thank you very

1263
00:48:42,970 --> 00:48:47,348
much that's my little add-on there all

1264
00:48:45,070 --> 00:48:49,690
right meta-level comment for those that

1265
00:48:47,349 --> 00:48:51,490
can't read it in the back you're a bit

1266
00:48:49,690 --> 00:48:53,560
late to the party right

1267
00:48:51,490 --> 00:48:55,509
we're metaphorically speaking at the

1268
00:48:53,560 --> 00:48:57,790
stage of emptying the ashtrays and

1269
00:48:55,510 --> 00:49:01,119
hunting for the not quite empty beer

1270
00:48:57,790 --> 00:49:04,119
cans so come on dude we the party's over

1271
00:49:01,119 --> 00:49:07,270
basically all right more exactly we are

1272
00:49:04,119 --> 00:49:08,589
at draft 15 which ironically was only

1273
00:49:07,270 --> 00:49:10,240
like halfway down the road you know

1274
00:49:08,589 --> 00:49:11,190
because it was like almost 30 when they

1275
00:49:10,240 --> 00:49:13,290
did

1276
00:49:11,190 --> 00:49:16,740
but nonetheless draft 15 is like way

1277
00:49:13,290 --> 00:49:18,810
down the road at this point an RSA key

1278
00:49:16,740 --> 00:49:21,990
transport disappeared from the spec

1279
00:49:18,810 --> 00:49:24,540
about a dozen drafts ago I know the

1280
00:49:21,990 --> 00:49:26,700
banking industry is usually a bit slow

1281
00:49:24,540 --> 00:49:29,700
off the mark but this takes the biscuit

1282
00:49:26,700 --> 00:49:32,430
and then he says tears you know because

1283
00:49:29,700 --> 00:49:33,930
Cheers always kind of you know softens

1284
00:49:32,430 --> 00:49:38,190
the blow there at the end Cheers

1285
00:49:33,930 --> 00:49:40,890
Kenny you know all the best BFF forever

1286
00:49:38,190 --> 00:49:43,890
your yours truly Kenny whatever alright

1287
00:49:40,890 --> 00:49:45,720
so so it's interesting that while

1288
00:49:43,890 --> 00:49:48,150
perfect forward secret ciphers are now

1289
00:49:45,720 --> 00:49:49,770
mandated not everyone is excited about

1290
00:49:48,150 --> 00:49:51,750
that and frankly people are scrambling

1291
00:49:49,770 --> 00:49:53,280
today to be like how in the world are we

1292
00:49:51,750 --> 00:49:57,359
gonna solve this problem how are we

1293
00:49:53,280 --> 00:50:01,140
gonna crack this nut on on allowing our

1294
00:49:57,359 --> 00:50:02,970
security devices to to you know watch

1295
00:50:01,140 --> 00:50:04,950
our encrypted traffic I mean they

1296
00:50:02,970 --> 00:50:07,680
because we we can't just throw away all

1297
00:50:04,950 --> 00:50:10,259
of our DLP you know security devices or

1298
00:50:07,680 --> 00:50:11,879
our firewalls or whatever right I mean

1299
00:50:10,260 --> 00:50:14,520
these things have got to do their job I

1300
00:50:11,880 --> 00:50:17,880
will I will say this some companies are

1301
00:50:14,520 --> 00:50:21,480
making I guess what I'll call kind of a

1302
00:50:17,880 --> 00:50:23,670
central orchestration device whereby

1303
00:50:21,480 --> 00:50:27,060
traffic can come into those and then

1304
00:50:23,670 --> 00:50:30,150
that thing decrypts the traffic and then

1305
00:50:27,060 --> 00:50:31,828
it that one orchestration kind of a you

1306
00:50:30,150 --> 00:50:33,599
know centralized orchestration device

1307
00:50:31,829 --> 00:50:36,359
then it's connected to all of the

1308
00:50:33,599 --> 00:50:37,880
security devices and when it does the

1309
00:50:36,359 --> 00:50:40,170
decryption it can send the the

1310
00:50:37,880 --> 00:50:43,230
unencrypted traffic to the security

1311
00:50:40,170 --> 00:50:44,579
devices and then once all the security

1312
00:50:43,230 --> 00:50:46,470
devices have done their thing it comes

1313
00:50:44,579 --> 00:50:48,510
back up to that central point and then

1314
00:50:46,470 --> 00:50:50,250
it kicks it on out to the internet or or

1315
00:50:48,510 --> 00:50:52,619
vice versa from the internet into the

1316
00:50:50,250 --> 00:50:54,420
into the internal network so anyway so

1317
00:50:52,619 --> 00:50:57,690
there are there are solutions that are

1318
00:50:54,420 --> 00:50:59,430
out there but it's it's a big problem

1319
00:50:57,690 --> 00:51:01,470
for a lot of companies today so perfect

1320
00:50:59,430 --> 00:51:03,540
forward secrecy here perfect forward

1321
00:51:01,470 --> 00:51:06,890
secrecy which by the way the reason that

1322
00:51:03,540 --> 00:51:09,180
it's called perfect forward secrecy is

1323
00:51:06,890 --> 00:51:11,310
because it does not rely on the server's

1324
00:51:09,180 --> 00:51:14,339
private key then they talk about that

1325
00:51:11,310 --> 00:51:15,990
being forward secret because then if the

1326
00:51:14,339 --> 00:51:19,319
private key is ever compromised in the

1327
00:51:15,990 --> 00:51:20,350
future or forward from today then it

1328
00:51:19,319 --> 00:51:21,850
doesn't matter but

1329
00:51:20,350 --> 00:51:23,319
it's still going to be a secret because

1330
00:51:21,850 --> 00:51:26,500
it didn't rely on the server's private

1331
00:51:23,320 --> 00:51:29,170
key right the the way that you achieve

1332
00:51:26,500 --> 00:51:31,200
perfect forward secrecy is you use

1333
00:51:29,170 --> 00:51:33,460
what's called an ephemeral key an

1334
00:51:31,200 --> 00:51:34,990
ephemeral just the term ephemeral in

1335
00:51:33,460 --> 00:51:37,270
general means that it's very short-lived

1336
00:51:34,990 --> 00:51:41,049
it doesn't last very long you know and

1337
00:51:37,270 --> 00:51:43,330
so if you generate a new key with every

1338
00:51:41,050 --> 00:51:45,820
single session that you have between a

1339
00:51:43,330 --> 00:51:48,160
client and a server then that that in

1340
00:51:45,820 --> 00:51:50,140
effect is called an ephemeral key and so

1341
00:51:48,160 --> 00:51:52,089
now if you were to somehow compromise

1342
00:51:50,140 --> 00:51:53,589
that one key that was then used to

1343
00:51:52,090 --> 00:51:55,870
generate you know that encrypted traffic

1344
00:51:53,590 --> 00:51:57,820
you would only be able to decrypt that

1345
00:51:55,870 --> 00:52:00,520
one single session between client and

1346
00:51:57,820 --> 00:52:02,140
server so you know gone are the days

1347
00:52:00,520 --> 00:52:03,910
where you're able to get your hard drive

1348
00:52:02,140 --> 00:52:05,350
and just capture data for weeks and

1349
00:52:03,910 --> 00:52:07,149
months and years and be like hey now I

1350
00:52:05,350 --> 00:52:08,980
got the goldmine and I'm able to get

1351
00:52:07,150 --> 00:52:10,840
into this stuff later you cannot do that

1352
00:52:08,980 --> 00:52:15,280
anymore with perfect forward secret

1353
00:52:10,840 --> 00:52:16,930
ciphers okay so it's it's good but some

1354
00:52:15,280 --> 00:52:20,350
people are not too happy about it

1355
00:52:16,930 --> 00:52:22,299
like Andrew alrighty and I think we all

1356
00:52:20,350 --> 00:52:26,380
need to hire kinney to be our you know

1357
00:52:22,300 --> 00:52:28,420
PR or whatever response you can bear a

1358
00:52:26,380 --> 00:52:28,930
helpdesk response email builder that'd

1359
00:52:28,420 --> 00:52:30,790
be awesome

1360
00:52:28,930 --> 00:52:32,830
just six years at the end of every email

1361
00:52:30,790 --> 00:52:33,670
and everyone will feel a little bit

1362
00:52:32,830 --> 00:52:35,950
better about themselves

1363
00:52:33,670 --> 00:52:37,480
alrighty so a couple of quick things I

1364
00:52:35,950 --> 00:52:40,750
wanted to mention - how do I configure

1365
00:52:37,480 --> 00:52:42,400
TLS 1.3 in my browser so some of you may

1366
00:52:40,750 --> 00:52:45,250
be asking yourself hey this is kind of

1367
00:52:42,400 --> 00:52:46,930
cool stuff I want to know how I can take

1368
00:52:45,250 --> 00:52:48,550
advantage of that zero round-trip time

1369
00:52:46,930 --> 00:52:49,960
resumption that we talked about a second

1370
00:52:48,550 --> 00:52:51,460
ago or I want to know how I can do that

1371
00:52:49,960 --> 00:52:54,220
really short handshake and kind of get

1372
00:52:51,460 --> 00:52:55,840
to my page quick so how do I do this so

1373
00:52:54,220 --> 00:52:58,029
I went through Firefox and then Google

1374
00:52:55,840 --> 00:53:01,300
Chrome and these are just some checks

1375
00:52:58,030 --> 00:53:03,910
you can do to to see if tell us what

1376
00:53:01,300 --> 00:53:06,460
that three is in fact an able on your

1377
00:53:03,910 --> 00:53:08,350
browser so for Firefox you type about

1378
00:53:06,460 --> 00:53:10,420
colon config up there in your your

1379
00:53:08,350 --> 00:53:12,460
little URL address bar and it'll bring

1380
00:53:10,420 --> 00:53:16,000
you to your configuration page and you

1381
00:53:12,460 --> 00:53:18,370
can search for TLS and then it'll bring

1382
00:53:16,000 --> 00:53:19,810
up all the TLS related stuff and there's

1383
00:53:18,370 --> 00:53:20,890
this one I don't know if you can see it

1384
00:53:19,810 --> 00:53:24,340
very well back there but it's called

1385
00:53:20,890 --> 00:53:26,350
security TLS version dot max and so that

1386
00:53:24,340 --> 00:53:28,600
what this basically says is what is the

1387
00:53:26,350 --> 00:53:32,560
maximum version of TLS that we're going

1388
00:53:28,600 --> 00:53:33,400
to allow on this browser and the answer

1389
00:53:32,560 --> 00:53:37,150
here

1390
00:53:33,400 --> 00:53:39,400
is the value is for and the that

1391
00:53:37,150 --> 00:53:44,680
basically means CLS 1.3 so there's

1392
00:53:39,400 --> 00:53:49,810
hexadecimal 0 3 0 1 0 3 0 2 0 3 2 0 3 0

1393
00:53:44,680 --> 00:53:53,020
3 0 4 so 0 3 0 4 is TLS 1.3 in this in

1394
00:53:49,810 --> 00:53:55,690
this specific case alright so what I did

1395
00:53:53,020 --> 00:53:59,740
is I configured my Firefox browser to

1396
00:53:55,690 --> 00:54:02,290
the value 4 and then I went to a website

1397
00:53:59,740 --> 00:54:04,990
that I know it's configured to accept

1398
00:54:02,290 --> 00:54:06,820
TLS 1.3 connections right they have they

1399
00:54:04,990 --> 00:54:09,370
have configured their web server so that

1400
00:54:06,820 --> 00:54:12,130
their cipher suites prefer TLS 1.3

1401
00:54:09,370 --> 00:54:13,420
ciphers and I went there and I was like

1402
00:54:12,130 --> 00:54:15,040
hey are we gonna be able to do this

1403
00:54:13,420 --> 00:54:20,020
thing so the question is we've got a

1404
00:54:15,040 --> 00:54:22,390
browser that now is able to handle till

1405
00:54:20,020 --> 00:54:24,700
this one up 3 connections and I'm about

1406
00:54:22,390 --> 00:54:27,220
to visit a web server that prefers 1.3

1407
00:54:24,700 --> 00:54:28,990
ciphers so are we gonna be able to to

1408
00:54:27,220 --> 00:54:31,180
make a match here and the answer of

1409
00:54:28,990 --> 00:54:33,790
course is yes so Firefox version 61 and

1410
00:54:31,180 --> 00:54:35,049
on supports TLS 1 up 3 you can get in

1411
00:54:33,790 --> 00:54:37,000
there and check based on what I just

1412
00:54:35,050 --> 00:54:40,780
said on whether it's actually configured

1413
00:54:37,000 --> 00:54:43,480
or not this this website I know there's

1414
00:54:40,780 --> 00:54:46,510
others this one is website called is TLS

1415
00:54:43,480 --> 00:54:49,050
fast yet calm it's a pretty cool website

1416
00:54:46,510 --> 00:54:51,520
that goes over a lot of TLS information

1417
00:54:49,050 --> 00:54:53,830
but anyway you can visit that and you

1418
00:54:51,520 --> 00:54:56,050
can see down here I know it's hard to

1419
00:54:53,830 --> 00:54:57,640
see but it says TLS 1.3 there at the end

1420
00:54:56,050 --> 00:54:59,440
that right there by the way is the

1421
00:54:57,640 --> 00:55:01,900
cipher suite right that was chosen

1422
00:54:59,440 --> 00:55:02,880
between this the browser and the web

1423
00:55:01,900 --> 00:55:06,790
server

1424
00:55:02,880 --> 00:55:09,220
it was CLS is AES 128 bit encryption got

1425
00:55:06,790 --> 00:55:10,630
wah counter mode which is which by the

1426
00:55:09,220 --> 00:55:13,000
way if y'all remember I talked a second

1427
00:55:10,630 --> 00:55:15,010
ago about a EAD ciphers those are for

1428
00:55:13,000 --> 00:55:16,480
the bulk encryption ciphers Galois

1429
00:55:15,010 --> 00:55:19,930
counter mode is probably the most

1430
00:55:16,480 --> 00:55:22,660
popular of the ad a/d enabled bulk

1431
00:55:19,930 --> 00:55:25,750
encryption ciphers so don't be surprised

1432
00:55:22,660 --> 00:55:27,490
if you see a lot of GCM you know mode on

1433
00:55:25,750 --> 00:55:29,260
your a AES encryption when you look at

1434
00:55:27,490 --> 00:55:31,089
your side for when you look at your

1435
00:55:29,260 --> 00:55:34,090
cipher Suites I know I know many of you

1436
00:55:31,090 --> 00:55:35,770
spend hours looking at your cipher

1437
00:55:34,090 --> 00:55:37,450
suites that were negotiated between your

1438
00:55:35,770 --> 00:55:40,210
client and your surfer right every time

1439
00:55:37,450 --> 00:55:41,200
you visit a web page I kid of course but

1440
00:55:40,210 --> 00:55:43,089
if you happen to do

1441
00:55:41,200 --> 00:55:48,220
you'll notice that probably a lot of GCM

1442
00:55:43,089 --> 00:55:50,078
and then sha-256 was was used as the as

1443
00:55:48,220 --> 00:55:53,470
the Mac is the the message

1444
00:55:50,079 --> 00:55:56,470
authentication all right so then I went

1445
00:55:53,470 --> 00:55:58,899
to Google Chrome and I said hey can I

1446
00:55:56,470 --> 00:56:00,669
get to that same website is CLS fast yet

1447
00:55:58,900 --> 00:56:03,130
calm because I'm again I know that it's

1448
00:56:00,670 --> 00:56:05,470
set up for TLS went up three and Google

1449
00:56:03,130 --> 00:56:07,539
Chrome 63 plus supports TLS one not

1450
00:56:05,470 --> 00:56:09,939
three and Google's on like as you mine

1451
00:56:07,539 --> 00:56:13,660
notes like 79 or it's in the high 70s

1452
00:56:09,940 --> 00:56:15,490
right now think so it's 75 75 okay so

1453
00:56:13,660 --> 00:56:18,910
it's several versions ago google chrome

1454
00:56:15,490 --> 00:56:22,689
supports TLS 1.3 and sure enough there

1455
00:56:18,910 --> 00:56:25,089
it is right there TLS 1.3 was the you

1456
00:56:22,690 --> 00:56:27,819
know was the the version used here

1457
00:56:25,089 --> 00:56:30,160
it's kind of cool there you can see you

1458
00:56:27,819 --> 00:56:32,609
can see here Google and Firefox use

1459
00:56:30,160 --> 00:56:35,288
completely different naming you know

1460
00:56:32,609 --> 00:56:38,828
standards if you will or nomenclature to

1461
00:56:35,289 --> 00:56:42,130
show you what cipher suite was used on

1462
00:56:38,829 --> 00:56:44,380
this connection so this one it only says

1463
00:56:42,130 --> 00:56:46,089
X two five five one nine which by the

1464
00:56:44,380 --> 00:56:47,650
way that's some of the elliptic curve

1465
00:56:46,089 --> 00:56:50,019
cryptography that's the actual name of

1466
00:56:47,650 --> 00:56:52,720
the curve that was used for the key

1467
00:56:50,019 --> 00:56:57,339
exchange stuff so it's the name of the

1468
00:56:52,720 --> 00:56:59,919
curve itself is 25 5 1 9 and then AES

1469
00:56:57,339 --> 00:57:01,690
128 and there's that GCM again that I

1470
00:56:59,920 --> 00:57:05,490
talked about because it's an AE ad

1471
00:57:01,690 --> 00:57:08,230
cipher that is now mandated in TLS 1.3

1472
00:57:05,490 --> 00:57:10,209
so notice Google Chrome doesn't even

1473
00:57:08,230 --> 00:57:11,920
mention the message authentication it

1474
00:57:10,210 --> 00:57:14,230
doesn't even say what kind of sha stuff

1475
00:57:11,920 --> 00:57:15,789
it used at all so it's kind of an

1476
00:57:14,230 --> 00:57:17,589
interesting thing between browsers have

1477
00:57:15,789 --> 00:57:19,809
used Firefox or Chrome or check out

1478
00:57:17,589 --> 00:57:21,880
Safari or whatever you're you know

1479
00:57:19,809 --> 00:57:24,220
Microsoft edge or whatever it is you can

1480
00:57:21,880 --> 00:57:26,289
you can see the differences between how

1481
00:57:24,220 --> 00:57:27,759
they represent the actual cipher suite

1482
00:57:26,289 --> 00:57:30,160
though he's used the cipher suite is the

1483
00:57:27,759 --> 00:57:31,809
same cipher suite you know it's just the

1484
00:57:30,160 --> 00:57:34,000
way that your browser actually shows you

1485
00:57:31,809 --> 00:57:35,859
hey this is what was used it's kind of

1486
00:57:34,000 --> 00:57:37,450
interesting that the differences between

1487
00:57:35,859 --> 00:57:43,509
like Firefox and Chrome and all that

1488
00:57:37,450 --> 00:57:45,038
stuff so anyways the TLS 1.3 is I guess

1489
00:57:43,509 --> 00:57:46,900
just to kind of recap here I like three

1490
00:57:45,039 --> 00:57:48,339
minutes to kind of recap here or no I

1491
00:57:46,900 --> 00:57:50,650
don't have three minutes it's actually

1492
00:57:48,339 --> 00:57:52,359
it's actually 329 looks that 329 I

1493
00:57:50,650 --> 00:57:54,040
thought it had 3 minutes and 29 seconds

1494
00:57:52,359 --> 00:57:55,960
no it's actually 3

1495
00:57:54,040 --> 00:57:58,830
9 so I'm supposed to be done I think it

1496
00:57:55,960 --> 00:58:01,390
3:30 so I got just a second

1497
00:57:58,830 --> 00:58:03,069
like like many other things in

1498
00:58:01,390 --> 00:58:05,440
technology you know you may look at this

1499
00:58:03,070 --> 00:58:07,240
and you may say hey this is kind of cool

1500
00:58:05,440 --> 00:58:09,580
stuff I don't know if I could just hop

1501
00:58:07,240 --> 00:58:12,339
on board right away you know that kind

1502
00:58:09,580 --> 00:58:14,140
of thing but the world is moving in this

1503
00:58:12,340 --> 00:58:16,030
direction and you got to move with it

1504
00:58:14,140 --> 00:58:17,410
you know so you can kick and scream and

1505
00:58:16,030 --> 00:58:19,270
all that I'm not accusing anybody of

1506
00:58:17,410 --> 00:58:21,640
that but as the world of technology

1507
00:58:19,270 --> 00:58:23,410
moves a certain way you have got to

1508
00:58:21,640 --> 00:58:25,930
adapt and so you need to learn about

1509
00:58:23,410 --> 00:58:27,700
this stuff you got to say hey now I know

1510
00:58:25,930 --> 00:58:29,890
what you know zero round-trip time

1511
00:58:27,700 --> 00:58:32,140
resumption is now I know what aad

1512
00:58:29,890 --> 00:58:33,879
ciphers are now I know what perfect

1513
00:58:32,140 --> 00:58:37,060
forward secrecy means and I know that I

1514
00:58:33,880 --> 00:58:38,920
can't share a private key with my you

1515
00:58:37,060 --> 00:58:40,060
know security devices anymore like

1516
00:58:38,920 --> 00:58:42,520
that's a pretty interesting a

1517
00:58:40,060 --> 00:58:44,320
significant problem right well it's a

1518
00:58:42,520 --> 00:58:47,290
problem it's a challenge that we can

1519
00:58:44,320 --> 00:58:50,230
create a solution for right so it it's

1520
00:58:47,290 --> 00:58:52,810
an interesting opportunity to excel for

1521
00:58:50,230 --> 00:58:54,700
all of us right but those but those are

1522
00:58:52,810 --> 00:58:57,160
the things that your business or your

1523
00:58:54,700 --> 00:58:59,500
your customers or whatever are going to

1524
00:58:57,160 --> 00:59:01,509
run into that you need to be aware of so

1525
00:58:59,500 --> 00:59:04,360
while the TLS one-up 3 does provide much

1526
00:59:01,510 --> 00:59:06,040
more speed and much more security it

1527
00:59:04,360 --> 00:59:08,560
takes away a lot of the junk that was

1528
00:59:06,040 --> 00:59:11,650
out there that that allowed you to be

1529
00:59:08,560 --> 00:59:13,690
downgraded and be attacked you know from

1530
00:59:11,650 --> 00:59:15,280
a number of vulnerabilities all that

1531
00:59:13,690 --> 00:59:17,680
stuff is gone

1532
00:59:15,280 --> 00:59:20,350
whenever you just implement TLS 103

1533
00:59:17,680 --> 00:59:22,720
which by the way on a web server you can

1534
00:59:20,350 --> 00:59:25,120
offer TLS 1.3 cipher suites and all that

1535
00:59:22,720 --> 00:59:27,879
but you can also offer Tillis 1.2 and

1536
00:59:25,120 --> 00:59:30,310
1.1 and all the way back but one day

1537
00:59:27,880 --> 00:59:33,070
people are gonna be like hey it's 1.3

1538
00:59:30,310 --> 00:59:34,810
and forward right like 1.2 is a thing of

1539
00:59:33,070 --> 00:59:36,760
the past kind of like us to sell be 2 or

1540
00:59:34,810 --> 00:59:40,840
whatever right so we're headed this

1541
00:59:36,760 --> 00:59:43,930
direction all right so with that I try

1542
00:59:40,840 --> 00:59:46,150
to look up quotes for how the world is

1543
00:59:43,930 --> 00:59:47,379
changing and how we need to move with it

1544
00:59:46,150 --> 00:59:49,980
right now found this really interesting

1545
00:59:47,380 --> 00:59:53,410
quote I didn't realize it was like this

1546
00:59:49,980 --> 00:59:54,880
but if anybody's ever seen the Lord of

1547
00:59:53,410 --> 00:59:58,120
the Rings the Fellowship of the Ring by

1548
00:59:54,880 --> 00:59:59,620
JRR tolkien it starts out the movie

1549
00:59:58,120 --> 01:00:02,049
actually starts out with this quote and

1550
00:59:59,620 --> 01:00:05,230
it says the world has changed a seed in

1551
01:00:02,050 --> 01:00:06,040
the water a feel it in the earth a smell

1552
01:00:05,230 --> 01:00:09,010
it and the

1553
01:00:06,040 --> 01:00:10,779
err and then slightly modified I didn't

1554
01:00:09,010 --> 01:00:13,360
realize this was in the you know the

1555
01:00:10,780 --> 01:00:14,830
original person I noticed that in my

1556
01:00:13,360 --> 01:00:16,810
stronger encryption keys and faster

1557
01:00:14,830 --> 01:00:18,630
mobile experience who knew j.r.r tolkien

1558
01:00:16,810 --> 01:00:21,009
you know he's way ahead of his time so

1559
01:00:18,630 --> 01:00:22,990
so anyway like I said man the world is

1560
01:00:21,010 --> 01:00:26,500
moving let's move with it let's

1561
01:00:22,990 --> 01:00:28,660
understand the the protocols of the day

1562
01:00:26,500 --> 01:00:30,250
and let's stay ahead of this stuff so

1563
01:00:28,660 --> 01:00:32,799
it's great to be here at Shell week on

1564
01:00:30,250 --> 01:00:34,570
and I appreciate your attention and your

1565
01:00:32,800 --> 01:00:40,690
time today so you guys have a great day

1566
01:00:34,570 --> 01:00:43,570
thanks so much each time everybody give

1567
01:00:40,690 --> 01:00:46,600
it up for John magnin John you actually

1568
01:00:43,570 --> 01:00:48,820
have four minutes left Oh over here oh

1569
01:00:46,600 --> 01:00:53,319
good to go I'm sorry questions man any

1570
01:00:48,820 --> 01:01:14,680
questions for John question up here

1571
01:00:53,320 --> 01:01:16,570
front oh yeah yes sir they're you know

1572
01:01:14,680 --> 01:01:18,790
it's it's always hard to say you can

1573
01:01:16,570 --> 01:01:21,070
absolutely no longer ever do something

1574
01:01:18,790 --> 01:01:23,710
but that becomes significantly more

1575
01:01:21,070 --> 01:01:25,960
difficult yes there's there's a lot of I

1576
01:01:23,710 --> 01:01:28,540
guess to speak a little more broadly a

1577
01:01:25,960 --> 01:01:30,250
lot of the attacks like beasts and

1578
01:01:28,540 --> 01:01:32,290
freaking log jam and a lot of those

1579
01:01:30,250 --> 01:01:35,800
things that were present in earlier

1580
01:01:32,290 --> 01:01:38,110
versions of TLS are are frankly gone now

1581
01:01:35,800 --> 01:01:39,880
with the new because a lot of those weak

1582
01:01:38,110 --> 01:01:43,690
and encryption standards have now been

1583
01:01:39,880 --> 01:01:46,960
removed that effectively those are not

1584
01:01:43,690 --> 01:01:49,540
able to happen anymore so while I won't

1585
01:01:46,960 --> 01:01:54,120
say hey it's completely not possible at

1586
01:01:49,540 --> 01:01:54,120
all it becomes much more difficult so

1587
01:01:55,890 --> 01:02:06,609
yeah right now yes now that that gets

1588
01:02:04,960 --> 01:02:08,020
into of course we've talked about this

1589
01:02:06,610 --> 01:02:09,990
for a long time but that gets into some

1590
01:02:08,020 --> 01:02:11,950
of the other parts of this with like

1591
01:02:09,990 --> 01:02:13,990
certification authorities and do you

1592
01:02:11,950 --> 01:02:16,870
trust the server and has the certificate

1593
01:02:13,990 --> 01:02:19,060
been issued properly and is it you know

1594
01:02:16,870 --> 01:02:20,560
trusted and all that kind of stuff so

1595
01:02:19,060 --> 01:02:24,009
you you could take advantage of some of

1596
01:02:20,560 --> 01:02:25,270
those kinds of things to kind of get by

1597
01:02:24,010 --> 01:02:28,420
and do some of the things you're talking

1598
01:02:25,270 --> 01:02:30,190
about and so while that that's cut

1599
01:02:28,420 --> 01:02:33,880
that's it's a similar conversation but

1600
01:02:30,190 --> 01:02:35,590
not precisely like in the RFC 40 L s 1.3

1601
01:02:33,880 --> 01:02:37,810
that makes sense so yeah so there still

1602
01:02:35,590 --> 01:02:41,140
would potentially be some opportunities

1603
01:02:37,810 --> 01:02:42,670
for things like that but but those rely

1604
01:02:41,140 --> 01:02:44,319
on some other things that we need to

1605
01:02:42,670 --> 01:02:46,540
make sure we have you know secure as

1606
01:02:44,320 --> 01:02:48,130
well like when you get a certificate or

1607
01:02:46,540 --> 01:02:50,230
when you trust a certain certificate

1608
01:02:48,130 --> 01:02:52,000
then that needs to be done properly by

1609
01:02:50,230 --> 01:02:55,360
the proper certification authority and

1610
01:02:52,000 --> 01:02:59,370
etc etc you know so yeah good to go yeah

1611
01:02:55,360 --> 01:02:59,370
great question all right yes sir

1612
01:03:01,050 --> 01:03:07,930
huh yeah I went to that same web site

1613
01:03:06,130 --> 01:03:11,590
that I talked about saying ayoh is TLS

1614
01:03:07,930 --> 01:03:13,060
fast yet it's all one big word comm yeah

1615
01:03:11,590 --> 01:03:15,160
yeah she can go there and and that's not

1616
01:03:13,060 --> 01:03:18,070
the only TLS 1.3 website out there

1617
01:03:15,160 --> 01:03:22,029
obviously but that's one I know is TLS

1618
01:03:18,070 --> 01:03:25,680
1.3 configured so yeah good stuff thanks

1619
01:03:22,030 --> 01:03:28,690
Jen oh yeah I'm sorry nice all right oh

1620
01:03:25,680 --> 01:03:30,490
you need the slides now that's gonna

1621
01:03:28,690 --> 01:03:32,470
cost you a pretty penny no I'm just

1622
01:03:30,490 --> 01:03:34,180
kidding I need your servers private key

1623
01:03:32,470 --> 01:03:35,620
and I'll give you the slides I'm just

1624
01:03:34,180 --> 01:03:37,629
kidding I'm just kidding

1625
01:03:35,620 --> 01:03:39,910
no we can't Dave I don't know how we I

1626
01:03:37,630 --> 01:03:41,410
mean I'm happy to maybe meet with me

1627
01:03:39,910 --> 01:03:43,569
it's in a little bit I'll email it to

1628
01:03:41,410 --> 01:03:47,109
you I mean I'll share with whoever but

1629
01:03:43,570 --> 01:03:50,050
yeah speaker we don't require him to

1630
01:03:47,110 --> 01:03:51,820
give us the slides again Adrian Crenshaw

1631
01:03:50,050 --> 01:03:54,160
hiring geeks recording all these they're

1632
01:03:51,820 --> 01:03:56,260
up on his site okay they'll be up later

1633
01:03:54,160 --> 01:03:58,569
on and the slides are theirs yeah hit me

1634
01:03:56,260 --> 01:03:59,800
up on LinkedIn or whatever to and but

1635
01:03:58,570 --> 01:04:01,750
yeah I'll give them to you I'll give

1636
01:03:59,800 --> 01:04:04,740
them to you all right John give it a big

1637
01:04:01,750 --> 01:04:04,740
everybody

