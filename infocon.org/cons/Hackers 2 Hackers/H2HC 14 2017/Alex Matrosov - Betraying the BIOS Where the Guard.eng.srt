1
00:00:00,260 --> 00:00:04,500
actually it's big pleasure of presenting

2
00:00:02,310 --> 00:00:09,150
<font color="#E5E5E5">again</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> hackers to hackers conference</font>

3
00:00:04,500 --> 00:00:11,820
and actually I open<font color="#E5E5E5"> it after</font><font color="#CCCCCC"> Kay not the</font>

4
00:00:09,150 --> 00:00:15,179
<font color="#E5E5E5">talks track and my talk will be about</font>

5
00:00:11,820 --> 00:00:18,650
<font color="#E5E5E5">BIOS vulnerabilities and actually</font><font color="#CCCCCC"> we'll</font>

6
00:00:15,179 --> 00:00:21,750
talk<font color="#CCCCCC"> about a lot of</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> things</font>

7
00:00:18,650 --> 00:00:26,310
<font color="#CCCCCC">include into a boot guard and in Tobias</font>

8
00:00:21,750 --> 00:00:30,210
guard<font color="#E5E5E5"> and I will introduce myself a bit</font>

9
00:00:26,310 --> 00:00:31,948
so I embedded<font color="#E5E5E5"> security researcher have a</font>

10
00:00:30,210 --> 00:00:36,570
lot<font color="#CCCCCC"> of experience</font><font color="#E5E5E5"> in reverse engineering</font>

11
00:00:31,949 --> 00:00:39,590
<font color="#E5E5E5">and actually before of that I been</font>

12
00:00:36,570 --> 00:00:42,090
working for Intel ESET and silence<font color="#CCCCCC"> and</font>

13
00:00:39,590 --> 00:00:44,430
also<font color="#CCCCCC"> I'll out during the book</font>

14
00:00:42,090 --> 00:00:48,350
rootkits and booked kids<font color="#E5E5E5"> reverse</font>

15
00:00:44,430 --> 00:00:52,140
<font color="#E5E5E5">engineering next generation treads so</font>

16
00:00:48,350 --> 00:00:55,129
today we will<font color="#E5E5E5"> start about</font><font color="#CCCCCC"> the attacks on</font>

17
00:00:52,140 --> 00:00:58,800
<font color="#CCCCCC">the BIOS updates and then continue with</font>

18
00:00:55,129 --> 00:01:03,149
<font color="#E5E5E5">some new vectors</font><font color="#CCCCCC"> of bypassing and</font>

19
00:00:58,800 --> 00:01:05,188
attacking<font color="#CCCCCC"> into boot guard and also we</font>

20
00:01:03,149 --> 00:01:09,470
<font color="#E5E5E5">will talk about architecture of things</font>

21
00:01:05,188 --> 00:01:12,929
into BIOS guard which<font color="#CCCCCC"> is actually very</font>

22
00:01:09,470 --> 00:01:14,640
hidden it's not actually don't<font color="#E5E5E5"> have any</font>

23
00:01:12,930 --> 00:01:17,280
in public information<font color="#CCCCCC"> about</font>

24
00:01:14,640 --> 00:01:21,659
<font color="#E5E5E5">architectural things of in Tobias garden</font>

25
00:01:17,280 --> 00:01:24,210
from Intel also I want to<font color="#E5E5E5"> actually</font>

26
00:01:21,659 --> 00:01:26,640
<font color="#E5E5E5">promote to talks which is one of them it</font>

27
00:01:24,210 --> 00:01:29,250
<font color="#E5E5E5">will be 3 p.m. today from Alex</font><font color="#CCCCCC"> earmuff</font>

28
00:01:26,640 --> 00:01:31,860
he will be talking<font color="#CCCCCC"> about bias owner</font>

29
00:01:29,250 --> 00:01:36,000
abilities<font color="#CCCCCC"> too and also he will cover</font>

30
00:01:31,860 --> 00:01:38,189
some<font color="#CCCCCC"> things about debugging hardware</font>

31
00:01:36,000 --> 00:01:40,439
debugging with DCI interface which is

32
00:01:38,189 --> 00:01:43,139
<font color="#E5E5E5">very interesting</font><font color="#CCCCCC"> and very useful for</font>

33
00:01:40,439 --> 00:01:44,579
vulnerability research and other talk

34
00:01:43,140 --> 00:01:46,950
will<font color="#CCCCCC"> be happens tomorrow</font>

35
00:01:44,579 --> 00:01:49,289
it's Alex<font color="#CCCCCC"> Barger</font><font color="#E5E5E5"> nuke he will be covered</font>

36
00:01:46,950 --> 00:01:55,079
the vulnerabilities from SMI handlers

37
00:01:49,290 --> 00:02:01,680
and also<font color="#CCCCCC"> trust on let's start a bit with</font>

38
00:01:55,079 --> 00:02:04,619
introduction and if we look in the

39
00:02:01,680 --> 00:02:07,500
history<font color="#CCCCCC"> perspective how</font><font color="#E5E5E5"> root</font><font color="#CCCCCC"> kids been</font>

40
00:02:04,619 --> 00:02:11,038
<font color="#E5E5E5">involved and in the beginning it's been</font>

41
00:02:07,500 --> 00:02:13,330
delivered<font color="#CCCCCC"> by some dropper from usermod</font>

42
00:02:11,038 --> 00:02:16,750
in<font color="#CCCCCC"> real tree</font>

43
00:02:13,330 --> 00:02:21,390
and actually<font color="#E5E5E5"> dropper loaded the driver</font>

44
00:02:16,750 --> 00:02:25,090
<font color="#E5E5E5">and after that when Microsoft introduced</font>

45
00:02:21,390 --> 00:02:29,140
starting<font color="#E5E5E5"> from Windows 7 Microsoft</font>

46
00:02:25,090 --> 00:02:33,580
signing policy<font color="#CCCCCC"> it's a bit</font><font color="#E5E5E5"> move to boot</font>

47
00:02:29,140 --> 00:02:36,820
kids<font color="#E5E5E5"> world when we do have like</font>

48
00:02:33,580 --> 00:02:40,320
infections for MBR<font color="#CCCCCC"> VBR and whereas the</font>

49
00:02:36,820 --> 00:02:43,810
loader<font color="#E5E5E5"> actually going to modify</font>

50
00:02:40,320 --> 00:02:45,790
<font color="#CCCCCC">Microsoft boot loaders</font><font color="#E5E5E5"> and then allowed</font>

51
00:02:43,810 --> 00:02:49,060
some malicious company and<font color="#CCCCCC"> to Colonel</font>

52
00:02:45,790 --> 00:02:55,859
mod directly<font color="#E5E5E5"> so and if we focus it in</font>

53
00:02:49,060 --> 00:02:55,860
<font color="#E5E5E5">nowadays after secure boot is coming so</font>

54
00:02:56,400 --> 00:03:04,630
so after secure boot<font color="#E5E5E5"> bin has appeared on</font>

55
00:03:00,430 --> 00:03:08,140
from<font color="#CCCCCC"> Windows 8</font><font color="#E5E5E5"> so it's</font><font color="#CCCCCC"> actually very</font>

56
00:03:04,630 --> 00:03:10,540
difficult<font color="#E5E5E5"> to</font><font color="#CCCCCC"> find the machine where</font><font color="#E5E5E5"> is a</font>

57
00:03:08,140 --> 00:03:13,829
secure boot is<font color="#CCCCCC"> not active</font><font color="#E5E5E5"> so actually</font>

58
00:03:10,540 --> 00:03:18,160
<font color="#CCCCCC">nowadays there are kids start moving to</font>

59
00:03:13,830 --> 00:03:20,500
closer to hardware<font color="#E5E5E5"> and actually</font>

60
00:03:18,160 --> 00:03:22,780
specifically<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> SMM which</font><font color="#E5E5E5"> is a system</font>

61
00:03:20,500 --> 00:03:24,760
management mode and system<font color="#E5E5E5"> management</font>

62
00:03:22,780 --> 00:03:27,730
mode<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> very interesting from the</font>

63
00:03:24,760 --> 00:03:32,829
attacker perspective<font color="#E5E5E5"> because you</font><font color="#CCCCCC"> have a</font>

64
00:03:27,730 --> 00:03:35,350
power to to have access all the<font color="#E5E5E5"> physical</font>

65
00:03:32,830 --> 00:03:37,540
memory space and<font color="#E5E5E5"> also you can</font><font color="#CCCCCC"> actually</font>

66
00:03:35,350 --> 00:03:39,880
discover all the memory which is

67
00:03:37,540 --> 00:03:42,400
<font color="#E5E5E5">responsible for</font><font color="#CCCCCC"> kernel mode for a user</font>

68
00:03:39,880 --> 00:03:47,290
mode<font color="#E5E5E5"> even for the virtualization stuff</font>

69
00:03:42,400 --> 00:03:49,030
and if we look into<font color="#E5E5E5"> the spawn</font>

70
00:03:47,290 --> 00:03:50,650
state-sponsored<font color="#E5E5E5"> attacks which has been</font>

71
00:03:49,030 --> 00:03:53,890
<font color="#E5E5E5">disclosed with the WikiLeaks in both</font>

72
00:03:50,650 --> 00:03:55,600
salmon and other things<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> usually</font>

73
00:03:53,890 --> 00:03:58,470
<font color="#CCCCCC">it's like</font><font color="#E5E5E5"> that we have a</font><font color="#CCCCCC"> trampoline</font>

74
00:03:55,600 --> 00:04:02,530
which is in it<font color="#E5E5E5"> is</font><font color="#CCCCCC"> mm</font><font color="#E5E5E5"> and then the loader</font>

75
00:03:58,470 --> 00:04:05,170
<font color="#E5E5E5">getting into operating system level</font>

76
00:04:02,530 --> 00:04:07,030
which is actually load some component

77
00:04:05,170 --> 00:04:09,910
inside kernel mode because actually it's

78
00:04:07,030 --> 00:04:12,220
much easier<font color="#E5E5E5"> to track</font><font color="#CCCCCC"> application from</font>

79
00:04:09,910 --> 00:04:14,200
that level<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> want to intercept some</font>

80
00:04:12,220 --> 00:04:17,228
messages whatever of<font color="#E5E5E5"> course you can</font>

81
00:04:14,200 --> 00:04:20,469
parse all the memory from<font color="#CCCCCC"> SMM but it's</font>

82
00:04:17,228 --> 00:04:23,740
much complex<font color="#CCCCCC"> than just</font><font color="#E5E5E5"> use the rootkit</font>

83
00:04:20,470 --> 00:04:25,990
inside the<font color="#E5E5E5"> kernel mode</font><font color="#CCCCCC"> and more</font>

84
00:04:23,740 --> 00:04:27,190
mitigations<font color="#CCCCCC"> actually more</font><font color="#E5E5E5"> rootkits</font>

85
00:04:25,990 --> 00:04:28,950
complexity

86
00:04:27,190 --> 00:04:32,260
and what we can see is now in nowadays

87
00:04:28,950 --> 00:04:37,140
<font color="#CCCCCC">the</font><font color="#E5E5E5"> route kids</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> into closer and</font>

88
00:04:32,260 --> 00:04:40,030
closer to the hardware<font color="#E5E5E5"> and actually we</font>

89
00:04:37,140 --> 00:04:42,159
have a lot of<font color="#E5E5E5"> information already on the</font>

90
00:04:40,030 --> 00:04:45,070
public about the<font color="#CCCCCC"> BIOS implants</font><font color="#E5E5E5"> and it's</font>

91
00:04:42,160 --> 00:04:47,380
like not<font color="#CCCCCC"> a</font><font color="#E5E5E5"> moves it's really truth but</font>

92
00:04:45,070 --> 00:04:49,560
it's complex<font color="#E5E5E5"> and it's actually expensive</font>

93
00:04:47,380 --> 00:04:51,790
to develop<font color="#CCCCCC"> why it's using for</font>

94
00:04:49,560 --> 00:04:57,310
<font color="#CCCCCC">state-sponsored attacks and complex</font>

95
00:04:51,790 --> 00:05:04,950
<font color="#E5E5E5">ABT's</font><font color="#CCCCCC"> I need some water</font><font color="#E5E5E5"> because</font>

96
00:04:57,310 --> 00:05:08,200
yesterday<font color="#E5E5E5"> being a party and actually</font>

97
00:05:04,950 --> 00:05:12,159
<font color="#E5E5E5">modern route kids</font><font color="#CCCCCC"> move into</font><font color="#E5E5E5"> Hardware</font>

98
00:05:08,200 --> 00:05:15,370
closer and if we actually look in<font color="#E5E5E5"> this</font>

99
00:05:12,160 --> 00:05:17,650
<font color="#CCCCCC">picture it's copied from presentation</font>

100
00:05:15,370 --> 00:05:19,990
from Rodrigo Branca<font color="#E5E5E5"> and Vincent Zimmer</font>

101
00:05:17,650 --> 00:05:21,940
from<font color="#CCCCCC"> blackhat</font><font color="#E5E5E5"> this year and they</font>

102
00:05:19,990 --> 00:05:25,570
actually disclosing some vulnerabilities

103
00:05:21,940 --> 00:05:29,160
from which is being<font color="#CCCCCC"> protested by Intel</font>

104
00:05:25,570 --> 00:05:31,240
<font color="#E5E5E5">piece art and we can see the growth of</font>

105
00:05:29,160 --> 00:05:35,860
configuration based vulnerabilities

106
00:05:31,240 --> 00:05:38,669
which is actually say<font color="#E5E5E5"> it's like we have</font>

107
00:05:35,860 --> 00:05:41,080
the platform<font color="#E5E5E5"> which is being configured</font>

108
00:05:38,669 --> 00:05:42,909
<font color="#E5E5E5">not a proper way</font><font color="#CCCCCC"> and has a</font>

109
00:05:41,080 --> 00:05:45,969
vulnerabilities by default on this

110
00:05:42,910 --> 00:05:49,330
hardware or BIOS<font color="#E5E5E5"> configuration whatever</font>

111
00:05:45,970 --> 00:05:52,240
which<font color="#CCCCCC"> is specifically</font><font color="#E5E5E5"> says it's very</font>

112
00:05:49,330 --> 00:05:54,219
useful for attacker<font color="#E5E5E5"> and today we will be</font>

113
00:05:52,240 --> 00:05:57,160
<font color="#CCCCCC">actually discussed some of</font><font color="#E5E5E5"> the vendors</font>

114
00:05:54,220 --> 00:06:03,310
<font color="#E5E5E5">which is has a lot of problems with</font>

115
00:05:57,160 --> 00:06:08,740
their hardware<font color="#CCCCCC"> from other perspective we</font>

116
00:06:03,310 --> 00:06:10,860
do have a lot of attention from the<font color="#E5E5E5"> big</font>

117
00:06:08,740 --> 00:06:14,880
companies<font color="#CCCCCC"> like</font><font color="#E5E5E5"> Google Amazon Microsoft</font>

118
00:06:10,860 --> 00:06:18,220
<font color="#CCCCCC">because they do have a</font><font color="#E5E5E5"> cloud which is</font>

119
00:06:14,880 --> 00:06:21,520
actually has a hardware<font color="#E5E5E5"> and as example</font>

120
00:06:18,220 --> 00:06:24,580
if one<font color="#E5E5E5"> of these servers have a bias</font>

121
00:06:21,520 --> 00:06:26,710
<font color="#E5E5E5">implant this bias implant can discover</font>

122
00:06:24,580 --> 00:06:28,859
like all the guests on<font color="#E5E5E5"> the server</font>

123
00:06:26,710 --> 00:06:33,370
<font color="#E5E5E5">therefore</font><font color="#CCCCCC"> the clouds</font><font color="#E5E5E5"> attack it's like</font>

124
00:06:28,860 --> 00:06:35,289
extremely<font color="#E5E5E5"> dangerous and recently a</font>

125
00:06:33,370 --> 00:06:38,380
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> been introduced it it on chip</font>

126
00:06:35,289 --> 00:06:40,510
which is protect<font color="#E5E5E5"> the route of</font><font color="#CCCCCC"> trust from</font>

127
00:06:38,380 --> 00:06:41,169
<font color="#CCCCCC">the hardware</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> example if you</font>

128
00:06:40,510 --> 00:06:43,270
have a

129
00:06:41,169 --> 00:06:45,878
server with a<font color="#CCCCCC"> cheatin ship it will be</font>

130
00:06:43,270 --> 00:06:49,990
<font color="#E5E5E5">armored at the bus updates and also</font>

131
00:06:45,879 --> 00:06:51,969
check make some agitation for for the

132
00:06:49,990 --> 00:06:53,969
<font color="#E5E5E5">hardware inside</font><font color="#CCCCCC"> the platform which is</font>

133
00:06:51,969 --> 00:06:56,979
very interesting<font color="#E5E5E5"> and it shows like</font>

134
00:06:53,969 --> 00:07:01,270
modern way how the big companies moving

135
00:06:56,979 --> 00:07:05,710
to develop their own hardware for

136
00:07:01,270 --> 00:07:09,188
protect from supply chain attacks<font color="#E5E5E5"> but</font>

137
00:07:05,710 --> 00:07:12,549
let's move to the BIOS updates issues

138
00:07:09,189 --> 00:07:14,860
and it's very<font color="#CCCCCC"> interesting because</font>

139
00:07:12,550 --> 00:07:17,259
actually<font color="#CCCCCC"> last year I</font><font color="#E5E5E5"> already discussed</font>

140
00:07:14,860 --> 00:07:24,759
the problems with the BIOS updates<font color="#E5E5E5"> but</font>

141
00:07:17,259 --> 00:07:27,039
this year I<font color="#CCCCCC"> discovered more so u5</font>

142
00:07:24,759 --> 00:07:29,050
<font color="#CCCCCC">Warroad is</font><font color="#E5E5E5"> huge right so we have out a</font>

143
00:07:27,039 --> 00:07:31,330
motive<font color="#CCCCCC"> we have like a</font><font color="#E5E5E5"> lot of difference</font>

144
00:07:29,050 --> 00:07:34,330
but<font color="#E5E5E5"> at farms which is used you if I even</font>

145
00:07:31,330 --> 00:07:37,960
like your tea space sometimes<font color="#E5E5E5"> use it and</font>

146
00:07:34,330 --> 00:07:41,859
we have like huge<font color="#E5E5E5"> ecosystem with the</font>

147
00:07:37,960 --> 00:07:45,878
different vendors<font color="#E5E5E5"> which is like use</font>

148
00:07:41,860 --> 00:07:50,740
<font color="#E5E5E5">different SDKs frameworks as example we</font>

149
00:07:45,879 --> 00:07:52,289
have Intel<font color="#CCCCCC"> UDK</font><font color="#E5E5E5"> - but also like on top of</font>

150
00:07:50,740 --> 00:07:55,000
<font color="#CCCCCC">which</font><font color="#E5E5E5"> we have american megatrends</font>

151
00:07:52,289 --> 00:07:57,909
phoenix inside which has<font color="#E5E5E5"> produced some</font>

152
00:07:55,000 --> 00:08:02,520
<font color="#CCCCCC">of interesting frameworks</font><font color="#E5E5E5"> for</font>

153
00:07:57,909 --> 00:08:06,129
vulnerability research and now actually

154
00:08:02,520 --> 00:08:06,969
<font color="#CCCCCC">if we talk about the legacy legacy bias</font>

155
00:08:06,129 --> 00:08:09,189
is gone

156
00:08:06,969 --> 00:08:11,979
actually you files<font color="#E5E5E5"> everywhere but now</font>

157
00:08:09,189 --> 00:08:13,659
legacy inside the UEFI<font color="#E5E5E5"> because it's very</font>

158
00:08:11,979 --> 00:08:18,159
complex we<font color="#CCCCCC"> have a lot of</font><font color="#E5E5E5"> different</font>

159
00:08:13,659 --> 00:08:21,969
<font color="#CCCCCC">components</font><font color="#E5E5E5"> it's very difficult to keep</font>

160
00:08:18,159 --> 00:08:24,819
all the<font color="#E5E5E5"> things up to</font><font color="#CCCCCC"> date</font><font color="#E5E5E5"> and look</font>

161
00:08:21,969 --> 00:08:28,839
inside<font color="#CCCCCC"> the bios update</font><font color="#E5E5E5"> image how many</font>

162
00:08:24,819 --> 00:08:32,260
different<font color="#E5E5E5"> farmers we</font><font color="#CCCCCC"> have for just one</font>

163
00:08:28,839 --> 00:08:35,289
from<font color="#CCCCCC"> ufi image for the BIOS</font><font color="#E5E5E5"> update it's</font>

164
00:08:32,260 --> 00:08:37,899
more than<font color="#CCCCCC"> ten different farmers for</font>

165
00:08:35,289 --> 00:08:40,539
different hardware components into<font color="#CCCCCC"> your</font>

166
00:08:37,899 --> 00:08:44,769
motherboard so we do have<font color="#E5E5E5"> like different</font>

167
00:08:40,539 --> 00:08:48,040
<font color="#E5E5E5">sensors graphics networks</font><font color="#CCCCCC"> ME beams he</font>

168
00:08:44,769 --> 00:08:51,670
aimed he actually microcode<font color="#CCCCCC"> bios guard</font>

169
00:08:48,040 --> 00:08:53,920
<font color="#CCCCCC">antiques tea</font><font color="#E5E5E5"> so today we will focused</font>

170
00:08:51,670 --> 00:08:54,490
more like on<font color="#CCCCCC"> bios guard boot guard and</font>

171
00:08:53,920 --> 00:08:57,610
they say

172
00:08:54,490 --> 00:08:59,170
a bit higher the management<font color="#E5E5E5"> mod and of</font>

173
00:08:57,610 --> 00:09:01,330
course we will be discussed some

174
00:08:59,170 --> 00:09:07,959
vulnerabilities which I found for this

175
00:09:01,330 --> 00:09:10,810
<font color="#E5E5E5">talk and here is for different vendors</font>

176
00:09:07,960 --> 00:09:13,750
<font color="#E5E5E5">involved actually four or five so</font>

177
00:09:10,810 --> 00:09:15,910
american megatrends<font color="#CCCCCC"> but american</font><font color="#E5E5E5"> medical</font>

178
00:09:13,750 --> 00:09:19,210
transportation framework which<font color="#CCCCCC"> is used</font>

179
00:09:15,910 --> 00:09:20,770
by gigabyte<font color="#E5E5E5"> asus</font><font color="#CCCCCC"> lenovo and msi and i</font>

180
00:09:19,210 --> 00:09:26,530
found vulnerabilities specifically on

181
00:09:20,770 --> 00:09:29,439
these vendors so let's talk<font color="#E5E5E5"> a bit what</font>

182
00:09:26,530 --> 00:09:34,390
kind of protections do we have for the

183
00:09:29,440 --> 00:09:36,850
bias<font color="#E5E5E5"> and if we look on</font><font color="#CCCCCC"> the left side</font><font color="#E5E5E5"> we</font>

184
00:09:34,390 --> 00:09:40,840
<font color="#CCCCCC">have some</font><font color="#E5E5E5"> simple bit protections which</font>

185
00:09:36,850 --> 00:09:44,260
is actually easy<font color="#E5E5E5"> to bypass and easy to</font>

186
00:09:40,840 --> 00:09:47,440
forgot for enable it which is actually<font color="#CCCCCC"> a</font>

187
00:09:44,260 --> 00:09:52,900
lot<font color="#E5E5E5"> of vendors does and here is issues</font>

188
00:09:47,440 --> 00:09:55,110
which<font color="#CCCCCC"> i found</font><font color="#E5E5E5"> other ways we have various</font>

189
00:09:52,900 --> 00:09:58,569
registers which is kind of policy<font color="#E5E5E5"> for</font>

190
00:09:55,110 --> 00:10:02,440
<font color="#CCCCCC">access for spy flash regions and it's</font>

191
00:09:58,570 --> 00:10:06,700
actually separated<font color="#E5E5E5"> from bias protections</font>

192
00:10:02,440 --> 00:10:08,980
<font color="#E5E5E5">bit which</font><font color="#CCCCCC"> is make sense and</font><font color="#E5E5E5"> both if both</font>

193
00:10:06,700 --> 00:10:12,610
a neighborhood it's much harder<font color="#CCCCCC"> to</font>

194
00:10:08,980 --> 00:10:17,130
bypass<font color="#CCCCCC"> it but it's also like we have a</font>

195
00:10:12,610 --> 00:10:20,200
<font color="#E5E5E5">vendor</font><font color="#CCCCCC"> switches doesn't use it at all</font>

196
00:10:17,130 --> 00:10:22,270
from<font color="#E5E5E5"> other thing we</font><font color="#CCCCCC"> have a like signing</font>

197
00:10:20,200 --> 00:10:26,220
<font color="#E5E5E5">and notification for the</font><font color="#CCCCCC"> updates and</font>

198
00:10:22,270 --> 00:10:28,960
<font color="#E5E5E5">also like</font><font color="#CCCCCC"> not all</font><font color="#E5E5E5"> of vendors use it and</font>

199
00:10:26,220 --> 00:10:33,040
of course<font color="#E5E5E5"> fancy technologies like boot</font>

200
00:10:28,960 --> 00:10:34,840
guard and<font color="#E5E5E5"> bias guard and we also today</font>

201
00:10:33,040 --> 00:10:38,949
<font color="#CCCCCC">we will discuss</font><font color="#E5E5E5"> two issues which i found</font>

202
00:10:34,840 --> 00:10:41,830
for<font color="#E5E5E5"> my black hat talk and look on this</font>

203
00:10:38,950 --> 00:10:45,370
picture<font color="#E5E5E5"> actually the spreadsheet which</font>

204
00:10:41,830 --> 00:10:48,010
is shows how different<font color="#E5E5E5"> vendors use the</font>

205
00:10:45,370 --> 00:10:50,860
simple protections and if you look on

206
00:10:48,010 --> 00:10:54,520
top which is actually<font color="#CCCCCC"> a highlighted by</font>

207
00:10:50,860 --> 00:10:57,520
red you<font color="#E5E5E5"> see like esos</font><font color="#CCCCCC"> msi and gigabytes</font>

208
00:10:54,520 --> 00:11:01,090
<font color="#E5E5E5">they just don't care so it's like simple</font>

209
00:10:57,520 --> 00:11:02,770
<font color="#CCCCCC">things</font><font color="#E5E5E5"> doesn't use even like virus</font>

210
00:11:01,090 --> 00:11:05,400
updates it's not on too difficult

211
00:11:02,770 --> 00:11:05,400
properly

212
00:11:07,600 --> 00:11:15,370
<font color="#E5E5E5">they just don't care</font><font color="#CCCCCC"> and for my talk in</font>

213
00:11:13,360 --> 00:11:18,550
<font color="#CCCCCC">blackadeshi</font><font color="#E5E5E5"> this year I'm already</font>

214
00:11:15,370 --> 00:11:23,170
actually demonstrate<font color="#E5E5E5"> house can be</font>

215
00:11:18,550 --> 00:11:25,420
<font color="#E5E5E5">dangerous with a simple demonstration</font>

216
00:11:23,170 --> 00:11:28,180
and proof<font color="#E5E5E5"> of concept of</font><font color="#CCCCCC"> ufi</font><font color="#E5E5E5"> ransomware</font>

217
00:11:25,420 --> 00:11:34,149
<font color="#CCCCCC">you can find by this link this material</font>

218
00:11:28,180 --> 00:11:40,388
so and this actually demo being

219
00:11:34,149 --> 00:11:43,269
demonstrated from<font color="#E5E5E5"> office document to hmm</font>

220
00:11:40,389 --> 00:11:47,579
so and it can be used<font color="#E5E5E5"> for remote attacks</font>

221
00:11:43,269 --> 00:11:50,860
and it's actually already<font color="#E5E5E5"> probably used</font>

222
00:11:47,579 --> 00:11:55,000
and<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> a questions to audience</font>

223
00:11:50,860 --> 00:12:00,759
<font color="#CCCCCC">actually do</font><font color="#E5E5E5"> update your</font><font color="#CCCCCC"> wires who never</font>

224
00:11:55,000 --> 00:12:03,089
update your voice<font color="#CCCCCC"> okay who update just</font>

225
00:12:00,759 --> 00:12:03,089
<font color="#E5E5E5">once</font>

226
00:12:03,360 --> 00:12:09,699
yeah so actually<font color="#E5E5E5"> think is like</font><font color="#CCCCCC"> usually</font>

227
00:12:07,300 --> 00:12:11,380
<font color="#CCCCCC">it's very common normal</font><font color="#E5E5E5"> users never</font>

228
00:12:09,699 --> 00:12:12,880
<font color="#CCCCCC">oblate the bias they just bought the</font>

229
00:12:11,380 --> 00:12:14,880
hardware and<font color="#E5E5E5"> that's it</font><font color="#CCCCCC"> because he</font>

230
00:12:12,880 --> 00:12:18,160
<font color="#CCCCCC">actually didn't know they need to update</font>

231
00:12:14,880 --> 00:12:20,290
the BIOS right<font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> deliberate</font><font color="#E5E5E5"> with</font>

232
00:12:18,160 --> 00:12:22,480
<font color="#E5E5E5">Microsoft Update how's it usually</font>

233
00:12:20,290 --> 00:12:26,019
actually<font color="#E5E5E5"> Microsoft does patch in to use</font>

234
00:12:22,480 --> 00:12:29,800
days and everybody forget about this and

235
00:12:26,019 --> 00:12:32,889
<font color="#E5E5E5">it's extremely vulnerable thing and keep</font>

236
00:12:29,800 --> 00:12:39,060
be vulnerable<font color="#CCCCCC"> even with rigid</font><font color="#E5E5E5"> budget</font>

237
00:12:32,889 --> 00:12:42,759
issues like years sometimes like that

238
00:12:39,060 --> 00:12:47,500
all the life of your laptop<font color="#E5E5E5"> it can be</font>

239
00:12:42,759 --> 00:12:49,750
vulnerable<font color="#CCCCCC"> so and if we're back to a</font>

240
00:12:47,500 --> 00:12:58,060
<font color="#E5E5E5">proof of concept of</font><font color="#CCCCCC"> ufi ransomware</font>

241
00:12:49,750 --> 00:13:00,459
I used this issues<font color="#E5E5E5"> for bypassing the</font>

242
00:12:58,060 --> 00:13:03,430
BIOS update entre fication<font color="#CCCCCC"> and actually</font>

243
00:13:00,459 --> 00:13:06,969
it's<font color="#E5E5E5"> been few</font><font color="#CCCCCC"> stages</font><font color="#E5E5E5"> and one of them</font>

244
00:13:03,430 --> 00:13:10,508
it's been exploiting<font color="#E5E5E5"> SMI flesh is my</font>

245
00:13:06,970 --> 00:13:16,600
<font color="#CCCCCC">Handler</font><font color="#E5E5E5"> and make a privilege escalation</font>

246
00:13:10,509 --> 00:13:20,710
to to<font color="#CCCCCC"> SMM and also interesting thing</font>

247
00:13:16,600 --> 00:13:24,190
<font color="#CCCCCC">actually american megatrends</font><font color="#E5E5E5"> has a drive</font>

248
00:13:20,710 --> 00:13:27,100
<font color="#CCCCCC">my driver which is sign it</font><font color="#E5E5E5"> but this</font>

249
00:13:24,190 --> 00:13:29,890
driver<font color="#CCCCCC"> actually use your multiplication</font>

250
00:13:27,100 --> 00:13:33,010
<font color="#CCCCCC">tell to this driver</font><font color="#E5E5E5"> which kind of is my</font>

251
00:13:29,890 --> 00:13:36,430
handler should<font color="#E5E5E5"> be called and this driver</font>

252
00:13:33,010 --> 00:13:38,410
can call any<font color="#CCCCCC"> arbiter is my handler</font><font color="#E5E5E5"> so</font>

253
00:13:36,430 --> 00:13:47,109
and<font color="#E5E5E5"> actually I use it for attack as my</font>

254
00:13:38,410 --> 00:13:53,130
<font color="#E5E5E5">flash for my demo so in generic way if</font>

255
00:13:47,110 --> 00:13:56,140
<font color="#CCCCCC">you look</font><font color="#E5E5E5"> to this picture</font><font color="#CCCCCC"> we do</font><font color="#E5E5E5"> have</font>

256
00:13:53,130 --> 00:13:57,730
different stage<font color="#E5E5E5"> house the bias update</font>

257
00:13:56,140 --> 00:14:00,850
can be<font color="#CCCCCC"> delivered on first stage of</font>

258
00:13:57,730 --> 00:14:03,550
<font color="#E5E5E5">course</font><font color="#CCCCCC"> it's update application which is</font>

259
00:14:00,850 --> 00:14:05,890
running<font color="#E5E5E5"> on user mode then it's loaded</font>

260
00:14:03,550 --> 00:14:10,150
some driver which is<font color="#CCCCCC"> Matt</font><font color="#E5E5E5"> BIOS update</font>

261
00:14:05,890 --> 00:14:13,270
image to the memory<font color="#E5E5E5"> and then like update</font>

262
00:14:10,150 --> 00:14:14,890
image been captured by some of this my

263
00:14:13,270 --> 00:14:17,829
handler which is responsible<font color="#E5E5E5"> for the</font>

264
00:14:14,890 --> 00:14:19,510
BIOS update process and we actually do

265
00:14:17,830 --> 00:14:21,460
have<font color="#E5E5E5"> like two of them</font>

266
00:14:19,510 --> 00:14:24,520
it's my<font color="#E5E5E5"> flash and security so my flash</font>

267
00:14:21,460 --> 00:14:26,350
<font color="#CCCCCC">and</font><font color="#E5E5E5"> most interesting part I also found</font>

268
00:14:24,520 --> 00:14:29,140
the issue with<font color="#CCCCCC"> Security's in my flash</font>

269
00:14:26,350 --> 00:14:33,010
<font color="#E5E5E5">and security so my first responsible for</font>

270
00:14:29,140 --> 00:14:35,560
validating<font color="#E5E5E5"> the sign</font><font color="#CCCCCC"> at update</font><font color="#E5E5E5"> so if you</font>

271
00:14:33,010 --> 00:14:37,870
found this with<font color="#CCCCCC"> Security's my flash you</font>

272
00:14:35,560 --> 00:14:40,689
<font color="#CCCCCC">can just bypass all identification</font>

273
00:14:37,870 --> 00:14:42,700
because you actually<font color="#CCCCCC"> already is Kuwait</font>

274
00:14:40,690 --> 00:14:46,480
the privileges in this driver<font color="#E5E5E5"> and you</font>

275
00:14:42,700 --> 00:14:47,910
can<font color="#E5E5E5"> modify flow in</font><font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> which is</font>

276
00:14:46,480 --> 00:14:53,260
funny right

277
00:14:47,910 --> 00:14:58,079
so<font color="#CCCCCC"> I say my flesh does have this kind</font><font color="#E5E5E5"> of</font>

278
00:14:53,260 --> 00:15:02,230
my handler which is<font color="#E5E5E5"> write read and erase</font>

279
00:14:58,080 --> 00:15:05,260
and highlighted by red<font color="#E5E5E5"> it's been</font>

280
00:15:02,230 --> 00:15:09,460
vulnerable<font color="#E5E5E5"> for different</font><font color="#CCCCCC"> platforms which</font>

281
00:15:05,260 --> 00:15:11,170
<font color="#E5E5E5">I found for this research the</font>

282
00:15:09,460 --> 00:15:15,430
<font color="#E5E5E5">interesting thing it's very easy</font>

283
00:15:11,170 --> 00:15:18,610
actually to<font color="#E5E5E5"> fix this kind of issues</font><font color="#CCCCCC"> with</font>

284
00:15:15,430 --> 00:15:24,880
<font color="#CCCCCC">the security check but but I</font><font color="#E5E5E5"> don't know</font>

285
00:15:18,610 --> 00:15:27,780
<font color="#E5E5E5">why as developers</font><font color="#CCCCCC"> too lazy same thing</font>

286
00:15:24,880 --> 00:15:32,950
about<font color="#E5E5E5"> Security's my flesh we do have</font>

287
00:15:27,780 --> 00:15:33,939
<font color="#E5E5E5">treats my handlers and in my case it's</font>

288
00:15:32,950 --> 00:15:40,509
been all

289
00:15:33,939 --> 00:15:42,939
I'm vulnerable actually<font color="#E5E5E5"> it specifically</font>

290
00:15:40,509 --> 00:15:47,399
<font color="#E5E5E5">why the buyers guard and would have been</font>

291
00:15:42,939 --> 00:15:47,399
<font color="#E5E5E5">created because they want to protect</font>

292
00:15:48,269 --> 00:15:54,009
<font color="#CCCCCC">from the same mo issues BIOS</font><font color="#E5E5E5"> update and</font>

293
00:15:51,249 --> 00:15:58,299
<font color="#E5E5E5">armoring not only BIOS update even like</font>

294
00:15:54,009 --> 00:16:04,119
secure boot<font color="#E5E5E5"> from before</font><font color="#CCCCCC"> this mm and bias</font>

295
00:15:58,299 --> 00:16:06,819
will be loaded so a bit<font color="#E5E5E5"> about the</font>

296
00:16:04,119 --> 00:16:10,629
responsible disclosure<font color="#E5E5E5"> and it's kind of</font>

297
00:16:06,819 --> 00:16:16,238
fun right<font color="#E5E5E5"> so we I do have communicated</font>

298
00:16:10,629 --> 00:16:19,499
with different vendors<font color="#CCCCCC"> and</font><font color="#E5E5E5"> actually it's</font>

299
00:16:16,239 --> 00:16:24,429
been<font color="#E5E5E5"> good response from Lenovo and</font>

300
00:16:19,499 --> 00:16:29,589
<font color="#E5E5E5">gigabyte being a bit slow but they at</font>

301
00:16:24,429 --> 00:16:33,339
<font color="#CCCCCC">least budget but the US has been best so</font>

302
00:16:29,589 --> 00:16:35,489
I submit the issues to them and after<font color="#CCCCCC"> a</font>

303
00:16:33,339 --> 00:16:39,369
month they say so it's no issues no

304
00:16:35,489 --> 00:16:41,619
<font color="#E5E5E5">issues and I actually download the</font>

305
00:16:39,369 --> 00:16:43,749
recent update for the same<font color="#CCCCCC"> platform</font>

306
00:16:41,619 --> 00:16:45,609
where I found the issues and they

307
00:16:43,749 --> 00:16:49,449
actually silently released the<font color="#CCCCCC"> patch</font>

308
00:16:45,609 --> 00:16:51,879
with my issues<font color="#E5E5E5"> so I make simple</font><font color="#CCCCCC"> bin diff</font>

309
00:16:49,449 --> 00:16:54,789
and discover where they<font color="#E5E5E5"> patched the</font>

310
00:16:51,879 --> 00:16:58,749
issues it's been my issues so I make at

311
00:16:54,789 --> 00:17:03,039
<font color="#E5E5E5">this tweet it's been some support from</font>

312
00:16:58,749 --> 00:17:07,029
<font color="#CCCCCC">community and actually</font><font color="#E5E5E5"> after that they</font>

313
00:17:03,039 --> 00:17:10,319
send me mail<font color="#E5E5E5"> sorry we actually not</font>

314
00:17:07,029 --> 00:17:16,470
mention you but<font color="#E5E5E5"> yes it's your issues</font>

315
00:17:10,319 --> 00:17:16,470
that's kind of cool right<font color="#CCCCCC"> so it's a</font><font color="#E5E5E5"> so</font>

316
00:17:17,398 --> 00:17:26,559
let's focus more interesting and serious

317
00:17:20,559 --> 00:17:30,009
<font color="#CCCCCC">fink like into a boot guard and why</font>

318
00:17:26,559 --> 00:17:32,259
actually<font color="#E5E5E5"> boot guard been created so the</font>

319
00:17:30,009 --> 00:17:35,919
main thing for boot guard<font color="#CCCCCC"> its armoring</font>

320
00:17:32,259 --> 00:17:38,049
<font color="#CCCCCC">the secure boot flow and</font><font color="#E5E5E5"> if we're</font>

321
00:17:35,919 --> 00:17:42,970
<font color="#CCCCCC">talking</font><font color="#E5E5E5"> about the secure boot so it's</font>

322
00:17:38,049 --> 00:17:45,940
been<font color="#E5E5E5"> there like science 2012 and almost</font>

323
00:17:42,970 --> 00:17:48,010
every every time<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> been based on root</font>

324
00:17:45,940 --> 00:17:51,429
of<font color="#E5E5E5"> trust based and</font><font color="#CCCCCC"> bias</font>

325
00:17:48,010 --> 00:17:55,390
so and attacks your face<font color="#E5E5E5"> it's all the</font>

326
00:17:51,429 --> 00:17:57,490
firmware<font color="#E5E5E5"> right so then in 2013 it's been</font>

327
00:17:55,390 --> 00:18:03,190
introduced the boot guard technology

328
00:17:57,490 --> 00:18:05,380
<font color="#CCCCCC">which is armored secure boot flow</font><font color="#E5E5E5"> and it</font>

329
00:18:03,190 --> 00:18:07,750
has two options<font color="#E5E5E5"> like measure it boot and</font>

330
00:18:05,380 --> 00:18:12,760
verified boot so measure it boot it's

331
00:18:07,750 --> 00:18:15,100
more software mode which is like<font color="#E5E5E5"> use the</font>

332
00:18:12,760 --> 00:18:17,110
TPM as a root<font color="#E5E5E5"> of trust</font><font color="#CCCCCC"> and here is the</font>

333
00:18:15,100 --> 00:18:19,840
same<font color="#E5E5E5"> problem it can be attack surface</font>

334
00:18:17,110 --> 00:18:22,059
based on the firmware<font color="#E5E5E5"> and verified boot</font>

335
00:18:19,840 --> 00:18:24,459
it's most strongly smart we're actually

336
00:18:22,059 --> 00:18:29,440
a<font color="#E5E5E5"> rooted trust moved from the firmware</font>

337
00:18:24,460 --> 00:18:35,290
<font color="#CCCCCC">to the hardware and lock it by one-time</font>

338
00:18:29,440 --> 00:18:37,510
programming field<font color="#CCCCCC"> views yeah and</font>

339
00:18:35,290 --> 00:18:40,240
actually<font color="#E5E5E5"> we will discuss some of</font>

340
00:18:37,510 --> 00:18:45,940
bypasses for<font color="#E5E5E5"> this</font><font color="#CCCCCC"> technology today</font><font color="#E5E5E5"> not</font>

341
00:18:40,240 --> 00:18:50,320
only<font color="#CCCCCC"> mine and it's very interesting and</font>

342
00:18:45,940 --> 00:18:53,350
so actually why this technology been

343
00:18:50,320 --> 00:18:55,540
created by Intel because<font color="#E5E5E5"> classical</font>

344
00:18:53,350 --> 00:18:57,730
secure boot start the flow from the

345
00:18:55,540 --> 00:19:01,889
Dixie<font color="#CCCCCC"> phase which is</font><font color="#E5E5E5"> actually a last</font>

346
00:18:57,730 --> 00:19:04,120
phase<font color="#CCCCCC"> before</font><font color="#E5E5E5"> it's passing passing</font>

347
00:19:01,890 --> 00:19:08,710
control to the boot loaders for

348
00:19:04,120 --> 00:19:12,070
operating system and here is a lot of

349
00:19:08,710 --> 00:19:16,780
issues<font color="#E5E5E5"> with implants and boot kids from</font>

350
00:19:12,070 --> 00:19:20,139
<font color="#CCCCCC">ism and for that and actually classical</font>

351
00:19:16,780 --> 00:19:23,080
secure boot been for like a<font color="#CCCCCC"> u5 it's been</font>

352
00:19:20,140 --> 00:19:25,179
created<font color="#CCCCCC"> for validating out and the</font>

353
00:19:23,080 --> 00:19:28,449
identification<font color="#E5E5E5"> boot loaders for</font>

354
00:19:25,179 --> 00:19:30,820
operating system but then it's<font color="#CCCCCC"> kind of</font>

355
00:19:28,450 --> 00:19:35,950
<font color="#CCCCCC">difficult because all the issues from</font>

356
00:19:30,820 --> 00:19:38,740
<font color="#CCCCCC">SMM can bypass it and it's no</font>

357
00:19:35,950 --> 00:19:41,500
verification<font color="#CCCCCC"> for most early boot stages</font>

358
00:19:38,740 --> 00:19:45,520
like<font color="#CCCCCC"> sake</font><font color="#E5E5E5"> stage security stage and</font>

359
00:19:41,500 --> 00:19:48,850
platform<font color="#CCCCCC"> initialization stage and on</font>

360
00:19:45,520 --> 00:19:51,639
other actually side we do have<font color="#CCCCCC"> a</font>

361
00:19:48,850 --> 00:19:55,080
measurable<font color="#E5E5E5"> but same</font><font color="#CCCCCC"> thing it started</font>

362
00:19:51,640 --> 00:19:59,860
earlier than Dixie but also can be

363
00:19:55,080 --> 00:20:01,899
<font color="#E5E5E5">bypass it from the firmware and only</font>

364
00:19:59,860 --> 00:20:04,658
actually verified boot

365
00:20:01,900 --> 00:20:07,809
can be more<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> mod for</font>

366
00:20:04,659 --> 00:20:11,250
protection which<font color="#E5E5E5"> is like moved a root of</font>

367
00:20:07,809 --> 00:20:11,250
<font color="#E5E5E5">trust to the hardware</font>

368
00:20:12,400 --> 00:20:18,070
<font color="#E5E5E5">I'm already actually show it in my</font>

369
00:20:15,970 --> 00:20:20,559
previous<font color="#E5E5E5"> here presentation this picture</font>

370
00:20:18,070 --> 00:20:22,720
<font color="#E5E5E5">it's from the Vincent Zimmer's block and</font>

371
00:20:20,559 --> 00:20:25,120
it describes how into a boot guard

372
00:20:22,720 --> 00:20:28,000
technology<font color="#E5E5E5"> works it's not</font><font color="#CCCCCC"> a lot of</font>

373
00:20:25,120 --> 00:20:30,908
details right<font color="#E5E5E5"> so most interesting thing</font>

374
00:20:28,000 --> 00:20:36,940
it's kind of root of trust<font color="#E5E5E5"> going to the</font>

375
00:20:30,909 --> 00:20:39,450
hardware<font color="#CCCCCC"> and I constructed</font><font color="#E5E5E5"> this picture</font>

376
00:20:36,940 --> 00:20:42,100
<font color="#E5E5E5">from different sources based on</font>

377
00:20:39,450 --> 00:20:43,990
presentations from<font color="#E5E5E5"> the researchers and</font>

378
00:20:42,100 --> 00:20:47,320
<font color="#E5E5E5">the books which is available on public</font>

379
00:20:43,990 --> 00:20:51,880
but it's not yet into<font color="#CCCCCC"> release</font><font color="#E5E5E5"> the</font>

380
00:20:47,320 --> 00:20:55,720
specification for<font color="#CCCCCC"> that technology</font><font color="#E5E5E5"> and we</font>

381
00:20:51,880 --> 00:20:59,110
<font color="#CCCCCC">can see him so actually we do have a</font>

382
00:20:55,720 --> 00:21:02,320
micro code and which is authenticated<font color="#CCCCCC"> a</font>

383
00:20:59,110 --> 00:21:03,789
cm for<font color="#CCCCCC"> the boot guard</font><font color="#E5E5E5"> and only after</font>

384
00:21:02,320 --> 00:21:06,908
<font color="#CCCCCC">that it's passing control</font><font color="#E5E5E5"> after</font>

385
00:21:03,789 --> 00:21:12,059
verification<font color="#CCCCCC"> to reset vector</font><font color="#E5E5E5"> and a reset</font>

386
00:21:06,909 --> 00:21:16,090
vector<font color="#CCCCCC"> actually loads I initial put</font>

387
00:21:12,059 --> 00:21:18,070
block which is<font color="#CCCCCC"> IB b4 check the second</font>

388
00:21:16,090 --> 00:21:21,760
<font color="#E5E5E5">pay stage and passing control to the</font>

389
00:21:18,070 --> 00:21:24,820
secure boot on the Dixie face and then

390
00:21:21,760 --> 00:21:29,730
verifies the<font color="#CCCCCC"> as bootloaders which is</font>

391
00:21:24,820 --> 00:21:33,279
<font color="#E5E5E5">make sense and boot guard has a tree</font>

392
00:21:29,730 --> 00:21:36,760
operates operation<font color="#CCCCCC"> mods which is like</font>

393
00:21:33,279 --> 00:21:38,649
not enable it<font color="#E5E5E5"> measure it verified boot</font>

394
00:21:36,760 --> 00:21:44,020
and verified boot<font color="#E5E5E5"> plus moderate boot</font>

395
00:21:38,649 --> 00:21:46,408
which<font color="#CCCCCC"> is most chunga smart here is a</font>

396
00:21:44,020 --> 00:21:49,658
<font color="#E5E5E5">picture from</font><font color="#CCCCCC"> one of the</font><font color="#E5E5E5"> intel peppers</font>

397
00:21:46,409 --> 00:21:53,860
<font color="#E5E5E5">from ideas I not remember</font><font color="#CCCCCC"> which year</font>

398
00:21:49,659 --> 00:21:57,220
probably<font color="#E5E5E5"> 15 right so and we can</font><font color="#CCCCCC"> see how</font>

399
00:21:53,860 --> 00:21:59,678
<font color="#CCCCCC">they actually</font><font color="#E5E5E5"> root of trust and polish</font>

400
00:21:57,220 --> 00:22:03,179
is<font color="#CCCCCC"> growing</font><font color="#E5E5E5"> from the Intel put guard and</font>

401
00:21:59,679 --> 00:22:05,740
passing each level to<font color="#CCCCCC"> the next</font><font color="#E5E5E5"> one and</font>

402
00:22:03,179 --> 00:22:09,490
the think is<font color="#E5E5E5"> like it's not really</font>

403
00:22:05,740 --> 00:22:11,440
showing<font color="#E5E5E5"> anything you can see like</font><font color="#CCCCCC"> ok we</font>

404
00:22:09,490 --> 00:22:13,690
do<font color="#E5E5E5"> have a policies with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> chicken some</font>

405
00:22:11,440 --> 00:22:15,220
different phases<font color="#E5E5E5"> but what actually</font><font color="#CCCCCC"> the</font>

406
00:22:13,690 --> 00:22:18,610
<font color="#E5E5E5">technology does</font>

407
00:22:15,220 --> 00:22:23,100
and the<font color="#E5E5E5"> root of trust</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> fuse program</font>

408
00:22:18,610 --> 00:22:26,678
<font color="#CCCCCC">one time field-programmable fuse and</font>

409
00:22:23,100 --> 00:22:30,428
actually start babe look<font color="#CCCCCC"> it's it</font><font color="#E5E5E5"> is a</font>

410
00:22:26,679 --> 00:22:35,350
initial good block<font color="#CCCCCC"> I will be in terms of</font>

411
00:22:30,429 --> 00:22:41,559
good guard<font color="#CCCCCC"> technology and this polish is</font>

412
00:22:35,350 --> 00:22:53,049
checkered by<font color="#E5E5E5"> ACM and let's look on more</font>

413
00:22:41,559 --> 00:22:56,970
detailed picture so we do have we do

414
00:22:53,049 --> 00:23:00,010
have<font color="#E5E5E5"> part which is based on hardware</font><font color="#CCCCCC"> and</font>

415
00:22:56,970 --> 00:23:01,870
we have management<font color="#E5E5E5"> engine which is has</font>

416
00:23:00,010 --> 00:23:06,669
readwrite access to field programmable

417
00:23:01,870 --> 00:23:09,100
<font color="#E5E5E5">fuse which is actually stores a hash</font><font color="#CCCCCC"> om</font>

418
00:23:06,669 --> 00:23:12,630
public key<font color="#CCCCCC"> cache which is</font><font color="#E5E5E5"> actually a</font>

419
00:23:09,100 --> 00:23:16,178
root of<font color="#CCCCCC"> trust for other</font><font color="#E5E5E5"> server image</font>

420
00:23:12,630 --> 00:23:18,669
<font color="#E5E5E5">policies so we do have an BIOS update</font>

421
00:23:16,179 --> 00:23:21,340
came in efest which is store like a lot

422
00:23:18,669 --> 00:23:24,610
of<font color="#E5E5E5"> different things and the initial boot</font>

423
00:23:21,340 --> 00:23:27,760
block manifest the<font color="#E5E5E5"> interesting thing</font>

424
00:23:24,610 --> 00:23:30,100
like this chained have like chain

425
00:23:27,760 --> 00:23:39,520
verification policies which is locked in

426
00:23:30,100 --> 00:23:42,399
<font color="#CCCCCC">Hardware think is fill</font><font color="#E5E5E5"> programmable fuse</font>

427
00:23:39,520 --> 00:23:46,330
<font color="#E5E5E5">it's very sensitive</font><font color="#CCCCCC"> place</font><font color="#E5E5E5"> right if it's</font>

428
00:23:42,400 --> 00:23:48,940
not locked<font color="#E5E5E5"> it can be an issue but it</font>

429
00:23:46,330 --> 00:23:53,220
will<font color="#E5E5E5"> be discussed a bit later about that</font>

430
00:23:48,940 --> 00:23:57,880
and other thing for any modification of

431
00:23:53,220 --> 00:24:02,730
<font color="#CCCCCC">fpf</font><font color="#E5E5E5"> we need access</font><font color="#CCCCCC"> read and write from</font>

432
00:23:57,880 --> 00:24:02,730
the management<font color="#E5E5E5"> engine to this regions</font>

433
00:24:04,020 --> 00:24:11,168
just<font color="#E5E5E5"> before my black hat talk Adele</font>

434
00:24:07,049 --> 00:24:14,110
released the pepper<font color="#E5E5E5"> here is a link about</font>

435
00:24:11,169 --> 00:24:16,659
how their implementation of<font color="#CCCCCC"> budva boot</font>

436
00:24:14,110 --> 00:24:18,850
guard works<font color="#E5E5E5"> and it's pretty interesting</font>

437
00:24:16,659 --> 00:24:23,649
<font color="#E5E5E5">because it has much more</font><font color="#CCCCCC"> details and</font>

438
00:24:18,850 --> 00:24:26,049
<font color="#CCCCCC">intel ones</font><font color="#E5E5E5"> and here is actually we can</font>

439
00:24:23,649 --> 00:24:28,919
see like<font color="#CCCCCC"> pc</font><font color="#E5E5E5"> age responsible for the</font>

440
00:24:26,049 --> 00:24:32,550
fuses<font color="#E5E5E5"> and it's why actually a me</font>

441
00:24:28,920 --> 00:24:35,280
<font color="#CCCCCC">is involved and inside the BIOS updates</font>

442
00:24:32,550 --> 00:24:37,560
we<font color="#E5E5E5"> has these structures which is similar</font>

443
00:24:35,280 --> 00:24:41,070
stuff<font color="#E5E5E5"> but in</font><font color="#CCCCCC"> different visualization</font>

444
00:24:37,560 --> 00:24:42,629
<font color="#E5E5E5">which is I just discussed and if you</font>

445
00:24:41,070 --> 00:24:44,939
<font color="#CCCCCC">interested about the boot guard</font>

446
00:24:42,630 --> 00:24:51,210
technology<font color="#CCCCCC"> I highly recommend to look</font><font color="#E5E5E5"> at</font>

447
00:24:44,940 --> 00:24:56,460
this link but same<font color="#CCCCCC"> thing like what is</font>

448
00:24:51,210 --> 00:24:58,980
<font color="#E5E5E5">what right so here is specifically</font><font color="#CCCCCC"> FPF</font>

449
00:24:56,460 --> 00:25:01,700
and all of this stuff<font color="#CCCCCC"> Thornton BIOS</font>

450
00:24:58,980 --> 00:25:01,700
<font color="#CCCCCC">update image</font>

451
00:25:02,220 --> 00:25:11,580
I checked security<font color="#CCCCCC"> for different</font>

452
00:25:08,430 --> 00:25:14,840
platforms<font color="#CCCCCC"> and if you think actually</font>

453
00:25:11,580 --> 00:25:18,389
<font color="#CCCCCC">oppose the best ones it is not because</font>

454
00:25:14,840 --> 00:25:21,929
<font color="#CCCCCC">we have</font><font color="#E5E5E5"> Apple right there and it doesn't</font>

455
00:25:18,390 --> 00:25:23,700
support<font color="#CCCCCC"> boot guard</font><font color="#E5E5E5"> it doesn't support a</font>

456
00:25:21,930 --> 00:25:26,730
lot of<font color="#E5E5E5"> different things and actually</font>

457
00:25:23,700 --> 00:25:31,320
secure boot it's not a<font color="#E5E5E5"> securest one for</font>

458
00:25:26,730 --> 00:25:33,330
current state at Apple platforms and<font color="#E5E5E5"> but</font>

459
00:25:31,320 --> 00:25:36,740
worst one it's<font color="#E5E5E5"> actually gigabyte bricks</font>

460
00:25:33,330 --> 00:25:41,040
<font color="#E5E5E5">because it's too</font><font color="#CCCCCC"> much power</font><font color="#E5E5E5"> and</font>

461
00:25:36,740 --> 00:25:43,710
flexibility for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> attacker exist here</font>

462
00:25:41,040 --> 00:25:46,980
<font color="#E5E5E5">so we do have like</font><font color="#CCCCCC"> readwrite access to</font>

463
00:25:43,710 --> 00:25:49,770
the memory regions we do have readwrite

464
00:25:46,980 --> 00:25:53,130
access to the<font color="#E5E5E5"> embedded controller we do</font>

465
00:25:49,770 --> 00:25:55,379
have<font color="#CCCCCC"> Desai</font><font color="#E5E5E5"> CPU debugging enabled it will</font>

466
00:25:53,130 --> 00:25:57,360
be discussed<font color="#CCCCCC"> a bit more detailed from</font>

467
00:25:55,380 --> 00:26:02,010
<font color="#E5E5E5">Alex yermolov</font><font color="#CCCCCC"> talk at 3:00 p.m.</font><font color="#E5E5E5"> today</font>

468
00:25:57,360 --> 00:26:06,260
<font color="#E5E5E5">why it's actually so dangerous and other</font>

469
00:26:02,010 --> 00:26:08,400
stuff we do have like if<font color="#CCCCCC"> baf not set and</font>

470
00:26:06,260 --> 00:26:12,990
boot guard

471
00:26:08,400 --> 00:26:15,600
<font color="#E5E5E5">if PF it's not programmed so it's kind</font>

472
00:26:12,990 --> 00:26:18,330
of<font color="#CCCCCC"> interesting and we will be focusing a</font>

473
00:26:15,600 --> 00:26:24,439
bit more on it and the bias guard is

474
00:26:18,330 --> 00:26:24,439
<font color="#CCCCCC">disable it so</font><font color="#E5E5E5"> it's perfect target right</font>

475
00:26:24,740 --> 00:26:32,490
and also<font color="#E5E5E5"> I want to highlight actually</font>

476
00:26:27,540 --> 00:26:34,230
the<font color="#E5E5E5"> Dell and HP did a good job so</font><font color="#CCCCCC"> they</font>

477
00:26:32,490 --> 00:26:39,510
actually most securest one from my

478
00:26:34,230 --> 00:26:43,290
research so<font color="#CCCCCC"> you</font>

479
00:26:39,510 --> 00:26:46,680
you<font color="#E5E5E5"> think hardware vendors care about</font>

480
00:26:43,290 --> 00:26:50,340
security<font color="#E5E5E5"> it is not not all of them</font>

481
00:26:46,680 --> 00:26:52,680
<font color="#CCCCCC">really cares the first thing as example</font>

482
00:26:50,340 --> 00:26:55,379
small<font color="#CCCCCC"> vendors like gigabyte Asus MSI</font>

483
00:26:52,680 --> 00:26:58,940
<font color="#CCCCCC">they even don't</font><font color="#E5E5E5"> have a security teams</font>

484
00:26:55,380 --> 00:27:01,230
<font color="#E5E5E5">which has been like will be like</font>

485
00:26:58,940 --> 00:27:03,810
<font color="#CCCCCC">checking the security for</font><font color="#E5E5E5"> the hardware</font>

486
00:27:01,230 --> 00:27:08,010
<font color="#E5E5E5">wishes will be released on public no</font>

487
00:27:03,810 --> 00:27:10,889
they don't have even<font color="#E5E5E5"> more if you submit</font>

488
00:27:08,010 --> 00:27:15,690
the issues to them<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> hard to</font>

489
00:27:10,890 --> 00:27:17,460
like<font color="#E5E5E5"> proof it</font><font color="#CCCCCC"> is an</font><font color="#E5E5E5"> issue because they</font>

490
00:27:15,690 --> 00:27:21,180
not understand a lot of<font color="#CCCCCC"> things from the</font>

491
00:27:17,460 --> 00:27:26,130
security research space so<font color="#E5E5E5"> trust no one</font>

492
00:27:21,180 --> 00:27:28,500
<font color="#CCCCCC">and also</font><font color="#E5E5E5"> I want to make some reference</font>

493
00:27:26,130 --> 00:27:31,770
<font color="#CCCCCC">to initial research which has been did</font>

494
00:27:28,500 --> 00:27:35,430
from which has actually<font color="#E5E5E5"> been done from</font>

495
00:27:31,770 --> 00:27:39,360
<font color="#E5E5E5">Alex</font><font color="#CCCCCC"> yermolov</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's here is</font><font color="#E5E5E5"> a link he</font>

496
00:27:35,430 --> 00:27:41,880
first who found the<font color="#E5E5E5"> issue when</font><font color="#CCCCCC"> bias boot</font>

497
00:27:39,360 --> 00:27:43,949
guard<font color="#E5E5E5"> been not enable it and also</font>

498
00:27:41,880 --> 00:27:47,310
programmable views<font color="#E5E5E5"> not been locked</font>

499
00:27:43,950 --> 00:27:49,650
that's<font color="#E5E5E5"> mean like</font><font color="#CCCCCC"> attacker can use boot</font>

500
00:27:47,310 --> 00:28:00,300
guard<font color="#E5E5E5"> for logs a rootkit inside the</font>

501
00:27:49,650 --> 00:28:02,970
<font color="#E5E5E5">platform yeah but</font><font color="#CCCCCC"> attacker</font><font color="#E5E5E5"> actually</font>

502
00:28:00,300 --> 00:28:05,340
<font color="#E5E5E5">never attack specification right so it's</font>

503
00:28:02,970 --> 00:28:16,920
always<font color="#E5E5E5"> focusing on implementation stuff</font>

504
00:28:05,340 --> 00:28:22,500
so and the thing<font color="#CCCCCC"> is</font><font color="#E5E5E5"> let's talk about how</font>

505
00:28:16,920 --> 00:28:25,200
the boot guard is implemented<font color="#E5E5E5"> and if we</font>

506
00:28:22,500 --> 00:28:30,320
do have this stuff inside the<font color="#E5E5E5"> BIOS</font>

507
00:28:25,200 --> 00:28:34,560
update image and the<font color="#CCCCCC"> views</font><font color="#E5E5E5"> it's not sad</font>

508
00:28:30,320 --> 00:28:37,679
we only rely on the firmware security

509
00:28:34,560 --> 00:28:40,290
and even<font color="#CCCCCC"> if you have</font><font color="#E5E5E5"> the fired good</font>

510
00:28:37,680 --> 00:28:44,540
active<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> matter</font>

511
00:28:40,290 --> 00:28:44,540
the configuration is doesn't<font color="#E5E5E5"> locked</font>

512
00:28:47,179 --> 00:28:55,559
so I<font color="#E5E5E5"> recovered the structures</font><font color="#CCCCCC"> force came</font>

513
00:28:52,679 --> 00:29:00,960
in the<font color="#E5E5E5"> fest it's not documented and it's</font>

514
00:28:55,559 --> 00:29:06,480
my templates from zero ones<font color="#E5E5E5"> editor so we</font>

515
00:29:00,960 --> 00:29:09,720
can see what it is we do have<font color="#CCCCCC"> IBM</font><font color="#E5E5E5"> hash</font>

516
00:29:06,480 --> 00:29:14,870
which is a vendor hash<font color="#CCCCCC"> si</font><font color="#E5E5E5"> or M public</font>

517
00:29:09,720 --> 00:29:19,380
key and<font color="#CCCCCC"> s a signature</font><font color="#E5E5E5"> so and also the</font>

518
00:29:14,870 --> 00:29:24,029
IBM public key which is<font color="#E5E5E5"> plus came in the</font>

519
00:29:19,380 --> 00:29:27,270
first<font color="#CCCCCC"> security</font><font color="#E5E5E5"> version number another</font>

520
00:29:24,029 --> 00:29:29,850
<font color="#E5E5E5">side we do have initiative initial boot</font>

521
00:29:27,270 --> 00:29:36,120
block manifest which is<font color="#CCCCCC"> a bit complex</font>

522
00:29:29,850 --> 00:29:39,389
and the main thing<font color="#E5E5E5"> it's actually has the</font>

523
00:29:36,120 --> 00:29:41,699
hashes<font color="#CCCCCC"> and offsets for initial</font><font color="#E5E5E5"> boot</font>

524
00:29:39,390 --> 00:29:45,710
block for protecting most early<font color="#E5E5E5"> stages</font>

525
00:29:41,700 --> 00:29:49,980
of booting<font color="#E5E5E5"> like pay and sex set stage</font>

526
00:29:45,710 --> 00:29:52,950
and actually<font color="#CCCCCC"> if you look into you fi</font>

527
00:29:49,980 --> 00:29:54,960
tool which is a public tool and you<font color="#CCCCCC"> can</font>

528
00:29:52,950 --> 00:30:01,860
<font color="#CCCCCC">download from</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> github</font><font color="#E5E5E5"> it's already</font>

529
00:29:54,960 --> 00:30:06,990
has found found the<font color="#CCCCCC"> bias</font><font color="#E5E5E5"> AC bias guard</font>

530
00:30:01,860 --> 00:30:08,520
<font color="#E5E5E5">ACM</font><font color="#CCCCCC"> and boot guard policy and boot guard</font>

531
00:30:06,990 --> 00:30:12,779
came<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> first and you</font><font color="#CCCCCC"> can easily</font>

532
00:30:08,520 --> 00:30:16,110
<font color="#E5E5E5">done from them it's because</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> in toe</font>

533
00:30:12,779 --> 00:30:18,390
has this kind of feed entry technology

534
00:30:16,110 --> 00:30:23,340
which is offset<font color="#E5E5E5"> based and it's</font>

535
00:30:18,390 --> 00:30:26,159
documented and educate whom and actually

536
00:30:23,340 --> 00:30:32,639
let's look<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> the boot block</font><font color="#E5E5E5"> how it</font>

537
00:30:26,159 --> 00:30:35,880
looks<font color="#E5E5E5"> like inside the policy so we do</font>

538
00:30:32,640 --> 00:30:38,159
have hashes<font color="#E5E5E5"> and offsets which is</font>

539
00:30:35,880 --> 00:30:38,850
actually pointing<font color="#E5E5E5"> us inside the bias</font>

540
00:30:38,159 --> 00:30:41,070
image

541
00:30:38,850 --> 00:30:46,889
what kind<font color="#E5E5E5"> of region is protected we have</font>

542
00:30:41,070 --> 00:30:51,840
a<font color="#E5E5E5"> beginning and the end and specifically</font>

543
00:30:46,890 --> 00:30:54,630
<font color="#E5E5E5">for my attack</font><font color="#CCCCCC"> yet platform we do have as</font>

544
00:30:51,840 --> 00:30:56,370
a coverage<font color="#CCCCCC"> which is started</font><font color="#E5E5E5"> mostly from</font>

545
00:30:54,630 --> 00:30:59,460
<font color="#CCCCCC">the beginning of the</font><font color="#E5E5E5"> firmware image and</font>

546
00:30:56,370 --> 00:31:01,879
covered all the<font color="#CCCCCC"> sec</font><font color="#E5E5E5"> and pay and</font><font color="#CCCCCC"> dixie</font>

547
00:30:59,460 --> 00:31:01,880
<font color="#CCCCCC">faces</font>

548
00:31:03,350 --> 00:31:10,320
and<font color="#E5E5E5"> also very interesting part is SEM</font>

549
00:31:08,640 --> 00:31:12,930
which is authenticated<font color="#E5E5E5"> code model</font>

550
00:31:10,320 --> 00:31:15,600
because it's<font color="#CCCCCC"> actually not a lot of</font>

551
00:31:12,930 --> 00:31:20,070
<font color="#E5E5E5">information</font><font color="#CCCCCC"> on public</font><font color="#E5E5E5"> how this kind of</font>

552
00:31:15,600 --> 00:31:23,399
code is executed<font color="#CCCCCC"> and specifically on</font>

553
00:31:20,070 --> 00:31:25,980
mental platforms<font color="#CCCCCC"> and</font><font color="#E5E5E5"> actually I didn't</font>

554
00:31:23,400 --> 00:31:32,880
<font color="#E5E5E5">seen any</font><font color="#CCCCCC"> ACMs which has been not</font>

555
00:31:25,980 --> 00:31:36,420
developed by Intel and<font color="#CCCCCC"> boot guard ACM is</font>

556
00:31:32,880 --> 00:31:38,580
very fired by microcode<font color="#E5E5E5"> so the microcode</font>

557
00:31:36,420 --> 00:31:41,160
checks the digital sign for

558
00:31:38,580 --> 00:31:44,220
authenticated model after<font color="#CCCCCC"> that it's</font>

559
00:31:41,160 --> 00:31:49,020
loaded to the<font color="#E5E5E5"> cash with non-addicted mod</font>

560
00:31:44,220 --> 00:31:54,170
and executed so we do have<font color="#E5E5E5"> a entry</font><font color="#CCCCCC"> point</font>

561
00:31:49,020 --> 00:31:57,150
<font color="#CCCCCC">a cm heater and also RSA public key</font>

562
00:31:54,170 --> 00:32:00,210
exponent is stored<font color="#CCCCCC"> here and</font><font color="#E5E5E5"> also as a</font>

563
00:31:57,150 --> 00:32:03,750
signature very interesting part

564
00:32:00,210 --> 00:32:06,330
<font color="#E5E5E5">sometimes</font><font color="#CCCCCC"> IBB initial boot</font><font color="#E5E5E5"> block doesn't</font>

565
00:32:03,750 --> 00:32:12,090
<font color="#E5E5E5">cover always</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> model</font><font color="#CCCCCC"> and cover</font><font color="#E5E5E5"> or only</font>

566
00:32:06,330 --> 00:32:14,189
<font color="#E5E5E5">the header and think is like if it's</font>

567
00:32:12,090 --> 00:32:16,340
<font color="#E5E5E5">covers the header it's very like</font>

568
00:32:14,190 --> 00:32:19,770
difficult<font color="#CCCCCC"> to</font><font color="#E5E5E5"> modify anything right so</font>

569
00:32:16,340 --> 00:32:21,600
<font color="#E5E5E5">because</font><font color="#CCCCCC"> microcode based</font><font color="#E5E5E5"> on this hidden</font>

570
00:32:19,770 --> 00:32:26,129
information<font color="#CCCCCC"> and information which is</font>

571
00:32:21,600 --> 00:32:29,340
stored inside check the signature<font color="#E5E5E5"> and if</font>

572
00:32:26,130 --> 00:32:34,950
anything<font color="#CCCCCC"> is modified the ACM code will</font>

573
00:32:29,340 --> 00:32:36,810
be<font color="#E5E5E5"> not executed but also</font><font color="#CCCCCC"> fingers like we</font>

574
00:32:34,950 --> 00:32:43,040
know the<font color="#CCCCCC"> entry point right</font><font color="#E5E5E5"> so we know</font>

575
00:32:36,810 --> 00:32:43,040
how how the<font color="#CCCCCC"> core code</font><font color="#E5E5E5"> and very start a</font>

576
00:32:45,950 --> 00:32:55,230
bit information<font color="#E5E5E5"> about a cm so in cm for</font>

577
00:32:52,950 --> 00:32:59,730
<font color="#E5E5E5">the boot guard</font><font color="#CCCCCC"> its verifies k manifest</font>

578
00:32:55,230 --> 00:33:06,380
and<font color="#CCCCCC"> IBB and also it's executed</font><font color="#E5E5E5"> and a</font>

579
00:32:59,730 --> 00:33:13,140
serum which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> a cache as</font><font color="#CCCCCC"> RAM</font><font color="#E5E5E5"> and I</font>

580
00:33:06,380 --> 00:33:14,160
<font color="#CCCCCC">developed a loader for</font><font color="#E5E5E5"> Ida for load in a</font>

581
00:33:13,140 --> 00:33:20,670
CMS<font color="#E5E5E5"> and</font>

582
00:33:14,160 --> 00:33:27,720
make the<font color="#E5E5E5"> research for a seems more more</font>

583
00:33:20,670 --> 00:33:29,700
handy so it's a flow from<font color="#CCCCCC"> ICM and it's</font>

584
00:33:27,720 --> 00:33:32,760
verification flow from the entry point

585
00:33:29,700 --> 00:33:35,550
we can see like it's checking the boot

586
00:33:32,760 --> 00:33:38,460
<font color="#E5E5E5">guard policies and also this graph</font>

587
00:33:35,550 --> 00:33:42,090
<font color="#CCCCCC">actually how demonstrate how many basic</font>

588
00:33:38,460 --> 00:33:46,860
blocks we do have inside the ACM<font color="#E5E5E5"> and how</font>

589
00:33:42,090 --> 00:33:49,620
complex it is so it's a bit bigger

590
00:33:46,860 --> 00:33:53,030
picture from the entry point we have a

591
00:33:49,620 --> 00:33:57,419
boot guard validation platform<font color="#E5E5E5"> in it and</font>

592
00:33:53,030 --> 00:33:59,750
<font color="#E5E5E5">actually a gig</font><font color="#CCCCCC"> we getting some manifest</font>

593
00:33:57,420 --> 00:34:04,280
from<font color="#E5E5E5"> the firmware image which is says</font>

594
00:33:59,750 --> 00:34:10,320
clearly<font color="#E5E5E5"> we do have parsers inside a CMS</font>

595
00:34:04,280 --> 00:34:12,659
and after I<font color="#CCCCCC"> think</font><font color="#E5E5E5"> about parsers always I</font>

596
00:34:10,320 --> 00:34:15,600
<font color="#E5E5E5">think about the</font><font color="#CCCCCC"> bhindi thing from the</font>

597
00:34:12,659 --> 00:34:18,359
past<font color="#CCCCCC"> a version of a CMS</font><font color="#E5E5E5"> and I did</font>

598
00:34:15,600 --> 00:34:20,880
<font color="#CCCCCC">actually some been different for</font>

599
00:34:18,360 --> 00:34:24,090
different<font color="#E5E5E5"> versions of a CMS as example I</font>

600
00:34:20,880 --> 00:34:28,710
<font color="#CCCCCC">compare has well</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> skyway ik and here</font>

601
00:34:24,090 --> 00:34:33,660
is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of changes just</font>

602
00:34:28,710 --> 00:34:39,990
one but when I make it<font color="#E5E5E5"> from broadville</font>

603
00:34:33,659 --> 00:34:43,969
to<font color="#E5E5E5"> sky wake I found a lot and mostly</font>

604
00:34:39,989 --> 00:34:47,399
it's been<font color="#CCCCCC"> exist</font><font color="#E5E5E5"> inside different parsers</font>

605
00:34:43,969 --> 00:34:52,109
routines<font color="#E5E5E5"> and some of them actually parse</font>

606
00:34:47,400 --> 00:34:55,679
<font color="#E5E5E5">Oh patch integers</font><font color="#CCCCCC"> overflow and</font><font color="#E5E5E5"> others</font>

607
00:34:52,110 --> 00:34:58,020
and this kind of interesting<font color="#CCCCCC"> because ACM</font>

608
00:34:55,679 --> 00:35:02,850
it's loaded on the beginning but<font color="#E5E5E5"> it</font>

609
00:34:58,020 --> 00:35:05,730
still keep it in the same offset where

610
00:35:02,850 --> 00:35:10,290
it's<font color="#E5E5E5"> been loaded on the beginning into</font>

611
00:35:05,730 --> 00:35:13,680
the memory<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> find it and so if</font>

612
00:35:10,290 --> 00:35:16,500
you know some issues and you<font color="#E5E5E5"> know like</font>

613
00:35:13,680 --> 00:35:18,990
bias is not<font color="#CCCCCC"> updated you</font><font color="#E5E5E5"> can actually</font>

614
00:35:16,500 --> 00:35:22,760
exploit some<font color="#CCCCCC"> of the issues inside ACM or</font>

615
00:35:18,990 --> 00:35:22,759
<font color="#E5E5E5">probably you can do something with that</font>

616
00:35:23,390 --> 00:35:32,720
so inside<font color="#E5E5E5"> the firmware we do have</font>

617
00:35:28,400 --> 00:35:35,280
following components for boot guard

618
00:35:32,720 --> 00:35:39,629
which is<font color="#E5E5E5"> responsible for</font><font color="#CCCCCC"> different</font>

619
00:35:35,280 --> 00:35:43,710
things and most actually interesting

620
00:35:39,630 --> 00:35:47,060
things<font color="#CCCCCC"> actually all of</font><font color="#E5E5E5"> them because it's</font>

621
00:35:43,710 --> 00:35:52,140
different<font color="#E5E5E5"> stages of verification and</font>

622
00:35:47,060 --> 00:35:56,369
here is my reconstructed flow on sale

623
00:35:52,140 --> 00:36:00,990
the C language<font color="#E5E5E5"> so and here is actually a</font>

624
00:35:56,369 --> 00:36:05,910
verification<font color="#E5E5E5"> for IBB from would guard</font>

625
00:36:00,990 --> 00:36:08,609
pay right<font color="#CCCCCC"> from initialization driver and</font>

626
00:36:05,910 --> 00:36:10,529
what it's actually validates<font color="#CCCCCC"> its Willie</font>

627
00:36:08,609 --> 00:36:12,390
dates of course offsets<font color="#CCCCCC"> and also</font>

628
00:36:10,530 --> 00:36:16,589
platform hash key<font color="#E5E5E5"> which is having</font>

629
00:36:12,390 --> 00:36:19,910
constructed from from the gigabyte

630
00:36:16,589 --> 00:36:22,859
update<font color="#E5E5E5"> where we're looking</font><font color="#CCCCCC"> for now and</font>

631
00:36:19,910 --> 00:36:27,230
we<font color="#CCCCCC"> already actually</font><font color="#E5E5E5"> seen this coverage</font>

632
00:36:22,859 --> 00:36:31,170
for a baby<font color="#E5E5E5"> for specific</font><font color="#CCCCCC"> BIOS update</font>

633
00:36:27,230 --> 00:36:35,310
<font color="#CCCCCC">here's a bit information</font><font color="#E5E5E5"> how how</font>

634
00:36:31,170 --> 00:36:39,839
actually<font color="#E5E5E5"> from wisdom</font><font color="#CCCCCC"> am</font><font color="#E5E5E5"> vivoli dates at</font>

635
00:36:35,310 --> 00:36:43,380
<font color="#CCCCCC">the flow and</font><font color="#E5E5E5"> we do have different things</font>

636
00:36:39,839 --> 00:36:46,200
<font color="#E5E5E5">the most interesting things actually</font>

637
00:36:43,380 --> 00:36:53,280
<font color="#E5E5E5">mmm driver communicates with ami</font>

638
00:36:46,200 --> 00:36:55,740
management engine over heci driver<font color="#E5E5E5"> which</font>

639
00:36:53,280 --> 00:36:58,589
is<font color="#CCCCCC"> very interesting</font><font color="#E5E5E5"> because if we do</font>

640
00:36:55,740 --> 00:37:01,470
have any<font color="#E5E5E5"> issues</font><font color="#CCCCCC"> with AMI that's mean we</font>

641
00:36:58,589 --> 00:37:04,230
can actually operating<font color="#E5E5E5"> in the same way</font>

642
00:37:01,470 --> 00:37:06,540
but from<font color="#E5E5E5"> the operating system level like</font>

643
00:37:04,230 --> 00:37:09,270
from the kernel<font color="#CCCCCC"> mode so and what</font>

644
00:37:06,540 --> 00:37:12,509
actually<font color="#CCCCCC"> verify</font><font color="#E5E5E5"> good firmware boot guard</font>

645
00:37:09,270 --> 00:37:14,730
driver does it does<font color="#E5E5E5"> actually a few</font>

646
00:37:12,510 --> 00:37:18,750
<font color="#E5E5E5">interesting things</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> find and verify a</font>

647
00:37:14,730 --> 00:37:22,500
<font color="#E5E5E5">cm we fight</font><font color="#CCCCCC"> K manifest</font><font color="#E5E5E5"> and verify boot</font>

648
00:37:18,750 --> 00:37:25,020
<font color="#E5E5E5">policies but it's do it from the</font><font color="#CCCCCC"> ISA</font>

649
00:37:22,500 --> 00:37:28,170
<font color="#CCCCCC">ma'am that's mean like we do have</font><font color="#E5E5E5"> the</font>

650
00:37:25,020 --> 00:37:32,420
state<font color="#E5E5E5"> when not all of the boot flow for</font>

651
00:37:28,170 --> 00:37:36,650
verification<font color="#E5E5E5"> is involved right and I</font>

652
00:37:32,420 --> 00:37:39,930
start<font color="#CCCCCC"> thinking about</font><font color="#E5E5E5"> how actually</font>

653
00:37:36,650 --> 00:37:41,430
different different<font color="#CCCCCC"> Falls for the boot</font>

654
00:37:39,930 --> 00:37:44,430
and reboot

655
00:37:41,430 --> 00:37:47,339
from his work and then I figuring out<font color="#E5E5E5"> so</font>

656
00:37:44,430 --> 00:37:50,160
for the sleep mode<font color="#E5E5E5"> it's not verified</font><font color="#CCCCCC"> oh</font>

657
00:37:47,340 --> 00:37:57,480
the flow<font color="#E5E5E5"> and actually just we</font><font color="#CCCCCC"> fired some</font>

658
00:37:50,160 --> 00:38:02,190
part of it<font color="#E5E5E5"> and specifically for the</font>

659
00:37:57,480 --> 00:38:05,910
black hat<font color="#CCCCCC"> I drop it this new day zero</font>

660
00:38:02,190 --> 00:38:08,610
<font color="#CCCCCC">day back and think is like already</font>

661
00:38:05,910 --> 00:38:10,740
budget for a lot<font color="#E5E5E5"> of platforms</font><font color="#CCCCCC"> but it was</font>

662
00:38:08,610 --> 00:38:13,830
funny<font color="#CCCCCC"> after my</font><font color="#E5E5E5"> talk some of the vendors</font>

663
00:38:10,740 --> 00:38:17,790
<font color="#E5E5E5">comes and says like wow we just actually</font>

664
00:38:13,830 --> 00:38:20,819
<font color="#E5E5E5">watched big budget this issue and it's</font>

665
00:38:17,790 --> 00:38:22,590
been cool because it's been<font color="#CCCCCC"> best</font>

666
00:38:20,820 --> 00:38:24,480
<font color="#CCCCCC">confirmations</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> exists in the</font>

667
00:38:22,590 --> 00:38:27,750
<font color="#E5E5E5">old web forms and hard words not</font><font color="#CCCCCC"> only</font>

668
00:38:24,480 --> 00:38:31,830
the ship gigabyte<font color="#E5E5E5"> and after a while</font>

669
00:38:27,750 --> 00:38:36,630
after<font color="#E5E5E5"> two month actually</font><font color="#CCCCCC"> Intel patch it</font>

670
00:38:31,830 --> 00:38:39,180
for<font color="#CCCCCC"> in toe knocks</font><font color="#E5E5E5"> and kudos to Alex</font><font color="#CCCCCC"> he</font>

671
00:38:36,630 --> 00:38:42,330
is found<font color="#E5E5E5"> for in turn acts boot</font><font color="#CCCCCC"> guard</font>

672
00:38:39,180 --> 00:38:45,960
bypass<font color="#E5E5E5"> based on my discoveries before</font>

673
00:38:42,330 --> 00:38:51,540
<font color="#E5E5E5">and he</font><font color="#CCCCCC"> published very detailed blog post</font>

674
00:38:45,960 --> 00:38:56,550
about<font color="#E5E5E5"> it so in my case in being target</font>

675
00:38:51,540 --> 00:39:00,029
platform based on gigabyte<font color="#CCCCCC"> it's six</font>

676
00:38:56,550 --> 00:39:02,190
<font color="#CCCCCC">generation skylake</font><font color="#E5E5E5"> with enable at fully</font>

677
00:39:00,030 --> 00:39:05,760
enable at Intel boot guard but not

678
00:39:02,190 --> 00:39:07,410
logged by hardware and<font color="#E5E5E5"> BIOS</font><font color="#CCCCCC"> guards not</font>

679
00:39:05,760 --> 00:39:11,190
enabled which is<font color="#CCCCCC"> making</font><font color="#E5E5E5"> it much</font><font color="#CCCCCC"> more</font>

680
00:39:07,410 --> 00:39:12,930
<font color="#E5E5E5">easier to bypass and I found two</font>

681
00:39:11,190 --> 00:39:15,180
vulnerabilities which is used for<font color="#CCCCCC"> this</font>

682
00:39:12,930 --> 00:39:16,980
boot guard bypass first of one it's a

683
00:39:15,180 --> 00:39:23,759
read and write access to<font color="#CCCCCC"> me</font><font color="#E5E5E5"> regions</font>

684
00:39:16,980 --> 00:39:28,980
other one<font color="#CCCCCC"> diffuse</font><font color="#E5E5E5"> it's not worked so</font><font color="#CCCCCC"> we</font>

685
00:39:23,760 --> 00:39:32,520
just showing it<font color="#CCCCCC"> is true from any info</font>

686
00:39:28,980 --> 00:39:35,310
tool so you<font color="#E5E5E5"> can see like you me access</font>

687
00:39:32,520 --> 00:39:40,710
for read and<font color="#CCCCCC"> write</font><font color="#E5E5E5"> is enable it and boot</font>

688
00:39:35,310 --> 00:39:43,200
guard is enable it<font color="#CCCCCC"> and actually</font><font color="#E5E5E5"> boot</font>

689
00:39:40,710 --> 00:39:45,390
guard is enable it<font color="#E5E5E5"> with most strongest</font>

690
00:39:43,200 --> 00:39:49,080
<font color="#CCCCCC">mode like we</font><font color="#E5E5E5"> fight and measure it boot</font>

691
00:39:45,390 --> 00:39:51,890
together but it's<font color="#E5E5E5"> not locked for the</font>

692
00:39:49,080 --> 00:39:51,890
vendor<font color="#E5E5E5"> hash key</font>

693
00:39:53,190 --> 00:40:02,320
so and also<font color="#E5E5E5"> funny part</font><font color="#CCCCCC"> gigabyte</font>

694
00:39:59,980 --> 00:40:05,140
specifically for this platform<font color="#E5E5E5"> sales</font>

695
00:40:02,320 --> 00:40:08,970
like it's very secure<font color="#CCCCCC"> it can be used in</font>

696
00:40:05,140 --> 00:40:11,259
ATMs in<font color="#E5E5E5"> like critical infrastructure</font>

697
00:40:08,970 --> 00:40:13,720
<font color="#CCCCCC">vending machine security system</font>

698
00:40:11,260 --> 00:40:16,720
governmental hospitals whatever and the

699
00:40:13,720 --> 00:40:24,339
same platform<font color="#E5E5E5"> actually used for for POC</font>

700
00:40:16,720 --> 00:40:28,720
of<font color="#CCCCCC"> ransomware how we can bypass</font><font color="#E5E5E5"> as this</font>

701
00:40:24,340 --> 00:40:32,230
platform<font color="#E5E5E5"> mmm with a boot guard so we do</font>

702
00:40:28,720 --> 00:40:35,770
have a firmware update image which<font color="#CCCCCC"> is</font>

703
00:40:32,230 --> 00:40:39,130
<font color="#E5E5E5">not properly authenticated</font><font color="#CCCCCC"> and we do</font>

704
00:40:35,770 --> 00:40:40,930
have like initial good block<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is we</font>

705
00:40:39,130 --> 00:40:43,630
can modify<font color="#E5E5E5"> because like the</font>

706
00:40:40,930 --> 00:40:48,930
configuration is doesn't<font color="#CCCCCC"> lock</font><font color="#E5E5E5"> so we can</font>

707
00:40:43,630 --> 00:40:48,930
modify came<font color="#E5E5E5"> in efest we can modify</font>

708
00:40:49,140 --> 00:40:55,629
<font color="#E5E5E5">vendor hash key</font><font color="#CCCCCC"> om hash key inside the</font>

709
00:40:52,900 --> 00:40:59,800
firmware program<font color="#E5E5E5"> and views and then we</font>

710
00:40:55,630 --> 00:41:02,920
can log with rootkit<font color="#E5E5E5"> or just disable it</font>

711
00:40:59,800 --> 00:41:07,300
whatever<font color="#E5E5E5"> it will be</font><font color="#CCCCCC"> not enabled and</font><font color="#E5E5E5"> will</font>

712
00:41:02,920 --> 00:41:09,760
be allow us to bypass the secure boot

713
00:41:07,300 --> 00:41:14,890
from<font color="#CCCCCC"> SMM and don't care</font><font color="#E5E5E5"> about the boot</font>

714
00:41:09,760 --> 00:41:19,240
guard<font color="#E5E5E5"> so if we don't have the root of</font>

715
00:41:14,890 --> 00:41:23,319
trust into<font color="#E5E5E5"> the hardware</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> actually</font>

716
00:41:19,240 --> 00:41:26,399
means it's very not<font color="#CCCCCC"> very easy</font><font color="#E5E5E5"> but it's</font>

717
00:41:23,320 --> 00:41:30,190
<font color="#CCCCCC">possible</font><font color="#E5E5E5"> to bypass from the farmer</font>

718
00:41:26,400 --> 00:41:33,340
<font color="#E5E5E5">doesn't matter it's like you use</font>

719
00:41:30,190 --> 00:41:37,000
verified boot<font color="#E5E5E5"> plus</font><font color="#CCCCCC"> moderate boot doesn't</font>

720
00:41:33,340 --> 00:41:41,290
<font color="#CCCCCC">matter</font><font color="#E5E5E5"> it can be bypassed</font><font color="#CCCCCC"> so here is the</font>

721
00:41:37,000 --> 00:41:44,170
<font color="#E5E5E5">Intel statement which is actually in</font>

722
00:41:41,290 --> 00:41:50,529
<font color="#E5E5E5">topi short sent to me before my</font>

723
00:41:44,170 --> 00:41:52,660
presentations and they provide they

724
00:41:50,530 --> 00:41:55,690
provide some requirements to the

725
00:41:52,660 --> 00:41:58,420
hardware vendors and they clearly say to

726
00:41:55,690 --> 00:42:03,400
them like the root of trust<font color="#E5E5E5"> should be</font>

727
00:41:58,420 --> 00:42:06,460
walked inside the<font color="#CCCCCC"> hardware but not a lot</font>

728
00:42:03,400 --> 00:42:09,579
of hardware vendors really cares right

729
00:42:06,460 --> 00:42:13,750
and here is actually<font color="#CCCCCC"> a gigabyte</font>

730
00:42:09,579 --> 00:42:16,799
statement about the issue so<font color="#CCCCCC"> they</font>

731
00:42:13,750 --> 00:42:21,130
<font color="#CCCCCC">released</font><font color="#E5E5E5"> the tool which is can be</font><font color="#CCCCCC"> lock</font>

732
00:42:16,799 --> 00:42:22,960
the fuse<font color="#E5E5E5"> but how many users very really</font>

733
00:42:21,130 --> 00:42:25,390
<font color="#CCCCCC">done what this tool and use it for work</font>

734
00:42:22,960 --> 00:42:32,349
the fuse<font color="#CCCCCC"> right I think it's like really</font>

735
00:42:25,390 --> 00:42:35,379
<font color="#CCCCCC">small numbers</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's small update for</font>

736
00:42:32,349 --> 00:42:39,099
this presentation<font color="#CCCCCC"> just a few days ago I</font>

737
00:42:35,380 --> 00:42:42,819
released update for<font color="#E5E5E5"> you fi tool which is</font>

738
00:42:39,099 --> 00:42:45,640
made a<font color="#CCCCCC"> verification for good guard</font><font color="#E5E5E5"> and</font>

739
00:42:42,819 --> 00:42:47,920
showing the problems if<font color="#E5E5E5"> I BB doesn't</font>

740
00:42:45,640 --> 00:42:51,430
cover some of<font color="#E5E5E5"> the models which is can be</font>

741
00:42:47,920 --> 00:42:54,760
used<font color="#CCCCCC"> for attack here is actually github</font>

742
00:42:51,430 --> 00:42:58,049
link to specific release<font color="#CCCCCC"> and here is</font>

743
00:42:54,760 --> 00:43:00,970
compiled binary<font color="#CCCCCC"> if you don't trust</font>

744
00:42:58,049 --> 00:43:02,829
<font color="#E5E5E5">comply what binary just</font><font color="#CCCCCC"> compile yourself</font>

745
00:43:00,970 --> 00:43:04,930
from the github<font color="#E5E5E5"> from the source code and</font>

746
00:43:02,829 --> 00:43:07,240
here is a blog post which<font color="#CCCCCC"> is discussed</font>

747
00:43:04,930 --> 00:43:11,618
all the things<font color="#E5E5E5"> and how this tool can be</font>

748
00:43:07,240 --> 00:43:16,180
used and let's talk<font color="#E5E5E5"> a bit</font><font color="#CCCCCC"> about the</font><font color="#E5E5E5"> BIOS</font>

749
00:43:11,619 --> 00:43:17,770
guard<font color="#E5E5E5"> so bias guard and why it's</font>

750
00:43:16,180 --> 00:43:19,390
important actually<font color="#E5E5E5"> to have the bias</font>

751
00:43:17,770 --> 00:43:21,930
guard and boot guard together a

752
00:43:19,390 --> 00:43:24,970
neighborhood<font color="#E5E5E5"> on the same hardware so</font>

753
00:43:21,930 --> 00:43:29,558
<font color="#CCCCCC">actually by his</font><font color="#E5E5E5"> guard it's harming the</font>

754
00:43:24,970 --> 00:43:32,890
<font color="#E5E5E5">bias update</font><font color="#CCCCCC"> routing</font><font color="#E5E5E5"> so and if the</font><font color="#CCCCCC"> bias</font>

755
00:43:29,559 --> 00:43:39,940
guard<font color="#E5E5E5"> is enabled access control it by</font>

756
00:43:32,890 --> 00:43:44,799
ECMs must guard<font color="#CCCCCC"> ACM and actually</font><font color="#E5E5E5"> bias</font>

757
00:43:39,940 --> 00:43:50,230
<font color="#E5E5E5">update out antic ated from from</font><font color="#CCCCCC"> micro</font>

758
00:43:44,799 --> 00:43:52,509
<font color="#CCCCCC">code so it's a</font><font color="#E5E5E5"> picture from</font><font color="#CCCCCC"> inter</font>

759
00:43:50,230 --> 00:43:54,789
documentation which<font color="#CCCCCC"> is also</font><font color="#E5E5E5"> doesn't say</font>

760
00:43:52,510 --> 00:43:56,140
<font color="#CCCCCC">this a lot</font><font color="#E5E5E5"> and I looked in specific and</font>

761
00:43:54,789 --> 00:43:59,140
<font color="#CCCCCC">will</font><font color="#E5E5E5"> in duration from american</font>

762
00:43:56,140 --> 00:44:01,868
megatrends<font color="#E5E5E5"> where i discovered how many</font>

763
00:43:59,140 --> 00:44:05,980
things responsible for the<font color="#CCCCCC"> bus</font><font color="#E5E5E5"> guard we</font>

764
00:44:01,869 --> 00:44:11,319
do have into the firmware and here is

765
00:44:05,980 --> 00:44:15,970
like seven different drivers<font color="#CCCCCC"> ufi drivers</font>

766
00:44:11,319 --> 00:44:19,390
exist<font color="#E5E5E5"> on different stages phases of</font>

767
00:44:15,970 --> 00:44:20,839
booting<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's actually huge</font><font color="#CCCCCC"> attacks</font>

768
00:44:19,390 --> 00:44:24,098
your face

769
00:44:20,839 --> 00:44:26,689
which is will be<font color="#E5E5E5"> a bit more detail at</font>

770
00:44:24,099 --> 00:44:34,369
discussed in the<font color="#E5E5E5"> zero</font><font color="#CCCCCC"> night's</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> in</font>

771
00:44:26,689 --> 00:44:36,949
the next three weeks<font color="#E5E5E5"> so and here's some</font>

772
00:44:34,369 --> 00:44:40,669
details<font color="#CCCCCC"> what</font><font color="#E5E5E5"> this kind of models does</font>

773
00:44:36,949 --> 00:44:43,459
and we also see like things like parts

774
00:44:40,669 --> 00:44:46,368
update image parser for<font color="#E5E5E5"> recovery process</font>

775
00:44:43,459 --> 00:44:49,189
<font color="#E5E5E5">we do have like</font><font color="#CCCCCC"> BIOS guard policy</font>

776
00:44:46,369 --> 00:44:51,649
<font color="#CCCCCC">override model</font><font color="#E5E5E5"> we do have capsule update</font>

777
00:44:49,189 --> 00:44:57,558
verification which is also<font color="#E5E5E5"> pretty like</font>

778
00:44:51,649 --> 00:45:05,779
complex parser inside<font color="#E5E5E5"> and we do have SMI</font>

779
00:44:57,559 --> 00:45:09,649
handlers here right<font color="#CCCCCC"> so BIOS guard has</font>

780
00:45:05,779 --> 00:45:11,509
like command for<font color="#E5E5E5"> comments for like</font>

781
00:45:09,649 --> 00:45:14,179
different stages<font color="#E5E5E5"> like platform</font>

782
00:45:11,509 --> 00:45:18,199
<font color="#E5E5E5">initialization and for is a mem for</font>

783
00:45:14,179 --> 00:45:20,389
delivering the updates and more details

784
00:45:18,199 --> 00:45:22,609
I<font color="#CCCCCC"> will talk</font><font color="#E5E5E5"> about on</font><font color="#CCCCCC"> 0 nights and</font><font color="#E5E5E5"> I want</font>

785
00:45:20,389 --> 00:45:26,779
to<font color="#E5E5E5"> actually promote as the</font><font color="#CCCCCC"> huh quest</font>

786
00:45:22,609 --> 00:45:30,229
which<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a kind</font><font color="#E5E5E5"> of CTF for foreign des</font>

787
00:45:26,779 --> 00:45:32,749
videos which will<font color="#CCCCCC"> be started</font><font color="#E5E5E5"> next</font><font color="#CCCCCC"> Monday</font>

788
00:45:30,229 --> 00:45:34,819
<font color="#E5E5E5">this here is</font><font color="#CCCCCC"> the links and if you want</font>

789
00:45:32,749 --> 00:45:39,468
to compete with<font color="#E5E5E5"> the Russian hackers go</font>

790
00:45:34,819 --> 00:45:41,509
here and try<font color="#CCCCCC"> to get some</font><font color="#E5E5E5"> prizes so come</font>

791
00:45:39,469 --> 00:45:45,889
<font color="#CCCCCC">2-0</font><font color="#E5E5E5"> nights to hear more details about</font>

792
00:45:41,509 --> 00:45:47,539
<font color="#E5E5E5">the</font><font color="#CCCCCC"> BIOS guard and here is the link with</font>

793
00:45:45,889 --> 00:45:51,169
<font color="#E5E5E5">the presentation and all the stuff about</font>

794
00:45:47,539 --> 00:45:54,879
<font color="#E5E5E5">this research thank you</font><font color="#CCCCCC"> very much for</font>

795
00:45:51,169 --> 00:45:58,578
<font color="#E5E5E5">your attention and do have any questions</font>

796
00:45:54,879 --> 00:46:01,549
anyway if<font color="#CCCCCC"> you not have it now I will be</font>

797
00:45:58,579 --> 00:46:03,589
<font color="#E5E5E5">around</font><font color="#CCCCCC"> during the conference</font><font color="#E5E5E5"> and come to</font>

798
00:46:01,549 --> 00:46:06,559
me to discuss more issues about the

799
00:46:03,589 --> 00:46:11,570
<font color="#E5E5E5">farmer</font><font color="#CCCCCC"> or whatever</font><font color="#E5E5E5"> so here is my Twitter</font>

800
00:46:06,559 --> 00:46:20,489
<font color="#E5E5E5">and thank you very much</font><font color="#CCCCCC"> again</font>

801
00:46:11,570 --> 00:46:20,489
[Applause]

