1
00:00:11,170 --> 00:00:19,939
hi everyone my name<font color="#E5E5E5"> is Sergey</font><font color="#CCCCCC"> I want to</font>

2
00:00:16,340 --> 00:00:22,700
discuss a browser feature that's there

3
00:00:19,940 --> 00:00:26,110
in the<font color="#CCCCCC"> wild for eight years but nobody</font>

4
00:00:22,700 --> 00:00:30,619
<font color="#E5E5E5">is really</font><font color="#CCCCCC"> using</font><font color="#E5E5E5"> it and discussed</font><font color="#CCCCCC"> some</font>

5
00:00:26,110 --> 00:00:33,830
reasons why<font color="#E5E5E5"> initial implementation was</font>

6
00:00:30,620 --> 00:00:36,530
changed a lot after<font color="#CCCCCC"> some time and now</font>

7
00:00:33,830 --> 00:00:39,140
it's in the<font color="#CCCCCC"> version</font><font color="#E5E5E5"> 3 state from</font><font color="#CCCCCC"> version</font>

8
00:00:36,530 --> 00:00:42,110
<font color="#E5E5E5">1 and just discuss some bypasses of</font>

9
00:00:39,140 --> 00:00:44,659
content security policy and how to make

10
00:00:42,110 --> 00:00:47,750
<font color="#E5E5E5">it work for</font><font color="#CCCCCC"> you and without</font><font color="#E5E5E5"> any bypasses</font>

11
00:00:44,659 --> 00:00:51,559
and being sure that<font color="#E5E5E5"> it does what it's</font>

12
00:00:47,750 --> 00:00:54,890
supposed<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> so content security</font>

13
00:00:51,559 --> 00:01:00,489
policies is a basically<font color="#CCCCCC"> the mechanism</font>

14
00:00:54,890 --> 00:01:06,920
for<font color="#CCCCCC"> a web server</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> tell a browser to</font>

15
00:01:00,489 --> 00:01:09,649
bound or limit the<font color="#CCCCCC"> webpage</font><font color="#E5E5E5"> that is being</font>

16
00:01:06,920 --> 00:01:11,330
rendered in the browser<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example well</font>

17
00:01:09,650 --> 00:01:12,950
we can go<font color="#E5E5E5"> over a couple of examples</font><font color="#CCCCCC"> like</font>

18
00:01:11,330 --> 00:01:17,210
<font color="#E5E5E5">basically content</font><font color="#CCCCCC"> security policy is a</font>

19
00:01:12,950 --> 00:01:19,070
HTTP header response header that header

20
00:01:17,210 --> 00:01:21,740
name is content security policy and then

21
00:01:19,070 --> 00:01:23,329
you have this simple grammar for to

22
00:01:21,740 --> 00:01:28,810
describe the content security policy

23
00:01:23,329 --> 00:01:32,869
it basically semicolon separated

24
00:01:28,810 --> 00:01:35,630
directive name and some values value

25
00:01:32,869 --> 00:01:38,090
<font color="#E5E5E5">sequence so for example here is default</font>

26
00:01:35,630 --> 00:01:41,359
source self<font color="#E5E5E5"> and script script source</font>

27
00:01:38,090 --> 00:01:44,539
self<font color="#E5E5E5"> code jquery.com</font><font color="#CCCCCC"> which means that we</font>

28
00:01:41,359 --> 00:01:46,548
allow any resource to be loaded<font color="#E5E5E5"> only</font>

29
00:01:44,539 --> 00:01:48,640
from itself from the origin of<font color="#E5E5E5"> the</font>

30
00:01:46,549 --> 00:01:51,590
<font color="#CCCCCC">webpage that</font><font color="#E5E5E5"> was served</font>

31
00:01:48,640 --> 00:01:53,439
except scripts for scripts we want it to

32
00:01:51,590 --> 00:01:57,530
be loaded from self<font color="#E5E5E5"> and code jquery.com</font>

33
00:01:53,439 --> 00:02:05,380
<font color="#E5E5E5">I'll just go really quick over a simple</font>

34
00:01:57,530 --> 00:02:11,080
example we had to switch laptops so I

35
00:02:05,380 --> 00:02:11,079
want<font color="#CCCCCC"> to open</font><font color="#E5E5E5"> this file to show</font>

36
00:02:14,560 --> 00:02:20,690
<font color="#E5E5E5">okay I'm not</font><font color="#CCCCCC"> that familiar in Portuguese</font>

37
00:02:17,200 --> 00:02:25,390
<font color="#E5E5E5">tell me oh</font><font color="#CCCCCC"> ok TextWrangler</font><font color="#E5E5E5"> should work</font>

38
00:02:20,690 --> 00:02:29,170
here<font color="#E5E5E5"> it's very</font><font color="#CCCCCC"> simple HTTP HTML page I</font>

39
00:02:25,390 --> 00:02:29,170
hope<font color="#E5E5E5"> you see it yep</font>

40
00:02:30,580 --> 00:02:36,350
<font color="#E5E5E5">maybe you don't but content security</font>

41
00:02:34,190 --> 00:02:41,829
post policy can be<font color="#E5E5E5"> delivered both as</font>

42
00:02:36,350 --> 00:02:45,049
HTTP header<font color="#E5E5E5"> or as a meta http-equiv tag</font>

43
00:02:41,830 --> 00:02:47,750
http-equiv value of meta tag<font color="#E5E5E5"> so in this</font>

44
00:02:45,050 --> 00:02:49,940
case we're just<font color="#E5E5E5"> reading the HTML file</font>

45
00:02:47,750 --> 00:02:51,709
from the<font color="#E5E5E5"> fire HTML file from the disk</font>

46
00:02:49,940 --> 00:02:55,340
<font color="#E5E5E5">and we're setting content security</font>

47
00:02:51,709 --> 00:02:56,600
policy<font color="#E5E5E5"> to be script source</font><font color="#CCCCCC"> itself</font><font color="#E5E5E5"> and we</font>

48
00:02:55,340 --> 00:03:03,290
don't have any scripts on this<font color="#E5E5E5"> web page</font>

49
00:02:56,600 --> 00:03:05,090
<font color="#CCCCCC">and we'll try to load it here we load</font><font color="#E5E5E5"> it</font>

50
00:03:03,290 --> 00:03:08,030
the<font color="#CCCCCC"> web page</font><font color="#E5E5E5"> there's no nothing wrong</font>

51
00:03:05,090 --> 00:03:09,650
<font color="#E5E5E5">now we try we can pretend that there is</font>

52
00:03:08,030 --> 00:03:11,780
some injection on the<font color="#E5E5E5"> web page</font><font color="#CCCCCC"> and we'll</font>

53
00:03:09,650 --> 00:03:14,239
try<font color="#E5E5E5"> to inject a script tag on the web</font>

54
00:03:11,780 --> 00:03:16,850
<font color="#E5E5E5">page so we're creating programmatically</font>

55
00:03:14,239 --> 00:03:18,350
a script element<font color="#E5E5E5"> setting the text</font><font color="#CCCCCC"> of</font>

56
00:03:16,850 --> 00:03:20,959
that<font color="#E5E5E5"> element and trying to append that</font>

57
00:03:18,350 --> 00:03:24,320
element to<font color="#E5E5E5"> the child to the</font><font color="#CCCCCC"> body of the</font>

58
00:03:20,959 --> 00:03:27,170
<font color="#CCCCCC">document here we got a</font><font color="#E5E5E5"> content security</font>

59
00:03:24,320 --> 00:03:29,570
policy violation because browser<font color="#E5E5E5"> didn't</font>

60
00:03:27,170 --> 00:03:31,518
let that<font color="#CCCCCC"> script to</font><font color="#E5E5E5"> be executed because</font>

61
00:03:29,570 --> 00:03:34,489
<font color="#E5E5E5">it's against content security policy</font>

62
00:03:31,519 --> 00:03:38,019
<font color="#E5E5E5">that came with the page and it actually</font>

63
00:03:34,489 --> 00:03:40,640
<font color="#E5E5E5">is</font><font color="#CCCCCC"> very verbose</font><font color="#E5E5E5"> and tells you what to do</font>

64
00:03:38,019 --> 00:03:43,850
<font color="#E5E5E5">tell</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> the reason why the inline script</font>

65
00:03:40,640 --> 00:03:46,339
was not<font color="#CCCCCC"> executed</font><font color="#E5E5E5"> the alert</font><font color="#CCCCCC"> 1 and tells</font>

66
00:03:43,850 --> 00:03:48,350
you<font color="#E5E5E5"> what to do you can</font><font color="#CCCCCC"> either have</font>

67
00:03:46,340 --> 00:03:51,890
unsafe inline keyword and the content

68
00:03:48,350 --> 00:03:53,480
security policy or specify exact hash of

69
00:03:51,890 --> 00:03:55,880
the content<font color="#E5E5E5"> that you are trying to</font>

70
00:03:53,480 --> 00:03:57,230
inject<font color="#E5E5E5"> and obviously attacker is not</font>

71
00:03:55,880 --> 00:03:59,269
<font color="#CCCCCC">going to be able to do</font><font color="#E5E5E5"> that because</font>

72
00:03:57,230 --> 00:04:01,070
attacker would need to<font color="#E5E5E5"> know what we need</font>

73
00:03:59,269 --> 00:04:03,140
to be able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> modify the content</font>

74
00:04:01,070 --> 00:04:05,540
security policy in order to<font color="#E5E5E5"> inject that</font>

75
00:04:03,140 --> 00:04:07,429
inline script or<font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to specify a</font>

76
00:04:05,540 --> 00:04:13,820
nonce<font color="#CCCCCC"> we'll go back</font><font color="#E5E5E5"> we'll</font><font color="#CCCCCC"> come back to</font>

77
00:04:07,430 --> 00:04:19,100
<font color="#E5E5E5">nonces later</font><font color="#CCCCCC"> ok back to</font><font color="#E5E5E5"> the preview</font>

78
00:04:13,820 --> 00:04:22,849
<font color="#CCCCCC">ideas yeah yeah here's pretty much the</font>

79
00:04:19,100 --> 00:04:28,040
<font color="#E5E5E5">same example like you intend to load the</font>

80
00:04:22,849 --> 00:04:31,219
<font color="#CCCCCC">Cool J's</font><font color="#E5E5E5"> script and jQuery and inline</font>

81
00:04:28,040 --> 00:04:33,890
Injection that<font color="#CCCCCC"> ransom function will be</font>

82
00:04:31,220 --> 00:04:35,300
blocked and third-party<font color="#E5E5E5"> script that is</font>

83
00:04:33,890 --> 00:04:37,490
not<font color="#CCCCCC"> whitelisted by content security</font>

84
00:04:35,300 --> 00:04:39,980
policy because<font color="#E5E5E5"> we don't have pad comm</font>

85
00:04:37,490 --> 00:04:42,110
anywhere listed in the policy<font color="#E5E5E5"> is not</font>

86
00:04:39,980 --> 00:04:50,780
going to be loaded<font color="#E5E5E5"> so it's kind of cool</font>

87
00:04:42,110 --> 00:04:52,610
and that's all you need right<font color="#E5E5E5"> sort of so</font>

88
00:04:50,780 --> 00:04:54,440
content security<font color="#CCCCCC"> policy level one</font>

89
00:04:52,610 --> 00:04:58,600
<font color="#E5E5E5">version</font><font color="#CCCCCC"> one which is implemented</font>

90
00:04:54,440 --> 00:05:02,780
currently by edge I think<font color="#CCCCCC"> each browser</font>

91
00:04:58,600 --> 00:05:06,830
<font color="#CCCCCC">only</font><font color="#E5E5E5"> because they are always like slow</font>

92
00:05:02,780 --> 00:05:08,210
<font color="#E5E5E5">in adopting modern standards the policy</font>

93
00:05:06,830 --> 00:05:11,800
implements the content security policy

94
00:05:08,210 --> 00:05:16,340
<font color="#CCCCCC">can control these following resources</font>

95
00:05:11,800 --> 00:05:18,620
<font color="#CCCCCC">connect source is controlling where XML</font>

96
00:05:16,340 --> 00:05:21,619
HTTP requests can connect to or like

97
00:05:18,620 --> 00:05:24,640
<font color="#CCCCCC">WebSockets</font><font color="#E5E5E5"> for example or frame source</font>

98
00:05:21,620 --> 00:05:28,700
controls where frames can be<font color="#CCCCCC"> loaded from</font>

99
00:05:24,640 --> 00:05:32,000
images for images fonts<font color="#E5E5E5"> media objects is</font>

100
00:05:28,700 --> 00:05:34,039
a cool<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> to control where plugins</font>

101
00:05:32,000 --> 00:05:36,050
can<font color="#CCCCCC"> be loaded into web web page and like</font>

102
00:05:34,040 --> 00:05:38,390
normally you<font color="#CCCCCC"> would say</font><font color="#E5E5E5"> object</font><font color="#CCCCCC"> source</font>

103
00:05:36,050 --> 00:05:42,200
<font color="#E5E5E5">none meaning you don't want your web</font>

104
00:05:38,390 --> 00:05:45,080
page<font color="#CCCCCC"> to load any flash plugins or Java</font>

105
00:05:42,200 --> 00:05:47,240
applets or anything like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and script</font>

106
00:05:45,080 --> 00:05:50,150
and style and that's pretty<font color="#E5E5E5"> much it</font>

107
00:05:47,240 --> 00:05:54,110
<font color="#E5E5E5">and if anything any of these directives</font>

108
00:05:50,150 --> 00:05:56,000
are not<font color="#CCCCCC"> explicitly</font><font color="#E5E5E5"> in the policy browser</font>

109
00:05:54,110 --> 00:05:58,310
will use<font color="#CCCCCC"> whatever is in the default</font>

110
00:05:56,000 --> 00:05:59,720
source it<font color="#CCCCCC"> will default</font><font color="#E5E5E5"> for example if</font>

111
00:05:58,310 --> 00:06:02,170
you<font color="#E5E5E5"> don't specify phone source it will</font>

112
00:05:59,720 --> 00:06:06,680
<font color="#CCCCCC">be fault to the</font><font color="#E5E5E5"> value of default source</font>

113
00:06:02,170 --> 00:06:08,360
<font color="#CCCCCC">we will see an example and in</font><font color="#E5E5E5"> level</font><font color="#CCCCCC"> 1 it</font>

114
00:06:06,680 --> 00:06:13,600
was allowed<font color="#E5E5E5"> to load content security</font>

115
00:06:08,360 --> 00:06:16,520
policy only<font color="#E5E5E5"> through HTTP headers and</font>

116
00:06:13,600 --> 00:06:18,920
yeah<font color="#E5E5E5"> those are some</font><font color="#CCCCCC"> details that are not</font>

117
00:06:16,520 --> 00:06:21,859
<font color="#E5E5E5">really interesting and in CSP level 2</font>

118
00:06:18,920 --> 00:06:23,660
there were some expansion to the policy

119
00:06:21,860 --> 00:06:25,790
<font color="#E5E5E5">you can now control for</font><font color="#CCCCCC"> example where</font>

120
00:06:23,660 --> 00:06:27,560
form can be submitted<font color="#CCCCCC"> so basically if</font>

121
00:06:25,790 --> 00:06:30,110
you<font color="#CCCCCC"> have an injection and you have a web</font>

122
00:06:27,560 --> 00:06:33,200
<font color="#E5E5E5">page with a form which is supposed</font><font color="#CCCCCC"> to</font>

123
00:06:30,110 --> 00:06:36,980
submit<font color="#E5E5E5"> the form to some URL attacker</font>

124
00:06:33,200 --> 00:06:42,440
will not be able<font color="#CCCCCC"> to override the form</font>

125
00:06:36,980 --> 00:06:47,480
submission URL at<font color="#E5E5E5"> the action URL frame</font>

126
00:06:42,440 --> 00:06:50,290
<font color="#CCCCCC">Ancestors is a replacement for ex frame</font>

127
00:06:47,480 --> 00:06:52,820
options header<font color="#E5E5E5"> so now you can specify</font>

128
00:06:50,290 --> 00:06:55,190
who can frame your web page through

129
00:06:52,820 --> 00:06:57,440
frame<font color="#CCCCCC"> Ancestors directive and it's like</font>

130
00:06:55,190 --> 00:07:00,110
implemented properly not like<font color="#E5E5E5"> ex frame</font>

131
00:06:57,440 --> 00:07:02,900
options where if you have for example

132
00:07:00,110 --> 00:07:05,390
<font color="#E5E5E5">two nested frames then browser will</font>

133
00:07:02,900 --> 00:07:12,280
ignore<font color="#E5E5E5"> anything other than the first</font>

134
00:07:05,390 --> 00:07:12,280
frame<font color="#CCCCCC"> base URI</font><font color="#E5E5E5"> allows you to define</font><font color="#CCCCCC"> the</font>

135
00:07:13,990 --> 00:07:20,720
basically<font color="#CCCCCC"> youyou hard-code</font><font color="#E5E5E5"> what is the</font>

136
00:07:18,050 --> 00:07:22,220
base tag of<font color="#CCCCCC"> your webpage the base tag is</font>

137
00:07:20,720 --> 00:07:26,360
<font color="#CCCCCC">used to resolve all the you are a</font>

138
00:07:22,220 --> 00:07:29,110
relative<font color="#CCCCCC"> URLs on the webpage and and so</font>

139
00:07:26,360 --> 00:07:32,690
on<font color="#E5E5E5"> there is nothing</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> like exciting</font>

140
00:07:29,110 --> 00:07:36,710
<font color="#E5E5E5">and there are some and we think what are</font>

141
00:07:32,690 --> 00:07:39,140
<font color="#E5E5E5">the changes yeah for example yeah the</font>

142
00:07:36,710 --> 00:07:41,479
very important change in CSP<font color="#CCCCCC"> two was</font>

143
00:07:39,140 --> 00:07:44,270
they expanded the source expression to

144
00:07:41,480 --> 00:07:47,570
<font color="#E5E5E5">be not just origin like in the example</font>

145
00:07:44,270 --> 00:07:50,030
we<font color="#CCCCCC"> saw here that I'm</font><font color="#E5E5E5"> saying code jQuery</font>

146
00:07:47,570 --> 00:07:52,430
<font color="#E5E5E5">comm which means anything from code</font>

147
00:07:50,030 --> 00:07:55,309
jQuery<font color="#E5E5E5"> comm doesn't matter what the HTTP</font>

148
00:07:52,430 --> 00:07:58,910
scheme is is it HTTP or<font color="#E5E5E5"> HTTPS anything</font>

149
00:07:55,310 --> 00:08:01,070
will be<font color="#E5E5E5"> allowed to be loaded but in HTTP</font>

150
00:07:58,910 --> 00:08:03,020
<font color="#CCCCCC">2 you can now specify the path to the</font>

151
00:08:01,070 --> 00:08:04,700
resource<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> lock down a specific</font>

152
00:08:03,020 --> 00:08:05,990
<font color="#E5E5E5">resource</font><font color="#CCCCCC"> and we'll see why it's</font>

153
00:08:04,700 --> 00:08:10,340
important later

154
00:08:05,990 --> 00:08:12,830
<font color="#CCCCCC">oh and</font><font color="#E5E5E5"> level</font><font color="#CCCCCC"> 2 introduced</font><font color="#E5E5E5"> nonces and</font>

155
00:08:10,340 --> 00:08:14,750
hashes now you can specify a hash of<font color="#E5E5E5"> a</font>

156
00:08:12,830 --> 00:08:17,090
resource<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you are expecting</font><font color="#CCCCCC"> to</font>

157
00:08:14,750 --> 00:08:22,910
<font color="#E5E5E5">receive from some</font><font color="#CCCCCC"> third party server or</font>

158
00:08:17,090 --> 00:08:26,690
first party server<font color="#CCCCCC"> and we'll go back to</font>

159
00:08:22,910 --> 00:08:28,520
what security<font color="#E5E5E5"> policy violation is and</font>

160
00:08:26,690 --> 00:08:31,640
basically<font color="#CCCCCC"> these are directives that</font><font color="#E5E5E5"> are</font>

161
00:08:28,520 --> 00:08:36,140
supported in CSP 3 which<font color="#CCCCCC"> is the current</font>

162
00:08:31,640 --> 00:08:37,490
state<font color="#E5E5E5"> of content security policy and if</font>

163
00:08:36,140 --> 00:08:39,919
you<font color="#CCCCCC"> wonder who is using content</font><font color="#E5E5E5"> security</font>

164
00:08:37,490 --> 00:08:42,020
policy<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the major guys are using it</font>

165
00:08:39,919 --> 00:08:44,329
like Google's any<font color="#E5E5E5"> website any website</font>

166
00:08:42,020 --> 00:08:46,520
served by Google is using content

167
00:08:44,330 --> 00:08:49,520
<font color="#E5E5E5">security policy very extensively like</font>

168
00:08:46,520 --> 00:08:50,010
Gmail or<font color="#CCCCCC"> Google Maps</font><font color="#E5E5E5"> or anything pretty</font>

169
00:08:49,520 --> 00:08:52,800
much

170
00:08:50,010 --> 00:08:55,560
<font color="#E5E5E5">it's just if you go to google.com and</font>

171
00:08:52,800 --> 00:08:57,630
look at<font color="#E5E5E5"> that response headers there</font>

172
00:08:55,560 --> 00:09:00,029
might be no CSP at all because they will

173
00:08:57,630 --> 00:09:06,029
enable CSP after you authenticate<font color="#CCCCCC"> to the</font>

174
00:09:00,029 --> 00:09:09,899
website<font color="#E5E5E5"> yeah new directive directives</font>

175
00:09:06,029 --> 00:09:14,180
introduced in level<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> this is the</font>

176
00:09:09,899 --> 00:09:16,350
<font color="#E5E5E5">support like</font><font color="#CCCCCC"> can I use website</font><font color="#E5E5E5"> basically</font>

177
00:09:14,180 --> 00:09:19,349
level<font color="#CCCCCC"> 1 is supported by all the</font>

178
00:09:16,350 --> 00:09:23,850
<font color="#CCCCCC">browser's expect except Opera Mini which</font>

179
00:09:19,350 --> 00:09:26,850
is not really a browser<font color="#CCCCCC"> level 2</font><font color="#E5E5E5"> is</font>

180
00:09:23,850 --> 00:09:33,980
supported by everyone except Internet

181
00:09:26,850 --> 00:09:36,389
Explorer which<font color="#CCCCCC"> is I think</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> days and</font>

182
00:09:33,980 --> 00:09:39,000
if you want<font color="#E5E5E5"> details about content</font>

183
00:09:36,389 --> 00:09:41,329
<font color="#CCCCCC">security policy</font><font color="#E5E5E5"> actually I personally</font>

184
00:09:39,000 --> 00:09:44,550
spend<font color="#E5E5E5"> lots of</font><font color="#CCCCCC"> time to make the</font>

185
00:09:41,329 --> 00:09:46,649
specification be readable<font color="#E5E5E5"> by by a</font>

186
00:09:44,550 --> 00:09:50,790
developer or<font color="#E5E5E5"> by a like penetration</font>

187
00:09:46,649 --> 00:09:54,690
tester and do not go to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> official</font>

188
00:09:50,790 --> 00:09:58,639
link official link is this w3c w3.org<font color="#E5E5E5"> TR</font>

189
00:09:54,690 --> 00:10:02,250
TR stands for technical review I think

190
00:09:58,639 --> 00:10:04,550
<font color="#E5E5E5">CSP don't go there because</font><font color="#CCCCCC"> even on who</font>

191
00:10:02,250 --> 00:10:09,300
is the<font color="#E5E5E5"> maintainer of HTML specification</font>

192
00:10:04,550 --> 00:10:15,750
says the<font color="#CCCCCC"> up to date specification is</font>

193
00:10:09,300 --> 00:10:21,380
hosted at this URL<font color="#E5E5E5"> w3c</font><font color="#CCCCCC"> Gita bio</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> yeah</font>

194
00:10:15,750 --> 00:10:21,380
he R stands<font color="#E5E5E5"> for trash in their slang</font>

195
00:10:21,620 --> 00:10:25,769
this is not really interesting this<font color="#CCCCCC"> is</font>

196
00:10:23,819 --> 00:10:29,610
<font color="#E5E5E5">the timeline where certain directives</font>

197
00:10:25,769 --> 00:10:32,930
were implemented the I think<font color="#CCCCCC"> in</font><font color="#E5E5E5"> chrome</font>

198
00:10:29,610 --> 00:10:35,639
<font color="#E5E5E5">ok worker source was implemented in 56</font>

199
00:10:32,930 --> 00:10:38,959
<font color="#CCCCCC">that's I think the freshest directive</font>

200
00:10:35,639 --> 00:10:41,519
<font color="#CCCCCC">that was implemented by</font><font color="#E5E5E5"> chrome 49</font>

201
00:10:38,959 --> 00:10:43,410
implemented require<font color="#CCCCCC"> Sarai 4 and I</font>

202
00:10:41,519 --> 00:10:46,889
actually<font color="#E5E5E5"> implemented the spec and</font><font color="#CCCCCC"> the</font>

203
00:10:43,410 --> 00:10:49,790
directive in in<font color="#CCCCCC"> chrome it was</font><font color="#E5E5E5"> prevailing</font>

204
00:10:46,889 --> 00:10:53,220
theme because like implementation took

205
00:10:49,790 --> 00:10:56,670
maybe<font color="#E5E5E5"> four</font><font color="#CCCCCC"> days but then writing</font><font color="#E5E5E5"> tests</font>

206
00:10:53,220 --> 00:10:58,819
for<font color="#CCCCCC"> chrome</font><font color="#E5E5E5"> took me like</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> three</font>

207
00:10:56,670 --> 00:10:58,819
weeks

208
00:10:59,250 --> 00:11:04,250
there's nothing like it's pretty<font color="#E5E5E5"> easy</font>

209
00:11:00,930 --> 00:11:06,930
and<font color="#E5E5E5"> everyone can start contributing to</font>

210
00:11:04,250 --> 00:11:08,790
even<font color="#CCCCCC"> Chrome because there</font><font color="#E5E5E5"> will be</font>

211
00:11:06,930 --> 00:11:12,689
somebody<font color="#CCCCCC"> who</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> review our</font><font color="#E5E5E5"> PR will</font>

212
00:11:08,790 --> 00:11:13,680
guide you how to fix mistakes and how<font color="#E5E5E5"> to</font>

213
00:11:12,690 --> 00:11:15,330
write tests

214
00:11:13,680 --> 00:11:18,390
so anyone basically can start

215
00:11:15,330 --> 00:11:24,330
contributing<font color="#E5E5E5"> to open source browsers</font>

216
00:11:18,390 --> 00:11:26,850
like Firefox or chromium<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> now if you</font>

217
00:11:24,330 --> 00:11:29,910
want CSP what you should do<font color="#E5E5E5"> and like do</font>

218
00:11:26,850 --> 00:11:31,740
you really need it<font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> need CSP if</font>

219
00:11:29,910 --> 00:11:34,430
it's completely<font color="#CCCCCC"> static website because</font>

220
00:11:31,740 --> 00:11:36,330
there is<font color="#CCCCCC"> nothing to protect from and</font>

221
00:11:34,430 --> 00:11:39,689
<font color="#E5E5E5">especially if static website doesn't</font>

222
00:11:36,330 --> 00:11:42,270
store any state<font color="#E5E5E5"> like it doesn't</font><font color="#CCCCCC"> make</font>

223
00:11:39,690 --> 00:11:44,250
<font color="#CCCCCC">sense</font><font color="#E5E5E5"> to you CSP there or if you have</font>

224
00:11:42,270 --> 00:11:50,640
too many<font color="#E5E5E5"> cross-site scripting you will</font>

225
00:11:44,250 --> 00:11:52,590
be<font color="#E5E5E5"> buried under under violation reports</font>

226
00:11:50,640 --> 00:11:56,880
that browsers will send you and you

227
00:11:52,590 --> 00:11:58,590
<font color="#E5E5E5">won't be able to triage like you will be</font>

228
00:11:56,880 --> 00:12:00,840
really<font color="#E5E5E5"> overwhelmed by the reports that</font>

229
00:11:58,590 --> 00:12:03,090
browsers from<font color="#E5E5E5"> all over the world will is</font>

230
00:12:00,840 --> 00:12:08,120
going<font color="#E5E5E5"> to send you so start with</font>

231
00:12:03,090 --> 00:12:08,120
something small<font color="#E5E5E5"> and we will go</font><font color="#CCCCCC"> over it</font>

232
00:12:09,650 --> 00:12:20,490
<font color="#CCCCCC">so as I</font><font color="#E5E5E5"> mentioned do not use</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> not</font>

233
00:12:18,330 --> 00:12:22,890
trust the<font color="#E5E5E5"> whole origin like do not trust</font>

234
00:12:20,490 --> 00:12:25,290
code that<font color="#E5E5E5"> jQuery that come especially</font><font color="#CCCCCC"> if</font>

235
00:12:22,890 --> 00:12:27,420
you are not<font color="#CCCCCC"> controlling it because</font>

236
00:12:25,290 --> 00:12:30,689
<font color="#E5E5E5">jQuery can be compromised</font><font color="#CCCCCC"> anytime and</font>

237
00:12:27,420 --> 00:12:33,150
you will not know<font color="#CCCCCC"> about it and the</font>

238
00:12:30,690 --> 00:12:39,260
better idea is to I<font color="#E5E5E5"> think I have an</font>

239
00:12:33,150 --> 00:12:43,430
example for this like if we open<font color="#E5E5E5"> this</font>

240
00:12:39,260 --> 00:12:43,430
nope it's not<font color="#E5E5E5"> this one</font>

241
00:12:46,220 --> 00:12:49,270
let's look

242
00:12:55,520 --> 00:13:05,760
<font color="#CCCCCC">extra yeah for example</font><font color="#E5E5E5"> a simple page</font>

243
00:13:00,870 --> 00:13:07,830
where<font color="#E5E5E5"> we say defaults ourselves so any</font>

244
00:13:05,760 --> 00:13:10,680
resource can be<font color="#CCCCCC"> loaded from</font><font color="#E5E5E5"> itself only</font>

245
00:13:07,830 --> 00:13:13,100
<font color="#E5E5E5">accepts well</font><font color="#CCCCCC"> and scripts</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> also can be</font>

246
00:13:10,680 --> 00:13:16,170
<font color="#CCCCCC">loaded</font><font color="#E5E5E5"> from so this is kind of</font><font color="#CCCCCC"> redundant</font>

247
00:13:13,100 --> 00:13:19,050
but in content security policy<font color="#E5E5E5"> if you</font>

248
00:13:16,170 --> 00:13:21,719
are not explicitly<font color="#E5E5E5"> allowing inline</font>

249
00:13:19,050 --> 00:13:23,430
scripts<font color="#E5E5E5"> they are forbidden so here we</font>

250
00:13:21,720 --> 00:13:26,580
have an inline script<font color="#E5E5E5"> we have a script</font>

251
00:13:23,430 --> 00:13:29,609
<font color="#E5E5E5">tag where we have some JavaScript which</font>

252
00:13:26,580 --> 00:13:32,940
does something<font color="#E5E5E5"> now this</font><font color="#CCCCCC"> will be</font>

253
00:13:29,610 --> 00:13:37,200
<font color="#CCCCCC">forbidden and here</font><font color="#E5E5E5"> like we have a</font>

254
00:13:32,940 --> 00:13:39,210
violation<font color="#E5E5E5"> which says browser</font><font color="#CCCCCC"> tried</font><font color="#E5E5E5"> to</font>

255
00:13:37,200 --> 00:13:42,300
evaluate<font color="#E5E5E5"> a JavaScript which is in line</font>

256
00:13:39,210 --> 00:13:45,000
and content security policy does not<font color="#E5E5E5"> let</font>

257
00:13:42,300 --> 00:13:47,280
you evaluate it now what you have<font color="#E5E5E5"> to do</font>

258
00:13:45,000 --> 00:13:49,140
you<font color="#CCCCCC"> have to do it one</font><font color="#E5E5E5"> of these three</font>

259
00:13:47,280 --> 00:13:51,270
things<font color="#CCCCCC"> unsafe inline which will allow</font>

260
00:13:49,140 --> 00:13:56,250
any inline<font color="#E5E5E5"> scripts which probably</font><font color="#CCCCCC"> you</font>

261
00:13:51,270 --> 00:13:58,590
don't<font color="#E5E5E5"> want because any injection is</font>

262
00:13:56,250 --> 00:14:00,630
going<font color="#CCCCCC"> to be is going to appear in</font><font color="#E5E5E5"> the</font>

263
00:13:58,590 --> 00:14:03,060
browser<font color="#E5E5E5"> as an inline script and you</font>

264
00:14:00,630 --> 00:14:04,950
won't be able<font color="#E5E5E5"> to distinguish if it's</font>

265
00:14:03,060 --> 00:14:08,910
something you want it to<font color="#E5E5E5"> run or it's</font>

266
00:14:04,950 --> 00:14:11,660
something malicious<font color="#CCCCCC"> okay let's go</font><font color="#E5E5E5"> back</font>

267
00:14:08,910 --> 00:14:11,660
to the presentation

268
00:14:11,720 --> 00:14:18,750
<font color="#CCCCCC">see</font><font color="#E5E5E5"> ya here I'm saying that to whitelist</font>

269
00:14:17,220 --> 00:14:20,900
the script that<font color="#CCCCCC"> you want it to whitelist</font>

270
00:14:18,750 --> 00:14:25,520
<font color="#E5E5E5">for example you can use unsafe inline</font>

271
00:14:20,900 --> 00:14:28,470
and this validates something will work

272
00:14:25,520 --> 00:14:31,319
<font color="#E5E5E5">but also there would be bypasses because</font>

273
00:14:28,470 --> 00:14:34,890
some attackers injected<font color="#E5E5E5"> do evil function</font>

274
00:14:31,320 --> 00:14:37,920
will also<font color="#CCCCCC"> work and also</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example if</font>

275
00:14:34,890 --> 00:14:42,000
you load<font color="#E5E5E5"> something from object that that</font>

276
00:14:37,920 --> 00:14:45,240
jquery.com<font color="#E5E5E5"> something that you trust</font>

277
00:14:42,000 --> 00:14:48,810
which is<font color="#CCCCCC"> jQuery version -</font><font color="#E5E5E5"> - for an</font>

278
00:14:45,240 --> 00:14:50,460
attacker can inject an external script

279
00:14:48,810 --> 00:14:52,170
tag which will point<font color="#E5E5E5"> again</font><font color="#CCCCCC"> to code</font>

280
00:14:50,460 --> 00:14:54,450
<font color="#E5E5E5">jQuery</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> time because you whitelisted</font>

281
00:14:52,170 --> 00:14:57,089
it but he<font color="#E5E5E5"> will load something vulnerable</font>

282
00:14:54,450 --> 00:15:00,240
like jQuery 162 is vulnerable to like

283
00:14:57,090 --> 00:15:01,620
reflection attacks or an attacker can

284
00:15:00,240 --> 00:15:04,590
inject<font color="#E5E5E5"> something like this and it's</font><font color="#CCCCCC"> -</font>

285
00:15:01,620 --> 00:15:05,680
will work so that's<font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> so there</font>

286
00:15:04,590 --> 00:15:12,819
must<font color="#E5E5E5"> be a way to fix</font>

287
00:15:05,680 --> 00:15:15,069
right<font color="#E5E5E5"> well I'm not</font><font color="#CCCCCC"> we'll talk about</font>

288
00:15:12,819 --> 00:15:16,930
<font color="#E5E5E5">problems first</font><font color="#CCCCCC"> so another problem</font><font color="#E5E5E5"> is if</font>

289
00:15:15,069 --> 00:15:22,360
you don't<font color="#E5E5E5"> specify object source or</font>

290
00:15:16,930 --> 00:15:24,459
default source in<font color="#E5E5E5"> your policy</font><font color="#CCCCCC"> wishes</font><font color="#E5E5E5"> or</font>

291
00:15:22,360 --> 00:15:26,230
not malicious fair enough any kind of

292
00:15:24,459 --> 00:15:28,209
plugins<font color="#E5E5E5"> will be allowed on the webpage</font>

293
00:15:26,230 --> 00:15:29,920
<font color="#E5E5E5">so if there's an injection an attacker</font>

294
00:15:28,209 --> 00:15:34,179
can<font color="#E5E5E5"> do something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> this and can</font>

295
00:15:29,920 --> 00:15:36,670
inject an object<font color="#E5E5E5"> I can inject a Flash</font>

296
00:15:34,179 --> 00:15:40,149
plugin with allowed scripts which is

297
00:15:36,670 --> 00:15:43,628
like known<font color="#E5E5E5"> vector for cross-site another</font>

298
00:15:40,149 --> 00:15:45,790
cross-site scripting<font color="#CCCCCC"> so something that's</font>

299
00:15:43,629 --> 00:15:51,639
not exploitable<font color="#E5E5E5"> right now might be</font>

300
00:15:45,790 --> 00:15:53,949
exploitable<font color="#CCCCCC"> also you can whitelist</font>

301
00:15:51,639 --> 00:15:58,029
<font color="#E5E5E5">schemes for example you can say that</font>

302
00:15:53,949 --> 00:16:00,309
script source data or script source HTTP

303
00:15:58,029 --> 00:16:02,230
it's a cool<font color="#CCCCCC"> thing - for example if you</font>

304
00:16:00,309 --> 00:16:05,410
say<font color="#E5E5E5"> HTTP that</font><font color="#CCCCCC"> put me into the browser</font>

305
00:16:02,230 --> 00:16:10,240
that you only allow resource scripts to

306
00:16:05,410 --> 00:16:13,719
be load it only<font color="#E5E5E5"> from HTTP URLs and not</font>

307
00:16:10,240 --> 00:16:16,240
plain text<font color="#CCCCCC"> but for data you cannot</font>

308
00:16:13,720 --> 00:16:18,819
really specify what kind<font color="#E5E5E5"> of content you</font>

309
00:16:16,240 --> 00:16:20,920
expect with within<font color="#E5E5E5"> the</font><font color="#CCCCCC"> data URL so when</font>

310
00:16:18,819 --> 00:16:22,990
you whitelist the data<font color="#E5E5E5"> that means an</font>

311
00:16:20,920 --> 00:16:24,699
attacker can inject any kind<font color="#E5E5E5"> of data URL</font>

312
00:16:22,990 --> 00:16:29,249
which can be for example<font color="#E5E5E5"> something</font><font color="#CCCCCC"> like</font>

313
00:16:24,699 --> 00:16:33,399
this something<font color="#CCCCCC"> like a script we do Evo</font>

314
00:16:29,249 --> 00:16:39,970
<font color="#CCCCCC">also if you try to whitelist a</font><font color="#E5E5E5"> JSON</font><font color="#CCCCCC"> P</font>

315
00:16:33,399 --> 00:16:42,699
<font color="#E5E5E5">endpoint</font><font color="#CCCCCC"> JSONP is it's a long story</font>

316
00:16:39,970 --> 00:16:49,889
<font color="#CCCCCC">about jason</font><font color="#E5E5E5"> piece but basically</font><font color="#CCCCCC"> JSONP</font><font color="#E5E5E5"> is</font>

317
00:16:42,699 --> 00:16:52,719
a mechanism to<font color="#CCCCCC"> JSONP will reflect</font><font color="#E5E5E5"> back a</font>

318
00:16:49,889 --> 00:16:54,670
function<font color="#CCCCCC"> Ravel or</font><font color="#E5E5E5"> like that and evaluate</font>

319
00:16:52,720 --> 00:16:57,730
<font color="#CCCCCC">a function that</font><font color="#E5E5E5"> you specify for example</font>

320
00:16:54,670 --> 00:16:59,878
if you have something<font color="#CCCCCC"> like whoops if</font><font color="#E5E5E5"> you</font>

321
00:16:57,730 --> 00:16:59,879
have

322
00:17:04,039 --> 00:17:09,919
if you white least<font color="#CCCCCC"> json pn point for</font>

323
00:17:07,189 --> 00:17:14,029
example<font color="#CCCCCC"> at some CDN</font><font color="#E5E5E5"> which hosts some for</font>

324
00:17:09,919 --> 00:17:15,620
<font color="#CCCCCC">example angular content security policy</font>

325
00:17:14,029 --> 00:17:19,189
does not<font color="#E5E5E5"> really control the the</font>

326
00:17:15,619 --> 00:17:23,000
<font color="#CCCCCC">arguments of the URL</font><font color="#E5E5E5"> so if you whitelist</font>

327
00:17:19,189 --> 00:17:24,529
it CDN dot-com<font color="#CCCCCC"> /</font><font color="#E5E5E5"> json p and like you're</font>

328
00:17:23,000 --> 00:17:26,299
using it<font color="#E5E5E5"> actively in your web</font>

329
00:17:24,529 --> 00:17:28,189
application<font color="#CCCCCC"> an attacker might figure</font>

330
00:17:26,299 --> 00:17:30,860
<font color="#E5E5E5">that out and actually use</font><font color="#CCCCCC"> it in</font>

331
00:17:28,189 --> 00:17:35,080
malicious way and<font color="#E5E5E5"> basically send a</font>

332
00:17:30,860 --> 00:17:37,219
function which will be<font color="#E5E5E5"> reflect</font><font color="#CCCCCC"> where in</font>

333
00:17:35,080 --> 00:17:38,840
HTTP response that function will be

334
00:17:37,220 --> 00:17:41,510
actually evaluated so it's basically an

335
00:17:38,840 --> 00:17:43,100
attack attack vector and content

336
00:17:41,510 --> 00:17:44,690
security policy<font color="#CCCCCC"> cannot do</font><font color="#E5E5E5"> anything about</font>

337
00:17:43,100 --> 00:17:48,740
it<font color="#CCCCCC"> because it does</font><font color="#E5E5E5"> not really control</font>

338
00:17:44,690 --> 00:17:50,960
the command line<font color="#E5E5E5"> URL arguments like you</font>

339
00:17:48,740 --> 00:17:54,710
cannot say I only allow callback equals

340
00:17:50,960 --> 00:17:56,360
good any JSON PU requests any any

341
00:17:54,710 --> 00:18:05,529
<font color="#CCCCCC">requests to</font><font color="#E5E5E5"> CD and</font><font color="#CCCCCC"> that comes large S&P</font>

342
00:17:56,360 --> 00:18:09,500
<font color="#CCCCCC">are going to be allowed</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is also</font>

343
00:18:05,529 --> 00:18:12,500
sort<font color="#E5E5E5"> of a compromise so if you whitelist</font>

344
00:18:09,500 --> 00:18:14,690
for example<font color="#E5E5E5"> two origins</font><font color="#CCCCCC"> a good comm that</font>

345
00:18:12,500 --> 00:18:16,909
you completely trust<font color="#E5E5E5"> and some origin</font>

346
00:18:14,690 --> 00:18:19,279
that<font color="#E5E5E5"> you don't trust fully but you trust</font>

347
00:18:16,909 --> 00:18:20,690
<font color="#CCCCCC">a specific resource</font><font color="#E5E5E5"> for example</font><font color="#CCCCCC"> this</font>

348
00:18:19,279 --> 00:18:24,590
partial<font color="#E5E5E5"> we trusted that comes much</font>

349
00:18:20,690 --> 00:18:27,169
trusted if there is a<font color="#CCCCCC"> red direct from</font>

350
00:18:24,590 --> 00:18:29,779
good comm to partial<font color="#CCCCCC"> interesting comm</font>

351
00:18:27,169 --> 00:18:32,240
<font color="#E5E5E5">actually the path is going to</font><font color="#CCCCCC"> be ignored</font>

352
00:18:29,779 --> 00:18:35,720
<font color="#CCCCCC">by the browser</font><font color="#E5E5E5"> by content security</font>

353
00:18:32,240 --> 00:18:39,139
policy the evaluator<font color="#CCCCCC"> and it's sort of a</font>

354
00:18:35,720 --> 00:18:42,320
bypass it will it will<font color="#CCCCCC"> always work</font><font color="#E5E5E5"> why</font>

355
00:18:39,139 --> 00:18:44,029
why is this happening<font color="#CCCCCC"> because some guy</font>

356
00:18:42,320 --> 00:18:47,720
figured out that you can<font color="#CCCCCC"> use content</font>

357
00:18:44,029 --> 00:18:50,510
security policy<font color="#E5E5E5"> to exfiltrate the state</font>

358
00:18:47,720 --> 00:18:53,960
of web application in the<font color="#CCCCCC"> browser for</font>

359
00:18:50,510 --> 00:18:56,360
<font color="#CCCCCC">example through content security policy</font>

360
00:18:53,960 --> 00:18:58,100
violation reports you<font color="#CCCCCC"> can figure out you</font>

361
00:18:56,360 --> 00:19:01,070
can<font color="#CCCCCC"> make somebody to load your web page</font>

362
00:18:58,100 --> 00:19:05,120
malicious web page which will try<font color="#CCCCCC"> to</font>

363
00:19:01,070 --> 00:19:07,070
load<font color="#E5E5E5"> something your avatar for example</font>

364
00:19:05,120 --> 00:19:09,110
<font color="#E5E5E5">from</font><font color="#CCCCCC"> google calm now if you are</font>

365
00:19:07,070 --> 00:19:11,210
authenticated<font color="#E5E5E5"> into</font><font color="#CCCCCC"> google.com your</font>

366
00:19:09,110 --> 00:19:13,639
avatar will<font color="#CCCCCC"> be served by</font><font color="#E5E5E5"> to your browser</font>

367
00:19:11,210 --> 00:19:16,940
<font color="#E5E5E5">if you</font><font color="#CCCCCC"> are not</font><font color="#E5E5E5"> authenticated you will be</font>

368
00:19:13,639 --> 00:19:17,729
redirected to<font color="#E5E5E5"> some other URL and you can</font>

369
00:19:16,940 --> 00:19:19,290
<font color="#E5E5E5">craft your</font>

370
00:19:17,730 --> 00:19:23,010
content security<font color="#E5E5E5"> policy in such a way</font>

371
00:19:19,290 --> 00:19:25,740
that and serve<font color="#E5E5E5"> that page to to your</font>

372
00:19:23,010 --> 00:19:27,660
victim that looking by looking at

373
00:19:25,740 --> 00:19:29,490
content<font color="#E5E5E5"> security policy reports you</font><font color="#CCCCCC"> can</font>

374
00:19:27,660 --> 00:19:32,280
tell if somebody is attenti<font color="#CCCCCC"> kated</font><font color="#E5E5E5"> to</font>

375
00:19:29,490 --> 00:19:34,080
google.com<font color="#E5E5E5"> or not and in order</font><font color="#CCCCCC"> to hide</font>

376
00:19:32,280 --> 00:19:38,940
that information<font color="#E5E5E5"> and like do not</font><font color="#CCCCCC"> leak</font>

377
00:19:34,080 --> 00:19:42,030
the just privacy related<font color="#E5E5E5"> things the</font>

378
00:19:38,940 --> 00:19:49,580
<font color="#E5E5E5">compromise was made not to basically to</font>

379
00:19:42,030 --> 00:19:52,500
ignore paths in redirected<font color="#CCCCCC"> urls yeah</font>

380
00:19:49,580 --> 00:19:54,470
anyway<font color="#E5E5E5"> how how to solve them</font><font color="#CCCCCC"> well let's</font>

381
00:19:52,500 --> 00:19:57,870
let's just<font color="#E5E5E5"> take a look at some examples</font>

382
00:19:54,470 --> 00:20:01,520
<font color="#CCCCCC">for</font><font color="#E5E5E5"> example am i connect it to the</font>

383
00:19:57,870 --> 00:20:01,520
<font color="#CCCCCC">Internet</font><font color="#E5E5E5"> I think</font>

384
00:20:08,980 --> 00:20:13,350
yeah can<font color="#CCCCCC"> you</font><font color="#E5E5E5"> please help me to connect</font>

385
00:20:11,020 --> 00:20:13,350
<font color="#E5E5E5">Oh</font>

386
00:20:19,500 --> 00:20:23,399
we can just look at some yeah it's not

387
00:20:22,019 --> 00:20:27,480
<font color="#E5E5E5">connected</font><font color="#CCCCCC"> because I think Wi-Fi is not</font>

388
00:20:23,399 --> 00:20:29,639
connected<font color="#E5E5E5"> okay then it doesn't matter</font>

389
00:20:27,480 --> 00:20:33,139
<font color="#CCCCCC">for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> I can just verbally tell you</font>

390
00:20:29,639 --> 00:20:33,139
for<font color="#CCCCCC"> example what happens on</font><font color="#E5E5E5"> twitter.com</font>

391
00:20:39,169 --> 00:20:43,799
let's find this<font color="#CCCCCC"> finger is this way yeah</font>

392
00:20:41,509 --> 00:20:46,139
<font color="#CCCCCC">for twitter.com if you look at the</font>

393
00:20:43,799 --> 00:20:50,360
policy that served by twitter.com<font color="#CCCCCC"> there</font>

394
00:20:46,139 --> 00:20:54,990
<font color="#CCCCCC">is like more than</font><font color="#E5E5E5"> 200 200 white lists in</font>

395
00:20:50,360 --> 00:20:57,379
<font color="#CCCCCC">inscript source only</font><font color="#E5E5E5"> like basically</font>

396
00:20:54,990 --> 00:20:59,820
twitter.com is somebody said and

397
00:20:57,379 --> 00:21:02,340
configured a<font color="#E5E5E5"> content security policy for</font>

398
00:20:59,820 --> 00:21:04,639
twitter.com because they there<font color="#E5E5E5"> are so</font>

399
00:21:02,340 --> 00:21:07,379
many corner<font color="#E5E5E5"> cases where Twitter wants to</font>

400
00:21:04,639 --> 00:21:09,330
execute scripts<font color="#CCCCCC"> for</font><font color="#E5E5E5"> from third parties</font>

401
00:21:07,379 --> 00:21:15,019
<font color="#E5E5E5">that that list is like really huge it's</font>

402
00:21:09,330 --> 00:21:18,570
not maintainable<font color="#CCCCCC"> so it's because twitter</font>

403
00:21:15,019 --> 00:21:22,019
policy was written before<font color="#E5E5E5"> CSP</font><font color="#CCCCCC"> 2 was</font>

404
00:21:18,570 --> 00:21:24,899
<font color="#E5E5E5">developed and I guess they don't</font><font color="#CCCCCC"> have</font>

405
00:21:22,019 --> 00:21:27,120
<font color="#CCCCCC">resources to</font><font color="#E5E5E5"> fix it but here's an easy</font>

406
00:21:24,899 --> 00:21:31,379
way<font color="#CCCCCC"> to fix the</font><font color="#E5E5E5"> problem to avoid</font>

407
00:21:27,120 --> 00:21:34,229
maintaining the white lists you<font color="#E5E5E5"> can use</font>

408
00:21:31,379 --> 00:21:37,379
nonce<font color="#E5E5E5"> what is known</font><font color="#CCCCCC"> it's literally means</font>

409
00:21:34,230 --> 00:21:39,809
number<font color="#E5E5E5"> used once</font><font color="#CCCCCC"> and if</font><font color="#E5E5E5"> your content</font>

410
00:21:37,379 --> 00:21:42,389
security policy contains this for

411
00:21:39,809 --> 00:21:45,870
example<font color="#CCCCCC"> uses say script source</font><font color="#E5E5E5"> nonce</font><font color="#CCCCCC"> 1 2</font>

412
00:21:42,389 --> 00:21:49,709
<font color="#CCCCCC">3</font><font color="#E5E5E5"> browser will only</font><font color="#CCCCCC"> evaluate JavaScript</font>

413
00:21:45,870 --> 00:21:52,559
scripts that<font color="#E5E5E5"> are have that have non</font>

414
00:21:49,710 --> 00:21:56,370
attribute with the same value that's in

415
00:21:52,559 --> 00:21:58,049
the header<font color="#CCCCCC"> or like meta tag</font><font color="#E5E5E5"> so if then</font>

416
00:21:56,370 --> 00:22:00,330
if there's an injection on the<font color="#CCCCCC"> web page</font>

417
00:21:58,049 --> 00:22:04,019
<font color="#E5E5E5">attacker cannot guess what these nuns</font>

418
00:22:00,330 --> 00:22:07,350
has to be when he crafts<font color="#E5E5E5"> script tag and</font>

419
00:22:04,019 --> 00:22:09,360
it's pretty<font color="#E5E5E5"> effective</font><font color="#CCCCCC"> way to pry the</font>

420
00:22:07,350 --> 00:22:12,330
simple content security<font color="#E5E5E5"> policies that</font>

421
00:22:09,360 --> 00:22:14,459
don't<font color="#CCCCCC"> need maintenance</font><font color="#E5E5E5"> and yeah nonce</font>

422
00:22:12,330 --> 00:22:17,039
attributes can<font color="#CCCCCC"> be applied both to</font><font color="#E5E5E5"> inline</font>

423
00:22:14,460 --> 00:22:18,570
and third-party scripts so here's like

424
00:22:17,039 --> 00:22:20,419
we have a<font color="#E5E5E5"> third-party script that lost</font>

425
00:22:18,570 --> 00:22:23,129
<font color="#E5E5E5">jQuery</font><font color="#CCCCCC"> that comes on attacker</font>

426
00:22:20,419 --> 00:22:25,440
<font color="#E5E5E5">we don't use whitelist in the content</font>

427
00:22:23,129 --> 00:22:28,860
security policy and if attacker<font color="#E5E5E5"> manages</font>

428
00:22:25,440 --> 00:22:31,200
to find an injection<font color="#CCCCCC"> even if he</font><font color="#E5E5E5"> tries to</font>

429
00:22:28,860 --> 00:22:32,939
<font color="#E5E5E5">inject</font><font color="#CCCCCC"> the script tag with source equals</font>

430
00:22:31,200 --> 00:22:34,560
<font color="#E5E5E5">jQuery</font><font color="#CCCCCC"> 162</font>

431
00:22:32,940 --> 00:22:37,850
<font color="#CCCCCC">she's vulnerable he</font><font color="#E5E5E5"> won't be able to</font>

432
00:22:34,560 --> 00:22:40,490
tell what is the nonce<font color="#E5E5E5"> like at</font><font color="#CCCCCC"> runtime</font>

433
00:22:37,850 --> 00:22:44,040
and the same thing with inline scripts

434
00:22:40,490 --> 00:22:46,890
and it also fixes<font color="#E5E5E5"> that</font><font color="#CCCCCC"> JSONP bypasses</font>

435
00:22:44,040 --> 00:22:48,960
like if if you<font color="#E5E5E5"> whitelist it a</font><font color="#CCCCCC"> json p</font>

436
00:22:46,890 --> 00:22:51,080
<font color="#CCCCCC">endpoint</font><font color="#E5E5E5"> well no you don't write least</font>

437
00:22:48,960 --> 00:22:54,570
the JSONP endpoints anymore<font color="#CCCCCC"> you just</font>

438
00:22:51,080 --> 00:22:58,169
<font color="#E5E5E5">specify</font><font color="#CCCCCC"> nonce</font><font color="#E5E5E5"> in the script that uses</font>

439
00:22:54,570 --> 00:23:01,050
<font color="#E5E5E5">JSON</font><font color="#CCCCCC"> p endpoint</font><font color="#E5E5E5"> so attacker won't be</font>

440
00:22:58,170 --> 00:23:04,020
able<font color="#E5E5E5"> to inject similar script that will</font>

441
00:23:01,050 --> 00:23:05,970
<font color="#CCCCCC">be allowed by the browser but</font><font color="#E5E5E5"> there's a</font>

442
00:23:04,020 --> 00:23:07,830
little<font color="#E5E5E5"> problem if you have if you are</font>

443
00:23:05,970 --> 00:23:10,800
using some JavaScript library or your

444
00:23:07,830 --> 00:23:12,870
<font color="#E5E5E5">actual code is creating dynamic scripts</font>

445
00:23:10,800 --> 00:23:15,030
for example it does document create

446
00:23:12,870 --> 00:23:19,530
element script and then by does

447
00:23:15,030 --> 00:23:21,060
something with that script that<font color="#E5E5E5"> script</font>

448
00:23:19,530 --> 00:23:23,070
is not<font color="#E5E5E5"> going to be evaluated because</font><font color="#CCCCCC"> you</font>

449
00:23:21,060 --> 00:23:25,830
don't have the nonce<font color="#E5E5E5"> you can actually</font>

450
00:23:23,070 --> 00:23:26,700
<font color="#E5E5E5">specify</font><font color="#CCCCCC"> announce by like doing</font><font color="#E5E5E5"> Yeoh that</font>

451
00:23:25,830 --> 00:23:32,129
<font color="#E5E5E5">nones</font>

452
00:23:26,700 --> 00:23:33,540
equals the actual value but<font color="#CCCCCC"> your the</font>

453
00:23:32,130 --> 00:23:36,360
framework that you are using<font color="#E5E5E5"> for example</font>

454
00:23:33,540 --> 00:23:42,000
angularjs or<font color="#E5E5E5"> jquery should be aware</font><font color="#CCCCCC"> of</font>

455
00:23:36,360 --> 00:23:43,979
the<font color="#CCCCCC"> nonce s and basically every every</font>

456
00:23:42,000 --> 00:23:47,370
component in<font color="#CCCCCC"> that chain</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> be aware</font>

457
00:23:43,980 --> 00:23:49,430
what nonce isn't that nonce should be

458
00:23:47,370 --> 00:23:56,540
added before<font color="#E5E5E5"> you try to</font><font color="#CCCCCC"> appendchild</font>

459
00:23:49,430 --> 00:23:58,680
the script to<font color="#E5E5E5"> the dome so how to fix it</font>

460
00:23:56,540 --> 00:24:03,060
actually I thought<font color="#CCCCCC"> I had another slide</font>

461
00:23:58,680 --> 00:24:06,810
but<font color="#CCCCCC"> whatever these</font><font color="#E5E5E5"> two guys from Google</font>

462
00:24:03,060 --> 00:24:08,399
<font color="#CCCCCC">who are</font><font color="#E5E5E5"> actually the security engineers</font>

463
00:24:06,810 --> 00:24:14,520
they are making<font color="#CCCCCC"> sure that</font><font color="#E5E5E5"> Google</font><font color="#CCCCCC"> web</font>

464
00:24:08,400 --> 00:24:18,180
<font color="#CCCCCC">apps are behaving in secure manner came</font>

465
00:24:14,520 --> 00:24:25,620
<font color="#CCCCCC">up</font><font color="#E5E5E5"> with this keyword called street</font>

466
00:24:18,180 --> 00:24:27,450
dynamic so the idea is that you you have

467
00:24:25,620 --> 00:24:30,000
very<font color="#E5E5E5"> simple content security policy no</font>

468
00:24:27,450 --> 00:24:32,640
matter<font color="#E5E5E5"> how complex your website is all</font>

469
00:24:30,000 --> 00:24:34,950
you do is you have<font color="#E5E5E5"> this script oops we</font>

470
00:24:32,640 --> 00:24:38,160
have<font color="#E5E5E5"> the script source nonce</font>

471
00:24:34,950 --> 00:24:40,710
<font color="#E5E5E5">and strict dynamic keyword what this</font>

472
00:24:38,160 --> 00:24:45,680
means is that you trust your<font color="#CCCCCC"> web page</font>

473
00:24:40,710 --> 00:24:45,680
trusts a script which has this nonce and

474
00:24:46,210 --> 00:24:50,320
whatever<font color="#CCCCCC"> that script is doing</font><font color="#E5E5E5"> it's</font>

475
00:24:48,519 --> 00:24:51,999
trusted<font color="#E5E5E5"> it's like basically trust</font>

476
00:24:50,320 --> 00:24:54,249
propagation so you can write a script

477
00:24:51,999 --> 00:24:55,929
<font color="#CCCCCC">that</font><font color="#E5E5E5"> would load another scripts from</font>

478
00:24:54,249 --> 00:24:58,200
somewhere<font color="#CCCCCC"> else</font><font color="#E5E5E5"> or like we</font><font color="#CCCCCC"> could</font>

479
00:24:55,929 --> 00:25:00,279
dynamically construct other scripts and

480
00:24:58,200 --> 00:25:03,610
that would mean<font color="#E5E5E5"> if strict dynamic is</font>

481
00:25:00,279 --> 00:25:12,159
<font color="#E5E5E5">their browser is</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> allow it so this</font>

482
00:25:03,610 --> 00:25:14,789
<font color="#CCCCCC">is</font><font color="#E5E5E5"> good when when when resources that</font>

483
00:25:12,159 --> 00:25:17,320
you're the parent script is loading<font color="#E5E5E5"> are</font>

484
00:25:14,789 --> 00:25:20,379
being loaded<font color="#E5E5E5"> from trusted</font><font color="#CCCCCC"> sources like</font>

485
00:25:17,320 --> 00:25:22,480
<font color="#E5E5E5">in case</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Google likely any scripts</font>

486
00:25:20,379 --> 00:25:24,699
<font color="#E5E5E5">that</font><font color="#CCCCCC"> they use in</font><font color="#E5E5E5"> their web applications</font>

487
00:25:22,480 --> 00:25:26,200
are<font color="#E5E5E5"> still coming</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> Google entities</font>

488
00:25:24,700 --> 00:25:29,440
like<font color="#E5E5E5"> it's from some CDN that's</font>

489
00:25:26,200 --> 00:25:31,149
controlled by Google or<font color="#E5E5E5"> some some other</font>

490
00:25:29,440 --> 00:25:33,220
CDN that's not controlled by<font color="#E5E5E5"> Google but</font>

491
00:25:31,149 --> 00:25:38,559
they have some kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> agreement</font><font color="#CCCCCC"> that</font>

492
00:25:33,220 --> 00:25:42,580
they can trust<font color="#CCCCCC"> that</font><font color="#E5E5E5"> CDN</font><font color="#CCCCCC"> so it's kind of</font>

493
00:25:38,559 --> 00:25:45,309
safe but if you for guys like us I

494
00:25:42,580 --> 00:25:48,009
cannot trust jquery.com<font color="#CCCCCC"> and like I</font>

495
00:25:45,309 --> 00:25:50,830
cannot well if even if I write a

496
00:25:48,009 --> 00:25:53,019
<font color="#E5E5E5">JavaScript that loads other scripts from</font>

497
00:25:50,830 --> 00:25:54,730
for example<font color="#CCCCCC"> jQuery calm if you don't</font>

498
00:25:53,019 --> 00:25:57,309
know what Jay what<font color="#CCCCCC"> the jQuery that come</font>

499
00:25:54,730 --> 00:26:00,249
script is doing<font color="#E5E5E5"> actually like maybe it's</font>

500
00:25:57,309 --> 00:26:01,658
compromised and there's some attack

501
00:26:00,249 --> 00:26:07,029
happened and now they are doing

502
00:26:01,659 --> 00:26:08,740
<font color="#E5E5E5">something something</font><font color="#CCCCCC"> really bad</font><font color="#E5E5E5"> and like</font>

503
00:26:07,029 --> 00:26:12,460
<font color="#E5E5E5">using strict dynamic is kind of risky</font>

504
00:26:08,740 --> 00:26:15,179
<font color="#CCCCCC">there</font><font color="#E5E5E5"> so what you can do you can</font><font color="#CCCCCC"> log</font>

505
00:26:12,460 --> 00:26:16,539
down to what you actually<font color="#E5E5E5"> expect from</font>

506
00:26:15,179 --> 00:26:18,759
<font color="#CCCCCC">jquery.com</font>

507
00:26:16,539 --> 00:26:20,169
<font color="#E5E5E5">for example you can specify a hash of</font>

508
00:26:18,759 --> 00:26:21,129
the content<font color="#E5E5E5"> that comes back from</font>

509
00:26:20,169 --> 00:26:24,369
<font color="#E5E5E5">jquery.com</font>

510
00:26:21,129 --> 00:26:27,360
<font color="#CCCCCC">I think I have an example</font><font color="#E5E5E5"> but it'd</font><font color="#CCCCCC"> be</font>

511
00:26:24,369 --> 00:26:27,360
messy to set it up

512
00:26:28,169 --> 00:26:35,009
let's look maybe<font color="#E5E5E5"> be more like visually</font>

513
00:26:35,610 --> 00:26:39,158
yeah yeah I<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have in</font><font color="#CCCCCC"> different</font>

514
00:26:37,779 --> 00:26:41,950
connection so we're not<font color="#E5E5E5"> gonna see</font>

515
00:26:39,159 --> 00:26:47,259
<font color="#E5E5E5">anything useful but that's fine</font><font color="#CCCCCC"> that's</font>

516
00:26:41,950 --> 00:26:48,700
<font color="#CCCCCC">fine</font><font color="#E5E5E5"> it's not really like very important</font>

517
00:26:47,259 --> 00:26:53,549
so it's fine

518
00:26:48,700 --> 00:26:53,549
thank you no no

519
00:26:53,830 --> 00:26:58,519
yeah sort<font color="#E5E5E5"> of using</font><font color="#CCCCCC"> streak dynamic is</font>

520
00:26:56,269 --> 00:27:00,440
gonna<font color="#E5E5E5"> solve any problem</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you had</font>

521
00:26:58,519 --> 00:27:02,450
with<font color="#CCCCCC"> white</font><font color="#E5E5E5"> lease or with those</font><font color="#CCCCCC"> bypasses</font>

522
00:27:00,440 --> 00:27:04,070
where you don't specify<font color="#E5E5E5"> path and</font>

523
00:27:02,450 --> 00:27:06,710
somebody<font color="#E5E5E5"> loads</font><font color="#CCCCCC"> a script from the same</font>

524
00:27:04,070 --> 00:27:08,899
origin that<font color="#E5E5E5"> you trust it but something</font>

525
00:27:06,710 --> 00:27:14,320
<font color="#CCCCCC">malicious and you also don't have</font>

526
00:27:08,899 --> 00:27:20,779
problems with<font color="#CCCCCC"> it inline scripts because</font>

527
00:27:14,320 --> 00:27:22,970
because it's fine<font color="#CCCCCC"> the way</font><font color="#E5E5E5"> dynamic works</font>

528
00:27:20,779 --> 00:27:25,850
like for example<font color="#E5E5E5"> we have if we serve</font>

529
00:27:22,970 --> 00:27:27,409
this policy<font color="#CCCCCC"> to like you would</font><font color="#E5E5E5"> ask what</font>

530
00:27:25,850 --> 00:27:29,299
would happen if you serve this policy<font color="#CCCCCC"> to</font>

531
00:27:27,409 --> 00:27:30,950
a browser<font color="#CCCCCC"> that doesn't</font><font color="#E5E5E5"> know what strict</font>

532
00:27:29,299 --> 00:27:32,450
dynamic is so<font color="#CCCCCC"> far</font>

533
00:27:30,950 --> 00:27:33,679
for example<font color="#CCCCCC"> Safari does not know what</font>

534
00:27:32,450 --> 00:27:38,240
strict dynamic is because they<font color="#E5E5E5"> only</font>

535
00:27:33,679 --> 00:27:42,230
implement<font color="#E5E5E5"> CSP level 2 or ie 11 doesn't</font>

536
00:27:38,240 --> 00:27:43,279
know about strict dynamic and it doesn't

537
00:27:42,230 --> 00:27:48,669
know what<font color="#E5E5E5"> nonsense</font>

538
00:27:43,279 --> 00:27:52,009
so the way grammar<font color="#E5E5E5"> is designed for this</font>

539
00:27:48,669 --> 00:27:55,190
<font color="#E5E5E5">we can call it a language is if it</font>

540
00:27:52,009 --> 00:27:58,909
<font color="#E5E5E5">doesn't</font><font color="#CCCCCC"> know what what what a</font><font color="#E5E5E5"> keyword is</font>

541
00:27:55,190 --> 00:28:04,009
<font color="#E5E5E5">it's just going to</font><font color="#CCCCCC"> ignore</font><font color="#E5E5E5"> it so this</font>

542
00:27:58,909 --> 00:28:06,080
policy is going to<font color="#E5E5E5"> be viewed by a</font>

543
00:28:04,009 --> 00:28:07,820
browser that implements CSP level 3

544
00:28:06,080 --> 00:28:10,908
which<font color="#E5E5E5"> will be like modern Chrome or</font>

545
00:28:07,820 --> 00:28:13,908
Firefox<font color="#E5E5E5"> it will be treated as this like</font>

546
00:28:10,909 --> 00:28:17,929
if if chrome<font color="#E5E5E5"> Cystic dynamic it's going</font>

547
00:28:13,909 --> 00:28:21,049
to ignore<font color="#CCCCCC"> unsafe inline which white with</font>

548
00:28:17,929 --> 00:28:23,419
any<font color="#E5E5E5"> unlined inline scripts if browser is</font>

549
00:28:21,049 --> 00:28:26,029
level 2 and doesn't know what strict

550
00:28:23,419 --> 00:28:29,570
dynamic is but it knows what<font color="#CCCCCC"> non sees is</font>

551
00:28:26,029 --> 00:28:35,389
<font color="#E5E5E5">just gonna load scripts that have this</font>

552
00:28:29,570 --> 00:28:37,189
<font color="#CCCCCC">nonce and it's not</font><font color="#E5E5E5"> going to break and oh</font>

553
00:28:35,389 --> 00:28:38,809
yeah and there is a in the specification

554
00:28:37,190 --> 00:28:41,419
it's a specification<font color="#E5E5E5"> says that if you</font>

555
00:28:38,809 --> 00:28:43,999
see nonce<font color="#CCCCCC"> a specification</font><font color="#E5E5E5"> level 2 says</font>

556
00:28:41,419 --> 00:28:47,269
if you see nonce<font color="#CCCCCC"> ignore unsafe inline</font><font color="#E5E5E5"> do</font>

557
00:28:43,999 --> 00:28:49,580
not like like just<font color="#E5E5E5"> ignore this unsafe</font>

558
00:28:47,269 --> 00:28:51,320
inline<font color="#E5E5E5"> do not whitelist all the inline</font>

559
00:28:49,580 --> 00:28:54,740
scripts<font color="#CCCCCC"> just</font><font color="#E5E5E5"> write least those that are</font>

560
00:28:51,320 --> 00:28:56,809
that<font color="#CCCCCC"> contain</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> nonce</font><font color="#E5E5E5"> and really all</font>

561
00:28:54,740 --> 00:28:59,299
browser is<font color="#CCCCCC"> going to see</font><font color="#E5E5E5"> this is going to</font>

562
00:28:56,809 --> 00:29:01,789
parse this content security policy<font color="#E5E5E5"> as as</font>

563
00:28:59,299 --> 00:29:03,529
this<font color="#E5E5E5"> it's it doesn't know what strict</font>

564
00:29:01,789 --> 00:29:04,940
dynamic<font color="#E5E5E5"> is it doesn't know what</font><font color="#CCCCCC"> nancy's</font>

565
00:29:03,529 --> 00:29:06,740
<font color="#E5E5E5">so it's gonna just</font>

566
00:29:04,940 --> 00:29:08,300
consume what it knows about<font color="#E5E5E5"> which is</font>

567
00:29:06,740 --> 00:29:10,220
unsafe<font color="#E5E5E5"> in line so it's gonna whitelist</font>

568
00:29:08,300 --> 00:29:14,570
unsafe inline script all the inline

569
00:29:10,220 --> 00:29:17,600
scripts which is bad<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's better</font>

570
00:29:14,570 --> 00:29:19,720
<font color="#CCCCCC">than not controlling</font><font color="#E5E5E5"> inline scripts at</font>

571
00:29:17,600 --> 00:29:19,719
all

572
00:29:20,830 --> 00:29:30,350
<font color="#E5E5E5">okay what's not controlled by CSP</font>

573
00:29:24,460 --> 00:29:32,720
<font color="#E5E5E5">surprisingly any communication that</font>

574
00:29:30,350 --> 00:29:35,929
<font color="#E5E5E5">browser does to outside world</font><font color="#CCCCCC"> or like</font>

575
00:29:32,720 --> 00:29:37,580
when it loads resources<font color="#CCCCCC"> everything is</font>

576
00:29:35,930 --> 00:29:40,970
controlled<font color="#E5E5E5"> by CSP these days except</font>

577
00:29:37,580 --> 00:29:44,000
WebRTC<font color="#CCCCCC"> it's virtually it's just</font><font color="#E5E5E5"> a</font>

578
00:29:40,970 --> 00:29:46,420
technical limitation<font color="#CCCCCC"> because</font><font color="#E5E5E5"> everything</font>

579
00:29:44,000 --> 00:29:49,910
in modern<font color="#E5E5E5"> browsers go through fetch API</font>

580
00:29:46,420 --> 00:29:54,620
<font color="#CCCCCC">like when you load styles for</font><font color="#E5E5E5"> example</font><font color="#CCCCCC"> or</font>

581
00:29:49,910 --> 00:29:56,060
when you load images or<font color="#CCCCCC"> founds HTML</font>

582
00:29:54,620 --> 00:29:58,219
specification actually describes the

583
00:29:56,060 --> 00:29:59,960
algorithms how browser<font color="#E5E5E5"> are supposed to</font>

584
00:29:58,220 --> 00:30:02,090
implement the loading of<font color="#E5E5E5"> those resources</font>

585
00:29:59,960 --> 00:30:08,390
<font color="#CCCCCC">and it goes through an API called fetch</font>

586
00:30:02,090 --> 00:30:11,120
and CSP<font color="#E5E5E5"> is being applied at pre request</font>

587
00:30:08,390 --> 00:30:13,610
stage of that fetch API<font color="#E5E5E5"> except WebRTC</font>

588
00:30:11,120 --> 00:30:15,290
<font color="#E5E5E5">it's just technique technical limitation</font>

589
00:30:13,610 --> 00:30:19,610
<font color="#CCCCCC">because</font><font color="#E5E5E5"> web RTC is not implemented</font>

590
00:30:15,290 --> 00:30:22,460
through fetch<font color="#CCCCCC"> yet and turned out it's a</font>

591
00:30:19,610 --> 00:30:24,740
big problem<font color="#CCCCCC"> like there are</font><font color="#E5E5E5"> lots of</font>

592
00:30:22,460 --> 00:30:32,150
issues issues<font color="#E5E5E5"> on github reported about</font>

593
00:30:24,740 --> 00:30:33,860
it where adblock developers for example

594
00:30:32,150 --> 00:30:35,900
they<font color="#E5E5E5"> don't see web RTC connections</font>

595
00:30:33,860 --> 00:30:37,879
happening<font color="#E5E5E5"> in the world because like</font>

596
00:30:35,900 --> 00:30:39,890
adblock is a browser extension<font color="#E5E5E5"> and</font>

597
00:30:37,880 --> 00:30:43,490
browser extension can only see HTTP

598
00:30:39,890 --> 00:30:46,310
connections before they happened<font color="#CCCCCC"> and</font>

599
00:30:43,490 --> 00:30:48,550
they<font color="#E5E5E5"> don't see WebRTC and even if you</font>

600
00:30:46,310 --> 00:30:51,020
have<font color="#E5E5E5"> content security policy specified</font>

601
00:30:48,550 --> 00:30:52,639
<font color="#CCCCCC">content</font><font color="#E5E5E5"> security policy like mechanism</font>

602
00:30:51,020 --> 00:30:54,980
implementation in<font color="#CCCCCC"> the browser is not</font>

603
00:30:52,640 --> 00:30:57,170
<font color="#CCCCCC">going to see web RTC as well so right</font>

604
00:30:54,980 --> 00:31:00,110
now ad networks for<font color="#CCCCCC"> example are using</font>

605
00:30:57,170 --> 00:31:05,270
<font color="#E5E5E5">WebRTC to pull in</font><font color="#CCCCCC"> add content into the</font>

606
00:31:00,110 --> 00:31:07,159
web page<font color="#CCCCCC"> even if some browser extension</font>

607
00:31:05,270 --> 00:31:09,050
does not let that<font color="#CCCCCC"> happen or tries not</font>

608
00:31:07,160 --> 00:31:11,060
tries to prevent it or if you<font color="#E5E5E5"> have</font>

609
00:31:09,050 --> 00:31:13,879
content<font color="#E5E5E5"> security policy that prevents</font>

610
00:31:11,060 --> 00:31:17,210
<font color="#CCCCCC">that</font><font color="#E5E5E5"> locks down ads to be loaded from</font>

611
00:31:13,880 --> 00:31:18,790
specific<font color="#CCCCCC"> endpoints</font><font color="#E5E5E5"> so it's a problem</font><font color="#CCCCCC"> and</font>

612
00:31:17,210 --> 00:31:20,860
like<font color="#E5E5E5"> hopefully it will be fixed</font>

613
00:31:18,790 --> 00:31:26,770
but so far it's<font color="#E5E5E5"> not fixed it's the</font><font color="#CCCCCC"> only</font>

614
00:31:20,860 --> 00:31:29,949
way<font color="#E5E5E5"> to bypass the SP rate right now like</font>

615
00:31:26,770 --> 00:31:32,139
what can<font color="#E5E5E5"> you do to adopt</font><font color="#CCCCCC"> CSP</font><font color="#E5E5E5"> like as you</font>

616
00:31:29,950 --> 00:31:34,840
see in in this really really<font color="#CCCCCC"> simple</font>

617
00:31:32,140 --> 00:31:37,150
<font color="#E5E5E5">examples all you need to do to start</font>

618
00:31:34,840 --> 00:31:39,310
things doing<font color="#CCCCCC"> things is you can</font><font color="#E5E5E5"> start</font>

619
00:31:37,150 --> 00:31:42,250
with<font color="#CCCCCC"> meta</font><font color="#E5E5E5"> tag you just have this meta</font>

620
00:31:39,310 --> 00:31:44,710
tag with http-equiv content security

621
00:31:42,250 --> 00:31:47,110
policy and content for example defaults

622
00:31:44,710 --> 00:31:53,830
or self<font color="#E5E5E5"> this will at least make sure</font>

623
00:31:47,110 --> 00:31:56,469
<font color="#E5E5E5">that scripts are coming from</font><font color="#CCCCCC"> whatever</font>

624
00:31:53,830 --> 00:32:00,220
you from the locations<font color="#CCCCCC"> that you intended</font>

625
00:31:56,470 --> 00:32:02,230
to them to be come from<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this</font><font color="#E5E5E5"> can</font>

626
00:32:00,220 --> 00:32:04,720
<font color="#CCCCCC">be</font><font color="#E5E5E5"> important in the bigger corporations</font>

627
00:32:02,230 --> 00:32:07,120
where for example<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> policy where</font>

628
00:32:04,720 --> 00:32:11,290
all your dependencies<font color="#E5E5E5"> of your</font><font color="#CCCCCC"> webpage</font>

629
00:32:07,120 --> 00:32:15,790
<font color="#CCCCCC">should come from your</font><font color="#E5E5E5"> the websites that</font>

630
00:32:11,290 --> 00:32:18,340
<font color="#E5E5E5">you control if you're hosting jquery.com</font>

631
00:32:15,790 --> 00:32:21,250
Jake<font color="#E5E5E5"> jQuery specific version of jQuery</font>

632
00:32:18,340 --> 00:32:23,679
on your own in the corporate network<font color="#CCCCCC"> you</font>

633
00:32:21,250 --> 00:32:25,300
still don't know what what the jQuery

634
00:32:23,680 --> 00:32:26,800
that come is going to do like maybe

635
00:32:25,300 --> 00:32:30,340
there will be some like corner case

636
00:32:26,800 --> 00:32:33,820
where it<font color="#CCCCCC"> sees if it's</font><font color="#E5E5E5"> opera</font><font color="#CCCCCC"> it would</font>

637
00:32:30,340 --> 00:32:35,830
load some extra<font color="#E5E5E5"> resources from somewhere</font>

638
00:32:33,820 --> 00:32:38,530
else<font color="#E5E5E5"> and like you either have</font><font color="#CCCCCC"> to do</font>

639
00:32:35,830 --> 00:32:39,970
static<font color="#E5E5E5"> or dynamic analysis of the jQuery</font>

640
00:32:38,530 --> 00:32:42,430
that<font color="#E5E5E5"> come before hosting it in your</font>

641
00:32:39,970 --> 00:32:48,100
<font color="#E5E5E5">internal network or you can just use CSP</font>

642
00:32:42,430 --> 00:32:50,230
and<font color="#E5E5E5"> see if they're using that</font><font color="#CCCCCC"> jQuery</font>

643
00:32:48,100 --> 00:32:52,240
that<font color="#E5E5E5"> come that you hosted is going to</font>

644
00:32:50,230 --> 00:32:56,520
create any content security policy

645
00:32:52,240 --> 00:33:00,850
<font color="#CCCCCC">violations and then you can like adjust</font>

646
00:32:56,520 --> 00:33:03,940
either your policy or<font color="#CCCCCC"> just notify the</font>

647
00:33:00,850 --> 00:33:05,469
guys who are responsible<font color="#E5E5E5"> for hosting</font>

648
00:33:03,940 --> 00:33:09,420
<font color="#E5E5E5">that jQuery</font><font color="#CCCCCC"> that come that</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> to makes</font>

649
00:33:05,470 --> 00:33:09,420
external<font color="#E5E5E5"> requests so guys fix it</font>

650
00:33:10,830 --> 00:33:17,320
yeah content security policy has a very

651
00:33:13,300 --> 00:33:19,419
useful mode where you instead of saying

652
00:33:17,320 --> 00:33:21,669
<font color="#E5E5E5">content security policy as HTTP header</font>

653
00:33:19,420 --> 00:33:24,280
or meta tag header<font color="#E5E5E5"> you can say content</font>

654
00:33:21,670 --> 00:33:27,070
security policy report only<font color="#E5E5E5"> it will</font>

655
00:33:24,280 --> 00:33:30,580
behave<font color="#CCCCCC"> exactly like I described</font><font color="#E5E5E5"> but</font>

656
00:33:27,070 --> 00:33:32,570
instead of<font color="#E5E5E5"> enforcing content security</font>

657
00:33:30,580 --> 00:33:35,120
policy<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> just gonna</font>

658
00:33:32,570 --> 00:33:38,540
generate reports and still allow those

659
00:33:35,120 --> 00:33:40,399
scripts<font color="#E5E5E5"> from places that</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want</font>

660
00:33:38,540 --> 00:33:42,800
<font color="#E5E5E5">to be loaded it will still gonna like</font>

661
00:33:40,400 --> 00:33:45,230
it's still<font color="#E5E5E5"> gonna allow those things it</font>

662
00:33:42,800 --> 00:33:48,080
will just notify you as with<font color="#E5E5E5"> the within</font>

663
00:33:45,230 --> 00:33:51,020
<font color="#E5E5E5">the report</font><font color="#CCCCCC"> we will see what report looks</font>

664
00:33:48,080 --> 00:33:53,030
<font color="#E5E5E5">like a little later</font><font color="#CCCCCC"> yeah make sure</font><font color="#E5E5E5"> your</font>

665
00:33:51,020 --> 00:33:56,000
policy<font color="#E5E5E5"> works in like all the browsers</font>

666
00:33:53,030 --> 00:34:01,040
it's like really<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> like chrome did</font>

667
00:33:56,000 --> 00:34:05,150
<font color="#E5E5E5">really good job</font><font color="#CCCCCC"> at suggesting what</font><font color="#E5E5E5"> to do</font>

668
00:34:01,040 --> 00:34:09,320
<font color="#E5E5E5">like they even I don't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> what do</font><font color="#CCCCCC"> I do</font>

669
00:34:05,150 --> 00:34:10,760
<font color="#E5E5E5">on this web</font><font color="#CCCCCC"> page but here yeah</font><font color="#E5E5E5"> I'm</font>

670
00:34:09,320 --> 00:34:13,550
injecting<font color="#E5E5E5"> some inline script right</font>

671
00:34:10,760 --> 00:34:20,419
<font color="#E5E5E5">chrome even calculated the hash that</font>

672
00:34:13,550 --> 00:34:22,610
this char<font color="#E5E5E5"> to</font><font color="#CCCCCC"> 52:56</font><font color="#E5E5E5"> that corresponds to</font>

673
00:34:20,418 --> 00:34:25,339
the content of<font color="#E5E5E5"> the script that I want to</font>

674
00:34:22,610 --> 00:34:27,200
inject<font color="#CCCCCC"> so you can just copy this value</font>

675
00:34:25,340 --> 00:34:34,100
<font color="#E5E5E5">here and paste it in your hand and</font>

676
00:34:27,199 --> 00:34:35,870
security policy<font color="#E5E5E5"> I'll skip unsafe hashed</font>

677
00:34:34,100 --> 00:34:37,040
<font color="#CCCCCC">attribute</font><font color="#E5E5E5"> because it's really like I</font>

678
00:34:35,870 --> 00:34:38,630
think<font color="#E5E5E5"> it's going to be removed from the</font>

679
00:34:37,040 --> 00:34:43,340
specification<font color="#CCCCCC"> because there are some</font>

680
00:34:38,630 --> 00:34:45,230
<font color="#E5E5E5">arguments but basically attributes right</font>

681
00:34:43,340 --> 00:34:49,100
now right now I think it's implemented

682
00:34:45,230 --> 00:34:52,219
<font color="#E5E5E5">in Chrome you can specify hash of event</font>

683
00:34:49,100 --> 00:34:54,139
<font color="#E5E5E5">handlers like in and like whitelist</font>

684
00:34:52,219 --> 00:34:56,719
specific event handlers<font color="#CCCCCC"> that appear in</font>

685
00:34:54,139 --> 00:34:58,700
the HTML like for example<font color="#CCCCCC"> you have some</font>

686
00:34:56,719 --> 00:35:00,740
button and you have<font color="#E5E5E5"> own click and you</font>

687
00:34:58,700 --> 00:35:02,149
have some script that is<font color="#E5E5E5"> of the value of</font>

688
00:35:00,740 --> 00:35:03,649
the onclick attribute and you can

689
00:35:02,150 --> 00:35:07,420
through<font color="#E5E5E5"> unsafe hashed attributes you can</font>

690
00:35:03,650 --> 00:35:09,560
whitelist specifically those handlers

691
00:35:07,420 --> 00:35:14,330
<font color="#E5E5E5">but yeah it looks</font><font color="#CCCCCC"> like it's going</font><font color="#E5E5E5"> to be</font>

692
00:35:09,560 --> 00:35:16,220
removed<font color="#CCCCCC"> so for deployment you should</font>

693
00:35:14,330 --> 00:35:18,380
really<font color="#E5E5E5"> start with report only and see</font>

694
00:35:16,220 --> 00:35:20,569
what are the<font color="#E5E5E5"> reports that coming from</font>

695
00:35:18,380 --> 00:35:23,750
<font color="#E5E5E5">the wild from the like from the field</font>

696
00:35:20,570 --> 00:35:26,690
<font color="#E5E5E5">and adjust</font><font color="#CCCCCC"> your policy which should be</font>

697
00:35:23,750 --> 00:35:29,390
like should be<font color="#E5E5E5"> specified</font><font color="#CCCCCC"> as report only</font>

698
00:35:26,690 --> 00:35:32,600
at least like first week and try<font color="#E5E5E5"> to do</font>

699
00:35:29,390 --> 00:35:34,370
a/b testing like send<font color="#E5E5E5"> something with CSP</font>

700
00:35:32,600 --> 00:35:35,960
<font color="#CCCCCC">and without CSP or</font><font color="#E5E5E5"> like with two</font>

701
00:35:34,370 --> 00:35:38,210
different CSP is and try<font color="#E5E5E5"> to figure out</font>

702
00:35:35,960 --> 00:35:42,860
which one is<font color="#E5E5E5"> better which one serves</font>

703
00:35:38,210 --> 00:35:44,300
your<font color="#CCCCCC"> needs</font><font color="#E5E5E5"> reports so in content</font>

704
00:35:42,860 --> 00:35:47,780
security policy<font color="#E5E5E5"> there's a directive</font>

705
00:35:44,300 --> 00:35:50,300
called report to report<font color="#E5E5E5"> URI where you</font>

706
00:35:47,780 --> 00:35:52,460
can specify the URL where<font color="#CCCCCC"> you</font><font color="#E5E5E5"> want the</font>

707
00:35:50,300 --> 00:35:54,710
browser to<font color="#E5E5E5"> sent the violations to and</font>

708
00:35:52,460 --> 00:35:57,140
what<font color="#E5E5E5"> is the violation</font><font color="#CCCCCC"> violation is a</font>

709
00:35:54,710 --> 00:36:01,070
basically<font color="#CCCCCC"> JSON violation is a post</font>

710
00:35:57,140 --> 00:36:03,049
request<font color="#E5E5E5"> with a JSON blob in the body</font><font color="#CCCCCC"> and</font>

711
00:36:01,070 --> 00:36:08,540
the JSON blob well this is the

712
00:36:03,050 --> 00:36:11,270
<font color="#E5E5E5">description of the web web IDL</font>

713
00:36:08,540 --> 00:36:14,029
description of the the the<font color="#E5E5E5"> the object</font>

714
00:36:11,270 --> 00:36:18,530
that report contains but this is actual

715
00:36:14,030 --> 00:36:22,070
example<font color="#E5E5E5"> so it's a JSON blob with which</font>

716
00:36:18,530 --> 00:36:24,230
says here the report was<font color="#CCCCCC"> generated at</font>

717
00:36:22,070 --> 00:36:27,350
this origin<font color="#E5E5E5"> while the</font><font color="#CCCCCC"> web</font><font color="#E5E5E5"> page was at</font>

718
00:36:24,230 --> 00:36:29,420
this like origin this<font color="#E5E5E5"> is an example the</font>

719
00:36:27,350 --> 00:36:32,029
refer is empty<font color="#E5E5E5"> for example what was</font>

720
00:36:29,420 --> 00:36:35,180
blocked<font color="#E5E5E5"> and inline script which is good</font>

721
00:36:32,030 --> 00:36:39,200
which<font color="#E5E5E5"> the directive was violated script</font>

722
00:36:35,180 --> 00:36:41,720
source<font color="#CCCCCC"> I don't remember what effective</font>

723
00:36:39,200 --> 00:36:44,450
directive is what like it will send you

724
00:36:41,720 --> 00:36:45,560
the actual like the original policy

725
00:36:44,450 --> 00:36:48,200
because there might<font color="#CCCCCC"> be browser</font>

726
00:36:45,560 --> 00:36:49,970
extensions<font color="#E5E5E5"> that would modify the content</font>

727
00:36:48,200 --> 00:36:52,310
security policy policy<font color="#CCCCCC"> before it's being</font>

728
00:36:49,970 --> 00:36:54,410
parsed<font color="#E5E5E5"> so from that from from from</font><font color="#CCCCCC"> this</font>

729
00:36:52,310 --> 00:36:56,270
field you can tell if some browser

730
00:36:54,410 --> 00:37:01,839
extension<font color="#CCCCCC"> actually modified the content</font>

731
00:36:56,270 --> 00:37:01,840
security policy<font color="#E5E5E5"> before it was parsed and</font>

732
00:37:12,539 --> 00:37:16,829
this<font color="#CCCCCC"> filled sample was added really</font>

733
00:37:14,849 --> 00:37:21,569
recently<font color="#E5E5E5"> by these</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> Google guys</font>

734
00:37:16,829 --> 00:37:24,329
<font color="#CCCCCC">Michelle</font><font color="#E5E5E5"> and Lucas and now content</font>

735
00:37:21,569 --> 00:37:27,599
<font color="#E5E5E5">security policy violation also contains</font>

736
00:37:24,329 --> 00:37:30,419
a snippet like first<font color="#E5E5E5"> I think first 256</font>

737
00:37:27,599 --> 00:37:33,239
<font color="#E5E5E5">bytes of</font><font color="#CCCCCC"> the script that</font><font color="#E5E5E5"> violated here</font>

738
00:37:30,419 --> 00:37:35,308
violated the policy<font color="#E5E5E5"> like in my</font><font color="#CCCCCC"> case I</font>

739
00:37:33,239 --> 00:37:38,309
try<font color="#CCCCCC"> to inject alert 1 and I actually</font>

740
00:37:35,309 --> 00:37:41,609
know<font color="#E5E5E5"> what happened</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> previously</font><font color="#CCCCCC"> it</font>

741
00:37:38,309 --> 00:37:44,549
was really hard to<font color="#CCCCCC"> tell what caused the</font>

742
00:37:41,609 --> 00:37:47,819
violation<font color="#E5E5E5"> like</font><font color="#CCCCCC"> without this without</font>

743
00:37:44,549 --> 00:37:49,469
without this field this report is quite

744
00:37:47,819 --> 00:37:51,569
useless because<font color="#E5E5E5"> yeah you know there was</font>

745
00:37:49,469 --> 00:37:53,459
violation somewhere<font color="#E5E5E5"> but what was</font>

746
00:37:51,569 --> 00:37:55,859
violated<font color="#E5E5E5"> and how it was violated you</font>

747
00:37:53,459 --> 00:37:57,629
didn't know and people were<font color="#CCCCCC"> just like</font>

748
00:37:55,859 --> 00:38:00,538
<font color="#E5E5E5">ignoring their reports</font><font color="#CCCCCC"> because you</font>

749
00:37:57,630 --> 00:38:02,999
cannot tell much much by looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> this</font>

750
00:38:00,539 --> 00:38:05,539
<font color="#CCCCCC">without</font><font color="#E5E5E5"> this sample and yeah version 3</font>

751
00:38:02,999 --> 00:38:10,259
now contains<font color="#E5E5E5"> the sample at a sample</font>

752
00:38:05,539 --> 00:38:14,609
property<font color="#E5E5E5"> which hints you</font><font color="#CCCCCC"> what was</font>

753
00:38:10,259 --> 00:38:19,709
actually<font color="#E5E5E5"> how violation occurred</font><font color="#CCCCCC"> oh and</font>

754
00:38:14,609 --> 00:38:21,538
this<font color="#E5E5E5"> position tells you if</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> in like</font>

755
00:38:19,709 --> 00:38:23,989
enforcement mode<font color="#E5E5E5"> if policy is in</font>

756
00:38:21,539 --> 00:38:27,029
enforcement<font color="#E5E5E5"> mode or if it's if it was a</font>

757
00:38:23,989 --> 00:38:30,409
report only mode<font color="#CCCCCC"> will</font><font color="#E5E5E5"> just basically say</font>

758
00:38:27,029 --> 00:38:30,409
report only<font color="#E5E5E5"> instead of</font><font color="#CCCCCC"> enforce</font>

759
00:38:33,169 --> 00:38:38,279
unfortunately still<font color="#E5E5E5"> like for example I</font>

760
00:38:35,819 --> 00:38:42,229
have a web app<font color="#CCCCCC"> that uses CSP</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> I</font>

761
00:38:38,279 --> 00:38:46,079
received violations<font color="#CCCCCC"> every day and</font>

762
00:38:42,229 --> 00:38:49,618
there's a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of noise caused by browser</font>

763
00:38:46,079 --> 00:38:51,929
extensions like for<font color="#CCCCCC"> example</font><font color="#E5E5E5"> all kinds of</font>

764
00:38:49,619 --> 00:38:54,749
ad blockers<font color="#E5E5E5"> will try to</font><font color="#CCCCCC"> block something</font>

765
00:38:51,929 --> 00:38:57,029
<font color="#E5E5E5">on your web page and that would cause a</font>

766
00:38:54,749 --> 00:38:59,308
<font color="#CCCCCC">content</font><font color="#E5E5E5"> security policy violation or if</font>

767
00:38:57,029 --> 00:39:01,529
there's an extension<font color="#E5E5E5"> that changes like</font>

768
00:38:59,309 --> 00:39:03,929
you you have<font color="#CCCCCC"> an extension</font><font color="#E5E5E5"> that changes</font>

769
00:39:01,529 --> 00:39:06,469
default styles of the web page that<font color="#CCCCCC"> will</font>

770
00:39:03,929 --> 00:39:08,880
try to inject<font color="#E5E5E5"> some custom style that you</font>

771
00:39:06,469 --> 00:39:11,400
didn't want to<font color="#E5E5E5"> be injected and you</font>

772
00:39:08,880 --> 00:39:13,349
actually enforce it through your<font color="#E5E5E5"> content</font>

773
00:39:11,400 --> 00:39:15,329
security policy<font color="#E5E5E5"> and that will cause a</font>

774
00:39:13,349 --> 00:39:18,659
<font color="#E5E5E5">content security policy violation and</font>

775
00:39:15,329 --> 00:39:20,849
you<font color="#CCCCCC"> receive so</font><font color="#E5E5E5"> many reports every day</font>

776
00:39:18,659 --> 00:39:22,769
that you might miss<font color="#E5E5E5"> actual attack</font>

777
00:39:20,849 --> 00:39:24,610
happening<font color="#E5E5E5"> on your website</font><font color="#CCCCCC"> so you you</font>

778
00:39:22,769 --> 00:39:30,669
need<font color="#CCCCCC"> to really have a good</font><font color="#E5E5E5"> filter in</font>

779
00:39:24,610 --> 00:39:32,380
<font color="#E5E5E5">like I don't know maybe maybe you want</font>

780
00:39:30,670 --> 00:39:34,630
<font color="#E5E5E5">to ignore violations cause</font><font color="#CCCCCC"> base</font><font color="#E5E5E5"> what</font>

781
00:39:32,380 --> 00:39:36,460
caused by style sources or image sources

782
00:39:34,630 --> 00:39:38,110
because you don't<font color="#CCCCCC"> really care if there</font>

783
00:39:36,460 --> 00:39:44,490
was like image injection on your<font color="#CCCCCC"> webpage</font>

784
00:39:38,110 --> 00:39:47,320
<font color="#CCCCCC">so and unfortunately there's no like</font>

785
00:39:44,490 --> 00:39:49,600
<font color="#E5E5E5">ready solutions that would let you</font>

786
00:39:47,320 --> 00:39:53,590
easily filter<font color="#E5E5E5"> content</font><font color="#CCCCCC"> security policy</font>

787
00:39:49,600 --> 00:39:56,680
violations<font color="#CCCCCC"> there is a I think on the</font>

788
00:39:53,590 --> 00:40:00,400
<font color="#CCCCCC">next page no I don't</font><font color="#E5E5E5"> have it well my</font>

789
00:39:56,680 --> 00:40:02,919
last slide<font color="#CCCCCC"> I ever</font><font color="#E5E5E5"> resources listed and</font>

790
00:40:00,400 --> 00:40:06,310
for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> there's a paid</font><font color="#E5E5E5"> service</font>

791
00:40:02,920 --> 00:40:09,130
called<font color="#E5E5E5"> reports that CSP report that I oh</font>

792
00:40:06,310 --> 00:40:12,340
I<font color="#E5E5E5"> think and you can point your CSV file</font>

793
00:40:09,130 --> 00:40:14,140
your report URI to that service<font color="#E5E5E5"> and they</font>

794
00:40:12,340 --> 00:40:17,530
would do some aggregation<font color="#E5E5E5"> and do some</font>

795
00:40:14,140 --> 00:40:20,170
like analysis of violations but I don't

796
00:40:17,530 --> 00:40:22,240
<font color="#E5E5E5">think it's good enough and there's room</font>

797
00:40:20,170 --> 00:40:23,760
for improvement<font color="#E5E5E5"> and I'm still expecting</font>

798
00:40:22,240 --> 00:40:26,799
<font color="#E5E5E5">waiting for somebody to develop</font>

799
00:40:23,760 --> 00:40:28,780
<font color="#CCCCCC">something nice that would analyze the</font>

800
00:40:26,800 --> 00:40:33,100
content<font color="#CCCCCC"> security policy policies policy</font>

801
00:40:28,780 --> 00:40:36,340
violations<font color="#CCCCCC"> best</font><font color="#E5E5E5"> practices yet try to</font>

802
00:40:33,100 --> 00:40:41,410
avoid white lists<font color="#CCCCCC"> because we know that</font>

803
00:40:36,340 --> 00:40:42,610
<font color="#E5E5E5">they</font><font color="#CCCCCC"> are by passable and like strict</font>

804
00:40:41,410 --> 00:40:45,430
dynamic is pretty good<font color="#CCCCCC"> solution for</font>

805
00:40:42,610 --> 00:40:50,560
almost everything<font color="#E5E5E5"> always have default</font>

806
00:40:45,430 --> 00:40:51,759
source<font color="#CCCCCC"> because you don't want if you</font>

807
00:40:50,560 --> 00:40:53,170
don't<font color="#E5E5E5"> have default source and for</font>

808
00:40:51,760 --> 00:40:54,850
<font color="#E5E5E5">example don't have a</font><font color="#CCCCCC"> specific resource</font>

809
00:40:53,170 --> 00:40:57,850
directive like<font color="#E5E5E5"> you don't have font</font>

810
00:40:54,850 --> 00:40:59,529
source specified<font color="#E5E5E5"> that means fonts are</font>

811
00:40:57,850 --> 00:41:01,150
allowed<font color="#E5E5E5"> from anywhere browser is not</font>

812
00:40:59,530 --> 00:41:02,470
going to<font color="#CCCCCC"> enforce</font><font color="#E5E5E5"> anything or for</font><font color="#CCCCCC"> example</font>

813
00:41:01,150 --> 00:41:04,510
if you<font color="#E5E5E5"> don't have default source and</font>

814
00:41:02,470 --> 00:41:06,250
don't have object source objects or

815
00:41:04,510 --> 00:41:07,360
plugins will be allowed from anywhere<font color="#E5E5E5"> so</font>

816
00:41:06,250 --> 00:41:09,880
always have default source in<font color="#CCCCCC"> your</font>

817
00:41:07,360 --> 00:41:15,430
<font color="#E5E5E5">policy and like default source none will</font>

818
00:41:09,880 --> 00:41:17,110
by default restrict anything<font color="#CCCCCC"> to nothing</font>

819
00:41:15,430 --> 00:41:21,700
is allowed to<font color="#CCCCCC"> be load it if you</font><font color="#E5E5E5"> have</font>

820
00:41:17,110 --> 00:41:23,920
default source none<font color="#CCCCCC"> use</font><font color="#E5E5E5"> nonsense</font>

821
00:41:21,700 --> 00:41:25,870
wherever possible<font color="#E5E5E5"> in your</font><font color="#CCCCCC"> at least with</font>

822
00:41:23,920 --> 00:41:27,910
<font color="#E5E5E5">your scripts and styles or maybe just</font>

823
00:41:25,870 --> 00:41:30,549
scripts and consider using strict

824
00:41:27,910 --> 00:41:33,790
dynamic<font color="#E5E5E5"> do not use unsafe eval unsafe</font>

825
00:41:30,550 --> 00:41:36,550
<font color="#E5E5E5">evil is another key word in content</font>

826
00:41:33,790 --> 00:41:37,190
security policy<font color="#E5E5E5"> that will allow evil</font><font color="#CCCCCC"> to</font>

827
00:41:36,550 --> 00:41:39,829
happen on the way

828
00:41:37,190 --> 00:41:42,589
<font color="#CCCCCC">Paige and</font><font color="#E5E5E5"> by default if unsafe eval is</font>

829
00:41:39,829 --> 00:41:43,910
not specified<font color="#CCCCCC"> no eval sir no script</font>

830
00:41:42,589 --> 00:41:49,369
evaluations are allowed in the

831
00:41:43,910 --> 00:41:52,848
JavaScript context here are some

832
00:41:49,369 --> 00:41:56,390
<font color="#E5E5E5">statistics that I ran on Alexa top 1</font>

833
00:41:52,849 --> 00:42:03,670
million<font color="#CCCCCC"> like in September 2016 compared</font>

834
00:41:56,390 --> 00:42:07,009
to June 2017<font color="#CCCCCC"> there are much less</font>

835
00:42:03,670 --> 00:42:10,460
policies<font color="#CCCCCC"> found with report on in report</font>

836
00:42:07,010 --> 00:42:13,130
only mode<font color="#E5E5E5"> which is probably good because</font>

837
00:42:10,460 --> 00:42:17,540
<font color="#CCCCCC">people probably switched from</font><font color="#E5E5E5"> report</font>

838
00:42:13,130 --> 00:42:20,329
only to<font color="#E5E5E5"> like enforcement mode still</font>

839
00:42:17,540 --> 00:42:22,460
adoption level<font color="#CCCCCC"> is pretty</font><font color="#E5E5E5"> low from 1</font>

840
00:42:20,329 --> 00:42:25,940
million websites<font color="#CCCCCC"> only 15,000 are using</font>

841
00:42:22,460 --> 00:42:27,859
in 2017<font color="#E5E5E5"> but like ice can't without</font>

842
00:42:25,940 --> 00:42:29,900
authenticating into the<font color="#E5E5E5"> website</font><font color="#CCCCCC"> so maybe</font>

843
00:42:27,859 --> 00:42:32,839
they like Facebook<font color="#CCCCCC"> for example serves</font>

844
00:42:29,900 --> 00:42:37,880
CSP after authentication so I'm<font color="#E5E5E5"> not</font>

845
00:42:32,839 --> 00:42:41,810
<font color="#E5E5E5">counting</font><font color="#CCCCCC"> that lots of people compared</font>

846
00:42:37,880 --> 00:42:45,800
<font color="#E5E5E5">like</font><font color="#CCCCCC"> if you compare September 10th 2007</font>

847
00:42:41,810 --> 00:42:47,450
<font color="#CCCCCC">16 with June 17 much more people are</font>

848
00:42:45,800 --> 00:42:51,380
started using reports<font color="#E5E5E5"> and started</font>

849
00:42:47,450 --> 00:42:52,910
collecting reports<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is this</font><font color="#CCCCCC"> doesn't</font>

850
00:42:51,380 --> 00:42:56,720
probably<font color="#E5E5E5"> mean anything is just like</font>

851
00:42:52,910 --> 00:42:58,490
statistics which directives are most

852
00:42:56,720 --> 00:43:00,368
popular<font color="#E5E5E5"> of course script source is most</font>

853
00:42:58,490 --> 00:43:03,020
popular because injections are

854
00:43:00,369 --> 00:43:06,079
exploitable mostly through scripts or

855
00:43:03,020 --> 00:43:11,960
through<font color="#CCCCCC"> Java scripts and not true say</font>

856
00:43:06,079 --> 00:43:16,150
images or<font color="#CCCCCC"> fonts or media source makes</font>

857
00:43:11,960 --> 00:43:21,380
sense like it grows steadily<font color="#E5E5E5"> but still</font>

858
00:43:16,150 --> 00:43:24,650
not fast<font color="#E5E5E5"> enough oh I also developed a</font>

859
00:43:21,380 --> 00:43:26,599
Java<font color="#CCCCCC"> library which deals with content</font>

860
00:43:24,650 --> 00:43:29,240
security policy at<font color="#E5E5E5"> runtime basically you</font>

861
00:43:26,599 --> 00:43:31,490
can pass a<font color="#E5E5E5"> content security policy to</font>

862
00:43:29,240 --> 00:43:33,200
<font color="#E5E5E5">the to my</font><font color="#CCCCCC"> library and</font><font color="#E5E5E5"> it will analyze it</font>

863
00:43:31,490 --> 00:43:36,379
and<font color="#E5E5E5"> say if there's like some critical</font>

864
00:43:33,200 --> 00:43:40,210
errors<font color="#CCCCCC"> or like some some well I</font><font color="#E5E5E5"> have</font>

865
00:43:36,380 --> 00:43:45,369
<font color="#E5E5E5">three level of levels of pilot reports</font>

866
00:43:40,210 --> 00:43:48,069
warnings<font color="#E5E5E5"> errors and information and I</font>

867
00:43:45,369 --> 00:43:51,069
think on<font color="#E5E5E5"> the next slide it's more</font>

868
00:43:48,069 --> 00:43:51,069
detailed

869
00:43:52,470 --> 00:43:59,020
January 2017 compared to June 2017

870
00:43:56,790 --> 00:44:01,600
<font color="#CCCCCC">people were using</font><font color="#E5E5E5"> I don't know some</font>

871
00:43:59,020 --> 00:44:03,720
<font color="#E5E5E5">really outdated directive names that are</font>

872
00:44:01,600 --> 00:44:05,950
not supported by any browser<font color="#E5E5E5"> anymore</font>

873
00:44:03,720 --> 00:44:10,029
<font color="#CCCCCC">they were using</font><font color="#E5E5E5"> those directive names</font>

874
00:44:05,950 --> 00:44:11,830
much<font color="#CCCCCC"> more frequently</font><font color="#E5E5E5"> in the beginning of</font>

875
00:44:10,030 --> 00:44:17,500
the year than in<font color="#E5E5E5"> the middle of the year</font>

876
00:44:11,830 --> 00:44:20,049
<font color="#E5E5E5">or they have some typos in the value</font>

877
00:44:17,500 --> 00:44:21,970
<font color="#E5E5E5">part of the CSP like they have script</font>

878
00:44:20,050 --> 00:44:25,030
source<font color="#E5E5E5"> which is like valid but then they</font>

879
00:44:21,970 --> 00:44:26,799
have some some typos or some illegal

880
00:44:25,030 --> 00:44:29,620
characters that are basically<font color="#CCCCCC"> making</font>

881
00:44:26,800 --> 00:44:31,660
prowl to ignore the whole<font color="#E5E5E5"> directive like</font>

882
00:44:29,620 --> 00:44:35,410
<font color="#CCCCCC">19 percent of</font><font color="#E5E5E5"> policies</font><font color="#CCCCCC"> actually contain</font>

883
00:44:31,660 --> 00:44:40,839
still contain errors in the source

884
00:44:35,410 --> 00:44:43,509
expression or yeah some some some errors

885
00:44:40,840 --> 00:44:45,460
<font color="#E5E5E5">in the directive name itself or</font><font color="#CCCCCC"> there's</font>

886
00:44:43,510 --> 00:44:47,490
some people<font color="#E5E5E5"> use non ASCII characters and</font>

887
00:44:45,460 --> 00:44:51,910
you cannot use any non ASCII character

888
00:44:47,490 --> 00:44:55,240
in any HTTP header<font color="#E5E5E5"> and CSP is not an</font>

889
00:44:51,910 --> 00:44:57,759
exception<font color="#E5E5E5"> if you want to have something</font>

890
00:44:55,240 --> 00:45:03,100
<font color="#E5E5E5">known ask you just have to URL encode it</font>

891
00:44:57,760 --> 00:45:09,970
as you would do in URL<font color="#E5E5E5"> that the limiters</font>

892
00:45:03,100 --> 00:45:12,790
between CSP directives<font color="#CCCCCC"> or is semicolon</font>

893
00:45:09,970 --> 00:45:15,129
and some people<font color="#CCCCCC"> just make mistakes and</font>

894
00:45:12,790 --> 00:45:16,960
put commas there and you<font color="#E5E5E5"> just gonna like</font>

895
00:45:15,130 --> 00:45:19,030
stop parsing the policy<font color="#E5E5E5"> right after the</font>

896
00:45:16,960 --> 00:45:20,440
comma<font color="#E5E5E5"> and people might not realize</font><font color="#CCCCCC"> it</font>

897
00:45:19,030 --> 00:45:22,330
and today<font color="#E5E5E5"> they would think</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> are</font>

898
00:45:20,440 --> 00:45:24,100
protecting their website but in fact

899
00:45:22,330 --> 00:45:28,509
browser is<font color="#CCCCCC"> just</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to ignore whatever</font>

900
00:45:24,100 --> 00:45:30,130
<font color="#E5E5E5">is after</font><font color="#CCCCCC"> the comma and unfortunately by</font>

901
00:45:28,510 --> 00:45:34,030
the<font color="#CCCCCC"> way</font><font color="#E5E5E5"> Chrome or like Firefox is not</font>

902
00:45:30,130 --> 00:45:36,280
going to warn you<font color="#CCCCCC"> about it and yeah</font>

903
00:45:34,030 --> 00:45:39,940
these are resources<font color="#CCCCCC"> this CSP evaluator</font>

904
00:45:36,280 --> 00:45:41,560
is by Google it's a<font color="#E5E5E5"> pretty good thing</font><font color="#CCCCCC"> to</font>

905
00:45:39,940 --> 00:45:43,870
like evaluate<font color="#E5E5E5"> your policy and</font><font color="#CCCCCC"> get</font>

906
00:45:41,560 --> 00:45:47,110
<font color="#E5E5E5">suggestions what you have to do with</font>

907
00:45:43,870 --> 00:45:50,490
<font color="#E5E5E5">your policy this is the library</font><font color="#CCCCCC"> that I</font>

908
00:45:47,110 --> 00:45:55,840
developed it's used by w3c is HTML

909
00:45:50,490 --> 00:45:56,500
validator yeah<font color="#E5E5E5"> official w3c HTML</font>

910
00:45:55,840 --> 00:45:59,170
validator

911
00:45:56,500 --> 00:46:01,870
it's used by<font color="#CCCCCC"> SAP proxy for example is</font>

912
00:45:59,170 --> 00:46:03,030
used<font color="#E5E5E5"> by some commercial websites report</font>

913
00:46:01,870 --> 00:46:08,279
URI<font color="#E5E5E5"> that</font>

914
00:46:03,030 --> 00:46:12,060
is the<font color="#E5E5E5"> service paid service that my that</font>

915
00:46:08,280 --> 00:46:14,250
would<font color="#E5E5E5"> par collect your violations and</font>

916
00:46:12,060 --> 00:46:17,820
then like analyze it and like generate

917
00:46:14,250 --> 00:46:24,350
nice graphs or maybe do some<font color="#E5E5E5"> statistical</font>

918
00:46:17,820 --> 00:46:30,360
analysis<font color="#E5E5E5"> and and that's it</font><font color="#CCCCCC"> I think so</font>

919
00:46:24,350 --> 00:46:32,279
share any questions or<font color="#E5E5E5"> suggestions or</font>

920
00:46:30,360 --> 00:46:34,680
like<font color="#E5E5E5"> explanation why you guys are still</font>

921
00:46:32,280 --> 00:46:37,040
<font color="#E5E5E5">not using CSP I'll be happy to discuss</font>

922
00:46:34,680 --> 00:46:37,040
<font color="#CCCCCC">it</font>

923
00:46:54,490 --> 00:47:01,850
of course<font color="#E5E5E5"> they totally can but CSP is</font>

924
00:47:00,680 --> 00:47:04,220
not going to help<font color="#CCCCCC"> you because attacker</font>

925
00:47:01,850 --> 00:47:06,580
can just inject whatever<font color="#E5E5E5"> JavaScript he</font>

926
00:47:04,220 --> 00:47:10,129
wants to be evaluated<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> webpage</font>

927
00:47:06,580 --> 00:47:14,120
<font color="#CCCCCC">directly without like without</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> maybe</font>

928
00:47:10,130 --> 00:47:17,840
touching CSP<font color="#CCCCCC"> but the idea is it makes</font>

929
00:47:14,120 --> 00:47:19,640
<font color="#E5E5E5">sense to use CSP widget with</font><font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> and</font>

930
00:47:17,840 --> 00:47:23,540
like<font color="#E5E5E5"> really secure HTTP like you</font>

931
00:47:19,640 --> 00:47:25,100
<font color="#E5E5E5">shouldn't really yeah assumption is well</font>

932
00:47:23,540 --> 00:47:28,580
assumption is that<font color="#E5E5E5"> you should always use</font>

933
00:47:25,100 --> 00:47:30,339
<font color="#CCCCCC">HTTPS these days yeah</font><font color="#E5E5E5"> and Chrome and</font>

934
00:47:28,580 --> 00:47:33,950
Firefox are doing<font color="#E5E5E5"> pretty good job</font>

935
00:47:30,340 --> 00:47:38,030
deprecating by deprecating<font color="#CCCCCC"> websites that</font>

936
00:47:33,950 --> 00:47:39,950
allow<font color="#E5E5E5"> plaintext communications and CSP</font>

937
00:47:38,030 --> 00:47:42,710
is also like have couple of directives

938
00:47:39,950 --> 00:47:45,169
that enforces it there's a upgrading

939
00:47:42,710 --> 00:47:47,720
secure request directive<font color="#E5E5E5"> that</font><font color="#CCCCCC"> basically</font>

940
00:47:45,170 --> 00:47:49,910
instructs a browser<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if your webpage</font>

941
00:47:47,720 --> 00:47:52,330
that<font color="#CCCCCC"> you served contains a plain</font><font color="#E5E5E5"> text</font>

942
00:47:49,910 --> 00:47:57,230
link to<font color="#CCCCCC"> something like for example</font><font color="#E5E5E5"> image</font>

943
00:47:52,330 --> 00:47:59,390
that has HTTP scheme browser will ignore

944
00:47:57,230 --> 00:48:01,520
<font color="#CCCCCC">that HTTP if there is a upgrade in</font>

945
00:47:59,390 --> 00:48:03,920
<font color="#CCCCCC">secure request directive in CSP browser</font>

946
00:48:01,520 --> 00:48:06,680
will ignore HTTP and upgrade HTTP to

947
00:48:03,920 --> 00:48:11,120
HTTPS blindly<font color="#CCCCCC"> or</font><font color="#E5E5E5"> there is</font><font color="#CCCCCC"> another</font>

948
00:48:06,680 --> 00:48:14,540
directive<font color="#E5E5E5"> called block mixed content it</font>

949
00:48:11,120 --> 00:48:15,950
will not let again it will<font color="#E5E5E5"> not let plain</font>

950
00:48:14,540 --> 00:48:18,440
<font color="#E5E5E5">text communications happen within the</font>

951
00:48:15,950 --> 00:48:21,109
web page if you have<font color="#E5E5E5"> the directive it</font>

952
00:48:18,440 --> 00:48:23,840
will basically enforce and so like

953
00:48:21,110 --> 00:48:25,610
attacks like<font color="#CCCCCC"> HTTP</font><font color="#E5E5E5"> downgrade it will not</font>

954
00:48:23,840 --> 00:48:33,380
work on the<font color="#CCCCCC"> webpage and that's only</font>

955
00:48:25,610 --> 00:48:36,180
enforceable<font color="#E5E5E5"> by CSP these days</font><font color="#CCCCCC"> I think</font>

956
00:48:33,380 --> 00:48:40,989
that's it then<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font>

957
00:48:36,180 --> 00:48:40,989
[Applause]

