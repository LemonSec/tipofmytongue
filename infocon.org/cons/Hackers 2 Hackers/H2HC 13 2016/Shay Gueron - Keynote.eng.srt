1
00:00:00,030 --> 00:00:09,559
hola todos están muy<font color="#CCCCCC"> feliz cool startup</font>

2
00:00:04,680 --> 00:00:09,559
he is fair okay<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a let's play with me</font>

3
00:00:10,040 --> 00:00:17,400
<font color="#CCCCCC">the</font><font color="#E5E5E5"> rest will be in English right</font>

4
00:00:12,929 --> 00:00:20,640
this is<font color="#E5E5E5"> there okay so we're going to</font>

5
00:00:17,400 --> 00:00:23,278
talk<font color="#CCCCCC"> about memory attacks or attacks on</font>

6
00:00:20,640 --> 00:00:24,869
memory but act with a with an<font color="#E5E5E5"> additional</font>

7
00:00:23,279 --> 00:00:28,920
constraint<font color="#E5E5E5"> that the memory is encrypted</font>

8
00:00:24,869 --> 00:00:32,519
<font color="#CCCCCC">so is the deal arm</font><font color="#E5E5E5"> of the system really</font>

9
00:00:28,920 --> 00:00:34,590
vulnerable and<font color="#CCCCCC"> maybe encryption</font><font color="#E5E5E5"> would</font>

10
00:00:32,520 --> 00:00:38,070
save the day<font color="#E5E5E5"> and by the end of the talk</font>

11
00:00:34,590 --> 00:00:43,230
<font color="#CCCCCC">we'll learn that the answer is is no way</font>

12
00:00:38,070 --> 00:00:44,879
<font color="#E5E5E5">no</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> are going to</font><font color="#E5E5E5"> discuss some</font>

13
00:00:43,230 --> 00:00:47,430
demonstrations all of them are<font color="#E5E5E5"> very</font>

14
00:00:44,879 --> 00:00:50,550
recent<font color="#CCCCCC"> and I would like to mention my</font>

15
00:00:47,430 --> 00:00:54,570
collaborators so there is a paper<font color="#CCCCCC"> that</font>

16
00:00:50,550 --> 00:00:56,550
<font color="#E5E5E5">we present it at hosts 2016 called</font>

17
00:00:54,570 --> 00:00:58,940
blinded random corruption attacks and

18
00:00:56,550 --> 00:01:02,819
this is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> joint work</font><font color="#CCCCCC"> with regal and</font>

19
00:00:58,940 --> 00:01:06,298
<font color="#E5E5E5">myself and another work so this was</font>

20
00:01:02,820 --> 00:01:08,820
around the middle of 2016

21
00:01:06,299 --> 00:01:10,560
<font color="#E5E5E5">later there was a another demonstration</font>

22
00:01:08,820 --> 00:01:12,600
<font color="#CCCCCC">it's called the fault attacks on</font>

23
00:01:10,560 --> 00:01:15,360
encrypted general-purpose<font color="#E5E5E5"> computer</font>

24
00:01:12,600 --> 00:01:17,369
platform and this has<font color="#E5E5E5"> been published as</font>

25
00:01:15,360 --> 00:01:19,200
a poster at chess we just<font color="#CCCCCC"> announced this</font>

26
00:01:17,369 --> 00:01:22,409
and this is with several collaborators

27
00:01:19,200 --> 00:01:25,860
all of them from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Technic Technical</font>

28
00:01:22,409 --> 00:01:28,680
University of Berlin<font color="#E5E5E5"> so young</font>

29
00:01:25,860 --> 00:01:31,049
jean-pierre ciphers<font color="#E5E5E5"> and union data and</font>

30
00:01:28,680 --> 00:01:32,070
myself<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> will see where we are</font>

31
00:01:31,049 --> 00:01:34,310
<font color="#CCCCCC">going with this</font>

32
00:01:32,070 --> 00:01:38,039
<font color="#E5E5E5">and we are going</font><font color="#CCCCCC"> to show something</font>

33
00:01:34,310 --> 00:01:41,400
extremely new today a demonstration by

34
00:01:38,040 --> 00:01:44,180
myself and<font color="#E5E5E5"> Rodrigo and this is going to</font>

35
00:01:41,400 --> 00:01:49,860
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> be the first time that that</font>

36
00:01:44,180 --> 00:01:52,140
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is presented no maybe this is maybe</font>

37
00:01:49,860 --> 00:01:54,570
this is this is better so I'll start

38
00:01:52,140 --> 00:01:56,729
with background some old<font color="#E5E5E5"> views so if you</font>

39
00:01:54,570 --> 00:01:59,850
have an attacker adversary in<font color="#E5E5E5"> the crypto</font>

40
00:01:56,729 --> 00:02:03,329
<font color="#E5E5E5">world who has a physical access to</font><font color="#CCCCCC"> two</font>

41
00:01:59,850 --> 00:02:06,390
to<font color="#E5E5E5"> the platform this</font><font color="#CCCCCC"> is a big concern</font>

42
00:02:03,329 --> 00:02:09,149
<font color="#CCCCCC">and the two extremes are mobile devices</font>

43
00:02:06,390 --> 00:02:12,349
<font color="#CCCCCC">like a cell phone that is stolen</font>

44
00:02:09,149 --> 00:02:15,510
or lost<font color="#E5E5E5"> and there are many secrets</font>

45
00:02:12,349 --> 00:02:17,790
<font color="#CCCCCC">residing in the memory and the other</font>

46
00:02:15,510 --> 00:02:19,739
<font color="#E5E5E5">extreme</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> cloud computing environment</font>

47
00:02:17,790 --> 00:02:21,359
where the the environment<font color="#E5E5E5"> itself is</font>

48
00:02:19,739 --> 00:02:23,579
untrusted<font color="#CCCCCC"> and who knows what's going</font>

49
00:02:21,360 --> 00:02:25,549
there in the memory so if you have

50
00:02:23,579 --> 00:02:29,310
secrets in<font color="#CCCCCC"> your</font><font color="#E5E5E5"> memory you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know</font>

51
00:02:25,549 --> 00:02:32,310
who can read and<font color="#CCCCCC"> access these secrets</font>

52
00:02:29,310 --> 00:02:34,950
<font color="#E5E5E5">now read and write memory capabilities</font>

53
00:02:32,310 --> 00:02:37,799
as a<font color="#E5E5E5"> hardware capability are well known</font>

54
00:02:34,950 --> 00:02:39,439
and<font color="#CCCCCC"> are also identified</font><font color="#E5E5E5"> as an attack</font>

55
00:02:37,799 --> 00:02:43,109
<font color="#CCCCCC">tool and this has been demonstrated</font>

56
00:02:39,439 --> 00:02:45,510
<font color="#E5E5E5">using different physical interfaces like</font>

57
00:02:43,109 --> 00:02:48,599
Thunderbolt firewire I guess that

58
00:02:45,510 --> 00:02:53,298
everyone<font color="#E5E5E5"> here knows about all these and</font>

59
00:02:48,599 --> 00:02:56,220
the consequences<font color="#E5E5E5"> of</font><font color="#CCCCCC"> DRM modification is</font>

60
00:02:53,299 --> 00:02:58,470
<font color="#E5E5E5">that active attacks on the memory are</font>

61
00:02:56,220 --> 00:03:02,639
possible<font color="#E5E5E5"> not only</font><font color="#CCCCCC"> reading things but</font>

62
00:02:58,470 --> 00:03:04,590
<font color="#E5E5E5">also modifying and if the memory is not</font>

63
00:03:02,639 --> 00:03:09,019
<font color="#E5E5E5">encrypted then the attacker can change</font>

64
00:03:04,590 --> 00:03:12,480
code or<font color="#E5E5E5"> data</font><font color="#CCCCCC"> from any value</font><font color="#E5E5E5"> to any</font>

65
00:03:09,019 --> 00:03:14,310
chosen value<font color="#E5E5E5"> because he can read and the</font>

66
00:03:12,480 --> 00:03:16,858
<font color="#E5E5E5">in the memory is in the clear he knows</font>

67
00:03:14,310 --> 00:03:18,900
<font color="#E5E5E5">everything and it can just be flip</font>

68
00:03:16,859 --> 00:03:21,840
anything<font color="#CCCCCC"> you want and</font><font color="#E5E5E5"> change any pattern</font>

69
00:03:18,900 --> 00:03:26,909
<font color="#E5E5E5">to any pattern but this is too easy</font>

70
00:03:21,840 --> 00:03:28,650
<font color="#CCCCCC">alright this</font><font color="#E5E5E5"> is known so our assumption</font>

71
00:03:26,909 --> 00:03:31,370
<font color="#E5E5E5">our underlying assumption in the rest of</font>

72
00:03:28,650 --> 00:03:34,560
this talk is<font color="#CCCCCC"> that the the threat model</font>

73
00:03:31,370 --> 00:03:38,129
<font color="#E5E5E5">has an attacker with physical means to</font>

74
00:03:34,560 --> 00:03:41,430
modify the<font color="#CCCCCC"> DRM now whether or</font><font color="#E5E5E5"> not this</font>

75
00:03:38,129 --> 00:03:44,069
is this is possible or feasible<font color="#E5E5E5"> or easy</font>

76
00:03:41,430 --> 00:03:49,220
or<font color="#CCCCCC"> cheap or</font><font color="#E5E5E5"> expensive this</font><font color="#CCCCCC"> is beyond the</font>

77
00:03:44,069 --> 00:03:52,819
<font color="#CCCCCC">scope</font><font color="#E5E5E5"> here this is our assumption and</font>

78
00:03:49,220 --> 00:03:57,840
let's see some different attack tactics

79
00:03:52,819 --> 00:04:01,548
<font color="#CCCCCC">I'll put this banner</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> a passive attack</font>

80
00:03:57,840 --> 00:04:04,519
<font color="#E5E5E5">so here there is</font><font color="#CCCCCC"> an attacker</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> Eve's</font>

81
00:04:01,549 --> 00:04:08,340
contents of the<font color="#CCCCCC"> dram but is not</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

82
00:04:04,519 --> 00:04:12,389
interfere with values or change them<font color="#E5E5E5"> and</font>

83
00:04:08,340 --> 00:04:17,459
this is data in use but this<font color="#E5E5E5"> is not</font>

84
00:04:12,389 --> 00:04:20,969
really an existent threat model there

85
00:04:17,459 --> 00:04:22,330
are active attacks where the attacker

86
00:04:20,969 --> 00:04:26,560
can read the<font color="#E5E5E5"> DRAM</font>

87
00:04:22,330 --> 00:04:29,289
and all but cannot modify this<font color="#E5E5E5"> when it</font>

88
00:04:26,560 --> 00:04:31,150
<font color="#E5E5E5">is in use or to be used and the</font>

89
00:04:29,289 --> 00:04:34,090
classical<font color="#CCCCCC"> example is the cold boot</font>

90
00:04:31,150 --> 00:04:37,599
attack<font color="#E5E5E5"> so somebody gets access to your</font>

91
00:04:34,090 --> 00:04:41,859
DRAM maybe it's your phone or or a

92
00:04:37,599 --> 00:04:44,050
mobile<font color="#CCCCCC"> device</font><font color="#E5E5E5"> rips out the actual DRAM</font>

93
00:04:41,860 --> 00:04:47,169
contents<font color="#CCCCCC"> okay you need to freeze it and</font>

94
00:04:44,050 --> 00:04:49,569
to rush and plug it into another into

95
00:04:47,169 --> 00:04:51,909
<font color="#E5E5E5">another machine and then you can just</font>

96
00:04:49,569 --> 00:04:54,039
harvest<font color="#E5E5E5"> all of the all of the data or</font>

97
00:04:51,909 --> 00:04:57,909
most of the<font color="#CCCCCC"> tale data some there is</font><font color="#E5E5E5"> some</font>

98
00:04:54,039 --> 00:04:59,620
degradation<font color="#CCCCCC"> but this attack cannot be</font>

99
00:04:57,909 --> 00:05:01,990
repeated<font color="#E5E5E5"> right</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> cannot rush back</font><font color="#CCCCCC"> in</font>

100
00:04:59,620 --> 00:05:04,330
<font color="#E5E5E5">and plug it</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the machine so it</font>

101
00:05:01,990 --> 00:05:06,099
is<font color="#CCCCCC"> a one-time attack</font><font color="#E5E5E5"> and this is an</font>

102
00:05:04,330 --> 00:05:08,560
attack on<font color="#E5E5E5"> the data privacy so if you</font>

103
00:05:06,099 --> 00:05:13,690
have something confidential on on your

104
00:05:08,560 --> 00:05:16,150
on your<font color="#E5E5E5"> device in the DRAM when it is</font>

105
00:05:13,690 --> 00:05:18,849
compromised<font color="#E5E5E5"> in the assumption here</font><font color="#CCCCCC"> is</font>

106
00:05:16,150 --> 00:05:21,489
that<font color="#E5E5E5"> this device</font><font color="#CCCCCC"> has disk encryption</font>

107
00:05:18,849 --> 00:05:24,940
<font color="#E5E5E5">because otherwise the attacker wants to</font>

108
00:05:21,490 --> 00:05:27,909
get your<font color="#E5E5E5"> secrets would just rip out the</font>

109
00:05:24,940 --> 00:05:29,580
<font color="#E5E5E5">the disk itself and read so the</font>

110
00:05:27,909 --> 00:05:32,889
assumption is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> somebody stole your</font>

111
00:05:29,580 --> 00:05:35,409
device<font color="#E5E5E5"> it is in a locked position</font><font color="#CCCCCC"> and</font>

112
00:05:32,889 --> 00:05:37,990
<font color="#E5E5E5">the disk is encrypted so</font><font color="#CCCCCC"> the the only</font>

113
00:05:35,409 --> 00:05:40,569
interface that he has with<font color="#CCCCCC"> the with the</font>

114
00:05:37,990 --> 00:05:42,460
system is just<font color="#CCCCCC"> through</font><font color="#E5E5E5"> ripping reading</font>

115
00:05:40,569 --> 00:05:45,699
the the<font color="#CCCCCC"> dear</font><font color="#E5E5E5"> I mean this cold boot</font>

116
00:05:42,460 --> 00:05:47,948
attack<font color="#E5E5E5"> and the last is active dynamic</font>

117
00:05:45,699 --> 00:05:50,460
attacks so here we have an attacker who

118
00:05:47,949 --> 00:05:53,620
can read<font color="#CCCCCC"> and modify the DRAM contents</font>

119
00:05:50,460 --> 00:05:56,109
<font color="#E5E5E5">while it is being used or before</font><font color="#CCCCCC"> it is</font>

120
00:05:53,620 --> 00:05:58,629
<font color="#CCCCCC">going to be used</font><font color="#E5E5E5"> and this is what we are</font>

121
00:05:56,110 --> 00:06:02,020
more<font color="#CCCCCC"> concerned with</font><font color="#E5E5E5"> because typically if</font>

122
00:05:58,629 --> 00:06:04,629
somebody has access with some of these

123
00:06:02,020 --> 00:06:08,710
tools<font color="#E5E5E5"> access to the DRAM he can also</font>

124
00:06:04,629 --> 00:06:10,389
modify it and not<font color="#CCCCCC"> only read it and now</font>

125
00:06:08,710 --> 00:06:13,568
we'll<font color="#E5E5E5"> talk about transparent memory</font>

126
00:06:10,389 --> 00:06:16,479
encryption<font color="#E5E5E5"> so some technologies were</font>

127
00:06:13,569 --> 00:06:19,599
proposed<font color="#CCCCCC"> against dynamic attacks again</font>

128
00:06:16,479 --> 00:06:22,090
and in the game<font color="#E5E5E5"> where where the</font>

129
00:06:19,599 --> 00:06:26,500
<font color="#E5E5E5">adversary can just read the</font><font color="#CCCCCC"> contents of</font>

130
00:06:22,090 --> 00:06:28,659
the DRAM<font color="#E5E5E5"> so first first proposal is</font>

131
00:06:26,500 --> 00:06:30,940
<font color="#CCCCCC">actually to limit the physical ability</font>

132
00:06:28,659 --> 00:06:34,029
to read and<font color="#E5E5E5"> write</font><font color="#CCCCCC"> let's block all the</font>

133
00:06:30,940 --> 00:06:35,420
DMA access but this is this<font color="#E5E5E5"> is not</font>

134
00:06:34,029 --> 00:06:37,820
always fees

135
00:06:35,420 --> 00:06:39,680
or advisable because<font color="#CCCCCC"> these DMA access</font>

136
00:06:37,820 --> 00:06:42,740
tools they<font color="#CCCCCC"> are there for</font><font color="#E5E5E5"> reason for</font>

137
00:06:39,680 --> 00:06:45,260
positive reasons<font color="#CCCCCC"> you cannot just disable</font>

138
00:06:42,740 --> 00:06:49,670
them even technically<font color="#E5E5E5"> it doesn't doesn't</font>

139
00:06:45,260 --> 00:06:52,820
<font color="#CCCCCC">make sense</font><font color="#E5E5E5"> and the other the other</font>

140
00:06:49,670 --> 00:06:54,500
proposal was memory encryption so

141
00:06:52,820 --> 00:06:57,530
obviously memory encryption is a good

142
00:06:54,500 --> 00:07:00,200
tool<font color="#CCCCCC"> to protect the privacy</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> maybe</font>

143
00:06:57,530 --> 00:07:01,669
there is more to<font color="#CCCCCC"> it so we look at let's</font>

144
00:07:00,200 --> 00:07:03,680
<font color="#E5E5E5">look at memory encryption using</font>

145
00:07:01,670 --> 00:07:05,150
transparent encryption<font color="#CCCCCC"> and transparent</font>

146
00:07:03,680 --> 00:07:07,310
the encryption means<font color="#E5E5E5"> that just that</font>

147
00:07:05,150 --> 00:07:11,150
there is some filter that<font color="#E5E5E5"> takes</font><font color="#CCCCCC"> the data</font>

148
00:07:07,310 --> 00:07:13,640
and encrypts it when it<font color="#E5E5E5"> goes out</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font>

149
00:07:11,150 --> 00:07:16,460
DRAM and<font color="#E5E5E5"> the crits when it comes when</font><font color="#CCCCCC"> it</font>

150
00:07:13,640 --> 00:07:18,409
<font color="#CCCCCC">comes back and this</font><font color="#E5E5E5"> is simple it is much</font>

151
00:07:16,460 --> 00:07:20,900
simpler<font color="#CCCCCC"> and cheaper</font><font color="#E5E5E5"> than doing</font>

152
00:07:18,410 --> 00:07:23,900
<font color="#E5E5E5">encryption and authentication because</font>

153
00:07:20,900 --> 00:07:28,099
<font color="#E5E5E5">once you add authentication you need to</font>

154
00:07:23,900 --> 00:07:30,049
change the payload<font color="#E5E5E5"> so a cache line when</font>

155
00:07:28,100 --> 00:07:31,880
you write a cache line<font color="#E5E5E5"> you also need to</font>

156
00:07:30,050 --> 00:07:34,940
<font color="#E5E5E5">produce some authentication tag in</font>

157
00:07:31,880 --> 00:07:38,480
whatever manner and then put it

158
00:07:34,940 --> 00:07:41,090
somewhere<font color="#CCCCCC"> and get it and may get</font><font color="#E5E5E5"> it back</font>

159
00:07:38,480 --> 00:07:45,080
<font color="#E5E5E5">and compare the authentication</font><font color="#CCCCCC"> tags so</font>

160
00:07:41,090 --> 00:07:47,390
this is much more expensive<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> not</font>

161
00:07:45,080 --> 00:07:52,669
<font color="#E5E5E5">even to mention the performance</font><font color="#CCCCCC"> II that</font>

162
00:07:47,390 --> 00:07:55,550
it incurs and what it<font color="#E5E5E5"> gives the memory</font>

163
00:07:52,670 --> 00:08:00,380
encryption changes<font color="#E5E5E5"> the in sumption on</font>

164
00:07:55,550 --> 00:08:02,690
the read/write<font color="#E5E5E5"> memory capabilities of</font>

165
00:08:00,380 --> 00:08:05,600
the of the<font color="#CCCCCC"> attacker so the capabilities</font>

166
00:08:02,690 --> 00:08:10,700
remain this doesn't prevent<font color="#E5E5E5"> the attacker</font>

167
00:08:05,600 --> 00:08:14,420
from reading and writing<font color="#CCCCCC"> but at this</font>

168
00:08:10,700 --> 00:08:16,849
<font color="#E5E5E5">point the attacker who sees</font><font color="#CCCCCC"> who views</font>

169
00:08:14,420 --> 00:08:20,140
<font color="#E5E5E5">values on the DRAM doesn't know because</font>

170
00:08:16,850 --> 00:08:24,470
what it<font color="#E5E5E5"> is because it</font><font color="#CCCCCC"> is encrypted</font><font color="#E5E5E5"> and</font>

171
00:08:20,140 --> 00:08:27,800
<font color="#E5E5E5">also when</font><font color="#CCCCCC"> it makes some changes on</font><font color="#E5E5E5"> the</font>

172
00:08:24,470 --> 00:08:30,410
DRAM he has no control<font color="#E5E5E5"> on</font><font color="#CCCCCC"> what would be</font>

173
00:08:27,800 --> 00:08:33,169
<font color="#E5E5E5">the outcome</font><font color="#CCCCCC"> when this modified cipher</font>

174
00:08:30,410 --> 00:08:37,310
text is going to be<font color="#CCCCCC"> decrypted and read</font>

175
00:08:33,169 --> 00:08:40,189
back<font color="#E5E5E5"> so if the encryption scheme is</font>

176
00:08:37,309 --> 00:08:41,978
valid and<font color="#E5E5E5"> is good this is going to</font>

177
00:08:40,190 --> 00:08:45,220
create<font color="#E5E5E5"> some</font>

178
00:08:41,979 --> 00:08:52,029
<font color="#E5E5E5">them corruption in an</font><font color="#CCCCCC"> unpredictable</font><font color="#E5E5E5"> way</font>

179
00:08:45,220 --> 00:08:54,010
<font color="#E5E5E5">so there is some hope</font><font color="#CCCCCC"> that maybe memory</font>

180
00:08:52,029 --> 00:08:58,209
encryption<font color="#CCCCCC"> because of this limitation is</font>

181
00:08:54,010 --> 00:09:00,639
going also<font color="#E5E5E5"> to be a good mitigation</font>

182
00:08:58,209 --> 00:09:02,170
against active attackers because you

183
00:09:00,639 --> 00:09:05,079
know the attacker<font color="#CCCCCC"> does</font><font color="#E5E5E5"> know what he is</font>

184
00:09:02,170 --> 00:09:07,269
changing and it doesn't control what the

185
00:09:05,079 --> 00:09:09,370
outcome will<font color="#E5E5E5"> be when it infiltrates the</font>

186
00:09:07,269 --> 00:09:11,589
system and this<font color="#CCCCCC"> is exactly</font><font color="#E5E5E5"> the opposite</font>

187
00:09:09,370 --> 00:09:15,420
of the situation where somebody can

188
00:09:11,589 --> 00:09:18,910
modify the<font color="#CCCCCC"> theorem in unencrypted DRAM</font>

189
00:09:15,420 --> 00:09:22,349
data from<font color="#E5E5E5"> anything to anything so</font>

190
00:09:18,910 --> 00:09:26,469
perhaps it is possible<font color="#CCCCCC"> that encryption</font>

191
00:09:22,350 --> 00:09:29,470
<font color="#E5E5E5">by itself is going to</font><font color="#CCCCCC"> have protection</font><font color="#E5E5E5"> so</font>

192
00:09:26,470 --> 00:09:33,160
so the blinded random block corruption

193
00:09:29,470 --> 00:09:35,350
this<font color="#E5E5E5"> is this is the model that that that</font>

194
00:09:33,160 --> 00:09:38,680
we want<font color="#CCCCCC"> to put</font><font color="#E5E5E5"> down when we are talking</font>

195
00:09:35,350 --> 00:09:41,860
<font color="#CCCCCC">about</font><font color="#E5E5E5"> a active attacks on unencrypted</font>

196
00:09:38,680 --> 00:09:44,109
memory so now the attacker has limited

197
00:09:41,860 --> 00:09:46,690
capabilities and we call this<font color="#CCCCCC"> BR BC</font>

198
00:09:44,110 --> 00:09:49,899
<font color="#E5E5E5">blinded random block corruption attacks</font>

199
00:09:46,690 --> 00:09:55,019
so blinded the attacker doesn't know<font color="#E5E5E5"> the</font>

200
00:09:49,899 --> 00:09:58,389
<font color="#CCCCCC">plaintext Ocoee it is encrypted</font><font color="#E5E5E5"> and</font>

201
00:09:55,019 --> 00:10:00,370
random block corruption means that the

202
00:09:58,389 --> 00:10:01,779
attacker<font color="#E5E5E5"> cannot predict cannot control</font>

203
00:10:00,370 --> 00:10:04,240
the plaintext value that would

204
00:10:01,779 --> 00:10:06,670
infiltrate the system if it changes

205
00:10:04,240 --> 00:10:09,430
something<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> DRAM so it's going</font><font color="#E5E5E5"> to</font>

206
00:10:06,670 --> 00:10:12,250
give some random corruption and we point

207
00:10:09,430 --> 00:10:17,349
out below because<font color="#E5E5E5"> the assumption is that</font>

208
00:10:12,250 --> 00:10:19,060
if you make some memory encryption if

209
00:10:17,350 --> 00:10:21,370
you prepare some memory encryption

210
00:10:19,060 --> 00:10:24,279
<font color="#CCCCCC">you're going to at least have a block</font>

211
00:10:21,370 --> 00:10:28,120
cipher<font color="#CCCCCC"> and it's going</font><font color="#E5E5E5"> to be practically</font>

212
00:10:24,279 --> 00:10:31,060
<font color="#CCCCCC">sixteen bytes for each block so at the</font>

213
00:10:28,120 --> 00:10:32,709
very<font color="#CCCCCC"> least</font><font color="#E5E5E5"> when you modify something</font><font color="#CCCCCC"> in</font>

214
00:10:31,060 --> 00:10:36,369
the DRAM when it is going to be

215
00:10:32,709 --> 00:10:38,949
decrypted<font color="#E5E5E5"> sixteen bytes of data are</font>

216
00:10:36,370 --> 00:10:42,430
going<font color="#CCCCCC"> to be completely garbled</font><font color="#E5E5E5"> to sum</font>

217
00:10:38,949 --> 00:10:45,069
something random<font color="#E5E5E5"> okay random or</font>

218
00:10:42,430 --> 00:10:52,449
unpredictable<font color="#E5E5E5"> or you know point a</font>

219
00:10:45,069 --> 00:10:54,540
pointless so now the question<font color="#CCCCCC"> is can we</font>

220
00:10:52,449 --> 00:10:56,449
rely on<font color="#E5E5E5"> memory</font>

221
00:10:54,540 --> 00:10:59,040
encryption<font color="#E5E5E5"> to be a good enough</font>

222
00:10:56,450 --> 00:11:00,450
<font color="#E5E5E5">mitigation in practice now of</font><font color="#CCCCCC"> course</font>

223
00:10:59,040 --> 00:11:02,969
there is no proof right

224
00:11:00,450 --> 00:11:06,300
if there is no authentication<font color="#CCCCCC"> there is</font>

225
00:11:02,970 --> 00:11:08,460
no proof of of anything<font color="#E5E5E5"> of anything here</font>

226
00:11:06,300 --> 00:11:10,589
but maybe it's good enough<font color="#E5E5E5"> maybe it is</font>

227
00:11:08,460 --> 00:11:14,070
so difficult to<font color="#E5E5E5"> mount an attack on</font><font color="#CCCCCC"> and</font>

228
00:11:10,590 --> 00:11:16,350
<font color="#CCCCCC">click on an encrypted</font><font color="#E5E5E5"> piece of memory we</font>

229
00:11:14,070 --> 00:11:19,380
under these<font color="#CCCCCC"> constraints that</font><font color="#E5E5E5"> it is good</font>

230
00:11:16,350 --> 00:11:21,930
enough<font color="#CCCCCC"> ok</font>

231
00:11:19,380 --> 00:11:24,060
<font color="#CCCCCC">III think that</font><font color="#E5E5E5"> you're guessing already</font>

232
00:11:21,930 --> 00:11:29,189
where we are going to with the answer so

233
00:11:24,060 --> 00:11:32,939
<font color="#E5E5E5">hint right so what we are going to see</font>

234
00:11:29,190 --> 00:11:35,250
that unless<font color="#E5E5E5"> you're able</font><font color="#CCCCCC"> to remove the</font>

235
00:11:32,940 --> 00:11:39,860
<font color="#CCCCCC">underline capabilities if you are</font>

236
00:11:35,250 --> 00:11:43,380
<font color="#E5E5E5">willing to block the DMA access or</font><font color="#CCCCCC"> the</font>

237
00:11:39,860 --> 00:11:47,490
physical capabilities<font color="#E5E5E5"> then you cannot</font>

238
00:11:43,380 --> 00:11:51,380
depend on on on memory encryption by

239
00:11:47,490 --> 00:11:55,650
itself to give you the protection now

240
00:11:51,380 --> 00:11:57,810
when when<font color="#E5E5E5"> you think about it you would</font>

241
00:11:55,650 --> 00:12:00,150
say<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> of course it is obvious everyone</font>

242
00:11:57,810 --> 00:12:03,349
who deals with<font color="#E5E5E5"> the cryptography knows</font>

243
00:12:00,150 --> 00:12:09,060
that you cannot attribute<font color="#E5E5E5"> more than</font>

244
00:12:03,350 --> 00:12:11,310
privacy privacy<font color="#E5E5E5"> assumptions to</font><font color="#CCCCCC"> in to an</font>

245
00:12:09,060 --> 00:12:13,739
encryption<font color="#CCCCCC"> scheme</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> it is</font><font color="#E5E5E5"> very</font>

246
00:12:11,310 --> 00:12:16,979
tempting<font color="#E5E5E5"> since adding authentication to</font>

247
00:12:13,740 --> 00:12:19,890
memory is<font color="#E5E5E5"> very expensive it</font><font color="#CCCCCC"> is also very</font>

248
00:12:16,980 --> 00:12:24,780
tempting to<font color="#E5E5E5"> say in a practical sense</font>

249
00:12:19,890 --> 00:12:26,819
<font color="#E5E5E5">this should work so so so</font><font color="#CCCCCC"> at the</font><font color="#E5E5E5"> the</font>

250
00:12:24,780 --> 00:12:29,250
actual<font color="#CCCCCC"> demonstration that it is possible</font>

251
00:12:26,820 --> 00:12:32,700
to<font color="#E5E5E5"> do such an attack and it violates</font>

252
00:12:29,250 --> 00:12:34,160
<font color="#CCCCCC">this hopeful assumption this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font>

253
00:12:32,700 --> 00:12:38,700
<font color="#CCCCCC">surprise</font><font color="#E5E5E5"> and we're going to demonstrate</font>

254
00:12:34,160 --> 00:12:40,439
several<font color="#CCCCCC"> of them so so the PR BC attacker</font>

255
00:12:38,700 --> 00:12:43,800
<font color="#E5E5E5">blind</font><font color="#CCCCCC"> their random block corruption</font>

256
00:12:40,440 --> 00:12:46,260
attacker is able<font color="#E5E5E5"> to create time to check</font>

257
00:12:43,800 --> 00:12:48,240
time to use race conditions on the

258
00:12:46,260 --> 00:12:51,300
<font color="#E5E5E5">execution environment he can change data</font>

259
00:12:48,240 --> 00:12:55,620
<font color="#E5E5E5">but in particularly he can change</font><font color="#CCCCCC"> the</font>

260
00:12:51,300 --> 00:12:57,750
<font color="#E5E5E5">flow of the of any code and if</font><font color="#CCCCCC"> he's well</font>

261
00:12:55,620 --> 00:13:00,270
<font color="#E5E5E5">smart enough and knows what he's doing</font>

262
00:12:57,750 --> 00:13:04,470
and has invested<font color="#CCCCCC"> a lot of work into</font><font color="#E5E5E5"> this</font>

263
00:13:00,270 --> 00:13:05,840
<font color="#E5E5E5">it can inflict real damage and this is</font>

264
00:13:04,470 --> 00:13:08,830
why

265
00:13:05,840 --> 00:13:12,140
we are here and what we're<font color="#E5E5E5"> going to</font>

266
00:13:08,830 --> 00:13:14,690
demonstrate<font color="#E5E5E5"> so first of all let's talk</font>

267
00:13:12,140 --> 00:13:17,480
<font color="#CCCCCC">about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> model we call this the ABC</font>

268
00:13:14,690 --> 00:13:18,740
attacker<font color="#E5E5E5"> so there are several attackers</font>

269
00:13:17,480 --> 00:13:22,370
with different<font color="#E5E5E5"> goals</font>

270
00:13:18,740 --> 00:13:24,950
right so a<font color="#E5E5E5"> attacker</font><font color="#CCCCCC"> is an axis seeking</font>

271
00:13:22,370 --> 00:13:27,320
attacker<font color="#E5E5E5"> so he's not an owner</font><font color="#CCCCCC"> of a</font>

272
00:13:24,950 --> 00:13:29,720
<font color="#E5E5E5">platform but got got it to his</font>

273
00:13:27,320 --> 00:13:32,600
<font color="#E5E5E5">possession</font><font color="#CCCCCC"> in the locked</font><font color="#E5E5E5"> state</font><font color="#CCCCCC"> so think</font>

274
00:13:29,720 --> 00:13:36,410
of your<font color="#E5E5E5"> laptop you're sitting at</font>

275
00:13:32,600 --> 00:13:38,750
Starbucks<font color="#CCCCCC"> suddenly you</font><font color="#E5E5E5"> will go to get</font>

276
00:13:36,410 --> 00:13:40,730
another cup of<font color="#E5E5E5"> coffee you left your</font>

277
00:13:38,750 --> 00:13:43,240
machine it is locked and somebody just

278
00:13:40,730 --> 00:13:45,529
steals it from<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> is locked</font>

279
00:13:43,240 --> 00:13:49,010
<font color="#E5E5E5">hopefully you have disk encryption</font>

280
00:13:45,529 --> 00:13:50,839
mounted so otherwise<font color="#CCCCCC"> it came over</font><font color="#E5E5E5"> so now</font>

281
00:13:49,010 --> 00:13:52,760
the attacker has a locked screen<font color="#E5E5E5"> the</font>

282
00:13:50,839 --> 00:13:55,490
only interface with the system<font color="#CCCCCC"> that he</font>

283
00:13:52,760 --> 00:14:00,200
has<font color="#E5E5E5"> is there is the login screen</font><font color="#CCCCCC"> screen</font>

284
00:13:55,490 --> 00:14:03,050
<font color="#E5E5E5">and the memory is encrypted it seems</font>

285
00:14:00,200 --> 00:14:03,560
<font color="#E5E5E5">like hopeless</font><font color="#CCCCCC"> for the</font><font color="#E5E5E5"> attacker we'll see</font>

286
00:14:03,050 --> 00:14:07,069
<font color="#CCCCCC">about that</font>

287
00:14:03,560 --> 00:14:09,800
<font color="#E5E5E5">now the B attacker breaching attacker he</font>

288
00:14:07,070 --> 00:14:12,440
is a<font color="#E5E5E5"> legitimate user of a platform</font><font color="#CCCCCC"> but</font>

289
00:14:09,800 --> 00:14:15,469
he<font color="#E5E5E5"> we he wishes to reach some of the</font>

290
00:14:12,440 --> 00:14:17,870
policies to circumvent restrictions or

291
00:14:15,470 --> 00:14:21,620
escalate his privileges so this is a

292
00:14:17,870 --> 00:14:24,530
stronger<font color="#CCCCCC"> a much stronger adversary</font>

293
00:14:21,620 --> 00:14:26,839
because he has much more control on<font color="#E5E5E5"> the</font>

294
00:14:24,530 --> 00:14:29,720
<font color="#CCCCCC">system</font><font color="#E5E5E5"> and the most important thing he</font>

295
00:14:26,839 --> 00:14:33,020
can repeat his attacks<font color="#E5E5E5"> as many times as</font>

296
00:14:29,720 --> 00:14:35,420
<font color="#CCCCCC">he wishes</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> here the</font><font color="#E5E5E5"> a attacker is</font>

297
00:14:33,020 --> 00:14:36,980
the weaker weakest attacker<font color="#CCCCCC"> because if</font>

298
00:14:35,420 --> 00:14:39,319
<font color="#E5E5E5">he does some modification on the</font><font color="#CCCCCC"> D</font>

299
00:14:36,980 --> 00:14:41,839
<font color="#CCCCCC">remains something</font><font color="#E5E5E5"> fails everything is</font>

300
00:14:39,320 --> 00:14:43,910
going to<font color="#E5E5E5"> crash the system will reboot</font>

301
00:14:41,839 --> 00:14:47,630
<font color="#E5E5E5">and then the first thing</font><font color="#CCCCCC"> that he's going</font>

302
00:14:43,910 --> 00:14:50,270
to<font color="#E5E5E5"> encounter is the</font><font color="#CCCCCC"> disk encryption key</font>

303
00:14:47,630 --> 00:14:52,910
and<font color="#CCCCCC"> he</font><font color="#E5E5E5"> doesn't have it</font><font color="#CCCCCC"> so this is the</font>

304
00:14:50,270 --> 00:14:55,189
<font color="#E5E5E5">weakest attacker number a B is a much</font>

305
00:14:52,910 --> 00:14:57,589
stronger attacker<font color="#CCCCCC"> you can think of a</font>

306
00:14:55,190 --> 00:15:04,580
corporate<font color="#E5E5E5"> that with thousands of</font>

307
00:14:57,589 --> 00:15:08,060
<font color="#E5E5E5">employees</font><font color="#CCCCCC"> everyone has has a laptop and</font>

308
00:15:04,580 --> 00:15:12,110
everyone can<font color="#CCCCCC"> access</font><font color="#E5E5E5"> anyone</font><font color="#CCCCCC"> elses laptop</font>

309
00:15:08,060 --> 00:15:14,300
<font color="#CCCCCC">if he has</font><font color="#E5E5E5"> the has</font><font color="#CCCCCC"> the password so and</font>

310
00:15:12,110 --> 00:15:16,670
one of the<font color="#E5E5E5"> employees once more who wants</font>

311
00:15:14,300 --> 00:15:19,310
to read<font color="#CCCCCC"> somebody else's mail ok so this</font>

312
00:15:16,670 --> 00:15:23,439
<font color="#E5E5E5">is so this is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> breaching attacker and</font>

313
00:15:19,310 --> 00:15:27,638
Conspirator attacker<font color="#E5E5E5"> this is a</font>

314
00:15:23,439 --> 00:15:32,300
<font color="#E5E5E5">legitimate user and even has</font>

315
00:15:27,639 --> 00:15:34,819
administrative<font color="#E5E5E5"> powers and he wants</font><font color="#CCCCCC"> to</font>

316
00:15:32,300 --> 00:15:38,209
actually<font color="#E5E5E5"> collect information on other</font>

317
00:15:34,819 --> 00:15:41,628
<font color="#E5E5E5">users data so if you think about this</font>

318
00:15:38,209 --> 00:15:44,748
this matches the situation of<font color="#E5E5E5"> a cloud</font>

319
00:15:41,629 --> 00:15:48,019
<font color="#E5E5E5">provider environment</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> some</font>

320
00:15:44,749 --> 00:15:49,939
hypervisor<font color="#CCCCCC"> let's assume</font><font color="#E5E5E5"> that that the</font>

321
00:15:48,019 --> 00:15:53,360
environment is<font color="#CCCCCC"> not malicious but there</font>

322
00:15:49,939 --> 00:15:56,389
is the nightshift employee who is<font color="#E5E5E5"> bored</font>

323
00:15:53,360 --> 00:15:59,120
<font color="#CCCCCC">and he wants to read the memory of your</font>

324
00:15:56,389 --> 00:16:01,300
virtual<font color="#E5E5E5"> machine so now this guy is also</font>

325
00:15:59,120 --> 00:16:04,579
<font color="#CCCCCC">an administrator</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> here's</font><font color="#E5E5E5"> everything</font>

326
00:16:01,300 --> 00:16:08,079
<font color="#E5E5E5">so we start from the weakest assumption</font>

327
00:16:04,579 --> 00:16:11,989
on<font color="#E5E5E5"> da adversary</font><font color="#CCCCCC"> to the strongest</font>

328
00:16:08,079 --> 00:16:15,019
assumption and now we're going to

329
00:16:11,990 --> 00:16:22,069
describe<font color="#CCCCCC"> ok well I'm going to describe</font>

330
00:16:15,019 --> 00:16:23,930
the<font color="#E5E5E5"> a adversary</font><font color="#CCCCCC"> ok Starbucks stole</font><font color="#E5E5E5"> your</font>

331
00:16:22,069 --> 00:16:28,699
laptop goes to his lab and now<font color="#E5E5E5"> is trying</font>

332
00:16:23,930 --> 00:16:30,349
<font color="#E5E5E5">to</font><font color="#CCCCCC"> log in to</font><font color="#E5E5E5"> your machine</font><font color="#CCCCCC"> and we're</font>

333
00:16:28,699 --> 00:16:33,109
going<font color="#CCCCCC"> to describe</font><font color="#E5E5E5"> this type of attack</font>

334
00:16:30,350 --> 00:16:36,350
<font color="#E5E5E5">becoming a</font><font color="#CCCCCC"> root on</font><font color="#E5E5E5"> the lock system right</font>

335
00:16:33,110 --> 00:16:38,540
<font color="#E5E5E5">you cannot expect more from an attack</font>

336
00:16:36,350 --> 00:16:41,360
<font color="#E5E5E5">than to become a root owner on the</font>

337
00:16:38,540 --> 00:16:43,819
device<font color="#E5E5E5"> right so it's all happens over</font>

338
00:16:41,360 --> 00:16:48,800
<font color="#E5E5E5">this is an attack on on a Linux on a</font>

339
00:16:43,819 --> 00:16:50,689
Linux system<font color="#E5E5E5"> and the source code is of</font>

340
00:16:48,800 --> 00:16:56,029
course open<font color="#CCCCCC"> to</font><font color="#E5E5E5"> everyone you can just</font>

341
00:16:50,689 --> 00:16:58,670
review this and so in the code I'm<font color="#E5E5E5"> going</font>

342
00:16:56,029 --> 00:17:01,309
to describe<font color="#CCCCCC"> some of the of the flow so</font>

343
00:16:58,670 --> 00:17:04,938
there are some global variables and

344
00:17:01,309 --> 00:17:09,970
there is a<font color="#E5E5E5"> global pre authentication</font>

345
00:17:04,939 --> 00:17:18,770
flag<font color="#E5E5E5"> pre off flag and the code logic</font>

346
00:17:09,970 --> 00:17:24,079
<font color="#E5E5E5">runs as follows if pre authenticated is</font>

347
00:17:18,770 --> 00:17:26,420
enabled then you call the authentication

348
00:17:24,079 --> 00:17:29,990
mechanism and

349
00:17:26,420 --> 00:17:35,720
if you're<font color="#CCCCCC"> successful you're going to be</font>

350
00:17:29,990 --> 00:17:38,179
able to<font color="#CCCCCC"> login</font><font color="#E5E5E5"> and if not then then here</font>

351
00:17:35,720 --> 00:17:40,910
then you<font color="#CCCCCC"> are pre authenticated to</font><font color="#E5E5E5"> login</font>

352
00:17:38,179 --> 00:17:45,890
<font color="#E5E5E5">so if you look at the flow if you take</font>

353
00:17:40,910 --> 00:17:50,390
the flow and make a<font color="#E5E5E5"> V RBC blinded random</font>

354
00:17:45,890 --> 00:17:54,040
corruption<font color="#E5E5E5"> attack on</font><font color="#CCCCCC"> a block and on a</font>

355
00:17:50,390 --> 00:17:56,690
block<font color="#CCCCCC"> that includes</font><font color="#E5E5E5"> the piece of data</font>

356
00:17:54,040 --> 00:17:58,700
<font color="#E5E5E5">that holds the pre authentication flag</font>

357
00:17:56,690 --> 00:18:01,010
and maybe<font color="#CCCCCC"> you're corrupting other things</font>

358
00:17:58,700 --> 00:18:03,080
in the global variables<font color="#E5E5E5"> you don't care</font>

359
00:18:01,010 --> 00:18:07,700
<font color="#CCCCCC">then what's</font><font color="#E5E5E5"> going to</font><font color="#CCCCCC"> happen is that</font><font color="#E5E5E5"> this</font>

360
00:18:03,080 --> 00:18:10,610
binary<font color="#CCCCCC"> this</font><font color="#E5E5E5"> binary decider</font><font color="#CCCCCC"> if this is</font>

361
00:18:07,700 --> 00:18:12,140
pre authenticated or not is going<font color="#E5E5E5"> to to</font>

362
00:18:10,610 --> 00:18:14,059
be<font color="#E5E5E5"> flipped to something else right you</font>

363
00:18:12,140 --> 00:18:17,690
cannot make a random corruption and

364
00:18:14,059 --> 00:18:19,970
expect that that something<font color="#E5E5E5"> would would</font>

365
00:18:17,690 --> 00:18:22,520
remain the same<font color="#E5E5E5"> so</font><font color="#CCCCCC"> although you are</font>

366
00:18:19,970 --> 00:18:25,100
corrupting much more and maybe other

367
00:18:22,520 --> 00:18:27,889
values in<font color="#E5E5E5"> this case you don't really</font>

368
00:18:25,100 --> 00:18:34,928
<font color="#E5E5E5">care care because all you want is</font><font color="#CCCCCC"> to</font>

369
00:18:27,890 --> 00:18:38,030
circumvent<font color="#E5E5E5"> a binary if statement and</font>

370
00:18:34,929 --> 00:18:40,880
then<font color="#E5E5E5"> the authentication logic if you</font>

371
00:18:38,030 --> 00:18:43,129
change the pre authentication flow flag

372
00:18:40,880 --> 00:18:46,309
then the flow doesn't even next<font color="#E5E5E5"> time it</font>

373
00:18:43,130 --> 00:18:52,549
doesn't<font color="#CCCCCC"> even ask for the authentication</font>

374
00:18:46,309 --> 00:18:55,040
<font color="#E5E5E5">logic</font><font color="#CCCCCC"> and you are already</font><font color="#E5E5E5"> winning so why</font>

375
00:18:52,549 --> 00:18:57,080
is this happening<font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> because you</font>

376
00:18:55,040 --> 00:19:00,350
<font color="#CCCCCC">have a race</font><font color="#E5E5E5"> condition between time to</font>

377
00:18:57,080 --> 00:19:02,870
use and time to check and in this case

378
00:19:00,350 --> 00:19:06,439
the nice thing<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the process</font>

379
00:19:02,870 --> 00:19:08,659
<font color="#CCCCCC">itself</font><font color="#E5E5E5"> gives you an infinite amount of</font>

380
00:19:06,440 --> 00:19:10,910
<font color="#E5E5E5">time</font><font color="#CCCCCC"> to do your attack</font><font color="#E5E5E5"> because it by</font>

381
00:19:08,660 --> 00:19:13,340
<font color="#E5E5E5">definition it</font><font color="#CCCCCC"> is going to prompt you the</font>

382
00:19:10,910 --> 00:19:16,850
mechanism<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> authentication and it</font>

383
00:19:13,340 --> 00:19:20,990
expects forever if<font color="#E5E5E5"> not forever</font><font color="#CCCCCC"> for long</font>

384
00:19:16,850 --> 00:19:23,840
enough time so<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is just a wonderful</font>

385
00:19:20,990 --> 00:19:26,720
<font color="#CCCCCC">example</font><font color="#E5E5E5"> of a real program that you can</font>

386
00:19:23,840 --> 00:19:29,330
<font color="#CCCCCC">just you</font><font color="#E5E5E5"> don't even need to do it</font>

387
00:19:26,720 --> 00:19:31,010
quickly<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a long pause you go and</font>

388
00:19:29,330 --> 00:19:33,649
drink<font color="#E5E5E5"> the coffee from the Starbucks and</font>

389
00:19:31,010 --> 00:19:35,179
<font color="#E5E5E5">you go back and just do this random</font>

390
00:19:33,650 --> 00:19:37,230
corruption and you never you're never

391
00:19:35,179 --> 00:19:42,360
<font color="#E5E5E5">even asked again</font>

392
00:19:37,230 --> 00:19:45,510
for the the user<font color="#CCCCCC"> a password</font><font color="#E5E5E5"> so this is</font>

393
00:19:42,360 --> 00:19:50,459
this<font color="#E5E5E5"> is a case</font><font color="#CCCCCC"> of a race condition that</font>

394
00:19:45,510 --> 00:19:53,010
we can<font color="#CCCCCC"> easily win</font><font color="#E5E5E5"> in this situation and</font>

395
00:19:50,460 --> 00:19:53,790
<font color="#E5E5E5">now you would</font><font color="#CCCCCC"> ask yourselves does it</font>

396
00:19:53,010 --> 00:19:55,980
really<font color="#E5E5E5"> work</font>

397
00:19:53,790 --> 00:19:57,928
can you really do this<font color="#CCCCCC"> now remember that</font>

398
00:19:55,980 --> 00:20:00,720
<font color="#E5E5E5">the assumption is that the adversary has</font>

399
00:19:57,929 --> 00:20:03,510
<font color="#CCCCCC">the capabilities of writing the</font>

400
00:20:00,720 --> 00:20:06,390
<font color="#CCCCCC">overwriting</font><font color="#E5E5E5"> the theorem</font><font color="#CCCCCC"> and in some</font>

401
00:20:03,510 --> 00:20:08,610
cases in<font color="#CCCCCC"> some cases for example if you</font>

402
00:20:06,390 --> 00:20:13,169
take Windows the new versions of<font color="#E5E5E5"> Windows</font>

403
00:20:08,610 --> 00:20:15,570
I think from 8.1 actually<font color="#CCCCCC"> lock the DMA</font>

404
00:20:13,169 --> 00:20:18,510
interface the<font color="#CCCCCC"> exposed externally expose</font>

405
00:20:15,570 --> 00:20:22,470
DMA interfaces<font color="#E5E5E5"> when the system is</font><font color="#CCCCCC"> in</font>

406
00:20:18,510 --> 00:20:24,030
locked position probably probably there

407
00:20:22,470 --> 00:20:26,100
was<font color="#CCCCCC"> a reason for doing this because</font><font color="#E5E5E5"> in</font>

408
00:20:24,030 --> 00:20:27,770
previous in all<font color="#E5E5E5"> systems it is not even</font>

409
00:20:26,100 --> 00:20:30,240
blocked<font color="#E5E5E5"> but this is not a good enough</font>

410
00:20:27,770 --> 00:20:35,970
<font color="#E5E5E5">mitigation because if the attacker is</font>

411
00:20:30,240 --> 00:20:39,330
really determined<font color="#CCCCCC"> and wants to</font><font color="#E5E5E5"> get your</font>

412
00:20:35,970 --> 00:20:44,010
secrets then<font color="#CCCCCC"> he can just take the</font><font color="#E5E5E5"> box</font>

413
00:20:39,330 --> 00:20:49,949
and<font color="#CCCCCC"> turn it out and then connect one of</font>

414
00:20:44,010 --> 00:20:52,830
the<font color="#E5E5E5"> internal DMA DMA access connectors</font>

415
00:20:49,950 --> 00:20:56,370
so so this mitigate this type<font color="#CCCCCC"> of</font>

416
00:20:52,830 --> 00:20:59,159
mitigation<font color="#E5E5E5"> is only a minor addition to</font>

417
00:20:56,370 --> 00:21:04,409
the difficulty<font color="#E5E5E5"> but it is it is</font><font color="#CCCCCC"> still not</font>

418
00:20:59,160 --> 00:21:09,570
not protect a real protection mechanism

419
00:21:04,410 --> 00:21:11,580
and now<font color="#CCCCCC"> I have an experiment so</font><font color="#E5E5E5"> we did</font>

420
00:21:09,570 --> 00:21:14,129
an experiment<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> did two</font>

421
00:21:11,580 --> 00:21:17,580
<font color="#E5E5E5">demonstrations one of them is with the</font>

422
00:21:14,130 --> 00:21:19,410
debugger<font color="#E5E5E5"> so this is like cheating</font>

423
00:21:17,580 --> 00:21:21,720
<font color="#E5E5E5">because</font><font color="#CCCCCC"> if you have a debugger</font>

424
00:21:19,410 --> 00:21:23,549
<font color="#CCCCCC">on the system then you're chickening</font><font color="#E5E5E5"> but</font>

425
00:21:21,720 --> 00:21:26,820
<font color="#CCCCCC">it's not not really cheating because</font>

426
00:21:23,549 --> 00:21:29,280
<font color="#E5E5E5">what we could demonstrate it was so we</font>

427
00:21:26,820 --> 00:21:31,950
use the debugger is the tool<font color="#E5E5E5"> to</font>

428
00:21:29,280 --> 00:21:34,230
<font color="#E5E5E5">overwrite memory but the attack that</font>

429
00:21:31,950 --> 00:21:36,960
<font color="#E5E5E5">demonstration actually doesn't rely on</font>

430
00:21:34,230 --> 00:21:39,210
reading the values<font color="#E5E5E5"> and it doesn't rely</font>

431
00:21:36,960 --> 00:21:41,669
on whatever values are changed<font color="#E5E5E5"> so we</font>

432
00:21:39,210 --> 00:21:44,370
<font color="#E5E5E5">just put</font><font color="#CCCCCC"> some something</font><font color="#E5E5E5"> random you will</font>

433
00:21:41,669 --> 00:21:46,770
see what<font color="#E5E5E5"> what we mean so this is just to</font>

434
00:21:44,370 --> 00:21:47,639
<font color="#E5E5E5">demonstrate that the concept is correct</font>

435
00:21:46,770 --> 00:21:50,400
and if

436
00:21:47,640 --> 00:21:52,230
you really have these<font color="#E5E5E5"> mechanism to read</font>

437
00:21:50,400 --> 00:21:52,920
and write<font color="#E5E5E5"> the memory you can just win</font>

438
00:21:52,230 --> 00:21:57,030
this game

439
00:21:52,920 --> 00:22:01,110
the other one was with the JTAG device

440
00:21:57,030 --> 00:22:03,690
to<font color="#E5E5E5"> actually physics s the physical the</font>

441
00:22:01,110 --> 00:22:05,159
<font color="#CCCCCC">physical DRAM now the first</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> is</font>

442
00:22:03,690 --> 00:22:07,080
something<font color="#E5E5E5"> that everyone</font><font color="#CCCCCC"> can do at home</font>

443
00:22:05,160 --> 00:22:08,520
<font color="#CCCCCC">because it's okay</font><font color="#E5E5E5"> just software everyone</font>

444
00:22:07,080 --> 00:22:10,830
has a debugger you<font color="#E5E5E5"> can just do this you</font>

445
00:22:08,520 --> 00:22:13,290
<font color="#E5E5E5">don't need tools here if you really want</font>

446
00:22:10,830 --> 00:22:15,809
to do this<font color="#CCCCCC"> demonstrates you need to buy</font>

447
00:22:13,290 --> 00:22:18,090
some piece<font color="#CCCCCC"> of equipment it is a few</font>

448
00:22:15,809 --> 00:22:19,080
thousand dollars<font color="#E5E5E5"> but you can still you</font>

449
00:22:18,090 --> 00:22:21,299
can<font color="#E5E5E5"> still do this</font>

450
00:22:19,080 --> 00:22:23,129
you can also argue<font color="#CCCCCC"> that if you have JTAG</font>

451
00:22:21,299 --> 00:22:26,040
<font color="#E5E5E5">interface then you you can just do</font>

452
00:22:23,130 --> 00:22:28,980
anything<font color="#E5E5E5"> but this but again</font><font color="#CCCCCC"> it is just a</font>

453
00:22:26,040 --> 00:22:30,629
<font color="#CCCCCC">demonstration for the fact</font><font color="#E5E5E5"> it if you</font>

454
00:22:28,980 --> 00:22:34,320
have the<font color="#E5E5E5"> physical</font><font color="#CCCCCC"> tools then you can</font>

455
00:22:30,630 --> 00:22:38,970
just win this when we win this<font color="#CCCCCC"> game so</font>

456
00:22:34,320 --> 00:22:44,610
<font color="#E5E5E5">I'm going to to show the</font><font color="#CCCCCC"> VR BC attack</font>

457
00:22:38,970 --> 00:22:48,600
only logging logging program<font color="#E5E5E5"> with the</font>

458
00:22:44,610 --> 00:22:53,250
debugger<font color="#CCCCCC"> but okay</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> here on the</font>

459
00:22:48,600 --> 00:22:56,520
attacked<font color="#E5E5E5"> terminal so you got you get a</font>

460
00:22:53,250 --> 00:22:59,460
prompt for the<font color="#E5E5E5"> login</font><font color="#CCCCCC"> okay we write route</font>

461
00:22:56,520 --> 00:23:04,799
<font color="#E5E5E5">we want route if we could get this and</font>

462
00:22:59,460 --> 00:23:06,840
of<font color="#CCCCCC"> course what's gone what's going to</font>

463
00:23:04,799 --> 00:23:11,730
happen<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going to fail right we don't</font>

464
00:23:06,840 --> 00:23:13,470
<font color="#E5E5E5">have the the</font><font color="#CCCCCC"> password</font><font color="#E5E5E5"> so now on the demo</font>

465
00:23:11,730 --> 00:23:17,669
terminal this<font color="#CCCCCC"> is the demo terminal and</font>

466
00:23:13,470 --> 00:23:19,919
this is a simulation of overwriting<font color="#CCCCCC"> with</font>

467
00:23:17,669 --> 00:23:23,610
some tools<font color="#E5E5E5"> so right right</font><font color="#CCCCCC"> now it's with</font>

468
00:23:19,919 --> 00:23:26,580
the debugger<font color="#CCCCCC"> you connect to the login to</font>

469
00:23:23,610 --> 00:23:28,500
the<font color="#E5E5E5"> login process right</font><font color="#CCCCCC"> here is an</font>

470
00:23:26,580 --> 00:23:30,120
<font color="#E5E5E5">assumption that we</font><font color="#CCCCCC"> know the address and</font>

471
00:23:28,500 --> 00:23:32,549
we know where we are<font color="#CCCCCC"> going to hit but</font>

472
00:23:30,120 --> 00:23:35,000
I'll discuss this later<font color="#E5E5E5"> or you know what</font>

473
00:23:32,549 --> 00:23:38,790
on a locked<font color="#CCCCCC"> position</font><font color="#E5E5E5"> when you are</font>

474
00:23:35,000 --> 00:23:40,880
<font color="#E5E5E5">punching some erroneous password the</font>

475
00:23:38,790 --> 00:23:45,120
<font color="#E5E5E5">only thing the changes in the memory is</font>

476
00:23:40,880 --> 00:23:49,520
something around<font color="#E5E5E5"> this login</font><font color="#CCCCCC"> programs so</font>

477
00:23:45,120 --> 00:23:53,879
we know where we<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to hit with our</font>

478
00:23:49,520 --> 00:23:58,860
with our attack<font color="#E5E5E5"> the next</font><font color="#CCCCCC"> so in the</font>

479
00:23:53,880 --> 00:23:59,940
attack<font color="#E5E5E5"> in the attack terminal so just</font>

480
00:23:58,860 --> 00:24:02,879
the attacker

481
00:23:59,940 --> 00:24:06,269
who just they just<font color="#E5E5E5"> type any invalid</font>

482
00:24:02,879 --> 00:24:09,299
password and<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> logging</font><font color="#CCCCCC"> a process</font>

483
00:24:06,269 --> 00:24:10,649
then requests the<font color="#CCCCCC"> username again right</font>

484
00:24:09,299 --> 00:24:13,350
<font color="#E5E5E5">this is what happens it'll ask you again</font>

485
00:24:10,649 --> 00:24:15,570
<font color="#CCCCCC">and again</font><font color="#E5E5E5"> or at least a large amount of</font>

486
00:24:13,350 --> 00:24:18,389
time before<font color="#E5E5E5"> it does something else</font>

487
00:24:15,570 --> 00:24:20,340
<font color="#CCCCCC">because the legitimate user can be</font>

488
00:24:18,389 --> 00:24:22,889
expected<font color="#E5E5E5"> to</font><font color="#CCCCCC"> make a mistake</font><font color="#E5E5E5"> when typing</font>

489
00:24:20,340 --> 00:24:27,809
<font color="#E5E5E5">maybe several times so we have several</font>

490
00:24:22,889 --> 00:24:29,459
several attempts to<font color="#CCCCCC"> do this</font><font color="#E5E5E5"> so of course</font>

491
00:24:27,809 --> 00:24:33,870
and<font color="#CCCCCC"> then here</font><font color="#E5E5E5"> we just insert a</font>

492
00:24:29,460 --> 00:24:41,370
breakpoint<font color="#CCCCCC"> and as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see on the</font>

493
00:24:33,870 --> 00:24:44,639
demo<font color="#E5E5E5"> terminal with so of course of</font>

494
00:24:41,370 --> 00:24:49,678
<font color="#E5E5E5">course we cannot</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> with this and</font>

495
00:24:44,639 --> 00:24:52,258
again on the demo<font color="#E5E5E5"> on the demo terminal</font>

496
00:24:49,679 --> 00:24:54,659
so this is the author writing<font color="#E5E5E5"> we just</font>

497
00:24:52,259 --> 00:24:57,059
override some random<font color="#E5E5E5"> corruption so we</font>

498
00:24:54,659 --> 00:24:59,429
don't need<font color="#E5E5E5"> to read</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> because</font>

499
00:24:57,059 --> 00:25:01,289
presumably<font color="#E5E5E5"> the memory is encrypted there</font>

500
00:24:59,429 --> 00:25:04,289
is no point in<font color="#E5E5E5"> reading what's there and</font>

501
00:25:01,289 --> 00:25:06,809
there is<font color="#E5E5E5"> no point in trying to to</font>

502
00:25:04,289 --> 00:25:08,789
predict what's going<font color="#E5E5E5"> to be the value</font>

503
00:25:06,809 --> 00:25:13,080
<font color="#CCCCCC">that is decrypted with</font><font color="#E5E5E5"> this thing so we</font>

504
00:25:08,789 --> 00:25:16,889
just put a<font color="#E5E5E5"> random byte a random 16 byte</font>

505
00:25:13,080 --> 00:25:19,379
string so 16 bytes garbage<font color="#E5E5E5"> if you count</font>

506
00:25:16,889 --> 00:25:21,330
it you will see<font color="#CCCCCC"> that this is really 16</font>

507
00:25:19,379 --> 00:25:23,340
<font color="#E5E5E5">characters so this is really 16 bytes</font>

508
00:25:21,330 --> 00:25:26,939
but you can you<font color="#E5E5E5"> can do</font><font color="#CCCCCC"> anything you want</font>

509
00:25:23,340 --> 00:25:29,970
<font color="#E5E5E5">and this is our random random block</font>

510
00:25:26,940 --> 00:25:32,399
value and you can<font color="#CCCCCC"> see this</font><font color="#E5E5E5"> so set the</font>

511
00:25:29,970 --> 00:25:34,590
pre authentication flag<font color="#E5E5E5"> to 16 bytes</font>

512
00:25:32,399 --> 00:25:36,539
garbage so we just overwrite this with

513
00:25:34,590 --> 00:25:39,418
something<font color="#CCCCCC"> which that is arbitrary and</font>

514
00:25:36,539 --> 00:25:41,908
<font color="#CCCCCC">this is</font><font color="#E5E5E5"> exactly a mental simulation of</font>

515
00:25:39,419 --> 00:25:47,399
the situation<font color="#CCCCCC"> we'll have if the memory</font>

516
00:25:41,909 --> 00:25:51,870
was really encrypted<font color="#E5E5E5"> and then what</font>

517
00:25:47,399 --> 00:25:54,299
happens the next<font color="#E5E5E5"> time</font><font color="#CCCCCC"> due to</font><font color="#E5E5E5"> the random</font>

518
00:25:51,870 --> 00:25:56,250
corruption the pre authentication flag

519
00:25:54,299 --> 00:25:58,110
was<font color="#CCCCCC"> changed maybe something else was</font>

520
00:25:56,250 --> 00:26:02,540
<font color="#E5E5E5">also changed we don't care but it's just</font>

521
00:25:58,110 --> 00:26:05,879
<font color="#E5E5E5">bypasses completely bypasses the</font>

522
00:26:02,540 --> 00:26:09,810
the prompt to enter to enter the the

523
00:26:05,880 --> 00:26:12,510
<font color="#E5E5E5">password and voila</font><font color="#CCCCCC"> we got the root</font><font color="#E5E5E5"> login</font>

524
00:26:09,810 --> 00:26:14,669
so what this<font color="#E5E5E5"> means</font><font color="#CCCCCC"> that even</font><font color="#E5E5E5"> if the</font>

525
00:26:12,510 --> 00:26:20,460
memory is encrypted<font color="#E5E5E5"> if you have the</font>

526
00:26:14,670 --> 00:26:23,820
tools<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can just win win this so this</font>

527
00:26:20,460 --> 00:26:26,040
<font color="#E5E5E5">is of course on the</font><font color="#CCCCCC"> Linux but because we</font>

528
00:26:23,820 --> 00:26:27,929
did this<font color="#E5E5E5"> on Linux</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> well the code</font>

529
00:26:26,040 --> 00:26:30,930
is<font color="#CCCCCC"> open everyone can see but in other</font>

530
00:26:27,930 --> 00:26:34,010
offices<font color="#E5E5E5"> you can guess you can analyze it</font>

531
00:26:30,930 --> 00:26:37,800
is it cannot be<font color="#CCCCCC"> a total secret to know</font>

532
00:26:34,010 --> 00:26:40,950
how the login process<font color="#E5E5E5"> works of course</font>

533
00:26:37,800 --> 00:26:44,580
the difficulty<font color="#E5E5E5"> here is that you might</font>

534
00:26:40,950 --> 00:26:46,770
crash the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> you might try something</font>

535
00:26:44,580 --> 00:26:49,500
something goes wrong or<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> you didn't</font>

536
00:26:46,770 --> 00:26:51,629
<font color="#E5E5E5">hit</font><font color="#CCCCCC"> the right address</font><font color="#E5E5E5"> or for some</font><font color="#CCCCCC"> reason</font>

537
00:26:49,500 --> 00:26:53,820
the<font color="#E5E5E5"> the memory scheme is actually</font>

538
00:26:51,630 --> 00:26:55,800
encrypting a whole<font color="#E5E5E5"> four kilobyte page</font>

539
00:26:53,820 --> 00:26:58,200
and something really<font color="#E5E5E5"> happens and their</font>

540
00:26:55,800 --> 00:27:00,149
system crashes and<font color="#CCCCCC"> then okay then you</font>

541
00:26:58,200 --> 00:27:03,150
are lost<font color="#CCCCCC"> but</font><font color="#E5E5E5"> as long as</font><font color="#CCCCCC"> you are careful</font>

542
00:27:00,150 --> 00:27:05,490
<font color="#E5E5E5">you have a good chance</font><font color="#CCCCCC"> to do something</font>

543
00:27:03,150 --> 00:27:09,210
<font color="#E5E5E5">like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> so here is here are</font><font color="#CCCCCC"> the steps</font>

544
00:27:05,490 --> 00:27:12,950
<font color="#E5E5E5">so</font><font color="#CCCCCC"> actually we had</font><font color="#E5E5E5"> six steps that we</font>

545
00:27:09,210 --> 00:27:15,930
should ping-pong between the<font color="#CCCCCC"> attack</font>

546
00:27:12,950 --> 00:27:18,630
platform<font color="#CCCCCC"> and the attackers platform the</font>

547
00:27:15,930 --> 00:27:23,700
attacker<font color="#E5E5E5"> is a debugger in this case but</font>

548
00:27:18,630 --> 00:27:27,570
it doesn't matter<font color="#CCCCCC"> and okay</font><font color="#E5E5E5"> so can we do</font>

549
00:27:23,700 --> 00:27:31,920
<font color="#CCCCCC">this on a real on a real device</font><font color="#E5E5E5"> and in</font>

550
00:27:27,570 --> 00:27:34,350
the<font color="#E5E5E5"> the answer is yes justice and I'll</font>

551
00:27:31,920 --> 00:27:36,300
just show the picture so here with the

552
00:27:34,350 --> 00:27:38,580
<font color="#E5E5E5">JTAG device this was just an</font>

553
00:27:36,300 --> 00:27:43,740
illustration to<font color="#CCCCCC"> show that you can</font><font color="#E5E5E5"> really</font>

554
00:27:38,580 --> 00:27:47,490
go in and<font color="#CCCCCC"> modify blindly</font><font color="#E5E5E5"> the contents of</font>

555
00:27:43,740 --> 00:27:51,630
<font color="#E5E5E5">the DRAM and okay in our lab we do have</font>

556
00:27:47,490 --> 00:27:56,700
the<font color="#E5E5E5"> the JTAG device this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> this is the</font>

557
00:27:51,630 --> 00:27:59,220
blue box there it is<font color="#E5E5E5"> costly</font><font color="#CCCCCC"> but okay</font><font color="#E5E5E5"> so</font>

558
00:27:56,700 --> 00:28:02,460
you cannot not go back home<font color="#CCCCCC"> and try this</font>

559
00:27:59,220 --> 00:28:07,410
but you<font color="#E5E5E5"> certainly can go and try the the</font>

560
00:28:02,460 --> 00:28:10,350
debugger demo and it worked of course<font color="#CCCCCC"> it</font>

561
00:28:07,410 --> 00:28:12,660
worked<font color="#E5E5E5"> the same way</font><font color="#CCCCCC"> that it works on</font><font color="#E5E5E5"> the</font>

562
00:28:10,350 --> 00:28:15,330
on the debugger

563
00:28:12,660 --> 00:28:19,470
so what this<font color="#E5E5E5"> means is</font><font color="#CCCCCC"> that even for the</font>

564
00:28:15,330 --> 00:28:21,870
weakest attacker with the smallest

565
00:28:19,470 --> 00:28:24,210
<font color="#E5E5E5">amount of control on</font><font color="#CCCCCC"> the system and</font><font color="#E5E5E5"> the</font>

566
00:28:21,870 --> 00:28:26,820
<font color="#E5E5E5">smallest possible interface with the</font>

567
00:28:24,210 --> 00:28:31,530
system memory encryption does not

568
00:28:26,820 --> 00:28:34,620
<font color="#CCCCCC">guarantee the</font><font color="#E5E5E5"> security and if you can</font>

569
00:28:31,530 --> 00:28:37,410
log in<font color="#E5E5E5"> this route then</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> then you</font>

570
00:28:34,620 --> 00:28:39,389
don't as an attacker<font color="#E5E5E5"> you don't need more</font>

571
00:28:37,410 --> 00:28:43,020
<font color="#E5E5E5">than that so in</font><font color="#CCCCCC"> different attack</font>

572
00:28:39,390 --> 00:28:45,510
scenarios<font color="#CCCCCC"> ok we talked about</font><font color="#E5E5E5"> the ABC so</font>

573
00:28:43,020 --> 00:28:48,389
if an attacker<font color="#E5E5E5"> has more control it is</font>

574
00:28:45,510 --> 00:28:50,550
even easier<font color="#CCCCCC"> and the most important</font><font color="#E5E5E5"> point</font>

575
00:28:48,390 --> 00:28:53,460
is<font color="#CCCCCC"> that in the B and the</font><font color="#E5E5E5"> C attackers</font>

576
00:28:50,550 --> 00:28:56,580
they can repeat the attack<font color="#CCCCCC"> so there is</font>

577
00:28:53,460 --> 00:28:59,760
no risk that something<font color="#E5E5E5"> is going to be to</font>

578
00:28:56,580 --> 00:29:01,740
be booted up and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you're stopped you</font>

579
00:28:59,760 --> 00:29:06,840
can<font color="#E5E5E5"> just repeat this as many times as</font>

580
00:29:01,740 --> 00:29:09,000
you wish mitigations<font color="#E5E5E5"> I'm just going</font><font color="#CCCCCC"> to</font>

581
00:29:06,840 --> 00:29:11,699
touch this<font color="#CCCCCC"> ok so first</font><font color="#E5E5E5"> of all limit your</font>

582
00:29:09,000 --> 00:29:13,860
DMA capabilities at least<font color="#CCCCCC"> the ones</font><font color="#E5E5E5"> that</font>

583
00:29:11,700 --> 00:29:17,490
<font color="#E5E5E5">are expose of this is already done in</font>

584
00:29:13,860 --> 00:29:22,260
late<font color="#CCCCCC"> windows</font><font color="#E5E5E5"> and not in linux but in</font>

585
00:29:17,490 --> 00:29:26,040
late<font color="#CCCCCC"> windows platforms</font><font color="#E5E5E5"> but again you</font>

586
00:29:22,260 --> 00:29:28,080
cannot really do this because<font color="#CCCCCC"> the there</font>

587
00:29:26,040 --> 00:29:29,909
are<font color="#E5E5E5"> many interfaces internal and</font>

588
00:29:28,080 --> 00:29:33,240
external and they are there<font color="#CCCCCC"> for good</font>

589
00:29:29,910 --> 00:29:37,200
reasons<font color="#E5E5E5"> so this is something that could</font>

590
00:29:33,240 --> 00:29:39,990
be<font color="#E5E5E5"> not practical software self</font>

591
00:29:37,200 --> 00:29:42,450
<font color="#E5E5E5">protection so you think ok very well now</font>

592
00:29:39,990 --> 00:29:45,570
that we<font color="#E5E5E5"> know this trick we'll go to the</font>

593
00:29:42,450 --> 00:29:47,580
Linux kernel developments<font color="#CCCCCC"> and tell them</font>

594
00:29:45,570 --> 00:29:49,860
<font color="#CCCCCC">listen when you are doing this</font><font color="#E5E5E5"> pre</font>

595
00:29:47,580 --> 00:29:52,260
authentication<font color="#E5E5E5"> maybe do it</font><font color="#CCCCCC"> double check</font>

596
00:29:49,860 --> 00:29:54,870
or do something<font color="#E5E5E5"> in the code itself that</font>

597
00:29:52,260 --> 00:29:57,240
<font color="#E5E5E5">would</font><font color="#CCCCCC"> resist</font><font color="#E5E5E5"> something like this but if</font>

598
00:29:54,870 --> 00:29:59,159
this demonstration happens on a real

599
00:29:57,240 --> 00:30:01,080
<font color="#CCCCCC">login how do you know</font><font color="#E5E5E5"> that you can</font>

600
00:29:59,160 --> 00:30:02,580
<font color="#CCCCCC">possibly cover the whole kernel I mean</font>

601
00:30:01,080 --> 00:30:05,040
you can do these things<font color="#CCCCCC"> in many other</font>

602
00:30:02,580 --> 00:30:07,470
<font color="#E5E5E5">places and change the behavior of</font>

603
00:30:05,040 --> 00:30:09,360
software in an<font color="#CCCCCC"> unpredictable</font><font color="#E5E5E5"> way so</font>

604
00:30:07,470 --> 00:30:13,020
maybe<font color="#E5E5E5"> you can touch here but there are</font>

605
00:30:09,360 --> 00:30:15,209
<font color="#E5E5E5">other other places so still it doesn't</font>

606
00:30:13,020 --> 00:30:16,860
give you a guarantee that that memory

607
00:30:15,210 --> 00:30:19,440
encryption is going to be enough

608
00:30:16,860 --> 00:30:22,500
<font color="#E5E5E5">ok memory encryption with with</font>

609
00:30:19,440 --> 00:30:23,500
authentication is a solution<font color="#CCCCCC"> actually I</font>

610
00:30:22,500 --> 00:30:25,690
<font color="#E5E5E5">just mentioned the</font>

611
00:30:23,500 --> 00:30:28,450
<font color="#E5E5E5">GX a software Gard extensions this is a</font>

612
00:30:25,690 --> 00:30:31,690
new technology security technology by

613
00:30:28,450 --> 00:30:33,760
<font color="#E5E5E5">Intel</font><font color="#CCCCCC"> and this does many things but part</font>

614
00:30:31,690 --> 00:30:35,730
of it<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is it has a memory</font>

615
00:30:33,760 --> 00:30:38,160
encryption engine that has

616
00:30:35,730 --> 00:30:41,500
authentication and also replay

617
00:30:38,160 --> 00:30:43,780
<font color="#E5E5E5">prevention mechanism it's not on the</font>

618
00:30:41,500 --> 00:30:45,460
whole memory<font color="#E5E5E5"> right now</font><font color="#CCCCCC"> it's on</font><font color="#E5E5E5"> only on</font>

619
00:30:43,780 --> 00:30:48,780
an aperture<font color="#E5E5E5"> of a hundred and</font><font color="#CCCCCC"> twenty</font>

620
00:30:45,460 --> 00:30:52,780
eight<font color="#E5E5E5"> megabytes</font><font color="#CCCCCC"> but this gives</font><font color="#E5E5E5"> you some</font>

621
00:30:48,780 --> 00:30:55,060
chance of<font color="#E5E5E5"> writing software that could</font>

622
00:30:52,780 --> 00:30:56,830
not<font color="#CCCCCC"> be attacked</font><font color="#E5E5E5"> because at least part of</font>

623
00:30:55,060 --> 00:30:58,720
it is something that<font color="#CCCCCC"> you can depend on</font>

624
00:30:56,830 --> 00:31:06,399
as a<font color="#CCCCCC"> route of trust and do something</font>

625
00:30:58,720 --> 00:31:08,110
something<font color="#E5E5E5"> else now say there is more the</font>

626
00:31:06,400 --> 00:31:10,060
<font color="#CCCCCC">write I call it the</font><font color="#E5E5E5"> Revenge of</font><font color="#CCCCCC"> the fault</font>

627
00:31:08,110 --> 00:31:12,820
attacks so<font color="#CCCCCC"> far the attacks have been</font>

628
00:31:10,060 --> 00:31:15,100
proliferating<font color="#E5E5E5"> for years</font><font color="#CCCCCC"> in the smart</font>

629
00:31:12,820 --> 00:31:17,620
<font color="#CCCCCC">card world right and</font><font color="#E5E5E5"> there were many</font>

630
00:31:15,100 --> 00:31:21,159
mitigations and<font color="#E5E5E5"> and this is one</font><font color="#CCCCCC"> of the</font>

631
00:31:17,620 --> 00:31:23,260
most is the easiest attack that you can

632
00:31:21,160 --> 00:31:26,230
<font color="#E5E5E5">mount on a smart card and this</font><font color="#CCCCCC"> is work</font>

633
00:31:23,260 --> 00:31:29,530
with my colleagues in in<font color="#CCCCCC"> Berlin</font><font color="#E5E5E5"> and what</font>

634
00:31:26,230 --> 00:31:30,970
we did was<font color="#E5E5E5"> exactly the same</font><font color="#CCCCCC"> thing assume</font>

635
00:31:29,530 --> 00:31:33,149
<font color="#CCCCCC">that the memory actually we</font><font color="#E5E5E5"> built</font>

636
00:31:30,970 --> 00:31:35,860
software<font color="#E5E5E5"> based a memory encryption</font>

637
00:31:33,150 --> 00:31:37,810
forget<font color="#CCCCCC"> about the performance it was not</font>

638
00:31:35,860 --> 00:31:44,070
<font color="#E5E5E5">interesting we just built it as a as a</font>

639
00:31:37,810 --> 00:31:46,960
real as a real<font color="#E5E5E5"> demonstration and again</font>

640
00:31:44,070 --> 00:31:49,600
we are<font color="#CCCCCC"> assuming the adversary that is</font>

641
00:31:46,960 --> 00:31:54,580
not<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> have root</font><font color="#E5E5E5"> privileges so this</font>

642
00:31:49,600 --> 00:31:59,469
corresponds<font color="#E5E5E5"> to two attacker</font><font color="#CCCCCC"> be the</font>

643
00:31:54,580 --> 00:32:02,560
<font color="#E5E5E5">breach attacker he can install malware</font>

644
00:31:59,470 --> 00:32:05,140
or do many things and in particular he

645
00:32:02,560 --> 00:32:07,780
can physically access the platform<font color="#CCCCCC"> and</font>

646
00:32:05,140 --> 00:32:10,600
connect a FireWire device this<font color="#CCCCCC"> is this</font>

647
00:32:07,780 --> 00:32:12,160
<font color="#E5E5E5">is actually</font><font color="#CCCCCC"> what what we are doing</font><font color="#E5E5E5"> do</font>

648
00:32:10,600 --> 00:32:14,350
<font color="#E5E5E5">they</font><font color="#CCCCCC"> are doing there so you have</font><font color="#E5E5E5"> a</font>

649
00:32:12,160 --> 00:32:18,370
<font color="#E5E5E5">victim process here an attack process</font>

650
00:32:14,350 --> 00:32:22,270
<font color="#CCCCCC">and the attacker there</font><font color="#E5E5E5"> I'm afraid to</font>

651
00:32:18,370 --> 00:32:24,790
make one more step so with a<font color="#E5E5E5"> FireWire he</font>

652
00:32:22,270 --> 00:32:25,780
can control<font color="#E5E5E5"> the</font><font color="#CCCCCC"> memory but since the</font>

653
00:32:24,790 --> 00:32:28,050
memory is encrypted

654
00:32:25,780 --> 00:32:32,290
the<font color="#E5E5E5"> assumption is just that he can just</font>

655
00:32:28,050 --> 00:32:34,178
<font color="#E5E5E5">override with something and guess what</font>

656
00:32:32,290 --> 00:32:37,450
<font color="#CCCCCC">we</font><font color="#E5E5E5"> just took the</font>

657
00:32:34,179 --> 00:32:39,490
classical<font color="#CCCCCC"> RSA</font><font color="#E5E5E5"> CRT so it's RSA</font><font color="#CCCCCC"> with</font>

658
00:32:37,450 --> 00:32:42,450
Chinese remainder theorem<font color="#E5E5E5"> attack its</font>

659
00:32:39,490 --> 00:32:45,539
classical<font color="#E5E5E5"> I think it's from the 90s</font>

660
00:32:42,450 --> 00:32:49,259
<font color="#CCCCCC">Bonet demillo</font><font color="#E5E5E5"> Lipton they they actually</font>

661
00:32:45,539 --> 00:32:51,100
<font color="#E5E5E5">showed the first fault attack that</font>

662
00:32:49,259 --> 00:32:52,419
actually it is based on some

663
00:32:51,100 --> 00:32:54,789
mathematical properties of the

664
00:32:52,419 --> 00:32:57,669
computations but<font color="#E5E5E5"> in a sense if you can</font>

665
00:32:54,789 --> 00:33:00,158
just corrupt<font color="#E5E5E5"> a value during the</font>

666
00:32:57,669 --> 00:33:02,559
computations and these computations are

667
00:33:00,159 --> 00:33:04,749
long right so it opens a<font color="#E5E5E5"> big window of</font>

668
00:33:02,559 --> 00:33:08,230
opportunity<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> something like this if</font>

669
00:33:04,749 --> 00:33:09,340
you just<font color="#E5E5E5"> corrupt corrupt one of the one</font>

670
00:33:08,230 --> 00:33:11,590
of the<font color="#E5E5E5"> primes</font>

671
00:33:09,340 --> 00:33:14,259
so the CRT is actually using<font color="#E5E5E5"> the primes</font>

672
00:33:11,590 --> 00:33:16,600
themselves in<font color="#E5E5E5"> order to get some Forex</font>

673
00:33:14,259 --> 00:33:20,559
speed up so there<font color="#E5E5E5"> is reason for for</font>

674
00:33:16,600 --> 00:33:22,449
playing with fire<font color="#E5E5E5"> but you can just if</font>

675
00:33:20,559 --> 00:33:24,190
you can somehow corrupt one of the

676
00:33:22,450 --> 00:33:27,600
values<font color="#CCCCCC"> of the primes then you can just</font>

677
00:33:24,190 --> 00:33:30,730
factorize the modulus<font color="#CCCCCC"> if you see one</font>

678
00:33:27,600 --> 00:33:34,269
good signature<font color="#E5E5E5"> in one faulty signature</font>

679
00:33:30,730 --> 00:33:36,549
the greatest common divisor<font color="#CCCCCC"> of the</font>

680
00:33:34,269 --> 00:33:38,919
difference and the modulus<font color="#CCCCCC"> is actually</font>

681
00:33:36,549 --> 00:33:41,799
going to give you one of the primes<font color="#E5E5E5"> so</font>

682
00:33:38,919 --> 00:33:45,279
your RSA is broken<font color="#E5E5E5"> so what is the</font>

683
00:33:41,799 --> 00:33:48,970
mitigation that everyone knows that<font color="#E5E5E5"> must</font>

684
00:33:45,279 --> 00:33:52,210
be<font color="#E5E5E5"> done when if you are using</font><font color="#CCCCCC"> okay don't</font>

685
00:33:48,970 --> 00:33:54,490
use your<font color="#CCCCCC"> T but but nobody nobody wants</font>

686
00:33:52,210 --> 00:33:57,490
<font color="#CCCCCC">to give a</font><font color="#E5E5E5"> Forex performance on</font>

687
00:33:54,490 --> 00:33:59,350
signatures<font color="#E5E5E5"> the other thing is when you</font>

688
00:33:57,490 --> 00:34:01,389
<font color="#CCCCCC">are</font><font color="#E5E5E5"> producing a signature</font><font color="#CCCCCC"> before you</font>

689
00:33:59,350 --> 00:34:05,230
release<font color="#E5E5E5"> the signature just check that it</font>

690
00:34:01,389 --> 00:34:09,929
verifies<font color="#E5E5E5"> okay so check before releasing</font>

691
00:34:05,230 --> 00:34:14,168
a signature<font color="#E5E5E5"> of course there are</font><font color="#CCCCCC"> papers</font>

692
00:34:09,929 --> 00:34:18,399
demonstrations<font color="#CCCCCC"> advice BK aims but still</font>

693
00:34:14,168 --> 00:34:21,969
<font color="#E5E5E5">not everyone</font><font color="#CCCCCC"> follows this so guess the</font>

694
00:34:18,399 --> 00:34:25,210
guess<font color="#E5E5E5"> guess what I'll just jump for the</font>

695
00:34:21,969 --> 00:34:28,888
sake of brevity<font color="#CCCCCC"> so first of all we found</font>

696
00:34:25,210 --> 00:34:33,389
a real piece of<font color="#E5E5E5"> code it's called new GP</font>

697
00:34:28,889 --> 00:34:36,609
which is the mail<font color="#E5E5E5"> client of many systems</font>

698
00:34:33,389 --> 00:34:39,970
<font color="#E5E5E5">but I just want to want you to relax it</font>

699
00:34:36,609 --> 00:34:43,219
was<font color="#E5E5E5"> an old version of new GP version one</font>

700
00:34:39,969 --> 00:34:46,520
version<font color="#CCCCCC"> two already learned</font>

701
00:34:43,219 --> 00:34:49,580
the lesson<font color="#E5E5E5"> and is checking and</font><font color="#CCCCCC"> is</font>

702
00:34:46,520 --> 00:34:53,239
checking and also<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> allow the</font>

703
00:34:49,580 --> 00:34:55,009
interface<font color="#E5E5E5"> through a script so</font><font color="#CCCCCC"> you cannot</font>

704
00:34:53,239 --> 00:34:57,859
do something<font color="#CCCCCC"> like this but</font><font color="#E5E5E5"> a real</font>

705
00:34:55,010 --> 00:35:01,550
product<font color="#E5E5E5"> new GP actually we can just do</font>

706
00:34:57,860 --> 00:35:03,530
the<font color="#CCCCCC"> same thing so okay if the attack</font>

707
00:35:01,550 --> 00:35:05,180
actually<font color="#E5E5E5"> consists of several steps and</font>

708
00:35:03,530 --> 00:35:08,570
each one of<font color="#E5E5E5"> them takes a lot</font><font color="#CCCCCC"> of effort</font>

709
00:35:05,180 --> 00:35:10,569
to to actually<font color="#CCCCCC"> know so you need first of</font>

710
00:35:08,570 --> 00:35:13,580
all on<font color="#CCCCCC"> the system</font><font color="#E5E5E5"> you need to</font><font color="#CCCCCC"> identify</font>

711
00:35:10,570 --> 00:35:16,700
where exactly<font color="#E5E5E5"> you want where exactly</font>

712
00:35:13,580 --> 00:35:19,069
your key element P which is<font color="#E5E5E5"> the prime</font>

713
00:35:16,700 --> 00:35:21,169
where it resides<font color="#CCCCCC"> so first of</font><font color="#E5E5E5"> all the</font>

714
00:35:19,070 --> 00:35:22,820
code is known but<font color="#CCCCCC"> you need to</font><font color="#E5E5E5"> know where</font>

715
00:35:21,170 --> 00:35:25,820
<font color="#CCCCCC">to</font><font color="#E5E5E5"> start with you you need to</font><font color="#CCCCCC"> know the</font>

716
00:35:22,820 --> 00:35:30,830
<font color="#E5E5E5">Austin so we need to do some prime and</font>

717
00:35:25,820 --> 00:35:33,410
probe work in<font color="#E5E5E5"> order to identify where so</font>

718
00:35:30,830 --> 00:35:35,410
this is the preparation<font color="#E5E5E5"> the preface of</font>

719
00:35:33,410 --> 00:35:39,500
<font color="#E5E5E5">course you need to</font><font color="#CCCCCC"> setup</font><font color="#E5E5E5"> the DMA</font>

720
00:35:35,410 --> 00:35:42,230
communication and to do some<font color="#E5E5E5"> profiling</font>

721
00:35:39,500 --> 00:35:45,190
in order to know when and where and then

722
00:35:42,230 --> 00:35:48,200
you just do<font color="#E5E5E5"> the attack so the attack is</font>

723
00:35:45,190 --> 00:35:51,530
through the prime and<font color="#E5E5E5"> probe against some</font>

724
00:35:48,200 --> 00:35:53,990
garbage<font color="#CCCCCC"> corruption on the on the DRAM</font>

725
00:35:51,530 --> 00:35:59,840
which<font color="#E5E5E5"> just injects garbage in this piece</font>

726
00:35:53,990 --> 00:36:02,390
of<font color="#E5E5E5"> data structure where the prime is</font>

727
00:35:59,840 --> 00:36:06,100
located now here in this case<font color="#CCCCCC"> the prime</font>

728
00:36:02,390 --> 00:36:09,830
is large it<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> 1,024 bits so</font>

729
00:36:06,100 --> 00:36:12,500
corrupting<font color="#CCCCCC"> 16 bytes</font><font color="#E5E5E5"> is is not even going</font>

730
00:36:09,830 --> 00:36:14,660
<font color="#CCCCCC">to go beyond the boundary and also we</font>

731
00:36:12,500 --> 00:36:17,270
don't<font color="#E5E5E5"> care all we need is that it would</font>

732
00:36:14,660 --> 00:36:21,259
be a wrong value<font color="#E5E5E5"> of this prime you do</font>

733
00:36:17,270 --> 00:36:24,170
the faulty the fault injection and<font color="#E5E5E5"> you</font>

734
00:36:21,260 --> 00:36:26,410
get the faulty signature and you can

735
00:36:24,170 --> 00:36:26,410
just

736
00:36:27,250 --> 00:36:33,140
well factorize the<font color="#CCCCCC"> modulation which</font><font color="#E5E5E5"> this</font>

737
00:36:30,080 --> 00:36:38,600
means<font color="#E5E5E5"> that you broke the RSA signature</font>

738
00:36:33,140 --> 00:36:40,790
of<font color="#E5E5E5"> this mail client without getting into</font>

739
00:36:38,600 --> 00:36:44,350
too many details I just<font color="#E5E5E5"> want to tell you</font>

740
00:36:40,790 --> 00:36:48,980
<font color="#CCCCCC">that we were trying this and</font><font color="#E5E5E5"> we got</font><font color="#CCCCCC"> 60%</font>

741
00:36:44,350 --> 00:36:51,710
<font color="#E5E5E5">success probability per session so it is</font>

742
00:36:48,980 --> 00:36:54,440
quite probable<font color="#CCCCCC"> that within</font><font color="#E5E5E5"> a few</font>

743
00:36:51,710 --> 00:36:57,290
<font color="#E5E5E5">attempts like this you will get</font>

744
00:36:54,440 --> 00:36:59,329
this done right<font color="#E5E5E5"> and in this</font><font color="#CCCCCC"> situation if</font>

745
00:36:57,290 --> 00:37:01,130
it fails in the first time<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just try</font>

746
00:36:59,329 --> 00:37:03,319
it the next<font color="#CCCCCC"> time because it is screwed</font>

747
00:37:01,130 --> 00:37:05,810
<font color="#E5E5E5">it is a script that</font><font color="#CCCCCC"> that new GP is</font>

748
00:37:03,319 --> 00:37:08,119
willing to it's like<font color="#CCCCCC"> a command line</font>

749
00:37:05,810 --> 00:37:11,900
script that the new GP happens to accept

750
00:37:08,119 --> 00:37:14,990
and just<font color="#E5E5E5"> produce the signature so the</font>

751
00:37:11,900 --> 00:37:17,839
important point<font color="#E5E5E5"> is that here</font><font color="#CCCCCC"> we have a</font>

752
00:37:14,990 --> 00:37:20,299
very high<font color="#CCCCCC"> probability of succeeding even</font>

753
00:37:17,839 --> 00:37:22,160
if the first<font color="#E5E5E5"> time and in a situation</font>

754
00:37:20,300 --> 00:37:25,069
<font color="#CCCCCC">week where we can repeat this several</font>

755
00:37:22,160 --> 00:37:26,598
times<font color="#CCCCCC"> well and if five times you already</font>

756
00:37:25,069 --> 00:37:31,190
get something like<font color="#CCCCCC"> 90 percent or even</font>

757
00:37:26,599 --> 00:37:34,460
<font color="#E5E5E5">more all right now</font>

758
00:37:31,190 --> 00:37:36,410
so we<font color="#E5E5E5"> touched the a attacker the B</font>

759
00:37:34,460 --> 00:37:38,300
attacker<font color="#E5E5E5"> what about the C attacker and I</font>

760
00:37:36,410 --> 00:37:39,890
would say that the C attacker is

761
00:37:38,300 --> 00:37:43,040
actually the most worrying because

762
00:37:39,890 --> 00:37:45,259
<font color="#E5E5E5">everyone today goes to to a cloud</font>

763
00:37:43,040 --> 00:37:49,040
provider<font color="#CCCCCC"> they're like Amazon Web</font>

764
00:37:45,260 --> 00:37:51,200
Services<font color="#E5E5E5"> you buy or you get a VM you run</font>

765
00:37:49,040 --> 00:37:53,900
things<font color="#E5E5E5"> how do you know what's happening</font>

766
00:37:51,200 --> 00:37:58,730
in the in in<font color="#CCCCCC"> this environment who is</font>

767
00:37:53,900 --> 00:38:02,780
reading accessing the this this<font color="#CCCCCC"> VMs</font>

768
00:37:58,730 --> 00:38:04,940
memory<font color="#E5E5E5"> so there is there</font><font color="#CCCCCC"> are new</font>

769
00:38:02,780 --> 00:38:09,560
techniques that<font color="#E5E5E5"> have been released</font><font color="#CCCCCC"> I</font>

770
00:38:04,940 --> 00:38:12,710
think a few months<font color="#CCCCCC"> ago by some</font><font color="#E5E5E5"> process</font>

771
00:38:09,560 --> 00:38:16,819
or vendors where they have memory

772
00:38:12,710 --> 00:38:22,730
encryption and more each VM<font color="#E5E5E5"> would have</font>

773
00:38:16,819 --> 00:38:27,319
its own<font color="#E5E5E5"> encryption</font><font color="#CCCCCC"> key so now if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> are</font>

774
00:38:22,730 --> 00:38:29,810
the<font color="#CCCCCC"> administrator and you</font><font color="#E5E5E5"> own the</font>

775
00:38:27,319 --> 00:38:32,630
hypervisor<font color="#CCCCCC"> and you try to access the</font>

776
00:38:29,810 --> 00:38:33,920
memory<font color="#E5E5E5"> of of another VM to read it so</font>

777
00:38:32,630 --> 00:38:35,660
today<font color="#E5E5E5"> if it's not</font><font color="#CCCCCC"> encrypted the</font>

778
00:38:33,920 --> 00:38:38,390
hypervisor<font color="#CCCCCC"> can just access and read the</font>

779
00:38:35,660 --> 00:38:41,089
<font color="#CCCCCC">plaintext</font><font color="#E5E5E5"> but now if it is encrypted and</font>

780
00:38:38,390 --> 00:38:45,348
every VM has<font color="#E5E5E5"> a different key then even</font>

781
00:38:41,089 --> 00:38:47,690
if<font color="#E5E5E5"> you are a an administrator of the</font>

782
00:38:45,349 --> 00:38:49,310
<font color="#E5E5E5">hypervisor unless you corrupt the</font>

783
00:38:47,690 --> 00:38:52,010
hypervisor but let's<font color="#E5E5E5"> assume</font><font color="#CCCCCC"> that the</font>

784
00:38:49,310 --> 00:38:54,078
hypervisor<font color="#E5E5E5"> is trusted then you can read</font>

785
00:38:52,010 --> 00:38:57,230
you<font color="#CCCCCC"> can access but it would up but the</font>

786
00:38:54,079 --> 00:39:00,290
<font color="#CCCCCC">des cipher text of the VM</font><font color="#E5E5E5"> memory is</font>

787
00:38:57,230 --> 00:39:01,790
going to be decrypted<font color="#CCCCCC"> with a different</font>

788
00:39:00,290 --> 00:39:03,460
case what you<font color="#E5E5E5"> are going to get is</font>

789
00:39:01,790 --> 00:39:06,550
garbage<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> not going to</font>

790
00:39:03,460 --> 00:39:07,540
anything<font color="#E5E5E5"> so I think you can guess what's</font>

791
00:39:06,550 --> 00:39:11,860
coming<font color="#E5E5E5"> next</font>

792
00:39:07,540 --> 00:39:16,660
<font color="#E5E5E5">all right so I'm going</font><font color="#CCCCCC"> to a show a</font>

793
00:39:11,860 --> 00:39:20,050
virtualization<font color="#E5E5E5"> based</font><font color="#CCCCCC"> be our blinded</font>

794
00:39:16,660 --> 00:39:22,509
random corruption attacks<font color="#E5E5E5"> and we'll show</font>

795
00:39:20,050 --> 00:39:27,310
you step by<font color="#CCCCCC"> step</font><font color="#E5E5E5"> and then I'll call up</font>

796
00:39:22,510 --> 00:39:29,410
or do<font color="#E5E5E5"> we go where where are you we ready</font>

797
00:39:27,310 --> 00:39:33,730
and we<font color="#E5E5E5"> are going to make</font><font color="#CCCCCC"> a live demo of</font>

798
00:39:29,410 --> 00:39:38,399
<font color="#E5E5E5">this with some new</font><font color="#CCCCCC"> twists</font><font color="#E5E5E5"> so let me let</font>

799
00:39:33,730 --> 00:39:41,260
me<font color="#CCCCCC"> show so again again</font><font color="#E5E5E5"> we have an</font>

800
00:39:38,400 --> 00:39:43,990
untrusted environment<font color="#E5E5E5"> and you want to</font>

801
00:39:41,260 --> 00:39:47,380
protect<font color="#CCCCCC"> the privacy so each customer</font>

802
00:39:43,990 --> 00:39:48,850
today<font color="#E5E5E5"> just just the administrator can</font>

803
00:39:47,380 --> 00:39:51,160
read anything<font color="#E5E5E5"> and this is not an</font>

804
00:39:48,850 --> 00:39:53,049
acceptable situation<font color="#CCCCCC"> and there is a new</font>

805
00:39:51,160 --> 00:39:56,859
technology<font color="#CCCCCC"> that</font><font color="#E5E5E5"> says</font><font color="#CCCCCC"> ok let's</font><font color="#E5E5E5"> encrypt</font>

806
00:39:53,050 --> 00:39:59,140
all the memory in this environment<font color="#CCCCCC"> but</font>

807
00:39:56,860 --> 00:40:02,020
each VM is going to<font color="#CCCCCC"> somehow get</font><font color="#E5E5E5"> a</font>

808
00:39:59,140 --> 00:40:07,560
<font color="#CCCCCC">different encryption</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> and we are</font>

809
00:40:02,020 --> 00:40:11,140
protecting so protecting all the all the

810
00:40:07,560 --> 00:40:14,520
<font color="#E5E5E5">privacy of all the customers so how</font>

811
00:40:11,140 --> 00:40:16,810
<font color="#CCCCCC">about this</font><font color="#E5E5E5"> the advert the add your data</font>

812
00:40:14,520 --> 00:40:19,930
privacy is safe with us

813
00:40:16,810 --> 00:40:24,400
<font color="#E5E5E5">your vim memory is encrypted a unique</font>

814
00:40:19,930 --> 00:40:29,640
per VM<font color="#E5E5E5"> encryption key so let's log in</font><font color="#CCCCCC"> as</font>

815
00:40:24,400 --> 00:40:33,490
root<font color="#E5E5E5"> to your VM</font><font color="#CCCCCC"> ok and you can now</font>

816
00:40:29,640 --> 00:40:36,520
recall what we did with the locked

817
00:40:33,490 --> 00:40:39,549
machine and you<font color="#E5E5E5"> can imagine now that</font><font color="#CCCCCC"> we</font>

818
00:40:36,520 --> 00:40:42,370
are in even<font color="#E5E5E5"> a better situation provided</font>

819
00:40:39,550 --> 00:40:45,190
<font color="#E5E5E5">ok that we do the</font><font color="#CCCCCC"> the right leg work and</font>

820
00:40:42,370 --> 00:40:50,560
we're going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> demonstrate</font><font color="#CCCCCC"> this so did</font>

821
00:40:45,190 --> 00:40:52,900
you know that<font color="#CCCCCC"> there</font><font color="#E5E5E5"> is a file a config</font>

822
00:40:50,560 --> 00:40:57,100
file for each VM that<font color="#CCCCCC"> allows the</font>

823
00:40:52,900 --> 00:41:00,160
<font color="#E5E5E5">administration to enable debug</font><font color="#CCCCCC"> ok and</font>

824
00:40:57,100 --> 00:41:03,339
this<font color="#CCCCCC"> is a very important feature in</font>

825
00:41:00,160 --> 00:41:05,560
<font color="#CCCCCC">vmware and</font><font color="#E5E5E5"> moist</font><font color="#CCCCCC"> moster hypervisors</font>

826
00:41:03,340 --> 00:41:09,130
right because you want<font color="#CCCCCC"> to debug</font><font color="#E5E5E5"> things</font>

827
00:41:05,560 --> 00:41:11,440
when when things<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> right so</font>

828
00:41:09,130 --> 00:41:15,070
you just<font color="#E5E5E5"> can go as an administrator we</font>

829
00:41:11,440 --> 00:41:15,660
are now administrators<font color="#E5E5E5"> we control we can</font>

830
00:41:15,070 --> 00:41:18,329
work with

831
00:41:15,660 --> 00:41:20,700
<font color="#E5E5E5">the hypervisor but the hypervisor is is</font>

832
00:41:18,329 --> 00:41:23,250
trusted so we cannot<font color="#E5E5E5"> modify it right the</font>

833
00:41:20,700 --> 00:41:27,390
<font color="#E5E5E5">assumption it was measured</font><font color="#CCCCCC"> and trusted</font>

834
00:41:23,250 --> 00:41:28,440
<font color="#E5E5E5">so okay you can just put true in the in</font>

835
00:41:27,390 --> 00:41:31,140
the config file

836
00:41:28,440 --> 00:41:33,480
so now we can debug but this still is

837
00:41:31,140 --> 00:41:35,190
not going to to help us<font color="#E5E5E5"> right because</font>

838
00:41:33,480 --> 00:41:37,260
<font color="#E5E5E5">debug means that</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> just get</font><font color="#CCCCCC"> it to</font>

839
00:41:35,190 --> 00:41:38,849
read something<font color="#E5E5E5"> but when we read it it's</font>

840
00:41:37,260 --> 00:41:42,140
<font color="#E5E5E5">going to be decrypted with</font><font color="#CCCCCC"> the wrong key</font>

841
00:41:38,849 --> 00:41:45,240
<font color="#CCCCCC">and we get garbage</font><font color="#E5E5E5"> okay no worries but</font>

842
00:41:42,140 --> 00:41:47,970
so did you know that<font color="#E5E5E5"> this feature also</font>

843
00:41:45,240 --> 00:41:50,160
grants us<font color="#CCCCCC"> the ability</font><font color="#E5E5E5"> to write the</font>

844
00:41:47,970 --> 00:41:53,700
memory and this<font color="#E5E5E5"> is exactly the tool that</font>

845
00:41:50,160 --> 00:41:59,819
<font color="#E5E5E5">we were looking</font><font color="#CCCCCC"> for so</font><font color="#E5E5E5"> combine this in</font>

846
00:41:53,700 --> 00:42:02,129
this scenario<font color="#E5E5E5"> and you can just okay and</font>

847
00:41:59,819 --> 00:42:05,009
did you know<font color="#CCCCCC"> okay there is another thing</font>

848
00:42:02,130 --> 00:42:07,650
<font color="#E5E5E5">did</font><font color="#CCCCCC"> you know did you</font><font color="#E5E5E5"> okay so the the</font>

849
00:42:05,010 --> 00:42:10,980
user actually<font color="#E5E5E5"> connects</font><font color="#CCCCCC"> today to his</font><font color="#E5E5E5"> VM</font>

850
00:42:07,650 --> 00:42:12,990
<font color="#E5E5E5">through a connection</font><font color="#CCCCCC"> like to</font><font color="#E5E5E5"> through a</font>

851
00:42:10,980 --> 00:42:15,210
secure connection but did you know that

852
00:42:12,990 --> 00:42:18,149
in the<font color="#CCCCCC"> background there is also the</font>

853
00:42:15,210 --> 00:42:20,700
login<font color="#CCCCCC"> process running it is not exposed</font>

854
00:42:18,150 --> 00:42:22,680
to<font color="#CCCCCC"> the user</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is not going to be used</font>

855
00:42:20,700 --> 00:42:25,439
to the user who<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to do some SSH</font>

856
00:42:22,680 --> 00:42:28,319
session<font color="#E5E5E5"> with his own VM but it is there</font>

857
00:42:25,440 --> 00:42:30,299
running<font color="#E5E5E5"> okay now</font><font color="#CCCCCC"> one plus two plus three</font>

858
00:42:28,319 --> 00:42:32,940
and<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> guess what's going to happen</font>

859
00:42:30,299 --> 00:42:36,750
now<font color="#CCCCCC"> and the here it is</font>

860
00:42:32,940 --> 00:42:39,660
so we connect to<font color="#E5E5E5"> the hypervisor debug</font>

861
00:42:36,750 --> 00:42:42,210
tab which<font color="#E5E5E5"> you can just see so we have we</font>

862
00:42:39,660 --> 00:42:44,839
have<font color="#CCCCCC"> an attacker</font><font color="#E5E5E5"> VM and an attacked VM</font>

863
00:42:42,210 --> 00:42:49,200
so the attacker is the hypervisor<font color="#E5E5E5"> and</font>

864
00:42:44,839 --> 00:42:55,380
<font color="#E5E5E5">okay so we connected to the target</font>

865
00:42:49,200 --> 00:43:01,549
remote VM that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> running this is our</font>

866
00:42:55,380 --> 00:43:06,079
victim now<font color="#E5E5E5"> we are connected you can see</font>

867
00:43:01,549 --> 00:43:08,400
you can see below and we have now<font color="#CCCCCC"> a SD</font>

868
00:43:06,079 --> 00:43:12,299
administering the execution of the

869
00:43:08,400 --> 00:43:15,809
target<font color="#E5E5E5"> VM just put breakpoints because</font>

870
00:43:12,299 --> 00:43:18,930
we are able<font color="#E5E5E5"> to debug so the show must</font><font color="#CCCCCC"> go</font>

871
00:43:15,809 --> 00:43:22,650
on right we just we just<font color="#E5E5E5"> connect it to</font>

872
00:43:18,930 --> 00:43:24,890
this but we<font color="#E5E5E5"> just hit the C</font><font color="#CCCCCC"> continuum</font>

873
00:43:22,650 --> 00:43:29,599
when<font color="#E5E5E5"> you continue then the</font>

874
00:43:24,890 --> 00:43:33,828
<font color="#E5E5E5">fact VMI's is going on and meanwhile</font><font color="#CCCCCC"> on</font>

875
00:43:29,599 --> 00:43:39,400
the<font color="#E5E5E5"> target</font><font color="#CCCCCC"> @vm what's happening</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> vm</font>

876
00:43:33,829 --> 00:43:43,819
boots normally it<font color="#CCCCCC"> is asking for</font><font color="#E5E5E5"> the key</font>

877
00:43:39,400 --> 00:43:45,529
enter your passphrase<font color="#CCCCCC"> right</font><font color="#E5E5E5"> and the</font>

878
00:43:43,819 --> 00:43:48,349
funny thing<font color="#E5E5E5"> is that the legitimate user</font>

879
00:43:45,529 --> 00:43:51,440
has no way to<font color="#E5E5E5"> know that the VM is being</font>

880
00:43:48,349 --> 00:43:53,630
debugged<font color="#E5E5E5"> from his viewpoint</font><font color="#CCCCCC"> it just sees</font>

881
00:43:51,440 --> 00:43:57,230
a normal screen<font color="#E5E5E5"> doing whatever he wants</font>

882
00:43:53,630 --> 00:44:01,160
<font color="#CCCCCC">but</font><font color="#E5E5E5"> this is going going under underneath</font>

883
00:43:57,230 --> 00:44:03,499
<font color="#E5E5E5">so guess what we don't know the pattern</font>

884
00:44:01,160 --> 00:44:05,269
<font color="#E5E5E5">right we want to be rude</font><font color="#CCCCCC"> of course if we</font>

885
00:44:03,499 --> 00:44:06,890
can do<font color="#E5E5E5"> something if you can get root</font>

886
00:44:05,269 --> 00:44:11,930
<font color="#E5E5E5">then we</font><font color="#CCCCCC"> will be rude</font>

887
00:44:06,890 --> 00:44:13,368
we just punch some password<font color="#E5E5E5"> we don't</font>

888
00:44:11,930 --> 00:44:17,029
care what it<font color="#E5E5E5"> is and of</font><font color="#CCCCCC"> course it is</font>

889
00:44:13,369 --> 00:44:21,140
going to to say<font color="#CCCCCC"> that login is incorrect</font>

890
00:44:17,029 --> 00:44:22,819
and go back to the login<font color="#CCCCCC"> and all we need</font>

891
00:44:21,140 --> 00:44:26,569
<font color="#CCCCCC">to do is the same</font><font color="#E5E5E5"> trick as before just</font>

892
00:44:22,819 --> 00:44:30,920
<font color="#E5E5E5">to corrupt the pre authentication flag</font>

893
00:44:26,569 --> 00:44:33,380
so<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> please stop we can control we</font>

894
00:44:30,920 --> 00:44:38,299
can control the<font color="#E5E5E5"> execution flow here of</font>

895
00:44:33,380 --> 00:44:42,369
the victim<font color="#E5E5E5"> virtual machine so control</font><font color="#CCCCCC"> C</font>

896
00:44:38,299 --> 00:44:45,890
<font color="#CCCCCC">okay we just we'll</font><font color="#E5E5E5"> just stop this this</font>

897
00:44:42,369 --> 00:44:51,950
process and<font color="#E5E5E5"> you see it you see it below</font>

898
00:44:45,890 --> 00:44:53,569
and now we add a breakpoint<font color="#E5E5E5"> through the</font>

899
00:44:51,950 --> 00:44:55,999
debugger<font color="#CCCCCC"> and this is a legitimate</font>

900
00:44:53,569 --> 00:44:58,579
interface that is a nice service to

901
00:44:55,999 --> 00:45:02,868
debug<font color="#E5E5E5"> things to the this is there for</font>

902
00:44:58,579 --> 00:45:05,960
<font color="#CCCCCC">reason</font><font color="#E5E5E5"> a breakpoint</font><font color="#CCCCCC"> let's see if we can</font>

903
00:45:02,869 --> 00:45:10,549
try this again<font color="#CCCCCC"> you will</font><font color="#E5E5E5"> see first of all</font>

904
00:45:05,960 --> 00:45:14,029
<font color="#CCCCCC">that we try</font><font color="#E5E5E5"> to login and now they've the</font>

905
00:45:10,549 --> 00:45:17,809
VM it's the breakpoint<font color="#CCCCCC"> okay we put</font><font color="#E5E5E5"> a</font>

906
00:45:14,029 --> 00:45:20,089
breakpoint there and if we<font color="#E5E5E5"> try to</font><font color="#CCCCCC"> login</font>

907
00:45:17,809 --> 00:45:21,440
<font color="#E5E5E5">as root</font><font color="#CCCCCC"> without doing the corruption</font>

908
00:45:20,089 --> 00:45:23,390
attack of<font color="#E5E5E5"> course we are going</font><font color="#CCCCCC"> to fail</font>

909
00:45:21,440 --> 00:45:25,339
again it's the same<font color="#CCCCCC"> thing give your</font>

910
00:45:23,390 --> 00:45:28,069
password<font color="#E5E5E5"> the password is incorrect</font><font color="#CCCCCC"> I'll</font>

911
00:45:25,339 --> 00:45:31,759
do<font color="#CCCCCC"> this again and again but if we do the</font>

912
00:45:28,069 --> 00:45:34,140
random corruption in the same<font color="#CCCCCC"> ah ok ok</font>

913
00:45:31,759 --> 00:45:38,730
wait<font color="#CCCCCC"> we have</font>

914
00:45:34,140 --> 00:45:42,509
so where is<font color="#E5E5E5"> a we tried</font><font color="#CCCCCC"> oh we won't</font><font color="#E5E5E5"> know</font>

915
00:45:38,730 --> 00:45:44,670
it was so ok can we say<font color="#CCCCCC"> how we're going</font>

916
00:45:42,509 --> 00:45:47,400
<font color="#E5E5E5">to</font><font color="#CCCCCC"> use the number pi to help us</font>

917
00:45:44,670 --> 00:45:49,650
so<font color="#E5E5E5"> why PI because it is like every time</font>

918
00:45:47,400 --> 00:45:52,049
at<font color="#E5E5E5"> least in the cryptographers world</font>

919
00:45:49,650 --> 00:45:54,960
every<font color="#CCCCCC"> time you want to put some her on</font>

920
00:45:52,049 --> 00:45:58,950
<font color="#E5E5E5">Don Valley or arbitrary value you use</font>

921
00:45:54,960 --> 00:46:01,470
the first<font color="#E5E5E5"> whatever digits of pi written</font>

922
00:45:58,950 --> 00:46:04,230
in hexadecimal<font color="#CCCCCC"> or</font><font color="#E5E5E5"> nothing so pi is</font>

923
00:46:01,470 --> 00:46:07,738
stands for something<font color="#E5E5E5"> random or</font><font color="#CCCCCC"> arbitrary</font>

924
00:46:04,230 --> 00:46:09,720
<font color="#E5E5E5">so we'll use so we'll use the digits of</font>

925
00:46:07,739 --> 00:46:12,869
pi<font color="#E5E5E5"> Y digits and not developed a lot of</font>

926
00:46:09,720 --> 00:46:17,160
<font color="#E5E5E5">the the login process is expecting</font>

927
00:46:12,869 --> 00:46:18,660
digits and not not<font color="#E5E5E5"> characters okay so pi</font>

928
00:46:17,160 --> 00:46:22,019
is a wonderful<font color="#E5E5E5"> thing so</font><font color="#CCCCCC"> first of all</font>

929
00:46:18,660 --> 00:46:26,249
here are<font color="#E5E5E5"> the real here are the real</font>

930
00:46:22,019 --> 00:46:28,470
digits of pi<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we took the first nine</font>

931
00:46:26,249 --> 00:46:31,980
<font color="#E5E5E5">okay you can take as many as</font><font color="#CCCCCC"> you wish</font>

932
00:46:28,470 --> 00:46:36,839
<font color="#CCCCCC">and here it is it we did the random</font>

933
00:46:31,980 --> 00:46:38,999
corruption by overwriting the<font color="#E5E5E5"> memory</font>

934
00:46:36,839 --> 00:46:41,038
with the debugger now that the<font color="#CCCCCC"> bugger</font><font color="#E5E5E5"> is</font>

935
00:46:38,999 --> 00:46:43,439
a real attack<font color="#E5E5E5"> it's not not a mock attack</font>

936
00:46:41,039 --> 00:46:46,980
it is we<font color="#E5E5E5"> just at the breakpoint</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> just</font>

937
00:46:43,440 --> 00:46:48,839
enter<font color="#E5E5E5"> we just set this value to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> okay</font>

938
00:46:46,980 --> 00:46:51,599
<font color="#E5E5E5">you can check this is really the real</font>

939
00:46:48,839 --> 00:46:55,619
numbers of<font color="#E5E5E5"> pi it doesn't really it</font>

940
00:46:51,599 --> 00:46:59,789
doesn't<font color="#E5E5E5"> really matter and we won we got</font>

941
00:46:55,619 --> 00:47:03,989
root into this into this<font color="#E5E5E5"> VM so what this</font>

942
00:46:59,789 --> 00:47:08,999
<font color="#CCCCCC">means</font><font color="#E5E5E5"> is that memory encryption even</font><font color="#CCCCCC"> if</font>

943
00:47:03,989 --> 00:47:11,989
you have a<font color="#CCCCCC"> perv VM unique key is still</font>

944
00:47:08,999 --> 00:47:16,009
not enough<font color="#E5E5E5"> because just encryption</font>

945
00:47:11,989 --> 00:47:18,359
<font color="#E5E5E5">cannot protect you from random</font>

946
00:47:16,009 --> 00:47:21,059
modifications that would that would

947
00:47:18,359 --> 00:47:23,819
infiltrate the system if you are<font color="#CCCCCC"> doing</font>

948
00:47:21,059 --> 00:47:28,049
fiddling with the values of<font color="#E5E5E5"> the of the</font>

949
00:47:23,819 --> 00:47:30,989
theorem<font color="#E5E5E5"> and now since this</font><font color="#CCCCCC"> is this is a</font>

950
00:47:28,049 --> 00:47:32,670
hackers conference<font color="#E5E5E5"> I know that you don't</font>

951
00:47:30,989 --> 00:47:35,849
<font color="#E5E5E5">believe any</font><font color="#CCCCCC"> of these things</font><font color="#E5E5E5"> and we are</font>

952
00:47:32,670 --> 00:47:40,230
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to do invite of the legal and make</font>

953
00:47:35,849 --> 00:47:41,370
a real demo<font color="#E5E5E5"> a live demo</font><font color="#CCCCCC"> within with the</font>

954
00:47:40,230 --> 00:47:50,130
<font color="#E5E5E5">two</font><font color="#CCCCCC"> V</font>

955
00:47:41,370 --> 00:47:53,700
exactly this<font color="#E5E5E5"> but but we're going to have</font>

956
00:47:50,130 --> 00:47:57,330
a twist so here is the twist<font color="#E5E5E5"> so today's</font>

957
00:47:53,700 --> 00:48:02,370
my<font color="#E5E5E5"> birthday happy birthday to me and the</font>

958
00:47:57,330 --> 00:48:05,790
date is it is<font color="#E5E5E5"> October 22nd and instead</font>

959
00:48:02,370 --> 00:48:11,460
of<font color="#CCCCCC"> Pi we are going to use this birthday</font>

960
00:48:05,790 --> 00:48:15,390
<font color="#E5E5E5">attack and we'll put 22nd of October and</font>

961
00:48:11,460 --> 00:48:17,280
you'll see this<font color="#E5E5E5"> going live and then you</font>

962
00:48:15,390 --> 00:48:19,620
will<font color="#CCCCCC"> believe it</font><font color="#E5E5E5"> right so it</font><font color="#CCCCCC"> has really</font>

963
00:48:17,280 --> 00:48:21,870
<font color="#E5E5E5">nothing to do with with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> value</font><font color="#CCCCCC"> of pi</font>

964
00:48:19,620 --> 00:48:24,779
you<font color="#E5E5E5"> can just put any anything you want</font>

965
00:48:21,870 --> 00:48:26,670
<font color="#CCCCCC">okay hello</font>

966
00:48:24,780 --> 00:48:28,950
so it's very<font color="#CCCCCC"> weird to speak in English</font>

967
00:48:26,670 --> 00:48:31,620
to Brazilians<font color="#E5E5E5"> but I will try</font><font color="#CCCCCC"> okay so</font>

968
00:48:28,950 --> 00:48:33,839
first<font color="#E5E5E5"> of all</font><font color="#CCCCCC"> like we have</font><font color="#E5E5E5"> two VMs right</font>

969
00:48:31,620 --> 00:48:36,270
we have like the Red Hat VM which is the

970
00:48:33,840 --> 00:48:39,060
attacker<font color="#CCCCCC"> and we have a Debian VM which</font>

971
00:48:36,270 --> 00:48:40,560
is the victim there is no reasons<font color="#E5E5E5"> for</font>

972
00:48:39,060 --> 00:48:42,390
her<font color="#CCCCCC"> choosing one just over the other</font>

973
00:48:40,560 --> 00:48:44,279
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> just like random distros the idea</font>

974
00:48:42,390 --> 00:48:46,799
is<font color="#E5E5E5"> really to show that we don't need to</font>

975
00:48:44,280 --> 00:48:48,810
know much about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> victim so in the</font>

976
00:48:46,800 --> 00:48:51,540
configuration<font color="#E5E5E5"> file of the victim as she</font>

977
00:48:48,810 --> 00:48:54,779
<font color="#CCCCCC">has explained it before</font><font color="#E5E5E5"> I basically just</font>

978
00:48:51,540 --> 00:48:56,910
enabled the bug<font color="#E5E5E5"> that's it right the</font>

979
00:48:54,780 --> 00:49:00,450
victim<font color="#E5E5E5"> don't know it's happening so when</font>

980
00:48:56,910 --> 00:49:03,690
I started<font color="#E5E5E5"> it's actually stops the</font>

981
00:49:00,450 --> 00:49:05,609
<font color="#E5E5E5">execution in a black screen</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you see</font>

982
00:49:03,690 --> 00:49:07,770
it in a minute<font color="#E5E5E5"> you see the</font><font color="#CCCCCC"> equation</font><font color="#E5E5E5"> just</font>

983
00:49:05,610 --> 00:49:09,900
don't proceed it's waiting for<font color="#E5E5E5"> someone</font>

984
00:49:07,770 --> 00:49:11,610
to connect<font color="#E5E5E5"> a debugger into it that's</font>

985
00:49:09,900 --> 00:49:17,660
just<font color="#CCCCCC"> a capability that VMR gives to us</font>

986
00:49:11,610 --> 00:49:17,660
right<font color="#CCCCCC"> so we connect to that debugger</font>

987
00:49:21,959 --> 00:49:27,549
as Intel<font color="#CCCCCC"> employees we doing marketing</font>

988
00:49:25,479 --> 00:49:29,078
<font color="#E5E5E5">from a coffee right now</font><font color="#CCCCCC"> so as you can</font>

989
00:49:27,549 --> 00:49:35,499
<font color="#CCCCCC">see my caffeine did works</font>

990
00:49:29,079 --> 00:49:38,499
blocks<font color="#E5E5E5"> the connections very secure you</font>

991
00:49:35,499 --> 00:49:41,160
see<font color="#E5E5E5"> live like marketing so sorry so I</font>

992
00:49:38,499 --> 00:49:41,160
will try<font color="#CCCCCC"> again</font>

993
00:50:01,910 --> 00:50:06,839
<font color="#E5E5E5">okay</font>

994
00:50:04,000 --> 00:50:06,840
<font color="#E5E5E5">that's interesting</font>

995
00:50:08,480 --> 00:50:15,290
<font color="#E5E5E5">we just come from again yeah it didn't</font>

996
00:50:11,930 --> 00:50:21,640
work<font color="#CCCCCC"> I would need some minutes</font><font color="#E5E5E5"> so I'm</font>

997
00:50:15,290 --> 00:50:21,640
<font color="#E5E5E5">sorry it's really live right</font>

998
00:50:33,960 --> 00:50:39,420
we thought<font color="#E5E5E5"> to make a video</font><font color="#CCCCCC"> and show</font><font color="#E5E5E5"> it</font>

999
00:50:35,970 --> 00:50:44,220
<font color="#E5E5E5">but we took a higher risk right so bear</font>

1000
00:50:39,420 --> 00:50:47,390
with us<font color="#E5E5E5"> for a</font><font color="#CCCCCC"> minute you know</font><font color="#E5E5E5"> everyone</font>

1001
00:50:44,220 --> 00:50:56,040
can prepare a video<font color="#E5E5E5"> but to do this live</font>

1002
00:50:47,390 --> 00:50:58,049
<font color="#E5E5E5">okay okay now it's working okay so I'm</font>

1003
00:50:56,040 --> 00:50:59,849
back<font color="#E5E5E5"> sorry so what happened is</font><font color="#CCCCCC"> like I</font>

1004
00:50:58,050 --> 00:51:03,630
was connected to<font color="#E5E5E5"> the VPN</font><font color="#CCCCCC"> sorry for that</font>

1005
00:50:59,849 --> 00:51:05,640
<font color="#E5E5E5">so here we go and it's another product</font><font color="#CCCCCC"> a</font>

1006
00:51:03,630 --> 00:51:07,920
<font color="#E5E5E5">marketing okay the VPN is</font><font color="#CCCCCC"> cisco</font><font color="#E5E5E5"> by the</font>

1007
00:51:05,640 --> 00:51:09,960
way it also works so<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> I will</font><font color="#CCCCCC"> try</font>

1008
00:51:07,920 --> 00:51:12,240
again<font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see as soon as I</font>

1009
00:51:09,960 --> 00:51:15,000
connect should the target<font color="#E5E5E5"> if you look</font>

1010
00:51:12,240 --> 00:51:16,649
that machine seems<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> runny</font><font color="#E5E5E5"> it shows</font>

1011
00:51:15,000 --> 00:51:18,839
like if you see<font color="#E5E5E5"> like here</font><font color="#CCCCCC"> in the up</font>

1012
00:51:16,650 --> 00:51:20,819
corner here it shows the<font color="#CCCCCC"> machine is</font>

1013
00:51:18,839 --> 00:51:23,369
running<font color="#E5E5E5"> but because it hit a breakpoint</font>

1014
00:51:20,819 --> 00:51:25,829
as soon as I<font color="#E5E5E5"> connect it just stopped so</font>

1015
00:51:23,369 --> 00:51:28,680
I just hit a continue you'll see the<font color="#CCCCCC"> VM</font>

1016
00:51:25,829 --> 00:51:30,329
starts booting goo<font color="#E5E5E5"> so the user don't</font>

1017
00:51:28,680 --> 00:51:32,790
<font color="#CCCCCC">know right and imagine like</font><font color="#E5E5E5"> now he's</font>

1018
00:51:30,329 --> 00:51:34,710
looking<font color="#CCCCCC"> to his console his interface</font>

1019
00:51:32,790 --> 00:51:35,550
from the<font color="#E5E5E5"> cloud provider he's installing</font>

1020
00:51:34,710 --> 00:51:38,369
his machine

1021
00:51:35,550 --> 00:51:47,010
she has disk encryption<font color="#E5E5E5"> he puts some</font>

1022
00:51:38,369 --> 00:51:48,900
some password<font color="#E5E5E5"> the machine boots</font>

1023
00:51:47,010 --> 00:51:51,780
he's using his machine you see<font color="#E5E5E5"> it's very</font>

1024
00:51:48,900 --> 00:51:54,210
<font color="#E5E5E5">very fast because the</font><font color="#CCCCCC"> interfaces</font><font color="#E5E5E5"> to the</font>

1025
00:51:51,780 --> 00:51:56,369
<font color="#CCCCCC">hypervisor so it's</font><font color="#E5E5E5"> really fast like</font>

1026
00:51:54,210 --> 00:51:58,710
unless you<font color="#E5E5E5"> really tell</font><font color="#CCCCCC"> that you want to</font>

1027
00:51:56,369 --> 00:52:00,780
do<font color="#E5E5E5"> something the user don't have any</font>

1028
00:51:58,710 --> 00:52:03,180
perception of what is<font color="#E5E5E5"> going on so</font>

1029
00:52:00,780 --> 00:52:05,849
basically<font color="#CCCCCC"> if I hit</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> ctrl C</font><font color="#E5E5E5"> and I come</font>

1030
00:52:03,180 --> 00:52:07,649
back to the to<font color="#CCCCCC"> their target</font><font color="#E5E5E5"> machine you</font>

1031
00:52:05,849 --> 00:52:10,290
can see it paused<font color="#CCCCCC"> it</font><font color="#E5E5E5"> seemed like the</font>

1032
00:52:07,650 --> 00:52:12,540
<font color="#E5E5E5">machine is waiting so that the bug is</font>

1033
00:52:10,290 --> 00:52:20,009
<font color="#CCCCCC">really controlling it</font><font color="#E5E5E5"> so here we can set</font>

1034
00:52:12,540 --> 00:52:21,630
breakpoints<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example I put a</font>

1035
00:52:20,010 --> 00:52:23,400
breakpoint in a place in<font color="#CCCCCC"> memory and</font>

1036
00:52:21,630 --> 00:52:25,710
actually that's that's one of the ways

1037
00:52:23,400 --> 00:52:27,390
<font color="#CCCCCC">for you to know where is</font><font color="#E5E5E5"> the program</font>

1038
00:52:25,710 --> 00:52:30,030
you're trying to target<font color="#E5E5E5"> you can put a</font>

1039
00:52:27,390 --> 00:52:32,879
random<font color="#E5E5E5"> like breakpoints around and see</font>

1040
00:52:30,030 --> 00:52:34,770
when it hits so there is no way you

1041
00:52:32,880 --> 00:52:37,500
don't<font color="#CCCCCC"> win you</font><font color="#E5E5E5"> fight the program in</font>

1042
00:52:34,770 --> 00:52:40,140
memory<font color="#CCCCCC"> right so I</font><font color="#E5E5E5"> will let the program</font>

1043
00:52:37,500 --> 00:52:43,140
continue you will<font color="#CCCCCC"> see that when I type</font>

1044
00:52:40,140 --> 00:52:46,348
<font color="#CCCCCC">root</font><font color="#E5E5E5"> the Machine pauses again because it</font>

1045
00:52:43,140 --> 00:52:48,440
hit my breakpoint<font color="#E5E5E5"> now we basically do</font>

1046
00:52:46,349 --> 00:52:48,440
the

1047
00:52:50,809 --> 00:52:59,809
do you<font color="#E5E5E5"> remember the number let me</font><font color="#CCCCCC"> just</font>

1048
00:52:56,069 --> 00:52:59,808
confirm just to not crash it

1049
00:53:07,839 --> 00:53:14,599
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> yep</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> just do the corruption</font><font color="#E5E5E5"> of</font>

1050
00:53:12,309 --> 00:53:18,650
<font color="#E5E5E5">October 2006 we've got</font><font color="#CCCCCC"> Yuma the</font>

1051
00:53:14,599 --> 00:53:23,290
execution and<font color="#E5E5E5"> whoops it failed</font>

1052
00:53:18,650 --> 00:53:23,290
let me<font color="#E5E5E5"> go again hit the breakpoint again</font>

1053
00:53:33,609 --> 00:53:39,828
the debug<font color="#E5E5E5"> stop</font><font color="#CCCCCC"> quest</font>

1054
00:53:37,150 --> 00:53:44,450
well<font color="#CCCCCC"> I</font><font color="#E5E5E5"> quest sorry</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't need to</font>

1055
00:53:39,829 --> 00:53:48,049
restart<font color="#E5E5E5"> everything okay anyway while</font><font color="#CCCCCC"> we</font>

1056
00:53:44,450 --> 00:53:51,439
hope<font color="#E5E5E5"> to see ourselves as rude just a</font>

1057
00:53:48,049 --> 00:53:55,640
just<font color="#E5E5E5"> watch</font><font color="#CCCCCC"> hear that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> exactly the</font>

1058
00:53:51,440 --> 00:53:58,880
situation<font color="#CCCCCC"> of an employee</font><font color="#E5E5E5"> or somebody who</font>

1059
00:53:55,640 --> 00:54:01,250
<font color="#E5E5E5">is working at the at the facility of</font><font color="#CCCCCC"> the</font>

1060
00:53:58,880 --> 00:54:03,530
cloud provider<font color="#CCCCCC"> the assumption is that</font><font color="#E5E5E5"> he</font>

1061
00:54:01,250 --> 00:54:05,480
cannot change the behavior of<font color="#E5E5E5"> the</font>

1062
00:54:03,530 --> 00:54:08,869
hypervisor<font color="#E5E5E5"> because the hypervisor is</font>

1063
00:54:05,480 --> 00:54:10,460
<font color="#E5E5E5">measured so so so it is trusted but he</font>

1064
00:54:08,869 --> 00:54:14,930
can<font color="#E5E5E5"> certainly do all these things and</font>

1065
00:54:10,460 --> 00:54:17,660
the user doesn't doesn't<font color="#E5E5E5"> see</font><font color="#CCCCCC"> or is not</font>

1066
00:54:14,930 --> 00:54:20,270
aware that<font color="#E5E5E5"> this thing is happening</font><font color="#CCCCCC"> all</font>

1067
00:54:17,660 --> 00:54:25,009
he would see<font color="#E5E5E5"> that is that</font><font color="#CCCCCC"> sometimes this</font>

1068
00:54:20,270 --> 00:54:28,339
VM is going to put again so<font color="#E5E5E5"> ok or see</font>

1069
00:54:25,010 --> 00:54:30,319
some<font color="#E5E5E5"> delays but this is so nor consider</font>

1070
00:54:28,339 --> 00:54:32,359
to be<font color="#E5E5E5"> normal</font><font color="#CCCCCC"> execution alright you can</font>

1071
00:54:30,319 --> 00:54:34,940
expect things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> this and</font><font color="#E5E5E5"> even you can</font>

1072
00:54:32,359 --> 00:54:37,250
<font color="#E5E5E5">expect things</font><font color="#CCCCCC"> like these to be routinely</font>

1073
00:54:34,940 --> 00:54:39,619
routinely maintained as part of the

1074
00:54:37,250 --> 00:54:43,609
<font color="#CCCCCC">maintenance of the system so actually</font>

1075
00:54:39,619 --> 00:54:46,849
this attacker can also target<font color="#CCCCCC"> the timing</font>

1076
00:54:43,609 --> 00:54:51,680
of these attacks<font color="#CCCCCC"> - -</font><font color="#E5E5E5"> to those times</font>

1077
00:54:46,849 --> 00:54:55,730
where a<font color="#E5E5E5"> boot is is expected so this type</font>

1078
00:54:51,680 --> 00:54:58,790
of<font color="#CCCCCC"> attack has can</font><font color="#E5E5E5"> be done</font><font color="#CCCCCC"> anytime</font><font color="#E5E5E5"> it is</font>

1079
00:54:55,730 --> 00:55:01,640
invisible to<font color="#CCCCCC"> the to the victim and also</font>

1080
00:54:58,790 --> 00:55:05,660
<font color="#E5E5E5">can be repeated as we can see can</font><font color="#CCCCCC"> be</font>

1081
00:55:01,640 --> 00:55:07,308
repeated many<font color="#E5E5E5"> times until it succeeds by</font>

1082
00:55:05,660 --> 00:55:08,480
the way it doesn't<font color="#E5E5E5"> always succeed right</font>

1083
00:55:07,309 --> 00:55:10,309
there as we said we have<font color="#CCCCCC"> some</font>

1084
00:55:08,480 --> 00:55:12,650
probability<font color="#E5E5E5"> to succeed but after some</font>

1085
00:55:10,309 --> 00:55:18,650
times with some<font color="#CCCCCC"> hopefully</font><font color="#E5E5E5"> wishful</font>

1086
00:55:12,650 --> 00:55:24,970
thinking it it should it should work and

1087
00:55:18,650 --> 00:55:24,970
<font color="#E5E5E5">we will see ourselves as root</font><font color="#CCCCCC"> ok</font>

1088
00:55:25,990 --> 00:55:31,520
yeah<font color="#E5E5E5"> okay so it hit the breakpoint again</font>

1089
00:55:28,790 --> 00:55:33,170
okay just like to show that<font color="#CCCCCC"> we every</font>

1090
00:55:31,520 --> 00:55:35,000
<font color="#CCCCCC">time we try</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> login we will hit that</font>

1091
00:55:33,170 --> 00:55:38,570
same breakpoint<font color="#E5E5E5"> so we just let it</font>

1092
00:55:35,000 --> 00:55:39,710
continue their logging<font color="#E5E5E5"> fails right</font>

1093
00:55:38,570 --> 00:55:41,630
without<font color="#E5E5E5"> corruption</font>

1094
00:55:39,710 --> 00:55:43,130
you don't<font color="#E5E5E5"> login so I would just make</font>

1095
00:55:41,630 --> 00:55:45,500
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that I will try to type a little</font>

1096
00:55:43,130 --> 00:55:48,020
<font color="#E5E5E5">bit faster</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> because the loading</font>

1097
00:55:45,500 --> 00:55:49,400
<font color="#CCCCCC">process itself has a timeout</font><font color="#E5E5E5"> if it times</font>

1098
00:55:48,020 --> 00:55:51,830
out it will<font color="#E5E5E5"> get a different memory</font>

1099
00:55:49,400 --> 00:55:53,780
location so obviously if I corrupt<font color="#CCCCCC"> I</font>

1100
00:55:51,830 --> 00:55:58,330
will do something<font color="#E5E5E5"> wrong so that's why I</font>

1101
00:55:53,780 --> 00:55:58,330
probably failed<font color="#E5E5E5"> but let's try again so</font>

1102
00:56:01,150 --> 00:56:05,320
yeah<font color="#E5E5E5"> this tab is quite</font>

1103
00:56:36,190 --> 00:56:39,280
[Music]

1104
00:56:45,040 --> 00:56:49,120
yeah it's failed again<font color="#CCCCCC"> sorry</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> what</font>

1105
00:56:47,620 --> 00:56:52,029
you give me I mean if let me make sure

1106
00:56:49,120 --> 00:56:54,009
<font color="#E5E5E5">it works and I come back okay</font><font color="#CCCCCC"> well try</font>

1107
00:56:52,030 --> 00:56:56,770
this and then<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> good day</font><font color="#CCCCCC"> okay so I</font>

1108
00:56:54,010 --> 00:57:00,760
<font color="#E5E5E5">will just meanwhile say</font><font color="#CCCCCC"> their closing</font>

1109
00:56:56,770 --> 00:57:05,670
<font color="#E5E5E5">words and closing words</font><font color="#CCCCCC"> they on this</font><font color="#E5E5E5"> I</font>

1110
00:57:00,760 --> 00:57:10,350
hope that this talk convinced you that

1111
00:57:05,670 --> 00:57:13,030
just encryption of<font color="#CCCCCC"> the memory is</font><font color="#E5E5E5"> not</font>

1112
00:57:10,350 --> 00:57:15,120
dependable<font color="#CCCCCC"> at the very least to say not</font>

1113
00:57:13,030 --> 00:57:21,240
something which is<font color="#CCCCCC"> a dependable</font>

1114
00:57:15,120 --> 00:57:26,549
<font color="#E5E5E5">protection against against attackers and</font>

1115
00:57:21,240 --> 00:57:29,529
and it is<font color="#E5E5E5"> really alarming that some</font>

1116
00:57:26,550 --> 00:57:33,040
vendors of CPUs actually are proposing

1117
00:57:29,530 --> 00:57:35,920
this type<font color="#CCCCCC"> of encryption is the</font>

1118
00:57:33,040 --> 00:57:38,440
<font color="#E5E5E5">mitigation or privacy mitigation for the</font>

1119
00:57:35,920 --> 00:57:42,160
cloud environment<font color="#CCCCCC"> under the assumption</font>

1120
00:57:38,440 --> 00:57:45,130
that privacy<font color="#E5E5E5"> is</font><font color="#CCCCCC"> protected through a</font><font color="#E5E5E5"> pair</font>

1121
00:57:42,160 --> 00:57:48,940
<font color="#E5E5E5">of</font><font color="#CCCCCC"> VM key which is correct if we are</font>

1122
00:57:45,130 --> 00:57:52,990
<font color="#E5E5E5">looking only only at the privacy but but</font>

1123
00:57:48,940 --> 00:57:56,590
at the same time you cannot neglect<font color="#E5E5E5"> the</font>

1124
00:57:52,990 --> 00:58:01,419
threat by an active attacker<font color="#E5E5E5"> who can</font>

1125
00:57:56,590 --> 00:58:03,640
just do such corruptions it well I hope

1126
00:58:01,420 --> 00:58:09,010
we'll see<font color="#E5E5E5"> at a high</font><font color="#CCCCCC"> probability of</font>

1127
00:58:03,640 --> 00:58:12,370
<font color="#E5E5E5">success and the conclusion is that</font><font color="#CCCCCC"> if</font>

1128
00:58:09,010 --> 00:58:14,200
you really want<font color="#CCCCCC"> robust mitigation you</font>

1129
00:58:12,370 --> 00:58:19,270
need to do encryption<font color="#E5E5E5"> with</font>

1130
00:58:14,200 --> 00:58:24,189
authentication<font color="#E5E5E5"> and pay the cost of the</font>

1131
00:58:19,270 --> 00:58:26,230
performance and<font color="#E5E5E5"> the hardware cost or</font>

1132
00:58:24,190 --> 00:58:30,030
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> costs in in order</font><font color="#CCCCCC"> to</font>

1133
00:58:26,230 --> 00:58:34,420
<font color="#E5E5E5">really do to really provide robust</font>

1134
00:58:30,030 --> 00:58:37,690
robust protection plus I would<font color="#CCCCCC"> even say</font>

1135
00:58:34,420 --> 00:58:40,360
that<font color="#E5E5E5"> even just static authentication is</font>

1136
00:58:37,690 --> 00:58:42,670
probably<font color="#E5E5E5"> not enough we haven't targeted</font>

1137
00:58:40,360 --> 00:58:45,520
this<font color="#E5E5E5"> but once you have encryption and</font>

1138
00:58:42,670 --> 00:58:48,790
authentication<font color="#E5E5E5"> the next step would be to</font>

1139
00:58:45,520 --> 00:58:51,280
do a replay right and you can<font color="#CCCCCC"> imagine</font>

1140
00:58:48,790 --> 00:58:53,880
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> can possibly find a target and</font>

1141
00:58:51,280 --> 00:58:56,600
<font color="#CCCCCC">just do a replay attack with the same</font>

1142
00:58:53,880 --> 00:58:59,900
technology do a replay<font color="#E5E5E5"> so</font>

1143
00:58:56,600 --> 00:59:03,230
the<font color="#CCCCCC"> only thing that is really robust</font><font color="#E5E5E5"> is</font>

1144
00:58:59,900 --> 00:59:06,620
<font color="#E5E5E5">encryption and authentication and replay</font>

1145
00:59:03,230 --> 00:59:09,860
protection and today the<font color="#CCCCCC"> only technology</font>

1146
00:59:06,620 --> 00:59:12,799
<font color="#E5E5E5">that</font><font color="#CCCCCC"> actually has this in</font><font color="#E5E5E5"> is in a CPU as</font>

1147
00:59:09,860 --> 00:59:17,440
part<font color="#E5E5E5"> of the hardware is</font><font color="#CCCCCC"> the latest the</font>

1148
00:59:12,800 --> 00:59:20,450
latest processors by Intel that<font color="#E5E5E5"> are</font>

1149
00:59:17,440 --> 00:59:23,590
supporting the<font color="#CCCCCC"> SGX technology and part</font>

1150
00:59:20,450 --> 00:59:26,540
<font color="#E5E5E5">of the memory</font><font color="#CCCCCC"> is indeed encrypted</font>

1151
00:59:23,590 --> 00:59:28,430
authenticated and replay protected<font color="#E5E5E5"> with</font>

1152
00:59:26,540 --> 00:59:30,200
all the cost I<font color="#CCCCCC"> mean it is very complex</font>

1153
00:59:28,430 --> 00:59:33,020
<font color="#E5E5E5">to actually do this you need to</font><font color="#CCCCCC"> build</font>

1154
00:59:30,200 --> 00:59:34,759
<font color="#E5E5E5">some tree some hierarchy tree in the</font>

1155
00:59:33,020 --> 00:59:37,400
memory in<font color="#CCCCCC"> order to protect this because</font>

1156
00:59:34,760 --> 00:59:40,040
the amount<font color="#CCCCCC"> of of internal SRAM that you</font>

1157
00:59:37,400 --> 00:59:42,710
can invest to hold some state for the

1158
00:59:40,040 --> 00:59:44,450
replay protection is limited<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you need</font>

1159
00:59:42,710 --> 00:59:48,170
to use some techniques<font color="#E5E5E5"> some compression</font>

1160
00:59:44,450 --> 00:59:50,689
techniques and they cost<font color="#E5E5E5"> something like</font>

1161
00:59:48,170 --> 00:59:54,950
<font color="#E5E5E5">on average</font><font color="#CCCCCC"> something like I</font><font color="#E5E5E5"> would say</font>

1162
00:59:50,690 --> 00:59:57,170
<font color="#CCCCCC">10%</font><font color="#E5E5E5"> on those applications but this is</font>

1163
00:59:54,950 --> 01:00:02,330
what can<font color="#CCCCCC"> be considered as a real</font>

1164
00:59:57,170 --> 01:00:04,730
<font color="#E5E5E5">guarantee that you</font><font color="#CCCCCC"> have protection</font><font color="#E5E5E5"> on</font>

1165
01:00:02,330 --> 01:00:09,500
<font color="#CCCCCC">your information whether it is direct</font>

1166
01:00:04,730 --> 01:00:15,740
privacy or indirect<font color="#E5E5E5"> corruption attacks</font>

1167
01:00:09,500 --> 01:00:17,390
<font color="#E5E5E5">so</font><font color="#CCCCCC"> ok I think I</font><font color="#E5E5E5"> think yes we can just</font>

1168
01:00:15,740 --> 01:00:21,620
steal a few<font color="#E5E5E5"> minutes in</font><font color="#CCCCCC"> the next so we</font>

1169
01:00:17,390 --> 01:00:23,480
<font color="#E5E5E5">owe you this maybe maybe maybe my</font>

1170
01:00:21,620 --> 01:00:31,370
birthday doesn't<font color="#E5E5E5"> work and we need to do</font>

1171
01:00:23,480 --> 01:00:34,700
<font color="#CCCCCC">PI thinks me</font><font color="#E5E5E5"> ok ok so we will show it</font>

1172
01:00:31,370 --> 01:00:39,319
<font color="#CCCCCC">later right and</font><font color="#E5E5E5"> ok so</font><font color="#CCCCCC"> I thank you very</font>

1173
01:00:34,700 --> 01:00:41,240
<font color="#E5E5E5">much for attending and I hope that they</font>

1174
01:00:39,320 --> 01:00:48,710
turn entertain to you<font color="#E5E5E5"> ah questions yes</font>

1175
01:00:41,240 --> 01:00:51,470
<font color="#E5E5E5">ok please go how is it helping</font><font color="#CCCCCC"> ok so</font>

1176
01:00:48,710 --> 01:00:52,970
let's say let's say<font color="#E5E5E5"> that we okay the</font>

1177
01:00:51,470 --> 01:00:55,129
question<font color="#CCCCCC"> was</font><font color="#E5E5E5"> how authentication would</font>

1178
01:00:52,970 --> 01:00:57,730
help<font color="#E5E5E5"> this situation</font><font color="#CCCCCC"> so we what we were</font>

1179
01:00:55,130 --> 01:01:00,800
<font color="#E5E5E5">doing wants to take ciphertext and</font>

1180
01:00:57,730 --> 01:01:03,650
modify it and then what infiltrates the

1181
01:01:00,800 --> 01:01:05,960
system is some garbage because something

1182
01:01:03,650 --> 01:01:08,570
is being decrypted<font color="#E5E5E5"> the wrong thing is</font>

1183
01:01:05,960 --> 01:01:09,430
being decrypted<font color="#CCCCCC"> with the wrong wrong key</font>

1184
01:01:08,570 --> 01:01:12,599
but

1185
01:01:09,430 --> 01:01:15,790
if you have also authentication then a

1186
01:01:12,599 --> 01:01:18,550
then if you change<font color="#CCCCCC"> something in</font><font color="#E5E5E5"> that</font>

1187
01:01:15,790 --> 01:01:22,029
theorem<font color="#E5E5E5"> while it is being read back it</font>

1188
01:01:18,550 --> 01:01:23,770
is<font color="#CCCCCC"> not going to the authentication tag</font>

1189
01:01:22,030 --> 01:01:25,599
is not going to check and then it will

1190
01:01:23,770 --> 01:01:28,119
<font color="#E5E5E5">just okay then it depends on what you</font>

1191
01:01:25,599 --> 01:01:30,339
decide<font color="#E5E5E5"> to do you can just</font><font color="#CCCCCC"> kill the VM</font><font color="#E5E5E5"> or</font>

1192
01:01:28,119 --> 01:01:34,750
put the whole system<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> in the</font>

1193
01:01:30,339 --> 01:01:37,540
in the<font color="#CCCCCC"> SGX</font><font color="#E5E5E5"> in the SSG</font><font color="#CCCCCC"> X</font><font color="#E5E5E5"> machine if if</font>

1194
01:01:34,750 --> 01:01:39,910
some corruption<font color="#E5E5E5"> is honest or if there is</font>

1195
01:01:37,540 --> 01:01:42,130
<font color="#CCCCCC">a Mak mismatch on</font><font color="#E5E5E5"> the authentication tag</font>

1196
01:01:39,910 --> 01:01:44,259
it is just<font color="#E5E5E5"> going to boot boot the</font><font color="#CCCCCC"> system</font>

1197
01:01:42,130 --> 01:01:48,339
so you you will<font color="#E5E5E5"> never be able</font><font color="#CCCCCC"> to have</font>

1198
01:01:44,260 --> 01:01:50,440
your<font color="#E5E5E5"> corruption or wrong</font><font color="#CCCCCC"> information go</font>

1199
01:01:48,339 --> 01:01:52,779
into the into the<font color="#CCCCCC"> system</font><font color="#E5E5E5"> and this is</font>

1200
01:01:50,440 --> 01:01:55,240
<font color="#CCCCCC">what</font><font color="#E5E5E5"> makes it even</font><font color="#CCCCCC"> more expensive</font><font color="#E5E5E5"> on top</font>

1201
01:01:52,780 --> 01:01:56,589
of the<font color="#E5E5E5"> hardware and</font><font color="#CCCCCC"> the in</font><font color="#E5E5E5"> the space in</font>

1202
01:01:55,240 --> 01:01:58,209
the<font color="#E5E5E5"> DRAM that you need</font>

1203
01:01:56,589 --> 01:02:02,049
you also need<font color="#CCCCCC"> some way to communicate</font>

1204
01:01:58,210 --> 01:02:04,420
<font color="#CCCCCC">that</font><font color="#E5E5E5"> a bit that says something went</font>

1205
01:02:02,050 --> 01:02:07,359
wrong with<font color="#E5E5E5"> the authentication and make</font>

1206
01:02:04,420 --> 01:02:10,510
some some policy apply some policy that

1207
01:02:07,359 --> 01:02:26,319
<font color="#CCCCCC">would stop the</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> last</font>

1208
01:02:10,510 --> 01:02:28,630
question<font color="#CCCCCC"> okay to last two questions in</font>

1209
01:02:26,319 --> 01:02:31,359
<font color="#E5E5E5">the encrypted memory situation if you</font>

1210
01:02:28,630 --> 01:02:33,760
had<font color="#CCCCCC"> SLR and k SLR how would that prevent</font>

1211
01:02:31,359 --> 01:02:35,828
the breakpoint from being set and known

1212
01:02:33,760 --> 01:02:41,440
<font color="#CCCCCC">address to do the time to check under</font>

1213
01:02:35,829 --> 01:02:43,690
<font color="#CCCCCC">use</font><font color="#E5E5E5"> okay more difficult but it could</font>

1214
01:02:41,440 --> 01:02:46,119
also be circumvented you can<font color="#E5E5E5"> imagine</font>

1215
01:02:43,690 --> 01:02:49,960
<font color="#E5E5E5">that this</font><font color="#CCCCCC"> is not a robust there cannot</font>

1216
01:02:46,119 --> 01:02:53,859
be a protection it may lower the success

1217
01:02:49,960 --> 01:02:55,990
probability or make the effort more more

1218
01:02:53,859 --> 01:02:58,089
difficult<font color="#CCCCCC"> but you cannot say that this</font>

1219
01:02:55,990 --> 01:03:02,729
by itself is<font color="#CCCCCC"> going to give you robust</font>

1220
01:02:58,089 --> 01:03:02,730
protection yeah secondly

1221
01:03:05,270 --> 01:03:12,750
secondly I'll just speak<font color="#E5E5E5"> up isn't this</font>

1222
01:03:09,870 --> 01:03:15,390
more of a<font color="#E5E5E5"> sim ban</font><font color="#CCCCCC"> semantics</font><font color="#E5E5E5"> ambiguity of</font>

1223
01:03:12,750 --> 01:03:17,820
the<font color="#E5E5E5"> if variable construct that basically</font>

1224
01:03:15,390 --> 01:03:21,150
says<font color="#E5E5E5"> only if it's</font><font color="#CCCCCC"> zero does it do one</font>

1225
01:03:17,820 --> 01:03:22,500
thing versus any set<font color="#CCCCCC"> of bits and that</font>

1226
01:03:21,150 --> 01:03:26,430
that leads to memory corruption

1227
01:03:22,500 --> 01:03:31,230
vulnerabilities<font color="#E5E5E5"> of any type yes the</font>

1228
01:03:26,430 --> 01:03:33,450
<font color="#E5E5E5">answer is yes</font><font color="#CCCCCC"> so the the problem starts</font>

1229
01:03:31,230 --> 01:03:36,270
with the fact<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> login</font><font color="#E5E5E5"> program</font>

1230
01:03:33,450 --> 01:03:38,220
works in<font color="#E5E5E5"> this way but first of all this</font>

1231
01:03:36,270 --> 01:03:39,990
is reality<font color="#E5E5E5"> you can just go</font><font color="#CCCCCC"> to the Linux</font>

1232
01:03:38,220 --> 01:03:42,810
kernel<font color="#CCCCCC"> and see that it</font><font color="#E5E5E5"> is working</font><font color="#CCCCCC"> this</font>

1233
01:03:39,990 --> 01:03:45,359
way<font color="#E5E5E5"> it would be quite trickier to act</font>

1234
01:03:42,810 --> 01:03:48,870
right the login process that<font color="#CCCCCC"> doesn't</font>

1235
01:03:45,360 --> 01:03:51,930
<font color="#CCCCCC">depend on</font><font color="#E5E5E5"> a single big</font><font color="#CCCCCC"> single decision</font>

1236
01:03:48,870 --> 01:03:55,080
<font color="#E5E5E5">but but if the code itself was not read</font>

1237
01:03:51,930 --> 01:03:57,060
with this type<font color="#CCCCCC"> of attacks</font><font color="#E5E5E5"> in mind right</font>

1238
01:03:55,080 --> 01:03:58,799
because<font color="#CCCCCC"> if you don't have memory prior</font>

1239
01:03:57,060 --> 01:04:00,509
<font color="#E5E5E5">to having memory encryption you can just</font>

1240
01:03:58,800 --> 01:04:02,970
flip anything<font color="#E5E5E5"> to anything</font><font color="#CCCCCC"> can just</font>

1241
01:04:00,510 --> 01:04:05,760
completely bypass the whole<font color="#E5E5E5"> locking</font>

1242
01:04:02,970 --> 01:04:07,620
process<font color="#E5E5E5"> so so this same type of attack</font>

1243
01:04:05,760 --> 01:04:10,680
was not in mind of<font color="#E5E5E5"> whoever wrote this</font>

1244
01:04:07,620 --> 01:04:13,470
say<font color="#E5E5E5"> this piece of code so these things</font>

1245
01:04:10,680 --> 01:04:16,680
become relevant when you have<font color="#E5E5E5"> encryption</font>

1246
01:04:13,470 --> 01:04:18,839
on the<font color="#E5E5E5"> memory and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> oh yes you can</font>

1247
01:04:16,680 --> 01:04:21,600
<font color="#CCCCCC">just go and try</font><font color="#E5E5E5"> to rewrite all</font><font color="#CCCCCC"> the code</font>

1248
01:04:18,840 --> 01:04:23,580
by of the locking<font color="#CCCCCC"> process but what about</font>

1249
01:04:21,600 --> 01:04:25,290
the rest<font color="#E5E5E5"> of the things that are</font>

1250
01:04:23,580 --> 01:04:28,110
happening in<font color="#E5E5E5"> the kernel you cannot just</font>

1251
01:04:25,290 --> 01:04:30,180
you can you can<font color="#E5E5E5"> try to write all of the</font>

1252
01:04:28,110 --> 01:04:33,660
kernel code or or anything<font color="#E5E5E5"> in a way that</font>

1253
01:04:30,180 --> 01:04:35,910
would be better in you to such<font color="#E5E5E5"> a</font>

1254
01:04:33,660 --> 01:04:38,580
<font color="#CCCCCC">corruption yes</font><font color="#E5E5E5"> EFI is written with</font>

1255
01:04:35,910 --> 01:04:40,350
macros<font color="#CCCCCC"> so there's basically unique macro</font>

1256
01:04:38,580 --> 01:04:42,569
for success or failure of different

1257
01:04:40,350 --> 01:04:44,610
types you you can do this by<font color="#CCCCCC"> okay the</font>

1258
01:04:42,570 --> 01:04:46,860
one thing<font color="#E5E5E5"> you cannot argue this is this</font>

1259
01:04:44,610 --> 01:04:48,810
<font color="#CCCCCC">Linux</font><font color="#E5E5E5"> was working today maybe would be</font>

1260
01:04:46,860 --> 01:05:02,030
<font color="#CCCCCC">change</font><font color="#E5E5E5"> due to these things in the</font><font color="#CCCCCC"> future</font>

1261
01:04:48,810 --> 01:05:02,029
<font color="#E5E5E5">so thank you very</font><font color="#CCCCCC"> much</font>

