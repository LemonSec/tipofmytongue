1
00:00:00,030 --> 00:00:06,420
hello everyone<font color="#CCCCCC"> thank you for</font><font color="#E5E5E5"> attending</font>

2
00:00:02,669 --> 00:00:09,630
our talks<font color="#CCCCCC"> so today we're going to talk</font>

3
00:00:06,420 --> 00:00:11,670
about<font color="#E5E5E5"> secure HD DS but before we go</font><font color="#CCCCCC"> on</font>

4
00:00:09,630 --> 00:00:14,849
unto<font color="#E5E5E5"> the subject where you're going to</font>

5
00:00:11,670 --> 00:00:17,550
tell you<font color="#E5E5E5"> just a few words about us so we</font>

6
00:00:14,849 --> 00:00:20,910
work for a<font color="#CCCCCC"> breeze</font><font color="#E5E5E5"> group innovation which</font>

7
00:00:17,550 --> 00:00:23,880
<font color="#CCCCCC">is the R&D</font><font color="#E5E5E5"> department for Airbus group</font>

8
00:00:20,910 --> 00:00:28,890
I am Raphael<font color="#E5E5E5"> I'm mostly a reverser and I</font>

9
00:00:23,880 --> 00:00:32,308
like to break low-level stuff and<font color="#E5E5E5"> hi I'm</font>

10
00:00:28,890 --> 00:00:34,880
Julia<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> reverser - and mainly</font>

11
00:00:32,308 --> 00:00:38,160
interested in<font color="#E5E5E5"> a vulnerability research</font>

12
00:00:34,880 --> 00:00:42,149
<font color="#E5E5E5">and I mostly do security</font><font color="#CCCCCC"> assessments on</font>

13
00:00:38,160 --> 00:00:44,760
various products so today we are<font color="#E5E5E5"> going</font>

14
00:00:42,149 --> 00:00:46,920
<font color="#E5E5E5">to talk about those two drives</font><font color="#CCCCCC"> we add</font>

15
00:00:44,760 --> 00:00:49,280
them<font color="#CCCCCC"> here</font><font color="#E5E5E5"> so there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> just USB</font>

16
00:00:46,920 --> 00:00:51,989
enclosures that<font color="#CCCCCC"> you can buy</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> Zaman</font>

17
00:00:49,280 --> 00:00:57,149
<font color="#E5E5E5">they come without a hard drives</font><font color="#CCCCCC"> as you</font>

18
00:00:51,989 --> 00:00:59,879
can see so<font color="#CCCCCC"> you just put</font><font color="#E5E5E5"> your 22.5 HDD</font>

19
00:00:57,149 --> 00:01:03,600
inside and then you can have a way<font color="#E5E5E5"> to</font>

20
00:00:59,879 --> 00:01:07,429
mount<font color="#E5E5E5"> ISO images and also to encrypt and</font>

21
00:01:03,600 --> 00:01:09,840
protect your data<font color="#E5E5E5"> using a pin code so</font>

22
00:01:07,430 --> 00:01:11,820
before we go now with<font color="#CCCCCC"> our research</font><font color="#E5E5E5"> I</font>

23
00:01:09,840 --> 00:01:14,040
<font color="#E5E5E5">think it's worth mentioning</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> there</font>

24
00:01:11,820 --> 00:01:17,339
were<font color="#E5E5E5"> previous research the first one I</font>

25
00:01:14,040 --> 00:01:19,680
know<font color="#E5E5E5"> of about</font><font color="#CCCCCC"> HD DS</font><font color="#E5E5E5"> that use hardware</font>

26
00:01:17,340 --> 00:01:21,150
keyboards<font color="#E5E5E5"> let's make it</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> different</font>

27
00:01:19,680 --> 00:01:23,009
from<font color="#E5E5E5"> the others</font><font color="#CCCCCC"> that you can usually use</font>

28
00:01:21,150 --> 00:01:25,140
those have a keyboard where<font color="#CCCCCC"> you're enter</font>

29
00:01:23,009 --> 00:01:28,049
<font color="#E5E5E5">your PIN so there have</font><font color="#CCCCCC"> been several</font>

30
00:01:25,140 --> 00:01:30,180
articles<font color="#E5E5E5"> talking about HD DS of that</font>

31
00:01:28,049 --> 00:01:33,329
kind the<font color="#E5E5E5"> first one is from sprites</font><font color="#CCCCCC"> mods</font>

32
00:01:30,180 --> 00:01:35,850
from 2010 it's really good<font color="#CCCCCC"> even managed</font>

33
00:01:33,329 --> 00:01:38,880
to<font color="#CCCCCC"> do a hint sorry</font><font color="#E5E5E5"> a cue ball emulator</font>

34
00:01:35,850 --> 00:01:40,619
<font color="#E5E5E5">and combine</font><font color="#CCCCCC"> it with</font><font color="#E5E5E5"> the timing attack to</font>

35
00:01:38,880 --> 00:01:43,320
brute force<font color="#CCCCCC"> the pin so</font><font color="#E5E5E5"> it was very</font>

36
00:01:40,619 --> 00:01:46,560
<font color="#CCCCCC">interesting and this year</font><font color="#E5E5E5"> at blackhat</font>

37
00:01:43,320 --> 00:01:48,089
USA<font color="#E5E5E5"> Colleen Laughlin did also brute</font>

38
00:01:46,560 --> 00:01:49,950
<font color="#E5E5E5">force her for another metal and</font>

39
00:01:48,090 --> 00:01:52,350
side-channel<font color="#E5E5E5"> attacks which are</font><font color="#CCCCCC"> really</font>

40
00:01:49,950 --> 00:01:54,890
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> and with one of our</font>

41
00:01:52,350 --> 00:01:57,839
colleagues we did some work last year<font color="#E5E5E5"> on</font>

42
00:01:54,890 --> 00:01:59,909
<font color="#E5E5E5">Hardware reversing</font><font color="#CCCCCC"> sights</font><font color="#E5E5E5"> so today</font><font color="#CCCCCC"> we're</font>

43
00:01:57,840 --> 00:02:02,100
mostly<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about software</font><font color="#E5E5E5"> but</font>

44
00:01:59,909 --> 00:02:04,590
<font color="#E5E5E5">we also did some</font><font color="#CCCCCC"> research on hardware</font>

45
00:02:02,100 --> 00:02:06,298
<font color="#E5E5E5">and you can find it here another really</font>

46
00:02:04,590 --> 00:02:09,420
important paper<font color="#CCCCCC"> that was presented</font><font color="#E5E5E5"> last</font>

47
00:02:06,299 --> 00:02:09,989
<font color="#E5E5E5">year at</font><font color="#CCCCCC"> Hardware dot IO is got hardware</font>

48
00:02:09,419 --> 00:02:12,599
crypto

49
00:02:09,989 --> 00:02:14,010
which is about hard drives<font color="#E5E5E5"> using</font>

50
00:02:12,599 --> 00:02:16,379
security<font color="#E5E5E5"> but with</font>

51
00:02:14,010 --> 00:02:18,390
any hardware<font color="#E5E5E5"> pimping so using software</font>

52
00:02:16,379 --> 00:02:21,359
<font color="#E5E5E5">lockers mostly Western Digital drives</font>

53
00:02:18,390 --> 00:02:24,000
and they looked at like 15 models and

54
00:02:21,360 --> 00:02:30,870
they broke the<font color="#CCCCCC"> mall</font><font color="#E5E5E5"> with shitty crypto</font>

55
00:02:24,000 --> 00:02:33,209
and interesting<font color="#E5E5E5"> backdoors</font><font color="#CCCCCC"> okay so let's</font>

56
00:02:30,870 --> 00:02:35,849
first talk about<font color="#E5E5E5"> the overall like it</font>

57
00:02:33,209 --> 00:02:38,730
<font color="#E5E5E5">architecture</font><font color="#CCCCCC"> off of both</font><font color="#E5E5E5"> of those drives</font>

58
00:02:35,849 --> 00:02:42,420
<font color="#E5E5E5">so as I felt said there are there's an</font>

59
00:02:38,730 --> 00:02:45,980
<font color="#E5E5E5">integrated cable and mainly built around</font>

60
00:02:42,420 --> 00:02:48,988
this USB<font color="#CCCCCC"> to SATA bridge system on chip</font>

61
00:02:45,980 --> 00:02:52,078
which has<font color="#CCCCCC"> a nickel</font><font color="#E5E5E5"> integrated CPU which</font>

62
00:02:48,989 --> 00:02:54,989
runs a VMware<font color="#CCCCCC"> Stodden an SPI flash and</font>

63
00:02:52,079 --> 00:02:57,390
it has an integrated<font color="#CCCCCC"> AAS engine which</font>

64
00:02:54,989 --> 00:02:59,849
means that<font color="#E5E5E5"> most of the crypto the crypto</font>

65
00:02:57,390 --> 00:03:02,458
is done in<font color="#E5E5E5"> hardware so you</font><font color="#CCCCCC"> you will not</font>

66
00:02:59,849 --> 00:03:05,220
find any<font color="#E5E5E5"> AES implementation in the film</font>

67
00:03:02,459 --> 00:03:07,799
where they also have they also have a

68
00:03:05,220 --> 00:03:10,950
<font color="#E5E5E5">USB core and SATA code to receive the</font>

69
00:03:07,799 --> 00:03:14,489
USB from<font color="#E5E5E5"> the computer and</font><font color="#CCCCCC"> write sectors</font>

70
00:03:10,950 --> 00:03:18,060
on your hard<font color="#E5E5E5"> drive</font><font color="#CCCCCC"> so let's see what's</font>

71
00:03:14,489 --> 00:03:20,160
happened when when you unlock<font color="#E5E5E5"> your your</font>

72
00:03:18,060 --> 00:03:22,019
<font color="#E5E5E5">your drive you first enter your</font><font color="#CCCCCC"> pin on</font>

73
00:03:20,160 --> 00:03:24,359
the keyboard which<font color="#CCCCCC"> is transmitted to the</font>

74
00:03:22,019 --> 00:03:28,169
to the film we're running on the<font color="#E5E5E5"> CPU</font>

75
00:03:24,359 --> 00:03:32,310
which verifies the pin to see if it's

76
00:03:28,169 --> 00:03:37,500
right<font color="#CCCCCC"> or</font><font color="#E5E5E5"> wrong if the pin is is</font><font color="#CCCCCC"> okay it</font>

77
00:03:32,310 --> 00:03:40,500
it initializes the<font color="#E5E5E5"> engine by setting the</font>

78
00:03:37,500 --> 00:03:44,069
encryption mode and sending the the disk

79
00:03:40,500 --> 00:03:46,680
encryption keys which are which are

80
00:03:44,069 --> 00:03:48,958
<font color="#CCCCCC">required</font><font color="#E5E5E5"> to decrypt your data and from</font>

81
00:03:46,680 --> 00:03:51,120
now on the AES engine is initialized so

82
00:03:48,959 --> 00:03:58,139
the encryption decryption<font color="#E5E5E5"> and of the</font>

83
00:03:51,120 --> 00:04:01,260
data is done on the fly and very fast so

84
00:03:58,139 --> 00:04:04,889
that<font color="#E5E5E5"> as I</font><font color="#CCCCCC"> said</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> the those droids are</font>

85
00:04:01,260 --> 00:04:07,950
using other implemented crypto<font color="#CCCCCC"> for</font>

86
00:04:04,889 --> 00:04:09,780
performance they support a USB<font color="#E5E5E5"> aus USB</font>

87
00:04:07,950 --> 00:04:14,698
<font color="#CCCCCC">three-year transfer rates</font><font color="#E5E5E5"> which is quite</font>

88
00:04:09,780 --> 00:04:17,010
<font color="#E5E5E5">quite high</font><font color="#CCCCCC"> they're using AES 256 bits in</font>

89
00:04:14,699 --> 00:04:18,810
the XTS mode<font color="#CCCCCC"> so for those of</font><font color="#E5E5E5"> you are not</font>

90
00:04:17,010 --> 00:04:22,079
<font color="#E5E5E5">very familiar the thing you have to</font>

91
00:04:18,810 --> 00:04:24,210
<font color="#CCCCCC">remember that the the XTS mode requires</font>

92
00:04:22,079 --> 00:04:25,710
<font color="#E5E5E5">two encryption keys and those two</font>

93
00:04:24,210 --> 00:04:28,370
encryption keys are sufficient to

94
00:04:25,710 --> 00:04:31,349
<font color="#E5E5E5">encrypt and decrypt the whole dry</font>

95
00:04:28,370 --> 00:04:33,360
there are those<font color="#E5E5E5"> words are</font><font color="#CCCCCC"> user friendly</font>

96
00:04:31,349 --> 00:04:35,250
<font color="#CCCCCC">they're able to tell if the pin is right</font>

97
00:04:33,360 --> 00:04:38,909
or wrong<font color="#E5E5E5"> and what's interesting in</font><font color="#CCCCCC"> that</font>

98
00:04:35,250 --> 00:04:40,620
the<font color="#CCCCCC"> olavo</font><font color="#E5E5E5"> in change without and we</font>

99
00:04:38,909 --> 00:04:43,319
encrypting the full drive<font color="#E5E5E5"> which means</font>

100
00:04:40,620 --> 00:04:46,409
that the the<font color="#CCCCCC"> encrypt</font><font color="#E5E5E5"> the disk encryption</font>

101
00:04:43,319 --> 00:04:49,590
keys has to be have to<font color="#E5E5E5"> be stored</font>

102
00:04:46,409 --> 00:04:52,590
<font color="#CCCCCC">somewhere</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> they have to be they have</font>

103
00:04:49,590 --> 00:04:55,198
to be stored<font color="#CCCCCC"> sexually</font><font color="#E5E5E5"> we'll see we'll</font>

104
00:04:52,590 --> 00:04:58,349
see more about this later<font color="#CCCCCC"> they they have</font>

105
00:04:55,199 --> 00:05:00,330
to<font color="#CCCCCC"> be a strong keys with a good</font><font color="#E5E5E5"> random</font>

106
00:04:58,349 --> 00:05:04,430
generated with<font color="#CCCCCC"> the good</font><font color="#E5E5E5"> good random</font>

107
00:05:00,330 --> 00:05:06,359
generator<font color="#E5E5E5"> because they will last for</font><font color="#CCCCCC"> the</font>

108
00:05:04,430 --> 00:05:10,020
the whole time you'll you'll use your

109
00:05:06,360 --> 00:05:11,669
drive<font color="#E5E5E5"> and the those</font><font color="#CCCCCC"> rods also have some</font>

110
00:05:10,020 --> 00:05:15,109
kind<font color="#CCCCCC"> of they need to have some</font><font color="#E5E5E5"> Co</font>

111
00:05:11,669 --> 00:05:19,169
storage for<font color="#E5E5E5"> for pin verification means</font>

112
00:05:15,110 --> 00:05:20,729
<font color="#E5E5E5">so as I said the</font><font color="#CCCCCC"> the keys have to be</font>

113
00:05:19,169 --> 00:05:22,740
<font color="#CCCCCC">sought from somewhere and</font><font color="#E5E5E5"> there are two</font>

114
00:05:20,729 --> 00:05:25,740
possibilities<font color="#CCCCCC"> for</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> first one is</font>

115
00:05:22,740 --> 00:05:28,919
that storing the the encryption keys on

116
00:05:25,740 --> 00:05:33,150
the drive a bit like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> clip used to do</font>

117
00:05:28,919 --> 00:05:35,758
and<font color="#CCCCCC"> they you can also have your yuckiest</font>

118
00:05:33,150 --> 00:05:38,068
also<font color="#E5E5E5"> stored inside the</font><font color="#CCCCCC"> SPI flash</font><font color="#E5E5E5"> in</font>

119
00:05:35,759 --> 00:05:40,800
either way we expect the<font color="#CCCCCC"> dos keys to be</font>

120
00:05:38,069 --> 00:05:44,039
to be themselves and<font color="#E5E5E5"> cryptid and we'll</font>

121
00:05:40,800 --> 00:05:48,479
see we'll see a bit more<font color="#E5E5E5"> about this so</font>

122
00:05:44,039 --> 00:05:52,169
what we what<font color="#CCCCCC"> we were focused on is we</font>

123
00:05:48,479 --> 00:05:53,900
wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to understand the whole</font>

124
00:05:52,169 --> 00:05:57,060
security<font color="#E5E5E5"> of the of those drives and</font>

125
00:05:53,900 --> 00:05:59,429
mainly<font color="#E5E5E5"> how and where the</font><font color="#CCCCCC"> disk is as taut</font>

126
00:05:57,060 --> 00:06:03,120
<font color="#CCCCCC">as the stored on on the</font><font color="#E5E5E5"> drive</font><font color="#CCCCCC"> out that's</font>

127
00:05:59,430 --> 00:06:04,830
not<font color="#E5E5E5"> inside inside the flash as I stowed</font>

128
00:06:03,120 --> 00:06:07,110
securely<font color="#E5E5E5"> it means as a strongly</font>

129
00:06:04,830 --> 00:06:09,539
encrypted is there a way for<font color="#CCCCCC"> the for for</font>

130
00:06:07,110 --> 00:06:12,509
<font color="#CCCCCC">an attacker to extract the keys to later</font>

131
00:06:09,539 --> 00:06:15,330
decrypt the data<font color="#E5E5E5"> we also wanted to see</font>

132
00:06:12,509 --> 00:06:16,949
if if these keys are really<font color="#E5E5E5"> random or as</font>

133
00:06:15,330 --> 00:06:19,650
they<font color="#CCCCCC"> are</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> too too broad</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the key</font>

134
00:06:16,949 --> 00:06:21,990
to to decrypt<font color="#CCCCCC"> the data and we</font><font color="#E5E5E5"> also</font>

135
00:06:19,650 --> 00:06:23,818
<font color="#E5E5E5">wanted to see</font><font color="#CCCCCC"> if the</font><font color="#E5E5E5"> pin is is well</font>

136
00:06:21,990 --> 00:06:26,490
verified that mean if there is some<font color="#E5E5E5"> kind</font>

137
00:06:23,819 --> 00:06:29,340
of bypass and you have to remember that

138
00:06:26,490 --> 00:06:31,909
our goal<font color="#E5E5E5"> is to access the user</font><font color="#CCCCCC"> file</font>

139
00:06:29,340 --> 00:06:36,049
files on on a stolen<font color="#E5E5E5"> or phone drive</font>

140
00:06:31,909 --> 00:06:38,180
<font color="#E5E5E5">found drive without without the</font><font color="#CCCCCC"> pin</font>

141
00:06:36,050 --> 00:06:40,490
so we first started<font color="#E5E5E5"> with very basic</font>

142
00:06:38,180 --> 00:06:42,650
<font color="#E5E5E5">testing that is to say were enabling</font>

143
00:06:40,490 --> 00:06:44,750
pushing writing that on the<font color="#E5E5E5"> disk</font>

144
00:06:42,650 --> 00:06:46,900
<font color="#E5E5E5">checking if that is actually encrypted</font>

145
00:06:44,750 --> 00:06:49,310
<font color="#E5E5E5">and then enabling and disabling</font>

146
00:06:46,900 --> 00:06:51,440
<font color="#E5E5E5">encryption many times to see if the keys</font>

147
00:06:49,310 --> 00:06:55,400
<font color="#E5E5E5">are not</font><font color="#CCCCCC"> constants to see if there is</font>

148
00:06:51,440 --> 00:06:58,879
<font color="#E5E5E5">some derive from the pin or not and then</font>

149
00:06:55,400 --> 00:07:01,008
we we<font color="#E5E5E5"> swapped we swapped the drive from</font>

150
00:06:58,879 --> 00:07:03,080
one enclosure to another to see if if

151
00:07:01,009 --> 00:07:06,710
the<font color="#E5E5E5"> disk is still recognized to see if</font>

152
00:07:03,080 --> 00:07:08,990
the<font color="#CCCCCC"> the disk is tied to an enclosure</font><font color="#E5E5E5"> or</font>

153
00:07:06,710 --> 00:07:12,799
not and<font color="#CCCCCC"> the keys are stored on the</font><font color="#E5E5E5"> drive</font>

154
00:07:08,990 --> 00:07:13,870
or<font color="#E5E5E5"> not well now well I will talk a bit</font>

155
00:07:12,800 --> 00:07:18,280
more about this one

156
00:07:13,870 --> 00:07:24,470
the<font color="#E5E5E5"> Zalman</font><font color="#CCCCCC"> sh-he 500 and what we found</font>

157
00:07:18,280 --> 00:07:27,590
about<font color="#CCCCCC"> it so first the USB USB to SATA</font>

158
00:07:24,470 --> 00:07:30,560
sock is a<font color="#E5E5E5"> bit about the major media</font>

159
00:07:27,590 --> 00:07:32,630
logic<font color="#E5E5E5"> which which</font><font color="#CCCCCC"> is actually a</font>

160
00:07:30,560 --> 00:07:35,419
<font color="#E5E5E5">rebounded version of the renesis a micro</font>

161
00:07:32,630 --> 00:07:39,620
PD<font color="#E5E5E5"> series</font><font color="#CCCCCC"> the integrated</font><font color="#E5E5E5"> microcontroller</font>

162
00:07:35,419 --> 00:07:41,270
here is a<font color="#CCCCCC"> VV -</font><font color="#E5E5E5"> 150</font><font color="#CCCCCC"> micron control it was</font>

163
00:07:39,620 --> 00:07:44,509
kind of hard<font color="#E5E5E5"> to identify but</font><font color="#CCCCCC"> it's</font>

164
00:07:41,270 --> 00:07:47,120
supported by<font color="#CCCCCC"> ideas which it's good news</font>

165
00:07:44,509 --> 00:07:49,849
<font color="#E5E5E5">for</font><font color="#CCCCCC"> us it has SPF lash and actually it's</font>

166
00:07:47,120 --> 00:07:51,680
<font color="#E5E5E5">not it's not designed by by Simon but</font>

167
00:07:49,849 --> 00:07:55,190
design many company<font color="#CCCCCC"> name sky digital</font><font color="#E5E5E5"> and</font>

168
00:07:51,680 --> 00:07:57,529
<font color="#E5E5E5">rebranded by Simon what was a very very</font>

169
00:07:55,190 --> 00:07:59,539
<font color="#E5E5E5">cool force is the firmware updater and</font>

170
00:07:57,529 --> 00:08:02,710
<font color="#CCCCCC">firmware updates are not encrypted</font><font color="#E5E5E5"> and</font>

171
00:07:59,539 --> 00:08:06,830
publicly<font color="#E5E5E5"> available on the month of the</font>

172
00:08:02,710 --> 00:08:11,560
website well at the<font color="#CCCCCC"> very beginning when</font>

173
00:08:06,830 --> 00:08:16,430
you when you enable encryption<font color="#E5E5E5"> on your</font>

174
00:08:11,560 --> 00:08:19,039
on your<font color="#CCCCCC"> drive</font><font color="#E5E5E5"> you you have to enter a</font>

175
00:08:16,430 --> 00:08:22,069
pin<font color="#E5E5E5"> between</font><font color="#CCCCCC"> four to eight</font><font color="#E5E5E5"> digits and</font>

176
00:08:19,039 --> 00:08:24,020
then then the<font color="#E5E5E5"> drive is associated with</font>

177
00:08:22,069 --> 00:08:26,569
<font color="#E5E5E5">the own water and the</font><font color="#CCCCCC"> closure can be</font>

178
00:08:24,020 --> 00:08:27,919
<font color="#E5E5E5">associated with up</font><font color="#CCCCCC"> to 50 drives</font><font color="#E5E5E5"> then the</font>

179
00:08:26,569 --> 00:08:30,349
master<font color="#E5E5E5"> key</font><font color="#CCCCCC"> is displayed you have to</font>

180
00:08:27,919 --> 00:08:33,110
write it down<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so a story</font><font color="#E5E5E5"> to sexually</font>

181
00:08:30,349 --> 00:08:37,010
<font color="#CCCCCC">because you</font><font color="#E5E5E5"> will need it if if in any</font>

182
00:08:33,110 --> 00:08:39,409
case if he<font color="#E5E5E5"> if you lose your</font><font color="#CCCCCC"> pin so the</font>

183
00:08:37,010 --> 00:08:41,539
first very first tests show that the

184
00:08:39,409 --> 00:08:43,099
<font color="#E5E5E5">crypto sinned</font><font color="#CCCCCC"> ok that means</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> disk is</font>

185
00:08:41,539 --> 00:08:46,100
actually encrypting the data the data

186
00:08:43,099 --> 00:08:47,720
<font color="#E5E5E5">but and</font><font color="#CCCCCC"> that the disk</font><font color="#E5E5E5"> is are not stone</font>

187
00:08:46,100 --> 00:08:48,390
on the drive which means a most probably

188
00:08:47,720 --> 00:08:51,120
and

189
00:08:48,390 --> 00:08:53,280
<font color="#CCCCCC">flash so</font><font color="#E5E5E5"> we reverse engineering the</font>

190
00:08:51,120 --> 00:08:57,570
engineer<font color="#E5E5E5"> the fume way on the data to</font>

191
00:08:53,280 --> 00:08:59,579
<font color="#E5E5E5">understand how</font><font color="#CCCCCC"> so the first very</font>

192
00:08:57,570 --> 00:09:01,230
interesting things is<font color="#CCCCCC"> that the data has</font>

193
00:08:59,580 --> 00:09:04,760
hidden comments you can see<font color="#E5E5E5"> here the</font>

194
00:09:01,230 --> 00:09:07,740
command line<font color="#E5E5E5"> of the of the updater</font><font color="#CCCCCC"> your</font>

195
00:09:04,760 --> 00:09:10,230
on the website and<font color="#E5E5E5"> what's what's fun is</font>

196
00:09:07,740 --> 00:09:11,940
<font color="#CCCCCC">that actually</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> hidden</font><font color="#E5E5E5"> command mem</font>

197
00:09:10,230 --> 00:09:13,740
damn<font color="#E5E5E5"> Pole and ROM damn hole that are</font>

198
00:09:11,940 --> 00:09:15,510
actually implemented<font color="#E5E5E5"> inside the software</font>

199
00:09:13,740 --> 00:09:19,590
<font color="#E5E5E5">but not this pane in the command line</font>

200
00:09:15,510 --> 00:09:21,750
<font color="#E5E5E5">and those those commands are allows you</font>

201
00:09:19,590 --> 00:09:24,630
to to do a full<font color="#E5E5E5"> demo</font><font color="#CCCCCC"> of the RAM and a</font>

202
00:09:21,750 --> 00:09:26,730
full dump of the<font color="#CCCCCC"> spi</font><font color="#E5E5E5"> flash</font><font color="#CCCCCC"> even if the</font>

203
00:09:24,630 --> 00:09:29,120
drive<font color="#CCCCCC"> is locked which means even if even</font>

204
00:09:26,730 --> 00:09:32,520
<font color="#E5E5E5">if you you haven't entered your PIN</font>

205
00:09:29,120 --> 00:09:35,580
that's very very nice very useful for us

206
00:09:32,520 --> 00:09:38,040
<font color="#E5E5E5">but it's it's a major issue and we</font>

207
00:09:35,580 --> 00:09:41,400
<font color="#CCCCCC">reverse engineer a bit bit</font><font color="#E5E5E5"> more data to</font>

208
00:09:38,040 --> 00:09:46,050
<font color="#E5E5E5">understand and it sound that in fact a</font>

209
00:09:41,400 --> 00:09:48,510
media logic chip<font color="#CCCCCC"> I expect</font><font color="#E5E5E5"> constructive</font>

210
00:09:46,050 --> 00:09:50,160
specific SCSI commands to to<font color="#E5E5E5"> implement</font>

211
00:09:48,510 --> 00:09:52,500
<font color="#E5E5E5">those functionalities to damp and food</font>

212
00:09:50,160 --> 00:09:52,949
to them the to them the RAM and<font color="#CCCCCC"> am the</font>

213
00:09:52,500 --> 00:09:55,440
flash

214
00:09:52,950 --> 00:09:57,900
and when we were<font color="#E5E5E5"> reporting the the</font>

215
00:09:55,440 --> 00:09:59,850
<font color="#E5E5E5">vulnerability</font><font color="#CCCCCC"> to supplier he told us</font>

216
00:09:57,900 --> 00:10:01,650
that in<font color="#CCCCCC"> fact it's a feature order of the</font>

217
00:09:59,850 --> 00:10:04,620
metallurgic chip and<font color="#CCCCCC"> that no patch is</font>

218
00:10:01,650 --> 00:10:08,069
possible so this one will<font color="#E5E5E5"> will last</font>

219
00:10:04,620 --> 00:10:09,390
forever<font color="#CCCCCC"> and it was very very very</font>

220
00:10:08,070 --> 00:10:11,430
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> us because we</font><font color="#CCCCCC"> were able</font>

221
00:10:09,390 --> 00:10:14,220
<font color="#CCCCCC">then to to them the</font><font color="#E5E5E5"> spi flash to search</font>

222
00:10:11,430 --> 00:10:16,199
for the<font color="#E5E5E5"> encryption keys and we were also</font>

223
00:10:14,220 --> 00:10:17,970
able<font color="#CCCCCC"> to dam</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> run to help reverse</font>

224
00:10:16,200 --> 00:10:21,630
engineer the film<font color="#E5E5E5"> well by remapping</font><font color="#CCCCCC"> the</font>

225
00:10:17,970 --> 00:10:25,070
map inside our our<font color="#CCCCCC"> IDE databases</font><font color="#E5E5E5"> and we</font>

226
00:10:21,630 --> 00:10:27,810
didn't have to<font color="#E5E5E5"> remove the flash from the</font>

227
00:10:25,070 --> 00:10:31,860
<font color="#E5E5E5">from the from the board which was quite</font>

228
00:10:27,810 --> 00:10:34,079
a<font color="#E5E5E5"> convenient so we had to look at the</font>

229
00:10:31,860 --> 00:10:36,720
flash contents and what's<font color="#E5E5E5"> interesting in</font>

230
00:10:34,080 --> 00:10:39,030
<font color="#CCCCCC">that at</font><font color="#E5E5E5"> this offset you had different</font>

231
00:10:36,720 --> 00:10:41,220
blobs which<font color="#E5E5E5"> correspond to to each Drive</font>

232
00:10:39,030 --> 00:10:44,970
<font color="#E5E5E5">which is associated</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> and with the</font>

233
00:10:41,220 --> 00:10:46,560
enclosure and<font color="#CCCCCC"> it's each blob is composed</font>

234
00:10:44,970 --> 00:10:48,420
of two random buffers<font color="#E5E5E5"> one at the</font>

235
00:10:46,560 --> 00:10:52,739
beginning<font color="#CCCCCC"> and one at the</font><font color="#E5E5E5"> end at</font><font color="#CCCCCC"> the end</font>

236
00:10:48,420 --> 00:10:55,290
and one structure which is<font color="#E5E5E5"> seemed</font>

237
00:10:52,740 --> 00:10:57,720
encrypted which we call we<font color="#CCCCCC"> call the</font>

238
00:10:55,290 --> 00:11:00,000
<font color="#CCCCCC">sacred scriptures searcher</font><font color="#E5E5E5"> so our guess</font>

239
00:10:57,720 --> 00:11:01,410
is<font color="#E5E5E5"> that the disk encryption keys were</font>

240
00:11:00,000 --> 00:11:04,139
searching for

241
00:11:01,410 --> 00:11:06,779
inside this<font color="#CCCCCC"> structure</font><font color="#E5E5E5"> so we had to we</font>

242
00:11:04,139 --> 00:11:09,089
<font color="#CCCCCC">had to</font><font color="#E5E5E5"> decrypt it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> in fact it was</font>

243
00:11:06,779 --> 00:11:12,139
kind<font color="#E5E5E5"> of disappointing</font><font color="#CCCCCC"> because it's it's</font>

244
00:11:09,089 --> 00:11:15,329
not<font color="#E5E5E5"> really</font><font color="#CCCCCC"> encrypted but much more</font>

245
00:11:12,139 --> 00:11:17,879
homemade homemade algorithm it's just

246
00:11:15,329 --> 00:11:20,128
<font color="#E5E5E5">encoded using XOR so there is a fixed</font>

247
00:11:17,879 --> 00:11:22,949
error inside the inside the<font color="#E5E5E5"> firmware</font>

248
00:11:20,129 --> 00:11:26,159
which are indexes<font color="#E5E5E5"> and the firmware</font>

249
00:11:22,949 --> 00:11:29,189
fetches fetches data in the products or

250
00:11:26,159 --> 00:11:31,619
number thought to be the<font color="#E5E5E5"> 60 16 bits key</font>

251
00:11:29,189 --> 00:11:34,529
then<font color="#CCCCCC"> it's and then with this</font><font color="#E5E5E5"> key</font>

252
00:11:31,619 --> 00:11:37,729
<font color="#CCCCCC">exhaustion encrypted structure to to</font>

253
00:11:34,529 --> 00:11:41,099
decode<font color="#CCCCCC"> it so we were able</font><font color="#E5E5E5"> to decode the</font>

254
00:11:37,729 --> 00:11:45,209
secrets of<font color="#E5E5E5"> our drive and</font><font color="#CCCCCC"> we've</font><font color="#E5E5E5"> we found</font>

255
00:11:41,099 --> 00:11:47,099
what was actually in<font color="#E5E5E5"> it so in the second</font>

256
00:11:45,209 --> 00:11:51,709
switch I got<font color="#E5E5E5"> the drive model here in</font>

257
00:11:47,099 --> 00:11:54,749
ASCII twice<font color="#CCCCCC"> the drive style</font><font color="#E5E5E5"> number and</font>

258
00:11:51,709 --> 00:11:57,508
<font color="#CCCCCC">weird</font><font color="#E5E5E5"> integers the one in in</font><font color="#CCCCCC"> green here</font>

259
00:11:54,749 --> 00:12:00,329
which are<font color="#E5E5E5"> timestamps and in fact the</font><font color="#CCCCCC"> the</font>

260
00:11:57,509 --> 00:12:02,819
<font color="#CCCCCC">q1 pin and the end of the first pin the</font>

261
00:12:00,329 --> 00:12:05,309
one you<font color="#CCCCCC"> user entered upon a</font><font color="#E5E5E5"> CSA</font>

262
00:12:02,819 --> 00:12:08,429
<font color="#E5E5E5">Association and they were hashed with</font>

263
00:12:05,309 --> 00:12:11,339
<font color="#E5E5E5">the with an algorithm and we were really</font>

264
00:12:08,429 --> 00:12:13,350
<font color="#E5E5E5">really disappointing</font><font color="#CCCCCC"> like what the</font>

265
00:12:11,339 --> 00:12:15,389
<font color="#E5E5E5">where are these the encryption</font>

266
00:12:13,350 --> 00:12:20,759
encryption keys we were expecting<font color="#CCCCCC"> to see</font>

267
00:12:15,389 --> 00:12:23,669
a random random very random vectors with

268
00:12:20,759 --> 00:12:25,829
which would be the encryption<font color="#E5E5E5"> keys so</font>

269
00:12:23,669 --> 00:12:28,859
nevertheless we looked at how the the

270
00:12:25,829 --> 00:12:31,949
the the periodic verification algorithm

271
00:12:28,859 --> 00:12:35,549
is implemented and how<font color="#CCCCCC"> the the pin is is</font>

272
00:12:31,949 --> 00:12:37,858
hashed<font color="#E5E5E5"> here we have an example what what</font>

273
00:12:35,549 --> 00:12:39,358
happens if you enter<font color="#CCCCCC"> 1 2 3 4</font><font color="#E5E5E5"> the pin is</font>

274
00:12:37,859 --> 00:12:41,249
then converted<font color="#E5E5E5"> to an integer</font>

275
00:12:39,359 --> 00:12:44,869
<font color="#CCCCCC">Ang's</font><font color="#E5E5E5"> odd with the drive style number</font>

276
00:12:41,249 --> 00:12:47,369
<font color="#CCCCCC">the drive model and fixed array inside</font>

277
00:12:44,869 --> 00:12:49,019
inside the firmware<font color="#E5E5E5"> so it produces</font><font color="#CCCCCC"> the</font>

278
00:12:47,369 --> 00:12:52,859
integrals we've seen on the on the

279
00:12:49,019 --> 00:12:56,249
previous slides<font color="#E5E5E5"> and it's something that</font>

280
00:12:52,859 --> 00:12:58,289
<font color="#E5E5E5">is worth mentioning is</font><font color="#CCCCCC"> that due to</font><font color="#E5E5E5"> a</font>

281
00:12:56,249 --> 00:13:01,829
<font color="#E5E5E5">buggy conversion integral conversion</font>

282
00:12:58,289 --> 00:13:03,239
between between<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> pin to 32 bits</font>

283
00:13:01,829 --> 00:13:05,728
<font color="#CCCCCC">integral there</font><font color="#E5E5E5"> are there are collisions</font>

284
00:13:03,239 --> 00:13:07,229
<font color="#E5E5E5">so if you set your</font><font color="#CCCCCC"> pin to one two three</font>

285
00:13:05,729 --> 00:13:08,669
<font color="#CCCCCC">four and one</font><font color="#E5E5E5"> two three four unlocks</font><font color="#CCCCCC"> to</font>

286
00:13:07,229 --> 00:13:12,270
drive but<font color="#CCCCCC"> also</font><font color="#E5E5E5"> one two three three</font><font color="#CCCCCC"> nine</font>

287
00:13:08,669 --> 00:13:15,250
one<font color="#CCCCCC"> two three</font><font color="#E5E5E5"> eight nine etc</font>

288
00:13:12,270 --> 00:13:18,970
so so far<font color="#E5E5E5"> what we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> found we have</font>

289
00:13:15,250 --> 00:13:20,950
found that we are<font color="#E5E5E5"> able to do to dump the</font>

290
00:13:18,970 --> 00:13:23,710
content of the<font color="#E5E5E5"> flash even before the</font>

291
00:13:20,950 --> 00:13:26,620
user and as under<font color="#E5E5E5"> the spin we are able</font>

292
00:13:23,710 --> 00:13:28,570
<font color="#CCCCCC">to retrieve the</font><font color="#E5E5E5"> sacristy a</font><font color="#CCCCCC"> secret</font>

293
00:13:26,620 --> 00:13:31,630
structure and to decode it<font color="#E5E5E5"> and we able</font>

294
00:13:28,570 --> 00:13:34,540
to to to retreat<font color="#CCCCCC"> the hash version of the</font>

295
00:13:31,630 --> 00:13:37,300
<font color="#CCCCCC">pinyin to and and to retrieve the</font>

296
00:13:34,540 --> 00:13:40,740
<font color="#E5E5E5">dependence so we were then able to to</font>

297
00:13:37,300 --> 00:13:46,680
convict our first attack here there's a

298
00:13:40,740 --> 00:13:46,680
demo<font color="#E5E5E5"> video</font><font color="#CCCCCC"> I hopefully</font>

299
00:13:57,130 --> 00:14:03,130
<font color="#E5E5E5">okay here we go</font><font color="#CCCCCC"> so have a drive here so</font>

300
00:14:01,030 --> 00:14:05,560
<font color="#CCCCCC">first</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> will unlock</font><font color="#E5E5E5"> the drive was</font>

301
00:14:03,130 --> 00:14:08,520
previously set a<font color="#CCCCCC"> pinion which is one two</font>

302
00:14:05,560 --> 00:14:12,880
three<font color="#CCCCCC"> four</font><font color="#E5E5E5"> so now the another drive is a</font>

303
00:14:08,520 --> 00:14:14,680
is either<font color="#E5E5E5"> unlocked yes and I will</font>

304
00:14:12,880 --> 00:14:16,689
generate a<font color="#E5E5E5"> new pinion with a secure</font>

305
00:14:14,680 --> 00:14:21,280
random number generator with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> toast</font>

306
00:14:16,690 --> 00:14:24,490
<font color="#CCCCCC">dices here so the new</font><font color="#E5E5E5"> pin will be eight</font>

307
00:14:21,280 --> 00:14:26,230
seven one eight<font color="#E5E5E5"> four zero so I will I</font>

308
00:14:24,490 --> 00:14:29,470
will go to the menu<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> change pin</font>

309
00:14:26,230 --> 00:14:31,390
menu<font color="#CCCCCC"> I under the previous pin one two</font>

310
00:14:29,470 --> 00:14:33,730
three four<font color="#E5E5E5"> then the</font><font color="#CCCCCC"> new pin I will have</font>

311
00:14:31,390 --> 00:14:43,060
to do it twice<font color="#CCCCCC"> eight seven one</font><font color="#E5E5E5"> eight</font>

312
00:14:33,730 --> 00:14:45,670
<font color="#E5E5E5">four zero okay once again okay</font><font color="#CCCCCC"> now the</font>

313
00:14:43,060 --> 00:14:48,790
<font color="#CCCCCC">password has changed</font><font color="#E5E5E5"> so I unplug the</font>

314
00:14:45,670 --> 00:14:50,620
drive just<font color="#E5E5E5"> for it to reboot</font><font color="#CCCCCC"> now it's</font>

315
00:14:48,790 --> 00:14:54,130
rebooting<font color="#E5E5E5"> and it's in a locked state</font>

316
00:14:50,620 --> 00:14:56,080
<font color="#E5E5E5">asking me for the for the pin so now</font>

317
00:14:54,130 --> 00:14:57,700
what I'm doing is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> running the</font>

318
00:14:56,080 --> 00:14:59,560
attack on my with my script<font color="#CCCCCC"> here we're</font>

319
00:14:57,700 --> 00:15:01,720
sending the SCSI<font color="#E5E5E5"> commands</font><font color="#CCCCCC"> end up the</font>

320
00:14:59,560 --> 00:15:03,790
content of the memory and and instantly

321
00:15:01,720 --> 00:15:06,010
<font color="#CCCCCC">Karimi retrieved the retrieved opinion</font>

322
00:15:03,790 --> 00:15:12,760
so I will then completely completely

323
00:15:06,010 --> 00:15:14,590
bypass by<font color="#CCCCCC"> pastor to security well that</font>

324
00:15:12,760 --> 00:15:17,560
was that was cool<font color="#E5E5E5"> but there are still</font>

325
00:15:14,590 --> 00:15:19,180
unanswered questions like where<font color="#E5E5E5"> are the</font>

326
00:15:17,560 --> 00:15:20,920
encryption keys of the drive was

327
00:15:19,180 --> 00:15:22,810
searching for<font color="#E5E5E5"> because if when when you</font>

328
00:15:20,920 --> 00:15:25,030
enter the pin the AES engine is

329
00:15:22,810 --> 00:15:28,270
initialized with something so with what

330
00:15:25,030 --> 00:15:31,480
and by as I said the crypto is

331
00:15:28,270 --> 00:15:33,400
implemented in hardware so it took us

332
00:15:31,480 --> 00:15:35,320
<font color="#E5E5E5">some</font><font color="#CCCCCC"> time to to there's there's no</font>

333
00:15:33,400 --> 00:15:36,939
crypto implementation in<font color="#E5E5E5"> the firmware so</font>

334
00:15:35,320 --> 00:15:41,220
you're not looking<font color="#CCCCCC"> for implementation</font>

335
00:15:36,940 --> 00:15:43,870
<font color="#CCCCCC">but we finally found where the where the</font>

336
00:15:41,220 --> 00:15:46,150
<font color="#E5E5E5">initialization of the AES engine takes</font>

337
00:15:43,870 --> 00:15:50,530
place and in fact<font color="#E5E5E5"> we're here there are</font>

338
00:15:46,150 --> 00:15:53,650
two<font color="#CCCCCC"> to mem copies of the</font><font color="#E5E5E5"> the 32 32 32</font>

339
00:15:50,530 --> 00:15:56,829
bytes here to the to decrypt<font color="#CCCCCC"> a chip Mao</font>

340
00:15:53,650 --> 00:15:58,449
so as we were also<font color="#CCCCCC"> able to do</font><font color="#E5E5E5"> to to them</font>

341
00:15:56,830 --> 00:16:01,990
the content of the<font color="#CCCCCC"> RAM we were able to</font>

342
00:15:58,450 --> 00:16:05,200
see<font color="#E5E5E5"> what was what was copied to the to</font>

343
00:16:01,990 --> 00:16:06,500
the<font color="#E5E5E5"> Mme Oh</font><font color="#CCCCCC"> and finally we found</font><font color="#E5E5E5"> out that</font>

344
00:16:05,200 --> 00:16:08,810
it was

345
00:16:06,500 --> 00:16:10,670
at this<font color="#E5E5E5"> this very addresses there was</font>

346
00:16:08,810 --> 00:16:15,770
the the content<font color="#E5E5E5"> of the sacred structure</font>

347
00:16:10,670 --> 00:16:18,439
so this<font color="#CCCCCC"> just leads</font><font color="#E5E5E5"> us to to where we</font>

348
00:16:15,770 --> 00:16:20,000
were<font color="#E5E5E5"> initially and in fact the</font>

349
00:16:18,440 --> 00:16:21,860
encryption keys<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> inside the circuit</font>

350
00:16:20,000 --> 00:16:25,400
structure is<font color="#E5E5E5"> that just we didn't see</font>

351
00:16:21,860 --> 00:16:27,260
them<font color="#E5E5E5"> and they</font><font color="#CCCCCC"> are very</font><font color="#E5E5E5"> very weak that</font>

352
00:16:25,400 --> 00:16:29,750
there are two<font color="#CCCCCC"> AES encryption keys are</font>

353
00:16:27,260 --> 00:16:31,970
here<font color="#CCCCCC"> it's they</font><font color="#E5E5E5"> are mainly composed of</font>

354
00:16:29,750 --> 00:16:34,340
the<font color="#CCCCCC"> drives aisle</font><font color="#E5E5E5"> number and the drive</font>

355
00:16:31,970 --> 00:16:35,570
model and with these<font color="#E5E5E5"> two weird and</font>

356
00:16:34,340 --> 00:16:37,430
taggers the first one is a time

357
00:16:35,570 --> 00:16:38,750
dependent<font color="#CCCCCC"> value</font><font color="#E5E5E5"> and the second one is</font>

358
00:16:37,430 --> 00:16:41,359
the first<font color="#CCCCCC"> pin the one</font><font color="#E5E5E5"> that the user</font>

359
00:16:38,750 --> 00:16:45,260
<font color="#CCCCCC">entered that when associating the drive</font>

360
00:16:41,360 --> 00:16:49,370
with the enclosure so this is a this<font color="#CCCCCC"> is</font>

361
00:16:45,260 --> 00:16:51,770
a great<font color="#E5E5E5"> failure</font><font color="#CCCCCC"> because with you if this</font>

362
00:16:49,370 --> 00:16:55,430
time<font color="#E5E5E5"> you find not not the enclosure</font><font color="#CCCCCC"> but</font>

363
00:16:51,770 --> 00:16:57,920
just just the drive<font color="#E5E5E5"> your your elbow you</font>

364
00:16:55,430 --> 00:16:59,359
able<font color="#CCCCCC"> to brute force the pin</font><font color="#E5E5E5"> to twit to</font>

365
00:16:57,920 --> 00:17:01,310
brute<font color="#CCCCCC"> force the</font><font color="#E5E5E5"> pin because if you find</font>

366
00:16:59,360 --> 00:17:03,740
<font color="#E5E5E5">out the drive the drive model and drives</font>

367
00:17:01,310 --> 00:17:05,810
<font color="#CCCCCC">our number our it are written on it</font><font color="#E5E5E5"> the</font>

368
00:17:03,740 --> 00:17:07,910
<font color="#CCCCCC">only</font><font color="#E5E5E5"> thing you have to to find is that</font>

369
00:17:05,810 --> 00:17:09,919
is the<font color="#CCCCCC"> the content</font><font color="#E5E5E5"> of the opinion that</font>

370
00:17:07,910 --> 00:17:13,069
the<font color="#E5E5E5"> time dependent value which can be</font>

371
00:17:09,920 --> 00:17:15,350
<font color="#E5E5E5">reasonable he reduced to 16 bits so in</font>

372
00:17:13,069 --> 00:17:17,720
practice<font color="#E5E5E5"> a</font><font color="#CCCCCC"> file</font><font color="#E5E5E5"> has implemented</font><font color="#CCCCCC"> before</font>

373
00:17:15,349 --> 00:17:19,310
<font color="#CCCCCC">so I see and we are bought you if you</font>

374
00:17:17,720 --> 00:17:21,110
find<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you find just</font><font color="#E5E5E5"> the drive without</font>

375
00:17:19,310 --> 00:17:23,149
<font color="#E5E5E5">the enclosure were able to recover the</font>

376
00:17:21,109 --> 00:17:28,280
encryption keys in less than 24 hours

377
00:17:23,150 --> 00:17:31,760
<font color="#E5E5E5">which is a which</font><font color="#CCCCCC"> is not really weak so</font>

378
00:17:28,280 --> 00:17:33,710
to sum up about this right there's<font color="#E5E5E5"> there</font>

379
00:17:31,760 --> 00:17:37,640
are<font color="#E5E5E5"> many issues first there's a back</font>

380
00:17:33,710 --> 00:17:41,030
<font color="#CCCCCC">door in the manual dick</font><font color="#E5E5E5"> sock the</font><font color="#CCCCCC"> disk is</font>

381
00:17:37,640 --> 00:17:42,950
<font color="#E5E5E5">who asked</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> weekly it has been dated</font>

382
00:17:41,030 --> 00:17:46,840
in a new new version of the<font color="#CCCCCC"> femur when</font>

383
00:17:42,950 --> 00:17:50,090
we were positive<font color="#CCCCCC"> a new abilities</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> the</font>

384
00:17:46,840 --> 00:17:51,740
<font color="#CCCCCC">didn't didn't touch the the issue of low</font>

385
00:17:50,090 --> 00:17:53,389
entropy and<font color="#CCCCCC"> the fact that the keys are</font>

386
00:17:51,740 --> 00:17:56,690
predicted<font color="#E5E5E5"> also it's a it's a failure</font>

387
00:17:53,390 --> 00:18:00,350
anyway<font color="#E5E5E5"> and</font><font color="#CCCCCC"> FAMAS are not encrypted not</font>

388
00:17:56,690 --> 00:18:01,850
signed so and<font color="#E5E5E5"> only</font><font color="#CCCCCC"> only also something</font>

389
00:18:00,350 --> 00:18:03,860
interesting<font color="#E5E5E5"> is that if you find</font><font color="#CCCCCC"> a no</font>

390
00:18:01,850 --> 00:18:05,899
<font color="#CCCCCC">closure</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> not only you recover the</font>

391
00:18:03,860 --> 00:18:08,120
encryption keys for your drive but the

392
00:18:05,900 --> 00:18:11,780
50<font color="#CCCCCC"> all the drives that</font><font color="#E5E5E5"> are associated</font>

393
00:18:08,120 --> 00:18:13,820
with it so there were two attacks<font color="#E5E5E5"> one</font>

394
00:18:11,780 --> 00:18:15,440
with the enclosure which which is<font color="#CCCCCC"> the</font>

395
00:18:13,820 --> 00:18:18,260
direct bypass of the pin and<font color="#CCCCCC"> direct</font>

396
00:18:15,440 --> 00:18:20,090
<font color="#E5E5E5">access</font><font color="#CCCCCC"> to the users data</font><font color="#E5E5E5"> and if you if</font>

397
00:18:18,260 --> 00:18:21,919
you find only the drive you are bald

398
00:18:20,090 --> 00:18:26,110
to recover<font color="#E5E5E5"> the keys in less than 24</font>

399
00:18:21,919 --> 00:18:28,250
hours<font color="#CCCCCC"> so it's mainly completely broken</font>

400
00:18:26,110 --> 00:18:29,899
<font color="#E5E5E5">so know that we are broken</font>

401
00:18:28,250 --> 00:18:32,419
our first drives we had some

402
00:18:29,900 --> 00:18:34,970
expectations<font color="#CCCCCC"> that the second</font><font color="#E5E5E5"> one was</font>

403
00:18:32,419 --> 00:18:38,360
better<font color="#CCCCCC"> so we know we're talking about</font>

404
00:18:34,970 --> 00:18:40,330
the<font color="#E5E5E5"> V 500 which is if you look</font><font color="#CCCCCC"> at the</font>

405
00:18:38,360 --> 00:18:42,830
hardware pretty much the same

406
00:18:40,330 --> 00:18:44,840
<font color="#E5E5E5">architecture as the first one except</font>

407
00:18:42,830 --> 00:18:47,570
<font color="#E5E5E5">that the drive doesn't use a media logic</font>

408
00:18:44,840 --> 00:18:50,899
or<font color="#CCCCCC"> rinses cheap it's an initial index</font>

409
00:18:47,570 --> 00:18:54,408
<font color="#E5E5E5">3607</font><font color="#CCCCCC"> e4</font><font color="#E5E5E5"> which of course note that the</font>

410
00:18:50,900 --> 00:18:57,140
sheet was available<font color="#E5E5E5"> so you also have an</font>

411
00:18:54,409 --> 00:18:59,779
aspire to store the firmware<font color="#E5E5E5"> as we said</font>

412
00:18:57,140 --> 00:19:01,340
and there is another chip<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you does</font>

413
00:18:59,779 --> 00:19:03,049
<font color="#E5E5E5">no marking which is actually the</font>

414
00:19:01,340 --> 00:19:05,689
capacitive keyboard controller<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

415
00:19:03,049 --> 00:19:08,120
just used<font color="#E5E5E5"> to retrieve the touchpad</font><font color="#CCCCCC"> and</font>

416
00:19:05,690 --> 00:19:11,210
that's it<font color="#E5E5E5"> as with</font><font color="#CCCCCC"> the previous drive</font>

417
00:19:08,120 --> 00:19:13,189
we're really lucky<font color="#CCCCCC"> cuz on Salman's</font>

418
00:19:11,210 --> 00:19:16,250
<font color="#E5E5E5">website you can get the firmware updater</font>

419
00:19:13,190 --> 00:19:19,669
and unencrypted updates<font color="#E5E5E5"> so it really</font>

420
00:19:16,250 --> 00:19:22,580
<font color="#E5E5E5">helps</font><font color="#CCCCCC"> for reverse engineering so we</font>

421
00:19:19,669 --> 00:19:25,159
started<font color="#E5E5E5"> with our basic</font><font color="#CCCCCC"> testing</font><font color="#E5E5E5"> that is</font>

422
00:19:22,580 --> 00:19:27,199
enabling encryption so it works a bit

423
00:19:25,159 --> 00:19:29,210
differently on this<font color="#E5E5E5"> Drive</font><font color="#CCCCCC"> you need to go</font>

424
00:19:27,200 --> 00:19:31,010
to the menu<font color="#E5E5E5"> you know I cannot</font><font color="#CCCCCC"> probably</font>

425
00:19:29,210 --> 00:19:33,230
see here but you have<font color="#CCCCCC"> a just enable</font>

426
00:19:31,010 --> 00:19:35,750
encryption<font color="#E5E5E5"> you choose a pin again</font>

427
00:19:33,230 --> 00:19:37,880
<font color="#E5E5E5">between</font><font color="#CCCCCC"> 4 and 8 digits</font><font color="#E5E5E5"> and then that's</font>

428
00:19:35,750 --> 00:19:41,020
it<font color="#E5E5E5"> you don't have any master key</font>

429
00:19:37,880 --> 00:19:43,820
displayed or whatever so we'll see why

430
00:19:41,020 --> 00:19:45,529
then we check that<font color="#E5E5E5"> the data is actually</font>

431
00:19:43,820 --> 00:19:48,200
encrypted when you write it to<font color="#E5E5E5"> the drive</font>

432
00:19:45,529 --> 00:19:50,779
<font color="#CCCCCC">and we did the basic</font><font color="#E5E5E5"> testing of putting</font>

433
00:19:48,200 --> 00:19:52,460
the encrypted<font color="#E5E5E5"> drive in</font><font color="#CCCCCC"> another V 500</font>

434
00:19:50,779 --> 00:19:55,100
enclosure<font color="#CCCCCC"> one without</font><font color="#E5E5E5"> any configuration</font>

435
00:19:52,460 --> 00:19:56,750
<font color="#E5E5E5">and then we realized that the pin</font>

436
00:19:55,100 --> 00:19:59,539
actually works and you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> access the</font>

437
00:19:56,750 --> 00:20:05,120
user data after entering you<font color="#E5E5E5"> your good</font>

438
00:19:59,539 --> 00:20:07,460
<font color="#E5E5E5">password so we</font><font color="#CCCCCC"> wait so we think that</font><font color="#E5E5E5"> the</font>

439
00:20:05,120 --> 00:20:10,250
secrets are stored<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the drive so to</font>

440
00:20:07,460 --> 00:20:12,799
confirm that it was<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> the case</font><font color="#CCCCCC"> we</font>

441
00:20:10,250 --> 00:20:15,679
took out the drive of the<font color="#E5E5E5"> V 500 used a</font>

442
00:20:12,799 --> 00:20:17,960
<font color="#E5E5E5">normal USB SATA</font><font color="#CCCCCC"> Bridge to verify</font><font color="#E5E5E5"> what</font>

443
00:20:15,679 --> 00:20:20,240
was written<font color="#E5E5E5"> on the drive while we enable</font>

444
00:20:17,960 --> 00:20:21,710
encryption<font color="#E5E5E5"> so if you look closely at</font>

445
00:20:20,240 --> 00:20:23,990
what happened

446
00:20:21,710 --> 00:20:25,880
you have your encrypted<font color="#E5E5E5"> data here that</font>

447
00:20:23,990 --> 00:20:28,039
<font color="#CCCCCC">is</font><font color="#E5E5E5"> you reserved data that you wrote on</font>

448
00:20:25,880 --> 00:20:29,630
<font color="#E5E5E5">your</font><font color="#CCCCCC"> Windows partition or whatever</font><font color="#E5E5E5"> but</font>

449
00:20:28,039 --> 00:20:31,580
then you<font color="#CCCCCC"> realized that there was an</font>

450
00:20:29,630 --> 00:20:33,980
encrypted blob that appeared at<font color="#CCCCCC"> the end</font>

451
00:20:31,580 --> 00:20:37,490
so<font color="#E5E5E5"> Y encrypted because</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> entropy</font>

452
00:20:33,980 --> 00:20:40,820
was<font color="#E5E5E5"> pre</font><font color="#CCCCCC"> high</font><font color="#E5E5E5"> so actually the blog start</font>

453
00:20:37,490 --> 00:20:42,470
with a ini header so<font color="#E5E5E5"> I and I it's really</font>

454
00:20:40,820 --> 00:20:46,549
<font color="#CCCCCC">interesting</font><font color="#E5E5E5"> because the chip is an</font>

455
00:20:42,470 --> 00:20:48,320
initial chip so<font color="#CCCCCC"> I mean I we really</font><font color="#E5E5E5"> think</font>

456
00:20:46,549 --> 00:20:50,360
it's something<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do with</font><font color="#E5E5E5"> encryption</font><font color="#CCCCCC"> and</font>

457
00:20:48,320 --> 00:20:53,120
there were several blocks of iron<font color="#CCCCCC"> Trippi</font>

458
00:20:50,360 --> 00:20:55,879
inside those blocks using<font color="#E5E5E5"> ini headers so</font>

459
00:20:53,120 --> 00:20:58,280
to<font color="#E5E5E5"> verify that the keys were actually</font>

460
00:20:55,880 --> 00:21:01,460
storing<font color="#E5E5E5"> the encrypted blob we need to</font>

461
00:20:58,280 --> 00:21:03,168
change<font color="#E5E5E5"> the pin</font><font color="#CCCCCC"> using the same drive and</font>

462
00:21:01,460 --> 00:21:05,150
then<font color="#E5E5E5"> we checked what has changed</font><font color="#CCCCCC"> on the</font>

463
00:21:03,169 --> 00:21:07,059
drive afterwards<font color="#CCCCCC"> so of course the</font>

464
00:21:05,150 --> 00:21:09,290
encrypted data is the<font color="#E5E5E5"> same because</font>

465
00:21:07,059 --> 00:21:12,470
changing the encryption key with takes

466
00:21:09,290 --> 00:21:14,510
our to rewrite the data on the<font color="#E5E5E5"> drive</font>

467
00:21:12,470 --> 00:21:17,720
however the encrypted<font color="#E5E5E5"> blobs at the end</font>

468
00:21:14,510 --> 00:21:19,910
really fully changed<font color="#E5E5E5"> so maybe the keys</font>

469
00:21:17,720 --> 00:21:23,299
are encrypted using<font color="#E5E5E5"> the pin at the end</font>

470
00:21:19,910 --> 00:21:26,510
<font color="#E5E5E5">stored at the end of the drive so that's</font>

471
00:21:23,299 --> 00:21:28,760
what we thought<font color="#E5E5E5"> and we wanted</font><font color="#CCCCCC"> to confirm</font>

472
00:21:26,510 --> 00:21:31,309
<font color="#CCCCCC">that it was actually</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> case</font><font color="#E5E5E5"> so the</font>

473
00:21:28,760 --> 00:21:33,169
next step was to of course do reverse

474
00:21:31,309 --> 00:21:35,240
engineering<font color="#CCCCCC"> of the firmware</font><font color="#E5E5E5"> to identify</font>

475
00:21:33,169 --> 00:21:39,320
how the pin is verified and<font color="#CCCCCC"> where the</font>

476
00:21:35,240 --> 00:21:44,000
keys<font color="#CCCCCC"> are stored to do</font><font color="#E5E5E5"> that we turn to</font><font color="#CCCCCC"> do</font>

477
00:21:39,320 --> 00:21:45,799
our good tool<font color="#CCCCCC"> Ida</font><font color="#E5E5E5"> we before we go to</font>

478
00:21:44,000 --> 00:21:48,140
<font color="#CCCCCC">Google to identify the CPU that is</font>

479
00:21:45,799 --> 00:21:50,059
<font color="#E5E5E5">running on the initial chip so that's</font>

480
00:21:48,140 --> 00:21:52,429
pretty easy<font color="#E5E5E5"> to find</font><font color="#CCCCCC"> and so</font><font color="#E5E5E5"> not compact</font>

481
00:21:50,059 --> 00:21:53,750
you spend one minute<font color="#E5E5E5"> to find the loading</font>

482
00:21:52,429 --> 00:21:55,970
offset of the firmware that's pretty

483
00:21:53,750 --> 00:21:58,669
trivial<font color="#E5E5E5"> because all the beginning is</font>

484
00:21:55,970 --> 00:22:01,040
only<font color="#E5E5E5"> FF and then you got your offset you</font>

485
00:21:58,669 --> 00:22:03,380
load it in either so you're very<font color="#E5E5E5"> happy</font>

486
00:22:01,040 --> 00:22:06,740
you have a nice disassembly<font color="#E5E5E5"> and you like</font>

487
00:22:03,380 --> 00:22:08,299
<font color="#E5E5E5">okay why where am I going to look I need</font>

488
00:22:06,740 --> 00:22:11,210
<font color="#CCCCCC">to</font><font color="#E5E5E5"> know where the pin is checked where</font>

489
00:22:08,299 --> 00:22:12,530
the keys<font color="#CCCCCC"> are used and you don't have any</font>

490
00:22:11,210 --> 00:22:15,080
data sheet so<font color="#E5E5E5"> you don't have any</font>

491
00:22:12,530 --> 00:22:17,809
<font color="#E5E5E5">addresses for the crypto</font><font color="#CCCCCC"> Mme</font><font color="#E5E5E5"> oh so you</font>

492
00:22:15,080 --> 00:22:20,178
cannot look for where the engine for

493
00:22:17,809 --> 00:22:21,799
encryption<font color="#E5E5E5"> is configured you</font><font color="#CCCCCC"> don't have</font>

494
00:22:20,179 --> 00:22:23,600
any crypto constant bits<font color="#CCCCCC"> guys</font><font color="#E5E5E5"> the</font>

495
00:22:21,799 --> 00:22:25,309
hardware is<font color="#E5E5E5"> the crypto is done in</font>

496
00:22:23,600 --> 00:22:25,959
<font color="#CCCCCC">hardware so you really have to find</font>

497
00:22:25,309 --> 00:22:29,450
<font color="#CCCCCC">another way</font>

498
00:22:25,960 --> 00:22:31,610
thankfully the drive uses an LCD so we

499
00:22:29,450 --> 00:22:34,520
have a nice strings<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are displayed</font>

500
00:22:31,610 --> 00:22:36,409
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> screen</font><font color="#E5E5E5"> that is</font><font color="#CCCCCC"> input password</font>

501
00:22:34,520 --> 00:22:38,330
<font color="#E5E5E5">when you look here when you need</font><font color="#CCCCCC"> to</font>

502
00:22:36,410 --> 00:22:41,600
<font color="#CCCCCC">unlock</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> drive and wrong password</font><font color="#E5E5E5"> when</font>

503
00:22:38,330 --> 00:22:43,490
you<font color="#E5E5E5"> fail so it's like a keygen me</font><font color="#CCCCCC"> you</font>

504
00:22:41,600 --> 00:22:46,250
look for the bad guy<font color="#CCCCCC"> string and you know</font>

505
00:22:43,490 --> 00:22:47,299
you go<font color="#CCCCCC"> back into the code unfortunately</font>

506
00:22:46,250 --> 00:22:49,669
this is

507
00:22:47,299 --> 00:22:52,158
the graph of the menu function that is

508
00:22:49,669 --> 00:22:54,399
handling hang boots for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> password and</font>

509
00:22:52,159 --> 00:22:56,840
displaying<font color="#E5E5E5"> the wrong password chain so</font>

510
00:22:54,399 --> 00:22:58,879
there<font color="#E5E5E5"> are several state machines</font>

511
00:22:56,840 --> 00:23:01,428
interleaved<font color="#E5E5E5"> here so it took us</font><font color="#CCCCCC"> quite a</font>

512
00:22:58,879 --> 00:23:03,709
<font color="#E5E5E5">lot of time to go through all the loops</font>

513
00:23:01,429 --> 00:23:06,259
and identify all the variables<font color="#E5E5E5"> it's not</font>

514
00:23:03,710 --> 00:23:08,779
really hard<font color="#E5E5E5"> it's just a long</font><font color="#CCCCCC"> long</font><font color="#E5E5E5"> time</font>

515
00:23:06,259 --> 00:23:10,730
to do that<font color="#CCCCCC"> so once we spend quite a few</font>

516
00:23:08,779 --> 00:23:12,980
hours even days<font color="#E5E5E5"> looking at that menu</font>

517
00:23:10,730 --> 00:23:15,320
function we were able<font color="#CCCCCC"> to see interesting</font>

518
00:23:12,980 --> 00:23:18,889
<font color="#E5E5E5">code about around the wrong password</font>

519
00:23:15,320 --> 00:23:21,259
display<font color="#E5E5E5"> so first we finally identified</font>

520
00:23:18,889 --> 00:23:23,899
the crypto processor memory mapped i/o

521
00:23:21,259 --> 00:23:26,690
addresses so we<font color="#E5E5E5"> were</font><font color="#CCCCCC"> able to check when</font>

522
00:23:23,899 --> 00:23:29,629
and where the AES<font color="#E5E5E5"> keys were sent</font>

523
00:23:26,690 --> 00:23:31,909
then right after using the crypto

524
00:23:29,629 --> 00:23:34,820
processor there is<font color="#CCCCCC"> a comparison</font><font color="#E5E5E5"> with an</font>

525
00:23:31,909 --> 00:23:36,529
ini magic<font color="#E5E5E5"> that looks like it would</font>

526
00:23:34,820 --> 00:23:39,830
decrypt data from the disk and check for

527
00:23:36,529 --> 00:23:40,879
<font color="#CCCCCC">a magic and we also</font><font color="#E5E5E5"> realize that</font><font color="#CCCCCC"> too</font>

528
00:23:39,830 --> 00:23:43,428
weird

529
00:23:40,879 --> 00:23:45,709
<font color="#E5E5E5">AES keys were used just before accessing</font>

530
00:23:43,429 --> 00:23:48,980
the<font color="#E5E5E5"> drive so if you look closely they</font>

531
00:23:45,710 --> 00:23:51,489
start with<font color="#E5E5E5"> 3 14 15 so that's</font><font color="#CCCCCC"> PI</font><font color="#E5E5E5"> value in</font>

532
00:23:48,980 --> 00:23:55,789
extra decimal that<font color="#E5E5E5"> is using a s key</font>

533
00:23:51,489 --> 00:23:58,399
right<font color="#E5E5E5"> so we</font><font color="#CCCCCC"> talked a bit more and we</font>

534
00:23:55,789 --> 00:24:01,100
<font color="#CCCCCC">were finally able to identify the pin</font>

535
00:23:58,399 --> 00:24:02,508
verification algorithm<font color="#E5E5E5"> so it's pretty</font>

536
00:24:01,100 --> 00:24:04,609
<font color="#E5E5E5">simple</font>

537
00:24:02,509 --> 00:24:06,230
the<font color="#E5E5E5"> drive starts by reading the</font>

538
00:24:04,609 --> 00:24:09,799
encrypted<font color="#E5E5E5"> blob at the end of the disk</font>

539
00:24:06,230 --> 00:24:13,609
and then it configures<font color="#E5E5E5"> the</font><font color="#CCCCCC"> engine the</font>

540
00:24:09,799 --> 00:24:15,499
AES engine with two keys so a<font color="#CCCCCC"> s</font><font color="#E5E5E5"> 60 s</font>

541
00:24:13,609 --> 00:24:17,149
<font color="#E5E5E5">needs two keys the first one actually</font>

542
00:24:15,499 --> 00:24:20,690
<font color="#CCCCCC">the second one is</font><font color="#E5E5E5"> very interesting</font>

543
00:24:17,149 --> 00:24:21,738
equals<font color="#E5E5E5"> it's all</font><font color="#CCCCCC"> zeroes all zeroes like</font>

544
00:24:20,690 --> 00:24:24,320
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> what</font>

545
00:24:21,739 --> 00:24:25,850
so<font color="#E5E5E5"> maybe the guy didn't</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> XTS nearly</font>

546
00:24:24,320 --> 00:24:27,950
two keys so we<font color="#CCCCCC"> just pulled out of zero</font>

547
00:24:25,850 --> 00:24:30,379
buffer<font color="#E5E5E5"> but I really don't understand and</font>

548
00:24:27,950 --> 00:24:32,690
<font color="#E5E5E5">the first key is where the pin is</font>

549
00:24:30,379 --> 00:24:35,059
actually<font color="#E5E5E5"> used so the PI key that you saw</font>

550
00:24:32,690 --> 00:24:37,940
just<font color="#CCCCCC"> before</font><font color="#E5E5E5"> is partially overwritten by</font>

551
00:24:35,059 --> 00:24:40,299
the pin which is padded<font color="#E5E5E5"> with zeros if</font>

552
00:24:37,940 --> 00:24:43,309
your<font color="#CCCCCC"> pin</font><font color="#E5E5E5"> is less than four four digits</font>

553
00:24:40,299 --> 00:24:45,049
then you read<font color="#CCCCCC"> the blob at the end of the</font>

554
00:24:43,309 --> 00:24:46,970
disk<font color="#E5E5E5"> and decrypt it using the engine</font><font color="#CCCCCC"> and</font>

555
00:24:45,049 --> 00:24:48,859
the keys you just configure and you

556
00:24:46,970 --> 00:24:51,409
check<font color="#CCCCCC"> that the</font><font color="#E5E5E5"> Rhino magic is at the</font>

557
00:24:48,859 --> 00:24:53,330
beginning<font color="#E5E5E5"> if you have the ini magic then</font>

558
00:24:51,409 --> 00:24:56,029
it means<font color="#E5E5E5"> the pin was correct because you</font>

559
00:24:53,330 --> 00:24:57,799
<font color="#E5E5E5">could read the data what's very</font>

560
00:24:56,029 --> 00:25:00,889
<font color="#CCCCCC">interesting also is that</font><font color="#E5E5E5"> the pin is</font><font color="#CCCCCC"> zero</font>

561
00:24:57,799 --> 00:25:01,110
<font color="#CCCCCC">padded but actually the value 0 on the</font>

562
00:25:00,889 --> 00:25:03,570
key

563
00:25:01,110 --> 00:25:05,520
<font color="#E5E5E5">board is a</font><font color="#CCCCCC"> bite zero so you have</font>

564
00:25:03,570 --> 00:25:06,870
collisions if your<font color="#E5E5E5"> pin ends with zero</font>

565
00:25:05,520 --> 00:25:09,840
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> pretty stupid</font>

566
00:25:06,870 --> 00:25:12,120
so in theory we<font color="#CCCCCC"> have everything</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> need</font>

567
00:25:09,840 --> 00:25:14,699
we know the algorithm<font color="#CCCCCC"> we know the keys</font>

568
00:25:12,120 --> 00:25:17,100
so we<font color="#CCCCCC"> can do a brute force or in C and</font>

569
00:25:14,700 --> 00:25:19,799
we just need<font color="#CCCCCC"> to read a secret block and</font>

570
00:25:17,100 --> 00:25:22,580
for<font color="#CCCCCC"> 8-pin they create check fire and I</font>

571
00:25:19,799 --> 00:25:25,379
so we did<font color="#E5E5E5"> that and it didn't</font><font color="#CCCCCC"> work so</font>

572
00:25:22,580 --> 00:25:27,090
<font color="#E5E5E5">we're kind of pissed because we spent</font>

573
00:25:25,380 --> 00:25:30,150
<font color="#E5E5E5">quite a lot</font><font color="#CCCCCC"> of time and we're pretty</font>

574
00:25:27,090 --> 00:25:31,590
sure<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we we were on</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> good way</font><font color="#CCCCCC"> so we</font>

575
00:25:30,150 --> 00:25:33,540
needed to<font color="#E5E5E5"> reverse a bit more to</font>

576
00:25:31,590 --> 00:25:39,870
understand why and a legend and talk

577
00:25:33,540 --> 00:25:41,659
about<font color="#E5E5E5"> it well like as I said</font><font color="#CCCCCC"> at that</font>

578
00:25:39,870 --> 00:25:43,860
<font color="#CCCCCC">point we were kind of stuck</font><font color="#E5E5E5"> because we</font>

579
00:25:41,660 --> 00:25:46,740
didn't<font color="#E5E5E5"> see what was what was happening</font>

580
00:25:43,860 --> 00:25:49,590
<font color="#E5E5E5">and we didn't have</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> there was no no</font>

581
00:25:46,740 --> 00:25:52,970
good reason for<font color="#CCCCCC"> that not to work so we</font>

582
00:25:49,590 --> 00:25:56,100
wanted<font color="#E5E5E5"> to we wanted to to debug a bit</font>

583
00:25:52,970 --> 00:25:58,080
what<font color="#E5E5E5"> was what was</font><font color="#CCCCCC"> happening in there and</font>

584
00:25:56,100 --> 00:26:00,899
contrary to<font color="#CCCCCC"> the previous model we didn't</font>

585
00:25:58,080 --> 00:26:03,270
have a way<font color="#CCCCCC"> to tempt the memory no easy</font>

586
00:26:00,900 --> 00:26:04,790
way to<font color="#E5E5E5"> done the memory so to interact</font>

587
00:26:03,270 --> 00:26:08,309
with their own in code we decided to

588
00:26:04,790 --> 00:26:10,110
<font color="#CCCCCC">modify the firmware flash flash modified</font>

589
00:26:08,309 --> 00:26:12,629
version of the firmware on the<font color="#E5E5E5"> on the</font>

590
00:26:10,110 --> 00:26:14,870
<font color="#CCCCCC">driver to to</font><font color="#E5E5E5"> to to</font><font color="#CCCCCC"> change his behavior</font>

591
00:26:12,630 --> 00:26:18,350
<font color="#E5E5E5">to see to see what</font><font color="#CCCCCC"> was going on</font>

592
00:26:14,870 --> 00:26:20,969
hopefully the firmware<font color="#E5E5E5"> on outside</font>

593
00:26:18,350 --> 00:26:23,520
<font color="#E5E5E5">nevertheless there is there is</font><font color="#CCCCCC"> a small</font>

594
00:26:20,970 --> 00:26:25,140
integrity check at the end by comparing

595
00:26:23,520 --> 00:26:27,809
two very close version of the firmware

596
00:26:25,140 --> 00:26:29,790
<font color="#E5E5E5">here we saw</font><font color="#CCCCCC"> that the two</font><font color="#E5E5E5"> bytes at the</font>

597
00:26:27,809 --> 00:26:32,280
end are completely completely completely

598
00:26:29,790 --> 00:26:35,129
modified so our guess is that<font color="#E5E5E5"> it was</font>

599
00:26:32,280 --> 00:26:36,330
<font color="#CCCCCC">just a CSS 16</font><font color="#E5E5E5"> kind of a modified</font><font color="#CCCCCC"> version</font>

600
00:26:35,130 --> 00:26:39,419
of it actually

601
00:26:36,330 --> 00:26:42,120
and<font color="#CCCCCC"> we've we</font><font color="#E5E5E5"> reused one of the DLL of</font>

602
00:26:39,419 --> 00:26:44,820
the of the data rate which which has a

603
00:26:42,120 --> 00:26:47,520
signature device<font color="#CCCCCC"> callouses method</font><font color="#E5E5E5"> and we</font>

604
00:26:44,820 --> 00:26:49,559
are<font color="#E5E5E5"> evolved into</font><font color="#CCCCCC"> two to rebuild the very</font>

605
00:26:47,520 --> 00:26:53,400
version of the firmware<font color="#E5E5E5"> to - flash - we</font>

606
00:26:49,559 --> 00:26:55,290
<font color="#CCCCCC">flash there to drive so there is no we</font>

607
00:26:53,400 --> 00:26:58,140
didn't find any<font color="#E5E5E5"> really working assembler</font>

608
00:26:55,290 --> 00:27:01,530
for our compact<font color="#E5E5E5"> actually so what we did</font>

609
00:26:58,140 --> 00:27:04,559
was was kind<font color="#E5E5E5"> of the dirty way but it</font>

610
00:27:01,530 --> 00:27:07,379
works anyway so that's<font color="#E5E5E5"> fine and in fact</font>

611
00:27:04,559 --> 00:27:11,550
we<font color="#CCCCCC"> build</font><font color="#E5E5E5"> small shell code inside by by</font>

612
00:27:07,380 --> 00:27:15,060
<font color="#E5E5E5">by copying and</font>

613
00:27:11,550 --> 00:27:17,700
instructions<font color="#E5E5E5"> when when close one to each</font>

614
00:27:15,060 --> 00:27:19,399
other and then we were<font color="#E5E5E5"> able to to modify</font>

615
00:27:17,700 --> 00:27:22,470
the behavior of<font color="#E5E5E5"> the code and to to</font>

616
00:27:19,400 --> 00:27:23,910
change<font color="#E5E5E5"> the execution flow and one of the</font>

617
00:27:22,470 --> 00:27:25,470
example of things<font color="#E5E5E5"> that we didn't</font><font color="#CCCCCC"> know is</font>

618
00:27:23,910 --> 00:27:28,110
that<font color="#E5E5E5"> we we</font><font color="#CCCCCC"> used the display string</font>

619
00:27:25,470 --> 00:27:30,600
function which which is<font color="#CCCCCC"> used in the menu</font>

620
00:27:28,110 --> 00:27:33,060
to<font color="#CCCCCC"> display input password run pingu pin</font>

621
00:27:30,600 --> 00:27:34,919
and we reused it to<font color="#CCCCCC"> to to display the</font>

622
00:27:33,060 --> 00:27:38,070
actual content of<font color="#E5E5E5"> the memory at given</font>

623
00:27:34,920 --> 00:27:39,630
addresses to see to see the encryption

624
00:27:38,070 --> 00:27:44,280
keys we are setting<font color="#CCCCCC"> at the correct one</font>

625
00:27:39,630 --> 00:27:47,660
so etc etc and so if we we finally found

626
00:27:44,280 --> 00:27:51,090
what was going wrong<font color="#CCCCCC"> as we said that the</font>

627
00:27:47,660 --> 00:27:53,430
AES engine<font color="#CCCCCC"> use</font><font color="#E5E5E5"> this firmware is using</font>

628
00:27:51,090 --> 00:27:58,080
AES 60s but actually the AES engine is

629
00:27:53,430 --> 00:28:01,230
able<font color="#E5E5E5"> to to to use automotive es yes so</font>

630
00:27:58,080 --> 00:28:03,990
we<font color="#E5E5E5"> will change the way</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> firmware</font>

631
00:28:01,230 --> 00:28:06,990
initializes<font color="#CCCCCC"> the AES engine and said</font><font color="#E5E5E5"> set</font>

632
00:28:03,990 --> 00:28:10,740
it to<font color="#CCCCCC"> ACB we set the tweet to zero zero</font>

633
00:28:06,990 --> 00:28:14,430
and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> we use the we patched the</font><font color="#E5E5E5"> AES</font>

634
00:28:10,740 --> 00:28:16,650
keys to set to set a non version<font color="#CCCCCC"> non non</font>

635
00:28:14,430 --> 00:28:18,600
<font color="#E5E5E5">ILS keys and then then setting</font>

636
00:28:16,650 --> 00:28:20,310
encryption and look at the encrypted

637
00:28:18,600 --> 00:28:22,399
<font color="#E5E5E5">blobs to</font><font color="#CCCCCC"> see here</font><font color="#E5E5E5"> to compare to test</font>

638
00:28:20,310 --> 00:28:25,950
vectors of<font color="#E5E5E5"> AES to understand if</font><font color="#CCCCCC"> that</font>

639
00:28:22,400 --> 00:28:28,530
encryption was<font color="#CCCCCC"> worth</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> actually</font>

640
00:28:25,950 --> 00:28:31,830
what what was going on is that even

641
00:28:28,530 --> 00:28:33,629
though the firmware copies does<font color="#E5E5E5"> vary in</font>

642
00:28:31,830 --> 00:28:35,970
his relation of the of the crypto chip

643
00:28:33,630 --> 00:28:37,860
<font color="#CCCCCC">the crypto chip</font><font color="#E5E5E5"> use internally the the</font>

644
00:28:35,970 --> 00:28:39,990
keys in the<font color="#E5E5E5"> wrong way in the wrong order</font>

645
00:28:37,860 --> 00:28:43,350
<font color="#E5E5E5">I would say he won and</font><font color="#CCCCCC"> he</font><font color="#E5E5E5"> too was</font>

646
00:28:39,990 --> 00:28:47,430
<font color="#E5E5E5">inverted</font><font color="#CCCCCC"> and he and and</font><font color="#E5E5E5"> also by swapped</font>

647
00:28:43,350 --> 00:28:50,820
<font color="#CCCCCC">to say</font><font color="#E5E5E5"> if you have</font><font color="#CCCCCC"> DS which is 0 1 0 2 0</font>

648
00:28:47,430 --> 00:28:53,460
3 etcetera<font color="#CCCCCC"> it was due to</font><font color="#E5E5E5"> the way the or</font>

649
00:28:50,820 --> 00:28:55,080
<font color="#CCCCCC">3</font><font color="#E5E5E5"> do to the</font><font color="#CCCCCC"> one so once we</font><font color="#E5E5E5"> were able</font><font color="#CCCCCC"> to</font>

650
00:28:53,460 --> 00:28:58,740
fix this

651
00:28:55,080 --> 00:29:02,070
everything was was<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> and so our</font><font color="#CCCCCC"> befox</font>

652
00:28:58,740 --> 00:29:07,200
<font color="#E5E5E5">blood for saw was actually</font><font color="#CCCCCC"> working so I</font>

653
00:29:02,070 --> 00:29:09,780
have we have another demo here<font color="#E5E5E5"> ok so</font><font color="#CCCCCC"> you</font>

654
00:29:07,200 --> 00:29:12,300
see that the this<font color="#CCCCCC"> destroyed</font><font color="#E5E5E5"> drive here</font>

655
00:29:09,780 --> 00:29:14,940
so<font color="#E5E5E5"> we are doing the same thing we are</font>

656
00:29:12,300 --> 00:29:18,120
enabling encryption<font color="#E5E5E5"> it's quite dark but</font>

657
00:29:14,940 --> 00:29:21,810
anyway so it<font color="#E5E5E5"> asks for a</font><font color="#CCCCCC"> password here so</font>

658
00:29:18,120 --> 00:29:23,350
now after<font color="#E5E5E5"> it's generating a new secure</font>

659
00:29:21,810 --> 00:29:25,540
secure<font color="#E5E5E5"> pin</font>

660
00:29:23,350 --> 00:29:29,409
with the with those<font color="#CCCCCC"> dice here</font><font color="#E5E5E5"> so it's</font>

661
00:29:25,540 --> 00:29:33,370
six zero seven<font color="#CCCCCC"> seven</font><font color="#E5E5E5"> to nine which which</font>

662
00:29:29,410 --> 00:29:38,020
<font color="#CCCCCC">I fell on toes on the screen</font><font color="#E5E5E5"> twice and</font>

663
00:29:33,370 --> 00:29:39,459
to set up to set<font color="#CCCCCC"> up</font><font color="#E5E5E5"> encryption okay so</font>

664
00:29:38,020 --> 00:29:41,370
now what we are<font color="#CCCCCC"> doing is that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are</font>

665
00:29:39,460 --> 00:29:47,470
removing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> drive from</font><font color="#E5E5E5"> the enclosure</font>

666
00:29:41,370 --> 00:29:48,909
here<font color="#E5E5E5"> yeah we put</font><font color="#CCCCCC"> it in a</font><font color="#E5E5E5"> in a in a</font>

667
00:29:47,470 --> 00:29:51,850
reader<font color="#E5E5E5"> to access the content of the</font>

668
00:29:48,910 --> 00:29:54,400
drive<font color="#E5E5E5"> and then we run our our tool we</font>

669
00:29:51,850 --> 00:29:57,730
first<font color="#CCCCCC"> dumped the two</font><font color="#E5E5E5"> blocks that</font><font color="#CCCCCC"> are the</font>

670
00:29:54,400 --> 00:29:59,860
end of the drive and then run our our

671
00:29:57,730 --> 00:30:05,200
<font color="#E5E5E5">boot for so and we about you then then a</font>

672
00:29:59,860 --> 00:30:07,679
computer computer computer to<font color="#E5E5E5"> find the</font>

673
00:30:05,200 --> 00:30:09,940
pins<font color="#CCCCCC"> at actually this</font><font color="#E5E5E5"> version took</font>

674
00:30:07,680 --> 00:30:11,740
almost<font color="#E5E5E5"> 40 seconds but the in the new</font>

675
00:30:09,940 --> 00:30:14,290
version it's it's<font color="#E5E5E5"> a way way faster it</font>

676
00:30:11,740 --> 00:30:18,820
<font color="#CCCCCC">has been optimized</font><font color="#E5E5E5"> but it's completely</font>

677
00:30:14,290 --> 00:30:20,770
broken so we are quite<font color="#CCCCCC"> happy to well or</font>

678
00:30:18,820 --> 00:30:23,639
disappointed of having broken<font color="#E5E5E5"> another</font>

679
00:30:20,770 --> 00:30:23,639
<font color="#CCCCCC">disk oh sorry</font>

680
00:30:26,790 --> 00:30:31,990
so we were quite<font color="#CCCCCC"> a bit you have</font><font color="#E5E5E5"> broken</font>

681
00:30:29,230 --> 00:30:33,970
<font color="#E5E5E5">another</font><font color="#CCCCCC"> disk</font><font color="#E5E5E5"> but so we once we have</font>

682
00:30:31,990 --> 00:30:37,540
found<font color="#E5E5E5"> at</font><font color="#CCCCCC"> found the vulnerability we went</font>

683
00:30:33,970 --> 00:30:41,260
to<font color="#E5E5E5"> Zalman and reported the problem and a</font>

684
00:30:37,540 --> 00:30:43,180
few<font color="#E5E5E5"> weeks</font><font color="#CCCCCC"> later firmware 2.0 was out so</font>

685
00:30:41,260 --> 00:30:46,570
we were like oh nice<font color="#E5E5E5"> they fix the</font>

686
00:30:43,180 --> 00:30:48,430
vulnerability<font color="#CCCCCC"> so we checked</font><font color="#E5E5E5"> and our</font>

687
00:30:46,570 --> 00:30:50,139
brute force<font color="#CCCCCC"> err did not work anymore so</font>

688
00:30:48,430 --> 00:30:53,800
<font color="#CCCCCC">we were</font><font color="#E5E5E5"> really happy we thought they</font>

689
00:30:50,140 --> 00:30:55,570
would fixed everything<font color="#CCCCCC"> so by looking</font><font color="#E5E5E5"> at</font>

690
00:30:53,800 --> 00:30:58,090
the new version<font color="#E5E5E5"> what we realize is that</font>

691
00:30:55,570 --> 00:31:00,850
the pin was<font color="#E5E5E5"> actually now padded with FD</font>

692
00:30:58,090 --> 00:31:02,409
instead of zeros<font color="#E5E5E5"> item so at some point I</font>

693
00:31:00,850 --> 00:31:04,270
<font color="#CCCCCC">think we're</font><font color="#E5E5E5"> done man realized that there</font>

694
00:31:02,410 --> 00:31:07,300
were collisions when the pin ended up

695
00:31:04,270 --> 00:31:09,850
with zero<font color="#E5E5E5"> and they just patched padding</font>

696
00:31:07,300 --> 00:31:12,879
to<font color="#E5E5E5"> avoid that and so we just had</font><font color="#CCCCCC"> to</font>

697
00:31:09,850 --> 00:31:15,820
update<font color="#E5E5E5"> the brute</font><font color="#CCCCCC"> force ER and everything</font>

698
00:31:12,880 --> 00:31:18,180
was broken<font color="#CCCCCC"> again when I</font><font color="#E5E5E5"> think that</font><font color="#CCCCCC"> we</font>

699
00:31:15,820 --> 00:31:21,730
<font color="#CCCCCC">didn't mention</font><font color="#E5E5E5"> regarding his drive is</font>

700
00:31:18,180 --> 00:31:24,370
<font color="#CCCCCC">are the encryption keys</font><font color="#E5E5E5"> so we know how</font>

701
00:31:21,730 --> 00:31:26,170
the pin is verified and<font color="#CCCCCC"> we were</font><font color="#E5E5E5"> looking</font>

702
00:31:24,370 --> 00:31:28,209
for the<font color="#E5E5E5"> encryption keys to check if they</font>

703
00:31:26,170 --> 00:31:32,220
were actually<font color="#E5E5E5"> random and</font><font color="#CCCCCC"> that the user</font>

704
00:31:28,210 --> 00:31:35,050
data<font color="#E5E5E5"> could not be a recovered easily by</font>

705
00:31:32,220 --> 00:31:36,669
forcing the<font color="#CCCCCC"> s keys so if you look</font><font color="#E5E5E5"> at the</font>

706
00:31:35,050 --> 00:31:38,710
decrypted block

707
00:31:36,669 --> 00:31:41,139
you have the right<font color="#E5E5E5"> pin you have your any</font>

708
00:31:38,710 --> 00:31:42,909
either that I mentioned<font color="#E5E5E5"> that is used to</font>

709
00:31:41,139 --> 00:31:45,729
<font color="#E5E5E5">verify</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the pin you entered was</font>

710
00:31:42,909 --> 00:31:47,859
actually correct<font color="#CCCCCC"> and then after quite a</font>

711
00:31:45,730 --> 00:31:50,830
bit of<font color="#CCCCCC"> zeros</font><font color="#E5E5E5"> you have a big blob</font><font color="#CCCCCC"> of high</font>

712
00:31:47,859 --> 00:31:53,710
entropy<font color="#E5E5E5"> data that we think are used that</font>

713
00:31:50,830 --> 00:31:57,279
as<font color="#CCCCCC"> AAS</font><font color="#E5E5E5"> keys we didn't actually go and in</font>

714
00:31:53,710 --> 00:32:02,679
<font color="#CCCCCC">Reverse to</font><font color="#E5E5E5"> verify that really think with</font>

715
00:31:57,279 --> 00:32:04,659
hope it's<font color="#E5E5E5"> that so to sum up on the V 500</font>

716
00:32:02,679 --> 00:32:06,549
we<font color="#CCCCCC"> have a few big</font><font color="#E5E5E5"> issues the first one</font>

717
00:32:04,659 --> 00:32:07,090
is that the<font color="#CCCCCC"> t that these keys are so on</font>

718
00:32:06,549 --> 00:32:09,730
<font color="#E5E5E5">the drive</font>

719
00:32:07,090 --> 00:32:11,408
so it's<font color="#E5E5E5"> instantaneous</font><font color="#CCCCCC"> to recover the</font>

720
00:32:09,730 --> 00:32:14,649
keys you just have to plug the drive on

721
00:32:11,409 --> 00:32:17,230
a usual USB SATA<font color="#E5E5E5"> bridge also</font><font color="#CCCCCC"> the pin is</font>

722
00:32:14,649 --> 00:32:19,178
pretty easily<font color="#E5E5E5"> bird forced less than six</font>

723
00:32:17,230 --> 00:32:22,029
seconds<font color="#E5E5E5"> on a normal PC that's pretty bad</font>

724
00:32:19,179 --> 00:32:24,399
and one interesting thing<font color="#E5E5E5"> that would be</font>

725
00:32:22,029 --> 00:32:26,289
nice to talk with cryptographers is that

726
00:32:24,399 --> 00:32:30,070
one<font color="#E5E5E5"> of the EAS keys is actually our</font>

727
00:32:26,289 --> 00:32:32,679
<font color="#E5E5E5">zeros and since the two keys are swept</font>

728
00:32:30,070 --> 00:32:35,619
the key that<font color="#E5E5E5"> is doing the actual AES</font>

729
00:32:32,679 --> 00:32:38,259
encryption of user data<font color="#E5E5E5"> is zero so</font>

730
00:32:35,619 --> 00:32:40,299
that's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> trivial to</font><font color="#E5E5E5"> exploit actually</font>

731
00:32:38,259 --> 00:32:42,999
because there there is the tweak and the

732
00:32:40,299 --> 00:32:44,769
other key but it's<font color="#E5E5E5"> pretty bad anyway so</font>

733
00:32:42,999 --> 00:32:47,230
we only have one practical attack that

734
00:32:44,769 --> 00:32:50,980
is recovering the pin in<font color="#E5E5E5"> six seconds but</font>

735
00:32:47,230 --> 00:32:52,690
I think it's good enough so for those

736
00:32:50,980 --> 00:32:54,820
<font color="#E5E5E5">two drives you have a several security</font>

737
00:32:52,690 --> 00:32:57,190
properties that you<font color="#CCCCCC"> want you have when</font>

738
00:32:54,820 --> 00:32:59,950
using<font color="#E5E5E5"> so two such drives to protect your</font>

739
00:32:57,190 --> 00:33:01,720
data<font color="#E5E5E5"> and the first one is trivial is</font>

740
00:32:59,950 --> 00:33:03,759
basic crypto you want your data to be

741
00:33:01,720 --> 00:33:06,970
encrypted<font color="#E5E5E5"> on the disk thankfully both</font>

742
00:33:03,759 --> 00:33:08,590
drive to that<font color="#E5E5E5"> and you want the disk to</font>

743
00:33:06,970 --> 00:33:10,749
be tight enclosure so that the attacker

744
00:33:08,590 --> 00:33:13,299
cannot access<font color="#CCCCCC"> it by directly reading the</font>

745
00:33:10,749 --> 00:33:14,950
<font color="#E5E5E5">disk so the SH if I haven't read</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> okay</font>

746
00:33:13,299 --> 00:33:17,049
and<font color="#E5E5E5"> that regard with the</font><font color="#CCCCCC"> V 500 is</font>

747
00:33:14,950 --> 00:33:18,909
<font color="#E5E5E5">failing</font><font color="#CCCCCC"> and of course the problem is</font>

748
00:33:17,049 --> 00:33:21,609
<font color="#E5E5E5">that both drives are failing to store</font>

749
00:33:18,909 --> 00:33:24,730
the secrets securely the<font color="#CCCCCC"> ACG 500 is</font>

750
00:33:21,609 --> 00:33:27,549
doomed by<font color="#E5E5E5"> is media logic backdoor that</font>

751
00:33:24,730 --> 00:33:30,879
the guy cannot fix and the V 500<font color="#E5E5E5"> well</font>

752
00:33:27,549 --> 00:33:34,450
<font color="#E5E5E5">the keys are</font><font color="#CCCCCC"> zero or</font><font color="#E5E5E5"> really trivial to</font>

753
00:33:30,879 --> 00:33:36,428
break and there's 8,500 doesn't have a

754
00:33:34,450 --> 00:33:38,649
random<font color="#CCCCCC"> drive key since it's</font><font color="#E5E5E5"> basically</font>

755
00:33:36,429 --> 00:33:43,570
the model<font color="#E5E5E5"> and serial number and the</font><font color="#CCCCCC"> V</font>

756
00:33:38,649 --> 00:33:46,268
500 we think have a good<font color="#E5E5E5"> a good key so</font>

757
00:33:43,570 --> 00:33:48,189
<font color="#CCCCCC">not as we</font><font color="#E5E5E5"> had fun broke</font><font color="#CCCCCC"> broken</font><font color="#E5E5E5"> breaking</font>

758
00:33:46,269 --> 00:33:50,169
those two drives<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> we've locked</font>

759
00:33:48,190 --> 00:33:54,850
looked at several draw

760
00:33:50,169 --> 00:33:56,889
<font color="#CCCCCC">as in models and we've realized some</font>

761
00:33:54,850 --> 00:34:00,129
weird things looking<font color="#E5E5E5"> at the overall</font>

762
00:33:56,889 --> 00:34:02,080
<font color="#E5E5E5">encryption encrypted drive market and I</font>

763
00:34:00,129 --> 00:34:06,070
<font color="#E5E5E5">think it's interesting to take a step</font>

764
00:34:02,080 --> 00:34:07,960
back and look at what's<font color="#E5E5E5"> on the market so</font>

765
00:34:06,070 --> 00:34:09,969
the first really weird thing that<font color="#CCCCCC"> we</font>

766
00:34:07,960 --> 00:34:13,780
have discovered well not discovered but

767
00:34:09,969 --> 00:34:16,209
seen is das<font color="#CCCCCC"> PI</font><font color="#E5E5E5"> keys that we have seen</font>

768
00:34:13,780 --> 00:34:18,220
before<font color="#CCCCCC"> if you look at the guitar where</font>

769
00:34:16,210 --> 00:34:20,409
crypto paper by<font color="#E5E5E5"> the German guy as I</font>

770
00:34:18,219 --> 00:34:22,299
mentioned earlier you<font color="#CCCCCC"> can see that on</font>

771
00:34:20,409 --> 00:34:24,549
the<font color="#E5E5E5"> Western Digital drives you have</font>

772
00:34:22,299 --> 00:34:26,710
<font color="#E5E5E5">three different chip manufacturers that</font>

773
00:34:24,549 --> 00:34:29,409
<font color="#E5E5E5">have nothing in common</font><font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> G</font>

774
00:34:26,710 --> 00:34:31,750
micron<font color="#CCCCCC"> initio and PL X and all those</font>

775
00:34:29,409 --> 00:34:35,020
three<font color="#E5E5E5"> manufacturers at some point use</font>

776
00:34:31,750 --> 00:34:38,260
the AES pikeys so three different

777
00:34:35,020 --> 00:34:41,409
<font color="#CCCCCC">magneri</font><font color="#E5E5E5"> factors</font><font color="#CCCCCC"> the same word</font><font color="#E5E5E5"> keys why</font>

778
00:34:38,260 --> 00:34:43,389
<font color="#E5E5E5">and if you look</font><font color="#CCCCCC"> a bit deeper you</font><font color="#E5E5E5"> can see</font>

779
00:34:41,409 --> 00:34:46,240
that the AES<font color="#CCCCCC"> mod constants that we have</font>

780
00:34:43,389 --> 00:34:47,619
talked about that we<font color="#E5E5E5"> patch to use ECB so</font>

781
00:34:46,239 --> 00:34:50,348
they are the<font color="#CCCCCC"> same in the Western Digital</font>

782
00:34:47,619 --> 00:34:52,960
drives in the initial code that we could

783
00:34:50,349 --> 00:34:56,559
find on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Lenovo drive for</font><font color="#CCCCCC"> example or</font>

784
00:34:52,960 --> 00:34:59,140
the African<font color="#E5E5E5"> drives so you have and then</font>

785
00:34:56,559 --> 00:35:00,910
once<font color="#CCCCCC"> again something very similar the</font>

786
00:34:59,140 --> 00:35:03,339
<font color="#E5E5E5">CPUs are different the manufacturers are</font>

787
00:35:00,910 --> 00:35:06,368
<font color="#E5E5E5">different and you</font><font color="#CCCCCC"> can also find in</font><font color="#E5E5E5"> the</font>

788
00:35:03,339 --> 00:35:08,799
<font color="#CCCCCC">Macan</font><font color="#E5E5E5"> Locker they have some</font><font color="#CCCCCC"> C headers</font>

789
00:35:06,369 --> 00:35:12,460
creating 2006 that include the mode

790
00:35:08,799 --> 00:35:15,460
<font color="#E5E5E5">constants so we were trying to find</font><font color="#CCCCCC"> an</font>

791
00:35:12,460 --> 00:35:18,609
<font color="#E5E5E5">explanation so how would</font><font color="#CCCCCC"> that end up in</font>

792
00:35:15,460 --> 00:35:21,400
<font color="#E5E5E5">in so many drives so our hypothesis is</font>

793
00:35:18,609 --> 00:35:24,520
<font color="#CCCCCC">that at some point</font><font color="#E5E5E5"> some guy did an</font><font color="#CCCCCC"> Aes</font>

794
00:35:21,400 --> 00:35:27,250
implementation for Hardware in valve a

795
00:35:24,520 --> 00:35:30,549
lock the HDL<font color="#CCCCCC"> an</font><font color="#E5E5E5"> IP as the saying the</font>

796
00:35:27,250 --> 00:35:32,710
hardware design<font color="#CCCCCC"> mode our world</font><font color="#E5E5E5"> that came</font>

797
00:35:30,549 --> 00:35:34,869
with an<font color="#E5E5E5"> example code and that example</font>

798
00:35:32,710 --> 00:35:37,690
<font color="#E5E5E5">code may have been copy pasted by all</font>

799
00:35:34,869 --> 00:35:40,480
the manufacturers another<font color="#E5E5E5"> explanation</font>

800
00:35:37,690 --> 00:35:42,880
that could could<font color="#CCCCCC"> be</font><font color="#E5E5E5"> is that most of the</font>

801
00:35:40,480 --> 00:35:44,200
drives<font color="#E5E5E5"> were actually used I</font><font color="#CCCCCC"> mean most of</font>

802
00:35:42,880 --> 00:35:45,190
<font color="#E5E5E5">the chips were actually used</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> a</font>

803
00:35:44,200 --> 00:35:47,410
Western<font color="#E5E5E5"> Digital</font>

804
00:35:45,190 --> 00:35:49,030
<font color="#E5E5E5">so maybe Western Digital was one of the</font>

805
00:35:47,410 --> 00:35:52,930
first<font color="#CCCCCC"> manufacturers to try to do</font>

806
00:35:49,030 --> 00:35:55,119
encrypted security<font color="#CCCCCC"> and maybe they bought</font>

807
00:35:52,930 --> 00:35:56,440
some ASAP and they gave the code to all

808
00:35:55,119 --> 00:35:59,349
the manufacturers so that they could

809
00:35:56,440 --> 00:36:01,240
<font color="#E5E5E5">implement it and maybe came with the AES</font>

810
00:35:59,349 --> 00:36:03,850
constant that we have seen and also<font color="#E5E5E5"> the</font>

811
00:36:01,240 --> 00:36:05,379
<font color="#CCCCCC">a spy keys so if</font>

812
00:36:03,850 --> 00:36:07,569
it's actually the<font color="#E5E5E5"> case we have no proof</font>

813
00:36:05,380 --> 00:36:09,550
it's actually the<font color="#E5E5E5"> case but it's pretty</font>

814
00:36:07,570 --> 00:36:11,800
<font color="#E5E5E5">good explanation I guess</font><font color="#CCCCCC"> the</font>

815
00:36:09,550 --> 00:36:13,750
consequences are that<font color="#E5E5E5"> almost all the</font>

816
00:36:11,800 --> 00:36:16,750
drive on the market are using the same a

817
00:36:13,750 --> 00:36:18,360
es<font color="#CCCCCC"> Co</font><font color="#E5E5E5"> so you have no diversity and if</font>

818
00:36:16,750 --> 00:36:20,740
there is a<font color="#CCCCCC"> backdoor</font>

819
00:36:18,360 --> 00:36:22,810
vulnerability in the<font color="#E5E5E5"> a escort then when</font>

820
00:36:20,740 --> 00:36:25,419
one<font color="#E5E5E5"> ability to rule them all</font><font color="#CCCCCC"> all the</font>

821
00:36:22,810 --> 00:36:28,090
drives<font color="#E5E5E5"> would be broken so when we saw</font>

822
00:36:25,420 --> 00:36:31,000
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> like and if you look at the PCBs</font>

823
00:36:28,090 --> 00:36:33,100
you realize that<font color="#E5E5E5"> for example Zalman the</font>

824
00:36:31,000 --> 00:36:34,690
drive<font color="#CCCCCC"> the enclosure</font><font color="#E5E5E5"> is branded</font><font color="#CCCCCC"> salmon</font>

825
00:36:33,100 --> 00:36:37,060
but<font color="#E5E5E5"> we know of at least three</font><font color="#CCCCCC"> different</font>

826
00:36:34,690 --> 00:36:39,520
manufacturers<font color="#CCCCCC"> of the PCB</font><font color="#E5E5E5"> used in hands</font>

827
00:36:37,060 --> 00:36:41,950
<font color="#E5E5E5">on man if you look at the Lenovo</font><font color="#CCCCCC"> drive</font>

828
00:36:39,520 --> 00:36:43,720
<font color="#E5E5E5">Lenovo is actually</font><font color="#CCCCCC"> manufactured by a pre</font>

829
00:36:41,950 --> 00:36:46,660
<font color="#CCCCCC">con which is the case for</font><font color="#E5E5E5"> also I storage</font>

830
00:36:43,720 --> 00:36:48,790
so you<font color="#CCCCCC"> would have like</font><font color="#E5E5E5"> ten different</font>

831
00:36:46,660 --> 00:36:50,680
brands<font color="#CCCCCC"> but actually two different PCBs</font>

832
00:36:48,790 --> 00:36:54,040
and<font color="#E5E5E5"> two different</font><font color="#CCCCCC"> cores</font><font color="#E5E5E5"> and maybe only</font>

833
00:36:50,680 --> 00:36:56,500
one<font color="#CCCCCC"> AES core so do it</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> hard</font>

834
00:36:54,040 --> 00:36:59,740
for for a user<font color="#E5E5E5"> to tell what's inside</font><font color="#CCCCCC"> the</font>

835
00:36:56,500 --> 00:37:01,420
drive without looking in detail so what

836
00:36:59,740 --> 00:37:03,279
I think<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> interesting is</font><font color="#E5E5E5"> also to</font>

837
00:37:01,420 --> 00:37:05,560
your to have<font color="#E5E5E5"> a better design to propose</font>

838
00:37:03,280 --> 00:37:08,110
so that<font color="#E5E5E5"> even though the chip can</font><font color="#CCCCCC"> be</font>

839
00:37:05,560 --> 00:37:10,120
broken<font color="#E5E5E5"> if the guy that did the chip was</font>

840
00:37:08,110 --> 00:37:12,910
not really cryptographer<font color="#E5E5E5"> you can have</font>

841
00:37:10,120 --> 00:37:14,130
<font color="#CCCCCC">something that that is</font><font color="#E5E5E5"> a bit secure so</font>

842
00:37:12,910 --> 00:37:17,859
the first thing when you<font color="#E5E5E5"> do something</font>

843
00:37:14,130 --> 00:37:19,720
<font color="#E5E5E5">implement using crypto is before</font>

844
00:37:17,860 --> 00:37:22,120
everything<font color="#E5E5E5"> before doing design before</font>

845
00:37:19,720 --> 00:37:23,500
<font color="#E5E5E5">doing anything</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> hire cryptographer</font>

846
00:37:22,120 --> 00:37:25,450
to make sure you're not doing stupid

847
00:37:23,500 --> 00:37:30,310
mistakes that<font color="#E5E5E5"> do like the ones they did</font>

848
00:37:25,450 --> 00:37:32,230
<font color="#E5E5E5">to avoid having all</font><font color="#CCCCCC"> 0s keys the main</font>

849
00:37:30,310 --> 00:37:34,240
problem for manufacturers and<font color="#CCCCCC"> gentleman</font>

850
00:37:32,230 --> 00:37:36,160
actually<font color="#CCCCCC"> told</font><font color="#E5E5E5"> us one and on another</font>

851
00:37:34,240 --> 00:37:38,140
drive they actually told<font color="#E5E5E5"> us that they</font>

852
00:37:36,160 --> 00:37:40,750
don't<font color="#E5E5E5"> want the user to lose their data</font>

853
00:37:38,140 --> 00:37:42,609
so they want if during closure is broken

854
00:37:40,750 --> 00:37:44,440
<font color="#CCCCCC">they want the user to be able</font><font color="#E5E5E5"> to put it</font>

855
00:37:42,610 --> 00:37:48,220
<font color="#E5E5E5">in another enclosure and access the data</font>

856
00:37:44,440 --> 00:37:50,950
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> quite a problem because well if</font>

857
00:37:48,220 --> 00:37:52,629
<font color="#E5E5E5">you if you want the user to be access to</font>

858
00:37:50,950 --> 00:37:54,970
be<font color="#E5E5E5"> able to access</font><font color="#CCCCCC"> it data the only way</font>

859
00:37:52,630 --> 00:37:58,030
you have is either you display your

860
00:37:54,970 --> 00:38:00,160
master key<font color="#E5E5E5"> like on the</font><font color="#CCCCCC"> SSG 500 except</font>

861
00:37:58,030 --> 00:38:05,170
that to be secure<font color="#CCCCCC"> in theory you should</font>

862
00:38:00,160 --> 00:38:07,029
be displaying a 512 bits keys that<font color="#E5E5E5"> the</font>

863
00:38:05,170 --> 00:38:09,220
user would have to<font color="#E5E5E5"> back</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> so it's not</font>

864
00:38:07,030 --> 00:38:11,230
going to happen<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> other</font><font color="#E5E5E5"> option</font><font color="#CCCCCC"> is</font>

865
00:38:09,220 --> 00:38:13,000
to<font color="#E5E5E5"> store the secrets on the drive but if</font>

866
00:38:11,230 --> 00:38:15,160
you store the secrets on<font color="#CCCCCC"> the drive it's</font>

867
00:38:13,000 --> 00:38:17,740
not really possible to have real

868
00:38:15,160 --> 00:38:19,540
security<font color="#E5E5E5"> because the</font><font color="#CCCCCC"> Hecker just have to</font>

869
00:38:17,740 --> 00:38:23,140
read the drive and implement the<font color="#E5E5E5"> brute</font>

870
00:38:19,540 --> 00:38:24,730
<font color="#E5E5E5">force</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> reversing</font><font color="#CCCCCC"> you drive</font><font color="#E5E5E5"> so the</font>

871
00:38:23,140 --> 00:38:26,859
only thing you can do to have at least

872
00:38:24,730 --> 00:38:28,690
<font color="#CCCCCC">some security is to be a bit less</font>

873
00:38:26,860 --> 00:38:31,660
user-friendly<font color="#CCCCCC"> install the secrets in</font><font color="#E5E5E5"> the</font>

874
00:38:28,690 --> 00:38:33,760
enclosure<font color="#CCCCCC"> the goal is to be to make it</font>

875
00:38:31,660 --> 00:38:35,470
harder for the attacker to<font color="#E5E5E5"> access the</font>

876
00:38:33,760 --> 00:38:38,830
secret so<font color="#E5E5E5"> you cannot brute force your</font>

877
00:38:35,470 --> 00:38:41,410
<font color="#CCCCCC">PIN</font><font color="#E5E5E5"> so in the normal way to do that is</font>

878
00:38:38,830 --> 00:38:43,960
to go<font color="#CCCCCC"> back to the smart</font><font color="#E5E5E5"> card world and</font>

879
00:38:41,410 --> 00:38:46,118
to the<font color="#E5E5E5"> hardware and secure</font><font color="#CCCCCC"> hardware</font>

880
00:38:43,960 --> 00:38:48,520
<font color="#E5E5E5">world and to store that on a component</font>

881
00:38:46,119 --> 00:38:50,140
<font color="#E5E5E5">that cannot be read easily so if you</font>

882
00:38:48,520 --> 00:38:52,270
want<font color="#E5E5E5"> to do a</font><font color="#CCCCCC"> chip drive where you don't</font>

883
00:38:50,140 --> 00:38:54,850
want<font color="#E5E5E5"> to pay for a secure thing you can</font>

884
00:38:52,270 --> 00:38:57,130
use like you pick or<font color="#E5E5E5"> avi micron</font>

885
00:38:54,850 --> 00:38:59,200
microcontroller which has some internal

886
00:38:57,130 --> 00:39:01,270
storage that you cannot read if you put

887
00:38:59,200 --> 00:39:03,220
the protection bits<font color="#E5E5E5"> so that's not</font>

888
00:39:01,270 --> 00:39:05,230
<font color="#E5E5E5">perfect</font><font color="#CCCCCC"> because you go</font><font color="#E5E5E5"> to any Chinese</font>

889
00:39:03,220 --> 00:39:08,560
company<font color="#CCCCCC"> you can't get your dump of your</font>

890
00:39:05,230 --> 00:39:10,450
in your pick or<font color="#CCCCCC"> AVR</font><font color="#E5E5E5"> for one thousand</font><font color="#CCCCCC"> or</font>

891
00:39:08,560 --> 00:39:13,930
five thousand<font color="#E5E5E5"> US dollars</font><font color="#CCCCCC"> depending on</font>

892
00:39:10,450 --> 00:39:16,089
<font color="#E5E5E5">the model but we have a design</font><font color="#CCCCCC"> that I</font>

893
00:39:13,930 --> 00:39:17,529
think it's pretty<font color="#E5E5E5"> good it's going</font><font color="#CCCCCC"> to be</font>

894
00:39:16,090 --> 00:39:21,480
a bit more expensive<font color="#CCCCCC"> but it's supposed</font>

895
00:39:17,530 --> 00:39:23,859
<font color="#E5E5E5">to be secure</font><font color="#CCCCCC"> so the ID is not you</font>

896
00:39:21,480 --> 00:39:26,109
replace the security<font color="#E5E5E5"> that you have seen</font>

897
00:39:23,859 --> 00:39:29,140
was in<font color="#E5E5E5"> CPU inside the system</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> chip</font>

898
00:39:26,109 --> 00:39:30,700
and add a secure<font color="#E5E5E5"> microcontroller so this</font>

899
00:39:29,140 --> 00:39:33,009
secure<font color="#E5E5E5"> microcontroller has some</font>

900
00:39:30,700 --> 00:39:34,899
interesting<font color="#CCCCCC"> properties</font><font color="#E5E5E5"> usually you have</font>

901
00:39:33,010 --> 00:39:38,230
an integrated crypto engine that is

902
00:39:34,900 --> 00:39:40,390
using a fused AES key<font color="#CCCCCC"> so every</font>

903
00:39:38,230 --> 00:39:42,490
microcontroller will be provision in the

904
00:39:40,390 --> 00:39:45,160
factory with<font color="#CCCCCC"> a really random</font>

905
00:39:42,490 --> 00:39:47,709
AES key that<font color="#E5E5E5"> will be fused and the</font><font color="#CCCCCC"> in</font>

906
00:39:45,160 --> 00:39:49,810
<font color="#CCCCCC">turn the what's interesting here is that</font>

907
00:39:47,710 --> 00:39:52,060
<font color="#CCCCCC">even</font><font color="#E5E5E5"> if you run code</font><font color="#CCCCCC"> on the secure</font>

908
00:39:49,810 --> 00:39:54,460
microcontroller<font color="#CCCCCC"> you will not</font><font color="#E5E5E5"> be able to</font>

909
00:39:52,060 --> 00:39:57,009
<font color="#CCCCCC">dump the key because it's only</font>

910
00:39:54,460 --> 00:39:58,930
accessible by<font color="#E5E5E5"> the</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> engine so you use</font>

911
00:39:57,010 --> 00:40:01,330
that AES engine and the fuse AES key

912
00:39:58,930 --> 00:40:03,730
inside<font color="#E5E5E5"> the microcontroller</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> store and</font>

913
00:40:01,330 --> 00:40:06,910
encrypt the pin hash and the disk

914
00:40:03,730 --> 00:40:08,440
encryption keys so the user enters the

915
00:40:06,910 --> 00:40:10,629
pin the pin is given to the secure

916
00:40:08,440 --> 00:40:12,369
<font color="#E5E5E5">microcontroller it verifies that the pin</font>

917
00:40:10,630 --> 00:40:14,369
is<font color="#E5E5E5"> correct and then</font><font color="#CCCCCC"> send the disk keys</font>

918
00:40:12,369 --> 00:40:17,710
to the CPU and everything is as before

919
00:40:14,369 --> 00:40:20,680
<font color="#E5E5E5">however if an attacker needs to break</font>

920
00:40:17,710 --> 00:40:22,750
your key and<font color="#CCCCCC"> recover your data if you</font>

921
00:40:20,680 --> 00:40:25,480
<font color="#E5E5E5">implement your</font><font color="#CCCCCC"> security correctly the</font>

922
00:40:22,750 --> 00:40:26,920
<font color="#CCCCCC">only way the attacker has is to go</font>

923
00:40:25,480 --> 00:40:29,230
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> the secure microcontroller</font>

924
00:40:26,920 --> 00:40:31,119
<font color="#E5E5E5">physically attack it or find a</font>

925
00:40:29,230 --> 00:40:34,210
vulnerability<font color="#E5E5E5"> which is pretty rare</font>

926
00:40:31,119 --> 00:40:36,579
<font color="#E5E5E5">secur microcontroller</font><font color="#CCCCCC"> uncapped the chip</font>

927
00:40:34,210 --> 00:40:39,460
<font color="#CCCCCC">and read the data out of the diffuses to</font>

928
00:40:36,579 --> 00:40:42,130
<font color="#CCCCCC">recover everything</font><font color="#E5E5E5"> so that means an</font>

929
00:40:39,460 --> 00:40:44,829
<font color="#E5E5E5">attacker needs to do physically advanced</font>

930
00:40:42,130 --> 00:40:50,319
attacks on each<font color="#CCCCCC"> drive he wants to break</font>

931
00:40:44,829 --> 00:40:52,240
<font color="#CCCCCC">so that's pretty good so to conclude on</font>

932
00:40:50,319 --> 00:40:53,769
the children<font color="#E5E5E5"> that we have seen what is</font>

933
00:40:52,240 --> 00:40:55,450
really interesting<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that two different</font>

934
00:40:53,769 --> 00:40:58,660
companies<font color="#E5E5E5"> managed to up their</font>

935
00:40:55,450 --> 00:41:00,220
crypto in very interesting ways<font color="#CCCCCC"> we</font>

936
00:40:58,660 --> 00:41:02,980
<font color="#E5E5E5">actually reported</font><font color="#CCCCCC"> a vulnerability in</font>

937
00:41:00,220 --> 00:41:05,859
<font color="#E5E5E5">June</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> some firmware updates followed</font>

938
00:41:02,980 --> 00:41:07,900
unfortunately for<font color="#E5E5E5"> the Aichi 500 the</font>

939
00:41:05,859 --> 00:41:11,440
<font color="#E5E5E5">media logic backdoors that backdoor</font>

940
00:41:07,900 --> 00:41:13,630
makes it or sorry debug mean<font color="#CCCCCC"> makes it</font>

941
00:41:11,440 --> 00:41:19,089
<font color="#E5E5E5">very hard for the guy to fix it</font><font color="#CCCCCC"> it's</font>

942
00:41:13,630 --> 00:41:21,640
<font color="#E5E5E5">actually pretty impossible</font><font color="#CCCCCC"> and well so</font>

943
00:41:19,089 --> 00:41:23,230
what should<font color="#E5E5E5"> manufacturer do well we said</font>

944
00:41:21,640 --> 00:41:25,660
they should really hire cryptographers

945
00:41:23,230 --> 00:41:28,839
to do the crypto design and I think what

946
00:41:25,660 --> 00:41:30,759
<font color="#CCCCCC">it they should do</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> though it will</font>

947
00:41:28,839 --> 00:41:32,589
not be perfectly secure<font color="#E5E5E5"> if they want to</font>

948
00:41:30,759 --> 00:41:35,499
<font color="#E5E5E5">have cheap drives and if you want to</font>

949
00:41:32,589 --> 00:41:38,589
have customers to believe that your

950
00:41:35,499 --> 00:41:40,180
drive is<font color="#CCCCCC"> actually secure you could they</font>

951
00:41:38,589 --> 00:41:42,190
could publish the crypto design that

952
00:41:40,180 --> 00:41:43,569
<font color="#E5E5E5">they are using</font><font color="#CCCCCC"> without compromising</font>

953
00:41:42,190 --> 00:41:45,670
security because if it was done

954
00:41:43,569 --> 00:41:46,660
<font color="#CCCCCC">correctly</font><font color="#E5E5E5"> then having information</font><font color="#CCCCCC"> with</font>

955
00:41:45,670 --> 00:41:49,089
the crypto design<font color="#E5E5E5"> doesn't change</font>

956
00:41:46,660 --> 00:41:51,670
anything<font color="#E5E5E5"> but you as a</font><font color="#CCCCCC"> customer could</font>

957
00:41:49,089 --> 00:41:54,069
<font color="#E5E5E5">have some information of how is that</font>

958
00:41:51,670 --> 00:41:56,349
stored<font color="#CCCCCC"> ever did</font><font color="#E5E5E5"> they think about</font>

959
00:41:54,069 --> 00:41:59,529
security<font color="#CCCCCC"> that that what</font><font color="#E5E5E5"> he says they</font>

960
00:41:56,349 --> 00:42:01,150
could do bug bounties and<font color="#CCCCCC"> I did say but</font>

961
00:41:59,529 --> 00:42:04,539
I think publishing the crypto design

962
00:42:01,150 --> 00:42:07,299
<font color="#E5E5E5">would</font><font color="#CCCCCC"> be a good step so they take away</font>

963
00:42:04,539 --> 00:42:09,880
<font color="#E5E5E5">for you</font><font color="#CCCCCC"> for we think</font><font color="#E5E5E5"> from this</font>

964
00:42:07,299 --> 00:42:12,450
<font color="#E5E5E5">presentation is we managed</font><font color="#CCCCCC"> to break the</font>

965
00:42:09,880 --> 00:42:14,559
<font color="#CCCCCC">to disk in</font><font color="#E5E5E5"> about one man month and</font>

966
00:42:12,450 --> 00:42:16,509
really<font color="#E5E5E5"> don't trust the product you</font>

967
00:42:14,559 --> 00:42:20,019
you're buying by default you should

968
00:42:16,509 --> 00:42:23,259
audit<font color="#E5E5E5"> them and actually do hack those</font>

969
00:42:20,019 --> 00:42:27,089
<font color="#E5E5E5">drive it's pretty funny it's not that</font>

970
00:42:23,259 --> 00:42:29,890
hard<font color="#E5E5E5"> and it's fun so thank you very much</font>

971
00:42:27,089 --> 00:42:31,960
<font color="#CCCCCC">we didn't do live demos but we have</font>

972
00:42:29,890 --> 00:42:33,970
everything<font color="#E5E5E5"> here to do the live demos so</font>

973
00:42:31,960 --> 00:42:36,819
if you want<font color="#E5E5E5"> to see how we do it in real</font>

974
00:42:33,970 --> 00:42:39,660
<font color="#CCCCCC">time you can ask</font><font color="#E5E5E5"> and we'll do the demo</font>

975
00:42:36,819 --> 00:42:41,980
<font color="#E5E5E5">and also we are going to release a paper</font>

976
00:42:39,660 --> 00:42:44,140
<font color="#E5E5E5">associated</font><font color="#CCCCCC"> with the slides</font><font color="#E5E5E5"> so you have</font>

977
00:42:41,980 --> 00:42:45,260
<font color="#E5E5E5">more details in the</font><font color="#CCCCCC"> paper</font><font color="#E5E5E5"> and I</font>

978
00:42:44,140 --> 00:42:48,319
encourage you<font color="#CCCCCC"> to really</font>

979
00:42:45,260 --> 00:42:59,240
if you have questions or anything thank

980
00:42:48,320 --> 00:43:09,050
you very<font color="#E5E5E5"> much and so in the</font><font color="#CCCCCC"> kuma</font>

981
00:42:59,240 --> 00:43:11,810
pregunta they only change the way<font color="#CCCCCC"> that</font>

982
00:43:09,050 --> 00:43:14,330
<font color="#E5E5E5">they</font><font color="#CCCCCC"> put</font><font color="#E5E5E5"> the pin right they only take</font>

983
00:43:11,810 --> 00:43:17,960
<font color="#CCCCCC">the bite from 0 to F D and then you were</font>

984
00:43:14,330 --> 00:43:23,210
<font color="#E5E5E5">still able to</font><font color="#CCCCCC"> brute-force</font><font color="#E5E5E5"> it right</font><font color="#CCCCCC"> yes</font>

985
00:43:17,960 --> 00:43:28,130
in<font color="#E5E5E5"> fact in fact there's the</font><font color="#CCCCCC"> guys of sky</font>

986
00:43:23,210 --> 00:43:30,530
digital made made<font color="#E5E5E5"> made female patch we</font>

987
00:43:28,130 --> 00:43:32,480
didn't have any news from the<font color="#E5E5E5"> from the</font>

988
00:43:30,530 --> 00:43:34,430
guys of the<font color="#CCCCCC"> V 500 so I think</font><font color="#E5E5E5"> that the</font>

989
00:43:32,480 --> 00:43:37,640
correction of the the padding thing is

990
00:43:34,430 --> 00:43:40,580
not related<font color="#E5E5E5"> to</font><font color="#CCCCCC"> our study</font><font color="#E5E5E5"> they have</font>

991
00:43:37,640 --> 00:43:48,799
acknowledged the<font color="#CCCCCC"> building stuff</font><font color="#E5E5E5"> but I</font>

992
00:43:40,580 --> 00:43:51,259
think we reported the brute force<font color="#CCCCCC"> and</font>

993
00:43:48,800 --> 00:43:54,380
the padding<font color="#E5E5E5"> we didn't mention weight</font>

994
00:43:51,260 --> 00:43:56,600
because it was well detail what's really

995
00:43:54,380 --> 00:43:59,930
interesting is that Zalman replied and

996
00:43:56,600 --> 00:44:02,720
said so<font color="#E5E5E5"> thank you we're going to see</font>

997
00:43:59,930 --> 00:44:04,609
with initio with with the maker of the

998
00:44:02,720 --> 00:44:07,009
chip so<font color="#CCCCCC"> that they could fix the firmware</font>

999
00:44:04,609 --> 00:44:08,869
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that man actually didn't write the</font>

1000
00:44:07,010 --> 00:44:11,060
firmware<font color="#CCCCCC"> they just</font><font color="#E5E5E5"> outcome I will</font>

1001
00:44:08,869 --> 00:44:12,740
subcontracted the<font color="#CCCCCC"> firmware to</font><font color="#E5E5E5"> the chip</font>

1002
00:44:11,060 --> 00:44:14,900
manufacturer which is really worrying

1003
00:44:12,740 --> 00:44:17,180
because<font color="#E5E5E5"> that actually the chip</font>

1004
00:44:14,900 --> 00:44:18,740
manufacturer<font color="#CCCCCC"> I</font><font color="#E5E5E5"> learned the crypto that</font>

1005
00:44:17,180 --> 00:44:23,259
wrote the shitty code that they are

1006
00:44:18,740 --> 00:44:28,129
using<font color="#E5E5E5"> so pretty scary</font>

1007
00:44:23,260 --> 00:44:30,520
any other question<font color="#CCCCCC"> one pregunta you know</font>

1008
00:44:28,130 --> 00:44:30,520
<font color="#CCCCCC">fundo</font>

1009
00:44:32,730 --> 00:44:37,570
so the question is have<font color="#CCCCCC"> you found any</font>

1010
00:44:35,290 --> 00:44:42,790
model<font color="#E5E5E5"> that did not seem insecure</font><font color="#CCCCCC"> well</font>

1011
00:44:37,570 --> 00:44:46,270
actually yeah<font color="#CCCCCC"> the two brands</font><font color="#E5E5E5"> that have</font>

1012
00:44:42,790 --> 00:44:49,960
looked at<font color="#E5E5E5"> that did not suck fully our</font>

1013
00:44:46,270 --> 00:44:51,880
<font color="#E5E5E5">iron key they don't have a secure</font><font color="#CCCCCC"> PIN</font>

1014
00:44:49,960 --> 00:44:54,190
pad<font color="#E5E5E5"> or something like that but there I</font>

1015
00:44:51,880 --> 00:44:57,040
picture actually<font color="#CCCCCC"> there</font><font color="#E5E5E5"> their</font>

1016
00:44:54,190 --> 00:44:59,950
<font color="#E5E5E5">architecture is pretty much that they</font>

1017
00:44:57,040 --> 00:45:02,290
have their own ASIC with their own Java

1018
00:44:59,950 --> 00:45:05,290
card in the applets running so it's

1019
00:45:02,290 --> 00:45:08,710
pretty close<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that another brand that</font>

1020
00:45:05,290 --> 00:45:10,870
<font color="#E5E5E5">is interesting is a pre corn</font><font color="#CCCCCC"> so they</font>

1021
00:45:08,710 --> 00:45:14,290
have<font color="#CCCCCC"> drive with integrated pin pads and</font>

1022
00:45:10,870 --> 00:45:16,660
they don't suck as much<font color="#E5E5E5"> we I didn't look</font>

1023
00:45:14,290 --> 00:45:23,259
at all<font color="#E5E5E5"> the</font><font color="#CCCCCC"> models but they they're</font>

1024
00:45:16,660 --> 00:45:29,170
pretty good another question<font color="#CCCCCC"> why don't</font>

1025
00:45:23,260 --> 00:45:32,250
<font color="#E5E5E5">we go to pass</font><font color="#CCCCCC"> well thanks Julian thinks</font>

1026
00:45:29,170 --> 00:45:38,429
our foe<font color="#E5E5E5"> thank you</font><font color="#CCCCCC"> very much</font>

1027
00:45:32,250 --> 00:45:38,429
[Applause]

