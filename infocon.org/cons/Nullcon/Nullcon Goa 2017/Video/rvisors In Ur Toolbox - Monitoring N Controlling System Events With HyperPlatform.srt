1
00:00:03,920 --> 00:00:12,240
all right<font color="#E5E5E5"> okay so thanks for coming this</font>

2
00:00:08,640 --> 00:00:14,820
oak and we already damaged past<font color="#CCCCCC"> almost</font>

3
00:00:12,240 --> 00:00:17,789
but so<font color="#E5E5E5"> the next study for the midst of</font>

4
00:00:14,820 --> 00:00:19,619
time we are<font color="#CCCCCC"> going to talk about writing</font>

5
00:00:17,789 --> 00:00:22,710
<font color="#CCCCCC">the hypervisors so developing</font>

6
00:00:19,619 --> 00:00:30,330
hypervisors and using hypervisors for

7
00:00:22,710 --> 00:00:32,790
security research on<font color="#E5E5E5"> windows and so this</font>

8
00:00:30,330 --> 00:00:35,640
<font color="#CCCCCC">is the takeaway of this oak in a very</font>

9
00:00:32,790 --> 00:00:38,640
nutshell<font color="#CCCCCC"> the basically writing like</font>

10
00:00:35,640 --> 00:00:42,030
developing a simple hypervisor<font color="#CCCCCC"> is now</font>

11
00:00:38,640 --> 00:00:44,570
easier than ever for you because like I

12
00:00:42,030 --> 00:00:47,310
lost<font color="#CCCCCC"> height of flats</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> it which is</font>

13
00:00:44,570 --> 00:00:51,060
<font color="#E5E5E5">windows centric</font><font color="#CCCCCC"> open-source hypervisor</font>

14
00:00:47,310 --> 00:00:53,670
project and although like hyper flood

15
00:00:51,060 --> 00:00:57,180
zone is for security usage and simple

16
00:00:53,670 --> 00:00:59,820
<font color="#E5E5E5">hypervisor you can do many interesting</font>

17
00:00:57,180 --> 00:01:05,099
things by using your own hypervisor

18
00:00:59,820 --> 00:01:08,039
basic tools however<font color="#E5E5E5"> one thing to be</font>

19
00:01:05,099 --> 00:01:11,520
aware of is that if you try to write

20
00:01:08,039 --> 00:01:15,750
hypervisor<font color="#E5E5E5"> or your own product or with a</font>

21
00:01:11,520 --> 00:01:19,259
product 40 hypervisors it is going to be

22
00:01:15,750 --> 00:01:22,979
<font color="#CCCCCC">challenging so if you plan to do like</font>

23
00:01:19,259 --> 00:01:25,950
integrate hypervisor into a product some

24
00:01:22,979 --> 00:01:28,049
house a plan ahead and like make a

25
00:01:25,950 --> 00:01:31,229
password if you<font color="#CCCCCC"> have if</font><font color="#E5E5E5"> you are creating</font>

26
00:01:28,049 --> 00:01:34,829
<font color="#E5E5E5">some a project a plan for something like</font>

27
00:01:31,229 --> 00:01:38,520
<font color="#CCCCCC">this that is</font><font color="#E5E5E5"> basically what i am going</font>

28
00:01:34,829 --> 00:01:41,309
to<font color="#E5E5E5"> tell in the soaked by the way this</font>

29
00:01:38,520 --> 00:01:44,069
talk as if flight will be shared on my

30
00:01:41,310 --> 00:01:49,950
<font color="#E5E5E5">twitter account after finishing my</font><font color="#CCCCCC"> slide</font>

31
00:01:44,069 --> 00:01:52,889
my talk and so this<font color="#CCCCCC"> is outline of this</font>

32
00:01:49,950 --> 00:01:55,409
oak so first we connect lesbian

33
00:01:52,889 --> 00:01:57,509
introduce ourselves and then let me

34
00:01:55,409 --> 00:02:01,200
explain why you may want<font color="#E5E5E5"> to write</font>

35
00:01:57,509 --> 00:02:04,709
hypervisors like I'm always supplies

36
00:02:01,200 --> 00:02:07,530
when I give a talk about<font color="#CCCCCC"> Aiko visor like</font>

37
00:02:04,709 --> 00:02:11,070
actually a lot more people are coming to

38
00:02:07,530 --> 00:02:14,790
talk I expect like how<font color="#CCCCCC"> many of us an</font>

39
00:02:11,070 --> 00:02:17,459
interesting hypothesis<font color="#CCCCCC"> may be 5-10</font>

40
00:02:14,790 --> 00:02:19,890
but<font color="#CCCCCC"> actually there's definitely more</font>

41
00:02:17,459 --> 00:02:22,859
<font color="#CCCCCC">than 10 people so I'm always surprised</font>

42
00:02:19,890 --> 00:02:27,929
how many of your<font color="#CCCCCC"> interceding liking</font>

43
00:02:22,859 --> 00:02:29,790
hypervisors and then we're going to

44
00:02:27,930 --> 00:02:32,959
explain<font color="#CCCCCC"> what type of platform is and</font>

45
00:02:29,790 --> 00:02:36,239
what you can do with the project and

46
00:02:32,959 --> 00:02:38,609
then<font color="#E5E5E5"> I am going</font><font color="#CCCCCC"> to cover a couple of</font>

47
00:02:36,239 --> 00:02:40,739
like technical the most important

48
00:02:38,609 --> 00:02:44,189
technical aspects of virtualization

49
00:02:40,739 --> 00:02:47,970
technology apt and like<font color="#CCCCCC"> vtx in general</font>

50
00:02:44,189 --> 00:02:51,060
and then Timo is going to explain

51
00:02:47,970 --> 00:02:54,000
challenges in writings like high quality

52
00:02:51,060 --> 00:03:00,980
hypervisors or integrating hypervisors

53
00:02:54,000 --> 00:03:04,500
into products so let<font color="#E5E5E5"> me begin with</font>

54
00:03:00,980 --> 00:03:08,668
myself so I am Satoshi and create a

55
00:03:04,500 --> 00:03:11,819
hyper platform and I've been a result

56
00:03:08,669 --> 00:03:13,829
engineer for years and has like strong

57
00:03:11,819 --> 00:03:17,429
battlegrounds like reasonable background

58
00:03:13,829 --> 00:03:21,090
in malware analysis so especially<font color="#CCCCCC"> i'm</font>

59
00:03:17,430 --> 00:03:25,409
<font color="#CCCCCC">interested in risky tinnitus and just</font>

60
00:03:21,090 --> 00:03:28,500
recently joined<font color="#CCCCCC"> apprised of like yeah my</font>

61
00:03:25,409 --> 00:03:30,599
name<font color="#CCCCCC"> is Tim okata I'm a software</font>

62
00:03:28,500 --> 00:03:34,590
engineer working for cross right and

63
00:03:30,599 --> 00:03:36,629
before that<font color="#E5E5E5"> I have been a contributed to</font>

64
00:03:34,590 --> 00:03:39,959
the reactors project for a long time<font color="#E5E5E5"> and</font>

65
00:03:36,629 --> 00:03:44,668
I've been working on the<font color="#CCCCCC"> boot loader v</font>

66
00:03:39,959 --> 00:03:48,919
<font color="#CCCCCC">OS kernel how 132k in different other</font>

67
00:03:44,669 --> 00:03:56,000
parts so<font color="#CCCCCC"> I have a lot</font><font color="#E5E5E5"> of background in</font>

68
00:03:48,919 --> 00:03:59,129
OS internal especially on windows<font color="#CCCCCC"> thanks</font>

69
00:03:56,000 --> 00:04:01,560
so I'll let me start with a reason of

70
00:03:59,129 --> 00:04:03,750
why you may want<font color="#E5E5E5"> to write hypervisor</font>

71
00:04:01,560 --> 00:04:07,560
will want to research hypothesis

72
00:04:03,750 --> 00:04:11,250
<font color="#E5E5E5">technologies so I'm</font><font color="#CCCCCC"> going to explain you</font>

73
00:04:07,560 --> 00:04:14,909
it makes a couple<font color="#E5E5E5"> of like classes and</font>

74
00:04:11,250 --> 00:04:17,519
two<font color="#E5E5E5"> reasons to research Hypable the</font>

75
00:04:14,909 --> 00:04:20,370
first one is most likely understand

76
00:04:17,519 --> 00:04:23,070
right technical aspects it can do like

77
00:04:20,370 --> 00:04:26,940
by using virtualization technology you

78
00:04:23,070 --> 00:04:28,529
can be many interesting things and you

79
00:04:26,940 --> 00:04:32,429
can implement<font color="#E5E5E5"> for example</font>

80
00:04:28,529 --> 00:04:35,189
like additional security like by using

81
00:04:32,429 --> 00:04:38,279
virtualization technology you can

82
00:04:35,189 --> 00:04:41,489
implement like memory space isolation

83
00:04:38,279 --> 00:04:43,859
for protection techniques or you can

84
00:04:41,489 --> 00:04:49,049
monitor access to sensitive system

85
00:04:43,859 --> 00:04:51,719
resources and good example of<font color="#CCCCCC"> it</font><font color="#E5E5E5"> like</font>

86
00:04:49,049 --> 00:04:54,599
using those techniques as virtualization

87
00:04:51,719 --> 00:04:59,248
based technology security introduced

88
00:04:54,599 --> 00:05:01,649
with<font color="#E5E5E5"> Windows 10 so as this alas shows</font>

89
00:04:59,249 --> 00:05:04,319
the<font color="#CCCCCC"> water like virtualization based</font>

90
00:05:01,649 --> 00:05:07,979
security as so long relying on the

91
00:05:04,319 --> 00:05:11,459
hypervisor technology and by isolating

92
00:05:07,979 --> 00:05:14,839
memory<font color="#CCCCCC"> its protect</font><font color="#E5E5E5"> LSA</font><font color="#CCCCCC"> SS</font><font color="#E5E5E5"> stop degree</font>

93
00:05:11,459 --> 00:05:18,089
from the path of the heart attack or

94
00:05:14,839 --> 00:05:21,239
internal component HYFR<font color="#CCCCCC"> guards name the</font>

95
00:05:18,089 --> 00:05:23,429
<font color="#E5E5E5">high</font><font color="#CCCCCC"> fog out which after which protects</font>

96
00:05:21,239 --> 00:05:26,808
like<font color="#E5E5E5"> sensitive system resources from</font>

97
00:05:23,429 --> 00:05:30,388
being modified by make unauthorized

98
00:05:26,809 --> 00:05:32,299
processes or drivers so you can

99
00:05:30,389 --> 00:05:34,499
<font color="#E5E5E5">implement that kind of security</font>

100
00:05:32,299 --> 00:05:40,638
additional security by using

101
00:05:34,499 --> 00:05:42,839
virtualization technology and the other

102
00:05:40,639 --> 00:05:47,699
<font color="#E5E5E5">reason you may want to develop</font>

103
00:05:42,839 --> 00:05:49,529
hypervisor is for reverse engineering so

104
00:05:47,699 --> 00:05:51,899
as i said i have about two grand in

105
00:05:49,529 --> 00:05:55,439
malware analysis and particularly

106
00:05:51,899 --> 00:05:58,079
interested in good kitchen lysis but if

107
00:05:55,439 --> 00:06:00,749
you try<font color="#CCCCCC"> to like without the engineer</font>

108
00:05:58,079 --> 00:06:04,139
rootkit you<font color="#CCCCCC"> will realize that</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> are</font>

109
00:06:00,749 --> 00:06:07,409
not many options in terms of tools or

110
00:06:04,139 --> 00:06:12,989
technologies so how many of you have

111
00:06:07,409 --> 00:06:15,509
used profit pointer yeah awesome<font color="#CCCCCC"> yeah so</font>

112
00:06:12,989 --> 00:06:17,878
it's pretty essential self but it

113
00:06:15,509 --> 00:06:23,999
doesn't<font color="#CCCCCC"> work very well for rootkits like</font>

114
00:06:17,879 --> 00:06:26,339
kernel mode malicious code and if you if

115
00:06:23,999 --> 00:06:30,179
the tool doesn't work maybe you could

116
00:06:26,339 --> 00:06:32,549
implement senior<font color="#E5E5E5"> to</font><font color="#CCCCCC"> by yourself like</font>

117
00:06:30,179 --> 00:06:35,039
probably<font color="#E5E5E5"> some of you may</font><font color="#CCCCCC"> know like</font>

118
00:06:32,549 --> 00:06:37,019
technique named like in line patching<font color="#E5E5E5"> I</font>

119
00:06:35,039 --> 00:06:41,880
called<font color="#CCCCCC"> our knife a coder modification</font>

120
00:06:37,019 --> 00:06:43,950
like a ph of technology so with that

121
00:06:41,880 --> 00:06:47,760
basically does<font color="#E5E5E5"> technology is like</font>

122
00:06:43,950 --> 00:06:51,990
updating assembly code at run time to

123
00:06:47,760 --> 00:06:55,200
execute your own instrumentation<font color="#E5E5E5"> call so</font>

124
00:06:51,990 --> 00:06:59,850
the below picture this is original call

125
00:06:55,200 --> 00:07:02,789
and if you apply that<font color="#E5E5E5"> in line cooking</font>

126
00:06:59,850 --> 00:07:05,460
<font color="#CCCCCC">technique it can change like this you</font>

127
00:07:02,790 --> 00:07:10,560
can change like this and then execute

128
00:07:05,460 --> 00:07:14,430
your own instrumentation call it works

129
00:07:10,560 --> 00:07:18,320
very well in user mode but in<font color="#CCCCCC"> kernel it</font>

130
00:07:14,430 --> 00:07:22,860
doesn't<font color="#E5E5E5"> work because there is a password</font>

131
00:07:18,320 --> 00:07:26,940
so if you modify a kernel kernel mode

132
00:07:22,860 --> 00:07:29,400
called then the<font color="#CCCCCC"> partial detects that</font>

133
00:07:26,940 --> 00:07:32,340
modification and the issues but<font color="#CCCCCC"> spell</font>

134
00:07:29,400 --> 00:07:39,599
<font color="#CCCCCC">check so this technique some not be</font>

135
00:07:32,340 --> 00:07:41,750
<font color="#E5E5E5">applied but if you use hypervisor then</font>

136
00:07:39,600 --> 00:07:44,940
you can do something<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> like</font>

137
00:07:41,750 --> 00:07:47,640
because<font color="#CCCCCC"> you can like I select memory</font>

138
00:07:44,940 --> 00:07:51,270
space well maybe you<font color="#CCCCCC"> can implement</font>

139
00:07:47,640 --> 00:07:53,880
invisible API work I indeed developed a

140
00:07:51,270 --> 00:07:57,930
pro side project after developing hyper

141
00:07:53,880 --> 00:08:01,560
platform so basically<font color="#E5E5E5"> you in to install</font>

142
00:07:57,930 --> 00:08:05,970
like you modify assembly code and it is

143
00:08:01,560 --> 00:08:08,190
executed but it's not<font color="#E5E5E5"> readable so party</font>

144
00:08:05,970 --> 00:08:11,720
Allah cannot detect and then just you

145
00:08:08,190 --> 00:08:14,580
can run your instrumentation code and

146
00:08:11,720 --> 00:08:17,750
you can<font color="#E5E5E5"> also like because you</font><font color="#CCCCCC"> can</font>

147
00:08:14,580 --> 00:08:20,909
monitor sensitive system result access

148
00:08:17,750 --> 00:08:24,810
you can directly use that<font color="#E5E5E5"> features to</font>

149
00:08:20,910 --> 00:08:30,360
get more like<font color="#E5E5E5"> information in about the</font>

150
00:08:24,810 --> 00:08:32,669
activity of malware hold so sound like

151
00:08:30,360 --> 00:08:34,830
the problem is already solved we can

152
00:08:32,669 --> 00:08:39,929
<font color="#CCCCCC">jesse's hypervisor like virtualization</font>

153
00:08:34,830 --> 00:08:43,950
technology but of<font color="#CCCCCC"> course it's not</font><font color="#E5E5E5"> that</font>

154
00:08:39,929 --> 00:08:48,839
easy so original some of you may<font color="#CCCCCC"> know if</font>

155
00:08:43,950 --> 00:08:51,839
you have tried so there<font color="#E5E5E5"> are many</font>

156
00:08:48,840 --> 00:08:55,620
challenges into<font color="#E5E5E5"> writing hypervisors for</font>

157
00:08:51,839 --> 00:08:59,050
windows security results

158
00:08:55,620 --> 00:09:01,900
so I classified like all problem into

159
00:08:59,050 --> 00:09:06,240
four categories let me<font color="#CCCCCC"> explain like</font>

160
00:09:01,900 --> 00:09:09,670
those categories like problems one by on

161
00:09:06,240 --> 00:09:12,640
the first problem<font color="#E5E5E5"> is in like in</font>

162
00:09:09,670 --> 00:09:15,490
flexibility so if you try to like your

163
00:09:12,640 --> 00:09:17,620
own hypervisor you will probably<font color="#E5E5E5"> start</font>

164
00:09:15,490 --> 00:09:21,280
looking for existing like lyrical

165
00:09:17,620 --> 00:09:24,040
hypervisors and then you will<font color="#CCCCCC"> realize</font>

166
00:09:21,280 --> 00:09:27,640
that those existing hypervisors are

167
00:09:24,040 --> 00:09:31,449
designed for specific purposes so it<font color="#E5E5E5"> is</font>

168
00:09:27,640 --> 00:09:35,020
not quite easy<font color="#E5E5E5"> to extend the modify for</font>

169
00:09:31,450 --> 00:09:38,710
your own abscess the writing hypervisor

170
00:09:35,020 --> 00:09:42,550
for security research for example and

171
00:09:38,710 --> 00:09:45,850
the other one a simple visor which is a

172
00:09:42,550 --> 00:09:49,510
very recently rewritten and this is

173
00:09:45,850 --> 00:09:51,940
purely designed for education because it

174
00:09:49,510 --> 00:09:55,090
is designed in the<font color="#E5E5E5"> region for education</font>

175
00:09:51,940 --> 00:09:56,920
it's a great<font color="#E5E5E5"> resource for learning but</font>

176
00:09:55,090 --> 00:09:59,500
if you want<font color="#E5E5E5"> to do something</font><font color="#CCCCCC"> more</font>

177
00:09:56,920 --> 00:10:01,000
practical in terms of like security

178
00:09:59,500 --> 00:10:04,060
research if you want to do something

179
00:10:01,000 --> 00:10:07,810
meaningful you will have to like a<font color="#E5E5E5"> lot</font>

180
00:10:04,060 --> 00:10:11,739
of code including hypervisor port which

181
00:10:07,810 --> 00:10:14,380
is not definitely<font color="#E5E5E5"> toribio so those</font>

182
00:10:11,740 --> 00:10:19,450
projects are not quite good starting

183
00:10:14,380 --> 00:10:21,939
point for security research and the

184
00:10:19,450 --> 00:10:23,860
other problem is compatibility for some

185
00:10:21,940 --> 00:10:27,760
of those existing products do not

186
00:10:23,860 --> 00:10:30,430
support modern platforms so some of them

187
00:10:27,760 --> 00:10:34,750
do not support even 64-bit architecture

188
00:10:30,430 --> 00:10:39,400
which is now<font color="#E5E5E5"> really essential so this is</font>

189
00:10:34,750 --> 00:10:41,110
<font color="#E5E5E5">quite significant limitation and we</font>

190
00:10:39,400 --> 00:10:46,180
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> want to start with</font><font color="#E5E5E5"> like those</font>

191
00:10:41,110 --> 00:10:49,600
<font color="#E5E5E5">cultivates probably and the other</font>

192
00:10:46,180 --> 00:10:52,510
challenge is simplicity so like existing

193
00:10:49,600 --> 00:10:55,900
windows centric hypervisor<font color="#CCCCCC"> found option</font>

194
00:10:52,510 --> 00:10:59,920
then proly<font color="#E5E5E5"> region start with existing</font>

195
00:10:55,900 --> 00:11:03,240
like mature hypervisors like such

196
00:10:59,920 --> 00:11:07,240
VirtualBox for<font color="#E5E5E5"> QA news for them</font>

197
00:11:03,240 --> 00:11:11,379
but as you might know those<font color="#E5E5E5"> project up</font>

198
00:11:07,240 --> 00:11:14,500
quite sick and<font color="#E5E5E5"> can be complex to extend</font>

199
00:11:11,379 --> 00:11:16,810
or deploy so you will<font color="#CCCCCC"> be grow up you</font>

200
00:11:14,500 --> 00:11:19,839
will be discouraged if you use try to

201
00:11:16,810 --> 00:11:22,989
update those project for your own

202
00:11:19,839 --> 00:11:25,500
purpose if we look if you have paid

203
00:11:22,990 --> 00:11:28,990
probably ok but if you want to<font color="#E5E5E5"> do like</font>

204
00:11:25,500 --> 00:11:31,480
spare time<font color="#E5E5E5"> or not super dedicated for</font>

205
00:11:28,990 --> 00:11:38,079
the project you probably don't<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to</font>

206
00:11:31,480 --> 00:11:41,889
start with<font color="#E5E5E5"> those projects and I found</font>

207
00:11:38,079 --> 00:11:46,000
that a box was kind<font color="#E5E5E5"> of exception so</font>

208
00:11:41,889 --> 00:11:50,860
actually<font color="#E5E5E5"> relatively easy</font><font color="#CCCCCC"> to understand</font>

209
00:11:46,000 --> 00:11:54,279
<font color="#E5E5E5">and extend the</font><font color="#CCCCCC"> code but the box is as</font>

210
00:11:50,860 --> 00:11:58,060
you know it's not fast so it kind of

211
00:11:54,279 --> 00:12:01,300
limit your usage of hypervisor it's not

212
00:11:58,060 --> 00:12:03,638
also a good base to start programming

213
00:12:01,300 --> 00:12:09,790
your own hypervisor<font color="#CCCCCC"> for bottles like</font>

214
00:12:03,639 --> 00:12:12,759
virtual machine monitor so as an answer

215
00:12:09,790 --> 00:12:15,550
dissolves like challenges<font color="#E5E5E5"> I developed</font>

216
00:12:12,759 --> 00:12:18,699
type of platform for this slide

217
00:12:15,550 --> 00:12:23,800
basically summarizes advantages of hyper

218
00:12:18,699 --> 00:12:26,709
platform so for simplicity like hyper

219
00:12:23,800 --> 00:12:30,430
platform can be like<font color="#E5E5E5"> developed and</font><font color="#CCCCCC"> D</font>

220
00:12:26,709 --> 00:12:32,859
bust by like visual studio and bring the

221
00:12:30,430 --> 00:12:36,758
back so just like standard software

222
00:12:32,860 --> 00:12:40,509
drivers and it supports modern or mow

223
00:12:36,759 --> 00:12:43,509
down windows system and this is designed

224
00:12:40,509 --> 00:12:46,420
<font color="#E5E5E5">for like such as a platform from the</font>

225
00:12:43,509 --> 00:12:50,829
past place so it's relatively easy to

226
00:12:46,420 --> 00:12:53,110
extend the code and according to<font color="#E5E5E5"> the</font>

227
00:12:50,829 --> 00:12:56,040
<font color="#CCCCCC">some benchmark software its performance</font>

228
00:12:53,110 --> 00:12:59,410
overhead is around the ten percent so

229
00:12:56,040 --> 00:13:01,949
it's totally usable and i would say

230
00:12:59,410 --> 00:13:01,949
efficient

231
00:13:05,089 --> 00:13:12,470
and so let me start explain let me

232
00:13:10,129 --> 00:13:14,360
explain how high pop platform can be

233
00:13:12,470 --> 00:13:20,180
used for you you're going<font color="#E5E5E5"> to use hyper</font>

234
00:13:14,360 --> 00:13:22,970
platform so hyper platform is just our

235
00:13:20,180 --> 00:13:26,508
software drivers it<font color="#E5E5E5"> is just a kernel</font>

236
00:13:22,970 --> 00:13:29,870
mode driver file so this is<font color="#E5E5E5"> loaded into</font>

237
00:13:26,509 --> 00:13:33,199
a color like ordinary software driver

238
00:13:29,870 --> 00:13:37,850
files but it is lost once it is loaded

239
00:13:33,199 --> 00:13:44,839
<font color="#E5E5E5">into tunnel it activates gdmf mode of</font>

240
00:13:37,850 --> 00:13:48,920
the professor and once the vmx mode is

241
00:13:44,839 --> 00:13:51,439
enabled and system execute what does

242
00:13:48,920 --> 00:13:54,069
some other<font color="#E5E5E5"> options such as a</font>

243
00:13:51,439 --> 00:13:57,860
modification of control registers or

244
00:13:54,069 --> 00:13:59,839
occurrence of exceptions or when it when

245
00:13:57,860 --> 00:14:05,329
someone tries to execute certain

246
00:13:59,839 --> 00:14:08,740
instructions like cpuid the process<font color="#CCCCCC"> that</font>

247
00:14:05,329 --> 00:14:12,258
triggers an event called VM images and

248
00:14:08,740 --> 00:14:16,670
<font color="#CCCCCC">starts executing the VMA which is hundra</font>

249
00:14:12,259 --> 00:14:19,639
so basically event to handle and that

250
00:14:16,670 --> 00:14:23,628
<font color="#E5E5E5">Andrew is implemented in size type of</font>

251
00:14:19,639 --> 00:14:26,589
platform and what you<font color="#E5E5E5"> are going to how</font>

252
00:14:23,629 --> 00:14:29,689
you are going to use<font color="#E5E5E5"> hyper platform is</font>

253
00:14:26,589 --> 00:14:32,899
like this you are going<font color="#E5E5E5"> to add your own</font>

254
00:14:29,689 --> 00:14:35,809
<font color="#CCCCCC">calls on the top of type of platform to</font>

255
00:14:32,899 --> 00:14:38,209
do something what you want to do maybe

256
00:14:35,809 --> 00:14:41,029
just logging or maybe adding some

257
00:14:38,209 --> 00:14:43,910
security<font color="#E5E5E5"> features but you will be adding</font>

258
00:14:41,029 --> 00:14:49,100
<font color="#E5E5E5">your own like additional logic on the</font>

259
00:14:43,910 --> 00:14:53,420
top of hyper platform so let me

260
00:14:49,100 --> 00:14:55,519
<font color="#E5E5E5">demonstrate example example of such</font>

261
00:14:53,420 --> 00:14:58,009
logic like for<font color="#E5E5E5"> example what kind of</font>

262
00:14:55,519 --> 00:15:01,759
logic<font color="#E5E5E5"> you can add on the top of hyper</font>

263
00:14:58,009 --> 00:15:05,079
platform so in this demo I am<font color="#E5E5E5"> going to</font>

264
00:15:01,759 --> 00:15:08,899
add a bit like as a logic to detect

265
00:15:05,079 --> 00:15:13,519
modification of<font color="#CCCCCC"> frontal register for SME</font>

266
00:15:08,899 --> 00:15:15,680
<font color="#E5E5E5">PFLAG so it's an example</font><font color="#CCCCCC"> application for</font>

267
00:15:13,519 --> 00:15:20,940
additional security

268
00:15:15,680 --> 00:15:25,520
so this<font color="#E5E5E5"> canto register for and assembly</font>

269
00:15:20,940 --> 00:15:28,260
bit as up like register that controls

270
00:15:25,520 --> 00:15:32,699
<font color="#CCCCCC">processor security feature and</font><font color="#E5E5E5"> it should</font>

271
00:15:28,260 --> 00:15:35,220
not be modified by random drivers but

272
00:15:32,700 --> 00:15:38,760
there<font color="#E5E5E5"> is a driver vulnerable driver-</font>

273
00:15:35,220 --> 00:15:42,990
<font color="#CCCCCC">happened objects in the wild and that</font>

274
00:15:38,760 --> 00:15:48,270
guy has our future to modify to disable

275
00:15:42,990 --> 00:15:50,370
that SME phys lab so<font color="#CCCCCC"> I am going</font><font color="#E5E5E5"> to run</font>

276
00:15:48,270 --> 00:15:54,090
<font color="#E5E5E5">those drives like install this driver</font>

277
00:15:50,370 --> 00:15:56,250
and run this exploit and shows

278
00:15:54,090 --> 00:15:58,680
successful exploitation first so

279
00:15:56,250 --> 00:16:03,210
basically this driver disable security

280
00:15:58,680 --> 00:16:07,079
feature and exploit<font color="#E5E5E5"> deploys shellcode in</font>

281
00:16:03,210 --> 00:16:11,390
into user mode but execute that<font color="#CCCCCC"> shell</font>

282
00:16:07,080 --> 00:16:17,130
<font color="#CCCCCC">hole</font><font color="#E5E5E5"> with a</font><font color="#CCCCCC"> tunnel privilege then</font><font color="#E5E5E5"> bounce</font>

283
00:16:11,390 --> 00:16:19,319
system privilege command prompt then we

284
00:16:17,130 --> 00:16:23,840
are<font color="#E5E5E5"> going to add type of platform on</font>

285
00:16:19,320 --> 00:16:23,840
that system to detect that exploitation

286
00:17:12,410 --> 00:17:15,070
ok

287
00:17:26,089 --> 00:17:47,100
flash for some ways why so<font color="#E5E5E5"> I am going to</font>

288
00:17:43,020 --> 00:17:49,650
demonstrate in this<font color="#E5E5E5"> virtual machine so</font>

289
00:17:47,100 --> 00:17:59,429
now let's install the vulnerable driver

290
00:17:49,650 --> 00:18:02,010
first so installing pardonable driver

291
00:17:59,430 --> 00:18:22,440
into the<font color="#E5E5E5"> system and then planning to</font>

292
00:18:02,010 --> 00:18:25,170
exploit so this<font color="#CCCCCC"> expose disable security</font>

293
00:18:22,440 --> 00:18:27,990
feature like this<font color="#E5E5E5"> a bit smed floods and</font>

294
00:18:25,170 --> 00:18:30,390
then found some system free bitch

295
00:18:27,990 --> 00:18:34,740
command prompt by using that quite

296
00:18:30,390 --> 00:18:37,560
vulnerable future and<font color="#E5E5E5"> next time i</font><font color="#CCCCCC"> am</font>

297
00:18:34,740 --> 00:18:40,890
going to install our hypothesis phone

298
00:18:37,560 --> 00:18:43,530
with extended logic to detect that

299
00:18:40,890 --> 00:18:54,150
exploitation well modification of

300
00:18:43,530 --> 00:18:57,540
control register for so hyper platform

301
00:18:54,150 --> 00:19:00,570
is as I<font color="#CCCCCC"> said you can compile hi pops up</font>

302
00:18:57,540 --> 00:19:05,460
<font color="#E5E5E5">from the features video and the about</font>

303
00:19:00,570 --> 00:19:08,360
page fall within the bus and now what

304
00:19:05,460 --> 00:19:11,880
<font color="#E5E5E5">I'm going to do is adding hold to</font>

305
00:19:08,360 --> 00:19:18,149
instruct the processor tutorial<font color="#CCCCCC"> p.m.</font>

306
00:19:11,880 --> 00:19:23,100
linkages when if SME<font color="#CCCCCC"> BBC's modified the</font>

307
00:19:18,150 --> 00:19:27,930
one and then also adding an additional

308
00:19:23,100 --> 00:19:32,280
thought that reacts<font color="#CCCCCC"> the against</font>

309
00:19:27,930 --> 00:19:36,650
modification of SME flood

310
00:19:32,280 --> 00:19:38,940
so basically just issuing<font color="#E5E5E5"> buying more</font>

311
00:19:36,650 --> 00:19:41,960
basically<font color="#E5E5E5"> it's issuing the baggage check</font>

312
00:19:38,940 --> 00:19:46,290
so stopping the system to protect

313
00:19:41,960 --> 00:19:49,980
exploit system from being for swamp

314
00:19:46,290 --> 00:19:53,730
folder from being modest like executed

315
00:19:49,980 --> 00:19:56,910
further exploitation<font color="#E5E5E5"> the basic I just</font>

316
00:19:53,730 --> 00:20:03,680
stopping the system instead of relating

317
00:19:56,910 --> 00:20:03,680
I exploit run and compile this project

318
00:20:11,390 --> 00:20:27,320
and now we got the<font color="#CCCCCC"> compile the file and</font>

319
00:20:21,470 --> 00:20:33,630
copy it into the virtual machine<font color="#E5E5E5"> and</font>

320
00:20:27,320 --> 00:20:38,760
install the hyper platform and then if

321
00:20:33,630 --> 00:20:41,400
we execute<font color="#CCCCCC"> G exploit either platform</font>

322
00:20:38,760 --> 00:20:52,230
should detect<font color="#E5E5E5"> modification of control</font>

323
00:20:41,400 --> 00:20:54,390
register for as we<font color="#E5E5E5"> added such logic so</font>

324
00:20:52,230 --> 00:21:02,280
its target<font color="#CCCCCC"> of objects because it</font>

325
00:20:54,390 --> 00:21:06,270
detected exploitation so hyper platform

326
00:21:02,280 --> 00:21:10,820
detected exploitation and prevented like

327
00:21:06,270 --> 00:21:10,820
issue the object to stop the system

328
00:21:25,040 --> 00:21:32,639
and the other one the<font color="#CCCCCC"> other interesting</font>

329
00:21:29,850 --> 00:21:35,909
<font color="#CCCCCC">the</font><font color="#E5E5E5"> technical aspects of virtualization</font>

330
00:21:32,640 --> 00:21:39,240
<font color="#E5E5E5">technology is extended to page tables so</font>

331
00:21:35,910 --> 00:21:43,860
extreme vegetables is basically one more

332
00:21:39,240 --> 00:21:46,410
address translation layer so this chart

333
00:21:43,860 --> 00:21:48,709
illustrates how the other translation

334
00:21:46,410 --> 00:21:52,530
take space so basically address

335
00:21:48,710 --> 00:21:55,650
translation is like<font color="#E5E5E5"> from converting</font>

336
00:21:52,530 --> 00:21:58,770
virtual address which we are<font color="#CCCCCC"> using in</font>

337
00:21:55,650 --> 00:22:01,440
programming and combating that<font color="#CCCCCC"> buzzer</font>

338
00:21:58,770 --> 00:22:08,549
<font color="#E5E5E5">others into a physical</font><font color="#CCCCCC"> address to fetch</font>

339
00:22:01,440 --> 00:22:13,410
a memory content from physical memory so

340
00:22:08,549 --> 00:22:16,668
in standard system without EPT so we get

341
00:22:13,410 --> 00:22:20,610
línea DOS<font color="#E5E5E5"> butter others as input and</font>

342
00:22:16,669 --> 00:22:23,429
them professor consults a data structure

343
00:22:20,610 --> 00:22:26,820
name the page tables to get information

344
00:22:23,429 --> 00:22:32,130
<font color="#CCCCCC">to translate that budget address inches</font>

345
00:22:26,820 --> 00:22:34,409
of physical other and then which a

346
00:22:32,130 --> 00:22:37,830
memory content from physical others

347
00:22:34,410 --> 00:22:43,320
physical memory by using that physical

348
00:22:37,830 --> 00:22:46,020
address the once EPT is enabled the

349
00:22:43,320 --> 00:22:50,159
processor uses start physical<font color="#E5E5E5"> address as</font>

350
00:22:46,020 --> 00:22:53,250
input as well and then consult the other

351
00:22:50,160 --> 00:22:55,679
data structure<font color="#CCCCCC"> named EPT page tables</font>

352
00:22:53,250 --> 00:22:59,340
which is introduced with virtualization

353
00:22:55,679 --> 00:23:02,400
technology and then do similar

354
00:22:59,340 --> 00:23:08,010
translations and<font color="#CCCCCC"> get the</font><font color="#E5E5E5"> final physical</font>

355
00:23:02,400 --> 00:23:10,919
address to get actual physical duress in

356
00:23:08,010 --> 00:23:15,000
life things about the extended page

357
00:23:10,919 --> 00:23:17,549
tables is that you will<font color="#CCCCCC"> be you can set</font>

358
00:23:15,000 --> 00:23:19,590
additional<font color="#CCCCCC"> permissions</font><font color="#E5E5E5"> to the page so</font>

359
00:23:17,549 --> 00:23:23,639
you can configure whether the page is

360
00:23:19,590 --> 00:23:27,510
writable or readable avoid vitiligo so

361
00:23:23,640 --> 00:23:30,960
this just<font color="#E5E5E5"> like lust lies how's</font><font color="#CCCCCC"> that if</font>

362
00:23:27,510 --> 00:23:34,989
it like extent the page table is used

363
00:23:30,960 --> 00:23:39,669
like so sorry some code tries to write

364
00:23:34,989 --> 00:23:42,190
<font color="#CCCCCC">stage</font><font color="#E5E5E5"> x</font><font color="#CCCCCC"> then processor asked like looks</font>

365
00:23:39,669 --> 00:23:45,809
for exchanges<font color="#E5E5E5"> the page tables to tell</font>

366
00:23:42,190 --> 00:23:49,539
whether that page is writable or not and

367
00:23:45,809 --> 00:23:57,340
if it is vital then the process are just

368
00:23:49,539 --> 00:24:00,639
execute the instruction but if that page

369
00:23:57,340 --> 00:24:04,840
is configured to be like read only non

370
00:24:00,639 --> 00:24:09,459
writable then<font color="#CCCCCC"> protest or gas the DMA yet</font>

371
00:24:04,840 --> 00:24:16,090
<font color="#E5E5E5">and hyper platform can do like something</font>

372
00:24:09,460 --> 00:24:20,080
interesting what<font color="#E5E5E5"> you want to do so um</font>

373
00:24:16,090 --> 00:24:23,918
let me demonstrate like what kind<font color="#E5E5E5"> of</font>

374
00:24:20,080 --> 00:24:25,840
things<font color="#E5E5E5"> you can do with this technique so</font>

375
00:24:23,919 --> 00:24:28,690
in this demo<font color="#E5E5E5"> I am going to show like</font>

376
00:24:25,840 --> 00:24:32,470
very simple memory protection based on

377
00:24:28,690 --> 00:24:37,720
virtualization technology so<font color="#CCCCCC"> I am going</font>

378
00:24:32,470 --> 00:24:39,909
to set like memory region named how

379
00:24:37,720 --> 00:24:42,730
these vegetables to be right non

380
00:24:39,909 --> 00:24:46,869
writable the basically protecting data

381
00:24:42,730 --> 00:24:49,600
region so<font color="#CCCCCC"> beefs how this vegetable is an</font>

382
00:24:46,869 --> 00:24:52,379
array<font color="#CCCCCC"> of function pointers and it's</font>

383
00:24:49,600 --> 00:24:56,199
often modified by a traditional like

384
00:24:52,379 --> 00:25:01,269
Colonel local<font color="#E5E5E5"> cleavage exploit program</font>

385
00:24:56,200 --> 00:25:03,700
and we will be set this page as non

386
00:25:01,269 --> 00:25:06,519
writable and then get vm a widget and

387
00:25:03,700 --> 00:25:09,940
detest this modification as such

388
00:25:06,519 --> 00:25:12,999
activity so this<font color="#E5E5E5"> pillow chart</font>

389
00:25:09,940 --> 00:25:15,489
illustrates how we are going<font color="#E5E5E5"> to</font>

390
00:25:12,999 --> 00:25:19,389
demonstrate this idea so basically

391
00:25:15,489 --> 00:25:22,600
stated vulnerable driver named NFC 64

392
00:25:19,389 --> 00:25:26,019
and exploit program exploit the

393
00:25:22,600 --> 00:25:29,799
vulnerability and the<font color="#E5E5E5"> driver modifies</font>

394
00:25:26,019 --> 00:25:33,820
houses vegetables but because we are

395
00:25:29,799 --> 00:25:37,210
setting that page as<font color="#E5E5E5"> non writable we get</font>

396
00:25:33,820 --> 00:25:39,899
vm edited and then we can do<font color="#E5E5E5"> something</font>

397
00:25:37,210 --> 00:25:43,879
meaningful like protecting the system or

398
00:25:39,899 --> 00:25:46,789
in<font color="#E5E5E5"> this demo we will just</font>

399
00:25:43,879 --> 00:25:51,529
they roll back to the change so program

400
00:25:46,789 --> 00:25:56,709
tries to change and<font color="#CCCCCC"> then we</font><font color="#E5E5E5"> restore the</font>

401
00:25:51,529 --> 00:25:56,709
change to disable that modification

402
00:26:14,240 --> 00:26:25,710
okay so first<font color="#E5E5E5"> I'm gonna downplay</font>

403
00:26:18,620 --> 00:26:31,939
unsuccessful exploitation so fast

404
00:26:25,710 --> 00:26:31,940
loading the vulnerable driver and then

405
00:26:32,300 --> 00:26:45,860
running the exploit oops sorry<font color="#E5E5E5"> a blind</font>

406
00:26:43,230 --> 00:26:45,860
exploit

407
00:26:54,790 --> 00:27:07,770
so this exploit modified how this was

408
00:26:59,800 --> 00:27:13,450
able to execute its own shell code and

409
00:27:07,770 --> 00:27:16,210
then challenged on system previous

410
00:27:13,450 --> 00:27:21,310
command shell by executing that she'll

411
00:27:16,210 --> 00:27:24,730
fought with Colonel Brijesh at the next

412
00:27:21,310 --> 00:27:29,220
time i am<font color="#CCCCCC"> going to involve our</font>

413
00:27:24,730 --> 00:27:41,470
hypervisor which<font color="#CCCCCC"> protects how this patch</font>

414
00:27:29,220 --> 00:27:43,690
howdy such table from being modified by

415
00:27:41,470 --> 00:27:46,630
<font color="#E5E5E5">the way those pods like demonstration</font>

416
00:27:43,690 --> 00:27:51,520
programs are all available on github so

417
00:27:46,630 --> 00:27:55,510
you can check it<font color="#E5E5E5"> out later so in sewing</font>

418
00:27:51,520 --> 00:28:04,240
a virtual hypothesize a hyper

419
00:27:55,510 --> 00:28:11,770
platform-based hypervisor to<font color="#E5E5E5"> ok so what</font>

420
00:28:04,240 --> 00:28:17,140
we<font color="#CCCCCC"> better to see so this hypervisor has</font>

421
00:28:11,770 --> 00:28:22,960
set protection on how this vegetable so

422
00:28:17,140 --> 00:28:29,020
it's now known writable and if<font color="#E5E5E5"> we run</font>

423
00:28:22,960 --> 00:28:36,130
the same exploit<font color="#CCCCCC"> which modifies is how</font>

424
00:28:29,020 --> 00:28:47,070
this page table sorry<font color="#CCCCCC"> I didn't install</font>

425
00:28:36,130 --> 00:28:47,070
she drive a while ago NDP<font color="#CCCCCC"> runs exploit</font>

426
00:28:49,790 --> 00:28:57,480
so it<font color="#E5E5E5"> doesn't it couldn't sound system</font>

427
00:28:54,150 --> 00:29:00,900
previous<font color="#CCCCCC"> commanders long but what</font>

428
00:28:57,480 --> 00:29:07,700
happened is so this exploit has modified

429
00:29:00,900 --> 00:29:11,820
the table we're<font color="#E5E5E5"> trying to modify but</font>

430
00:29:07,700 --> 00:29:18,840
this our hypervisor has detected the

431
00:29:11,820 --> 00:29:21,750
modification here so detective

432
00:29:18,840 --> 00:29:29,550
<font color="#E5E5E5">modification and then lowered about the</font>

433
00:29:21,750 --> 00:29:31,140
change so as the final results see how

434
00:29:29,550 --> 00:29:34,070
this<font color="#CCCCCC"> fudge</font><font color="#E5E5E5"> still hasn't been modified</font>

435
00:29:31,140 --> 00:29:37,020
and because the exploits couldn't

436
00:29:34,070 --> 00:29:39,000
execute its shell fall in Connor

437
00:29:37,020 --> 00:29:44,730
previous after I didn't execute

438
00:29:39,000 --> 00:29:46,980
shellcode just sound normal montblanc so

439
00:29:44,730 --> 00:29:48,630
you can implement this kind of like

440
00:29:46,980 --> 00:29:52,310
memory protection by using

441
00:29:48,630 --> 00:29:52,310
virtualization technology

442
00:30:02,470 --> 00:30:10,130
such other one more interesting<font color="#E5E5E5"> usage of</font>

443
00:30:06,650 --> 00:30:13,520
EPT like r example usage for security

444
00:30:10,130 --> 00:30:16,700
research is like monitoring the

445
00:30:13,520 --> 00:30:20,060
<font color="#E5E5E5">execution of non page the PO so</font>

446
00:30:16,700 --> 00:30:23,330
non-fazeable is our memories and<font color="#E5E5E5"> so in</font>

447
00:30:20,060 --> 00:30:28,419
chips in user mode so this<font color="#CCCCCC"> is just a</font>

448
00:30:23,330 --> 00:30:32,060
memory<font color="#CCCCCC"> of the left side of this chart is</font>

449
00:30:28,420 --> 00:30:35,660
marginally<font color="#CCCCCC"> Connie other space some space</font>

450
00:30:32,060 --> 00:30:38,210
are backed by image files which<font color="#CCCCCC"> is</font>

451
00:30:35,660 --> 00:30:41,870
driver files and some pages are backed

452
00:30:38,210 --> 00:30:47,150
by just memory so it's not backed by any

453
00:30:41,870 --> 00:30:51,280
files driver files and we are going to

454
00:30:47,150 --> 00:30:55,250
configure GPT page tables to let

455
00:30:51,280 --> 00:30:58,399
execution of to let execute image other

456
00:30:55,250 --> 00:31:01,430
site address spaces because those are

457
00:30:58,400 --> 00:31:07,760
image driver files its polar define to

458
00:31:01,430 --> 00:31:11,380
execute but non-fazeable this is just

459
00:31:07,760 --> 00:31:15,110
heap so if someone just<font color="#CCCCCC"> try to execute</font>

460
00:31:11,380 --> 00:31:17,600
<font color="#E5E5E5">heap</font><font color="#CCCCCC"> well-known</font><font color="#E5E5E5"> page at all internals it</font>

461
00:31:15,110 --> 00:31:21,080
might be just suspicious and we might

462
00:31:17,600 --> 00:31:26,199
want to like invest you investigate who

463
00:31:21,080 --> 00:31:29,570
try to execute and what code is executed

464
00:31:26,200 --> 00:31:34,840
so we are<font color="#E5E5E5"> going to set this non page</font>

465
00:31:29,570 --> 00:31:39,740
report to be non-executable by using EBT

466
00:31:34,840 --> 00:31:42,649
and<font color="#CCCCCC"> I think we</font><font color="#E5E5E5"> are running out of time</font>

467
00:31:39,740 --> 00:31:44,600
so<font color="#E5E5E5"> another skip the demo but I can</font>

468
00:31:42,650 --> 00:31:46,760
demonstrate<font color="#E5E5E5"> how important if you're</font>

469
00:31:44,600 --> 00:31:50,689
interested in so basically the concept

470
00:31:46,760 --> 00:31:54,230
is that<font color="#E5E5E5"> so if someone in this case</font><font color="#CCCCCC"> mario</font>

471
00:31:50,690 --> 00:31:59,350
with it tries to execute like

472
00:31:54,230 --> 00:32:03,290
non-fazeable and this robot duplicate

473
00:31:59,350 --> 00:32:06,590
actually deploys amp up the code into

474
00:32:03,290 --> 00:32:07,370
non-fazeable which is<font color="#E5E5E5"> configured to be</font>

475
00:32:06,590 --> 00:32:11,070
known

476
00:32:07,370 --> 00:32:14,639
design and this<font color="#E5E5E5"> route it tries to</font>

477
00:32:11,070 --> 00:32:19,770
execute this unboxed code that's by

478
00:32:14,640 --> 00:32:23,130
non-fazeable and then professor<font color="#CCCCCC"> from</font>

479
00:32:19,770 --> 00:32:27,900
<font color="#CCCCCC">solve the EPT page tables and because</font>

480
00:32:23,130 --> 00:32:32,400
this is non-executable it triggers<font color="#E5E5E5"> VM</font>

481
00:32:27,900 --> 00:32:36,179
<font color="#E5E5E5">images and then we are</font><font color="#CCCCCC"> going to log true</font>

482
00:32:32,400 --> 00:32:41,909
it executes executed or try to execute

483
00:32:36,179 --> 00:32:45,390
<font color="#CCCCCC">Jean non page at all and then we are</font>

484
00:32:41,909 --> 00:32:49,919
going<font color="#E5E5E5"> to change EPT page tables to make</font>

485
00:32:45,390 --> 00:32:52,880
it executable temporary and then let's

486
00:32:49,919 --> 00:32:57,260
suppose processors to try again and this

487
00:32:52,880 --> 00:33:02,190
time because non paste the full is now

488
00:32:57,260 --> 00:33:07,770
executable just that<font color="#E5E5E5"> called can execute</font>

489
00:33:02,190 --> 00:33:10,380
that non page appalled then as the final

490
00:33:07,770 --> 00:33:12,870
result what we can't what we will do is

491
00:33:10,380 --> 00:33:18,150
we are able to monitor like log

492
00:33:12,870 --> 00:33:22,530
execution of that non-fazeable and if we

493
00:33:18,150 --> 00:33:25,950
wish we can log maybe we can then attach

494
00:33:22,530 --> 00:33:29,549
<font color="#CCCCCC">the systems and extract that non page at</font>

495
00:33:25,950 --> 00:33:32,010
all to get some interesting code in this

496
00:33:29,549 --> 00:33:43,080
demo it's going<font color="#E5E5E5"> to be unpacked with it</font>

497
00:33:32,010 --> 00:33:46,020
dr alcohol and for further learning

498
00:33:43,080 --> 00:33:49,740
resources there are<font color="#E5E5E5"> some a good</font>

499
00:33:46,020 --> 00:33:51,870
hypervisor product as<font color="#E5E5E5"> i said a simple</font>

500
00:33:49,740 --> 00:33:54,240
vital is a good project for as a

501
00:33:51,870 --> 00:33:57,330
starting point it is written for

502
00:33:54,240 --> 00:34:02,220
education so it's nicely illustrates

503
00:33:57,330 --> 00:34:04,710
some candy like complicated concepts

504
00:34:02,220 --> 00:34:08,340
like complicated budget v he related

505
00:34:04,710 --> 00:34:12,740
concept and how to program hypervisor in

506
00:34:08,340 --> 00:34:12,740
micron size with concise code

507
00:34:12,889 --> 00:34:17,869
so you can<font color="#E5E5E5"> probably start with simple</font>

508
00:34:15,569 --> 00:34:20,849
vital if you are not familiar with

509
00:34:17,869 --> 00:34:24,749
concept of virtualization technology in

510
00:34:20,849 --> 00:34:26,069
terms of how to program it<font color="#E5E5E5"> and then also</font>

511
00:34:24,748 --> 00:34:28,799
there are some other interesting

512
00:34:26,069 --> 00:34:33,268
projects like if you are<font color="#E5E5E5"> interested in</font>

513
00:34:28,799 --> 00:34:35,219
it's like<font color="#CCCCCC"> mouse platform support or if</font>

514
00:34:33,268 --> 00:34:37,979
you<font color="#E5E5E5"> are interested in how to implement</font>

515
00:34:35,219 --> 00:34:41,578
method virtualization like those

516
00:34:37,980 --> 00:34:44,789
projects can be interesting those little

517
00:34:41,579 --> 00:34:49,200
bit more complicated and large so

518
00:34:44,789 --> 00:34:52,349
probably not as good as like simple

519
00:34:49,199 --> 00:34:56,129
<font color="#CCCCCC">vital to take a look at first but it's</font>

520
00:34:52,349 --> 00:35:01,109
definitely a good resources so<font color="#CCCCCC"> that</font>

521
00:34:56,129 --> 00:35:03,269
<font color="#E5E5E5">still</font><font color="#CCCCCC"> are good to side of story so I'm I</font>

522
00:35:01,109 --> 00:35:05,609
just told you guys like writing the

523
00:35:03,269 --> 00:35:08,788
hypervisor is awesome it's simple and

524
00:35:05,609 --> 00:35:12,509
you can do many interesting things but

525
00:35:08,789 --> 00:35:15,210
there is other side of exciting

526
00:35:12,509 --> 00:35:33,150
hypervisors so much can you explain like

527
00:35:15,210 --> 00:35:38,670
the<font color="#E5E5E5"> other side of reality yeah I'm going</font>

528
00:35:33,150 --> 00:35:44,690
to answer this question can<font color="#E5E5E5"> I</font><font color="#CCCCCC"> use that</font>

529
00:35:38,670 --> 00:35:48,390
in<font color="#CCCCCC"> my product many</font><font color="#E5E5E5"> people might want you</font>

530
00:35:44,690 --> 00:35:53,009
might want to put a hypervisor in their

531
00:35:48,390 --> 00:35:55,799
security product and ship that to their

532
00:35:53,009 --> 00:35:58,619
customers but the answer<font color="#CCCCCC"> to that</font>

533
00:35:55,799 --> 00:36:04,829
question is not so fast there<font color="#CCCCCC"> is a</font>

534
00:35:58,619 --> 00:36:07,319
number<font color="#CCCCCC"> of challenges that yeah um you</font>

535
00:36:04,829 --> 00:36:10,970
<font color="#E5E5E5">need to be aware of if you want to put a</font>

536
00:36:07,319 --> 00:36:13,589
hypervisor in your<font color="#E5E5E5"> security product um</font>

537
00:36:10,970 --> 00:36:15,269
across<font color="#CCCCCC"> strike we had a hypervisor</font>

538
00:36:13,589 --> 00:36:18,538
research project which<font color="#E5E5E5"> I has been</font>

539
00:36:15,269 --> 00:36:21,109
working on the recent month it<font color="#E5E5E5"> is a</font>

540
00:36:18,539 --> 00:36:24,820
custom implementation but it was

541
00:36:21,109 --> 00:36:28,390
inspired by how simple visor

542
00:36:24,820 --> 00:36:31,450
well as a platform<font color="#E5E5E5"> and it adds</font><font color="#CCCCCC"> a number</font>

543
00:36:28,390 --> 00:36:34,589
of features on top of the hypervisor

544
00:36:31,450 --> 00:36:40,180
itself features that Satoshi already

545
00:36:34,590 --> 00:36:42,220
mentioned the<font color="#CCCCCC"> issue number one that has</font>

546
00:36:40,180 --> 00:36:44,710
<font color="#CCCCCC">to be considered</font><font color="#E5E5E5"> when having a</font>

547
00:36:42,220 --> 00:36:49,509
hypervisor in a<font color="#E5E5E5"> product that ships</font>

548
00:36:44,710 --> 00:36:53,020
customers is that the hypervisor needs

549
00:36:49,510 --> 00:36:57,910
to communicate<font color="#E5E5E5"> with the 4s or with</font>

550
00:36:53,020 --> 00:37:01,300
software running on the OS the problem

551
00:36:57,910 --> 00:37:04,779
here is the exit handler does not run in

552
00:37:01,300 --> 00:37:08,380
the proper operating system context it

553
00:37:04,780 --> 00:37:12,940
could for example run while holding a

554
00:37:08,380 --> 00:37:15,280
spin lock and that basically<font color="#CCCCCC"> means you</font>

555
00:37:12,940 --> 00:37:19,050
cannot use any<font color="#CCCCCC"> Windows kernel function</font>

556
00:37:15,280 --> 00:37:27,730
from the hypervisors exit answer itself

557
00:37:19,050 --> 00:37:30,880
so um then means to communicate between

558
00:37:27,730 --> 00:37:33,970
the two right communication<font color="#E5E5E5"> between the</font>

559
00:37:30,880 --> 00:37:37,710
hypervisor exit<font color="#E5E5E5"> enter and the operating</font>

560
00:37:33,970 --> 00:37:41,919
system or other software you need to use

561
00:37:37,710 --> 00:37:43,990
an<font color="#E5E5E5"> Internet service routine and inject</font>

562
00:37:41,920 --> 00:37:49,120
the vector demands the vector event is

563
00:37:43,990 --> 00:37:52,000
basically an interrupt that is<font color="#E5E5E5"> inserted</font>

564
00:37:49,120 --> 00:37:56,529
or injected by the hypervisors exit

565
00:37:52,000 --> 00:38:00,190
handler before continuing to<font color="#CCCCCC"> run the</font>

566
00:37:56,530 --> 00:38:04,090
gift code so when execution continues

567
00:38:00,190 --> 00:38:06,160
after the exit handler is done it will

568
00:38:04,090 --> 00:38:08,400
trigger and interrupt and that interrupt

569
00:38:06,160 --> 00:38:13,899
will cause the interrupt<font color="#E5E5E5"> service routine</font>

570
00:38:08,400 --> 00:38:17,680
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> executed and that one can then you</font>

571
00:38:13,900 --> 00:38:21,630
appropriate handling for example<font color="#CCCCCC"> wpp</font>

572
00:38:17,680 --> 00:38:21,629
<font color="#E5E5E5">tracing or whatever you want to do there</font>

573
00:38:21,870 --> 00:38:28,920
this has yes this means the driver

574
00:38:26,590 --> 00:38:32,770
itself has to be a plug-and-play driver

575
00:38:28,920 --> 00:38:34,660
this is because<font color="#CCCCCC"> I to register an</font>

576
00:38:32,770 --> 00:38:37,660
interrupt service routine

577
00:38:34,660 --> 00:38:40,000
you need a physical device object which

578
00:38:37,660 --> 00:38:42,040
you can only get when having a plug and

579
00:38:40,000 --> 00:38:44,530
play driver it does not have<font color="#CCCCCC"> to be a</font>

580
00:38:42,040 --> 00:38:48,960
full plug-and-play driver with an in

581
00:38:44,530 --> 00:38:53,880
file there are<font color="#E5E5E5"> other possibilities</font>

582
00:38:48,960 --> 00:38:58,840
alexina school get some talk about<font color="#E5E5E5"> that</font>

583
00:38:53,880 --> 00:39:03,040
he basically invented the mechanism that

584
00:38:58,840 --> 00:39:05,670
allows to dynamically load that driver

585
00:39:03,040 --> 00:39:08,860
has a<font color="#CCCCCC"> plug and play driver and then</font>

586
00:39:05,670 --> 00:39:14,170
dynamically unloaded without writing any

587
00:39:08,860 --> 00:39:18,250
in file the question is<font color="#E5E5E5"> what happens</font>

588
00:39:14,170 --> 00:39:21,010
when it drops are disabled when your

589
00:39:18,250 --> 00:39:24,790
exit handler runs and interrupts our

590
00:39:21,010 --> 00:39:28,480
disabled on the cpu then it is not

591
00:39:24,790 --> 00:39:31,080
possible to inject a vector of event or

592
00:39:28,480 --> 00:39:36,340
one when you try to do that this will

593
00:39:31,080 --> 00:39:40,690
<font color="#E5E5E5">those who caused the failure and you</font>

594
00:39:36,340 --> 00:39:45,120
cannot continue so there<font color="#CCCCCC"> is a solution</font>

595
00:39:40,690 --> 00:39:48,780
to that and that is<font color="#CCCCCC"> called interrupt</font>

596
00:39:45,120 --> 00:39:51,040
window exiting this is<font color="#E5E5E5"> the feature that</font>

597
00:39:48,780 --> 00:39:53,590
when you're in the exit handler you

598
00:39:51,040 --> 00:39:58,630
enable that feature and the next<font color="#E5E5E5"> time</font>

599
00:39:53,590 --> 00:40:01,810
the interrupt gets re-enabled in in the

600
00:39:58,630 --> 00:40:05,350
guest it will automatically trigger an

601
00:40:01,810 --> 00:40:08,620
exit so<font color="#E5E5E5"> the next time the interrupts are</font>

602
00:40:05,350 --> 00:40:14,819
on the exit handler will be notified so

603
00:40:08,620 --> 00:40:17,920
you can then inject the interrupt after

604
00:40:14,820 --> 00:40:21,270
some get in drops are enabled on the gas

605
00:40:17,920 --> 00:40:26,310
and the<font color="#CCCCCC"> terms of solution is to use</font>

606
00:40:21,270 --> 00:40:30,310
hosted<font color="#CCCCCC"> events hosted events work with</font>

607
00:40:26,310 --> 00:40:34,150
with<font color="#E5E5E5"> the epic the interrupt controller</font>

608
00:40:30,310 --> 00:40:37,810
it requires<font color="#E5E5E5"> to enable</font><font color="#CCCCCC"> a virtualized epic</font>

609
00:40:34,150 --> 00:40:43,390
I'm not going<font color="#E5E5E5"> into details here it is</font>

610
00:40:37,810 --> 00:40:47,529
more complex but it's an<font color="#E5E5E5"> alternative</font>

611
00:40:43,390 --> 00:40:50,650
I just<font color="#E5E5E5"> wanted to mention that there is</font>

612
00:40:47,529 --> 00:40:54,400
one<font color="#CCCCCC"> teacher you have to take</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> of</font>

613
00:40:50,650 --> 00:40:57,670
<font color="#CCCCCC">that witches interrupt hearing interrupt</font>

614
00:40:54,400 --> 00:41:01,630
<font color="#E5E5E5">during means that the interrupt service</font>

615
00:40:57,670 --> 00:41:06,190
routine does not necessarily run on the

616
00:41:01,630 --> 00:41:09,970
processor that yeah that where the in

617
00:41:06,190 --> 00:41:13,059
rub was injected on so you might inject

618
00:41:09,970 --> 00:41:18,269
interrupt on cpu 2 and the interrupt

619
00:41:13,059 --> 00:41:18,269
service routine actually runs on cpu 0

620
00:41:19,950 --> 00:41:28,180
so um issue number 2 i'm<font color="#CCCCCC"> going to talk</font>

621
00:41:23,799 --> 00:41:31,720
<font color="#E5E5E5">about is using</font><font color="#CCCCCC"> the features and as an</font>

622
00:41:28,180 --> 00:41:36,009
example preventing malicious driver from

623
00:41:31,720 --> 00:41:40,538
a disabling snap that's pretty<font color="#E5E5E5"> simple</font>

624
00:41:36,010 --> 00:41:44,019
you just have to check a bit in CR for

625
00:41:40,539 --> 00:41:46,869
and when somebody tries to disable this

626
00:41:44,019 --> 00:41:50,348
feature in here for you will get an exit

627
00:41:46,869 --> 00:41:53,589
and the exit handler can prevent that

628
00:41:50,349 --> 00:41:57,700
that's<font color="#E5E5E5"> pretty simple but one comes to</font>

629
00:41:53,589 --> 00:42:01,599
<font color="#E5E5E5">other features like using apts to</font>

630
00:41:57,700 --> 00:42:03,910
prevent either patching or execution of

631
00:42:01,599 --> 00:42:11,079
mammal regions gets a little bit more

632
00:42:03,910 --> 00:42:14,529
complicated yeah first of<font color="#E5E5E5"> all with</font><font color="#CCCCCC"> e pts</font>

633
00:42:11,079 --> 00:42:17,200
you can set individual pages to being

634
00:42:14,529 --> 00:42:19,269
either read only if you<font color="#E5E5E5"> don't want them</font>

635
00:42:17,200 --> 00:42:25,118
to be patched or<font color="#E5E5E5"> to non-executable if</font>

636
00:42:19,269 --> 00:42:27,868
you don't want them to be executed this

637
00:42:25,119 --> 00:42:32,470
<font color="#E5E5E5">obviously requires an analysis of the</font>

638
00:42:27,869 --> 00:42:36,700
virtual address<font color="#CCCCCC"> space because yeah you</font>

639
00:42:32,470 --> 00:42:40,118
need<font color="#E5E5E5"> to know at which wich regions are</font>

640
00:42:36,700 --> 00:42:46,509
executable or<font color="#CCCCCC"> rideable on in which or</font>

641
00:42:40,119 --> 00:42:49,000
not this is OS version dependent so

642
00:42:46,509 --> 00:42:52,150
different OS versions a different

643
00:42:49,000 --> 00:42:56,230
windows versions have different kernel

644
00:42:52,150 --> 00:43:01,670
is rest api out there is

645
00:42:56,230 --> 00:43:03,500
kernel mode ASR for drivers you can

646
00:43:01,670 --> 00:43:07,280
enumerate the install drivers on<font color="#CCCCCC"> the</font>

647
00:43:03,500 --> 00:43:09,890
system but there<font color="#E5E5E5"> is no unload call back</font>

648
00:43:07,280 --> 00:43:13,790
so you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> get notified when a driver</font>

649
00:43:09,890 --> 00:43:17,480
gets unloaded so this<font color="#E5E5E5"> is all not trivial</font>

650
00:43:13,790 --> 00:43:23,600
and requires a lot of complex code to

651
00:43:17,480 --> 00:43:27,859
analyze obviously this works very well

652
00:43:23,600 --> 00:43:30,950
for<font color="#E5E5E5"> or basically the EPG mechanism works</font>

653
00:43:27,859 --> 00:43:33,109
well if you have non<font color="#CCCCCC"> page</font><font color="#E5E5E5"> memory because</font>

654
00:43:30,950 --> 00:43:34,930
you know once you have enumerated the

655
00:43:33,109 --> 00:43:38,270
address page you know where<font color="#CCCCCC"> that page is</font>

656
00:43:34,930 --> 00:43:41,868
but as soon<font color="#E5E5E5"> as you have paged memory</font>

657
00:43:38,270 --> 00:43:46,160
then this<font color="#E5E5E5"> virtual dress and I get paged</font>

658
00:43:41,869 --> 00:43:50,540
out and be moved to a different location

659
00:43:46,160 --> 00:43:53,660
and if you tease work on the level of

660
00:43:50,540 --> 00:43:58,550
physical addresses so you need<font color="#E5E5E5"> to also</font>

661
00:43:53,660 --> 00:44:00,950
handle that so an option would be to

662
00:43:58,550 --> 00:44:03,830
make pages for example if you want to

663
00:44:00,950 --> 00:44:07,609
prevent execution you make the pages

664
00:44:03,830 --> 00:44:10,940
either executable but then read only or

665
00:44:07,609 --> 00:44:14,060
you make them writable<font color="#E5E5E5"> but then not</font>

666
00:44:10,940 --> 00:44:17,630
executable so whenever an executable

667
00:44:14,060 --> 00:44:20,590
page gets paged out and reused for

668
00:44:17,630 --> 00:44:26,270
something else it will<font color="#E5E5E5"> be written to and</font>

669
00:44:20,590 --> 00:44:28,700
it will<font color="#E5E5E5"> be then trigger a vm exit and</font>

670
00:44:26,270 --> 00:44:33,410
the exit handler can then take the

671
00:44:28,700 --> 00:44:40,160
appropriate action to either allow the

672
00:44:33,410 --> 00:44:44,180
modification or not and one and this

673
00:44:40,160 --> 00:44:47,390
page gets executed then again<font color="#E5E5E5"> if</font><font color="#CCCCCC"> it was</font>

674
00:44:44,180 --> 00:44:50,089
the writable page then it can<font color="#E5E5E5"> show the</font>

675
00:44:47,390 --> 00:44:54,140
exit handler will have to decide whether

676
00:44:50,090 --> 00:45:02,840
<font color="#E5E5E5">this is an executable page and set the</font>

677
00:44:54,140 --> 00:45:05,540
EPG appropriately<font color="#CCCCCC"> okay so problem solved</font>

678
00:45:02,840 --> 00:45:08,680
on well maybe not<font color="#E5E5E5"> because there is</font>

679
00:45:05,540 --> 00:45:14,450
another issue issue number<font color="#E5E5E5"> 3 patch guard</font>

680
00:45:08,680 --> 00:45:19,759
hedge guard<font color="#E5E5E5"> he's present on all exits</font>

681
00:45:14,450 --> 00:45:21,859
for version of<font color="#CCCCCC"> Windows and it's only</font>

682
00:45:19,760 --> 00:45:25,100
active when the system boots without<font color="#E5E5E5"> a</font>

683
00:45:21,860 --> 00:45:28,220
kernel debugger so some people never

684
00:45:25,100 --> 00:45:30,350
<font color="#E5E5E5">experience hedge guard running because</font>

685
00:45:28,220 --> 00:45:32,870
they<font color="#E5E5E5"> always have a kernel debugger</font>

686
00:45:30,350 --> 00:45:37,009
attached to the system and once they run

687
00:45:32,870 --> 00:45:41,540
without<font color="#E5E5E5"> the kernel debugger yeah things</font>

688
00:45:37,010 --> 00:45:44,300
happen patch guard is highly associated

689
00:45:41,540 --> 00:45:48,020
code itself decrypting code so it

690
00:45:44,300 --> 00:45:52,540
<font color="#E5E5E5">actually can write to the same page on</font>

691
00:45:48,020 --> 00:45:58,070
which is currently execute it runs

692
00:45:52,540 --> 00:46:01,520
either as a DPC which gets run like

693
00:45:58,070 --> 00:46:04,420
every 10 minutes or<font color="#E5E5E5"> something or it can</font>

694
00:46:01,520 --> 00:46:10,700
be in a<font color="#E5E5E5"> walker threat so we can run on</font>

695
00:46:04,420 --> 00:46:13,580
different IRQL and the pages<font color="#E5E5E5"> on which</font>

696
00:46:10,700 --> 00:46:16,700
the drums are random pages they can be

697
00:46:13,580 --> 00:46:19,490
from one page pool or from system<font color="#E5E5E5"> pdes</font>

698
00:46:16,700 --> 00:46:21,620
so it is<font color="#CCCCCC"> really</font><font color="#E5E5E5"> hard to detect where</font>

699
00:46:19,490 --> 00:46:24,729
these pages are and they they are

700
00:46:21,620 --> 00:46:30,400
<font color="#CCCCCC">different pages every time edge guard</font>

701
00:46:24,730 --> 00:46:33,080
from so the sales decryption mechanism

702
00:46:30,400 --> 00:46:37,580
requires read write and executable

703
00:46:33,080 --> 00:46:41,270
access otherwise you will get an exit on

704
00:46:37,580 --> 00:46:44,180
every instruction that<font color="#E5E5E5"> executes and that</font>

705
00:46:41,270 --> 00:46:49,130
will cause so much overhead that the

706
00:46:44,180 --> 00:46:52,220
system will go back check the problem is

707
00:46:49,130 --> 00:46:55,070
that<font color="#E5E5E5"> obviously complete with the option</font>

708
00:46:52,220 --> 00:46:58,009
to either make them read only be read

709
00:46:55,070 --> 00:47:04,940
only and executable or make them read

710
00:46:58,010 --> 00:47:07,580
writable but non-executable so um to<font color="#CCCCCC"> fix</font>

711
00:47:04,940 --> 00:47:09,710
that issue you need mechanism to

712
00:47:07,580 --> 00:47:13,430
identify petticott pages and make them

713
00:47:09,710 --> 00:47:16,279
read write and executable but<font color="#E5E5E5"> only them</font>

714
00:47:13,430 --> 00:47:18,868
only<font color="#E5E5E5"> the most pages</font>

715
00:47:16,279 --> 00:47:21,900
you also need to make sure to clean up

716
00:47:18,869 --> 00:47:24,150
these pages because otherwise yeah you

717
00:47:21,900 --> 00:47:29,039
<font color="#E5E5E5">delete read writable and executable</font>

718
00:47:24,150 --> 00:47:33,660
pages and since those will never again

719
00:47:29,039 --> 00:47:36,480
trigger vm exit you cannot automatically

720
00:47:33,660 --> 00:47:40,190
clean them up so you have to provide

721
00:47:36,480 --> 00:47:45,180
<font color="#E5E5E5">your own clean up routine</font><font color="#CCCCCC"> all that and</font>

722
00:47:40,190 --> 00:47:47,880
the<font color="#E5E5E5"> question always remind do we catch</font>

723
00:47:45,180 --> 00:47:50,819
all patch guard pages what if hedge

724
00:47:47,880 --> 00:47:56,910
guard gets changed in the next windows

725
00:47:50,819 --> 00:48:03,058
version as<font color="#E5E5E5"> a new feature and are we</font>

726
00:47:56,910 --> 00:48:06,200
potentially introducing yeah the

727
00:48:03,059 --> 00:48:09,569
security leak by allowing other pages to

728
00:48:06,200 --> 00:48:12,149
air tube or malicious driver to pretend

729
00:48:09,569 --> 00:48:19,190
to be<font color="#E5E5E5"> patched guard so this is</font><font color="#CCCCCC"> not</font>

730
00:48:12,150 --> 00:48:21,599
trivial issue number four is hyper-v

731
00:48:19,190 --> 00:48:25,559
obviously customers might want to use it

732
00:48:21,599 --> 00:48:30,150
<font color="#CCCCCC">so for example credential guard device</font>

733
00:48:25,559 --> 00:48:33,299
guard and hyper guard these are security

734
00:48:30,150 --> 00:48:38,400
features that you don't want to force

735
00:48:33,299 --> 00:48:43,259
the customer to disable its present by

736
00:48:38,400 --> 00:48:46,980
default it's just a simple checkbox so

737
00:48:43,259 --> 00:48:50,789
the<font color="#E5E5E5"> question is can</font><font color="#CCCCCC"> we get below hyper-v</font>

738
00:48:46,980 --> 00:48:53,999
so having hyper-v run back yeah run on

739
00:48:50,789 --> 00:48:57,720
<font color="#CCCCCC">top of our own hypervisor well hyper-v</font>

740
00:48:53,999 --> 00:49:02,430
is initialized early the ufe boot

741
00:48:57,720 --> 00:49:07,200
service so it will require to have a

742
00:49:02,430 --> 00:49:11,749
known you a thief boot module<font color="#CCCCCC"> two to put</font>

743
00:49:07,200 --> 00:49:17,939
to load the hypervisor in there before

744
00:49:11,749 --> 00:49:20,910
<font color="#E5E5E5">hyper-v actually runs this also means it</font>

745
00:49:17,940 --> 00:49:22,739
will require to implement full support

746
00:49:20,910 --> 00:49:25,859
<font color="#CCCCCC">for nested virtualization in the</font>

747
00:49:22,739 --> 00:49:30,779
hypervisor which is adds another level

748
00:49:25,859 --> 00:49:35,700
of complexity to<font color="#CCCCCC"> the code and yeah it</font>

749
00:49:30,779 --> 00:49:38,730
requires that basically full operating

750
00:49:35,700 --> 00:49:43,499
system would not<font color="#CCCCCC"> be possible on that</font>

751
00:49:38,730 --> 00:49:46,099
hypervisor issue number<font color="#E5E5E5"> five is</font>

752
00:49:43,499 --> 00:49:52,649
performance so you might want to know

753
00:49:46,099 --> 00:49:55,950
how expensive are the vm exit on the

754
00:49:52,650 --> 00:49:59,309
hospital<font color="#E5E5E5"> cpu it's about 500 cycles as a</font>

755
00:49:55,950 --> 00:50:01,680
comparison a system call is about<font color="#E5E5E5"> 100</font>

756
00:49:59,309 --> 00:50:04,739
cycles so you<font color="#CCCCCC"> wouldn't want to</font><font color="#E5E5E5"> make sure</font>

757
00:50:01,680 --> 00:50:10,038
<font color="#E5E5E5">that you do not have a huge number of</font>

758
00:50:04,739 --> 00:50:13,739
exits keep them at a low rate possible

759
00:50:10,039 --> 00:50:17,069
on vmware when using<font color="#CCCCCC"> nasa's</font>

760
00:50:13,739 --> 00:50:19,319
virtualization and exit can be as

761
00:50:17,069 --> 00:50:22,349
<font color="#E5E5E5">expensive as seven thousand cycles or</font>

762
00:50:19,319 --> 00:50:25,288
<font color="#E5E5E5">even more so you don't</font><font color="#CCCCCC"> probably don't</font>

763
00:50:22,349 --> 00:50:30,029
want<font color="#CCCCCC"> to have that yeah</font><font color="#E5E5E5"> on a production</font>

764
00:50:25,289 --> 00:50:34,559
<font color="#CCCCCC">system the impact</font><font color="#E5E5E5"> of EPT is also</font>

765
00:50:30,029 --> 00:50:38,849
interesting it is very dependent on the

766
00:50:34,559 --> 00:50:42,839
workload some workloads<font color="#CCCCCC"> shall</font><font color="#E5E5E5"> barely any</font>

767
00:50:38,849 --> 00:50:50,359
impact others show higher impact an

768
00:50:42,839 --> 00:50:57,319
average value can be twenty percent and

769
00:50:50,359 --> 00:51:00,150
the<font color="#E5E5E5"> overall impact of the hypervisor is</font>

770
00:50:57,319 --> 00:51:02,609
featured dependent obviously if you use

771
00:51:00,150 --> 00:51:05,249
apts or not or what kind of

772
00:51:02,609 --> 00:51:09,960
configuration is deployed to the

773
00:51:05,249 --> 00:51:12,868
hypervisor and it can<font color="#CCCCCC"> be below one</font>

774
00:51:09,960 --> 00:51:16,319
percent if<font color="#E5E5E5"> you don't have a</font><font color="#CCCCCC"> PT's</font><font color="#E5E5E5"> enables</font>

775
00:51:12,869 --> 00:51:18,299
and if you don't use many features or it

776
00:51:16,319 --> 00:51:21,950
can be fifty percent and higher

777
00:51:18,299 --> 00:51:25,980
depending on what you are<font color="#E5E5E5"> doing with it</font>

778
00:51:21,950 --> 00:51:28,980
asian number six operating<font color="#CCCCCC"> system and</font>

779
00:51:25,980 --> 00:51:33,029
application compatibility<font color="#E5E5E5"> we're going to</font>

780
00:51:28,980 --> 00:51:36,769
mention one specific aspect here a

781
00:51:33,029 --> 00:51:38,430
hypervisor can introduce timing issues

782
00:51:36,769 --> 00:51:41,250
things

783
00:51:38,430 --> 00:51:44,000
that normally on real hardware<font color="#CCCCCC"> just</font>

784
00:51:41,250 --> 00:51:49,589
<font color="#CCCCCC">execute within a</font><font color="#E5E5E5"> few cycles can</font>

785
00:51:44,000 --> 00:51:54,030
introduce through a vm exit<font color="#CCCCCC"> okay yeah</font>

786
00:51:49,589 --> 00:51:56,069
we're running out of time so we're going

787
00:51:54,030 --> 00:52:01,829
to provide the slide<font color="#CCCCCC"> I'm going</font><font color="#E5E5E5"> to finish</font>

788
00:51:56,069 --> 00:52:05,480
here so basically just finish this there

789
00:52:01,829 --> 00:52:08,970
is a detailed analysis for timekeeping

790
00:52:05,480 --> 00:52:14,309
in virtual machines by VMware somebody's

791
00:52:08,970 --> 00:52:18,149
interested so yeah I hope that brought

792
00:52:14,309 --> 00:52:20,040
some<font color="#E5E5E5"> light from the issues that come</font>

793
00:52:18,150 --> 00:52:35,579
with putting a hypervisor in a

794
00:52:20,040 --> 00:52:38,069
production software thank you so we are

795
00:52:35,579 --> 00:52:40,530
going<font color="#E5E5E5"> to be in conference today and so</font>

796
00:52:38,069 --> 00:52:44,339
<font color="#E5E5E5">always follow morning so if you have any</font>

797
00:52:40,530 --> 00:52:46,710
questions please find out and they give

798
00:52:44,339 --> 00:52:49,049
me any questions and those slides will

799
00:52:46,710 --> 00:52:52,520
be shared online on my Twitter account

800
00:52:49,049 --> 00:52:54,930
and yes exactly thank you for coming

801
00:52:52,520 --> 00:52:58,489
thank you<font color="#E5E5E5"> so much cheeks thank you</font>

802
00:52:54,930 --> 00:52:58,489
[Applause]

