1
00:00:03,120 --> 00:00:05,359
hello everybody my name is joval and i'm

2
00:00:05,359 --> 00:00:07,520
a research team leader thomas

3
00:00:07,520 --> 00:00:10,639
i'm gal and i'm a researcher at armies

4
00:00:10,639 --> 00:00:12,559
today we're gonna talk to you about our

5
00:00:12,559 --> 00:00:15,280
research dub teal stone so let's get

6
00:00:15,280 --> 00:00:17,760
going

7
00:00:17,760 --> 00:00:20,960
um okay so a quick word about armies

8
00:00:20,960 --> 00:00:22,800
[Music]

9
00:00:22,800 --> 00:00:25,199
uh amish is a company that does passive

10
00:00:25,199 --> 00:00:27,359
network monitoring asset inventory and

11
00:00:27,359 --> 00:00:29,199
anomaly detection

12
00:00:29,199 --> 00:00:31,359
we are part of the research team which

13
00:00:31,359 --> 00:00:33,520
is focused on vulnerability research of

14
00:00:33,520 --> 00:00:35,280
embedded systems

15
00:00:35,280 --> 00:00:36,960
we discover critical vulnerabilities

16
00:00:36,960 --> 00:00:39,040
that impact billions of devices and

17
00:00:39,040 --> 00:00:41,040
design and innovate security solutions

18
00:00:41,040 --> 00:00:42,960
in order to mitigate the risk coming

19
00:00:42,960 --> 00:00:46,160
from iot devices

20
00:00:50,399 --> 00:00:52,719
okay

21
00:00:53,920 --> 00:00:55,990
not very innovative

22
00:00:55,990 --> 00:01:02,100
[Music]

23
00:01:05,040 --> 00:01:07,280
issue

24
00:01:10,640 --> 00:01:13,640
okay

25
00:01:26,159 --> 00:01:28,080
okay so

26
00:01:28,080 --> 00:01:30,240
this is what we're going to cover today

27
00:01:30,240 --> 00:01:32,560
uh what tier storm actually is

28
00:01:32,560 --> 00:01:34,880
what is cps and how it can be used in

29
00:01:34,880 --> 00:01:37,119
the as an attack vector how we found and

30
00:01:37,119 --> 00:01:39,439
exploited some of the vulnerabilities

31
00:01:39,439 --> 00:01:41,439
and some of the implications that arise

32
00:01:41,439 --> 00:01:43,680
from our research and of course a live

33
00:01:43,680 --> 00:01:47,520
demo you should expect some smoke

34
00:01:47,520 --> 00:01:50,240
so um tls is a set of three critical

35
00:01:50,240 --> 00:01:52,720
vulnerabilities on apc's smart ups for

36
00:01:52,720 --> 00:01:54,399
the client clients you can see here

37
00:01:54,399 --> 00:01:56,479
they enable remote code execution from

38
00:01:56,479 --> 00:01:58,719
the internet and using them can cause

39
00:01:58,719 --> 00:02:00,399
physical damage to the device or its

40
00:02:00,399 --> 00:02:02,399
surroundings

41
00:02:02,399 --> 00:02:04,560
these devices are very common with over

42
00:02:04,560 --> 00:02:07,119
20 million units sold and according to

43
00:02:07,119 --> 00:02:09,119
our data they can be found in 8 out of

44
00:02:09,119 --> 00:02:10,800
10 enterprises

45
00:02:10,800 --> 00:02:13,120
around the world

46
00:02:13,120 --> 00:02:16,239
so what is cps cps stands for cyber

47
00:02:16,239 --> 00:02:17,680
physical system

48
00:02:17,680 --> 00:02:19,760
essentially it means connected computers

49
00:02:19,760 --> 00:02:21,599
with physical abilities and these

50
00:02:21,599 --> 00:02:24,239
computers can be found all around us

51
00:02:24,239 --> 00:02:26,560
like door controllers

52
00:02:26,560 --> 00:02:29,040
autonomous vehicles

53
00:02:29,040 --> 00:02:31,200
smart air conditioning and advanced

54
00:02:31,200 --> 00:02:33,440
medical devices and the fact that these

55
00:02:33,440 --> 00:02:35,760
devices have physical abilities makes

56
00:02:35,760 --> 00:02:37,599
them a target

57
00:02:37,599 --> 00:02:39,440
like this case of a hackett a german

58
00:02:39,440 --> 00:02:41,120
steel mill that caused

59
00:02:41,120 --> 00:02:43,120
massive damage

60
00:02:43,120 --> 00:02:44,959
in this case there were no casualties

61
00:02:44,959 --> 00:02:47,040
but you don't need to imagine too hard a

62
00:02:47,040 --> 00:02:48,720
different scenario

63
00:02:48,720 --> 00:02:50,080
like this case of the hack of the

64
00:02:50,080 --> 00:02:52,239
ukrainian ukrainian power grid back at

65
00:02:52,239 --> 00:02:54,480
2015

66
00:02:54,480 --> 00:02:56,640
it is the first confirmed hack to take

67
00:02:56,640 --> 00:02:58,159
down a power grid

68
00:02:58,159 --> 00:03:00,959
leaving more than 230 000 residents in

69
00:03:00,959 --> 00:03:02,480
the dark

70
00:03:02,480 --> 00:03:03,519
and

71
00:03:03,519 --> 00:03:04,879
if you ask yourself what about the

72
00:03:04,879 --> 00:03:07,120
backup systems of

73
00:03:07,120 --> 00:03:09,680
the control centers

74
00:03:09,680 --> 00:03:11,760
first they the attackers reconfigured

75
00:03:11,760 --> 00:03:13,760
the ups responsible for providing backup

76
00:03:13,760 --> 00:03:15,920
power to the control center

77
00:03:15,920 --> 00:03:18,879
so we now know that ups are a target for

78
00:03:18,879 --> 00:03:21,680
hackers in the real world but this was

79
00:03:21,680 --> 00:03:23,760
only reconfiguring it that attacking it

80
00:03:23,760 --> 00:03:27,200
directly can cause much more damage

81
00:03:27,200 --> 00:03:30,000
um what is the ups ups stands for

82
00:03:30,000 --> 00:03:32,159
uninterruptible power supply ensuring

83
00:03:32,159 --> 00:03:33,680
connected devices don't suffer any

84
00:03:33,680 --> 00:03:36,000
downtime but a spoiler alert our

85
00:03:36,000 --> 00:03:38,959
research will put this on

86
00:03:38,959 --> 00:03:39,840
so

87
00:03:39,840 --> 00:03:41,680
in the normal operation the ups just

88
00:03:41,680 --> 00:03:43,360
transfer power from the grid to the

89
00:03:43,360 --> 00:03:44,799
connected device

90
00:03:44,799 --> 00:03:46,319
but in the case of an outage it

91
00:03:46,319 --> 00:03:48,480
automatically switches to the battery

92
00:03:48,480 --> 00:03:50,159
not letting the connected devices suffer

93
00:03:50,159 --> 00:03:51,840
any downtime

94
00:03:51,840 --> 00:03:54,159
and these devices cannot suffer any

95
00:03:54,159 --> 00:03:55,439
downtime

96
00:03:55,439 --> 00:03:57,040
because by definition they are mission

97
00:03:57,040 --> 00:03:59,920
critical like medical devices ot

98
00:03:59,920 --> 00:04:03,920
equipment or i.t equipment

99
00:04:04,080 --> 00:04:06,799
our research focused on uh

100
00:04:06,799 --> 00:04:09,040
on a device set by apc which is a part

101
00:04:09,040 --> 00:04:11,599
of schneiderlin electric since o7 and it

102
00:04:11,599 --> 00:04:12,799
was chosen because he's the market

103
00:04:12,799 --> 00:04:15,920
leader in what is called smart upsell

104
00:04:15,920 --> 00:04:18,798
in this case smart gps is a

105
00:04:18,798 --> 00:04:20,720
branded name by apc

106
00:04:20,720 --> 00:04:22,639
historically ups were fully analog

107
00:04:22,639 --> 00:04:24,639
devices but they become smarter letting

108
00:04:24,639 --> 00:04:26,000
software control

109
00:04:26,000 --> 00:04:27,680
more of the operation of the of the

110
00:04:27,680 --> 00:04:29,520
device

111
00:04:29,520 --> 00:04:30,800
some of these devices have a feature

112
00:04:30,800 --> 00:04:33,520
called smart connect which is basically

113
00:04:33,520 --> 00:04:35,680
a dedicated ethernet port connecting the

114
00:04:35,680 --> 00:04:38,240
device to the cloud

115
00:04:38,240 --> 00:04:40,960
so we have a cps device that we know is

116
00:04:40,960 --> 00:04:42,400
a target for hackers

117
00:04:42,400 --> 00:04:43,680
and is connected directly to the

118
00:04:43,680 --> 00:04:45,919
internet so we ask yourself is there a

119
00:04:45,919 --> 00:04:48,160
potential risk here

120
00:04:48,160 --> 00:04:51,199
and in order to answer this question

121
00:04:51,199 --> 00:04:53,360
we laid out the milestones for this

122
00:04:53,360 --> 00:04:54,479
research

123
00:04:54,479 --> 00:04:56,400
first find a viable internet attack

124
00:04:56,400 --> 00:04:59,199
vector and and find out if there is one

125
00:04:59,199 --> 00:05:00,960
second find the remote core execution

126
00:05:00,960 --> 00:05:02,560
vulnerability

127
00:05:02,560 --> 00:05:04,880
and last find a way to tamper with the

128
00:05:04,880 --> 00:05:06,639
output power of the device showing how

129
00:05:06,639 --> 00:05:08,639
this cps device is dangerous in its own

130
00:05:08,639 --> 00:05:11,280
way

131
00:05:11,280 --> 00:05:12,960
so let's overview this smart connect

132
00:05:12,960 --> 00:05:14,639
feature

133
00:05:14,639 --> 00:05:16,720
the first thing to notice is that this

134
00:05:16,720 --> 00:05:19,280
cloud is a cloud in the classic sense

135
00:05:19,280 --> 00:05:21,039
meaning it is not inside the network it

136
00:05:21,039 --> 00:05:23,440
isn't really in the internet

137
00:05:23,440 --> 00:05:26,160
and the second second thing is is

138
00:05:26,160 --> 00:05:27,600
that

139
00:05:27,600 --> 00:05:29,919
this device is the one creating the

140
00:05:29,919 --> 00:05:32,000
communication with the server so it can

141
00:05:32,000 --> 00:05:34,479
bypass firewalls or not gateways or

142
00:05:34,479 --> 00:05:38,560
other defensive infrastructure you have

143
00:05:38,560 --> 00:05:40,000
this is how the ui looks like it

144
00:05:40,000 --> 00:05:41,600
indicates the battery power or the

145
00:05:41,600 --> 00:05:42,960
firmware version

146
00:05:42,960 --> 00:05:44,800
and another almost hidden feature is

147
00:05:44,800 --> 00:05:46,400
that the cloud can perform remote

148
00:05:46,400 --> 00:05:49,679
firmware updates to the device

149
00:05:49,840 --> 00:05:51,600
and this is in the network perspective

150
00:05:51,600 --> 00:05:53,440
there are two things to note here first

151
00:05:53,440 --> 00:05:56,319
the device performs the communication

152
00:05:56,319 --> 00:05:58,319
via tls and this is how it's encrypted

153
00:05:58,319 --> 00:05:59,840
and authenticated

154
00:05:59,840 --> 00:06:02,160
and second the device before the

155
00:06:02,160 --> 00:06:04,240
communication performs a dns query of

156
00:06:04,240 --> 00:06:07,039
the cloud's domain so an attacker could

157
00:06:07,039 --> 00:06:08,720
potentially

158
00:06:08,720 --> 00:06:09,759
attack

159
00:06:09,759 --> 00:06:12,080
with this attack vector if they can

160
00:06:12,080 --> 00:06:14,960
could perform a dns proofing of the and

161
00:06:14,960 --> 00:06:17,280
get a man in the middle but this is not

162
00:06:17,280 --> 00:06:19,039
theoretical this is something that have

163
00:06:19,039 --> 00:06:20,479
happened in the past

164
00:06:20,479 --> 00:06:22,479
take this tweet referring to what was

165
00:06:22,479 --> 00:06:25,840
thought to be a 2017 hack of wikileaks

166
00:06:25,840 --> 00:06:28,240
it was later found to be dns proofing of

167
00:06:28,240 --> 00:06:29,759
the domain of wikileaks showing that

168
00:06:29,759 --> 00:06:31,120
this is something that equipped

169
00:06:31,120 --> 00:06:32,960
attackers can facilitate even in modern

170
00:06:32,960 --> 00:06:34,400
times

171
00:06:34,400 --> 00:06:35,919
so we can

172
00:06:35,919 --> 00:06:38,000
safely say that we have found our

173
00:06:38,000 --> 00:06:40,080
internet attack vector

174
00:06:40,080 --> 00:06:41,360
now to the second step finding the

175
00:06:41,360 --> 00:06:44,560
remote card execution vulnerability

176
00:06:44,560 --> 00:06:45,759
these are the steps we're going to need

177
00:06:45,759 --> 00:06:46,840
to take in order to find this

178
00:06:46,840 --> 00:06:50,400
vulnerability first find the firmware

179
00:06:50,400 --> 00:06:51,919
in order to reverse it and get to the

180
00:06:51,919 --> 00:06:53,599
second step actually finding the

181
00:06:53,599 --> 00:06:54,880
vulnerability

182
00:06:54,880 --> 00:06:57,280
and they should be as severe as possible

183
00:06:57,280 --> 00:06:59,360
before authentication takes place

184
00:06:59,360 --> 00:07:01,759
without any user interaction needed and

185
00:07:01,759 --> 00:07:04,160
as we said from the internet

186
00:07:04,160 --> 00:07:05,919
for those of you who come from the

187
00:07:05,919 --> 00:07:07,759
endpoint security world we essentially

188
00:07:07,759 --> 00:07:11,360
aim at a zero click vulnerability

189
00:07:11,360 --> 00:07:15,039
so let's dive in as to the firmware

190
00:07:15,039 --> 00:07:17,039
the film of fire candy can be achieved

191
00:07:17,039 --> 00:07:19,599
from the um update wizard supplied by

192
00:07:19,599 --> 00:07:22,000
ap3 and as you can see in the histogram

193
00:07:22,000 --> 00:07:23,440
on the right

194
00:07:23,440 --> 00:07:26,160
it seems to be encrypted with most bytes

195
00:07:26,160 --> 00:07:28,080
and distributed equally

196
00:07:28,080 --> 00:07:30,319
some bytes are more common than others

197
00:07:30,319 --> 00:07:32,560
as you can see in the little spikes but

198
00:07:32,560 --> 00:07:34,319
long story short

199
00:07:34,319 --> 00:07:35,840
we didn't find a way to both force the

200
00:07:35,840 --> 00:07:38,160
deception of the of the film of fire so

201
00:07:38,160 --> 00:07:40,080
we went on a different approach

202
00:07:40,080 --> 00:07:41,759
the boat itself

203
00:07:41,759 --> 00:07:45,039
then we found two socks or cpus

204
00:07:45,039 --> 00:07:46,879
one of them is closer to the five which

205
00:07:46,879 --> 00:07:48,479
is the chip that is responsible for

206
00:07:48,479 --> 00:07:50,400
passing and sending of ethernet frames

207
00:07:50,400 --> 00:07:53,120
we figured because these two are close

208
00:07:53,120 --> 00:07:54,720
the stock number two is the one that is

209
00:07:54,720 --> 00:07:56,240
responsible for the network operation of

210
00:07:56,240 --> 00:07:58,240
the device which is where we hope to

211
00:07:58,240 --> 00:08:00,319
find the vulnerability

212
00:08:00,319 --> 00:08:02,560
and we also found this debug interface

213
00:08:02,560 --> 00:08:03,919
connected to the

214
00:08:03,919 --> 00:08:05,680
jtag pins of the device so we could

215
00:08:05,680 --> 00:08:07,360
connect to it and potentially debug the

216
00:08:07,360 --> 00:08:09,599
cpu directly

217
00:08:09,599 --> 00:08:13,840
so we connected it and gave it a go

218
00:08:15,599 --> 00:08:17,520
okay maybe you have that

219
00:08:17,520 --> 00:08:19,680
but this annoying sounds is what the ups

220
00:08:19,680 --> 00:08:22,639
makes when you connect the jtag

221
00:08:22,639 --> 00:08:24,639
jtag interface and this means that the

222
00:08:24,639 --> 00:08:27,120
ups is frozen it doesn't work normally

223
00:08:27,120 --> 00:08:28,639
anymore and the only way to revert it is

224
00:08:28,639 --> 00:08:31,440
with a hard manual reboot

225
00:08:31,440 --> 00:08:32,399
and

226
00:08:32,399 --> 00:08:34,000
after some head scratching we went to

227
00:08:34,000 --> 00:08:36,080
the wireless of them all which is the

228
00:08:36,080 --> 00:08:37,519
manual or in this case the socks

229
00:08:37,519 --> 00:08:39,360
datasheet then we found out about the

230
00:08:39,360 --> 00:08:41,279
feature called rdp

231
00:08:41,279 --> 00:08:43,839
um what is rdp this is how it's

232
00:08:43,839 --> 00:08:45,120
described

233
00:08:45,120 --> 00:08:47,200
i focused the important parts for you

234
00:08:47,200 --> 00:08:50,640
and the only important parts

235
00:08:50,720 --> 00:08:53,279
essentially what it means is that when

236
00:08:53,279 --> 00:08:55,760
the jtag interface is connected

237
00:08:55,760 --> 00:08:57,440
the flash has access to the flash is

238
00:08:57,440 --> 00:09:00,480
shut out and the the only way to revert

239
00:09:00,480 --> 00:09:02,399
it is with the reboot

240
00:09:02,399 --> 00:09:03,440
so

241
00:09:03,440 --> 00:09:04,959
to summarize

242
00:09:04,959 --> 00:09:07,680
um when we connect the jtag we don't

243
00:09:07,680 --> 00:09:09,360
have access to the flash anymore but we

244
00:09:09,360 --> 00:09:11,040
still have access to the ram

245
00:09:11,040 --> 00:09:12,240
and

246
00:09:12,240 --> 00:09:14,000
that the only way to prevent it is with

247
00:09:14,000 --> 00:09:15,760
a reboot but to get a snapshot of the

248
00:09:15,760 --> 00:09:17,360
ram in the same moment we connected the

249
00:09:17,360 --> 00:09:18,560
debugger

250
00:09:18,560 --> 00:09:21,360
so we can just dump the firmware but we

251
00:09:21,360 --> 00:09:23,360
didn't give up we just needed a little

252
00:09:23,360 --> 00:09:25,760
help from a little frame and in this

253
00:09:25,760 --> 00:09:26,720
case

254
00:09:26,720 --> 00:09:29,360
it is a smaller ups by apc

255
00:09:29,360 --> 00:09:32,240
and we label these two with and without

256
00:09:32,240 --> 00:09:33,920
because only one of them has the smart

257
00:09:33,920 --> 00:09:36,480
connect feature we talked about but

258
00:09:36,480 --> 00:09:38,800
they are both smart so they are both

259
00:09:38,800 --> 00:09:40,800
both part of the smart connect device

260
00:09:40,800 --> 00:09:42,000
family

261
00:09:42,000 --> 00:09:42,959
uh

262
00:09:42,959 --> 00:09:46,080
only one of them ebola has rdp but on

263
00:09:46,080 --> 00:09:48,080
one of them it is turned off

264
00:09:48,080 --> 00:09:49,440
so

265
00:09:49,440 --> 00:09:51,279
this is surprising because

266
00:09:51,279 --> 00:09:52,880
we already know that apc knows about

267
00:09:52,880 --> 00:09:55,200
this feature and how to use it but

268
00:09:55,200 --> 00:09:57,839
nonetheless it was turned off we just

269
00:09:57,839 --> 00:09:59,600
connected the debug interface dumped the

270
00:09:59,600 --> 00:10:01,200
firmware and could reverse it without

271
00:10:01,200 --> 00:10:02,399
any problems

272
00:10:02,399 --> 00:10:04,320
we focused on the decryption process in

273
00:10:04,320 --> 00:10:07,120
order to decrypt the original filmers uh

274
00:10:07,120 --> 00:10:09,519
decryption and unfortunately they are

275
00:10:09,519 --> 00:10:10,640
both

276
00:10:10,640 --> 00:10:13,200
they have a different encryption

277
00:10:13,200 --> 00:10:14,640
this was not the end of it because we

278
00:10:14,640 --> 00:10:16,320
found the last clue

279
00:10:16,320 --> 00:10:17,920
they have a similar thermal package

280
00:10:17,920 --> 00:10:18,959
structure

281
00:10:18,959 --> 00:10:22,079
and to see why this is such a big hint

282
00:10:22,079 --> 00:10:24,640
take this into consideration we figured

283
00:10:24,640 --> 00:10:26,720
a similar firmware structure means a

284
00:10:26,720 --> 00:10:29,040
similar update process

285
00:10:29,040 --> 00:10:31,279
so we took on the similar the small

286
00:10:31,279 --> 00:10:33,600
firmware the small ups's

287
00:10:33,600 --> 00:10:35,440
update process and found out that it

288
00:10:35,440 --> 00:10:37,839
decrypts the thermal chunk by chunk each

289
00:10:37,839 --> 00:10:40,800
time placing one chunk in memory

290
00:10:40,800 --> 00:10:42,160
temporarily

291
00:10:42,160 --> 00:10:44,000
and remember we can peek into the ram

292
00:10:44,000 --> 00:10:45,680
using the debug interface

293
00:10:45,680 --> 00:10:47,760
so we have a game plan to extract the

294
00:10:47,760 --> 00:10:49,040
entire firmware

295
00:10:49,040 --> 00:10:51,440
we initiate a film update we wait for

296
00:10:51,440 --> 00:10:53,519
the correct chunk to be stored in the in

297
00:10:53,519 --> 00:10:54,880
the memory

298
00:10:54,880 --> 00:10:56,880
we dump the memory to get the chunk and

299
00:10:56,880 --> 00:10:58,880
reboot deck to exit the rdp restricted

300
00:10:58,880 --> 00:11:01,120
state if we repeat this time and time

301
00:11:01,120 --> 00:11:03,680
again we could get the entire firmware

302
00:11:03,680 --> 00:11:05,839
but not so fast

303
00:11:05,839 --> 00:11:08,000
each iteration like this takes a lot of

304
00:11:08,000 --> 00:11:10,160
human interaction like timing for the

305
00:11:10,160 --> 00:11:12,480
correct chunk to be stored in memory a

306
00:11:12,480 --> 00:11:14,399
pressing of physical buttons in order to

307
00:11:14,399 --> 00:11:16,800
initiate the update and pulling of the

308
00:11:16,800 --> 00:11:18,560
battery to perform the hard manual

309
00:11:18,560 --> 00:11:19,839
reboot

310
00:11:19,839 --> 00:11:21,279
each iteration like that takes about

311
00:11:21,279 --> 00:11:22,480
five minutes

312
00:11:22,480 --> 00:11:24,720
and even if we do get a different chunk

313
00:11:24,720 --> 00:11:26,959
every iteration there are about 1200

314
00:11:26,959 --> 00:11:28,399
chunks in total

315
00:11:28,399 --> 00:11:30,399
so to sum up this it's going to take us

316
00:11:30,399 --> 00:11:31,920
weeks of grinding to get out the

317
00:11:31,920 --> 00:11:34,160
encrypted filament

318
00:11:34,160 --> 00:11:36,959
so we took on this approach

319
00:11:36,959 --> 00:11:39,279
we used a raspberry pi to control all of

320
00:11:39,279 --> 00:11:41,360
the elements

321
00:11:41,360 --> 00:11:43,680
the um the power pins of the sock

322
00:11:43,680 --> 00:11:46,480
instead of pulling out the battery

323
00:11:46,480 --> 00:11:48,160
the electrical signal of the buttons

324
00:11:48,160 --> 00:11:50,399
instead of pressing them

325
00:11:50,399 --> 00:11:51,680
of course the

326
00:11:51,680 --> 00:11:54,079
debug interface to dump the ram and

327
00:11:54,079 --> 00:11:55,600
timing with better precision that we

328
00:11:55,600 --> 00:11:57,839
could ever get manually

329
00:11:57,839 --> 00:11:59,440
we also targeted only the bootloader

330
00:11:59,440 --> 00:12:00,639
power twist which is where the

331
00:12:00,639 --> 00:12:02,079
decryption takes place if we get the

332
00:12:02,079 --> 00:12:04,160
decryption at the decryption key we

333
00:12:04,160 --> 00:12:04,880
could

334
00:12:04,880 --> 00:12:06,639
keep the entire film without brute

335
00:12:06,639 --> 00:12:07,920
forcing all of it

336
00:12:07,920 --> 00:12:09,120
on the right you can check out the

337
00:12:09,120 --> 00:12:11,839
frankenstein setup we had in our lab

338
00:12:11,839 --> 00:12:13,279
if you want to read more about it there

339
00:12:13,279 --> 00:12:15,440
is a white pepper you can check out

340
00:12:15,440 --> 00:12:16,399
so

341
00:12:16,399 --> 00:12:19,120
after a night of running this setup we

342
00:12:19,120 --> 00:12:21,200
got our deceptive thermal so we could

343
00:12:21,200 --> 00:12:24,000
start revealing

344
00:12:24,000 --> 00:12:26,240
uh the first thing we noticed is that

345
00:12:26,240 --> 00:12:28,320
where the firmware file is encrypted it

346
00:12:28,320 --> 00:12:30,560
is not signed and also the decryption

347
00:12:30,560 --> 00:12:32,639
uses a symmetric key which is the same

348
00:12:32,639 --> 00:12:34,880
for every device line

349
00:12:34,880 --> 00:12:36,079
and

350
00:12:36,079 --> 00:12:37,200
this is why this is the first

351
00:12:37,200 --> 00:12:39,040
vulnerability we found because if an

352
00:12:39,040 --> 00:12:42,160
attacker gets their hands on

353
00:12:42,160 --> 00:12:44,160
this ski like we did they could create a

354
00:12:44,160 --> 00:12:47,120
malicious filmer and install it to get

355
00:12:47,120 --> 00:12:48,800
code execution either with physical

356
00:12:48,800 --> 00:12:50,639
access through usb

357
00:12:50,639 --> 00:12:53,600
or with um lan access and get remote

358
00:12:53,600 --> 00:12:55,200
code execution

359
00:12:55,200 --> 00:12:56,160
but

360
00:12:56,160 --> 00:12:58,320
this is not the end of it because we

361
00:12:58,320 --> 00:13:00,959
look for vulnerability from the internet

362
00:13:00,959 --> 00:13:03,200
now gal will explain how we found this

363
00:13:03,200 --> 00:13:05,120
vulnerability how we exploited it and

364
00:13:05,120 --> 00:13:08,959
how we leveled it in a fire way

365
00:13:12,079 --> 00:13:14,639
okay so as you've just said

366
00:13:14,639 --> 00:13:16,560
we were looking to expand the internet

367
00:13:16,560 --> 00:13:19,360
attack surface the remote remote code

368
00:13:19,360 --> 00:13:21,920
execution surface from the lan to the

369
00:13:21,920 --> 00:13:23,040
internet

370
00:13:23,040 --> 00:13:24,560
and we already know the device is

371
00:13:24,560 --> 00:13:26,800
supporting the the smart connect feature

372
00:13:26,800 --> 00:13:28,639
exposing itself to an internet attack

373
00:13:28,639 --> 00:13:30,880
surface and we know from a black box

374
00:13:30,880 --> 00:13:32,800
graphic inspection that the smart

375
00:13:32,800 --> 00:13:35,040
connect uses tls as its authentication

376
00:13:35,040 --> 00:13:36,320
mechanism

377
00:13:36,320 --> 00:13:38,240
um so to challenge the integrity of this

378
00:13:38,240 --> 00:13:41,360
authentication process uh we dipped in

379
00:13:41,360 --> 00:13:44,480
and took a look uh in the

380
00:13:44,480 --> 00:13:46,480
firmware that we just decrypted

381
00:13:46,480 --> 00:13:48,800
decrypted and we found that for the tls

382
00:13:48,800 --> 00:13:51,199
implementation the apc uses an external

383
00:13:51,199 --> 00:13:53,120
library called nano ssl

384
00:13:53,120 --> 00:13:55,440
developed by mokana a company that

385
00:13:55,440 --> 00:13:57,040
supplies third-party cryptographic

386
00:13:57,040 --> 00:13:59,599
solutions

387
00:13:59,760 --> 00:14:03,839
and though the use of external libraries

388
00:14:05,120 --> 00:14:06,800
this is not the devil yeah this is not

389
00:14:06,800 --> 00:14:09,760
the demo yet but it's a hint uh the use

390
00:14:09,760 --> 00:14:12,160
of external algorithms it does a lot of

391
00:14:12,160 --> 00:14:13,760
advantages

392
00:14:13,760 --> 00:14:15,680
on one end but on the other hand it also

393
00:14:15,680 --> 00:14:17,680
brings in a built-in uncertainty

394
00:14:17,680 --> 00:14:19,600
especially when closed source

395
00:14:19,600 --> 00:14:21,199
libraries are used

396
00:14:21,199 --> 00:14:23,279
and if they have bugs they bring their

397
00:14:23,279 --> 00:14:25,920
bugs with them to your code

398
00:14:25,920 --> 00:14:27,519
but even if the

399
00:14:27,519 --> 00:14:29,279
if the external library is implemented

400
00:14:29,279 --> 00:14:31,279
perfectly with no bugs at all it doesn't

401
00:14:31,279 --> 00:14:33,760
mean that a careless usage of the of the

402
00:14:33,760 --> 00:14:36,240
external code cannot put your code in

403
00:14:36,240 --> 00:14:39,120
risk if the glue logic that connects the

404
00:14:39,120 --> 00:14:42,160
external code to the internal code

405
00:14:42,160 --> 00:14:44,320
relies on wrong assumptions if the api

406
00:14:44,320 --> 00:14:46,639
is not used as documented in the manuals

407
00:14:46,639 --> 00:14:49,279
it can put your code at risk and we have

408
00:14:49,279 --> 00:14:50,959
a perfect example here

409
00:14:50,959 --> 00:14:53,600
we can see that uh makan that apc uses

410
00:14:53,600 --> 00:14:56,320
the mohana functionality but it

411
00:14:56,320 --> 00:14:58,320
completely returns ignores the return

412
00:14:58,320 --> 00:14:59,360
value

413
00:14:59,360 --> 00:15:00,720
um

414
00:15:00,720 --> 00:15:03,199
it trusts mokano to handle the errors

415
00:15:03,199 --> 00:15:05,920
internally and do whatever needed but on

416
00:15:05,920 --> 00:15:07,279
the other end we know that mukhana

417
00:15:07,279 --> 00:15:09,760
installed instructs the user

418
00:15:09,760 --> 00:15:10,880
to uh

419
00:15:10,880 --> 00:15:12,800
to handle the error that it propagates

420
00:15:12,800 --> 00:15:15,120
up and for example

421
00:15:15,120 --> 00:15:16,959
shuts the connection down

422
00:15:16,959 --> 00:15:20,079
uh if necessary and this seemingly minor

423
00:15:20,079 --> 00:15:21,839
confusion minor issue

424
00:15:21,839 --> 00:15:24,320
we were able to elevate it to a two

425
00:15:24,320 --> 00:15:26,560
critical vulnerabilities zero click that

426
00:15:26,560 --> 00:15:29,120
enables us to do basically everything

427
00:15:29,120 --> 00:15:30,480
from the internet

428
00:15:30,480 --> 00:15:33,040
and the first one is a is a hip overflow

429
00:15:33,040 --> 00:15:34,800
vulnerability that we will not detail in

430
00:15:34,800 --> 00:15:37,040
this talk uh it is also detailed in the

431
00:15:37,040 --> 00:15:38,320
white paper that you've all mentioned

432
00:15:38,320 --> 00:15:39,279
before

433
00:15:39,279 --> 00:15:41,120
the vulnerability that we will detail

434
00:15:41,120 --> 00:15:44,560
about is the tls authentication bypass

435
00:15:44,560 --> 00:15:46,480
vulnerability that basically allows us

436
00:15:46,480 --> 00:15:49,360
to uh masquerade as the apc's cloud and

437
00:15:49,360 --> 00:15:51,839
from there we can use the smart connect

438
00:15:51,839 --> 00:15:53,600
features and and

439
00:15:53,600 --> 00:15:55,759
this is basically the last missing piece

440
00:15:55,759 --> 00:15:58,000
of the puzzle to uh have an internet

441
00:15:58,000 --> 00:16:00,399
attack scenario

442
00:16:00,399 --> 00:16:02,959
but to understand this vulnerability

443
00:16:02,959 --> 00:16:04,720
well we first need to be familiar with

444
00:16:04,720 --> 00:16:07,360
kind of a niche tls feature called cls

445
00:16:07,360 --> 00:16:09,040
resumption

446
00:16:09,040 --> 00:16:11,519
and this feature allows parties to uh to

447
00:16:11,519 --> 00:16:13,440
re-establish

448
00:16:13,440 --> 00:16:14,880
their connection

449
00:16:14,880 --> 00:16:16,320
using their

450
00:16:16,320 --> 00:16:18,880
already proven trust between them after

451
00:16:18,880 --> 00:16:21,759
the first authentication of

452
00:16:21,759 --> 00:16:23,279
and what they do in their first

453
00:16:23,279 --> 00:16:26,480
authentication they first

454
00:16:26,480 --> 00:16:29,839
exchange session id uh and then they do

455
00:16:29,839 --> 00:16:31,519
they do the authentication and exchange

456
00:16:31,519 --> 00:16:34,320
keys and after that the generated key

457
00:16:34,320 --> 00:16:36,560
the master secret that it is used for

458
00:16:36,560 --> 00:16:38,079
the encryption and decryption of

459
00:16:38,079 --> 00:16:40,560
communication is stored along with the

460
00:16:40,560 --> 00:16:42,639
session a b so when they want to

461
00:16:42,639 --> 00:16:44,160
re-establish the connection they can

462
00:16:44,160 --> 00:16:46,720
simply just present the session id once

463
00:16:46,720 --> 00:16:47,680
again

464
00:16:47,680 --> 00:16:49,519
and

465
00:16:49,519 --> 00:16:51,040
hop straight

466
00:16:51,040 --> 00:16:53,360
to the communication phase without going

467
00:16:53,360 --> 00:16:54,240
through the

468
00:16:54,240 --> 00:16:56,160
handshake phase once again

469
00:16:56,160 --> 00:16:57,920
and simply use the master secret from

470
00:16:57,920 --> 00:16:59,759
before

471
00:16:59,759 --> 00:17:00,639
but

472
00:17:00,639 --> 00:17:01,600
this

473
00:17:01,600 --> 00:17:03,040
feature comes with a hidden wrist

474
00:17:03,040 --> 00:17:06,400
because one party somehow manages to uh

475
00:17:06,400 --> 00:17:08,480
convince the other one that

476
00:17:08,480 --> 00:17:11,199
they should resume the session that did

477
00:17:11,199 --> 00:17:13,199
not even start

478
00:17:13,199 --> 00:17:14,559
the first time

479
00:17:14,559 --> 00:17:15,919
it means that

480
00:17:15,919 --> 00:17:18,559
the default site will use will fetch

481
00:17:18,559 --> 00:17:20,720
master secret that was not generated and

482
00:17:20,720 --> 00:17:22,640
it's an undefined secret and this

483
00:17:22,640 --> 00:17:24,000
undefined secret

484
00:17:24,000 --> 00:17:26,400
might be predictable depending on the

485
00:17:26,400 --> 00:17:29,280
the code base of the tls implementation

486
00:17:29,280 --> 00:17:31,360
and if it's predictable it means this

487
00:17:31,360 --> 00:17:33,840
authentication can be bypassed

488
00:17:33,840 --> 00:17:35,360
and in our case

489
00:17:35,360 --> 00:17:37,039
we already know that the mohana api

490
00:17:37,039 --> 00:17:41,840
handling bug ensures that the session

491
00:17:42,080 --> 00:17:43,760
remains hanging regardless of the error

492
00:17:43,760 --> 00:17:44,720
code

493
00:17:44,720 --> 00:17:46,960
and we can see that the session it is

494
00:17:46,960 --> 00:17:49,600
stored during the handshake process but

495
00:17:49,600 --> 00:17:51,200
the master secret is generated only

496
00:17:51,200 --> 00:17:53,280
after a successful handshake this means

497
00:17:53,280 --> 00:17:55,760
that if we uh fail right after storing

498
00:17:55,760 --> 00:17:56,559
the

499
00:17:56,559 --> 00:17:57,280
the

500
00:17:57,280 --> 00:17:59,280
the session aid in place

501
00:17:59,280 --> 00:18:02,000
we can try to launch a previous

502
00:18:02,000 --> 00:18:04,000
pre-authentication resumption attack

503
00:18:04,000 --> 00:18:05,200
with the

504
00:18:05,200 --> 00:18:07,200
with the same session id as can be seen

505
00:18:07,200 --> 00:18:08,000
here

506
00:18:08,000 --> 00:18:09,679
we can start with sending a bad

507
00:18:09,679 --> 00:18:11,360
handshake with a session id of our

508
00:18:11,360 --> 00:18:12,400
choice

509
00:18:12,400 --> 00:18:14,720
then we start a resumption

510
00:18:14,720 --> 00:18:16,720
uh resumption process using the same

511
00:18:16,720 --> 00:18:18,320
session id

512
00:18:18,320 --> 00:18:20,160
and we know from

513
00:18:20,160 --> 00:18:21,679
taking a look at the code that the

514
00:18:21,679 --> 00:18:24,160
master secret at that time is just the

515
00:18:24,160 --> 00:18:26,480
initialization zeros so we can predict

516
00:18:26,480 --> 00:18:28,960
the master sequence will be no so secret

517
00:18:28,960 --> 00:18:31,600
anymore zeros and we can use zeros for

518
00:18:31,600 --> 00:18:33,120
encrypting and decrypting the

519
00:18:33,120 --> 00:18:34,320
communication

520
00:18:34,320 --> 00:18:36,880
and by doing that we just

521
00:18:36,880 --> 00:18:40,080
bypass the authentication and we'll see

522
00:18:40,080 --> 00:18:42,240
how we do that step by step so we need

523
00:18:42,240 --> 00:18:44,559
to send two packets

524
00:18:44,559 --> 00:18:46,960
the first one is using a magic id

525
00:18:46,960 --> 00:18:48,960
essentially that we choose and an

526
00:18:48,960 --> 00:18:51,440
invalid cipher suite fdfd

527
00:18:51,440 --> 00:18:54,400
it starts with setting the

528
00:18:54,400 --> 00:18:57,679
the resumption boolean to false

529
00:18:57,679 --> 00:19:00,000
then uh it compares the received session

530
00:19:00,000 --> 00:19:01,919
id to the stored one but for the first

531
00:19:01,919 --> 00:19:03,520
bucket it always fails because the

532
00:19:03,520 --> 00:19:05,100
stored one

533
00:19:05,100 --> 00:19:06,640
[Music]

534
00:19:06,640 --> 00:19:08,320
the session d was not stored in the

535
00:19:08,320 --> 00:19:10,720
object yet um

536
00:19:10,720 --> 00:19:12,720
and then it checks if it's a resumption

537
00:19:12,720 --> 00:19:14,799
and because it is not a resumption it

538
00:19:14,799 --> 00:19:16,640
sets the session id in the

539
00:19:16,640 --> 00:19:18,799
in the object and

540
00:19:18,799 --> 00:19:20,640
then it checks and validates the cipher

541
00:19:20,640 --> 00:19:22,080
suite but because it's invalid the

542
00:19:22,080 --> 00:19:23,679
cipher suite member

543
00:19:23,679 --> 00:19:25,120
remains blank

544
00:19:25,120 --> 00:19:27,919
and the check of the cypher suite fails

545
00:19:27,919 --> 00:19:30,320
and it returns no cypher suite error

546
00:19:30,320 --> 00:19:34,000
code this error code is returned

547
00:19:34,000 --> 00:19:36,640
it is ignored to be and we can send

548
00:19:36,640 --> 00:19:39,520
another handshake packet this time um

549
00:19:39,520 --> 00:19:41,120
with the same session id but a valid

550
00:19:41,120 --> 00:19:42,400
cipher suite

551
00:19:42,400 --> 00:19:44,160
and the resumption boolean is set to

552
00:19:44,160 --> 00:19:45,840
false again

553
00:19:45,840 --> 00:19:48,640
then the session id is is compared but

554
00:19:48,640 --> 00:19:50,160
this time it provides a match because we

555
00:19:50,160 --> 00:19:52,080
set the same one in place so the

556
00:19:52,080 --> 00:19:54,240
resumption building is set to true

557
00:19:54,240 --> 00:19:57,760
the check of the resumption boolean

558
00:19:57,760 --> 00:20:00,160
indicates that the the session id is not

559
00:20:00,160 --> 00:20:02,320
supposed to be copied once again

560
00:20:02,320 --> 00:20:04,240
and the next thing is checking the

561
00:20:04,240 --> 00:20:06,480
cipher sweep which is valid this time

562
00:20:06,480 --> 00:20:08,400
and it sets the field

563
00:20:08,400 --> 00:20:11,360
and when we check the cipher suite we

564
00:20:11,360 --> 00:20:13,360
pass we pass the validation check and

565
00:20:13,360 --> 00:20:15,280
because it's a resumption

566
00:20:15,280 --> 00:20:16,799
flow

567
00:20:16,799 --> 00:20:19,360
we try to fetch the key from the memory

568
00:20:19,360 --> 00:20:21,120
but because it was

569
00:20:21,120 --> 00:20:23,120
not initialized it was not generated

570
00:20:23,120 --> 00:20:25,360
it's only zeros and we can see how it

571
00:20:25,360 --> 00:20:27,440
looks in wireshark so uh the client

572
00:20:27,440 --> 00:20:28,960
starts the ups starts with sending

573
00:20:28,960 --> 00:20:31,760
client a low message and the malformed

574
00:20:31,760 --> 00:20:33,760
the malicious attacker

575
00:20:33,760 --> 00:20:35,600
sends two uh server low packets of

576
00:20:35,600 --> 00:20:38,400
itself but um the first one highlighted

577
00:20:38,400 --> 00:20:39,280
in red

578
00:20:39,280 --> 00:20:41,440
is the session id we chose and a new

579
00:20:41,440 --> 00:20:43,840
valid cipher suite and the second one in

580
00:20:43,840 --> 00:20:45,520
blue uses the same session id but the

581
00:20:45,520 --> 00:20:47,840
valid cipher suite and from there we can

582
00:20:47,840 --> 00:20:50,159
see that they keep communicating

583
00:20:50,159 --> 00:20:52,640
communicating with like trusted parties

584
00:20:52,640 --> 00:20:54,480
with applicative messages

585
00:20:54,480 --> 00:20:56,960
and

586
00:20:57,360 --> 00:20:58,640
by doing that

587
00:20:58,640 --> 00:21:01,520
we can now connect three uh different

588
00:21:01,520 --> 00:21:03,919
dots we know that we can bypass the

589
00:21:03,919 --> 00:21:05,919
authentication of the smart connect

590
00:21:05,919 --> 00:21:08,080
we know that the smart connect feature

591
00:21:08,080 --> 00:21:11,200
uh allows us to uh to perform a remote

592
00:21:11,200 --> 00:21:13,120
firmware upgrade and we also know that

593
00:21:13,120 --> 00:21:14,720
we have a vulnerability of the missing

594
00:21:14,720 --> 00:21:16,480
signage of the firmer and combining

595
00:21:16,480 --> 00:21:18,880
these three allow an attacker to uh

596
00:21:18,880 --> 00:21:20,480
basically install

597
00:21:20,480 --> 00:21:21,840
from the internet

598
00:21:21,840 --> 00:21:25,200
a self-crafted malicious firmware but

599
00:21:25,200 --> 00:21:26,559
um

600
00:21:26,559 --> 00:21:28,799
we we have the remote code execution of

601
00:21:28,799 --> 00:21:29,760
course

602
00:21:29,760 --> 00:21:31,440
and

603
00:21:31,440 --> 00:21:33,919
we wonder what can an attacker do by

604
00:21:33,919 --> 00:21:36,000
installing a malicious firmware what

605
00:21:36,000 --> 00:21:38,400
would he want the firmware to do

606
00:21:38,400 --> 00:21:39,520
so

607
00:21:39,520 --> 00:21:41,440
with of course the common risk of using

608
00:21:41,440 --> 00:21:42,240
the

609
00:21:42,240 --> 00:21:43,919
the ups as a bridge to the internal

610
00:21:43,919 --> 00:21:45,039
network

611
00:21:45,039 --> 00:21:47,039
and using the installation of the

612
00:21:47,039 --> 00:21:49,200
firmware as a persistent stronghold

613
00:21:49,200 --> 00:21:51,360
inside the network and from there an

614
00:21:51,360 --> 00:21:52,960
attacker can spread to other connected

615
00:21:52,960 --> 00:21:54,080
devices

616
00:21:54,080 --> 00:21:55,600
and

617
00:21:55,600 --> 00:21:57,600
basically from there the the the way to

618
00:21:57,600 --> 00:21:59,360
launch a ransomware attack is pretty

619
00:21:59,360 --> 00:22:00,240
short

620
00:22:00,240 --> 00:22:03,600
but we want to highlight the the

621
00:22:03,600 --> 00:22:06,159
abilities of the ups with its own

622
00:22:06,159 --> 00:22:07,280
uniqueness and the unique

623
00:22:07,280 --> 00:22:09,679
characteristics and we also know that

624
00:22:09,679 --> 00:22:12,559
the ups supplies uh

625
00:22:12,559 --> 00:22:14,640
supplies power to uh mission critical

626
00:22:14,640 --> 00:22:17,280
devices and we can cause enormous

627
00:22:17,280 --> 00:22:19,120
infrastructure damage by simply shutting

628
00:22:19,120 --> 00:22:20,960
them down because they cannot tolerate

629
00:22:20,960 --> 00:22:23,039
downtime so this is

630
00:22:23,039 --> 00:22:25,840
an attack that we can do and often as

631
00:22:25,840 --> 00:22:29,120
for the ups itself an attacker can also

632
00:22:29,120 --> 00:22:31,520
break the ups by simply

633
00:22:31,520 --> 00:22:33,120
for example erasing the flash that

634
00:22:33,120 --> 00:22:34,799
stores the firmware by running the code

635
00:22:34,799 --> 00:22:36,880
there and

636
00:22:36,880 --> 00:22:40,320
basically disable the ups totally that's

637
00:22:40,320 --> 00:22:42,960
we wanted to to to look for uh maybe

638
00:22:42,960 --> 00:22:44,960
some more sophisticated attack attacks

639
00:22:44,960 --> 00:22:46,960
to please our pyromania

640
00:22:46,960 --> 00:22:48,960
and

641
00:22:48,960 --> 00:22:51,120
to measure the maximum potential impact

642
00:22:51,120 --> 00:22:52,480
we should have a better understanding of

643
00:22:52,480 --> 00:22:56,000
the system so we start with the most

644
00:22:56,000 --> 00:22:58,559
basic principle of the ups operation

645
00:22:58,559 --> 00:23:00,960
which is converting the dc voltage of

646
00:23:00,960 --> 00:23:02,320
the battery

647
00:23:02,320 --> 00:23:06,240
to an ac power signal that imitates the

648
00:23:06,240 --> 00:23:08,559
the power grid power signal and the more

649
00:23:08,559 --> 00:23:10,960
it's similar to the uh the power grid

650
00:23:10,960 --> 00:23:13,120
signal the better and

651
00:23:13,120 --> 00:23:15,919
to perfect this this output signal the

652
00:23:15,919 --> 00:23:17,919
ups software is involved but we wanted

653
00:23:17,919 --> 00:23:20,159
to measure how much

654
00:23:20,159 --> 00:23:21,360
and

655
00:23:21,360 --> 00:23:22,640
to understand that i'll take you to a

656
00:23:22,640 --> 00:23:24,240
short journey to the inerts of a modern

657
00:23:24,240 --> 00:23:26,720
smart ups but for simplicity i'll first

658
00:23:26,720 --> 00:23:29,200
split the ups blocks to two house

659
00:23:29,200 --> 00:23:31,039
so we have the left half which is

660
00:23:31,039 --> 00:23:33,200
responsible for all the communication

661
00:23:33,200 --> 00:23:35,200
interfaces from the display panel the

662
00:23:35,200 --> 00:23:36,480
usb and the

663
00:23:36,480 --> 00:23:39,280
and the ethernet ports and

664
00:23:39,280 --> 00:23:42,080
this is the cpu that we researched by

665
00:23:42,080 --> 00:23:43,919
this point and there we found our

666
00:23:43,919 --> 00:23:47,520
vulnerabilities that we just presented

667
00:23:47,520 --> 00:23:48,840
but

668
00:23:48,840 --> 00:23:51,440
when causing damage

669
00:23:51,440 --> 00:23:53,120
and causing power damage is what we're

670
00:23:53,120 --> 00:23:54,880
looking for the rifle is much more

671
00:23:54,880 --> 00:23:58,240
interesting the texas instruments cpu

672
00:23:58,240 --> 00:24:00,000
supervises the

673
00:24:00,000 --> 00:24:02,000
the all the electric electrical

674
00:24:02,000 --> 00:24:04,400
operation and for example it switches

675
00:24:04,400 --> 00:24:06,640
between relaying the power inputs when

676
00:24:06,640 --> 00:24:10,000
available or the battery inputs when the

677
00:24:10,000 --> 00:24:11,760
the power grid is down

678
00:24:11,760 --> 00:24:14,080
and it is also responsible for

679
00:24:14,080 --> 00:24:16,559
forming the output waveform of the

680
00:24:16,559 --> 00:24:17,600
signal

681
00:24:17,600 --> 00:24:19,840
that uh is converted from the battery to

682
00:24:19,840 --> 00:24:22,000
the power outlets and by understanding

683
00:24:22,000 --> 00:24:24,000
how it is it is doing that how it's

684
00:24:24,000 --> 00:24:27,760
forming uh these uh this output signal

685
00:24:27,760 --> 00:24:30,000
we were able to find our first smart

686
00:24:30,000 --> 00:24:33,120
attack which is drawing

687
00:24:33,120 --> 00:24:34,080
uh

688
00:24:34,080 --> 00:24:36,240
an output signal of our choice and in

689
00:24:36,240 --> 00:24:39,440
this case um we uh draw um

690
00:24:39,440 --> 00:24:40,400
we

691
00:24:40,400 --> 00:24:42,640
attempted and achieved an overvoltage

692
00:24:42,640 --> 00:24:45,200
signal using a square wave signal that

693
00:24:45,200 --> 00:24:50,000
reached to up to more than 330 volts

694
00:24:50,080 --> 00:24:52,799
comparing compared to the 330 volts that

695
00:24:52,799 --> 00:24:54,880
the european power grid

696
00:24:54,880 --> 00:24:56,960
uses and we could manipulate the

697
00:24:56,960 --> 00:24:58,880
frequency of the signal as well as you

698
00:24:58,880 --> 00:25:01,760
can see here at 200 hertz instead of 50

699
00:25:01,760 --> 00:25:03,120
hertz

700
00:25:03,120 --> 00:25:05,200
and

701
00:25:05,200 --> 00:25:06,720
these pauses connect the devices to a

702
00:25:06,720 --> 00:25:09,840
way more destructive impact because

703
00:25:09,840 --> 00:25:12,880
and we can actually damage them with a

704
00:25:12,880 --> 00:25:15,200
with a tempered signal rather than just

705
00:25:15,200 --> 00:25:17,679
shutting them down and this is the first

706
00:25:17,679 --> 00:25:18,640
smart

707
00:25:18,640 --> 00:25:20,559
attack that we found

708
00:25:20,559 --> 00:25:22,159
but to understand how we can abuse the

709
00:25:22,159 --> 00:25:24,480
ups itself we need an even more infinite

710
00:25:24,480 --> 00:25:27,279
understanding of the system

711
00:25:27,279 --> 00:25:28,960
okay so these are the main blocks of the

712
00:25:28,960 --> 00:25:30,960
power conversion operation and the

713
00:25:30,960 --> 00:25:33,520
highlighted mcu is the uh the texas

714
00:25:33,520 --> 00:25:35,440
instruments that we've shown earlier

715
00:25:35,440 --> 00:25:36,720
but to have a better understanding of

716
00:25:36,720 --> 00:25:38,159
the operation i'll introduce you with

717
00:25:38,159 --> 00:25:39,760
some new players

718
00:25:39,760 --> 00:25:42,240
and we'll start with the age bridge and

719
00:25:42,240 --> 00:25:44,000
this is a key component of the power

720
00:25:44,000 --> 00:25:46,080
conversion process because it allows the

721
00:25:46,080 --> 00:25:49,360
changes in the polarity of the

722
00:25:49,360 --> 00:25:51,039
of the voltage

723
00:25:51,039 --> 00:25:52,799
it's connected to a

724
00:25:52,799 --> 00:25:55,120
button to a battery on top and ground on

725
00:25:55,120 --> 00:25:57,679
button and by transferring between three

726
00:25:57,679 --> 00:26:00,480
stage and three different states we can

727
00:26:00,480 --> 00:26:01,520
have

728
00:26:01,520 --> 00:26:02,960
positive voltage

729
00:26:02,960 --> 00:26:06,320
on the load negative voltage on the load

730
00:26:06,320 --> 00:26:08,559
or zero voltage that we'll ignore to

731
00:26:08,559 --> 00:26:10,559
simplify the model but we will be back

732
00:26:10,559 --> 00:26:13,918
to the h bridge shortly

733
00:26:14,320 --> 00:26:15,440
and

734
00:26:15,440 --> 00:26:17,440
this is the battery that is connected

735
00:26:17,440 --> 00:26:19,039
that supplies the voltage to the h

736
00:26:19,039 --> 00:26:21,520
bridge this is the ups battery and it is

737
00:26:21,520 --> 00:26:23,600
connected in parallel to a capacitor

738
00:26:23,600 --> 00:26:26,000
called dc link capacitor

739
00:26:26,000 --> 00:26:28,240
it's like a superhero it's a team player

740
00:26:28,240 --> 00:26:31,520
it's purpose there is to handle the

741
00:26:31,520 --> 00:26:34,080
the current that develops because of the

742
00:26:34,080 --> 00:26:36,400
uh the pulses the changes in the voltage

743
00:26:36,400 --> 00:26:38,480
in the age bridge and it absorbs these

744
00:26:38,480 --> 00:26:41,120
currents and protects the the other

745
00:26:41,120 --> 00:26:44,959
components of the circuit by doing so

746
00:26:45,039 --> 00:26:46,720
and the next component is the

747
00:26:46,720 --> 00:26:48,480
transformer which is that this is just a

748
00:26:48,480 --> 00:26:50,960
pair of coupled inductors that

749
00:26:50,960 --> 00:26:53,440
it is used as the load of the age bridge

750
00:26:53,440 --> 00:26:55,360
and its purpose is

751
00:26:55,360 --> 00:26:59,039
to uh convert the digital pulses to an

752
00:26:59,039 --> 00:27:01,279
analog ac waveform like the output

753
00:27:01,279 --> 00:27:02,480
expects

754
00:27:02,480 --> 00:27:04,640
and this is the actual output the load

755
00:27:04,640 --> 00:27:07,520
the power outlets of the ups

756
00:27:07,520 --> 00:27:10,000
and last but not least is the mosfets

757
00:27:10,000 --> 00:27:12,159
drivers block which is just a bunch of

758
00:27:12,159 --> 00:27:14,159
integrated circuits that are used as

759
00:27:14,159 --> 00:27:15,760
mediators between

760
00:27:15,760 --> 00:27:18,720
the mcu and the h-bridge

761
00:27:18,720 --> 00:27:22,000
that's all we need to know about it

762
00:27:22,240 --> 00:27:24,720
but let's start with understanding uh

763
00:27:24,720 --> 00:27:26,720
how the h bridge is used to convert the

764
00:27:26,720 --> 00:27:30,240
c signal to ac so

765
00:27:30,240 --> 00:27:33,440
um as we mentioned by closing only q1

766
00:27:33,440 --> 00:27:34,399
and q4

767
00:27:34,399 --> 00:27:36,320
we can have positive voltage on the

768
00:27:36,320 --> 00:27:38,000
transformer on the load

769
00:27:38,000 --> 00:27:39,760
and negative voltage when closing the

770
00:27:39,760 --> 00:27:41,919
other the other diagonal pair

771
00:27:41,919 --> 00:27:44,159
and we go back to positive voltage

772
00:27:44,159 --> 00:27:46,720
and back and forth so we get a steady

773
00:27:46,720 --> 00:27:48,960
pulse like signal that alternates

774
00:27:48,960 --> 00:27:51,120
the direction periodically like an ac

775
00:27:51,120 --> 00:27:53,039
signal

776
00:27:53,039 --> 00:27:55,120
but in the analog world these pulse-like

777
00:27:55,120 --> 00:27:56,880
signals are not isolated from other

778
00:27:56,880 --> 00:27:58,480
parts of the circuit and connected

779
00:27:58,480 --> 00:28:00,559
components react to meaningful voltage

780
00:28:00,559 --> 00:28:03,600
changes of each other and such relation

781
00:28:03,600 --> 00:28:06,240
exists between the transformer voltage

782
00:28:06,240 --> 00:28:08,240
and uh the battery voltage that supplies

783
00:28:08,240 --> 00:28:09,600
the age bridge

784
00:28:09,600 --> 00:28:11,039
and

785
00:28:11,039 --> 00:28:13,520
we can see here in green the transformer

786
00:28:13,520 --> 00:28:14,960
voltage and

787
00:28:14,960 --> 00:28:16,880
you can see that the moment it changes

788
00:28:16,880 --> 00:28:19,840
uh sharply it triggers some voltage

789
00:28:19,840 --> 00:28:21,600
fluctuations on the battery and they're

790
00:28:21,600 --> 00:28:24,880
minor voltage valuations but they uh

791
00:28:24,880 --> 00:28:26,240
they develop they causing the

792
00:28:26,240 --> 00:28:29,039
development of some current and this is

793
00:28:29,039 --> 00:28:31,919
exactly where our superhero the dc link

794
00:28:31,919 --> 00:28:34,640
capacitor comes handy because it absorbs

795
00:28:34,640 --> 00:28:35,840
these currents

796
00:28:35,840 --> 00:28:37,679
and it wastes them in a form of a

797
00:28:37,679 --> 00:28:39,279
negligible

798
00:28:39,279 --> 00:28:42,080
negligible heat but it's really

799
00:28:42,080 --> 00:28:44,320
negligible because it cools off fast

800
00:28:44,320 --> 00:28:45,919
enough between the periods and the whole

801
00:28:45,919 --> 00:28:48,640
operation can keep

802
00:28:48,640 --> 00:28:50,159
happening

803
00:28:50,159 --> 00:28:52,960
in steady state

804
00:28:53,279 --> 00:28:55,600
but we do understand that it is a very

805
00:28:55,600 --> 00:28:58,480
risky point to look on to look on

806
00:28:58,480 --> 00:28:59,440
because

807
00:28:59,440 --> 00:29:00,960
we can control the age grid you can

808
00:29:00,960 --> 00:29:02,399
orchestrate the age bridge because we

809
00:29:02,399 --> 00:29:04,480
have we took over the the texas

810
00:29:04,480 --> 00:29:07,440
instrument mcu using the vulnerability

811
00:29:07,440 --> 00:29:10,159
so we asked ourselves

812
00:29:10,159 --> 00:29:12,640
what what state would we want the age

813
00:29:12,640 --> 00:29:14,640
bridge to be founded to uh cause damage

814
00:29:14,640 --> 00:29:15,600
and

815
00:29:15,600 --> 00:29:18,000
thinking of that the answer is not

816
00:29:18,000 --> 00:29:20,799
very sophisticated it's quite simple if

817
00:29:20,799 --> 00:29:22,720
we close the switches of the same side

818
00:29:22,720 --> 00:29:26,320
simultaneously we

819
00:29:26,320 --> 00:29:29,840
right and then we uh um we connect the

820
00:29:29,840 --> 00:29:32,480
the the battery directly to the ground

821
00:29:32,480 --> 00:29:34,159
and by doing that we can

822
00:29:34,159 --> 00:29:36,559
basically blow the ups up

823
00:29:36,559 --> 00:29:38,720
so let's do that

824
00:29:38,720 --> 00:29:41,039
but not too fast you remember the mosfet

825
00:29:41,039 --> 00:29:43,360
drivers the mediator between the mcu and

826
00:29:43,360 --> 00:29:45,360
the h-bridge so one of its purposes is

827
00:29:45,360 --> 00:29:48,080
preventing exactly this it has an

828
00:29:48,080 --> 00:29:49,919
outdoor implementation of

829
00:29:49,919 --> 00:29:52,880
protection that prevents the

830
00:29:52,880 --> 00:29:54,960
both the switches of same side to be uh

831
00:29:54,960 --> 00:29:56,399
closed simultaneously and we can do

832
00:29:56,399 --> 00:29:58,720
nothing to overcome it using software

833
00:29:58,720 --> 00:30:00,000
but

834
00:30:00,000 --> 00:30:01,760
what about some other weird states what

835
00:30:01,760 --> 00:30:04,720
about open circuit and this one is not

836
00:30:04,720 --> 00:30:07,760
protected by the mosfet driver so let's

837
00:30:07,760 --> 00:30:09,840
find out what happens when you do that

838
00:30:09,840 --> 00:30:11,840
so this time i'll talk about the current

839
00:30:11,840 --> 00:30:13,919
on the transformer and i'll switch

840
00:30:13,919 --> 00:30:15,919
between two states valid states where

841
00:30:15,919 --> 00:30:18,399
the current develops and

842
00:30:18,399 --> 00:30:20,960
the open circuit state when the current

843
00:30:20,960 --> 00:30:22,399
immediately cuts off

844
00:30:22,399 --> 00:30:25,520
and we switch between these two states

845
00:30:25,520 --> 00:30:27,039
but to be able to compare it to the

846
00:30:27,039 --> 00:30:29,520
normal flow we want to be to translate

847
00:30:29,520 --> 00:30:32,240
this graph back to voltage terms

848
00:30:32,240 --> 00:30:35,679
let's see how it's possible

849
00:30:35,679 --> 00:30:37,919
um i'll not dig into the physics of it

850
00:30:37,919 --> 00:30:40,240
but in inductors there is a relation

851
00:30:40,240 --> 00:30:42,720
between uh voltage and current

852
00:30:42,720 --> 00:30:46,399
uh the the voltage level represents the

853
00:30:46,399 --> 00:30:47,360
current

854
00:30:47,360 --> 00:30:48,559
change

855
00:30:48,559 --> 00:30:51,200
uh it equals the current slope

856
00:30:51,200 --> 00:30:53,520
and the voltage is positive when it's in

857
00:30:53,520 --> 00:30:55,679
when the current increases and negative

858
00:30:55,679 --> 00:30:58,320
when the current decreases

859
00:30:58,320 --> 00:30:59,360
and

860
00:30:59,360 --> 00:31:01,919
in the open in the open circuit states

861
00:31:01,919 --> 00:31:03,120
um

862
00:31:03,120 --> 00:31:05,519
at a time when we cut off the the

863
00:31:05,519 --> 00:31:08,559
current immediately we have a very sharp

864
00:31:08,559 --> 00:31:10,720
decrease in current and

865
00:31:10,720 --> 00:31:12,720
very sharp decreasing current means a

866
00:31:12,720 --> 00:31:14,640
very low voltage level

867
00:31:14,640 --> 00:31:16,240
and when the current stabilizes of

868
00:31:16,240 --> 00:31:19,440
course the voltage equals zero and then

869
00:31:19,440 --> 00:31:20,399
uh

870
00:31:20,399 --> 00:31:23,120
it goes up a little bit but every time

871
00:31:23,120 --> 00:31:25,200
in every period when the current when

872
00:31:25,200 --> 00:31:27,679
the current cuts off we have a very low

873
00:31:27,679 --> 00:31:28,960
voltage level

874
00:31:28,960 --> 00:31:30,240
and how low

875
00:31:30,240 --> 00:31:31,760
you can see right here so this is a

876
00:31:31,760 --> 00:31:34,320
capture of the oscilloscope in our lab

877
00:31:34,320 --> 00:31:36,399
during these periods of the current

878
00:31:36,399 --> 00:31:37,519
cutoff

879
00:31:37,519 --> 00:31:38,799
we can see in yellow that transformer

880
00:31:38,799 --> 00:31:41,600
voltage and in red the battery voltage

881
00:31:41,600 --> 00:31:42,399
and

882
00:31:42,399 --> 00:31:44,399
this is the exact moment of the current

883
00:31:44,399 --> 00:31:46,480
cutoff and we can see that the voltage

884
00:31:46,480 --> 00:31:48,799
decreases dramatically from the battery

885
00:31:48,799 --> 00:31:51,200
voltage level of around 26 volts to an

886
00:31:51,200 --> 00:31:52,240
amazing

887
00:31:52,240 --> 00:31:55,760
amazingly low level of -54 volts

888
00:31:55,760 --> 00:31:57,200
and

889
00:31:57,200 --> 00:31:59,039
this change triggered the fluctuation

890
00:31:59,039 --> 00:32:00,799
that i mentioned before of the battery

891
00:32:00,799 --> 00:32:04,159
voltage and it fluctuates for an amazing

892
00:32:04,159 --> 00:32:07,440
huge margin between 40 volts and 7 volts

893
00:32:07,440 --> 00:32:08,960
and it happens

894
00:32:08,960 --> 00:32:11,760
fast very fast at around one microsecond

895
00:32:11,760 --> 00:32:14,799
and putting these numbers together um we

896
00:32:14,799 --> 00:32:17,919
can calculate that the the current that

897
00:32:17,919 --> 00:32:20,880
flows through the dc link capacitor will

898
00:32:20,880 --> 00:32:22,080
get to

899
00:32:22,080 --> 00:32:24,480
an astonishingly high level of almost

900
00:32:24,480 --> 00:32:26,399
100 kilo ampere

901
00:32:26,399 --> 00:32:27,440
current

902
00:32:27,440 --> 00:32:28,399
that's a lot

903
00:32:28,399 --> 00:32:30,559
that's really a lot and let's see what

904
00:32:30,559 --> 00:32:33,120
happens to this link capacitor when this

905
00:32:33,120 --> 00:32:35,120
happens

906
00:32:35,120 --> 00:32:37,279
so the dc link capacitor starts at

907
00:32:37,279 --> 00:32:39,200
around the room temperature let's say 25

908
00:32:39,200 --> 00:32:41,360
degrees celsius this is the bar on the

909
00:32:41,360 --> 00:32:43,120
right

910
00:32:43,120 --> 00:32:45,600
and the moment we cut off the the

911
00:32:45,600 --> 00:32:47,600
current and the battery voltage starts

912
00:32:47,600 --> 00:32:50,080
fluctuating and develop current

913
00:32:50,080 --> 00:32:53,120
the capacitor starts heating up but

914
00:32:53,120 --> 00:32:55,760
it's not heating up too much and it even

915
00:32:55,760 --> 00:32:58,880
starts to cool off between the periods

916
00:32:58,880 --> 00:33:00,000
but

917
00:33:00,000 --> 00:33:01,919
when we have the second period of the

918
00:33:01,919 --> 00:33:03,039
cut off

919
00:33:03,039 --> 00:33:03,840
the

920
00:33:03,840 --> 00:33:05,760
the temperature of the capacitors

921
00:33:05,760 --> 00:33:07,919
it keeps heating up from a higher level

922
00:33:07,919 --> 00:33:09,679
than it was at the first cycle and

923
00:33:09,679 --> 00:33:11,120
basically there is nothing to stop it

924
00:33:11,120 --> 00:33:12,960
from keep heating up

925
00:33:12,960 --> 00:33:14,159
and

926
00:33:14,159 --> 00:33:16,880
it keeps heating up and we left the some

927
00:33:16,880 --> 00:33:19,120
softer safety measures out of the out of

928
00:33:19,120 --> 00:33:20,799
the malicious femur

929
00:33:20,799 --> 00:33:21,919
and

930
00:33:21,919 --> 00:33:25,279
we have superman that tries to uh

931
00:33:25,279 --> 00:33:28,159
help us but even he cannot end 150

932
00:33:28,159 --> 00:33:29,600
degrees celsius

933
00:33:29,600 --> 00:33:32,240
and the capacitor simply simply bursts

934
00:33:32,240 --> 00:33:34,000
and fills the room with evaporated

935
00:33:34,000 --> 00:33:35,840
electrolyte material and

936
00:33:35,840 --> 00:33:37,039
keeps the

937
00:33:37,039 --> 00:33:39,919
the ups remaining without any uh

938
00:33:39,919 --> 00:33:42,240
any component that's supposed to uh save

939
00:33:42,240 --> 00:33:43,760
it from

940
00:33:43,760 --> 00:33:47,840
from these current spikes

941
00:33:48,240 --> 00:33:49,120
so

942
00:33:49,120 --> 00:33:50,640
as we promised

943
00:33:50,640 --> 00:33:53,039
i'll show you how a specific cps device

944
00:33:53,039 --> 00:33:55,120
can be destructive in its own

945
00:33:55,120 --> 00:33:56,720
unique way

946
00:33:56,720 --> 00:33:58,720
and i can actually by understanding the

947
00:33:58,720 --> 00:34:01,840
specific system can toast the ups

948
00:34:01,840 --> 00:34:03,519
and now

949
00:34:03,519 --> 00:34:06,080
for the fun part let's burn ups right

950
00:34:06,080 --> 00:34:09,038
here live on stage

951
00:34:09,839 --> 00:34:11,599
i will run the exploitation and you all

952
00:34:11,599 --> 00:34:13,989
will explain what i'm doing

953
00:34:13,989 --> 00:34:15,599
[Music]

954
00:34:15,599 --> 00:34:16,879
okay so

955
00:34:16,879 --> 00:34:18,480
while gal

956
00:34:18,480 --> 00:34:20,159
prepares it i will explain to you what's

957
00:34:20,159 --> 00:34:21,599
going to happen

958
00:34:21,599 --> 00:34:24,800
um beforehand this ups is pre-hacked

959
00:34:24,800 --> 00:34:27,040
meaning we already installed malicious

960
00:34:27,040 --> 00:34:30,079
film right to save time during this uh

961
00:34:30,079 --> 00:34:31,760
doing this demo

962
00:34:31,760 --> 00:34:33,520
and girl will showcase

963
00:34:33,520 --> 00:34:35,440
both of the types of attacks he talked

964
00:34:35,440 --> 00:34:37,280
about he will show power tempering he

965
00:34:37,280 --> 00:34:38,399
will show

966
00:34:38,399 --> 00:34:42,079
um attacking the ups itself so

967
00:34:42,079 --> 00:34:44,480
first he will um

968
00:34:44,480 --> 00:34:47,679
he will perform an under voltage attack

969
00:34:47,679 --> 00:34:50,800
sending a lower waveform to the lamp

970
00:34:50,800 --> 00:34:52,000
connected lamp

971
00:34:52,000 --> 00:34:55,040
and we will see we'll see shine really

972
00:34:55,040 --> 00:34:56,239
weak

973
00:34:56,239 --> 00:34:58,720
and on normal devices this could cause

974
00:34:58,720 --> 00:35:00,560
undefined behavior if it's connected to

975
00:35:00,560 --> 00:35:02,720
a server it could operate one minute and

976
00:35:02,720 --> 00:35:04,560
stop operating the next

977
00:35:04,560 --> 00:35:05,440
and

978
00:35:05,440 --> 00:35:07,520
right now it's gonna be yeah right now

979
00:35:07,520 --> 00:35:10,560
we're only gonna see lights

980
00:35:12,400 --> 00:35:15,400
okay

981
00:35:23,599 --> 00:35:25,359
now we will change the waveform to

982
00:35:25,359 --> 00:35:27,920
perform over voltage we send out a

983
00:35:27,920 --> 00:35:30,359
square waveform and it will get to about

984
00:35:30,359 --> 00:35:32,960
330 volt

985
00:35:32,960 --> 00:35:34,400
the light should run bright and it's

986
00:35:34,400 --> 00:35:37,119
gonna be noisy

987
00:35:37,180 --> 00:35:40,410
[Music]

988
00:35:41,040 --> 00:35:42,040
okay so

989
00:35:42,040 --> 00:35:43,440
[Music]

990
00:35:43,440 --> 00:35:46,320
um the obs is not designed to to work

991
00:35:46,320 --> 00:35:49,119
with this amount of power so

992
00:35:49,119 --> 00:35:51,599
the inner components vibrate and this is

993
00:35:51,599 --> 00:35:52,880
what you hear

994
00:35:52,880 --> 00:35:53,680
and

995
00:35:53,680 --> 00:35:56,079
the the bulb could potentially explode

996
00:35:56,079 --> 00:35:57,920
if if it's going to do it long enough

997
00:35:57,920 --> 00:35:59,359
which you want

998
00:35:59,359 --> 00:36:01,280
if you missed it we're going to show it

999
00:36:01,280 --> 00:36:02,500
again

1000
00:36:02,500 --> 00:36:05,760
[Music]

1001
00:36:06,960 --> 00:36:08,720
okay

1002
00:36:08,720 --> 00:36:10,640
now to the to the second type of attack

1003
00:36:10,640 --> 00:36:12,400
which is the main and final event

1004
00:36:12,400 --> 00:36:15,040
because after this the ups

1005
00:36:15,040 --> 00:36:16,960
will not operate anymore

1006
00:36:16,960 --> 00:36:18,160
and

1007
00:36:18,160 --> 00:36:19,839
really

1008
00:36:19,839 --> 00:36:21,280
yes so

1009
00:36:21,280 --> 00:36:24,000
and now what the gal does is

1010
00:36:24,000 --> 00:36:25,760
attacking the h bridge which which is

1011
00:36:25,760 --> 00:36:27,599
connected to the transformer

1012
00:36:27,599 --> 00:36:28,560
um

1013
00:36:28,560 --> 00:36:31,119
which is going to overheat the capacitor

1014
00:36:31,119 --> 00:36:33,359
until it it bursts and there's gonna be

1015
00:36:33,359 --> 00:36:34,880
some smoke here

1016
00:36:34,880 --> 00:36:36,800
this is why the window is open

1017
00:36:36,800 --> 00:36:37,760
uh

1018
00:36:37,760 --> 00:36:40,079
i don't know if i hope it works or i

1019
00:36:40,079 --> 00:36:41,520
hope it doesn't because it's going to

1020
00:36:41,520 --> 00:36:42,640
get

1021
00:36:42,640 --> 00:36:44,240
somewhat smoky

1022
00:36:44,240 --> 00:36:47,359
this we couldn't test before uh right

1023
00:36:47,359 --> 00:36:50,160
now because then the ups would have

1024
00:36:50,160 --> 00:36:51,359
been dead

1025
00:36:51,359 --> 00:36:53,520
but we have a mountain of this destroyed

1026
00:36:53,520 --> 00:36:57,040
ups back at our lab

1027
00:37:00,079 --> 00:37:02,220
sugar

1028
00:37:02,220 --> 00:37:05,959
[Music]

1029
00:37:11,390 --> 00:37:13,119
[Music]

1030
00:37:13,119 --> 00:37:16,000
horrible sound

1031
00:37:17,280 --> 00:37:18,270
can you hear something

1032
00:37:18,270 --> 00:37:19,839
[Music]

1033
00:37:19,839 --> 00:37:21,910
yeah maybe it's like a microphone

1034
00:37:21,910 --> 00:37:28,069
[Music]

1035
00:37:31,760 --> 00:37:34,839
the capacitor is a

1036
00:37:34,839 --> 00:37:39,400
superman pray for him

1037
00:37:44,550 --> 00:37:51,500
[Music]

1038
00:37:53,280 --> 00:37:56,920
oh yeah

1039
00:38:04,660 --> 00:38:08,079
[Applause]

1040
00:38:08,079 --> 00:38:11,079
oh

1041
00:38:18,560 --> 00:38:20,240
these are the special effects for the

1042
00:38:20,240 --> 00:38:23,240
show

1043
00:38:26,020 --> 00:38:32,849
[Music]

1044
00:38:35,119 --> 00:38:39,040
i'm really sorry for the smell but yeah

1045
00:38:39,040 --> 00:38:40,800
i'm glad i didn't get bored

1046
00:38:40,800 --> 00:38:41,839
yeah yeah

1047
00:38:41,839 --> 00:38:45,200
so uh gum stopped it pretty quick

1048
00:38:45,200 --> 00:38:47,680
on the on the blog we posted there's a

1049
00:38:47,680 --> 00:38:49,599
video of this uh performed in a safe

1050
00:38:49,599 --> 00:38:51,440
environment you can see just how much

1051
00:38:51,440 --> 00:38:53,040
smoke it can get out

1052
00:38:53,040 --> 00:38:54,000
um

1053
00:38:54,000 --> 00:38:55,920
this could potentially

1054
00:38:55,920 --> 00:38:57,599
while it destroys the ups this could

1055
00:38:57,599 --> 00:39:00,400
potentially help the surroundings

1056
00:39:00,400 --> 00:39:02,079
there's known to be sparks when this

1057
00:39:02,079 --> 00:39:03,280
happened

1058
00:39:03,280 --> 00:39:04,480
and

1059
00:39:04,480 --> 00:39:07,280
now to be sparked when this happens and

1060
00:39:07,280 --> 00:39:10,640
if it goes on long enough it could um

1061
00:39:10,640 --> 00:39:12,960
create some spark that will go outside

1062
00:39:12,960 --> 00:39:15,200
the ups and downs the surroundings so

1063
00:39:15,200 --> 00:39:17,839
not only the ups is um in

1064
00:39:17,839 --> 00:39:19,760
in danger not only the connected devices

1065
00:39:19,760 --> 00:39:21,599
in danger but also the surrounding

1066
00:39:21,599 --> 00:39:23,680
devices are in danger

1067
00:39:23,680 --> 00:39:25,920
um okay we're gonna let it steam for a

1068
00:39:25,920 --> 00:39:28,920
bit

1069
00:39:45,119 --> 00:39:47,520
okay

1070
00:39:47,520 --> 00:39:50,320
okay so

1071
00:39:50,320 --> 00:39:53,760
sorry so um after that i think we can

1072
00:39:53,760 --> 00:39:55,760
safely say that we get the last

1073
00:39:55,760 --> 00:39:57,599
milestone of this research

1074
00:39:57,599 --> 00:39:59,599
tempering with the power of the ups just

1075
00:39:59,599 --> 00:40:02,400
like you've seen right now on stage

1076
00:40:02,400 --> 00:40:05,440
and to recap how easy it is to launch

1077
00:40:05,440 --> 00:40:06,720
such an attack

1078
00:40:06,720 --> 00:40:09,040
let's look at the network perspective

1079
00:40:09,040 --> 00:40:11,040
first see the normal operation of the

1080
00:40:11,040 --> 00:40:14,000
cloud of the cloud communication

1081
00:40:14,000 --> 00:40:17,599
first the ups query is the ip of the

1082
00:40:17,599 --> 00:40:19,920
first the ups query is the ip of the of

1083
00:40:19,920 --> 00:40:22,160
the cloud which the dns will surely

1084
00:40:22,160 --> 00:40:24,880
reply replace will then supply proof and

1085
00:40:24,880 --> 00:40:26,960
the beginning of the authentication

1086
00:40:26,960 --> 00:40:28,720
which the cloud is going to verify with

1087
00:40:28,720 --> 00:40:30,079
its own proof

1088
00:40:30,079 --> 00:40:32,400
which the ups is gonna verify and then

1089
00:40:32,400 --> 00:40:35,520
they can safely exchange their messages

1090
00:40:35,520 --> 00:40:36,839
now for the attack

1091
00:40:36,839 --> 00:40:40,079
scenario first the attacker is going to

1092
00:40:40,079 --> 00:40:42,079
poison the cache of the dns

1093
00:40:42,079 --> 00:40:45,440
ups will begin with the same query

1094
00:40:45,440 --> 00:40:47,040
but this time the dns will respond with

1095
00:40:47,040 --> 00:40:49,040
the attacker's ip

1096
00:40:49,040 --> 00:40:51,119
the ups will initiate communication and

1097
00:40:51,119 --> 00:40:52,800
the attacker will reply with a beautiful

1098
00:40:52,800 --> 00:40:53,839
logo

1099
00:40:53,839 --> 00:40:55,440
which the ups is gonna mistakenly

1100
00:40:55,440 --> 00:40:56,560
confirm

1101
00:40:56,560 --> 00:40:57,920
from there the attacker can upload a

1102
00:40:57,920 --> 00:40:59,920
malicious firmware and launch attack all

1103
00:40:59,920 --> 00:41:02,079
throughout the network attack connected

1104
00:41:02,079 --> 00:41:04,960
devices and the ups itself

1105
00:41:04,960 --> 00:41:08,400
just like we've seen now in the demo

1106
00:41:08,400 --> 00:41:10,079
and if you want to know how you can be

1107
00:41:10,079 --> 00:41:13,119
protected from such a from such attack

1108
00:41:13,119 --> 00:41:15,040
the third thing you can there are three

1109
00:41:15,040 --> 00:41:16,800
main things you can do simultaneously

1110
00:41:16,800 --> 00:41:18,480
and the first one of them is apply

1111
00:41:18,480 --> 00:41:20,720
patches where applicable we worked with

1112
00:41:20,720 --> 00:41:22,319
schneider to develop a patch for these

1113
00:41:22,319 --> 00:41:24,079
vulnerabilities so if you use one of

1114
00:41:24,079 --> 00:41:25,599
these devices you should go ahead and

1115
00:41:25,599 --> 00:41:26,880
patch

1116
00:41:26,880 --> 00:41:28,960
the second thing is minimizing the

1117
00:41:28,960 --> 00:41:30,400
attack surface

1118
00:41:30,400 --> 00:41:33,280
in this case it means that

1119
00:41:33,280 --> 00:41:35,760
if you have the smart connect feature

1120
00:41:35,760 --> 00:41:37,280
connected and you don't use it you

1121
00:41:37,280 --> 00:41:38,880
should disconnect it

1122
00:41:38,880 --> 00:41:40,720
and the last thing is to monitor

1123
00:41:40,720 --> 00:41:42,160
communication

1124
00:41:42,160 --> 00:41:43,599
we've seen this

1125
00:41:43,599 --> 00:41:45,599
and in our

1126
00:41:45,599 --> 00:41:47,760
clients that sometimes

1127
00:41:47,760 --> 00:41:50,079
network administrators don't know what

1128
00:41:50,079 --> 00:41:51,920
devices they exactly have and whether or

1129
00:41:51,920 --> 00:41:53,920
not they're connected to the internet

1130
00:41:53,920 --> 00:41:56,560
this way can could let you know

1131
00:41:56,560 --> 00:41:58,960
which devices you have what versions are

1132
00:41:58,960 --> 00:42:01,200
there are they if they're patched and if

1133
00:42:01,200 --> 00:42:03,119
there is an attack coming you could be

1134
00:42:03,119 --> 00:42:04,240
notified

1135
00:42:04,240 --> 00:42:05,920
and this is the last security ring you

1136
00:42:05,920 --> 00:42:08,880
can put in your organization

1137
00:42:08,880 --> 00:42:11,119
so the takeaways

1138
00:42:11,119 --> 00:42:12,640
the third thing is

1139
00:42:12,640 --> 00:42:14,960
external libraries could be a weak spot

1140
00:42:14,960 --> 00:42:16,960
we think we've seen this in the log for

1141
00:42:16,960 --> 00:42:19,359
jks and in this case where external

1142
00:42:19,359 --> 00:42:20,400
libraries

1143
00:42:20,400 --> 00:42:23,920
expose the code base to an external risk

1144
00:42:23,920 --> 00:42:25,680
and

1145
00:42:25,680 --> 00:42:27,520
this kind of errors like forgetting to

1146
00:42:27,520 --> 00:42:29,359
close the socket should not lead to

1147
00:42:29,359 --> 00:42:31,280
remote cord execution but nonetheless

1148
00:42:31,280 --> 00:42:33,359
this glue logic is where the bug

1149
00:42:33,359 --> 00:42:34,720
originates

1150
00:42:34,720 --> 00:42:36,079
um

1151
00:42:36,079 --> 00:42:38,480
the the second takeaway is that

1152
00:42:38,480 --> 00:42:39,680
every device you have facing the

1153
00:42:39,680 --> 00:42:41,760
internet is a liability that the

1154
00:42:41,760 --> 00:42:44,079
connection itself is an attack vehicle

1155
00:42:44,079 --> 00:42:46,640
so there are two main things you can do

1156
00:42:46,640 --> 00:42:48,560
you can patch and you can monitor

1157
00:42:48,560 --> 00:42:51,440
communication but the risk is there

1158
00:42:51,440 --> 00:42:54,000
and the last thing is that

1159
00:42:54,000 --> 00:42:56,880
um when you apply a cyber physical

1160
00:42:56,880 --> 00:42:58,560
system in your network you should take

1161
00:42:58,560 --> 00:43:00,560
the physical aspect into account when

1162
00:43:00,560 --> 00:43:01,920
assessing the risk

1163
00:43:01,920 --> 00:43:04,480
while ransomware and

1164
00:43:04,480 --> 00:43:06,880
that acceleration are serious issues

1165
00:43:06,880 --> 00:43:09,119
some devices hold the literal power to

1166
00:43:09,119 --> 00:43:11,200
cause damage that in ways that are all

1167
00:43:11,200 --> 00:43:12,480
too easy

1168
00:43:12,480 --> 00:43:14,640
all too easy to disregard or in other

1169
00:43:14,640 --> 00:43:16,960
words

1170
00:43:17,520 --> 00:43:19,359
that's it

1171
00:43:19,359 --> 00:43:22,920
if you have some questions

1172
00:43:34,450 --> 00:43:36,880
[Music]

1173
00:43:36,880 --> 00:43:38,720
thank you for your talk pretty cool uh

1174
00:43:38,720 --> 00:43:40,800
just one question regarding the jtag

1175
00:43:40,800 --> 00:43:42,720
attack vector maybe i haven't heard it

1176
00:43:42,720 --> 00:43:43,599
but

1177
00:43:43,599 --> 00:43:45,280
as far as i know trade deck you have to

1178
00:43:45,280 --> 00:43:47,760
know you know just the the protocol but

1179
00:43:47,760 --> 00:43:50,480
like how to talk to the device how did

1180
00:43:50,480 --> 00:43:52,640
you find out that did you like cut your

1181
00:43:52,640 --> 00:43:55,440
hands on the specification you mean that

1182
00:43:55,440 --> 00:43:57,839
you made the the jta connection the iap

1183
00:43:57,839 --> 00:43:58,640
phase

1184
00:43:58,640 --> 00:44:00,800
so yeah when we open the board you could

1185
00:44:00,800 --> 00:44:03,280
clearly see what uh what what is the

1186
00:44:03,280 --> 00:44:04,560
version of the stock

1187
00:44:04,560 --> 00:44:07,040
the the data sheet could be found online

1188
00:44:07,040 --> 00:44:08,640
okay yeah and yeah this is the

1189
00:44:08,640 --> 00:44:10,880
screenshot of the of the rdp description

1190
00:44:10,880 --> 00:44:12,319
okay i see

1191
00:44:12,319 --> 00:44:15,760
and you can you can use a

1192
00:44:15,760 --> 00:44:18,640
voltmeter to uh to find what pins are

1193
00:44:18,640 --> 00:44:20,560
short short circuited to each other so

1194
00:44:20,560 --> 00:44:22,560
you can identify the pins

1195
00:44:22,560 --> 00:44:25,839
okay sure thank you

1196
00:44:30,880 --> 00:44:32,720
thank you for the presentation

1197
00:44:32,720 --> 00:44:34,480
i would have three questions if you

1198
00:44:34,480 --> 00:44:36,240
don't mind

1199
00:44:36,240 --> 00:44:38,640
so first of all um the eti

1200
00:44:38,640 --> 00:44:41,359
microprocessor connected word interface

1201
00:44:41,359 --> 00:44:43,440
um how could you attack this one was it

1202
00:44:43,440 --> 00:44:45,680
part of the update process or was the

1203
00:44:45,680 --> 00:44:48,160
word interface exposing a api that you

1204
00:44:48,160 --> 00:44:51,200
can like connect or talk to the ti

1205
00:44:51,200 --> 00:44:52,240
processor

1206
00:44:52,240 --> 00:44:55,040
so if i got it correctly and the

1207
00:44:55,040 --> 00:44:55,920
question

1208
00:44:55,920 --> 00:44:57,760
that the ups once you connect it it

1209
00:44:57,760 --> 00:45:00,400
performs the the it begins to perform

1210
00:45:00,400 --> 00:45:02,160
the dns queries so it automatically

1211
00:45:02,160 --> 00:45:03,680
connects and

1212
00:45:03,680 --> 00:45:05,280
what the cloud can do everything the

1213
00:45:05,280 --> 00:45:07,440
cloud can do an attacker can do if he

1214
00:45:07,440 --> 00:45:09,599
bypasses the authentication

1215
00:45:09,599 --> 00:45:12,960
the question was um eeti process or dti

1216
00:45:12,960 --> 00:45:14,880
processor controlling the h bridge was

1217
00:45:14,880 --> 00:45:17,920
this part of the update process um that

1218
00:45:17,920 --> 00:45:20,160
you yeah okay so

1219
00:45:20,160 --> 00:45:22,160
one of the most fun

1220
00:45:22,160 --> 00:45:25,200
uh fun the the fun part yeah really kind

1221
00:45:25,200 --> 00:45:27,680
of this vulnerability is that it allows

1222
00:45:27,680 --> 00:45:29,599
to install a total

1223
00:45:29,599 --> 00:45:31,920
firmware package and this package

1224
00:45:31,920 --> 00:45:34,880
includes the the the firmware of every

1225
00:45:34,880 --> 00:45:37,520
component okay ups so basically we're

1226
00:45:37,520 --> 00:45:39,200
able to hop straight to the texas

1227
00:45:39,200 --> 00:45:41,280
instruments okay thanks uh second

1228
00:45:41,280 --> 00:45:43,040
question would be did you check for the

1229
00:45:43,040 --> 00:45:44,960
battery could you like mess around with

1230
00:45:44,960 --> 00:45:47,359
the battery cells because as far as i

1231
00:45:47,359 --> 00:45:50,160
know they have much more um potential to

1232
00:45:50,160 --> 00:45:52,240
explode

1233
00:45:52,240 --> 00:45:53,920
okay so

1234
00:45:53,920 --> 00:45:54,640
so

1235
00:45:54,640 --> 00:45:55,680
um

1236
00:45:55,680 --> 00:45:58,720
you really didn't want to harm ourselves

1237
00:45:58,720 --> 00:46:01,119
and it's pretty much dangerous

1238
00:46:01,119 --> 00:46:02,640
having said that

1239
00:46:02,640 --> 00:46:04,880
um we were trying to uh

1240
00:46:04,880 --> 00:46:06,480
to mess with the

1241
00:46:06,480 --> 00:46:08,880
products of lithium-ion batteries that

1242
00:46:08,880 --> 00:46:12,319
are more uh tends to uh explode and we

1243
00:46:12,319 --> 00:46:14,560
found that the the entire um

1244
00:46:14,560 --> 00:46:16,480
communication protocol and everything

1245
00:46:16,480 --> 00:46:17,760
like this but

1246
00:46:17,760 --> 00:46:20,400
we uh decided maybe uh for the sake of

1247
00:46:20,400 --> 00:46:22,880
humanity it's better to stop there

1248
00:46:22,880 --> 00:46:23,599
okay

1249
00:46:23,599 --> 00:46:25,680
but i i like the way you think

1250
00:46:25,680 --> 00:46:26,880
and

1251
00:46:26,880 --> 00:46:28,560
the third question would be how long was

1252
00:46:28,560 --> 00:46:30,720
the response disclosure process uh with

1253
00:46:30,720 --> 00:46:34,079
schneider since it's a physical device

1254
00:46:34,079 --> 00:46:35,920
yeah so um

1255
00:46:35,920 --> 00:46:37,680
i think we began the

1256
00:46:37,680 --> 00:46:39,920
yeah it was four or five months ago when

1257
00:46:39,920 --> 00:46:40,960
we

1258
00:46:40,960 --> 00:46:43,119
disclose the vulnerabilities the patch

1259
00:46:43,119 --> 00:46:46,480
has been out i think for about a month

1260
00:46:46,480 --> 00:46:48,720
so if if you use this system you should

1261
00:46:48,720 --> 00:46:50,880
probably have gotten an update okay

1262
00:46:50,880 --> 00:46:52,560
thanks let's check it

1263
00:46:52,560 --> 00:46:56,200
oh don't use it

1264
00:46:58,480 --> 00:47:01,119
it's just a simple question how much

1265
00:47:01,119 --> 00:47:02,880
money went up in smoke during this

1266
00:47:02,880 --> 00:47:05,839
research or if you can't answer that how

1267
00:47:05,839 --> 00:47:08,079
many of these ups were sacrificed for a

1268
00:47:08,079 --> 00:47:11,400
greater cause

1269
00:47:11,440 --> 00:47:13,440
that's a hard and a question to answer

1270
00:47:13,440 --> 00:47:17,040
because i don't have it but

1271
00:47:17,040 --> 00:47:21,280
i think we perhaps tried about five or

1272
00:47:21,280 --> 00:47:22,640
six of them

1273
00:47:22,640 --> 00:47:23,599
during the

1274
00:47:23,599 --> 00:47:25,839
so during the the process of the film

1275
00:47:25,839 --> 00:47:27,200
extraction we

1276
00:47:27,200 --> 00:47:29,599
accidentally destroyed a few in a

1277
00:47:29,599 --> 00:47:31,599
different manner but we were able to fix

1278
00:47:31,599 --> 00:47:33,760
them while once we

1279
00:47:33,760 --> 00:47:36,079
once we got the decryption process and

1280
00:47:36,079 --> 00:47:38,559
the burning part i think perhaps two or

1281
00:47:38,559 --> 00:47:39,440
three

1282
00:47:39,440 --> 00:47:41,680
if you see a resale of a ups device from

1283
00:47:41,680 --> 00:47:44,720
armist don't buy it

1284
00:47:45,119 --> 00:47:48,359
thank you

1285
00:47:52,319 --> 00:47:55,119
thanks god that we survived this um

1286
00:47:55,119 --> 00:47:57,040
what is uh or

1287
00:47:57,040 --> 00:47:58,079
um

1288
00:47:58,079 --> 00:48:00,640
did this also um how did you protect

1289
00:48:00,640 --> 00:48:02,559
during your um

1290
00:48:02,559 --> 00:48:05,440
research from this like smoke do you

1291
00:48:05,440 --> 00:48:08,640
recommend to do this uh outside or did

1292
00:48:08,640 --> 00:48:11,520
you do this inside

1293
00:48:11,520 --> 00:48:15,680
we used covered masks no i'm kidding

1294
00:48:17,680 --> 00:48:19,920
i i don't have a really smart answer to

1295
00:48:19,920 --> 00:48:22,559
do i i really i inhaled a lot of

1296
00:48:22,559 --> 00:48:23,920
evaporate

1297
00:48:23,920 --> 00:48:26,960
of electric material so actually right

1298
00:48:26,960 --> 00:48:29,200
now i have a capacitance of like at

1299
00:48:29,200 --> 00:48:31,680
least 100 from microfarad

1300
00:48:31,680 --> 00:48:33,520
but

1301
00:48:33,520 --> 00:48:35,680
we tried to do that as responsibly as we

1302
00:48:35,680 --> 00:48:36,480
could

1303
00:48:36,480 --> 00:48:38,400
let's say that the first time we had

1304
00:48:38,400 --> 00:48:40,830
some frightened colleagues

1305
00:48:40,830 --> 00:48:43,040
[Music]

1306
00:48:43,040 --> 00:48:47,359
yeah hi um i have 10 questions no sorry

1307
00:48:47,359 --> 00:48:49,920
um just one about the lithium

1308
00:48:49,920 --> 00:48:52,480
batteries so as far as i know um all the

1309
00:48:52,480 --> 00:48:54,720
lithium batteries have a requirement to

1310
00:48:54,720 --> 00:48:56,640
have some kind of hardware

1311
00:48:56,640 --> 00:48:59,359
cut off for circuits that protect from

1312
00:48:59,359 --> 00:49:02,480
like overloading um did you find any of

1313
00:49:02,480 --> 00:49:05,359
let's say hardware based protections in

1314
00:49:05,359 --> 00:49:08,240
any of the ups that you looked at or are

1315
00:49:08,240 --> 00:49:10,079
there any on the market that might have

1316
00:49:10,079 --> 00:49:11,920
some hardware

1317
00:49:11,920 --> 00:49:13,839
protections so

1318
00:49:13,839 --> 00:49:16,079
this is actually not lithium-ion battery

1319
00:49:16,079 --> 00:49:17,760
yeah this is a

1320
00:49:17,760 --> 00:49:19,920
another technology another chemistry

1321
00:49:19,920 --> 00:49:21,119
that is

1322
00:49:21,119 --> 00:49:21,750
more uh

1323
00:49:21,750 --> 00:49:24,400
[Music]

1324
00:49:24,400 --> 00:49:26,319
it's not as uh

1325
00:49:26,319 --> 00:49:28,400
it doesn't not doesn't have the tendency

1326
00:49:28,400 --> 00:49:32,000
to blow up easily like lithium-ion

1327
00:49:32,000 --> 00:49:34,559
but for the lithium-ion

1328
00:49:34,559 --> 00:49:36,960
devices i can say that they have like a

1329
00:49:36,960 --> 00:49:39,599
battery management system a quite smart

1330
00:49:39,599 --> 00:49:40,720
one that

1331
00:49:40,720 --> 00:49:41,760
basically

1332
00:49:41,760 --> 00:49:43,119
does not

1333
00:49:43,119 --> 00:49:45,520
does not enable to uh to mess with the

1334
00:49:45,520 --> 00:49:48,800
configuration and it implements all the

1335
00:49:48,800 --> 00:49:51,040
all the mitigations inside there in

1336
00:49:51,040 --> 00:49:53,680
another integrated ship yes um

1337
00:49:53,680 --> 00:49:55,359
but um

1338
00:49:55,359 --> 00:49:56,720
could you imagine i mean you could

1339
00:49:56,720 --> 00:49:58,640
imagine that you could build an ups that

1340
00:49:58,640 --> 00:50:00,079
also has a hardware

1341
00:50:00,079 --> 00:50:02,400
based circuit that protects against

1342
00:50:02,400 --> 00:50:05,119
outputting basically what you do do you

1343
00:50:05,119 --> 00:50:06,800
know if there's any on the market that

1344
00:50:06,800 --> 00:50:08,480
that has this kind of

1345
00:50:08,480 --> 00:50:11,359
safety so you're basically right but

1346
00:50:11,359 --> 00:50:13,680
on the other end the ups have it's uh

1347
00:50:13,680 --> 00:50:15,920
its purpose of correcting the the output

1348
00:50:15,920 --> 00:50:16,880
power

1349
00:50:16,880 --> 00:50:19,440
the output signal because uh it tries to

1350
00:50:19,440 --> 00:50:22,079
uh to perfect it to be as much closer to

1351
00:50:22,079 --> 00:50:25,040
the to the mains electricity and because

1352
00:50:25,040 --> 00:50:26,880
of that they have like a more flexible

1353
00:50:26,880 --> 00:50:29,040
implementation that allows him to almost

1354
00:50:29,040 --> 00:50:30,000
draw

1355
00:50:30,000 --> 00:50:31,040
uh the

1356
00:50:31,040 --> 00:50:33,839
uh the output signal and we've used this

1357
00:50:33,839 --> 00:50:35,440
to to do

1358
00:50:35,440 --> 00:50:37,200
almost all the attacks so

1359
00:50:37,200 --> 00:50:38,400
you have a tradeoff here of the

1360
00:50:38,400 --> 00:50:41,359
flexibility for the software developers

1361
00:50:41,359 --> 00:50:42,640
and

1362
00:50:42,640 --> 00:50:44,640
and protection like everything in

1363
00:50:44,640 --> 00:50:46,480
engineering it always

1364
00:50:46,480 --> 00:50:47,760
happens like this

1365
00:50:47,760 --> 00:50:49,520
but it's a good question and you have

1366
00:50:49,520 --> 00:50:51,680
more details about it in the in the

1367
00:50:51,680 --> 00:50:53,200
in the white paper and you can take a

1368
00:50:53,200 --> 00:50:54,000
look

1369
00:50:54,000 --> 00:50:56,400
thank you

1370
00:51:01,440 --> 00:51:02,880
okay so

1371
00:51:02,880 --> 00:51:04,880
we're gonna hang outside for a bit so if

1372
00:51:04,880 --> 00:51:06,880
anyone has questions they can ask us

1373
00:51:06,880 --> 00:51:11,079
there and thank you all for listening

