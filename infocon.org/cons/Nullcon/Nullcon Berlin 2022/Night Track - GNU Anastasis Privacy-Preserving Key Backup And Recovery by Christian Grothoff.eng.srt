1
00:00:03,199 --> 00:00:04,960
okay

2
00:00:04,960 --> 00:00:07,759
well uh welcome to nalcon

3
00:00:07,759 --> 00:00:10,000
uh the first evening talk i'm honored to

4
00:00:10,000 --> 00:00:12,480
present you gnu anastasis

5
00:00:12,480 --> 00:00:14,160
i'm sure you're familiar with the little

6
00:00:14,160 --> 00:00:15,679
problem of key management and people

7
00:00:15,679 --> 00:00:17,600
losing keys now i know you might be the

8
00:00:17,600 --> 00:00:20,000
people who get the keys but you know

9
00:00:20,000 --> 00:00:22,000
think of the defensive side for tonight

10
00:00:22,000 --> 00:00:23,359
only right

11
00:00:23,359 --> 00:00:24,560
um

12
00:00:24,560 --> 00:00:25,920
and of course what's the real problem

13
00:00:25,920 --> 00:00:26,880
you know

14
00:00:26,880 --> 00:00:28,640
you want to keep your keys available if

15
00:00:28,640 --> 00:00:30,480
you lose them that kind of sucks right

16
00:00:30,480 --> 00:00:31,439
and

17
00:00:31,439 --> 00:00:33,440
so if you give a person one person a

18
00:00:33,440 --> 00:00:35,120
secret it might get lost so what do you

19
00:00:35,120 --> 00:00:36,640
do you give it to more than one person

20
00:00:36,640 --> 00:00:37,760
right

21
00:00:37,760 --> 00:00:39,120
and well if you give many energies and

22
00:00:39,120 --> 00:00:41,360
secrets and it will get disclosed

23
00:00:41,360 --> 00:00:43,120
we also know that one right

24
00:00:43,120 --> 00:00:45,920
so then you give them only a share fine

25
00:00:45,920 --> 00:00:47,440
and then you have the problem okay if i

26
00:00:47,440 --> 00:00:49,760
do k out of n you know then how do we

27
00:00:49,760 --> 00:00:51,440
scale this and i'm sure you're familiar

28
00:00:51,440 --> 00:00:53,280
with this and we do use polynomials for

29
00:00:53,280 --> 00:00:54,079
that

30
00:00:54,079 --> 00:00:56,000
you know we can interpret nominals with

31
00:00:56,000 --> 00:00:58,559
a couple of points on the curve and then

32
00:00:58,559 --> 00:01:00,559
do lagrange interpolation to reconstruct

33
00:01:00,559 --> 00:01:01,280
it

34
00:01:01,280 --> 00:01:03,760
right and then you know okay

35
00:01:03,760 --> 00:01:05,360
we have to do this on an integer field

36
00:01:05,360 --> 00:01:07,360
not with real numbers and that's where

37
00:01:07,360 --> 00:01:09,200
most people doing key management kind of

38
00:01:09,200 --> 00:01:10,880
stop and now they've reinvented some

39
00:01:10,880 --> 00:01:12,000
mere secret sharing if they haven't

40
00:01:12,000 --> 00:01:14,400
known it before and great

41
00:01:14,400 --> 00:01:15,840
but actually you're solving the wrong

42
00:01:15,840 --> 00:01:16,960
problem

43
00:01:16,960 --> 00:01:20,000
in my view oops

44
00:01:20,000 --> 00:01:21,920
the reason is simple we don't have a

45
00:01:21,920 --> 00:01:23,680
scalability problem

46
00:01:23,680 --> 00:01:25,759
at least you know i i don't have enough

47
00:01:25,759 --> 00:01:27,520
friends to share keys with that were

48
00:01:27,520 --> 00:01:30,000
able to technically run this and if i

49
00:01:30,000 --> 00:01:31,680
want to do a key recovery i don't want

50
00:01:31,680 --> 00:01:34,079
to talk to 10 people to get a key share

51
00:01:34,079 --> 00:01:35,759
right and even if i want to talk to 10

52
00:01:35,759 --> 00:01:38,079
people out of 20 you know well computers

53
00:01:38,079 --> 00:01:40,560
these days can handle a 200 000 you know

54
00:01:40,560 --> 00:01:42,320
something um

55
00:01:42,320 --> 00:01:43,759
so we don't have a scalability problem

56
00:01:43,759 --> 00:01:44,560
here

57
00:01:44,560 --> 00:01:46,000
you know for all of the practical

58
00:01:46,000 --> 00:01:48,720
purposes like 20 you know

59
00:01:48,720 --> 00:01:50,560
so anybody who tells me you know why

60
00:01:50,560 --> 00:01:52,399
don't you implement shame secret sharing

61
00:01:52,399 --> 00:01:54,799
they're just on the wrong level

62
00:01:54,799 --> 00:01:56,880
so

63
00:01:56,880 --> 00:01:59,600
we want to build a realistic

64
00:01:59,600 --> 00:02:01,280
key recovery system

65
00:02:01,280 --> 00:02:03,759
um where of course the consumer remains

66
00:02:03,759 --> 00:02:06,320
in control of their key material

67
00:02:06,320 --> 00:02:08,160
we don't have a trusted third party we

68
00:02:08,160 --> 00:02:09,598
don't like those

69
00:02:09,598 --> 00:02:12,239
right and it needs to be usable well

70
00:02:12,239 --> 00:02:14,160
that's the really hard one and flexible

71
00:02:14,160 --> 00:02:15,120
enough

72
00:02:15,120 --> 00:02:17,040
so what's anastasia's well we do split

73
00:02:17,040 --> 00:02:18,480
the keys across multiple service

74
00:02:18,480 --> 00:02:20,319
providers now what's interesting is the

75
00:02:20,319 --> 00:02:22,560
service providers learn almost nothing

76
00:02:22,560 --> 00:02:24,080
about the user

77
00:02:24,080 --> 00:02:25,760
so they don't in some sense often don't

78
00:02:25,760 --> 00:02:28,000
even know who their users are

79
00:02:28,000 --> 00:02:29,040
um

80
00:02:29,040 --> 00:02:31,200
and of course only the authorized user

81
00:02:31,200 --> 00:02:32,800
can reconstruct the key material on

82
00:02:32,800 --> 00:02:34,480
their device you know we don't

83
00:02:34,480 --> 00:02:35,680
reconstruct it in the cloud and then

84
00:02:35,680 --> 00:02:38,319
hand it out or something silly like that

85
00:02:38,319 --> 00:02:40,879
now to start with

86
00:02:40,879 --> 00:02:42,879
the anastasia system for privacy

87
00:02:42,879 --> 00:02:44,400
preserving system starts with something

88
00:02:44,400 --> 00:02:46,959
very unusual and that it asks you for

89
00:02:46,959 --> 00:02:49,760
all kinds of crazy personal information

90
00:02:49,760 --> 00:02:51,440
all right so you go this is a privacy

91
00:02:51,440 --> 00:02:52,800
project and the first thing it asks me

92
00:02:52,800 --> 00:02:54,160
is for my name social security number

93
00:02:54,160 --> 00:02:57,200
blade of birth you know what is this

94
00:02:57,200 --> 00:02:58,959
well the real answer is we need to

95
00:02:58,959 --> 00:03:00,879
generate a user id

96
00:03:00,879 --> 00:03:02,879
right and we basically will run this

97
00:03:02,879 --> 00:03:05,040
through an expensive hash function

98
00:03:05,040 --> 00:03:06,800
to generate a unique user id that you

99
00:03:06,800 --> 00:03:09,040
hopefully will not be able to forget

100
00:03:09,040 --> 00:03:10,080
you know

101
00:03:10,080 --> 00:03:11,519
and then under that user id we will

102
00:03:11,519 --> 00:03:13,519
store metadata about the recovery

103
00:03:13,519 --> 00:03:15,120
process so we can enable the recovery

104
00:03:15,120 --> 00:03:16,560
later

105
00:03:16,560 --> 00:03:19,040
but so this data very important will

106
00:03:19,040 --> 00:03:21,200
never leave your computer you know we

107
00:03:21,200 --> 00:03:22,400
don't store it we don't need it in the

108
00:03:22,400 --> 00:03:24,640
network we just hash it and the more

109
00:03:24,640 --> 00:03:26,959
sensitive data we ask for well the less

110
00:03:26,959 --> 00:03:28,400
likely does somebody else ever get hold

111
00:03:28,400 --> 00:03:30,239
of it which brings me to our adversary

112
00:03:30,239 --> 00:03:32,560
model we kind of have two

113
00:03:32,560 --> 00:03:34,480
we have the week adversary you know the

114
00:03:34,480 --> 00:03:35,680
cat

115
00:03:35,680 --> 00:03:37,760
that doesn't know all of your details

116
00:03:37,760 --> 00:03:38,959
you know the cat doesn't know your

117
00:03:38,959 --> 00:03:40,239
social security number your date of

118
00:03:40,239 --> 00:03:42,560
birth and your name

119
00:03:42,560 --> 00:03:44,480
right and in the weak adversity model

120
00:03:44,480 --> 00:03:46,000
you basically can say well you know you

121
00:03:46,000 --> 00:03:47,599
may do a couple of repeated requests to

122
00:03:47,599 --> 00:03:48,959
the same endpoint we can kind of see

123
00:03:48,959 --> 00:03:49,760
that

124
00:03:49,760 --> 00:03:51,599
um and when we are the provider we might

125
00:03:51,599 --> 00:03:52,959
learn you know what is your email

126
00:03:52,959 --> 00:03:54,480
address or your phone number to send you

127
00:03:54,480 --> 00:03:57,120
an email or a phone number but that's it

128
00:03:57,120 --> 00:03:58,640
we guarantee there's nothing else the

129
00:03:58,640 --> 00:04:00,400
wicked versa adversary can do

130
00:04:00,400 --> 00:04:02,080
whereas a strong adversary who does know

131
00:04:02,080 --> 00:04:04,319
your user identifier can basically find

132
00:04:04,319 --> 00:04:06,159
out a ques across which providers you

133
00:04:06,159 --> 00:04:08,319
shared your secrets and if they convince

134
00:04:08,319 --> 00:04:10,319
enough providers to collaborate with

135
00:04:10,319 --> 00:04:12,080
them they could actually reconstruct

136
00:04:12,080 --> 00:04:14,000
your secret but of course they have to

137
00:04:14,000 --> 00:04:14,959
you know get through all of these

138
00:04:14,959 --> 00:04:16,478
jurisdictions to all of these providers

139
00:04:16,478 --> 00:04:18,238
get to all of these databases and get

140
00:04:18,238 --> 00:04:20,478
all of the key shares you know

141
00:04:20,478 --> 00:04:22,000
strong arming the respective providers

142
00:04:22,000 --> 00:04:22,880
that you picked and it has to be

143
00:04:22,880 --> 00:04:25,280
sufficient number of them right but in

144
00:04:25,280 --> 00:04:26,880
practice we will have quite a few weak

145
00:04:26,880 --> 00:04:28,560
adversaries who don't know of all of

146
00:04:28,560 --> 00:04:30,479
this private information about you and

147
00:04:30,479 --> 00:04:33,199
maybe there are some strong ones

148
00:04:33,199 --> 00:04:34,400
okay so let's briefly look at the

149
00:04:34,400 --> 00:04:36,880
process you know usual high level views

150
00:04:36,880 --> 00:04:38,320
we have our providers on the right hand

151
00:04:38,320 --> 00:04:41,520
side and you basically do as your backup

152
00:04:41,520 --> 00:04:43,280
share the keys with the respective

153
00:04:43,280 --> 00:04:44,639
providers together with some

154
00:04:44,639 --> 00:04:46,960
authentication information

155
00:04:46,960 --> 00:04:47,840
now

156
00:04:47,840 --> 00:04:49,840
start with a picture show

157
00:04:49,840 --> 00:04:52,400
this is our key secret right that's what

158
00:04:52,400 --> 00:04:54,240
we want to protect and so the first

159
00:04:54,240 --> 00:04:57,120
thing is well we split it up right

160
00:04:57,120 --> 00:04:58,400
now

161
00:04:58,400 --> 00:05:00,160
then we collect this information from

162
00:05:00,160 --> 00:05:01,280
the user

163
00:05:01,280 --> 00:05:02,800
all right who are you to create your

164
00:05:02,800 --> 00:05:05,120
user id and from that user id we will

165
00:05:05,120 --> 00:05:08,639
derive two keys key one and key two

166
00:05:08,639 --> 00:05:10,800
and we will use the first key to encrypt

167
00:05:10,800 --> 00:05:12,880
each of the key shares

168
00:05:12,880 --> 00:05:14,400
so even if you have the key share well

169
00:05:14,400 --> 00:05:15,919
if you don't have k1 it's completely

170
00:05:15,919 --> 00:05:17,520
useless for you

171
00:05:17,520 --> 00:05:19,440
and then we will use the

172
00:05:19,440 --> 00:05:21,280
key shares and attach the respective

173
00:05:21,280 --> 00:05:23,919
recovery data to it like you know to

174
00:05:23,919 --> 00:05:25,360
authenticate against this key to get

175
00:05:25,360 --> 00:05:26,960
this key share this provider is supposed

176
00:05:26,960 --> 00:05:28,720
to you know send you a challenge to an

177
00:05:28,720 --> 00:05:30,000
email address or you're supposed to

178
00:05:30,000 --> 00:05:31,440
answer security question or whatever the

179
00:05:31,440 --> 00:05:32,720
challenge is going to be for that key

180
00:05:32,720 --> 00:05:34,320
share

181
00:05:34,320 --> 00:05:35,360
and then we're going to encrypt that

182
00:05:35,360 --> 00:05:37,360
with the second key

183
00:05:37,360 --> 00:05:39,440
so the providers who will get this

184
00:05:39,440 --> 00:05:40,960
information can't even see what the

185
00:05:40,960 --> 00:05:43,120
security challenges are

186
00:05:43,120 --> 00:05:43,840
and that's what we're going to

187
00:05:43,840 --> 00:05:46,000
distribute to the providers

188
00:05:46,000 --> 00:05:47,600
so at this stage they learn basically

189
00:05:47,600 --> 00:05:49,280
really nothing about you

190
00:05:49,280 --> 00:05:51,280
they say okay we store this blob we

191
00:05:51,280 --> 00:05:52,720
can't decrypt the key because we don't

192
00:05:52,720 --> 00:05:55,039
have k1 you know we can't

193
00:05:55,039 --> 00:05:56,720
look at the security charge because we

194
00:05:56,720 --> 00:06:01,280
don't have k2 but we can store this fine

195
00:06:01,440 --> 00:06:02,479
and then when you want to do the

196
00:06:02,479 --> 00:06:04,639
recovery you can start with your

197
00:06:04,639 --> 00:06:07,759
identity information derive the two keys

198
00:06:07,759 --> 00:06:10,080
and now you share the k2 with the

199
00:06:10,080 --> 00:06:11,919
respective providers where you decide

200
00:06:11,919 --> 00:06:14,160
these key shares i'm going to recover

201
00:06:14,160 --> 00:06:16,960
and then the providers can find out oh

202
00:06:16,960 --> 00:06:19,120
okay i have to do security question or i

203
00:06:19,120 --> 00:06:20,880
have to do send an sms to a phone number

204
00:06:20,880 --> 00:06:22,160
or something like that

205
00:06:22,160 --> 00:06:23,919
and when you pass the security challenge

206
00:06:23,919 --> 00:06:25,759
at that provider which the only thing

207
00:06:25,759 --> 00:06:27,280
you have to be trusted for they will

208
00:06:27,280 --> 00:06:30,800
send back to you that key share

209
00:06:30,800 --> 00:06:33,120
and well once you have enough key shares

210
00:06:33,120 --> 00:06:36,160
well you can use your k1 to decrypt it

211
00:06:36,160 --> 00:06:37,759
and then hopefully put the whole secret

212
00:06:37,759 --> 00:06:40,319
back together

213
00:06:40,319 --> 00:06:42,319
now this is the very high level

214
00:06:42,319 --> 00:06:44,720
simplified version there are a bunch of

215
00:06:44,720 --> 00:06:46,319
additional things like we have policies

216
00:06:46,319 --> 00:06:48,800
that allow you to freely configure how

217
00:06:48,800 --> 00:06:50,160
you want to

218
00:06:50,160 --> 00:06:51,599
split your secret so for example you

219
00:06:51,599 --> 00:06:52,880
might be a company that goes and says

220
00:06:52,880 --> 00:06:54,800
okay you know one of my employees

221
00:06:54,800 --> 00:06:56,160
another one of employees each of them

222
00:06:56,160 --> 00:06:58,319
with two factors right or the boss of

223
00:06:58,319 --> 00:07:00,560
the company you know any kind of

224
00:07:00,560 --> 00:07:01,919
arbitrary boolean expression you could

225
00:07:01,919 --> 00:07:04,319
basically make use of here

226
00:07:04,319 --> 00:07:05,520
um

227
00:07:05,520 --> 00:07:07,759
we have uh

228
00:07:07,759 --> 00:07:10,160
the possib for the user identifiers at

229
00:07:10,160 --> 00:07:12,319
each provider there's assault which

230
00:07:12,319 --> 00:07:13,840
makes sure that each provider will see a

231
00:07:13,840 --> 00:07:15,199
different user identifier so they can't

232
00:07:15,199 --> 00:07:18,240
say oh we're all storing key shares of

233
00:07:18,240 --> 00:07:20,800
the same user here right so

234
00:07:20,800 --> 00:07:22,720
we also have a taller payment processing

235
00:07:22,720 --> 00:07:23,759
in the protocol which i'm not going to

236
00:07:23,759 --> 00:07:25,520
demonstrate today where we can basically

237
00:07:25,520 --> 00:07:27,759
say okay i want to pay for this provider

238
00:07:27,759 --> 00:07:29,680
to do this service right so the provider

239
00:07:29,680 --> 00:07:31,120
can say well to send you the sms you

240
00:07:31,120 --> 00:07:33,120
know please pay me a dollar which has

241
00:07:33,120 --> 00:07:34,400
two effects once of all we have a

242
00:07:34,400 --> 00:07:36,319
business model

243
00:07:36,319 --> 00:07:37,840
yeah it's good if you want to make sure

244
00:07:37,840 --> 00:07:39,199
these providers are kind of reliable

245
00:07:39,199 --> 00:07:40,000
right

246
00:07:40,000 --> 00:07:41,120
and the second thing it's good

247
00:07:41,120 --> 00:07:43,199
protection against brute force attacks

248
00:07:43,199 --> 00:07:44,560
right

249
00:07:44,560 --> 00:07:46,160
you know even if the pin is a bit longer

250
00:07:46,160 --> 00:07:47,680
maybe somebody just decides to do 100

251
00:07:47,680 --> 00:07:48,800
million of these

252
00:07:48,800 --> 00:07:51,440
well 700 million times the the challenge

253
00:07:51,440 --> 00:07:52,720
well if you have to pay a dollar every

254
00:07:52,720 --> 00:07:55,199
time that's going to be very bad

255
00:07:55,199 --> 00:07:56,400
um

256
00:07:56,400 --> 00:07:59,039
yeah so

257
00:07:59,039 --> 00:08:00,160
with this

258
00:08:00,160 --> 00:08:02,879
prelude i want to go to get to the demo

259
00:08:02,879 --> 00:08:05,440
so here's our gtk client i know you all

260
00:08:05,440 --> 00:08:07,599
love dtk right

261
00:08:07,599 --> 00:08:09,599
there's also web extension version so we

262
00:08:09,599 --> 00:08:10,879
have implemented the whole thing also in

263
00:08:10,879 --> 00:08:13,440
typescript but i personally prefer gtk

264
00:08:13,440 --> 00:08:15,039
it gives me more the feeling of this is

265
00:08:15,039 --> 00:08:18,160
actually running on my computer

266
00:08:18,160 --> 00:08:20,639
so okay let's back up a secret

267
00:08:20,639 --> 00:08:21,680
and so the first thing we're going to be

268
00:08:21,680 --> 00:08:22,960
asking you is basically where do they

269
00:08:22,960 --> 00:08:23,759
live

270
00:08:23,759 --> 00:08:26,400
and for the demo we live in test land

271
00:08:26,400 --> 00:08:28,479
which basically goes to loopback don't

272
00:08:28,479 --> 00:08:30,960
trust the internet at conferences

273
00:08:30,960 --> 00:08:32,320
but if you go to other countries you

274
00:08:32,320 --> 00:08:33,919
know it will ask you for specific

275
00:08:33,919 --> 00:08:35,760
information for that country in the next

276
00:08:35,760 --> 00:08:38,240
screen so here in testland everybody has

277
00:08:38,240 --> 00:08:40,958
a square number in demo land everybody

278
00:08:40,958 --> 00:08:43,120
has a prime number and then it states

279
00:08:43,120 --> 00:08:44,880
everybody has a social security number

280
00:08:44,880 --> 00:08:47,440
in india everybody has an artwork number

281
00:08:47,440 --> 00:08:49,519
right so this is kind of where this

282
00:08:49,519 --> 00:08:52,320
country comes in so i'm very lazy at

283
00:08:52,320 --> 00:08:54,880
typing so i'm max musterman

284
00:08:54,880 --> 00:08:58,720
and my square number is one wonderful

285
00:08:58,720 --> 00:09:00,320
so

286
00:09:00,320 --> 00:09:02,240
yeah this is not very high entropy

287
00:09:02,240 --> 00:09:04,399
obviously but

288
00:09:04,399 --> 00:09:05,920
so it says okay make sure that you

289
00:09:05,920 --> 00:09:07,839
remember this because if you forget any

290
00:09:07,839 --> 00:09:09,040
of this you know you will not get your

291
00:09:09,040 --> 00:09:10,320
secrets back

292
00:09:10,320 --> 00:09:12,000
and now we can configure which

293
00:09:12,000 --> 00:09:14,640
authentication methods we want to have

294
00:09:14,640 --> 00:09:16,160
we have actually supporting support

295
00:09:16,160 --> 00:09:18,080
implement for six methods sending you an

296
00:09:18,080 --> 00:09:20,000
sms sending you an email security

297
00:09:20,000 --> 00:09:21,600
questions sending you physical mail by

298
00:09:21,600 --> 00:09:24,640
our post office uh doing a transactional

299
00:09:24,640 --> 00:09:28,320
uh team-based types otp and iban

300
00:09:28,320 --> 00:09:30,160
ibn means i'm gonna send you money from

301
00:09:30,160 --> 00:09:32,320
my bank account because i presumably

302
00:09:32,320 --> 00:09:33,760
have control of my bank account if i do

303
00:09:33,760 --> 00:09:35,600
that then you know you can kind of trust

304
00:09:35,600 --> 00:09:36,800
it's me

305
00:09:36,800 --> 00:09:38,320
that one doesn't work for the demo here

306
00:09:38,320 --> 00:09:41,279
for kind of obvious reasons right

307
00:09:41,279 --> 00:09:42,480
well some of them others don't work

308
00:09:42,480 --> 00:09:44,399
either here you can kind of say i want

309
00:09:44,399 --> 00:09:45,760
to have additional providers than what's

310
00:09:45,760 --> 00:09:47,839
configured by default but let's start

311
00:09:47,839 --> 00:09:50,560
with something simple okay whatever me

312
00:09:50,560 --> 00:09:52,800
at

313
00:09:56,399 --> 00:10:00,160
so what we do is we force people to

314
00:10:00,160 --> 00:10:02,320
add at least two secrets so we can kind

315
00:10:02,320 --> 00:10:04,480
of display it across two providers

316
00:10:04,480 --> 00:10:05,760
um

317
00:10:05,760 --> 00:10:09,200
so security question i'm very uncreative

318
00:10:09,200 --> 00:10:10,720
q1a1

319
00:10:10,720 --> 00:10:12,959
sorry

320
00:10:12,959 --> 00:10:14,959
what i should also mention is the

321
00:10:14,959 --> 00:10:17,760
answer is of course salted so even the

322
00:10:17,760 --> 00:10:19,360
provider that gets the answer can't

323
00:10:19,360 --> 00:10:21,519
reverse back to the answer because he

324
00:10:21,519 --> 00:10:23,519
doesn't learn the salt in the protocol

325
00:10:23,519 --> 00:10:25,200
and we include a different version of

326
00:10:25,200 --> 00:10:27,120
the hashed answer in the decryption

327
00:10:27,120 --> 00:10:29,200
process of that keyshare so if you don't

328
00:10:29,200 --> 00:10:30,800
know the answer you can never ever get

329
00:10:30,800 --> 00:10:33,839
anything out of the system

330
00:10:34,959 --> 00:10:37,360
and time-based otp is a bit more special

331
00:10:37,360 --> 00:10:40,000
i have to actually start my totp app

332
00:10:40,000 --> 00:10:41,920
because it doesn't let me continue

333
00:10:41,920 --> 00:10:43,760
unless i type in the write code

334
00:10:43,760 --> 00:10:46,000
immediately

335
00:10:46,000 --> 00:10:48,880
so okay

336
00:10:49,040 --> 00:10:50,480
yeah this one is not safe because you

337
00:10:50,480 --> 00:10:53,120
can kind of scan it now i know eight one

338
00:10:53,120 --> 00:10:54,880
not too late

339
00:10:54,880 --> 00:10:55,839
six

340
00:10:55,839 --> 00:10:57,839
four eight

341
00:10:57,839 --> 00:10:58,640
five

342
00:10:58,640 --> 00:11:02,079
seven five five eight

343
00:11:02,079 --> 00:11:03,360
okay

344
00:11:03,360 --> 00:11:05,200
let's just do three factors in our font

345
00:11:05,200 --> 00:11:06,560
today

346
00:11:06,560 --> 00:11:09,200
so this is where we can edit the policy

347
00:11:09,200 --> 00:11:10,880
so by default it kind of goes and says

348
00:11:10,880 --> 00:11:12,560
i've only configured three i guess i

349
00:11:12,560 --> 00:11:14,880
could do two out of three um but you

350
00:11:14,880 --> 00:11:16,079
could go

351
00:11:16,079 --> 00:11:18,079
and say basically okay

352
00:11:18,079 --> 00:11:20,800
i find question plus t otp that's not a

353
00:11:20,800 --> 00:11:23,279
good recovery policy delete it or you

354
00:11:23,279 --> 00:11:24,640
could go and say i'm going to edit this

355
00:11:24,640 --> 00:11:27,040
one and say you also need to answer one

356
00:11:27,040 --> 00:11:28,240
of these at another provider or

357
00:11:28,240 --> 00:11:29,360
something like this so you can kind of

358
00:11:29,360 --> 00:11:31,600
freely configure here how you want the

359
00:11:31,600 --> 00:11:33,839
policies to look it just suggests you a

360
00:11:33,839 --> 00:11:37,120
reasonably sane default

361
00:11:37,760 --> 00:11:40,079
okay now we have to give our secret a

362
00:11:40,079 --> 00:11:41,680
name the idea is you could have many

363
00:11:41,680 --> 00:11:44,000
secrets right and so if you have more

364
00:11:44,000 --> 00:11:45,760
than one secret it will during recovery

365
00:11:45,760 --> 00:11:46,959
tell you okay you've got all of these

366
00:11:46,959 --> 00:11:48,959
secrets which one do you want to recover

367
00:11:48,959 --> 00:11:51,360
right so say name here

368
00:11:51,360 --> 00:11:53,920
great i'm very creative tonight

369
00:11:53,920 --> 00:11:57,839
and what's the good secret null pointer

370
00:11:57,839 --> 00:11:59,440
good

371
00:11:59,440 --> 00:12:02,160
so as there can be fees so here it's

372
00:12:02,160 --> 00:12:04,160
gratis because it's the demo you can

373
00:12:04,160 --> 00:12:05,600
also upload a file if you want to share

374
00:12:05,600 --> 00:12:08,160
your gpg keyring or something like that

375
00:12:08,160 --> 00:12:10,800
okay that's it so we've

376
00:12:10,800 --> 00:12:13,040
stored all of our shares at the data

377
00:12:13,040 --> 00:12:15,920
loss incorporated

378
00:12:15,920 --> 00:12:17,920
yeah loopback right

379
00:12:17,920 --> 00:12:19,600
and if you want to do recovery you know

380
00:12:19,600 --> 00:12:20,959
it's what you would expect you'd have to

381
00:12:20,959 --> 00:12:23,120
again start by entering your personal

382
00:12:23,120 --> 00:12:24,399
details

383
00:12:24,399 --> 00:12:25,920
because i didn't restart the processes

384
00:12:25,920 --> 00:12:27,680
remembers it but that's because it's

385
00:12:27,680 --> 00:12:29,040
still running if you had quit you had to

386
00:12:29,040 --> 00:12:31,200
re-enter it

387
00:12:31,200 --> 00:12:32,240
and

388
00:12:32,240 --> 00:12:34,079
now it has basically what it does it it

389
00:12:34,079 --> 00:12:35,920
asks all of the providers it knows hey

390
00:12:35,920 --> 00:12:37,839
do you have anything under this user id

391
00:12:37,839 --> 00:12:39,600
and the providers go and say well i have

392
00:12:39,600 --> 00:12:41,279
this blob

393
00:12:41,279 --> 00:12:42,639
and then i can decrypt the method and

394
00:12:42,639 --> 00:12:44,320
find out oh there's a secret under the

395
00:12:44,320 --> 00:12:45,600
name name

396
00:12:45,600 --> 00:12:46,800
right

397
00:12:46,800 --> 00:12:48,160
and if you had done multiple backups you

398
00:12:48,160 --> 00:12:49,680
would get all of those here so i can

399
00:12:49,680 --> 00:12:51,120
select the name

400
00:12:51,120 --> 00:12:52,800
now i have to solve the security

401
00:12:52,800 --> 00:12:54,240
challenges

402
00:12:54,240 --> 00:12:56,000
um

403
00:12:56,000 --> 00:12:57,839
and

404
00:12:57,839 --> 00:12:59,760
well none of these are very easy to

405
00:12:59,760 --> 00:13:02,399
solve in this context uh let's do

406
00:13:02,399 --> 00:13:05,120
security question okay so a2 was the

407
00:13:05,120 --> 00:13:07,200
answer right no

408
00:13:07,200 --> 00:13:09,760
a1 fine

409
00:13:09,760 --> 00:13:11,680
now the email in this system is sent to

410
00:13:11,680 --> 00:13:15,239
a local file

411
00:13:32,320 --> 00:13:35,320
right

412
00:13:44,800 --> 00:13:46,959
okay and here's our secret recovered you

413
00:13:46,959 --> 00:13:48,639
can see it up here

414
00:13:48,639 --> 00:13:52,880
null pointer you know or as a qr code

415
00:13:52,880 --> 00:13:57,240
so that's the quick demo

416
00:13:58,750 --> 00:14:03,600
[Applause]

417
00:14:03,600 --> 00:14:05,440
no i should stress anastasis is a

418
00:14:05,440 --> 00:14:07,920
protocol you know mostly a rest-based

419
00:14:07,920 --> 00:14:08,959
protocol

420
00:14:08,959 --> 00:14:11,199
uh with some crypto around it the crypto

421
00:14:11,199 --> 00:14:12,959
is the most boring one you can imagine

422
00:14:12,959 --> 00:14:14,240
we have hash functions and hash

423
00:14:14,240 --> 00:14:15,519
functions and a little bit of symmetric

424
00:14:15,519 --> 00:14:16,639
encryption

425
00:14:16,639 --> 00:14:18,160
right there's no public key crypto in

426
00:14:18,160 --> 00:14:19,600
there so you know good luck with your

427
00:14:19,600 --> 00:14:22,560
post quantum attacks um

428
00:14:22,560 --> 00:14:24,480
we have the back end implemented in c

429
00:14:24,480 --> 00:14:27,760
gtk front and nc a typescript front end

430
00:14:27,760 --> 00:14:29,279
we have dependencies for payments on

431
00:14:29,279 --> 00:14:31,279
gunutala for the database we use

432
00:14:31,279 --> 00:14:34,320
postgres uh for banking access to

433
00:14:34,320 --> 00:14:36,240
finties european banking system we have

434
00:14:36,240 --> 00:14:38,480
lipoeufin and we use some utility

435
00:14:38,480 --> 00:14:39,600
functions from grenade and gluted

436
00:14:39,600 --> 00:14:42,480
microhpd for this whole thing

437
00:14:42,480 --> 00:14:44,480
if you want to try it out yourself well

438
00:14:44,480 --> 00:14:46,800
here are some installation instructions

439
00:14:46,800 --> 00:14:48,399
for getting debian package ubuntu

440
00:14:48,399 --> 00:14:51,199
packages this is the version 0.3 we are

441
00:14:51,199 --> 00:14:53,519
still in the process of releasing 0.4

442
00:14:53,519 --> 00:14:57,120
you saw 0.4 demo today

443
00:14:57,120 --> 00:15:00,880
okay so that's my quick presentation

444
00:15:00,880 --> 00:15:02,480
uh

445
00:15:02,480 --> 00:15:05,600
i'm happy to have take any questions and

446
00:15:05,600 --> 00:15:07,600
but before you take questions why am i

447
00:15:07,600 --> 00:15:09,839
here we need providers

448
00:15:09,839 --> 00:15:11,519
you know if i run a provider that's

449
00:15:11,519 --> 00:15:13,680
great but i if i run five that's not so

450
00:15:13,680 --> 00:15:14,639
great

451
00:15:14,639 --> 00:15:16,800
right so i want to encourage people from

452
00:15:16,800 --> 00:15:18,000
the community to come to us and go and

453
00:15:18,000 --> 00:15:20,160
say okay i can run a rest server with

454
00:15:20,160 --> 00:15:22,160
the postgres backend you know and i can

455
00:15:22,160 --> 00:15:24,560
kind of not lose the data all the time

456
00:15:24,560 --> 00:15:26,240
now if you do lose the data hopefully

457
00:15:26,240 --> 00:15:28,079
it's just a key share right and there

458
00:15:28,079 --> 00:15:29,920
are other ways to recover it so we don't

459
00:15:29,920 --> 00:15:31,440
have to trust you completely that you're

460
00:15:31,440 --> 00:15:33,360
super reliable right but this should be

461
00:15:33,360 --> 00:15:34,959
a better way to do key management than

462
00:15:34,959 --> 00:15:37,360
what we have so far

463
00:15:37,360 --> 00:15:40,360
okay

464
00:15:43,680 --> 00:15:45,040
i'm supposed to repeat your question so

465
00:15:45,040 --> 00:15:48,599
just charge it at me

466
00:15:54,800 --> 00:15:57,519
uh key 1 and key 2 are not really stored

467
00:15:57,519 --> 00:15:59,199
they are derived

468
00:15:59,199 --> 00:16:00,959
so you you have a hashkey derivation

469
00:16:00,959 --> 00:16:02,639
function that has two different salts

470
00:16:02,639 --> 00:16:04,320
and you have the master key that is this

471
00:16:04,320 --> 00:16:05,519
user id

472
00:16:05,519 --> 00:16:07,600
and the user id is itself derived from

473
00:16:07,600 --> 00:16:11,680
hashing all of your personal attributes

474
00:16:19,440 --> 00:16:21,839
uh yeah so the strong the question is

475
00:16:21,839 --> 00:16:22,880
how does this rate to the strong

476
00:16:22,880 --> 00:16:24,639
attackers so a strong attacker can

477
00:16:24,639 --> 00:16:26,560
basically get your identity can get you

478
00:16:26,560 --> 00:16:30,079
get your user id and can get k1 and k2

479
00:16:30,079 --> 00:16:32,560
right that's why a strong attacker

480
00:16:32,560 --> 00:16:35,440
can find out where are your keys stored

481
00:16:35,440 --> 00:16:37,440
right but he still has to convince the

482
00:16:37,440 --> 00:16:38,639
providers that he passes the

483
00:16:38,639 --> 00:16:40,480
authentication challenge

484
00:16:40,480 --> 00:16:41,519
right i mean the strong attacker

485
00:16:41,519 --> 00:16:43,279
basically can impersonate you perfectly

486
00:16:43,279 --> 00:16:47,480
except for the authentication challenges

487
00:16:52,480 --> 00:16:54,000
how do we get the salt for the questions

488
00:16:54,000 --> 00:16:56,639
and answers um we just randomly generate

489
00:16:56,639 --> 00:16:59,759
128-bit sword locally

490
00:16:59,759 --> 00:17:02,160
and oh but when you doing recovery you

491
00:17:02,160 --> 00:17:04,880
talk about okay so we have what i didn't

492
00:17:04,880 --> 00:17:07,039
show we have a recovery policy document

493
00:17:07,039 --> 00:17:08,959
which specifies which key shares are

494
00:17:08,959 --> 00:17:10,559
under which provider

495
00:17:10,559 --> 00:17:12,480
and together there is the you know which

496
00:17:12,480 --> 00:17:14,079
key share is where we also would then

497
00:17:14,079 --> 00:17:16,000
would have the sort in that document and

498
00:17:16,000 --> 00:17:17,199
this is what we where we have this

499
00:17:17,199 --> 00:17:18,959
metadata that also says that this is the

500
00:17:18,959 --> 00:17:21,599
you know secret with this name

501
00:17:21,599 --> 00:17:23,520
and so this is what you first fetch so

502
00:17:23,520 --> 00:17:25,359
once you have this user id there's

503
00:17:25,359 --> 00:17:26,959
another one key that's being derived

504
00:17:26,959 --> 00:17:28,880
here and that's what you use to get this

505
00:17:28,880 --> 00:17:30,880
recovery policy document and that will

506
00:17:30,880 --> 00:17:32,720
then tell you what the key

507
00:17:32,720 --> 00:17:34,480
where the key shares are and what the

508
00:17:34,480 --> 00:17:36,160
salts are for security question answer

509
00:17:36,160 --> 00:17:38,559
hashing

510
00:17:54,240 --> 00:17:55,520
okay so the question was how do the

511
00:17:55,520 --> 00:17:57,440
authentication codes get generated so

512
00:17:57,440 --> 00:17:59,200
what the system does

513
00:17:59,200 --> 00:18:00,640
it has for the different authentication

514
00:18:00,640 --> 00:18:03,120
methods different time thresholds so for

515
00:18:03,120 --> 00:18:04,960
example it might say for an email i'm

516
00:18:04,960 --> 00:18:06,320
going to generate a fresh code every

517
00:18:06,320 --> 00:18:07,440
half hour

518
00:18:07,440 --> 00:18:09,360
right but for physical mail i'm only

519
00:18:09,360 --> 00:18:11,440
doing it fresh code once a day

520
00:18:11,440 --> 00:18:13,360
and has a second limit of how often it's

521
00:18:13,360 --> 00:18:15,039
going to send you the email so if you

522
00:18:15,039 --> 00:18:16,480
ask within three seconds a second time

523
00:18:16,480 --> 00:18:17,760
it might not send you another email

524
00:18:17,760 --> 00:18:19,200
let's just tell you oh come on wait a

525
00:18:19,200 --> 00:18:21,280
little bit you know be patient but then

526
00:18:21,280 --> 00:18:22,960
after whatever 30 seconds it might send

527
00:18:22,960 --> 00:18:24,960
you the same code a second time but if

528
00:18:24,960 --> 00:18:26,320
you wait half an hour then it will be a

529
00:18:26,320 --> 00:18:27,679
new code

530
00:18:27,679 --> 00:18:28,960
right and then it has for for the

531
00:18:28,960 --> 00:18:30,720
authentication challenge it has a window

532
00:18:30,720 --> 00:18:34,480
during which it accepts the older codes

533
00:18:39,280 --> 00:18:41,600
it has a challenge id so to speak and

534
00:18:41,600 --> 00:18:43,039
the time frame for which this code would

535
00:18:43,039 --> 00:18:45,520
be valid for somebody to come

536
00:18:45,520 --> 00:18:48,240
to answer it yes

537
00:18:54,000 --> 00:18:55,360
so how are data

538
00:18:55,360 --> 00:18:57,200
changes handled if i move or have a

539
00:18:57,200 --> 00:18:58,240
different mobile number what's the

540
00:18:58,240 --> 00:19:00,640
question well hopefully the answer is

541
00:19:00,640 --> 00:19:02,559
you didn't say you need to satisfy all

542
00:19:02,559 --> 00:19:04,640
factors and maybe you remember that you

543
00:19:04,640 --> 00:19:07,200
need to upload a new one right

544
00:19:07,200 --> 00:19:08,160
so

545
00:19:08,160 --> 00:19:10,240
if you change your phone number well you

546
00:19:10,240 --> 00:19:12,000
will not get your sms but maybe you can

547
00:19:12,000 --> 00:19:14,240
still do the otp and physical mail

548
00:19:14,240 --> 00:19:16,160
address or something like that but if

549
00:19:16,160 --> 00:19:18,000
you you know lose

550
00:19:18,000 --> 00:19:20,000
the ways to authenticate well you will

551
00:19:20,000 --> 00:19:22,080
not be able to recover

552
00:19:22,080 --> 00:19:23,600
maybe you can convince the respective

553
00:19:23,600 --> 00:19:25,200
provider with a good lawyer or something

554
00:19:25,200 --> 00:19:27,360
but

555
00:19:30,880 --> 00:19:32,160
what you can do in advance is basically

556
00:19:32,160 --> 00:19:33,919
make sure you have enough secrets enough

557
00:19:33,919 --> 00:19:35,760
diversity and enough redundancy and

558
00:19:35,760 --> 00:19:37,679
maybe add the ones from your wife and so

559
00:19:37,679 --> 00:19:39,600
on and make a policy that says okay

560
00:19:39,600 --> 00:19:41,200
either my phone number or my wife's

561
00:19:41,200 --> 00:19:43,120
phone number or something like that

562
00:19:43,120 --> 00:19:44,799
this is you can make very complicated

563
00:19:44,799 --> 00:19:47,039
policies here and

564
00:19:47,039 --> 00:19:49,360
it's not xiaomi k out of n right and so

565
00:19:49,360 --> 00:19:51,280
you can really say okay on my phone i

566
00:19:51,280 --> 00:19:53,919
get my emails and my sms so that's not

567
00:19:53,919 --> 00:19:56,000
too factual for me right and you might

568
00:19:56,000 --> 00:19:57,200
go and say okay so i'm rather going to

569
00:19:57,200 --> 00:19:59,600
use my phone for email or sms and my

570
00:19:59,600 --> 00:20:02,159
partner's phone or email sms right so

571
00:20:02,159 --> 00:20:04,159
just pick a good policy is the answer

572
00:20:04,159 --> 00:20:06,159
and what that is of course we can only

573
00:20:06,159 --> 00:20:07,520
provide limited guidance given that we

574
00:20:07,520 --> 00:20:10,799
don't know your personal situation

575
00:20:17,280 --> 00:20:19,679
so okay so question is what can i change

576
00:20:19,679 --> 00:20:21,360
it later well the answer is you can

577
00:20:21,360 --> 00:20:23,520
always upload a new secret to a new set

578
00:20:23,520 --> 00:20:25,679
of providers and a new set of policies

579
00:20:25,679 --> 00:20:27,760
right and typically we have a there's an

580
00:20:27,760 --> 00:20:29,919
expiration process like after five years

581
00:20:29,919 --> 00:20:31,919
the old stuff goes always away

582
00:20:31,919 --> 00:20:34,640
you could pay for longer but the idea is

583
00:20:34,640 --> 00:20:36,320
if it's an important secret you should

584
00:20:36,320 --> 00:20:37,200
you know

585
00:20:37,200 --> 00:20:39,679
decide okay i'm going to renew this and

586
00:20:39,679 --> 00:20:40,799
then you can of course change the

587
00:20:40,799 --> 00:20:44,840
policies associated with that

588
00:20:53,520 --> 00:20:54,720
okay so the question is is there a way

589
00:20:54,720 --> 00:20:56,799
to revoke it and the answer is no

590
00:20:56,799 --> 00:20:59,440
because we decide that's also dangerous

591
00:20:59,440 --> 00:21:00,720
you know somebody might be able to

592
00:21:00,720 --> 00:21:02,559
convince us that we should stop this and

593
00:21:02,559 --> 00:21:04,400
then you can't get back to your secret

594
00:21:04,400 --> 00:21:05,760
so it's not clear which you know

595
00:21:05,760 --> 00:21:07,360
revocation is that more dangerous or

596
00:21:07,360 --> 00:21:09,120
more helpful so we decided let's not do

597
00:21:09,120 --> 00:21:10,720
that

598
00:21:10,720 --> 00:21:13,039
but you know in theory if we had a very

599
00:21:13,039 --> 00:21:15,360
good way of making sure that this was a

600
00:21:15,360 --> 00:21:16,799
valid revocation we could of course

601
00:21:16,799 --> 00:21:18,880
delete the record from the database but

602
00:21:18,880 --> 00:21:20,240
i think i personally think that's more

603
00:21:20,240 --> 00:21:23,360
dangerous than what it's worth

604
00:21:38,480 --> 00:21:39,919
how do we handle fault tolerance and

605
00:21:39,919 --> 00:21:43,039
human stupidity oh my goodness

606
00:21:43,039 --> 00:21:44,320
well what we are trying to do for

607
00:21:44,320 --> 00:21:46,480
example when we uh when the user has to

608
00:21:46,480 --> 00:21:48,480
enter information we validate it so as

609
00:21:48,480 --> 00:21:50,080
you might have seen with the totp i had

610
00:21:50,080 --> 00:21:52,559
to actually have the totp you know we

611
00:21:52,559 --> 00:21:53,840
didn't just say okay we showed you the

612
00:21:53,840 --> 00:21:55,600
qr code do you believe it it's fine keep

613
00:21:55,600 --> 00:21:57,440
going we said no no enter the challenge

614
00:21:57,440 --> 00:21:58,880
once so we know that you actually had a

615
00:21:58,880 --> 00:22:01,360
top application right and the same for

616
00:22:01,360 --> 00:22:02,799
your social security numbers and stuff

617
00:22:02,799 --> 00:22:04,559
we will do some input validation and

618
00:22:04,559 --> 00:22:06,480
check the check sums if there are any

619
00:22:06,480 --> 00:22:08,159
right so we do the sanity checks where

620
00:22:08,159 --> 00:22:09,919
we can't do sending checks on the inputs

621
00:22:09,919 --> 00:22:12,000
to reduce you from going oh i'm supposed

622
00:22:12,000 --> 00:22:13,360
to enter social security number one two

623
00:22:13,360 --> 00:22:15,440
three four five six seven eight yeah i

624
00:22:15,440 --> 00:22:17,679
would just basically go and say no

625
00:22:17,679 --> 00:22:19,840
that's that's the best i can offer here

626
00:22:19,840 --> 00:22:22,000
um plus of course as i said if you give

627
00:22:22,000 --> 00:22:23,600
us a certain number of seekers who

628
00:22:23,600 --> 00:22:25,280
basically will not by default say okay

629
00:22:25,280 --> 00:22:27,280
you need all of them for recovery but we

630
00:22:27,280 --> 00:22:29,280
will do a slightly lower threshold you

631
00:22:29,280 --> 00:22:30,640
know whatever

632
00:22:30,640 --> 00:22:32,400
three out of five or something like that

633
00:22:32,400 --> 00:22:34,720
so that there's a

634
00:22:34,720 --> 00:22:35,760
inherent

635
00:22:35,760 --> 00:22:36,720
uh

636
00:22:36,720 --> 00:22:39,039
default that says okay you don't need to

637
00:22:39,039 --> 00:22:40,799
pass all the challenges because probably

638
00:22:40,799 --> 00:22:42,559
it's safer for you if you only pass you

639
00:22:42,559 --> 00:22:43,840
know three factor than if you have five

640
00:22:43,840 --> 00:22:45,440
factor authentication but you can

641
00:22:45,440 --> 00:22:47,679
override that right so but we try to

642
00:22:47,679 --> 00:22:49,200
provide same defaults and input

643
00:22:49,200 --> 00:22:52,200
validations

644
00:22:56,610 --> 00:22:58,799
[Music]

645
00:22:58,799 --> 00:23:01,039
well so a certain level of intelligence

646
00:23:01,039 --> 00:23:04,320
is always required

647
00:23:04,640 --> 00:23:05,440
right

648
00:23:05,440 --> 00:23:06,320
this

649
00:23:06,320 --> 00:23:08,559
i i think this is still way more usable

650
00:23:08,559 --> 00:23:10,000
than what anything i've seen out there

651
00:23:10,000 --> 00:23:10,960
before

652
00:23:10,960 --> 00:23:13,280
right but i cannot say it's you know

653
00:23:13,280 --> 00:23:15,039
foolproof because we know how damn

654
00:23:15,039 --> 00:23:18,840
creative fools can be

655
00:23:22,960 --> 00:23:24,799
we verify them in terms of the checksum

656
00:23:24,799 --> 00:23:26,000
if they have a checksum for the

657
00:23:26,000 --> 00:23:28,000
verification association we cannot check

658
00:23:28,000 --> 00:23:29,919
if this is actually your social security

659
00:23:29,919 --> 00:23:32,400
number um that's you know usually the

660
00:23:32,400 --> 00:23:33,760
governments don't quite give us access

661
00:23:33,760 --> 00:23:37,000
to that database

662
00:23:39,360 --> 00:23:41,120
yes that's the strong attacker model

663
00:23:41,120 --> 00:23:42,400
right if you impersonate somebody else

664
00:23:42,400 --> 00:23:44,559
yes you can do that

665
00:23:44,559 --> 00:23:46,320
but it's interesting though if you in

666
00:23:46,320 --> 00:23:48,000
order to do an upload there might be

667
00:23:48,000 --> 00:23:49,279
also a

668
00:23:49,279 --> 00:23:51,360
money that has to be paid right so you

669
00:23:51,360 --> 00:23:53,200
might basically pay to for me to store

670
00:23:53,200 --> 00:23:54,880
my secrets and you have to have the the

671
00:23:54,880 --> 00:23:56,720
proof that you made the payment so you

672
00:23:56,720 --> 00:23:58,720
can't just say oh christian paid for his

673
00:23:58,720 --> 00:24:00,080
upload there and now i'm going to upload

674
00:24:00,080 --> 00:24:01,679
bunch of stuff under his account you

675
00:24:01,679 --> 00:24:03,440
have to have the payment proof

676
00:24:03,440 --> 00:24:04,480
to do the

677
00:24:04,480 --> 00:24:07,279
to do updates

678
00:24:07,360 --> 00:24:10,600
last law

679
00:24:23,520 --> 00:24:24,880
okay what's the point of encrypting

680
00:24:24,880 --> 00:24:27,760
something with k2 the answer is simple

681
00:24:27,760 --> 00:24:29,039
first of all

682
00:24:29,039 --> 00:24:30,640
if the provider's database ends up on

683
00:24:30,640 --> 00:24:31,600
the internet everything is still

684
00:24:31,600 --> 00:24:33,440
encrypted with k2 so you don't get a

685
00:24:33,440 --> 00:24:34,799
list of all of their users you just

686
00:24:34,799 --> 00:24:36,640
don't just get garbage

687
00:24:36,640 --> 00:24:38,480
right so as a provider i love everything

688
00:24:38,480 --> 00:24:40,559
being crypto with k2 because it lowers

689
00:24:40,559 --> 00:24:42,240
my responsibility

690
00:24:42,240 --> 00:24:44,720
second point of it is i may never do the

691
00:24:44,720 --> 00:24:47,279
recovery i might have done the backup

692
00:24:47,279 --> 00:24:48,799
right to sort the secret if i didn't

693
00:24:48,799 --> 00:24:50,480
lose it i don't need to ever do the

694
00:24:50,480 --> 00:24:52,000
recovery which means the provider will

695
00:24:52,000 --> 00:24:54,159
never learn anything about me

696
00:24:54,159 --> 00:24:55,679
and with privacy building payments a

697
00:24:55,679 --> 00:24:57,760
provider may store secrets of people he

698
00:24:57,760 --> 00:25:00,559
will never learn who they are right so

699
00:25:00,559 --> 00:25:01,840
the idea is

700
00:25:01,840 --> 00:25:04,159
you do the during recovery we disclose

701
00:25:04,159 --> 00:25:06,320
this but what if there is no recovery

702
00:25:06,320 --> 00:25:09,039
well then no they will never learn

703
00:25:09,039 --> 00:25:11,440
right and if the data and the provider

704
00:25:11,440 --> 00:25:13,120
if it's a good provider

705
00:25:13,120 --> 00:25:15,200
and we have basically an agreement draft

706
00:25:15,200 --> 00:25:16,320
that says

707
00:25:16,320 --> 00:25:17,679
if we want if you want to be a provider

708
00:25:17,679 --> 00:25:19,840
in our default list you must guarantee

709
00:25:19,840 --> 00:25:21,919
that you forget k2 the moment you've

710
00:25:21,919 --> 00:25:23,120
used it

711
00:25:23,120 --> 00:25:24,880
right so

712
00:25:24,880 --> 00:25:26,240
and the email and everything else you

713
00:25:26,240 --> 00:25:27,039
know

714
00:25:27,039 --> 00:25:28,720
so the assumption is that you have a

715
00:25:28,720 --> 00:25:31,840
very short exposure to that risk

716
00:25:31,840 --> 00:25:33,279
right which is much better than having

717
00:25:33,279 --> 00:25:34,880
all of this data in clear text on your

718
00:25:34,880 --> 00:25:37,880
drive

719
00:25:44,320 --> 00:25:47,320
um

720
00:26:02,960 --> 00:26:04,960
the provider is receiving uh one of the

721
00:26:04,960 --> 00:26:06,880
two keys but not the other

722
00:26:06,880 --> 00:26:08,880
right so

723
00:26:08,880 --> 00:26:11,520
what one stays always on your system

724
00:26:11,520 --> 00:26:13,120
that is the one to decrypt this there's

725
00:26:13,120 --> 00:26:14,480
a secret

726
00:26:14,480 --> 00:26:15,360
right

727
00:26:15,360 --> 00:26:17,360
but the k2 is disclosed to the provider

728
00:26:17,360 --> 00:26:21,399
the k1 stays with you locally

729
00:26:38,000 --> 00:26:39,360
the questions can provide us collude

730
00:26:39,360 --> 00:26:41,760
with each other or not be trustworthy

731
00:26:41,760 --> 00:26:43,600
in principle yes of course when we put

732
00:26:43,600 --> 00:26:45,200
them into the software we will try to

733
00:26:45,200 --> 00:26:46,720
have a good look at them and ask them a

734
00:26:46,720 --> 00:26:49,039
couple of questions uh but the good

735
00:26:49,039 --> 00:26:49,919
thing is

736
00:26:49,919 --> 00:26:52,559
uh again one provider

737
00:26:52,559 --> 00:26:54,559
failing fatally shouldn't really impact

738
00:26:54,559 --> 00:26:58,320
you because multiple have to fail

739
00:27:04,080 --> 00:27:06,960
yeah if you again we are not looking to

740
00:27:06,960 --> 00:27:11,960
have 100 providers in that list right

741
00:27:20,080 --> 00:27:22,640
oh well uh so if one attacker has

742
00:27:22,640 --> 00:27:24,399
ownership of multiple providers is that

743
00:27:24,399 --> 00:27:26,080
when we put people into that list we

744
00:27:26,080 --> 00:27:27,440
will try to make sure that they are all

745
00:27:27,440 --> 00:27:30,320
very disjoint as much as they can be

746
00:27:30,320 --> 00:27:33,320
right

747
00:27:47,679 --> 00:27:49,919
i i i'm not looking at the very big

748
00:27:49,919 --> 00:27:52,559
telco providers i'm looking i know i've

749
00:27:52,559 --> 00:27:54,399
had talks with fsf

750
00:27:54,399 --> 00:27:56,880
hollande foundation you know digital

751
00:27:56,880 --> 00:27:58,799
raja you know so

752
00:27:58,799 --> 00:28:01,039
they can be for profit but i'm looking

753
00:28:01,039 --> 00:28:03,039
at smaller hacker organizations to do

754
00:28:03,039 --> 00:28:03,760
this

755
00:28:03,760 --> 00:28:05,679
you know not a tnt

756
00:28:05,679 --> 00:28:07,039
you know just

757
00:28:07,039 --> 00:28:09,039
kind of a bit more trustworthy operators

758
00:28:09,039 --> 00:28:10,480
than what you might be thinking of and i

759
00:28:10,480 --> 00:28:12,320
think if fsf tells me you know we have

760
00:28:12,320 --> 00:28:14,880
nothing to do with holland

761
00:28:14,880 --> 00:28:16,490
it's probably okay

762
00:28:16,490 --> 00:28:19,519
[Music]

763
00:28:20,640 --> 00:28:23,679
yeah now we are way over time

764
00:28:23,679 --> 00:28:24,480
but

765
00:28:24,480 --> 00:28:26,480
i will be at the gnu booth

766
00:28:26,480 --> 00:28:27,760
together with

767
00:28:27,760 --> 00:28:30,960
jose who is here for gnu poke a binary

768
00:28:30,960 --> 00:28:33,919
editor all day tomorrow so i propose you

769
00:28:33,919 --> 00:28:35,919
ask me questions then before the

770
00:28:35,919 --> 00:28:37,840
organizers get very upset with me just

771
00:28:37,840 --> 00:28:40,000
taking all evening for questions

772
00:28:40,000 --> 00:28:43,080
what do you think

773
00:28:43,080 --> 00:28:46,240
[Applause]

774
00:28:46,240 --> 00:28:48,320
you

