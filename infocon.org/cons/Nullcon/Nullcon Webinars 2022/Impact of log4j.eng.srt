1
00:00:00,799 --> 00:00:03,920
all right go live

2
00:00:04,640 --> 00:00:06,640
welcome to the nilcon webcast so this is

3
00:00:06,640 --> 00:00:08,480
slightly different than our

4
00:00:08,480 --> 00:00:10,160
traditional webinar

5
00:00:10,160 --> 00:00:11,759
we'll be discussing about the log for

6
00:00:11,759 --> 00:00:14,080
shell or liberty which came in like a

7
00:00:14,080 --> 00:00:16,880
storm with a 10 on 10 cbss and direct

8
00:00:16,880 --> 00:00:18,640
remote code execution

9
00:00:18,640 --> 00:00:20,640
we'll be discussing its impact learnings

10
00:00:20,640 --> 00:00:21,279
and

11
00:00:21,279 --> 00:00:22,880
how to depend upon

12
00:00:22,880 --> 00:00:26,000
the similar lines of exploits in 2022 we

13
00:00:26,000 --> 00:00:27,039
have

14
00:00:27,039 --> 00:00:29,199
alvaro and joe

15
00:00:29,199 --> 00:00:32,719
here to discuss on the topic a few words

16
00:00:32,719 --> 00:00:33,680
uh

17
00:00:33,680 --> 00:00:35,680
describing alvaro and joe so

18
00:00:35,680 --> 00:00:37,760
alvaro monash is

19
00:00:37,760 --> 00:00:40,160
working for github security he's working

20
00:00:40,160 --> 00:00:41,680
as a principal security researcher with

21
00:00:41,680 --> 00:00:44,640
github security team and before joining

22
00:00:44,640 --> 00:00:46,160
the research organization he worked as

23
00:00:46,160 --> 00:00:47,920
an application security consultant

24
00:00:47,920 --> 00:00:49,600
helping top enterprises to deploy their

25
00:00:49,600 --> 00:00:51,600
application security programs

26
00:00:51,600 --> 00:00:53,039
passionate about web application

27
00:00:53,039 --> 00:00:54,160
security

28
00:00:54,160 --> 00:00:56,079
where he's focused most of the research

29
00:00:56,079 --> 00:00:58,320
and presented in uh prestigious

30
00:00:58,320 --> 00:01:00,000
conferences like black hat death corn

31
00:01:00,000 --> 00:01:01,840
artists etc

32
00:01:01,840 --> 00:01:03,600
and hold several certifications

33
00:01:03,600 --> 00:01:07,200
including oscp gw ptc ssb

34
00:01:07,200 --> 00:01:10,000
talking a bit about joe so joe slovak

35
00:01:10,000 --> 00:01:12,320
works okay come on he's leading two

36
00:01:12,320 --> 00:01:14,240
verticals there and has over 10 years of

37
00:01:14,240 --> 00:01:16,640
experience in information security

38
00:01:16,640 --> 00:01:19,920
he has so uh under multiple roles in

39
00:01:19,920 --> 00:01:21,759
the u.s government to several positions

40
00:01:21,759 --> 00:01:23,520
in the commercial sector

41
00:01:23,520 --> 00:01:24,840
joe has worked

42
00:01:24,840 --> 00:01:28,000
uh extensively with offensive security

43
00:01:28,000 --> 00:01:30,000
to incident response covering the whole

44
00:01:30,000 --> 00:01:32,720
spectrum and right now is leading the

45
00:01:32,720 --> 00:01:35,439
traditional team

46
00:01:35,840 --> 00:01:38,560
uh myself i work with fire2 and i'm

47
00:01:38,560 --> 00:01:40,079
working as a security computer for more

48
00:01:40,079 --> 00:01:41,759
than four years

49
00:01:41,759 --> 00:01:45,360
so alvaro himself is kind of the

50
00:01:45,360 --> 00:01:48,399
authority on jndi injections given he

51
00:01:48,399 --> 00:01:49,280
has

52
00:01:49,280 --> 00:01:50,079
a

53
00:01:50,079 --> 00:01:52,079
presented talk in black hat on the same

54
00:01:52,079 --> 00:01:54,799
so i'd like to open this webcast by

55
00:01:54,799 --> 00:01:57,360
asking alvaro what what drove you

56
00:01:57,360 --> 00:01:59,119
towards that research reason being that

57
00:01:59,119 --> 00:02:01,040
the research you conducted very closely

58
00:02:01,040 --> 00:02:03,360
resembles what happened now and the

59
00:02:03,360 --> 00:02:05,920
research itself was published in 2016.

60
00:02:05,920 --> 00:02:07,439
so we have had a good

61
00:02:07,439 --> 00:02:10,080
uh buffer of four five six years to act

62
00:02:10,080 --> 00:02:12,080
on it and still we did not

63
00:02:12,080 --> 00:02:14,480
so i'll go over to you

64
00:02:14,480 --> 00:02:16,000
yeah so so thank you and thank you for

65
00:02:16,000 --> 00:02:17,200
having me here

66
00:02:17,200 --> 00:02:18,640
um so

67
00:02:18,640 --> 00:02:19,560
back to

68
00:02:19,560 --> 00:02:21,599
2016 um

69
00:02:21,599 --> 00:02:24,560
well at that year we were

70
00:02:24,560 --> 00:02:26,879
researching and looking for interesting

71
00:02:26,879 --> 00:02:28,640
new vectors to get

72
00:02:28,640 --> 00:02:30,640
arbitrary code execution in in java

73
00:02:30,640 --> 00:02:33,200
environments and i remember reading a

74
00:02:33,200 --> 00:02:35,360
blog post by trend micro

75
00:02:35,360 --> 00:02:37,680
and this broke blog post

76
00:02:37,680 --> 00:02:40,080
was talking about some malware samples

77
00:02:40,080 --> 00:02:41,519
that were

78
00:02:41,519 --> 00:02:44,080
found and they were targeting the nato

79
00:02:44,080 --> 00:02:45,760
and the white house actually

80
00:02:45,760 --> 00:02:48,080
and they were exploiting the the java

81
00:02:48,080 --> 00:02:49,519
applets i don't know if you remember the

82
00:02:49,519 --> 00:02:51,360
java applets that used to run on the

83
00:02:51,360 --> 00:02:54,000
browser but at that time they had a

84
00:02:54,000 --> 00:02:56,160
history of vulnerabilities and what they

85
00:02:56,160 --> 00:02:59,360
do what they did to protect against some

86
00:02:59,360 --> 00:03:02,239
of them was to enable the click click to

87
00:03:02,239 --> 00:03:03,680
play or click for players something like

88
00:03:03,680 --> 00:03:05,519
that so you have to actually click on

89
00:03:05,519 --> 00:03:07,920
the applet to enable that and this

90
00:03:07,920 --> 00:03:10,720
malware i found a way of bypassing this

91
00:03:10,720 --> 00:03:13,599
protection this click to play protection

92
00:03:13,599 --> 00:03:16,640
by uh running some code before

93
00:03:16,640 --> 00:03:18,720
this protection was actually

94
00:03:18,720 --> 00:03:21,120
enabled right so what they found is a

95
00:03:21,120 --> 00:03:24,080
way of um instantiating an arbitrary

96
00:03:24,080 --> 00:03:26,879
java class and what they did in in the

97
00:03:26,879 --> 00:03:29,760
in the exploit in the actual malware is

98
00:03:29,760 --> 00:03:32,560
um instantiating the javax naming

99
00:03:32,560 --> 00:03:34,799
initial context which is the main class

100
00:03:34,799 --> 00:03:37,120
for the jndi package in

101
00:03:37,120 --> 00:03:40,239
in the java in the java package

102
00:03:40,239 --> 00:03:42,319
so basically what they were doing was

103
00:03:42,319 --> 00:03:44,239
they were initializing this context and

104
00:03:44,239 --> 00:03:46,480
they were bringing some jndi properties

105
00:03:46,480 --> 00:03:50,080
from their own server and then they were

106
00:03:50,080 --> 00:03:52,799
using rmi to bring an object and then

107
00:03:52,799 --> 00:03:54,720
instantiate the payload and run the

108
00:03:54,720 --> 00:03:58,080
payload so that was very interesting and

109
00:03:58,080 --> 00:04:00,400
it was an rmi vector that was being used

110
00:04:00,400 --> 00:04:02,640
explicitly it's not like they were they

111
00:04:02,640 --> 00:04:06,000
found some vulnerable jndi lookup in the

112
00:04:06,000 --> 00:04:09,280
applied code it was they were um using

113
00:04:09,280 --> 00:04:12,640
jndi as part of the exploit right so

114
00:04:12,640 --> 00:04:14,159
as part of the payload if you want to

115
00:04:14,159 --> 00:04:17,120
put it this way so both alexander my

116
00:04:17,120 --> 00:04:19,279
alexander miros which was my colleague

117
00:04:19,279 --> 00:04:22,560
at that point in in fortify

118
00:04:22,560 --> 00:04:25,360
we started looking at jndi more more

119
00:04:25,360 --> 00:04:27,440
depth we wanted to know how that was

120
00:04:27,440 --> 00:04:29,360
possible and if there were other vectors

121
00:04:29,360 --> 00:04:30,560
and if

122
00:04:30,560 --> 00:04:32,960
current or regular applications could

123
00:04:32,960 --> 00:04:35,280
become vulnerable because

124
00:04:35,280 --> 00:04:37,520
somehow untrusted data was flowing to

125
00:04:37,520 --> 00:04:40,800
these apis so we did that we found about

126
00:04:40,800 --> 00:04:43,120
not just the rmi vectors but also the

127
00:04:43,120 --> 00:04:46,240
ldap ones the corba ones the iiop ones

128
00:04:46,240 --> 00:04:49,199
um the java the elta poisoning vectors

129
00:04:49,199 --> 00:04:52,080
etc that we presented in 2016 at

130
00:04:52,080 --> 00:04:55,840
blackhat and and

131
00:04:55,840 --> 00:04:58,639
well i guess that the talk was not well

132
00:04:58,639 --> 00:05:00,960
it was very well as uh received by the

133
00:05:00,960 --> 00:05:02,479
security researcher community and

134
00:05:02,479 --> 00:05:06,479
actually the jndi vector was used um

135
00:05:06,479 --> 00:05:09,120
largely in in different digitalization

136
00:05:09,120 --> 00:05:11,120
change so it was basically this research

137
00:05:11,120 --> 00:05:13,520
was basically used and leveraged for

138
00:05:13,520 --> 00:05:16,479
digitalization attacks but if you think

139
00:05:16,479 --> 00:05:18,639
about applications that were vulnerable

140
00:05:18,639 --> 00:05:20,639
to jndi injections we presented a couple

141
00:05:20,639 --> 00:05:24,160
of them at black hat talk like i think

142
00:05:24,160 --> 00:05:26,160
it where they were from from oracle like

143
00:05:26,160 --> 00:05:28,639
top link and and another one uh what i

144
00:05:28,639 --> 00:05:30,880
mean for example in the spring framework

145
00:05:30,880 --> 00:05:33,840
but uh then from 2016 to

146
00:05:33,840 --> 00:05:36,960
to now uh there were like very few maybe

147
00:05:36,960 --> 00:05:39,440
10 20 applications that were vulnerable

148
00:05:39,440 --> 00:05:41,680
to jndi injections so it was not like a

149
00:05:41,680 --> 00:05:42,800
very

150
00:05:42,800 --> 00:05:46,160
prevalent or popular kind of injection

151
00:05:46,160 --> 00:05:48,240
and i guess that that explains why it

152
00:05:48,240 --> 00:05:49,680
was not

153
00:05:49,680 --> 00:05:53,440
um or that or how or why did it flow

154
00:05:53,440 --> 00:05:55,199
under the rather of many developers

155
00:05:55,199 --> 00:05:57,120
right so it was not like sql injection

156
00:05:57,120 --> 00:05:58,800
or or process scripting that every

157
00:05:58,800 --> 00:06:01,759
developer knows about it was um less

158
00:06:01,759 --> 00:06:04,319
known and probably that's the reason why

159
00:06:04,319 --> 00:06:07,199
jndi uh sorry i'm lov4j maintainers

160
00:06:07,199 --> 00:06:10,560
didn't know about about this one

161
00:06:10,560 --> 00:06:11,919
yeah so

162
00:06:11,919 --> 00:06:14,000
also i think that it's important that

163
00:06:14,000 --> 00:06:17,120
oracle fixes this rmi vector in like

164
00:06:17,120 --> 00:06:19,280
probably 2016 that was the year where

165
00:06:19,280 --> 00:06:22,479
they um disabled being able to load

166
00:06:22,479 --> 00:06:25,280
these remote classes from from a remote

167
00:06:25,280 --> 00:06:27,680
code base and then initializing them in

168
00:06:27,680 --> 00:06:28,960
in your code

169
00:06:28,960 --> 00:06:31,680
but then they open they left ldap vector

170
00:06:31,680 --> 00:06:33,199
open for a couple of years until they

171
00:06:33,199 --> 00:06:34,400
fix it

172
00:06:34,400 --> 00:06:37,680
so that's would be like 2018 but then

173
00:06:37,680 --> 00:06:39,360
they never fixed the

174
00:06:39,360 --> 00:06:42,240
the visualization vector in the ldap

175
00:06:42,240 --> 00:06:45,360
protocol so we reported that but it was

176
00:06:45,360 --> 00:06:48,160
never fixed so it was always possible to

177
00:06:48,160 --> 00:06:51,039
get a remarkable execution if you found

178
00:06:51,039 --> 00:06:53,360
the required gadgets um in the class

179
00:06:53,360 --> 00:06:55,120
path so through these disrealization

180
00:06:55,120 --> 00:06:57,199
attacks and also i think that to

181
00:06:57,199 --> 00:06:59,360
complete the timeline i think we also

182
00:06:59,360 --> 00:07:02,479
have to to mention mikhail

183
00:07:02,479 --> 00:07:05,440
research exploit from vera code who who

184
00:07:05,440 --> 00:07:06,400
found

185
00:07:06,400 --> 00:07:09,759
another or different vector to um get

186
00:07:09,759 --> 00:07:12,960
remote code execution under some limited

187
00:07:12,960 --> 00:07:15,360
uh scenarios like for example having

188
00:07:15,360 --> 00:07:17,199
some classes in in the class path or for

189
00:07:17,199 --> 00:07:18,720
example uh having

190
00:07:18,720 --> 00:07:21,199
the application running on top of tomcat

191
00:07:21,199 --> 00:07:24,400
etc so i think that yes are all the

192
00:07:24,400 --> 00:07:26,479
relevant um

193
00:07:26,479 --> 00:07:28,639
of the relevant

194
00:07:28,639 --> 00:07:33,039
steps before we go to december of 2016

195
00:07:33,039 --> 00:07:39,199
2021 where we had this log4j explosion

196
00:07:39,680 --> 00:07:42,639
right and uh so let's touch a bit upon

197
00:07:42,639 --> 00:07:44,479
what happened

198
00:07:44,479 --> 00:07:47,199
starting november 24th that is when uh

199
00:07:47,199 --> 00:07:48,720
the security researcher notified about

200
00:07:48,720 --> 00:07:51,440
this vulnerability

201
00:07:51,599 --> 00:07:53,520
according to you how how how did the

202
00:07:53,520 --> 00:07:55,680
events unfold

203
00:07:55,680 --> 00:07:56,840
as your

204
00:07:56,840 --> 00:07:58,479
experience

205
00:07:58,479 --> 00:07:59,759
so

206
00:07:59,759 --> 00:08:03,199
so now we're talking about 2014 right so

207
00:08:03,199 --> 00:08:06,560
uh jndi attack vectors were not known at

208
00:08:06,560 --> 00:08:10,000
all so i can't blame any developers by

209
00:08:10,000 --> 00:08:13,680
enabling something that could connect or

210
00:08:13,680 --> 00:08:16,639
or make a jndi connection

211
00:08:16,639 --> 00:08:18,240
to a

212
00:08:18,240 --> 00:08:22,160
user provide um server well if you think

213
00:08:22,160 --> 00:08:23,360
about it

214
00:08:23,360 --> 00:08:24,720
that was

215
00:08:24,720 --> 00:08:27,440
literally they know about the risk that

216
00:08:27,440 --> 00:08:29,599
that connection pose but if you think

217
00:08:29,599 --> 00:08:30,800
about

218
00:08:30,800 --> 00:08:31,680
um

219
00:08:31,680 --> 00:08:34,799
well even if they don't know about rc

220
00:08:34,799 --> 00:08:36,000
they

221
00:08:36,000 --> 00:08:36,958
were

222
00:08:36,958 --> 00:08:39,519
aware that because actually the code is

223
00:08:39,519 --> 00:08:42,000
checking that if whatever follows the

224
00:08:42,000 --> 00:08:45,200
jndi colon prefix contains another

225
00:08:45,200 --> 00:08:47,040
column then they are going to treat it

226
00:08:47,040 --> 00:08:48,800
like an absolute url and then they are

227
00:08:48,800 --> 00:08:50,720
going to make an output output

228
00:08:50,720 --> 00:08:53,440
connection so they were very aware that

229
00:08:53,440 --> 00:08:55,440
outbound connections could be

230
00:08:55,440 --> 00:08:57,760
done and that they could be controlled

231
00:08:57,760 --> 00:08:58,560
by

232
00:08:58,560 --> 00:09:01,200
by anyone that were able to inject those

233
00:09:01,200 --> 00:09:03,760
strings those payloads into a log

234
00:09:03,760 --> 00:09:04,720
message

235
00:09:04,720 --> 00:09:08,800
so um i think that's all boils down to

236
00:09:08,800 --> 00:09:09,760
to

237
00:09:09,760 --> 00:09:10,800
having

238
00:09:10,800 --> 00:09:14,240
a security mindset as a developer trying

239
00:09:14,240 --> 00:09:15,680
to think

240
00:09:15,680 --> 00:09:17,760
how the futures that you're implementing

241
00:09:17,760 --> 00:09:19,920
can be abused and in this case even if

242
00:09:19,920 --> 00:09:21,279
you don't know anything about the

243
00:09:21,279 --> 00:09:23,519
potential of getting remote co-execution

244
00:09:23,519 --> 00:09:25,040
you shouldn't

245
00:09:25,040 --> 00:09:27,040
let anyone connect to an arbitrary

246
00:09:27,040 --> 00:09:28,320
server in the

247
00:09:28,320 --> 00:09:31,920
from your server from your um

248
00:09:31,920 --> 00:09:33,760
if you don't really need it right so you

249
00:09:33,760 --> 00:09:36,240
should go and implement some a low list

250
00:09:36,240 --> 00:09:38,720
you should implement some some controls

251
00:09:38,720 --> 00:09:40,000
that

252
00:09:40,000 --> 00:09:41,519
don't allow anyone to connect to any

253
00:09:41,519 --> 00:09:44,800
arbitrary server

254
00:09:44,800 --> 00:09:47,440
and joe coming to you so what was your

255
00:09:47,440 --> 00:09:51,120
observation what happened in uh 2021

256
00:09:51,120 --> 00:09:53,200
december november end the chaos the

257
00:09:53,200 --> 00:09:54,959
panic the confusion

258
00:09:54,959 --> 00:09:56,320
and uh

259
00:09:56,320 --> 00:09:58,000
basically this time every mainstream

260
00:09:58,000 --> 00:10:00,880
media company also covering log4j

261
00:10:00,880 --> 00:10:02,240
so

262
00:10:02,240 --> 00:10:05,360
what was your observation around this

263
00:10:05,360 --> 00:10:07,120
right and

264
00:10:07,120 --> 00:10:09,279
it took a little bit for people to

265
00:10:09,279 --> 00:10:10,240
start

266
00:10:10,240 --> 00:10:13,760
understanding the potential scope of

267
00:10:13,760 --> 00:10:14,959
this event

268
00:10:14,959 --> 00:10:17,680
especially from a more general media

269
00:10:17,680 --> 00:10:18,880
perspective

270
00:10:18,880 --> 00:10:20,800
so if you look from you know late

271
00:10:20,800 --> 00:10:23,519
november when the initial disclosure

272
00:10:23,519 --> 00:10:26,160
took place to the log for j to apache

273
00:10:26,160 --> 00:10:29,440
and then on to the log4j maintainers who

274
00:10:29,440 --> 00:10:31,680
are doing this uh essentially out of the

275
00:10:31,680 --> 00:10:33,440
kindness of their heart and we should be

276
00:10:33,440 --> 00:10:35,600
very thankful to them for maintaining

277
00:10:35,600 --> 00:10:37,360
this code base because it's open source

278
00:10:37,360 --> 00:10:38,399
software

279
00:10:38,399 --> 00:10:40,240
um but then things got interesting

280
00:10:40,240 --> 00:10:42,959
because the public disclosure took place

281
00:10:42,959 --> 00:10:45,120
on the 10th of december and as people

282
00:10:45,120 --> 00:10:47,600
began looking at this not only did it

283
00:10:47,600 --> 00:10:50,640
become quite clear that this was

284
00:10:50,640 --> 00:10:52,240
maybe not trivial but at least

285
00:10:52,240 --> 00:10:55,920
relatively easy to exploit but also as

286
00:10:55,920 --> 00:10:57,839
security vendors began looking in

287
00:10:57,839 --> 00:11:00,720
telemetry as various parties began

288
00:11:00,720 --> 00:11:03,200
investigating it started to look as

289
00:11:03,200 --> 00:11:05,040
though there were entities that were

290
00:11:05,040 --> 00:11:08,320
actively using this uh attack path

291
00:11:08,320 --> 00:11:10,079
starting potentially as early as the

292
00:11:10,079 --> 00:11:11,920
first of december so that's a mystery

293
00:11:11,920 --> 00:11:14,399
that still hasn't been solved as to

294
00:11:14,399 --> 00:11:16,880
how this uh information may have gotten

295
00:11:16,880 --> 00:11:19,760
out there were uh tweets from uh

296
00:11:19,760 --> 00:11:21,839
representatives from cloudflare

297
00:11:21,839 --> 00:11:23,440
and a couple of other organizations that

298
00:11:23,440 --> 00:11:24,959
said that they spotted exploitation in

299
00:11:24,959 --> 00:11:27,040
the wild prior to the public disclosure

300
00:11:27,040 --> 00:11:28,800
so that was interesting but then from

301
00:11:28,800 --> 00:11:32,800
the 13th on uh things sort of mushroomed

302
00:11:32,800 --> 00:11:35,839
because looking at the vulnerability

303
00:11:35,839 --> 00:11:38,160
itself looking at the patch and how

304
00:11:38,160 --> 00:11:40,320
precisely to trigger this condition you

305
00:11:40,320 --> 00:11:42,480
know we're talking about passing a

306
00:11:42,480 --> 00:11:45,440
string into a web request or into some

307
00:11:45,440 --> 00:11:46,959
sort of traffic that would get picked up

308
00:11:46,959 --> 00:11:51,440
by a log4j enabled device and there were

309
00:11:51,440 --> 00:11:53,279
multiple ways of doing this in fact if

310
00:11:53,279 --> 00:11:55,279
you were checking social media from the

311
00:11:55,279 --> 00:11:57,040
13th of december for the next couple of

312
00:11:57,040 --> 00:11:59,200
weeks onward you could probably find

313
00:11:59,200 --> 00:12:00,880
some offensive security researcher

314
00:12:00,880 --> 00:12:03,519
posting a new variation or a new way of

315
00:12:03,519 --> 00:12:06,720
fuzzing the exploit string

316
00:12:06,720 --> 00:12:08,560
hourly if not daily

317
00:12:08,560 --> 00:12:10,240
in that time period which made this a

318
00:12:10,240 --> 00:12:12,399
really complex item for the security

319
00:12:12,399 --> 00:12:13,440
community

320
00:12:13,440 --> 00:12:15,360
to begin tracking down to differentiate

321
00:12:15,360 --> 00:12:16,320
between

322
00:12:16,320 --> 00:12:18,480
uh researchers and scanners that were

323
00:12:18,480 --> 00:12:20,160
just trying to determine the scope and

324
00:12:20,160 --> 00:12:22,399
applicability of this vulnerability

325
00:12:22,399 --> 00:12:25,839
compared to actual uh malicious

326
00:12:25,839 --> 00:12:27,440
actors that were out there which is why

327
00:12:27,440 --> 00:12:29,200
things got a little fuzzy that while

328
00:12:29,200 --> 00:12:31,120
there were those uh

329
00:12:31,120 --> 00:12:33,120
isolated examples of predisclosure

330
00:12:33,120 --> 00:12:35,200
exploitation things really started to

331
00:12:35,200 --> 00:12:38,800
pick up from the 14th of december onward

332
00:12:38,800 --> 00:12:41,760
where vendors started to identify uh

333
00:12:41,760 --> 00:12:43,680
some opportunistic attempts to install

334
00:12:43,680 --> 00:12:46,720
things like crypto miners some potential

335
00:12:46,720 --> 00:12:50,160
advanced persistent threat apt usage of

336
00:12:50,160 --> 00:12:54,240
this exploit in uh tandem with other uh

337
00:12:54,240 --> 00:12:56,399
behaviors associated with those groups

338
00:12:56,399 --> 00:12:58,560
and then sort of include expanding from

339
00:12:58,560 --> 00:13:00,800
there it has been kind of weird though

340
00:13:00,800 --> 00:13:02,480
and there's been some discussion around

341
00:13:02,480 --> 00:13:05,920
this both in uh things like the u.s

342
00:13:05,920 --> 00:13:07,279
cyber security and infrastructure

343
00:13:07,279 --> 00:13:10,639
security agency held a press conference

344
00:13:10,639 --> 00:13:12,639
yesterday or two days ago i can't

345
00:13:12,639 --> 00:13:14,480
remember exactly when it was this week

346
00:13:14,480 --> 00:13:16,880
uh addressing log4j and at least from

347
00:13:16,880 --> 00:13:19,680
the context of the us federal government

348
00:13:19,680 --> 00:13:21,839
that you know hey we haven't seen this

349
00:13:21,839 --> 00:13:24,079
in any intrusions in our networks like

350
00:13:24,079 --> 00:13:25,920
one you know they say they haven't seen

351
00:13:25,920 --> 00:13:27,440
it doesn't mean it hasn't happened so

352
00:13:27,440 --> 00:13:28,560
there's always that

353
00:13:28,560 --> 00:13:29,839
caveat

354
00:13:29,839 --> 00:13:31,360
but also gets to

355
00:13:31,360 --> 00:13:33,680
you know there was lots of concern that

356
00:13:33,680 --> 00:13:36,079
this would be a really big deal you had

357
00:13:36,079 --> 00:13:37,279
some people saying that this could be

358
00:13:37,279 --> 00:13:39,680
warmable i would disagree with that

359
00:13:39,680 --> 00:13:41,600
although i'm not an exploit writer so

360
00:13:41,600 --> 00:13:43,600
you know certainly alvaro if you have

361
00:13:43,600 --> 00:13:44,720
some comments on that i'd be really

362
00:13:44,720 --> 00:13:46,160
curious to hear them

363
00:13:46,160 --> 00:13:47,519
but we haven't seen this sort of

364
00:13:47,519 --> 00:13:50,399
widespread ms-1710 the wannacry

365
00:13:50,399 --> 00:13:52,720
vulnerability-like impact to this just

366
00:13:52,720 --> 00:13:54,480
yet which has been kind of interesting

367
00:13:54,480 --> 00:13:56,480
so although we still like from my own

368
00:13:56,480 --> 00:13:58,240
organization's perspective we see lots

369
00:13:58,240 --> 00:14:00,560
of uh network traffic related to

370
00:14:00,560 --> 00:14:02,720
entities trying to exploit this

371
00:14:02,720 --> 00:14:04,800
most of the the activity so far has been

372
00:14:04,800 --> 00:14:06,560
things like crypto miner or webshell

373
00:14:06,560 --> 00:14:08,240
installation or very sort of direct

374
00:14:08,240 --> 00:14:11,040
attack pathways so it'll be curious as

375
00:14:11,040 --> 00:14:13,600
attackers and actual uh

376
00:14:13,600 --> 00:14:15,920
adversaries understand more and more

377
00:14:15,920 --> 00:14:17,279
about how this vulnerability is

378
00:14:17,279 --> 00:14:18,959
leveraged and where the vulnerability

379
00:14:18,959 --> 00:14:21,279
resides in networks if we start seeing

380
00:14:21,279 --> 00:14:22,959
some more

381
00:14:22,959 --> 00:14:25,120
complex and refined ways of trying to

382
00:14:25,120 --> 00:14:28,760
target it as well

383
00:14:30,639 --> 00:14:32,480
so

384
00:14:32,480 --> 00:14:35,360
do you see the trend uh at least dying

385
00:14:35,360 --> 00:14:38,160
or coming to a plateau or uh

386
00:14:38,160 --> 00:14:40,800
is that this uptrend in traffic is still

387
00:14:40,800 --> 00:14:43,519
uh increasing and uh new variations are

388
00:14:43,519 --> 00:14:45,279
coming up

389
00:14:45,279 --> 00:14:48,079
so for what i could see personally and

390
00:14:48,079 --> 00:14:49,600
uh from talking with other researchers

391
00:14:49,600 --> 00:14:50,800
at other companies with different

392
00:14:50,800 --> 00:14:52,720
visibility it seems like things have

393
00:14:52,720 --> 00:14:53,920
been

394
00:14:53,920 --> 00:14:56,000
ebbing and flowing uh or coming and

395
00:14:56,000 --> 00:14:57,519
going over time that certainly there was

396
00:14:57,519 --> 00:15:00,160
a huge spike initially with you know all

397
00:15:00,160 --> 00:15:02,240
sorts of platforms trying to scan this

398
00:15:02,240 --> 00:15:03,600
and then it seemed over the holiday

399
00:15:03,600 --> 00:15:05,680
period that things

400
00:15:05,680 --> 00:15:07,360
decreased a little bit and then picked

401
00:15:07,360 --> 00:15:09,440
up again afterwards and then

402
00:15:09,440 --> 00:15:12,000
um it seems like there's significant

403
00:15:12,000 --> 00:15:13,920
variation on a day-to-day basis whether

404
00:15:13,920 --> 00:15:16,240
it's someone spins up a new virtual

405
00:15:16,240 --> 00:15:18,079
private server somewhere and decides oh

406
00:15:18,079 --> 00:15:19,680
i'm going to start installing mri

407
00:15:19,680 --> 00:15:22,240
variant wherever i can to build out my

408
00:15:22,240 --> 00:15:23,839
botnet or whatever and then that goes

409
00:15:23,839 --> 00:15:25,920
away after a couple of days and network

410
00:15:25,920 --> 00:15:28,000
traffic dies down again so it's it's

411
00:15:28,000 --> 00:15:29,519
been highly variable

412
00:15:29,519 --> 00:15:32,240
and hasn't mapped very neatly into

413
00:15:32,240 --> 00:15:34,160
something like a see an initial spike

414
00:15:34,160 --> 00:15:37,360
and then a long tail uh tapering off as

415
00:15:37,360 --> 00:15:40,320
uh entities move on to different sort of

416
00:15:40,320 --> 00:15:41,680
attack paths or different sorts of

417
00:15:41,680 --> 00:15:43,360
behaviors

418
00:15:43,360 --> 00:15:45,199
so do you have kind of any specific

419
00:15:45,199 --> 00:15:47,040
predictions as such using experience or

420
00:15:47,040 --> 00:15:48,880
what's going to be the implication the

421
00:15:48,880 --> 00:15:51,120
long-term implication of this at least

422
00:15:51,120 --> 00:15:53,519
in the coming year

423
00:15:53,519 --> 00:15:55,279
well one of the things that i've blogged

424
00:15:55,279 --> 00:15:57,440
about this through gigamon as well as

425
00:15:57,440 --> 00:15:59,519
personally is

426
00:15:59,519 --> 00:16:02,480
there was a lot of pressure on a number

427
00:16:02,480 --> 00:16:04,880
of organizations to patch this

428
00:16:04,880 --> 00:16:06,079
immediately

429
00:16:06,079 --> 00:16:09,040
and that's good uh you know especially

430
00:16:09,040 --> 00:16:12,079
the 2.15 and the 2.16 patches which are

431
00:16:12,079 --> 00:16:14,560
very important in addressing uh the

432
00:16:14,560 --> 00:16:17,360
remote code execution vulnerability in

433
00:16:17,360 --> 00:16:19,040
a sort of default setting

434
00:16:19,040 --> 00:16:20,160
but

435
00:16:20,160 --> 00:16:22,959
the real concern i have is that there is

436
00:16:22,959 --> 00:16:25,120
a number of software dependencies a

437
00:16:25,120 --> 00:16:27,519
number of ways just as we saw going back

438
00:16:27,519 --> 00:16:29,360
to something like the solar winds orion

439
00:16:29,360 --> 00:16:30,800
event from

440
00:16:30,800 --> 00:16:33,519
two years ago now uh where yes you have

441
00:16:33,519 --> 00:16:35,680
this vulnerable software package in an

442
00:16:35,680 --> 00:16:37,199
application but you don't realize that

443
00:16:37,199 --> 00:16:38,800
that application is actually bundled

444
00:16:38,800 --> 00:16:40,880
with and used in conjunction with some

445
00:16:40,880 --> 00:16:42,720
other third-party software that you're

446
00:16:42,720 --> 00:16:44,880
using so an organization may have done a

447
00:16:44,880 --> 00:16:47,120
very good job of patching all of its own

448
00:16:47,120 --> 00:16:50,480
known instances of using log3 but

449
00:16:50,480 --> 00:16:52,560
knowing that some other piece of

450
00:16:52,560 --> 00:16:54,639
software including things like security

451
00:16:54,639 --> 00:16:57,440
tools monitoring tools uh data

452
00:16:57,440 --> 00:16:59,440
aggregation tools or whatever that rely

453
00:16:59,440 --> 00:17:00,800
on

454
00:17:00,800 --> 00:17:01,839
processing

455
00:17:01,839 --> 00:17:02,880
making

456
00:17:02,880 --> 00:17:04,400
things logging more accessible and

457
00:17:04,400 --> 00:17:06,880
whatnot that would use this library

458
00:17:06,880 --> 00:17:08,400
may integrate this and people might not

459
00:17:08,400 --> 00:17:11,439
be completely aware of that just yet so

460
00:17:11,439 --> 00:17:13,599
that will get us into a patching cycle

461
00:17:13,599 --> 00:17:15,119
where you're relying not just on your

462
00:17:15,119 --> 00:17:17,119
own internal team's efforts to patch

463
00:17:17,119 --> 00:17:19,839
this specific vulnerability but whatever

464
00:17:19,839 --> 00:17:21,919
your third-party software suppliers that

465
00:17:21,919 --> 00:17:24,000
are also integrating this into their

466
00:17:24,000 --> 00:17:26,319
products to do the same and we've seen

467
00:17:26,319 --> 00:17:28,240
this with the industrial control system

468
00:17:28,240 --> 00:17:31,440
space already where a number of vendors

469
00:17:31,440 --> 00:17:33,520
major vendors have been

470
00:17:33,520 --> 00:17:36,240
uh working very diligently but not

471
00:17:36,240 --> 00:17:38,480
completing the research into this just

472
00:17:38,480 --> 00:17:40,000
yet of

473
00:17:40,000 --> 00:17:42,160
you know both trying to identify where

474
00:17:42,160 --> 00:17:43,679
in their code bases they may have

475
00:17:43,679 --> 00:17:44,720
referenced

476
00:17:44,720 --> 00:17:46,799
and used log4j potentially going back

477
00:17:46,799 --> 00:17:49,440
into very old versions of the log4j

478
00:17:49,440 --> 00:17:52,160
library uh in their applications and

479
00:17:52,160 --> 00:17:54,160
then going through the work of trying to

480
00:17:54,160 --> 00:17:56,080
determine like okay can we patch this

481
00:17:56,080 --> 00:17:58,000
what does this look like in terms of

482
00:17:58,000 --> 00:18:00,480
functionality do we break anything and i

483
00:18:00,480 --> 00:18:02,559
would expect we'll see vendor patches

484
00:18:02,559 --> 00:18:05,200
for this over the next several months

485
00:18:05,200 --> 00:18:06,880
as opposed to just that initial sprint

486
00:18:06,880 --> 00:18:08,880
that we saw before the christmas

487
00:18:08,880 --> 00:18:10,720
holidays of organizations trying to

488
00:18:10,720 --> 00:18:14,000
patch this on-prem

489
00:18:14,000 --> 00:18:15,200
right

490
00:18:15,200 --> 00:18:16,000
uh

491
00:18:16,000 --> 00:18:17,440
at this point we have a question from

492
00:18:17,440 --> 00:18:19,600
youtube i believe um the question is can

493
00:18:19,600 --> 00:18:21,760
this be stocked with ai it's kind of a

494
00:18:21,760 --> 00:18:23,760
question but uh maybe we can rephrase it

495
00:18:23,760 --> 00:18:24,480
as

496
00:18:24,480 --> 00:18:26,720
uh ai in terms of uh

497
00:18:26,720 --> 00:18:29,039
let's say security appliances uh touch

498
00:18:29,039 --> 00:18:30,080
so

499
00:18:30,080 --> 00:18:30,799
uh

500
00:18:30,799 --> 00:18:32,720
basically let's discuss if there

501
00:18:32,720 --> 00:18:33,840
what are things that could have been

502
00:18:33,840 --> 00:18:34,640
done

503
00:18:34,640 --> 00:18:35,440
to

504
00:18:35,440 --> 00:18:37,200
detect and mitigate these without

505
00:18:37,200 --> 00:18:38,880
knowing the exact thing

506
00:18:38,880 --> 00:18:39,840
uh

507
00:18:39,840 --> 00:18:42,080
recently we already discussed that

508
00:18:42,080 --> 00:18:43,760
twitter and other social media were

509
00:18:43,760 --> 00:18:45,280
overflowing with offensive security

510
00:18:45,280 --> 00:18:48,000
researchers posting variations so that a

511
00:18:48,000 --> 00:18:50,320
simple uh rule to

512
00:18:50,320 --> 00:18:52,559
block such traffic audit access traffic

513
00:18:52,559 --> 00:18:53,919
will not work

514
00:18:53,919 --> 00:18:57,200
so what kind of scope do we have in

515
00:18:57,200 --> 00:18:59,440
terms of ai coming in

516
00:18:59,440 --> 00:19:02,000
to deal with uh such variations of the

517
00:19:02,000 --> 00:19:04,320
attack

518
00:19:07,840 --> 00:19:09,200
interesting

519
00:19:09,200 --> 00:19:11,440
albarro do you have thoughts on that or

520
00:19:11,440 --> 00:19:15,120
well i'm not really any expert on aai

521
00:19:15,120 --> 00:19:16,960
and um

522
00:19:16,960 --> 00:19:18,480
i guess that if we're talking about

523
00:19:18,480 --> 00:19:21,280
detecting the patterns of

524
00:19:21,280 --> 00:19:23,520
of the exploit of the payload

525
00:19:23,520 --> 00:19:25,360
we will have obviously the

526
00:19:25,360 --> 00:19:28,480
simple one that is the jndi column

527
00:19:28,480 --> 00:19:30,160
whatever um

528
00:19:30,160 --> 00:19:32,799
strings which are very easily detected

529
00:19:32,799 --> 00:19:34,799
and then when we start passing with the

530
00:19:34,799 --> 00:19:38,400
different ways that nested resolutions

531
00:19:38,400 --> 00:19:42,400
allows you to create complex um chains

532
00:19:42,400 --> 00:19:44,559
i guess that there is um

533
00:19:44,559 --> 00:19:48,160
there is room for ai to actually cluster

534
00:19:48,160 --> 00:19:49,520
these uh

535
00:19:49,520 --> 00:19:52,559
an incoming request into a potential

536
00:19:52,559 --> 00:19:54,240
payload for

537
00:19:54,240 --> 00:19:57,120
for um look for sale or not because well

538
00:19:57,120 --> 00:19:58,799
it has very

539
00:19:58,799 --> 00:20:01,280
a very um specific characteristics right

540
00:20:01,280 --> 00:20:03,600
so probably because of this fasting the

541
00:20:03,600 --> 00:20:05,200
payloads are going to be huge there are

542
00:20:05,200 --> 00:20:07,200
going to be some characters that are

543
00:20:07,200 --> 00:20:09,360
always going to be there like the

544
00:20:09,360 --> 00:20:12,400
dollar and curly brackets etc so i guess

545
00:20:12,400 --> 00:20:15,919
that as i said i don't know about um

546
00:20:15,919 --> 00:20:18,000
ai i'm not an expert on that

547
00:20:18,000 --> 00:20:20,400
but i think that it's possible

548
00:20:20,400 --> 00:20:22,480
to use it to cluster incoming and

549
00:20:22,480 --> 00:20:25,440
request and try to detect if there is um

550
00:20:25,440 --> 00:20:27,520
an attack or not i don't know if vendors

551
00:20:27,520 --> 00:20:29,440
are doing that or not i'm not familiar

552
00:20:29,440 --> 00:20:31,919
with with the current techniques but

553
00:20:31,919 --> 00:20:34,799
yeah i think it's there is room for it

554
00:20:34,799 --> 00:20:35,679
yeah i think there's certainly

555
00:20:35,679 --> 00:20:38,320
possibilities as well uh i i would

556
00:20:38,320 --> 00:20:40,320
stretch this a little bit further

557
00:20:40,320 --> 00:20:42,000
that even from an artificial

558
00:20:42,000 --> 00:20:45,360
intelligence perspective trying to

559
00:20:45,360 --> 00:20:48,400
capture the initial exploit string

560
00:20:48,400 --> 00:20:49,760
i think as the

561
00:20:49,760 --> 00:20:51,520
question the person asking the question

562
00:20:51,520 --> 00:20:54,640
notify uh noted is a losing game because

563
00:20:54,640 --> 00:20:55,919
there are near infinite ways of

564
00:20:55,919 --> 00:20:58,640
obfuscating and coding encrypting

565
00:20:58,640 --> 00:21:01,360
or other ways of trying to pass the

566
00:21:01,360 --> 00:21:03,760
payload onwards but things get more

567
00:21:03,760 --> 00:21:05,840
interesting if we look at follow-on

568
00:21:05,840 --> 00:21:08,559
actions as part of the exploit pathway

569
00:21:08,559 --> 00:21:11,120
of sending the attack string to a

570
00:21:11,120 --> 00:21:12,960
vulnerable device and then following

571
00:21:12,960 --> 00:21:15,200
that up with a external ldap lookup or

572
00:21:15,200 --> 00:21:17,440
following it up with uh you know some

573
00:21:17,440 --> 00:21:20,400
other network traffic to a device and

574
00:21:20,400 --> 00:21:22,080
you know maybe artificial intelligence

575
00:21:22,080 --> 00:21:23,760
or some way of

576
00:21:23,760 --> 00:21:26,000
performing traffic and device type

577
00:21:26,000 --> 00:21:27,840
classification could be very valuable

578
00:21:27,840 --> 00:21:31,120
such as why do i have a

579
00:21:31,120 --> 00:21:32,559
server in my network something i've

580
00:21:32,559 --> 00:21:34,960
classified as being a server type device

581
00:21:34,960 --> 00:21:37,280
initiating an external ldap connection

582
00:21:37,280 --> 00:21:40,960
to a unknown host being able to identify

583
00:21:40,960 --> 00:21:41,919
those

584
00:21:41,919 --> 00:21:43,600
items whether through machine learning

585
00:21:43,600 --> 00:21:45,600
artificial intelligence or through some

586
00:21:45,600 --> 00:21:48,000
more behavioral classification is a

587
00:21:48,000 --> 00:21:50,159
really powerful way to start identifying

588
00:21:50,159 --> 00:21:51,919
traffic streams of interest that could

589
00:21:51,919 --> 00:21:54,320
relate to not just watford j

590
00:21:54,320 --> 00:21:57,520
related activity but also identify other

591
00:21:57,520 --> 00:21:59,919
attacks um as well and i think that's a

592
00:21:59,919 --> 00:22:02,400
very that's what my team has been doing

593
00:22:02,400 --> 00:22:03,919
for the last couple of weeks in trying

594
00:22:03,919 --> 00:22:05,679
to address this and other

595
00:22:05,679 --> 00:22:08,640
vulnerabilities is going for how do we

596
00:22:08,640 --> 00:22:09,919
address the

597
00:22:09,919 --> 00:22:11,360
attacker

598
00:22:11,360 --> 00:22:13,679
life cycle of trying to use any

599
00:22:13,679 --> 00:22:15,760
vulnerability as an initial access code

600
00:22:15,760 --> 00:22:17,679
execution mechanism and what are those

601
00:22:17,679 --> 00:22:20,240
sort of attacker dependencies that exist

602
00:22:20,240 --> 00:22:23,120
in trying to take advantage of them

603
00:22:23,120 --> 00:22:24,159
yeah i think that you mentioned

604
00:22:24,159 --> 00:22:26,240
something very important because we were

605
00:22:26,240 --> 00:22:27,600
talking about

606
00:22:27,600 --> 00:22:30,159
why developers were allowing outbound

607
00:22:30,159 --> 00:22:32,400
connections from their library

608
00:22:32,400 --> 00:22:33,440
but

609
00:22:33,440 --> 00:22:35,760
the real question is why big companies

610
00:22:35,760 --> 00:22:37,600
and large enterprises

611
00:22:37,600 --> 00:22:39,600
are allowing outbound connection to any

612
00:22:39,600 --> 00:22:41,520
arbitrary server in the internet i'm

613
00:22:41,520 --> 00:22:43,919
talking about apple's microsoft any

614
00:22:43,919 --> 00:22:44,880
company

615
00:22:44,880 --> 00:22:47,360
that have been affected it's because

616
00:22:47,360 --> 00:22:49,600
from their own networks they you can

617
00:22:49,600 --> 00:22:50,720
initiate

618
00:22:50,720 --> 00:22:52,840
connections to any

619
00:22:52,840 --> 00:22:55,919
arbitrary server and that's a little bit

620
00:22:55,919 --> 00:22:59,200
concerning so um so yeah developers

621
00:22:59,200 --> 00:23:01,840
should take uh their their part and try

622
00:23:01,840 --> 00:23:04,159
to prevent that kind of issues but there

623
00:23:04,159 --> 00:23:06,880
is also a lot of things to improve in

624
00:23:06,880 --> 00:23:09,760
network security from

625
00:23:09,760 --> 00:23:11,200
big companies and a smaller one of

626
00:23:11,200 --> 00:23:13,440
course

627
00:23:15,120 --> 00:23:17,039
right so uh

628
00:23:17,039 --> 00:23:18,640
given the situation we also have one

629
00:23:18,640 --> 00:23:20,159
more question that is how was this

630
00:23:20,159 --> 00:23:21,679
vulnerability discovered i'm not sure if

631
00:23:21,679 --> 00:23:22,960
we are

632
00:23:22,960 --> 00:23:24,559
in the position to answer this how much

633
00:23:24,559 --> 00:23:26,480
reward did the person get

634
00:23:26,480 --> 00:23:27,600
and

635
00:23:27,600 --> 00:23:29,840
the other aspect is

636
00:23:29,840 --> 00:23:30,870
we can answer this and

637
00:23:30,870 --> 00:23:32,000
[Music]

638
00:23:32,000 --> 00:23:34,320
probably as you mentioned that

639
00:23:34,320 --> 00:23:35,760
the library itself is maintained by

640
00:23:35,760 --> 00:23:36,960
volunteers

641
00:23:36,960 --> 00:23:39,360
so they fixed it out of their kindness

642
00:23:39,360 --> 00:23:41,120
so

643
00:23:41,120 --> 00:23:43,279
uh from what i believe

644
00:23:43,279 --> 00:23:44,480
the

645
00:23:44,480 --> 00:23:46,640
neither the person who reported it

646
00:23:46,640 --> 00:23:49,919
caught any uh monetary benefits

647
00:23:49,919 --> 00:23:52,400
not the team who fixed it got it

648
00:23:52,400 --> 00:23:53,120
but

649
00:23:53,120 --> 00:23:55,440
the entire security community around

650
00:23:55,440 --> 00:23:57,760
security products bug bounty they made a

651
00:23:57,760 --> 00:24:00,000
lot of money and a lot of financial

652
00:24:00,000 --> 00:24:02,400
applications involved right

653
00:24:02,400 --> 00:24:05,279
actually something that i wanted to to

654
00:24:05,279 --> 00:24:08,400
highlight here is that the reporter

655
00:24:08,400 --> 00:24:10,320
um which i

656
00:24:10,320 --> 00:24:12,000
well one of them because i think it was

657
00:24:12,000 --> 00:24:14,799
a team within the alibaba company

658
00:24:14,799 --> 00:24:16,240
um

659
00:24:16,240 --> 00:24:18,400
actually is one of the persons that have

660
00:24:18,400 --> 00:24:19,279
been

661
00:24:19,279 --> 00:24:21,520
finding jndi injections all of these

662
00:24:21,520 --> 00:24:24,799
years since 2016. uh they were talking

663
00:24:24,799 --> 00:24:27,520
about another one in the h2 database

664
00:24:27,520 --> 00:24:29,679
like for example they reported that

665
00:24:29,679 --> 00:24:30,799
last year

666
00:24:30,799 --> 00:24:32,400
but one thing that i wanted wanted to

667
00:24:32,400 --> 00:24:34,320
highlight is not just that he didn't get

668
00:24:34,320 --> 00:24:37,200
any money like a back panty from from

669
00:24:37,200 --> 00:24:40,480
love4j apache or the um

670
00:24:40,480 --> 00:24:41,919
over the back bounty program for

671
00:24:41,919 --> 00:24:44,320
internet but also

672
00:24:44,320 --> 00:24:47,440
um because they reported it immediately

673
00:24:47,440 --> 00:24:50,559
to apache security team and the log4j

674
00:24:50,559 --> 00:24:51,600
team

675
00:24:51,600 --> 00:24:54,000
they got some kind of ban from from the

676
00:24:54,000 --> 00:24:55,440
chinese government

677
00:24:55,440 --> 00:24:58,080
um which was very brave from them

678
00:24:58,080 --> 00:25:00,799
because otherwise if this kind of

679
00:25:00,799 --> 00:25:03,440
exploits and end ups in some nation

680
00:25:03,440 --> 00:25:06,320
agency or nation state

681
00:25:06,320 --> 00:25:08,240
agent or something like that

682
00:25:08,240 --> 00:25:10,159
that could have been very

683
00:25:10,159 --> 00:25:12,320
very bad for

684
00:25:12,320 --> 00:25:14,960
for the security of the internet so i'm

685
00:25:14,960 --> 00:25:16,799
very glad and happy that he decided they

686
00:25:16,799 --> 00:25:19,200
decided to report it and even though

687
00:25:19,200 --> 00:25:21,440
they took nothing out of that

688
00:25:21,440 --> 00:25:23,600
instead for some problems with their own

689
00:25:23,600 --> 00:25:25,760
local government so

690
00:25:25,760 --> 00:25:27,600
right along these lines i think

691
00:25:27,600 --> 00:25:30,159
the nhs detected and uh threat tractor

692
00:25:30,159 --> 00:25:32,720
using this to hack their vmware horizon

693
00:25:32,720 --> 00:25:33,919
servers

694
00:25:33,919 --> 00:25:37,039
and plant web shells so

695
00:25:37,039 --> 00:25:39,039
but it's right that what they did is

696
00:25:39,039 --> 00:25:41,679
good uh and that minimize the damage a

697
00:25:41,679 --> 00:25:42,480
lot

698
00:25:42,480 --> 00:25:44,240
uh but even then there were some

699
00:25:44,240 --> 00:25:47,520
instances uh i think joe mentioned that

700
00:25:47,520 --> 00:25:50,880
uh before december 10th

701
00:25:50,880 --> 00:25:52,640
there are still some instances of this

702
00:25:52,640 --> 00:25:54,880
vulnerability being used even uh before

703
00:25:54,880 --> 00:25:57,840
it was publicly uh released so

704
00:25:57,840 --> 00:25:58,640
yeah

705
00:25:58,640 --> 00:26:00,159
which is

706
00:26:00,159 --> 00:26:02,000
sorry didn't mean to cut you off no no

707
00:26:02,000 --> 00:26:05,520
yeah that was the end of my sentence

708
00:26:05,520 --> 00:26:07,200
and so that is an interesting bit uh

709
00:26:07,200 --> 00:26:08,799
that still we don't have a lot of

710
00:26:08,799 --> 00:26:10,799
information about that activity just yet

711
00:26:10,799 --> 00:26:12,640
other than vendors

712
00:26:12,640 --> 00:26:14,799
uh saying that oh yeah we've identified

713
00:26:14,799 --> 00:26:16,320
instances of this

714
00:26:16,320 --> 00:26:17,919
so having some more information about

715
00:26:17,919 --> 00:26:20,000
that would be very good to try to figure

716
00:26:20,000 --> 00:26:21,679
out just how that might have happened or

717
00:26:21,679 --> 00:26:22,960
who might have been using this and how

718
00:26:22,960 --> 00:26:24,880
that information may have been spread

719
00:26:24,880 --> 00:26:27,840
around because like alvaro is saying

720
00:26:27,840 --> 00:26:31,120
this could have been significantly

721
00:26:31,120 --> 00:26:33,120
maybe not worse but certainly less ideal

722
00:26:33,120 --> 00:26:35,600
in terms of disclosure especially given

723
00:26:35,600 --> 00:26:38,799
the political pressures in where the

724
00:26:38,799 --> 00:26:40,640
this uh research was originally

725
00:26:40,640 --> 00:26:42,960
performed and how those disclosures are

726
00:26:42,960 --> 00:26:44,640
i guess supposed to take place that they

727
00:26:44,640 --> 00:26:47,120
get sent to the a government authority

728
00:26:47,120 --> 00:26:50,400
before being disclosed onto the actual

729
00:26:50,400 --> 00:26:52,720
vendor or maintainers and whatnot which

730
00:26:52,720 --> 00:26:56,320
opens up all sorts of potential uh for

731
00:26:56,320 --> 00:26:59,120
possible abuse or or other things this

732
00:26:59,120 --> 00:27:01,120
is all conjecture i have no idea

733
00:27:01,120 --> 00:27:02,640
actually but we could certainly think of

734
00:27:02,640 --> 00:27:04,960
scenarios um

735
00:27:04,960 --> 00:27:07,200
but yeah it was a you know if you if you

736
00:27:07,200 --> 00:27:09,279
think about it in terms of timeliness

737
00:27:09,279 --> 00:27:11,360
with the disclosure to apache in late

738
00:27:11,360 --> 00:27:13,600
november and then a patch following you

739
00:27:13,600 --> 00:27:15,440
know a couple of weeks later that's a

740
00:27:15,440 --> 00:27:18,880
pretty good turnaround for identifying a

741
00:27:18,880 --> 00:27:20,799
you pretty severe vulnerability and then

742
00:27:20,799 --> 00:27:22,559
getting it patched into

743
00:27:22,559 --> 00:27:24,720
the project and this being done as an

744
00:27:24,720 --> 00:27:26,480
open source project maintained by

745
00:27:26,480 --> 00:27:28,080
volunteers

746
00:27:28,080 --> 00:27:30,720
major software companies should aspire

747
00:27:30,720 --> 00:27:34,080
to have that level of responsiveness uh

748
00:27:34,080 --> 00:27:36,000
to this sort of activity so

749
00:27:36,000 --> 00:27:38,399
uh you know while they had to revise

750
00:27:38,399 --> 00:27:40,799
things slightly uh in order to disable

751
00:27:40,799 --> 00:27:43,600
the jdi functionality as a default in

752
00:27:43,600 --> 00:27:46,720
the 2.16 patch now overall the log4j

753
00:27:46,720 --> 00:27:48,159
maintainers i think did a pretty good

754
00:27:48,159 --> 00:27:51,120
job uh with respect to all of this given

755
00:27:51,120 --> 00:27:52,880
circumstances

756
00:27:52,880 --> 00:27:54,080
all right

757
00:27:54,080 --> 00:27:54,880
uh

758
00:27:54,880 --> 00:27:57,440
so this is one such incident but uh

759
00:27:57,440 --> 00:27:59,360
alvaro next

760
00:27:59,360 --> 00:28:01,279
and next in the final

761
00:28:01,279 --> 00:28:03,279
discussion list

762
00:28:03,279 --> 00:28:05,279
do you see any trend of

763
00:28:05,279 --> 00:28:07,679
in the coming year more of this kind of

764
00:28:07,679 --> 00:28:08,960
liberties will be

765
00:28:08,960 --> 00:28:10,799
discovered in other languages and

766
00:28:10,799 --> 00:28:12,559
libraries and

767
00:28:12,559 --> 00:28:14,960
what are the challenges that large orgs

768
00:28:14,960 --> 00:28:16,640
faced this time

769
00:28:16,640 --> 00:28:19,200
for patching and fixing it on time and

770
00:28:19,200 --> 00:28:21,360
what is it that they should be doing to

771
00:28:21,360 --> 00:28:23,200
uh

772
00:28:23,200 --> 00:28:25,360
if not you know prevent them be very

773
00:28:25,360 --> 00:28:26,960
proactive and very

774
00:28:26,960 --> 00:28:28,559
fast about mitigating these in the

775
00:28:28,559 --> 00:28:30,880
coming years because uh i think we are

776
00:28:30,880 --> 00:28:33,120
seeing a trend here where this class of

777
00:28:33,120 --> 00:28:34,880
vulnerability which almost impacts

778
00:28:34,880 --> 00:28:36,640
everybody

779
00:28:36,640 --> 00:28:37,760
these have been

780
00:28:37,760 --> 00:28:40,720
coming on for a while now and i think in

781
00:28:40,720 --> 00:28:42,799
future the rate will only increase it's

782
00:28:42,799 --> 00:28:44,960
very important that the organizations

783
00:28:44,960 --> 00:28:45,840
have

784
00:28:45,840 --> 00:28:48,320
uh maybe a qrt or

785
00:28:48,320 --> 00:28:50,240
some sort of response team which is just

786
00:28:50,240 --> 00:28:52,080
responsible for

787
00:28:52,080 --> 00:28:53,919
actively monitoring and patching this

788
00:28:53,919 --> 00:28:56,159
kind of situation

789
00:28:56,159 --> 00:28:58,960
yeah so first of all i don't think that

790
00:28:58,960 --> 00:29:01,279
um we are going to see a trend of jndi

791
00:29:01,279 --> 00:29:03,440
injections in the following months or

792
00:29:03,440 --> 00:29:06,480
years as i said before we presented this

793
00:29:06,480 --> 00:29:07,320
talk at

794
00:29:07,320 --> 00:29:10,399
2016 and since then it's only been like

795
00:29:10,399 --> 00:29:12,480
a handful of

796
00:29:12,480 --> 00:29:14,720
similar vulnerabilities being found so

797
00:29:14,720 --> 00:29:16,720
it's it's not very common that you pass

798
00:29:16,720 --> 00:29:19,760
and trust the data into a jndi lookup

799
00:29:19,760 --> 00:29:21,919
that's something normal

800
00:29:21,919 --> 00:29:23,039
to take

801
00:29:23,039 --> 00:29:25,039
or to look up values from configuration

802
00:29:25,039 --> 00:29:27,279
files or things like that but not really

803
00:29:27,279 --> 00:29:29,679
from untrusted data user control data so

804
00:29:29,679 --> 00:29:33,039
i'm not expecting a huge spike on jdi

805
00:29:33,039 --> 00:29:34,320
injections like

806
00:29:34,320 --> 00:29:36,000
people or researchers are going to start

807
00:29:36,000 --> 00:29:37,919
looking for gndi injection now and they

808
00:29:37,919 --> 00:29:39,679
are going to start looking are they are

809
00:29:39,679 --> 00:29:42,240
going to start popping up from anywhere

810
00:29:42,240 --> 00:29:44,640
so that's that's fine and i'm also

811
00:29:44,640 --> 00:29:47,760
optimistic in that i think that people

812
00:29:47,760 --> 00:29:50,559
or companies have been very practically

813
00:29:50,559 --> 00:29:53,600
patching this vulnerability

814
00:29:53,600 --> 00:29:56,480
so from github for example we have um

815
00:29:56,480 --> 00:29:58,880
sent more than 500

816
00:29:58,880 --> 00:30:01,440
500 000 dependable which is a software

817
00:30:01,440 --> 00:30:02,640
composition

818
00:30:02,640 --> 00:30:05,679
um analyst tool so basically tells you

819
00:30:05,679 --> 00:30:07,840
if your dependencies or the dependencies

820
00:30:07,840 --> 00:30:10,000
of your dependencies are actually using

821
00:30:10,000 --> 00:30:12,320
an insecure version and we have been

822
00:30:12,320 --> 00:30:16,000
notifying more than 500 000

823
00:30:16,000 --> 00:30:17,760
maintainers

824
00:30:17,760 --> 00:30:19,440
and out of the

825
00:30:19,440 --> 00:30:22,320
active one because github is obviously

826
00:30:22,320 --> 00:30:24,640
full of active and very a lot of

827
00:30:24,640 --> 00:30:27,600
non-active projects but around 50

828
00:30:27,600 --> 00:30:30,399
percent patched the log4j vulnerability

829
00:30:30,399 --> 00:30:31,600
within the

830
00:30:31,600 --> 00:30:33,440
first seven days

831
00:30:33,440 --> 00:30:36,640
so now we are in january 13 i guess that

832
00:30:36,640 --> 00:30:38,399
this number is is

833
00:30:38,399 --> 00:30:41,279
quite larger now and that's what made me

834
00:30:41,279 --> 00:30:43,120
optimistic this is open source and i

835
00:30:43,120 --> 00:30:45,120
guess that large companies are doing the

836
00:30:45,120 --> 00:30:48,480
the same thing um privately so yeah of

837
00:30:48,480 --> 00:30:50,399
course there are going to be a lot of um

838
00:30:50,399 --> 00:30:51,840
applications that are going to remain

839
00:30:51,840 --> 00:30:53,600
vulnerable because either they are

840
00:30:53,600 --> 00:30:55,919
legacy and cannot be changed or because

841
00:30:55,919 --> 00:30:58,399
they are unmaintained and and no one is

842
00:30:58,399 --> 00:31:01,519
actually um touching them anymore or

843
00:31:01,519 --> 00:31:03,120
because i don't know you are using some

844
00:31:03,120 --> 00:31:05,120
third-party software in your company

845
00:31:05,120 --> 00:31:07,360
that you are not keeping up to date or

846
00:31:07,360 --> 00:31:09,360
because uh it's not been actively

847
00:31:09,360 --> 00:31:11,440
maintained and you need to use it

848
00:31:11,440 --> 00:31:13,200
because moving to a different software

849
00:31:13,200 --> 00:31:15,519
would be very costly and things like

850
00:31:15,519 --> 00:31:18,320
that are going to keep look for sale

851
00:31:18,320 --> 00:31:19,600
alive

852
00:31:19,600 --> 00:31:21,919
for at least i would say a couple of

853
00:31:21,919 --> 00:31:24,640
years but yeah the impact and the long

854
00:31:24,640 --> 00:31:25,919
tail is going to be

855
00:31:25,919 --> 00:31:28,240
very low i think i want to be optimistic

856
00:31:28,240 --> 00:31:29,279
at least

857
00:31:29,279 --> 00:31:30,880
i don't know if you have maybe a

858
00:31:30,880 --> 00:31:32,399
different

859
00:31:32,399 --> 00:31:34,879
opinion

860
00:31:35,120 --> 00:31:39,279
i agree um that given the nested nature

861
00:31:39,279 --> 00:31:42,159
of where this software package resides

862
00:31:42,159 --> 00:31:43,919
as well as like you were saying not just

863
00:31:43,919 --> 00:31:45,760
direct dependencies but dependencies of

864
00:31:45,760 --> 00:31:49,919
dependencies and then getting into

865
00:31:49,919 --> 00:31:52,080
high availability

866
00:31:52,080 --> 00:31:54,399
fairly complex production systems like a

867
00:31:54,399 --> 00:31:56,320
data historian in a

868
00:31:56,320 --> 00:31:58,159
industrial environment or a business

869
00:31:58,159 --> 00:32:01,360
process server or service in a financial

870
00:32:01,360 --> 00:32:03,840
services environment that you know a lot

871
00:32:03,840 --> 00:32:05,200
of times you're talking about systems

872
00:32:05,200 --> 00:32:06,960
that don't get patched very frequently

873
00:32:06,960 --> 00:32:09,919
or rely on older uh software payloads

874
00:32:09,919 --> 00:32:12,080
that don't get taken care of very often

875
00:32:12,080 --> 00:32:14,399
and these are very sensitive sort of uh

876
00:32:14,399 --> 00:32:15,919
items that certainly they're not

877
00:32:15,919 --> 00:32:17,200
hopefully they're not directly exposed

878
00:32:17,200 --> 00:32:18,559
to the internet that would be terrible

879
00:32:18,559 --> 00:32:21,279
but um once an adversary is able to get

880
00:32:21,279 --> 00:32:23,279
within a network this may provide a

881
00:32:23,279 --> 00:32:26,159
route to get at certain high

882
00:32:26,159 --> 00:32:29,120
value systems and it'll take some time

883
00:32:29,120 --> 00:32:30,720
not just for these sorts of dependencies

884
00:32:30,720 --> 00:32:32,720
to get unraveled and then addressed but

885
00:32:32,720 --> 00:32:35,039
then for organizations to find the time

886
00:32:35,039 --> 00:32:36,720
to perform both the acceptance and

887
00:32:36,720 --> 00:32:38,000
regression testing to make sure that

888
00:32:38,000 --> 00:32:39,279
they don't break anything in their

889
00:32:39,279 --> 00:32:41,279
environment and then to actually apply

890
00:32:41,279 --> 00:32:43,760
these uh moving forward uh to make sure

891
00:32:43,760 --> 00:32:45,679
that these sort of security holes are

892
00:32:45,679 --> 00:32:47,600
are removed so certainly

893
00:32:47,600 --> 00:32:48,960
you know from a

894
00:32:48,960 --> 00:32:51,600
external facing initial access uh

895
00:32:51,600 --> 00:32:54,000
perspective i i would say that this will

896
00:32:54,000 --> 00:32:56,000
probably get addressed over the next

897
00:32:56,000 --> 00:32:58,480
couple of months and be reduced fairly

898
00:32:58,480 --> 00:33:01,279
dramatically as a initial access vector

899
00:33:01,279 --> 00:33:03,440
but for internal lateral movement or

900
00:33:03,440 --> 00:33:06,000
exploiting uh services once inside a

901
00:33:06,000 --> 00:33:07,919
network this will be a problem for the

902
00:33:07,919 --> 00:33:11,840
foreseeable future for those reasons

903
00:33:13,039 --> 00:33:15,360
yeah right so

904
00:33:15,360 --> 00:33:17,840
thanks a lot thanks joe i really enjoyed

905
00:33:17,840 --> 00:33:19,919
discussing uh

906
00:33:19,919 --> 00:33:21,519
with you guys it was really nice to have

907
00:33:21,519 --> 00:33:23,919
you here i had some interesting insights

908
00:33:23,919 --> 00:33:24,799
and

909
00:33:24,799 --> 00:33:27,600
hopefully alvaro your optimism plays out

910
00:33:27,600 --> 00:33:31,279
uh as expected uh

911
00:33:32,159 --> 00:33:34,880
yeah that's all

912
00:33:35,120 --> 00:33:36,880
thank you and thank you for having us

913
00:33:36,880 --> 00:33:38,880
here

914
00:33:38,880 --> 00:33:41,670
yep lots of fun

915
00:33:41,670 --> 00:33:44,799
[Music]

