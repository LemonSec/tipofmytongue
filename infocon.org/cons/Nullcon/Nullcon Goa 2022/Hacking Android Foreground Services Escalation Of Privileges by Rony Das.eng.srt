1
00:00:02,879 --> 00:00:06,359
okay so uh I'll be starting with a basic

2
00:00:06,359 --> 00:00:08,700
introduction and uh

3
00:00:08,700 --> 00:00:12,599
let's get started so who am I right I

4
00:00:12,599 --> 00:00:14,400
work at a company called net centers as

5
00:00:14,400 --> 00:00:17,279
senior security consultant uh I'm in

6
00:00:17,279 --> 00:00:21,060
security since uh 2013 and uh basically

7
00:00:21,060 --> 00:00:23,039
I started with babe and then uh jumped

8
00:00:23,039 --> 00:00:25,199
to a lot of other stuff now I'm in

9
00:00:25,199 --> 00:00:29,580
Android totally and uh I I studied in

10
00:00:29,580 --> 00:00:32,040
malware malware samples a lot and uh

11
00:00:32,040 --> 00:00:35,460
sometimes I like developing it and uh

12
00:00:35,460 --> 00:00:38,100
test it on my local environment so that

13
00:00:38,100 --> 00:00:41,219
is what I do when I am free and uh

14
00:00:41,219 --> 00:00:44,879
my interest or exchange from Android uh

15
00:00:44,879 --> 00:00:47,700
to web and then uh I'm planning to go to

16
00:00:47,700 --> 00:00:49,980
binaries now so let's see

17
00:00:49,980 --> 00:00:54,120
and uh so before we jump into the uh

18
00:00:54,120 --> 00:00:56,879
core of the stock right uh I want to

19
00:00:56,879 --> 00:00:58,800
discuss uh discuss the goal about that

20
00:00:58,800 --> 00:01:01,260
uh what what I'm what exactly I'm I have

21
00:01:01,260 --> 00:01:03,239
the goal right so what exact it is I'll

22
00:01:03,239 --> 00:01:06,299
be discussing a bit about it and uh so

23
00:01:06,299 --> 00:01:09,960
uh it's escalating privileges uh

24
00:01:09,960 --> 00:01:13,200
uh so what exactly it is I'll be giving

25
00:01:13,200 --> 00:01:15,180
a little description on it uh it's

26
00:01:15,180 --> 00:01:17,840
basically uh

27
00:01:17,840 --> 00:01:21,720
you can say uh when you when you open uh

28
00:01:21,720 --> 00:01:24,600
this uh let's say uh Google Maps right

29
00:01:24,600 --> 00:01:27,119
when you open Google Maps you see uh

30
00:01:27,119 --> 00:01:29,939
when you go into into the uh map section

31
00:01:29,939 --> 00:01:32,220
and then you start navigating to a

32
00:01:32,220 --> 00:01:34,740
particular location you see a sticky

33
00:01:34,740 --> 00:01:36,900
notification right uh how many of you

34
00:01:36,900 --> 00:01:39,299
guys are from Android uh internals how

35
00:01:39,299 --> 00:01:41,939
many of you do Android pen testing it

36
00:01:41,939 --> 00:01:44,579
okay and how many of you uh do Android

37
00:01:44,579 --> 00:01:48,240
internals like uh the core internals

38
00:01:48,240 --> 00:01:51,299
okay okay I know I know you

39
00:01:51,299 --> 00:01:54,360
okay so uh basically uh when you open

40
00:01:54,360 --> 00:01:55,740
Google Maps and you navigate to a

41
00:01:55,740 --> 00:01:57,780
particular location uh you see a sticky

42
00:01:57,780 --> 00:01:59,880
notification right over the top oh you

43
00:01:59,880 --> 00:02:01,860
see a CK notification that is exactly

44
00:02:01,860 --> 00:02:03,780
what the Fogo notification is

45
00:02:03,780 --> 00:02:06,420
so uh without a focus notification you

46
00:02:06,420 --> 00:02:09,239
cannot access uh microphone uh camera

47
00:02:09,239 --> 00:02:11,459
and location like any of the data you

48
00:02:11,459 --> 00:02:12,480
cannot access without a focus

49
00:02:12,480 --> 00:02:14,700
notification and uh Android comes with

50
00:02:14,700 --> 00:02:17,160
some security policies on that so I'll

51
00:02:17,160 --> 00:02:18,540
be bypassing that I'll be escalating

52
00:02:18,540 --> 00:02:20,220
privileges for this uh Fargo

53
00:02:20,220 --> 00:02:23,099
notification uh accessing the microphone

54
00:02:23,099 --> 00:02:25,020
uh without even the focal notification

55
00:02:25,020 --> 00:02:25,980
on place

56
00:02:25,980 --> 00:02:28,800
so let's jump into the talk

57
00:02:28,800 --> 00:02:32,280
so before we jump uh uh in depth let's

58
00:02:32,280 --> 00:02:34,680
understand what uh Focus notification is

59
00:02:34,680 --> 00:02:36,420
as I've already said I'll be jumping

60
00:02:36,420 --> 00:02:38,520
from topic to topic for the uh context

61
00:02:38,520 --> 00:02:40,739
of this talk because at the end I'll be

62
00:02:40,739 --> 00:02:42,180
giving a demo on how exactly it is

63
00:02:42,180 --> 00:02:45,060
happening uh but we'll have to uh grab

64
00:02:45,060 --> 00:02:49,280
some of the basics uh before we jump

65
00:02:50,099 --> 00:02:52,379
so uh let's understand what is uh forgot

66
00:02:52,379 --> 00:02:54,660
notification services

67
00:02:54,660 --> 00:02:57,180
basically uh it's a sticky notification

68
00:02:57,180 --> 00:02:58,860
which you get on the top of your

69
00:02:58,860 --> 00:03:02,640
notification bar and uh the example I

70
00:03:02,640 --> 00:03:04,980
gave right I'll be uh casting my uh

71
00:03:04,980 --> 00:03:06,540
Android phone I have a physical Android

72
00:03:06,540 --> 00:03:08,340
device here and I'll be casting its

73
00:03:08,340 --> 00:03:10,319
screen to my computer screen so that you

74
00:03:10,319 --> 00:03:14,339
guys can see foreign

75
00:03:14,830 --> 00:03:18,039
[Music]

76
00:03:51,260 --> 00:03:54,260
foreign

77
00:03:56,540 --> 00:03:59,580
looks like you guys already know it but

78
00:03:59,580 --> 00:04:03,019
let let me show you guys how

79
00:04:07,799 --> 00:04:09,540
so I'll be navigating to a particular

80
00:04:09,540 --> 00:04:12,200
location

81
00:04:47,820 --> 00:04:50,540
second

82
00:05:01,560 --> 00:05:03,060
I'll have to connect to the internet

83
00:05:03,060 --> 00:05:06,380
otherwise it's not working

84
00:05:10,680 --> 00:05:12,919
foreign

85
00:05:37,620 --> 00:05:40,520
foreign

86
00:05:51,840 --> 00:05:53,340
you cannot you cannot quit this

87
00:05:53,340 --> 00:05:54,479
notification you cannot exit this

88
00:05:54,479 --> 00:05:56,039
notification this is for the foreground

89
00:05:56,039 --> 00:05:58,320
notification so uh when you even play

90
00:05:58,320 --> 00:06:01,139
songs on Spotify right uh you can see

91
00:06:01,139 --> 00:06:03,120
once you minimize the application you'll

92
00:06:03,120 --> 00:06:04,380
be able to see a particular notification

93
00:06:04,380 --> 00:06:06,360
which you cannot quit right you'll have

94
00:06:06,360 --> 00:06:07,919
to exit the application or you have to

95
00:06:07,919 --> 00:06:09,900
pause the application or basically you

96
00:06:09,900 --> 00:06:11,699
have to stop the application to get it

97
00:06:11,699 --> 00:06:12,720
closed

98
00:06:12,720 --> 00:06:15,600
so this is notification uh why Google

99
00:06:15,600 --> 00:06:17,220
Maps is using it because they are trying

100
00:06:17,220 --> 00:06:18,720
to access your location data and

101
00:06:18,720 --> 00:06:21,120
location is uh basically GPS is a

102
00:06:21,120 --> 00:06:22,800
hardware sensor right and that is why

103
00:06:22,800 --> 00:06:24,840
the focal notification is needed and

104
00:06:24,840 --> 00:06:26,340
without the program notification even

105
00:06:26,340 --> 00:06:29,460
Google cannot access the uh basically

106
00:06:29,460 --> 00:06:32,460
your location data your GPS data so that

107
00:06:32,460 --> 00:06:34,560
that is why Maps is using focal

108
00:06:34,560 --> 00:06:36,660
notification to access your data

109
00:06:36,660 --> 00:06:39,060
so just close it so now we know that

110
00:06:39,060 --> 00:06:41,100
what exactly the focal notification is

111
00:06:41,100 --> 00:06:43,620
right so uh I'll jump into the talk

112
00:06:43,620 --> 00:06:46,520
again

113
00:06:46,979 --> 00:06:49,159
foreign

114
00:06:56,539 --> 00:07:00,300
so let's move to the next slide this is

115
00:07:00,300 --> 00:07:04,680
done so uh before uh when we start uh

116
00:07:04,680 --> 00:07:08,100
right we'll have to pick into 2017 uh

117
00:07:08,100 --> 00:07:11,699
back and uh there was a release uh of

118
00:07:11,699 --> 00:07:14,460
Android oh it's basically Android 8 Oreo

119
00:07:14,460 --> 00:07:17,280
uh which have some interesting uh very

120
00:07:17,280 --> 00:07:19,139
very interesting stuffs uh that led to

121
00:07:19,139 --> 00:07:21,539
this bypass and we'll go into the next

122
00:07:21,539 --> 00:07:24,300
slides basically on Android uh eight

123
00:07:24,300 --> 00:07:26,580
right uh there were some uh

124
00:07:26,580 --> 00:07:30,599
a feature released on uh Android it's

125
00:07:30,599 --> 00:07:32,280
basically they call it security feature

126
00:07:32,280 --> 00:07:36,060
and uh to save your battery but uh a lot

127
00:07:36,060 --> 00:07:37,440
of security features are also included

128
00:07:37,440 --> 00:07:39,419
in it so it's basically uh Android

129
00:07:39,419 --> 00:07:41,280
background limitations uh we will

130
00:07:41,280 --> 00:07:44,819
explode it more and the major changes on

131
00:07:44,819 --> 00:07:47,639
uh Android 8 right Oreo was basically

132
00:07:47,639 --> 00:07:49,680
background or service limitations and

133
00:07:49,680 --> 00:07:51,479
the background location limitations so

134
00:07:51,479 --> 00:07:52,919
uh

135
00:07:52,919 --> 00:07:56,580
what exactly uh Android brought to this

136
00:07:56,580 --> 00:07:59,759
particular update so before when you

137
00:07:59,759 --> 00:08:01,380
when you want to start a back service

138
00:08:01,380 --> 00:08:03,419
background right sometimes what you see

139
00:08:03,419 --> 00:08:05,099
is basically

140
00:08:05,099 --> 00:08:05,660
um

141
00:08:05,660 --> 00:08:07,620
there are there are many background

142
00:08:07,620 --> 00:08:09,419
services in Android which you can run

143
00:08:09,419 --> 00:08:11,639
through app and to run background

144
00:08:11,639 --> 00:08:13,560
services on Android will have before it

145
00:08:13,560 --> 00:08:16,620
was before Android 8 right uh it was

146
00:08:16,620 --> 00:08:18,900
start service method you can call it

147
00:08:18,900 --> 00:08:20,639
directly and you can start a background

148
00:08:20,639 --> 00:08:23,879
services on Android so uh on this update

149
00:08:23,879 --> 00:08:28,199
it was uh it do not work anymore so uh

150
00:08:28,199 --> 00:08:30,419
another update was uh you cannot run a

151
00:08:30,419 --> 00:08:32,279
services in background

152
00:08:32,279 --> 00:08:34,740
if the app is closed without any Focus

153
00:08:34,740 --> 00:08:36,659
notification so to bypass that you will

154
00:08:36,659 --> 00:08:39,059
you have a work manager you have uh

155
00:08:39,059 --> 00:08:41,640
other like workers you can use it but

156
00:08:41,640 --> 00:08:43,440
there is a limitation of 15 minutes

157
00:08:43,440 --> 00:08:45,959
where you have to wait for 15 minutes to

158
00:08:45,959 --> 00:08:49,200
call your next uh work but what uh

159
00:08:49,200 --> 00:08:51,000
there's a bypass for it we'll discuss

160
00:08:51,000 --> 00:08:54,260
this later on another talk but uh

161
00:08:54,260 --> 00:08:57,060
also the thing is you can from the

162
00:08:57,060 --> 00:08:58,920
background even when you close the app

163
00:08:58,920 --> 00:09:01,320
right you cannot access any microphone

164
00:09:01,320 --> 00:09:04,860
camera and location without having a

165
00:09:04,860 --> 00:09:06,839
foga notification in place so there is

166
00:09:06,839 --> 00:09:09,240
no background work in uh allowed in

167
00:09:09,240 --> 00:09:12,480
Android 8 update and uh

168
00:09:12,480 --> 00:09:14,100
there are some very very interesting

169
00:09:14,100 --> 00:09:16,080
things uh to know about foga

170
00:09:16,080 --> 00:09:18,959
notifications before exploiting it so uh

171
00:09:18,959 --> 00:09:21,000
we'll jump into that so after the

172
00:09:21,000 --> 00:09:22,740
Android system creates uh foregone

173
00:09:22,740 --> 00:09:25,680
service the applicates or like five

174
00:09:25,680 --> 00:09:27,720
seconds exact five seconds to start the

175
00:09:27,720 --> 00:09:29,760
forgo notification service and if you

176
00:09:29,760 --> 00:09:31,080
don't start your forgotten notification

177
00:09:31,080 --> 00:09:32,399
service within that particular time

178
00:09:32,399 --> 00:09:34,560
frame right uh the application closes

179
00:09:34,560 --> 00:09:37,080
the 400 to your service for for that

180
00:09:37,080 --> 00:09:38,700
particular app the application Android

181
00:09:38,700 --> 00:09:42,959
OS already closes your uh this uh your

182
00:09:42,959 --> 00:09:45,180
your basically uh it closes your uh

183
00:09:45,180 --> 00:09:46,320
service

184
00:09:46,320 --> 00:09:48,360
it just kills your service

185
00:09:48,360 --> 00:09:51,480
and uh so basically let's see let's

186
00:09:51,480 --> 00:09:54,360
let's let's uh see how it actually looks

187
00:09:54,360 --> 00:09:56,760
like so you start a start foreground

188
00:09:56,760 --> 00:09:58,620
service call and then there's a time

189
00:09:58,620 --> 00:10:01,320
five seconds time frame you you guys

190
00:10:01,320 --> 00:10:03,899
have to track on this because we'll come

191
00:10:03,899 --> 00:10:05,700
later uh how how exactly we are

192
00:10:05,700 --> 00:10:06,899
exploiting this particular vulnerability

193
00:10:06,899 --> 00:10:09,420
so there's only time five seconds uh

194
00:10:09,420 --> 00:10:10,860
time frame and then you have to start

195
00:10:10,860 --> 00:10:13,680
the notification service if you do not

196
00:10:13,680 --> 00:10:14,880
start the program service within this

197
00:10:14,880 --> 00:10:16,860
five second time frame right uh it do

198
00:10:16,860 --> 00:10:18,600
not start the Android always kills it

199
00:10:18,600 --> 00:10:19,920
kills the service

200
00:10:19,920 --> 00:10:22,860
so any code you run between uh any code

201
00:10:22,860 --> 00:10:24,779
you run between this uh

202
00:10:24,779 --> 00:10:27,899
Start program service and then uh stock

203
00:10:27,899 --> 00:10:29,339
work on service right any code you run

204
00:10:29,339 --> 00:10:32,279
between this is a privileged uh call so

205
00:10:32,279 --> 00:10:35,160
you can access any uh camera uh

206
00:10:35,160 --> 00:10:37,680
microphone or even uh location data

207
00:10:37,680 --> 00:10:40,699
within this five seconds

208
00:10:41,040 --> 00:10:44,100
so uh

209
00:10:44,100 --> 00:10:46,560
so there are some disadvantages we'll

210
00:10:46,560 --> 00:10:49,560
talk about it and uh so let's talk about

211
00:10:49,560 --> 00:10:51,360
the disadvantages first so you cannot

212
00:10:51,360 --> 00:10:54,000
access a sensitive data APS for a long

213
00:10:54,000 --> 00:10:55,500
amount of time for example you are

214
00:10:55,500 --> 00:10:58,560
creating a spyware right so on spyware

215
00:10:58,560 --> 00:11:00,060
let's say you are trying to record uh

216
00:11:00,060 --> 00:11:02,519
audio of your surrounding right you

217
00:11:02,519 --> 00:11:04,380
cannot you as you have already talked

218
00:11:04,380 --> 00:11:06,120
that there's only five five seconds time

219
00:11:06,120 --> 00:11:07,860
frame where you cannot do all your

220
00:11:07,860 --> 00:11:11,040
privileged stuff right but uh you do not

221
00:11:11,040 --> 00:11:12,480
want your spyware to record for only

222
00:11:12,480 --> 00:11:14,279
five seconds right that is very that is

223
00:11:14,279 --> 00:11:15,959
a problem you cannot record for five

224
00:11:15,959 --> 00:11:18,720
seconds and just uh listen to it right

225
00:11:18,720 --> 00:11:20,640
because just five seconds will not

226
00:11:20,640 --> 00:11:22,260
gather much info

227
00:11:22,260 --> 00:11:24,660
so when you are developing a spyware you

228
00:11:24,660 --> 00:11:28,320
need your your malware to record all of

229
00:11:28,320 --> 00:11:30,300
the stops around your around that

230
00:11:30,300 --> 00:11:32,279
particular environment right so uh the

231
00:11:32,279 --> 00:11:34,500
stealthiness will be gone if you uh use

232
00:11:34,500 --> 00:11:36,300
Fogo notification to access your

233
00:11:36,300 --> 00:11:38,040
microphone as you have already know that

234
00:11:38,040 --> 00:11:39,660
with foga notification you can access

235
00:11:39,660 --> 00:11:42,420
microphone uh from the background and

236
00:11:42,420 --> 00:11:43,740
you have the privilege to do that right

237
00:11:43,740 --> 00:11:46,380
Google do not uh like Google allows it

238
00:11:46,380 --> 00:11:47,820
with forgot notification you can access

239
00:11:47,820 --> 00:11:49,500
your all the all the other Hardware

240
00:11:49,500 --> 00:11:52,680
sensors but if a spyware from a

241
00:11:52,680 --> 00:11:55,019
spyware's perspective right if you try

242
00:11:55,019 --> 00:11:57,540
to access uh the location data or the

243
00:11:57,540 --> 00:12:00,240
camera data from the background so

244
00:12:00,240 --> 00:12:02,040
there's a problem you see a notification

245
00:12:02,040 --> 00:12:04,620
every time and yeah it actually kills

246
00:12:04,620 --> 00:12:06,240
your stealthiness of the spyware right

247
00:12:06,240 --> 00:12:09,300
so uh we'll solve it we'll solve it but

248
00:12:09,300 --> 00:12:12,079
uh in the upcoming slides

249
00:12:12,079 --> 00:12:15,839
so uh this is example this is a sample

250
00:12:15,839 --> 00:12:18,600
code snippet where uh you can start the

251
00:12:18,600 --> 00:12:20,579
program notification and any code you

252
00:12:20,579 --> 00:12:23,279
run between that right uh it has a time

253
00:12:23,279 --> 00:12:25,800
of five second time frame where you can

254
00:12:25,800 --> 00:12:27,660
access the camera access the microphone

255
00:12:27,660 --> 00:12:31,380
and access the location so uh accessing

256
00:12:31,380 --> 00:12:33,839
this particular sensors right you can do

257
00:12:33,839 --> 00:12:35,459
in between this particular five second

258
00:12:35,459 --> 00:12:38,459
but uh like we have already discussed

259
00:12:38,459 --> 00:12:40,500
right accessing the microphone for five

260
00:12:40,500 --> 00:12:43,320
seconds is not really worth it so we'll

261
00:12:43,320 --> 00:12:44,760
talk about it

262
00:12:44,760 --> 00:12:47,579
but now by now we know right uh that uh

263
00:12:47,579 --> 00:12:48,959
what whatever you have to do whatever

264
00:12:48,959 --> 00:12:51,360
the bypass has to be do done is between

265
00:12:51,360 --> 00:12:53,279
this particular two calls stop Start

266
00:12:53,279 --> 00:12:54,959
program service and the stop program

267
00:12:54,959 --> 00:12:57,180
service

268
00:12:57,180 --> 00:12:59,160
so uh like I was talking about this

269
00:12:59,160 --> 00:13:02,700
problem uh before this slide was we can

270
00:13:02,700 --> 00:13:06,060
take camera snaps precise location uh

271
00:13:06,060 --> 00:13:09,420
like for for example if you want to like

272
00:13:09,420 --> 00:13:11,399
uh get the camera snap right it can be

273
00:13:11,399 --> 00:13:13,260
done within those five seconds you don't

274
00:13:13,260 --> 00:13:15,180
need like 10 minutes or 20 minutes to

275
00:13:15,180 --> 00:13:16,920
take a camera snap right you can just

276
00:13:16,920 --> 00:13:18,660
call your program service you can you

277
00:13:18,660 --> 00:13:21,060
call your custom function of the camera

278
00:13:21,060 --> 00:13:23,519
snaps and you can just take a snap and

279
00:13:23,519 --> 00:13:25,019
stop the foreground service it will be

280
00:13:25,019 --> 00:13:28,019
just uh as easy as easy as that so you

281
00:13:28,019 --> 00:13:30,300
can do the same for the precise location

282
00:13:30,300 --> 00:13:32,040
in short

283
00:13:32,040 --> 00:13:35,519
and uh it is totally doable right under

284
00:13:35,519 --> 00:13:37,680
five seconds but when it comes to the

285
00:13:37,680 --> 00:13:39,300
long running tasks like we have already

286
00:13:39,300 --> 00:13:41,339
discussed you cannot uh record your

287
00:13:41,339 --> 00:13:43,260
microphone for just five seconds right

288
00:13:43,260 --> 00:13:45,480
it's a problem for for a spyware from a

289
00:13:45,480 --> 00:13:47,880
spyware's perspective and you also need

290
00:13:47,880 --> 00:13:49,260
this stealthiness you cannot show the

291
00:13:49,260 --> 00:13:53,279
notification to the user right so uh

292
00:13:53,279 --> 00:13:55,079
before before we jump into the exploit

293
00:13:55,079 --> 00:13:58,560
uh we'll talk about uh a little a little

294
00:13:58,560 --> 00:14:00,180
little touch of the Android internet

295
00:14:00,180 --> 00:14:02,100
what is an application context in

296
00:14:02,100 --> 00:14:03,839
application context has all the Global

297
00:14:03,839 --> 00:14:05,579
Information available every every

298
00:14:05,579 --> 00:14:07,260
application has activities every

299
00:14:07,260 --> 00:14:09,480
activities have their own context so

300
00:14:09,480 --> 00:14:11,399
every other different there could be

301
00:14:11,399 --> 00:14:12,740
multiple activities in a particular

302
00:14:12,740 --> 00:14:15,899
application and every activity has its

303
00:14:15,899 --> 00:14:19,380
own context so uh those activities so

304
00:14:19,380 --> 00:14:21,060
those contexts get access to this

305
00:14:21,060 --> 00:14:23,639
intense broadcast and activities

306
00:14:23,639 --> 00:14:25,880
launching activities are included

307
00:14:25,880 --> 00:14:29,760
so uh it basically uh give access to the

308
00:14:29,760 --> 00:14:31,680
all Android core functionalities

309
00:14:31,680 --> 00:14:35,279
and uh this will be very uh important to

310
00:14:35,279 --> 00:14:38,579
understand uh the bypass so yeah

311
00:14:38,579 --> 00:14:41,339
so let's let's discuss about how how the

312
00:14:41,339 --> 00:14:43,019
bypass is going to work for the

313
00:14:43,019 --> 00:14:45,720
microphone and uh

314
00:14:45,720 --> 00:14:47,399
like we've discussed right uh the

315
00:14:47,399 --> 00:14:48,480
application context is very very

316
00:14:48,480 --> 00:14:50,040
important to understand so every

317
00:14:50,040 --> 00:14:51,899
application has its own context and uh

318
00:14:51,899 --> 00:14:54,000
we'll be using uh when you try to

319
00:14:54,000 --> 00:14:56,100
implement the microphone uh

320
00:14:56,100 --> 00:14:58,860
implementation on your uh your code

321
00:14:58,860 --> 00:15:01,560
right uh in Java you do not need to

322
00:15:01,560 --> 00:15:03,300
basically Implement your own Hardware

323
00:15:03,300 --> 00:15:06,060
implementation you have the apis the

324
00:15:06,060 --> 00:15:08,220
media there there's a API for in Android

325
00:15:08,220 --> 00:15:10,500
inbuilt which is called Android media

326
00:15:10,500 --> 00:15:13,680
API right so what you have to do is uh

327
00:15:13,680 --> 00:15:15,300
your this is this is the context the

328
00:15:15,300 --> 00:15:17,279
application malicious uh Android app

329
00:15:17,279 --> 00:15:19,920
this is my spyware what it do what it

330
00:15:19,920 --> 00:15:23,699
does is it starts it gives a call to uh

331
00:15:23,699 --> 00:15:27,180
this Android media API and what both

332
00:15:27,180 --> 00:15:28,800
both have their different contacts right

333
00:15:28,800 --> 00:15:30,839
you do not have to uh

334
00:15:30,839 --> 00:15:33,720
you do not have to control any of the uh

335
00:15:33,720 --> 00:15:35,699
stuff that the media server does like

336
00:15:35,699 --> 00:15:37,320
the recording and the stopping of

337
00:15:37,320 --> 00:15:38,820
recording you just have to pass the

338
00:15:38,820 --> 00:15:42,260
calls so what it does is

339
00:15:42,420 --> 00:15:45,600
sorry so what it does is uh your

340
00:15:45,600 --> 00:15:48,180
application starts in context a it gives

341
00:15:48,180 --> 00:15:49,740
a control it says let's say the

342
00:15:49,740 --> 00:15:51,060
application is passing a control called

343
00:15:51,060 --> 00:15:53,459
start recording right the control passes

344
00:15:53,459 --> 00:15:56,339
to the Android media API and uh what it

345
00:15:56,339 --> 00:15:59,220
does is uh the Android Android media API

346
00:15:59,220 --> 00:16:00,420
understands that it's okay I got a call

347
00:16:00,420 --> 00:16:02,160
so I'll have to start the recording okay

348
00:16:02,160 --> 00:16:04,980
so it starts and then what it does it

349
00:16:04,980 --> 00:16:06,600
starts recording and it continues the

350
00:16:06,600 --> 00:16:09,540
recording so uh after when you want to

351
00:16:09,540 --> 00:16:10,800
close the recording you will have to

352
00:16:10,800 --> 00:16:13,079
give a stop call it passes the control

353
00:16:13,079 --> 00:16:15,240
and everything is handled by the Android

354
00:16:15,240 --> 00:16:17,760
media API you do not have to do a custom

355
00:16:17,760 --> 00:16:19,800
implementation of the Android start and

356
00:16:19,800 --> 00:16:21,000
stop you do not have to control the

357
00:16:21,000 --> 00:16:23,040
sensors all the apis are already inbuilt

358
00:16:23,040 --> 00:16:24,839
and these are Androids Androids custom

359
00:16:24,839 --> 00:16:27,480
uh inbuilt apis so you do not have to

360
00:16:27,480 --> 00:16:29,880
like uh do your implementation on your

361
00:16:29,880 --> 00:16:32,820
own so after you uh stop it right what

362
00:16:32,820 --> 00:16:34,740
Android media API does is it saves to

363
00:16:34,740 --> 00:16:36,899
the internal storage we'll look into it

364
00:16:36,899 --> 00:16:39,000
but this diagram is very very important

365
00:16:39,000 --> 00:16:40,920
to understand the bypass because because

366
00:16:40,920 --> 00:16:42,180
like

367
00:16:42,180 --> 00:16:44,160
will be will be looking into a looking

368
00:16:44,160 --> 00:16:45,839
into the demo so you'll understand then

369
00:16:45,839 --> 00:16:49,399
how this is useful

370
00:16:50,160 --> 00:16:52,380
so uh before before I jump into the next

371
00:16:52,380 --> 00:16:54,540
slide I just want to know that I like I

372
00:16:54,540 --> 00:16:56,459
just want to uh let you guys know that

373
00:16:56,459 --> 00:17:00,120
how uh the bypass Works a little bit of

374
00:17:00,120 --> 00:17:04,319
a little bit touch of it like from uh

375
00:17:04,319 --> 00:17:06,599
when when this context when this context

376
00:17:06,599 --> 00:17:08,819
a is started right when my application

377
00:17:08,819 --> 00:17:10,799
starts uh the malware the malware

378
00:17:10,799 --> 00:17:12,900
application starts what it does it

379
00:17:12,900 --> 00:17:14,760
starts a foreground notification and

380
00:17:14,760 --> 00:17:17,099
then on between the fogon start and fog

381
00:17:17,099 --> 00:17:20,880
on stop it uh calls uh this uh start

382
00:17:20,880 --> 00:17:23,160
audio recording uh call to the Android

383
00:17:23,160 --> 00:17:25,319
media server and it stops the focal

384
00:17:25,319 --> 00:17:27,419
notification so what it does you get a

385
00:17:27,419 --> 00:17:29,280
notification on on the very fast one

386
00:17:29,280 --> 00:17:30,780
nowadays the phones are very very fast

387
00:17:30,780 --> 00:17:34,080
right I got a I bought a very slow phone

388
00:17:34,080 --> 00:17:36,120
because so that I can give you a demo on

389
00:17:36,120 --> 00:17:38,820
this so this phone is very slow so I I

390
00:17:38,820 --> 00:17:41,940
took it intentionally so uh what it does

391
00:17:41,940 --> 00:17:44,460
is uh the malware application starts a

392
00:17:44,460 --> 00:17:46,380
foreground notification service and what

393
00:17:46,380 --> 00:17:48,600
it does it calls them Android media

394
00:17:48,600 --> 00:17:50,580
server then once the Android media

395
00:17:50,580 --> 00:17:52,320
server call is done what it does is

396
00:17:52,320 --> 00:17:54,240
closes the focus notification service so

397
00:17:54,240 --> 00:17:56,580
you don't get a notification uh for uh

398
00:17:56,580 --> 00:17:59,520
this uh audio recording and also it do

399
00:17:59,520 --> 00:18:00,660
not have to record it for five seconds

400
00:18:00,660 --> 00:18:02,039
because you are closing the notification

401
00:18:02,039 --> 00:18:04,080
but what it does is it passes the

402
00:18:04,080 --> 00:18:05,760
control go to the media server right and

403
00:18:05,760 --> 00:18:07,440
the media server has different context

404
00:18:07,440 --> 00:18:09,660
so you don't have to control any of the

405
00:18:09,660 --> 00:18:11,460
any of the media media server

406
00:18:11,460 --> 00:18:13,980
implementation all of the stuffs that

407
00:18:13,980 --> 00:18:16,080
recording has to do with right it is

408
00:18:16,080 --> 00:18:19,020
done by Android itself and it so you

409
00:18:19,020 --> 00:18:20,820
don't have to like control it for you

410
00:18:20,820 --> 00:18:21,960
just have to give the starting and

411
00:18:21,960 --> 00:18:23,400
stopping call for the media server and

412
00:18:23,400 --> 00:18:25,799
it it will save your MP3 files on your

413
00:18:25,799 --> 00:18:28,500
storage automatically

414
00:18:28,500 --> 00:18:30,480
so a little twist is this so whatever we

415
00:18:30,480 --> 00:18:32,820
have discussed yet is already fixed and

416
00:18:32,820 --> 00:18:34,679
whatever we have learned so far right

417
00:18:34,679 --> 00:18:36,539
it's already fixed and do not work so

418
00:18:36,539 --> 00:18:39,900
the CV is 2019 2219 Google rolled out a

419
00:18:39,900 --> 00:18:41,580
patch for this in December 2019 whatever

420
00:18:41,580 --> 00:18:44,340
we have discussed do not work

421
00:18:44,340 --> 00:18:47,880
so uh now we'll jump to the uh exploit

422
00:18:47,880 --> 00:18:50,340
part of it how we're going to patch it

423
00:18:50,340 --> 00:18:52,559
so uh

424
00:18:52,559 --> 00:18:55,440
so basically uh to to bypass this we

425
00:18:55,440 --> 00:18:58,620
need a zero day that is very very simple

426
00:18:58,620 --> 00:19:01,440
and uh the requirements for these uh

427
00:19:01,440 --> 00:19:04,799
bypass right uh is uh you'll you'll have

428
00:19:04,799 --> 00:19:06,539
to know about threads it's very very

429
00:19:06,539 --> 00:19:08,520
simple bypass it's just five lines of

430
00:19:08,520 --> 00:19:11,160
code and uh we'll be able to bypass it

431
00:19:11,160 --> 00:19:12,240
but the implementation of the

432
00:19:12,240 --> 00:19:14,400
application is very very like uh long

433
00:19:14,400 --> 00:19:16,620
but the code where the bypass is working

434
00:19:16,620 --> 00:19:19,140
right he's just a five lines

435
00:19:19,140 --> 00:19:21,720
so uh

436
00:19:21,720 --> 00:19:24,179
what what is threads in in very simple

437
00:19:24,179 --> 00:19:26,520
terms you will be able to execute run

438
00:19:26,520 --> 00:19:28,440
multiple tasks parallely without

439
00:19:28,440 --> 00:19:29,760
hindering or interfering with other

440
00:19:29,760 --> 00:19:31,620
tasks in the same application process so

441
00:19:31,620 --> 00:19:33,840
uh this is the application process which

442
00:19:33,840 --> 00:19:36,360
uh is being created under that you can

443
00:19:36,360 --> 00:19:39,360
uh create the as many as threads you

444
00:19:39,360 --> 00:19:42,419
want uh like depending on the hardware

445
00:19:42,419 --> 00:19:45,900
so basically what how we are going to

446
00:19:45,900 --> 00:19:47,460
use threads on this particular bypass

447
00:19:47,460 --> 00:19:49,799
we'll see in the next slides

448
00:19:49,799 --> 00:19:52,860
so this is the actual uh this is this is

449
00:19:52,860 --> 00:19:54,960
what the bypass looks like these lines

450
00:19:54,960 --> 00:19:57,000
are the bypassing this code Snippets is

451
00:19:57,000 --> 00:19:58,919
the bypass so so what I'm doing is I'm

452
00:19:58,919 --> 00:20:00,299
starting a foregone notification service

453
00:20:00,299 --> 00:20:02,039
here so the in my notification

454
00:20:02,039 --> 00:20:03,600
implementation is done in another file

455
00:20:03,600 --> 00:20:05,280
but I'm just showing how the bypass

456
00:20:05,280 --> 00:20:06,720
looks like right here's the Start

457
00:20:06,720 --> 00:20:08,940
program notification service then you go

458
00:20:08,940 --> 00:20:11,340
into there you create a runnable you

459
00:20:11,340 --> 00:20:13,500
create a thread and once you create a

460
00:20:13,500 --> 00:20:15,840
thread right it goes to another like

461
00:20:15,840 --> 00:20:18,480
another space and it starts recording

462
00:20:18,480 --> 00:20:20,460
then what it does is it it closes the

463
00:20:20,460 --> 00:20:22,140
fogon notification under that five

464
00:20:22,140 --> 00:20:23,460
seconds so if you start Focus

465
00:20:23,460 --> 00:20:26,280
modification then you start the old

466
00:20:26,280 --> 00:20:27,840
wipers used to work like this you start

467
00:20:27,840 --> 00:20:31,740
for notification you uh give like a call

468
00:20:31,740 --> 00:20:33,660
to the media server it starts recording

469
00:20:33,660 --> 00:20:35,700
and then it stops the organization but

470
00:20:35,700 --> 00:20:37,500
it takes time it takes more time than

471
00:20:37,500 --> 00:20:39,720
five seconds right uh so Google patched

472
00:20:39,720 --> 00:20:41,880
it and what I did was I started a thread

473
00:20:41,880 --> 00:20:44,700
here you started runnable and once you

474
00:20:44,700 --> 00:20:46,620
start a thread you under that you have

475
00:20:46,620 --> 00:20:49,320
to run uh the start recording call once

476
00:20:49,320 --> 00:20:51,179
you start recording call is done it will

477
00:20:51,179 --> 00:20:52,980
record for two minutes and then it will

478
00:20:52,980 --> 00:20:56,039
so basically uh the code only understand

479
00:20:56,039 --> 00:20:57,960
the Android what Android is seeing is

480
00:20:57,960 --> 00:21:00,000
there's a Start program there's a thread

481
00:21:00,000 --> 00:21:01,620
right once the Start program is called

482
00:21:01,620 --> 00:21:04,140
the the thread goes to another space so

483
00:21:04,140 --> 00:21:05,640
it do not have any connection with the

484
00:21:05,640 --> 00:21:07,500
uh this

485
00:21:07,500 --> 00:21:09,419
uh it will not be on the main process

486
00:21:09,419 --> 00:21:12,480
right on the main uh application thread

487
00:21:12,480 --> 00:21:15,360
so it goes to another space and it

488
00:21:15,360 --> 00:21:17,220
directly stops the foga notification so

489
00:21:17,220 --> 00:21:18,539
basically it's starting and stopping the

490
00:21:18,539 --> 00:21:20,039
four corner division within like two or

491
00:21:20,039 --> 00:21:21,660
three seconds so it doesn't takes like

492
00:21:21,660 --> 00:21:24,059
five seconds so it uh works like that so

493
00:21:24,059 --> 00:21:26,640
uh this is how it is working I am

494
00:21:26,640 --> 00:21:27,960
starting the Fogo notification service

495
00:21:27,960 --> 00:21:30,120
here and I what I'm doing is I'm

496
00:21:30,120 --> 00:21:32,280
starting the thread right after that and

497
00:21:32,280 --> 00:21:34,919
what it does it uh whatever we are going

498
00:21:34,919 --> 00:21:37,679
to do like the camera snaps uh the

499
00:21:37,679 --> 00:21:40,440
camera location and sorry not the camera

500
00:21:40,440 --> 00:21:42,679
location camera

501
00:21:42,679 --> 00:21:44,460
microphone and the location right

502
00:21:44,460 --> 00:21:46,620
whatever we are doing uh will have to do

503
00:21:46,620 --> 00:21:48,600
Under the thread and we'll have to stop

504
00:21:48,600 --> 00:21:49,980
the foreground notifications after that

505
00:21:49,980 --> 00:21:53,700
so uh it's uh

506
00:21:53,700 --> 00:21:56,460
so we'll be uh

507
00:21:56,460 --> 00:21:59,460
we'll see how exactly it works

508
00:21:59,460 --> 00:22:02,659
will have a demo

509
00:22:12,120 --> 00:22:15,360
fine so here's the code

510
00:22:15,360 --> 00:22:19,039
I wrote once again

511
00:22:34,260 --> 00:22:37,260
foreign

512
00:22:40,039 --> 00:22:43,919
so I have connected my uh USB cable with

513
00:22:43,919 --> 00:22:45,419
it for and

514
00:22:45,419 --> 00:22:48,179
USB debugging is enabled but uh in real

515
00:22:48,179 --> 00:22:50,100
life scenario you do not need it I just

516
00:22:50,100 --> 00:22:52,500
connected it to show the logs out here

517
00:22:52,500 --> 00:22:55,080
so it's not needed basically

518
00:22:55,080 --> 00:22:56,820
so I'll be uh installing this

519
00:22:56,820 --> 00:22:58,799
application so first I'll be installing

520
00:22:58,799 --> 00:23:00,960
the application with the old Pipers

521
00:23:00,960 --> 00:23:02,580
which is this

522
00:23:02,580 --> 00:23:05,940
and then I'll start with uh my new

523
00:23:05,940 --> 00:23:07,980
bypass which I

524
00:23:07,980 --> 00:23:10,559
so I'll just comment it out and I'll

525
00:23:10,559 --> 00:23:14,120
install the old wipers first

526
00:23:36,900 --> 00:23:39,059
so this is the application so I'll just

527
00:23:39,059 --> 00:23:40,320
allow

528
00:23:40,320 --> 00:23:42,780
this allow this I'll close the

529
00:23:42,780 --> 00:23:46,879
application you will be able to uh

530
00:23:47,159 --> 00:23:48,900
I'll close all the application it's

531
00:23:48,900 --> 00:23:50,820
running in background so these are the

532
00:23:50,820 --> 00:23:52,260
logs we'll follow the logs so understand

533
00:23:52,260 --> 00:23:54,720
how it's working

534
00:23:54,720 --> 00:23:57,659
so we'll have to wait for like uh

535
00:23:57,659 --> 00:24:00,260
two minutes

536
00:24:09,740 --> 00:24:12,960
so this is basically the old bypass and

537
00:24:12,960 --> 00:24:14,820
it does not work now and I'll show you

538
00:24:14,820 --> 00:24:16,380
how

539
00:24:16,380 --> 00:24:20,840
how this looks right now on Android 10

540
00:24:30,000 --> 00:24:32,580
so it takes around two minutes uh to get

541
00:24:32,580 --> 00:24:33,900
started because I have closed the

542
00:24:33,900 --> 00:24:36,200
application

543
00:24:50,600 --> 00:24:53,460
so what this code does is it starts it

544
00:24:53,460 --> 00:24:55,980
tries to access your microphone and then

545
00:24:55,980 --> 00:24:58,700
start recording

546
00:24:58,850 --> 00:25:01,919
[Music]

547
00:25:16,440 --> 00:25:18,780
so it started like uh so the race demo

548
00:25:18,780 --> 00:25:20,880
is starting and uh you can see the

549
00:25:20,880 --> 00:25:23,580
notification do not uh vanishes right

550
00:25:23,580 --> 00:25:25,260
and this is exactly where you can

551
00:25:25,260 --> 00:25:26,940
understand that your you know someone is

552
00:25:26,940 --> 00:25:28,260
trying to access your microphone or

553
00:25:28,260 --> 00:25:29,640
someone is trying to do something with

554
00:25:29,640 --> 00:25:31,260
your phone right this is the old device

555
00:25:31,260 --> 00:25:33,240
and do not do not works on current

556
00:25:33,240 --> 00:25:36,360
Android 10. so I'll just comment this

557
00:25:36,360 --> 00:25:36,630
out

558
00:25:36,630 --> 00:25:37,799
[Music]

559
00:25:37,799 --> 00:25:40,320
and uh this is the new code this is the

560
00:25:40,320 --> 00:25:42,860
new bypass

561
00:25:45,299 --> 00:25:48,440
so I'll just uh

562
00:25:48,720 --> 00:25:51,860
reinstall it

563
00:25:58,320 --> 00:26:00,539
so this is the I have reinstalled the

564
00:26:00,539 --> 00:26:01,679
application

565
00:26:01,679 --> 00:26:04,820
and I'll close it

566
00:26:08,340 --> 00:26:09,900
so we'll have to wait for more two

567
00:26:09,900 --> 00:26:12,140
minutes

568
00:26:13,370 --> 00:26:21,500
[Music]

569
00:26:21,500 --> 00:26:24,500
thank you

570
00:26:27,600 --> 00:26:29,580
so the phone is very slow and that is

571
00:26:29,580 --> 00:26:31,020
why you will able to see that you'll be

572
00:26:31,020 --> 00:26:32,880
able to see the notification and then it

573
00:26:32,880 --> 00:26:35,820
it will vanish but in the modern phones

574
00:26:35,820 --> 00:26:37,440
right it will you will not be able to

575
00:26:37,440 --> 00:26:40,039
Spot It

576
00:26:55,110 --> 00:26:58,270
[Music]

577
00:26:59,000 --> 00:27:00,530
thank you

578
00:27:00,530 --> 00:27:04,250
[Music]

579
00:27:08,360 --> 00:27:11,100
so it will take around 2 minutes to

580
00:27:11,100 --> 00:27:12,240
start

581
00:27:12,240 --> 00:27:14,750
[Applause]

582
00:27:14,750 --> 00:27:16,050
[Music]

583
00:27:16,050 --> 00:27:19,329
[Applause]

584
00:27:19,480 --> 00:27:19,980
[Music]

585
00:27:19,980 --> 00:27:22,080
[Applause]

586
00:27:22,080 --> 00:27:24,500
foreign

587
00:27:24,500 --> 00:27:28,079
[Music]

588
00:27:52,799 --> 00:27:55,080
so what did we already have learned

589
00:27:55,080 --> 00:27:57,000
right so uh what it does is start the

590
00:27:57,000 --> 00:27:59,220
photo notification goes it calls the

591
00:27:59,220 --> 00:28:01,860
recorder and then it go it stops the

592
00:28:01,860 --> 00:28:03,960
notification notification right we it's

593
00:28:03,960 --> 00:28:06,299
it's still recording and uh we can't see

594
00:28:06,299 --> 00:28:07,620
it over the notifications you can see

595
00:28:07,620 --> 00:28:09,360
there's no notification of recording but

596
00:28:09,360 --> 00:28:12,059
if you go to data and you search this

597
00:28:12,059 --> 00:28:15,299
application and uh you'll see a folder

598
00:28:15,299 --> 00:28:17,640
and you can see cache you'll see the

599
00:28:17,640 --> 00:28:18,900
recordings are there right it started

600
00:28:18,900 --> 00:28:20,700
recording and if you refresh you can see

601
00:28:20,700 --> 00:28:22,740
the size is increasing because it's it's

602
00:28:22,740 --> 00:28:24,840
currently recording

603
00:28:24,840 --> 00:28:27,840
can you guys see can I guess

604
00:28:27,840 --> 00:28:29,880
you can you can see it's still recording

605
00:28:29,880 --> 00:28:32,059
right

606
00:28:33,360 --> 00:28:34,919
so this is how the bypass is working

607
00:28:34,919 --> 00:28:37,919
you'll see the new recordings added so

608
00:28:37,919 --> 00:28:40,260
uh there's no photography it will just

609
00:28:40,260 --> 00:28:42,240
vanish but in modern phones right you'll

610
00:28:42,240 --> 00:28:44,700
not even able to spot it because it's

611
00:28:44,700 --> 00:28:46,140
very very fast

612
00:28:46,140 --> 00:28:49,279
so uh

613
00:28:50,039 --> 00:28:52,919
so guys uh thank you

614
00:28:52,919 --> 00:28:55,880
and uh

615
00:28:56,390 --> 00:28:57,540
[Applause]

616
00:28:57,540 --> 00:28:58,640
[Music]

617
00:28:58,640 --> 00:29:01,760
thank you

618
00:29:03,179 --> 00:29:06,919
so if there any questions you can ask

619
00:29:18,020 --> 00:29:20,460
any questions guys

620
00:29:20,460 --> 00:29:24,179
okay hello uh first of all thanks for

621
00:29:24,179 --> 00:29:26,340
the talk I really enjoyed it

622
00:29:26,340 --> 00:29:29,159
and so my question is uh so I saw that

623
00:29:29,159 --> 00:29:30,720
you were spawning the thread multiple

624
00:29:30,720 --> 00:29:33,600
times in a loop right so was it for uh

625
00:29:33,600 --> 00:29:35,399
keeping it alive

626
00:29:35,399 --> 00:29:38,760
uh no it it's basically uh the time

627
00:29:38,760 --> 00:29:40,260
frame is there right the five seconds of

628
00:29:40,260 --> 00:29:42,120
time frame so you'll have to call it

629
00:29:42,120 --> 00:29:43,679
between that particular time frame so

630
00:29:43,679 --> 00:29:46,320
that is why what I'm doing is uh

631
00:29:46,320 --> 00:29:48,600
I am starting the thread so that it goes

632
00:29:48,600 --> 00:29:50,760
to another space and it directly stops

633
00:29:50,760 --> 00:29:53,220
the notification so it's done under like

634
00:29:53,220 --> 00:29:54,840
two three seconds so that is why I'm

635
00:29:54,840 --> 00:29:56,940
using the threads for the wipers okay so

636
00:29:56,940 --> 00:30:00,260
to increase the time right to increase

637
00:30:04,080 --> 00:30:07,399
any more questions guys

638
00:30:09,600 --> 00:30:12,439
anyone else

639
00:30:14,399 --> 00:30:17,399
I just want to ask that this is working

640
00:30:17,399 --> 00:30:19,620
for Android 10 and above for all right

641
00:30:19,620 --> 00:30:21,960
the interesting interesting thing about

642
00:30:21,960 --> 00:30:24,059
this talk is the bypass is still the

643
00:30:24,059 --> 00:30:26,039
bypass still is working and and still

644
00:30:26,039 --> 00:30:28,559
works up to Android 10 Google told me

645
00:30:28,559 --> 00:30:30,659
that they will not fix it so basically

646
00:30:30,659 --> 00:30:33,059
uh to fix it right this far to fix this

647
00:30:33,059 --> 00:30:34,559
bug there's there's a lot of

648
00:30:34,559 --> 00:30:36,720
infrastructure changes has to be done so

649
00:30:36,720 --> 00:30:38,700
it will still be there the bug will

650
00:30:38,700 --> 00:30:40,620
still be there like what about Android

651
00:30:40,620 --> 00:30:43,679
11 and 12. Android 11 Android 11 they

652
00:30:43,679 --> 00:30:46,860
fixed it uh so because it's not fixed in

653
00:30:46,860 --> 00:30:49,559
Android 10 right I have not received any

654
00:30:49,559 --> 00:30:51,179
CVS for that that is that is the reason

655
00:30:51,179 --> 00:30:53,700
for not receiving any CV okay thank you

656
00:30:53,700 --> 00:30:57,080
thank you thank you so much

