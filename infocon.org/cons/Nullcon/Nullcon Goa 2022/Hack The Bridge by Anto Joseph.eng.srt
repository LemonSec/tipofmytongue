1
00:00:03,319 --> 00:00:07,200
at the bridge right so

2
00:00:07,200 --> 00:00:09,480
uh I guess I'll keep this kind of

3
00:00:09,480 --> 00:00:12,300
interactive uh how many of you have like

4
00:00:12,300 --> 00:00:15,680
actually used a blockchain system like

5
00:00:15,680 --> 00:00:18,900
Bitcoin ethereum anything like that a

6
00:00:18,900 --> 00:00:21,600
quick race of hands

7
00:00:21,600 --> 00:00:23,880
okay

8
00:00:23,880 --> 00:00:27,480
all right so uh yeah and I'm sure plenty

9
00:00:27,480 --> 00:00:29,240
of you pretty much of you have heard of

10
00:00:29,240 --> 00:00:31,679
cryptocurrencies web three right that's

11
00:00:31,679 --> 00:00:34,160
that's all the hype right so

12
00:00:34,160 --> 00:00:37,079
because we do not have a big population

13
00:00:37,079 --> 00:00:40,079
of people who are familiar with the

14
00:00:40,079 --> 00:00:42,120
system we'll go through the basics and

15
00:00:42,120 --> 00:00:44,340
then we'll get to the bridge

16
00:00:44,340 --> 00:00:46,739
okay awesome

17
00:00:46,739 --> 00:00:49,140
so a little bit about myself

18
00:00:49,140 --> 00:00:51,480
uh my name is Andrew Joseph

19
00:00:51,480 --> 00:00:53,879
I work as a security engineer at

20
00:00:53,879 --> 00:00:55,260
coinbase

21
00:00:55,260 --> 00:00:57,480
I've been a speaker and trainer at a

22
00:00:57,480 --> 00:00:59,780
couple of these conferences

23
00:00:59,780 --> 00:01:03,180
and I love to be at nelcon this I

24
00:01:03,180 --> 00:01:04,799
believe is my sixth or seventh time at

25
00:01:04,799 --> 00:01:07,320
nalkan I love it here thanks to the

26
00:01:07,320 --> 00:01:09,900
organizers for having me

27
00:01:09,900 --> 00:01:12,960
I am interested in distributed systems

28
00:01:12,960 --> 00:01:14,100
as you can imagine

29
00:01:14,100 --> 00:01:16,619
other than computers I also do some

30
00:01:16,619 --> 00:01:17,780
biotech

31
00:01:17,780 --> 00:01:20,280
and I love to do

32
00:01:20,280 --> 00:01:23,100
some jet skiing and some rock climbing

33
00:01:23,100 --> 00:01:26,320
and DJing

34
00:01:26,320 --> 00:01:27,900
[Music]

35
00:01:27,900 --> 00:01:30,180
okay so this is this is very very

36
00:01:30,180 --> 00:01:32,580
important I couldn't stress this enough

37
00:01:32,580 --> 00:01:35,299
because we are gonna talk about money

38
00:01:35,299 --> 00:01:38,880
this is not Financial advice

39
00:01:38,880 --> 00:01:41,759
please you should be really careful

40
00:01:41,759 --> 00:01:44,159
about this you will share a lot of

41
00:01:44,159 --> 00:01:46,680
things in this talk but none of this is

42
00:01:46,680 --> 00:01:49,500
financial advice it is also not legal

43
00:01:49,500 --> 00:01:50,579
advice

44
00:01:50,579 --> 00:01:53,880
these are purely my opinion and none of

45
00:01:53,880 --> 00:01:56,100
my employers

46
00:01:56,100 --> 00:01:58,079
and this is only meant for educational

47
00:01:58,079 --> 00:02:00,180
purposes so we'll be discussing some

48
00:02:00,180 --> 00:02:01,500
exploits

49
00:02:01,500 --> 00:02:04,500
and we will demonstrate them but this

50
00:02:04,500 --> 00:02:07,560
it's only intended for learning purposes

51
00:02:07,560 --> 00:02:09,979
okay

52
00:02:10,080 --> 00:02:13,080
blockchains 101 right what are

53
00:02:13,080 --> 00:02:17,040
blockchains so at the very basic so we

54
00:02:17,040 --> 00:02:19,020
aren't going in depth we are going broad

55
00:02:19,020 --> 00:02:22,140
so at the very basic it's basically a

56
00:02:22,140 --> 00:02:24,720
list of transactions that anyone can

57
00:02:24,720 --> 00:02:26,400
view and verify

58
00:02:26,400 --> 00:02:28,620
so if you think of the Bitcoin

59
00:02:28,620 --> 00:02:31,140
blockchain sending

60
00:02:31,140 --> 00:02:34,739
a Bitcoin to another party essentially

61
00:02:34,739 --> 00:02:37,800
means a transaction and it's publicly

62
00:02:37,800 --> 00:02:41,040
available for anyone to see and verify

63
00:02:41,040 --> 00:02:43,980
now Bitcoin allows you to like send and

64
00:02:43,980 --> 00:02:46,019
receive right

65
00:02:46,019 --> 00:02:48,300
that's awesome and it has great

66
00:02:48,300 --> 00:02:52,080
properties now can we do more with

67
00:02:52,080 --> 00:02:54,300
blockchains right and that's what

68
00:02:54,300 --> 00:02:57,000
ethereum does ethereum allows you to

69
00:02:57,000 --> 00:02:59,700
have distributed compute on a blockchain

70
00:02:59,700 --> 00:03:04,319
so instead of sending just value like

71
00:03:04,319 --> 00:03:07,260
Bitcoin has some value right so if I

72
00:03:07,260 --> 00:03:08,640
send you some Bitcoin I'm sending you

73
00:03:08,640 --> 00:03:10,019
some value

74
00:03:10,019 --> 00:03:13,140
but can I also do compute that is what

75
00:03:13,140 --> 00:03:15,900
ethereum really solves so

76
00:03:15,900 --> 00:03:19,319
it's it's also a distributed Ledger but

77
00:03:19,319 --> 00:03:21,720
it's also a computational platform where

78
00:03:21,720 --> 00:03:24,239
you can deploy code so a way to like

79
00:03:24,239 --> 00:03:27,000
imagine this is you might write some

80
00:03:27,000 --> 00:03:30,720
code and like python or like uh

81
00:03:30,720 --> 00:03:32,879
I don't know node.js or something right

82
00:03:32,879 --> 00:03:35,400
and you would deploy it to a server at

83
00:03:35,400 --> 00:03:37,260
where people can access it

84
00:03:37,260 --> 00:03:40,920
now if your server goes down that's it

85
00:03:40,920 --> 00:03:44,040
people can't access it anymore when you

86
00:03:44,040 --> 00:03:46,159
deploy your code to like a blockchain

87
00:03:46,159 --> 00:03:50,040
every node that runs the blockchain also

88
00:03:50,040 --> 00:03:53,580
has a copy of it hence distributed right

89
00:03:53,580 --> 00:03:56,640
and the execution of it the

90
00:03:56,640 --> 00:03:58,860
computational Integrity of the execution

91
00:03:58,860 --> 00:04:01,799
is guaranteed by executing the same code

92
00:04:01,799 --> 00:04:04,700
in all the nodes of a blockchain so

93
00:04:04,700 --> 00:04:08,099
assume I have a calculator on my Mac

94
00:04:08,099 --> 00:04:12,120
I can make 2 plus 2 equals 5 because

95
00:04:12,120 --> 00:04:15,180
it's the calculator runs on my laptop

96
00:04:15,180 --> 00:04:17,160
right I can just hook into the program

97
00:04:17,160 --> 00:04:20,279
and modify the output but

98
00:04:20,279 --> 00:04:23,460
when I run the same compute on millions

99
00:04:23,460 --> 00:04:25,860
of computers right I cannot hack all

100
00:04:25,860 --> 00:04:27,360
these computers and like change the

101
00:04:27,360 --> 00:04:29,580
output that is how the computational

102
00:04:29,580 --> 00:04:31,560
Integrity of

103
00:04:31,560 --> 00:04:34,440
a contract a smart contract which is a

104
00:04:34,440 --> 00:04:36,840
piece of code that you would deploy to a

105
00:04:36,840 --> 00:04:38,639
blockchain a smart contract blockchain

106
00:04:38,639 --> 00:04:41,880
like ethereum works and that is how they

107
00:04:41,880 --> 00:04:44,160
ensure the Integrity of it

108
00:04:44,160 --> 00:04:47,340
if at any point you have questions uh

109
00:04:47,340 --> 00:04:49,979
please raise your hand or at the end of

110
00:04:49,979 --> 00:04:53,040
it we can have like at five minutes to

111
00:04:53,040 --> 00:04:55,979
like talk about this question

112
00:04:55,979 --> 00:04:59,580
all right so a very broad overview of

113
00:04:59,580 --> 00:05:01,440
what a blockchain looks like a

114
00:05:01,440 --> 00:05:04,620
blockchain the Block in it is basically

115
00:05:04,620 --> 00:05:08,040
you build blocks one after the other and

116
00:05:08,040 --> 00:05:10,680
the previous block will reference the

117
00:05:10,680 --> 00:05:12,840
one before

118
00:05:12,840 --> 00:05:16,699
and if you want to build a block after

119
00:05:16,699 --> 00:05:19,500
so imagine block 10 right if you want to

120
00:05:19,500 --> 00:05:22,500
build a block after that it has to which

121
00:05:22,500 --> 00:05:24,780
it will be block 11 and it has to build

122
00:05:24,780 --> 00:05:28,020
on top of block 10 and that is how they

123
00:05:28,020 --> 00:05:29,699
ensure the chain

124
00:05:29,699 --> 00:05:31,620
you can't just come up with a block and

125
00:05:31,620 --> 00:05:34,740
ask it to be a part of a blockchain it

126
00:05:34,740 --> 00:05:36,240
has to follow

127
00:05:36,240 --> 00:05:39,120
a structure imagine

128
00:05:39,120 --> 00:05:41,340
it has a linked list if you are into

129
00:05:41,340 --> 00:05:43,199
data structures it's more like a linked

130
00:05:43,199 --> 00:05:47,280
list right and then uh we we discuss

131
00:05:47,280 --> 00:05:50,340
that there are transactions that are

132
00:05:50,340 --> 00:05:52,259
part of a block

133
00:05:52,259 --> 00:05:53,400
so

134
00:05:53,400 --> 00:05:55,919
you can see that

135
00:05:55,919 --> 00:05:58,440
in the middle there is like a tree like

136
00:05:58,440 --> 00:06:01,680
structure it's a Merkel tree so a Merkel

137
00:06:01,680 --> 00:06:04,139
tree is is a data structure that you can

138
00:06:04,139 --> 00:06:07,800
use uh to like

139
00:06:07,800 --> 00:06:10,380
come commit to a root which is the

140
00:06:10,380 --> 00:06:14,100
Merkel root and thereby ensuring the

141
00:06:14,100 --> 00:06:16,259
Integrity of the transactions which are

142
00:06:16,259 --> 00:06:19,199
part of that Merkel tree and we'll come

143
00:06:19,199 --> 00:06:22,020
and we will we'll talk to talk a lot

144
00:06:22,020 --> 00:06:25,819
more about it in the other slides but

145
00:06:25,819 --> 00:06:28,919
this is how a transaction route is

146
00:06:28,919 --> 00:06:32,160
arrived and that route

147
00:06:32,160 --> 00:06:34,979
kind of attest to the Integrity of all

148
00:06:34,979 --> 00:06:39,120
the transactions that are are

149
00:06:39,120 --> 00:06:41,100
attest to the

150
00:06:41,100 --> 00:06:45,660
inclusion of transactions in that block

151
00:06:45,660 --> 00:06:48,120
all right so smart contracts what are

152
00:06:48,120 --> 00:06:51,180
smart contracts right it is sometimes

153
00:06:51,180 --> 00:06:54,840
immutable when smart contracts became a

154
00:06:54,840 --> 00:06:56,699
thing with ethereum they were not

155
00:06:56,699 --> 00:06:59,280
immutable but now we have more smart

156
00:06:59,280 --> 00:07:01,259
contract platforms and they allow

157
00:07:01,259 --> 00:07:03,600
upgrades for smart contracts hence

158
00:07:03,600 --> 00:07:07,680
sometimes immutable and it runs on a

159
00:07:07,680 --> 00:07:10,020
blockchain like ethereum Solana Cosmos

160
00:07:10,020 --> 00:07:11,340
these are all different kind of

161
00:07:11,340 --> 00:07:13,500
blockchains and they all have different

162
00:07:13,500 --> 00:07:15,900
guarantees

163
00:07:15,900 --> 00:07:18,360
and they allow developers to build apps

164
00:07:18,360 --> 00:07:21,060
the apps that you Deploy on blockchains

165
00:07:21,060 --> 00:07:23,099
are called dapps

166
00:07:23,099 --> 00:07:24,900
and they take advantage of the

167
00:07:24,900 --> 00:07:26,759
blockchain security that they offer

168
00:07:26,759 --> 00:07:29,580
which is reliability accessibility and

169
00:07:29,580 --> 00:07:32,520
distributed execution

170
00:07:32,520 --> 00:07:35,759
and you can have all sorts of apps built

171
00:07:35,759 --> 00:07:40,639
on blockchains I think we see a lot of

172
00:07:40,639 --> 00:07:43,560
financial applications that are built on

173
00:07:43,560 --> 00:07:46,800
these blockchains and they seem to have

174
00:07:46,800 --> 00:07:49,259
the most product Market fit we also have

175
00:07:49,259 --> 00:07:53,400
things like nfts and like daos so

176
00:07:53,400 --> 00:07:56,520
there is a lot of activity going on and

177
00:07:56,520 --> 00:07:58,620
if you are interested in seeing what's

178
00:07:58,620 --> 00:08:00,419
going on you can look at a block

179
00:08:00,419 --> 00:08:03,360
Explorer like either scan which allows

180
00:08:03,360 --> 00:08:05,580
you to like look at all the transactions

181
00:08:05,580 --> 00:08:08,460
and the activity that happens in a

182
00:08:08,460 --> 00:08:12,419
blockchain like ethereum for example

183
00:08:12,419 --> 00:08:14,880
now what do these smart contracts look

184
00:08:14,880 --> 00:08:16,919
like right they just look like regular

185
00:08:16,919 --> 00:08:20,699
code so uh on your left you will see a

186
00:08:20,699 --> 00:08:24,240
bunch of code and the the very very one

187
00:08:24,240 --> 00:08:27,479
on the left is solidity and in the

188
00:08:27,479 --> 00:08:30,180
middle you have rust and then all the

189
00:08:30,180 --> 00:08:33,240
way to your right it's go so it's not

190
00:08:33,240 --> 00:08:36,059
something special you probably know this

191
00:08:36,059 --> 00:08:38,458
language is already it's just the way

192
00:08:38,458 --> 00:08:40,559
you write and think about these programs

193
00:08:40,559 --> 00:08:43,559
that are actually different uh Pro yeah

194
00:08:43,559 --> 00:08:46,440
so you can these are some of the popular

195
00:08:46,440 --> 00:08:48,740
smart contract programming languages

196
00:08:48,740 --> 00:08:52,260
solidity is used by the evm or the

197
00:08:52,260 --> 00:08:55,380
ethereum virtual machine and then uh

198
00:08:55,380 --> 00:08:59,399
rust is made Popular by Solana and then

199
00:08:59,399 --> 00:09:02,339
a go is made Popular by the cosmos

200
00:09:02,339 --> 00:09:04,880
ecosystem

201
00:09:05,399 --> 00:09:06,600
foreign

202
00:09:06,600 --> 00:09:09,320
so

203
00:09:09,320 --> 00:09:13,080
I think the most two most popular

204
00:09:13,080 --> 00:09:16,440
blockchains are Bitcoin and ethereum

205
00:09:16,440 --> 00:09:18,779
right if imagine you have a lot of

206
00:09:18,779 --> 00:09:22,640
Bitcoin that that would be nice right

207
00:09:22,640 --> 00:09:26,100
now you want to do something with it uh

208
00:09:26,100 --> 00:09:28,560
sure it's nice when the numbers go up

209
00:09:28,560 --> 00:09:31,980
but what what do you do with it like you

210
00:09:31,980 --> 00:09:35,160
may want to lend borrow uh maybe get

211
00:09:35,160 --> 00:09:37,440
some yield these are like normal

212
00:09:37,440 --> 00:09:41,279
Financial applications that a bank would

213
00:09:41,279 --> 00:09:44,040
uh provide you with right so if you have

214
00:09:44,040 --> 00:09:46,500
some gold and then you deposited the

215
00:09:46,500 --> 00:09:48,660
bank maybe you can take a loan against

216
00:09:48,660 --> 00:09:50,820
it that that's in that seems reasonable

217
00:09:50,820 --> 00:09:53,640
right can can I do that with Bitcoin

218
00:09:53,640 --> 00:09:56,399
right you you could go to like a crypto

219
00:09:56,399 --> 00:09:58,620
bank and do it

220
00:09:58,620 --> 00:10:01,500
then you would have to give them your

221
00:10:01,500 --> 00:10:03,300
custody of Bitcoins

222
00:10:03,300 --> 00:10:06,120
uh if the bank

223
00:10:06,120 --> 00:10:07,620
gets hacked

224
00:10:07,620 --> 00:10:10,320
that's it that's there goes your Bitcoin

225
00:10:10,320 --> 00:10:13,500
right so and that doesn't seem so great

226
00:10:13,500 --> 00:10:17,820
now can I do this without trusting a

227
00:10:17,820 --> 00:10:20,459
centralized entity right the idea of

228
00:10:20,459 --> 00:10:22,380
blockchains are all about decentralized

229
00:10:22,380 --> 00:10:24,720
and trust yourself so kind of doesn't

230
00:10:24,720 --> 00:10:26,339
make a lot of sense if you are just

231
00:10:26,339 --> 00:10:30,000
gonna go back to a bank so the idea is

232
00:10:30,000 --> 00:10:32,940
maybe you can send some of your Bitcoins

233
00:10:32,940 --> 00:10:36,540
over to a network which has computation

234
00:10:36,540 --> 00:10:39,540
because to lend and borrow and to get

235
00:10:39,540 --> 00:10:41,640
some yield you need to run some code

236
00:10:41,640 --> 00:10:43,500
right it's it's it's not just

237
00:10:43,500 --> 00:10:46,019
transactions anymore there needs to be

238
00:10:46,019 --> 00:10:48,540
math involved and then

239
00:10:48,540 --> 00:10:50,700
ethereum is one such smart contract

240
00:10:50,700 --> 00:10:54,180
programming smart contract blockchains

241
00:10:54,180 --> 00:10:57,120
where you can run code that is written

242
00:10:57,120 --> 00:10:59,160
in solidity and then there are other

243
00:10:59,160 --> 00:11:02,040
languages like Viper so

244
00:11:02,040 --> 00:11:04,339
that's the idea behind bridging

245
00:11:04,339 --> 00:11:07,920
basically sending your tokens which are

246
00:11:07,920 --> 00:11:11,880
native to one one blockchain over to the

247
00:11:11,880 --> 00:11:12,790
other blockchain

248
00:11:12,790 --> 00:11:15,300
[Music]

249
00:11:15,300 --> 00:11:18,300
so

250
00:11:18,839 --> 00:11:21,839
another scenario right we we have some

251
00:11:21,839 --> 00:11:24,600
ethereum like the native asset of the

252
00:11:24,600 --> 00:11:26,940
ethereum blockchain is ether and you

253
00:11:26,940 --> 00:11:30,180
want to use it on Solana right

254
00:11:30,180 --> 00:11:33,600
how do you send it across because the

255
00:11:33,600 --> 00:11:36,120
native asset which is either

256
00:11:36,120 --> 00:11:39,540
is not something that you can transfer

257
00:11:39,540 --> 00:11:41,640
to a completely different blockchain

258
00:11:41,640 --> 00:11:43,320
because

259
00:11:43,320 --> 00:11:46,500
these blockchains think of them are like

260
00:11:46,500 --> 00:11:49,140
think of them as like walled Gardens you

261
00:11:49,140 --> 00:11:52,079
cannot take them take something out of

262
00:11:52,079 --> 00:11:56,339
it and the asset which is either only

263
00:11:56,339 --> 00:12:00,360
accessed within the ethereum blockchain

264
00:12:00,360 --> 00:12:02,640
so how do I even do this right like I

265
00:12:02,640 --> 00:12:06,360
want to send my ether or my Bitcoin onto

266
00:12:06,360 --> 00:12:09,000
a different blockchain but that is not

267
00:12:09,000 --> 00:12:10,560
natively possible

268
00:12:10,560 --> 00:12:13,440
but there is a requirement for it right

269
00:12:13,440 --> 00:12:16,560
there is a market for it so that really

270
00:12:16,560 --> 00:12:19,840
gives rise to the the blockchain bridges

271
00:12:19,840 --> 00:12:21,360
[Music]

272
00:12:21,360 --> 00:12:23,880
so why would you Bridge right

273
00:12:23,880 --> 00:12:26,519
some blockchains uh

274
00:12:26,519 --> 00:12:29,339
claim they have like reduced transaction

275
00:12:29,339 --> 00:12:30,420
fees

276
00:12:30,420 --> 00:12:34,440
so blockchains have a trilemma where if

277
00:12:34,440 --> 00:12:37,019
they were to like really make themselves

278
00:12:37,019 --> 00:12:40,440
fast it won't be as inclusive

279
00:12:40,440 --> 00:12:43,620
and when you are not really that fast

280
00:12:43,620 --> 00:12:48,300
the block space that you have is will be

281
00:12:48,300 --> 00:12:50,700
limited and then you can't really make

282
00:12:50,700 --> 00:12:52,860
your blocks bigger because it will take

283
00:12:52,860 --> 00:12:55,380
longer to propagate and then all the

284
00:12:55,380 --> 00:12:57,300
nodes in your blockchain won't be able

285
00:12:57,300 --> 00:13:00,540
to get it or can be synchronized to the

286
00:13:00,540 --> 00:13:02,820
head of the block so reducing

287
00:13:02,820 --> 00:13:05,220
transaction fees is not as easy as

288
00:13:05,220 --> 00:13:07,820
someone turning a knob there are

289
00:13:07,820 --> 00:13:11,220
repercussions to it but still there are

290
00:13:11,220 --> 00:13:12,720
blockchains that claim to be

291
00:13:12,720 --> 00:13:14,880
decentralized and have reduced

292
00:13:14,880 --> 00:13:17,700
transaction fees and guess what people

293
00:13:17,700 --> 00:13:21,120
like reduce transaction fees so they'd

294
00:13:21,120 --> 00:13:22,860
want to transact in a blockchain where

295
00:13:22,860 --> 00:13:25,680
there is less fees and some blockchains

296
00:13:25,680 --> 00:13:29,519
claim to be really fast like Solana for

297
00:13:29,519 --> 00:13:31,800
example has a speed of like 400

298
00:13:31,800 --> 00:13:33,779
milliseconds or something like that that

299
00:13:33,779 --> 00:13:36,420
is amazing considering considering what

300
00:13:36,420 --> 00:13:38,459
ethereum blocks block time is which is

301
00:13:38,459 --> 00:13:40,500
around 12 to 14 seconds

302
00:13:40,500 --> 00:13:42,720
right and

303
00:13:42,720 --> 00:13:45,000
there are definitely advantages to like

304
00:13:45,000 --> 00:13:47,700
fast blockchains like an order Book

305
00:13:47,700 --> 00:13:51,480
Exchange on salana can update at least

306
00:13:51,480 --> 00:13:54,779
every 400 seconds whereas if you have an

307
00:13:54,779 --> 00:13:57,120
order Book Exchange on ethereum it will

308
00:13:57,120 --> 00:14:00,120
only update every 12 seconds so you you

309
00:14:00,120 --> 00:14:03,480
can see a problem here when numbers go

310
00:14:03,480 --> 00:14:06,300
up and the numbers on your blockchain is

311
00:14:06,300 --> 00:14:08,459
not that accurate or cannot be updated

312
00:14:08,459 --> 00:14:10,860
that fast there is an Arbitrage

313
00:14:10,860 --> 00:14:13,380
opportunity right so you can buy from

314
00:14:13,380 --> 00:14:16,880
here sell over there right so

315
00:14:16,880 --> 00:14:20,880
if there are reasons why you would use a

316
00:14:20,880 --> 00:14:23,339
particular blockchain over the other and

317
00:14:23,339 --> 00:14:26,160
right now it depends on the application

318
00:14:26,160 --> 00:14:28,680
that you are interested in

319
00:14:28,680 --> 00:14:32,279
and just like

320
00:14:32,279 --> 00:14:34,380
a blockchain every other blockchain has

321
00:14:34,380 --> 00:14:37,079
their own killer apps and sometimes you

322
00:14:37,079 --> 00:14:38,700
just want to use a killer app which is

323
00:14:38,700 --> 00:14:40,740
on a different blockchain and then you

324
00:14:40,740 --> 00:14:41,940
want to send

325
00:14:41,940 --> 00:14:44,579
some of your money over to that

326
00:14:44,579 --> 00:14:47,220
blockchain so you can use it so that you

327
00:14:47,220 --> 00:14:49,079
can pay for your transaction fees and

328
00:14:49,079 --> 00:14:50,040
interact with these Financial

329
00:14:50,040 --> 00:14:52,079
applications right

330
00:14:52,079 --> 00:14:55,199
and we have a bunch more uh reasons why

331
00:14:55,199 --> 00:14:57,000
you would want to do that but it's

332
00:14:57,000 --> 00:15:00,010
basically better ux and personal reasons

333
00:15:00,010 --> 00:15:01,160
[Music]

334
00:15:01,160 --> 00:15:02,940
right

335
00:15:02,940 --> 00:15:07,320
so we know that there is no way you

336
00:15:07,320 --> 00:15:12,180
could send the native asset over to a

337
00:15:12,180 --> 00:15:14,399
different blockchain like you cannot

338
00:15:14,399 --> 00:15:16,800
send the native Bitcoin from the Bitcoin

339
00:15:16,800 --> 00:15:19,079
blockchain over to the ethereum network

340
00:15:19,079 --> 00:15:22,199
so how do how do Bridges do that right

341
00:15:22,199 --> 00:15:25,320
so Bridges basically give you a

342
00:15:25,320 --> 00:15:28,860
representation of Bitcoin on

343
00:15:28,860 --> 00:15:32,639
the on the ethereum network so

344
00:15:32,639 --> 00:15:35,880
I would have an address like assume I'm

345
00:15:35,880 --> 00:15:38,699
a bridge right I would I'll ask people

346
00:15:38,699 --> 00:15:41,820
to like send me your Bitcoin and then I

347
00:15:41,820 --> 00:15:43,560
will credit

348
00:15:43,560 --> 00:15:47,399
a representation of Bitcoin on the

349
00:15:47,399 --> 00:15:50,699
ethereum network to your address

350
00:15:50,699 --> 00:15:53,639
so this this can be thought of like cdps

351
00:15:53,639 --> 00:15:56,220
if you are from the finance world or

352
00:15:56,220 --> 00:15:59,540
it's just a synthetic token so

353
00:15:59,540 --> 00:16:02,220
blockchains with compute allow you to

354
00:16:02,220 --> 00:16:04,199
create tokens

355
00:16:04,199 --> 00:16:06,560
and ethereum has a token standard called

356
00:16:06,560 --> 00:16:10,740
erc20s now you can create a token that

357
00:16:10,740 --> 00:16:14,279
is a synthetic representation of Bitcoin

358
00:16:14,279 --> 00:16:16,800
and one of the popular ones is called

359
00:16:16,800 --> 00:16:21,300
wrap Bitcoin or wbtc and it is custoded

360
00:16:21,300 --> 00:16:24,000
by bitco which is a company so

361
00:16:24,000 --> 00:16:26,100
essentially you send them your tokens

362
00:16:26,100 --> 00:16:29,160
and they will send you wrap Bitcoin

363
00:16:29,160 --> 00:16:32,940
tokens on an address that you specify on

364
00:16:32,940 --> 00:16:36,120
ethereum now you have Bitcoins on

365
00:16:36,120 --> 00:16:38,399
ethereum right

366
00:16:38,399 --> 00:16:40,440
there are different ways of doing that

367
00:16:40,440 --> 00:16:42,180
the one I described is a very

368
00:16:42,180 --> 00:16:44,820
centralized way of doing that and we

369
00:16:44,820 --> 00:16:47,519
want to move from centralized way of

370
00:16:47,519 --> 00:16:51,000
doing things to a different levels of

371
00:16:51,000 --> 00:16:53,839
decentralized way of doing it because

372
00:16:53,839 --> 00:16:56,699
decentralization is not really

373
00:16:56,699 --> 00:16:59,100
something you can measure but it's it's

374
00:16:59,100 --> 00:17:02,100
a spectrum right something can be more

375
00:17:02,100 --> 00:17:04,260
decentralized and some things can be

376
00:17:04,260 --> 00:17:06,660
less decentralized

377
00:17:06,660 --> 00:17:09,720
so there are two types of bridges that

378
00:17:09,720 --> 00:17:13,020
blockchain networks majorly use one is a

379
00:17:13,020 --> 00:17:15,839
cross Chain Bridge and the other is a

380
00:17:15,839 --> 00:17:17,459
multi-chain bridge

381
00:17:17,459 --> 00:17:20,099
so what is the cross Chain Bridge

382
00:17:20,099 --> 00:17:23,160
so if you are sending assets from assets

383
00:17:23,160 --> 00:17:25,740
to completely different blockchains like

384
00:17:25,740 --> 00:17:28,079
going from ethereum to Solana right that

385
00:17:28,079 --> 00:17:30,660
is a cross Chain Bridge and they have

386
00:17:30,660 --> 00:17:32,700
nothing in common so you are trusting

387
00:17:32,700 --> 00:17:35,160
something in the middle maybe you are

388
00:17:35,160 --> 00:17:37,080
trusting it a little bit but some of the

389
00:17:37,080 --> 00:17:39,000
examples of cross chain bridges are like

390
00:17:39,000 --> 00:17:41,820
Wormhole and nomad and then you have

391
00:17:41,820 --> 00:17:44,059
like multi-chain Bridges

392
00:17:44,059 --> 00:17:47,160
so multi-chain Bridges mostly deal with

393
00:17:47,160 --> 00:17:51,179
moving assets within an ecosystem for

394
00:17:51,179 --> 00:17:55,039
example ethereum has scaling Solutions

395
00:17:55,039 --> 00:17:58,500
like optimism and arbitrim these are

396
00:17:58,500 --> 00:18:01,860
optimistic roll ups and what that means

397
00:18:01,860 --> 00:18:05,580
is they take the computation of

398
00:18:05,580 --> 00:18:09,360
the base blockchain they do it that they

399
00:18:09,360 --> 00:18:12,360
do it off chain and then they commit the

400
00:18:12,360 --> 00:18:13,380
updates

401
00:18:13,380 --> 00:18:16,380
at certain intervals back to the base

402
00:18:16,380 --> 00:18:18,780
blockchain so that is how you could

403
00:18:18,780 --> 00:18:21,419
scale blockchains and optimism and

404
00:18:21,419 --> 00:18:23,640
arbitrum use an optimistic approach

405
00:18:23,640 --> 00:18:25,679
which uses something called as fraud

406
00:18:25,679 --> 00:18:28,100
proofs

407
00:18:28,500 --> 00:18:31,440
yeah or fault proofs and these are just

408
00:18:31,440 --> 00:18:34,620
proof systems which basically attest to

409
00:18:34,620 --> 00:18:36,720
the computational Integrity of the

410
00:18:36,720 --> 00:18:39,179
compute that they have done off chain

411
00:18:39,179 --> 00:18:41,940
uh some other examples of multi-chain

412
00:18:41,940 --> 00:18:44,280
bridges include like Cosmos which has

413
00:18:44,280 --> 00:18:46,260
IBC

414
00:18:46,260 --> 00:18:48,720
[Music]

415
00:18:48,720 --> 00:18:51,900
okay so as a as a user you are faced

416
00:18:51,900 --> 00:18:54,720
with this dilemma right do I use a cross

417
00:18:54,720 --> 00:18:57,539
Chain Bridge or do I use a multi-chain

418
00:18:57,539 --> 00:18:59,160
bridge

419
00:18:59,160 --> 00:19:03,000
and we have opinions right in in crypto

420
00:19:03,000 --> 00:19:05,400
space we have a lot of opinions and this

421
00:19:05,400 --> 00:19:07,620
comes from the co-founder of ethereum

422
00:19:07,620 --> 00:19:10,620
his name is vitalik buterin so he must

423
00:19:10,620 --> 00:19:12,900
be on to something right at least I

424
00:19:12,900 --> 00:19:14,400
think so so

425
00:19:14,400 --> 00:19:17,880
he believes the future of blockchains

426
00:19:17,880 --> 00:19:21,120
will be multi-chain and not cross chain

427
00:19:21,120 --> 00:19:25,020
because there are security issues going

428
00:19:25,020 --> 00:19:26,940
cross chain

429
00:19:26,940 --> 00:19:29,880
so what are these security issues right

430
00:19:29,880 --> 00:19:33,780
I'm sure some of you have heard of

431
00:19:33,780 --> 00:19:37,620
51 attacks which is like the most famous

432
00:19:37,620 --> 00:19:40,380
attack if you Google Bitcoin or

433
00:19:40,380 --> 00:19:42,419
blockchain security right

434
00:19:42,419 --> 00:19:47,039
because uh okay so what is a 51 attack

435
00:19:47,039 --> 00:19:50,400
it refers to like a potential attack on

436
00:19:50,400 --> 00:19:52,140
the Integrity of a proof of work

437
00:19:52,140 --> 00:19:55,380
blockchain so Bitcoin is a proof of a

438
00:19:55,380 --> 00:19:59,100
blockchain ethereum is also right now a

439
00:19:59,100 --> 00:20:01,320
proof of work blockchain and is going

440
00:20:01,320 --> 00:20:04,559
through a process called the merge after

441
00:20:04,559 --> 00:20:06,299
which it will become a proof of stake

442
00:20:06,299 --> 00:20:09,900
blockchain but we'll get back to that

443
00:20:09,900 --> 00:20:13,500
so when a single entity controls more

444
00:20:13,500 --> 00:20:14,760
than

445
00:20:14,760 --> 00:20:18,480
half of the hashing power of a proof of

446
00:20:18,480 --> 00:20:21,360
work blockchain they can basically

447
00:20:21,360 --> 00:20:26,240
double spend or sensor transactions and

448
00:20:26,240 --> 00:20:30,120
FF using a 51 percent attack you can

449
00:20:30,120 --> 00:20:33,840
re-org the chain and what that means is

450
00:20:33,840 --> 00:20:37,200
uh you produce block after block on a

451
00:20:37,200 --> 00:20:38,400
blockchain right

452
00:20:38,400 --> 00:20:41,880
because I have more compute power I can

453
00:20:41,880 --> 00:20:45,980
create a chain that conforms to all the

454
00:20:45,980 --> 00:20:50,039
rules of that particular blockchain but

455
00:20:50,039 --> 00:20:52,559
not release it

456
00:20:52,559 --> 00:20:56,820
and I mine it myself and then when I

457
00:20:56,820 --> 00:20:59,460
have enough number of blocks I can just

458
00:20:59,460 --> 00:21:02,820
expose it to the nodes and by the

459
00:21:02,820 --> 00:21:06,059
longest chain rule because I have

460
00:21:06,059 --> 00:21:08,940
a lot more compute and a lot more blocks

461
00:21:08,940 --> 00:21:11,100
built on my

462
00:21:11,100 --> 00:21:15,059
attack version of this Fork that for

463
00:21:15,059 --> 00:21:17,940
takes precedence over the legitimate

464
00:21:17,940 --> 00:21:20,580
blocks that have been built

465
00:21:20,580 --> 00:21:24,660
so it's basically saying that the proof

466
00:21:24,660 --> 00:21:29,340
of work blockchains are as good as

467
00:21:29,340 --> 00:21:31,380
then amount of

468
00:21:31,380 --> 00:21:34,980
hash power that a single entity can

469
00:21:34,980 --> 00:21:35,880
control

470
00:21:35,880 --> 00:21:38,340
so if an entity can control 51 percent

471
00:21:38,340 --> 00:21:41,700
or more or more a lot of guarantees

472
00:21:41,700 --> 00:21:46,640
offered by these blockchains are closed

473
00:21:47,640 --> 00:21:50,580
so this is the scenario that we are

474
00:21:50,580 --> 00:21:51,720
talking about

475
00:21:51,720 --> 00:21:55,020
so a bridge you can Bridge like 100 days

476
00:21:55,020 --> 00:21:58,320
from ethereum to Solana and then you can

477
00:21:58,320 --> 00:22:00,500
swap so this

478
00:22:00,500 --> 00:22:03,900
blockchains have applications that that

479
00:22:03,900 --> 00:22:06,120
are similar to exchanges where you can

480
00:22:06,120 --> 00:22:08,820
go from one token to another right so

481
00:22:08,820 --> 00:22:12,539
you could swap some ethereum or ether to

482
00:22:12,539 --> 00:22:17,299
like the sold token and then

483
00:22:17,940 --> 00:22:20,820
when the ethereum blockchain goes

484
00:22:20,820 --> 00:22:22,380
through a rear

485
00:22:22,380 --> 00:22:25,320
the transaction that we have bridged

486
00:22:25,320 --> 00:22:28,860
over to Solana is not no longer part of

487
00:22:28,860 --> 00:22:30,179
the main chain

488
00:22:30,179 --> 00:22:32,760
because we used a transaction to send

489
00:22:32,760 --> 00:22:35,940
for your funds from the ethereum

490
00:22:35,940 --> 00:22:39,360
blockchain over to Solana but because

491
00:22:39,360 --> 00:22:42,419
the blockchain went through a rear all

492
00:22:42,419 --> 00:22:44,659
those transactions were

493
00:22:44,659 --> 00:22:47,640
yelled out of that blockchain it is no

494
00:22:47,640 --> 00:22:49,080
longer part of the ethereum network

495
00:22:49,080 --> 00:22:52,080
because Solana is not part of ethereum

496
00:22:52,080 --> 00:22:53,220
and it's a completely different

497
00:22:53,220 --> 00:22:57,360
blockchain the state is not synced

498
00:22:57,360 --> 00:23:00,960
right so we try to sync it when you send

499
00:23:00,960 --> 00:23:03,840
the transaction but after that

500
00:23:03,840 --> 00:23:06,600
the the base blockchain or the source

501
00:23:06,600 --> 00:23:08,940
blockchain went through a rear and these

502
00:23:08,940 --> 00:23:10,980
transactions are no longer part of that

503
00:23:10,980 --> 00:23:12,960
ethereum blockchain but you still have

504
00:23:12,960 --> 00:23:16,140
funds on Solana so this kind of a

505
00:23:16,140 --> 00:23:17,820
scenario is called as a double Credit

506
00:23:17,820 --> 00:23:22,020
Now basically by bridging you have

507
00:23:22,020 --> 00:23:25,440
100 each on Solana sorry 100 eighth on

508
00:23:25,440 --> 00:23:28,559
ethereum and the equivalent amount on

509
00:23:28,559 --> 00:23:29,520
Solana

510
00:23:29,520 --> 00:23:32,460
right like in usdc

511
00:23:32,460 --> 00:23:34,980
so this is why this is one of the

512
00:23:34,980 --> 00:23:37,140
reasons why people say that the future

513
00:23:37,140 --> 00:23:41,280
of bridges is more multi-chain than

514
00:23:41,280 --> 00:23:43,559
cross chain because the state cannot be

515
00:23:43,559 --> 00:23:45,720
easily synced when there is a rear and

516
00:23:45,720 --> 00:23:48,260
things like that

517
00:23:49,440 --> 00:23:51,419
all right

518
00:23:51,419 --> 00:23:54,140
so again

519
00:23:54,140 --> 00:23:58,260
the market demands something else right

520
00:23:58,260 --> 00:24:00,299
there are different blockchains with

521
00:24:00,299 --> 00:24:03,659
different features so we do want

522
00:24:03,659 --> 00:24:06,840
multi-chain Bridges

523
00:24:06,840 --> 00:24:10,380
and I do see that

524
00:24:10,380 --> 00:24:13,559
they have topped some leaderboards so

525
00:24:13,559 --> 00:24:15,179
what is this leaderboard that I'm

526
00:24:15,179 --> 00:24:17,280
talking about

527
00:24:17,280 --> 00:24:21,419
so this is the rec.news leaderboard

528
00:24:21,419 --> 00:24:24,240
which basically attracts all the

529
00:24:24,240 --> 00:24:27,179
blockchain hacks that have happened till

530
00:24:27,179 --> 00:24:28,140
day

531
00:24:28,140 --> 00:24:33,679
and you can see that out of this 11

532
00:24:33,679 --> 00:24:36,179
protocols out here

533
00:24:36,179 --> 00:24:40,200
five of them are are like cross chain

534
00:24:40,200 --> 00:24:42,480
multi-chain Bridges

535
00:24:42,480 --> 00:24:47,220
and you will see that

536
00:24:47,220 --> 00:24:51,000
the amount of funds that were lost

537
00:24:51,000 --> 00:24:52,860
on every single half

538
00:24:52,860 --> 00:24:56,039
like the very first one uh

539
00:24:56,039 --> 00:24:59,280
I don't know about 624 million dollars

540
00:24:59,280 --> 00:25:01,080
ever lost

541
00:25:01,080 --> 00:25:03,860
and

542
00:25:03,860 --> 00:25:06,539
I would imagine that they have done

543
00:25:06,539 --> 00:25:09,720
something super secure because uh there

544
00:25:09,720 --> 00:25:12,539
is custarding that much funds but it

545
00:25:12,539 --> 00:25:15,299
essentially was a theft of private Keys

546
00:25:15,299 --> 00:25:18,000
a typical problem this has nothing to do

547
00:25:18,000 --> 00:25:20,640
with blockchains right you have private

548
00:25:20,640 --> 00:25:23,100
keys on a computer you have to secure

549
00:25:23,100 --> 00:25:25,140
the computer if not someone will steal

550
00:25:25,140 --> 00:25:27,539
your private Keys someone stole their

551
00:25:27,539 --> 00:25:30,200
private keys and took their funds so

552
00:25:30,200 --> 00:25:33,539
before we secure smart contracts and all

553
00:25:33,539 --> 00:25:35,700
that we have first of all secure our

554
00:25:35,700 --> 00:25:38,279
keys that is very important this is a

555
00:25:38,279 --> 00:25:40,799
problem that we have in in the industry

556
00:25:40,799 --> 00:25:43,140
this is nothing new to blockchains but

557
00:25:43,140 --> 00:25:45,360
the first attack is essentially a

558
00:25:45,360 --> 00:25:47,460
private key test it has nothing to do

559
00:25:47,460 --> 00:25:49,080
with smart contracts or anything like

560
00:25:49,080 --> 00:25:50,880
that

561
00:25:50,880 --> 00:25:53,480
okay

562
00:25:58,500 --> 00:26:01,100
so we briefly spoke about this

563
00:26:01,100 --> 00:26:04,559
essentially I wanted to say that rap

564
00:26:04,559 --> 00:26:07,679
Bitcoin is a centralized way of bridging

565
00:26:07,679 --> 00:26:10,320
where you are trusting an entity like

566
00:26:10,320 --> 00:26:11,700
Bitcoin

567
00:26:11,700 --> 00:26:14,480
and we have other ways of doing

568
00:26:14,480 --> 00:26:17,279
decentralized bridging which involves

569
00:26:17,279 --> 00:26:20,279
message passing and these are of varying

570
00:26:20,279 --> 00:26:23,940
degrees of decentralization because you

571
00:26:23,940 --> 00:26:25,919
are trying to connect two different

572
00:26:25,919 --> 00:26:28,799
entities that have nothing in common so

573
00:26:28,799 --> 00:26:31,080
you need something in between and

574
00:26:31,080 --> 00:26:33,360
essentially you need a way to pass

575
00:26:33,360 --> 00:26:36,360
messages from one blockchain to another

576
00:26:36,360 --> 00:26:39,539
so this will this will be an off chain

577
00:26:39,539 --> 00:26:43,320
system something that will observe one

578
00:26:43,320 --> 00:26:47,220
blockchain and then make transactions on

579
00:26:47,220 --> 00:26:49,799
the destination blockchain this will be

580
00:26:49,799 --> 00:26:51,600
like an off chain system like a script

581
00:26:51,600 --> 00:26:53,340
that runs on a server or something like

582
00:26:53,340 --> 00:26:55,459
that

583
00:26:55,740 --> 00:26:59,159
so this is what the it looks like

584
00:26:59,159 --> 00:27:02,539
so you would send a message from adapt

585
00:27:02,539 --> 00:27:06,539
that messages get committed

586
00:27:06,539 --> 00:27:09,419
this is from the origin chain so you can

587
00:27:09,419 --> 00:27:11,159
think of this as like the ethereum

588
00:27:11,159 --> 00:27:13,380
blockchain where you are sending some

589
00:27:13,380 --> 00:27:16,740
ether onto a different blockchain so

590
00:27:16,740 --> 00:27:19,080
there are off-chain actors you can think

591
00:27:19,080 --> 00:27:21,299
of this as like a script or a server

592
00:27:21,299 --> 00:27:25,440
that monitors for events on the Urgent

593
00:27:25,440 --> 00:27:28,799
chain like a deposit was made and then

594
00:27:28,799 --> 00:27:32,159
they do some validation and then they

595
00:27:32,159 --> 00:27:34,380
determine if they should forward it to

596
00:27:34,380 --> 00:27:37,080
the destination chain and if they decide

597
00:27:37,080 --> 00:27:39,960
to do so then you will get your funds

598
00:27:39,960 --> 00:27:42,419
credited on their destination chair this

599
00:27:42,419 --> 00:27:44,700
is typically how a simplified message

600
00:27:44,700 --> 00:27:48,020
passing Bridge works

601
00:27:48,020 --> 00:27:51,779
so uh let's let's dive into like where

602
00:27:51,779 --> 00:27:56,100
the bugs are at right so uh you might

603
00:27:56,100 --> 00:27:58,260
remember the leaderboard that I showed

604
00:27:58,260 --> 00:27:59,820
earlier

605
00:27:59,820 --> 00:28:02,520
the number one problem for some of these

606
00:28:02,520 --> 00:28:05,400
bridges are how do you custody private

607
00:28:05,400 --> 00:28:06,900
keys right

608
00:28:06,900 --> 00:28:10,860
and you can see that the first hack the

609
00:28:10,860 --> 00:28:14,159
Ronin Bridge hack was theft of private

610
00:28:14,159 --> 00:28:17,460
keys and there is another Bridge as well

611
00:28:17,460 --> 00:28:20,700
whose private Keys got stolen and then

612
00:28:20,700 --> 00:28:23,520
you know funds were taken so this is a

613
00:28:23,520 --> 00:28:25,260
typical problem I'm not gonna go in

614
00:28:25,260 --> 00:28:27,600
depth we all know private Keys should be

615
00:28:27,600 --> 00:28:30,080
private should be secured

616
00:28:30,080 --> 00:28:31,740
right

617
00:28:31,740 --> 00:28:35,580
now people are trying to improve that by

618
00:28:35,580 --> 00:28:38,580
using MPC it is called multi-party

619
00:28:38,580 --> 00:28:41,159
computation where you do not need to

620
00:28:41,159 --> 00:28:43,860
store the private key but you have

621
00:28:43,860 --> 00:28:48,900
shards and these shards can be combined

622
00:28:48,900 --> 00:28:53,460
to form a signature on a transaction and

623
00:28:53,460 --> 00:28:55,740
never the private key so it's it's

624
00:28:55,740 --> 00:28:59,039
Advanced cryptography that is used to

625
00:28:59,039 --> 00:29:01,880
sign on transactions without actually

626
00:29:01,880 --> 00:29:05,220
materializing a private key and what

627
00:29:05,220 --> 00:29:07,320
that enables is if you don't have a

628
00:29:07,320 --> 00:29:10,140
private key you know you are less likely

629
00:29:10,140 --> 00:29:13,380
to get hacked and then the shards need

630
00:29:13,380 --> 00:29:16,200
to be combined either in a threshold

631
00:29:16,200 --> 00:29:19,740
fashion where you have like you know a

632
00:29:19,740 --> 00:29:21,659
multi-sig kind of a

633
00:29:21,659 --> 00:29:23,640
way where there is a two or five

634
00:29:23,640 --> 00:29:27,779
threshold or the MPC way like a two of

635
00:29:27,779 --> 00:29:30,360
two shards has to come together to like

636
00:29:30,360 --> 00:29:33,260
sign a transaction

637
00:29:33,299 --> 00:29:35,460
and there are also cryptography bugs

638
00:29:35,460 --> 00:29:39,179
that affect the systems and some of the

639
00:29:39,179 --> 00:29:42,179
problems that we Face uh with

640
00:29:42,179 --> 00:29:45,299
cryptography systems are bugs in the MPC

641
00:29:45,299 --> 00:29:48,240
protocol itself so I have links to that

642
00:29:48,240 --> 00:29:51,000
it's it will take a while to like really

643
00:29:51,000 --> 00:29:52,860
go into the depths of what these bugs

644
00:29:52,860 --> 00:29:55,380
are but if you are interested you can

645
00:29:55,380 --> 00:29:57,059
click on it I'll share the slides later

646
00:29:57,059 --> 00:29:59,520
so you can like read about it and we

647
00:29:59,520 --> 00:30:02,520
also have like bugs in like fault proofs

648
00:30:02,520 --> 00:30:05,700
and like zero knowledge Pros as well so

649
00:30:05,700 --> 00:30:08,100
these systems are used to guarantee the

650
00:30:08,100 --> 00:30:10,440
computational Integrity of blockchains

651
00:30:10,440 --> 00:30:12,299
and if you have if you have bugs in the

652
00:30:12,299 --> 00:30:14,820
cryptography of the systems itself then

653
00:30:14,820 --> 00:30:18,419
you know we have bigger problems

654
00:30:18,419 --> 00:30:20,640
and these are some of the off-chain

655
00:30:20,640 --> 00:30:22,679
components that you will typically see

656
00:30:22,679 --> 00:30:25,320
with Bridges the relayer just released

657
00:30:25,320 --> 00:30:27,720
transactions across Bridges and then

658
00:30:27,720 --> 00:30:30,000
there is a validator and then there is a

659
00:30:30,000 --> 00:30:31,980
watcher The Watcher essentially looks

660
00:30:31,980 --> 00:30:34,980
for any fraud and if they see any fraud

661
00:30:34,980 --> 00:30:37,440
they will stop the bridge that's the

662
00:30:37,440 --> 00:30:39,919
idea here

663
00:30:40,799 --> 00:30:42,659
so

664
00:30:42,659 --> 00:30:45,899
we are gonna go deep into like some of

665
00:30:45,899 --> 00:30:49,440
the smart contract Bridge hacks and what

666
00:30:49,440 --> 00:30:51,899
was the bug behind them

667
00:30:51,899 --> 00:30:55,740
so there are operational issues just

668
00:30:55,740 --> 00:30:58,080
like how you would deploy some code you

669
00:30:58,080 --> 00:31:00,840
have to have some clean devops to like

670
00:31:00,840 --> 00:31:04,140
deal with smart contracts and one of the

671
00:31:04,140 --> 00:31:07,440
first bugs that I have over there

672
00:31:07,440 --> 00:31:10,559
is is a bug where they forgot to

673
00:31:10,559 --> 00:31:13,740
initialize their smart contract and when

674
00:31:13,740 --> 00:31:15,720
you when you don't do that anyone can

675
00:31:15,720 --> 00:31:17,880
take ownership or like do bad things

676
00:31:17,880 --> 00:31:18,840
with it

677
00:31:18,840 --> 00:31:21,899
so it's just like deploying something

678
00:31:21,899 --> 00:31:24,659
with no control over it until you

679
00:31:24,659 --> 00:31:27,840
initialize it properly and that bug

680
00:31:27,840 --> 00:31:30,059
alone was reported by a security

681
00:31:30,059 --> 00:31:32,940
researcher and he was paid I believe 10

682
00:31:32,940 --> 00:31:35,640
million dollars for it so another thing

683
00:31:35,640 --> 00:31:38,640
I want to highlight is the blockchain

684
00:31:38,640 --> 00:31:41,100
world or the web 3 world have big

685
00:31:41,100 --> 00:31:43,399
bounties because you are securing money

686
00:31:43,399 --> 00:31:46,260
and if you are interested in it we can

687
00:31:46,260 --> 00:31:48,779
talk about it after the talk

688
00:31:48,779 --> 00:31:51,419
now the second bug is

689
00:31:51,419 --> 00:31:53,700
you you deposit

690
00:31:53,700 --> 00:31:57,179
some tokens in a source Bridge like

691
00:31:57,179 --> 00:31:59,399
where you're bridging from and then you

692
00:31:59,399 --> 00:32:01,620
mint tokens on the destination Bridge

693
00:32:01,620 --> 00:32:02,700
right

694
00:32:02,700 --> 00:32:05,580
so in in this attack you you don't have

695
00:32:05,580 --> 00:32:07,860
to deposit anything but there is a bug

696
00:32:07,860 --> 00:32:10,260
in the destination smart contract where

697
00:32:10,260 --> 00:32:13,380
you can just mint these tokens that are

698
00:32:13,380 --> 00:32:15,960
a representation of Bitcoins on this

699
00:32:15,960 --> 00:32:18,299
destination blockchain and when you do

700
00:32:18,299 --> 00:32:20,940
that this bridges are not backed one to

701
00:32:20,940 --> 00:32:21,720
one

702
00:32:21,720 --> 00:32:24,840
and then you can just like unwrap these

703
00:32:24,840 --> 00:32:26,640
Bitcoins and now you have custody of

704
00:32:26,640 --> 00:32:28,320
Bitcoins and the bridge is under

705
00:32:28,320 --> 00:32:30,779
collateralized so what that means is the

706
00:32:30,779 --> 00:32:32,520
bridges no longer

707
00:32:32,520 --> 00:32:35,399
backed one to one which means all these

708
00:32:35,399 --> 00:32:37,679
synthetic tokens are of zero value now

709
00:32:37,679 --> 00:32:40,679
or like reduced value

710
00:32:40,679 --> 00:32:42,960
we also have like toxic privilege

711
00:32:42,960 --> 00:32:45,659
combination attacks where

712
00:32:45,659 --> 00:32:48,779
a smart contract that a user would

713
00:32:48,779 --> 00:32:52,200
interact can be used as a proxy

714
00:32:52,200 --> 00:32:54,779
to like called privileged contracts

715
00:32:54,779 --> 00:32:57,600
because of the proxy functionality that

716
00:32:57,600 --> 00:33:00,179
the user has and because it comes

717
00:33:00,179 --> 00:33:01,740
through

718
00:33:01,740 --> 00:33:04,760
this proxied smart contract

719
00:33:04,760 --> 00:33:07,679
the Privileges of that smart contract

720
00:33:07,679 --> 00:33:10,740
gets transferred to that call and you

721
00:33:10,740 --> 00:33:13,620
using those elevated privileges you can

722
00:33:13,620 --> 00:33:16,620
like add yourself as a validator and

723
00:33:16,620 --> 00:33:18,480
then like sign invalid roots or

724
00:33:18,480 --> 00:33:20,340
something like that

725
00:33:20,340 --> 00:33:23,159
then we have typical bugs like input

726
00:33:23,159 --> 00:33:27,480
validation and bugs within the logic of

727
00:33:27,480 --> 00:33:30,539
the smart contract itself so the these

728
00:33:30,539 --> 00:33:33,000
are like million dollar if not billion

729
00:33:33,000 --> 00:33:35,460
dollar hacks that have happened I have

730
00:33:35,460 --> 00:33:38,640
links to all of them and it it takes a

731
00:33:38,640 --> 00:33:40,200
good amount of time to go through one

732
00:33:40,200 --> 00:33:43,559
one of one of these so we're gonna we're

733
00:33:43,559 --> 00:33:46,200
gonna actually do some actual exploits

734
00:33:46,200 --> 00:33:48,659
and see how they work and run through

735
00:33:48,659 --> 00:33:50,700
some code and then we'll come back to

736
00:33:50,700 --> 00:33:53,720
some Theory right

737
00:33:54,720 --> 00:33:56,159
all right

738
00:33:56,159 --> 00:33:57,840
so

739
00:33:57,840 --> 00:34:00,320
the first bug that I'm gonna talk about

740
00:34:00,320 --> 00:34:04,500
is a multi-chain bridge so

741
00:34:04,500 --> 00:34:07,440
a very simple way of making a bridge is

742
00:34:07,440 --> 00:34:09,780
you have some off chain components you

743
00:34:09,780 --> 00:34:11,820
have some smart contracts

744
00:34:11,820 --> 00:34:15,899
and that's it you have a bridge right

745
00:34:15,899 --> 00:34:19,199
so let's look at the multi-chain bridge

746
00:34:19,199 --> 00:34:22,199
hat so as I described

747
00:34:22,199 --> 00:34:24,918
a multi-chain bridge

748
00:34:24,918 --> 00:34:28,980
over here it uses some liquidity pools

749
00:34:28,980 --> 00:34:32,159
and what that means is like

750
00:34:32,159 --> 00:34:34,379
you can

751
00:34:34,379 --> 00:34:36,780
on the source blockchain

752
00:34:36,780 --> 00:34:39,300
swap the tokens that you are interested

753
00:34:39,300 --> 00:34:41,820
in with

754
00:34:41,820 --> 00:34:45,060
with that synthetic tokens that they

755
00:34:45,060 --> 00:34:48,300
have like the bridge has and then on the

756
00:34:48,300 --> 00:34:50,399
source blockchain or sorry on the

757
00:34:50,399 --> 00:34:53,879
destination blockchain swap it back to

758
00:34:53,879 --> 00:34:57,060
the asset that you really want or the

759
00:34:57,060 --> 00:34:58,619
synthetic version of it

760
00:34:58,619 --> 00:35:01,260
so we will actually run through the

761
00:35:01,260 --> 00:35:06,140
exploit and then explain what the bug is

762
00:35:13,380 --> 00:35:15,980
all right

763
00:35:15,980 --> 00:35:19,380
so this is the exploit for the

764
00:35:19,380 --> 00:35:22,760
multi-chain bridge

765
00:35:23,040 --> 00:35:27,900
so we this is a link to the

766
00:35:27,900 --> 00:35:31,800
the block Explorer which has an exploit

767
00:35:31,800 --> 00:35:34,200
transaction and we are basically trying

768
00:35:34,200 --> 00:35:36,300
to reproduce that

769
00:35:36,300 --> 00:35:38,640
and this is written in solidity okay

770
00:35:38,640 --> 00:35:41,880
it's not a lot so we'll we'll look

771
00:35:41,880 --> 00:35:43,560
through what this is

772
00:35:43,560 --> 00:35:46,279
so

773
00:35:49,440 --> 00:35:51,960
all right so look looks like something

774
00:35:51,960 --> 00:35:53,040
happened

775
00:35:53,040 --> 00:35:56,400
so you can see that before this exploit

776
00:35:56,400 --> 00:36:00,900
uh the attacker had zero at either as

777
00:36:00,900 --> 00:36:04,260
his balance but after I ran this exploit

778
00:36:04,260 --> 00:36:08,220
the attacker's balance is this much

779
00:36:08,220 --> 00:36:12,599
so and you we will have this exploits in

780
00:36:12,599 --> 00:36:15,599
GitHub so you can run this yourself but

781
00:36:15,599 --> 00:36:17,400
you can see that

782
00:36:17,400 --> 00:36:20,579
the exploit does make some calls and

783
00:36:20,579 --> 00:36:23,579
essentially it drains the balance of the

784
00:36:23,579 --> 00:36:24,420
bridge

785
00:36:24,420 --> 00:36:26,760
right the bridge secures a lot of money

786
00:36:26,760 --> 00:36:29,160
and because of this exploit we can take

787
00:36:29,160 --> 00:36:31,079
that money for ourselves that is

788
00:36:31,079 --> 00:36:33,359
essentially what happened and we will

789
00:36:33,359 --> 00:36:35,000
look through

790
00:36:35,000 --> 00:36:39,000
how exactly does exploit works

791
00:36:39,000 --> 00:36:41,880
so this is just like setup code and this

792
00:36:41,880 --> 00:36:46,020
is just interfaces which is like Abi

793
00:36:46,020 --> 00:36:49,800
and the meat of the attack is over here

794
00:36:49,800 --> 00:36:52,859
the test attack function right

795
00:36:52,859 --> 00:36:54,540
so

796
00:36:54,540 --> 00:36:57,060
we are calling this method which is the

797
00:36:57,060 --> 00:37:00,000
vulnerable method on the smart contract

798
00:37:00,000 --> 00:37:03,540
and then you can specify the frame

799
00:37:03,540 --> 00:37:06,000
address the token address you are

800
00:37:06,000 --> 00:37:09,180
interested in uh the address to which

801
00:37:09,180 --> 00:37:11,400
the funds should be credited so

802
00:37:11,400 --> 00:37:14,339
basically follow this

803
00:37:14,339 --> 00:37:18,500
and the bug here is

804
00:37:23,880 --> 00:37:26,599
so the attacker controls the token

805
00:37:26,599 --> 00:37:29,820
parameters which is in turn used by the

806
00:37:29,820 --> 00:37:32,040
bridge contract to identify the

807
00:37:32,040 --> 00:37:34,800
underlying token so because I can

808
00:37:34,800 --> 00:37:37,500
specify the address the smart contract

809
00:37:37,500 --> 00:37:39,660
address that they're gonna use

810
00:37:39,660 --> 00:37:42,599
I just write my own smart contract and

811
00:37:42,599 --> 00:37:45,060
instead of using the bridges smart

812
00:37:45,060 --> 00:37:48,180
contract I use my smart contract which

813
00:37:48,180 --> 00:37:51,300
will return wrath Eid as the token

814
00:37:51,300 --> 00:37:53,820
address you can see that in the exploit

815
00:37:53,820 --> 00:37:55,020
here

816
00:37:55,020 --> 00:37:57,480
you will see that the underlying does

817
00:37:57,480 --> 00:37:59,640
return wrapped ether

818
00:37:59,640 --> 00:38:01,859
and as a result

819
00:38:01,859 --> 00:38:04,339
this code

820
00:38:04,339 --> 00:38:08,820
looks at wrapped either as

821
00:38:08,820 --> 00:38:09,599
um

822
00:38:09,599 --> 00:38:13,380
so it calls the permit function on the

823
00:38:13,380 --> 00:38:16,440
wrapped either contract and this permit

824
00:38:16,440 --> 00:38:18,540
function doesn't exist unwrapped either

825
00:38:18,540 --> 00:38:21,540
so it just

826
00:38:21,540 --> 00:38:23,820
continuous execution because it doesn't

827
00:38:23,820 --> 00:38:27,060
revert and then because these token

828
00:38:27,060 --> 00:38:29,960
Bridges have

829
00:38:29,960 --> 00:38:33,060
unlimited token

830
00:38:33,060 --> 00:38:34,920
approvals

831
00:38:34,920 --> 00:38:38,040
you can basically

832
00:38:38,040 --> 00:38:41,820
take the tokens that a user has already

833
00:38:41,820 --> 00:38:45,240
approved this bridge for using this

834
00:38:45,240 --> 00:38:47,339
exploit and that is essentially how this

835
00:38:47,339 --> 00:38:49,619
exploit works

836
00:38:49,619 --> 00:38:53,040
we also have one more demo

837
00:38:53,040 --> 00:38:55,940
and

838
00:38:58,079 --> 00:39:00,900
this is the exploit for another Bridge

839
00:39:00,900 --> 00:39:04,920
called The Nomad Bridge which is similar

840
00:39:04,920 --> 00:39:08,280
in many ways to this bridge but it uses

841
00:39:08,280 --> 00:39:10,560
a very different mechanism so we'll run

842
00:39:10,560 --> 00:39:13,920
the exploit and then we will look at how

843
00:39:13,920 --> 00:39:16,880
the exploit works

844
00:39:21,300 --> 00:39:25,560
so it looks like that worked as well

845
00:39:25,560 --> 00:39:29,099
so you can see the balance before was

846
00:39:29,099 --> 00:39:31,260
zero and then the balance after the

847
00:39:31,260 --> 00:39:34,500
exploit was a lot more right

848
00:39:34,500 --> 00:39:37,079
so let's look at

849
00:39:37,079 --> 00:39:39,240
how that works right

850
00:39:39,240 --> 00:39:41,220
so this is the function that we just

851
00:39:41,220 --> 00:39:43,079
executed which is the meat of the

852
00:39:43,079 --> 00:39:44,099
exploit

853
00:39:44,099 --> 00:39:48,060
and as as before we are essentially

854
00:39:48,060 --> 00:39:51,180
copying contents of a exploit

855
00:39:51,180 --> 00:39:54,720
transaction and replacing the address

856
00:39:54,720 --> 00:39:57,900
with the attacker's address in that

857
00:39:57,900 --> 00:40:00,839
exploit transaction and then sending it

858
00:40:00,839 --> 00:40:01,980
across

859
00:40:01,980 --> 00:40:05,460
so how does what what exactly is the bug

860
00:40:05,460 --> 00:40:10,820
right so the bug itself is

861
00:40:11,579 --> 00:40:14,579
foreign

862
00:40:21,380 --> 00:40:24,060
was initialized when it was first

863
00:40:24,060 --> 00:40:26,700
deployed and you can see that the

864
00:40:26,700 --> 00:40:28,079
committed root

865
00:40:28,079 --> 00:40:31,380
is set to zero during initialization as

866
00:40:31,380 --> 00:40:33,660
you can see down below right the third

867
00:40:33,660 --> 00:40:36,119
argument is zero

868
00:40:36,119 --> 00:40:39,240
then the replica contract which we were

869
00:40:39,240 --> 00:40:42,180
looking at was upgraded recently and

870
00:40:42,180 --> 00:40:46,099
they changed how they would verify

871
00:40:46,099 --> 00:40:50,180
if a particular route was acceptable

872
00:40:50,180 --> 00:40:53,339
from what you see on the left

873
00:40:53,339 --> 00:40:55,859
so what is it was what you see on the

874
00:40:55,859 --> 00:40:57,780
right to what what you see on the left

875
00:40:57,780 --> 00:41:02,220
so it it moved from a comparison to like

876
00:41:02,220 --> 00:41:04,260
a lookup

877
00:41:04,260 --> 00:41:07,859
and in solidity when when you call an

878
00:41:07,859 --> 00:41:10,680
item that doesn't exist in a map it

879
00:41:10,680 --> 00:41:12,119
returns zero

880
00:41:12,119 --> 00:41:13,500
so

881
00:41:13,500 --> 00:41:16,859
the code essentially becomes acceptable

882
00:41:16,859 --> 00:41:20,339
root of zero which maps to 1 which does

883
00:41:20,339 --> 00:41:24,720
exist and basically what that means is

884
00:41:24,720 --> 00:41:28,920
this bridge accepts invalid Roots so you

885
00:41:28,920 --> 00:41:31,440
would have to submit a proper Merkel

886
00:41:31,440 --> 00:41:33,960
route for you to withdraw and transact

887
00:41:33,960 --> 00:41:36,720
but because of this bug you can

888
00:41:36,720 --> 00:41:39,780
essentially send it any invalid routes

889
00:41:39,780 --> 00:41:43,680
and then claim files and when that

890
00:41:43,680 --> 00:41:46,260
happens this is this is really what

891
00:41:46,260 --> 00:41:48,420
happens to the bridge they take everyone

892
00:41:48,420 --> 00:41:51,060
takes the funds of a bridge and now the

893
00:41:51,060 --> 00:41:52,560
bridge is asking for people to like

894
00:41:52,560 --> 00:41:55,859
return the funds they were trained for a

895
00:41:55,859 --> 00:41:58,800
lot of money uh I think this is like the

896
00:41:58,800 --> 00:42:03,200
third or the fourth biggest bridge hack

897
00:42:03,240 --> 00:42:06,540
right so yeah

898
00:42:06,540 --> 00:42:08,520
so what do we do right like there is a

899
00:42:08,520 --> 00:42:10,380
lot of ways to like hack these Bridges

900
00:42:10,380 --> 00:42:13,079
so for developers uh go through this

901
00:42:13,079 --> 00:42:15,119
verification standards use audited

902
00:42:15,119 --> 00:42:18,599
libraries uh first year contracts

903
00:42:18,599 --> 00:42:21,480
so these are things you could do and

904
00:42:21,480 --> 00:42:24,420
write some invariant tests and you will

905
00:42:24,420 --> 00:42:27,540
have a safer

906
00:42:27,540 --> 00:42:30,720
smart contract and for white hats for

907
00:42:30,720 --> 00:42:32,760
folks who are interested in hacking

908
00:42:32,760 --> 00:42:34,680
these projects or getting started in

909
00:42:34,680 --> 00:42:37,140
blockchain security these are some of

910
00:42:37,140 --> 00:42:39,119
the tools that you could use I will

911
00:42:39,119 --> 00:42:41,099
share these slides later so you can

912
00:42:41,099 --> 00:42:43,740
actually you know click click into these

913
00:42:43,740 --> 00:42:47,280
and like go explore right

914
00:42:47,280 --> 00:42:50,579
yeah so I think we do we have time for

915
00:42:50,579 --> 00:42:51,839
questions

916
00:42:51,839 --> 00:42:54,359
yeah okay so we have five minutes for

917
00:42:54,359 --> 00:42:57,359
questions and these are some of the

918
00:42:57,359 --> 00:42:59,099
references that I used

919
00:42:59,099 --> 00:43:02,720
and thank you all for coming

920
00:43:02,950 --> 00:43:10,089
[Applause]

921
00:43:10,920 --> 00:43:14,660
doesn't even have any questions

922
00:43:22,680 --> 00:43:25,200
hello hello

923
00:43:25,200 --> 00:43:27,599
yeah hi so it's a great talks thanks for

924
00:43:27,599 --> 00:43:29,700
that so you said that it's the

925
00:43:29,700 --> 00:43:31,859
decentralized ethereum then who decides

926
00:43:31,859 --> 00:43:33,420
the transaction phase

927
00:43:33,420 --> 00:43:38,460
okay so transaction fees is is more like

928
00:43:38,460 --> 00:43:42,240
a function of the demand for the block

929
00:43:42,240 --> 00:43:45,900
so uh block space is a very limited

930
00:43:45,900 --> 00:43:48,720
commodity right like you may have like 1

931
00:43:48,720 --> 00:43:51,540
MB or like maybe 10 MB and a lot of

932
00:43:51,540 --> 00:43:54,000
people want to get into that block

933
00:43:54,000 --> 00:43:57,240
because sometimes your transaction is

934
00:43:57,240 --> 00:44:00,540
time sensitive now when a lot of people

935
00:44:00,540 --> 00:44:02,880
compete for a very scarce resource right

936
00:44:02,880 --> 00:44:05,700
that is when you have the transaction

937
00:44:05,700 --> 00:44:08,640
fees go up which is a rule that is

938
00:44:08,640 --> 00:44:11,760
written into the network so it is part

939
00:44:11,760 --> 00:44:14,700
of the node software that you run and it

940
00:44:14,700 --> 00:44:18,240
is basically a function of what is the

941
00:44:18,240 --> 00:44:21,720
demand that you have right now to and

942
00:44:21,720 --> 00:44:24,839
you can as a user specify how much you

943
00:44:24,839 --> 00:44:26,400
are willing to pay so if your

944
00:44:26,400 --> 00:44:28,380
transaction is not really that time

945
00:44:28,380 --> 00:44:32,760
sensitive you can still send it but it

946
00:44:32,760 --> 00:44:34,800
will take a while for it to get mined

947
00:44:34,800 --> 00:44:37,500
into a block and get confirmed and it is

948
00:44:37,500 --> 00:44:39,720
essentially a function of what is the

949
00:44:39,720 --> 00:44:42,000
demand of the block space right now

950
00:44:42,000 --> 00:44:45,240
versus how much you are willing to pay

951
00:44:45,240 --> 00:44:49,040
yeah thank you yeah

952
00:44:59,900 --> 00:45:03,780
uh forgive me for asking a really Noob

953
00:45:03,780 --> 00:45:06,119
question but can you explain re-entrancy

954
00:45:06,119 --> 00:45:08,300
like like I'm a five-year-old right

955
00:45:08,300 --> 00:45:11,880
re-entrancy is think of it as okay very

956
00:45:11,880 --> 00:45:14,819
abstract way of saying it is like URL

957
00:45:14,819 --> 00:45:18,060
redirects right so you would want to go

958
00:45:18,060 --> 00:45:20,339
somewhere but then it redirects you to

959
00:45:20,339 --> 00:45:22,859
like some something else right and when

960
00:45:22,859 --> 00:45:25,020
it redirects you to itself

961
00:45:25,020 --> 00:45:27,000
especially when you are dealing with

962
00:45:27,000 --> 00:45:30,839
code that has a lot of state and manages

963
00:45:30,839 --> 00:45:32,640
Financial value

964
00:45:32,640 --> 00:45:36,119
you can use a re-entrancy to like

965
00:45:36,119 --> 00:45:39,000
and enter the smart contract again so

966
00:45:39,000 --> 00:45:41,280
assume you are making a smart contract

967
00:45:41,280 --> 00:45:43,680
call right a call is a function that you

968
00:45:43,680 --> 00:45:46,079
can use to like invoke other functions

969
00:45:46,079 --> 00:45:49,200
in a contract or do things like that now

970
00:45:49,200 --> 00:45:51,780
when you use a call you can

971
00:45:51,780 --> 00:45:56,760
call yourself and and and an exploit

972
00:45:56,760 --> 00:45:59,359
would look like deploying a contract

973
00:45:59,359 --> 00:46:02,880
that the vulnerable function or the

974
00:46:02,880 --> 00:46:05,819
vulnerable contract would call and then

975
00:46:05,819 --> 00:46:07,400
it would

976
00:46:07,400 --> 00:46:10,680
probably go to the fallback function and

977
00:46:10,680 --> 00:46:12,660
the fallback function would call back

978
00:46:12,660 --> 00:46:16,200
into your contract and then you can like

979
00:46:16,200 --> 00:46:18,060
maybe uh

980
00:46:18,060 --> 00:46:21,480
continue to like drain funds while your

981
00:46:21,480 --> 00:46:23,640
state is not ex you know modified

982
00:46:23,640 --> 00:46:26,099
because imagine your state is like your

983
00:46:26,099 --> 00:46:28,079
balance right so

984
00:46:28,079 --> 00:46:30,720
this is like in a vulnerable contract

985
00:46:30,720 --> 00:46:33,319
you would

986
00:46:33,619 --> 00:46:36,900
you will reduce the balance after the

987
00:46:36,900 --> 00:46:39,420
call has been completed right and that

988
00:46:39,420 --> 00:46:41,640
is a vulnerable pattern you should

989
00:46:41,640 --> 00:46:44,700
probably do that upfront now when you

990
00:46:44,700 --> 00:46:46,920
don't do that you can choose to like

991
00:46:46,920 --> 00:46:49,560
Loop through this and then drain all the

992
00:46:49,560 --> 00:46:51,960
funds and only then

993
00:46:51,960 --> 00:46:54,780
the actual State update would happen so

994
00:46:54,780 --> 00:46:57,359
it's it's more like a logic bug and

995
00:46:57,359 --> 00:47:00,480
sometimes it can be cross contracts it

996
00:47:00,480 --> 00:47:03,480
can be uh the same contract so there are

997
00:47:03,480 --> 00:47:04,800
different varieties of exploiting

998
00:47:04,800 --> 00:47:06,900
reentrancy we can talk more about it

999
00:47:06,900 --> 00:47:09,980
like maybe after

