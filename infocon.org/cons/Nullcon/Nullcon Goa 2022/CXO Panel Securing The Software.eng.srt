1
00:00:04,100 --> 00:00:06,480
awesome thank you very much for for

2
00:00:06,480 --> 00:00:09,900
coming out today and uh you know getting

3
00:00:09,900 --> 00:00:11,880
to hear a little bit about uh securing

4
00:00:11,880 --> 00:00:13,920
the software uh let me do a couple of

5
00:00:13,920 --> 00:00:15,719
really quick introductions we've got a

6
00:00:15,719 --> 00:00:19,680
really great panel today for you guys

7
00:00:19,680 --> 00:00:21,080
um

8
00:00:21,080 --> 00:00:24,420
is the India site leader and senior

9
00:00:24,420 --> 00:00:27,480
director for cyber security for Visa

10
00:00:27,480 --> 00:00:30,900
she has a incredibly deep background in

11
00:00:30,900 --> 00:00:32,640
design and architecture products

12
00:00:32,640 --> 00:00:34,200
covering identity access management

13
00:00:34,200 --> 00:00:37,320
security Cloud mobile infrastructure you

14
00:00:37,320 --> 00:00:38,700
know with products in the in the

15
00:00:38,700 --> 00:00:41,760
Assassin pass offerings

16
00:00:41,760 --> 00:00:44,160
um to my right I also have Harish goal

17
00:00:44,160 --> 00:00:46,140
who's the director of I.T security and

18
00:00:46,140 --> 00:00:48,539
compliance for our publicist group and

19
00:00:48,539 --> 00:00:51,899
as huge Global organization he leads the

20
00:00:51,899 --> 00:00:54,360
I.T sock knock and security initiatives

21
00:00:54,360 --> 00:00:55,920
and responsible for securing the

22
00:00:55,920 --> 00:00:58,800
organization's environment for internal

23
00:00:58,800 --> 00:01:01,739
and external attacks and breaches

24
00:01:01,739 --> 00:01:05,060
a very serious job and

25
00:01:05,060 --> 00:01:08,040
Dada is the senior engineering manager

26
00:01:08,040 --> 00:01:10,680
over at charge B leading multiple teams

27
00:01:10,680 --> 00:01:12,479
in development of identity access

28
00:01:12,479 --> 00:01:15,180
management platform microservices

29
00:01:15,180 --> 00:01:17,580
framework security and devsec Ops

30
00:01:17,580 --> 00:01:18,720
initiatives

31
00:01:18,720 --> 00:01:21,000
and of course you know me uh Matthew

32
00:01:21,000 --> 00:01:22,680
Bonnie I'm the VP and chief product

33
00:01:22,680 --> 00:01:25,020
security officer at Honeywell you know I

34
00:01:25,020 --> 00:01:27,000
lead a team of global cyber Security

35
00:01:27,000 --> 00:01:29,939
Experts who spend their day and nights

36
00:01:29,939 --> 00:01:31,979
you know protecting the software that we

37
00:01:31,979 --> 00:01:32,700
make

38
00:01:32,700 --> 00:01:36,900
so our panel today brings together you

39
00:01:36,900 --> 00:01:39,479
know a lot of key industry leaders to

40
00:01:39,479 --> 00:01:42,960
discuss the challenges of best practices

41
00:01:42,960 --> 00:01:45,420
for developing software securely right

42
00:01:45,420 --> 00:01:47,700
it's not a trivial exercise and it is

43
00:01:47,700 --> 00:01:50,159
quite different than perhaps you know

44
00:01:50,159 --> 00:01:52,020
what most people see as sort of I.T

45
00:01:52,020 --> 00:01:56,040
security or OT security and you know

46
00:01:56,040 --> 00:01:57,840
hopefully everybody's going to be able

47
00:01:57,840 --> 00:01:59,659
to walk away from today's discussion

48
00:01:59,659 --> 00:02:02,880
with some insights on how maybe they can

49
00:02:02,880 --> 00:02:05,939
enhance their own sustainable secure

50
00:02:05,939 --> 00:02:08,179
software development life cycle

51
00:02:08,179 --> 00:02:12,180
so with that let's Jump Right In so

52
00:02:12,180 --> 00:02:15,000
Harish why is software security so

53
00:02:15,000 --> 00:02:16,560
important

54
00:02:16,560 --> 00:02:20,340
okay so uh we all live in a digital era

55
00:02:20,340 --> 00:02:22,379
right now so we all know like okay

56
00:02:22,379 --> 00:02:25,319
software is used everywhere so

57
00:02:25,319 --> 00:02:27,120
everything is software driven right now

58
00:02:27,120 --> 00:02:29,940
so the shoes be wear and the system we

59
00:02:29,940 --> 00:02:32,760
use and the iot's everything it's the

60
00:02:32,760 --> 00:02:36,599
software so security is must like it is

61
00:02:36,599 --> 00:02:38,580
a need of the r for the secure software

62
00:02:38,580 --> 00:02:40,980
it is not an option anymore so let's

63
00:02:40,980 --> 00:02:42,900
take an example like okay we have a kids

64
00:02:42,900 --> 00:02:45,300
in our homes so we teach them we trade

65
00:02:45,300 --> 00:02:47,580
them before we send them out of the home

66
00:02:47,580 --> 00:02:50,340
so same way like softwares we have to

67
00:02:50,340 --> 00:02:52,860
secure them once we are developing

68
00:02:52,860 --> 00:02:54,780
before putting them into the Productions

69
00:02:54,780 --> 00:02:56,700
so this is very important that yes

70
00:02:56,700 --> 00:02:59,400
software security is nowadays is very

71
00:02:59,400 --> 00:03:02,280
important for every organizations

72
00:03:02,280 --> 00:03:05,819
great point so Urdu

73
00:03:05,819 --> 00:03:07,739
for software companies which comes first

74
00:03:07,739 --> 00:03:11,099
you know security or the software

75
00:03:11,099 --> 00:03:13,920
hi Matt I think my voice is locked okay

76
00:03:13,920 --> 00:03:16,739
is this better guys okay so first of all

77
00:03:16,739 --> 00:03:19,200
good afternoon everyone very happy to

78
00:03:19,200 --> 00:03:21,120
see so much overwhelming participation

79
00:03:21,120 --> 00:03:23,040
not just this session but I think

80
00:03:23,040 --> 00:03:26,220
overall uh nelcon so thank you so much

81
00:03:26,220 --> 00:03:28,379
hopefully this is a session where you'll

82
00:03:28,379 --> 00:03:30,480
be all awake after lunch

83
00:03:30,480 --> 00:03:32,879
so to answer your question between

84
00:03:32,879 --> 00:03:36,060
software and Security in my opinion both

85
00:03:36,060 --> 00:03:38,400
go very hand in hand both entities are

86
00:03:38,400 --> 00:03:40,019
required they are like integral part of

87
00:03:40,019 --> 00:03:41,040
the system

88
00:03:41,040 --> 00:03:44,400
and why so because today in today's era

89
00:03:44,400 --> 00:03:46,680
cyber attacks are over

90
00:03:46,680 --> 00:03:47,640
um you know

91
00:03:47,640 --> 00:03:49,920
increasing all the time

92
00:03:49,920 --> 00:03:51,659
and exploiting the security

93
00:03:51,659 --> 00:03:53,940
vulnerability in any software has become

94
00:03:53,940 --> 00:03:55,920
the very significant Target for all

95
00:03:55,920 --> 00:03:58,500
hackers because once you exploit any

96
00:03:58,500 --> 00:04:00,680
software all the users of the software

97
00:04:00,680 --> 00:04:03,720
applications that consume the software

98
00:04:03,720 --> 00:04:05,879
everything it goes in the exponential

99
00:04:05,879 --> 00:04:09,120
attack is like a catastrophic and the in

100
00:04:09,120 --> 00:04:11,459
that range it can exploit right from

101
00:04:11,459 --> 00:04:14,580
changing a device to bot to a DDOS or a

102
00:04:14,580 --> 00:04:15,480
CV

103
00:04:15,480 --> 00:04:17,699
and that's the reason security is

104
00:04:17,699 --> 00:04:19,620
integral part of the software you cannot

105
00:04:19,620 --> 00:04:21,779
separate both now coming back to your

106
00:04:21,779 --> 00:04:26,040
sdlc question so sdlc has been there uh

107
00:04:26,040 --> 00:04:28,440
ever since software is theirs but I just

108
00:04:28,440 --> 00:04:31,380
want to connect the thread to our

109
00:04:31,380 --> 00:04:34,199
keynote topic which was very good uh

110
00:04:34,199 --> 00:04:36,600
learning from past acting in play

111
00:04:36,600 --> 00:04:39,240
present and going for future how do you

112
00:04:39,240 --> 00:04:41,040
prepare yourself right so going from

113
00:04:41,040 --> 00:04:43,440
reactive to proactive approach so even

114
00:04:43,440 --> 00:04:46,020
same the case should be for sdlc or sdlc

115
00:04:46,020 --> 00:04:48,000
should evolve to the next gen

116
00:04:48,000 --> 00:04:50,340
and it should be right from requirement

117
00:04:50,340 --> 00:04:52,620
to your deployment so when you start

118
00:04:52,620 --> 00:04:54,360
designing architecting your product

119
00:04:54,360 --> 00:04:57,840
right there threat model uh look at the

120
00:04:57,840 --> 00:04:59,400
attack surface what is your Ingress

121
00:04:59,400 --> 00:05:01,620
egress and what could be the attack

122
00:05:01,620 --> 00:05:04,500
surface open that is first then you when

123
00:05:04,500 --> 00:05:06,900
you write code secure coding guidelines

124
00:05:06,900 --> 00:05:08,580
is very important I'm going to take

125
00:05:08,580 --> 00:05:11,280
quick three examples which came in the

126
00:05:11,280 --> 00:05:14,639
keynote very easy but very important uh

127
00:05:14,639 --> 00:05:16,940
input data validation or sanitization

128
00:05:16,940 --> 00:05:20,100
then for cross CrossFit scripting right

129
00:05:20,100 --> 00:05:22,199
it's very easy to set cookies same side

130
00:05:22,199 --> 00:05:24,720
cookies very simple things but I think

131
00:05:24,720 --> 00:05:26,340
that should be in the mindset when you

132
00:05:26,340 --> 00:05:29,280
write the code itself and the sqli which

133
00:05:29,280 --> 00:05:31,979
is very you know popular vulnerability

134
00:05:31,979 --> 00:05:34,440
so never never write queries which is

135
00:05:34,440 --> 00:05:36,900
exposing data right from your DB always

136
00:05:36,900 --> 00:05:38,880
use stored procedures or you know

137
00:05:38,880 --> 00:05:41,160
wrappers so things like that so when you

138
00:05:41,160 --> 00:05:43,860
write code in that way that is taking

139
00:05:43,860 --> 00:05:46,259
your mind to the security or you know

140
00:05:46,259 --> 00:05:48,660
not even creating vulnerabilities forget

141
00:05:48,660 --> 00:05:51,539
about fixing it now coming to the next

142
00:05:51,539 --> 00:05:54,259
event of sdlc which is your sas10 dash

143
00:05:54,259 --> 00:05:57,780
utilize all the industry leading tools I

144
00:05:57,780 --> 00:06:00,300
think we have many check marks uh

145
00:06:00,300 --> 00:06:03,840
courtesy or Micro Focus synopsis so

146
00:06:03,840 --> 00:06:06,660
always use those tools which are proven

147
00:06:06,660 --> 00:06:09,419
in industry and also focus on things

148
00:06:09,419 --> 00:06:11,220
which are not done in the past things

149
00:06:11,220 --> 00:06:12,780
like when you use tools there are a lot

150
00:06:12,780 --> 00:06:14,820
of false positives and there are no

151
00:06:14,820 --> 00:06:17,340
recommendations given how to fix it so

152
00:06:17,340 --> 00:06:19,380
work on things where you can customize

153
00:06:19,380 --> 00:06:21,120
those tools don't just use the tools now

154
00:06:21,120 --> 00:06:22,680
checkbox gives lot of ability to

155
00:06:22,680 --> 00:06:24,900
customize it you can customize write

156
00:06:24,900 --> 00:06:26,819
query so that you can reduce the false

157
00:06:26,819 --> 00:06:29,220
positives so those things like that even

158
00:06:29,220 --> 00:06:31,440
dashed when you use Dash though don't

159
00:06:31,440 --> 00:06:34,440
just keep to the stage where you're

160
00:06:34,440 --> 00:06:36,600
writing the dash queries or simulation

161
00:06:36,600 --> 00:06:38,639
and then not looking at the industry

162
00:06:38,639 --> 00:06:40,440
what is changing so continuously

163
00:06:40,440 --> 00:06:43,020
Evolution and the last one is open

164
00:06:43,020 --> 00:06:46,440
source scan and the third party scan

165
00:06:46,440 --> 00:06:48,600
which we use Vera code so this is entire

166
00:06:48,600 --> 00:06:51,300
life cycle which you should Implement at

167
00:06:51,300 --> 00:06:53,639
every stage of the sdlc there has to be

168
00:06:53,639 --> 00:06:57,199
security uh practices implementation

169
00:06:57,199 --> 00:06:59,940
great great point so it's it's

170
00:06:59,940 --> 00:07:01,500
understanding that it's through the

171
00:07:01,500 --> 00:07:03,600
whole life cycle and using your your

172
00:07:03,600 --> 00:07:05,940
tool chain effectively and correctly

173
00:07:05,940 --> 00:07:08,520
through that whole whole life cycle so I

174
00:07:08,520 --> 00:07:10,740
got a question for everybody

175
00:07:10,740 --> 00:07:13,800
so we often thinks about you know

176
00:07:13,800 --> 00:07:16,740
building secure applications and you

177
00:07:16,740 --> 00:07:18,240
know we all have sort of our own little

178
00:07:18,240 --> 00:07:20,639
bit of recipes our own little tricks you

179
00:07:20,639 --> 00:07:22,199
know what are your top one or two

180
00:07:22,199 --> 00:07:24,960
application security best practices and

181
00:07:24,960 --> 00:07:27,419
what's your recipe

182
00:07:27,419 --> 00:07:30,670
why don't you start off with uh abstract

183
00:07:30,670 --> 00:07:33,780
[Music]

184
00:07:33,780 --> 00:07:36,960
uh from my point of view like uh one is

185
00:07:36,960 --> 00:07:39,300
the most important about the privilege

186
00:07:39,300 --> 00:07:41,039
access like we should have a limit

187
00:07:41,039 --> 00:07:43,500
access I'm not saying okay we should

188
00:07:43,500 --> 00:07:45,599
restrict the access to the developers on

189
00:07:45,599 --> 00:07:47,819
the repositories online repositories and

190
00:07:47,819 --> 00:07:49,979
the stuff but we should have some kind

191
00:07:49,979 --> 00:07:54,000
of a limit access so that we can prevent

192
00:07:54,000 --> 00:07:56,460
some kind of attacks here and second is

193
00:07:56,460 --> 00:07:59,099
about the continuous efforts in terms of

194
00:07:59,099 --> 00:08:01,139
the code what we are writing the

195
00:08:01,139 --> 00:08:02,639
developers are writing for the analysis

196
00:08:02,639 --> 00:08:04,319
of the course and the testing because

197
00:08:04,319 --> 00:08:07,259
right now like we are uh into the CI CD

198
00:08:07,259 --> 00:08:09,300
pipelines to use it so that continuous

199
00:08:09,300 --> 00:08:11,819
efforts of analysis and testing is more

200
00:08:11,819 --> 00:08:13,740
important so these are the two things I

201
00:08:13,740 --> 00:08:15,479
can say and I want other sponges to add

202
00:08:15,479 --> 00:08:16,919
on

203
00:08:16,919 --> 00:08:19,979
okay I'll quickly add on it so just

204
00:08:19,979 --> 00:08:22,919
extension to SD sdlc I think you should

205
00:08:22,919 --> 00:08:25,020
have a very mature security assessment

206
00:08:25,020 --> 00:08:27,780
pipeline in terms of

207
00:08:27,780 --> 00:08:29,759
um making sure all key controls are

208
00:08:29,759 --> 00:08:31,740
scanned and we comply as a cyber

209
00:08:31,740 --> 00:08:33,240
security program or a company you

210
00:08:33,240 --> 00:08:35,039
complied a lot of Standards like nist

211
00:08:35,039 --> 00:08:36,958
and so on so make sure right from

212
00:08:36,958 --> 00:08:39,719
architecture ssdlc your ethical hacking

213
00:08:39,719 --> 00:08:42,360
or mobile and Bug Bounty Whitehead so

214
00:08:42,360 --> 00:08:43,799
there are so many key controls that you

215
00:08:43,799 --> 00:08:46,140
should scan and nowadays again the

216
00:08:46,140 --> 00:08:47,580
change should happen right there

217
00:08:47,580 --> 00:08:49,800
shouldn't be only scanning there should

218
00:08:49,800 --> 00:08:52,800
be automation so all this scanning uh

219
00:08:52,800 --> 00:08:54,300
the workflow should be automated

220
00:08:54,300 --> 00:08:57,120
integrated good enough and the last one

221
00:08:57,120 --> 00:08:59,339
I would I want to mention is the cloud

222
00:08:59,339 --> 00:09:01,320
strategy quickly I think we have a

223
00:09:01,320 --> 00:09:03,660
separate question on that as well but

224
00:09:03,660 --> 00:09:06,480
depending upon your workload and payload

225
00:09:06,480 --> 00:09:08,279
in the company sensitivity of the

226
00:09:08,279 --> 00:09:10,040
transaction criticality of the security

227
00:09:10,040 --> 00:09:12,839
you should decide on the hybrid model

228
00:09:12,839 --> 00:09:15,779
versus public or private what goes in

229
00:09:15,779 --> 00:09:18,019
public what stays in private private

230
00:09:18,019 --> 00:09:20,820
depends on your company security

231
00:09:20,820 --> 00:09:22,920
strategies and the business that you are

232
00:09:22,920 --> 00:09:24,720
in let's say for fintech when you handle

233
00:09:24,720 --> 00:09:27,060
a lot of Pi information you cannot have

234
00:09:27,060 --> 00:09:28,560
all your workload in the public Cloud

235
00:09:28,560 --> 00:09:31,080
because though uh everybody knows about

236
00:09:31,080 --> 00:09:32,940
the advantages of the public Cloud there

237
00:09:32,940 --> 00:09:35,040
are still things to be worked upon in

238
00:09:35,040 --> 00:09:38,480
terms of security control logging

239
00:09:38,480 --> 00:09:41,760
and since cloud is known to everyone it

240
00:09:41,760 --> 00:09:43,560
is prone to DDOS more than your private

241
00:09:43,560 --> 00:09:45,839
one so I think things like that should

242
00:09:45,839 --> 00:09:48,440
be part of your recipe

243
00:09:48,440 --> 00:09:51,120
so what was the question again how what

244
00:09:51,120 --> 00:09:52,680
are the tips and tricks for what are the

245
00:09:52,680 --> 00:09:54,959
top application security best practices

246
00:09:54,959 --> 00:09:58,140
for your experience okay so I'll

247
00:09:58,140 --> 00:10:00,540
probably talk a bit on the maybe on the

248
00:10:00,540 --> 00:10:02,700
engineering side of things just like uh

249
00:10:02,700 --> 00:10:04,980
if you're managing infrastructure you

250
00:10:04,980 --> 00:10:07,080
would probably not want your secrets to

251
00:10:07,080 --> 00:10:08,880
be spread across different people in the

252
00:10:08,880 --> 00:10:10,860
organization right so if you're a

253
00:10:10,860 --> 00:10:13,320
security architect how about think of

254
00:10:13,320 --> 00:10:15,839
not you know spreading across security

255
00:10:15,839 --> 00:10:18,360
validation like input validation across

256
00:10:18,360 --> 00:10:20,519
every single developer how about build

257
00:10:20,519 --> 00:10:22,740
systems which will automatically

258
00:10:22,740 --> 00:10:25,200
validate input before the business logic

259
00:10:25,200 --> 00:10:27,720
is invoked right so you will have one

260
00:10:27,720 --> 00:10:29,880
single place for your security team to

261
00:10:29,880 --> 00:10:32,820
audit that all the validations are

262
00:10:32,820 --> 00:10:35,040
defined or not if it is not defined it

263
00:10:35,040 --> 00:10:37,500
is validation as a security team you

264
00:10:37,500 --> 00:10:38,760
don't have to look at 100 different

265
00:10:38,760 --> 00:10:40,800
applications you will just look at one

266
00:10:40,800 --> 00:10:42,899
place you will see that input validation

267
00:10:42,899 --> 00:10:45,300
is there I'll give an example like what

268
00:10:45,300 --> 00:10:47,519
I have seen in real life right what a

269
00:10:47,519 --> 00:10:49,440
lot of organization for follow say for

270
00:10:49,440 --> 00:10:51,420
example if you're an organization which

271
00:10:51,420 --> 00:10:53,880
has recently or maybe in the past

272
00:10:53,880 --> 00:10:56,880
adopted API First Development right you

273
00:10:56,880 --> 00:10:59,700
define specs maybe API specs or for any

274
00:10:59,700 --> 00:11:01,019
kind of software engineering you'll

275
00:11:01,019 --> 00:11:03,320
probably start with specs how about

276
00:11:03,320 --> 00:11:06,300
adopt defining validation criteria as

277
00:11:06,300 --> 00:11:09,120
part of the specs itself and generate

278
00:11:09,120 --> 00:11:11,880
code with input validation baked into it

279
00:11:11,880 --> 00:11:14,040
like I'll give you an example you can

280
00:11:14,040 --> 00:11:16,380
have if you use open API for as the

281
00:11:16,380 --> 00:11:18,660
specification for defining your apis you

282
00:11:18,660 --> 00:11:21,180
can have open API annotations to Define

283
00:11:21,180 --> 00:11:23,220
input validation for at your spec level

284
00:11:23,220 --> 00:11:25,620
and from there when you generate the

285
00:11:25,620 --> 00:11:28,320
code that code by default implements all

286
00:11:28,320 --> 00:11:29,940
kind of input validation that you have

287
00:11:29,940 --> 00:11:31,800
defined in the spec so imagine what

288
00:11:31,800 --> 00:11:33,000
happens the benefit

289
00:11:33,000 --> 00:11:35,459
you from a security perspective you

290
00:11:35,459 --> 00:11:36,959
don't need to go and look into 100

291
00:11:36,959 --> 00:11:39,420
different source code to see whether

292
00:11:39,420 --> 00:11:42,060
the input validations enter correctly or

293
00:11:42,060 --> 00:11:44,339
not you look at the spec you see input

294
00:11:44,339 --> 00:11:46,260
validations input validation constraints

295
00:11:46,260 --> 00:11:47,700
are defined

296
00:11:47,700 --> 00:11:50,399
all the validators are at the single as

297
00:11:50,399 --> 00:11:52,140
at a single source of Truth the

298
00:11:52,140 --> 00:11:54,600
validation logic is generated so you can

299
00:11:54,600 --> 00:11:56,220
have trust from your security

300
00:11:56,220 --> 00:11:58,200
architecture perspective that input

301
00:11:58,200 --> 00:12:00,180
validation will be performed so this is

302
00:12:00,180 --> 00:12:02,519
just one aspect of it so the overall

303
00:12:02,519 --> 00:12:06,060
point is that why not build system that

304
00:12:06,060 --> 00:12:08,339
are inherently secure so that you know

305
00:12:08,339 --> 00:12:09,899
the security decisions and security

306
00:12:09,899 --> 00:12:12,060
logic is not spread across various parts

307
00:12:12,060 --> 00:12:14,519
of the code or the infrastructure great

308
00:12:14,519 --> 00:12:16,800
Point great point and and I'll just

309
00:12:16,800 --> 00:12:19,320
close that comment up with one of the

310
00:12:19,320 --> 00:12:22,140
things that I find that's a real easy

311
00:12:22,140 --> 00:12:24,540
takeaway is

312
00:12:24,540 --> 00:12:28,040
as you build your programs create simple

313
00:12:28,040 --> 00:12:31,440
minimum requirements for all that that

314
00:12:31,440 --> 00:12:34,200
all software must perform right start

315
00:12:34,200 --> 00:12:36,480
with a minimum set of things that you

316
00:12:36,480 --> 00:12:38,339
want we were talking about the fclc

317
00:12:38,339 --> 00:12:40,500
talking about threat modeling and open

318
00:12:40,500 --> 00:12:42,899
source scanning put it in simple enough

319
00:12:42,899 --> 00:12:46,019
terms English terms terms that are that

320
00:12:46,019 --> 00:12:48,360
your leadership will understand

321
00:12:48,360 --> 00:12:51,060
and if you create minimums that are

322
00:12:51,060 --> 00:12:53,579
anyone can understand your 16 year old

323
00:12:53,579 --> 00:12:55,200
daughter can understand

324
00:12:55,200 --> 00:12:57,839
then it makes it super easy to get

325
00:12:57,839 --> 00:12:59,399
buy-in from leadership because when

326
00:12:59,399 --> 00:13:01,680
people don't perform them

327
00:13:01,680 --> 00:13:03,959
people ask questions but if you leave it

328
00:13:03,959 --> 00:13:06,540
in a technical jargon in your minimums

329
00:13:06,540 --> 00:13:07,860
and your articulation of how the

330
00:13:07,860 --> 00:13:09,839
minimums are done then it makes it very

331
00:13:09,839 --> 00:13:12,240
hard for leaders who you're really the

332
00:13:12,240 --> 00:13:14,760
people you want to to enforce these

333
00:13:14,760 --> 00:13:17,100
things on the development Community they

334
00:13:17,100 --> 00:13:18,959
won't understand them or they'll need

335
00:13:18,959 --> 00:13:20,700
additional understanding or additional

336
00:13:20,700 --> 00:13:22,740
education but by simply using simple

337
00:13:22,740 --> 00:13:25,019
terms clarifying what your minimums are

338
00:13:25,019 --> 00:13:27,779
and then ubiquitously rolling it out

339
00:13:27,779 --> 00:13:30,240
across your entire organization it

340
00:13:30,240 --> 00:13:33,959
becomes much easier to consume and apply

341
00:13:33,959 --> 00:13:38,399
so moving on to their next question so

342
00:13:38,399 --> 00:13:40,800
obviously securing cloud has been a real

343
00:13:40,800 --> 00:13:43,680
struggle I mean we heard today at a

344
00:13:43,680 --> 00:13:44,940
number of sessions around Cloud

345
00:13:44,940 --> 00:13:46,380
yesterday there was some great

346
00:13:46,380 --> 00:13:49,260
discussions about Cloud you know what

347
00:13:49,260 --> 00:13:52,079
are the top three mistakes you see that

348
00:13:52,079 --> 00:13:54,060
developers make and and how do you

349
00:13:54,060 --> 00:13:55,440
combat them

350
00:13:55,440 --> 00:13:57,300
Okay so

351
00:13:57,300 --> 00:13:59,579
from my perspective what I have seen one

352
00:13:59,579 --> 00:14:02,399
of the biggest mistake is uh you know

353
00:14:02,399 --> 00:14:04,620
not managing Secrets or privileged

354
00:14:04,620 --> 00:14:06,600
access in the cloud properly but I'll

355
00:14:06,600 --> 00:14:08,160
probably break it down into a bit more

356
00:14:08,160 --> 00:14:10,920
genetic based on my experience so what I

357
00:14:10,920 --> 00:14:12,480
have seen is that if you're starting a

358
00:14:12,480 --> 00:14:14,339
new company or if you're adopting Cloud

359
00:14:14,339 --> 00:14:16,500
many times what happens is that you

360
00:14:16,500 --> 00:14:18,959
start with probably a few Cloud accounts

361
00:14:18,959 --> 00:14:20,220
which are meant for your production and

362
00:14:20,220 --> 00:14:22,620
one produce and then you end up creating

363
00:14:22,620 --> 00:14:25,200
a whole bunch of accounts for say a

364
00:14:25,200 --> 00:14:27,540
testing purpose for POC environments for

365
00:14:27,540 --> 00:14:30,180
different teams right then later when

366
00:14:30,180 --> 00:14:32,040
you revisit and you see that you want to

367
00:14:32,040 --> 00:14:34,740
probably have a cloud governance and

368
00:14:34,740 --> 00:14:36,959
Cloud security program implemented you

369
00:14:36,959 --> 00:14:39,120
certainly have multiple multiple Cloud

370
00:14:39,120 --> 00:14:40,680
accounts laying around here and there

371
00:14:40,680 --> 00:14:42,420
and you don't know what to do about it

372
00:14:42,420 --> 00:14:44,639
right so then you have to probably get

373
00:14:44,639 --> 00:14:47,459
them towards a organization adopt uh in

374
00:14:47,459 --> 00:14:49,560
AWS language service control policies

375
00:14:49,560 --> 00:14:52,260
add up policies across so first point is

376
00:14:52,260 --> 00:14:54,480
from my perspective bringing this

377
00:14:54,480 --> 00:14:56,820
account governance is probably the

378
00:14:56,820 --> 00:14:58,980
fundamental of getting started with a

379
00:14:58,980 --> 00:15:02,459
public crowd right subsequently as most

380
00:15:02,459 --> 00:15:04,040
of us have seen

381
00:15:04,040 --> 00:15:07,920
traditional vulnerabilities will not be

382
00:15:07,920 --> 00:15:10,079
relevant for cloud managed services for

383
00:15:10,079 --> 00:15:13,320
example consider AWS ALB even though AWS

384
00:15:13,320 --> 00:15:15,540
LV was probably vulnerable to this uh

385
00:15:15,540 --> 00:15:19,320
desync HTTP d-sync attack but General NG

386
00:15:19,320 --> 00:15:21,360
Annex vulnerabilities or exploits will

387
00:15:21,360 --> 00:15:24,360
probably not work against ALB right

388
00:15:24,360 --> 00:15:26,820
but many a times the most common

389
00:15:26,820 --> 00:15:28,800
vulnerabilities or flaws that we see in

390
00:15:28,800 --> 00:15:31,560
the cloud is misconfiguration not being

391
00:15:31,560 --> 00:15:33,779
able to leverage the identity and access

392
00:15:33,779 --> 00:15:36,300
management capability provided by the

393
00:15:36,300 --> 00:15:37,980
past the cloud platform itself

394
00:15:37,980 --> 00:15:40,139
effectively when I have also made the

395
00:15:40,139 --> 00:15:42,000
mistake like for example for even for

396
00:15:42,000 --> 00:15:43,980
null null Community many of you may know

397
00:15:43,980 --> 00:15:47,220
that we host some part of null websites

398
00:15:47,220 --> 00:15:49,920
in AWS that created initially days we

399
00:15:49,920 --> 00:15:51,980
have created policies with lots of

400
00:15:51,980 --> 00:15:55,320
needless permissions attached right so

401
00:15:55,320 --> 00:15:57,660
these are some of the problems that we

402
00:15:57,660 --> 00:15:59,820
need to look at that whenever you you

403
00:15:59,820 --> 00:16:01,740
follow principle of least privilege

404
00:16:01,740 --> 00:16:04,079
whenever you provision or use any kind

405
00:16:04,079 --> 00:16:06,420
of cloud resources have a as a security

406
00:16:06,420 --> 00:16:07,980
architect or security profession

407
00:16:07,980 --> 00:16:09,660
professional have very good

408
00:16:09,660 --> 00:16:11,399
understanding of the identity and access

409
00:16:11,399 --> 00:16:13,260
management capability of the underlying

410
00:16:13,260 --> 00:16:15,540
platform and see how we can enforce

411
00:16:15,540 --> 00:16:16,920
principle of least privilege whenever

412
00:16:16,920 --> 00:16:19,440
you are adopting any services and third

413
00:16:19,440 --> 00:16:22,320
again as I mentioned Secrets management

414
00:16:22,320 --> 00:16:25,620
how how do you handle that right so you

415
00:16:25,620 --> 00:16:27,240
need to have POC accounts for your

416
00:16:27,240 --> 00:16:29,820
developers you need to give access to

417
00:16:29,820 --> 00:16:31,320
various Cloud environments to your

418
00:16:31,320 --> 00:16:33,899
developers how do you provision that for

419
00:16:33,899 --> 00:16:36,240
production or other environments how do

420
00:16:36,240 --> 00:16:37,500
you provide access to various

421
00:16:37,500 --> 00:16:39,420
application to various resources right

422
00:16:39,420 --> 00:16:42,480
follow imds or instance instance based

423
00:16:42,480 --> 00:16:45,420
uh permissions don't provide uh you know

424
00:16:45,420 --> 00:16:47,399
a secret access I mean provision

425
00:16:47,399 --> 00:16:50,399
credentials use the capabilities of the

426
00:16:50,399 --> 00:16:52,560
cloud for provisioning Access I would

427
00:16:52,560 --> 00:16:54,180
say these are some of the best practices

428
00:16:54,180 --> 00:16:57,360
great great points excellent so I I want

429
00:16:57,360 --> 00:16:59,820
to sort of shift gears a little bit and

430
00:16:59,820 --> 00:17:02,759
we've heard so many challenges over the

431
00:17:02,759 --> 00:17:04,260
last you know especially in the last 12

432
00:17:04,260 --> 00:17:06,720
18 months about you know

433
00:17:06,720 --> 00:17:09,599
um securing software and the issues that

434
00:17:09,599 --> 00:17:12,059
come with uh attacks coming from the

435
00:17:12,059 --> 00:17:15,299
supply chain in other areas you know um

436
00:17:15,299 --> 00:17:17,459
how should companies protect the

437
00:17:17,459 --> 00:17:18,480
Integrity of their development

438
00:17:18,480 --> 00:17:21,839
environments I want everybody but yeah

439
00:17:21,839 --> 00:17:24,000
go ahead why don't you start us off

440
00:17:24,000 --> 00:17:25,500
Okay so

441
00:17:25,500 --> 00:17:27,720
I think everybody has heard about zero

442
00:17:27,720 --> 00:17:29,400
trust architecture it's not an

443
00:17:29,400 --> 00:17:31,200
architecture so to answer your question

444
00:17:31,200 --> 00:17:33,960
Matt what every company should do to

445
00:17:33,960 --> 00:17:35,280
have the Integrity of their Dev

446
00:17:35,280 --> 00:17:37,320
environment I think this is the time

447
00:17:37,320 --> 00:17:39,840
where everybody has to jump on to zero

448
00:17:39,840 --> 00:17:41,940
trust philosophy I think last two years

449
00:17:41,940 --> 00:17:44,820
of pandemic has taught us that we cannot

450
00:17:44,820 --> 00:17:47,460
trust any external versus internal

451
00:17:47,460 --> 00:17:49,980
Network as such so I'll just little bit

452
00:17:49,980 --> 00:17:52,260
go over the building blocks of zero

453
00:17:52,260 --> 00:17:53,760
trust philosophy and again it's a

454
00:17:53,760 --> 00:17:55,700
philosophy it's not one single

455
00:17:55,700 --> 00:17:59,580
architecture or technology right from uh

456
00:17:59,580 --> 00:18:01,740
you know earlier we used to First Trust

457
00:18:01,740 --> 00:18:04,320
and then verify now first we verify and

458
00:18:04,320 --> 00:18:06,360
we trust so that is the first

459
00:18:06,360 --> 00:18:08,520
foundational principle for zero trust

460
00:18:08,520 --> 00:18:11,539
you trust no one unless you verify

461
00:18:11,539 --> 00:18:14,520
and every network is hostile that is

462
00:18:14,520 --> 00:18:16,500
what that has taught us there is nothing

463
00:18:16,500 --> 00:18:18,419
like internal network is secure and

464
00:18:18,419 --> 00:18:20,039
external network is not secure because

465
00:18:20,039 --> 00:18:22,620
both networks are prone for attacks and

466
00:18:22,620 --> 00:18:25,440
hacks uh you authenticate every end

467
00:18:25,440 --> 00:18:28,620
entity every user Network device that is

468
00:18:28,620 --> 00:18:30,960
interacting with the system so that is

469
00:18:30,960 --> 00:18:33,260
where you verify each and every entity

470
00:18:33,260 --> 00:18:35,520
authentication I think IM technologies

471
00:18:35,520 --> 00:18:38,100
have evolved to uh starting with least

472
00:18:38,100 --> 00:18:40,080
privilege or just in time privilege so

473
00:18:40,080 --> 00:18:42,960
you give access rights or privilege just

474
00:18:42,960 --> 00:18:44,820
for the task that you're doing and just

475
00:18:44,820 --> 00:18:46,860
for the time that you want to do that so

476
00:18:46,860 --> 00:18:49,559
jit and least privilege are coming into

477
00:18:49,559 --> 00:18:51,900
picture again fine grain authorization

478
00:18:51,900 --> 00:18:54,059
so give very very fine grain

479
00:18:54,059 --> 00:18:55,980
authorization to each entity in the

480
00:18:55,980 --> 00:18:58,559
system right from Network to infra to

481
00:18:58,559 --> 00:19:01,080
app so for the Developers for the

482
00:19:01,080 --> 00:19:02,820
developers yes for the developers

483
00:19:02,820 --> 00:19:04,860
because you know right as there is a

484
00:19:04,860 --> 00:19:07,020
study that more than 50 percent of

485
00:19:07,020 --> 00:19:09,080
attacks are internal

486
00:19:09,080 --> 00:19:13,500
attacks Insider threats so yep that and

487
00:19:13,500 --> 00:19:14,940
then there is this continuous security

488
00:19:14,940 --> 00:19:17,520
efficiency which is also part of zero

489
00:19:17,520 --> 00:19:19,799
trust now you must have heard about the

490
00:19:19,799 --> 00:19:21,660
behavioral patterns right so every time

491
00:19:21,660 --> 00:19:23,220
you see an incident every assignment

492
00:19:23,220 --> 00:19:25,320
every time there is an attack or threat

493
00:19:25,320 --> 00:19:26,820
we talked about threat Intel I think

494
00:19:26,820 --> 00:19:29,039
there was one session so there has to be

495
00:19:29,039 --> 00:19:32,220
a closed feedback loop uh from that to

496
00:19:32,220 --> 00:19:34,980
learn that behavioral pattern and feed

497
00:19:34,980 --> 00:19:37,200
that back into the system so that system

498
00:19:37,200 --> 00:19:39,720
becomes efficient every time the

499
00:19:39,720 --> 00:19:41,520
incident happens or attack happens so

500
00:19:41,520 --> 00:19:43,679
that continuous efficiency has to be

501
00:19:43,679 --> 00:19:47,220
there then secure logging monitoring

502
00:19:47,220 --> 00:19:49,200
yeah because that's part of the zero

503
00:19:49,200 --> 00:19:50,940
trust too so I think there are many many

504
00:19:50,940 --> 00:19:53,039
building blocks as such and that should

505
00:19:53,039 --> 00:19:55,140
be the philosophy for everybody to as

506
00:19:55,140 --> 00:19:57,360
every organization to actually have for

507
00:19:57,360 --> 00:19:58,980
the Integrity of their Dev environments

508
00:19:58,980 --> 00:20:01,860
right Harish what do you think

509
00:20:01,860 --> 00:20:04,200
uh from my point of view the most

510
00:20:04,200 --> 00:20:06,120
important is the auditing part which

511
00:20:06,120 --> 00:20:07,500
noodle has mentioned about it like

512
00:20:07,500 --> 00:20:09,900
auditing is most important because you

513
00:20:09,900 --> 00:20:12,360
track your changes so developers do a

514
00:20:12,360 --> 00:20:13,980
lot of changes in the environment might

515
00:20:13,980 --> 00:20:16,559
be they are using the on-prem on the

516
00:20:16,559 --> 00:20:18,360
online repositories to push their codes

517
00:20:18,360 --> 00:20:21,120
so you know what changes they are doing

518
00:20:21,120 --> 00:20:24,419
what uh what versions they are using and

519
00:20:24,419 --> 00:20:26,760
if in case of any problem or in case of

520
00:20:26,760 --> 00:20:28,740
an incident you want to track back yes

521
00:20:28,740 --> 00:20:31,140
you have all the auditing in place so

522
00:20:31,140 --> 00:20:33,539
auditing is most important and we have a

523
00:20:33,539 --> 00:20:36,539
lot of proactive tools in the market uh

524
00:20:36,539 --> 00:20:38,160
which can do the proactively monitoring

525
00:20:38,160 --> 00:20:39,960
of and which can maintain the Integrity

526
00:20:39,960 --> 00:20:42,120
of the software as well so blackduck is

527
00:20:42,120 --> 00:20:43,799
one of the two like which is there in

528
00:20:43,799 --> 00:20:45,539
the market similar like there's so many

529
00:20:45,539 --> 00:20:47,700
us there so these are the two stuff if

530
00:20:47,700 --> 00:20:49,679
you will maintain then it's easy you

531
00:20:49,679 --> 00:20:52,080
guys like uh to maintain the integrity

532
00:20:52,080 --> 00:20:54,240
and damn sure like you can take it out

533
00:20:54,240 --> 00:20:56,880
awesome I'm sure go ahead

534
00:20:56,880 --> 00:20:58,980
yeah I'll probably be a bit uh more

535
00:20:58,980 --> 00:21:02,400
specific so if you see after uh this

536
00:21:02,400 --> 00:21:04,980
what is this where this Microsoft fire I

537
00:21:04,980 --> 00:21:07,260
got compromised because the solar winds

538
00:21:07,260 --> 00:21:09,120
right so everyone everyone has started

539
00:21:09,120 --> 00:21:11,220
talking about supply chain security it's

540
00:21:11,220 --> 00:21:12,900
actually very big it's not just about

541
00:21:12,900 --> 00:21:15,360
libraries bunch of things up there but

542
00:21:15,360 --> 00:21:17,220
uh if you're if you're looking if you

543
00:21:17,220 --> 00:21:19,620
look at this open ssf initiative open

544
00:21:19,620 --> 00:21:21,299
source security Foundation initiative

545
00:21:21,299 --> 00:21:23,280
they are actively trying to solve this

546
00:21:23,280 --> 00:21:25,080
problem this major problem this is a

547
00:21:25,080 --> 00:21:26,520
very difficult problem actually it's not

548
00:21:26,520 --> 00:21:28,799
just about running ACA tools or knowing

549
00:21:28,799 --> 00:21:30,360
about third party vulnerabilities it's

550
00:21:30,360 --> 00:21:33,059
much bigger than that one of the one of

551
00:21:33,059 --> 00:21:35,640
the things which open ssf is trying to

552
00:21:35,640 --> 00:21:38,960
solve is ensuring the

553
00:21:38,960 --> 00:21:42,240
Integrity of software starting from

554
00:21:42,240 --> 00:21:45,179
Source till it gets deployed and

555
00:21:45,179 --> 00:21:47,159
operated in an environment right

556
00:21:47,159 --> 00:21:50,280
ultimately you want your infrastructure

557
00:21:50,280 --> 00:21:52,260
your environment where your applications

558
00:21:52,260 --> 00:21:55,440
are running to be trusted right you want

559
00:21:55,440 --> 00:21:57,780
to know what is running is the exact

560
00:21:57,780 --> 00:22:00,000
same code which is built or not right

561
00:22:00,000 --> 00:22:02,520
there has been cases in the past where

562
00:22:02,520 --> 00:22:04,320
say you have your secure source code

563
00:22:04,320 --> 00:22:06,840
control repository but your CI CD is

564
00:22:06,840 --> 00:22:10,320
compromised CSD is not protected Jenkins

565
00:22:10,320 --> 00:22:12,419
for example Jenkins is well known that

566
00:22:12,419 --> 00:22:14,520
if if you if someone gets a user account

567
00:22:14,520 --> 00:22:16,500
in Jenkins there is a high chance they

568
00:22:16,500 --> 00:22:18,240
will submit a malicious job and gain

569
00:22:18,240 --> 00:22:20,039
access to the cicd environment itself

570
00:22:20,039 --> 00:22:22,679
right so as part of this openssf

571
00:22:22,679 --> 00:22:25,320
initiative multiple tools are built in

572
00:22:25,320 --> 00:22:28,200
order to generate manifest of every

573
00:22:28,200 --> 00:22:30,179
single build artifact cryptographically

574
00:22:30,179 --> 00:22:32,039
signed those build artifact General

575
00:22:32,039 --> 00:22:33,960
generate provenance what is called

576
00:22:33,960 --> 00:22:36,120
provenance right so at the time of

577
00:22:36,120 --> 00:22:37,919
infrastructure provisioning deploying

578
00:22:37,919 --> 00:22:39,600
this applications into a particular

579
00:22:39,600 --> 00:22:42,120
infrastructure you can verify whether

580
00:22:42,120 --> 00:22:44,820
the artifact that you are deploying is

581
00:22:44,820 --> 00:22:47,039
actually the artifact which was built by

582
00:22:47,039 --> 00:22:49,320
a trusted build system or not right so

583
00:22:49,320 --> 00:22:51,419
maybe you can look at this set of tools

584
00:22:51,419 --> 00:22:54,360
there is also a framework called the SLS

585
00:22:54,360 --> 00:22:55,679
is the what is called the salsa

586
00:22:55,679 --> 00:22:58,020
framework right which actively talks

587
00:22:58,020 --> 00:23:00,720
about uh the best practices and the you

588
00:23:00,720 --> 00:23:02,400
know the tooling that you should adopt

589
00:23:02,400 --> 00:23:04,260
in order to harden your application

590
00:23:04,260 --> 00:23:07,260
software supply chain great point so for

591
00:23:07,260 --> 00:23:09,299
those you know salsa framework is is

592
00:23:09,299 --> 00:23:11,460
something that definitely should take a

593
00:23:11,460 --> 00:23:13,500
look at if you've not familiar with it

594
00:23:13,500 --> 00:23:16,260
so let's get into uh the next question

595
00:23:16,260 --> 00:23:20,159
Harish so a lot of devops yeah teams

596
00:23:20,159 --> 00:23:22,320
struggle with security you know what

597
00:23:22,320 --> 00:23:23,820
kind of lessons can you share with

598
00:23:23,820 --> 00:23:27,299
implementing you know devsecops

599
00:23:27,299 --> 00:23:30,600
yeah recently we have so many uh like

600
00:23:30,600 --> 00:23:33,240
lessons there like uh we all measured

601
00:23:33,240 --> 00:23:34,799
most of us knows about the local

602
00:23:34,799 --> 00:23:37,320
vulnerabilities and the spring Force

603
00:23:37,320 --> 00:23:38,820
shell so these kind of vulnerabilities

604
00:23:38,820 --> 00:23:41,159
are there in the market so let's just go

605
00:23:41,159 --> 00:23:42,900
into the deep dive into the low 4J so

606
00:23:42,900 --> 00:23:45,360
what was that like it's just a basic old

607
00:23:45,360 --> 00:23:48,000
vulnerability which was excluded by

608
00:23:48,000 --> 00:23:50,640
someone and put it on the cloud and then

609
00:23:50,640 --> 00:23:52,440
it becomes the nightmare for all these

610
00:23:52,440 --> 00:23:54,900
cyber security defense professionals so

611
00:23:54,900 --> 00:23:57,720
that's the great lesson for all the all

612
00:23:57,720 --> 00:23:59,220
those organizations which is still

613
00:23:59,220 --> 00:24:01,320
following the all methodology of devops

614
00:24:01,320 --> 00:24:03,720
they are they are just trying to

615
00:24:03,720 --> 00:24:05,280
adopting or they are into the face okay

616
00:24:05,280 --> 00:24:07,020
they will they're thinking that they

617
00:24:07,020 --> 00:24:09,179
will do it uh they will add the security

618
00:24:09,179 --> 00:24:11,159
into their devops part but they are not

619
00:24:11,159 --> 00:24:13,980
so they have to think in that way okay

620
00:24:13,980 --> 00:24:17,100
they they can add it they can learn

621
00:24:17,100 --> 00:24:19,200
those lessons so that history should not

622
00:24:19,200 --> 00:24:20,820
be repeated and we should not have these

623
00:24:20,820 --> 00:24:22,919
kind of things uh because what happens

624
00:24:22,919 --> 00:24:25,080
that when you you don't have the

625
00:24:25,080 --> 00:24:27,000
security in the development phase so you

626
00:24:27,000 --> 00:24:29,400
are putting not your organizations you

627
00:24:29,400 --> 00:24:30,539
are putting all those organizations

628
00:24:30,539 --> 00:24:33,240
which is going to use that software in

629
00:24:33,240 --> 00:24:34,440
the market later once into the

630
00:24:34,440 --> 00:24:36,960
production so it is a very huge effort

631
00:24:36,960 --> 00:24:39,840
for all those organizations because love

632
00:24:39,840 --> 00:24:42,539
for like thousands of applications was

633
00:24:42,539 --> 00:24:44,940
compromised nobody was knows okay where

634
00:24:44,940 --> 00:24:47,100
that application is that what module

635
00:24:47,100 --> 00:24:50,400
they have to uh patch it or fix it and

636
00:24:50,400 --> 00:24:52,679
they have a lot of Legacy also because

637
00:24:52,679 --> 00:24:54,840
it was an old vulnerability exploited

638
00:24:54,840 --> 00:24:56,580
they have a lot of dependency so they

639
00:24:56,580 --> 00:24:58,080
can't fix it over the night and still

640
00:24:58,080 --> 00:24:59,760
till now also there's organizations

641
00:24:59,760 --> 00:25:01,980
which are still fixing out trying to

642
00:25:01,980 --> 00:25:03,360
find out the alternative and walk

643
00:25:03,360 --> 00:25:05,280
arounds okay they have to work on the

644
00:25:05,280 --> 00:25:07,679
log 4J or they have to fix it out so

645
00:25:07,679 --> 00:25:09,900
it's a lesson definitely for all of us

646
00:25:09,900 --> 00:25:11,880
and for all those organizations who is

647
00:25:11,880 --> 00:25:13,460
working on that one

648
00:25:13,460 --> 00:25:16,500
to adopt that security into the divorce

649
00:25:16,500 --> 00:25:19,620
part great great points so Abhishek 80

650
00:25:19,620 --> 00:25:21,360
of all the software out there is got

651
00:25:21,360 --> 00:25:22,679
open source you've been talking about

652
00:25:22,679 --> 00:25:24,900
open source off and on yesterday and now

653
00:25:24,900 --> 00:25:27,179
today even in our discussion you know

654
00:25:27,179 --> 00:25:29,400
you know any lessons learned how to best

655
00:25:29,400 --> 00:25:31,799
manage open source risks

656
00:25:31,799 --> 00:25:34,919
yeah so uh I can probably share uh my

657
00:25:34,919 --> 00:25:37,440
experience what has worked for me at the

658
00:25:37,440 --> 00:25:40,380
skill that I have seen so if we consider

659
00:25:40,380 --> 00:25:42,659
it as Matt mentioned that 80 percent of

660
00:25:42,659 --> 00:25:44,520
software in any application comes from

661
00:25:44,520 --> 00:25:47,640
open source right so that means whatever

662
00:25:47,640 --> 00:25:49,320
risks are there vulnerabilities are

663
00:25:49,320 --> 00:25:52,080
there in your application in addition to

664
00:25:52,080 --> 00:25:54,840
that you are inheriting the risks the

665
00:25:54,840 --> 00:25:57,240
vulnerabilities from all the third party

666
00:25:57,240 --> 00:25:59,039
applications or third-party dependencies

667
00:25:59,039 --> 00:26:00,900
that you have right

668
00:26:00,900 --> 00:26:04,080
so for me uh if I am starting a new

669
00:26:04,080 --> 00:26:05,820
project today

670
00:26:05,820 --> 00:26:08,220
I would probably adopt tools like say

671
00:26:08,220 --> 00:26:10,320
dependency check or maybe commercial

672
00:26:10,320 --> 00:26:12,960
tools like black dark or snake to start

673
00:26:12,960 --> 00:26:15,419
building a gate security gate right from

674
00:26:15,419 --> 00:26:18,120
day one where you cannot ship an

675
00:26:18,120 --> 00:26:21,120
application with high or maybe critical

676
00:26:21,120 --> 00:26:22,799
vulnerabilities in third party

677
00:26:22,799 --> 00:26:25,320
dependencies right but that is probably

678
00:26:25,320 --> 00:26:27,360
not ideal you will probably most of us

679
00:26:27,360 --> 00:26:29,820
have lots of Legacy applications or

680
00:26:29,820 --> 00:26:31,440
applications where we have not

681
00:26:31,440 --> 00:26:34,340
implemented the gates right in such case

682
00:26:34,340 --> 00:26:37,260
what has worked for me or what I would

683
00:26:37,260 --> 00:26:39,480
suggest from based on my experience is

684
00:26:39,480 --> 00:26:41,640
that probably we should start by

685
00:26:41,640 --> 00:26:43,799
implementing the detective control side

686
00:26:43,799 --> 00:26:46,380
of things adopt the same set of tools

687
00:26:46,380 --> 00:26:48,720
scan this application maybe as part of

688
00:26:48,720 --> 00:26:51,480
the Ci or on a nightly basis build some

689
00:26:51,480 --> 00:26:53,400
dashboard where it gives you a

690
00:26:53,400 --> 00:26:55,320
visibility of your software bill of

691
00:26:55,320 --> 00:26:58,080
materials across all your projects all

692
00:26:58,080 --> 00:26:59,820
the vulnerabilities that you are

693
00:26:59,820 --> 00:27:02,299
inheriting by adopting those third party

694
00:27:02,299 --> 00:27:04,679
libraries as well as maybe the licensing

695
00:27:04,679 --> 00:27:06,360
related things if that's relevant for

696
00:27:06,360 --> 00:27:07,260
you

697
00:27:07,260 --> 00:27:09,960
what has worked for me also like showing

698
00:27:09,960 --> 00:27:12,240
this dashboard to the respective teams

699
00:27:12,240 --> 00:27:13,919
maybe the engineering managers or the

700
00:27:13,919 --> 00:27:16,860
directors and have them take action just

701
00:27:16,860 --> 00:27:19,140
get their commitment that we will reduce

702
00:27:19,140 --> 00:27:22,140
or remove the only the critical and high

703
00:27:22,140 --> 00:27:24,360
risk vulnerabilities right so that is

704
00:27:24,360 --> 00:27:26,460
probably a stepping tone stepping stone

705
00:27:26,460 --> 00:27:29,460
that will lead us to a baseline of

706
00:27:29,460 --> 00:27:33,179
hygiene as well as drive a culture of

707
00:27:33,179 --> 00:27:35,279
shared security responsibility where the

708
00:27:35,279 --> 00:27:37,140
teams are responsible for you know the

709
00:27:37,140 --> 00:27:39,059
various teams are responsible for the

710
00:27:39,059 --> 00:27:40,799
security of their own software

711
00:27:40,799 --> 00:27:43,679
components right once a certain Baseline

712
00:27:43,679 --> 00:27:45,419
is reached that most of the applications

713
00:27:45,419 --> 00:27:47,580
do not have high or critical

714
00:27:47,580 --> 00:27:49,020
vulnerabilities in their third party

715
00:27:49,020 --> 00:27:52,080
dependency that is a place where we

716
00:27:52,080 --> 00:27:54,480
should probably bring in some preventive

717
00:27:54,480 --> 00:27:58,020
controls which prevents introduction of

718
00:27:58,020 --> 00:28:00,120
new high-end critical vulnerability so

719
00:28:00,120 --> 00:28:01,380
that this system

720
00:28:01,380 --> 00:28:03,480
what this means Baseline that you have

721
00:28:03,480 --> 00:28:05,820
achieved with some hard work is

722
00:28:05,820 --> 00:28:07,620
maintained right otherwise what will

723
00:28:07,620 --> 00:28:09,000
happen is that again this will get

724
00:28:09,000 --> 00:28:10,679
polluted new vulnerabilities will come

725
00:28:10,679 --> 00:28:13,320
in great Point yeah in managing your

726
00:28:13,320 --> 00:28:16,080
backlog is uh is a big challenge if you

727
00:28:16,080 --> 00:28:17,760
don't already start some process to

728
00:28:17,760 --> 00:28:19,980
clean it up so you know part of what

729
00:28:19,980 --> 00:28:22,020
we've been talking about is is really

730
00:28:22,020 --> 00:28:24,120
talking about and dealing with

731
00:28:24,120 --> 00:28:26,039
developers and in development

732
00:28:26,039 --> 00:28:28,320
communities and one of the things that

733
00:28:28,320 --> 00:28:30,960
comes up a lot is about the resistance

734
00:28:30,960 --> 00:28:32,640
um to form you know the Cyber work at

735
00:28:32,640 --> 00:28:35,279
the right time or hey I've got to get

736
00:28:35,279 --> 00:28:37,620
this delivered you know if it stows it

737
00:28:37,620 --> 00:28:39,720
goes and we gotta you know we have to

738
00:28:39,720 --> 00:28:41,760
make this release this week you know and

739
00:28:41,760 --> 00:28:44,580
so it tends to have cyber security done

740
00:28:44,580 --> 00:28:46,500
at the last minute or sometimes being

741
00:28:46,500 --> 00:28:47,460
cut off

742
00:28:47,460 --> 00:28:50,820
and you know to me it it goes back to

743
00:28:50,820 --> 00:28:54,480
around the accountability a lot of what

744
00:28:54,480 --> 00:28:57,000
accountability is dealt with today and

745
00:28:57,000 --> 00:28:59,220
most companies is at the developer level

746
00:28:59,220 --> 00:29:01,200
around vulnerabilities they don't think

747
00:29:01,200 --> 00:29:03,179
of it as it's a transactional activity

748
00:29:03,179 --> 00:29:05,640
it's like okay hey you needed to do this

749
00:29:05,640 --> 00:29:07,500
task or you needed to perform this or

750
00:29:07,500 --> 00:29:09,960
hey you've got six criticals in your

751
00:29:09,960 --> 00:29:11,820
your process or your product your

752
00:29:11,820 --> 00:29:13,100
software

753
00:29:13,100 --> 00:29:16,080
and what I want you to think about is a

754
00:29:16,080 --> 00:29:17,520
slightly different View

755
00:29:17,520 --> 00:29:19,279
and that is

756
00:29:19,279 --> 00:29:22,380
accountability for software isn't just

757
00:29:22,380 --> 00:29:24,659
your job it's your boss's boss's boss

758
00:29:24,659 --> 00:29:26,760
all the way up to the owner of the

759
00:29:26,760 --> 00:29:28,679
company right because at the end of the

760
00:29:28,679 --> 00:29:31,380
day it's their product and

761
00:29:31,380 --> 00:29:33,899
if you think this way and build a

762
00:29:33,899 --> 00:29:37,559
culture of that you actually will get a

763
00:29:37,559 --> 00:29:40,260
more Universal adoption of of cyber

764
00:29:40,260 --> 00:29:41,580
security in your company

765
00:29:41,580 --> 00:29:43,679
one of the simplest ways is is driving

766
00:29:43,679 --> 00:29:46,140
that accountability that so that the

767
00:29:46,140 --> 00:29:48,240
manage the development managers and ctOS

768
00:29:48,240 --> 00:29:50,820
all understand that your work as a

769
00:29:50,820 --> 00:29:53,960
developer they're responsible for it

770
00:29:53,960 --> 00:29:57,299
and in you know a great example where

771
00:29:57,299 --> 00:29:59,640
where I've come from is we have a

772
00:29:59,640 --> 00:30:01,620
program that we've established it says

773
00:30:01,620 --> 00:30:03,600
Hey the CTO signs off on every release

774
00:30:03,600 --> 00:30:05,399
of software

775
00:30:05,399 --> 00:30:08,100
and when the CTO is the person signing

776
00:30:08,100 --> 00:30:10,740
off on the software you can be assured

777
00:30:10,740 --> 00:30:12,240
the developer is not going to hand up

778
00:30:12,240 --> 00:30:14,940
bad code well they might do it once

779
00:30:14,940 --> 00:30:16,260
but there's surely not going to be

780
00:30:16,260 --> 00:30:19,320
second time and it drives a level of

781
00:30:19,320 --> 00:30:21,179
maturity and it drives a level of

782
00:30:21,179 --> 00:30:23,159
diligence into the quality of software

783
00:30:23,159 --> 00:30:25,799
and more importantly it drives a whole

784
00:30:25,799 --> 00:30:28,320
cultural mindset of this is important

785
00:30:28,320 --> 00:30:30,600
it's quality it's part of what we should

786
00:30:30,600 --> 00:30:33,059
be delivering so just think about that

787
00:30:33,059 --> 00:30:35,880
as you implement your own programs how

788
00:30:35,880 --> 00:30:37,500
can you drive that accountability

789
00:30:37,500 --> 00:30:40,620
further up into the organization

790
00:30:40,620 --> 00:30:44,580
so I want to jump into Urdu

791
00:30:44,580 --> 00:30:46,500
from one vendor to another let's jump

792
00:30:46,500 --> 00:30:48,720
into software supply chain risk how

793
00:30:48,720 --> 00:30:51,419
would you combat that

794
00:30:51,419 --> 00:30:53,100
yeah so I think some of the points

795
00:30:53,100 --> 00:30:54,779
Abhishek already mentioned so I'll try

796
00:30:54,779 --> 00:30:57,179
to have some additional one so

797
00:30:57,179 --> 00:30:58,919
everybody's aware of today's software

798
00:30:58,919 --> 00:31:01,320
supply chain right when you build any

799
00:31:01,320 --> 00:31:03,000
software there are a lot of dependencies

800
00:31:03,000 --> 00:31:05,820
because not everything you have in your

801
00:31:05,820 --> 00:31:08,520
control right from infrastructure there

802
00:31:08,520 --> 00:31:11,640
are binaries then you have a third party

803
00:31:11,640 --> 00:31:14,820
open source as well as I think a build

804
00:31:14,820 --> 00:31:16,860
tools and so on so the code that you

805
00:31:16,860 --> 00:31:18,779
write it depends on lot of things in the

806
00:31:18,779 --> 00:31:21,059
in the ecosystem and that's where the

807
00:31:21,059 --> 00:31:23,399
chain supply chain comes and because you

808
00:31:23,399 --> 00:31:25,740
have many components and dependencies of

809
00:31:25,740 --> 00:31:28,080
course there is a risk because if any

810
00:31:28,080 --> 00:31:29,880
component goes Rogue or every any

811
00:31:29,880 --> 00:31:31,919
component is exploited the entire chain

812
00:31:31,919 --> 00:31:34,559
is is exploited and we have seen the

813
00:31:34,559 --> 00:31:36,299
example I think the one which Abhishek

814
00:31:36,299 --> 00:31:38,340
mentioned solar winds right because

815
00:31:38,340 --> 00:31:40,799
if that was exploited all the

816
00:31:40,799 --> 00:31:43,200
organizations using that tool got um

817
00:31:43,200 --> 00:31:45,659
actually at a risk now how to combat

818
00:31:45,659 --> 00:31:47,520
that so three points I was thinking

819
00:31:47,520 --> 00:31:48,840
about

820
00:31:48,840 --> 00:31:51,000
um one definitely there has to be a

821
00:31:51,000 --> 00:31:53,460
continuous open source or third party

822
00:31:53,460 --> 00:31:55,919
Library scanning that you should have in

823
00:31:55,919 --> 00:31:59,220
your organization uh and we should not

824
00:31:59,220 --> 00:32:01,679
wait for external researchers to come

825
00:32:01,679 --> 00:32:03,720
back with the CV now because that is the

826
00:32:03,720 --> 00:32:05,159
case right now it's a very reactive

827
00:32:05,159 --> 00:32:07,679
approach unless and we saw the example

828
00:32:07,679 --> 00:32:10,799
in lock 4J spring 4 shell all of these

829
00:32:10,799 --> 00:32:12,539
examples we saw and they were like a

830
00:32:12,539 --> 00:32:14,880
foundational libraries in your code only

831
00:32:14,880 --> 00:32:17,940
when external researchers showed those

832
00:32:17,940 --> 00:32:20,340
CV I think everybody got is a turmoil

833
00:32:20,340 --> 00:32:22,500
for everyone to fix it that should not

834
00:32:22,500 --> 00:32:23,640
be the case I think that's a very

835
00:32:23,640 --> 00:32:26,340
reactive approach so there has to be a

836
00:32:26,340 --> 00:32:28,919
frequent frequency based kind of a scan

837
00:32:28,919 --> 00:32:31,380
in your system where you can look at all

838
00:32:31,380 --> 00:32:34,080
these different systems or sites we have

839
00:32:34,080 --> 00:32:36,840
miter is one a lot of industry based

840
00:32:36,840 --> 00:32:38,279
tools where they continuously look at

841
00:32:38,279 --> 00:32:40,260
the industry patterns and cyber attacks

842
00:32:40,260 --> 00:32:42,059
and they have that data what is

843
00:32:42,059 --> 00:32:44,399
exploitable in the industry what are the

844
00:32:44,399 --> 00:32:46,679
new attack vectors so learn from that

845
00:32:46,679 --> 00:32:49,440
have the pointers from that and evolve

846
00:32:49,440 --> 00:32:51,840
your own scanning program with dust

847
00:32:51,840 --> 00:32:54,000
where you implement those simulations

848
00:32:54,000 --> 00:32:56,279
and start scanning all the open source

849
00:32:56,279 --> 00:32:58,080
libraries in your ecosystem in your

850
00:32:58,080 --> 00:33:00,360
company so before external researchers

851
00:33:00,360 --> 00:33:02,340
can come back with a CV you have some

852
00:33:02,340 --> 00:33:04,559
idea you can come you basically will

853
00:33:04,559 --> 00:33:07,020
find out some exploitation in in your

854
00:33:07,020 --> 00:33:09,720
system so that is one second we talked

855
00:33:09,720 --> 00:33:12,000
about dependency right how do we know

856
00:33:12,000 --> 00:33:14,340
the dependency tracker so nowadays all

857
00:33:14,340 --> 00:33:16,679
the tools say Sona type is one where it

858
00:33:16,679 --> 00:33:18,539
gives you the complete s-bomb the

859
00:33:18,539 --> 00:33:21,059
software bill of material so complete a

860
00:33:21,059 --> 00:33:23,519
dependency checks and tracker of the

861
00:33:23,519 --> 00:33:25,080
binary that you are using so you know

862
00:33:25,080 --> 00:33:27,779
where it can go wrong and what you have

863
00:33:27,779 --> 00:33:30,600
to sanitize so use that and the third

864
00:33:30,600 --> 00:33:34,320
one is integrity of the entities that

865
00:33:34,320 --> 00:33:36,179
you use and that goes right from if

866
00:33:36,179 --> 00:33:37,980
you're using container the image of the

867
00:33:37,980 --> 00:33:39,840
container which is like a self-contained

868
00:33:39,840 --> 00:33:42,600
application from the from that to the

869
00:33:42,600 --> 00:33:45,960
binary and to any any artifact that you

870
00:33:45,960 --> 00:33:48,000
could have right so make sure all the

871
00:33:48,000 --> 00:33:49,980
artifacts right from the assessment is

872
00:33:49,980 --> 00:33:52,260
done and you're ready to deploy how you

873
00:33:52,260 --> 00:33:54,059
can make sure the Integrity of that

874
00:33:54,059 --> 00:33:56,100
before you actually deploy so there are

875
00:33:56,100 --> 00:33:57,840
a lot of new Concepts are coming from

876
00:33:57,840 --> 00:34:01,740
signing verification and Solar Shield so

877
00:34:01,740 --> 00:34:03,000
things like that I think you should

878
00:34:03,000 --> 00:34:04,440
Implement so there are many ways to

879
00:34:04,440 --> 00:34:06,899
combat and now all organizations should

880
00:34:06,899 --> 00:34:09,719
be on this in terms of how do we make

881
00:34:09,719 --> 00:34:11,280
sure there is no software supply chain

882
00:34:11,280 --> 00:34:12,960
risk and it's a difficult problem to

883
00:34:12,960 --> 00:34:15,599
solve it's not one or two ways to do

884
00:34:15,599 --> 00:34:17,639
that but we should get on things like

885
00:34:17,639 --> 00:34:21,000
this great points great points so

886
00:34:21,000 --> 00:34:22,859
um kind of our last question in here but

887
00:34:22,859 --> 00:34:25,020
I want to sort of very quickly throw out

888
00:34:25,020 --> 00:34:27,359
to you guys is you know what are the

889
00:34:27,359 --> 00:34:29,520
best practices every cyber security

890
00:34:29,520 --> 00:34:31,560
program should have so we talked about

891
00:34:31,560 --> 00:34:33,119
the process now we're going to talk a

892
00:34:33,119 --> 00:34:35,219
little bit about the program so and I'll

893
00:34:35,219 --> 00:34:36,719
start off with you know one of the

894
00:34:36,719 --> 00:34:39,599
things I I tell people who don't have a

895
00:34:39,599 --> 00:34:41,639
program or just starting out is right

896
00:34:41,639 --> 00:34:43,679
you should have an incident response

897
00:34:43,679 --> 00:34:45,719
program uh what we call piece or product

898
00:34:45,719 --> 00:34:47,520
security incident response and by the

899
00:34:47,520 --> 00:34:50,520
way that is very different than a

900
00:34:50,520 --> 00:34:53,219
typical I.T you know instant response or

901
00:34:53,219 --> 00:34:54,960
or other types of instant response

902
00:34:54,960 --> 00:34:56,820
programs in your company

903
00:34:56,820 --> 00:34:58,800
um the the difference probably the most

904
00:34:58,800 --> 00:35:01,200
significant is that you're interacting

905
00:35:01,200 --> 00:35:04,380
with an external third party right uh

906
00:35:04,380 --> 00:35:05,359
could be

907
00:35:05,359 --> 00:35:07,859
you know India cert that we're here

908
00:35:07,859 --> 00:35:10,079
today it could be any a number of

909
00:35:10,079 --> 00:35:12,900
different uh researchers and that's a

910
00:35:12,900 --> 00:35:15,359
very different type of conversation than

911
00:35:15,359 --> 00:35:17,099
hey I've got a ticket you know my

912
00:35:17,099 --> 00:35:19,380
server's down and in the whole

913
00:35:19,380 --> 00:35:21,839
relationship is important and it's quite

914
00:35:21,839 --> 00:35:24,000
different more of the point larger

915
00:35:24,000 --> 00:35:26,880
context here is that at you need to have

916
00:35:26,880 --> 00:35:28,500
a way for your customers and other

917
00:35:28,500 --> 00:35:30,180
people to tell you you have a problem

918
00:35:30,180 --> 00:35:32,220
and if you don't have some sort of an

919
00:35:32,220 --> 00:35:35,160
instant process that's published and

920
00:35:35,160 --> 00:35:36,300
public

921
00:35:36,300 --> 00:35:39,300
how would anyone know so just a thought

922
00:35:39,300 --> 00:35:41,579
have an incident response program so

923
00:35:41,579 --> 00:35:44,460
Harish what do you got

924
00:35:44,460 --> 00:35:47,700
from my point like security awareness is

925
00:35:47,700 --> 00:35:50,579
most important right now it's a

926
00:35:50,579 --> 00:35:52,740
most important I can say for every

927
00:35:52,740 --> 00:35:54,960
organizations you should have a security

928
00:35:54,960 --> 00:35:57,240
awareness program because because like

929
00:35:57,240 --> 00:35:58,440
we are talking about the software

930
00:35:58,440 --> 00:36:01,500
security and developers definitely they

931
00:36:01,500 --> 00:36:03,480
don't have a security backgrounds from

932
00:36:03,480 --> 00:36:05,400
the beginning itself but yes they are

933
00:36:05,400 --> 00:36:06,900
learning they are using the tools and

934
00:36:06,900 --> 00:36:09,440
all so the awareness about the security

935
00:36:09,440 --> 00:36:12,180
across the organizations including the

936
00:36:12,180 --> 00:36:14,940
developers non-security guys so it will

937
00:36:14,940 --> 00:36:16,619
Avail them okay there is something going

938
00:36:16,619 --> 00:36:19,079
on in the world so how you can prevent

939
00:36:19,079 --> 00:36:21,180
and how you can save yourself because

940
00:36:21,180 --> 00:36:25,560
it's like attacks happen so like in in

941
00:36:25,560 --> 00:36:27,900
phishing you can say that the targets

942
00:36:27,900 --> 00:36:29,760
are easy guys so when you aware when you

943
00:36:29,760 --> 00:36:31,500
send the okay okay these kind of

944
00:36:31,500 --> 00:36:32,880
phishing is happening these are

945
00:36:32,880 --> 00:36:34,200
awareness you share with the

946
00:36:34,200 --> 00:36:36,480
organization employees so they know okay

947
00:36:36,480 --> 00:36:38,220
these kind of things can happen in the

948
00:36:38,220 --> 00:36:39,780
organizations and they learn from them

949
00:36:39,780 --> 00:36:41,880
and they Implement and they can save

950
00:36:41,880 --> 00:36:43,680
yourself and your organization as well

951
00:36:43,680 --> 00:36:46,980
great great point

952
00:36:46,980 --> 00:36:49,020
yeah so I'm just going to talk about a

953
00:36:49,020 --> 00:36:51,060
program uh which is well known but there

954
00:36:51,060 --> 00:36:53,640
are I think there it's again next-gen uh

955
00:36:53,640 --> 00:36:56,099
defense in depth because today hackers

956
00:36:56,099 --> 00:36:57,780
are one step ahead they're always

957
00:36:57,780 --> 00:37:00,540
probably unless we think like them

958
00:37:00,540 --> 00:37:02,820
so there is no and they use a lot of

959
00:37:02,820 --> 00:37:04,859
different Technologies tools and so on

960
00:37:04,859 --> 00:37:06,480
and different methodologies and we

961
00:37:06,480 --> 00:37:08,880
haven't we never try before we come to

962
00:37:08,880 --> 00:37:11,400
know from them right so there is no

963
00:37:11,400 --> 00:37:13,859
Silver Bullet for any technology for us

964
00:37:13,859 --> 00:37:16,859
to combat that or even one single layer

965
00:37:16,859 --> 00:37:18,480
so that's why we need to have a

966
00:37:18,480 --> 00:37:21,780
multi-layer strategy for uh defense and

967
00:37:21,780 --> 00:37:23,700
it it was there just that I think the

968
00:37:23,700 --> 00:37:25,740
layers have increased and how you do the

969
00:37:25,740 --> 00:37:28,260
defense has changed so right from the

970
00:37:28,260 --> 00:37:29,700
network layer

971
00:37:29,700 --> 00:37:32,400
um to the data there are different uh

972
00:37:32,400 --> 00:37:34,440
difference in depth you can do you can

973
00:37:34,440 --> 00:37:36,500
have the network security at the

974
00:37:36,500 --> 00:37:39,180
application layer seven you can have web

975
00:37:39,180 --> 00:37:41,400
application security then IDs IPS

976
00:37:41,400 --> 00:37:44,520
switches you have now what has changed

977
00:37:44,520 --> 00:37:46,859
or what we should put more focus is now

978
00:37:46,859 --> 00:37:49,800
there is uh the era has gone where

979
00:37:49,800 --> 00:37:52,800
network security was enough now the

980
00:37:52,800 --> 00:37:54,420
attacks have reached to the code code

981
00:37:54,420 --> 00:37:56,460
level right so application security has

982
00:37:56,460 --> 00:37:58,680
become more important and that's why it

983
00:37:58,680 --> 00:38:00,300
should evolve and it should change and

984
00:38:00,300 --> 00:38:02,640
we should put more focus in terms of how

985
00:38:02,640 --> 00:38:05,400
we do application security and there is

986
00:38:05,400 --> 00:38:07,920
a concept about not trusting every

987
00:38:07,920 --> 00:38:10,020
entity even in the same zone so the

988
00:38:10,020 --> 00:38:12,260
concept about micro segmentation right

989
00:38:12,260 --> 00:38:15,480
lateral movement has to be stopped so in

990
00:38:15,480 --> 00:38:16,800
a particular Zone when you have

991
00:38:16,800 --> 00:38:19,140
different entities you have to trust

992
00:38:19,140 --> 00:38:21,540
each entity after you verify though it

993
00:38:21,540 --> 00:38:23,520
is a software entity you cannot trust

994
00:38:23,520 --> 00:38:25,320
same binary different binaries in the

995
00:38:25,320 --> 00:38:27,300
same zone so lateral movement micro

996
00:38:27,300 --> 00:38:30,240
segmentation that is a new change in the

997
00:38:30,240 --> 00:38:32,339
defense in depth in a particular layer

998
00:38:32,339 --> 00:38:34,200
which is application layer where you

999
00:38:34,200 --> 00:38:35,880
deploy different system components

1000
00:38:35,880 --> 00:38:37,680
another layer is a data layer because

1001
00:38:37,680 --> 00:38:40,380
data is at core and now data becomes

1002
00:38:40,380 --> 00:38:42,599
structured unstructured both structured

1003
00:38:42,599 --> 00:38:44,579
data we are always used to protect in

1004
00:38:44,579 --> 00:38:46,740
terms of databases or the directory

1005
00:38:46,740 --> 00:38:48,780
servers that we use with different

1006
00:38:48,780 --> 00:38:51,119
levels of encryption unstructured data

1007
00:38:51,119 --> 00:38:52,920
sometimes get it unnoticed like your

1008
00:38:52,920 --> 00:38:56,700
files and emails and all the shares that

1009
00:38:56,700 --> 00:38:59,280
you have the shared data right so there

1010
00:38:59,280 --> 00:39:01,380
has to be Focus for data protection for

1011
00:39:01,380 --> 00:39:03,300
unstructured data as well because data

1012
00:39:03,300 --> 00:39:05,820
is at the core and that defense is

1013
00:39:05,820 --> 00:39:07,500
definitely required in terms of Defense

1014
00:39:07,500 --> 00:39:09,599
of depth other thing I just wanted to

1015
00:39:09,599 --> 00:39:11,640
mention is we have to definitely go from

1016
00:39:11,640 --> 00:39:14,280
detecting and responding to now with

1017
00:39:14,280 --> 00:39:16,500
this behavioral patterns feedback loop

1018
00:39:16,500 --> 00:39:19,440
from predicting and then protecting and

1019
00:39:19,440 --> 00:39:21,180
that's where we will become more

1020
00:39:21,180 --> 00:39:24,619
efficient great I'll check take us home

1021
00:39:24,619 --> 00:39:26,670
what was the question again

1022
00:39:26,670 --> 00:39:29,579
[Laughter]

1023
00:39:29,579 --> 00:39:31,980
so the question was really about what

1024
00:39:31,980 --> 00:39:34,320
are the best practices a program should

1025
00:39:34,320 --> 00:39:36,240
have is it application security program

1026
00:39:36,240 --> 00:39:39,359
yeah so yeah security architecture

1027
00:39:39,359 --> 00:39:41,880
that's right yeah okay so but if I'm

1028
00:39:41,880 --> 00:39:43,980
responsible for the defensive side of

1029
00:39:43,980 --> 00:39:46,020
things then probably for me the most

1030
00:39:46,020 --> 00:39:48,300
important bit is don't get hacked okay

1031
00:39:48,300 --> 00:39:50,280
so you do whatever is required to

1032
00:39:50,280 --> 00:39:52,800
prevent the attackers but uh talking

1033
00:39:52,800 --> 00:39:55,680
about that if you look at it there is a

1034
00:39:55,680 --> 00:39:59,400
very famous saying I think uh I saw this

1035
00:39:59,400 --> 00:40:01,859
some 12 years back in some confidence is

1036
00:40:01,859 --> 00:40:04,260
that there's a quote

1037
00:40:04,260 --> 00:40:07,619
Defenders thinks in list and attackers

1038
00:40:07,619 --> 00:40:11,040
thinks in graph right if you just just

1039
00:40:11,040 --> 00:40:12,720
you know recollect what all things we

1040
00:40:12,720 --> 00:40:13,920
have been discussing right we have been

1041
00:40:13,920 --> 00:40:16,560
discussing lists this this this this

1042
00:40:16,560 --> 00:40:18,420
attackers will not care any of that

1043
00:40:18,420 --> 00:40:21,000
right attackers will discover try to

1044
00:40:21,000 --> 00:40:23,220
discover everything that you have from

1045
00:40:23,220 --> 00:40:25,200
their experience and their expertise

1046
00:40:25,200 --> 00:40:27,420
they will find the attack surface pair

1047
00:40:27,420 --> 00:40:29,640
which is most important or where they

1048
00:40:29,640 --> 00:40:31,440
have the most expertise doesn't matter

1049
00:40:31,440 --> 00:40:33,240
whether where it comes into the

1050
00:40:33,240 --> 00:40:34,740
defender's priority and they'll just use

1051
00:40:34,740 --> 00:40:37,740
that right so that's how it works that

1052
00:40:37,740 --> 00:40:39,119
occurs that's why there is a saying

1053
00:40:39,119 --> 00:40:41,220
attackers will always win because of

1054
00:40:41,220 --> 00:40:43,260
this uh

1055
00:40:43,260 --> 00:40:46,800
I would say information uh you know

1056
00:40:46,800 --> 00:40:48,960
asymmetry between Defenders Defenders

1057
00:40:48,960 --> 00:40:51,180
work is much more difficult attackers

1058
00:40:51,180 --> 00:40:53,160
just need one attack surface and one

1059
00:40:53,160 --> 00:40:55,079
area where they are good at Defenders

1060
00:40:55,079 --> 00:40:57,359
needs to be good at everything and know

1061
00:40:57,359 --> 00:40:59,160
about all that exercise

1062
00:40:59,160 --> 00:41:01,140
talking about attack surface if I have

1063
00:41:01,140 --> 00:41:02,940
to look at from that perspective I would

1064
00:41:02,940 --> 00:41:05,099
say uh you know threat modeling or

1065
00:41:05,099 --> 00:41:07,200
security architecture review is an

1066
00:41:07,200 --> 00:41:08,940
important part of the overall security

1067
00:41:08,940 --> 00:41:11,520
program right when you are building a

1068
00:41:11,520 --> 00:41:12,359
system

1069
00:41:12,359 --> 00:41:14,520
before it the employer the engineering

1070
00:41:14,520 --> 00:41:16,500
aspects of it starts if there is a

1071
00:41:16,500 --> 00:41:18,240
collaboration between the security team

1072
00:41:18,240 --> 00:41:21,000
and the engineering Architects if it if

1073
00:41:21,000 --> 00:41:22,800
the security if the architecture of the

1074
00:41:22,800 --> 00:41:25,260
system is reviewed uh formal threat

1075
00:41:25,260 --> 00:41:28,380
modeling process is performed mostly you

1076
00:41:28,380 --> 00:41:31,079
will identify a lot of threats very

1077
00:41:31,079 --> 00:41:34,079
early in the sdlc right whether that

1078
00:41:34,079 --> 00:41:36,300
involves maybe slightly re-architecting

1079
00:41:36,300 --> 00:41:38,940
the system to reduce attack surface

1080
00:41:38,940 --> 00:41:41,099
from my perspective attack surface

1081
00:41:41,099 --> 00:41:43,260
reduction is the most important bit

1082
00:41:43,260 --> 00:41:45,660
great Point your defense as a Defender

1083
00:41:45,660 --> 00:41:47,520
your job is extremely difficult trying

1084
00:41:47,520 --> 00:41:49,079
to protect against every single attack

1085
00:41:49,079 --> 00:41:51,720
surface so as a goal I would see how to

1086
00:41:51,720 --> 00:41:53,220
reduce attack surface as much as

1087
00:41:53,220 --> 00:41:55,440
possible great Point well we've got

1088
00:41:55,440 --> 00:41:58,140
about uh one or two more minutes and

1089
00:41:58,140 --> 00:41:59,520
wanted to see if anybody any questions

1090
00:41:59,520 --> 00:42:02,540
go ahead

1091
00:42:08,460 --> 00:42:11,040
hey hi this is Anil from Carrier

1092
00:42:11,040 --> 00:42:13,380
Corporation so I just have one question

1093
00:42:13,380 --> 00:42:15,240
where we are facing day-to-day

1094
00:42:15,240 --> 00:42:17,220
challenges it's like you are talking

1095
00:42:17,220 --> 00:42:19,140
about the open source component which we

1096
00:42:19,140 --> 00:42:21,420
are using see the problem is our product

1097
00:42:21,420 --> 00:42:23,280
is in the market from last 10 years and

1098
00:42:23,280 --> 00:42:25,260
we are consuming open source component

1099
00:42:25,260 --> 00:42:27,599
very properly and we are doing all check

1100
00:42:27,599 --> 00:42:30,540
from blackduck now the problem is the

1101
00:42:30,540 --> 00:42:32,579
components which we are consuming have

1102
00:42:32,579 --> 00:42:34,200
not been updated from last to four five

1103
00:42:34,200 --> 00:42:37,320
to Five Years on the GitHub repo now we

1104
00:42:37,320 --> 00:42:38,940
left with two options either we download

1105
00:42:38,940 --> 00:42:41,820
and and develop that particular open

1106
00:42:41,820 --> 00:42:43,560
source component and consume it but

1107
00:42:43,560 --> 00:42:44,940
there will be a license challenge a lot

1108
00:42:44,940 --> 00:42:47,400
of thing second thing is either we go

1109
00:42:47,400 --> 00:42:48,839
for another open source company which is

1110
00:42:48,839 --> 00:42:51,119
similar features but that will impact a

1111
00:42:51,119 --> 00:42:52,500
product which is already there on the

1112
00:42:52,500 --> 00:42:54,660
field so wanted to see what is the

1113
00:42:54,660 --> 00:42:56,310
opinion on that

1114
00:42:56,310 --> 00:42:59,369
[Music]

1115
00:43:01,619 --> 00:43:03,720
this is the exact reason why I said

1116
00:43:03,720 --> 00:43:06,599
supply chain security is very complex so

1117
00:43:06,599 --> 00:43:08,400
just by running dependency check out

1118
00:43:08,400 --> 00:43:10,260
blacktalk and all these things it's not

1119
00:43:10,260 --> 00:43:12,480
enough the problem that you are facing

1120
00:43:12,480 --> 00:43:15,420
if most organizations are facing this is

1121
00:43:15,420 --> 00:43:16,859
the unmaintained software you are

1122
00:43:16,859 --> 00:43:18,900
dependent on external components which

1123
00:43:18,900 --> 00:43:21,960
are not maintained anymore so uh in some

1124
00:43:21,960 --> 00:43:24,240
cases if you're lucky if it's some very

1125
00:43:24,240 --> 00:43:25,800
popular component there can be some

1126
00:43:25,800 --> 00:43:27,780
organizations who commercially maintains

1127
00:43:27,780 --> 00:43:31,500
that but in other cases I from what I

1128
00:43:31,500 --> 00:43:33,359
understand or based on my experience

1129
00:43:33,359 --> 00:43:35,760
there is no other way but have a

1130
00:43:35,760 --> 00:43:37,560
strategy to either replace that

1131
00:43:37,560 --> 00:43:39,359
component with internally developed

1132
00:43:39,359 --> 00:43:42,359
Behavior similar Behavior or replace

1133
00:43:42,359 --> 00:43:45,240
that with a more mature software

1134
00:43:45,240 --> 00:43:48,180
component this is exactly the reason why

1135
00:43:48,180 --> 00:43:50,940
supply chain security is not just about

1136
00:43:50,940 --> 00:43:54,060
vulnerability it's also about having the

1137
00:43:54,060 --> 00:43:57,839
control where you can vulnerability or

1138
00:43:57,839 --> 00:43:59,220
vulnerability is just one of the

1139
00:43:59,220 --> 00:44:02,520
attributes if you can somehow uh detect

1140
00:44:02,520 --> 00:44:05,339
and deny the inflow of third-party

1141
00:44:05,339 --> 00:44:08,940
components which are not approved as per

1142
00:44:08,940 --> 00:44:11,520
your security policy for example as a

1143
00:44:11,520 --> 00:44:13,980
developer it is easier for me it is the

1144
00:44:13,980 --> 00:44:16,440
path of least friction for me to find a

1145
00:44:16,440 --> 00:44:19,740
library which does my job today I will

1146
00:44:19,740 --> 00:44:21,720
not care whether that Library will mean

1147
00:44:21,720 --> 00:44:23,280
will be maintained three years or five

1148
00:44:23,280 --> 00:44:25,319
years down the line but as the security

1149
00:44:25,319 --> 00:44:27,300
team if you have that great set of

1150
00:44:27,300 --> 00:44:31,680
controls and if you can deny that if a

1151
00:44:31,680 --> 00:44:33,599
software component is not matured enough

1152
00:44:33,599 --> 00:44:36,480
or if it is not supported by say any of

1153
00:44:36,480 --> 00:44:38,540
the major open source bodies like say

1154
00:44:38,540 --> 00:44:40,859
Apache software Foundation or maybe

1155
00:44:40,859 --> 00:44:42,660
Google or some of those well maintained

1156
00:44:42,660 --> 00:44:44,760
libraries then those are not approved or

1157
00:44:44,760 --> 00:44:47,220
maybe you can look at a s2k spaces look

1158
00:44:47,220 --> 00:44:49,800
at it and approve once it goes inside it

1159
00:44:49,800 --> 00:44:52,020
is extremely difficult to remove it it

1160
00:44:52,020 --> 00:44:53,520
has a Major Impact

1161
00:44:53,520 --> 00:44:55,260
right

1162
00:44:55,260 --> 00:44:57,420
so with that I think we're we're kind of

1163
00:44:57,420 --> 00:45:00,480
time and um what I'd say we're going to

1164
00:45:00,480 --> 00:45:01,619
stick around so if you guys have any

1165
00:45:01,619 --> 00:45:04,440
questions come up and talk to us again

1166
00:45:04,440 --> 00:45:06,420
want to thank everybody for coming out

1167
00:45:06,420 --> 00:45:09,720
and seeing our session and again thank

1168
00:45:09,720 --> 00:45:11,880
you all panels for for coming out thanks

1169
00:45:11,880 --> 00:45:12,220
everybody

1170
00:45:12,220 --> 00:45:15,319
[Applause]

