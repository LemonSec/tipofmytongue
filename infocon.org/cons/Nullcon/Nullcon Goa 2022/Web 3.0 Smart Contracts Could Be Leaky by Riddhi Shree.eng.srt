1
00:00:02,940 --> 00:00:07,680
thank you thank you everyone uh as I

2
00:00:07,680 --> 00:00:09,420
already got introduced my name is ridhi

3
00:00:09,420 --> 00:00:12,840
and I'm going to talk about web 3.0 now

4
00:00:12,840 --> 00:00:15,839
uh I am new to this myself how did I

5
00:00:15,839 --> 00:00:17,400
learn about this and why did I learn

6
00:00:17,400 --> 00:00:19,380
about this because how many of you in

7
00:00:19,380 --> 00:00:21,779
this room have played winter CTF

8
00:00:21,779 --> 00:00:24,020
yesterday

9
00:00:24,240 --> 00:00:27,119
we have few people so you remember that

10
00:00:27,119 --> 00:00:29,640
we had web 3.0 challenges right so they

11
00:00:29,640 --> 00:00:33,540
were created by me and uh other uh I

12
00:00:33,540 --> 00:00:35,460
create uh created them because I wanted

13
00:00:35,460 --> 00:00:38,520
to learn about web 3.0 and what best way

14
00:00:38,520 --> 00:00:39,899
to learn about something by

15
00:00:39,899 --> 00:00:41,940
experimenting with it right so there

16
00:00:41,940 --> 00:00:43,680
were few learnings uh there are a few

17
00:00:43,680 --> 00:00:46,500
things I observed while creating these

18
00:00:46,500 --> 00:00:48,239
challenges and that's what I am going to

19
00:00:48,239 --> 00:00:52,320
share in this talk and uh most important

20
00:00:52,320 --> 00:00:54,960
thing why did I choose this topic smart

21
00:00:54,960 --> 00:00:57,120
contracts could be leaky because I tried

22
00:00:57,120 --> 00:01:00,600
hard to protect the flag I created The

23
00:01:00,600 --> 00:01:02,399
Challenge and I was like

24
00:01:02,399 --> 00:01:04,140
um my challenge is done and then I

25
00:01:04,140 --> 00:01:05,880
realized that the flag is just lying

26
00:01:05,880 --> 00:01:09,000
there for everyone to see it that was a

27
00:01:09,000 --> 00:01:12,060
learning and how did I make that uh I

28
00:01:12,060 --> 00:01:13,979
was wondering how do I create this

29
00:01:13,979 --> 00:01:15,540
challenge then so what did I do

30
00:01:15,540 --> 00:01:17,880
everything I'm gonna share with you

31
00:01:17,880 --> 00:01:20,340
so uh this talk is about sharing

32
00:01:20,340 --> 00:01:22,200
experiences with you about the things

33
00:01:22,200 --> 00:01:24,720
that work and that did not work for me

34
00:01:24,720 --> 00:01:26,759
uh when I was working with smart

35
00:01:26,759 --> 00:01:29,220
contracts how I leaked the flag and what

36
00:01:29,220 --> 00:01:31,619
was the fix I applied to prevent leaking

37
00:01:31,619 --> 00:01:34,439
sensitive information so this screenshot

38
00:01:34,439 --> 00:01:37,020
that you see and you see the flag lying

39
00:01:37,020 --> 00:01:39,420
there right there anyone and everyone

40
00:01:39,420 --> 00:01:43,560
around the world can just see the flag

41
00:01:43,560 --> 00:01:45,600
uh so what would be the takeaway from

42
00:01:45,600 --> 00:01:49,259
this talk uh first thing is like web 3.0

43
00:01:49,259 --> 00:01:52,200
is absolutely interesting some say uh it

44
00:01:52,200 --> 00:01:54,960
is totally decentralized some argue no

45
00:01:54,960 --> 00:01:56,880
it is not totally decentralized because

46
00:01:56,880 --> 00:02:00,540
uh if anyone has experience in web 3.0

47
00:02:00,540 --> 00:02:02,360
already

48
00:02:02,360 --> 00:02:04,920
if you have you know that we need to use

49
00:02:04,920 --> 00:02:07,380
alchemy without that we cannot proceed

50
00:02:07,380 --> 00:02:10,560
and Alchemy is a centralized server so

51
00:02:10,560 --> 00:02:12,480
can we say it is totally totally

52
00:02:12,480 --> 00:02:14,160
decentralized

53
00:02:14,160 --> 00:02:16,560
um not yet maybe but maybe in future it

54
00:02:16,560 --> 00:02:17,640
will become

55
00:02:17,640 --> 00:02:20,220
uh so it is interesting for sure why is

56
00:02:20,220 --> 00:02:23,420
it interesting because uh right now the

57
00:02:23,420 --> 00:02:26,280
a model that we follow is client and

58
00:02:26,280 --> 00:02:28,140
server architecture right server is

59
00:02:28,140 --> 00:02:30,420
something what we uh either we have our

60
00:02:30,420 --> 00:02:32,819
own service which nobody I think uses

61
00:02:32,819 --> 00:02:35,700
these days or we have AWS or cloud

62
00:02:35,700 --> 00:02:37,560
service right

63
00:02:37,560 --> 00:02:38,640
um

64
00:02:38,640 --> 00:02:40,260
um and we are totally dependent on them

65
00:02:40,260 --> 00:02:44,940
Cloud providers uh but the web 3.0 is an

66
00:02:44,940 --> 00:02:47,760
approach wherein uh there is no need for

67
00:02:47,760 --> 00:02:50,879
AWS Azure or any

68
00:02:50,879 --> 00:02:52,260
um such

69
00:02:52,260 --> 00:02:54,780
providers so you can straight away

70
00:02:54,780 --> 00:02:57,540
deploy your functions and then you can

71
00:02:57,540 --> 00:02:59,940
use them and smart contracts is the way

72
00:02:59,940 --> 00:03:02,040
to do that now there was there was

73
00:03:02,040 --> 00:03:04,860
problem major problem with web 3.0

74
00:03:04,860 --> 00:03:07,019
integer overflow which could be really

75
00:03:07,019 --> 00:03:09,780
dangerous sometimes so uh it was

76
00:03:09,780 --> 00:03:12,659
possible in this but so I thought that

77
00:03:12,659 --> 00:03:15,300
it would be a very good uh challenge to

78
00:03:15,300 --> 00:03:17,519
create something around integer overflow

79
00:03:17,519 --> 00:03:19,019
and that was that's what I was trying to

80
00:03:19,019 --> 00:03:21,840
do but then I realized I had to

81
00:03:21,840 --> 00:03:23,940
literally hardcore a lot of things to

82
00:03:23,940 --> 00:03:26,519
make this integer overflow work but

83
00:03:26,519 --> 00:03:28,519
still it didn't work and it was giving

84
00:03:28,519 --> 00:03:31,019
some error which means

85
00:03:31,019 --> 00:03:32,819
um that something had changed in later

86
00:03:32,819 --> 00:03:34,739
versions and we'll take a look at what

87
00:03:34,739 --> 00:03:36,959
is that and then finally the information

88
00:03:36,959 --> 00:03:39,120
leakage as I mentioned earlier the flag

89
00:03:39,120 --> 00:03:41,340
was leaked and not only flag even if you

90
00:03:41,340 --> 00:03:43,500
use private variables that does not mean

91
00:03:43,500 --> 00:03:45,959
that your information is safe private

92
00:03:45,959 --> 00:03:49,560
variable is just uh means that um your

93
00:03:49,560 --> 00:03:52,319
function and how do you access the

94
00:03:52,319 --> 00:03:54,180
variables when you are using different

95
00:03:54,180 --> 00:03:57,299
functions that's what me uh that's where

96
00:03:57,299 --> 00:03:58,860
private variable

97
00:03:58,860 --> 00:04:01,500
um makes sense but not uh in the sense

98
00:04:01,500 --> 00:04:03,060
that it is making your information

99
00:04:03,060 --> 00:04:05,040
private

100
00:04:05,040 --> 00:04:07,500
so who am I at this point I'm a

101
00:04:07,500 --> 00:04:09,360
freelancer but soon I'll be joining

102
00:04:09,360 --> 00:04:10,920
Qualcomm

103
00:04:10,920 --> 00:04:14,519
um I have a history of uh I'm not into

104
00:04:14,519 --> 00:04:17,579
one thing forever so I have done CC plus

105
00:04:17,579 --> 00:04:19,079
plus secure coding

106
00:04:19,079 --> 00:04:21,660
um I was an instructor for that I have

107
00:04:21,660 --> 00:04:23,160
played the role of security analyst

108
00:04:23,160 --> 00:04:25,139
consultant scrum Master automation

109
00:04:25,139 --> 00:04:27,720
engineer quality engineer so a lot of

110
00:04:27,720 --> 00:04:30,479
things very things I have tried at

111
00:04:30,479 --> 00:04:32,880
leisure when I'm not working what I'm

112
00:04:32,880 --> 00:04:34,740
doing is I try to I have developed an

113
00:04:34,740 --> 00:04:36,720
app called VIP which is an Android

114
00:04:36,720 --> 00:04:39,060
application vulnerable application and

115
00:04:39,060 --> 00:04:41,040
it's there on my GitHub repo if you any

116
00:04:41,040 --> 00:04:43,020
one of you want to try so why did I

117
00:04:43,020 --> 00:04:45,180
create it because I was trying to learn

118
00:04:45,180 --> 00:04:47,759
mobile pen testing then I have spoken at

119
00:04:47,759 --> 00:04:49,500
few conferences and I'm also Community

120
00:04:49,500 --> 00:04:52,139
volunteer for winter so whoever has a

121
00:04:52,139 --> 00:04:54,120
standard CDF yesterday major CTF you

122
00:04:54,120 --> 00:04:56,160
might have seen me

123
00:04:56,160 --> 00:04:58,440
um social media Handles in in case you

124
00:04:58,440 --> 00:05:00,600
want to reach out to me uh these are my

125
00:05:00,600 --> 00:05:03,060
handles

126
00:05:03,060 --> 00:05:06,120
okay so first thing uh integer overflow

127
00:05:06,120 --> 00:05:08,580
how many of you are comfortable with the

128
00:05:08,580 --> 00:05:11,100
concept of integer overflow or overflow

129
00:05:11,100 --> 00:05:13,020
in general I'm sure most of you would be

130
00:05:13,020 --> 00:05:16,440
yeah so overflow as you can see is like

131
00:05:16,440 --> 00:05:18,960
um there's a little space and we try to

132
00:05:18,960 --> 00:05:20,940
put more information things can go wrong

133
00:05:20,940 --> 00:05:24,000
there we can overwrite addresses and do

134
00:05:24,000 --> 00:05:26,280
a lot of things there for example now

135
00:05:26,280 --> 00:05:28,860
this is an example from uh this dot

136
00:05:28,860 --> 00:05:30,720
solve that you see this is the extension

137
00:05:30,720 --> 00:05:33,060
for solidity file right this is how we

138
00:05:33,060 --> 00:05:35,160
write smart contracts now this is not

139
00:05:35,160 --> 00:05:37,979
the complete smart contract but this is

140
00:05:37,979 --> 00:05:40,500
just one function now in this function

141
00:05:40,500 --> 00:05:43,080
if you see uh the things that have

142
00:05:43,080 --> 00:05:46,259
highlighted there's int 256 and there is

143
00:05:46,259 --> 00:05:51,539
u in 256 right so uh I before coming to

144
00:05:51,539 --> 00:05:53,400
this I'll just show you quickly run you

145
00:05:53,400 --> 00:05:55,320
through this diagram what does this mean

146
00:05:55,320 --> 00:05:57,539
so you see there is a sign in and

147
00:05:57,539 --> 00:06:00,000
there's unsigned in and how integer

148
00:06:00,000 --> 00:06:02,520
arithmetic works is how does overflow

149
00:06:02,520 --> 00:06:05,699
work and unsigned integers there is no

150
00:06:05,699 --> 00:06:08,340
negative numbers in sign integers we

151
00:06:08,340 --> 00:06:10,680
have positive and negative numbers so if

152
00:06:10,680 --> 00:06:12,660
you take a note at all the red ticks

153
00:06:12,660 --> 00:06:14,639
right so let's take for example in the

154
00:06:14,639 --> 00:06:17,580
and in case of unsigned integers so you

155
00:06:17,580 --> 00:06:20,400
see uint Max and uint Min now uint Min

156
00:06:20,400 --> 00:06:23,400
is zero and unit Max is when all the

157
00:06:23,400 --> 00:06:25,740
bits are one you have let's say eight

158
00:06:25,740 --> 00:06:27,900
bits all bits are one that would be

159
00:06:27,900 --> 00:06:30,060
maximum value it cannot be more than

160
00:06:30,060 --> 00:06:32,580
that ever what happens if you add one to

161
00:06:32,580 --> 00:06:35,039
it right what happens because there is

162
00:06:35,039 --> 00:06:37,380
no place to represent the number

163
00:06:37,380 --> 00:06:40,680
so that is truncated uh or it overflows

164
00:06:40,680 --> 00:06:43,380
and then it rounds off the so if you

165
00:06:43,380 --> 00:06:45,000
remember this circle when overflow

166
00:06:45,000 --> 00:06:47,340
happens U into Max Plus One will come

167
00:06:47,340 --> 00:06:49,680
will become 0 which is very small and if

168
00:06:49,680 --> 00:06:51,060
you are trying to do a comparison on

169
00:06:51,060 --> 00:06:52,800
this then things could go wrong

170
00:06:52,800 --> 00:06:55,919
similarly if uh in signed integer in

171
00:06:55,919 --> 00:06:58,440
case of sine integer if you see intimate

172
00:06:58,440 --> 00:07:00,479
and int Max they are lying very close to

173
00:07:00,479 --> 00:07:03,419
each other so int Max plus one if you do

174
00:07:03,419 --> 00:07:05,220
it will become int mean it will become a

175
00:07:05,220 --> 00:07:07,860
very small number so this is very tricky

176
00:07:07,860 --> 00:07:09,960
and you can never be sure whenever you

177
00:07:09,960 --> 00:07:12,840
are using dealing with integers C C plus

178
00:07:12,840 --> 00:07:14,100
plus

179
00:07:14,100 --> 00:07:16,020
um then these are very common things

180
00:07:16,020 --> 00:07:18,240
this is very common and you can never be

181
00:07:18,240 --> 00:07:20,460
sure that you have coded correctly so

182
00:07:20,460 --> 00:07:24,660
integer uh overflow is a real problem

183
00:07:24,660 --> 00:07:28,500
in case of smart contracts now this is

184
00:07:28,500 --> 00:07:30,240
what I was trying to do so I

185
00:07:30,240 --> 00:07:33,360
deliberately used int which is signed

186
00:07:33,360 --> 00:07:36,720
integer and unit is unsigned integer now

187
00:07:36,720 --> 00:07:38,940
when I pass sine integer let's say I say

188
00:07:38,940 --> 00:07:42,419
minus 1 is a signed value and if I'm

189
00:07:42,419 --> 00:07:44,699
using it and converting it into an

190
00:07:44,699 --> 00:07:47,039
unsigned value then there is it has to

191
00:07:47,039 --> 00:07:49,380
be a positive number so

192
00:07:49,380 --> 00:07:52,620
um so it turns into when this conversion

193
00:07:52,620 --> 00:07:54,300
happens just remember that it becomes a

194
00:07:54,300 --> 00:07:57,000
very large number and overflow might

195
00:07:57,000 --> 00:07:58,620
happen now there's another condition in

196
00:07:58,620 --> 00:08:00,660
here balances seller minus equals to

197
00:08:00,660 --> 00:08:03,240
price so that arithmetic is happening I

198
00:08:03,240 --> 00:08:05,280
am subtracting something so as we saw

199
00:08:05,280 --> 00:08:07,319
some time back either subtraction or

200
00:08:07,319 --> 00:08:09,479
addition can lead to overflow integer

201
00:08:09,479 --> 00:08:12,360
overflow so this was my function wherein

202
00:08:12,360 --> 00:08:14,400
I was trying to force uh integer

203
00:08:14,400 --> 00:08:16,940
overflow

204
00:08:18,479 --> 00:08:20,400
um so yeah this is just a summary so

205
00:08:20,400 --> 00:08:22,620
here if you can see int Max Plus One

206
00:08:22,620 --> 00:08:25,500
becomes intimate into minus 1 becomes

207
00:08:25,500 --> 00:08:28,440
int Max and both the cases are overflow

208
00:08:28,440 --> 00:08:30,479
conditions

209
00:08:30,479 --> 00:08:34,020
uh how do we uh deploy a smart contract

210
00:08:34,020 --> 00:08:35,520
so if you have written a smart contract

211
00:08:35,520 --> 00:08:38,159
I was using hard hat so if you are using

212
00:08:38,159 --> 00:08:40,200
hard hat and you will have to write a

213
00:08:40,200 --> 00:08:43,260
deploy.js uh file script and then this

214
00:08:43,260 --> 00:08:45,300
is how that there are different networks

215
00:08:45,300 --> 00:08:47,339
available rinky bias there go early is

216
00:08:47,339 --> 00:08:49,620
there these are all test networks I'm

217
00:08:49,620 --> 00:08:51,360
obviously using test networks because I

218
00:08:51,360 --> 00:08:53,279
don't want to use real ethers

219
00:08:53,279 --> 00:08:55,200
um so but if you want and if you have

220
00:08:55,200 --> 00:08:56,820
then you can use

221
00:08:56,820 --> 00:08:59,399
um real networks as well but this is a

222
00:08:59,399 --> 00:09:01,380
test Network and this is uh the command

223
00:09:01,380 --> 00:09:03,600
that we run and it gets deployed the

224
00:09:03,600 --> 00:09:05,100
moment it deploys

225
00:09:05,100 --> 00:09:06,959
um you can you'll get an address you can

226
00:09:06,959 --> 00:09:09,779
get an address and you can see integer

227
00:09:09,779 --> 00:09:11,459
overflow address

228
00:09:11,459 --> 00:09:14,040
um the the one which starts with 0x so

229
00:09:14,040 --> 00:09:16,019
that address you get now this is the

230
00:09:16,019 --> 00:09:18,300
address uh you can say that it got

231
00:09:18,300 --> 00:09:20,399
deployed on your server and now anyone

232
00:09:20,399 --> 00:09:22,140
can access this address and they can

233
00:09:22,140 --> 00:09:23,640
access your function and whatever is

234
00:09:23,640 --> 00:09:25,320
lying in there

235
00:09:25,320 --> 00:09:28,800
now this is ABI file it gets generated

236
00:09:28,800 --> 00:09:31,320
uh the moment we deploy a smart contract

237
00:09:31,320 --> 00:09:34,560
now what is API file it tells you some

238
00:09:34,560 --> 00:09:36,180
information about the functions that

239
00:09:36,180 --> 00:09:38,459
exist in the smart contract for example

240
00:09:38,459 --> 00:09:40,440
in this case you can see

241
00:09:40,440 --> 00:09:42,779
um we have this cell article right that

242
00:09:42,779 --> 00:09:46,080
is the function and then there's price

243
00:09:46,080 --> 00:09:48,120
there's description there is name let's

244
00:09:48,120 --> 00:09:50,640
go back to this smart contract and let's

245
00:09:50,640 --> 00:09:53,580
compare so you see we have price

246
00:09:53,580 --> 00:09:56,519
description name seller these variables

247
00:09:56,519 --> 00:09:58,260
are there right and cell article is the

248
00:09:58,260 --> 00:10:00,779
name of the function so that's what uh

249
00:10:00,779 --> 00:10:04,260
you see in the ABI file so in the CDF

250
00:10:04,260 --> 00:10:05,640
challenge that you were playing you

251
00:10:05,640 --> 00:10:07,500
would you would also given access to the

252
00:10:07,500 --> 00:10:10,140
ABI files why because so that you can go

253
00:10:10,140 --> 00:10:11,399
through it and you can understand what

254
00:10:11,399 --> 00:10:12,779
what are the different types of

255
00:10:12,779 --> 00:10:14,820
functions which are available and which

256
00:10:14,820 --> 00:10:16,080
you can call

257
00:10:16,080 --> 00:10:18,620
foreign

258
00:10:21,680 --> 00:10:23,880
contract has been deployed and you have

259
00:10:23,880 --> 00:10:26,279
access to the ABI file uh how do you

260
00:10:26,279 --> 00:10:27,779
call these functions that is another

261
00:10:27,779 --> 00:10:30,180
thing right so in order to call them

262
00:10:30,180 --> 00:10:32,220
there are various ways but the one which

263
00:10:32,220 --> 00:10:35,399
I Learned was using react so if you are

264
00:10:35,399 --> 00:10:37,500
familiar with react uh you can create a

265
00:10:37,500 --> 00:10:39,540
react front end and this is a very

266
00:10:39,540 --> 00:10:42,240
simple one just one button which invokes

267
00:10:42,240 --> 00:10:44,700
the function that I'm interested in so

268
00:10:44,700 --> 00:10:46,980
uh you can see there's only like default

269
00:10:46,980 --> 00:10:48,480
function if you create a react app

270
00:10:48,480 --> 00:10:50,760
there's a default function

271
00:10:50,760 --> 00:10:53,279
um inside which I have this ABI how do

272
00:10:53,279 --> 00:10:56,459
you I'm using importing ethers and ABI

273
00:10:56,459 --> 00:10:59,100
I'm importing and this is

274
00:10:59,100 --> 00:11:02,880
um this is the way you import and uh I

275
00:11:02,880 --> 00:11:04,260
have given an address

276
00:11:04,260 --> 00:11:05,760
and then

277
00:11:05,760 --> 00:11:07,680
in this particular line that you see

278
00:11:07,680 --> 00:11:10,140
console.log awaitcontractio dot get

279
00:11:10,140 --> 00:11:13,860
balance the last line so that await is

280
00:11:13,860 --> 00:11:15,839
because it is an asynchronous call it

281
00:11:15,839 --> 00:11:17,880
takes some time to get a process that is

282
00:11:17,880 --> 00:11:18,779
the reason

283
00:11:18,779 --> 00:11:20,880
when you call we have to wait for some

284
00:11:20,880 --> 00:11:24,660
time and uh contract i o what it is uh

285
00:11:24,660 --> 00:11:28,019
these this is an important section so

286
00:11:28,019 --> 00:11:30,779
whenever uh if I have done everything

287
00:11:30,779 --> 00:11:33,240
set up everything correctly metamask is

288
00:11:33,240 --> 00:11:35,820
set up correctly and my address is

289
00:11:35,820 --> 00:11:38,519
correct ABI is correct then I can create

290
00:11:38,519 --> 00:11:40,380
a contract and then I can call whatever

291
00:11:40,380 --> 00:11:43,380
functions I want to

292
00:11:43,380 --> 00:11:46,380
foreign

293
00:11:46,860 --> 00:11:50,040
so finally it was time to run call the

294
00:11:50,040 --> 00:11:51,959
function so when I call the function uh

295
00:11:51,959 --> 00:11:54,180
this uh transaction got initiated and

296
00:11:54,180 --> 00:11:56,220
this is what I got so if you take a

297
00:11:56,220 --> 00:11:58,260
closer look at it you will see it says

298
00:11:58,260 --> 00:12:01,920
error overflow so which means that uh by

299
00:12:01,920 --> 00:12:04,260
default the compiler is handling integer

300
00:12:04,260 --> 00:12:05,640
overflow exception so it detects

301
00:12:05,640 --> 00:12:08,040
overflow and it blocks it but it was not

302
00:12:08,040 --> 00:12:09,839
there always

303
00:12:09,839 --> 00:12:13,320
since solidity version 0.8 and onwards

304
00:12:13,320 --> 00:12:16,800
this is happening so uh whenever you are

305
00:12:16,800 --> 00:12:19,440
using make sure we all know by now I

306
00:12:19,440 --> 00:12:21,420
think most of us know whenever we are

307
00:12:21,420 --> 00:12:23,339
using any software we should always use

308
00:12:23,339 --> 00:12:24,779
the latest versions right because they

309
00:12:24,779 --> 00:12:26,940
have many security updates and many many

310
00:12:26,940 --> 00:12:28,740
important updates so we should use the

311
00:12:28,740 --> 00:12:31,440
latest version and when you are using

312
00:12:31,440 --> 00:12:33,420
solidity make sure to use Point 8

313
00:12:33,420 --> 00:12:35,459
version or higher because by default

314
00:12:35,459 --> 00:12:37,620
compiler takes care of um blocking

315
00:12:37,620 --> 00:12:39,959
integer overflows

316
00:12:39,959 --> 00:12:42,060
and if you want to read more about it I

317
00:12:42,060 --> 00:12:44,279
have given a reference link you can go

318
00:12:44,279 --> 00:12:46,680
through it yeah

319
00:12:46,680 --> 00:12:49,320
now this is about integer overflow so

320
00:12:49,320 --> 00:12:52,139
next that uh we're going to look about

321
00:12:52,139 --> 00:12:54,000
how did I leak the flag right what

322
00:12:54,000 --> 00:12:56,160
happened there data privacy is my data

323
00:12:56,160 --> 00:12:57,540
really private

324
00:12:57,540 --> 00:12:58,200
um

325
00:12:58,200 --> 00:13:00,360
what can we do so the way I spoke

326
00:13:00,360 --> 00:13:03,720
briefly uh earlier uh there are we all

327
00:13:03,720 --> 00:13:05,160
know if all of you have written any kind

328
00:13:05,160 --> 00:13:07,079
of functions uh you know we declare

329
00:13:07,079 --> 00:13:09,779
variables we make them private public

330
00:13:09,779 --> 00:13:12,720
um write modifiers are there so if what

331
00:13:12,720 --> 00:13:14,399
does it say by default on the

332
00:13:14,399 --> 00:13:16,800
documentation if you see says private

333
00:13:16,800 --> 00:13:18,360
functions and state variables are only

334
00:13:18,360 --> 00:13:19,860
visible for the contract they are

335
00:13:19,860 --> 00:13:22,260
defined in and not in derived contracts

336
00:13:22,260 --> 00:13:23,639
so it's talking with respect to

337
00:13:23,639 --> 00:13:25,380
contracts different contracts that we

338
00:13:25,380 --> 00:13:27,839
create and it is very clearly giving you

339
00:13:27,839 --> 00:13:30,060
this disclaimer there itself it's saying

340
00:13:30,060 --> 00:13:31,740
that everything inside the contract is

341
00:13:31,740 --> 00:13:34,620
visible to all external observers so it

342
00:13:34,620 --> 00:13:36,180
is very clearly saying just because you

343
00:13:36,180 --> 00:13:37,980
are making it private don't assume that

344
00:13:37,980 --> 00:13:39,899
it's it is actually private but anybody

345
00:13:39,899 --> 00:13:41,639
can see the data

346
00:13:41,639 --> 00:13:44,519
and again the link is there uh

347
00:13:44,519 --> 00:13:47,100
if you want to read more about it there

348
00:13:47,100 --> 00:13:49,500
so this is another example of another

349
00:13:49,500 --> 00:13:51,839
smart contract and we have two private

350
00:13:51,839 --> 00:13:53,760
variables in this case we have a message

351
00:13:53,760 --> 00:13:55,380
we have a flag

352
00:13:55,380 --> 00:13:57,480
now what I'm doing is there's a

353
00:13:57,480 --> 00:14:00,180
Constructor uh wherein I'm setting the

354
00:14:00,180 --> 00:14:02,820
flag by default right so the flag has

355
00:14:02,820 --> 00:14:05,459
been set and then I am doing a get flag

356
00:14:05,459 --> 00:14:08,519
uh there's another function uh which is

357
00:14:08,519 --> 00:14:11,459
get flat so get flag is public which

358
00:14:11,459 --> 00:14:13,500
means anybody can call this get flag

359
00:14:13,500 --> 00:14:15,720
function and the moment they call it it

360
00:14:15,720 --> 00:14:18,500
Returns the flag which was Set uh in the

361
00:14:18,500 --> 00:14:23,779
uh this Constructor itself

362
00:14:24,260 --> 00:14:27,540
now uh how do we

363
00:14:27,540 --> 00:14:30,360
how do we check once the a smart

364
00:14:30,360 --> 00:14:32,040
contract has been deployed remember that

365
00:14:32,040 --> 00:14:34,860
it's you can never delete it so unlike

366
00:14:34,860 --> 00:14:37,620
usual service wherein um

367
00:14:37,620 --> 00:14:39,899
I have control over everything I can go

368
00:14:39,899 --> 00:14:42,240
and modify things once you have deployed

369
00:14:42,240 --> 00:14:43,980
a smart contract it's going to be there

370
00:14:43,980 --> 00:14:45,899
forever as long as you know the address

371
00:14:45,899 --> 00:14:50,760
anyone can access it so um how do we uh

372
00:14:50,760 --> 00:14:52,740
um what are some of the things that we

373
00:14:52,740 --> 00:14:55,620
can do so for example uh you saw when

374
00:14:55,620 --> 00:14:59,399
when we did a npx hard hat deploy we

375
00:14:59,399 --> 00:15:01,560
specified a particular Network right so

376
00:15:01,560 --> 00:15:03,240
that Network could be linky buy that

377
00:15:03,240 --> 00:15:05,820
could be greatly so in this case

378
00:15:05,820 --> 00:15:07,920
um this these addresses are real if you

379
00:15:07,920 --> 00:15:09,180
want to try it out they are already

380
00:15:09,180 --> 00:15:12,120
deployed so you can also uh do follow

381
00:15:12,120 --> 00:15:14,820
these steps and write out yourself

382
00:15:14,820 --> 00:15:15,720
um so

383
00:15:15,720 --> 00:15:17,699
this is one of the address which is

384
00:15:17,699 --> 00:15:19,860
there in the go early Network now

385
00:15:19,860 --> 00:15:22,560
etherscan or block scan so you can go to

386
00:15:22,560 --> 00:15:24,480
block scan and it will automatically

387
00:15:24,480 --> 00:15:27,600
redirect you to either go early or rinky

388
00:15:27,600 --> 00:15:29,519
by depending on what network you have

389
00:15:29,519 --> 00:15:31,800
chosen so it also shows you let me show

390
00:15:31,800 --> 00:15:33,979
you

391
00:15:36,480 --> 00:15:38,760
okay if if time permits at the end I'll

392
00:15:38,760 --> 00:15:41,279
show you but for now uh just remember so

393
00:15:41,279 --> 00:15:43,260
because this is Googled Network we can

394
00:15:43,260 --> 00:15:44,240
go to go

395
00:15:44,240 --> 00:15:46,500
early.etherscan.io and enter this

396
00:15:46,500 --> 00:15:48,540
particular address and then you will see

397
00:15:48,540 --> 00:15:50,220
different transactions listed whatever

398
00:15:50,220 --> 00:15:52,260
transactions you do that is also

399
00:15:52,260 --> 00:15:54,660
recorded So the moment you deploy a

400
00:15:54,660 --> 00:15:56,519
contract clear contact creation

401
00:15:56,519 --> 00:15:58,320
transaction is created that is the first

402
00:15:58,320 --> 00:16:01,440
uh transaction always and after that

403
00:16:01,440 --> 00:16:03,839
whenever you call functions especially

404
00:16:03,839 --> 00:16:06,720
functions where ethers are exchanged

405
00:16:06,720 --> 00:16:09,360
um right so all of them are tracked and

406
00:16:09,360 --> 00:16:12,000
you can click on them and you can see uh

407
00:16:12,000 --> 00:16:13,920
what was the function called and in case

408
00:16:13,920 --> 00:16:16,920
there were any variables or any data

409
00:16:16,920 --> 00:16:18,480
which was visible you can also see that

410
00:16:18,480 --> 00:16:20,820
so

411
00:16:20,820 --> 00:16:25,220
um I think I can I'll show you this one

412
00:16:40,019 --> 00:16:41,980
so you can go to block scan

413
00:16:41,980 --> 00:16:45,139
[Music]

414
00:16:51,500 --> 00:16:54,300
and here you if you just know the

415
00:16:54,300 --> 00:16:56,220
address of a smart contract you can just

416
00:16:56,220 --> 00:16:59,300
copy that that

417
00:17:00,420 --> 00:17:03,420
foreign

418
00:17:29,160 --> 00:17:32,000
pankaj

419
00:17:32,880 --> 00:17:35,520
where is that screen

420
00:17:35,520 --> 00:17:38,179
okay

421
00:17:41,580 --> 00:17:44,460
okay so this is the address and we are

422
00:17:44,460 --> 00:17:46,500
just going to do a search on it

423
00:17:46,500 --> 00:17:49,500
so if you see it is showing you both

424
00:17:49,500 --> 00:17:52,080
Blinky by Andy why does it show because

425
00:17:52,080 --> 00:17:53,940
there is some kind of transaction that

426
00:17:53,940 --> 00:17:56,820
has happened in both the networks so we

427
00:17:56,820 --> 00:17:58,919
are talking about goeli test net so

428
00:17:58,919 --> 00:18:00,840
let's see what is in there

429
00:18:00,840 --> 00:18:01,620
foreign

430
00:18:01,620 --> 00:18:04,620
go there and if you take a note of this

431
00:18:04,620 --> 00:18:07,740
b letter and there is a notification

432
00:18:07,740 --> 00:18:10,020
icon on top of that so what does that

433
00:18:10,020 --> 00:18:12,720
mean which it means that even even

434
00:18:12,720 --> 00:18:14,100
though there is something in this go

435
00:18:14,100 --> 00:18:15,419
early Network there's also something

436
00:18:15,419 --> 00:18:18,059
else which we might be interested in so

437
00:18:18,059 --> 00:18:20,640
when when you click on it

438
00:18:20,640 --> 00:18:22,799
again it takes you to this page so if it

439
00:18:22,799 --> 00:18:24,539
is available on multiple networks you

440
00:18:24,539 --> 00:18:27,179
will be able to see that

441
00:18:27,179 --> 00:18:29,760
now in this case you see this contract

442
00:18:29,760 --> 00:18:32,039
creation what I mentioned so which means

443
00:18:32,039 --> 00:18:33,840
I have just created this contract and

444
00:18:33,840 --> 00:18:36,120
there is no uh there is no transaction

445
00:18:36,120 --> 00:18:38,780
which has happened on this yet

446
00:18:38,780 --> 00:18:43,140
and let's take a look at this rinky by

447
00:18:43,140 --> 00:18:44,820
so in this case

448
00:18:44,820 --> 00:18:46,980
um also here this is just contract

449
00:18:46,980 --> 00:18:48,000
creation

450
00:18:48,000 --> 00:18:50,460
in case there were more transactions

451
00:18:50,460 --> 00:18:53,400
let's just click on one of them

452
00:18:53,400 --> 00:18:54,780
and

453
00:18:54,780 --> 00:18:57,840
what I was trying to say at

454
00:18:57,840 --> 00:19:00,480
click to see more it is this section so

455
00:19:00,480 --> 00:19:02,640
whenever you uh because we have only one

456
00:19:02,640 --> 00:19:04,559
transaction contract creation I click on

457
00:19:04,559 --> 00:19:07,860
that and this page comes which shows you

458
00:19:07,860 --> 00:19:10,140
transaction details and if you click on

459
00:19:10,140 --> 00:19:12,419
click to see more

460
00:19:12,419 --> 00:19:14,880
and scroll down this input data section

461
00:19:14,880 --> 00:19:18,120
here you have some input and you can

462
00:19:18,120 --> 00:19:22,500
click on view input as and you do utf-8

463
00:19:22,500 --> 00:19:25,260
when you do that

464
00:19:25,260 --> 00:19:30,000
it converts the hex value to ASCII value

465
00:19:30,000 --> 00:19:32,640
and you can go through this data and see

466
00:19:32,640 --> 00:19:34,320
if there is anything which has leak

467
00:19:34,320 --> 00:19:36,480
mostly if there is any kind of string

468
00:19:36,480 --> 00:19:37,980
which is there in your smart contract

469
00:19:37,980 --> 00:19:40,559
most of the times it appears here so

470
00:19:40,559 --> 00:19:42,840
this is where the flag was leaked and

471
00:19:42,840 --> 00:19:45,000
this is one section and this is also

472
00:19:45,000 --> 00:19:47,100
something which is available in the ABI

473
00:19:47,100 --> 00:19:49,620
files which we saw earlier so there also

474
00:19:49,620 --> 00:19:52,500
you have this data but um you will have

475
00:19:52,500 --> 00:19:55,440
to do convert it yourself but in this

476
00:19:55,440 --> 00:19:57,419
case in the online

477
00:19:57,419 --> 00:20:01,740
um this etherscan.io it allows you to do

478
00:20:01,740 --> 00:20:03,660
this conversion easily by just selecting

479
00:20:03,660 --> 00:20:08,280
view input as utf-8 right so

480
00:20:08,280 --> 00:20:09,960
this is one place you should always

481
00:20:09,960 --> 00:20:12,620
check

482
00:20:15,000 --> 00:20:17,580
uh so if there is no such thing as

483
00:20:17,580 --> 00:20:21,000
privacy uh how my question was how do I

484
00:20:21,000 --> 00:20:23,160
create my web 3 challenges if I just

485
00:20:23,160 --> 00:20:25,140
can't hide my flag because my flag was

486
00:20:25,140 --> 00:20:27,059
always becoming visible so what is it

487
00:20:27,059 --> 00:20:30,360
that I did to hide the flag and not make

488
00:20:30,360 --> 00:20:32,460
it become visible if so it's more of a

489
00:20:32,460 --> 00:20:34,919
Indian jugard you can say so I figured

490
00:20:34,919 --> 00:20:37,140
out there's a function which is ABI dot

491
00:20:37,140 --> 00:20:40,440
encode pact and it is mostly used to

492
00:20:40,440 --> 00:20:42,539
concatenate you can say kind of strings

493
00:20:42,539 --> 00:20:45,600
multiple strings so even when I try to

494
00:20:45,600 --> 00:20:48,600
con combine individual words I notice

495
00:20:48,600 --> 00:20:50,580
that those individual words were also

496
00:20:50,580 --> 00:20:54,660
appearing uh in that um space right in

497
00:20:54,660 --> 00:20:57,840
the ABI file so then I had to literally

498
00:20:57,840 --> 00:21:01,440
slice it down to letters so that even if

499
00:21:01,440 --> 00:21:04,080
it comes up as is it's all jumbled up

500
00:21:04,080 --> 00:21:06,419
and it makes no sense to anyone so it's

501
00:21:06,419 --> 00:21:08,760
more like an obfuscation thing so you

502
00:21:08,760 --> 00:21:11,280
can see how I have written the flag uh

503
00:21:11,280 --> 00:21:13,320
every letter and have concatenated them

504
00:21:13,320 --> 00:21:15,900
and string ABI encode fact is something

505
00:21:15,900 --> 00:21:17,460
that you can use and that's what I had

506
00:21:17,460 --> 00:21:19,380
used to hide the flag if I had not used

507
00:21:19,380 --> 00:21:21,419
it anybody would have just taken the

508
00:21:21,419 --> 00:21:24,059
flag and got all the points

509
00:21:24,059 --> 00:21:26,640
and this is how it was it looked after I

510
00:21:26,640 --> 00:21:28,740
used ABI encoded

511
00:21:28,740 --> 00:21:32,820
um encode fact right Avi encode packed

512
00:21:32,820 --> 00:21:35,940
uh this input data section looked like

513
00:21:35,940 --> 00:21:37,919
this so you can still see a pattern

514
00:21:37,919 --> 00:21:39,960
there's a V and some kind of pattern but

515
00:21:39,960 --> 00:21:42,059
you can't exactly make sense of what

516
00:21:42,059 --> 00:21:44,280
value it is

517
00:21:44,280 --> 00:21:46,140
and

518
00:21:46,140 --> 00:21:49,260
yeah similarly uh in the rinky by this

519
00:21:49,260 --> 00:21:50,760
is another address let's take a look at

520
00:21:50,760 --> 00:21:54,080
this address and let's see

521
00:22:11,280 --> 00:22:13,919
so you have this space here you can

522
00:22:13,919 --> 00:22:16,460
paste

523
00:22:25,640 --> 00:22:27,600
foreign

524
00:22:27,600 --> 00:22:29,460
and again you see there is this

525
00:22:29,460 --> 00:22:31,860
notification and I have this transaction

526
00:22:31,860 --> 00:22:34,399
hash

527
00:22:34,799 --> 00:22:36,720
take a look at this other address from

528
00:22:36,720 --> 00:22:38,820
and here you will see there are a lot of

529
00:22:38,820 --> 00:22:41,640
transactions right so here also you see

530
00:22:41,640 --> 00:22:43,860
contract creation and then different

531
00:22:43,860 --> 00:22:46,080
addresses from where people were trying

532
00:22:46,080 --> 00:22:48,360
to reach and they were trying to invoke

533
00:22:48,360 --> 00:22:53,178
different functions so let's say

534
00:22:53,220 --> 00:22:55,500
you pick any transaction if you want to

535
00:22:55,500 --> 00:22:57,659
see the details uh you can go through

536
00:22:57,659 --> 00:22:59,820
them one by one

537
00:22:59,820 --> 00:23:00,900
um

538
00:23:00,900 --> 00:23:03,559
yeah

539
00:23:05,580 --> 00:23:09,780
so yeah basically

540
00:23:10,679 --> 00:23:12,179
that's exactly

541
00:23:12,179 --> 00:23:12,900
um

542
00:23:12,900 --> 00:23:15,480
ABI in code pact is what uh I have used

543
00:23:15,480 --> 00:23:18,240
and that's how this problem was solved

544
00:23:18,240 --> 00:23:19,799
now different transactions you can go

545
00:23:19,799 --> 00:23:21,720
through them one by one and just try to

546
00:23:21,720 --> 00:23:23,820
analyze uh what is there and what's not

547
00:23:23,820 --> 00:23:25,260
there now

548
00:23:25,260 --> 00:23:27,360
um how much time do I have

549
00:23:27,360 --> 00:23:30,500
[Music]

550
00:23:30,600 --> 00:23:31,679
how much

551
00:23:31,679 --> 00:23:34,280
15

552
00:23:35,880 --> 00:23:38,880
okay I have enough time then

553
00:23:38,880 --> 00:23:42,659
um so this uh Capture the Flag uh all of

554
00:23:42,659 --> 00:23:44,400
you have mobile phone I have I have

555
00:23:44,400 --> 00:23:46,140
shown you a few things and you see this

556
00:23:46,140 --> 00:23:48,659
address this this was uh one one of the

557
00:23:48,659 --> 00:23:50,880
CDF um

558
00:23:50,880 --> 00:23:53,460
question so third challenge was this one

559
00:23:53,460 --> 00:23:54,900
so

560
00:23:54,900 --> 00:23:57,360
I want to give you some time and why

561
00:23:57,360 --> 00:23:58,500
don't you try to see what all

562
00:23:58,500 --> 00:23:59,880
information you can gather from this

563
00:23:59,880 --> 00:24:02,400
address that you see I know it would be

564
00:24:02,400 --> 00:24:04,919
hard to copy but this is available

565
00:24:04,919 --> 00:24:07,080
online my this my slide is available

566
00:24:07,080 --> 00:24:11,419
online you can access it at slides.com

567
00:24:11,419 --> 00:24:14,760
and you can select web3

568
00:24:14,760 --> 00:24:17,220
um and I give you a minute maybe minute

569
00:24:17,220 --> 00:24:19,559
or two at least give it a try and then

570
00:24:19,559 --> 00:24:22,200
I'll show you right here uh what it is

571
00:24:22,200 --> 00:24:25,440
and what we can do about it so using

572
00:24:25,440 --> 00:24:27,179
this address if you can fly find the

573
00:24:27,179 --> 00:24:28,080
flag

574
00:24:28,080 --> 00:24:30,740
foreign

575
00:24:34,980 --> 00:24:37,919
so you don't have to write this contract

576
00:24:37,919 --> 00:24:39,720
address because as I said you can just

577
00:24:39,720 --> 00:24:42,120
go to the slides.com

578
00:24:42,120 --> 00:24:45,500
and yeah

579
00:24:49,020 --> 00:24:51,360
actually it's not my laptop and I'm

580
00:24:51,360 --> 00:24:53,159
finding it little heart pankaj can you

581
00:24:53,159 --> 00:24:55,940
help me um

582
00:24:58,380 --> 00:25:01,740
I just want to put that address in a

583
00:25:01,740 --> 00:25:04,760
notepad and make it big

584
00:25:06,659 --> 00:25:10,520
no no this one the URL

585
00:25:11,280 --> 00:25:14,780
can you zoom the screen

586
00:25:15,539 --> 00:25:18,020
okay

587
00:25:23,659 --> 00:25:27,059
anything just just make it big so that

588
00:25:27,059 --> 00:25:29,720
it's visible

589
00:25:32,220 --> 00:25:35,659
yeah yeah yeah

590
00:25:40,159 --> 00:25:43,799
thank you so you can go to this

591
00:25:43,799 --> 00:25:45,600
um particular slide and copy the address

592
00:25:45,600 --> 00:25:46,799
from there

593
00:25:46,799 --> 00:25:50,299
and give it a try

594
00:25:50,340 --> 00:25:52,380
so I think a few people did manage to

595
00:25:52,380 --> 00:25:54,299
solve this Challenge and it was amazing

596
00:25:54,299 --> 00:25:58,340
but not many salts were there

597
00:25:58,660 --> 00:26:01,869
[Music]

598
00:26:09,620 --> 00:26:12,000
the good part is you can do it from your

599
00:26:12,000 --> 00:26:14,640
mobile phone as well at least few steps

600
00:26:14,640 --> 00:26:16,679
for sure

601
00:26:16,679 --> 00:26:18,200
all right

602
00:26:18,200 --> 00:26:20,940
not all the steps because you might have

603
00:26:20,940 --> 00:26:24,260
to write certain code

604
00:26:24,299 --> 00:26:28,080
and I think I'll also start doing so

605
00:26:28,080 --> 00:26:30,059
gradually

606
00:26:30,059 --> 00:26:31,380
um

607
00:26:31,380 --> 00:26:33,059
is there anyone who's still noting it

608
00:26:33,059 --> 00:26:35,159
down

609
00:26:35,159 --> 00:26:37,700
okay

610
00:26:39,910 --> 00:26:44,150
[Music]

611
00:26:57,140 --> 00:27:00,600
so you remember a block scan right I

612
00:27:00,600 --> 00:27:02,159
mentioned about it so the always the

613
00:27:02,159 --> 00:27:04,140
first thing that you want to do is uh

614
00:27:04,140 --> 00:27:07,140
you can go there and copy the address

615
00:27:07,140 --> 00:27:10,380
and try analyzing or what it is what is

616
00:27:10,380 --> 00:27:14,159
there so this has few steps which which

617
00:27:14,159 --> 00:27:17,400
you can call a web 3 ocean kind of thing

618
00:27:17,400 --> 00:27:19,919
so a little bit of ocean you have to do

619
00:27:19,919 --> 00:27:21,779
you will have to try to figure out some

620
00:27:21,779 --> 00:27:23,100
of the information

621
00:27:23,100 --> 00:27:26,279
and even if if you can tell me some of

622
00:27:26,279 --> 00:27:27,480
the information that you could gather

623
00:27:27,480 --> 00:27:30,440
that would be amazing

624
00:27:56,440 --> 00:27:58,320
[Music]

625
00:27:58,320 --> 00:28:00,600
so I'll give you one more minute and

626
00:28:00,600 --> 00:28:03,419
then I'll also solve along with you and

627
00:28:03,419 --> 00:28:06,299
I'll also see how far I can go

628
00:28:06,299 --> 00:28:08,820
because this is not not my machine so uh

629
00:28:08,820 --> 00:28:10,620
I think I won't be able to run

630
00:28:10,620 --> 00:28:12,720
everything

631
00:28:12,720 --> 00:28:14,520
[Music]

632
00:28:14,520 --> 00:28:18,480
for my machine HDMI is not working so it

633
00:28:18,480 --> 00:28:22,559
was not able to connect

634
00:28:33,860 --> 00:28:37,639
did anyone find anything

635
00:28:39,299 --> 00:28:41,700
how many of you are trying

636
00:28:41,700 --> 00:28:45,500
wow amazing

637
00:28:58,400 --> 00:29:02,000
no records found

638
00:29:02,539 --> 00:29:06,480
okay so I how do you know whether it's

639
00:29:06,480 --> 00:29:09,440
greatly or not

640
00:29:10,559 --> 00:29:12,919
it was given

641
00:29:12,919 --> 00:29:14,960
okay okay okay

642
00:29:14,960 --> 00:29:19,320
uh can I can I see your screen

643
00:29:19,320 --> 00:29:21,419
listen thank you bye

644
00:29:21,419 --> 00:29:22,980
okay

645
00:29:22,980 --> 00:29:24,720
five transactions found

646
00:29:24,720 --> 00:29:28,279
awesome that is good

647
00:29:28,380 --> 00:29:31,700
what what did you find

648
00:29:33,540 --> 00:29:36,480
[Music]

649
00:29:36,480 --> 00:29:39,539
the address is uh address was there Coco

650
00:29:39,539 --> 00:29:40,980
really address I think we got three

651
00:29:40,980 --> 00:29:42,720
ashes

652
00:29:42,720 --> 00:29:45,419
no you know their total file transaction

653
00:29:45,419 --> 00:29:47,880
three transactions have based 64 apis

654
00:29:47,880 --> 00:29:51,899
and hint hint is there set flag is their

655
00:29:51,899 --> 00:29:55,219
give me more is there

656
00:29:56,880 --> 00:30:02,360
awesome okay and what else was there

657
00:30:02,520 --> 00:30:05,539
you're right he

658
00:30:05,640 --> 00:30:08,520
yes yes what do you think is give me

659
00:30:08,520 --> 00:30:09,860
more

660
00:30:09,860 --> 00:30:11,700
uh

661
00:30:11,700 --> 00:30:13,860
you are you're right you're absolutely I

662
00:30:13,860 --> 00:30:16,620
think you should have solved tomorrow no

663
00:30:16,620 --> 00:30:18,419
I mean if you had tried and if you had

664
00:30:18,419 --> 00:30:19,799
known these things you would have been

665
00:30:19,799 --> 00:30:23,399
able to solve it why no yes you are you

666
00:30:23,399 --> 00:30:26,159
are giving the answers and uh those be

667
00:30:26,159 --> 00:30:28,559
if you have reached those base64 values

668
00:30:28,559 --> 00:30:30,299
yes you're on the right track even

669
00:30:30,299 --> 00:30:32,100
though it says go early maybe it was by

670
00:30:32,100 --> 00:30:34,440
mistake I mentioned that but it does not

671
00:30:34,440 --> 00:30:36,539
matter because as I showed you right the

672
00:30:36,539 --> 00:30:38,640
notification icon tells you on which

673
00:30:38,640 --> 00:30:41,520
networks it found information so if you

674
00:30:41,520 --> 00:30:42,899
didn't get anything in this one you can

675
00:30:42,899 --> 00:30:44,399
check the other one if there are any

676
00:30:44,399 --> 00:30:46,500
transactions in there so he rightly

677
00:30:46,500 --> 00:30:48,480
figured out in rinky by there were five

678
00:30:48,480 --> 00:30:51,059
transactions and if you go to that view

679
00:30:51,059 --> 00:30:54,000
input section here you found a few base

680
00:30:54,000 --> 00:30:57,600
in 64 encoded values and few uh just

681
00:30:57,600 --> 00:31:00,419
dummy values to uh tell you that you are

682
00:31:00,419 --> 00:31:02,820
on the right track so one of the base 64

683
00:31:02,820 --> 00:31:04,620
value uh

684
00:31:04,620 --> 00:31:07,200
can anyone tell me other than give me

685
00:31:07,200 --> 00:31:08,820
more and set flag what was the third

686
00:31:08,820 --> 00:31:11,340
base64 value

687
00:31:11,340 --> 00:31:14,760
yes absolutely that is the link to API

688
00:31:14,760 --> 00:31:17,039
files so because ABI is very important

689
00:31:17,039 --> 00:31:19,200
if you want to access a smart contract

690
00:31:19,200 --> 00:31:22,260
if you want to make a function call two

691
00:31:22,260 --> 00:31:24,600
things are very important one is uh the

692
00:31:24,600 --> 00:31:26,159
address you need to know the smart

693
00:31:26,159 --> 00:31:28,260
contract address and the second one is

694
00:31:28,260 --> 00:31:31,200
ABI file because it defines what are the

695
00:31:31,200 --> 00:31:32,580
functions

696
00:31:32,580 --> 00:31:35,658
still 15 minutes

697
00:31:35,720 --> 00:31:39,440
it was 20 minutes back then all right

698
00:31:39,440 --> 00:31:42,799
time is moving very slow

699
00:31:42,799 --> 00:31:45,899
okay I do

700
00:31:45,899 --> 00:31:48,500
oh

701
00:31:48,679 --> 00:31:52,700
uh no ABI is

702
00:31:56,039 --> 00:31:59,039
yes so in the API now now that you have

703
00:31:59,039 --> 00:32:01,320
the ABF ABI file the next thing that you

704
00:32:01,320 --> 00:32:03,360
can do because all of you know that in

705
00:32:03,360 --> 00:32:05,340
API file what do we have we have

706
00:32:05,340 --> 00:32:07,380
functions it tells you what all

707
00:32:07,380 --> 00:32:08,640
functions are defined in the smart

708
00:32:08,640 --> 00:32:11,039
contract and what are the inputs it

709
00:32:11,039 --> 00:32:13,740
expects so you can take a look at it and

710
00:32:13,740 --> 00:32:15,600
even if you don't take a look at it it

711
00:32:15,600 --> 00:32:17,640
uh the the hints in the five

712
00:32:17,640 --> 00:32:19,500
transactions tell you call the

713
00:32:19,500 --> 00:32:22,799
particular function get uh what was that

714
00:32:22,799 --> 00:32:26,039
cell article I guess cell article right

715
00:32:26,039 --> 00:32:29,399
get article get article and it also says

716
00:32:29,399 --> 00:32:33,000
when you call me say another base64

717
00:32:33,000 --> 00:32:35,399
value which if you decode it tells you

718
00:32:35,399 --> 00:32:38,580
give me more what does it mean who can

719
00:32:38,580 --> 00:32:41,000
tell me

720
00:32:41,240 --> 00:32:43,860
one thing is you can take a look at ABI

721
00:32:43,860 --> 00:32:45,720
file and then make a good guess other

722
00:32:45,720 --> 00:32:47,580
thing is you can just from the hints

723
00:32:47,580 --> 00:32:50,039
make sense out of it so it says when you

724
00:32:50,039 --> 00:32:52,500
call me sell article

725
00:32:52,500 --> 00:32:55,020
say this how do you say something to a

726
00:32:55,020 --> 00:32:57,320
function

727
00:32:57,360 --> 00:32:59,820
absolutely so you pass it as a parameter

728
00:32:59,820 --> 00:33:02,640
value so the hint was when you call that

729
00:33:02,640 --> 00:33:04,559
function you have to say give me more

730
00:33:04,559 --> 00:33:06,899
and you I need to pass that value and

731
00:33:06,899 --> 00:33:09,600
you would get the flag so that was the

732
00:33:09,600 --> 00:33:12,299
challenge and I think ctf.winder Dot

733
00:33:12,299 --> 00:33:15,059
site is still up uh in case you want to

734
00:33:15,059 --> 00:33:18,320
solve some of the challenges

735
00:33:18,779 --> 00:33:21,019
foreign

736
00:33:23,720 --> 00:33:26,880
we have not brought it down so you can

737
00:33:26,880 --> 00:33:28,799
still go ahead even though you won't get

738
00:33:28,799 --> 00:33:31,380
any more points you won't get prizes uh

739
00:33:31,380 --> 00:33:33,000
you'll be the winners will definitely be

740
00:33:33,000 --> 00:33:34,620
announced you know today during the

741
00:33:34,620 --> 00:33:36,539
closing ceremony but if you want to try

742
00:33:36,539 --> 00:33:38,460
a few challenges you can go ahead and

743
00:33:38,460 --> 00:33:40,440
try them out

744
00:33:40,440 --> 00:33:41,940
um do you have any questions at this

745
00:33:41,940 --> 00:33:43,799
point of time I hope

746
00:33:43,799 --> 00:33:47,100
um all of you uh my main message that I

747
00:33:47,100 --> 00:33:48,960
wanted to send here is I wanted to share

748
00:33:48,960 --> 00:33:51,240
my experience with smart contracts what

749
00:33:51,240 --> 00:33:53,700
are the things I learned right so first

750
00:33:53,700 --> 00:33:56,340
thing integer overflows don't work

751
00:33:56,340 --> 00:33:58,799
anymore by default compiler handles it

752
00:33:58,799 --> 00:34:01,440
for you point eight on onwards solidity

753
00:34:01,440 --> 00:34:04,200
pointed version onwards the second is uh

754
00:34:04,200 --> 00:34:05,880
don't depend on private variables

755
00:34:05,880 --> 00:34:07,799
blindly thinking that is going to

756
00:34:07,799 --> 00:34:10,918
protect your values uh private it means

757
00:34:10,918 --> 00:34:13,859
has a very different meaning so be very

758
00:34:13,859 --> 00:34:15,659
careful if you are putting anything in

759
00:34:15,659 --> 00:34:17,520
your function and it is sensitive do not

760
00:34:17,520 --> 00:34:20,219
put it if you want to just obfuscate you

761
00:34:20,219 --> 00:34:22,679
can use string ABI in code pact find

762
00:34:22,679 --> 00:34:24,960
function the way I did but if there is

763
00:34:24,960 --> 00:34:28,020
any other better way definitely make use

764
00:34:28,020 --> 00:34:29,940
of it now

765
00:34:29,940 --> 00:34:32,339
um this is all what I had to talk about

766
00:34:32,339 --> 00:34:35,780
uh apart from this I would also like to

767
00:34:35,780 --> 00:34:39,179
talk a little bit about winter so winter

768
00:34:39,179 --> 00:34:42,239
is a community and I am a part of it and

769
00:34:42,239 --> 00:34:44,760
it is open for everybody so we are there

770
00:34:44,760 --> 00:34:47,639
on Discord uh this is the even on city

771
00:34:47,639 --> 00:34:49,199
of donvenger Dot site you can see our

772
00:34:49,199 --> 00:34:51,599
Discord server here if you click on it

773
00:34:51,599 --> 00:34:53,580
if you want to be part of it you can

774
00:34:53,580 --> 00:34:57,780
click on it and you can join us and it's

775
00:34:57,780 --> 00:34:59,220
not like there is one person who's

776
00:34:59,220 --> 00:35:01,500
monitoring uh and who's handling

777
00:35:01,500 --> 00:35:03,000
everything it is open to the community

778
00:35:03,000 --> 00:35:05,400
members and if any one of you sitting

779
00:35:05,400 --> 00:35:07,920
here has any idea wonderful ideas and

780
00:35:07,920 --> 00:35:09,240
you would like to implement you would

781
00:35:09,240 --> 00:35:11,460
want to engage with other people in the

782
00:35:11,460 --> 00:35:14,040
community you are absolutely free to

783
00:35:14,040 --> 00:35:16,140
come and talk uh to the existing

784
00:35:16,140 --> 00:35:18,900
volunteers collaborate together and do

785
00:35:18,900 --> 00:35:20,820
wonderful things few things that we do

786
00:35:20,820 --> 00:35:24,180
is on every Saturday days most Saturdays

787
00:35:24,180 --> 00:35:26,520
I wouldn't say every but most Saturdays

788
00:35:26,520 --> 00:35:28,619
uh when whenever any volunteer is

789
00:35:28,619 --> 00:35:31,200
available we choose topics and we

790
00:35:31,200 --> 00:35:33,720
discuss about them uh with the community

791
00:35:33,720 --> 00:35:36,900
so for example we put hack the box boxes

792
00:35:36,900 --> 00:35:39,060
and we solve it together we have an open

793
00:35:39,060 --> 00:35:41,579
discussion so all of you are invited to

794
00:35:41,579 --> 00:35:45,900
be part of it uh we also have

795
00:35:45,900 --> 00:35:48,540
um our website at

796
00:35:48,540 --> 00:35:51,540
net

797
00:35:57,599 --> 00:36:00,300
and here also uh you will get few

798
00:36:00,300 --> 00:36:03,480
details about our past events and things

799
00:36:03,480 --> 00:36:06,060
that we have done right uh so you can

800
00:36:06,060 --> 00:36:09,119
click on the past events link and uh

801
00:36:09,119 --> 00:36:13,260
you'll get a few information about us

802
00:36:13,260 --> 00:36:16,500
um so that's all from my side if you

803
00:36:16,500 --> 00:36:18,000
have any questions

804
00:36:18,000 --> 00:36:20,880
um so far please feel free to ask

805
00:36:20,880 --> 00:36:22,960
I would be happy to answer them

806
00:36:22,960 --> 00:36:26,150
[Music]

807
00:36:33,020 --> 00:36:37,380
okay if there are no questions then uh I

808
00:36:37,380 --> 00:36:39,480
would just uh thank everyone all of you

809
00:36:39,480 --> 00:36:42,420
for listening to me and I hope you found

810
00:36:42,420 --> 00:36:44,579
web 3.0 interesting and you would go

811
00:36:44,579 --> 00:36:46,619
back and try it out yourself this is

812
00:36:46,619 --> 00:36:48,480
absolutely I again it's not totally

813
00:36:48,480 --> 00:36:50,160
decentralized there is some

814
00:36:50,160 --> 00:36:52,440
centralization aspects to it but then

815
00:36:52,440 --> 00:36:54,720
most of the things are decentralized and

816
00:36:54,720 --> 00:36:57,060
uh just start playing around with it

817
00:36:57,060 --> 00:36:58,500
thank you everyone thank you so much

818
00:36:58,500 --> 00:36:59,960
thank you so much

819
00:36:59,960 --> 00:37:03,229
[Applause]

