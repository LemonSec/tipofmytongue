1
00:00:03,190 --> 00:00:06,259
[Music]

2
00:00:07,370 --> 00:00:14,040
hi I want to talk about the QSB IMAX - I

3
00:00:14,040 --> 00:00:20,840
build basically I wanted to do remote

4
00:00:20,840 --> 00:00:23,550
remote development of film or firmware

5
00:00:23,550 --> 00:00:26,279
but they still have a system at my at my

6
00:00:26,279 --> 00:00:29,699
office where I can just test images and

7
00:00:29,699 --> 00:00:34,020
it also would be quite useful to it to

8
00:00:34,020 --> 00:00:37,380
be able to automate the testing of of

9
00:00:37,380 --> 00:00:39,660
images on real hardware to see if there

10
00:00:39,660 --> 00:00:42,800
was some regression or if the yeah

11
00:00:42,800 --> 00:00:48,210
basically if change broke something but

12
00:00:48,210 --> 00:00:51,989
yeah I don't I wants to have it in a way

13
00:00:51,989 --> 00:00:54,989
that neither the firmware image nor the

14
00:00:54,989 --> 00:00:57,660
bought design needs to be changed for

15
00:00:57,660 --> 00:01:02,309
that and also basically that I can just

16
00:01:02,309 --> 00:01:06,630
set it up once put it in some in some

17
00:01:06,630 --> 00:01:09,150
space and just have it running there and

18
00:01:09,150 --> 00:01:13,920
also for systems like the the the new

19
00:01:13,920 --> 00:01:17,939
Atom based they use a 1.8 volts flash

20
00:01:17,939 --> 00:01:21,570
not the usual 3.3 volt so that it should

21
00:01:21,570 --> 00:01:25,590
also be supportive so yeah what some

22
00:01:25,590 --> 00:01:28,710
people do is to just plug a test clip on

23
00:01:28,710 --> 00:01:31,470
on the target board connect to

24
00:01:31,470 --> 00:01:37,680
programmer yeah but that might even even

25
00:01:37,680 --> 00:01:41,250
damage the system because often the

26
00:01:41,250 --> 00:01:44,490
flash is it directly connected to to the

27
00:01:44,490 --> 00:01:47,540
same voltage rail as part of the chipset

28
00:01:47,540 --> 00:01:51,750
so when you connect it just just clip to

29
00:01:51,750 --> 00:01:54,270
the flash and power all the flash trip

30
00:01:54,270 --> 00:01:56,759
via this clip you also power up is some

31
00:01:56,759 --> 00:01:59,670
part of the board and that usually

32
00:01:59,670 --> 00:02:02,509
violates the power sequencing

33
00:02:02,509 --> 00:02:05,969
requirements of the chipset sure on some

34
00:02:05,969 --> 00:02:08,690
boards there's there's diode in the

35
00:02:08,690 --> 00:02:12,330
voltage power line for the flash there

36
00:02:12,330 --> 00:02:13,190
it's

37
00:02:13,190 --> 00:02:16,940
not a problem but it's usually in must

38
00:02:16,940 --> 00:02:19,700
produce designs they just leave out this

39
00:02:19,700 --> 00:02:21,800
diode and just put a zero ohm resistor

40
00:02:21,800 --> 00:02:25,060
there because it's half a cent cheaper

41
00:02:25,060 --> 00:02:28,520
yeah also the data lines from the

42
00:02:28,520 --> 00:02:31,430
programmer and the the target system

43
00:02:31,430 --> 00:02:36,170
might interfere so it's I mean it works

44
00:02:36,170 --> 00:02:39,620
when when you just want one or it often

45
00:02:39,620 --> 00:02:41,540
works when just want to flash board once

46
00:02:41,540 --> 00:02:43,910
but for development you you can't really

47
00:02:43,910 --> 00:02:48,260
use that so what a lot of people use is

48
00:02:48,260 --> 00:02:52,850
the M 100 the flash emulator it's I

49
00:02:52,850 --> 00:02:58,640
think 100 500 pound but yeah for for

50
00:02:58,640 --> 00:03:00,530
hobbyists it's it's rather rather

51
00:03:00,530 --> 00:03:02,900
expensive and also when you want to test

52
00:03:02,900 --> 00:03:05,540
large amounts of systems for example

53
00:03:05,540 --> 00:03:09,560
like the 30 systems or so you want to

54
00:03:09,560 --> 00:03:12,230
see if some some change it breaks the

55
00:03:12,230 --> 00:03:14,300
film of all those systems that gets

56
00:03:14,300 --> 00:03:19,190
expensive really fast and also the the

57
00:03:19,190 --> 00:03:22,370
old version you can get for the cheaper

58
00:03:22,370 --> 00:03:25,730
induced that I think it only works for

59
00:03:25,730 --> 00:03:29,930
up to 20 or 25 megahertz so you need to

60
00:03:29,930 --> 00:03:32,330
make some changes to your filmers so

61
00:03:32,330 --> 00:03:35,540
that the controller doesn't switch to

62
00:03:35,540 --> 00:03:41,930
like 50 megahertz mode this also new

63
00:03:41,930 --> 00:03:44,300
system the spy spy by a trouble Hudson

64
00:03:44,300 --> 00:03:46,489
it's I think it's still a bit in

65
00:03:46,489 --> 00:03:50,840
development it's basically based on a is

66
00:03:50,840 --> 00:03:55,600
40 FPGA and some SDRAM but it also has

67
00:03:55,600 --> 00:03:57,800
limited to maximum frequency because the

68
00:03:57,800 --> 00:04:00,610
problem there there is is the latency

69
00:04:00,610 --> 00:04:03,920
basically the protocol from from flash

70
00:04:03,920 --> 00:04:06,620
chip you sent the flash chip in address

71
00:04:06,620 --> 00:04:09,380
and after that after a fixed amount of

72
00:04:09,380 --> 00:04:13,820
time I think it's I think it's 1 1 1 1

73
00:04:13,820 --> 00:04:15,440
byte without data you have to send you

74
00:04:15,440 --> 00:04:18,260
say have to send the data and when when

75
00:04:18,260 --> 00:04:22,070
you store the data in some ddr mr so the

76
00:04:22,070 --> 00:04:24,860
latency becomes problem there basically

77
00:04:24,860 --> 00:04:27,500
you don't get the the data fast enough

78
00:04:27,500 --> 00:04:30,650
from from the RAM to send to the host

79
00:04:30,650 --> 00:04:36,020
when emulating an SPI flash let's I mean

80
00:04:36,020 --> 00:04:39,020
I I try it I first tried to build my own

81
00:04:39,020 --> 00:04:44,660
SPI flash emulator and yeah wasn't that

82
00:04:44,660 --> 00:04:49,850
easy so yeah another another approach

83
00:04:49,850 --> 00:04:54,470
would be the spice later basically the

84
00:04:54,470 --> 00:04:59,770
day you you also yeah you also you use a

85
00:04:59,770 --> 00:05:02,750
clip to connect to the flash but with

86
00:05:02,750 --> 00:05:06,650
the spice lighter you can you can

87
00:05:06,650 --> 00:05:09,800
basically isolate the programmer from

88
00:05:09,800 --> 00:05:12,560
the system so at least when the system

89
00:05:12,560 --> 00:05:14,240
runs the programmer doesn't interfere

90
00:05:14,240 --> 00:05:16,880
it was a system anymore but when

91
00:05:16,880 --> 00:05:19,180
programming that still might be an issue

92
00:05:19,180 --> 00:05:22,790
yeah so I most more or less based on

93
00:05:22,790 --> 00:05:27,440
that I created the QSP I max to or it's

94
00:05:27,440 --> 00:05:29,930
the first QSP I max and then the second

95
00:05:29,930 --> 00:05:36,729
revision basically I put that's a

96
00:05:36,729 --> 00:05:45,080
pointer but basically that's this is the

97
00:05:45,080 --> 00:05:49,190
Q SPI max to on the mainboard I remove

98
00:05:49,190 --> 00:05:51,919
the flash and put some small interpose

99
00:05:51,919 --> 00:05:55,370
aboard the there instead then I put the

100
00:05:55,370 --> 00:05:58,160
flash on the small PCB and connect that

101
00:05:58,160 --> 00:06:00,979
all together with the QSB I max to in

102
00:06:00,979 --> 00:06:06,770
between and connect the programmer there

103
00:06:06,770 --> 00:06:10,160
yeah that thing uses the real flash trip

104
00:06:10,160 --> 00:06:14,570
so that's 100% compatible with the

105
00:06:14,570 --> 00:06:19,460
protocol and also if the flesh yeah it

106
00:06:19,460 --> 00:06:21,560
supports all commands the flash chip is

107
00:06:21,560 --> 00:06:26,510
port and yeah the nice thing about that

108
00:06:26,510 --> 00:06:28,700
is that the programmer can select if the

109
00:06:28,700 --> 00:06:30,620
flash chip it gets directly connected to

110
00:06:30,620 --> 00:06:34,760
the main board so you can I think I

111
00:06:34,760 --> 00:06:38,570
tried up to 50 or 60 megahertz and also

112
00:06:38,570 --> 00:06:41,210
the quad SPI that just worked

113
00:06:41,210 --> 00:06:44,360
and you enter programmer can say that

114
00:06:44,360 --> 00:06:45,800
the flash trip should be connected to

115
00:06:45,800 --> 00:06:49,220
the programmer so basically you can put

116
00:06:49,220 --> 00:06:51,470
the system in reset connect the flash

117
00:06:51,470 --> 00:06:53,449
chip to the programmer rewrite the

118
00:06:53,449 --> 00:06:56,270
contents of the flash trip then connect

119
00:06:56,270 --> 00:06:59,240
the flash chip back to the mainboard

120
00:06:59,240 --> 00:07:01,610
it's just toggling one GPIO pin at the

121
00:07:01,610 --> 00:07:05,150
programmer and then release the board

122
00:07:05,150 --> 00:07:08,780
from reset and you can execute the the

123
00:07:08,780 --> 00:07:09,620
newly flashed

124
00:07:09,620 --> 00:07:12,800
if you were image and see hopefully it

125
00:07:12,800 --> 00:07:18,350
boots you know and it's designed to be

126
00:07:18,350 --> 00:07:22,700
compatible with both 3.3 and 1.8 volts

127
00:07:22,700 --> 00:07:25,970
flashes the programmer however needs

128
00:07:25,970 --> 00:07:28,580
needs also to be able to support the

129
00:07:28,580 --> 00:07:31,270
different voltage because the

130
00:07:31,270 --> 00:07:34,270
multiplexer drive directly connects the

131
00:07:34,270 --> 00:07:36,970
Deadlands to either the board or the

132
00:07:36,970 --> 00:07:41,110
other programmer so the voltage level

133
00:07:41,110 --> 00:07:46,430
must be compatible and it uses two ideal

134
00:07:46,430 --> 00:07:50,750
diodes there are two things basically

135
00:07:50,750 --> 00:07:57,650
it's it's a AP channel MOSFET and so

136
00:07:57,650 --> 00:08:00,860
when when only the board is powered the

137
00:08:00,860 --> 00:08:03,080
flesh and the multiplexer get the power

138
00:08:03,080 --> 00:08:06,919
from the bar and when when the board is

139
00:08:06,919 --> 00:08:07,610
powered off

140
00:08:07,610 --> 00:08:09,500
but the programmer wants to power the

141
00:08:09,500 --> 00:08:12,650
flash the multiplexer and flash gets

142
00:08:12,650 --> 00:08:14,810
powered from the programmer but the

143
00:08:14,810 --> 00:08:17,270
current can flow back into the bar so

144
00:08:17,270 --> 00:08:22,570
that's you basically you know you can't

145
00:08:22,570 --> 00:08:25,849
accidentally inject some current in the

146
00:08:25,849 --> 00:08:28,460
voltage trails on the main board so you

147
00:08:28,460 --> 00:08:30,169
can't damage the caused damage to the

148
00:08:30,169 --> 00:08:33,919
main board pair yeah and lessons learned

149
00:08:33,919 --> 00:08:37,039
from the project try to avoid unused

150
00:08:37,039 --> 00:08:40,849
complexity because yeah it's for that

151
00:08:40,849 --> 00:08:46,209
use case just just a simple just six

152
00:08:46,209 --> 00:08:49,640
multiplexers to do 1 multiplexers more

153
00:08:49,640 --> 00:08:52,220
less sufficient then it's really

154
00:08:52,220 --> 00:08:53,750
important to optimize the hardware

155
00:08:53,750 --> 00:08:54,120
design

156
00:08:54,120 --> 00:08:57,360
manufacturability like you say is he

157
00:08:57,360 --> 00:09:00,360
here the board has only components on

158
00:09:00,360 --> 00:09:03,870
one side the first revision of the QSB

159
00:09:03,870 --> 00:09:09,120
imax without the two had the header to

160
00:09:09,120 --> 00:09:10,680
the main board on the bottom side and

161
00:09:10,680 --> 00:09:12,029
the header for the flash and the

162
00:09:12,029 --> 00:09:14,820
programmer on the top side and basically

163
00:09:14,820 --> 00:09:17,240
that was really hard to manufacture

164
00:09:17,240 --> 00:09:21,180
because when you when you put that

165
00:09:21,180 --> 00:09:24,260
through picking place machine and

166
00:09:24,260 --> 00:09:28,500
soldiering machine you can't really glue

167
00:09:28,500 --> 00:09:30,450
the parts on the bottom side to the

168
00:09:30,450 --> 00:09:33,420
board because they're well well they

169
00:09:33,420 --> 00:09:35,670
don't have that much that much area we

170
00:09:35,670 --> 00:09:40,190
can we could put put glue there and so

171
00:09:40,190 --> 00:09:43,020
it's and they're they're relatively

172
00:09:43,020 --> 00:09:46,800
heavy compared to the to the area where

173
00:09:46,800 --> 00:09:48,630
the connector is soldered on the board

174
00:09:48,630 --> 00:09:50,880
so basically the problem is when you put

175
00:09:50,880 --> 00:09:54,360
it to the who the soldering process the

176
00:09:54,360 --> 00:09:56,880
second time the parts on the bottom side

177
00:09:56,880 --> 00:10:01,170
are very likely to fall off so I had to

178
00:10:01,170 --> 00:10:04,709
do that redesign with just control with

179
00:10:04,709 --> 00:10:08,520
components and drug just one layer now

180
00:10:08,520 --> 00:10:10,740
and it's also quite quite useful to talk

181
00:10:10,740 --> 00:10:13,589
to your field application engineers from

182
00:10:13,589 --> 00:10:16,620
the companies making the parts because

183
00:10:16,620 --> 00:10:20,580
I'm using some really really nice 90

184
00:10:20,580 --> 00:10:24,260
degree angled connector there but it's

185
00:10:24,260 --> 00:10:27,110
it's half pitch

186
00:10:27,110 --> 00:10:32,250
0.05 inch pitch that was not that easy

187
00:10:32,250 --> 00:10:33,660
to cut basically there's one

188
00:10:33,660 --> 00:10:36,630
manufacturer making making those and

189
00:10:36,630 --> 00:10:38,850
also the connection to the programmer I

190
00:10:38,850 --> 00:10:44,029
wanted to use some connector they are

191
00:10:44,029 --> 00:10:46,529
this this style of connector with the

192
00:10:46,529 --> 00:10:48,330
ribbon cable but those ribbon cables are

193
00:10:48,330 --> 00:10:53,400
really expensive and sort of flimsy but

194
00:10:53,400 --> 00:10:57,540
so I went to the flat flex connector but

195
00:10:57,540 --> 00:11:01,350
cause I think third or with the

196
00:11:01,350 --> 00:11:04,020
connectors of the cable and also does

197
00:11:04,020 --> 00:11:06,090
the job

198
00:11:06,090 --> 00:11:09,810
so yeah that's the project is open

199
00:11:09,810 --> 00:11:13,380
source it's currently not not available

200
00:11:13,380 --> 00:11:16,410
to be bought but I want I won't want it

201
00:11:16,410 --> 00:11:20,730
to be sold and still do work on that Jo

202
00:11:20,730 --> 00:11:25,050
do any questions please queue up at the

203
00:11:25,050 --> 00:11:33,589
mics please take the mic

204
00:11:37,450 --> 00:11:39,970
I have a question you said you had to

205
00:11:39,970 --> 00:11:41,700
put the board on the reset while

206
00:11:41,700 --> 00:11:44,650
programming the flash does that require

207
00:11:44,650 --> 00:11:47,050
an additional wire that we didn't see on

208
00:11:47,050 --> 00:11:50,080
the photograph or is a reset wire on the

209
00:11:50,080 --> 00:11:51,490
flash chip that goes back to the main

210
00:11:51,490 --> 00:11:54,610
CPU or did I misunderstood something and

211
00:11:54,610 --> 00:11:56,620
oh no you you also need me to connect

212
00:11:56,620 --> 00:11:59,110
the reset of the main board but the

213
00:11:59,110 --> 00:12:02,530
board doesn't have to be in reset for

214
00:12:02,530 --> 00:12:04,630
the flesh to be programmed but when you

215
00:12:04,630 --> 00:12:05,890
connect the flash to the programmer you

216
00:12:05,890 --> 00:12:07,690
disconnect it from the main board and

217
00:12:07,690 --> 00:12:13,540
that also might cause some weird stuff

218
00:12:13,540 --> 00:12:17,050
happening I'm just wondering if you put

219
00:12:17,050 --> 00:12:18,310
the boat on the reason will with a

220
00:12:18,310 --> 00:12:21,400
separate wire don't you almost program

221
00:12:21,400 --> 00:12:23,440
it with a clip-on because under reason I

222
00:12:23,440 --> 00:12:25,030
would assume that the main CPU goes

223
00:12:25,030 --> 00:12:28,330
tri-state I see on the SPI wire so that

224
00:12:28,330 --> 00:12:30,220
your clip would not interfere with the

225
00:12:30,220 --> 00:12:33,280
main CPU and the flash would be powered

226
00:12:33,280 --> 00:12:35,850
from the main power supply on the board

227
00:12:35,850 --> 00:12:39,520
not not all all processes or system on

228
00:12:39,520 --> 00:12:43,420
chip put a put connection to the SPI

229
00:12:43,420 --> 00:12:46,690
flash in in high resistance mode with a

230
00:12:46,690 --> 00:12:49,540
auto reset ok had that issue I think

231
00:12:49,540 --> 00:12:54,480
with the network are it makes sense

232
00:13:02,490 --> 00:13:07,320
I feel it's just a quick question on the

233
00:13:07,320 --> 00:13:09,630
pricing for the bomb

234
00:13:09,630 --> 00:13:14,030
how much would cost to build yourself

235
00:13:14,030 --> 00:13:19,680
parts cost hard costs I think between

236
00:13:19,680 --> 00:13:21,930
ten and fifteen dollars for for the

237
00:13:21,930 --> 00:13:22,500
whole set

238
00:13:22,500 --> 00:13:28,410
but now the the PCP is basically here in

239
00:13:28,410 --> 00:13:33,540
its sum that well to see here basically

240
00:13:33,540 --> 00:13:37,310
you need some special process whereas

241
00:13:37,310 --> 00:13:40,950
copper at the edges of the board I have

242
00:13:40,950 --> 00:13:43,410
a few few samples with me so you can

243
00:13:43,410 --> 00:13:47,000
have a look at it later that has some

244
00:13:47,000 --> 00:13:50,700
initial setup cost basically once for

245
00:13:50,700 --> 00:13:54,500
for the whole set of ports and Shia

246
00:13:54,500 --> 00:13:57,750
support itself it's also the four layer

247
00:13:57,750 --> 00:14:01,890
board so it it gets cheap when you order

248
00:14:01,890 --> 00:14:04,380
like hundred or thousand from it but

249
00:14:04,380 --> 00:14:07,110
just for ten that's it's a bit more

250
00:14:07,110 --> 00:14:11,880
expensive because it's the max we

251
00:14:11,880 --> 00:14:13,890
couldn't use it to monitor this by bus

252
00:14:13,890 --> 00:14:18,900
at the same time didn't so is it because

253
00:14:18,900 --> 00:14:21,510
it marks we couldn't use it to monitor

254
00:14:21,510 --> 00:14:23,430
the traffic on the spy bus at the same

255
00:14:23,430 --> 00:14:28,440
time to monitor what's on the on the spy

256
00:14:28,440 --> 00:14:31,770
was no the basically on only the flesh

257
00:14:31,770 --> 00:14:33,870
it can be connected to either the board

258
00:14:33,870 --> 00:14:35,340
or the programmer but the programmer

259
00:14:35,340 --> 00:14:45,540
can't sniff what's on the bus but

260
00:14:45,540 --> 00:14:47,370
therefore this solution it's it's just

261
00:14:47,370 --> 00:14:50,310
one chip that's readily available so

262
00:14:50,310 --> 00:14:53,569
went that route

263
00:14:59,879 --> 00:15:02,019
all right I guess that's it thank you

264
00:15:02,019 --> 00:15:03,880
very much yeah thank you

265
00:15:03,880 --> 00:15:06,820
[Applause]

266
00:15:06,820 --> 00:15:14,530
[Music]

