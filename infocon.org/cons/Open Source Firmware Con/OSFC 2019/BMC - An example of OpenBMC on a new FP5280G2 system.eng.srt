1
00:00:03,190 --> 00:00:06,259
[Music]

2
00:00:07,130 --> 00:00:10,230
so the last speaker for today is late

3
00:00:10,230 --> 00:00:13,710
he is a engineer from IBM who helps

4
00:00:13,710 --> 00:00:16,590
other people were developing open BMC he

5
00:00:16,590 --> 00:00:19,410
also maintains a few repos in open BMC

6
00:00:19,410 --> 00:00:21,869
it'll be talking about a real example of

7
00:00:21,869 --> 00:00:26,070
porting open BMC thank you okay so I'm

8
00:00:26,070 --> 00:00:28,529
very proud to be here to introduce a

9
00:00:28,529 --> 00:00:31,320
real example of porting oven B&C to a

10
00:00:31,320 --> 00:00:34,790
new system so this work is done by

11
00:00:34,790 --> 00:00:38,489
Louisville oven being team at insa so

12
00:00:38,489 --> 00:00:41,940
basically I am helping the team to do

13
00:00:41,940 --> 00:00:48,809
this work so I am like I am own party

14
00:00:48,809 --> 00:00:52,289
from IBM so I maintain some oven BMC

15
00:00:52,289 --> 00:00:55,469
repos and I am product to say I write

16
00:00:55,469 --> 00:00:58,800
some test of testable code and the

17
00:00:58,800 --> 00:01:02,699
lowest is here as well he's a he manages

18
00:01:02,699 --> 00:01:06,360
the open BMC team at in spa so we have

19
00:01:06,360 --> 00:01:09,600
you have our contacts so in case if you

20
00:01:09,600 --> 00:01:14,580
have any question you can contact us in

21
00:01:14,580 --> 00:01:17,509
this presentation I will introduced an

22
00:01:17,509 --> 00:01:20,850
example of porting open BMC to a new

23
00:01:20,850 --> 00:01:26,009
system it's called FP 50 to 1882 system

24
00:01:26,009 --> 00:01:28,170
sorry about the modern name let's call

25
00:01:28,170 --> 00:01:34,110
it 2 pi is simple and so I will first I

26
00:01:34,110 --> 00:01:38,640
will introduce outcome of this work then

27
00:01:38,640 --> 00:01:43,560
we will go to detail of protein and its

28
00:01:43,560 --> 00:01:47,250
analyzer we I will share the Institute

29
00:01:47,250 --> 00:01:52,439
plan on oven BMC so the tuba system is

30
00:01:52,439 --> 00:01:59,130
an open port 9 system will st 2500 as a

31
00:01:59,130 --> 00:02:05,729
product a to the ami BMC and it has some

32
00:02:05,729 --> 00:02:08,788
special Ethernet it has a dedicated port

33
00:02:08,788 --> 00:02:11,160
for BMC and the Hedden since years I

34
00:02:11,160 --> 00:02:13,920
think where the sauce could be selected

35
00:02:13,920 --> 00:02:18,140
ITP ow it could be configured to use OCP

36
00:02:18,140 --> 00:02:22,680
network or use a PCIe network so on this

37
00:02:22,680 --> 00:02:26,100
system in fact aside to you Owen be

38
00:02:26,100 --> 00:02:32,459
empty on it let's see how it goes for

39
00:02:32,459 --> 00:02:37,200
the like maybe one or two months of work

40
00:02:37,200 --> 00:02:40,560
we have a full-featured open BMC with a

41
00:02:40,560 --> 00:02:45,810
brand new team so on open beams youngest

42
00:02:45,810 --> 00:02:47,670
team it can do the power and power off

43
00:02:47,670 --> 00:02:52,200
it had all the sensors on monopod it can

44
00:02:52,200 --> 00:02:54,959
do fan monitors and can control the

45
00:02:54,959 --> 00:03:00,810
fence it had four ipmi support and it

46
00:03:00,810 --> 00:03:04,200
also had the web UI app AVM the redfish

47
00:03:04,200 --> 00:03:08,640
audience each had already so you can see

48
00:03:08,640 --> 00:03:12,120
the task here on github we have

49
00:03:12,120 --> 00:03:15,330
completed all such final tasks so how do

50
00:03:15,330 --> 00:03:18,870
we do that we have a nice document at

51
00:03:18,870 --> 00:03:21,299
Alban BMC Talk

52
00:03:21,299 --> 00:03:23,880
it introduced the whole process of

53
00:03:23,880 --> 00:03:26,610
adding a new system you can check out

54
00:03:26,610 --> 00:03:33,299
the link there so so seem to do is add

55
00:03:33,299 --> 00:03:36,269
the configures for example you need to

56
00:03:36,269 --> 00:03:39,150
add a machine machine layer to build a

57
00:03:39,150 --> 00:03:41,489
new machine then you need to add the

58
00:03:41,489 --> 00:03:44,700
kernel device tree configure and then

59
00:03:44,700 --> 00:03:47,160
you need to maybe you need to add some

60
00:03:47,160 --> 00:03:49,799
Jason configured or mo configures for

61
00:03:49,799 --> 00:03:53,400
Palm off for census event for TP elves

62
00:03:53,400 --> 00:03:59,040
for ipmi and for VPD and luckily at an

63
00:03:59,040 --> 00:04:00,989
own BMC product we also get some

64
00:04:00,989 --> 00:04:03,570
features for free which are web UI

65
00:04:03,570 --> 00:04:07,140
Octavian karela fish that OCC and the

66
00:04:07,140 --> 00:04:12,870
event logging that's cool and all of the

67
00:04:12,870 --> 00:04:17,970
commits are these so all like 24 commits

68
00:04:17,970 --> 00:04:21,120
we have an for function open beams in

69
00:04:21,120 --> 00:04:25,680
our new system so let's go to the

70
00:04:25,680 --> 00:04:27,930
details the first

71
00:04:27,930 --> 00:04:30,750
step is to add a machine layer so we

72
00:04:30,750 --> 00:04:34,050
create a method to buy a layer we added

73
00:04:34,050 --> 00:04:40,860
a configures we the configure the

74
00:04:40,860 --> 00:04:43,830
configures we are specifying the machine

75
00:04:43,830 --> 00:04:47,580
so the kannada vestry and prefer the

76
00:04:47,580 --> 00:04:51,330
providers are like some IPMI configures

77
00:04:51,330 --> 00:04:53,789
and some other configures so this is

78
00:04:53,789 --> 00:05:01,560
simple next step here some in kernel we

79
00:05:01,560 --> 00:05:05,639
need to have a collectivist tree and add

80
00:05:05,639 --> 00:05:08,100
a kernel configures so for the device

81
00:05:08,100 --> 00:05:13,350
tree interest and the whole territory to

82
00:05:13,350 --> 00:05:15,780
the upstream and a Joey help to merge

83
00:05:15,780 --> 00:05:20,130
the device fee that's cool because when

84
00:05:20,130 --> 00:05:24,120
some someone new to kernel government it

85
00:05:24,120 --> 00:05:26,820
is kind of hard for them to do

86
00:05:26,820 --> 00:05:30,389
contribution to the upstream so Joey

87
00:05:30,389 --> 00:05:33,360
helps a lot then the kernel configures

88
00:05:33,360 --> 00:05:36,780
this configured mainly defines add some

89
00:05:36,780 --> 00:05:40,320
new configures for based on the default

90
00:05:40,320 --> 00:05:45,120
open bmd config especially for the

91
00:05:45,120 --> 00:05:47,880
sensor configures like here we have

92
00:05:47,880 --> 00:05:52,680
readiness for two sensors the configure

93
00:05:52,680 --> 00:05:57,900
and RTC driver and GPIO driver so this

94
00:05:57,900 --> 00:06:01,050
is specially to the two by machine we

95
00:06:01,050 --> 00:06:03,419
have to add some new config for to

96
00:06:03,419 --> 00:06:10,199
connote then we have power on power off

97
00:06:10,199 --> 00:06:12,780
configures so this is the Jason

98
00:06:12,780 --> 00:06:17,250
configure we need to define some details

99
00:06:17,250 --> 00:06:20,159
that can be toggled for power and power

100
00:06:20,159 --> 00:06:23,520
off in this example the two by machine

101
00:06:23,520 --> 00:06:27,810
uses a GPIO user actually it is the to

102
00:06:27,810 --> 00:06:32,970
chip out during power so when you can

103
00:06:32,970 --> 00:06:37,380
see this poverty thank you for music if

104
00:06:37,380 --> 00:06:39,810
you want to power you need to toggle the

105
00:06:39,810 --> 00:06:42,020
tips out to

106
00:06:42,020 --> 00:06:45,930
and there's another teacher for the CPR

107
00:06:45,930 --> 00:06:49,800
tease so severely to tell the BMC the

108
00:06:49,800 --> 00:06:52,110
power yell okay so if that's in another

109
00:06:52,110 --> 00:06:56,969
teacher so with only with the simple

110
00:06:56,969 --> 00:07:00,569
definition we got the feature of system

111
00:07:00,569 --> 00:07:07,530
power and off and next is the hard part

112
00:07:07,530 --> 00:07:12,330
for all the senses so our open power

113
00:07:12,330 --> 00:07:15,020
system we use forcefully monitor a

114
00:07:15,020 --> 00:07:21,389
report to manage the sensors and so all

115
00:07:21,389 --> 00:07:25,530
these sensors are defined in cognitive a

116
00:07:25,530 --> 00:07:30,000
street so when Colonel runs these

117
00:07:30,000 --> 00:07:34,169
sensors are created in the 60s and

118
00:07:34,169 --> 00:07:38,250
hardware monitor subsystem so we only

119
00:07:38,250 --> 00:07:41,789
needed to define the configures and open

120
00:07:41,789 --> 00:07:44,789
BMP we are automatically started a

121
00:07:44,789 --> 00:07:47,789
foster Hardiman motor process the demon

122
00:07:47,789 --> 00:07:52,409
to read the heart monitor CFS attributes

123
00:07:52,409 --> 00:07:55,860
and a person created t pass operates for

124
00:07:55,860 --> 00:08:01,440
them let's see some examples if you want

125
00:08:01,440 --> 00:08:09,449
to define a fan we know oh I forgot to

126
00:08:09,449 --> 00:08:13,020
mention that all these paths related to

127
00:08:13,020 --> 00:08:18,180
the chronology were three so for example

128
00:08:18,180 --> 00:08:21,240
if we are going to you can find a fan

129
00:08:21,240 --> 00:08:28,199
control that is the kernel events free

130
00:08:28,199 --> 00:08:32,789
pass without the comes so Coonan went

131
00:08:32,789 --> 00:08:33,599
Kostas

132
00:08:33,599 --> 00:08:38,190
this Soviets know which which folder to

133
00:08:38,190 --> 00:08:42,269
read the sensors and we can just define

134
00:08:42,269 --> 00:08:46,260
the fan like a fan one fan to it will

135
00:08:46,260 --> 00:08:50,940
create two fans with with the configure

136
00:08:50,940 --> 00:08:54,430
and the padam a pwm target fan

137
00:08:54,430 --> 00:08:58,180
says this fan usually use the pede pede

138
00:08:58,180 --> 00:09:00,579
element and the target instead of the

139
00:09:00,579 --> 00:09:07,449
speed so if you if fan controller wants

140
00:09:07,449 --> 00:09:08,920
to set the fan speed

141
00:09:08,920 --> 00:09:11,949
it's just assess PWM instead of the same

142
00:09:11,949 --> 00:09:15,879
speed attribute the next example will

143
00:09:15,879 --> 00:09:19,740
pass by so you just need to define the

144
00:09:19,740 --> 00:09:25,470
label in went to our power went to with

145
00:09:25,470 --> 00:09:29,470
with the names that have a monitor

146
00:09:29,470 --> 00:09:31,810
service we have created the cheapest

147
00:09:31,810 --> 00:09:35,889
objects for you to present the past

148
00:09:35,889 --> 00:09:39,730
prior current and voltage are on the

149
00:09:39,730 --> 00:09:43,750
power and we have the activity battery

150
00:09:43,750 --> 00:09:47,050
of wattage now this is a bit special

151
00:09:47,050 --> 00:09:51,189
because you see the other label in which

152
00:09:51,189 --> 00:09:54,040
requires that the bus operates then we

153
00:09:54,040 --> 00:09:56,680
have gain we have GPIO chip and we have

154
00:09:56,680 --> 00:09:59,290
DPL and then we have interval this will

155
00:09:59,290 --> 00:10:02,470
be called to read the battery we need to

156
00:10:02,470 --> 00:10:06,209
follow the tip Chow to read the actual

157
00:10:06,209 --> 00:10:10,360
voltage otherwise we always read a 0 so

158
00:10:10,360 --> 00:10:12,699
the GPL can think about telling the

159
00:10:12,699 --> 00:10:16,149
harmonic Soviets to toggle the GPL

160
00:10:16,149 --> 00:10:20,050
before reading the value and the paying

161
00:10:20,050 --> 00:10:24,309
to get the actual wattage from the

162
00:10:24,309 --> 00:10:27,490
sensor reading so intro specifies that

163
00:10:27,490 --> 00:10:30,129
you just obvious only needed to read

164
00:10:30,129 --> 00:10:34,720
this sensor at a otherwise if you read

165
00:10:34,720 --> 00:10:38,199
the material secondly it can consume the

166
00:10:38,199 --> 00:10:40,839
battery so it's draining the battery

167
00:10:40,839 --> 00:10:44,740
that's just bad then we have temperature

168
00:10:44,740 --> 00:10:48,730
sensors for we have an inlet temperature

169
00:10:48,730 --> 00:10:52,120
with the warning high temperature with

170
00:10:52,120 --> 00:10:56,110
40 degrees and we have an the critical

171
00:10:56,110 --> 00:11:00,600
high temperature for the 2 degrees so

172
00:11:00,600 --> 00:11:05,290
when this unit temperature goes up to 40

173
00:11:05,290 --> 00:11:07,720
we will see the

174
00:11:07,720 --> 00:11:11,350
so the warning signal from the deepest

175
00:11:11,350 --> 00:11:14,319
and when it goes up to the 42 we got a

176
00:11:14,319 --> 00:11:18,519
critical signal from the d-backs this is

177
00:11:18,519 --> 00:11:22,600
a hollow moon config so when that

178
00:11:22,600 --> 00:11:24,850
configured it down we can check the

179
00:11:24,850 --> 00:11:29,610
sensor from the bus and also a REST API

180
00:11:29,610 --> 00:11:33,339
for them how we have a fan with the

181
00:11:33,339 --> 00:11:40,509
value is like it's under 70 that is the

182
00:11:40,509 --> 00:11:48,310
fan speed and we have a PSU with the 235

183
00:11:48,310 --> 00:11:49,060
thoughts

184
00:11:49,060 --> 00:11:53,040
that's a PSU input voltage and we have

185
00:11:53,040 --> 00:11:57,040
our TC battery voltage which has three

186
00:11:57,040 --> 00:11:59,439
votes and we have an in-depth

187
00:11:59,439 --> 00:12:02,259
temperature which are like about 27

188
00:12:02,259 --> 00:12:08,860
degrees that's cool then we need to

189
00:12:08,860 --> 00:12:13,809
define some other things like fans fan

190
00:12:13,809 --> 00:12:17,529
configures are a bit complicated because

191
00:12:17,529 --> 00:12:20,860
we have same present check and fan

192
00:12:20,860 --> 00:12:24,269
monitor checks so here you'll FM present

193
00:12:24,269 --> 00:12:28,059
we need to provide the configure

194
00:12:28,059 --> 00:12:33,189
before the fan product so here we define

195
00:12:33,189 --> 00:12:36,819
a fan fan zero which it should be

196
00:12:36,819 --> 00:12:41,350
checked by a GPO the GPL input in read

197
00:12:41,350 --> 00:12:44,589
from that physical parts and it seem you

198
00:12:44,589 --> 00:12:47,800
getting input by the kernel and when the

199
00:12:47,800 --> 00:12:51,850
tutorial is pressed it means that this

200
00:12:51,850 --> 00:12:54,699
fan is present under them when the chips

201
00:12:54,699 --> 00:12:58,569
are in impress the colonel knows it's a

202
00:12:58,569 --> 00:12:58,930
failure

203
00:12:58,930 --> 00:13:03,750
clunk so just the CMO configure we are

204
00:13:03,750 --> 00:13:07,300
the tariff also a fan present service to

205
00:13:07,300 --> 00:13:11,790
determine if that Fenian present or not

206
00:13:13,470 --> 00:13:17,500
and then monitor the monitor to monitor

207
00:13:17,500 --> 00:13:20,499
if the fan speed are you reading

208
00:13:20,499 --> 00:13:23,829
the expected range so we need to specify

209
00:13:23,829 --> 00:13:30,459
some attributes like the the if your

210
00:13:30,459 --> 00:13:33,729
friend had a package so if my friend had

211
00:13:33,729 --> 00:13:36,339
no target the Soviets were just that you

212
00:13:36,339 --> 00:13:39,759
can always fan speed and if it's true so

213
00:13:39,759 --> 00:13:44,079
the most obvious we are calculate based

214
00:13:44,079 --> 00:13:51,329
on this so if we set a PWM to 100 and it

215
00:13:51,329 --> 00:13:54,609
expected a speed will be the P Double M

216
00:13:54,609 --> 00:13:58,419
multiplied with the factor H field under

217
00:13:58,419 --> 00:14:02,109
plus the offset attribute will and that

218
00:14:02,109 --> 00:14:06,549
is a is expected at fan speed and we

219
00:14:06,549 --> 00:14:09,399
have a deviation so if the speed goes up

220
00:14:09,399 --> 00:14:10,089
a little

221
00:14:10,089 --> 00:14:13,029
that's okay but it goes up on low too

222
00:14:13,029 --> 00:14:18,849
much we treat the defense functional and

223
00:14:18,849 --> 00:14:22,749
we have same control fan control has

224
00:14:22,749 --> 00:14:26,229
three mo configures the first one to

225
00:14:26,229 --> 00:14:31,629
define or detect if system use air

226
00:14:31,629 --> 00:14:34,720
cooling on the water cooling for two by

227
00:14:34,720 --> 00:14:38,319
system is just it's easy it's always use

228
00:14:38,319 --> 00:14:42,849
a fan cooling so on this config we just

229
00:14:42,849 --> 00:14:47,649
define to check if the machine in the

230
00:14:47,649 --> 00:14:50,649
water code and when it's false it means

231
00:14:50,649 --> 00:14:54,220
it's the fan code the next day's end

232
00:14:54,220 --> 00:14:56,979
zone config this is also simple because

233
00:14:56,979 --> 00:15:00,189
the two by system only had a one fan

234
00:15:00,189 --> 00:15:05,229
zone which is on 0 and in this configure

235
00:15:05,229 --> 00:15:08,889
it's defined the for speed PWM value and

236
00:15:08,889 --> 00:15:12,129
the default flow so and the increase

237
00:15:12,129 --> 00:15:14,729
dividing and the decrease in tois so in

238
00:15:14,729 --> 00:15:19,059
the fourth case when the system is

239
00:15:19,059 --> 00:15:22,089
powered on it will kill the for speed

240
00:15:22,089 --> 00:15:27,279
and when there are no other events it we

241
00:15:27,279 --> 00:15:30,869
are using default flow so it will

242
00:15:30,869 --> 00:15:35,070
decrease the fan speed to feed

243
00:15:35,070 --> 00:15:41,850
195 under the last earth in configure in

244
00:15:42,060 --> 00:15:45,940
kind of very complicated mo config which

245
00:15:45,940 --> 00:15:50,770
define oh that's in next week as the

246
00:15:50,770 --> 00:15:53,200
next line of the fan control I just had

247
00:15:53,200 --> 00:15:55,510
to find which friend to control and

248
00:15:55,510 --> 00:15:59,410
which target to use here we defined the

249
00:15:59,410 --> 00:16:02,620
fan 0 which is cooling zone and arrow

250
00:16:02,620 --> 00:16:06,000
and a sensor in the fan 0 the target in

251
00:16:06,000 --> 00:16:09,730
phanpy mm so in other systems like we

252
00:16:09,730 --> 00:16:12,610
spoon it will use a fan speed and the

253
00:16:12,610 --> 00:16:15,130
target in face butter to buy you the a

254
00:16:15,130 --> 00:16:18,220
speed a fan driver so it is a fan

255
00:16:18,220 --> 00:16:22,360
petorian x1 is very complicated to one

256
00:16:22,360 --> 00:16:25,810
it defined all the events in which in

257
00:16:25,810 --> 00:16:27,640
which case the fans Peter should it be

258
00:16:27,640 --> 00:16:31,930
at adjuster by hot so I have two example

259
00:16:31,930 --> 00:16:36,850
here the first one is to set to increase

260
00:16:36,850 --> 00:16:41,710
the speed based on the zone cost so if

261
00:16:41,710 --> 00:16:45,760
the CPU core value if if the CPU core

262
00:16:45,760 --> 00:16:54,220
temperature is above 73 and the fan the

263
00:16:54,220 --> 00:16:54,790
fan

264
00:16:54,790 --> 00:16:57,790
Peter him to the be increased by as a

265
00:16:57,790 --> 00:17:01,740
delta value which is 11 and it will

266
00:17:01,740 --> 00:17:06,579
increase the Peter and every every one

267
00:17:06,579 --> 00:17:08,670
second

268
00:17:08,670 --> 00:17:12,089
so right so configure in the right you

269
00:17:12,089 --> 00:17:15,010
configure to decrease the speed so when

270
00:17:15,010 --> 00:17:19,990
the CPU cause some you below 70 degrees

271
00:17:19,990 --> 00:17:24,400
it will decrease the predominant by 11

272
00:17:24,400 --> 00:17:29,400
every one second so this is an example

273
00:17:29,400 --> 00:17:32,770
this whole llamó configure kind of a

274
00:17:32,770 --> 00:17:35,740
large because it will define other cases

275
00:17:35,740 --> 00:17:39,850
like dim temperature and maybe or urban

276
00:17:39,850 --> 00:17:42,430
park system you to also handle the OCC

277
00:17:42,430 --> 00:17:44,850
events

278
00:17:46,179 --> 00:17:49,179
question

279
00:17:50,990 --> 00:17:57,679
you mean the the the interval is defined

280
00:17:57,679 --> 00:18:00,230
in an odd part which is not English

281
00:18:00,230 --> 00:18:02,809
Olimpo the fact let me think like

282
00:18:02,809 --> 00:18:05,630
millisecond how how often to Chris the

283
00:18:05,630 --> 00:18:14,720
PWM maybe just yeah I mean here is to

284
00:18:14,720 --> 00:18:17,570
the protein because the property in

285
00:18:17,570 --> 00:18:24,080
seven donee solving it we need to divide

286
00:18:24,080 --> 00:18:28,340
the factor to get the 70 degrees but the

287
00:18:28,340 --> 00:18:31,990
info is not shown here which is defined

288
00:18:31,990 --> 00:18:35,630
in this CMO but not in this diagram

289
00:18:35,630 --> 00:18:37,390
sorry for that

290
00:18:37,390 --> 00:18:41,090
so the internal may be Brad we know to

291
00:18:41,090 --> 00:18:43,280
remember the interval of our fan speed

292
00:18:43,280 --> 00:18:43,940
control

293
00:18:43,940 --> 00:18:48,169
I guess it's when you see increase

294
00:18:48,169 --> 00:18:51,620
between increase every one second and

295
00:18:51,620 --> 00:18:53,960
the way is decrease it occurs every

296
00:18:53,960 --> 00:18:56,659
three seconds that's my remember I'm not

297
00:18:56,659 --> 00:19:00,890
sure yeah it's configured during this

298
00:19:00,890 --> 00:19:09,289
demo so when all we have all the fan

299
00:19:09,289 --> 00:19:13,659
mo configures down we can see the fan

300
00:19:13,659 --> 00:19:17,690
will have value property which is a fan

301
00:19:17,690 --> 00:19:21,470
speed under the target the property

302
00:19:21,470 --> 00:19:25,309
which is fan PWM target so if we

303
00:19:25,309 --> 00:19:31,120
manually change the fan PWM target to

304
00:19:31,120 --> 00:19:37,929
110 eight from 250 55 as a fan speed is

305
00:19:37,929 --> 00:19:45,470
decreased about a half justice and demo

306
00:19:45,470 --> 00:19:48,350
of the menu setting of ten feed our

307
00:19:48,350 --> 00:19:53,929
butter in ingria in reality this target

308
00:19:53,929 --> 00:19:56,540
is set based on the llamo we defined

309
00:19:56,540 --> 00:19:59,139
previously

310
00:19:59,890 --> 00:20:04,100
so the next one GPL for open power

311
00:20:04,100 --> 00:20:07,520
system we always have a GPIO from the

312
00:20:07,520 --> 00:20:10,580
host CPU to be MC to tell that the

313
00:20:10,580 --> 00:20:14,150
hostess has problem it means check stop

314
00:20:14,150 --> 00:20:17,750
so this committee is very simple

315
00:20:17,750 --> 00:20:21,860
it'll just use the GPIO key event and

316
00:20:21,860 --> 00:20:27,110
with the P as the GPIO value so when

317
00:20:27,110 --> 00:20:32,500
this key will pressed open BMC should

318
00:20:32,500 --> 00:20:36,040
start a new system D target which will

319
00:20:36,040 --> 00:20:47,180
open BMG host crash ok so next one up

320
00:20:47,180 --> 00:20:53,960
here my configures the IPM I have a lot

321
00:20:53,960 --> 00:20:59,590
of config files so I divided into three

322
00:20:59,590 --> 00:21:03,410
recipes so first one is the first ipmi

323
00:21:03,410 --> 00:21:07,240
host which defined IPMI sensors and

324
00:21:07,240 --> 00:21:12,290
inventories and the cruise the next line

325
00:21:12,290 --> 00:21:18,260
in phosphor a PMF rule that this it

326
00:21:18,260 --> 00:21:20,450
contains the fruit and extra properties

327
00:21:20,450 --> 00:21:26,750
so this this just configure defined

328
00:21:26,750 --> 00:21:30,890
through IP to the inventories and we

329
00:21:30,890 --> 00:21:33,470
have the IBM odium which had four even

330
00:21:33,470 --> 00:21:36,170
trace this is kind of complicated let's

331
00:21:36,170 --> 00:21:40,160
see the examples first one if we want to

332
00:21:40,160 --> 00:21:43,270
define an IP n my sensor which Maps the

333
00:21:43,270 --> 00:21:49,130
deepest object to IPMI we need to have a

334
00:21:49,130 --> 00:21:52,940
society which is defined predefined

335
00:21:52,940 --> 00:21:57,590
between the PMT and host then we need to

336
00:21:57,590 --> 00:22:00,770
define the interface and the deepest

337
00:22:00,770 --> 00:22:05,870
operate path so in this example we map

338
00:22:05,870 --> 00:22:08,330
the tea box object which will be there

339
00:22:08,330 --> 00:22:11,900
or cordero temperature to IP my sense ID

340
00:22:11,900 --> 00:22:13,200
91

341
00:22:13,200 --> 00:22:19,260
eating the temperature sensor so we will

342
00:22:19,260 --> 00:22:21,780
have a lot of such kind of configured to

343
00:22:21,780 --> 00:22:27,530
map all the deepest senses to like humor

344
00:22:27,920 --> 00:22:32,160
so when you example if you use IPM a

345
00:22:32,160 --> 00:22:34,860
tool to check the sensor list we see the

346
00:22:34,860 --> 00:22:38,670
team temperature the severe core

347
00:22:38,670 --> 00:22:41,250
temperature the unit temperature big

348
00:22:41,250 --> 00:22:47,940
sector then you see the crew config the

349
00:22:47,940 --> 00:22:50,100
first one is the same it's a through ID

350
00:22:50,100 --> 00:22:52,950
and you see the the deepest object path

351
00:22:52,950 --> 00:22:57,410
oh where the d-backs computers oh yeah

352
00:22:57,410 --> 00:22:58,860
sorry father

353
00:22:58,860 --> 00:23:02,970
so this defined through it should have

354
00:23:02,970 --> 00:23:07,080
stuck it to the implement interfaces so

355
00:23:07,080 --> 00:23:10,230
when you use IPM I to check off rule you

356
00:23:10,230 --> 00:23:14,090
see for example the cpu will have

357
00:23:14,090 --> 00:23:18,270
manufacture date the production name and

358
00:23:18,270 --> 00:23:21,690
the theory and in the past number and if

359
00:23:21,690 --> 00:23:24,170
we said team i it should have

360
00:23:24,170 --> 00:23:32,040
manufacture the name the serial then we

361
00:23:32,040 --> 00:23:36,660
need to specify the inventories that is

362
00:23:36,660 --> 00:23:40,020
kind of think of because we Justin the

363
00:23:40,020 --> 00:23:44,360
main part in the EBUS object pass oh

364
00:23:45,980 --> 00:23:54,000
sorry yeah subpar useful a PMI I am NOT

365
00:23:54,000 --> 00:23:56,550
very familiar with that if you have a

366
00:23:56,550 --> 00:23:58,560
question you can send too many missed or

367
00:23:58,560 --> 00:24:02,610
you can contact Tom and get back there

368
00:24:02,610 --> 00:24:05,850
are more way more familiar than me so

369
00:24:05,850 --> 00:24:08,880
the next one is a PD layout and

370
00:24:08,880 --> 00:24:11,210
[Music]

371
00:24:11,210 --> 00:24:13,740
typically on an open power system the

372
00:24:13,740 --> 00:24:16,890
BMC will have a VP D to store some

373
00:24:16,890 --> 00:24:20,910
information for example the PMC's model

374
00:24:20,910 --> 00:24:26,789
the PMC's MAC address etc onto by system

375
00:24:26,789 --> 00:24:32,489
yet I do use the BMC it's defined a PMC

376
00:24:32,489 --> 00:24:34,859
the serial number the manufacturer and

377
00:24:34,859 --> 00:24:39,299
it has defined the PMC isn't it Mac

378
00:24:39,299 --> 00:24:43,579
dress so what we need to do is define

379
00:24:43,579 --> 00:24:50,219
took two configures one is we wanted

380
00:24:50,219 --> 00:24:54,149
which kind of debug objects we should

381
00:24:54,149 --> 00:25:05,219
create and what what kind of the true

382
00:25:05,219 --> 00:25:09,809
yes PNG and Ethernet so when it's the

383
00:25:09,809 --> 00:25:13,759
real the PMC it should the reader the

384
00:25:13,759 --> 00:25:15,929
part number the serial number the

385
00:25:15,929 --> 00:25:19,440
manufacturer from DVDs keywords at the

386
00:25:19,440 --> 00:25:23,429
previous and VN and of etc for item it

387
00:25:23,429 --> 00:25:29,269
should have read the VPD idea and when

388
00:25:29,269 --> 00:25:33,809
when the where the color starts it will

389
00:25:33,809 --> 00:25:37,139
detect the EEPROM the VPD EEPROM

390
00:25:37,139 --> 00:25:42,479
separated by a comma it had to yes yeah

391
00:25:42,479 --> 00:25:52,429
and not the pass is the change the

392
00:25:52,429 --> 00:25:57,749
object passing antipas in inventory so

393
00:25:57,749 --> 00:26:01,409
when kono starts and it gets EEPROM it

394
00:26:01,409 --> 00:26:04,169
it will start and service to call

395
00:26:04,169 --> 00:26:08,759
inventory to create the DMZ and the

396
00:26:08,759 --> 00:26:12,029
ethernet objects on the deepest and it

397
00:26:12,029 --> 00:26:16,229
will read the contents from EEPROM you

398
00:26:16,229 --> 00:26:20,339
can employ that when when the deepest

399
00:26:20,339 --> 00:26:22,889
operators are created if we send a REST

400
00:26:22,889 --> 00:26:28,169
API because data like the PMC will have

401
00:26:28,169 --> 00:26:31,979
built date the manufacture the model etc

402
00:26:31,979 --> 00:26:34,409
and therefore for the internet it will

403
00:26:34,409 --> 00:26:40,129
had a MAC address with real MAC address

404
00:26:42,110 --> 00:26:46,140
then let's talk about some feature that

405
00:26:46,140 --> 00:26:50,400
we got for free from Olin BMC for the

406
00:26:50,400 --> 00:26:53,610
patent metal area it just needed to add

407
00:26:53,610 --> 00:26:58,559
a bit like recipes to the image packages

408
00:26:58,559 --> 00:27:01,350
then we will get a feature like Weber

409
00:27:01,350 --> 00:27:05,340
you are the KVM the redfish the OCC and

410
00:27:05,340 --> 00:27:09,740
even the logins so this is an example of

411
00:27:09,740 --> 00:27:14,640
the badge system Oh web UI you can see

412
00:27:14,640 --> 00:27:17,280
all these functions are ready and we

413
00:27:17,280 --> 00:27:20,790
cotton KVM the system already put it

414
00:27:20,790 --> 00:27:30,300
into the paddock boot so in fur we are

415
00:27:30,300 --> 00:27:34,200
to some more work on oven PMG the first

416
00:27:34,200 --> 00:27:37,970
one is switching in CSI sauce which I

417
00:27:37,970 --> 00:27:41,670
mentioned before that the NCS I could

418
00:27:41,670 --> 00:27:44,880
use the OCP network or use the PC

419
00:27:44,880 --> 00:27:47,790
network card it is configured by OTP L

420
00:27:47,790 --> 00:27:51,510
so currently oven BMG does not have this

421
00:27:51,510 --> 00:27:54,630
feature and I think some other system

422
00:27:54,630 --> 00:27:58,230
may have this same design on hardware so

423
00:27:58,230 --> 00:28:01,530
if this feature you completed it could

424
00:28:01,530 --> 00:28:05,210
be navigate to other systems next one

425
00:28:05,210 --> 00:28:07,770
obviously working on your PSU firmware

426
00:28:07,770 --> 00:28:11,910
update we are working on this we have

427
00:28:11,910 --> 00:28:14,550
some progress and we need to continue

428
00:28:14,550 --> 00:28:18,120
working on that then obvious or also

429
00:28:18,120 --> 00:28:21,750
interested in working tasks long PR DM

430
00:28:21,750 --> 00:28:24,480
and the I am and which they are doing

431
00:28:24,480 --> 00:28:27,980
now that's correct

432
00:28:27,980 --> 00:28:32,550
so that's all from my talk so any

433
00:28:32,550 --> 00:28:35,000
questions

434
00:28:43,710 --> 00:28:45,600
what was the toughest part of the

435
00:28:45,600 --> 00:28:48,360
porting yeah sorry what was the toughest

436
00:28:48,360 --> 00:28:49,920
part the hardest part of the porting

437
00:28:49,920 --> 00:28:54,060
yeah I I guess it should be the

438
00:28:54,060 --> 00:28:56,250
ipmi configs because it's kind of

439
00:28:56,250 --> 00:29:00,330
complicated and I you tell me we needed

440
00:29:00,330 --> 00:29:03,720
to have five different configures and so

441
00:29:03,720 --> 00:29:06,570
luckily the since I did are the same as

442
00:29:06,570 --> 00:29:08,910
Romulus so we can copy the Romulus once

443
00:29:08,910 --> 00:29:13,350
but if we some fresh new system so IPMI

444
00:29:13,350 --> 00:29:15,750
mo configure should be the hardest part

445
00:29:15,750 --> 00:29:19,650
in my attacking and how long did the

446
00:29:19,650 --> 00:29:26,520
poor take yeah I think the whole let's

447
00:29:26,520 --> 00:29:30,200
check the gate coming

448
00:29:42,320 --> 00:29:45,650
it's like two months including all these

449
00:29:45,650 --> 00:29:49,309
commits but some efforts are for

450
00:29:49,309 --> 00:29:54,169
studying because it's a new team how

451
00:29:54,169 --> 00:29:58,330
many people maybe Luis you can share

452
00:30:03,190 --> 00:30:23,570
about yeah I Pia mater is lucky we have

453
00:30:23,570 --> 00:30:31,940
dramas to copy yeah so if you actually

454
00:30:31,940 --> 00:30:36,470
about that I have some scripts to

455
00:30:36,470 --> 00:30:41,600
generate IPM IMO config based on another

456
00:30:41,600 --> 00:30:44,870
kind another in oven being in oven power

457
00:30:44,870 --> 00:30:48,770
is generated from a Malibu which is a

458
00:30:48,770 --> 00:30:52,370
machine workbook to report Wow we should

459
00:30:52,370 --> 00:30:57,380
define a list of other IPMI sensors so I

460
00:30:57,380 --> 00:31:00,740
have a utility to convert letter

461
00:31:00,740 --> 00:31:05,780
reporter 2 the y mo configure whether

462
00:31:05,780 --> 00:31:08,559
that you do not many they speak on its

463
00:31:08,559 --> 00:31:12,970
yeah if you are in today we can tolerate

464
00:31:14,470 --> 00:31:18,559
[Applause]

465
00:31:19,850 --> 00:31:21,440
[Music]

466
00:31:21,440 --> 00:31:23,500
you

