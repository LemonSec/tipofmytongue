1
00:00:00,000 --> 00:00:11,099
oh good morning everyone and welcome to

2
00:00:11,099 --> 00:00:13,639
the open source film a conference 2019

3
00:00:13,639 --> 00:00:15,900
I'm Philip I'm the founder of the

4
00:00:15,900 --> 00:00:18,090
conference so probably have seen me

5
00:00:18,090 --> 00:00:19,619
before

6
00:00:19,619 --> 00:00:22,140
yeah first of all I want to thank our

7
00:00:22,140 --> 00:00:24,900
sponsors and especially the co-organizer

8
00:00:24,900 --> 00:00:28,349
David Hendricks from Facebook and Chris

9
00:00:28,349 --> 00:00:31,080
Carr from Google for helping us to

10
00:00:31,080 --> 00:00:32,668
realize the conference in the Silicon

11
00:00:32,668 --> 00:00:34,500
Valley because without them it wouldn't

12
00:00:34,500 --> 00:00:36,870
haven't worked out so that's really good

13
00:00:36,870 --> 00:00:45,510
thank you big applause for them so this

14
00:00:45,510 --> 00:00:47,640
year is a special year because we have

15
00:00:47,640 --> 00:00:49,170
the 20th anniversary of

16
00:00:49,170 --> 00:00:51,090
coreboot and you would open source

17
00:00:51,090 --> 00:00:53,820
VMware and so let me introduce you to

18
00:00:53,820 --> 00:00:54,600
Ron Minich

19
00:00:54,600 --> 00:00:57,930
giving giving the keynote and yeah enjoy

20
00:00:57,930 --> 00:01:00,600
the conference have fun and probably can

21
00:01:00,600 --> 00:01:04,699
shatter meat so have a nice day

22
00:01:08,930 --> 00:01:14,220
no I guess I'm worried yeah yes if

23
00:01:14,220 --> 00:01:15,960
anyone hears from organized crime don't

24
00:01:15,960 --> 00:01:20,790
kill me but I am wired so this is talk I

25
00:01:20,790 --> 00:01:22,110
wanted to give about the 20th

26
00:01:22,110 --> 00:01:24,270
anniversary because 20 years goes faster

27
00:01:24,270 --> 00:01:26,159
than you'd imagine and there's some

28
00:01:26,159 --> 00:01:27,600
interesting perspective about this

29
00:01:27,600 --> 00:01:29,250
project and I think part of it is this

30
00:01:29,250 --> 00:01:33,210
it's not a project destined for success

31
00:01:33,210 --> 00:01:34,770
in fact this project basically almost

32
00:01:34,770 --> 00:01:37,020
died 10 years ago so that part is

33
00:01:37,020 --> 00:01:39,299
interesting I've been accumulating bits

34
00:01:39,299 --> 00:01:42,030
and pieces of slides and stuff starting

35
00:01:42,030 --> 00:01:43,619
about six months ago found some stuff

36
00:01:43,619 --> 00:01:45,780
that I'd forgotten about David just

37
00:01:45,780 --> 00:01:47,040
reminded me some other stuff I'd

38
00:01:47,040 --> 00:01:49,170
forgotten about like the you know almost

39
00:01:49,170 --> 00:01:51,180
fake intern death we did at Los Alamos

40
00:01:51,180 --> 00:01:53,579
but I didn't find that picture so we can

41
00:01:53,579 --> 00:01:55,350
talk about that one later

42
00:01:55,350 --> 00:01:57,420
I've left a lot of stuff out this is a

43
00:01:57,420 --> 00:01:59,640
personal view this is not representative

44
00:01:59,640 --> 00:02:01,649
of Los Alamos Andy or Google this is

45
00:02:01,649 --> 00:02:04,079
just me talking about my memories and

46
00:02:04,079 --> 00:02:09,139
what I found in that kind of thing so it

47
00:02:09,139 --> 00:02:11,879
1999 I've been working on supercomputing

48
00:02:11,879 --> 00:02:13,590
for over 10 years I've been doing

49
00:02:13,590 --> 00:02:15,569
stirs on workstations and PCs for about

50
00:02:15,569 --> 00:02:19,220
eight years and I moved to Los Alamos so

51
00:02:19,220 --> 00:02:21,690
weirdly enough I realized that you

52
00:02:21,690 --> 00:02:23,129
really can't see it but the person was

53
00:02:23,129 --> 00:02:25,110
no gray hair is me and that kind of

54
00:02:25,110 --> 00:02:26,670
tells you what this kind of work does to

55
00:02:26,670 --> 00:02:29,879
you after twenty years and the deal is

56
00:02:29,879 --> 00:02:31,470
you would open up a box and then you

57
00:02:31,470 --> 00:02:32,819
would wire up your own network it was

58
00:02:32,819 --> 00:02:34,319
all doing yourself back then and

59
00:02:34,319 --> 00:02:36,569
supercomputing for clusters and the

60
00:02:36,569 --> 00:02:37,980
thing that I began to realize after a

61
00:02:37,980 --> 00:02:40,410
while is how much I hated the BIOS like

62
00:02:40,410 --> 00:02:43,470
with a passion why was that well you

63
00:02:43,470 --> 00:02:46,049
know it took forever to boot took five

64
00:02:46,049 --> 00:02:47,280
minutes to boot it actually takes longer

65
00:02:47,280 --> 00:02:49,049
now but back then five minutes was

66
00:02:49,049 --> 00:02:55,739
really horrendous and and to update the

67
00:02:55,739 --> 00:02:57,690
firmware on all 128 machines there's no

68
00:02:57,690 --> 00:02:59,250
bugs in firmware but anyway when there

69
00:02:59,250 --> 00:03:00,840
was a bug you had to carry a floppy

70
00:03:00,840 --> 00:03:02,819
around and you had to have a cart with a

71
00:03:02,819 --> 00:03:05,519
video device and a keyboard and that

72
00:03:05,519 --> 00:03:06,989
hasn't changed much except now that

73
00:03:06,989 --> 00:03:09,680
includes a mouse so that's kind of odd

74
00:03:09,680 --> 00:03:12,780
and then if things went wrong one of the

75
00:03:12,780 --> 00:03:14,280
things went wrong how did you fix it you

76
00:03:14,280 --> 00:03:15,930
just had to yank the node out and move

77
00:03:15,930 --> 00:03:18,359
the jumper to a recovery BIOS which had

78
00:03:18,359 --> 00:03:19,769
no keyboard and mouse so you put the

79
00:03:19,769 --> 00:03:21,269
floppy in and you're in a machine room

80
00:03:21,269 --> 00:03:22,980
with all these fans and you had to

81
00:03:22,980 --> 00:03:24,299
listen for the beeps because it ran

82
00:03:24,299 --> 00:03:26,459
autoexec got that and you waited for the

83
00:03:26,459 --> 00:03:27,660
beeps and with luck you could then

84
00:03:27,660 --> 00:03:30,720
recover so this is really just

85
00:03:30,720 --> 00:03:34,079
incredibly awful and it's kind of not

86
00:03:34,079 --> 00:03:35,730
changed it's still incredibly awful and

87
00:03:35,730 --> 00:03:37,709
the amazing thing too is you know what

88
00:03:37,709 --> 00:03:39,239
was the what was the deal you netboot

89
00:03:39,239 --> 00:03:42,060
with TFTP and we all knew the TFTP would

90
00:03:42,060 --> 00:03:46,380
be dead by 2010 except right wrong so so

91
00:03:46,380 --> 00:03:48,410
but the thing I realize is wait a minute

92
00:03:48,410 --> 00:03:50,910
there's copious documentation at

93
00:03:50,910 --> 00:04:00,780
developer.android.com a write which is

94
00:04:00,780 --> 00:04:02,579
huge right it'll easily fit a kernel in

95
00:04:02,579 --> 00:04:05,430
a quarter make no problem and you know

96
00:04:05,430 --> 00:04:06,900
so I thought wait a minute we can we can

97
00:04:06,900 --> 00:04:09,980
just we can just put Linux in there done

98
00:04:09,980 --> 00:04:12,480
so we put Linux in flash and we we

99
00:04:12,480 --> 00:04:14,010
started with something Stephon Ryanair

100
00:04:14,010 --> 00:04:16,560
oh did cold-open bios and one of the

101
00:04:16,560 --> 00:04:17,970
things I realized is well forgot to put

102
00:04:17,970 --> 00:04:20,728
Linux in flash we're gonna have to have

103
00:04:20,728 --> 00:04:23,340
Linux able to boot a Linux kernel and

104
00:04:23,340 --> 00:04:25,860
when we went to supercomputing one year

105
00:04:25,860 --> 00:04:27,300
with that idea this well-known

106
00:04:27,300 --> 00:04:29,340
next person said no way will I ever make

107
00:04:29,340 --> 00:04:30,690
into the kernel even if you do it is

108
00:04:30,690 --> 00:04:32,069
horrible ideal it'll never make it in

109
00:04:32,069 --> 00:04:34,050
the kernel you know it's true our

110
00:04:34,050 --> 00:04:35,909
version didn't make it an eric Hendrix's

111
00:04:35,909 --> 00:04:37,500
version didn't make it but eric

112
00:04:37,500 --> 00:04:39,659
Biederman's version did make it so you

113
00:04:39,659 --> 00:04:40,860
know you never know what's gonna make it

114
00:04:40,860 --> 00:04:42,060
into kernel there are actually been a

115
00:04:42,060 --> 00:04:43,919
fair number of these kernel boots kernel

116
00:04:43,919 --> 00:04:46,379
implementations back at OU before I did

117
00:04:46,379 --> 00:04:47,550
a paper about them if you want to look

118
00:04:47,550 --> 00:04:49,949
it up and as usual the cleanest one was

119
00:04:49,949 --> 00:04:51,870
the one in Playa ninth so some things

120
00:04:51,870 --> 00:04:54,199
never change

121
00:04:54,199 --> 00:04:58,289
hey here's my assumption I kept thinking

122
00:04:58,289 --> 00:05:00,960
that this is so terrible that if we do

123
00:05:00,960 --> 00:05:02,699
this we're gonna hand it off in a year

124
00:05:02,699 --> 00:05:04,710
to companies like you know AMD and HP

125
00:05:04,710 --> 00:05:06,240
and Dell cuz they're gonna realize this

126
00:05:06,240 --> 00:05:08,250
is really cool booting in seconds is

127
00:05:08,250 --> 00:05:10,289
cool we've just removed their entire

128
00:05:10,289 --> 00:05:11,819
software burden because it's now there

129
00:05:11,819 --> 00:05:13,949
they're all there Linux guys are their

130
00:05:13,949 --> 00:05:17,250
firmware guys and yeah we were kind of

131
00:05:17,250 --> 00:05:19,349
naive but if you look at every single

132
00:05:19,349 --> 00:05:22,169
one of the top 500 supercomputers on the

133
00:05:22,169 --> 00:05:24,330
top 500 list they all run software

134
00:05:24,330 --> 00:05:25,740
written at Argonne National Labs called

135
00:05:25,740 --> 00:05:29,639
MPI cleanroom was invented at Sandia the

136
00:05:29,639 --> 00:05:32,009
monte carlo method used very widely in

137
00:05:32,009 --> 00:05:33,659
supercomputing was invented at Los

138
00:05:33,659 --> 00:05:35,849
Alamos so you really can look back at a

139
00:05:35,849 --> 00:05:37,909
60-year history of the do e labs

140
00:05:37,909 --> 00:05:40,110
contributing to the computing community

141
00:05:40,110 --> 00:05:42,150
in ways that most people don't even know

142
00:05:42,150 --> 00:05:44,219
anymore so it wasn't crazy to think

143
00:05:44,219 --> 00:05:45,870
could we do this new improved bio sent

144
00:05:45,870 --> 00:05:47,190
and we would hand it out and people who

145
00:05:47,190 --> 00:05:48,289
pick it up

146
00:05:48,289 --> 00:05:51,029
well we then notice to the BIOS it by by

147
00:05:51,029 --> 00:05:54,960
year 1999 was a profit Center BIOS gave

148
00:05:54,960 --> 00:05:57,000
you vendor lock-in BIOS gave you quote

149
00:05:57,000 --> 00:05:59,069
unquote features to give to people you

150
00:05:59,069 --> 00:06:00,900
know BIOS did lots of things that that

151
00:06:00,900 --> 00:06:02,909
we didn't realize it was doing in terms

152
00:06:02,909 --> 00:06:04,590
of the business model of selling servers

153
00:06:04,590 --> 00:06:06,509
and that's for the end what really made

154
00:06:06,509 --> 00:06:09,060
that not work after a year we're still

155
00:06:09,060 --> 00:06:11,159
there in the x86 world and we're trying

156
00:06:11,159 --> 00:06:12,539
to work our way up I think we're going

157
00:06:12,539 --> 00:06:14,539
to maybe in the next year but we'll see

158
00:06:14,539 --> 00:06:17,310
but there's an upside that I began to

159
00:06:17,310 --> 00:06:20,039
realize after not too long the Corbin

160
00:06:20,039 --> 00:06:21,330
source is kind of this library and

161
00:06:21,330 --> 00:06:23,759
knowledge about how stuff works and a

162
00:06:23,759 --> 00:06:25,259
lot of that knowledge was lost before we

163
00:06:25,259 --> 00:06:26,729
started this project and a lot of it has

164
00:06:26,729 --> 00:06:28,349
come back and actually been lost again

165
00:06:28,349 --> 00:06:31,379
but that's another story you know and

166
00:06:31,379 --> 00:06:33,690
whatever the day it really hit me full

167
00:06:33,690 --> 00:06:37,229
force was DRAM setup anybody who's ever

168
00:06:37,229 --> 00:06:39,570
written done the mode register set you

169
00:06:39,570 --> 00:06:41,220
got a shift the bits left three bit

170
00:06:41,220 --> 00:06:42,690
why do you have to shift the bits left

171
00:06:42,690 --> 00:06:44,100
three bits it took me two months to

172
00:06:44,100 --> 00:06:45,420
remember this because it was something

173
00:06:45,420 --> 00:06:47,730
I'd known 20 years earlier believe it or

174
00:06:47,730 --> 00:06:51,000
not doing firmware on a z80 okay because

175
00:06:51,000 --> 00:06:52,770
three bits or two bits or whatever the

176
00:06:52,770 --> 00:06:55,530
byte Lane select if I want to write in

177
00:06:55,530 --> 00:06:57,690
address text to DRAM I got a shift at

178
00:06:57,690 --> 00:06:58,830
left to make sure that's the address

179
00:06:58,830 --> 00:07:01,950
that goes to DRAM I'd known this okay

180
00:07:01,950 --> 00:07:04,680
I'd forgotten it and and so what I saw

181
00:07:04,680 --> 00:07:07,350
happening people figuring things out and

182
00:07:07,350 --> 00:07:09,510
realizing them in code and then that

183
00:07:09,510 --> 00:07:10,950
code is sort of a permanent record

184
00:07:10,950 --> 00:07:12,600
almost except for the times we drop a

185
00:07:12,600 --> 00:07:16,710
platform of how things work I'll talk

186
00:07:16,710 --> 00:07:18,420
about the fast user interface in a bit

187
00:07:18,420 --> 00:07:19,770
how we learned where the best place to

188
00:07:19,770 --> 00:07:21,510
put graphics startup is it's in source

189
00:07:21,510 --> 00:07:23,220
but it's in coreboot not in a kernel

190
00:07:23,220 --> 00:07:24,410
that was a surprise

191
00:07:24,410 --> 00:07:27,000
SMP startup we did the first real SMP

192
00:07:27,000 --> 00:07:29,130
startup it was free Linux and and really

193
00:07:29,130 --> 00:07:30,510
implemented it we didn't really know how

194
00:07:30,510 --> 00:07:32,370
to do that until James Hendricks did

195
00:07:32,370 --> 00:07:34,590
that an interest this funny thing I did

196
00:07:34,590 --> 00:07:37,130
a reverse engineering k7 memory MSRs

197
00:07:37,130 --> 00:07:40,980
I went back far enough in a GUID tree

198
00:07:40,980 --> 00:07:42,810
it's there at that hash and you know

199
00:07:42,810 --> 00:07:45,120
it's kind of funny we had to do that we

200
00:07:45,120 --> 00:07:47,100
we enumerated the space the four billion

201
00:07:47,100 --> 00:07:49,260
MSR is overnight run one night to find

202
00:07:49,260 --> 00:07:51,270
the hidden ones in the k7 and that's how

203
00:07:51,270 --> 00:07:52,560
we got dere I'm working on the case

204
00:07:52,560 --> 00:07:56,880
seven so there's just stuff in there we

205
00:07:56,880 --> 00:07:59,310
actually had a ROM you later we had a

206
00:07:59,310 --> 00:08:00,750
thing called the web.config this is

207
00:08:00,750 --> 00:08:02,580
actual screen shop thank God for the

208
00:08:02,580 --> 00:08:03,960
wayback machine because I couldn't find

209
00:08:03,960 --> 00:08:05,669
any of this stuff our webpages are long

210
00:08:05,669 --> 00:08:08,280
gone of course second lesson put your

211
00:08:08,280 --> 00:08:11,669
webpages and get or you'll be sad but

212
00:08:11,669 --> 00:08:13,140
you could do stuff like this right you

213
00:08:13,140 --> 00:08:14,790
could say hey you know I've got a lead

214
00:08:14,790 --> 00:08:17,190
tech so you know give me a config file

215
00:08:17,190 --> 00:08:19,770
it gave you a config file for that thing

216
00:08:19,770 --> 00:08:22,260
then you built Linux BIOS as it was

217
00:08:22,260 --> 00:08:24,510
called at the time and then you know the

218
00:08:24,510 --> 00:08:25,890
way you went well the problem there we

219
00:08:25,890 --> 00:08:29,010
didn't realize is the vendors were

220
00:08:29,010 --> 00:08:31,140
throwing little minor wiring changes

221
00:08:31,140 --> 00:08:32,909
into these motherboards all the time so

222
00:08:32,909 --> 00:08:34,799
if I got a lead tech win fast in March

223
00:08:34,799 --> 00:08:36,780
and I got another one in July they were

224
00:08:36,780 --> 00:08:38,940
wired differently some GPIO is moved and

225
00:08:38,940 --> 00:08:40,890
the difference was buried in the BIOS so

226
00:08:40,890 --> 00:08:42,809
this is kind of a nice idea that didn't

227
00:08:42,809 --> 00:08:44,099
work out in the end because of the

228
00:08:44,099 --> 00:08:45,690
variability in the hardware it was

229
00:08:45,690 --> 00:08:49,380
something we didn't suspect so we were

230
00:08:49,380 --> 00:08:51,660
in assembly for a while and again you

231
00:08:51,660 --> 00:08:53,370
can actually find the original commit

232
00:08:53,370 --> 00:08:54,990
and this is an extract from the way back

233
00:08:54,990 --> 00:08:58,620
thing Jeff Garcia came by and made his

234
00:08:58,620 --> 00:09:01,860
big contribution he said hey there's a

235
00:09:01,860 --> 00:09:05,190
guy named just forgot his name sorry are

236
00:09:05,190 --> 00:09:06,480
you on rydberg's right in front of me

237
00:09:06,480 --> 00:09:08,610
he's written this kind of thing and see

238
00:09:08,610 --> 00:09:10,170
that I think you could build on it would

239
00:09:10,170 --> 00:09:11,610
be a better foundation because you'd

240
00:09:11,610 --> 00:09:13,350
have less assembly codes so this is the

241
00:09:13,350 --> 00:09:14,940
this is the announcement on the webpage

242
00:09:14,940 --> 00:09:17,279
of the commit where we actually made the

243
00:09:17,279 --> 00:09:19,320
cut to having about a dozen assembly

244
00:09:19,320 --> 00:09:21,510
code instructions in the Reston sea so

245
00:09:21,510 --> 00:09:24,000
that was a big jump and all through this

246
00:09:24,000 --> 00:09:27,420
time it was sort of iterate burn iterate

247
00:09:27,420 --> 00:09:29,970
burn see how far you get watch a dram

248
00:09:29,970 --> 00:09:32,399
not work watch DRAM work watch i/o not

249
00:09:32,399 --> 00:09:34,740
work watch i/o work and you know we hit

250
00:09:34,740 --> 00:09:36,270
this wall and I talked about this last

251
00:09:36,270 --> 00:09:38,190
year where we got stuck on PCI and it

252
00:09:38,190 --> 00:09:41,250
turned out the problem was Linux and we

253
00:09:41,250 --> 00:09:43,589
most recently discovered this about a

254
00:09:43,589 --> 00:09:45,570
year and a half ago can't always

255
00:09:45,570 --> 00:09:47,940
configure a nun configured PCI bus and

256
00:09:47,940 --> 00:09:50,790
this still happens if you boot Linux and

257
00:09:50,790 --> 00:09:52,380
you haven't run all the UEFI Dixie's

258
00:09:52,380 --> 00:09:54,390
Linux occasionally will stumble over in

259
00:09:54,390 --> 00:09:56,850
this case a HCI and not be able to turn

260
00:09:56,850 --> 00:09:59,520
a HCI on so we have patches for that

261
00:09:59,520 --> 00:10:02,910
it's an ongoing problem I think it'd be

262
00:10:02,910 --> 00:10:04,589
neat policy for anyone in the Linux

263
00:10:04,589 --> 00:10:06,420
community to just commit to always

264
00:10:06,420 --> 00:10:08,790
booting Linux on something or other just

265
00:10:08,790 --> 00:10:09,899
to see if you can really boot when

266
00:10:09,899 --> 00:10:11,640
nothing else is turned turned Hardware

267
00:10:11,640 --> 00:10:15,930
on but you know many biases many kernel

268
00:10:15,930 --> 00:10:17,670
systems in 2000 the BIOS did the right

269
00:10:17,670 --> 00:10:19,440
thing and if you didn't do what the

270
00:10:19,440 --> 00:10:21,600
kernel expected well you get something

271
00:10:21,600 --> 00:10:23,880
like this see the thing in red if one of

272
00:10:23,880 --> 00:10:25,740
the four bases register base address

273
00:10:25,740 --> 00:10:27,240
registers with zero that meant that

274
00:10:27,240 --> 00:10:30,149
quote unquote do was disabled which in

275
00:10:30,149 --> 00:10:32,700
this case of course means not enabled so

276
00:10:32,700 --> 00:10:35,220
the old confusion between disabled and

277
00:10:35,220 --> 00:10:37,829
not enabled crops up over and over and

278
00:10:37,829 --> 00:10:42,959
over again common thing okay now in May

279
00:10:42,959 --> 00:10:47,550
of 2000 the Park Service said a

280
00:10:47,550 --> 00:10:49,500
controlled burn in bandolier National

281
00:10:49,500 --> 00:10:51,240
Park that became an uncontrolled burn

282
00:10:51,240 --> 00:10:53,790
and decided to go east not west and

283
00:10:53,790 --> 00:10:56,190
tried to burn down the entire town a Los

284
00:10:56,190 --> 00:10:58,589
Alamos including the area where the

285
00:10:58,589 --> 00:11:02,220
plutonium was stored and I didn't get

286
00:11:02,220 --> 00:11:03,750
stopped which is good they only lost

287
00:11:03,750 --> 00:11:06,240
about 450 houses or so but meanwhile

288
00:11:06,240 --> 00:11:08,600
Here I am if you look I

289
00:11:08,600 --> 00:11:10,970
kind of said hey first login on the 440

290
00:11:10,970 --> 00:11:12,560
TX then there's a month it didn't take a

291
00:11:12,560 --> 00:11:14,029
month it took a couple days it's just

292
00:11:14,029 --> 00:11:16,279
that that background there is kind of

293
00:11:16,279 --> 00:11:17,449
what was happening in my town at the

294
00:11:17,449 --> 00:11:19,040
time it was he was trying to burn down

295
00:11:19,040 --> 00:11:21,889
so that was kind of funny when I looked

296
00:11:21,889 --> 00:11:23,389
at the old you know the history and

297
00:11:23,389 --> 00:11:24,589
thought oh okay

298
00:11:24,589 --> 00:11:28,550
that's why it was a month but anyway it

299
00:11:28,550 --> 00:11:32,060
would have been faster graphics graphics

300
00:11:32,060 --> 00:11:34,660
was a continuing issue then and now so

301
00:11:34,660 --> 00:11:39,440
and and this is kind of oh yeah well how

302
00:11:39,440 --> 00:11:42,500
much time do I have left half an hour Oh

303
00:11:42,500 --> 00:11:44,470
God

304
00:11:44,470 --> 00:11:48,529
I'll move faster so so we had to go with

305
00:11:48,529 --> 00:11:51,319
blobs in 2001 there was no choice David

306
00:11:51,319 --> 00:11:53,079
did a lot of that work I worked on a -

307
00:11:53,079 --> 00:11:55,910
we we had to get the 32 16-bit

308
00:11:55,910 --> 00:11:57,170
trampoline from - kernel money

309
00:11:57,170 --> 00:11:59,990
implemented PCI BIOS we grabbed the x86

310
00:11:59,990 --> 00:12:02,060
emulator from x11 all that code has

311
00:12:02,060 --> 00:12:03,980
changed right it's still the same thing

312
00:12:03,980 --> 00:12:05,839
though we're stuck with blobs for

313
00:12:05,839 --> 00:12:09,980
graphics even today so the blob argument

314
00:12:09,980 --> 00:12:11,660
won't go away it just came back again in

315
00:12:11,660 --> 00:12:13,939
the last few days but we you know I

316
00:12:13,939 --> 00:12:15,439
don't like blobs I don't want to have

317
00:12:15,439 --> 00:12:18,110
blobs but don't get down on people too

318
00:12:18,110 --> 00:12:19,699
much because there are some blobs in the

319
00:12:19,699 --> 00:12:22,990
image it's just going to happen

320
00:12:22,990 --> 00:12:27,769
Ron see see we could not get hyper

321
00:12:27,769 --> 00:12:30,319
transport working on the Opteron period

322
00:12:30,319 --> 00:12:32,959
it was just too darn complex you know

323
00:12:32,959 --> 00:12:34,490
and you needed hyper transfer it up

324
00:12:34,490 --> 00:12:35,720
before you could really kind of

325
00:12:35,720 --> 00:12:37,100
configure memories I mean you were

326
00:12:37,100 --> 00:12:38,509
trying to do it in an assembly code it

327
00:12:38,509 --> 00:12:39,970
was just really an impossible situation

328
00:12:39,970 --> 00:12:41,689
we couldn't figure out how to make

329
00:12:41,689 --> 00:12:47,120
caches Ram work so the story as it was

330
00:12:47,120 --> 00:12:48,769
told to me from Linux networks for Eric

331
00:12:48,769 --> 00:12:50,329
Biederman worked is he literally

332
00:12:50,329 --> 00:12:51,980
vanished for a month nobody knew where

333
00:12:51,980 --> 00:12:53,149
he was nobody knew what was happening

334
00:12:53,149 --> 00:12:56,180
and he reappeared with 13 thousand lines

335
00:12:56,180 --> 00:12:58,160
of actually pretty darn good C code that

336
00:12:58,160 --> 00:13:01,100
implemented ROM CC so you know this is

337
00:13:01,100 --> 00:13:02,689
kind of to my mind sort of genius at

338
00:13:02,689 --> 00:13:04,819
work there right somebody goes way comes

339
00:13:04,819 --> 00:13:06,769
back and he's got a C compiler that

340
00:13:06,769 --> 00:13:08,269
always in lines and uses only the

341
00:13:08,269 --> 00:13:11,389
register set as its memory ROM CC made

342
00:13:11,389 --> 00:13:16,069
hypertransport possible so you know take

343
00:13:16,069 --> 00:13:17,449
a look at that sometime it's actually a

344
00:13:17,449 --> 00:13:19,700
very interesting piece of code

345
00:13:19,700 --> 00:13:22,100
this is Ray Martinus or single-board

346
00:13:22,100 --> 00:13:28,040
still using it I forget yeah so 15 years

347
00:13:28,040 --> 00:13:30,830
of this C compiler and and you know sort

348
00:13:30,830 --> 00:13:32,240
of there aren't a lot of people who

349
00:13:32,240 --> 00:13:33,920
found a lot of bugs in ROM CC I just

350
00:13:33,920 --> 00:13:38,440
think it's an amazing piece of work so a

351
00:13:38,440 --> 00:13:42,800
net victory so four years in Milan old

352
00:13:42,800 --> 00:13:45,500
committed six million dollars to build a

353
00:13:45,500 --> 00:13:47,480
thousand node Linux cluster which we

354
00:13:47,480 --> 00:13:48,620
called pink

355
00:13:48,620 --> 00:13:50,570
we caught a pink cuz that was like the

356
00:13:50,570 --> 00:13:51,740
maximal weight Oh in the wire management

357
00:13:51,740 --> 00:13:53,180
because all the other cars were like

358
00:13:53,180 --> 00:13:55,370
white and blue and red guess why we call

359
00:13:55,370 --> 00:13:58,640
it pink so but it was ten team machine

360
00:13:58,640 --> 00:14:00,020
which of the time was really big it

361
00:14:00,020 --> 00:14:01,520
would have put us on a top ten of the

362
00:14:01,520 --> 00:14:04,670
top 500 and you know so I was looking at

363
00:14:04,670 --> 00:14:05,870
that and I noticed this thing at the

364
00:14:05,870 --> 00:14:08,600
bottom booting Windows 2000 from a full

365
00:14:08,600 --> 00:14:10,100
open-source code base so the first

366
00:14:10,100 --> 00:14:12,530
Windows boot was in 2002 I'd forgotten

367
00:14:12,530 --> 00:14:14,450
about that gotta love the wayback

368
00:14:14,450 --> 00:14:17,750
machine but you know to get to get a

369
00:14:17,750 --> 00:14:19,640
super computer commitment like that was

370
00:14:19,640 --> 00:14:21,860
pretty amazing pink was the tenth EF

371
00:14:21,860 --> 00:14:24,410
machine the dec alpha machine that was

372
00:14:24,410 --> 00:14:26,090
also a tenth EF machine was a sixty

373
00:14:26,090 --> 00:14:29,150
million dollar machine so that was kind

374
00:14:29,150 --> 00:14:31,850
of an interesting comparison so this is

375
00:14:31,850 --> 00:14:33,170
what it looked like back then to build a

376
00:14:33,170 --> 00:14:35,600
supercomputer you know guys would show

377
00:14:35,600 --> 00:14:37,100
up and they'd sit there and wire stuff

378
00:14:37,100 --> 00:14:39,560
for like a week and then they spend time

379
00:14:39,560 --> 00:14:41,330
finding the bed fire Arbor there weren't

380
00:14:41,330 --> 00:14:44,540
many little mention here on the right is

381
00:14:44,540 --> 00:14:46,670
Eric Hendrix he did to Colonel Monti he

382
00:14:46,670 --> 00:14:48,470
did beep rock he did a lot of incredible

383
00:14:48,470 --> 00:14:51,650
stuff and on the left is Greg Watson who

384
00:14:51,650 --> 00:14:56,870
did the PowerPC port of Linux files so

385
00:14:56,870 --> 00:14:58,640
this kind of weighted lateral from this

386
00:14:58,640 --> 00:15:00,470
will never work this is a terrible idea

387
00:15:00,470 --> 00:15:02,270
let's go spend some money on it and that

388
00:15:02,270 --> 00:15:04,130
kind of is a good you know that happens

389
00:15:04,130 --> 00:15:06,440
a lot a lot more than you realize and

390
00:15:06,440 --> 00:15:08,630
and generally you know if people say it

391
00:15:08,630 --> 00:15:09,860
can't work and you know it can work

392
00:15:09,860 --> 00:15:11,030
that's a good sign that you should just

393
00:15:11,030 --> 00:15:13,190
go ahead and do it for what it's worth

394
00:15:13,190 --> 00:15:15,200
but you know then then we thought well

395
00:15:15,200 --> 00:15:17,360
it's all about HGC that's all we did

396
00:15:17,360 --> 00:15:19,190
right Linux BIOS has always conceived as

397
00:15:19,190 --> 00:15:21,830
the base of a stack of software that

398
00:15:21,830 --> 00:15:24,230
Tyson Sawyer wrote to us for my robot it

399
00:15:24,230 --> 00:15:25,760
said yeah we used it in a pack but

400
00:15:25,760 --> 00:15:28,070
because you know mine finding robots

401
00:15:28,070 --> 00:15:29,480
that boot in seconds are better than

402
00:15:29,480 --> 00:15:31,310
mine finding robots the Boonton minutes

403
00:15:31,310 --> 00:15:33,139
can't argue the point right

404
00:15:33,139 --> 00:15:34,879
and then Hamish Guthrie said I there's a

405
00:15:34,879 --> 00:15:37,009
TV that's made in Turkey the digital TV

406
00:15:37,009 --> 00:15:39,589
and TVs to boot in a second again you

407
00:15:39,589 --> 00:15:41,869
know the rest of that punchline it was

408
00:15:41,869 --> 00:15:43,639
also used in the military modem and then

409
00:15:43,639 --> 00:15:45,980
robber Armstrong and Mitch Williams had

410
00:15:45,980 --> 00:15:47,779
this neat idea which was to take a pile

411
00:15:47,779 --> 00:15:49,720
of parts that look like that and

412
00:15:49,720 --> 00:15:52,459
assemble it into that that thing was a

413
00:15:52,459 --> 00:15:54,410
lot of fun you could kind of dropkick

414
00:15:54,410 --> 00:15:55,759
that and it would work because there was

415
00:15:55,759 --> 00:15:58,459
only one disc any any man at the disc

416
00:15:58,459 --> 00:16:00,169
well but it took incredible amounts

417
00:16:00,169 --> 00:16:01,850
abuse from airline baggage handlers and

418
00:16:01,850 --> 00:16:03,319
every time we plugged it in and turned

419
00:16:03,319 --> 00:16:05,769
it on and worked and we had it until

420
00:16:05,769 --> 00:16:08,419
they reorganized the building at Sandia

421
00:16:08,419 --> 00:16:09,980
and they put it in a box and it went

422
00:16:09,980 --> 00:16:12,829
into the Indiana Jones warehouse we we

423
00:16:12,829 --> 00:16:14,929
think it's still Sandia but nobody knows

424
00:16:14,929 --> 00:16:18,019
where sandy it is so oh well

425
00:16:18,019 --> 00:16:19,759
but that had started a lot of other good

426
00:16:19,759 --> 00:16:22,939
ideas so that one on the right we called

427
00:16:22,939 --> 00:16:25,309
EQ it was a CD case holding a bunch of

428
00:16:25,309 --> 00:16:27,439
things and then you know that's a build

429
00:16:27,439 --> 00:16:31,220
session of the top left at my house you

430
00:16:31,220 --> 00:16:32,449
know so the mini clusters were really

431
00:16:32,449 --> 00:16:34,609
cool and continued to be cool and I had

432
00:16:34,609 --> 00:16:37,129
from there we got the R&D 100 award and

433
00:16:37,129 --> 00:16:39,559
the funny part is that's a mini cluster

434
00:16:39,559 --> 00:16:42,470
there the award was for the thousand of

435
00:16:42,470 --> 00:16:43,790
machine but a lot of people would look

436
00:16:43,790 --> 00:16:45,019
at that mini cluster and say how the

437
00:16:45,019 --> 00:16:46,519
heck did you get a thousand servers in

438
00:16:46,519 --> 00:16:49,189
that little box so you know I guess it's

439
00:16:49,189 --> 00:16:51,019
the importance of labeling but the neat

440
00:16:51,019 --> 00:16:52,910
thing was it was a thousand nodes one

441
00:16:52,910 --> 00:16:55,160
disc they shipped it from Salt Lake City

442
00:16:55,160 --> 00:16:57,169
to Los Alamos the disc failed the only

443
00:16:57,169 --> 00:16:58,519
thing that broken the whole thing in

444
00:16:58,519 --> 00:17:00,949
shipment was the disc and they said no

445
00:17:00,949 --> 00:17:02,480
problem we've got to back up this they

446
00:17:02,480 --> 00:17:03,829
took out the backup disc and it had

447
00:17:03,829 --> 00:17:06,079
failed too so this is why I really

448
00:17:06,079 --> 00:17:09,679
really hate discs but you know this is

449
00:17:09,679 --> 00:17:12,019
part of a stack Linux BIOS is a part of

450
00:17:12,019 --> 00:17:14,449
the stack but it wasn't really the thing

451
00:17:14,449 --> 00:17:15,949
that made cluster Matic cluster Matic

452
00:17:15,949 --> 00:17:18,019
you saw Eric Hendrix there he was kind

453
00:17:18,019 --> 00:17:19,669
of the key guy on everything above the

454
00:17:19,669 --> 00:17:23,980
of above Linux piles we even ran a class

455
00:17:23,980 --> 00:17:26,480
this is kind of fun this is a class at

456
00:17:26,480 --> 00:17:29,480
ut-austin and the deal was I don't know

457
00:17:29,480 --> 00:17:31,250
IBM did this I doubt they do anymore

458
00:17:31,250 --> 00:17:33,559
you call IBM and say can I have 24

459
00:17:33,559 --> 00:17:35,870
ThinkPads for a loan for a couple days

460
00:17:35,870 --> 00:17:37,309
at a conference then they've come in

461
00:17:37,309 --> 00:17:40,130
those big blue boxes and you know it's

462
00:17:40,130 --> 00:17:41,990
pretty awesome and then we we ran this

463
00:17:41,990 --> 00:17:45,800
class and you can kind of see here

464
00:17:45,800 --> 00:17:47,930
these are two little systems and in a

465
00:17:47,930 --> 00:17:49,640
class people would build Linux files

466
00:17:49,640 --> 00:17:51,380
burning on that and then boot our

467
00:17:51,380 --> 00:17:53,360
cluster stack so he would actually build

468
00:17:53,360 --> 00:17:55,340
like the thousand node cluster they

469
00:17:55,340 --> 00:17:57,140
build a two node version that in a day

470
00:17:57,140 --> 00:17:59,510
it was just kind of educating people on

471
00:17:59,510 --> 00:18:05,450
how this software stack worked so caches

472
00:18:05,450 --> 00:18:08,870
Ram I was a UNM one day and somebody

473
00:18:08,870 --> 00:18:10,400
said talk to this grad student he's from

474
00:18:10,400 --> 00:18:12,320
Intel he can tell you how to do caches

475
00:18:12,320 --> 00:18:13,640
Ram you're not doing it right which we

476
00:18:13,640 --> 00:18:14,780
already knew that because we couldnt get

477
00:18:14,780 --> 00:18:16,820
it to work at all and he said oh caches

478
00:18:16,820 --> 00:18:19,160
Ram is so easy you just start reading

479
00:18:19,160 --> 00:18:23,780
the manual carefully enough and he said

480
00:18:23,780 --> 00:18:25,640
look at the cache disabled bit and I

481
00:18:25,640 --> 00:18:27,050
said yeah it turns off the cache she

482
00:18:27,050 --> 00:18:29,150
said that's not what it does the cache

483
00:18:29,150 --> 00:18:30,920
disabled bit does not disable the cache

484
00:18:30,920 --> 00:18:33,860
the cache disabled bit disables kind of

485
00:18:33,860 --> 00:18:36,140
going out to memory and I said if you

486
00:18:36,140 --> 00:18:37,520
tell me this you're gonna get fired he

487
00:18:37,520 --> 00:18:38,780
said no no that's ok I'm just reading

488
00:18:38,780 --> 00:18:41,060
the volume carefully so so we got caches

489
00:18:41,060 --> 00:18:44,930
for him but that's like the original

490
00:18:44,930 --> 00:18:47,000
caches ran there's two papers I found

491
00:18:47,000 --> 00:18:48,620
which are kind of fun and again it's

492
00:18:48,620 --> 00:18:50,780
more knowledge realizing code and this

493
00:18:50,780 --> 00:18:53,390
is where I don't think FSB should take

494
00:18:53,390 --> 00:18:54,680
this over because then we lose that

495
00:18:54,680 --> 00:18:56,450
knowledge and I don't like to lose

496
00:18:56,450 --> 00:18:58,100
knowledge so that's kind of my one

497
00:18:58,100 --> 00:19:01,910
disagreement there on FSB and this is

498
00:19:01,910 --> 00:19:03,740
the first Linux file summit we had about

499
00:19:03,740 --> 00:19:05,650
a hundred people I have no pictures

500
00:19:05,650 --> 00:19:08,630
didn't go that far the reason I

501
00:19:08,630 --> 00:19:10,970
mentioned a hundred people because well

502
00:19:10,970 --> 00:19:12,950
let me digress two One Laptop Per child

503
00:19:12,950 --> 00:19:14,780
and see if anyone recognizes that person

504
00:19:14,780 --> 00:19:18,110
in that picture so this is my room at

505
00:19:18,110 --> 00:19:19,400
home and we were trying hard to figure

506
00:19:19,400 --> 00:19:20,570
out how the hell to make that geo

507
00:19:20,570 --> 00:19:22,220
chipset work and I can tell you stories

508
00:19:22,220 --> 00:19:24,710
there was a recent Ollie Lowe quit the

509
00:19:24,710 --> 00:19:26,300
Linux files project and that chip said

510
00:19:26,300 --> 00:19:29,210
is it but thanks to Steve Goodrich who

511
00:19:29,210 --> 00:19:30,950
flew down at Mark Jones in Jordan Krauss

512
00:19:30,950 --> 00:19:33,620
you know we were able to get it working

513
00:19:33,620 --> 00:19:35,000
I also ought to mentioned they

514
00:19:35,000 --> 00:19:36,830
eventually moved to open firmware they

515
00:19:36,830 --> 00:19:38,390
moved to open firmware because open

516
00:19:38,390 --> 00:19:40,760
farmer had a command prompt that was

517
00:19:40,760 --> 00:19:43,580
active before DRAM training and nobody

518
00:19:43,580 --> 00:19:45,680
could get DRM training right so it's

519
00:19:45,680 --> 00:19:47,900
just how to keep in mind we don't do

520
00:19:47,900 --> 00:19:49,400
command prompts that's been kind of our

521
00:19:49,400 --> 00:19:51,620
mantra but every once in a while maybe

522
00:19:51,620 --> 00:19:56,300
you should so now notice I said a

523
00:19:56,300 --> 00:19:58,100
hundred people in Santa Fe and Homburg

524
00:19:58,100 --> 00:19:59,660
and oh six

525
00:19:59,660 --> 00:20:01,640
the bloom is off the Rose here so where

526
00:20:01,640 --> 00:20:03,050
there's like a dozen people there and

527
00:20:03,050 --> 00:20:04,340
jimmying a you're in that picture

528
00:20:04,340 --> 00:20:07,160
somewhere you might see yourself Jimmy

529
00:20:07,160 --> 00:20:08,780
and came and gave it talk about it Jesus

530
00:20:08,780 --> 00:20:10,520
and then this is when we started the

531
00:20:10,520 --> 00:20:12,620
hack sessions we were in his hotel lobby

532
00:20:12,620 --> 00:20:14,240
till like 2:00 a.m. we would close the

533
00:20:14,240 --> 00:20:16,340
bar and drink beer and pull out

534
00:20:16,340 --> 00:20:18,230
soldering irons and then one night one

535
00:20:18,230 --> 00:20:19,700
of the hotel police came out and yelled

536
00:20:19,700 --> 00:20:21,020
at us for not renting a meeting room

537
00:20:21,020 --> 00:20:23,210
almost threw us out but that's a pretty

538
00:20:23,210 --> 00:20:24,950
elegant place to have a hack session

539
00:20:24,950 --> 00:20:26,120
right you can see the painting in the

540
00:20:26,120 --> 00:20:29,810
back so it's pretty cool and this is

541
00:20:29,810 --> 00:20:31,910
where the see neat tech activity began

542
00:20:31,910 --> 00:20:35,060
so this is also where taking pictures of

543
00:20:35,060 --> 00:20:37,250
crashed firmware began that's a phone we

544
00:20:37,250 --> 00:20:40,010
found on the street in Hamburg but this

545
00:20:40,010 --> 00:20:41,690
is miniatur wunderland and there's

546
00:20:41,690 --> 00:20:44,150
something we saw in Bochum top left is

547
00:20:44,150 --> 00:20:46,640
Peter shoe this car stereo that is the

548
00:20:46,640 --> 00:20:48,950
only video I have on youtube that people

549
00:20:48,950 --> 00:20:51,020
still ask to see we made a video of his

550
00:20:51,020 --> 00:20:53,480
car stereo playing a song and people

551
00:20:53,480 --> 00:20:55,070
just loved that car stereo because it's

552
00:20:55,070 --> 00:20:59,300
sitting in a cardboard box and this is

553
00:20:59,300 --> 00:21:01,880
the last Linux BIOS snapshot I have so

554
00:21:01,880 --> 00:21:04,360
at some point in o8 name change because

555
00:21:04,360 --> 00:21:07,910
true story both Microsoft and son came

556
00:21:07,910 --> 00:21:10,580
to me and said we want to use it you got

557
00:21:10,580 --> 00:21:12,080
to get Linux out of the name we can't

558
00:21:12,080 --> 00:21:13,730
look at it with Linux in the name take

559
00:21:13,730 --> 00:21:15,260
Linux out and we'll take a good hard

560
00:21:15,260 --> 00:21:17,240
look at using it and they did and they

561
00:21:17,240 --> 00:21:21,170
didn't use it so well I say you know we

562
00:21:21,170 --> 00:21:22,730
had our dreams but it didn't quite work

563
00:21:22,730 --> 00:21:24,980
out but you know the thing is at this

564
00:21:24,980 --> 00:21:26,570
point it wasn't Linux because the

565
00:21:26,570 --> 00:21:28,520
remember that big flash part it was way

566
00:21:28,520 --> 00:21:30,320
too small and it wasn't a BIOS

567
00:21:30,320 --> 00:21:31,670
deliberately right we didn't want to

568
00:21:31,670 --> 00:21:37,220
implement a BIOS so at it went damn

569
00:21:37,220 --> 00:21:38,600
burrow 8 remember I said there was only

570
00:21:38,600 --> 00:21:41,120
like a dozen people in Oh 6 this is half

571
00:21:41,120 --> 00:21:43,660
the people who came to the o 8 meeting

572
00:21:43,660 --> 00:21:46,250
we really you know we were on it we were

573
00:21:46,250 --> 00:21:47,840
clear on a downward slope I'll get to

574
00:21:47,840 --> 00:21:49,670
that in a minute we did get a little

575
00:21:49,670 --> 00:21:52,040
talk from word about the FSF you and

576
00:21:52,040 --> 00:21:53,600
some of you might recognize Stephan in

577
00:21:53,600 --> 00:21:55,490
there and a guy on the left on the left

578
00:21:55,490 --> 00:21:57,650
picture is Jourdan Krause who really was

579
00:21:57,650 --> 00:22:00,560
incredibly helpful and supportive until

580
00:22:00,560 --> 00:22:02,980
you went on to other things

581
00:22:02,980 --> 00:22:05,930
2009 is cake and fig so Patrick and

582
00:22:05,930 --> 00:22:07,880
Stefan I met in Hamburg along with this

583
00:22:07,880 --> 00:22:10,730
5,000 person harley-davidson convention

584
00:22:10,730 --> 00:22:12,170
so you're kind of sitting in a coffee

585
00:22:12,170 --> 00:22:13,580
shop and these things are roar

586
00:22:13,580 --> 00:22:16,340
by in circles as you can't take a Harley

587
00:22:16,340 --> 00:22:18,650
too far before it breaks I think so so

588
00:22:18,650 --> 00:22:19,730
it's just kind of rolling around rolling

589
00:22:19,730 --> 00:22:21,290
around and roll around and then we're in

590
00:22:21,290 --> 00:22:22,640
a coffee shop one day and we realized

591
00:22:22,640 --> 00:22:24,020
they pointed all the speakers at us to

592
00:22:24,020 --> 00:22:25,280
chase us away because they didn't like

593
00:22:25,280 --> 00:22:27,230
our soldering iron or something so we

594
00:22:27,230 --> 00:22:28,520
actually would like move a coffee shop

595
00:22:28,520 --> 00:22:30,380
twice a day so we wouldn't get chased

596
00:22:30,380 --> 00:22:33,860
out the coffee the cake config was this

597
00:22:33,860 --> 00:22:35,780
huge improvement in our life but weird

598
00:22:35,780 --> 00:22:37,550
thing one odium complained to us

599
00:22:37,550 --> 00:22:40,130
recently that it's too hard to use so I

600
00:22:40,130 --> 00:22:41,480
don't know what can I say

601
00:22:41,480 --> 00:22:44,840
I think it's fine but we do get that so

602
00:22:44,840 --> 00:22:47,000
kind of the end of the beginning was O 3

603
00:22:47,000 --> 00:22:48,830
because the end of O 3 until let us know

604
00:22:48,830 --> 00:22:50,750
that developer didn't talk comm wasn't

605
00:22:50,750 --> 00:22:52,010
going to really have any information on

606
00:22:52,010 --> 00:22:54,020
how to configure quick paths which meant

607
00:22:54,020 --> 00:22:56,930
we were done in server and then things

608
00:22:56,930 --> 00:22:58,970
kind of went down and then you know 2010

609
00:22:58,970 --> 00:23:00,680
was kind of our near death experience

610
00:23:00,680 --> 00:23:04,430
and we came back so 2009 this is a

611
00:23:04,430 --> 00:23:06,290
retirement party we had four IDI or

612
00:23:06,290 --> 00:23:08,480
cluster that was alphas and uh you know

613
00:23:08,480 --> 00:23:11,480
it kind of went out and nobody was

614
00:23:11,480 --> 00:23:13,190
really pushing on PowerPC so that kind

615
00:23:13,190 --> 00:23:14,450
of went out so we ended up being an

616
00:23:14,450 --> 00:23:18,500
optional x86 miles and you know that was

617
00:23:18,500 --> 00:23:20,510
unfortunate because some endian isms and

618
00:23:20,510 --> 00:23:22,850
they x86 isms did begin to creep in you

619
00:23:22,850 --> 00:23:25,070
can see them but more at a point we were

620
00:23:25,070 --> 00:23:26,540
tied to a chipset world that was closing

621
00:23:26,540 --> 00:23:28,730
right so we locked ourselves in a room

622
00:23:28,730 --> 00:23:30,490
and the doors were all closing on us and

623
00:23:30,490 --> 00:23:33,860
you know Andy was with us for a little

624
00:23:33,860 --> 00:23:35,420
longer but you know at this point Intel

625
00:23:35,420 --> 00:23:38,540
is basically out of there and so I this

626
00:23:38,540 --> 00:23:40,220
was an interesting chart I took all the

627
00:23:40,220 --> 00:23:42,620
get commits and just did a histogram by

628
00:23:42,620 --> 00:23:46,160
deer and you know this is kind of in my

629
00:23:46,160 --> 00:23:48,400
opinion again this is my personal view

630
00:23:48,400 --> 00:23:50,990
that's where Tue started to fall out you

631
00:23:50,990 --> 00:23:52,550
know I mentioned that six million dollar

632
00:23:52,550 --> 00:23:53,150
machine

633
00:23:53,150 --> 00:23:54,560
there was a clone of that there was more

634
00:23:54,560 --> 00:23:56,650
expensive installed here in California

635
00:23:56,650 --> 00:23:59,150
people Indy we wanted Linux by us they

636
00:23:59,150 --> 00:24:00,560
kept getting told they couldn't have it

637
00:24:00,560 --> 00:24:03,230
and then you know in 2010 a bunch of us

638
00:24:03,230 --> 00:24:05,930
took a break I mean I think now Stefan

639
00:24:05,930 --> 00:24:08,870
may correct me but my memory is when he

640
00:24:08,870 --> 00:24:10,280
went to Google his thought was he was

641
00:24:10,280 --> 00:24:12,380
done with coreboot for a long time so

642
00:24:12,380 --> 00:24:14,150
you know but then you see in 2011

643
00:24:14,150 --> 00:24:16,040
Chromebooks kind of come back in so my

644
00:24:16,040 --> 00:24:18,290
opinion this chart makes sense with

645
00:24:18,290 --> 00:24:22,040
those notes I added you know HTC and

646
00:24:22,040 --> 00:24:23,600
Google we're done Linux Networks went

647
00:24:23,600 --> 00:24:26,630
under all the IOT like things that had

648
00:24:26,630 --> 00:24:27,110
been in

649
00:24:27,110 --> 00:24:28,970
and I use x86 things were now armed

650
00:24:28,970 --> 00:24:32,120
things we need to arm so the you know

651
00:24:32,120 --> 00:24:34,220
kind of the the usage was not there

652
00:24:34,220 --> 00:24:36,590
anymore guys like Peter Stuka kept the

653
00:24:36,590 --> 00:24:38,990
lights on but you really can see in that

654
00:24:38,990 --> 00:24:40,820
chart pretty dramatic evidence that

655
00:24:40,820 --> 00:24:45,770
interest had dropped a lot so again this

656
00:24:45,770 --> 00:24:47,270
is my memory stuff I'm telling you those

657
00:24:47,270 --> 00:24:48,799
stories walking down a hallway in

658
00:24:48,799 --> 00:24:50,390
somebody system hey you're the coreboot

659
00:24:50,390 --> 00:24:51,830
guy aren't you and he says yeah and he

660
00:24:51,830 --> 00:24:53,929
says can you get this working on a

661
00:24:53,929 --> 00:24:55,309
Chromebook in like six months

662
00:24:55,309 --> 00:24:59,299
and uh you know he pulled it off and so

663
00:24:59,299 --> 00:25:03,169
so in 2012 all the x86 Chromebooks that

664
00:25:03,169 --> 00:25:05,059
came out from then and afterward

665
00:25:05,059 --> 00:25:08,120
coreboot and then in 2013 when multi

666
00:25:08,120 --> 00:25:10,400
architect Shane multi architecture came

667
00:25:10,400 --> 00:25:12,380
back with the arm you know and from that

668
00:25:12,380 --> 00:25:14,600
point on things things just kind of took

669
00:25:14,600 --> 00:25:19,010
off and we did some other development so

670
00:25:19,010 --> 00:25:20,419
I did this thing called the fast user

671
00:25:20,419 --> 00:25:22,040
interface here's the deal on a

672
00:25:22,040 --> 00:25:23,990
Chromebook in developer mode it runs the

673
00:25:23,990 --> 00:25:27,020
the VGA BIOS to get graphics up in

674
00:25:27,020 --> 00:25:29,210
normal mode Linux Springs graphics up

675
00:25:29,210 --> 00:25:30,710
and it bothered me that there is two

676
00:25:30,710 --> 00:25:32,750
different paths for bringing graphics up

677
00:25:32,750 --> 00:25:34,970
so I mucked about with Koch and Ellie

678
00:25:34,970 --> 00:25:38,030
for a while and then Simon helped me out

679
00:25:38,030 --> 00:25:39,890
with the kernel side and infer cron made

680
00:25:39,890 --> 00:25:42,020
the whole thing you know legible code

681
00:25:42,020 --> 00:25:45,770
and then we'll finally we had we had a

682
00:25:45,770 --> 00:25:47,480
you know startup in core boot and the

683
00:25:47,480 --> 00:25:51,679
surprise was my thinking was the fastest

684
00:25:51,679 --> 00:25:54,559
graphics startup will be Linux second

685
00:25:54,559 --> 00:25:56,720
fastest coreboot slowest to be the VGA

686
00:25:56,720 --> 00:25:59,179
BIOS I was completely wrong the surprise

687
00:25:59,179 --> 00:26:01,010
was the fastest startup was always in

688
00:26:01,010 --> 00:26:03,049
core booth so we did this little movie

689
00:26:03,049 --> 00:26:06,020
and I'm gonna let you see take the guess

690
00:26:06,020 --> 00:26:07,340
which one is the core booth based

691
00:26:07,340 --> 00:26:11,530
graphics in source oh no

692
00:26:12,190 --> 00:26:14,710
well you get the point

693
00:26:14,710 --> 00:26:17,059
so what on the right is the core boot

694
00:26:17,059 --> 00:26:20,299
one and it's interesting that didn't

695
00:26:20,299 --> 00:26:23,780
work well at all I guess it was loading

696
00:26:23,780 --> 00:26:27,020
and actually on some Chromebooks the

697
00:26:27,020 --> 00:26:29,720
core booed based graphics code open

698
00:26:29,720 --> 00:26:32,600
source was five seconds faster than than

699
00:26:32,600 --> 00:26:34,120
doing the graphics start than a kernel

700
00:26:34,120 --> 00:26:39,639
so that was a result I did not expect

701
00:26:39,670 --> 00:26:43,040
then it got to be 2014 and Peter Stuka

702
00:26:43,040 --> 00:26:48,020
wired me up this thing that's a 16 mega

703
00:26:48,020 --> 00:26:52,730
it went into a kg PE D 16 and here's the

704
00:26:52,730 --> 00:26:53,330
funny part

705
00:26:53,330 --> 00:26:54,710
I had Linux and I had this thing called

706
00:26:54,710 --> 00:26:57,140
you root was his user mode user land and

707
00:26:57,140 --> 00:26:59,720
go I've been running Hakeem you for a

708
00:26:59,720 --> 00:27:02,950
year or so at that point we dropped that

709
00:27:02,950 --> 00:27:09,560
unchanged thing into its a connector we

710
00:27:09,560 --> 00:27:14,290
dropped that thing unchanged in - uh-huh

711
00:27:14,920 --> 00:27:20,030
sorry trying to fix the graphics hey we

712
00:27:20,030 --> 00:27:21,560
dropped that thing completely unchanged

713
00:27:21,560 --> 00:27:22,910
into the hardware and it worked first

714
00:27:22,910 --> 00:27:25,120
time I wanted to see how it would fail

715
00:27:25,120 --> 00:27:27,290
but it was kind of a view of the power

716
00:27:27,290 --> 00:27:29,480
of you know using Linux is your firmware

717
00:27:29,480 --> 00:27:31,280
that just worked and it was the same

718
00:27:31,280 --> 00:27:34,670
image later I used in a minnow and in a

719
00:27:34,670 --> 00:27:36,410
server right literally the same image

720
00:27:36,410 --> 00:27:38,900
and it just worked so when you when you

721
00:27:38,900 --> 00:27:41,240
use Linux this firmware a lot of effort

722
00:27:41,240 --> 00:27:43,550
just disappears from your life because

723
00:27:43,550 --> 00:27:45,350
there's no such thing as a forward port

724
00:27:45,350 --> 00:27:51,410
just about and you know so so it prog

725
00:27:51,410 --> 00:27:53,270
embedded Linux conference I was there

726
00:27:53,270 --> 00:27:56,480
with a company called horizon and we had

727
00:27:56,480 --> 00:27:58,370
a Facebook node they're running Linux

728
00:27:58,370 --> 00:28:01,580
boot and a sinus that kicked me and you

729
00:28:01,580 --> 00:28:03,080
know we used to use the kick me sign at

730
00:28:03,080 --> 00:28:04,400
supercomputing because the idea is just

731
00:28:04,400 --> 00:28:06,260
come up and hit reset on the node and

732
00:28:06,260 --> 00:28:07,520
watch it boot real fast

733
00:28:07,520 --> 00:28:09,200
and that's when I realized that the kick

734
00:28:09,200 --> 00:28:10,880
me sign did not translate to many other

735
00:28:10,880 --> 00:28:12,740
cultures nobody knew what the hell we

736
00:28:12,740 --> 00:28:14,300
were talking about right

737
00:28:14,300 --> 00:28:16,100
it's like something's that kick me what

738
00:28:16,100 --> 00:28:17,030
do you want me to kick I don't

739
00:28:17,030 --> 00:28:18,980
understand so so I had to stand there

740
00:28:18,980 --> 00:28:20,510
and say push reset and watch it real

741
00:28:20,510 --> 00:28:20,930
fast

742
00:28:20,930 --> 00:28:24,050
number here that thing running UEFI over

743
00:28:24,050 --> 00:28:25,550
eight minutes that thing running Linux

744
00:28:25,550 --> 00:28:28,580
boot 20 seconds so you know in fact that

745
00:28:28,580 --> 00:28:31,670
thing booted net booted over 100 megabit

746
00:28:31,670 --> 00:28:33,590
Ethernet from an ARP I so fast

747
00:28:33,590 --> 00:28:35,210
that we thought we had a bug for awhile

748
00:28:35,210 --> 00:28:36,830
we didn't realize that it was booting so

749
00:28:36,830 --> 00:28:38,800
fast we hadn't seen the net boot happen

750
00:28:38,800 --> 00:28:43,190
so you know it and I never get tired of

751
00:28:43,190 --> 00:28:44,510
fastboot because I don't see it that

752
00:28:44,510 --> 00:28:46,490
often but that was a really nice example

753
00:28:46,490 --> 00:28:49,610
of why it's good and then finally this

754
00:28:49,610 --> 00:28:51,110
is from the Facebook page this is the

755
00:28:51,110 --> 00:28:53,450
part I really like

756
00:28:53,450 --> 00:28:55,670
those three words coreboot you routed

757
00:28:55,670 --> 00:28:58,940
Linux boot right so Arista right kind of

758
00:28:58,940 --> 00:29:01,190
big switch company and it's not well

759
00:29:01,190 --> 00:29:02,960
known but a wrister I actually ran Linux

760
00:29:02,960 --> 00:29:05,540
files from the stork and then had moved

761
00:29:05,540 --> 00:29:07,820
to coreboot of course they moved to this

762
00:29:07,820 --> 00:29:09,590
totally open source thing working with

763
00:29:09,590 --> 00:29:14,840
Facebook so thank you Facebook but

764
00:29:14,840 --> 00:29:16,460
there's also a new direction this year

765
00:29:16,460 --> 00:29:19,070
there's a project that we started called

766
00:29:19,070 --> 00:29:21,890
or boot or boots written and rust or

767
00:29:21,890 --> 00:29:24,920
boot is coreboot without see you know

768
00:29:24,920 --> 00:29:26,450
see he's been a good friend of ours for

769
00:29:26,450 --> 00:29:27,740
50 years it's time to give it a little

770
00:29:27,740 --> 00:29:30,800
retirement but we like the Corbett

771
00:29:30,800 --> 00:29:32,540
directory layout tools and assembly

772
00:29:32,540 --> 00:29:34,580
there's a lot of good stuff in coreboot

773
00:29:34,580 --> 00:29:36,560
to like so basically what we do is we

774
00:29:36,560 --> 00:29:38,090
forked coreboot remove to anything that

775
00:29:38,090 --> 00:29:39,830
looks like a thot hoc and took it from

776
00:29:39,830 --> 00:29:42,830
there talk to Ryan O'Leary Oregon Sean

777
00:29:42,830 --> 00:29:44,980
or prachi here they're working on it and

778
00:29:44,980 --> 00:29:48,550
we were really delighted with rust

779
00:29:48,550 --> 00:29:50,810
now it's supposed to say two days but

780
00:29:50,810 --> 00:29:52,430
I've got a typo in two days Ryan and I

781
00:29:52,430 --> 00:29:56,090
got the arm v7 like EMU working you'll

782
00:29:56,090 --> 00:29:57,770
see his talk here in the next day or two

783
00:29:57,770 --> 00:30:00,560
and then you know a few weeks and sigh

784
00:30:00,560 --> 00:30:02,870
five high five U is up and working and

785
00:30:02,870 --> 00:30:07,000
we're loading a kernel I think so

786
00:30:07,000 --> 00:30:09,080
so here's the part I really wanted to

787
00:30:09,080 --> 00:30:10,490
get to what do we learned because it's a

788
00:30:10,490 --> 00:30:12,110
20-year project and I have personal

789
00:30:12,110 --> 00:30:14,600
views about what we learned and I think

790
00:30:14,600 --> 00:30:16,750
what's interesting is we almost died

791
00:30:16,750 --> 00:30:19,340
right so we had this great early success

792
00:30:19,340 --> 00:30:21,920
you can go to Linux Journal in 2004 it

793
00:30:21,920 --> 00:30:23,900
was amazed there are probably five

794
00:30:23,900 --> 00:30:25,490
server vendors in there that said they

795
00:30:25,490 --> 00:30:27,110
work with Linux files they were all lion

796
00:30:27,110 --> 00:30:29,300
but they said they work with Linux files

797
00:30:29,300 --> 00:30:33,530
so at least they cared but you know but

798
00:30:33,530 --> 00:30:35,570
so we had that success and after that it

799
00:30:35,570 --> 00:30:37,490
kind of really went down for a while and

800
00:30:37,490 --> 00:30:39,920
and we had really great people in terms

801
00:30:39,920 --> 00:30:41,420
of the true believers but you got to

802
00:30:41,420 --> 00:30:42,650
have companies and we didn't have the

803
00:30:42,650 --> 00:30:45,590
companies so we almost died and then

804
00:30:45,590 --> 00:30:47,150
Chrome OS at least in my view brought us

805
00:30:47,150 --> 00:30:51,830
back so I think sustainable projects

806
00:30:51,830 --> 00:30:53,540
encourage leadership transition I was

807
00:30:53,540 --> 00:30:56,120
the BD FL for for about four years and I

808
00:30:56,120 --> 00:30:57,080
was ready to be done

809
00:30:57,080 --> 00:31:01,550
luckily Stefan stepped up in O six we

810
00:31:01,550 --> 00:31:04,580
had a lot of interesting days there you

811
00:31:04,580 --> 00:31:06,110
got to tolerate different ways different

812
00:31:06,110 --> 00:31:06,860
cultures

813
00:31:06,860 --> 00:31:08,450
press themselves but if you have toxic

814
00:31:08,450 --> 00:31:09,770
people get rid of them as soon as you

815
00:31:09,770 --> 00:31:11,990
can or at least moderate them you've got

816
00:31:11,990 --> 00:31:14,299
to be very very careful I've seen one

817
00:31:14,299 --> 00:31:16,670
community completely destroyed by three

818
00:31:16,670 --> 00:31:18,679
or four bad actors I think the risk five

819
00:31:18,679 --> 00:31:20,330
mailing-list are having a little trouble

820
00:31:20,330 --> 00:31:22,100
now because they just don't want to do

821
00:31:22,100 --> 00:31:25,370
what they got to do emails horrible

822
00:31:25,370 --> 00:31:27,110
horrible horrible medium the reason

823
00:31:27,110 --> 00:31:28,309
there are best-selling authors is

824
00:31:28,309 --> 00:31:29,630
because none of us know how to write I

825
00:31:29,630 --> 00:31:32,000
mean I'll save speak for me anyway so

826
00:31:32,000 --> 00:31:33,740
you really want to get in touch with

827
00:31:33,740 --> 00:31:35,030
people in person when you're having a

828
00:31:35,030 --> 00:31:37,220
problem because I'll you know email

829
00:31:37,220 --> 00:31:42,470
sucks so relation control not a lot of

830
00:31:42,470 --> 00:31:44,120
people know what we started out as CBS

831
00:31:44,120 --> 00:31:45,860
probably no one here remembers what that

832
00:31:45,860 --> 00:31:48,559
is on SourceForge we took this weird

833
00:31:48,559 --> 00:31:50,570
detour through arc which is now called

834
00:31:50,570 --> 00:31:54,320
bizarre which is the right name then we

835
00:31:54,320 --> 00:31:56,210
moved the SVN for a couple of years that

836
00:31:56,210 --> 00:31:57,950
did well but it was really clear at some

837
00:31:57,950 --> 00:31:59,450
point that get was the way to go and

838
00:31:59,450 --> 00:32:00,860
that happened around 2010 I think

839
00:32:00,860 --> 00:32:02,690
Patrick's one who did that but the cool

840
00:32:02,690 --> 00:32:04,940
thing that Stefan did I still don't know

841
00:32:04,940 --> 00:32:06,890
how he did it is he kind of got the

842
00:32:06,890 --> 00:32:08,450
revision history all the way back almost

843
00:32:08,450 --> 00:32:10,340
to the beginning so you can check out

844
00:32:10,340 --> 00:32:11,900
version 1 and look around I had a lot of

845
00:32:11,900 --> 00:32:13,520
fun doing that you know when I was

846
00:32:13,520 --> 00:32:16,340
trying to get this talk together you can

847
00:32:16,340 --> 00:32:17,809
still find people in Google who will

848
00:32:17,809 --> 00:32:19,640
tell you how horrible git is and why our

849
00:32:19,640 --> 00:32:22,910
internal repo system is far better don't

850
00:32:22,910 --> 00:32:24,470
think that cuz we usually get this

851
00:32:24,470 --> 00:32:26,530
question has been resolved it hasn't

852
00:32:26,530 --> 00:32:29,780
build systems all the bad stuff was my

853
00:32:29,780 --> 00:32:32,090
fault we started out with his BST like

854
00:32:32,090 --> 00:32:33,559
build system because I like the BSD

855
00:32:33,559 --> 00:32:35,990
build system then we had this Python

856
00:32:35,990 --> 00:32:38,840
tool and it just got awful and Patrick

857
00:32:38,840 --> 00:32:41,510
and a lot of it is Patrick but you know

858
00:32:41,510 --> 00:32:44,090
really helped no build system is forever

859
00:32:44,090 --> 00:32:45,710
we have build systems and all the

860
00:32:45,710 --> 00:32:48,049
arguments all the time where I work the

861
00:32:48,049 --> 00:32:49,910
one thing I warn you against the thing I

862
00:32:49,910 --> 00:32:51,799
see all the time is this build system is

863
00:32:51,799 --> 00:32:53,630
really complicated let's go to a more

864
00:32:53,630 --> 00:32:55,040
complicated one to make it easier to

865
00:32:55,040 --> 00:32:57,700
understand never seen at work okay so

866
00:32:57,700 --> 00:33:00,679
you know I'm a big fan at the moment of

867
00:33:00,679 --> 00:33:02,809
cargo which is the rust thing but it is

868
00:33:02,809 --> 00:33:04,190
pretty complicated so I don't really

869
00:33:04,190 --> 00:33:07,970
know the answer code perfection is the

870
00:33:07,970 --> 00:33:09,080
enemy of the good

871
00:33:09,080 --> 00:33:10,850
every project struggles with this you

872
00:33:10,850 --> 00:33:13,160
were just struggling with it today what

873
00:33:13,160 --> 00:33:14,929
do you when you take code that really

874
00:33:14,929 --> 00:33:16,130
isn't written the way you'd like to see

875
00:33:16,130 --> 00:33:17,900
it written but you don't have time to

876
00:33:17,900 --> 00:33:21,320
fix it and you kind of need

877
00:33:21,320 --> 00:33:24,950
this is really a really hard problem I'm

878
00:33:24,950 --> 00:33:26,390
beginning to think we need to like if

879
00:33:26,390 --> 00:33:28,220
someone really slams a piece of code

880
00:33:28,220 --> 00:33:30,410
maybe you should ask them to take

881
00:33:30,410 --> 00:33:32,270
responsibility for helping you know

882
00:33:32,270 --> 00:33:34,490
improve it I'm not quite sure what the

883
00:33:34,490 --> 00:33:35,780
answer is I just know that it's a

884
00:33:35,780 --> 00:33:39,140
problem in in in every project you need

885
00:33:39,140 --> 00:33:41,030
to encourage experiment you need to

886
00:33:41,030 --> 00:33:42,320
encourage things you think are stupid

887
00:33:42,320 --> 00:33:44,090
but on the other hand nobody gets to

888
00:33:44,090 --> 00:33:46,490
break the tree so just something to

889
00:33:46,490 --> 00:33:48,320
think about

890
00:33:48,320 --> 00:33:50,480
we also learn we don't always learn so

891
00:33:50,480 --> 00:33:52,940
we had the coreboot ports the risk 5 in

892
00:33:52,940 --> 00:33:56,210
14 15 16 17 18 and 19 where's Phillip oh

893
00:33:56,210 --> 00:34:01,820
yeah and Sam Hal in 2019 we got the BIOS

894
00:34:01,820 --> 00:34:04,460
again so there's this model called SPI

895
00:34:04,460 --> 00:34:07,430
soup supervisor binary interface and the

896
00:34:07,430 --> 00:34:08,899
idea is you're running in kernel mode

897
00:34:08,899 --> 00:34:10,340
and you put a number in a register and

898
00:34:10,340 --> 00:34:11,690
then you do something you trap to a

899
00:34:11,690 --> 00:34:13,639
different protection mode and you do a

900
00:34:13,639 --> 00:34:15,980
full save of all the context and then

901
00:34:15,980 --> 00:34:17,360
you do something you need for the answer

902
00:34:17,360 --> 00:34:18,980
and a register in your return right

903
00:34:18,980 --> 00:34:21,050
plastic BIOS model nothing new there

904
00:34:21,050 --> 00:34:24,168
it's 1979 all over again well guess what

905
00:34:24,168 --> 00:34:25,879
doing a TLB flush that way is really

906
00:34:25,879 --> 00:34:27,469
horribly slow and impacts your

907
00:34:27,469 --> 00:34:28,879
performance negatively in your Linux

908
00:34:28,879 --> 00:34:32,060
kernel so this is kind of a discouraging

909
00:34:32,060 --> 00:34:33,560
thing to see happen because we spend

910
00:34:33,560 --> 00:34:35,719
five years talking to the people in that

911
00:34:35,719 --> 00:34:37,070
community about why this was going to

912
00:34:37,070 --> 00:34:40,280
suck and we kind of look this is why we

913
00:34:40,280 --> 00:34:41,810
lost Jonathan Noyes Scheffer right he

914
00:34:41,810 --> 00:34:44,690
finally just decided he was sort of done

915
00:34:44,690 --> 00:34:46,340
with you know runtime firmware and n

916
00:34:46,340 --> 00:34:50,179
mode so orbit is gonna take a very

917
00:34:50,179 --> 00:34:51,679
different approach come talk to us about

918
00:34:51,679 --> 00:34:53,480
it how we're gonna do it but as of now

919
00:34:53,480 --> 00:34:55,030
we're going to run kernel and M mode

920
00:34:55,030 --> 00:34:59,150
that's gonna be interesting I think but

921
00:34:59,150 --> 00:35:00,650
here's the thing we already learned open

922
00:35:00,650 --> 00:35:03,560
source wins right so back in the day in

923
00:35:03,560 --> 00:35:05,750
like 1999 I had of this thing oh yeah

924
00:35:05,750 --> 00:35:07,280
but open source always wins and I really

925
00:35:07,280 --> 00:35:09,560
began to doubt that by 2009 I was really

926
00:35:09,560 --> 00:35:12,020
concerned that in spite of everything

927
00:35:12,020 --> 00:35:14,750
everybody had done these sort of IP

928
00:35:14,750 --> 00:35:16,550
walls that had been set up we're gonna

929
00:35:16,550 --> 00:35:20,210
we're gonna kill us right and yes there

930
00:35:20,210 --> 00:35:20,720
are blobs

931
00:35:20,720 --> 00:35:23,300
I've got no err no I'm not gonna claim

932
00:35:23,300 --> 00:35:24,860
there aren't blobs but if you really

933
00:35:24,860 --> 00:35:27,530
really really look at sort of the number

934
00:35:27,530 --> 00:35:30,410
of blobs they're declining over time we

935
00:35:30,410 --> 00:35:32,360
do have new systems like Chris 5 where

936
00:35:32,360 --> 00:35:34,610
we can avoid blobs entirely so

937
00:35:34,610 --> 00:35:38,000
or later it you know I don't care how

938
00:35:38,000 --> 00:35:39,590
big your company is or how smart your

939
00:35:39,590 --> 00:35:40,910
company is you're not as smart as the

940
00:35:40,910 --> 00:35:44,000
rest of the planet so this is kind of

941
00:35:44,000 --> 00:35:45,920
the core argument about why open-source

942
00:35:45,920 --> 00:35:48,650
wins and with that I'll stop because I

943
00:35:48,650 --> 00:35:50,420
owe and I wanted to thank the following

944
00:35:50,420 --> 00:35:53,260
wonderful companies for supporting us

945
00:35:53,260 --> 00:35:55,490
but I did want to leave room for some

946
00:35:55,490 --> 00:35:57,800
questions and so that's my 20-year

947
00:35:57,800 --> 00:36:01,190
history leaving lots of details out so

948
00:36:01,190 --> 00:36:29,510
yeah an environment doesn't suck so so

949
00:36:29,510 --> 00:36:31,580
that I never have been happy with the

950
00:36:31,580 --> 00:36:33,890
power management on the lakes on the

951
00:36:33,890 --> 00:36:37,850
Linux laptops and I really don't like

952
00:36:37,850 --> 00:36:39,620
the fact that I'm using the Mac but I

953
00:36:39,620 --> 00:36:41,990
and for years I just only used

954
00:36:41,990 --> 00:36:43,130
Chromebooks because I thought they were

955
00:36:43,130 --> 00:36:45,080
great until I could no longer plug more

956
00:36:45,080 --> 00:36:48,260
memory and disk into them but yeah I

957
00:36:48,260 --> 00:36:51,320
would like to get onto something that is

958
00:36:51,320 --> 00:36:53,930
running I actually like to get on

959
00:36:53,930 --> 00:36:55,400
something run or boot to be honest but

960
00:36:55,400 --> 00:36:59,750
yeah Corbeau to be ok - yes not gonna

961
00:36:59,750 --> 00:37:01,430
happen for a long time but yeah well

962
00:37:01,430 --> 00:37:04,280
actually so if you watch if you watch

963
00:37:04,280 --> 00:37:05,570
the number of people creating your wrist

964
00:37:05,570 --> 00:37:08,600
5 silicon it's actually exploding so I

965
00:37:08,600 --> 00:37:10,160
shouldn't say that it could happen very

966
00:37:10,160 --> 00:37:11,450
very quickly in the next year or two

967
00:37:11,450 --> 00:37:19,480
I've been amazed any other questions Wow

968
00:37:19,480 --> 00:37:21,890
alright well the one thing David

969
00:37:21,890 --> 00:37:23,390
reminding me of if we kind of staged an

970
00:37:23,390 --> 00:37:25,220
intern death and it was pretty good

971
00:37:25,220 --> 00:37:27,800
picture so go find him and the other

972
00:37:27,800 --> 00:37:29,210
thing I forgot to mention he was

973
00:37:29,210 --> 00:37:31,010
supposed to yell it out one of the fun

974
00:37:31,010 --> 00:37:33,080
parts of the geode port for OLPC there

975
00:37:33,080 --> 00:37:34,610
actually we found a register called

976
00:37:34,610 --> 00:37:38,390
bizarro and it's kind of hard to

977
00:37:38,390 --> 00:37:40,220
describe how painful that ships that was

978
00:37:40,220 --> 00:37:43,490
but maybe that is a hint it was really

979
00:37:43,490 --> 00:37:45,440
amazing how hard to little chips can be

980
00:37:45,440 --> 00:37:48,020
to configure and bring up but oh hello

981
00:37:48,020 --> 00:37:48,559
came in one

982
00:37:48,559 --> 00:37:52,099
day and said I've been dreaming MSRs in

983
00:37:52,099 --> 00:37:57,229
hex and he said this is my last port so

984
00:37:57,229 --> 00:37:59,390
if that's it then I'm done no other

985
00:37:59,390 --> 00:38:02,620
questions okay thanks

986
00:38:02,620 --> 00:38:08,050
[Applause]

987
00:38:08,050 --> 00:38:15,730
[Music]

