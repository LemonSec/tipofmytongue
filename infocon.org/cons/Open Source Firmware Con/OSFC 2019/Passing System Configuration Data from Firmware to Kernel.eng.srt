1
00:00:03,190 --> 00:00:06,259
[Music]

2
00:00:07,250 --> 00:00:10,740
so passing config data from the firmware

3
00:00:10,740 --> 00:00:12,509
to the operating system for example

4
00:00:12,509 --> 00:00:16,770
training data for memory as on Intel

5
00:00:16,770 --> 00:00:19,080
platforms is currently only possible for

6
00:00:19,080 --> 00:00:24,529
through proprietary components so

7
00:00:24,529 --> 00:00:27,210
opening an app would make the

8
00:00:27,210 --> 00:00:30,090
development on many many platforms way

9
00:00:30,090 --> 00:00:34,280
easier so that's actually been done or

10
00:00:34,280 --> 00:00:38,910
at least in the works and so next two

11
00:00:38,910 --> 00:00:41,610
speakers are going to introduce you to

12
00:00:41,610 --> 00:00:44,190
that concept so please give a warm round

13
00:00:44,190 --> 00:00:49,099
of applause to Zarate and

14
00:00:52,879 --> 00:00:54,539
good afternoon

15
00:00:54,539 --> 00:00:57,270
I know it's lunchtime I will try to make

16
00:00:57,270 --> 00:00:59,160
it quick so that we can get to lunch

17
00:00:59,160 --> 00:01:03,629
quicker anyway so this is the same talk

18
00:01:03,629 --> 00:01:08,820
we gave in both CP in San Jose so we

19
00:01:08,820 --> 00:01:10,290
have a little bit more information so

20
00:01:10,290 --> 00:01:11,880
that's why I brought I mean sorry they

21
00:01:11,880 --> 00:01:14,060
actually came with me to present this

22
00:01:14,060 --> 00:01:17,130
additional data what we have okay so

23
00:01:17,130 --> 00:01:21,450
let's start of course so everybody knows

24
00:01:21,450 --> 00:01:23,040
I mean we are here because we know the

25
00:01:23,040 --> 00:01:24,840
advantages of open standards and open

26
00:01:24,840 --> 00:01:29,220
source right like I mean he introduced

27
00:01:29,220 --> 00:01:33,150
us so basically there are we have some

28
00:01:33,150 --> 00:01:35,250
standard I mean many standards now but

29
00:01:35,250 --> 00:01:37,619
there are some gaps we find particularly

30
00:01:37,619 --> 00:01:40,350
in terms of like training data memory

31
00:01:40,350 --> 00:01:43,920
training data how we get it so this is

32
00:01:43,920 --> 00:01:46,799
mainly about that and how we can close

33
00:01:46,799 --> 00:01:51,710
that gap and going forward let's see

34
00:01:51,710 --> 00:01:56,210
okay so we have some I mean standard on

35
00:01:56,210 --> 00:02:00,750
DMT F like sm bias red red fish and we

36
00:02:00,750 --> 00:02:02,310
have a CPI tables and there are so many

37
00:02:02,310 --> 00:02:04,560
different tables related to memory and

38
00:02:04,560 --> 00:02:06,750
all the different things and we also

39
00:02:06,750 --> 00:02:09,538
have jtech specifications on DMS PD data

40
00:02:09,538 --> 00:02:11,879
so these are all standards we have

41
00:02:11,879 --> 00:02:13,290
already

42
00:02:13,290 --> 00:02:15,739
and there is a gap like I mentioned

43
00:02:15,739 --> 00:02:18,120
particularly the DRAM demon training

44
00:02:18,120 --> 00:02:20,640
data so we know that in the reference

45
00:02:20,640 --> 00:02:22,680
code actually there's most of the

46
00:02:22,680 --> 00:02:25,620
training and that training data is

47
00:02:25,620 --> 00:02:27,890
usually passed to the next layer and

48
00:02:27,890 --> 00:02:31,530
it's up to many times we have to just

49
00:02:31,530 --> 00:02:34,680
look at the bias or the firmware logs to

50
00:02:34,680 --> 00:02:36,659
figure out what is the training data we

51
00:02:36,659 --> 00:02:39,780
get right so that's okay if you are

52
00:02:39,780 --> 00:02:42,329
doing like once in a while like let's

53
00:02:42,329 --> 00:02:44,250
say bring up and things but if we are

54
00:02:44,250 --> 00:02:47,150
looking at a large-scale deployment and

55
00:02:47,150 --> 00:02:49,049
monitoring different things then that's

56
00:02:49,049 --> 00:02:53,629
not that's not scalable basically right

57
00:02:53,629 --> 00:02:57,299
so basic proposal is a mean proportional

58
00:02:57,299 --> 00:03:00,030
is basically to get a a CPI table and

59
00:03:00,030 --> 00:03:03,989
make it more flexible so that right now

60
00:03:03,989 --> 00:03:07,470
we are in the ddr4 and then let's say we

61
00:03:07,470 --> 00:03:09,989
ddr5 and also like different training

62
00:03:09,989 --> 00:03:12,299
data not only like memory right the bias

63
00:03:12,299 --> 00:03:15,989
actually does a lot of things in the

64
00:03:15,989 --> 00:03:19,379
earlier installation stage so we want to

65
00:03:19,379 --> 00:03:22,709
get this out so that it can be

66
00:03:22,709 --> 00:03:27,120
expandable to different data set so

67
00:03:27,120 --> 00:03:29,400
that's the main point we are trying to

68
00:03:29,400 --> 00:03:34,019
make here okay again so what what is the

69
00:03:34,019 --> 00:03:36,780
usage case so one is the dim repair

70
00:03:36,780 --> 00:03:42,209
workflow and another way I mean like I

71
00:03:42,209 --> 00:03:44,609
said to get a holistic view of data

72
00:03:44,609 --> 00:03:48,629
center operations probably I will we go

73
00:03:48,629 --> 00:03:50,639
through the next explanation about what

74
00:03:50,639 --> 00:03:52,739
we miss and what we have then I can

75
00:03:52,739 --> 00:03:55,949
explain you more detail on what what

76
00:03:55,949 --> 00:03:59,159
flow cases I want to talk about and that

77
00:03:59,159 --> 00:04:03,828
sorry we talk about the next things

78
00:04:07,870 --> 00:04:11,379
thank you ever so basically uh as he

79
00:04:11,379 --> 00:04:15,700
mentioned right there's a lot of dim

80
00:04:15,700 --> 00:04:19,660
specific training data that needs to be

81
00:04:19,660 --> 00:04:22,690
exposed to the operating system entities

82
00:04:22,690 --> 00:04:25,090
so they can make decisions based on the

83
00:04:25,090 --> 00:04:29,080
margining whether atom is close to the

84
00:04:29,080 --> 00:04:31,630
margin or whether it just no healthy and

85
00:04:31,630 --> 00:04:34,330
things like that so there are a bunch of

86
00:04:34,330 --> 00:04:38,790
information that needs to get passed but

87
00:04:38,790 --> 00:04:41,380
apart from that is also a speedy

88
00:04:41,380 --> 00:04:43,229
information that needs to get passed so

89
00:04:43,229 --> 00:04:45,850
the voice entities can go and directly

90
00:04:45,850 --> 00:04:50,350
read this PD data from the Dems but the

91
00:04:50,350 --> 00:04:52,570
problem with that one is we have

92
00:04:52,570 --> 00:04:54,250
something called closed-loop thermal

93
00:04:54,250 --> 00:04:56,410
throttling so the memory controller

94
00:04:56,410 --> 00:05:00,820
keeps polling for the using the SM bus

95
00:05:00,820 --> 00:05:04,720
to go read the you know key salt or the

96
00:05:04,720 --> 00:05:06,490
temperature sensor and I to the

97
00:05:06,490 --> 00:05:08,910
throttling so that bus has taken over in

98
00:05:08,910 --> 00:05:12,760
runtime so when BMC or worse entities

99
00:05:12,760 --> 00:05:15,400
want to go and talk to it and he did

100
00:05:15,400 --> 00:05:16,900
read the SP information it's not

101
00:05:16,900 --> 00:05:19,020
possible right so a better way for it

102
00:05:19,020 --> 00:05:22,139
for this data to get exposed is by

103
00:05:22,139 --> 00:05:25,479
surfacing this by in by a standard

104
00:05:25,479 --> 00:05:31,240
mechanism so it has of course as the SPD

105
00:05:31,240 --> 00:05:33,639
is yet expanded right we all know how

106
00:05:33,639 --> 00:05:35,229
they all look like but they keep

107
00:05:35,229 --> 00:05:38,169
evolving for different technologies as

108
00:05:38,169 --> 00:05:46,870
well so even you know if you look at you

109
00:05:46,870 --> 00:05:48,880
know when the memory controller comes up

110
00:05:48,880 --> 00:05:53,380
and it trains memory for different

111
00:05:53,380 --> 00:05:55,510
configurations different memory vendors

112
00:05:55,510 --> 00:05:57,099
daemon vendors so these things will

113
00:05:57,099 --> 00:05:59,349
change right based on platform you can

114
00:05:59,349 --> 00:06:01,330
do it for one platform and scale for

115
00:06:01,330 --> 00:06:03,010
multiple platforms its platform specific

116
00:06:03,010 --> 00:06:07,630
data so and then basically MRC goes

117
00:06:07,630 --> 00:06:09,190
through the whole thing it will train it

118
00:06:09,190 --> 00:06:10,870
will find healthy items it does post

119
00:06:10,870 --> 00:06:14,500
package repair it can go and disable

120
00:06:14,500 --> 00:06:17,229
some channels if it needs to or offline

121
00:06:17,229 --> 00:06:19,390
some number if it needs to and then it

122
00:06:19,390 --> 00:06:20,249
will

123
00:06:20,249 --> 00:06:22,769
get a hand off block and it passes it on

124
00:06:22,769 --> 00:06:25,229
to the next stage of form we're right

125
00:06:25,229 --> 00:06:28,699
and basically this hob is then used to

126
00:06:28,699 --> 00:06:32,429
build your ACPI tables you are some bias

127
00:06:32,429 --> 00:06:35,429
tables and things like that and no we

128
00:06:35,429 --> 00:06:38,459
have generic things like an OS fact

129
00:06:38,459 --> 00:06:41,219
table a slightly table for numa

130
00:06:41,219 --> 00:06:45,589
descriptions we have HVAC table

131
00:06:45,589 --> 00:06:48,029
heterogeneous memory attributes table we

132
00:06:48,029 --> 00:06:50,789
have n feet table things like that this

133
00:06:50,789 --> 00:06:53,849
all describes the memory topology of the

134
00:06:53,849 --> 00:06:56,669
system but they don't describe the

135
00:06:56,669 --> 00:06:59,729
memory timing parameters right so what

136
00:06:59,729 --> 00:07:02,999
we have is we do have a table called a

137
00:07:02,999 --> 00:07:07,199
beaded table it's called a bias data

138
00:07:07,199 --> 00:07:13,289
area HB a table right and that table is

139
00:07:13,289 --> 00:07:16,519
basically today is in a proprietary form

140
00:07:16,519 --> 00:07:19,589
so now you know the the firmware

141
00:07:19,589 --> 00:07:23,189
basically builds a CPI table the

142
00:07:23,189 --> 00:07:24,899
assemble our stables things like that

143
00:07:24,899 --> 00:07:27,869
but the BMC has to go and read from the

144
00:07:27,869 --> 00:07:29,849
DIMM modules or directly read from the

145
00:07:29,849 --> 00:07:31,409
memory controller which as I said before

146
00:07:31,409 --> 00:07:36,509
it's not possible with CLT T so although

147
00:07:36,509 --> 00:07:40,469
voices or drivers can it's also go talk

148
00:07:40,469 --> 00:07:42,659
to memory controller or SPD modules

149
00:07:42,659 --> 00:07:46,439
directly so today what we have here is

150
00:07:46,439 --> 00:07:49,369
the William specific structures in here

151
00:07:49,369 --> 00:07:53,579
the best HCP table both these are

152
00:07:53,579 --> 00:07:55,169
proprietary so what I mean by the

153
00:07:55,169 --> 00:07:58,919
volumes specific structures are this the

154
00:07:58,919 --> 00:08:01,019
ECPA table itself is going to carry some

155
00:08:01,019 --> 00:08:04,679
rod data right because this data moves

156
00:08:04,679 --> 00:08:06,179
with technology it evolves his

157
00:08:06,179 --> 00:08:08,039
technology it changes from vendor to

158
00:08:08,039 --> 00:08:10,949
vendor from silicon to silicon so

159
00:08:10,949 --> 00:08:13,169
instead of changing SP expect every time

160
00:08:13,169 --> 00:08:16,319
there is a change in the technology we

161
00:08:16,319 --> 00:08:19,259
are providing a rod data in a CPI table

162
00:08:19,259 --> 00:08:22,079
the solid we give right and the raw data

163
00:08:22,079 --> 00:08:25,019
to make sense out of the raw data we

164
00:08:25,019 --> 00:08:27,509
provide schemas which are public domain

165
00:08:27,509 --> 00:08:30,900
so that will be a grid that matches the

166
00:08:30,900 --> 00:08:33,539
the schema - there are data so you can

167
00:08:33,539 --> 00:08:36,120
make sense out of it so that's the basic

168
00:08:36,120 --> 00:08:38,220
idea here so when you see here the

169
00:08:38,220 --> 00:08:40,110
volumes specific structures that's

170
00:08:40,110 --> 00:08:42,870
pretty much the schema that describes

171
00:08:42,870 --> 00:08:47,910
the ACPI

172
00:08:47,910 --> 00:08:50,880
mirror structure and this is also I

173
00:08:50,880 --> 00:08:52,620
think this diagram points there's some

174
00:08:52,620 --> 00:08:57,330
bias truck just not the schemas so the

175
00:08:57,330 --> 00:08:59,940
goal here is to not you know make it

176
00:08:59,940 --> 00:09:02,340
proprietary make it open so we are

177
00:09:02,340 --> 00:09:05,040
working on the AC PCR to create a bead

178
00:09:05,040 --> 00:09:07,860
at table in a CPI and we're also working

179
00:09:07,860 --> 00:09:12,300
to basically push through yeah opening

180
00:09:12,300 --> 00:09:14,430
up the schemas so it's already approved

181
00:09:14,430 --> 00:09:18,420
so we're going to publicly put the spec

182
00:09:18,420 --> 00:09:20,820
out in public and have some schemas out

183
00:09:20,820 --> 00:09:26,190
there to tie into the a CPI spec you

184
00:09:26,190 --> 00:09:31,470
want to take off from here so this is

185
00:09:31,470 --> 00:09:31,920
the one I

186
00:09:31,920 --> 00:09:34,010
I mean talking about like what is the

187
00:09:34,010 --> 00:09:38,970
usage class right so sorry talked about

188
00:09:38,970 --> 00:09:41,880
I mean the training data what how it can

189
00:09:41,880 --> 00:09:45,060
be useful in the bigger sense so like

190
00:09:45,060 --> 00:09:46,890
for example let's say I know that some

191
00:09:46,890 --> 00:09:51,510
of the what do you call it

192
00:09:51,510 --> 00:09:54,060
I know certain systems are like not in

193
00:09:54,060 --> 00:09:56,490
within the margin or it's going to fail

194
00:09:56,490 --> 00:09:58,800
at least I can make a decision from the

195
00:09:58,800 --> 00:10:01,980
view in a bigger view that not to

196
00:10:01,980 --> 00:10:04,520
schedule a job or maybe try to have a

197
00:10:04,520 --> 00:10:06,930
certain job scheduling a certain things

198
00:10:06,930 --> 00:10:09,240
right so that's what we want to do in a

199
00:10:09,240 --> 00:10:10,860
bigger view so one of the example is

200
00:10:10,860 --> 00:10:12,840
like so we can build a system somewhere

201
00:10:12,840 --> 00:10:16,260
and then we can ship it to a let's say a

202
00:10:16,260 --> 00:10:18,900
data center or somewhere right and when

203
00:10:18,900 --> 00:10:20,760
we power on so sometimes we want to make

204
00:10:20,760 --> 00:10:22,770
sure that the data when we built a

205
00:10:22,770 --> 00:10:25,350
system whatever the RMT data we get

206
00:10:25,350 --> 00:10:27,510
which is direct margining tool data is

207
00:10:27,510 --> 00:10:30,000
as similar or same as the one right if

208
00:10:30,000 --> 00:10:31,980
not then there is something not either

209
00:10:31,980 --> 00:10:34,560
it's not inserted properly but something

210
00:10:34,560 --> 00:10:37,560
else is happening and I know it will be

211
00:10:37,560 --> 00:10:40,560
if in the worst case the dim will beam

212
00:10:40,560 --> 00:10:42,960
will not show up in the memory at all I

213
00:10:42,960 --> 00:10:44,430
mean in the

214
00:10:44,430 --> 00:10:46,230
Tector at all are disabled by the

215
00:10:46,230 --> 00:10:49,320
training data so that's easier case but

216
00:10:49,320 --> 00:10:51,450
if their margin is a little bit less I

217
00:10:51,450 --> 00:10:53,160
want to catch it before even I run

218
00:10:53,160 --> 00:10:55,050
anything on it so that's the main

219
00:10:55,050 --> 00:10:58,260
approach I mean we want to see so that's

220
00:10:58,260 --> 00:11:00,089
why and we need the training in addition

221
00:11:00,089 --> 00:11:04,700
to the SPD and other information right

222
00:11:04,700 --> 00:11:07,980
so this all like just general what we

223
00:11:07,980 --> 00:11:10,640
have right now in the SMS structures and

224
00:11:10,640 --> 00:11:13,649
why there is some gaps right so like

225
00:11:13,649 --> 00:11:15,709
sorry they explained it so we have

226
00:11:15,709 --> 00:11:18,779
explained I mean what me what do you

227
00:11:18,779 --> 00:11:20,399
call it it's a so policy of the memory

228
00:11:20,399 --> 00:11:22,890
and the types and everything but we

229
00:11:22,890 --> 00:11:26,610
don't have exactly the error type and

230
00:11:26,610 --> 00:11:28,980
other information not error exactly but

231
00:11:28,980 --> 00:11:31,440
more like a margining data right so

232
00:11:31,440 --> 00:11:34,110
again in smbus most of the time if the

233
00:11:34,110 --> 00:11:35,850
DM is disabled you won't get any

234
00:11:35,850 --> 00:11:38,520
structure filled in most of the time and

235
00:11:38,520 --> 00:11:40,950
so that means that I don't know that

236
00:11:40,950 --> 00:11:42,810
there is there supposed to be a team

237
00:11:42,810 --> 00:11:46,350
which is disabled so that's one thing we

238
00:11:46,350 --> 00:11:51,000
here we can find out and or else so

239
00:11:51,000 --> 00:11:53,330
general information about SM bias and

240
00:11:53,330 --> 00:11:55,830
sorry talked about s rat and asleep

241
00:11:55,830 --> 00:12:00,330
tables sorry I'm just rushing through

242
00:12:00,330 --> 00:12:02,550
because I prefer people ask questions

243
00:12:02,550 --> 00:12:04,380
and we answer that's much more better

244
00:12:04,380 --> 00:12:06,270
than reading the slides are I telling

245
00:12:06,270 --> 00:12:08,100
you something okay and most of you I

246
00:12:08,100 --> 00:12:10,800
mean you know it's all in the spec

247
00:12:10,800 --> 00:12:13,410
that's what I mean and so let's give a

248
00:12:13,410 --> 00:12:15,209
little bit more on the B dot structure

249
00:12:15,209 --> 00:12:17,400
right so B dot structure I like the

250
00:12:17,400 --> 00:12:20,190
structure so I find it's mostly disabled

251
00:12:20,190 --> 00:12:23,520
in the bias and it still needs some work

252
00:12:23,520 --> 00:12:25,320
which we are working through but the

253
00:12:25,320 --> 00:12:27,750
main idea is so it provided a header in

254
00:12:27,750 --> 00:12:30,000
a a CPI and give you a pointer to

255
00:12:30,000 --> 00:12:32,130
somewhere in 64-bit memory where there

256
00:12:32,130 --> 00:12:34,350
is a raw data and the draw data contains

257
00:12:34,350 --> 00:12:36,810
schemas multiple schemas and the schema

258
00:12:36,810 --> 00:12:39,180
again it has a standard header which

259
00:12:39,180 --> 00:12:41,160
sigrid and from the grading you know

260
00:12:41,160 --> 00:12:43,890
what's the data behind it right so that

261
00:12:43,890 --> 00:12:46,680
I find is much more flexible so in that

262
00:12:46,680 --> 00:12:49,950
sense like right now we have already the

263
00:12:49,950 --> 00:12:52,620
beaded have multiple versions of data

264
00:12:52,620 --> 00:12:55,560
and going forward I like to propose in

265
00:12:55,560 --> 00:12:57,660
the open standard which may saw thee and

266
00:12:57,660 --> 00:12:58,279
me

267
00:12:58,279 --> 00:13:00,769
well I mean working through so we want

268
00:13:00,769 --> 00:13:02,779
to publish some standard schemas first

269
00:13:02,779 --> 00:13:06,499
okay and in an open forum and then get

270
00:13:06,499 --> 00:13:09,319
that approved and going I mean then we

271
00:13:09,319 --> 00:13:11,360
can add multiple schemas over it so

272
00:13:11,360 --> 00:13:13,759
basically start with simple SPD data

273
00:13:13,759 --> 00:13:16,879
simple timing data and then we can

274
00:13:16,879 --> 00:13:18,439
expend mode because right now the data

275
00:13:18,439 --> 00:13:21,170
is very complicated like it's literally

276
00:13:21,170 --> 00:13:23,629
packed all the data into one big schema

277
00:13:23,629 --> 00:13:24,649
which is more

278
00:13:24,649 --> 00:13:28,100
I mean much harder to pass okay and so

279
00:13:28,100 --> 00:13:32,629
that's the B dot so like so we have this

280
00:13:32,629 --> 00:13:34,819
what we are proposing basically so sorry

281
00:13:34,819 --> 00:13:37,069
this already working through to publish

282
00:13:37,069 --> 00:13:39,709
the beta table in the open public forum

283
00:13:39,709 --> 00:13:43,100
and already there is a easier in flux to

284
00:13:43,100 --> 00:13:45,829
add the bead head table and then we are

285
00:13:45,829 --> 00:13:47,689
working through getting the right

286
00:13:47,689 --> 00:13:49,809
schemas define and publish it in the

287
00:13:49,809 --> 00:13:54,139
future of open forums and this will

288
00:13:54,139 --> 00:13:58,220
actually basically what I I mean my like

289
00:13:58,220 --> 00:14:00,980
bigger goal is to have the support in

290
00:14:00,980 --> 00:14:02,990
the kernels in various kernels built

291
00:14:02,990 --> 00:14:05,360
into it so that we can have access this

292
00:14:05,360 --> 00:14:07,699
data by sisyphus nodes or other

293
00:14:07,699 --> 00:14:09,740
mechanism so that it's easier for higher

294
00:14:09,740 --> 00:14:14,889
stack to use the data okay

295
00:14:14,889 --> 00:14:19,759
it's so basic thing is like we just want

296
00:14:19,759 --> 00:14:23,029
the community to help and then we work

297
00:14:23,029 --> 00:14:24,759
together to have all these things

298
00:14:24,759 --> 00:14:28,250
properly set up and what add anything

299
00:14:28,250 --> 00:14:32,509
yeah so basically this is right now yeah

300
00:14:32,509 --> 00:14:35,300
you know appropriately table right so

301
00:14:35,300 --> 00:14:37,279
when open by opening it up it scales

302
00:14:37,279 --> 00:14:40,399
across multiple vendors and multiple

303
00:14:40,399 --> 00:14:43,040
technologies so not just memory but if

304
00:14:43,040 --> 00:14:45,230
we you know I can come up with things

305
00:14:45,230 --> 00:14:47,480
that voice entity might need to know

306
00:14:47,480 --> 00:14:49,910
about the platform which is not today

307
00:14:49,910 --> 00:14:52,370
present in any form by a CPA or has some

308
00:14:52,370 --> 00:14:54,920
bios or whatever then we can add schemas

309
00:14:54,920 --> 00:14:57,350
to it and make it more flexible so you

310
00:14:57,350 --> 00:14:59,120
know if you guys can think of any such

311
00:14:59,120 --> 00:15:01,429
messages you know maybe there are lot of

312
00:15:01,429 --> 00:15:03,410
training that the bias does not just

313
00:15:03,410 --> 00:15:05,749
memory right the interconnects between

314
00:15:05,749 --> 00:15:08,240
CPUs that are strange and things like

315
00:15:08,240 --> 00:15:10,189
that see if you guys you know feel like

316
00:15:10,189 --> 00:15:11,839
that is something that we need to bring

317
00:15:11,839 --> 00:15:12,240
in

318
00:15:12,240 --> 00:15:15,420
then this makes a lot more makes more

319
00:15:15,420 --> 00:15:19,309
flexible to add those things later on so

320
00:15:19,309 --> 00:15:23,309
that's pretty much and when Shiva said

321
00:15:23,309 --> 00:15:25,050
initially that he'll make it fast

322
00:15:25,050 --> 00:15:26,790
because I go for go for lunch he really

323
00:15:26,790 --> 00:15:34,470
meant it lunchtime you see 11th it yeah

324
00:15:34,470 --> 00:15:36,329
we are open for questions

325
00:15:36,329 --> 00:15:38,309
thank you that's having a round of

326
00:15:38,309 --> 00:15:40,399
applause big round of applause

327
00:15:40,399 --> 00:15:46,379
open standards are so important so we

328
00:15:46,379 --> 00:15:48,290
have infinite time for questions

329
00:15:48,290 --> 00:15:54,179
basically between your lunch and your

330
00:15:54,179 --> 00:15:57,059
talk we're going to be holding that so

331
00:15:57,059 --> 00:15:59,339
quitting right like the Guido structure

332
00:15:59,339 --> 00:16:02,369
is like when you talked about those like

333
00:16:02,369 --> 00:16:05,429
do you anticipate one for ddr3 or 4805

334
00:16:05,429 --> 00:16:07,589
is it now you panned out those I mean

335
00:16:07,589 --> 00:16:09,899
how are is it memory vendor-specific

336
00:16:09,899 --> 00:16:13,529
can be good at it too so our I mean in

337
00:16:13,529 --> 00:16:15,420
the open thing we want to be standard

338
00:16:15,420 --> 00:16:18,179
specific I mean like ddr3 ddr4 but if

339
00:16:18,179 --> 00:16:20,850
it's anything proprietary that can also

340
00:16:20,850 --> 00:16:23,040
be accommodated okay so that's why the

341
00:16:23,040 --> 00:16:25,230
scheme approach right so I want to have

342
00:16:25,230 --> 00:16:26,790
something similar I mean like common

343
00:16:26,790 --> 00:16:28,499
things so you know that if there is

344
00:16:28,499 --> 00:16:30,420
something I mean in this structure you

345
00:16:30,420 --> 00:16:32,579
have at least ddr4 timing data yeah and

346
00:16:32,579 --> 00:16:35,069
then if anything else it's up to the

347
00:16:35,069 --> 00:16:36,990
particular driver and the proprietary

348
00:16:36,990 --> 00:16:40,290
things on the scheme yeah yeah then the

349
00:16:40,290 --> 00:16:42,779
other thing is like MRC today like if

350
00:16:42,779 --> 00:16:45,779
the system is not rebooted in 90 days or

351
00:16:45,779 --> 00:16:47,129
something Vico reestablish the

352
00:16:47,129 --> 00:16:49,429
parameters I mean there are certain

353
00:16:49,429 --> 00:16:51,600
mechanisms in place in the MRC the way

354
00:16:51,600 --> 00:16:54,509
it is implemented in server right so the

355
00:16:54,509 --> 00:16:56,519
one thing that you talked about exposing

356
00:16:56,519 --> 00:16:58,110
the data to the operating system but the

357
00:16:58,110 --> 00:17:00,869
other one is out-of-band telemetry how

358
00:17:00,869 --> 00:17:02,129
do you push this data toward herb and

359
00:17:02,129 --> 00:17:03,540
damage how do you anticipate that to

360
00:17:03,540 --> 00:17:05,760
take place big the one thing that you

361
00:17:05,760 --> 00:17:09,179
alluded to was you will prevent you know

362
00:17:09,179 --> 00:17:12,720
putting VMs or containers is done if the

363
00:17:12,720 --> 00:17:14,339
if the life is wearing out of a team or

364
00:17:14,339 --> 00:17:16,859
something right for you to take such a

365
00:17:16,859 --> 00:17:18,720
decision it has to be done not inside

366
00:17:18,720 --> 00:17:20,549
the node but it has to be somehow pushed

367
00:17:20,549 --> 00:17:22,648
outside the node but if the limits node

368
00:17:22,648 --> 00:17:24,809
itself is faulty how do you anticipate

369
00:17:24,809 --> 00:17:26,179
those

370
00:17:26,179 --> 00:17:29,010
the data to be basically telemetry what

371
00:17:29,010 --> 00:17:30,030
is the telemetry story that is

372
00:17:30,030 --> 00:17:33,960
surrounding the training that you kind

373
00:17:33,960 --> 00:17:36,570
of established oh yeah

374
00:17:36,570 --> 00:17:40,770
so it's true but the one I was more

375
00:17:40,770 --> 00:17:42,480
interested in is like so there's two

376
00:17:42,480 --> 00:17:43,860
different thing right one is runtime

377
00:17:43,860 --> 00:17:46,170
related data so that you can get from

378
00:17:46,170 --> 00:17:48,120
other mechanism like PI key or other

379
00:17:48,120 --> 00:17:50,309
things but the training related data

380
00:17:50,309 --> 00:17:53,040
that I know it's not every server is

381
00:17:53,040 --> 00:17:55,140
rebooting multiple times but when it's

382
00:17:55,140 --> 00:17:57,960
reboot whatever data we collect we like

383
00:17:57,960 --> 00:17:59,880
export it so the right now it's

384
00:17:59,880 --> 00:18:01,260
available in sisyphus there will be a

385
00:18:01,260 --> 00:18:03,330
driver above it which exposed to the

386
00:18:03,330 --> 00:18:05,429
higher layer and there will be outside

387
00:18:05,429 --> 00:18:07,650
monitoring things which captures that so

388
00:18:07,650 --> 00:18:09,059
it knows what's the difference between

389
00:18:09,059 --> 00:18:12,030
the two different values and also it

390
00:18:12,030 --> 00:18:14,100
knows that other service in the same

391
00:18:14,100 --> 00:18:17,130
vicinity other things have a different

392
00:18:17,130 --> 00:18:19,919
are empty so then it will can make a

393
00:18:19,919 --> 00:18:21,570
decision that okay something wrong in

394
00:18:21,570 --> 00:18:24,720
this particular system so probably I do

395
00:18:24,720 --> 00:18:26,460
I need to look at that one so that's

396
00:18:26,460 --> 00:18:28,290
what I mean yeah it was basically a

397
00:18:28,290 --> 00:18:32,010
static way of collecting data it's not a

398
00:18:32,010 --> 00:18:34,760
one-time telemetry per se it's

399
00:18:34,760 --> 00:18:36,750
information that the bias produces

400
00:18:36,750 --> 00:18:38,820
during boot yeah yeah I know it does

401
00:18:38,820 --> 00:18:43,169
okay so what you're saying is just prior

402
00:18:43,169 --> 00:18:45,000
to the voice out during the handoff you

403
00:18:45,000 --> 00:18:46,620
still send the data across or the wire

404
00:18:46,620 --> 00:18:50,070
or something yeah and and then only

405
00:18:50,070 --> 00:18:53,309
after that you start I mean allocating

406
00:18:53,309 --> 00:18:56,070
VM surveys and whatever X or step okay

407
00:18:56,070 --> 00:18:58,530
that's basically you're beating out any

408
00:18:58,530 --> 00:19:01,200
outliers that may be there yeah but do

409
00:19:01,200 --> 00:19:02,880
you have a point about the BMC yes all

410
00:19:02,880 --> 00:19:05,160
right so any out-of-band entities that

411
00:19:05,160 --> 00:19:07,830
want to use this data yes yes maybe we

412
00:19:07,830 --> 00:19:11,040
can enhance the driver to talk IPMI to a

413
00:19:11,040 --> 00:19:14,400
red fish to the BMC I believe that there

414
00:19:14,400 --> 00:19:17,010
is a story that needs to be filled is

415
00:19:17,010 --> 00:19:19,140
right it's like multiple subscribers not

416
00:19:19,140 --> 00:19:20,910
just OS is the only subscriber to this

417
00:19:20,910 --> 00:19:22,710
data that you're publishing they gotta

418
00:19:22,710 --> 00:19:24,960
be an outer band listener to the same

419
00:19:24,960 --> 00:19:27,450
habitat you know that's something that I

420
00:19:27,450 --> 00:19:29,640
feel is also need to be complimented so

421
00:19:29,640 --> 00:19:34,669
the last line oh yeah okay I see that

422
00:19:34,970 --> 00:19:37,440
okay I should have a simple question

423
00:19:37,440 --> 00:19:39,660
easier now you have dim

424
00:19:39,660 --> 00:19:43,620
formation right that the bus is no it

425
00:19:43,620 --> 00:19:46,610
may not be hundred percent Jared right

426
00:19:46,610 --> 00:19:50,700
yeah yep and so how you dealing with the

427
00:19:50,700 --> 00:19:53,820
situation if you use Intel mashing and

428
00:19:53,820 --> 00:19:58,020
amassing or arm server yes that's what

429
00:19:58,020 --> 00:20:01,320
the skimmer comes in come play so so you

430
00:20:01,320 --> 00:20:03,270
can have a common scheme on which

431
00:20:03,270 --> 00:20:05,120
actually address that it's not a

432
00:20:05,120 --> 00:20:07,440
technology specific it's more like I

433
00:20:07,440 --> 00:20:09,510
mean it's a media for technology

434
00:20:09,510 --> 00:20:13,010
specific not the platform specifically

435
00:20:13,010 --> 00:20:15,780
simple question as well you need the

436
00:20:15,780 --> 00:20:17,100
actual data or do you need the

437
00:20:17,100 --> 00:20:19,320
intelligence out of the data so if bias

438
00:20:19,320 --> 00:20:21,930
tells you the margin on this dam is not

439
00:20:21,930 --> 00:20:24,090
good is that enough or would you rather

440
00:20:24,090 --> 00:20:25,650
how the actual later and make the

441
00:20:25,650 --> 00:20:27,750
decision yourselves this is only the

442
00:20:27,750 --> 00:20:30,180
data so I want a higher layer to handle

443
00:20:30,180 --> 00:20:33,480
the actual intelligence so I think the

444
00:20:33,480 --> 00:20:35,730
question was if you can do a percentage

445
00:20:35,730 --> 00:20:38,220
of margin instead of the actual data

446
00:20:38,220 --> 00:20:42,480
will it make it more sense it depends

447
00:20:42,480 --> 00:20:46,530
but in this case actually it doesn't

448
00:20:46,530 --> 00:20:48,540
matter so as long as I can take some

449
00:20:48,540 --> 00:20:51,420
value like what do you say comparison to

450
00:20:51,420 --> 00:20:53,040
different thing right I know there is

451
00:20:53,040 --> 00:20:55,860
the difference which I can clearly say

452
00:20:55,860 --> 00:20:57,930
there is something is not right then

453
00:20:57,930 --> 00:21:01,860
it's good we actually had a use case

454
00:21:01,860 --> 00:21:04,190
where we did something but the bias

455
00:21:04,190 --> 00:21:07,160
determines if the margin was good

456
00:21:07,160 --> 00:21:11,070
warning or critical and then we'll pass

457
00:21:11,070 --> 00:21:12,690
that information to the voice it will

458
00:21:12,690 --> 00:21:14,780
trigger a memory retraining if required

459
00:21:14,780 --> 00:21:16,920
accounting for thermal variations are

460
00:21:16,920 --> 00:21:19,230
sure sure so I think you have a point

461
00:21:19,230 --> 00:21:20,910
though that because if you're going to

462
00:21:20,910 --> 00:21:23,640
have any information that the vendor

463
00:21:23,640 --> 00:21:26,370
doesn't want to public right could be it

464
00:21:26,370 --> 00:21:28,950
could be very like a no trade secret

465
00:21:28,950 --> 00:21:30,810
kind of thing right so basically they

466
00:21:30,810 --> 00:21:32,820
would they might want to not publish the

467
00:21:32,820 --> 00:21:35,400
data right and insert can give you a

468
00:21:35,400 --> 00:21:39,420
percentage so things like that just fine

469
00:21:39,420 --> 00:21:42,750
action so the main aim is to find that I

470
00:21:42,750 --> 00:21:45,360
can find that particular thing is bad so

471
00:21:45,360 --> 00:21:51,900
it doesn't matter follow-up to that

472
00:21:51,900 --> 00:21:53,310
question

473
00:21:53,310 --> 00:21:54,840
seems like if you get enough of this

474
00:21:54,840 --> 00:21:56,790
data standardized and exposed to the OS

475
00:21:56,790 --> 00:21:59,070
then we can reduce the number of system

476
00:21:59,070 --> 00:22:01,920
management interrupts and maybe obviate

477
00:22:01,920 --> 00:22:03,780
the need for protected runtime mechanism

478
00:22:03,780 --> 00:22:05,790
sort of talking about the intelligence

479
00:22:05,790 --> 00:22:07,710
not necessary it could be in an

480
00:22:07,710 --> 00:22:11,700
operating system driver that's later

481
00:22:11,700 --> 00:22:13,890
does that's really different I think

482
00:22:13,890 --> 00:22:16,710
yes that was a more static thing than a

483
00:22:16,710 --> 00:22:28,380
ton time thing one question about these

484
00:22:28,380 --> 00:22:30,390
mclees and you're trying to standardize

485
00:22:30,390 --> 00:22:32,190
their interface to pass information

486
00:22:32,190 --> 00:22:34,860
right so country they also has a SM

487
00:22:34,860 --> 00:22:37,740
bounce table there and now it's a CDI

488
00:22:37,740 --> 00:22:41,360
table to do the same thing so how do you

489
00:22:41,360 --> 00:22:44,220
propose which information we should pass

490
00:22:44,220 --> 00:22:47,700
for the SM bounce interface was the ACPI

491
00:22:47,700 --> 00:22:49,860
interface what's going to be the trend

492
00:22:49,860 --> 00:22:52,980
going forward for that actually there is

493
00:22:52,980 --> 00:22:55,500
no is some bias related thing for

494
00:22:55,500 --> 00:22:59,370
exactly this part oh yeah but but what

495
00:22:59,370 --> 00:23:00,990
I'm saying that as a mouse it's kind of

496
00:23:00,990 --> 00:23:03,690
interface where gamma you can pass

497
00:23:03,690 --> 00:23:05,490
information from your firmware to a

498
00:23:05,490 --> 00:23:07,920
store memory so that's also a path but

499
00:23:07,920 --> 00:23:09,480
the higher if you've got a data how do

500
00:23:09,480 --> 00:23:10,950
you determine which side you want to do

501
00:23:10,950 --> 00:23:13,350
agree but the SMS one problem is the

502
00:23:13,350 --> 00:23:16,830
structure has to be like 255 bytes okay

503
00:23:16,830 --> 00:23:19,470
so that's a very big limit actually so

504
00:23:19,470 --> 00:23:21,600
that's another why I like this one so

505
00:23:21,600 --> 00:23:23,640
you can expand much more I mean more

506
00:23:23,640 --> 00:23:25,830
data so basically I said yeah I could be

507
00:23:25,830 --> 00:23:29,070
the new yeah in the face right okay and

508
00:23:29,070 --> 00:23:32,180
also we can have pointers to some pass

509
00:23:32,180 --> 00:23:34,650
structures right so basically you know

510
00:23:34,650 --> 00:23:36,780
which get are basically maps to which

511
00:23:36,780 --> 00:23:44,940
physical okay just like an fit like I

512
00:23:44,940 --> 00:23:46,740
said we have at least an infinite amount

513
00:23:46,740 --> 00:24:01,050
of time for questions okay now only few

514
00:24:01,050 --> 00:24:02,940
to go to lunch please have a warm-up

515
00:24:02,940 --> 00:24:04,620
round of applause

516
00:24:04,620 --> 00:24:07,280
and you guys play work

517
00:24:07,280 --> 00:24:07,870
[Applause]

518
00:24:07,870 --> 00:24:15,489
[Music]

