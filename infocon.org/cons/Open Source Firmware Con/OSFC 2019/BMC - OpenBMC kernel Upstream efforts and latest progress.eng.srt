1
00:00:03,190 --> 00:00:05,910
[Music]

2
00:00:05,910 --> 00:00:07,970
you

3
00:00:20,630 --> 00:00:22,689
you

4
00:12:05,980 --> 00:12:10,580
cool another thing that I really dislike

5
00:12:10,580 --> 00:12:14,240
is I really discourage is patching up

6
00:12:14,240 --> 00:12:17,000
the colonel in the Yocto tree mostly

7
00:12:17,000 --> 00:12:18,560
because it makes the job of the

8
00:12:18,560 --> 00:12:21,110
developers hard if you have a bug and I

9
00:12:21,110 --> 00:12:22,940
want to reproduce it I have to go and

10
00:12:22,940 --> 00:12:24,560
fit on with the octo tree instead of

11
00:12:24,560 --> 00:12:28,209
just building it colonel but it's also

12
00:12:28,209 --> 00:12:30,140
it's a whole heap of whole host of

13
00:12:30,140 --> 00:12:31,430
reason so it makes it a little bit

14
00:12:31,430 --> 00:12:35,959
harder that bullet point about known

15
00:12:35,959 --> 00:12:38,060
offenders is is actually really at a

16
00:12:38,060 --> 00:12:39,350
date that needs to be deleted from this

17
00:12:39,350 --> 00:12:41,510
slide both matter with a spoon and we

18
00:12:41,510 --> 00:12:42,800
don't you don't have those patches

19
00:12:42,800 --> 00:12:44,630
anymore I don't think matter until does

20
00:12:44,630 --> 00:12:46,209
does it who's an Intel guy

21
00:12:46,209 --> 00:12:50,360
now you don't yeah cool and meadow

22
00:12:50,360 --> 00:12:51,980
Witherspoon got their patch upstream so

23
00:12:51,980 --> 00:12:57,830
so good works of them as well so current

24
00:12:57,830 --> 00:12:59,510
status we're currently based on 5.2

25
00:12:59,510 --> 00:13:02,209
which is the current release colonel at

26
00:13:02,209 --> 00:13:03,860
least for one more week when five three

27
00:13:03,860 --> 00:13:06,890
good will come out next next weekend and

28
00:13:06,890 --> 00:13:07,970
we've got about a hundred fifty patches

29
00:13:07,970 --> 00:13:10,730
in the tree there they're all over the

30
00:13:10,730 --> 00:13:12,950
place most of them are in the Vice trees

31
00:13:12,950 --> 00:13:15,589
so we've got a whole heap for the hope

32
00:13:15,589 --> 00:13:18,200
of lines of code for the new SP 2600 and

33
00:13:18,200 --> 00:13:19,610
how it combines the code for the new

34
00:13:19,610 --> 00:13:23,360
Vuitton device trees on upstream yeah as

35
00:13:23,360 --> 00:13:24,680
far as drivers goes a bit of a

36
00:13:24,680 --> 00:13:28,730
smattering all across the place the the

37
00:13:28,730 --> 00:13:30,560
big subsystem that we still are carrying

38
00:13:30,560 --> 00:13:32,150
they're from BMC tree is the pecky tree

39
00:13:32,150 --> 00:13:35,900
a pecky subsystem that's kind of a work

40
00:13:35,900 --> 00:13:39,500
in progress still this is my favorite

41
00:13:39,500 --> 00:13:41,600
graph that love showing my managers we

42
00:13:41,600 --> 00:13:43,100
started off with lots of patches and

43
00:13:43,100 --> 00:13:45,650
we've got less I stopped updating and

44
00:13:45,650 --> 00:13:47,150
after four nineteen because it's just

45
00:13:47,150 --> 00:13:49,400
kind of flatlined we we've kind of

46
00:13:49,400 --> 00:13:52,640
stayed around 100-200 patches and what's

47
00:13:52,640 --> 00:13:54,980
that code goes upstream but then it gets

48
00:13:54,980 --> 00:13:56,660
replaced with new new work as it goes so

49
00:13:56,660 --> 00:13:58,940
a steady state at the moment is around

50
00:13:58,940 --> 00:14:01,899
that token of two hundred patch figure

51
00:14:01,899 --> 00:14:04,070
which doesn't concern me too much

52
00:14:04,070 --> 00:14:06,550
because the code tends to flow upstream

53
00:14:06,550 --> 00:14:08,450
except for that the patches that I'll

54
00:14:08,450 --> 00:14:11,540
talk about soon so as I was listing the

55
00:14:11,540 --> 00:14:12,709
Kristin's talk earlier I read based

56
00:14:12,709 --> 00:14:14,390
against today's Linux next or

57
00:14:14,390 --> 00:14:17,900
yesterday's Linux mix and today's and

58
00:14:17,900 --> 00:14:19,370
luckily linux nexus released in

59
00:14:19,370 --> 00:14:20,750
Australia by my colleague Stefan's

60
00:14:20,750 --> 00:14:23,779
Steven so um so the dates for today even

61
00:14:23,779 --> 00:14:26,300
though you did the work yesterday so

62
00:14:26,300 --> 00:14:28,070
we've got 75 patches outstanding so

63
00:14:28,070 --> 00:14:29,690
that's pretty good work half the patches

64
00:14:29,690 --> 00:14:30,980
that are in the tree have been sent

65
00:14:30,980 --> 00:14:32,300
upstream for for the next kind of

66
00:14:32,300 --> 00:14:32,630
release

67
00:14:32,630 --> 00:14:34,790
so when 5.4 comes out they'll all be in

68
00:14:34,790 --> 00:14:37,190
there and and that's you know that makes

69
00:14:37,190 --> 00:14:41,330
me happy so we're good upstream a lot

70
00:14:41,330 --> 00:14:45,680
not worth going through at all most of

71
00:14:45,680 --> 00:14:47,930
the most of the code we boot when we run

72
00:14:47,930 --> 00:14:49,850
a BMC is in that RIM kernel tree and

73
00:14:49,850 --> 00:14:52,550
there's plenty of so I know that Romulus

74
00:14:52,550 --> 00:14:54,380
can boot without any upstream patches

75
00:14:54,380 --> 00:14:56,210
and I'm sure there's other systems that

76
00:14:56,210 --> 00:14:59,120
can as well which is pretty cool because

77
00:14:59,120 --> 00:15:02,570
it means I can retire and of each no it

78
00:15:02,570 --> 00:15:04,220
means that there's less work to be done

79
00:15:04,220 --> 00:15:05,930
on I'm kind of just carrying patches

80
00:15:05,930 --> 00:15:07,400
from release to release had more work

81
00:15:07,400 --> 00:15:09,380
that can be done on on making things go

82
00:15:09,380 --> 00:15:11,839
faster and cleaner and and and all this

83
00:15:11,839 --> 00:15:15,950
kind of gear there's two kind of patches

84
00:15:15,950 --> 00:15:18,260
that sets that didn't quite make it

85
00:15:18,260 --> 00:15:19,910
upstream for for this release that's the

86
00:15:19,910 --> 00:15:22,790
pecky factor set and the ext of a

87
00:15:22,790 --> 00:15:27,230
patches hopefully they'll make five five

88
00:15:27,230 --> 00:15:30,320
and the other one that I've kind of been

89
00:15:30,320 --> 00:15:31,640
perpetually at the top of my to-do list

90
00:15:31,640 --> 00:15:33,380
is implementing the or getting the hash

91
00:15:33,380 --> 00:15:37,070
crypto engine upstream if you've ever

92
00:15:37,070 --> 00:15:39,860
watched a BMC boot we load the image and

93
00:15:39,860 --> 00:15:42,770
then it does a char verification of the

94
00:15:42,770 --> 00:15:44,300
the payloads inside the feeder image and

95
00:15:44,300 --> 00:15:45,890
that takes a pretty decent amount of

96
00:15:45,890 --> 00:15:48,230
time especially on a 2500 and then speed

97
00:15:48,230 --> 00:15:49,760
does have acceleration for that in

98
00:15:49,760 --> 00:15:51,500
silicon so we could potentially take

99
00:15:51,500 --> 00:15:53,450
advantage of that if anyone wants to

100
00:15:53,450 --> 00:15:55,779
pick up that work comes picked me out is

101
00:15:55,779 --> 00:15:58,279
on the Louboutin side is Harper code

102
00:15:58,279 --> 00:15:59,660
that's gone up stream in the last kind

103
00:15:59,660 --> 00:16:01,160
of a couple of years she's been good to

104
00:16:01,160 --> 00:16:06,830
see and then there's more yeah IV is is

105
00:16:06,830 --> 00:16:08,690
gonna add to my list for me later

106
00:16:08,690 --> 00:16:12,350
excellent and and recently we enabled

107
00:16:12,350 --> 00:16:14,300
one of the new vuitton machines in CI

108
00:16:14,300 --> 00:16:16,310
which is good because now we know when

109
00:16:16,310 --> 00:16:20,029
when I break it and and I'm more to come

110
00:16:20,029 --> 00:16:23,360
hopefully as well something that I

111
00:16:23,360 --> 00:16:24,980
didn't know if was the right thing doing

112
00:16:24,980 --> 00:16:26,660
when we started was having a load of ice

113
00:16:26,660 --> 00:16:28,130
trees upstream but it's working pretty

114
00:16:28,130 --> 00:16:30,440
well so far I'm not sure at what point

115
00:16:30,440 --> 00:16:31,650
the upstream maintain is

116
00:16:31,650 --> 00:16:33,350
hmm maybe you should stop doing this

117
00:16:33,350 --> 00:16:36,660
we're currently at about twenty-seven

118
00:16:36,660 --> 00:16:37,980
machines in the upstream Colonel tree

119
00:16:37,980 --> 00:16:40,500
and I'm sure there's more to come

120
00:16:40,500 --> 00:16:42,240
does anyone carry their device three

121
00:16:42,240 --> 00:16:49,860
patches auditory semi-batch Chris yeah

122
00:16:49,860 --> 00:16:51,390
it's pretty pretty lightweight getting

123
00:16:51,390 --> 00:16:53,850
in there now especially if you're using

124
00:16:53,850 --> 00:16:56,279
all the upstream drivers that there's no

125
00:16:56,279 --> 00:16:57,570
reason the patch you're using currently

126
00:16:57,570 --> 00:17:06,110
comes go straight in yeah so old patches

127
00:17:09,949 --> 00:17:13,650
this is kind of the vanilla least the

128
00:17:13,650 --> 00:17:15,900
first two were owned by my colleague

129
00:17:15,900 --> 00:17:17,609
Andrea back in Australia so he's gonna

130
00:17:17,609 --> 00:17:20,010
love watching this talk later the

131
00:17:20,010 --> 00:17:22,410
maximum fan controller is pretty broken

132
00:17:22,410 --> 00:17:25,380
and and has some hacks in the tree that

133
00:17:25,380 --> 00:17:27,150
probably never go up streams that will

134
00:17:27,150 --> 00:17:29,720
carry that for a long time unfortunately

135
00:17:29,720 --> 00:17:31,830
the one that we're all kind of

136
00:17:31,830 --> 00:17:33,030
interested in but I think on the live

137
00:17:33,030 --> 00:17:34,590
one side and the SP side is kind of this

138
00:17:34,590 --> 00:17:37,050
mystery driver so IBM sees as you know

139
00:17:37,050 --> 00:17:38,730
have a hope of registers all over the

140
00:17:38,730 --> 00:17:40,260
place for doing tricky little things

141
00:17:40,260 --> 00:17:42,390
don't really fit into any kind of kernel

142
00:17:42,390 --> 00:17:44,840
subsystem and we need some way of

143
00:17:44,840 --> 00:17:48,240
exposing those and currently we have

144
00:17:48,240 --> 00:17:50,429
this device tree based kernel driver

145
00:17:50,429 --> 00:17:53,100
that exposes just any old register you

146
00:17:53,100 --> 00:17:56,400
want to use a space probably not

147
00:17:56,400 --> 00:17:59,309
acceptable upstream we haven't actually

148
00:17:59,309 --> 00:18:01,650
tried but that needs a bit of work done

149
00:18:01,650 --> 00:18:03,540
and and something kind of created there

150
00:18:03,540 --> 00:18:05,730
so that all these different knobs and

151
00:18:05,730 --> 00:18:07,350
switches that that we want use a space

152
00:18:07,350 --> 00:18:09,150
to be out of touch but we don't want you

153
00:18:09,150 --> 00:18:10,890
know to use dev mem and can still be

154
00:18:10,890 --> 00:18:14,250
exposed the other one I was just talking

155
00:18:14,250 --> 00:18:17,100
about a few minutes ago well as SBI nor

156
00:18:17,100 --> 00:18:21,240
so we have SBI nor upstream but it

157
00:18:21,240 --> 00:18:22,679
doesn't have the link training so it

158
00:18:22,679 --> 00:18:24,300
doesn't go fast that's carried in the

159
00:18:24,300 --> 00:18:27,120
open BMC tree and in between when we

160
00:18:27,120 --> 00:18:28,770
first got those batches in and when we

161
00:18:28,770 --> 00:18:30,540
wrote the link training the upstream

162
00:18:30,540 --> 00:18:32,070
maintainer says we're not going to

163
00:18:32,070 --> 00:18:34,500
support SPI nor any more new Tom had a

164
00:18:34,500 --> 00:18:35,460
great time with that where they wrote

165
00:18:35,460 --> 00:18:36,929
there and try a driver and then it got

166
00:18:36,929 --> 00:18:39,000
an act and there to reroute it so that's

167
00:18:39,000 --> 00:18:43,350
not cool but it is the reality as it

168
00:18:43,350 --> 00:18:45,000
stands at the moment there's another

169
00:18:45,000 --> 00:18:45,660
substance

170
00:18:45,660 --> 00:18:47,370
called spamm that we have to rewrite the

171
00:18:47,370 --> 00:18:49,890
driver for unfortunately spi mem blacks

172
00:18:49,890 --> 00:18:51,510
the API is for doing things like link

173
00:18:51,510 --> 00:18:54,030
training and so they asked us to do that

174
00:18:54,030 --> 00:18:57,900
what already got do it and we just

175
00:18:57,900 --> 00:19:00,390
haven't had time to do it so if anyone

176
00:19:00,390 --> 00:19:03,300
wants to become the new a speed SPI

177
00:19:03,300 --> 00:19:06,000
flash driver maintainer come talk to me

178
00:19:06,000 --> 00:19:09,930
afterwards but yeah it would be great to

179
00:19:09,930 --> 00:19:11,940
get that code upstream particularly

180
00:19:11,940 --> 00:19:14,610
because as as the upstream support

181
00:19:14,610 --> 00:19:16,650
becomes more complete people do take the

182
00:19:16,650 --> 00:19:18,390
upstream kernel and try and use on their

183
00:19:18,390 --> 00:19:20,100
system and then wonder why it doesn't

184
00:19:20,100 --> 00:19:21,030
work

185
00:19:21,030 --> 00:19:24,840
I was following some of the the all

186
00:19:24,840 --> 00:19:27,090
booth work in on slack the other week

187
00:19:27,090 --> 00:19:28,890
and and they were having troubles there

188
00:19:28,890 --> 00:19:30,150
and I think it's because they weren't

189
00:19:30,150 --> 00:19:32,570
using a batch kernel

190
00:19:32,570 --> 00:19:36,960
that's SPI naw and finally PCI pecky I'm

191
00:19:36,960 --> 00:19:40,140
not sure if in answer that one got an

192
00:19:40,140 --> 00:19:42,740
act because Greg wanted us to use

193
00:19:42,740 --> 00:19:45,390
configure fess instead of Sisyphus for

194
00:19:45,390 --> 00:19:49,770
the config API and and so J needs to to

195
00:19:49,770 --> 00:19:54,600
rework that or something I haven't had a

196
00:19:54,600 --> 00:19:55,770
status update does anyone know how that

197
00:19:55,770 --> 00:20:01,230
works going any Intel people okay yeah

198
00:20:01,230 --> 00:20:02,880
we need to get that one out because

199
00:20:02,880 --> 00:20:03,990
that's a big chunk of code that's

200
00:20:03,990 --> 00:20:06,090
annoying to rebase each time we go

201
00:20:06,090 --> 00:20:12,600
around so new chips I was over in our

202
00:20:12,600 --> 00:20:15,270
office in in the SN saints of Australia

203
00:20:15,270 --> 00:20:18,420
the other day bringing up the SB 2600 so

204
00:20:18,420 --> 00:20:20,010
there's a dev board there and all the

205
00:20:20,010 --> 00:20:22,860
snaky blue cables are the FSI debug link

206
00:20:22,860 --> 00:20:25,050
that we have for power systems we used

207
00:20:25,050 --> 00:20:28,050
for booting the host IBM got a speed to

208
00:20:28,050 --> 00:20:31,410
put a bit of our IP inside to to do FSI

209
00:20:31,410 --> 00:20:33,810
and so I was bringing that up but to get

210
00:20:33,810 --> 00:20:34,950
that going I had to get the rest of the

211
00:20:34,950 --> 00:20:38,010
chip going so we got the pin marks

212
00:20:38,010 --> 00:20:38,550
driver

213
00:20:38,550 --> 00:20:41,870
we got watchdog Ethernet the SMP support

214
00:20:41,870 --> 00:20:44,130
the clock drivers written but not much

215
00:20:44,130 --> 00:20:45,810
upstream but there's a hyper code that

216
00:20:45,810 --> 00:20:47,430
will be in 5.4 for a speed which it's

217
00:20:47,430 --> 00:20:51,750
cool there 5.2 has even more and so

218
00:20:51,750 --> 00:20:53,790
that's what we're using to bring up a

219
00:20:53,790 --> 00:20:56,400
BMC card at the moment she's all going

220
00:20:56,400 --> 00:20:58,770
well I couldn't sleep last night due to

221
00:20:58,770 --> 00:20:59,430
gel eggs

222
00:20:59,430 --> 00:21:02,190
emergency support so now you can use SD

223
00:21:02,190 --> 00:21:04,380
cards numeracy with the HB channel if

224
00:21:04,380 --> 00:21:08,970
you like and and because we didn't have

225
00:21:08,970 --> 00:21:11,000
hardware until a couple of weeks ago we

226
00:21:11,000 --> 00:21:15,060
added 2600 support to comeyou so if

227
00:21:15,060 --> 00:21:17,360
you're using Cedric's Chrome you branch

228
00:21:17,360 --> 00:21:21,090
you can put an x5 2600 with SMP she's

229
00:21:21,090 --> 00:21:23,540
kind of cool

230
00:21:24,080 --> 00:21:27,210
so what's upcoming the rest of the 2600

231
00:21:27,210 --> 00:21:30,480
will be on my plate first the year and

232
00:21:30,480 --> 00:21:31,710
once we've got that going

233
00:21:31,710 --> 00:21:34,050
I hope to switch focus to do a bit of

234
00:21:34,050 --> 00:21:36,210
you boot work or something maybe all

235
00:21:36,210 --> 00:21:40,620
boot probably you boot a you boot story

236
00:21:40,620 --> 00:21:43,200
is pretty sad we we've been using the

237
00:21:43,200 --> 00:21:47,070
SDK since they dot and some of the

238
00:21:47,070 --> 00:21:48,750
Google guys did some some work in

239
00:21:48,750 --> 00:21:51,630
getting basic 2,600 2,500 support up

240
00:21:51,630 --> 00:21:54,990
strength which is cool late last year we

241
00:21:54,990 --> 00:21:56,490
did a bit more work we wrote an in CSI

242
00:21:56,490 --> 00:21:59,940
layer for upstream and fixed up the max

243
00:21:59,940 --> 00:22:04,220
driver and wrote an SPI driver as well

244
00:22:04,220 --> 00:22:07,170
and so hopefully we'll get them in

245
00:22:07,170 --> 00:22:10,140
probably early next year and and then we

246
00:22:10,140 --> 00:22:12,840
can start using the upstream you boot

247
00:22:12,840 --> 00:22:16,070
and and get off her ancient 2016 fork

248
00:22:16,070 --> 00:22:20,610
the 2600 a speed were based on this

249
00:22:20,610 --> 00:22:22,740
year's view but released for that so

250
00:22:22,740 --> 00:22:24,780
that's at least newer but it's still a

251
00:22:24,780 --> 00:22:27,090
Holly prevalence recode so we'll work

252
00:22:27,090 --> 00:22:28,260
with a speed and trying to get that in

253
00:22:28,260 --> 00:22:29,910
the tree if anyone wants to be you be a

254
00:22:29,910 --> 00:22:32,100
hacker let me know and we can coordinate

255
00:22:32,100 --> 00:22:38,490
that work the other one is you know my

256
00:22:38,490 --> 00:22:39,870
perpetual goal is to get the batch queue

257
00:22:39,870 --> 00:22:41,460
down to zero so I can spend all my time

258
00:22:41,460 --> 00:22:44,400
running instead of at a desk earnings my

259
00:22:44,400 --> 00:22:47,460
hobby so keep sending Apaches upstream

260
00:22:47,460 --> 00:22:49,170
first keep getting in the upstream tree

261
00:22:49,170 --> 00:22:51,690
and I'll work on getting that queue of

262
00:22:51,690 --> 00:22:54,390
old patches down to zero and we can all

263
00:22:54,390 --> 00:22:57,540
retire our pages so that's a little

264
00:22:57,540 --> 00:23:00,150
prepared miniature I had like I said

265
00:23:00,150 --> 00:23:01,200
before I hope so that's jogged your

266
00:23:01,200 --> 00:23:03,360
memory about all the issues you've had

267
00:23:03,360 --> 00:23:06,300
with working with the open BMC kernel so

268
00:23:06,300 --> 00:23:07,380
I'd like to have a bit of a discussion

269
00:23:07,380 --> 00:23:09,630
now there's anything is going to talk

270
00:23:09,630 --> 00:23:11,780
about

271
00:23:13,000 --> 00:23:18,559
so the emmc school UI if I - is it it's

272
00:23:18,559 --> 00:23:20,840
gonna work for it with the ast 2500 as

273
00:23:20,840 --> 00:23:21,290
well

274
00:23:21,290 --> 00:23:23,630
yeah we've tested it on 2500 it should

275
00:23:23,630 --> 00:23:27,950
work on a 2400 that's up straight min

276
00:23:27,950 --> 00:23:30,460
5.4

277
00:23:32,049 --> 00:23:35,870
you mentioned rebasing you boot and you

278
00:23:35,870 --> 00:23:40,280
as far as I know didn't mention ast 2400

279
00:23:40,280 --> 00:23:42,830
in that in the rebus and that is one of

280
00:23:42,830 --> 00:23:44,929
the things that is missing i from the

281
00:23:44,929 --> 00:23:47,150
upstream so in order to get to the

282
00:23:47,150 --> 00:23:48,110
current you booth

283
00:23:48,110 --> 00:23:51,140
would you drop all the AST 2400

284
00:23:51,140 --> 00:23:52,460
platforms or would you upstream that as

285
00:23:52,460 --> 00:23:55,640
well I think the current player did a

286
00:23:55,640 --> 00:23:59,000
lack of people would Bates's leave 2500

287
00:23:59,000 --> 00:24:01,370
on the SDK and move everything else

288
00:24:01,370 --> 00:24:04,700
forward the gotcha there is the SDRAM

289
00:24:04,700 --> 00:24:08,660
training code so Maxim from Google wrote

290
00:24:08,660 --> 00:24:12,559
the training coded C for the 2500 and a

291
00:24:12,559 --> 00:24:14,419
speed have written a version in C for

292
00:24:14,419 --> 00:24:17,690
the 2600 which is great but the 2400 is

293
00:24:17,690 --> 00:24:24,740
a big question mark so you mentioned you

294
00:24:24,740 --> 00:24:27,950
have 150 patches and those are not

295
00:24:27,950 --> 00:24:30,200
upstream yet and the kind of stable tree

296
00:24:30,200 --> 00:24:31,520
right oh yeah

297
00:24:31,520 --> 00:24:37,940
so and yeah 75 on yeah so and what is

298
00:24:37,940 --> 00:24:40,070
the Delta between Lake up once the

299
00:24:40,070 --> 00:24:42,290
common patches are accepted into a Linux

300
00:24:42,290 --> 00:24:45,500
next and still not in the stable tree do

301
00:24:45,500 --> 00:24:47,870
we pull it out to our development branch

302
00:24:47,870 --> 00:24:50,270
or let go v28 yeah it's a great question

303
00:24:50,270 --> 00:24:54,230
so whenever I do a rebase so 5-3 is

304
00:24:54,230 --> 00:24:57,230
coming up this weekend when I get back

305
00:24:57,230 --> 00:24:58,910
from my travel I'll probably replace it

306
00:24:58,910 --> 00:25:01,610
and BMC trail on that and I'll go and do

307
00:25:01,610 --> 00:25:03,110
a bit of a check for what's in Linux

308
00:25:03,110 --> 00:25:05,660
next and where I can all pull clinics

309
00:25:05,660 --> 00:25:07,190
next factors into our tree instead of

310
00:25:07,190 --> 00:25:10,549
the the ones we're carrying and then the

311
00:25:10,549 --> 00:25:12,520
ones that are remaining on top of that

312
00:25:12,520 --> 00:25:15,440
tree once so do you do you read for the

313
00:25:15,440 --> 00:25:17,330
release or do you keep taking the next

314
00:25:17,330 --> 00:25:20,750
and so the way I work is every base on

315
00:25:20,750 --> 00:25:22,820
the stable release a cherry pick back

316
00:25:22,820 --> 00:25:24,770
from Linux next

317
00:25:24,770 --> 00:25:26,930
everything that's in next at that point

318
00:25:26,930 --> 00:25:29,180
in time and then apply the remaining

319
00:25:29,180 --> 00:25:30,440
ones until yeah but the next keep

320
00:25:30,440 --> 00:25:33,440
growing between to release right so do

321
00:25:33,440 --> 00:25:37,130
you do in between base the base of the

322
00:25:37,130 --> 00:25:39,410
next also unlucky wait for the next

323
00:25:39,410 --> 00:25:41,390
release I'd I'd realize why for the next

324
00:25:41,390 --> 00:25:43,040
release yeah we did we don't quite race

325
00:25:43,040 --> 00:25:44,480
based on next or anything like that

326
00:25:44,480 --> 00:25:47,300
oh so when I first started I was kind of

327
00:25:47,300 --> 00:25:50,210
um rebasing regularly but it would

328
00:25:50,210 --> 00:25:51,800
create issues the reporting bug so I'm

329
00:25:51,800 --> 00:25:53,240
we're like ah he's my shower if my

330
00:25:53,240 --> 00:25:54,980
kernel is broken and I don't know what

331
00:25:54,980 --> 00:25:57,590
that is our base yesterday so we stopped

332
00:25:57,590 --> 00:26:02,420
doing that and instead only rebase every

333
00:26:02,420 --> 00:26:03,950
three months so every upstream cone or

334
00:26:03,950 --> 00:26:05,930
at least I'm not sure how that works for

335
00:26:05,930 --> 00:26:07,310
everyone else but that was works really

336
00:26:07,310 --> 00:26:15,950
well for for us yeah there's one big

337
00:26:15,950 --> 00:26:18,500
chunk of code that's I was not in your

338
00:26:18,500 --> 00:26:19,700
presentation I was wondering what the

339
00:26:19,700 --> 00:26:21,650
status was was the jtech subsystem I

340
00:26:21,650 --> 00:26:24,680
think there were 16 runs of review on

341
00:26:24,680 --> 00:26:26,750
the mailing list I don't know why that

342
00:26:26,750 --> 00:26:29,660
wasn't matched no II just thought yeah

343
00:26:29,660 --> 00:26:32,300
just stopped did you that person I don't

344
00:26:32,300 --> 00:26:36,050
know and we wanted to use we should we

345
00:26:36,050 --> 00:26:37,970
should race submitter I thought it was

346
00:26:37,970 --> 00:26:39,140
good to go as he is it was getting

347
00:26:39,140 --> 00:26:42,010
nitpicked and I thought it was ready so

348
00:26:42,010 --> 00:26:44,570
I'm you know if you wanna grab the

349
00:26:44,570 --> 00:26:48,760
patches and resend them oh I like them

350
00:27:04,430 --> 00:27:08,130
so we have a list of a speed device

351
00:27:08,130 --> 00:27:10,050
drivers which are not a frame in a know

352
00:27:10,050 --> 00:27:12,120
do we know whether there's someone is

353
00:27:12,120 --> 00:27:13,950
still working on that

354
00:27:13,950 --> 00:27:15,630
we have a list some that wiki and it's

355
00:27:15,630 --> 00:27:18,120
horribly out-of-date I was gonna put a

356
00:27:18,120 --> 00:27:19,560
link in my presentation then I read it

357
00:27:19,560 --> 00:27:22,500
and I didn't put so we can create a new

358
00:27:22,500 --> 00:27:28,290
list there's nothing that nothing on my

359
00:27:28,290 --> 00:27:30,990
radar that needs to get done let's all

360
00:27:30,990 --> 00:27:34,650
the all the IBM systems the drivers that

361
00:27:34,650 --> 00:27:36,950
we know we need are already in the tree

362
00:27:36,950 --> 00:27:39,930
but I realized that we only is a subset

363
00:27:39,930 --> 00:27:41,700
of the twinning of the a speed ship so I

364
00:27:41,700 --> 00:27:43,230
assume there's other drivers other

365
00:27:43,230 --> 00:27:46,110
people want so yeah I'll update the list

366
00:27:46,110 --> 00:27:48,420
on the wiki and the wiki's editable by

367
00:27:48,420 --> 00:27:51,180
everyone so please add your things to

368
00:27:51,180 --> 00:27:53,130
list and add your names against the

369
00:27:53,130 --> 00:27:55,290
things that you plan on working on are

370
00:27:55,290 --> 00:28:08,130
your team plans I'm working on okay have

371
00:28:08,130 --> 00:28:09,900
you talked to a speed about getting

372
00:28:09,900 --> 00:28:11,760
publicly accessible data sheets without

373
00:28:11,760 --> 00:28:16,220
NDA is that happening no no not happen

374
00:28:16,220 --> 00:28:19,140
is there something that we as a

375
00:28:19,140 --> 00:28:21,890
community could do to persuade them to

376
00:28:21,890 --> 00:28:25,830
keep asking but initially they said yes

377
00:28:25,830 --> 00:28:31,310
but there was a misunderstanding so

378
00:28:31,490 --> 00:28:35,340
whenever I had whenever I write code I I

379
00:28:35,340 --> 00:28:37,230
document the registers as much as

380
00:28:37,230 --> 00:28:38,640
possible

381
00:28:38,640 --> 00:28:40,500
I put all the fines in for all the

382
00:28:40,500 --> 00:28:41,910
registers even if the driver doesn't use

383
00:28:41,910 --> 00:28:43,140
them and things like this

384
00:28:43,140 --> 00:28:45,540
in between the chromium plantation and

385
00:28:45,540 --> 00:28:48,900
and the kernel it's all the bits of

386
00:28:48,900 --> 00:28:51,300
hardware we have code for are very well

387
00:28:51,300 --> 00:28:57,030
publicly documented what it makes sense

388
00:28:57,030 --> 00:28:58,590
to put together a community maintain

389
00:28:58,590 --> 00:29:01,170
data sheet that just aggregates all that

390
00:29:01,170 --> 00:29:03,120
information from various sources maybe

391
00:29:03,120 --> 00:29:05,160
for you know people who do not have

392
00:29:05,160 --> 00:29:06,930
access to the data sheets to just go

393
00:29:06,930 --> 00:29:08,730
through yeah

394
00:29:08,730 --> 00:29:11,010
accessible so doesn't do that I like the

395
00:29:11,010 --> 00:29:13,080
idea of more accessible information I'm

396
00:29:13,080 --> 00:29:16,169
not sure we're allowed to do the

397
00:29:16,169 --> 00:29:21,389
yeah is it you've come across stuff

398
00:29:21,389 --> 00:29:23,070
where you needed access the doubt you

399
00:29:23,070 --> 00:29:26,239
don't have it or you know other people

400
00:29:26,239 --> 00:29:28,559
the datasheet is floating around on the

401
00:29:28,559 --> 00:29:30,299
internet so I get you know anybody who's

402
00:29:30,299 --> 00:29:32,190
ever needed it does have it but it seems

403
00:29:32,190 --> 00:29:34,019
like kind of a you know not great

404
00:29:34,019 --> 00:29:36,539
situation yeah I'll bring it up next

405
00:29:36,539 --> 00:29:43,470
time talk to I speak but um yeah does

406
00:29:43,470 --> 00:29:54,029
never son release a data sheets now

407
00:29:54,029 --> 00:29:55,950
currently knows because the way we're

408
00:29:55,950 --> 00:29:59,789
trying to get our own bandages so I

409
00:29:59,789 --> 00:30:01,710
think this is the same situation but

410
00:30:01,710 --> 00:30:04,259
yeah they're catching up on us so it

411
00:30:04,259 --> 00:30:05,580
would be a competitive advantage to

412
00:30:05,580 --> 00:30:07,379
publish because then people would be

413
00:30:07,379 --> 00:30:10,049
biochip yes no maybe for current

414
00:30:10,049 --> 00:30:14,850
generation it is it is yeah good good

415
00:30:14,850 --> 00:30:17,549
practice but the next generation is

416
00:30:17,549 --> 00:30:19,470
still hidden oh yeah I understand that

417
00:30:19,470 --> 00:30:22,289
yeah okay I was really surprised that I

418
00:30:22,289 --> 00:30:23,609
was allowed to publish all the I speak

419
00:30:23,609 --> 00:30:26,100
code but they were happy writing it I

420
00:30:26,100 --> 00:30:35,269
guess so he's use qmu to boot the kennel

421
00:30:35,269 --> 00:30:37,080
that's not enough ants

422
00:30:37,080 --> 00:30:41,190
Karimi is awesome some people think that

423
00:30:41,190 --> 00:30:42,480
Clemmy is not necessary if you have

424
00:30:42,480 --> 00:30:45,350
hardware I say bollocks you can boot a

425
00:30:45,350 --> 00:30:47,639
kernel in chrome you fast quicker than

426
00:30:47,639 --> 00:30:49,070
you can t FTP it over to your hardware

427
00:30:49,070 --> 00:30:53,639
and setting up hardware JTAG is far more

428
00:30:53,639 --> 00:30:55,739
frustrating than attaching gdb to your

429
00:30:55,739 --> 00:30:58,799
home.you session so highly recommend

430
00:30:58,799 --> 00:31:00,059
next time you have something that

431
00:31:00,059 --> 00:31:01,470
crashes in the kernel or next time

432
00:31:01,470 --> 00:31:02,450
you're trying to do some development

433
00:31:02,450 --> 00:31:05,909
have a go it at Konami we have a really

434
00:31:05,909 --> 00:31:08,039
high quality model upstream to the point

435
00:31:08,039 --> 00:31:09,899
where the came-- maintainer points to

436
00:31:09,899 --> 00:31:11,940
the a speed model as an example of what

437
00:31:11,940 --> 00:31:14,399
to do which is great until you're

438
00:31:14,399 --> 00:31:15,749
working on the a speed model and you

439
00:31:15,749 --> 00:31:20,039
want an example of what to do so yeah

440
00:31:20,039 --> 00:31:22,320
get involved comeyou has this this

441
00:31:22,320 --> 00:31:23,850
really sharp learning curve and once you

442
00:31:23,850 --> 00:31:25,440
get over that hump it's really easy to

443
00:31:25,440 --> 00:31:28,559
use if you feel like implementing a

444
00:31:28,559 --> 00:31:29,680
model have a chat

445
00:31:29,680 --> 00:31:32,620
me doing ICC models is super easy you're

446
00:31:32,620 --> 00:31:34,180
a nice to see dump on all the registers

447
00:31:34,180 --> 00:31:36,100
and your device and you stick them in an

448
00:31:36,100 --> 00:31:37,240
array and all of a sudden you've got a

449
00:31:37,240 --> 00:31:39,340
and almost functional model for most

450
00:31:39,340 --> 00:31:42,460
drivers and you can add a bit of smarts

451
00:31:42,460 --> 00:31:45,370
on top of that things like this super

452
00:31:45,370 --> 00:31:46,720
trivial and then there's more advanced

453
00:31:46,720 --> 00:31:48,960
things modeling Ethernet modeling I

454
00:31:48,960 --> 00:31:51,640
rectus I'd about stuff that we can't be

455
00:31:51,640 --> 00:31:54,910
doing all this kind of gear the girl

456
00:31:54,910 --> 00:31:57,070
with the creamy stuff was both to help

457
00:31:57,070 --> 00:31:58,720
low level developers you know Colonel

458
00:31:58,720 --> 00:32:01,570
you boot but also tell integration

459
00:32:01,570 --> 00:32:03,400
testing and continuous integration of

460
00:32:03,400 --> 00:32:06,340
the entire BMC so if we have a complete

461
00:32:06,340 --> 00:32:09,280
model of the system you can you can boot

462
00:32:09,280 --> 00:32:12,490
open BMC and as I said yesterday we in

463
00:32:12,490 --> 00:32:15,970
CI a-- we run the Romulus model all the

464
00:32:15,970 --> 00:32:19,540
way through to BMC ready state and if it

465
00:32:19,540 --> 00:32:22,360
doesn't get there fail CI so we're

466
00:32:22,360 --> 00:32:24,070
currently using a little bit the next

467
00:32:24,070 --> 00:32:25,630
step would be to try and do a power on

468
00:32:25,630 --> 00:32:28,210
and we've done some experiments hooking

469
00:32:28,210 --> 00:32:32,710
up a PowerPC come you to a arm quim you

470
00:32:32,710 --> 00:32:35,620
and and booting both fomites it's kind

471
00:32:35,620 --> 00:32:38,080
of a work in progress and wants to run

472
00:32:38,080 --> 00:32:39,550
ahead and do that for Intel platforms

473
00:32:39,550 --> 00:32:40,330
that'll be cool

474
00:32:40,330 --> 00:32:43,540
so yeah Co music Emmys fun it's really

475
00:32:43,540 --> 00:32:55,090
useful jump on board so we have we have

476
00:32:55,090 --> 00:32:58,420
upstream we have the a speed s really on

477
00:32:58,420 --> 00:33:00,520
the open BMC comeyou tree and then we

478
00:33:00,520 --> 00:33:02,650
have Cedric's work and Cedric is really

479
00:33:02,650 --> 00:33:04,000
good at sucking and working progress

480
00:33:04,000 --> 00:33:06,700
batches and keeping up to date it's no

481
00:33:06,700 --> 00:33:08,050
one's job at the moment to merge that

482
00:33:08,050 --> 00:33:10,180
into the up in BMC Kumu tree so I'd

483
00:33:10,180 --> 00:33:12,700
recommend looking at Cedric's but we

484
00:33:12,700 --> 00:33:15,280
upstream that regularly number twelve

485
00:33:15,280 --> 00:33:17,530
patches went out last night into our GPO

486
00:33:17,530 --> 00:33:19,810
controller support which is kind of a

487
00:33:19,810 --> 00:33:21,520
big step towards be hard to do a

488
00:33:21,520 --> 00:33:24,790
simulated boot of the BMC and the hosts

489
00:33:24,790 --> 00:33:27,100
because now you can script GPIO

490
00:33:27,100 --> 00:33:32,200
interactions from outside of qmu so yeah

491
00:33:32,200 --> 00:33:33,760
hopefully one day the answer will be at

492
00:33:33,760 --> 00:33:37,210
get install creamy but at the moment go

493
00:33:37,210 --> 00:33:39,900
grab Cedric's tree

494
00:33:39,900 --> 00:33:42,560
are you still accepting

495
00:33:42,560 --> 00:33:45,040
new badges cherry-picking from the

496
00:33:45,040 --> 00:33:49,520
upstream and to our dev yeah continually

497
00:33:49,520 --> 00:33:50,660
it never stops

498
00:33:50,660 --> 00:33:52,790
yeah sorry I didn't class so there's my

499
00:33:52,790 --> 00:33:54,650
question is like if I have something in

500
00:33:54,650 --> 00:33:56,600
the next and I wanted to put it cou out

501
00:33:56,600 --> 00:33:58,220
there free so we can just send little

502
00:33:58,220 --> 00:34:00,230
cash for those badges yeah either if

503
00:34:00,230 --> 00:34:02,030
it's hard to back pour it back put it

504
00:34:02,030 --> 00:34:03,350
yourself and send the patch them adding

505
00:34:03,350 --> 00:34:04,970
weights you know if it's trivial

506
00:34:04,970 --> 00:34:07,160
send me the shot and I'll show you kiddy

507
00:34:07,160 --> 00:34:16,190
show someone what kind of testing has

508
00:34:16,190 --> 00:34:18,230
been down when your rebase to the next

509
00:34:18,230 --> 00:34:20,418
version say maybe one or two weeks so

510
00:34:20,418 --> 00:34:24,310
we'll have 5.3 available ray will try to

511
00:34:24,310 --> 00:34:36,620
publish their door 5 or 3 3 then I'll

512
00:34:36,620 --> 00:34:38,449
boot on all the machines I've available

513
00:34:38,449 --> 00:34:39,980
so I'll boot it on a Witherspoon and

514
00:34:39,980 --> 00:34:41,630
I'll boot on a Romulus so that kind of

515
00:34:41,630 --> 00:34:45,139
covers the UI based system and the wrong

516
00:34:45,139 --> 00:34:50,330
end system and comeyou so that's this

517
00:34:50,330 --> 00:34:51,050
thing I do

518
00:34:51,050 --> 00:34:53,270
usually when before I'd bump into the

519
00:34:53,270 --> 00:34:56,060
new one in open BMC I'll send out that

520
00:34:56,060 --> 00:34:57,530
announcement to the mailing list and I

521
00:34:57,530 --> 00:34:58,850
know you're really good at replying to

522
00:34:58,850 --> 00:35:00,560
those and and running on your systems

523
00:35:00,560 --> 00:35:03,280
which is great code real fun to do that

524
00:35:03,280 --> 00:35:06,680
yeah if you've got ideas for more kind

525
00:35:06,680 --> 00:35:08,800
of automated testing and whatnot

526
00:35:08,800 --> 00:35:10,580
continuous integration the upstream

527
00:35:10,580 --> 00:35:11,810
kernel is a pretty hot topic at the

528
00:35:11,810 --> 00:35:13,670
moment there's a two-day hackathon at

529
00:35:13,670 --> 00:35:15,350
the end of plumbers which is next week

530
00:35:15,350 --> 00:35:17,900
in Portugal where we're gonna do some

531
00:35:17,900 --> 00:35:20,150
work on on kernel canoes integration and

532
00:35:20,150 --> 00:35:22,640
so if we had more tests that made us

533
00:35:22,640 --> 00:35:25,940
happy with the upstream kernel on bmc's

534
00:35:25,940 --> 00:35:27,860
that they could go into that project

535
00:35:27,860 --> 00:35:31,760
the reason asked renée's are i try to

536
00:35:31,760 --> 00:35:33,620
think about her I'm not sure if anyone

537
00:35:33,620 --> 00:35:36,130
tried to become tiresome ltp testicle

538
00:35:36,130 --> 00:35:38,840
for arm and it's like to run it on BMC

539
00:35:38,840 --> 00:35:41,930
and then what the result would be I've

540
00:35:41,930 --> 00:35:44,510
never played with LTP but that would be

541
00:35:44,510 --> 00:35:46,940
cool and if someone got that going on

542
00:35:46,940 --> 00:35:48,500
certainly add that to kind of my suite

543
00:35:48,500 --> 00:35:51,680
of things I do before I push to UM to

544
00:35:51,680 --> 00:35:54,320
bump in open VM see ya have you played

545
00:35:54,320 --> 00:35:56,350
with it a lot uh I tried

546
00:35:56,350 --> 00:35:59,620
I went through some like for CPU

547
00:35:59,620 --> 00:36:01,330
scheduling a memory management code is

548
00:36:01,330 --> 00:36:03,870
sweetened by C looks like it's pretty

549
00:36:03,870 --> 00:36:06,700
but I haven't tried because I have to

550
00:36:06,700 --> 00:36:09,130
copy you that to some metal a or lick

551
00:36:09,130 --> 00:36:10,720
the recipe file that's why am i

552
00:36:10,720 --> 00:36:12,250
screaming for anyone in the community

553
00:36:12,250 --> 00:36:15,100
you have to try there yeah I think that

554
00:36:15,100 --> 00:36:18,790
you can build LTPS by the fury so

555
00:36:18,790 --> 00:36:20,350
actually no one has a layer for doing

556
00:36:20,350 --> 00:36:23,080
LTP it's but if you up Tony I'm not a

557
00:36:23,080 --> 00:36:27,310
your tech person sorry yeah but yeah

558
00:36:27,310 --> 00:36:28,600
maybe you looking for a burr later yeah

559
00:36:28,600 --> 00:36:30,670
yeah about that it's yeah I like where

560
00:36:30,670 --> 00:36:31,060
you going

561
00:36:31,060 --> 00:36:39,190
thank you is there something how to for

562
00:36:39,190 --> 00:36:44,200
patching the new drivers new you have to

563
00:36:44,200 --> 00:36:46,090
set the beginning to to do that and now

564
00:36:46,090 --> 00:36:48,520
customers or ODMs are asking us and we

565
00:36:48,520 --> 00:36:51,550
have our own how to that based on all

566
00:36:51,550 --> 00:36:54,010
kinds of things but is there is

567
00:36:54,010 --> 00:36:56,490
something that well documented so

568
00:36:56,490 --> 00:36:58,660
fascinating patches to the train yes

569
00:36:58,660 --> 00:37:01,990
poor yes first before a new drivers

570
00:37:01,990 --> 00:37:09,670
mainly yeah if Isaac I don't know how to

571
00:37:09,670 --> 00:37:12,760
use my web browser sorry I'm just

572
00:37:12,760 --> 00:37:16,690
calling on open BMC github so open

573
00:37:16,690 --> 00:37:19,240
github.com I from BMC / linux slash wiki

574
00:37:19,240 --> 00:37:21,310
there's a bunch of tips and tricks and

575
00:37:21,310 --> 00:37:24,460
development process there I recommend

576
00:37:24,460 --> 00:37:26,980
you use that I try and keep that up to

577
00:37:26,980 --> 00:37:28,480
date hasn't been touched in a little

578
00:37:28,480 --> 00:37:31,780
while so if you find emissions or

579
00:37:31,780 --> 00:37:33,130
information that doesn't look right

580
00:37:33,130 --> 00:37:38,470
can touch and I can update it okay yeah

581
00:37:38,470 --> 00:37:40,300
I'd love to see patches from your

582
00:37:40,300 --> 00:37:51,700
audience not yeah Oh said it alright

583
00:37:51,700 --> 00:37:53,320
I'll be around with us awake come talk

584
00:37:53,320 --> 00:37:54,100
to me

585
00:37:54,100 --> 00:37:56,200
happy to have discussions about whatever

586
00:37:56,200 --> 00:37:59,490
I want to talk about thanks listening

587
00:38:01,260 --> 00:38:02,220
[Applause]

588
00:38:02,220 --> 00:38:09,970
[Music]

