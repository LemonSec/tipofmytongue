1
00:00:03,190 --> 00:00:06,259
[Music]

2
00:00:07,099 --> 00:00:11,190
okay I guess it's time so hi everyone

3
00:00:11,190 --> 00:00:14,670
I'm Chris Lucy and be on the internet

4
00:00:14,670 --> 00:00:18,180
and I'm here to talk about a greenfield

5
00:00:18,180 --> 00:00:20,460
project beam cease and why we why we

6
00:00:20,460 --> 00:00:22,830
should do them and what Valley that camp

7
00:00:22,830 --> 00:00:34,110
out so first okay no I can't select the

8
00:00:34,110 --> 00:00:38,280
next line should I maybe dude okay there

9
00:00:38,280 --> 00:00:40,379
okay yes sorry

10
00:00:40,379 --> 00:00:43,680
is it better or yep okay well so you're

11
00:00:43,680 --> 00:00:48,000
gonna hear some pretty some pretty - guy

12
00:00:48,000 --> 00:00:50,460
things so I feel I should start out by

13
00:00:50,460 --> 00:00:52,829
saying this it's like this is just crazy

14
00:00:52,829 --> 00:00:59,370
talk for me so yeah there are so what is

15
00:00:59,370 --> 00:01:01,289
a greenfield product right so green food

16
00:01:01,289 --> 00:01:03,390
products refers to the fact that we have

17
00:01:03,390 --> 00:01:05,339
instead of having an existing building

18
00:01:05,339 --> 00:01:07,740
we build or we renovate or something

19
00:01:07,740 --> 00:01:10,530
like that we start on on this beautiful

20
00:01:10,530 --> 00:01:13,080
green land where there is nothing and we

21
00:01:13,080 --> 00:01:15,810
don't have any prior work or there is no

22
00:01:15,810 --> 00:01:20,880
constraints that are imposed so more or

23
00:01:20,880 --> 00:01:22,920
less this is you take the technical

24
00:01:22,920 --> 00:01:24,720
legacy you have and then you just ignore

25
00:01:24,720 --> 00:01:28,100
it you don't consider things like

26
00:01:28,100 --> 00:01:30,930
migration plants or other things you

27
00:01:30,930 --> 00:01:34,229
just look at an idea and think wouldn't

28
00:01:34,229 --> 00:01:37,110
it be great if this worked so yeah it's

29
00:01:37,110 --> 00:01:41,939
it's it allows you to look at an idea

30
00:01:41,939 --> 00:01:45,860
and consider it for its best merit not

31
00:01:45,860 --> 00:01:47,549
things Oh

32
00:01:47,549 --> 00:01:50,220
what would a customer say if they had to

33
00:01:50,220 --> 00:01:52,020
use it more like how could it actually

34
00:01:52,020 --> 00:01:55,770
work so yeah you don't have any

35
00:01:55,770 --> 00:01:58,290
repercussions it might be faster to

36
00:01:58,290 --> 00:02:00,000
prototype depending on how the framework

37
00:02:00,000 --> 00:02:04,680
is you may be there is a very strict

38
00:02:04,680 --> 00:02:06,390
process you have to follow in order to

39
00:02:06,390 --> 00:02:08,610
to get something in in some existing

40
00:02:08,610 --> 00:02:11,489
product so this this might be faster to

41
00:02:11,489 --> 00:02:15,450
prod up the prototype using a Greenfield

42
00:02:15,450 --> 00:02:19,230
it it might serve as a way to validate

43
00:02:19,230 --> 00:02:21,810
something that out of your folks things

44
00:02:21,810 --> 00:02:23,099
is just crazy

45
00:02:23,099 --> 00:02:26,610
and yeah you might get some data that

46
00:02:26,610 --> 00:02:28,550
proves that this is actually useful

47
00:02:28,550 --> 00:02:33,569
so for BMC's oh yeah I should mention

48
00:02:33,569 --> 00:02:35,550
also there is there is one product that

49
00:02:35,550 --> 00:02:39,150
is doing some quite nice green tea work

50
00:02:39,150 --> 00:02:41,549
that we have heard of already which is

51
00:02:41,549 --> 00:02:44,610
Linux boot they they for example they

52
00:02:44,610 --> 00:02:47,310
are looking at you don't have to use

53
00:02:47,310 --> 00:02:49,769
TFTP to boot from network and you can

54
00:02:49,769 --> 00:02:53,269
use HTTP and stuff like that and I think

55
00:02:53,269 --> 00:02:55,500
yeah so there are some really

56
00:02:55,500 --> 00:02:58,110
interesting ideas there so for BMC

57
00:02:58,110 --> 00:03:00,720
though which we're in this track looking

58
00:03:00,720 --> 00:03:03,840
at what can we possibly want to change

59
00:03:03,840 --> 00:03:06,239
there well so we have heard for example

60
00:03:06,239 --> 00:03:09,329
that maybe our trust model is not as

61
00:03:09,329 --> 00:03:11,760
good as it should be

62
00:03:11,760 --> 00:03:14,610
we've been hearing a lot of this host by

63
00:03:14,610 --> 00:03:18,660
BMC trust that has served us well in the

64
00:03:18,660 --> 00:03:22,310
past but maybe not so much today where

65
00:03:22,310 --> 00:03:25,260
the provisioning story is also quite

66
00:03:25,260 --> 00:03:27,389
interesting which we're gonna look at it

67
00:03:27,389 --> 00:03:31,079
on as well although vacation is another

68
00:03:31,079 --> 00:03:33,720
one where I think there is a lot of room

69
00:03:33,720 --> 00:03:36,299
for improvement that we can and yeah

70
00:03:36,299 --> 00:03:38,010
some some ideas I'm gonna present there

71
00:03:38,010 --> 00:03:41,400
as well then I have authorization we

72
00:03:41,400 --> 00:03:44,220
have metrics we have management and we

73
00:03:44,220 --> 00:03:46,260
have yes there is quite a lot of things

74
00:03:46,260 --> 00:03:51,060
we can look at but sadly we we only have

75
00:03:51,060 --> 00:03:53,790
30 minutes so we we're gonna pick three

76
00:03:53,790 --> 00:03:55,970
of these and these are going to be the

77
00:03:55,970 --> 00:04:02,450
three first that I mentioned so the what

78
00:04:02,450 --> 00:04:05,400
what do I mean when I say revisiting the

79
00:04:05,400 --> 00:04:09,840
trust model well so historically the BMC

80
00:04:09,840 --> 00:04:12,389
has just been an assistant to the hosts

81
00:04:12,389 --> 00:04:14,910
all right so you whoever owns the hosts

82
00:04:14,910 --> 00:04:18,988
like financial otherwise is the owner of

83
00:04:18,988 --> 00:04:20,849
the BMC so why should you ever want to

84
00:04:20,849 --> 00:04:22,770
protect yourself from the host well

85
00:04:22,770 --> 00:04:27,260
today that has has changed right and

86
00:04:27,260 --> 00:04:31,220
you seen that with the pants down

87
00:04:31,220 --> 00:04:37,760
vulnerability where I am so my my

88
00:04:37,760 --> 00:04:39,140
thinking there is that that was not a

89
00:04:39,140 --> 00:04:40,820
surprise for a lot of people working in

90
00:04:40,820 --> 00:04:42,470
the BMC space because that is just how

91
00:04:42,470 --> 00:04:45,140
beams he's used to work this became the

92
00:04:45,140 --> 00:04:49,640
CV Eve because our expectations from the

93
00:04:49,640 --> 00:04:51,680
customers has changed not because

94
00:04:51,680 --> 00:04:54,920
something suddenly broke right so this

95
00:04:54,920 --> 00:04:57,170
is just how the industry has evolved and

96
00:04:57,170 --> 00:04:59,090
we need to follow follow with the

97
00:04:59,090 --> 00:05:01,970
industry so usually how do we do this

98
00:05:01,970 --> 00:05:04,160
well we we can just disconnect a lot of

99
00:05:04,160 --> 00:05:06,080
things from the host that's simple as

100
00:05:06,080 --> 00:05:08,990
that right if you don't need like a PCI

101
00:05:08,990 --> 00:05:11,810
Express connection to the host for

102
00:05:11,810 --> 00:05:13,550
example for VGA or otherwise you can

103
00:05:13,550 --> 00:05:15,530
just maybe by a beam see that does not

104
00:05:15,530 --> 00:05:18,500
have that or maybe disable the clock if

105
00:05:18,500 --> 00:05:21,890
your or they stuck with that BMC so that

106
00:05:21,890 --> 00:05:26,800
can serve for a lot of the use cases to

107
00:05:27,070 --> 00:05:30,080
get a light but that trust

108
00:05:30,080 --> 00:05:32,150
but there is one concept that I would

109
00:05:32,150 --> 00:05:33,500
like to focus on that it's a bit more

110
00:05:33,500 --> 00:05:35,210
tricky that that I don't think has

111
00:05:35,210 --> 00:05:37,970
received so much attention but this is

112
00:05:37,970 --> 00:05:41,180
still quite crucial and that is how do

113
00:05:41,180 --> 00:05:43,550
we acquire the wall clock time of the

114
00:05:43,550 --> 00:05:49,040
BMC so today how do we do this is we

115
00:05:49,040 --> 00:05:50,990
essentially oh yeah sorry

116
00:05:50,990 --> 00:05:54,620
why should we care even about time well

117
00:05:54,620 --> 00:05:59,630
a very obvious choice is vlogging right

118
00:05:59,630 --> 00:06:02,090
and anyone that has ever debugged

119
00:06:02,090 --> 00:06:04,520
something from two machines that have a

120
00:06:04,520 --> 00:06:06,770
clock skew or even the wrong timezone

121
00:06:06,770 --> 00:06:08,810
the configure knows how painful that is

122
00:06:08,810 --> 00:06:11,570
so but yeah and then you have things

123
00:06:11,570 --> 00:06:13,640
like scheduling where maybe there is

124
00:06:13,640 --> 00:06:16,780
someone that does some kind of beam see

125
00:06:16,780 --> 00:06:20,360
API calls every X and it's you told the

126
00:06:20,360 --> 00:06:22,430
beam C to do it internally and then you

127
00:06:22,430 --> 00:06:25,280
want to do that oh I don't know but the

128
00:06:25,280 --> 00:06:26,840
most important thing is authentication

129
00:06:26,840 --> 00:06:30,080
so while maybe in the past this hasn't

130
00:06:30,080 --> 00:06:31,670
been a big problem where we've been

131
00:06:31,670 --> 00:06:34,330
using password authentication and such

132
00:06:34,330 --> 00:06:37,690
with the

133
00:06:38,450 --> 00:06:41,850
times you know progressing we are now

134
00:06:41,850 --> 00:06:44,490
looking into more advanced forms of

135
00:06:44,490 --> 00:06:46,470
authentication with certificates and

136
00:06:46,470 --> 00:06:47,280
time-based

137
00:06:47,280 --> 00:06:51,060
so if when you have such authentication

138
00:06:51,060 --> 00:06:53,550
or credentials you if you control time

139
00:06:53,550 --> 00:06:55,890
you control the lifecycle right you can

140
00:06:55,890 --> 00:06:58,650
jump backwards in time and then suddenly

141
00:06:58,650 --> 00:07:00,420
that credential that you might be manage

142
00:07:00,420 --> 00:07:03,510
to lift from someone is valid yeah so

143
00:07:03,510 --> 00:07:08,760
this is quite important yes so how do we

144
00:07:08,760 --> 00:07:12,240
acquire time today a lot of systems just

145
00:07:12,240 --> 00:07:14,550
blindly copy it from the host and that's

146
00:07:14,550 --> 00:07:18,630
the trust problem we have so but what

147
00:07:18,630 --> 00:07:20,990
can we use instead well if the first

148
00:07:20,990 --> 00:07:25,560
naive idea is to use an NTP and that

149
00:07:25,560 --> 00:07:27,450
that works for a lot of cases and it's

150
00:07:27,450 --> 00:07:29,850
you for people not familiar with it it's

151
00:07:29,850 --> 00:07:33,000
you just have public name sorry time

152
00:07:33,000 --> 00:07:35,070
servers out on the internet that you can

153
00:07:35,070 --> 00:07:37,140
just get your time from the problem with

154
00:07:37,140 --> 00:07:38,940
this is that it's not secured and it's

155
00:07:38,940 --> 00:07:42,540
not authenticated so there if you're a

156
00:07:42,540 --> 00:07:45,600
bad actor and you your able to influence

157
00:07:45,600 --> 00:07:49,800
this then you can lie so there are some

158
00:07:49,800 --> 00:07:52,140
additions to NTP where you have secure

159
00:07:52,140 --> 00:07:54,330
NTP but the problem with this is that

160
00:07:54,330 --> 00:07:57,140
that doesn't really scale and it hasn't

161
00:07:57,140 --> 00:08:02,190
been adopted publicly so we need

162
00:08:02,190 --> 00:08:06,210
something else there is this protocol

163
00:08:06,210 --> 00:08:09,240
called rough time and name kind of

164
00:08:09,240 --> 00:08:12,060
implies that it's you get a rough time

165
00:08:12,060 --> 00:08:16,980
so it's it's yeah it's it's it is a

166
00:08:16,980 --> 00:08:19,290
service meant to solve this problem

167
00:08:19,290 --> 00:08:21,360
where you have where you you are not

168
00:08:21,360 --> 00:08:23,010
trusting the network but you still need

169
00:08:23,010 --> 00:08:25,350
to know what the time is so you have

170
00:08:25,350 --> 00:08:27,180
public service operated by for example

171
00:08:27,180 --> 00:08:29,220
Google and cloud fair that we can use

172
00:08:29,220 --> 00:08:33,360
for this simple introduction to rough

173
00:08:33,360 --> 00:08:36,090
time is that you generates a number

174
00:08:36,090 --> 00:08:37,740
doesn't have to mean anything for you

175
00:08:37,740 --> 00:08:40,140
you give it to a rough time server and

176
00:08:40,140 --> 00:08:42,419
you receive back assigned timestamp

177
00:08:42,419 --> 00:08:44,490
radius which we will talk about in a bit

178
00:08:44,490 --> 00:08:47,100
and they well the signature so you can

179
00:08:47,100 --> 00:08:49,170
very validate that this was actually

180
00:08:49,170 --> 00:08:51,200
from this this server

181
00:08:51,200 --> 00:08:53,540
is not encrypted so anyone that is you

182
00:08:53,540 --> 00:08:55,760
know listening on this can also audit

183
00:08:55,760 --> 00:09:00,200
this so if it is possible to detect for

184
00:09:00,200 --> 00:09:02,830
example state level attacks where if a

185
00:09:02,830 --> 00:09:05,390
rough time server were to be compromised

186
00:09:05,390 --> 00:09:08,840
and only lie to a certain IPS that would

187
00:09:08,840 --> 00:09:10,730
be easily detectable for anyone that

188
00:09:10,730 --> 00:09:14,960
wishes so what what is oh yeah thanks to

189
00:09:14,960 --> 00:09:21,440
a cloud refer for these diagrams so what

190
00:09:21,440 --> 00:09:23,690
is this radius well the problem is that

191
00:09:23,690 --> 00:09:26,230
we're doing signatures and checking on

192
00:09:26,230 --> 00:09:29,450
potentially a lot of incoming requests

193
00:09:29,450 --> 00:09:31,970
so what rough time does is that it has

194
00:09:31,970 --> 00:09:34,760
this concept of a batch where the server

195
00:09:34,760 --> 00:09:36,950
can in order to save CPU cycles or

196
00:09:36,950 --> 00:09:39,620
otherwise patch everything together so

197
00:09:39,620 --> 00:09:41,420
if they say ok well I'm gonna wait for

198
00:09:41,420 --> 00:09:43,940
an extreme example would be 5 seconds

199
00:09:43,940 --> 00:09:45,710
and then take all the requests and then

200
00:09:45,710 --> 00:09:49,640
sign everything in one go and there is a

201
00:09:49,640 --> 00:09:51,860
way for that to be done very efficiently

202
00:09:51,860 --> 00:09:55,220
in the protocol and in that case the

203
00:09:55,220 --> 00:09:57,320
radius would be 5 seconds because you

204
00:09:57,320 --> 00:10:01,090
have an uncertainty of 5 seconds in that

205
00:10:01,090 --> 00:10:04,790
reply so the problem here is ok well we

206
00:10:04,790 --> 00:10:07,940
now have unauthenticated or say we have

207
00:10:07,940 --> 00:10:12,470
an authenticated time window which but

208
00:10:12,470 --> 00:10:14,690
that is not good enough for locks but we

209
00:10:14,690 --> 00:10:17,720
can use it together with MTP to get a

210
00:10:17,720 --> 00:10:21,260
precision or a precision to precision

211
00:10:21,260 --> 00:10:25,250
time stop sorry this allows us to both

212
00:10:25,250 --> 00:10:29,030
have the PI I needed in that we have a

213
00:10:29,030 --> 00:10:30,680
time window where we can trust at the

214
00:10:30,680 --> 00:10:33,350
time ISM and we have the precision for

215
00:10:33,350 --> 00:10:36,680
logs so the worst case scenario is that

216
00:10:36,680 --> 00:10:38,900
someone lies on the NTP but that can

217
00:10:38,900 --> 00:10:42,680
just skew the time a bit right so your

218
00:10:42,680 --> 00:10:45,200
logs will maybe not be as precise but I

219
00:10:45,200 --> 00:10:47,690
don't know why would anyone like as an

220
00:10:47,690 --> 00:10:49,850
attacker why would you do that there is

221
00:10:49,850 --> 00:10:54,050
nothing for you to gain and more in save

222
00:10:54,050 --> 00:10:56,750
the code not so much say vertical maybe

223
00:10:56,750 --> 00:10:59,180
there it is part of a open source

224
00:10:59,180 --> 00:11:02,780
project where called ubian see where you

225
00:11:02,780 --> 00:11:04,310
this is more or less

226
00:11:04,310 --> 00:11:07,460
lifted from you BMC animal familiar with

227
00:11:07,460 --> 00:11:10,460
go knows that there are a couple of if

228
00:11:10,460 --> 00:11:13,310
error equals or not equals nil missing

229
00:11:13,310 --> 00:11:16,370
but that's that's about it so this is

230
00:11:16,370 --> 00:11:18,529
this is how simple it can be in order to

231
00:11:18,529 --> 00:11:25,420
get ahead of time the yeah sorry yeah

232
00:11:28,510 --> 00:11:32,510
yeah yeah in the model with the BMC is

233
00:11:32,510 --> 00:11:34,580
how do you trust and yeah it attend

234
00:11:34,580 --> 00:11:37,730
Akkad's BIOS yeah and if we expose an

235
00:11:37,730 --> 00:11:40,580
API to set time only in the BIOS yeah

236
00:11:40,580 --> 00:11:42,770
why do you think it's a challenge why

237
00:11:42,770 --> 00:11:46,520
why do you trust the bias here right if

238
00:11:46,520 --> 00:11:50,150
I'm on a bare metal if I bought a server

239
00:11:50,150 --> 00:11:53,830
and I set the hardware clock to 1970

240
00:11:53,830 --> 00:11:56,210
wouldn't the BMC trust that time in that

241
00:11:56,210 --> 00:12:02,210
case but how you can tamper with fires

242
00:12:02,210 --> 00:12:04,400
because that's your trusting - right we

243
00:12:04,400 --> 00:12:06,050
are indicating by us that that was yeah

244
00:12:06,050 --> 00:12:08,900
I'm doing factory time time is stored in

245
00:12:08,900 --> 00:12:11,210
the hardware clock of the the machine

246
00:12:11,210 --> 00:12:13,280
right so if I can just set the hardware

247
00:12:13,280 --> 00:12:16,190
clock which is a normal thing for the

248
00:12:16,190 --> 00:12:20,060
the operating system to do so unless you

249
00:12:20,060 --> 00:12:22,880
have like two RT C's on the board where

250
00:12:22,880 --> 00:12:26,240
one is authenticated in some way and one

251
00:12:26,240 --> 00:12:29,300
is unauthenticated which is the one you

252
00:12:29,300 --> 00:12:31,310
can like because as a customer I would

253
00:12:31,310 --> 00:12:33,980
maybe want to be able to set my time for

254
00:12:33,980 --> 00:12:37,250
example a common thing that you have to

255
00:12:37,250 --> 00:12:39,020
choose is if you want the hardware clock

256
00:12:39,020 --> 00:12:42,350
to be UTC or local time and if I'm

257
00:12:42,350 --> 00:12:43,910
installing an operating system on the

258
00:12:43,910 --> 00:12:46,190
bare metal that requires CTC or local

259
00:12:46,190 --> 00:12:49,010
time and this this bias clock is

260
00:12:49,010 --> 00:12:52,130
something else I'm I'm happy to talk

261
00:12:52,130 --> 00:12:55,180
about it afterwards about this yeah

262
00:12:55,180 --> 00:12:59,420
cool thanks so the trade-off that we're

263
00:12:59,420 --> 00:13:01,040
doing here is of course we're adding

264
00:13:01,040 --> 00:13:03,410
trust to some other service and we need

265
00:13:03,410 --> 00:13:05,420
a way to validate that and in the case

266
00:13:05,420 --> 00:13:07,600
of rough time we add some public keys

267
00:13:07,600 --> 00:13:10,160
for Ferdie servers this is not very

268
00:13:10,160 --> 00:13:12,950
different from the the trust store that

269
00:13:12,950 --> 00:13:15,770
bmc's already have in in order to be

270
00:13:15,770 --> 00:13:18,340
sorry in order to be able to validate

271
00:13:18,340 --> 00:13:21,380
HTTPS certificates so it shouldn't be a

272
00:13:21,380 --> 00:13:24,440
big deal but it's worth mentioning so

273
00:13:24,440 --> 00:13:26,780
what what we have gained here is that we

274
00:13:26,780 --> 00:13:29,750
have decoupled the the trust of the

275
00:13:29,750 --> 00:13:32,180
hosts time system but we added a

276
00:13:32,180 --> 00:13:33,980
dependency on an independent third party

277
00:13:33,980 --> 00:13:37,400
for some prop for some companies this

278
00:13:37,400 --> 00:13:39,920
might be a problem but there is really

279
00:13:39,920 --> 00:13:42,980
not such a big deal to run your own in

280
00:13:42,980 --> 00:13:46,040
in-house rough time and compile your

281
00:13:46,040 --> 00:13:48,890
firmware or set your BMC to use your

282
00:13:48,890 --> 00:13:53,030
in-house rough time server instead okay

283
00:13:53,030 --> 00:13:56,300
so we managed to look at that and that I

284
00:13:56,300 --> 00:13:57,920
want to so we're we have two more

285
00:13:57,920 --> 00:14:00,400
pie-in-the-sky things to look at so

286
00:14:00,400 --> 00:14:06,110
provisioning so this is I yeah there is

287
00:14:06,110 --> 00:14:09,290
a slight type of here where we this is

288
00:14:09,290 --> 00:14:11,960
but this is normally how you would you

289
00:14:11,960 --> 00:14:15,010
buy a box you set up your own network

290
00:14:15,010 --> 00:14:17,270
preferably not using the same IP that

291
00:14:17,270 --> 00:14:20,630
you're about to SSH into but that's your

292
00:14:20,630 --> 00:14:22,820
mileage may vary I guess so

293
00:14:22,820 --> 00:14:24,860
you set up your local IP address and

294
00:14:24,860 --> 00:14:27,290
then your SSH to the machine you set up

295
00:14:27,290 --> 00:14:29,240
do you configure an IPS it changed your

296
00:14:29,240 --> 00:14:32,140
password you set a hostname yeah that's

297
00:14:32,140 --> 00:14:35,590
usually how you have to provision these

298
00:14:35,590 --> 00:14:37,430
incidentally it's also interesting that

299
00:14:37,430 --> 00:14:40,870
California passed I think it was a lower

300
00:14:40,870 --> 00:14:43,930
one year ago or something that forbids

301
00:14:43,930 --> 00:14:46,640
connected devices to have a default

302
00:14:46,640 --> 00:14:47,180
password

303
00:14:47,180 --> 00:14:50,660
so how II SSH into the machine initially

304
00:14:50,660 --> 00:14:53,150
is also an interesting food for thought

305
00:14:53,150 --> 00:14:57,050
but maybe if you're a bit more a bigger

306
00:14:57,050 --> 00:14:59,180
corp you have a process in order to

307
00:14:59,180 --> 00:15:02,480
register a MAC address for your global

308
00:15:02,480 --> 00:15:05,480
DHCP server that you then connect your

309
00:15:05,480 --> 00:15:07,640
server into that you can all straight

310
00:15:07,640 --> 00:15:10,730
SSH into the DNS name oh that's that's a

311
00:15:10,730 --> 00:15:14,480
that's a better way you'd still have to

312
00:15:14,480 --> 00:15:18,320
set password if you're lucky you the BMC

313
00:15:18,320 --> 00:15:22,000
accepted that host name but the GP is an

314
00:15:22,000 --> 00:15:25,130
untrusted unverified source so that

315
00:15:25,130 --> 00:15:26,960
means that someone's are not some actor

316
00:15:26,960 --> 00:15:28,490
on your network and change your host

317
00:15:28,490 --> 00:15:32,080
name which probably isn't a great thing

318
00:15:32,080 --> 00:15:34,930
another big thing or a big problem with

319
00:15:34,930 --> 00:15:40,440
this approach is when the there yeah

320
00:15:40,440 --> 00:15:44,200
yeah can anyone think of a problem with

321
00:15:44,200 --> 00:15:50,830
relying on the HCP like this so when

322
00:15:50,830 --> 00:15:54,160
when you have like Ida Raptors or a

323
00:15:54,160 --> 00:15:57,370
power outage in your data center and all

324
00:15:57,370 --> 00:15:59,560
your servers go down and unsubtle they

325
00:15:59,560 --> 00:16:03,190
come back up you have you know 10,000

326
00:16:03,190 --> 00:16:05,640
servers there suddenly want the DHCP if

327
00:16:05,640 --> 00:16:08,680
the DHCP server is even alive because

328
00:16:08,680 --> 00:16:13,870
everything went down so preferably what

329
00:16:13,870 --> 00:16:16,930
we need is instead of using DHCP we need

330
00:16:16,930 --> 00:16:19,150
a magical protocol that supports

331
00:16:19,150 --> 00:16:21,760
automatical or so dramatic

332
00:16:21,760 --> 00:16:23,740
predictable addressing without collision

333
00:16:23,740 --> 00:16:26,260
that is stateless or at least not Fannin

334
00:16:26,260 --> 00:16:31,000
and that is already supported preferably

335
00:16:31,000 --> 00:16:34,240
it should also end with the number 6 but

336
00:16:34,240 --> 00:16:36,880
yeah it turns out that ipv6 is

337
00:16:36,880 --> 00:16:39,280
everything we need here because the

338
00:16:39,280 --> 00:16:42,250
router instead of us asking for an IP

339
00:16:42,250 --> 00:16:45,310
address the router is just constantly

340
00:16:45,310 --> 00:16:49,510
broadcasting this is how this is how

341
00:16:49,510 --> 00:16:51,760
Network addresses looks like in this

342
00:16:51,760 --> 00:16:54,010
network so yet the only thing you need

343
00:16:54,010 --> 00:16:56,590
to do is listen if you don't have a

344
00:16:56,590 --> 00:16:58,210
router maybe that went down in that

345
00:16:58,210 --> 00:17:01,060
power outage as well you have the fe80

346
00:17:01,060 --> 00:17:03,490
or relate link local addresses so

347
00:17:03,490 --> 00:17:07,709
relying on that is it's not a big deal

348
00:17:07,709 --> 00:17:13,510
you can also use this broadcast add-on

349
00:17:13,510 --> 00:17:16,209
called RG and SS in order to add name

350
00:17:16,209 --> 00:17:18,490
servers so you have a more or less

351
00:17:18,490 --> 00:17:20,500
perfect replacement for DGP here and

352
00:17:20,500 --> 00:17:25,030
it's all stateless almost because what

353
00:17:25,030 --> 00:17:28,660
the the one thing we're missing here is

354
00:17:28,660 --> 00:17:32,280
a host name okay so and this is this is

355
00:17:32,280 --> 00:17:35,530
trickier because host names are it's

356
00:17:35,530 --> 00:17:38,140
kind of like Tolkien versus Smurfs

357
00:17:38,140 --> 00:17:40,900
alright so one one company wants to name

358
00:17:40,900 --> 00:17:43,120
it X some other one wants to name it a

359
00:17:43,120 --> 00:17:45,200
one right so this is

360
00:17:45,200 --> 00:17:46,730
don't think we will ever fix this or

361
00:17:46,730 --> 00:17:48,769
change this so we need to accept that

362
00:17:48,769 --> 00:17:50,779
this is customer dependent and needs to

363
00:17:50,779 --> 00:17:53,539
come externally but one way we can

364
00:17:53,539 --> 00:17:55,130
improve on this is we use something that

365
00:17:55,130 --> 00:18:01,580
is not so DHCP is a kind of an annoying

366
00:18:01,580 --> 00:18:04,130
protocol in that you have to the DHCP

367
00:18:04,130 --> 00:18:05,570
server has to do a lot of things it

368
00:18:05,570 --> 00:18:06,710
needs to maintain this the lease

369
00:18:06,710 --> 00:18:09,710
database and calculate a bunch of things

370
00:18:09,710 --> 00:18:12,169
so that is part of why it's so hard to

371
00:18:12,169 --> 00:18:14,899
scale up DNS servers are really easy to

372
00:18:14,899 --> 00:18:16,820
scale in that you just have a static

373
00:18:16,820 --> 00:18:19,250
file mostly and that you serve from a

374
00:18:19,250 --> 00:18:24,049
lot of the these DNS servers so if we

375
00:18:24,049 --> 00:18:27,950
use the in essence that which is a part

376
00:18:27,950 --> 00:18:30,529
of DNS called pointers reverse lookups

377
00:18:30,529 --> 00:18:32,899
so instead of doing a hostname VIP you

378
00:18:32,899 --> 00:18:37,429
do an IP to hostname this used in a lot

379
00:18:37,429 --> 00:18:38,870
of cases in the on the internet already

380
00:18:38,870 --> 00:18:41,600
so essentially what we are looking at is

381
00:18:41,600 --> 00:18:44,630
that you do an ipv6 or a so you listen

382
00:18:44,630 --> 00:18:47,960
in to that when you boot up and when you

383
00:18:47,960 --> 00:18:51,950
then have your ipv6 address you do a a

384
00:18:51,950 --> 00:18:54,260
reverse look-up on that and say hey what

385
00:18:54,260 --> 00:18:56,269
it hostname is this oh sorry

386
00:18:56,269 --> 00:18:59,210
and that's how you get your hostname so

387
00:18:59,210 --> 00:19:01,580
instead of doing a stateful handshake

388
00:19:01,580 --> 00:19:06,590
using a DHCP we now replace it by only

389
00:19:06,590 --> 00:19:11,029
doing stateless stuff so in summary what

390
00:19:11,029 --> 00:19:12,649
have we gained here well we removed the

391
00:19:12,649 --> 00:19:14,320
need for having a DHCP server

392
00:19:14,320 --> 00:19:17,809
you got a dependency on ID in a server

393
00:19:17,809 --> 00:19:20,179
most likely you already have that you

394
00:19:20,179 --> 00:19:23,090
might not have configured always it

395
00:19:23,090 --> 00:19:25,399
might have been a best-case thing but

396
00:19:25,399 --> 00:19:28,669
yeah now you actually need it which is

397
00:19:28,669 --> 00:19:30,019
might be a good thing or a bad thing

398
00:19:30,019 --> 00:19:33,380
depending on how you look at it there

399
00:19:33,380 --> 00:19:36,139
are data centers out there and quite big

400
00:19:36,139 --> 00:19:39,860
ones as well that do not support ipv4 at

401
00:19:39,860 --> 00:19:44,750
all right so now we removed that problem

402
00:19:44,750 --> 00:19:51,500
we replace it with ipv6 okay let's do

403
00:19:51,500 --> 00:19:53,960
authentication it's it's a big broad

404
00:19:53,960 --> 00:19:59,620
topic and oh I only have 10 minutes so

405
00:19:59,620 --> 00:20:03,019
crap how well so let's only look at the

406
00:20:03,019 --> 00:20:06,799
server authentication so how does that

407
00:20:06,799 --> 00:20:09,980
look today I found a picture that

408
00:20:09,980 --> 00:20:11,960
perfectly illustrates how server

409
00:20:11,960 --> 00:20:14,389
authentication is some today for

410
00:20:14,389 --> 00:20:16,330
embedded devices and it looks like this

411
00:20:16,330 --> 00:20:23,179
where you don't really have any trust at

412
00:20:23,179 --> 00:20:27,289
all on the device right so the first

413
00:20:27,289 --> 00:20:30,590
initial request that you do for any

414
00:20:30,590 --> 00:20:31,850
device that I know of

415
00:20:31,850 --> 00:20:33,860
does not contain a certificate that you

416
00:20:33,860 --> 00:20:38,539
have any idea to to validate so what

417
00:20:38,539 --> 00:20:40,879
some do is that they accept this warning

418
00:20:40,879 --> 00:20:43,509
login and then replace the cert and a

419
00:20:43,509 --> 00:20:46,190
lot of manuals say that you have to be

420
00:20:46,190 --> 00:20:48,620
using a trusted network so you have to

421
00:20:48,620 --> 00:20:50,690
take the machine and connect straight to

422
00:20:50,690 --> 00:20:52,309
your laptop set everything up and then

423
00:20:52,309 --> 00:20:54,500
replace the server and all that stuff

424
00:20:54,500 --> 00:20:58,669
that's pretty annoying so and not only

425
00:20:58,669 --> 00:21:00,470
that actually so the problem here is

426
00:21:00,470 --> 00:21:03,009
that we don't trust the BMC but also

427
00:21:03,009 --> 00:21:06,440
nothing else trusted BMC so the beam see

428
00:21:06,440 --> 00:21:08,269
in this case cannot use its certificate

429
00:21:08,269 --> 00:21:09,830
in order to call any other kind of

430
00:21:09,830 --> 00:21:13,639
services so what you can do is you can

431
00:21:13,639 --> 00:21:15,950
type danger they change that in Chrome

432
00:21:15,950 --> 00:21:18,710
and we get back to that later and then

433
00:21:18,710 --> 00:21:21,080
you get past this or you can press all

434
00:21:21,080 --> 00:21:24,320
the buttons and and you just say yes I

435
00:21:24,320 --> 00:21:26,779
accept all this risk the problem is that

436
00:21:26,779 --> 00:21:28,429
people started printing this into

437
00:21:28,429 --> 00:21:31,129
manuals that you know you go to this way

438
00:21:31,129 --> 00:21:33,649
I P address of your thing and then you

439
00:21:33,649 --> 00:21:36,259
type danger on your keyboard and then

440
00:21:36,259 --> 00:21:38,809
you login okay so they decided to change

441
00:21:38,809 --> 00:21:43,100
this and I think they rotate this every

442
00:21:43,100 --> 00:21:47,120
every other year or so now it used to be

443
00:21:47,120 --> 00:21:50,210
bad idea and then yeah something that

444
00:21:50,210 --> 00:21:53,990
this is an insecure something so there

445
00:21:53,990 --> 00:21:56,509
must be a better way this is not a

446
00:21:56,509 --> 00:21:57,830
problem on the internet why is it a

447
00:21:57,830 --> 00:22:01,580
problem on the BMC's well I'm here to

448
00:22:01,580 --> 00:22:05,529
tell you there is a better way so the

449
00:22:05,529 --> 00:22:09,270
let's see in the

450
00:22:09,270 --> 00:22:11,520
so wokai so let's look at it this way

451
00:22:11,520 --> 00:22:15,360
what do we need well the reason we see

452
00:22:15,360 --> 00:22:17,790
this is because the the browser does not

453
00:22:17,790 --> 00:22:20,280
trust whoever created this certificate

454
00:22:20,280 --> 00:22:23,490
in this case it is ourselves so there is

455
00:22:23,490 --> 00:22:26,040
a loop we have to break there so in the

456
00:22:26,040 --> 00:22:27,840
what you usually do is you go to a

457
00:22:27,840 --> 00:22:30,840
certificate of the sorry a certificate

458
00:22:30,840 --> 00:22:33,540
authority and buy a cert this is how you

459
00:22:33,540 --> 00:22:35,700
don't end it and passed and they cost

460
00:22:35,700 --> 00:22:37,590
maybe a hundred bucks or so we don't

461
00:22:37,590 --> 00:22:41,100
want everyone to have to buy a cert in

462
00:22:41,100 --> 00:22:43,730
order to log into their BMC's of course

463
00:22:43,730 --> 00:22:45,720
that's that's why it's so great that

464
00:22:45,720 --> 00:22:47,280
there is this service called let's

465
00:22:47,280 --> 00:22:51,680
encrypt let's encrypt offers anyone

466
00:22:51,680 --> 00:22:54,540
trusted certificates and they have an

467
00:22:54,540 --> 00:22:58,650
API to easily get this there is a in PR

468
00:22:58,650 --> 00:23:02,310
a provider or they are an implementer as

469
00:23:02,310 --> 00:23:04,770
you'd say of the Acme protocol so if you

470
00:23:04,770 --> 00:23:06,600
don't want to use their CA you can

471
00:23:06,600 --> 00:23:08,100
implement the Acme protocol and they

472
00:23:08,100 --> 00:23:09,780
have plenty of service to do that inside

473
00:23:09,780 --> 00:23:11,910
your own company so if you have like

474
00:23:11,910 --> 00:23:15,240
yeah yeah a Corp CA and that everyone

475
00:23:15,240 --> 00:23:16,860
trusts you can use that for distance

476
00:23:16,860 --> 00:23:22,700
that but for everyone else we can use

477
00:23:22,700 --> 00:23:27,000
let's encrypt but what do we need to do

478
00:23:27,000 --> 00:23:29,970
in order to use that I'm sorry I don't

479
00:23:29,970 --> 00:23:32,430
see the same slice as I'm seeing here oh

480
00:23:32,430 --> 00:23:38,280
there we go so his the the first

481
00:23:38,280 --> 00:23:40,650
challenge that let's encrypt requires

482
00:23:40,650 --> 00:23:43,260
you to to respond to in order to prove

483
00:23:43,260 --> 00:23:45,510
that yeah you should get a certificate

484
00:23:45,510 --> 00:23:49,290
is that on a web server on a certain

485
00:23:49,290 --> 00:23:52,050
domain that means putting our B and C on

486
00:23:52,050 --> 00:23:52,650
the Internet

487
00:23:52,650 --> 00:23:55,710
which probably is not a great idea

488
00:23:55,710 --> 00:23:59,100
so let's but not consider that it at

489
00:23:59,100 --> 00:23:59,870
this time

490
00:23:59,870 --> 00:24:02,640
the other thing they support is a DNS

491
00:24:02,640 --> 00:24:05,750
name we control well lucky that we

492
00:24:05,750 --> 00:24:08,430
actually already sold this that we now

493
00:24:08,430 --> 00:24:11,160
have a ipv6 address that always maps to

494
00:24:11,160 --> 00:24:15,210
our DNS name so by doing this untrusting

495
00:24:15,210 --> 00:24:17,850
this we can just add a single DNS

496
00:24:17,850 --> 00:24:19,470
delegation and say that the BMC is

497
00:24:19,470 --> 00:24:23,240
actually authority for that name

498
00:24:23,240 --> 00:24:25,309
and there are plenty ways to do this

499
00:24:25,309 --> 00:24:28,640
securely in modern DNS server so that's

500
00:24:28,640 --> 00:24:30,169
not a that's not our problem

501
00:24:30,169 --> 00:24:32,240
so essentially what we're looking at is

502
00:24:32,240 --> 00:24:35,059
the first initial boot would be that the

503
00:24:35,059 --> 00:24:37,070
bean see does an ACME request to some

504
00:24:37,070 --> 00:24:41,809
provider maybe let's encrypt for as a

505
00:24:41,809 --> 00:24:46,250
default this provider does a DNS probe

506
00:24:46,250 --> 00:24:49,640
to validate that the the bean see is

507
00:24:49,640 --> 00:24:52,039
still or is the one it claims to be and

508
00:24:52,039 --> 00:24:54,140
then you in the Acme response you get a

509
00:24:54,140 --> 00:24:58,640
perfectly valid TLS certificate this has

510
00:24:58,640 --> 00:25:01,309
a the the trust model here is that your

511
00:25:01,309 --> 00:25:02,929
network is secure but that is already

512
00:25:02,929 --> 00:25:07,159
the case today so that is not a a a de

513
00:25:07,159 --> 00:25:09,559
Guerre or sorry that is not a regression

514
00:25:09,559 --> 00:25:11,270
and there are ways to solve this without

515
00:25:11,270 --> 00:25:12,770
trust in your networks as well but this

516
00:25:12,770 --> 00:25:16,039
is the easiest way so what have we done

517
00:25:16,039 --> 00:25:19,059
here well we've replaced that manual and

518
00:25:19,059 --> 00:25:23,809
maybe not so used certificate management

519
00:25:23,809 --> 00:25:27,140
process maybe the big actor is actually

520
00:25:27,140 --> 00:25:29,960
used to replace the self signed

521
00:25:29,960 --> 00:25:32,740
certificate but I have not seen a server

522
00:25:32,740 --> 00:25:37,250
that is not running you BMC that has a

523
00:25:37,250 --> 00:25:40,429
proper certificate and we added a

524
00:25:40,429 --> 00:25:43,130
trusted machine identity not only for us

525
00:25:43,130 --> 00:25:45,350
to trust that but also now that machine

526
00:25:45,350 --> 00:25:47,570
is able to claim that it really is that

527
00:25:47,570 --> 00:25:49,940
machine to talk to any other servers

528
00:25:49,940 --> 00:25:52,789
here you might have in your necklace so

529
00:25:52,789 --> 00:25:55,250
if you for example want to do SSL

530
00:25:55,250 --> 00:25:58,640
terminated sis logging you can do that

531
00:25:58,640 --> 00:26:01,220
now so instead of anyone being able to

532
00:26:01,220 --> 00:26:03,980
say yes I'm totally that mails or you

533
00:26:03,980 --> 00:26:07,220
can now trust that from the beam see

534
00:26:07,220 --> 00:26:09,230
that this is actually the beam see that

535
00:26:09,230 --> 00:26:14,809
is logging so in summary we have a

536
00:26:14,809 --> 00:26:18,200
summary of the summary where our trusted

537
00:26:18,200 --> 00:26:21,320
time source enables us to do modern

538
00:26:21,320 --> 00:26:23,289
things like certificate authentication

539
00:26:23,289 --> 00:26:26,779
by applying ipv6 and DNS machine

540
00:26:26,779 --> 00:26:29,690
provisioning we we are now compare

541
00:26:29,690 --> 00:26:31,610
compatible with the conventional web

542
00:26:31,610 --> 00:26:33,679
trust model where we can use all the

543
00:26:33,679 --> 00:26:36,950
technologies and security benefits

544
00:26:36,950 --> 00:26:38,630
that that provides or that has been

545
00:26:38,630 --> 00:26:42,710
invented for the public well I think

546
00:26:42,710 --> 00:26:45,500
that not secure having that symbol is

547
00:26:45,500 --> 00:26:50,470
not cool and we can do do better so in

548
00:26:50,470 --> 00:26:53,240
you beam C which is a Greenfield beams

549
00:26:53,240 --> 00:26:55,669
he built and go using the same code base

550
00:26:55,669 --> 00:26:58,960
as Linux boot this has been implemented

551
00:26:58,960 --> 00:27:03,919
we focus on being very opinionated as

552
00:27:03,919 --> 00:27:07,820
you probably saw it but that provides us

553
00:27:07,820 --> 00:27:11,690
with a very slim code base and offers us

554
00:27:11,690 --> 00:27:15,409
to really do crazy things and see how

555
00:27:15,409 --> 00:27:18,440
that turns out and if we can move that

556
00:27:18,440 --> 00:27:22,760
forward so if you enjoyed this or you

557
00:27:22,760 --> 00:27:25,240
want to keep in touch this is how you

558
00:27:25,240 --> 00:27:28,159
keep up to date with what I'm doing and

559
00:27:28,159 --> 00:27:30,620
this is where you go to check out the

560
00:27:30,620 --> 00:27:36,169
code for UBC and with this I'm happy to

561
00:27:36,169 --> 00:27:39,769
take any questions yes oh yeah

562
00:27:39,769 --> 00:27:43,159
the I let it to bend him in to bring the

563
00:27:43,159 --> 00:27:47,260
mic around it was one the Harris one

564
00:27:47,799 --> 00:27:50,630
thanks the stalkers I'll play with you

565
00:27:50,630 --> 00:27:54,409
BM say bit it's pretty cool I'd like to

566
00:27:54,409 --> 00:27:56,000
get some of your ideas into open BMC

567
00:27:56,000 --> 00:27:59,500
yeah have any plans yeah I've been

568
00:27:59,500 --> 00:28:03,830
chatting I forgot with whom I shared it

569
00:28:03,830 --> 00:28:06,200
with but we have a plan to write up this

570
00:28:06,200 --> 00:28:10,159
action a proposal for open BMC for

571
00:28:10,159 --> 00:28:12,919
example how on how in open BMC I would

572
00:28:12,919 --> 00:28:16,010
see that as an optional way of setting

573
00:28:16,010 --> 00:28:17,690
up your provisioning maybe doing some

574
00:28:17,690 --> 00:28:20,299
DHCP options to point out an ACME server

575
00:28:20,299 --> 00:28:22,630
this is where you get your initial

576
00:28:22,630 --> 00:28:25,880
certificate I think there is a lot of

577
00:28:25,880 --> 00:28:27,950
things we can play with there and it

578
00:28:27,950 --> 00:28:31,850
would be really cool to do there that's

579
00:28:31,850 --> 00:28:34,970
like open being see is like a good thing

580
00:28:34,970 --> 00:28:36,559
with open being see is that it listens

581
00:28:36,559 --> 00:28:39,320
to a lot of people and there is a this

582
00:28:39,320 --> 00:28:41,659
whole process around contributing but so

583
00:28:41,659 --> 00:28:45,440
there's more it requires more time from

584
00:28:45,440 --> 00:28:47,240
my part in order to you know produce all

585
00:28:47,240 --> 00:28:49,190
the design documents and all that stuff

586
00:28:49,190 --> 00:28:50,540
so I'm here

587
00:28:50,540 --> 00:28:53,510
or interest in in the ideas but yes that

588
00:28:53,510 --> 00:28:56,120
is for example ACMA is certainly

589
00:28:56,120 --> 00:28:59,450
something I would like to to to see how

590
00:28:59,450 --> 00:29:02,179
we can use in open BMC ipv6 is also

591
00:29:02,179 --> 00:29:04,549
something I've been from the sides

592
00:29:04,549 --> 00:29:09,049
pushing more on that in when I started

593
00:29:09,049 --> 00:29:11,660
looking at a wimp agency I I think it

594
00:29:11,660 --> 00:29:14,570
was just getting ipv6 official support

595
00:29:14,570 --> 00:29:17,390
but I really hope that we can make sure

596
00:29:17,390 --> 00:29:19,910
that everything is just working ipv6

597
00:29:19,910 --> 00:29:22,549
only as well so that is something that

598
00:29:22,549 --> 00:29:26,740
that I'm quite excited about but thanks

599
00:29:26,740 --> 00:29:31,250
my gosh it is how the BMC when the BMC

600
00:29:31,250 --> 00:29:33,140
is making a request to the Acme server

601
00:29:33,140 --> 00:29:37,760
yeah how is it secure so the so you what

602
00:29:37,760 --> 00:29:41,690
you do when okay it is using HTTPS and

603
00:29:41,690 --> 00:29:44,660
the HTTPS certificate store is usually

604
00:29:44,660 --> 00:29:47,990
shipped with a system so does that

605
00:29:47,990 --> 00:29:49,220
answer your question or you want more

606
00:29:49,220 --> 00:29:52,910
details or when we see like the BMC is

607
00:29:52,910 --> 00:29:54,440
always like shipping up at that little

608
00:29:54,440 --> 00:29:57,020
cells in certificates so in the first

609
00:29:57,020 --> 00:29:58,340
time in me ship the system it's a

610
00:29:58,340 --> 00:30:00,049
self-signed certificates so so in you

611
00:30:00,049 --> 00:30:01,450
being see we don't have self

612
00:30:01,450 --> 00:30:04,580
certificates it just it does not like

613
00:30:04,580 --> 00:30:07,160
the the first the only certificate that

614
00:30:07,160 --> 00:30:10,700
is used is this let's encrypt provider

615
00:30:10,700 --> 00:30:14,510
one so it never has a self son what I

616
00:30:14,510 --> 00:30:17,510
thought of like let's link trip

617
00:30:17,510 --> 00:30:19,040
certificate like you have send me

618
00:30:19,040 --> 00:30:20,150
requests and then you get does not

619
00:30:20,150 --> 00:30:21,260
difficut yes exactly

620
00:30:21,260 --> 00:30:24,710
but so in that very first time how do

621
00:30:24,710 --> 00:30:27,020
you get a certificate this that is that

622
00:30:27,020 --> 00:30:31,580
is how you do it let's encrypt ha so

623
00:30:31,580 --> 00:30:33,950
when you think about it when you go to

624
00:30:33,950 --> 00:30:35,600
like a normal web page using your

625
00:30:35,600 --> 00:30:37,460
browser you don't need a certificate in

626
00:30:37,460 --> 00:30:39,799
order for that to be encrypted right the

627
00:30:39,799 --> 00:30:41,660
server has this a certificate so you

628
00:30:41,660 --> 00:30:42,620
don't need anything

629
00:30:42,620 --> 00:30:44,299
and likewise when you beam see does the

630
00:30:44,299 --> 00:30:45,890
initial request it does not need

631
00:30:45,890 --> 00:30:46,400
anything

632
00:30:46,400 --> 00:30:49,850
the the way it authenticates to the

633
00:30:49,850 --> 00:30:51,950
server is by doing this DNS challenge

634
00:30:51,950 --> 00:30:55,400
that we saw the the pointer dance does

635
00:30:55,400 --> 00:30:58,070
that mean like that line has to the

636
00:30:58,070 --> 00:31:00,470
accept accept the server certificate

637
00:31:00,470 --> 00:31:03,799
whatsoever it is no then you can do that

638
00:31:03,799 --> 00:31:04,190
that's a

639
00:31:04,190 --> 00:31:05,570
horrible way of doing it but you can do

640
00:31:05,570 --> 00:31:08,059
it with what usually what you do is you

641
00:31:08,059 --> 00:31:11,179
ship this trust store of it has things

642
00:31:11,179 --> 00:31:14,419
like the name escapes me but it has like

643
00:31:14,419 --> 00:31:18,139
very sign super duper root CA that that

644
00:31:18,139 --> 00:31:20,509
has another CA then has another CA and

645
00:31:20,509 --> 00:31:22,789
then that's let's encrypt right so this

646
00:31:22,789 --> 00:31:25,279
is like a store is I think it's like

647
00:31:25,279 --> 00:31:27,649
Mozilla CA stores on blank that contains

648
00:31:27,649 --> 00:31:29,179
hundreds or certificates that are

649
00:31:29,179 --> 00:31:32,509
globally trusted this is how the HTTP

650
00:31:32,509 --> 00:31:34,610
web Book Trust works so you ship that

651
00:31:34,610 --> 00:31:36,590
with a beam C as well and that allows it

652
00:31:36,590 --> 00:31:39,169
to do conventional HTTP oh so you're

653
00:31:39,169 --> 00:31:40,669
saying like all that third party

654
00:31:40,669 --> 00:31:46,610
certificate yeah if you don't trust that

655
00:31:46,610 --> 00:31:48,049
for your company maybe you want to run

656
00:31:48,049 --> 00:31:49,490
your own acting server things like that

657
00:31:49,490 --> 00:31:51,350
and of course compiling and whatever

658
00:31:51,350 --> 00:31:53,960
search you want that's it

659
00:31:53,960 --> 00:31:58,549
thanks I think

660
00:31:58,549 --> 00:32:02,539
so believe ntp has I mean like normally

661
00:32:02,539 --> 00:32:05,389
a by default if the drift is too large

662
00:32:05,389 --> 00:32:07,149
it'll panic yeah but there is a

663
00:32:07,149 --> 00:32:09,049
configuration where you can tinker it

664
00:32:09,049 --> 00:32:10,429
and say don't panic on this one so it

665
00:32:10,429 --> 00:32:11,330
locks it right rift

666
00:32:11,330 --> 00:32:13,279
so the problem with that is when you BMC

667
00:32:13,279 --> 00:32:17,090
starts it does not require a RTC like in

668
00:32:17,090 --> 00:32:19,009
some cases the beam sees did not have an

669
00:32:19,009 --> 00:32:21,470
RTC at all so every time you boot it's

670
00:32:21,470 --> 00:32:25,519
90 70 that's a very large drift that you

671
00:32:25,519 --> 00:32:28,429
need to accept there so the you can't

672
00:32:28,429 --> 00:32:30,529
sanity check right like you have to

673
00:32:30,529 --> 00:32:33,259
accept whatever ntp reply you get the

674
00:32:33,259 --> 00:32:34,759
alternative there is that you have an

675
00:32:34,759 --> 00:32:37,940
RTC for the BMC but then still then you

676
00:32:37,940 --> 00:32:41,059
have to kind of trust the the clock that

677
00:32:41,059 --> 00:32:43,340
came from factory and then you just move

678
00:32:43,340 --> 00:32:46,850
the thing elsewhere I've been messing a

679
00:32:46,850 --> 00:32:50,750
bit with so on these PMC's for example

680
00:32:50,750 --> 00:32:53,269
on the a speed the initial power on from

681
00:32:53,269 --> 00:32:57,500
cold boots is 1970 but I used a speed

682
00:32:57,500 --> 00:33:01,190
built in RTC to keep the the time across

683
00:33:01,190 --> 00:33:03,889
Reis reboots at least so you don't have

684
00:33:03,889 --> 00:33:05,720
to like it you have slightly slightly

685
00:33:05,720 --> 00:33:10,220
err so slightly faster boot time the

686
00:33:10,220 --> 00:33:11,990
second time because you don't you can do

687
00:33:11,990 --> 00:33:14,629
that you still do that the time dance

688
00:33:14,629 --> 00:33:18,419
but you don't block boot on this

689
00:33:18,419 --> 00:33:20,100
so you beam see example for example

690
00:33:20,100 --> 00:33:22,889
everything is blocked on that first you

691
00:33:22,889 --> 00:33:25,109
get the DNS name and then you get the

692
00:33:25,109 --> 00:33:26,940
time and then you get the the

693
00:33:26,940 --> 00:33:29,340
certificate this takes like 10 seconds

694
00:33:29,340 --> 00:33:31,350
the first boot but then the the second

695
00:33:31,350 --> 00:33:32,909
boot we still do that but we do it in

696
00:33:32,909 --> 00:33:34,590
the background because we can operate on

697
00:33:34,590 --> 00:33:38,009
the under previous results if that makes

698
00:33:38,009 --> 00:33:39,539
sense what did I answer requests there

699
00:33:39,539 --> 00:33:45,090
yeah thank you we are talking all right

700
00:33:45,090 --> 00:33:48,179
you mentioned that you need to set up a

701
00:33:48,179 --> 00:33:50,820
new house a rough time server right

702
00:33:50,820 --> 00:33:54,119
it is trusted certain mackaninee why not

703
00:33:54,119 --> 00:33:56,669
set up a trusted ntp server in house

704
00:33:56,669 --> 00:34:01,049
yeah you could do that the MTP has a

705
00:34:01,049 --> 00:34:02,190
scalability issue

706
00:34:02,190 --> 00:34:05,460
I didn't read into weight too much

707
00:34:05,460 --> 00:34:08,520
because not having its publicly deployed

708
00:34:08,520 --> 00:34:10,679
was a blocker for me but yes you can

709
00:34:10,679 --> 00:34:13,020
certainly do a secure NTP the problem

710
00:34:13,020 --> 00:34:14,699
with that is of course then you have one

711
00:34:14,699 --> 00:34:16,918
one way of doing it for the businesses

712
00:34:16,918 --> 00:34:18,569
and then one way of doing it for

713
00:34:18,569 --> 00:34:22,109
everyone that was just once like a like

714
00:34:22,109 --> 00:34:23,849
imagine that your business that want to

715
00:34:23,849 --> 00:34:27,000
deploy a server out at a customer maybe

716
00:34:27,000 --> 00:34:29,010
your sale selling an appliance then

717
00:34:29,010 --> 00:34:30,780
maybe you can't use your secure in two

718
00:34:30,780 --> 00:34:32,309
pieces a thing because then you need to

719
00:34:32,309 --> 00:34:34,079
reach it over the Internet and maybe

720
00:34:34,079 --> 00:34:36,750
that's yeah maybe it works I don't know

721
00:34:36,750 --> 00:34:39,149
but yeah it's it is essentially to

722
00:34:39,149 --> 00:34:41,190
narrow down and create one solution that

723
00:34:41,190 --> 00:34:41,969
works for everyone

724
00:34:41,969 --> 00:34:44,689
ok

725
00:34:53,159 --> 00:34:55,750
in regards to the NTP setup do you have

726
00:34:55,750 --> 00:34:57,070
something to recheck rough time

727
00:34:57,070 --> 00:34:58,270
periodically to make sure you're not

728
00:34:58,270 --> 00:35:00,670
susceptible to skew attacks and the

729
00:35:00,670 --> 00:35:03,700
other question was in the case of having

730
00:35:03,700 --> 00:35:06,130
many bmc's in a single single layer - do

731
00:35:06,130 --> 00:35:07,450
you have a solution for making sure they

732
00:35:07,450 --> 00:35:08,650
can trust each other if they want to

733
00:35:08,650 --> 00:35:10,090
talk to each other or they can't

734
00:35:10,090 --> 00:35:11,530
impersonate each other because right now

735
00:35:11,530 --> 00:35:12,940
with the acne protocol you couldn't

736
00:35:12,940 --> 00:35:14,980
actually guarantee that right so the

737
00:35:14,980 --> 00:35:17,140
Acme protocol doesn't I mean the ICONic

738
00:35:17,140 --> 00:35:19,330
protocol relies on that the DNS works

739
00:35:19,330 --> 00:35:20,740
right which i think is what you're

740
00:35:20,740 --> 00:35:21,460
getting at

741
00:35:21,460 --> 00:35:23,530
well no I'm also getting it like you

742
00:35:23,530 --> 00:35:25,660
could not duplicate address detection

743
00:35:25,660 --> 00:35:27,910
request from another BMC and take their

744
00:35:27,910 --> 00:35:29,830
address and then run acne on yourself

745
00:35:29,830 --> 00:35:32,950
and impersonate that BMC yes it trusts

746
00:35:32,950 --> 00:35:35,109
you to another like some trust on first

747
00:35:35,109 --> 00:35:36,849
use model where you can have keys that

748
00:35:36,849 --> 00:35:38,470
are yeah persistent over the lifetime of

749
00:35:38,470 --> 00:35:40,359
the BMC so usually you know that that

750
00:35:40,359 --> 00:35:42,490
BMC is the same BMC and not a new one

751
00:35:42,490 --> 00:35:44,170
that showed up and took the address you

752
00:35:44,170 --> 00:35:46,330
you can do that the I'm just wondering

753
00:35:46,330 --> 00:35:47,440
if you have anything that you're like

754
00:35:47,440 --> 00:35:49,599
planning in that area so I've been

755
00:35:49,599 --> 00:35:51,460
thinking about this but it mostly boils

756
00:35:51,460 --> 00:35:53,230
down to that it's a lot of work and

757
00:35:53,230 --> 00:35:57,190
there's a lot of things to to fix before

758
00:35:57,190 --> 00:35:59,470
that and a lot of people's threat model

759
00:35:59,470 --> 00:36:01,570
does not include the local network so

760
00:36:01,570 --> 00:36:03,520
while we could certainly fix it it feels

761
00:36:03,520 --> 00:36:08,020
more like a academic approach to

762
00:36:08,020 --> 00:36:10,960
security than something that someone

763
00:36:10,960 --> 00:36:12,609
would actually want to use but if there

764
00:36:12,609 --> 00:36:15,730
is like a big user that once or someone

765
00:36:15,730 --> 00:36:17,200
that really wants to do this and would

766
00:36:17,200 --> 00:36:19,210
be happy to experiment I'm happy to take

767
00:36:19,210 --> 00:36:21,310
any pro requests or I don't know just

768
00:36:21,310 --> 00:36:22,839
for key being seen do whatever you want

769
00:36:22,839 --> 00:36:24,849
with it like that's I'm really

770
00:36:24,849 --> 00:36:25,990
interested to see what people think

771
00:36:25,990 --> 00:36:28,930
about this I have some ideas but it's it

772
00:36:28,930 --> 00:36:32,619
is quietly networks in general like

773
00:36:32,619 --> 00:36:34,570
there are there is for example a two to

774
00:36:34,570 --> 00:36:37,089
one X right where your usage certificate

775
00:36:37,089 --> 00:36:39,369
in order to authenticate and there is

776
00:36:39,369 --> 00:36:41,349
like a things you can do there

777
00:36:41,349 --> 00:36:45,760
you could also yeah yeah as long as your

778
00:36:45,760 --> 00:36:47,260
switch is supported that it exactly yeah

779
00:36:47,260 --> 00:36:48,940
talk from BMC to be and see if you went

780
00:36:48,940 --> 00:36:50,109
out you could just do it on the router

781
00:36:50,109 --> 00:36:53,380
but yeah yeah better map if I have an

782
00:36:53,380 --> 00:36:57,599
idea some appetizer to write about it so

783
00:36:58,170 --> 00:37:00,940
how do you realize this concept on an

784
00:37:00,940 --> 00:37:02,920
aggregated resource model where you have

785
00:37:02,920 --> 00:37:05,560
a rack and you have 48 plates in the

786
00:37:05,560 --> 00:37:07,030
rack and then you have a rack man

787
00:37:07,030 --> 00:37:09,970
yep or short of a manager for the rack

788
00:37:09,970 --> 00:37:12,360
and then you have a consolidated kind of

789
00:37:12,360 --> 00:37:14,680
manager for the racks and right so

790
00:37:14,680 --> 00:37:16,690
basically we're like a data center is

791
00:37:16,690 --> 00:37:18,220
sort of aggregated with respect to

792
00:37:18,220 --> 00:37:20,700
resources right yeah so running a

793
00:37:20,700 --> 00:37:23,050
trusted time server might not scale

794
00:37:23,050 --> 00:37:25,600
right so then where I already have a

795
00:37:25,600 --> 00:37:28,240
rack manager that is trusted I mean why

796
00:37:28,240 --> 00:37:31,330
do you think that a all blade requesting

797
00:37:31,330 --> 00:37:33,880
dscp at the same time might be a issue

798
00:37:33,880 --> 00:37:36,280
at the same time why can't the blades

799
00:37:36,280 --> 00:37:39,340
trust the the rack managers I mean you

800
00:37:39,340 --> 00:37:41,170
can certainly create this these

801
00:37:41,170 --> 00:37:43,300
elaborate chains if you want to rough

802
00:37:43,300 --> 00:37:47,590
time doesn't require that I it is made

803
00:37:47,590 --> 00:37:49,960
to scale to run publicly on the internet

804
00:37:49,960 --> 00:37:51,910
and I'm pretty sure your data center is

805
00:37:51,910 --> 00:37:53,710
not going to be as big as the public

806
00:37:53,710 --> 00:37:56,590
Internet so like I mean you you can

807
00:37:56,590 --> 00:37:59,020
certainly if you don't mention it so

808
00:37:59,020 --> 00:38:01,150
that every server reboots at the same

809
00:38:01,150 --> 00:38:04,060
time and requires a rough time check at

810
00:38:04,060 --> 00:38:06,730
that time rough time got you covered

811
00:38:06,730 --> 00:38:08,530
there like that's that's why it was

812
00:38:08,530 --> 00:38:10,120
created to be able to scale to these

813
00:38:10,120 --> 00:38:12,670
things then your a question your other

814
00:38:12,670 --> 00:38:14,440
part of that question was the the chain

815
00:38:14,440 --> 00:38:18,790
of trust and sure I if you want to have

816
00:38:18,790 --> 00:38:19,930
that chain of trust if it makes sense

817
00:38:19,930 --> 00:38:22,150
for you for your deployment and go ahead

818
00:38:22,150 --> 00:38:25,540
it's a lot of people don't have a rack

819
00:38:25,540 --> 00:38:27,250
management unit a lot of companies run

820
00:38:27,250 --> 00:38:29,950
only a single machine or a handful of

821
00:38:29,950 --> 00:38:32,080
machines and run some VMware ESXi

822
00:38:32,080 --> 00:38:33,460
cluster over that and that's the whole

823
00:38:33,460 --> 00:38:37,030
data center so if you don't forget to

824
00:38:37,030 --> 00:38:39,840
small guys as well

825
00:38:39,960 --> 00:38:43,620
but thanks for question

826
00:38:48,750 --> 00:38:51,820
sorry I don't think the mic is just for

827
00:38:51,820 --> 00:38:57,610
drove recording oh so you suggested that

828
00:38:57,610 --> 00:39:02,110
we don't need a DSP for ipv6 so how do

829
00:39:02,110 --> 00:39:04,810
we get the first address like to BSN

830
00:39:04,810 --> 00:39:08,860
aesthetically no so in ipv6 the router

831
00:39:08,860 --> 00:39:12,160
always advertises nada is yeah the RAS

832
00:39:12,160 --> 00:39:15,190
exactly so the RAS use it what's called

833
00:39:15,190 --> 00:39:19,090
SAA AC right so we only use that like

834
00:39:19,090 --> 00:39:21,160
you can use the HCP as well in order to

835
00:39:21,160 --> 00:39:23,500
get if you if an enterprise for someone

836
00:39:23,500 --> 00:39:27,160
wants a Moore machine determined IP you

837
00:39:27,160 --> 00:39:29,340
can use that but in order to support

838
00:39:29,340 --> 00:39:31,720
everyone's use case where you don't have

839
00:39:31,720 --> 00:39:34,390
any other external infrastructure you

840
00:39:34,390 --> 00:39:37,150
could use our ace yeah but the same time

841
00:39:37,150 --> 00:39:39,040
considering as you said the power down

842
00:39:39,040 --> 00:39:42,910
and 100 silver sorry yeah the RA is not

843
00:39:42,910 --> 00:39:45,400
funny in its one broadcast to everyone

844
00:39:45,400 --> 00:39:47,290
right then you have the neighborhood

845
00:39:47,290 --> 00:39:49,540
discovery so if you have like a enormous

846
00:39:49,540 --> 00:39:51,160
else.you domain then you have some

847
00:39:51,160 --> 00:39:53,980
problems there but that that is not that

848
00:39:53,980 --> 00:39:56,710
it doesn't change the power on story

849
00:39:56,710 --> 00:39:58,510
because those neighborhood discoveries

850
00:39:58,510 --> 00:40:00,700
are some periodically anyway so that's

851
00:40:00,700 --> 00:40:03,370
that's already the status quo so if you

852
00:40:03,370 --> 00:40:06,910
but if you are a solution just yeah just

853
00:40:06,910 --> 00:40:09,790
work like DHCP the way you normally

854
00:40:09,790 --> 00:40:11,560
configure this I guess is you would have

855
00:40:11,560 --> 00:40:14,230
the like a DCP relay set up so all the

856
00:40:14,230 --> 00:40:16,150
different altitudes that you have in

857
00:40:16,150 --> 00:40:18,070
your network would fan into the same

858
00:40:18,070 --> 00:40:20,380
beaches be server anyway and usually

859
00:40:20,380 --> 00:40:22,750
that would receiver little traffic mmm

860
00:40:22,750 --> 00:40:24,040
so that's why you have this meltdown

861
00:40:24,040 --> 00:40:27,250
scenario but in the RA case if you've

862
00:40:27,250 --> 00:40:29,620
segregated then all your routers for or

863
00:40:29,620 --> 00:40:32,230
even if it's a single router that RA

864
00:40:32,230 --> 00:40:35,980
would go out on and every single l2 but

865
00:40:35,980 --> 00:40:37,660
the neighborhood discovery protocol

866
00:40:37,660 --> 00:40:40,150
would only run into that domain right so

867
00:40:40,150 --> 00:40:42,400
there would be no catastrophic meltdown

868
00:40:42,400 --> 00:40:46,650
as such okay yeah

869
00:40:52,000 --> 00:40:56,230
I might be right

870
00:40:56,230 --> 00:40:58,720
yeah I'm thinking if someone don't say

871
00:40:58,720 --> 00:40:59,850
like an ffos

872
00:40:59,850 --> 00:41:02,490
- : : one thing you know it's like hey

873
00:41:02,490 --> 00:41:08,040
give to a multicast group so it only

874
00:41:08,040 --> 00:41:09,810
goes to the address based on like the

875
00:41:09,810 --> 00:41:11,520
suffix right so it actually won't hit

876
00:41:11,520 --> 00:41:13,260
every note oh the switch is what I

877
00:41:13,260 --> 00:41:15,300
filter it out but in this case those

878
00:41:15,300 --> 00:41:17,100
multicast groups would be everyone in

879
00:41:17,100 --> 00:41:19,170
there al - right no it's actually it's

880
00:41:19,170 --> 00:41:21,120
based on like the suffix of the address

881
00:41:21,120 --> 00:41:23,010
so if there's sufficient randomness

882
00:41:23,010 --> 00:41:24,690
it'll only get a small subset of nodes

883
00:41:24,690 --> 00:41:27,000
okay I did not know that but yeah that's

884
00:41:27,000 --> 00:41:29,520
even better like it's yeah it's pretty

885
00:41:29,520 --> 00:41:39,240
scalable it's pretty good yeah could you

886
00:41:39,240 --> 00:41:41,850
repeat it for the recording sorry no

887
00:41:41,850 --> 00:41:43,290
don't you still have a thundering horde

888
00:41:43,290 --> 00:41:45,180
problem if every node boots and then ask

889
00:41:45,180 --> 00:41:46,770
for its host name from the DMS

890
00:41:46,770 --> 00:41:49,290
yeah the property yes but the problem

891
00:41:49,290 --> 00:41:55,050
with this is or my assertion or whatever

892
00:41:55,050 --> 00:41:57,660
the word is is that DNS scales much

893
00:41:57,660 --> 00:42:00,510
better than the a cheapy that DNS is

894
00:42:00,510 --> 00:42:02,400
just reading it from a static file that

895
00:42:02,400 --> 00:42:04,260
you have all these DNS records and you

896
00:42:04,260 --> 00:42:07,170
can easily scale that stateless lis but

897
00:42:07,170 --> 00:42:08,820
you wouldn't have a DNS record for a

898
00:42:08,820 --> 00:42:10,620
machine you had never heard of yeah you

899
00:42:10,620 --> 00:42:11,010
would

900
00:42:11,010 --> 00:42:13,410
so the idea the whole idea here is that

901
00:42:13,410 --> 00:42:16,440
you you take the MAC address that you

902
00:42:16,440 --> 00:42:18,480
still need to do some from like you need

903
00:42:18,480 --> 00:42:20,580
to assign your machine identity your

904
00:42:20,580 --> 00:42:22,410
serial number mac address whatever with

905
00:42:22,410 --> 00:42:23,610
a host name that makes sense for your

906
00:42:23,610 --> 00:42:25,290
company you're doing that in your DHCP

907
00:42:25,290 --> 00:42:27,960
today you would do this here as well so

908
00:42:27,960 --> 00:42:30,150
you would in that process you would

909
00:42:30,150 --> 00:42:32,610
assign that DNS record right so when you

910
00:42:32,610 --> 00:42:36,390
get like the the bill from Lenovo or

911
00:42:36,390 --> 00:42:39,660
whoever you bought your server from you

912
00:42:39,660 --> 00:42:41,550
ask okay give me the MAC addresses of

913
00:42:41,550 --> 00:42:43,110
this server so I can register them in

914
00:42:43,110 --> 00:42:45,210
our inventory system yeah I don't know

915
00:42:45,210 --> 00:42:49,620
anyone who we do a liar on you on that

916
00:42:49,620 --> 00:42:53,640
are sharing at you yeah I'm yeah so how

917
00:42:53,640 --> 00:42:55,890
would you associate the name of the

918
00:42:55,890 --> 00:42:58,980
machine in that case like hey mostly I

919
00:42:58,980 --> 00:43:00,990
don't bother with names for EMC Jews

920
00:43:00,990 --> 00:43:05,700
right but for the actual hosts how do

921
00:43:05,700 --> 00:43:07,860
you said like you Sadiq IP everywhere

922
00:43:07,860 --> 00:43:13,650
yeah well you

923
00:43:13,650 --> 00:43:16,140
usually you set a hostname after you

924
00:43:16,140 --> 00:43:18,029
install it right and then the host

925
00:43:18,029 --> 00:43:20,309
registers with DHCP you'd that host name

926
00:43:20,309 --> 00:43:26,279
right on the host so which yeah which

927
00:43:26,279 --> 00:43:28,019
again you know you want to bother where

928
00:43:28,019 --> 00:43:31,410
the BMC I mean you can you you can

929
00:43:31,410 --> 00:43:33,390
certainly do that I think it's quite

930
00:43:33,390 --> 00:43:35,509
common in like Windows Active Directory

931
00:43:35,509 --> 00:43:37,710
setups that you do that they have like

932
00:43:37,710 --> 00:43:40,380
this dynamic DNS setup I'm not familiar

933
00:43:40,380 --> 00:43:42,390
with to me that sounds kind of scary

934
00:43:42,390 --> 00:43:44,819
that every every machine potentially has

935
00:43:44,819 --> 00:43:47,999
a a way to manipulate the DNS and

936
00:43:47,999 --> 00:43:49,200
claimed to be anyone

937
00:43:49,200 --> 00:43:53,999
so my in this scheme but you're you're

938
00:43:53,999 --> 00:43:55,769
correct in that it requires a

939
00:43:55,769 --> 00:43:58,109
pre-processing step where you register

940
00:43:58,109 --> 00:44:00,089
the MAC address with the identity that

941
00:44:00,089 --> 00:44:01,740
you want that to have but that is only

942
00:44:01,740 --> 00:44:03,839
the assuming trust in the local network

943
00:44:03,839 --> 00:44:05,579
that is the only step you have to do in

944
00:44:05,579 --> 00:44:09,900
this scenario yeah but thanks for your

945
00:44:09,900 --> 00:44:23,579
question I think yeah so your question

946
00:44:23,579 --> 00:44:25,739
so you just the mecca just very much so

947
00:44:25,739 --> 00:44:27,210
what happens if somebody overrides the

948
00:44:27,210 --> 00:44:29,759
MAC address corrected so that that goes

949
00:44:29,759 --> 00:44:31,799
back to the threat model is that the

950
00:44:31,799 --> 00:44:33,989
local network is trusted like there are

951
00:44:33,989 --> 00:44:36,839
ways we can change that and I it's just

952
00:44:36,839 --> 00:44:43,339
I don't think today the process is still

953
00:44:43,339 --> 00:44:46,079
require you to trust the network like

954
00:44:46,079 --> 00:44:48,539
there we have we've seen so many things

955
00:44:48,539 --> 00:44:50,099
about the BMC where you have the self

956
00:44:50,099 --> 00:44:52,109
signed certificate right do X you accept

957
00:44:52,109 --> 00:44:56,910
that if you haven't uploaded a a another

958
00:44:56,910 --> 00:44:58,410
certificate there you still trust a

959
00:44:58,410 --> 00:45:02,220
network right so there are you know data

960
00:45:02,220 --> 00:45:03,960
centers I'm sure where they are still

961
00:45:03,960 --> 00:45:06,539
running the default self generated

962
00:45:06,539 --> 00:45:09,660
certificate on the BMC so then like a

963
00:45:09,660 --> 00:45:12,420
case it doesn't matter like you're

964
00:45:12,420 --> 00:45:13,950
already susceptible to man-in-the-middle

965
00:45:13,950 --> 00:45:16,170
attacks but because you're accepting

966
00:45:16,170 --> 00:45:17,400
whatever you're getting back from the

967
00:45:17,400 --> 00:45:20,069
BMC so the MAC address doesn't really

968
00:45:20,069 --> 00:45:23,509
matter in that case it's my claim

969
00:45:23,509 --> 00:45:27,070
you don't look like you agree but

970
00:45:27,070 --> 00:45:30,170
so yeah I just mean that the network I

971
00:45:30,170 --> 00:45:31,940
do charts but I do not trust a much in

972
00:45:31,940 --> 00:45:34,970
itself right so well and the next point

973
00:45:34,970 --> 00:45:37,850
is oh yeah but you don't have any check

974
00:45:37,850 --> 00:45:39,770
right now that you would check the

975
00:45:39,770 --> 00:45:41,420
switch is connected to the right machine

976
00:45:41,420 --> 00:45:46,010
right but I mean so yes like the threat

977
00:45:46,010 --> 00:45:48,680
model definitely makes this like we this

978
00:45:48,680 --> 00:45:51,110
is certainly something we can look into

979
00:45:51,110 --> 00:45:56,030
more but it's the there are it becomes

980
00:45:56,030 --> 00:45:57,370
really tricky because then you're

981
00:45:57,370 --> 00:46:01,160
entering the dimension of deployment

982
00:46:01,160 --> 00:46:02,630
specific things right you could add a

983
00:46:02,630 --> 00:46:04,700
Mac filter on the part of the switch

984
00:46:04,700 --> 00:46:07,550
with that that would change or that

985
00:46:07,550 --> 00:46:09,020
would lock that down but again then

986
00:46:09,020 --> 00:46:11,270
requires whatever switch infrastructure

987
00:46:11,270 --> 00:46:13,310
you have in your data center you could I

988
00:46:13,310 --> 00:46:18,140
don't know pre like all this would be so

989
00:46:18,140 --> 00:46:20,240
in indictment protocol for example you

990
00:46:20,240 --> 00:46:23,750
don't have to use DNS one one way we

991
00:46:23,750 --> 00:46:25,580
could see in the future is that we

992
00:46:25,580 --> 00:46:27,530
figure out the perfect way to do this

993
00:46:27,530 --> 00:46:31,070
and we could add another way to assert

994
00:46:31,070 --> 00:46:34,550
your identity right so maybe we every

995
00:46:34,550 --> 00:46:37,700
beam see contains a public private key

996
00:46:37,700 --> 00:46:40,490
that you can all get and that could be

997
00:46:40,490 --> 00:46:43,010
like we could add a new Acme challenge

998
00:46:43,010 --> 00:46:44,540
that says yes you are you're allowed to

999
00:46:44,540 --> 00:46:45,950
assert a-- because you have the secret

1000
00:46:45,950 --> 00:46:47,720
for that like we can certainly do that

1001
00:46:47,720 --> 00:46:50,510
but today my claim is that the network

1002
00:46:50,510 --> 00:46:52,820
like if you have a bad actor on your

1003
00:46:52,820 --> 00:46:54,530
local network the way things are set up

1004
00:46:54,530 --> 00:46:56,660
in a common data center you're screwed

1005
00:46:56,660 --> 00:47:06,560
anyway so yeah okay thank you thanks and

1006
00:47:06,560 --> 00:47:08,270
more questions or i think we're out of

1007
00:47:08,270 --> 00:47:14,680
time so so thanks for the talk thanks

1008
00:47:14,950 --> 00:47:20,050
[Applause]

1009
00:47:20,050 --> 00:47:26,290
[Music]

