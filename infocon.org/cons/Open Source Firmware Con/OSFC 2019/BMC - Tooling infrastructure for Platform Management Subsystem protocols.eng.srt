1
00:00:03,190 --> 00:00:06,259
[Music]

2
00:00:07,040 --> 00:00:10,080
our next speaker is Tom Joseph he's

3
00:00:10,080 --> 00:00:12,330
advisory software engineer from IBM and

4
00:00:12,330 --> 00:00:13,950
we'll be discussing the tooling

5
00:00:13,950 --> 00:00:15,900
infrastructure for p.m. CI protocols

6
00:00:15,900 --> 00:00:17,910
he's also maintainer for some of the

7
00:00:17,910 --> 00:00:20,580
IPMI repositories at open BMC and the

8
00:00:20,580 --> 00:00:29,939
Gil diem repository thank you yeah yeah

9
00:00:29,939 --> 00:00:34,050
I'm Tom I work with IBM systems in India

10
00:00:34,050 --> 00:00:37,890
in Bangalore Bangalore is called Silicon

11
00:00:37,890 --> 00:00:41,660
Valley in India Silicon Valley of India

12
00:00:41,660 --> 00:00:47,100
and I work on the PLM protocol and the I

13
00:00:47,100 --> 00:00:51,629
team a protocol I commit in both I work

14
00:00:51,629 --> 00:00:54,030
with open BMC project for the last three

15
00:00:54,030 --> 00:00:56,399
years been active on the open BMC

16
00:00:56,399 --> 00:00:59,910
project so my topic today is your

17
00:00:59,910 --> 00:01:03,199
tooling infrastructure for BMC protocols

18
00:01:03,199 --> 00:01:05,640
it's a continuation of the discussion

19
00:01:05,640 --> 00:01:10,350
that we had today on the PMC the PLM

20
00:01:10,350 --> 00:01:14,549
implementation on the open BMC like my

21
00:01:14,549 --> 00:01:16,590
colleague debug had covered that but

22
00:01:16,590 --> 00:01:19,890
I'll just go to the fundamentals once

23
00:01:19,890 --> 00:01:22,049
and then we'll get to the specific

24
00:01:22,049 --> 00:01:26,360
tooling aspect of this PMC our protocols

25
00:01:26,360 --> 00:01:29,670
so the PMC I stands for the platform

26
00:01:29,670 --> 00:01:32,909
management in platform management

27
00:01:32,909 --> 00:01:35,939
component intercommunications so that's

28
00:01:35,939 --> 00:01:39,210
a name for a work group under the DMT OS

29
00:01:39,210 --> 00:01:43,590
pre pre OS workgroup and what the

30
00:01:43,590 --> 00:01:47,399
workgroup does is to standardize the the

31
00:01:47,399 --> 00:01:50,280
communication protocols the define the

32
00:01:50,280 --> 00:01:52,200
lower level data models and the

33
00:01:52,200 --> 00:01:53,729
transport definitions between the

34
00:01:53,729 --> 00:01:55,530
management controller and the management

35
00:01:55,530 --> 00:01:58,680
devices so for all those who have been

36
00:01:58,680 --> 00:02:03,540
like working on ipmi this is somewhere

37
00:02:03,540 --> 00:02:07,170
that the industry is heading so it will

38
00:02:07,170 --> 00:02:09,239
be it will be something interesting for

39
00:02:09,239 --> 00:02:11,489
those who have been like relay related

40
00:02:11,489 --> 00:02:14,360
to the IPMI world

41
00:02:14,940 --> 00:02:16,980
so this this platform management

42
00:02:16,980 --> 00:02:19,980
subsystem basically takes care of all

43
00:02:19,980 --> 00:02:22,200
the in the Box communication within the

44
00:02:22,200 --> 00:02:26,520
platform it takes care of the this kind

45
00:02:26,520 --> 00:02:30,420
of already called the platform what I

46
00:02:30,420 --> 00:02:33,720
call the monitoring services of like

47
00:02:33,720 --> 00:02:35,640
temperature probing voltage monitoring

48
00:02:35,640 --> 00:02:38,640
your fan speed and all those aspects as

49
00:02:38,640 --> 00:02:40,950
well as this control functions of like

50
00:02:40,950 --> 00:02:48,060
power on power of reset and watchdog

51
00:02:48,060 --> 00:02:57,810
timers so this shows all the protocols

52
00:02:57,810 --> 00:03:01,160
that are involved in the the pmc a stack

53
00:03:01,160 --> 00:03:04,740
so there are some components in the PNC

54
00:03:04,740 --> 00:03:07,340
stack we have the management controller

55
00:03:07,340 --> 00:03:10,560
the management devices the platform

56
00:03:10,560 --> 00:03:14,190
software and the network controller so

57
00:03:14,190 --> 00:03:16,260
these protocols all work together to

58
00:03:16,260 --> 00:03:18,510
enable communication between these

59
00:03:18,510 --> 00:03:24,330
components so the the BMC is a

60
00:03:24,330 --> 00:03:26,280
management controller it basically

61
00:03:26,280 --> 00:03:29,390
aggregates all this management values

62
00:03:29,390 --> 00:03:33,120
the management devices or example would

63
00:03:33,120 --> 00:03:36,360
be a temperature censorship those could

64
00:03:36,360 --> 00:03:39,060
be like we could have standard sensor

65
00:03:39,060 --> 00:03:42,690
devices where there are standardized

66
00:03:42,690 --> 00:03:44,519
low-level interfaces there could be

67
00:03:44,519 --> 00:03:46,620
legacy sensor devices where it's not

68
00:03:46,620 --> 00:03:48,750
standardized we could also have

69
00:03:48,750 --> 00:03:50,640
intelligent management devices which

70
00:03:50,640 --> 00:03:54,600
would speak protocols and there'll be

71
00:03:54,600 --> 00:03:58,530
level level of abstraction the platform

72
00:03:58,530 --> 00:04:01,830
software takes care of its runs on the

73
00:04:01,830 --> 00:04:04,080
host CPU and it communicates with the

74
00:04:04,080 --> 00:04:06,300
management controller to exercise

75
00:04:06,300 --> 00:04:08,220
management functions and the network

76
00:04:08,220 --> 00:04:11,549
controller takes care of the external

77
00:04:11,549 --> 00:04:13,769
network well connectivity for the

78
00:04:13,769 --> 00:04:16,290
management controller so at the heart of

79
00:04:16,290 --> 00:04:21,149
this is a in CTP protocol and that is a

80
00:04:21,149 --> 00:04:22,830
what ago the transport layer protocol

81
00:04:22,830 --> 00:04:25,530
that let's commit that allows the

82
00:04:25,530 --> 00:04:26,490
communication between all these

83
00:04:26,490 --> 00:04:27,630
components

84
00:04:27,630 --> 00:04:29,640
between the management controller and

85
00:04:29,640 --> 00:04:32,280
the platform software management control

86
00:04:32,280 --> 00:04:33,990
to the management controller management

87
00:04:33,990 --> 00:04:35,880
controller to the network controller and

88
00:04:35,880 --> 00:04:41,310
to the management devices so the the MC

89
00:04:41,310 --> 00:04:43,410
TP protocol can carry different message

90
00:04:43,410 --> 00:04:49,140
types the nvme is one of them p LD m PL

91
00:04:49,140 --> 00:04:51,090
IAM is the one that i that we have

92
00:04:51,090 --> 00:04:52,620
started the tooling on which we'll get

93
00:04:52,620 --> 00:04:54,720
to a little more detail then CTP control

94
00:04:54,720 --> 00:04:58,980
messages and the NCS I the NCSA and RM

95
00:04:58,980 --> 00:05:00,360
eyes want one combination

96
00:05:00,360 --> 00:05:03,120
apart from that upper layer protocols

97
00:05:03,120 --> 00:05:05,510
work with the MC TP for the transport

98
00:05:05,510 --> 00:05:07,770
the one of the beauty of the NCT

99
00:05:07,770 --> 00:05:09,300
protocol is like all the hardware

100
00:05:09,300 --> 00:05:11,820
specific physical layers this wig

101
00:05:11,820 --> 00:05:13,740
bindings are defined in separate

102
00:05:13,740 --> 00:05:23,810
specifications ok and ok so the wear

103
00:05:23,810 --> 00:05:27,060
what is the motivation to come up come

104
00:05:27,060 --> 00:05:29,340
up with this presentation and what we

105
00:05:29,340 --> 00:05:31,710
are trying to do so we are working on

106
00:05:31,710 --> 00:05:35,550
the IBM service and we were using new we

107
00:05:35,550 --> 00:05:37,320
were using ipmi for the Indian community

108
00:05:37,320 --> 00:05:44,160
ssin between the host and the BMC but we

109
00:05:44,160 --> 00:05:46,290
had quite a bit of limitations we we we

110
00:05:46,290 --> 00:05:48,030
had heard about a lot of limitations

111
00:05:48,030 --> 00:05:50,010
that we have with the idea my with the

112
00:05:50,010 --> 00:05:52,470
sensor numbers and few other things but

113
00:05:52,470 --> 00:05:55,080
we wanted to try out the pl diem for

114
00:05:55,080 --> 00:05:56,760
that inbound communication with the

115
00:05:56,760 --> 00:06:00,090
platform software and we wrote some code

116
00:06:00,090 --> 00:06:03,300
and we wanted to test that out and we

117
00:06:03,300 --> 00:06:05,040
didn't know what to do about that we

118
00:06:05,040 --> 00:06:07,230
didn't find any open source tolling that

119
00:06:07,230 --> 00:06:10,020
was available so we reached out to the

120
00:06:10,020 --> 00:06:11,910
workgroup to see if any of the companies

121
00:06:11,910 --> 00:06:13,680
that are working on the this protocol

122
00:06:13,680 --> 00:06:15,810
has a open source tooling for for this

123
00:06:15,810 --> 00:06:19,620
and we didn't I mean we didn't get any

124
00:06:19,620 --> 00:06:21,480
open source tolling available so we we

125
00:06:21,480 --> 00:06:22,770
thought we'll start with that and those

126
00:06:22,770 --> 00:06:24,380
quite a bit of encouragement from the

127
00:06:24,380 --> 00:06:27,950
the PMC workgroup to proceed with the

128
00:06:27,950 --> 00:06:34,260
this tooling effort so we we wanted to

129
00:06:34,260 --> 00:06:36,750
kind of as we developed the protocol the

130
00:06:36,750 --> 00:06:39,150
pl diem protocol we implement command by

131
00:06:39,150 --> 00:06:40,830
command we want the tool development

132
00:06:40,830 --> 00:06:41,520
also to

133
00:06:41,520 --> 00:06:47,130
or make progress and so and also a few

134
00:06:47,130 --> 00:06:48,930
field I've used IPMI you know that there

135
00:06:48,930 --> 00:06:51,210
are a number of tools available you

136
00:06:51,210 --> 00:06:53,069
would have the ipmi tool I put my util

137
00:06:53,069 --> 00:06:55,169
pre-ap mi you would have heard about a

138
00:06:55,169 --> 00:06:57,900
lot of that so one focus was to have

139
00:06:57,900 --> 00:06:59,970
kind of converged tool development for

140
00:06:59,970 --> 00:07:02,220
this PMC protocols like get together all

141
00:07:02,220 --> 00:07:05,789
interested parties and work together on

142
00:07:05,789 --> 00:07:09,150
this another goal was to rapidly test

143
00:07:09,150 --> 00:07:12,000
the IOA adapters that support the PLM

144
00:07:12,000 --> 00:07:15,900
protocol connected to the MC using these

145
00:07:15,900 --> 00:07:18,569
toolings we could get the through

146
00:07:18,569 --> 00:07:21,449
information we could get the temperature

147
00:07:21,449 --> 00:07:24,139
on through those adapters

148
00:07:24,139 --> 00:07:26,669
so we want to rapidly test out this IR

149
00:07:26,669 --> 00:07:35,099
adapters so we wanted to do that so the

150
00:07:35,099 --> 00:07:36,750
state of development right now on the

151
00:07:36,750 --> 00:07:39,810
tooling friend so I think I have used I

152
00:07:39,810 --> 00:07:42,960
P my tool for quite a few years so the

153
00:07:42,960 --> 00:07:44,550
immediate name for the tool that came to

154
00:07:44,550 --> 00:07:50,250
my mind was to cross the LEM tool the

155
00:07:50,250 --> 00:07:53,099
the the so we were implementing the PLM

156
00:07:53,099 --> 00:07:54,509
specification so we started off with the

157
00:07:54,509 --> 00:07:57,960
PLM tool and this PLM to access a

158
00:07:57,960 --> 00:08:01,039
requester and it runs on on the open BMC

159
00:08:01,039 --> 00:08:04,469
unlike IP my tool that can that

160
00:08:04,469 --> 00:08:06,330
typically runs outside the BMC at

161
00:08:06,330 --> 00:08:08,820
targets it by a network with the PLM

162
00:08:08,820 --> 00:08:11,520
tool runs from the open BMC and Rance

163
00:08:11,520 --> 00:08:14,090
SRP Eliam requester it is developed in

164
00:08:14,090 --> 00:08:16,860
modern C++ like other open BMC

165
00:08:16,860 --> 00:08:20,969
applications and it leverages the CLI

166
00:08:20,969 --> 00:08:23,849
elevant parser the command line the C++

167
00:08:23,849 --> 00:08:26,009
11 command line parser which is like

168
00:08:26,009 --> 00:08:29,400
pretty simple with minimal syntax you

169
00:08:29,400 --> 00:08:33,450
can get your things drawn we we leverage

170
00:08:33,450 --> 00:08:37,649
we use a lip elem library for the

171
00:08:37,649 --> 00:08:40,020
encoding and decoding of the commands so

172
00:08:40,020 --> 00:08:42,360
the this Li lip PA Liam was a library

173
00:08:42,360 --> 00:08:44,159
that we developed for the protocol to

174
00:08:44,159 --> 00:08:45,630
take care of the encoding and the

175
00:08:45,630 --> 00:08:48,089
decoding so that so we have reused that

176
00:08:48,089 --> 00:08:51,120
for the tooling as well this library can

177
00:08:51,120 --> 00:08:54,000
be reused in any of the any of these

178
00:08:54,000 --> 00:08:55,290
components that's

179
00:08:55,290 --> 00:09:00,090
P Eliam right now we are like our test

180
00:09:00,090 --> 00:09:01,760
team is writing functional test cases

181
00:09:01,760 --> 00:09:05,070
for this billion stack using this ldm

182
00:09:05,070 --> 00:09:19,350
tool so this is how this PLM tool is

183
00:09:19,350 --> 00:09:22,230
right now fitting into the on the open

184
00:09:22,230 --> 00:09:25,130
BMC the PLM tool runs on the open BMC

185
00:09:25,130 --> 00:09:30,450
access the requester and so there's n

186
00:09:30,450 --> 00:09:32,730
CTP demon that's running on the on the

187
00:09:32,730 --> 00:09:36,480
open BMC so that is kind of a like a

188
00:09:36,480 --> 00:09:38,970
multiplexer and the the responder the P

189
00:09:38,970 --> 00:09:40,740
Eliam demon what you see on the chart is

190
00:09:40,740 --> 00:09:43,050
the responder the protocol

191
00:09:43,050 --> 00:09:45,180
implementation where there are command

192
00:09:45,180 --> 00:09:47,490
handlers for each of the implemented

193
00:09:47,490 --> 00:09:50,190
commands so the tool is also connected

194
00:09:50,190 --> 00:09:53,540
to the same demon it sends a PLM request

195
00:09:53,540 --> 00:09:56,150
and the demon forwards it to the

196
00:09:56,150 --> 00:10:00,540
responder and the PLM tool gets a

197
00:10:00,540 --> 00:10:02,970
response back and shows output pretty

198
00:10:02,970 --> 00:10:04,620
similar similar to what how the idea my

199
00:10:04,620 --> 00:10:07,040
tool works

200
00:10:14,390 --> 00:10:19,230
so this is another use case of ple until

201
00:10:19,230 --> 00:10:20,850
there were the PMP Liam toolkit could

202
00:10:20,850 --> 00:10:25,230
target the the IO adapters so the i/o

203
00:10:25,230 --> 00:10:26,550
adapters will be connected through some

204
00:10:26,550 --> 00:10:28,440
physical medium to the management

205
00:10:28,440 --> 00:10:31,980
controller so the ple M tool can target

206
00:10:31,980 --> 00:10:37,740
the IO adapters so the so the it depends

207
00:10:37,740 --> 00:10:40,350
on the endpoint IDs that are assigned to

208
00:10:40,350 --> 00:10:42,960
the adapters the PLM tool will route

209
00:10:42,960 --> 00:10:46,680
will send the request to this iadapt s

210
00:10:46,680 --> 00:10:50,190
and the tool process the response back

211
00:10:50,190 --> 00:10:53,100
so these are the two kind of use cases

212
00:10:53,100 --> 00:10:54,720
that we right now we are saying for the

213
00:10:54,720 --> 00:10:57,839
PLM tool we we are right now the peak of

214
00:10:57,839 --> 00:11:01,020
the first first use case we are like our

215
00:11:01,020 --> 00:11:02,820
team is using for testing out the

216
00:11:02,820 --> 00:11:05,670
command if limitations but this is

217
00:11:05,670 --> 00:11:07,800
something which we plan to use in the

218
00:11:07,800 --> 00:11:10,860
near future so we could try out the I

219
00:11:10,860 --> 00:11:14,910
adapters we could try out what like PDRs

220
00:11:14,910 --> 00:11:18,000
that are supported what are the senses

221
00:11:18,000 --> 00:11:20,910
that are there on the IO adapters get

222
00:11:20,910 --> 00:11:29,220
the VPD information like that yeah this

223
00:11:29,220 --> 00:11:31,890
is a like the output of the PLM tool

224
00:11:31,890 --> 00:11:34,350
it's very rudimentary right now it's

225
00:11:34,350 --> 00:11:39,720
very basic so we got a few few commands

226
00:11:39,720 --> 00:11:41,580
implemented like get PL iam tides and

227
00:11:41,580 --> 00:11:46,200
the get ple immersion in the tool and it

228
00:11:46,200 --> 00:11:49,230
supports some of these sub commands like

229
00:11:49,230 --> 00:11:51,750
the APM version takes takes a sub

230
00:11:51,750 --> 00:11:54,210
command like what is the PM type that

231
00:11:54,210 --> 00:11:58,250
you want to kind of drop the version for

232
00:11:58,250 --> 00:12:02,459
so you could pass that so I mean this is

233
00:12:02,459 --> 00:12:03,690
something very basic that we started

234
00:12:03,690 --> 00:12:07,920
with like this can grow like like like

235
00:12:07,920 --> 00:12:15,750
based on the PLM protocol needs ok

236
00:12:15,750 --> 00:12:19,590
some sample output for the helium tool

237
00:12:19,590 --> 00:12:22,300
this is this command basically gets the

238
00:12:22,300 --> 00:12:25,420
base version of the PA Liam for the base

239
00:12:25,420 --> 00:12:30,700
base alien-type so what the PNM tool

240
00:12:30,700 --> 00:12:32,470
takes care of it's like it puts the STP

241
00:12:32,470 --> 00:12:35,380
header the first two bytes it puts that

242
00:12:35,380 --> 00:12:38,590
at the end point and message type which

243
00:12:38,590 --> 00:12:41,710
is p LD m followed by the helium header

244
00:12:41,710 --> 00:12:45,040
and then followed by the commands

245
00:12:45,040 --> 00:12:50,230
request data since this is a city PD

246
00:12:50,230 --> 00:12:52,390
Minister what you call our D max it

247
00:12:52,390 --> 00:12:55,510
basically the it's a this what a send

248
00:12:55,510 --> 00:12:58,000
send by the field Billiam tool is a loop

249
00:12:58,000 --> 00:13:00,070
back again to the PL diem tool so it's a

250
00:13:00,070 --> 00:13:04,150
PL diem tool basically discards it but

251
00:13:04,150 --> 00:13:05,530
what comes as the response from the

252
00:13:05,530 --> 00:13:09,460
actual responder is processed and right

253
00:13:09,460 --> 00:13:11,620
now it's just printed as a bits and

254
00:13:11,620 --> 00:13:15,010
bytes we will be getting to somehow this

255
00:13:15,010 --> 00:13:18,730
and enhancements later but I yeah but we

256
00:13:18,730 --> 00:13:21,160
get the MC TP header we get the PL iam

257
00:13:21,160 --> 00:13:23,890
response and the data and if you see

258
00:13:23,890 --> 00:13:28,060
that that F 1 F 0 F 0 0 0 stands for the

259
00:13:28,060 --> 00:13:31,720
the ple emotion type and that that's

260
00:13:31,720 --> 00:13:35,710
like 1.0.0 like major minor and i think

261
00:13:35,710 --> 00:13:45,790
it off sorry from abortion yep next we

262
00:13:45,790 --> 00:13:47,860
we have something called a row option

263
00:13:47,860 --> 00:13:50,250
quite similar to the idea my tool so

264
00:13:50,250 --> 00:13:53,170
when we have I mean we have more focused

265
00:13:53,170 --> 00:13:54,820
on the protocol dolphin to meet the

266
00:13:54,820 --> 00:13:56,440
deadline so we couldn't put enough

267
00:13:56,440 --> 00:13:59,920
effort for the tooling effort so we came

268
00:13:59,920 --> 00:14:01,540
up with some something like a row option

269
00:14:01,540 --> 00:14:04,750
which will help you buddy call and

270
00:14:04,750 --> 00:14:05,680
whenever a new command is implemented

271
00:14:05,680 --> 00:14:07,780
someone wants to script some of this

272
00:14:07,780 --> 00:14:09,850
request they can do that using the row

273
00:14:09,850 --> 00:14:12,670
option with the row option the only

274
00:14:12,670 --> 00:14:14,620
thing that you that that's not needed is

275
00:14:14,620 --> 00:14:17,020
mctv header Pocius needed but you need

276
00:14:17,020 --> 00:14:19,480
to stuff in the PLM header piece which

277
00:14:19,480 --> 00:14:20,860
is which is the first three bytes and

278
00:14:20,860 --> 00:14:24,850
the request data portion yep the

279
00:14:24,850 --> 00:14:27,430
response is identical to what we saw

280
00:14:27,430 --> 00:14:28,520
with the

281
00:14:28,520 --> 00:14:37,280
standard option so this is something on

282
00:14:37,280 --> 00:14:37,820
the cards

283
00:14:37,820 --> 00:14:41,780
the nvme tool so enemies are like a

284
00:14:41,780 --> 00:14:45,680
register level interface for pca based

285
00:14:45,680 --> 00:14:51,200
SSD though so these are nvme cards SSDs

286
00:14:51,200 --> 00:14:53,570
will have this nvme subsystem well there

287
00:14:53,570 --> 00:14:55,280
are management management end points

288
00:14:55,280 --> 00:14:59,980
within the nvme subsystem which can be

289
00:14:59,980 --> 00:15:04,130
kind of queried from the nvme to there

290
00:15:04,130 --> 00:15:08,120
so they are to two physical mediums are

291
00:15:08,120 --> 00:15:10,940
the smbus and the pca and so the enemy

292
00:15:10,940 --> 00:15:13,970
tool should be able to speak to the

293
00:15:13,970 --> 00:15:15,680
subsystem using any of this physical

294
00:15:15,680 --> 00:15:20,780
medium and yeah it can be used for like

295
00:15:20,780 --> 00:15:23,260
currying the VPD information of this

296
00:15:23,260 --> 00:15:27,020
nvme cards do some monitoring

297
00:15:27,020 --> 00:15:29,030
temperature monitoring and all that

298
00:15:29,030 --> 00:15:30,650
should be possible but this is something

299
00:15:30,650 --> 00:15:33,620
which we yeah which we we think that

300
00:15:33,620 --> 00:15:34,310
some of this uh

301
00:15:34,310 --> 00:15:36,560
folks work working actively working on

302
00:15:36,560 --> 00:15:46,810
the nvme could could participate in okay

303
00:15:50,530 --> 00:15:55,600
oh yeah in this following the OEM emi

304
00:15:55,600 --> 00:15:58,580
protocol or to communicate with the

305
00:15:58,580 --> 00:16:03,680
enemy subsystem yeah okay so and we mean

306
00:16:03,680 --> 00:16:06,050
tool is also just like a name given it

307
00:16:06,050 --> 00:16:08,480
could be something that someone develops

308
00:16:08,480 --> 00:16:14,840
comes up with something better but yeah

309
00:16:14,840 --> 00:16:17,810
so these are the future plans that we

310
00:16:17,810 --> 00:16:21,920
have for the for this tooling effort one

311
00:16:21,920 --> 00:16:23,840
thing is to come up come up with a human

312
00:16:23,840 --> 00:16:30,980
readable formats so that some the person

313
00:16:30,980 --> 00:16:33,020
who who is running that doesn't need to

314
00:16:33,020 --> 00:16:35,020
go through the bits and bytes it has a

315
00:16:35,020 --> 00:16:39,680
better output another suggestion was to

316
00:16:39,680 --> 00:16:42,790
come up with a JSON output

317
00:16:42,860 --> 00:16:45,080
like it'll be like a custom JSON for

318
00:16:45,080 --> 00:16:47,900
each command but uh what that can be

319
00:16:47,900 --> 00:16:50,540
used for is for the protocol validation

320
00:16:50,540 --> 00:16:52,120
suit something similar to the redfish

321
00:16:52,120 --> 00:16:55,970
that that we can write schemas for the

322
00:16:55,970 --> 00:16:58,520
requirements of like what protocols it

323
00:16:58,520 --> 00:17:01,070
should adhere to and these json outputs

324
00:17:01,070 --> 00:17:03,890
could be used to see whether the the

325
00:17:03,890 --> 00:17:06,589
protocol implementation like a matches

326
00:17:06,589 --> 00:17:09,800
the JSON output also will will probably

327
00:17:09,800 --> 00:17:13,579
help with these PDRs which which which

328
00:17:13,579 --> 00:17:15,470
will pull out a lot of information like

329
00:17:15,470 --> 00:17:18,079
it depends on the implementation but it

330
00:17:18,079 --> 00:17:21,589
it can you can throw a lot of output so

331
00:17:21,589 --> 00:17:25,130
this JSON output probably will be he'll

332
00:17:25,130 --> 00:17:28,940
be useful to validate this command

333
00:17:28,940 --> 00:17:32,930
responses and something that yeah

334
00:17:32,930 --> 00:17:34,460
something something that we can do with

335
00:17:34,460 --> 00:17:37,220
that is also for those who comfortable

336
00:17:37,220 --> 00:17:38,690
occur and knowledgeable about the

337
00:17:38,690 --> 00:17:40,330
pallium protocol there's a concept of

338
00:17:40,330 --> 00:17:42,970
NDT IDs entity instance and the

339
00:17:42,970 --> 00:17:49,130
containers so it's like we can have what

340
00:17:49,130 --> 00:17:54,470
we call PD ours for CPU cores we can

341
00:17:54,470 --> 00:17:57,110
have those and those those will be part

342
00:17:57,110 --> 00:17:59,840
of those will be contained in the CPU so

343
00:17:59,840 --> 00:18:01,850
those kind of hierarchy we can we can

344
00:18:01,850 --> 00:18:04,580
have some kind of a kind of image images

345
00:18:04,580 --> 00:18:06,610
generated out of this JSON which shows

346
00:18:06,610 --> 00:18:10,660
how the what you call how the system is

347
00:18:10,660 --> 00:18:15,590
organized those kind of output yeah and

348
00:18:15,590 --> 00:18:18,380
the next thing is to develop this into a

349
00:18:18,380 --> 00:18:21,650
like a family of PMC tools right now we

350
00:18:21,650 --> 00:18:23,450
only have the PLM tool but probably come

351
00:18:23,450 --> 00:18:26,210
up with other tools based on the

352
00:18:26,210 --> 00:18:31,100
requirement and will also work with the

353
00:18:31,100 --> 00:18:33,290
DMT up to upstream some of these PM CI

354
00:18:33,290 --> 00:18:36,710
tools so that it's available for

355
00:18:36,710 --> 00:18:42,140
everyone to pick and use and probably

356
00:18:42,140 --> 00:18:44,410
host it in like where does in the DMT F

357
00:18:44,410 --> 00:18:47,840
in github as a DM TF or repository where

358
00:18:47,840 --> 00:18:49,070
some of these refreshed redfish

359
00:18:49,070 --> 00:18:51,680
violators are there probably if it works

360
00:18:51,680 --> 00:18:53,660
out well I've seen some of this code

361
00:18:53,660 --> 00:18:56,050
over there

362
00:18:58,419 --> 00:19:02,270
so yeah few links for getting started on

363
00:19:02,270 --> 00:19:07,159
the PMC a tooling so the PMP Liam tool

364
00:19:07,159 --> 00:19:08,330
implementation is out there in the

365
00:19:08,330 --> 00:19:11,450
github it is yeah it's pretty simple

366
00:19:11,450 --> 00:19:13,279
right now but please do take it take a

367
00:19:13,279 --> 00:19:18,980
look and try to try to like review some

368
00:19:18,980 --> 00:19:20,690
of the code out there and try to

369
00:19:20,690 --> 00:19:23,990
contribute so I was speaking with Ben

370
00:19:23,990 --> 00:19:27,500
from Facebook today and got to know that

371
00:19:27,500 --> 00:19:30,440
some of the code that that he was

372
00:19:30,440 --> 00:19:33,919
writing for the PLM firmware update its

373
00:19:33,919 --> 00:19:37,250
that can fit in this after in the helium

374
00:19:37,250 --> 00:19:38,539
tool and can be consumed by the

375
00:19:38,539 --> 00:19:40,700
community so one of the objectives of

376
00:19:40,700 --> 00:19:42,350
this presentation was met when I spoke

377
00:19:42,350 --> 00:19:44,630
to him that there are there this code

378
00:19:44,630 --> 00:19:46,850
out there which can be brought into into

379
00:19:46,850 --> 00:19:50,090
this tuning effort and I welcome

380
00:19:50,090 --> 00:19:52,880
everyone to take part in this PMC our

381
00:19:52,880 --> 00:19:58,610
group it is like to get to get an update

382
00:19:58,610 --> 00:20:00,919
about all the recent specifications and

383
00:20:00,919 --> 00:20:02,990
everything that is happening for in the

384
00:20:02,990 --> 00:20:06,169
Box communication this is a excellent

385
00:20:06,169 --> 00:20:09,710
place to be they meet quite frequently

386
00:20:09,710 --> 00:20:14,620
there are calls that we can take part in

387
00:20:15,250 --> 00:20:19,039
yeah and the PMC of white paper will

388
00:20:19,039 --> 00:20:22,220
give more details on what I spoke now to

389
00:20:22,220 --> 00:20:24,350
get you like the overall picture if you

390
00:20:24,350 --> 00:20:29,529
are quite new to this subject thank you

391
00:20:34,970 --> 00:20:38,510
I'm interesting the PM's Network for the

392
00:20:38,510 --> 00:20:42,620
JSON format does it refer to the binary

393
00:20:42,620 --> 00:20:47,179
encoding the JSON what I mentioned over

394
00:20:47,179 --> 00:20:49,520
there was not binary encoded JSON but it

395
00:20:49,520 --> 00:20:51,980
was rather the output shown in a JSON

396
00:20:51,980 --> 00:20:56,750
format okay like so suppose we have the

397
00:20:56,750 --> 00:20:59,270
like a PD our output right it has an

398
00:20:59,270 --> 00:21:01,490
entity ID entity instance those coming

399
00:21:01,490 --> 00:21:04,909
out in a in a JSON format do you have

400
00:21:04,909 --> 00:21:09,049
any plan for the B year 4 p.m. or

401
00:21:09,049 --> 00:21:11,980
Ardi relish device in Manly yep that

402
00:21:11,980 --> 00:21:15,080
depends on the on the Delfin plants that

403
00:21:15,080 --> 00:21:16,309
we have but that's something which we

404
00:21:16,309 --> 00:21:20,739
are interested in yeah

405
00:21:32,580 --> 00:21:35,339
so the tool communicates directly with

406
00:21:35,339 --> 00:21:39,269
the pl iam Raymond and then yep the

407
00:21:39,269 --> 00:21:41,879
output would be Jason farmer right yeah

408
00:21:41,879 --> 00:21:43,619
so that that's that's not what we have

409
00:21:43,619 --> 00:21:45,539
done right now right now we hit board

410
00:21:45,539 --> 00:21:47,399
where we put put put us out a raw format

411
00:21:47,399 --> 00:21:48,899
but that's something which we are

412
00:21:48,899 --> 00:21:53,070
interested in doing so the use case for

413
00:21:53,070 --> 00:21:56,099
this is running from the host or is it

414
00:21:56,099 --> 00:21:58,549
running from the Remote Administrator

415
00:21:58,549 --> 00:22:01,080
right right now the PLM tool runs on the

416
00:22:01,080 --> 00:22:05,999
open BMC but that can be run from the

417
00:22:05,999 --> 00:22:10,589
host as well because it could run from

418
00:22:10,589 --> 00:22:13,139
anywhere right now it should be possible

419
00:22:13,139 --> 00:22:46,679
to run it from the host okay like I

420
00:22:46,679 --> 00:22:48,299
think there's a clear distinction as I

421
00:22:48,299 --> 00:22:50,249
understand that these are this is these

422
00:22:50,249 --> 00:22:52,469
protocols are this BMC air protocols are

423
00:22:52,469 --> 00:22:54,269
all for in the Box communication right

424
00:22:54,269 --> 00:22:56,279
yeah they don't cater to the remote

425
00:22:56,279 --> 00:22:57,839
management and the redfish caters to

426
00:22:57,839 --> 00:23:04,589
that fish caters to the outside the box

427
00:23:04,589 --> 00:23:11,729
yeah yep so I mean the requests can be

428
00:23:11,729 --> 00:23:15,450
in the JSON format okay

429
00:23:15,450 --> 00:23:18,450
the PA Liam for example even laws our

430
00:23:18,450 --> 00:23:20,969
event receiver implemented within the

431
00:23:20,969 --> 00:23:24,509
pier diem you don't have a way to get

432
00:23:24,509 --> 00:23:26,940
the locks out other than the pier diem

433
00:23:26,940 --> 00:23:28,259
okay we are outside the box

434
00:23:28,259 --> 00:23:30,989
communication okay if there is some kind

435
00:23:30,989 --> 00:23:34,289
of communication link between the fish

436
00:23:34,289 --> 00:23:37,499
front end okay the PL diem tool back in

437
00:23:37,499 --> 00:23:40,019
got it yeah so for that right now we

438
00:23:40,019 --> 00:23:41,849
kiss on open BMC the Debus object

439
00:23:41,849 --> 00:23:43,619
marital access that common bridging

440
00:23:43,619 --> 00:23:46,350
factor so like

441
00:23:46,350 --> 00:23:48,269
for example we we have this state

442
00:23:48,269 --> 00:23:51,179
sensors which which are sent from the

443
00:23:51,179 --> 00:23:53,759
host to update the state of the hosts in

444
00:23:53,759 --> 00:23:56,279
the boot boot boot progress so those are

445
00:23:56,279 --> 00:23:58,620
those messages come via the ppl iam

446
00:23:58,620 --> 00:24:01,860
protocol but those are reflected on the

447
00:24:01,860 --> 00:24:04,139
rebus objects and but those are those

448
00:24:04,139 --> 00:24:05,759
neighbour subjects are consumed by the

449
00:24:05,759 --> 00:24:10,710
red fish so the I hope I have answered

450
00:24:10,710 --> 00:24:12,000
you but that kind of bridging that we

451
00:24:12,000 --> 00:24:13,350
are trying to do is is through the

452
00:24:13,350 --> 00:24:15,720
deepest object model that we have on the

453
00:24:15,720 --> 00:24:23,370
open BMC just one question about the

454
00:24:23,370 --> 00:24:26,279
contribution yeah do you expect us to so

455
00:24:26,279 --> 00:24:28,019
if we want to contribute you deserve

456
00:24:28,019 --> 00:24:30,450
cool she will send a PR direct free I'm

457
00:24:30,450 --> 00:24:32,009
good help or do you prefer like to clear

458
00:24:32,009 --> 00:24:34,139
it or it's a great open BMC Garrett out

459
00:24:34,139 --> 00:24:36,000
like okay so it's not super full request

460
00:24:36,000 --> 00:24:37,889
don't get out yeah it's it's like any

461
00:24:37,889 --> 00:24:40,529
other open BMC repository right now so

462
00:24:40,529 --> 00:24:41,700
you can conduit to the open being

463
00:24:41,700 --> 00:24:44,789
cigarette yeah yeah and the normal cycle

464
00:24:44,789 --> 00:24:47,429
it goes through okay yeah Berea as we

465
00:24:47,429 --> 00:24:49,740
talked yesterday right the firmware

466
00:24:49,740 --> 00:24:52,169
upgrade a piece that you have read is

467
00:24:52,169 --> 00:24:54,149
something which we can pull into this

468
00:24:54,149 --> 00:24:56,580
yeah definitely yeah so that someone can

469
00:24:56,580 --> 00:24:58,889
you can target any of the IR adapters

470
00:24:58,889 --> 00:25:00,629
and you can do a firmware upgrade using

471
00:25:00,629 --> 00:25:04,219
helium tool yeah

472
00:25:13,330 --> 00:25:20,910
any other questions yeah thank you yeah

473
00:25:20,910 --> 00:25:24,350
[Applause]

474
00:25:24,350 --> 00:25:30,530
[Music]

