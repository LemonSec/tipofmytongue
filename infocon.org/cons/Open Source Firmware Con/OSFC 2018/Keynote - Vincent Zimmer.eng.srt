1
00:00:00,000 --> 00:00:04,609
[Music]

2
00:00:04,609 --> 00:00:08,400
first up Vincent simmer and we will

3
00:00:08,400 --> 00:00:11,070
talking about how Intel is harnessing

4
00:00:11,070 --> 00:00:14,040
this great community give it up okay

5
00:00:14,040 --> 00:00:21,330
thank you thanks everyone for showing up

6
00:00:21,330 --> 00:00:24,810
today I'll try not to be preachy but in

7
00:00:24,810 --> 00:00:27,570
an environment like this I have to fight

8
00:00:27,570 --> 00:00:29,699
the impulse but uh yeah I'm really

9
00:00:29,699 --> 00:00:33,570
honored to UM been invited a lot of

10
00:00:33,570 --> 00:00:34,950
community here we've worked with in a

11
00:00:34,950 --> 00:00:37,680
lot of new faces and really what I want

12
00:00:37,680 --> 00:00:40,050
to talk about today is you know sort of

13
00:00:40,050 --> 00:00:42,270
set the mood for the event but also some

14
00:00:42,270 --> 00:00:44,309
of the things Intel's doing to try to

15
00:00:44,309 --> 00:00:47,100
help this community be more make it

16
00:00:47,100 --> 00:00:49,250
easier to do open source development

17
00:00:49,250 --> 00:00:51,809
done all use examples of some of the

18
00:00:51,809 --> 00:00:54,809
things we're doing within Intel since we

19
00:00:54,809 --> 00:00:57,030
want to try to catch folks up I'm gonna

20
00:00:57,030 --> 00:00:59,430
stop at the half hour and maybe catch

21
00:00:59,430 --> 00:01:02,280
questions in the hallway or afterward if

22
00:01:02,280 --> 00:01:05,909
that's ok with people so I wanted to

23
00:01:05,909 --> 00:01:07,710
sort of start with my beginning you know

24
00:01:07,710 --> 00:01:10,470
one of sometimes I give this talk and I

25
00:01:10,470 --> 00:01:12,659
remember I once gave of it I had a

26
00:01:12,659 --> 00:01:14,460
picture of Rodney Dangerfield and I said

27
00:01:14,460 --> 00:01:16,080
something about you know firmwares

28
00:01:16,080 --> 00:01:18,659
the Rodney Dangerfield of the industry

29
00:01:18,659 --> 00:01:21,299
you know Hardware people think you know

30
00:01:21,299 --> 00:01:23,520
we're software folks application

31
00:01:23,520 --> 00:01:24,900
software people think we're hardware

32
00:01:24,900 --> 00:01:27,630
folks but you know you know sort of

33
00:01:27,630 --> 00:01:29,670
didn't really want to denigrate the

34
00:01:29,670 --> 00:01:31,259
great stuff we do really want to sort of

35
00:01:31,259 --> 00:01:33,090
talk about you know what motivates me

36
00:01:33,090 --> 00:01:34,829
why I'm passionate about trying to open

37
00:01:34,829 --> 00:01:38,430
things up and my beginning so you know

38
00:01:38,430 --> 00:01:41,490
for me doing firmware was I think was

39
00:01:41,490 --> 00:01:44,460
the 80-85 my father given me a board and

40
00:01:44,460 --> 00:01:46,890
I thought the time it was great you know

41
00:01:46,890 --> 00:01:49,229
had schematics could wire-wrap different

42
00:01:49,229 --> 00:01:51,689
chips but was excited me the most was

43
00:01:51,689 --> 00:01:54,180
there was a book which had the source

44
00:01:54,180 --> 00:01:56,159
code of the monitor so we had the EE

45
00:01:56,159 --> 00:01:57,540
proms and actually had all the source

46
00:01:57,540 --> 00:02:00,030
code and what other way to get excited

47
00:02:00,030 --> 00:02:02,250
about development actually being able to

48
00:02:02,250 --> 00:02:05,009
touch see how things work and that

49
00:02:05,009 --> 00:02:08,280
spirit of openness and transparency over

50
00:02:08,280 --> 00:02:10,860
as the years have gone on and products

51
00:02:10,860 --> 00:02:13,260
have become more you know integrated

52
00:02:13,260 --> 00:02:15,660
it's kind of been lost and so one of the

53
00:02:15,660 --> 00:02:16,890
things that really again gets me excited

54
00:02:16,890 --> 00:02:20,129
about working with open source for more

55
00:02:20,129 --> 00:02:21,930
communities is how can we sort of

56
00:02:21,930 --> 00:02:24,480
realize this again get the data sheets

57
00:02:24,480 --> 00:02:27,000
get the source code out there so people

58
00:02:27,000 --> 00:02:29,819
can innovate open up the software and

59
00:02:29,819 --> 00:02:32,010
there's some you know business and other

60
00:02:32,010 --> 00:02:34,260
reasons why but that's sort of again

61
00:02:34,260 --> 00:02:36,360
what sort of is the fire in my belly for

62
00:02:36,360 --> 00:02:39,540
some of this stuff so but as I mentioned

63
00:02:39,540 --> 00:02:40,920
though I'm gonna sort of talk about some

64
00:02:40,920 --> 00:02:42,620
of the things Intel's trying to do here

65
00:02:42,620 --> 00:02:46,380
too with respect to open this and

66
00:02:46,380 --> 00:02:49,370
there's sort of three pillars simplicity

67
00:02:49,370 --> 00:02:54,120
openness and then security so really

68
00:02:54,120 --> 00:02:55,920
it's not just you know is the is the

69
00:02:55,920 --> 00:02:57,900
code out there it's really is our things

70
00:02:57,900 --> 00:03:00,959
easy to use are we transparent open to

71
00:03:00,959 --> 00:03:03,239
work with and then a security top of

72
00:03:03,239 --> 00:03:07,530
mind is everything we do so simplicity

73
00:03:07,530 --> 00:03:10,079
you know we build complex code bases

74
00:03:10,079 --> 00:03:12,540
within Intel and we build a code base

75
00:03:12,540 --> 00:03:14,250
want to validate all the features of a

76
00:03:14,250 --> 00:03:17,250
chip sort of you know we validate our

77
00:03:17,250 --> 00:03:19,680
hardware it's sort of like this you know

78
00:03:19,680 --> 00:03:22,739
very rich block but when you go to the

79
00:03:22,739 --> 00:03:25,319
market people want less if you're

80
00:03:25,319 --> 00:03:27,359
building a cloud server and appliance an

81
00:03:27,359 --> 00:03:29,430
embedded system you don't need all the

82
00:03:29,430 --> 00:03:31,590
features but some of the ways today

83
00:03:31,590 --> 00:03:34,709
we've been delivering our code is sort

84
00:03:34,709 --> 00:03:36,720
of like the Jenga stack and when you try

85
00:03:36,720 --> 00:03:39,930
to take features out or drivers out or

86
00:03:39,930 --> 00:03:43,859
recompose it's you know the stack may

87
00:03:43,859 --> 00:03:46,440
fall over some of those blocks may not

88
00:03:46,440 --> 00:03:49,380
be you know well documented so how can

89
00:03:49,380 --> 00:03:52,260
we make it easier for customers to use

90
00:03:52,260 --> 00:03:54,239
our code make it simpler and so some of

91
00:03:54,239 --> 00:03:55,700
the activities I'm going to talk about

92
00:03:55,700 --> 00:04:00,000
are really responsive to that and then

93
00:04:00,000 --> 00:04:02,880
openness you know openness is not just

94
00:04:02,880 --> 00:04:05,069
sort of a philosophical concern it's

95
00:04:05,069 --> 00:04:07,470
really thinking of what customers need

96
00:04:07,470 --> 00:04:10,500
you know some customers you know don't

97
00:04:10,500 --> 00:04:12,419
want to be stuck with having to use you

98
00:04:12,419 --> 00:04:15,780
know us the supply chain may have their

99
00:04:15,780 --> 00:04:18,930
own innovation they want to do and so

100
00:04:18,930 --> 00:04:21,149
really giving them the pieces such that

101
00:04:21,149 --> 00:04:22,890
they can do what they need to do and

102
00:04:22,890 --> 00:04:25,110
don't presume you know what the end

103
00:04:25,110 --> 00:04:26,740
customers need to do building that fold

104
00:04:26,740 --> 00:04:28,270
jiangha stackin assuming everyone will

105
00:04:28,270 --> 00:04:31,150
use it a quote I remember from Bill joy

106
00:04:31,150 --> 00:04:32,889
is you know all the smartest people

107
00:04:32,889 --> 00:04:35,380
don't work at your company huge amount

108
00:04:35,380 --> 00:04:37,930
of you know you know horsepower out in

109
00:04:37,930 --> 00:04:39,610
the industry so how can you empower

110
00:04:39,610 --> 00:04:41,680
people given the information they need

111
00:04:41,680 --> 00:04:43,690
in the pieces and not give them this

112
00:04:43,690 --> 00:04:46,180
sort of full full stack that's kind of

113
00:04:46,180 --> 00:04:50,020
opaque and they can't really change and

114
00:04:50,020 --> 00:04:52,419
then security from both design and

115
00:04:52,419 --> 00:04:55,960
development so saying we have security

116
00:04:55,960 --> 00:04:57,849
features is great but if people can't

117
00:04:57,849 --> 00:04:59,770
assess them whether it's putting the

118
00:04:59,770 --> 00:05:01,539
documentation out there having all the

119
00:05:01,539 --> 00:05:05,139
source code really making it such that

120
00:05:05,139 --> 00:05:07,210
we work with the ecosystem that it's

121
00:05:07,210 --> 00:05:09,750
easy to deploy fixes and patches

122
00:05:09,750 --> 00:05:12,789
security is now you know top of mind in

123
00:05:12,789 --> 00:05:15,130
all of our for all of us and so some of

124
00:05:15,130 --> 00:05:16,870
the work we do with the community here

125
00:05:16,870 --> 00:05:21,340
has security definitely in mind and then

126
00:05:21,340 --> 00:05:23,470
what I'm going to do for the next couple

127
00:05:23,470 --> 00:05:25,210
pages here has just sort of highlight

128
00:05:25,210 --> 00:05:27,159
some of the activities we're doing this

129
00:05:27,159 --> 00:05:29,050
is not meant to say these are all the

130
00:05:29,050 --> 00:05:30,880
open-source activities going on in the

131
00:05:30,880 --> 00:05:33,039
industry this is sort of just a small

132
00:05:33,039 --> 00:05:34,659
view of some of the activities within

133
00:05:34,659 --> 00:05:37,719
Intel or we're trying to act upon some

134
00:05:37,719 --> 00:05:40,900
of these precepts so like simplicity you

135
00:05:40,900 --> 00:05:42,820
guys are probably familiar with what

136
00:05:42,820 --> 00:05:45,370
we've been doing with the FSB so trying

137
00:05:45,370 --> 00:05:48,250
to make it such that for code we can't

138
00:05:48,250 --> 00:05:50,949
put an open-source make it very easy to

139
00:05:50,949 --> 00:05:53,310
ingest in the open-source communities

140
00:05:53,310 --> 00:05:56,680
well-defined interfaces you know easy to

141
00:05:56,680 --> 00:06:01,300
easy to integrate and then on the actual

142
00:06:01,300 --> 00:06:04,090
platform implementation itself later in

143
00:06:04,090 --> 00:06:05,319
the week you're going to hear from some

144
00:06:05,319 --> 00:06:07,630
Intel my Intel colleagues about this a

145
00:06:07,630 --> 00:06:10,050
project called Intel slim bootloader an

146
00:06:10,050 --> 00:06:12,759
alternative way to build your boot code

147
00:06:12,759 --> 00:06:14,860
it leverages some of the IDI k2 source

148
00:06:14,860 --> 00:06:18,460
code uses FSP but again for certain

149
00:06:18,460 --> 00:06:20,880
markets some of the embedded IOT an

150
00:06:20,880 --> 00:06:23,590
alternate way to help engage that

151
00:06:23,590 --> 00:06:27,039
community and say hey can we can we can

152
00:06:27,039 --> 00:06:27,580
we do better

153
00:06:27,580 --> 00:06:29,500
and then something we call the min

154
00:06:29,500 --> 00:06:32,229
platform so when you saw that big Jenga

155
00:06:32,229 --> 00:06:34,419
block and when it was pieces were taken

156
00:06:34,419 --> 00:06:37,659
out it wasn't very clear often when we

157
00:06:37,659 --> 00:06:40,029
have a large code base what subset you

158
00:06:40,029 --> 00:06:40,630
need to build

159
00:06:40,630 --> 00:06:42,910
the basic platform so what we've been

160
00:06:42,910 --> 00:06:45,880
doing now is creating essentially the

161
00:06:45,880 --> 00:06:47,770
subset of the platform code you actually

162
00:06:47,770 --> 00:06:50,260
need to boot lock down some of the

163
00:06:50,260 --> 00:06:52,210
interfaces have that code reusable

164
00:06:52,210 --> 00:06:55,090
across some generations something we're

165
00:06:55,090 --> 00:06:56,890
calling them in platform we have a few

166
00:06:56,890 --> 00:06:59,320
examples I've mentioned and we're even

167
00:06:59,320 --> 00:07:01,390
trying to drive that concept of a min

168
00:07:01,390 --> 00:07:04,150
platform even to some of our core so a

169
00:07:04,150 --> 00:07:05,980
subset of code what's the minimum you

170
00:07:05,980 --> 00:07:09,150
need and it has to be open source so

171
00:07:09,150 --> 00:07:11,800
everything other than FSB you can drop

172
00:07:11,800 --> 00:07:15,310
on top with the min platform and then in

173
00:07:15,310 --> 00:07:17,260
the spirit of that and that min platform

174
00:07:17,260 --> 00:07:19,090
again openness it's nice to have a

175
00:07:19,090 --> 00:07:22,150
design but if you don't have instances

176
00:07:22,150 --> 00:07:25,750
of it then it really is not worth the

177
00:07:25,750 --> 00:07:27,940
paper it's printed on so having

178
00:07:27,940 --> 00:07:30,310
embodiments of the platform so we've

179
00:07:30,310 --> 00:07:33,010
created a new project called edk two

180
00:07:33,010 --> 00:07:36,190
platforms where we have we're vying to

181
00:07:36,190 --> 00:07:38,740
have examples of our client our IOT and

182
00:07:38,740 --> 00:07:40,930
servers where we build them in platform

183
00:07:40,930 --> 00:07:43,810
have the associated FSP and have a

184
00:07:43,810 --> 00:07:46,060
consistent recipe that folks can look at

185
00:07:46,060 --> 00:07:48,580
so if we're talking about security and

186
00:07:48,580 --> 00:07:50,560
we have a security ingredient show us

187
00:07:50,560 --> 00:07:52,770
sort of a full stack implementation I

188
00:07:52,770 --> 00:07:54,880
mean the host firmware is in everything

189
00:07:54,880 --> 00:07:56,440
so you're gonna hear about the sound

190
00:07:56,440 --> 00:07:58,210
firmware some of the SOC firmware

191
00:07:58,210 --> 00:08:00,970
Intel's opening up and then micro Python

192
00:08:00,970 --> 00:08:03,490
so tools on top of the firmware things

193
00:08:03,490 --> 00:08:05,910
you can do testing and development and

194
00:08:05,910 --> 00:08:08,830
then micro Python these sort of this

195
00:08:08,830 --> 00:08:10,540
environment allows us then to have tools

196
00:08:10,540 --> 00:08:12,520
like chip sack which we'll hear later in

197
00:08:12,520 --> 00:08:15,070
the week also to do assessments of your

198
00:08:15,070 --> 00:08:16,480
platform and this is again another

199
00:08:16,480 --> 00:08:19,510
community-based project where we'll have

200
00:08:19,510 --> 00:08:23,770
a tool where when new when new exploits

201
00:08:23,770 --> 00:08:25,750
come out we can have a test to say hey

202
00:08:25,750 --> 00:08:28,440
is your platform armored against it or

203
00:08:28,440 --> 00:08:30,640
if you just want to do some general

204
00:08:30,640 --> 00:08:32,770
Assurance work like fuzzing a certain

205
00:08:32,770 --> 00:08:35,289
interface you have chip sack and then

206
00:08:35,289 --> 00:08:38,979
capsule update so capsules are there are

207
00:08:38,979 --> 00:08:40,840
a few things about capsules one is the

208
00:08:40,840 --> 00:08:41,559
host interface

209
00:08:41,559 --> 00:08:45,190
so within upstream Linux we have L VFS

210
00:08:45,190 --> 00:08:47,980
we have Windows Update a way to send the

211
00:08:47,980 --> 00:08:49,960
capsule but then the actual payload

212
00:08:49,960 --> 00:08:52,450
which is well defined way to deliver

213
00:08:52,450 --> 00:08:53,930
updates so

214
00:08:53,930 --> 00:08:55,640
be a hackathon later in the week and

215
00:08:55,640 --> 00:08:58,100
again capsules really emblematic of us

216
00:08:58,100 --> 00:08:59,839
wanting work the community on how to get

217
00:08:59,839 --> 00:09:01,910
updates out there whether that mechanism

218
00:09:01,910 --> 00:09:05,779
whether how we work on security fixes so

219
00:09:05,779 --> 00:09:08,899
again you know it's a journey argue

220
00:09:08,899 --> 00:09:11,480
we're not there be great if you know FSP

221
00:09:11,480 --> 00:09:13,339
was all in the sort of the open source

222
00:09:13,339 --> 00:09:15,440
column but we're trying to make things

223
00:09:15,440 --> 00:09:17,690
easier and so these were some of the

224
00:09:17,690 --> 00:09:19,399
precepts driving us and some of the

225
00:09:19,399 --> 00:09:22,040
activities sort of on that on that

226
00:09:22,040 --> 00:09:26,209
journey and there are a lot of options

227
00:09:26,209 --> 00:09:28,970
in firmware so you know if this was ten

228
00:09:28,970 --> 00:09:31,520
years ago you'd see an EFI guy saying

229
00:09:31,520 --> 00:09:34,700
EFI or bust and really our view is if

230
00:09:34,700 --> 00:09:37,130
you're using Intel hardware we want it

231
00:09:37,130 --> 00:09:38,600
to be easy to use and there are a lot of

232
00:09:38,600 --> 00:09:39,709
options and I think they're great

233
00:09:39,709 --> 00:09:41,660
options rich communities like the

234
00:09:41,660 --> 00:09:43,339
coreboot community you boo

235
00:09:43,339 --> 00:09:46,399
and Tiano core and really want them all

236
00:09:46,399 --> 00:09:49,490
to be successful and not have I can't

237
00:09:49,490 --> 00:09:51,440
figure out how to make it work on your

238
00:09:51,440 --> 00:09:53,750
hardware the impediment so how do we

239
00:09:53,750 --> 00:09:54,950
sort of engage with all these

240
00:09:54,950 --> 00:09:58,279
communities as you know it's the market

241
00:09:58,279 --> 00:10:00,440
knows firmware is kind of important you

242
00:10:00,440 --> 00:10:02,930
know the host firmware is pretty pretty

243
00:10:02,930 --> 00:10:05,150
privileged if you have your trust zone

244
00:10:05,150 --> 00:10:08,209
or SMM you can cloudburst through it if

245
00:10:08,209 --> 00:10:10,400
you have device firmware that's opaque

246
00:10:10,400 --> 00:10:12,860
to the host and has privileges and so

247
00:10:12,860 --> 00:10:15,350
really being open here not just the host

248
00:10:15,350 --> 00:10:18,920
firmware but actually in the SOC the

249
00:10:18,920 --> 00:10:20,480
embedded controller I think the stuff

250
00:10:20,480 --> 00:10:22,490
Google's doing with its open with its

251
00:10:22,490 --> 00:10:25,880
open EC then you see our 50 I think

252
00:10:25,880 --> 00:10:27,800
Facebook's going to talk about BMC's I

253
00:10:27,800 --> 00:10:29,270
think it's imperative to take these

254
00:10:29,270 --> 00:10:31,010
precepts not just to the host firmware

255
00:10:31,010 --> 00:10:32,900
we sort of fetishize and talk about host

256
00:10:32,900 --> 00:10:34,459
firmware a lot because it's quote been

257
00:10:34,459 --> 00:10:38,150
in the way but you know I think there

258
00:10:38,150 --> 00:10:40,010
was one talkie on Maj gave and said the

259
00:10:40,010 --> 00:10:41,630
pixel book has 16 updatable firmware

260
00:10:41,630 --> 00:10:44,329
elements it's not just your bios or your

261
00:10:44,329 --> 00:10:47,000
host firmware so we care about it all

262
00:10:47,000 --> 00:10:48,800
we're just trying to sort of get over

263
00:10:48,800 --> 00:10:50,180
that host firmware hump and make it a

264
00:10:50,180 --> 00:10:52,790
little easier for folks and we do

265
00:10:52,790 --> 00:10:54,829
believe in openness to something Stephan

266
00:10:54,829 --> 00:10:57,620
myself Mark Jones when we wrote some

267
00:10:57,620 --> 00:11:00,440
stuff down a couple years ago really I

268
00:11:00,440 --> 00:11:02,779
think the market is really spoken about

269
00:11:02,779 --> 00:11:05,450
open and I think I saw some analysts

270
00:11:05,450 --> 00:11:06,740
that if you don't have an open-source

271
00:11:06,740 --> 00:11:07,470
strategy you don't

272
00:11:07,470 --> 00:11:08,880
a business strategy so I think this

273
00:11:08,880 --> 00:11:11,220
openness isn't just a nice to have but

274
00:11:11,220 --> 00:11:13,100
really as part of doing business and the

275
00:11:13,100 --> 00:11:17,970
in the 21st century here so I gave you

276
00:11:17,970 --> 00:11:19,620
the sort of the three pillars open

277
00:11:19,620 --> 00:11:21,600
simple secure what are some of the

278
00:11:21,600 --> 00:11:24,120
things we're doing now we have an open

279
00:11:24,120 --> 00:11:26,160
source core coreboot has a great open

280
00:11:26,160 --> 00:11:29,160
source core Tiano core does so I think

281
00:11:29,160 --> 00:11:30,570
it's imperative that the core code

282
00:11:30,570 --> 00:11:32,370
maximize its open

283
00:11:32,370 --> 00:11:35,040
you know blobs and including that code

284
00:11:35,040 --> 00:11:38,820
is horrible but our core is big there's

285
00:11:38,820 --> 00:11:40,080
like two million lines of open source

286
00:11:40,080 --> 00:11:41,940
code and so some of the things we're

287
00:11:41,940 --> 00:11:43,980
looking at is subsetting some of the

288
00:11:43,980 --> 00:11:46,770
open source packages and looking at

289
00:11:46,770 --> 00:11:48,900
profiles what does it take to build a

290
00:11:48,900 --> 00:11:50,430
cloud server what does it take to build

291
00:11:50,430 --> 00:11:52,200
in IOT what does it take to build slim

292
00:11:52,200 --> 00:11:55,110
boot can we have a simpler view into the

293
00:11:55,110 --> 00:11:59,010
core there's some public mock-ups we

294
00:11:59,010 --> 00:12:01,470
have that I talked to you guys about

295
00:12:01,470 --> 00:12:04,020
offline I'm and then the platform code

296
00:12:04,020 --> 00:12:05,700
we talked about the mint platform right

297
00:12:05,700 --> 00:12:07,560
what's the Minimum Viable Product just a

298
00:12:07,560 --> 00:12:09,870
boot but hey what if you still have

299
00:12:09,870 --> 00:12:12,150
advanced features you want to snap in so

300
00:12:12,150 --> 00:12:14,310
have well-defined packages to snap in

301
00:12:14,310 --> 00:12:16,710
advanced features preferably open source

302
00:12:16,710 --> 00:12:18,990
and one that we recently open source was

303
00:12:18,990 --> 00:12:20,610
the Thunderbolt code so if you use a

304
00:12:20,610 --> 00:12:22,110
discreet Thunder boat controller on

305
00:12:22,110 --> 00:12:25,290
Intel or AMD or other vendor and you use

306
00:12:25,290 --> 00:12:28,350
et k2 you can take them in platform you

307
00:12:28,350 --> 00:12:30,540
can add Thunderbolt and then close

308
00:12:30,540 --> 00:12:32,460
source if a vendor chooses but

309
00:12:32,460 --> 00:12:34,290
well-defined interfaces on how to snap

310
00:12:34,290 --> 00:12:36,960
them in if you have to do binary blobs

311
00:12:36,960 --> 00:12:39,180
have a well-defined interface the

312
00:12:39,180 --> 00:12:42,000
original FSP it sort of was modified for

313
00:12:42,000 --> 00:12:43,980
each project that used it it didn't have

314
00:12:43,980 --> 00:12:47,070
a well-defined interface we cleaved with

315
00:12:47,070 --> 00:12:49,740
the FS p11 and now to a well-defined

316
00:12:49,740 --> 00:12:51,930
interface so you can write class like

317
00:12:51,930 --> 00:12:54,960
code in coreboot or e dk2 and then for

318
00:12:54,960 --> 00:12:57,420
silicon specific or platform specific

319
00:12:57,420 --> 00:12:58,710
and integration guide so if you're going

320
00:12:58,710 --> 00:13:01,080
to do blobs lock down the interfaces

321
00:13:01,080 --> 00:13:03,510
make them easy to ingest and then the

322
00:13:03,510 --> 00:13:06,540
build tools you know if you have a lot

323
00:13:06,540 --> 00:13:08,820
of platform code core code a binary blob

324
00:13:08,820 --> 00:13:10,440
but you can't finalize your ROM image

325
00:13:10,440 --> 00:13:12,660
you're sort of not done so get the tools

326
00:13:12,660 --> 00:13:14,910
out there and then the last point is

327
00:13:14,910 --> 00:13:17,550
standards you know again ten years ago

328
00:13:17,550 --> 00:13:19,290
this talk would have had the EFI logo

329
00:13:19,290 --> 00:13:21,240
and the nice line

330
00:13:21,240 --> 00:13:24,330
of the H but really standards are

331
00:13:24,330 --> 00:13:26,010
valuable for interoperability to

332
00:13:26,010 --> 00:13:26,990
shrink-wrap os's

333
00:13:26,990 --> 00:13:30,330
but they kind of move slow and so this

334
00:13:30,330 --> 00:13:32,160
internet age waiting two years for a

335
00:13:32,160 --> 00:13:34,350
standard so we're really trying to move

336
00:13:34,350 --> 00:13:36,240
to if we do standards sort of a code

337
00:13:36,240 --> 00:13:38,459
first do this the protocol the

338
00:13:38,459 --> 00:13:40,410
interfaces work with the community and

339
00:13:40,410 --> 00:13:41,899
then if it sticks and it has value

340
00:13:41,899 --> 00:13:44,640
donate it to a standard later then of

341
00:13:44,640 --> 00:13:46,560
course the facto standards interfaces

342
00:13:46,560 --> 00:13:48,050
that are there in communities embrace

343
00:13:48,050 --> 00:13:52,560
them so I want to I'll pick up the pace

344
00:13:52,560 --> 00:13:55,860
because I want to give a 9:30 hand off

345
00:13:55,860 --> 00:14:04,200
to the exciting security talk so again

346
00:14:04,200 --> 00:14:06,029
here's sort of an action what I've been

347
00:14:06,029 --> 00:14:08,310
talking about here you know again FSP

348
00:14:08,310 --> 00:14:09,660
where we can accommodate these many

349
00:14:09,660 --> 00:14:11,310
communities having this well-defined

350
00:14:11,310 --> 00:14:14,100
interface this min platform where we

351
00:14:14,100 --> 00:14:16,560
open sourced the platform code and if

352
00:14:16,560 --> 00:14:21,080
you have coreboot UDK to full stack

353
00:14:21,080 --> 00:14:24,959
Intel slim bootloader you boot a nice

354
00:14:24,959 --> 00:14:28,920
way to sort of snap it in and then again

355
00:14:28,920 --> 00:14:31,380
sort of our evolution here have the

356
00:14:31,380 --> 00:14:34,110
binary blobs at the bottom open source

357
00:14:34,110 --> 00:14:36,930
platform code and then on the FSP the

358
00:14:36,930 --> 00:14:39,390
one thing I wanted to share is we're

359
00:14:39,390 --> 00:14:42,600
trying to make it such that FSP is easy

360
00:14:42,600 --> 00:14:44,970
to use but both the e decays to solution

361
00:14:44,970 --> 00:14:48,050
and the coreboot so coreboot folks use

362
00:14:48,050 --> 00:14:52,680
the FSP api is we call it api mode but

363
00:14:52,680 --> 00:14:55,470
for the e dk2 there's a lot of sort of

364
00:14:55,470 --> 00:14:57,480
wrappers that have to be written to use

365
00:14:57,480 --> 00:15:00,930
those api's so we're evolving FSP for

366
00:15:00,930 --> 00:15:02,670
something we call dispatch mode where it

367
00:15:02,670 --> 00:15:05,100
just looks like a firmware volume so we

368
00:15:05,100 --> 00:15:06,510
really won't have to make this strong

369
00:15:06,510 --> 00:15:09,060
distinction between FS PS used by some

370
00:15:09,060 --> 00:15:11,370
community firm or volumes by others I

371
00:15:11,370 --> 00:15:13,380
know the Linux boot folks are using the

372
00:15:13,380 --> 00:15:16,050
P IFE let's make it a first-class

373
00:15:16,050 --> 00:15:18,390
citizens that you can just use FES and

374
00:15:18,390 --> 00:15:21,810
one mode of an EFI can be FSB but you

375
00:15:21,810 --> 00:15:24,300
can use FES also for these alternatives

376
00:15:24,300 --> 00:15:26,760
so we're trying to sort of make it such

377
00:15:26,760 --> 00:15:29,640
that you don't have to say FSP or binary

378
00:15:29,640 --> 00:15:30,449
Effie's

379
00:15:30,449 --> 00:15:35,100
they're one in the same and to that end

380
00:15:35,100 --> 00:15:37,170
we've been working with a lot of you

381
00:15:37,170 --> 00:15:40,650
folks in Open Compute listening so

382
00:15:40,650 --> 00:15:42,690
there's an open system firmware so a lot

383
00:15:42,690 --> 00:15:44,840
of the things we've done we've sort of

384
00:15:44,840 --> 00:15:47,430
you know within Intel we have one view

385
00:15:47,430 --> 00:15:49,440
you know we build that stack we validate

386
00:15:49,440 --> 00:15:51,690
our hardware but we don't build a lot of

387
00:15:51,690 --> 00:15:54,990
end products at scale and so OSF is a

388
00:15:54,990 --> 00:15:57,200
great place to work with Ron Trammell

389
00:15:57,200 --> 00:15:59,850
SCI and others from the cloud vendors

390
00:15:59,850 --> 00:16:02,240
security companies and really listen to

391
00:16:02,240 --> 00:16:05,370
some priorities and some views on what

392
00:16:05,370 --> 00:16:07,500
we could do better so I think events

393
00:16:07,500 --> 00:16:08,970
like this are great would love to have

394
00:16:08,970 --> 00:16:10,500
similar discussions but we're really

395
00:16:10,500 --> 00:16:12,180
trying to reach out to these venues

396
00:16:12,180 --> 00:16:14,640
where not so much where we can sort of

397
00:16:14,640 --> 00:16:17,220
sell what we're doing but sort of listen

398
00:16:17,220 --> 00:16:19,020
such that are we making the right

399
00:16:19,020 --> 00:16:22,650
investments in our time and energy and

400
00:16:22,650 --> 00:16:25,680
then we have the FSP binaries the open

401
00:16:25,680 --> 00:16:29,640
source code etc and want to give a

402
00:16:29,640 --> 00:16:33,150
couple of examples in the market so you

403
00:16:33,150 --> 00:16:34,800
know one of the big areas we're openness

404
00:16:34,800 --> 00:16:37,230
it's been a little tough are sort of our

405
00:16:37,230 --> 00:16:40,080
xeon core base servers so last march we

406
00:16:40,080 --> 00:16:43,050
did open up a one of these men platforms

407
00:16:43,050 --> 00:16:47,160
on mount olympus and on that we're

408
00:16:47,160 --> 00:16:49,620
really not claiming we have the ultimate

409
00:16:49,620 --> 00:16:51,450
you know cloud solution but we now have

410
00:16:51,450 --> 00:16:53,240
a baseline out there that we can iterate

411
00:16:53,240 --> 00:16:56,660
you know open up more of the binary

412
00:16:56,660 --> 00:16:59,580
provide more of the more platform ports

413
00:16:59,580 --> 00:17:01,340
and then the other thing we've

414
00:17:01,340 --> 00:17:03,810
definitely listened to this community is

415
00:17:03,810 --> 00:17:07,380
difficulties with using FSB so a lot of

416
00:17:07,380 --> 00:17:10,380
folks today and sort of the existing PC

417
00:17:10,380 --> 00:17:13,199
ecosystem get a lot of this code you

418
00:17:13,199 --> 00:17:15,420
know directly and they don't really

419
00:17:15,420 --> 00:17:17,400
complain about issues because they get

420
00:17:17,400 --> 00:17:20,520
the full stack but if you're community

421
00:17:20,520 --> 00:17:22,109
based development and you don't sign the

422
00:17:22,109 --> 00:17:25,890
50 NDA's using FSP wasn't so easy so we

423
00:17:25,890 --> 00:17:27,689
moved away working with a lot of our

424
00:17:27,689 --> 00:17:31,100
teams at Intel from click click-throughs

425
00:17:31,100 --> 00:17:34,110
2 licenses next to the file but then we

426
00:17:34,110 --> 00:17:36,780
heard you know some of the terms the

427
00:17:36,780 --> 00:17:39,660
license were pretty tough so we opened

428
00:17:39,660 --> 00:17:41,820
the license up so it's really you can do

429
00:17:41,820 --> 00:17:43,710
what you want with it you can take the

430
00:17:43,710 --> 00:17:45,960
blobs and put it in your own repo and I

431
00:17:45,960 --> 00:17:47,490
really want to thank this community and

432
00:17:47,490 --> 00:17:48,870
the feedback you've given Intel

433
00:17:48,870 --> 00:17:51,090
that was really helped us make the case

434
00:17:51,090 --> 00:17:53,790
that this had value and again this

435
00:17:53,790 --> 00:17:56,190
didn't really you know change the world

436
00:17:56,190 --> 00:17:59,220
you know as the phoronix article said at

437
00:17:59,220 --> 00:18:01,140
the end it's not as good as open-source

438
00:18:01,140 --> 00:18:03,030
but it does show that we're listening

439
00:18:03,030 --> 00:18:06,360
and we're trying to get there and with

440
00:18:06,360 --> 00:18:08,309
that trying to get there our challenge

441
00:18:08,309 --> 00:18:09,930
is you know freeing up some of the tools

442
00:18:09,930 --> 00:18:12,540
our silicon code we've heard the message

443
00:18:12,540 --> 00:18:14,700
loud and clear on documentation

444
00:18:14,700 --> 00:18:16,770
you know chatted with Trammell a little

445
00:18:16,770 --> 00:18:17,970
that it would have been great at the end

446
00:18:17,970 --> 00:18:19,830
of my talk I could say here's a github

447
00:18:19,830 --> 00:18:21,480
link where all these Doc's you're asking

448
00:18:21,480 --> 00:18:24,600
for don't have them it's it takes a

449
00:18:24,600 --> 00:18:27,510
while but we're listening debug if we

450
00:18:27,510 --> 00:18:29,280
give you a binary it needs to be easy to

451
00:18:29,280 --> 00:18:29,550
use

452
00:18:29,550 --> 00:18:31,380
or else again we're not hitting that

453
00:18:31,380 --> 00:18:34,470
precept of simplicity and then the rest

454
00:18:34,470 --> 00:18:37,920
of the platform don't say if we even get

455
00:18:37,920 --> 00:18:39,720
everything open on the host firmware and

456
00:18:39,720 --> 00:18:42,780
the journeys not done so really looking

457
00:18:42,780 --> 00:18:45,120
at all of the reprogrammable microbes in

458
00:18:45,120 --> 00:18:47,280
the platform and trying to have this

459
00:18:47,280 --> 00:18:49,440
precept of openness simplicity and

460
00:18:49,440 --> 00:18:52,770
security top of mind so it's on our

461
00:18:52,770 --> 00:18:55,620
radar on the on the books there's that

462
00:18:55,620 --> 00:18:57,540
whole matrix of urgent and important I

463
00:18:57,540 --> 00:18:59,970
think all of these are important but I'd

464
00:18:59,970 --> 00:19:01,440
really like to hear from folks this week

465
00:19:01,440 --> 00:19:03,660
on what's urgent I what's blocking your

466
00:19:03,660 --> 00:19:07,500
your getting your job done and will take

467
00:19:07,500 --> 00:19:09,510
the action item as we say it Intel or

468
00:19:09,510 --> 00:19:12,900
action requests AR but you can give me

469
00:19:12,900 --> 00:19:16,320
an AR here and sort of tine it up again

470
00:19:16,320 --> 00:19:18,600
this isn't an EFI talk this is really a

471
00:19:18,600 --> 00:19:21,450
community talk and I think all of these

472
00:19:21,450 --> 00:19:23,550
are first-class citizens and we want if

473
00:19:23,550 --> 00:19:25,620
you're in my perspective as an Intel

474
00:19:25,620 --> 00:19:27,630
employee want it to be easy to use Intel

475
00:19:27,630 --> 00:19:30,420
I think all these are great and have

476
00:19:30,420 --> 00:19:33,720
business value and so again want to work

477
00:19:33,720 --> 00:19:36,240
with you folks and openness

478
00:19:36,240 --> 00:19:38,760
you know if to me it's an arc I sort of

479
00:19:38,760 --> 00:19:40,500
put this page in there a lot to remind

480
00:19:40,500 --> 00:19:42,270
me this is we're trying to go and

481
00:19:42,270 --> 00:19:45,840
haven't quite got there yet and again

482
00:19:45,840 --> 00:19:49,110
keep it simple be open and sort of

483
00:19:49,110 --> 00:19:52,020
broaden our approach for security but I

484
00:19:52,020 --> 00:19:53,520
didn't really spend so much time on

485
00:19:53,520 --> 00:19:58,020
security because I think we have sort of

486
00:19:58,020 --> 00:19:59,880
one of the world's experts here to give

487
00:19:59,880 --> 00:20:02,140
the second half of the keynote

488
00:20:02,140 --> 00:20:05,950
and on that point I'd really like to my

489
00:20:05,950 --> 00:20:08,950
honor to introduce Trammell Hudson was

490
00:20:08,950 --> 00:20:10,900
going to talk about firmware security

491
00:20:10,900 --> 00:20:13,060
and do that topic more justice than I

492
00:20:13,060 --> 00:20:16,180
could have ever hoped and with that I'd

493
00:20:16,180 --> 00:20:17,710
like to thank you folks

494
00:20:17,710 --> 00:20:22,660
[Applause]

495
00:20:22,660 --> 00:20:29,549
[Music]

