1
00:00:00,000 --> 00:00:04,160
[Music]

2
00:00:04,160 --> 00:00:07,680
so next up we have Samuel Mendoza Jonas

3
00:00:07,680 --> 00:00:11,550
who will be talking about how the last

4
00:00:11,550 --> 00:00:15,890
four years with petit petit boug have

5
00:00:15,890 --> 00:00:22,710
left a positive a positive feedback at

6
00:00:22,710 --> 00:00:24,900
IBM power systems right that's right

7
00:00:24,900 --> 00:00:28,080
okay so give him a Walmart welcome and a

8
00:00:28,080 --> 00:00:31,970
round of applause for Samuel

9
00:00:34,989 --> 00:00:37,820
thank you very much um miss you guys can

10
00:00:37,820 --> 00:00:40,909
hear me as I said just a quick bit about

11
00:00:40,909 --> 00:00:43,850
Who I am I'm a same obviously I work for

12
00:00:43,850 --> 00:00:46,489
IBM in Australia and trust me I am

13
00:00:46,489 --> 00:00:48,289
filling every single one of the 36 hours

14
00:00:48,289 --> 00:00:50,030
to get here

15
00:00:50,030 --> 00:00:52,729
I work in what's called the Oz labs team

16
00:00:52,729 --> 00:00:54,199
which is part of the league's Technology

17
00:00:54,199 --> 00:00:57,019
Center and a lot of our work is getting

18
00:00:57,019 --> 00:00:59,059
Linux and stuff like that working on the

19
00:00:59,059 --> 00:01:00,920
power architecture so now we're gonna

20
00:01:00,920 --> 00:01:03,289
bring up that kind of thing I'm an opal

21
00:01:03,289 --> 00:01:05,000
software engineer which is the term I

22
00:01:05,000 --> 00:01:07,009
will explain a bit later and I'm the

23
00:01:07,009 --> 00:01:10,580
maintainer of the papery project so what

24
00:01:10,580 --> 00:01:13,250
is pedi boot though when I started about

25
00:01:13,250 --> 00:01:15,170
four or five years ago I I had no idea

26
00:01:15,170 --> 00:01:18,530
at the time and if you googled for it

27
00:01:18,530 --> 00:01:20,990
the first is all you got was actually a

28
00:01:20,990 --> 00:01:23,209
blog post by Jeremy Kerr for a boot

29
00:01:23,209 --> 00:01:25,940
loader for the PlayStation 3 which is

30
00:01:25,940 --> 00:01:28,520
cool but the only PlayStation sir we had

31
00:01:28,520 --> 00:01:29,750
in the office was in at least five

32
00:01:29,750 --> 00:01:32,569
different pieces and did not work so why

33
00:01:32,569 --> 00:01:38,959
do we care about it so around this time

34
00:01:38,959 --> 00:01:41,269
IBM's gearing up for its new power eight

35
00:01:41,269 --> 00:01:44,810
processor line as well something else

36
00:01:44,810 --> 00:01:49,340
new traditionally most power service our

37
00:01:49,340 --> 00:01:51,530
machines especially servers run

38
00:01:51,530 --> 00:01:52,970
everything under something called power

39
00:01:52,970 --> 00:01:56,060
vm where your legs for example it

40
00:01:56,060 --> 00:01:57,289
doesn't run during the hard way

41
00:01:57,289 --> 00:01:59,000
everything is technically a virtual

42
00:01:59,000 --> 00:02:02,720
machine to put it very simply but with

43
00:02:02,720 --> 00:02:04,879
power eight IBM introduced the concept

44
00:02:04,879 --> 00:02:08,389
of open power third line of servers that

45
00:02:08,389 --> 00:02:10,509
would run Linux directly on the hardware

46
00:02:10,509 --> 00:02:12,769
which is great for fairly obvious

47
00:02:12,769 --> 00:02:14,470
reasons more direct control the hardware

48
00:02:14,470 --> 00:02:17,420
enables us to use technology such as KVM

49
00:02:17,420 --> 00:02:19,610
for virtualization that kind of thing

50
00:02:19,610 --> 00:02:21,980
but the big draw card especially was

51
00:02:21,980 --> 00:02:24,200
that this was a completely open source

52
00:02:24,200 --> 00:02:31,310
firmware stack if they were go okay very

53
00:02:31,310 --> 00:02:32,959
simple diagram here just to kind of

54
00:02:32,959 --> 00:02:34,580
explain the differences though it's the

55
00:02:34,580 --> 00:02:36,560
left hand side we have roughly what the

56
00:02:36,560 --> 00:02:40,220
old stack was SBE is self quit engine

57
00:02:40,220 --> 00:02:43,940
and host boot is a fairly large layer of

58
00:02:43,940 --> 00:02:45,590
the firmware stack which does early

59
00:02:45,590 --> 00:02:47,070
things like

60
00:02:47,070 --> 00:02:49,620
Scipio set up memorized initialization

61
00:02:49,620 --> 00:02:50,370
and that kind of thing

62
00:02:50,370 --> 00:02:51,900
and then you're straight into this power

63
00:02:51,900 --> 00:02:54,390
of um hypervisor kind of thing which

64
00:02:54,390 --> 00:02:56,760
then goes on to run these logical

65
00:02:56,760 --> 00:02:57,840
partitions is what they're called in

66
00:02:57,840 --> 00:02:59,400
that particular context but essentially

67
00:02:59,400 --> 00:03:02,490
a virtual machines and this new stack

68
00:03:02,490 --> 00:03:05,460
the open power stack same lot of things

69
00:03:05,460 --> 00:03:07,860
that a now become open source that into

70
00:03:07,860 --> 00:03:10,500
what we call ski boot which is a small

71
00:03:10,500 --> 00:03:13,080
layer which essentially does a PC I set

72
00:03:13,080 --> 00:03:14,730
our peripheral setup consoles out that

73
00:03:14,730 --> 00:03:16,710
kind of thing and then we want to go

74
00:03:16,710 --> 00:03:18,810
directly into Linux but we don't really

75
00:03:18,810 --> 00:03:21,030
have a bootloader that would that we

76
00:03:21,030 --> 00:03:22,350
could use already that transfers so we

77
00:03:22,350 --> 00:03:25,110
need something new and we can't use any

78
00:03:25,110 --> 00:03:28,220
other thing so what are we doing

79
00:03:28,220 --> 00:03:32,130
thus penny boot if you boot up an open

80
00:03:32,130 --> 00:03:33,720
pal server this unless something's gone

81
00:03:33,720 --> 00:03:35,490
horribly wrong this is what you should

82
00:03:35,490 --> 00:03:40,020
usually say the first time Penta boot is

83
00:03:40,020 --> 00:03:41,550
an open power specific or anything

84
00:03:41,550 --> 00:03:43,500
there's nothing inherently power

85
00:03:43,500 --> 00:03:46,410
specific but um and you could even build

86
00:03:46,410 --> 00:03:50,220
this as UEFI palette if you want but I'm

87
00:03:50,220 --> 00:03:52,290
sorry actually professor and so while

88
00:03:52,290 --> 00:03:53,790
I've been working for Perry before years

89
00:03:53,790 --> 00:03:56,430
roughly lost the title of the talk the

90
00:03:56,430 --> 00:03:58,650
first git commit is back in 2007 and as

91
00:03:58,650 --> 00:03:59,760
a few people here who have used it

92
00:03:59,760 --> 00:04:03,480
before way before I start using it so

93
00:04:03,480 --> 00:04:05,100
it's been out for a while but with its

94
00:04:05,100 --> 00:04:06,780
use on open power servers its use has

95
00:04:06,780 --> 00:04:08,190
really exploded in the past few years

96
00:04:08,190 --> 00:04:09,420
and there's been a lot of changes since

97
00:04:09,420 --> 00:04:14,100
then petty boot is an approach to an

98
00:04:14,100 --> 00:04:16,048
open bootloader that plenty of us by now

99
00:04:16,048 --> 00:04:18,120
especially after this conference we're

100
00:04:18,120 --> 00:04:20,668
very familiar with it's a set of small

101
00:04:20,668 --> 00:04:22,710
user space components in our case mostly

102
00:04:22,710 --> 00:04:28,050
written in C at you find and Britt Linux

103
00:04:28,050 --> 00:04:30,720
images device setup that kind of thing

104
00:04:30,720 --> 00:04:33,480
we use K exec to boot into the next

105
00:04:33,480 --> 00:04:36,210
stage into Linux or your FreeBSD example

106
00:04:36,210 --> 00:04:37,740
example anything actually support to K

107
00:04:37,740 --> 00:04:41,610
exec and then built into a loose curl

108
00:04:41,610 --> 00:04:43,470
you know links client user space which

109
00:04:43,470 --> 00:04:45,750
we build a build root in open power

110
00:04:45,750 --> 00:04:47,880
contacts we call this this image ski

111
00:04:47,880 --> 00:04:49,980
Groot but essentially it's a small way

112
00:04:49,980 --> 00:04:51,510
of changes on top of build root and

113
00:04:51,510 --> 00:04:53,490
anyone could build this really and we

114
00:04:53,490 --> 00:04:55,110
use a trimmed-down version of kegs at

115
00:04:55,110 --> 00:04:57,570
called kegs egg white which is much much

116
00:04:57,570 --> 00:04:58,950
smaller than the usual kegs at all the

117
00:04:58,950 --> 00:04:59,430
kind of things

118
00:04:59,430 --> 00:05:06,750
folks for us take another very simple

119
00:05:06,750 --> 00:05:08,460
slide just to kind of give a comparison

120
00:05:08,460 --> 00:05:11,730
to where we sit close to x86 since early

121
00:05:11,730 --> 00:05:13,590
magic xa6 and they enjoy know what you

122
00:05:13,590 --> 00:05:15,480
if I layer and you say grub bootloader

123
00:05:15,480 --> 00:05:18,960
and then dress similar kind of thing

124
00:05:18,960 --> 00:05:20,460
here except we have our open firmware

125
00:05:20,460 --> 00:05:22,380
stack and then petty boot is kind of

126
00:05:22,380 --> 00:05:23,310
occupy like you're playing the same

127
00:05:23,310 --> 00:05:25,410
space to say your grub or if you think a

128
00:05:25,410 --> 00:05:27,650
little boot in your huge kind of area

129
00:05:27,650 --> 00:05:30,810
kind of thing and then ski boot boot bit

130
00:05:30,810 --> 00:05:32,220
of a greater and well the next video if

131
00:05:32,220 --> 00:05:38,850
I change like a pet a bit itself the

132
00:05:38,850 --> 00:05:40,470
tools are made up of two core components

133
00:05:40,470 --> 00:05:42,930
we have this PB discover server process

134
00:05:42,930 --> 00:05:47,040
which manage devices finds and Boots

135
00:05:47,040 --> 00:05:48,570
boot targets and does all the heavy

136
00:05:48,570 --> 00:05:50,990
lifting for device manager kind of thing

137
00:05:50,990 --> 00:05:53,580
it will find food targets from the disk

138
00:05:53,580 --> 00:05:55,950
from the network or manually setting up

139
00:05:55,950 --> 00:05:57,540
things and what-have-you inhibitor

140
00:05:57,540 --> 00:05:59,910
Kazakh then on each interface we have

141
00:05:59,910 --> 00:06:03,210
what's called pedi boot NC which is what

142
00:06:03,210 --> 00:06:05,100
you saw originally a bunch before which

143
00:06:05,100 --> 00:06:06,300
is the anchors is fronting everyone

144
00:06:06,300 --> 00:06:08,070
during every interface so your VJ

145
00:06:08,070 --> 00:06:09,690
display your server console your I for

146
00:06:09,690 --> 00:06:11,700
my console that kind of thing and then a

147
00:06:11,700 --> 00:06:13,410
few small helpers to setup the console

148
00:06:13,410 --> 00:06:15,660
itself the network some device true

149
00:06:15,660 --> 00:06:17,040
magic we do on power like kinda thing

150
00:06:17,040 --> 00:06:18,960
when general the rest is build route was

151
00:06:18,960 --> 00:06:24,510
busy box at all generic tools at its

152
00:06:24,510 --> 00:06:27,090
core petit boug essentially mounts all

153
00:06:27,090 --> 00:06:29,370
devices having a system and searches a

154
00:06:29,370 --> 00:06:32,220
variety of known locations for low

155
00:06:32,220 --> 00:06:34,860
configurations from stuff like grab yeah

156
00:06:34,860 --> 00:06:36,630
bouquet boot a few other options like

157
00:06:36,630 --> 00:06:40,770
that and it passes these are presenting

158
00:06:40,770 --> 00:06:44,940
to the user this is an example this is

159
00:06:44,940 --> 00:06:47,130
some from a grub config it's piles it

160
00:06:47,130 --> 00:06:48,990
all the important bits and you can

161
00:06:48,990 --> 00:06:50,310
modify it if you want but Center that's

162
00:06:50,310 --> 00:06:51,810
what it would use to then K exec this

163
00:06:51,810 --> 00:06:55,160
device or this boot target sorry

164
00:06:55,160 --> 00:06:56,940
pedigreed else have its own simple

165
00:06:56,940 --> 00:06:58,530
format as well but the idea here is that

166
00:06:58,530 --> 00:07:00,150
we don't need to change anything in the

167
00:07:00,150 --> 00:07:01,350
distro we just inherit the

168
00:07:01,350 --> 00:07:02,730
configurations that people are already

169
00:07:02,730 --> 00:07:04,710
using in there the next istros

170
00:07:04,710 --> 00:07:09,450
and now it's all good to go net boots

171
00:07:09,450 --> 00:07:12,120
also pretty straightforward as well by

172
00:07:12,120 --> 00:07:13,169
default

173
00:07:13,169 --> 00:07:14,789
that's configured differently that it

174
00:07:14,789 --> 00:07:16,169
will disappear an instant of face

175
00:07:16,169 --> 00:07:17,729
searching for the configurations via

176
00:07:17,729 --> 00:07:20,729
Pixy Linux and lure benign pixie support

177
00:07:20,729 --> 00:07:24,349
but pretty marriages at this stage

178
00:07:24,349 --> 00:07:26,669
there's no pixie second stage required

179
00:07:26,669 --> 00:07:28,319
like some other big lasers thing um like

180
00:07:28,319 --> 00:07:29,639
just like something bit less I've seen

181
00:07:29,639 --> 00:07:31,620
today because we're already brightening

182
00:07:31,620 --> 00:07:33,060
Linux with kegs a Kunis British Tigers

183
00:07:33,060 --> 00:07:35,030
directly we don't need any second stage

184
00:07:35,030 --> 00:07:37,259
petit boug does the passing and the

185
00:07:37,259 --> 00:07:39,389
booting but everything else has general

186
00:07:39,389 --> 00:07:41,610
busybox tools do the DCP configuration

187
00:07:41,610 --> 00:07:44,490
all that kind of thing it's also a

188
00:07:44,490 --> 00:07:46,770
little bonus mode we can have where some

189
00:07:46,770 --> 00:07:48,270
people were like oh I want to set up a

190
00:07:48,270 --> 00:07:50,400
machine with a static configuration but

191
00:07:50,400 --> 00:07:51,659
I still want to call them after netboot

192
00:07:51,659 --> 00:07:53,370
so we have this thing where you can set

193
00:07:53,370 --> 00:07:54,960
your interface wherever you want provide

194
00:07:54,960 --> 00:07:56,610
a path we can search for and we'll just

195
00:07:56,610 --> 00:07:57,810
do not what because he pick something

196
00:07:57,810 --> 00:08:03,449
searching on that path there's a number

197
00:08:03,449 --> 00:08:05,370
of ways to configure one my booting

198
00:08:05,370 --> 00:08:07,800
behavior your normal stuff like boot

199
00:08:07,800 --> 00:08:10,110
device priorities timeouts IPMI

200
00:08:10,110 --> 00:08:11,940
overrides which is something usually

201
00:08:11,940 --> 00:08:13,650
seen more server deployment kind of

202
00:08:13,650 --> 00:08:16,349
thing for remotely configuring what you

203
00:08:16,349 --> 00:08:18,419
want to boot this is fairly fine-grained

204
00:08:18,419 --> 00:08:21,630
you can filter by Jen joke device type

205
00:08:21,630 --> 00:08:24,509
so I can any USB device or certain

206
00:08:24,509 --> 00:08:26,880
petitions or even individual LVM volumes

207
00:08:26,880 --> 00:08:35,339
if you can find on the system and so in

208
00:08:35,339 --> 00:08:36,719
a way Peter boots quite submitted some

209
00:08:36,719 --> 00:08:38,070
things already seen the past two days

210
00:08:38,070 --> 00:08:41,130
like your route and system booting links

211
00:08:41,130 --> 00:08:43,380
boot all kind of thing but if I had to

212
00:08:43,380 --> 00:08:45,779
kind of say what why our approach is

213
00:08:45,779 --> 00:08:46,140
different

214
00:08:46,140 --> 00:08:48,690
I'd say it's unlikely now since in that

215
00:08:48,690 --> 00:08:51,149
um other pair of ladies food are trying

216
00:08:51,149 --> 00:08:53,550
to open up this closed platform and give

217
00:08:53,550 --> 00:08:55,709
you options to do what you want on those

218
00:08:55,709 --> 00:08:56,279
platforms

219
00:08:56,279 --> 00:08:57,690
whereas very lucky enough that platform

220
00:08:57,690 --> 00:09:01,140
is actually already open and we don't

221
00:09:01,140 --> 00:09:02,310
need to descend at the time there is

222
00:09:02,310 --> 00:09:03,060
they're going some more time on

223
00:09:03,060 --> 00:09:05,730
providing a solid boot loader interface

224
00:09:05,730 --> 00:09:08,970
and tools of configuration not only for

225
00:09:08,970 --> 00:09:12,209
individual users but also for larger

226
00:09:12,209 --> 00:09:12,690
customers

227
00:09:12,690 --> 00:09:14,579
ODM who are saying I'm buying a thousand

228
00:09:14,579 --> 00:09:16,140
of these how can fit into my

229
00:09:16,140 --> 00:09:17,130
infrastructure they kind of think

230
00:09:17,130 --> 00:09:18,720
backing short works transparently easy

231
00:09:18,720 --> 00:09:21,740
and like I think

232
00:09:22,140 --> 00:09:24,570
so I said things got more serious around

233
00:09:24,570 --> 00:09:26,400
2014 when we started doing some open

234
00:09:26,400 --> 00:09:28,920
power and what has peppermint uses since

235
00:09:28,920 --> 00:09:34,620
then so I mentioned the open power line

236
00:09:34,620 --> 00:09:38,310
of service in 2014 so all every open

237
00:09:38,310 --> 00:09:41,820
power power 8 machine is running peda

238
00:09:41,820 --> 00:09:44,250
boot as its bootloader first on the

239
00:09:44,250 --> 00:09:47,910
power aid s 8 1 to L which is this which

240
00:09:47,910 --> 00:09:50,090
is technically not open power but runs

241
00:09:50,090 --> 00:09:53,220
lower ones to opal stack and then on to

242
00:09:53,220 --> 00:09:55,320
the rest of power line up like the s8

243
00:09:55,320 --> 00:09:58,350
Tran to LC series you might know these

244
00:09:58,350 --> 00:10:00,410
as your Ming seasoned your Firestone's

245
00:10:00,410 --> 00:10:05,070
double power series machine this also

246
00:10:05,070 --> 00:10:06,930
includes part machines like Rackspace's

247
00:10:06,930 --> 00:10:09,000
power I'd barrel line which is the Open

248
00:10:09,000 --> 00:10:12,300
Compute server as well as for example

249
00:10:12,300 --> 00:10:13,770
Super Micro have their Briggs's

250
00:10:13,770 --> 00:10:14,940
Stratton's here as a service they were

251
00:10:14,940 --> 00:10:18,540
on opal all the open power sectors are

252
00:10:18,540 --> 00:10:22,830
saying this year IBM launched its power

253
00:10:22,830 --> 00:10:25,080
9 series of chips in particular though

254
00:10:25,080 --> 00:10:27,780
with the spoon in Boston machines also

255
00:10:27,780 --> 00:10:29,370
known as the AC 922 if you've heard of

256
00:10:29,370 --> 00:10:31,620
that these all open power so costs are

257
00:10:31,620 --> 00:10:33,060
in Peterborough as well and you've

258
00:10:33,060 --> 00:10:34,020
probably heard that these are the

259
00:10:34,020 --> 00:10:35,850
computing storage nodes on summer in

260
00:10:35,850 --> 00:10:39,480
ceará which the United States - new

261
00:10:39,480 --> 00:10:40,980
supercomputers that were took out number

262
00:10:40,980 --> 00:10:44,510
one number three on top 500 recently

263
00:10:44,510 --> 00:10:47,490
getting away from huge service stuff the

264
00:10:47,490 --> 00:10:49,380
towels - from app to technologies is

265
00:10:49,380 --> 00:10:51,600
also a open power machine running a

266
00:10:51,600 --> 00:10:54,990
power 9 but much but much more promotes

267
00:10:54,990 --> 00:10:56,340
our own example right now having in a

268
00:10:56,340 --> 00:10:59,000
desktop workstation kind of form factor

269
00:10:59,000 --> 00:11:01,050
I'm pretty excited we're gonna get these

270
00:11:01,050 --> 00:11:02,640
on these in the lab soon hopefully from

271
00:11:02,640 --> 00:11:05,100
getting shipped I know some people here

272
00:11:05,100 --> 00:11:06,240
are trying to get their hands and knees

273
00:11:06,240 --> 00:11:08,130
if you have one come talk to me cuz I'm

274
00:11:08,130 --> 00:11:09,450
super interests know what they like to

275
00:11:09,450 --> 00:11:11,400
use and how power works on more desktop

276
00:11:11,400 --> 00:11:12,930
sense rather than a giant server

277
00:11:12,930 --> 00:11:17,880
deployment and I hate cool things from

278
00:11:17,880 --> 00:11:20,010
elsewhere as well there's a company

279
00:11:20,010 --> 00:11:23,130
called open gear they do network network

280
00:11:23,130 --> 00:11:23,610
gear

281
00:11:23,610 --> 00:11:25,530
infrastructure that kind of thing based

282
00:11:25,530 --> 00:11:28,650
on x86 and they have been using pay to

283
00:11:28,650 --> 00:11:29,850
boot as the bootloader for their

284
00:11:29,850 --> 00:11:31,380
networks their network gifts which is a

285
00:11:31,380 --> 00:11:33,510
kind of thing and everything which is

286
00:11:33,510 --> 00:11:34,440
cool just because I'm different

287
00:11:34,440 --> 00:11:35,070
different

288
00:11:35,070 --> 00:11:36,630
architecture completely but it's also

289
00:11:36,630 --> 00:11:38,009
called serving extremely strong

290
00:11:38,009 --> 00:11:40,620
contributors to the period project

291
00:11:40,620 --> 00:11:43,170
making making changes are some questions

292
00:11:43,170 --> 00:11:44,160
everything they're really active on the

293
00:11:44,160 --> 00:11:47,339
mailing list there's a more in similar

294
00:11:47,339 --> 00:11:48,600
ways they're more interested in running

295
00:11:48,600 --> 00:11:51,060
it on arm 64 and supporting our EFI

296
00:11:51,060 --> 00:11:52,920
variables that kind of thing I'm not

297
00:11:52,920 --> 00:11:54,600
sure exactly what this people using it

298
00:11:54,600 --> 00:11:56,790
on but they've been very involved in the

299
00:11:56,790 --> 00:11:58,529
mailing list and tutoring patches to

300
00:11:58,529 --> 00:11:59,639
make it work into a generic since

301
00:11:59,639 --> 00:12:03,089
they're another cool example for us

302
00:12:03,089 --> 00:12:05,100
personally and open power is that

303
00:12:05,100 --> 00:12:08,220
because it's a small links image fairly

304
00:12:08,220 --> 00:12:09,810
easily runs and our simulators when

305
00:12:09,810 --> 00:12:11,550
we're doing chip bring up and that kind

306
00:12:11,550 --> 00:12:12,000
of thing

307
00:12:12,000 --> 00:12:13,769
petty boot kind of ends up being one of

308
00:12:13,769 --> 00:12:15,449
our biggest debug tools if you get to

309
00:12:15,449 --> 00:12:17,069
petty boot you've done pretty well to

310
00:12:17,069 --> 00:12:21,690
get a new chip working so why did we

311
00:12:21,690 --> 00:12:23,250
double down on petty boot though and

312
00:12:23,250 --> 00:12:24,600
make it our main bootloader for open

313
00:12:24,600 --> 00:12:27,000
power there's a few reasons that come

314
00:12:27,000 --> 00:12:30,000
into play for us number one by far is

315
00:12:30,000 --> 00:12:31,670
that it is just Linux underneath it all

316
00:12:31,670 --> 00:12:33,930
not only doesn't mean using a lot of

317
00:12:33,930 --> 00:12:36,000
xisting tools was a lot of overlap with

318
00:12:36,000 --> 00:12:37,680
what our team does is making Linux work

319
00:12:37,680 --> 00:12:40,050
on power enabling few chips that kind of

320
00:12:40,050 --> 00:12:41,670
thing so we save a lot of time doing

321
00:12:41,670 --> 00:12:44,220
both at the same time especially

322
00:12:44,220 --> 00:12:47,420
considering device drivers

323
00:12:47,420 --> 00:12:49,769
aside from platform support there's a

324
00:12:49,769 --> 00:12:51,750
bunch of disk network sometimes video

325
00:12:51,750 --> 00:12:53,279
drivers that we need to have in our

326
00:12:53,279 --> 00:12:56,370
bootloader stage as you saw before the

327
00:12:56,370 --> 00:12:57,600
old stack was completely closed source

328
00:12:57,600 --> 00:13:00,779
only so myself over from there when do

329
00:13:00,779 --> 00:13:02,130
you may want it no one the team really

330
00:13:02,130 --> 00:13:04,170
wants to rewrite all the open firmware

331
00:13:04,170 --> 00:13:06,300
fourth drivers and if you're considering

332
00:13:06,300 --> 00:13:09,000
gear 5 generic drivers even if they do

333
00:13:09,000 --> 00:13:10,440
exist they don't tend to run on power

334
00:13:10,440 --> 00:13:14,639
anyway so picking up Linux is way is in

335
00:13:14,639 --> 00:13:17,550
that sense it's open source which goes

336
00:13:17,550 --> 00:13:19,110
very well with the open firmware

337
00:13:19,110 --> 00:13:21,990
ID obviously but not only that it's very

338
00:13:21,990 --> 00:13:24,870
easily to extend both individuals and

339
00:13:24,870 --> 00:13:26,459
for when we're talking about extending

340
00:13:26,459 --> 00:13:28,470
it for large audios that kind of stuff

341
00:13:28,470 --> 00:13:30,569
for the machines we're running on we

342
00:13:30,569 --> 00:13:32,069
have generally more complex requirements

343
00:13:32,069 --> 00:13:32,850
than just

344
00:13:32,850 --> 00:13:35,100
Britt this on this disk or ever happens

345
00:13:35,100 --> 00:13:36,959
to be on network so it's important for

346
00:13:36,959 --> 00:13:38,399
us to have a platform we can easily

347
00:13:38,399 --> 00:13:41,880
extend the internal structure of

348
00:13:41,880 --> 00:13:44,699
peteyboo on a programming level is such

349
00:13:44,699 --> 00:13:46,589
this pretty easy to add out to model

350
00:13:46,589 --> 00:13:48,170
platforms and to vary

351
00:13:48,170 --> 00:13:50,120
all those platforms it's great for us

352
00:13:50,120 --> 00:13:51,860
because we have three or four different

353
00:13:51,860 --> 00:13:54,440
variants of a power machine and also

354
00:13:54,440 --> 00:13:55,700
I've already said these people running

355
00:13:55,700 --> 00:14:00,230
on x86 and arm as well it's fairly

356
00:14:00,230 --> 00:14:03,019
intuitive so have a lot of users coming

357
00:14:03,019 --> 00:14:05,000
from a traditional x86 environment they

358
00:14:05,000 --> 00:14:07,279
come into use petty boot and then I have

359
00:14:07,279 --> 00:14:08,870
a few questions to start with but then

360
00:14:08,870 --> 00:14:11,269
generally they don't come back they're

361
00:14:11,269 --> 00:14:12,800
good to go everything's fine we're not

362
00:14:12,800 --> 00:14:14,240
finding too many teething problems with

363
00:14:14,240 --> 00:14:17,630
that and as mentioned before it's a drop

364
00:14:17,630 --> 00:14:19,010
from a placement because we don't have

365
00:14:19,010 --> 00:14:20,870
to tell the destroyers to people using

366
00:14:20,870 --> 00:14:23,360
peteyboo on this new open power platform

367
00:14:23,360 --> 00:14:25,550
it just automatically works which is

368
00:14:25,550 --> 00:14:29,660
great for us so basing your linux off

369
00:14:29,660 --> 00:14:31,000
brig loader has a lot of disadvantages

370
00:14:31,000 --> 00:14:33,410
and some disadvantages but some of the

371
00:14:33,410 --> 00:14:36,589
some of the advantages are as I briefly

372
00:14:36,589 --> 00:14:38,240
mentioned already just a huge amount of

373
00:14:38,240 --> 00:14:39,709
tools infrastructure that already exists

374
00:14:39,709 --> 00:14:41,660
and we don't have to rewrite all

375
00:14:41,660 --> 00:14:44,269
everything with a limited amount of

376
00:14:44,269 --> 00:14:46,850
manpower especially with this because

377
00:14:46,850 --> 00:14:48,350
there's a huge community on this we can

378
00:14:48,350 --> 00:14:50,240
trust that these tools probably work and

379
00:14:50,240 --> 00:14:51,529
even if I don't we're not the only

380
00:14:51,529 --> 00:14:52,940
people trying to fix them so there's a

381
00:14:52,940 --> 00:14:54,320
lot of community support making

382
00:14:54,320 --> 00:14:58,490
everything work we have so this the

383
00:14:58,490 --> 00:15:00,680
spirit layer which is our Linux image is

384
00:15:00,680 --> 00:15:02,990
a thin layer of additions on top of a

385
00:15:02,990 --> 00:15:06,110
normal build root install and even then

386
00:15:06,110 --> 00:15:08,180
most of that's actually in creating our

387
00:15:08,180 --> 00:15:10,370
other family images in a flash format we

388
00:15:10,370 --> 00:15:12,380
can flash on a machine the actual

389
00:15:12,380 --> 00:15:14,000
additions that we have for building pay

390
00:15:14,000 --> 00:15:16,699
to boot tiny especially with the kernel

391
00:15:16,699 --> 00:15:19,310
we are so thin that we run a completely

392
00:15:19,310 --> 00:15:20,990
upstream kernel except for one patch and

393
00:15:20,990 --> 00:15:22,790
that's just to get USB 3 working over

394
00:15:22,790 --> 00:15:26,329
Kay exec to go opportunity to give a

395
00:15:26,329 --> 00:15:27,860
shout-out to build route just because

396
00:15:27,860 --> 00:15:29,000
they are great team to work with and

397
00:15:29,000 --> 00:15:30,920
they use them towards really easy and

398
00:15:30,920 --> 00:15:33,380
they're very interactive in talking

399
00:15:33,380 --> 00:15:34,760
about contributions and are very nice

400
00:15:34,760 --> 00:15:36,199
when we have we contributions that kind

401
00:15:36,199 --> 00:15:41,680
of thing OOP not too early

402
00:15:41,949 --> 00:15:43,940
additionally I said obviously a lot of

403
00:15:43,940 --> 00:15:47,269
overlap with our kernel on Overman but

404
00:15:47,269 --> 00:15:48,470
we also spend a lot of time making sure

405
00:15:48,470 --> 00:15:50,000
that Linux is just nice to use on power

406
00:15:50,000 --> 00:15:51,290
people don't have a lot of transition

407
00:15:51,290 --> 00:15:53,180
pain that kind of thing so using all

408
00:15:53,180 --> 00:15:55,250
these normal Linux tools in our boot

409
00:15:55,250 --> 00:15:57,500
loader is forcing us to spend spend time

410
00:15:57,500 --> 00:16:00,550
making sure everything works nicely

411
00:16:00,600 --> 00:16:02,550
because it is Linux it drops to a real

412
00:16:02,550 --> 00:16:02,970
shell

413
00:16:02,970 --> 00:16:04,649
there's no restricted environment where

414
00:16:04,649 --> 00:16:06,389
you have a dozen commands and you hope

415
00:16:06,389 --> 00:16:08,130
that's enough it's completely linked so

416
00:16:08,130 --> 00:16:09,690
you can drop to a shell do whatever you

417
00:16:09,690 --> 00:16:10,079
want

418
00:16:10,079 --> 00:16:11,670
I've even seen examples of people

419
00:16:11,670 --> 00:16:13,709
especially kindest using the Tallis

420
00:16:13,709 --> 00:16:16,079
machines drop into a shell and entering

421
00:16:16,079 --> 00:16:17,370
at your root and that into the gender

422
00:16:17,370 --> 00:16:18,870
you can store and just installing it

423
00:16:18,870 --> 00:16:20,579
that way and skip the whole installation

424
00:16:20,579 --> 00:16:24,269
process and so I'm not writing all this

425
00:16:24,269 --> 00:16:26,699
from scratch frees up a lot of time to

426
00:16:26,699 --> 00:16:29,339
do new things and used these tools in

427
00:16:29,339 --> 00:16:30,269
new ways

428
00:16:30,269 --> 00:16:31,980
one example is the device have a

429
00:16:31,980 --> 00:16:35,699
snapshot framework pay to boot mounts

430
00:16:35,699 --> 00:16:38,040
everything read-only because generally

431
00:16:38,040 --> 00:16:40,079
were only reading configuration files is

432
00:16:40,079 --> 00:16:43,139
for a few small examples but read-only

433
00:16:43,139 --> 00:16:45,810
is not always read-only for example if

434
00:16:45,810 --> 00:16:47,760
you use shot from machine with the dirty

435
00:16:47,760 --> 00:16:49,769
file system you come back up period

436
00:16:49,769 --> 00:16:51,600
tries to mount that file system does

437
00:16:51,600 --> 00:16:53,699
some recovery those rights that those

438
00:16:53,699 --> 00:16:56,279
fixes the file system fixes are written

439
00:16:56,279 --> 00:16:58,079
back to the disk normal it's totally

440
00:16:58,079 --> 00:16:59,399
fine because you do what you just to be

441
00:16:59,399 --> 00:17:01,829
in a good state but earlier on we were

442
00:17:01,829 --> 00:17:03,660
much more paranoid and saying well what

443
00:17:03,660 --> 00:17:07,410
if a file system drivers got a bug in it

444
00:17:07,410 --> 00:17:09,390
or we messed something up when doing our

445
00:17:09,390 --> 00:17:11,309
passing I kind of thing how do we make

446
00:17:11,309 --> 00:17:13,859
sure that ask the bootloader not

447
00:17:13,859 --> 00:17:16,530
responsible for um just trashing this

448
00:17:16,530 --> 00:17:20,959
whole machine so to do that and so just

449
00:17:20,959 --> 00:17:23,520
drop to the shell and pedobear and road

450
00:17:23,520 --> 00:17:25,829
mount as you can see what we do is for

451
00:17:25,829 --> 00:17:27,630
every device that pebeo would mount

452
00:17:27,630 --> 00:17:29,790
instead of mounting the actual device we

453
00:17:29,790 --> 00:17:31,590
make it in memory snapshot of this using

454
00:17:31,590 --> 00:17:33,510
device mapper and we mount that you can

455
00:17:33,510 --> 00:17:34,950
see you can see these all dev mapper

456
00:17:34,950 --> 00:17:37,590
something the drug meant the actual

457
00:17:37,590 --> 00:17:39,540
device so any rights that do help them

458
00:17:39,540 --> 00:17:42,299
to the device go to the snapshot and you

459
00:17:42,299 --> 00:17:43,590
can sync those back to the real device

460
00:17:43,590 --> 00:17:45,000
if you want to where must be explicit

461
00:17:45,000 --> 00:17:47,460
and in this way we avoid this kind of

462
00:17:47,460 --> 00:17:49,650
problem there's probably only been one

463
00:17:49,650 --> 00:17:51,630
or two times I've seen an issue where

464
00:17:51,630 --> 00:17:53,790
this save saved us from ourselves so

465
00:17:53,790 --> 00:17:55,590
mostly it's making me me and some other

466
00:17:55,590 --> 00:17:57,150
developers sleep better at night but

467
00:17:57,150 --> 00:17:58,559
it's a cool way to have an therefore

468
00:17:58,559 --> 00:18:00,720
pretty pretty zero cost of all things

469
00:18:00,720 --> 00:18:03,990
considered now that we've seen what just

470
00:18:03,990 --> 00:18:05,820
of use is it might need slightly better

471
00:18:05,820 --> 00:18:09,240
UX user design just because people have

472
00:18:09,240 --> 00:18:10,530
now gone to the shell and got it made a

473
00:18:10,530 --> 00:18:11,730
bunch of changes look and nothing

474
00:18:11,730 --> 00:18:13,010
happened like yeah

475
00:18:13,010 --> 00:18:14,090
we stopped you doing that isn't that

476
00:18:14,090 --> 00:18:16,520
great and they don't always agree so

477
00:18:16,520 --> 00:18:18,170
need some way to make it more obvious

478
00:18:18,170 --> 00:18:21,620
we'll be doing this so there are some

479
00:18:21,620 --> 00:18:23,920
disadvantages doing the works its way

480
00:18:23,920 --> 00:18:26,870
there's all these great tools in folks

481
00:18:26,870 --> 00:18:29,360
that we're using and so we now have a

482
00:18:29,360 --> 00:18:30,920
dependency on those tools that are not

483
00:18:30,920 --> 00:18:33,050
owned by us which is fine but they have

484
00:18:33,050 --> 00:18:34,010
their own communities their own

485
00:18:34,010 --> 00:18:35,870
motivations their own their own road

486
00:18:35,870 --> 00:18:39,620
paths for changing stuff and so changes

487
00:18:39,620 --> 00:18:41,600
to these tools come down the pipe way to

488
00:18:41,600 --> 00:18:43,400
beat bugs or incompatibilities or

489
00:18:43,400 --> 00:18:45,470
changes we weren't ready for they could

490
00:18:45,470 --> 00:18:49,340
general a lot of work this is kind of by

491
00:18:49,340 --> 00:18:50,660
design in a sense we're try and state

492
00:18:50,660 --> 00:18:52,280
state upstream as much as possible so

493
00:18:52,280 --> 00:18:53,690
the catch is kind of think early but

494
00:18:53,690 --> 00:18:55,370
does generate a lot of work trying to

495
00:18:55,370 --> 00:18:56,480
call all these tools that we don't

496
00:18:56,480 --> 00:19:01,400
directly control a que exec based

497
00:19:01,400 --> 00:19:04,370
bootloader is a while I do it almost

498
00:19:04,370 --> 00:19:05,720
through time why I put something

499
00:19:05,720 --> 00:19:07,160
hazeicon' was three times a day and

500
00:19:07,160 --> 00:19:09,290
surely he would do here as well it's not

501
00:19:09,290 --> 00:19:11,630
actually probably the most common use

502
00:19:11,630 --> 00:19:12,710
case for what you're doing at build

503
00:19:12,710 --> 00:19:14,720
route and particularly concerning que

504
00:19:14,720 --> 00:19:17,330
exec if I had to guess I'd say the

505
00:19:17,330 --> 00:19:18,710
biggest user of kasich is probably

506
00:19:18,710 --> 00:19:20,810
actually kdump which if you're not

507
00:19:20,810 --> 00:19:23,990
familiar is a tool you can use new links

508
00:19:23,990 --> 00:19:24,560
destroy

509
00:19:24,560 --> 00:19:25,940
where if there's a cash flow for failure

510
00:19:25,940 --> 00:19:28,100
and everything blows up your case they

511
00:19:28,100 --> 00:19:29,690
came to this very limited crash kernel

512
00:19:29,690 --> 00:19:31,370
saves opposite information some Thomas

513
00:19:31,370 --> 00:19:32,540
Eckhardt stuff so you can analyze what

514
00:19:32,540 --> 00:19:35,720
happened the problem with that is most

515
00:19:35,720 --> 00:19:37,910
device drivers when kasich happens are

516
00:19:37,910 --> 00:19:39,860
expecting something like a kdump event

517
00:19:39,860 --> 00:19:43,010
to have curd so they don't really care

518
00:19:43,010 --> 00:19:44,030
what happens after that cuz the

519
00:19:44,030 --> 00:19:45,220
machine's already kind of going down

520
00:19:45,220 --> 00:19:47,570
there's no large care taken to what that

521
00:19:47,570 --> 00:19:49,760
means for a device or the device driver

522
00:19:49,760 --> 00:19:52,040
in particular and historically this has

523
00:19:52,040 --> 00:19:54,050
meant a lot of cases of pressing boot

524
00:19:54,050 --> 00:19:55,790
and the Machine just completely going

525
00:19:55,790 --> 00:19:57,200
down in flames because some device

526
00:19:57,200 --> 00:20:00,920
driver has not handled this event that's

527
00:20:00,920 --> 00:20:03,200
pretty it's a lot better these days you

528
00:20:03,200 --> 00:20:04,910
still occasionally see it carefully if

529
00:20:04,910 --> 00:20:08,390
you try a new device vacays egg and it

530
00:20:08,390 --> 00:20:09,770
doesn't handle and there's some work

531
00:20:09,770 --> 00:20:12,890
there to make sure thing became an even

532
00:20:12,890 --> 00:20:15,560
smaller use case potentially is a kazakh

533
00:20:15,560 --> 00:20:18,770
based bootloader on power a fun bit of

534
00:20:18,770 --> 00:20:20,990
trivia is that power machines can switch

535
00:20:20,990 --> 00:20:22,850
they're in dienes at runtime and they

536
00:20:22,850 --> 00:20:24,340
quite often do

537
00:20:24,340 --> 00:20:26,200
not everyone one is really expecting us

538
00:20:26,200 --> 00:20:28,240
to do that though which is had something

539
00:20:28,240 --> 00:20:29,650
issues especially again considering

540
00:20:29,650 --> 00:20:32,650
Kasich there are some issues where also

541
00:20:32,650 --> 00:20:36,070
not pasta Kasich was issued with a file

542
00:20:36,070 --> 00:20:38,200
system for example where Linux was

543
00:20:38,200 --> 00:20:40,990
running a fast him one mounted uncleanly

544
00:20:40,990 --> 00:20:43,179
machine rebooted came around again so

545
00:20:43,179 --> 00:20:45,190
there's a daily journal and peg boot

546
00:20:45,190 --> 00:20:47,320
mounts it yeah in the opposite Indian

547
00:20:47,320 --> 00:20:49,330
that it was written in and the file

548
00:20:49,330 --> 00:20:52,000
system really cared about that we had to

549
00:20:52,000 --> 00:20:53,049
do some work to figure what the hell

550
00:20:53,049 --> 00:20:56,350
happened another example of kags ik was

551
00:20:56,350 --> 00:20:58,890
when we first times do some open powered

552
00:20:58,890 --> 00:21:00,730
and switching the little endian

553
00:21:00,730 --> 00:21:04,870
is that say if your petty boot layer was

554
00:21:04,870 --> 00:21:07,799
running little endian weird k exec your

555
00:21:07,799 --> 00:21:09,250
cpu 0

556
00:21:09,250 --> 00:21:10,840
what's respected big endian because

557
00:21:10,840 --> 00:21:12,429
that's the architecture default but

558
00:21:12,429 --> 00:21:13,870
where your secondaries were still little

559
00:21:13,870 --> 00:21:15,360
endian going to the next kernel and

560
00:21:15,360 --> 00:21:19,210
complete disaster most at most of that

561
00:21:19,210 --> 00:21:20,380
was the early testing issues but it's

562
00:21:20,380 --> 00:21:22,059
just an example of what you see when

563
00:21:22,059 --> 00:21:23,770
you're not running the most mainstream

564
00:21:23,770 --> 00:21:26,919
stuff other examples if you're familiar

565
00:21:26,919 --> 00:21:29,559
with a k exec fight the kegs ik firewood

566
00:21:29,559 --> 00:21:31,659
system call which is an effort to make

567
00:21:31,659 --> 00:21:35,950
hay taken more secure that was what a

568
00:21:35,950 --> 00:21:37,150
lot of book wins that recently to give

569
00:21:37,150 --> 00:21:39,429
it power Percy support pal support but

570
00:21:39,429 --> 00:21:42,970
doesn't support some loading in case I

571
00:21:42,970 --> 00:21:45,010
can with a your own device tree which is

572
00:21:45,010 --> 00:21:46,240
something we do a fair bit and paid a

573
00:21:46,240 --> 00:21:47,770
boot soon to spend some time working out

574
00:21:47,770 --> 00:21:52,090
a solution to that an alternative so

575
00:21:52,090 --> 00:21:54,280
working great working close to upstream

576
00:21:54,280 --> 00:21:55,570
is great for development and maintenance

577
00:21:55,570 --> 00:21:57,760
and caching all these things early but

578
00:21:57,760 --> 00:21:59,080
we do occasionally actually release

579
00:21:59,080 --> 00:22:00,490
firmware on these machines and they're

580
00:22:00,490 --> 00:22:02,380
not running petty bit master or an a

581
00:22:02,380 --> 00:22:04,210
Sudoku and all that kind of thing we do

582
00:22:04,210 --> 00:22:06,700
stabilize occasionally but because we do

583
00:22:06,700 --> 00:22:10,299
have several varieties of power servers

584
00:22:10,299 --> 00:22:12,039
running at different levels that kind of

585
00:22:12,039 --> 00:22:14,679
thing we don't impede a boot want to

586
00:22:14,679 --> 00:22:17,230
guarantee exactly what Colonel or ABI of

587
00:22:17,230 --> 00:22:19,559
then you have under the underneath

588
00:22:19,559 --> 00:22:21,820
because it's not as funny for that and

589
00:22:21,820 --> 00:22:23,559
it's easier for us if we can stay close

590
00:22:23,559 --> 00:22:25,870
to us from all the time I was mutilating

591
00:22:25,870 --> 00:22:28,450
but where it's has caused an issue in

592
00:22:28,450 --> 00:22:32,919
the past is something with a sorry

593
00:22:32,919 --> 00:22:35,620
device setup utility so some vendor has

594
00:22:35,620 --> 00:22:37,780
a raid card that we including us

595
00:22:37,780 --> 00:22:39,760
there's some tool they use to configure

596
00:22:39,760 --> 00:22:43,000
that usually in Linux I kind of thing

597
00:22:43,000 --> 00:22:44,470
but cuz paper is Linux we can now do

598
00:22:44,470 --> 00:22:47,470
this before installation everything

599
00:22:47,470 --> 00:22:48,910
which is great and people like us okay

600
00:22:48,910 --> 00:22:51,040
so vendors and even some users of like

601
00:22:51,040 --> 00:22:52,690
well when can we include these tools in

602
00:22:52,690 --> 00:22:55,800
the paper image and save some time there

603
00:22:55,800 --> 00:22:58,090
and there's two big reasons we didn't

604
00:22:58,090 --> 00:23:00,280
want to do this number one is that they

605
00:23:00,280 --> 00:23:02,110
are almost exclusively close source

606
00:23:02,110 --> 00:23:03,820
blobs and we don't want to be carrying

607
00:23:03,820 --> 00:23:06,040
that in our image and number two is that

608
00:23:06,040 --> 00:23:07,150
they tend to have affirm our

609
00:23:07,150 --> 00:23:10,030
dependencies and if we suddenly have for

610
00:23:10,030 --> 00:23:12,100
firmware streams or running different

611
00:23:12,100 --> 00:23:13,510
devices that kind of stuff we don't be

612
00:23:13,510 --> 00:23:14,830
holding dependencies for all these

613
00:23:14,830 --> 00:23:16,960
potential tools that you might run in

614
00:23:16,960 --> 00:23:18,670
our limited amount of flash space which

615
00:23:18,670 --> 00:23:22,420
is only a dozen megabytes this way so

616
00:23:22,420 --> 00:23:24,250
solution we half of this is something

617
00:23:24,250 --> 00:23:28,020
called pity plugins or peti plugins a

618
00:23:28,020 --> 00:23:30,430
colleague Jeremy co did most of the core

619
00:23:30,430 --> 00:23:32,500
work for this to define the ABI I've

620
00:23:32,500 --> 00:23:33,940
been spending a lot of time trying to

621
00:23:33,940 --> 00:23:36,190
blend into the UI make him what

622
00:23:36,190 --> 00:23:38,250
automatic and transparent to the user

623
00:23:38,250 --> 00:23:42,240
it's not too complicated Pro process

624
00:23:42,240 --> 00:23:45,070
what a vendor can do or whoever wants to

625
00:23:45,070 --> 00:23:48,220
package a tool up is it's a is

626
00:23:48,220 --> 00:23:49,720
compressed the director in a CIO

627
00:23:49,720 --> 00:23:52,060
structure with all the dependencies and

628
00:23:52,060 --> 00:23:53,620
direct everything you need and there's

629
00:23:53,620 --> 00:23:55,270
two thin layer metadata and there to

630
00:23:55,270 --> 00:23:57,580
tell us what's going on and then paddy

631
00:23:57,580 --> 00:23:59,230
boot or it's a period like a tool will

632
00:23:59,230 --> 00:23:59,830
take that

633
00:23:59,830 --> 00:24:02,890
install the temp transparent setup so if

634
00:24:02,890 --> 00:24:04,810
you call the Koran is held in there peb

635
00:24:04,810 --> 00:24:06,700
it will chroot you into that directory

636
00:24:06,700 --> 00:24:09,070
and run it from there this is great we

637
00:24:09,070 --> 00:24:10,390
can run this tools easy we don't have to

638
00:24:10,390 --> 00:24:12,190
distribute them all the dependencies are

639
00:24:12,190 --> 00:24:13,450
there and they're not gonna walk over

640
00:24:13,450 --> 00:24:16,950
the file system while doing it

641
00:24:17,040 --> 00:24:19,720
Petie boot can automatically scan the

642
00:24:19,720 --> 00:24:21,220
disk and network for these people again

643
00:24:21,220 --> 00:24:22,870
files the same time wizard looking for

644
00:24:22,870 --> 00:24:25,720
boot configurations and then present

645
00:24:25,720 --> 00:24:27,190
these in the UI you can see here there's

646
00:24:27,190 --> 00:24:30,370
one here called a conf which sets up a

647
00:24:30,370 --> 00:24:33,310
storage controller some many dead Verte

648
00:24:33,310 --> 00:24:35,080
whatever you running and from them from

649
00:24:35,080 --> 00:24:36,370
UI you can run it rather than digging

650
00:24:36,370 --> 00:24:37,990
through the shell and trying to figure

651
00:24:37,990 --> 00:24:40,510
this out yourself by spending time

652
00:24:40,510 --> 00:24:42,400
making sure the transparency isn't easy

653
00:24:42,400 --> 00:24:44,830
to use while letting us not distribute

654
00:24:44,830 --> 00:24:47,040
it ourselves

655
00:24:47,040 --> 00:24:49,510
I've said a lot about this is good for

656
00:24:49,510 --> 00:24:50,980
vendors that kind of thing

657
00:24:50,980 --> 00:24:53,169
the same concept applies to any debug

658
00:24:53,169 --> 00:24:55,000
tools you want to package up or any

659
00:24:55,000 --> 00:24:56,830
additional features you want to add to

660
00:24:56,830 --> 00:24:58,059
your petabyte installation you can wrap

661
00:24:58,059 --> 00:25:00,880
up as a pv plugin i was didn't quite

662
00:25:00,880 --> 00:25:01,929
have time i was going to do a thing

663
00:25:01,929 --> 00:25:03,880
where you packaged up Zork or something

664
00:25:03,880 --> 00:25:04,799
and write it in your bit lighter

665
00:25:04,799 --> 00:25:06,429
transparently would have been fun but

666
00:25:06,429 --> 00:25:10,900
anyway exercise for the audience but now

667
00:25:10,900 --> 00:25:11,950
seems like a good time to talk about

668
00:25:11,950 --> 00:25:14,770
security potentially back in 2014 we

669
00:25:14,770 --> 00:25:16,299
were really on just on does it boot

670
00:25:16,299 --> 00:25:19,450
anything and now in 2018 it's much more

671
00:25:19,450 --> 00:25:21,580
about i just want to know is it booting

672
00:25:21,580 --> 00:25:27,220
what is meant to another rough slide so

673
00:25:27,220 --> 00:25:29,799
this is a probably two major bits of

674
00:25:29,799 --> 00:25:30,910
this depending on what you're looking at

675
00:25:30,910 --> 00:25:32,110
pay to boot or whether you're looking at

676
00:25:32,110 --> 00:25:35,470
the open pass take us a whole you can

677
00:25:35,470 --> 00:25:37,570
see the lower lower and everything all

678
00:25:37,570 --> 00:25:38,590
the stages up to pay to boot are not

679
00:25:38,590 --> 00:25:40,510
covered by a better austin secure boot

680
00:25:40,510 --> 00:25:41,860
let me have some things going on petty

681
00:25:41,860 --> 00:25:46,240
booty as well so the opal secure and

682
00:25:46,240 --> 00:25:47,710
trusted boot thing are well greatest

683
00:25:47,710 --> 00:25:49,240
into this too much because it's another

684
00:25:49,240 --> 00:25:50,860
team's work I don't work on it directly

685
00:25:50,860 --> 00:25:53,530
too much but on most of our machines you

686
00:25:53,530 --> 00:25:55,450
can't implement trusted and secure boot

687
00:25:55,450 --> 00:25:57,910
trusted with the attached TPM and secure

688
00:25:57,910 --> 00:25:59,500
boot to verify the signature of each

689
00:25:59,500 --> 00:26:01,990
stage as you load things from flash up

690
00:26:01,990 --> 00:26:04,059
until you get to pay to boot and why

691
00:26:04,059 --> 00:26:05,200
time you get to ped of it can be fairly

692
00:26:05,200 --> 00:26:06,490
sure you're running the ped of you

693
00:26:06,490 --> 00:26:10,179
intend to then in peteyboo we had this

694
00:26:10,179 --> 00:26:12,160
company can support but signed an

695
00:26:12,160 --> 00:26:14,380
encrypted channels also boot images

696
00:26:14,380 --> 00:26:16,480
which includes your kernel in addy good

697
00:26:16,480 --> 00:26:18,040
arguments even a device tree you can

698
00:26:18,040 --> 00:26:20,260
slightly encrypt your only on power I've

699
00:26:20,260 --> 00:26:22,600
been doing that kind of thing is folks

700
00:26:22,600 --> 00:26:25,059
on both both local disk options and for

701
00:26:25,059 --> 00:26:27,760
the network and the best bit about this

702
00:26:27,760 --> 00:26:29,530
for me personally with maintainer this

703
00:26:29,530 --> 00:26:32,740
was a hundred percent outside work

704
00:26:32,740 --> 00:26:36,130
the original GB GB GP g m-e a support

705
00:26:36,130 --> 00:26:37,600
was written by raptor technologies for

706
00:26:37,600 --> 00:26:39,700
their first Telus machine and then the

707
00:26:39,700 --> 00:26:41,140
company I mentioned earlier open gear

708
00:26:41,140 --> 00:26:44,640
came in an extended to support open SSL

709
00:26:44,640 --> 00:26:47,530
that work includes a lockdown color mode

710
00:26:47,530 --> 00:26:51,130
to secure the UI and make sure people

711
00:26:51,130 --> 00:26:52,960
can't stop to share on anything I kind

712
00:26:52,960 --> 00:26:55,690
of thing you can also boot most

713
00:26:55,690 --> 00:26:57,190
encrypted installations maybe doesn't

714
00:26:57,190 --> 00:27:00,220
quite support encrypted boot petitions

715
00:27:00,220 --> 00:27:02,260
just yet there's no work to do there

716
00:27:02,260 --> 00:27:07,210
essentially but extending that concept

717
00:27:07,210 --> 00:27:10,210
locking down the UI the something I'm

718
00:27:10,210 --> 00:27:11,650
working on is working on how we can

719
00:27:11,650 --> 00:27:12,820
tighten up with the various petabyte

720
00:27:12,820 --> 00:27:16,030
components can do traditionally

721
00:27:16,030 --> 00:27:17,560
everything running in this Linux image

722
00:27:17,560 --> 00:27:18,880
is running his route just got was easy

723
00:27:18,880 --> 00:27:20,860
at the time but it's really not required

724
00:27:20,860 --> 00:27:24,190
and especially if you test you're saying

725
00:27:24,190 --> 00:27:25,690
this machine's here for BMC of providing

726
00:27:25,690 --> 00:27:27,940
a remote type in my interface you attach

727
00:27:27,940 --> 00:27:30,100
this to the internet which you really

728
00:27:30,100 --> 00:27:31,810
should people do that kind of thing

729
00:27:31,810 --> 00:27:33,490
there's a remote interface directly and

730
00:27:33,490 --> 00:27:34,840
with with Road essentially interest

731
00:27:34,840 --> 00:27:37,540
machine so as what is improvements we

732
00:27:37,540 --> 00:27:40,780
can make it that's what we've done is

733
00:27:40,780 --> 00:27:43,660
because it's as Linux we've just made it

734
00:27:43,660 --> 00:27:46,720
so only the PP discover server process

735
00:27:46,720 --> 00:27:47,740
runs their backgrounds and managed

736
00:27:47,740 --> 00:27:49,480
devices and does the booting has root

737
00:27:49,480 --> 00:27:51,250
privileges and everything else is

738
00:27:51,250 --> 00:27:53,110
completely I'm privileged user so it

739
00:27:53,110 --> 00:27:55,090
includes the UI some of the setup tools

740
00:27:55,090 --> 00:27:56,860
and especially if you even if you drop

741
00:27:56,860 --> 00:27:58,630
to the shell you're just unplug this

742
00:27:58,630 --> 00:27:59,860
juicer unless you actually know the root

743
00:27:59,860 --> 00:28:01,930
password for this machine you can't do

744
00:28:01,930 --> 00:28:04,270
anything and I'm power we saw stole the

745
00:28:04,270 --> 00:28:06,610
password hashing every room that could

746
00:28:06,610 --> 00:28:08,650
be extended to do things teams that kind

747
00:28:08,650 --> 00:28:11,710
of thing all depending on platform this

748
00:28:11,710 --> 00:28:13,390
is great because it solved the feature

749
00:28:13,390 --> 00:28:15,160
request for hardened your way up a bit

750
00:28:15,160 --> 00:28:16,750
and adding passwords that kind of thing

751
00:28:16,750 --> 00:28:19,570
while just leaning on the existing

752
00:28:19,570 --> 00:28:22,570
various infrastructure which has a lot

753
00:28:22,570 --> 00:28:23,890
more eyes on earth and so on things do

754
00:28:23,890 --> 00:28:25,450
especially means I don't have to make

755
00:28:25,450 --> 00:28:27,100
sure my n cursors code is super robust

756
00:28:27,100 --> 00:28:29,620
still getting out of it just say get out

757
00:28:29,620 --> 00:28:32,520
of it that's fine use user

758
00:28:32,520 --> 00:28:34,540
patches for this up on the mailing list

759
00:28:34,540 --> 00:28:36,370
if you're curious reviews always welcome

760
00:28:36,370 --> 00:28:41,290
as well back sheds so what is next in

761
00:28:41,290 --> 00:28:46,060
the future if any be like I said we're

762
00:28:46,060 --> 00:28:47,470
extending @p plugins are thought to be

763
00:28:47,470 --> 00:28:48,610
more transparent

764
00:28:48,610 --> 00:28:51,190
extends the ABI to make it more flexible

765
00:28:51,190 --> 00:28:52,630
for certain tools and add more

766
00:28:52,630 --> 00:28:55,300
parameters I kind of thing we want to

767
00:28:55,300 --> 00:28:58,390
try and get automatic ISO image installs

768
00:28:58,390 --> 00:29:00,370
working it's kind of already was already

769
00:29:00,370 --> 00:29:01,900
patience for this that kind of work for

770
00:29:01,900 --> 00:29:03,880
example if you're installing a rail net

771
00:29:03,880 --> 00:29:06,550
bit image you can boot from that ISO and

772
00:29:06,550 --> 00:29:08,590
will work you can go on but if you have

773
00:29:08,590 --> 00:29:10,450
a install that requires accessing what's

774
00:29:10,450 --> 00:29:12,190
all that I saw in the installation image

775
00:29:12,190 --> 00:29:14,200
that doesn't work as the ISOs disappear

776
00:29:14,200 --> 00:29:14,930
because you Kasich

777
00:29:14,930 --> 00:29:16,850
so playing with ways of reserving that

778
00:29:16,850 --> 00:29:18,590
as image in memory so it appears as a

779
00:29:18,590 --> 00:29:22,160
block device in the next stage trying to

780
00:29:22,160 --> 00:29:24,020
do generic firmware updates in petty

781
00:29:24,020 --> 00:29:28,340
boot by a nice interface most of that is

782
00:29:28,340 --> 00:29:31,370
actually up on the list as well but like

783
00:29:31,370 --> 00:29:32,930
I said we have a few a few machine

784
00:29:32,930 --> 00:29:36,590
variants and like there's a associated

785
00:29:36,590 --> 00:29:37,520
with that as about four different five

786
00:29:37,520 --> 00:29:39,170
different ways of updating a machine at

787
00:29:39,170 --> 00:29:42,470
the moment so I'd like to try and bring

788
00:29:42,470 --> 00:29:43,640
that together make it a nice example

789
00:29:43,640 --> 00:29:45,430
before we merge the whole thing together

790
00:29:45,430 --> 00:29:47,630
are different and and more stuff like

791
00:29:47,630 --> 00:29:50,390
that diff interface types for say a user

792
00:29:50,390 --> 00:29:52,210
work on the desktop machine compared to

793
00:29:52,210 --> 00:29:54,410
machine modem data center where you only

794
00:29:54,410 --> 00:29:55,700
want to care as test like I think you

795
00:29:55,700 --> 00:29:56,750
don't really care about interacting with

796
00:29:56,750 --> 00:29:57,410
it

797
00:29:57,410 --> 00:29:59,210
accepting testing that kind of stuff

798
00:29:59,210 --> 00:30:01,310
it's got a lot of entry static testing

799
00:30:01,310 --> 00:30:02,090
and that kind of thing

800
00:30:02,090 --> 00:30:05,450
but we want to do more stuff with a Kuan

801
00:30:05,450 --> 00:30:07,490
Yew there's something in the open power

802
00:30:07,490 --> 00:30:10,000
thing called opie test which is a lot of

803
00:30:10,000 --> 00:30:11,990
extreme firmer testing on different

804
00:30:11,990 --> 00:30:13,580
machines that kind of thing and that's

805
00:30:13,580 --> 00:30:15,680
what's creamy so we just put pedigree

806
00:30:15,680 --> 00:30:17,030
into that include with they're testing

807
00:30:17,030 --> 00:30:19,160
it but the kind of thing crazy stuff

808
00:30:19,160 --> 00:30:21,350
like what if someone attaches 10,000

809
00:30:21,350 --> 00:30:23,180
discs to a machine will pay a bill deal

810
00:30:23,180 --> 00:30:25,160
with that the answer is creme you dies

811
00:30:25,160 --> 00:30:27,440
way before then but it's it's a way of

812
00:30:27,440 --> 00:30:28,910
stress testing what we can do that kind

813
00:30:28,910 --> 00:30:32,960
of thing so if you interested please get

814
00:30:32,960 --> 00:30:34,760
involved the home of peda boot is on

815
00:30:34,760 --> 00:30:37,760
alphabets org we also have a it's also

816
00:30:37,760 --> 00:30:39,920
on the open github open power

817
00:30:39,920 --> 00:30:42,380
organization the trees is after the same

818
00:30:42,380 --> 00:30:43,580
we just tend to use it for issue

819
00:30:43,580 --> 00:30:45,770
tracking that kind of thing and the main

820
00:30:45,770 --> 00:30:47,390
list is there if interested come have a

821
00:30:47,390 --> 00:30:52,570
look about it thank you very much

822
00:30:54,020 --> 00:30:58,779
[Applause]

823
00:30:59,450 --> 00:31:05,750
Thank You Samuel however any questions

824
00:31:10,850 --> 00:31:13,590
I'm very interested if you can go into

825
00:31:13,590 --> 00:31:17,279
more detail about the what the earlier

826
00:31:17,279 --> 00:31:18,929
stages in the bootloader are doing for

827
00:31:18,929 --> 00:31:21,269
security how they interact with the TPM

828
00:31:21,269 --> 00:31:23,580
and also the sort of flash protections

829
00:31:23,580 --> 00:31:27,720
the power 9 has to prevent malicious or

830
00:31:27,720 --> 00:31:30,860
unauthorized access can't a little bit

831
00:31:30,860 --> 00:31:32,909
ideally my colleague Stewart was gonna

832
00:31:32,909 --> 00:31:34,169
be here this week and do a talk on that

833
00:31:34,169 --> 00:31:35,820
actually as well but you couldn't make

834
00:31:35,820 --> 00:31:39,360
it back to the night before if Ben is

835
00:31:39,360 --> 00:31:40,950
there do you want to do you mind how

836
00:31:40,950 --> 00:31:46,190
much of the stack just to single you out

837
00:31:46,279 --> 00:31:49,590
yeah I'm not sure about that the trusted

838
00:31:49,590 --> 00:31:53,370
sages I don't know as much about it's a

839
00:31:53,370 --> 00:31:54,960
different team like I said the Tsukuba

840
00:31:54,960 --> 00:31:58,529
stuff in flash all the famous stages are

841
00:31:58,529 --> 00:32:00,120
laid out more or less roughly as I was

842
00:32:00,120 --> 00:32:01,799
saying before each one of those wrapped

843
00:32:01,799 --> 00:32:04,559
in a secure container with a certain SKU

844
00:32:04,559 --> 00:32:08,039
a head on top and then that is as

845
00:32:08,039 --> 00:32:10,830
machine boots up those signatures to

846
00:32:10,830 --> 00:32:12,870
checked has each stage checks the next

847
00:32:12,870 --> 00:32:14,159
finger before it comes up that kind of

848
00:32:14,159 --> 00:32:17,909
thing I probably got too much into it

849
00:32:17,909 --> 00:32:19,289
there because I'll start explaining

850
00:32:19,289 --> 00:32:20,700
things the wrong way but I can get in

851
00:32:20,700 --> 00:32:21,690
touch some people you do know much more

852
00:32:21,690 --> 00:32:25,740
about this if you want okay any more

853
00:32:25,740 --> 00:32:28,129
questions

854
00:32:30,350 --> 00:32:32,910
hey my name is Demian I have a question

855
00:32:32,910 --> 00:32:35,300
about you said multi-platform support

856
00:32:35,300 --> 00:32:38,940
for example if you would like to have an

857
00:32:38,940 --> 00:32:41,130
infrastructure or let's say we support

858
00:32:41,130 --> 00:32:43,590
different you know different scenarios

859
00:32:43,590 --> 00:32:45,330
where we have power 9 and at the same

860
00:32:45,330 --> 00:32:47,550
time we have an age 86 system and you

861
00:32:47,550 --> 00:32:48,870
mentioned something about you know

862
00:32:48,870 --> 00:32:50,940
having all the platforms so how much is

863
00:32:50,940 --> 00:32:53,010
petite boot supporting other platforms

864
00:32:53,010 --> 00:32:55,740
than power 9 currently for example if we

865
00:32:55,740 --> 00:32:57,960
take the Linux boot and we want to let's

866
00:32:57,960 --> 00:33:00,360
say use support that Intel server board

867
00:33:00,360 --> 00:33:04,110
there and they have the 2600 WF which is

868
00:33:04,110 --> 00:33:06,660
a yeah modern enough let's say so and

869
00:33:06,660 --> 00:33:08,280
then we want to have the single boot

870
00:33:08,280 --> 00:33:09,510
loader we don't want to split and

871
00:33:09,510 --> 00:33:10,980
support two different boot loaders I

872
00:33:10,980 --> 00:33:12,990
mean do you think this would be possible

873
00:33:12,990 --> 00:33:15,680
in the near future feed future

874
00:33:15,680 --> 00:33:18,810
definitely I mean the vast majority of

875
00:33:18,810 --> 00:33:21,990
pale boot is platform agnostic most of

876
00:33:21,990 --> 00:33:24,600
the platform specific code that we have

877
00:33:24,600 --> 00:33:27,360
is a self engineering stuff is stuff

878
00:33:27,360 --> 00:33:29,910
like say on this parallel platform how

879
00:33:29,910 --> 00:33:31,620
do we do and how do we figure out a P my

880
00:33:31,620 --> 00:33:33,270
Boardwalk consoles do we have that kind

881
00:33:33,270 --> 00:33:34,470
of thing yeah or where do we say about

882
00:33:34,470 --> 00:33:36,150
comfy you could say in every room or an

883
00:33:36,150 --> 00:33:38,970
EFI variable that kind of thing so the

884
00:33:38,970 --> 00:33:40,770
only extra work would be just working

885
00:33:40,770 --> 00:33:42,660
how that works on platform it's fairly

886
00:33:42,660 --> 00:33:44,340
easy to add you could probably take it

887
00:33:44,340 --> 00:33:46,650
as it is and not assign if it would work

888
00:33:46,650 --> 00:33:49,080
fine sounds great yeah cuz I think it's

889
00:33:49,080 --> 00:33:51,000
really good if we can just focus on one

890
00:33:51,000 --> 00:33:53,280
boot loader I mean it will lower the

891
00:33:53,280 --> 00:33:56,550
just you know finding the problems in

892
00:33:56,550 --> 00:33:58,260
the booting procedure afterwards you

893
00:33:58,260 --> 00:33:59,550
know once we get away the board

894
00:33:59,550 --> 00:34:01,740
specifics and we can get you know the

895
00:34:01,740 --> 00:34:04,170
secure or trusted boot we have something

896
00:34:04,170 --> 00:34:04,830
very similar

897
00:34:04,830 --> 00:34:06,480
rather than having different scenarios

898
00:34:06,480 --> 00:34:09,210
and I see a lot of movement we see the

899
00:34:09,210 --> 00:34:10,980
Linux boot progressing to the petite

900
00:34:10,980 --> 00:34:13,560
boot so if it's really that much harder

901
00:34:13,560 --> 00:34:15,210
exhausting it sounds really good take a

902
00:34:15,210 --> 00:34:21,320
look Thanks ok any more questions

903
00:34:29,120 --> 00:34:32,989
I know that pity boot had a graphical

904
00:34:32,989 --> 00:34:35,150
interface instead of the end curses in

905
00:34:35,150 --> 00:34:36,590
her face I was wondering I was gonna

906
00:34:36,590 --> 00:34:39,409
mention that yeah I going to bring it

907
00:34:39,409 --> 00:34:42,310
back I've played with it a little bit

908
00:34:42,310 --> 00:34:45,260
the biggest thing it's kind of fallen

909
00:34:45,260 --> 00:34:47,449
out of use it is in the tree still but

910
00:34:47,449 --> 00:34:48,679
foreign I used to be just because the

911
00:34:48,679 --> 00:34:50,150
main interface on most to our power

912
00:34:50,150 --> 00:34:52,820
machines is ipmi so we're kind of

913
00:34:52,820 --> 00:34:55,730
constrained to the Incas interface most

914
00:34:55,730 --> 00:34:56,870
of the codes still there it probably

915
00:34:56,870 --> 00:34:58,670
states a bit of TLC to get it up to date

916
00:34:58,670 --> 00:35:01,670
with everything else and we need to do

917
00:35:01,670 --> 00:35:03,890
some work on the VGA console set up more

918
00:35:03,890 --> 00:35:05,780
thing else but yet potentially we can

919
00:35:05,780 --> 00:35:07,070
bring it back especially people using in

920
00:35:07,070 --> 00:35:08,330
a desktop scenario might be a little

921
00:35:08,330 --> 00:35:13,730
nicer so yeah let's try it optimistic

922
00:35:13,730 --> 00:35:14,780
but yeah there's been a bit of work to

923
00:35:14,780 --> 00:35:17,000
get up to date essentially do you need

924
00:35:17,000 --> 00:35:19,300
the mic

925
00:35:22,980 --> 00:35:29,280
I wrote that stuff and it was just an

926
00:35:29,280 --> 00:35:31,080
excuse to play with the twin library

927
00:35:31,080 --> 00:35:35,010
that is why God wrote back then even the

928
00:35:35,010 --> 00:35:36,570
font handing that thing is absolutely

929
00:35:36,570 --> 00:35:38,880
horrendous you take a true type foam

930
00:35:38,880 --> 00:35:40,500
then you transform it into a series of

931
00:35:40,500 --> 00:35:43,230
of basic curves and then we're under

932
00:35:43,230 --> 00:35:45,960
that manually you really don't want to

933
00:35:45,960 --> 00:35:48,090
reuse that interface believe me if you

934
00:35:48,090 --> 00:35:50,340
want to do graphics the main problem is

935
00:35:50,340 --> 00:35:53,990
going to be having a way to easily

936
00:35:53,990 --> 00:35:57,840
abstract the various forms that but if

937
00:35:57,840 --> 00:36:02,010
it has for configuration of IP for

938
00:36:02,010 --> 00:36:03,780
example or good device etc

939
00:36:03,780 --> 00:36:07,380
that's all bet on and curses and you

940
00:36:07,380 --> 00:36:09,150
would have to I don't know if you have

941
00:36:09,150 --> 00:36:10,470
any abstraction government in there but

942
00:36:10,470 --> 00:36:12,720
in fact it would need some and you will

943
00:36:12,720 --> 00:36:14,550
need them to implement a graphical

944
00:36:14,550 --> 00:36:17,490
variant of all of that stuff at which

945
00:36:17,490 --> 00:36:18,869
point you probably want to start looking

946
00:36:18,869 --> 00:36:21,540
at existing graphical libraries rather

947
00:36:21,540 --> 00:36:23,609
than reduce the crap I haven't named it

948
00:36:23,609 --> 00:36:27,450
was a toy in the context of the ps3 I

949
00:36:27,450 --> 00:36:29,160
think we had to fit the entire thing in

950
00:36:29,160 --> 00:36:32,730
for mega flash which is why that it made

951
00:36:32,730 --> 00:36:34,170
some amount of sense because twin is

952
00:36:34,170 --> 00:36:37,170
very very tiny and we had no network

953
00:36:37,170 --> 00:36:39,060
putting no options nothing it was just

954
00:36:39,060 --> 00:36:41,730
looking for the straws and I noticed can

955
00:36:41,730 --> 00:36:45,590
booting them but honestly we wrote that

956
00:36:45,590 --> 00:36:48,270
during conference evenings and probably

957
00:36:48,270 --> 00:36:48,750
not sober

958
00:36:48,750 --> 00:36:52,920
I wouldn't recommend using it as a

959
00:36:52,920 --> 00:36:55,400
starting point

960
00:36:59,570 --> 00:37:03,470
thank you any more questions

961
00:37:06,170 --> 00:37:09,619
so I was interested in your you know

962
00:37:09,619 --> 00:37:10,910
sort of this whole secure boot thing

963
00:37:10,910 --> 00:37:13,690
with the keys and all so in the power

964
00:37:13,690 --> 00:37:15,890
implementation whereas sort of the root

965
00:37:15,890 --> 00:37:18,880
key kept this it infuses or is it in

966
00:37:18,880 --> 00:37:23,299
very changeable again I need a Astra so

967
00:37:23,299 --> 00:37:25,519
this is not my work so I kinda nope I

968
00:37:25,519 --> 00:37:28,099
believe I believe it is that fused in OH

969
00:37:28,099 --> 00:37:31,460
end of time oh here's the reason that it

970
00:37:31,460 --> 00:37:36,319
matters I don't have to it's a vente

971
00:37:36,319 --> 00:37:38,990
pasta possibly even possibly you can

972
00:37:38,990 --> 00:37:40,700
take this back to you again the resale

973
00:37:40,700 --> 00:37:42,769
question keeps coming up and the desire

974
00:37:42,769 --> 00:37:45,619
of a consumer further down in the change

975
00:37:45,619 --> 00:37:47,269
from the first buyer to essentially

976
00:37:47,269 --> 00:37:49,670
rekey it yeah and again this is the

977
00:37:49,670 --> 00:37:51,920
thing Chromebooks really get right and a

978
00:37:51,920 --> 00:37:54,740
lot of you know let's just to pick on it

979
00:37:54,740 --> 00:37:56,660
again like the ending scenario gets

980
00:37:56,660 --> 00:37:59,859
wrong so if there's any way to make that

981
00:37:59,859 --> 00:38:03,049
get done right it'd be cool so totally

982
00:38:03,049 --> 00:38:04,700
great but I'll probably find you someone

983
00:38:04,700 --> 00:38:06,410
who's more intimate with the secure

984
00:38:06,410 --> 00:38:08,569
stack to answer the question okay thanks

985
00:38:08,569 --> 00:38:10,869
very much

986
00:38:11,200 --> 00:38:14,740
are there any more questions

987
00:38:21,020 --> 00:38:25,560
and so how big is the image of your

988
00:38:25,560 --> 00:38:28,760
inner dramatis or all right so I'm a

989
00:38:28,760 --> 00:38:31,050
product all the power servers we

990
00:38:31,050 --> 00:38:33,240
reserved around 16 megabytes of space of

991
00:38:33,240 --> 00:38:36,000
flash for the whole image that's Colonel

992
00:38:36,000 --> 00:38:39,120
any regrets I think the Colonel's 3ish

993
00:38:39,120 --> 00:38:43,410
megabytes the rest is a size and how

994
00:38:43,410 --> 00:38:46,920
many developers are there any what sorry

995
00:38:46,920 --> 00:38:50,160
how many developers work on developers

996
00:38:50,160 --> 00:38:51,780
um depends how you count

997
00:38:51,780 --> 00:38:55,350
I'd be the main developer essentially we

998
00:38:55,350 --> 00:38:57,690
got a lot of contributions from like I

999
00:38:57,690 --> 00:38:59,280
said Raptor and over geared the

1000
00:38:59,280 --> 00:39:01,050
contributors but so uh 20 people from

1001
00:39:01,050 --> 00:39:03,150
places like Red Hat and I went to and

1002
00:39:03,150 --> 00:39:04,260
sending into their environments that

1003
00:39:04,260 --> 00:39:06,450
kind of stuff and there's a few people

1004
00:39:06,450 --> 00:39:08,580
who don't work directly upon it in the

1005
00:39:08,580 --> 00:39:10,590
team but know enough about it to work on

1006
00:39:10,590 --> 00:39:15,180
it they do having okay we have time for

1007
00:39:15,180 --> 00:39:22,080
a few more questions so anyone know okay

1008
00:39:22,080 --> 00:39:23,550
Thank You Samuel give a round of

1009
00:39:23,550 --> 00:39:25,920
applause please

1010
00:39:25,920 --> 00:39:30,700
[Applause]

1011
00:39:30,700 --> 00:39:37,578
[Music]

