1
00:00:00,000 --> 00:00:04,100
[Music]

2
00:00:04,100 --> 00:00:07,259
so let's get started next up is Paul

3
00:00:07,259 --> 00:00:10,080
Kolakowski and he will tell us about a

4
00:00:10,080 --> 00:00:12,990
way he's been figuring out how to make

5
00:00:12,990 --> 00:00:16,139
installing firmware I'm selling open

6
00:00:16,139 --> 00:00:18,960
source firmware on your computer to make

7
00:00:18,960 --> 00:00:21,480
that as easy as installing it like Linux

8
00:00:21,480 --> 00:00:24,539
distribution like a Bunter or Fedora so

9
00:00:24,539 --> 00:00:26,189
give a round of applause for Paul

10
00:00:26,189 --> 00:00:34,110
Korsakoff C ok hi everyone so during

11
00:00:34,110 --> 00:00:36,780
this presentation I'm going to provide

12
00:00:36,780 --> 00:00:40,980
some insight about what the fine wire

13
00:00:40,980 --> 00:00:43,110
and boot software situation is like for

14
00:00:43,110 --> 00:00:45,360
hobbyists and for people who are

15
00:00:45,360 --> 00:00:47,899
technical users well interested in

16
00:00:47,899 --> 00:00:49,890
actually getting involved in the

17
00:00:49,890 --> 00:00:53,219
technology you know into to a larger

18
00:00:53,219 --> 00:00:56,280
extent and just using it and so I will

19
00:00:56,280 --> 00:00:58,379
present some of the issues that arise

20
00:00:58,379 --> 00:01:01,530
when trying to do that and what are the

21
00:01:01,530 --> 00:01:03,960
points of complexity and what I've tried

22
00:01:03,960 --> 00:01:06,750
to do to mitigate these issues and to

23
00:01:06,750 --> 00:01:12,119
kind of move forward on these topics so

24
00:01:12,119 --> 00:01:13,890
first off I'll focus on digital

25
00:01:13,890 --> 00:01:16,259
technology and end users on a kind of

26
00:01:16,259 --> 00:01:19,500
broad sense and I will stop by telling

27
00:01:19,500 --> 00:01:21,630
you a bit about how digital technology

28
00:01:21,630 --> 00:01:24,060
is made and what impact it has on end

29
00:01:24,060 --> 00:01:27,509
users so if we look at the proprietary

30
00:01:27,509 --> 00:01:29,520
industry there are some observations

31
00:01:29,520 --> 00:01:32,850
that we can make and generally the end

32
00:01:32,850 --> 00:01:35,670
users are treated like consumers and not

33
00:01:35,670 --> 00:01:37,770
just clients but consumers and this

34
00:01:37,770 --> 00:01:42,720
means something kind of nearly political

35
00:01:42,720 --> 00:01:44,549
it means that the consumers are passive

36
00:01:44,549 --> 00:01:47,100
and they're just going to try to use the

37
00:01:47,100 --> 00:01:49,159
technology and nothing more than music

38
00:01:49,159 --> 00:01:51,829
they're not going to be interested in

39
00:01:51,829 --> 00:01:54,299
understanding how it works or in

40
00:01:54,299 --> 00:01:56,790
changing it or in owning it in any way

41
00:01:56,790 --> 00:02:00,360
and so the expectation from that is that

42
00:02:00,360 --> 00:02:01,710
while the technology the technology

43
00:02:01,710 --> 00:02:04,560
should just work and it should always do

44
00:02:04,560 --> 00:02:07,190
the right thing and it should always

45
00:02:07,190 --> 00:02:11,160
serve the user interest but of course

46
00:02:11,160 --> 00:02:13,040
this approach is

47
00:02:13,040 --> 00:02:15,290
really not neutral because if we

48
00:02:15,290 --> 00:02:19,310
consider these these assumptions this

49
00:02:19,310 --> 00:02:21,590
the technology that is developed this

50
00:02:21,590 --> 00:02:25,580
way is made in a way that only the

51
00:02:25,580 --> 00:02:28,849
developers have the exclusivity of the

52
00:02:28,849 --> 00:02:32,239
knowledge and actually when you have the

53
00:02:32,239 --> 00:02:34,760
exclusivity of how something works then

54
00:02:34,760 --> 00:02:36,140
you're the only person can have

55
00:02:36,140 --> 00:02:38,840
effective control over that so it means

56
00:02:38,840 --> 00:02:41,540
that there is sort of a world garden and

57
00:02:41,540 --> 00:02:44,090
only a few people in society are in that

58
00:02:44,090 --> 00:02:46,640
garden and have the access to the

59
00:02:46,640 --> 00:02:48,860
knowledge to the control and in the end

60
00:02:48,860 --> 00:02:52,610
to the power to really act upon the

61
00:02:52,610 --> 00:02:54,560
technology and to decide how the

62
00:02:54,560 --> 00:02:56,720
technology works and what it does and

63
00:02:56,720 --> 00:02:59,510
what it doesn't do and so this is really

64
00:02:59,510 --> 00:03:04,610
a fundamental question of what do we

65
00:03:04,610 --> 00:03:06,530
want technology to be in that sort of

66
00:03:06,530 --> 00:03:09,230
walled garden at the society scale or do

67
00:03:09,230 --> 00:03:11,510
we want it to be something accessible to

68
00:03:11,510 --> 00:03:15,650
everyone who basically wants to get

69
00:03:15,650 --> 00:03:18,920
involved at sort of technical levels and

70
00:03:18,920 --> 00:03:21,709
when we have this situation the

71
00:03:21,709 --> 00:03:24,769
hierarchy of interests may not be the

72
00:03:24,769 --> 00:03:26,569
one that is in the best interest of

73
00:03:26,569 --> 00:03:31,400
users of course when it's groups of

74
00:03:31,400 --> 00:03:33,730
developers and especially companies that

75
00:03:33,730 --> 00:03:36,109
decide how the software is made they're

76
00:03:36,109 --> 00:03:38,450
going to do it with their own interests

77
00:03:38,450 --> 00:03:40,670
first and that's natural the people who

78
00:03:40,670 --> 00:03:43,700
do the work do it in their interest and

79
00:03:43,700 --> 00:03:45,829
those interests don't always align with

80
00:03:45,829 --> 00:03:48,799
the interest of end-users and nothing to

81
00:03:48,799 --> 00:03:51,230
match this we can have technology that

82
00:03:51,230 --> 00:03:55,280
will refuse to to cooperate with users

83
00:03:55,280 --> 00:03:58,040
and that will refuse to do what the user

84
00:03:58,040 --> 00:03:59,810
wants them to do and so that's the

85
00:03:59,810 --> 00:04:03,680
example from 2001 Space Odyssey well the

86
00:04:03,680 --> 00:04:05,810
Machine says well I'm sorry I can do

87
00:04:05,810 --> 00:04:08,299
that you asked me to do something but

88
00:04:08,299 --> 00:04:11,060
I'm a machine and I'm refusing so we

89
00:04:11,060 --> 00:04:13,639
have a problem here and if if we look at

90
00:04:13,639 --> 00:04:16,639
if we look at it on a very broad scale

91
00:04:16,639 --> 00:04:18,529
digital technology nowadays is

92
00:04:18,529 --> 00:04:20,810
everywhere in our lives it's in our

93
00:04:20,810 --> 00:04:22,880
communications it's in the way we

94
00:04:22,880 --> 00:04:24,950
interact with other people so you know

95
00:04:24,950 --> 00:04:25,650
in

96
00:04:25,650 --> 00:04:28,290
everything social all the information we

97
00:04:28,290 --> 00:04:32,639
access and we use devices that have very

98
00:04:32,639 --> 00:04:34,979
extensive input and output so there is a

99
00:04:34,979 --> 00:04:37,320
lot of data collection going on the

100
00:04:37,320 --> 00:04:39,240
devices know where we are going what we

101
00:04:39,240 --> 00:04:41,430
do who we talk to and and basically

102
00:04:41,430 --> 00:04:43,770
everything about us and all that data we

103
00:04:43,770 --> 00:04:48,000
sent to some infrastructure and well

104
00:04:48,000 --> 00:04:50,070
what data do we send and to whom and

105
00:04:50,070 --> 00:04:51,750
under what conditions and to do what

106
00:04:51,750 --> 00:04:52,860
with it

107
00:04:52,860 --> 00:04:57,720
and so really digital technology affects

108
00:04:57,720 --> 00:05:00,960
every end-users life and because of that

109
00:05:00,960 --> 00:05:03,120
the way it's done is going to have

110
00:05:03,120 --> 00:05:06,990
consequences about these users life very

111
00:05:06,990 --> 00:05:10,680
directly and if we take a step back and

112
00:05:10,680 --> 00:05:13,620
look in literature how this problem was

113
00:05:13,620 --> 00:05:15,690
perceived it starts with Frankenstein's

114
00:05:15,690 --> 00:05:18,240
monster complex the idea that a

115
00:05:18,240 --> 00:05:20,610
scientist will build a piece of

116
00:05:20,610 --> 00:05:22,650
technology while Frankenstein's monster

117
00:05:22,650 --> 00:05:25,289
is kind of technology that will

118
00:05:25,289 --> 00:05:27,810
eventually repel against its creator and

119
00:05:27,810 --> 00:05:30,599
do something that is not in its interest

120
00:05:30,599 --> 00:05:33,630
and because of that Asimov thought of

121
00:05:33,630 --> 00:05:35,849
the thriller of Robotics that would be

122
00:05:35,849 --> 00:05:37,919
ways to prevent the machines from

123
00:05:37,919 --> 00:05:41,940
harming their creators and and this kind

124
00:05:41,940 --> 00:05:45,750
of the this takes the assumption that

125
00:05:45,750 --> 00:05:48,150
the machines are independent from humans

126
00:05:48,150 --> 00:05:49,650
but we all know that they're not

127
00:05:49,650 --> 00:05:51,539
independent the machines just do what

128
00:05:51,539 --> 00:05:53,880
the people who build them build them to

129
00:05:53,880 --> 00:05:58,199
do and so this is shown with a Wells

130
00:05:58,199 --> 00:06:00,810
telescreen in 1984 where it's very clear

131
00:06:00,810 --> 00:06:03,060
that the technology is just a way for

132
00:06:03,060 --> 00:06:06,349
the power to impose restrictions or to

133
00:06:06,349 --> 00:06:09,870
have active civilians on the population

134
00:06:09,870 --> 00:06:12,960
so this is not really something new and

135
00:06:12,960 --> 00:06:14,909
and this problem has been known in

136
00:06:14,909 --> 00:06:19,409
literature for a while except that first

137
00:06:19,409 --> 00:06:22,710
off we thought it was separate creatures

138
00:06:22,710 --> 00:06:24,930
that eventually turned into robots that

139
00:06:24,930 --> 00:06:27,840
were still independent and nowadays it's

140
00:06:27,840 --> 00:06:31,260
clear that it's really computers that do

141
00:06:31,260 --> 00:06:34,409
not necessarily obey users but obey the

142
00:06:34,409 --> 00:06:37,360
people who program them

143
00:06:37,360 --> 00:06:39,849
and this is why I believe we need to

144
00:06:39,849 --> 00:06:42,490
embed grantees in technology that's

145
00:06:42,490 --> 00:06:44,949
allowed to revoke developers privileges

146
00:06:44,949 --> 00:06:46,509
meaning that they are not the only

147
00:06:46,509 --> 00:06:49,000
people in that wall garden that can

148
00:06:49,000 --> 00:06:51,400
control the technology but that all of

149
00:06:51,400 --> 00:06:53,889
society can do it if they want to so it

150
00:06:53,889 --> 00:06:55,659
doesn't mean that everyone has to be a

151
00:06:55,659 --> 00:06:57,879
developer but it means that if everyone

152
00:06:57,879 --> 00:06:59,590
wants to become a developer which they

153
00:06:59,590 --> 00:07:02,770
should be allowed to do it and they

154
00:07:02,770 --> 00:07:05,469
basically users should be allowed to own

155
00:07:05,469 --> 00:07:07,750
the technology this way and this is not

156
00:07:07,750 --> 00:07:09,939
just about individual ownership it's

157
00:07:09,939 --> 00:07:12,039
also about society scale ownership and

158
00:07:12,039 --> 00:07:14,379
basically being able to ask a

159
00:07:14,379 --> 00:07:16,930
contracting or anyone to well look at

160
00:07:16,930 --> 00:07:18,430
this piece of technology and make this

161
00:07:18,430 --> 00:07:20,710
or that change or ensure that it's doing

162
00:07:20,710 --> 00:07:22,539
this and that and not this other thing

163
00:07:22,539 --> 00:07:24,310
and that other thing that you don't want

164
00:07:24,310 --> 00:07:27,159
and basically this is formalized by free

165
00:07:27,159 --> 00:07:29,110
software's for freedom the freedom to

166
00:07:29,110 --> 00:07:31,300
use the software for any purpose the

167
00:07:31,300 --> 00:07:34,000
freedom to modify the software and the

168
00:07:34,000 --> 00:07:37,000
freedoms to distribute it either in its

169
00:07:37,000 --> 00:07:40,509
original form or modified and the

170
00:07:40,509 --> 00:07:43,000
implications are of this are well

171
00:07:43,000 --> 00:07:45,310
individual and collective control that

172
00:07:45,310 --> 00:07:48,279
as I said any member of society can

173
00:07:48,279 --> 00:07:49,750
decide to take control over the

174
00:07:49,750 --> 00:07:53,409
technology it also means that users get

175
00:07:53,409 --> 00:07:58,089
to decide who they trust if there is if

176
00:07:58,089 --> 00:07:59,560
they have choice between different

177
00:07:59,560 --> 00:08:01,750
software and if they're not locked down

178
00:08:01,750 --> 00:08:05,229
with just one software that they can run

179
00:08:05,229 --> 00:08:07,810
then they can decide well that I have

180
00:08:07,810 --> 00:08:09,460
different choices different options and

181
00:08:09,460 --> 00:08:12,539
I can choose based on my own values and

182
00:08:12,539 --> 00:08:14,860
to make that effective the distinction

183
00:08:14,860 --> 00:08:16,839
between hardware and software is key

184
00:08:16,839 --> 00:08:20,650
it's basically the nature of technology

185
00:08:20,650 --> 00:08:22,990
that both both aspects are distant and

186
00:08:22,990 --> 00:08:25,870
so there is just no good reason why one

187
00:08:25,870 --> 00:08:27,460
piece of software should be tied to one

188
00:08:27,460 --> 00:08:29,639
piece of sort of hardware and vice versa

189
00:08:29,639 --> 00:08:32,708
it should always be possible to replace

190
00:08:32,708 --> 00:08:35,309
one aspect of technology if you have

191
00:08:35,309 --> 00:08:38,010
just hardware that is supposed to run

192
00:08:38,010 --> 00:08:40,479
any software you program it with then

193
00:08:40,479 --> 00:08:42,610
that should be the case in practice it

194
00:08:42,610 --> 00:08:44,740
shouldn't just be the software made but

195
00:08:44,740 --> 00:08:46,690
the manufacturer of the hardware that is

196
00:08:46,690 --> 00:08:48,579
allowed to run

197
00:08:48,579 --> 00:08:50,980
and that means that we need access to

198
00:08:50,980 --> 00:08:53,470
knowledge and when we have access to

199
00:08:53,470 --> 00:08:55,540
knowledge then users no longer have to

200
00:08:55,540 --> 00:08:57,399
be passive of course they can stay

201
00:08:57,399 --> 00:08:58,899
passive if they want to that's not a

202
00:08:58,899 --> 00:09:00,759
problem but the point is they should

203
00:09:00,759 --> 00:09:03,610
have the choice so the bottom line is

204
00:09:03,610 --> 00:09:06,220
freedom empowers user and it also allows

205
00:09:06,220 --> 00:09:08,410
to sanitize digital technology on a

206
00:09:08,410 --> 00:09:13,230
society-wide scale but if we look at it

207
00:09:13,230 --> 00:09:17,649
the way that the software of the

208
00:09:17,649 --> 00:09:19,600
technology especially the software is

209
00:09:19,600 --> 00:09:23,230
developed it's not always on the same

210
00:09:23,230 --> 00:09:27,250
grounds so first off we have upstream so

211
00:09:27,250 --> 00:09:29,470
upstream is the idea that the code that

212
00:09:29,470 --> 00:09:33,879
is made will be will be made in common

213
00:09:33,879 --> 00:09:35,920
so it's not just someone who's taking

214
00:09:35,920 --> 00:09:38,110
that code and developing it in the

215
00:09:38,110 --> 00:09:40,209
corner of the world and and that's it

216
00:09:40,209 --> 00:09:41,680
and then they're not touching it anymore

217
00:09:41,680 --> 00:09:44,470
it's rather the idea that we're going to

218
00:09:44,470 --> 00:09:46,660
do something together and that the code

219
00:09:46,660 --> 00:09:49,389
base will be common so that all the

220
00:09:49,389 --> 00:09:50,889
different features all the different use

221
00:09:50,889 --> 00:09:53,610
case are integrated into one tree and

222
00:09:53,610 --> 00:09:58,660
and then the it's much easier for for

223
00:09:58,660 --> 00:10:02,680
maintenance because that way you don't

224
00:10:02,680 --> 00:10:05,170
have ten ten million different versions

225
00:10:05,170 --> 00:10:07,540
that everyone modifying in a subtly

226
00:10:07,540 --> 00:10:09,579
different way you just have one piece of

227
00:10:09,579 --> 00:10:11,769
one piece of code that you have to

228
00:10:11,769 --> 00:10:14,410
maintain so for security there is a huge

229
00:10:14,410 --> 00:10:16,720
benefit because the improvements that

230
00:10:16,720 --> 00:10:19,779
are brought by one person to that

231
00:10:19,779 --> 00:10:22,319
codebase will benefit all other users

232
00:10:22,319 --> 00:10:25,660
and so this brings the focus on the long

233
00:10:25,660 --> 00:10:29,259
term rather than then shortened and on

234
00:10:29,259 --> 00:10:31,870
the other hand we have so downstream

235
00:10:31,870 --> 00:10:34,870
whether the code is done in a quick and

236
00:10:34,870 --> 00:10:38,139
dirty way where the modification are

237
00:10:38,139 --> 00:10:40,809
specific and the updates are often not

238
00:10:40,809 --> 00:10:43,029
provided and this is driven by shortened

239
00:10:43,029 --> 00:10:44,949
focus so usually time to market meaning

240
00:10:44,949 --> 00:10:46,839
that we have to get a product out as

241
00:10:46,839 --> 00:10:48,819
fast as possible and so we don't have

242
00:10:48,819 --> 00:10:50,980
time to do things in the long run we

243
00:10:50,980 --> 00:10:53,019
don't have time to actually commit the

244
00:10:53,019 --> 00:10:54,900
the code to

245
00:10:54,900 --> 00:10:57,490
repository to have it reviewed by peers

246
00:10:57,490 --> 00:10:58,870
and things like that

247
00:10:58,870 --> 00:11:00,910
but thankfully some companies still

248
00:11:00,910 --> 00:11:03,100
manage to meet the time to market goals

249
00:11:03,100 --> 00:11:04,840
and also to upstream so that that's

250
00:11:04,840 --> 00:11:06,490
that's a really really nice thing to

251
00:11:06,490 --> 00:11:08,340
have

252
00:11:08,340 --> 00:11:10,930
so upstream we can say that it stays

253
00:11:10,930 --> 00:11:14,110
relevant across across time while

254
00:11:14,110 --> 00:11:16,840
downstream is really fatally outdated so

255
00:11:16,840 --> 00:11:18,250
if you get a piece of software that's

256
00:11:18,250 --> 00:11:21,400
downstream that doesn't get updates it's

257
00:11:21,400 --> 00:11:23,560
going to be useless after a period of

258
00:11:23,560 --> 00:11:27,420
time and there's just no way around that

259
00:11:27,510 --> 00:11:31,510
so in with this consideration we can we

260
00:11:31,510 --> 00:11:33,160
can say that the deprecated software is

261
00:11:33,160 --> 00:11:35,710
really considered harmful especially for

262
00:11:35,710 --> 00:11:37,750
security reasons because bringing

263
00:11:37,750 --> 00:11:40,750
updates to software is just a natural

264
00:11:40,750 --> 00:11:44,500
and very desirable thing to do and not

265
00:11:44,500 --> 00:11:46,870
updating software is actually abnormal

266
00:11:46,870 --> 00:11:49,480
and like different types of technology

267
00:11:49,480 --> 00:11:51,880
like hardware where you do it once and

268
00:11:51,880 --> 00:11:52,900
you expect it to work

269
00:11:52,900 --> 00:11:54,660
software is something that should be

270
00:11:54,660 --> 00:11:57,280
perpetually evolving it's a bit like if

271
00:11:57,280 --> 00:11:59,560
you were driving a car and and you would

272
00:11:59,560 --> 00:12:02,260
never ever have any technical checkup at

273
00:12:02,260 --> 00:12:04,540
any point in using it then for how long

274
00:12:04,540 --> 00:12:06,550
would you use it I mean the longer you

275
00:12:06,550 --> 00:12:11,830
use it and the longer you use it and the

276
00:12:11,830 --> 00:12:13,840
craziest it get the more dangerous it

277
00:12:13,840 --> 00:12:15,990
gets because you have no guarantee that

278
00:12:15,990 --> 00:12:19,930
there's no problem with the technology

279
00:12:19,930 --> 00:12:23,920
you're using so that's all forgive the

280
00:12:23,920 --> 00:12:27,340
Oracle it's not very practical and well

281
00:12:27,340 --> 00:12:30,850
those ideas are maybe interesting but

282
00:12:30,850 --> 00:12:32,890
for end-users what what does it really

283
00:12:32,890 --> 00:12:37,300
mean so if we look at its digital

284
00:12:37,300 --> 00:12:39,160
technology as I mentioned comes in

285
00:12:39,160 --> 00:12:41,440
different different things you have so

286
00:12:41,440 --> 00:12:43,600
the circuit board the integrated

287
00:12:43,600 --> 00:12:47,440
circuits then so logic configuration

288
00:12:47,440 --> 00:12:49,330
which is what you find an FPGA is like

289
00:12:49,330 --> 00:12:51,760
this and then in the end software that

290
00:12:51,760 --> 00:12:55,090
are the instructions and so some of

291
00:12:55,090 --> 00:12:56,980
those can be reprogrammed and some of

292
00:12:56,980 --> 00:12:59,170
those effects so the hardware aspects

293
00:12:59,170 --> 00:13:03,420
are always fixed and integrated so sorry

294
00:13:03,420 --> 00:13:06,430
software and logic configuration you can

295
00:13:06,430 --> 00:13:07,100
actually

296
00:13:07,100 --> 00:13:10,850
you reprogram so what is the state of

297
00:13:10,850 --> 00:13:13,910
free software on digital devices so

298
00:13:13,910 --> 00:13:16,430
nowadays we have lots of systems and

299
00:13:16,430 --> 00:13:19,610
applications that work and those are

300
00:13:19,610 --> 00:13:21,680
divided in two categories you have those

301
00:13:21,680 --> 00:13:23,360
that are generic like the user

302
00:13:23,360 --> 00:13:26,900
interfaces and all the the the

303
00:13:26,900 --> 00:13:29,000
applications and those don't depend on

304
00:13:29,000 --> 00:13:30,920
the hardware but on the other hand you

305
00:13:30,920 --> 00:13:32,660
have all the hardware specific support

306
00:13:32,660 --> 00:13:37,450
which is what we people usually work on

307
00:13:37,450 --> 00:13:40,160
so that that's for the system part so

308
00:13:40,160 --> 00:13:41,750
how does this which support is usually

309
00:13:41,750 --> 00:13:44,330
in the kernel and nowadays support in

310
00:13:44,330 --> 00:13:45,980
the Linux kernel is pretty good for a

311
00:13:45,980 --> 00:13:48,170
wide range of devices but what about

312
00:13:48,170 --> 00:13:51,050
boot software and fibers well the

313
00:13:51,050 --> 00:13:54,350
situation is that most of the time they

314
00:13:54,350 --> 00:13:59,090
come pre-installed with the device so it

315
00:13:59,090 --> 00:14:02,390
means that it's not actually expected

316
00:14:02,390 --> 00:14:04,880
that this will get updated so of course

317
00:14:04,880 --> 00:14:06,920
there are exceptions like the

318
00:14:06,920 --> 00:14:08,810
Chromebooks for instance where the

319
00:14:08,810 --> 00:14:11,420
firmware updates is all part of the the

320
00:14:11,420 --> 00:14:13,430
update process and it was really thought

321
00:14:13,430 --> 00:14:18,140
through but on the the widest variety of

322
00:14:18,140 --> 00:14:21,440
hardware that you can find in shops the

323
00:14:21,440 --> 00:14:23,570
the boot software and fibers are just

324
00:14:23,570 --> 00:14:25,580
installed once and they expect it to

325
00:14:25,580 --> 00:14:28,090
work and to never be updated and so

326
00:14:28,090 --> 00:14:32,480
that's a problem and this makes this

327
00:14:32,480 --> 00:14:36,020
situation rather complicated for for for

328
00:14:36,020 --> 00:14:38,330
free free software and if we look at it

329
00:14:38,330 --> 00:14:40,430
boot software is really critical for

330
00:14:40,430 --> 00:14:44,200
freedom privacy and security

331
00:14:44,200 --> 00:14:46,880
especially because boot software is also

332
00:14:46,880 --> 00:14:50,590
the root of trust it's the first kind of

333
00:14:50,590 --> 00:14:53,600
software piece that runs on the device

334
00:14:53,600 --> 00:14:56,000
so if that software is compromised then

335
00:14:56,000 --> 00:14:58,190
the the whole chain that follows it

336
00:14:58,190 --> 00:15:01,280
cannot be trusted any longer so for

337
00:15:01,280 --> 00:15:03,050
security there are especially huge

338
00:15:03,050 --> 00:15:05,960
implications so in the free software

339
00:15:05,960 --> 00:15:09,020
world we have we have significant boot

340
00:15:09,020 --> 00:15:11,600
software so we have I mention core boots

341
00:15:11,600 --> 00:15:15,050
and new boots Co boots covers lots of

342
00:15:15,050 --> 00:15:18,710
Intel x86 devices also a few arm and

343
00:15:18,710 --> 00:15:21,020
MIPS ones and also we

344
00:15:21,020 --> 00:15:25,130
five is upcoming and on the other hand

345
00:15:25,130 --> 00:15:26,210
we have you boots

346
00:15:26,210 --> 00:15:29,810
that really is about embedded devices so

347
00:15:29,810 --> 00:15:32,330
that might be single board computers as

348
00:15:32,330 --> 00:15:35,450
well as phones or tablets and mobile

349
00:15:35,450 --> 00:15:38,240
devices and with those two we can

350
00:15:38,240 --> 00:15:41,210
already cover a good span of devices

351
00:15:41,210 --> 00:15:45,320
that that's many many many types there

352
00:15:45,320 --> 00:15:47,240
are also other projects that are less

353
00:15:47,240 --> 00:15:49,460
known but also quite interesting

354
00:15:49,460 --> 00:15:52,040
sometimes have technical advantages over

355
00:15:52,040 --> 00:15:52,640
others

356
00:15:52,640 --> 00:15:56,780
so that's bear box and little kernel and

357
00:15:56,780 --> 00:15:58,640
on top of that you have payloads that

358
00:15:58,640 --> 00:16:01,100
are sometimes sometimes called boot

359
00:16:01,100 --> 00:16:03,350
loaders although the distinction can be

360
00:16:03,350 --> 00:16:06,440
a bit blurry you have see buyers Diana

361
00:16:06,440 --> 00:16:08,630
called Robin depth-charge so those are

362
00:16:08,630 --> 00:16:11,300
all payloads four core boots you boots

363
00:16:11,300 --> 00:16:14,510
usually has its own kind of interfaces

364
00:16:14,510 --> 00:16:19,790
to to boot up and these also provide the

365
00:16:19,790 --> 00:16:24,320
user interfaces in the end for for for

366
00:16:24,320 --> 00:16:27,980
the users but we also have the privilege

367
00:16:27,980 --> 00:16:30,500
execution mode which is something that

368
00:16:30,500 --> 00:16:35,510
came up rather recently I would say so

369
00:16:35,510 --> 00:16:37,400
I'm toasted fine where is the reference

370
00:16:37,400 --> 00:16:40,250
free implementation on arm there is also

371
00:16:40,250 --> 00:16:43,100
something called up T which is not

372
00:16:43,100 --> 00:16:45,110
actually at the same level as on trusted

373
00:16:45,110 --> 00:16:49,370
framework so up C is rather on the the

374
00:16:49,370 --> 00:16:51,440
privileged execution mode it's a system

375
00:16:51,440 --> 00:16:54,320
kind of equivalent and in this privilege

376
00:16:54,320 --> 00:16:56,120
execution modes the software that runs

377
00:16:56,120 --> 00:16:59,300
has the highest level well as the name

378
00:16:59,300 --> 00:17:02,270
indicates of privileges so it means that

379
00:17:02,270 --> 00:17:05,180
it can have access at all the hardware

380
00:17:05,180 --> 00:17:07,280
it can forbid the main operating system

381
00:17:07,280 --> 00:17:10,220
from accessing some of the hardware it

382
00:17:10,220 --> 00:17:14,599
can yeah forbid operations like this so

383
00:17:14,599 --> 00:17:17,359
it's also really critical for privacy

384
00:17:17,359 --> 00:17:20,569
and security because if in that in that

385
00:17:20,569 --> 00:17:22,069
privilege execution mode you have

386
00:17:22,069 --> 00:17:24,440
non-free software running then you

387
00:17:24,440 --> 00:17:27,170
basically cannot trust what the main

388
00:17:27,170 --> 00:17:29,600
operating system is doing and that stuff

389
00:17:29,600 --> 00:17:33,230
is all always it keeps running on the

390
00:17:33,230 --> 00:17:34,240
side of

391
00:17:34,240 --> 00:17:37,120
the main operating system so

392
00:17:37,120 --> 00:17:41,370
implications are high now for end-users

393
00:17:41,370 --> 00:17:44,169
hobbyists and people who would like to

394
00:17:44,169 --> 00:17:46,779
actually replace the boot software with

395
00:17:46,779 --> 00:17:49,690
free projects and also the farmers like

396
00:17:49,690 --> 00:17:51,370
they do with the system and with the

397
00:17:51,370 --> 00:17:53,350
system it's it's actually not so hard

398
00:17:53,350 --> 00:17:55,720
that there are installation guides and

399
00:17:55,720 --> 00:17:58,210
they apply to lots of different systems

400
00:17:58,210 --> 00:18:00,580
and it's usually something that people

401
00:18:00,580 --> 00:18:03,460
can do and although not everyone has the

402
00:18:03,460 --> 00:18:05,440
ability to install their own the

403
00:18:05,440 --> 00:18:07,750
operating system on the machine it's not

404
00:18:07,750 --> 00:18:09,820
hard to find people who can do this and

405
00:18:09,820 --> 00:18:11,620
they are usually installed parties and

406
00:18:11,620 --> 00:18:13,450
things like this where people gather

407
00:18:13,450 --> 00:18:15,669
together and they help those who don't

408
00:18:15,669 --> 00:18:18,630
have the technical knowledge to do it

409
00:18:18,630 --> 00:18:22,390
and the point is that those people who

410
00:18:22,390 --> 00:18:24,970
can actually replace the system don't

411
00:18:24,970 --> 00:18:26,950
have to be developers because there are

412
00:18:26,950 --> 00:18:28,840
enough instructions and the process is

413
00:18:28,840 --> 00:18:33,039
simple enough but if we look at the the

414
00:18:33,039 --> 00:18:35,529
fine wire and boot projects then becomes

415
00:18:35,529 --> 00:18:39,010
a lot harder and finding people who

416
00:18:39,010 --> 00:18:42,909
actually know how to replace the these

417
00:18:42,909 --> 00:18:45,850
pieces of software with with free ones

418
00:18:45,850 --> 00:18:50,279
is very complicated and there are also

419
00:18:50,279 --> 00:18:54,880
additional limitations in addition to

420
00:18:54,880 --> 00:18:57,820
the sheer technical complexity so the

421
00:18:57,820 --> 00:18:59,620
main problem we have is and false

422
00:18:59,620 --> 00:19:02,350
signature verifications so the idea that

423
00:19:02,350 --> 00:19:04,779
the boot software will be sign with a

424
00:19:04,779 --> 00:19:07,419
cropped Agra cryptographic key and that

425
00:19:07,419 --> 00:19:10,330
is fused in the hardware itself so the

426
00:19:10,330 --> 00:19:12,100
public key is fused in the hardware

427
00:19:12,100 --> 00:19:14,230
itself and it will be used to verify

428
00:19:14,230 --> 00:19:16,809
that the boot software that was

429
00:19:16,809 --> 00:19:19,779
installed matches that key so there is a

430
00:19:19,779 --> 00:19:23,710
signature and if it didn't match then

431
00:19:23,710 --> 00:19:25,990
what's going to happen is the device

432
00:19:25,990 --> 00:19:28,450
will be turned into a brick because the

433
00:19:28,450 --> 00:19:31,750
device can no longer boots and it the

434
00:19:31,750 --> 00:19:34,690
device will just refuse to work and that

435
00:19:34,690 --> 00:19:37,480
is a very clear indication that these

436
00:19:37,480 --> 00:19:39,730
devices and platforms are fatally flawed

437
00:19:39,730 --> 00:19:44,350
if they're not if they're not able to do

438
00:19:44,350 --> 00:19:46,389
what the users tell them to do then

439
00:19:46,389 --> 00:19:48,320
there's a big problem going on

440
00:19:48,320 --> 00:19:51,560
and it's really the idea that in those

441
00:19:51,560 --> 00:19:53,800
models that are often presented as

442
00:19:53,800 --> 00:19:57,410
security but it's security always

443
00:19:57,410 --> 00:19:59,240
depends on the threat model and on who

444
00:19:59,240 --> 00:20:02,150
it serves so in that case it's security

445
00:20:02,150 --> 00:20:04,040
but security for the manufacturer and

446
00:20:04,040 --> 00:20:06,680
not for the user the user is actually

447
00:20:06,680 --> 00:20:08,870
considered to be a threat because

448
00:20:08,870 --> 00:20:10,820
they're not allowed to change the

449
00:20:10,820 --> 00:20:12,740
software by themselves they have to

450
00:20:12,740 --> 00:20:15,110
trust the manufacturer and maybe the

451
00:20:15,110 --> 00:20:18,410
manufacturer is just not in in the the

452
00:20:18,410 --> 00:20:20,360
trust model of the user maybe for

453
00:20:20,360 --> 00:20:22,880
whatever reason the user decides not to

454
00:20:22,880 --> 00:20:24,800
stress the manufacturer and they should

455
00:20:24,800 --> 00:20:27,080
be able to do it because again the

456
00:20:27,080 --> 00:20:28,490
hardware and the software are two

457
00:20:28,490 --> 00:20:30,470
distinct aspects that should not be

458
00:20:30,470 --> 00:20:34,160
intrigued one with the other so for this

459
00:20:34,160 --> 00:20:37,040
reason the the platforms that have and

460
00:20:37,040 --> 00:20:39,980
the devices that have this limitations I

461
00:20:39,980 --> 00:20:43,100
consider to be fatally flawed and really

462
00:20:43,100 --> 00:20:45,050
not not very interesting for the cause

463
00:20:45,050 --> 00:20:47,180
of liberating devices and empowering

464
00:20:47,180 --> 00:20:52,610
users and of course even when we have a

465
00:20:52,610 --> 00:20:54,740
hardware that is somewhat cooperative

466
00:20:54,740 --> 00:20:58,460
the free project don't always have the

467
00:20:58,460 --> 00:21:01,970
full extent of hardware support so it

468
00:21:01,970 --> 00:21:05,330
really all depends on the project and it

469
00:21:05,330 --> 00:21:07,010
all depends on the platform and the

470
00:21:07,010 --> 00:21:10,640
devices the device that is used and most

471
00:21:10,640 --> 00:21:14,240
of the time this this status is not very

472
00:21:14,240 --> 00:21:17,360
clear to people from the outside we

473
00:21:17,360 --> 00:21:19,510
would like to start using these projects

474
00:21:19,510 --> 00:21:22,400
very often the people who do the

475
00:21:22,400 --> 00:21:24,290
development are aware of the current

476
00:21:24,290 --> 00:21:30,710
status but it's rarely formalized and so

477
00:21:30,710 --> 00:21:34,310
the next step for a technical user would

478
00:21:34,310 --> 00:21:36,860
like to replace the the farmers and and

479
00:21:36,860 --> 00:21:39,530
boot software with free ones is

480
00:21:39,530 --> 00:21:44,150
integration so how do you get images to

481
00:21:44,150 --> 00:21:46,970
install with with systems it's easy you

482
00:21:46,970 --> 00:21:48,920
just you just install software with the

483
00:21:48,920 --> 00:21:51,320
package manager right and you find live

484
00:21:51,320 --> 00:21:53,780
CDs that you can just boot and that's it

485
00:21:53,780 --> 00:21:57,890
but with with boot and fine wire it's

486
00:21:57,890 --> 00:22:00,440
rare to find pre-built images

487
00:22:00,440 --> 00:22:02,660
and the system distributions don't

488
00:22:02,660 --> 00:22:04,550
include the farmers and the boot

489
00:22:04,550 --> 00:22:06,770
software it's all taken out of the scope

490
00:22:06,770 --> 00:22:09,320
and it's assumed to be in that state

491
00:22:09,320 --> 00:22:11,150
where it's already installed and working

492
00:22:11,150 --> 00:22:13,990
and we don't have to care about it

493
00:22:13,990 --> 00:22:16,550
so that makes that makes it even harder

494
00:22:16,550 --> 00:22:20,560
for for end-users and again the

495
00:22:20,560 --> 00:22:23,720
documentation for the the process of

496
00:22:23,720 --> 00:22:25,850
building the images like what conflict

497
00:22:25,850 --> 00:22:28,580
to choose and how to which options are

498
00:22:28,580 --> 00:22:30,950
right to select is is not always very

499
00:22:30,950 --> 00:22:35,060
obvious so it requires heavy lifting to

500
00:22:35,060 --> 00:22:36,940
go through the whole process from

501
00:22:36,940 --> 00:22:39,890
finding the configuration to building to

502
00:22:39,890 --> 00:22:41,930
packing the image in the right format

503
00:22:41,930 --> 00:22:44,180
and finally installing it to the medium

504
00:22:44,180 --> 00:22:47,210
and so that requires knowledge and

505
00:22:47,210 --> 00:22:50,180
skills which are kind of above the scope

506
00:22:50,180 --> 00:22:54,920
of just replacing the software for the

507
00:22:54,920 --> 00:22:57,680
the the the system components the users

508
00:22:57,680 --> 00:23:01,340
don't always have to to find out you can

509
00:23:01,340 --> 00:23:03,110
figure out how to build it it all comes

510
00:23:03,110 --> 00:23:05,090
prepackaged it's integrated and it's

511
00:23:05,090 --> 00:23:08,000
easy and so why is Boonton and fine work

512
00:23:08,000 --> 00:23:11,960
so very different also one of the

513
00:23:11,960 --> 00:23:15,260
downsides is that the the the procedure

514
00:23:15,260 --> 00:23:17,540
might be very specific to the device or

515
00:23:17,540 --> 00:23:19,400
to the platform because it often

516
00:23:19,400 --> 00:23:23,360
requires more than just installing

517
00:23:23,360 --> 00:23:25,130
something from one place to another you

518
00:23:25,130 --> 00:23:27,560
might have to actually open the hardware

519
00:23:27,560 --> 00:23:33,470
and mess with some like you might have

520
00:23:33,470 --> 00:23:36,290
to connect an external flash or probe to

521
00:23:36,290 --> 00:23:39,320
to access the storage whether the the

522
00:23:39,320 --> 00:23:43,880
farmer lives so the situation now is

523
00:23:43,880 --> 00:23:45,860
that it kind of requires developer

524
00:23:45,860 --> 00:23:49,070
skills so the people who do this know

525
00:23:49,070 --> 00:23:51,770
how to to set it up and how to get it

526
00:23:51,770 --> 00:23:55,250
going but for others it's it's pretty

527
00:23:55,250 --> 00:23:57,980
hard so this is when the origami paper

528
00:23:57,980 --> 00:24:03,020
comes in so globally it's a project that

529
00:24:03,020 --> 00:24:05,600
provides means to install sorry to ease

530
00:24:05,600 --> 00:24:07,520
the development and preparation and

531
00:24:07,520 --> 00:24:09,320
installation of free software and logic

532
00:24:09,320 --> 00:24:11,750
configuration projects related to

533
00:24:11,750 --> 00:24:14,290
hardware supports so that is pretty

534
00:24:14,290 --> 00:24:18,520
Brod but really the underlying the

535
00:24:18,520 --> 00:24:21,340
underlying mission is to abstract these

536
00:24:21,340 --> 00:24:24,250
technical steps and to provide some

537
00:24:24,250 --> 00:24:26,980
entry points some interface that is not

538
00:24:26,980 --> 00:24:29,700
as complex as it is for the developers

539
00:24:29,700 --> 00:24:32,890
so this this means providing tested

540
00:24:32,890 --> 00:24:34,390
revisions and configs

541
00:24:34,390 --> 00:24:38,260
so making sure that everything that is

542
00:24:38,260 --> 00:24:40,390
integrated actually works that it was

543
00:24:40,390 --> 00:24:43,300
tested because it's also hard to know

544
00:24:43,300 --> 00:24:46,210
when you just download the the source

545
00:24:46,210 --> 00:24:48,610
tree flood project what is the state of

546
00:24:48,610 --> 00:24:50,230
things now and what works and what

547
00:24:50,230 --> 00:24:53,350
doesn't work so it's also about tying

548
00:24:53,350 --> 00:24:55,450
projects together because there are some

549
00:24:55,450 --> 00:24:58,750
dependencies once you want to for

550
00:24:58,750 --> 00:25:02,500
instance run a specific specific boot

551
00:25:02,500 --> 00:25:04,420
software with the specific payload then

552
00:25:04,420 --> 00:25:05,980
you have to kind of integrate the two

553
00:25:05,980 --> 00:25:08,560
correctly and that may not be obvious to

554
00:25:08,560 --> 00:25:14,530
users as well also the the steps for

555
00:25:14,530 --> 00:25:17,170
each device have to be documented and so

556
00:25:17,170 --> 00:25:19,150
the idea here is to provide all of that

557
00:25:19,150 --> 00:25:21,790
and in one place so it's kind of like a

558
00:25:21,790 --> 00:25:23,830
distribution but not a system

559
00:25:23,830 --> 00:25:25,510
distribution and rather I if I my

560
00:25:25,510 --> 00:25:30,310
distribution and the focus of this is to

561
00:25:30,310 --> 00:25:34,180
only well only care about the devices

562
00:25:34,180 --> 00:25:36,580
that are relevant for freedom so it

563
00:25:36,580 --> 00:25:38,800
means not the devices that are fatally

564
00:25:38,800 --> 00:25:40,150
flawed with the signature verification

565
00:25:40,150 --> 00:25:44,770
problem but instead focusing on on the

566
00:25:44,770 --> 00:25:46,870
devices where you can replace it and

567
00:25:46,870 --> 00:25:50,140
whether the status in the support status

568
00:25:50,140 --> 00:25:54,400
in the project is sufficient to actually

569
00:25:54,400 --> 00:25:57,340
do something useful with it and the

570
00:25:57,340 --> 00:25:59,580
focus is also put on upstream projects

571
00:25:59,580 --> 00:26:04,600
and in cases where there are non free

572
00:26:04,600 --> 00:26:07,120
components required then we just remove

573
00:26:07,120 --> 00:26:09,820
those components and the the supported

574
00:26:09,820 --> 00:26:11,740
devices will be able to still function

575
00:26:11,740 --> 00:26:14,320
to some extent without these blobs so

576
00:26:14,320 --> 00:26:18,090
that's how it's done so the first

577
00:26:18,090 --> 00:26:20,800
component here is the build system so

578
00:26:20,800 --> 00:26:22,330
it's written in bash with lots of

579
00:26:22,330 --> 00:26:25,210
helpers and the idea is to provide

580
00:26:25,210 --> 00:26:27,330
simple actions like build

581
00:26:27,330 --> 00:26:31,269
to download build to do one step of the

582
00:26:31,269 --> 00:26:34,110
process but in just one call and

583
00:26:34,110 --> 00:26:36,370
eventually the idea will be to have

584
00:26:36,370 --> 00:26:39,460
releases for the images and the tools

585
00:26:39,460 --> 00:26:42,039
they are also set up scripts that help

586
00:26:42,039 --> 00:26:44,080
actually install the stuff on the device

587
00:26:44,080 --> 00:26:48,669
that can use directly the build the

588
00:26:48,669 --> 00:26:51,730
builds images or releases and it looks

589
00:26:51,730 --> 00:26:54,100
like this so the idea is you just have

590
00:26:54,100 --> 00:26:56,440
one single command line so paper build

591
00:26:56,440 --> 00:26:58,450
you boot for the cubieboard - and that's

592
00:26:58,450 --> 00:27:01,299
all it is and it will build all the

593
00:27:01,299 --> 00:27:02,619
dependencies and everything that's

594
00:27:02,619 --> 00:27:04,149
required it will use the right country

595
00:27:04,149 --> 00:27:05,889
and in the end you have one image that

596
00:27:05,889 --> 00:27:07,600
you can install with the scripts and

597
00:27:07,600 --> 00:27:12,879
that just works so paper deploy is an

598
00:27:12,879 --> 00:27:16,179
attempt to kind of tie together the

599
00:27:16,179 --> 00:27:19,600
build part and image preparation backing

600
00:27:19,600 --> 00:27:21,940
with the installation so in that case

601
00:27:21,940 --> 00:27:25,090
you don't have to use the scripts in a

602
00:27:25,090 --> 00:27:26,740
second step but it's all done in one

603
00:27:26,740 --> 00:27:30,879
step so it has to be configured like

604
00:27:30,879 --> 00:27:32,529
this you just provide the device you

605
00:27:32,529 --> 00:27:35,230
want to use the boot medium where to

606
00:27:35,230 --> 00:27:37,480
install it and the pass to the build

607
00:27:37,480 --> 00:27:39,759
system then just paper deploy you boot

608
00:27:39,759 --> 00:27:42,369
and it's going to do the same thing

609
00:27:42,369 --> 00:27:45,249
install it to the SD card and then you

610
00:27:45,249 --> 00:27:46,629
can just take it out put it on the

611
00:27:46,629 --> 00:27:49,539
device boot and that's done so the idea

612
00:27:49,539 --> 00:27:52,990
is ready to do it in one go and so

613
00:27:52,990 --> 00:27:54,759
that's all some of the issues that I've

614
00:27:54,759 --> 00:27:56,350
mentioned but there is still the the

615
00:27:56,350 --> 00:27:58,990
problem of knowing what features work

616
00:27:58,990 --> 00:28:01,960
and what doesn't work so to solve that

617
00:28:01,960 --> 00:28:04,179
I've studied a some sort of a static

618
00:28:04,179 --> 00:28:10,029
database where there is basically pair

619
00:28:10,029 --> 00:28:12,960
hardware features status so the status

620
00:28:12,960 --> 00:28:15,789
looks kind of like this so you have the

621
00:28:15,789 --> 00:28:18,039
the different things like g-ronn okay on

622
00:28:18,039 --> 00:28:20,409
the cubieboard 2 and new boots is it

623
00:28:20,409 --> 00:28:22,149
supported yes it's supported and so you

624
00:28:22,149 --> 00:28:24,909
have that for every hardware feature and

625
00:28:24,909 --> 00:28:26,710
it gives visibility and makes it very

626
00:28:26,710 --> 00:28:30,460
clear that well what can be done what

627
00:28:30,460 --> 00:28:34,179
can be used with that and there is also

628
00:28:34,179 --> 00:28:37,929
a special criteria about missing when a

629
00:28:37,929 --> 00:28:40,179
future depends on non-free software its

630
00:28:40,179 --> 00:28:40,570
concern

631
00:28:40,570 --> 00:28:43,240
to be missing because we only care about

632
00:28:43,240 --> 00:28:48,820
the the free the the extent of support

633
00:28:48,820 --> 00:28:50,590
that goes up to free software and not

634
00:28:50,590 --> 00:28:54,940
anything beyond that so the current

635
00:28:54,940 --> 00:28:57,610
status of the project is that a few old

636
00:28:57,610 --> 00:29:00,039
wiener devices are supported but also

637
00:29:00,039 --> 00:29:02,559
many chromium OS devices especially the

638
00:29:02,559 --> 00:29:05,049
arm Chromebooks so that's Tegra k1 and

639
00:29:05,049 --> 00:29:07,929
the two generations of rock chip on v7

640
00:29:07,929 --> 00:29:12,789
and on v8 and those components are some

641
00:29:12,789 --> 00:29:14,710
some of those are actually already

642
00:29:14,710 --> 00:29:16,750
usable paper and paper deploy I've been

643
00:29:16,750 --> 00:29:19,870
using for months and years paper

644
00:29:19,870 --> 00:29:22,690
supports and documentation per device is

645
00:29:22,690 --> 00:29:26,129
still in progress so I'm working on that

646
00:29:26,129 --> 00:29:28,629
I'm also working on a website mailing

647
00:29:28,629 --> 00:29:30,759
list and source code hosting and

648
00:29:30,759 --> 00:29:32,830
everything so far is available on my

649
00:29:32,830 --> 00:29:35,950
personal jet so it can be tried out

650
00:29:35,950 --> 00:29:38,860
already and in the future we want to

651
00:29:38,860 --> 00:29:42,519
integrate more platforms especially so

652
00:29:42,519 --> 00:29:45,039
some on devices again because those do

653
00:29:45,039 --> 00:29:46,419
pretty well when it comes to free

654
00:29:46,419 --> 00:29:49,120
software and also have reproducible

655
00:29:49,120 --> 00:29:52,059
builds would be something very nice and

656
00:29:52,059 --> 00:29:54,309
eventually distributing the binaries and

657
00:29:54,309 --> 00:29:56,889
the source and in the end integrating

658
00:29:56,889 --> 00:30:00,009
that in free systems like parabola or

659
00:30:00,009 --> 00:30:02,440
Debian or whatever so that you can just

660
00:30:02,440 --> 00:30:05,259
install that from your package manager

661
00:30:05,259 --> 00:30:07,440
and that would make things a lot easier

662
00:30:07,440 --> 00:30:11,080
and in the longer term I'd like to have

663
00:30:11,080 --> 00:30:12,940
a graphical UI for these command-line

664
00:30:12,940 --> 00:30:14,889
tools so that is just buttons to click

665
00:30:14,889 --> 00:30:18,419
and it gets really really easy this way

666
00:30:18,419 --> 00:30:21,159
so there is a workshop organized Friday

667
00:30:21,159 --> 00:30:25,509
at 9:00 the idea will be to help porting

668
00:30:25,509 --> 00:30:28,960
the gem 45 Intel laptop which also

669
00:30:28,960 --> 00:30:30,909
worked very well with free software and

670
00:30:30,909 --> 00:30:33,580
without blobs so we'll try to integrate

671
00:30:33,580 --> 00:30:36,159
these in an origami paper and that's it

672
00:30:36,159 --> 00:30:39,730
for this talk so thank you and if you

673
00:30:39,730 --> 00:30:43,259
have questions that'll be with pleasure

674
00:30:48,810 --> 00:30:52,080
thank you so much

675
00:30:52,080 --> 00:30:59,260
so are there any questions I can't see

676
00:30:59,260 --> 00:31:12,100
any Oh over there first of all I want to

677
00:31:12,100 --> 00:31:13,270
say I think this is a pretty cool thing

678
00:31:13,270 --> 00:31:15,370
you're doing this is really I think

679
00:31:15,370 --> 00:31:17,950
addressing one of the things that aren't

680
00:31:17,950 --> 00:31:19,600
really addressed well yet in the open

681
00:31:19,600 --> 00:31:21,400
source form over the sole footing all

682
00:31:21,400 --> 00:31:24,130
the different things together but I'm

683
00:31:24,130 --> 00:31:26,710
curious about how serious you are about

684
00:31:26,710 --> 00:31:30,370
the no blobs rule because as we all know

685
00:31:30,370 --> 00:31:31,930
it's sort of an unfortunate truth that

686
00:31:31,930 --> 00:31:34,150
there's hardly any completely blob free

687
00:31:34,150 --> 00:31:36,480
devices so are you going to completely

688
00:31:36,480 --> 00:31:39,640
never allow any blob devices in this

689
00:31:39,640 --> 00:31:42,220
yeah yeah that's right so it's

690
00:31:42,220 --> 00:31:44,890
drastically reduces the scope of devices

691
00:31:44,890 --> 00:31:47,230
we can support but it's also intentional

692
00:31:47,230 --> 00:31:49,600
because it shows that hey look only a

693
00:31:49,600 --> 00:31:51,730
very small number of devices can be

694
00:31:51,730 --> 00:31:53,980
supported by this so in a way it's also

695
00:31:53,980 --> 00:31:56,110
kind of to create incentive and to say

696
00:31:56,110 --> 00:31:57,940
well if you want mobile devices

697
00:31:57,940 --> 00:32:00,010
supported then it would be good that the

698
00:32:00,010 --> 00:32:04,330
situation changes and yeah so it's not a

699
00:32:04,330 --> 00:32:06,730
very strong incentive of course but it's

700
00:32:06,730 --> 00:32:07,840
also less work for me

701
00:32:07,840 --> 00:32:11,830
so yeah I mean I think the problem I'm

702
00:32:11,830 --> 00:32:14,050
seeing is it would be cool something

703
00:32:14,050 --> 00:32:16,690
like this could take off as the firmware

704
00:32:16,690 --> 00:32:19,210
building mechanism that we all use but I

705
00:32:19,210 --> 00:32:21,220
think you might have a hard time like

706
00:32:21,220 --> 00:32:25,030
gaining traction yeah

707
00:32:25,030 --> 00:32:27,970
well it's also supposed to be something

708
00:32:27,970 --> 00:32:30,850
for a very specific vision and in news

709
00:32:30,850 --> 00:32:32,880
case so it's for people who want to run

710
00:32:32,880 --> 00:32:35,920
maybe I didn't put the emphasis on that

711
00:32:35,920 --> 00:32:38,020
too much but it's for people who really

712
00:32:38,020 --> 00:32:40,270
want to run fully free stuff and that's

713
00:32:40,270 --> 00:32:45,580
kind of why I've done that it's not so

714
00:32:45,580 --> 00:32:49,060
much - yeah to support as many devices

715
00:32:49,060 --> 00:32:51,550
as possible and also it's for those

716
00:32:51,550 --> 00:32:53,560
divide those two devices that I'm really

717
00:32:53,560 --> 00:32:54,740
interested in and that

718
00:32:54,740 --> 00:32:57,350
I want to provide tight integration for

719
00:32:57,350 --> 00:33:01,580
physically okay I have actually

720
00:33:01,580 --> 00:33:04,070
questioned and earlier you told me that

721
00:33:04,070 --> 00:33:06,910
origami paper mostly consists of scripts

722
00:33:06,910 --> 00:33:09,650
that's its collection of scripts but

723
00:33:09,650 --> 00:33:11,390
later a new talk you said that you're

724
00:33:11,390 --> 00:33:14,330
planning a binary distribution so how

725
00:33:14,330 --> 00:33:16,429
much of your code is like what does your

726
00:33:16,429 --> 00:33:18,020
code base consist up at the moment

727
00:33:18,020 --> 00:33:21,860
so so yeah collection of scripts is not

728
00:33:21,860 --> 00:33:27,050
a bad description the idea is it's well

729
00:33:27,050 --> 00:33:29,330
yeah mostly mostly bash bash scripts

730
00:33:29,330 --> 00:33:31,790
tied together that provide this level of

731
00:33:31,790 --> 00:33:36,020
integration so I think that the

732
00:33:36,020 --> 00:33:37,580
interesting part about the project is

733
00:33:37,580 --> 00:33:39,800
not so much the technical part of it

734
00:33:39,800 --> 00:33:42,080
because that's and that's just yeah just

735
00:33:42,080 --> 00:33:44,420
scripting and things like this it's

736
00:33:44,420 --> 00:33:48,140
really what it's useful so - yeah

737
00:33:48,140 --> 00:33:50,570
provide images in the end so I'm not

738
00:33:50,570 --> 00:33:52,600
sure that really answers your question

739
00:33:52,600 --> 00:33:56,678
yes it does okay

740
00:34:01,630 --> 00:34:06,520
so you mentioned that basically the fact

741
00:34:06,520 --> 00:34:09,940
that firma for instance is signed with

742
00:34:09,940 --> 00:34:11,918
manufacturers key doesn't provide

743
00:34:11,918 --> 00:34:14,379
security to anybody but the manufacturer

744
00:34:14,379 --> 00:34:19,210
right so isn't there a contradiction so

745
00:34:19,210 --> 00:34:21,668
if if there is a device which doesn't

746
00:34:21,668 --> 00:34:24,820
require any verification for booting and

747
00:34:24,820 --> 00:34:28,060
somebody owns it then unbeknownst to the

748
00:34:28,060 --> 00:34:30,969
owner this could be replaced and could

749
00:34:30,969 --> 00:34:33,580
become infected with all kind of stuff

750
00:34:33,580 --> 00:34:38,310
how what do you think about this yeah so

751
00:34:38,310 --> 00:34:43,359
yeah maybe I saying that it's only that

752
00:34:43,359 --> 00:34:46,000
that's signatures only covered and

753
00:34:46,000 --> 00:34:49,540
manufacturers security issues is maybe

754
00:34:49,540 --> 00:34:55,030
yeah going saying too much but yeah if

755
00:34:55,030 --> 00:34:57,160
the question is is it better to have a

756
00:34:57,160 --> 00:34:59,950
security model that is tailored for the

757
00:34:59,950 --> 00:35:01,990
manufacturer or no security at all I

758
00:35:01,990 --> 00:35:03,670
think it's a very personal question to

759
00:35:03,670 --> 00:35:05,380
answer it depends on the threat model if

760
00:35:05,380 --> 00:35:07,119
the threat model directly involves the

761
00:35:07,119 --> 00:35:09,280
manufacturer then it's probably better

762
00:35:09,280 --> 00:35:11,890
to have no security at all because that

763
00:35:11,890 --> 00:35:13,869
way you can still run the code you want

764
00:35:13,869 --> 00:35:15,400
and you still have better guarantees

765
00:35:15,400 --> 00:35:17,800
than money just one binary that's signed

766
00:35:17,800 --> 00:35:19,210
by the manufacturer and that you don't

767
00:35:19,210 --> 00:35:20,770
know anything about so I think it's

768
00:35:20,770 --> 00:35:22,270
really a matter of personal choice and

769
00:35:22,270 --> 00:35:26,080
security I don't believe security is

770
00:35:26,080 --> 00:35:28,540
something you can answer in objective

771
00:35:28,540 --> 00:35:30,700
terms it depends on the situation it

772
00:35:30,700 --> 00:35:32,050
depends on what you want to protect

773
00:35:32,050 --> 00:35:33,910
yourself against there's no just

774
00:35:33,910 --> 00:35:37,420
security it's security versus some

775
00:35:37,420 --> 00:35:39,840
threats so it depends on the threats and

776
00:35:39,840 --> 00:35:42,340
of course for many people it might be

777
00:35:42,340 --> 00:35:47,320
fine to to to agree that the security

778
00:35:47,320 --> 00:35:49,450
model will be the manufacturer security

779
00:35:49,450 --> 00:35:51,430
model even if it includes the user other

780
00:35:51,430 --> 00:35:53,500
threats that might be fine for some

781
00:35:53,500 --> 00:35:55,359
users but I know lots of people who

782
00:35:55,359 --> 00:35:57,940
fought for for whom that's just not

783
00:35:57,940 --> 00:35:59,980
workable that just doesn't fit the bill

784
00:35:59,980 --> 00:36:01,450
so that's my point

785
00:36:01,450 --> 00:36:04,180
and again this project is for end-users

786
00:36:04,180 --> 00:36:06,730
but also people who want to regain full

787
00:36:06,730 --> 00:36:09,310
control over their devices so in that

788
00:36:09,310 --> 00:36:12,369
sense with that scope it might make more

789
00:36:12,369 --> 00:36:13,860
sense to have no

790
00:36:13,860 --> 00:36:15,990
signature verification at all than to

791
00:36:15,990 --> 00:36:19,170
have signature verification imposed by

792
00:36:19,170 --> 00:36:20,880
the manufacturer I'm not saying this is

793
00:36:20,880 --> 00:36:24,450
a case for everyone or this is a general

794
00:36:24,450 --> 00:36:26,490
statement I'm saying that there are

795
00:36:26,490 --> 00:36:29,010
eustacia's it's relevant and currently

796
00:36:29,010 --> 00:36:31,170
no one is interested in these use cases

797
00:36:31,170 --> 00:36:33,330
at all so that's kind of why I'm also

798
00:36:33,330 --> 00:36:36,020
providing that

799
00:36:38,050 --> 00:36:39,740
[Applause]

800
00:36:39,740 --> 00:36:45,540
so our microcode blobs blobs yeah I

801
00:36:45,540 --> 00:36:49,500
think so yeah okay so no no updates for

802
00:36:49,500 --> 00:36:58,770
Spectre or anything but this is mostly

803
00:36:58,770 --> 00:37:00,840
for arm stuff and on many of those

804
00:37:00,840 --> 00:37:03,510
there's no predictive execution so no

805
00:37:03,510 --> 00:37:06,050
spectral anyway but that's a side point

806
00:37:06,050 --> 00:37:09,000
so in a real early days of Linux BIOS we

807
00:37:09,000 --> 00:37:10,860
had a web page it was like the Rama

808
00:37:10,860 --> 00:37:13,830
Matic web page and you need to come in

809
00:37:13,830 --> 00:37:15,540
and do a couple drop-down boxes and they

810
00:37:15,540 --> 00:37:16,770
would give you a button in it don't you

811
00:37:16,770 --> 00:37:19,290
download your image and it didn't work

812
00:37:19,290 --> 00:37:23,940
because for a given name of a board the

813
00:37:23,940 --> 00:37:27,030
vendors kept tweaking things so that for

814
00:37:27,030 --> 00:37:29,220
a given model like even the very long

815
00:37:29,220 --> 00:37:32,070
you know product part number they still

816
00:37:32,070 --> 00:37:34,020
tweak things and buried the differences

817
00:37:34,020 --> 00:37:36,480
in the firmware that does that happen in

818
00:37:36,480 --> 00:37:38,160
the boards that you're targeting do you

819
00:37:38,160 --> 00:37:41,550
think are they all kind of always be

820
00:37:41,550 --> 00:37:44,190
wired the same way yeah there is kind of

821
00:37:44,190 --> 00:37:46,290
this expectation and it's a problem yeah

822
00:37:46,290 --> 00:37:48,300
I agree that's providing fixed

823
00:37:48,300 --> 00:37:50,850
configuration kind of assumes that the

824
00:37:50,850 --> 00:37:52,620
devices are all the same and this may

825
00:37:52,620 --> 00:37:54,450
not be the case in practice so yeah

826
00:37:54,450 --> 00:37:56,820
there is a problem I'm not too sure how

827
00:37:56,820 --> 00:37:59,400
to tackle that maybe yeah making

828
00:37:59,400 --> 00:38:01,950
different different device names in the

829
00:38:01,950 --> 00:38:04,170
build system that each match one of the

830
00:38:04,170 --> 00:38:06,540
configuration that's not ideal and I

831
00:38:06,540 --> 00:38:08,970
don't have really a good solution to

832
00:38:08,970 --> 00:38:10,890
that you may need to have a serial

833
00:38:10,890 --> 00:38:13,620
number believe it or not is yeah yeah

834
00:38:13,620 --> 00:38:16,050
yeah it's gonna be awful probably but in

835
00:38:16,050 --> 00:38:18,150
many cases though you can the dis

836
00:38:18,150 --> 00:38:21,460
approach still kind of applies like

837
00:38:21,460 --> 00:38:24,370
full full ya various types of devices

838
00:38:24,370 --> 00:38:30,550
it's just always the same so yeah I got

839
00:38:30,550 --> 00:38:32,920
asked from work so the really neat thing

840
00:38:32,920 --> 00:38:36,250
would be if you were able with something

841
00:38:36,250 --> 00:38:40,870
like that to get in the early stages of

842
00:38:40,870 --> 00:38:43,120
design cycles in other words a vendor

843
00:38:43,120 --> 00:38:45,850
designed a board to work with this

844
00:38:45,850 --> 00:38:47,830
mmm-hmm so I don't know it's just a

845
00:38:47,830 --> 00:38:48,820
thought I don't know if that's even

846
00:38:48,820 --> 00:38:51,580
possible but yeah maybe some kind of

847
00:38:51,580 --> 00:38:53,440
runtime involvement could work like you

848
00:38:53,440 --> 00:38:56,950
run a first piece that detects the like

849
00:38:56,950 --> 00:38:58,840
the specificities of the device and then

850
00:38:58,840 --> 00:39:00,130
you fit that back through the build

851
00:39:00,130 --> 00:39:02,440
system and those so it cooks kind of the

852
00:39:02,440 --> 00:39:06,760
right image so literally that there'd be

853
00:39:06,760 --> 00:39:10,240
a product from a company that said works

854
00:39:10,240 --> 00:39:11,770
with origami you know what I mean

855
00:39:11,770 --> 00:39:14,200
so they when they laid out their PC

856
00:39:14,200 --> 00:39:15,490
board they would have it in mind that

857
00:39:15,490 --> 00:39:17,050
they're doing a product designed to work

858
00:39:17,050 --> 00:39:19,390
with this thing you're doing so you get

859
00:39:19,390 --> 00:39:22,690
actually into the then into a no DM at

860
00:39:22,690 --> 00:39:24,280
like the very early stages of the

861
00:39:24,280 --> 00:39:27,580
process of design okay so just a slide

862
00:39:27,580 --> 00:39:32,710
all right yeah are there any more

863
00:39:32,710 --> 00:39:41,140
questions are the dependencies on online

864
00:39:41,140 --> 00:39:41,980
resources

865
00:39:41,980 --> 00:39:44,860
how many differences are there

866
00:39:44,860 --> 00:39:46,960
dependencies on online resources like

867
00:39:46,960 --> 00:39:48,820
talk about something that's something I

868
00:39:48,820 --> 00:39:50,740
didn't mention but I would also very

869
00:39:50,740 --> 00:39:53,620
much like this to be kind of contained

870
00:39:53,620 --> 00:39:55,900
so that you could put all the required

871
00:39:55,900 --> 00:39:58,090
stuff on like a USB stick and you

872
00:39:58,090 --> 00:39:59,920
wouldn't need to download anything extra

873
00:39:59,920 --> 00:40:02,050
to get everything to build and to set it

874
00:40:02,050 --> 00:40:04,120
up you know yeah I'm thinking more and

875
00:40:04,120 --> 00:40:06,670
more but like people in Cuba who don't

876
00:40:06,670 --> 00:40:08,590
who have very expensive access to the

877
00:40:08,590 --> 00:40:10,270
Internet well if we can still get stuff

878
00:40:10,270 --> 00:40:13,030
like USB media and things like that and

879
00:40:13,030 --> 00:40:15,160
these people also deserve to have access

880
00:40:15,160 --> 00:40:17,890
to free software so yeah I would very

881
00:40:17,890 --> 00:40:20,290
much like and I will try to make it so

882
00:40:20,290 --> 00:40:22,240
that this this project can be kind of

883
00:40:22,240 --> 00:40:24,040
contained and you can have a release

884
00:40:24,040 --> 00:40:26,860
that's just sufficient to rebuild the

885
00:40:26,860 --> 00:40:29,500
image so also be able to modify it right

886
00:40:29,500 --> 00:40:31,990
not just binaries but to have all the

887
00:40:31,990 --> 00:40:34,370
sufficient source code to rebuild images

888
00:40:34,370 --> 00:40:39,100
yeah that's very desirable I agree

889
00:40:39,100 --> 00:40:43,610
although what I saw what would be

890
00:40:43,610 --> 00:40:46,820
important for for at least a long time

891
00:40:46,820 --> 00:40:51,680
stuff it's that any online resources

892
00:40:51,680 --> 00:40:54,170
that they would be archived in any way

893
00:40:54,170 --> 00:40:57,470
maybe archive.org or something yeah so

894
00:40:57,470 --> 00:41:00,590
often serve locations maybe for for very

895
00:41:00,590 --> 00:41:04,040
specific devices the web pages have a

896
00:41:04,040 --> 00:41:06,020
dropped and so you're just lost because

897
00:41:06,020 --> 00:41:09,490
you need a tool a or PE or something and

898
00:41:09,490 --> 00:41:13,610
it's not accessible anymore so my idea

899
00:41:13,610 --> 00:41:16,910
would be to to have everything to build

900
00:41:16,910 --> 00:41:19,540
some some specific firmware to have it

901
00:41:19,540 --> 00:41:24,140
archived or in parallel archived maybe

902
00:41:24,140 --> 00:41:29,330
one of the archive reports so the the

903
00:41:29,330 --> 00:41:32,060
solution I would have to that is so in

904
00:41:32,060 --> 00:41:34,520
the releases I mentioned I want to be

905
00:41:34,520 --> 00:41:36,110
doing releases at some point it's not

906
00:41:36,110 --> 00:41:38,420
just binary releases it's also sauce

907
00:41:38,420 --> 00:41:41,000
releases and so you can mirror that and

908
00:41:41,000 --> 00:41:42,530
you can make it so that it spread all

909
00:41:42,530 --> 00:41:44,210
over the world and that eventually the

910
00:41:44,210 --> 00:41:46,040
knowledge doesn't disappear because

911
00:41:46,040 --> 00:41:48,260
indeed that's that's a pretty serious

912
00:41:48,260 --> 00:41:56,360
problem any more questions okay thank

913
00:41:56,360 --> 00:41:57,620
you give another round of applause for

914
00:41:57,620 --> 00:41:59,400
Holocaust you have ski

915
00:41:59,400 --> 00:42:04,300
[Applause]

916
00:42:04,300 --> 00:42:11,179
[Music]

