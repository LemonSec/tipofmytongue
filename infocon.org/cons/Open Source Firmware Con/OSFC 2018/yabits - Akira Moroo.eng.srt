1
00:00:00,000 --> 00:00:04,069
[Music]

2
00:00:04,069 --> 00:00:07,680
our next talk is about yam it's a quite

3
00:00:07,680 --> 00:00:12,570
different way of approaching you AFI so

4
00:00:12,570 --> 00:00:15,330
please give a big round of applause for

5
00:00:15,330 --> 00:00:17,380
a Korean uru

6
00:00:17,380 --> 00:00:22,439
[Applause]

7
00:00:23,820 --> 00:00:26,730
thank you in this talk I'll talk about a

8
00:00:26,730 --> 00:00:32,869
bit yet another UEFI called payroll and

9
00:00:33,200 --> 00:00:39,960
hidden others craft of this talk is UEFI

10
00:00:39,960 --> 00:00:43,559
is a direct standard bio specification

11
00:00:43,559 --> 00:00:52,020
and and and there's two types of UEFI

12
00:00:52,020 --> 00:00:54,420
implementation across the family and

13
00:00:54,420 --> 00:01:00,300
piano quad and the boss had each problem

14
00:01:00,300 --> 00:01:04,860
problems and so I proposed rabbits a new

15
00:01:04,860 --> 00:01:08,430
UEFI implementation and it's a fast and

16
00:01:08,430 --> 00:01:13,740
right lightwei lightweight so and this

17
00:01:13,740 --> 00:01:17,939
is my bio I'm Akira model graduates

18
00:01:17,939 --> 00:01:19,860
today that Tokyo University of Science

19
00:01:19,860 --> 00:01:24,420
and I'm measuring major in electrical

20
00:01:24,420 --> 00:01:28,290
engineering and I'm deciding the field

21
00:01:28,290 --> 00:01:32,369
of software engineering and I'm

22
00:01:32,369 --> 00:01:35,939
interesting in family court UEFI and the

23
00:01:35,939 --> 00:01:40,549
birth process of operating systems and I

24
00:01:40,549 --> 00:01:46,409
have boated Emory Emory is a small

25
00:01:46,409 --> 00:01:49,409
subset of Ruby language language and

26
00:01:49,409 --> 00:01:58,619
it's a ported to UEFI shell in 2015 and

27
00:01:58,619 --> 00:02:06,770
I started you have its project in 2017

28
00:02:06,770 --> 00:02:11,400
so maybe people in this room know about

29
00:02:11,400 --> 00:02:14,120
this and

30
00:02:15,530 --> 00:02:22,519
about but let's recap about by BIOS

31
00:02:22,760 --> 00:02:26,519
Burroughs there are two types of biases

32
00:02:26,519 --> 00:02:31,980
for x86-based of P shield regazzi BIOS

33
00:02:31,980 --> 00:02:36,480
and UEFI a legacy BIOS is the original

34
00:02:36,480 --> 00:02:44,430
yes is a policy of IBM PC in 1981 which

35
00:02:44,430 --> 00:02:50,310
is very very whole or the PC and it runs

36
00:02:50,310 --> 00:02:56,069
in 16 we are remote for backward

37
00:02:56,069 --> 00:02:59,069
compatibility zone and it doesn't does

38
00:02:59,069 --> 00:03:02,840
not stand us right for so there are many

39
00:03:02,840 --> 00:03:07,099
incompatible extension for for the

40
00:03:07,099 --> 00:03:10,200
relationship buyers so it is not

41
00:03:10,200 --> 00:03:14,970
suitable for modern x86 t-64 based

42
00:03:14,970 --> 00:03:22,010
machines so you fi proposed in 2000 2005

43
00:03:22,010 --> 00:03:27,569
so unify the unified extensible firmware

44
00:03:27,569 --> 00:03:32,370
interface and which is based on efi the

45
00:03:32,370 --> 00:03:44,519
wrapper for a 64 by Intel and it's if it

46
00:03:44,519 --> 00:03:48,389
is standard by UEFI forearm and you can

47
00:03:48,389 --> 00:03:53,849
find the specification rang and and UVF

48
00:03:53,849 --> 00:03:57,000
I support many many architecture right

49
00:03:57,000 --> 00:04:06,989
from is 60 is 64 is sixties 32x 64 and

50
00:04:06,989 --> 00:04:11,639
64 which is 5 and MIPS

51
00:04:11,639 --> 00:04:18,690
so and compared with legacy BIOS we 5-2

52
00:04:18,690 --> 00:04:23,010
provides many a lot of protocols

53
00:04:23,010 --> 00:04:30,510
protocol so and almost all x86 bases PC

54
00:04:30,510 --> 00:04:37,710
assist with UEFI firmware and next I'll

55
00:04:37,710 --> 00:04:40,290
talk about the current unifying

56
00:04:40,290 --> 00:04:47,670
permutation as I as I said in previous

57
00:04:47,670 --> 00:04:54,680
thread just two types of two types of

58
00:04:54,680 --> 00:04:59,730
UEFA implementation and it can occur and

59
00:04:59,730 --> 00:05:04,950
as a cross family and can cause open

60
00:05:04,950 --> 00:05:06,720
source of unified reference

61
00:05:06,720 --> 00:05:09,750
implementations developed by Intel and

62
00:05:09,750 --> 00:05:14,480
its communities and cross family is

63
00:05:14,480 --> 00:05:18,870
developed by BIOS vendor for members

64
00:05:18,870 --> 00:05:24,060
being vendors and and cross family is

65
00:05:24,060 --> 00:05:28,950
based on TNT on aqua and adding some

66
00:05:28,950 --> 00:05:36,710
special features like a very graphical

67
00:05:36,710 --> 00:05:42,660
graphical or gaining support and is

68
00:05:42,660 --> 00:05:50,090
rated from ricotta unis a last last year

69
00:05:50,150 --> 00:05:55,230
and this figure shows and you ecosystem

70
00:05:55,230 --> 00:06:05,360
of UEFI and just the same Center is his

71
00:06:05,360 --> 00:06:09,210
key aqua and which is open source

72
00:06:09,210 --> 00:06:15,270
project and vendors uses open - open

73
00:06:15,270 --> 00:06:20,400
source source repertory and provide - as

74
00:06:20,400 --> 00:06:26,670
a Oh

75
00:06:26,670 --> 00:06:30,840
as a buyer we embarrass and and the end

76
00:06:30,840 --> 00:06:33,980
user the user is that

77
00:06:33,980 --> 00:06:42,270
is that the path the BIOS and and the

78
00:06:42,270 --> 00:06:50,750
problems in current UEFI is bogus remain

79
00:06:50,750 --> 00:06:56,850
fixed if the vendor does not been does

80
00:06:56,850 --> 00:07:03,690
do not provide updates so and the

81
00:07:03,690 --> 00:07:06,750
feature such as graph crafter or

82
00:07:06,750 --> 00:07:12,390
something featured in ship it results in

83
00:07:12,390 --> 00:07:17,160
a verification and users can cannot fix

84
00:07:17,160 --> 00:07:21,900
the bug unless they reverse engineering

85
00:07:21,900 --> 00:07:30,420
the firmware and and the most of across

86
00:07:30,420 --> 00:07:34,950
family has used uses a big uses a piano

87
00:07:34,950 --> 00:07:38,460
quad code base so they have a same brand

88
00:07:38,460 --> 00:07:41,220
to brand ability even cheaply from

89
00:07:41,220 --> 00:07:43,400
different vendors

90
00:07:43,400 --> 00:07:47,850
this example is a Santa structure which

91
00:07:47,850 --> 00:07:56,160
is discovered by a tremor handsome so I

92
00:07:56,160 --> 00:08:00,510
think Jade problems when using cross the

93
00:08:00,510 --> 00:08:05,750
firmware so case well a simple solution

94
00:08:05,750 --> 00:08:13,140
use cravat yes copier is the open source

95
00:08:13,140 --> 00:08:16,470
bias platform and it's supposed arias

96
00:08:16,470 --> 00:08:22,230
members and cupboard is a machine

97
00:08:22,230 --> 00:08:27,990
dependent part and pay Road and parity

98
00:08:27,990 --> 00:08:30,540
is a machine independent part and which

99
00:08:30,540 --> 00:08:35,270
we can put up a road to a free-standing

100
00:08:35,270 --> 00:08:41,630
of executables and gether

101
00:08:41,880 --> 00:08:49,680
example of what kind of a a road is see

102
00:08:49,680 --> 00:08:54,570
bios tianhua zero-gravity green ex-con

103
00:08:54,570 --> 00:09:00,840
Aaron I was so so we can use T an aqua

104
00:09:00,840 --> 00:09:04,440
as cobalt Pharaoh in Corbett payroll so

105
00:09:04,440 --> 00:09:09,360
key an aqua on Corbett is uncertain that

106
00:09:09,360 --> 00:09:16,080
previous programs but I don't think so

107
00:09:16,080 --> 00:09:19,650
because piano Co is that too big from

108
00:09:19,650 --> 00:09:22,290
tab you know just booting operating

109
00:09:22,290 --> 00:09:25,730
system this unused device drivers and

110
00:09:25,730 --> 00:09:34,010
protocols and because of this it's

111
00:09:34,010 --> 00:09:38,730
pretty very much and text wrong good

112
00:09:38,730 --> 00:09:43,890
time so I think these are four

113
00:09:43,890 --> 00:09:47,550
requirements for for a new UEFI

114
00:09:47,550 --> 00:09:52,260
implementation well open source to

115
00:09:52,260 --> 00:09:55,950
another code base from key and aqua 3

116
00:09:55,950 --> 00:10:02,070
and small footprint and for booting fast

117
00:10:02,070 --> 00:10:05,550
than other implementations so I propose

118
00:10:05,550 --> 00:10:08,640
rabbits yet generally if I'm princess on

119
00:10:08,640 --> 00:10:16,050
the design of Yabut is a very simple as

120
00:10:16,050 --> 00:10:20,100
just focused on just booting operating

121
00:10:20,100 --> 00:10:25,200
system and so it provides just Nemo

122
00:10:25,200 --> 00:10:28,770
futures only good services and the

123
00:10:28,770 --> 00:10:33,990
runtimes obviously yeah it is

124
00:10:33,990 --> 00:10:39,110
just a corporate one quaver to payroll

125
00:10:39,110 --> 00:10:43,770
go to payroll and it has same interface

126
00:10:43,770 --> 00:10:50,550
as same UEFI specification yes it's of

127
00:10:50,550 --> 00:10:52,279
course because it's

128
00:10:52,279 --> 00:10:58,389
it does the main purpose is booting I

129
00:10:58,389 --> 00:11:06,279
you you you fi sorry

130
00:11:06,279 --> 00:11:11,629
booting Britain operating system from

131
00:11:11,629 --> 00:11:19,549
normal if I if I family so and yet

132
00:11:19,549 --> 00:11:23,769
hasn't no GSM mode which is provides a

133
00:11:23,769 --> 00:11:30,730
compatibility for from from from

134
00:11:30,850 --> 00:11:34,850
compatibility from legacy BIOS and so it

135
00:11:34,850 --> 00:11:43,179
just trust the UEFI a pure UEFI for - mm

136
00:11:43,179 --> 00:11:53,809
- mm 24 2007 2020 and you have to

137
00:11:53,809 --> 00:11:58,339
provide of following full-featured boot

138
00:11:58,339 --> 00:12:03,009
services runtime services EFI system

139
00:12:03,009 --> 00:12:06,369
supports and GUI the partition to

140
00:12:06,369 --> 00:12:10,730
charities great support support and just

141
00:12:10,730 --> 00:12:16,779
this for feature so this is very

142
00:12:16,779 --> 00:12:26,980
everyone have feed such food seekers of

143
00:12:26,980 --> 00:12:32,959
UEFI this is with somehow simply

144
00:12:32,959 --> 00:12:38,709
simplified but model but I think that

145
00:12:38,709 --> 00:12:44,089
Dixie in Dixie faith did as many drivers

146
00:12:44,089 --> 00:12:49,639
wrote it so I think if the drivers just

147
00:12:49,639 --> 00:12:55,489
a few only two or three device drawing

148
00:12:55,489 --> 00:12:59,119
in the developers wrote it we can show

149
00:12:59,119 --> 00:13:02,239
them that boot time with time also found

150
00:13:02,239 --> 00:13:04,809
somewhere

151
00:13:05,110 --> 00:13:11,570
so so and the implementation the

152
00:13:11,570 --> 00:13:20,360
implantation with rabbit is from from me

153
00:13:20,360 --> 00:13:22,720
no cow s which is a a unix-like

154
00:13:22,720 --> 00:13:25,870
operating system written from scratch

155
00:13:25,870 --> 00:13:29,960
and it has small footprints and suitable

156
00:13:29,960 --> 00:13:34,400
for embedding system the description

157
00:13:34,400 --> 00:13:38,810
says and and what is most important

158
00:13:38,810 --> 00:13:44,350
thing is me no cows has includes a

159
00:13:44,350 --> 00:13:47,240
bootable boot Rhoda and the UEFI for

160
00:13:47,240 --> 00:13:52,690
booting Menaka OS itself so and just

161
00:13:52,690 --> 00:13:58,640
UEFI or minica OS in x86 is something

162
00:13:58,640 --> 00:14:03,440
like T an aqua do a duet package like

163
00:14:03,440 --> 00:14:07,700
like support so it's boots from legacy

164
00:14:07,700 --> 00:14:12,850
BIOS and land blanching the unify itself

165
00:14:12,850 --> 00:14:19,780
so I putted this UEFI of Menaka us to

166
00:14:19,780 --> 00:14:24,710
cooperate pair to qualify rod and make

167
00:14:24,710 --> 00:14:32,870
it run on the dermis machine and yes

168
00:14:32,870 --> 00:14:39,050
with country support to to architecture

169
00:14:39,050 --> 00:14:47,600
is as 32 and x64 and yet is deeply

170
00:14:47,600 --> 00:14:51,920
dependent on library life perros which

171
00:14:51,920 --> 00:14:55,880
is like library for covers pay payroll

172
00:14:55,880 --> 00:15:02,770
and i also ported

173
00:15:02,770 --> 00:15:08,390
library live perils to x64 to use the

174
00:15:08,390 --> 00:15:13,540
code base and so I added some

175
00:15:13,540 --> 00:15:16,850
translations from

176
00:15:16,850 --> 00:15:20,990
protected mode - wrong wrong mode

177
00:15:20,990 --> 00:15:26,760
and yeah which had only two device

178
00:15:26,760 --> 00:15:35,160
driver just IDE and HEA so and yeah it

179
00:15:35,160 --> 00:15:38,610
is open source project so here this

180
00:15:38,610 --> 00:15:44,580
thing tell the link he his source code

181
00:15:44,580 --> 00:15:50,550
is available on this link and the

182
00:15:50,550 --> 00:15:57,300
license is GPL but with three so yes you

183
00:15:57,300 --> 00:16:03,170
can try you can't right so let's see the

184
00:16:03,170 --> 00:16:27,620
I show you the demo this is shown on

185
00:16:27,620 --> 00:16:35,880
young qme new it's good yes it's too

186
00:16:35,880 --> 00:16:40,550
fast to show you but

187
00:16:43,239 --> 00:16:50,449
thank you thank you but this this faith

188
00:16:50,449 --> 00:16:52,220
or it's already put up

189
00:16:52,220 --> 00:16:57,410
OpenBSD Pitroda and it's both yes

190
00:16:57,410 --> 00:17:02,779
OpenBSD boot is very wrong so skip skip

191
00:17:02,779 --> 00:17:09,699
yes we can use share share as normal and

192
00:17:09,699 --> 00:17:17,569
using some music Java web servers so yes

193
00:17:17,569 --> 00:17:21,369
you can is it so as a normal normal

194
00:17:21,369 --> 00:17:28,789
operating systems so next I show you the

195
00:17:28,789 --> 00:17:33,519
comparison the boot time rabbits and

196
00:17:33,519 --> 00:17:37,669
default default bios of random things

197
00:17:37,669 --> 00:17:45,610
but x-23 all okay

198
00:17:45,650 --> 00:17:49,590
[Laughter]

199
00:17:59,030 --> 00:18:14,070
okay so so so a bear evaluated the good

200
00:18:14,070 --> 00:18:18,750
time on the machine on your machine so

201
00:18:18,750 --> 00:18:22,110
the build time of Labatt's is two times

202
00:18:22,110 --> 00:18:26,780
faster than that of the photo of

203
00:18:26,780 --> 00:18:31,980
ThinkPad sink but x-23 wall and I also

204
00:18:31,980 --> 00:18:37,200
tested on on QM with over EMF and the

205
00:18:37,200 --> 00:18:41,040
boot time is obvious nine times faster

206
00:18:41,040 --> 00:18:50,810
than that of OPM and whatever footprint

207
00:18:50,810 --> 00:18:55,920
and by I compared the binary for QE came

208
00:18:55,920 --> 00:19:03,330
and said is that Ian aqua and Aubry MF

209
00:19:03,330 --> 00:19:07,770
and Ovid's and can quite tny itself and

210
00:19:07,770 --> 00:19:11,970
the cupboard cupboard cupboards and this

211
00:19:11,970 --> 00:19:15,360
shows the photo print of rabbit is ten

212
00:19:15,360 --> 00:19:18,090
times more ten times smaller and smaller

213
00:19:18,090 --> 00:19:29,100
than that of TR aqua and so give me

214
00:19:29,100 --> 00:19:35,490
given many many to-do lists as a feature

215
00:19:35,490 --> 00:19:37,440
work

216
00:19:37,440 --> 00:19:45,510
I want yes currently supports only x86

217
00:19:45,510 --> 00:19:52,640
space spaces GPU so I want to add other

218
00:19:52,640 --> 00:19:58,080
architecture supports and yes has does

219
00:19:58,080 --> 00:20:01,230
not have country does not have setting

220
00:20:01,230 --> 00:20:08,070
menu so I just other sitting menus for -

221
00:20:08,070 --> 00:20:10,970
yeah bits and

222
00:20:12,250 --> 00:20:18,570
people-people concern about the security

223
00:20:18,570 --> 00:20:24,910
we need you need security secure boot so

224
00:20:24,910 --> 00:20:30,730
security support really is its desired

225
00:20:30,730 --> 00:20:39,840
and as showed before you have it support

226
00:20:39,840 --> 00:20:44,770
provides just a very few protocol like

227
00:20:44,770 --> 00:20:47,460
same protects the input or output

228
00:20:47,460 --> 00:20:50,910
protocol so it does not provide

229
00:20:50,910 --> 00:20:55,240
graphical at about protocol so I will

230
00:20:55,240 --> 00:21:02,530
add as graphic gob support and the

231
00:21:02,530 --> 00:21:06,960
bigger the biggest milestone in

232
00:21:06,960 --> 00:21:11,500
supporting Windows boot boots boot but

233
00:21:11,500 --> 00:21:15,700
it really is maybe very very hard tasks

234
00:21:15,700 --> 00:21:26,100
so and yes yeah had just one

235
00:21:26,100 --> 00:21:31,150
contributor me and I'm looking for some

236
00:21:31,150 --> 00:21:34,240
welcome to contribute to tribute to so

237
00:21:34,240 --> 00:21:39,190
please give give us a pro request and

238
00:21:39,190 --> 00:21:50,830
please contribute so concrete as a

239
00:21:50,830 --> 00:21:54,970
conclusion UEFI replaced legacy biasing

240
00:21:54,970 --> 00:21:58,570
legacy virus and there's two types of

241
00:21:58,570 --> 00:22:03,310
you a UF UF I implementation and as

242
00:22:03,310 --> 00:22:08,170
across family us and channel is to ROG

243
00:22:08,170 --> 00:22:10,810
interviewer just booting operating

244
00:22:10,810 --> 00:22:13,360
systems so I propose jabot which is a

245
00:22:13,360 --> 00:22:16,390
fast and light way to yet another UEFI

246
00:22:16,390 --> 00:22:20,710
implementation and it's designed for

247
00:22:20,710 --> 00:22:23,040
embedding system and the parameter

248
00:22:23,040 --> 00:22:31,830
crowd the Franco is the official site of

249
00:22:31,830 --> 00:22:37,230
the Abbott's I provided so let's take a

250
00:22:37,230 --> 00:22:49,940
look at this page so that so and I'm

251
00:22:49,940 --> 00:22:57,270
this rabbit with just my private project

252
00:22:57,270 --> 00:23:05,370
so I'm working for sponsor something so

253
00:23:05,370 --> 00:23:09,690
that I can continuously working on this

254
00:23:09,690 --> 00:23:13,760
project thank you for listening

255
00:23:13,760 --> 00:23:20,419
[Applause]

256
00:23:20,419 --> 00:23:24,570
thank you for doing this talk okay we

257
00:23:24,570 --> 00:23:26,039
have a lot of time for questions oh they

258
00:23:26,039 --> 00:23:33,720
are questions hey thanks thanks for the

259
00:23:33,720 --> 00:23:35,460
nice presentation you should brother

260
00:23:35,460 --> 00:23:40,500
from Intel can you hear me oh yeah so my

261
00:23:40,500 --> 00:23:42,360
question is that you told that you are

262
00:23:42,360 --> 00:23:44,460
using lip bellows right for all the

263
00:23:44,460 --> 00:23:47,179
drivers you are not using EFI any

264
00:23:47,179 --> 00:23:50,549
services and all for the driver ran all

265
00:23:50,549 --> 00:23:53,190
right for example your SATA or your MMC

266
00:23:53,190 --> 00:23:56,640
different booting media right so you are

267
00:23:56,640 --> 00:24:00,299
using lip bellowed sorry yeah can you go

268
00:24:00,299 --> 00:24:04,309
to your some flight earlier sorry yeah

269
00:24:04,309 --> 00:24:07,110
yeah maybe just you start with that and

270
00:24:07,110 --> 00:24:10,320
just stop you lip bellowed or somewhere

271
00:24:10,320 --> 00:24:17,940
you mentioned sorry and this which yeah

272
00:24:17,940 --> 00:24:20,970
yeah yeah so can you just see the second

273
00:24:20,970 --> 00:24:22,529
the SEC second line that you mentioned

274
00:24:22,529 --> 00:24:24,710
that deeply depended on the lip bellowed

275
00:24:24,710 --> 00:24:29,669
right so so today the depth charge depth

276
00:24:29,669 --> 00:24:32,100
charge is a payload for Chrome OS right

277
00:24:32,100 --> 00:24:34,320
yeah so depth charge is heavily depend

278
00:24:34,320 --> 00:24:36,480
on the lip payload yeah right

279
00:24:36,480 --> 00:24:39,510
so from Intel side the Intel run lots of

280
00:24:39,510 --> 00:24:42,330
their validation with ufi shell right

281
00:24:42,330 --> 00:24:44,490
because we use a Windows what we use

282
00:24:44,490 --> 00:24:47,370
UEFI and we have lots of application

283
00:24:47,370 --> 00:24:49,770
like for our validation side that we run

284
00:24:49,770 --> 00:24:52,649
from the efi shell but when it comes to

285
00:24:52,649 --> 00:24:55,380
the Chrome OS we cannot run the same

286
00:24:55,380 --> 00:24:57,899
service with the UEFI shell because if I

287
00:24:57,899 --> 00:25:00,480
use its own native stack and we want to

288
00:25:00,480 --> 00:25:02,610
run something based on the lip Bell or

289
00:25:02,610 --> 00:25:04,590
service and all right so there I could

290
00:25:04,590 --> 00:25:06,289
see a good opportunity to use your

291
00:25:06,289 --> 00:25:10,740
payload and I'm not sure that do you

292
00:25:10,740 --> 00:25:13,140
have any shell kind of environment where

293
00:25:13,140 --> 00:25:15,809
you stop your system and we can run the

294
00:25:15,809 --> 00:25:22,380
native shell applications and all so

295
00:25:22,380 --> 00:25:27,919
yeah the Chris Jones

296
00:25:27,960 --> 00:25:43,799
if the best / if the question is yes oh

297
00:25:43,799 --> 00:25:45,659
nevermind so I just don't mean to ask

298
00:25:45,659 --> 00:25:46,380
you that

299
00:25:46,380 --> 00:25:48,870
do you have any console where you stop

300
00:25:48,870 --> 00:25:50,909
your system and you can run some

301
00:25:50,909 --> 00:25:55,320
application before boarding to OS yes

302
00:25:55,320 --> 00:26:01,200
it provides the provide Hong Kong out

303
00:26:01,200 --> 00:26:07,789
from out Kong inks researchers as they

304
00:26:07,789 --> 00:26:13,970
had unified special cells so I yes I

305
00:26:13,970 --> 00:26:19,919
provide provided Kong in Hong Kong out

306
00:26:19,919 --> 00:26:27,990
or STD STD era to from live Pedro the

307
00:26:27,990 --> 00:26:33,210
printer printer something so so yes I

308
00:26:33,210 --> 00:26:34,740
provided never mind I'll just send you

309
00:26:34,740 --> 00:26:36,120
an email so that will be help you to

310
00:26:36,120 --> 00:26:38,029
summarize I will send you an email

311
00:26:38,029 --> 00:26:42,980
so yeah no problem yeah welcome possible

312
00:26:43,399 --> 00:26:47,360
okay a question

313
00:26:49,630 --> 00:26:53,330
thank you what sort of licensing do you

314
00:26:53,330 --> 00:26:56,809
have right after okay

315
00:26:56,809 --> 00:27:05,570
like if yes no cows with PPO version

316
00:27:05,570 --> 00:27:11,360
version 3 so you have it also rising

317
00:27:11,360 --> 00:27:16,309
standard term of GPL version 3 and some

318
00:27:16,309 --> 00:27:18,740
some code code

319
00:27:18,740 --> 00:27:24,830
imported from other project with as BSP

320
00:27:24,830 --> 00:27:30,190
the dry chef so yes but me but mainly

321
00:27:30,190 --> 00:27:40,790
GPL v3 so I'm interested in the

322
00:27:40,790 --> 00:27:42,920
comparisons you're making on time with

323
00:27:42,920 --> 00:27:46,429
haloed because I mean the the speed that

324
00:27:46,429 --> 00:27:49,010
you're getting is very good but you're

325
00:27:49,010 --> 00:27:51,860
comparing the the original bios which

326
00:27:51,860 --> 00:27:54,080
has a number of capabilities you have

327
00:27:54,080 --> 00:27:56,360
imported and a number of drivers then

328
00:27:56,360 --> 00:28:00,380
you don't have like GOP and the UEFI

329
00:28:00,380 --> 00:28:04,790
payload at a fixed configuration so to

330
00:28:04,790 --> 00:28:06,710
get the the scale down you were looking

331
00:28:06,710 --> 00:28:08,750
for in yeah bets did you consider taking

332
00:28:08,750 --> 00:28:11,000
the payload and rebuilding it with some

333
00:28:11,000 --> 00:28:13,700
of the modules you didn't need removed

334
00:28:13,700 --> 00:28:15,200
in other words taking the modularity

335
00:28:15,200 --> 00:28:16,910
ardiente on accordance scaling a

336
00:28:16,910 --> 00:28:19,790
solution down rather than you know ever

337
00:28:19,790 --> 00:28:21,590
using a scaled-down solution to compare

338
00:28:21,590 --> 00:28:23,030
to the speed you're getting so that

339
00:28:23,030 --> 00:28:25,429
you're essentially comparing the same

340
00:28:25,429 --> 00:28:27,920
type of payload in tiana core to the

341
00:28:27,920 --> 00:28:31,090
exact capabilities you have the abbot's

342
00:28:31,090 --> 00:28:42,400
yes i think i've when i generated

343
00:28:42,400 --> 00:28:44,929
generated generator

344
00:28:44,929 --> 00:28:52,700
Kabu Kabu too long i fixed fix the size

345
00:28:52,700 --> 00:28:56,420
of size of caboodle fixed the corporate

346
00:28:56,420 --> 00:29:02,650
route long side to fit fit fit as

347
00:29:02,960 --> 00:29:09,090
the size of the payrolls federal

348
00:29:09,090 --> 00:29:22,220
parasites so yes this is this is I I

349
00:29:22,220 --> 00:29:34,500
tried to equal equal equal condition

350
00:29:34,500 --> 00:29:44,480
tried to provide equal equal sorry

351
00:29:45,169 --> 00:29:55,169
provide equal equal condition to tea and

352
00:29:55,169 --> 00:30:04,799
Wawa over MFI Java so yes quien tiene

353
00:30:04,799 --> 00:30:13,830
cool quiet piano piano quality a road

354
00:30:13,830 --> 00:30:17,669
and corbett itself and yeah yeah

355
00:30:17,669 --> 00:30:23,120
 yeah it's also a yeah

356
00:30:23,120 --> 00:30:26,520
yeah and combat itself so it's

357
00:30:26,520 --> 00:30:30,659
it's it can be I think it's young

358
00:30:30,659 --> 00:30:36,809
compared with with comparing comparable

359
00:30:36,809 --> 00:30:40,440
yeah so the tea encore plus Corbett that

360
00:30:40,440 --> 00:30:44,789
you have has GOP or no GOP oh sorry the

361
00:30:44,789 --> 00:30:46,740
Tiano core example you have does it have

362
00:30:46,740 --> 00:30:49,140
a GOP driver or graphics driver of some

363
00:30:49,140 --> 00:30:56,580
kind yeah the Tiano Court does the Tiano

364
00:30:56,580 --> 00:30:58,470
core example you have initialized

365
00:30:58,470 --> 00:31:06,900
graphics does it turn on graphics yeah

366
00:31:06,900 --> 00:31:08,760
well we'll discuss offline we can talk

367
00:31:08,760 --> 00:31:10,050
outside

368
00:31:10,050 --> 00:31:16,620
sorry to ask you a question about the

369
00:31:16,620 --> 00:31:20,910
piano core right what what what no no

370
00:31:20,910 --> 00:31:23,040
but but yeah yeah but this is what you

371
00:31:23,040 --> 00:31:25,890
are asking does this rabbit is actually

372
00:31:25,890 --> 00:31:35,520
stripped Yannick all right yeah we can

373
00:31:35,520 --> 00:31:39,200
talk we can talk offline thank you

374
00:31:39,200 --> 00:31:50,520
okay right is it possible to use rabbits

375
00:31:50,520 --> 00:31:54,270
to build a Dixie add exe that would then

376
00:31:54,270 --> 00:32:01,490
be usable in Tiano core yeah between

377
00:32:01,490 --> 00:32:05,000
everything increase the entire entire

378
00:32:05,000 --> 00:32:10,530
face of UF UF I phases so maybe it

379
00:32:10,530 --> 00:32:14,880
cannot cannot no no the other thing

380
00:32:14,880 --> 00:32:20,190
in piano cause no but are there DX's

381
00:32:20,190 --> 00:32:24,030
that yeah bits builds as part of the

382
00:32:24,030 --> 00:32:28,020
abbot's or is it one single binary yeah

383
00:32:28,020 --> 00:32:31,140
it's a single binary yes thanks

384
00:32:31,140 --> 00:32:38,540
it's very nice work any more questions

385
00:32:38,540 --> 00:32:40,680
okay thank you give a round of applause

386
00:32:40,680 --> 00:32:42,990
for ya

387
00:32:42,990 --> 00:32:46,260
[Applause]

388
00:32:46,260 --> 00:32:53,140
[Music]

