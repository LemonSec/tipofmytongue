1
00:00:03,540 --> 00:00:06,730
[Music]

2
00:00:20,460 --> 00:00:24,520
thanks guys Friday afternoon I know it's

3
00:00:24,520 --> 00:00:27,460
hard so thank you for being here and I

4
00:00:27,460 --> 00:00:29,140
hope I'll be energetic enough to have

5
00:00:29,140 --> 00:00:31,989
you be excited as I am on this stuff so

6
00:00:31,989 --> 00:00:33,600
let's get started

7
00:00:33,600 --> 00:00:37,360
IOT malware so I've heard that about the

8
00:00:37,360 --> 00:00:39,730
IOT talk that was earlier today and I

9
00:00:39,730 --> 00:00:42,339
was told that it's it was a very radio

10
00:00:42,339 --> 00:00:44,379
oriented but this is not gonna be a

11
00:00:44,379 --> 00:00:45,850
repeat of that talk this is gonna be

12
00:00:45,850 --> 00:00:47,290
really different because for me

13
00:00:47,290 --> 00:00:49,629
IOT is kind of a different subset and

14
00:00:49,629 --> 00:00:51,159
has different characteristics with which

15
00:00:51,159 --> 00:00:54,850
I will outline later but so this IOT

16
00:00:54,850 --> 00:00:56,500
stuff is very trendy and this is what

17
00:00:56,500 --> 00:00:57,720
we're going to talk about today and

18
00:00:57,720 --> 00:01:00,580
started to be in you know global news

19
00:01:00,580 --> 00:01:03,369
because of Brian Krebs talking about it

20
00:01:03,369 --> 00:01:06,220
in 2016 and what happened really behind

21
00:01:06,220 --> 00:01:09,820
that is the OVH 1.5 terabyte terabyte

22
00:01:09,820 --> 00:01:10,509
per second

23
00:01:10,509 --> 00:01:13,840
DDoS attack that happened last year 1.5

24
00:01:13,840 --> 00:01:16,299
terabyte terabits

25
00:01:16,299 --> 00:01:20,939
sorry attack on a provider this big

26
00:01:20,939 --> 00:01:23,740
affected them I mean it's a lot of data

27
00:01:23,740 --> 00:01:27,909
it was was fun this is a VHS CTO he

28
00:01:27,909 --> 00:01:30,039
published like raw logs you know those

29
00:01:30,039 --> 00:01:32,770
line like grepping logs and then piping

30
00:01:32,770 --> 00:01:34,780
into hoc and then doing some statistics

31
00:01:34,780 --> 00:01:37,149
so you know really technical details

32
00:01:37,149 --> 00:01:38,799
about that attack it's not just like you

33
00:01:38,799 --> 00:01:42,219
know someone saying like a DDoS

34
00:01:42,219 --> 00:01:44,710
protection vendor saying oh we received

35
00:01:44,710 --> 00:01:46,479
this X Y is the attack you know I

36
00:01:46,479 --> 00:01:48,639
actually believe more a screenshot like

37
00:01:48,639 --> 00:01:51,130
that and then he went further he said

38
00:01:51,130 --> 00:01:54,310
like this was a hundred and forty five

39
00:01:54,310 --> 00:01:57,189
thousand unique IPS coming from most

40
00:01:57,189 --> 00:01:59,950
likely cameras DVR each with a

41
00:01:59,950 --> 00:02:02,289
connection between one megabyte when we

42
00:02:02,289 --> 00:02:04,689
get bit per second and 30 so this

43
00:02:04,689 --> 00:02:07,890
together built up to 1.5 terabyte

44
00:02:07,890 --> 00:02:11,260
terabit this is the the tweet that is

45
00:02:11,260 --> 00:02:14,080
behind that statistic and so for me it

46
00:02:14,080 --> 00:02:15,190
was like okay

47
00:02:15,190 --> 00:02:18,520
I mean this is really a problem I had

48
00:02:18,520 --> 00:02:19,870
been looking into that problem before

49
00:02:19,870 --> 00:02:23,860
but for me it was more novel and you

50
00:02:23,860 --> 00:02:25,920
know interesting and doing

51
00:02:25,920 --> 00:02:27,390
reverse engineering on something else

52
00:02:27,390 --> 00:02:29,700
than Windows which is refreshing and so

53
00:02:29,700 --> 00:02:32,220
I have been talking about it but it this

54
00:02:32,220 --> 00:02:34,200
is where really it became important in

55
00:02:34,200 --> 00:02:37,160
my eyes like okay it's bad malware it's

56
00:02:37,160 --> 00:02:40,080
basic malware in the cases I will

57
00:02:40,080 --> 00:02:42,750
outline today but it's getting important

58
00:02:42,750 --> 00:02:44,430
and the problem will have to be fixed

59
00:02:44,430 --> 00:02:46,290
otherwise the pipe will be clogged by

60
00:02:46,290 --> 00:02:48,750
this stuff you know that the Internet

61
00:02:48,750 --> 00:02:51,540
radiation background noise is no longer

62
00:02:51,540 --> 00:02:54,180
just noise it's affecting you know our

63
00:02:54,180 --> 00:02:58,050
internet lives speaking of my might

64
00:02:58,050 --> 00:03:00,780
alright so yeah this is why I've been

65
00:03:00,780 --> 00:03:02,519
talking about it studying this since

66
00:03:02,519 --> 00:03:07,650
2014 and since then we kind of I kind of

67
00:03:07,650 --> 00:03:10,620
shifted our approach and wanted to

68
00:03:10,620 --> 00:03:13,080
really understand what was going on this

69
00:03:13,080 --> 00:03:14,610
is the lessons learned through that

70
00:03:14,610 --> 00:03:17,280
throughout and this is our agenda so

71
00:03:17,280 --> 00:03:19,739
we'll cover the problem area which is

72
00:03:19,739 --> 00:03:21,959
collecting threats you know this is very

73
00:03:21,959 --> 00:03:24,030
different and why it's different we'll

74
00:03:24,030 --> 00:03:25,319
go through honey pots which is the

75
00:03:25,319 --> 00:03:27,299
solution outline at the previous section

76
00:03:27,299 --> 00:03:29,519
then once we have samples we'll go

77
00:03:29,519 --> 00:03:31,019
through the reverse engineering

78
00:03:31,019 --> 00:03:33,230
challenges that are specific to IOT

79
00:03:33,230 --> 00:03:38,040
malware and then the data analysis and

80
00:03:38,040 --> 00:03:39,570
that ongoing tracking that you need to

81
00:03:39,570 --> 00:03:42,769
do in order to track larger operations

82
00:03:42,769 --> 00:03:45,540
then we'll we'll talk about three cases

83
00:03:45,540 --> 00:03:47,760
of specific malware that I've analyzed

84
00:03:47,760 --> 00:03:50,700
in the past a few years some of which

85
00:03:50,700 --> 00:03:53,730
are really recent as this summer and

86
00:03:53,730 --> 00:03:55,170
then we'll talk about the future like

87
00:03:55,170 --> 00:03:57,209
what what should developers do to fix

88
00:03:57,209 --> 00:03:59,430
this and some takeaways but first I

89
00:03:59,430 --> 00:04:01,920
wanted to say it's cool for me to be

90
00:04:01,920 --> 00:04:04,350
here it's my birthday today so I'm here

91
00:04:04,350 --> 00:04:06,720
at countermeasure talking about what I

92
00:04:06,720 --> 00:04:09,420
love it's a coincidence you know but

93
00:04:09,420 --> 00:04:12,269
still I kind of I'm glad to be here and

94
00:04:12,269 --> 00:04:15,150
exchange with you guys and for me I'm

95
00:04:15,150 --> 00:04:17,608
not leaving until 6:30 so back to

96
00:04:17,608 --> 00:04:19,228
Montreal so I'll have a time for a few

97
00:04:19,228 --> 00:04:22,830
drinks and celebrate my own birthday so

98
00:04:22,830 --> 00:04:24,780
what am I to be talking about that I'm a

99
00:04:24,780 --> 00:04:26,550
cyber security researcher working at

100
00:04:26,550 --> 00:04:28,470
Bill secure where I lead the research

101
00:04:28,470 --> 00:04:31,950
team and the cool thing is I pretty much

102
00:04:31,950 --> 00:04:33,570
have the mandate I want right I do

103
00:04:33,570 --> 00:04:37,500
research the the CEO just tell me kukku

104
00:04:37,500 --> 00:04:39,639
things that you can talk about and

105
00:04:39,639 --> 00:04:41,949
you know raise the bar of the security

106
00:04:41,949 --> 00:04:43,960
community in Canada as long as you share

107
00:04:43,960 --> 00:04:45,909
it and everyone can benefit I'm down

108
00:04:45,909 --> 00:04:46,270
with that

109
00:04:46,270 --> 00:04:49,029
it's pretty cool I'm also a co-founder

110
00:04:49,029 --> 00:04:50,349
of mantra hack so these are workshops

111
00:04:50,349 --> 00:04:52,240
that we do every month it will be our

112
00:04:52,240 --> 00:04:54,099
fifth year in February so I've been

113
00:04:54,099 --> 00:04:56,620
doing that focused around solving CTF

114
00:04:56,620 --> 00:04:58,180
challenges capture-the-flag challenges

115
00:04:58,180 --> 00:05:01,330
I'm also the vice president of the

116
00:05:01,330 --> 00:05:03,969
training sessions at North SEC if you

117
00:05:03,969 --> 00:05:05,469
don't know about North SEC look it up

118
00:05:05,469 --> 00:05:06,969
it's a conference in Montreal and May

119
00:05:06,969 --> 00:05:10,469
it's really cool a place to be a lot of

120
00:05:10,469 --> 00:05:13,060
professionals and it's a quite technical

121
00:05:13,060 --> 00:05:16,419
conference and this is our hardware

122
00:05:16,419 --> 00:05:19,210
badge that we have this is the two years

123
00:05:19,210 --> 00:05:21,129
ago but it's a fun conference and I

124
00:05:21,129 --> 00:05:23,050
would be open to talk about it I've

125
00:05:23,050 --> 00:05:25,960
spoke at many places before so I'm used

126
00:05:25,960 --> 00:05:28,779
to this but just some kind bragging

127
00:05:28,779 --> 00:05:31,240
rights I spoke at blackhat Europe Black

128
00:05:31,240 --> 00:05:33,400
at USA Arsenal this summer Virus

129
00:05:33,400 --> 00:05:36,189
Bulletin but Kampf der beek on Def Con

130
00:05:36,189 --> 00:05:38,139
places like that I really enjoyed

131
00:05:38,139 --> 00:05:40,960
sharing and this communication act we

132
00:05:40,960 --> 00:05:43,569
can have together I'm also kind of fond

133
00:05:43,569 --> 00:05:45,129
of the technical stuff being at all

134
00:05:45,129 --> 00:05:46,419
those conferences you see a lot of

135
00:05:46,419 --> 00:05:48,669
conferences I try to find my niche with

136
00:05:48,669 --> 00:05:52,120
like speed and technical content I hope

137
00:05:52,120 --> 00:05:55,750
you'll like the hairstyle maybe not so

138
00:05:55,750 --> 00:05:58,930
problem area okay IOT IOT I said I was

139
00:05:58,930 --> 00:06:01,990
gonna redefine it not to avoid you know

140
00:06:01,990 --> 00:06:04,449
saying things that are contradictory to

141
00:06:04,449 --> 00:06:07,000
this morning's presentation so in this

142
00:06:07,000 --> 00:06:09,129
scope or the way I see things

143
00:06:09,129 --> 00:06:12,250
IOT is an embedded system and so I was

144
00:06:12,250 --> 00:06:14,439
using embedded system malware before and

145
00:06:14,439 --> 00:06:16,449
I had to switch to IOT because

146
00:06:16,449 --> 00:06:18,250
everyone's about IOT and you get

147
00:06:18,250 --> 00:06:20,740
accepted easily when you pitch a talk

148
00:06:20,740 --> 00:06:23,710
proposal if has IOT in the title so an

149
00:06:23,710 --> 00:06:25,689
embedded system what is it is it it's a

150
00:06:25,689 --> 00:06:28,659
small CPU small memory not a lot of

151
00:06:28,659 --> 00:06:30,699
memory and low cost so it's really

152
00:06:30,699 --> 00:06:32,250
important to understand the constraint

153
00:06:32,250 --> 00:06:34,599
around the manufacturing and what the

154
00:06:34,599 --> 00:06:37,899
vendors have to deal with it is usually

155
00:06:37,899 --> 00:06:39,909
Network if it's not network I'm not that

156
00:06:39,909 --> 00:06:41,469
interested into it because it cannot be

157
00:06:41,469 --> 00:06:44,199
part of a bigger problem you know so

158
00:06:44,199 --> 00:06:47,080
Bluetooth Wi-Fi Ethernet generally

159
00:06:47,080 --> 00:06:50,919
running Linux because if you write

160
00:06:50,919 --> 00:06:52,990
malware that targets Linux

161
00:06:52,990 --> 00:06:55,390
and you statically linked your C library

162
00:06:55,390 --> 00:06:57,610
and the malware it will run on anything

163
00:06:57,610 --> 00:07:00,370
Linux like it's a very very compatible

164
00:07:00,370 --> 00:07:01,240
ABI

165
00:07:01,240 --> 00:07:03,880
application binary interface that Linux

166
00:07:03,880 --> 00:07:06,370
has been maintaining since like the

167
00:07:06,370 --> 00:07:08,740
first release of Linux so it will run

168
00:07:08,740 --> 00:07:11,020
everywhere and it has no user interface

169
00:07:11,020 --> 00:07:13,360
no user interface is kind of important

170
00:07:13,360 --> 00:07:15,550
and I'll have dedicated slide to it

171
00:07:15,550 --> 00:07:18,610
later where IOT is getting really

172
00:07:18,610 --> 00:07:20,680
problematic and and through my analysis

173
00:07:20,680 --> 00:07:23,320
and experience is when you expose telnet

174
00:07:23,320 --> 00:07:26,410
or SSH this is where the things become

175
00:07:26,410 --> 00:07:28,420
parts of but net and this is an

176
00:07:28,420 --> 00:07:32,110
unnecessary attack surface so this gets

177
00:07:32,110 --> 00:07:35,440
worse when you have that also if you

178
00:07:35,440 --> 00:07:37,780
expose a full user land busybox so a

179
00:07:37,780 --> 00:07:40,900
shell environment that is rich and non

180
00:07:40,900 --> 00:07:44,440
custom so I would say like a juniper or

181
00:07:44,440 --> 00:07:47,440
Cisco command-line is not a generic you

182
00:07:47,440 --> 00:07:50,260
know you cannot do small snippets of

183
00:07:50,260 --> 00:07:53,380
code or or looping or you can do TCL I

184
00:07:53,380 --> 00:07:55,540
believe on Cisco switches but the the

185
00:07:55,540 --> 00:07:58,660
fact to have a a non custom a generic

186
00:07:58,660 --> 00:08:02,020
shell that can be so you can attack you

187
00:08:02,020 --> 00:08:04,270
can be attacked as if you are a linux

188
00:08:04,270 --> 00:08:06,850
server or whatever the the environment

189
00:08:06,850 --> 00:08:10,150
this gets more problematic and more

190
00:08:10,150 --> 00:08:13,270
chances of being part of a botnet if you

191
00:08:13,270 --> 00:08:16,000
have global default credentials so n min

192
00:08:16,000 --> 00:08:18,790
and min to get in this is a bigger

193
00:08:18,790 --> 00:08:21,070
problem yet because they will do some

194
00:08:21,070 --> 00:08:22,870
limited brute forcing of usernames and

195
00:08:22,870 --> 00:08:25,210
passwords the the malware I'm gonna talk

196
00:08:25,210 --> 00:08:28,920
to you about but if you would have a

197
00:08:28,920 --> 00:08:32,559
generated password which is different on

198
00:08:32,559 --> 00:08:34,780
every device even if it's printed on it

199
00:08:34,780 --> 00:08:37,570
the problem would be really less global

200
00:08:37,570 --> 00:08:40,450
and permanent problematic if your device

201
00:08:40,450 --> 00:08:42,580
can be directly plugged on the internet

202
00:08:42,580 --> 00:08:44,710
people will do it they will expose it

203
00:08:44,710 --> 00:08:47,380
online plug it not in the correct

204
00:08:47,380 --> 00:08:50,230
fashion and so this is another case

205
00:08:50,230 --> 00:08:53,200
where things are getting more

206
00:08:53,200 --> 00:08:55,150
problematic and if it can be mistakenly

207
00:08:55,150 --> 00:08:57,820
plug like LAN port or LAN port you don't

208
00:08:57,820 --> 00:09:00,160
really know it's dark you plugged in

209
00:09:00,160 --> 00:09:01,780
under you know some table you didn't

210
00:09:01,780 --> 00:09:03,970
look you will see more of that exposed

211
00:09:03,970 --> 00:09:06,700
if you can make that mistake all

212
00:09:06,700 --> 00:09:09,130
so if it has benefits of being plugged

213
00:09:09,130 --> 00:09:11,530
on the internet and this is where OVH is

214
00:09:11,530 --> 00:09:16,000
comment is related DVR IP cameras this

215
00:09:16,000 --> 00:09:17,590
is the kind of stuff that you want to

216
00:09:17,590 --> 00:09:19,030
expose on the internet because you want

217
00:09:19,030 --> 00:09:20,860
to manage the show that you are

218
00:09:20,860 --> 00:09:24,400
recording from from work or you want to

219
00:09:24,400 --> 00:09:26,200
monitor your system remotely when you're

220
00:09:26,200 --> 00:09:28,270
traveling and this is again you know

221
00:09:28,270 --> 00:09:32,260
making the problem worse so that no user

222
00:09:32,260 --> 00:09:34,720
interface usually you'll see a web

223
00:09:34,720 --> 00:09:37,660
interface on let's say routers home

224
00:09:37,660 --> 00:09:40,330
routers mobile interface for some

225
00:09:40,330 --> 00:09:42,640
specific devices like a camera or

226
00:09:42,640 --> 00:09:45,160
something like that or no interface at

227
00:09:45,160 --> 00:09:47,320
all so just buttons and blinking stuff

228
00:09:47,320 --> 00:09:50,920
like an ass for example but this is not

229
00:09:50,920 --> 00:09:52,830
enough because you cannot really

230
00:09:52,830 --> 00:09:55,450
investigate malware incident without a

231
00:09:55,450 --> 00:09:58,780
user interface right now where is this

232
00:09:58,780 --> 00:10:00,670
complex thing it's a piece of code with

233
00:10:00,670 --> 00:10:03,490
X which executed so if you have only

234
00:10:03,490 --> 00:10:05,110
access to a web interface

235
00:10:05,110 --> 00:10:07,090
you cannot list the processes running

236
00:10:07,090 --> 00:10:09,250
you cannot see is there a ro process

237
00:10:09,250 --> 00:10:11,440
that you shouldn't run normally so this

238
00:10:11,440 --> 00:10:14,140
is the problem of a specific to this

239
00:10:14,140 --> 00:10:20,200
field or this new type of devices you

240
00:10:20,200 --> 00:10:22,360
have no third-party software on it also

241
00:10:22,360 --> 00:10:24,460
which means you cannot have endpoint

242
00:10:24,460 --> 00:10:25,900
security I know I know

243
00:10:25,900 --> 00:10:28,840
AV is not as cool as it used to be a lot

244
00:10:28,840 --> 00:10:31,210
of people like to bash AV maybe less

245
00:10:31,210 --> 00:10:32,800
here but when you're a conference like

246
00:10:32,800 --> 00:10:37,060
hackfest they're like you know or an

247
00:10:37,060 --> 00:10:39,400
pentester conference is all against AV

248
00:10:39,400 --> 00:10:43,210
or how they bypass a V but still AV is

249
00:10:43,210 --> 00:10:46,390
the way now researcher are fighting the

250
00:10:46,390 --> 00:10:49,870
and winning this war right now AV is a

251
00:10:49,870 --> 00:10:52,600
collection mechanism you they have data

252
00:10:52,600 --> 00:10:55,090
they have stuff they have everything the

253
00:10:55,090 --> 00:10:56,920
everywhere every time Cisco Telus

254
00:10:56,920 --> 00:10:58,810
publishes about something they collected

255
00:10:58,810 --> 00:11:01,990
it somehow and it's true AV or or

256
00:11:01,990 --> 00:11:04,900
honeypots right so it's very important

257
00:11:04,900 --> 00:11:06,640
part of the windows malware fighting

258
00:11:06,640 --> 00:11:08,740
world and so you don't have that on

259
00:11:08,740 --> 00:11:10,720
embedded system and I'm not saying you

260
00:11:10,720 --> 00:11:13,570
should this is an important caveats but

261
00:11:13,570 --> 00:11:16,480
it is a realization it is part of the

262
00:11:16,480 --> 00:11:19,080
problematic

263
00:11:20,110 --> 00:11:23,440
so because of those characteristics our

264
00:11:23,440 --> 00:11:25,570
investigation on IOT is different than

265
00:11:25,570 --> 00:11:28,210
traditional desktop mobile or

266
00:11:28,210 --> 00:11:30,760
server-side threats desktop and mobile

267
00:11:30,760 --> 00:11:33,250
you bring the bad stuff in you click on

268
00:11:33,250 --> 00:11:36,280
links you know it's so it's the opposite

269
00:11:36,280 --> 00:11:39,040
for IOT where the stuff comes inside

270
00:11:39,040 --> 00:11:43,200
your device then the problem of no UI

271
00:11:43,200 --> 00:11:46,780
you you cannot really reach the sample

272
00:11:46,780 --> 00:11:48,670
or if you do you run at the same

273
00:11:48,670 --> 00:11:50,110
privilege level of malware which is a

274
00:11:50,110 --> 00:11:55,690
problem and as a consequence of that and

275
00:11:55,690 --> 00:11:57,130
as a consequence of those

276
00:11:57,130 --> 00:12:00,700
characteristics you will see also IOT

277
00:12:00,700 --> 00:12:03,220
malware infecting servers but server

278
00:12:03,220 --> 00:12:05,020
malware infecting IOT doesn't really

279
00:12:05,020 --> 00:12:08,890
happen because of the low costs which

280
00:12:08,890 --> 00:12:11,680
implies different CPU architectures than

281
00:12:11,680 --> 00:12:14,680
Intel low cost or low or energy

282
00:12:14,680 --> 00:12:18,520
requirements will make this piece

283
00:12:18,520 --> 00:12:23,500
different so having one of the first

284
00:12:23,500 --> 00:12:25,930
problem biggest problem having access to

285
00:12:25,930 --> 00:12:27,640
binary samples since you don't run

286
00:12:27,640 --> 00:12:30,190
endpoint security you cannot collect the

287
00:12:30,190 --> 00:12:33,310
samples proactively in that fashion and

288
00:12:33,310 --> 00:12:35,050
since you have no UI you have kind of a

289
00:12:35,050 --> 00:12:37,630
problem of trying to have access to

290
00:12:37,630 --> 00:12:40,180
those malware samples so what are the

291
00:12:40,180 --> 00:12:42,100
different ways we could look at it and

292
00:12:42,100 --> 00:12:44,890
try to collect samples first you can

293
00:12:44,890 --> 00:12:48,790
solder on the uart port and you know

294
00:12:48,790 --> 00:12:51,610
have a console connection and then have

295
00:12:51,610 --> 00:12:54,070
a kind of a management interface low

296
00:12:54,070 --> 00:12:57,880
level when you do that on most common

297
00:12:57,880 --> 00:12:59,770
routers you get a root shell so you

298
00:12:59,770 --> 00:13:02,290
don't have privilege problems and stuff

299
00:13:02,290 --> 00:13:04,450
like that but it requires the actual

300
00:13:04,450 --> 00:13:06,850
hardware and it doesn't scale right if I

301
00:13:06,850 --> 00:13:09,820
would be you know soldering every device

302
00:13:09,820 --> 00:13:11,800
I'm trying to do and collect samples and

303
00:13:11,800 --> 00:13:14,110
malware and I analyzes on I would like

304
00:13:14,110 --> 00:13:15,670
still be in my basement doing some

305
00:13:15,670 --> 00:13:20,230
soldering so it doesn't require hardware

306
00:13:20,230 --> 00:13:21,220
and doesn't scale that's what I was

307
00:13:21,220 --> 00:13:24,310
saying and additionally it won't work

308
00:13:24,310 --> 00:13:26,890
well on hardened devices so if you want

309
00:13:26,890 --> 00:13:29,410
to catch ATM malware for example

310
00:13:29,410 --> 00:13:32,290
embedded assuming it's not a Windows CE

311
00:13:32,290 --> 00:13:32,670
but

312
00:13:32,670 --> 00:13:35,970
it's embedded Linux if this stuff is

313
00:13:35,970 --> 00:13:38,430
made to be resistant to a hardware

314
00:13:38,430 --> 00:13:41,250
tampering so it's probably all dipped in

315
00:13:41,250 --> 00:13:43,830
epoxy and you won't be able to plug in

316
00:13:43,830 --> 00:13:46,950
your your you art stuff on it you can

317
00:13:46,950 --> 00:13:50,280
ask you nicely for files to people and I

318
00:13:50,280 --> 00:13:52,350
tried that at the end of my slide deck I

319
00:13:52,350 --> 00:13:54,780
have my email address PGP key and you

320
00:13:54,780 --> 00:13:57,000
can send me samples to my email but

321
00:13:57,000 --> 00:13:59,580
again it it's kind of pushing the

322
00:13:59,580 --> 00:14:01,380
problem away right because it's still

323
00:14:01,380 --> 00:14:05,070
gonna go back to this for the person

324
00:14:05,070 --> 00:14:07,740
trying to give you samples so this is

325
00:14:07,740 --> 00:14:09,300
something I've tried to do have been

326
00:14:09,300 --> 00:14:11,970
doing for a few years and it happened

327
00:14:11,970 --> 00:14:15,300
for me once that I got a file and by

328
00:14:15,300 --> 00:14:19,560
email of a MIPS router but it doesn't

329
00:14:19,560 --> 00:14:23,160
scale again once in the three years you

330
00:14:23,160 --> 00:14:26,730
can also try to find a way in so since

331
00:14:26,730 --> 00:14:29,100
most malware gets in via telnet or SSH

332
00:14:29,100 --> 00:14:32,310
and there is default creds

333
00:14:32,310 --> 00:14:34,560
you can reuse that path and you know

334
00:14:34,560 --> 00:14:36,600
scan the internet connect and then list

335
00:14:36,600 --> 00:14:38,490
file list processors and correct stuff

336
00:14:38,490 --> 00:14:40,590
of course you see where I'm heading with

337
00:14:40,590 --> 00:14:42,840
this first it could be tampered it

338
00:14:42,840 --> 00:14:44,490
happens at the same privilege level as

339
00:14:44,490 --> 00:14:46,470
you so you could be inside of a fake

340
00:14:46,470 --> 00:14:48,600
telnet daemon where everything is hidden

341
00:14:48,600 --> 00:14:51,090
away and we've started seeing stuff like

342
00:14:51,090 --> 00:14:53,670
that with OpenSSH malware the Emery

343
00:14:53,670 --> 00:14:55,650
group they're now doing that so if

344
00:14:55,650 --> 00:14:57,660
you're connecting through SSH to a

345
00:14:57,660 --> 00:14:59,460
server and you list files the Emery

346
00:14:59,460 --> 00:15:01,920
artifacts will be hidden from you you

347
00:15:01,920 --> 00:15:03,510
need a console access in order to

348
00:15:03,510 --> 00:15:06,120
realize that you're infected so it's it

349
00:15:06,120 --> 00:15:08,400
can be tampered with and it is on

350
00:15:08,400 --> 00:15:10,020
server-side sophisticated server-side

351
00:15:10,020 --> 00:15:12,420
malware but the biggest problem is it's

352
00:15:12,420 --> 00:15:14,430
illegal right I cannot scan the Internet

353
00:15:14,430 --> 00:15:16,260
oops punch in default creds and start

354
00:15:16,260 --> 00:15:18,450
collecting stuff or at least I wouldn't

355
00:15:18,450 --> 00:15:20,100
say it publicly no I'm not doing it I'm

356
00:15:20,100 --> 00:15:23,580
not doing it I promise but so it's not a

357
00:15:23,580 --> 00:15:26,100
good way to operate you can do some

358
00:15:26,100 --> 00:15:28,200
hunting on virustotal so perhaps on yara

359
00:15:28,200 --> 00:15:30,660
rules try to find binaries of there are

360
00:15:30,660 --> 00:15:32,570
various architectures but there is a

361
00:15:32,570 --> 00:15:35,520
it's like always the same stuff that is

362
00:15:35,520 --> 00:15:37,860
just recompile and there's a lot of

363
00:15:37,860 --> 00:15:40,650
noise a lot of uninteresting samples and

364
00:15:40,650 --> 00:15:43,230
you don't collect the i/o sees also so

365
00:15:43,230 --> 00:15:44,910
you don't know whose IP is attacking you

366
00:15:44,910 --> 00:15:46,870
just have the file and

367
00:15:46,870 --> 00:15:50,180
now a days like the command and control

368
00:15:50,180 --> 00:15:52,790
server are put in on the command line

369
00:15:52,790 --> 00:15:55,250
for certain hour so if you just have the

370
00:15:55,250 --> 00:15:56,780
file you don't know whether where the

371
00:15:56,780 --> 00:15:58,790
CNC are which makes tracking more

372
00:15:58,790 --> 00:16:02,030
complicated and basically it's just not

373
00:16:02,030 --> 00:16:06,020
a lot of samples so the solution that

374
00:16:06,020 --> 00:16:09,410
we've designed at work is collecting

375
00:16:09,410 --> 00:16:12,170
threats by mimicking actual targets via

376
00:16:12,170 --> 00:16:14,840
honey pots so we we run honey pots and

377
00:16:14,840 --> 00:16:16,820
we mimic hardware and we want

378
00:16:16,820 --> 00:16:20,210
connections and binary drop the problem

379
00:16:20,210 --> 00:16:22,580
is any pots are complex and I are like

380
00:16:22,580 --> 00:16:26,840
high maintenance things right so a

381
00:16:26,840 --> 00:16:28,220
honeypot basically for those that don't

382
00:16:28,220 --> 00:16:30,530
know you're trying to lure attackers and

383
00:16:30,530 --> 00:16:32,300
to showing you their tools tech

384
00:16:32,300 --> 00:16:35,180
techniques and procedures TTP's tactics

385
00:16:35,180 --> 00:16:38,960
and procedures now you

386
00:16:38,960 --> 00:16:40,970
deploying a honeypot there is a lot of

387
00:16:40,970 --> 00:16:42,770
stuff the honeynet project is good doing

388
00:16:42,770 --> 00:16:44,930
a great job at it you need to pick a

389
00:16:44,930 --> 00:16:46,970
component or architecture and you know

390
00:16:46,970 --> 00:16:48,950
design the way you want to do it so

391
00:16:48,950 --> 00:16:51,650
here's what we we decided or what we

392
00:16:51,650 --> 00:16:54,380
faced as first choices for IOT

393
00:16:54,380 --> 00:16:57,320
specifically should we do the full thing

394
00:16:57,320 --> 00:17:00,260
in hardware or software so of course

395
00:17:00,260 --> 00:17:03,010
it's it was not a complex decision

396
00:17:03,010 --> 00:17:07,430
software is kind of cheaper and I wanted

397
00:17:07,430 --> 00:17:10,699
to do some geographic see if trends were

398
00:17:10,699 --> 00:17:12,650
different geographically for Windows

399
00:17:12,650 --> 00:17:14,839
malware it's very clear like Brazil has

400
00:17:14,839 --> 00:17:16,579
a very different ecosystem than the rest

401
00:17:16,579 --> 00:17:19,670
of the world for example but so I wanted

402
00:17:19,670 --> 00:17:20,839
to see if the same thing was happening

403
00:17:20,839 --> 00:17:23,449
for IOT I can tell you know it's not

404
00:17:23,449 --> 00:17:25,550
it's the same but I deployed the servers

405
00:17:25,550 --> 00:17:28,400
in Russia and China and Brazil so I

406
00:17:28,400 --> 00:17:33,140
needed to go software route right so

407
00:17:33,140 --> 00:17:35,660
there are various types of honeypot slow

408
00:17:35,660 --> 00:17:37,730
interaction high interaction high

409
00:17:37,730 --> 00:17:40,430
interaction you need to watch it closely

410
00:17:40,430 --> 00:17:42,500
because whenever it's get it gets

411
00:17:42,500 --> 00:17:45,200
infected it's a full system so it will

412
00:17:45,200 --> 00:17:47,900
attack other people right away and you

413
00:17:47,900 --> 00:17:49,760
can get into trouble or abuse letters

414
00:17:49,760 --> 00:17:51,830
for it so you you you cannot go at a

415
00:17:51,830 --> 00:17:53,780
conference for two days thinking

416
00:17:53,780 --> 00:17:55,640
everything's gonna be fine you know

417
00:17:55,640 --> 00:17:58,010
you'll have this dog in fire type image

418
00:17:58,010 --> 00:17:59,850
mental image

419
00:17:59,850 --> 00:18:03,150
so because of that we went the low

420
00:18:03,150 --> 00:18:04,770
interaction honeypot route so low

421
00:18:04,770 --> 00:18:07,050
interaction is kind of the matrix you

422
00:18:07,050 --> 00:18:11,780
know showing the bad guys the best mimic

423
00:18:11,780 --> 00:18:14,760
of the environment that you expect but

424
00:18:14,760 --> 00:18:16,920
not the actual real thing so nothing

425
00:18:16,920 --> 00:18:18,930
really happens but you collected the

426
00:18:18,930 --> 00:18:21,420
Recon script and the files and then you

427
00:18:21,420 --> 00:18:23,400
can with the files move on to reverse

428
00:18:23,400 --> 00:18:25,980
engineering and has less of a chance of

429
00:18:25,980 --> 00:18:27,780
becoming part of the problem so we

430
00:18:27,780 --> 00:18:29,490
actually deployed a low interaction on a

431
00:18:29,490 --> 00:18:32,670
pot but added a little like but net

432
00:18:32,670 --> 00:18:34,470
tracking component to it and this is

433
00:18:34,470 --> 00:18:37,050
what I'm gonna show you in a second so

434
00:18:37,050 --> 00:18:38,490
this is the architecture we use for

435
00:18:38,490 --> 00:18:42,150
Linux moose tracking on the left hand

436
00:18:42,150 --> 00:18:44,780
side you see that we actually ran a full

437
00:18:44,780 --> 00:18:49,080
ARM architecture a qmu VM inside a cloud

438
00:18:49,080 --> 00:18:51,860
provider which on which we deployed

439
00:18:51,860 --> 00:18:56,370
Debian's our rails arm images so a basic

440
00:18:56,370 --> 00:19:00,090
debian and we detonated as the sister

441
00:19:00,090 --> 00:19:03,840
cloned me to say Linux moose sample in

442
00:19:03,840 --> 00:19:07,260
it so we had a real infected system in

443
00:19:07,260 --> 00:19:08,670
front of it we'd added a

444
00:19:08,670 --> 00:19:10,710
man-in-the-middle proxy tool so this is

445
00:19:10,710 --> 00:19:15,050
a HTTP interception tool it will create

446
00:19:15,050 --> 00:19:17,670
certificate errors for sure that it's

447
00:19:17,670 --> 00:19:19,920
the reality of doing such an attack but

448
00:19:19,920 --> 00:19:22,440
the but net guys they just probably have

449
00:19:22,440 --> 00:19:24,660
seen so many that the way the automated

450
00:19:24,660 --> 00:19:27,480
things is ignores SSL errors so this

451
00:19:27,480 --> 00:19:30,470
works in the field I guarantee you on

452
00:19:30,470 --> 00:19:33,720
the the right hand side we deployed so

453
00:19:33,720 --> 00:19:36,180
we hidden away the SSH and telnet

454
00:19:36,180 --> 00:19:39,390
interface of our qmu system and instead

455
00:19:39,390 --> 00:19:42,060
we deployed a carry system carry is a

456
00:19:42,060 --> 00:19:44,130
low interaction on a part I'm going to

457
00:19:44,130 --> 00:19:47,580
describe to you in a few slides with a

458
00:19:47,580 --> 00:19:50,370
telnet service busybox environment so

459
00:19:50,370 --> 00:19:53,100
the real problematic it was based on an

460
00:19:53,100 --> 00:19:56,190
action tech router actually and router

461
00:19:56,190 --> 00:19:59,040
user land full file system emulation

462
00:19:59,040 --> 00:20:00,900
like copying the characteristics of the

463
00:20:00,900 --> 00:20:03,420
file system we rely rector the traffic

464
00:20:03,420 --> 00:20:06,030
to the proper components using IP tables

465
00:20:06,030 --> 00:20:08,310
and we did in front of that full packet

466
00:20:08,310 --> 00:20:10,620
capture so I have everything of a

467
00:20:10,620 --> 00:20:12,269
months-long of

468
00:20:12,269 --> 00:20:15,419
these honey pots the components I've

469
00:20:15,419 --> 00:20:18,929
pretty much covered them all I think

470
00:20:18,929 --> 00:20:22,889
I'll just keep this one we went with

471
00:20:22,889 --> 00:20:25,799
Karif as a honeypot because you can

472
00:20:25,799 --> 00:20:27,839
easily emulate the file system of a

473
00:20:27,839 --> 00:20:29,789
target device it's written in Python

474
00:20:29,789 --> 00:20:31,679
it's using the twisted framework so it's

475
00:20:31,679 --> 00:20:34,679
it's it's okay it scales well twisted is

476
00:20:34,679 --> 00:20:36,509
complicated to understand callback

477
00:20:36,509 --> 00:20:38,249
mechanism and all that but it's still

478
00:20:38,249 --> 00:20:41,580
Python so it's not as tedious as if it

479
00:20:41,580 --> 00:20:45,019
would be a nun safer choice like C C++

480
00:20:45,019 --> 00:20:47,489
you can easily modify the output of

481
00:20:47,489 --> 00:20:50,249
commands so if you have an actual router

482
00:20:50,249 --> 00:20:52,320
you can run commands and make sure that

483
00:20:52,320 --> 00:20:54,539
the the carry will output the same thing

484
00:20:54,539 --> 00:20:57,809
it's easy to patch being Python but it

485
00:20:57,809 --> 00:20:59,429
didn't have any telnet support and we

486
00:20:59,429 --> 00:21:01,499
knew that the the sample we were after

487
00:21:01,499 --> 00:21:04,649
were telnet brute-forcing only know SSH

488
00:21:04,649 --> 00:21:08,969
so we were a bit disappointed and during

489
00:21:08,969 --> 00:21:11,549
Christmas vacation there was no one at

490
00:21:11,549 --> 00:21:13,559
work you know no one to report to really

491
00:21:13,559 --> 00:21:16,109
so I decided to implement a net support

492
00:21:16,109 --> 00:21:19,529
to carry we sent the pull request last

493
00:21:19,529 --> 00:21:22,889
August and it got accepted so a calories

494
00:21:22,889 --> 00:21:26,429
as a calories telnet support was written

495
00:21:26,429 --> 00:21:30,059
by us on in start the implementation was

496
00:21:30,059 --> 00:21:32,369
started during Christmas time it took

497
00:21:32,369 --> 00:21:34,469
quite longer than I thought but because

498
00:21:34,469 --> 00:21:37,589
of that when Mirai happened everyone was

499
00:21:37,589 --> 00:21:40,259
tracking Mirai using curry and telnet so

500
00:21:40,259 --> 00:21:41,820
I was pretty proud of that moment

501
00:21:41,820 --> 00:21:49,709
although I got no credit for it so a

502
00:21:49,709 --> 00:21:53,190
man-in-the-middle proxy as I told you we

503
00:21:53,190 --> 00:21:56,179
we used it and you we needed to

504
00:21:56,179 --> 00:21:58,529
intercept traffic that was out of a

505
00:21:58,529 --> 00:22:00,929
socks proxy tunnel so it was not your

506
00:22:00,929 --> 00:22:03,119
usual like ten tests you know I do a

507
00:22:03,119 --> 00:22:04,859
layer two men in the middle and then I

508
00:22:04,859 --> 00:22:08,009
I'm strip everything it was a trickier

509
00:22:08,009 --> 00:22:10,349
and I tried to use better cap to do so

510
00:22:10,349 --> 00:22:13,469
but better cap really failed at me it

511
00:22:13,469 --> 00:22:16,799
was crashing it has no binary and no

512
00:22:16,799 --> 00:22:20,219
reliable log that I could parse in a

513
00:22:20,219 --> 00:22:21,929
machine way you know it was kind of a

514
00:22:21,929 --> 00:22:24,089
loose format text file which is not good

515
00:22:24,089 --> 00:22:26,100
when you have like 20 gig

516
00:22:26,100 --> 00:22:28,410
vlog and you need to extract like all of

517
00:22:28,410 --> 00:22:30,030
the unique IPS that went through this

518
00:22:30,030 --> 00:22:32,820
and so for me as a recommendation for

519
00:22:32,820 --> 00:22:34,230
malware hunters and people doing

520
00:22:34,230 --> 00:22:36,090
long-term SSL stripping a

521
00:22:36,090 --> 00:22:37,620
man-in-the-middle proxy really works

522
00:22:37,620 --> 00:22:40,350
well but you need to do at the IP table

523
00:22:40,350 --> 00:22:42,450
stuff especially when it's out of a Sox

524
00:22:42,450 --> 00:22:46,020
proxy for full packet capture I

525
00:22:46,020 --> 00:22:48,900
recommend dumb cap I think it's more

526
00:22:48,900 --> 00:22:51,299
modern but some people hate the pcap ng

527
00:22:51,299 --> 00:22:54,210
format so for those who ate it don't use

528
00:22:54,210 --> 00:22:55,950
it or at least specified in on the

529
00:22:55,950 --> 00:22:57,660
command line that you want a pea cap and

530
00:22:57,660 --> 00:23:00,480
not P cap ng but it's cool does

531
00:23:00,480 --> 00:23:02,460
automatic rotation and I strongly

532
00:23:02,460 --> 00:23:04,500
recommend doing automatic rotation

533
00:23:04,500 --> 00:23:06,630
because if you're going to parse 200

534
00:23:06,630 --> 00:23:09,539
gigabyte of of P caps you really need

535
00:23:09,539 --> 00:23:12,179
this flexibility of spreading that out

536
00:23:12,179 --> 00:23:14,520
on multiple cores because if you use

537
00:23:14,520 --> 00:23:17,130
Wireshark or tea shark it always needs

538
00:23:17,130 --> 00:23:19,200
to reconstruct the whole TCP sequence

539
00:23:19,200 --> 00:23:22,770
and buy and it does so by loading all of

540
00:23:22,770 --> 00:23:25,200
the file twice in memory to do the

541
00:23:25,200 --> 00:23:27,600
sequencing matching and stuff so it's

542
00:23:27,600 --> 00:23:30,630
it's it's way better to split them in

543
00:23:30,630 --> 00:23:33,570
advance so you can spread out the the

544
00:23:33,570 --> 00:23:37,740
analysis move your SSH to a non-standard

545
00:23:37,740 --> 00:23:41,159
ports and filter it out so that if you

546
00:23:41,159 --> 00:23:43,950
are sink your your pcap files out of the

547
00:23:43,950 --> 00:23:46,200
server the P cap would not grow because

548
00:23:46,200 --> 00:23:48,000
you have ssh traffic in it meaning that

549
00:23:48,000 --> 00:23:50,159
you know there's just a snowball effect

550
00:23:50,159 --> 00:23:53,010
here so this is a like a lesson learn

551
00:23:53,010 --> 00:23:58,830
exactly that way so now we've got files

552
00:23:58,830 --> 00:24:01,080
we have data we need to do some reverse

553
00:24:01,080 --> 00:24:04,559
engineering the biggest problem with the

554
00:24:04,559 --> 00:24:07,049
IOT samples I've analyzed so far is when

555
00:24:07,049 --> 00:24:08,970
the binaries are aesthetically linked

556
00:24:08,970 --> 00:24:13,289
and stripped so what what does that mean

557
00:24:13,289 --> 00:24:15,120
well statically linked it means that

558
00:24:15,120 --> 00:24:17,580
there are no imports no library calls so

559
00:24:17,580 --> 00:24:20,429
everything is in the binary sample down

560
00:24:20,429 --> 00:24:23,460
to the Cisco level so system calls is

561
00:24:23,460 --> 00:24:26,820
our program will and will interact with

562
00:24:26,820 --> 00:24:27,870
the number with the Linux operating

563
00:24:27,870 --> 00:24:31,470
system in that case and so this is a bit

564
00:24:31,470 --> 00:24:33,150
different on Windows that we you will

565
00:24:33,150 --> 00:24:34,650
get you're guaranteed to always have

566
00:24:34,650 --> 00:24:36,299
certain libraries but on Linux it's

567
00:24:36,299 --> 00:24:38,100
really the contract between

568
00:24:38,100 --> 00:24:39,660
kernel space and user space

569
00:24:39,660 --> 00:24:42,810
is skulls so everything is in the binary

570
00:24:42,810 --> 00:24:44,400
which means the Lipsy

571
00:24:44,400 --> 00:24:46,230
and all of that it's a lot of code to

572
00:24:46,230 --> 00:24:52,290
look at disassembling even if your

573
00:24:52,290 --> 00:24:54,240
architecture have it even if you have it

574
00:24:54,240 --> 00:24:57,330
like arm it's just a big blob of

575
00:24:57,330 --> 00:25:00,360
structures and and pointers and and

576
00:25:00,360 --> 00:25:02,310
arithmetics in it so it's it's really

577
00:25:02,310 --> 00:25:05,520
not not easy to do

578
00:25:05,520 --> 00:25:07,500
stripped means that the debugging

579
00:25:07,500 --> 00:25:10,740
symbols were removed it's not by default

580
00:25:10,740 --> 00:25:12,510
I think they are or know by default is

581
00:25:12,510 --> 00:25:14,370
stripped but a lot of the badly done

582
00:25:14,370 --> 00:25:16,800
malware out there especially the you

583
00:25:16,800 --> 00:25:18,630
know IOT one case I will show you later

584
00:25:18,630 --> 00:25:21,090
they don't they don't strip so you have

585
00:25:21,090 --> 00:25:22,860
like the symbols and you can go quickly

586
00:25:22,860 --> 00:25:25,320
other than that you're kind of stuck

587
00:25:25,320 --> 00:25:28,200
with going after logging like if the

588
00:25:28,200 --> 00:25:31,080
malware logs anything but so for certain

589
00:25:31,080 --> 00:25:33,180
cases like Neelix moves there is simply

590
00:25:33,180 --> 00:25:35,670
no logging so your your with a binary

591
00:25:35,670 --> 00:25:37,800
just to give you a sense of what it

592
00:25:37,800 --> 00:25:41,850
looks like so in either this is 33 lines

593
00:25:41,850 --> 00:25:44,840
out of 500 functions that are all

594
00:25:44,840 --> 00:25:48,650
unidentified except the entry point and

595
00:25:48,650 --> 00:25:51,120
so sorry all of this needs to be

596
00:25:51,120 --> 00:25:53,010
analyzed if you you're gonna you know

597
00:25:53,010 --> 00:25:55,080
try to find where what's the malware

598
00:25:55,080 --> 00:25:57,420
payload what's it's doing right so it's

599
00:25:57,420 --> 00:26:00,210
and it's not simple code to analyze this

600
00:26:00,210 --> 00:26:03,090
is for example the printf family okay up

601
00:26:03,090 --> 00:26:06,600
sister of calls so SN printf s printf

602
00:26:06,600 --> 00:26:08,550
and and you realize that there is an

603
00:26:08,550 --> 00:26:10,500
internal function called DF printf which

604
00:26:10,500 --> 00:26:12,990
is which touches a lot of stuff and so

605
00:26:12,990 --> 00:26:14,970
if we zoom out and see and this is not

606
00:26:14,970 --> 00:26:17,520
lines of code this is not assembly it's

607
00:26:17,520 --> 00:26:20,520
only variables and other sub functions

608
00:26:20,520 --> 00:26:22,830
that it touches right or that touches it

609
00:26:22,830 --> 00:26:24,960
so this is the big error like a

610
00:26:24,960 --> 00:26:28,170
proximity view of all of the of the

611
00:26:28,170 --> 00:26:30,030
ecosystem around the F printf internal

612
00:26:30,030 --> 00:26:34,710
and this the syscall behind the printf

613
00:26:34,710 --> 00:26:37,680
is puts so it's a single cisco's which

614
00:26:37,680 --> 00:26:40,800
is really generic and so you have this

615
00:26:40,800 --> 00:26:43,470
mega abstraction on top of it which is

616
00:26:43,470 --> 00:26:46,800
really complex so if we go deeper and

617
00:26:46,800 --> 00:26:48,510
look at the implementation so at the

618
00:26:48,510 --> 00:26:51,210
assembly level of the core graph of the

619
00:26:51,210 --> 00:26:53,520
this is the VF printf in turn-off

620
00:26:53,520 --> 00:26:55,410
so this is just this function and there

621
00:26:55,410 --> 00:26:57,179
are sub functions and there are a lot of

622
00:26:57,179 --> 00:26:59,610
data members around so you can spend

623
00:26:59,610 --> 00:27:02,460
like more than a day reversing a

624
00:27:02,460 --> 00:27:04,170
function like that to realize you're

625
00:27:04,170 --> 00:27:10,730
dealing with printf and so so

626
00:27:10,730 --> 00:27:13,140
yeah at some point you're just like

627
00:27:13,140 --> 00:27:15,300
tired and angry and you're like no no no

628
00:27:15,300 --> 00:27:18,929
this is not working the echo system

629
00:27:18,929 --> 00:27:21,240
Linux specific echo system makes it

630
00:27:21,240 --> 00:27:23,580
worse for reversers so what you have is

631
00:27:23,580 --> 00:27:25,140
you have different compilers or

632
00:27:25,140 --> 00:27:27,570
different versions of GCC different

633
00:27:27,570 --> 00:27:29,429
versions of the ellipse e calling

634
00:27:29,429 --> 00:27:31,470
convention little nut nut changes to

635
00:27:31,470 --> 00:27:33,270
calling conventions but little changes

636
00:27:33,270 --> 00:27:34,530
here and there and the way the order

637
00:27:34,530 --> 00:27:36,630
things the way they do things which

638
00:27:36,630 --> 00:27:39,630
means that there is no Ida flirt

639
00:27:39,630 --> 00:27:42,050
signatures for these these things right

640
00:27:42,050 --> 00:27:44,970
either float is kind of a quick binary

641
00:27:44,970 --> 00:27:47,790
matching thing that will identify common

642
00:27:47,790 --> 00:27:49,559
functions like what would be in the Lib

643
00:27:49,559 --> 00:27:51,570
C and Windows it works really well and

644
00:27:51,570 --> 00:27:53,190
this is why you can you not have to

645
00:27:53,190 --> 00:27:56,520
reverse memset and stuff like that and

646
00:27:56,520 --> 00:27:58,710
another problem is that there is not a

647
00:27:58,710 --> 00:28:02,520
single Lib C you have you see Lib see eg

648
00:28:02,520 --> 00:28:05,700
Lib C gilepsy muscle there is a various

649
00:28:05,700 --> 00:28:08,790
ecosystem of embedded C library because

650
00:28:08,790 --> 00:28:11,010
gilepsy is too big for some of these

651
00:28:11,010 --> 00:28:14,130
systems so what we did at that time is

652
00:28:14,130 --> 00:28:16,230
we try to map the Cisco's with an idol

653
00:28:16,230 --> 00:28:18,330
Python script because the Cisco's are

654
00:28:18,330 --> 00:28:20,250
just an integer so we need to map them

655
00:28:20,250 --> 00:28:22,410
back to what the meaning is so I

656
00:28:22,410 --> 00:28:24,420
extracted the constant from the kernel

657
00:28:24,420 --> 00:28:27,540
source code and I I just create a script

658
00:28:27,540 --> 00:28:28,950
that would find all this is called and

659
00:28:28,950 --> 00:28:31,260
just add a comment but besides it but it

660
00:28:31,260 --> 00:28:33,660
was just too big there was too too much

661
00:28:33,660 --> 00:28:35,790
stuff to reverse-engineer so I spoke

662
00:28:35,790 --> 00:28:37,590
with my former colleague of mine Mac

663
00:28:37,590 --> 00:28:40,350
it's Ian very smart guy and he said I

664
00:28:40,350 --> 00:28:42,300
think I have an idea that could work

665
00:28:42,300 --> 00:28:44,970
so what is this better solution you

666
00:28:44,970 --> 00:28:47,280
reproduce the environment of the and

667
00:28:47,280 --> 00:28:49,020
this is all static analysis not dynamic

668
00:28:49,020 --> 00:28:50,940
dynamic analysis as other problems that

669
00:28:50,940 --> 00:28:54,750
we'll cover later you reproduce the

670
00:28:54,750 --> 00:28:56,490
environment so you find the architecture

671
00:28:56,490 --> 00:28:58,970
the Lib C and the compiler version

672
00:28:58,970 --> 00:29:01,230
usually you can find that in strings

673
00:29:01,230 --> 00:29:05,690
they are not stripping it yet and you

674
00:29:05,690 --> 00:29:06,870
build that

675
00:29:06,870 --> 00:29:08,910
library with symbols under the same

676
00:29:08,910 --> 00:29:10,860
condition so under these same version

677
00:29:10,860 --> 00:29:12,870
you build it on a modern system some

678
00:29:12,870 --> 00:29:14,490
time stamp will change but this you can

679
00:29:14,490 --> 00:29:18,330
easily put away and you use Bend if to

680
00:29:18,330 --> 00:29:20,640
map the functions so you have one

681
00:29:20,640 --> 00:29:23,010
library that is binary equivalent to the

682
00:29:23,010 --> 00:29:24,630
other one because symbols are stored

683
00:29:24,630 --> 00:29:27,720
elsewhere in alpha libraries so you'll

684
00:29:27,720 --> 00:29:30,510
have this binary match and with a tool

685
00:29:30,510 --> 00:29:32,400
like Bend if you can import the symbols

686
00:29:32,400 --> 00:29:34,950
from one side to the other side and then

687
00:29:34,950 --> 00:29:37,860
focus on an our code right here's what

688
00:29:37,860 --> 00:29:41,190
it looks like so this is again of our

689
00:29:41,190 --> 00:29:43,410
linux mu sample on the left hand side

690
00:29:43,410 --> 00:29:46,110
you had all of the name primary all of

691
00:29:46,110 --> 00:29:48,809
the sub that are unidentified and on the

692
00:29:48,809 --> 00:29:52,080
name secondary is what we compiled and

693
00:29:52,080 --> 00:29:54,300
you have all of the the functions named

694
00:29:54,300 --> 00:29:56,970
there so get see you know VF printf

695
00:29:56,970 --> 00:29:59,940
internal open the eye net and top inet

696
00:29:59,940 --> 00:30:03,720
p2n for so all useful stuff that you

697
00:30:03,720 --> 00:30:05,309
don't want to look at you know because

698
00:30:05,309 --> 00:30:07,800
it's all binary doing changes to

699
00:30:07,800 --> 00:30:09,600
integers and just tedious to reverse

700
00:30:09,600 --> 00:30:12,150
engineer and so with this approach we

701
00:30:12,150 --> 00:30:15,150
compiled with you Salib see zero point

702
00:30:15,150 --> 00:30:18,480
nine point three three and it was they

703
00:30:18,480 --> 00:30:21,300
were using the open wrt tool chain to do

704
00:30:21,300 --> 00:30:24,450
the to do the compiling and so we even

705
00:30:24,450 --> 00:30:26,670
had in that in that part of the to chain

706
00:30:26,670 --> 00:30:28,890
the artifact of the compilation we had

707
00:30:28,890 --> 00:30:32,700
the SVN revision number of open wrt so i

708
00:30:32,700 --> 00:30:35,250
was able to do a SVN check out of the

709
00:30:35,250 --> 00:30:37,290
exact revision that they used to compile

710
00:30:37,290 --> 00:30:40,380
so with this we mapped more than 225

711
00:30:40,380 --> 00:30:42,540
functions with high confidence high

712
00:30:42,540 --> 00:30:45,330
similarity can import all of that and

713
00:30:45,330 --> 00:30:47,760
then after we were released reversing

714
00:30:47,760 --> 00:30:50,700
you know malware code written by Maori

715
00:30:50,700 --> 00:30:53,280
author not the live see our life was

716
00:30:53,280 --> 00:30:58,260
better so why we I start with static

717
00:30:58,260 --> 00:31:00,390
analysis is because dynamic analysis is

718
00:31:00,390 --> 00:31:02,130
another headache you have to emulate

719
00:31:02,130 --> 00:31:05,250
some hardware like stir it like NVRAM

720
00:31:05,250 --> 00:31:07,860
and I know that they are really good the

721
00:31:07,860 --> 00:31:09,630
guys who you know reverse engineer and

722
00:31:09,630 --> 00:31:11,760
try to find flaws in to IOT and stuff

723
00:31:11,760 --> 00:31:13,650
like that they all have tooling and they

724
00:31:13,650 --> 00:31:16,530
are better equipped than I am and I

725
00:31:16,530 --> 00:31:18,090
should look into solving these problems

726
00:31:18,090 --> 00:31:20,160
on my own but for me it just turned

727
00:31:20,160 --> 00:31:23,130
to be more portable across different

728
00:31:23,130 --> 00:31:25,470
devices if I use the static analysis

729
00:31:25,470 --> 00:31:29,820
approach so basically this is this is

730
00:31:29,820 --> 00:31:32,370
what we've been doing and right now I

731
00:31:32,370 --> 00:31:34,260
want to say that there is no anti

732
00:31:34,260 --> 00:31:37,560
debugging no you know detection of the

733
00:31:37,560 --> 00:31:39,750
sandbox and stuff like that in that

734
00:31:39,750 --> 00:31:42,510
malware but we know through evolution

735
00:31:42,510 --> 00:31:44,880
and through our classic arms race that

736
00:31:44,880 --> 00:31:46,440
we've been talking about for the last

737
00:31:46,440 --> 00:31:48,930
two days that it's gonna happen so we

738
00:31:48,930 --> 00:31:50,640
need to be prepared and proactive and

739
00:31:50,640 --> 00:31:53,940
ready for this one it what happened so

740
00:31:53,940 --> 00:31:56,310
now we collected a lot of data pcaps

741
00:31:56,310 --> 00:31:59,190
logs for months distributed so Russia

742
00:31:59,190 --> 00:32:01,830
Brazil China and you need to analyze all

743
00:32:01,830 --> 00:32:03,810
of it I'm going to go through like

744
00:32:03,810 --> 00:32:07,550
really down technical details of what

745
00:32:07,550 --> 00:32:11,190
actual tools we were using so we decided

746
00:32:11,190 --> 00:32:12,990
to put that on a single server because

747
00:32:12,990 --> 00:32:15,810
you know our laptop only have a 512 gig

748
00:32:15,810 --> 00:32:19,800
and it was more than that well not

749
00:32:19,800 --> 00:32:21,870
really but you know I have VMs and stuff

750
00:32:21,870 --> 00:32:25,470
and pictures of my family so we decided

751
00:32:25,470 --> 00:32:27,360
to pull that in all in the centralized

752
00:32:27,360 --> 00:32:29,850
server and we decided to use ipython

753
00:32:29,850 --> 00:32:31,890
notebook as kind of a collaborative IDE

754
00:32:31,890 --> 00:32:35,670
so ipython notebook is a web hosted tool

755
00:32:35,670 --> 00:32:37,410
and this is all open source by the way

756
00:32:37,410 --> 00:32:40,170
and so I could share code snippet with

757
00:32:40,170 --> 00:32:43,470
other engineers at work and or data

758
00:32:43,470 --> 00:32:44,160
scientist

759
00:32:44,160 --> 00:32:48,660
very easily and and you can just run it

760
00:32:48,660 --> 00:32:50,400
interactively and it's and it keeps

761
00:32:50,400 --> 00:32:53,250
running so whenever you load a piece of

762
00:32:53,250 --> 00:32:55,470
code you can you know close your laptop

763
00:32:55,470 --> 00:32:58,230
leave and not be afraid that because you

764
00:32:58,230 --> 00:33:00,150
did you know amount of a remote file

765
00:33:00,150 --> 00:33:03,060
system you will lose your computation so

766
00:33:03,060 --> 00:33:04,980
for long term computation this works

767
00:33:04,980 --> 00:33:07,080
really well we use the scalable

768
00:33:07,080 --> 00:33:10,500
libraries so let's say you produce CSV

769
00:33:10,500 --> 00:33:12,480
files which is really useful to you know

770
00:33:12,480 --> 00:33:14,210
you use peak apps and then output

771
00:33:14,210 --> 00:33:17,420
through T shark you output CSV files

772
00:33:17,420 --> 00:33:19,680
pythons CSV

773
00:33:19,680 --> 00:33:23,100
is really flexible but it's slow with

774
00:33:23,100 --> 00:33:27,390
panda we did a more than 200 X faster

775
00:33:27,390 --> 00:33:28,770
you know so for when you have several

776
00:33:28,770 --> 00:33:32,040
gigabytes of CSV it matters numpy scifi

777
00:33:32,040 --> 00:33:34,830
so panda is kind of the Pythons

778
00:33:34,830 --> 00:33:36,990
implementation of the our language which

779
00:33:36,990 --> 00:33:39,300
is pretty powerful are still has some

780
00:33:39,300 --> 00:33:41,160
advantages or some edges but for the

781
00:33:41,160 --> 00:33:43,830
advanced statistics stuff that I'm not I

782
00:33:43,830 --> 00:33:45,720
don't even understand so I didn't need

783
00:33:45,720 --> 00:33:49,950
that power then we parallelized the

784
00:33:49,950 --> 00:33:52,290
everything that was heavy i/o or heavy

785
00:33:52,290 --> 00:33:56,730
cpu with new parallel script so new

786
00:33:56,730 --> 00:33:59,100
parallel is amazing if you do

787
00:33:59,100 --> 00:33:59,880
computation

788
00:33:59,880 --> 00:34:02,250
it's like X argh a drop-in replacement

789
00:34:02,250 --> 00:34:05,820
from X arcs but it will depict the

790
00:34:05,820 --> 00:34:07,710
number of cores on your system and just

791
00:34:07,710 --> 00:34:09,889
maximizes the parallel tasks

792
00:34:09,889 --> 00:34:12,480
automatically like no command line like

793
00:34:12,480 --> 00:34:15,300
just if you run parallel instead of X

794
00:34:15,300 --> 00:34:17,370
arcs it will maximize core usage by

795
00:34:17,370 --> 00:34:19,320
default you can have it watch for memory

796
00:34:19,320 --> 00:34:22,139
outage and kill and restart processors

797
00:34:22,139 --> 00:34:27,449
so 2 to crunch let's say I don't know

798
00:34:27,449 --> 00:34:30,659
8000 peak apps and have the the the

799
00:34:30,659 --> 00:34:33,360
output stored in a safe way because if

800
00:34:33,360 --> 00:34:35,489
it's concurrent and you put in all in

801
00:34:35,489 --> 00:34:37,350
the same log file you could have conquer

802
00:34:37,350 --> 00:34:39,179
it rights but good new parallel take

803
00:34:39,179 --> 00:34:41,280
care take care of that it's a very

804
00:34:41,280 --> 00:34:45,510
amazing tool recommended then specific

805
00:34:45,510 --> 00:34:47,699
tools for specific data right tea shark

806
00:34:47,699 --> 00:34:48,510
for pcaps

807
00:34:48,510 --> 00:34:51,060
you explore with Wireshark but once you

808
00:34:51,060 --> 00:34:53,810
found what you're looking for tea shark

809
00:34:53,810 --> 00:34:57,630
- capital T fields and then - II and the

810
00:34:57,630 --> 00:35:00,290
field names that you are interested in

811
00:35:00,290 --> 00:35:02,820
man in the middle proxy for man in the

812
00:35:02,820 --> 00:35:07,080
middle proxy logs yes but so these are

813
00:35:07,080 --> 00:35:09,360
this has been our tool chain and in the

814
00:35:09,360 --> 00:35:12,060
future section I'll tell you like why

815
00:35:12,060 --> 00:35:14,130
this looks medieval and I understand but

816
00:35:14,130 --> 00:35:16,320
I need I understand the need for

817
00:35:16,320 --> 00:35:20,280
dashboards will get there actually but

818
00:35:20,280 --> 00:35:22,470
now it's the story time so our famous

819
00:35:22,470 --> 00:35:24,410
three cases I want to talk to you about

820
00:35:24,410 --> 00:35:27,810
first one is the lizard squad guy which

821
00:35:27,810 --> 00:35:30,510
was known as a gasket malware and yeah

822
00:35:30,510 --> 00:35:33,570
is the industry's trying to censor the

823
00:35:33,570 --> 00:35:36,660
real string inside this malware which is

824
00:35:36,660 --> 00:35:39,780
gay so the industry just like you

825
00:35:39,780 --> 00:35:42,000
know flipped some letter because there

826
00:35:42,000 --> 00:35:44,220
was a kind of a gay string and it

827
00:35:44,220 --> 00:35:46,290
would quit if you send it a fax

828
00:35:46,290 --> 00:35:48,660
something like that this is the lizard

829
00:35:48,660 --> 00:35:52,260
squad moniker if you want their online

830
00:35:52,260 --> 00:35:54,720
face who are they it's a black hat

831
00:35:54,720 --> 00:35:57,870
hacking group they did a lot of DDoS and

832
00:35:57,870 --> 00:36:00,150
we had a DDoS for hire service called

833
00:36:00,150 --> 00:36:03,270
laser stressor they did they are the

834
00:36:03,270 --> 00:36:04,410
ones behind the attack on the

835
00:36:04,410 --> 00:36:06,420
PlayStation Network and Xbox Live in

836
00:36:06,420 --> 00:36:10,350
Christmas 2014 and the this was kind of

837
00:36:10,350 --> 00:36:12,630
really public but it was not done enough

838
00:36:12,630 --> 00:36:15,180
for them to be arrested or to be going

839
00:36:15,180 --> 00:36:18,150
going after what happened is it is what

840
00:36:18,150 --> 00:36:19,620
made them really get law enforcement

841
00:36:19,620 --> 00:36:22,770
attention is when they started making

842
00:36:22,770 --> 00:36:24,570
bomb threats but kind of weird bomb

843
00:36:24,570 --> 00:36:26,460
threats let me explain to you one of

844
00:36:26,460 --> 00:36:29,130
them is the we call American Airlines or

845
00:36:29,130 --> 00:36:32,040
an American Airlines from America and

846
00:36:32,040 --> 00:36:34,620
they said oh this guy we believe we have

847
00:36:34,620 --> 00:36:36,720
strong indication that he has a bomb in

848
00:36:36,720 --> 00:36:40,230
his luggage so it kind of escalated

849
00:36:40,230 --> 00:36:42,930
really quickly and they forced the plane

850
00:36:42,930 --> 00:36:45,990
down but the guy who was the VP of Sony

851
00:36:45,990 --> 00:36:50,040
in charge of the gaming branch of all of

852
00:36:50,040 --> 00:36:52,800
Sony so a very important guy and he got

853
00:36:52,800 --> 00:36:54,600
treated like a criminal you know the

854
00:36:54,600 --> 00:36:56,640
plane landed and when you a plane land

855
00:36:56,640 --> 00:36:58,620
because of you you have to pay for the

856
00:36:58,620 --> 00:37:01,740
fees of landing a plane in emergency I

857
00:37:01,740 --> 00:37:03,870
think some BlackBerry guys have a story

858
00:37:03,870 --> 00:37:13,020
about that but so what happened is this

859
00:37:13,020 --> 00:37:14,970
really got them some attention and

860
00:37:14,970 --> 00:37:18,060
several of them were arrested in 2016 I

861
00:37:18,060 --> 00:37:19,770
think around August or September

862
00:37:19,770 --> 00:37:23,130
timeframe but still the malware is like

863
00:37:23,130 --> 00:37:25,830
again it's the thing that hit the most

864
00:37:25,830 --> 00:37:28,410
the honeypot still today because the

865
00:37:28,410 --> 00:37:30,870
source code was leaked and various

866
00:37:30,870 --> 00:37:32,640
variants were made and it's really easy

867
00:37:32,640 --> 00:37:34,920
to come by land the to to Chinese is

868
00:37:34,920 --> 00:37:37,740
easy but still I mean what kind of well

869
00:37:37,740 --> 00:37:41,250
this description of a cyber group is not

870
00:37:41,250 --> 00:37:43,720
like cyber criminals or or you know

871
00:37:43,720 --> 00:37:46,090
bad actors or targeted attackers it's

872
00:37:46,090 --> 00:37:49,330
more like cyber rascals right like come

873
00:37:49,330 --> 00:37:51,040
on guys you should know better grow

874
00:37:51,040 --> 00:37:52,570
older and stop doing that kind of

875
00:37:52,570 --> 00:37:55,780
reaction to it you know but so Brian

876
00:37:55,780 --> 00:37:57,640
Krebs confirmed that a lizard stressor

877
00:37:57,640 --> 00:38:00,130
was running on hacked home routers so we

878
00:38:00,130 --> 00:38:01,990
knew that even though they could infect

879
00:38:01,990 --> 00:38:05,740
server they are also targeting routers

880
00:38:05,740 --> 00:38:09,520
and IOT the malware itself gaff get pal

881
00:38:09,520 --> 00:38:11,859
but a drug Caitlyn every all of these

882
00:38:11,859 --> 00:38:14,640
are the same code base that was fork and

883
00:38:14,640 --> 00:38:17,290
has different features depending on who

884
00:38:17,290 --> 00:38:19,210
wrote it and what subgroup of lizard

885
00:38:19,210 --> 00:38:23,380
squad is using it they have a there is a

886
00:38:23,380 --> 00:38:25,210
telnet scanner did be supports several

887
00:38:25,210 --> 00:38:28,060
types of flooding mechanism supports

888
00:38:28,060 --> 00:38:31,060
multiple architecture like super H which

889
00:38:31,060 --> 00:38:33,880
I mean I'm not even surely infected one

890
00:38:33,880 --> 00:38:36,760
thing super H I know nothing that runs

891
00:38:36,760 --> 00:38:39,750
super H except the chip in the

892
00:38:39,750 --> 00:38:42,250
camcorders which don't have a telnet

893
00:38:42,250 --> 00:38:44,740
exposed I so I just don't understand

894
00:38:44,740 --> 00:38:47,920
what's going on on here but you know GCC

895
00:38:47,920 --> 00:38:49,480
compiles to it so I think this is what

896
00:38:49,480 --> 00:38:51,369
the reason is it's just like oh we can

897
00:38:51,369 --> 00:38:53,020
support it we'll do it

898
00:38:53,020 --> 00:38:58,000
mips arm x86 PowerPC the it's fun to

899
00:38:58,000 --> 00:39:00,849
have an x86 variant because you can

900
00:39:00,849 --> 00:39:02,980
reverse it comfortably with all of your

901
00:39:02,980 --> 00:39:05,950
tooling you know under with x86 that

902
00:39:05,950 --> 00:39:07,450
becomes the compiler and all that good

903
00:39:07,450 --> 00:39:07,720
stuff

904
00:39:07,720 --> 00:39:09,940
so thank you this is lizard squad for

905
00:39:09,940 --> 00:39:13,480
providing one the server code even

906
00:39:13,480 --> 00:39:16,180
acknowledged that they were supporting

907
00:39:16,180 --> 00:39:18,339
or targeting IOT now so this is one of

908
00:39:18,339 --> 00:39:20,170
the version that I had source code

909
00:39:20,170 --> 00:39:22,480
access to and you see like oh now with

910
00:39:22,480 --> 00:39:26,140
refrigerator support the attack vectors

911
00:39:26,140 --> 00:39:27,190
that they are using they're really

912
00:39:27,190 --> 00:39:29,859
opportunistic so you used shell shock

913
00:39:29,859 --> 00:39:32,230
when it was cool but otherwise it's

914
00:39:32,230 --> 00:39:33,460
credential brute force

915
00:39:33,460 --> 00:39:37,119
SSH antenna with a short list of you a

916
00:39:37,119 --> 00:39:38,520
weak username and passwords

917
00:39:38,520 --> 00:39:40,720
shell-shocked looks like this so they

918
00:39:40,720 --> 00:39:43,089
triggered a bug the famous shell shock

919
00:39:43,089 --> 00:39:45,520
signature and then the W get a script

920
00:39:45,520 --> 00:39:47,680
and then they launched it in in a shell

921
00:39:47,680 --> 00:39:50,080
and that script what it does is it

922
00:39:50,080 --> 00:39:53,410
downloads every variants so all of the

923
00:39:53,410 --> 00:39:55,930
architecture that are supported modded

924
00:39:55,930 --> 00:39:57,549
to make it executable

925
00:39:57,549 --> 00:40:00,549
try to run every architecture and one of

926
00:40:00,549 --> 00:40:03,159
them will run hopefully and that's this

927
00:40:03,159 --> 00:40:08,259
is the their fancy payload we've seen

928
00:40:08,259 --> 00:40:10,899
variants with HTTP support and also one

929
00:40:10,899 --> 00:40:13,239
with CloudFlare protection bypass which

930
00:40:13,239 --> 00:40:16,899
was interesting all hand coded in C so

931
00:40:16,899 --> 00:40:19,239
they CloudFlare protection is based on a

932
00:40:19,239 --> 00:40:20,829
JavaScript challenge that your browser

933
00:40:20,829 --> 00:40:23,259
solves so you don't even see it but you

934
00:40:23,259 --> 00:40:26,289
have this kind of you need a full

935
00:40:26,289 --> 00:40:28,239
JavaScript interpreter so what they did

936
00:40:28,239 --> 00:40:30,130
is the the reverse-engineer the

937
00:40:30,130 --> 00:40:31,569
JavaScript challenge and they

938
00:40:31,569 --> 00:40:36,299
implemented just what they needed in C

939
00:40:37,319 --> 00:40:39,849
they implemented just what they needed

940
00:40:39,849 --> 00:40:41,499
in C to be able to solve that challenge

941
00:40:41,499 --> 00:40:43,479
so this is kind of interesting and kind

942
00:40:43,479 --> 00:40:46,269
of probably a group to track more

943
00:40:46,269 --> 00:40:48,999
closely different tactics and and better

944
00:40:48,999 --> 00:40:51,549
implementation right but it was still a

945
00:40:51,549 --> 00:40:53,880
lizard lizard' stress or a code base so

946
00:40:53,880 --> 00:40:56,589
are they sophisticated not really

947
00:40:56,589 --> 00:40:58,839
database was League passwords and

948
00:40:58,839 --> 00:41:02,199
plaintext you know a lot of you know bad

949
00:41:02,199 --> 00:41:07,479
up sick the it's an IRC botnet so you

950
00:41:07,479 --> 00:41:09,489
can log on the IRC government control

951
00:41:09,489 --> 00:41:11,619
you can see the number of you of users

952
00:41:11,619 --> 00:41:13,569
you cannot list them but you can see the

953
00:41:13,569 --> 00:41:16,209
global server stats so you knew ok this

954
00:41:16,209 --> 00:41:19,630
sample has this amount of butts you see

955
00:41:19,630 --> 00:41:22,029
the nickname of the butt masters so it's

956
00:41:22,029 --> 00:41:24,039
pretty like you know you're low

957
00:41:24,039 --> 00:41:26,919
operation you know if I want to say like

958
00:41:26,919 --> 00:41:27,729
the cool kids

959
00:41:27,729 --> 00:41:30,759
mostly gamers related target so DSL

960
00:41:30,759 --> 00:41:33,519
lines game hosting companies stuff like

961
00:41:33,519 --> 00:41:37,539
that really around gaming so even though

962
00:41:37,539 --> 00:41:39,549
some were arrested because the source

963
00:41:39,549 --> 00:41:40,659
code was leaked it's still very

964
00:41:40,659 --> 00:41:43,059
prevalent but it's operated by numerous

965
00:41:43,059 --> 00:41:45,669
unrelated actors we think and still

966
00:41:45,669 --> 00:41:47,649
focused and are very focused on lead us

967
00:41:47,649 --> 00:41:53,139
activities so the second story is how am

968
00:41:53,139 --> 00:41:57,519
i doing on time have a have like 15 left

969
00:41:57,519 --> 00:42:02,349
or oh I can I bust like that guy before

970
00:42:02,349 --> 00:42:05,559
me because it's coffee break after okay

971
00:42:05,559 --> 00:42:07,179
I'll see what I can do in five minutes

972
00:42:07,179 --> 00:42:10,940
so Linux moose was a

973
00:42:10,940 --> 00:42:12,349
but now that was selling fraudulent

974
00:42:12,349 --> 00:42:14,569
followers on Instagram okay did we track

975
00:42:14,569 --> 00:42:16,970
this for a long time but and this is

976
00:42:16,970 --> 00:42:18,530
what happened I first started tracking

977
00:42:18,530 --> 00:42:20,660
it at when I was working for Issa but

978
00:42:20,660 --> 00:42:22,880
since then with them we partnered and I

979
00:42:22,880 --> 00:42:25,310
continued the operation more of on the

980
00:42:25,310 --> 00:42:31,310
social network side of things so this is

981
00:42:31,310 --> 00:42:32,750
what we built in order to catch the

982
00:42:32,750 --> 00:42:34,550
thing and you saw the component but this

983
00:42:34,550 --> 00:42:36,740
is more of a dynamic view we added in

984
00:42:36,740 --> 00:42:37,430
front of it

985
00:42:37,430 --> 00:42:39,589
the man-in-the-middle proxy attack and

986
00:42:39,589 --> 00:42:41,720
this is how we get the traffic so we

987
00:42:41,720 --> 00:42:43,460
published an extensive paper about it

988
00:42:43,460 --> 00:42:46,849
and we spoke at blackhat Europe last

989
00:42:46,849 --> 00:42:49,310
year on it and this is in a nutshell in

990
00:42:49,310 --> 00:42:50,960
one slide our findings

991
00:42:50,960 --> 00:42:53,300
I won't I don't have the time to go

992
00:42:53,300 --> 00:42:54,500
through it because I have a lot of stuff

993
00:42:54,500 --> 00:42:56,540
to cover still but it's a very

994
00:42:56,540 --> 00:42:59,240
interesting very unique and money-making

995
00:42:59,240 --> 00:43:02,089
machine but no one is interested law

996
00:43:02,089 --> 00:43:03,319
enforcement is not interested because

997
00:43:03,319 --> 00:43:05,240
there is no route not really victims

998
00:43:05,240 --> 00:43:06,339
here

999
00:43:06,339 --> 00:43:10,359
so chaos is the thing we did this summer

1000
00:43:10,359 --> 00:43:12,740
SSH credential brute force saying which

1001
00:43:12,740 --> 00:43:15,079
I'm recon script that is interesting it

1002
00:43:15,079 --> 00:43:17,420
one of the components is a rustic add

1003
00:43:17,420 --> 00:43:19,640
backdoor for various reason it's kind of

1004
00:43:19,640 --> 00:43:22,490
novel and interesting I I have I like

1005
00:43:22,490 --> 00:43:24,260
doing that I'm about to publish a blog

1006
00:43:24,260 --> 00:43:26,869
post about it it does bozo cryptography

1007
00:43:26,869 --> 00:43:29,450
in order to obfuscate so you cannot if

1008
00:43:29,450 --> 00:43:31,310
you have a Wireshark dump or pcap you

1009
00:43:31,310 --> 00:43:34,490
cannot see exactly what's going on it

1010
00:43:34,490 --> 00:43:36,710
uses a hash Mac so there is integrity

1011
00:43:36,710 --> 00:43:38,990
and replay attack prevention so they

1012
00:43:38,990 --> 00:43:41,930
kind of saw some sophistication is it

1013
00:43:41,930 --> 00:43:43,550
good know if you saw the initial

1014
00:43:43,550 --> 00:43:45,200
handshake you can decrypt the whole

1015
00:43:45,200 --> 00:43:46,880
traffic but it's still something that

1016
00:43:46,880 --> 00:43:49,849
would require some work write blog post

1017
00:43:49,849 --> 00:43:51,470
I say early next week but I've been

1018
00:43:51,470 --> 00:43:53,119
saying that for the last three times I

1019
00:43:53,119 --> 00:43:55,040
did that presentation so maybe not next

1020
00:43:55,040 --> 00:43:57,710
week but the thing is I need to scan the

1021
00:43:57,710 --> 00:43:59,150
internet to found an amount of victims

1022
00:43:59,150 --> 00:44:02,930
and my deploy my scanning the internet

1023
00:44:02,930 --> 00:44:04,670
thing is it's not as easy as I thought

1024
00:44:04,670 --> 00:44:09,109
it was and I'm almost done so future

1025
00:44:09,109 --> 00:44:11,119
work I wanna I want able to collect the

1026
00:44:11,119 --> 00:44:12,859
stage 2 samples because the bad guys

1027
00:44:12,859 --> 00:44:15,710
they started using droppers now I want

1028
00:44:15,710 --> 00:44:17,690
to emulate more devices and make it make

1029
00:44:17,690 --> 00:44:19,069
our honey pots harder the fingerprint

1030
00:44:19,069 --> 00:44:21,290
because it's the classic arms race that

1031
00:44:21,290 --> 00:44:23,450
is happening right now data analysis

1032
00:44:23,450 --> 00:44:24,819
I'll just say one thing

1033
00:44:24,819 --> 00:44:28,190
elasticsearch looks - cabana i will

1034
00:44:28,190 --> 00:44:30,260
deploy an elk stat dashboard and i will

1035
00:44:30,260 --> 00:44:31,609
show that to management and i will

1036
00:44:31,609 --> 00:44:33,829
continue to get money for cloud honey

1037
00:44:33,829 --> 00:44:36,770
pots right I would like to build either

1038
00:44:36,770 --> 00:44:39,710
flirt signatures a build farm to cover

1039
00:44:39,710 --> 00:44:42,800
all of these architectures ideally now

1040
00:44:42,800 --> 00:44:45,260
fixing the problem device vendors should

1041
00:44:45,260 --> 00:44:47,390
stop using the fall credentials and use

1042
00:44:47,390 --> 00:44:49,700
per device credentials instead they are

1043
00:44:49,700 --> 00:44:52,000
already doing it for the wireless

1044
00:44:52,000 --> 00:44:53,300
interface

1045
00:44:53,300 --> 00:44:56,000
you know SSID and password so they can

1046
00:44:56,000 --> 00:44:57,920
do it don't say they can't do it they

1047
00:44:57,920 --> 00:45:01,940
can do it they just need to do it stop

1048
00:45:01,940 --> 00:45:03,800
exposing general-purpose management port

1049
00:45:03,800 --> 00:45:05,569
and if you have to do it put a button

1050
00:45:05,569 --> 00:45:07,880
and put a timeout so you need SSH access

1051
00:45:07,880 --> 00:45:10,819
to your your router or your IOT you need

1052
00:45:10,819 --> 00:45:12,589
to push a physical button then for five

1053
00:45:12,589 --> 00:45:14,030
minutes you have you know physical

1054
00:45:14,030 --> 00:45:16,130
access I understand this is for consumer

1055
00:45:16,130 --> 00:45:17,930
devices I don't want you know network

1056
00:45:17,930 --> 00:45:20,059
admins to panic or attack me it's not

1057
00:45:20,059 --> 00:45:22,220
realistic in that context but you know

1058
00:45:22,220 --> 00:45:24,819
and minun minun is really their

1059
00:45:24,819 --> 00:45:26,930
consumers should put password on the

1060
00:45:26,930 --> 00:45:29,270
devices and i even advise people

1061
00:45:29,270 --> 00:45:30,980
whenever they add they are at another

1062
00:45:30,980 --> 00:45:33,650
like you you're visiting a friend and

1063
00:45:33,650 --> 00:45:37,099
you your use their Wi-Fi go hit the 192

1064
00:45:37,099 --> 00:45:40,069
168 1 1 and if you try and min and min

1065
00:45:40,069 --> 00:45:42,319
or and then lexus and you get in change

1066
00:45:42,319 --> 00:45:45,049
that password just change it for them

1067
00:45:45,049 --> 00:45:47,780
and then write it down and then put the

1068
00:45:47,780 --> 00:45:49,790
paper on top of the thing right I have a

1069
00:45:49,790 --> 00:45:54,890
demo and then your new password and

1070
00:45:54,890 --> 00:45:56,210
don't use your new paths you know

1071
00:45:56,210 --> 00:45:58,520
because attackers will add it to the

1072
00:45:58,520 --> 00:46:00,799
list and then you know this is the IP

1073
00:46:00,799 --> 00:46:05,210
thank you I good deed so for developers

1074
00:46:05,210 --> 00:46:08,299
you need to have and I'll just go really

1075
00:46:08,299 --> 00:46:09,680
quickly to that but you need to have a

1076
00:46:09,680 --> 00:46:11,240
hacker mindset when developing features

1077
00:46:11,240 --> 00:46:13,640
so attack scalability and this is like a

1078
00:46:13,640 --> 00:46:16,369
DDoS amplification attack are real so

1079
00:46:16,369 --> 00:46:18,290
anytime you develop an feature you think

1080
00:46:18,290 --> 00:46:21,980
like okay this one devices I think it's

1081
00:46:21,980 --> 00:46:24,440
okay but if there is a hundred thousand

1082
00:46:24,440 --> 00:46:26,960
and I still abuse or use the same

1083
00:46:26,960 --> 00:46:29,720
feature it does the hacker have an upper

1084
00:46:29,720 --> 00:46:32,569
and in that context or not you need to

1085
00:46:32,569 --> 00:46:33,829
think about that and you need to

1086
00:46:33,829 --> 00:46:35,839
leverage the implied physical access for

1087
00:46:35,839 --> 00:46:37,730
consumer devices you have physical

1088
00:46:37,730 --> 00:46:38,040
access

1089
00:46:38,040 --> 00:46:40,350
for anything that is sensitive you

1090
00:46:40,350 --> 00:46:42,150
should require some physical

1091
00:46:42,150 --> 00:46:46,350
interactions so the takeaway is IOT

1092
00:46:46,350 --> 00:46:48,060
isn't secure but it can be fixed for the

1093
00:46:48,060 --> 00:46:49,530
low-hanging fruit problems and then

1094
00:46:49,530 --> 00:46:52,380
we'll you know I'll try to be in advance

1095
00:46:52,380 --> 00:46:54,420
and tackle the next generations of

1096
00:46:54,420 --> 00:46:56,760
problems and we'll be ready to have you

1097
00:46:56,760 --> 00:46:59,640
know the samples collected and then

1098
00:46:59,640 --> 00:47:01,230
we'll talk about what's the next

1099
00:47:01,230 --> 00:47:04,490
generation of fixes required but for now

1100
00:47:04,490 --> 00:47:08,100
99.9% of the stuff I saw just the simple

1101
00:47:08,100 --> 00:47:10,230
advice I said earlier would get rid of

1102
00:47:10,230 --> 00:47:12,510
that problem I understand some visionary

1103
00:47:12,510 --> 00:47:14,670
talk about IOT and like complex terms

1104
00:47:14,670 --> 00:47:16,890
and they have like more thoughtful

1105
00:47:16,890 --> 00:47:19,290
advice than me but I mean I'm just

1106
00:47:19,290 --> 00:47:21,900
focused on doing a Pareto principle here

1107
00:47:21,900 --> 00:47:24,330
and paint aiming to fix any person at

1108
00:47:24,330 --> 00:47:26,130
the problem with really low effort and

1109
00:47:26,130 --> 00:47:29,520
this is my advice my takeaway for today

1110
00:47:29,520 --> 00:47:31,590
so with this thank you so much for your

1111
00:47:31,590 --> 00:47:34,620
time sorry I I went through I went over

1112
00:47:34,620 --> 00:47:36,900
time but I want to say thanks to the

1113
00:47:36,900 --> 00:47:38,640
countermeasure staff and volunteers for

1114
00:47:38,640 --> 00:47:40,920
the speaking opportunity now I like

1115
00:47:40,920 --> 00:47:43,320
attended many talks and I really enjoy

1116
00:47:43,320 --> 00:47:44,850
countermeasures so for me it's a great

1117
00:47:44,850 --> 00:47:46,460
event

1118
00:47:46,460 --> 00:47:49,949
[Music]

