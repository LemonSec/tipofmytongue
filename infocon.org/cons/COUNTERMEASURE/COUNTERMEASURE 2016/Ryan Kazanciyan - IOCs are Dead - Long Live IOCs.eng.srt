1
00:00:00,220 --> 00:00:04,019
[Music]

2
00:00:20,110 --> 00:00:24,740
all right good morning everyone thanks

3
00:00:22,910 --> 00:00:26,630
once again for having me here at counter

4
00:00:24,740 --> 00:00:29,119
measure as Corrine mentioned this is my

5
00:00:26,630 --> 00:00:31,099
third time presenting here and it's

6
00:00:29,119 --> 00:00:33,170
event I always really look forward to

7
00:00:31,099 --> 00:00:36,079
every year so I'm excited to share this

8
00:00:33,170 --> 00:00:37,340
presentation with you all so we're going

9
00:00:36,079 --> 00:00:38,899
to be talking about IOT s we're going to

10
00:00:37,340 --> 00:00:41,899
be talking about threat data and threat

11
00:00:38,899 --> 00:00:43,160
intelligence and my perspective on it

12
00:00:41,899 --> 00:00:45,769
and how that's evolved over the years

13
00:00:43,160 --> 00:00:48,800
but by way of quick background and I

14
00:00:45,769 --> 00:00:50,899
will try not to repeat the same ground

15
00:00:48,800 --> 00:00:52,730
that Kareem discovered I live in

16
00:00:50,899 --> 00:00:55,399
Alexandria Virginia so just outside of

17
00:00:52,730 --> 00:00:57,529
the DC area I've been there for about 13

18
00:00:55,399 --> 00:00:59,329
years now just kind of an anomaly

19
00:00:57,530 --> 00:01:01,370
very few people it's a very transient

20
00:00:59,329 --> 00:01:03,170
area a lot of people move in and out as

21
00:01:01,370 --> 00:01:04,670
they do contracting work for the

22
00:01:03,170 --> 00:01:06,350
government or for businesses set there

23
00:01:04,670 --> 00:01:09,110
but I've been there for over a decade

24
00:01:06,350 --> 00:01:10,280
now I was at PricewaterhouseCoopers for

25
00:01:09,110 --> 00:01:12,800
about five years

26
00:01:10,280 --> 00:01:16,430
as a consultant first in their federal

27
00:01:12,800 --> 00:01:18,080
practice then in their private sector

28
00:01:16,430 --> 00:01:20,450
technology and security practice

29
00:01:18,080 --> 00:01:22,940
primarily doing security assessments

30
00:01:20,450 --> 00:01:25,370
penetration testing application security

31
00:01:22,940 --> 00:01:27,200
testing and just the whole variety of

32
00:01:25,370 --> 00:01:28,450
one-off things that you get asked to do

33
00:01:27,200 --> 00:01:30,800
when you're a technical consultant

34
00:01:28,450 --> 00:01:32,750
focused on security in the big four I

35
00:01:30,800 --> 00:01:35,060
then spent six more years as a

36
00:01:32,750 --> 00:01:36,530
consultant that mandiant left there as a

37
00:01:35,060 --> 00:01:38,810
technical director and lead for their

38
00:01:36,530 --> 00:01:40,340
Incident Response practice that's where

39
00:01:38,810 --> 00:01:42,620
I kind of shifted from focusing on

40
00:01:40,340 --> 00:01:45,380
offense to defense and investigations

41
00:01:42,620 --> 00:01:48,190
and forensics and primarily led a lot of

42
00:01:45,380 --> 00:01:50,360
Investigations for nation-state attacks

43
00:01:48,190 --> 00:01:52,789
targeted intrusion cases and the like

44
00:01:50,360 --> 00:01:54,890
and for the last year and a half or so

45
00:01:52,790 --> 00:01:56,540
I've been with Danian where I both work

46
00:01:54,890 --> 00:01:58,160
with our product team on helping build

47
00:01:56,540 --> 00:02:00,380
and shape what we do in the security

48
00:01:58,160 --> 00:02:02,509
space as well as run an internal team

49
00:02:00,380 --> 00:02:05,179
that does a mixture of engineering and

50
00:02:02,510 --> 00:02:06,830
consulting type work I'm a contributing

51
00:02:05,180 --> 00:02:08,750
author to Incident Response to computer

52
00:02:06,830 --> 00:02:10,429
forensics I wrote the investigating

53
00:02:08,750 --> 00:02:12,560
Windows portion of that couple years ago

54
00:02:10,429 --> 00:02:14,239
and as Krim mentioned that was a tech

55
00:02:12,560 --> 00:02:15,790
consultant for last season of mr. robot

56
00:02:14,239 --> 00:02:18,110
and I'm currently working with the

57
00:02:15,790 --> 00:02:19,820
production writing team on season three

58
00:02:18,110 --> 00:02:21,690
actually right now every night pretty

59
00:02:19,820 --> 00:02:24,570
much

60
00:02:21,690 --> 00:02:28,190
so let's go back to 2010 in 2010 I was

61
00:02:24,570 --> 00:02:31,140
doing a presentation at mitre I believe

62
00:02:28,190 --> 00:02:32,640
about indicators of compromise and this

63
00:02:31,140 --> 00:02:35,459
was a couple years into my tenure at

64
00:02:32,640 --> 00:02:38,250
mandiant and we were talking about the

65
00:02:35,460 --> 00:02:40,470
need to have an ioc format to have an

66
00:02:38,250 --> 00:02:42,770
indicator of compromise format because

67
00:02:40,470 --> 00:02:46,050
we were plagued with this challenge of

68
00:02:42,770 --> 00:02:48,660
inefficient and unsuccessful information

69
00:02:46,050 --> 00:02:50,280
sharing about threats and so the thing

70
00:02:48,660 --> 00:02:52,920
we ballon was that everyone had been

71
00:02:50,280 --> 00:02:55,530
sharing threat data in these flat static

72
00:02:52,920 --> 00:02:57,480
really brittle lists of hashes and IPS

73
00:02:55,530 --> 00:02:59,580
that had no context no grouping no

74
00:02:57,480 --> 00:03:01,769
intelligence and indicator of compromise

75
00:02:59,580 --> 00:03:03,650
formats like open IOC we're going to

76
00:03:01,770 --> 00:03:07,320
magically fix all of these problems and

77
00:03:03,650 --> 00:03:09,360
the goal of IOC s as opposed to just

78
00:03:07,320 --> 00:03:11,609
flat unstructured data was to produce

79
00:03:09,360 --> 00:03:14,910
human readable and yet machine

80
00:03:11,610 --> 00:03:17,190
consumable forms of threat data to

81
00:03:14,910 --> 00:03:19,049
expand the widths or breadth of the

82
00:03:17,190 --> 00:03:22,710
types of forensic artifacts that we were

83
00:03:19,050 --> 00:03:25,470
going to share and capture and to

84
00:03:22,710 --> 00:03:27,180
provide more context around groupings of

85
00:03:25,470 --> 00:03:29,700
observables rather than just provide

86
00:03:27,180 --> 00:03:31,530
lists with no information about how they

87
00:03:29,700 --> 00:03:33,959
related or what they actually meant to

88
00:03:31,530 --> 00:03:37,080
do better than signatures in short and

89
00:03:33,959 --> 00:03:39,150
so you fast forward six years to now and

90
00:03:37,080 --> 00:03:41,520
we've got a whole multitude of different

91
00:03:39,150 --> 00:03:43,050
standards for different levels and ways

92
00:03:41,520 --> 00:03:46,920
of expressing threat indicators

93
00:03:43,050 --> 00:03:49,950
everything from cybox to Yarra Open IOC

94
00:03:46,920 --> 00:03:51,780
sticks and then we've got a equal

95
00:03:49,950 --> 00:03:54,170
actually a much greater number of

96
00:03:51,780 --> 00:03:56,850
organisations both private and public

97
00:03:54,170 --> 00:04:00,179
dedicated to distributing sharing

98
00:03:56,850 --> 00:04:01,799
generating threat indicators in the US

99
00:04:00,180 --> 00:04:03,959
we have quite a few that are industry

100
00:04:01,800 --> 00:04:05,610
vertical align so you've got like FSI

101
00:04:03,959 --> 00:04:07,800
sack for the Financial Services Group

102
00:04:05,610 --> 00:04:10,170
div I sack for the defense industrial

103
00:04:07,800 --> 00:04:12,030
base and then alongside with that

104
00:04:10,170 --> 00:04:15,030
there's more and more government

105
00:04:12,030 --> 00:04:16,440
agencies across all the major Western

106
00:04:15,030 --> 00:04:18,870
nations that are working with private

107
00:04:16,440 --> 00:04:23,280
sector to foster information sharing and

108
00:04:18,870 --> 00:04:25,050
that public-private exchange and so with

109
00:04:23,280 --> 00:04:28,979
all of this what is information sharing

110
00:04:25,050 --> 00:04:30,960
and I OCS look like in 2016 and I just

111
00:04:28,980 --> 00:04:33,470
took snippets from five or six different

112
00:04:30,960 --> 00:04:35,469
IOC sets from some of the major

113
00:04:33,470 --> 00:04:37,000
organizations that share them and I

114
00:04:35,470 --> 00:04:38,590
this is going to be small back there but

115
00:04:37,000 --> 00:04:40,150
hopefully you can at least see one thing

116
00:04:38,590 --> 00:04:42,400
which is the shape of this data it is

117
00:04:40,150 --> 00:04:44,950
flat lists of hashes and IP addresses

118
00:04:42,400 --> 00:04:46,840
they happen to be in an IOC format but

119
00:04:44,950 --> 00:04:49,330
it's the exact same thing that we were

120
00:04:46,840 --> 00:04:51,039
trying to get away from and I find that

121
00:04:49,330 --> 00:04:53,050
really interesting and part of what I

122
00:04:51,040 --> 00:04:54,940
wanted to talk about today is why is

123
00:04:53,050 --> 00:04:56,350
that why is that that we've invested so

124
00:04:54,940 --> 00:04:58,570
much time and effort and money in

125
00:04:56,350 --> 00:05:00,820
creating these codified formats the

126
00:04:58,570 --> 00:05:03,280
threats share and capture threat data

127
00:05:00,820 --> 00:05:05,530
and yet we're still basically doing the

128
00:05:03,280 --> 00:05:08,289
exact same thing and as part of that

129
00:05:05,530 --> 00:05:10,719
perspective my own viewpoint has evolved

130
00:05:08,290 --> 00:05:13,510
just as I've changed roles and jobs when

131
00:05:10,720 --> 00:05:16,300
I was an investigator I spend a lot of

132
00:05:13,510 --> 00:05:18,099
time designing and testing and even

133
00:05:16,300 --> 00:05:21,040
building mechanisms mechanisms to

134
00:05:18,100 --> 00:05:23,590
automatically generate IOC s for both

135
00:05:21,040 --> 00:05:25,750
proactive and reactive hunting but in

136
00:05:23,590 --> 00:05:28,450
kind of a context of expert teams that

137
00:05:25,750 --> 00:05:30,070
do this day in and day out for the last

138
00:05:28,450 --> 00:05:31,510
two years I've been more of a builder

139
00:05:30,070 --> 00:05:33,130
role where I'm really thinking more

140
00:05:31,510 --> 00:05:34,570
about working with organizations that

141
00:05:33,130 --> 00:05:37,000
are trying to take on this capability

142
00:05:34,570 --> 00:05:38,890
themselves or integrate this capability

143
00:05:37,000 --> 00:05:41,470
through third-party sources like

144
00:05:38,890 --> 00:05:43,090
third-party threat streams and it's

145
00:05:41,470 --> 00:05:44,770
really eye-opening to see a lot of the

146
00:05:43,090 --> 00:05:46,299
challenges that organizations face as

147
00:05:44,770 --> 00:05:47,620
they take in and buy these threat

148
00:05:46,300 --> 00:05:49,540
streams and what they're actually

149
00:05:47,620 --> 00:05:51,550
finding they get as a return on

150
00:05:49,540 --> 00:05:52,990
investment than that just as the show of

151
00:05:51,550 --> 00:05:54,550
hands here how many of you work for an

152
00:05:52,990 --> 00:05:58,810
organization that is currently paying

153
00:05:54,550 --> 00:06:00,460
money for third party threat data see a

154
00:05:58,810 --> 00:06:02,290
few hands I know we've got a decent

155
00:06:00,460 --> 00:06:03,640
number of folks in government here how

156
00:06:02,290 --> 00:06:06,130
many of you are actually producing

157
00:06:03,640 --> 00:06:10,360
threat data to share among your peers or

158
00:06:06,130 --> 00:06:13,419
private private public sector I see one

159
00:06:10,360 --> 00:06:15,010
hesitant hand at least yeah this is

160
00:06:13,419 --> 00:06:16,240
still really young right this is still

161
00:06:15,010 --> 00:06:17,560
evolving and this is part of why I

162
00:06:16,240 --> 00:06:19,240
wanted to put this presentation together

163
00:06:17,560 --> 00:06:21,070
because I think we're at an inflection

164
00:06:19,240 --> 00:06:22,720
point where people are making really

165
00:06:21,070 --> 00:06:24,310
important decisions about where they

166
00:06:22,720 --> 00:06:26,500
invest in what they build and what they

167
00:06:24,310 --> 00:06:27,760
share and it's across that backdrop that

168
00:06:26,500 --> 00:06:29,830
I wanted to provide some of this

169
00:06:27,760 --> 00:06:32,050
perspective and really what I'm seeing

170
00:06:29,830 --> 00:06:34,630
is that there has been an erosion of

171
00:06:32,050 --> 00:06:37,270
indicator based threat detection and

172
00:06:34,630 --> 00:06:39,370
part of that is just reality versus

173
00:06:37,270 --> 00:06:40,750
expectations and resetting what we

174
00:06:39,370 --> 00:06:42,760
actually think we're going to get out of

175
00:06:40,750 --> 00:06:44,710
threat data

176
00:06:42,760 --> 00:06:47,830
it begins with brittle indicators that

177
00:06:44,710 --> 00:06:48,969
are much much less flexible than we hope

178
00:06:47,830 --> 00:06:51,579
they would be and have a much

179
00:06:48,969 --> 00:06:53,739
shorter effective shelf life poor

180
00:06:51,579 --> 00:06:55,509
quality control I'm going to talk a

181
00:06:53,739 --> 00:06:57,188
little bit about what you actually get

182
00:06:55,509 --> 00:07:00,639
when you pay for some of these so-called

183
00:06:57,189 --> 00:07:01,869
professional threat feed services the

184
00:07:00,639 --> 00:07:04,509
challenge of building effective

185
00:07:01,869 --> 00:07:06,819
homegrown I OCS building good threat

186
00:07:04,509 --> 00:07:08,589
data yourself is far harder than I think

187
00:07:06,819 --> 00:07:11,829
I even appreciate it a couple of years

188
00:07:08,589 --> 00:07:13,269
ago inconsistencies in the tools that

189
00:07:11,829 --> 00:07:15,489
apply threat data and this is

190
00:07:13,269 --> 00:07:17,649
particularly salient for endpoint

191
00:07:15,489 --> 00:07:19,299
because endpoint tends to be a little

192
00:07:17,649 --> 00:07:21,489
more complex in terms of the sheer scope

193
00:07:19,299 --> 00:07:23,649
of observables that you're trying to

194
00:07:21,489 --> 00:07:25,328
ingest and handle and map against the

195
00:07:23,649 --> 00:07:28,779
state of an endpoint system so we'll

196
00:07:25,329 --> 00:07:30,429
talk about that applying IOC s22 limited

197
00:07:28,779 --> 00:07:32,289
a scope of data meaning you can have the

198
00:07:30,429 --> 00:07:33,698
best intelligence in the world but if

199
00:07:32,289 --> 00:07:35,079
you're applying it through a peephole in

200
00:07:33,699 --> 00:07:37,809
your environment you're going to miss a

201
00:07:35,079 --> 00:07:38,860
whole lot of stuff and so these are some

202
00:07:37,809 --> 00:07:40,629
of the challenges we're going to talk

203
00:07:38,860 --> 00:07:42,729
about before we talk about some ways to

204
00:07:40,629 --> 00:07:44,739
actually do better and we'll begin with

205
00:07:42,729 --> 00:07:46,239
why I OCS are brittle now I touched on

206
00:07:44,739 --> 00:07:48,058
some of these points earlier but I want

207
00:07:46,239 --> 00:07:50,919
to qualify one thing first and that's

208
00:07:48,059 --> 00:07:52,659
really a terminology thing that I will

209
00:07:50,919 --> 00:07:54,909
probably be guilty of violating in this

210
00:07:52,659 --> 00:07:57,429
presentation but it's important to lay

211
00:07:54,909 --> 00:08:00,669
this out so IO sees versus threat data

212
00:07:57,429 --> 00:08:03,429
versus intelligence IO CSR structured

213
00:08:00,669 --> 00:08:05,049
threat data threat data is not the same

214
00:08:03,429 --> 00:08:07,119
as threat intelligence threat data are

215
00:08:05,050 --> 00:08:09,249
the technical observables like an IP or

216
00:08:07,119 --> 00:08:12,039
a hash or a registry key threat

217
00:08:09,249 --> 00:08:14,199
intelligence is context analysis about a

218
00:08:12,039 --> 00:08:16,179
collection of observables a collection

219
00:08:14,199 --> 00:08:18,789
of VOCs along with who and how they are

220
00:08:16,179 --> 00:08:21,489
being used by a threat actor threat

221
00:08:18,789 --> 00:08:24,339
intelligence is really important to help

222
00:08:21,489 --> 00:08:25,899
make risk-based decisions about attacks

223
00:08:24,339 --> 00:08:28,089
and incidents and what you need to worry

224
00:08:25,899 --> 00:08:31,239
about but I will also argue that threat

225
00:08:28,089 --> 00:08:33,490
intelligence is ineffective without high

226
00:08:31,239 --> 00:08:36,159
quality threat data that accompanies it

227
00:08:33,490 --> 00:08:39,129
you can spend every single day of the

228
00:08:36,159 --> 00:08:41,379
year reading PDFs of white papers by

229
00:08:39,129 --> 00:08:43,959
CrowdStrike and fireEye and Cisco and

230
00:08:41,379 --> 00:08:45,399
every other vendor that puts out this is

231
00:08:43,958 --> 00:08:46,959
the latest threat group you need to

232
00:08:45,399 --> 00:08:49,449
worry about this is what I don't know

233
00:08:46,959 --> 00:08:51,638
fancy bear or sad panda or party parrot

234
00:08:49,449 --> 00:08:52,959
or apt 38 is doing but you're never

235
00:08:51,639 --> 00:08:54,370
going to make yourself more secure

236
00:08:52,959 --> 00:08:56,559
you're never going to operationalize a

237
00:08:54,370 --> 00:08:58,059
PDF of data across all of your

238
00:08:56,559 --> 00:09:00,339
environments at the pace or cadence you

239
00:08:58,059 --> 00:09:02,079
need to so quality threat data is

240
00:09:00,339 --> 00:09:02,740
absolutely necessary for all that

241
00:09:02,079 --> 00:09:05,739
context

242
00:09:02,740 --> 00:09:08,110
intelligence to actually be useful so

243
00:09:05,740 --> 00:09:09,700
let's look at the DB IR from last year I

244
00:09:08,110 --> 00:09:11,470
think I'm seeing a trend here that it's

245
00:09:09,700 --> 00:09:13,480
like obligatory to have at least one DB

246
00:09:11,470 --> 00:09:16,540
IR slide so this is mine

247
00:09:13,480 --> 00:09:17,920
most shared IOC types and this is

248
00:09:16,540 --> 00:09:19,540
probably going to be a bit small in the

249
00:09:17,920 --> 00:09:22,149
back of the room but I'll tell you that

250
00:09:19,540 --> 00:09:25,719
the numbers here show that IP addresses

251
00:09:22,149 --> 00:09:28,360
file hashes and DNS names are the most

252
00:09:25,720 --> 00:09:30,279
common across every single information

253
00:09:28,360 --> 00:09:34,930
sharing group both private and public

254
00:09:30,279 --> 00:09:36,939
that Verizon DB are tracked in 2015 if

255
00:09:34,930 --> 00:09:38,859
you go to the apt notes data set this is

256
00:09:36,940 --> 00:09:41,080
kind of an interesting data set for

257
00:09:38,860 --> 00:09:43,149
unstructured threat data it lives on

258
00:09:41,080 --> 00:09:46,180
github and it's basically a compilation

259
00:09:43,149 --> 00:09:48,459
of every single threat report that every

260
00:09:46,180 --> 00:09:49,989
security vendor puts out they have

261
00:09:48,459 --> 00:09:52,300
hundreds and hundreds of these and

262
00:09:49,990 --> 00:09:54,880
they've extracted out all of the data

263
00:09:52,300 --> 00:09:56,589
into one spot and so I ran some numbers

264
00:09:54,880 --> 00:09:58,779
and found like you know how many host

265
00:09:56,589 --> 00:10:00,279
names are in here how many URLs and if

266
00:09:58,779 --> 00:10:01,959
you look at the graphs again the vast

267
00:10:00,279 --> 00:10:04,450
majority of the data being shared in

268
00:10:01,959 --> 00:10:10,180
these reports are hashes file names IP

269
00:10:04,450 --> 00:10:12,940
addresses DNS names and URLs so we are

270
00:10:10,180 --> 00:10:14,859
sharing the same really brittle static

271
00:10:12,940 --> 00:10:16,899
data that we all know as industry

272
00:10:14,860 --> 00:10:19,149
practitioners changes incredibly fast

273
00:10:16,899 --> 00:10:21,339
the lifespan of a malware hash is

274
00:10:19,149 --> 00:10:23,529
incredibly short the lifespan of a c2 IP

275
00:10:21,339 --> 00:10:26,380
address is incredibly short and that is

276
00:10:23,529 --> 00:10:28,390
all we continue to share and what I also

277
00:10:26,380 --> 00:10:30,370
find interesting is that we seem to be

278
00:10:28,390 --> 00:10:31,630
pursuing this notion and I think this is

279
00:10:30,370 --> 00:10:33,850
coming from a lot of the anti-malware

280
00:10:31,630 --> 00:10:35,589
companies out there that we're going to

281
00:10:33,850 --> 00:10:39,040
solve this problem with the cloud and

282
00:10:35,589 --> 00:10:41,560
more rapid analysis and big data and so

283
00:10:39,040 --> 00:10:43,120
I did some digging in history and found

284
00:10:41,560 --> 00:10:44,829
out wanted to see like what were we

285
00:10:43,120 --> 00:10:46,420
doing seven or eight years ago so seven

286
00:10:44,829 --> 00:10:48,969
or eight years ago actually as far as 10

287
00:10:46,420 --> 00:10:52,029
years ago bit 9 was tracking four

288
00:10:48,970 --> 00:10:54,760
billion unique executable files dll's

289
00:10:52,029 --> 00:10:57,910
drivers and adding about 50 million

290
00:10:54,760 --> 00:11:00,279
entries per day that's in 2007 2009

291
00:10:57,910 --> 00:11:02,860
McAfee launches their global threat

292
00:11:00,279 --> 00:11:05,470
intelligence initiative and is claiming

293
00:11:02,860 --> 00:11:08,350
to track 140 million IP addresses and do

294
00:11:05,470 --> 00:11:10,959
50 million file lookups per day in 2011

295
00:11:08,350 --> 00:11:12,880
Symantec talked about tracking tens of

296
00:11:10,959 --> 00:11:14,890
billions of linkages between users files

297
00:11:12,880 --> 00:11:16,570
and websites and clearly we haven't had

298
00:11:14,890 --> 00:11:18,880
a single impactful breach

299
00:11:16,570 --> 00:11:21,400
from 2009 till today with all of this

300
00:11:18,880 --> 00:11:23,080
great data at our disposal so if

301
00:11:21,400 --> 00:11:25,510
billions and billions of these things

302
00:11:23,080 --> 00:11:27,010
didn't solve the problem five or six

303
00:11:25,510 --> 00:11:30,550
years ago there's no way in hell it's

304
00:11:27,010 --> 00:11:33,819
going to make a difference now and so I

305
00:11:30,550 --> 00:11:36,219
am really skeptical when I see a lot of

306
00:11:33,820 --> 00:11:37,930
the practitioners and security espousing

307
00:11:36,220 --> 00:11:39,820
that there is going to be an

308
00:11:37,930 --> 00:11:42,040
intelligence led revolution in how we

309
00:11:39,820 --> 00:11:43,630
handle information security because I

310
00:11:42,040 --> 00:11:45,849
think and I'll talk later about how I

311
00:11:43,630 --> 00:11:48,700
OCS and threat data are really important

312
00:11:45,850 --> 00:11:50,680
as part of an ecosystem but to make this

313
00:11:48,700 --> 00:11:52,000
notion that intelligence-led security is

314
00:11:50,680 --> 00:11:53,859
going to change everything

315
00:11:52,000 --> 00:11:55,900
belies the fact that we were saying the

316
00:11:53,860 --> 00:11:57,940
exact same thing seven years ago the

317
00:11:55,900 --> 00:11:59,590
quote on the left here is from David

318
00:11:57,940 --> 00:12:01,690
Walt at McAfee and I'm not picking on

319
00:11:59,590 --> 00:12:03,310
him or McAfee as you know being the only

320
00:12:01,690 --> 00:12:05,650
one saying this but this is a history

321
00:12:03,310 --> 00:12:07,869
lesson seven years ago McAfee is talking

322
00:12:05,650 --> 00:12:09,970
about revolutionising security with

323
00:12:07,870 --> 00:12:12,130
global threat intelligence and this vast

324
00:12:09,970 --> 00:12:14,590
network of sensors and threat data and

325
00:12:12,130 --> 00:12:16,150
then in 2016 at fireEye he's saying the

326
00:12:14,590 --> 00:12:17,950
exact same thing and intelligence-led

327
00:12:16,150 --> 00:12:19,810
approach is going to help us predict

328
00:12:17,950 --> 00:12:23,830
attacks it didn't then and it's really

329
00:12:19,810 --> 00:12:25,449
not going to change things now so with

330
00:12:23,830 --> 00:12:27,490
that in mind let's talk about whether

331
00:12:25,450 --> 00:12:29,770
what you're paying for in terms of

332
00:12:27,490 --> 00:12:31,240
threat data is actually effective I work

333
00:12:29,770 --> 00:12:34,150
with a lot of organizations that have

334
00:12:31,240 --> 00:12:35,830
looked at the paid feeds and the free

335
00:12:34,150 --> 00:12:37,329
feeds and I'll often get the question of

336
00:12:35,830 --> 00:12:39,820
like is there a market difference in

337
00:12:37,330 --> 00:12:41,590
quality between paid and free and the

338
00:12:39,820 --> 00:12:43,360
answer usually is yes a lot of the free

339
00:12:41,590 --> 00:12:44,950
feeds out there like you know if you go

340
00:12:43,360 --> 00:12:47,170
to a site like hail a taxi you're going

341
00:12:44,950 --> 00:12:49,810
to see a really really poor

342
00:12:47,170 --> 00:12:51,459
signal-to-noise ratio but what I found

343
00:12:49,810 --> 00:12:54,010
disappointing is I started to dig into

344
00:12:51,460 --> 00:12:55,780
this is the sheer lack of quality that

345
00:12:54,010 --> 00:12:58,450
you'll actually find in most of the

346
00:12:55,780 --> 00:13:00,100
major threat intelligence sources that

347
00:12:58,450 --> 00:13:01,900
you can subscribe to I'm not going to

348
00:13:00,100 --> 00:13:03,190
name any names here I'm not going to

349
00:13:01,900 --> 00:13:04,840
call attention to one vendor because

350
00:13:03,190 --> 00:13:06,550
it's actually a complicated problem to

351
00:13:04,840 --> 00:13:08,080
solve but I actually want to show you

352
00:13:06,550 --> 00:13:09,849
some examples and get you thinking about

353
00:13:08,080 --> 00:13:11,470
the fundamental question here which is

354
00:13:09,850 --> 00:13:13,570
if you are paying for feeds or if you're

355
00:13:11,470 --> 00:13:15,490
thinking about it in the future how are

356
00:13:13,570 --> 00:13:18,520
you going to assess data quality in that

357
00:13:15,490 --> 00:13:22,300
feed there's a quote here from analyst

358
00:13:18,520 --> 00:13:24,340
at ESG from last year 2015 where he

359
00:13:22,300 --> 00:13:26,500
tried to survey this and found 74

360
00:13:24,340 --> 00:13:28,690
percent of professionals in our industry

361
00:13:26,500 --> 00:13:30,430
said it was extremely difficult to

362
00:13:28,690 --> 00:13:31,570
determine the quality and efficacy

363
00:13:30,430 --> 00:13:33,609
of an individual threat intelligence

364
00:13:31,570 --> 00:13:36,760
feed and I don't see that changing

365
00:13:33,610 --> 00:13:39,040
anytime soon so my incredibly

366
00:13:36,760 --> 00:13:42,580
non-scientific methodology for this was

367
00:13:39,040 --> 00:13:44,020
to choose two top tier so I would say

368
00:13:42,580 --> 00:13:45,520
like if you were to do Magic Quadrant

369
00:13:44,020 --> 00:13:48,040
they'd be all the way in the top right

370
00:13:45,520 --> 00:13:49,930
leading threat intelligence services I

371
00:13:48,040 --> 00:13:51,819
grabbed the most recent twenty

372
00:13:49,930 --> 00:13:53,050
indicators from each and I spent 15

373
00:13:51,820 --> 00:13:55,270
minutes looking at them this was

374
00:13:53,050 --> 00:13:57,250
literally all I did so from my

375
00:13:55,270 --> 00:13:59,829
incredibly scientific sampling approach

376
00:13:57,250 --> 00:14:01,810
here let's look at what I found like the

377
00:13:59,830 --> 00:14:04,029
second indicator I found and this is

378
00:14:01,810 --> 00:14:06,399
actually a very common pattern in a lot

379
00:14:04,029 --> 00:14:09,399
of threatened Health Services is hashing

380
00:14:06,399 --> 00:14:11,649
or taking the malware hash and grouping

381
00:14:09,399 --> 00:14:13,420
it in an and block with a file name so

382
00:14:11,649 --> 00:14:15,490
if you've ever looked at open IOC you

383
00:14:13,420 --> 00:14:17,349
have this notion of logic trees and ORS

384
00:14:15,490 --> 00:14:18,700
and ants when you and the hash with a

385
00:14:17,350 --> 00:14:20,890
file name it means that the indicator

386
00:14:18,700 --> 00:14:23,410
will never ever match unless the hash

387
00:14:20,890 --> 00:14:25,300
and the file name are both set exactly

388
00:14:23,410 --> 00:14:26,800
as expressed in the indicator well

389
00:14:25,300 --> 00:14:28,510
that's silly right like if I have the

390
00:14:26,800 --> 00:14:30,310
hash who cares what the file name is I

391
00:14:28,510 --> 00:14:32,020
mean the whole point of the hash is to

392
00:14:30,310 --> 00:14:34,089
reliably fingerprint the file regardless

393
00:14:32,020 --> 00:14:35,110
of what its name is by ending it with

394
00:14:34,089 --> 00:14:37,300
the file name I've just basically

395
00:14:35,110 --> 00:14:38,830
guaranteed that this indicator is far

396
00:14:37,300 --> 00:14:42,790
more brittle than it already would be

397
00:14:38,830 --> 00:14:44,650
and that is in a paid feed I like this

398
00:14:42,790 --> 00:14:47,199
one this probably came out of a sandbox

399
00:14:44,650 --> 00:14:50,290
and never had a set of eyeballs on it so

400
00:14:47,200 --> 00:14:52,360
this is a link file and the and the

401
00:14:50,290 --> 00:14:54,189
block here has the link file name the

402
00:14:52,360 --> 00:14:56,529
size and the hashes all grouped together

403
00:14:54,190 --> 00:14:58,209
so for this IOC to hit you have to have

404
00:14:56,529 --> 00:14:59,500
a link file with this size and those

405
00:14:58,209 --> 00:15:01,029
hashes

406
00:14:59,500 --> 00:15:03,160
if you've ever done windows forensics

407
00:15:01,029 --> 00:15:05,170
you'll know that a link file inside it

408
00:15:03,160 --> 00:15:07,689
contains a bunch of metadata including

409
00:15:05,170 --> 00:15:09,880
the volume gooood of the file path that

410
00:15:07,690 --> 00:15:11,770
it's pointing to that volume gooood will

411
00:15:09,880 --> 00:15:13,209
never exist on any other system except

412
00:15:11,770 --> 00:15:15,310
what produce the link file in the first

413
00:15:13,209 --> 00:15:16,989
place so this IOC will never match on

414
00:15:15,310 --> 00:15:20,369
any other box in the universe except the

415
00:15:16,990 --> 00:15:23,860
sandbox that spit it out the first time

416
00:15:20,370 --> 00:15:26,260
these indicators are both again open IOC

417
00:15:23,860 --> 00:15:29,709
format and if you've ever done any work

418
00:15:26,260 --> 00:15:32,800
with Python or PI 2 windows or PI 2 XE

419
00:15:29,709 --> 00:15:36,640
type stuff you've probably seen like the

420
00:15:32,800 --> 00:15:39,099
win32 Python PYD files that you get as

421
00:15:36,640 --> 00:15:40,630
artifacts of that and what happens

422
00:15:39,100 --> 00:15:43,480
probably here is that there was a

423
00:15:40,630 --> 00:15:44,259
malware sample that used Python to exe

424
00:15:43,480 --> 00:15:45,819
or some

425
00:15:44,259 --> 00:15:48,069
work that allowed Python code to run in

426
00:15:45,819 --> 00:15:51,579
Windows and so we have legitimate

427
00:15:48,069 --> 00:15:53,290
components of Python libraries here with

428
00:15:51,579 --> 00:15:54,519
hashes that you would find in lots of

429
00:15:53,290 --> 00:15:56,949
developer systems because these are

430
00:15:54,519 --> 00:15:58,239
legit files but their artifacts probably

431
00:15:56,949 --> 00:16:00,579
of some malware that happened to use

432
00:15:58,239 --> 00:16:02,079
these same dependencies so this is

433
00:16:00,579 --> 00:16:03,939
basically tantamount to taking a

434
00:16:02,079 --> 00:16:04,449
legitimate Windows DLL and shoving it in

435
00:16:03,939 --> 00:16:06,639
ISC

436
00:16:04,449 --> 00:16:08,469
and so I look at this and then I'm

437
00:16:06,639 --> 00:16:10,299
really horrified when I hear people

438
00:16:08,470 --> 00:16:12,160
talking about you know automatically

439
00:16:10,299 --> 00:16:14,589
triggering remediation actions when an

440
00:16:12,160 --> 00:16:16,839
IOC matches we've all seen what happens

441
00:16:14,589 --> 00:16:19,660
when an AV update accidentally puts vc

442
00:16:16,839 --> 00:16:20,979
host as malware and you end up bricking

443
00:16:19,660 --> 00:16:22,899
every single Windows host in your

444
00:16:20,979 --> 00:16:24,939
environment the same thing could happen

445
00:16:22,899 --> 00:16:26,350
at scale with bad IOC s if you don't

446
00:16:24,939 --> 00:16:29,439
realize that this is some of the stuff

447
00:16:26,350 --> 00:16:31,149
coming through your feeds so this lack

448
00:16:29,439 --> 00:16:34,509
of quality assurance really concerns me

449
00:16:31,149 --> 00:16:36,129
on the flip side from having spent a lot

450
00:16:34,509 --> 00:16:38,019
of time building IOC s myself I

451
00:16:36,129 --> 00:16:39,160
certainly appreciate why building good

452
00:16:38,019 --> 00:16:41,709
IOC s is difficult

453
00:16:39,160 --> 00:16:43,988
David Bianco has a presentation that

454
00:16:41,709 --> 00:16:46,268
he's iterated on for a few years called

455
00:16:43,989 --> 00:16:48,129
the pyramid of pain which is a really

456
00:16:46,269 --> 00:16:49,959
nice way of concisely explaining the

457
00:16:48,129 --> 00:16:52,539
challenge from you know starting with

458
00:16:49,959 --> 00:16:55,209
the very basic observables like hashes

459
00:16:52,539 --> 00:16:57,100
and IPS as you move up to trying to

460
00:16:55,209 --> 00:16:59,579
create more expressive more reliable

461
00:16:57,100 --> 00:17:02,350
less brittle indicators that capture

462
00:16:59,579 --> 00:17:04,658
tactics and tools and methodologies of

463
00:17:02,350 --> 00:17:07,569
an attacker it gets really really hard

464
00:17:04,659 --> 00:17:09,339
to do that and you know the reason a lot

465
00:17:07,569 --> 00:17:11,529
of these threat data feed companies

466
00:17:09,339 --> 00:17:15,279
provide IOC s that are just hashes or

467
00:17:11,529 --> 00:17:17,500
IPS is it's a reduction down to a common

468
00:17:15,279 --> 00:17:19,119
denominator that's reliable if you are

469
00:17:17,500 --> 00:17:21,339
providing a threat data feed and you

470
00:17:19,119 --> 00:17:23,229
have a really smart clever IOC that

471
00:17:21,339 --> 00:17:25,539
produces a bunch of false positives your

472
00:17:23,230 --> 00:17:28,269
consumers get annoyed and it's hard to

473
00:17:25,539 --> 00:17:30,940
produce abstract methodology indicators

474
00:17:28,269 --> 00:17:32,950
without having the context of billions

475
00:17:30,940 --> 00:17:35,230
of systems worth of data to compare them

476
00:17:32,950 --> 00:17:36,700
to on a constant basis so everyone just

477
00:17:35,230 --> 00:17:38,230
goes back to the lowest common

478
00:17:36,700 --> 00:17:39,879
denominator of let's just spit out

479
00:17:38,230 --> 00:17:41,370
hashes and IPS because at least no one

480
00:17:39,879 --> 00:17:45,459
will complain that it's a false positive

481
00:17:41,370 --> 00:17:47,620
most of the time you know this is an

482
00:17:45,460 --> 00:17:48,879
example and again this might be a bit

483
00:17:47,620 --> 00:17:51,189
small for those in the back but if

484
00:17:48,879 --> 00:17:54,070
you've ever looked at a robust open IOC

485
00:17:51,190 --> 00:17:55,779
indicator open IOC is really interesting

486
00:17:54,070 --> 00:17:57,428
it's got like hundreds of different

487
00:17:55,779 --> 00:17:58,200
observable types you can build a

488
00:17:57,429 --> 00:18:01,650
combination

489
00:17:58,200 --> 00:18:04,380
of a file import table object and a

490
00:18:01,650 --> 00:18:06,450
exported function and the PE type and

491
00:18:04,380 --> 00:18:09,330
the hashes and registry artifacts and

492
00:18:06,450 --> 00:18:11,970
memory are artifacts but who actually

493
00:18:09,330 --> 00:18:14,480
spends the time building IOC s like this

494
00:18:11,970 --> 00:18:16,650
for every single incident that matters

495
00:18:14,480 --> 00:18:18,540
consultancies and investigative verbs

496
00:18:16,650 --> 00:18:20,220
can certainly do so but if you're

497
00:18:18,540 --> 00:18:21,480
running a soccer cert team even if

498
00:18:20,220 --> 00:18:22,530
you've got a full-blown cert team

499
00:18:21,480 --> 00:18:24,210
there's no way you're going to have

500
00:18:22,530 --> 00:18:27,000
analysts constantly trying to iterate on

501
00:18:24,210 --> 00:18:28,830
this stuff and ever keep up that's why

502
00:18:27,000 --> 00:18:31,200
you pay for third-party threat feeds but

503
00:18:28,830 --> 00:18:33,240
again from the the producer end they're

504
00:18:31,200 --> 00:18:34,950
blindly sending these indicators out and

505
00:18:33,240 --> 00:18:36,660
hoping they don't cause a ton of false

506
00:18:34,950 --> 00:18:38,700
positives and when you start to get

507
00:18:36,660 --> 00:18:40,410
experimental like this that's when you

508
00:18:38,700 --> 00:18:42,000
start to produce a lot of noise and

509
00:18:40,410 --> 00:18:45,290
people get angry that you're not giving

510
00:18:42,000 --> 00:18:45,290
them the fidelity that they want

511
00:18:45,680 --> 00:18:49,560
specific to endpoint indicator matching

512
00:18:48,390 --> 00:18:51,930
there's another challenge which is

513
00:18:49,560 --> 00:18:53,490
inconsistencies in IOC detection tools

514
00:18:51,930 --> 00:18:56,010
and I think this comes from the fact

515
00:18:53,490 --> 00:18:58,560
that open IOC and even to a lesser

516
00:18:56,010 --> 00:19:01,200
extent sticks and Sai box defined

517
00:18:58,560 --> 00:19:03,600
observables without defining the actual

518
00:19:01,200 --> 00:19:05,610
way to evaluate systems for set

519
00:19:03,600 --> 00:19:07,230
observables and so when you look at

520
00:19:05,610 --> 00:19:08,820
tools on the endpoint side that are

521
00:19:07,230 --> 00:19:10,110
trying to consume different forms of

522
00:19:08,820 --> 00:19:13,080
threat intelligence what you'll probably

523
00:19:10,110 --> 00:19:14,669
find is incredible inconsistency in how

524
00:19:13,080 --> 00:19:15,300
they're ingesting and applying that

525
00:19:14,670 --> 00:19:17,760
threat data

526
00:19:15,300 --> 00:19:19,830
it begins with supported observables if

527
00:19:17,760 --> 00:19:21,570
you're paying for an IOC feed that is

528
00:19:19,830 --> 00:19:23,760
giving you things like schedule tasks

529
00:19:21,570 --> 00:19:25,620
items or registry keys and all you're

530
00:19:23,760 --> 00:19:28,020
capable of doing is matching file names

531
00:19:25,620 --> 00:19:29,520
and file hashes then you're blind to a

532
00:19:28,020 --> 00:19:32,070
chunk of the threat data that you're

533
00:19:29,520 --> 00:19:34,200
getting in that feed the second thing is

534
00:19:32,070 --> 00:19:36,570
logic handling if you've got open i/o

535
00:19:34,200 --> 00:19:38,100
sees or sticks or sigh box observables

536
00:19:36,570 --> 00:19:40,230
that are implementing this logic tree

537
00:19:38,100 --> 00:19:42,449
are you confident your endpoint tool is

538
00:19:40,230 --> 00:19:44,160
actually evaluating that logic tree and

539
00:19:42,450 --> 00:19:45,810
not short-circuiting in a way that's

540
00:19:44,160 --> 00:19:48,000
going to produce unexpected behavior

541
00:19:45,810 --> 00:19:49,770
there's no spec that defines how to do

542
00:19:48,000 --> 00:19:52,130
that in open IOC you just have to figure

543
00:19:49,770 --> 00:19:55,200
it out and hope that everything works

544
00:19:52,130 --> 00:19:57,090
and then most importantly and this is

545
00:19:55,200 --> 00:19:59,430
where I see a lot of both third-party

546
00:19:57,090 --> 00:20:01,820
feeds homegrown i/o sees and vendor

547
00:19:59,430 --> 00:20:04,020
tools all fail is data normalization

548
00:20:01,820 --> 00:20:06,870
what do you do when you get an indicator

549
00:20:04,020 --> 00:20:08,940
that has % system root or % user in it

550
00:20:06,870 --> 00:20:11,429
what do you do if you've got an

551
00:20:08,940 --> 00:20:12,179
indicator that's for a redirected file

552
00:20:11,430 --> 00:20:15,119
path because

553
00:20:12,179 --> 00:20:17,429
of Wow 64 behavior in Windows like if

554
00:20:15,119 --> 00:20:19,470
your IOC matching tool is 32-bit and

555
00:20:17,429 --> 00:20:21,090
you're running on 64-bit Windows are you

556
00:20:19,470 --> 00:20:23,759
accounting for file system redirection

557
00:20:21,090 --> 00:20:25,889
if you've got an indicator that matches

558
00:20:23,759 --> 00:20:28,080
to volatile state data like H key

559
00:20:25,889 --> 00:20:29,820
current user H key current user doesn't

560
00:20:28,080 --> 00:20:32,039
exist in the Windows registry H key

561
00:20:29,820 --> 00:20:34,019
users and a Sid does is your tool

562
00:20:32,039 --> 00:20:35,970
mapping against the static registry or

563
00:20:34,019 --> 00:20:38,009
the hive's is their map and memory if

564
00:20:35,970 --> 00:20:39,869
you got an IOC with this are you going

565
00:20:38,009 --> 00:20:42,360
to miss and false negative because your

566
00:20:39,869 --> 00:20:44,100
tool isn't properly capturing it again

567
00:20:42,360 --> 00:20:46,289
there's no standard that defines how you

568
00:20:44,100 --> 00:20:48,658
should do this every vendor has to

569
00:20:46,289 --> 00:20:50,158
figure it out and do their own thing now

570
00:20:48,659 --> 00:20:51,899
the fortunate thing and this is by

571
00:20:50,159 --> 00:20:53,789
product of them coming from a true

572
00:20:51,899 --> 00:20:55,559
standards organization and not a vendor

573
00:20:53,789 --> 00:20:57,450
but sticks and cybox

574
00:20:55,559 --> 00:20:59,549
which both came out of mitre through

575
00:20:57,450 --> 00:21:01,860
joint work with US government do have a

576
00:20:59,549 --> 00:21:04,139
few tools for data normalization make

577
00:21:01,860 --> 00:21:05,399
the sticks and there's a Python cybox

578
00:21:04,139 --> 00:21:07,289
framework that is a script called

579
00:21:05,399 --> 00:21:09,840
normalized you can run this across your

580
00:21:07,289 --> 00:21:12,210
threat data and get more normalized

581
00:21:09,840 --> 00:21:13,949
reliable output if you're working in

582
00:21:12,210 --> 00:21:16,049
those formats but I don't think many

583
00:21:13,950 --> 00:21:20,789
organizations out there actually doing

584
00:21:16,049 --> 00:21:24,749
that open ioc itself is a a world of

585
00:21:20,789 --> 00:21:27,600
hurt and again I open IOC was kind of

586
00:21:24,749 --> 00:21:29,369
first to market with a format like this

587
00:21:27,600 --> 00:21:32,459
so I really can't pick on them too hard

588
00:21:29,369 --> 00:21:35,100
but open IOC was basically created out

589
00:21:32,460 --> 00:21:37,169
of the output format of mere mandate

590
00:21:35,100 --> 00:21:39,119
intelligent response and so when you try

591
00:21:37,169 --> 00:21:42,090
to create a schema or standard after a

592
00:21:39,119 --> 00:21:44,428
proprietary vendor tools weird XML

593
00:21:42,090 --> 00:21:47,039
output format you get indicator terms

594
00:21:44,429 --> 00:21:49,830
like process item slash port list slash

595
00:21:47,039 --> 00:21:51,600
port item slash process process port

596
00:21:49,830 --> 00:21:53,158
process what the hell does that mean I

597
00:21:51,600 --> 00:21:54,389
mean I know what it means because I've

598
00:21:53,159 --> 00:21:56,669
worked with the technology so I know

599
00:21:54,389 --> 00:21:58,979
that it's the port held by a process as

600
00:21:56,669 --> 00:22:01,080
parsed out of process memory but that's

601
00:21:58,980 --> 00:22:02,850
not at all intuitive if I'm just trying

602
00:22:01,080 --> 00:22:04,860
to figure out you know how the heck do I

603
00:22:02,850 --> 00:22:08,189
have an indicator term to map a port

604
00:22:04,860 --> 00:22:10,350
held open by a process or file item PE

605
00:22:08,190 --> 00:22:11,850
info detected anomalies string if you

606
00:22:10,350 --> 00:22:13,498
read the description it's like string

607
00:22:11,850 --> 00:22:15,748
for detected anomalies and the PE

608
00:22:13,499 --> 00:22:17,759
headers well what are those strings does

609
00:22:15,749 --> 00:22:19,200
every tool produce the same string do

610
00:22:17,759 --> 00:22:21,119
you have a map that you can give me so

611
00:22:19,200 --> 00:22:23,940
that I can consistently evaluate this or

612
00:22:21,119 --> 00:22:26,080
use this term this is this is a

613
00:22:23,940 --> 00:22:27,909
significant problem and this is another

614
00:22:26,080 --> 00:22:30,850
reason why you see so many indicators

615
00:22:27,909 --> 00:22:32,529
just dumb themselves down to hashes and

616
00:22:30,850 --> 00:22:37,149
IPS because no one can deal with this

617
00:22:32,529 --> 00:22:38,799
stuff so we talked about indicators

618
00:22:37,149 --> 00:22:40,689
being brittle we talked about some of

619
00:22:38,799 --> 00:22:42,370
the market forces that unfortunately

620
00:22:40,690 --> 00:22:45,340
lead to really poor indicators being

621
00:22:42,370 --> 00:22:46,719
shared and sold as well as the reason

622
00:22:45,340 --> 00:22:49,658
why building good indicators is hard

623
00:22:46,720 --> 00:22:51,279
let's now talk a little bit about both

624
00:22:49,659 --> 00:22:52,899
challenges and opportunities to do

625
00:22:51,279 --> 00:22:54,190
better and shift the conversation the

626
00:22:52,899 --> 00:22:56,018
things that are more productive and

627
00:22:54,190 --> 00:22:59,169
positive and I'll begin with widening

628
00:22:56,019 --> 00:23:00,789
the scope of endpoint indicator usage so

629
00:22:59,169 --> 00:23:03,070
the fundamental question and I'm going

630
00:23:00,789 --> 00:23:05,169
to stick to endpoint here is what can

631
00:23:03,070 --> 00:23:05,950
you see so you've got endpoint centric

632
00:23:05,169 --> 00:23:07,929
threat data

633
00:23:05,950 --> 00:23:09,610
what are you matching it against and the

634
00:23:07,929 --> 00:23:11,559
way I always like to articulate this is

635
00:23:09,610 --> 00:23:14,799
you've got domains of data and domains

636
00:23:11,559 --> 00:23:17,200
of systems domains of data are in three

637
00:23:14,799 --> 00:23:19,029
categories the current volatile state of

638
00:23:17,200 --> 00:23:21,010
your systems which is essentially what's

639
00:23:19,029 --> 00:23:23,019
in memory so what processes are running

640
00:23:21,010 --> 00:23:25,289
what network connections are active what

641
00:23:23,019 --> 00:23:27,700
objects are serialized in memory

642
00:23:25,289 --> 00:23:29,500
historical activity so this is the sort

643
00:23:27,700 --> 00:23:32,230
of like telemetry feed that a lot of

644
00:23:29,500 --> 00:23:34,179
security tools produce of a rolling set

645
00:23:32,230 --> 00:23:36,130
of historical events what files changed

646
00:23:34,179 --> 00:23:37,960
what processes ran what network

647
00:23:36,130 --> 00:23:40,510
connections previously were created what

648
00:23:37,960 --> 00:23:42,929
users previously logged in so telemetry

649
00:23:40,510 --> 00:23:45,100
and then third is data at rest so

650
00:23:42,929 --> 00:23:46,659
objects sitting on the system not

651
00:23:45,100 --> 00:23:48,490
currently in use not currently active

652
00:23:46,659 --> 00:23:50,289
like a file on disk that's been there

653
00:23:48,490 --> 00:23:52,929
for five years or a registry key or a

654
00:23:50,289 --> 00:23:54,309
line in an event log so that is your

655
00:23:52,929 --> 00:23:56,230
scope of data that provides

656
00:23:54,309 --> 00:23:58,210
opportunities for threat data matching

657
00:23:56,230 --> 00:24:00,549
and then where can you see that you've

658
00:23:58,210 --> 00:24:02,679
got your workstations and your servers

659
00:24:00,549 --> 00:24:04,418
I'll define workstations as end-user

660
00:24:02,679 --> 00:24:06,309
computing devices and servers as

661
00:24:04,419 --> 00:24:09,070
everything else that powers your IT

662
00:24:06,309 --> 00:24:10,510
infrastructure so this is what you need

663
00:24:09,070 --> 00:24:12,010
to be evaluating against then the

664
00:24:10,510 --> 00:24:13,210
questions become well you know what's

665
00:24:12,010 --> 00:24:16,029
your scope what's your cadence of

666
00:24:13,210 --> 00:24:18,010
detection where your gaps and where can

667
00:24:16,029 --> 00:24:20,320
you do in-place detection versus needing

668
00:24:18,010 --> 00:24:22,389
to build data leaks to facilitate using

669
00:24:20,320 --> 00:24:24,039
your threat data and no one wants to

670
00:24:22,389 --> 00:24:27,879
build more data leaks where they can

671
00:24:24,039 --> 00:24:29,470
avoid it so first thing that you'll

672
00:24:27,880 --> 00:24:31,330
often see is matching on the sim and

673
00:24:29,470 --> 00:24:33,250
this is just born from the fact that sim

674
00:24:31,330 --> 00:24:34,928
usually gets stood up to ingest network

675
00:24:33,250 --> 00:24:37,270
data because it's easier like there's

676
00:24:34,929 --> 00:24:39,070
fewer sources of network data than

677
00:24:37,270 --> 00:24:39,379
endpoint data so when you stand up the

678
00:24:39,070 --> 00:24:41,120
syn

679
00:24:39,380 --> 00:24:43,750
what you'll usually find is you'll have

680
00:24:41,120 --> 00:24:46,070
your web proxy logs your firewall logs

681
00:24:43,750 --> 00:24:48,530
maybe your network malware appliance

682
00:24:46,070 --> 00:24:50,510
feeding into it and then on the endpoint

683
00:24:48,530 --> 00:24:52,550
side it's a lot more sparse you get like

684
00:24:50,510 --> 00:24:55,790
maybe your antivirus and Hipps alerts

685
00:24:52,550 --> 00:24:57,740
and maybe your Active Directory log ons

686
00:24:55,790 --> 00:24:59,870
maybe some critical application servers

687
00:24:57,740 --> 00:25:02,060
but you don't get comprehensive coverage

688
00:24:59,870 --> 00:25:04,070
like you can't reliably say I'm going to

689
00:25:02,060 --> 00:25:05,629
give you a hash for a file at rest in

690
00:25:04,070 --> 00:25:07,490
the environment well I find that in the

691
00:25:05,630 --> 00:25:09,170
sim well of course you won't because no

692
00:25:07,490 --> 00:25:11,030
one's forwarding from every machine in

693
00:25:09,170 --> 00:25:12,680
their environment everything that's on

694
00:25:11,030 --> 00:25:14,840
them to the sim continuously you'd be

695
00:25:12,680 --> 00:25:19,310
making Splunk very very rich if you did

696
00:25:14,840 --> 00:25:21,260
that so sim is great for what you can

697
00:25:19,310 --> 00:25:22,820
centrally capture but that is a very

698
00:25:21,260 --> 00:25:25,940
small subset of what you need to do on

699
00:25:22,820 --> 00:25:28,700
the endpoint forensic telemetry is where

700
00:25:25,940 --> 00:25:30,320
a lot of the EDR market has gone so the

701
00:25:28,700 --> 00:25:31,790
notion of just having a recorder on the

702
00:25:30,320 --> 00:25:34,010
endpoint that continuously captures

703
00:25:31,790 --> 00:25:35,690
events and then keeps it locally or

704
00:25:34,010 --> 00:25:37,790
streams it up to someplace where you can

705
00:25:35,690 --> 00:25:40,130
say did this process run five minutes

706
00:25:37,790 --> 00:25:41,750
ago or five days ago and you can find it

707
00:25:40,130 --> 00:25:43,550
in some sort of data set and that's

708
00:25:41,750 --> 00:25:44,960
really great like that accelerates

709
00:25:43,550 --> 00:25:46,580
incident response and it's a great

710
00:25:44,960 --> 00:25:47,660
opportunity for threat data matching

711
00:25:46,580 --> 00:25:49,610
because you capture all those

712
00:25:47,660 --> 00:25:51,500
short-lived events like a password

713
00:25:49,610 --> 00:25:53,270
dropper that password dumper that ran

714
00:25:51,500 --> 00:25:54,830
for a minute you've got attached you've

715
00:25:53,270 --> 00:25:56,360
got its metadata it's recorded it's

716
00:25:54,830 --> 00:25:58,730
captured you're good to match it against

717
00:25:56,360 --> 00:26:00,530
your threat info the challenge is it's

718
00:25:58,730 --> 00:26:01,850
still limited scope of data meaning

719
00:26:00,530 --> 00:26:02,930
you're keeping a rolling window of

720
00:26:01,850 --> 00:26:05,000
things that have changed in your

721
00:26:02,930 --> 00:26:06,680
environment that doesn't help you with

722
00:26:05,000 --> 00:26:08,600
finding things in your environment that

723
00:26:06,680 --> 00:26:10,580
existed before you install that tool

724
00:26:08,600 --> 00:26:12,620
that doesn't help you find things in

725
00:26:10,580 --> 00:26:14,810
your environment that are outside the

726
00:26:12,620 --> 00:26:16,729
window of time that you can centrally

727
00:26:14,810 --> 00:26:18,679
preserve that historical data and it

728
00:26:16,730 --> 00:26:21,050
doesn't help you with artifacts that you

729
00:26:18,680 --> 00:26:23,300
don't keep in the telemetry feed like no

730
00:26:21,050 --> 00:26:26,000
telemetry feed for any EDR tool records

731
00:26:23,300 --> 00:26:28,610
every event log entry in every operating

732
00:26:26,000 --> 00:26:30,860
system event log it doesn't record every

733
00:26:28,610 --> 00:26:32,479
object in memory like every mutexes

734
00:26:30,860 --> 00:26:34,189
processes start and stop because all of

735
00:26:32,480 --> 00:26:36,770
a sudden your telemetry feed would

736
00:26:34,190 --> 00:26:39,650
become a thousand times larger so you do

737
00:26:36,770 --> 00:26:41,330
narrow your scope of data matching on

738
00:26:39,650 --> 00:26:42,920
live endpoints is the third domain and

739
00:26:41,330 --> 00:26:44,480
this gives you in some respects the

740
00:26:42,920 --> 00:26:46,460
broadest opportunity because if you're

741
00:26:44,480 --> 00:26:48,590
keeping telemetry and you have access to

742
00:26:46,460 --> 00:26:50,870
the live system you can do things like

743
00:26:48,590 --> 00:26:52,800
look across memory look across disk look

744
00:26:50,870 --> 00:26:55,050
across Kalama tree feeds

745
00:26:52,800 --> 00:26:57,629
but you have to consider other factors

746
00:26:55,050 --> 00:26:59,610
like endpoint impact is this process

747
00:26:57,630 --> 00:27:01,080
taking hours and hours and slowing down

748
00:26:59,610 --> 00:27:03,000
your systems to a point where it's

749
00:27:01,080 --> 00:27:05,850
unacceptable and you can't apply your

750
00:27:03,000 --> 00:27:07,680
threat data effectively is your

751
00:27:05,850 --> 00:27:09,659
environment available such that you can

752
00:27:07,680 --> 00:27:11,670
use your threat data and reliably cover

753
00:27:09,660 --> 00:27:13,470
most of your systems and does this

754
00:27:11,670 --> 00:27:14,970
process scale can you do this across a

755
00:27:13,470 --> 00:27:18,060
thousand hosts can you do it across

756
00:27:14,970 --> 00:27:19,740
100,000 these are all really important

757
00:27:18,060 --> 00:27:21,240
considerations that balance what you do

758
00:27:19,740 --> 00:27:25,310
on the endpoint versus what you might

759
00:27:21,240 --> 00:27:27,900
need to do in a data lake or in a sim

760
00:27:25,310 --> 00:27:29,879
for me personally I like combining the

761
00:27:27,900 --> 00:27:31,830
sim and live endpoint I think the sim

762
00:27:29,880 --> 00:27:34,050
can continue to exist and be enriched

763
00:27:31,830 --> 00:27:35,159
with more endpoint data but I also think

764
00:27:34,050 --> 00:27:37,200
that there's a place for doing certain

765
00:27:35,160 --> 00:27:38,330
work on the endpoint because as we grow

766
00:27:37,200 --> 00:27:40,950
and as systems become more

767
00:27:38,330 --> 00:27:44,129
geographically distributed and networks

768
00:27:40,950 --> 00:27:45,780
become less like one monolith cloud I

769
00:27:44,130 --> 00:27:47,400
treat this as a distributed computing

770
00:27:45,780 --> 00:27:48,870
problem and uptime is much more

771
00:27:47,400 --> 00:27:50,940
guaranteed now than it was a few years

772
00:27:48,870 --> 00:27:52,320
ago like if the system is if someone's

773
00:27:50,940 --> 00:27:54,510
doing work on their computer it's almost

774
00:27:52,320 --> 00:27:56,070
always online and that provides an

775
00:27:54,510 --> 00:27:58,200
opportunity for distributed computing

776
00:27:56,070 --> 00:28:02,730
and distributed handling of this threat

777
00:27:58,200 --> 00:28:04,530
data and endpoint evidence problem so

778
00:28:02,730 --> 00:28:06,210
with that let's talk about shrinking the

779
00:28:04,530 --> 00:28:08,850
detection gap and what I mean by the

780
00:28:06,210 --> 00:28:11,100
detection gap is really the misaligned

781
00:28:08,850 --> 00:28:12,120
expectations from what you think you're

782
00:28:11,100 --> 00:28:14,550
going to get from threat intelligence

783
00:28:12,120 --> 00:28:15,989
and I OCS versus what you're actually

784
00:28:14,550 --> 00:28:18,899
going to get and for me the challenge

785
00:28:15,990 --> 00:28:20,910
here that I see is organizations

786
00:28:18,900 --> 00:28:23,910
expected threat data and I OCS to do

787
00:28:20,910 --> 00:28:26,910
better than signatures and between your

788
00:28:23,910 --> 00:28:28,680
AV signatures and your i/o CS you can

789
00:28:26,910 --> 00:28:30,270
suddenly close the gap of undetected

790
00:28:28,680 --> 00:28:32,460
threats that was the promise that's what

791
00:28:30,270 --> 00:28:35,129
we aspired to what I have seen in

792
00:28:32,460 --> 00:28:37,320
practice is that threat data and AI OCS

793
00:28:35,130 --> 00:28:40,140
and reputation data sources at their

794
00:28:37,320 --> 00:28:41,879
best are basically keeping us at parity

795
00:28:40,140 --> 00:28:44,130
with where we would have been 10 years

796
00:28:41,880 --> 00:28:47,160
ago with like signatures so as attacks

797
00:28:44,130 --> 00:28:48,600
are evolving use of threat data is just

798
00:28:47,160 --> 00:28:48,990
keeping our head a little bit above

799
00:28:48,600 --> 00:28:51,060
water

800
00:28:48,990 --> 00:28:53,730
it is not closing the gap of undetected

801
00:28:51,060 --> 00:28:55,320
threats and it will not do so and the

802
00:28:53,730 --> 00:28:56,970
reason I want to point that out is like

803
00:28:55,320 --> 00:28:59,159
just like people will sometimes

804
00:28:56,970 --> 00:29:01,650
disparage antivirus as being useless and

805
00:28:59,160 --> 00:29:03,270
that's completely wrong antivirus gives

806
00:29:01,650 --> 00:29:05,040
you an enormous amount of noise

807
00:29:03,270 --> 00:29:06,780
reduction and automated handling of

808
00:29:05,040 --> 00:29:08,850
stuff that you'd otherwise be wait

809
00:29:06,780 --> 00:29:11,100
being sock insert analyst I'm on that's

810
00:29:08,850 --> 00:29:13,110
a good thing like the problem is when

811
00:29:11,100 --> 00:29:16,139
you expect AV signatures to stop you

812
00:29:13,110 --> 00:29:18,120
stop all unknown attacks or new novel

813
00:29:16,140 --> 00:29:19,560
attack techniques and we're making the

814
00:29:18,120 --> 00:29:20,659
same mistake now with threat date and

815
00:29:19,560 --> 00:29:24,330
what we expect of it

816
00:29:20,660 --> 00:29:25,830
Rick Holland at Forrester who Tyler

817
00:29:24,330 --> 00:29:28,290
mentioned earlier at this morning's

818
00:29:25,830 --> 00:29:30,240
keynote he was a forester at the time

819
00:29:28,290 --> 00:29:31,710
now he's at a different firm but he had

820
00:29:30,240 --> 00:29:35,190
a really good quote this year at the

821
00:29:31,710 --> 00:29:36,390
2016 CGI summit there's this desire he

822
00:29:35,190 --> 00:29:37,620
was talking about to take a technical

823
00:29:36,390 --> 00:29:39,030
feed dump it into your security

824
00:29:37,620 --> 00:29:40,320
infrastructure and you just get a threat

825
00:29:39,030 --> 00:29:42,870
intelligence win and you're going to

826
00:29:40,320 --> 00:29:44,639
find all this new stuff and the reality

827
00:29:42,870 --> 00:29:47,159
is that that approach completely ignores

828
00:29:44,640 --> 00:29:48,900
the benefit of getting threat data from

829
00:29:47,160 --> 00:29:50,520
your own environment meaning monitoring

830
00:29:48,900 --> 00:29:52,800
your environment to understand what is

831
00:29:50,520 --> 00:29:54,720
normal what is a baseline what is a diff

832
00:29:52,800 --> 00:29:56,610
from that and that really provides

833
00:29:54,720 --> 00:29:59,160
incredible opportunity to complement

834
00:29:56,610 --> 00:30:00,990
threat data and external threat feed

835
00:29:59,160 --> 00:30:04,890
centric mechanisms of finding if you're

836
00:30:00,990 --> 00:30:06,360
compromised so it begins with do you

837
00:30:04,890 --> 00:30:08,370
know the basics in your network and I

838
00:30:06,360 --> 00:30:10,050
tried to I spent a while thinking about

839
00:30:08,370 --> 00:30:11,610
how I could distill down the most

840
00:30:10,050 --> 00:30:13,980
important things that you really need to

841
00:30:11,610 --> 00:30:15,959
care about to detect the modern state of

842
00:30:13,980 --> 00:30:17,580
breaches and most environments and it's

843
00:30:15,960 --> 00:30:19,380
really three things

844
00:30:17,580 --> 00:30:21,240
what are your privileged accounts doing

845
00:30:19,380 --> 00:30:22,440
meaning your local administrators your

846
00:30:21,240 --> 00:30:24,750
domain administrators

847
00:30:22,440 --> 00:30:27,570
where are they logging on how are they

848
00:30:24,750 --> 00:30:30,780
logging on from Intuit systems at which

849
00:30:27,570 --> 00:30:32,340
times the second is use of OS native

850
00:30:30,780 --> 00:30:35,280
tools that are commonly abused by

851
00:30:32,340 --> 00:30:37,530
attackers because the reality is

852
00:30:35,280 --> 00:30:39,060
attackers at this point live off the

853
00:30:37,530 --> 00:30:41,790
land if you ever look at the

854
00:30:39,060 --> 00:30:44,520
presentations by like folks at the verus

855
00:30:41,790 --> 00:30:47,040
group great group of consultants matt

856
00:30:44,520 --> 00:30:50,010
gray burrkc smith they all do fantastic

857
00:30:47,040 --> 00:30:52,260
work on PowerShell and other mechanisms

858
00:30:50,010 --> 00:30:53,910
of using native windows features for

859
00:30:52,260 --> 00:30:55,379
offensive security for bypassing

860
00:30:53,910 --> 00:30:57,180
controls for bypassing things like a

861
00:30:55,380 --> 00:30:58,980
polite listing and it's really

862
00:30:57,180 --> 00:31:01,680
emblematic of what attackers are doing

863
00:30:58,980 --> 00:31:03,750
now the nice thing is legitimate users

864
00:31:01,680 --> 00:31:05,310
don't run a lot of these OS native tools

865
00:31:03,750 --> 00:31:07,020
how many users in your environment know

866
00:31:05,310 --> 00:31:08,820
how to open a command line let alone all

867
00:31:07,020 --> 00:31:11,040
of these so terror arguments that the

868
00:31:08,820 --> 00:31:13,679
net command has or how to invoke

869
00:31:11,040 --> 00:31:16,710
PowerShell with execution policy

870
00:31:13,680 --> 00:31:18,450
bypassed there's a lot of opportunity to

871
00:31:16,710 --> 00:31:20,340
find anomalies from the fact that most

872
00:31:18,450 --> 00:31:22,440
of the OS native tools that attackers

873
00:31:20,340 --> 00:31:25,168
Everage are used by your admins and

874
00:31:22,440 --> 00:31:26,789
developers but really no one else and

875
00:31:25,169 --> 00:31:29,010
then the third is persistence mechanisms

876
00:31:26,789 --> 00:31:32,309
meaning if you have a reliable way to

877
00:31:29,010 --> 00:31:34,049
track the ways that organ attached or

878
00:31:32,309 --> 00:31:36,120
things can survive in your network and

879
00:31:34,049 --> 00:31:39,750
persist through reboot through user

880
00:31:36,120 --> 00:31:41,908
logon even remote access like you have

881
00:31:39,750 --> 00:31:43,559
citrix gateways exposed in your DMZ do

882
00:31:41,909 --> 00:31:45,240
you have single-factor VPN for your

883
00:31:43,559 --> 00:31:47,039
contractors these are all ways that

884
00:31:45,240 --> 00:31:48,990
attackers survive in a network and if

885
00:31:47,039 --> 00:31:51,090
you can analyze and track changes to

886
00:31:48,990 --> 00:31:52,620
what's persisting in different ways you

887
00:31:51,090 --> 00:31:55,470
have opportunities to detect a lot of

888
00:31:52,620 --> 00:31:58,110
unknown and so this all goes employing a

889
00:31:55,470 --> 00:32:00,450
blended approach which is yes pursue IO

890
00:31:58,110 --> 00:32:02,820
CS and reputation data as a mechanism

891
00:32:00,450 --> 00:32:04,799
for noise reduction and for automated

892
00:32:02,820 --> 00:32:07,080
context so that if I do have a hash that

893
00:32:04,799 --> 00:32:08,490
hit I know that it's associated with a

894
00:32:07,080 --> 00:32:10,289
certain threat group and I can make a

895
00:32:08,490 --> 00:32:12,630
risk inform the decision on whether I'm

896
00:32:10,289 --> 00:32:14,370
going to spin up an IR or just clobber

897
00:32:12,630 --> 00:32:16,520
the system or mediate and move on with

898
00:32:14,370 --> 00:32:16,520
my life

899
00:32:16,620 --> 00:32:20,820
the second is pattern of attack

900
00:32:18,809 --> 00:32:22,289
detection for common intrusion workflows

901
00:32:20,820 --> 00:32:25,080
and I think the nice thing here is that

902
00:32:22,289 --> 00:32:26,340
we have a surfeit of EDR tools it's not

903
00:32:25,080 --> 00:32:28,289
like ten years ago where you basically

904
00:32:26,340 --> 00:32:30,270
just had to spend hours scanning each

905
00:32:28,289 --> 00:32:32,520
system one by one and looking for

906
00:32:30,270 --> 00:32:34,080
artifacts like whether it be taenia more

907
00:32:32,520 --> 00:32:36,570
other commercial vendors or open-source

908
00:32:34,080 --> 00:32:38,760
tools or native OS stuff like sis Mon or

909
00:32:36,570 --> 00:32:40,289
stopped by Google Rapid Response there

910
00:32:38,760 --> 00:32:42,600
are tons of things out there that you

911
00:32:40,289 --> 00:32:44,490
can use to start building out endpoint

912
00:32:42,600 --> 00:32:46,168
visibility and apply it to look for

913
00:32:44,490 --> 00:32:48,690
patterns of attack rather than just

914
00:32:46,169 --> 00:32:50,940
using all of this cool tooling to look

915
00:32:48,690 --> 00:32:52,140
for hashes and filenames and I'll talk a

916
00:32:50,940 --> 00:32:54,120
little bit in a moment about some

917
00:32:52,140 --> 00:32:57,600
examples of applying that in a practical

918
00:32:54,120 --> 00:33:00,539
way and then finally anomaly an outlier

919
00:32:57,600 --> 00:33:03,059
analysis and I'll touch on this a little

920
00:33:00,539 --> 00:33:05,279
bit but the idea here is not to try to

921
00:33:03,059 --> 00:33:06,658
just find anomalies among the millions

922
00:33:05,279 --> 00:33:08,940
of haystacks that you have in your

923
00:33:06,659 --> 00:33:11,010
environment but to pick discrete sets of

924
00:33:08,940 --> 00:33:12,690
systems and users and compare them to

925
00:33:11,010 --> 00:33:14,669
one another in ways that can surface

926
00:33:12,690 --> 00:33:16,289
interesting things in the three items I

927
00:33:14,669 --> 00:33:18,330
mentioned in the previous slide while

928
00:33:16,289 --> 00:33:19,890
you're privileged users are doing what's

929
00:33:18,330 --> 00:33:24,799
persisting and how are native OS

930
00:33:19,890 --> 00:33:27,210
capabilities being used or abused so

931
00:33:24,799 --> 00:33:29,970
let's talk about the middle one they're

932
00:33:27,210 --> 00:33:32,010
patterns of attack when I talk about

933
00:33:29,970 --> 00:33:34,050
looking for patterns of attack as

934
00:33:32,010 --> 00:33:35,490
opposed to specific indicators

935
00:33:34,050 --> 00:33:37,409
I like the thing of it as what are the

936
00:33:35,490 --> 00:33:39,090
lowest common denominators that you see

937
00:33:37,410 --> 00:33:41,280
threat actors both targeted an

938
00:33:39,090 --> 00:33:42,959
opportunistic apply across intrusions

939
00:33:41,280 --> 00:33:44,790
and these often just end up being

940
00:33:42,960 --> 00:33:46,740
defined by the way corporate networks

941
00:33:44,790 --> 00:33:49,200
and the most common operating systems in

942
00:33:46,740 --> 00:33:50,970
those networks behave I'm going to use

943
00:33:49,200 --> 00:33:52,470
Windows as an example here because most

944
00:33:50,970 --> 00:33:55,110
corporate environments still remain

945
00:33:52,470 --> 00:33:56,730
largely Windows centric and that is the

946
00:33:55,110 --> 00:33:58,290
opportunity for the attacker they know

947
00:33:56,730 --> 00:34:00,300
how Windows works they know how Active

948
00:33:58,290 --> 00:34:01,649
Directory works and that's very

949
00:34:00,300 --> 00:34:03,750
predictable from environment to

950
00:34:01,650 --> 00:34:05,910
environment so that results in some

951
00:34:03,750 --> 00:34:08,820
outlier conditions that we can look for

952
00:34:05,910 --> 00:34:11,850
and track from incident to incident so

953
00:34:08,820 --> 00:34:13,920
let's let's bear this out before I give

954
00:34:11,850 --> 00:34:16,259
you a specific example I wanted to call

955
00:34:13,920 --> 00:34:19,950
attention to a framework by mitre called

956
00:34:16,260 --> 00:34:22,770
attack earlier if you saw Andrew Hayes

957
00:34:19,949 --> 00:34:24,810
talk he talked about the CIS top 20

958
00:34:22,770 --> 00:34:26,969
benchmarks for implementing effective

959
00:34:24,810 --> 00:34:28,770
security and how the Australian signals

960
00:34:26,969 --> 00:34:31,620
Directorate said if you employed the top

961
00:34:28,770 --> 00:34:34,050
four of those you'd cover 85% of threats

962
00:34:31,620 --> 00:34:35,400
I think this is an interesting angle on

963
00:34:34,050 --> 00:34:37,800
this that mitre has recently put out

964
00:34:35,400 --> 00:34:39,840
about mechanisms of attack across each

965
00:34:37,800 --> 00:34:42,270
phase of the attack lifecycle and the

966
00:34:39,840 --> 00:34:44,160
techniques that are employed and if you

967
00:34:42,270 --> 00:34:46,350
look this up you'll get a really nice

968
00:34:44,159 --> 00:34:48,000
single page table of all the different

969
00:34:46,350 --> 00:34:49,830
mechanisms used for persistence for

970
00:34:48,000 --> 00:34:52,139
privilege escalation all the way through

971
00:34:49,830 --> 00:34:53,969
to things like data exfiltration and

972
00:34:52,139 --> 00:34:55,799
command and control really good

973
00:34:53,969 --> 00:34:58,020
references you're trying to align what I

974
00:34:55,800 --> 00:35:00,150
your efforts across what I mean when I

975
00:34:58,020 --> 00:35:01,740
say patterns of attack the only

976
00:35:00,150 --> 00:35:03,180
downsides of this framework is right now

977
00:35:01,740 --> 00:35:04,500
there's no prioritization to it

978
00:35:03,180 --> 00:35:06,330
there's no ordering to it so a

979
00:35:04,500 --> 00:35:08,550
persistence mechanism that is incredibly

980
00:35:06,330 --> 00:35:10,350
obscure and ysou Taric is listed with

981
00:35:08,550 --> 00:35:13,110
equal footing as one that might be used

982
00:35:10,350 --> 00:35:14,790
in 80 or 90 percent of reaches that's

983
00:35:13,110 --> 00:35:16,320
something I'm hoping to help work

984
00:35:14,790 --> 00:35:18,240
towards sharing more information about

985
00:35:16,320 --> 00:35:19,980
really like what are the top three in

986
00:35:18,240 --> 00:35:22,680
each of these categories you should

987
00:35:19,980 --> 00:35:24,960
tackle first but let's take an example

988
00:35:22,680 --> 00:35:26,850
of this that I really enjoy talking

989
00:35:24,960 --> 00:35:29,010
about which is detecting host-to-host

990
00:35:26,850 --> 00:35:31,140
command execution so we're going to talk

991
00:35:29,010 --> 00:35:33,600
about a post breach scenario where

992
00:35:31,140 --> 00:35:35,490
you've got a least one infected system

993
00:35:33,600 --> 00:35:37,230
an attacker foothold of some sort and

994
00:35:35,490 --> 00:35:39,299
you've got an attacker with a

995
00:35:37,230 --> 00:35:41,010
administrator account that lets them hop

996
00:35:39,300 --> 00:35:43,230
around the couple hosts maybe it's a

997
00:35:41,010 --> 00:35:46,350
shared local administrator maybe it's a

998
00:35:43,230 --> 00:35:47,910
moderately privileged domain account now

999
00:35:46,350 --> 00:35:50,038
if you look in a windows breach

1000
00:35:47,910 --> 00:35:52,770
and how attackers run commands from

1001
00:35:50,039 --> 00:35:55,289
system B or from system ADA system D I

1002
00:35:52,770 --> 00:35:56,788
think about the hundreds of cases that

1003
00:35:55,289 --> 00:35:58,950
I've worked or been exposed to and

1004
00:35:56,789 --> 00:36:01,109
almost every single one of them uses one

1005
00:35:58,950 --> 00:36:02,910
of these three or four methods remote

1006
00:36:01,109 --> 00:36:05,609
scheduled tasks Windows remote

1007
00:36:02,910 --> 00:36:07,500
management or PowerShell PS exec and if

1008
00:36:05,609 --> 00:36:09,359
I were to add one more WM I in real

1009
00:36:07,500 --> 00:36:11,730
command execution these are for

1010
00:36:09,359 --> 00:36:13,619
essentially native to Windows ways to

1011
00:36:11,730 --> 00:36:14,970
run a command on a remote host if you

1012
00:36:13,619 --> 00:36:16,829
have privileges to it and you're already

1013
00:36:14,970 --> 00:36:18,299
inside the network you don't need to

1014
00:36:16,829 --> 00:36:20,339
ship malware down to the host I mean

1015
00:36:18,299 --> 00:36:22,770
okay PS exec is not part of Windows but

1016
00:36:20,339 --> 00:36:24,630
it's a widely used administration tool

1017
00:36:22,770 --> 00:36:26,520
that would not raise eyebrows in most

1018
00:36:24,630 --> 00:36:28,170
environments so you don't need to bring

1019
00:36:26,520 --> 00:36:29,730
Metasploit down to a box to do this

1020
00:36:28,170 --> 00:36:31,829
stuff and this is a great example of

1021
00:36:29,730 --> 00:36:33,359
living off the land the nice thing is

1022
00:36:31,829 --> 00:36:35,579
when you use all of these tools you

1023
00:36:33,359 --> 00:36:38,430
leave behind a ton of evidence you

1024
00:36:35,579 --> 00:36:40,770
create logon events when you run remote

1025
00:36:38,430 --> 00:36:42,270
scheduled tasks or even PowerShell

1026
00:36:40,770 --> 00:36:44,339
remoting or PS exec you're creating

1027
00:36:42,270 --> 00:36:45,990
Network log ons on the target host you

1028
00:36:44,339 --> 00:36:48,538
might be creating explicit logon events

1029
00:36:45,990 --> 00:36:51,240
on the source host if you do process

1030
00:36:48,539 --> 00:36:52,980
telemetry like with sis Mon or lots of

1031
00:36:51,240 --> 00:36:53,700
commercial tools that record historical

1032
00:36:52,980 --> 00:36:55,680
event tracking

1033
00:36:53,700 --> 00:36:58,230
you're going to have execution of these

1034
00:36:55,680 --> 00:37:00,419
commands that again normal users don't

1035
00:36:58,230 --> 00:37:01,920
typically run on their own and then

1036
00:37:00,420 --> 00:37:04,710
there's lots of other artifacts over the

1037
00:37:01,920 --> 00:37:06,510
network in memory and so on but even

1038
00:37:04,710 --> 00:37:08,369
just these top two here are readily

1039
00:37:06,510 --> 00:37:10,349
available readily possible if you have

1040
00:37:08,369 --> 00:37:12,119
any modern EDR tool deployed in your

1041
00:37:10,349 --> 00:37:14,819
environment and this will give you

1042
00:37:12,119 --> 00:37:16,380
coverage of 90% of the ways if not more

1043
00:37:14,819 --> 00:37:19,410
that attackers move from host to host

1044
00:37:16,380 --> 00:37:21,900
and so what you do with all this data is

1045
00:37:19,410 --> 00:37:23,970
then apply analysis criteria to it so on

1046
00:37:21,900 --> 00:37:26,549
a rolling basis can you reliably track

1047
00:37:23,970 --> 00:37:28,259
who like which accounts are using these

1048
00:37:26,549 --> 00:37:30,599
methods in your environments both for

1049
00:37:28,260 --> 00:37:33,329
good and bad where they're occurring

1050
00:37:30,599 --> 00:37:35,220
from source and destination at what time

1051
00:37:33,329 --> 00:37:37,049
they usually occur and what they

1052
00:37:35,220 --> 00:37:39,450
actually run so what are the scheduled

1053
00:37:37,049 --> 00:37:41,910
tasks in my environment executing what

1054
00:37:39,450 --> 00:37:43,799
files are they dropping and this gives

1055
00:37:41,910 --> 00:37:45,799
you meat little stacks of data where you

1056
00:37:43,799 --> 00:37:48,420
can start to do outlier analysis and

1057
00:37:45,799 --> 00:37:50,609
just as andrew is mentioning it is you

1058
00:37:48,420 --> 00:37:52,260
know building a security team talk the

1059
00:37:50,609 --> 00:37:54,328
idea is to take small chunks and small

1060
00:37:52,260 --> 00:37:56,549
problems and then build out a hunting

1061
00:37:54,329 --> 00:37:58,079
capability piece by piece and you can

1062
00:37:56,549 --> 00:37:59,670
just start with scheduled tasks as an

1063
00:37:58,079 --> 00:38:01,710
example of this and schedule tasks

1064
00:37:59,670 --> 00:38:03,450
remain really really prevalent

1065
00:38:01,710 --> 00:38:05,670
for attacker behavior in Windows

1066
00:38:03,450 --> 00:38:06,750
environments so let's use Dooku 2.0 as

1067
00:38:05,670 --> 00:38:09,930
an example

1068
00:38:06,750 --> 00:38:11,280
Kaspersky AV vendor got breached by a

1069
00:38:09,930 --> 00:38:13,618
threat actor that was pretty

1070
00:38:11,280 --> 00:38:15,630
sophisticated and they actually

1071
00:38:13,619 --> 00:38:16,950
published a nice tell-all about what the

1072
00:38:15,630 --> 00:38:19,740
attacker did and what their tools and

1073
00:38:16,950 --> 00:38:22,109
tactics were and this campaign used some

1074
00:38:19,740 --> 00:38:24,359
malware that is called the Dooku family

1075
00:38:22,109 --> 00:38:27,230
and in particular their white paper

1076
00:38:24,359 --> 00:38:30,029
described how the attackers would use

1077
00:38:27,230 --> 00:38:32,420
scheduled tasks to run a dropper

1078
00:38:30,030 --> 00:38:34,980
component of this malware named MSI exec

1079
00:38:32,420 --> 00:38:36,750
remotely and so when they would do that

1080
00:38:34,980 --> 00:38:38,849
it would create this event log in the

1081
00:38:36,750 --> 00:38:41,369
task scheduler event log in Windows

1082
00:38:38,849 --> 00:38:44,280
saying task scheduler created this task

1083
00:38:41,369 --> 00:38:45,780
named MSI exec and they even mentioned

1084
00:38:44,280 --> 00:38:48,240
that this is similar behavior that the

1085
00:38:45,780 --> 00:38:49,470
attackers did back in 2011 so for five

1086
00:38:48,240 --> 00:38:52,080
years they've been employing this

1087
00:38:49,470 --> 00:38:53,939
technique so what was really funny to me

1088
00:38:52,080 --> 00:38:56,098
is if you went and looked at the IOC is

1089
00:38:53,940 --> 00:38:58,400
that Kaspersky shared or fireEye or any

1090
00:38:56,099 --> 00:39:01,260
of the other vendors I think this is

1091
00:38:58,400 --> 00:39:02,820
Kaspersky Zahn screen the IOC doesn't

1092
00:39:01,260 --> 00:39:04,410
have a single task item or anything

1093
00:39:02,820 --> 00:39:06,990
about scheduled tasks metadata in it

1094
00:39:04,410 --> 00:39:08,549
it's a list of hashes and IP addresses

1095
00:39:06,990 --> 00:39:11,250
like literally this is the whole

1096
00:39:08,550 --> 00:39:13,560
indicator exactly the problem we talked

1097
00:39:11,250 --> 00:39:15,450
about earlier so we could do better than

1098
00:39:13,560 --> 00:39:18,000
this right we could maybe add a task

1099
00:39:15,450 --> 00:39:20,520
item to the IOC that's part of open IOC

1100
00:39:18,000 --> 00:39:22,260
spec we could look for scheduled tasks

1101
00:39:20,520 --> 00:39:24,720
that run MSI exec and start to do some

1102
00:39:22,260 --> 00:39:26,849
outlier analysis but maybe that's still

1103
00:39:24,720 --> 00:39:28,169
a bit suspicious if 'ok and maybe we

1104
00:39:26,849 --> 00:39:29,790
want to take a step back further and

1105
00:39:28,170 --> 00:39:31,770
think about the problem holistically

1106
00:39:29,790 --> 00:39:33,930
which is if attackers are using

1107
00:39:31,770 --> 00:39:36,750
scheduled tasks so consistently across

1108
00:39:33,930 --> 00:39:38,669
breaches as a common mechanism of

1109
00:39:36,750 --> 00:39:41,220
lateral command execution how could we

1110
00:39:38,670 --> 00:39:43,770
just in general build a process to find

1111
00:39:41,220 --> 00:39:45,930
this stuff so let's look at the analysis

1112
00:39:43,770 --> 00:39:47,490
approach for event logs every single

1113
00:39:45,930 --> 00:39:49,440
Windows computer in your environment is

1114
00:39:47,490 --> 00:39:51,479
recording whenever a task is created the

1115
00:39:49,440 --> 00:39:53,880
user that created it and what thing it

1116
00:39:51,480 --> 00:39:56,849
ran and that log is really small it's

1117
00:39:53,880 --> 00:39:58,290
like 10 megabytes so you can harvest

1118
00:39:56,849 --> 00:40:00,180
that using windows native event

1119
00:39:58,290 --> 00:40:01,920
forwarding or pick your favorite EDR

1120
00:40:00,180 --> 00:40:04,470
tool and you can create a stack that

1121
00:40:01,920 --> 00:40:05,970
says which users create tasks in your

1122
00:40:04,470 --> 00:40:08,609
environment and how many do they create

1123
00:40:05,970 --> 00:40:10,169
over a period of time so get a profile

1124
00:40:08,609 --> 00:40:12,598
of what accounts in your environment are

1125
00:40:10,170 --> 00:40:14,890
actually creating these things you can

1126
00:40:12,599 --> 00:40:16,930
also create a stack by what your

1127
00:40:14,890 --> 00:40:18,578
are executing so when a scheduled task

1128
00:40:16,930 --> 00:40:20,109
runs what programs are there running and

1129
00:40:18,579 --> 00:40:21,549
this is important because you're going

1130
00:40:20,109 --> 00:40:23,380
to have stuff like Google's native

1131
00:40:21,549 --> 00:40:25,359
updater for Chrome which creates a

1132
00:40:23,380 --> 00:40:27,760
scheduled task you're going to have like

1133
00:40:25,359 --> 00:40:29,890
patches and ad hoc system administration

1134
00:40:27,760 --> 00:40:31,150
tasks all stuff that your admins are

1135
00:40:29,890 --> 00:40:32,950
doing legitimately to manage the

1136
00:40:31,150 --> 00:40:35,349
environment and should be largely common

1137
00:40:32,950 --> 00:40:37,180
over time and at scale to give you some

1138
00:40:35,349 --> 00:40:39,010
notion of prevalence and frequency of

1139
00:40:37,180 --> 00:40:40,868
occurrence and this will already start

1140
00:40:39,010 --> 00:40:43,150
to bubble up the one offs that seem more

1141
00:40:40,869 --> 00:40:45,609
interesting like a task named one dot

1142
00:40:43,150 --> 00:40:47,500
bat or test bat or dump dot bat or

1143
00:40:45,609 --> 00:40:49,390
something in a temp directory that might

1144
00:40:47,500 --> 00:40:51,069
warrant further investigation and

1145
00:40:49,390 --> 00:40:53,170
further analysis and that's where you

1146
00:40:51,069 --> 00:40:55,720
then go back to the full log context and

1147
00:40:53,170 --> 00:40:57,700
say who ran what at which time and you

1148
00:40:55,720 --> 00:41:00,069
can start to mark off for future hunting

1149
00:40:57,700 --> 00:41:01,930
recycling of this effort is this is

1150
00:41:00,069 --> 00:41:03,970
known good this was marked as commodity

1151
00:41:01,930 --> 00:41:06,730
bad you have a baseline of your

1152
00:41:03,970 --> 00:41:08,859
environment to hunt with for future

1153
00:41:06,730 --> 00:41:11,109
analysis and maybe you do this across a

1154
00:41:08,859 --> 00:41:12,670
one month effort and then you can start

1155
00:41:11,109 --> 00:41:14,589
doing it in an automated fashion and

1156
00:41:12,670 --> 00:41:16,210
scripted and soon you have such a good

1157
00:41:14,589 --> 00:41:17,980
baseline that when you are working a

1158
00:41:16,210 --> 00:41:19,329
targeted breach you're not looking at

1159
00:41:17,980 --> 00:41:21,819
this data for the first time and

1160
00:41:19,329 --> 00:41:23,529
freaking out at every single uncommon

1161
00:41:21,819 --> 00:41:27,308
good outlier that you find in your

1162
00:41:23,529 --> 00:41:28,960
network you can also do this at rest so

1163
00:41:27,309 --> 00:41:31,269
if you have EDR tools you can do stuff

1164
00:41:28,960 --> 00:41:33,220
like survey what scheduled tasks exist

1165
00:41:31,269 --> 00:41:35,558
on your endpoint now and what commands

1166
00:41:33,220 --> 00:41:37,000
they run and again these are files that

1167
00:41:35,559 --> 00:41:39,039
are sitting on every computer in your

1168
00:41:37,000 --> 00:41:41,410
network it is incredibly cheap and

1169
00:41:39,039 --> 00:41:43,180
efficient to get at this data it takes a

1170
00:41:41,410 --> 00:41:45,279
split second to parse this out and see

1171
00:41:43,180 --> 00:41:46,569
you've got a task named at 1:00 in your

1172
00:41:45,279 --> 00:41:49,539
environment and it's running something

1173
00:41:46,569 --> 00:41:50,920
named drop that XE and then finally

1174
00:41:49,539 --> 00:41:53,049
monitoring in motion if you have

1175
00:41:50,920 --> 00:41:54,579
telemetry feeds it's really easy to

1176
00:41:53,049 --> 00:41:56,529
start looking for some of the native

1177
00:41:54,579 --> 00:41:58,900
Windows commands that attackers love to

1178
00:41:56,529 --> 00:42:01,180
abuse and for scheduled tasks it's stuff

1179
00:41:58,900 --> 00:42:03,549
like the app command or the SCH tasks

1180
00:42:01,180 --> 00:42:07,029
command again most of your users don't

1181
00:42:03,549 --> 00:42:09,970
know that this even exists so profiling

1182
00:42:07,029 --> 00:42:11,440
whenever someone runs ax slash slash you

1183
00:42:09,970 --> 00:42:13,118
don't need to pay a third-party vendor

1184
00:42:11,440 --> 00:42:15,009
for an indicator or pattern of attack

1185
00:42:13,119 --> 00:42:17,349
for that like this is easy to monitor

1186
00:42:15,009 --> 00:42:18,910
for and there are a dozen or two

1187
00:42:17,349 --> 00:42:20,829
commands like this that will give you

1188
00:42:18,910 --> 00:42:22,899
incredible blanket coverage of a lot of

1189
00:42:20,829 --> 00:42:25,420
lateral movement techniques employed by

1190
00:42:22,900 --> 00:42:26,980
attackers so let's look at another

1191
00:42:25,420 --> 00:42:28,040
example of this which is stacking

1192
00:42:26,980 --> 00:42:30,260
binaries

1193
00:42:28,040 --> 00:42:32,540
so a lot of people when they try to do

1194
00:42:30,260 --> 00:42:36,350
anomaly analysis which was kind of the

1195
00:42:32,540 --> 00:42:38,390
third phase of what I described really

1196
00:42:36,350 --> 00:42:39,860
overwhelmed themselves with data and I

1197
00:42:38,390 --> 00:42:41,930
think the most common thing people will

1198
00:42:39,860 --> 00:42:46,070
chase first that gets them hung up is

1199
00:42:41,930 --> 00:42:48,620
they wonder how many unique executable

1200
00:42:46,070 --> 00:42:50,990
files do ELLs drivers are in my

1201
00:42:48,620 --> 00:42:53,720
environment and couldn't I just find

1202
00:42:50,990 --> 00:42:55,879
malware by looking for that XE or DLL by

1203
00:42:53,720 --> 00:42:57,859
name or hash that is unique or

1204
00:42:55,880 --> 00:43:00,820
relatively uncommon because strickman's

1205
00:42:57,860 --> 00:43:03,410
most of my users have largely similar

1206
00:43:00,820 --> 00:43:05,210
binaries on their endpoints and the

1207
00:43:03,410 --> 00:43:07,250
answer is absolutely not

1208
00:43:05,210 --> 00:43:09,680
even in a small environment the amount

1209
00:43:07,250 --> 00:43:11,900
of noise here is like breathtaking you

1210
00:43:09,680 --> 00:43:13,609
will see probably 10 to 100 times more

1211
00:43:11,900 --> 00:43:15,380
uniqueness than you expect and that's

1212
00:43:13,610 --> 00:43:17,600
because of different operating system

1213
00:43:15,380 --> 00:43:19,160
versions and add-ons it's getting even

1214
00:43:17,600 --> 00:43:21,290
worse now that Windows does like

1215
00:43:19,160 --> 00:43:23,060
slipstream updates where some users get

1216
00:43:21,290 --> 00:43:25,460
some versions of a file and other users

1217
00:43:23,060 --> 00:43:27,290
get other versions user installed

1218
00:43:25,460 --> 00:43:28,970
applications if you've got admin or

1219
00:43:27,290 --> 00:43:30,980
users with admin that can install

1220
00:43:28,970 --> 00:43:33,379
applications yeah have fun with all the

1221
00:43:30,980 --> 00:43:34,520
variants in your environment there but

1222
00:43:33,380 --> 00:43:36,760
then you've got stuff that you never

1223
00:43:34,520 --> 00:43:39,170
think of until you look at the data like

1224
00:43:36,760 --> 00:43:41,330
applications that like to drop files and

1225
00:43:39,170 --> 00:43:43,460
directories with a gooood in their file

1226
00:43:41,330 --> 00:43:45,650
name or their file path I think for a

1227
00:43:43,460 --> 00:43:47,360
while WebEx did this where if you ever

1228
00:43:45,650 --> 00:43:49,910
look at the binaries for WebEx there's

1229
00:43:47,360 --> 00:43:51,230
like a helper to the extension that's an

1230
00:43:49,910 --> 00:43:53,089
executable file that lives in a

1231
00:43:51,230 --> 00:43:54,830
directory with at least a partial good

1232
00:43:53,090 --> 00:43:56,150
in its file name which means if you're

1233
00:43:54,830 --> 00:43:57,770
trying to do stack analysis of

1234
00:43:56,150 --> 00:43:59,120
executables or names or directories

1235
00:43:57,770 --> 00:44:01,370
you're going to have a billion of these

1236
00:43:59,120 --> 00:44:03,230
unique one offs for every time someone

1237
00:44:01,370 --> 00:44:06,259
spawned off the the cisco webex

1238
00:44:03,230 --> 00:44:08,090
extension all of this creates a lot of

1239
00:44:06,260 --> 00:44:10,490
noise and in many cases unfortunately

1240
00:44:08,090 --> 00:44:12,500
dissuades people from pursuing data

1241
00:44:10,490 --> 00:44:15,709
analysis like this because it's just so

1242
00:44:12,500 --> 00:44:16,850
intrinsically hard to do right one of

1243
00:44:15,710 --> 00:44:18,830
the things that can help it doesn't

1244
00:44:16,850 --> 00:44:21,440
solve the problem but it can help is to

1245
00:44:18,830 --> 00:44:23,360
start by again approaching a manageable

1246
00:44:21,440 --> 00:44:25,610
stack of data when you build a hunting

1247
00:44:23,360 --> 00:44:27,170
program so I have a small demo

1248
00:44:25,610 --> 00:44:28,850
environment that we use in our own

1249
00:44:27,170 --> 00:44:30,230
company of a couple hundred Windows

1250
00:44:28,850 --> 00:44:33,230
servers and workstations and they're

1251
00:44:30,230 --> 00:44:34,700
largely configured the same and I just

1252
00:44:33,230 --> 00:44:37,370
wanted to show you what I mean about

1253
00:44:34,700 --> 00:44:39,470
just the noise that you deal with so

1254
00:44:37,370 --> 00:44:42,020
among these 250 systems if you were to

1255
00:44:39,470 --> 00:44:44,540
enumerate all of the loaded dll's and

1256
00:44:42,020 --> 00:44:48,320
season drivers in memory that small pool

1257
00:44:44,540 --> 00:44:52,130
of systems has 2490 unique files unique

1258
00:44:48,320 --> 00:44:53,900
based on path and hash if instead of

1259
00:44:52,130 --> 00:44:57,110
looking and that's a lot of data right

1260
00:44:53,900 --> 00:44:59,360
that's on only 250 largely alike systems

1261
00:44:57,110 --> 00:45:01,130
I already have 2500 rows of things to

1262
00:44:59,360 --> 00:45:03,080
look for the long tail is going to be

1263
00:45:01,130 --> 00:45:05,240
pretty big on that imagine in a network

1264
00:45:03,080 --> 00:45:07,610
of 10,000 systems imagine on a network

1265
00:45:05,240 --> 00:45:09,770
of 100,000 systems I work the

1266
00:45:07,610 --> 00:45:11,510
investigation where we did this like

1267
00:45:09,770 --> 00:45:15,080
file path uniqueness analysis for

1268
00:45:11,510 --> 00:45:16,820
binaries in a network of about 75,000

1269
00:45:15,080 --> 00:45:20,210
hosts and if I'm memory serves right we

1270
00:45:16,820 --> 00:45:23,270
had about 25 million unique XE paths by

1271
00:45:20,210 --> 00:45:25,010
name and hash that's an incredible

1272
00:45:23,270 --> 00:45:27,530
amount of data and you'll never find out

1273
00:45:25,010 --> 00:45:29,240
wires effectively in that so let's look

1274
00:45:27,530 --> 00:45:31,070
at a slightly smaller data set what if

1275
00:45:29,240 --> 00:45:32,629
instead of looking at all loaded modules

1276
00:45:31,070 --> 00:45:33,470
with hash and memory I only look at

1277
00:45:32,630 --> 00:45:36,560
things that are configured to

1278
00:45:33,470 --> 00:45:40,339
automatically run or load I only have

1279
00:45:36,560 --> 00:45:42,130
355 things to look at as opposed to 2500

1280
00:45:40,340 --> 00:45:44,930
that's a little better

1281
00:45:42,130 --> 00:45:46,790
instead of all auto start programs what

1282
00:45:44,930 --> 00:45:48,500
if I just focus on Windows services

1283
00:45:46,790 --> 00:45:50,870
which are a very common Windows

1284
00:45:48,500 --> 00:45:53,210
persistence mechanism for malware I only

1285
00:45:50,870 --> 00:45:55,250
have 225 unique things to start looking

1286
00:45:53,210 --> 00:45:57,920
at and monitoring and what if I want to

1287
00:45:55,250 --> 00:46:00,110
go really extreme and take a more

1288
00:45:57,920 --> 00:46:03,320
obscure but increasingly popular and

1289
00:46:00,110 --> 00:46:05,840
covert persistence mechanism like WMI

1290
00:46:03,320 --> 00:46:07,580
event consumers now I've only got four

1291
00:46:05,840 --> 00:46:09,260
unique things that I'm tracking across

1292
00:46:07,580 --> 00:46:11,690
an entire environment because there's

1293
00:46:09,260 --> 00:46:13,850
very few windows event consumers or WMI

1294
00:46:11,690 --> 00:46:15,650
consumers that the OS natively creates

1295
00:46:13,850 --> 00:46:18,200
so it's a lot easier to find an outlier

1296
00:46:15,650 --> 00:46:20,810
in for things so you can take on

1297
00:46:18,200 --> 00:46:22,580
manageable bite-sized chunks of data and

1298
00:46:20,810 --> 00:46:24,140
then build your way up from that and get

1299
00:46:22,580 --> 00:46:26,140
a nice baseline understanding of how

1300
00:46:24,140 --> 00:46:28,549
your environment works in the meantime

1301
00:46:26,140 --> 00:46:30,710
the other key here is to compare alike

1302
00:46:28,550 --> 00:46:32,960
assets if you're trying to hunt and do

1303
00:46:30,710 --> 00:46:34,640
anomaly analysis across users or systems

1304
00:46:32,960 --> 00:46:36,260
and you're comparing against the whole

1305
00:46:34,640 --> 00:46:37,879
estate you're always going to get

1306
00:46:36,260 --> 00:46:40,100
overwhelmed with too much noise and too

1307
00:46:37,880 --> 00:46:42,890
much of a long tail in this example I'm

1308
00:46:40,100 --> 00:46:44,870
showing you auto run Auto Start programs

1309
00:46:42,890 --> 00:46:47,180
across a mix of workstations servers

1310
00:46:44,870 --> 00:46:49,370
laptops and we've got three hundred

1311
00:46:47,180 --> 00:46:51,770
eight unique entries if I only compare

1312
00:46:49,370 --> 00:46:53,480
Auto runs against things that are sequel

1313
00:46:51,770 --> 00:46:56,069
servers in my environment I've only got

1314
00:46:53,480 --> 00:46:57,690
71 unique things so think about

1315
00:46:56,069 --> 00:46:59,130
from a monitoring perspective it's going

1316
00:46:57,690 --> 00:47:00,959
to be a lot more effective for you to

1317
00:46:59,130 --> 00:47:02,430
look for unique persistence mechanisms

1318
00:47:00,959 --> 00:47:04,618
across your domain controllers as a

1319
00:47:02,430 --> 00:47:06,930
group across your database servers as a

1320
00:47:04,619 --> 00:47:09,059
group across different your

1321
00:47:06,930 --> 00:47:11,160
administrator workstations than it is to

1322
00:47:09,059 --> 00:47:12,180
just compare against everything and if

1323
00:47:11,160 --> 00:47:13,979
you start to think about your

1324
00:47:12,180 --> 00:47:15,989
environment in terms of logical units

1325
00:47:13,979 --> 00:47:18,419
like that it becomes a lot easier to

1326
00:47:15,989 --> 00:47:20,039
proactively detect anomalies than to

1327
00:47:18,420 --> 00:47:22,170
just try to tackle the whole set of data

1328
00:47:20,039 --> 00:47:23,489
at once I have a whole other

1329
00:47:22,170 --> 00:47:24,900
presentation that's kind of

1330
00:47:23,489 --> 00:47:26,819
complementary to this it has some

1331
00:47:24,900 --> 00:47:28,680
overlapping content but then a bunch

1332
00:47:26,819 --> 00:47:30,630
more technical examples it's called

1333
00:47:28,680 --> 00:47:32,879
hunting in the dark it's on my speaker

1334
00:47:30,630 --> 00:47:35,539
deck account so if you'd like to read a

1335
00:47:32,880 --> 00:47:38,400
bit more about this do check that out

1336
00:47:35,539 --> 00:47:42,509
but let's wrap up with a few closing

1337
00:47:38,400 --> 00:47:43,949
thoughts and takeaways so one of the

1338
00:47:42,509 --> 00:47:45,839
things I also wanted to share is where

1339
00:47:43,949 --> 00:47:47,400
things are going in terms of standards

1340
00:47:45,839 --> 00:47:49,558
and platforms that solve some of these

1341
00:47:47,400 --> 00:47:51,779
endemic issues with good threat data

1342
00:47:49,559 --> 00:47:53,759
sharing and usage and there are a few

1343
00:47:51,779 --> 00:47:57,599
things that I like out there has anyone

1344
00:47:53,759 --> 00:47:59,690
heard of or used Mis P before two hands

1345
00:47:57,599 --> 00:48:03,630
so Mis v is malware information sharing

1346
00:47:59,690 --> 00:48:05,309
platform I think it is a open platform

1347
00:48:03,630 --> 00:48:07,529
for consuming threat data and threat

1348
00:48:05,309 --> 00:48:09,059
feeds it gives you information and

1349
00:48:07,529 --> 00:48:10,799
analysis and comparison of what you're

1350
00:48:09,059 --> 00:48:11,999
ingesting and it provides mechanisms to

1351
00:48:10,799 --> 00:48:14,069
then shunt that off to some of the other

1352
00:48:11,999 --> 00:48:16,109
tools in your environment it is a really

1353
00:48:14,069 --> 00:48:17,819
nice platform with soul true recently

1354
00:48:16,109 --> 00:48:21,209
announcing effectively that there yo

1355
00:48:17,819 --> 00:48:23,609
ailing it's probably one of the most

1356
00:48:21,209 --> 00:48:25,769
mature remaining open platforms for

1357
00:48:23,609 --> 00:48:27,719
threat data collection out there so I

1358
00:48:25,769 --> 00:48:29,399
suggest you check that out for thread

1359
00:48:27,719 --> 00:48:31,739
hubs and exchanges everyone knows about

1360
00:48:29,400 --> 00:48:33,359
the public sector and Industry vertical

1361
00:48:31,739 --> 00:48:35,339
specific exchanges out there

1362
00:48:33,359 --> 00:48:38,038
I'm unfortunately not too familiar with

1363
00:48:35,339 --> 00:48:39,808
the exchanges in Canada but I'm sure

1364
00:48:38,039 --> 00:48:41,849
they don't exist that the government is

1365
00:48:39,809 --> 00:48:43,650
working to build some of those on the

1366
00:48:41,849 --> 00:48:45,119
private sector there's one that I want

1367
00:48:43,650 --> 00:48:46,289
to give a plug for because I really like

1368
00:48:45,119 --> 00:48:48,359
how they're approaching this and that's

1369
00:48:46,289 --> 00:48:50,160
Facebook so Facebook's been running

1370
00:48:48,359 --> 00:48:52,199
thread exchange for two years they have

1371
00:48:50,160 --> 00:48:54,509
a couple hundred members across lots of

1372
00:48:52,199 --> 00:48:56,039
different industries and Facebook does a

1373
00:48:54,509 --> 00:48:58,049
really good job with how they've built

1374
00:48:56,039 --> 00:49:00,239
their graph to consume and manage and

1375
00:48:58,049 --> 00:49:02,969
rate and score threat data probably the

1376
00:49:00,239 --> 00:49:05,519
most I would say mature approach that

1377
00:49:02,969 --> 00:49:09,310
I've seen in industry to tackling this

1378
00:49:05,519 --> 00:49:11,680
problem and so they are free you have to

1379
00:49:09,310 --> 00:49:14,170
just agree to certain terms to join and

1380
00:49:11,680 --> 00:49:16,120
to share info if you want to but they

1381
00:49:14,170 --> 00:49:18,910
run a great program and then from

1382
00:49:16,120 --> 00:49:21,220
standards I beat up a bit on open IOC I

1383
00:49:18,910 --> 00:49:23,080
didn't talk a lot about stick since I

1384
00:49:21,220 --> 00:49:25,259
box I mean show of hands here how many

1385
00:49:23,080 --> 00:49:28,750
of you have worked with Sai box before

1386
00:49:25,260 --> 00:49:31,150
now I'm so sorry like it's it's not

1387
00:49:28,750 --> 00:49:32,800
pleasant because when they built those

1388
00:49:31,150 --> 00:49:34,660
standards they built them to try to

1389
00:49:32,800 --> 00:49:36,610
encompass so many edge cases and use

1390
00:49:34,660 --> 00:49:38,200
cases that you ended up with hundreds

1391
00:49:36,610 --> 00:49:39,640
upon hundreds of terms and so the net

1392
00:49:38,200 --> 00:49:42,040
result is people look at this and they

1393
00:49:39,640 --> 00:49:43,839
see this giant XML schema and your eyes

1394
00:49:42,040 --> 00:49:45,310
kind of just roll back in your head and

1395
00:49:43,840 --> 00:49:48,970
as well they should it's it's too much

1396
00:49:45,310 --> 00:49:50,440
sigh box 3.0 which Oasis is working on

1397
00:49:48,970 --> 00:49:52,689
finalizing is refactoring and

1398
00:49:50,440 --> 00:49:54,160
simplifying it greatly same for sticks

1399
00:49:52,690 --> 00:49:56,590
which is kind of like an envelope around

1400
00:49:54,160 --> 00:49:57,879
Sai box and other things so that is

1401
00:49:56,590 --> 00:49:59,740
going to help a lot because they

1402
00:49:57,880 --> 00:50:01,510
realized like look we don't need a term

1403
00:49:59,740 --> 00:50:03,370
for everything we just need to tackle

1404
00:50:01,510 --> 00:50:05,590
the most commonly used and commonly

1405
00:50:03,370 --> 00:50:07,509
shared types of observables and to do so

1406
00:50:05,590 --> 00:50:10,420
effectively and well better to tackle

1407
00:50:07,510 --> 00:50:11,560
the 80% really really well than to worry

1408
00:50:10,420 --> 00:50:12,970
about building a standard that

1409
00:50:11,560 --> 00:50:16,080
encompasses the whole universe and

1410
00:50:12,970 --> 00:50:18,759
becomes too difficult for people to use

1411
00:50:16,080 --> 00:50:20,110
the second is quantitative assessment of

1412
00:50:18,760 --> 00:50:22,450
threat feeds and this is really hard

1413
00:50:20,110 --> 00:50:25,960
like like I said before no one is really

1414
00:50:22,450 --> 00:50:27,399
doing this at any sort of scale and so I

1415
00:50:25,960 --> 00:50:28,990
looked to see if there were a lot of

1416
00:50:27,400 --> 00:50:30,790
tools or good resources out there for

1417
00:50:28,990 --> 00:50:32,620
quantitative assessment of threat data

1418
00:50:30,790 --> 00:50:35,160
quality and all I could find is

1419
00:50:32,620 --> 00:50:39,880
something from the ML SEK project in

1420
00:50:35,160 --> 00:50:41,740
2014 or 13 Kyle Maxwell and did a

1421
00:50:39,880 --> 00:50:43,480
presentation about measuring the IQ of

1422
00:50:41,740 --> 00:50:45,220
your threat feeds they produced this

1423
00:50:43,480 --> 00:50:47,290
tool called tick test that lets you do

1424
00:50:45,220 --> 00:50:50,680
statistical comparison of network IOC s

1425
00:50:47,290 --> 00:50:52,180
in your feeds and gives you a sense of

1426
00:50:50,680 --> 00:50:53,290
how much overlap you have and it's

1427
00:50:52,180 --> 00:50:55,569
really interesting when you take a

1428
00:50:53,290 --> 00:50:57,970
couple private feeds for pay a couple

1429
00:50:55,570 --> 00:50:59,890
public feeds and find out that maybe the

1430
00:50:57,970 --> 00:51:03,490
overlap is a much greater percentage

1431
00:50:59,890 --> 00:51:05,470
than you expected challenge your threat

1432
00:51:03,490 --> 00:51:07,060
feed vendor as you're buying the stuff

1433
00:51:05,470 --> 00:51:09,220
or evaluating or shopping around

1434
00:51:07,060 --> 00:51:11,140
consider where the data is coming from

1435
00:51:09,220 --> 00:51:13,390
are they doing just open source threat

1436
00:51:11,140 --> 00:51:15,759
Intel collection are they using honey

1437
00:51:13,390 --> 00:51:17,259
pots are they running managed services

1438
00:51:15,760 --> 00:51:18,880
or professional services where they're

1439
00:51:17,260 --> 00:51:20,830
seeing investigations and breaches in

1440
00:51:18,880 --> 00:51:22,480
the field all of these have strengths

1441
00:51:20,830 --> 00:51:23,109
and weaknesses in terms of the scope and

1442
00:51:22,480 --> 00:51:25,079
breadth and

1443
00:51:23,109 --> 00:51:27,369
all of data that you should consider

1444
00:51:25,079 --> 00:51:29,049
what is the breakdown of observable

1445
00:51:27,369 --> 00:51:30,940
types like statistically you should be

1446
00:51:29,049 --> 00:51:32,619
able to get a number on what percentage

1447
00:51:30,940 --> 00:51:34,660
of the items in your feeds or hashes

1448
00:51:32,619 --> 00:51:36,640
what percent are IPS what percent or

1449
00:51:34,660 --> 00:51:38,460
registry keys so you know where to apply

1450
00:51:36,640 --> 00:51:40,690
and where it's going to be effective and

1451
00:51:38,460 --> 00:51:41,890
challenge them for what QC they have in

1452
00:51:40,690 --> 00:51:43,539
place how are they testing their

1453
00:51:41,890 --> 00:51:45,160
indicators how are they testing them to

1454
00:51:43,539 --> 00:51:46,930
see if they produce false positives are

1455
00:51:45,160 --> 00:51:48,640
they doing spot checking have they

1456
00:51:46,930 --> 00:51:52,410
documented their feeds such that you

1457
00:51:48,640 --> 00:51:55,480
feel confident you can ingest it to spec

1458
00:51:52,410 --> 00:51:57,308
and then consider your own visibility so

1459
00:51:55,480 --> 00:51:59,079
are you really maximizing what you're

1460
00:51:57,309 --> 00:52:01,359
paying for do you have the tooling in

1461
00:51:59,079 --> 00:52:03,339
place to actually utilize threat data

1462
00:52:01,359 --> 00:52:05,288
such that you have better visibility

1463
00:52:03,339 --> 00:52:07,299
across your endpoints your servers and

1464
00:52:05,289 --> 00:52:09,009
your network infrastructure and are the

1465
00:52:07,299 --> 00:52:12,249
two aligned if you're consuming a kind

1466
00:52:09,009 --> 00:52:14,200
of endpoint threat data and only looking

1467
00:52:12,249 --> 00:52:15,999
really in your sim which has Network

1468
00:52:14,200 --> 00:52:17,558
centric logs you're probably wasting

1469
00:52:15,999 --> 00:52:19,450
your money and you need to either shift

1470
00:52:17,559 --> 00:52:20,739
the threat data you're buying or shift

1471
00:52:19,450 --> 00:52:22,419
your tooling so that you have more

1472
00:52:20,739 --> 00:52:26,410
endpoint visibility and the same is true

1473
00:52:22,420 --> 00:52:27,999
and vice versa and then again consider

1474
00:52:26,410 --> 00:52:30,249
threat data in the grand scheme of

1475
00:52:27,999 --> 00:52:32,618
things in the grand grand sense of

1476
00:52:30,249 --> 00:52:34,328
return on investment for security the

1477
00:52:32,619 --> 00:52:36,130
threats the best sources of threat data

1478
00:52:34,329 --> 00:52:38,259
are not going to help you keep pace with

1479
00:52:36,130 --> 00:52:39,519
emerging attacks there are always going

1480
00:52:38,259 --> 00:52:41,109
to be attacks that are ahead of that

1481
00:52:39,519 --> 00:52:42,578
curve and they're always going to be

1482
00:52:41,109 --> 00:52:44,710
things that you can more successfully

1483
00:52:42,579 --> 00:52:46,059
identify by looking inside at your own

1484
00:52:44,710 --> 00:52:49,480
environment that the intelligence that

1485
00:52:46,059 --> 00:52:51,160
your network intrinsically produces Rob

1486
00:52:49,480 --> 00:52:52,869
Joyce from the national security

1487
00:52:51,160 --> 00:52:55,779
agencies tailored access operations

1488
00:52:52,869 --> 00:52:57,190
group did a presentation at enigma Con

1489
00:52:55,779 --> 00:52:59,859
earlier this year where he talked about

1490
00:52:57,190 --> 00:53:01,809
how the NSA is worst nightmare is a

1491
00:52:59,859 --> 00:53:03,940
sysadmin who pays attention it's not a

1492
00:53:01,809 --> 00:53:05,769
company that's got good threat data it's

1493
00:53:03,940 --> 00:53:07,539
people that understand what's going on

1494
00:53:05,769 --> 00:53:10,238
in their systems and can find outliers

1495
00:53:07,539 --> 00:53:12,339
and anomalies and spot behavior that is

1496
00:53:10,239 --> 00:53:13,989
atypical so knowing your network above

1497
00:53:12,339 --> 00:53:15,788
all and investing in the security

1498
00:53:13,989 --> 00:53:18,239
hygiene and attack surface reduction

1499
00:53:15,789 --> 00:53:20,920
that shrinks opportunities for attackers

1500
00:53:18,239 --> 00:53:23,109
will always provide a greater overall

1501
00:53:20,920 --> 00:53:25,269
return on investment than just adding

1502
00:53:23,109 --> 00:53:28,328
one more IOC source or one more source

1503
00:53:25,269 --> 00:53:30,220
of threat data all right and with that

1504
00:53:28,329 --> 00:53:32,499
we have some time for questions so

1505
00:53:30,220 --> 00:53:33,790
thanks all and happily take any

1506
00:53:32,499 --> 00:53:35,279
questions

1507
00:53:33,790 --> 00:53:39,499
you

1508
00:53:35,280 --> 00:53:39,499
[Music]

