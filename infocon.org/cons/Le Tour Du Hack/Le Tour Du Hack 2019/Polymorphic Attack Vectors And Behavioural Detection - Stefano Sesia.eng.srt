1
00:00:02,530 --> 00:00:05,529
take away good afternoon everyone my

2
00:00:05,529 --> 00:00:09,219
name is Stefano and first of all well

3
00:00:09,219 --> 00:00:10,929
done for making it all the way through

4
00:00:10,929 --> 00:00:12,250
all these amazing talks that you had

5
00:00:12,250 --> 00:00:13,900
today hopefully there's not going to be

6
00:00:13,900 --> 00:00:15,700
to login tedious and no one is gonna

7
00:00:15,700 --> 00:00:19,240
fall asleep and so this talk is about

8
00:00:19,240 --> 00:00:21,699
polymorphic and metamorphic attack I

9
00:00:21,699 --> 00:00:23,859
thought that polymorphic was already too

10
00:00:23,859 --> 00:00:25,090
big of a word so I didn't want our

11
00:00:25,090 --> 00:00:29,080
metamorphic on there as well and and how

12
00:00:29,080 --> 00:00:32,019
we can use behavioural defense and

13
00:00:32,019 --> 00:00:34,739
analysis to try and detect all this new

14
00:00:34,739 --> 00:00:38,530
attack patterns and there are going to

15
00:00:38,530 --> 00:00:41,559
be a lot of mythological creature names

16
00:00:41,559 --> 00:00:43,780
in there so the reason why we have

17
00:00:43,780 --> 00:00:45,430
Cthulhu there is because at the end of

18
00:00:45,430 --> 00:00:47,460
this talk I will release Cthulhu

19
00:00:47,460 --> 00:00:50,860
publicly on get lock so anyone can go

20
00:00:50,860 --> 00:00:53,110
there and clone it and take a look at it

21
00:00:53,110 --> 00:00:56,289
and play with it and so hopefully we're

22
00:00:56,289 --> 00:00:58,780
going to be able to invoke a few at the

23
00:00:58,780 --> 00:01:01,210
end of the of the presentation also this

24
00:01:01,210 --> 00:01:03,879
presentation Lux means a lot of them

25
00:01:03,879 --> 00:01:05,500
that is the only meme I have in my whole

26
00:01:05,500 --> 00:01:07,360
presentation and the reason for that I'm

27
00:01:07,360 --> 00:01:08,100
sorry

28
00:01:08,100 --> 00:01:10,930
the reason for that is that I have a lot

29
00:01:10,930 --> 00:01:13,540
of schemas and those to the majority of

30
00:01:13,540 --> 00:01:18,970
the screen space are hot so I'm gonna

31
00:01:18,970 --> 00:01:21,700
quickly go through all these points so a

32
00:01:21,700 --> 00:01:24,189
bit of introduction of Who I am why am I

33
00:01:24,189 --> 00:01:27,159
doing this to the whole world and then

34
00:01:27,159 --> 00:01:29,290
we're gonna talk about a few of the

35
00:01:29,290 --> 00:01:30,729
terms that we're going to use through

36
00:01:30,729 --> 00:01:33,430
the research then we're gonna talk about

37
00:01:33,430 --> 00:01:35,290
the scope I have a proof of concept and

38
00:01:35,290 --> 00:01:37,119
a live demo which probably will crash

39
00:01:37,119 --> 00:01:40,180
but we'll try and we're gonna discuss

40
00:01:40,180 --> 00:01:42,659
the results and then a few words about

41
00:01:42,659 --> 00:01:45,040
cybersecurity in general and the trends

42
00:01:45,040 --> 00:01:46,710
that I see in this world

43
00:01:46,710 --> 00:01:50,049
so am i my name is Stefano I used to

44
00:01:50,049 --> 00:01:51,549
study at the University of Glasgow I

45
00:01:51,549 --> 00:01:54,729
graduated last year and my passion is

46
00:01:54,729 --> 00:01:57,759
crazy events for students of armed cyber

47
00:01:57,759 --> 00:02:00,399
security so I organized that event which

48
00:02:00,399 --> 00:02:02,140
is the cyber defense exercise we have it

49
00:02:02,140 --> 00:02:06,759
every year Glasgow uni and this event

50
00:02:06,759 --> 00:02:09,130
actually inspired me in doing this

51
00:02:09,130 --> 00:02:12,030
research as part of my degree because um

52
00:02:12,030 --> 00:02:14,410
as part of organizing the cyber defence

53
00:02:14,410 --> 00:02:16,030
exercise we need to come up every year

54
00:02:16,030 --> 00:02:16,330
with

55
00:02:16,330 --> 00:02:18,100
vulnerable machines like you would have

56
00:02:18,100 --> 00:02:21,490
on BOM hub and then after for 24 hours

57
00:02:21,490 --> 00:02:22,840
that the student tried to harden them

58
00:02:22,840 --> 00:02:26,470
myself and a team of professional from

59
00:02:26,470 --> 00:02:28,090
the industry actually try and do some

60
00:02:28,090 --> 00:02:31,450
pen testing on these machines and when

61
00:02:31,450 --> 00:02:32,920
you know what the vulnerabilities are

62
00:02:32,920 --> 00:02:35,560
all the majority of the red team work is

63
00:02:35,560 --> 00:02:37,330
very tedious and repetitive you already

64
00:02:37,330 --> 00:02:39,400
know what you're about to crack and and

65
00:02:39,400 --> 00:02:41,440
so I found myself on the rest of my team

66
00:02:41,440 --> 00:02:43,420
repeating the same things over and over

67
00:02:43,420 --> 00:02:46,240
and over we ran and map we see if the

68
00:02:46,240 --> 00:02:48,160
ports are open with pings condom we do

69
00:02:48,160 --> 00:02:50,170
the same thing over and over normal so I

70
00:02:50,170 --> 00:02:52,150
thought about myself what about taking

71
00:02:52,150 --> 00:02:54,150
automation of all these tools

72
00:02:54,150 --> 00:02:56,680
weaponizing a bunch of Metasploit and

73
00:02:56,680 --> 00:02:59,950
other Budds tools are out there and see

74
00:02:59,950 --> 00:03:04,000
how successful that is and that there's

75
00:03:04,000 --> 00:03:06,370
the question why why do you do such

76
00:03:06,370 --> 00:03:09,220
thing first of all there are examples in

77
00:03:09,220 --> 00:03:10,990
the world the polymorphism and

78
00:03:10,990 --> 00:03:14,770
metamorphism as mutations of the same

79
00:03:14,770 --> 00:03:17,250
virus or the same payload or the same

80
00:03:17,250 --> 00:03:20,530
exploits are happening in the world if

81
00:03:20,530 --> 00:03:22,450
you think about corn fritter was one of

82
00:03:22,450 --> 00:03:25,570
the first worms it would automatically

83
00:03:25,570 --> 00:03:28,060
expand after that we have Stuxnet which

84
00:03:28,060 --> 00:03:30,760
had four zero days that were that was

85
00:03:30,760 --> 00:03:32,680
able to pass from system to system

86
00:03:32,680 --> 00:03:35,560
and after that we had one occur I think

87
00:03:35,560 --> 00:03:37,330
that ever in this room no wanna cry yes

88
00:03:37,330 --> 00:03:39,880
and again we saw for the first time a

89
00:03:39,880 --> 00:03:42,130
virus that didn't need a user to double

90
00:03:42,130 --> 00:03:45,100
click on an email or download more on

91
00:03:45,100 --> 00:03:48,070
calm but if you if your machine was

92
00:03:48,070 --> 00:03:49,420
vulnerable and exposed on the internet

93
00:03:49,420 --> 00:03:51,820
you were infected and more recently we

94
00:03:51,820 --> 00:03:53,620
had a few campaigns out that actually

95
00:03:53,620 --> 00:03:56,410
targeted a few shops here in the UK that

96
00:03:56,410 --> 00:03:59,500
used domain generation algorithms which

97
00:03:59,500 --> 00:04:01,959
means that their command and control

98
00:04:01,959 --> 00:04:04,900
server wasn't only on one single IP

99
00:04:04,900 --> 00:04:07,150
address or one single domain would

100
00:04:07,150 --> 00:04:09,489
automatically generates a mutates the

101
00:04:09,489 --> 00:04:11,590
string in the codes so it would maintain

102
00:04:11,590 --> 00:04:14,799
connection so we can see how the trends

103
00:04:14,799 --> 00:04:16,978
in all this technology is going towards

104
00:04:16,978 --> 00:04:18,970
spontaneous mutation of the code the

105
00:04:18,970 --> 00:04:21,579
code itself deciding to change to try

106
00:04:21,579 --> 00:04:26,140
and make our life security researchers

107
00:04:26,140 --> 00:04:29,110
way way way harder so I wanted to first

108
00:04:29,110 --> 00:04:30,039
of all

109
00:04:30,039 --> 00:04:32,229
safeguard critical infrastructures so

110
00:04:32,229 --> 00:04:33,789
when I did this University in this

111
00:04:33,789 --> 00:04:36,400
research at university I was focused on

112
00:04:36,400 --> 00:04:39,249
safety critical systems so I had access

113
00:04:39,249 --> 00:04:43,119
to the clone of certain operating

114
00:04:43,119 --> 00:04:45,099
systems that were deployed in proximity

115
00:04:45,099 --> 00:04:48,550
of you name it your nuclear power plant

116
00:04:48,550 --> 00:04:51,639
your power grids and all these systems

117
00:04:51,639 --> 00:04:54,279
so I was wondering if there was a way of

118
00:04:54,279 --> 00:04:56,439
securing the systems that are attached

119
00:04:56,439 --> 00:04:59,680
to very delicate infrastructures second

120
00:04:59,680 --> 00:05:03,189
of all to track mutations and we have a

121
00:05:03,189 --> 00:05:04,659
huge effort in the community trying to

122
00:05:04,659 --> 00:05:07,509
track apts and how bad people do bad

123
00:05:07,509 --> 00:05:10,659
things and I think that if we put a huge

124
00:05:10,659 --> 00:05:13,210
effort into tracking the various

125
00:05:13,210 --> 00:05:16,479
mutation of all these viruses we're

126
00:05:16,479 --> 00:05:18,159
going to be able to pinpoint this

127
00:05:18,159 --> 00:05:20,259
infection much quicker so if you think

128
00:05:20,259 --> 00:05:22,180
about wanna cry when a crowd came out in

129
00:05:22,180 --> 00:05:24,099
fact a bunch of computers months later

130
00:05:24,099 --> 00:05:26,860
we had not wanna cry petty are not petty

131
00:05:26,860 --> 00:05:29,949
are all different versions of

132
00:05:29,949 --> 00:05:35,080
substantially the same thing definitely

133
00:05:35,080 --> 00:05:38,110
to combat digital what I'd like to call

134
00:05:38,110 --> 00:05:41,110
digital crime as a service so the way I

135
00:05:41,110 --> 00:05:42,990
define digital crime as a service is

136
00:05:42,990 --> 00:05:45,849
well you have your Amazon which is you

137
00:05:45,849 --> 00:05:48,039
know like providing a service to you and

138
00:05:48,039 --> 00:05:49,899
if you go in the dark web you have this

139
00:05:49,899 --> 00:05:52,899
malicious actors trying to sell viruses

140
00:05:52,899 --> 00:05:54,819
and it's not like he used to be in the

141
00:05:54,819 --> 00:05:57,009
90s anymore where you would get your

142
00:05:57,009 --> 00:05:59,199
random product that would work an

143
00:05:59,199 --> 00:06:01,269
afternoon on your friend's computer not

144
00:06:01,269 --> 00:06:03,729
that I've ever done that and that was it

145
00:06:03,729 --> 00:06:06,129
you have proper criminal organizations

146
00:06:06,129 --> 00:06:08,289
following software engineering practices

147
00:06:08,289 --> 00:06:09,789
I'm talking they have scrum meetings

148
00:06:09,789 --> 00:06:13,289
they have repositories they have client

149
00:06:13,289 --> 00:06:15,819
supports they have video tutorials they

150
00:06:15,819 --> 00:06:18,009
are organized they're not is not just a

151
00:06:18,009 --> 00:06:19,870
sporadic it's an exploit as a zero-day

152
00:06:19,870 --> 00:06:22,240
on the dark web is point-and-shoots

153
00:06:22,240 --> 00:06:23,919
everyone that doesn't even understand

154
00:06:23,919 --> 00:06:26,649
viruses can just download it and execute

155
00:06:26,649 --> 00:06:27,809
it

156
00:06:27,809 --> 00:06:30,580
and then command and control servers

157
00:06:30,580 --> 00:06:33,459
which is what this POC heavily relies on

158
00:06:33,459 --> 00:06:36,370
and are still pretty much a thing as we

159
00:06:36,370 --> 00:06:38,079
said it with domain generation

160
00:06:38,079 --> 00:06:40,969
algorithms is much easier to

161
00:06:40,969 --> 00:06:43,009
use the same command and control server

162
00:06:43,009 --> 00:06:47,959
and managed to spin it around but if you

163
00:06:47,959 --> 00:06:51,279
think about it and the general trends of

164
00:06:51,279 --> 00:06:54,439
computing science in general we heavily

165
00:06:54,439 --> 00:06:57,789
relies on web api's we heavily rely on

166
00:06:57,789 --> 00:07:02,299
cloud as a service so with all this in

167
00:07:02,299 --> 00:07:04,129
mind is normal that every computer in

168
00:07:04,129 --> 00:07:06,349
big corporations even in nuclear power

169
00:07:06,349 --> 00:07:09,949
plants needs to call out for their API

170
00:07:09,949 --> 00:07:12,799
need to be accessible from remote so all

171
00:07:12,799 --> 00:07:14,989
these dynamics allow command and control

172
00:07:14,989 --> 00:07:16,909
servers which if you think about it it

173
00:07:16,909 --> 00:07:18,289
sounds like a bit of a stupid concept

174
00:07:18,289 --> 00:07:20,569
having one single point of failure

175
00:07:20,569 --> 00:07:23,319
that's old your viruses called back to

176
00:07:23,319 --> 00:07:25,309
but are still pretty much a thing

177
00:07:25,309 --> 00:07:27,079
because we need this external

178
00:07:27,079 --> 00:07:29,119
communication to actually make the

179
00:07:29,119 --> 00:07:32,089
things work and lastly because why not

180
00:07:32,089 --> 00:07:38,239
if a fourth-year grads kids actually

181
00:07:38,239 --> 00:07:40,039
come up and build this then why

182
00:07:40,039 --> 00:07:43,479
shouldn't we investigate these things so

183
00:07:43,479 --> 00:07:45,709
let's talk about jargon and the reason

184
00:07:45,709 --> 00:07:48,139
why I had to put up this definition is

185
00:07:48,139 --> 00:07:49,729
because whilst I was researching the

186
00:07:49,729 --> 00:07:51,800
paper I came up I came across various

187
00:07:51,800 --> 00:07:54,589
papers and I was trying to find one

188
00:07:54,589 --> 00:07:59,449
definitive definition of poly with the

189
00:07:59,449 --> 00:08:01,309
code polymorphism and code metamorphism

190
00:08:01,309 --> 00:08:07,459
and within the same semantic reports by

191
00:08:07,459 --> 00:08:10,339
rats it gave three different definition

192
00:08:10,339 --> 00:08:12,319
of polymorphism and two different

193
00:08:12,319 --> 00:08:14,749
definitions of metamorphism so we're

194
00:08:14,749 --> 00:08:16,039
talking about the same paper written by

195
00:08:16,039 --> 00:08:18,199
the same person that gives you three

196
00:08:18,199 --> 00:08:19,879
different definitions of the same thing

197
00:08:19,879 --> 00:08:21,169
in two different definition on the other

198
00:08:21,169 --> 00:08:23,360
so just for the sake of this paper in

199
00:08:23,360 --> 00:08:24,729
this talk we're gonna define

200
00:08:24,729 --> 00:08:28,909
polymorphism as your code maintains the

201
00:08:28,909 --> 00:08:32,870
same logical context but change changes

202
00:08:32,870 --> 00:08:34,909
the semantics so if you think about say

203
00:08:34,909 --> 00:08:36,860
imagine having a for loop that repeats

204
00:08:36,860 --> 00:08:38,958
that you need an action to be repeated

205
00:08:38,958 --> 00:08:40,789
four times you can have a for loop with

206
00:08:40,789 --> 00:08:43,639
an i counter increments and does the

207
00:08:43,639 --> 00:08:45,559
thing four times or you can have a while

208
00:08:45,559 --> 00:08:51,319
loop with some different variable that

209
00:08:51,319 --> 00:08:53,660
you check so at the end of the day the

210
00:08:53,660 --> 00:08:54,830
two pieces of code that you've written

211
00:08:54,830 --> 00:08:56,630
that do the exact same thing

212
00:08:56,630 --> 00:08:59,030
but they're written a different way why

213
00:08:59,030 --> 00:09:01,820
is this important when you talk about

214
00:09:01,820 --> 00:09:04,460
cybersecurity it is because when you

215
00:09:04,460 --> 00:09:07,430
change the syntax and under semantics of

216
00:09:07,430 --> 00:09:10,280
certain commands the signature and the

217
00:09:10,280 --> 00:09:12,590
strings in a certain files change and

218
00:09:12,590 --> 00:09:15,710
and when these small blocks of code

219
00:09:15,710 --> 00:09:18,860
change if you have a low-level signature

220
00:09:18,860 --> 00:09:21,530
based defense systems this will not be

221
00:09:21,530 --> 00:09:27,710
triggered anymore when we look at

222
00:09:27,710 --> 00:09:29,600
metamorphic metamorphism

223
00:09:29,600 --> 00:09:31,730
is similar to that but a bit different

224
00:09:31,730 --> 00:09:35,810
so in this in this context we want to

225
00:09:35,810 --> 00:09:39,710
end up doing the same thing but we are

226
00:09:39,710 --> 00:09:42,200
going to change the logic on how we get

227
00:09:42,200 --> 00:09:44,230
there so we still want to go from A to B

228
00:09:44,230 --> 00:09:46,910
but we are not going to take one roots

229
00:09:46,910 --> 00:09:48,440
we're gonna take another different roots

230
00:09:48,440 --> 00:09:50,330
so this changes a bigger chunk of the

231
00:09:50,330 --> 00:09:52,490
code if you think about cybersecurity

232
00:09:52,490 --> 00:09:53,840
and what you normally do in our

233
00:09:53,840 --> 00:09:58,190
engagement we normally do is you look at

234
00:09:58,190 --> 00:10:00,050
a system and you need to choose a paid

235
00:10:00,050 --> 00:10:02,330
an exploit first of all the exploit will

236
00:10:02,330 --> 00:10:05,840
try and bridge in the system and so if

237
00:10:05,840 --> 00:10:07,970
you're trying to for example bridge SMB

238
00:10:07,970 --> 00:10:10,880
you have a lot of available exploits

239
00:10:10,880 --> 00:10:13,310
that allow you to breach SMB so in this

240
00:10:13,310 --> 00:10:15,110
case what I want to do is change the

241
00:10:15,110 --> 00:10:17,600
payload and the exploit and the

242
00:10:17,600 --> 00:10:21,740
different encoding and even the language

243
00:10:21,740 --> 00:10:24,920
of in which we write this this virus so

244
00:10:24,920 --> 00:10:27,920
we're not only changing a for loop into

245
00:10:27,920 --> 00:10:28,550
a while loop

246
00:10:28,550 --> 00:10:30,800
vice or vice versa we're changing entire

247
00:10:30,800 --> 00:10:33,950
logic of the code and as you can imagine

248
00:10:33,950 --> 00:10:36,470
if even the previous method was

249
00:10:36,470 --> 00:10:39,590
successful enough into fooling starts

250
00:10:39,590 --> 00:10:42,200
and low-level signature base defense

251
00:10:42,200 --> 00:10:45,880
systems this one is even more effective

252
00:10:45,880 --> 00:10:49,550
so I had to set up a scope as any good

253
00:10:49,550 --> 00:10:51,620
researchers know I don't like to end up

254
00:10:51,620 --> 00:10:55,520
in prison so I wanted to put some clear

255
00:10:55,520 --> 00:10:57,140
guidelines and what I was allowed to not

256
00:10:57,140 --> 00:10:59,450
allowed to do first of all I wanted to

257
00:10:59,450 --> 00:11:01,970
create segregated environments in which

258
00:11:01,970 --> 00:11:04,130
I could test this that needs to be

259
00:11:04,130 --> 00:11:06,380
multi-platform so not only Linux sorry

260
00:11:06,380 --> 00:11:07,310
in might

261
00:11:07,310 --> 00:11:12,290
case I had Linux had Windows OSX and it

262
00:11:12,290 --> 00:11:14,390
needs to be production like and with a

263
00:11:14,390 --> 00:11:16,460
standard configuration which means that

264
00:11:16,460 --> 00:11:18,830
I need to a bit of research and knowing

265
00:11:18,830 --> 00:11:21,340
exactly which systems were deployed

266
00:11:21,340 --> 00:11:23,630
which were the system that was trying to

267
00:11:23,630 --> 00:11:25,700
protect to make the testing conditions

268
00:11:25,700 --> 00:11:29,810
as similar as possible to part of me as

269
00:11:29,810 --> 00:11:33,610
similar as possible to to real life and

270
00:11:33,610 --> 00:11:36,980
with a very varying network topology so

271
00:11:36,980 --> 00:11:38,960
no even just a flat one I didn't want to

272
00:11:38,960 --> 00:11:41,990
just pin 20 VMs on the same subnet I

273
00:11:41,990 --> 00:11:44,420
want to spin three on one subnet and

274
00:11:44,420 --> 00:11:46,130
then other two three subnets have

275
00:11:46,130 --> 00:11:48,080
different layers of communication to see

276
00:11:48,080 --> 00:11:50,360
how fast it would spread around and

277
00:11:50,360 --> 00:11:52,640
finally of course you want to auditors

278
00:11:52,640 --> 00:11:54,800
you want to save some data so in this

279
00:11:54,800 --> 00:11:58,279
case what I did I just saved the peak up

280
00:11:58,279 --> 00:12:01,550
of the file to see how no easy it was on

281
00:12:01,550 --> 00:12:04,610
the on the network the goal is to create

282
00:12:04,610 --> 00:12:09,320
two different agents as I call them one

283
00:12:09,320 --> 00:12:11,029
of them is the attacking one and the

284
00:12:11,029 --> 00:12:12,950
other one is the defending one so the

285
00:12:12,950 --> 00:12:15,260
attacking one I call the chimera and the

286
00:12:15,260 --> 00:12:16,820
defending one I call it Bellerophon

287
00:12:16,820 --> 00:12:20,000
because we all do computing science and

288
00:12:20,000 --> 00:12:22,550
we all like to give big and bad names to

289
00:12:22,550 --> 00:12:25,430
our programs because why not we create

290
00:12:25,430 --> 00:12:28,610
them we can name them and so what are

291
00:12:28,610 --> 00:12:30,680
you going to see in this stop and I'm

292
00:12:30,680 --> 00:12:32,780
gonna talk first about this is how I

293
00:12:32,780 --> 00:12:34,160
created chimera which is this

294
00:12:34,160 --> 00:12:35,750
polymorphic vector that completely

295
00:12:35,750 --> 00:12:38,510
changes and I recreated Bellerophon

296
00:12:38,510 --> 00:12:41,510
which is a behavioral analysis system

297
00:12:41,510 --> 00:12:43,760
that looks at the behavior of all the

298
00:12:43,760 --> 00:12:45,110
machines and try to understand which

299
00:12:45,110 --> 00:12:46,790
ones are infected and where the

300
00:12:46,790 --> 00:12:51,470
infection is spreading and cthulhu which

301
00:12:51,470 --> 00:12:52,760
is the tool that I'm going to release

302
00:12:52,760 --> 00:12:54,440
after the talk today which is also the

303
00:12:54,440 --> 00:12:56,180
one that I'm going to do a live demo of

304
00:12:56,180 --> 00:12:59,630
is a primer for camera which means it's

305
00:12:59,630 --> 00:13:01,880
not a point to shoot cannot all you

306
00:13:01,880 --> 00:13:03,740
cannot just get clone it and point it to

307
00:13:03,740 --> 00:13:05,150
your friends machine and thing that is

308
00:13:05,150 --> 00:13:06,709
going to do something it's written

309
00:13:06,709 --> 00:13:09,680
entirely in Python it's very modular and

310
00:13:09,680 --> 00:13:12,440
you can recreate sky Amira very easily

311
00:13:12,440 --> 00:13:15,470
with 40 minutes of work on cthulhu or

312
00:13:15,470 --> 00:13:17,300
you can create something worse or

313
00:13:17,300 --> 00:13:19,700
something better this guys were limited

314
00:13:19,700 --> 00:13:21,209
so what I wanted to

315
00:13:21,209 --> 00:13:22,910
release to the public for the public to

316
00:13:22,910 --> 00:13:27,829
go ahead and do is create your own

317
00:13:27,829 --> 00:13:32,999
environment creates your own attack

318
00:13:32,999 --> 00:13:35,579
vector and test it and every single time

319
00:13:35,579 --> 00:13:37,199
test it try and create a way of

320
00:13:37,199 --> 00:13:39,809
detecting it as everything with

321
00:13:39,809 --> 00:13:42,059
computing signs on cybersecurity in

322
00:13:42,059 --> 00:13:44,819
particular be ethical don't do anything

323
00:13:44,819 --> 00:13:47,519
but don't get arrested and don't call me

324
00:13:47,519 --> 00:13:49,709
for that the only reason why I'm

325
00:13:49,709 --> 00:13:51,540
releasing the stone is for research to

326
00:13:51,540 --> 00:13:55,619
go ahead and work and finally the flag

327
00:13:55,619 --> 00:13:58,920
up research when I was at university was

328
00:13:58,920 --> 00:14:01,980
just an md5 senior - the signature that

329
00:14:01,980 --> 00:14:04,889
was hidden in these machines when the

330
00:14:04,889 --> 00:14:07,139
virus was breaking into it to prove that

331
00:14:07,139 --> 00:14:09,029
actually broke into it I was basically

332
00:14:09,029 --> 00:14:11,869
just DCP in buck this string and

333
00:14:11,869 --> 00:14:14,459
comparing it with the one day Hut stores

334
00:14:14,459 --> 00:14:16,110
to confirm that I actually compromised

335
00:14:16,110 --> 00:14:23,220
that so as we talked before and I want

336
00:14:23,220 --> 00:14:24,360
to do a bit of research to make sure

337
00:14:24,360 --> 00:14:26,759
that the environments I was testing on

338
00:14:26,759 --> 00:14:30,889
was as similar as possible - to the live

339
00:14:30,889 --> 00:14:33,689
version of these things so I went

340
00:14:33,689 --> 00:14:35,850
through shot on anyone here knows what

341
00:14:35,850 --> 00:14:39,420
showed on s yeah so I went to a show

342
00:14:39,420 --> 00:14:41,699
done I did a bit of research to try and

343
00:14:41,699 --> 00:14:45,029
see how many what were the most used

344
00:14:45,029 --> 00:14:47,699
environments in proximity of safety

345
00:14:47,699 --> 00:14:50,100
critical systems on DCI controllers is

346
00:14:50,100 --> 00:14:53,100
not probably the best collar and but

347
00:14:53,100 --> 00:14:55,980
from up we have like four or five Linux

348
00:14:55,980 --> 00:14:58,350
systems then you have Windows 7 Windows

349
00:14:58,350 --> 00:15:01,019
8 Windows 6.1 you have a bunch of

350
00:15:01,019 --> 00:15:04,920
Windows servers and then FreeBSD and OSX

351
00:15:04,920 --> 00:15:07,709
does not appear there so apparently no

352
00:15:07,709 --> 00:15:10,559
one uses Apple computers in proximity of

353
00:15:10,559 --> 00:15:11,939
these things or at least not publicly

354
00:15:11,939 --> 00:15:15,869
not that sure Don knows off and then I

355
00:15:15,869 --> 00:15:18,059
did the same thing about the services so

356
00:15:18,059 --> 00:15:20,519
I want to deploy the same services as

357
00:15:20,519 --> 00:15:22,319
close as possible to the ones that were

358
00:15:22,319 --> 00:15:23,309
at the plane in these machines

359
00:15:23,309 --> 00:15:25,949
so again OpenSSH of course you need to

360
00:15:25,949 --> 00:15:28,860
get into it and Apache for somewhat

361
00:15:28,860 --> 00:15:33,029
reason and then we had a bit down in

362
00:15:33,029 --> 00:15:34,590
less we still have Samba our

363
00:15:34,590 --> 00:15:37,830
favorite friend and then we have postfix

364
00:15:37,830 --> 00:15:44,040
smtp and other things so this is the

365
00:15:44,040 --> 00:15:46,230
very very first initial iteration we're

366
00:15:46,230 --> 00:15:49,340
talking a year and a half ago of the

367
00:15:49,340 --> 00:15:52,110
environment that was testing this on so

368
00:15:52,110 --> 00:15:53,760
you see I had my host which was a

369
00:15:53,760 --> 00:15:56,010
colored Linux box found inside of it I

370
00:15:56,010 --> 00:15:57,510
had VirtualBox that was properly

371
00:15:57,510 --> 00:15:59,279
segregated in some books so no

372
00:15:59,279 --> 00:16:02,760
connection was going out I had four

373
00:16:02,760 --> 00:16:04,380
machines that weren't protected for

374
00:16:04,380 --> 00:16:06,330
machines that were not protected and I

375
00:16:06,330 --> 00:16:08,550
would just release the virus in the in

376
00:16:08,550 --> 00:16:10,680
this environment and see if the

377
00:16:10,680 --> 00:16:13,080
protective machines would detect the

378
00:16:13,080 --> 00:16:16,529
virus before about things will happen

379
00:16:16,529 --> 00:16:19,170
and how fast I and how far I could go in

380
00:16:19,170 --> 00:16:24,120
fact in the unprotected machines so in

381
00:16:24,120 --> 00:16:26,250
the very first edition of chimera was

382
00:16:26,250 --> 00:16:29,040
fairly straightforward so in the first

383
00:16:29,040 --> 00:16:32,100
bits that you find is just your common

384
00:16:32,100 --> 00:16:35,520
network scanner think a ping suite or an

385
00:16:35,520 --> 00:16:38,279
ARP - a kind of command this is where

386
00:16:38,279 --> 00:16:40,339
you land on a network and you try to

387
00:16:40,339 --> 00:16:42,930
understand which computers you can

388
00:16:42,930 --> 00:16:46,290
connect in the second part is the target

389
00:16:46,290 --> 00:16:48,990
scanner or actually no honesty a port

390
00:16:48,990 --> 00:16:51,740
scanner so what I would do is for each

391
00:16:51,740 --> 00:16:54,450
target I found I would just try and see

392
00:16:54,450 --> 00:16:56,580
which ports were open then it would

393
00:16:56,580 --> 00:16:58,440
generate a report which is just a JSON

394
00:16:58,440 --> 00:17:00,630
file with all this data I would encrypt

395
00:17:00,630 --> 00:17:02,430
it and send it over to my control

396
00:17:02,430 --> 00:17:04,230
command and control server which we'd

397
00:17:04,230 --> 00:17:07,800
then compile and send down a new version

398
00:17:07,800 --> 00:17:10,410
of itself that was again mutated and

399
00:17:10,410 --> 00:17:12,630
then I would just execute it on the

400
00:17:12,630 --> 00:17:15,569
target machines and this was a very

401
00:17:15,569 --> 00:17:18,510
straightforward as you can see kind of

402
00:17:18,510 --> 00:17:23,040
linear architecture of this of this

403
00:17:23,040 --> 00:17:24,900
first edition it was just a proof of

404
00:17:24,900 --> 00:17:28,770
concept and it did work so just to give

405
00:17:28,770 --> 00:17:30,780
you a bit of context of what these three

406
00:17:30,780 --> 00:17:34,650
terminals are doing so up here in this

407
00:17:34,650 --> 00:17:37,500
part of the screen you can see the

408
00:17:37,500 --> 00:17:39,600
reports being generated so as I said is

409
00:17:39,600 --> 00:17:42,480
a JSON file with IP addresses and a list

410
00:17:42,480 --> 00:17:45,810
of ports are open the second bit this is

411
00:17:45,810 --> 00:17:48,300
the actual a chimera command control

412
00:17:48,300 --> 00:17:50,220
server which receives the message the

413
00:17:50,220 --> 00:17:52,560
code sets and then goes target my target

414
00:17:52,560 --> 00:17:55,650
try to exploit it and at this point I

415
00:17:55,650 --> 00:17:59,010
was heavily relying on Metasploit so I

416
00:17:59,010 --> 00:18:00,840
think that everyone that has used Metis

417
00:18:00,840 --> 00:18:02,640
place know exactly what is going on here

418
00:18:02,640 --> 00:18:05,660
and so I would automates the process of

419
00:18:05,660 --> 00:18:08,190
using Metasploit to actually hack into

420
00:18:08,190 --> 00:18:12,120
the the target and it worked so time for

421
00:18:12,120 --> 00:18:14,400
making it much much worse and much more

422
00:18:14,400 --> 00:18:19,830
complicated so it's probably easier to

423
00:18:19,830 --> 00:18:22,590
understand how this works in layers so

424
00:18:22,590 --> 00:18:25,380
if think about very good automation

425
00:18:25,380 --> 00:18:28,620
tools for example Metasploit for Empire

426
00:18:28,620 --> 00:18:30,570
and all these things do a lot of things

427
00:18:30,570 --> 00:18:32,610
for you so when you just try to exploit

428
00:18:32,610 --> 00:18:35,040
the system they will compile they will

429
00:18:35,040 --> 00:18:36,960
they will choose the exploit make the

430
00:18:36,960 --> 00:18:38,570
changes in the variables

431
00:18:38,570 --> 00:18:40,890
compile it make sure that the payload is

432
00:18:40,890 --> 00:18:42,929
compatible send it over start to

433
00:18:42,929 --> 00:18:45,120
listener get the listener back and they

434
00:18:45,120 --> 00:18:47,550
just make the whole magic work if you

435
00:18:47,550 --> 00:18:49,950
want to write a highly polymorphic and

436
00:18:49,950 --> 00:18:51,870
highly adaptive there's virus you need

437
00:18:51,870 --> 00:18:54,420
to dissect every single section ups

438
00:18:54,420 --> 00:18:56,010
because you need to have full control on

439
00:18:56,010 --> 00:18:59,030
every single step that happens within

440
00:18:59,030 --> 00:19:01,260
the virus creation and the attack

441
00:19:01,260 --> 00:19:03,210
creation method to be able to change it

442
00:19:03,210 --> 00:19:06,120
so at the bottom layer this is the

443
00:19:06,120 --> 00:19:08,250
target Network these are the compromised

444
00:19:08,250 --> 00:19:11,670
machines so the second layer you have

445
00:19:11,670 --> 00:19:14,340
the what happens in the local version of

446
00:19:14,340 --> 00:19:17,280
your virus which would be kind of sorts

447
00:19:17,280 --> 00:19:19,560
of the payloads although in here the

448
00:19:19,560 --> 00:19:21,750
payload is just a mattr protection which

449
00:19:21,750 --> 00:19:23,730
is in charge of executing the commands

450
00:19:23,730 --> 00:19:26,310
and making sure that everything runs on

451
00:19:26,310 --> 00:19:28,170
the buyer stage then you have the

452
00:19:28,170 --> 00:19:29,610
command and control server which is

453
00:19:29,610 --> 00:19:34,080
where all the logic happens and so it

454
00:19:34,080 --> 00:19:37,950
would receive the the communication and

455
00:19:37,950 --> 00:19:40,380
would decide what to do and then lastly

456
00:19:40,380 --> 00:19:42,210
you have Metasploit as we said in this

457
00:19:42,210 --> 00:19:43,920
fairly a very early on version I was

458
00:19:43,920 --> 00:19:45,630
heavily relying Metasploit because I

459
00:19:45,630 --> 00:19:48,050
knew it and you had to work with it and

460
00:19:48,050 --> 00:19:51,750
finally you have veal which is a tool

461
00:19:51,750 --> 00:19:55,350
that allows you to and do a bit of

462
00:19:55,350 --> 00:19:58,050
obfuscation and finally we have

463
00:19:58,050 --> 00:20:02,370
server whose only purpose is to deliver

464
00:20:02,370 --> 00:20:06,870
all these different tools it's fairly

465
00:20:06,870 --> 00:20:08,720
straightforward and similar to the first

466
00:20:08,720 --> 00:20:11,490
version what in what it does but it's a

467
00:20:11,490 --> 00:20:13,470
bit more distributed which meant that at

468
00:20:13,470 --> 00:20:16,290
this point I wasn't just providing a one

469
00:20:16,290 --> 00:20:18,420
liner in Metasploit and just saying go

470
00:20:18,420 --> 00:20:20,640
and hack I would just like I would

471
00:20:20,640 --> 00:20:22,470
generate the payload myself I would

472
00:20:22,470 --> 00:20:24,330
change it myself or generate the exploit

473
00:20:24,330 --> 00:20:26,130
myself and change it myself I would

474
00:20:26,130 --> 00:20:28,200
create the listener I would create a

475
00:20:28,200 --> 00:20:30,180
unique key for the for the transmission

476
00:20:30,180 --> 00:20:31,980
of the codes and the encryption and I

477
00:20:31,980 --> 00:20:35,480
would just like do everything manually

478
00:20:35,540 --> 00:20:36,660
cthulhu

479
00:20:36,660 --> 00:20:37,980
which is the tool that I'm going to be

480
00:20:37,980 --> 00:20:40,680
releasing it is a bit more open and very

481
00:20:40,680 --> 00:20:42,630
much more modular because the whole idea

482
00:20:42,630 --> 00:20:46,070
behind cthulhu is that you are able to

483
00:20:46,070 --> 00:20:48,300
completely change a module so for

484
00:20:48,300 --> 00:20:49,830
example the communication module in

485
00:20:49,830 --> 00:20:51,690
Cthulhu the Cthulhu comes with it's just

486
00:20:51,690 --> 00:20:54,630
simple TCP sockets in Python which

487
00:20:54,630 --> 00:20:57,630
anyone that understands how intrusion

488
00:20:57,630 --> 00:20:59,250
detection systems work is not going to

489
00:20:59,250 --> 00:21:01,530
fool anyone but there are very valid

490
00:21:01,530 --> 00:21:03,360
tools out there that you can easily

491
00:21:03,360 --> 00:21:05,790
implement so DNS cut is one of them so

492
00:21:05,790 --> 00:21:07,710
if you want to implement DNS continets

493
00:21:07,710 --> 00:21:10,350
you just need to go create a parser for

494
00:21:10,350 --> 00:21:12,990
DNS cut implement importer and is going

495
00:21:12,990 --> 00:21:15,030
to work out the box same thing with all

496
00:21:15,030 --> 00:21:19,170
the different stages so it is more of a

497
00:21:19,170 --> 00:21:21,930
teaching tool because you can make it

498
00:21:21,930 --> 00:21:24,390
work once and then changes one single

499
00:21:24,390 --> 00:21:26,940
variable see how it works see how much

500
00:21:26,940 --> 00:21:29,190
is detected or not and then you can move

501
00:21:29,190 --> 00:21:33,560
up and see how how it works and again

502
00:21:33,560 --> 00:21:36,060
and I promise this is one of the last of

503
00:21:36,060 --> 00:21:39,390
these big diagrams I have none more left

504
00:21:39,390 --> 00:21:43,200
and so at the bottom of it we have our

505
00:21:43,200 --> 00:21:44,970
first patient zero so the first

506
00:21:44,970 --> 00:21:46,470
infection where it happens immediately

507
00:21:46,470 --> 00:21:48,780
doesn't have a proxy we're gonna talk

508
00:21:48,780 --> 00:21:51,810
about the proxy in a bit so it gets

509
00:21:51,810 --> 00:21:53,040
infected from the Cthulhu

510
00:21:53,040 --> 00:21:55,230
command-and-control server up here it

511
00:21:55,230 --> 00:21:57,930
sends an acknowledgment packet saying I

512
00:21:57,930 --> 00:22:00,330
have been hacked or passes the flag in

513
00:22:00,330 --> 00:22:03,930
this case and and then at this point the

514
00:22:03,930 --> 00:22:06,330
AI goes on the server which is running a

515
00:22:06,330 --> 00:22:08,630
localhost and downloads the

516
00:22:08,630 --> 00:22:11,080
quote-unquote virus it's just a payload

517
00:22:11,080 --> 00:22:13,269
at the end of the day one of the biggest

518
00:22:13,269 --> 00:22:14,980
thing that the virus does it installs a

519
00:22:14,980 --> 00:22:17,860
proxy again the proxy that is included

520
00:22:17,860 --> 00:22:20,230
in Cthulhu is you're going to see it is

521
00:22:20,230 --> 00:22:21,940
a bit limited but that's by design

522
00:22:21,940 --> 00:22:26,519
so by design this proxy is only able to

523
00:22:26,519 --> 00:22:31,090
send packets are below 1,024 bytes but

524
00:22:31,090 --> 00:22:32,470
you can easily change that if you know

525
00:22:32,470 --> 00:22:34,059
anything about python should be

526
00:22:34,059 --> 00:22:36,460
straightforward to do that and the

527
00:22:36,460 --> 00:22:38,289
reason why I wanted a proxy is because

528
00:22:38,289 --> 00:22:41,919
one core difference in my polymorphic

529
00:22:41,919 --> 00:22:44,230
virus between all of the others is that

530
00:22:44,230 --> 00:22:46,630
whenever you hack into a machine on the

531
00:22:46,630 --> 00:22:48,399
infected machine the further attacks

532
00:22:48,399 --> 00:22:49,360
don't come from the command-and-control

533
00:22:49,360 --> 00:22:51,940
server they come from machine itself so

534
00:22:51,940 --> 00:22:54,220
every single compromised note is now a

535
00:22:54,220 --> 00:23:00,279
proxy in in your environment which is

536
00:23:00,279 --> 00:23:03,159
why it's very efficient and can easily

537
00:23:03,159 --> 00:23:06,039
move within different layers of a

538
00:23:06,039 --> 00:23:08,019
network because once it infects a layer

539
00:23:08,019 --> 00:23:09,549
that is connected to two more networks

540
00:23:09,549 --> 00:23:11,799
it can easily just proxy all the

541
00:23:11,799 --> 00:23:13,779
connections out and it's also easier

542
00:23:13,779 --> 00:23:15,309
because you have one point of entrance

543
00:23:15,309 --> 00:23:17,889
so the firewall you need to breach the

544
00:23:17,889 --> 00:23:19,450
firewall only once and all the

545
00:23:19,450 --> 00:23:22,000
subsequent communication doesn't go you

546
00:23:22,000 --> 00:23:23,919
don't all of a sudden see all of your

547
00:23:23,919 --> 00:23:25,750
500 nodes of your on your network

548
00:23:25,750 --> 00:23:27,370
communicating with this one host outside

549
00:23:27,370 --> 00:23:30,690
you only see one communicating out and

550
00:23:30,690 --> 00:23:34,360
at that point what it does it just calls

551
00:23:34,360 --> 00:23:36,789
to the subnet and as the usual scanning

552
00:23:36,789 --> 00:23:40,090
so target scanning or scanning generates

553
00:23:40,090 --> 00:23:43,059
a report encrypts it with our uniquely

554
00:23:43,059 --> 00:23:45,220
generated key the key every single time

555
00:23:45,220 --> 00:23:48,220
we start Cthulhu just completely changes

556
00:23:48,220 --> 00:23:51,279
we generates a new one it sends this

557
00:23:51,279 --> 00:23:55,360
reports back the artificial are quote

558
00:23:55,360 --> 00:23:57,159
unquote is not really active intelligent

559
00:23:57,159 --> 00:24:00,000
the algorithm just reads this this

560
00:24:00,000 --> 00:24:03,940
report back and chooses an exploit again

561
00:24:03,940 --> 00:24:06,880
you can leverage MSF console you can

562
00:24:06,880 --> 00:24:09,070
leverage Empire you can leverage your

563
00:24:09,070 --> 00:24:13,000
own custom exploits if you put them in a

564
00:24:13,000 --> 00:24:15,669
specific directory which is why you have

565
00:24:15,669 --> 00:24:18,610
a JSON file down here which contains the

566
00:24:18,610 --> 00:24:21,730
list of all of the exploits you want to

567
00:24:21,730 --> 00:24:23,840
allow your virus to use

568
00:24:23,840 --> 00:24:26,779
is very important because you have

569
00:24:26,779 --> 00:24:29,450
complete control of what your virus and

570
00:24:29,450 --> 00:24:32,150
your cthulhu can and cannot do so you

571
00:24:32,150 --> 00:24:34,880
can tell it exactly to only attack SMB

572
00:24:34,880 --> 00:24:37,190
using certain exploits or you can just

573
00:24:37,190 --> 00:24:39,860
put stars everywhere and just let it go

574
00:24:39,860 --> 00:24:43,100
just hey me the next thing it does it

575
00:24:43,100 --> 00:24:46,880
choose is of course a payloads again it

576
00:24:46,880 --> 00:24:50,090
could be MS venom for ease of use or you

577
00:24:50,090 --> 00:24:52,159
can just write your own and if your

578
00:24:52,159 --> 00:24:54,830
elite sucks or hacker for both of them

579
00:24:54,830 --> 00:24:57,049
what it does it runs them through veil

580
00:24:57,049 --> 00:24:59,899
or again MS venom or whatever you want

581
00:24:59,899 --> 00:25:04,399
and it does a bit of code polymorphism

582
00:25:04,399 --> 00:25:07,370
to hide everything and then it cross

583
00:25:07,370 --> 00:25:11,899
compiles the static parts of the M or

584
00:25:11,899 --> 00:25:14,630
the virus so this is the code that I

585
00:25:14,630 --> 00:25:17,510
responsible for generating that virus

586
00:25:17,510 --> 00:25:19,669
that we downloaded initially on our

587
00:25:19,669 --> 00:25:22,120
targets that contains the proxy and the

588
00:25:22,120 --> 00:25:24,529
communication methods and all the port

589
00:25:24,529 --> 00:25:28,159
scanning on target scanning and it can

590
00:25:28,159 --> 00:25:29,870
be because it's written in Python it can

591
00:25:29,870 --> 00:25:31,760
be compiled for virtually anything you

592
00:25:31,760 --> 00:25:35,720
really wanted and then you serve it via

593
00:25:35,720 --> 00:25:38,539
a simple HTTP server so every single

594
00:25:38,539 --> 00:25:39,799
time you want to download it just

595
00:25:39,799 --> 00:25:42,049
obligates from your victim and you have

596
00:25:42,049 --> 00:25:44,450
a fresh compiled completely changed

597
00:25:44,450 --> 00:25:47,870
version of this virus and of course what

598
00:25:47,870 --> 00:25:50,029
happens is then you use the export that

599
00:25:50,029 --> 00:25:53,330
you created to attack your patient

600
00:25:53,330 --> 00:25:56,000
number one once is attacked you repeat

601
00:25:56,000 --> 00:25:59,659
from the start so you just download the

602
00:25:59,659 --> 00:26:01,399
virus from your localhost and you keep

603
00:26:01,399 --> 00:26:05,630
going talking about behavioral analysis

604
00:26:05,630 --> 00:26:10,010
and then we will have the demo I promise

605
00:26:10,010 --> 00:26:12,950
so behavior analysis is different from

606
00:26:12,950 --> 00:26:15,289
signature based or heuristic based so

607
00:26:15,289 --> 00:26:19,010
you're not really looking into what is

608
00:26:19,010 --> 00:26:20,450
the file that you downloaded what are

609
00:26:20,450 --> 00:26:21,950
the strings containing the files that

610
00:26:21,950 --> 00:26:23,779
you downloaded what are the libraries

611
00:26:23,779 --> 00:26:26,059
that best files calls whenever it gets

612
00:26:26,059 --> 00:26:28,429
executed because all these traditional

613
00:26:28,429 --> 00:26:31,010
measures and signature based kind of

614
00:26:31,010 --> 00:26:35,480
like M methods work well but not well

615
00:26:35,480 --> 00:26:37,520
when every single time you

616
00:26:37,520 --> 00:26:39,050
you get attacked you have a completely

617
00:26:39,050 --> 00:26:41,480
different payload and exploits and is in

618
00:26:41,480 --> 00:26:43,610
a different language so the strings are

619
00:26:43,610 --> 00:26:45,170
going to be different the libraries

620
00:26:45,170 --> 00:26:46,130
called are going to be completely

621
00:26:46,130 --> 00:26:48,350
different even the logic is going to be

622
00:26:48,350 --> 00:26:50,300
different and in the way it achieves the

623
00:26:50,300 --> 00:26:52,970
goal and so what we're looking at is

624
00:26:52,970 --> 00:26:57,200
networking activity so the idea behind

625
00:26:57,200 --> 00:26:59,480
this is to deploy sentinels or as

626
00:26:59,480 --> 00:27:01,040
everyone else in the world calls them

627
00:27:01,040 --> 00:27:04,160
honey pots on your network to look at

628
00:27:04,160 --> 00:27:06,980
how the network works around these honey

629
00:27:06,980 --> 00:27:10,700
pots will not only do a pickup of the

630
00:27:10,700 --> 00:27:13,370
systems that they can connect to to make

631
00:27:13,370 --> 00:27:14,570
sure that there is no spike in

632
00:27:14,570 --> 00:27:17,630
connectivity but they also spawn runs

633
00:27:17,630 --> 00:27:21,140
and ports are known for noble ports to

634
00:27:21,140 --> 00:27:24,470
trigger to trick this virus to try and

635
00:27:24,470 --> 00:27:27,530
connect to them on hack them and when

636
00:27:27,530 --> 00:27:29,330
they receive a connection they read the

637
00:27:29,330 --> 00:27:32,600
package they see if it is within their

638
00:27:32,600 --> 00:27:34,820
own internal libraries of malicious

639
00:27:34,820 --> 00:27:37,610
packages and if so they vote that that

640
00:27:37,610 --> 00:27:39,890
very specific system is compromised and

641
00:27:39,890 --> 00:27:41,360
is trying to attack all other systems

642
00:27:41,360 --> 00:27:45,170
and the way this works and it works

643
00:27:45,170 --> 00:27:47,960
better is if all these sentinels are

644
00:27:47,960 --> 00:27:50,540
deployed in your network using a

645
00:27:50,540 --> 00:27:52,820
Fibonacci sequence when it comes to hops

646
00:27:52,820 --> 00:27:56,440
so when you measure the distance in a

647
00:27:56,440 --> 00:27:59,630
network the measurement in hops so how

648
00:27:59,630 --> 00:28:01,520
many legs do have to go through before I

649
00:28:01,520 --> 00:28:04,730
can actually connect you so from every

650
00:28:04,730 --> 00:28:10,100
single target you want one Sentinel to

651
00:28:10,100 --> 00:28:13,690
be a one hop distance to 3 5 7 etc etc

652
00:28:13,690 --> 00:28:16,730
and the votes that they cast to the

653
00:28:16,730 --> 00:28:18,620
central command and control server for

654
00:28:18,620 --> 00:28:21,110
the defensive mechanism will be weighted

655
00:28:21,110 --> 00:28:23,630
based on the distance to the hop they're

656
00:28:23,630 --> 00:28:26,330
voting to the target that they're voting

657
00:28:26,330 --> 00:28:29,630
against so the furthest away I am the

658
00:28:29,630 --> 00:28:31,580
more my vote is going to count because

659
00:28:31,580 --> 00:28:33,680
if I'm very far away and I can already

660
00:28:33,680 --> 00:28:36,140
detect some malicious activity it means

661
00:28:36,140 --> 00:28:38,090
that definitely something dodgy is going

662
00:28:38,090 --> 00:28:42,380
on in that node another demo so you can

663
00:28:42,380 --> 00:28:45,850
see how this fails miserably

664
00:28:45,850 --> 00:28:49,570
and so what I have here is on this

665
00:28:49,570 --> 00:28:50,530
virtual machine

666
00:28:50,530 --> 00:28:52,450
I have victim number two victim number

667
00:28:52,450 --> 00:28:56,200
one and this is Cthulhu which is the

668
00:28:56,200 --> 00:28:59,650
code I'm going to release and so what we

669
00:28:59,650 --> 00:29:05,320
want to do is start Cthulhu this files

670
00:29:05,320 --> 00:29:08,380
here so we're just gonna run it and what

671
00:29:08,380 --> 00:29:10,450
it does it just generates the whole

672
00:29:10,450 --> 00:29:12,570
server and start some connections and

673
00:29:12,570 --> 00:29:16,720
then we just run the first infected

674
00:29:16,720 --> 00:29:21,909
virus so what I've done here we're

675
00:29:21,909 --> 00:29:24,340
starting to learn yeah you can't really

676
00:29:24,340 --> 00:29:27,669
read spot and first of all let me see if

677
00:29:27,669 --> 00:29:31,000
I can make it a bit thicker it doesn't

678
00:29:31,000 --> 00:29:36,850
look like it um no you can't make it

679
00:29:36,850 --> 00:29:38,230
bigger I'm sorry I'll just read it out

680
00:29:38,230 --> 00:29:40,570
so the first step it goes through it

681
00:29:40,570 --> 00:29:43,150
initializes the server for the primers

682
00:29:43,150 --> 00:29:45,610
delivery and so in this case it just

683
00:29:45,610 --> 00:29:50,559
spins up a server and and waits and is

684
00:29:50,559 --> 00:29:57,100
able to basically deliver all of the all

685
00:29:57,100 --> 00:29:58,900
the primers that we have encoded

686
00:29:58,900 --> 00:30:01,900
uncreated second of all it just

687
00:30:01,900 --> 00:30:04,630
generates a random key for the tunnel

688
00:30:04,630 --> 00:30:07,210
this way every single communication that

689
00:30:07,210 --> 00:30:10,150
is sent back from any of the victims is

690
00:30:10,150 --> 00:30:12,270
going to be encrypted with a unique key

691
00:30:12,270 --> 00:30:15,340
then it writes the secret key to the

692
00:30:15,340 --> 00:30:18,159
header of the non compiled version that

693
00:30:18,159 --> 00:30:21,669
will be later on compiled and it starts

694
00:30:21,669 --> 00:30:23,110
the communication tunnel it just waits

695
00:30:23,110 --> 00:30:26,260
for a connection to arrives and what we

696
00:30:26,260 --> 00:30:31,440
did later after that was running this

697
00:30:32,730 --> 00:30:35,679
locally running a version of the virus

698
00:30:35,679 --> 00:30:38,140
so that what this is doing is creating

699
00:30:38,140 --> 00:30:40,270
that first initial report so I infected

700
00:30:40,270 --> 00:30:43,750
my machine and my machine just went on

701
00:30:43,750 --> 00:30:45,760
and looked in the internal network to

702
00:30:45,760 --> 00:30:46,929
try and see which other machine it could

703
00:30:46,929 --> 00:30:49,120
communicate and which ports were open

704
00:30:49,120 --> 00:30:52,570
created this list I encrypted it sends

705
00:30:52,570 --> 00:30:55,450
it over to my other program which then

706
00:30:55,450 --> 00:30:58,720
receive the communication from this

707
00:30:58,720 --> 00:30:59,990
internal

708
00:30:59,990 --> 00:31:02,870
decoded the communication and then you

709
00:31:02,870 --> 00:31:05,659
said I can see three targets fifty six

710
00:31:05,659 --> 00:31:07,730
point three point two one point four and

711
00:31:07,730 --> 00:31:10,070
for each of when what every one of them

712
00:31:10,070 --> 00:31:12,380
went through my JSON file and my JSON

713
00:31:12,380 --> 00:31:14,299
file right now only contains some by

714
00:31:14,299 --> 00:31:18,500
exploits and and basically is I started

715
00:31:18,500 --> 00:31:21,230
trying compiling different exploits for

716
00:31:21,230 --> 00:31:24,200
Samba different payloads creating all

717
00:31:24,200 --> 00:31:26,390
these machines and using multi-threading

718
00:31:26,390 --> 00:31:30,169
just attacking this systems and it

719
00:31:30,169 --> 00:31:32,450
didn't fail demo for once because here

720
00:31:32,450 --> 00:31:35,029
at the end we can see that targets one

721
00:31:35,029 --> 00:31:37,309
point four and point three have been

722
00:31:37,309 --> 00:31:40,250
both compromised so we managed to

723
00:31:40,250 --> 00:31:42,740
successfully hack into these two targets

724
00:31:42,740 --> 00:31:46,880
and get the communications back I know

725
00:31:46,880 --> 00:31:48,980
it's just gonna stay there unless an of

726
00:31:48,980 --> 00:31:51,710
course these two targets have downloaded

727
00:31:51,710 --> 00:31:53,630
their own version of the virus but there

728
00:31:53,630 --> 00:31:56,000
are no more systems to infect because

729
00:31:56,000 --> 00:31:59,090
they only have two machines so it's just

730
00:31:59,090 --> 00:32:01,370
gonna wait there and see I couldn't

731
00:32:01,370 --> 00:32:03,049
because I only have my opinion laptop

732
00:32:03,049 --> 00:32:05,419
spend not more than two virtual machines

733
00:32:05,419 --> 00:32:09,500
but if you clone your copy of Cthulhu do

734
00:32:09,500 --> 00:32:11,059
a bit of configuration you can spin up

735
00:32:11,059 --> 00:32:12,740
as many machines as you want you can try

736
00:32:12,740 --> 00:32:14,360
this yourself you can see how fast it

737
00:32:14,360 --> 00:32:18,679
goes and so the concept like the key

738
00:32:18,679 --> 00:32:20,929
concept of this and the reason why I

739
00:32:20,929 --> 00:32:23,210
infected my own machine as the victim

740
00:32:23,210 --> 00:32:26,659
zero was because by infecting my machine

741
00:32:26,659 --> 00:32:29,299
our victim as victim zero I created a

742
00:32:29,299 --> 00:32:32,600
proxy on my local host and so all of

743
00:32:32,600 --> 00:32:36,110
these two attacks to point two point

744
00:32:36,110 --> 00:32:38,000
four and point three have been done

745
00:32:38,000 --> 00:32:40,340
using a proxy coming directly from my

746
00:32:40,340 --> 00:32:41,570
attacker machine which doesn't really

747
00:32:41,570 --> 00:32:44,330
make sense but if I had a third virtual

748
00:32:44,330 --> 00:32:45,350
machine I could have started the attack

749
00:32:45,350 --> 00:32:47,360
from there and then all of the attacks

750
00:32:47,360 --> 00:32:49,039
would have been tunneled through that

751
00:32:49,039 --> 00:32:54,200
third machine and I do not have a live

752
00:32:54,200 --> 00:32:58,760
running copy of the antivirus but what I

753
00:32:58,760 --> 00:33:02,870
do have is a video I made for my

754
00:33:02,870 --> 00:33:05,840
dissertation in which I was running the

755
00:33:05,840 --> 00:33:08,630
first edition of chimera and in which I

756
00:33:08,630 --> 00:33:11,760
also had the antivirus work

757
00:33:11,760 --> 00:33:15,740
so what you see in the screen is this

758
00:33:15,740 --> 00:33:18,270
lower here is the command and control

759
00:33:18,270 --> 00:33:20,850
server for the defensive team up here we

760
00:33:20,850 --> 00:33:21,600
have canina

761
00:33:21,600 --> 00:33:23,970
so the attacker this is victim number

762
00:33:23,970 --> 00:33:26,430
one this victim number two this is

763
00:33:26,430 --> 00:33:28,770
Sentinel number one and Sentinel number

764
00:33:28,770 --> 00:33:30,140
two

765
00:33:30,140 --> 00:33:36,390
and what happens very fast is that you

766
00:33:36,390 --> 00:33:38,160
can immediately see how fast the

767
00:33:38,160 --> 00:33:39,960
detection is when we're talking about

768
00:33:39,960 --> 00:33:43,800
behavioral analysis compared to the

769
00:33:43,800 --> 00:33:46,500
normal string based and signature based

770
00:33:46,500 --> 00:33:49,560
analysis so these two machines the two

771
00:33:49,560 --> 00:33:51,540
victims up there we're running a fully

772
00:33:51,540 --> 00:33:53,880
patched operating system with their own

773
00:33:53,880 --> 00:33:57,000
default antivirus running and their

774
00:33:57,000 --> 00:33:59,970
firewall on default settings and none of

775
00:33:59,970 --> 00:34:02,340
these tools detected all these attacks

776
00:34:02,340 --> 00:34:04,800
that were going through while the other

777
00:34:04,800 --> 00:34:07,470
antivirus which is Bellerophon

778
00:34:07,470 --> 00:34:11,850
immediately detected an anomaly weird

779
00:34:11,850 --> 00:34:14,040
different connection in the network and

780
00:34:14,040 --> 00:34:17,610
immediately contacted the central

781
00:34:17,610 --> 00:34:20,580
command and control server to block and

782
00:34:20,580 --> 00:34:26,340
firewall off these two machines why do I

783
00:34:26,340 --> 00:34:27,210
do this

784
00:34:27,210 --> 00:34:29,880
well this research you need to bear in

785
00:34:29,880 --> 00:34:33,860
mind wasn't targeted to normal

786
00:34:33,860 --> 00:34:36,150
enterprise networks or anything like

787
00:34:36,150 --> 00:34:38,219
that it was targeted specifically to

788
00:34:38,219 --> 00:34:40,710
systems that were in proximity of safety

789
00:34:40,710 --> 00:34:42,840
critical systems and these systems don't

790
00:34:42,840 --> 00:34:46,050
have much run CPU so they can barely run

791
00:34:46,050 --> 00:34:48,060
what they need to run let alone an

792
00:34:48,060 --> 00:34:51,270
anti-virus and they heavily depend on a

793
00:34:51,270 --> 00:34:53,280
lot of dependencies and all of systems

794
00:34:53,280 --> 00:34:57,060
on there on their own network so you

795
00:34:57,060 --> 00:34:59,040
can't just bring one of the nodes

796
00:34:59,040 --> 00:35:00,540
offline because you know it's infected

797
00:35:00,540 --> 00:35:02,760
because that will actually probably make

798
00:35:02,760 --> 00:35:04,890
your whole you know nuclear power plant

799
00:35:04,890 --> 00:35:07,530
four over and you don't want that and so

800
00:35:07,530 --> 00:35:11,160
this first initial version instead of

801
00:35:11,160 --> 00:35:13,560
taking any proactive action on the

802
00:35:13,560 --> 00:35:16,440
network was just notifying the sysadmin

803
00:35:16,440 --> 00:35:18,810
which then as a human could go and say

804
00:35:18,810 --> 00:35:21,240
okay there's no an indispensable node I

805
00:35:21,240 --> 00:35:23,430
will just shut it down or they could go

806
00:35:23,430 --> 00:35:26,010
okay no I can't actually

807
00:35:26,010 --> 00:35:27,810
having it infected with a virus is

808
00:35:27,810 --> 00:35:30,960
actually okay and way better than having

809
00:35:30,960 --> 00:35:32,910
my system go offline and not being able

810
00:35:32,910 --> 00:35:34,530
to control temperatures and that kind of

811
00:35:34,530 --> 00:35:37,680
stuff and by the principle of using only

812
00:35:37,680 --> 00:35:40,950
pots to look at your network could be

813
00:35:40,950 --> 00:35:43,980
automated and you could have and any

814
00:35:43,980 --> 00:35:45,690
kind of behavior triggered for whenever

815
00:35:45,690 --> 00:35:47,280
you detect that something is actually

816
00:35:47,280 --> 00:35:49,170
going wrong so you could quarantine a

817
00:35:49,170 --> 00:35:52,740
certain system you could and power off

818
00:35:52,740 --> 00:35:54,360
the system and revert it back to any

819
00:35:54,360 --> 00:35:57,300
known good state you could do an any

820
00:35:57,300 --> 00:35:58,800
number of action that we would like to

821
00:35:58,800 --> 00:36:01,650
coat the whole takeaway here is that

822
00:36:01,650 --> 00:36:03,180
looking at behavior when you have a

823
00:36:03,180 --> 00:36:05,190
threat that is constantly changing on

824
00:36:05,190 --> 00:36:07,770
your own network and is much easier than

825
00:36:07,770 --> 00:36:09,690
try and understand the trend in strings

826
00:36:09,690 --> 00:36:12,510
and behavior that a single or file has

827
00:36:12,510 --> 00:36:15,120
because we as attacker can easily easily

828
00:36:15,120 --> 00:36:26,160
change them very very fast what I did in

829
00:36:26,160 --> 00:36:30,240
the last iteration of Chimaera and I

830
00:36:30,240 --> 00:36:32,520
think is the natural progression of this

831
00:36:32,520 --> 00:36:36,360
kind of attacking pattern is by using AI

832
00:36:36,360 --> 00:36:38,400
well we've been to the machine learning

833
00:36:38,400 --> 00:36:41,460
on a I talked this morning and probably

834
00:36:41,460 --> 00:36:43,020
I'm not using the word AI in the correct

835
00:36:43,020 --> 00:36:47,910
term there but what I have there is if

836
00:36:47,910 --> 00:36:49,830
anyone has done any machine learning

837
00:36:49,830 --> 00:36:52,050
course or class is an example of Q

838
00:36:52,050 --> 00:36:55,980
learning and so Q learning is normally

839
00:36:55,980 --> 00:36:58,410
used to teach a is the best way of

840
00:36:58,410 --> 00:37:01,200
getting out of a maze so you have a

841
00:37:01,200 --> 00:37:03,600
certain set amount of possibilities for

842
00:37:03,600 --> 00:37:06,000
every step that you take and you have a

843
00:37:06,000 --> 00:37:07,860
starting position and an end position if

844
00:37:07,860 --> 00:37:10,770
your starting position is I am out of a

845
00:37:10,770 --> 00:37:12,510
system and your end position is I have

846
00:37:12,510 --> 00:37:15,450
compromised a system every single layer

847
00:37:15,450 --> 00:37:18,570
that you have there could be the choice

848
00:37:18,570 --> 00:37:21,270
of language the choice of exploit the

849
00:37:21,270 --> 00:37:22,830
choice of payloads then you can have

850
00:37:22,830 --> 00:37:26,090
another one which is the choice of

851
00:37:26,090 --> 00:37:28,470
evasion algorithm so it could be your

852
00:37:28,470 --> 00:37:30,330
Shikata can die it could be you're just

853
00:37:30,330 --> 00:37:32,520
not slides it could be different things

854
00:37:32,520 --> 00:37:34,500
and then you could have how many times

855
00:37:34,500 --> 00:37:37,860
you've run this different things so if

856
00:37:37,860 --> 00:37:38,940
you create

857
00:37:38,940 --> 00:37:42,300
a q-learning cube for each of these

858
00:37:42,300 --> 00:37:45,030
decisions and you measure the success of

859
00:37:45,030 --> 00:37:48,120
each and every campaign that you run you

860
00:37:48,120 --> 00:37:50,580
will end up at the end of of the day

861
00:37:50,580 --> 00:37:54,080
with a fairly accurate map of what is

862
00:37:54,080 --> 00:37:56,040
statistically the best way of

863
00:37:56,040 --> 00:37:58,980
compromising a certain subnet and this

864
00:37:58,980 --> 00:38:00,720
is based on the assumption that normally

865
00:38:00,720 --> 00:38:02,520
when you think about big companies when

866
00:38:02,520 --> 00:38:05,580
you think about every big system they

867
00:38:05,580 --> 00:38:08,820
tend to put similar systems in in the

868
00:38:08,820 --> 00:38:11,190
same subnet so whenever you land on the

869
00:38:11,190 --> 00:38:13,380
same subnet they're usually like is the

870
00:38:13,380 --> 00:38:15,780
subnets ties for all the developers so

871
00:38:15,780 --> 00:38:17,730
they all have this Windows 7 machines

872
00:38:17,730 --> 00:38:19,320
they all have this programs installed

873
00:38:19,320 --> 00:38:21,210
then you go on the prod network they're

874
00:38:21,210 --> 00:38:24,000
mainly Linux machines with mainly this

875
00:38:24,000 --> 00:38:26,100
configuration you go on the HR network

876
00:38:26,100 --> 00:38:28,680
they have different configurations so if

877
00:38:28,680 --> 00:38:32,190
you create a Q learning map for each and

878
00:38:32,190 --> 00:38:34,170
every one of these different networks at

879
00:38:34,170 --> 00:38:37,020
the end of the day you will have a very

880
00:38:37,020 --> 00:38:38,790
accurate map on what your

881
00:38:38,790 --> 00:38:41,400
vulnerabilities are and because you're

882
00:38:41,400 --> 00:38:45,150
leveraging a tool that constantly

883
00:38:45,150 --> 00:38:49,860
changes as is aspect his behavior you're

884
00:38:49,860 --> 00:38:51,450
going to have a very accurate

885
00:38:51,450 --> 00:38:53,340
representation of what that network

886
00:38:53,340 --> 00:38:57,690
looks like vulnerability wise and the

887
00:38:57,690 --> 00:38:59,850
takeaways from this is that as a

888
00:38:59,850 --> 00:39:01,230
community we need to move fast

889
00:39:01,230 --> 00:39:07,470
I started this research in 2008 g17 2017

890
00:39:07,470 --> 00:39:11,750
yes at the beginning of 2017 across 2018

891
00:39:11,750 --> 00:39:14,520
and even then doing some research

892
00:39:14,520 --> 00:39:17,370
reading some papers I I clearly saw that

893
00:39:17,370 --> 00:39:21,030
the trend in generating viruses is to

894
00:39:21,030 --> 00:39:23,070
try and make them clever intelligent use

895
00:39:23,070 --> 00:39:24,960
machine learning use the power of the

896
00:39:24,960 --> 00:39:28,050
clouds to compute passwords to steal

897
00:39:28,050 --> 00:39:30,300
Kerberos tokens to do pasta pass the

898
00:39:30,300 --> 00:39:32,490
hash attacks they wanted to automate all

899
00:39:32,490 --> 00:39:36,120
these different steps and the viruses

900
00:39:36,120 --> 00:39:38,970
that actually hacked into a lot of UK

901
00:39:38,970 --> 00:39:40,680
commerce and they were discovered a few

902
00:39:40,680 --> 00:39:44,010
weeks ago by researchers this virus has

903
00:39:44,010 --> 00:39:46,170
being the estimate that they started

904
00:39:46,170 --> 00:39:49,050
writing this virus in 2060 which is a

905
00:39:49,050 --> 00:39:51,819
proof that in a couple of years

906
00:39:51,819 --> 00:39:54,939
this kind of attacks will be perfected

907
00:39:54,939 --> 00:39:56,769
will be used in the wild and would be

908
00:39:56,769 --> 00:40:00,099
just normal and I do not claim to be an

909
00:40:00,099 --> 00:40:02,109
expert in this by any stretch of

910
00:40:02,109 --> 00:40:05,109
imagination when I started this research

911
00:40:05,109 --> 00:40:07,509
I knew absolutely nothing about writing

912
00:40:07,509 --> 00:40:10,659
a virus or how a virus marked and in the

913
00:40:10,659 --> 00:40:12,219
nine months of my research I just went

914
00:40:12,219 --> 00:40:14,109
to conferences talk to people do this

915
00:40:14,109 --> 00:40:16,479
under wake more clever than me and do

916
00:40:16,479 --> 00:40:17,349
this for a living

917
00:40:17,349 --> 00:40:18,909
and I asked them what the most common

918
00:40:18,909 --> 00:40:22,149
techniques are and so I wanted I really

919
00:40:22,149 --> 00:40:24,189
wanted to release something to the wider

920
00:40:24,189 --> 00:40:25,899
community because there are a lot of

921
00:40:25,899 --> 00:40:28,209
smart people in this room that kids rid

922
00:40:28,209 --> 00:40:30,819
my coat cry a bit because it's so awful

923
00:40:30,819 --> 00:40:34,089
and then make it way way better and take

924
00:40:34,089 --> 00:40:35,469
out something that is actually useful

925
00:40:35,469 --> 00:40:37,359
for the community and for a safety of

926
00:40:37,359 --> 00:40:40,479
the rest of the of the web and and we

927
00:40:40,479 --> 00:40:41,889
need to real fast because these things

928
00:40:41,889 --> 00:40:43,479
are already developed by people that

929
00:40:43,479 --> 00:40:46,209
have bad intentions when to stay up to

930
00:40:46,209 --> 00:40:48,549
date and think about commerce

931
00:40:48,549 --> 00:40:52,269
enumeration kerberos thing is almost a

932
00:40:52,269 --> 00:40:55,389
given so if you if you're doing a red

933
00:40:55,389 --> 00:40:59,049
team exercise and you land on a system

934
00:40:59,049 --> 00:41:00,939
that is using Kerberos first and then

935
00:41:00,939 --> 00:41:02,349
you try to do a Scarborough hosting or

936
00:41:02,349 --> 00:41:04,869
stealing some of the tokens and passing

937
00:41:04,869 --> 00:41:06,519
the harsh or doing some late attacks and

938
00:41:06,519 --> 00:41:08,949
if you do this like 10 times you're

939
00:41:08,949 --> 00:41:10,239
going to see that a lot of these steps

940
00:41:10,239 --> 00:41:12,369
can be automated and they could be done

941
00:41:12,369 --> 00:41:16,149
at the level of of Chimaera if anyone of

942
00:41:16,149 --> 00:41:17,889
you know the absolutely great tool that

943
00:41:17,889 --> 00:41:20,469
is bloodhound that can generate a map of

944
00:41:20,469 --> 00:41:23,049
how these things actually work you can

945
00:41:23,049 --> 00:41:25,569
automate these tools in a in a more

946
00:41:25,569 --> 00:41:30,909
efficient way and I think is living off

947
00:41:30,909 --> 00:41:32,609
the land which is the new trend in

948
00:41:32,609 --> 00:41:36,369
attacks and by using living off the land

949
00:41:36,369 --> 00:41:38,769
techniques you can exploit the

950
00:41:38,769 --> 00:41:42,819
configuration that your and your victim

951
00:41:42,819 --> 00:41:44,259
has already on their computers we have

952
00:41:44,259 --> 00:41:45,880
without having to import your own tools

953
00:41:45,880 --> 00:41:49,029
on the on the software and finally

954
00:41:49,029 --> 00:41:51,579
experiment try try your hand at this

955
00:41:51,579 --> 00:41:53,979
read about a great publications create

956
00:41:53,979 --> 00:41:56,319
pull request merit request talk about it

957
00:41:56,319 --> 00:41:58,149
unless try and be ready as a community

958
00:41:58,149 --> 00:42:01,179
and what I'm trying to do with all this

959
00:42:01,179 --> 00:42:03,519
is try and get this research published

960
00:42:03,519 --> 00:42:04,830
at some point

961
00:42:04,830 --> 00:42:06,840
speaker conferences because they like

962
00:42:06,840 --> 00:42:09,180
doing this although imprinted pro not

963
00:42:09,180 --> 00:42:11,670
like your data and enrich the POC I do

964
00:42:11,670 --> 00:42:15,360
this on my free time on top of trying to

965
00:42:15,360 --> 00:42:18,450
prepare for OSC P and so I don't know

966
00:42:18,450 --> 00:42:20,340
how proficient I will be in the next

967
00:42:20,340 --> 00:42:23,040
month but and think about using Empire

968
00:42:23,040 --> 00:42:26,160
thinking about using custom rules all

969
00:42:26,160 --> 00:42:27,780
these different points of stuff that I

970
00:42:27,780 --> 00:42:30,690
really want to implement in in kethu

971
00:42:30,690 --> 00:42:32,790
because I've implemented in chimera and

972
00:42:32,790 --> 00:42:35,160
they worked very well and they can all

973
00:42:35,160 --> 00:42:37,080
be implemented very very easily because

974
00:42:37,080 --> 00:42:39,480
as I said it's very modular so you can

975
00:42:39,480 --> 00:42:41,460
just scrap whatever it's and write your

976
00:42:41,460 --> 00:42:43,170
own stuff and it will still work the

977
00:42:43,170 --> 00:42:48,330
whole package together and with this it

978
00:42:48,330 --> 00:42:50,250
concludes my talk thanks all for

979
00:42:50,250 --> 00:42:53,640
listening I will publish the link to my

980
00:42:53,640 --> 00:42:56,310
github both on my website and on my

981
00:42:56,310 --> 00:42:58,590
Twitter accounts after this whole thing

982
00:42:58,590 --> 00:43:00,540
is finished possible before I get drunk

983
00:43:00,540 --> 00:43:03,240
at the after after after party but if

984
00:43:03,240 --> 00:43:04,980
you have any questions that con just

985
00:43:04,980 --> 00:43:07,290
contact me on Twitter or on my website

986
00:43:07,290 --> 00:43:10,290
I'm gonna be around and if you have a

987
00:43:10,290 --> 00:43:29,310
question yes but you also being like an

988
00:43:29,310 --> 00:43:31,830
antivirus like an endpoint yes

989
00:43:31,830 --> 00:43:32,940
absolutely

990
00:43:32,940 --> 00:43:35,310
so imagine imagine having a big

991
00:43:35,310 --> 00:43:37,830
corporate network with you have like 500

992
00:43:37,830 --> 00:43:39,870
or even thousands of machines right and

993
00:43:39,870 --> 00:43:43,710
spinning up a single very small honeypot

994
00:43:43,710 --> 00:43:45,750
here and there in your network cost you

995
00:43:45,750 --> 00:43:47,640
absolutely nothing in terms of resources

996
00:43:47,640 --> 00:43:50,790
or time and and if you get the data from

997
00:43:50,790 --> 00:43:53,040
this you know innocent horny boss around

998
00:43:53,040 --> 00:43:58,050
it gives you a more proactive and vision

999
00:43:58,050 --> 00:44:00,120
of so when I was for example seeing the

1000
00:44:00,120 --> 00:44:01,680
attack propagating through different

1001
00:44:01,680 --> 00:44:03,810
layers of the network and all the

1002
00:44:03,810 --> 00:44:05,760
traditional intrusion detection systems

1003
00:44:05,760 --> 00:44:08,220
deal with this kind of attacks as they

1004
00:44:08,220 --> 00:44:10,950
come in so if it's a if it's a proxy

1005
00:44:10,950 --> 00:44:13,080
firewall it will deal with stuff when he

1006
00:44:13,080 --> 00:44:14,820
starts it in the firewall if it's an

1007
00:44:14,820 --> 00:44:16,950
anti-virus it will start caring about

1008
00:44:16,950 --> 00:44:18,250
the files when you start running

1009
00:44:18,250 --> 00:44:20,380
right if you're looking at the behavior

1010
00:44:20,380 --> 00:44:21,490
of the machines around you you can

1011
00:44:21,490 --> 00:44:23,140
understand which one are compromised and

1012
00:44:23,140 --> 00:44:25,030
you shouldn't trust and that is up to

1013
00:44:25,030 --> 00:44:30,820
you where you want to do with it how do

1014
00:44:30,820 --> 00:44:40,300
you know that so yeah one cool thing I

1015
00:44:40,300 --> 00:44:42,609
did and it was inspired by a course that

1016
00:44:42,609 --> 00:44:44,410
we did across University which is safety

1017
00:44:44,410 --> 00:44:47,830
critical system and is something that is

1018
00:44:47,830 --> 00:44:50,290
done on planes nowadays so airplanes

1019
00:44:50,290 --> 00:44:52,420
have not only one computer on board they

1020
00:44:52,420 --> 00:44:54,609
have various computers on board and they

1021
00:44:54,609 --> 00:44:56,530
psychically every single computer votes

1022
00:44:56,530 --> 00:44:58,570
on the sanity of all the other computers

1023
00:44:58,570 --> 00:45:01,869
so every honeypot doesn't only look at

1024
00:45:01,869 --> 00:45:03,460
what they're trying to protect but I

1025
00:45:03,460 --> 00:45:06,099
also vote upon each other's sanity and

1026
00:45:06,099 --> 00:45:07,780
make sure that they're not compromised

1027
00:45:07,780 --> 00:45:09,400
or their communication are still up and

1028
00:45:09,400 --> 00:45:12,190
running so it wasn't my idea

1029
00:45:12,190 --> 00:45:31,930
I took it from planes so I'm not

1030
00:45:31,930 --> 00:45:33,369
releasing right now by will in the

1031
00:45:33,369 --> 00:45:35,970
future a POC for the honey pots because

1032
00:45:35,970 --> 00:45:39,490
the way I coded them was probably like

1033
00:45:39,490 --> 00:45:42,880
50 lines of bosh and so all you want to

1034
00:45:42,880 --> 00:45:44,619
do is you have a list of course that you

1035
00:45:44,619 --> 00:45:46,300
want to spin up and maybe a list of

1036
00:45:46,300 --> 00:45:48,240
banners that you want to fake to have

1037
00:45:48,240 --> 00:45:50,290
and what you do you just cycle through

1038
00:45:50,290 --> 00:45:52,420
them spin up the port with the banner

1039
00:45:52,420 --> 00:45:55,119
behind it and then you just read from

1040
00:45:55,119 --> 00:45:57,010
the socket and then you have an if

1041
00:45:57,010 --> 00:45:59,200
condition and you just notify and with

1042
00:45:59,200 --> 00:46:01,030
the sanity is literally you have a list

1043
00:46:01,030 --> 00:46:02,410
of all the other honey pots you

1044
00:46:02,410 --> 00:46:03,970
periodically ping each other make sure

1045
00:46:03,970 --> 00:46:06,849
that you pass a secret and that's the

1046
00:46:06,849 --> 00:46:08,619
save on your solitaire so it was

1047
00:46:08,619 --> 00:46:09,849
actually very very easy

1048
00:46:09,849 --> 00:46:14,260
it was scary easy how solutions that

1049
00:46:14,260 --> 00:46:16,450
cost a lot of money were not detecting

1050
00:46:16,450 --> 00:46:18,070
these kind of attacks but there's 50

1051
00:46:18,070 --> 00:46:20,440
lines of barter a first-year students

1052
00:46:20,440 --> 00:46:21,849
could have written was actually

1053
00:46:21,849 --> 00:46:28,140
detecting them immediately yes

1054
00:46:28,170 --> 00:46:31,290
No okay thanks for

1055
00:46:31,290 --> 00:46:34,009
much for listening to me

