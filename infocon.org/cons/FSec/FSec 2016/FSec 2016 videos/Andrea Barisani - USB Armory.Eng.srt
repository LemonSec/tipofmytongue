1
00:00:02,419 --> 00:00:06,330
<font color="#E5E5E5">okay so I'm</font><font color="#CCCCCC"> Andrea Barzagli I'm the</font>

2
00:00:04,770 --> 00:00:07,949
founder of<font color="#E5E5E5"> a</font><font color="#CCCCCC"> company called</font><font color="#E5E5E5"> inverse</font>

3
00:00:06,330 --> 00:00:10,980
<font color="#CCCCCC">puffs which you might or you</font><font color="#E5E5E5"> might have</font>

4
00:00:07,950 --> 00:00:12,240
<font color="#E5E5E5">not heard of and gonna talk to you here</font>

5
00:00:10,980 --> 00:00:15,360
<font color="#E5E5E5">very honored to be</font><font color="#CCCCCC"> in this very</font>

6
00:00:12,240 --> 00:00:17,880
<font color="#E5E5E5">beautiful venue about our latest open</font>

7
00:00:15,360 --> 00:00:20,730
hardware project which is the USB armory

8
00:00:17,880 --> 00:00:23,698
<font color="#E5E5E5">so how many of you have heard of the USB</font>

9
00:00:20,730 --> 00:00:24,660
armory please raise your hand<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> okay</font>

10
00:00:23,699 --> 00:00:26,609
<font color="#E5E5E5">so</font><font color="#CCCCCC"> there's a fair</font><font color="#E5E5E5"> number of people</font>

11
00:00:24,660 --> 00:00:29,039
doesn't<font color="#CCCCCC"> know anything about</font><font color="#E5E5E5"> it which</font><font color="#CCCCCC"> is</font>

12
00:00:26,609 --> 00:00:31,619
<font color="#CCCCCC">great so that I can tell</font><font color="#E5E5E5"> you about this</font>

13
00:00:29,039 --> 00:00:35,120
project so what<font color="#E5E5E5"> is the USB armory</font><font color="#CCCCCC"> they</font>

14
00:00:31,619 --> 00:00:39,480
use the armory<font color="#E5E5E5"> is a open source computer</font>

15
00:00:35,120 --> 00:00:41,459
which<font color="#E5E5E5"> has been in design in a timing for</font>

16
00:00:39,480 --> 00:00:45,898
<font color="#E5E5E5">factor and specifically the form factor</font>

17
00:00:41,460 --> 00:00:48,270
<font color="#CCCCCC">of a USB</font><font color="#E5E5E5"> stick so why are we doing this</font>

18
00:00:45,899 --> 00:00:50,940
so as a company every two years we try

19
00:00:48,270 --> 00:00:52,559
to publish a research which<font color="#CCCCCC"> has to do</font>

20
00:00:50,940 --> 00:00:55,079
<font color="#E5E5E5">not only</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> software but as well as</font>

21
00:00:52,559 --> 00:00:57,718
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> and of course in the point of</font>

22
00:00:55,079 --> 00:01:00,480
<font color="#E5E5E5">view of security</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> talk about hacking</font>

23
00:00:57,719 --> 00:01:02,160
cars for the first time in<font color="#E5E5E5"> 2007 then we</font>

24
00:01:00,480 --> 00:01:05,009
did<font color="#CCCCCC"> side-channel attacks</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> the</font>

25
00:01:02,160 --> 00:01:07,590
<font color="#CCCCCC">powerline</font><font color="#E5E5E5"> attacks on credit cards and so</font>

26
00:01:05,010 --> 00:01:09,689
on<font color="#CCCCCC"> and</font><font color="#E5E5E5"> two years ago</font><font color="#CCCCCC"> we wanted to for a</font>

27
00:01:07,590 --> 00:01:11,189
change<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> a talk where we create</font>

28
00:01:09,689 --> 00:01:12,929
<font color="#E5E5E5">something and build something rather</font>

29
00:01:11,189 --> 00:01:15,630
<font color="#E5E5E5">than break something and wanted to take</font>

30
00:01:12,930 --> 00:01:18,540
our expertise into embedded systems

31
00:01:15,630 --> 00:01:20,789
auditing<font color="#E5E5E5"> into actually creating one and</font>

32
00:01:18,540 --> 00:01:24,390
the<font color="#E5E5E5"> reason why the USB army was created</font>

33
00:01:20,790 --> 00:01:26,670
in<font color="#CCCCCC"> the first place was for personal</font>

34
00:01:24,390 --> 00:01:29,220
security applications<font color="#E5E5E5"> because the first</font>

35
00:01:26,670 --> 00:01:31,079
thought<font color="#CCCCCC"> that we had was</font><font color="#E5E5E5"> we need</font>

36
00:01:29,220 --> 00:01:34,079
something we want something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can</font>

37
00:01:31,079 --> 00:01:36,329
provide<font color="#CCCCCC"> us encrypted storage</font><font color="#E5E5E5"> but not you</font>

38
00:01:34,079 --> 00:01:38,369
know with some military-grade encryption

39
00:01:36,329 --> 00:01:40,679
USB Drive which you really<font color="#E5E5E5"> don't know</font>

40
00:01:38,369 --> 00:01:42,270
what is actually<font color="#E5E5E5"> doing and that most of</font>

41
00:01:40,680 --> 00:01:44,310
the times when we<font color="#E5E5E5"> do</font><font color="#CCCCCC"> audits</font><font color="#E5E5E5"> on these</font>

42
00:01:42,270 --> 00:01:45,960
kind of devices<font color="#CCCCCC"> there are security</font>

43
00:01:44,310 --> 00:01:48,479
especially<font color="#CCCCCC"> if you have physical</font>

44
00:01:45,960 --> 00:01:51,360
possession of the device<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be broken</font>

45
00:01:48,479 --> 00:01:53,340
or<font color="#E5E5E5"> bypass very very easily</font><font color="#CCCCCC"> so the first</font>

46
00:01:51,360 --> 00:01:55,170
<font color="#CCCCCC">idea was why don't we do</font><font color="#E5E5E5"> an open</font>

47
00:01:53,340 --> 00:01:57,240
hardware device which can provide

48
00:01:55,170 --> 00:01:59,759
<font color="#CCCCCC">enhanced</font><font color="#E5E5E5"> mass storage so instead</font><font color="#CCCCCC"> of just</font>

49
00:01:57,240 --> 00:02:02,250
providing<font color="#E5E5E5"> you know a standard USB Drive</font>

50
00:01:59,759 --> 00:02:04,380
it would<font color="#CCCCCC"> also</font><font color="#E5E5E5"> maybe you know filter</font><font color="#CCCCCC"> or</font>

51
00:02:02,250 --> 00:02:05,969
scan and encrypt<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> GPU</font><font color="#E5E5E5"> or</font>

52
00:02:04,380 --> 00:02:09,679
something all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the contents before</font>

53
00:02:05,969 --> 00:02:12,420
<font color="#E5E5E5">actually being saved on a micro SD card</font>

54
00:02:09,679 --> 00:02:13,620
<font color="#CCCCCC">and then we fought but you know mass</font>

55
00:02:12,420 --> 00:02:15,359
<font color="#CCCCCC">storage oh</font><font color="#E5E5E5"> okay</font>

56
00:02:13,620 --> 00:02:16,920
it's a driver<font color="#CCCCCC"> Ricci which is very well</font>

57
00:02:15,360 --> 00:02:18,750
<font color="#CCCCCC">understood by all computers but why</font>

58
00:02:16,920 --> 00:02:20,849
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> we do a device which can provide a</font>

59
00:02:18,750 --> 00:02:23,040
richer interface than just you know

60
00:02:20,849 --> 00:02:25,049
<font color="#CCCCCC">copying files to it so</font><font color="#E5E5E5"> this way we could</font>

61
00:02:23,040 --> 00:02:27,629
<font color="#E5E5E5">leverage a more complex authentication</font>

62
00:02:25,050 --> 00:02:29,910
and more secure methods<font color="#E5E5E5"> so why don't we</font>

63
00:02:27,629 --> 00:02:32,609
just provide a device which supports

64
00:02:29,910 --> 00:02:34,230
tcp/ip<font color="#E5E5E5"> over USB</font><font color="#CCCCCC"> using the standard</font>

65
00:02:32,610 --> 00:02:36,470
drivers that<font color="#CCCCCC"> are there for providing</font>

66
00:02:34,230 --> 00:02:39,450
<font color="#E5E5E5">emulating an</font><font color="#CCCCCC"> ethernet device over USB</font>

67
00:02:36,470 --> 00:02:41,310
<font color="#CCCCCC">and then maybe we can expose a richer</font>

68
00:02:39,450 --> 00:02:45,349
application using a web server or

69
00:02:41,310 --> 00:02:49,290
<font color="#CCCCCC">something</font><font color="#E5E5E5"> and and once this transition</font>

70
00:02:45,349 --> 00:02:50,700
<font color="#CCCCCC">you know</font><font color="#E5E5E5"> was clearly in our minds then</font>

71
00:02:49,290 --> 00:02:52,260
we quickly realize that<font color="#CCCCCC"> we need</font>

72
00:02:50,700 --> 00:02:54,328
something<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little more powerful</font><font color="#CCCCCC"> than</font>

73
00:02:52,260 --> 00:02:56,548
<font color="#CCCCCC">just a microcontroller on own</font><font color="#E5E5E5"> and such</font>

74
00:02:54,329 --> 00:02:58,379
as device<font color="#E5E5E5"> and we thought but if we have</font>

75
00:02:56,549 --> 00:02:59,670
you<font color="#E5E5E5"> know something more powerful</font><font color="#CCCCCC"> and</font>

76
00:02:58,379 --> 00:03:01,798
<font color="#E5E5E5">also something where you can customize</font>

77
00:02:59,670 --> 00:03:03,540
<font color="#E5E5E5">the code that runs on it you know you</font>

78
00:03:01,799 --> 00:03:05,310
<font color="#E5E5E5">can we can</font><font color="#CCCCCC"> do some crazy</font><font color="#E5E5E5"> and exotic</font>

79
00:03:03,540 --> 00:03:07,470
things which you don't<font color="#CCCCCC"> find in</font><font color="#E5E5E5"> devices</font>

80
00:03:05,310 --> 00:03:09,269
<font color="#CCCCCC">nowadays such as you</font><font color="#E5E5E5"> know if I copy a</font>

81
00:03:07,470 --> 00:03:11,250
certain file<font color="#CCCCCC"> if I input a certain</font>

82
00:03:09,269 --> 00:03:12,840
password maybe we have a fail-safe were

83
00:03:11,250 --> 00:03:15,239
detect and maybe the device will just

84
00:03:12,840 --> 00:03:17,040
wipe itself<font color="#E5E5E5"> so some data self-destruct</font>

85
00:03:15,239 --> 00:03:18,959
unfortunately like that and then we took

86
00:03:17,040 --> 00:03:21,298
it further<font color="#E5E5E5"> and we said</font><font color="#CCCCCC"> but we</font><font color="#E5E5E5"> have</font>

87
00:03:18,959 --> 00:03:24,090
tcp/ip connectivity to this device then

88
00:03:21,299 --> 00:03:25,530
<font color="#E5E5E5">we can SSH to it with</font><font color="#CCCCCC"> a credentials that</font>

89
00:03:24,090 --> 00:03:27,180
we don't care<font color="#E5E5E5"> too much about or maybe</font>

90
00:03:25,530 --> 00:03:29,549
<font color="#CCCCCC">one-time credentials and then you can</font>

91
00:03:27,180 --> 00:03:32,849
have your<font color="#E5E5E5"> keys</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and if you route it</font>

92
00:03:29,549 --> 00:03:34,109
you can use it<font color="#CCCCCC"> unless a SSH proxy or of</font>

93
00:03:32,849 --> 00:03:36,630
course<font color="#E5E5E5"> you can use</font><font color="#CCCCCC"> it as a password</font>

94
00:03:34,109 --> 00:03:39,959
imagine all these kind of<font color="#CCCCCC"> ideas quickly</font>

95
00:03:36,630 --> 00:03:41,310
<font color="#E5E5E5">came out you know as something</font><font color="#CCCCCC"> that we</font>

96
00:03:39,959 --> 00:03:43,620
could implement on such as generic

97
00:03:41,310 --> 00:03:45,810
device authentication tokens and<font color="#E5E5E5"> and so</font>

98
00:03:43,620 --> 00:03:47,639
on<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> importantly if you have</font>

99
00:03:45,810 --> 00:03:49,530
a device which provides richer

100
00:03:47,639 --> 00:03:51,419
functionality where you<font color="#E5E5E5"> control the code</font>

101
00:03:49,530 --> 00:03:53,310
<font color="#E5E5E5">that runs on it there's no reason why</font>

102
00:03:51,419 --> 00:03:55,380
<font color="#E5E5E5">not</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> you can authenticate to the</font>

103
00:03:53,310 --> 00:03:57,389
<font color="#E5E5E5">device but also the device can decide to</font>

104
00:03:55,380 --> 00:04:00,660
authenticate<font color="#E5E5E5"> the host that</font><font color="#CCCCCC"> is being</font>

105
00:03:57,389 --> 00:04:03,359
connected to since it becomes a full

106
00:04:00,660 --> 00:04:04,980
<font color="#E5E5E5">computer that can actively perform tasks</font>

107
00:04:03,359 --> 00:04:06,900
<font color="#E5E5E5">as soon as it's</font><font color="#CCCCCC"> plugged into your</font>

108
00:04:04,980 --> 00:04:08,488
computer<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you know the idea</font><font color="#CCCCCC"> was that</font>

109
00:04:06,900 --> 00:04:10,349
you can also have a<font color="#E5E5E5"> device that</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> soon</font>

110
00:04:08,489 --> 00:04:13,139
<font color="#E5E5E5">as you plug it in will communicate to</font>

111
00:04:10,349 --> 00:04:15,690
<font color="#CCCCCC">your laptop</font><font color="#E5E5E5"> or host computer and if the</font>

112
00:04:13,139 --> 00:04:17,430
<font color="#E5E5E5">device itself decides that for some</font>

113
00:04:15,690 --> 00:04:19,228
reason<font color="#CCCCCC"> the host that</font><font color="#E5E5E5"> you're connected to</font>

114
00:04:17,430 --> 00:04:22,070
<font color="#E5E5E5">is not the one that it's supposed to</font>

115
00:04:19,228 --> 00:04:24,750
talk to<font color="#E5E5E5"> then actions can be taken</font>

116
00:04:22,070 --> 00:04:26,419
<font color="#CCCCCC">you know if that condition is</font><font color="#E5E5E5"> being</font>

117
00:04:24,750 --> 00:04:29,629
detected<font color="#E5E5E5"> so</font>

118
00:04:26,419 --> 00:04:31,878
we set some design goals very quickly<font color="#E5E5E5"> so</font>

119
00:04:29,629 --> 00:04:34,069
for supporting all of<font color="#E5E5E5"> these applications</font>

120
00:04:31,879 --> 00:04:36,289
it needs to be a compact USB<font color="#E5E5E5"> powered</font>

121
00:04:34,069 --> 00:04:38,599
device so no external supply<font color="#E5E5E5"> it needs to</font>

122
00:04:36,289 --> 00:04:41,539
plug in<font color="#CCCCCC"> directly into a USB port without</font>

123
00:04:38,599 --> 00:04:43,580
<font color="#E5E5E5">a cable or</font><font color="#CCCCCC"> something which is</font><font color="#E5E5E5"> fiddly</font><font color="#CCCCCC"> it</font>

124
00:04:41,539 --> 00:04:45,438
must be a<font color="#E5E5E5"> little bit future-proof so</font>

125
00:04:43,580 --> 00:04:47,719
<font color="#E5E5E5">amass have a fast view and a generous</font>

126
00:04:45,439 --> 00:04:49,939
amount<font color="#E5E5E5"> of</font><font color="#CCCCCC"> RAM given the form factor in</font>

127
00:04:47,719 --> 00:04:52,248
the applications of the device<font color="#CCCCCC"> it must</font>

128
00:04:49,939 --> 00:04:54,560
support secure<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> so the code that</font>

129
00:04:52,249 --> 00:04:56,960
<font color="#CCCCCC">you're executing</font><font color="#E5E5E5"> on the device</font><font color="#CCCCCC"> it must</font>

130
00:04:54,560 --> 00:04:58,430
be possible to<font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> it is the</font>

131
00:04:56,960 --> 00:05:00,739
<font color="#CCCCCC">Intendant code that you</font><font color="#E5E5E5"> want to execute</font>

132
00:04:58,430 --> 00:05:02,930
so that it's signed with your own keys

133
00:05:00,740 --> 00:05:05,449
<font color="#CCCCCC">it must provide</font><font color="#E5E5E5"> standard connectivity</font>

134
00:05:02,930 --> 00:05:07,419
<font color="#CCCCCC">over</font><font color="#E5E5E5"> USB and also very important for us</font>

135
00:05:05,449 --> 00:05:09,949
the development environment must be

136
00:05:07,419 --> 00:05:14,990
<font color="#E5E5E5">familiar not something which requires</font>

137
00:05:09,949 --> 00:05:16,789
you know some specific vendor SDK or<font color="#CCCCCC"> IDE</font>

138
00:05:14,990 --> 00:05:18,080
you<font color="#E5E5E5"> know code development tools you know</font>

139
00:05:16,789 --> 00:05:20,688
it must<font color="#CCCCCC"> be</font><font color="#E5E5E5"> something where you can</font>

140
00:05:18,080 --> 00:05:22,520
easily<font color="#E5E5E5"> put code in</font><font color="#CCCCCC"> the same way that you</font>

141
00:05:20,689 --> 00:05:23,900
will put in on a server on<font color="#CCCCCC"> your</font><font color="#E5E5E5"> laptop</font>

142
00:05:22,520 --> 00:05:26,539
<font color="#E5E5E5">you can put it on this device</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> of</font>

143
00:05:23,900 --> 00:05:27,198
course the design<font color="#CCCCCC"> must be open as open</font>

144
00:05:26,539 --> 00:05:30,050
as possible

145
00:05:27,199 --> 00:05:32,060
so one of<font color="#E5E5E5"> the first tasks into into one</font>

146
00:05:30,050 --> 00:05:34,430
of the<font color="#E5E5E5"> most important choices that you</font>

147
00:05:32,060 --> 00:05:36,379
have to<font color="#CCCCCC"> may</font><font color="#E5E5E5"> may right away when you</font>

148
00:05:34,430 --> 00:05:37,069
<font color="#E5E5E5">design such a</font><font color="#CCCCCC"> device is selecting the</font>

149
00:05:36,379 --> 00:05:38,900
<font color="#E5E5E5">correct</font>

150
00:05:37,069 --> 00:05:41,000
you know components and specifically the

151
00:05:38,900 --> 00:05:42,888
system on a chip<font color="#CCCCCC"> so a system on a chip</font>

152
00:05:41,000 --> 00:05:44,810
<font color="#CCCCCC">is a CPU</font><font color="#E5E5E5"> which also has a lot of</font>

153
00:05:42,889 --> 00:05:46,789
internal peripherals<font color="#E5E5E5"> we'd help you in</font>

154
00:05:44,810 --> 00:05:49,460
designing<font color="#CCCCCC"> such as device and also when</font>

155
00:05:46,789 --> 00:05:52,188
you<font color="#CCCCCC"> want to make it very compact we</font>

156
00:05:49,460 --> 00:05:54,409
selected the<font color="#CCCCCC"> formerly free scale now</font><font color="#E5E5E5"> an</font>

157
00:05:52,189 --> 00:05:55,909
<font color="#E5E5E5">XP</font><font color="#CCCCCC"> IMX 50 free because we were very</font>

158
00:05:54,409 --> 00:05:58,129
familiar<font color="#E5E5E5"> with this device with the</font>

159
00:05:55,909 --> 00:06:00,500
security features<font color="#E5E5E5"> of this component is</font>

160
00:05:58,129 --> 00:06:03,050
also<font color="#E5E5E5"> used heavily</font><font color="#CCCCCC"> in automotive</font><font color="#E5E5E5"> which is</font>

161
00:06:00,500 --> 00:06:05,839
where we stumble upon it it's an arm

162
00:06:03,050 --> 00:06:08,330
cortex a8<font color="#E5E5E5"> which can be clock up to</font><font color="#CCCCCC"> one</font>

163
00:06:05,839 --> 00:06:10,759
key cards<font color="#E5E5E5"> almost all data sheets and</font>

164
00:06:08,330 --> 00:06:13,008
manuals are public which is good<font color="#E5E5E5"> no NDA</font>

165
00:06:10,759 --> 00:06:15,770
is required that<font color="#E5E5E5"> the documentation is</font>

166
00:06:13,009 --> 00:06:17,449
actually fairly good<font color="#E5E5E5"> which for</font><font color="#CCCCCC"> Hardware</font>

167
00:06:15,770 --> 00:06:19,370
it's always a good thing<font color="#CCCCCC"> when</font><font color="#E5E5E5"> it's not</font>

168
00:06:17,449 --> 00:06:21,620
super<font color="#E5E5E5"> crappy but it's actually fairly</font>

169
00:06:19,370 --> 00:06:23,029
<font color="#CCCCCC">good</font><font color="#E5E5E5"> it has some security features which</font>

170
00:06:21,620 --> 00:06:25,399
I'm<font color="#CCCCCC"> going</font><font color="#E5E5E5"> to mention about later on</font>

171
00:06:23,029 --> 00:06:26,810
<font color="#CCCCCC">detail</font><font color="#E5E5E5"> power consumption guide</font><font color="#CCCCCC"> available</font>

172
00:06:25,399 --> 00:06:28,129
which for us was important<font color="#E5E5E5"> when</font>

173
00:06:26,810 --> 00:06:30,560
developing something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> needs to be</font>

174
00:06:28,129 --> 00:06:32,509
<font color="#E5E5E5">power over</font><font color="#CCCCCC"> USB so the amount</font><font color="#E5E5E5"> of current</font>

175
00:06:30,560 --> 00:06:34,339
<font color="#CCCCCC">that you can drain is limited and</font>

176
00:06:32,509 --> 00:06:36,139
there's excellent<font color="#E5E5E5"> nanny support for</font>

177
00:06:34,339 --> 00:06:38,000
Android Debian Ubuntu<font color="#E5E5E5"> free</font><font color="#CCCCCC"> base the</font><font color="#E5E5E5"> N</font>

178
00:06:36,139 --> 00:06:39,289
and so<font color="#E5E5E5"> on and good stock and production</font>

179
00:06:38,000 --> 00:06:40,160
guarantee you don't<font color="#E5E5E5"> want to commit to a</font>

180
00:06:39,289 --> 00:06:41,840
design

181
00:06:40,160 --> 00:06:43,280
to realize that maybe<font color="#E5E5E5"> after two years</font>

182
00:06:41,840 --> 00:06:46,190
the part is not available anymore

183
00:06:43,280 --> 00:06:48,049
<font color="#E5E5E5">because</font><font color="#CCCCCC"> that sucks</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> so in this case</font>

184
00:06:46,190 --> 00:06:52,190
they're gonna<font color="#E5E5E5"> produce this party I think</font>

185
00:06:48,050 --> 00:06:54,490
2021<font color="#E5E5E5"> this device the</font><font color="#CCCCCC"> system ownership is</font>

186
00:06:52,190 --> 00:06:58,250
a lot of peripherals as a canvas

187
00:06:54,490 --> 00:07:02,930
<font color="#E5E5E5">controller display controllers 2d and 3d</font>

188
00:06:58,250 --> 00:07:05,480
GPU and our design<font color="#E5E5E5"> fries</font><font color="#CCCCCC"> not to power on</font>

189
00:07:02,930 --> 00:07:07,730
the blocks that<font color="#E5E5E5"> we don't need to be</font>

190
00:07:05,480 --> 00:07:09,950
<font color="#CCCCCC">power on to reduce power</font><font color="#E5E5E5"> consumption on</font>

191
00:07:07,730 --> 00:07:11,810
the<font color="#E5E5E5"> device and to simplify the design as</font>

192
00:07:09,950 --> 00:07:14,360
much<font color="#E5E5E5"> as possible because we have to cram</font>

193
00:07:11,810 --> 00:07:17,390
it in such a such<font color="#CCCCCC"> a tiny space which is</font>

194
00:07:14,360 --> 00:07:19,880
unusual<font color="#E5E5E5"> in this</font><font color="#CCCCCC"> kind of designs with</font>

195
00:07:17,390 --> 00:07:21,469
<font color="#CCCCCC">these specific components</font><font color="#E5E5E5"> in terms of</font>

196
00:07:19,880 --> 00:07:23,450
<font color="#E5E5E5">hardware security features we</font><font color="#CCCCCC"> have</font>

197
00:07:21,470 --> 00:07:25,850
something called<font color="#E5E5E5"> high assurance book</font>

198
00:07:23,450 --> 00:07:28,520
which is authentication<font color="#CCCCCC"> of the initial</font>

199
00:07:25,850 --> 00:07:31,430
bootloader which means secure boot<font color="#E5E5E5"> so in</font>

200
00:07:28,520 --> 00:07:32,930
an XP parlance it is referred to as<font color="#E5E5E5"> high</font>

201
00:07:31,430 --> 00:07:35,810
assurance<font color="#CCCCCC"> boot but it's really</font><font color="#E5E5E5"> secure</font>

202
00:07:32,930 --> 00:07:38,120
<font color="#E5E5E5">boot we have a security controller which</font>

203
00:07:35,810 --> 00:07:39,920
<font color="#CCCCCC">is a</font><font color="#E5E5E5"> hardware module which can do a</font><font color="#CCCCCC"> s</font>

204
00:07:38,120 --> 00:07:42,110
encryption which a with a device

205
00:07:39,920 --> 00:07:44,500
specific key<font color="#E5E5E5"> and then there are a lot of</font>

206
00:07:42,110 --> 00:07:46,490
cryptographic accelerators<font color="#E5E5E5"> which</font>

207
00:07:44,500 --> 00:07:49,880
actually it turns out<font color="#E5E5E5"> that</font><font color="#CCCCCC"> if you use</font>

208
00:07:46,490 --> 00:07:52,400
<font color="#E5E5E5">them the overhead in doing the MA to and</font>

209
00:07:49,880 --> 00:07:54,710
from the accelerator<font color="#E5E5E5"> accelerators is</font>

210
00:07:52,400 --> 00:07:56,719
actually you know it takes more time

211
00:07:54,710 --> 00:07:58,609
than<font color="#E5E5E5"> doing those computation over in in</font>

212
00:07:56,720 --> 00:08:00,380
<font color="#E5E5E5">pure CPU so unless you're having</font>

213
00:07:58,610 --> 00:08:02,570
parallel<font color="#CCCCCC"> class</font><font color="#E5E5E5"> to perform</font><font color="#CCCCCC"> those are not</font>

214
00:08:00,380 --> 00:08:03,740
really useful line or<font color="#E5E5E5"> not</font><font color="#CCCCCC"> we're now</font>

215
00:08:02,570 --> 00:08:06,469
going<font color="#E5E5E5"> to cover them we're just</font><font color="#CCCCCC"> gonna</font>

216
00:08:03,740 --> 00:08:09,860
<font color="#CCCCCC">cover the first two security features</font>

217
00:08:06,470 --> 00:08:12,740
later on and also<font color="#E5E5E5"> we have a very well a</font>

218
00:08:09,860 --> 00:08:16,640
very<font color="#E5E5E5"> complete implementation of arm</font>

219
00:08:12,740 --> 00:08:18,470
<font color="#E5E5E5">trust and so</font><font color="#CCCCCC"> I'm Trustin is a feature</font>

220
00:08:16,640 --> 00:08:20,419
which<font color="#E5E5E5"> is supported must be supported</font>

221
00:08:18,470 --> 00:08:22,070
both by<font color="#CCCCCC"> the CPU core as well as the</font>

222
00:08:20,419 --> 00:08:25,490
peripherals that<font color="#E5E5E5"> are connected to the</font>

223
00:08:22,070 --> 00:08:28,190
<font color="#CCCCCC">system on a chip for separating</font><font color="#E5E5E5"> the</font>

224
00:08:25,490 --> 00:08:30,380
execution domains<font color="#E5E5E5"> in a non secure one</font>

225
00:08:28,190 --> 00:08:32,780
and a secure<font color="#E5E5E5"> one and the idea is that</font>

226
00:08:30,380 --> 00:08:34,640
<font color="#E5E5E5">you can also leverage on functionalities</font>

227
00:08:32,780 --> 00:08:36,679
such<font color="#E5E5E5"> as sort of</font><font color="#CCCCCC"> hardware</font><font color="#E5E5E5"> firewalling</font>

228
00:08:34,640 --> 00:08:40,130
functionalities where you can<font color="#E5E5E5"> decide to</font>

229
00:08:36,679 --> 00:08:42,199
<font color="#E5E5E5">segregate a specific hardware components</font>

230
00:08:40,130 --> 00:08:43,849
let's say a USB controller or the<font color="#E5E5E5"> micro</font>

231
00:08:42,200 --> 00:08:45,860
<font color="#CCCCCC">sd controller only to one of these</font><font color="#E5E5E5"> two</font>

232
00:08:43,849 --> 00:08:49,550
domains<font color="#CCCCCC"> and this allows to</font><font color="#E5E5E5"> a further</font>

233
00:08:45,860 --> 00:08:51,770
<font color="#E5E5E5">separation within the device which you</font>

234
00:08:49,550 --> 00:08:53,030
know<font color="#CCCCCC"> it can</font><font color="#E5E5E5"> be useful</font><font color="#CCCCCC"> on certainly</font><font color="#E5E5E5"> a</font>

235
00:08:51,770 --> 00:08:53,390
good playground<font color="#E5E5E5"> because one of</font><font color="#CCCCCC"> the</font>

236
00:08:53,030 --> 00:08:55,850
things

237
00:08:53,390 --> 00:08:57,860
we see<font color="#CCCCCC"> We Trust is</font><font color="#E5E5E5"> that the threshold</font>

238
00:08:55,850 --> 00:08:59,750
and and the learning<font color="#CCCCCC"> curve to</font><font color="#E5E5E5"> approach</font>

239
00:08:57,860 --> 00:09:01,280
it is always<font color="#CCCCCC"> very high and</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> also</font>

240
00:08:59,750 --> 00:09:02,780
wanted a device where we could do

241
00:09:01,280 --> 00:09:07,459
trainings and we could experiment with

242
00:09:02,780 --> 00:09:10,040
<font color="#E5E5E5">trust and very you</font><font color="#CCCCCC"> know fairly easily so</font>

243
00:09:07,460 --> 00:09:11,690
<font color="#E5E5E5">an</font><font color="#CCCCCC"> augur go too</font><font color="#E5E5E5"> much into trust</font><font color="#CCCCCC"> zone</font>

244
00:09:10,040 --> 00:09:13,610
<font color="#E5E5E5">this is a very nice article from the</font>

245
00:09:11,690 --> 00:09:15,650
<font color="#CCCCCC">Jean otherwise project</font><font color="#E5E5E5"> so Jean otherwise</font>

246
00:09:13,610 --> 00:09:18,230
provides an implementation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> trust</font><font color="#CCCCCC"> on</font>

247
00:09:15,650 --> 00:09:21,170
which is supported<font color="#E5E5E5"> so</font><font color="#CCCCCC"> provide support</font>

248
00:09:18,230 --> 00:09:24,650
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> USB</font><font color="#E5E5E5"> armory and and the idea is</font>

249
00:09:21,170 --> 00:09:27,260
<font color="#CCCCCC">that you</font><font color="#E5E5E5"> boot</font><font color="#CCCCCC"> a richer OS</font><font color="#E5E5E5"> such as Linux</font>

250
00:09:24,650 --> 00:09:29,810
<font color="#E5E5E5">into the normal container while into</font><font color="#CCCCCC"> the</font>

251
00:09:27,260 --> 00:09:30,319
secure container you have microkernel

252
00:09:29,810 --> 00:09:32,930
<font color="#E5E5E5">base</font>

253
00:09:30,320 --> 00:09:35,090
lightweight OS<font color="#E5E5E5"> such as Gino</font><font color="#CCCCCC"> doe</font><font color="#E5E5E5"> s which</font>

254
00:09:32,930 --> 00:09:37,609
can<font color="#CCCCCC"> take over certain</font><font color="#E5E5E5"> functions or</font>

255
00:09:35,090 --> 00:09:39,920
certain<font color="#CCCCCC"> drivers and exposing virtual</font>

256
00:09:37,610 --> 00:09:42,170
drivers to<font color="#E5E5E5"> the Linux OS so that you can</font>

257
00:09:39,920 --> 00:09:45,380
do things like<font color="#E5E5E5"> encrypting the</font><font color="#CCCCCC"> microSD</font>

258
00:09:42,170 --> 00:09:47,630
but the key remains in the secure domain

259
00:09:45,380 --> 00:09:49,520
<font color="#E5E5E5">so even if your Linux instance is</font>

260
00:09:47,630 --> 00:09:52,189
completely compromising your<font color="#E5E5E5"> route on it</font>

261
00:09:49,520 --> 00:09:54,020
you cannot dump the key from memory

262
00:09:52,190 --> 00:09:55,670
because<font color="#CCCCCC"> that will be segregated on trust</font>

263
00:09:54,020 --> 00:09:57,770
<font color="#E5E5E5">them so if you're interesting into these</font>

264
00:09:55,670 --> 00:10:01,640
the<font color="#E5E5E5"> gene OS provides a good example for</font>

265
00:09:57,770 --> 00:10:04,280
<font color="#E5E5E5">this on the USB arm so and of course</font>

266
00:10:01,640 --> 00:10:06,199
it's open<font color="#CCCCCC"> source that every software</font>

267
00:10:04,280 --> 00:10:08,000
<font color="#E5E5E5">will publish for it it's open source but</font>

268
00:10:06,200 --> 00:10:11,210
<font color="#E5E5E5">also the hardware layout is as open</font>

269
00:10:08,000 --> 00:10:13,580
source as<font color="#E5E5E5"> possible and at the end it's a</font>

270
00:10:11,210 --> 00:10:17,120
very tiny device as<font color="#CCCCCC"> you can see 65</font>

271
00:10:13,580 --> 00:10:19,340
<font color="#E5E5E5">millimeters by 19 by 6 we have</font><font color="#CCCCCC"> a micro</font>

272
00:10:17,120 --> 00:10:20,690
SD<font color="#E5E5E5"> card</font><font color="#CCCCCC"> slot which is where all of</font><font color="#E5E5E5"> the</font>

273
00:10:19,340 --> 00:10:22,130
code comes from<font color="#CCCCCC"> so there's no</font>

274
00:10:20,690 --> 00:10:24,500
persistence on the device all<font color="#CCCCCC"> of the</font>

275
00:10:22,130 --> 00:10:26,840
code which<font color="#CCCCCC"> has been</font><font color="#E5E5E5"> executed</font><font color="#CCCCCC"> other than</font>

276
00:10:24,500 --> 00:10:28,190
a<font color="#E5E5E5"> very tiny brute</font><font color="#CCCCCC"> forum which can be</font>

277
00:10:26,840 --> 00:10:30,680
dumped by<font color="#CCCCCC"> the way which is</font><font color="#E5E5E5"> not something</font>

278
00:10:28,190 --> 00:10:33,140
<font color="#CCCCCC">that can be done on most hardware so you</font>

279
00:10:30,680 --> 00:10:34,910
<font color="#CCCCCC">can expect that</font><font color="#E5E5E5"> at least all the code</font>

280
00:10:33,140 --> 00:10:38,120
comes<font color="#CCCCCC"> from your micro SD</font><font color="#E5E5E5"> card we have a</font>

281
00:10:34,910 --> 00:10:41,000
breakout header for GPIO serial<font color="#CCCCCC"> i-square</font>

282
00:10:38,120 --> 00:10:43,250
CSPI and so on and we also have a<font color="#E5E5E5"> LED</font>

283
00:10:41,000 --> 00:10:45,350
which in case<font color="#E5E5E5"> you using Trustin can also</font>

284
00:10:43,250 --> 00:10:47,540
be used to indicate<font color="#E5E5E5"> that the</font><font color="#CCCCCC"> Trustin</font>

285
00:10:45,350 --> 00:10:49,310
<font color="#E5E5E5">code is being executed if you want that</font>

286
00:10:47,540 --> 00:10:51,829
was the original<font color="#CCCCCC"> reason</font><font color="#E5E5E5"> for putting it</font>

287
00:10:49,310 --> 00:10:54,439
there and is now supported by<font color="#CCCCCC"> Debian</font>

288
00:10:51,830 --> 00:10:57,430
<font color="#CCCCCC">Ubuntu Arch Linux arm</font><font color="#E5E5E5"> genie otherwise</font>

289
00:10:54,440 --> 00:11:03,020
again and it can emulate<font color="#E5E5E5"> any USB device</font>

290
00:10:57,430 --> 00:11:04,880
<font color="#E5E5E5">so this device is primarily designed and</font>

291
00:11:03,020 --> 00:11:07,020
was primarily<font color="#E5E5E5"> designed to be used in</font>

292
00:11:04,880 --> 00:11:09,180
<font color="#CCCCCC">device mode</font><font color="#E5E5E5"> but</font>

293
00:11:07,020 --> 00:11:11,160
<font color="#E5E5E5">you know and actually</font><font color="#CCCCCC"> after</font><font color="#E5E5E5"> having the</font>

294
00:11:09,180 --> 00:11:13,560
the first<font color="#CCCCCC"> production we realized that</font>

295
00:11:11,160 --> 00:11:15,540
the<font color="#E5E5E5"> USB controller</font><font color="#CCCCCC"> and this devices is</font>

296
00:11:13,560 --> 00:11:17,609
so forgiving that<font color="#E5E5E5"> even if the hardware</font>

297
00:11:15,540 --> 00:11:20,520
layout was specifically designed<font color="#E5E5E5"> for</font>

298
00:11:17,610 --> 00:11:21,960
<font color="#CCCCCC">device</font><font color="#E5E5E5"> mode so we were driving the IDP</font>

299
00:11:20,520 --> 00:11:24,000
in a certain state that usually<font color="#CCCCCC"> it's</font>

300
00:11:21,960 --> 00:11:26,040
associated<font color="#CCCCCC"> to device mode we can also</font>

301
00:11:24,000 --> 00:11:27,480
<font color="#E5E5E5">have it to host mode so this was</font>

302
00:11:26,040 --> 00:11:30,000
actually a picture<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the first test</font>

303
00:11:27,480 --> 00:11:33,180
<font color="#CCCCCC">that we did</font><font color="#E5E5E5"> where with a very crude</font>

304
00:11:30,000 --> 00:11:36,300
breadboard<font color="#E5E5E5"> gender converter we converted</font>

305
00:11:33,180 --> 00:11:38,430
the male USB<font color="#E5E5E5"> form factor to a female USB</font>

306
00:11:36,300 --> 00:11:41,640
form factor<font color="#E5E5E5"> and we</font><font color="#CCCCCC"> attached it to</font><font color="#E5E5E5"> a</font>

307
00:11:38,430 --> 00:11:44,069
power USB hub<font color="#CCCCCC"> we plug a Wi-Fi car</font><font color="#E5E5E5"> a USB</font>

308
00:11:41,640 --> 00:11:45,900
keyboard<font color="#E5E5E5"> USB mouse a USB displays and</font>

309
00:11:44,070 --> 00:11:48,450
then we could actually use the device

310
00:11:45,900 --> 00:11:50,579
<font color="#CCCCCC">entirely on its</font><font color="#E5E5E5"> own so because we</font>

311
00:11:48,450 --> 00:11:52,050
thought this<font color="#CCCCCC"> could be</font><font color="#E5E5E5"> also nice for</font>

312
00:11:50,580 --> 00:11:55,500
certain application<font color="#E5E5E5"> just</font><font color="#CCCCCC"> to have it on</font>

313
00:11:52,050 --> 00:11:59,069
<font color="#E5E5E5">its own we design a very inexpensive and</font>

314
00:11:55,500 --> 00:12:01,650
cheap<font color="#CCCCCC"> host adapter which just changes</font>

315
00:11:59,070 --> 00:12:03,330
the gender of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> USB Armory this is one</font>

316
00:12:01,650 --> 00:12:05,189
configuration flag in the<font color="#E5E5E5"> Linux kernel</font>

317
00:12:03,330 --> 00:12:06,750
you flipped and then you can use<font color="#E5E5E5"> the</font>

318
00:12:05,190 --> 00:12:09,740
completely standalone<font color="#E5E5E5"> so in this example</font>

319
00:12:06,750 --> 00:12:12,690
you<font color="#E5E5E5"> there's a Wi-Fi adapter</font><font color="#CCCCCC"> on the left</font>

320
00:12:09,740 --> 00:12:14,310
<font color="#CCCCCC">you just feed power back in and then you</font>

321
00:12:12,690 --> 00:12:16,290
you can use<font color="#E5E5E5"> it as your own</font><font color="#CCCCCC"> you know</font>

322
00:12:14,310 --> 00:12:18,270
access<font color="#E5E5E5"> point or whatever you want so</font>

323
00:12:16,290 --> 00:12:20,819
this<font color="#E5E5E5"> was also some it was nice to see</font>

324
00:12:18,270 --> 00:12:23,250
that<font color="#E5E5E5"> we had the</font><font color="#CCCCCC"> capability of</font><font color="#E5E5E5"> doing this</font>

325
00:12:20,820 --> 00:12:25,890
but<font color="#E5E5E5"> after you know we</font><font color="#CCCCCC"> produced the</font>

326
00:12:23,250 --> 00:12:27,600
device so we didn't<font color="#CCCCCC"> think it before it's</font>

327
00:12:25,890 --> 00:12:30,449
but<font color="#E5E5E5"> it's just something that we could do</font>

328
00:12:27,600 --> 00:12:31,860
it<font color="#CCCCCC"> afterwards and it's because</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> USB</font><font color="#E5E5E5"> OS</font>

329
00:12:30,450 --> 00:12:33,450
controller it's it's you know<font color="#E5E5E5"> it</font>

330
00:12:31,860 --> 00:12:35,400
actually<font color="#E5E5E5"> provides you a lot of freedom</font>

331
00:12:33,450 --> 00:12:36,930
<font color="#E5E5E5">which</font><font color="#CCCCCC"> also you know it's also a good</font>

332
00:12:35,400 --> 00:12:39,870
thing<font color="#E5E5E5"> for testing as I will mention</font>

333
00:12:36,930 --> 00:12:43,069
later<font color="#E5E5E5"> on so for developing this kind</font><font color="#CCCCCC"> of</font>

334
00:12:39,870 --> 00:12:43,070
hard work being so tiny

335
00:12:43,200 --> 00:12:46,500
typically the components that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> use</font>

336
00:12:44,850 --> 00:12:48,600
for this<font color="#E5E5E5"> kind of design are BGA</font>

337
00:12:46,500 --> 00:12:51,960
component so BGA is<font color="#E5E5E5"> ball grid array</font>

338
00:12:48,600 --> 00:12:53,640
which means<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> have form a</font>

339
00:12:51,960 --> 00:12:56,400
packaging factor where all of your

340
00:12:53,640 --> 00:12:59,490
contacts are below the actual component

341
00:12:56,400 --> 00:13:02,189
and it's actually you<font color="#CCCCCC"> know it's fairly</font>

342
00:12:59,490 --> 00:13:02,520
difficult to<font color="#E5E5E5"> solder and</font><font color="#CCCCCC"> D solder this on</font>

343
00:13:02,190 --> 00:13:04,680
your own

344
00:13:02,520 --> 00:13:08,280
and so prototyping<font color="#E5E5E5"> these kind of devices</font>

345
00:13:04,680 --> 00:13:10,079
<font color="#CCCCCC">is is always quite a challenge so we</font>

346
00:13:08,280 --> 00:13:11,910
fought to be<font color="#E5E5E5"> clever at first and we</font>

347
00:13:10,080 --> 00:13:14,370
<font color="#CCCCCC">thought ok let's create a breakout board</font>

348
00:13:11,910 --> 00:13:16,350
<font color="#E5E5E5">where</font><font color="#CCCCCC"> without</font><font color="#E5E5E5"> having to solar anything</font>

349
00:13:14,370 --> 00:13:18,960
so we bought this this<font color="#E5E5E5"> is a very nice</font>

350
00:13:16,350 --> 00:13:19,470
but<font color="#CCCCCC"> expensive socket which allows you to</font>

351
00:13:18,960 --> 00:13:21,780
<font color="#E5E5E5">climb</font>

352
00:13:19,470 --> 00:13:23,670
and screw the system<font color="#E5E5E5"> on a chip on a</font>

353
00:13:21,780 --> 00:13:26,339
socket<font color="#E5E5E5"> which requires no soldering</font>

354
00:13:23,670 --> 00:13:27,959
whatsoever<font color="#E5E5E5"> and then we bro you can break</font>

355
00:13:26,340 --> 00:13:30,450
out all of the different<font color="#CCCCCC"> connections of</font>

356
00:13:27,960 --> 00:13:33,030
the<font color="#E5E5E5"> system on a chip in order to to do</font>

357
00:13:30,450 --> 00:13:34,470
some<font color="#E5E5E5"> development on</font><font color="#CCCCCC"> it and we thought it</font>

358
00:13:33,030 --> 00:13:38,270
was<font color="#E5E5E5"> a good</font><font color="#CCCCCC"> idea at the time it was a</font>

359
00:13:34,470 --> 00:13:41,130
terrible idea in in<font color="#E5E5E5"> fact because the</font>

360
00:13:38,270 --> 00:13:43,020
tolerances<font color="#E5E5E5"> for</font><font color="#CCCCCC"> the various distances of</font>

361
00:13:41,130 --> 00:13:44,760
<font color="#CCCCCC">the components</font><font color="#E5E5E5"> required for powering up</font>

362
00:13:43,020 --> 00:13:48,090
the system on a chip in<font color="#E5E5E5"> the first place</font>

363
00:13:44,760 --> 00:13:51,510
<font color="#E5E5E5">are so high that it's very difficult</font><font color="#CCCCCC"> to</font>

364
00:13:48,090 --> 00:13:54,600
<font color="#CCCCCC">create a</font><font color="#E5E5E5"> working power regulator for</font>

365
00:13:51,510 --> 00:13:56,670
this device<font color="#E5E5E5"> by Sol right on your own so</font>

366
00:13:54,600 --> 00:13:58,320
this ring has about<font color="#CCCCCC"> six or seven power</font>

367
00:13:56,670 --> 00:13:59,790
rails and<font color="#E5E5E5"> we will get you know most of</font>

368
00:13:58,320 --> 00:14:02,160
them will be<font color="#E5E5E5"> stable but then</font><font color="#CCCCCC"> will be one</font>

369
00:13:59,790 --> 00:14:04,079
<font color="#CCCCCC">of</font><font color="#E5E5E5"> two that will be</font><font color="#CCCCCC"> unstable</font><font color="#E5E5E5"> so at the</font>

370
00:14:02,160 --> 00:14:06,209
end we<font color="#CCCCCC"> realize that in order</font><font color="#E5E5E5"> to do the</font>

371
00:14:04,080 --> 00:14:09,780
power components for<font color="#E5E5E5"> this device we</font>

372
00:14:06,210 --> 00:14:11,610
actually need an actual PCB but if you

373
00:14:09,780 --> 00:14:13,260
have a PCB for the power component then

374
00:14:11,610 --> 00:14:15,090
you can put the system on a chip on the

375
00:14:13,260 --> 00:14:16,620
PCB<font color="#E5E5E5"> as well and if you</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> that then you</font>

376
00:14:15,090 --> 00:14:18,420
can<font color="#CCCCCC"> also put the ROM and if you do that</font>

377
00:14:16,620 --> 00:14:19,740
you can also put<font color="#CCCCCC"> a microSD and if you do</font>

378
00:14:18,420 --> 00:14:22,439
that then you have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first prototype</font>

379
00:14:19,740 --> 00:14:24,540
<font color="#CCCCCC">so the first prototype</font><font color="#E5E5E5"> of the device</font><font color="#CCCCCC"> was</font>

380
00:14:22,440 --> 00:14:27,090
actually<font color="#E5E5E5"> something which is surprisingly</font>

381
00:14:24,540 --> 00:14:29,160
close to this to this final<font color="#E5E5E5"> design</font><font color="#CCCCCC"> so</font>

382
00:14:27,090 --> 00:14:32,220
the message here<font color="#CCCCCC"> is that if you're doing</font>

383
00:14:29,160 --> 00:14:34,620
open hardware<font color="#E5E5E5"> you know be brave</font><font color="#CCCCCC"> you know</font>

384
00:14:32,220 --> 00:14:36,270
<font color="#CCCCCC">you know sometimes if you try</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> over</font>

385
00:14:34,620 --> 00:14:38,820
<font color="#CCCCCC">think in</font><font color="#E5E5E5"> and over optimize your</font>

386
00:14:36,270 --> 00:14:40,439
development process<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> end up you</font>

387
00:14:38,820 --> 00:14:43,190
<font color="#E5E5E5">know</font><font color="#CCCCCC"> doing the</font><font color="#E5E5E5"> brown choice and actually</font>

388
00:14:40,440 --> 00:14:45,240
in our case<font color="#E5E5E5"> going for the final design</font>

389
00:14:43,190 --> 00:14:46,860
from the beginning what does it was

390
00:14:45,240 --> 00:14:49,440
actually the right<font color="#E5E5E5"> choice so this was an</font>

391
00:14:46,860 --> 00:14:51,420
<font color="#CCCCCC">effort which you know maybe we would</font>

392
00:14:49,440 --> 00:14:52,680
<font color="#CCCCCC">have saved some money if if this would</font>

393
00:14:51,420 --> 00:14:55,079
<font color="#E5E5E5">have been would</font><font color="#CCCCCC"> have worked but</font>

394
00:14:52,680 --> 00:14:57,060
<font color="#E5E5E5">certainly didn't save us time and</font><font color="#CCCCCC"> at the</font>

395
00:14:55,080 --> 00:14:59,280
end<font color="#CCCCCC"> also didn't save us any money</font>

396
00:14:57,060 --> 00:15:00,540
so this breakout board which we did is

397
00:14:59,280 --> 00:15:02,069
<font color="#CCCCCC">very</font><font color="#E5E5E5"> fancy</font><font color="#CCCCCC"> it's like a super</font>

398
00:15:00,540 --> 00:15:05,040
stardestroyer something which is

399
00:15:02,070 --> 00:15:06,540
expensive<font color="#E5E5E5"> it's big but it really doesn't</font>

400
00:15:05,040 --> 00:15:07,980
work<font color="#E5E5E5"> and it's gonna crash down on a</font>

401
00:15:06,540 --> 00:15:10,170
planet or<font color="#E5E5E5"> something yeah so you know</font>

402
00:15:07,980 --> 00:15:11,610
<font color="#E5E5E5">it's there in our office it's very nice</font>

403
00:15:10,170 --> 00:15:14,280
it was<font color="#CCCCCC"> a brilliant effort you know</font>

404
00:15:11,610 --> 00:15:16,980
<font color="#E5E5E5">completely useless so you know lesson</font>

405
00:15:14,280 --> 00:15:20,189
<font color="#E5E5E5">learned</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it makes for good pictures</font>

406
00:15:16,980 --> 00:15:22,650
the second challenge<font color="#CCCCCC"> was</font><font color="#E5E5E5"> that we wanted</font>

407
00:15:20,190 --> 00:15:25,380
the design<font color="#E5E5E5"> to be open but we also wanted</font>

408
00:15:22,650 --> 00:15:28,050
the tools to modify and access the

409
00:15:25,380 --> 00:15:29,910
design to<font color="#E5E5E5"> be open as well because if we</font>

410
00:15:28,050 --> 00:15:31,620
you do an open design<font color="#E5E5E5"> and you publish</font>

411
00:15:29,910 --> 00:15:33,459
the sources of<font color="#E5E5E5"> something which requires</font>

412
00:15:31,620 --> 00:15:35,889
a<font color="#CCCCCC"> twenty thousand euro license</font>

413
00:15:33,459 --> 00:15:37,329
<font color="#E5E5E5">you know it is open technically but you</font>

414
00:15:35,889 --> 00:15:39,550
know it's not<font color="#E5E5E5"> something which</font><font color="#CCCCCC"> is nice so</font>

415
00:15:37,329 --> 00:15:42,609
<font color="#CCCCCC">we decided</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> Kai CAD or</font><font color="#E5E5E5"> a ticket</font>

416
00:15:39,550 --> 00:15:45,878
for for for<font color="#E5E5E5"> this project which is</font>

417
00:15:42,610 --> 00:15:48,040
<font color="#E5E5E5">open-source</font><font color="#CCCCCC"> software which you know when</font>

418
00:15:45,879 --> 00:15:50,410
you want to make such a tiny<font color="#E5E5E5"> design it</font>

419
00:15:48,040 --> 00:15:52,179
really really doesn't<font color="#E5E5E5"> help you in</font>

420
00:15:50,410 --> 00:15:55,689
<font color="#E5E5E5">achieving your goal and one of the</font>

421
00:15:52,179 --> 00:15:58,509
biggest<font color="#E5E5E5"> challenges here was that</font><font color="#CCCCCC"> so on</font>

422
00:15:55,689 --> 00:16:00,009
the right<font color="#CCCCCC"> side you have the ROM module</font>

423
00:15:58,509 --> 00:16:02,949
and on the left side you have<font color="#CCCCCC"> the</font>

424
00:16:00,009 --> 00:16:05,499
<font color="#CCCCCC">system-on-a-chip</font><font color="#E5E5E5"> and all the traces that</font>

425
00:16:02,949 --> 00:16:07,748
<font color="#CCCCCC">needs to go from</font><font color="#E5E5E5"> the ROM to the system</font>

426
00:16:05,499 --> 00:16:09,759
<font color="#E5E5E5">on a chip</font><font color="#CCCCCC"> they all need to</font><font color="#E5E5E5"> be exactly on</font>

427
00:16:07,749 --> 00:16:12,490
the same<font color="#E5E5E5"> length to the FIR decimal point</font>

428
00:16:09,759 --> 00:16:15,519
of a millimeter<font color="#E5E5E5"> and that's because a you</font>

429
00:16:12,490 --> 00:16:17,350
don't<font color="#E5E5E5"> want to take any chances and be</font>

430
00:16:15,519 --> 00:16:18,910
<font color="#E5E5E5">because you know if one of them is</font>

431
00:16:17,350 --> 00:16:21,699
longer than the<font color="#CCCCCC"> other then you're gonna</font>

432
00:16:18,910 --> 00:16:25,629
<font color="#E5E5E5">have</font><font color="#CCCCCC"> RAM issues which you cannot simply</font>

433
00:16:21,699 --> 00:16:26,769
<font color="#E5E5E5">fix and at the time and even now</font><font color="#CCCCCC"> it's</font>

434
00:16:25,629 --> 00:16:28,720
not<font color="#E5E5E5"> really mature</font>

435
00:16:26,769 --> 00:16:31,929
there was no length trace matching

436
00:16:28,720 --> 00:16:34,179
feature<font color="#E5E5E5"> into</font><font color="#CCCCCC"> kicad so all of this was</font>

437
00:16:31,929 --> 00:16:35,970
done<font color="#CCCCCC"> completely by</font><font color="#E5E5E5"> hand</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> matching</font>

438
00:16:34,179 --> 00:16:38,499
<font color="#E5E5E5">the length of</font><font color="#CCCCCC"> all of these traces</font><font color="#E5E5E5"> and</font>

439
00:16:35,970 --> 00:16:40,809
normally when you<font color="#CCCCCC"> are breaking out these</font>

440
00:16:38,499 --> 00:16:42,639
connections you can go<font color="#CCCCCC"> around the system</font>

441
00:16:40,809 --> 00:16:45,699
<font color="#CCCCCC">on a chip from multiple angles so you</font>

442
00:16:42,639 --> 00:16:47,619
can go on the side here<font color="#E5E5E5"> and also you</font>

443
00:16:45,699 --> 00:16:49,089
have a longer<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can have a longer</font>

444
00:16:47,619 --> 00:16:50,769
<font color="#E5E5E5">distance between the system on a chip</font>

445
00:16:49,089 --> 00:16:53,259
and<font color="#E5E5E5"> the round which gives you</font><font color="#CCCCCC"> more room</font>

446
00:16:50,769 --> 00:16:54,699
to<font color="#E5E5E5"> do a lot of zigzags and do the length</font>

447
00:16:53,259 --> 00:16:58,860
<font color="#E5E5E5">trace matching but here we don't have</font>

448
00:16:54,699 --> 00:17:01,809
<font color="#CCCCCC">that because our system on chip is at</font>

449
00:16:58,860 --> 00:17:03,490
<font color="#E5E5E5">exactly the edge of the boardroom two</font>

450
00:17:01,809 --> 00:17:05,470
sides<font color="#E5E5E5"> so this was quite a challenge</font>

451
00:17:03,490 --> 00:17:07,329
which which<font color="#E5E5E5"> we'd assumed but you know</font>

452
00:17:05,470 --> 00:17:09,909
for the sake of open<font color="#E5E5E5"> source we took the</font>

453
00:17:07,329 --> 00:17:11,529
effort<font color="#CCCCCC"> of doing</font><font color="#E5E5E5"> this my hand and</font><font color="#CCCCCC"> a DME</font>

454
00:17:09,909 --> 00:17:13,899
worked and that<font color="#E5E5E5"> was one of</font><font color="#CCCCCC"> our biggest</font>

455
00:17:11,529 --> 00:17:17,789
<font color="#E5E5E5">risk that the ROM would just note not</font>

456
00:17:13,898 --> 00:17:21,489
work<font color="#E5E5E5"> properly on</font><font color="#CCCCCC"> the other hand the 3d</font>

457
00:17:17,789 --> 00:17:24,579
viewing capabilities of<font color="#CCCCCC"> Pi cuts</font><font color="#E5E5E5"> sorry it</font>

458
00:17:21,490 --> 00:17:26,140
<font color="#E5E5E5">is a huge fly here</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> really</font>

459
00:17:24,579 --> 00:17:27,698
they're<font color="#CCCCCC"> really excellent</font><font color="#E5E5E5"> which they are</font>

460
00:17:26,140 --> 00:17:29,200
not really<font color="#CCCCCC"> that useful but at least</font><font color="#E5E5E5"> as</font>

461
00:17:27,699 --> 00:17:30,730
an<font color="#CCCCCC"> open-source tool this works</font>

462
00:17:29,200 --> 00:17:33,950
brilliantly<font color="#CCCCCC"> and much</font><font color="#E5E5E5"> better than</font>

463
00:17:30,730 --> 00:17:35,570
commercial<font color="#E5E5E5"> tools so there's that</font>

464
00:17:33,950 --> 00:17:37,430
so the schematics can be downloaded<font color="#E5E5E5"> you</font>

465
00:17:35,570 --> 00:17:39,379
<font color="#CCCCCC">can modify them</font><font color="#E5E5E5"> you can access them so</font>

466
00:17:37,430 --> 00:17:41,750
the electrical<font color="#E5E5E5"> schematic as well as the</font>

467
00:17:39,380 --> 00:17:43,610
PCB layout<font color="#E5E5E5"> so and it's licensed with a</font>

468
00:17:41,750 --> 00:17:45,680
certain license which has no commercial

469
00:17:43,610 --> 00:17:48,290
restriction whatsoever so it's<font color="#E5E5E5"> as open</font>

470
00:17:45,680 --> 00:17:51,110
as<font color="#E5E5E5"> it gets in</font><font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of hardware design</font>

471
00:17:48,290 --> 00:17:53,420
<font color="#E5E5E5">so this was the Alpha prototype which is</font>

472
00:17:51,110 --> 00:17:55,360
the same four factor as<font color="#CCCCCC"> the final</font>

473
00:17:53,420 --> 00:17:58,760
version but<font color="#E5E5E5"> he has a</font><font color="#CCCCCC"> Jetta connector</font>

474
00:17:55,360 --> 00:18:01,610
there<font color="#E5E5E5"> so that in case something would go</font>

475
00:17:58,760 --> 00:18:03,710
wrong we could<font color="#E5E5E5"> easily access access that</font>

476
00:18:01,610 --> 00:18:06,830
port<font color="#E5E5E5"> and it was also designed so that we</font>

477
00:18:03,710 --> 00:18:09,350
could cut those<font color="#CCCCCC"> two access</font>

478
00:18:06,830 --> 00:18:11,419
surfaces and it would actually<font color="#E5E5E5"> still</font>

479
00:18:09,350 --> 00:18:16,340
work and<font color="#E5E5E5"> it would actually represent our</font>

480
00:18:11,420 --> 00:18:19,340
final form factor<font color="#CCCCCC"> it turns out no</font><font color="#E5E5E5"> it</font>

481
00:18:16,340 --> 00:18:20,899
turns out that the Jetta connection

482
00:18:19,340 --> 00:18:22,850
<font color="#E5E5E5">wasn't actually necessary because our</font>

483
00:18:20,900 --> 00:18:25,490
first<font color="#E5E5E5"> alpha prototype work right away</font>

484
00:18:22,850 --> 00:18:27,770
but nonetheless it<font color="#CCCCCC"> was there and this is</font>

485
00:18:25,490 --> 00:18:30,320
now<font color="#E5E5E5"> in our office</font><font color="#CCCCCC"> museum the first board</font>

486
00:18:27,770 --> 00:18:31,490
worked right away<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I think you know</font>

487
00:18:30,320 --> 00:18:32,990
it's kind of amazing<font color="#CCCCCC"> that with</font>

488
00:18:31,490 --> 00:18:36,020
completely<font color="#E5E5E5"> hundred-percent open-source</font>

489
00:18:32,990 --> 00:18:38,030
tools in you know<font color="#E5E5E5"> two months you can</font>

490
00:18:36,020 --> 00:18:39,530
design<font color="#E5E5E5"> from</font><font color="#CCCCCC"> scratch</font><font color="#E5E5E5"> or hardware which</font><font color="#CCCCCC"> is</font>

491
00:18:38,030 --> 00:18:41,360
a full<font color="#CCCCCC"> computer of that form factor</font>

492
00:18:39,530 --> 00:18:43,520
<font color="#CCCCCC">which is</font><font color="#E5E5E5"> more powerful</font><font color="#CCCCCC"> than a pension to</font>

493
00:18:41,360 --> 00:18:45,949
of a few years ago<font color="#E5E5E5"> I think it's it's</font>

494
00:18:43,520 --> 00:18:49,010
rather cool but Darth Vader there

495
00:18:45,950 --> 00:18:50,510
prefers black much more than green so we

496
00:18:49,010 --> 00:18:52,280
made it<font color="#E5E5E5"> black so they would look</font><font color="#CCCCCC"> even</font>

497
00:18:50,510 --> 00:18:53,540
cooler<font color="#E5E5E5"> because you know that's</font><font color="#CCCCCC"> the way</font>

498
00:18:52,280 --> 00:18:55,280
it's supposed<font color="#CCCCCC"> to be it's supposed</font><font color="#E5E5E5"> to</font>

499
00:18:53,540 --> 00:18:57,080
look cool as well<font color="#E5E5E5"> so you can see the</font>

500
00:18:55,280 --> 00:18:58,790
different<font color="#CCCCCC"> iterations of the</font><font color="#E5E5E5"> the boards</font>

501
00:18:57,080 --> 00:19:01,790
<font color="#E5E5E5">that was the Alpha prototype with the</font>

502
00:18:58,790 --> 00:19:04,010
betas what we did we we found out the

503
00:19:01,790 --> 00:19:06,470
number<font color="#E5E5E5"> of revisions</font><font color="#CCCCCC"> that we could do in</font>

504
00:19:04,010 --> 00:19:08,750
one single<font color="#E5E5E5"> production so in a single</font>

505
00:19:06,470 --> 00:19:11,270
panel we could do<font color="#E5E5E5"> seven</font><font color="#CCCCCC"> different</font>

506
00:19:08,750 --> 00:19:13,430
versions<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we try</font><font color="#E5E5E5"> to optimize and lose</font>

507
00:19:11,270 --> 00:19:15,530
<font color="#E5E5E5">certain components over replace certain</font>

508
00:19:13,430 --> 00:19:17,810
powering methods<font color="#CCCCCC"> we'd components that</font>

509
00:19:15,530 --> 00:19:19,700
<font color="#E5E5E5">would not cost</font><font color="#CCCCCC"> five euros my baby would</font>

510
00:19:17,810 --> 00:19:22,129
cost money<font color="#CCCCCC"> more us to try to optimize</font>

511
00:19:19,700 --> 00:19:25,070
<font color="#CCCCCC">the design</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> much as we could and to</font>

512
00:19:22,130 --> 00:19:28,010
lower the cost<font color="#E5E5E5"> and we found two versions</font>

513
00:19:25,070 --> 00:19:30,560
that were good for that purposes<font color="#E5E5E5"> one was</font>

514
00:19:28,010 --> 00:19:33,350
much more<font color="#CCCCCC"> strict more stripped-down</font><font color="#E5E5E5"> than</font>

515
00:19:30,560 --> 00:19:34,730
the<font color="#CCCCCC"> curve version but it</font><font color="#E5E5E5"> was consuming</font>

516
00:19:33,350 --> 00:19:36,889
<font color="#E5E5E5">more current it was draining more</font>

517
00:19:34,730 --> 00:19:38,870
current so it wasn't as effective so we

518
00:19:36,890 --> 00:19:41,630
<font color="#CCCCCC">found the best balance of features and</font>

519
00:19:38,870 --> 00:19:44,659
<font color="#E5E5E5">then we made the final version which is</font>

520
00:19:41,630 --> 00:19:47,049
there so we basically<font color="#E5E5E5"> went</font><font color="#CCCCCC"> through three</font>

521
00:19:44,660 --> 00:19:49,570
different production runs<font color="#CCCCCC"> to</font>

522
00:19:47,049 --> 00:19:52,389
<font color="#E5E5E5">to find the the final production version</font>

523
00:19:49,570 --> 00:19:55,658
and the second one it was testing seven

524
00:19:52,389 --> 00:19:57,519
different<font color="#E5E5E5"> designs</font><font color="#CCCCCC"> at the same time</font><font color="#E5E5E5"> okay</font>

525
00:19:55,659 --> 00:19:58,809
<font color="#E5E5E5">so</font><font color="#CCCCCC"> now before</font><font color="#E5E5E5"> covering the software</font><font color="#CCCCCC"> that</font>

526
00:19:57,519 --> 00:20:01,350
<font color="#CCCCCC">we're on device I'm going to</font><font color="#E5E5E5"> talk about</font>

527
00:19:58,809 --> 00:20:04,149
the security<font color="#E5E5E5"> features of it so the first</font>

528
00:20:01,350 --> 00:20:06,189
<font color="#E5E5E5">most important one is secure boot</font>

529
00:20:04,149 --> 00:20:09,488
so the<font color="#CCCCCC"> system-on-a-chip supports</font><font color="#E5E5E5"> high</font>

530
00:20:06,190 --> 00:20:11,019
<font color="#CCCCCC">surance boot which allows to fuse</font><font color="#E5E5E5"> your</font>

531
00:20:09,489 --> 00:20:14,320
own public keys<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> talking about</font>

532
00:20:11,019 --> 00:20:16,480
<font color="#CCCCCC">om keys that we put or that and XP</font><font color="#E5E5E5"> boots</font>

533
00:20:14,320 --> 00:20:18,100
<font color="#E5E5E5">you can fuse your own fuse your own</font>

534
00:20:16,480 --> 00:20:20,580
public keys and<font color="#E5E5E5"> this is a one-time</font>

535
00:20:18,100 --> 00:20:23,498
permanent operation

536
00:20:20,580 --> 00:20:26,199
that then are going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> used to verify</font>

537
00:20:23,499 --> 00:20:27,609
<font color="#E5E5E5">the authenticity of the bootloader</font><font color="#CCCCCC"> that</font>

538
00:20:26,200 --> 00:20:29,499
you're gonna execute which in this case

539
00:20:27,609 --> 00:20:31,600
is you would mean can<font color="#E5E5E5"> be anything</font><font color="#CCCCCC"> but</font>

540
00:20:29,499 --> 00:20:35,529
you<font color="#CCCCCC"> good is the one</font><font color="#E5E5E5"> that supports this</font>

541
00:20:31,600 --> 00:20:37,570
this device<font color="#E5E5E5"> and this activation</font><font color="#CCCCCC"> unlike a</font>

542
00:20:35,529 --> 00:20:39,489
PC it's not that you can go<font color="#CCCCCC"> into the</font>

543
00:20:37,570 --> 00:20:41,830
BIOS or something and<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you can reset</font>

544
00:20:39,489 --> 00:20:44,200
or clear that option once you do it<font color="#CCCCCC"> is</font>

545
00:20:41,830 --> 00:20:46,899
<font color="#E5E5E5">there forever and this is a feature not</font>

546
00:20:44,200 --> 00:20:48,580
a bug<font color="#E5E5E5"> and you can also</font><font color="#CCCCCC"> provoke up</font><font color="#E5E5E5"> free</font>

547
00:20:46,899 --> 00:20:50,498
keys out of<font color="#CCCCCC"> four so you can also do nice</font>

548
00:20:48,580 --> 00:20:53,139
things like<font color="#E5E5E5"> you put free legitimate</font>

549
00:20:50,499 --> 00:20:55,359
<font color="#E5E5E5">public keys the fourth is random and</font>

550
00:20:53,139 --> 00:20:56,859
then if you revoke the first<font color="#E5E5E5"> free</font><font color="#CCCCCC"> ones</font>

551
00:20:55,359 --> 00:20:59,139
you end up with a brick<font color="#CCCCCC"> and nobody can</font>

552
00:20:56,859 --> 00:21:02,408
<font color="#E5E5E5">ever execute code on</font><font color="#CCCCCC"> it which is</font><font color="#E5E5E5"> also</font>

553
00:20:59,139 --> 00:21:04,959
<font color="#E5E5E5">something that you</font><font color="#CCCCCC"> can do so we have</font>

554
00:21:02,409 --> 00:21:06,850
published procedure for that<font color="#E5E5E5"> by the way</font>

555
00:21:04,960 --> 00:21:10,029
<font color="#CCCCCC">you do it you go into the bootloader</font><font color="#E5E5E5"> and</font>

556
00:21:06,850 --> 00:21:11,709
<font color="#E5E5E5">you fuse the hashes</font><font color="#CCCCCC"> the combined hashes</font>

557
00:21:10,029 --> 00:21:14,649
for the public keys that<font color="#E5E5E5"> you have and</font>

558
00:21:11,710 --> 00:21:16,330
now<font color="#E5E5E5"> also this was part of</font><font color="#CCCCCC"> our effort</font>

559
00:21:14,649 --> 00:21:18,850
which i think is interesting<font color="#CCCCCC"> NXP</font>

560
00:21:16,330 --> 00:21:23,889
provides<font color="#CCCCCC"> code signing tool which allows</font>

561
00:21:18,850 --> 00:21:26,350
<font color="#CCCCCC">you to</font><font color="#E5E5E5"> sign bootloader images but until</font>

562
00:21:23,889 --> 00:21:28,719
very recently<font color="#E5E5E5"> their last version was</font>

563
00:21:26,350 --> 00:21:30,459
buggy<font color="#E5E5E5"> and they wouldn't publish the the</font>

564
00:21:28,720 --> 00:21:33,009
<font color="#E5E5E5">previous version which was</font><font color="#CCCCCC"> working and</font>

565
00:21:30,460 --> 00:21:35,350
anyway<font color="#E5E5E5"> an NDA is required to</font><font color="#CCCCCC"> download</font>

566
00:21:33,009 --> 00:21:36,639
this<font color="#E5E5E5"> this tool which is is annoying well</font>

567
00:21:35,350 --> 00:21:38,678
it's<font color="#CCCCCC"> actually not</font><font color="#E5E5E5"> on NDA it's an</font>

568
00:21:36,639 --> 00:21:40,389
<font color="#E5E5E5">end-user License</font><font color="#CCCCCC"> Agreement</font><font color="#E5E5E5"> which is not</font>

569
00:21:38,679 --> 00:21:43,059
too bad<font color="#CCCCCC"> but it's annoying to go for that</font>

570
00:21:40,389 --> 00:21:44,649
<font color="#E5E5E5">process so for transparency we decided</font>

571
00:21:43,059 --> 00:21:46,330
to re-implement what these tools are

572
00:21:44,649 --> 00:21:48,340
doing as<font color="#E5E5E5"> open source</font><font color="#CCCCCC"> software in a way</font>

573
00:21:46,330 --> 00:21:49,629
that not only<font color="#E5E5E5"> is readable so you can</font>

574
00:21:48,340 --> 00:21:52,389
understand what goes<font color="#E5E5E5"> on and now the</font>

575
00:21:49,629 --> 00:21:53,799
signature is actually computed<font color="#E5E5E5"> but you</font>

576
00:21:52,389 --> 00:21:55,840
know it also<font color="#CCCCCC"> make it</font><font color="#E5E5E5"> easier for</font>

577
00:21:53,799 --> 00:21:58,539
executing<font color="#E5E5E5"> as a</font>

578
00:21:55,840 --> 00:22:00,789
as you know in<font color="#E5E5E5"> your</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> and it</font>

579
00:21:58,539 --> 00:22:03,279
doesn't require<font color="#CCCCCC"> to pool binary blobs</font>

580
00:22:00,789 --> 00:22:06,549
from from<font color="#CCCCCC"> annex B so we provide guides</font>

581
00:22:03,279 --> 00:22:08,799
both in using the annex B tools<font color="#E5E5E5"> which is</font>

582
00:22:06,549 --> 00:22:11,620
not trivial<font color="#E5E5E5"> so that's also a useful</font>

583
00:22:08,799 --> 00:22:14,559
<font color="#E5E5E5">guide for anybody that use uses and XP</font>

584
00:22:11,620 --> 00:22:16,629
tools and we also have our our<font color="#E5E5E5"> the same</font>

585
00:22:14,559 --> 00:22:19,139
guy<font color="#CCCCCC"> by with our</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> our own tools and</font>

586
00:22:16,630 --> 00:22:21,460
<font color="#CCCCCC">everything is on our github repository</font>

587
00:22:19,140 --> 00:22:23,140
<font color="#E5E5E5">and we have two tools one is for the</font>

588
00:22:21,460 --> 00:22:24,970
hash generation which is<font color="#E5E5E5"> then Huson</font>

589
00:22:23,140 --> 00:22:27,039
system-on-a-chip and one is for signing

590
00:22:24,970 --> 00:22:30,309
on the bootloader<font color="#CCCCCC"> they take</font><font color="#E5E5E5"> your keys</font>

591
00:22:27,039 --> 00:22:34,570
and then they produce the output<font color="#E5E5E5"> now</font>

592
00:22:30,309 --> 00:22:38,590
when you want<font color="#CCCCCC"> to maintain a secure chain</font>

593
00:22:34,570 --> 00:22:40,658
of trust<font color="#E5E5E5"> secure boot plays a role</font><font color="#CCCCCC"> only</font>

594
00:22:38,590 --> 00:22:43,720
in the very first phase<font color="#E5E5E5"> so secure boot</font>

595
00:22:40,659 --> 00:22:46,000
provides an anchor between the hardware

596
00:22:43,720 --> 00:22:47,590
and the first piece of<font color="#E5E5E5"> software</font><font color="#CCCCCC"> that</font>

597
00:22:46,000 --> 00:22:50,169
<font color="#E5E5E5">you're going to execute so in</font><font color="#CCCCCC"> this case</font>

598
00:22:47,590 --> 00:22:51,789
the bootloader<font color="#E5E5E5"> so with the</font><font color="#CCCCCC"> to boot</font>

599
00:22:50,169 --> 00:22:53,529
<font color="#CCCCCC">you've use</font><font color="#E5E5E5"> your key in the system</font><font color="#CCCCCC"> on a</font>

600
00:22:51,789 --> 00:22:55,809
chip<font color="#CCCCCC"> and those are</font><font color="#E5E5E5"> used to</font><font color="#CCCCCC"> verify</font><font color="#E5E5E5"> the</font>

601
00:22:53,529 --> 00:22:57,640
bootloader<font color="#CCCCCC"> but then of course</font><font color="#E5E5E5"> you want</font>

602
00:22:55,809 --> 00:22:59,860
<font color="#CCCCCC">to maintain</font><font color="#E5E5E5"> these chain of trust because</font>

603
00:22:57,640 --> 00:23:02,140
<font color="#CCCCCC">if the bootloader</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> verify</font>

604
00:22:59,860 --> 00:23:04,090
<font color="#E5E5E5">your Linux kernel for instance then</font>

605
00:23:02,140 --> 00:23:06,789
having<font color="#CCCCCC"> a secure boot is not</font><font color="#E5E5E5"> really</font>

606
00:23:04,090 --> 00:23:08,949
useful<font color="#E5E5E5"> so you</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> support something</font>

607
00:23:06,789 --> 00:23:12,640
<font color="#E5E5E5">called a verified boot which allows you</font>

608
00:23:08,950 --> 00:23:15,490
to<font color="#CCCCCC"> embed</font><font color="#E5E5E5"> a public key when you're</font>

609
00:23:12,640 --> 00:23:17,350
compiling the bootloader<font color="#E5E5E5"> to verify the</font>

610
00:23:15,490 --> 00:23:19,179
Linux kernel<font color="#E5E5E5"> image that you're that</font>

611
00:23:17,350 --> 00:23:20,860
<font color="#E5E5E5">you're gonna put so and with this</font>

612
00:23:19,179 --> 00:23:22,779
feature you<font color="#E5E5E5"> maintain the chain of trust</font>

613
00:23:20,860 --> 00:23:24,760
<font color="#E5E5E5">because you're you good image has been</font>

614
00:23:22,779 --> 00:23:26,620
verified<font color="#E5E5E5"> by the hardware and it is the</font>

615
00:23:24,760 --> 00:23:29,379
one that<font color="#E5E5E5"> contains the public key which</font>

616
00:23:26,620 --> 00:23:33,250
is<font color="#E5E5E5"> going to verify</font><font color="#CCCCCC"> your Linux kernel</font>

617
00:23:29,380 --> 00:23:37,450
image<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is an</font><font color="#CCCCCC"> example a successfully</font>

618
00:23:33,250 --> 00:23:39,700
booted<font color="#E5E5E5"> you good image so no -</font><font color="#CCCCCC"> Sam are</font>

619
00:23:37,450 --> 00:23:41,200
<font color="#CCCCCC">you</font><font color="#E5E5E5"> sure inspire been found and this is</font>

620
00:23:39,700 --> 00:23:43,090
an example<font color="#CCCCCC"> of a fail attempt now the</font>

621
00:23:41,200 --> 00:23:46,330
example for<font color="#E5E5E5"> the fail attempt here is</font>

622
00:23:43,090 --> 00:23:47,860
<font color="#E5E5E5">done</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> verification mode so</font>

623
00:23:46,330 --> 00:23:49,840
verification mode is an intermediate

624
00:23:47,860 --> 00:23:52,959
step or you're not locking the feature

625
00:23:49,840 --> 00:23:57,250
yet but you can test it and the reason

626
00:23:52,960 --> 00:23:59,110
why you<font color="#CCCCCC"> have this is to test that</font><font color="#E5E5E5"> you</font>

627
00:23:57,250 --> 00:24:00,730
<font color="#E5E5E5">are you know you have the capability of</font>

628
00:23:59,110 --> 00:24:03,490
<font color="#CCCCCC">actually stunning images and then you're</font>

629
00:24:00,730 --> 00:24:05,799
<font color="#E5E5E5">not ending up with a</font><font color="#CCCCCC"> break and and</font><font color="#E5E5E5"> also</font>

630
00:24:03,490 --> 00:24:07,360
when you<font color="#CCCCCC"> have a failure in final mode</font>

631
00:24:05,799 --> 00:24:07,990
you're<font color="#CCCCCC"> not gonna see any output you're</font>

632
00:24:07,360 --> 00:24:10,030
not gonna see a

633
00:24:07,990 --> 00:24:12,520
because the bootloader code is<font color="#E5E5E5"> just not</font>

634
00:24:10,030 --> 00:24:14,530
gonna be executed<font color="#E5E5E5"> so you cannot even</font><font color="#CCCCCC"> get</font>

635
00:24:12,520 --> 00:24:17,860
an output saying<font color="#CCCCCC"> you let secure boot</font>

636
00:24:14,530 --> 00:24:19,928
fail the CPU will just hang and nothing

637
00:24:17,860 --> 00:24:22,928
can happen<font color="#E5E5E5"> because no external code will</font>

638
00:24:19,929 --> 00:24:25,179
ever be executed<font color="#CCCCCC"> and this is an example</font>

639
00:24:22,929 --> 00:24:27,790
of<font color="#E5E5E5"> verified boot</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is an output from</font>

640
00:24:25,179 --> 00:24:30,730
you boot where it will verify<font color="#E5E5E5"> the hashes</font>

641
00:24:27,790 --> 00:24:32,830
<font color="#E5E5E5">for the kernel and the device tree blog</font>

642
00:24:30,730 --> 00:24:35,679
which<font color="#CCCCCC"> is an</font><font color="#E5E5E5"> external file which provides</font>

643
00:24:32,830 --> 00:24:38,439
certain hardware configuration which are

644
00:24:35,679 --> 00:24:39,880
the two pieces<font color="#E5E5E5"> of</font><font color="#CCCCCC"> components watch that</font>

645
00:24:38,440 --> 00:24:43,270
are<font color="#E5E5E5"> going to need</font><font color="#CCCCCC"> it for booting up your</font>

646
00:24:39,880 --> 00:24:45,640
or your<font color="#E5E5E5"> Linux OS I'm gonna explain</font><font color="#CCCCCC"> how</font>

647
00:24:43,270 --> 00:24:46,990
this is<font color="#E5E5E5"> gonna</font><font color="#CCCCCC"> all play it out in the</font>

648
00:24:45,640 --> 00:24:50,440
piece of software<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we provide for</font>

649
00:24:46,990 --> 00:24:52,540
<font color="#CCCCCC">the USB</font><font color="#E5E5E5"> armory in in a second there's a</font>

650
00:24:50,440 --> 00:24:53,980
second<font color="#E5E5E5"> feature a hardware feature on</font>

651
00:24:52,540 --> 00:24:56,230
this<font color="#E5E5E5"> system</font><font color="#CCCCCC"> on a chip which is</font><font color="#E5E5E5"> called</font>

652
00:24:53,980 --> 00:24:58,780
the<font color="#E5E5E5"> SEC v2 this is not a standard as</font>

653
00:24:56,230 --> 00:25:01,360
name don't<font color="#E5E5E5"> don't be fooled</font><font color="#CCCCCC"> by that is</font>

654
00:24:58,780 --> 00:25:04,510
<font color="#E5E5E5">annex B name for a security controller</font>

655
00:25:01,360 --> 00:25:06,309
which<font color="#CCCCCC"> is a some</font><font color="#E5E5E5"> sort of HSM so it's a</font>

656
00:25:04,510 --> 00:25:10,860
<font color="#E5E5E5">hardware module which is in the system</font>

657
00:25:06,309 --> 00:25:15,220
on a chip which implements<font color="#E5E5E5"> 20 56 bit AES</font>

658
00:25:10,860 --> 00:25:16,928
<font color="#E5E5E5">using a key which is</font><font color="#CCCCCC"> fuse in each system</font>

659
00:25:15,220 --> 00:25:19,270
on a chip and<font color="#CCCCCC"> it's unique</font><font color="#E5E5E5"> and it can</font>

660
00:25:16,929 --> 00:25:20,890
never be read it can only<font color="#E5E5E5"> be used so you</font>

661
00:25:19,270 --> 00:25:23,740
can use you<font color="#CCCCCC"> can ask the system on a chip</font>

662
00:25:20,890 --> 00:25:25,600
to do encryption<font color="#CCCCCC"> or decryption but you</font>

663
00:25:23,740 --> 00:25:26,800
can<font color="#CCCCCC"> ever ask it to give you</font><font color="#E5E5E5"> the key back</font>

664
00:25:25,600 --> 00:25:29,889
and there are certain<font color="#CCCCCC"> hardware</font>

665
00:25:26,800 --> 00:25:32,620
properties which protect this key inside

666
00:25:29,890 --> 00:25:35,080
the processor and it is generally<font color="#E5E5E5"> used</font>

667
00:25:32,620 --> 00:25:37,750
<font color="#E5E5E5">to derive device specific secrets for</font>

668
00:25:35,080 --> 00:25:41,260
full disk encryption<font color="#E5E5E5"> and more</font>

669
00:25:37,750 --> 00:25:43,660
importantly this key is only<font color="#CCCCCC"> unlocked to</font>

670
00:25:41,260 --> 00:25:45,460
you if you're secure booting<font color="#E5E5E5"> so if</font>

671
00:25:43,660 --> 00:25:47,350
you're not secure booting there's gonna

672
00:25:45,460 --> 00:25:49,480
be a standard test key which is gonna<font color="#CCCCCC"> be</font>

673
00:25:47,350 --> 00:25:53,050
<font color="#E5E5E5">the same for every device which is gonna</font>

674
00:25:49,480 --> 00:25:55,780
be<font color="#E5E5E5"> used for encryption so and the reason</font>

675
00:25:53,050 --> 00:25:57,700
<font color="#CCCCCC">for this is that the</font><font color="#E5E5E5"> theory</font><font color="#CCCCCC"> is that you</font>

676
00:25:55,780 --> 00:26:00,639
<font color="#E5E5E5">on your own code which supposedly this</font>

677
00:25:57,700 --> 00:26:02,650
<font color="#CCCCCC">is lockdown to be secure boot and</font>

678
00:26:00,640 --> 00:26:04,980
<font color="#CCCCCC">accessing the decryption</font><font color="#E5E5E5"> and encryption</font>

679
00:26:02,650 --> 00:26:09,309
function<font color="#E5E5E5"> otherwise anybody can use them</font>

680
00:26:04,980 --> 00:26:11,140
we ported a driver for this and we

681
00:26:09,309 --> 00:26:13,000
<font color="#E5E5E5">created an additional drivers that</font><font color="#CCCCCC"> allow</font>

682
00:26:11,140 --> 00:26:15,490
<font color="#CCCCCC">us</font><font color="#E5E5E5"> to use</font><font color="#CCCCCC"> these security controller very</font>

683
00:26:13,000 --> 00:26:18,340
easily it's as<font color="#CCCCCC"> easy</font><font color="#E5E5E5"> as opening a</font><font color="#CCCCCC"> carter</font>

684
00:26:15,490 --> 00:26:19,720
device that's a ruby example you said

685
00:26:18,340 --> 00:26:21,649
<font color="#E5E5E5">Damone other encryption or decryption</font>

686
00:26:19,720 --> 00:26:24,410
<font color="#CCCCCC">you said initialization</font>

687
00:26:21,650 --> 00:26:26,660
and then you just speed blobs of data to

688
00:26:24,410 --> 00:26:28,430
the device and<font color="#E5E5E5"> you read back blobs which</font>

689
00:26:26,660 --> 00:26:30,770
are<font color="#E5E5E5"> either</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be encrypted or</font>

690
00:26:28,430 --> 00:26:34,180
decrypted depending on the mode which

691
00:26:30,770 --> 00:26:36,290
you<font color="#E5E5E5"> set and we have</font><font color="#CCCCCC"> support</font><font color="#E5E5E5"> for this in</font>

692
00:26:34,180 --> 00:26:37,130
<font color="#CCCCCC">interlocked software which is what I'm</font>

693
00:26:36,290 --> 00:26:41,899
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> cover now</font>

694
00:26:37,130 --> 00:26:43,840
so<font color="#E5E5E5"> interlock is you know we created</font><font color="#CCCCCC"> this</font>

695
00:26:41,900 --> 00:26:46,670
hardware device and then we wanted<font color="#E5E5E5"> to</font>

696
00:26:43,840 --> 00:26:49,459
you know<font color="#CCCCCC"> create some you know</font><font color="#E5E5E5"> reference</font>

697
00:26:46,670 --> 00:26:51,260
<font color="#CCCCCC">software that actually shows one of the</font>

698
00:26:49,460 --> 00:26:53,180
<font color="#E5E5E5">many ways</font><font color="#CCCCCC"> that you can use it because</font><font color="#E5E5E5"> of</font>

699
00:26:51,260 --> 00:26:55,429
<font color="#CCCCCC">course this</font><font color="#E5E5E5"> is a platform</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

700
00:26:53,180 --> 00:26:57,679
<font color="#CCCCCC">used</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> many purposes</font><font color="#CCCCCC"> so interlock</font>

701
00:26:55,429 --> 00:27:00,170
is an open source file encryption<font color="#E5E5E5"> front</font>

702
00:26:57,679 --> 00:27:01,910
<font color="#E5E5E5">end which was developed for the USB</font>

703
00:27:00,170 --> 00:27:03,920
armory but<font color="#E5E5E5"> it's not limited to be news</font>

704
00:27:01,910 --> 00:27:05,720
on the USB<font color="#E5E5E5"> armory if you have you know</font>

705
00:27:03,920 --> 00:27:07,670
you<font color="#E5E5E5"> can use it on</font><font color="#CCCCCC"> your own laptop if you</font>

706
00:27:05,720 --> 00:27:10,040
<font color="#E5E5E5">want to you can use</font><font color="#CCCCCC"> it on</font><font color="#E5E5E5"> a Raspberry Pi</font>

707
00:27:07,670 --> 00:27:12,140
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can use it</font><font color="#E5E5E5"> on any hardware that you</font>

708
00:27:10,040 --> 00:27:15,350
want as long<font color="#CCCCCC"> as</font><font color="#E5E5E5"> it can run Linux and you</font>

709
00:27:12,140 --> 00:27:17,570
can execute go applications which means

710
00:27:15,350 --> 00:27:19,189
any Linux hardware because you just end

711
00:27:17,570 --> 00:27:21,200
up with a static binary which is just

712
00:27:19,190 --> 00:27:23,840
gonna<font color="#E5E5E5"> work and the point of interlock is</font>

713
00:27:21,200 --> 00:27:27,860
to provide a web accessible file manager

714
00:27:23,840 --> 00:27:29,750
which will be a<font color="#CCCCCC"> front-end</font><font color="#E5E5E5"> for Linux</font>

715
00:27:27,860 --> 00:27:32,149
<font color="#E5E5E5">unified key system encrypted partitions</font>

716
00:27:29,750 --> 00:27:34,100
<font color="#E5E5E5">and also we wanted to put in some</font>

717
00:27:32,150 --> 00:27:35,809
additional<font color="#E5E5E5"> cryptographic operations for</font>

718
00:27:34,100 --> 00:27:37,820
symmetric<font color="#E5E5E5"> and a symmetric operation on</font>

719
00:27:35,809 --> 00:27:40,970
stored files<font color="#E5E5E5"> so I'm gonna show you a</font>

720
00:27:37,820 --> 00:27:43,189
demo of<font color="#E5E5E5"> this application hoping that the</font>

721
00:27:40,970 --> 00:27:45,500
demo gods will be kind to me so I'm

722
00:27:43,190 --> 00:27:47,300
<font color="#CCCCCC">gonna take my</font><font color="#E5E5E5"> own use the armory which</font>

723
00:27:45,500 --> 00:27:50,809
is it's an enclosure we also have an

724
00:27:47,300 --> 00:27:53,270
enclosure by the way and I'm gonna show

725
00:27:50,809 --> 00:27:57,320
you the various<font color="#E5E5E5"> features that</font><font color="#CCCCCC"> this that</font>

726
00:27:53,270 --> 00:27:59,260
this<font color="#E5E5E5"> fronton has so and also what I'm</font>

727
00:27:57,320 --> 00:28:03,678
<font color="#CCCCCC">gonna show</font><font color="#E5E5E5"> you is that not only we have</font>

728
00:27:59,260 --> 00:28:06,770
encryption<font color="#E5E5E5"> features for own files but we</font>

729
00:28:03,679 --> 00:28:08,120
also have messaging capability and we're

730
00:28:06,770 --> 00:28:10,490
going to<font color="#E5E5E5"> show you the signal plug-in</font>

731
00:28:08,120 --> 00:28:14,840
that we have for<font color="#CCCCCC"> it so what I'm gonna do</font>

732
00:28:10,490 --> 00:28:18,980
I'm gonna connect<font color="#E5E5E5"> to my USB</font><font color="#CCCCCC"> armory in</font>

733
00:28:14,840 --> 00:28:20,750
this specific<font color="#CCCCCC"> instance</font><font color="#E5E5E5"> so I tested this</font>

734
00:28:18,980 --> 00:28:23,270
before so you're not seeing the<font color="#CCCCCC"> pop-up</font>

735
00:28:20,750 --> 00:28:25,070
<font color="#CCCCCC">here but the USB armor itself is</font>

736
00:28:23,270 --> 00:28:27,230
demanding<font color="#CCCCCC"> for a very specific client</font>

737
00:28:25,070 --> 00:28:29,450
certificate in my browser<font color="#CCCCCC"> so if I don't</font>

738
00:28:27,230 --> 00:28:30,800
<font color="#E5E5E5">have that certificate</font><font color="#CCCCCC"> I cannot talk to</font>

739
00:28:29,450 --> 00:28:32,840
it so this<font color="#E5E5E5"> is already one form of</font>

740
00:28:30,800 --> 00:28:35,510
<font color="#CCCCCC">authentication which has been</font><font color="#E5E5E5"> happening</font>

741
00:28:32,840 --> 00:28:38,419
here<font color="#E5E5E5"> and then I'm presented</font><font color="#CCCCCC"> with</font>

742
00:28:35,510 --> 00:28:40,250
let me zoom<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> I'm presented here</font>

743
00:28:38,420 --> 00:28:42,110
<font color="#CCCCCC">with a</font><font color="#E5E5E5"> volume name from than a</font><font color="#CCCCCC"> password</font>

744
00:28:40,250 --> 00:28:44,030
<font color="#E5E5E5">prompt so these are gonna be my</font>

745
00:28:42,110 --> 00:28:47,449
credentials<font color="#E5E5E5"> for logging in into the USB</font>

746
00:28:44,030 --> 00:28:49,970
armory<font color="#E5E5E5"> now what's gonna happen is that</font>

747
00:28:47,450 --> 00:28:52,310
volume is the actual volume name of

748
00:28:49,970 --> 00:28:55,010
unencrypted partition<font color="#E5E5E5"> and the password</font>

749
00:28:52,310 --> 00:28:57,110
is one of the multiple pass<font color="#E5E5E5"> phrases that</font>

750
00:28:55,010 --> 00:28:59,570
you can<font color="#CCCCCC"> have for a an encrypted</font>

751
00:28:57,110 --> 00:29:01,100
partition<font color="#E5E5E5"> and if for</font><font color="#CCCCCC"> some reason I don't</font>

752
00:28:59,570 --> 00:29:03,590
trust the operating environment<font color="#CCCCCC"> that I'm</font>

753
00:29:01,100 --> 00:29:05,149
using<font color="#E5E5E5"> if I want I can tick this box and</font>

754
00:29:03,590 --> 00:29:07,490
the passwords that<font color="#E5E5E5"> I'm gonna use is</font>

755
00:29:05,150 --> 00:29:10,310
gonna be wiped<font color="#E5E5E5"> as soon as I'm logged in</font>

756
00:29:07,490 --> 00:29:12,380
so if anybody intercepted the password

757
00:29:10,310 --> 00:29:15,110
on my lap<font color="#E5E5E5"> door maybe by doing</font><font color="#CCCCCC"> shoulder</font>

758
00:29:12,380 --> 00:29:16,970
surfing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> password</font><font color="#E5E5E5"> is now useless and</font>

759
00:29:15,110 --> 00:29:19,070
<font color="#E5E5E5">you can have more than one so you can</font>

760
00:29:16,970 --> 00:29:24,680
use you can<font color="#CCCCCC"> have a</font><font color="#E5E5E5"> one-time password</font>

761
00:29:19,070 --> 00:29:27,260
<font color="#E5E5E5">here as soon as you input your</font>

762
00:29:24,680 --> 00:29:29,120
<font color="#E5E5E5">credential what's happening right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> an</font>

763
00:29:27,260 --> 00:29:32,720
increase the partition got unlocked and

764
00:29:29,120 --> 00:29:35,179
I get this partition<font color="#E5E5E5"> accessible with a</font>

765
00:29:32,720 --> 00:29:39,560
file manager when I can you know I can

766
00:29:35,180 --> 00:29:42,440
<font color="#E5E5E5">decide to compress files I can download</font>

767
00:29:39,560 --> 00:29:45,530
files and I<font color="#E5E5E5"> can also upload files</font><font color="#CCCCCC"> if I</font>

768
00:29:42,440 --> 00:29:47,480
if I wanted to<font color="#E5E5E5"> so I can just you know if</font>

769
00:29:45,530 --> 00:29:49,550
I have a file<font color="#CCCCCC"> here now it got uploaded</font>

770
00:29:47,480 --> 00:29:50,900
<font color="#E5E5E5">to the USB arm or if you are on Windows</font>

771
00:29:49,550 --> 00:29:52,490
and<font color="#E5E5E5"> you don't have a very minimalistic</font>

772
00:29:50,900 --> 00:29:54,440
Windows environment like the one that I

773
00:29:52,490 --> 00:29:56,420
have<font color="#CCCCCC"> here you</font><font color="#E5E5E5"> can also drag and drop</font>

774
00:29:54,440 --> 00:29:58,370
files directly into<font color="#E5E5E5"> this area and</font>

775
00:29:56,420 --> 00:30:00,710
they'll be uploaded and<font color="#CCCCCC"> then you can</font>

776
00:29:58,370 --> 00:30:03,620
decide<font color="#CCCCCC"> on these files</font><font color="#E5E5E5"> you can encrypt</font>

777
00:30:00,710 --> 00:30:05,390
them now we support three different

778
00:30:03,620 --> 00:30:06,979
encryption<font color="#E5E5E5"> methods you can have standard</font>

779
00:30:05,390 --> 00:30:09,080
symmetric encryption with the passwords

780
00:30:06,980 --> 00:30:12,140
that<font color="#CCCCCC"> you choose you can</font><font color="#E5E5E5"> have the same</font>

781
00:30:09,080 --> 00:30:14,419
kind of<font color="#CCCCCC"> encryption but being piped</font>

782
00:30:12,140 --> 00:30:16,340
<font color="#CCCCCC">through the security coprocessors so the</font>

783
00:30:14,420 --> 00:30:18,380
actual key that is gonna be used<font color="#E5E5E5"> for</font>

784
00:30:16,340 --> 00:30:21,830
encryption<font color="#E5E5E5"> is not only your passphrase</font>

785
00:30:18,380 --> 00:30:24,080
<font color="#CCCCCC">but it's also combined</font><font color="#E5E5E5"> with the unique</font>

786
00:30:21,830 --> 00:30:26,600
secret which<font color="#CCCCCC"> is on the USB armor itself</font>

787
00:30:24,080 --> 00:30:28,939
<font color="#CCCCCC">which means that you can lock encryption</font>

788
00:30:26,600 --> 00:30:30,770
and decryption of<font color="#E5E5E5"> that specific file to</font>

789
00:30:28,940 --> 00:30:33,050
<font color="#E5E5E5">the specific devices</font><font color="#CCCCCC"> so if I take the</font>

790
00:30:30,770 --> 00:30:35,030
<font color="#CCCCCC">microSD card out from this USB armory</font>

791
00:30:33,050 --> 00:30:37,159
<font color="#E5E5E5">and I use it</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> a different USB armory</font>

792
00:30:35,030 --> 00:30:38,840
<font color="#E5E5E5">even if you know the passwords you won't</font>

793
00:30:37,160 --> 00:30:40,910
be<font color="#CCCCCC"> able to encrypt</font><font color="#E5E5E5"> and decrypt that file</font>

794
00:30:38,840 --> 00:30:42,649
again and this can also be<font color="#E5E5E5"> done for the</font>

795
00:30:40,910 --> 00:30:44,600
initial credentials that I use for

796
00:30:42,650 --> 00:30:46,280
<font color="#CCCCCC">logging</font><font color="#E5E5E5"> into the encrypted partition if</font>

797
00:30:44,600 --> 00:30:48,620
you want<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> our optional support</font>

798
00:30:46,280 --> 00:30:51,170
<font color="#CCCCCC">which you</font><font color="#E5E5E5"> can enable and also you</font>

799
00:30:48,620 --> 00:30:53,419
do PGP encryption and accretion so I

800
00:30:51,170 --> 00:30:57,170
have two keys here and now I just

801
00:30:53,420 --> 00:30:59,450
<font color="#E5E5E5">encrypted this file with PGP now the way</font>

802
00:30:57,170 --> 00:31:02,330
we<font color="#E5E5E5"> have PGP functionality is not by</font>

803
00:30:59,450 --> 00:31:05,210
<font color="#CCCCCC">typing</font><font color="#E5E5E5"> through a</font><font color="#CCCCCC"> GPG binary but it's</font>

804
00:31:02,330 --> 00:31:06,710
actually all<font color="#E5E5E5"> using standard native go</font>

805
00:31:05,210 --> 00:31:09,100
libraries<font color="#E5E5E5"> because this is a go</font>

806
00:31:06,710 --> 00:31:11,690
application so there's no outside

807
00:31:09,100 --> 00:31:14,179
dependencies over standard go libraries

808
00:31:11,690 --> 00:31:15,559
<font color="#E5E5E5">except for the optional signal support</font>

809
00:31:14,180 --> 00:31:17,480
which I'm<font color="#E5E5E5"> going to show you in a second</font>

810
00:31:15,559 --> 00:31:19,160
<font color="#E5E5E5">and once you have the files here you can</font>

811
00:31:17,480 --> 00:31:20,720
<font color="#E5E5E5">compress them you can download them</font><font color="#CCCCCC"> you</font>

812
00:31:19,160 --> 00:31:23,500
<font color="#CCCCCC">can delete and</font><font color="#E5E5E5"> you can do whatever you</font>

813
00:31:20,720 --> 00:31:26,750
want<font color="#E5E5E5"> and everything that you see</font><font color="#CCCCCC"> here is</font>

814
00:31:23,500 --> 00:31:28,640
living on unencrypted<font color="#E5E5E5"> partition so</font>

815
00:31:26,750 --> 00:31:32,000
nothing<font color="#CCCCCC"> that you see here is store</font>

816
00:31:28,640 --> 00:31:34,340
unencrypted you also get an audit log so

817
00:31:32,000 --> 00:31:37,070
every operation that you're<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> its</font>

818
00:31:34,340 --> 00:31:39,260
audited you can add and remove passwords

819
00:31:37,070 --> 00:31:41,090
you can<font color="#E5E5E5"> change them you can power off</font>

820
00:31:39,260 --> 00:31:42,800
the device<font color="#E5E5E5"> and when you log out the</font>

821
00:31:41,090 --> 00:31:45,379
encrypted<font color="#E5E5E5"> partition would be will be</font>

822
00:31:42,800 --> 00:31:47,690
locked<font color="#E5E5E5"> again so now I'm going to show</font>

823
00:31:45,380 --> 00:31:49,210
you signal<font color="#E5E5E5"> connectivity I'm assuming</font>

824
00:31:47,690 --> 00:31:52,429
<font color="#E5E5E5">you're all familiar with what signal is</font>

825
00:31:49,210 --> 00:31:59,540
yeah<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have a plugin</font><font color="#E5E5E5"> for signal</font>

826
00:31:52,429 --> 00:32:03,140
here which allows me so not<font color="#E5E5E5"> only to chat</font>

827
00:31:59,540 --> 00:32:07,550
with other other mobile phones<font color="#E5E5E5"> so in</font>

828
00:32:03,140 --> 00:32:10,460
this case I'm talking<font color="#CCCCCC"> to my mobile</font><font color="#E5E5E5"> phone</font>

829
00:32:07,550 --> 00:32:12,889
so I just receive<font color="#CCCCCC"> the message from my</font>

830
00:32:10,460 --> 00:32:16,460
<font color="#CCCCCC">interlock here so hello there</font><font color="#E5E5E5"> but also</font>

831
00:32:12,890 --> 00:32:18,260
we can<font color="#E5E5E5"> share files so now I had a file</font>

832
00:32:16,460 --> 00:32:20,570
on<font color="#E5E5E5"> the encrypted partition and of course</font>

833
00:32:18,260 --> 00:32:22,790
I could just<font color="#CCCCCC"> PGP encrypt that</font><font color="#E5E5E5"> file I</font>

834
00:32:20,570 --> 00:32:24,800
<font color="#E5E5E5">could download that file</font><font color="#CCCCCC"> I can put it</font>

835
00:32:22,790 --> 00:32:27,440
into<font color="#E5E5E5"> my email client and then I could</font>

836
00:32:24,800 --> 00:32:29,419
send<font color="#CCCCCC"> it</font><font color="#E5E5E5"> away but we know how that's</font>

837
00:32:27,440 --> 00:32:30,830
complicated nowadays<font color="#CCCCCC"> so what I can just</font>

838
00:32:29,420 --> 00:32:32,480
do I can<font color="#E5E5E5"> just send a file which is</font>

839
00:32:30,830 --> 00:32:34,850
sitting on<font color="#E5E5E5"> encrypted partition of the</font>

840
00:32:32,480 --> 00:32:39,350
<font color="#E5E5E5">armory to my phone so</font><font color="#CCCCCC"> I just</font><font color="#E5E5E5"> sent here a</font>

841
00:32:34,850 --> 00:32:41,659
<font color="#CCCCCC">picture of my cat and</font><font color="#E5E5E5"> the reason why we</font>

842
00:32:39,350 --> 00:32:43,699
are doing<font color="#CCCCCC"> this is not</font><font color="#E5E5E5"> only</font><font color="#CCCCCC"> to have</font>

843
00:32:41,660 --> 00:32:45,320
communication between a phone and a USB

844
00:32:43,700 --> 00:32:47,510
<font color="#CCCCCC">armory</font><font color="#E5E5E5"> and I use the armory on</font><font color="#CCCCCC"> a phone</font>

845
00:32:45,320 --> 00:32:49,370
<font color="#E5E5E5">but also</font><font color="#CCCCCC"> to simplify communication</font>

846
00:32:47,510 --> 00:32:51,160
between two different USB<font color="#CCCCCC"> armories</font><font color="#E5E5E5"> so</font>

847
00:32:49,370 --> 00:32:55,070
for<font color="#E5E5E5"> instance my colleague Andre there</font>

848
00:32:51,160 --> 00:32:57,410
has another USB<font color="#E5E5E5"> armory which is blinking</font>

849
00:32:55,070 --> 00:32:59,210
over<font color="#E5E5E5"> there much more loud than mine mine</font>

850
00:32:57,410 --> 00:33:01,510
<font color="#E5E5E5">is</font><font color="#CCCCCC"> better it's a steady LED yours is</font>

851
00:32:59,210 --> 00:33:04,870
<font color="#CCCCCC">blinking</font><font color="#E5E5E5"> it's</font><font color="#CCCCCC"> just this</font><font color="#E5E5E5"> truck</font>

852
00:33:01,510 --> 00:33:07,629
and he I had his number here and what I

853
00:33:04,870 --> 00:33:12,189
can do or what<font color="#E5E5E5"> he can do he can send me</font>

854
00:33:07,630 --> 00:33:14,410
a file from his encrypted partition on<font color="#CCCCCC"> a</font>

855
00:33:12,190 --> 00:33:17,260
USB<font color="#E5E5E5"> armory and to</font><font color="#CCCCCC"> an encrypted</font><font color="#E5E5E5"> with</font>

856
00:33:14,410 --> 00:33:21,130
signal directly landing on the encrypted

857
00:33:17,260 --> 00:33:23,200
<font color="#E5E5E5">partition of my USB armory so now</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> get</font>

858
00:33:21,130 --> 00:33:25,930
a<font color="#CCCCCC"> mock notification see I receive the</font>

859
00:33:23,200 --> 00:33:28,750
<font color="#CCCCCC">message and if I go onto his contact</font>

860
00:33:25,930 --> 00:33:33,880
directory<font color="#CCCCCC"> I see that a file appear and</font>

861
00:33:28,750 --> 00:33:38,860
<font color="#E5E5E5">that file let's download the file let's</font>

862
00:33:33,880 --> 00:33:39,940
see what it is<font color="#E5E5E5"> and it's another picture</font>

863
00:33:38,860 --> 00:33:42,250
of<font color="#E5E5E5"> a lovely</font><font color="#CCCCCC"> cat</font>

864
00:33:39,940 --> 00:33:44,140
<font color="#E5E5E5">so our two cats can decide to</font><font color="#CCCCCC"> have a lot</font>

865
00:33:42,250 --> 00:33:46,270
<font color="#CCCCCC">of story and share pictures</font><font color="#E5E5E5"> completely</font>

866
00:33:44,140 --> 00:33:49,720
secure in safety with<font color="#E5E5E5"> interlock</font><font color="#CCCCCC"> and the</font>

867
00:33:46,270 --> 00:33:51,820
USB<font color="#E5E5E5"> armory so and also the interesting</font>

868
00:33:49,720 --> 00:33:54,580
<font color="#E5E5E5">thing is that by</font><font color="#CCCCCC"> using the signal</font>

869
00:33:51,820 --> 00:33:56,679
infrastructure this way we can send<font color="#E5E5E5"> much</font>

870
00:33:54,580 --> 00:33:58,330
bigger files with what you can<font color="#E5E5E5"> do</font><font color="#CCCCCC"> on a</font>

871
00:33:56,680 --> 00:34:00,910
mobile phone there's no size limit there

872
00:33:58,330 --> 00:34:02,800
and also<font color="#E5E5E5"> the metadata</font><font color="#CCCCCC"> of let's say the</font>

873
00:34:00,910 --> 00:34:04,690
file name gets<font color="#E5E5E5"> preserved which is</font>

874
00:34:02,800 --> 00:34:06,639
something<font color="#E5E5E5"> that you cannot do if you just</font>

875
00:34:04,690 --> 00:34:09,670
<font color="#CCCCCC">communicate it with with mobile phones</font>

876
00:34:06,640 --> 00:34:11,710
and and this<font color="#CCCCCC"> is really to make you know</font>

877
00:34:09,670 --> 00:34:15,610
a very as efficient as quickly as

878
00:34:11,710 --> 00:34:17,830
possible<font color="#CCCCCC"> a file transfer which you know</font>

879
00:34:15,610 --> 00:34:19,930
in<font color="#E5E5E5"> this specific case my laptop is just</font>

880
00:34:17,830 --> 00:34:22,449
acting as a router<font color="#E5E5E5"> and nothing more and</font>

881
00:34:19,929 --> 00:34:24,339
all<font color="#E5E5E5"> he sees is is encrypted traffic and</font>

882
00:34:22,449 --> 00:34:25,449
I don't<font color="#E5E5E5"> have to worry about</font><font color="#CCCCCC"> GPG or any</font>

883
00:34:24,340 --> 00:34:28,030
other things<font color="#CCCCCC"> I just use this</font>

884
00:34:25,449 --> 00:34:29,589
functionality which which we think<font color="#CCCCCC"> is</font>

885
00:34:28,030 --> 00:34:36,250
pretty<font color="#E5E5E5"> good and of course I can also</font>

886
00:34:29,590 --> 00:34:39,580
chat with<font color="#CCCCCC"> Andrey</font><font color="#E5E5E5"> if I want to and this</font>

887
00:34:36,250 --> 00:34:41,380
chat also<font color="#E5E5E5"> leaves on the encrypted</font>

888
00:34:39,580 --> 00:34:43,480
<font color="#E5E5E5">partition so if I want I can</font><font color="#CCCCCC"> also</font>

889
00:34:41,380 --> 00:34:44,980
leverage<font color="#E5E5E5"> on all the</font><font color="#CCCCCC"> functionalities</font><font color="#E5E5E5"> that</font>

890
00:34:43,480 --> 00:34:46,870
<font color="#CCCCCC">we have here in the file manager to</font>

891
00:34:44,980 --> 00:34:48,550
<font color="#E5E5E5">download the file and manage the file</font>

892
00:34:46,870 --> 00:34:52,089
like<font color="#E5E5E5"> you like like it would be any other</font>

893
00:34:48,550 --> 00:34:57,370
<font color="#E5E5E5">file on this on this system and as soon</font>

894
00:34:52,090 --> 00:35:00,730
as<font color="#E5E5E5"> I log out the partition is locked and</font>

895
00:34:57,370 --> 00:35:02,920
encrypted<font color="#E5E5E5"> again so so this is one</font>

896
00:35:00,730 --> 00:35:06,160
software<font color="#E5E5E5"> that we've done you</font><font color="#CCCCCC"> can it's on</font>

897
00:35:02,920 --> 00:35:08,200
our github repository<font color="#E5E5E5"> and again it</font>

898
00:35:06,160 --> 00:35:10,390
doesn't<font color="#E5E5E5"> necessarily need to</font><font color="#CCCCCC"> be used on a</font>

899
00:35:08,200 --> 00:35:11,640
USB<font color="#E5E5E5"> armory it can be used on pretty much</font>

900
00:35:10,390 --> 00:35:14,250
<font color="#E5E5E5">on any hard</font>

901
00:35:11,640 --> 00:35:16,140
you want<font color="#E5E5E5"> so even on your laptop if you</font>

902
00:35:14,250 --> 00:35:18,510
<font color="#E5E5E5">have a container which can access an</font>

903
00:35:16,140 --> 00:35:20,069
encrypted partition<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you wanna you</font>

904
00:35:18,510 --> 00:35:23,970
know<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> to access</font><font color="#CCCCCC"> to that you can</font>

905
00:35:20,070 --> 00:35:26,430
also use<font color="#CCCCCC"> interlock</font><font color="#E5E5E5"> if you want we also</font>

906
00:35:23,970 --> 00:35:28,589
have an embedded<font color="#CCCCCC"> interlocked</font>

907
00:35:26,430 --> 00:35:29,970
distribution that leverages on all of

908
00:35:28,590 --> 00:35:31,500
the features that I explained to<font color="#E5E5E5"> you</font>

909
00:35:29,970 --> 00:35:34,589
about secure boot and the security<font color="#CCCCCC"> core</font>

910
00:35:31,500 --> 00:35:36,720
<font color="#CCCCCC">processor 12 as you know</font><font color="#E5E5E5"> as tight a</font>

911
00:35:34,590 --> 00:35:39,480
secure environment as possible<font color="#CCCCCC"> running</font>

912
00:35:36,720 --> 00:35:41,370
on the<font color="#CCCCCC"> US</font><font color="#E5E5E5"> your USB armory so the build</font>

913
00:35:39,480 --> 00:35:43,790
environment<font color="#CCCCCC"> that we have</font><font color="#E5E5E5"> so build</font><font color="#CCCCCC"> root</font>

914
00:35:41,370 --> 00:35:46,200
is a framework<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is developed by</font>

915
00:35:43,790 --> 00:35:47,820
people<font color="#CCCCCC"> like Atmel but it's a completely</font>

916
00:35:46,200 --> 00:35:50,669
<font color="#E5E5E5">open source and there are many sponsors</font>

917
00:35:47,820 --> 00:35:54,030
<font color="#E5E5E5">to it which allows you to</font><font color="#CCCCCC"> easily create</font>

918
00:35:50,670 --> 00:35:55,830
a final embedded image for embedded

919
00:35:54,030 --> 00:35:57,270
<font color="#CCCCCC">systems and the way</font><font color="#E5E5E5"> works is that</font><font color="#CCCCCC"> you</font>

920
00:35:55,830 --> 00:35:58,740
<font color="#CCCCCC">have configuration</font><font color="#E5E5E5"> files which are</font>

921
00:35:57,270 --> 00:36:00,720
<font color="#CCCCCC">similar to</font><font color="#E5E5E5"> the Linux kernel</font>

922
00:35:58,740 --> 00:36:02,819
configuration and then you just I make

923
00:36:00,720 --> 00:36:05,160
and you end up<font color="#E5E5E5"> with your kernel your</font>

924
00:36:02,820 --> 00:36:07,770
user space<font color="#E5E5E5"> all conveniently packed in</font>

925
00:36:05,160 --> 00:36:09,509
the way you want<font color="#CCCCCC"> it</font><font color="#E5E5E5"> to be so with build</font>

926
00:36:07,770 --> 00:36:12,980
<font color="#CCCCCC">run environment with just</font><font color="#E5E5E5"> two commands</font>

927
00:36:09,510 --> 00:36:16,710
you can<font color="#E5E5E5"> automatically create a</font>

928
00:36:12,980 --> 00:36:18,960
monolithic kernel<font color="#E5E5E5"> which will include all</font>

929
00:36:16,710 --> 00:36:20,610
<font color="#CCCCCC">of the user</font><font color="#E5E5E5"> space as a</font><font color="#CCCCCC"> run disk inside</font>

930
00:36:18,960 --> 00:36:24,570
the kernel image and why are we<font color="#E5E5E5"> doing</font>

931
00:36:20,610 --> 00:36:27,660
<font color="#E5E5E5">this because the idea is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you have</font>

932
00:36:24,570 --> 00:36:31,440
<font color="#E5E5E5">your system on a chip which secure boots</font>

933
00:36:27,660 --> 00:36:34,080
<font color="#E5E5E5">the bootloader with secure boot the boot</font>

934
00:36:31,440 --> 00:36:35,520
loader<font color="#E5E5E5"> with a verified boot verifies the</font>

935
00:36:34,080 --> 00:36:36,990
kernel image but the kernel image

936
00:36:35,520 --> 00:36:39,930
<font color="#CCCCCC">doesn't only contain</font><font color="#E5E5E5"> the kernel</font>

937
00:36:36,990 --> 00:36:42,089
it also contains inside<font color="#E5E5E5"> all of the user</font>

938
00:36:39,930 --> 00:36:43,950
space application<font color="#E5E5E5"> and interlock as well</font>

939
00:36:42,090 --> 00:36:45,960
<font color="#E5E5E5">when I say all</font><font color="#CCCCCC"> of the use of this</font>

940
00:36:43,950 --> 00:36:48,960
application<font color="#E5E5E5"> I mean just you know the</font>

941
00:36:45,960 --> 00:36:51,810
<font color="#E5E5E5">standard Linux tools necessary to maybe</font>

942
00:36:48,960 --> 00:36:53,310
create<font color="#CCCCCC"> a microSD partition and to set up</font>

943
00:36:51,810 --> 00:36:54,990
networking nothing nothing fancy we're

944
00:36:53,310 --> 00:36:57,870
talking about<font color="#E5E5E5"> less than</font><font color="#CCCCCC"> four megabytes</font>

945
00:36:54,990 --> 00:37:00,540
<font color="#E5E5E5">of image including interlock itself and</font>

946
00:36:57,870 --> 00:37:03,120
so we<font color="#CCCCCC"> maintain the root of trust</font><font color="#E5E5E5"> in</font>

947
00:37:00,540 --> 00:37:04,830
executing<font color="#E5E5E5"> all of this code and then</font>

948
00:37:03,120 --> 00:37:06,150
everything<font color="#E5E5E5"> else that is on the micro SD</font>

949
00:37:04,830 --> 00:37:09,029
card is just<font color="#E5E5E5"> an encrypted partition</font>

950
00:37:06,150 --> 00:37:12,210
where your data or even programs can be

951
00:37:09,030 --> 00:37:14,630
there<font color="#E5E5E5"> so everything is locked down and</font>

952
00:37:12,210 --> 00:37:17,520
either sign or authenticated<font color="#CCCCCC"> with your</font>

953
00:37:14,630 --> 00:37:19,620
credentials into<font color="#CCCCCC"> this case and our</font>

954
00:37:17,520 --> 00:37:21,780
<font color="#E5E5E5">default image also you can put it on</font><font color="#CCCCCC"> a</font>

955
00:37:19,620 --> 00:37:23,220
blank micro SD card will automatically

956
00:37:21,780 --> 00:37:24,220
create<font color="#CCCCCC"> the encrypted</font><font color="#E5E5E5"> partition and the</font>

957
00:37:23,220 --> 00:37:25,540
first boot and

958
00:37:24,220 --> 00:37:27,790
then you can also change the<font color="#CCCCCC"> passphrase</font>

959
00:37:25,540 --> 00:37:29,890
<font color="#CCCCCC">for</font><font color="#E5E5E5"> that so to make</font><font color="#CCCCCC"> it as</font><font color="#E5E5E5"> easy as</font>

960
00:37:27,790 --> 00:37:32,859
<font color="#E5E5E5">possible and you can optionally enable</font>

961
00:37:29,890 --> 00:37:35,020
the security<font color="#CCCCCC"> coprocessor</font><font color="#E5E5E5"> which means</font>

962
00:37:32,859 --> 00:37:36,730
that every credential that you create

963
00:37:35,020 --> 00:37:40,109
for the encrypted<font color="#E5E5E5"> partition</font><font color="#CCCCCC"> on that</font>

964
00:37:36,730 --> 00:37:43,330
device will<font color="#CCCCCC"> be tied to the specific</font><font color="#E5E5E5"> key</font>

965
00:37:40,109 --> 00:37:47,259
<font color="#E5E5E5">of that specific system on a chip that</font>

966
00:37:43,330 --> 00:37:50,049
that you have<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so these are the</font>

967
00:37:47,260 --> 00:37:52,570
<font color="#E5E5E5">defensive</font><font color="#CCCCCC"> users</font><font color="#E5E5E5"> that we created the</font>

968
00:37:50,050 --> 00:37:53,920
armory for in the<font color="#E5E5E5"> first</font><font color="#CCCCCC"> place but of</font>

969
00:37:52,570 --> 00:37:56,770
course there<font color="#E5E5E5"> are also some offensive</font>

970
00:37:53,920 --> 00:38:00,130
uses for it<font color="#E5E5E5"> and there's a lot</font><font color="#CCCCCC"> of papers</font>

971
00:37:56,770 --> 00:38:02,290
which play with the idea<font color="#E5E5E5"> that not</font><font color="#CCCCCC"> only</font>

972
00:38:00,130 --> 00:38:04,390
you can emulate arbitrary USB devices

973
00:38:02,290 --> 00:38:07,570
with with the USB<font color="#E5E5E5"> armory which use a lot</font>

974
00:38:04,390 --> 00:38:09,460
in in penetration testing of<font color="#E5E5E5"> USB</font><font color="#CCCCCC"> stacks</font>

975
00:38:07,570 --> 00:38:12,880
and USB drivers the amount<font color="#E5E5E5"> of freedom</font>

976
00:38:09,460 --> 00:38:16,420
<font color="#E5E5E5">that this controller gives you is a lot</font>

977
00:38:12,880 --> 00:38:19,570
so you can emulate<font color="#E5E5E5"> and you can bring up</font>

978
00:38:16,420 --> 00:38:22,090
<font color="#E5E5E5">very fairly complex drivers and modify</font>

979
00:38:19,570 --> 00:38:24,220
them so<font color="#E5E5E5"> that they misbehave</font><font color="#CCCCCC"> without</font>

980
00:38:22,090 --> 00:38:26,470
<font color="#E5E5E5">losing any performance and any speed</font><font color="#CCCCCC"> and</font>

981
00:38:24,220 --> 00:38:27,879
<font color="#E5E5E5">this is the USB</font><font color="#CCCCCC"> Leno's gadget framework</font>

982
00:38:26,470 --> 00:38:30,730
that we<font color="#CCCCCC"> use which is the same one that</font>

983
00:38:27,880 --> 00:38:33,640
<font color="#E5E5E5">we use also for</font><font color="#CCCCCC"> emulating a network</font><font color="#E5E5E5"> card</font>

984
00:38:30,730 --> 00:38:36,790
<font color="#E5E5E5">and there are a few papers around about</font>

985
00:38:33,640 --> 00:38:38,650
you know doing USB eavesdropping attacks

986
00:38:36,790 --> 00:38:40,980
or doing network<font color="#E5E5E5"> at jacking attacks with</font>

987
00:38:38,650 --> 00:38:43,630
<font color="#E5E5E5">the USB armory since you can emulate</font><font color="#CCCCCC"> a</font>

988
00:38:40,980 --> 00:38:45,849
<font color="#E5E5E5">you know an arbitrary Ethernet device</font>

989
00:38:43,630 --> 00:38:48,839
from it and<font color="#E5E5E5"> recently</font><font color="#CCCCCC"> you might have seen</font>

990
00:38:45,849 --> 00:38:53,109
this attack here which was published

991
00:38:48,839 --> 00:38:55,920
where it's about stealing credential

992
00:38:53,109 --> 00:38:59,619
tokens from<font color="#E5E5E5"> other OS X or Windows</font>

993
00:38:55,920 --> 00:39:02,190
<font color="#CCCCCC">machines</font><font color="#E5E5E5"> even if they're locked by just</font>

994
00:38:59,619 --> 00:39:05,230
plug in a USB<font color="#E5E5E5"> armory that emulates a</font>

995
00:39:02,190 --> 00:39:08,650
network interface with a higher<font color="#CCCCCC"> priority</font>

996
00:39:05,230 --> 00:39:10,900
and then provides<font color="#E5E5E5"> authenticators that</font>

997
00:39:08,650 --> 00:39:13,420
would respond to<font color="#E5E5E5"> all the authentication</font>

998
00:39:10,900 --> 00:39:15,849
<font color="#E5E5E5">requests</font><font color="#CCCCCC"> from windows and this allows</font>

999
00:39:13,420 --> 00:39:17,710
you<font color="#E5E5E5"> to get</font><font color="#CCCCCC"> the ntlm hashes from</font><font color="#E5E5E5"> the</font>

1000
00:39:15,849 --> 00:39:19,450
machine even<font color="#CCCCCC"> if it's locked</font>

1001
00:39:17,710 --> 00:39:20,740
so just by plugging in<font color="#E5E5E5"> the armory</font><font color="#CCCCCC"> so</font>

1002
00:39:19,450 --> 00:39:22,598
it's of course<font color="#E5E5E5"> something that you can do</font>

1003
00:39:20,740 --> 00:39:25,479
with any<font color="#E5E5E5"> device which is capable of</font>

1004
00:39:22,599 --> 00:39:28,000
<font color="#E5E5E5">emulating USB Ethernet cards but in this</font>

1005
00:39:25,480 --> 00:39:32,020
<font color="#E5E5E5">attack in</font><font color="#CCCCCC"> 10 seconds</font><font color="#E5E5E5"> the credentials</font>

1006
00:39:28,000 --> 00:39:34,630
were were were stolen<font color="#CCCCCC"> you can find a</font>

1007
00:39:32,020 --> 00:39:36,330
link of this in our wiki page under

1008
00:39:34,630 --> 00:39:40,590
<font color="#CCCCCC">external</font><font color="#E5E5E5"> contributions and</font>

1009
00:39:36,330 --> 00:39:44,250
this is the blog post<font color="#CCCCCC"> that Brandon did</font>

1010
00:39:40,590 --> 00:39:46,410
<font color="#E5E5E5">and the it's a step-by-step tutorial</font><font color="#CCCCCC"> on</font>

1011
00:39:44,250 --> 00:39:48,900
<font color="#E5E5E5">how to configure the USB armory to do</font>

1012
00:39:46,410 --> 00:39:51,960
<font color="#E5E5E5">this kind of operation</font><font color="#CCCCCC"> and what you end</font>

1013
00:39:48,900 --> 00:39:54,270
up<font color="#CCCCCC"> with is this</font><font color="#E5E5E5"> which on the USB armory</font>

1014
00:39:51,960 --> 00:39:58,080
<font color="#E5E5E5">in a secret lie database you end up with</font>

1015
00:39:54,270 --> 00:40:00,240
the actual ntlm hash<font color="#E5E5E5"> and the username</font>

1016
00:39:58,080 --> 00:40:02,580
<font color="#E5E5E5">which then you can crack or can use in</font>

1017
00:40:00,240 --> 00:40:05,819
pass the hash<font color="#CCCCCC"> attacks so this I think</font>

1018
00:40:02,580 --> 00:40:07,259
this got really<font color="#E5E5E5"> popular last week and I</font>

1019
00:40:05,820 --> 00:40:09,540
<font color="#E5E5E5">think it's one of the best example of</font>

1020
00:40:07,260 --> 00:40:12,480
using this device for offensive purposes

1021
00:40:09,540 --> 00:40:15,930
or offensive<font color="#CCCCCC"> Studies so it also makes a</font>

1022
00:40:12,480 --> 00:40:18,570
<font color="#E5E5E5">good platform for</font><font color="#CCCCCC"> that and on</font><font color="#E5E5E5"> our own</font><font color="#CCCCCC"> we</font>

1023
00:40:15,930 --> 00:40:22,169
also<font color="#E5E5E5"> found at the end of last year and</font>

1024
00:40:18,570 --> 00:40:26,460
<font color="#E5E5E5">it was disclosed I think March of this</font>

1025
00:40:22,170 --> 00:40:29,310
year<font color="#CCCCCC"> we found a bug</font><font color="#E5E5E5"> for both OS X and</font>

1026
00:40:26,460 --> 00:40:32,010
iOS<font color="#CCCCCC"> were by plugging in the</font><font color="#E5E5E5"> USB armory</font>

1027
00:40:29,310 --> 00:40:34,020
<font color="#E5E5E5">and presenting a misbehaving</font><font color="#CCCCCC"> Network</font>

1028
00:40:32,010 --> 00:40:38,040
driver<font color="#CCCCCC"> even if the machine will</font><font color="#E5E5E5"> be</font>

1029
00:40:34,020 --> 00:40:41,790
locked<font color="#CCCCCC"> we will be able</font><font color="#E5E5E5"> to have a crash</font>

1030
00:40:38,040 --> 00:40:44,279
into<font color="#E5E5E5"> kernel</font><font color="#CCCCCC"> land because we would</font>

1031
00:40:41,790 --> 00:40:47,520
present<font color="#CCCCCC"> certain descriptors that would</font>

1032
00:40:44,280 --> 00:40:50,490
that would cause memory overruns in<font color="#CCCCCC"> the</font>

1033
00:40:47,520 --> 00:40:52,170
network buffers<font color="#E5E5E5"> of of the driver</font><font color="#CCCCCC"> that</font>

1034
00:40:50,490 --> 00:40:54,330
<font color="#E5E5E5">would handle that on both OS X and iOS</font>

1035
00:40:52,170 --> 00:40:56,880
because<font color="#E5E5E5"> the drivers</font><font color="#CCCCCC"> actually the same so</font>

1036
00:40:54,330 --> 00:40:59,190
<font color="#E5E5E5">we investigated these annoying sacks</font><font color="#CCCCCC"> but</font>

1037
00:40:56,880 --> 00:41:01,890
<font color="#E5E5E5">surprisingly it was also working on on</font>

1038
00:40:59,190 --> 00:41:04,380
iOS<font color="#E5E5E5"> you know panicking and and rebooting</font>

1039
00:41:01,890 --> 00:41:06,180
the the<font color="#CCCCCC"> machine and this memory</font>

1040
00:41:04,380 --> 00:41:07,830
<font color="#E5E5E5">corruption is</font><font color="#CCCCCC"> trigger</font><font color="#E5E5E5"> regardless of the</font>

1041
00:41:06,180 --> 00:41:09,930
fact that the user is logged in or not

1042
00:41:07,830 --> 00:41:12,060
<font color="#CCCCCC">so it</font><font color="#E5E5E5"> requires no user interaction and</font>

1043
00:41:09,930 --> 00:41:14,819
actually the trigger is<font color="#CCCCCC"> traffic which is</font>

1044
00:41:12,060 --> 00:41:16,320
sent by<font color="#E5E5E5"> the USB armory to the host which</font>

1045
00:41:14,820 --> 00:41:17,040
makes it very inconvenient and

1046
00:41:16,320 --> 00:41:20,250
scriptable

1047
00:41:17,040 --> 00:41:22,230
from the device<font color="#E5E5E5"> itself and a single ipv6</font>

1048
00:41:20,250 --> 00:41:24,720
packet can be<font color="#E5E5E5"> used on reproduce the</font>

1049
00:41:22,230 --> 00:41:27,510
<font color="#CCCCCC">issue so now of course the</font><font color="#E5E5E5"> issue</font><font color="#CCCCCC"> has</font>

1050
00:41:24,720 --> 00:41:29,430
<font color="#CCCCCC">been fixed we reported it to</font><font color="#E5E5E5"> helpful and</font>

1051
00:41:27,510 --> 00:41:32,280
we disclosed the bug on<font color="#CCCCCC"> me when it was</font>

1052
00:41:29,430 --> 00:41:33,870
<font color="#CCCCCC">fixed and yeah it's an interesting</font>

1053
00:41:32,280 --> 00:41:35,760
<font color="#CCCCCC">market</font><font color="#E5E5E5"> it's very</font><font color="#CCCCCC"> similar to</font><font color="#E5E5E5"> this open B</font>

1054
00:41:33,870 --> 00:41:39,150
is the issue<font color="#E5E5E5"> here where memory buffs are</font>

1055
00:41:35,760 --> 00:41:41,940
are being overwritten<font color="#E5E5E5"> so but regardless</font>

1056
00:41:39,150 --> 00:41:43,860
of this<font color="#CCCCCC"> specific issue this is just to</font>

1057
00:41:41,940 --> 00:41:46,260
prove<font color="#CCCCCC"> the point that the</font><font color="#E5E5E5"> USB army</font><font color="#CCCCCC"> also</font>

1058
00:41:43,860 --> 00:41:49,300
makes a very<font color="#CCCCCC"> good case for</font><font color="#E5E5E5"> you know</font>

1059
00:41:46,260 --> 00:41:51,550
testing USB payloads whether it's

1060
00:41:49,300 --> 00:41:53,260
you know<font color="#E5E5E5"> something at a lower level</font><font color="#CCCCCC"> or</font>

1061
00:41:51,550 --> 00:41:55,120
something at a higher level<font color="#CCCCCC"> where you</font>

1062
00:41:53,260 --> 00:41:57,160
have<font color="#E5E5E5"> to present a</font><font color="#CCCCCC"> full</font><font color="#E5E5E5"> kernel driver and</font>

1063
00:41:55,120 --> 00:41:58,569
it's very<font color="#E5E5E5"> easy with the</font><font color="#CCCCCC"> Gotcha framework</font>

1064
00:41:57,160 --> 00:42:00,910
to identify<font color="#CCCCCC"> the drivers which are</font>

1065
00:41:58,570 --> 00:42:03,460
supported and manipulate them in a way

1066
00:42:00,910 --> 00:42:07,870
<font color="#E5E5E5">that you would make your</font><font color="#CCCCCC"> hosts misbehave</font>

1067
00:42:03,460 --> 00:42:09,970
so<font color="#E5E5E5"> almost</font><font color="#CCCCCC"> good time</font><font color="#E5E5E5"> I think I also saved</font>

1068
00:42:07,870 --> 00:42:11,350
some<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> delayed I</font><font color="#E5E5E5"> was there so I</font>

1069
00:42:09,970 --> 00:42:12,970
<font color="#E5E5E5">thank</font><font color="#CCCCCC"> you very much for</font><font color="#E5E5E5"> your attention I</font>

1070
00:42:11,350 --> 00:42:16,290
will<font color="#E5E5E5"> be very happy to take questions if</font>

1071
00:42:12,970 --> 00:42:16,290
you have any<font color="#CCCCCC"> thank you very much</font>

1072
00:42:22,219 --> 00:42:54,619
any questions yeah where<font color="#CCCCCC"> are</font><font color="#E5E5E5"> you raise</font>

1073
00:42:25,939 --> 00:42:56,959
<font color="#E5E5E5">your hand right right so the first</font>

1074
00:42:54,619 --> 00:42:59,329
question<font color="#E5E5E5"> is how many layers the board</font>

1075
00:42:56,959 --> 00:43:04,189
has so the first alpha version<font color="#E5E5E5"> of the</font>

1076
00:42:59,329 --> 00:43:06,379
board had eight layers and then<font color="#E5E5E5"> the two</font>

1077
00:43:04,189 --> 00:43:07,939
<font color="#E5E5E5">ground layers that are usually kept to</font>

1078
00:43:06,379 --> 00:43:08,719
minimize crosstalk and to maintain

1079
00:43:07,939 --> 00:43:12,888
<font color="#E5E5E5">better</font>

1080
00:43:08,719 --> 00:43:15,469
<font color="#E5E5E5">EMI we removed them to see if you work</font>

1081
00:43:12,889 --> 00:43:18,139
anyway and<font color="#E5E5E5"> yes it was fine without the</font>

1082
00:43:15,469 --> 00:43:20,689
<font color="#E5E5E5">two ground layers so you</font><font color="#CCCCCC"> know that saved</font>

1083
00:43:18,139 --> 00:43:23,749
<font color="#CCCCCC">the cost of the PCB by fifty percent and</font>

1084
00:43:20,689 --> 00:43:26,899
it had no negative<font color="#E5E5E5"> effect so we started</font>

1085
00:43:23,749 --> 00:43:28,939
conservative<font color="#E5E5E5"> and then you know we went</font>

1086
00:43:26,899 --> 00:43:31,009
less conservative<font color="#CCCCCC"> to to understand if he</font>

1087
00:43:28,939 --> 00:43:33,919
<font color="#E5E5E5">work anyway I mean we have a lot of non</font>

1088
00:43:31,009 --> 00:43:35,419
conservative<font color="#E5E5E5"> violations here</font><font color="#CCCCCC"> I mean if</font>

1089
00:43:33,919 --> 00:43:38,089
you take the recommendations<font color="#CCCCCC"> from any</font>

1090
00:43:35,419 --> 00:43:39,888
component<font color="#E5E5E5"> data sheet there's no way you</font>

1091
00:43:38,089 --> 00:43:41,049
can apply<font color="#E5E5E5"> all of those in such as design</font>

1092
00:43:39,889 --> 00:43:43,689
so<font color="#E5E5E5"> that was one of the first</font>

1093
00:43:41,049 --> 00:43:50,299
optimizations that we did so we have a

1094
00:43:43,689 --> 00:43:53,359
top and bottom layer<font color="#E5E5E5"> then</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> two</font>

1095
00:43:50,299 --> 00:43:54,919
ground layers which you know<font color="#CCCCCC"> are</font><font color="#E5E5E5"> two are</font>

1096
00:43:53,359 --> 00:43:57,859
kept<font color="#E5E5E5"> there but it would would have been</font>

1097
00:43:54,919 --> 00:44:00,019
two more in the inner core<font color="#E5E5E5"> and here we</font>

1098
00:43:57,859 --> 00:44:04,038
have the<font color="#E5E5E5"> power layers which are these</font>

1099
00:44:00,019 --> 00:44:09,468
<font color="#CCCCCC">two right in the middle and then we have</font>

1100
00:44:04,039 --> 00:44:11,629
the two signal errors so sorry actually

1101
00:44:09,469 --> 00:44:13,159
<font color="#E5E5E5">this design okay no it shows the two</font>

1102
00:44:11,629 --> 00:44:14,808
ground layers but those were actually

1103
00:44:13,159 --> 00:44:17,449
<font color="#E5E5E5">not produced in the final board sorry</font>

1104
00:44:14,809 --> 00:44:19,399
it's just that<font color="#E5E5E5"> I opened the</font><font color="#CCCCCC"> file which</font>

1105
00:44:17,449 --> 00:44:21,439
has<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of them</font><font color="#E5E5E5"> so these two were gone</font>

1106
00:44:19,399 --> 00:44:22,819
<font color="#E5E5E5">and then we just</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> these layers over</font>

1107
00:44:21,439 --> 00:44:25,339
here

1108
00:44:22,819 --> 00:44:27,049
the second question it was the if we

1109
00:44:25,339 --> 00:44:31,569
consider to apply for<font color="#CCCCCC"> fifth</font>

1110
00:44:27,049 --> 00:44:34,080
certification right in our testing of

1111
00:44:31,569 --> 00:44:36,480
smart<font color="#CCCCCC"> cards</font><font color="#E5E5E5"> specifically</font><font color="#CCCCCC"> and</font>

1112
00:44:34,080 --> 00:44:38,460
<font color="#CCCCCC">all of hsn's</font><font color="#E5E5E5"> we find that</font><font color="#CCCCCC"> v</font>

1113
00:44:36,480 --> 00:44:41,010
<font color="#E5E5E5">certification</font><font color="#CCCCCC"> has a very relative</font>

1114
00:44:38,460 --> 00:44:42,390
practical value<font color="#E5E5E5"> there are still some</font>

1115
00:44:41,010 --> 00:44:44,400
mistakes that<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> and for a</font>

1116
00:44:42,390 --> 00:44:45,930
company<font color="#CCCCCC"> of</font><font color="#E5E5E5"> our size and with the</font><font color="#CCCCCC"> budget</font>

1117
00:44:44,400 --> 00:44:47,910
<font color="#CCCCCC">that we have</font><font color="#E5E5E5"> this project it's not</font><font color="#CCCCCC"> a</font>

1118
00:44:45,930 --> 00:44:52,230
process<font color="#E5E5E5"> which we thought it would be</font>

1119
00:44:47,910 --> 00:44:54,390
<font color="#CCCCCC">worthwhile worthwhile</font><font color="#E5E5E5"> also this device</font>

1120
00:44:52,230 --> 00:44:57,120
has<font color="#CCCCCC"> been designed specifically for</font>

1121
00:44:54,390 --> 00:44:59,100
having no persistent whatsoever on it<font color="#CCCCCC"> in</font>

1122
00:44:57,120 --> 00:45:02,850
terms of code<font color="#E5E5E5"> the only thing that</font>

1123
00:44:59,100 --> 00:45:06,960
persists<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> fuse public keys and the</font>

1124
00:45:02,850 --> 00:45:10,680
inner secret key<font color="#E5E5E5"> which is burned by</font>

1125
00:45:06,960 --> 00:45:13,130
annex<font color="#E5E5E5"> B so the way we promote the use</font><font color="#CCCCCC"> of</font>

1126
00:45:10,680 --> 00:45:16,680
<font color="#E5E5E5">the device is</font><font color="#CCCCCC"> that if you lose</font><font color="#E5E5E5"> it and</font>

1127
00:45:13,130 --> 00:45:18,840
somebody has it in its possession<font color="#CCCCCC"> there</font>

1128
00:45:16,680 --> 00:45:20,779
is no value<font color="#E5E5E5"> that you can gain but</font>

1129
00:45:18,840 --> 00:45:23,220
actually tampering with the device

1130
00:45:20,780 --> 00:45:25,860
because all of<font color="#E5E5E5"> the secrets are either</font>

1131
00:45:23,220 --> 00:45:27,899
<font color="#E5E5E5">using</font><font color="#CCCCCC"> the right form</font><font color="#E5E5E5"> with something that</font>

1132
00:45:25,860 --> 00:45:31,350
you have and it's<font color="#CCCCCC"> not like a</font><font color="#E5E5E5"> SIM card</font>

1133
00:45:27,900 --> 00:45:34,020
<font color="#E5E5E5">where you know the pin unlocks it but</font>

1134
00:45:31,350 --> 00:45:36,390
really<font color="#E5E5E5"> doesn't decrypt any contents of</font>

1135
00:45:34,020 --> 00:45:38,430
the SIM card<font color="#CCCCCC"> like a SIM card or</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> mark</font>

1136
00:45:36,390 --> 00:45:41,220
<font color="#CCCCCC">our</font><font color="#E5E5E5"> it's tamper proof because the pin is</font>

1137
00:45:38,430 --> 00:45:43,710
only something which sets a state which

1138
00:45:41,220 --> 00:45:45,209
then allows you to use<font color="#CCCCCC"> it but it</font><font color="#E5E5E5"> doesn't</font>

1139
00:45:43,710 --> 00:45:47,220
<font color="#CCCCCC">necessarily</font><font color="#E5E5E5"> mean that the contents on</font>

1140
00:45:45,210 --> 00:45:49,260
this mark are encrypted which is why the

1141
00:45:47,220 --> 00:45:51,930
<font color="#CCCCCC">time-proven capabilities of the chip are</font>

1142
00:45:49,260 --> 00:45:53,940
very important in this<font color="#E5E5E5"> case we have no</font>

1143
00:45:51,930 --> 00:45:55,379
persistence<font color="#CCCCCC"> so</font><font color="#E5E5E5"> even if you dig up the</font>

1144
00:45:53,940 --> 00:45:57,390
chip and<font color="#E5E5E5"> you're very good with those</font>

1145
00:45:55,380 --> 00:45:59,370
kind of<font color="#CCCCCC"> stacks worst-case scenario you</font>

1146
00:45:57,390 --> 00:46:00,990
<font color="#E5E5E5">get the secret key out of</font><font color="#CCCCCC"> it which</font>

1147
00:45:59,370 --> 00:46:03,270
anyway is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be using the right form</font>

1148
00:46:00,990 --> 00:46:06,770
with your own passphrase<font color="#CCCCCC"> to encrypt</font>

1149
00:46:03,270 --> 00:46:09,540
<font color="#CCCCCC">secrets</font><font color="#E5E5E5"> so we wanted</font><font color="#CCCCCC"> to minimize the</font>

1150
00:46:06,770 --> 00:46:12,000
importance of tamper proof thing on this

1151
00:46:09,540 --> 00:46:13,740
device<font color="#E5E5E5"> I mean we see a lot we do a lot</font>

1152
00:46:12,000 --> 00:46:15,720
of tests on point of sale devices<font color="#E5E5E5"> in the</font>

1153
00:46:13,740 --> 00:46:17,850
financial sector<font color="#CCCCCC"> and we see that if we</font>

1154
00:46:15,720 --> 00:46:19,649
bypass<font color="#CCCCCC"> that um proof in sensors</font><font color="#E5E5E5"> the</font>

1155
00:46:17,850 --> 00:46:22,980
whole security<font color="#CCCCCC"> of the device falls apart</font>

1156
00:46:19,650 --> 00:46:26,400
<font color="#E5E5E5">because</font><font color="#CCCCCC"> he completely relies on on those</font>

1157
00:46:22,980 --> 00:46:28,050
<font color="#E5E5E5">on those mechanical sensors so in this</font>

1158
00:46:26,400 --> 00:46:29,580
case<font color="#E5E5E5"> you wanted</font><font color="#CCCCCC"> to avoid all of that</font><font color="#E5E5E5"> and</font>

1159
00:46:28,050 --> 00:46:30,900
that's<font color="#E5E5E5"> why we thought this kind of</font>

1160
00:46:29,580 --> 00:46:32,420
certification<font color="#E5E5E5"> would be</font><font color="#CCCCCC"> wouldn't</font><font color="#E5E5E5"> be</font>

1161
00:46:30,900 --> 00:46:37,370
<font color="#E5E5E5">interesting for us</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> to mention</font>

1162
00:46:32,420 --> 00:46:45,700
expensive<font color="#E5E5E5"> and exhaustive to do thank you</font>

1163
00:46:37,370 --> 00:46:48,960
any other question no good lunch<font color="#CCCCCC"> yes</font>

1164
00:46:45,700 --> 00:46:48,960
lunch<font color="#CCCCCC"> thank you very</font><font color="#E5E5E5"> much</font>

