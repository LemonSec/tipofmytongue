1
00:00:02,090 --> 00:00:11,209
<font color="#E5E5E5">okay so high thank you for</font><font color="#CCCCCC"> coming to</font><font color="#E5E5E5"> my</font>

2
00:00:06,299 --> 00:00:13,320
talk there's a bit of an advisory here

3
00:00:11,210 --> 00:00:15,000
some<font color="#E5E5E5"> of the stuff that i'm going to show</font>

4
00:00:13,320 --> 00:00:18,270
you might think like nobody's going<font color="#CCCCCC"> to</font>

5
00:00:15,000 --> 00:00:19,920
do that today like who would it ever but

6
00:00:18,270 --> 00:00:22,590
the reality is companies have been

7
00:00:19,920 --> 00:00:23,760
<font color="#E5E5E5">around for a bit and some of this like</font>

8
00:00:22,590 --> 00:00:25,470
all of the all of the stuff that<font color="#CCCCCC"> i'm</font>

9
00:00:23,760 --> 00:00:30,779
going<font color="#E5E5E5"> to show here it was caught in</font><font color="#CCCCCC"> the</font>

10
00:00:25,470 --> 00:00:34,320
wild it's not theoretical so once upon<font color="#CCCCCC"> a</font>

11
00:00:30,779 --> 00:00:37,230
time we wrote our own code like all of

12
00:00:34,320 --> 00:00:40,500
<font color="#E5E5E5">it and we knew what was in it because we</font>

13
00:00:37,230 --> 00:00:41,790
knew every little bit about it so you

14
00:00:40,500 --> 00:00:44,309
might<font color="#E5E5E5"> be thinking like who is this guy</font>

15
00:00:41,790 --> 00:00:46,230
my name is Luca<font color="#CCCCCC"> clevage I've</font><font color="#E5E5E5"> started I</font>

16
00:00:44,309 --> 00:00:48,660
did<font color="#E5E5E5"> I've been doing web stuff since</font>

17
00:00:46,230 --> 00:00:51,180
around 1997 when I was a little<font color="#E5E5E5"> kid I</font>

18
00:00:48,660 --> 00:00:54,929
was writing JavaScript for jquery<font color="#E5E5E5"> I was</font>

19
00:00:51,180 --> 00:00:57,930
doing server-side apps with old asp with

20
00:00:54,930 --> 00:01:00,269
vbscript yuck<font color="#CCCCCC"> i ran away from</font><font color="#E5E5E5"> that to</font>

21
00:00:57,930 --> 00:01:05,250
PHP<font color="#CCCCCC"> i ran away</font><font color="#E5E5E5"> from that to python and I</font>

22
00:01:00,270 --> 00:01:07,530
recently ran away to DevOps so today we

23
00:01:05,250 --> 00:01:10,320
know better than to code everything from

24
00:01:07,530 --> 00:01:12,740
scratch but that<font color="#CCCCCC"> means</font><font color="#E5E5E5"> that we rely on</font>

25
00:01:10,320 --> 00:01:16,830
frameworks and libraries and<font color="#E5E5E5"> third-party</font>

26
00:01:12,740 --> 00:01:18,960
code and we outsource everything we

27
00:01:16,830 --> 00:01:20,548
outsource authentication we also are

28
00:01:18,960 --> 00:01:23,539
slogging we outsource database

29
00:01:20,549 --> 00:01:27,150
interaction<font color="#CCCCCC"> API connectivity like</font>

30
00:01:23,540 --> 00:01:29,189
everything that<font color="#E5E5E5"> isn't strictly tied to</font>

31
00:01:27,150 --> 00:01:32,280
our unique scenario to our unique

32
00:01:29,189 --> 00:01:34,889
problem to our unique environment we

33
00:01:32,280 --> 00:01:38,369
pull in other people's code and we use

34
00:01:34,890 --> 00:01:40,560
<font color="#E5E5E5">it now that's that's perfectly fine but</font>

35
00:01:38,369 --> 00:01:42,720
the problem from that problem that comes

36
00:01:40,560 --> 00:01:43,920
from not writing all of it means we

37
00:01:42,720 --> 00:01:45,929
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> have a very</font><font color="#E5E5E5"> very deep</font>

38
00:01:43,920 --> 00:01:51,409
understanding of every like nook and

39
00:01:45,930 --> 00:01:51,409
cranny of that code so this presents

40
00:01:51,439 --> 00:01:56,548
documentation reading and thorough

41
00:01:53,880 --> 00:01:58,109
understanding problem but also a lot of

42
00:01:56,549 --> 00:02:02,369
<font color="#E5E5E5">that stuff doesn't really have good</font>

43
00:01:58,109 --> 00:02:07,500
documentation so how does this problem

44
00:02:02,369 --> 00:02:10,889
actually<font color="#E5E5E5"> manifest itself story time so</font>

45
00:02:07,500 --> 00:02:12,810
say you have example company and they

46
00:02:10,889 --> 00:02:15,958
build their first web app and it's kind

47
00:02:12,810 --> 00:02:19,709
of like an<font color="#E5E5E5"> internal control panel of</font>

48
00:02:15,959 --> 00:02:21,840
some sort so today you'd probably start

49
00:02:19,709 --> 00:02:24,720
off with some platform as a service or

50
00:02:21,840 --> 00:02:25,769
whatever like Heroku but if you were if

51
00:02:24,720 --> 00:02:27,480
<font color="#E5E5E5">you're if you're a company that's been</font>

52
00:02:25,769 --> 00:02:29,880
around for like five or six<font color="#E5E5E5"> or seven</font>

53
00:02:27,480 --> 00:02:33,078
<font color="#CCCCCC">years you would have started</font><font color="#E5E5E5"> with some</font>

54
00:02:29,880 --> 00:02:36,150
sort of VPS or something like that and

55
00:02:33,079 --> 00:02:38,610
back then<font color="#E5E5E5"> ssl-certificates</font><font color="#CCCCCC"> were more</font>

56
00:02:36,150 --> 00:02:40,470
<font color="#CCCCCC">expensive people didn't care about I</font>

57
00:02:38,610 --> 00:02:44,340
<font color="#CCCCCC">sold out much so you're just going</font><font color="#E5E5E5"> to</font>

58
00:02:40,470 --> 00:02:47,130
throw<font color="#E5E5E5"> it on the web and plaintext hgp so</font>

59
00:02:44,340 --> 00:02:48,959
about authentication it's an<font color="#E5E5E5"> internal</font>

60
00:02:47,130 --> 00:02:50,280
app like who cares whatever we're a

61
00:02:48,959 --> 00:02:52,650
small team were like three people

62
00:02:50,280 --> 00:02:55,829
nobody's<font color="#E5E5E5"> going to know</font><font color="#CCCCCC"> that that's the</font>

63
00:02:52,650 --> 00:02:57,750
URL or whatever so you<font color="#CCCCCC"> end up with</font>

64
00:02:55,829 --> 00:03:00,630
either knoweth on authentication

65
00:02:57,750 --> 00:03:03,180
whatsoever just go to that URL and open

66
00:03:00,630 --> 00:03:07,739
the app and do whatever with it this was

67
00:03:03,180 --> 00:03:10,920
like seeing live you end up<font color="#E5E5E5"> with HTTP</font>

68
00:03:07,739 --> 00:03:12,329
basic off on<font color="#CCCCCC"> Apache with a shared</font>

69
00:03:10,920 --> 00:03:15,899
password that everyone in the company

70
00:03:12,329 --> 00:03:18,180
knows or has bookmarked that password

71
00:03:15,900 --> 00:03:20,489
once the company grows to 10<font color="#CCCCCC"> or 15</font>

72
00:03:18,180 --> 00:03:22,170
people never ever changes again so that

73
00:03:20,489 --> 00:03:23,609
<font color="#E5E5E5">you're stuck with</font><font color="#CCCCCC"> that password forever</font>

74
00:03:22,170 --> 00:03:25,108
because nobody could be bothered

75
00:03:23,609 --> 00:03:26,940
changing all<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> things that</font>

76
00:03:25,109 --> 00:03:28,590
interface with that app like all the

77
00:03:26,940 --> 00:03:31,069
cron jobs that call out to everything

78
00:03:28,590 --> 00:03:35,190
that<font color="#E5E5E5"> has that password hard-coded if</font>

79
00:03:31,069 --> 00:03:36,750
you're<font color="#CCCCCC"> lucky someone said hey</font><font color="#E5E5E5"> let's</font><font color="#CCCCCC"> just</font>

80
00:03:35,190 --> 00:03:38,730
dump all<font color="#E5E5E5"> of the all of our</font>

81
00:03:36,750 --> 00:03:40,739
authentication blows<font color="#E5E5E5"> onto</font><font color="#CCCCCC"> Google and use</font>

82
00:03:38,730 --> 00:03:44,160
Google off because like<font color="#E5E5E5"> we're on Google</font>

83
00:03:40,739 --> 00:03:46,349
Apps anyway this is an internal app like

84
00:03:44,160 --> 00:03:49,889
who cares we're only going to ever have

85
00:03:46,349 --> 00:03:51,720
like 30 users on this thing so you're

86
00:03:49,889 --> 00:03:55,650
running an app that is protected<font color="#E5E5E5"> by</font>

87
00:03:51,720 --> 00:03:58,440
Google off on plain text HTTP and then

88
00:03:55,650 --> 00:04:01,199
at some<font color="#CCCCCC"> point you hire like your stuff</font>

89
00:03:58,440 --> 00:04:02,728
grows and your your servers are no

90
00:04:01,199 --> 00:04:03,960
longer capable of handling the traffic

91
00:04:02,729 --> 00:04:05,820
themselves you

92
00:04:03,960 --> 00:04:07,500
higher on some people that know the kind

93
00:04:05,820 --> 00:04:09,810
<font color="#E5E5E5">of know what they're doing so they stick</font>

94
00:04:07,500 --> 00:04:12,150
a load balancer in front of it set up a

95
00:04:09,810 --> 00:04:14,630
couple of<font color="#E5E5E5"> these machines and now you're</font>

96
00:04:12,150 --> 00:04:16,530
doing<font color="#CCCCCC"> plaintext HTTP load balancing and</font>

97
00:04:14,630 --> 00:04:18,000
everything's great you're a tiny company

98
00:04:16,529 --> 00:04:20,640
nobody's ever heard of you nobody even

99
00:04:18,000 --> 00:04:24,330
knows your domain exists who cares right

100
00:04:20,640 --> 00:04:26,820
and then at some point so maybe in this

101
00:04:24,330 --> 00:04:28,919
step someone even asked about HTTPS but

102
00:04:26,820 --> 00:04:32,630
you're like no wildcard certificates are

103
00:04:28,920 --> 00:04:35,640
so expensive and we can't<font color="#E5E5E5"> really host</font>

104
00:04:32,630 --> 00:04:40,110
you know we don't have<font color="#E5E5E5"> we have just one</font>

105
00:04:35,640 --> 00:04:41,789
IP if we get a single domain certificate

106
00:04:40,110 --> 00:04:44,040
for a controlled ah then we're gonna

107
00:04:41,790 --> 00:04:47,460
want dub dub dub<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> want like</font>

108
00:04:44,040 --> 00:04:49,800
public app dot whatever so the problem

109
00:04:47,460 --> 00:04:51,690
just<font color="#E5E5E5"> everyone's aware that maybe you</font>

110
00:04:49,800 --> 00:04:55,700
should be<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> but you just you</font>

111
00:04:51,690 --> 00:04:58,590
delay it so at some point someone's like

112
00:04:55,700 --> 00:05:01,289
hey guys we should<font color="#E5E5E5"> we should really do</font>

113
00:04:58,590 --> 00:05:03,510
HTTPS so what they do is like they

114
00:05:01,290 --> 00:05:06,450
implement HTTPS side by side like<font color="#CCCCCC"> you do</font>

115
00:05:03,510 --> 00:05:09,690
and now you can access control dot as

116
00:05:06,450 --> 00:05:11,340
HTTP or HTTPS and it's great and then

117
00:05:09,690 --> 00:05:13,800
someone<font color="#E5E5E5"> says hey like we should really</font>

118
00:05:11,340 --> 00:05:18,179
like be redirecting the stuff and doing

119
00:05:13,800 --> 00:05:20,790
it properly so on the load balancer you

120
00:05:18,180 --> 00:05:22,910
say okay like we've had enough of the

121
00:05:20,790 --> 00:05:25,050
<font color="#E5E5E5">plaintext stuff all of our ancient</font>

122
00:05:22,910 --> 00:05:27,450
clients and whatever have<font color="#E5E5E5"> been migrated</font>

123
00:05:25,050 --> 00:05:30,360
to support HTTPS so let's<font color="#E5E5E5"> just make a</font>

124
00:05:27,450 --> 00:05:32,880
rule on the load balancer that when

125
00:05:30,360 --> 00:05:38,300
someone accesses the pay<font color="#E5E5E5"> our stuff with</font>

126
00:05:32,880 --> 00:05:42,690
HTTP we redirect it to https perfect so

127
00:05:38,300 --> 00:05:44,460
if the servers so uh one thing here the

128
00:05:42,690 --> 00:05:46,850
load balancer is the one doing SSL

129
00:05:44,460 --> 00:05:50,159
termination the rest of it is behind

130
00:05:46,850 --> 00:05:51,690
like the servers are no longer publicly

131
00:05:50,160 --> 00:05:53,550
accessible so you're doing the plain

132
00:05:51,690 --> 00:05:55,680
text plain text HTTP to them you trust

133
00:05:53,550 --> 00:05:57,510
<font color="#E5E5E5">that connection that's fine almost</font>

134
00:05:55,680 --> 00:06:00,720
everyone does it like that even<font color="#E5E5E5"> like a</font>

135
00:05:57,510 --> 00:06:02,460
few years ago Google maternally admitted

136
00:06:00,720 --> 00:06:05,130
to internally just using HD nobody

137
00:06:02,460 --> 00:06:06,460
encrypts internal traffic when you're on

138
00:06:05,130 --> 00:06:09,610
this level

139
00:06:06,460 --> 00:06:12,310
so if the server is only ever see HTTP

140
00:06:09,610 --> 00:06:15,940
how will they know that the connection

141
00:06:12,310 --> 00:06:18,190
was HTTPS you might be wondering why but

142
00:06:15,940 --> 00:06:22,419
we'll get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the why but how will they</font>

143
00:06:18,190 --> 00:06:26,469
know the spoiler alert they won't not by

144
00:06:22,419 --> 00:06:29,799
default anyway so what<font color="#CCCCCC"> would we like to</font>

145
00:06:26,470 --> 00:06:34,090
see in<font color="#E5E5E5"> terms of HTTP requests and</font>

146
00:06:29,800 --> 00:06:37,840
transactions when someone goes to 82

147
00:06:34,090 --> 00:06:41,619
HTTP controlled example<font color="#CCCCCC"> com we'd</font><font color="#E5E5E5"> like to</font>

148
00:06:37,840 --> 00:06:44,289
see this where the first you<font color="#CCCCCC"> can't see</font>

149
00:06:41,620 --> 00:06:46,090
so I've highlighted the HTTP with red

150
00:06:44,289 --> 00:06:47,349
and<font color="#E5E5E5"> HTTPS with blue obviously that</font>

151
00:06:46,090 --> 00:06:50,440
doesn't show it<font color="#E5E5E5"> well enough so the first</font>

152
00:06:47,349 --> 00:06:54,159
request<font color="#E5E5E5"> is to HTTP server big-ip means</font>

153
00:06:50,440 --> 00:06:56,169
the big ass ff5 load balancer caught it

154
00:06:54,160 --> 00:06:58,599
and was like no you need to go<font color="#CCCCCC"> to HTTPS</font>

155
00:06:56,169 --> 00:07:02,620
and<font color="#CCCCCC"> he redirects you to https that same</font>

156
00:06:58,599 --> 00:07:04,599
URL you get to your flask app whatever

157
00:07:02,620 --> 00:07:06,780
<font color="#E5E5E5">this all of this stuff is applicable</font>

158
00:07:04,599 --> 00:07:10,599
across all languages and all frameworks

159
00:07:06,780 --> 00:07:12,758
it's just tiny differences so your your

160
00:07:10,599 --> 00:07:14,530
flask up cat gets a request to the

161
00:07:12,759 --> 00:07:16,210
<font color="#CCCCCC">homepage</font><font color="#E5E5E5"> and it's like know all of my</font>

162
00:07:14,530 --> 00:07:17,619
<font color="#CCCCCC">ricotta</font><font color="#E5E5E5"> my requests actually need</font><font color="#CCCCCC"> to be</font>

163
00:07:16,210 --> 00:07:20,680
authenticated so please go to the login

164
00:07:17,620 --> 00:07:22,750
page the login<font color="#CCCCCC"> page goes yeah that we</font>

165
00:07:20,680 --> 00:07:25,960
<font color="#E5E5E5">don't actually do local username and</font>

166
00:07:22,750 --> 00:07:27,699
password so<font color="#E5E5E5"> please go to google and log</font>

167
00:07:25,960 --> 00:07:31,479
in there and when you come<font color="#CCCCCC"> back from</font>

168
00:07:27,699 --> 00:07:34,270
<font color="#E5E5E5">google please come back over https to</font>

169
00:07:31,479 --> 00:07:37,659
this page so control that example.com /

170
00:07:34,270 --> 00:07:39,729
login / authorized so here this is one

171
00:07:37,659 --> 00:07:42,280
request and you get bounced around a bit

172
00:07:39,729 --> 00:07:45,130
the user logs in at Google or was

173
00:07:42,280 --> 00:07:47,859
already logged in and grants the the

174
00:07:45,130 --> 00:07:51,400
access to your app and then Google's

175
00:07:47,860 --> 00:07:54,479
servers the GSC redirects you to back to

176
00:07:51,400 --> 00:07:58,409
your app on<font color="#CCCCCC"> https / login / authorized</font>

177
00:07:54,479 --> 00:08:01,090
query string code equals access token

178
00:07:58,409 --> 00:08:02,770
because your<font color="#CCCCCC"> app could be fully internal</font>

179
00:08:01,090 --> 00:08:04,780
and<font color="#CCCCCC"> Google cannot have access</font><font color="#E5E5E5"> to it</font>

180
00:08:02,770 --> 00:08:07,270
we've mostly standardized on this

181
00:08:04,780 --> 00:08:10,739
approach where all of the all of the

182
00:08:07,270 --> 00:08:13,810
secure stuff is mostly in in band so

183
00:08:10,740 --> 00:08:16,360
<font color="#E5E5E5">Google is trusting the user to tell you</font>

184
00:08:13,810 --> 00:08:18,909
their token and then you can verify the

185
00:08:16,360 --> 00:08:21,620
token with<font color="#E5E5E5"> Google directly because</font>

186
00:08:18,909 --> 00:08:26,610
Google is bubbling sighs

187
00:08:21,620 --> 00:08:28,080
what<font color="#CCCCCC"> actually happens this so you go</font>

188
00:08:26,610 --> 00:08:31,139
<font color="#E5E5E5">over HTTP because that's what</font><font color="#CCCCCC"> you</font>

189
00:08:28,080 --> 00:08:35,250
bookmarked ages ago you get redirected

190
00:08:31,139 --> 00:08:38,520
to https<font color="#CCCCCC"> flash goes yeah but you need to</font>

191
00:08:35,250 --> 00:08:41,250
<font color="#CCCCCC">login but it sends you to http when</font>

192
00:08:38,520 --> 00:08:44,730
flask has to construct its own URL it

193
00:08:41,250 --> 00:08:47,310
can't tell that you came over HTTPS so

194
00:08:44,730 --> 00:08:49,830
it goes<font color="#E5E5E5"> like yeah I'm on HTTP controlled</font>

195
00:08:47,310 --> 00:08:52,199
out my<font color="#E5E5E5"> hostname which I know HTTP which</font>

196
00:08:49,830 --> 00:08:54,810
is the default and the URL<font color="#E5E5E5"> I want you at</font>

197
00:08:52,200 --> 00:08:56,400
and then it redirects you and then the

198
00:08:54,810 --> 00:08:58,199
load balancers like logo there what<font color="#CCCCCC"> are</font>

199
00:08:56,400 --> 00:09:01,620
you doing you need to go<font color="#E5E5E5"> back to HTTPS</font>

200
00:08:58,200 --> 00:09:05,190
and then you load the page and then you

201
00:09:01,620 --> 00:09:06,990
hit the<font color="#E5E5E5"> login page on flask and flash</font>

202
00:09:05,190 --> 00:09:10,110
goes yeah you need<font color="#E5E5E5"> to go to google and</font>

203
00:09:06,990 --> 00:09:12,779
log in there but the redirect URL is

204
00:09:10,110 --> 00:09:14,550
HTTP because again flask doesn't know

205
00:09:12,779 --> 00:09:16,110
that<font color="#CCCCCC"> you loaded the page over HTTPS and</font>

206
00:09:14,550 --> 00:09:20,520
it's not configured to do anything<font color="#E5E5E5"> else</font>

207
00:09:16,110 --> 00:09:23,160
by default user logs in and grants the

208
00:09:20,520 --> 00:09:25,800
access to the<font color="#E5E5E5"> Google account and then</font>

209
00:09:23,160 --> 00:09:27,630
send you back to http control that

210
00:09:25,800 --> 00:09:29,069
example com now the load balancer is

211
00:09:27,630 --> 00:09:31,170
going to catch this and redirect you to

212
00:09:29,070 --> 00:09:34,700
https again but at this point it doesn't

213
00:09:31,170 --> 00:09:38,640
matter you've sent a request unencrypted

214
00:09:34,700 --> 00:09:40,890
over public internet with your access

215
00:09:38,640 --> 00:09:43,230
token and at<font color="#E5E5E5"> that point if you're on</font>

216
00:09:40,890 --> 00:09:45,020
hotel Wi-Fi if you heard a security

217
00:09:43,230 --> 00:09:47,760
conference if you're<font color="#CCCCCC"> at Starbucks</font>

218
00:09:45,020 --> 00:09:49,650
<font color="#CCCCCC">someone can catch that</font><font color="#E5E5E5"> and they know</font>

219
00:09:47,760 --> 00:09:51,420
your access token and at<font color="#E5E5E5"> that point they</font>

220
00:09:49,650 --> 00:09:54,000
can just send that<font color="#E5E5E5"> same request as you</font>

221
00:09:51,420 --> 00:09:57,770
preferably<font color="#E5E5E5"> before you and redeem that</font>

222
00:09:54,000 --> 00:10:04,050
token for full access to<font color="#E5E5E5"> your app as you</font>

223
00:09:57,770 --> 00:10:08,130
so why why does this happen it happens

224
00:10:04,050 --> 00:10:11,400
because if your self hosting a nap on a

225
00:10:08,130 --> 00:10:13,890
server you the server tells the

226
00:10:11,400 --> 00:10:15,930
application hey this is HTTPS there's

227
00:10:13,890 --> 00:10:17,699
standard protocols for that most

228
00:10:15,930 --> 00:10:20,040
applications have been<font color="#E5E5E5"> built to deal</font>

229
00:10:17,700 --> 00:10:21,630
with how<font color="#E5E5E5"> apache tells you that how</font>

230
00:10:20,040 --> 00:10:24,719
engine<font color="#E5E5E5"> X tells you that and so on and so</font>

231
00:10:21,630 --> 00:10:28,920
on but<font color="#E5E5E5"> when you take the SSL termination</font>

232
00:10:24,720 --> 00:10:30,839
and move it to<font color="#CCCCCC"> the load balancer that</font>

233
00:10:28,920 --> 00:10:32,689
breaks that just the web server is

234
00:10:30,839 --> 00:10:36,260
unaware that<font color="#CCCCCC"> it's HTTPS</font>

235
00:10:32,690 --> 00:10:38,240
so what do we do the load balancers most

236
00:10:36,260 --> 00:10:41,770
of the time like this the the big-ip the

237
00:10:38,240 --> 00:10:46,220
f5 is standard issue hardware and almost

238
00:10:41,770 --> 00:10:50,870
an almost standardized approach is<font color="#E5E5E5"> that</font>

239
00:10:46,220 --> 00:10:55,330
we set the<font color="#CCCCCC"> x forwarded X forwarded proto</font>

240
00:10:50,870 --> 00:10:57,860
header to the value<font color="#E5E5E5"> HTTPS so this is</font>

241
00:10:55,330 --> 00:11:00,380
this is a<font color="#CCCCCC"> non-standard this is a non</font>

242
00:10:57,860 --> 00:11:04,250
standard header non<font color="#CCCCCC"> hdb standard header</font>

243
00:11:00,380 --> 00:11:09,050
which says<font color="#E5E5E5"> I forwarded this request to</font>

244
00:11:04,250 --> 00:11:11,990
you and the original<font color="#E5E5E5"> request was SSL the</font>

245
00:11:09,050 --> 00:11:15,469
reason why we don't<font color="#E5E5E5"> treat it</font><font color="#CCCCCC"> like why we</font>

246
00:11:11,990 --> 00:11:17,690
don't respect it out of the box is a

247
00:11:15,470 --> 00:11:20,060
weird edge case I keep flip-flopping

248
00:11:17,690 --> 00:11:22,880
between it's<font color="#E5E5E5"> actually exploitable and</font>

249
00:11:20,060 --> 00:11:25,040
not really so I'm<font color="#E5E5E5"> not really</font><font color="#CCCCCC"> sure I</font>

250
00:11:22,880 --> 00:11:27,200
<font color="#CCCCCC">think i'm not sure like each framework</font>

251
00:11:25,040 --> 00:11:32,150
some of them traded automatically flask

252
00:11:27,200 --> 00:11:33,830
for sure doesn't so another thing is you

253
00:11:32,150 --> 00:11:36,140
have<font color="#E5E5E5"> to watch out for various components</font>

254
00:11:33,830 --> 00:11:38,030
treating security headers differently so

255
00:11:36,140 --> 00:11:42,140
in that example where<font color="#CCCCCC"> we had</font><font color="#E5E5E5"> just one</font>

256
00:11:38,030 --> 00:11:44,000
box if we had ssl on it and we wanted to

257
00:11:42,140 --> 00:11:47,170
enforce it so the thing that our load

258
00:11:44,000 --> 00:11:50,720
balancer did there's a<font color="#E5E5E5"> very simple flask</font>

259
00:11:47,170 --> 00:11:52,400
<font color="#CCCCCC">plugin that's called ssl if I that will</font>

260
00:11:50,720 --> 00:11:55,010
take any HTTP<font color="#CCCCCC"> requests and bounce it</font>

261
00:11:52,400 --> 00:11:57,020
<font color="#E5E5E5">back and that works even in these</font>

262
00:11:55,010 --> 00:11:58,250
scenarios if you had that and you didn't

263
00:11:57,020 --> 00:12:00,520
have the redirect rule on the load

264
00:11:58,250 --> 00:12:02,690
balancer your flask app will do that and

265
00:12:00,520 --> 00:12:05,600
why does<font color="#E5E5E5"> that work what is that not</font>

266
00:12:02,690 --> 00:12:08,660
result in an endless<font color="#E5E5E5"> loop because the</font>

267
00:12:05,600 --> 00:12:11,660
<font color="#CCCCCC">SSL if I code looks at the header while</font>

268
00:12:08,660 --> 00:12:14,719
flask proper court doesn't so you have

269
00:12:11,660 --> 00:12:17,719
flask and you have the<font color="#CCCCCC"> plug-in and they</font>

270
00:12:14,720 --> 00:12:20,330
have different ideas of what an SSL

271
00:12:17,720 --> 00:12:22,160
request is and this could happen in<font color="#E5E5E5"> any</font>

272
00:12:20,330 --> 00:12:23,660
part of your stack so you get have part

273
00:12:22,160 --> 00:12:28,430
<font color="#E5E5E5">of the fact that thinks that they're on</font>

274
00:12:23,660 --> 00:12:31,400
SSL in part that doesn't SSL config

275
00:12:28,430 --> 00:12:33,620
changes should trigger an audit somebody

276
00:12:31,400 --> 00:12:36,980
at some point added as the salt of the

277
00:12:33,620 --> 00:12:41,690
<font color="#E5E5E5">load bouncer added the redirect header</font>

278
00:12:36,980 --> 00:12:43,670
and didn't bother checking whether all

279
00:12:41,690 --> 00:12:45,620
of<font color="#E5E5E5"> the apps respected it whether they</font>

280
00:12:43,670 --> 00:12:46,160
handle it properly maybe they loaded the

281
00:12:45,620 --> 00:12:48,949
front page

282
00:12:46,160 --> 00:12:51,860
saw and saw the redirect a GPS Emily

283
00:12:48,949 --> 00:12:53,810
we're good we're golden who cares but

284
00:12:51,860 --> 00:12:56,569
that's<font color="#E5E5E5"> that's not that's not how</font><font color="#CCCCCC"> that</font>

285
00:12:53,810 --> 00:12:58,579
stuff works any change that could

286
00:12:56,569 --> 00:13:00,769
potentially affect the security of the

287
00:12:58,579 --> 00:13:06,008
app needs to trigger a full audit of how

288
00:13:00,769 --> 00:13:09,079
the app actually behaves in the wild

289
00:13:06,009 --> 00:13:12,199
another thing is<font color="#CCCCCC"> that you saw that the</font>

290
00:13:09,079 --> 00:13:15,439
callback is passed in as HTTP that stuff

291
00:13:12,199 --> 00:13:17,779
is whitelisted explicitly on<font color="#CCCCCC"> Google so</font>

292
00:13:15,439 --> 00:13:20,120
<font color="#E5E5E5">Google has a list of acceptable</font>

293
00:13:17,779 --> 00:13:23,750
callbacks and HTTP was<font color="#E5E5E5"> white lines to</font>

294
00:13:20,120 --> 00:13:25,040
<font color="#E5E5E5">there if you remove that even with all</font>

295
00:13:23,750 --> 00:13:27,829
<font color="#CCCCCC">of the stuff that is broken on your</font>

296
00:13:25,040 --> 00:13:32,449
config<font color="#E5E5E5"> Google would go I'm not going to</font>

297
00:13:27,829 --> 00:13:35,930
do that and the most important part<font color="#E5E5E5"> of</font>

298
00:13:32,449 --> 00:13:38,389
this is<font color="#CCCCCC"> h SDS headers h h SDS stands for</font>

299
00:13:35,930 --> 00:13:40,810
HTTP strict Transport Security it's a

300
00:13:38,389 --> 00:13:44,420
header that<font color="#CCCCCC"> can only be sent over SSL</font>

301
00:13:40,810 --> 00:13:47,300
but once it's set you can it comes<font color="#E5E5E5"> with</font>

302
00:13:44,420 --> 00:13:49,790
a time value where you say for this

303
00:13:47,300 --> 00:13:54,620
duration of time which could be like one

304
00:13:49,790 --> 00:13:58,040
year or whatever do not ever attempt to

305
00:13:54,620 --> 00:14:00,769
contact me over HTTP and silently

306
00:13:58,040 --> 00:14:03,949
rewrite any HTTP<font color="#E5E5E5"> request state to https</font>

307
00:14:00,769 --> 00:14:07,220
if someone even with the broken<font color="#CCCCCC"> setup if</font>

308
00:14:03,949 --> 00:14:09,920
someone had done that on the f5 like I

309
00:14:07,220 --> 00:14:13,220
soon any<font color="#CCCCCC"> request that comes over HTTPS</font>

310
00:14:09,920 --> 00:14:15,680
when you return it set HST s that means

311
00:14:13,220 --> 00:14:17,600
the first time someone loads the app

312
00:14:15,680 --> 00:14:21,859
over the broken set up as soon as

313
00:14:17,600 --> 00:14:23,839
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> bounced to https they would they</font>

314
00:14:21,860 --> 00:14:27,139
would be like their browser would fall

315
00:14:23,839 --> 00:14:30,790
back page would default to https for the

316
00:14:27,139 --> 00:14:34,160
foreseeable future now this<font color="#E5E5E5"> isn't a full</font>

317
00:14:30,790 --> 00:14:35,959
fix in terms of if you have this broken

318
00:14:34,160 --> 00:14:39,170
set up where you can even<font color="#E5E5E5"> where you can</font>

319
00:14:35,959 --> 00:14:41,239
even<font color="#E5E5E5"> access it over HTTP and you're</font>

320
00:14:39,170 --> 00:14:43,969
dealing with a fresh client and they've

321
00:14:41,240 --> 00:14:45,559
never contacted you over<font color="#E5E5E5"> HTTPS you can</font>

322
00:14:43,970 --> 00:14:49,639
still like<font color="#CCCCCC"> man-in-the-middle</font><font color="#E5E5E5"> that and</font>

323
00:14:45,559 --> 00:14:52,339
blah blah blah but<font color="#E5E5E5"> h st s combined with</font>

324
00:14:49,639 --> 00:14:56,720
the<font color="#CCCCCC"> callback being</font><font color="#E5E5E5"> white listed only on</font>

325
00:14:52,339 --> 00:14:58,610
<font color="#E5E5E5">https would have solved this entirely</font>

326
00:14:56,720 --> 00:15:00,379
this stuff is very<font color="#CCCCCC"> difficult to catch</font>

327
00:14:58,610 --> 00:15:02,029
<font color="#E5E5E5">because</font><font color="#CCCCCC"> all of this bouncing around</font>

328
00:15:00,379 --> 00:15:04,279
browsers don't report this as bad

329
00:15:02,029 --> 00:15:05,990
behavior hopefully this will change at

330
00:15:04,279 --> 00:15:08,029
<font color="#E5E5E5">some point where if you're looking at a</font>

331
00:15:05,990 --> 00:15:10,459
site on<font color="#E5E5E5"> my GPS and you get redirected</font>

332
00:15:08,029 --> 00:15:12,860
back to<font color="#E5E5E5"> http that's going to be a red</font>

333
00:15:10,459 --> 00:15:15,859
flag it used to be back when HTTPS was

334
00:15:12,860 --> 00:15:20,209
very rare but recently it's just it's

335
00:15:15,860 --> 00:15:26,959
normal behavior for browsers<font color="#E5E5E5"> okay that's</font>

336
00:15:20,209 --> 00:15:29,779
story one story too so we have this we

337
00:15:26,959 --> 00:15:31,910
<font color="#CCCCCC">have this stop we have our internet we</font>

338
00:15:29,779 --> 00:15:35,300
have our load balancers that bounces any

339
00:15:31,910 --> 00:15:37,399
HTTP back to https<font color="#E5E5E5"> it's reporting it's</font>

340
00:15:35,300 --> 00:15:39,560
registered to control that example calm

341
00:15:37,399 --> 00:15:42,439
and we have our web servers that are not

342
00:15:39,560 --> 00:15:46,579
publicly accessible that are<font color="#E5E5E5"> serving</font>

343
00:15:42,439 --> 00:15:49,250
that application but really it's no it's

344
00:15:46,579 --> 00:15:51,229
<font color="#E5E5E5">never one application everyone thinks</font>

345
00:15:49,250 --> 00:15:53,240
<font color="#CCCCCC">like we're going</font><font color="#E5E5E5"> to build the app it's</font>

346
00:15:51,230 --> 00:15:54,889
going to be the one app and we're never

347
00:15:53,240 --> 00:15:57,259
going<font color="#E5E5E5"> to build anything else and then</font>

348
00:15:54,889 --> 00:16:00,199
it's like<font color="#E5E5E5"> hey can</font><font color="#CCCCCC"> we build this stats</font>

349
00:15:57,259 --> 00:16:01,730
dashboard can we build like an<font color="#E5E5E5"> FAQ thing</font>

350
00:16:00,199 --> 00:16:05,779
where you can<font color="#CCCCCC"> where</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can manage</font><font color="#E5E5E5"> your</font>

351
00:16:01,730 --> 00:16:10,970
if you use whatever so it ends<font color="#CCCCCC"> up being</font>

352
00:16:05,779 --> 00:16:13,990
<font color="#E5E5E5">a bunch of apps on a single IP and they</font>

353
00:16:10,970 --> 00:16:17,689
have<font color="#CCCCCC"> all they all</font><font color="#E5E5E5"> have the same problem</font>

354
00:16:13,990 --> 00:16:21,350
if you've ever set<font color="#CCCCCC"> up Oh off so logging</font>

355
00:16:17,689 --> 00:16:25,399
in with facebook twitter google linkedin

356
00:16:21,350 --> 00:16:28,100
whatever for multiple apps at the same

357
00:16:25,399 --> 00:16:31,579
company so you<font color="#E5E5E5"> have one app suddenly you</font>

358
00:16:28,100 --> 00:16:32,959
have two apps and you're all logging in

359
00:16:31,579 --> 00:16:35,149
and like all of the apps are<font color="#CCCCCC"> going to</font>

360
00:16:32,959 --> 00:16:39,018
the same provider did you bother setting

361
00:16:35,149 --> 00:16:41,809
up separate both clans or are they all

362
00:16:39,019 --> 00:16:44,120
using the same client secrets and

363
00:16:41,809 --> 00:16:49,699
everything to like sign the request and

364
00:16:44,120 --> 00:16:53,089
so on yeah so in this example all of the

365
00:16:49,699 --> 00:16:56,628
apps use like to<font color="#E5E5E5"> Google they're the same</font>

366
00:16:53,089 --> 00:16:59,509
app the requests come in digitally<font color="#CCCCCC"> sign</font>

367
00:16:56,629 --> 00:17:01,250
<font color="#E5E5E5">the same way and the tokens that Google</font>

368
00:16:59,509 --> 00:17:07,280
returns can be used by any<font color="#E5E5E5"> of the apps</font>

369
00:17:01,250 --> 00:17:09,140
because it's the same app so<font color="#CCCCCC"> that means</font>

370
00:17:07,280 --> 00:17:12,379
<font color="#E5E5E5">that if someone</font>

371
00:17:09,140 --> 00:17:17,030
were to catch<font color="#CCCCCC"> that access token for an</font>

372
00:17:12,380 --> 00:17:19,300
insignificant app they could use that to

373
00:17:17,030 --> 00:17:23,240
<font color="#CCCCCC">login to</font><font color="#E5E5E5"> your critical lab that has</font>

374
00:17:19,300 --> 00:17:26,709
customer data that has you know credit

375
00:17:23,240 --> 00:17:32,180
card transactions whatever so this is

376
00:17:26,709 --> 00:17:34,130
I've seen this a lot I've done<font color="#E5E5E5"> it don't</font>

377
00:17:32,180 --> 00:17:37,940
do this don't be lazy set up separate

378
00:17:34,130 --> 00:17:39,590
<font color="#CCCCCC">all off clients to ensure that access</font>

379
00:17:37,940 --> 00:17:42,680
<font color="#E5E5E5">Keys cannot be reused between apps</font>

380
00:17:39,590 --> 00:17:45,260
because nobody<font color="#E5E5E5"> cares like the users will</font>

381
00:17:42,680 --> 00:17:48,230
never care and it's it's very

382
00:17:45,260 --> 00:17:50,629
exploitable even without the whole<font color="#E5E5E5"> SSL</font>

383
00:17:48,230 --> 00:17:53,630
thing it's<font color="#E5E5E5"> possible to intercept stuff</font>

384
00:17:50,630 --> 00:17:57,170
like people are<font color="#CCCCCC"> people are willing</font><font color="#E5E5E5"> to</font>

385
00:17:53,630 --> 00:17:59,870
accept broken ssl certificates on the

386
00:17:57,170 --> 00:18:02,510
airports<font color="#E5E5E5"> and hotels and so on people</font>

387
00:17:59,870 --> 00:18:05,750
will click through man-in-the-middle

388
00:18:02,510 --> 00:18:07,190
attacks and they'll they'll be like oh

389
00:18:05,750 --> 00:18:08,930
this isn't in this is an insignificant

390
00:18:07,190 --> 00:18:10,610
app this is like the internal company

391
00:18:08,930 --> 00:18:13,460
directory with phone numbers who cares

392
00:18:10,610 --> 00:18:16,300
if someone sniffs that but someone

393
00:18:13,460 --> 00:18:18,830
steals that token uses it somewhere<font color="#CCCCCC"> else</font>

394
00:18:16,300 --> 00:18:21,200
that was a second<font color="#CCCCCC"> story third story is</font>

395
00:18:18,830 --> 00:18:25,850
what is what<font color="#E5E5E5"> are cookies what our</font>

396
00:18:21,200 --> 00:18:27,530
sessions when<font color="#CCCCCC"> I started</font><font color="#E5E5E5"> doing websites</font>

397
00:18:25,850 --> 00:18:29,090
first of all there were no sessions and

398
00:18:27,530 --> 00:18:33,350
then there were sessions where we were

399
00:18:29,090 --> 00:18:36,679
like session ID 42<font color="#CCCCCC"> please that time is</font>

400
00:18:33,350 --> 00:18:40,459
long gone<font color="#E5E5E5"> and now we have this encrypted</font>

401
00:18:36,680 --> 00:18:44,150
mess and how is that encrypted how does

402
00:18:40,460 --> 00:18:48,320
that<font color="#CCCCCC"> even come to be well how is cookie</font>

403
00:18:44,150 --> 00:18:51,230
signed for flask a<font color="#E5E5E5"> well-known Python</font>

404
00:18:48,320 --> 00:18:54,500
framework you have a configuration value

405
00:18:51,230 --> 00:18:57,220
which is called secret key you set it

406
00:18:54,500 --> 00:19:00,290
and then it uses<font color="#E5E5E5"> that to encrypt and</font>

407
00:18:57,220 --> 00:19:04,220
sign and whatever various<font color="#CCCCCC"> things among</font>

408
00:19:00,290 --> 00:19:06,020
others the sessions and stuff it says it

409
00:19:04,220 --> 00:19:07,520
defaults to none but it'll warn you

410
00:19:06,020 --> 00:19:11,180
about<font color="#E5E5E5"> that and you can you can make it</font>

411
00:19:07,520 --> 00:19:13,639
like not work with that same with<font color="#E5E5E5"> Django</font>

412
00:19:11,180 --> 00:19:15,280
it defaults<font color="#CCCCCC"> to empty string but</font><font color="#E5E5E5"> it'll</font>

413
00:19:13,640 --> 00:19:18,500
refuse to start if it's an<font color="#CCCCCC"> empty string</font>

414
00:19:15,280 --> 00:19:22,610
okay so it's not<font color="#E5E5E5"> possible to actually</font>

415
00:19:18,500 --> 00:19:28,580
use this with with no secret<font color="#E5E5E5"> key to find</font>

416
00:19:22,610 --> 00:19:31,070
but so coming<font color="#E5E5E5"> going from this example</font>

417
00:19:28,580 --> 00:19:34,040
where we<font color="#CCCCCC"> have one app running on one</font>

418
00:19:31,070 --> 00:19:36,500
server in this example where we have<font color="#CCCCCC"> 4</font>

419
00:19:34,040 --> 00:19:39,230
or<font color="#CCCCCC"> 5 10 apps running on various</font>

420
00:19:36,500 --> 00:19:41,690
different servers so one thing that that

421
00:19:39,230 --> 00:19:44,570
session key it doesn't<font color="#E5E5E5"> hold just the</font>

422
00:19:41,690 --> 00:19:47,059
session ID because with this distributed

423
00:19:44,570 --> 00:19:49,159
web server architecture we can't really

424
00:19:47,059 --> 00:19:51,530
<font color="#E5E5E5">afford to store the data somewhere else</font>

425
00:19:49,160 --> 00:19:53,240
and<font color="#CCCCCC"> then just send</font><font color="#E5E5E5"> them the session key</font>

426
00:19:51,530 --> 00:19:56,270
and then go and fetch<font color="#E5E5E5"> the data we've</font>

427
00:19:53,240 --> 00:19:58,549
actually<font color="#CCCCCC"> crammed the small parts of of</font>

428
00:19:56,270 --> 00:20:04,520
of crucial data in the session and then

429
00:19:58,549 --> 00:20:13,639
we encrypt it so in this example you

430
00:20:04,520 --> 00:20:17,720
have various different apps what if the

431
00:20:13,640 --> 00:20:21,730
<font color="#E5E5E5">secret key is the same between them what</font>

432
00:20:17,720 --> 00:20:24,500
if someone<font color="#E5E5E5"> steals your session cookie if</font>

433
00:20:21,730 --> 00:20:26,330
you're using google off on all of the

434
00:20:24,500 --> 00:20:29,179
apps and someone steals your session

435
00:20:26,330 --> 00:20:33,040
cookie they can literally<font color="#E5E5E5"> go to the</font>

436
00:20:29,179 --> 00:20:37,309
other app and replay it and get access

437
00:20:33,040 --> 00:20:40,580
<font color="#CCCCCC">so this is so the</font><font color="#E5E5E5"> the key being the same</font>

438
00:20:37,309 --> 00:20:42,918
is incredibly difficult to<font color="#E5E5E5"> catch because</font>

439
00:20:40,580 --> 00:20:45,168
the data<font color="#E5E5E5"> that is being encrypted is</font>

440
00:20:42,919 --> 00:20:48,169
different across apps it has the<font color="#CCCCCC"> same</font>

441
00:20:45,169 --> 00:20:49,460
keys in the hash but it's<font color="#CCCCCC"> different so</font>

442
00:20:48,169 --> 00:20:52,130
you're never going to see the<font color="#CCCCCC"> same</font>

443
00:20:49,460 --> 00:20:54,230
values coming from two apps what you

444
00:20:52,130 --> 00:20:56,090
might see are like really weird

445
00:20:54,230 --> 00:20:58,130
situations where you're logged into one

446
00:20:56,090 --> 00:20:59,928
app and you go<font color="#E5E5E5"> over</font><font color="#CCCCCC"> to the different to</font>

447
00:20:58,130 --> 00:21:01,370
another app and you're still logged in

448
00:20:59,929 --> 00:21:03,530
despite never having logged in there

449
00:21:01,370 --> 00:21:05,149
like in<font color="#CCCCCC"> the last</font><font color="#E5E5E5"> two weeks but</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> kind</font>

450
00:21:03,530 --> 00:21:08,210
of broken like some stuff is missing you

451
00:21:05,150 --> 00:21:09,980
<font color="#CCCCCC">will see your your name and the like</font>

452
00:21:08,210 --> 00:21:11,900
header is missing or you'll see your

453
00:21:09,980 --> 00:21:14,419
profile photo missing I've<font color="#CCCCCC"> cepted like</font>

454
00:21:11,900 --> 00:21:15,890
stuff like that and I've there was an

455
00:21:14,419 --> 00:21:17,809
example<font color="#CCCCCC"> where I was seeing this behavior</font>

456
00:21:15,890 --> 00:21:20,299
for weeks and I couldn't<font color="#E5E5E5"> figure out what</font>

457
00:21:17,809 --> 00:21:22,428
it was like how am I even logged in here

458
00:21:20,299 --> 00:21:24,289
<font color="#E5E5E5">it's a different host name</font>

459
00:21:22,429 --> 00:21:26,450
and<font color="#E5E5E5"> it's kind</font><font color="#CCCCCC"> of broken where you have</font>

460
00:21:24,289 --> 00:21:28,039
to log out and log back in but and then

461
00:21:26,450 --> 00:21:30,110
you go back<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> other app but you</font>

462
00:21:28,039 --> 00:21:31,279
don't<font color="#E5E5E5"> do it the same day you the next</font>

463
00:21:30,110 --> 00:21:32,928
<font color="#E5E5E5">day</font><font color="#CCCCCC"> you go to the other app and</font><font color="#E5E5E5"> you're</font>

464
00:21:31,279 --> 00:21:41,389
like I'm logged in<font color="#CCCCCC"> here but it's kind of</font>

465
00:21:32,929 --> 00:21:43,730
broken so<font color="#E5E5E5"> you could even have multiple</font>

466
00:21:41,389 --> 00:21:45,469
versions of the same app so in this

467
00:21:43,730 --> 00:21:47,049
example even though<font color="#CCCCCC"> you have like three</font>

468
00:21:45,470 --> 00:21:50,600
different apps maybe the apps have

469
00:21:47,049 --> 00:21:53,658
unique<font color="#E5E5E5"> keys unique secret keys but</font>

470
00:21:50,600 --> 00:21:55,759
control you don't you don't if so not

471
00:21:53,659 --> 00:21:57,649
<font color="#CCCCCC">control</font><font color="#E5E5E5"> but like if you have a public</font>

472
00:21:55,759 --> 00:21:59,779
app something that users actually use

473
00:21:57,649 --> 00:22:00,860
you don't want every commit going out to

474
00:21:59,779 --> 00:22:02,360
them because you don't want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> break it</font>

475
00:22:00,860 --> 00:22:04,039
for<font color="#E5E5E5"> them so you're going to have like</font>

476
00:22:02,360 --> 00:22:05,479
<font color="#CCCCCC">sake control was a public app you're</font>

477
00:22:04,039 --> 00:22:07,789
<font color="#CCCCCC">going to have control you're going to</font>

478
00:22:05,480 --> 00:22:10,490
have control dash dev which is<font color="#E5E5E5"> like</font>

479
00:22:07,789 --> 00:22:13,639
every like rolled out immediately you're

480
00:22:10,490 --> 00:22:15,559
going to have control dash demo for if

481
00:22:13,639 --> 00:22:16,939
you're showing it to prospective clients

482
00:22:15,559 --> 00:22:18,740
and you don't want to use real the real

483
00:22:16,940 --> 00:22:20,330
app with the real data you're going to

484
00:22:18,740 --> 00:22:24,110
have a separate database for the demo

485
00:22:20,330 --> 00:22:26,299
and so on but the secret key is going to

486
00:22:24,110 --> 00:22:28,279
be tied to the control app and not to

487
00:22:26,299 --> 00:22:31,700
the<font color="#E5E5E5"> specific instance this is the result</font>

488
00:22:28,279 --> 00:22:32,960
<font color="#E5E5E5">of developers knowing what secret key is</font>

489
00:22:31,700 --> 00:22:35,389
and what it does and what the

490
00:22:32,960 --> 00:22:38,210
implications are and system<font color="#E5E5E5"> ins setting</font>

491
00:22:35,389 --> 00:22:41,149
up this whole deploys system and like

492
00:22:38,210 --> 00:22:42,710
various servers and and civil and<font color="#CCCCCC"> what</font>

493
00:22:41,149 --> 00:22:44,330
<font color="#CCCCCC">not and not understanding what it is</font>

494
00:22:42,710 --> 00:22:47,029
it's like yeah secret key sure make it

495
00:22:44,330 --> 00:22:49,580
<font color="#E5E5E5">unique for the control app whatever and</font>

496
00:22:47,029 --> 00:22:51,409
then when once you have control the

497
00:22:49,580 --> 00:22:53,330
<font color="#E5E5E5">developers come over and is like hey can</font>

498
00:22:51,409 --> 00:22:55,279
<font color="#E5E5E5">we have control be frozen in time and</font>

499
00:22:53,330 --> 00:22:57,529
have automatic deployments go to control

500
00:22:55,279 --> 00:22:58,970
dash dev sure let's<font color="#E5E5E5"> just copy paste the</font>

501
00:22:57,529 --> 00:23:00,889
same configuration block and it's going

502
00:22:58,970 --> 00:23:02,929
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be the same secret key because it's</font>

503
00:23:00,889 --> 00:23:05,498
the control lab who cares we end up

504
00:23:02,929 --> 00:23:09,440
having people authorized to one app

505
00:23:05,499 --> 00:23:12,139
being able to go to so you might an

506
00:23:09,440 --> 00:23:14,509
attacker might sniff a key the<font color="#E5E5E5"> session</font>

507
00:23:12,139 --> 00:23:16,459
stuff for the demo app which has demo

508
00:23:14,509 --> 00:23:18,710
data and nobody cares and you treat it

509
00:23:16,460 --> 00:23:21,230
less securely and they can replay that

510
00:23:18,710 --> 00:23:25,650
same session against the real<font color="#E5E5E5"> control</font>

511
00:23:21,230 --> 00:23:31,050
app so

512
00:23:25,650 --> 00:23:33,210
all these combined together so this was

513
00:23:31,050 --> 00:23:34,409
caught over like<font color="#E5E5E5"> several different</font>

514
00:23:33,210 --> 00:23:36,990
places<font color="#E5E5E5"> several different companies</font>

515
00:23:34,410 --> 00:23:39,570
several different apps but if you were

516
00:23:36,990 --> 00:23:41,910
to put them<font color="#E5E5E5"> together that's a</font>

517
00:23:39,570 --> 00:23:45,510
spearfishing vector say you were

518
00:23:41,910 --> 00:23:47,280
attacking a company that has millions<font color="#E5E5E5"> of</font>

519
00:23:45,510 --> 00:23:50,010
dollars in investment they're about to

520
00:23:47,280 --> 00:23:51,450
<font color="#CCCCCC">go big they're your competitor</font><font color="#E5E5E5"> you</font>

521
00:23:50,010 --> 00:23:52,800
really don't want them to go big you

522
00:23:51,450 --> 00:23:54,450
<font color="#CCCCCC">really don't want them to succeed and</font>

523
00:23:52,800 --> 00:23:56,820
<font color="#E5E5E5">you know where their office is because</font>

524
00:23:54,450 --> 00:23:58,860
it's on their website it says that and

525
00:23:56,820 --> 00:24:02,220
that address in like San Francisco or

526
00:23:58,860 --> 00:24:05,070
whatever if you stalk the starbucks and

527
00:24:02,220 --> 00:24:07,680
various like cafes around it all of the

528
00:24:05,070 --> 00:24:10,889
shitty places that have shitty Wi-Fi you

529
00:24:07,680 --> 00:24:13,380
can<font color="#E5E5E5"> probably sniff something it's like</font>

530
00:24:10,890 --> 00:24:16,200
part of this and<font color="#E5E5E5"> that gives you a</font>

531
00:24:13,380 --> 00:24:20,580
<font color="#E5E5E5">shoo-in like privilege escalation</font>

532
00:24:16,200 --> 00:24:23,490
between different apps between stuff

533
00:24:20,580 --> 00:24:26,070
like that forced in secure comms so

534
00:24:23,490 --> 00:24:29,100
without HST<font color="#E5E5E5"> s without all of that stuff</font>

535
00:24:26,070 --> 00:24:32,520
if you catch someone accessing a nap

536
00:24:29,100 --> 00:24:34,980
over HTTP you can just<font color="#E5E5E5"> say okay</font><font color="#CCCCCC"> you go</font>

537
00:24:32,520 --> 00:24:36,600
and do<font color="#CCCCCC"> it over hlg over</font><font color="#E5E5E5"> https satisfy</font>

538
00:24:34,980 --> 00:24:38,670
the servers and then you serve back the

539
00:24:36,600 --> 00:24:40,949
content over HTTP you have a plaintext

540
00:24:38,670 --> 00:24:42,690
connection you don't need to fake any

541
00:24:40,950 --> 00:24:44,460
certificates nothing like that they're

542
00:24:42,690 --> 00:24:47,460
perfectly happy<font color="#E5E5E5"> being on HTTP they're</font>

543
00:24:44,460 --> 00:24:49,860
probably not<font color="#E5E5E5"> going to even notice so and</font>

544
00:24:47,460 --> 00:24:51,150
in this case<font color="#E5E5E5"> because the person that</font>

545
00:24:49,860 --> 00:24:54,389
you're attacking is in the same

546
00:24:51,150 --> 00:24:56,760
starbucks is you you're your there they

547
00:24:54,390 --> 00:24:58,110
are there the traffic between you two is

548
00:24:56,760 --> 00:25:00,720
indistinguishable there's like there's

549
00:24:58,110 --> 00:25:02,820
no chance of catching this happening

550
00:25:00,720 --> 00:25:04,110
because<font color="#E5E5E5"> you're the only one accessing</font>

551
00:25:02,820 --> 00:25:06,600
and<font color="#CCCCCC"> you're proxying everything that they</font>

552
00:25:04,110 --> 00:25:07,649
do you could spoof their user agent you

553
00:25:06,600 --> 00:25:11,070
can spoof all of their cookies

554
00:25:07,650 --> 00:25:13,200
everything and the important thing here

555
00:25:11,070 --> 00:25:16,860
is the load balancer isn't the one to

556
00:25:13,200 --> 00:25:19,200
blame like all of this all this could

557
00:25:16,860 --> 00:25:21,030
happen without that all this miss

558
00:25:19,200 --> 00:25:23,730
configuration and so on could<font color="#E5E5E5"> be used</font>

559
00:25:21,030 --> 00:25:27,570
even if it was a single<font color="#CCCCCC"> server running</font>

560
00:25:23,730 --> 00:25:30,120
ssl on it without<font color="#CCCCCC"> H SDS without all that</font>

561
00:25:27,570 --> 00:25:31,919
stuff people have ancient bookmarks

562
00:25:30,120 --> 00:25:33,870
pointing to http that's you're not gonna

563
00:25:31,920 --> 00:25:35,880
you're not going to have everyone delete

564
00:25:33,870 --> 00:25:39,060
every bookmark ever you're not going to

565
00:25:35,880 --> 00:25:39,670
have everyone type in HTTPS control that

566
00:25:39,060 --> 00:25:41,649
example

567
00:25:39,670 --> 00:25:43,740
they're<font color="#E5E5E5"> going to access it over HTTP</font>

568
00:25:41,650 --> 00:25:48,220
what you need<font color="#E5E5E5"> to do is</font><font color="#CCCCCC"> make sure that</font>

569
00:25:43,740 --> 00:25:49,900
they cannot do that once you know<font color="#CCCCCC"> that</font>

570
00:25:48,220 --> 00:25:52,930
they're you<font color="#CCCCCC"> there your user they can</font>

571
00:25:49,900 --> 00:25:55,000
<font color="#E5E5E5">never access you over HTTP again and as</font>

572
00:25:52,930 --> 00:25:56,470
soon as you've established secure

573
00:25:55,000 --> 00:26:01,420
communication make sure that it stays

574
00:25:56,470 --> 00:26:03,070
secure so all things<font color="#E5E5E5"> being equal but</font>

575
00:26:01,420 --> 00:26:04,540
running on<font color="#E5E5E5"> a single machine this would</font>

576
00:26:03,070 --> 00:26:06,129
be this would still be a vulnerable

577
00:26:04,540 --> 00:26:11,020
<font color="#CCCCCC">setup like that there's no</font><font color="#E5E5E5"> doubt about</font>

578
00:26:06,130 --> 00:26:12,490
it HST s is absolutely a must<font color="#E5E5E5"> like</font>

579
00:26:11,020 --> 00:26:15,550
there's there's no discussion here if

580
00:26:12,490 --> 00:26:19,840
you do htps and there's no<font color="#E5E5E5"> reason for</font>

581
00:26:15,550 --> 00:26:22,270
<font color="#CCCCCC">you to still support HTTP hsd s entire</font>

582
00:26:19,840 --> 00:26:23,709
domain on everything do it on the load

583
00:26:22,270 --> 00:26:29,710
balancer make sure every single request

584
00:26:23,710 --> 00:26:31,420
is tagged<font color="#CCCCCC"> with it story</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> csrf</font>

585
00:26:29,710 --> 00:26:35,260
protection disabled as<font color="#E5E5E5"> everyone knows</font>

586
00:26:31,420 --> 00:26:39,700
yes csrf<font color="#CCCCCC"> fez cross-site request forgery</font>

587
00:26:35,260 --> 00:26:42,940
is an attack where a user goes to cite

588
00:26:39,700 --> 00:26:45,580
one and site one causes their browser to

589
00:26:42,940 --> 00:26:47,470
make a request on site to in a way that

590
00:26:45,580 --> 00:26:52,679
causes psyched to to think<font color="#E5E5E5"> that the user</font>

591
00:26:47,470 --> 00:26:55,180
clicked a thing on site<font color="#CCCCCC"> too so it's a</font>

592
00:26:52,680 --> 00:26:57,850
long long time ago there<font color="#E5E5E5"> was an attack</font>

593
00:26:55,180 --> 00:26:59,710
on<font color="#CCCCCC"> amazon where CSRF was used well there</font>

594
00:26:57,850 --> 00:27:02,409
was an attack against users where CSF

595
00:26:59,710 --> 00:27:04,780
<font color="#CCCCCC">csrf was used to buy a bunch</font><font color="#E5E5E5"> of books</font>

596
00:27:02,410 --> 00:27:06,610
from some author<font color="#CCCCCC"> earn them a bunch</font><font color="#E5E5E5"> of</font>

597
00:27:04,780 --> 00:27:08,560
<font color="#E5E5E5">money if you were logged into amazon had</font>

598
00:27:06,610 --> 00:27:11,860
one click enable you visit some random

599
00:27:08,560 --> 00:27:15,250
site and hey you've bought a book I've

600
00:27:11,860 --> 00:27:19,600
seen<font color="#CCCCCC"> CSRF disabled in production this</font>

601
00:27:15,250 --> 00:27:21,610
year legacy apps like people<font color="#E5E5E5"> people</font>

602
00:27:19,600 --> 00:27:24,310
don't even know that<font color="#CCCCCC"> it's there</font><font color="#E5E5E5"> and the</font>

603
00:27:21,610 --> 00:27:25,840
worst part the worst part<font color="#CCCCCC"> of it is once</font>

604
00:27:24,310 --> 00:27:27,730
an application grows to a certain size

605
00:27:25,840 --> 00:27:31,090
there's<font color="#E5E5E5"> absolutely no chance of a new</font>

606
00:27:27,730 --> 00:27:32,860
developer walking into<font color="#E5E5E5"> it doing an audit</font>

607
00:27:31,090 --> 00:27:34,330
of all of the configuration they're

608
00:27:32,860 --> 00:27:35,830
going to trust that the setup that

609
00:27:34,330 --> 00:27:39,610
they're used to the flash the Django to

610
00:27:35,830 --> 00:27:42,120
whatever is set up properly out of the

611
00:27:39,610 --> 00:27:44,290
box<font color="#E5E5E5"> and like Django offers you forms</font>

612
00:27:42,120 --> 00:27:46,209
functionality that just does here sir

613
00:27:44,290 --> 00:27:49,690
I've automatically if you use Django

614
00:27:46,210 --> 00:27:51,850
forms it just tags request with the<font color="#CCCCCC"> CSRF</font>

615
00:27:49,690 --> 00:27:53,500
token everything is secure everything is

616
00:27:51,850 --> 00:27:56,590
golden but if someone

617
00:27:53,500 --> 00:27:58,240
and disabled it you don't know like your

618
00:27:56,590 --> 00:28:00,159
app works exactly the same your code

619
00:27:58,240 --> 00:28:02,800
looks exactly the same you need to know

620
00:28:00,160 --> 00:28:05,500
to look for it and in 2016 I didn't<font color="#E5E5E5"> know</font>

621
00:28:02,800 --> 00:28:06,970
to look for it I was I<font color="#E5E5E5"> was randomly</font>

622
00:28:05,500 --> 00:28:09,370
doing something completely different in

623
00:28:06,970 --> 00:28:14,950
the config files and I saw<font color="#CCCCCC"> CSRF enabled</font>

624
00:28:09,370 --> 00:28:18,040
the equals false 2016 it comes with<font color="#CCCCCC"> the</font>

625
00:28:14,950 --> 00:28:22,930
thing leave<font color="#CCCCCC"> csrf protection alone don't</font>

626
00:28:18,040 --> 00:28:25,450
touch it<font color="#CCCCCC"> don't disable the takeaways</font>

627
00:28:22,930 --> 00:28:28,000
here are understand the stuff<font color="#E5E5E5"> you use</font>

628
00:28:25,450 --> 00:28:29,890
better the time when you knew everything

629
00:28:28,000 --> 00:28:33,910
because<font color="#E5E5E5"> you wrote everything is long</font>

630
00:28:29,890 --> 00:28:35,800
gone<font color="#E5E5E5"> and we need to focus on</font>

631
00:28:33,910 --> 00:28:38,740
understanding the toolset that we use

632
00:28:35,800 --> 00:28:41,639
don't pull in 300 dependencies for your

633
00:28:38,740 --> 00:28:44,350
stuff if you can find things that cover

634
00:28:41,640 --> 00:28:46,540
larger blocks of functionality that<font color="#E5E5E5"> you</font>

635
00:28:44,350 --> 00:28:49,899
need use that I'm<font color="#E5E5E5"> not saying don't pull</font>

636
00:28:46,540 --> 00:28:51,879
in anything but manage your dependencies

637
00:28:49,900 --> 00:28:55,060
and know what they do know how they work

638
00:28:51,880 --> 00:28:57,070
know their edge cases and so on be more

639
00:28:55,060 --> 00:28:59,740
<font color="#E5E5E5">vigilant with codes with code reviews on</font>

640
00:28:57,070 --> 00:29:01,300
security impacting stuff any change to

641
00:28:59,740 --> 00:29:04,030
web server or load balancer

642
00:29:01,300 --> 00:29:05,860
configuration any change in how ssl

643
00:29:04,030 --> 00:29:08,980
works any addition to these redirects

644
00:29:05,860 --> 00:29:10,840
and so on needs<font color="#E5E5E5"> to be like the apps</font>

645
00:29:08,980 --> 00:29:12,820
themselves need to be audited<font color="#CCCCCC"> you need</font>

646
00:29:10,840 --> 00:29:16,720
to look<font color="#E5E5E5"> at the request you need to see</font>

647
00:29:12,820 --> 00:29:18,220
what they do and bring<font color="#E5E5E5"> it bring in a</font>

648
00:29:16,720 --> 00:29:21,360
fresh pair of eyes every once in<font color="#E5E5E5"> a while</font>

649
00:29:18,220 --> 00:29:25,630
half of this stuff<font color="#CCCCCC"> I caught doing</font>

650
00:29:21,360 --> 00:29:29,050
consulting for companies on something

651
00:29:25,630 --> 00:29:31,090
else they would bring me in because they

652
00:29:29,050 --> 00:29:33,220
had performance issues i would say<font color="#CCCCCC"> okay</font>

653
00:29:31,090 --> 00:29:34,990
we need<font color="#CCCCCC"> to split this app up you have</font>

654
00:29:33,220 --> 00:29:36,700
you know these two things running in the

655
00:29:34,990 --> 00:29:38,620
same app and this is getting a ton of

656
00:29:36,700 --> 00:29:40,960
traffic and<font color="#CCCCCC"> you want the three requests</font>

657
00:29:38,620 --> 00:29:42,429
a day to<font color="#E5E5E5"> be high priority we're going to</font>

658
00:29:40,960 --> 00:29:43,660
<font color="#E5E5E5">split it up and it's completely separate</font>

659
00:29:42,430 --> 00:29:48,250
function<font color="#CCCCCC"> l we're going to split</font><font color="#E5E5E5"> it up oh</font>

660
00:29:43,660 --> 00:29:50,680
hey this app<font color="#CCCCCC"> i need to set up Oh off for</font>

661
00:29:48,250 --> 00:29:53,290
it<font color="#E5E5E5"> and hey there's a bunch of HTTP white</font>

662
00:29:50,680 --> 00:29:55,960
list of apps there and they're all like

663
00:29:53,290 --> 00:29:59,200
they're all under the same client I need

664
00:29:55,960 --> 00:30:01,450
to set<font color="#CCCCCC"> up a new client so bringing in</font>

665
00:29:59,200 --> 00:30:03,490
fresh pairs of eyes<font color="#E5E5E5"> to look at your</font>

666
00:30:01,450 --> 00:30:05,440
established stuff can be extremely

667
00:30:03,490 --> 00:30:07,779
helpful in digging up these

668
00:30:05,440 --> 00:30:13,269
issues that have been that have been

669
00:30:07,779 --> 00:30:14,740
there<font color="#E5E5E5"> for months or years this talk</font><font color="#CCCCCC"> is</font>

670
00:30:13,269 --> 00:30:18,070
not an endorsement to roll everything

671
00:30:14,740 --> 00:30:21,429
yourself that's not that's not what this

672
00:30:18,070 --> 00:30:24,340
is<font color="#E5E5E5"> third</font><font color="#CCCCCC"> party open source</font><font color="#E5E5E5"> code that has</font>

673
00:30:21,429 --> 00:30:27,240
been vetted that has been like audited

674
00:30:24,340 --> 00:30:30,100
and analyzed by other people is great

675
00:30:27,240 --> 00:30:32,110
you're never going<font color="#E5E5E5"> to achieve that level</font>

676
00:30:30,100 --> 00:30:36,330
of security on general purpose stuff

677
00:30:32,110 --> 00:30:39,879
like authentication API stuff like no

678
00:30:36,330 --> 00:30:41,320
bring in external code as long as it's

679
00:30:39,879 --> 00:30:43,809
open source as long as it's maintained

680
00:30:41,320 --> 00:30:45,820
as long as it's up to date if if

681
00:30:43,809 --> 00:30:52,529
hundreds of people have contributed<font color="#E5E5E5"> to</font>

682
00:30:45,820 --> 00:30:52,529
that's great thank you<font color="#E5E5E5"> any</font><font color="#CCCCCC"> questions</font>

683
00:31:41,730 --> 00:31:50,700
that we<font color="#CCCCCC"> can grow back from HTTPS HDD but</font>

684
00:31:47,620 --> 00:31:54,840
if you are<font color="#E5E5E5"> very</font><font color="#CCCCCC"> little SSL termination</font>

685
00:31:50,700 --> 00:31:58,690
<font color="#CCCCCC">was in</font><font color="#E5E5E5"> front of your works web server</font>

686
00:31:54,840 --> 00:32:03,908
there is no<font color="#E5E5E5"> such possibility and another</font>

687
00:31:58,690 --> 00:32:07,230
question is in case that<font color="#CCCCCC"> you are running</font>

688
00:32:03,909 --> 00:32:07,230
let's say no

689
00:32:21,040 --> 00:32:26,629
okay so the question is let me see if I

690
00:32:24,950 --> 00:32:28,010
<font color="#CCCCCC">get this right question</font><font color="#E5E5E5"> number one is</font>

691
00:32:26,630 --> 00:32:29,660
why are we talking about falling back to

692
00:32:28,010 --> 00:32:31,879
http at all why is that still a thing

693
00:32:29,660 --> 00:32:33,440
<font color="#E5E5E5">and question two is why not use client</font>

694
00:32:31,880 --> 00:32:35,480
certificates<font color="#E5E5E5"> I'm going to address client</font>

695
00:32:33,440 --> 00:32:37,220
certificates those are ridiculously

696
00:32:35,480 --> 00:32:39,110
difficult to implement if you're a tiny

697
00:32:37,220 --> 00:32:41,300
<font color="#E5E5E5">three person company trying to raise</font>

698
00:32:39,110 --> 00:32:43,280
your<font color="#E5E5E5"> first hundred thousand</font><font color="#CCCCCC"> dollars like</font>

699
00:32:41,300 --> 00:32:45,860
what if three people are living in<font color="#E5E5E5"> the</font>

700
00:32:43,280 --> 00:32:47,720
same apartment coding every single day

701
00:32:45,860 --> 00:32:49,520
trying to ship something and show it

702
00:32:47,720 --> 00:32:50,810
they're not going to get<font color="#CCCCCC"> home to client</font>

703
00:32:49,520 --> 00:32:55,129
certificates they only gotten around to

704
00:32:50,810 --> 00:32:57,350
SSL like two years ago that's one as far

705
00:32:55,130 --> 00:33:00,920
as falling back to<font color="#CCCCCC"> http to plain text</font>

706
00:32:57,350 --> 00:33:03,830
it's a very<font color="#E5E5E5"> unique thing about HTTP</font>

707
00:33:00,920 --> 00:33:08,630
which is unlike any other protocol that

708
00:33:03,830 --> 00:33:11,000
we use so HTTP is as far as I know one

709
00:33:08,630 --> 00:33:12,740
of the only protocols that supports

710
00:33:11,000 --> 00:33:14,330
virtual hosts in the way that<font color="#E5E5E5"> it does</font>

711
00:33:12,740 --> 00:33:18,380
where you could have wildly different

712
00:33:14,330 --> 00:33:22,040
results based on which host header<font color="#CCCCCC"> you</font>

713
00:33:18,380 --> 00:33:24,800
send a smtp kind of has<font color="#CCCCCC"> happened and</font>

714
00:33:22,040 --> 00:33:26,870
second HTTP is one of the only protocols

715
00:33:24,800 --> 00:33:30,110
that I'm aware of that lets you link to

716
00:33:26,870 --> 00:33:31,550
other stuff so I I'm<font color="#E5E5E5"> trying to think of</font>

717
00:33:30,110 --> 00:33:34,459
a protocol that would tell you go to

718
00:33:31,550 --> 00:33:37,850
this other resource I can't really think

719
00:33:34,460 --> 00:33:40,220
of anything so the fact that HTTP has

720
00:33:37,850 --> 00:33:43,540
the ability to redirect you somewhere

721
00:33:40,220 --> 00:33:46,040
<font color="#CCCCCC">else means that htp has to be self-aware</font>

722
00:33:43,540 --> 00:33:49,730
smtp servers don't care how you got to

723
00:33:46,040 --> 00:33:51,260
<font color="#CCCCCC">them it's just I p any other protocol</font>

724
00:33:49,730 --> 00:33:53,240
data and that<font color="#CCCCCC"> I can think</font><font color="#E5E5E5"> of is just you</font>

725
00:33:51,260 --> 00:33:56,200
go to the IP you speak the protocol

726
00:33:53,240 --> 00:34:00,500
that's<font color="#E5E5E5"> it my sequel whatever</font><font color="#CCCCCC"> database is</font>

727
00:33:56,200 --> 00:34:04,130
cash is none<font color="#CCCCCC"> of it has host headers HTTP</font>

728
00:34:00,500 --> 00:34:07,010
is self-aware so it needs a way to refer

729
00:34:04,130 --> 00:34:09,649
to<font color="#E5E5E5"> refer back to itself this stuff is</font>

730
00:34:07,010 --> 00:34:12,739
just so the first part where<font color="#E5E5E5"> flash</font>

731
00:34:09,649 --> 00:34:14,659
redirects to http itself that's just

732
00:34:12,739 --> 00:34:16,850
broken because it could have just<font color="#CCCCCC"> said</font>

733
00:34:14,659 --> 00:34:19,250
redirect to slash whatever it could have

734
00:34:16,850 --> 00:34:19,739
emitted the protocol and the hostname

735
00:34:19,250 --> 00:34:22,590
entire

736
00:34:19,739 --> 00:34:25,739
I don't know why doesn't but the part

737
00:34:22,590 --> 00:34:28,050
where flask tells Google the callback

738
00:34:25,739 --> 00:34:30,658
that's flask needs to know what protocol

739
00:34:28,050 --> 00:34:34,440
it's on it needs to know everything the

740
00:34:30,659 --> 00:34:37,649
fix for the fix for the expert<font color="#E5E5E5"> Oh head</font>

741
00:34:34,440 --> 00:34:40,110
or whatever thing is you enable a line

742
00:34:37,649 --> 00:34:43,440
in<font color="#E5E5E5"> flask and it becomes aware of it we</font>

743
00:34:40,110 --> 00:34:46,020
fixed it thereby making the web server

744
00:34:43,440 --> 00:34:47,580
actually the web server aware of the

745
00:34:46,020 --> 00:34:49,770
header<font color="#CCCCCC"> that the load balancer sends and</font>

746
00:34:47,580 --> 00:34:52,799
tell the app but the app at the end<font color="#E5E5E5"> of</font>

747
00:34:49,770 --> 00:34:54,989
the day web apps if they're interfacing

748
00:34:52,800 --> 00:34:56,850
with external API<font color="#CCCCCC"> s and doing callbacks</font>

749
00:34:54,989 --> 00:34:58,319
and redirecting users they need to be

750
00:34:56,850 --> 00:35:01,920
aware of their host name and their

751
00:34:58,320 --> 00:35:03,960
protocol and yes if you're doing as a

752
00:35:01,920 --> 00:35:06,510
cell you could configure the you could

753
00:35:03,960 --> 00:35:08,880
good hard code you could say this app is

754
00:35:06,510 --> 00:35:11,700
only ever<font color="#E5E5E5"> running on SSL never ever</font>

755
00:35:08,880 --> 00:35:14,550
attempt to do anything<font color="#E5E5E5"> else but then you</font>

756
00:35:11,700 --> 00:35:16,439
<font color="#CCCCCC">hid the fact that people develop this on</font>

757
00:35:14,550 --> 00:35:18,180
their own machines they don't have ssl

758
00:35:16,440 --> 00:35:20,760
certificates for<font color="#E5E5E5"> localhost you can work</font>

759
00:35:18,180 --> 00:35:23,060
around that but it's it's a pain it's an

760
00:35:20,760 --> 00:35:27,000
unnecessary pain for doing development

761
00:35:23,060 --> 00:35:29,190
<font color="#E5E5E5">you could say you</font><font color="#CCCCCC"> know have a wild</font><font color="#E5E5E5"> card</font>

762
00:35:27,000 --> 00:35:31,680
certificate on some random domain that

763
00:35:29,190 --> 00:35:35,180
is routed to localhost you all of it<font color="#E5E5E5"> is</font>

764
00:35:31,680 --> 00:35:37,618
solvable at all it's yet let's encrypt a

765
00:35:35,180 --> 00:35:41,970
recent project when did let's encrypt

766
00:35:37,619 --> 00:35:44,400
become usable recently this is stuff

767
00:35:41,970 --> 00:35:46,740
that has been<font color="#E5E5E5"> around for a few years and</font>

768
00:35:44,400 --> 00:35:50,910
stuff<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I caught in the last two</font>

769
00:35:46,740 --> 00:35:52,709
<font color="#CCCCCC">years so there</font><font color="#E5E5E5"> are solutions none of</font>

770
00:35:50,910 --> 00:35:54,779
this is an unsolvable problem I didn't

771
00:35:52,710 --> 00:35:57,570
come<font color="#CCCCCC"> here to cry about unsolvable</font>

772
00:35:54,780 --> 00:36:00,090
problems but all of them raise the bar

773
00:35:57,570 --> 00:36:01,650
to entry they complicate things just

774
00:36:00,090 --> 00:36:03,240
enough that<font color="#CCCCCC"> people are willing to look</font>

775
00:36:01,650 --> 00:36:05,119
the other way and<font color="#CCCCCC"> just we'll deal with</font>

776
00:36:03,240 --> 00:36:07,770
that later it happens all the time and

777
00:36:05,119 --> 00:36:10,740
all of all<font color="#CCCCCC"> of it is very very solvable</font>

778
00:36:07,770 --> 00:36:12,180
if you care about security more than you

779
00:36:10,740 --> 00:36:14,330
care about raising your first round of

780
00:36:12,180 --> 00:36:14,330
money

781
00:36:32,320 --> 00:36:43,430
they don't even<font color="#E5E5E5"> do that anymore I think</font>

782
00:36:34,430 --> 00:36:46,520
I'm not that yeah once upon a time when

783
00:36:43,430 --> 00:36:48,589
ssl was rare so once upon<font color="#CCCCCC"> a time you</font>

784
00:36:46,520 --> 00:36:51,620
didn't have ssl on every single domain

785
00:36:48,590 --> 00:36:53,510
you had secured your domain com and he

786
00:36:51,620 --> 00:36:54,770
had an ssl certificate on that and<font color="#E5E5E5"> it</font>

787
00:36:53,510 --> 00:36:57,410
was a completely different site there

788
00:36:54,770 --> 00:36:59,540
wasn't an HTTP secured on that was the

789
00:36:57,410 --> 00:37:01,819
secure place that was the secure forms

790
00:36:59,540 --> 00:37:04,670
and whatever and<font color="#E5E5E5"> resources all the Java</font>

791
00:37:01,820 --> 00:37:07,520
scripts and so on and back then when you

792
00:37:04,670 --> 00:37:10,430
went from secure dot but one when he

793
00:37:07,520 --> 00:37:12,410
went from https secure dot to something

794
00:37:10,430 --> 00:37:15,290
else the browser would go hey you're

795
00:37:12,410 --> 00:37:18,440
about to leave the secure site it's

796
00:37:15,290 --> 00:37:21,680
become so prevalent that site send you

797
00:37:18,440 --> 00:37:26,300
to<font color="#CCCCCC"> HTTPS and so on that that</font><font color="#E5E5E5"> no longer</font>

798
00:37:21,680 --> 00:37:28,430
<font color="#E5E5E5">happens I I don't remember the last time</font>

799
00:37:26,300 --> 00:37:31,940
a browser stopped me from navigating

800
00:37:28,430 --> 00:37:34,490
from https to http I think recently

801
00:37:31,940 --> 00:37:38,320
browsers are starting starting to flag

802
00:37:34,490 --> 00:37:41,209
so it used to be that HTTP was the<font color="#CCCCCC"> okay</font>

803
00:37:38,320 --> 00:37:43,340
https with proper certificates was the

804
00:37:41,210 --> 00:37:45,050
secure and then<font color="#CCCCCC"> HTTPS with self-signed</font>

805
00:37:43,340 --> 00:37:48,500
certificates with expired certificates

806
00:37:45,050 --> 00:37:50,060
was like the broken lock thing google

807
00:37:48,500 --> 00:37:52,820
chrome recently announced i think that

808
00:37:50,060 --> 00:37:55,100
they will start flagging HTTP requests

809
00:37:52,820 --> 00:37:58,670
as unsecured so the UI itself is going

810
00:37:55,100 --> 00:38:02,990
to reflect it but this stuff<font color="#CCCCCC"> I saw this</font>

811
00:37:58,670 --> 00:38:06,410
the redirection this year on multiple

812
00:38:02,990 --> 00:38:13,660
browsers I<font color="#E5E5E5"> I captured the traffic no</font>

813
00:38:06,410 --> 00:38:15,720
warnings<font color="#E5E5E5"> okay thank you</font>

814
00:38:13,660 --> 00:38:15,720
you

