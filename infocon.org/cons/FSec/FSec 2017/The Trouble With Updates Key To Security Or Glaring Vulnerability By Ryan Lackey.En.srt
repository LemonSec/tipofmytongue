1
00:00:03,120 --> 00:00:07,059
thank you yes thanks for the

2
00:00:04,960 --> 00:00:08,320
introduction we've great being in

3
00:00:07,059 --> 00:00:10,000
Croatia it's the first time I've been

4
00:00:08,320 --> 00:00:12,100
here it's a wonderful country so far in

5
00:00:10,000 --> 00:00:14,580
the last couple days and looking forward

6
00:00:12,100 --> 00:00:18,099
to exploring more and anymore about it

7
00:00:14,580 --> 00:00:20,400
yeah as he mentioned when you talk about

8
00:00:18,099 --> 00:00:22,330
some issues with security updates

9
00:00:20,400 --> 00:00:23,919
basically everyone should know what

10
00:00:22,330 --> 00:00:25,990
updates are but we're gonna go into some

11
00:00:23,920 --> 00:00:27,340
taxonomy of the different types and then

12
00:00:25,990 --> 00:00:29,709
why they're really important and then

13
00:00:27,340 --> 00:00:31,840
there's been a big shift to try to fix

14
00:00:29,710 --> 00:00:33,340
this problem and then some organizations

15
00:00:31,840 --> 00:00:34,930
got in the way of the fix and we're

16
00:00:33,340 --> 00:00:36,690
trying to fix it without going back into

17
00:00:34,930 --> 00:00:38,920
the Stone Age so it should be exciting

18
00:00:36,690 --> 00:00:40,870
this is a quick intro yeah I did the

19
00:00:38,920 --> 00:00:44,350
seal and offshore data Haven havenco

20
00:00:40,870 --> 00:00:46,239
back in 2000 where we were basically

21
00:00:44,350 --> 00:00:48,219
doing jurisdiction proof hosting which

22
00:00:46,239 --> 00:00:51,190
was a interesting story and it ended up

23
00:00:48,219 --> 00:00:52,300
with a sort of minor disaster I lived in

24
00:00:51,190 --> 00:00:54,010
this little Caribbean country doing

25
00:00:52,300 --> 00:00:55,959
anonymous electronic cash before there

26
00:00:54,010 --> 00:00:58,780
was digit cash and occasionally other

27
00:00:55,960 --> 00:01:00,129
stuff I ran a satellite company in Iraq

28
00:00:58,780 --> 00:01:02,440
and Afghanistan for a couple years

29
00:01:00,129 --> 00:01:04,059
actually more like eight years and then

30
00:01:02,440 --> 00:01:06,939
crypto seal which is a company that used

31
00:01:04,059 --> 00:01:08,880
Intel txt and some of the other Intel

32
00:01:06,939 --> 00:01:11,589
security processor features to do

33
00:01:08,880 --> 00:01:12,339
security remote attestation for servers

34
00:01:11,590 --> 00:01:14,590
which was pretty cool

35
00:01:12,340 --> 00:01:16,420
which got sold to CloudFlare and then I

36
00:01:14,590 --> 00:01:17,829
worked on security products there now

37
00:01:16,420 --> 00:01:21,490
I'm doing reset security which is a

38
00:01:17,829 --> 00:01:24,249
travel security company so basically why

39
00:01:21,490 --> 00:01:25,810
do we care about updates I was there

40
00:01:24,249 --> 00:01:27,429
sort of a hassle like you sitting there

41
00:01:25,810 --> 00:01:29,289
using a computer you pop it pops up a

42
00:01:27,429 --> 00:01:30,999
window says oh we need to update your

43
00:01:29,289 --> 00:01:32,770
software every time you turn on the

44
00:01:30,999 --> 00:01:35,348
machine you haven't used in a long time

45
00:01:32,770 --> 00:01:37,270
it says oh you have like 100 updates

46
00:01:35,349 --> 00:01:38,979
remaining people spend all their time

47
00:01:37,270 --> 00:01:41,590
doing patch management ulcers and stuff

48
00:01:38,979 --> 00:01:43,749
like that like why do people care I mean

49
00:01:41,590 --> 00:01:44,679
there's a bunch of reasons part of its

50
00:01:43,749 --> 00:01:46,779
functionality from a security

51
00:01:44,679 --> 00:01:48,999
perspective part of it 0 days we've seen

52
00:01:46,779 --> 00:01:51,039
some issues where there were internet

53
00:01:48,999 --> 00:01:53,139
wide security compromises we had the

54
00:01:51,039 --> 00:01:56,020
heartbleed issue where there was this

55
00:01:53,139 --> 00:01:58,839
latent flaw in open SSL for like a

56
00:01:56,020 --> 00:02:01,238
decade that got discovered and suddenly

57
00:01:58,840 --> 00:02:04,389
became like patch roulette I remember

58
00:02:01,239 --> 00:02:07,539
getting woken up at some like 2:00 a.m.

59
00:02:04,389 --> 00:02:11,560
to to write a blog post about a fix and

60
00:02:07,539 --> 00:02:13,360
it was a pretty exciting time and we had

61
00:02:11,560 --> 00:02:14,379
shell shock bash bug we have zero days

62
00:02:13,360 --> 00:02:16,450
that happen all the time

63
00:02:14,379 --> 00:02:18,190
if Travis who's like personally respond

64
00:02:16,450 --> 00:02:19,540
for a lot of sleepless nights on the

65
00:02:18,190 --> 00:02:21,400
part of engineers and sis admin's

66
00:02:19,540 --> 00:02:23,590
worldwide I mean he does great work but

67
00:02:21,400 --> 00:02:25,060
definitely he went you see a tweet from

68
00:02:23,590 --> 00:02:27,040
him saying oh I think there might be an

69
00:02:25,060 --> 00:02:29,440
issue in something everyone pays

70
00:02:27,040 --> 00:02:31,120
attention and it's pretty scary so zero

71
00:02:29,440 --> 00:02:32,680
days are definitely a problem but

72
00:02:31,120 --> 00:02:34,180
they're not the main problem the

73
00:02:32,680 --> 00:02:38,739
number-one problem is not really the

74
00:02:34,180 --> 00:02:40,780
zero day it's the like 30-60-90 365 days

75
00:02:38,739 --> 00:02:43,720
so you have problems where people know

76
00:02:40,780 --> 00:02:44,739
about a vulnerability and it exists and

77
00:02:43,720 --> 00:02:46,480
it's an a piece of software that's

78
00:02:44,739 --> 00:02:47,980
either widespread or very important it's

79
00:02:46,480 --> 00:02:49,929
either like a control system or it's

80
00:02:47,980 --> 00:02:53,380
windows or some other thing that's out

81
00:02:49,930 --> 00:02:55,360
there and smart people or people that

82
00:02:53,380 --> 00:02:57,340
can easily patch patch quickly other

83
00:02:55,360 --> 00:03:00,280
people you look at systems and you have

84
00:02:57,340 --> 00:03:02,500
statistics where like 80% of systems

85
00:03:00,280 --> 00:03:03,579
they're not patched within a week on a

86
00:03:02,500 --> 00:03:07,060
lot of platforms you have a lot of

87
00:03:03,579 --> 00:03:08,769
problems where you can look and the CC

88
00:03:07,060 --> 00:03:10,599
stuff that's been like basically left

89
00:03:08,769 --> 00:03:13,510
either unpatched or not fully patched

90
00:03:10,599 --> 00:03:16,060
for four years I think the median time

91
00:03:13,510 --> 00:03:17,440
now is something on Windows on desktop

92
00:03:16,060 --> 00:03:20,440
client platforms is something like over

93
00:03:17,440 --> 00:03:22,989
180 days for four patches to be applied

94
00:03:20,440 --> 00:03:25,389
by like half the users so it's

95
00:03:22,989 --> 00:03:27,819
definitely a big problem and I'd say the

96
00:03:25,389 --> 00:03:29,650
main problem is this long tail of

97
00:03:27,819 --> 00:03:30,578
vulnerabilities that exist there's a

98
00:03:29,650 --> 00:03:32,260
reason why you're not going to use a

99
00:03:30,579 --> 00:03:34,600
zero day for most targets because zero

100
00:03:32,260 --> 00:03:36,578
day is right now I think the price tag

101
00:03:34,600 --> 00:03:39,100
for an iOS zero day is something like

102
00:03:36,579 --> 00:03:40,329
half a million dollars u.s. and for

103
00:03:39,100 --> 00:03:42,130
Windows is probably a hundred thousand

104
00:03:40,329 --> 00:03:43,299
dollars for a lot of vulnerabilities so

105
00:03:42,130 --> 00:03:44,799
if you're attacking a target you're not

106
00:03:43,299 --> 00:03:46,239
going to waste a zero day on your

107
00:03:44,799 --> 00:03:48,940
average target if something that's like

108
00:03:46,239 --> 00:03:51,670
five years old works just as well

109
00:03:48,940 --> 00:03:53,530
so the the main mitigation around this

110
00:03:51,670 --> 00:03:55,660
has been updates and you've got sort of

111
00:03:53,530 --> 00:03:58,359
a philosophical issue of whether you

112
00:03:55,660 --> 00:04:00,880
want to do pull updates where the user

113
00:03:58,359 --> 00:04:02,950
initiates an update and says Oh update

114
00:04:00,880 --> 00:04:05,470
my software now or a push update where

115
00:04:02,950 --> 00:04:07,089
the software schedules an update and

116
00:04:05,470 --> 00:04:08,410
reboot the machine or at least downloads

117
00:04:07,090 --> 00:04:11,290
if the machine and automatically updates

118
00:04:08,410 --> 00:04:14,019
it it's definitely an issue there's

119
00:04:11,290 --> 00:04:15,280
cases where it's a plus or minus there's

120
00:04:14,019 --> 00:04:16,899
also the environment you have enterprise

121
00:04:15,280 --> 00:04:18,608
you have the mullet where it's business

122
00:04:16,899 --> 00:04:19,779
in front and party in the back but

123
00:04:18,608 --> 00:04:21,159
you've got the enterprise versus

124
00:04:19,779 --> 00:04:23,049
consumer so it's pretty different when

125
00:04:21,160 --> 00:04:24,849
you've got your single computer versus

126
00:04:23,050 --> 00:04:26,710
somebody who's got thousands of client

127
00:04:24,849 --> 00:04:28,270
machines to be responsible for or

128
00:04:26,710 --> 00:04:29,039
somebody I used to do some stuff with

129
00:04:28,270 --> 00:04:30,810
the US No

130
00:04:29,040 --> 00:04:33,420
Regulatory Commission where it's

131
00:04:30,810 --> 00:04:35,270
actually worthwhile for them to leave a

132
00:04:33,420 --> 00:04:38,820
system like there's a trade-off between

133
00:04:35,270 --> 00:04:39,870
security and reliability in some cases

134
00:04:38,820 --> 00:04:42,000
you don't want to push a patch out

135
00:04:39,870 --> 00:04:43,110
immediately if it might have unintended

136
00:04:42,000 --> 00:04:44,970
side effects if it's doing something

137
00:04:43,110 --> 00:04:46,290
important so there's some cases where

138
00:04:44,970 --> 00:04:48,420
you do want to be slower about your

139
00:04:46,290 --> 00:04:49,770
updates and that's sort of a trade-off

140
00:04:48,420 --> 00:04:50,970
that depends on the environment and you

141
00:04:49,770 --> 00:04:52,740
have to build a lot of compensating

142
00:04:50,970 --> 00:04:54,180
controls around that of course you've

143
00:04:52,740 --> 00:04:56,040
got client versus server so you have

144
00:04:54,180 --> 00:04:58,380
devices you have especially mobile

145
00:04:56,040 --> 00:05:00,300
devices now you have laptops desktops

146
00:04:58,380 --> 00:05:03,150
vs. server farms you have different

147
00:05:00,300 --> 00:05:07,220
constraints that apply to each so those

148
00:05:03,150 --> 00:05:09,929
are those are all issues and it's pretty

149
00:05:07,220 --> 00:05:11,670
pretty much we have a current consensus

150
00:05:09,930 --> 00:05:12,840
of what the best practice should be at

151
00:05:11,670 --> 00:05:15,450
least this was a little was a few years

152
00:05:12,840 --> 00:05:17,549
ago you'd say that consumers I think

153
00:05:15,450 --> 00:05:19,500
automatic updates have been shown to be

154
00:05:17,550 --> 00:05:21,390
the best way like it used to be this

155
00:05:19,500 --> 00:05:23,040
stuff would never get updated and you

156
00:05:21,390 --> 00:05:25,169
have systems out there like Windows XP

157
00:05:23,040 --> 00:05:27,600
that are end-of-life and are still

158
00:05:25,170 --> 00:05:30,630
getting used in both consumer and some

159
00:05:27,600 --> 00:05:32,280
embedded environments automatic updates

160
00:05:30,630 --> 00:05:33,930
probably are the solution for the

161
00:05:32,280 --> 00:05:35,760
consumer space and have been shown to be

162
00:05:33,930 --> 00:05:37,200
that for a lot of people but for

163
00:05:35,760 --> 00:05:40,200
enterprise it would be really annoying

164
00:05:37,200 --> 00:05:41,940
if you had something that was a push and

165
00:05:40,200 --> 00:05:43,020
update to all your machines and it

166
00:05:41,940 --> 00:05:44,700
happens during the middle of the workday

167
00:05:43,020 --> 00:05:46,440
because if you there's this cool thing

168
00:05:44,700 --> 00:05:48,300
for a Google Calendar we can add up but

169
00:05:46,440 --> 00:05:50,910
the value of all the employees in a

170
00:05:48,300 --> 00:05:52,860
meeting and show what a 30-minute outage

171
00:05:50,910 --> 00:05:54,930
in the middle of the day for like ten

172
00:05:52,860 --> 00:05:56,130
thousand engineers would be it probably

173
00:05:54,930 --> 00:05:57,870
makes sense to schedule those updates

174
00:05:56,130 --> 00:06:00,150
for an on peak time and to do some

175
00:05:57,870 --> 00:06:02,850
testing and then server of course if you

176
00:06:00,150 --> 00:06:05,070
push a server update to your server farm

177
00:06:02,850 --> 00:06:06,120
and it just doesn't work for some minor

178
00:06:05,070 --> 00:06:08,820
reason and takes down your entire

179
00:06:06,120 --> 00:06:10,740
service yeah it's not so good so usually

180
00:06:08,820 --> 00:06:12,300
there's a test environment a staging

181
00:06:10,740 --> 00:06:13,860
environment the same you would do for

182
00:06:12,300 --> 00:06:15,780
your own initiated updates you would do

183
00:06:13,860 --> 00:06:17,250
for your operating system so this is

184
00:06:15,780 --> 00:06:19,070
generally the consensus that's been

185
00:06:17,250 --> 00:06:21,420
going on and a lot of people have made

186
00:06:19,070 --> 00:06:23,070
if some arguments about minor things

187
00:06:21,420 --> 00:06:24,630
have happened in the past but generally

188
00:06:23,070 --> 00:06:26,099
this is the consensus and the nice thing

189
00:06:24,630 --> 00:06:27,450
is the move towards software as a

190
00:06:26,100 --> 00:06:29,670
service where you're outsourcing a lot

191
00:06:27,450 --> 00:06:30,979
of your IT to third parties sort of

192
00:06:29,670 --> 00:06:33,360
solves this problem for a lot of users

193
00:06:30,980 --> 00:06:35,370
if you're moving to a platform that's

194
00:06:33,360 --> 00:06:37,380
more managed like a mobile phone versus

195
00:06:35,370 --> 00:06:38,460
a desktop computer fleet that solves a

196
00:06:37,380 --> 00:06:39,630
lot of the problems for the client

197
00:06:38,460 --> 00:06:41,700
devices and then if you're using

198
00:06:39,630 --> 00:06:42,240
something like office 365 or Gmail

199
00:06:41,700 --> 00:06:43,650
instead of

200
00:06:42,240 --> 00:06:44,880
a mail server you don't obviously need

201
00:06:43,650 --> 00:06:46,169
to patch your mail server just the

202
00:06:44,880 --> 00:06:48,419
experts need to worry about it so that's

203
00:06:46,169 --> 00:06:49,889
a it's an interesting thing and we've

204
00:06:48,419 --> 00:06:52,830
got some adoption things that have been

205
00:06:49,889 --> 00:06:55,380
great like definitely iOS is probably

206
00:06:52,830 --> 00:06:57,659
the best platform for pushing updates on

207
00:06:55,380 --> 00:06:59,669
the mobile phone side I think the stat

208
00:06:57,660 --> 00:07:02,220
is something like within a major release

209
00:06:59,669 --> 00:07:03,840
of iOS you're getting like 90% of

210
00:07:02,220 --> 00:07:05,460
devices updated within a month and a lot

211
00:07:03,840 --> 00:07:07,229
of them are updated within days I mean

212
00:07:05,460 --> 00:07:11,008
sort of it's the case of Apple offering

213
00:07:07,229 --> 00:07:13,258
a carrot of cool new features for people

214
00:07:11,009 --> 00:07:14,430
not just security updates but the

215
00:07:13,259 --> 00:07:15,539
updates get pushed really well and

216
00:07:14,430 --> 00:07:17,849
there's some reasons why this happened

217
00:07:15,539 --> 00:07:19,860
and then Chrome both the browser and

218
00:07:17,849 --> 00:07:21,990
Chrome OS are great at updates they do a

219
00:07:19,860 --> 00:07:24,960
lot of incremental updates and it's

220
00:07:21,990 --> 00:07:25,169
pretty cool so so mission accomplished

221
00:07:24,960 --> 00:07:26,909
right

222
00:07:25,169 --> 00:07:27,840
I mean we've solved this whole update

223
00:07:26,909 --> 00:07:29,030
problem we don't need to think about

224
00:07:27,840 --> 00:07:32,669
updates anymore

225
00:07:29,030 --> 00:07:35,849
Yeah right yeah unfortunately there's

226
00:07:32,669 --> 00:07:37,080
organizations that have decided that the

227
00:07:35,849 --> 00:07:38,819
update mechanism is an interesting

228
00:07:37,080 --> 00:07:41,580
mechanism that puts a lot of control

229
00:07:38,819 --> 00:07:44,340
into the hands of anyone who gains

230
00:07:41,580 --> 00:07:45,810
access to it so there's now some people

231
00:07:44,340 --> 00:07:48,479
that have been over the last year or so

232
00:07:45,810 --> 00:07:51,060
a couple years rethinking some of the

233
00:07:48,479 --> 00:07:53,008
issues and trade-offs of updates we've

234
00:07:51,060 --> 00:07:56,009
got examples here we have I think in

235
00:07:53,009 --> 00:07:58,590
2013 opera had a key compromise which

236
00:07:56,009 --> 00:08:00,360
caused a problem apples had issues where

237
00:07:58,590 --> 00:08:03,179
they've pushed apples great but they've

238
00:08:00,360 --> 00:08:04,169
pushed applications out there that did

239
00:08:03,180 --> 00:08:06,690
malicious stuff

240
00:08:04,169 --> 00:08:08,820
Microsoft has had the Stuxnet Fiasco

241
00:08:06,690 --> 00:08:12,930
where they ended up signing the terminal

242
00:08:08,820 --> 00:08:15,569
services thing of flames then most

243
00:08:12,930 --> 00:08:17,610
recently we had the situation in Ukraine

244
00:08:15,569 --> 00:08:19,830
where the number one accounting package

245
00:08:17,610 --> 00:08:22,560
of the country had an auto update server

246
00:08:19,830 --> 00:08:24,990
and basically caused complete and utter

247
00:08:22,560 --> 00:08:26,990
chaos in the country and moderate chaos

248
00:08:24,990 --> 00:08:30,419
globally by pushing some bad updates

249
00:08:26,990 --> 00:08:32,310
through a compromise so the the naive

250
00:08:30,419 --> 00:08:33,478
response to this stuff like something

251
00:08:32,309 --> 00:08:36,119
this new thing that people are doing

252
00:08:33,479 --> 00:08:37,979
Auto updates is bad so let's just get

253
00:08:36,120 --> 00:08:39,839
rid of it and go back to the Stone Age

254
00:08:37,979 --> 00:08:40,709
where people leave stuff unpatched for

255
00:08:39,839 --> 00:08:42,599
months at a time

256
00:08:40,708 --> 00:08:44,579
yeah probably not the great greatest

257
00:08:42,599 --> 00:08:46,260
idea as I remember it wasn't that long

258
00:08:44,579 --> 00:08:48,239
ago is probably five years ago when auto

259
00:08:46,260 --> 00:08:51,660
updates were a very new thing

260
00:08:48,240 --> 00:08:53,279
and enterprise IT was always the patch

261
00:08:51,660 --> 00:08:54,480
management was the number-one concern it

262
00:08:53,279 --> 00:08:55,740
still is actually one of the number one

263
00:08:54,480 --> 00:08:57,570
concerns but it was sort of a fetal

264
00:08:55,740 --> 00:08:59,910
battle and for consumers you could

265
00:08:57,570 --> 00:09:02,250
reliably hack any consumer device

266
00:08:59,910 --> 00:09:03,600
because it wasn't updated at all people

267
00:09:02,250 --> 00:09:05,040
are talking about IOT security and one

268
00:09:03,600 --> 00:09:06,870
of the biggest issues with IOT security

269
00:09:05,040 --> 00:09:09,930
is it's probably 10 years 15 years

270
00:09:06,870 --> 00:09:12,000
behind the curve on auto-updates for a

271
00:09:09,930 --> 00:09:13,290
lot of the stuff and also the longer

272
00:09:12,000 --> 00:09:15,000
deployed lifetime in the field you have

273
00:09:13,290 --> 00:09:16,980
systems that are out there for probably

274
00:09:15,000 --> 00:09:18,420
the design life of 10 20 years you don't

275
00:09:16,980 --> 00:09:20,310
replace their washing machine or your

276
00:09:18,420 --> 00:09:22,740
your car as frequently as your Play

277
00:09:20,310 --> 00:09:25,109
Store your phone so without an automatic

278
00:09:22,740 --> 00:09:26,910
update mechanism you're gonna have that

279
00:09:25,110 --> 00:09:28,410
stuff out there for 15 years so if right

280
00:09:26,910 --> 00:09:32,149
now they decide to add an auto update

281
00:09:28,410 --> 00:09:34,199
mechanism to cars it's probably gonna be

282
00:09:32,149 --> 00:09:36,839
10-15 years before enough of those

283
00:09:34,200 --> 00:09:38,670
devices are updated to like replace to

284
00:09:36,839 --> 00:09:40,440
have the new update systems out there so

285
00:09:38,670 --> 00:09:43,319
going back to the Stone Age is not

286
00:09:40,440 --> 00:09:44,970
really an ideal solution so what we'd

287
00:09:43,320 --> 00:09:47,760
really like to do is retain the ability

288
00:09:44,970 --> 00:09:49,529
to do these frictionless updates and we

289
00:09:47,760 --> 00:09:51,149
but we also want to prevent two things

290
00:09:49,529 --> 00:09:53,100
we want to prevent sort of the Medoc

291
00:09:51,149 --> 00:09:55,140
situation where you do a large-scale

292
00:09:53,100 --> 00:09:56,790
compromise of all users and you want to

293
00:09:55,140 --> 00:09:58,709
prevent the targeted attacks on users

294
00:09:56,790 --> 00:10:01,709
this is not really public yet but there

295
00:09:58,709 --> 00:10:04,829
definitely have been cases where an

296
00:10:01,709 --> 00:10:05,880
individual user had liked and really

297
00:10:04,829 --> 00:10:08,160
within an enterprise you have an

298
00:10:05,880 --> 00:10:10,110
enterprise ite update mechanism that's

299
00:10:08,160 --> 00:10:12,060
in place and that sometimes gets averted

300
00:10:10,110 --> 00:10:13,770
to allow pushes they're assisted

301
00:10:12,060 --> 00:10:16,859
generally this has been in the case of

302
00:10:13,770 --> 00:10:18,540
sis admin's doing things a Bitcoin is a

303
00:10:16,860 --> 00:10:20,070
great example like the the Bitcoin space

304
00:10:18,540 --> 00:10:21,839
I love Bitcoin it's awesome and

305
00:10:20,070 --> 00:10:23,790
everything else but it's the most

306
00:10:21,839 --> 00:10:24,990
exciting part of the computer security

307
00:10:23,790 --> 00:10:27,390
infrastructure right now because you can

308
00:10:24,990 --> 00:10:28,680
easily monetize a compromised so if

309
00:10:27,390 --> 00:10:30,149
you're looking at what the future is

310
00:10:28,680 --> 00:10:32,640
gonna look like for general applications

311
00:10:30,149 --> 00:10:33,930
in five years look at what's happening

312
00:10:32,640 --> 00:10:36,149
in the Bitcoin space today we're in the

313
00:10:33,930 --> 00:10:37,560
cryptocurrency generally space today you

314
00:10:36,149 --> 00:10:40,110
have compromises where you have insider

315
00:10:37,560 --> 00:10:41,279
attacks exfiltrating if extortion you

316
00:10:40,110 --> 00:10:42,990
have ransomware you have all sorts of

317
00:10:41,279 --> 00:10:44,880
stuff that's very very exciting and very

318
00:10:42,990 --> 00:10:46,740
targeted that we've been predicting

319
00:10:44,880 --> 00:10:48,390
could happen but in the Bitcoin space

320
00:10:46,740 --> 00:10:50,700
because you can pull money out very

321
00:10:48,390 --> 00:10:51,689
easily and it's happening pretty pretty

322
00:10:50,700 --> 00:10:53,310
much so you want to prevent these

323
00:10:51,690 --> 00:10:56,070
targeted attacks where somebody pushes a

324
00:10:53,310 --> 00:10:58,709
an attack targeted to a given user

325
00:10:56,070 --> 00:10:59,850
saying like run this new version of the

326
00:10:58,709 --> 00:11:05,849
binary and things like

327
00:10:59,850 --> 00:11:09,840
the the the most well documented cases

328
00:11:05,850 --> 00:11:11,310
of that were the so hush mail this

329
00:11:09,840 --> 00:11:14,070
anonymous mail bore a secure mail

330
00:11:11,310 --> 00:11:16,770
provider served an applet and served

331
00:11:14,070 --> 00:11:18,630
applications to users after they logged

332
00:11:16,770 --> 00:11:20,310
in it was generally a secure system but

333
00:11:18,630 --> 00:11:22,530
there was the ability to if somebody

334
00:11:20,310 --> 00:11:23,849
logs in and is an interesting target you

335
00:11:22,530 --> 00:11:25,260
could then serve them a different applet

336
00:11:23,850 --> 00:11:27,750
so there's some exciting stuff that

337
00:11:25,260 --> 00:11:29,069
happened there and the same thing can

338
00:11:27,750 --> 00:11:30,300
easily happen and while it's software

339
00:11:29,070 --> 00:11:31,860
and all sorts of other stuff so people

340
00:11:30,300 --> 00:11:33,479
have been musing - moving to offline

341
00:11:31,860 --> 00:11:35,550
wallets and all sorts of other cool

342
00:11:33,480 --> 00:11:36,690
stuff there so look at the Bitcoin space

343
00:11:35,550 --> 00:11:38,550
if you want to see that kind of attack

344
00:11:36,690 --> 00:11:41,310
but just trust me that that attack

345
00:11:38,550 --> 00:11:43,740
exists and is an increasing threat so

346
00:11:41,310 --> 00:11:44,449
we've got some ideas on how you can fix

347
00:11:43,740 --> 00:11:46,320
this

348
00:11:44,450 --> 00:11:47,910
there's a lot of different things that

349
00:11:46,320 --> 00:11:48,960
potentially can fix it and a lot of

350
00:11:47,910 --> 00:11:49,969
things that are sort of trade offs

351
00:11:48,960 --> 00:11:52,490
engineering-wise

352
00:11:49,970 --> 00:11:54,990
but yeah I'd say the first one is

353
00:11:52,490 --> 00:11:56,940
sandboxing in general when you're

354
00:11:54,990 --> 00:12:00,630
pushing a software update for something

355
00:11:56,940 --> 00:12:03,540
it is fixing it's fixing a vulnerability

356
00:12:00,630 --> 00:12:05,939
or it is adding a new feature and very

357
00:12:03,540 --> 00:12:07,500
rarely if it's a you must fix this for

358
00:12:05,940 --> 00:12:08,880
security reasons is it really adding a

359
00:12:07,500 --> 00:12:11,700
major new feature or a major new

360
00:12:08,880 --> 00:12:13,050
requirement on the platform so probably

361
00:12:11,700 --> 00:12:15,930
what we could do is have a system where

362
00:12:13,050 --> 00:12:17,670
you have feature updates which are not

363
00:12:15,930 --> 00:12:20,189
as critical not as time-sensitive and

364
00:12:17,670 --> 00:12:22,020
are much more voluntary for users can

365
00:12:20,190 --> 00:12:23,790
add new capabilities they can add the

366
00:12:22,020 --> 00:12:26,490
requirement to access a new device or

367
00:12:23,790 --> 00:12:28,770
something else where as simple patches

368
00:12:26,490 --> 00:12:30,690
only either keep the same or remove

369
00:12:28,770 --> 00:12:32,360
capabilities and remove requirements in

370
00:12:30,690 --> 00:12:35,820
the platform so it would be crazy to

371
00:12:32,360 --> 00:12:37,980
have a platform update that's a security

372
00:12:35,820 --> 00:12:39,630
update you push that adds a new feature

373
00:12:37,980 --> 00:12:41,340
that requires access to all sorts of

374
00:12:39,630 --> 00:12:43,260
local storage where it didn't before and

375
00:12:41,340 --> 00:12:44,340
things like that so companies and

376
00:12:43,260 --> 00:12:47,640
software developers and administrators

377
00:12:44,340 --> 00:12:49,620
can be more cautious about separating

378
00:12:47,640 --> 00:12:51,270
out security from future updates I mean

379
00:12:49,620 --> 00:12:52,590
it's my biggest problem with Apple is

380
00:12:51,270 --> 00:12:54,750
they roll out a lot of security updates

381
00:12:52,590 --> 00:12:57,300
every time they roll a major iOS update

382
00:12:54,750 --> 00:12:59,880
and you have a lot of regressions and

383
00:12:57,300 --> 00:13:01,050
functionality for users where on iOS

384
00:12:59,880 --> 00:13:02,460
it's not such a big deal but there are

385
00:13:01,050 --> 00:13:04,290
definitely applications where people say

386
00:13:02,460 --> 00:13:05,790
oh feature X has been removed so I can't

387
00:13:04,290 --> 00:13:07,890
immediately update or the workflow has

388
00:13:05,790 --> 00:13:10,050
changed especially enterprise so really

389
00:13:07,890 --> 00:13:11,550
segregating out security updates from

390
00:13:10,050 --> 00:13:13,319
feature updates will solve a lot of that

391
00:13:11,550 --> 00:13:15,270
problem and it also let

392
00:13:13,320 --> 00:13:16,920
you have your your operating system or

393
00:13:15,270 --> 00:13:18,270
your platform restrict what an

394
00:13:16,920 --> 00:13:20,339
application can do figure like the

395
00:13:18,270 --> 00:13:22,230
Android Android permissions model or the

396
00:13:20,340 --> 00:13:24,030
Apple permissions model not adding new

397
00:13:22,230 --> 00:13:26,520
permissions to these makes a lot of

398
00:13:24,030 --> 00:13:28,110
difference the other thing is sort of

399
00:13:26,520 --> 00:13:32,189
Three Musketeers all for one and one for

400
00:13:28,110 --> 00:13:33,660
all so you have the idea of to prevent

401
00:13:32,190 --> 00:13:34,950
the targeted attack against a given user

402
00:13:33,660 --> 00:13:36,500
make sure everybody gets the same update

403
00:13:34,950 --> 00:13:38,400
and make sure these updates are

404
00:13:36,500 --> 00:13:40,680
universally distributed you don't want

405
00:13:38,400 --> 00:13:42,120
to have a special binary that can just

406
00:13:40,680 --> 00:13:43,770
get distributed to a small subset of

407
00:13:42,120 --> 00:13:46,350
users there's a lot of ways you could

408
00:13:43,770 --> 00:13:48,270
theoretically look at solving this you

409
00:13:46,350 --> 00:13:49,890
could publish them through some third

410
00:13:48,270 --> 00:13:52,400
party mechanism like say the Apple

411
00:13:49,890 --> 00:13:56,480
update mechanism or the the App Store on

412
00:13:52,400 --> 00:13:58,620
iOS or Google update where you have

413
00:13:56,480 --> 00:14:00,750
general you can assume that everyone's

414
00:13:58,620 --> 00:14:01,800
getting the same updates or you can have

415
00:14:00,750 --> 00:14:03,600
some other mechanism where you can

416
00:14:01,800 --> 00:14:05,040
validate the check sum of updates and

417
00:14:03,600 --> 00:14:06,180
just make sure as a user that you're

418
00:14:05,040 --> 00:14:09,390
getting the same update that everyone

419
00:14:06,180 --> 00:14:12,390
else is getting this is mostly for the

420
00:14:09,390 --> 00:14:14,640
target attack but it's it's an issue

421
00:14:12,390 --> 00:14:15,810
then the other thing is the keys the

422
00:14:14,640 --> 00:14:17,819
keys that are used for for doing

423
00:14:15,810 --> 00:14:19,709
software updates the problem is for a

424
00:14:17,820 --> 00:14:21,780
lot of small software vendors they do

425
00:14:19,710 --> 00:14:23,730
like Afeni code or they view the Apple

426
00:14:21,780 --> 00:14:27,540
signing process is just pure friction

427
00:14:23,730 --> 00:14:30,240
from the platform vendor and especially

428
00:14:27,540 --> 00:14:32,000
on Apple iOS where you have like a multi

429
00:14:30,240 --> 00:14:35,640
week delay between submitting updates

430
00:14:32,000 --> 00:14:37,860
it's a pain and a lot of these these

431
00:14:35,640 --> 00:14:39,660
people don't really put a lot of effort

432
00:14:37,860 --> 00:14:41,280
into securing their update mechanism so

433
00:14:39,660 --> 00:14:43,110
we've seen a lot of attacks where

434
00:14:41,280 --> 00:14:45,660
somebody goes and compromises the

435
00:14:43,110 --> 00:14:48,000
software developer on a machine or their

436
00:14:45,660 --> 00:14:50,040
keys or something else and uses that to

437
00:14:48,000 --> 00:14:51,990
push out malicious updates to a lot of

438
00:14:50,040 --> 00:14:55,949
the user base it's most famously in

439
00:14:51,990 --> 00:14:58,200
Ukraine so having a system that secures

440
00:14:55,950 --> 00:15:00,000
those keys better both from physical

441
00:14:58,200 --> 00:15:03,240
compromised multi-party control things

442
00:15:00,000 --> 00:15:05,910
like that makes a lot of sense so

443
00:15:03,240 --> 00:15:07,860
there's that sort of there's the

444
00:15:05,910 --> 00:15:09,329
assembly line making sure that the this

445
00:15:07,860 --> 00:15:12,360
would be reproducible builds so making

446
00:15:09,330 --> 00:15:15,090
sure that there's a way I can look at

447
00:15:12,360 --> 00:15:16,470
the source code and know how its suppose

448
00:15:15,090 --> 00:15:18,060
what the binary supposed to be and

449
00:15:16,470 --> 00:15:20,610
verify that the source code matches up

450
00:15:18,060 --> 00:15:22,829
with the the binary that's delivered to

451
00:15:20,610 --> 00:15:24,270
me this especially makes sense with open

452
00:15:22,830 --> 00:15:26,390
source software or anything where you've

453
00:15:24,270 --> 00:15:27,650
got the ability to audit the source code

454
00:15:26,390 --> 00:15:29,510
either what publishers we have a

455
00:15:27,650 --> 00:15:32,780
proprietary agreement with it

456
00:15:29,510 --> 00:15:35,210
the problem is modern computers are

457
00:15:32,780 --> 00:15:36,949
really really complicated and compilers

458
00:15:35,210 --> 00:15:38,840
are kind of non-deterministic in most

459
00:15:36,950 --> 00:15:41,120
cases if you don't go through a lot of

460
00:15:38,840 --> 00:15:42,080
work to to work on it especially if you

461
00:15:41,120 --> 00:15:43,580
don't have control of the build

462
00:15:42,080 --> 00:15:45,080
environment everything else so it's very

463
00:15:43,580 --> 00:15:46,460
hard for me as a user to take the source

464
00:15:45,080 --> 00:15:49,070
code even if I got the source code to

465
00:15:46,460 --> 00:15:50,290
like Windows 10 to build that and know

466
00:15:49,070 --> 00:15:52,970
that I'm going to get exactly the same

467
00:15:50,290 --> 00:15:54,170
binaries resulting as Microsoft got when

468
00:15:52,970 --> 00:15:55,790
they built unless I know the entire

469
00:15:54,170 --> 00:15:58,160
circumstances the build environment

470
00:15:55,790 --> 00:16:00,980
probably the Tor software is the leader

471
00:15:58,160 --> 00:16:02,870
in practical use of reproducible build

472
00:16:00,980 --> 00:16:04,730
technology right now unfortunately for

473
00:16:02,870 --> 00:16:06,380
them it also means that their build

474
00:16:04,730 --> 00:16:08,600
infrastructure is massively complicated

475
00:16:06,380 --> 00:16:10,189
in a huge pain I think moving the

476
00:16:08,600 --> 00:16:11,510
industry to the point where reproducible

477
00:16:10,190 --> 00:16:13,370
builds are sort of the default and it's

478
00:16:11,510 --> 00:16:14,960
a much more streamlined workflow will

479
00:16:13,370 --> 00:16:17,270
help a lot with this because it will

480
00:16:14,960 --> 00:16:18,830
then let you verify that what source

481
00:16:17,270 --> 00:16:21,590
code changes are made and verify them

482
00:16:18,830 --> 00:16:24,710
with the binary changes the next thing

483
00:16:21,590 --> 00:16:26,810
is of course audit audit is a huge huge

484
00:16:24,710 --> 00:16:28,010
deal with something where it's an

485
00:16:26,810 --> 00:16:29,150
enterprise you might have an agreement

486
00:16:28,010 --> 00:16:30,920
where you're allowed to audit the source

487
00:16:29,150 --> 00:16:32,120
code or audit the build process or other

488
00:16:30,920 --> 00:16:34,550
than anything else with your providers

489
00:16:32,120 --> 00:16:36,800
with consumer software there's no way

490
00:16:34,550 --> 00:16:39,260
that I care enough or have the access to

491
00:16:36,800 --> 00:16:41,030
almost any piece of software I use to

492
00:16:39,260 --> 00:16:42,530
audit it so it makes sense to have

493
00:16:41,030 --> 00:16:44,030
third-party organizations that are

494
00:16:42,530 --> 00:16:47,030
specialists in this that do audit I

495
00:16:44,030 --> 00:16:48,530
would love to be able to go get a binary

496
00:16:47,030 --> 00:16:49,939
and have it have a signature not just

497
00:16:48,530 --> 00:16:52,250
from the software vendor but also from

498
00:16:49,940 --> 00:16:53,620
say e FF saying that this product the

499
00:16:52,250 --> 00:16:55,760
software does not do anything

500
00:16:53,620 --> 00:16:58,100
specifically to accelerate data in a

501
00:16:55,760 --> 00:17:00,140
privacy perspective or perhaps from an

502
00:16:58,100 --> 00:17:01,400
EU regulator that's a testing that it

503
00:17:00,140 --> 00:17:03,590
doesn't do anything that violates you

504
00:17:01,400 --> 00:17:05,720
privacy or restrictions or from a

505
00:17:03,590 --> 00:17:07,190
specialist software security firm maybe

506
00:17:05,720 --> 00:17:08,990
an automated tool that just says oh

507
00:17:07,190 --> 00:17:10,190
we've checked for buffer overflows using

508
00:17:08,990 --> 00:17:11,449
this particular tool and we have the

509
00:17:10,190 --> 00:17:14,990
signature and then you could have

510
00:17:11,449 --> 00:17:17,920
something where the enterprise where the

511
00:17:14,990 --> 00:17:20,089
end-user consumer can verify that these

512
00:17:17,920 --> 00:17:21,980
adaptations are made about software

513
00:17:20,089 --> 00:17:24,079
before updating I'd be a lot more

514
00:17:21,980 --> 00:17:25,790
willing to update an emergency overnight

515
00:17:24,079 --> 00:17:27,948
patch if I see that everyone else is

516
00:17:25,790 --> 00:17:29,800
doing the same thing and that it's been

517
00:17:27,949 --> 00:17:31,940
inspected by some people that I trust

518
00:17:29,800 --> 00:17:33,620
the other thing would be having channels

519
00:17:31,940 --> 00:17:35,690
so separating out updates right now you

520
00:17:33,620 --> 00:17:37,959
just get one big update mechanism in

521
00:17:35,690 --> 00:17:39,970
some cases you have a beta channel or

522
00:17:37,960 --> 00:17:43,480
a faster release schedule type channel

523
00:17:39,970 --> 00:17:44,890
but it's kind of a hit or miss not all

524
00:17:43,480 --> 00:17:47,020
software has it it would be nice to have

525
00:17:44,890 --> 00:17:48,760
more segregated updates where you can

526
00:17:47,020 --> 00:17:53,379
have your security updates streamed

527
00:17:48,760 --> 00:17:55,360
separately from other things tests and

528
00:17:53,380 --> 00:17:59,350
measurement on your software being able

529
00:17:55,360 --> 00:18:03,039
to do evaluations of what the updates do

530
00:17:59,350 --> 00:18:05,590
and knowing the stuff like that makes a

531
00:18:03,039 --> 00:18:07,210
lot of sense it's obvious it's

532
00:18:05,590 --> 00:18:09,129
complicated but there's that and then

533
00:18:07,210 --> 00:18:11,020
sort of back to the future roll back so

534
00:18:09,130 --> 00:18:14,380
part of the problem with doing an update

535
00:18:11,020 --> 00:18:16,629
is you don't really know what it's going

536
00:18:14,380 --> 00:18:18,250
to do and if it goes wrong you're sort

537
00:18:16,630 --> 00:18:21,250
of making it bet every time you decide

538
00:18:18,250 --> 00:18:22,809
to click the Update button is it gonna

539
00:18:21,250 --> 00:18:25,110
completely blow up my computer and make

540
00:18:22,809 --> 00:18:27,100
it not work or what is it going to do so

541
00:18:25,110 --> 00:18:28,240
it would be nice to have the ability if

542
00:18:27,100 --> 00:18:29,320
I would be much more willing to do

543
00:18:28,240 --> 00:18:30,820
something if I knew it could always hit

544
00:18:29,320 --> 00:18:32,770
a button and revert to the state before

545
00:18:30,820 --> 00:18:34,570
doing that update some software does

546
00:18:32,770 --> 00:18:37,658
this relatively well but most software

547
00:18:34,570 --> 00:18:39,580
does not it's a big big issue and then

548
00:18:37,659 --> 00:18:42,520
of course logging and the ability to

549
00:18:39,580 --> 00:18:43,899
like the done mobile one of the biggest

550
00:18:42,520 --> 00:18:45,700
things that I've started to hate is

551
00:18:43,899 --> 00:18:46,689
large company is sort of a difference

552
00:18:45,700 --> 00:18:48,520
between large companies and small

553
00:18:46,690 --> 00:18:50,470
companies small companies when they push

554
00:18:48,520 --> 00:18:52,418
an update generally actually include

555
00:18:50,470 --> 00:18:55,000
like a real change log like either there

556
00:18:52,419 --> 00:18:56,620
get changes or at least the document

557
00:18:55,000 --> 00:18:58,210
features if you update like the Facebook

558
00:18:56,620 --> 00:18:59,830
app or the Twitter app or anything they

559
00:18:58,210 --> 00:19:02,289
say oh we've made updates to performance

560
00:18:59,830 --> 00:19:03,699
and security on our application and if

561
00:19:02,289 --> 00:19:04,929
you're looking at that that gives you

562
00:19:03,700 --> 00:19:07,149
zero information about whether it's

563
00:19:04,929 --> 00:19:08,380
important to update apples also kind of

564
00:19:07,149 --> 00:19:10,779
bad about this because there's a

565
00:19:08,380 --> 00:19:13,510
trade-off between if you have a zero-day

566
00:19:10,779 --> 00:19:15,130
vulnerability or a generally not rekt

567
00:19:13,510 --> 00:19:17,169
why the recognized vulnerability and

568
00:19:15,130 --> 00:19:18,700
your changelog says oh we fixed this

569
00:19:17,169 --> 00:19:20,590
because of this specific vulnerability

570
00:19:18,700 --> 00:19:22,510
attackers look at the changelog and then

571
00:19:20,590 --> 00:19:24,629
quickly say oh I'm gonna do this and

572
00:19:22,510 --> 00:19:26,350
they target it and they can do a

573
00:19:24,630 --> 00:19:29,110
targeted attack based on that

574
00:19:26,350 --> 00:19:30,850
information so they try to trickle out

575
00:19:29,110 --> 00:19:32,320
that information as much as they can but

576
00:19:30,850 --> 00:19:33,580
it doesn't really let you know if you

577
00:19:32,320 --> 00:19:35,289
should if you really need to update it

578
00:19:33,580 --> 00:19:37,000
if it's a pure feature update yeah not

579
00:19:35,289 --> 00:19:39,850
so much of a critical need to update in

580
00:19:37,000 --> 00:19:41,830
the middle the night so there's that so

581
00:19:39,850 --> 00:19:44,230
in conclusion I think the moves to

582
00:19:41,830 --> 00:19:45,639
update to reduce the friction have been

583
00:19:44,230 --> 00:19:47,590
great like we are in a much better

584
00:19:45,640 --> 00:19:49,450
position right now especially on mobile

585
00:19:47,590 --> 00:19:51,459
devices than we have been in the past we

586
00:19:49,450 --> 00:19:53,169
have platforms where

587
00:19:51,460 --> 00:19:56,049
you can get 8090 percent adoption on

588
00:19:53,169 --> 00:19:58,600
updates within weeks or months you have

589
00:19:56,049 --> 00:20:00,639
a browser platform that auto updates you

590
00:19:58,600 --> 00:20:03,879
have Chrome OS which updates everything

591
00:20:00,640 --> 00:20:06,700
like almost all the time and is is like

592
00:20:03,880 --> 00:20:09,250
transparent to the user and wonderful

593
00:20:06,700 --> 00:20:10,120
stuff but because of these organizations

594
00:20:09,250 --> 00:20:12,340
that have decided they're going to

595
00:20:10,120 --> 00:20:14,289
exploit the update mechanism for their

596
00:20:12,340 --> 00:20:15,250
own purposes there's a risk that we're

597
00:20:14,289 --> 00:20:17,679
gonna go back to the Stone Age

598
00:20:15,250 --> 00:20:20,370
and I don't know strange they'll be kind

599
00:20:17,679 --> 00:20:24,549
of cool too to have this exciting like

600
00:20:20,370 --> 00:20:27,100
situation where you can own any box it's

601
00:20:24,549 --> 00:20:28,210
not really the ideal situation so yeah

602
00:20:27,100 --> 00:20:29,980
so those are the those are the main

603
00:20:28,210 --> 00:20:31,899
issues I would say with security updates

604
00:20:29,980 --> 00:20:34,120
and updates and I would be happy to take

605
00:20:31,899 --> 00:20:47,590
any questions for the next five minutes

606
00:20:34,120 --> 00:20:49,330
or so great okay thank you yes so the

607
00:20:47,590 --> 00:20:51,908
solution I don't have a single like a

608
00:20:49,330 --> 00:20:56,320
product solution I think in general the

609
00:20:51,909 --> 00:20:59,250
solution for users is to push their

610
00:20:56,320 --> 00:21:02,980
their vendors to adopt those those ideas

611
00:20:59,250 --> 00:21:05,770
one is to move to platforms that do auto

612
00:21:02,980 --> 00:21:07,720
updates and manage like I use iOS and I

613
00:21:05,770 --> 00:21:09,760
use Chrome OS a lot and that if I have

614
00:21:07,720 --> 00:21:12,159
something that's a generally high

615
00:21:09,760 --> 00:21:13,658
security thing for people that don't

616
00:21:12,159 --> 00:21:15,730
have a lot of resources to build that

617
00:21:13,659 --> 00:21:17,710
combination works really well for like

618
00:21:15,730 --> 00:21:19,870
99% of users there's a few people where

619
00:21:17,710 --> 00:21:21,789
it's maybe a targeted issue would be

620
00:21:19,870 --> 00:21:23,408
more of an issue but moving to platforms

621
00:21:21,789 --> 00:21:25,270
that adopt those principles works the

622
00:21:23,409 --> 00:21:26,559
problem is then you're giving up a lot

623
00:21:25,270 --> 00:21:29,190
of the ecosystem that you already like

624
00:21:26,559 --> 00:21:31,480
like I love the mac OS desktop

625
00:21:29,190 --> 00:21:34,899
environment it's nowhere near as secure

626
00:21:31,480 --> 00:21:37,809
as comma West and if I give up this I

627
00:21:34,899 --> 00:21:40,570
give up a lot of stuff that I like so it

628
00:21:37,809 --> 00:21:41,950
would be nice if those principles and

629
00:21:40,570 --> 00:21:43,360
those update mechanisms got adopted by

630
00:21:41,950 --> 00:21:45,070
all the platforms I'm sure people love

631
00:21:43,360 --> 00:21:46,209
Windows 10 Windows 10 is actually a

632
00:21:45,070 --> 00:21:47,590
pretty decent operating system as a

633
00:21:46,210 --> 00:21:49,779
person who used to hate Windows and

634
00:21:47,590 --> 00:21:52,209
they've been pushing a lot of updates in

635
00:21:49,779 --> 00:21:53,830
a very good way so I think getting

636
00:21:52,210 --> 00:21:55,210
platform vendors to do that and then as

637
00:21:53,830 --> 00:21:56,350
a software developer adopting the

638
00:21:55,210 --> 00:21:58,980
principle of segregating out here

639
00:21:56,350 --> 00:22:02,100
updates and everything else makes sense

640
00:21:58,980 --> 00:22:02,100
anyone else

641
00:22:06,090 --> 00:22:09,270
say again please

642
00:22:17,670 --> 00:22:22,770
oh yeah sure yeah patch management

643
00:22:20,850 --> 00:22:24,000
software the problem is there are which

644
00:22:22,770 --> 00:22:27,780
ones I would recommend their problem is

645
00:22:24,000 --> 00:22:30,090
there's a lot of them on iOS it's fairly

646
00:22:27,780 --> 00:22:32,730
straightforward you can use a lot of the

647
00:22:30,090 --> 00:22:35,760
MDM platforms do a lot of the update

648
00:22:32,730 --> 00:22:37,020
mechanism management definitely the so

649
00:22:35,760 --> 00:22:39,330
the idea within enterprises you want to

650
00:22:37,020 --> 00:22:40,889
be able to manage updates for your users

651
00:22:39,330 --> 00:22:43,230
there's sort of a trade-off there of

652
00:22:40,890 --> 00:22:44,460
letting all your systems in small

653
00:22:43,230 --> 00:22:45,950
organizations or in informal

654
00:22:44,460 --> 00:22:47,970
organizations you end up with a bunch of

655
00:22:45,950 --> 00:22:49,380
relatively unmanaged device is just

656
00:22:47,970 --> 00:22:51,870
using consumer software and doing

657
00:22:49,380 --> 00:22:53,220
updates there all the other way on the

658
00:22:51,870 --> 00:22:55,439
spectrum is you have an enterprise

659
00:22:53,220 --> 00:22:57,150
department that doesn't give users any

660
00:22:55,440 --> 00:23:00,260
ability to initiate updates and pushes

661
00:22:57,150 --> 00:23:02,280
updates automatically on the Windows

662
00:23:00,260 --> 00:23:03,930
platform there's a lot of Microsoft

663
00:23:02,280 --> 00:23:05,480
tools that do management of those things

664
00:23:03,930 --> 00:23:08,190
there are not as many good

665
00:23:05,480 --> 00:23:10,170
cross-platform patch management tools

666
00:23:08,190 --> 00:23:11,970
that I know about a lot of these are

667
00:23:10,170 --> 00:23:13,680
very platform specific and very good

668
00:23:11,970 --> 00:23:17,220
there are some commercial ones out there

669
00:23:13,680 --> 00:23:19,680
but a lot of people prefer using free

670
00:23:17,220 --> 00:23:21,600
software I'm not sure what the the

671
00:23:19,680 --> 00:23:23,700
current best cross-platform solutions

672
00:23:21,600 --> 00:23:27,000
are generally what I've seen people do

673
00:23:23,700 --> 00:23:30,000
successfully is move to I mean honestly

674
00:23:27,000 --> 00:23:31,800
Chrome OS is a does a great job on patch

675
00:23:30,000 --> 00:23:33,210
management for like customer service

676
00:23:31,800 --> 00:23:35,340
machines and anything where you don't

677
00:23:33,210 --> 00:23:37,230
need to have a lot of heavyweight

678
00:23:35,340 --> 00:23:38,790
software running on it because even I

679
00:23:37,230 --> 00:23:41,280
get 90% of my work done in the browser

680
00:23:38,790 --> 00:23:42,450
now and moving to platforms that sort of

681
00:23:41,280 --> 00:23:44,280
automate that as a native part of the

682
00:23:42,450 --> 00:23:45,600
platform rather than an additional piece

683
00:23:44,280 --> 00:23:49,139
of software it makes a lot of sense and

684
00:23:45,600 --> 00:23:50,129
mobile is Apple configuration management

685
00:23:49,140 --> 00:23:51,330
and other stuff manager is that pretty

686
00:23:50,130 --> 00:23:53,510
well but there yeah there are some good

687
00:23:51,330 --> 00:23:55,470
commercial packages out there that do

688
00:23:53,510 --> 00:23:56,670
system management and point defense

689
00:23:55,470 --> 00:23:58,830
everything else it's usually all tied

690
00:23:56,670 --> 00:24:01,820
together but I'm not sure which ones are

691
00:23:58,830 --> 00:24:01,820
the best in each market

692
00:24:07,690 --> 00:24:14,180
that's again uh yeah yeah yeah I've seen

693
00:24:12,380 --> 00:24:16,250
this I have not looked at it as much as

694
00:24:14,180 --> 00:24:19,940
I should the github electron offering

695
00:24:16,250 --> 00:24:22,880
there's also something some of the I

696
00:24:19,940 --> 00:24:26,000
believe Facebook is using something is

697
00:24:22,880 --> 00:24:27,950
pretty decent but I haven't looked at

698
00:24:26,000 --> 00:24:34,670
the specific patch management software

699
00:24:27,950 --> 00:24:36,310
and there it's an area of active work

700
00:24:34,670 --> 00:24:38,510
there's a lot of there's no single like

701
00:24:36,310 --> 00:24:41,889
defined standard out there now or winner

702
00:24:38,510 --> 00:24:41,890
right now so a lot of cool stuff

703
00:25:05,139 --> 00:25:10,158
yeah I agree this is definitely

704
00:25:07,399 --> 00:25:11,570
optimistic I think the worst case is if

705
00:25:10,159 --> 00:25:12,860
we go back to the strategy of not having

706
00:25:11,570 --> 00:25:15,129
automatic updates or frictionless

707
00:25:12,860 --> 00:25:17,689
updates the best case is if we can have

708
00:25:15,130 --> 00:25:18,889
updates with some level of thought by

709
00:25:17,690 --> 00:25:21,470
the large companies I mean Apple is

710
00:25:18,889 --> 00:25:23,209
pushing device updates to hundreds of

711
00:25:21,470 --> 00:25:26,179
millions or billions of devices now so

712
00:25:23,210 --> 00:25:27,649
it makes perfect sense for Apple to put

713
00:25:26,179 --> 00:25:30,529
a little bit of extra work into

714
00:25:27,649 --> 00:25:32,059
publishing a change log or into some of

715
00:25:30,529 --> 00:25:34,130
that stuff and for enterprises that are

716
00:25:32,059 --> 00:25:35,120
deploying like 10,000 desktops it makes

717
00:25:34,130 --> 00:25:36,559
sense for them to do some sort of

718
00:25:35,120 --> 00:25:39,049
staging further updates and a lot of

719
00:25:36,559 --> 00:25:42,649
them do already so for the consumer

720
00:25:39,049 --> 00:25:44,330
space yeah it's definitely a I don't

721
00:25:42,649 --> 00:25:45,709
think we can realistically expect that

722
00:25:44,330 --> 00:25:47,509
any individual consumer is going to

723
00:25:45,710 --> 00:25:48,799
change the behavior I think this is all

724
00:25:47,509 --> 00:25:51,139
stuff that has to be done by software

725
00:25:48,799 --> 00:26:01,009
vendors and by platform vendors to

726
00:25:51,139 --> 00:26:01,519
handle that stuff yeah yeah that's the

727
00:26:01,009 --> 00:26:03,980
biggest problem

728
00:26:01,519 --> 00:26:06,529
I mean Android is the is the bad example

729
00:26:03,980 --> 00:26:07,759
of how updates work you have especially

730
00:26:06,529 --> 00:26:09,139
in China you have a bunch of like

731
00:26:07,759 --> 00:26:12,200
Android 2 devices that are out there

732
00:26:09,139 --> 00:26:14,360
that haven't been updated in like five

733
00:26:12,200 --> 00:26:16,700
years or six years or something you

734
00:26:14,360 --> 00:26:18,740
haven't you have vendor you have mobile

735
00:26:16,700 --> 00:26:21,169
carriers that push out phones and don't

736
00:26:18,740 --> 00:26:23,029
release updates where you have Android

737
00:26:21,169 --> 00:26:24,470
itself which has pretty low adoption on

738
00:26:23,029 --> 00:26:27,909
updates you have updates that are

739
00:26:24,470 --> 00:26:31,850
end-of-life pretty quickly it's really a

740
00:26:27,909 --> 00:26:33,889
problem you think the Android ecosystem

741
00:26:31,850 --> 00:26:35,809
is probably the big it so the legacy

742
00:26:33,889 --> 00:26:37,279
Windows XP devices that are still out

743
00:26:35,809 --> 00:26:38,299
there are responsible for a lot of

744
00:26:37,279 --> 00:26:40,309
problems in a lot of ways

745
00:26:38,299 --> 00:26:43,009
IOT and then Android are probably the

746
00:26:40,309 --> 00:26:44,269
three biggest areas of systems that

747
00:26:43,009 --> 00:26:45,860
aren't routinely updated that are

748
00:26:44,269 --> 00:26:48,169
subject to security vulnerabilities and

749
00:26:45,860 --> 00:26:50,059
unfortunately Android has such wide

750
00:26:48,169 --> 00:26:52,730
adoption and a lot of the users are

751
00:26:50,059 --> 00:26:53,720
either it's a huge cross-section of

752
00:26:52,730 --> 00:26:55,250
users so they're some of them are

753
00:26:53,720 --> 00:26:56,269
unsophisticated there's no way to expect

754
00:26:55,250 --> 00:26:58,190
them to change the behavior at all

755
00:26:56,269 --> 00:27:02,240
there's no way to expect them to to

756
00:26:58,190 --> 00:27:04,490
mitigate any sort of compromise and yeah

757
00:27:02,240 --> 00:27:05,720
Android Android is that the only party

758
00:27:04,490 --> 00:27:07,820
that can really solve this is probably

759
00:27:05,720 --> 00:27:09,500
Google would be putting new requirements

760
00:27:07,820 --> 00:27:11,120
on Android devices the nicest thing

761
00:27:09,500 --> 00:27:12,440
about cell phones is the battery sort of

762
00:27:11,120 --> 00:27:15,379
wears out after some years so there's

763
00:27:12,440 --> 00:27:17,149
some planned obsolescence in that that's

764
00:27:15,379 --> 00:27:18,090
the only thing when I was a CloudFlare

765
00:27:17,149 --> 00:27:21,209
we would look at a lot of

766
00:27:18,090 --> 00:27:23,279
the the newer ssl features and the only

767
00:27:21,210 --> 00:27:25,049
way to project when those are going to

768
00:27:23,279 --> 00:27:27,419
be available is when the batteries die

769
00:27:25,049 --> 00:27:30,830
and the old old android devices so yeah

770
00:27:27,419 --> 00:27:33,570
it's unfortunate i do think however

771
00:27:30,830 --> 00:27:36,110
security is important in the to enough

772
00:27:33,570 --> 00:27:38,970
users that they're going to start to

773
00:27:36,110 --> 00:27:40,229
least people look at like a lot of

774
00:27:38,970 --> 00:27:41,610
people that are informed at least know

775
00:27:40,230 --> 00:27:43,980
iOS versus android there are some

776
00:27:41,610 --> 00:27:45,600
security advantages to that usually

777
00:27:43,980 --> 00:27:48,750
after a big hack has happened so it

778
00:27:45,600 --> 00:27:50,399
might become a factor and yeah and thank

779
00:27:48,750 --> 00:27:54,829
you very much

780
00:27:50,400 --> 00:27:54,829
[Applause]

