1
00:00:07,870 --> 00:00:24,199
[Music]

2
00:00:31,180 --> 00:00:49,210
hello disobey so let's reveal this so

3
00:00:42,199 --> 00:00:52,489
this is just what is it about and me

4
00:00:49,210 --> 00:00:55,370
couple of boring details I've been doing

5
00:00:52,489 --> 00:00:57,320
disobey talking quite a bit so maybe you

6
00:00:55,370 --> 00:01:00,290
know me already

7
00:00:57,320 --> 00:01:05,180
I'm consulted that it's secure I've done

8
00:01:00,290 --> 00:01:07,100
this hacking stuff for a quite of oil if

9
00:01:05,180 --> 00:01:09,080
you want to contact me there's an email

10
00:01:07,100 --> 00:01:12,229
address that's my private email address

11
00:01:09,080 --> 00:01:14,450
and I also have website with some older

12
00:01:12,229 --> 00:01:17,200
vulnerabilities but yeah this is the

13
00:01:14,450 --> 00:01:21,820
boring stuff so let's proceed

14
00:01:17,200 --> 00:01:27,799
so SCP where does it come from

15
00:01:21,820 --> 00:01:31,729
so basically SCP is from year 1982 it's

16
00:01:27,799 --> 00:01:37,729
old it's really really old so what is it

17
00:01:31,729 --> 00:01:41,210
over 30 years so okay so basically what

18
00:01:37,729 --> 00:01:44,479
it originates from is error commands

19
00:01:41,210 --> 00:01:47,889
which are normally were overused like in

20
00:01:44,479 --> 00:01:51,920
the early days to perform remote

21
00:01:47,889 --> 00:01:54,619
activities on a second computer and I

22
00:01:51,920 --> 00:01:58,039
would think that the idea originally was

23
00:01:54,619 --> 00:02:00,200
to like have the next computer next to

24
00:01:58,039 --> 00:02:01,999
you in the same local network or

25
00:02:00,200 --> 00:02:06,850
something like that and execute commands

26
00:02:01,999 --> 00:02:06,850
on that or copy files between computers

27
00:02:06,909 --> 00:02:14,319
82 if you think about it that's several

28
00:02:10,970 --> 00:02:17,450
years before even the more is warm so

29
00:02:14,319 --> 00:02:19,910
was security even considered back then I

30
00:02:17,450 --> 00:02:21,799
don't think so probably they didn't

31
00:02:19,910 --> 00:02:23,990
didn't think about security at all at

32
00:02:21,800 --> 00:02:26,300
that point it was six years before the

33
00:02:23,990 --> 00:02:29,330
more a swarm happened so I don't know

34
00:02:26,300 --> 00:02:31,040
I'm not trying to blame anyone but they

35
00:02:29,330 --> 00:02:36,920
these things weren't a consideration

36
00:02:31,040 --> 00:02:40,209
back then also from RCP the original

37
00:02:36,920 --> 00:02:46,070
thing we inherit certain things

38
00:02:40,210 --> 00:02:48,080
say that RCP and SCP will over writes

39
00:02:46,070 --> 00:02:50,959
any files that are in the target

40
00:02:48,080 --> 00:02:53,470
directory without any questions they

41
00:02:50,960 --> 00:02:56,360
just get overwritten at that said

42
00:02:53,470 --> 00:02:58,640
there's no option to ignore it or

43
00:02:56,360 --> 00:03:00,590
there's no option to actually like ask

44
00:02:58,640 --> 00:03:07,459
the user if they want to overwrite

45
00:03:00,590 --> 00:03:10,820
anything also the air CP is weird in a

46
00:03:07,460 --> 00:03:13,160
way that this are there's a trust on the

47
00:03:10,820 --> 00:03:17,600
server for certain things so if you copy

48
00:03:13,160 --> 00:03:19,520
dot txt files the server will do the

49
00:03:17,600 --> 00:03:21,980
globbing as to see what the files

50
00:03:19,520 --> 00:03:24,740
actually are and then we'll just push

51
00:03:21,980 --> 00:03:27,350
them to the client and it gets

52
00:03:24,740 --> 00:03:29,510
interesting if we do this so if there's

53
00:03:27,350 --> 00:03:34,340
a hacker in the middle the hacker can

54
00:03:29,510 --> 00:03:38,899
actually say add something there say now

55
00:03:34,340 --> 00:03:41,180
we also include evil dot exe and also

56
00:03:38,900 --> 00:03:42,680
include that to the result and you

57
00:03:41,180 --> 00:03:46,280
actually copy files through the server

58
00:03:42,680 --> 00:03:47,650
that you didn't even ask for whoa that's

59
00:03:46,280 --> 00:03:53,890
interesting

60
00:03:47,650 --> 00:03:58,040
now SCP from 1995 that's what usually

61
00:03:53,890 --> 00:04:00,410
ssh creation date is mentioned but they

62
00:03:58,040 --> 00:04:03,109
actually used utilize all the code and

63
00:04:00,410 --> 00:04:07,549
they utilized RCP to actually create

64
00:04:03,110 --> 00:04:09,350
secure copy but they actually didn't

65
00:04:07,550 --> 00:04:11,630
really look at it really carefully I

66
00:04:09,350 --> 00:04:14,329
inherited all the problems that were in

67
00:04:11,630 --> 00:04:17,480
it well they added secure authentication

68
00:04:14,330 --> 00:04:19,850
and communication but as long as the

69
00:04:17,480 --> 00:04:23,120
user is really careful if you are not

70
00:04:19,850 --> 00:04:27,890
you get into trouble because we know

71
00:04:23,120 --> 00:04:31,669
this problem probably so yes

72
00:04:27,890 --> 00:04:36,530
no how can I tell well there's a

73
00:04:31,669 --> 00:04:40,099
fingerprint but ok raise hands who has

74
00:04:36,530 --> 00:04:43,159
never ignored this or actually checked

75
00:04:40,100 --> 00:04:46,669
only safe or first letters or a couple

76
00:04:43,160 --> 00:04:50,450
of last letters and just said yes

77
00:04:46,669 --> 00:04:54,039
because I'm ready to admit that I have

78
00:04:50,450 --> 00:04:57,310
sometimes ignored these like

79
00:04:54,040 --> 00:05:02,530
to check import and just accepted the

80
00:04:57,310 --> 00:05:06,370
host key but I've never done this but

81
00:05:02,530 --> 00:05:09,520
I've seen these options being used on

82
00:05:06,370 --> 00:05:12,160
automated scripts that copy files

83
00:05:09,520 --> 00:05:13,870
between servers for instance this is

84
00:05:12,160 --> 00:05:15,910
really useful because then you don't

85
00:05:13,870 --> 00:05:17,650
have this like pesky problem of actually

86
00:05:15,910 --> 00:05:19,630
configuring the host and let them know

87
00:05:17,650 --> 00:05:21,250
about your data everything just works

88
00:05:19,630 --> 00:05:25,420
automatically because you're not doing

89
00:05:21,250 --> 00:05:27,700
any host checking so I guess the smarter

90
00:05:25,420 --> 00:05:32,770
ones might be knowing what we are

91
00:05:27,700 --> 00:05:36,219
getting here but let's see so the first

92
00:05:32,770 --> 00:05:38,859
vulnerability so indeed the server is

93
00:05:36,220 --> 00:05:41,860
responsible for actually selecting what

94
00:05:38,860 --> 00:05:46,060
files are being returned so if you ask

95
00:05:41,860 --> 00:05:48,220
for my document dot txt you could get

96
00:05:46,060 --> 00:05:52,890
everything else or whatever the server

97
00:05:48,220 --> 00:05:56,260
decides so the names are not validated

98
00:05:52,890 --> 00:05:57,610
except for path traverser so there was

99
00:05:56,260 --> 00:05:59,710
earlier there was a problem where you

100
00:05:57,610 --> 00:06:02,080
could actually overwrite anything on the

101
00:05:59,710 --> 00:06:04,690
target system but now you have to be on

102
00:06:02,080 --> 00:06:07,930
the target directory so you can't escape

103
00:06:04,690 --> 00:06:10,630
it but other than that anything goes so

104
00:06:07,930 --> 00:06:14,560
can you see what kind of problems could

105
00:06:10,630 --> 00:06:18,540
arise from this if you replace those

106
00:06:14,560 --> 00:06:18,540
files certain nasty things could happen

107
00:06:19,020 --> 00:06:27,130
second you can modify the client output

108
00:06:23,320 --> 00:06:29,380
from the server so this means that if

109
00:06:27,130 --> 00:06:33,280
you are doing something adding extra

110
00:06:29,380 --> 00:06:35,880
files we can actually just hide them you

111
00:06:33,280 --> 00:06:39,400
don't see anything so you do the copy

112
00:06:35,880 --> 00:06:42,219
but nope I didn't see anything going on

113
00:06:39,400 --> 00:06:46,630
I just got exactly the file I asked for

114
00:06:42,220 --> 00:06:48,900
and that's it so ok what what could

115
00:06:46,630 --> 00:06:52,270
possibly go wrong here what could we do

116
00:06:48,900 --> 00:06:55,380
so ok let's be in a man-in-the-middle

117
00:06:52,270 --> 00:06:58,690
position and let's wait for the victim

118
00:06:55,380 --> 00:07:00,010
then man in the middle so there will be

119
00:06:58,690 --> 00:07:03,340
if it's a new host

120
00:07:00,010 --> 00:07:05,409
there will be question about ok do you

121
00:07:03,340 --> 00:07:07,539
accept this fingerprint let's assume

122
00:07:05,410 --> 00:07:10,359
that the user is stupid

123
00:07:07,539 --> 00:07:13,039
and then we override certain files and

124
00:07:10,359 --> 00:07:21,399
hide the fact from the user the users

125
00:07:13,039 --> 00:07:21,399
non divisor let's see

126
00:07:26,470 --> 00:07:35,170
so here we have see see we have

127
00:07:30,900 --> 00:07:40,950
up-to-date ubuntu and the user is going

128
00:07:35,170 --> 00:07:44,500
to copy some files from rares calm

129
00:07:40,950 --> 00:07:47,409
Documents folder this is perfectly

130
00:07:44,500 --> 00:07:54,160
normal and I always copy files from

131
00:07:47,410 --> 00:08:01,300
various so Oh looks good it looks

132
00:07:54,160 --> 00:08:04,200
exactly what I expect it to be yes ok

133
00:08:01,300 --> 00:08:06,550
good now I need to enter my password

134
00:08:04,200 --> 00:08:13,420
let's see if I managed to actually type

135
00:08:06,550 --> 00:08:16,360
it correctly yes so hello doc txt was

136
00:08:13,420 --> 00:08:21,280
copied from the docs folder and that's

137
00:08:16,360 --> 00:08:26,500
it if we look at it that's exactly what

138
00:08:21,280 --> 00:08:28,929
we got good so let's see if the user is

139
00:08:26,500 --> 00:08:38,539
now doing something like ok I need I

140
00:08:28,930 --> 00:08:42,299
need to launch a new terminal oops

141
00:08:38,539 --> 00:08:45,420
so basically I have code execution on

142
00:08:42,299 --> 00:08:47,520
the under victim computer now and that

143
00:08:45,420 --> 00:08:51,979
was the only thing that it I just copied

144
00:08:47,520 --> 00:08:59,280
files now okay

145
00:08:51,980 --> 00:09:05,130
so popping calculator as usual so let's

146
00:08:59,280 --> 00:09:14,490
see but this our hacker here this is

147
00:09:05,130 --> 00:09:17,370
actually Kali Linux yes so yes we also

148
00:09:14,490 --> 00:09:27,630
have direct SSH access to the victim

149
00:09:17,370 --> 00:09:30,240
computer so game over man now what

150
00:09:27,630 --> 00:09:32,040
happened here so maybe we should

151
00:09:30,240 --> 00:09:37,980
actually see what would actually happen

152
00:09:32,040 --> 00:09:40,050
all first let's see let me show you what

153
00:09:37,980 --> 00:09:42,720
actually happens I'll first I have a

154
00:09:40,050 --> 00:09:45,170
clear script that I can demonstrate

155
00:09:42,720 --> 00:09:52,280
things again

156
00:09:45,170 --> 00:09:52,280
so let's hide a standard error output

157
00:09:53,930 --> 00:09:58,219
and now you should see that there's

158
00:09:56,430 --> 00:10:01,709
actually some extra files being dropped

159
00:09:58,220 --> 00:10:04,850
so this is actually what happens and now

160
00:10:01,710 --> 00:10:04,850
if we look at the files

161
00:10:08,350 --> 00:10:14,750
so this is actually what is going to be

162
00:10:10,850 --> 00:10:21,440
executed when you start a new shell bash

163
00:10:14,750 --> 00:10:26,300
in this case and this is the actual key

164
00:10:21,440 --> 00:10:32,540
of the hacker being added for the

165
00:10:26,300 --> 00:10:40,189
current users authorized keys now all

166
00:10:32,540 --> 00:10:42,459
good and nice so that was the actual

167
00:10:40,190 --> 00:10:51,580
means of actually exploiting it but

168
00:10:42,460 --> 00:10:51,580
since I wanted to show a fix as well

169
00:10:51,880 --> 00:10:58,340
let's do our fixed version of the

170
00:10:55,370 --> 00:11:01,400
command and see if we can actually have

171
00:10:58,340 --> 00:11:02,050
some kind of control on it let's try it

172
00:11:01,400 --> 00:11:07,310
again

173
00:11:02,050 --> 00:11:10,670
let's try see what happens - oh now it

174
00:11:07,310 --> 00:11:13,790
says that unexpected file name so there

175
00:11:10,670 --> 00:11:16,780
is a fix available but let's come back

176
00:11:13,790 --> 00:11:16,780
to that in a moment

177
00:11:30,840 --> 00:11:36,790
oops

178
00:11:33,080 --> 00:11:36,790
oh okay good

179
00:11:38,370 --> 00:11:45,749
so how could you actually exploit this

180
00:11:41,699 --> 00:11:48,240
in like real world obviously the user

181
00:11:45,749 --> 00:11:50,279
has to make a mistake I mean this isn't

182
00:11:48,240 --> 00:11:53,519
something that's completely automated

183
00:11:50,279 --> 00:12:02,689
you still need to accept the bad host

184
00:11:53,519 --> 00:12:05,189
key still yet if you go google for the

185
00:12:02,689 --> 00:12:07,829
error message that you get when you

186
00:12:05,189 --> 00:12:10,410
actually have a host that has actually

187
00:12:07,829 --> 00:12:13,290
changing changed you actually get

188
00:12:10,410 --> 00:12:16,379
instructions to how to actually remove

189
00:12:13,290 --> 00:12:19,559
the offending key from the known hosts

190
00:12:16,379 --> 00:12:21,809
file so what they're saying is that okay

191
00:12:19,559 --> 00:12:23,430
you should ignore this warning and just

192
00:12:21,809 --> 00:12:25,439
remove the key and then accept it and

193
00:12:23,430 --> 00:12:27,239
then it will work because of course I

194
00:12:25,439 --> 00:12:29,279
want to copy my files so it just

195
00:12:27,240 --> 00:12:32,730
obviously remove the warning and then

196
00:12:29,279 --> 00:12:35,089
it's okay and that's actually the

197
00:12:32,730 --> 00:12:38,490
instructions from several large

198
00:12:35,089 --> 00:12:41,430
companies their help pages actually tell

199
00:12:38,490 --> 00:12:45,959
user to yeah just remove the offending

200
00:12:41,430 --> 00:12:48,959
key and try again it'll be okay so how

201
00:12:45,959 --> 00:12:51,989
you get the victims to fall into this

202
00:12:48,959 --> 00:12:56,579
trap so you could just use bit squatting

203
00:12:51,990 --> 00:12:58,800
which means that you just you figure out

204
00:12:56,579 --> 00:13:01,258
certain large servers that are being

205
00:12:58,800 --> 00:13:03,959
used to copy files from with SCP or

206
00:13:01,259 --> 00:13:07,499
being used with SSH then you take the

207
00:13:03,959 --> 00:13:09,779
hostname and it's just bit flip certain

208
00:13:07,499 --> 00:13:13,199
characters in the name and then register

209
00:13:09,779 --> 00:13:16,379
those domains and then spoof hosts that

210
00:13:13,199 --> 00:13:18,809
are almost the same but technically you

211
00:13:16,379 --> 00:13:22,139
need to have a error in the certain

212
00:13:18,809 --> 00:13:24,540
server so you end up to the bit squirted

213
00:13:22,139 --> 00:13:26,220
server and then you just hope that the

214
00:13:24,540 --> 00:13:29,519
user is stupid enough to actually not

215
00:13:26,220 --> 00:13:32,550
not care about the different host ID and

216
00:13:29,519 --> 00:13:34,679
they just do something and in this case

217
00:13:32,550 --> 00:13:37,109
you cannot do man-in-the-middle so you

218
00:13:34,679 --> 00:13:40,740
just have to say spoof and error message

219
00:13:37,110 --> 00:13:42,179
saying that okay error occurred and then

220
00:13:40,740 --> 00:13:44,360
you have actually pwned their host as

221
00:13:42,179 --> 00:13:44,360
well

222
00:13:46,970 --> 00:13:52,649
the second one duper squirting well

223
00:13:49,649 --> 00:13:55,560
that's almost the same except then you

224
00:13:52,649 --> 00:13:58,380
user its themselves actually proposed

225
00:13:55,560 --> 00:14:01,500
the name there's a missing character or

226
00:13:58,380 --> 00:14:04,800
some other mistake or even could be that

227
00:14:01,500 --> 00:14:08,370
you register all there's a comm domain

228
00:14:04,800 --> 00:14:10,560
and then you register net dot org and

229
00:14:08,370 --> 00:14:12,949
whatever and then just hope that users

230
00:14:10,560 --> 00:14:15,739
actually end up in the wrong host and

231
00:14:12,949 --> 00:14:18,779
accepts the key and then again get pwned

232
00:14:15,740 --> 00:14:20,339
again you cannot really know where the

233
00:14:18,779 --> 00:14:22,380
attacker are actually trying to reach

234
00:14:20,339 --> 00:14:24,449
but it doesn't matter you just saw an

235
00:14:22,380 --> 00:14:29,010
error message and then the user is pwned

236
00:14:24,449 --> 00:14:31,490
again DNS spoofing requires some

237
00:14:29,010 --> 00:14:34,410
activities so you need to man actually

238
00:14:31,490 --> 00:14:36,570
target certain servers and try to get

239
00:14:34,410 --> 00:14:38,910
the wrong IP addresses to the DNS server

240
00:14:36,570 --> 00:14:41,779
which is also getting a lot harder these

241
00:14:38,910 --> 00:14:44,459
days because DNS SEC and stuff like that

242
00:14:41,779 --> 00:14:48,149
it's used to be much easier to actually

243
00:14:44,459 --> 00:14:50,219
do DNS spoofing but if you can do that

244
00:14:48,149 --> 00:14:53,610
you can possibly target quite large

245
00:14:50,220 --> 00:14:57,180
audiences also get them to connect to

246
00:14:53,610 --> 00:15:01,350
the wrong server then man in the middle

247
00:14:57,180 --> 00:15:03,839
so you actively actually try to target

248
00:15:01,350 --> 00:15:08,160
certain users this could happen for

249
00:15:03,839 --> 00:15:10,290
instance in a way that you you first

250
00:15:08,160 --> 00:15:13,469
find out that okay these guys are using

251
00:15:10,290 --> 00:15:15,089
SCP a lot and then you'd find out okay

252
00:15:13,470 --> 00:15:17,940
this is the server that they are using

253
00:15:15,089 --> 00:15:19,800
then you know the users probably you try

254
00:15:17,940 --> 00:15:23,610
to find out who are the probably users

255
00:15:19,800 --> 00:15:26,430
of this server then you somehow I'm not

256
00:15:23,610 --> 00:15:27,959
going to try to speculate how it happens

257
00:15:26,430 --> 00:15:30,479
but you somehow managed to get the man

258
00:15:27,959 --> 00:15:35,189
in the middle position and you create

259
00:15:30,480 --> 00:15:37,709
attack enable it and then say send a

260
00:15:35,190 --> 00:15:40,199
phishing message to the users so you

261
00:15:37,709 --> 00:15:41,969
need to install this upgrade all you

262
00:15:40,199 --> 00:15:44,189
need to do certain certain certain thing

263
00:15:41,970 --> 00:15:47,220
so you get them to connect to the server

264
00:15:44,190 --> 00:15:50,250
and then you get to get to attack their

265
00:15:47,220 --> 00:15:55,680
actual hosts it could be interesting say

266
00:15:50,250 --> 00:15:57,779
developers or maybe some some users that

267
00:15:55,680 --> 00:16:00,329
actually manage a lot of servers if you

268
00:15:57,779 --> 00:16:03,060
could gain control to their account on

269
00:16:00,329 --> 00:16:07,260
the SSH keys for instance it would be

270
00:16:03,060 --> 00:16:11,160
really cheesy probably that's but that's

271
00:16:07,260 --> 00:16:13,470
always targeted active attack so it

272
00:16:11,160 --> 00:16:16,260
requires a lot of planning and lots of

273
00:16:13,470 --> 00:16:24,470
infrastructure and you can also get

274
00:16:16,260 --> 00:16:28,620
caught but yeah so where the problem is

275
00:16:24,470 --> 00:16:31,140
OpenSSH has both of these

276
00:16:28,620 --> 00:16:35,760
vulnerabilities and unfortunately

277
00:16:31,140 --> 00:16:37,319
there's no official fix as of now but if

278
00:16:35,760 --> 00:16:40,620
you are careful if you always verify

279
00:16:37,319 --> 00:16:43,769
your hosts keys then the only way this

280
00:16:40,620 --> 00:16:45,890
could be exploited is that well someone

281
00:16:43,769 --> 00:16:49,680
has actually pwned the server already

282
00:16:45,890 --> 00:16:51,959
well this little you can do them putty

283
00:16:49,680 --> 00:16:55,199
has only the second world ability which

284
00:16:51,959 --> 00:16:56,819
means that it's really not a problem you

285
00:16:55,199 --> 00:17:00,719
can always move the names and that's not

286
00:16:56,819 --> 00:17:03,209
really bad when SCP had the same

287
00:17:00,720 --> 00:17:05,270
vulnerability but you especially you

288
00:17:03,209 --> 00:17:09,720
specifically had to select

289
00:17:05,270 --> 00:17:13,230
SCP for the transfer mode by default is

290
00:17:09,720 --> 00:17:15,600
SFTP which is safe but anyway

291
00:17:13,230 --> 00:17:21,299
veena city was fixed already so that's

292
00:17:15,599 --> 00:17:23,458
good as well well mitigation for OpenSSH

293
00:17:21,299 --> 00:17:25,290
well always learn about the host keys

294
00:17:23,459 --> 00:17:29,159
this should go without saying actually

295
00:17:25,290 --> 00:17:31,799
but anyway if possible try to get away

296
00:17:29,159 --> 00:17:35,010
from SCP and just use SFTP which is

297
00:17:31,799 --> 00:17:36,690
doesn't have these problems but yeah you

298
00:17:35,010 --> 00:17:39,960
still need to check the host key

299
00:17:36,690 --> 00:17:43,830
obviously but if for some reason you

300
00:17:39,960 --> 00:17:45,570
must use SCP there is a patch which is

301
00:17:43,830 --> 00:17:52,740
completely unofficial

302
00:17:45,570 --> 00:17:54,780
I made it it's available and also I also

303
00:17:52,740 --> 00:17:56,520
released adversary online on my webpage

304
00:17:54,780 --> 00:17:59,850
so you can actually find the links there

305
00:17:56,520 --> 00:18:01,950
so that didn't actually take pictures or

306
00:17:59,850 --> 00:18:06,510
anything so basically you have a patch

307
00:18:01,950 --> 00:18:09,450
that actually does fix this problem

308
00:18:06,510 --> 00:18:11,280
not every in every case but most of the

309
00:18:09,450 --> 00:18:13,860
time it this actually is very good and

310
00:18:11,280 --> 00:18:16,170
it will do the thing that you actually

311
00:18:13,860 --> 00:18:18,959
saw so it will actually check the files

312
00:18:16,170 --> 00:18:21,060
that are coming back and will reject the

313
00:18:18,960 --> 00:18:26,940
connection if something weird is coming

314
00:18:21,060 --> 00:18:33,409
back and obviously been SCP well upgrade

315
00:18:26,940 --> 00:18:40,440
to the latest version 5.14 or later now

316
00:18:33,410 --> 00:18:46,250
this thing was found in August last year

317
00:18:40,440 --> 00:18:53,190
and I reported it pretty much quite soon

318
00:18:46,250 --> 00:18:55,980
and only proper reaction was from winscp

319
00:18:53,190 --> 00:18:58,350
and by the way that's single guy one guy

320
00:18:55,980 --> 00:18:59,840
doing the whole thing I think maybe

321
00:18:58,350 --> 00:19:02,370
there's actually a team of open-source

322
00:18:59,840 --> 00:19:04,620
developers but basically the project is

323
00:19:02,370 --> 00:19:06,719
run by single guy as far as I understand

324
00:19:04,620 --> 00:19:08,429
and he was really fast to actually fix

325
00:19:06,720 --> 00:19:11,430
it that was like I was really impressed

326
00:19:08,430 --> 00:19:14,700
okay cool that's very nice but then

327
00:19:11,430 --> 00:19:18,210
unfortunately I don't know what I mean

328
00:19:14,700 --> 00:19:19,260
okay granted you need to have user doing

329
00:19:18,210 --> 00:19:22,620
something stupid

330
00:19:19,260 --> 00:19:26,760
in here but still I mean overriding

331
00:19:22,620 --> 00:19:29,120
files that you didn't ask for it's kind

332
00:19:26,760 --> 00:19:33,210
of like unwanted functionality so I

333
00:19:29,120 --> 00:19:35,159
would still say that yes it's kind of

334
00:19:33,210 --> 00:19:37,800
like a user error but it's still

335
00:19:35,160 --> 00:19:41,940
something that it shouldn't do so in my

336
00:19:37,800 --> 00:19:44,790
opinion somehow opening sheds guys

337
00:19:41,940 --> 00:19:48,990
OpenBSD guys actually who are doing it I

338
00:19:44,790 --> 00:19:52,190
don't know what happened why there is no

339
00:19:48,990 --> 00:19:55,380
fix for these serious vulnerabilities

340
00:19:52,190 --> 00:19:59,940
there is fix for one other thing which

341
00:19:55,380 --> 00:20:02,870
is already committed to get that I know

342
00:19:59,940 --> 00:20:07,290
of but that was just a minor issue

343
00:20:02,870 --> 00:20:08,909
really in my opinion but one of the for

344
00:20:07,290 --> 00:20:11,190
vulnerabilities has been fixed all the

345
00:20:08,910 --> 00:20:14,390
details are in the Advisory text so if

346
00:20:11,190 --> 00:20:18,590
you want to see all the gritty details

347
00:20:14,390 --> 00:20:23,520
so now

348
00:20:18,590 --> 00:20:33,419
let's see one final thing so basically I

349
00:20:23,520 --> 00:20:37,620
can alter to output output of SCP so I

350
00:20:33,420 --> 00:20:40,560
had some fun idea maybe I should do

351
00:20:37,620 --> 00:20:44,959
something funny with it so now I'm

352
00:20:40,560 --> 00:20:44,960
copying video files from the server

353
00:20:54,659 --> 00:21:03,059
and instead of actually getting a copy

354
00:20:58,080 --> 00:21:06,478
of the video file you get this this is

355
00:21:03,059 --> 00:21:09,289
it pretty much does anyone have

356
00:21:06,479 --> 00:21:09,289
questions maybe

357
00:21:18,880 --> 00:21:22,990
thanks for the great presentation out of

358
00:21:21,039 --> 00:21:25,629
curiosity have you check Amazon tools

359
00:21:22,990 --> 00:21:27,850
they AWS tools are their own

360
00:21:25,630 --> 00:21:30,759
implementation of course but they kind

361
00:21:27,850 --> 00:21:32,740
of tend to copy the same ideas sorry

362
00:21:30,759 --> 00:21:34,929
actually I have some trouble hearing

363
00:21:32,740 --> 00:21:36,820
have you tried Amazon Amazon

364
00:21:34,929 --> 00:21:39,669
command-line tools so see they have

365
00:21:36,820 --> 00:21:42,039
their own version ray CP oh oh actually

366
00:21:39,669 --> 00:21:45,370
I haven't that's really great thing to

367
00:21:42,039 --> 00:21:47,889
actually look into that so please do

368
00:21:45,370 --> 00:21:49,199
or maybe I'll do it later time but

369
00:21:47,889 --> 00:21:58,350
really good point actually

370
00:21:49,200 --> 00:21:58,350
thank you more questions

371
00:22:06,180 --> 00:22:12,420
I think that the OpenSSH developers

372
00:22:09,960 --> 00:22:15,690
actually know about this because it's

373
00:22:12,420 --> 00:22:19,290
very very old protocol it's from the 70s

374
00:22:15,690 --> 00:22:21,630
so that's why they don't react so I

375
00:22:19,290 --> 00:22:25,320
think the proper solution would be just

376
00:22:21,630 --> 00:22:29,570
to remove SCP from everywhere and I

377
00:22:25,320 --> 00:22:33,600
think I'll do it in my service now yes I

378
00:22:29,570 --> 00:22:35,159
agree that it would fix the problem the

379
00:22:33,600 --> 00:22:37,740
problem with that would be that it would

380
00:22:35,160 --> 00:22:41,420
break the world basically because it's

381
00:22:37,740 --> 00:22:43,410
used in scripts and in tons of places

382
00:22:41,420 --> 00:22:49,340
probably it would be a good idea to

383
00:22:43,410 --> 00:22:52,290
actually remove it completely or as some

384
00:22:49,340 --> 00:22:58,139
idea has been that you would actually

385
00:22:52,290 --> 00:23:01,920
make SCP use SFTP internally and emulate

386
00:22:58,140 --> 00:23:04,680
all the functionality of SCP that way

387
00:23:01,920 --> 00:23:10,280
then it would be safe against this

388
00:23:04,680 --> 00:23:14,400
attack at least and I think SSH company

389
00:23:10,280 --> 00:23:17,190
incorporated their SCP is actually using

390
00:23:14,400 --> 00:23:19,620
SFTP internally so they are not affected

391
00:23:17,190 --> 00:23:22,260
by this and that I think was really

392
00:23:19,620 --> 00:23:24,659
smart move from them so they actually

393
00:23:22,260 --> 00:23:28,410
provide SCP but it doesn't have this old

394
00:23:24,660 --> 00:23:30,600
problem the easiest solution of course

395
00:23:28,410 --> 00:23:32,400
would be to remove it completely but I

396
00:23:30,600 --> 00:23:37,139
don't think that that's really realized

397
00:23:32,400 --> 00:23:40,530
stick maybe maybe make it like on the

398
00:23:37,140 --> 00:23:43,200
first use maybe make it so a huge

399
00:23:40,530 --> 00:23:45,170
warning users are you really going to

400
00:23:43,200 --> 00:23:47,820
use this application that have problems

401
00:23:45,170 --> 00:23:51,480
yes and then it would be your fault if

402
00:23:47,820 --> 00:23:54,570
you up but yeah good point

403
00:23:51,480 --> 00:23:59,130
they probably are aware of this problem

404
00:23:54,570 --> 00:24:02,070
as you said unfortunately the greater

405
00:23:59,130 --> 00:24:02,580
public might not be and that is always a

406
00:24:02,070 --> 00:24:05,850
problem

407
00:24:02,580 --> 00:24:07,860
so really smart guys lots of you of

408
00:24:05,850 --> 00:24:10,290
smart people you probably knew about

409
00:24:07,860 --> 00:24:12,320
this so you might have had some idea ok

410
00:24:10,290 --> 00:24:17,700
this is not a good idea to use this tool

411
00:24:12,320 --> 00:24:19,490
but there is a huge crowd there that

412
00:24:17,700 --> 00:24:21,650
doesn't know about this

413
00:24:19,490 --> 00:24:23,300
and hopefully now they know or we'll

414
00:24:21,650 --> 00:24:26,270
know about it

415
00:24:23,300 --> 00:24:28,790
and know to act properly or maybe even

416
00:24:26,270 --> 00:24:34,480
remove a CP completely on switch to SF

417
00:24:28,790 --> 00:24:34,480
DB more questions

418
00:24:45,050 --> 00:24:50,000
I'm forgiving and I'm a comment the

419
00:24:47,990 --> 00:24:52,310
reason why SSS community cigarette it

420
00:24:50,000 --> 00:24:54,320
moved away from the SCP protocol was

421
00:24:52,310 --> 00:24:58,820
exactly because the file parsing of the

422
00:24:54,320 --> 00:25:00,439
SCP or HCP protocol is so bad it wasn't

423
00:24:58,820 --> 00:25:02,179
only this issue it was also you know

424
00:25:00,440 --> 00:25:03,740
because the wildcards and you know all

425
00:25:02,180 --> 00:25:06,110
of these are actually expended by the

426
00:25:03,740 --> 00:25:08,600
cell which actually causes all kinds of

427
00:25:06,110 --> 00:25:11,419
other problems and that's why the you

428
00:25:08,600 --> 00:25:13,159
know to SFTP there or SCP is actually

429
00:25:11,420 --> 00:25:15,380
alias to xft bits actually the same

430
00:25:13,160 --> 00:25:17,360
binary and it actually takes the same

431
00:25:15,380 --> 00:25:20,150
command line arguments problem is sft

432
00:25:17,360 --> 00:25:22,639
the open OpenSSH SFTP is that it doesn't

433
00:25:20,150 --> 00:25:24,440
take the same comment arguments yeah

434
00:25:22,640 --> 00:25:28,790
okay there's small differences obviously

435
00:25:24,440 --> 00:25:32,360
but yeah so there are issues and

436
00:25:28,790 --> 00:25:35,990
obviously doing something on the server

437
00:25:32,360 --> 00:25:37,909
and then switching it around it's it

438
00:25:35,990 --> 00:25:38,780
will make it incompatible in certain

439
00:25:37,910 --> 00:25:44,360
situations

440
00:25:38,780 --> 00:25:47,060
anyway so I would say that trying to fix

441
00:25:44,360 --> 00:25:49,939
a CP is going to be like uphill battle

442
00:25:47,060 --> 00:25:52,730
you will never get it like completely

443
00:25:49,940 --> 00:25:55,390
safe in a sense that you are trusting

444
00:25:52,730 --> 00:26:00,410
execution on the server and such things

445
00:25:55,390 --> 00:26:02,960
so know at some point it's going to have

446
00:26:00,410 --> 00:26:04,460
to go away completely but there are good

447
00:26:02,960 --> 00:26:07,340
points that there are other things as

448
00:26:04,460 --> 00:26:13,330
well that affected the reason for SFTP

449
00:26:07,340 --> 00:26:13,330
for sure thank you good points

450
00:26:16,340 --> 00:26:19,030
anymore

451
00:26:22,690 --> 00:26:32,039
so I suppose all just thank you it has

452
00:26:29,470 --> 00:26:32,039
been a pleasure

453
00:26:36,060 --> 00:26:39,339
[Applause]

