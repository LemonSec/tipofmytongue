1
00:00:00,000 --> 00:00:10,880
[Music]

2
00:00:10,880 --> 00:00:11,940
thank you

3
00:00:11,940 --> 00:00:30,059
[Music]

4
00:00:30,060 --> 00:00:32,900
thank you

5
00:00:33,100 --> 00:00:36,819
[Music]

6
00:00:37,230 --> 00:00:42,600
[Applause]

7
00:00:42,600 --> 00:00:44,399
good evening

8
00:00:44,399 --> 00:00:45,600
so

9
00:00:45,600 --> 00:00:47,820
I'm here talking about my favorite

10
00:00:47,820 --> 00:00:51,000
subject over to past I think three or

11
00:00:51,000 --> 00:00:53,940
four years if you've seen me before you

12
00:00:53,940 --> 00:00:56,520
might have heard me talking about this

13
00:00:56,520 --> 00:00:59,960
thing called TLS and uh

14
00:00:59,960 --> 00:01:03,680
certificates and and whatever

15
00:01:03,979 --> 00:01:07,260
today's topic your connection is not

16
00:01:07,260 --> 00:01:09,720
private might be a phrase you've seen

17
00:01:09,720 --> 00:01:11,540
before

18
00:01:11,540 --> 00:01:14,820
uh and what we are going to do is

19
00:01:14,820 --> 00:01:17,400
exploit insecure certificate validation

20
00:01:17,400 --> 00:01:20,840
in TLS clients

21
00:01:20,939 --> 00:01:22,979
before that

22
00:01:22,979 --> 00:01:25,259
a little bit about me so my name is

23
00:01:25,259 --> 00:01:26,340
Apple

24
00:01:26,340 --> 00:01:28,860
I'm a senior security specialist working

25
00:01:28,860 --> 00:01:30,000
at Nixon

26
00:01:30,000 --> 00:01:33,780
and my day job revolves around devices

27
00:01:33,780 --> 00:01:37,439
and iot and whatever

28
00:01:37,439 --> 00:01:40,619
I do quite a lot of cryptography not the

29
00:01:40,619 --> 00:01:42,360
actual the math part but the

30
00:01:42,360 --> 00:01:45,000
implementation part and these kind of

31
00:01:45,000 --> 00:01:46,560
things that uh

32
00:01:46,560 --> 00:01:49,100
are easy to break

33
00:01:49,100 --> 00:01:52,500
also work with network protocols

34
00:01:52,500 --> 00:01:55,320
quite a lot custom Protocols are

35
00:01:55,320 --> 00:01:57,960
involved in this iot and and quite a lot

36
00:01:57,960 --> 00:01:58,740
of

37
00:01:58,740 --> 00:02:01,820
different kind of

38
00:02:03,659 --> 00:02:06,180
different kind of network things going

39
00:02:06,180 --> 00:02:09,000
on so not only protocols but also

40
00:02:09,000 --> 00:02:11,640
also networks and systems as a whole is

41
00:02:11,640 --> 00:02:14,780
is kind of what I do at work

42
00:02:14,780 --> 00:02:18,120
but after that when I get home security

43
00:02:18,120 --> 00:02:20,459
research is something that I I really

44
00:02:20,459 --> 00:02:24,000
like to do back Bounty for the past I

45
00:02:24,000 --> 00:02:26,340
think three years has been this kind of

46
00:02:26,340 --> 00:02:27,599
hobby that

47
00:02:27,599 --> 00:02:31,260
I think at home it's it's like

48
00:02:31,260 --> 00:02:33,900
there's not everyone at home appreciates

49
00:02:33,900 --> 00:02:36,300
the long nights and weekends spent on

50
00:02:36,300 --> 00:02:38,879
this kind of computer stuff that that

51
00:02:38,879 --> 00:02:41,819
I'm already doing at work but but that's

52
00:02:41,819 --> 00:02:45,720
that's something that uh I really enjoy

53
00:02:45,720 --> 00:02:47,540
additionally this thing called

54
00:02:47,540 --> 00:02:49,860
challenge.fi has been

55
00:02:49,860 --> 00:02:52,080
part of my hobbies for a couple of years

56
00:02:52,080 --> 00:02:53,040
now

57
00:02:53,040 --> 00:02:57,959
so doing challenges ctfs trying to do

58
00:02:57,959 --> 00:03:01,080
trainings for for the young ones so

59
00:03:01,080 --> 00:03:04,319
under 25 year olds there are some in the

60
00:03:04,319 --> 00:03:08,040
some here watching this and uh I've been

61
00:03:08,040 --> 00:03:11,879
I have been the ecsc team Finland coach

62
00:03:11,879 --> 00:03:13,500
so this uh

63
00:03:13,500 --> 00:03:16,560
uh European cyber security challenge

64
00:03:16,560 --> 00:03:19,800
which brings the young ones from all

65
00:03:19,800 --> 00:03:23,760
over Europe to compete with each other

66
00:03:23,760 --> 00:03:26,480
uh

67
00:03:27,180 --> 00:03:29,159
but the topic today

68
00:03:29,159 --> 00:03:31,580
that is TLS

69
00:03:31,580 --> 00:03:34,440
you might know what that is but if you

70
00:03:34,440 --> 00:03:36,420
don't don't worry I'll I'll keep this

71
00:03:36,420 --> 00:03:38,659
simple

72
00:03:40,140 --> 00:03:42,560
when you're using computers

73
00:03:42,560 --> 00:03:46,200
there's something that you want and

74
00:03:46,200 --> 00:03:47,879
that's kind of a

75
00:03:47,879 --> 00:03:50,099
you might want it inside the computer

76
00:03:50,099 --> 00:03:53,040
but of course

77
00:03:53,040 --> 00:03:54,239
usually

78
00:03:54,239 --> 00:03:57,599
if you don't create yourself that it's

79
00:03:57,599 --> 00:04:00,420
somewhere else and here is a computer

80
00:04:00,420 --> 00:04:02,519
and a server

81
00:04:02,519 --> 00:04:05,040
uh and there's some kind of connection

82
00:04:05,040 --> 00:04:09,060
between those so a wire or Wireless or

83
00:04:09,060 --> 00:04:11,720
or whatever

84
00:04:11,720 --> 00:04:15,239
but this this is kind of uh not really

85
00:04:15,239 --> 00:04:17,480
the

86
00:04:17,699 --> 00:04:22,459
complete picture of of what's Happening

87
00:04:23,100 --> 00:04:26,220
so between you and the server there is

88
00:04:26,220 --> 00:04:27,720
this kind of big mess called the

89
00:04:27,720 --> 00:04:30,240
internet I think there's been books

90
00:04:30,240 --> 00:04:31,699
written about that

91
00:04:31,699 --> 00:04:34,139
but that's basically a bunch of

92
00:04:34,139 --> 00:04:37,259
computers trying to figure out how to

93
00:04:37,259 --> 00:04:42,120
kind of get you what you want

94
00:04:42,120 --> 00:04:45,540
and in the internet and I think here

95
00:04:45,540 --> 00:04:48,960
tonight there are some bad guys

96
00:04:48,960 --> 00:04:50,699
so

97
00:04:50,699 --> 00:04:53,720
there's a problem

98
00:04:54,120 --> 00:04:57,360
we have this big mess complete with

99
00:04:57,360 --> 00:05:01,320
computers networks bad guys whatever

100
00:05:01,320 --> 00:05:03,300
and

101
00:05:03,300 --> 00:05:05,580
there is something that we want on the

102
00:05:05,580 --> 00:05:06,960
other side

103
00:05:06,960 --> 00:05:10,740
and this kind of is the

104
00:05:10,740 --> 00:05:14,160
core problem that TLS is is going to

105
00:05:14,160 --> 00:05:17,660
solve and

106
00:05:18,740 --> 00:05:22,380
TLS transport layer security

107
00:05:22,380 --> 00:05:25,020
I think it comes from the

108
00:05:25,020 --> 00:05:28,979
kind of it secures the transport layer

109
00:05:28,979 --> 00:05:33,080
so transporting data securely from

110
00:05:33,080 --> 00:05:36,000
somewhere else to you and you to

111
00:05:36,000 --> 00:05:38,600
somewhere else

112
00:05:38,940 --> 00:05:43,919
and this is simple bad guys can't

113
00:05:43,919 --> 00:05:45,900
get in between

114
00:05:45,900 --> 00:05:49,219
me and what I want

115
00:05:49,800 --> 00:05:53,460
so basically that's how it's supposed to

116
00:05:53,460 --> 00:05:54,960
be

117
00:05:54,960 --> 00:05:58,139
it should end here so we are using TLS

118
00:05:58,139 --> 00:06:01,680
everything is secure but I think you

119
00:06:01,680 --> 00:06:04,440
might have guessed uh it's not that

120
00:06:04,440 --> 00:06:06,680
simple

121
00:06:09,300 --> 00:06:11,639
TLS

122
00:06:11,639 --> 00:06:13,860
I've simplified it a little bit we have

123
00:06:13,860 --> 00:06:16,139
the channel but remember there's the bad

124
00:06:16,139 --> 00:06:18,419
guys somewhere in between

125
00:06:18,419 --> 00:06:21,780
so we need authentication we need

126
00:06:21,780 --> 00:06:24,840
encryption we need to encrypt the data

127
00:06:24,840 --> 00:06:26,039
so

128
00:06:26,039 --> 00:06:28,860
that only we can know what the data is

129
00:06:28,860 --> 00:06:31,919
and we need Authentication

130
00:06:31,919 --> 00:06:35,039
so we know that that data is actually

131
00:06:35,039 --> 00:06:38,599
coming from somewhere else

132
00:06:39,720 --> 00:06:42,620
in other words

133
00:06:42,660 --> 00:06:45,720
the server is actually

134
00:06:45,720 --> 00:06:47,699
where I want to connect to

135
00:06:47,699 --> 00:06:50,340
and the data is actually what I want to

136
00:06:50,340 --> 00:06:51,240
get

137
00:06:51,240 --> 00:06:53,400
so no one can

138
00:06:53,400 --> 00:06:55,139
go in between

139
00:06:55,139 --> 00:06:57,240
and modify it

140
00:06:57,240 --> 00:06:58,740
do this kind of man in the middle

141
00:06:58,740 --> 00:07:02,340
attacks or or even read the data from

142
00:07:02,340 --> 00:07:04,698
the internet

143
00:07:07,680 --> 00:07:09,780
a little bit simplified

144
00:07:09,780 --> 00:07:12,900
authentication is done with certificates

145
00:07:12,900 --> 00:07:15,600
an encryption is done with cryptography

146
00:07:15,600 --> 00:07:18,360
and we are not going to talk about the

147
00:07:18,360 --> 00:07:20,220
cryptography part today

148
00:07:20,220 --> 00:07:22,460
so that is something that is really hard

149
00:07:22,460 --> 00:07:25,199
and lots of Brilliant Minds have been

150
00:07:25,199 --> 00:07:28,380
working quite heavily

151
00:07:28,380 --> 00:07:30,599
in making that as bulletproof as

152
00:07:30,599 --> 00:07:32,840
possible

153
00:07:33,060 --> 00:07:36,199
but the certificates

154
00:07:37,979 --> 00:07:39,060
that's

155
00:07:39,060 --> 00:07:42,479
kind of doesn't require this complex

156
00:07:42,479 --> 00:07:45,419
math and and whatever so the Brilliant

157
00:07:45,419 --> 00:07:48,419
Minds haven't looked at this or at least

158
00:07:48,419 --> 00:07:51,060
this is what I think

159
00:07:51,060 --> 00:07:53,840
has happened

160
00:07:55,680 --> 00:07:59,160
you might have come across these kind of

161
00:07:59,160 --> 00:08:02,639
certificates in the internet and I think

162
00:08:02,639 --> 00:08:04,740
this is the

163
00:08:04,740 --> 00:08:07,259
kind of uh main connection between

164
00:08:07,259 --> 00:08:11,340
normal people and TLS certificates

165
00:08:11,340 --> 00:08:16,800
so https is basically HTTP over TLS

166
00:08:16,800 --> 00:08:19,020
and there is

167
00:08:19,020 --> 00:08:21,120
something wrong with the certificates

168
00:08:21,120 --> 00:08:24,120
usually it's someone has just forgot to

169
00:08:24,120 --> 00:08:27,539
renew the certificate so it's too old

170
00:08:27,539 --> 00:08:31,620
so it's the correct one but too old for

171
00:08:31,620 --> 00:08:32,760
some reason

172
00:08:32,760 --> 00:08:34,679
and there's kind of

173
00:08:34,679 --> 00:08:36,958
a million different ways when how

174
00:08:36,958 --> 00:08:38,820
certificate

175
00:08:38,820 --> 00:08:41,159
can be invalid

176
00:08:41,159 --> 00:08:44,600
and this kind of uh you just click the

177
00:08:44,600 --> 00:08:48,480
proceed so you just don't really think

178
00:08:48,480 --> 00:08:50,220
about it and proceed

179
00:08:50,220 --> 00:08:53,339
but remember it's it tries to warn you

180
00:08:53,339 --> 00:08:56,339
in the in the bottom there that it might

181
00:08:56,339 --> 00:08:58,200
be a misconfiguration

182
00:08:58,200 --> 00:08:59,519
or

183
00:08:59,519 --> 00:09:01,519
an attacker intercepting your connection

184
00:09:01,519 --> 00:09:04,560
so next time you want to click proceed

185
00:09:04,560 --> 00:09:07,680
you might want to figure out like

186
00:09:07,680 --> 00:09:09,779
there might be a bad guy trying to

187
00:09:09,779 --> 00:09:12,320
attack you

188
00:09:14,459 --> 00:09:17,760
and this is kind of um

189
00:09:17,760 --> 00:09:21,300
the thing with certificates so browsers

190
00:09:21,300 --> 00:09:24,180
have been doing certificates for a very

191
00:09:24,180 --> 00:09:27,240
long time and they are pretty good at it

192
00:09:27,240 --> 00:09:29,760
so some Brilliant Minds have been

193
00:09:29,760 --> 00:09:32,399
working with certificates in the

194
00:09:32,399 --> 00:09:34,800
browsers

195
00:09:34,800 --> 00:09:38,599
but let's see

196
00:09:39,180 --> 00:09:41,240
these certificates

197
00:09:41,240 --> 00:09:44,160
are basically kind of a thing that

198
00:09:44,160 --> 00:09:46,620
certifies something that's a holder of

199
00:09:46,620 --> 00:09:49,560
this certificates is someone and they

200
00:09:49,560 --> 00:09:51,360
are allowed to do something and there's

201
00:09:51,360 --> 00:09:53,519
someone who has given you this

202
00:09:53,519 --> 00:09:54,959
certificate

203
00:09:54,959 --> 00:09:56,760
so you might have like a driver's

204
00:09:56,760 --> 00:09:59,700
license that says that hey your name can

205
00:09:59,700 --> 00:10:02,700
drive a car and it's signed by the

206
00:10:02,700 --> 00:10:05,720
police or or whatever

207
00:10:07,800 --> 00:10:10,980
or you might have something like this

208
00:10:10,980 --> 00:10:13,100
that's

209
00:10:13,100 --> 00:10:15,300
obligatory memes

210
00:10:15,300 --> 00:10:17,700
but yeah there is something

211
00:10:17,700 --> 00:10:19,320
kind of

212
00:10:19,320 --> 00:10:21,480
someone has been certified to use the

213
00:10:21,480 --> 00:10:24,540
work use the force by this handsome

214
00:10:24,540 --> 00:10:29,160
fellow called Gandalf but um

215
00:10:29,160 --> 00:10:30,959
if you

216
00:10:30,959 --> 00:10:33,120
we need something else than just the

217
00:10:33,120 --> 00:10:35,580
name on the bottom

218
00:10:35,580 --> 00:10:37,980
so there is actually a way how to make

219
00:10:37,980 --> 00:10:40,019
these certificates

220
00:10:40,019 --> 00:10:45,200
kind of valid in that

221
00:10:48,540 --> 00:10:50,760
so we have a certificate

222
00:10:50,760 --> 00:10:54,180
and we put a signature on it

223
00:10:54,180 --> 00:10:57,000
so this is a valid certificate now that

224
00:10:57,000 --> 00:10:59,700
it has the signature

225
00:10:59,700 --> 00:11:02,760
we can little bit look into like what

226
00:11:02,760 --> 00:11:06,680
actually is a certificate

227
00:11:10,320 --> 00:11:13,079
so this certificate

228
00:11:13,079 --> 00:11:16,800
it's basically a fancy text file so if

229
00:11:16,800 --> 00:11:18,720
you try to open it you might see

230
00:11:18,720 --> 00:11:20,700
something something there

231
00:11:20,700 --> 00:11:24,600
but if you kind of uh

232
00:11:24,600 --> 00:11:26,880
open it if it's a correct tool you might

233
00:11:26,880 --> 00:11:29,279
might see these kind of fields in the

234
00:11:29,279 --> 00:11:30,839
certificate

235
00:11:30,839 --> 00:11:34,440
so the certificate is issued by someone

236
00:11:34,440 --> 00:11:36,959
it's issued to someone

237
00:11:36,959 --> 00:11:40,700
and there is this public key

238
00:11:40,700 --> 00:11:43,019
cryptography there

239
00:11:43,019 --> 00:11:45,660
that you can use it to sign electronic

240
00:11:45,660 --> 00:11:48,000
things you might have some miscellaneous

241
00:11:48,000 --> 00:11:50,640
things in the certificate and this is

242
00:11:50,640 --> 00:11:52,260
kind of

243
00:11:52,260 --> 00:11:54,420
one one thing that the

244
00:11:54,420 --> 00:11:56,760
makes these certificates have a lot of

245
00:11:56,760 --> 00:12:00,120
problems because it's not specified in

246
00:12:00,120 --> 00:12:02,579
that specification like what everything

247
00:12:02,579 --> 00:12:04,500
can be in a certificate so it can be

248
00:12:04,500 --> 00:12:07,140
basically anything you want

249
00:12:07,140 --> 00:12:10,939
and then there's a signature

250
00:12:15,000 --> 00:12:18,540
so we could have a certificate issued by

251
00:12:18,540 --> 00:12:19,560
Apple

252
00:12:19,560 --> 00:12:21,959
issue

253
00:12:21,959 --> 00:12:24,600
with this kind of public key

254
00:12:24,600 --> 00:12:26,220
file

255
00:12:26,220 --> 00:12:28,620
it could say hey this is Apple in the

256
00:12:28,620 --> 00:12:31,019
certificate and it concludes this

257
00:12:31,019 --> 00:12:32,279
signature

258
00:12:32,279 --> 00:12:35,100
file also

259
00:12:35,100 --> 00:12:39,720
and if you know your RSA cryptography

260
00:12:39,720 --> 00:12:42,540
you have a public key and a private key

261
00:12:42,540 --> 00:12:45,899
so this is kind of another file on top

262
00:12:45,899 --> 00:12:47,880
of the certificate you have this key

263
00:12:47,880 --> 00:12:49,560
file

264
00:12:49,560 --> 00:12:52,139
and the key file basically

265
00:12:52,139 --> 00:12:55,260
says that if you have the key file then

266
00:12:55,260 --> 00:12:57,899
you can use the public key in the

267
00:12:57,899 --> 00:13:00,180
certificate so it kind of proves that

268
00:13:00,180 --> 00:13:02,519
you actually own the certificate

269
00:13:02,519 --> 00:13:04,500
so even if you give the certificate to

270
00:13:04,500 --> 00:13:06,480
someone they can't use it without your

271
00:13:06,480 --> 00:13:08,660
key

272
00:13:10,740 --> 00:13:13,980
so we created a certificate

273
00:13:13,980 --> 00:13:16,740
and a key

274
00:13:16,740 --> 00:13:19,079
and

275
00:13:19,079 --> 00:13:21,240
we talk a little bit about these

276
00:13:21,240 --> 00:13:22,680
signatures

277
00:13:22,680 --> 00:13:25,079
so something that proves that this is

278
00:13:25,079 --> 00:13:28,079
not just Gandalf giving out certificates

279
00:13:28,079 --> 00:13:31,939
but it's actually a valid thing

280
00:13:36,000 --> 00:13:39,899
and this kind of signatures are given

281
00:13:39,899 --> 00:13:41,880
with these keys

282
00:13:41,880 --> 00:13:43,320
so

283
00:13:43,320 --> 00:13:45,019
we have the

284
00:13:45,019 --> 00:13:48,420
arbor.pam issued by app and it's signed

285
00:13:48,420 --> 00:13:50,519
by ABBA

286
00:13:50,519 --> 00:13:53,820
and then you have the server certificate

287
00:13:53,820 --> 00:13:57,000
that is also issued by Oppo and it's

288
00:13:57,000 --> 00:13:58,860
signed by Arbor

289
00:13:58,860 --> 00:14:02,339
so if I really trust the server I can

290
00:14:02,339 --> 00:14:05,639
give it a certificate that hey you are a

291
00:14:05,639 --> 00:14:08,100
server signed by Apple

292
00:14:08,100 --> 00:14:10,620
and the server has its own key that it

293
00:14:10,620 --> 00:14:13,200
can use to prove that it is actually the

294
00:14:13,200 --> 00:14:15,860
server

295
00:14:19,800 --> 00:14:22,680
a little bit like this

296
00:14:22,680 --> 00:14:25,260
so there is the me

297
00:14:25,260 --> 00:14:27,720
now with my certificate

298
00:14:27,720 --> 00:14:32,540
and the server with its certificate

299
00:14:42,480 --> 00:14:46,139
and how this TLS works

300
00:14:46,139 --> 00:14:48,839
I want something from the server so I

301
00:14:48,839 --> 00:14:51,779
want it and I want only it and I want it

302
00:14:51,779 --> 00:14:53,940
only from the server

303
00:14:53,940 --> 00:14:56,880
so we can use this TLS with these

304
00:14:56,880 --> 00:14:59,420
certificates

305
00:14:59,899 --> 00:15:03,060
kind of like this so with our

306
00:15:03,060 --> 00:15:05,279
certificate we can check

307
00:15:05,279 --> 00:15:09,180
that the server actually

308
00:15:09,180 --> 00:15:11,399
is the correct one

309
00:15:11,399 --> 00:15:13,560
so

310
00:15:13,560 --> 00:15:16,199
when we start a TLS connection we are

311
00:15:16,199 --> 00:15:19,440
connected to someone and

312
00:15:19,440 --> 00:15:22,440
when we have done the connection we can

313
00:15:22,440 --> 00:15:24,779
then ask the server to verify that hey

314
00:15:24,779 --> 00:15:26,940
we are now connected to you

315
00:15:26,940 --> 00:15:30,240
who are you and they can say that hey I

316
00:15:30,240 --> 00:15:32,839
am the server

317
00:15:33,000 --> 00:15:37,260
and the server uses it's key to kind of

318
00:15:37,260 --> 00:15:42,139
make the proof in the TLs connection

319
00:15:44,940 --> 00:15:48,980
and is it now the end

320
00:15:49,980 --> 00:15:54,199
well let's go back to this slide

321
00:15:54,959 --> 00:15:58,440
if you can't see it we can zoom a bit

322
00:15:58,440 --> 00:16:01,380
and enhance

323
00:16:01,380 --> 00:16:04,019
and

324
00:16:04,019 --> 00:16:06,959
what what does it mean that the server

325
00:16:06,959 --> 00:16:10,199
or that we can check the out and visit

326
00:16:10,199 --> 00:16:12,979
of the server

327
00:16:13,079 --> 00:16:15,300
like we want to

328
00:16:15,300 --> 00:16:18,060
we are using this DLS connection we

329
00:16:18,060 --> 00:16:20,339
really want to kind of authenticate the

330
00:16:20,339 --> 00:16:21,600
other party

331
00:16:21,600 --> 00:16:24,959
so why is it that we can check the

332
00:16:24,959 --> 00:16:28,139
authenticity of the server

333
00:16:28,139 --> 00:16:31,079
well it turns out

334
00:16:31,079 --> 00:16:33,240
certificate validation in TLS is

335
00:16:33,240 --> 00:16:34,560
optional

336
00:16:34,560 --> 00:16:36,899
so to ensure that you are really

337
00:16:36,899 --> 00:16:39,060
connected to the correct server you have

338
00:16:39,060 --> 00:16:42,360
to validate the certificate if you want

339
00:16:42,360 --> 00:16:44,040
so

340
00:16:44,040 --> 00:16:47,519
kind of like this was when I started

341
00:16:47,519 --> 00:16:50,040
studying TLS this was a little bit new

342
00:16:50,040 --> 00:16:51,660
to me like

343
00:16:51,660 --> 00:16:53,220
like

344
00:16:53,220 --> 00:16:55,680
we want secure connections why would we

345
00:16:55,680 --> 00:16:58,320
not want secure connections

346
00:16:58,320 --> 00:17:02,940
and of course as we talked here earlier

347
00:17:02,940 --> 00:17:05,699
browsers they want secure connections

348
00:17:05,699 --> 00:17:09,559
and they are checking the certificates

349
00:17:10,380 --> 00:17:14,040
but when we are talking something else

350
00:17:14,040 --> 00:17:17,160
than the browsers you might remember

351
00:17:17,160 --> 00:17:19,980
from earlier I talked that I work a lot

352
00:17:19,980 --> 00:17:21,540
with devices

353
00:17:21,540 --> 00:17:24,240
so some kind of iot device

354
00:17:24,240 --> 00:17:27,780
and they want secure connections

355
00:17:27,780 --> 00:17:29,400
but

356
00:17:29,400 --> 00:17:31,320
but if you and if you are developing

357
00:17:31,320 --> 00:17:34,200
some kind of iot or application you

358
00:17:34,200 --> 00:17:36,120
might want secure connections

359
00:17:36,120 --> 00:17:37,620
but

360
00:17:37,620 --> 00:17:39,240
are you really validating the

361
00:17:39,240 --> 00:17:41,039
certificate

362
00:17:41,039 --> 00:17:44,100
when you're doing so so you might want

363
00:17:44,100 --> 00:17:45,780
to think a little bit that if you are

364
00:17:45,780 --> 00:17:47,880
someone who is actually developing these

365
00:17:47,880 --> 00:17:48,960
things

366
00:17:48,960 --> 00:17:51,840
have you put some thought into this

367
00:17:51,840 --> 00:17:54,780
and I can say not a lot of developers

368
00:17:54,780 --> 00:17:57,200
have

369
00:18:00,600 --> 00:18:03,179
if we remember a little bit about the

370
00:18:03,179 --> 00:18:04,860
certificates

371
00:18:04,860 --> 00:18:07,320
so this is kind of

372
00:18:07,320 --> 00:18:09,539
three things that you should check from

373
00:18:09,539 --> 00:18:11,880
a certificate

374
00:18:11,880 --> 00:18:15,000
so when you get a certificate from a

375
00:18:15,000 --> 00:18:17,100
server you should check that who has

376
00:18:17,100 --> 00:18:18,960
issued the certificate

377
00:18:18,960 --> 00:18:21,360
we don't want Gandalf giving us server

378
00:18:21,360 --> 00:18:23,959
certificates

379
00:18:24,240 --> 00:18:26,820
and we want to check who the certificate

380
00:18:26,820 --> 00:18:30,000
is issued to this is kind of what you do

381
00:18:30,000 --> 00:18:33,000
at the bars you look at the picture and

382
00:18:33,000 --> 00:18:34,799
you look at the 12 year old kid then you

383
00:18:34,799 --> 00:18:35,760
check

384
00:18:35,760 --> 00:18:39,020
doesn't look like the picture

385
00:18:40,320 --> 00:18:43,500
and that has the certificate be assigned

386
00:18:43,500 --> 00:18:46,320
so is it just a for a jury that says

387
00:18:46,320 --> 00:18:49,399
something like this

388
00:18:51,660 --> 00:18:53,880
and if you look a little bit closer to

389
00:18:53,880 --> 00:18:55,440
each of these

390
00:18:55,440 --> 00:18:58,860
so who has issued the certificate

391
00:18:58,860 --> 00:19:02,039
basically in the internet there's this

392
00:19:02,039 --> 00:19:03,059
kind of

393
00:19:03,059 --> 00:19:05,880
different priorities that issue

394
00:19:05,880 --> 00:19:07,980
certificates like GoDaddy and let's

395
00:19:07,980 --> 00:19:09,360
encrypt and

396
00:19:09,360 --> 00:19:10,980
Etc there's like a thousand different

397
00:19:10,980 --> 00:19:14,520
places who give this out and if you are

398
00:19:14,520 --> 00:19:15,900
working with the

399
00:19:15,900 --> 00:19:18,840
kind of a really important stuff

400
00:19:18,840 --> 00:19:21,480
that you might not want all of those

401
00:19:21,480 --> 00:19:22,860
thousands

402
00:19:22,860 --> 00:19:26,039
uh certificate issuers to kind of issue

403
00:19:26,039 --> 00:19:28,740
certificates so you might only trust

404
00:19:28,740 --> 00:19:31,620
kind of uh some of those

405
00:19:31,620 --> 00:19:33,360
and there is this special thing called

406
00:19:33,360 --> 00:19:36,980
self-signed certificate so we created

407
00:19:36,980 --> 00:19:40,799
apple.com certificate that has signed

408
00:19:40,799 --> 00:19:41,640
itself

409
00:19:41,640 --> 00:19:44,580
so if I I'm really strict about my

410
00:19:44,580 --> 00:19:46,200
security I might only trust that

411
00:19:46,200 --> 00:19:48,900
certificate so if I have two computers

412
00:19:48,900 --> 00:19:51,419
and they I can kind of share the

413
00:19:51,419 --> 00:19:53,640
certificate so I can use the same

414
00:19:53,640 --> 00:19:56,580
certificate or or whatever

415
00:19:56,580 --> 00:20:00,539
and uh I can just trust it and nothing

416
00:20:00,539 --> 00:20:01,860
else

417
00:20:01,860 --> 00:20:03,900
and this is quite handy when you are

418
00:20:03,900 --> 00:20:06,600
developing things so you just put a

419
00:20:06,600 --> 00:20:08,460
self-signed certificate then you trust

420
00:20:08,460 --> 00:20:09,539
it then

421
00:20:09,539 --> 00:20:11,640
but are you trusting only that

422
00:20:11,640 --> 00:20:13,559
self-signed certificate or something

423
00:20:13,559 --> 00:20:16,340
else also

424
00:20:19,440 --> 00:20:21,840
there's the question of who is the

425
00:20:21,840 --> 00:20:23,640
certificate issued to

426
00:20:23,640 --> 00:20:25,919
so it could be issued to Apple

427
00:20:25,919 --> 00:20:29,400
is it could be issued to my website it

428
00:20:29,400 --> 00:20:33,419
could be issued to whatever it might be

429
00:20:33,419 --> 00:20:36,080
uh

430
00:20:36,240 --> 00:20:37,679
kind of

431
00:20:37,679 --> 00:20:40,679
it doesn't specify in the specification

432
00:20:40,679 --> 00:20:43,140
of the certificates that what you can

433
00:20:43,140 --> 00:20:45,179
actually certify and

434
00:20:45,179 --> 00:20:47,820
what you can certify them to do

435
00:20:47,820 --> 00:20:50,220
so these kind of

436
00:20:50,220 --> 00:20:53,460
uh questions that if you just

437
00:20:53,460 --> 00:20:55,980
change your name to like kim.com or or

438
00:20:55,980 --> 00:20:58,620
whatever then get a certificate for your

439
00:20:58,620 --> 00:20:59,760
name and then

440
00:20:59,760 --> 00:21:01,919
you might have a certificate for for a

441
00:21:01,919 --> 00:21:04,679
website so these are also

442
00:21:04,679 --> 00:21:08,220
something that that we want to check and

443
00:21:08,220 --> 00:21:10,140
especially we want to check that if we

444
00:21:10,140 --> 00:21:12,960
are trying to go to apo.com

445
00:21:12,960 --> 00:21:14,220
that

446
00:21:14,220 --> 00:21:16,559
the certificate is not for bob.com or

447
00:21:16,559 --> 00:21:19,340
whatever else

448
00:21:20,460 --> 00:21:23,780
so we want exactly

449
00:21:24,120 --> 00:21:26,460
or we want the certificate to be issued

450
00:21:26,460 --> 00:21:27,900
exactly to the thing that we are

451
00:21:27,900 --> 00:21:30,500
connecting do

452
00:21:31,919 --> 00:21:34,200
and that has the certificate been signed

453
00:21:34,200 --> 00:21:35,640
so

454
00:21:35,640 --> 00:21:39,539
this uh this is also the some math and

455
00:21:39,539 --> 00:21:41,700
and you don't really have to understand

456
00:21:41,700 --> 00:21:44,520
how these signatures work but you just

457
00:21:44,520 --> 00:21:46,020
need to know that hey it has to be

458
00:21:46,020 --> 00:21:49,140
assigned and the math has to work out

459
00:21:49,140 --> 00:21:53,720
and luckily there's tools for this

460
00:21:57,480 --> 00:22:00,840
and if we want to attack against this

461
00:22:00,840 --> 00:22:03,240
kind of certificate validation process

462
00:22:03,240 --> 00:22:05,820
so if we are checking that who has

463
00:22:05,820 --> 00:22:08,220
issued the certificate so if we just

464
00:22:08,220 --> 00:22:11,100
self-sign a certificate and the other

465
00:22:11,100 --> 00:22:12,720
party doesn't check

466
00:22:12,720 --> 00:22:14,820
like who has issued it so if we just

467
00:22:14,820 --> 00:22:16,440
issue a certificate to whatever

468
00:22:16,440 --> 00:22:19,440
apple.com or something

469
00:22:19,440 --> 00:22:23,159
and just issue it ourselves if this is

470
00:22:23,159 --> 00:22:24,780
not checked then that's a valid

471
00:22:24,780 --> 00:22:27,320
certificate

472
00:22:31,440 --> 00:22:35,280
and who is the certificate issued to

473
00:22:35,280 --> 00:22:38,100
so if you don't check this

474
00:22:38,100 --> 00:22:40,020
there is this thing called let's encrypt

475
00:22:40,020 --> 00:22:42,780
that lets you have a certificate in five

476
00:22:42,780 --> 00:22:45,600
minutes for something that you own

477
00:22:45,600 --> 00:22:49,559
but if it's not checked that

478
00:22:49,559 --> 00:22:51,720
who owns the certificate it's a valid

479
00:22:51,720 --> 00:22:54,000
certificate for me but it's not a valid

480
00:22:54,000 --> 00:22:57,260
certificate for apple.com

481
00:23:01,080 --> 00:23:04,020
and that has it actually been signed so

482
00:23:04,020 --> 00:23:06,080
we can craft some kind of

483
00:23:06,080 --> 00:23:09,659
certificate that has our public key and

484
00:23:09,659 --> 00:23:12,299
our private key can then use it

485
00:23:12,299 --> 00:23:14,520
but the

486
00:23:14,520 --> 00:23:17,940
signature is is just not valid so we can

487
00:23:17,940 --> 00:23:20,940
say that hey GoDaddy has issued a

488
00:23:20,940 --> 00:23:23,880
certificate for apple.com

489
00:23:23,880 --> 00:23:27,539
with my public key and I can say that's

490
00:23:27,539 --> 00:23:30,480
but you should check it that is it

491
00:23:30,480 --> 00:23:31,559
actually true

492
00:23:31,559 --> 00:23:33,539
and if you don't check it it doesn't

493
00:23:33,539 --> 00:23:36,320
have to be true

494
00:23:38,700 --> 00:23:42,140
and this is kind of the

495
00:23:42,140 --> 00:23:47,220
time for a little quiz or or a test

496
00:23:47,220 --> 00:23:49,020
so

497
00:23:49,020 --> 00:23:52,320
this is kind of a

498
00:23:52,320 --> 00:23:53,760
h

499
00:23:53,760 --> 00:23:57,419
code form from something so it says

500
00:23:57,419 --> 00:24:00,120
certificate validation

501
00:24:00,120 --> 00:24:02,340
the function is called certificate

502
00:24:02,340 --> 00:24:04,200
validation

503
00:24:04,200 --> 00:24:08,580
and this does something so apparently it

504
00:24:08,580 --> 00:24:09,960
checks

505
00:24:09,960 --> 00:24:13,860
if the certificate is good and if it's

506
00:24:13,860 --> 00:24:16,620
not good it's returns false and if it's

507
00:24:16,620 --> 00:24:19,440
good it returns true so it's kind of

508
00:24:19,440 --> 00:24:21,120
true or false

509
00:24:21,120 --> 00:24:24,080
a question

510
00:24:24,120 --> 00:24:27,120
I'm not sure if you can see it well but

511
00:24:27,120 --> 00:24:31,200
I can highlight these things

512
00:24:31,200 --> 00:24:32,640
so

513
00:24:32,640 --> 00:24:36,120
it does not check who the certificate is

514
00:24:36,120 --> 00:24:37,440
issued to

515
00:24:37,440 --> 00:24:38,820
it checks that hey there is a

516
00:24:38,820 --> 00:24:42,059
certificate but it doesn't check who it

517
00:24:42,059 --> 00:24:44,780
is issued to

518
00:24:47,220 --> 00:24:50,820
it does not check the signature so it

519
00:24:50,820 --> 00:24:53,580
checks that there is a certificate and

520
00:24:53,580 --> 00:24:57,000
there is a text in the certificate

521
00:24:57,000 --> 00:25:01,159
that says that hey this is issued by

522
00:25:01,159 --> 00:25:03,840
this kind of trusted certificate

523
00:25:03,840 --> 00:25:05,100
Authority

524
00:25:05,100 --> 00:25:08,100
so the certificate has to say that it's

525
00:25:08,100 --> 00:25:10,559
coming from this party but this code

526
00:25:10,559 --> 00:25:12,360
does not check if it's actually coming

527
00:25:12,360 --> 00:25:14,580
from there

528
00:25:14,580 --> 00:25:16,620
and then

529
00:25:16,620 --> 00:25:18,960
if these checks fail

530
00:25:18,960 --> 00:25:22,880
like we it should we should resume false

531
00:25:22,880 --> 00:25:27,020
but as you see

532
00:25:27,900 --> 00:25:30,720
it returns always true so there is no

533
00:25:30,720 --> 00:25:33,779
return false anywhere in the function

534
00:25:33,779 --> 00:25:37,140
so certificate validation true

535
00:25:37,140 --> 00:25:38,400
like

536
00:25:38,400 --> 00:25:39,960
this is

537
00:25:39,960 --> 00:25:43,140
kind of and this is a real example it's

538
00:25:43,140 --> 00:25:46,620
not from this kind of very used uh

539
00:25:46,620 --> 00:25:48,539
program or whatever it's this kind of

540
00:25:48,539 --> 00:25:51,720
hobby thing for someone

541
00:25:51,720 --> 00:25:54,779
if we scroll up in the file we can see

542
00:25:54,779 --> 00:25:56,580
exactly where it's from

543
00:25:56,580 --> 00:25:59,640
so it's from this kind of startup called

544
00:25:59,640 --> 00:26:01,380
Microsoft

545
00:26:01,380 --> 00:26:05,159
from this application called InTune so I

546
00:26:05,159 --> 00:26:06,659
don't use Microsoft so I don't really

547
00:26:06,659 --> 00:26:09,539
know what exactly in tune does

548
00:26:09,539 --> 00:26:10,980
but uh

549
00:26:10,980 --> 00:26:13,080
apparently it installs stuff on your

550
00:26:13,080 --> 00:26:15,179
computer with system access

551
00:26:15,179 --> 00:26:16,860
remotely

552
00:26:16,860 --> 00:26:19,459
and

553
00:26:19,919 --> 00:26:22,440
this was a let's go back to the Dark

554
00:26:22,440 --> 00:26:23,760
theme so

555
00:26:23,760 --> 00:26:27,539
in 2021 so Microsoft InTune management

556
00:26:27,539 --> 00:26:29,460
extension remote code execution

557
00:26:29,460 --> 00:26:31,380
vulnerability

558
00:26:31,380 --> 00:26:33,240
just because

559
00:26:33,240 --> 00:26:35,820
all certificates were accepted

560
00:26:35,820 --> 00:26:39,320
so I could post as intern management

561
00:26:39,320 --> 00:26:42,000
server and then just install a bunch of

562
00:26:42,000 --> 00:26:45,059
stuff on our company laptops and that

563
00:26:45,059 --> 00:26:47,418
was fun

564
00:26:51,840 --> 00:26:53,039
but

565
00:26:53,039 --> 00:26:57,120
kind of enough talk so there is this

566
00:26:57,120 --> 00:27:00,620
kind of checklist for us to do so let's

567
00:27:00,620 --> 00:27:03,059
self-assign the certificate let's get a

568
00:27:03,059 --> 00:27:05,580
valid certificate from someone else

569
00:27:05,580 --> 00:27:08,940
and let's craft a certificate with our

570
00:27:08,940 --> 00:27:10,980
public key

571
00:27:10,980 --> 00:27:15,299
and set the issuers as someone trusted

572
00:27:15,299 --> 00:27:19,760
and I'm just not sign it properly

573
00:27:21,840 --> 00:27:24,299
so

574
00:27:24,299 --> 00:27:26,039
Let's uh

575
00:27:26,039 --> 00:27:30,080
try out a a demo

576
00:27:37,810 --> 00:27:40,899
[Music]

577
00:27:56,320 --> 00:27:59,730
[Music]

578
00:28:00,539 --> 00:28:03,559
there's some

579
00:28:03,720 --> 00:28:06,720
and you will see something in just a

580
00:28:06,720 --> 00:28:08,900
minute

581
00:28:11,580 --> 00:28:16,279
and then we need to do this

582
00:28:16,620 --> 00:28:18,779
some demo effects

583
00:28:18,779 --> 00:28:22,580
affecting my my stuff

584
00:28:23,010 --> 00:28:23,700
[Music]

585
00:28:23,700 --> 00:28:25,700
um

586
00:28:29,480 --> 00:28:34,159
yes so let's see

587
00:28:39,539 --> 00:28:43,200
so here you say live terminal

588
00:28:43,200 --> 00:28:45,360
let's oh

589
00:28:45,360 --> 00:28:47,640
be silent for a moment and pray to the

590
00:28:47,640 --> 00:28:52,580
demo gods that everything works out fine

591
00:28:55,980 --> 00:28:57,720
yes

592
00:28:57,720 --> 00:28:59,640
yes so

593
00:28:59,640 --> 00:29:03,260
we have this kind of command

594
00:29:03,260 --> 00:29:07,200
openssl is an excellent tool if you

595
00:29:07,200 --> 00:29:08,760
really hate life

596
00:29:08,760 --> 00:29:10,580
uh

597
00:29:10,580 --> 00:29:14,400
but it's gets the job done nine out of

598
00:29:14,400 --> 00:29:15,900
ten times

599
00:29:15,900 --> 00:29:18,059
so we can

600
00:29:18,059 --> 00:29:21,840
uh get a kind of a Certificate request

601
00:29:21,840 --> 00:29:24,480
from ourselves that hey we want a

602
00:29:24,480 --> 00:29:27,600
certificate for example.com

603
00:29:27,600 --> 00:29:31,380
and we are creating a key and then we

604
00:29:31,380 --> 00:29:32,220
are

605
00:29:32,220 --> 00:29:35,220
kind of signing the certificate

606
00:29:35,220 --> 00:29:37,640
so now we have

607
00:29:37,640 --> 00:29:41,340
server.pam server.key so you can try

608
00:29:41,340 --> 00:29:43,200
this at at home

609
00:29:43,200 --> 00:29:45,539
and you will have your own certificate

610
00:29:45,539 --> 00:29:49,580
in just a few clicks

611
00:29:50,399 --> 00:29:53,399
and with this other command we can check

612
00:29:53,399 --> 00:29:56,039
the certificate so we can print it out

613
00:29:56,039 --> 00:29:59,120
in text format

614
00:29:59,399 --> 00:30:04,020
so this is now the certificate so this

615
00:30:04,020 --> 00:30:07,559
is a text view of this kind of quite

616
00:30:07,559 --> 00:30:09,360
complex

617
00:30:09,360 --> 00:30:12,419
X 509 format

618
00:30:12,419 --> 00:30:15,600
but as I said there is some kind of

619
00:30:15,600 --> 00:30:18,600
bunch of text Data here

620
00:30:18,600 --> 00:30:20,159
so we can see

621
00:30:20,159 --> 00:30:22,620
that there is some kind of a

622
00:30:22,620 --> 00:30:24,059
issuer

623
00:30:24,059 --> 00:30:26,820
issuing our certificate so in this

624
00:30:26,820 --> 00:30:30,000
example we have the example.com

625
00:30:30,000 --> 00:30:33,419
and the subject of this certificate is

626
00:30:33,419 --> 00:30:34,860
example.com

627
00:30:34,860 --> 00:30:37,200
so this is what we call self-signed

628
00:30:37,200 --> 00:30:39,360
certificate

629
00:30:39,360 --> 00:30:42,179
there is also the RSA key

630
00:30:42,179 --> 00:30:44,220
so this uh

631
00:30:44,220 --> 00:30:46,860
public key shown here this is the math

632
00:30:46,860 --> 00:30:49,200
part don't worry about that

633
00:30:49,200 --> 00:30:52,559
there's also some bunch of stuff here

634
00:30:52,559 --> 00:30:56,159
that sometimes breaks some systems but

635
00:30:56,159 --> 00:30:58,500
we don't really care for that and then

636
00:30:58,500 --> 00:31:01,740
there is the signature so it says that

637
00:31:01,740 --> 00:31:04,679
it has been signed with this sha 256

638
00:31:04,679 --> 00:31:07,440
algorithm

639
00:31:07,440 --> 00:31:11,399
so this is basically our certificate

640
00:31:11,399 --> 00:31:14,640
so we set out to create a certificate

641
00:31:14,640 --> 00:31:18,480
and this is basically it

642
00:31:18,480 --> 00:31:21,600
we also had a another mission we wanted

643
00:31:21,600 --> 00:31:22,700
to

644
00:31:22,700 --> 00:31:26,279
get a certificate from somewhere else so

645
00:31:26,279 --> 00:31:29,760
I've done this offline I got a

646
00:31:29,760 --> 00:31:31,919
certificate for

647
00:31:31,919 --> 00:31:35,460
a domain from from let's encrypt

648
00:31:35,460 --> 00:31:37,559
and uh

649
00:31:37,559 --> 00:31:41,580
it so we have the TLs test certificate

650
00:31:41,580 --> 00:31:45,000
and with the same command we can view it

651
00:31:45,000 --> 00:31:46,620
so now

652
00:31:46,620 --> 00:31:50,159
we have the issuer let's encrypt

653
00:31:50,159 --> 00:31:54,120
and it has issued a certificate for

654
00:31:54,120 --> 00:31:55,460
this

655
00:31:55,460 --> 00:31:58,320
common name so we have the TLs

656
00:31:58,320 --> 00:32:01,080
test.di.fi

657
00:32:01,080 --> 00:32:03,960
so you can get free domain names from

658
00:32:03,960 --> 00:32:05,840
the

659
00:32:05,840 --> 00:32:08,600
fee and then you can get a free

660
00:32:08,600 --> 00:32:12,000
certificate from let's encrypt so

661
00:32:12,000 --> 00:32:15,720
everyone can try this at home for free

662
00:32:15,720 --> 00:32:17,039
uh

663
00:32:17,039 --> 00:32:18,899
and then when let's encrypt create

664
00:32:18,899 --> 00:32:21,299
certificates there's a bunch of other

665
00:32:21,299 --> 00:32:23,580
stuff that it wants to put there

666
00:32:23,580 --> 00:32:26,159
so this is has been a headache for

667
00:32:26,159 --> 00:32:29,100
someone to actually figure out

668
00:32:29,100 --> 00:32:31,200
how to parse all this and what to do

669
00:32:31,200 --> 00:32:32,220
with it

670
00:32:32,220 --> 00:32:33,600
uh

671
00:32:33,600 --> 00:32:36,539
and we're not today not so focused on

672
00:32:36,539 --> 00:32:40,260
this but there is kind of 10 more ways

673
00:32:40,260 --> 00:32:42,659
to break TLS certificate validation

674
00:32:42,659 --> 00:32:47,039
hidden somewhere in this and then

675
00:32:47,039 --> 00:32:50,820
but our mission was to get a certificate

676
00:32:50,820 --> 00:32:52,620
kind of valid certificate from someone

677
00:32:52,620 --> 00:32:54,918
else

678
00:32:57,600 --> 00:33:00,320
and then

679
00:33:01,260 --> 00:33:04,080
the hard part was to

680
00:33:04,080 --> 00:33:06,659
kind of get a certificate

681
00:33:06,659 --> 00:33:09,360
and modify it so that we have a good

682
00:33:09,360 --> 00:33:12,000
certificate but it has our key inside of

683
00:33:12,000 --> 00:33:14,179
it

684
00:33:15,059 --> 00:33:17,760
and for that I had this kind of small

685
00:33:17,760 --> 00:33:18,840
program

686
00:33:18,840 --> 00:33:23,100
uses pythons openssl as bad as the

687
00:33:23,100 --> 00:33:25,080
command line version

688
00:33:25,080 --> 00:33:27,240
and uh

689
00:33:27,240 --> 00:33:31,919
it opens the TLs test certificate

690
00:33:31,919 --> 00:33:34,500
loads it into the openssl

691
00:33:34,500 --> 00:33:36,059
and then

692
00:33:36,059 --> 00:33:40,440
we have a key that we have generated

693
00:33:40,440 --> 00:33:43,380
and we just set the public key of the

694
00:33:43,380 --> 00:33:45,480
certificate with the key

695
00:33:45,480 --> 00:33:48,840
and because openssl is a bad software we

696
00:33:48,840 --> 00:33:52,320
also have to sign it we actually don't

697
00:33:52,320 --> 00:33:53,880
have the sign in it but if we use

698
00:33:53,880 --> 00:33:56,940
openssl then we have to sign it for it

699
00:33:56,940 --> 00:33:59,399
to change the data because

700
00:33:59,399 --> 00:34:02,418
it's a bad program

701
00:34:02,519 --> 00:34:05,399
and then we just write it out

702
00:34:05,399 --> 00:34:07,559
to a file

703
00:34:07,559 --> 00:34:11,099
and there we have it so we have a

704
00:34:11,099 --> 00:34:14,159
TLS test certificate and we have

705
00:34:14,159 --> 00:34:18,379
the same certificate with a new key

706
00:34:20,820 --> 00:34:23,280
so we can

707
00:34:23,280 --> 00:34:25,199
check the differences

708
00:34:25,199 --> 00:34:28,260
with Vim of course

709
00:34:28,260 --> 00:34:31,739
handy one liner for this and

710
00:34:31,739 --> 00:34:33,418
what we see

711
00:34:33,418 --> 00:34:36,480
is that we have a certificate

712
00:34:36,480 --> 00:34:39,000
the original on the left the new one on

713
00:34:39,000 --> 00:34:42,359
the right so we have a certificate for

714
00:34:42,359 --> 00:34:45,119
tlsdest.v

715
00:34:45,119 --> 00:34:48,000
that uh

716
00:34:48,000 --> 00:34:50,580
has a different public key but

717
00:34:50,580 --> 00:34:53,879
everything else is the same

718
00:34:53,879 --> 00:34:56,639
so all of this data is same the

719
00:34:56,639 --> 00:34:59,700
signature has changed but because

720
00:34:59,700 --> 00:35:02,400
we are assuming that this is not going

721
00:35:02,400 --> 00:35:04,140
to be validated and even if we don't

722
00:35:04,140 --> 00:35:06,839
change it it will be wrong because the

723
00:35:06,839 --> 00:35:07,980
signature is for the original

724
00:35:07,980 --> 00:35:10,619
certificate

725
00:35:10,619 --> 00:35:15,000
so we now have this and

726
00:35:15,000 --> 00:35:17,579
we have now three certificates that we

727
00:35:17,579 --> 00:35:18,720
can use

728
00:35:18,720 --> 00:35:21,960
and I picked these three because these

729
00:35:21,960 --> 00:35:23,940
three give good results

730
00:35:23,940 --> 00:35:25,380
when you are

731
00:35:25,380 --> 00:35:29,180
doing some security testing

732
00:35:36,060 --> 00:35:37,920
and uh

733
00:35:37,920 --> 00:35:41,640
with these certificates we can start to

734
00:35:41,640 --> 00:35:45,259
kind of do bad stuff

735
00:35:50,640 --> 00:35:55,500
so I have this kind of uh command here

736
00:35:55,500 --> 00:36:00,000
so I have a DHCP and DNS server running

737
00:36:00,000 --> 00:36:02,280
on the upper window

738
00:36:02,280 --> 00:36:05,040
and then I have a console here

739
00:36:05,040 --> 00:36:06,420
so

740
00:36:06,420 --> 00:36:09,720
what this is actually doing is that

741
00:36:09,720 --> 00:36:12,960
whatever connects to us we are giving it

742
00:36:12,960 --> 00:36:18,540
an IP address and we are providing a DNS

743
00:36:18,540 --> 00:36:19,500
server

744
00:36:19,500 --> 00:36:23,220
for it to use for whatever it wants

745
00:36:23,220 --> 00:36:26,760
we have the address parameter so if it's

746
00:36:26,760 --> 00:36:31,980
specifically wants to download iOS apps

747
00:36:31,980 --> 00:36:34,680
we will give it an IP

748
00:36:34,680 --> 00:36:38,040
that is our IP so

749
00:36:38,040 --> 00:36:39,300
basically

750
00:36:39,300 --> 00:36:41,040
we have this

751
00:36:41,040 --> 00:36:44,160
kind of network that anyone can do

752
00:36:44,160 --> 00:36:46,920
anything that they want but if they want

753
00:36:46,920 --> 00:36:50,400
to download iOS apps they will have to

754
00:36:50,400 --> 00:36:54,180
go through the 10.001

755
00:36:56,460 --> 00:36:58,859
and uh

756
00:36:58,859 --> 00:37:02,520
then there is uh this kind of command

757
00:37:02,520 --> 00:37:05,520
so socket is a

758
00:37:05,520 --> 00:37:08,280
command for listening

759
00:37:08,280 --> 00:37:10,680
to kind of connections and making

760
00:37:10,680 --> 00:37:12,660
connections out

761
00:37:12,660 --> 00:37:15,720
and what we are here wanting to do is

762
00:37:15,720 --> 00:37:18,240
that we want someone to connect to us

763
00:37:18,240 --> 00:37:20,460
with TLS

764
00:37:20,460 --> 00:37:24,000
using openssl because yes

765
00:37:24,000 --> 00:37:27,900
and we have the server.pem and the

766
00:37:27,900 --> 00:37:30,180
key.pam that we generated just five

767
00:37:30,180 --> 00:37:32,520
minutes ago

768
00:37:32,520 --> 00:37:35,099
and when someone connects to us

769
00:37:35,099 --> 00:37:37,859
we don't want to verify their like

770
00:37:37,859 --> 00:37:38,940
identity

771
00:37:38,940 --> 00:37:42,480
we trust that they they are someone

772
00:37:42,480 --> 00:37:44,760
that we want to steal

773
00:37:44,760 --> 00:37:46,200
from

774
00:37:46,200 --> 00:37:49,079
and when someone connects to us

775
00:37:49,079 --> 00:37:53,040
we will redirect them to iOS apps Dot

776
00:37:53,040 --> 00:37:55,680
itunes.apple.com

777
00:37:55,680 --> 00:37:59,160
but we will of course log the traffic

778
00:37:59,160 --> 00:38:02,280
because we are terminating the TLs we of

779
00:38:02,280 --> 00:38:04,830
course can speak inside

780
00:38:04,830 --> 00:38:07,500
[Music]

781
00:38:07,500 --> 00:38:10,680
and let's see

782
00:38:10,680 --> 00:38:13,260
so on the right here

783
00:38:13,260 --> 00:38:16,260
I should have an iPhone

784
00:38:16,260 --> 00:38:18,660
let's see

785
00:38:18,660 --> 00:38:21,319
yes

786
00:38:24,800 --> 00:38:27,900
I'm giving a passcode

787
00:38:27,900 --> 00:38:31,920
so here is the Apple App Store

788
00:38:31,920 --> 00:38:34,200
let's see what we want today

789
00:38:34,200 --> 00:38:37,560
so this looks like fun

790
00:38:37,560 --> 00:38:40,339
no

791
00:38:41,040 --> 00:38:42,720
let's see

792
00:38:42,720 --> 00:38:46,220
there is something wrong

793
00:38:47,400 --> 00:38:49,320
let's try again

794
00:38:49,320 --> 00:38:52,020
maybe this one no

795
00:38:52,020 --> 00:38:55,020
no ah

796
00:38:56,220 --> 00:39:00,618
there is a ethernet cable unpluggage

797
00:39:01,640 --> 00:39:05,820
Let's see we plug in the cable

798
00:39:05,820 --> 00:39:07,619
we might see something on the upper

799
00:39:07,619 --> 00:39:09,119
window

800
00:39:09,119 --> 00:39:12,960
or not yes there is Jamie

801
00:39:12,960 --> 00:39:15,660
and Jamie wants to connect to the

802
00:39:15,660 --> 00:39:17,839
internet

803
00:39:18,300 --> 00:39:21,839
so let's go to some app

804
00:39:21,839 --> 00:39:25,160
I don't know how to use apple

805
00:39:25,800 --> 00:39:28,680
let's see there's amps

806
00:39:28,680 --> 00:39:30,839
let's get

807
00:39:30,839 --> 00:39:33,480
Snapchat

808
00:39:33,480 --> 00:39:37,400
so now we are downloading Snapchat

809
00:39:38,280 --> 00:39:40,859
and we are waiting for someone to want

810
00:39:40,859 --> 00:39:43,560
to connect to the iOS apps

811
00:39:43,560 --> 00:39:46,020
so it's thinking for a moment it's going

812
00:39:46,020 --> 00:39:48,599
to different servers

813
00:39:48,599 --> 00:39:52,260
kind of doing Apple things

814
00:39:52,260 --> 00:39:55,339
and uh

815
00:39:57,119 --> 00:40:00,780
let's see oh yeah

816
00:40:00,780 --> 00:40:04,680
Access Control yeah but

817
00:40:04,680 --> 00:40:08,299
what actually happened here

818
00:40:10,260 --> 00:40:13,020
is that

819
00:40:13,020 --> 00:40:16,440
we got a connection from someone

820
00:40:16,440 --> 00:40:20,540
who wants to download iOS apps

821
00:40:21,599 --> 00:40:23,880
and they

822
00:40:23,880 --> 00:40:25,560
really want

823
00:40:25,560 --> 00:40:27,780
to connect them

824
00:40:27,780 --> 00:40:29,579
but some yeah something happened with

825
00:40:29,579 --> 00:40:32,400
the man in the middle so but we

826
00:40:32,400 --> 00:40:34,859
shouldn't be able to see this

827
00:40:34,859 --> 00:40:36,240
so

828
00:40:36,240 --> 00:40:39,119
we intercepted a connection from an

829
00:40:39,119 --> 00:40:41,880
iPhone with a certificate we just

830
00:40:41,880 --> 00:40:43,800
created

831
00:40:43,800 --> 00:40:45,720
this was the

832
00:40:45,720 --> 00:40:48,720
opponed

833
00:40:49,130 --> 00:40:55,320
[Applause]

834
00:40:55,320 --> 00:40:57,060
and

835
00:40:57,060 --> 00:40:59,400
if anyone wants to connect to my Wi-Fi

836
00:40:59,400 --> 00:41:02,220
after the talk free feel free to

837
00:41:02,220 --> 00:41:06,900
and you shouldn't be running iOS 12.5

838
00:41:06,900 --> 00:41:10,020
uh nevertheless

839
00:41:10,020 --> 00:41:13,200
but it's the latest latest version you

840
00:41:13,200 --> 00:41:15,480
can get for iPhone 6. so if you are

841
00:41:15,480 --> 00:41:17,700
running iPhone 6 then don't download

842
00:41:17,700 --> 00:41:19,200
apps on

843
00:41:19,200 --> 00:41:22,440
connections you don't trust

844
00:41:22,440 --> 00:41:24,839
and yeah there is actually some someone

845
00:41:24,839 --> 00:41:26,400
downloading

846
00:41:26,400 --> 00:41:28,800
an IOS app I think it's most probably

847
00:41:28,800 --> 00:41:30,359
this

848
00:41:30,359 --> 00:41:33,119
uh this one yeah there is a download now

849
00:41:33,119 --> 00:41:34,980
going on

850
00:41:34,980 --> 00:41:36,540
but uh

851
00:41:36,540 --> 00:41:39,240
let's cancel that

852
00:41:39,240 --> 00:41:40,800
because I'm actually logging the whole

853
00:41:40,800 --> 00:41:42,240
download so

854
00:41:42,240 --> 00:41:46,520
there will be gigabytes of downloads

855
00:41:46,980 --> 00:41:50,780
let's kill this

856
00:41:51,420 --> 00:41:55,560
I think I'm gonna number eight yeah so

857
00:41:55,560 --> 00:41:58,140
we had the log

858
00:41:58,140 --> 00:41:59,940
that we wrote

859
00:41:59,940 --> 00:42:03,180
so let's see what we call so I run this

860
00:42:03,180 --> 00:42:05,579
already at home a little bit

861
00:42:05,579 --> 00:42:08,220
so if we check our logs there are

862
00:42:08,220 --> 00:42:09,720
different kind of things that that we

863
00:42:09,720 --> 00:42:11,220
have download

864
00:42:11,220 --> 00:42:13,800
uh it specifies

865
00:42:13,800 --> 00:42:16,980
like how we downloaded it and it gives

866
00:42:16,980 --> 00:42:20,099
us who downloaded it so

867
00:42:20,099 --> 00:42:24,480
not only iOS 12.5 but also 14.3 is

868
00:42:24,480 --> 00:42:28,339
vulnerable to this exploit

869
00:42:43,260 --> 00:42:45,859
oh

870
00:42:46,140 --> 00:42:48,359
yeah

871
00:42:48,359 --> 00:42:52,980
and of course when I discovered this I

872
00:42:52,980 --> 00:42:54,540
downloaded

873
00:42:54,540 --> 00:42:58,319
an app and tried to push the app to the

874
00:42:58,319 --> 00:43:00,720
device but

875
00:43:00,720 --> 00:43:03,540
if something is kind of

876
00:43:03,540 --> 00:43:05,880
Apple does things

877
00:43:05,880 --> 00:43:09,119
kind of securely by default so

878
00:43:09,119 --> 00:43:12,240
apple is not trusting that when they are

879
00:43:12,240 --> 00:43:14,040
downloading the apps they are not

880
00:43:14,040 --> 00:43:15,619
trusting that these apps are actually

881
00:43:15,619 --> 00:43:19,800
kind of delivered securely so I can see

882
00:43:19,800 --> 00:43:22,800
this data but if I do something if I

883
00:43:22,800 --> 00:43:26,280
like try to kind of push a different app

884
00:43:26,280 --> 00:43:28,200
that it doesn't want it will just

885
00:43:28,200 --> 00:43:30,180
terminate the connection it will it's

886
00:43:30,180 --> 00:43:33,980
checking all kinds of

887
00:43:34,040 --> 00:43:36,420
signatures on the kind of apps

888
00:43:36,420 --> 00:43:39,420
themselves and and I I couldn't get any

889
00:43:39,420 --> 00:43:42,599
further than this but still you can

890
00:43:42,599 --> 00:43:45,119
if you're running this exploit on in

891
00:43:45,119 --> 00:43:48,300
your country or in your workplace you

892
00:43:48,300 --> 00:43:50,520
might want to see that if someone is

893
00:43:50,520 --> 00:43:55,020
using the work time to buy some kind of

894
00:43:55,020 --> 00:43:58,200
glove apps or or whatever or then if

895
00:43:58,200 --> 00:44:00,480
someone is Maybe

896
00:44:00,480 --> 00:44:03,000
uh kind of downloading some kind of

897
00:44:03,000 --> 00:44:07,140
illegal apps in in a specific place

898
00:44:07,140 --> 00:44:10,500
so this was promptly fixed by Apple and

899
00:44:10,500 --> 00:44:12,359
now when you are downloading

900
00:44:12,359 --> 00:44:15,839
apps from from Apple they they should

901
00:44:15,839 --> 00:44:19,740
be encrypted with CLS properly

902
00:44:19,740 --> 00:44:22,619
but uh

903
00:44:22,619 --> 00:44:25,619
I'm not sure if there's kind of a

904
00:44:25,619 --> 00:44:27,300
tells you a little bit about the

905
00:44:27,300 --> 00:44:31,200
companies but when I hacked the InTune

906
00:44:31,200 --> 00:44:32,660
[Music]

907
00:44:32,660 --> 00:44:36,060
Microsoft InTune certificate validation

908
00:44:36,060 --> 00:44:38,940
I could just put whatever I wanted into

909
00:44:38,940 --> 00:44:41,280
the windows so

910
00:44:41,280 --> 00:44:42,980
when you are

911
00:44:42,980 --> 00:44:47,160
creating applications or whatever you

912
00:44:47,160 --> 00:44:49,680
might not really want to trust the TLs

913
00:44:49,680 --> 00:44:50,700
connection

914
00:44:50,700 --> 00:44:53,220
so if you are doing something like

915
00:44:53,220 --> 00:44:55,980
really important like installing things

916
00:44:55,980 --> 00:44:58,380
on the computer or changing its

917
00:44:58,380 --> 00:45:01,020
configuration or or settings or whatever

918
00:45:01,020 --> 00:45:03,599
you might want to kind of put another

919
00:45:03,599 --> 00:45:07,200
layer of encryption on top of that

920
00:45:07,200 --> 00:45:09,660
so even if someone can get is a TLS

921
00:45:09,660 --> 00:45:12,780
tunnel they can change those or if they

922
00:45:12,780 --> 00:45:15,420
get into the server they can't kind of

923
00:45:15,420 --> 00:45:17,460
tamper with the data before it's it's

924
00:45:17,460 --> 00:45:20,359
sent to the user

925
00:45:21,900 --> 00:45:24,720
I think I I have another demo

926
00:45:24,720 --> 00:45:27,560
let's see

927
00:45:29,040 --> 00:45:31,500
are we on number nine

928
00:45:31,500 --> 00:45:34,740
yes so this is called star DHCP server

929
00:45:34,740 --> 00:45:37,079
windows

930
00:45:37,079 --> 00:45:39,480
so

931
00:45:39,480 --> 00:45:44,180
we are using this DHCP server again

932
00:45:44,339 --> 00:45:48,900
now we want to capture this TLS test dot

933
00:45:48,900 --> 00:45:50,099
dot V

934
00:45:50,099 --> 00:45:53,300
and we also want to capture

935
00:45:53,300 --> 00:45:55,319
clientsconfig.passport.net and redirect

936
00:45:55,319 --> 00:45:59,119
them to our IP

937
00:46:00,119 --> 00:46:03,000
and we are intercepting the connection

938
00:46:03,000 --> 00:46:07,859
now with our let's encrypt certificate

939
00:46:07,859 --> 00:46:10,020
so we have a certificate for

940
00:46:10,020 --> 00:46:12,359
tlsdest.do.fit

941
00:46:12,359 --> 00:46:15,319
and if something comes to that we are

942
00:46:15,319 --> 00:46:18,240
getting the connections and if something

943
00:46:18,240 --> 00:46:21,839
comes to client config passport.net we

944
00:46:21,839 --> 00:46:25,380
are also using the uh let's find a black

945
00:46:25,380 --> 00:46:28,440
to Apple we're also using the

946
00:46:28,440 --> 00:46:32,760
same TLS test.d.v certificate for also

947
00:46:32,760 --> 00:46:34,619
that

948
00:46:34,619 --> 00:46:36,540
and if we

949
00:46:36,540 --> 00:46:38,760
start up this uh

950
00:46:38,760 --> 00:46:40,980
kind of minor operating system called

951
00:46:40,980 --> 00:46:43,020
windows 11.

952
00:46:43,020 --> 00:46:47,119
we'll can see what happens

953
00:46:51,720 --> 00:46:54,119
so

954
00:46:54,119 --> 00:46:55,980
there are some things from the iPhone

955
00:46:55,980 --> 00:46:59,220
let's wait for the windows to

956
00:46:59,220 --> 00:47:01,980
make a connection to our Network so here

957
00:47:01,980 --> 00:47:04,680
we have they have the desktop and it's

958
00:47:04,680 --> 00:47:06,960
getting an IP from us and

959
00:47:06,960 --> 00:47:11,119
it's starting to connect to the world

960
00:47:11,460 --> 00:47:14,480
so let's see

961
00:47:15,660 --> 00:47:18,119
yes it's always

962
00:47:18,119 --> 00:47:20,400
sometimes you might want to update

963
00:47:20,400 --> 00:47:22,200
especially after

964
00:47:22,200 --> 00:47:25,160
this one

965
00:47:25,980 --> 00:47:29,480
so let's see

966
00:47:34,319 --> 00:47:36,119
it's taking its time

967
00:47:36,119 --> 00:47:38,640
so now we're starting to see so it's

968
00:47:38,640 --> 00:47:41,819
checking the time it's checking some

969
00:47:41,819 --> 00:47:45,119
kind of traffic information

970
00:47:45,119 --> 00:47:46,440
and then

971
00:47:46,440 --> 00:47:50,960
it's asking for something let's see

972
00:47:54,119 --> 00:47:58,280
so Windows doing Windows stuff

973
00:48:09,060 --> 00:48:11,460
yes so now it's connecting with a bunch

974
00:48:11,460 --> 00:48:14,000
of stuff

975
00:48:15,660 --> 00:48:18,839
and we have client config so it wants to

976
00:48:18,839 --> 00:48:21,240
connect to that and uh

977
00:48:21,240 --> 00:48:23,520
yes that's not supposed to happen

978
00:48:23,520 --> 00:48:28,760
so it wants to connect to this uh

979
00:48:28,760 --> 00:48:31,560
something is not correct so it should

980
00:48:31,560 --> 00:48:33,900
have connected here

981
00:48:33,900 --> 00:48:36,060
I think there's something wrong with

982
00:48:36,060 --> 00:48:37,440
this

983
00:48:37,440 --> 00:48:39,300
but

984
00:48:39,300 --> 00:48:43,319
what it's uh supposed to do is that when

985
00:48:43,319 --> 00:48:46,380
it connects the client config

986
00:48:46,380 --> 00:48:48,900
it should

987
00:48:48,900 --> 00:48:51,180
oh

988
00:48:51,180 --> 00:48:53,760
it should try to download something from

989
00:48:53,760 --> 00:48:54,480
us

990
00:48:54,480 --> 00:48:57,599
so we have the book

991
00:48:57,599 --> 00:49:00,500
so

992
00:49:02,940 --> 00:49:07,380
so it we have this kind of file this uh

993
00:49:07,380 --> 00:49:09,599
configuration file

994
00:49:09,599 --> 00:49:11,220
and uh

995
00:49:11,220 --> 00:49:14,099
this is behind the uh

996
00:49:14,099 --> 00:49:15,260
client

997
00:49:15,260 --> 00:49:16,800
config.passport.net

998
00:49:16,800 --> 00:49:20,400
so there is a file that uh

999
00:49:20,400 --> 00:49:24,859
has bunch of information so it has

1000
00:49:24,900 --> 00:49:27,619
a kind of uh miscellaneous information

1001
00:49:27,619 --> 00:49:30,319
such as

1002
00:49:30,319 --> 00:49:33,839
what domain is used when we are

1003
00:49:33,839 --> 00:49:35,520
resetting our password

1004
00:49:35,520 --> 00:49:37,920
what domain is used when we are

1005
00:49:37,920 --> 00:49:42,000
using our accounts and what domain is

1006
00:49:42,000 --> 00:49:43,380
used for

1007
00:49:43,380 --> 00:49:45,000
uh

1008
00:49:45,000 --> 00:49:48,599
like be pretty much everything so this

1009
00:49:48,599 --> 00:49:51,020
is a

1010
00:49:51,260 --> 00:49:55,140
Windows checking like where everything

1011
00:49:55,140 --> 00:49:56,280
is

1012
00:49:56,280 --> 00:49:59,000
and

1013
00:49:59,099 --> 00:50:02,280
you could use a certificate for whatever

1014
00:50:02,280 --> 00:50:04,740
from let's encrypt

1015
00:50:04,740 --> 00:50:08,220
to pretend to be this server giving this

1016
00:50:08,220 --> 00:50:10,640
file

1017
00:50:12,480 --> 00:50:14,040
and

1018
00:50:14,040 --> 00:50:17,720
if we modify it a bit I just put

1019
00:50:17,720 --> 00:50:20,819
tlsds.due.v into everything

1020
00:50:20,819 --> 00:50:22,260
so

1021
00:50:22,260 --> 00:50:25,680
when Windows wants to do anything it

1022
00:50:25,680 --> 00:50:28,640
will connect to this one

1023
00:50:28,980 --> 00:50:31,700
so

1024
00:50:32,880 --> 00:50:35,940
yeah pretty much everything

1025
00:50:35,940 --> 00:50:38,540
so

1026
00:50:38,700 --> 00:50:41,220
and what we will see because we own this

1027
00:50:41,220 --> 00:50:44,940
domain we have a certificate for it

1028
00:50:44,940 --> 00:50:47,760
everything else that Windows does it

1029
00:50:47,760 --> 00:50:49,619
doesn't matter if it validates the

1030
00:50:49,619 --> 00:50:51,660
certificate correctly because we own the

1031
00:50:51,660 --> 00:50:54,480
domain so if we can change these files

1032
00:50:54,480 --> 00:50:57,240
then we can change the domain

1033
00:50:57,240 --> 00:51:01,559
and this was a problem in Windows 10 11

1034
00:51:01,559 --> 00:51:07,020
server every windows out there so when

1035
00:51:07,020 --> 00:51:08,579
you boot it up and connect it to

1036
00:51:08,579 --> 00:51:10,859
internet it will fetch this file in

1037
00:51:10,859 --> 00:51:12,180
securely

1038
00:51:12,180 --> 00:51:13,740
and uh

1039
00:51:13,740 --> 00:51:17,419
let's see if we have a

1040
00:51:20,579 --> 00:51:24,720
this one yeah so for example when it

1041
00:51:24,720 --> 00:51:28,740
logs in it will connect to TLS test.vn

1042
00:51:28,740 --> 00:51:31,559
send the username and the secret

1043
00:51:31,559 --> 00:51:33,059
password

1044
00:51:33,059 --> 00:51:34,559
so

1045
00:51:34,559 --> 00:51:37,200
you can still even though it didn't

1046
00:51:37,200 --> 00:51:39,420
really work you can still

1047
00:51:39,420 --> 00:51:42,250
clap if you want

1048
00:51:42,250 --> 00:51:48,359
[Applause]

1049
00:51:48,359 --> 00:51:51,480
so there are these kind of problems

1050
00:51:51,480 --> 00:51:54,180
in these minor developers such as apple

1051
00:51:54,180 --> 00:51:55,859
and Microsoft

1052
00:51:55,859 --> 00:51:57,540
in this basic thing

1053
00:51:57,540 --> 00:52:00,540
TLS certificate validation that is the

1054
00:52:00,540 --> 00:52:02,400
kind of core

1055
00:52:02,400 --> 00:52:03,960
of TLS

1056
00:52:03,960 --> 00:52:07,020
so it's half of TLS

1057
00:52:07,020 --> 00:52:09,240
and

1058
00:52:09,240 --> 00:52:12,599
in the abstract it said that this is the

1059
00:52:12,599 --> 00:52:15,200
kind of

1060
00:52:15,240 --> 00:52:18,059
most dangerous code in the world and

1061
00:52:18,059 --> 00:52:19,200
there's actually a scientific

1062
00:52:19,200 --> 00:52:22,440
publication titled

1063
00:52:22,440 --> 00:52:25,319
the most dangerous code in the world and

1064
00:52:25,319 --> 00:52:29,220
that came out in 2011. and it said that

1065
00:52:29,220 --> 00:52:32,940
hey when you are using kind of TLS from

1066
00:52:32,940 --> 00:52:36,180
non-browser applications you really need

1067
00:52:36,180 --> 00:52:37,619
to focus on this

1068
00:52:37,619 --> 00:52:39,240
so this was

1069
00:52:39,240 --> 00:52:41,760
12 years ago

1070
00:52:41,760 --> 00:52:44,460
when this kind of was known that how big

1071
00:52:44,460 --> 00:52:47,480
of a problem this was

1072
00:52:48,240 --> 00:52:50,579
but still this was

1073
00:52:50,579 --> 00:52:52,260
I don't know

1074
00:52:52,260 --> 00:52:53,940
start of last year

1075
00:52:53,940 --> 00:52:56,700
that there was this problem in Windows

1076
00:52:56,700 --> 00:53:00,359
the kind of most used operating system

1077
00:53:00,359 --> 00:53:03,180
at least in the business area or or

1078
00:53:03,180 --> 00:53:04,800
whatever

1079
00:53:04,800 --> 00:53:06,960
and these iPhones that there is kind of

1080
00:53:06,960 --> 00:53:09,720
billion pieces floating around in

1081
00:53:09,720 --> 00:53:12,379
someone's pocket

1082
00:53:16,440 --> 00:53:20,780
so let's see if we can get back

1083
00:53:21,420 --> 00:53:25,819
we uh let's use this one too

1084
00:53:28,680 --> 00:53:30,540
you are about

1085
00:53:30,540 --> 00:53:33,599
here we went through this and we have a

1086
00:53:33,599 --> 00:53:35,520
demo yes

1087
00:53:35,520 --> 00:53:38,520
sorry about that

1088
00:53:38,520 --> 00:53:39,420
um

1089
00:53:39,420 --> 00:53:42,900
but that was the demo and uh

1090
00:53:42,900 --> 00:53:46,380
if you want to kind of know more these

1091
00:53:46,380 --> 00:53:49,740
are not the only three cves I I have for

1092
00:53:49,740 --> 00:53:50,760
this problem

1093
00:53:50,760 --> 00:53:53,640
so there are lots of

1094
00:53:53,640 --> 00:53:57,240
lots more and I think some that are

1095
00:53:57,240 --> 00:53:59,339
coming out quite soon

1096
00:53:59,339 --> 00:54:02,579
it just requires for the vendors to

1097
00:54:02,579 --> 00:54:04,800
actually fix them before I can talk

1098
00:54:04,800 --> 00:54:06,960
about those but also there are some

1099
00:54:06,960 --> 00:54:09,420
public things that that I I'm missing

1100
00:54:09,420 --> 00:54:11,460
from this presentation

1101
00:54:11,460 --> 00:54:13,319
but uh

1102
00:54:13,319 --> 00:54:16,920
I think what I wanted from this

1103
00:54:16,920 --> 00:54:19,319
is to say that hey it's pretty simple

1104
00:54:19,319 --> 00:54:20,280
stuff

1105
00:54:20,280 --> 00:54:22,800
it's pretty important stuff and it's

1106
00:54:22,800 --> 00:54:24,540
broken everywhere

1107
00:54:24,540 --> 00:54:27,540
and if you are

1108
00:54:27,540 --> 00:54:30,720
working with TLS I hope most of you are

1109
00:54:30,720 --> 00:54:32,880
working some

1110
00:54:32,880 --> 00:54:37,920
parts of your job is is requiring TLS

1111
00:54:37,920 --> 00:54:39,480
so

1112
00:54:39,480 --> 00:54:42,240
I think I will publish the slides and

1113
00:54:42,240 --> 00:54:45,780
then this kind of uh command pack so you

1114
00:54:45,780 --> 00:54:48,119
can try this out yourself

1115
00:54:48,119 --> 00:54:51,119
against kind of uh whatever you are

1116
00:54:51,119 --> 00:54:53,359
building

1117
00:54:54,000 --> 00:54:55,619
and uh

1118
00:54:55,619 --> 00:54:58,740
I think a good resource

1119
00:54:58,740 --> 00:55:01,819
is this kind of

1120
00:55:04,920 --> 00:55:07,980
website called bad SSL

1121
00:55:07,980 --> 00:55:11,520
so if you are creating products and you

1122
00:55:11,520 --> 00:55:14,339
have kind of unit tests for stuff you

1123
00:55:14,339 --> 00:55:17,940
might want uh to add kind of connection

1124
00:55:17,940 --> 00:55:22,800
to this kind of wrong host uh Dot

1125
00:55:22,800 --> 00:55:25,079
badssl.com

1126
00:55:25,079 --> 00:55:28,680
and this is a valid certificate with

1127
00:55:28,680 --> 00:55:32,359
let's see what is the problem

1128
00:55:32,940 --> 00:55:37,079
it's valid for another website so this

1129
00:55:37,079 --> 00:55:38,460
is uh

1130
00:55:38,460 --> 00:55:42,480
kind of good resource to get kind of

1131
00:55:42,480 --> 00:55:46,440
good bad certificates so you can run

1132
00:55:46,440 --> 00:55:49,380
your unit tests against this

1133
00:55:49,380 --> 00:55:53,900
or create some stuff internally

1134
00:55:57,480 --> 00:55:59,480
um

1135
00:56:00,980 --> 00:56:04,319
but that was pretty much it

1136
00:56:04,319 --> 00:56:08,040
I hope you are scared maybe a little bit

1137
00:56:08,040 --> 00:56:09,059
uh

1138
00:56:09,059 --> 00:56:11,700
kind of anxious to get home and

1139
00:56:11,700 --> 00:56:13,079
uh

1140
00:56:13,079 --> 00:56:14,280
kind of

1141
00:56:14,280 --> 00:56:16,020
puts everything into flight mode or

1142
00:56:16,020 --> 00:56:18,380
whatever

1143
00:56:18,500 --> 00:56:22,140
but if you want to talk with me you can

1144
00:56:22,140 --> 00:56:23,579
find me

1145
00:56:23,579 --> 00:56:25,440
at the after party

1146
00:56:25,440 --> 00:56:28,940
at nixu at LinkedIn

1147
00:56:28,940 --> 00:56:31,579
challenge.fi I think that might be down

1148
00:56:31,579 --> 00:56:35,160
currently I I am the

1149
00:56:35,160 --> 00:56:38,700
kind of webmaster of that so let's see

1150
00:56:38,700 --> 00:56:41,700
if I can fix it and in back Bounty

1151
00:56:41,700 --> 00:56:43,559
circles I I

1152
00:56:43,559 --> 00:56:47,700
go around with this handle Arbor

1153
00:56:47,700 --> 00:56:50,460
and if you have any questions I think

1154
00:56:50,460 --> 00:56:53,819
this is the kind of correct moment there

1155
00:56:53,819 --> 00:56:56,040
is a microphone there so just

1156
00:56:56,040 --> 00:56:59,720
raise your hand if you are

1157
00:57:00,960 --> 00:57:03,180
curious about anything the hair is in

1158
00:57:03,180 --> 00:57:05,480
the front

1159
00:57:09,020 --> 00:57:13,819
why would you be so evil as to put

1160
00:57:13,819 --> 00:57:17,819
why would you be so evil as to put less

1161
00:57:17,819 --> 00:57:23,339
encrypt and GoDaddy in the same sentence

1162
00:57:23,339 --> 00:57:24,660
well

1163
00:57:24,660 --> 00:57:28,260
so I think the question was to that I

1164
00:57:28,260 --> 00:57:29,700
had

1165
00:57:29,700 --> 00:57:32,520
yeah so I had GoDaddy and let's encrypt

1166
00:57:32,520 --> 00:57:37,319
in the same sentence so that's yeah so I

1167
00:57:37,319 --> 00:57:38,579
think

1168
00:57:38,579 --> 00:57:40,859
I have used GoDaddy as an example

1169
00:57:40,859 --> 00:57:42,540
because it's

1170
00:57:42,540 --> 00:57:43,800
uh

1171
00:57:43,800 --> 00:57:47,099
it's it's everywhere so I I had an

1172
00:57:47,099 --> 00:57:49,260
example at some presentation and I

1173
00:57:49,260 --> 00:57:50,520
checked that

1174
00:57:50,520 --> 00:57:53,880
website for for some cyber security

1175
00:57:53,880 --> 00:57:56,040
company and they had a certificate from

1176
00:57:56,040 --> 00:57:59,819
GoDaddy but that's basically it but

1177
00:57:59,819 --> 00:58:02,220
there are I want to point out that there

1178
00:58:02,220 --> 00:58:03,480
are good

1179
00:58:03,480 --> 00:58:06,059
and not so good places to get

1180
00:58:06,059 --> 00:58:07,859
certificates from but there are

1181
00:58:07,859 --> 00:58:09,300
thousands of places where you could get

1182
00:58:09,300 --> 00:58:11,599
them from

1183
00:58:15,900 --> 00:58:19,260
yeah so you can get certificates

1184
00:58:19,260 --> 00:58:22,020
from from lots of different places and

1185
00:58:22,020 --> 00:58:22,800
then

1186
00:58:22,800 --> 00:58:25,640
those are

1187
00:58:26,579 --> 00:58:28,440
yeah

1188
00:58:28,440 --> 00:58:30,359
yeah

1189
00:58:30,359 --> 00:58:33,619
anything else

1190
00:58:36,380 --> 00:58:39,920
all right see

1191
00:58:44,280 --> 00:58:47,460
you talked about the fact that TLS

1192
00:58:47,460 --> 00:58:50,640
specification does not specify what the

1193
00:58:50,640 --> 00:58:52,579
key in the certificate can be used for

1194
00:58:52,579 --> 00:58:58,280
but wouldn't the key extension

1195
00:58:58,280 --> 00:59:01,140
usage key extension that is specified in

1196
00:59:01,140 --> 00:59:04,980
the TLs specification cover that already

1197
00:59:04,980 --> 00:59:08,099
yes so the question is that I said that

1198
00:59:08,099 --> 00:59:11,099
you can kind of put pretty much anything

1199
00:59:11,099 --> 00:59:13,140
into the certificate

1200
00:59:13,140 --> 00:59:15,900
and you can use the key for pretty much

1201
00:59:15,900 --> 00:59:19,260
anything and yes you are correct that

1202
00:59:19,260 --> 00:59:21,059
there is this kind of

1203
00:59:21,059 --> 00:59:23,220
field in the certificate that states

1204
00:59:23,220 --> 00:59:26,280
that this key or this the key of this

1205
00:59:26,280 --> 00:59:28,200
certificate can only be used for

1206
00:59:28,200 --> 00:59:30,200
validating

1207
00:59:30,200 --> 00:59:32,640
servers in the

1208
00:59:32,640 --> 00:59:36,299
internet and that is

1209
00:59:36,299 --> 00:59:38,579
that is kind of in the specification of

1210
00:59:38,579 --> 00:59:41,160
TLs but it's not in the specification of

1211
00:59:41,160 --> 00:59:43,500
the certificate so it's just data that

1212
00:59:43,500 --> 00:59:47,520
says that hey this this kind of key

1213
00:59:47,520 --> 00:59:50,099
should be used like this but it's not

1214
00:59:50,099 --> 00:59:53,520
mandatory and in some implementations of

1215
00:59:53,520 --> 00:59:56,819
TLS it's missing so this is kind of uh

1216
00:59:56,819 --> 01:00:00,059
or it has been missing at some point in

1217
01:00:00,059 --> 01:00:01,920
the time

1218
01:00:01,920 --> 01:00:04,680
so I think there was a problem in early

1219
01:00:04,680 --> 01:00:07,559
2000s that you could use your

1220
01:00:07,559 --> 01:00:10,559
certificate to sign any certificate so

1221
01:00:10,559 --> 01:00:13,520
if you get a certificate for apple.com

1222
01:00:13,520 --> 01:00:15,599
you can sign a certificate for

1223
01:00:15,599 --> 01:00:18,540
google.com it wasn't checked that

1224
01:00:18,540 --> 01:00:20,819
they're like

1225
01:00:20,819 --> 01:00:22,920
this restriction was there but it wasn't

1226
01:00:22,920 --> 01:00:25,619
checked so when I say that there's like

1227
01:00:25,619 --> 01:00:28,559
it's not mandatory then I just mean that

1228
01:00:28,559 --> 01:00:32,579
like not everyone checks it so of course

1229
01:00:32,579 --> 01:00:35,940
you could do this correctly

1230
01:00:35,940 --> 01:00:37,619
small follow

1231
01:00:37,619 --> 01:00:40,099
-up I think at least the x509

1232
01:00:40,099 --> 01:00:42,960
specification does specify the key usage

1233
01:00:42,960 --> 01:00:44,520
extension I don't know about the other

1234
01:00:44,520 --> 01:00:47,940
certificate specifications yeah so it

1235
01:00:47,940 --> 01:00:51,059
specifies is as an extension it's not in

1236
01:00:51,059 --> 01:00:54,000
the kind of original and the extensions

1237
01:00:54,000 --> 01:00:57,359
are not mandatory so you don't have to

1238
01:00:57,359 --> 01:01:00,119
kind of use the extensions so

1239
01:01:00,119 --> 01:01:02,160
it might be there but it's not kind of

1240
01:01:02,160 --> 01:01:05,280
mandatory field or it it

1241
01:01:05,280 --> 01:01:09,920
it doesn't have to be checked

1242
01:01:19,559 --> 01:01:21,359
but yeah

1243
01:01:21,359 --> 01:01:23,819
but I think

1244
01:01:23,819 --> 01:01:26,520
if you have any more questions I'm

1245
01:01:26,520 --> 01:01:29,579
available after this talk we can talk a

1246
01:01:29,579 --> 01:01:32,280
little bit I think I will be somewhere

1247
01:01:32,280 --> 01:01:34,859
over here in just a minute

1248
01:01:34,859 --> 01:01:40,400
so come find me here or or after

