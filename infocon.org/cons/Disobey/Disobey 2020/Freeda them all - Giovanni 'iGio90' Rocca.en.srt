1
00:00:04,790 --> 00:00:24,200
[Music]

2
00:00:31,470 --> 00:00:35,899
[Music]

3
00:00:39,270 --> 00:00:48,760
your shorts everyone hi

4
00:00:42,760 --> 00:00:51,370
hello I am Giovanni and thanks everyone

5
00:00:48,760 --> 00:00:52,989
for being here

6
00:00:51,370 --> 00:00:58,780
wow it's always hurt breaking a lot of

7
00:00:52,989 --> 00:01:02,169
people I want to start this talk by

8
00:00:58,780 --> 00:01:05,159
giving my huge thanks to the organism

9
00:01:02,170 --> 00:01:09,689
organization which is giving me another

10
00:01:05,159 --> 00:01:16,270
chance to present my researches and my

11
00:01:09,689 --> 00:01:17,580
tools so let's start what is this all

12
00:01:16,270 --> 00:01:19,960
about

13
00:01:17,580 --> 00:01:23,350
I'm going to introduce myself and what I

14
00:01:19,960 --> 00:01:25,149
do for a couple of minutes I would rake

15
00:01:23,350 --> 00:01:29,199
up about I will give a bit of

16
00:01:25,150 --> 00:01:32,740
information about what is Frieda some

17
00:01:29,200 --> 00:01:39,280
facts of the 2020 and I will go straight

18
00:01:32,740 --> 00:01:42,449
to demo my tool with some use different

19
00:01:39,280 --> 00:01:48,130
usage case and later we will serve some

20
00:01:42,450 --> 00:01:50,020
minutes for the questions so my name is

21
00:01:48,130 --> 00:01:53,619
Giovanni I am an Android developer

22
00:01:50,020 --> 00:01:55,840
self-growth I'm actually employed as a

23
00:01:53,619 --> 00:01:59,200
full-stack developer for the overalls

24
00:01:55,840 --> 00:02:04,359
I'm a security auditor with some focus

25
00:01:59,200 --> 00:02:07,090
on the user space and Arman 64 I am an

26
00:02:04,359 --> 00:02:10,660
active open source contributor and the

27
00:02:07,090 --> 00:02:18,190
founder of an awesome view of beautiful

28
00:02:10,660 --> 00:02:23,170
minds so I started my talk two years ago

29
00:02:18,190 --> 00:02:25,870
by asking if anyone in the room knows

30
00:02:23,170 --> 00:02:28,299
about Frida and back in the days just

31
00:02:25,870 --> 00:02:31,900
two or three guys reason of the hands

32
00:02:28,300 --> 00:02:33,910
and I'm Abby I'm sure that nowadays more

33
00:02:31,900 --> 00:02:38,010
people knows about 3d and what it what

34
00:02:33,910 --> 00:02:40,450
is it and what it does I will give a

35
00:02:38,010 --> 00:02:42,730
little explanation about what is it for

36
00:02:40,450 --> 00:02:45,518
who is not knowing it

37
00:02:42,730 --> 00:02:48,040
freida is likely a framework which

38
00:02:45,519 --> 00:02:49,959
injects the JavaScript the JavaScript

39
00:02:48,040 --> 00:02:55,629
engine into the into the target process

40
00:02:49,959 --> 00:02:58,780
and it expose some Ike level API to play

41
00:02:55,629 --> 00:03:03,340
with the memory context of the of the

42
00:02:58,780 --> 00:03:05,290
processes so it's just like many other

43
00:03:03,340 --> 00:03:08,819
tools and framework which allows you to

44
00:03:05,290 --> 00:03:13,870
debug and instrument the process but

45
00:03:08,819 --> 00:03:16,060
it's it's awesome because of the design

46
00:03:13,870 --> 00:03:17,680
and it has been built so it allows

47
00:03:16,060 --> 00:03:20,590
developer from all around the world to

48
00:03:17,680 --> 00:03:24,280
extend it and to build a lot of tools on

49
00:03:20,590 --> 00:03:27,579
top of it and so we are going I'm going

50
00:03:24,280 --> 00:03:32,560
to show one of those tools that I built

51
00:03:27,579 --> 00:03:35,560
during the past year so those are some

52
00:03:32,560 --> 00:03:39,760
facts of the 2020 I'm not going to read

53
00:03:35,560 --> 00:03:41,769
them all but just the one that I think

54
00:03:39,760 --> 00:03:44,470
it's the most important one like

55
00:03:41,769 --> 00:03:49,109
securing the user face it's impossible

56
00:03:44,470 --> 00:03:53,260
by design I'm still being contacted by

57
00:03:49,109 --> 00:03:58,620
companies which claim to have a solution

58
00:03:53,260 --> 00:04:04,480
that makes applications and services

59
00:03:58,620 --> 00:04:09,700
uncrackable and well that's not not

60
00:04:04,480 --> 00:04:13,450
possible of course and so I will say

61
00:04:09,700 --> 00:04:18,789
user space protected nowadays obviously

62
00:04:13,450 --> 00:04:21,820
it's it's it's abstract there are more

63
00:04:18,789 --> 00:04:25,930
things which we which we can speak about

64
00:04:21,820 --> 00:04:30,510
like for hours and hours so I cut them

65
00:04:25,930 --> 00:04:33,940
into those five points so obfuscation

66
00:04:30,510 --> 00:04:39,400
there are the most of the commercial

67
00:04:33,940 --> 00:04:41,860
compilers use a fork of LL LLVM string

68
00:04:39,400 --> 00:04:45,070
exceptions anti debugging anti tampering

69
00:04:41,860 --> 00:04:48,990
and in license codes those are the most

70
00:04:45,070 --> 00:04:52,870
used techniques by different compilers

71
00:04:48,990 --> 00:04:55,630
so breaking the user space it's mostly

72
00:04:52,870 --> 00:04:56,600
about time and effort so as I said

73
00:04:55,630 --> 00:04:59,060
before

74
00:04:56,600 --> 00:05:05,300
it's impossible to secure it by design

75
00:04:59,060 --> 00:05:07,670
and it's still a cat mouse running and

76
00:05:05,300 --> 00:05:11,360
it will always be a cat Mouse with

77
00:05:07,670 --> 00:05:13,000
mitigations and and stuff added time to

78
00:05:11,360 --> 00:05:16,130
time

79
00:05:13,000 --> 00:05:20,080
it's not about coding for production

80
00:05:16,130 --> 00:05:23,180
yeah this little line because if you do

81
00:05:20,080 --> 00:05:26,960
malware analysis or reverse engineering

82
00:05:23,180 --> 00:05:29,150
in general or cracking or whatever you

83
00:05:26,960 --> 00:05:33,320
should know that no one is reading your

84
00:05:29,150 --> 00:05:37,190
code so I have like papers of shitty

85
00:05:33,320 --> 00:05:39,409
code that's no one we read so it's not

86
00:05:37,190 --> 00:05:41,930
important and what is important to know

87
00:05:39,410 --> 00:05:45,400
is that of no one will read your code so

88
00:05:41,930 --> 00:05:50,090
you can experiment colorful ways to

89
00:05:45,400 --> 00:05:52,179
achieve your objectives understanding

90
00:05:50,090 --> 00:05:56,630
out the system load and runs executables

91
00:05:52,180 --> 00:06:00,920
it's a key to win so if you know in

92
00:05:56,630 --> 00:06:05,690
example I added two points DT I need and

93
00:06:00,920 --> 00:06:09,860
DT I need array which are the functions

94
00:06:05,690 --> 00:06:14,030
that the are the constructors of the

95
00:06:09,860 --> 00:06:16,580
modules and that's manipulation also

96
00:06:14,030 --> 00:06:20,270
github offers an arsenal of weapons for

97
00:06:16,580 --> 00:06:23,000
malware analysts and crackers and export

98
00:06:20,270 --> 00:06:26,049
developers I copied them I put those

99
00:06:23,000 --> 00:06:28,940
four which are my favorites so Freda

100
00:06:26,050 --> 00:06:31,640
unicorn enjoying and capstone and

101
00:06:28,940 --> 00:06:36,770
Keystone which are used to disassembly

102
00:06:31,640 --> 00:06:41,570
and assembler output so what we've built

103
00:06:36,770 --> 00:06:46,760
to make it fun by we I mean me and the

104
00:06:41,570 --> 00:06:48,590
crew of guys that I'm there is a link

105
00:06:46,760 --> 00:06:51,170
later if you wish to join it's a slack

106
00:06:48,590 --> 00:06:53,690
channel which has now 300 people

107
00:06:51,170 --> 00:06:59,050
including the best developers from all

108
00:06:53,690 --> 00:07:03,320
around the world and so what we've built

109
00:06:59,050 --> 00:07:07,790
we are actively working on dwarf which

110
00:07:03,320 --> 00:07:09,990
is a full-featured debugger built on top

111
00:07:07,790 --> 00:07:13,140
of the equity and freedom which is

112
00:07:09,990 --> 00:07:16,830
the one I will demo later we've built

113
00:07:13,140 --> 00:07:21,060
the unicorn adopt a bagger which is a a

114
00:07:16,830 --> 00:07:27,870
gdb like debugger to emulate binaries of

115
00:07:21,060 --> 00:07:31,010
our our n64 x86 and you can emulate them

116
00:07:27,870 --> 00:07:34,230
on a static on a static context so

117
00:07:31,010 --> 00:07:36,000
that's that data but also some faults at

118
00:07:34,230 --> 00:07:39,450
the DEF CON at the DEF CON calls this

119
00:07:36,000 --> 00:07:44,220
year and we've built freed Android

120
00:07:39,450 --> 00:07:46,710
injector which is an SDK which allows

121
00:07:44,220 --> 00:07:50,130
you to inject the frito gadgets into the

122
00:07:46,710 --> 00:07:51,630
into into applications and those can be

123
00:07:50,130 --> 00:07:54,360
also push it on the Play Store I

124
00:07:51,630 --> 00:07:57,290
personally add have some applications on

125
00:07:54,360 --> 00:08:02,180
the Play Store running with the Frieda

126
00:07:57,290 --> 00:08:05,340
bounded into them so anyway you can find

127
00:08:02,180 --> 00:08:07,730
on my github a lot of tools and public

128
00:08:05,340 --> 00:08:07,729
resources

129
00:08:08,240 --> 00:08:15,330
so to recap this talk will be mostly

130
00:08:12,180 --> 00:08:19,770
about the dwarf which is what I'm

131
00:08:15,330 --> 00:08:23,190
working since one year and let's say

132
00:08:19,770 --> 00:08:27,500
it's the the tool which pack all

133
00:08:23,190 --> 00:08:31,140
together all the things I had to code to

134
00:08:27,500 --> 00:08:36,330
fight against the compiler and Packers

135
00:08:31,140 --> 00:08:39,480
and we built we built it considering the

136
00:08:36,330 --> 00:08:41,760
following sacks so everything needs code

137
00:08:39,480 --> 00:08:42,450
there is no tool which give you magic

138
00:08:41,760 --> 00:08:44,970
powers

139
00:08:42,450 --> 00:08:50,490
so not tools which like you push play

140
00:08:44,970 --> 00:08:52,230
and the things happens setting setting

141
00:08:50,490 --> 00:08:54,270
up them we're on the environment to

142
00:08:52,230 --> 00:08:57,690
debugger process is redundant and

143
00:08:54,270 --> 00:09:00,060
painful so it's it's it's stressful

144
00:08:57,690 --> 00:09:04,080
every time it's a same code same

145
00:09:00,060 --> 00:09:07,920
processes to beginning and it's a

146
00:09:04,080 --> 00:09:11,100
balance between being quick and the

147
00:09:07,920 --> 00:09:14,040
visual information that we can see this

148
00:09:11,100 --> 00:09:16,530
might need a bit of explanation like an

149
00:09:14,040 --> 00:09:19,020
example I can say that if you are an

150
00:09:16,530 --> 00:09:22,839
exploit developer and you are like

151
00:09:19,020 --> 00:09:25,490
fasting some kind of MEMS CPI

152
00:09:22,840 --> 00:09:27,590
you should know that make probably this

153
00:09:25,490 --> 00:09:29,600
memc is gonna it's gonna hit like a

154
00:09:27,590 --> 00:09:33,020
million sometimes in a minute

155
00:09:29,600 --> 00:09:35,420
so you have not properly way to in

156
00:09:33,020 --> 00:09:39,110
example lock the buffer that's passing

157
00:09:35,420 --> 00:09:42,430
through this MEMS bi there must be a

158
00:09:39,110 --> 00:09:45,800
customization specific for each OSS so

159
00:09:42,430 --> 00:09:46,520
as I said before knowing the system is

160
00:09:45,800 --> 00:09:50,390
important

161
00:09:46,520 --> 00:09:55,250
I'm personally more skilled in the

162
00:09:50,390 --> 00:09:58,640
Android so I know about the system load

163
00:09:55,250 --> 00:10:01,700
the applications since the moment of

164
00:09:58,640 --> 00:10:05,569
spoon to the moment of class

165
00:10:01,700 --> 00:10:08,360
initialization and stuff but well we are

166
00:10:05,570 --> 00:10:11,960
still looking for non-us legends that

167
00:10:08,360 --> 00:10:16,850
join the join us and maybe help us to

168
00:10:11,960 --> 00:10:22,970
improve the tool so we have extended

169
00:10:16,850 --> 00:10:25,130
Frieda and we give it on why as I say

170
00:10:22,970 --> 00:10:28,700
that it's supporting anyone Santosh but

171
00:10:25,130 --> 00:10:31,100
this is mostly thanks to Frieda we added

172
00:10:28,700 --> 00:10:33,770
a Kodi a code editor which is upcoming

173
00:10:31,100 --> 00:10:35,720
and I will show you later some

174
00:10:33,770 --> 00:10:37,520
screenshot of the current version and I

175
00:10:35,720 --> 00:10:40,760
will demo the version which is upcoming

176
00:10:37,520 --> 00:10:42,410
in the following days there is

177
00:10:40,760 --> 00:10:46,069
interactive display of registers and

178
00:10:42,410 --> 00:10:47,810
memories and instructions and it's exam

179
00:10:46,070 --> 00:10:51,380
table with pluggy there is a plugin

180
00:10:47,810 --> 00:10:53,900
system we are not giving a damn if you

181
00:10:51,380 --> 00:10:56,689
like mess up with our tool like you can

182
00:10:53,900 --> 00:10:59,660
hook whatever we give freedom to extend

183
00:10:56,690 --> 00:11:03,320
it in the way you like more and which

184
00:10:59,660 --> 00:11:05,360
obviously feed usage case there is Java

185
00:11:03,320 --> 00:11:11,330
the compilation breakpoints variable

186
00:11:05,360 --> 00:11:15,670
inspector watchpoints also and we pack

187
00:11:11,330 --> 00:11:15,670
it inside a lot of open source tools to

188
00:11:16,090 --> 00:11:24,260
extend the features of the tool so those

189
00:11:20,960 --> 00:11:26,650
are the features in the ties because I

190
00:11:24,260 --> 00:11:30,770
think it's a good Twilight are we

191
00:11:26,650 --> 00:11:33,800
achieved something in example the watch

192
00:11:30,770 --> 00:11:36,500
points what points are as you might know

193
00:11:33,800 --> 00:11:40,130
need server support when you random

194
00:11:36,500 --> 00:11:42,710
in example gdb or al-led B and we

195
00:11:40,130 --> 00:11:45,980
managed to achieve it with a combination

196
00:11:42,710 --> 00:11:51,140
of and protector and exception handler

197
00:11:45,980 --> 00:11:52,820
so we kind of we are kind of able to

198
00:11:51,140 --> 00:11:57,170
understand when a memory address is

199
00:11:52,820 --> 00:11:59,090
being read or write and dwarf is

200
00:11:57,170 --> 00:12:01,120
actually the unique tools the unique

201
00:11:59,090 --> 00:12:04,720
tool which give you the capability to

202
00:12:01,120 --> 00:12:07,930
instrument the DT initialization array

203
00:12:04,720 --> 00:12:12,920
which is where most of the malware and

204
00:12:07,930 --> 00:12:15,439
and packers and general compilers used

205
00:12:12,920 --> 00:12:19,160
to make them tricks to prevent the

206
00:12:15,440 --> 00:12:24,170
bugging and obfuscation so the in

207
00:12:19,160 --> 00:12:26,959
example if you ever face narcs and

208
00:12:24,170 --> 00:12:29,240
protected application or game those

209
00:12:26,960 --> 00:12:30,580
incidents most of the things that are

210
00:12:29,240 --> 00:12:36,260
happening in the DT initialization

211
00:12:30,580 --> 00:12:39,410
functions we made the setup of the tool

212
00:12:36,260 --> 00:12:42,470
very automated so it's all about to get

213
00:12:39,410 --> 00:12:44,870
clone and run the setup or even with

214
00:12:42,470 --> 00:12:45,890
peep tree you can install it and the

215
00:12:44,870 --> 00:12:47,810
tool will automatically install

216
00:12:45,890 --> 00:12:52,760
everything else so the fright free de

217
00:12:47,810 --> 00:12:56,660
binary's and dependencies etc so this is

218
00:12:52,760 --> 00:13:00,020
the tool in the early 2019 so this is my

219
00:12:56,660 --> 00:13:03,560
first version I coated the whole UI and

220
00:13:00,020 --> 00:13:07,280
the backend suddenly after a couple of

221
00:13:03,560 --> 00:13:09,770
months guy pop it on my flock from

222
00:13:07,280 --> 00:13:11,030
nowhere and he said the uruguay soup i

223
00:13:09,770 --> 00:13:14,210
can do it better

224
00:13:11,030 --> 00:13:20,930
so i said okay go for it and this is how

225
00:13:14,210 --> 00:13:23,240
it became in the late 2019 you can see

226
00:13:20,930 --> 00:13:27,890
there is the compilation and graph which

227
00:13:23,240 --> 00:13:33,400
is powered by a radar a yeah we will see

228
00:13:27,890 --> 00:13:33,400
later the various panels so right now

229
00:13:37,430 --> 00:13:49,680
so I'm going to start the tool is it ok

230
00:13:44,550 --> 00:13:54,660
that's ooh let's see fine I can maybe do

231
00:13:49,680 --> 00:13:57,300
like ok so this is the upcoming version

232
00:13:54,660 --> 00:13:59,579
which we are going we we planet to

233
00:13:57,300 --> 00:14:02,990
release this week before my presentation

234
00:13:59,579 --> 00:14:05,969
but we figure out that we still need to

235
00:14:02,990 --> 00:14:12,259
port something so we plan to release

236
00:14:05,970 --> 00:14:16,230
this in the upcoming week hopefully the

237
00:14:12,259 --> 00:14:21,569
new thing is that we finally added a

238
00:14:16,230 --> 00:14:24,019
code editor inside which is which except

239
00:14:21,569 --> 00:14:27,660
obviously the free da ba if you are

240
00:14:24,019 --> 00:14:29,759
comfortable with them or dwarf APA since

241
00:14:27,660 --> 00:14:36,149
we are providing also our own a PA

242
00:14:29,759 --> 00:14:37,829
documented in my website so the why the

243
00:14:36,149 --> 00:14:41,160
why is composite as following in the

244
00:14:37,829 --> 00:14:45,180
left side there is the little panel in

245
00:14:41,160 --> 00:14:46,980
which you can add breakpoints and watch

246
00:14:45,180 --> 00:14:52,229
points and Java breakpoints and

247
00:14:46,980 --> 00:14:55,680
Objective C breakpoints and also the in

248
00:14:52,230 --> 00:14:57,810
module initialization breakpoints in the

249
00:14:55,680 --> 00:14:59,459
center there is the editor with some

250
00:14:57,810 --> 00:15:01,768
tabs which will pop later on saya

251
00:14:59,459 --> 00:15:03,930
touchflo process there is the context

252
00:15:01,769 --> 00:15:06,510
panel which will have java arguments

253
00:15:03,930 --> 00:15:09,239
registers and objective-c arguments

254
00:15:06,510 --> 00:15:11,639
there is a panel for back-trace and a

255
00:15:09,240 --> 00:15:13,079
panel for the threads which will give

256
00:15:11,639 --> 00:15:15,300
you information about all the threads

257
00:15:13,079 --> 00:15:17,910
running on the process there are three

258
00:15:15,300 --> 00:15:20,939
three type of consoles there is a

259
00:15:17,910 --> 00:15:22,260
JavaScript one a Python one and well the

260
00:15:20,939 --> 00:15:25,189
output one it's not real a console but

261
00:15:22,260 --> 00:15:28,110
just an output

262
00:15:25,189 --> 00:15:31,709
obviously those evaluate your JavaScript

263
00:15:28,110 --> 00:15:35,040
and and your Python with Frieda a PA and

264
00:15:31,709 --> 00:15:38,579
Orpha PA on the left side is pretty new

265
00:15:35,040 --> 00:15:40,980
so this is a new feature added by by the

266
00:15:38,579 --> 00:15:44,329
guy that designer dy those are a

267
00:15:40,980 --> 00:15:46,770
variable observer so the tool is also

268
00:15:44,329 --> 00:15:50,189
shipit with this feature

269
00:15:46,770 --> 00:15:52,800
which you can observe variables for

270
00:15:50,190 --> 00:15:57,120
change so kind of watch points but

271
00:15:52,800 --> 00:15:58,829
specific for variables and we will see

272
00:15:57,120 --> 00:16:04,020
later all the tabs that will pop so now

273
00:15:58,830 --> 00:16:06,510
I am attaching to Android so the echinus

274
00:16:04,020 --> 00:16:10,140
Android you can also run it on local or

275
00:16:06,510 --> 00:16:13,670
on a remote target well the tooltip is

276
00:16:10,140 --> 00:16:13,670
wrong fix it later

277
00:16:15,950 --> 00:16:22,290
so those are all the processes on my

278
00:16:19,440 --> 00:16:24,450
phone on the left side we can spawn a

279
00:16:22,290 --> 00:16:27,000
process so we have control since the

280
00:16:24,450 --> 00:16:29,280
moment of of the of the very first

281
00:16:27,000 --> 00:16:31,260
moment of the bound and on the right

282
00:16:29,280 --> 00:16:35,760
side we can attach attach to running

283
00:16:31,260 --> 00:16:36,420
processes so I'm going to start a random

284
00:16:35,760 --> 00:16:42,439
application

285
00:16:36,420 --> 00:16:47,240
Alitalia maybe that's good you're right

286
00:16:42,440 --> 00:16:47,240
yeah it should up and stop every time

287
00:16:53,230 --> 00:16:58,470
it's profiteth timeout always happen

288
00:17:08,050 --> 00:17:16,899
yep okay so some new tabs pop it pop it

289
00:17:12,910 --> 00:17:18,490
so we got disassembly loaded modules we

290
00:17:16,900 --> 00:17:20,980
can tap into them and check import and

291
00:17:18,490 --> 00:17:23,050
export we can eventually break point by

292
00:17:20,980 --> 00:17:25,740
right-click and break point straight to

293
00:17:23,050 --> 00:17:29,680
the target we have a Java inspector

294
00:17:25,740 --> 00:17:32,800
which also has all the Java classes we

295
00:17:29,680 --> 00:17:36,340
can tap into one in example and check

296
00:17:32,800 --> 00:17:39,220
the methods here there will be also java

297
00:17:36,340 --> 00:17:41,740
decompiler which i'm not going to show

298
00:17:39,220 --> 00:17:42,160
now because it's untested so I'm a bit

299
00:17:41,740 --> 00:17:46,150
scared

300
00:17:42,160 --> 00:17:48,280
open it so the first thing I want to

301
00:17:46,150 --> 00:17:53,950
show it's our wheezy's to add a break

302
00:17:48,280 --> 00:17:59,320
point you can do it by code or by UI so

303
00:17:53,950 --> 00:18:02,080
I'm going to like add here and another

304
00:17:59,320 --> 00:18:02,620
cool features which is new it's not it's

305
00:18:02,080 --> 00:18:05,050
not running

306
00:18:02,620 --> 00:18:09,610
I mean you won't find it in the current

307
00:18:05,050 --> 00:18:13,210
version it's the thing that we women as

308
00:18:09,610 --> 00:18:15,370
you to give you a chance to add your

309
00:18:13,210 --> 00:18:17,020
code when the function on the entry

310
00:18:15,370 --> 00:18:19,060
point of the function and on the exit

311
00:18:17,020 --> 00:18:22,210
point of the function so I'm going to

312
00:18:19,060 --> 00:18:24,129
like remove the comment so to return me

313
00:18:22,210 --> 00:18:29,800
to the toon one and because I want to

314
00:18:24,130 --> 00:18:33,040
break and in the address field any field

315
00:18:29,800 --> 00:18:35,919
inside the tool evaluate also happy from

316
00:18:33,040 --> 00:18:40,030
field and dwarf so I can in example use

317
00:18:35,920 --> 00:18:44,230
find export open to immediately get the

318
00:18:40,030 --> 00:18:48,220
pointer of open and on side release the

319
00:18:44,230 --> 00:18:50,140
process because oh I forgot to say sorry

320
00:18:48,220 --> 00:18:52,900
actually we are break pointed in the

321
00:18:50,140 --> 00:18:56,710
very first spot which is break one table

322
00:18:52,900 --> 00:18:59,190
on on android we are inside the runtime

323
00:18:56,710 --> 00:19:03,700
common unit which is a system component

324
00:18:59,190 --> 00:19:07,990
which later load all the classes and if

325
00:19:03,700 --> 00:19:11,710
I resume the execution we are hitting

326
00:19:07,990 --> 00:19:14,680
the breakpoint so something more we can

327
00:19:11,710 --> 00:19:18,070
do it's copying the address and go into

328
00:19:14,680 --> 00:19:21,070
the JavaScript so open as in the first

329
00:19:18,070 --> 00:19:23,740
register the path of the file we want to

330
00:19:21,070 --> 00:19:32,169
so in example we can retrieve this file

331
00:19:23,740 --> 00:19:38,100
in some kind of colorful ways something

332
00:19:32,170 --> 00:19:41,410
like that it should probably work yes so

333
00:19:38,100 --> 00:19:45,840
you have various different ways to get

334
00:19:41,410 --> 00:19:45,840
the pets or instrument on the arguments

335
00:19:46,350 --> 00:19:53,199
so we will go on by showing the the new

336
00:19:49,510 --> 00:19:58,120
editor in the new editor you see I've

337
00:19:53,200 --> 00:20:02,080
I've packet five demos for today I'm not

338
00:19:58,120 --> 00:20:04,229
sure I can show all of them but I will

339
00:20:02,080 --> 00:20:06,730
start one by one

340
00:20:04,230 --> 00:20:08,980
there are snippets also we are going to

341
00:20:06,730 --> 00:20:12,880
add a lot of snippets so in example you

342
00:20:08,980 --> 00:20:17,860
can just like if you don't know wow not

343
00:20:12,880 --> 00:20:20,440
working it was working this morning okay

344
00:20:17,860 --> 00:20:21,790
yes so in example if you don't know how

345
00:20:20,440 --> 00:20:28,900
to do something we are going to add a

346
00:20:21,790 --> 00:20:30,850
lot of snippets into this yeah so oh you

347
00:20:28,900 --> 00:20:33,220
can also change theme but this is

348
00:20:30,850 --> 00:20:35,110
something up to the other guy which is

349
00:20:33,220 --> 00:20:38,500
making cherries like these are all

350
00:20:35,110 --> 00:20:41,199
around like also you can change the

351
00:20:38,500 --> 00:20:41,620
global team like I personally like the

352
00:20:41,200 --> 00:20:46,120
black one

353
00:20:41,620 --> 00:20:48,429
and I up everything so you can

354
00:20:46,120 --> 00:20:55,060
also change them to like or dark but

355
00:20:48,430 --> 00:20:59,110
this is Charlie's features so the first

356
00:20:55,060 --> 00:21:03,490
script I pocket is something that I've

357
00:20:59,110 --> 00:21:06,070
been asking like almost one every week

358
00:21:03,490 --> 00:21:08,890
like the reason which came to my slack

359
00:21:06,070 --> 00:21:11,560
and asked me like hey I want to UM amp

360
00:21:08,890 --> 00:21:14,050
in the SSL certificate of this

361
00:21:11,560 --> 00:21:16,510
application and every time I said you

362
00:21:14,050 --> 00:21:18,250
don't need to waste your time to unpin

363
00:21:16,510 --> 00:21:20,260
the certificates when you can just hook

364
00:21:18,250 --> 00:21:23,590
low-level a PA which are involved with

365
00:21:20,260 --> 00:21:27,160
the SSL transfer of of the data so you

366
00:21:23,590 --> 00:21:30,159
can just hook those two function those

367
00:21:27,160 --> 00:21:32,720
two functions SSL right and SSL Reed and

368
00:21:30,160 --> 00:21:34,760
you just have the plain as well

369
00:21:32,720 --> 00:21:39,920
data which is going through the

370
00:21:34,760 --> 00:21:45,260
application so with the 22 line of codes

371
00:21:39,920 --> 00:21:48,020
you are able to read the network

372
00:21:45,260 --> 00:21:53,629
transfers between of the applications

373
00:21:48,020 --> 00:21:57,400
and to push them to the 2-day UI we we

374
00:21:53,630 --> 00:22:02,060
made a special widget which is for like

375
00:21:57,400 --> 00:22:03,920
if you want to generate reports or make

376
00:22:02,060 --> 00:22:07,639
penetration testing on applications and

377
00:22:03,920 --> 00:22:10,850
you want to like highlight different

378
00:22:07,640 --> 00:22:14,330
kind of data you can use this API which

379
00:22:10,850 --> 00:22:17,080
is show that show data with the various

380
00:22:14,330 --> 00:22:20,659
arguments which you will explain later

381
00:22:17,080 --> 00:22:28,360
okay if we now run this script on the

382
00:22:20,660 --> 00:22:28,360
same target yep oh god let's restart it

383
00:22:28,420 --> 00:22:31,420
also

384
00:22:33,730 --> 00:22:36,880
[Music]

385
00:22:42,420 --> 00:22:45,020
okay

386
00:23:00,130 --> 00:23:11,049
so this new panel now it's appeared and

387
00:23:04,650 --> 00:23:14,230
obviously like I use it oh it's crazy I

388
00:23:11,049 --> 00:23:16,690
use it out and in as a key you can set

389
00:23:14,230 --> 00:23:19,750
whatever you want here and if you click

390
00:23:16,690 --> 00:23:22,510
inside if you click on anything of them

391
00:23:19,750 --> 00:23:24,820
you will see the plane the plane Network

392
00:23:22,510 --> 00:23:27,129
request going through the app and you

393
00:23:24,820 --> 00:23:36,760
can eventually add more code to alter

394
00:23:27,130 --> 00:23:39,340
the total bytes of the request so by we

395
00:23:36,760 --> 00:23:42,640
are keep giving a look to the data view

396
00:23:39,340 --> 00:23:46,330
which is also pretty new and I will go

397
00:23:42,640 --> 00:23:48,549
straight to the second to the second

398
00:23:46,330 --> 00:23:53,379
script I've prepared which is something

399
00:23:48,549 --> 00:23:57,690
very easy we've added we've added a

400
00:23:53,380 --> 00:24:01,120
SQLite visualization to to the tool so

401
00:23:57,690 --> 00:24:03,070
you can also dump straight from the

402
00:24:01,120 --> 00:24:06,879
phone all the database on the

403
00:24:03,070 --> 00:24:09,820
applications and I've prepared this

404
00:24:06,880 --> 00:24:13,980
script not because I want to yes well I

405
00:24:09,820 --> 00:24:17,439
want to show the SQLite viewer but also

406
00:24:13,980 --> 00:24:20,020
to maybe the whatsapp developers will

407
00:24:17,440 --> 00:24:22,570
see this video one day in the future and

408
00:24:20,020 --> 00:24:24,220
maybe they should remove the line that

409
00:24:22,570 --> 00:24:27,220
say that the database is encrypted

410
00:24:24,220 --> 00:24:30,309
because it's not like it's plain so it's

411
00:24:27,220 --> 00:24:32,740
 like and it's bad sorry ball if

412
00:24:30,309 --> 00:24:34,510
you consider that they are not checking

413
00:24:32,740 --> 00:24:37,020
the length of peer to peer pocket this

414
00:24:34,510 --> 00:24:37,020
is terrible

415
00:24:37,450 --> 00:24:41,610
so I'm going to target what's up

416
00:24:50,279 --> 00:24:55,859
we still need to make a right click to

417
00:24:53,129 --> 00:25:01,439
clear this list so the database will

418
00:24:55,859 --> 00:25:03,330
appear on the bottom of this list so as

419
00:25:01,440 --> 00:25:06,869
you see I can get into my message store

420
00:25:03,330 --> 00:25:08,699
database and I didn't add that any any

421
00:25:06,869 --> 00:25:14,968
lines of code to the clip for decryption

422
00:25:08,700 --> 00:25:16,919
so these are my charts in plain and well

423
00:25:14,969 --> 00:25:19,979
it's not it's not that best but it's

424
00:25:16,919 --> 00:25:24,710
good to show the SQLite viewer so you

425
00:25:19,979 --> 00:25:27,599
can also see all the all the tables

426
00:25:24,710 --> 00:25:29,460
these also apply to telegram so don't

427
00:25:27,599 --> 00:25:31,649
think that telegram is more secure than

428
00:25:29,460 --> 00:25:36,210
what's up it's the same telegram

429
00:25:31,649 --> 00:25:38,418
database are also planes you can try the

430
00:25:36,210 --> 00:25:42,269
tool later with with telegram database

431
00:25:38,419 --> 00:25:49,409
so I'm going to show now the third

432
00:25:42,269 --> 00:25:52,049
script which is safety net like there

433
00:25:49,409 --> 00:25:55,289
are a lot of people that came to my

434
00:25:52,049 --> 00:25:57,269
slack and say there is safety net in

435
00:25:55,289 --> 00:25:59,549
this application which is a pain in the

436
00:25:57,269 --> 00:26:02,309
ass to bypass there is at the station so

437
00:25:59,549 --> 00:26:07,019
we can't use the route on applications

438
00:26:02,309 --> 00:26:09,960
to pay and blah blah blah so my first

439
00:26:07,019 --> 00:26:13,139
question is like yeah it's like you can

440
00:26:09,960 --> 00:26:14,759
read everywhere that safety net is it's

441
00:26:13,139 --> 00:26:18,059
painful to the bug and determined but

442
00:26:14,759 --> 00:26:21,899
did you ever like instrument or debug on

443
00:26:18,059 --> 00:26:23,820
safety net like there are no aunty

444
00:26:21,899 --> 00:26:26,309
debugging at all no protections at all

445
00:26:23,820 --> 00:26:30,389
like no inline siskel so where is the

446
00:26:26,309 --> 00:26:32,940
stock and so I've packet this script in

447
00:26:30,389 --> 00:26:38,089
which I want to show like what is safety

448
00:26:32,940 --> 00:26:40,969
net doing to tells that the device is

449
00:26:38,089 --> 00:26:44,369
good or not good

450
00:26:40,969 --> 00:26:47,419
so yes what is this script basically

451
00:26:44,369 --> 00:26:49,499
doing I'm attaching through two three

452
00:26:47,419 --> 00:26:53,789
system a PA on Lipsy

453
00:26:49,499 --> 00:26:57,539
I'm at I'm attaching faster set open and

454
00:26:53,789 --> 00:26:58,739
stop 64 which like like I mean when when

455
00:26:57,539 --> 00:27:00,450
I was instrument in the process I've

456
00:26:58,739 --> 00:27:05,210
attached a dolly a list of them but

457
00:27:00,450 --> 00:27:05,210
those those three are the one involved

458
00:27:09,289 --> 00:27:12,289
oops

459
00:27:19,070 --> 00:27:24,409
all right now with the phone I'm going

460
00:27:20,720 --> 00:27:27,980
to use the application to the safety net

461
00:27:24,410 --> 00:27:32,150
tester to check the status of safety net

462
00:27:27,980 --> 00:27:34,190
and what we want to see will appear in

463
00:27:32,150 --> 00:27:34,640
this console hopefully if the demo won't

464
00:27:34,190 --> 00:27:47,120
fail

465
00:27:34,640 --> 00:27:50,330
oh why no let me restart it so every

466
00:27:47,120 --> 00:27:55,419
time there is like some kind of conflict

467
00:27:50,330 --> 00:27:55,419
if I attach to two different targets

468
00:27:56,920 --> 00:28:02,320
versions three safety net

469
00:27:59,660 --> 00:28:02,320
okay

470
00:28:24,020 --> 00:28:34,010
okay let's uh yeah okay so what is

471
00:28:29,390 --> 00:28:36,650
basically doing safety net like I feel I

472
00:28:34,010 --> 00:28:41,540
filter it from pets it's reading more

473
00:28:36,650 --> 00:28:44,380
pets but well the important one is that

474
00:28:41,540 --> 00:28:47,629
it's trying to search for su binary and

475
00:28:44,380 --> 00:28:50,270
mapping called the system system

476
00:28:47,630 --> 00:28:53,090
binaries I'm showing just it's it's

477
00:28:50,270 --> 00:28:57,530
binary and binary but is is also mapping

478
00:28:53,090 --> 00:29:00,139
all the data local files sistemics bin

479
00:28:57,530 --> 00:29:02,450
files is reading the 'selenic state and

480
00:29:00,140 --> 00:29:04,100
I'm not saying that returning means one

481
00:29:02,450 --> 00:29:09,470
to anything of these will break safety

482
00:29:04,100 --> 00:29:16,909
net so that was like not not that hard

483
00:29:09,470 --> 00:29:21,290
at all the for script I've pakad like I

484
00:29:16,910 --> 00:29:29,450
have 20 minutes so yes I think I want to

485
00:29:21,290 --> 00:29:32,928
probably show this one so i'm following

486
00:29:29,450 --> 00:29:34,690
supercell games since like 3 years I've

487
00:29:32,929 --> 00:29:39,170
been at the supercell offices yesterday

488
00:29:34,690 --> 00:29:40,720
to have a speech with them and supercell

489
00:29:39,170 --> 00:29:47,840
games are protected with the famous

490
00:29:40,720 --> 00:29:49,790
compiler which actually no one provided

491
00:29:47,840 --> 00:29:51,110
an open source solution I'm sure there

492
00:29:49,790 --> 00:29:54,020
are people around the world which

493
00:29:51,110 --> 00:29:55,699
managed to break it but seems like they

494
00:29:54,020 --> 00:30:01,970
are keeping the solutions by themselves

495
00:29:55,700 --> 00:30:05,660
and one key to win these protectors was

496
00:30:01,970 --> 00:30:08,300
by using watch point and well it was the

497
00:30:05,660 --> 00:30:11,420
key to win a lot of protectors but this

498
00:30:08,300 --> 00:30:12,110
specific case watch point was very

499
00:30:11,420 --> 00:30:14,929
useful

500
00:30:12,110 --> 00:30:17,360
I'm very sorry that I can't show you the

501
00:30:14,929 --> 00:30:18,620
UI watch points right now because they

502
00:30:17,360 --> 00:30:20,809
are not fully implemented in this

503
00:30:18,620 --> 00:30:23,750
version but the current version which

504
00:30:20,809 --> 00:30:26,750
you can install on github as also the UI

505
00:30:23,750 --> 00:30:29,090
with watch points so as I said in my

506
00:30:26,750 --> 00:30:31,790
introduction we are achieving watch

507
00:30:29,090 --> 00:30:32,990
points by basically using and protect

508
00:30:31,790 --> 00:30:35,780
and removing the read and write

509
00:30:32,990 --> 00:30:37,670
permission to a specific address when

510
00:30:35,780 --> 00:30:39,770
the target tried to read the

511
00:30:37,670 --> 00:30:42,950
specific address the program crash and

512
00:30:39,770 --> 00:30:45,290
we handle this exception so we set it

513
00:30:42,950 --> 00:30:47,720
back to read and write and at this point

514
00:30:45,290 --> 00:30:49,820
we know that which is which one is the

515
00:30:47,720 --> 00:30:54,530
address that is trying to read and write

516
00:30:49,820 --> 00:30:57,500
or on our target address so what I'm

517
00:30:54,530 --> 00:31:00,710
doing now to replicate this behavior is

518
00:30:57,500 --> 00:31:04,130
on this line on the thirty-nine so I'm

519
00:31:00,710 --> 00:31:08,960
I'm scanning for some patterns that are

520
00:31:04,130 --> 00:31:13,190
actually my real target and this array

521
00:31:08,960 --> 00:31:16,430
will be filled with like 100 address

522
00:31:13,190 --> 00:31:18,520
probably or something like that and we

523
00:31:16,430 --> 00:31:20,720
are just taking the the first one and

524
00:31:18,520 --> 00:31:26,420
removing read and write permission on

525
00:31:20,720 --> 00:31:31,730
one byte so if I run this script now so

526
00:31:26,420 --> 00:31:38,500
hopefully it won't mess up with the with

527
00:31:31,730 --> 00:31:38,500
the safety net one example two browsers

528
00:31:40,360 --> 00:31:43,360
timeout

529
00:31:54,200 --> 00:31:59,050
[Music]

530
00:31:56,040 --> 00:32:02,370
it's time out so sometimes I don't know

531
00:31:59,050 --> 00:32:02,370
like yep

532
00:32:09,030 --> 00:32:13,580
okay now it should work yeah

533
00:32:23,560 --> 00:32:29,080
so we are going to resume the process

534
00:32:25,540 --> 00:32:32,460
and technically we should heat like some

535
00:32:29,080 --> 00:32:32,460
advanced no we're not

536
00:32:33,750 --> 00:32:39,070
I'm sorry for this time loss but I need

537
00:32:36,340 --> 00:32:43,350
to refresh every time something we are

538
00:32:39,070 --> 00:32:43,350
going to work work out those days

539
00:32:52,210 --> 00:32:55,260
so this week

540
00:33:00,890 --> 00:33:03,730
okay

541
00:33:10,040 --> 00:33:13,330
no yes

542
00:33:26,640 --> 00:33:29,179
yeah

543
00:33:31,520 --> 00:33:38,750
all right back alright so those logs

544
00:33:35,900 --> 00:33:41,630
will be like if you install the current

545
00:33:38,750 --> 00:33:44,210
version of this debugger will be like in

546
00:33:41,630 --> 00:33:47,530
UI so I'm just logging what's happening

547
00:33:44,210 --> 00:33:50,150
and what's important to read is

548
00:33:47,530 --> 00:33:54,740
operation read so we know that something

549
00:33:50,150 --> 00:33:56,780
is right to read that address and we

550
00:33:54,740 --> 00:33:59,420
know which one is the address that is

551
00:33:56,780 --> 00:34:02,510
trying to read that is trying to read

552
00:33:59,420 --> 00:34:05,650
our target so we can just jump on the

553
00:34:02,510 --> 00:34:08,199
disassembler which I didn't show before

554
00:34:05,650 --> 00:34:11,480
we can just jump over there and check

555
00:34:08,199 --> 00:34:13,730
what's going on and well I know what's

556
00:34:11,480 --> 00:34:19,219
going on but in your target you will see

557
00:34:13,730 --> 00:34:20,780
some kind of things happening that the

558
00:34:19,219 --> 00:34:24,009
last one script I've prepared

559
00:34:20,780 --> 00:34:27,470
it's another script I can't demo because

560
00:34:24,010 --> 00:34:31,760
we are still porting the features but

561
00:34:27,469 --> 00:34:34,339
when I been invited to Barcelona this

562
00:34:31,760 --> 00:34:39,580
summer I met a guy which asked at me hey

563
00:34:34,340 --> 00:34:42,470
do you think we can fudge the mm CPI of

564
00:34:39,580 --> 00:34:46,580
what's up Yuma you might know that this

565
00:34:42,469 --> 00:34:49,609
summer there was the huge assertive

566
00:34:46,580 --> 00:34:51,859
evener ability overflow one what's up so

567
00:34:49,609 --> 00:34:55,609
he said me okay do you think with free

568
00:34:51,859 --> 00:34:58,730
that we have a easy way to fats on this

569
00:34:55,609 --> 00:35:00,500
mem CPI and I said yes if you tell me

570
00:34:58,730 --> 00:35:02,240
I'm not an explorer developer but if you

571
00:35:00,500 --> 00:35:07,400
tell me what I have to code I will cut

572
00:35:02,240 --> 00:35:08,930
it for you and so I've prepared those 14

573
00:35:07,400 --> 00:35:12,230
lights of strip for exploit developers

574
00:35:08,930 --> 00:35:14,600
to show that you can also do some kind

575
00:35:12,230 --> 00:35:18,170
of odd Zynga with this with this tool

576
00:35:14,600 --> 00:35:20,690
and what I'm doing is on the first line

577
00:35:18,170 --> 00:35:23,810
I'm adding the module the module

578
00:35:20,690 --> 00:35:25,760
initialization so we are break pointing

579
00:35:23,810 --> 00:35:27,290
into the moment that

580
00:35:25,760 --> 00:35:30,560
what's up is loading the leap what's up

581
00:35:27,290 --> 00:35:35,540
dot so which is the one which ship the

582
00:35:30,560 --> 00:35:37,369
SRTP module when we are when we are

583
00:35:35,540 --> 00:35:39,350
living we are getting the base of the

584
00:35:37,369 --> 00:35:41,090
leap what's up and we are getting the

585
00:35:39,350 --> 00:35:44,098
current rate and we are getting the

586
00:35:41,090 --> 00:35:46,200
target so how do I get this target

587
00:35:44,099 --> 00:35:50,519
be your question because it's a it's a

588
00:35:46,200 --> 00:35:52,589
static opposite so this is all also

589
00:35:50,519 --> 00:35:56,189
thanks to the whatsapp the developers

590
00:35:52,589 --> 00:36:01,799
which makes everything easy so you can

591
00:35:56,190 --> 00:36:11,249
just go to the whatsapp directory Wow

592
00:36:01,799 --> 00:36:16,109
and you can do something like grip

593
00:36:11,249 --> 00:36:18,988
overflow and you get a pointer of the

594
00:36:16,109 --> 00:36:20,880
string that they are used to also when

595
00:36:18,989 --> 00:36:26,039
they patch the vulnerabilities instead

596
00:36:20,880 --> 00:36:29,160
of adding complexity they prefer to give

597
00:36:26,039 --> 00:36:31,410
the vulnerability to everyone and so you

598
00:36:29,160 --> 00:36:34,410
get the offset of the string and it's

599
00:36:31,410 --> 00:36:37,259
enough to express the string and you get

600
00:36:34,410 --> 00:36:39,180
to where where where is the the infamous

601
00:36:37,259 --> 00:36:41,819
name CP I involve it with the with the

602
00:36:39,180 --> 00:36:46,589
bug so you will end up by getting this

603
00:36:41,819 --> 00:36:49,979
this offset and well what's later I'm

604
00:36:46,589 --> 00:36:52,650
just adding a break point to this and

605
00:36:49,979 --> 00:36:55,618
unhook to this to this address and chain

606
00:36:52,650 --> 00:36:58,079
it follow following with the hook the

607
00:36:55,619 --> 00:37:00,809
first name CPI happening right after it

608
00:36:58,079 --> 00:37:03,420
so if you try this 14 lines of code and

609
00:37:00,809 --> 00:37:05,519
you ask your friend to call you

610
00:37:03,420 --> 00:37:07,229
you will hit this break point and at

611
00:37:05,519 --> 00:37:16,919
this point you can bomb the dismembered

612
00:37:07,229 --> 00:37:20,549
eye with your favorite sheets ok so I

613
00:37:16,920 --> 00:37:23,329
think that that's all we have 10 minutes

614
00:37:20,549 --> 00:37:26,599
do you guys have any questions about

615
00:37:23,329 --> 00:37:26,599
what I said

