1
00:00:03,760 --> 00:00:06,000
hey hello everyone it's me saran and

2
00:00:06,000 --> 00:00:08,240
along with ryan

3
00:00:08,240 --> 00:00:09,920
uh we'll be talking about centralized

4
00:00:09,920 --> 00:00:12,960
monitoring and alerting system on aws

5
00:00:12,960 --> 00:00:15,120
so in this talk we'll be talking about

6
00:00:15,120 --> 00:00:17,680
different sort of cloud native

7
00:00:17,680 --> 00:00:19,279
misconfigurations that are happening

8
00:00:19,279 --> 00:00:21,680
around the world and around the most

9
00:00:21,680 --> 00:00:23,680
common companies right

10
00:00:23,680 --> 00:00:24,880
and how to solve these particular

11
00:00:24,880 --> 00:00:27,359
problem statements at the same time

12
00:00:27,359 --> 00:00:29,039
so in this talk we'll be talking about

13
00:00:29,039 --> 00:00:30,560
our in-house tool that we have developed

14
00:00:30,560 --> 00:00:32,479
which can be useful for

15
00:00:32,479 --> 00:00:34,079
uh you know capturing all these

16
00:00:34,079 --> 00:00:35,920
particular issues at one single point

17
00:00:35,920 --> 00:00:37,520
and sending out alerts to different

18
00:00:37,520 --> 00:00:39,280
teams in a very very short period of

19
00:00:39,280 --> 00:00:41,840
time which this particular tool also

20
00:00:41,840 --> 00:00:43,760
acts like a centralized monitoring and

21
00:00:43,760 --> 00:00:45,840
alerting system on top of your aws

22
00:00:45,840 --> 00:00:47,760
environment so we'll be covering all

23
00:00:47,760 --> 00:00:50,160
these particular verticals now and

24
00:00:50,160 --> 00:00:52,800
quickly jumping on to the introduction

25
00:00:52,800 --> 00:00:55,120
so hey uh it's saran strana i'm

26
00:00:55,120 --> 00:00:57,520
currently working for security engineer

27
00:00:57,520 --> 00:00:59,280
as cred in red

28
00:00:59,280 --> 00:01:01,359
i am currently as a also working as a

29
00:01:01,359 --> 00:01:03,680
part-time bug bounty hunter i am a red

30
00:01:03,680 --> 00:01:05,119
team enthusiast

31
00:01:05,119 --> 00:01:07,680
i like to automate things and i like to

32
00:01:07,680 --> 00:01:09,600
read fiction i like to read science

33
00:01:09,600 --> 00:01:11,520
fiction and at the same time i like to

34
00:01:11,520 --> 00:01:13,360
play music and go for treks just like

35
00:01:13,360 --> 00:01:14,560
everybody else

36
00:01:14,560 --> 00:01:16,720
so these are my social media handles and

37
00:01:16,720 --> 00:01:18,720
you can catch me on these particular end

38
00:01:18,720 --> 00:01:19,600
points

39
00:01:19,600 --> 00:01:21,520
over to you the vancouver now

40
00:01:21,520 --> 00:01:24,880
so hey everyone this is divyanshu and

41
00:01:24,880 --> 00:01:26,880
i'm also currently working as a security

42
00:01:26,880 --> 00:01:28,240
engineer

43
00:01:28,240 --> 00:01:32,240
i'm also i'm a cp certified and

44
00:01:32,240 --> 00:01:33,600
a very

45
00:01:33,600 --> 00:01:35,680
very i'm sometimes contributing to open

46
00:01:35,680 --> 00:01:37,520
source as well so you can find some of

47
00:01:37,520 --> 00:01:39,360
the open source projects at my github

48
00:01:39,360 --> 00:01:41,360
account so other than this i'm also

49
00:01:41,360 --> 00:01:43,360
currently a red team enthusiastic

50
00:01:43,360 --> 00:01:45,439
learning about and exploring about the

51
00:01:45,439 --> 00:01:47,360
team inside of infosys and sometimes

52
00:01:47,360 --> 00:01:49,680
i'll i like to read and trick so you can

53
00:01:49,680 --> 00:01:52,000
hit me on the particular twitter id

54
00:01:52,000 --> 00:01:54,399
which is mentioned over here thanks a

55
00:01:54,399 --> 00:01:56,560
lot

56
00:01:56,880 --> 00:01:58,000
so

57
00:01:58,000 --> 00:02:00,240
quickly jumping on to the main content

58
00:02:00,240 --> 00:02:02,079
of the slides right like what will be

59
00:02:02,079 --> 00:02:03,600
talking about and what sort of things

60
00:02:03,600 --> 00:02:05,280
that we'll be covering right

61
00:02:05,280 --> 00:02:06,880
so the first slide what we'll be

62
00:02:06,880 --> 00:02:08,878
covering is the problem statement that

63
00:02:08,878 --> 00:02:10,399
what specific problems that we are

64
00:02:10,399 --> 00:02:12,480
trying to solve and we'll try to keep

65
00:02:12,480 --> 00:02:14,319
you in the loop where we'll give you

66
00:02:14,319 --> 00:02:16,000
different certain scenarios where we ask

67
00:02:16,000 --> 00:02:17,920
you to think about the same situation

68
00:02:17,920 --> 00:02:20,319
that we are covering in this tool right

69
00:02:20,319 --> 00:02:21,760
so in the problem statement we'll be

70
00:02:21,760 --> 00:02:23,440
covering different sort of areas and

71
00:02:23,440 --> 00:02:25,280
different sort of endpoints that this

72
00:02:25,280 --> 00:02:27,440
particular tool can be useful for

73
00:02:27,440 --> 00:02:29,120
after that we'll be talking about the

74
00:02:29,120 --> 00:02:30,800
solution that this problem statement

75
00:02:30,800 --> 00:02:32,160
usually have

76
00:02:32,160 --> 00:02:33,840
and after that we'll be introducing

77
00:02:33,840 --> 00:02:35,840
introducing our own in-house tool called

78
00:02:35,840 --> 00:02:37,040
tile

79
00:02:37,040 --> 00:02:38,800
along with that we'll be along with that

80
00:02:38,800 --> 00:02:40,560
we'll be covering the aws services that

81
00:02:40,560 --> 00:02:42,400
dial is currently covering

82
00:02:42,400 --> 00:02:44,879
after that we'll be uh deep diving into

83
00:02:44,879 --> 00:02:46,879
the technicalities of day we'll be

84
00:02:46,879 --> 00:02:49,120
discussing architecture in depth and how

85
00:02:49,120 --> 00:02:51,200
it is deployed and how you can deploy it

86
00:02:51,200 --> 00:02:54,239
in your infrastructure at any given time

87
00:02:54,239 --> 00:02:55,760
suppose that we'll be talking about the

88
00:02:55,760 --> 00:02:58,080
benefits and the scenarios

89
00:02:58,080 --> 00:02:59,840
coming on to the scenarios uh just like

90
00:02:59,840 --> 00:03:02,000
to give a disclaimer that we'll be

91
00:03:02,000 --> 00:03:03,840
covering practical attack scenarios and

92
00:03:03,840 --> 00:03:04,959
security common security

93
00:03:04,959 --> 00:03:07,440
misconfigurations that we usually see on

94
00:03:07,440 --> 00:03:09,760
on the fly but this is these are these

95
00:03:09,760 --> 00:03:11,519
particular scenarios are not the only

96
00:03:11,519 --> 00:03:12,800
scenarios that dial is currently

97
00:03:12,800 --> 00:03:15,040
covering it can be a lot of scenarios

98
00:03:15,040 --> 00:03:16,879
that tile can cover but i would just

99
00:03:16,879 --> 00:03:18,640
request you to read the documentation

100
00:03:18,640 --> 00:03:20,720
once the talk is completed

101
00:03:20,720 --> 00:03:22,400
after that we'll be jumping on to the

102
00:03:22,400 --> 00:03:24,239
demo where we'll be showing you how

103
00:03:24,239 --> 00:03:26,879
resilient and how granular dial can be

104
00:03:26,879 --> 00:03:29,040
and how fast this particular tool can be

105
00:03:29,040 --> 00:03:31,200
to notify any sort of security team or

106
00:03:31,200 --> 00:03:32,959
any endpoints that you want to

107
00:03:32,959 --> 00:03:34,560
post that will be discussing about the

108
00:03:34,560 --> 00:03:37,200
future roadmap about the tool and post

109
00:03:37,200 --> 00:03:38,959
that will be done

110
00:03:38,959 --> 00:03:40,560
right

111
00:03:40,560 --> 00:03:42,720
jumping onto the problem statement

112
00:03:42,720 --> 00:03:44,879
jumping onto the problem statement right

113
00:03:44,879 --> 00:03:46,640
so i would just like to take a step back

114
00:03:46,640 --> 00:03:48,319
and would like to ask you things few

115
00:03:48,319 --> 00:03:49,200
things

116
00:03:49,200 --> 00:03:51,519
so have you come across any situation

117
00:03:51,519 --> 00:03:53,360
where you have seen or maybe you have

118
00:03:53,360 --> 00:03:55,439
come across a place where a developer or

119
00:03:55,439 --> 00:03:58,080
a devops guy has made a database or an

120
00:03:58,080 --> 00:04:00,560
s3 bucket accidentally public

121
00:04:00,560 --> 00:04:02,159
right and i'm pretty sure these

122
00:04:02,159 --> 00:04:03,840
particular problems are really really

123
00:04:03,840 --> 00:04:06,720
big for any sort of security and

124
00:04:06,720 --> 00:04:08,720
actually for doing forensics on top of

125
00:04:08,720 --> 00:04:10,640
it plus finding these particular issues

126
00:04:10,640 --> 00:04:13,599
is becomes very very very very uh it

127
00:04:13,599 --> 00:04:16,639
becomes a quite big big task

128
00:04:16,639 --> 00:04:18,478
now i would like to ask you a different

129
00:04:18,478 --> 00:04:20,639
question like have you come across a

130
00:04:20,639 --> 00:04:22,560
situation where you have jumped onto an

131
00:04:22,560 --> 00:04:25,040
iim console and you have come across a

132
00:04:25,040 --> 00:04:27,120
random policy with a completely random

133
00:04:27,120 --> 00:04:29,120
name but with an administrator level

134
00:04:29,120 --> 00:04:30,639
privileges

135
00:04:30,639 --> 00:04:32,320
and at the same time have you come

136
00:04:32,320 --> 00:04:34,479
across a situation where you have

137
00:04:34,479 --> 00:04:36,639
actually seen a bbc pairing connection

138
00:04:36,639 --> 00:04:38,560
made from your production environment to

139
00:04:38,560 --> 00:04:39,360
your

140
00:04:39,360 --> 00:04:42,160
uh to your random unknown account right

141
00:04:42,160 --> 00:04:43,520
and i'm pretty sure these particular

142
00:04:43,520 --> 00:04:45,919
problems becomes a very very very big

143
00:04:45,919 --> 00:04:48,080
task for any security team or any

144
00:04:48,080 --> 00:04:50,720
security manager at any given time

145
00:04:50,720 --> 00:04:52,400
so now i would just like you to take a

146
00:04:52,400 --> 00:04:54,400
step back understand this particular

147
00:04:54,400 --> 00:04:56,160
problem statement from a very high level

148
00:04:56,160 --> 00:04:58,000
overview on how these particular

149
00:04:58,000 --> 00:05:00,160
problems actually arise and how we can

150
00:05:00,160 --> 00:05:02,080
solve these particular problems at one

151
00:05:02,080 --> 00:05:03,600
given period of time

152
00:05:03,600 --> 00:05:06,160
right so one simple solution for this

153
00:05:06,160 --> 00:05:08,800
particular thing is sending out alerts

154
00:05:08,800 --> 00:05:10,560
and that is a very simple thing right

155
00:05:10,560 --> 00:05:13,199
just send out alert to any team but how

156
00:05:13,199 --> 00:05:15,680
fast and how resilient this alert can be

157
00:05:15,680 --> 00:05:17,360
we will be seeing and how this but how

158
00:05:17,360 --> 00:05:19,759
this alert can make significant changes

159
00:05:19,759 --> 00:05:21,440
during this particular process we'll be

160
00:05:21,440 --> 00:05:24,080
seeing this on the next slide

161
00:05:24,080 --> 00:05:26,240
so now as we were talking about alert

162
00:05:26,240 --> 00:05:27,840
we'll be talking about the significance

163
00:05:27,840 --> 00:05:29,919
of alerts on cloud native environments

164
00:05:29,919 --> 00:05:30,800
right

165
00:05:30,800 --> 00:05:32,800
so coming back to the place where we

166
00:05:32,800 --> 00:05:34,479
have let's say we want to detect any

167
00:05:34,479 --> 00:05:36,320
sort of incident that is happening on

168
00:05:36,320 --> 00:05:38,880
cloud at any given period of time one of

169
00:05:38,880 --> 00:05:41,120
the primary stages of any incident is to

170
00:05:41,120 --> 00:05:42,800
check this particular error

171
00:05:42,800 --> 00:05:44,720
right because it helps you to answer

172
00:05:44,720 --> 00:05:47,919
that five w's that is who did it what

173
00:05:47,919 --> 00:05:50,240
did it when did it when did it happen

174
00:05:50,240 --> 00:05:51,759
where did it happen and why did it

175
00:05:51,759 --> 00:05:53,919
happen at any given time

176
00:05:53,919 --> 00:05:54,880
right

177
00:05:54,880 --> 00:05:57,600
and it can be like how fast it can be

178
00:05:57,600 --> 00:05:59,280
and how effective this particular

179
00:05:59,280 --> 00:06:00,800
question answering these questions can

180
00:06:00,800 --> 00:06:03,520
be right because at the given point if

181
00:06:03,520 --> 00:06:05,600
you are detecting any incident in a very

182
00:06:05,600 --> 00:06:07,840
short period of time right it can be

183
00:06:07,840 --> 00:06:09,759
very very helpful for your particular

184
00:06:09,759 --> 00:06:12,479
organization to protect your own data

185
00:06:12,479 --> 00:06:14,560
so a simple solution for this particular

186
00:06:14,560 --> 00:06:16,479
thing is to look for the right things at

187
00:06:16,479 --> 00:06:17,680
the right place

188
00:06:17,680 --> 00:06:20,160
i know it is a very forward state state

189
00:06:20,160 --> 00:06:22,560
statement but i think this can be a very

190
00:06:22,560 --> 00:06:24,880
very helpful solution right

191
00:06:24,880 --> 00:06:25,759
so

192
00:06:25,759 --> 00:06:27,919
introducing daily

193
00:06:27,919 --> 00:06:30,479
diet is nothing but did i alert lambda

194
00:06:30,479 --> 00:06:32,960
it says full form and moving on to the

195
00:06:32,960 --> 00:06:36,160
next leg we can see what dial does so

196
00:06:36,160 --> 00:06:38,560
it's a moderate map i i must i'm pretty

197
00:06:38,560 --> 00:06:39,919
sure you guys must have gone through

198
00:06:39,919 --> 00:06:42,400
harry potter and see uh this morality

199
00:06:42,400 --> 00:06:44,639
map where he can actually see everything

200
00:06:44,639 --> 00:06:45,919
in one place

201
00:06:45,919 --> 00:06:46,639
so

202
00:06:46,639 --> 00:06:49,199
according to that die is simply a

203
00:06:49,199 --> 00:06:51,360
real-time threat detection and security

204
00:06:51,360 --> 00:06:54,080
misconfiguration uh detection framework

205
00:06:54,080 --> 00:06:56,240
which helps us to monitor all our aws

206
00:06:56,240 --> 00:06:58,160
account at one single place

207
00:06:58,160 --> 00:06:59,199
all right

208
00:06:59,199 --> 00:07:01,520
moving on to how dial works die

209
00:07:01,520 --> 00:07:04,080
leverages multiple aws managed services

210
00:07:04,080 --> 00:07:06,639
like cloudtrail eventbridge aws lambda

211
00:07:06,639 --> 00:07:08,160
etc

212
00:07:08,160 --> 00:07:10,000
at the same time it is highly infinitely

213
00:07:10,000 --> 00:07:12,319
scalable easily deployable across any

214
00:07:12,319 --> 00:07:14,800
number of aws accounts and becomes a one

215
00:07:14,800 --> 00:07:17,199
point 1.1 point contact for every single

216
00:07:17,199 --> 00:07:18,800
thing that is that you want to actually

217
00:07:18,800 --> 00:07:21,199
check on

218
00:07:21,280 --> 00:07:23,440
moving on to the supported services that

219
00:07:23,440 --> 00:07:25,440
dial currently covers so currently dial

220
00:07:25,440 --> 00:07:27,919
supports 10 aws services managed

221
00:07:27,919 --> 00:07:31,360
services that is easy to guard duty im

222
00:07:31,360 --> 00:07:35,120
s3 ecr etc

223
00:07:35,360 --> 00:07:36,479
right

224
00:07:36,479 --> 00:07:38,960
jumping onto the architecture right so

225
00:07:38,960 --> 00:07:42,080
i'll just move it up here right so

226
00:07:42,080 --> 00:07:43,680
as you can see in this architecture this

227
00:07:43,680 --> 00:07:45,440
is the whole deployment of architecture

228
00:07:45,440 --> 00:07:47,520
on any given infrastructure

229
00:07:47,520 --> 00:07:49,919
account to account one being the number

230
00:07:49,919 --> 00:07:51,759
of accounts that you have and this

231
00:07:51,759 --> 00:07:53,680
particular account can be the parent

232
00:07:53,680 --> 00:07:54,639
place

233
00:07:54,639 --> 00:07:57,120
so this whole architecture works in two

234
00:07:57,120 --> 00:07:59,360
different components that is the child

235
00:07:59,360 --> 00:08:01,919
controller and the parent controller

236
00:08:01,919 --> 00:08:03,199
on the next slide i will be talking

237
00:08:03,199 --> 00:08:05,280
about the child controller majorly in

238
00:08:05,280 --> 00:08:06,800
the depth

239
00:08:06,800 --> 00:08:08,160
and post that i'll be talking about the

240
00:08:08,160 --> 00:08:10,960
parent controller

241
00:08:11,440 --> 00:08:12,400
yeah

242
00:08:12,400 --> 00:08:14,240
coming on to the child controller so as

243
00:08:14,240 --> 00:08:15,599
you can see the child controller is

244
00:08:15,599 --> 00:08:18,000
sitting on top of one account right and

245
00:08:18,000 --> 00:08:19,759
similarly it's sitting on top of another

246
00:08:19,759 --> 00:08:21,759
account and it can be set on different

247
00:08:21,759 --> 00:08:23,039
regions as well

248
00:08:23,039 --> 00:08:25,280
so this child controller is actually

249
00:08:25,280 --> 00:08:27,199
responsible for aggregating all the

250
00:08:27,199 --> 00:08:29,280
alerts from all the different accounts

251
00:08:29,280 --> 00:08:31,680
that you are deploying and send it sends

252
00:08:31,680 --> 00:08:33,760
out your custom it basically passes

253
00:08:33,760 --> 00:08:35,919
those particular events in in a way

254
00:08:35,919 --> 00:08:37,440
where you can actually configure your

255
00:08:37,440 --> 00:08:39,839
role rule engine which basically will

256
00:08:39,839 --> 00:08:41,599
help you to determine which specific

257
00:08:41,599 --> 00:08:44,159
events are actually highly highly uh

258
00:08:44,159 --> 00:08:46,160
malicious for you or just does not make

259
00:08:46,160 --> 00:08:48,720
sense right so it you can actually

260
00:08:48,720 --> 00:08:49,920
differentiate the whole particular

261
00:08:49,920 --> 00:08:52,240
process by your highly configured rules

262
00:08:52,240 --> 00:08:53,760
rule-based service engine that we are

263
00:08:53,760 --> 00:08:55,519
providing here

264
00:08:55,519 --> 00:08:58,399
so once this is done the send alerts can

265
00:08:58,399 --> 00:09:00,320
be sent out to any monitoring

266
00:09:00,320 --> 00:09:02,480
any any monitoring solutions that we

267
00:09:02,480 --> 00:09:05,360
have for example slack or sms

268
00:09:05,360 --> 00:09:07,519
post that uh once this is this message

269
00:09:07,519 --> 00:09:09,440
has been sent we what we do is that we

270
00:09:09,440 --> 00:09:11,680
send out both the event and the alert

271
00:09:11,680 --> 00:09:12,959
back to the

272
00:09:12,959 --> 00:09:16,000
state to the parent controller

273
00:09:16,000 --> 00:09:18,000
so now once we reach the parent

274
00:09:18,000 --> 00:09:19,680
controller

275
00:09:19,680 --> 00:09:21,519
what parent controller actually does is

276
00:09:21,519 --> 00:09:24,640
that it acts as an aggregator right

277
00:09:24,640 --> 00:09:26,959
it basically connects all the child

278
00:09:26,959 --> 00:09:29,279
controllers at one single point takes

279
00:09:29,279 --> 00:09:32,000
the event and alerts at once

280
00:09:32,000 --> 00:09:32,720
one

281
00:09:32,720 --> 00:09:34,480
particular place and then you can

282
00:09:34,480 --> 00:09:36,160
actually use these particular events or

283
00:09:36,160 --> 00:09:38,000
alerts into any sort of solutions that

284
00:09:38,000 --> 00:09:40,320
you want to send it out to create your

285
00:09:40,320 --> 00:09:42,080
threat enrichment create your thread

286
00:09:42,080 --> 00:09:44,399
hunting the jio ip enrichment as well

287
00:09:44,399 --> 00:09:46,320
where you can actually add your

288
00:09:46,320 --> 00:09:48,560
guip enrichment service on top of it

289
00:09:48,560 --> 00:09:50,160
where you can actually get the location

290
00:09:50,160 --> 00:09:52,320
of the incoming ip address and all those

291
00:09:52,320 --> 00:09:54,800
sort of things right

292
00:09:54,800 --> 00:09:57,360
uh so moving on to the holistic overview

293
00:09:57,360 --> 00:09:59,519
i would like to pres uh give the debt to

294
00:09:59,519 --> 00:10:02,800
divyanshu now they want you over to you

295
00:10:02,800 --> 00:10:05,040
cool so having uh now that we have

296
00:10:05,040 --> 00:10:06,640
discussed the child controller and

297
00:10:06,640 --> 00:10:08,720
parent controller let's get a brief

298
00:10:08,720 --> 00:10:10,000
overview

299
00:10:10,000 --> 00:10:11,760
let's get a holistic overview of dial

300
00:10:11,760 --> 00:10:14,079
how this works and overall overview of

301
00:10:14,079 --> 00:10:14,880
that

302
00:10:14,880 --> 00:10:18,000
so any api call generated by any aws

303
00:10:18,000 --> 00:10:19,680
service whether it can be from your

304
00:10:19,680 --> 00:10:23,200
awcli sdk cdj or even the gui management

305
00:10:23,200 --> 00:10:26,320
console is captured by eventbridge

306
00:10:26,320 --> 00:10:28,320
now the event bridge is going to trigger

307
00:10:28,320 --> 00:10:30,160
the child controller on the basis of

308
00:10:30,160 --> 00:10:32,399
pre-configured routes which are which

309
00:10:32,399 --> 00:10:34,480
the dial initializes once you install

310
00:10:34,480 --> 00:10:36,480
the child controller again this is

311
00:10:36,480 --> 00:10:38,079
highly customizable you can just go

312
00:10:38,079 --> 00:10:39,760
ahead and modify the rules which you

313
00:10:39,760 --> 00:10:41,360
don't want or the rules which you want

314
00:10:41,360 --> 00:10:42,640
to keep

315
00:10:42,640 --> 00:10:44,640
once the child controller sees the event

316
00:10:44,640 --> 00:10:47,519
it is going to parse it and and repairs

317
00:10:47,519 --> 00:10:50,560
like rephase replace it in a very human

318
00:10:50,560 --> 00:10:52,399
readable format and send it to any

319
00:10:52,399 --> 00:10:54,720
monitoring solution or even a very

320
00:10:54,720 --> 00:10:57,440
simple slack message to the security

321
00:10:57,440 --> 00:10:59,440
team to them have a look at

322
00:10:59,440 --> 00:11:01,600
similarly the same event along with the

323
00:11:01,600 --> 00:11:04,160
alert is then sent to parent controller

324
00:11:04,160 --> 00:11:05,279
as well

325
00:11:05,279 --> 00:11:07,760
so as you can see the the child

326
00:11:07,760 --> 00:11:09,519
controller and the parent controller are

327
00:11:09,519 --> 00:11:11,760
connected via api git so basically what

328
00:11:11,760 --> 00:11:13,600
happens is the child controller is going

329
00:11:13,600 --> 00:11:15,920
to send the event and the alert as a

330
00:11:15,920 --> 00:11:18,399
post request to the api gateway and then

331
00:11:18,399 --> 00:11:20,240
the parent controller is going to read

332
00:11:20,240 --> 00:11:22,320
from that api gateway and get it and

333
00:11:22,320 --> 00:11:24,160
gets its data

334
00:11:24,160 --> 00:11:24,880
so

335
00:11:24,880 --> 00:11:27,120
as it's quite visible the parent

336
00:11:27,120 --> 00:11:29,839
controller is aggregating all the alerts

337
00:11:29,839 --> 00:11:31,839
for n number of accounts in an

338
00:11:31,839 --> 00:11:34,000
organization at a single place

339
00:11:34,000 --> 00:11:36,000
so instead of going to each an account

340
00:11:36,000 --> 00:11:37,519
and looking at what are the alerts or

341
00:11:37,519 --> 00:11:39,200
what are the events taking place you

342
00:11:39,200 --> 00:11:40,880
don't you just have to come at single

343
00:11:40,880 --> 00:11:42,720
place and just look at the

344
00:11:42,720 --> 00:11:44,160
dashboard of anything which you have

345
00:11:44,160 --> 00:11:45,760
configured the parent controller to

346
00:11:45,760 --> 00:11:47,760
write to that's it you don't have to

347
00:11:47,760 --> 00:11:49,680
visit each and every account and then do

348
00:11:49,680 --> 00:11:51,040
the hard work

349
00:11:51,040 --> 00:11:52,959
hence the parent controller can also be

350
00:11:52,959 --> 00:11:55,440
integrated with all these sim solution

351
00:11:55,440 --> 00:11:57,600
or any db or any like third-party

352
00:11:57,600 --> 00:11:59,839
solution like

353
00:11:59,839 --> 00:12:02,959
so now we'll be exploring uh like

354
00:12:02,959 --> 00:12:05,360
telling you why we guys preferred help

355
00:12:05,360 --> 00:12:08,079
so dial can again it can be integrated

356
00:12:08,079 --> 00:12:09,920
with many other things it's just not the

357
00:12:09,920 --> 00:12:13,760
high this is just a very small uh like

358
00:12:13,760 --> 00:12:15,360
very small concept which we are trying

359
00:12:15,360 --> 00:12:18,480
to like show why we preferred

360
00:12:18,480 --> 00:12:20,480
so as you can see the alert was

361
00:12:20,480 --> 00:12:22,399
generated by the child controller the

362
00:12:22,399 --> 00:12:24,160
parent controller received it and the

363
00:12:24,160 --> 00:12:26,079
ticket was created in high

364
00:12:26,079 --> 00:12:28,639
so if you see all the events are very

365
00:12:28,639 --> 00:12:30,480
properly explained the case heading

366
00:12:30,480 --> 00:12:32,480
specifically tells what the ins what the

367
00:12:32,480 --> 00:12:35,200
case is all about and if you look at the

368
00:12:35,200 --> 00:12:38,320
cvit tlp severity and all those kind of

369
00:12:38,320 --> 00:12:40,639
things you know what the severity is

370
00:12:40,639 --> 00:12:42,399
and whom you want to assign that

371
00:12:42,399 --> 00:12:44,000
particular ticket to and all those

372
00:12:44,000 --> 00:12:45,120
things

373
00:12:45,120 --> 00:12:47,440
the severity is also very

374
00:12:47,440 --> 00:12:49,040
very subjective you can actually

375
00:12:49,040 --> 00:12:51,680
configure it according to your way like

376
00:12:51,680 --> 00:12:53,680
if you feel the ideas in the instance

377
00:12:53,680 --> 00:12:55,680
going public is not severe

378
00:12:55,680 --> 00:12:57,600
then configure it in a low manner or

379
00:12:57,600 --> 00:12:58,720
accordingly you can just change the

380
00:12:58,720 --> 00:13:00,880
context of the severity as well now in

381
00:13:00,880 --> 00:13:02,560
the description if we see we have all

382
00:13:02,560 --> 00:13:04,639
the information needed for an analyst to

383
00:13:04,639 --> 00:13:06,240
actually understand the context of the

384
00:13:06,240 --> 00:13:09,040
event we have the title that is which

385
00:13:09,040 --> 00:13:10,079
was the

386
00:13:10,079 --> 00:13:11,600
event which happened and what was the

387
00:13:11,600 --> 00:13:13,680
database which actually went public

388
00:13:13,680 --> 00:13:15,600
and then the source id of the person who

389
00:13:15,600 --> 00:13:18,160
actually initiated that particular call

390
00:13:18,160 --> 00:13:20,160
then we have the username of that

391
00:13:20,160 --> 00:13:21,839
particular user like

392
00:13:21,839 --> 00:13:24,240
which person did in my account like

393
00:13:24,240 --> 00:13:26,000
which person in my account actually did

394
00:13:26,000 --> 00:13:26,959
this

395
00:13:26,959 --> 00:13:28,800
and then we have the event name as well

396
00:13:28,800 --> 00:13:31,440
as the location of that id which can be

397
00:13:31,440 --> 00:13:34,800
enriched by any gi ip management service

398
00:13:34,800 --> 00:13:37,279
so this is uh how it kind of helps

399
00:13:37,279 --> 00:13:39,760
analyst to just get a brief overview of

400
00:13:39,760 --> 00:13:42,000
the email from just one single dashboard

401
00:13:42,000 --> 00:13:43,680
you don't have to look through the cloud

402
00:13:43,680 --> 00:13:45,279
and sit and read the event and then

403
00:13:45,279 --> 00:13:47,839
understand it just come to this need it

404
00:13:47,839 --> 00:13:49,120
and that's it you understand now

405
00:13:49,120 --> 00:13:51,760
everything related to that event

406
00:13:51,760 --> 00:13:53,600
again so as you can see this is giving

407
00:13:53,600 --> 00:13:55,839
us a central web web dashboard for

408
00:13:55,839 --> 00:13:57,680
monitoring all the events and all the

409
00:13:57,680 --> 00:13:59,440
accounts at a single place

410
00:13:59,440 --> 00:14:01,120
and again it's acting as a one-stop

411
00:14:01,120 --> 00:14:03,360
place for any analyst to keep an eye on

412
00:14:03,360 --> 00:14:04,959
infrastructure

413
00:14:04,959 --> 00:14:07,279
so now we will talk about metrics like

414
00:14:07,279 --> 00:14:09,600
why exactly we preferred it over like by

415
00:14:09,600 --> 00:14:11,839
exactly we prefer it more

416
00:14:11,839 --> 00:14:13,839
as you can see uh this kind of generates

417
00:14:13,839 --> 00:14:16,800
metrics on the basis of severity as well

418
00:14:16,800 --> 00:14:19,120
the high medium low everything this is

419
00:14:19,120 --> 00:14:21,600
again as shown as told it is highly

420
00:14:21,600 --> 00:14:24,320
configurable what is high for us may not

421
00:14:24,320 --> 00:14:26,639
be high for you so you can modify that

422
00:14:26,639 --> 00:14:27,519
as well

423
00:14:27,519 --> 00:14:28,560
so

424
00:14:28,560 --> 00:14:30,399
if you see the account events this is

425
00:14:30,399 --> 00:14:32,320
where the things get interesting

426
00:14:32,320 --> 00:14:35,360
so basically you have the account id uh

427
00:14:35,360 --> 00:14:37,120
you can actually filter with respect to

428
00:14:37,120 --> 00:14:38,560
the account ids

429
00:14:38,560 --> 00:14:40,800
like which account you felt that the

430
00:14:40,800 --> 00:14:43,040
most events are coming from and then

431
00:14:43,040 --> 00:14:44,880
which is the very sensitive account you

432
00:14:44,880 --> 00:14:47,279
want to keep a very like a proper eye on

433
00:14:47,279 --> 00:14:49,040
those kind of things you can very easily

434
00:14:49,040 --> 00:14:51,440
get a matrix out of it and then the same

435
00:14:51,440 --> 00:14:53,680
thing can be even filtered on the daily

436
00:14:53,680 --> 00:14:55,680
on the basis of time range as shown in

437
00:14:55,680 --> 00:14:57,600
the figure

438
00:14:57,600 --> 00:15:00,320
so next let us talk about the benefits

439
00:15:00,320 --> 00:15:02,399
right this is uh this is the

440
00:15:02,399 --> 00:15:04,720
brief overview of rail the architecture

441
00:15:04,720 --> 00:15:06,639
how it works but why exactly you should

442
00:15:06,639 --> 00:15:08,160
care about that

443
00:15:08,160 --> 00:15:10,880
so it can detect a natively passed aws

444
00:15:10,880 --> 00:15:13,360
events in less than five seconds which

445
00:15:13,360 --> 00:15:15,279
is almost a real time we'll kind of show

446
00:15:15,279 --> 00:15:16,399
it in demo

447
00:15:16,399 --> 00:15:18,959
this is very very like close to real and

448
00:15:18,959 --> 00:15:21,199
the moment you do it you get an alert

449
00:15:21,199 --> 00:15:22,480
so next

450
00:15:22,480 --> 00:15:24,639
it is completely stateless which makes

451
00:15:24,639 --> 00:15:27,600
it infinitely scalable

452
00:15:27,600 --> 00:15:28,480
this

453
00:15:28,480 --> 00:15:30,240
next then the code itself is highly

454
00:15:30,240 --> 00:15:31,920
modular that means that you don't have

455
00:15:31,920 --> 00:15:33,920
to understand the full code to add any

456
00:15:33,920 --> 00:15:36,800
new service just change a small section

457
00:15:36,800 --> 00:15:38,639
of code and then the

458
00:15:38,639 --> 00:15:41,120
and then the effect will take place

459
00:15:41,120 --> 00:15:43,920
the next it is it is very easy to deploy

460
00:15:43,920 --> 00:15:46,880
in multiple aws account again it's just

461
00:15:46,880 --> 00:15:48,560
it's just a single click deployment

462
00:15:48,560 --> 00:15:50,000
right you don't have to worry about the

463
00:15:50,000 --> 00:15:52,000
parent controller just go ahead and

464
00:15:52,000 --> 00:15:54,000
deploy the child controller in any aws

465
00:15:54,000 --> 00:15:55,920
account you want to cover that's it no

466
00:15:55,920 --> 00:15:58,160
no need to worry about other things

467
00:15:58,160 --> 00:16:00,399
it's highly cost efficient since it is

468
00:16:00,399 --> 00:16:04,560
running over lambda which is serverless

469
00:16:04,560 --> 00:16:06,880
so these are the benefits now let's talk

470
00:16:06,880 --> 00:16:08,480
about some of the attacks on

471
00:16:08,480 --> 00:16:10,480
misconfiguration scenarios which tile

472
00:16:10,480 --> 00:16:12,639
can support and how they'll dial will

473
00:16:12,639 --> 00:16:15,680
help your organization detect that

474
00:16:15,680 --> 00:16:17,839
so very first thing uh we are talking

475
00:16:17,839 --> 00:16:20,399
about iem so im is basically a access

476
00:16:20,399 --> 00:16:21,519
control

477
00:16:21,519 --> 00:16:23,920
kind of service in aws which will allow

478
00:16:23,920 --> 00:16:26,959
administrator to give a very granular

479
00:16:26,959 --> 00:16:29,519
access to any user so this should be

480
00:16:29,519 --> 00:16:31,199
highly monitored because this is like

481
00:16:31,199 --> 00:16:33,360
the keys to the kingdom kind of scene

482
00:16:33,360 --> 00:16:36,480
so next the very first uh very first

483
00:16:36,480 --> 00:16:38,079
scenario which we have is multiple

484
00:16:38,079 --> 00:16:39,759
access keys creation

485
00:16:39,759 --> 00:16:41,839
so any user suppose you have some some

486
00:16:41,839 --> 00:16:43,920
user which which has like five to six

487
00:16:43,920 --> 00:16:45,440
access keys

488
00:16:45,440 --> 00:16:48,000
any user in that sort of user you want

489
00:16:48,000 --> 00:16:49,680
to get alerted if there are more access

490
00:16:49,680 --> 00:16:51,600
keys being added to a single user

491
00:16:51,600 --> 00:16:53,759
technically at max you just have one to

492
00:16:53,759 --> 00:16:55,519
two access keys for a user

493
00:16:55,519 --> 00:16:56,959
these many number of access keys

494
00:16:56,959 --> 00:16:59,199
generally it is not common right so that

495
00:16:59,199 --> 00:17:01,839
might be uh suspicious event you want to

496
00:17:01,839 --> 00:17:04,319
have a look at

497
00:17:04,319 --> 00:17:07,119
next we have admin policy creation so

498
00:17:07,119 --> 00:17:09,679
this is again a very sensitive policy

499
00:17:09,679 --> 00:17:11,919
creation because admin policy we want to

500
00:17:11,919 --> 00:17:13,919
keep track of who exactly is admin right

501
00:17:13,919 --> 00:17:16,000
we don't want to lose the track so

502
00:17:16,000 --> 00:17:18,799
anyone creating any admin policy can

503
00:17:18,799 --> 00:17:20,480
will be alerted because this is again

504
00:17:20,480 --> 00:17:22,400
one of the proper ways of doing a

505
00:17:22,400 --> 00:17:24,160
privilege escalation in any aws

506
00:17:24,160 --> 00:17:25,359
environment

507
00:17:25,359 --> 00:17:27,919
so it can even auto remediate it as well

508
00:17:27,919 --> 00:17:29,840
which will kind of show it in the demo

509
00:17:29,840 --> 00:17:32,000
but yeah this has the ability to deal

510
00:17:32,000 --> 00:17:34,480
with the admin policies creation as well

511
00:17:34,480 --> 00:17:35,679
so next

512
00:17:35,679 --> 00:17:37,679
console login for any account so what do

513
00:17:37,679 --> 00:17:40,160
i mean by this is any organization which

514
00:17:40,160 --> 00:17:42,240
is based on a role based access control

515
00:17:42,240 --> 00:17:44,000
that is hardware control

516
00:17:44,000 --> 00:17:46,559
so this is basically uh what's this this

517
00:17:46,559 --> 00:17:48,799
uh this says that a user is supposed to

518
00:17:48,799 --> 00:17:51,200
assume a role to log in or to get access

519
00:17:51,200 --> 00:17:53,679
to the organization's account so anyone

520
00:17:53,679 --> 00:17:55,600
who just logs in via console is

521
00:17:55,600 --> 00:17:58,080
basically bypassing the r access control

522
00:17:58,080 --> 00:17:59,280
right you don't

523
00:17:59,280 --> 00:18:00,880
you don't want that to happen or if

524
00:18:00,880 --> 00:18:02,400
there is any genuine use case you want

525
00:18:02,400 --> 00:18:04,720
to have a look at them so this basically

526
00:18:04,720 --> 00:18:06,720
will alert you for that as well so that

527
00:18:06,720 --> 00:18:08,799
you basically know which user is logging

528
00:18:08,799 --> 00:18:11,039
it via console

529
00:18:11,039 --> 00:18:13,200
next we have field authentication so

530
00:18:13,200 --> 00:18:15,039
again as the name suggests this kind of

531
00:18:15,039 --> 00:18:17,039
detects the password brute forces

532
00:18:17,039 --> 00:18:19,120
password root force because any failed

533
00:18:19,120 --> 00:18:21,679
authentication attempts are being locked

534
00:18:21,679 --> 00:18:23,280
as well right there

535
00:18:23,280 --> 00:18:26,160
so next we have update access key so

536
00:18:26,160 --> 00:18:29,120
what do i mean by update access keys is

537
00:18:29,120 --> 00:18:30,880
any inactive key

538
00:18:30,880 --> 00:18:32,799
uh like any key which was inactive

539
00:18:32,799 --> 00:18:34,640
before is suddenly made active you want

540
00:18:34,640 --> 00:18:37,280
to keep track of that as well right so

541
00:18:37,280 --> 00:18:40,240
there might be a security use case where

542
00:18:40,240 --> 00:18:42,480
administrator made some set of

543
00:18:42,480 --> 00:18:44,960
keys inactive someone just randomly

544
00:18:44,960 --> 00:18:46,799
cannot make it active you need to have a

545
00:18:46,799 --> 00:18:48,320
look at them as well

546
00:18:48,320 --> 00:18:50,480
so this is the reason why we included

547
00:18:50,480 --> 00:18:51,600
this check

548
00:18:51,600 --> 00:18:53,840
check again this is highly customizable

549
00:18:53,840 --> 00:18:55,760
if you don't like this or you feel this

550
00:18:55,760 --> 00:18:57,840
is not something i need i as an

551
00:18:57,840 --> 00:18:59,840
organization should care about you can

552
00:18:59,840 --> 00:19:02,400
just like disable it by a single on-off

553
00:19:02,400 --> 00:19:05,200
kind of switch which we have

554
00:19:05,200 --> 00:19:09,840
lastly we have a mfa enabled

555
00:19:09,840 --> 00:19:11,679
so if you see

556
00:19:11,679 --> 00:19:13,679
like what this is going to do is will be

557
00:19:13,679 --> 00:19:16,240
tracking if the mfa has been removed to

558
00:19:16,240 --> 00:19:18,240
bypass two-factor authentication why

559
00:19:18,240 --> 00:19:19,840
this is important

560
00:19:19,840 --> 00:19:21,520
administrators will generally have a

561
00:19:21,520 --> 00:19:23,679
two-factor authentication because these

562
00:19:23,679 --> 00:19:25,440
are having the admin access to the

563
00:19:25,440 --> 00:19:26,720
organization

564
00:19:26,720 --> 00:19:29,760
so if anyone tries to remove the mfa we

565
00:19:29,760 --> 00:19:31,200
need to be alerted because then it

566
00:19:31,200 --> 00:19:33,360
becomes an easy target since you are

567
00:19:33,360 --> 00:19:34,799
admin and you don't have a two-factor

568
00:19:34,799 --> 00:19:36,240
authentication

569
00:19:36,240 --> 00:19:37,840
so again these are just some of the

570
00:19:37,840 --> 00:19:39,360
couple uh scenarios which have been

571
00:19:39,360 --> 00:19:42,160
covered by dial in respect of i am there

572
00:19:42,160 --> 00:19:44,240
are multiple other scenarios as well

573
00:19:44,240 --> 00:19:46,400
which will be uh which i which is

574
00:19:46,400 --> 00:19:48,400
actually covered in dial which you will

575
00:19:48,400 --> 00:19:50,160
you can get a sense of by reading the

576
00:19:50,160 --> 00:19:52,160
documentation

577
00:19:52,160 --> 00:19:53,600
next

578
00:19:53,600 --> 00:19:55,919
so this was i am now let's talk about

579
00:19:55,919 --> 00:19:59,200
ec2 so now suddenly say foreign

580
00:19:59,200 --> 00:20:01,600
like one random day you come to notice

581
00:20:01,600 --> 00:20:03,280
that your production environment has a

582
00:20:03,280 --> 00:20:05,360
random peering connection with some aws

583
00:20:05,360 --> 00:20:07,280
account which you don't even know

584
00:20:07,280 --> 00:20:09,200
so in that case you don't want to wait

585
00:20:09,200 --> 00:20:11,200
for say one to two months for anyone to

586
00:20:11,200 --> 00:20:13,360
notice and inform right you want

587
00:20:13,360 --> 00:20:15,919
any peering connection which is created

588
00:20:15,919 --> 00:20:17,679
you want to know that like at that

589
00:20:17,679 --> 00:20:19,440
moment itself so this is the reason we

590
00:20:19,440 --> 00:20:22,000
kind of added this check so any bearing

591
00:20:22,000 --> 00:20:23,600
connection created in your aws

592
00:20:23,600 --> 00:20:26,640
environment will be alerting it for you

593
00:20:26,640 --> 00:20:28,000
and then again this can be used as a

594
00:20:28,000 --> 00:20:30,720
data exploration method in um by any

595
00:20:30,720 --> 00:20:32,880
protectors

596
00:20:32,880 --> 00:20:34,720
and let us talk about now the security

597
00:20:34,720 --> 00:20:36,320
group now this is again a very common

598
00:20:36,320 --> 00:20:37,600
way for

599
00:20:37,600 --> 00:20:40,480
a common way for uh making things public

600
00:20:40,480 --> 00:20:43,360
right you just attach a public in like

601
00:20:43,360 --> 00:20:45,679
internet accessible security group to

602
00:20:45,679 --> 00:20:47,840
any your resource this becomes public so

603
00:20:47,840 --> 00:20:49,600
you don't want that to happen as well

604
00:20:49,600 --> 00:20:50,320
right

605
00:20:50,320 --> 00:20:52,400
so this can be this

606
00:20:52,400 --> 00:20:53,919
there might be cases where you might be

607
00:20:53,919 --> 00:20:55,520
hosting something very private and then

608
00:20:55,520 --> 00:20:58,080
this by mistakenly is accessible to

609
00:20:58,080 --> 00:21:00,320
public so this is why we added this

610
00:21:00,320 --> 00:21:03,120
particular rule to detect these cases

611
00:21:03,120 --> 00:21:05,039
so next we have associating private

612
00:21:05,039 --> 00:21:06,960
subnet with public route table the

613
00:21:06,960 --> 00:21:09,360
reason of doing this was we don't want

614
00:21:09,360 --> 00:21:11,520
any private subnet to indirectly go

615
00:21:11,520 --> 00:21:13,360
public right so this is basically making

616
00:21:13,360 --> 00:21:15,120
the private subnet public which we want

617
00:21:15,120 --> 00:21:17,200
to avoid and hence the reason of

618
00:21:17,200 --> 00:21:18,880
including this because this can be used

619
00:21:18,880 --> 00:21:21,520
as a data excel method by attackers

620
00:21:21,520 --> 00:21:24,159
and lastly we have unrealistic instant

621
00:21:24,159 --> 00:21:26,320
size creation so what do i mean by this

622
00:21:26,320 --> 00:21:27,200
is

623
00:21:27,200 --> 00:21:29,520
you as your organization are not using c

624
00:21:29,520 --> 00:21:30,960
like c

625
00:21:30,960 --> 00:21:33,440
like c series of uh instances right

626
00:21:33,440 --> 00:21:35,440
which are like 96 codes or it's nine to

627
00:21:35,440 --> 00:21:36,480
six

628
00:21:36,480 --> 00:21:38,559
or you know in tvs of gbs you are not

629
00:21:38,559 --> 00:21:40,559
using it and then someone randomly comes

630
00:21:40,559 --> 00:21:42,480
and creates multiple of those instances

631
00:21:42,480 --> 00:21:44,720
you want to be alerted about that and

632
00:21:44,720 --> 00:21:47,440
hence we have a we have a

633
00:21:47,440 --> 00:21:49,679
alerting mechanism which will alert you

634
00:21:49,679 --> 00:21:51,360
for any instance which is created in

635
00:21:51,360 --> 00:21:53,520
your organization as well as you can

636
00:21:53,520 --> 00:21:55,600
tune it in case you want a threshold

637
00:21:55,600 --> 00:21:57,440
like say for instance

638
00:21:57,440 --> 00:21:59,440
if the person creates an instant size

639
00:21:59,440 --> 00:22:01,919
which is greater than this you alert so

640
00:22:01,919 --> 00:22:04,720
this this behavior is possible as well

641
00:22:04,720 --> 00:22:06,400
this is highly configurable this is all

642
00:22:06,400 --> 00:22:08,000
up to you on how you want to take

643
00:22:08,000 --> 00:22:10,640
advantage of it

644
00:22:10,640 --> 00:22:13,440
so lastly we have a very uh we have

645
00:22:13,440 --> 00:22:16,880
about databases so now uh case you can

646
00:22:16,880 --> 00:22:18,720
think of is you have an unknown db

647
00:22:18,720 --> 00:22:20,640
snapshot which was created

648
00:22:20,640 --> 00:22:22,720
now you do not know it or you did not do

649
00:22:22,720 --> 00:22:24,559
it and it is being shared by some random

650
00:22:24,559 --> 00:22:26,080
account which you don't want so

651
00:22:26,080 --> 00:22:27,919
basically you want to know that as well

652
00:22:27,919 --> 00:22:30,080
right when that snapshot is created you

653
00:22:30,080 --> 00:22:31,120
want to know

654
00:22:31,120 --> 00:22:33,200
so this is the reason we included this

655
00:22:33,200 --> 00:22:35,600
as well so any snapshot created you will

656
00:22:35,600 --> 00:22:37,600
get an alert so this can be used for

657
00:22:37,600 --> 00:22:39,840
data exfiltration or unauthorized access

658
00:22:39,840 --> 00:22:42,159
to sensitive databases

659
00:22:42,159 --> 00:22:44,880
lastly the very classic uh mistake which

660
00:22:44,880 --> 00:22:47,200
is generally happening is making the

661
00:22:47,200 --> 00:22:49,440
production or any important

662
00:22:49,440 --> 00:22:50,880
database public

663
00:22:50,880 --> 00:22:53,280
so this will cover that as well so

664
00:22:53,280 --> 00:22:55,840
anyone creating a database by which is

665
00:22:55,840 --> 00:22:59,120
public will be detected or any database

666
00:22:59,120 --> 00:23:00,640
which was initially private and went

667
00:23:00,640 --> 00:23:02,960
public later on will be detected as well

668
00:23:02,960 --> 00:23:04,480
so you will have a brief uh you will

669
00:23:04,480 --> 00:23:06,960
have an overview on the on any of the

670
00:23:06,960 --> 00:23:08,720
infrastructure related data this is

671
00:23:08,720 --> 00:23:11,120
going public

672
00:23:11,120 --> 00:23:13,280
so this was some of the scenarios which

673
00:23:13,280 --> 00:23:15,600
were covered by dial now let us talk

674
00:23:15,600 --> 00:23:17,840
about the real-time thing right like how

675
00:23:17,840 --> 00:23:20,320
do you see it so we'll talk bills i will

676
00:23:20,320 --> 00:23:22,000
show you a small demo of hell how it

677
00:23:22,000 --> 00:23:24,159
works and those things

678
00:23:24,159 --> 00:23:27,360
so very first we have some snapshots

679
00:23:27,360 --> 00:23:29,679
which will give you an overview of tile

680
00:23:29,679 --> 00:23:31,440
so if you have a look at this this

681
00:23:31,440 --> 00:23:33,039
basically this alert says that the

682
00:23:33,039 --> 00:23:35,360
spearing connection this is the peering

683
00:23:35,360 --> 00:23:37,840
id and was created with some random

684
00:23:37,840 --> 00:23:40,559
account and it was with my dev account

685
00:23:40,559 --> 00:23:42,240
and this is not me right this random

686
00:23:42,240 --> 00:23:45,039
account i do not own so i want to know

687
00:23:45,039 --> 00:23:46,880
uh who created this

688
00:23:46,880 --> 00:23:49,440
which peering connection it was created

689
00:23:49,440 --> 00:23:52,159
to and what was the ip of the person who

690
00:23:52,159 --> 00:23:53,360
did that

691
00:23:53,360 --> 00:23:55,039
this basically answers all your

692
00:23:55,039 --> 00:23:57,760
questions uh you get the initiator the

693
00:23:57,760 --> 00:24:00,000
source and fee the location as well and

694
00:24:00,000 --> 00:24:01,600
the peering options which are used

695
00:24:01,600 --> 00:24:03,120
during the creation

696
00:24:03,120 --> 00:24:05,600
next we have admin policy creation

697
00:24:05,600 --> 00:24:07,440
now this is basically telling you that

698
00:24:07,440 --> 00:24:09,760
admin policy has been created and this

699
00:24:09,760 --> 00:24:11,440
is the person who actually created it

700
00:24:11,440 --> 00:24:13,679
the source id and the location

701
00:24:13,679 --> 00:24:16,000
so this might not be interesting

702
00:24:16,000 --> 00:24:17,760
for you in dev environment but you

703
00:24:17,760 --> 00:24:19,520
definitely want to keep track of it in

704
00:24:19,520 --> 00:24:20,960
plot

705
00:24:20,960 --> 00:24:22,640
so this is one case

706
00:24:22,640 --> 00:24:25,120
next we have security group so in this

707
00:24:25,120 --> 00:24:26,880
particular case what happened is this

708
00:24:26,880 --> 00:24:28,880
particular security group

709
00:24:28,880 --> 00:24:30,880
this particular security group id was

710
00:24:30,880 --> 00:24:33,120
added a new rule saying that internet

711
00:24:33,120 --> 00:24:36,000
can access port 22. you want

712
00:24:36,000 --> 00:24:38,159
not you want that to be detected and not

713
00:24:38,159 --> 00:24:40,320
happen again so hence this is going to

714
00:24:40,320 --> 00:24:41,840
detect that as well

715
00:24:41,840 --> 00:24:44,080
just come to come to the dial screen and

716
00:24:44,080 --> 00:24:45,120
then you see

717
00:24:45,120 --> 00:24:47,039
the initiator which person actually did

718
00:24:47,039 --> 00:24:49,039
that and the source ip and what he did

719
00:24:49,039 --> 00:24:51,440
exactly

720
00:24:51,679 --> 00:24:54,640
and lastly the classic rds instance

721
00:24:54,640 --> 00:24:57,520
going public so this person this uh this

722
00:24:57,520 --> 00:24:59,440
particular initiator created a rds

723
00:24:59,440 --> 00:25:01,679
instance publicly you are going to know

724
00:25:01,679 --> 00:25:03,279
the name of the instance which was being

725
00:25:03,279 --> 00:25:05,279
created the source ip from where that

726
00:25:05,279 --> 00:25:07,120
particular person did that

727
00:25:07,120 --> 00:25:09,279
like all the basic answers are being

728
00:25:09,279 --> 00:25:10,240
answered

729
00:25:10,240 --> 00:25:11,520
all the basic questions are being

730
00:25:11,520 --> 00:25:14,320
answered by this particular

731
00:25:14,320 --> 00:25:17,200
so yeah this was a snapshot

732
00:25:17,200 --> 00:25:20,000
of alerts now let us get a live

733
00:25:20,000 --> 00:25:22,159
so over here we are actually making the

734
00:25:22,159 --> 00:25:23,760
database public

735
00:25:23,760 --> 00:25:26,799
so we'll be creating a mysql database

736
00:25:26,799 --> 00:25:30,240
and making it public

737
00:25:30,240 --> 00:25:34,320
so let us wait for the creation

738
00:25:37,600 --> 00:25:40,080
so this this public access this is done

739
00:25:40,080 --> 00:25:42,799
yes so this is not public

740
00:25:42,799 --> 00:25:45,840
once the moment the creation is done

741
00:25:45,840 --> 00:25:47,600
you will get an alert on slack saying

742
00:25:47,600 --> 00:25:49,679
that hey this database is public look at

743
00:25:49,679 --> 00:25:50,720
it

744
00:25:50,720 --> 00:25:53,120
so yeah this very moment you got an

745
00:25:53,120 --> 00:25:55,520
alert which kind of explains that this

746
00:25:55,520 --> 00:25:56,480
particular

747
00:25:56,480 --> 00:25:58,880
database has been public

748
00:25:58,880 --> 00:26:00,880
this is the person who made it public

749
00:26:00,880 --> 00:26:02,559
and this is the ip of the person who

750
00:26:02,559 --> 00:26:04,159
made it public

751
00:26:04,159 --> 00:26:05,840
so basically now the soft team knows

752
00:26:05,840 --> 00:26:07,360
right this is the moment this happened

753
00:26:07,360 --> 00:26:09,039
and this is the guy who did that so tell

754
00:26:09,039 --> 00:26:11,200
them to make it private or just delete

755
00:26:11,200 --> 00:26:12,159
it

756
00:26:12,159 --> 00:26:14,559
so this is one thing

757
00:26:14,559 --> 00:26:16,799
uh

758
00:26:17,919 --> 00:26:19,919
so similarly i will be also covering

759
00:26:19,919 --> 00:26:22,159
some other use cases now in case if

760
00:26:22,159 --> 00:26:24,960
anyone goes ahead and deletes a db

761
00:26:24,960 --> 00:26:27,840
they will be alerted for that as well so

762
00:26:27,840 --> 00:26:29,840
we'll be keeping track of any deletions

763
00:26:29,840 --> 00:26:31,760
which happens in production environment

764
00:26:31,760 --> 00:26:33,440
so you don't want any random deletion

765
00:26:33,440 --> 00:26:35,200
happening so that is the reason of

766
00:26:35,200 --> 00:26:37,360
alerting for deletions you can actually

767
00:26:37,360 --> 00:26:39,200
remove this if the if you feel that this

768
00:26:39,200 --> 00:26:41,200
is not worth your time

769
00:26:41,200 --> 00:26:42,960
like you can remove this particular

770
00:26:42,960 --> 00:26:44,559
event which triggers that particular

771
00:26:44,559 --> 00:26:46,080
alert

772
00:26:46,080 --> 00:26:48,159
so now we are going to create a random

773
00:26:48,159 --> 00:26:53,600
admin policy uh with admin privileges so

774
00:26:53,600 --> 00:26:56,240
uh this is the admin policy and then

775
00:26:56,240 --> 00:26:59,120
we'll have a new action item on start

776
00:26:59,120 --> 00:27:01,679
so this now gives full access to

777
00:27:01,679 --> 00:27:04,240
the aws account

778
00:27:04,240 --> 00:27:06,799
um we'll create it and the moment it is

779
00:27:06,799 --> 00:27:08,799
created it is like

780
00:27:08,799 --> 00:27:11,279
very instantly detected and then deleted

781
00:27:11,279 --> 00:27:14,320
as well because this the demo is uh

782
00:27:14,320 --> 00:27:16,240
given assuming that this is a production

783
00:27:16,240 --> 00:27:18,080
account and then we don't want any

784
00:27:18,080 --> 00:27:20,000
random person to create an admin policy

785
00:27:20,000 --> 00:27:21,200
over here

786
00:27:21,200 --> 00:27:24,240
so let us let us explain the alerts

787
00:27:24,240 --> 00:27:25,360
right uh

788
00:27:25,360 --> 00:27:28,080
sir i'll just make it full screen now

789
00:27:28,080 --> 00:27:31,440
so yeah now let us explain the alerts so

790
00:27:31,440 --> 00:27:33,840
the first very first alert is admin

791
00:27:33,840 --> 00:27:36,240
policy being created and then we have

792
00:27:36,240 --> 00:27:38,399
the admin policy deleted so this

793
00:27:38,399 --> 00:27:39,919
basically tells everything that this

794
00:27:39,919 --> 00:27:41,840
particular user was the one who created

795
00:27:41,840 --> 00:27:44,159
the admin policy this was his ip and

796
00:27:44,159 --> 00:27:46,399
this was the name of admin policy

797
00:27:46,399 --> 00:27:49,039
at the last the last alert is the admin

798
00:27:49,039 --> 00:27:50,720
policy being deleted

799
00:27:50,720 --> 00:27:52,880
what was the policy arn the policy name

800
00:27:52,880 --> 00:27:55,039
and the person who deleted that admin

801
00:27:55,039 --> 00:27:57,279
policy so this is basically giving you a

802
00:27:57,279 --> 00:27:59,360
brief overview of about all the events

803
00:27:59,360 --> 00:28:01,360
and similarly we have an rds instance

804
00:28:01,360 --> 00:28:03,840
getting deleted

805
00:28:07,520 --> 00:28:10,159
yeah so similarly as mentioned right we

806
00:28:10,159 --> 00:28:12,080
want to detect the deletion of resource

807
00:28:12,080 --> 00:28:13,840
resources as well so this is one of the

808
00:28:13,840 --> 00:28:16,159
use case you know the initiator or the

809
00:28:16,159 --> 00:28:18,159
person who related the source id and the

810
00:28:18,159 --> 00:28:20,480
database name which was being created

811
00:28:20,480 --> 00:28:22,559
this is just a small gist of what i just

812
00:28:22,559 --> 00:28:24,720
did you have tons of services over here

813
00:28:24,720 --> 00:28:25,600
and

814
00:28:25,600 --> 00:28:27,440
you can get very interesting results out

815
00:28:27,440 --> 00:28:30,399
of it

816
00:28:30,399 --> 00:28:32,880
so this is what our future roadmap looks

817
00:28:32,880 --> 00:28:33,600
like

818
00:28:33,600 --> 00:28:36,080
we want to add multi-cloud capabilities

819
00:28:36,080 --> 00:28:39,039
uh so that you don't have to uh

820
00:28:39,039 --> 00:28:41,200
you're not restricted to aws you can

821
00:28:41,200 --> 00:28:42,799
just go ahead and keep your child

822
00:28:42,799 --> 00:28:45,440
control in any cloud environment whether

823
00:28:45,440 --> 00:28:48,240
it be azure gcp or aws

824
00:28:48,240 --> 00:28:49,760
we are also planning to add more

825
00:28:49,760 --> 00:28:51,840
additional services aws services we are

826
00:28:51,840 --> 00:28:53,440
researching on them and then looking

827
00:28:53,440 --> 00:28:54,480
over the

828
00:28:54,480 --> 00:28:58,240
abuse cases which attacker can abuse uh

829
00:28:58,240 --> 00:29:00,880
next we are looked we are developing uh

830
00:29:00,880 --> 00:29:02,960
event bus so that you don't have to sit

831
00:29:02,960 --> 00:29:05,279
and configure multiple

832
00:29:05,279 --> 00:29:07,600
even even bridge in multiple regions you

833
00:29:07,600 --> 00:29:09,200
just need a single event bus which will

834
00:29:09,200 --> 00:29:11,039
forward the events from multiple region

835
00:29:11,039 --> 00:29:12,399
to a single region

836
00:29:12,399 --> 00:29:13,840
so this will kind of

837
00:29:13,840 --> 00:29:16,399
help you out in decreasing the

838
00:29:16,399 --> 00:29:19,360
complexity of the installation

839
00:29:19,360 --> 00:29:21,840
so next the limitation capabilities we

840
00:29:21,840 --> 00:29:24,159
want to increase so as you saw the iem

841
00:29:24,159 --> 00:29:26,320
policy the admin i am policy which was

842
00:29:26,320 --> 00:29:28,480
created was automatically deleted

843
00:29:28,480 --> 00:29:31,039
similarly we want to add more such uh

844
00:29:31,039 --> 00:29:33,760
use cases to this particular tile

845
00:29:33,760 --> 00:29:36,480
so we are planning to then add as well

846
00:29:36,480 --> 00:29:38,640
and finally the most important thing is

847
00:29:38,640 --> 00:29:40,640
we are planning to make it uh open

848
00:29:40,640 --> 00:29:42,640
source very soon so that the community

849
00:29:42,640 --> 00:29:45,840
can take advantage of it

850
00:29:47,039 --> 00:29:49,600
and thank you this is all we had uh if

851
00:29:49,600 --> 00:29:52,320
you have any questions let us know

852
00:29:52,320 --> 00:29:54,480
thanks once again divyanshu uh i'm

853
00:29:54,480 --> 00:29:56,240
giving the slide over to the

854
00:29:56,240 --> 00:29:58,320
presentation present as well thank you

855
00:29:58,320 --> 00:30:00,720
guys thank you gentlemen thank you for

856
00:30:00,720 --> 00:30:03,039
the presentation thank you

857
00:30:03,039 --> 00:30:06,000
for joining us and being a part of

858
00:30:06,000 --> 00:30:07,360
our conference

859
00:30:07,360 --> 00:30:11,039
please stand by for some questions

860
00:30:11,039 --> 00:30:13,200
normally it takes a couple of minutes

861
00:30:13,200 --> 00:30:14,799
for people to

862
00:30:14,799 --> 00:30:17,039
have the information

863
00:30:17,039 --> 00:30:20,640
sunk in and processed and uh yeah to

864
00:30:20,640 --> 00:30:22,640
come up with some

865
00:30:22,640 --> 00:30:23,760
inquiries

866
00:30:23,760 --> 00:30:26,320
we have a lot of cheering

867
00:30:26,320 --> 00:30:30,720
uh based on my knowledge of uh

868
00:30:30,799 --> 00:30:33,039
uh

869
00:30:33,360 --> 00:30:36,080
of your of your guys national names

870
00:30:36,080 --> 00:30:38,480
these these are all your fans right you

871
00:30:38,480 --> 00:30:41,120
have you have invited a lot of a lot of

872
00:30:41,120 --> 00:30:42,720
support

873
00:30:42,720 --> 00:30:44,480
people yeah one of them

874
00:30:44,480 --> 00:30:45,679
for you

875
00:30:45,679 --> 00:30:48,399
yeah that's great that's great it's so

876
00:30:48,399 --> 00:30:49,600
yeah

877
00:30:49,600 --> 00:30:51,520
it's very it's very nice very nice to

878
00:30:51,520 --> 00:30:53,440
have such support base

879
00:30:53,440 --> 00:30:55,600
guys you if you hear us this is really

880
00:30:55,600 --> 00:30:58,159
impressive it's it's it's cool that you

881
00:30:58,159 --> 00:30:59,919
support your speakers

882
00:30:59,919 --> 00:31:02,399
uh but it would be even more

883
00:31:02,399 --> 00:31:03,200
uh

884
00:31:03,200 --> 00:31:04,799
awesome if you

885
00:31:04,799 --> 00:31:07,279
post some questions please do it in the

886
00:31:07,279 --> 00:31:09,440
chat in live stream

887
00:31:09,440 --> 00:31:12,460
and if you are here in zoom and want to

888
00:31:12,460 --> 00:31:14,320
[Music]

889
00:31:14,320 --> 00:31:17,039
ask a question out loud please raise

890
00:31:17,039 --> 00:31:19,440
your hand and i will give you a virtual

891
00:31:19,440 --> 00:31:21,840
microphone

892
00:31:21,840 --> 00:31:24,559
or you can just type your question into

893
00:31:24,559 --> 00:31:27,679
q a section or write in the chat and we

894
00:31:27,679 --> 00:31:31,240
will address it

895
00:31:34,240 --> 00:31:37,519
okay then i will have some holy war

896
00:31:37,519 --> 00:31:38,480
uh

897
00:31:38,480 --> 00:31:40,320
inflammatory

898
00:31:40,320 --> 00:31:42,000
question

899
00:31:42,000 --> 00:31:43,679
while we are waiting

900
00:31:43,679 --> 00:31:45,679
just from your perspective having all

901
00:31:45,679 --> 00:31:47,760
this experience working with the

902
00:31:47,760 --> 00:31:50,240
different types of clouds

903
00:31:50,240 --> 00:31:52,640
uh what do you think is the good

904
00:31:52,640 --> 00:31:54,640
platform for

905
00:31:54,640 --> 00:31:55,840
security

906
00:31:55,840 --> 00:31:58,320
yeah for a company that wants to go all

907
00:31:58,320 --> 00:32:01,200
zero trust all beyond core pe from day

908
00:32:01,200 --> 00:32:02,320
one

909
00:32:02,320 --> 00:32:05,200
what's the best public cloud to choose

910
00:32:05,200 --> 00:32:06,720
and not too great

911
00:32:06,720 --> 00:32:08,960
yeah yeah i i would go with aws because

912
00:32:08,960 --> 00:32:12,000
aws is actually nowadays into a lot of

913
00:32:12,000 --> 00:32:14,000
development into the side of security

914
00:32:14,000 --> 00:32:14,960
side

915
00:32:14,960 --> 00:32:17,440
and i think like aws also has a lot of

916
00:32:17,440 --> 00:32:19,519
documentation for even for the zero down

917
00:32:19,519 --> 00:32:21,600
business who want to start security and

918
00:32:21,600 --> 00:32:24,000
even development on top of aws so i

919
00:32:24,000 --> 00:32:26,320
think aws would be one stop solution for

920
00:32:26,320 --> 00:32:28,640
anybody i think

921
00:32:28,640 --> 00:32:30,480
that that's my viewpoint yeah

922
00:32:30,480 --> 00:32:32,799
i want to i wanted you to say it because

923
00:32:32,799 --> 00:32:35,600
yeah it's like honey to my ears

924
00:32:35,600 --> 00:32:37,600
that was my choice one day

925
00:32:37,600 --> 00:32:40,000
and i'm really glad that i i chose i

926
00:32:40,000 --> 00:32:41,840
chose that because

927
00:32:41,840 --> 00:32:44,000
sometimes you even feel like it's too

928
00:32:44,000 --> 00:32:44,799
much

929
00:32:44,799 --> 00:32:45,600
it's

930
00:32:45,600 --> 00:32:47,200
too much different

931
00:32:47,200 --> 00:32:49,120
ways to do some other to achieve some

932
00:32:49,120 --> 00:32:51,360
other security goals and you just do not

933
00:32:51,360 --> 00:32:52,799
do not keep up

934
00:32:52,799 --> 00:32:55,360
yeah and you you have to like learn

935
00:32:55,360 --> 00:32:57,440
constantly and continuously

936
00:32:57,440 --> 00:32:58,960
which may be a good thing but when you

937
00:32:58,960 --> 00:33:00,960
get older you just don't have time for

938
00:33:00,960 --> 00:33:02,399
all of that

939
00:33:02,399 --> 00:33:04,000
uh okay

940
00:33:04,000 --> 00:33:06,399
any questions any what what do you think

941
00:33:06,399 --> 00:33:09,120
is is the best choice for like if you

942
00:33:09,120 --> 00:33:12,320
already have aws account and you want to

943
00:33:12,320 --> 00:33:14,880
but you never paid a lot of attention to

944
00:33:14,880 --> 00:33:17,440
such things as uh hardening and security

945
00:33:17,440 --> 00:33:19,360
configuration and monitoring and

946
00:33:19,360 --> 00:33:21,440
alerting and all that kind of stuff

947
00:33:21,440 --> 00:33:24,320
but you want to start from somewhere

948
00:33:24,320 --> 00:33:26,720
what would you recommend people doing

949
00:33:26,720 --> 00:33:30,559
like step one step two step three

950
00:33:30,559 --> 00:33:33,039
okay so the first step i would recommend

951
00:33:33,039 --> 00:33:35,360
is that uh just go on with the basics

952
00:33:35,360 --> 00:33:36,960
first of all about the all the kind of

953
00:33:36,960 --> 00:33:39,360
resources that we have i mean we

954
00:33:39,360 --> 00:33:40,880
shouldn't actually just run around the

955
00:33:40,880 --> 00:33:42,240
environment and start spinning up

956
00:33:42,240 --> 00:33:44,080
resources just like that i mean if you

957
00:33:44,080 --> 00:33:45,840
don't have any sort of background

958
00:33:45,840 --> 00:33:48,000
knowledge about it so once you have the

959
00:33:48,000 --> 00:33:49,200
background knowledge you get to

960
00:33:49,200 --> 00:33:51,360
understand the main perspective on how

961
00:33:51,360 --> 00:33:52,960
it works and at the same time how

962
00:33:52,960 --> 00:33:55,440
security perspective comes on top of it

963
00:33:55,440 --> 00:33:57,760
so i think uh going on top of like just

964
00:33:57,760 --> 00:33:59,440
the basics of all the resources would be

965
00:33:59,440 --> 00:34:00,960
the best place

966
00:34:00,960 --> 00:34:02,799
and eventually then moving on to other

967
00:34:02,799 --> 00:34:04,799
security services that is provided by

968
00:34:04,799 --> 00:34:06,960
aws

969
00:34:06,960 --> 00:34:09,760
nice nice but regarding some benchmark

970
00:34:09,760 --> 00:34:11,599
some good advice like

971
00:34:11,599 --> 00:34:14,079
i don't know not press a button and get

972
00:34:14,079 --> 00:34:17,839
security but something really really

973
00:34:17,839 --> 00:34:20,320
non-expert level is there anything there

974
00:34:20,320 --> 00:34:23,359
sure is some kind of cis benchmark for

975
00:34:23,359 --> 00:34:25,599
aw yes i'm sure there is there is for

976
00:34:25,599 --> 00:34:27,520
everything and but it's it's trivial

977
00:34:27,520 --> 00:34:29,119
answer you know we all know that there

978
00:34:29,119 --> 00:34:30,399
is a cv

979
00:34:30,399 --> 00:34:33,679
cis pdf forever

980
00:34:33,679 --> 00:34:36,399
yeah but maybe something else

981
00:34:36,399 --> 00:34:38,239
um

982
00:34:38,239 --> 00:34:40,079
you you guys can go ahead with the cloud

983
00:34:40,079 --> 00:34:42,320
code environment right you can start

984
00:34:42,320 --> 00:34:44,480
testing out different things flaws.cloud

985
00:34:44,480 --> 00:34:47,520
cloud and cloud code and i think

986
00:34:47,520 --> 00:34:49,520
is actually you know reiterating their

987
00:34:49,520 --> 00:34:51,359
versions for testing out different sort

988
00:34:51,359 --> 00:34:56,078
of scenarios for testing things on aws

989
00:34:57,280 --> 00:34:58,640
yeah thanks that's a good suggestion

990
00:34:58,640 --> 00:35:02,359
claudio is cool

991
00:35:02,800 --> 00:35:04,000
okay

992
00:35:04,000 --> 00:35:06,079
still a lot of cheering no questions

993
00:35:06,079 --> 00:35:08,400
what's going on guys

994
00:35:08,400 --> 00:35:12,000
why am i the only one posing questions

995
00:35:12,000 --> 00:35:13,280
that's not

996
00:35:13,280 --> 00:35:15,760
not what i am here for

997
00:35:15,760 --> 00:35:17,359
make my work

998
00:35:17,359 --> 00:35:21,040
easier come on ask questions

999
00:35:21,040 --> 00:35:23,520
nothing

1000
00:35:26,000 --> 00:35:28,480
yeah normally it signifies that you were

1001
00:35:28,480 --> 00:35:31,119
overly descriptive in your talk there is

1002
00:35:31,119 --> 00:35:32,160
everything

1003
00:35:32,160 --> 00:35:34,800
clear and uh yeah and there is no

1004
00:35:34,800 --> 00:35:37,040
ambiguity i could give you this will

1005
00:35:37,040 --> 00:35:37,920
follow

1006
00:35:37,920 --> 00:35:38,720
yeah

1007
00:35:38,720 --> 00:35:40,800
yeah yeah this was quite descriptive and

1008
00:35:40,800 --> 00:35:42,640
quite informative

1009
00:35:42,640 --> 00:35:43,520
uh

1010
00:35:43,520 --> 00:35:47,440
okay then let's uh no we have a question

1011
00:35:47,440 --> 00:35:49,200
right we have a question

1012
00:35:49,200 --> 00:35:51,839
uh can dial be integrated with all cloud

1013
00:35:51,839 --> 00:35:53,839
providers not only

1014
00:35:53,839 --> 00:35:54,880
also

1015
00:35:54,880 --> 00:35:56,720
so currently we are looking forward with

1016
00:35:56,720 --> 00:35:58,880
multi-cloud architecture so we are

1017
00:35:58,880 --> 00:36:00,880
currently researching on integrating it

1018
00:36:00,880 --> 00:36:02,079
with gcp

1019
00:36:02,079 --> 00:36:04,480
and azure right now but currently it's

1020
00:36:04,480 --> 00:36:07,040
only for aws

1021
00:36:07,040 --> 00:36:08,240
okay

1022
00:36:08,240 --> 00:36:09,839
how hard would it be

1023
00:36:09,839 --> 00:36:11,599
like i know that scout suite for

1024
00:36:11,599 --> 00:36:13,280
instance yeah it gives a lot of

1025
00:36:13,280 --> 00:36:15,200
information about aws but when you run

1026
00:36:15,200 --> 00:36:18,079
it in azure or gcp it just

1027
00:36:18,079 --> 00:36:19,599
it gives only

1028
00:36:19,599 --> 00:36:21,599
limited results i would say

1029
00:36:21,599 --> 00:36:23,680
it's still a cool tool when you use aws

1030
00:36:23,680 --> 00:36:26,000
but for other cloud providers it's uh

1031
00:36:26,000 --> 00:36:28,640
it's its value is limited

1032
00:36:28,640 --> 00:36:31,119
but how hard it is is it

1033
00:36:31,119 --> 00:36:32,960
to do something

1034
00:36:32,960 --> 00:36:35,040
a really cross platform because in my

1035
00:36:35,040 --> 00:36:36,880
imagination it's virtually impossible

1036
00:36:36,880 --> 00:36:38,800
already they are too different

1037
00:36:38,800 --> 00:36:41,040
right right so basically i think like

1038
00:36:41,040 --> 00:36:43,119
the concept that we told about the child

1039
00:36:43,119 --> 00:36:44,480
controller and the parent controller

1040
00:36:44,480 --> 00:36:45,280
right

1041
00:36:45,280 --> 00:36:47,599
so what sort of the idea that we're

1042
00:36:47,599 --> 00:36:48,960
planning on moving forward with the

1043
00:36:48,960 --> 00:36:50,800
multi-cloud architecture is that we'll

1044
00:36:50,800 --> 00:36:52,560
be deploying these child controllers on

1045
00:36:52,560 --> 00:36:55,200
other cloud platforms so let's say there

1046
00:36:55,200 --> 00:36:56,800
is a gcp platform that you want to

1047
00:36:56,800 --> 00:36:58,880
deploy it on for an azure platform that

1048
00:36:58,880 --> 00:37:00,880
you want to deploy it on and post that

1049
00:37:00,880 --> 00:37:03,280
what we'll do is we can or send out all

1050
00:37:03,280 --> 00:37:05,920
the alerts or all the sort of events or

1051
00:37:05,920 --> 00:37:07,440
messages into one single parent

1052
00:37:07,440 --> 00:37:08,720
controller

1053
00:37:08,720 --> 00:37:10,800
on that basis that parent controller can

1054
00:37:10,800 --> 00:37:12,720
be said sitting on top of any sort of

1055
00:37:12,720 --> 00:37:14,480
platform that you want

1056
00:37:14,480 --> 00:37:18,240
so that is the one way moving forward

1057
00:37:19,200 --> 00:37:20,839
seems like a credible

1058
00:37:20,839 --> 00:37:23,359
idea it might work

1059
00:37:23,359 --> 00:37:24,960
oh just

1060
00:37:24,960 --> 00:37:28,320
i i just wish you guys don't have uh

1061
00:37:28,320 --> 00:37:30,079
you you scale well and have enough

1062
00:37:30,079 --> 00:37:32,079
contributors not to be burdened with all

1063
00:37:32,079 --> 00:37:32,880
the

1064
00:37:32,880 --> 00:37:35,599
maintenance cost that comes with that

1065
00:37:35,599 --> 00:37:38,800
crosstalk forminess yeah

1066
00:37:38,800 --> 00:37:41,119
it just yeah you you have to you have to

1067
00:37:41,119 --> 00:37:43,599
maintain their skills for that

1068
00:37:43,599 --> 00:37:45,520
you will need other maintainers right

1069
00:37:45,520 --> 00:37:47,920
experts in those particular classrooms

1070
00:37:47,920 --> 00:37:50,400
that's the like one of the push for open

1071
00:37:50,400 --> 00:37:53,440
sourcing it as well

1072
00:37:54,960 --> 00:37:57,440
yeah so oh everyone on the stream right

1073
00:37:57,440 --> 00:38:01,040
now and in the zoom if you want to join

1074
00:38:01,040 --> 00:38:02,800
if you want to join our speakers and

1075
00:38:02,800 --> 00:38:06,000
contribute to their work i think uh your

1076
00:38:06,000 --> 00:38:09,200
contributions will be welcome

1077
00:38:09,200 --> 00:38:10,160
yes

1078
00:38:10,160 --> 00:38:11,839
okay

1079
00:38:11,839 --> 00:38:14,400
yeah okay gentlemen then if we don't

1080
00:38:14,400 --> 00:38:15,960
have any more

1081
00:38:15,960 --> 00:38:19,200
questions i will thank you once again

1082
00:38:19,200 --> 00:38:21,839
for your contribution for being a part

1083
00:38:21,839 --> 00:38:24,320
of our conference thank you very much we

1084
00:38:24,320 --> 00:38:25,760
will get back to you regarding the

1085
00:38:25,760 --> 00:38:27,920
logistics of speaker packages and all

1086
00:38:27,920 --> 00:38:30,640
the rest and uh yeah good luck with your

1087
00:38:30,640 --> 00:38:34,240
project and please uh

1088
00:38:34,800 --> 00:38:37,920
please go on please keep up good work

1089
00:38:37,920 --> 00:38:39,520
what's your first pleasure being here

1090
00:38:39,520 --> 00:38:40,880
man pleasure

1091
00:38:40,880 --> 00:38:42,880
good luck good luck and see you see you

1092
00:38:42,880 --> 00:38:43,839
around

1093
00:38:43,839 --> 00:38:47,480
thanks a lot man

