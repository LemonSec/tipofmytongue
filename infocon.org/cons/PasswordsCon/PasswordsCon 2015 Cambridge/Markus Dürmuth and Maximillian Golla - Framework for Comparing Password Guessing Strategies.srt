1
00:00:02,950 --> 00:00:07,670
2010 for the hard part I'm heading over
to Maximilian this is greater slight

2
00:00:07,670 --> 00:00:10,820
doesn't say that here are two ruling
party brought home and the reduced to

3
00:00:10,820 --> 00:00:17,000
invest involved while the wonderful yes
we have been getting stuff already

4
00:00:17,000 --> 00:00:24,660
introduced so what all reviews about is
also I'm guessing you all are aware of

5
00:00:24,660 --> 00:00:29,770
what off-line password guessing is this
means you have some form of information

6
00:00:29,770 --> 00:00:34,260
for example a string or something else
that you can verify your password guess

7
00:00:34,260 --> 00:00:38,190
there's also a library computer which
means you are not restricted to a

8
00:00:38,190 --> 00:00:42,780
certain number of gases like for online
guessing that hurt to talks in advance

9
00:00:42,780 --> 00:00:48,350
wonderful so far off I'm guessing there
is a large number of tools available

10
00:00:48,350 --> 00:00:53,600
here are aware of that we heard many
examples mentioned before here during

11
00:00:53,600 --> 00:01:00,340
the talks as catch on the river probably
among the most famous ones and this huge

12
00:01:00,340 --> 00:01:06,149
number of available gathers mean that
can somebody sometimes be hard to decide

13
00:01:06,149 --> 00:01:12,439
which one is the right one for europe
application in order to compare those

14
00:01:12,439 --> 00:01:16,729
canisters I'll say something in the
second on on what metrics we're

15
00:01:16,729 --> 00:01:23,179
comparing on we just signed a framework
for comparing possible cancers and you

16
00:01:23,179 --> 00:01:28,799
are requesting feedback if you are
interested in that topic about what

17
00:01:28,799 --> 00:01:32,560
we're doing right what we are doing
wrong I would be great to get more

18
00:01:32,560 --> 00:01:37,439
information from the audience as an hour
later pretty mailbox immediately tell

19
00:01:37,439 --> 00:01:42,100
you more precisely what information if
you are interested in on one of the next

20
00:01:42,100 --> 00:01:47,800
flight so the basic question we are
trying to answer is well

21
00:01:47,800 --> 00:01:52,750
which tools better now that is a very
broad question and it might be pretty

22
00:01:52,750 --> 00:01:56,960
obvious that this question is very very
low post a number of problems I mean

23
00:01:56,960 --> 00:02:01,770
what does better mean that's mean by
data formats supported doesn't mean it's

24
00:02:01,770 --> 00:02:05,679
easier to use that's mean it's easier to
extend the bullshit running on GPUs

25
00:02:05,680 --> 00:02:11,100
FPGAs and ASICs whatever so that
question is not really helpful for water

26
00:02:11,100 --> 00:02:15,989
following let's try another question
which tool is faster this is slightly

27
00:02:15,990 --> 00:02:21,590
more precise still in question it's
faster on which hardware against which

28
00:02:21,590 --> 00:02:27,350
has training set which testing said too
many questions to answer and this is all

29
00:02:27,350 --> 00:02:32,269
just to illustrate that we are on the
next slide making some fundamental

30
00:02:32,270 --> 00:02:37,670
restrictions on what we are expecting
comparing and this is for motivating why

31
00:02:37,670 --> 00:02:42,940
we need to restrict quite drastically
and I wanna try to motivate the

32
00:02:42,940 --> 00:02:52,760
restrictions that we made so that you
are knowing what's going on so if we are

33
00:02:52,760 --> 00:02:59,320
stepping three or maybe even seven steps
backwards how'd us guessing right we are

34
00:02:59,320 --> 00:03:04,609
guessing a candidate we are verifying if
it matches the hash or whatever

35
00:03:04,610 --> 00:03:09,070
information we have also line and if it
doesn't then we repeat and do that as

36
00:03:09,070 --> 00:03:15,570
often as necessary to find password or a
string that metros de verification

37
00:03:15,570 --> 00:03:21,120
collection now this light also trivia
enough to earn a kicking and but the

38
00:03:21,120 --> 00:03:24,209
important thing in this is why I'm
showing that really simple slight here

39
00:03:24,209 --> 00:03:27,280
is we are interested in the first step

40
00:03:27,280 --> 00:03:34,560
overly so we are abstracting away of the
road closed required to computers and we

41
00:03:34,560 --> 00:03:37,180
are working on plain text

42
00:03:37,180 --> 00:03:43,350
clear text password lists we are
interested in how does the to generate a

43
00:03:43,350 --> 00:03:48,910
possible candidate is he doing that in
the ideal in one of the ideal in the

44
00:03:48,910 --> 00:03:51,690
best possible way and order

45
00:03:51,690 --> 00:03:57,109
and this still depends on enough
parameters to be interesting but this

46
00:03:57,110 --> 00:04:01,390
makes the question which to this faster
much more tractable than what we have

47
00:04:01,390 --> 00:04:10,429
seen two slides ago so that there are
also to defend that against the obvious

48
00:04:10,430 --> 00:04:15,810
criticism if you are restricting to the
number of guests made we are first of

49
00:04:15,810 --> 00:04:22,570
all and it's definitely on purpose
getting rid of the actual computation of

50
00:04:22,570 --> 00:04:26,480
the Hesh so we are not considering those
optimizations they are pretty much

51
00:04:26,480 --> 00:04:30,620
orthogonal to what we're doing here
there are some interesting cases in

52
00:04:30,620 --> 00:04:37,060
between where you cannot clearly
separate the speed up computer computing

53
00:04:37,060 --> 00:04:43,290
behesh function and the guestlist made
and those are corner cases like for

54
00:04:43,290 --> 00:04:47,490
example against story was attacked on
Shah one presented here

55
00:04:47,490 --> 00:04:55,290
2012 I believe and many similar things
also that require a specific order of

56
00:04:55,290 --> 00:04:59,880
the input fires in order to be able to
optimize better start a biz attack

57
00:04:59,880 --> 00:05:08,850
attack particularly required that only
the second right now that the first word

58
00:05:08,850 --> 00:05:12,870
of the first four characters did not
change and all the others are allowed to

59
00:05:12,870 --> 00:05:18,010
change so we are not capturing that by
measuring only a number of cases made

60
00:05:18,010 --> 00:05:25,510
also we are ignoring the speed of
actually generating the gases we are

61
00:05:25,510 --> 00:05:31,980
assuming that implicitly assuming that
our heads are slow enough so that

62
00:05:31,980 --> 00:05:36,300
basically everybody else doesn't really
matter who fly to accelerating of course

63
00:05:36,300 --> 00:05:40,870
we are still measuring how long the
generating tools are running but this is

64
00:05:40,870 --> 00:05:45,010
not our main concern we are mainly
concerned in the number of cases made

65
00:05:45,010 --> 00:05:54,130
second decision may meet objections we
are concentrating on fully automatic

66
00:05:54,130 --> 00:05:58,310
guessing so we are ignoring this

67
00:05:58,310 --> 00:06:03,240
ignoring but we are purposefully not
considering the fact that humans are

68
00:06:03,240 --> 00:06:10,690
known to loop are definitely helping in
improving the performance of papers from

69
00:06:10,690 --> 00:06:16,980
this year after the conference I believe
it actually measured that everyone

70
00:06:16,980 --> 00:06:22,410
everybody knew they meditated and they
showed yes a human can do better

71
00:06:22,410 --> 00:06:27,060
however first of all it's really hard to
measure that in an automatic trigger for

72
00:06:27,060 --> 00:06:34,090
the obvious reasons also what they
really required is that you are creating

73
00:06:34,090 --> 00:06:37,799
a number of passwords that are following
a somehow similar structurally than a

74
00:06:37,800 --> 00:06:42,920
human can like the structure and ended
up the rules are adopted casting process

75
00:06:42,920 --> 00:06:47,770
or whatever it needs to be done for
example if you're facing a single

76
00:06:47,770 --> 00:06:52,130
TrueCrypt volume and there's not a treat
but much feedback that you can use

77
00:06:52,130 --> 00:06:54,900
because you will never get a hit until
you have a hit and then you're done

78
00:06:54,900 --> 00:07:01,630
anyway so this should serve as a kind of
a motivation why fully automate it

79
00:07:01,630 --> 00:07:07,330
attacks are interesting and are worth
comparing and help you buy these

80
00:07:07,330 --> 00:07:11,590
arguments if not let us know after the
talk this is the kind of feedback that

81
00:07:11,590 --> 00:07:17,219
we are interested in and some other
design decisions that we tried to

82
00:07:17,220 --> 00:07:21,850
fulfill isn't going to have a framework
which is very flexible expandable we

83
00:07:21,850 --> 00:07:29,060
only 122 and also we did implement the
basic framework that should be the best

84
00:07:29,060 --> 00:07:34,040
of our knowledge extendable in all
directions that are sensible and that's

85
00:07:34,040 --> 00:07:37,070
one point where you are requesting treat
because well and it would of course be

86
00:07:37,070 --> 00:07:41,659
easy to use this is claimed by probably
everybody implementing a tool and we

87
00:07:41,660 --> 00:07:47,870
believe that we kind of the treated here
and as I said now that it gets

88
00:07:47,870 --> 00:07:53,290
interesting I'm heading over to
Maximilian and have fun with the rest of

89
00:07:53,290 --> 00:08:18,960
the presentation

90
00:08:18,960 --> 00:08:30,530
ok explain and just to recap we don't
want to compare guessing tools like

91
00:08:30,530 --> 00:08:34,809
trying the Ripper with hash can't we
want to compare the mode of operations

92
00:08:34,809 --> 00:08:41,659
or how are those passwords generator and
their motivation for this that password

93
00:08:41,659 --> 00:08:47,220
hashes getting slower overtime for
example in the current esli medicine

94
00:08:47,220 --> 00:08:53,170
that contains equipped has US attack is
no longer feasible so they need to be a

95
00:08:53,170 --> 00:08:59,079
smart approach and those algorithms that
generate passwords based on this we want

96
00:08:59,080 --> 00:09:04,740
to compare our framework to identify
which algorithm works best for what they

97
00:09:04,740 --> 00:09:11,500
tell you so our framework considers
different inputs we of course with

98
00:09:11,500 --> 00:09:16,380
existing password leaks like rock you'll
Yahoo and so on

99
00:09:16,380 --> 00:09:23,649
however we don't want to correct any
hashes so we work on plain text only

100
00:09:23,649 --> 00:09:30,970
we have implemented a model that we also
support hashed import but we trample do

101
00:09:30,970 --> 00:09:34,220
not test functionality out of the box to
save

102
00:09:34,220 --> 00:09:40,610
correctly correct password so we want to
compare the guessing performance and not

103
00:09:40,610 --> 00:09:47,720
crack passwords and of course make and
model for more complex in Port this

104
00:09:47,720 --> 00:09:53,910
might be an ethical issue however
current password leaks also contain

105
00:09:53,910 --> 00:10:01,469
sensitive information like the date of
birth and there are papers that say that

106
00:10:01,470 --> 00:10:07,890
this information can be quite useful to
generate any day it's based on this

107
00:10:07,890 --> 00:10:12,970
information as well so we support a
variety of input formats and this list

108
00:10:12,970 --> 00:10:18,390
is not limited and its flexible and can
be extended easily to EUR

109
00:10:18,390 --> 00:10:24,220
input from art course it also includes
the popular with count from art for

110
00:10:24,220 --> 00:10:30,560
months because it's very important to do
this probabilistic modeling to have the

111
00:10:30,560 --> 00:10:35,750
duplicate and the password leak and we
want to save storage on happy as can be

112
00:10:35,750 --> 00:10:40,080
used with Country Mart then we have an
integer stating how awesome this past

113
00:10:40,080 --> 00:10:45,100
winter quarters and then the password is
separated by a space for example our

114
00:10:45,100 --> 00:10:49,880
framework as already mentioned was
designed for ease of use and the most

115
00:10:49,880 --> 00:10:56,370
important factor automated execution so
if you develop a new password guess or

116
00:10:56,370 --> 00:11:01,550
improving existing one then you want to
run their variety of experiments to

117
00:11:01,550 --> 00:11:07,300
prevent overfitting right but you train
on a specific password leak until you

118
00:11:07,300 --> 00:11:11,790
prove that much that may be for another
user distribution for another post

119
00:11:11,790 --> 00:11:18,240
predict the performance decreases and as
I already mentioned if you provide and

120
00:11:18,240 --> 00:11:25,150
hashed input file then we need some sort
of cracking and and this is done by Anne

121
00:11:25,150 --> 00:11:26,560
Heche evaluator

122
00:11:26,560 --> 00:11:33,310
used for this reason and John drippin
community enhanced because it supports

123
00:11:33,310 --> 00:11:41,280
in my opinion the biggest list of input
formats so bitter biggest list of cash

124
00:11:41,280 --> 00:11:47,829
from our imports like I don't know be
crimped and the five and so on and at

125
00:11:47,830 --> 00:11:50,840
the end we get nice graphs

126
00:11:50,840 --> 00:11:58,320
35 they are easy to compare we have life
and interactive visualization of the

127
00:11:58,320 --> 00:12:04,190
current progress and we have static
grass that can be for example use paper

128
00:12:04,190 --> 00:12:11,660
so to be go into more detail our
framework consists of three modules

129
00:12:11,660 --> 00:12:18,650
starting with the preparation after the
execution model and analysis model and

130
00:12:18,650 --> 00:12:23,900
want to explain that a little bit in
more detail now so the preparation the

131
00:12:23,900 --> 00:12:30,329
first one just creates jobs based on
what you try to do so you imported

132
00:12:30,330 --> 00:12:34,860
training set to import the evaluation
said you input the number of cases

133
00:12:34,860 --> 00:12:41,150
required you want to test and all of
this chapter objectives generated this

134
00:12:41,150 --> 00:12:46,300
is followed a two-day execution model
the execution model of course needs this

135
00:12:46,300 --> 00:12:53,930
training said I just call it a password
leak together this cancer is the script

136
00:12:53,930 --> 00:13:00,160
record as a reference script as we need
to support even unknown guess I will

137
00:13:00,160 --> 00:13:05,790
explain it now and a little bit more
detail and based on weather in partisan

138
00:13:05,790 --> 00:13:11,439
in plain text files 01 password Pillai
and one-half per line then we have to

139
00:13:11,440 --> 00:13:16,390
separation zone in the first case it's
it's forwarded directly to our analysis

140
00:13:16,390 --> 00:13:23,370
module and then the other case we typed
the candidates and of course the

141
00:13:23,370 --> 00:13:30,310
evaluation set to turn the river and he
will do the comparison order tracking

142
00:13:30,310 --> 00:13:39,250
and then forwarded to our analysis
module so to establish still gets her

143
00:13:39,250 --> 00:13:45,120
represent crips to explain why they are
necessary I guess they represent crypt

144
00:13:45,120 --> 00:13:46,950
becomes

145
00:13:46,950 --> 00:13:52,450
or get the training file and the number
of gases as input and outputs to pass

146
00:13:52,450 --> 00:13:58,270
routes right so the most basic guess I
represent ripped off its simple echo

147
00:13:58,270 --> 00:14:05,500
123456 and that's it so dis rep escaped
only get us to the most likely password

148
00:14:05,500 --> 00:14:08,360
123456 and does nothing else

149
00:14:08,360 --> 00:14:16,150
however dow password gases like the
probabilistic once like all men or PC FG

150
00:14:16,150 --> 00:14:21,480
that require special training face and
for this reason we also provide a

151
00:14:21,480 --> 00:14:26,860
training file after straining file is
not used like in the case of prints can

152
00:14:26,860 --> 00:14:38,410
be ignored but otherwise it will be used
in interest in the script so an example

153
00:14:38,410 --> 00:14:44,770
is given here below there's this script
form and we execute a training phase as

154
00:14:44,770 --> 00:14:49,000
you can see here now after disaster
guess as executed and everything that

155
00:14:49,000 --> 00:14:53,690
the script us as printing out those
passwords nothing else but using those

156
00:14:53,690 --> 00:15:00,040
represent groups we also support not yet
developed and owned leaks as well as the

157
00:15:00,040 --> 00:15:06,689
reason why you can sit here and text
important model is this like an engine

158
00:15:06,690 --> 00:15:12,770
and engine is used to provide an
in-depth analysis of the generated

159
00:15:12,770 --> 00:15:16,689
passwords so for example

160
00:15:16,690 --> 00:15:21,920
already mentioned possibly getting
entropy from the other talk and can be

161
00:15:21,920 --> 00:15:23,199
implemented

162
00:15:23,200 --> 00:15:30,320
plaque in for example then we will hear
something about Ashley Madison leaked

163
00:15:30,320 --> 00:15:36,610
today and for this leak it is required
to apply some capitalizations on the gas

164
00:15:36,610 --> 00:15:41,470
passwords and this can also be
implemented we already did us in

165
00:15:41,470 --> 00:15:48,270
in projects in our framework by such a
plaque in those plugins are executed

166
00:15:48,270 --> 00:15:53,210
during the job so they have access to
all generated any dates and they just

167
00:15:53,210 --> 00:15:58,890
don't need to be written in Tyson and
for example you can also write a

168
00:15:58,890 --> 00:16:03,310
moderate restored the correct candidate
so we have a list of the correctly guess

169
00:16:03,310 --> 00:16:10,050
passwords for further analysis then
finally to make this picture complete

170
00:16:10,050 --> 00:16:12,889
there are other

171
00:16:12,889 --> 00:16:18,439
modules like for example this final
processing module this is executed after

172
00:16:18,439 --> 00:16:24,498
the framework has finished and it's just
to get this idea of a fully automated

173
00:16:24,499 --> 00:16:30,350
thing we can get for example the
framework percent modifications based on

174
00:16:30,350 --> 00:16:35,589
push or email so we can receive like you
can see in the screenshot and

175
00:16:35,589 --> 00:16:40,949
notification hey your truck was executed
successful or all of your jobs so for

176
00:16:40,949 --> 00:16:46,410
example for our experiments we want to
execute 400 different measurements and

177
00:16:46,410 --> 00:16:49,868
then at the very end I've received
notification and i dont have to care

178
00:16:49,869 --> 00:16:53,899
about it started on Friday evening and
Monday are receiving this notification

179
00:16:53,899 --> 00:16:59,569
then I know now i cant download resides
and work on them and that's can run of

180
00:16:59,569 --> 00:17:04,949
course I bateria scripts for example to
publish the results on a website or to

181
00:17:04,949 --> 00:17:12,189
backup the data visualization module
that is important

182
00:17:12,189 --> 00:17:20,010
first of all we not need to know what is
visualized example of measurement data

183
00:17:20,010 --> 00:17:25,859
so we have a long trial for this example
be executed to Prince Gaza trained on

184
00:17:25,859 --> 00:17:32,620
rock you attacking the Chi Mei Li and in
this result fire we see for example that

185
00:17:32,620 --> 00:17:38,439
the Prince guess that generates
duplicate as you can see here which of

186
00:17:38,440 --> 00:17:46,039
course is not desirable and as you can
see the list is not complete so we

187
00:17:46,039 --> 00:17:50,100
really want to have feedback from the
community what to implement of course

188
00:17:50,100 --> 00:17:54,379
you can write plugins for it but we can
also supported off the blocks and

189
00:17:54,380 --> 00:17:59,309
there's this progress file which is
important for photographs I will show to

190
00:17:59,309 --> 00:18:05,399
you so there's the number of gases shown
for a number of common passwords and the

191
00:18:05,399 --> 00:18:10,850
percentage of the complete list how many
percent of the file was covered

192
00:18:10,850 --> 00:18:18,350
successfully so this way we can plot
such dynamic grass during runtime by

193
00:18:18,350 --> 00:18:21,299
implementing every year

194
00:18:21,299 --> 00:18:28,210
basic web server Empire you can follow
at this age as we have heard before and

195
00:18:28,210 --> 00:18:34,289
you have a convenient way to see during
the run time how far the current crop of

196
00:18:34,289 --> 00:18:40,539
you is what are the first Prasad's is
promising should I change something and

197
00:18:40,539 --> 00:18:43,869
so on and of course there are static

198
00:18:43,869 --> 00:18:48,249
solicitations as well those are required
for papers they're automatically built

199
00:18:48,249 --> 00:18:53,489
so in this graph you can see a
comparison this is trained on rock you

200
00:18:53,489 --> 00:18:57,840
and executed tend to the palace nine
guests this and you can see that

201
00:18:57,840 --> 00:19:02,918
different password guess is performed
quite differently wide so PCF cheese

202
00:19:02,919 --> 00:19:09,590
perform different to prince and princess
working different 20 min for example and

203
00:19:09,590 --> 00:19:14,119
this is the data really interested in
right we want to compare password

204
00:19:14,119 --> 00:19:22,399
guesses and it's fully automated build
for your convenience thank you dear to

205
00:19:22,399 --> 00:19:27,639
build a website to have this information
online that you can do not have to

206
00:19:27,639 --> 00:19:34,289
execute those chops but instead just
download the retired so we think of our

207
00:19:34,289 --> 00:19:39,320
website to implementers and lists
different password leaks also include in

208
00:19:39,320 --> 00:19:48,129
recent ones and executors on all state
of the art password guesses and now we

209
00:19:48,129 --> 00:19:53,449
have all those kasa repin script so you
can see what is exactly executed what

210
00:19:53,450 --> 00:19:58,759
are the parameter 1 to smooth things for
example and so on

211
00:19:58,759 --> 00:20:08,449
to it we need to find someone ok so the
question is how can you research benefit

212
00:20:08,449 --> 00:20:15,039
as you might see in the picture this was
photographed on I don't know Tuesday or

213
00:20:15,039 --> 00:20:21,299
something we are actively working on
improving password guesses and the

214
00:20:21,299 --> 00:20:26,559
framework has spent it very beneficial
so you have fun way to Philly compare

215
00:20:26,559 --> 00:20:27,839
different

216
00:20:27,839 --> 00:20:31,948
guessing strategies you can
automatically run a huge number of

217
00:20:31,949 --> 00:20:36,829
experiments this facilitates the
development of new guess errors which

218
00:20:36,829 --> 00:20:42,479
are unknown yet or improves existing
ones so in the future we want to have

219
00:20:42,479 --> 00:20:46,889
feedback because developing such an
application is not an easy task

220
00:20:46,889 --> 00:20:51,569
you want to ask the parameter
configuration wordlist mingling with

221
00:20:51,569 --> 00:20:57,869
everything you use on a daily basis and
want to know more about it and think

222
00:20:57,869 --> 00:21:03,428
about how we can integrate us and our
friend so would be nice to have some

223
00:21:03,429 --> 00:21:08,699
image in my inbox about how you execute
together with which parameter the most

224
00:21:08,699 --> 00:21:14,149
successful for water and so on the
takeaway comparing password guessing

225
00:21:14,149 --> 00:21:19,109
strategies isn't easy and we build a
framework to automate this process and

226
00:21:19,109 --> 00:21:25,908
have a way to Sally compare them and you
have very much appreciate that so please

227
00:21:25,909 --> 00:21:31,309
send us your describe your setup send us
your parameter configuration files and

228
00:21:31,309 --> 00:21:34,519
stuff like that so if you have any
questions feel free to ask

