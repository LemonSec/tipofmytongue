1
00:00:03,090 --> 00:00:16,630
BC probably just going to talk about
something to all

2
00:00:16,630 --> 00:00:26,970
majority web sites in the world they are
doing and that's a check and I will get

3
00:00:26,970 --> 00:00:33,930
to stop to explain the rest and drink so
biased got home I'm in information

4
00:00:33,930 --> 00:00:37,680
security consultant I work a company
called princess limited headquartered in

5
00:00:37,680 --> 00:00:43,030
the north of England I have a huge
personal focus on web security and the

6
00:00:43,030 --> 00:00:45,350
three technologies I was talking about
today

7
00:00:45,350 --> 00:00:51,769
HTTP response headers on stage SDS PAGE
PKP on CSP and these are also here to

8
00:00:51,769 --> 00:00:56,519
have his own security code is that we
can issue from our side to the client

9
00:00:56,519 --> 00:01:01,019
visit tools in order to configure or
control security features within the

10
00:01:01,019 --> 00:01:06,740
browser of visitors to our site now
these houses are all aimed at getting

11
00:01:06,740 --> 00:01:11,270
information from the browser tools the
host and a more secure fashion so it's

12
00:01:11,270 --> 00:01:16,360
targeting the security of browsing
session and typically a lot of all

13
00:01:16,360 --> 00:01:21,109
efforts are focused on the actual server
itself so we could have easier access

14
00:01:21,109 --> 00:01:25,439
management privilege management we may
ensure that our applications are

15
00:01:25,439 --> 00:01:28,559
protected against things like sequins
action to stop people accessing the data

16
00:01:28,560 --> 00:01:36,890
on our service thankfully and

17
00:01:36,890 --> 00:01:41,200
target around the server

18
00:01:41,200 --> 00:01:44,240
you know we want to stop you been able
to access the data that resides in

19
00:01:44,240 --> 00:01:48,020
ourselves and that's where a lot of the
focus originally for security was over

20
00:01:48,020 --> 00:01:52,030
the last decade or so and certainly
within the last few years now focus on

21
00:01:52,030 --> 00:01:56,540
our responsibility has extended out into
the transport layer with a huge drive

22
00:01:56,540 --> 00:02:01,600
towards HTTPS to ensure that the user's
credentials most important thing that we

23
00:02:01,600 --> 00:02:05,280
want to protect the most sessions
actually arrived to us as the host

24
00:02:05,280 --> 00:02:09,940
without having been intercepted by third
party and the three how does that we're

25
00:02:09,940 --> 00:02:12,000
looking at today actually extend our
control

26
00:02:12,000 --> 00:02:17,140
out into the browser so we can only
enforce security policies in the browser

27
00:02:17,140 --> 00:02:20,679
but we cannot this out of control
features and functions of the browser

28
00:02:20,680 --> 00:02:26,230
and in some instances even override user
behavior that we were deemed to be

29
00:02:26,230 --> 00:02:32,700
insecure the first had I want to look I
hate STS or http strict transport

30
00:02:32,700 --> 00:02:39,109
security by its full name now in a
typical browsing session we're gonna

31
00:02:39,110 --> 00:02:43,070
look at me the actual problem he just
assholes first so you want to visit to

32
00:02:43,070 --> 00:02:47,299
its typically open the browser and type
in twitter.com which is the bleep are

33
00:02:47,299 --> 00:02:51,730
here the browser because he's seeking
peace till the default protocol on the

34
00:02:51,730 --> 00:02:57,298
web or sleep and not with HTTP so the
user will actually send the first

35
00:02:57,299 --> 00:03:03,560
request over an insecure protocol for
security on their site they respond back

36
00:03:03,560 --> 00:03:08,630
with a 301 redirect that says come back
to us over HTTPS for the same request

37
00:03:08,630 --> 00:03:16,180
the browser on as I redirect and then
issues the requests over HTTPS now the

38
00:03:16,180 --> 00:03:20,570
problem with this is that the first part
of our interactions with the host

39
00:03:20,570 --> 00:03:26,959
actually took place over HTTP riches
place experts call is not secure and not

40
00:03:26,959 --> 00:03:32,299
leave the open to be intercepted to be
modified to be tampered wave so what we

41
00:03:32,299 --> 00:03:36,840
end up with a scenario is potentially
what we know is SSL shipping attacks

42
00:03:36,840 --> 00:03:40,609
when an attacker can actually insert
themselves in between calls in the

43
00:03:40,609 --> 00:03:45,030
secure host that we were supposed to be
talking to because the redirect comes

44
00:03:45,030 --> 00:03:46,940
back over HTTP

45
00:03:46,940 --> 00:03:49,609
simply throws away doesn't pass it back
to

46
00:03:49,610 --> 00:03:54,740
the user and they will talk to the host
in this case Twitter HTTPS and they will

47
00:03:54,740 --> 00:03:58,720
continue to talk to the victim of HTTP

48
00:03:58,720 --> 00:04:02,010
victims rather has no idea but this has
happened communications have been

49
00:04:02,010 --> 00:04:05,280
tampered with and it will never be
directed so everybody continues happy

50
00:04:05,280 --> 00:04:11,170
with his go-ahead to GPS connection and
the browser is continuing to speak HTTP

51
00:04:11,170 --> 00:04:15,958
to the attacker and this is why I hate
STS is intended to fix one of the

52
00:04:15,959 --> 00:04:21,420
problems that we can resolve with a
single line of configuration to issue

53
00:04:21,420 --> 00:04:26,180
one response had a back to the browser
so issue the street transport security

54
00:04:26,180 --> 00:04:31,180
header and is only one directive is
required for Valley policy and is the

55
00:04:31,180 --> 00:04:35,669
max age directive this is the number of
seconds that the browser is to treat the

56
00:04:35,669 --> 00:04:40,229
hosts as a hedge STS host that is how
long are we supposed to only talk to the

57
00:04:40,230 --> 00:04:46,660
site over HTTPS you can optionally at
the inclusive during strikes us fairly

58
00:04:46,660 --> 00:04:52,370
obvious the preload directive in just a
few slides so we should they say justice

59
00:04:52,370 --> 00:04:57,760
policy to browse essentially results
compared to the initial connection where

60
00:04:57,760 --> 00:05:02,830
we typing twitter.com and the browser
defaults to http is the Browns never

61
00:05:02,830 --> 00:05:06,849
actually sends a request the question
actually leave the browser instead of a

62
00:05:06,850 --> 00:05:11,050
301 direct re-direct sorry which comes
from the host the browser does an

63
00:05:11,050 --> 00:05:15,729
internal redirect to the request never
actually surprised it was a 307 internal

64
00:05:15,729 --> 00:05:20,919
redirect and the request that actually
goes out over the wire on HTTPS so we

65
00:05:20,919 --> 00:05:26,570
never spoke HTTP so anything on the
internet so we can actually do is move

66
00:05:26,570 --> 00:05:32,450
to enforce HTTPS communications and
actually override any actions that you

67
00:05:32,450 --> 00:05:38,740
use may take the chinese state DGP even
if you use a typed in HTTP as a bookmark

68
00:05:38,740 --> 00:05:45,070
HTTP ok HTTP the browser will override
that and it will enforce HTTPS

69
00:05:45,070 --> 00:05:52,430
communications with that particular host
I mentioned the Primo directive one of

70
00:05:52,430 --> 00:05:56,120
the problems with STS is that offers
connection to the site we don't actually

71
00:05:56,120 --> 00:05:59,630
know that they are registered as host
we've actually got to make the cut

72
00:05:59,630 --> 00:06:04,550
action to get that policy back to
remember them as hecho esta host and

73
00:06:04,550 --> 00:06:08,910
preloaded results that was assigned by
Google and you can actually submit your

74
00:06:08,910 --> 00:06:13,440
site to be in what they call the preload
last and this is a list of sites they

75
00:06:13,440 --> 00:06:16,850
actually built into the browser so you
are you can have your domain name

76
00:06:16,850 --> 00:06:22,190
freshly baked into the browser so it
will never speak HTTP or any secure

77
00:06:22,190 --> 00:06:27,360
protocol to your sign if you include
yourself in the chromium least all of

78
00:06:27,360 --> 00:06:30,820
the other great major browser vendors
have now adopted this and you can go to

79
00:06:30,820 --> 00:06:37,330
the latest social science so any of
these browsers will never speak HTTP to

80
00:06:37,330 --> 00:06:41,000
any demand in the preload list which
includes twitter.com she can never

81
00:06:41,000 --> 00:06:46,330
actually even if a user types HTTP
amazing caves that we can override the

82
00:06:46,330 --> 00:06:52,680
insecure behavior we can enforce the
security of the browsing session the

83
00:06:52,680 --> 00:06:57,710
second page PKP slightly more
complicated HTTP public keeping vice

84
00:06:57,710 --> 00:07:04,310
fullname if we want to use https on our
science we have to go to a certificate

85
00:07:04,310 --> 00:07:08,080
authority and we have to get a
certificate for that so we generate a

86
00:07:08,080 --> 00:07:12,479
keypad on a service from that we
generate a Certificate Signing Request

87
00:07:12,480 --> 00:07:17,470
which we take to the authority and say
please can you give us a certificate we

88
00:07:17,470 --> 00:07:21,640
do some configuration with a certificate
on our servers and if we got it right

89
00:07:21,640 --> 00:07:26,390
when people visit a sign we should go
green potlucks and nice indicators in

90
00:07:26,390 --> 00:07:32,780
the browser one of the good things about
current public infrastructure is there a

91
00:07:32,780 --> 00:07:35,960
great deal certificate authorities that
you can go to get your certificate which

92
00:07:35,960 --> 00:07:39,489
is she says some nice

93
00:07:39,490 --> 00:07:43,880
you know some nice competition you may
choose to use provided that you already

94
00:07:43,880 --> 00:07:48,990
use of the Service says maybe
geographical constraints but there is a

95
00:07:48,990 --> 00:07:53,449
large number of authorities out there
that can issue certificates one of the

96
00:07:53,449 --> 00:07:57,400
problems is there any authority can
issue a certificate for any domain

97
00:07:57,400 --> 00:08:02,590
there's no limitations USA Australian
authorities only issuing two Australian

98
00:08:02,590 --> 00:08:06,210
site if you are a certificate authority
you can issue a certificate for any

99
00:08:06,210 --> 00:08:11,979
domain and this introduces the problem
if it if it is issued for your demand

100
00:08:11,979 --> 00:08:15,479
that you don't know about and we've seen
some fairly prevalent examples of this

101
00:08:15,479 --> 00:08:18,560
did you know tom was a Dutch the civic
authorities believed they were

102
00:08:18,560 --> 00:08:22,810
compromised in the early two thousands
they issued a certificate for gmail.com

103
00:08:22,810 --> 00:08:26,590
that the Iranian government used to
intercept traffic at their borders and

104
00:08:26,590 --> 00:08:30,900
then from that they can live shows and
everything is game over

105
00:08:30,900 --> 00:08:35,829
Starcom another ticket items compromised
by a security researcher who issued

106
00:08:35,830 --> 00:08:39,820
themself a certificate for paypal.com
and with a certificate you can

107
00:08:39,820 --> 00:08:45,110
impersonate the sites and get all of the
green markers in the brown so there is

108
00:08:45,110 --> 00:08:50,089
no difference the attacker will generate
to keep they generate a Certificate

109
00:08:50,089 --> 00:08:53,490
Signing Request they send it to the
certificate authority who gives them a

110
00:08:53,490 --> 00:08:57,459
certificate they do some configuration
on that server and if they got that

111
00:08:57,459 --> 00:09:05,170
right baby green HTTPS except they are
now made and he became his wall while us

112
00:09:05,170 --> 00:09:09,399
to solve this problem to stop other
people being able to use rogue on this

113
00:09:09,399 --> 00:09:16,770
issue certificates to impersonate was
under our signs of weak AP policy is a

114
00:09:16,770 --> 00:09:21,110
little bit bigger than a justice policy
vote reissue the public deep inside a

115
00:09:21,110 --> 00:09:25,370
familiar max age directive which is the
number seconds of the browser should

116
00:09:25,370 --> 00:09:30,820
cash and store and apply this Policy for
and then we have the Penn Charter 56

117
00:09:30,820 --> 00:09:36,500
attribute and this is just the harsh of
our public on the SP CAV are publicly

118
00:09:36,500 --> 00:09:40,800
saying these are keys and these are the
keys that you should expect us to use

119
00:09:40,800 --> 00:09:47,640
going forwards in a scenario where such
an attack her tries to generate obtain a

120
00:09:47,640 --> 00:09:50,610
rota difficult from authority they have
to generate their own keys to have

121
00:09:50,610 --> 00:09:51,640
signed by the certificate

122
00:09:51,640 --> 00:09:57,390
and in that situation the browser can
look at a certificate and even if the

123
00:09:57,390 --> 00:10:01,560
certificate is valid it will be for the
correct hostname it will be within its

124
00:10:01,560 --> 00:10:05,140
validity period and it is issued by a
trusted authority and those are the only

125
00:10:05,140 --> 00:10:10,160
metrics without his PKP that the browser
house to make a decision on whether or

126
00:10:10,160 --> 00:10:14,350
not I should trust the certificate apk
he introduces an additional measure but

127
00:10:14,350 --> 00:10:18,770
the browser can track and it's whether
or not this particular sign has said it

128
00:10:18,770 --> 00:10:24,960
will use this public key be inclusive
demands directive against justice policy

129
00:10:24,960 --> 00:10:29,630
is whether or not to apply this to some
demands on the side of weather is just

130
00:10:29,630 --> 00:10:35,240
for the particular domain that issued
the report your directors in panic over

131
00:10:35,240 --> 00:10:38,910
the talk about one of the other had a
son skip over for now we come back to a

132
00:10:38,910 --> 00:10:45,410
little bit more detail in the CSV
section now as a few people with laptops

133
00:10:45,410 --> 00:10:50,880
and devices and I wanted to quickly
demonstrate what I hate PKP violation

134
00:10:50,880 --> 00:10:55,200
should look like if you have a browser
on any device now if you open it and go

135
00:10:55,200 --> 00:11:02,690
to my address terrible pun right elbow
flexion go to skype.com idk I issue on

136
00:11:02,690 --> 00:11:07,330
the two main page BKP policy so when you
first visit that page you go to school

137
00:11:07,330 --> 00:11:13,100
homework idk your browser will receive
in cash that policy I then how after you

138
00:11:13,100 --> 00:11:15,910
visit the page a subdomain on my side

139
00:11:15,910 --> 00:11:21,569
HTTP thats cool how you came so once
you've receiving cash my policy if you

140
00:11:21,570 --> 00:11:25,620
visit a subdomain you don't know whether
or not you have a pic AP complaint

141
00:11:25,620 --> 00:11:30,790
browser because what you should get is
this if your browser actually allows you

142
00:11:30,790 --> 00:11:35,579
to visit me sign I saw the demonstration
here with a a rogue certificate this is

143
00:11:35,580 --> 00:11:39,950
a certificate not included in my policy
so as far as your browser either way

144
00:11:39,950 --> 00:11:43,730
they should be flagged as a row
certificate and you should not be

145
00:11:43,730 --> 00:11:46,920
allowed to visit the subdomain your
device allows you to visit this

146
00:11:46,920 --> 00:11:52,390
particular browser you're using is not
indicate he complains

147
00:11:52,390 --> 00:11:59,710
and the next hurdle I want to talk about
the favorite flavor of the three hunters

148
00:11:59,710 --> 00:12:01,270
a CSP

149
00:12:01,270 --> 00:12:09,930
comfort and security policy now CSP is
often described as just a whitelist

150
00:12:09,930 --> 00:12:15,140
mechanism for sources of content on your
pages this isn't do CSP before Justice

151
00:12:15,140 --> 00:12:20,140
of what is possible to do with it and
I'm actually going to cover a subset of

152
00:12:20,140 --> 00:12:25,530
the directives that you can issue the
CSP policy this approximately half of

153
00:12:25,530 --> 00:12:30,380
the directors that you can issue and a
CSP and each of these directives allows

154
00:12:30,380 --> 00:12:35,189
you to define a whitelist of the host
that you can load these particular types

155
00:12:35,190 --> 00:12:40,960
from basically translates into you can
control the values that are allowed

156
00:12:40,960 --> 00:12:45,570
inside certain sources of content on
your pages so for example with the

157
00:12:45,570 --> 00:12:49,430
Kinect sauce you can control by your
side is allowed to do things like Ajax

158
00:12:49,430 --> 00:12:54,479
from with Image Source directive you can
specify the allowed sources in image

159
00:12:54,480 --> 00:13:00,810
tykes on your pages and this is my
interest in the usual why the real usual

160
00:13:00,810 --> 00:13:04,829
ones here are things like form action
when do you want your site to be allowed

161
00:13:04,830 --> 00:13:08,510
to post those user credentials from
something happens in the browser may be

162
00:13:08,510 --> 00:13:12,300
malicious browser extension will change
the forum actions so it's going to post

163
00:13:12,300 --> 00:13:16,260
his credentials elsewhere and then they
can still be redirected to my game

164
00:13:16,260 --> 00:13:21,550
before we could harvest the credentials
along the way things like ice cream

165
00:13:21,550 --> 00:13:22,280
sauce

166
00:13:22,280 --> 00:13:24,939
you know why somebody embed some
malicious iframe in our site that looks

167
00:13:24,940 --> 00:13:28,420
like a login page boys and actually I
was looking page we can prevent that

168
00:13:28,420 --> 00:13:32,000
from happening by restricting the
locations that you can actually load

169
00:13:32,000 --> 00:13:37,010
iframes from another really crucial one
of constant security policy is the

170
00:13:37,010 --> 00:13:41,620
script sauce

171
00:13:41,620 --> 00:13:46,620
concern security policy by default
blocks inline script so you can have

172
00:13:46,620 --> 00:13:50,880
script tags in your dorm just have the
JavaScript inside them because we have

173
00:13:50,880 --> 00:13:54,890
no way of being sure of the source of
that site is blocked by default but you

174
00:13:54,890 --> 00:13:57,810
don't have to do is externalized your
javascript and just reference it from

175
00:13:57,810 --> 00:14:02,619
your own domain is a javascript file
what this means you can also limit

176
00:14:02,620 --> 00:14:07,600
third-party domains that your scripts
are loaded from this is incredibly

177
00:14:07,600 --> 00:14:12,200
effective defense against cross-site
scripting attacks in line and we can

178
00:14:12,200 --> 00:14:17,529
control the sources of third-party
script in our pages as an example

179
00:14:17,529 --> 00:14:22,980
recently site this is a slightly cut
down version of the code but they had a

180
00:14:22,980 --> 00:14:26,770
review section at the bottom Backpage
they can cycle through all that

181
00:14:26,770 --> 00:14:30,740
wonderful 5 stars use that they had it
at the top of the page was the login

182
00:14:30,740 --> 00:14:35,370
button fly down looking for him and the
usual type in my credentials on this

183
00:14:35,370 --> 00:14:40,600
page so many here like a review on the
site had included a script tag are

184
00:14:40,600 --> 00:14:44,230
slightly change the domain hopefully
even becomes a bit too obvious and

185
00:14:44,230 --> 00:14:47,580
ultimately the fire was just a
javascript keylogger and then actually

186
00:14:47,580 --> 00:14:51,570
managed to load they sent to any page
where these reviews were displayed so

187
00:14:51,570 --> 00:14:54,830
every time a user went to the site they
click the Login drop down and every time

188
00:14:54,830 --> 00:14:59,390
they press the key JavaScript file will
be sending each keystroke away

189
00:14:59,390 --> 00:15:03,010
effectively the attack was just logging
usernames and passwords or anybody

190
00:15:03,010 --> 00:15:07,080
wanting to the site and this is one of
the things that we could prevent quite

191
00:15:07,080 --> 00:15:11,360
easily with comes and security policy if
the attack an answer to my script it

192
00:15:11,360 --> 00:15:15,140
will be blocked by the fall they
wouldn't be executed and hopefully evil

193
00:15:15,140 --> 00:15:18,550
dot com wouldn't have been in your white
list of sources that you can go

194
00:15:18,550 --> 00:15:26,750
JavaScript from so a simple CSP policy
of only safety policy have created a

195
00:15:26,750 --> 00:15:32,300
little example here they can be as as
restrictive as relaxed as you like you

196
00:15:32,300 --> 00:15:37,810
know you can start with a very basic CSP
start to increase its effectiveness

197
00:15:37,810 --> 00:15:42,779
144 sauce and use the wildcard I
typically advised people to use while

198
00:15:42,779 --> 00:15:48,089
calls as the default in CSP because each
directive that you specify overrides the

199
00:15:48,089 --> 00:15:51,790
default along the flood the directors
fold back to it but if you specify the

200
00:15:51,790 --> 00:15:53,370
DirecTV overrides a dozen

201
00:15:53,370 --> 00:15:57,970
from it and this is kind of a safety
mechanism just a couple of houses are

202
00:15:57,970 --> 00:16:02,870
quite a complaint and do some strange
things so I suppose I should typical

203
00:16:02,870 --> 00:16:07,450
fell open off their clothes and REO ICSP
at the minute but it's a fail open

204
00:16:07,450 --> 00:16:12,770
trying to find here scripts also have
used the CSP keywords self which is

205
00:16:12,770 --> 00:16:17,730
basically the demesne the server policy
so we say we're loading scripts from our

206
00:16:17,730 --> 00:16:22,430
own domain I have included the CD and I
use role of my scripts and you can go on

207
00:16:22,430 --> 00:16:24,739
through the rest of the directives for
my actions

208
00:16:24,740 --> 00:16:28,890
self we only ever want to post any form
data back to me we don't want the

209
00:16:28,890 --> 00:16:34,960
ability for anybody to change that to be
an external source file free my

210
00:16:34,960 --> 00:16:38,490
ancestors these are the people that can
train to protect users against

211
00:16:38,490 --> 00:16:42,070
conducting attacks things like that we
don't want any body to be able to frame

212
00:16:42,070 --> 00:16:47,620
our pages and the same again for child
so what we use to find who can create

213
00:16:47,620 --> 00:16:52,020
iframes with our page and we don't i
frame anybody in this particular example

214
00:16:52,020 --> 00:16:57,360
I don't move on to the report URI
directed this is an optional directive

215
00:16:57,360 --> 00:17:04,160
you don't have to you specify this has
the ability to send with polls when

216
00:17:04,160 --> 00:17:09,510
there is a violation of your policy so
somebody's gotta be malicious javascript

217
00:17:09,510 --> 00:17:14,390
we saw a moment ago into a page they try
and load the page in the browser will

218
00:17:14,390 --> 00:17:17,970
refuse to load the script because it's
from evil dot com and even dot com is

219
00:17:17,970 --> 00:17:21,650
not in our script sauce for the script
will not be loaded

220
00:17:21,650 --> 00:17:26,579
these have been protected they not lost
their credentials which is good but only

221
00:17:26,579 --> 00:17:30,940
CSP complain browses / reinforced they
said the browser doesn't understand what

222
00:17:30,940 --> 00:17:34,220
the content security policy how to raise
it would just disregard that had it

223
00:17:34,220 --> 00:17:38,679
won't take any action with the reporting
directive enabled she speaks in plain

224
00:17:38,679 --> 00:17:43,270
brown sizes will actually send us are
appalled to say something happened and

225
00:17:43,270 --> 00:17:49,280
those reports contain some fairly
crucial data so we can see the JSON go

226
00:17:49,280 --> 00:17:54,320
back we can see the document URI the
page that this violation actually

227
00:17:54,320 --> 00:17:57,159
occurred on actually took place on so I
can see how the problem on my side of

228
00:17:57,160 --> 00:18:00,960
the login page that tells us that
violated directive was a script source

229
00:18:00,960 --> 00:18:04,980
so I know that some non-white listen
scripts from my actually in one of my

230
00:18:04,980 --> 00:18:05,820
pages

231
00:18:05,820 --> 00:18:09,300
and it tells the block your eyes while
if the violation was in line it would

232
00:18:09,300 --> 00:18:13,129
just say in line to say something Texas
crypto again if somebody trying to load

233
00:18:13,130 --> 00:18:20,270
third party company will actually tells
wow so we now have information on the

234
00:18:20,270 --> 00:18:24,820
CSP violations instead of just deploying
this policy allowing it to do is

235
00:18:24,820 --> 00:18:28,389
blocking actions which is good we are
protecting people we also need to go

236
00:18:28,390 --> 00:18:33,320
back and fix a problem for me because we
still have somebody that I pages which

237
00:18:33,320 --> 00:18:37,240
means somebody's got content in that and
we need to you know when it's going to

238
00:18:37,240 --> 00:18:42,170
take further work it out so she's been
reporting is is really important issue

239
00:18:42,170 --> 00:18:46,780
deploying content security policy also
applies I mentioned to hate speech paper

240
00:18:46,780 --> 00:18:51,330
as well if a user served broke
certificate feel sign you can also

241
00:18:51,330 --> 00:18:54,649
include the report you are trying to
write to the Browns will send a report

242
00:18:54,650 --> 00:18:59,120
to say you know somebody out there how's
a valid certificate for your domain and

243
00:18:59,120 --> 00:19:06,159
then you start to take action about that
now I want to go over and give a quick

244
00:19:06,160 --> 00:19:14,100
summary of the areas of each had a
really and TSH STS allows us to enforce

245
00:19:14,100 --> 00:19:20,429
the use of each of these accts across
any site that issues so you can say to a

246
00:19:20,430 --> 00:19:25,940
browser under no circumstances told KCTV
you can override user actions if they

247
00:19:25,940 --> 00:19:29,840
specifically try to visit your site of
an unsecured connection either

248
00:19:29,840 --> 00:19:34,560
themselves intentionally of shots
someone else maliciously we can override

249
00:19:34,560 --> 00:19:38,399
time tell the browser to drop that
connection one of the things we think

250
00:19:38,400 --> 00:19:42,370
just as well as that you can't click
your browser warnings people get one is

251
00:19:42,370 --> 00:19:47,229
in their browsers public messages we saw
the Haiti AP example most seasons when

252
00:19:47,230 --> 00:19:50,880
they see things like that typically from
my experience were just clicking the

253
00:19:50,880 --> 00:19:53,580
button at the bottom tanks on the menu
and click Continue anyway

254
00:19:53,580 --> 00:19:59,710
HTS disables option you cannot click
through any security base warning HTTP

255
00:19:59,710 --> 00:20:05,530
in the browser if you issue the Haight
St a policy that prevents against

256
00:20:05,530 --> 00:20:09,250
Seattle shipping attacks by mentioned
you know we can we can be sure that

257
00:20:09,250 --> 00:20:13,800
somebody is browsing our site there is
no middle man there is no one saw my

258
00:20:13,800 --> 00:20:15,070
connection

259
00:20:15,070 --> 00:20:19,580
and of course science should preload if
you are redirecting traffic to https

260
00:20:19,580 --> 00:20:25,668
with a 301 redirect and then you take
the next that policy should really be

261
00:20:25,669 --> 00:20:29,460
preloading that as well it's easy to
submit to the preload least you include

262
00:20:29,460 --> 00:20:31,610
the PLO token and just submit your
domain

263
00:20:31,610 --> 00:20:35,309
into the web site I linked it will then
be built into the chromium salts and

264
00:20:35,309 --> 00:20:42,039
picked up by every other major problems
of an hour ago AP Google actually

265
00:20:42,039 --> 00:20:46,840
recommend that he became his only
adopted by more mature organizations

266
00:20:46,840 --> 00:20:51,658
there is a slight risk in HBK p.m. if
you are painting a particular set of

267
00:20:51,659 --> 00:20:55,350
public case and you say i'm only going
to use this case and the second keep any

268
00:20:55,350 --> 00:20:58,860
job I hope so you can shift to the
backup either a certificate renewal or

269
00:20:58,860 --> 00:21:03,879
in the event of a compromise if you lose
those cheap as well as keep has become

270
00:21:03,879 --> 00:21:09,730
compromised you have no backup to roll
to the browser does not know that the

271
00:21:09,730 --> 00:21:12,659
new certificate that you using as a
legitimate is it is was not in the

272
00:21:12,659 --> 00:21:19,919
policy so there is some organizational
maturity required to issue new place BKV

273
00:21:19,919 --> 00:21:25,379
policy but to get around and you can see
the example because give do this you

274
00:21:25,379 --> 00:21:29,039
don't actually have to pay your own
public keys you can pin the public keys

275
00:21:29,039 --> 00:21:32,559
of a certificate authority so instead of
the hundred or two hundred or so

276
00:21:32,559 --> 00:21:37,740
certificate authorities out there that
can issue certificates for your domain

277
00:21:37,740 --> 00:21:44,399
have actually pain Verisign so if you're
concerned about certificate authorities

278
00:21:44,399 --> 00:21:47,610
of other nations that may be under the
control of their governments are

279
00:21:47,610 --> 00:21:51,008
influenced by foreign governments you
can actually restricted to just the

280
00:21:51,009 --> 00:21:53,169
certificate authorities of your choosing

281
00:21:53,169 --> 00:21:59,320
they can issue certificates your domain
in this page PKP completely mitigate the

282
00:21:59,320 --> 00:22:04,918
the issuance in the use of row tickets
so it only does obtain a certificate for

283
00:22:04,919 --> 00:22:05,690
your domain

284
00:22:05,690 --> 00:22:09,039
going back to the DigiNotar example
everybody's browsers will have rejected

285
00:22:09,039 --> 00:22:13,320
the Gmail certificate and all of the
700,000 Iranian uses that would

286
00:22:13,320 --> 00:22:18,070
compromise would have been protected
with the use of a peak AP

287
00:22:18,070 --> 00:22:24,200
and then CSP as I say CSP is is defined
as unexplained does a content

288
00:22:24,200 --> 00:22:28,050
whitelisting mechanism but there are a
considerable number of Directors more

289
00:22:28,050 --> 00:22:31,909
than my showed there's a lot more
features of CSP when I would even have

290
00:22:31,910 --> 00:22:34,050
time to take ova in a presentation like
this

291
00:22:34,050 --> 00:22:39,710
CSP is an incredibly powerful mechanism
it can be as restrictive as light as you

292
00:22:39,710 --> 00:22:43,150
like you can be playing bball only mode
so it doesn't actually enforce anything

293
00:22:43,150 --> 00:22:50,460
and you can just use it to monitor your
sites in production it's a complete

294
00:22:50,460 --> 00:22:55,100
defense against cross-site scripting
deployed properly as a defensive measure

295
00:22:55,100 --> 00:22:58,860
with all the things like output encoding
you can almost completely neutralize the

296
00:22:58,860 --> 00:23:03,719
possibility of cross site scripting and
reporting is essential

297
00:23:03,720 --> 00:23:09,790
going to play PKP in CSP you should be
reporting these days both have a report

298
00:23:09,790 --> 00:23:14,720
on the mode you can set she can deploy
them into production and say some of the

299
00:23:14,720 --> 00:23:15,970
proposed

300
00:23:15,970 --> 00:23:19,490
things would have gone wrong don't
enforce it don't actually take action

301
00:23:19,490 --> 00:23:23,870
just money to it and tell me where
things would have gone bad so you can

302
00:23:23,870 --> 00:23:27,840
deploy these policies can find out the
kinks and report only mode before you

303
00:23:27,840 --> 00:23:35,990
actually enforce them and risk taking us
I like anything's wrong so how does it

304
00:23:35,990 --> 00:23:41,390
feel that a little bit quicker and I was
hoping for I was wondering if there are

305
00:23:41,390 --> 00:23:41,780
any questions

