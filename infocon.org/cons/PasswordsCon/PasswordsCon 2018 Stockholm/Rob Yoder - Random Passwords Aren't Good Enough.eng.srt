1
00:00:00,680 --> 00:00:11,010
<font color="#E5E5E5">all right yes good enough</font><font color="#CCCCCC"> sorry for the</font>

2
00:00:08,519 --> 00:00:14,580
clickbait<font color="#E5E5E5"> we will get to this a little</font>

3
00:00:11,010 --> 00:00:18,720
<font color="#E5E5E5">bit but</font><font color="#CCCCCC"> as I said I'm Rob work at one</font>

4
00:00:14,580 --> 00:00:19,980
<font color="#CCCCCC">pass hurry</font><font color="#E5E5E5"> along with Jeff</font><font color="#CCCCCC"> and recently</font>

5
00:00:18,720 --> 00:00:22,769
we've been looking at<font color="#E5E5E5"> a password</font>

6
00:00:19,980 --> 00:00:25,279
<font color="#CCCCCC">generator</font><font color="#E5E5E5"> I cannot think of a talk that</font>

7
00:00:22,769 --> 00:00:27,538
could have come<font color="#E5E5E5"> better before this one</font>

8
00:00:25,279 --> 00:00:33,719
<font color="#E5E5E5">you think somebody</font><font color="#CCCCCC"> organized this or</font>

9
00:00:27,539 --> 00:00:35,100
<font color="#E5E5E5">something developer most of the time and</font>

10
00:00:33,719 --> 00:00:39,239
then I get<font color="#CCCCCC"> to play with some math and</font>

11
00:00:35,100 --> 00:00:42,719
<font color="#CCCCCC">other things on the side</font><font color="#E5E5E5"> looking at a</font>

12
00:00:39,239 --> 00:00:44,430
<font color="#E5E5E5">password generator</font><font color="#CCCCCC"> and decided to</font>

13
00:00:42,719 --> 00:00:46,680
rethink<font color="#E5E5E5"> a little bit and how we display</font>

14
00:00:44,430 --> 00:00:50,640
<font color="#CCCCCC">it to</font><font color="#E5E5E5"> users and I wanted to talk to you</font>

15
00:00:46,680 --> 00:00:53,460
about why<font color="#E5E5E5"> so we started with this we</font>

16
00:00:50,640 --> 00:00:57,270
have a password<font color="#E5E5E5"> generator</font><font color="#CCCCCC"> and it's it's</font>

17
00:00:53,460 --> 00:01:00,390
<font color="#E5E5E5">pretty simple password number</font><font color="#CCCCCC"> of symbols</font>

18
00:00:57,270 --> 00:01:03,480
<font color="#E5E5E5">to</font><font color="#CCCCCC"> an include number of digits avoid</font>

19
00:01:00,390 --> 00:01:11,520
ambiguous characters like<font color="#CCCCCC"> zero and oh I</font>

20
00:01:03,480 --> 00:01:14,280
and<font color="#E5E5E5"> one and all those and</font><font color="#CCCCCC"> so what we do</font>

21
00:01:11,520 --> 00:01:16,560
this<font color="#E5E5E5"> is if you have a password</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

22
00:01:14,280 --> 00:01:21,240
want to<font color="#E5E5E5"> generate of length 20 and you</font>

23
00:01:16,560 --> 00:01:24,180
say<font color="#CCCCCC"> and</font><font color="#E5E5E5"> three symbols then we started</font>

24
00:01:21,240 --> 00:01:26,280
with a string of 15 letters<font color="#E5E5E5"> then we</font>

25
00:01:24,180 --> 00:01:27,990
would generate two numbers and three

26
00:01:26,280 --> 00:01:32,100
symbols<font color="#E5E5E5"> and we just mix them all</font>

27
00:01:27,990 --> 00:01:34,740
together and<font color="#E5E5E5"> you can give a good value</font>

28
00:01:32,100 --> 00:01:37,140
for entropy pretty easily from this well

29
00:01:34,740 --> 00:01:41,310
<font color="#E5E5E5">easily it's this is going to be some</font>

30
00:01:37,140 --> 00:01:44,310
<font color="#E5E5E5">some math notation</font><font color="#CCCCCC"> so we've got the log</font>

31
00:01:41,310 --> 00:01:46,020
of the size of<font color="#E5E5E5"> the letters times the</font>

32
00:01:44,310 --> 00:01:49,020
length of<font color="#E5E5E5"> the password or the length of</font>

33
00:01:46,020 --> 00:01:50,640
the number of<font color="#E5E5E5"> letters</font><font color="#CCCCCC"> plus the same</font>

34
00:01:49,020 --> 00:01:54,420
thing four digits<font color="#E5E5E5"> plus symbols and then</font>

35
00:01:50,640 --> 00:01:57,390
we add in<font color="#CCCCCC"> the entropy</font><font color="#E5E5E5"> of combining all</font>

36
00:01:54,420 --> 00:01:59,850
those things together<font color="#CCCCCC"> we wanted</font><font color="#E5E5E5"> to</font>

37
00:01:57,390 --> 00:02:02,340
<font color="#E5E5E5">simplify both for the purpose of having</font>

38
00:01:59,850 --> 00:02:05,729
a nicer equation<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> a simpler</font>

39
00:02:02,340 --> 00:02:10,470
algorithm and so we<font color="#E5E5E5"> came</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with the</font>

40
00:02:05,730 --> 00:02:14,490
and this is<font color="#CCCCCC"> a most recent extension for</font>

41
00:02:10,470 --> 00:02:17,220
browsers<font color="#E5E5E5"> it's called</font><font color="#CCCCCC"> 1password X and</font><font color="#E5E5E5"> it</font>

42
00:02:14,490 --> 00:02:19,740
keeps the the slider for<font color="#E5E5E5"> length but we</font>

43
00:02:17,220 --> 00:02:21,650
got rid of the sliders for numbers<font color="#CCCCCC"> and</font>

44
00:02:19,740 --> 00:02:23,550
symbols most people<font color="#CCCCCC"> don't care how many</font>

45
00:02:21,650 --> 00:02:25,380
<font color="#E5E5E5">numbers are symbols they have in the</font>

46
00:02:23,550 --> 00:02:28,110
<font color="#E5E5E5">password they just want a number or</font>

47
00:02:25,380 --> 00:02:31,049
assemble in their password<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so</font>

48
00:02:28,110 --> 00:02:32,370
there's switches<font color="#E5E5E5"> and the entropy</font>

49
00:02:31,050 --> 00:02:34,490
calculation there's a whole lot simpler

50
00:02:32,370 --> 00:02:37,110
<font color="#E5E5E5">we take the size of the entire alphabet</font>

51
00:02:34,490 --> 00:02:41,100
<font color="#CCCCCC">the log of that and and</font><font color="#E5E5E5"> multiply that by</font>

52
00:02:37,110 --> 00:02:43,020
the length<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the password there's a</font>

53
00:02:41,100 --> 00:02:44,760
problem here if you have been<font color="#CCCCCC"> looking</font>

54
00:02:43,020 --> 00:02:48,150
closely<font color="#E5E5E5"> this password does not contain a</font>

55
00:02:44,760 --> 00:02:50,130
number but the numbers<font color="#E5E5E5"> switch is on</font><font color="#CCCCCC"> and</font>

56
00:02:48,150 --> 00:02:52,800
that's because we're drawing from an

57
00:02:50,130 --> 00:02:53,940
<font color="#E5E5E5">alphabet that contains numbers</font><font color="#CCCCCC"> but</font>

58
00:02:52,800 --> 00:02:57,390
<font color="#E5E5E5">doesn't mean you're required</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> a</font>

59
00:02:53,940 --> 00:02:59,760
<font color="#E5E5E5">number in</font><font color="#CCCCCC"> your password and and you</font>

60
00:02:57,390 --> 00:03:07,200
think<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> not really a</font><font color="#CCCCCC"> problem except</font>

61
00:02:59,760 --> 00:03:12,359
<font color="#E5E5E5">for what we</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> heard about</font><font color="#CCCCCC"> its so we</font>

62
00:03:07,200 --> 00:03:14,390
have requirements<font color="#E5E5E5"> that have to comply</font>

63
00:03:12,360 --> 00:03:14,390
with

64
00:03:18,470 --> 00:03:23,390
[Music]

65
00:03:20,640 --> 00:03:27,000
solve this with<font color="#E5E5E5"> extreme customizability</font>

66
00:03:23,390 --> 00:03:29,190
<font color="#E5E5E5">you can do anything with</font><font color="#CCCCCC"> the password</font>

67
00:03:27,000 --> 00:03:31,860
<font color="#E5E5E5">but we wanted to keep what we have we</font>

68
00:03:29,190 --> 00:03:33,570
have<font color="#CCCCCC"> this simple generator</font><font color="#E5E5E5"> how can we</font>

69
00:03:31,860 --> 00:03:35,700
make it<font color="#CCCCCC"> easy for</font><font color="#E5E5E5"> people to generate</font>

70
00:03:33,570 --> 00:03:43,470
<font color="#E5E5E5">passwords that are most likely going</font><font color="#CCCCCC"> to</font>

71
00:03:35,700 --> 00:03:46,320
work on<font color="#E5E5E5"> websites</font><font color="#CCCCCC"> so is</font><font color="#E5E5E5"> that are going to</font>

72
00:03:43,470 --> 00:03:48,359
be required<font color="#E5E5E5"> if we say if we turn on</font>

73
00:03:46,320 --> 00:03:50,100
numbers we're gonna have a<font color="#CCCCCC"> number</font><font color="#E5E5E5"> in the</font>

74
00:03:48,360 --> 00:03:52,100
<font color="#E5E5E5">password if we turn on symbols we're</font>

75
00:03:50,100 --> 00:03:55,440
going to have a<font color="#E5E5E5"> symbol</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> password</font>

76
00:03:52,100 --> 00:03:57,150
<font color="#E5E5E5">so we</font><font color="#CCCCCC"> also want the distribution of</font>

77
00:03:55,440 --> 00:04:00,540
passwords to be uniform<font color="#E5E5E5"> and this will be</font>

78
00:03:57,150 --> 00:04:01,830
important in just<font color="#E5E5E5"> a minute</font><font color="#CCCCCC"> that leads to</font>

79
00:04:00,540 --> 00:04:03,150
the ability to<font color="#E5E5E5"> calculate entropy</font>

80
00:04:01,830 --> 00:04:05,160
correctly<font color="#E5E5E5"> because if you have a</font>

81
00:04:03,150 --> 00:04:07,709
non-uniform<font color="#E5E5E5"> distribution</font><font color="#CCCCCC"> as I'm sure</font>

82
00:04:05,160 --> 00:04:10,590
we've talked about here<font color="#CCCCCC"> before entropy</font>

83
00:04:07,709 --> 00:04:11,730
calculation becomes<font color="#CCCCCC"> a lot more messy</font>

84
00:04:10,590 --> 00:04:15,840
and then of course<font color="#E5E5E5"> we want to keep</font><font color="#CCCCCC"> our</font>

85
00:04:11,730 --> 00:04:19,488
example<font color="#E5E5E5"> in her face so there's one way</font>

86
00:04:15,840 --> 00:04:22,790
<font color="#E5E5E5">we could do it generate</font><font color="#CCCCCC"> the password</font>

87
00:04:19,488 --> 00:04:25,859
look at it does<font color="#E5E5E5"> it have a number in it</font>

88
00:04:22,790 --> 00:04:28,080
if not<font color="#CCCCCC"> generate</font><font color="#E5E5E5"> another one and you just</font>

89
00:04:25,860 --> 00:04:29,669
<font color="#CCCCCC">keep doing this</font><font color="#E5E5E5"> until finally yes this</font>

90
00:04:28,080 --> 00:04:31,080
<font color="#E5E5E5">password has a number in it we're good</font>

91
00:04:29,669 --> 00:04:34,409
to go

92
00:04:31,080 --> 00:04:36,000
that's fine<font color="#CCCCCC"> it wasn't</font><font color="#E5E5E5"> something that we</font>

93
00:04:34,410 --> 00:04:41,639
thought would<font color="#CCCCCC"> be the</font><font color="#E5E5E5"> best</font><font color="#CCCCCC"> approach</font>

94
00:04:36,000 --> 00:04:47,430
<font color="#CCCCCC">because equation for entropy it's not</font>

95
00:04:41,639 --> 00:04:51,150
too bad you're gonna take the basically

96
00:04:47,430 --> 00:04:53,340
<font color="#E5E5E5">the whole alphabet letters and it's the</font>

97
00:04:51,150 --> 00:04:54,989
size of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> alphabet to</font><font color="#E5E5E5"> the nth power</font>

98
00:04:53,340 --> 00:04:56,400
<font color="#CCCCCC">it's the</font><font color="#E5E5E5"> number of possibilities right</font>

99
00:04:54,990 --> 00:04:59,940
<font color="#E5E5E5">then you subtract the number of</font>

100
00:04:56,400 --> 00:05:02,099
possibilities<font color="#CCCCCC"> that would just be</font><font color="#E5E5E5"> would</font>

101
00:04:59,940 --> 00:05:03,719
just<font color="#CCCCCC"> contain</font><font color="#E5E5E5"> letters and subtract again</font>

102
00:05:02,100 --> 00:05:06,180
<font color="#E5E5E5">the possibilities</font><font color="#CCCCCC"> that would</font><font color="#E5E5E5"> just be</font>

103
00:05:03,720 --> 00:05:09,330
digits and<font color="#E5E5E5"> then we can take the log</font><font color="#CCCCCC"> of</font>

104
00:05:06,180 --> 00:05:12,120
<font color="#E5E5E5">that so the downside of this</font><font color="#CCCCCC"> the</font>

105
00:05:09,330 --> 00:05:14,159
generator<font color="#E5E5E5"> itself is not guaranteed to</font>

106
00:05:12,120 --> 00:05:16,440
<font color="#CCCCCC">terminate we could keep generating</font>

107
00:05:14,160 --> 00:05:18,780
password to never end up with a number

108
00:05:16,440 --> 00:05:21,719
<font color="#CCCCCC">in our password</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> of course if you say</font>

109
00:05:18,780 --> 00:05:24,150
that you need letters and digits<font color="#CCCCCC"> and</font>

110
00:05:21,720 --> 00:05:25,560
<font color="#E5E5E5">your</font><font color="#CCCCCC"> password and not that</font><font color="#E5E5E5"> this is</font>

111
00:05:24,150 --> 00:05:28,830
something<font color="#CCCCCC"> that happens but if you were</font>

112
00:05:25,560 --> 00:05:30,539
to generate a<font color="#E5E5E5"> password of length</font><font color="#CCCCCC"> 1 you</font>

113
00:05:28,830 --> 00:05:32,580
will never get both<font color="#E5E5E5"> another letter</font><font color="#CCCCCC"> and</font>

114
00:05:30,539 --> 00:05:35,250
digit and<font color="#E5E5E5"> your password</font><font color="#CCCCCC"> and obviously as</font>

115
00:05:32,580 --> 00:05:38,580
<font color="#E5E5E5">your length is smaller the chance</font><font color="#CCCCCC"> of</font>

116
00:05:35,250 --> 00:05:41,760
<font color="#E5E5E5">your generated password matching the</font>

117
00:05:38,580 --> 00:05:43,590
requirements is much smaller as well the

118
00:05:41,760 --> 00:05:45,479
<font color="#E5E5E5">other problem or drawback to this</font>

119
00:05:43,590 --> 00:05:47,159
approach<font color="#E5E5E5"> is that this function operates</font>

120
00:05:45,479 --> 00:05:49,469
on giant integers he saw in our first

121
00:05:47,160 --> 00:05:51,300
function<font color="#CCCCCC"> that we were multiplying the</font>

122
00:05:49,470 --> 00:05:55,169
length of the password<font color="#E5E5E5"> times the log of</font>

123
00:05:51,300 --> 00:05:56,690
the<font color="#E5E5E5"> size of the</font><font color="#CCCCCC"> alphabet</font><font color="#E5E5E5"> and it keeps</font>

124
00:05:55,169 --> 00:06:00,030
you know it keeps<font color="#E5E5E5"> number</font><font color="#CCCCCC"> smaller than</font>

125
00:05:56,690 --> 00:06:02,160
<font color="#CCCCCC">manageable here we're</font><font color="#E5E5E5"> taking gigantic</font>

126
00:06:00,030 --> 00:06:05,580
integers subtracting<font color="#E5E5E5"> them and then</font>

127
00:06:02,160 --> 00:06:06,409
taking the log and that<font color="#E5E5E5"> isn't super bad</font>

128
00:06:05,580 --> 00:06:09,378
here

129
00:06:06,409 --> 00:06:19,669
can get<font color="#E5E5E5"> more complex with longer with</font>

130
00:06:09,379 --> 00:06:23,479
more requirements and<font color="#CCCCCC"> like so what could</font>

131
00:06:19,669 --> 00:06:26,179
<font color="#E5E5E5">we maybe do we could generate a password</font>

132
00:06:23,479 --> 00:06:28,489
<font color="#E5E5E5">like we did before where we are</font>

133
00:06:26,179 --> 00:06:31,969
guaranteed to<font color="#CCCCCC"> have</font><font color="#E5E5E5"> symbols or numbers in</font>

134
00:06:28,489 --> 00:06:34,219
<font color="#CCCCCC">our password and then say whatever I</font>

135
00:06:31,969 --> 00:06:36,349
don't<font color="#CCCCCC"> care</font><font color="#E5E5E5"> what's in this</font><font color="#CCCCCC"> password if it</font>

136
00:06:34,219 --> 00:06:38,779
has a symbol or<font color="#E5E5E5"> a number that's fine I'm</font>

137
00:06:36,349 --> 00:06:40,459
requiring<font color="#E5E5E5"> in this case a symbol and the</font>

138
00:06:38,779 --> 00:06:44,769
number<font color="#CCCCCC"> and so I'm gonna generate one of</font>

139
00:06:40,459 --> 00:06:47,149
<font color="#E5E5E5">each and then just mix them together</font>

140
00:06:44,769 --> 00:06:48,919
that<font color="#E5E5E5"> would guarantee you that</font><font color="#CCCCCC"> our</font>

141
00:06:47,149 --> 00:06:53,629
password<font color="#E5E5E5"> would have a symbol in</font><font color="#CCCCCC"> a number</font>

142
00:06:48,919 --> 00:06:56,419
and this algorithm<font color="#CCCCCC"> fails to produce a</font>

143
00:06:53,629 --> 00:06:59,239
uniform<font color="#CCCCCC"> distribution</font><font color="#E5E5E5"> so let's take a</font>

144
00:06:56,419 --> 00:07:03,198
very<font color="#CCCCCC"> very simple case you have two</font>

145
00:06:59,239 --> 00:07:05,328
<font color="#E5E5E5">alphabets</font><font color="#CCCCCC"> a second alphabet contains the</font>

146
00:07:03,199 --> 00:07:07,429
letter or the<font color="#E5E5E5"> number</font><font color="#CCCCCC"> one and you're</font>

147
00:07:05,329 --> 00:07:10,729
required<font color="#E5E5E5"> to have a representative from</font>

148
00:07:07,429 --> 00:07:12,438
both of<font color="#E5E5E5"> these alphabets and your</font>

149
00:07:10,729 --> 00:07:15,829
password<font color="#E5E5E5"> in this case is of length three</font>

150
00:07:12,439 --> 00:07:17,839
so we didn't<font color="#E5E5E5"> related one</font><font color="#CCCCCC"> we didn't write</font>

151
00:07:15,829 --> 00:07:19,579
<font color="#E5E5E5">a password of length two maybe it</font>

152
00:07:17,839 --> 00:07:22,039
contains a number<font color="#E5E5E5"> or in a letter maybe</font>

153
00:07:19,579 --> 00:07:23,869
it<font color="#E5E5E5"> doesn't and it does and then we</font>

154
00:07:22,039 --> 00:07:26,509
didn't read a number<font color="#E5E5E5"> so that we require</font>

155
00:07:23,869 --> 00:07:28,039
<font color="#E5E5E5">that we're having numbers I guess the</font>

156
00:07:26,509 --> 00:07:33,009
requirements are that we<font color="#CCCCCC"> have one</font><font color="#E5E5E5"> number</font>

157
00:07:28,039 --> 00:07:37,429
that we have one of each and so we have

158
00:07:33,009 --> 00:07:42,499
<font color="#E5E5E5">places this one number could go</font><font color="#CCCCCC"> 1 2 or 3</font>

159
00:07:37,429 --> 00:07:45,049
and the problem with our algorithm<font color="#E5E5E5"> here</font>

160
00:07:42,499 --> 00:07:47,539
is that these<font color="#E5E5E5"> last two positions are the</font>

161
00:07:45,050 --> 00:07:50,300
same either way<font color="#E5E5E5"> you're going to end</font><font color="#CCCCCC"> up</font>

162
00:07:47,539 --> 00:07:52,339
<font color="#E5E5E5">with a 1 1 so there's only</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> way to</font>

163
00:07:50,300 --> 00:07:55,129
<font color="#E5E5E5">end up with 1 a 1 there</font><font color="#CCCCCC"> are two ways to</font>

164
00:07:52,339 --> 00:07:57,219
<font color="#E5E5E5">end up with a 1 1 which means we don't</font>

165
00:07:55,129 --> 00:08:00,139
<font color="#E5E5E5">have</font><font color="#CCCCCC"> a uniform distribution</font><font color="#E5E5E5"> and we can't</font>

166
00:07:57,219 --> 00:08:02,349
report<font color="#E5E5E5"> the entropy with any kind of</font>

167
00:08:00,139 --> 00:08:02,349
integrity

168
00:08:02,370 --> 00:08:06,060
okay but I<font color="#E5E5E5"> still suck on this problem</font>

169
00:08:04,860 --> 00:08:09,560
<font color="#E5E5E5">and</font><font color="#CCCCCC"> I didn't want</font><font color="#E5E5E5"> to go back to the</font>

170
00:08:06,060 --> 00:08:12,720
<font color="#CCCCCC">obvious sit down approach</font><font color="#E5E5E5"> so take two</font>

171
00:08:09,560 --> 00:08:16,169
let's say<font color="#E5E5E5"> we generate this password like</font>

172
00:08:12,720 --> 00:08:19,169
<font color="#E5E5E5">we did before</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this time instead</font><font color="#CCCCCC"> of</font>

173
00:08:16,169 --> 00:08:20,520
generating<font color="#E5E5E5"> a couple of characters from</font>

174
00:08:19,169 --> 00:08:25,469
the other character sets and mixing them

175
00:08:20,520 --> 00:08:27,000
<font color="#E5E5E5">in let's separate them out so we I'm</font>

176
00:08:25,470 --> 00:08:30,120
just<font color="#CCCCCC"> gonna go back and and do that</font><font color="#E5E5E5"> again</font>

177
00:08:27,000 --> 00:08:31,620
<font color="#CCCCCC">right so we're keeping the same</font><font color="#E5E5E5"> order</font>

178
00:08:30,120 --> 00:08:33,870
you saw the<font color="#E5E5E5"> symbol stayed in the same</font>

179
00:08:31,620 --> 00:08:36,060
<font color="#E5E5E5">order</font><font color="#CCCCCC"> we just separate</font><font color="#E5E5E5"> them out and then</font>

180
00:08:33,870 --> 00:08:38,640
add an extra character<font color="#E5E5E5"> on the front of</font>

181
00:08:36,059 --> 00:08:41,880
<font color="#CCCCCC">each of these strings</font><font color="#E5E5E5"> and then mix them</font>

182
00:08:38,640 --> 00:08:43,679
back together<font color="#E5E5E5"> this would solve the issue</font>

183
00:08:41,880 --> 00:08:45,000
<font color="#E5E5E5">of having two places to stick the one</font>

184
00:08:43,679 --> 00:08:48,359
right<font color="#CCCCCC"> because there's only one way to</font>

185
00:08:45,000 --> 00:08:50,940
generate<font color="#E5E5E5"> that that string of numbers so</font>

186
00:08:48,360 --> 00:08:53,070
coming back to<font color="#CCCCCC"> our example</font><font color="#E5E5E5"> we separate</font>

187
00:08:50,940 --> 00:08:55,320
the<font color="#E5E5E5"> first thing we generate out into its</font>

188
00:08:53,070 --> 00:08:59,490
component strings<font color="#E5E5E5"> then stick the one on</font>

189
00:08:55,320 --> 00:09:03,930
the front<font color="#E5E5E5"> and now we have three ways</font><font color="#CCCCCC"> to</font>

190
00:08:59,490 --> 00:09:05,250
combine<font color="#E5E5E5"> this we have two characters one</font>

191
00:09:03,930 --> 00:09:06,810
character<font color="#CCCCCC"> this three ways to</font><font color="#E5E5E5"> put them</font>

192
00:09:05,250 --> 00:09:12,020
together<font color="#E5E5E5"> those are</font><font color="#CCCCCC"> the three ways and</font>

193
00:09:06,810 --> 00:09:16,140
they're all equally likely the problem

194
00:09:12,020 --> 00:09:17,430
let's look at this case originally

195
00:09:16,140 --> 00:09:19,470
generate the two character string

196
00:09:17,430 --> 00:09:21,120
<font color="#E5E5E5">remember we're trying to make a three</font>

197
00:09:19,470 --> 00:09:21,990
character<font color="#E5E5E5"> password we donate the two</font>

198
00:09:21,120 --> 00:09:24,839
character string there are four

199
00:09:21,990 --> 00:09:27,630
possibilities<font color="#CCCCCC"> these are the floor</font><font color="#E5E5E5"> and</font>

200
00:09:24,839 --> 00:09:29,520
what happens when we generate<font color="#E5E5E5"> the next</font>

201
00:09:27,630 --> 00:09:34,610
character<font color="#CCCCCC"> we'll say in this case it's a</font>

202
00:09:29,520 --> 00:09:37,230
<font color="#CCCCCC">one for</font><font color="#E5E5E5"> the first case we have a a and</font>

203
00:09:34,610 --> 00:09:38,520
when we<font color="#CCCCCC"> generate a</font><font color="#E5E5E5"> one and we mix them</font>

204
00:09:37,230 --> 00:09:40,200
<font color="#E5E5E5">together these are</font><font color="#CCCCCC"> the three</font>

205
00:09:38,520 --> 00:09:42,569
possibilities<font color="#CCCCCC"> each of them equally</font>

206
00:09:40,200 --> 00:09:45,870
likely for the second<font color="#E5E5E5"> case this is the</font>

207
00:09:42,570 --> 00:09:47,820
one we looked<font color="#E5E5E5"> at a one split them apart</font>

208
00:09:45,870 --> 00:09:50,970
<font color="#CCCCCC">add the one on the front mix them back</font>

209
00:09:47,820 --> 00:09:53,520
together<font color="#E5E5E5"> three possibilities again same</font>

210
00:09:50,970 --> 00:09:55,220
for<font color="#E5E5E5"> this</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and then for this</font><font color="#CCCCCC"> last one</font>

211
00:09:53,520 --> 00:09:57,329
there's only<font color="#E5E5E5"> one possibility because</font>

212
00:09:55,220 --> 00:10:01,140
we're<font color="#E5E5E5"> not requiring letters here only</font>

213
00:09:57,330 --> 00:10:04,380
requiring do this<font color="#E5E5E5"> so if you generate a</font>

214
00:10:01,140 --> 00:10:06,150
<font color="#CCCCCC">the string 1 1 and you add</font><font color="#E5E5E5"> one on the</font>

215
00:10:04,380 --> 00:10:08,130
<font color="#E5E5E5">front there's no mixing to do you're</font>

216
00:10:06,150 --> 00:10:10,120
done

217
00:10:08,130 --> 00:10:12,850
these ones in<font color="#E5E5E5"> the center here are</font>

218
00:10:10,120 --> 00:10:14,680
actually<font color="#E5E5E5"> the same why is that because a</font>

219
00:10:12,850 --> 00:10:17,200
<font color="#CCCCCC">one</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> one a when you</font><font color="#E5E5E5"> split them into</font>

220
00:10:14,680 --> 00:10:19,660
two strings<font color="#E5E5E5"> a and one are going to be</font>

221
00:10:17,200 --> 00:10:21,520
the same and so when we<font color="#CCCCCC"> generate the</font><font color="#E5E5E5"> one</font>

222
00:10:19,660 --> 00:10:23,439
stick on the front we<font color="#E5E5E5"> have basically</font>

223
00:10:21,520 --> 00:10:25,319
we're starting from the same spot<font color="#CCCCCC"> we end</font>

224
00:10:23,440 --> 00:10:28,750
<font color="#E5E5E5">up with the same results which means</font>

225
00:10:25,320 --> 00:10:32,560
<font color="#E5E5E5">these</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> our seven possibilities</font><font color="#CCCCCC"> total</font>

226
00:10:28,750 --> 00:10:34,060
on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom</font><font color="#CCCCCC"> makes sense we have three</font>

227
00:10:32,560 --> 00:10:35,410
<font color="#E5E5E5">characters long two characters to choose</font>

228
00:10:34,060 --> 00:10:37,420
from<font color="#E5E5E5"> there would be two to</font><font color="#CCCCCC"> the third</font>

229
00:10:35,410 --> 00:10:39,610
power<font color="#CCCCCC"> but we're not allowing AAA</font>

230
00:10:37,420 --> 00:10:44,349
because it doesn't have a<font color="#CCCCCC"> 1 in it and so</font>

231
00:10:39,610 --> 00:10:46,420
we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> seven possibilities non-uniform</font>

232
00:10:44,350 --> 00:10:49,090
distribution comes in so this<font color="#E5E5E5"> first</font>

233
00:10:46,420 --> 00:10:53,680
column<font color="#E5E5E5"> remember the very first</font><font color="#CCCCCC"> thing we</font>

234
00:10:49,090 --> 00:10:57,810
generated was a a and there is a<font color="#CCCCCC"> 1/4 1</font>

235
00:10:53,680 --> 00:11:01,209
in<font color="#CCCCCC"> 4 chance of</font><font color="#E5E5E5"> generating that string</font>

236
00:10:57,810 --> 00:11:02,949
each of those possibilities alts has a

237
00:11:01,210 --> 00:11:05,590
<font color="#CCCCCC">one-third chance</font><font color="#E5E5E5"> of being generated he</font>

238
00:11:02,950 --> 00:11:08,260
grew likely and so<font color="#CCCCCC"> there's a 1/12 chance</font>

239
00:11:05,590 --> 00:11:10,720
of any of those<font color="#CCCCCC"> 3 results being</font>

240
00:11:08,260 --> 00:11:14,860
generated in the second column though<font color="#CCCCCC"> a</font>

241
00:11:10,720 --> 00:11:18,490
1 and 1<font color="#CCCCCC"> a produce the same 3 results and</font>

242
00:11:14,860 --> 00:11:20,440
so we're<font color="#E5E5E5"> treating them as basically one</font>

243
00:11:18,490 --> 00:11:22,840
starting point there's a there's a 1/2

244
00:11:20,440 --> 00:11:25,150
<font color="#CCCCCC">chance of generating either a 1 or 1 a</font>

245
00:11:22,840 --> 00:11:27,250
at the beginning<font color="#E5E5E5"> and then there's a 1 in</font>

246
00:11:25,150 --> 00:11:30,459
<font color="#E5E5E5">third one in three chance of generating</font>

247
00:11:27,250 --> 00:11:34,000
<font color="#E5E5E5">any of the items in the column and so</font>

248
00:11:30,460 --> 00:11:36,850
1/2 1/3 there's a 1/6 chance of getting

249
00:11:34,000 --> 00:11:39,160
any of those<font color="#E5E5E5"> results this last column</font>

250
00:11:36,850 --> 00:11:41,590
there's a 1/4 chance<font color="#CCCCCC"> of getting one</font><font color="#E5E5E5"> one</font>

251
00:11:39,160 --> 00:11:44,680
again at the<font color="#CCCCCC"> beginning and then there</font>

252
00:11:41,590 --> 00:11:46,600
are<font color="#CCCCCC"> no other places to go from there so</font>

253
00:11:44,680 --> 00:11:49,630
we<font color="#CCCCCC"> have a 1/4 chance</font><font color="#E5E5E5"> of getting one one</font>

254
00:11:46,600 --> 00:11:53,920
one that<font color="#E5E5E5"> makes this final result</font><font color="#CCCCCC"> the</font>

255
00:11:49,630 --> 00:11:55,660
<font color="#CCCCCC">most probable of any of the results</font><font color="#E5E5E5"> and</font>

256
00:11:53,920 --> 00:12:00,160
it means that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't have a uniform</font>

257
00:11:55,660 --> 00:12:04,209
<font color="#E5E5E5">distribution so we are back to where</font><font color="#CCCCCC"> we</font>

258
00:12:00,160 --> 00:12:09,180
started<font color="#E5E5E5"> we have this approach and</font><font color="#CCCCCC"> we</font>

259
00:12:04,210 --> 00:12:14,110
<font color="#E5E5E5">roll with it so we have this equation</font>

260
00:12:09,180 --> 00:12:16,380
take the length or<font color="#CCCCCC"> the work all right</font>

261
00:12:14,110 --> 00:12:19,150
take the number of possibilities<font color="#E5E5E5"> for</font>

262
00:12:16,380 --> 00:12:20,050
drawing from drawing<font color="#E5E5E5"> randomly from</font><font color="#CCCCCC"> the</font>

263
00:12:19,150 --> 00:12:22,329
entire alphabet

264
00:12:20,050 --> 00:12:23,589
subtract all the ones that are only

265
00:12:22,330 --> 00:12:26,440
<font color="#CCCCCC">letters subtract all the ones that are</font>

266
00:12:23,589 --> 00:12:30,339
<font color="#E5E5E5">only digits</font><font color="#CCCCCC"> and then these drawbacks</font>

267
00:12:26,440 --> 00:12:31,630
<font color="#E5E5E5">that we talked about just to make a</font>

268
00:12:30,339 --> 00:12:36,040
little<font color="#E5E5E5"> things a little bit easier on</font><font color="#CCCCCC"> us</font>

269
00:12:31,630 --> 00:12:39,730
<font color="#E5E5E5">we're talking about entropy but since we</font>

270
00:12:36,040 --> 00:12:41,290
<font color="#E5E5E5">have to subtract</font><font color="#CCCCCC"> to these</font><font color="#E5E5E5"> number of</font>

271
00:12:39,730 --> 00:12:43,510
<font color="#E5E5E5">possibilities before we can take the log</font>

272
00:12:41,290 --> 00:12:45,189
let's just you<font color="#E5E5E5"> know remove the log to</font>

273
00:12:43,510 --> 00:12:45,640
<font color="#E5E5E5">make the the notation a</font><font color="#CCCCCC"> little bit</font>

274
00:12:45,190 --> 00:12:47,920
easier

275
00:12:45,640 --> 00:12:50,110
we can't distribute<font color="#E5E5E5"> the log function</font>

276
00:12:47,920 --> 00:12:52,149
<font color="#E5E5E5">among all the terms and so it's not</font>

277
00:12:50,110 --> 00:12:54,250
<font color="#E5E5E5">really useful in our conversation</font><font color="#CCCCCC"> so</font>

278
00:12:52,149 --> 00:12:56,829
we'll talk<font color="#CCCCCC"> about in instead</font><font color="#E5E5E5"> of H</font><font color="#CCCCCC"> and</font>

279
00:12:54,250 --> 00:12:58,390
being the number of possibilities<font color="#E5E5E5"> or</font>

280
00:12:56,829 --> 00:13:01,920
number<font color="#E5E5E5"> of possible results and an H</font>

281
00:12:58,390 --> 00:13:05,829
would just be the log<font color="#E5E5E5"> of n log base 2</font>

282
00:13:01,920 --> 00:13:09,870
<font color="#E5E5E5">all right so we have this</font><font color="#CCCCCC"> two character</font>

283
00:13:05,829 --> 00:13:09,870
or two required sets<font color="#CCCCCC"> letters</font><font color="#E5E5E5"> and digits</font>

284
00:13:10,980 --> 00:13:17,050
<font color="#CCCCCC">this</font><font color="#E5E5E5"> equation is good if we wanted</font><font color="#CCCCCC"> to</font>

285
00:13:14,440 --> 00:13:19,120
say that there are three required sets

286
00:13:17,050 --> 00:13:23,579
letters<font color="#CCCCCC"> digits and symbols</font><font color="#E5E5E5"> for example</font>

287
00:13:19,120 --> 00:13:25,420
we would<font color="#E5E5E5"> say we could say take the</font>

288
00:13:23,579 --> 00:13:27,399
number of possibilities<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the whole</font>

289
00:13:25,420 --> 00:13:29,620
<font color="#CCCCCC">alphabet again write all the all the</font>

290
00:13:27,399 --> 00:13:32,260
alphabets merge together<font color="#CCCCCC"> subtract the</font>

291
00:13:29,620 --> 00:13:35,200
ones that are<font color="#CCCCCC"> only represented by one</font>

292
00:13:32,260 --> 00:13:36,640
alphabet and then subtract the<font color="#E5E5E5"> ones that</font>

293
00:13:35,200 --> 00:13:38,560
are only a<font color="#CCCCCC"> combination</font><font color="#E5E5E5"> of letters and</font>

294
00:13:36,640 --> 00:13:40,540
<font color="#E5E5E5">digits only</font><font color="#CCCCCC"> combination of letters and</font>

295
00:13:38,560 --> 00:13:41,680
<font color="#E5E5E5">symbols and only a combination digits</font>

296
00:13:40,540 --> 00:13:45,099
and symbols because none of<font color="#E5E5E5"> those</font>

297
00:13:41,680 --> 00:13:47,680
possibilities<font color="#E5E5E5"> contains all three letters</font>

298
00:13:45,100 --> 00:13:48,730
digits<font color="#E5E5E5"> and symbols as I said this</font>

299
00:13:47,680 --> 00:13:51,729
equation is good

300
00:13:48,730 --> 00:13:53,740
unfortunately this<font color="#E5E5E5"> equation is not good</font>

301
00:13:51,730 --> 00:13:57,540
what I said was good but<font color="#E5E5E5"> that's not what</font>

302
00:13:53,740 --> 00:14:06,480
<font color="#E5E5E5">this equation is doing so we said this</font>

303
00:13:57,540 --> 00:14:13,060
<font color="#E5E5E5">and the problem here is this</font>

304
00:14:06,480 --> 00:14:14,830
the set of letters is a subset<font color="#CCCCCC"> of the</font>

305
00:14:13,060 --> 00:14:17,109
set<font color="#CCCCCC"> of letters there's also a</font><font color="#E5E5E5"> subset of</font>

306
00:14:14,830 --> 00:14:19,000
the letter of<font color="#CCCCCC"> the Union of</font><font color="#E5E5E5"> letters and</font>

307
00:14:17,110 --> 00:14:20,590
<font color="#E5E5E5">digits</font><font color="#CCCCCC"> it's a subset</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> Union of</font>

308
00:14:19,000 --> 00:14:23,710
letters<font color="#E5E5E5"> and symbols basically that means</font>

309
00:14:20,590 --> 00:14:25,840
if we even<font color="#E5E5E5"> read</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> passer ABC we would</font>

310
00:14:23,710 --> 00:14:27,430
subtract it for not containing<font color="#E5E5E5"> digits or</font>

311
00:14:25,840 --> 00:14:29,020
symbols<font color="#CCCCCC"> we'd subtract it for not</font>

312
00:14:27,430 --> 00:14:30,130
containing digits<font color="#E5E5E5"> and we'd attract it</font>

313
00:14:29,020 --> 00:14:32,560
for not containing symbols

314
00:14:30,130 --> 00:14:38,950
so Richard<font color="#CCCCCC"> factoring at three times</font><font color="#E5E5E5"> what</font>

315
00:14:32,560 --> 00:14:40,989
we need is to<font color="#E5E5E5"> subtract each kind of</font>

316
00:14:38,950 --> 00:14:43,510
password<font color="#CCCCCC"> only once</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> so if it has</font>

317
00:14:40,990 --> 00:14:44,860
both letters<font color="#CCCCCC"> and digits in</font><font color="#E5E5E5"> it we want</font><font color="#CCCCCC"> to</font>

318
00:14:43,510 --> 00:14:46,330
subtract that one so<font color="#E5E5E5"> we</font><font color="#CCCCCC"> don't want to</font>

319
00:14:44,860 --> 00:14:47,920
subtract also the ones that<font color="#E5E5E5"> only have</font>

320
00:14:46,330 --> 00:14:50,020
letters<font color="#CCCCCC"> to their and they don't want to</font>

321
00:14:47,920 --> 00:14:52,209
only have digits<font color="#CCCCCC"> and we already have</font>

322
00:14:50,020 --> 00:14:54,630
something<font color="#E5E5E5"> we just talked about in a</font>

323
00:14:52,210 --> 00:14:58,480
previous slide<font color="#E5E5E5"> that will let us do that</font>

324
00:14:54,630 --> 00:15:02,710
<font color="#E5E5E5">if we take the number</font><font color="#CCCCCC"> of possibilities</font>

325
00:14:58,480 --> 00:15:05,770
<font color="#CCCCCC">for</font><font color="#E5E5E5"> letters and symbols</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> sorry ladies</font>

326
00:15:02,710 --> 00:15:08,200
<font color="#CCCCCC">and digits here this</font><font color="#E5E5E5"> first one that's</font>

327
00:15:05,770 --> 00:15:10,689
<font color="#E5E5E5">going to be this this equation back a</font>

328
00:15:08,200 --> 00:15:13,800
couple slides<font color="#CCCCCC"> ago where we had letters</font>

329
00:15:10,690 --> 00:15:16,450
<font color="#E5E5E5">and digits - letters -</font><font color="#CCCCCC"> did it's very</font>

330
00:15:13,800 --> 00:15:19,750
<font color="#CCCCCC">simplified explanation of that</font>

331
00:15:16,450 --> 00:15:21,820
<font color="#E5E5E5">terminology there but this these</font>

332
00:15:19,750 --> 00:15:23,650
equations right so we're<font color="#CCCCCC"> defining</font><font color="#E5E5E5"> our</font>

333
00:15:21,820 --> 00:15:25,060
our entropy or our<font color="#E5E5E5"> number of</font>

334
00:15:23,650 --> 00:15:28,750
possibilities in terms<font color="#E5E5E5"> of our</font><font color="#CCCCCC"> previous</font>

335
00:15:25,060 --> 00:15:30,430
function this looks<font color="#E5E5E5"> like recursion</font>

336
00:15:28,750 --> 00:15:31,950
<font color="#E5E5E5">waiting to happen and that's what we're</font>

337
00:15:30,430 --> 00:15:35,199
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to end up with</font><font color="#E5E5E5"> so let's talk</font><font color="#CCCCCC"> about</font>

338
00:15:31,950 --> 00:15:38,020
how to<font color="#E5E5E5"> describe this more generically</font><font color="#CCCCCC"> we</font>

339
00:15:35,200 --> 00:15:39,910
<font color="#E5E5E5">were talking about LD and</font><font color="#CCCCCC"> s as letters</font>

340
00:15:38,020 --> 00:15:43,300
digits and symbols<font color="#E5E5E5"> let's just talk about</font>

341
00:15:39,910 --> 00:15:46,990
a arbitrary<font color="#E5E5E5"> set</font><font color="#CCCCCC"> of required character</font>

342
00:15:43,300 --> 00:15:48,750
sets so this is a set of sets of

343
00:15:46,990 --> 00:15:53,410
characters

344
00:15:48,750 --> 00:15:55,300
R 1 R 2 R<font color="#CCCCCC"> 3 there could be</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> could be</font>

345
00:15:53,410 --> 00:15:58,600
whatever they just<font color="#CCCCCC"> need to be distinct</font>

346
00:15:55,300 --> 00:16:00,280
<font color="#CCCCCC">from each</font><font color="#E5E5E5"> other</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so then you</font>

347
00:15:58,600 --> 00:16:07,150
represent the number<font color="#E5E5E5"> of possibilities as</font>

348
00:16:00,280 --> 00:16:10,019
the as n subscript R of the length of

349
00:16:07,150 --> 00:16:12,869
the password<font color="#CCCCCC"> okay</font>

350
00:16:10,019 --> 00:16:17,009
so using<font color="#CCCCCC"> this notation</font><font color="#E5E5E5"> we can start to</font>

351
00:16:12,869 --> 00:16:18,989
<font color="#E5E5E5">build up a pattern</font><font color="#CCCCCC"> if we said we have no</font>

352
00:16:17,009 --> 00:16:20,429
required sets of characters<font color="#CCCCCC"> you start</font>

353
00:16:18,989 --> 00:16:23,699
with the simplest case<font color="#E5E5E5"> this is the empty</font>

354
00:16:20,429 --> 00:16:25,139
<font color="#E5E5E5">set we there</font><font color="#CCCCCC"> are no characters</font><font color="#E5E5E5"> in our</font>

355
00:16:23,699 --> 00:16:26,969
<font color="#E5E5E5">alphabet then that means there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> no</font>

356
00:16:25,139 --> 00:16:29,009
passwords we could<font color="#E5E5E5"> generate so the</font>

357
00:16:26,970 --> 00:16:30,569
number<font color="#E5E5E5"> of possibilities here is</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> if</font>

358
00:16:29,009 --> 00:16:34,589
we<font color="#CCCCCC"> had one required set of characters</font>

359
00:16:30,569 --> 00:16:36,719
<font color="#E5E5E5">though this is the same as not caring</font>

360
00:16:34,589 --> 00:16:38,420
<font color="#E5E5E5">about requiring</font><font color="#CCCCCC"> right you</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> have one</font>

361
00:16:36,720 --> 00:16:40,709
alphabet and you're drawing from<font color="#CCCCCC"> that</font>

362
00:16:38,420 --> 00:16:42,569
<font color="#CCCCCC">and so it's the</font><font color="#E5E5E5"> original equation that</font>

363
00:16:40,709 --> 00:16:47,069
<font color="#E5E5E5">we talked about take the size of the</font>

364
00:16:42,569 --> 00:16:48,449
alphabet<font color="#CCCCCC"> raise</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> to the power of n I'll</font>

365
00:16:47,069 --> 00:16:50,779
come<font color="#CCCCCC"> back</font><font color="#E5E5E5"> to in</font><font color="#CCCCCC"> just a minute but</font><font color="#E5E5E5"> this</font>

366
00:16:48,449 --> 00:16:55,229
is just subtracting the empty set

367
00:16:50,779 --> 00:16:56,610
<font color="#E5E5E5">version</font><font color="#CCCCCC"> the line previous and</font><font color="#E5E5E5"> that equal</font>

368
00:16:55,230 --> 00:17:03,449
to<font color="#CCCCCC"> zero so we're not changing our</font>

369
00:16:56,610 --> 00:17:06,089
equation<font color="#CCCCCC"> all right starts to get</font>

370
00:17:03,449 --> 00:17:08,099
interesting<font color="#E5E5E5"> we have now two acquired</font>

371
00:17:06,089 --> 00:17:10,230
character sets<font color="#E5E5E5"> and this is similar to</font>

372
00:17:08,099 --> 00:17:11,969
what we saw<font color="#CCCCCC"> before but we're defining it</font>

373
00:17:10,230 --> 00:17:14,309
in terms<font color="#E5E5E5"> of the previous line two</font><font color="#CCCCCC"> lines</font>

374
00:17:11,970 --> 00:17:16,949
the previous two lines<font color="#E5E5E5"> so we have the</font>

375
00:17:14,309 --> 00:17:19,490
required character sets that<font color="#CCCCCC"> are Union</font>

376
00:17:16,949 --> 00:17:21,899
together to provide our full alphabet

377
00:17:19,490 --> 00:17:24,179
<font color="#E5E5E5">remember we could end up with passwords</font>

378
00:17:21,898 --> 00:17:25,559
from<font color="#E5E5E5"> that alphabet</font><font color="#CCCCCC"> that don't require or</font>

379
00:17:24,179 --> 00:17:27,059
don't contain one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the character sets</font>

380
00:17:25,559 --> 00:17:28,980
and so we're<font color="#E5E5E5"> going to subtract those</font>

381
00:17:27,059 --> 00:17:31,889
we're subtracting again<font color="#CCCCCC"> the empty set</font>

382
00:17:28,980 --> 00:17:34,470
there<font color="#CCCCCC"> which is zero</font><font color="#E5E5E5"> and then we're</font>

383
00:17:31,889 --> 00:17:36,240
subtracting the number<font color="#E5E5E5"> where it's just</font>

384
00:17:34,470 --> 00:17:38,700
containing the<font color="#E5E5E5"> first</font><font color="#CCCCCC"> required care to</font>

385
00:17:36,240 --> 00:17:40,320
set and the ones were it's<font color="#E5E5E5"> just</font>

386
00:17:38,700 --> 00:17:42,659
represented by the<font color="#E5E5E5"> second required here</font>

387
00:17:40,320 --> 00:17:44,010
to set again<font color="#E5E5E5"> this is the same or</font>

388
00:17:42,659 --> 00:17:47,520
equivalent to<font color="#E5E5E5"> the function that we</font>

389
00:17:44,010 --> 00:17:49,289
defined<font color="#E5E5E5"> earlier so the problem that we</font>

390
00:17:47,520 --> 00:17:53,309
<font color="#E5E5E5">had was with three required character</font>

391
00:17:49,289 --> 00:17:56,639
says we said that if<font color="#CCCCCC"> we could</font><font color="#E5E5E5"> define in</font>

392
00:17:53,309 --> 00:17:59,190
in terms in with three required

393
00:17:56,639 --> 00:18:00,689
character sets<font color="#E5E5E5"> in terms of in with two</font>

394
00:17:59,190 --> 00:18:03,600
required character sets we'd be fine

395
00:18:00,690 --> 00:18:07,200
<font color="#E5E5E5">right because each of these last three</font>

396
00:18:03,600 --> 00:18:09,029
terms<font color="#CCCCCC"> we know that the number</font><font color="#E5E5E5"> of</font>

397
00:18:07,200 --> 00:18:11,820
possibilities being retained<font color="#CCCCCC"> from that</font>

398
00:18:09,029 --> 00:18:14,460
is the number<font color="#E5E5E5"> of passwords</font><font color="#CCCCCC"> that can be</font>

399
00:18:11,820 --> 00:18:17,439
<font color="#E5E5E5">generated</font><font color="#CCCCCC"> where both</font><font color="#E5E5E5"> R</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and R</font><font color="#CCCCCC"> 2</font>

400
00:18:14,460 --> 00:18:19,659
represented or r1<font color="#E5E5E5"> r3 r2 or thing</font>

401
00:18:17,440 --> 00:18:22,419
<font color="#E5E5E5">and so we're not subtracting anything</font>

402
00:18:19,659 --> 00:18:26,649
<font color="#E5E5E5">twice here we want to do is figure out</font>

403
00:18:22,419 --> 00:18:28,899
how can we make<font color="#CCCCCC"> this Jenek to give us</font>

404
00:18:26,649 --> 00:18:30,939
our give ourselves a function that<font color="#E5E5E5"> can</font>

405
00:18:28,899 --> 00:18:32,699
<font color="#CCCCCC">operate on an</font><font color="#E5E5E5"> arbitrary</font><font color="#CCCCCC"> number of</font>

406
00:18:30,940 --> 00:18:37,450
character sets required character<font color="#E5E5E5"> sets</font>

407
00:18:32,700 --> 00:18:39,970
so if<font color="#E5E5E5"> we look here at the</font><font color="#CCCCCC"> the subscripts</font>

408
00:18:37,450 --> 00:18:42,279
<font color="#CCCCCC">in our definitions</font><font color="#E5E5E5"> you can see that each</font>

409
00:18:39,970 --> 00:18:45,399
<font color="#E5E5E5">time we're unioning all of them together</font>

410
00:18:42,279 --> 00:18:49,090
<font color="#CCCCCC">it's pretty</font><font color="#E5E5E5"> obvious even</font><font color="#CCCCCC"> in the first</font>

411
00:18:45,399 --> 00:18:50,168
<font color="#E5E5E5">one you</font><font color="#CCCCCC"> could call that</font><font color="#E5E5E5"> the union of all</font>

412
00:18:49,090 --> 00:18:52,149
the characters that's because there's

413
00:18:50,169 --> 00:18:53,500
<font color="#E5E5E5">only one and then the empty set there's</font>

414
00:18:52,149 --> 00:19:01,299
nothing to<font color="#CCCCCC"> union there's nothing there</font>

415
00:18:53,500 --> 00:19:04,360
<font color="#CCCCCC">okay now what about the second</font><font color="#E5E5E5"> term so</font>

416
00:19:01,299 --> 00:19:07,149
our<font color="#E5E5E5"> subscripts</font><font color="#CCCCCC"> is three required</font>

417
00:19:04,360 --> 00:19:10,719
character sets and these<font color="#E5E5E5"> underlying</font>

418
00:19:07,149 --> 00:19:13,239
pieces<font color="#E5E5E5"> are the only thing different in</font>

419
00:19:10,720 --> 00:19:18,730
<font color="#CCCCCC">each of these terms within</font><font color="#E5E5E5"> the second</font>

420
00:19:13,240 --> 00:19:23,169
term<font color="#E5E5E5"> right so what pattern can you see</font>

421
00:19:18,730 --> 00:19:26,620
in the underlined pieces each of those

422
00:19:23,169 --> 00:19:30,159
is a proper<font color="#CCCCCC"> subset of the one on the far</font>

423
00:19:26,620 --> 00:19:33,149
left<font color="#CCCCCC"> r1 r2</font><font color="#E5E5E5"> r3 so and in fact</font><font color="#CCCCCC"> these are</font>

424
00:19:30,159 --> 00:19:37,149
<font color="#CCCCCC">all of the proper subsets of that</font><font color="#E5E5E5"> set</font>

425
00:19:33,149 --> 00:19:39,969
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> same for the third line the</font>

426
00:19:37,149 --> 00:19:41,350
<font color="#CCCCCC">empty set the set containing just are</font>

427
00:19:39,970 --> 00:19:43,210
one of the set continues to start<font color="#CCCCCC"> sooo</font>

428
00:19:41,350 --> 00:19:45,189
these are the proper subsets and all of

429
00:19:43,210 --> 00:19:48,759
the proper subsets of the set containing

430
00:19:45,190 --> 00:19:50,710
r1 and r2<font color="#E5E5E5"> same for here the only proper</font>

431
00:19:48,759 --> 00:19:52,809
subset of that is the empty set<font color="#E5E5E5"> and</font>

432
00:19:50,710 --> 00:19:59,860
there are no proper subsets of the empty

433
00:19:52,809 --> 00:20:06,399
set<font color="#E5E5E5"> all right the power set is a</font>

434
00:19:59,860 --> 00:20:08,168
function that will get us to<font color="#E5E5E5"> this what</font>

435
00:20:06,399 --> 00:20:11,258
we're looking for<font color="#E5E5E5"> here it is the set of</font>

436
00:20:08,169 --> 00:20:12,340
all subsets of a set so you<font color="#E5E5E5"> can</font>

437
00:20:11,259 --> 00:20:18,690
<font color="#E5E5E5">represent it in set builder notation</font>

438
00:20:12,340 --> 00:20:22,539
like<font color="#CCCCCC"> this where X is</font><font color="#E5E5E5"> any subset of</font><font color="#CCCCCC"> our</font>

439
00:20:18,690 --> 00:20:24,720
so for example with the<font color="#CCCCCC"> three required</font>

440
00:20:22,539 --> 00:20:28,570
character sets this is<font color="#CCCCCC"> the power set of</font>

441
00:20:24,720 --> 00:20:30,370
a set<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> see though</font><font color="#CCCCCC"> that we have</font>

442
00:20:28,570 --> 00:20:32,139
this extra set on the end<font color="#E5E5E5"> our</font>

443
00:20:30,370 --> 00:20:33,790
one or two or<font color="#CCCCCC"> three</font><font color="#E5E5E5"> notes that's the</font>

444
00:20:32,140 --> 00:20:37,030
same as what was passed into the

445
00:20:33,790 --> 00:20:38,980
<font color="#E5E5E5">powerset it is</font><font color="#CCCCCC"> our itself and we</font><font color="#E5E5E5"> don't</font>

446
00:20:37,030 --> 00:20:40,420
care<font color="#E5E5E5"> about that that wasn't one of the</font>

447
00:20:38,980 --> 00:20:44,200
things that we need<font color="#E5E5E5"> to subtract us what</font>

448
00:20:40,420 --> 00:20:45,970
we're subtracting from<font color="#E5E5E5"> right so we want</font>

449
00:20:44,200 --> 00:20:48,640
<font color="#E5E5E5">the set of all proper subsets of a set</font>

450
00:20:45,970 --> 00:20:51,580
which basically means all the subsets

451
00:20:48,640 --> 00:20:53,830
except<font color="#E5E5E5"> for the set itself you can</font>

452
00:20:51,580 --> 00:20:56,980
represent that like this<font color="#E5E5E5"> you can also</font>

453
00:20:53,830 --> 00:21:00,250
<font color="#CCCCCC">represent it with set subtraction the</font>

454
00:20:56,980 --> 00:21:03,820
power set of<font color="#E5E5E5"> our - the set containing</font>

455
00:21:00,250 --> 00:21:05,710
<font color="#E5E5E5">just our all right we have all the</font>

456
00:21:03,820 --> 00:21:11,580
pieces put<font color="#E5E5E5"> together to</font><font color="#CCCCCC"> make our</font>

457
00:21:05,710 --> 00:21:15,190
<font color="#E5E5E5">recursive function we started with and</font>

458
00:21:11,580 --> 00:21:18,159
here is<font color="#E5E5E5"> our function so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see this</font>

459
00:21:15,190 --> 00:21:20,080
first term we're talking about the union

460
00:21:18,160 --> 00:21:21,630
of all<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the sets</font><font color="#E5E5E5"> and that's</font>

461
00:21:20,080 --> 00:21:24,010
represented<font color="#CCCCCC"> here for every X in our</font>

462
00:21:21,630 --> 00:21:27,100
union them all together<font color="#E5E5E5"> and then we're</font>

463
00:21:24,010 --> 00:21:29,520
gonna take<font color="#CCCCCC"> the or raise that the size of</font>

464
00:21:27,100 --> 00:21:33,909
that full alphabet<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the power</font><font color="#E5E5E5"> of n</font>

465
00:21:29,520 --> 00:21:37,300
<font color="#E5E5E5">we're gonna subtract this</font><font color="#CCCCCC"> term so for</font>

466
00:21:33,910 --> 00:21:41,170
every<font color="#CCCCCC"> y in the set represented by the</font>

467
00:21:37,300 --> 00:21:45,760
power set of<font color="#E5E5E5"> our without</font><font color="#CCCCCC"> R itself we're</font>

468
00:21:41,170 --> 00:21:48,730
going<font color="#CCCCCC"> to take to call</font><font color="#E5E5E5"> again in so this</font>

469
00:21:45,760 --> 00:21:51,850
<font color="#CCCCCC">is our recursion this time passing it</font><font color="#E5E5E5"> Y</font>

470
00:21:48,730 --> 00:21:56,320
so we're passing<font color="#E5E5E5"> at a subset of our back</font>

471
00:21:51,850 --> 00:21:58,389
into the original equation<font color="#CCCCCC"> and taking</font>

472
00:21:56,320 --> 00:22:00,939
<font color="#E5E5E5">that value</font><font color="#CCCCCC"> summing it up with all the</font>

473
00:21:58,390 --> 00:22:03,580
other<font color="#CCCCCC"> values for all</font><font color="#E5E5E5"> of the proper</font>

474
00:22:00,940 --> 00:22:07,030
subsets of<font color="#E5E5E5"> R and then subtracting it</font>

475
00:22:03,580 --> 00:22:12,730
from the the<font color="#CCCCCC"> original term of the first</font>

476
00:22:07,030 --> 00:22:15,190
term<font color="#E5E5E5"> one more thing we can add is if we</font>

477
00:22:12,730 --> 00:22:18,670
have a set<font color="#CCCCCC"> of allowed characters</font><font color="#E5E5E5"> let's</font>

478
00:22:15,190 --> 00:22:21,520
say that we are requiring letters and

479
00:22:18,670 --> 00:22:23,290
digits<font color="#E5E5E5"> and we are going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> also allow</font>

480
00:22:21,520 --> 00:22:24,790
symbols<font color="#E5E5E5"> but we don't care</font><font color="#CCCCCC"> if there's a</font>

481
00:22:23,290 --> 00:22:27,159
symbol<font color="#E5E5E5"> there it's probably not a</font>

482
00:22:24,790 --> 00:22:28,550
<font color="#E5E5E5">practical way to approach it but for</font>

483
00:22:27,160 --> 00:22:34,120
<font color="#E5E5E5">example</font>

484
00:22:28,550 --> 00:22:37,909
then we can say<font color="#CCCCCC"> that we union the</font><font color="#E5E5E5"> set</font>

485
00:22:34,120 --> 00:22:39,889
<font color="#E5E5E5">with a with the required character sets</font>

486
00:22:37,910 --> 00:22:41,180
<font color="#E5E5E5">and this is all</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is all the</font>

487
00:22:39,890 --> 00:22:43,790
characters that's we can we can draw

488
00:22:41,180 --> 00:22:45,440
from<font color="#E5E5E5"> that's our full</font><font color="#CCCCCC"> alphabet</font><font color="#E5E5E5"> and then</font>

489
00:22:43,790 --> 00:22:49,850
<font color="#E5E5E5">we just pass it along to</font><font color="#CCCCCC"> our recursive</font>

490
00:22:45,440 --> 00:22:52,460
<font color="#E5E5E5">function the recursion ends when we get</font>

491
00:22:49,850 --> 00:22:54,020
to the empty set of required<font color="#E5E5E5"> character</font>

492
00:22:52,460 --> 00:22:56,090
sets when there are no required

493
00:22:54,020 --> 00:22:58,370
character sets the only alphabet left

494
00:22:56,090 --> 00:23:01,550
are the allowed character sets<font color="#E5E5E5"> and that</font>

495
00:22:58,370 --> 00:23:03,439
is the value<font color="#E5E5E5"> and so that's the ground</font>

496
00:23:01,550 --> 00:23:06,500
<font color="#E5E5E5">for our recursion and we can talk about</font>

497
00:23:03,440 --> 00:23:12,380
the<font color="#E5E5E5"> entropy of this full</font><font color="#CCCCCC"> thing as just</font>

498
00:23:06,500 --> 00:23:13,880
the log base<font color="#CCCCCC"> two of these values so we</font>

499
00:23:12,380 --> 00:23:19,720
talked<font color="#E5E5E5"> about a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of drawbacks at</font>

500
00:23:13,880 --> 00:23:21,980
the beginning what happens if we don't

501
00:23:19,720 --> 00:23:23,690
generate a password<font color="#CCCCCC"> that meets our</font>

502
00:23:21,980 --> 00:23:27,290
<font color="#E5E5E5">requirements</font><font color="#CCCCCC"> well we keep generating</font>

503
00:23:23,690 --> 00:23:30,080
what is the probability that we are

504
00:23:27,290 --> 00:23:31,520
never going to terminate<font color="#E5E5E5"> very small but</font>

505
00:23:30,080 --> 00:23:34,429
what<font color="#E5E5E5"> is the probability</font><font color="#CCCCCC"> for the first</font>

506
00:23:31,520 --> 00:23:37,490
time of keeping the first candidate<font color="#CCCCCC"> or</font>

507
00:23:34,430 --> 00:23:41,360
any single pass through the algorithm

508
00:23:37,490 --> 00:23:44,300
<font color="#E5E5E5">and it looks</font><font color="#CCCCCC"> like this this is</font><font color="#E5E5E5"> if we are</font>

509
00:23:41,360 --> 00:23:46,100
requiring lower and upper digits sorry

510
00:23:44,300 --> 00:23:48,590
<font color="#E5E5E5">lowercase uppercase and digits and</font>

511
00:23:46,100 --> 00:23:51,709
excluding ambiguous characters which<font color="#E5E5E5"> is</font>

512
00:23:48,590 --> 00:23:55,010
our default<font color="#E5E5E5"> for our password generator</font>

513
00:23:51,710 --> 00:23:56,870
at one<font color="#E5E5E5"> password and so you can see for</font>

514
00:23:55,010 --> 00:23:58,460
<font color="#E5E5E5">one character and two characters there</font>

515
00:23:56,870 --> 00:23:59,780
<font color="#E5E5E5">are no</font><font color="#CCCCCC"> possibilities because we're</font>

516
00:23:58,460 --> 00:24:05,390
requiring three different character sets

517
00:23:59,780 --> 00:24:07,070
<font color="#E5E5E5">the three characters the the probability</font>

518
00:24:05,390 --> 00:24:10,010
<font color="#CCCCCC">that we'll accept</font><font color="#E5E5E5"> it the first password</font>

519
00:24:07,070 --> 00:24:12,290
we generate is around<font color="#E5E5E5"> 15% so it's not</font>

520
00:24:10,010 --> 00:24:14,510
<font color="#E5E5E5">super great but you know you start</font>

521
00:24:12,290 --> 00:24:15,680
multiplying that up by a few times and

522
00:24:14,510 --> 00:24:17,750
<font color="#E5E5E5">the probability that we're not</font>

523
00:24:15,680 --> 00:24:19,330
contaminate<font color="#E5E5E5"> it's still pretty small but</font>

524
00:24:17,750 --> 00:24:23,660
it only gets smaller as we get longer

525
00:24:19,330 --> 00:24:28,740
<font color="#CCCCCC">you can see by</font><font color="#E5E5E5"> number six there and that</font>

526
00:24:23,660 --> 00:24:31,710
<font color="#E5E5E5">were over 50% and so we're</font>

527
00:24:28,740 --> 00:24:35,160
more likely<font color="#CCCCCC"> to keep the first</font><font color="#E5E5E5"> password</font>

528
00:24:31,710 --> 00:24:38,670
you generate<font color="#CCCCCC"> then than</font><font color="#E5E5E5"> not and by 20</font>

529
00:24:35,160 --> 00:24:44,850
<font color="#CCCCCC">characters</font><font color="#E5E5E5"> we are at 94% and 32</font>

530
00:24:38,670 --> 00:24:46,950
characters<font color="#E5E5E5"> at 99%</font><font color="#CCCCCC"> so the</font><font color="#E5E5E5"> the this is</font>

531
00:24:44,850 --> 00:24:49,050
<font color="#E5E5E5">directly</font><font color="#CCCCCC"> related to the number of</font><font color="#E5E5E5"> bits</font>

532
00:24:46,950 --> 00:24:52,559
of entropy difference<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is another</font>

533
00:24:49,050 --> 00:24:55,370
kind<font color="#E5E5E5"> of concern is that when we require</font>

534
00:24:52,559 --> 00:24:58,080
character sets<font color="#E5E5E5"> we're actually making our</font>

535
00:24:55,370 --> 00:25:00,389
number of possibilities smaller and so

536
00:24:58,080 --> 00:25:02,879
we're reducing our entropy<font color="#E5E5E5"> because there</font>

537
00:25:00,390 --> 00:25:05,010
aren't<font color="#E5E5E5"> as many possible passwords but as</font>

538
00:25:02,880 --> 00:25:09,410
you get long as the password<font color="#E5E5E5"> gets longer</font>

539
00:25:05,010 --> 00:25:13,610
<font color="#CCCCCC">be the difference that makes</font><font color="#E5E5E5"> strengths</font>

540
00:25:09,410 --> 00:25:16,470
exponentially so at<font color="#CCCCCC"> three characters</font>

541
00:25:13,610 --> 00:25:19,979
<font color="#CCCCCC">there's a three bit about a three bit</font>

542
00:25:16,470 --> 00:25:21,630
difference between requiring the three

543
00:25:19,980 --> 00:25:24,660
character sets and simply allowing<font color="#E5E5E5"> them</font>

544
00:25:21,630 --> 00:25:27,240
<font color="#E5E5E5">at six we're already under a bit right</font>

545
00:25:24,660 --> 00:25:28,590
there's a 50% greater than<font color="#CCCCCC"> 50% chance</font><font color="#E5E5E5"> so</font>

546
00:25:27,240 --> 00:25:32,220
that<font color="#E5E5E5"> means we</font><font color="#CCCCCC"> have less than</font><font color="#E5E5E5"> a bit of</font>

547
00:25:28,590 --> 00:25:35,850
difference<font color="#CCCCCC"> about 20</font><font color="#E5E5E5"> characters were</font>

548
00:25:32,220 --> 00:25:37,530
under a tenth of a bit and 32<font color="#E5E5E5"> characters</font>

549
00:25:35,850 --> 00:25:39,600
<font color="#CCCCCC">it's like a</font><font color="#E5E5E5"> 50th of a bit of</font><font color="#CCCCCC"> a</font>

550
00:25:37,530 --> 00:25:41,399
difference<font color="#CCCCCC"> between requiring the</font>

551
00:25:39,600 --> 00:25:47,520
character sets<font color="#E5E5E5"> and just</font><font color="#CCCCCC"> simply allowing</font>

552
00:25:41,400 --> 00:25:49,530
<font color="#E5E5E5">them so the possibilities were</font>

553
00:25:47,520 --> 00:25:50,580
discarding just the fewer relative to

554
00:25:49,530 --> 00:25:54,360
the<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of possibilities that</font><font color="#CCCCCC"> there</font>

555
00:25:50,580 --> 00:25:57,419
<font color="#CCCCCC">are you could say and start</font><font color="#E5E5E5"> burning now</font>

556
00:25:54,360 --> 00:26:03,110
<font color="#E5E5E5">that requiring the character sets does</font>

557
00:25:57,420 --> 00:26:03,110
not make a bit of difference<font color="#E5E5E5"> all right</font>

558
00:26:03,230 --> 00:26:08,760
<font color="#CCCCCC">drawback that we talked about was</font>

559
00:26:06,530 --> 00:26:10,050
<font color="#E5E5E5">computing with these super large</font>

560
00:26:08,760 --> 00:26:12,540
integers and keeping them all in memory

561
00:26:10,050 --> 00:26:16,919
<font color="#E5E5E5">and stuff we've written our library</font><font color="#CCCCCC"> in</font>

562
00:26:12,540 --> 00:26:20,460
go and so we're using<font color="#E5E5E5"> big arbitrary</font>

563
00:26:16,920 --> 00:26:22,500
length<font color="#CCCCCC"> but when we go to take the log</font><font color="#E5E5E5"> we</font>

564
00:26:20,460 --> 00:26:25,700
<font color="#E5E5E5">actually have the only the only function</font>

565
00:26:22,500 --> 00:26:28,410
<font color="#CCCCCC">that is provided is on a float 64 and so</font>

566
00:26:25,700 --> 00:26:30,900
we have to convert<font color="#E5E5E5"> it to a float 64 and</font>

567
00:26:28,410 --> 00:26:36,290
the maximum size<font color="#CCCCCC"> that we get from that</font>

568
00:26:30,900 --> 00:26:39,580
<font color="#CCCCCC">is 1024 bits</font><font color="#E5E5E5"> which means that we can't</font>

569
00:26:36,290 --> 00:26:42,149
report an entropy<font color="#E5E5E5"> greater than</font><font color="#CCCCCC"> 1024 bits</font>

570
00:26:39,580 --> 00:26:44,949
but for passwords that<font color="#CCCCCC"> you're generating</font>

571
00:26:42,150 --> 00:26:48,700
<font color="#E5E5E5">this wasn't probably going to be a</font>

572
00:26:44,950 --> 00:26:52,150
concern<font color="#CCCCCC"> 128</font><font color="#E5E5E5"> bits is a pretty long</font>

573
00:26:48,700 --> 00:26:54,280
password<font color="#E5E5E5"> already</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so back</font><font color="#CCCCCC"> to what</font>

574
00:26:52,150 --> 00:26:56,770
<font color="#E5E5E5">we wanted we wanted to acquire the</font>

575
00:26:54,280 --> 00:26:59,170
characters we got that we have a<font color="#E5E5E5"> uniform</font>

576
00:26:56,770 --> 00:27:01,510
<font color="#E5E5E5">distribution</font><font color="#CCCCCC"> no passwords are more</font>

577
00:26:59,170 --> 00:27:04,170
<font color="#CCCCCC">likely</font><font color="#E5E5E5"> to occur</font><font color="#CCCCCC"> than other passwords the</font>

578
00:27:01,510 --> 00:27:07,300
<font color="#E5E5E5">entropy calculation that we have is</font>

579
00:27:04,170 --> 00:27:11,980
finally precise because<font color="#CCCCCC"> we were obsessed</font>

580
00:27:07,300 --> 00:27:17,290
<font color="#E5E5E5">with it and the interface we got to keep</font>

581
00:27:11,980 --> 00:27:22,240
simple and so this is what<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> find</font>

582
00:27:17,290 --> 00:27:24,790
the code<font color="#E5E5E5"> for this at comm slash one</font>

583
00:27:22,240 --> 00:27:26,350
<font color="#CCCCCC">password</font><font color="#E5E5E5"> slash</font><font color="#CCCCCC"> SPG if you are a good</font>

584
00:27:24,790 --> 00:27:29,050
developer you<font color="#CCCCCC"> can import it with this</font>

585
00:27:26,350 --> 00:27:31,389
fancy vanity URL<font color="#E5E5E5"> and then you can see</font>

586
00:27:29,050 --> 00:27:33,639
this in action<font color="#E5E5E5"> on our</font><font color="#CCCCCC"> website when</font>

587
00:27:31,390 --> 00:27:36,040
<font color="#E5E5E5">Pastor comm slash password generator or</font>

588
00:27:33,640 --> 00:27:37,570
if you use one<font color="#E5E5E5"> password X from the</font>

589
00:27:36,040 --> 00:27:42,070
Chrome App Store<font color="#E5E5E5"> or actually from</font>

590
00:27:37,570 --> 00:27:43,840
Firefox as well<font color="#E5E5E5"> then it's there as well</font>

591
00:27:42,070 --> 00:27:46,230
<font color="#E5E5E5">and we're working to roll</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> roll this</font>

592
00:27:43,840 --> 00:27:49,010
generator out to each of<font color="#CCCCCC"> our clients</font>

593
00:27:46,230 --> 00:27:56,730
<font color="#CCCCCC">thank you very much</font>

594
00:27:49,010 --> 00:27:56,730
[Applause]

595
00:28:01,770 --> 00:28:03,830
you

