1
00:00:03,040 --> 00:00:05,520
hey

2
00:00:03,600 --> 00:00:07,120
everybody russ here with the cactus con

3
00:00:05,520 --> 00:00:08,959
registration team

4
00:00:07,120 --> 00:00:10,879
it's my pleasure to introduce our next

5
00:00:08,960 --> 00:00:14,480
speaker kuzushi

6
00:00:10,880 --> 00:00:16,000
kuzushi is a developer hacker consultant

7
00:00:14,480 --> 00:00:19,039
and the vice president of security

8
00:00:16,000 --> 00:00:21,840
consulting services for bishop fox

9
00:00:19,039 --> 00:00:23,600
kuzushi's talk today is titled reverse

10
00:00:21,840 --> 00:00:25,759
engineering websites

11
00:00:23,600 --> 00:00:26,720
there'll be a live q a after the talk

12
00:00:25,760 --> 00:00:28,400
with the presenter

13
00:00:26,720 --> 00:00:30,160
a link will be displayed at the end of

14
00:00:28,400 --> 00:00:31,119
the talk and clicking on the link will

15
00:00:30,160 --> 00:00:33,440
take you

16
00:00:31,119 --> 00:00:34,800
to the live q a channel so you can ask

17
00:00:33,440 --> 00:00:37,280
your questions

18
00:00:34,800 --> 00:00:44,879
so sit back and let's learn about

19
00:00:37,280 --> 00:00:46,960
reverse engineering websites

20
00:00:44,879 --> 00:00:48,000
hi everybody and welcome to my talk on

21
00:00:46,960 --> 00:00:50,399
reverse engineering

22
00:00:48,000 --> 00:00:52,000
the web or reverse engineering websites

23
00:00:50,399 --> 00:00:55,680
my name is andrew wilson

24
00:00:52,000 --> 00:00:57,519
i am a long time security professional

25
00:00:55,680 --> 00:00:59,680
currently i'm the vice president of

26
00:00:57,520 --> 00:01:02,079
consulting services with bishop fox

27
00:00:59,680 --> 00:01:03,680
it's a penetration testing firm focus on

28
00:01:02,079 --> 00:01:06,000
offensive security

29
00:01:03,680 --> 00:01:08,320
i work with all the pen testers and

30
00:01:06,000 --> 00:01:10,080
govern and drive a lot of the work there

31
00:01:08,320 --> 00:01:12,479
i started a project a little while ago

32
00:01:10,080 --> 00:01:14,720
called send security which is uh

33
00:01:12,479 --> 00:01:15,759
looking at application security as

34
00:01:14,720 --> 00:01:17,840
something a little bit different a

35
00:01:15,759 --> 00:01:20,400
little bit more than just a job

36
00:01:17,840 --> 00:01:21,759
but like a craft and really exploring

37
00:01:20,400 --> 00:01:23,759
what you could do

38
00:01:21,759 --> 00:01:25,520
you know whether or not it's necessarily

39
00:01:23,759 --> 00:01:27,360
for the purpose of getting a job but

40
00:01:25,520 --> 00:01:28,960
really to understand and own application

41
00:01:27,360 --> 00:01:30,240
security so kind of a

42
00:01:28,960 --> 00:01:32,479
project that i've been working on on the

43
00:01:30,240 --> 00:01:33,679
side i am one of the co-founders of

44
00:01:32,479 --> 00:01:35,759
cactus con

45
00:01:33,680 --> 00:01:37,119
so this is actually interesting for me

46
00:01:35,759 --> 00:01:39,600
it's the first time

47
00:01:37,119 --> 00:01:41,759
i've given a talk at cactus con in the

48
00:01:39,600 --> 00:01:42,720
past i think i've announced people and

49
00:01:41,759 --> 00:01:44,159
in keynotes

50
00:01:42,720 --> 00:01:45,600
and i think i've helped with a panel but

51
00:01:44,159 --> 00:01:46,640
this is the i believe the first time

52
00:01:45,600 --> 00:01:49,119
i've ever given

53
00:01:46,640 --> 00:01:50,560
an actual technical talk at uh at the

54
00:01:49,119 --> 00:01:51,280
conference so i'm excited to be able to

55
00:01:50,560 --> 00:01:54,720
do

56
00:01:51,280 --> 00:01:56,719
that today um relevant for this talk

57
00:01:54,720 --> 00:01:58,320
i was a software engineer for 10 years

58
00:01:56,719 --> 00:02:00,880
the first half of my career

59
00:01:58,320 --> 00:02:02,158
was focused on applications application

60
00:02:00,880 --> 00:02:05,600
development

61
00:02:02,159 --> 00:02:08,000
uh i've worked on uh

62
00:02:05,600 --> 00:02:09,519
academic like universities i've worked

63
00:02:08,000 --> 00:02:11,920
for startup firms i've worked for

64
00:02:09,520 --> 00:02:13,760
financial institutions and i've solved a

65
00:02:11,920 --> 00:02:15,839
lot of really interesting creative

66
00:02:13,760 --> 00:02:18,399
problems with software engineering

67
00:02:15,840 --> 00:02:20,560
and i was one of the first microsoft

68
00:02:18,400 --> 00:02:23,360
mvps in windows azure

69
00:02:20,560 --> 00:02:24,080
the second half of my career i spent

70
00:02:23,360 --> 00:02:26,400
working

71
00:02:24,080 --> 00:02:28,959
as an application security tester where

72
00:02:26,400 --> 00:02:31,120
the first six years of the last decade

73
00:02:28,959 --> 00:02:32,800
i was in in the field getting hands-on

74
00:02:31,120 --> 00:02:33,760
applications and tearing them apart and

75
00:02:32,800 --> 00:02:36,319
working with them

76
00:02:33,760 --> 00:02:37,040
and it got me to a point where i wanted

77
00:02:36,319 --> 00:02:39,359
to

78
00:02:37,040 --> 00:02:40,959
use my background as a software engineer

79
00:02:39,360 --> 00:02:44,000
and this application tester

80
00:02:40,959 --> 00:02:45,840
to combine a problem i saw which is that

81
00:02:44,000 --> 00:02:46,720
people see them as two separate things

82
00:02:45,840 --> 00:02:48,720
even though

83
00:02:46,720 --> 00:02:50,879
they're they're correlated right there's

84
00:02:48,720 --> 00:02:51,920
no divestiture between security testing

85
00:02:50,879 --> 00:02:54,319
and software engineering

86
00:02:51,920 --> 00:02:55,440
they're both a real science and art

87
00:02:54,319 --> 00:02:58,799
together and they work

88
00:02:55,440 --> 00:03:00,239
sort of hand in hand um this talk in

89
00:02:58,800 --> 00:03:01,760
particular actually came out of a

90
00:03:00,239 --> 00:03:03,120
conversation i had with a gentleman

91
00:03:01,760 --> 00:03:05,200
named thomas patchak

92
00:03:03,120 --> 00:03:07,840
so for the folks who may not know him he

93
00:03:05,200 --> 00:03:09,440
was one of the founders of matasano and

94
00:03:07,840 --> 00:03:12,800
uh you know he's gone on to other things

95
00:03:09,440 --> 00:03:15,840
since then but we had this conversation

96
00:03:12,800 --> 00:03:17,599
about how security testing first and

97
00:03:15,840 --> 00:03:18,159
foremost before you get in anything else

98
00:03:17,599 --> 00:03:21,679
is about

99
00:03:18,159 --> 00:03:23,200
what you can see right and i've always

100
00:03:21,680 --> 00:03:25,440
taken this to mean

101
00:03:23,200 --> 00:03:27,518
that if if you came to me and said hey

102
00:03:25,440 --> 00:03:29,440
andrew i got like a bajillion dollars

103
00:03:27,519 --> 00:03:30,640
you know how do we do the best possible

104
00:03:29,440 --> 00:03:33,440
security test

105
00:03:30,640 --> 00:03:35,119
i would tell you that i'd want uh and

106
00:03:33,440 --> 00:03:36,640
want a bunch of user accounts

107
00:03:35,120 --> 00:03:38,239
i want access to the source code i'd

108
00:03:36,640 --> 00:03:38,958
want to be able to sit on the server and

109
00:03:38,239 --> 00:03:40,480
look at how

110
00:03:38,959 --> 00:03:42,239
the systems interplay i'd love to be

111
00:03:40,480 --> 00:03:44,480
able to watch network traffic

112
00:03:42,239 --> 00:03:45,599
every single thing you could give me

113
00:03:44,480 --> 00:03:48,798
access to

114
00:03:45,599 --> 00:03:49,359
puts me in the best position to approach

115
00:03:48,799 --> 00:03:50,720
this

116
00:03:49,360 --> 00:03:52,239
and use it to come up with the most

117
00:03:50,720 --> 00:03:52,560
creative interesting problems and really

118
00:03:52,239 --> 00:03:54,319
get

119
00:03:52,560 --> 00:03:55,680
a deep understanding of what's actually

120
00:03:54,319 --> 00:03:58,720
happening right so

121
00:03:55,680 --> 00:04:01,680
reverse engineering in this context

122
00:03:58,720 --> 00:04:03,200
is what do we do when we don't have that

123
00:04:01,680 --> 00:04:04,879
right when somebody says no you can't

124
00:04:03,200 --> 00:04:06,480
i'm not going to give you those things

125
00:04:04,879 --> 00:04:08,399
how do we understand enough of the

126
00:04:06,480 --> 00:04:10,959
system to be functional so sort of one

127
00:04:08,400 --> 00:04:12,879
tool in the toolbox and i wouldn't say

128
00:04:10,959 --> 00:04:14,239
it's probably not necessarily the

129
00:04:12,879 --> 00:04:15,679
the first tool you would want to pull

130
00:04:14,239 --> 00:04:17,199
out there's other ways you can go about

131
00:04:15,680 --> 00:04:17,918
getting visibility but reverse

132
00:04:17,199 --> 00:04:19,680
engineering

133
00:04:17,918 --> 00:04:21,120
for the sake of this talk is is what

134
00:04:19,680 --> 00:04:22,880
we're trying to kind of get into what we

135
00:04:21,120 --> 00:04:26,160
want to explore

136
00:04:22,880 --> 00:04:28,080
in practical terms reverse engineering

137
00:04:26,160 --> 00:04:30,320
is not about trying to understand

138
00:04:28,080 --> 00:04:31,199
necessarily the entirety of the system

139
00:04:30,320 --> 00:04:32,560
right we're not

140
00:04:31,199 --> 00:04:34,639
trying to stare at our naval and

141
00:04:32,560 --> 00:04:36,400
understand the universe we're trying to

142
00:04:34,639 --> 00:04:39,040
understand a system

143
00:04:36,400 --> 00:04:39,440
well enough to use that information to

144
00:04:39,040 --> 00:04:41,120
help us

145
00:04:39,440 --> 00:04:43,840
identify underlying weakness isn't it

146
00:04:41,120 --> 00:04:46,080
right and if you have enough

147
00:04:43,840 --> 00:04:47,758
context into what's actually happening

148
00:04:46,080 --> 00:04:49,440
this can lead to really vulnerabilities

149
00:04:47,759 --> 00:04:50,960
revealing themselves right as you go

150
00:04:49,440 --> 00:04:52,719
through and you're unpacking

151
00:04:50,960 --> 00:04:54,080
the application you can really see how

152
00:04:52,720 --> 00:04:55,680
it's operating and

153
00:04:54,080 --> 00:04:57,440
as my friend said the the

154
00:04:55,680 --> 00:04:59,199
vulnerabilities become obvious right

155
00:04:57,440 --> 00:05:00,880
and the second part of that is that when

156
00:04:59,199 --> 00:05:04,080
you get down into

157
00:05:00,880 --> 00:05:05,360
specific unique exploitation against

158
00:05:04,080 --> 00:05:07,280
those systems

159
00:05:05,360 --> 00:05:09,039
you actually need to have information in

160
00:05:07,280 --> 00:05:10,719
order to enable and help you

161
00:05:09,039 --> 00:05:12,960
to go through and do this and use it in

162
00:05:10,720 --> 00:05:14,800
a way that's gonna to make that reliable

163
00:05:12,960 --> 00:05:16,000
right you can't do advanced tests if

164
00:05:14,800 --> 00:05:17,360
you're just sort of shooting

165
00:05:16,000 --> 00:05:19,520
shooting in the dark right you want to

166
00:05:17,360 --> 00:05:20,880
try to take that information and make it

167
00:05:19,520 --> 00:05:22,880
reliable right

168
00:05:20,880 --> 00:05:24,560
so we use reverse engineering as a way

169
00:05:22,880 --> 00:05:27,600
or tool to do that right

170
00:05:24,560 --> 00:05:29,120
uh for the purposes of this talk i wanna

171
00:05:27,600 --> 00:05:30,000
i wanna just take a quick step back and

172
00:05:29,120 --> 00:05:32,240
say

173
00:05:30,000 --> 00:05:33,360
this is not the same thing as taking a

174
00:05:32,240 --> 00:05:35,440
binary

175
00:05:33,360 --> 00:05:37,360
file and reverse engineering it into

176
00:05:35,440 --> 00:05:39,039
some sort of source code piece right

177
00:05:37,360 --> 00:05:40,479
for the folks who are not super familiar

178
00:05:39,039 --> 00:05:42,240
with reverse engineering

179
00:05:40,479 --> 00:05:43,520
typically when you have a binary for

180
00:05:42,240 --> 00:05:44,800
things like malware analysis or

181
00:05:43,520 --> 00:05:46,159
competitor analysis you just want to

182
00:05:44,800 --> 00:05:48,639
know how something works

183
00:05:46,160 --> 00:05:50,720
you can download the executable and then

184
00:05:48,639 --> 00:05:52,479
you could use tools to sort of decompile

185
00:05:50,720 --> 00:05:54,639
it into some sort of source code

186
00:05:52,479 --> 00:05:57,758
representation which gives you a very

187
00:05:54,639 --> 00:05:59,199
clear picture or a very clear model

188
00:05:57,759 --> 00:06:00,800
of what's happening underneath the hoods

189
00:05:59,199 --> 00:06:03,280
right this is

190
00:06:00,800 --> 00:06:04,880
going to use fundamental principles from

191
00:06:03,280 --> 00:06:05,520
that but obviously the mechanics are

192
00:06:04,880 --> 00:06:07,840
going to be

193
00:06:05,520 --> 00:06:09,280
quite different right the first mechanic

194
00:06:07,840 --> 00:06:11,119
that's different is that

195
00:06:09,280 --> 00:06:12,960
it's no harm no home court advantage

196
00:06:11,120 --> 00:06:14,319
right we don't own this we don't own all

197
00:06:12,960 --> 00:06:16,799
the environment around it right

198
00:06:14,319 --> 00:06:17,680
when you pull down a binary uh it

199
00:06:16,800 --> 00:06:20,160
executes on

200
00:06:17,680 --> 00:06:20,720
it executes on your memory on your

201
00:06:20,160 --> 00:06:22,800
computer

202
00:06:20,720 --> 00:06:24,880
writing to your disk and you kind of

203
00:06:22,800 --> 00:06:26,560
control the periphery if you will

204
00:06:24,880 --> 00:06:28,080
of all the things that the application

205
00:06:26,560 --> 00:06:29,120
is going to talk to and how it talks to

206
00:06:28,080 --> 00:06:31,840
it and so with that

207
00:06:29,120 --> 00:06:33,520
you can actually use it to imply and

208
00:06:31,840 --> 00:06:35,119
understand a lot of its behavior

209
00:06:33,520 --> 00:06:37,198
which in our case we basically get none

210
00:06:35,120 --> 00:06:37,919
of we get the connection from our

211
00:06:37,199 --> 00:06:40,400
machine

212
00:06:37,919 --> 00:06:41,758
to the host and then we can communicate

213
00:06:40,400 --> 00:06:43,520
right through that protocol

214
00:06:41,759 --> 00:06:45,759
but beyond that and what's happening

215
00:06:43,520 --> 00:06:47,440
around it you know we don't necessarily

216
00:06:45,759 --> 00:06:48,880
control we can't we can't see that in

217
00:06:47,440 --> 00:06:51,039
the same possible way

218
00:06:48,880 --> 00:06:52,560
the second thing we don't have is a sort

219
00:06:51,039 --> 00:06:55,759
of a full picture right

220
00:06:52,560 --> 00:06:58,080
web applications can be very complicated

221
00:06:55,759 --> 00:06:58,800
and have a lot of different use case

222
00:06:58,080 --> 00:07:00,639
conditions

223
00:06:58,800 --> 00:07:02,000
which sort of trigger and actualize

224
00:07:00,639 --> 00:07:04,160
behavior that you

225
00:07:02,000 --> 00:07:05,120
would never really truly kind of see

226
00:07:04,160 --> 00:07:07,199
unless you

227
00:07:05,120 --> 00:07:09,520
you have ways to sort of exercise that

228
00:07:07,199 --> 00:07:11,680
behavior in an application

229
00:07:09,520 --> 00:07:13,840
right in order for any feature to sort

230
00:07:11,680 --> 00:07:15,199
of work it has to actually be

231
00:07:13,840 --> 00:07:17,280
on your computer right you actually have

232
00:07:15,199 --> 00:07:18,080
to have it execute and function as to

233
00:07:17,280 --> 00:07:20,239
operate right

234
00:07:18,080 --> 00:07:22,240
and so you tend to get a much better

235
00:07:20,240 --> 00:07:23,199
picture of what's actually happening in

236
00:07:22,240 --> 00:07:25,440
totality

237
00:07:23,199 --> 00:07:27,360
uh with an application now that isn't to

238
00:07:25,440 --> 00:07:29,199
say it's exactly like that there are

239
00:07:27,360 --> 00:07:31,680
some very like complicated malware

240
00:07:29,199 --> 00:07:32,960
pieces that do like segmented downloads

241
00:07:31,680 --> 00:07:34,639
or they're packed and there's

242
00:07:32,960 --> 00:07:36,080
it's very difficult to kind of get that

243
00:07:34,639 --> 00:07:38,639
picture right i'm not trying to

244
00:07:36,080 --> 00:07:39,440
say it but we don't we don't have a lot

245
00:07:38,639 --> 00:07:40,720
of the same

246
00:07:39,440 --> 00:07:42,560
sort of tools in the same way to

247
00:07:40,720 --> 00:07:44,560
understand always the full scope we're

248
00:07:42,560 --> 00:07:45,759
sort of left with a lot of incompletes

249
00:07:44,560 --> 00:07:48,400
if you will

250
00:07:45,759 --> 00:07:49,360
and the last thing is that there's no

251
00:07:48,400 --> 00:07:51,440
set standards

252
00:07:49,360 --> 00:07:53,520
there are standards right in the sort of

253
00:07:51,440 --> 00:07:54,319
cute little you know curly braces right

254
00:07:53,520 --> 00:07:56,799
it's not

255
00:07:54,319 --> 00:07:57,440
we have ideas of what should happen on

256
00:07:56,800 --> 00:07:58,879
the web

257
00:07:57,440 --> 00:08:00,960
and then there's the reality of what's

258
00:07:58,879 --> 00:08:02,800
happened on the web in order to support

259
00:08:00,960 --> 00:08:04,159
you know thousands and millions and

260
00:08:02,800 --> 00:08:06,000
millions of people building web

261
00:08:04,160 --> 00:08:07,919
applications and browsing them

262
00:08:06,000 --> 00:08:09,680
in a long history of what that looks

263
00:08:07,919 --> 00:08:11,198
like which has created kind of this

264
00:08:09,680 --> 00:08:14,720
beautiful mess that is

265
00:08:11,199 --> 00:08:18,080
the internet today right so um

266
00:08:14,720 --> 00:08:20,240
that we do have patterns we do have

267
00:08:18,080 --> 00:08:23,039
things that people commonly do and use

268
00:08:20,240 --> 00:08:24,800
and that actually becomes uh really

269
00:08:23,039 --> 00:08:26,560
important as it's it's the foundation of

270
00:08:24,800 --> 00:08:28,000
the methodology we're going to use

271
00:08:26,560 --> 00:08:29,759
to actually reverse engineer web

272
00:08:28,000 --> 00:08:32,000
applications right and

273
00:08:29,759 --> 00:08:33,760
and the modeling system that i have for

274
00:08:32,000 --> 00:08:34,159
it is composed of three things first is

275
00:08:33,760 --> 00:08:36,240
this

276
00:08:34,159 --> 00:08:38,080
recognition prime decision making and

277
00:08:36,240 --> 00:08:40,000
the second and sort of the third is what

278
00:08:38,080 --> 00:08:42,000
we'll call scientific method as one one

279
00:08:40,000 --> 00:08:43,599
bucket but inductive and deductive

280
00:08:42,000 --> 00:08:44,880
reasoning and methoding that we could

281
00:08:43,599 --> 00:08:47,200
use as a way to

282
00:08:44,880 --> 00:08:50,080
to unpack things right starting with

283
00:08:47,200 --> 00:08:51,839
recognition prime decision making

284
00:08:50,080 --> 00:08:54,959
back in the 90s a gentleman named gary

285
00:08:51,839 --> 00:08:57,600
klein was approached by the military

286
00:08:54,959 --> 00:08:58,880
to help solve the problem of teaching

287
00:08:57,600 --> 00:09:01,279
battlefield

288
00:08:58,880 --> 00:09:02,240
command how to make decisions under

289
00:09:01,279 --> 00:09:05,279
stress

290
00:09:02,240 --> 00:09:07,519
with incomplete information and uh

291
00:09:05,279 --> 00:09:09,040
be accurate in doing so right time time

292
00:09:07,519 --> 00:09:12,320
gap information

293
00:09:09,040 --> 00:09:14,800
incomplete information um this

294
00:09:12,320 --> 00:09:16,240
they had used a model before where they

295
00:09:14,800 --> 00:09:17,279
had tried to teach battlefield

296
00:09:16,240 --> 00:09:18,640
commanders through

297
00:09:17,279 --> 00:09:20,320
what other people were doing through

298
00:09:18,640 --> 00:09:20,959
like you know flow charts and flip

299
00:09:20,320 --> 00:09:22,640
charts and

300
00:09:20,959 --> 00:09:24,719
what they found is that it never really

301
00:09:22,640 --> 00:09:26,160
sort of worked well in fact the opposite

302
00:09:24,720 --> 00:09:28,080
it kind of worked the detriment rate so

303
00:09:26,160 --> 00:09:30,959
how do you how do you pack that out

304
00:09:28,080 --> 00:09:32,959
so what uh gary klein and his dean did

305
00:09:30,959 --> 00:09:35,040
is they actually started to

306
00:09:32,959 --> 00:09:37,279
investigate people who have this problem

307
00:09:35,040 --> 00:09:38,160
today and do it well so they went to

308
00:09:37,279 --> 00:09:40,880
chess players

309
00:09:38,160 --> 00:09:42,800
they went to firemen they went to nurses

310
00:09:40,880 --> 00:09:44,640
right and all this idea of like how do

311
00:09:42,800 --> 00:09:46,079
you triage how do you solve speed chess

312
00:09:44,640 --> 00:09:46,560
how do you sell chess in general how do

313
00:09:46,080 --> 00:09:48,560
you

314
00:09:46,560 --> 00:09:50,079
save people from fires right and they

315
00:09:48,560 --> 00:09:51,920
they said how

316
00:09:50,080 --> 00:09:53,920
people make decisions hopefully we can

317
00:09:51,920 --> 00:09:55,680
sort of glean something out of this

318
00:09:53,920 --> 00:09:57,920
and then use it to become a training

319
00:09:55,680 --> 00:09:59,599
methodology to then pass along to other

320
00:09:57,920 --> 00:10:00,959
people to help them also make it

321
00:09:59,600 --> 00:10:02,880
and that's called recognition prime

322
00:10:00,959 --> 00:10:05,199
decision making so

323
00:10:02,880 --> 00:10:06,640
what they found in this process was that

324
00:10:05,200 --> 00:10:08,640
through these interviews

325
00:10:06,640 --> 00:10:10,560
the most common answer they would run to

326
00:10:08,640 --> 00:10:12,240
is uh i didn't

327
00:10:10,560 --> 00:10:14,160
i didn't make a decision i just sort of

328
00:10:12,240 --> 00:10:15,600
knew what to do and while that's

329
00:10:14,160 --> 00:10:17,360
actually really quite you know

330
00:10:15,600 --> 00:10:18,320
fascinating from sort of a cognitive

331
00:10:17,360 --> 00:10:20,959
perspective

332
00:10:18,320 --> 00:10:22,320
it isn't necessarily uh transferable in

333
00:10:20,959 --> 00:10:23,279
the same way right it's obviously not

334
00:10:22,320 --> 00:10:25,440
the best system

335
00:10:23,279 --> 00:10:27,120
and so with the right sort of poking and

336
00:10:25,440 --> 00:10:28,800
priming and questions

337
00:10:27,120 --> 00:10:30,880
what gary klein and his team came up

338
00:10:28,800 --> 00:10:32,479
with is this system that kind of flows

339
00:10:30,880 --> 00:10:33,519
out over here right in the way that we

340
00:10:32,480 --> 00:10:36,160
see it today

341
00:10:33,519 --> 00:10:36,720
and what he found is that people are

342
00:10:36,160 --> 00:10:39,040
looking

343
00:10:36,720 --> 00:10:40,000
at situations based on what they

344
00:10:39,040 --> 00:10:41,920
understand

345
00:10:40,000 --> 00:10:43,279
of all the levers that sort of make it

346
00:10:41,920 --> 00:10:46,160
happen and then

347
00:10:43,279 --> 00:10:48,160
the ability to combine that becomes a

348
00:10:46,160 --> 00:10:49,680
very natural extension

349
00:10:48,160 --> 00:10:51,839
to the point where when they just see it

350
00:10:49,680 --> 00:10:53,760
they go i just knew what to do

351
00:10:51,839 --> 00:10:55,360
and for anyone who's spent a lot of time

352
00:10:53,760 --> 00:10:58,000
with a particular skill whether it's

353
00:10:55,360 --> 00:10:59,600
whether it's driving your car or a hobby

354
00:10:58,000 --> 00:11:01,040
you know what that feels like where you

355
00:10:59,600 --> 00:11:02,640
just sort of know right and if you ask

356
00:11:01,040 --> 00:11:03,920
somebody to explain it you'd explain to

357
00:11:02,640 --> 00:11:05,279
you or explain to someone else

358
00:11:03,920 --> 00:11:07,599
you'd be very confused to be very

359
00:11:05,279 --> 00:11:09,040
complicated right and what gary's team

360
00:11:07,600 --> 00:11:10,480
came up with was this and this is a

361
00:11:09,040 --> 00:11:12,240
system that we're gonna use right so

362
00:11:10,480 --> 00:11:12,800
which is why we're calling it out here

363
00:11:12,240 --> 00:11:14,480
right

364
00:11:12,800 --> 00:11:16,800
and it starts with is this is this

365
00:11:14,480 --> 00:11:17,440
familiar right if it's not familiar if

366
00:11:16,800 --> 00:11:19,040
it's not

367
00:11:17,440 --> 00:11:21,120
resemblant of something you've seen

368
00:11:19,040 --> 00:11:22,640
before you know obviously that's that's

369
00:11:21,120 --> 00:11:24,320
problematic right

370
00:11:22,640 --> 00:11:26,560
and inside of that you go through this

371
00:11:24,320 --> 00:11:27,600
loop of trying to make it similar to

372
00:11:26,560 --> 00:11:29,359
something that you know

373
00:11:27,600 --> 00:11:31,040
reassessing the situation you sort of

374
00:11:29,360 --> 00:11:32,640
get stuck in this initial loop

375
00:11:31,040 --> 00:11:34,640
where you don't understand enough of the

376
00:11:32,640 --> 00:11:35,120
pieces that go into it fireman as an

377
00:11:34,640 --> 00:11:37,360
example

378
00:11:35,120 --> 00:11:39,519
study things like you know how to fire

379
00:11:37,360 --> 00:11:41,440
start different nature of how flames

380
00:11:39,519 --> 00:11:44,240
work how buildings are designed

381
00:11:41,440 --> 00:11:46,160
how smoke can indicate pieces of things

382
00:11:44,240 --> 00:11:47,040
so that when they arrive in that

383
00:11:46,160 --> 00:11:48,880
situation

384
00:11:47,040 --> 00:11:50,480
they're not stuck up here in this like

385
00:11:48,880 --> 00:11:51,839
i've never seen it before phase

386
00:11:50,480 --> 00:11:53,360
they've seen it they understand the

387
00:11:51,839 --> 00:11:54,880
pieces and they're able to combine it

388
00:11:53,360 --> 00:11:57,519
and turn it into something

389
00:11:54,880 --> 00:11:58,160
useful right from there it turns into

390
00:11:57,519 --> 00:11:59,680
this

391
00:11:58,160 --> 00:12:01,439
i've seen it it looks like this other

392
00:11:59,680 --> 00:12:03,199
thing i think it's this thing

393
00:12:01,440 --> 00:12:04,720
and it starts to operate in this

394
00:12:03,200 --> 00:12:06,320
recognition pattern of like

395
00:12:04,720 --> 00:12:08,320
does it meeting my expectancies is it

396
00:12:06,320 --> 00:12:10,880
doing what i what i expected it to do

397
00:12:08,320 --> 00:12:11,519
uh do i get the relevant cues meaning

398
00:12:10,880 --> 00:12:13,360
like

399
00:12:11,519 --> 00:12:15,519
if there's a timing to stuff if there's

400
00:12:13,360 --> 00:12:17,920
a specific order in which how it happens

401
00:12:15,519 --> 00:12:19,760
you begin to pick up these pieces and

402
00:12:17,920 --> 00:12:20,399
from that you can have a very sort of

403
00:12:19,760 --> 00:12:22,000
close

404
00:12:20,399 --> 00:12:23,279
similarity process where you take sort

405
00:12:22,000 --> 00:12:24,240
of what's happening to what you think

406
00:12:23,279 --> 00:12:26,560
might be happening

407
00:12:24,240 --> 00:12:27,839
and you have a really good uh way to

408
00:12:26,560 --> 00:12:29,920
evaluate and understand

409
00:12:27,839 --> 00:12:31,440
uh the situations out of it you know

410
00:12:29,920 --> 00:12:33,120
from there in terms of what you actually

411
00:12:31,440 --> 00:12:33,680
have to do then you go down this path of

412
00:12:33,120 --> 00:12:36,079
like

413
00:12:33,680 --> 00:12:37,680
mental stimulation you know why what if

414
00:12:36,079 --> 00:12:38,319
i try this will it work how will this

415
00:12:37,680 --> 00:12:39,920
break out

416
00:12:38,320 --> 00:12:41,760
that's a sort of different portion but

417
00:12:39,920 --> 00:12:42,399
this is how we start to recognize

418
00:12:41,760 --> 00:12:45,519
problems

419
00:12:42,399 --> 00:12:46,639
inside of applications um the way i like

420
00:12:45,519 --> 00:12:48,399
to explain it

421
00:12:46,639 --> 00:12:50,480
is that when you're looking at source

422
00:12:48,399 --> 00:12:53,920
code there's gonna be a lot of

423
00:12:50,480 --> 00:12:56,240
things that are what i call architecture

424
00:12:53,920 --> 00:12:58,079
infrastructure that support the main

425
00:12:56,240 --> 00:13:00,240
primary gist of it right the

426
00:12:58,079 --> 00:13:02,000
custom code verse the infrastructure the

427
00:13:00,240 --> 00:13:03,600
architecture framework code

428
00:13:02,000 --> 00:13:04,959
and if you can't tell the difference

429
00:13:03,600 --> 00:13:06,560
between those two things when you're

430
00:13:04,959 --> 00:13:07,920
looking at it from source code review

431
00:13:06,560 --> 00:13:09,920
process or even just how

432
00:13:07,920 --> 00:13:11,519
an opera an application is behaving in

433
00:13:09,920 --> 00:13:13,760
terms of like a cms

434
00:13:11,519 --> 00:13:14,639
or a commonly behaving through a react

435
00:13:13,760 --> 00:13:16,560
application

436
00:13:14,639 --> 00:13:17,760
it's really difficult to start picking

437
00:13:16,560 --> 00:13:20,000
up on those cues

438
00:13:17,760 --> 00:13:21,519
to go hey what's going on here what

439
00:13:20,000 --> 00:13:24,560
should i be paying attention to

440
00:13:21,519 --> 00:13:26,639
right um when i was i tell the story as

441
00:13:24,560 --> 00:13:27,920
i was driving to go see my friend

442
00:13:26,639 --> 00:13:30,240
he just bought a new house up in the

443
00:13:27,920 --> 00:13:32,000
pacific northwest and was driving

444
00:13:30,240 --> 00:13:33,360
you know to go see me had a great

445
00:13:32,000 --> 00:13:34,560
directions all the way until i got to

446
00:13:33,360 --> 00:13:36,560
like the last point

447
00:13:34,560 --> 00:13:37,680
and he said you know just drive on this

448
00:13:36,560 --> 00:13:40,638
road uh

449
00:13:37,680 --> 00:13:41,439
i live off of hidden sort of valley road

450
00:13:40,639 --> 00:13:44,000
if you will

451
00:13:41,440 --> 00:13:44,480
and and you know go there i but i didn't

452
00:13:44,000 --> 00:13:46,959
know

453
00:13:44,480 --> 00:13:48,480
some of the other things that i would be

454
00:13:46,959 --> 00:13:49,119
looking for other pieces of information

455
00:13:48,480 --> 00:13:51,120
like how far

456
00:13:49,120 --> 00:13:52,480
it was is it on the left side rows and

457
00:13:51,120 --> 00:13:55,440
right sides of the photo

458
00:13:52,480 --> 00:13:57,440
and so when i i took that into account i

459
00:13:55,440 --> 00:13:59,199
took the name right it says it's hidden

460
00:13:57,440 --> 00:14:01,360
valley or hidden ridge or whatever it's

461
00:13:59,199 --> 00:14:02,880
called and i'm driving down the road i

462
00:14:01,360 --> 00:14:04,800
have no idea

463
00:14:02,880 --> 00:14:06,880
how to differentiate or when i should be

464
00:14:04,800 --> 00:14:08,800
paying attention to what's relevant

465
00:14:06,880 --> 00:14:10,399
for the problem i'm trying to solve so i

466
00:14:08,800 --> 00:14:12,079
i think he lived maybe about a mile and

467
00:14:10,399 --> 00:14:14,079
a half two miles on the road it took me

468
00:14:12,079 --> 00:14:16,079
almost two hours to get to his house

469
00:14:14,079 --> 00:14:17,120
every single side road that popped up on

470
00:14:16,079 --> 00:14:18,319
the left and the right

471
00:14:17,120 --> 00:14:20,000
at night right you're looking you're

472
00:14:18,320 --> 00:14:21,680
going home oh my gosh is this this is

473
00:14:20,000 --> 00:14:23,680
the street what if you miss it right

474
00:14:21,680 --> 00:14:25,359
and and as it turns out i get to his

475
00:14:23,680 --> 00:14:27,599
house and he's got a gigantic sign

476
00:14:25,360 --> 00:14:29,040
and it says oh welcome to hidden ridge

477
00:14:27,600 --> 00:14:32,480
or whatever and i was like ugh

478
00:14:29,040 --> 00:14:34,399
but the point is when you have

479
00:14:32,480 --> 00:14:36,160
the patterns when you understand the

480
00:14:34,399 --> 00:14:38,880
levers when you can sort of

481
00:14:36,160 --> 00:14:39,920
grok what's happening it makes your life

482
00:14:38,880 --> 00:14:42,800
significantly

483
00:14:39,920 --> 00:14:44,399
easier in trying to unpack how an

484
00:14:42,800 --> 00:14:45,839
application is going to work

485
00:14:44,399 --> 00:14:47,600
whether it's a compile binary whether

486
00:14:45,839 --> 00:14:48,639
it's a web application because you

487
00:14:47,600 --> 00:14:51,600
intrinsically sort of

488
00:14:48,639 --> 00:14:53,040
know the shape of things right the

489
00:14:51,600 --> 00:14:53,680
second thing and the third thing that we

490
00:14:53,040 --> 00:14:55,360
talk about

491
00:14:53,680 --> 00:14:57,599
in this system that we want to like go

492
00:14:55,360 --> 00:14:58,639
through is this idea of inductive and

493
00:14:57,600 --> 00:14:59,839
deductive

494
00:14:58,639 --> 00:15:01,920
methods right or ultimately the

495
00:14:59,839 --> 00:15:04,480
scientific method right um

496
00:15:01,920 --> 00:15:05,439
the inductive method is popularized by a

497
00:15:04,480 --> 00:15:08,480
guy named edmund

498
00:15:05,440 --> 00:15:10,800
lockhart or um the sherlock holmes

499
00:15:08,480 --> 00:15:11,680
sort of pieces you've run into it which

500
00:15:10,800 --> 00:15:14,880
says that

501
00:15:11,680 --> 00:15:16,399
anything you do leaves trace evidence of

502
00:15:14,880 --> 00:15:18,320
what's happening right and

503
00:15:16,399 --> 00:15:20,399
from a bottom up you basically look at

504
00:15:18,320 --> 00:15:22,240
what something is doing and then you

505
00:15:20,399 --> 00:15:22,880
collect that to come up with a frame

506
00:15:22,240 --> 00:15:24,480
that says

507
00:15:22,880 --> 00:15:26,079
you know if this happened if this is

508
00:15:24,480 --> 00:15:27,440
here then this is probably

509
00:15:26,079 --> 00:15:29,599
also here and you sort of work your way

510
00:15:27,440 --> 00:15:30,560
up this is the sherlock holmes like

511
00:15:29,600 --> 00:15:32,480
breadcrumb

512
00:15:30,560 --> 00:15:34,239
transference theory is another term for

513
00:15:32,480 --> 00:15:35,680
it which says anything you do

514
00:15:34,240 --> 00:15:37,519
leaves an evidence of it and when you

515
00:15:35,680 --> 00:15:38,959
look at an application right in the

516
00:15:37,519 --> 00:15:39,519
context that we'll be doing in just a

517
00:15:38,959 --> 00:15:42,638
minute

518
00:15:39,519 --> 00:15:45,040
you can actually use this as a way

519
00:15:42,639 --> 00:15:46,560
to create compelling stories to start

520
00:15:45,040 --> 00:15:48,160
create the questions around

521
00:15:46,560 --> 00:15:50,319
well if this is here then what about

522
00:15:48,160 --> 00:15:52,319
this if this system and this system

523
00:15:50,320 --> 00:15:53,519
communicate how would they communicate

524
00:15:52,320 --> 00:15:55,199
you could start to build

525
00:15:53,519 --> 00:15:57,040
breadcrumbs to determine what's actually

526
00:15:55,199 --> 00:16:00,160
happening in the application

527
00:15:57,040 --> 00:16:03,040
deductive method on the other hand is

528
00:16:00,160 --> 00:16:03,439
uh almost the inverse of the inductive

529
00:16:03,040 --> 00:16:05,120
route

530
00:16:03,440 --> 00:16:06,959
right sort of a top-down approach that

531
00:16:05,120 --> 00:16:10,639
says like if

532
00:16:06,959 --> 00:16:11,199
all men are mortal and uh sokrates is a

533
00:16:10,639 --> 00:16:13,440
man

534
00:16:11,199 --> 00:16:14,880
then therefore socrates is probably

535
00:16:13,440 --> 00:16:15,680
mortal why he has to be mortal if all

536
00:16:14,880 --> 00:16:18,000
men are mortal

537
00:16:15,680 --> 00:16:19,758
and so you take a general theory and

538
00:16:18,000 --> 00:16:21,759
then you reduce it and you reduce it and

539
00:16:19,759 --> 00:16:23,519
you reduce it until you can apply

540
00:16:21,759 --> 00:16:25,040
you know if this is true and this is

541
00:16:23,519 --> 00:16:25,759
true then this also must be true and you

542
00:16:25,040 --> 00:16:28,639
work your way

543
00:16:25,759 --> 00:16:29,839
sort of down from that system to create

544
00:16:28,639 --> 00:16:32,720
your stories

545
00:16:29,839 --> 00:16:34,560
we use both of these to start to teach

546
00:16:32,720 --> 00:16:35,440
ourselves how to ask questions of an

547
00:16:34,560 --> 00:16:37,758
application

548
00:16:35,440 --> 00:16:38,480
so that as we're sort of interacting

549
00:16:37,759 --> 00:16:40,880
with it through

550
00:16:38,480 --> 00:16:41,920
live testing and studying the results

551
00:16:40,880 --> 00:16:44,800
that come out of it

552
00:16:41,920 --> 00:16:46,479
we basically know like a route to form

553
00:16:44,800 --> 00:16:48,319
the questions that are going to teach us

554
00:16:46,480 --> 00:16:50,639
what it's actually doing what it's doing

555
00:16:48,320 --> 00:16:51,199
for real right or well enough so that we

556
00:16:50,639 --> 00:16:53,040
can

557
00:16:51,199 --> 00:16:54,479
apply our exploitation and apply our

558
00:16:53,040 --> 00:16:56,719
techniques and tools to it

559
00:16:54,480 --> 00:16:58,560
so with all that in mind i promise we're

560
00:16:56,720 --> 00:17:00,720
going to get out of kind of theory land

561
00:16:58,560 --> 00:17:02,959
i want to talk about sort of the first

562
00:17:00,720 --> 00:17:05,280
pattern because it's relevant right

563
00:17:02,959 --> 00:17:06,399
and that is basic application design we

564
00:17:05,280 --> 00:17:08,720
talked about

565
00:17:06,400 --> 00:17:10,240
how there's no like real sort of

566
00:17:08,720 --> 00:17:12,799
protocols or

567
00:17:10,240 --> 00:17:13,760
pieces that you sort of now have to

568
00:17:12,799 --> 00:17:16,160
there are a few

569
00:17:13,760 --> 00:17:17,359
commonalities in things that are

570
00:17:16,160 --> 00:17:19,280
generally true

571
00:17:17,359 --> 00:17:20,879
and sort of with that it all kind of

572
00:17:19,280 --> 00:17:21,359
gives you starting points to drive it

573
00:17:20,880 --> 00:17:22,880
out and

574
00:17:21,359 --> 00:17:25,280
the first and of course easiest one on

575
00:17:22,880 --> 00:17:26,400
this is this idea of a basic application

576
00:17:25,280 --> 00:17:28,960
design

577
00:17:26,400 --> 00:17:31,440
right so all applications have some

578
00:17:28,960 --> 00:17:34,480
context of what is a presentation tier

579
00:17:31,440 --> 00:17:36,400
a logical tier and a data tier right

580
00:17:34,480 --> 00:17:37,520
the presentation tier is what it sounds

581
00:17:36,400 --> 00:17:39,280
like it's not just

582
00:17:37,520 --> 00:17:41,760
how data is brought back up that you can

583
00:17:39,280 --> 00:17:43,200
kind of see but it's also the inputs

584
00:17:41,760 --> 00:17:44,960
that come into the system and the way

585
00:17:43,200 --> 00:17:47,280
that you interface with it to put in

586
00:17:44,960 --> 00:17:48,480
inputs to drive the logical tier or the

587
00:17:47,280 --> 00:17:51,440
business logic

588
00:17:48,480 --> 00:17:53,360
um this could be as glorified as a

589
00:17:51,440 --> 00:17:55,919
console like a console application

590
00:17:53,360 --> 00:17:57,439
or it could be a gigantic website with

591
00:17:55,919 --> 00:18:00,799
you know react and

592
00:17:57,440 --> 00:18:01,840
different sort of apis that you actually

593
00:18:00,799 --> 00:18:04,320
might be using for

594
00:18:01,840 --> 00:18:05,840
for uh your your cell phone right in

595
00:18:04,320 --> 00:18:07,439
terms of interacting with it but it

596
00:18:05,840 --> 00:18:09,039
has you could have really complex

597
00:18:07,440 --> 00:18:11,200
presentation tiers

598
00:18:09,039 --> 00:18:12,400
logic tier is the behavior that's behind

599
00:18:11,200 --> 00:18:14,960
it right

600
00:18:12,400 --> 00:18:16,640
so when sometimes this is an api uh that

601
00:18:14,960 --> 00:18:17,840
has business functionality but think of

602
00:18:16,640 --> 00:18:19,520
it as

603
00:18:17,840 --> 00:18:21,280
if i was going to go make a transaction

604
00:18:19,520 --> 00:18:23,918
and i want to put money into my bank

605
00:18:21,280 --> 00:18:26,080
there's some routing rules some business

606
00:18:23,919 --> 00:18:28,400
logic that takes that information

607
00:18:26,080 --> 00:18:29,840
and then transfers it out and it decides

608
00:18:28,400 --> 00:18:31,440
like where is it supposed to go why is

609
00:18:29,840 --> 00:18:32,480
it supposed to go there how much and the

610
00:18:31,440 --> 00:18:34,240
rules around like

611
00:18:32,480 --> 00:18:35,919
oh you don't have this much money right

612
00:18:34,240 --> 00:18:36,880
there's there's ideas right business

613
00:18:35,919 --> 00:18:38,160
ideas in it

614
00:18:36,880 --> 00:18:40,080
and then finally there's some sort of

615
00:18:38,160 --> 00:18:40,720
persistence tier or some sort of data

616
00:18:40,080 --> 00:18:42,240
tier

617
00:18:40,720 --> 00:18:43,760
that actually lets you store right if

618
00:18:42,240 --> 00:18:45,280
you put money in a bank obviously

619
00:18:43,760 --> 00:18:46,960
there's a record of it somewhere

620
00:18:45,280 --> 00:18:48,320
um applications sort of follow this

621
00:18:46,960 --> 00:18:50,559
throw this is sort of the

622
00:18:48,320 --> 00:18:52,080
your very typical life cycle of a

623
00:18:50,559 --> 00:18:53,200
request it comes through presentation

624
00:18:52,080 --> 00:18:54,799
logical data tier

625
00:18:53,200 --> 00:18:56,799
and then kind of works its way back up

626
00:18:54,799 --> 00:18:58,320
to the top these are sort of

627
00:18:56,799 --> 00:19:00,960
fundamentals

628
00:18:58,320 --> 00:19:01,520
that sort of drive behavior and no

629
00:19:00,960 --> 00:19:03,600
matter

630
00:19:01,520 --> 00:19:05,120
what you do right no matter how bad of a

631
00:19:03,600 --> 00:19:07,600
programmer you are

632
00:19:05,120 --> 00:19:08,799
these things actually always almost

633
00:19:07,600 --> 00:19:10,399
always exist right

634
00:19:08,799 --> 00:19:12,080
unless there's no persistence which you

635
00:19:10,400 --> 00:19:14,640
could actually drop the data tier

636
00:19:12,080 --> 00:19:16,080
but there's there's always something

637
00:19:14,640 --> 00:19:17,440
that kind of goes through this way they

638
00:19:16,080 --> 00:19:18,879
could all be merged together they could

639
00:19:17,440 --> 00:19:20,480
be very concrete they could be very

640
00:19:18,880 --> 00:19:23,280
complex right

641
00:19:20,480 --> 00:19:24,160
and so with that we take this very

642
00:19:23,280 --> 00:19:25,760
simplistic

643
00:19:24,160 --> 00:19:28,480
application here and we start to look at

644
00:19:25,760 --> 00:19:30,960
what a modern deployment might look like

645
00:19:28,480 --> 00:19:32,720
for a web application right so this is

646
00:19:30,960 --> 00:19:34,880
something from amazon to talk about how

647
00:19:32,720 --> 00:19:36,559
to scale your application and because

648
00:19:34,880 --> 00:19:38,400
the needs that people have in these

649
00:19:36,559 --> 00:19:40,879
applications has changed over time

650
00:19:38,400 --> 00:19:42,720
so has the complexity associated to it

651
00:19:40,880 --> 00:19:44,720
so you have this web server which in

652
00:19:42,720 --> 00:19:46,400
this case is our presentation tier

653
00:19:44,720 --> 00:19:48,320
you have an app server which very

654
00:19:46,400 --> 00:19:49,760
specifically is my logical tier

655
00:19:48,320 --> 00:19:51,760
and then you have databases right and it

656
00:19:49,760 --> 00:19:53,679
sort of has this route sort of here this

657
00:19:51,760 --> 00:19:55,760
is what we just looked at the last slide

658
00:19:53,679 --> 00:19:57,200
but there's a complexity that comes into

659
00:19:55,760 --> 00:19:58,720
it when you have

660
00:19:57,200 --> 00:20:00,720
something that has a lot of traffic you

661
00:19:58,720 --> 00:20:02,559
need load balancers you need to be able

662
00:20:00,720 --> 00:20:04,240
to scale it horizontally so you want to

663
00:20:02,559 --> 00:20:05,360
add additional web servers to handle

664
00:20:04,240 --> 00:20:07,280
your presentation to your

665
00:20:05,360 --> 00:20:09,439
different app service to support it so

666
00:20:07,280 --> 00:20:10,639
there's scalability that happens in here

667
00:20:09,440 --> 00:20:12,400
in order to grow

668
00:20:10,640 --> 00:20:13,600
you also have the introduction of

669
00:20:12,400 --> 00:20:14,720
something which is called a cache and

670
00:20:13,600 --> 00:20:17,039
you have a cache here

671
00:20:14,720 --> 00:20:18,480
you also have a cache basically through

672
00:20:17,039 --> 00:20:20,720
this sort of

673
00:20:18,480 --> 00:20:22,080
cdn type of network this amazon s3

674
00:20:20,720 --> 00:20:24,720
bucket which says

675
00:20:22,080 --> 00:20:25,360
for content that doesn't need to change

676
00:20:24,720 --> 00:20:27,600
meaning

677
00:20:25,360 --> 00:20:28,959
maybe i stored it one time through a

678
00:20:27,600 --> 00:20:30,240
system where you input it

679
00:20:28,960 --> 00:20:32,720
it comes down and gets stored in the

680
00:20:30,240 --> 00:20:34,799
database they might push it in the cache

681
00:20:32,720 --> 00:20:37,039
so that any time someone requests it

682
00:20:34,799 --> 00:20:39,280
here instead of following the same

683
00:20:37,039 --> 00:20:41,039
sort of full cycle it actually goes oh

684
00:20:39,280 --> 00:20:42,639
hey i already know i have this

685
00:20:41,039 --> 00:20:43,919
inside of my s3 bucket i could just

686
00:20:42,640 --> 00:20:45,600
serve it out of this right it's sort of

687
00:20:43,919 --> 00:20:46,880
static content you can do

688
00:20:45,600 --> 00:20:49,280
things like that or content doesn't

689
00:20:46,880 --> 00:20:50,159
change often the other thing that i'll

690
00:20:49,280 --> 00:20:51,678
call out here

691
00:20:50,159 --> 00:20:54,159
because again it's relevant to what

692
00:20:51,679 --> 00:20:57,039
we're about to go take a peek at

693
00:20:54,159 --> 00:20:58,559
is this whole secondary piece so modern

694
00:20:57,039 --> 00:20:58,960
applications are actually quite complex

695
00:20:58,559 --> 00:21:01,600
you

696
00:20:58,960 --> 00:21:02,880
have to be able to know what's happening

697
00:21:01,600 --> 00:21:03,918
with it in real time if you're

698
00:21:02,880 --> 00:21:05,919
monitoring it

699
00:21:03,919 --> 00:21:08,080
externally and so you have these things

700
00:21:05,919 --> 00:21:10,880
like notification systems

701
00:21:08,080 --> 00:21:11,520
or email systems or alarms or alerts or

702
00:21:10,880 --> 00:21:13,360
logging

703
00:21:11,520 --> 00:21:15,600
that all kind of exist sort of to the

704
00:21:13,360 --> 00:21:18,320
left if you will the actual application

705
00:21:15,600 --> 00:21:19,280
that may be contained in a whole other

706
00:21:18,320 --> 00:21:20,960
app tier

707
00:21:19,280 --> 00:21:22,639
so that when you're working at home you

708
00:21:20,960 --> 00:21:23,520
can log in and see like how is this

709
00:21:22,640 --> 00:21:25,280
thing behaving

710
00:21:23,520 --> 00:21:26,960
without having to get on to the server

711
00:21:25,280 --> 00:21:28,158
itself a sort of external monitoring

712
00:21:26,960 --> 00:21:31,520
type of support

713
00:21:28,159 --> 00:21:33,039
so this is just a modern way to look at

714
00:21:31,520 --> 00:21:34,799
this application tier that we talked

715
00:21:33,039 --> 00:21:35,600
about but some of the conventions you

716
00:21:34,799 --> 00:21:37,280
are

717
00:21:35,600 --> 00:21:38,799
almost assuredly going to run into

718
00:21:37,280 --> 00:21:40,639
anything of complexity

719
00:21:38,799 --> 00:21:42,879
so with that right for the rest of the

720
00:21:40,640 --> 00:21:45,360
talk i want to get into

721
00:21:42,880 --> 00:21:46,240
very specifically a website right and

722
00:21:45,360 --> 00:21:48,959
i'll just say

723
00:21:46,240 --> 00:21:50,240
normal cautions sort of aside we're not

724
00:21:48,960 --> 00:21:51,760
this isn't a pen test

725
00:21:50,240 --> 00:21:54,080
we're not doing anything crazy as a

726
00:21:51,760 --> 00:21:55,679
public website the source code for it is

727
00:21:54,080 --> 00:21:57,520
public you could look at the wikimedia

728
00:21:55,679 --> 00:21:58,799
code does that sort of evaluate

729
00:21:57,520 --> 00:22:00,240
you know what it did i say with

730
00:21:58,799 --> 00:22:01,280
something true you can test your

731
00:22:00,240 --> 00:22:02,880
assertions with it

732
00:22:01,280 --> 00:22:04,559
so great place to look at it but we're

733
00:22:02,880 --> 00:22:06,320
not pen testing anything no

734
00:22:04,559 --> 00:22:07,678
kittens were hurt in the making of this

735
00:22:06,320 --> 00:22:09,360
uh penetration they're

736
00:22:07,679 --> 00:22:11,679
looking at this test here we're just

737
00:22:09,360 --> 00:22:13,840
we're just trying to understand it right

738
00:22:11,679 --> 00:22:15,360
so with that you gotta start asking

739
00:22:13,840 --> 00:22:17,439
questions we could take this

740
00:22:15,360 --> 00:22:19,520
sort of inductive route that we talked

741
00:22:17,440 --> 00:22:21,360
about before this top-down driven

742
00:22:19,520 --> 00:22:23,679
sort of approach and we could say

743
00:22:21,360 --> 00:22:26,399
wikipedia we know a fair bit about it

744
00:22:23,679 --> 00:22:28,559
we know that it's a very popular website

745
00:22:26,400 --> 00:22:30,080
we know that it stores a bunch of

746
00:22:28,559 --> 00:22:31,600
different articles we know it stores

747
00:22:30,080 --> 00:22:33,280
articles by language

748
00:22:31,600 --> 00:22:36,080
and with that we could begin to just

749
00:22:33,280 --> 00:22:37,520
make some very general assertions right

750
00:22:36,080 --> 00:22:40,000
wikipedia i believe is like the ninth

751
00:22:37,520 --> 00:22:41,600
most popular website on the internet

752
00:22:40,000 --> 00:22:43,440
which means it's very likely that

753
00:22:41,600 --> 00:22:45,600
they're going to have a caching tier

754
00:22:43,440 --> 00:22:47,360
that supports a lot of the traffic that

755
00:22:45,600 --> 00:22:48,879
comes into it because if you had to make

756
00:22:47,360 --> 00:22:50,799
full round trips for all

757
00:22:48,880 --> 00:22:52,080
you know the people who came in to look

758
00:22:50,799 --> 00:22:53,600
at it you would run out of

759
00:22:52,080 --> 00:22:56,480
infrastructure really fast and so

760
00:22:53,600 --> 00:22:58,158
having it very responsive is a big deal

761
00:22:56,480 --> 00:23:00,159
when you're building a site like this so

762
00:22:58,159 --> 00:23:01,679
you can assume caching happens the

763
00:23:00,159 --> 00:23:02,960
second thing you could actually assume

764
00:23:01,679 --> 00:23:04,559
is because

765
00:23:02,960 --> 00:23:06,320
you know based on this website here just

766
00:23:04,559 --> 00:23:08,399
kind of take a look at it that

767
00:23:06,320 --> 00:23:10,080
uh you know you have english articles

768
00:23:08,400 --> 00:23:10,720
you have french articles you have dutch

769
00:23:10,080 --> 00:23:13,280
articles

770
00:23:10,720 --> 00:23:13,840
they all sort of evolve separately from

771
00:23:13,280 --> 00:23:15,520
each other

772
00:23:13,840 --> 00:23:17,678
meaning that they all have their own

773
00:23:15,520 --> 00:23:20,559
content relevant to what there are

774
00:23:17,679 --> 00:23:21,039
how you get homed how these things work

775
00:23:20,559 --> 00:23:23,120
how

776
00:23:21,039 --> 00:23:24,480
you know those connections go to you

777
00:23:23,120 --> 00:23:25,760
know there's some mechanisms you can

778
00:23:24,480 --> 00:23:27,760
kind of guess right

779
00:23:25,760 --> 00:23:29,679
but by and large we have a sense that

780
00:23:27,760 --> 00:23:30,960
they evolve separately

781
00:23:29,679 --> 00:23:32,880
and the last thing we would say is that

782
00:23:30,960 --> 00:23:34,080
when you go and you look at any of these

783
00:23:32,880 --> 00:23:36,159
you're going to see that they're all

784
00:23:34,080 --> 00:23:38,480
basically the same looking and

785
00:23:36,159 --> 00:23:40,080
it's very safe to assume especially

786
00:23:38,480 --> 00:23:41,120
given the fact that the source code is

787
00:23:40,080 --> 00:23:43,120
in fact public

788
00:23:41,120 --> 00:23:45,360
that this is one body of code and it's

789
00:23:43,120 --> 00:23:47,039
not like the french version is

790
00:23:45,360 --> 00:23:48,719
completely different than the english

791
00:23:47,039 --> 00:23:49,520
version or the italian version is

792
00:23:48,720 --> 00:23:51,919
different from

793
00:23:49,520 --> 00:23:52,559
the dutch version they are probably

794
00:23:51,919 --> 00:23:55,200
using

795
00:23:52,559 --> 00:23:56,240
similar instances if not the exact same

796
00:23:55,200 --> 00:23:58,080
type of code

797
00:23:56,240 --> 00:23:59,679
deployed in different places now they

798
00:23:58,080 --> 00:24:00,799
may evolve independently so you can't

799
00:23:59,679 --> 00:24:02,320
take that for granted

800
00:24:00,799 --> 00:24:04,400
but you could assume that there's a

801
00:24:02,320 --> 00:24:06,240
common source code already between these

802
00:24:04,400 --> 00:24:09,279
right so if you look at the english one

803
00:24:06,240 --> 00:24:10,720
you have a pretty good chance that

804
00:24:09,279 --> 00:24:12,559
the things you'd be looking at would be

805
00:24:10,720 --> 00:24:14,159
relevant in all the other servers right

806
00:24:12,559 --> 00:24:15,520
and that's that's a lot of information

807
00:24:14,159 --> 00:24:17,039
before we've even sent it to really a

808
00:24:15,520 --> 00:24:18,720
single request right

809
00:24:17,039 --> 00:24:20,879
if we take a look at the requests and we

810
00:24:18,720 --> 00:24:22,880
start to take a look at what comes in

811
00:24:20,880 --> 00:24:24,480
from the response headers that come out

812
00:24:22,880 --> 00:24:27,360
of this what you're going to see

813
00:24:24,480 --> 00:24:28,080
is that some of those general assertions

814
00:24:27,360 --> 00:24:30,080
we made

815
00:24:28,080 --> 00:24:32,080
are already provably true right so one

816
00:24:30,080 --> 00:24:33,678
they're running apache traffic server

817
00:24:32,080 --> 00:24:35,360
you could see that it was served from a

818
00:24:33,679 --> 00:24:36,559
cache you could see here that there's

819
00:24:35,360 --> 00:24:38,240
actually some naming of the

820
00:24:36,559 --> 00:24:39,120
infrastructure and it very blatantly

821
00:24:38,240 --> 00:24:41,200
tells you like

822
00:24:39,120 --> 00:24:43,360
yes i pulled this from cache and where

823
00:24:41,200 --> 00:24:45,120
did it hit in the cache right

824
00:24:43,360 --> 00:24:46,639
you can see in this report too

825
00:24:45,120 --> 00:24:50,479
infrastructure that they use

826
00:24:46,640 --> 00:24:52,720
nfl or nel excuse me and it's a way to

827
00:24:50,480 --> 00:24:53,919
transfer information uh to the side

828
00:24:52,720 --> 00:24:54,480
about events and things that are

829
00:24:53,919 --> 00:24:55,760
happening

830
00:24:54,480 --> 00:24:57,600
so there's very likely some

831
00:24:55,760 --> 00:24:59,039
infrastructure that's going on behind it

832
00:24:57,600 --> 00:24:59,760
for logging in the side that may be

833
00:24:59,039 --> 00:25:01,840
relevant

834
00:24:59,760 --> 00:25:03,840
to use if we want to do channel attacks

835
00:25:01,840 --> 00:25:05,039
against some of these things later

836
00:25:03,840 --> 00:25:06,959
and then you can see that they have

837
00:25:05,039 --> 00:25:09,120
cookies that sort of home people right

838
00:25:06,960 --> 00:25:11,279
so when i click on the english site

839
00:25:09,120 --> 00:25:13,360
it says hey you were here last time it's

840
00:25:11,279 --> 00:25:14,159
not on this particular request only

841
00:25:13,360 --> 00:25:15,760
because

842
00:25:14,159 --> 00:25:17,679
it's a 304 not modified i was actually

843
00:25:15,760 --> 00:25:18,320
on it before but they said a homing

844
00:25:17,679 --> 00:25:20,320
cookie

845
00:25:18,320 --> 00:25:21,678
which says oh this person came in from

846
00:25:20,320 --> 00:25:22,960
phoenix therefore

847
00:25:21,679 --> 00:25:24,480
they're probably in the united states so

848
00:25:22,960 --> 00:25:25,440
they want to see united states traffic

849
00:25:24,480 --> 00:25:27,440
right

850
00:25:25,440 --> 00:25:29,360
and that's a lot of information for just

851
00:25:27,440 --> 00:25:31,120
one request we've confirmed

852
00:25:29,360 --> 00:25:32,479
like i said everything's from the cache

853
00:25:31,120 --> 00:25:33,678
we identified the technology of the

854
00:25:32,480 --> 00:25:35,279
cache we figured out how they're

855
00:25:33,679 --> 00:25:37,360
tracking us through cookies

856
00:25:35,279 --> 00:25:39,279
right and once it's set does that mean

857
00:25:37,360 --> 00:25:39,600
it's set forever can we just delete it

858
00:25:39,279 --> 00:25:41,360
and

859
00:25:39,600 --> 00:25:43,120
you know change it through geoip

860
00:25:41,360 --> 00:25:44,879
spoofing there's a lot of stuff

861
00:25:43,120 --> 00:25:46,639
that we already know how to start to

862
00:25:44,880 --> 00:25:47,520
control some of those outer perimeters

863
00:25:46,640 --> 00:25:49,120
to help us

864
00:25:47,520 --> 00:25:50,960
get information about how wikipedia

865
00:25:49,120 --> 00:25:53,120
works right what we don't know

866
00:25:50,960 --> 00:25:54,480
out of this is how would you get to real

867
00:25:53,120 --> 00:25:56,158
servers like how do you get to the

868
00:25:54,480 --> 00:25:57,440
dynamically served stuff we saw it

869
00:25:56,159 --> 00:25:59,279
pulled from a cache

870
00:25:57,440 --> 00:26:00,880
uh but what other you know what other

871
00:25:59,279 --> 00:26:02,640
ways can we get that from there

872
00:26:00,880 --> 00:26:04,159
we don't know if there's a servers in

873
00:26:02,640 --> 00:26:06,880
play right and then

874
00:26:04,159 --> 00:26:08,640
again we tried to see if geography what

875
00:26:06,880 --> 00:26:10,400
is the effect that geography has in

876
00:26:08,640 --> 00:26:12,080
terms of what's served to me but that's

877
00:26:10,400 --> 00:26:13,600
just because we're only still really on

878
00:26:12,080 --> 00:26:16,000
the first request right

879
00:26:13,600 --> 00:26:16,719
um from here you could click on the

880
00:26:16,000 --> 00:26:19,120
english site

881
00:26:16,720 --> 00:26:20,799
right and you will see that it brings

882
00:26:19,120 --> 00:26:22,399
you to a landing screen that looks very

883
00:26:20,799 --> 00:26:24,320
similar to this this is back in

884
00:26:22,400 --> 00:26:26,159
november when i first put this talk

885
00:26:24,320 --> 00:26:27,918
together but you can see a couple of

886
00:26:26,159 --> 00:26:30,080
things you could see that it has

887
00:26:27,919 --> 00:26:31,120
information about a feature article for

888
00:26:30,080 --> 00:26:33,918
the day

889
00:26:31,120 --> 00:26:35,120
it has some news it's relevant news to

890
00:26:33,919 --> 00:26:37,679
my geography

891
00:26:35,120 --> 00:26:39,039
so when i logged into this system even

892
00:26:37,679 --> 00:26:40,559
to the english site

893
00:26:39,039 --> 00:26:42,640
and it thought that i was logging in

894
00:26:40,559 --> 00:26:44,320
from japan it started to serve japanese

895
00:26:42,640 --> 00:26:46,320
relevant content and so

896
00:26:44,320 --> 00:26:48,639
how it determines what goes into this

897
00:26:46,320 --> 00:26:50,639
page is geographically homed

898
00:26:48,640 --> 00:26:51,679
and we've seen how this piece kind of

899
00:26:50,640 --> 00:26:53,520
plays out now

900
00:26:51,679 --> 00:26:55,039
you might be thinking well because it's

901
00:26:53,520 --> 00:26:56,960
pulling uh date

902
00:26:55,039 --> 00:26:58,720
right relevant information that this

903
00:26:56,960 --> 00:27:01,440
would probably be sort of dynamic

904
00:26:58,720 --> 00:27:02,159
and you would be wrong this in fact was

905
00:27:01,440 --> 00:27:04,720
actually

906
00:27:02,159 --> 00:27:07,120
um served from the cache yet again right

907
00:27:04,720 --> 00:27:08,320
in this case uh you see some new servers

908
00:27:07,120 --> 00:27:10,559
so that's interesting we know that

909
00:27:08,320 --> 00:27:13,120
there's some more servers in play here

910
00:27:10,559 --> 00:27:15,039
we know that there's some sort of

911
00:27:13,120 --> 00:27:16,959
location piecing around it and

912
00:27:15,039 --> 00:27:19,279
more specifically kind of down here in

913
00:27:16,960 --> 00:27:20,720
this bottom you see the name of the page

914
00:27:19,279 --> 00:27:22,399
which is where we ended up going right

915
00:27:20,720 --> 00:27:25,679
and that's and that's fine right

916
00:27:22,399 --> 00:27:27,600
um what is

917
00:27:25,679 --> 00:27:29,840
really interesting when you look at the

918
00:27:27,600 --> 00:27:33,600
website and you start to evaluate it

919
00:27:29,840 --> 00:27:36,559
is that we requested this page

920
00:27:33,600 --> 00:27:38,240
wiki main page whatever right but in the

921
00:27:36,559 --> 00:27:39,678
view source when you actually go through

922
00:27:38,240 --> 00:27:40,720
and you just kind of take two seconds of

923
00:27:39,679 --> 00:27:43,440
poking through it

924
00:27:40,720 --> 00:27:44,960
you'll see a different url here that

925
00:27:43,440 --> 00:27:48,559
actually goes through this

926
00:27:44,960 --> 00:27:50,080
w index.php title php et cetera right

927
00:27:48,559 --> 00:27:52,158
and so you could be curious and you can

928
00:27:50,080 --> 00:27:55,360
kind of poke into this and realize that

929
00:27:52,159 --> 00:27:57,360
these are in fact the same instances of

930
00:27:55,360 --> 00:28:00,000
the page rights one page served

931
00:27:57,360 --> 00:28:01,678
with two different uri structures and

932
00:28:00,000 --> 00:28:03,360
that's confusing right if you've never

933
00:28:01,679 --> 00:28:04,799
looked at web applications before in

934
00:28:03,360 --> 00:28:05,520
this way like what does that even mean

935
00:28:04,799 --> 00:28:07,679
like why

936
00:28:05,520 --> 00:28:08,639
would it do something like that the

937
00:28:07,679 --> 00:28:10,640
answer here is

938
00:28:08,640 --> 00:28:12,320
sort of a patterns book and if you want

939
00:28:10,640 --> 00:28:14,000
to get familiar with patterns so you can

940
00:28:12,320 --> 00:28:14,960
start to unpack these applications

941
00:28:14,000 --> 00:28:17,200
faster

942
00:28:14,960 --> 00:28:18,559
i can't think of a better book called

943
00:28:17,200 --> 00:28:20,159
patterns of enterprise application

944
00:28:18,559 --> 00:28:22,240
architecture by martin fowler

945
00:28:20,159 --> 00:28:23,200
it was written a long time ago back in

946
00:28:22,240 --> 00:28:26,240
the dark ages

947
00:28:23,200 --> 00:28:27,760
but it's a continuation of

948
00:28:26,240 --> 00:28:30,320
this idea of the gang of four books

949
00:28:27,760 --> 00:28:32,480
which are enterprise ideas that say that

950
00:28:30,320 --> 00:28:34,320
developers tend to follow common

951
00:28:32,480 --> 00:28:35,200
patterns to solve problems intentionally

952
00:28:34,320 --> 00:28:36,960
or otherwise

953
00:28:35,200 --> 00:28:39,360
so what if we took these ideas of

954
00:28:36,960 --> 00:28:40,000
patterns and we tried to define them to

955
00:28:39,360 --> 00:28:41,439
help us

956
00:28:40,000 --> 00:28:43,039
sort of stand on each other's shoulders

957
00:28:41,440 --> 00:28:45,039
learn better ways to do this

958
00:28:43,039 --> 00:28:46,480
and then actually use that in a relevant

959
00:28:45,039 --> 00:28:49,760
way to

960
00:28:46,480 --> 00:28:51,679
go after and teach people right um

961
00:28:49,760 --> 00:28:52,960
so this pattern here was two different

962
00:28:51,679 --> 00:28:55,440
uri structures

963
00:28:52,960 --> 00:28:56,799
turns out to be what they would call a

964
00:28:55,440 --> 00:29:00,000
front controller

965
00:28:56,799 --> 00:29:02,639
so friend controller is this basic idea

966
00:29:00,000 --> 00:29:05,760
that if you you have a single page right

967
00:29:02,640 --> 00:29:07,679
this index.php in our case or page.php

968
00:29:05,760 --> 00:29:09,919
and then from your query string

969
00:29:07,679 --> 00:29:11,200
parameters you set an action

970
00:29:09,919 --> 00:29:14,399
and then all the parameters that

971
00:29:11,200 --> 00:29:15,760
associate to it it gives you a breakout

972
00:29:14,399 --> 00:29:17,840
of all the different requests that

973
00:29:15,760 --> 00:29:19,760
actually would be related to it right

974
00:29:17,840 --> 00:29:21,760
it's a common handling mechanism

975
00:29:19,760 --> 00:29:23,919
and it essentially acts as the route

976
00:29:21,760 --> 00:29:24,640
that says that when a request comes in

977
00:29:23,919 --> 00:29:27,039
here to

978
00:29:24,640 --> 00:29:27,679
index.php you actually want to go to a

979
00:29:27,039 --> 00:29:30,480
function

980
00:29:27,679 --> 00:29:32,159
or an action named x and then pass it

981
00:29:30,480 --> 00:29:34,799
the following parameters

982
00:29:32,159 --> 00:29:36,240
it also means that given the frequently

983
00:29:34,799 --> 00:29:38,879
see that you're going to see

984
00:29:36,240 --> 00:29:41,440
this inside of wikipedia it's probably

985
00:29:38,880 --> 00:29:42,960
the primary method this index.php

986
00:29:41,440 --> 00:29:44,799
action equals what have you it's

987
00:29:42,960 --> 00:29:45,760
probably the primary way that content is

988
00:29:44,799 --> 00:29:47,039
served

989
00:29:45,760 --> 00:29:49,039
and that the other route is more of

990
00:29:47,039 --> 00:29:51,600
maybe a regex or an alias

991
00:29:49,039 --> 00:29:53,360
or some sort of routing mechanism that

992
00:29:51,600 --> 00:29:55,840
says that when you see this go

993
00:29:53,360 --> 00:29:56,799
realistically call it from here right

994
00:29:55,840 --> 00:29:58,720
what's interesting

995
00:29:56,799 --> 00:30:00,320
even more about this right just from a

996
00:29:58,720 --> 00:30:02,799
pen tester perspective

997
00:30:00,320 --> 00:30:04,399
is that they've introduced a lot of

998
00:30:02,799 --> 00:30:05,200
different ways to go after this

999
00:30:04,399 --> 00:30:06,639
application

1000
00:30:05,200 --> 00:30:08,559
already with just this one sort of

1001
00:30:06,640 --> 00:30:09,600
design decision now not necessarily a

1002
00:30:08,559 --> 00:30:11,678
bad thing right

1003
00:30:09,600 --> 00:30:13,279
but it means that the way that you

1004
00:30:11,679 --> 00:30:14,000
communicate with it is radically

1005
00:30:13,279 --> 00:30:16,000
affected

1006
00:30:14,000 --> 00:30:17,360
in just sort of the smaller sort of

1007
00:30:16,000 --> 00:30:19,919
nuanced way

1008
00:30:17,360 --> 00:30:22,320
but things like if you have a path right

1009
00:30:19,919 --> 00:30:23,279
a path is expected from a ui perspective

1010
00:30:22,320 --> 00:30:25,200
you have a scheme

1011
00:30:23,279 --> 00:30:26,880
you could put in a username and password

1012
00:30:25,200 --> 00:30:27,679
back in the day i don't see this too

1013
00:30:26,880 --> 00:30:30,080
often anymore

1014
00:30:27,679 --> 00:30:31,360
it's possible uh you have the host right

1015
00:30:30,080 --> 00:30:32,960
where you're going what port you're

1016
00:30:31,360 --> 00:30:36,000
going to the default will be

1017
00:30:32,960 --> 00:30:37,760
80 or 443 depending on ssl and so forth

1018
00:30:36,000 --> 00:30:39,760
and then you have a path which says like

1019
00:30:37,760 --> 00:30:41,440
to get to a

1020
00:30:39,760 --> 00:30:42,879
function i'm going to go down this path

1021
00:30:41,440 --> 00:30:46,159
and then i'm going to have a receiver

1022
00:30:42,880 --> 00:30:48,640
typically at that end in this case

1023
00:30:46,159 --> 00:30:50,080
you can then append parameters from the

1024
00:30:48,640 --> 00:30:51,679
query string or fragment

1025
00:30:50,080 --> 00:30:53,840
and they all give you routes to

1026
00:30:51,679 --> 00:30:54,799
communicate with it by having these two

1027
00:30:53,840 --> 00:30:57,519
routes which you

1028
00:30:54,799 --> 00:30:59,039
have now is the ability to pass in a

1029
00:30:57,519 --> 00:31:01,200
value through a query string

1030
00:30:59,039 --> 00:31:02,720
that simply wouldn't be valid if you

1031
00:31:01,200 --> 00:31:04,799
wanted to manipulate it from a path

1032
00:31:02,720 --> 00:31:06,080
if you only had for instance this path

1033
00:31:04,799 --> 00:31:08,080
data and no query strings

1034
00:31:06,080 --> 00:31:10,080
you couldn't say pass it you know path

1035
00:31:08,080 --> 00:31:12,080
slash data slash path.data

1036
00:31:10,080 --> 00:31:13,360
you would have no way to actually send

1037
00:31:12,080 --> 00:31:14,240
it because the ui structure would

1038
00:31:13,360 --> 00:31:15,760
actually think

1039
00:31:14,240 --> 00:31:17,600
you're requesting something else

1040
00:31:15,760 --> 00:31:19,360
completely off of the server so by

1041
00:31:17,600 --> 00:31:19,918
having these two routes you now can do

1042
00:31:19,360 --> 00:31:22,639
things

1043
00:31:19,919 --> 00:31:24,080
you couldn't otherwise do right and with

1044
00:31:22,640 --> 00:31:24,720
that you see that this pattern is

1045
00:31:24,080 --> 00:31:26,240
happens

1046
00:31:24,720 --> 00:31:28,399
all over the pages it's everywhere you

1047
00:31:26,240 --> 00:31:30,080
can see it right so you pass in a title

1048
00:31:28,399 --> 00:31:31,518
the title gives you a page name

1049
00:31:30,080 --> 00:31:33,039
and then you have the sort of functions

1050
00:31:31,519 --> 00:31:34,000
right these functions are really

1051
00:31:33,039 --> 00:31:35,440
interesting

1052
00:31:34,000 --> 00:31:37,519
uh from a reverse engineering

1053
00:31:35,440 --> 00:31:38,000
perspective because some of them appear

1054
00:31:37,519 --> 00:31:40,240
to be

1055
00:31:38,000 --> 00:31:41,600
across everything right so this return

1056
00:31:40,240 --> 00:31:43,360
to functionality

1057
00:31:41,600 --> 00:31:46,080
this could be some sort of generic code

1058
00:31:43,360 --> 00:31:48,479
base that's handling the event piece

1059
00:31:46,080 --> 00:31:50,080
or it's attached to all of these you see

1060
00:31:48,480 --> 00:31:52,080
a return to query

1061
00:31:50,080 --> 00:31:53,199
you can see all these different function

1062
00:31:52,080 --> 00:31:56,080
sets that you can

1063
00:31:53,200 --> 00:31:58,000
actually use this now to create a map of

1064
00:31:56,080 --> 00:32:00,320
the application if you really wanted to

1065
00:31:58,000 --> 00:32:01,120
that says for all of these actions these

1066
00:32:00,320 --> 00:32:02,559
titles

1067
00:32:01,120 --> 00:32:04,719
and you take these parameters you can

1068
00:32:02,559 --> 00:32:07,918
build almost a real functional map

1069
00:32:04,720 --> 00:32:09,840
just looking at it kind of here from our

1070
00:32:07,919 --> 00:32:11,279
instances right just taking a peek at it

1071
00:32:09,840 --> 00:32:12,799
or we're sort of digging into it we want

1072
00:32:11,279 --> 00:32:15,120
to understand how this thing works

1073
00:32:12,799 --> 00:32:16,559
you see that there's another page this

1074
00:32:15,120 --> 00:32:18,399
download as pdf

1075
00:32:16,559 --> 00:32:20,240
and you can pass into it the main page

1076
00:32:18,399 --> 00:32:21,120
and then say action show the downloads

1077
00:32:20,240 --> 00:32:23,440
group right you can see

1078
00:32:21,120 --> 00:32:24,320
you see how it works and on sort of

1079
00:32:23,440 --> 00:32:27,519
further review

1080
00:32:24,320 --> 00:32:30,559
as you get into it you will see

1081
00:32:27,519 --> 00:32:31,039
that this in fact is yet again the same

1082
00:32:30,559 --> 00:32:34,240
save

1083
00:32:31,039 --> 00:32:37,279
page served as html or it served as php

1084
00:32:34,240 --> 00:32:38,720
so now i have basically four ways to get

1085
00:32:37,279 --> 00:32:41,039
to the same site

1086
00:32:38,720 --> 00:32:42,480
just by ultimately looking at we've

1087
00:32:41,039 --> 00:32:43,679
looked at two pages i haven't really

1088
00:32:42,480 --> 00:32:45,200
looked at anything other than those two

1089
00:32:43,679 --> 00:32:46,159
pages and then i confirmed it through a

1090
00:32:45,200 --> 00:32:48,080
user page

1091
00:32:46,159 --> 00:32:50,399
uh only because this particular user

1092
00:32:48,080 --> 00:32:53,360
banned me but that's another hint there

1093
00:32:50,399 --> 00:32:54,559
um it's an automated bot and i wanted to

1094
00:32:53,360 --> 00:32:56,639
see how this worked right so we just

1095
00:32:54,559 --> 00:32:58,559
played with it to kind of play

1096
00:32:56,640 --> 00:32:59,919
you can take this even a step further

1097
00:32:58,559 --> 00:33:01,120
right we talked about the functional map

1098
00:32:59,919 --> 00:33:02,960
you could play with it that way but you

1099
00:33:01,120 --> 00:33:04,479
could also create a logical map

1100
00:33:02,960 --> 00:33:06,000
and the logical map looks something like

1101
00:33:04,480 --> 00:33:09,039
this is that you

1102
00:33:06,000 --> 00:33:10,159
have inside of this sort of routing

1103
00:33:09,039 --> 00:33:11,760
table if you will

1104
00:33:10,159 --> 00:33:14,399
right it's going to say hey when this

1105
00:33:11,760 --> 00:33:16,480
request comes in there's some sort of

1106
00:33:14,399 --> 00:33:18,080
url rewriter this could be in the source

1107
00:33:16,480 --> 00:33:19,039
code itself or it could be a part of the

1108
00:33:18,080 --> 00:33:20,879
php code

1109
00:33:19,039 --> 00:33:23,120
it could be on the server right we don't

1110
00:33:20,880 --> 00:33:24,960
know ways that you can detect this

1111
00:33:23,120 --> 00:33:26,559
not relevant for our talk but we know

1112
00:33:24,960 --> 00:33:29,840
that it exists because

1113
00:33:26,559 --> 00:33:31,440
this by its nature routes to here

1114
00:33:29,840 --> 00:33:33,279
right and we get to this piece here

1115
00:33:31,440 --> 00:33:34,880
which is actually the real function

1116
00:33:33,279 --> 00:33:36,960
so with this we actually to the point

1117
00:33:34,880 --> 00:33:39,120
before have now two different ways to

1118
00:33:36,960 --> 00:33:40,480
manipulate and modify and play with it

1119
00:33:39,120 --> 00:33:42,399
we have a bunch of different parameters

1120
00:33:40,480 --> 00:33:43,720
that could have direct impacts on how

1121
00:33:42,399 --> 00:33:46,879
the user

1122
00:33:43,720 --> 00:33:48,159
st47 page works right this other page

1123
00:33:46,880 --> 00:33:49,279
here

1124
00:33:48,159 --> 00:33:51,519
actually does something else really

1125
00:33:49,279 --> 00:33:53,279
interesting which is you pass it

1126
00:33:51,519 --> 00:33:55,720
a page you would like it to look like so

1127
00:33:53,279 --> 00:33:58,960
in this case i sent it the user

1128
00:33:55,720 --> 00:34:00,720
ast47 or st47 piece and then

1129
00:33:58,960 --> 00:34:03,200
you can push it over to the download as

1130
00:34:00,720 --> 00:34:04,559
pdf that also means right but just

1131
00:34:03,200 --> 00:34:06,640
taking a peek at this

1132
00:34:04,559 --> 00:34:07,840
that i know that some sort of pdf

1133
00:34:06,640 --> 00:34:09,839
converter exists

1134
00:34:07,840 --> 00:34:11,598
if i follow this logical route that

1135
00:34:09,839 --> 00:34:14,399
won't follow in this logical route

1136
00:34:11,599 --> 00:34:15,919
and you could continue to take this path

1137
00:34:14,399 --> 00:34:17,040
and dig it and dig it and dig it a

1138
00:34:15,918 --> 00:34:18,480
little bit further right

1139
00:34:17,040 --> 00:34:20,879
you could actually unpack whether or not

1140
00:34:18,480 --> 00:34:22,560
this is a url rewriter that's in code

1141
00:34:20,879 --> 00:34:24,480
or you could check it to see if it's

1142
00:34:22,560 --> 00:34:26,159
something that's like a mod rewrite or

1143
00:34:24,480 --> 00:34:28,159
something on the server itself

1144
00:34:26,159 --> 00:34:29,839
and you could start to build assertions

1145
00:34:28,159 --> 00:34:31,760
by creating dedicated tests

1146
00:34:29,839 --> 00:34:32,879
and again we've only looked at we've

1147
00:34:31,760 --> 00:34:35,679
only looked at really

1148
00:34:32,879 --> 00:34:36,399
two pages three pages with very little

1149
00:34:35,679 --> 00:34:40,560
sort of time

1150
00:34:36,399 --> 00:34:40,560
investment into this right um

1151
00:34:42,000 --> 00:34:46,320
the next thing that we could take a look

1152
00:34:43,679 --> 00:34:48,079
at is we've we've figured out you know

1153
00:34:46,320 --> 00:34:49,919
language of the website right is php

1154
00:34:48,079 --> 00:34:51,119
that's pretty obvious we've seen basic

1155
00:34:49,918 --> 00:34:52,799
requesting patterns

1156
00:34:51,119 --> 00:34:54,639
we've seen the names very specific

1157
00:34:52,800 --> 00:34:56,079
functions and so you know you have this

1158
00:34:54,639 --> 00:34:57,119
and you have a bunch of pages that are

1159
00:34:56,079 --> 00:34:59,359
very similar to it

1160
00:34:57,119 --> 00:35:01,119
the super user account is that st47

1161
00:34:59,359 --> 00:35:02,240
because like i said you banned me

1162
00:35:01,119 --> 00:35:03,839
and then you could see like hey are

1163
00:35:02,240 --> 00:35:05,680
there other interesting pages that

1164
00:35:03,839 --> 00:35:08,160
divert functionality right like

1165
00:35:05,680 --> 00:35:10,399
clearly this page here diverts the

1166
00:35:08,160 --> 00:35:11,598
functionality from one place to the next

1167
00:35:10,400 --> 00:35:13,839
and so there are other it could be other

1168
00:35:11,599 --> 00:35:14,960
pages that give you yet another way to

1169
00:35:13,839 --> 00:35:16,640
access this

1170
00:35:14,960 --> 00:35:19,599
and you don't know by the way what the

1171
00:35:16,640 --> 00:35:21,598
permissions are if i make this request

1172
00:35:19,599 --> 00:35:23,440
this request comes from my browser comes

1173
00:35:21,599 --> 00:35:25,040
the server the server serves it to me as

1174
00:35:23,440 --> 00:35:27,520
either anonymous or through my id

1175
00:35:25,040 --> 00:35:28,800
of some sort when i make this request

1176
00:35:27,520 --> 00:35:30,640
there's no guarantee

1177
00:35:28,800 --> 00:35:32,320
that the authority who makes this

1178
00:35:30,640 --> 00:35:34,400
request here to go get it

1179
00:35:32,320 --> 00:35:36,400
is actually happening server side right

1180
00:35:34,400 --> 00:35:37,839
so it could be a whole different user

1181
00:35:36,400 --> 00:35:38,960
authority is it taking my authority and

1182
00:35:37,839 --> 00:35:40,720
passing it through

1183
00:35:38,960 --> 00:35:42,400
is there a generic user account that's

1184
00:35:40,720 --> 00:35:44,000
behind it in order to access it

1185
00:35:42,400 --> 00:35:45,760
like how does it know i'm not supposed

1186
00:35:44,000 --> 00:35:47,599
to pull this and i'm assuming there's

1187
00:35:45,760 --> 00:35:49,440
some sort of off pastor here

1188
00:35:47,599 --> 00:35:52,960
that gives you yet another piece of code

1189
00:35:49,440 --> 00:35:52,960
that you can start to play with right

1190
00:35:54,160 --> 00:35:57,598
so we never really figured out how to

1191
00:35:56,160 --> 00:35:58,720
break the cache we're trying to figure

1192
00:35:57,599 --> 00:36:00,240
out how to break the cache it's

1193
00:35:58,720 --> 00:36:01,839
obviously a big piece of what we were

1194
00:36:00,240 --> 00:36:03,040
looking at here we wanted to kind of see

1195
00:36:01,839 --> 00:36:05,119
how you could do it and

1196
00:36:03,040 --> 00:36:06,400
one of the things that you could do to

1197
00:36:05,119 --> 00:36:09,520
break cache is start to ask

1198
00:36:06,400 --> 00:36:12,800
questions of what type of requests

1199
00:36:09,520 --> 00:36:15,359
would create content that's new right

1200
00:36:12,800 --> 00:36:17,280
because if it's new presumably it

1201
00:36:15,359 --> 00:36:18,400
wouldn't have time to propagate out to

1202
00:36:17,280 --> 00:36:20,640
all the cache entities

1203
00:36:18,400 --> 00:36:22,000
right the next time you requested it so

1204
00:36:20,640 --> 00:36:22,960
really the easiest way to do this would

1205
00:36:22,000 --> 00:36:25,920
be to create

1206
00:36:22,960 --> 00:36:28,000
something new right and so what it is

1207
00:36:25,920 --> 00:36:30,960
started playing with the editing pages

1208
00:36:28,000 --> 00:36:32,480
in this i found this sort of load.php

1209
00:36:30,960 --> 00:36:34,720
which follows again a very similar

1210
00:36:32,480 --> 00:36:36,480
pattern to the index.php

1211
00:36:34,720 --> 00:36:38,240
but in this case you'll see that it

1212
00:36:36,480 --> 00:36:40,560
actually only supports pulling in

1213
00:36:38,240 --> 00:36:42,720
javascript files javascript libraries

1214
00:36:40,560 --> 00:36:44,960
and then it's used for this process of

1215
00:36:42,720 --> 00:36:48,078
creating something new

1216
00:36:44,960 --> 00:36:49,119
when we get here we run into again i'm

1217
00:36:48,079 --> 00:36:52,000
on this server

1218
00:36:49,119 --> 00:36:53,280
it misses the cache in and of itself and

1219
00:36:52,000 --> 00:36:55,280
with this i've actually

1220
00:36:53,280 --> 00:36:56,960
found the very first instance where as

1221
00:36:55,280 --> 00:37:00,000
i'm making this request

1222
00:36:56,960 --> 00:37:03,440
it actually is talking to a real

1223
00:37:00,000 --> 00:37:06,240
sort of server things of this sort right

1224
00:37:03,440 --> 00:37:07,760
so going back to this page we started to

1225
00:37:06,240 --> 00:37:09,118
talk about the different request

1226
00:37:07,760 --> 00:37:09,680
structures right so we've looked at it

1227
00:37:09,119 --> 00:37:12,240
from this

1228
00:37:09,680 --> 00:37:13,440
this idea of the front controller but as

1229
00:37:12,240 --> 00:37:15,439
you explore

1230
00:37:13,440 --> 00:37:16,640
how this particular page works you start

1231
00:37:15,440 --> 00:37:18,560
to take a look at it

1232
00:37:16,640 --> 00:37:19,680
when we look at the request process you

1233
00:37:18,560 --> 00:37:22,078
see it broken up

1234
00:37:19,680 --> 00:37:23,598
in something more like this right and

1235
00:37:22,079 --> 00:37:25,359
with this controller you see that

1236
00:37:23,599 --> 00:37:27,599
there's a change in technology

1237
00:37:25,359 --> 00:37:28,799
rest is not a front controller so rest

1238
00:37:27,599 --> 00:37:32,240
is this uh

1239
00:37:28,800 --> 00:37:34,000
restful api right it's a way to replace

1240
00:37:32,240 --> 00:37:37,118
soap and it was very popular

1241
00:37:34,000 --> 00:37:38,079
back in like 2008 2010 uh and it means

1242
00:37:37,119 --> 00:37:40,640
that it's a whole

1243
00:37:38,079 --> 00:37:42,400
different code base most likely

1244
00:37:40,640 --> 00:37:45,759
underneath this piece here

1245
00:37:42,400 --> 00:37:47,440
because it's not actually using the same

1246
00:37:45,760 --> 00:37:48,079
technology that the previous one did

1247
00:37:47,440 --> 00:37:50,320
that's likely

1248
00:37:48,079 --> 00:37:51,280
using get and head requests in order to

1249
00:37:50,320 --> 00:37:54,480
go pull out and

1250
00:37:51,280 --> 00:37:56,960
get this information for you right so

1251
00:37:54,480 --> 00:37:58,480
now we've seen another server we've seen

1252
00:37:56,960 --> 00:38:00,560
a second piece of code

1253
00:37:58,480 --> 00:38:02,720
structure how the application itself

1254
00:38:00,560 --> 00:38:04,400
behaves and we've seen new ways to

1255
00:38:02,720 --> 00:38:06,000
access the same thing

1256
00:38:04,400 --> 00:38:08,560
again just by spending a little bit of

1257
00:38:06,000 --> 00:38:10,800
time with a little bit of inspection

1258
00:38:08,560 --> 00:38:12,160
the last thing in terms of sort of

1259
00:38:10,800 --> 00:38:14,800
interesting pieces

1260
00:38:12,160 --> 00:38:15,520
is we ran into this idea of a beacon now

1261
00:38:14,800 --> 00:38:17,359
i looked at

1262
00:38:15,520 --> 00:38:19,440
a lot more of the source code and so i

1263
00:38:17,359 --> 00:38:22,640
saw some of these requests play out

1264
00:38:19,440 --> 00:38:25,520
but we see a uri here

1265
00:38:22,640 --> 00:38:27,279
that violates my pattern of how the rest

1266
00:38:25,520 --> 00:38:29,280
of the site works right we started with

1267
00:38:27,280 --> 00:38:31,520
your request uri it goes to the front

1268
00:38:29,280 --> 00:38:33,119
controller we saw the restful controller

1269
00:38:31,520 --> 00:38:34,880
and now we see something totally

1270
00:38:33,119 --> 00:38:36,560
different here where it's literally just

1271
00:38:34,880 --> 00:38:38,400
calling a beacon event

1272
00:38:36,560 --> 00:38:40,240
and it's passing all this information

1273
00:38:38,400 --> 00:38:43,280
along to it right from

1274
00:38:40,240 --> 00:38:44,879
right from the uri that's not that's not

1275
00:38:43,280 --> 00:38:46,720
the same thing in fact it's not even on

1276
00:38:44,880 --> 00:38:48,160
the same server it's on a varnish server

1277
00:38:46,720 --> 00:38:51,200
and so you get a question like how do

1278
00:38:48,160 --> 00:38:52,720
you get here you see over time for

1279
00:38:51,200 --> 00:38:53,439
people who have been doing security

1280
00:38:52,720 --> 00:38:55,680
testing

1281
00:38:53,440 --> 00:38:57,359
that applications evolve through their

1282
00:38:55,680 --> 00:38:59,359
iteration right they go from

1283
00:38:57,359 --> 00:39:01,200
from sort of original incention to

1284
00:38:59,359 --> 00:39:03,680
plug-ins to editions et cetera

1285
00:39:01,200 --> 00:39:05,839
and so you start to start using these as

1286
00:39:03,680 --> 00:39:07,919
bases to go well this might actually be

1287
00:39:05,839 --> 00:39:09,279
perhaps you know a plug-in it might be a

1288
00:39:07,920 --> 00:39:10,800
different code body

1289
00:39:09,280 --> 00:39:12,320
and with that it creates new

1290
00:39:10,800 --> 00:39:14,000
opportunities for testing

1291
00:39:12,320 --> 00:39:16,560
and kind of continuing to unpack this

1292
00:39:14,000 --> 00:39:18,560
right this particular design

1293
00:39:16,560 --> 00:39:20,320
pattern going back to the martin fowler

1294
00:39:18,560 --> 00:39:22,480
stuff is what we would call

1295
00:39:20,320 --> 00:39:24,640
a page controller pattern right and so

1296
00:39:22,480 --> 00:39:25,359
in this the page is the controller when

1297
00:39:24,640 --> 00:39:27,839
you go to

1298
00:39:25,359 --> 00:39:29,680
the action write an edit page or an

1299
00:39:27,839 --> 00:39:30,960
update page or what have you in this

1300
00:39:29,680 --> 00:39:33,680
particular case

1301
00:39:30,960 --> 00:39:35,359
it is uh most likely a page controller

1302
00:39:33,680 --> 00:39:37,440
meaning that the functionality for it

1303
00:39:35,359 --> 00:39:38,078
exists within that one page that you've

1304
00:39:37,440 --> 00:39:40,400
went to

1305
00:39:38,079 --> 00:39:42,160
so if you go to edit user page that's

1306
00:39:40,400 --> 00:39:44,480
typically one thing if you go to a

1307
00:39:42,160 --> 00:39:45,680
delete user page there's another thing

1308
00:39:44,480 --> 00:39:48,079
and so you actually

1309
00:39:45,680 --> 00:39:49,759
have everything inside of it to do it my

1310
00:39:48,079 --> 00:39:50,560
point in drawing your attention to these

1311
00:39:49,760 --> 00:39:53,040
things is that

1312
00:39:50,560 --> 00:39:54,078
these all become levers right just like

1313
00:39:53,040 --> 00:39:56,800
we're talking about

1314
00:39:54,079 --> 00:39:57,440
vulnerabilities applied to the mechanics

1315
00:39:56,800 --> 00:39:59,680
of the

1316
00:39:57,440 --> 00:40:02,320
application we're trying to understand

1317
00:39:59,680 --> 00:40:05,919
how this system works in its totality

1318
00:40:02,320 --> 00:40:08,000
so that with it we have the capability

1319
00:40:05,920 --> 00:40:09,200
of driving an understanding that

1320
00:40:08,000 --> 00:40:10,319
dictates where we're going to ask

1321
00:40:09,200 --> 00:40:10,720
questions what questions we're going to

1322
00:40:10,319 --> 00:40:12,880
ask

1323
00:40:10,720 --> 00:40:14,560
and we can begin to peel back even more

1324
00:40:12,880 --> 00:40:15,920
and more and more and more layers of

1325
00:40:14,560 --> 00:40:18,319
this application right

1326
00:40:15,920 --> 00:40:20,800
so as an example right to really kind of

1327
00:40:18,319 --> 00:40:23,119
give you some some context into this

1328
00:40:20,800 --> 00:40:24,640
what we've been able to see just through

1329
00:40:23,119 --> 00:40:25,280
the little bit of testing we've talked

1330
00:40:24,640 --> 00:40:28,240
about

1331
00:40:25,280 --> 00:40:29,680
is that you have a caching inspection

1332
00:40:28,240 --> 00:40:32,240
group right here where we talked about

1333
00:40:29,680 --> 00:40:34,480
the caching on our previous amazon model

1334
00:40:32,240 --> 00:40:36,640
and so we see that there's basically

1335
00:40:34,480 --> 00:40:37,359
five different caching entities in place

1336
00:40:36,640 --> 00:40:41,118
or at least

1337
00:40:37,359 --> 00:40:44,319
four this idea here of the eq

1338
00:40:41,119 --> 00:40:46,560
a iad whatever that is actually is where

1339
00:40:44,319 --> 00:40:48,880
the dynamic content appears to actually

1340
00:40:46,560 --> 00:40:51,680
be served when it misses a cache

1341
00:40:48,880 --> 00:40:52,160
we know how those names work conventions

1342
00:40:51,680 --> 00:40:53,598
work

1343
00:40:52,160 --> 00:40:54,879
so if we're actually writing exploits

1344
00:40:53,599 --> 00:40:55,760
later we're looking at things like

1345
00:40:54,880 --> 00:40:57,920
cross-site

1346
00:40:55,760 --> 00:40:58,880
uh request forgery or cross-site server

1347
00:40:57,920 --> 00:41:01,920
forgery

1348
00:40:58,880 --> 00:41:03,680
cross-site server forgery um we're

1349
00:41:01,920 --> 00:41:04,640
trying to talk between the servers and

1350
00:41:03,680 --> 00:41:07,598
we're passing

1351
00:41:04,640 --> 00:41:09,520
our requests between things you know the

1352
00:41:07,599 --> 00:41:10,960
infrastructure and how it works

1353
00:41:09,520 --> 00:41:12,319
so you can communicate with it and

1354
00:41:10,960 --> 00:41:13,839
you're not guessing right or you could

1355
00:41:12,319 --> 00:41:16,000
enumerate even further

1356
00:41:13,839 --> 00:41:17,520
so that you have very targeted specific

1357
00:41:16,000 --> 00:41:20,160
things that you're going after

1358
00:41:17,520 --> 00:41:21,520
we know also that you have basically

1359
00:41:20,160 --> 00:41:23,279
three bodies of code

1360
00:41:21,520 --> 00:41:25,200
right you have this beacon extension

1361
00:41:23,280 --> 00:41:26,800
thing you have this front controller

1362
00:41:25,200 --> 00:41:28,960
which is our primary method

1363
00:41:26,800 --> 00:41:29,839
and then we also have this semi-dynamic

1364
00:41:28,960 --> 00:41:33,280
restful

1365
00:41:29,839 --> 00:41:34,078
sort of piece inside of it this gives us

1366
00:41:33,280 --> 00:41:36,560
a lot of

1367
00:41:34,079 --> 00:41:37,119
information about the composition and

1368
00:41:36,560 --> 00:41:39,680
again

1369
00:41:37,119 --> 00:41:40,560
this is really only with again we talked

1370
00:41:39,680 --> 00:41:42,879
about it now for

1371
00:41:40,560 --> 00:41:44,480
for really the last 20 25 minutes but

1372
00:41:42,880 --> 00:41:46,160
it's really was about five minutes of

1373
00:41:44,480 --> 00:41:47,359
work to understand what this looks like

1374
00:41:46,160 --> 00:41:49,200
and play with

1375
00:41:47,359 --> 00:41:50,960
just by going to the website and

1376
00:41:49,200 --> 00:41:52,879
navigating through a couple of things

1377
00:41:50,960 --> 00:41:54,079
and reading through source code on it

1378
00:41:52,880 --> 00:41:54,800
the last thing we learned is that they

1379
00:41:54,079 --> 00:41:56,720
have logging

1380
00:41:54,800 --> 00:41:58,480
there's an infrastructure to the to the

1381
00:41:56,720 --> 00:42:00,799
last piece they have this thing called

1382
00:41:58,480 --> 00:42:03,040
an xid which tracks it's a good

1383
00:42:00,800 --> 00:42:04,560
um it looks like that information might

1384
00:42:03,040 --> 00:42:06,240
get passed over to logging or there

1385
00:42:04,560 --> 00:42:08,000
might be a way to communicate with it

1386
00:42:06,240 --> 00:42:10,078
and so if you were going to be building

1387
00:42:08,000 --> 00:42:10,640
custom attacks you know that this

1388
00:42:10,079 --> 00:42:12,319
logging

1389
00:42:10,640 --> 00:42:14,560
exists and you might find it relevant

1390
00:42:12,319 --> 00:42:15,680
useful for sort of second order attacks

1391
00:42:14,560 --> 00:42:17,920
or seconds or

1392
00:42:15,680 --> 00:42:19,759
tier stuff if you go down that row right

1393
00:42:17,920 --> 00:42:20,960
um there are some tools to make this

1394
00:42:19,760 --> 00:42:22,720
easier right so

1395
00:42:20,960 --> 00:42:24,079
i've approached this from the

1396
00:42:22,720 --> 00:42:27,118
perspective of

1397
00:42:24,079 --> 00:42:27,920
if you take the time to learn how the

1398
00:42:27,119 --> 00:42:29,680
patterns work

1399
00:42:27,920 --> 00:42:31,520
right the levers you know how does a

1400
00:42:29,680 --> 00:42:32,319
website look how are they modernly

1401
00:42:31,520 --> 00:42:34,319
deployed

1402
00:42:32,319 --> 00:42:36,160
with that we can start putting together

1403
00:42:34,319 --> 00:42:37,839
and assuming those components but

1404
00:42:36,160 --> 00:42:40,640
recognizing not everybody has 10 years

1405
00:42:37,839 --> 00:42:42,160
to want to become a professional tester

1406
00:42:40,640 --> 00:42:44,078
software engineer before they go start

1407
00:42:42,160 --> 00:42:45,200
in testing you can use things like

1408
00:42:44,079 --> 00:42:47,119
wapalyzer

1409
00:42:45,200 --> 00:42:48,879
and get very similar ideas especially

1410
00:42:47,119 --> 00:42:51,359
when there are

1411
00:42:48,880 --> 00:42:52,480
common pieces inside of it that kind of

1412
00:42:51,359 --> 00:42:54,960
identify it right so

1413
00:42:52,480 --> 00:42:55,839
knowing that it's media wiki if i ran

1414
00:42:54,960 --> 00:42:57,040
into this

1415
00:42:55,839 --> 00:42:58,640
you know in the wild on a real

1416
00:42:57,040 --> 00:43:00,240
engagement i probably would just

1417
00:42:58,640 --> 00:43:01,598
download media wiki

1418
00:43:00,240 --> 00:43:03,520
figure out what version they were

1419
00:43:01,599 --> 00:43:05,520
running and then i would use that as my

1420
00:43:03,520 --> 00:43:07,359
basis of comparison i may not even

1421
00:43:05,520 --> 00:43:09,359
try to reverse engineer it because it

1422
00:43:07,359 --> 00:43:10,720
would almost be irrelevant at that point

1423
00:43:09,359 --> 00:43:12,880
since i have the source code here

1424
00:43:10,720 --> 00:43:13,759
and that is how it behaves right you

1425
00:43:12,880 --> 00:43:16,160
could use it that way

1426
00:43:13,760 --> 00:43:18,000
and so having this access to what they

1427
00:43:16,160 --> 00:43:18,879
actually are doing and maybe versions as

1428
00:43:18,000 --> 00:43:22,480
you can see

1429
00:43:18,880 --> 00:43:24,480
right to the jquery and moment and

1430
00:43:22,480 --> 00:43:26,560
migrate and so forth that gives you a

1431
00:43:24,480 --> 00:43:27,119
lot of information that can help drive

1432
00:43:26,560 --> 00:43:29,040
some of it

1433
00:43:27,119 --> 00:43:30,400
but again it didn't tell you the front

1434
00:43:29,040 --> 00:43:32,240
controllers didn't tell you page

1435
00:43:30,400 --> 00:43:34,319
controllers it didn't show you

1436
00:43:32,240 --> 00:43:36,160
the caching infrastructure or the calvin

1437
00:43:34,319 --> 00:43:37,359
arc caching architecture

1438
00:43:36,160 --> 00:43:39,359
so with that you know there's

1439
00:43:37,359 --> 00:43:40,319
limitations to something like wapalizer

1440
00:43:39,359 --> 00:43:42,319
however

1441
00:43:40,319 --> 00:43:43,839
things like wapalizer can kind of take

1442
00:43:42,319 --> 00:43:45,359
some of the guesswork out fast it can

1443
00:43:43,839 --> 00:43:46,560
kind of help you move down this road and

1444
00:43:45,359 --> 00:43:47,598
make your life a little bit easier

1445
00:43:46,560 --> 00:43:49,759
better right

1446
00:43:47,599 --> 00:43:51,599
um so from a takeaways perspective right

1447
00:43:49,760 --> 00:43:52,640
core concepts things i'd love for you to

1448
00:43:51,599 --> 00:43:54,640
leave with right

1449
00:43:52,640 --> 00:43:55,839
is you have this server side request

1450
00:43:54,640 --> 00:43:57,839
forgery attacks

1451
00:43:55,839 --> 00:43:59,839
possibly through the pdf download

1452
00:43:57,839 --> 00:44:02,078
functionality you might be able to

1453
00:43:59,839 --> 00:44:04,240
make the server go request other things

1454
00:44:02,079 --> 00:44:06,960
right so like what's to say that that

1455
00:44:04,240 --> 00:44:09,439
function we saw for download as pdf

1456
00:44:06,960 --> 00:44:11,200
is only restricted to that server right

1457
00:44:09,440 --> 00:44:12,960
so if i'm looking for ssrf

1458
00:44:11,200 --> 00:44:14,640
i'm looking for areas where the server

1459
00:44:12,960 --> 00:44:16,160
is making requests on my behalf

1460
00:44:14,640 --> 00:44:18,240
so knowing that's what it's probably

1461
00:44:16,160 --> 00:44:18,879
doing here could i go send it to google

1462
00:44:18,240 --> 00:44:21,118
could i go

1463
00:44:18,880 --> 00:44:22,000
send it to a conserver that i control

1464
00:44:21,119 --> 00:44:24,480
probably how i test

1465
00:44:22,000 --> 00:44:26,000
it to see if there's a possibility for

1466
00:44:24,480 --> 00:44:28,880
that to happen right

1467
00:44:26,000 --> 00:44:30,480
we know what the cash systems are and so

1468
00:44:28,880 --> 00:44:32,480
we might look at ways to do

1469
00:44:30,480 --> 00:44:33,520
cash poisoning or other http based

1470
00:44:32,480 --> 00:44:35,280
attacks that might

1471
00:44:33,520 --> 00:44:36,720
bypass the way that the auth and the

1472
00:44:35,280 --> 00:44:39,440
cache itself works right

1473
00:44:36,720 --> 00:44:41,439
because when it's cached right how that

1474
00:44:39,440 --> 00:44:41,839
information is cached and what goes into

1475
00:44:41,440 --> 00:44:43,200
it

1476
00:44:41,839 --> 00:44:45,200
may very well have a whole different

1477
00:44:43,200 --> 00:44:46,879
authentication like how would those two

1478
00:44:45,200 --> 00:44:48,640
systems independently evolve

1479
00:44:46,880 --> 00:44:50,000
again probably not a lot of private

1480
00:44:48,640 --> 00:44:52,160
information behind it but there

1481
00:44:50,000 --> 00:44:53,599
are attacks that you could go through

1482
00:44:52,160 --> 00:44:55,598
and take advantage of the fact that you

1483
00:44:53,599 --> 00:44:57,119
do know that a lot of that's cached

1484
00:44:55,599 --> 00:44:58,800
and they could probably use it to attack

1485
00:44:57,119 --> 00:45:00,160
people maybe other people and directly

1486
00:44:58,800 --> 00:45:01,680
through second-order attacks

1487
00:45:00,160 --> 00:45:03,680
you could map all the functions like i

1488
00:45:01,680 --> 00:45:06,078
said before you know when you see

1489
00:45:03,680 --> 00:45:08,319
something like a front controller

1490
00:45:06,079 --> 00:45:10,560
knowing that every action basically

1491
00:45:08,319 --> 00:45:12,160
represents a method or class

1492
00:45:10,560 --> 00:45:14,078
and then inside of it you have the

1493
00:45:12,160 --> 00:45:16,399
parameters for those calls

1494
00:45:14,079 --> 00:45:17,760
you could actually basically reverse and

1495
00:45:16,400 --> 00:45:20,160
just literally write out

1496
00:45:17,760 --> 00:45:21,520
the entire function map from there and

1497
00:45:20,160 --> 00:45:23,759
then start to play with it

1498
00:45:21,520 --> 00:45:24,720
so if i was to do a real test on

1499
00:45:23,760 --> 00:45:26,640
mediawiki what i

1500
00:45:24,720 --> 00:45:28,560
would probably do is i would enumerate

1501
00:45:26,640 --> 00:45:29,279
as many of these as i could to see what

1502
00:45:28,560 --> 00:45:31,040
additional

1503
00:45:29,280 --> 00:45:32,319
sort of functions were there what other

1504
00:45:31,040 --> 00:45:34,240
parameters they took

1505
00:45:32,319 --> 00:45:36,000
and then i would create a master list i

1506
00:45:34,240 --> 00:45:37,839
repeat all those requests

1507
00:45:36,000 --> 00:45:39,599
and take the parameters that i've seen

1508
00:45:37,839 --> 00:45:41,520
already successfully and see

1509
00:45:39,599 --> 00:45:42,720
which ones are universal which ones are

1510
00:45:41,520 --> 00:45:44,319
specific to them

1511
00:45:42,720 --> 00:45:46,000
you know when you run into common naming

1512
00:45:44,319 --> 00:45:48,560
conventions these tend to actually

1513
00:45:46,000 --> 00:45:50,000
reveal different types of parameters

1514
00:45:48,560 --> 00:45:51,920
that you can manipulate similar to like

1515
00:45:50,000 --> 00:45:54,079
a mass assignment attack if you will

1516
00:45:51,920 --> 00:45:56,400
and you have a tool that's going to give

1517
00:45:54,079 --> 00:45:56,800
you some way some information to do it

1518
00:45:56,400 --> 00:45:58,400
now

1519
00:45:56,800 --> 00:45:59,920
again not relevant in some regards

1520
00:45:58,400 --> 00:46:01,440
because you could go download media wiki

1521
00:45:59,920 --> 00:46:02,480
you don't need to go guests right you

1522
00:46:01,440 --> 00:46:03,760
could just look at it

1523
00:46:02,480 --> 00:46:05,599
but this is what you would do if you

1524
00:46:03,760 --> 00:46:07,040
didn't have it right um

1525
00:46:05,599 --> 00:46:08,720
again we talked about attacking the

1526
00:46:07,040 --> 00:46:09,759
logging server right if this was an

1527
00:46:08,720 --> 00:46:11,520
attack

1528
00:46:09,760 --> 00:46:13,280
if i was going to attack wikipedia you

1529
00:46:11,520 --> 00:46:14,640
could maybe go after a logging service

1530
00:46:13,280 --> 00:46:16,000
and see is there a way to like

1531
00:46:14,640 --> 00:46:17,359
poison that through second order

1532
00:46:16,000 --> 00:46:19,520
cross-site scripting and ways to do

1533
00:46:17,359 --> 00:46:21,920
callbacks things of this sort

1534
00:46:19,520 --> 00:46:23,599
the point of this talk and ultimately

1535
00:46:21,920 --> 00:46:24,880
what i wanted to kind of go through with

1536
00:46:23,599 --> 00:46:27,359
everybody today

1537
00:46:24,880 --> 00:46:28,000
is that in the scientific method it's

1538
00:46:27,359 --> 00:46:30,000
still rules

1539
00:46:28,000 --> 00:46:31,119
right and that you can't put something

1540
00:46:30,000 --> 00:46:34,319
on the web

1541
00:46:31,119 --> 00:46:35,599
without some way for me to figure out

1542
00:46:34,319 --> 00:46:37,599
how it was composed

1543
00:46:35,599 --> 00:46:38,960
even if you sort of hid some of the

1544
00:46:37,599 --> 00:46:41,839
headers even if you

1545
00:46:38,960 --> 00:46:42,800
didn't actually be so explicit on things

1546
00:46:41,839 --> 00:46:44,799
it would

1547
00:46:42,800 --> 00:46:46,640
be not that difficult to figure out the

1548
00:46:44,800 --> 00:46:48,240
differences in deltas between

1549
00:46:46,640 --> 00:46:50,319
what comes out of cash based on things

1550
00:46:48,240 --> 00:46:51,520
like how fast it responds

1551
00:46:50,319 --> 00:46:52,640
you know how long it takes for some of

1552
00:46:51,520 --> 00:46:54,319
your requests to come through can

1553
00:46:52,640 --> 00:46:56,240
actually give you indications

1554
00:46:54,319 --> 00:46:58,319
as you see through things like blind sql

1555
00:46:56,240 --> 00:47:00,399
injection you have you can you can

1556
00:46:58,319 --> 00:47:02,079
create predictability through your test

1557
00:47:00,400 --> 00:47:03,440
to determine what's actually happening

1558
00:47:02,079 --> 00:47:04,640
on the other side even though you don't

1559
00:47:03,440 --> 00:47:06,960
know what it is right

1560
00:47:04,640 --> 00:47:09,118
um this whole system relies on your

1561
00:47:06,960 --> 00:47:11,359
ability to understand patterns right and

1562
00:47:09,119 --> 00:47:12,960
you need to be able to look at the lever

1563
00:47:11,359 --> 00:47:15,279
points so you know

1564
00:47:12,960 --> 00:47:16,640
where to apply pressure appropriately

1565
00:47:15,280 --> 00:47:18,079
and what you can basically ignore

1566
00:47:16,640 --> 00:47:19,920
there's some pieces of this

1567
00:47:18,079 --> 00:47:21,760
that i would just say i haven't looked

1568
00:47:19,920 --> 00:47:23,440
at the technology in a long time and

1569
00:47:21,760 --> 00:47:24,720
so maybe they're false flags right maybe

1570
00:47:23,440 --> 00:47:26,640
it's i just don't understand how the

1571
00:47:24,720 --> 00:47:28,720
technology works and that's okay

1572
00:47:26,640 --> 00:47:30,480
but the goal would be to reduce that so

1573
00:47:28,720 --> 00:47:32,240
when i'm looking at a site

1574
00:47:30,480 --> 00:47:33,760
i could go through it faster and faster

1575
00:47:32,240 --> 00:47:35,919
from time and time and again

1576
00:47:33,760 --> 00:47:37,359
and then save my effort and my energy so

1577
00:47:35,920 --> 00:47:38,800
when i look at it the next time

1578
00:47:37,359 --> 00:47:40,799
i'm not i'm not guessing as much right

1579
00:47:38,800 --> 00:47:41,920
and it makes me much more rapid as i do

1580
00:47:40,800 --> 00:47:43,760
this right

1581
00:47:41,920 --> 00:47:45,119
there are violations to standards right

1582
00:47:43,760 --> 00:47:47,599
so you could

1583
00:47:45,119 --> 00:47:49,200
have this url rewriting policy where

1584
00:47:47,599 --> 00:47:49,920
sometimes it's a query string sometimes

1585
00:47:49,200 --> 00:47:51,439
it's the path

1586
00:47:49,920 --> 00:47:53,040
that's really clearly not what the

1587
00:47:51,440 --> 00:47:53,839
standard was trying to kind of shoot for

1588
00:47:53,040 --> 00:47:56,400
with that

1589
00:47:53,839 --> 00:47:57,040
but it allows for ambiguity that now

1590
00:47:56,400 --> 00:47:58,800
creates

1591
00:47:57,040 --> 00:48:00,079
nuanced testing approaches that may not

1592
00:47:58,800 --> 00:48:02,240
have otherwise been

1593
00:48:00,079 --> 00:48:03,839
available uh if they had just stayed

1594
00:48:02,240 --> 00:48:05,439
within within the standard or the way

1595
00:48:03,839 --> 00:48:07,200
that the spec itself was written

1596
00:48:05,440 --> 00:48:09,119
but again to my point even at the

1597
00:48:07,200 --> 00:48:10,078
beginning of this is that standards are

1598
00:48:09,119 --> 00:48:11,599
very loose

1599
00:48:10,079 --> 00:48:13,680
and there's a lot of things you can do

1600
00:48:11,599 --> 00:48:15,280
because the web technology is quite

1601
00:48:13,680 --> 00:48:17,520
flexible right

1602
00:48:15,280 --> 00:48:18,559
and then finally when you introduce new

1603
00:48:17,520 --> 00:48:20,559
code patterns

1604
00:48:18,559 --> 00:48:22,240
right whether it's the restful api the

1605
00:48:20,559 --> 00:48:24,079
front control or the page controller

1606
00:48:22,240 --> 00:48:26,240
you create unique opportunities that

1607
00:48:24,079 --> 00:48:27,280
exist only in those isolated buckets and

1608
00:48:26,240 --> 00:48:29,040
to the degree

1609
00:48:27,280 --> 00:48:31,119
that you can even just understand how an

1610
00:48:29,040 --> 00:48:33,279
application works at these pattern level

1611
00:48:31,119 --> 00:48:35,359
you actually have a leg up and coming

1612
00:48:33,280 --> 00:48:38,240
after this and then using it as a way

1613
00:48:35,359 --> 00:48:39,040
to drive and attack and go after systems

1614
00:48:38,240 --> 00:48:40,879
and really

1615
00:48:39,040 --> 00:48:42,079
use in your time intentionally and focus

1616
00:48:40,880 --> 00:48:43,200
your time in your reverse engineering

1617
00:48:42,079 --> 00:48:45,280
effort so

1618
00:48:43,200 --> 00:48:46,799
i hope this talk was useful i'm really

1619
00:48:45,280 --> 00:48:47,359
thankful to be here if you want to learn

1620
00:48:46,800 --> 00:48:49,920
more

1621
00:48:47,359 --> 00:48:51,680
about application security uh for me

1622
00:48:49,920 --> 00:48:52,480
jump in to send security.i o i have a

1623
00:48:51,680 --> 00:48:54,399
blog there

1624
00:48:52,480 --> 00:48:56,160
and then i have a youtube channel that i

1625
00:48:54,400 --> 00:48:56,880
am woefully overdue in putting out

1626
00:48:56,160 --> 00:48:58,160
another video

1627
00:48:56,880 --> 00:49:00,000
but we're going to continue to explore

1628
00:48:58,160 --> 00:49:00,879
these types of topics to help people

1629
00:49:00,000 --> 00:49:02,640
become better

1630
00:49:00,880 --> 00:49:04,559
pen testers so they can write more

1631
00:49:02,640 --> 00:49:05,920
reliable exploits and find things more

1632
00:49:04,559 --> 00:49:07,440
reliably too so

1633
00:49:05,920 --> 00:49:09,040
thank you all for your time i appreciate

1634
00:49:07,440 --> 00:49:10,800
it and uh

1635
00:49:09,040 --> 00:49:17,839
hope the cactus con continues to go well

1636
00:49:10,800 --> 00:49:17,839
for everybody

1637
00:49:37,119 --> 00:49:39,200
you

