1
00:00:04,560 --> 00:00:06,879
i'm russ

2
00:00:05,359 --> 00:00:08,480
and i'm part of the cactus con

3
00:00:06,879 --> 00:00:10,240
registration team

4
00:00:08,480 --> 00:00:13,040
it's my pleasure to introduce our next

5
00:00:10,240 --> 00:00:14,960
speaker today hypoxic owner and operator

6
00:00:13,040 --> 00:00:17,680
mark kirschenbaum

7
00:00:14,960 --> 00:00:18,720
mark's talk today is entitled extracting

8
00:00:17,680 --> 00:00:22,160
a bootloader's

9
00:00:18,720 --> 00:00:23,279
aes key via power analysis side channel

10
00:00:22,160 --> 00:00:24,640
attack

11
00:00:23,279 --> 00:00:27,279
at the end of the talk there'll be a

12
00:00:24,640 --> 00:00:31,840
live q a with mark all you need to do to

13
00:00:27,279 --> 00:00:31,840
join in is have your questions ready

14
00:00:34,160 --> 00:00:38,959
well all right welcome to my talk on

15
00:00:36,640 --> 00:00:40,800
power analysis side channel attacks

16
00:00:38,960 --> 00:00:42,719
my name is mark christenbaum a lot of

17
00:00:40,800 --> 00:00:44,879
people call me trunk in the industry so

18
00:00:42,719 --> 00:00:46,559
feel free to use that

19
00:00:44,879 --> 00:00:48,000
we're going to talk a little bit about

20
00:00:46,559 --> 00:00:50,399
how i was able to

21
00:00:48,000 --> 00:00:51,920
break into the security enclave on a

22
00:00:50,399 --> 00:00:54,960
gopro hero5

23
00:00:51,920 --> 00:00:55,760
and extract its builders keys so i hope

24
00:00:54,960 --> 00:00:58,879
you enjoy this

25
00:00:55,760 --> 00:01:00,718
talk a little bit about my background

26
00:00:58,879 --> 00:01:02,079
i uh own and operate a company called

27
00:01:00,719 --> 00:01:04,080
hypoxic

28
00:01:02,079 --> 00:01:06,720
and we make a camera of equipment

29
00:01:04,080 --> 00:01:08,240
basically for extreme sports

30
00:01:06,720 --> 00:01:10,400
so let's say i'm jumping out of an

31
00:01:08,240 --> 00:01:11,360
airplane and i want to capture image of

32
00:01:10,400 --> 00:01:12,720
you know my girlfriend

33
00:01:11,360 --> 00:01:15,360
who's in the bottom right hand corner

34
00:01:12,720 --> 00:01:16,320
here uh while i'm flying i'm using my

35
00:01:15,360 --> 00:01:19,040
hands i have

36
00:01:16,320 --> 00:01:20,960
i have to look at her i'm using my face

37
00:01:19,040 --> 00:01:21,680
and so i can't be holding a camera while

38
00:01:20,960 --> 00:01:23,119
i'm doing that

39
00:01:21,680 --> 00:01:25,280
so we make a bunch of the accessories

40
00:01:23,119 --> 00:01:27,200
that mount on our helmets and enable us

41
00:01:25,280 --> 00:01:27,840
to capture these image or capture the

42
00:01:27,200 --> 00:01:30,880
video

43
00:01:27,840 --> 00:01:33,040
and make sure that we do it reliably

44
00:01:30,880 --> 00:01:33,920
so in order to do that over the years

45
00:01:33,040 --> 00:01:35,439
i've

46
00:01:33,920 --> 00:01:37,759
had to reverse engineer a bunch of

47
00:01:35,439 --> 00:01:41,758
cameras a bunch of embedded systems

48
00:01:37,759 --> 00:01:43,759
to make them work the way i want them to

49
00:01:41,759 --> 00:01:45,040
i think like all of us i really love to

50
00:01:43,759 --> 00:01:46,880
take things apart

51
00:01:45,040 --> 00:01:48,000
and maybe in the past 10 years i've

52
00:01:46,880 --> 00:01:49,039
actually learned how to put them back

53
00:01:48,000 --> 00:01:51,360
together

54
00:01:49,040 --> 00:01:53,360
so full disclosure i used to work for a

55
00:01:51,360 --> 00:01:54,799
my controller company i no longer work

56
00:01:53,360 --> 00:01:56,960
for them and

57
00:01:54,799 --> 00:01:58,000
that was something like 11 years ago but

58
00:01:56,960 --> 00:02:01,439
just in case people

59
00:01:58,000 --> 00:02:04,640
put two together this uh talk has

60
00:02:01,439 --> 00:02:05,679
nothing to do about them i look forward

61
00:02:04,640 --> 00:02:08,080
to answering

62
00:02:05,680 --> 00:02:09,679
the question why i'm doing a side

63
00:02:08,080 --> 00:02:11,760
channel power analysis attack why i

64
00:02:09,679 --> 00:02:13,520
chose to go about it this way

65
00:02:11,760 --> 00:02:16,480
a little bit of the power analysis

66
00:02:13,520 --> 00:02:18,640
behind a side channel attack

67
00:02:16,480 --> 00:02:20,319
and then obviously how to implement this

68
00:02:18,640 --> 00:02:22,640
in the real world because that's where

69
00:02:20,319 --> 00:02:23,599
you really take the pen to the paper

70
00:02:22,640 --> 00:02:26,640
give you some advice

71
00:02:23,599 --> 00:02:28,799
on implementing this in your own target

72
00:02:26,640 --> 00:02:30,720
and hopefully at the end of the day give

73
00:02:28,800 --> 00:02:33,760
answer any questions you have

74
00:02:30,720 --> 00:02:33,760
on the discord server

75
00:02:33,840 --> 00:02:37,440
okay side channel attacks are really

76
00:02:35,599 --> 00:02:39,359
really neat i find them they're

77
00:02:37,440 --> 00:02:41,200
the culmination of like everything

78
00:02:39,360 --> 00:02:43,519
you've ever learned in school

79
00:02:41,200 --> 00:02:45,359
uh it bridges statistics analog

80
00:02:43,519 --> 00:02:46,800
electronics digital electronics and with

81
00:02:45,360 --> 00:02:49,120
cryptography and

82
00:02:46,800 --> 00:02:51,120
it's it's pretty complex because now

83
00:02:49,120 --> 00:02:53,200
many of us are good at all those tasks

84
00:02:51,120 --> 00:02:56,160
or aspects

85
00:02:53,200 --> 00:02:57,200
and so it it's a really kind of a neat

86
00:02:56,160 --> 00:03:00,319
concept to learn

87
00:02:57,200 --> 00:03:00,958
and to work through yourself today my

88
00:03:00,319 --> 00:03:03,599
goal is to

89
00:03:00,959 --> 00:03:04,480
pretty much simplify all this and give

90
00:03:03,599 --> 00:03:06,879
you an overview

91
00:03:04,480 --> 00:03:10,640
so at the end you could you know work

92
00:03:06,879 --> 00:03:10,640
through one yourself and learn it

93
00:03:10,959 --> 00:03:15,120
i'll start off with this question what

94
00:03:13,040 --> 00:03:16,159
does a inkjet printer and a gopro have

95
00:03:15,120 --> 00:03:18,720
in common

96
00:03:16,159 --> 00:03:20,480
as most of us know that when we go out

97
00:03:18,720 --> 00:03:22,560
to buying jet cartridges

98
00:03:20,480 --> 00:03:24,000
there's some kind of a technological

99
00:03:22,560 --> 00:03:27,040
prevention measure

100
00:03:24,000 --> 00:03:28,879
that is put into the actual

101
00:03:27,040 --> 00:03:31,519
cartridge itself that prevents a third

102
00:03:28,879 --> 00:03:33,840
party from making these cartridges

103
00:03:31,519 --> 00:03:37,040
likewise gopro has introduced with the

104
00:03:33,840 --> 00:03:39,360
gopro hero 5 on one of these tpms

105
00:03:37,040 --> 00:03:40,879
that prevented us from making a third

106
00:03:39,360 --> 00:03:41,760
party you know accessories for the

107
00:03:40,879 --> 00:03:43,599
cameras

108
00:03:41,760 --> 00:03:45,599
so obviously as a little bit of a

109
00:03:43,599 --> 00:03:47,839
reverse engineer and hacker

110
00:03:45,599 --> 00:03:50,159
i wanted to figure out how to circumvent

111
00:03:47,840 --> 00:03:53,280
these measures

112
00:03:50,159 --> 00:03:55,840
well how do we circumvent this tpm

113
00:03:53,280 --> 00:03:58,319
now the the easy way is just to find the

114
00:03:55,840 --> 00:03:59,920
security enclave and break into it and

115
00:03:58,319 --> 00:04:01,280
dump the keys and then from there we're

116
00:03:59,920 --> 00:04:02,798
going to do something and we're going to

117
00:04:01,280 --> 00:04:06,319
profit

118
00:04:02,799 --> 00:04:09,040
well that sounds like really easy in

119
00:04:06,319 --> 00:04:09,920
theory but it's really pain in the butt

120
00:04:09,040 --> 00:04:11,519
to do it

121
00:04:09,920 --> 00:04:13,518
in the real world obviously these

122
00:04:11,519 --> 00:04:14,239
security enclaves they're the first word

123
00:04:13,519 --> 00:04:17,918
is security

124
00:04:14,239 --> 00:04:20,320
and there is a lot of security trying to

125
00:04:17,918 --> 00:04:23,680
prevent people from dumping these fees

126
00:04:20,320 --> 00:04:24,880
so that's our whole goal today

127
00:04:23,680 --> 00:04:28,400
our goal at the end of the day is to

128
00:04:24,880 --> 00:04:30,560
basically dump the security on caves

129
00:04:28,400 --> 00:04:31,758
contents and hopefully reveal the keys

130
00:04:30,560 --> 00:04:34,960
that are used to

131
00:04:31,759 --> 00:04:37,040
to do this tpm we found out after taking

132
00:04:34,960 --> 00:04:37,919
apart the the camera that is based upon

133
00:04:37,040 --> 00:04:40,960
a microchip

134
00:04:37,919 --> 00:04:42,799
samd 21 that used to be atmel so i use

135
00:04:40,960 --> 00:04:45,039
those names interchangeably

136
00:04:42,800 --> 00:04:47,360
the part is uh very small it's 2.8

137
00:04:45,040 --> 00:04:49,280
millimeters by 2.5 millimeters

138
00:04:47,360 --> 00:04:50,800
and you could actually see it on the

139
00:04:49,280 --> 00:04:53,039
bottom here that you could

140
00:04:50,800 --> 00:04:54,000
you could see like the dye that's that's

141
00:04:53,040 --> 00:04:57,440
uh through the

142
00:04:54,000 --> 00:05:00,160
the actual wl csp

143
00:04:57,440 --> 00:05:01,360
encasing here it's a pga part that gets

144
00:05:00,160 --> 00:05:02,960
flipped around and gets soldered on the

145
00:05:01,360 --> 00:05:04,639
board and the back side looks like that

146
00:05:02,960 --> 00:05:06,239
black spot there

147
00:05:04,639 --> 00:05:07,840
attack surface wise it really had a

148
00:05:06,240 --> 00:05:10,639
small attack surface it had

149
00:05:07,840 --> 00:05:12,239
only two i scored c buses no and then

150
00:05:10,639 --> 00:05:15,520
what's called an sdq

151
00:05:12,240 --> 00:05:15,840
which is a bus one wire protocol to talk

152
00:05:15,520 --> 00:05:19,120
to

153
00:05:15,840 --> 00:05:22,960
batteries to to gauge their their health

154
00:05:19,120 --> 00:05:22,960
it has no uart and no usb

155
00:05:23,360 --> 00:05:27,440
so and and let's see like we're going to

156
00:05:25,680 --> 00:05:29,840
attack this let's attack this as a

157
00:05:27,440 --> 00:05:30,560
as a hacker or you know as a company

158
00:05:29,840 --> 00:05:33,198
doing some

159
00:05:30,560 --> 00:05:34,080
security research on it and all the

160
00:05:33,199 --> 00:05:36,160
times

161
00:05:34,080 --> 00:05:37,359
this is the flow that many of us will go

162
00:05:36,160 --> 00:05:38,800
through uh

163
00:05:37,360 --> 00:05:40,720
we'll look at the update we'll see how

164
00:05:38,800 --> 00:05:41,840
it updates and unfortunately we found

165
00:05:40,720 --> 00:05:44,960
out that it's encrypted

166
00:05:41,840 --> 00:05:46,159
so a little bit of a failure there

167
00:05:44,960 --> 00:05:48,080
then it will go through like the

168
00:05:46,160 --> 00:05:50,000
interface see maybe there's a debug

169
00:05:48,080 --> 00:05:52,800
command that they left into

170
00:05:50,000 --> 00:05:54,080
a lot of times people will left a lot of

171
00:05:52,800 --> 00:05:56,160
times engineers will leave

172
00:05:54,080 --> 00:05:58,240
you know debug commands on the earlier

173
00:05:56,160 --> 00:06:00,400
versions before they realize like oh

174
00:05:58,240 --> 00:06:01,759
shoot i shouldn't have done that so it's

175
00:06:00,400 --> 00:06:02,719
very easy to exploit those type of

176
00:06:01,759 --> 00:06:06,240
things

177
00:06:02,720 --> 00:06:08,000
uh moving on

178
00:06:06,240 --> 00:06:09,919
a lot of times nowadays we'll write

179
00:06:08,000 --> 00:06:11,840
fuzzers which basically just tries a

180
00:06:09,919 --> 00:06:14,240
whole bunch of different combinations

181
00:06:11,840 --> 00:06:15,919
and see if we can't make this crash

182
00:06:14,240 --> 00:06:17,280
and if we make it crash then we know

183
00:06:15,919 --> 00:06:18,639
that we've hit something that we weren't

184
00:06:17,280 --> 00:06:20,400
supposed to hit

185
00:06:18,639 --> 00:06:22,720
and you know kind of iterate through

186
00:06:20,400 --> 00:06:24,719
that and try to find a method of

187
00:06:22,720 --> 00:06:26,560
extracting the the firmware out of these

188
00:06:24,720 --> 00:06:29,280
devices

189
00:06:26,560 --> 00:06:30,720
uh continuing on when that failed you we

190
00:06:29,280 --> 00:06:31,520
learned how the updates occurred okay

191
00:06:30,720 --> 00:06:34,240
it's encrypted

192
00:06:31,520 --> 00:06:36,240
how is encrypted now there's ways of

193
00:06:34,240 --> 00:06:38,080
looking through that and seeing

194
00:06:36,240 --> 00:06:40,240
what kind of encryption it's using and

195
00:06:38,080 --> 00:06:43,440
perhaps working through

196
00:06:40,240 --> 00:06:44,319
some development nodes or app notes that

197
00:06:43,440 --> 00:06:48,400
companies

198
00:06:44,319 --> 00:06:50,720
push out and figure out you know maybe

199
00:06:48,400 --> 00:06:52,560
they use the

200
00:06:50,720 --> 00:06:54,800
the default password type of thing and

201
00:06:52,560 --> 00:06:56,319
try to decrypt it all that way

202
00:06:54,800 --> 00:06:58,160
and of course that didn't work for our

203
00:06:56,319 --> 00:07:00,000
our solution here

204
00:06:58,160 --> 00:07:02,080
and then we go even further we we take

205
00:07:00,000 --> 00:07:04,240
apart the board and we'll we'll see if

206
00:07:02,080 --> 00:07:06,080
like the software debug port is unlocked

207
00:07:04,240 --> 00:07:08,080
they didn't send a

208
00:07:06,080 --> 00:07:09,120
code protect key or bin or whatever they

209
00:07:08,080 --> 00:07:11,440
call the particular part

210
00:07:09,120 --> 00:07:12,400
calls it or maybe there's a debug uart

211
00:07:11,440 --> 00:07:14,639
that was left

212
00:07:12,400 --> 00:07:16,479
unlocked or maybe there's some kind of

213
00:07:14,639 --> 00:07:20,319
jtag exploit

214
00:07:16,479 --> 00:07:23,758
uh that is less vulnerable

215
00:07:20,319 --> 00:07:25,840
and then finally you know and similarly

216
00:07:23,759 --> 00:07:27,440
we would research some vulnerabilities

217
00:07:25,840 --> 00:07:29,119
that the host ic has

218
00:07:27,440 --> 00:07:30,800
or the host microcontroller has and

219
00:07:29,120 --> 00:07:31,520
there's there's a paratha of these out

220
00:07:30,800 --> 00:07:33,599
there

221
00:07:31,520 --> 00:07:35,599
where companies have messed up their

222
00:07:33,599 --> 00:07:36,479
code protection schemes and we're easily

223
00:07:35,599 --> 00:07:39,840
able to

224
00:07:36,479 --> 00:07:42,880
defeat those so that's kind of the uh

225
00:07:39,840 --> 00:07:44,878
the where i was at uh and then

226
00:07:42,880 --> 00:07:46,479
more or less was like you know what this

227
00:07:44,879 --> 00:07:48,000
is taking too long and i don't really

228
00:07:46,479 --> 00:07:50,639
need to do this

229
00:07:48,000 --> 00:07:52,240
and i put it back and nonetheless i

230
00:07:50,639 --> 00:07:55,599
failed it and

231
00:07:52,240 --> 00:07:55,599
so i put this off to the side

232
00:07:55,840 --> 00:08:00,799
and then well then covet hit and i was

233
00:07:59,199 --> 00:08:02,319
home a lot more than i expected to be

234
00:08:00,800 --> 00:08:04,319
like a lot of us

235
00:08:02,319 --> 00:08:05,759
and i was like man i saw this board on

236
00:08:04,319 --> 00:08:06,879
the side of my desk that's been

237
00:08:05,759 --> 00:08:08,560
collecting dust and like

238
00:08:06,879 --> 00:08:10,800
i've always wanted to be able to extract

239
00:08:08,560 --> 00:08:11,199
these keys let's uh let's learn

240
00:08:10,800 --> 00:08:13,840
something

241
00:08:11,199 --> 00:08:14,639
with all this extra time and uh let's

242
00:08:13,840 --> 00:08:17,119
let's learn how

243
00:08:14,639 --> 00:08:18,160
to implement side channel attacks now

244
00:08:17,120 --> 00:08:20,639
there's a lot of sideshow

245
00:08:18,160 --> 00:08:22,400
attacks out there there's timing attacks

246
00:08:20,639 --> 00:08:24,240
uh which i think a lot of people are

247
00:08:22,400 --> 00:08:26,719
familiar with there's vulture voltage

248
00:08:24,240 --> 00:08:28,879
glitching attacks which is basically

249
00:08:26,720 --> 00:08:30,960
you know hitting the part on the head by

250
00:08:28,879 --> 00:08:32,719
uh bringing the voltage level down

251
00:08:30,960 --> 00:08:34,478
really quick and a little spike and

252
00:08:32,719 --> 00:08:37,200
basically the the part just skips

253
00:08:34,479 --> 00:08:39,680
it skips a beat uh that didn't work on

254
00:08:37,200 --> 00:08:42,519
that ml sam d21

255
00:08:39,679 --> 00:08:44,399
so then we had you know we could do a

256
00:08:42,519 --> 00:08:47,519
electromagnetic fault injection

257
00:08:44,399 --> 00:08:49,600
which is basically um just being

258
00:08:47,519 --> 00:08:51,120
bringing a giant emp pole so you can

259
00:08:49,600 --> 00:08:53,279
think of and that

260
00:08:51,120 --> 00:08:55,040
makes the parts uh you know skip a beat

261
00:08:53,279 --> 00:08:57,040
also

262
00:08:55,040 --> 00:08:58,399
the only problem about that is it's

263
00:08:57,040 --> 00:08:59,920
fairly expensive the tools

264
00:08:58,399 --> 00:09:01,760
cost about thirty eight hundred dollars

265
00:08:59,920 --> 00:09:04,160
to to to do

266
00:09:01,760 --> 00:09:06,640
uh electromagnetic fault injections or

267
00:09:04,160 --> 00:09:08,560
emf by

268
00:09:06,640 --> 00:09:09,920
side channel attacks so that was like

269
00:09:08,560 --> 00:09:12,079
off the table

270
00:09:09,920 --> 00:09:13,360
but what was on the table was a power

271
00:09:12,080 --> 00:09:15,600
analysis attack

272
00:09:13,360 --> 00:09:16,399
and that's uh what we ended up doing and

273
00:09:15,600 --> 00:09:19,600
was

274
00:09:16,399 --> 00:09:23,040
able to figure out the the keys by this

275
00:09:19,600 --> 00:09:25,200
this particular attack what is a power

276
00:09:23,040 --> 00:09:26,800
analysis side channel attack

277
00:09:25,200 --> 00:09:29,040
basically all it is is we're going to be

278
00:09:26,800 --> 00:09:31,599
extracting the the key

279
00:09:29,040 --> 00:09:34,560
by monitoring the power we're using

280
00:09:31,600 --> 00:09:36,720
during decryption

281
00:09:34,560 --> 00:09:38,160
it seems pretty far-fetched but in

282
00:09:36,720 --> 00:09:41,279
actuality it works

283
00:09:38,160 --> 00:09:42,560
um a lot of people immediately are like

284
00:09:41,279 --> 00:09:43,600
there's so much stuff going on in these

285
00:09:42,560 --> 00:09:45,839
microcontrollers

286
00:09:43,600 --> 00:09:47,680
at once and there is no way that we're

287
00:09:45,839 --> 00:09:48,640
going to be able to extract at a certain

288
00:09:47,680 --> 00:09:51,199
time

289
00:09:48,640 --> 00:09:52,480
the the power used and know what the key

290
00:09:51,200 --> 00:09:54,880
is from that and you know

291
00:09:52,480 --> 00:09:56,560
it's it's fiction there's no way but uh

292
00:09:54,880 --> 00:09:57,760
honestly i've done this myself and it

293
00:09:56,560 --> 00:10:00,719
does work

294
00:09:57,760 --> 00:10:02,160
and i'll show you how this works in

295
00:10:00,720 --> 00:10:03,200
order to show you that uh the flow that

296
00:10:02,160 --> 00:10:04,000
i'm going to be following is i want to

297
00:10:03,200 --> 00:10:07,040
give you a little bit

298
00:10:04,000 --> 00:10:09,040
about a aes and more specifically what

299
00:10:07,040 --> 00:10:12,000
parts of it we need to know for

300
00:10:09,040 --> 00:10:13,920
a side channel attack um i'll explain

301
00:10:12,000 --> 00:10:15,279
hemming weight

302
00:10:13,920 --> 00:10:16,719
give you a little bit about the circuit

303
00:10:15,279 --> 00:10:17,360
analysis that we're going to need to

304
00:10:16,720 --> 00:10:20,959
know to

305
00:10:17,360 --> 00:10:22,320
implement this and how the park

306
00:10:20,959 --> 00:10:24,079
works on the inside the market

307
00:10:22,320 --> 00:10:25,600
controllers actually work with

308
00:10:24,079 --> 00:10:28,479
information

309
00:10:25,600 --> 00:10:29,920
and at the end i will give you how i

310
00:10:28,480 --> 00:10:31,600
implemented this attack in the real

311
00:10:29,920 --> 00:10:33,920
world

312
00:10:31,600 --> 00:10:35,920
here's my aes refresher for you all if

313
00:10:33,920 --> 00:10:37,360
we uh start here we work for mario it's

314
00:10:35,920 --> 00:10:38,479
so easy like here you got it okay and

315
00:10:37,360 --> 00:10:41,040
we're done

316
00:10:38,480 --> 00:10:42,240
uh no no really this is uh this is not

317
00:10:41,040 --> 00:10:44,959
my refresher

318
00:10:42,240 --> 00:10:45,600
but uh aes is quite uh it's simple in

319
00:10:44,959 --> 00:10:47,119
concept

320
00:10:45,600 --> 00:10:49,279
i think a lot of people put a little bit

321
00:10:47,120 --> 00:10:51,519
too much a math background

322
00:10:49,279 --> 00:10:54,560
when they're teaching it and uh i'm

323
00:10:51,519 --> 00:10:58,240
going to try to simplify it for you guys

324
00:10:54,560 --> 00:10:59,518
let's simplify the aes decryption method

325
00:10:58,240 --> 00:11:02,800
we're going to start with some encrypted

326
00:10:59,519 --> 00:11:04,399
data and then uh that encrypted data

327
00:11:02,800 --> 00:11:06,240
it's it's gonna we're gonna be working

328
00:11:04,399 --> 00:11:09,279
on 16 byte blocks at a time

329
00:11:06,240 --> 00:11:11,040
okay so on each byte

330
00:11:09,279 --> 00:11:12,640
we're going to uh one byte at a time

331
00:11:11,040 --> 00:11:14,399
we're going to add this round key

332
00:11:12,640 --> 00:11:16,399
which all that is doing is we're going

333
00:11:14,399 --> 00:11:16,800
to take our key and we're going to zoro

334
00:11:16,399 --> 00:11:19,120
that

335
00:11:16,800 --> 00:11:19,839
with uh the encrypted data so each byte

336
00:11:19,120 --> 00:11:22,640
at a time

337
00:11:19,839 --> 00:11:23,440
16 bytes in this round key and 16 bytes

338
00:11:22,640 --> 00:11:26,560
of data

339
00:11:23,440 --> 00:11:28,560
we're going to absorb that um each

340
00:11:26,560 --> 00:11:29,599
each location with the the corresponding

341
00:11:28,560 --> 00:11:31,839
location

342
00:11:29,600 --> 00:11:33,519
of encrypted data okay that's going to

343
00:11:31,839 --> 00:11:36,880
uh result in a ray

344
00:11:33,519 --> 00:11:38,240
of 16 bytes and in that ray we're just

345
00:11:36,880 --> 00:11:40,240
going to shift things around

346
00:11:38,240 --> 00:11:41,680
in this inverse shift rounds key we're

347
00:11:40,240 --> 00:11:42,720
not doing any changing to the numbers

348
00:11:41,680 --> 00:11:44,239
we're just going to

349
00:11:42,720 --> 00:11:46,399
you know shift around its location in

350
00:11:44,240 --> 00:11:48,160
that array from there

351
00:11:46,399 --> 00:11:49,760
we're going to take the the data and

352
00:11:48,160 --> 00:11:51,439
we'll talk a little bit more about this

353
00:11:49,760 --> 00:11:53,279
and we're going to you know look up the

354
00:11:51,440 --> 00:11:53,839
data in that array and substitute it

355
00:11:53,279 --> 00:11:56,880
with

356
00:11:53,839 --> 00:11:59,920
a different value from a lookup table

357
00:11:56,880 --> 00:12:03,519
the lookup table is just 256 bytes long

358
00:11:59,920 --> 00:12:06,719
and so each value each byte value has a

359
00:12:03,519 --> 00:12:07,680
corresponding result of in this what's

360
00:12:06,720 --> 00:12:10,880
called an inverse

361
00:12:07,680 --> 00:12:12,319
s by box lookup table

362
00:12:10,880 --> 00:12:13,920
again we're going to continue this flow

363
00:12:12,320 --> 00:12:14,800
we're going to add another round key to

364
00:12:13,920 --> 00:12:18,240
it

365
00:12:14,800 --> 00:12:20,959
uh and then we're going to inverse do a

366
00:12:18,240 --> 00:12:22,000
process called inverse mixed columns and

367
00:12:20,959 --> 00:12:24,319
we're going to be doing this

368
00:12:22,000 --> 00:12:25,360
9 times on the 10th time we're going to

369
00:12:24,320 --> 00:12:27,839
spit it out and we're going to have

370
00:12:25,360 --> 00:12:29,519
decrypted data

371
00:12:27,839 --> 00:12:32,000
so this is what it looks like for aes

372
00:12:29,519 --> 00:12:34,720
128. i'm going to rinse and repeat it

373
00:12:32,000 --> 00:12:34,720
for 10 times

374
00:12:35,040 --> 00:12:39,680
oh the next thing we're going to talk

375
00:12:37,040 --> 00:12:42,000
about is the key schedule

376
00:12:39,680 --> 00:12:44,399
let's say i have a key of all zeros okay

377
00:12:42,000 --> 00:12:46,160
it's 16 bytes key of all zeros

378
00:12:44,399 --> 00:12:47,519
and we're talking about aes 128 so we're

379
00:12:46,160 --> 00:12:50,319
going to have 10 rounds here

380
00:12:47,519 --> 00:12:51,279
okay in order to calculate the key

381
00:12:50,320 --> 00:12:52,880
schedule

382
00:12:51,279 --> 00:12:54,800
we're going to do some post-processing

383
00:12:52,880 --> 00:12:57,120
to this key the first

384
00:12:54,800 --> 00:12:58,959
round the key is going to be itself okay

385
00:12:57,120 --> 00:12:59,920
the second round it's you know slightly

386
00:12:58,959 --> 00:13:01,839
different

387
00:12:59,920 --> 00:13:03,839
and as we follow through all these

388
00:13:01,839 --> 00:13:05,440
rounds until round 10

389
00:13:03,839 --> 00:13:07,360
we're going to have the corresponding

390
00:13:05,440 --> 00:13:10,320
what we call the round 10

391
00:13:07,360 --> 00:13:10,560
key schedule and we can see here this is

392
00:13:10,320 --> 00:13:13,680
a

393
00:13:10,560 --> 00:13:14,800
b4 ef 5b cb blah blah blah blah blah

394
00:13:13,680 --> 00:13:18,560
blah doesn't matter

395
00:13:14,800 --> 00:13:18,560
so that's the round 10 key schedule

396
00:13:18,880 --> 00:13:22,800
okay so that s box let's just really

397
00:13:20,560 --> 00:13:23,359
touch base with that uh we found key

398
00:13:22,800 --> 00:13:25,439
schedule

399
00:13:23,360 --> 00:13:26,720
let's say our our output of everything

400
00:13:25,440 --> 00:13:30,880
was uh let's say

401
00:13:26,720 --> 00:13:32,639
b4 right so b four would be the c6 here

402
00:13:30,880 --> 00:13:34,000
that's what that's all this s box

403
00:13:32,639 --> 00:13:38,079
inverse s box is

404
00:13:34,000 --> 00:13:41,519
it's a lookup table super c super easy

405
00:13:38,079 --> 00:13:42,399
okay so aes for uh side channel text is

406
00:13:41,519 --> 00:13:45,519
very easy

407
00:13:42,399 --> 00:13:47,040
we're going to start with our our um

408
00:13:45,519 --> 00:13:48,639
we'll start with the round key okay

409
00:13:47,040 --> 00:13:49,519
let's let's all just do this at a byte

410
00:13:48,639 --> 00:13:52,320
at a time

411
00:13:49,519 --> 00:13:54,560
uh byte zero we have round key uh of

412
00:13:52,320 --> 00:13:57,600
zero which was b4 let's say

413
00:13:54,560 --> 00:14:00,800
was it bf bf uh yeah before

414
00:13:57,600 --> 00:14:01,920
okay and we're gonna take input somehow

415
00:14:00,800 --> 00:14:03,760
in the system we're going to

416
00:14:01,920 --> 00:14:06,160
we're going to put input into it okay

417
00:14:03,760 --> 00:14:07,199
we're going to absorb that data

418
00:14:06,160 --> 00:14:09,199
and then we're going to have an output

419
00:14:07,199 --> 00:14:09,839
of that zor we're going to shove that

420
00:14:09,199 --> 00:14:14,319
into this

421
00:14:09,839 --> 00:14:17,440
gives it as the index to the to the

422
00:14:14,320 --> 00:14:20,399
s box the inverse s box and then we're

423
00:14:17,440 --> 00:14:22,560
gonna get some result out

424
00:14:20,399 --> 00:14:23,920
a lot of people that uh that know aes

425
00:14:22,560 --> 00:14:27,199
are like hey trunk you're

426
00:14:23,920 --> 00:14:28,719
kind of missing a step aren't you yes

427
00:14:27,199 --> 00:14:30,319
uh this little guy right here this

428
00:14:28,720 --> 00:14:32,160
inverse shift rounds

429
00:14:30,320 --> 00:14:34,000
for side channel attacks we don't really

430
00:14:32,160 --> 00:14:36,319
care we really don't care

431
00:14:34,000 --> 00:14:37,040
um and i'll show you why in a little bit

432
00:14:36,320 --> 00:14:37,920
but

433
00:14:37,040 --> 00:14:40,160
because we're dealing with the

434
00:14:37,920 --> 00:14:42,319
correlation of the data

435
00:14:40,160 --> 00:14:43,360
we don't really care in where in time

436
00:14:42,320 --> 00:14:46,959
this happens we just

437
00:14:43,360 --> 00:14:49,360
you know care that it happens so we

438
00:14:46,959 --> 00:14:50,079
preclude this or we we ignore this step

439
00:14:49,360 --> 00:14:52,480
in aes

440
00:14:50,079 --> 00:14:54,000
when we're doing our our side channel

441
00:14:52,480 --> 00:14:56,399
attack so don't worry about that little

442
00:14:54,000 --> 00:14:56,399
guy there

443
00:14:57,519 --> 00:15:01,360
now that we're all aes experts let's

444
00:14:59,600 --> 00:15:02,639
dive into the power analysis part of the

445
00:15:01,360 --> 00:15:04,720
attack

446
00:15:02,639 --> 00:15:06,240
uh first let's let's take a look at what

447
00:15:04,720 --> 00:15:09,440
we're actually working on

448
00:15:06,240 --> 00:15:10,959
this is the microchip sam d21 and this

449
00:15:09,440 --> 00:15:12,079
is basically the block diagram of the

450
00:15:10,959 --> 00:15:13,518
whole system

451
00:15:12,079 --> 00:15:15,439
we're going to be focusing more or less

452
00:15:13,519 --> 00:15:18,959
on this top area here

453
00:15:15,440 --> 00:15:21,279
the cortex m0 plus is actually about new

454
00:15:18,959 --> 00:15:22,479
architecture so it's got a shared high

455
00:15:21,279 --> 00:15:24,480
speed data bus

456
00:15:22,480 --> 00:15:26,079
and we'll see this as you know the data

457
00:15:24,480 --> 00:15:28,320
from know ram is going to cross

458
00:15:26,079 --> 00:15:30,319
across go across this high speed data

459
00:15:28,320 --> 00:15:33,440
bus the data from

460
00:15:30,320 --> 00:15:34,880
flash internal flash or they call it nvm

461
00:15:33,440 --> 00:15:36,560
likewise it's going to go across this

462
00:15:34,880 --> 00:15:38,800
bus so there's some kind of

463
00:15:36,560 --> 00:15:40,000
caching in this cortex m0 they don't

464
00:15:38,800 --> 00:15:42,160
really break it out here

465
00:15:40,000 --> 00:15:46,079
in this diagram there's also going to be

466
00:15:42,160 --> 00:15:49,279
the registers like r0 through whatever

467
00:15:46,079 --> 00:15:52,000
and more or less what we

468
00:15:49,279 --> 00:15:52,639
our concern is every time we read or

469
00:15:52,000 --> 00:15:55,839
write

470
00:15:52,639 --> 00:15:57,120
from this bus

471
00:15:55,839 --> 00:16:00,480
you know obviously there's going to be

472
00:15:57,120 --> 00:16:03,040
some power that's necessary to do that

473
00:16:00,480 --> 00:16:04,720
now the basis of power analysis is when

474
00:16:03,040 --> 00:16:07,120
we do that read or write

475
00:16:04,720 --> 00:16:09,199
the power required is going to be

476
00:16:07,120 --> 00:16:11,120
proportional to the data or reader

477
00:16:09,199 --> 00:16:14,079
writing on the bus

478
00:16:11,120 --> 00:16:15,600
um pretty nifty stuff so let's say for

479
00:16:14,079 --> 00:16:17,359
instance i'm going to be

480
00:16:15,600 --> 00:16:18,720
writing into the sram i'm going to write

481
00:16:17,360 --> 00:16:20,399
like all these

482
00:16:18,720 --> 00:16:22,000
okay that's going to use a certain

483
00:16:20,399 --> 00:16:24,160
amount of power to do that

484
00:16:22,000 --> 00:16:26,160
now if i go ahead and i write all zeros

485
00:16:24,160 --> 00:16:27,199
there it's going to be using a different

486
00:16:26,160 --> 00:16:31,040
amount of power

487
00:16:27,199 --> 00:16:34,000
okay likewise with uh reads and writes

488
00:16:31,040 --> 00:16:35,839
and also similarly similarly when i'm

489
00:16:34,000 --> 00:16:37,600
reading writing into ran

490
00:16:35,839 --> 00:16:38,959
uh the registers is going to be the same

491
00:16:37,600 --> 00:16:40,639
way that it's going to take a certain

492
00:16:38,959 --> 00:16:43,920
amount of power

493
00:16:40,639 --> 00:16:46,560
so the power analysis basis uh

494
00:16:43,920 --> 00:16:46,959
is is that it's just that the power is

495
00:16:46,560 --> 00:16:49,119
gonna

496
00:16:46,959 --> 00:16:50,880
that is needed to do loaded source is

497
00:16:49,120 --> 00:16:53,360
going to be proportional to the data

498
00:16:50,880 --> 00:16:53,360
itself

499
00:16:53,519 --> 00:16:56,720
now when you start hearing about power

500
00:16:55,199 --> 00:16:58,719
analysis you'll start hearing terms

501
00:16:56,720 --> 00:17:01,120
called dpa and cpa

502
00:16:58,720 --> 00:17:02,240
that's just really names for the math

503
00:17:01,120 --> 00:17:04,000
used to extract

504
00:17:02,240 --> 00:17:05,599
what the original data is that's going

505
00:17:04,000 --> 00:17:07,599
across these buses

506
00:17:05,599 --> 00:17:09,198
for instance dpa is called differential

507
00:17:07,599 --> 00:17:10,639
power analysis

508
00:17:09,199 --> 00:17:12,640
you can read up on that on your own if

509
00:17:10,640 --> 00:17:15,280
you want to and then cpa

510
00:17:12,640 --> 00:17:17,039
is uh it's going to be extracting these

511
00:17:15,280 --> 00:17:19,760
secrets using correlational

512
00:17:17,039 --> 00:17:23,199
power analysis and that's what we're

513
00:17:19,760 --> 00:17:23,199
going to continue to focus on today

514
00:17:23,760 --> 00:17:28,000
in order to explain correlation power

515
00:17:25,919 --> 00:17:29,120
analysis we have to introduce a concept

516
00:17:28,000 --> 00:17:31,600
called hamming weight

517
00:17:29,120 --> 00:17:32,159
heaving weight is pretty easy to explain

518
00:17:31,600 --> 00:17:34,399
and

519
00:17:32,160 --> 00:17:35,760
generally it's just by example for

520
00:17:34,400 --> 00:17:39,280
instance if we have

521
00:17:35,760 --> 00:17:40,480
the value dd all we do is we buss this

522
00:17:39,280 --> 00:17:43,520
out into binary

523
00:17:40,480 --> 00:17:46,880
and now we have 1 1 0 1 1

524
00:17:43,520 --> 00:17:48,559
1 0 1. now for hearing weight all we're

525
00:17:46,880 --> 00:17:49,200
doing is counting how many ones there

526
00:17:48,559 --> 00:17:52,799
are

527
00:17:49,200 --> 00:17:56,160
one two three four five six

528
00:17:52,799 --> 00:17:59,760
so hemming weight of dd is six

529
00:17:56,160 --> 00:18:01,120
likewise if we have a hex value of zero

530
00:17:59,760 --> 00:18:02,640
the hem and weight of it is just going

531
00:18:01,120 --> 00:18:03,439
to be zero because there's no ones in

532
00:18:02,640 --> 00:18:06,000
this

533
00:18:03,440 --> 00:18:07,679
okay so all we're doing now is we take

534
00:18:06,000 --> 00:18:10,160
out you know all values that a byte

535
00:18:07,679 --> 00:18:12,000
could be from zero to 255

536
00:18:10,160 --> 00:18:13,360
and determine the hemming weight of it

537
00:18:12,000 --> 00:18:15,600
and we'll get uh

538
00:18:13,360 --> 00:18:16,959
basically nine layers of uh hamming

539
00:18:15,600 --> 00:18:20,559
weights where

540
00:18:16,960 --> 00:18:20,559
uh that a number can have

541
00:18:23,520 --> 00:18:27,679
so like we said earlier during a store

542
00:18:26,080 --> 00:18:29,360
the power consumed it's going to

543
00:18:27,679 --> 00:18:32,640
coincide to the data itself

544
00:18:29,360 --> 00:18:34,159
we use the example a a versus 0 0.

545
00:18:32,640 --> 00:18:36,080
the power consumed at that point is

546
00:18:34,160 --> 00:18:38,720
going to be for an aaa

547
00:18:36,080 --> 00:18:40,159
is going to be different than the 0 0.

548
00:18:38,720 --> 00:18:42,720
and

549
00:18:40,160 --> 00:18:43,679
if we're going to if we want to we can

550
00:18:42,720 --> 00:18:45,520
probe

551
00:18:43,679 --> 00:18:47,760
right at this this particular time right

552
00:18:45,520 --> 00:18:51,039
after the inverse uh substitution by

553
00:18:47,760 --> 00:18:53,760
occurs and we can come up with like

554
00:18:51,039 --> 00:18:55,360
some power usage at this particular time

555
00:18:53,760 --> 00:18:57,440
we're gonna take that power usage and

556
00:18:55,360 --> 00:19:00,799
then we're going to convert it into

557
00:18:57,440 --> 00:19:03,120
one of nine hanging weight buckets

558
00:19:00,799 --> 00:19:04,720
okay and this is going to tell us a

559
00:19:03,120 --> 00:19:06,479
little bit about this information

560
00:19:04,720 --> 00:19:08,640
now we have some quantifiable

561
00:19:06,480 --> 00:19:10,960
information about the data

562
00:19:08,640 --> 00:19:13,280
that came out of this substitution byte

563
00:19:10,960 --> 00:19:13,280
block

564
00:19:14,960 --> 00:19:18,320
so what do we do with all this well what

565
00:19:17,120 --> 00:19:19,678
we're going to do is we're going to make

566
00:19:18,320 --> 00:19:22,240
a lot of gases

567
00:19:19,679 --> 00:19:23,520
check this out uh obviously we just

568
00:19:22,240 --> 00:19:25,120
talked about the hamming weight

569
00:19:23,520 --> 00:19:26,879
coming out of this okay so we know

570
00:19:25,120 --> 00:19:28,879
something about the signal we know

571
00:19:26,880 --> 00:19:32,000
something about the output

572
00:19:28,880 --> 00:19:33,039
uh we also know the input and why do we

573
00:19:32,000 --> 00:19:35,200
know the input

574
00:19:33,039 --> 00:19:36,640
look the manufacturer is going to have

575
00:19:35,200 --> 00:19:38,880
to

576
00:19:36,640 --> 00:19:40,400
push and update to you that means that

577
00:19:38,880 --> 00:19:43,039
you're going to be able to

578
00:19:40,400 --> 00:19:44,000
somehow push this update to into the

579
00:19:43,039 --> 00:19:46,000
victim

580
00:19:44,000 --> 00:19:47,760
so we're going to be in control of this

581
00:19:46,000 --> 00:19:50,559
input here

582
00:19:47,760 --> 00:19:52,000
we don't know and we're looking for this

583
00:19:50,559 --> 00:19:55,120
the round 10 key let's say

584
00:19:52,000 --> 00:19:55,520
byte zero so we know the input we can

585
00:19:55,120 --> 00:19:58,239
guess

586
00:19:55,520 --> 00:19:59,760
this is only 256 guesses here okay we

587
00:19:58,240 --> 00:20:02,320
can guess this value

588
00:19:59,760 --> 00:20:05,039
we know the input we go and zord we look

589
00:20:02,320 --> 00:20:07,120
it up in the xbox inverse xbox

590
00:20:05,039 --> 00:20:08,320
we come with an output we convert that

591
00:20:07,120 --> 00:20:10,719
to hemming weight

592
00:20:08,320 --> 00:20:12,000
and then we see if that hamming weight

593
00:20:10,720 --> 00:20:15,760
with the hemingway we

594
00:20:12,000 --> 00:20:18,799
we've actually got if they correlate

595
00:20:15,760 --> 00:20:21,360
if they actually work um if so

596
00:20:18,799 --> 00:20:24,080
plus one for this if not then you know

597
00:20:21,360 --> 00:20:24,080
we ignore it

598
00:20:24,880 --> 00:20:28,640
that's really neat and all but how do we

599
00:20:27,360 --> 00:20:29,760
automate this

600
00:20:28,640 --> 00:20:31,360
well in order to show you how we

601
00:20:29,760 --> 00:20:32,720
automate this i first want to show you

602
00:20:31,360 --> 00:20:36,399
what we're working on

603
00:20:32,720 --> 00:20:39,840
uh to the left here is is basically our

604
00:20:36,400 --> 00:20:41,760
power trace we grab a pointer

605
00:20:39,840 --> 00:20:43,199
so this is our power trace of probably

606
00:20:41,760 --> 00:20:44,720
about 50 power traces they're all

607
00:20:43,200 --> 00:20:46,159
stacked on top of each other

608
00:20:44,720 --> 00:20:48,720
but what you can make out is you make

609
00:20:46,159 --> 00:20:50,559
out the 16 inverse substitution by

610
00:20:48,720 --> 00:20:52,000
blocks here there's 16 of these little

611
00:20:50,559 --> 00:20:54,399
pulses all along

612
00:20:52,000 --> 00:20:55,520
if we start zooming in you'll start

613
00:20:54,400 --> 00:20:57,280
seeing signals like this

614
00:20:55,520 --> 00:21:00,158
we'll zoom in a little bit more and then

615
00:20:57,280 --> 00:21:02,480
you'll end up with a signal like so

616
00:21:00,159 --> 00:21:03,200
and uh you'll notice how there's these

617
00:21:02,480 --> 00:21:06,559
like

618
00:21:03,200 --> 00:21:07,679
striations i would say of of the power

619
00:21:06,559 --> 00:21:11,280
being used

620
00:21:07,679 --> 00:21:13,600
during a you know one of these

621
00:21:11,280 --> 00:21:14,799
encryption process during the the output

622
00:21:13,600 --> 00:21:17,760
to the inverse

623
00:21:14,799 --> 00:21:19,039
s box function and the reason why i

624
00:21:17,760 --> 00:21:19,600
zoomed on here is because this is

625
00:21:19,039 --> 00:21:22,400
actually

626
00:21:19,600 --> 00:21:23,678
a real world example of you know the

627
00:21:22,400 --> 00:21:26,320
kind of

628
00:21:23,679 --> 00:21:27,120
differential that you'll get there now

629
00:21:26,320 --> 00:21:30,080
that's where the two

630
00:21:27,120 --> 00:21:32,080
different types of side channel power

631
00:21:30,080 --> 00:21:33,199
analysis goes is how to process this

632
00:21:32,080 --> 00:21:36,000
change

633
00:21:33,200 --> 00:21:36,320
we're working on the correlation method

634
00:21:36,000 --> 00:21:38,000
so

635
00:21:36,320 --> 00:21:39,918
there's really a thing called a pearson

636
00:21:38,000 --> 00:21:41,280
correlation coefficient which will allow

637
00:21:39,919 --> 00:21:44,559
us to

638
00:21:41,280 --> 00:21:47,918
basically figure out what the value is

639
00:21:44,559 --> 00:21:49,600
by you know how the data correlates with

640
00:21:47,919 --> 00:21:53,120
each other

641
00:21:49,600 --> 00:21:54,399
and luckily for us is the software will

642
00:21:53,120 --> 00:21:56,479
do it for us

643
00:21:54,400 --> 00:21:57,840
and uh at the end of the day all we're

644
00:21:56,480 --> 00:21:59,760
going to be doing is we're going to be

645
00:21:57,840 --> 00:22:01,439
throwing

646
00:21:59,760 --> 00:22:02,960
you know this power trace into the

647
00:22:01,440 --> 00:22:04,799
software we're going to say what kind of

648
00:22:02,960 --> 00:22:07,919
linguist model we have

649
00:22:04,799 --> 00:22:12,320
and it's going to help us come up with

650
00:22:07,919 --> 00:22:13,760
you know the the the end up keys

651
00:22:12,320 --> 00:22:15,280
i've talked a lot about correlation

652
00:22:13,760 --> 00:22:16,879
without actually giving an explanation

653
00:22:15,280 --> 00:22:19,840
of what it is

654
00:22:16,880 --> 00:22:21,919
correlation is fairly simple it's

655
00:22:19,840 --> 00:22:24,080
basically the relationship

656
00:22:21,919 --> 00:22:25,679
it just says that an input has a

657
00:22:24,080 --> 00:22:29,678
relationship to the output

658
00:22:25,679 --> 00:22:32,159
so if we put a number into this system

659
00:22:29,679 --> 00:22:34,080
if it correlates that means the input

660
00:22:32,159 --> 00:22:38,080
has some kind of relationship to its

661
00:22:34,080 --> 00:22:39,918
output so if we have a correlation of 0

662
00:22:38,080 --> 00:22:41,678
that means the input has no correlation

663
00:22:39,919 --> 00:22:42,559
to the output it has no relationship to

664
00:22:41,679 --> 00:22:45,679
the output

665
00:22:42,559 --> 00:22:48,559
so basically it has you know that number

666
00:22:45,679 --> 00:22:50,240
has nothing to do with the the output uh

667
00:22:48,559 --> 00:22:52,480
as we go in correlation

668
00:22:50,240 --> 00:22:54,000
all the way up to one or negative one uh

669
00:22:52,480 --> 00:22:56,320
today we'll just be taking the absolute

670
00:22:54,000 --> 00:22:57,360
value so it's basically going to go from

671
00:22:56,320 --> 00:23:00,399
zero to one

672
00:22:57,360 --> 00:23:00,959
as we grow in correlation you can see

673
00:23:00,400 --> 00:23:04,880
how

674
00:23:00,960 --> 00:23:06,960
our you know blob of data or you know

675
00:23:04,880 --> 00:23:10,000
becomes our scatter plot here just

676
00:23:06,960 --> 00:23:12,080
becomes more and more like a line

677
00:23:10,000 --> 00:23:13,520
obviously in a real world system we're

678
00:23:12,080 --> 00:23:17,760
never going to have a

679
00:23:13,520 --> 00:23:21,200
pure core well in a real world power

680
00:23:17,760 --> 00:23:21,200
side channel analysis attack

681
00:23:21,280 --> 00:23:24,799
we're not going to have a pure one

682
00:23:22,960 --> 00:23:25,840
correlation it's always going to be

683
00:23:24,799 --> 00:23:27,120
you know there's something else that's

684
00:23:25,840 --> 00:23:28,158
going to happen there's going to be a

685
00:23:27,120 --> 00:23:29,918
bad

686
00:23:28,159 --> 00:23:32,000
sample so we're going to get a

687
00:23:29,919 --> 00:23:33,760
correlation of like you know 0.6 or

688
00:23:32,000 --> 00:23:35,360
something like that which is pretty good

689
00:23:33,760 --> 00:23:37,200
but what ends up happening is you'll

690
00:23:35,360 --> 00:23:39,918
have all the other numbers

691
00:23:37,200 --> 00:23:41,279
having a correlation of let's say 0.2

692
00:23:39,919 --> 00:23:42,480
okay so you have one number that has a

693
00:23:41,279 --> 00:23:43,679
very high correlation

694
00:23:42,480 --> 00:23:45,440
and all the rest of the numbers have a

695
00:23:43,679 --> 00:23:48,000
very low correlation and that's going to

696
00:23:45,440 --> 00:23:51,840
allow us to figure out what our

697
00:23:48,000 --> 00:23:51,840
original key is

698
00:23:53,200 --> 00:23:57,279
so the nice thing is that we have tools

699
00:23:56,400 --> 00:23:59,039
that

700
00:23:57,279 --> 00:24:00,640
are going to be able to process all of

701
00:23:59,039 --> 00:24:02,158
our power traces for us

702
00:24:00,640 --> 00:24:04,320
so this is what it's going to look like

703
00:24:02,159 --> 00:24:05,679
we're going to put our power trace into

704
00:24:04,320 --> 00:24:06,399
this tool we're going to start running

705
00:24:05,679 --> 00:24:08,159
it

706
00:24:06,400 --> 00:24:10,799
and we're going to tell it what kind of

707
00:24:08,159 --> 00:24:12,640
leakage model we want

708
00:24:10,799 --> 00:24:14,320
and pretty much you're going to start

709
00:24:12,640 --> 00:24:15,360
seeing these number pop up now this

710
00:24:14,320 --> 00:24:17,520
happened really quick on

711
00:24:15,360 --> 00:24:18,399
on this particular the part where we're

712
00:24:17,520 --> 00:24:22,158
able to do

713
00:24:18,400 --> 00:24:25,520
very minor amounts of or small amounts

714
00:24:22,159 --> 00:24:27,600
of you know traces and gleam out

715
00:24:25,520 --> 00:24:30,400
eventually what this key is going to be

716
00:24:27,600 --> 00:24:31,279
so you'll see here like we have on byte

717
00:24:30,400 --> 00:24:34,640
zero

718
00:24:31,279 --> 00:24:37,679
we have a key of ea and with the high

719
00:24:34,640 --> 00:24:39,120
this is the uh correlation coefficient

720
00:24:37,679 --> 00:24:42,080
here this point six six two

721
00:24:39,120 --> 00:24:42,959
it's getting nearing one and the next

722
00:24:42,080 --> 00:24:45,520
closest one is

723
00:24:42,960 --> 00:24:47,760
this point three nine four uh you'll

724
00:24:45,520 --> 00:24:49,840
notice that this .394.39

725
00:24:47,760 --> 00:24:51,440
these are all very similar um which

726
00:24:49,840 --> 00:24:52,559
means that this one is to a high degree

727
00:24:51,440 --> 00:24:55,039
of certainty

728
00:24:52,559 --> 00:24:56,559
most likely our byte zero key and if we

729
00:24:55,039 --> 00:24:57,919
go down this row it's going to be like

730
00:24:56,559 --> 00:25:00,399
the same for all of them where

731
00:24:57,919 --> 00:25:01,520
for a high degree of certainty this is

732
00:25:00,400 --> 00:25:04,559
our key

733
00:25:01,520 --> 00:25:05,120
so believe it or not here with in 150

734
00:25:04,559 --> 00:25:08,399
traces

735
00:25:05,120 --> 00:25:10,559
we were able to figure out um the key

736
00:25:08,400 --> 00:25:12,720
from this leakage model which would be

737
00:25:10,559 --> 00:25:16,799
ea 7979

738
00:25:12,720 --> 00:25:20,080
20 blah blah blah and this is the key

739
00:25:16,799 --> 00:25:20,080
the round tense key

740
00:25:21,440 --> 00:25:26,400
you may be asking yourself like how many

741
00:25:24,480 --> 00:25:28,720
like it sounds like a ton of data that

742
00:25:26,400 --> 00:25:30,880
i'm processing through and it is

743
00:25:28,720 --> 00:25:32,080
but luckily our computers are fast so

744
00:25:30,880 --> 00:25:34,240
let's say that we're going to take a

745
00:25:32,080 --> 00:25:35,120
power sample or the power trace that we

746
00:25:34,240 --> 00:25:36,960
just saw

747
00:25:35,120 --> 00:25:38,959
each power trace let's say has 5 000

748
00:25:36,960 --> 00:25:40,400
points in time

749
00:25:38,960 --> 00:25:43,039
now and each point we're going to have

750
00:25:40,400 --> 00:25:44,480
to make 256 guesses

751
00:25:43,039 --> 00:25:46,799
and then we're going to be doing the 16

752
00:25:44,480 --> 00:25:48,799
bytes in aes 128

753
00:25:46,799 --> 00:25:50,960
let's say we are doing like that last

754
00:25:48,799 --> 00:25:53,520
one was only 200 samples but let's

755
00:25:50,960 --> 00:25:54,559
bring it up to like 5 000 samples so if

756
00:25:53,520 --> 00:25:57,440
we do the math there

757
00:25:54,559 --> 00:25:58,080
we're only ending up with one 102

758
00:25:57,440 --> 00:26:02,400
billion

759
00:25:58,080 --> 00:26:03,678
uh basically mathematical competitions

760
00:26:02,400 --> 00:26:05,440
we're going to have to do

761
00:26:03,679 --> 00:26:07,039
in my laptop that took like no time at

762
00:26:05,440 --> 00:26:08,480
all like less than 20 minutes i think

763
00:26:07,039 --> 00:26:11,120
for cracking the

764
00:26:08,480 --> 00:26:13,520
the gopro once i figured out what you

765
00:26:11,120 --> 00:26:15,360
know the process and did all this stuff

766
00:26:13,520 --> 00:26:19,279
going out and that's definitely a lot

767
00:26:15,360 --> 00:26:19,279
smaller than this to the 128th

768
00:26:19,919 --> 00:26:22,960
so yeah we found around 10 keys this is

769
00:26:22,080 --> 00:26:25,279
awesome

770
00:26:22,960 --> 00:26:27,360
and like i said uh two seconds ago it's

771
00:26:25,279 --> 00:26:29,520
invertible so we we found around 10 keys

772
00:26:27,360 --> 00:26:32,799
we're going to invert that to

773
00:26:29,520 --> 00:26:33,760
round zeroes keys from there we're going

774
00:26:32,799 --> 00:26:36,879
to take the update

775
00:26:33,760 --> 00:26:38,799
and we're going to decrypt that from

776
00:26:36,880 --> 00:26:40,400
there i'm going to reverse engineer the

777
00:26:38,799 --> 00:26:43,039
firmware

778
00:26:40,400 --> 00:26:44,240
patch it to allow myself to read out the

779
00:26:43,039 --> 00:26:47,600
the software

780
00:26:44,240 --> 00:26:52,240
read out the tpm keys and

781
00:26:47,600 --> 00:26:54,480
i don't know and hopefully profit yay

782
00:26:52,240 --> 00:26:56,000
wow nice theory bro how how are we going

783
00:26:54,480 --> 00:26:57,279
to implement this

784
00:26:56,000 --> 00:26:58,799
and so that's what i'm going to talk

785
00:26:57,279 --> 00:27:00,080
about next i'm going to talk about the

786
00:26:58,799 --> 00:27:02,080
tools that i used

787
00:27:00,080 --> 00:27:05,279
uh how we input our own data into the

788
00:27:02,080 --> 00:27:07,439
system how do we capture the power trace

789
00:27:05,279 --> 00:27:08,799
what tools we use for that how fast we

790
00:27:07,440 --> 00:27:10,559
need to capture it

791
00:27:08,799 --> 00:27:12,639
and then how do we synchronize it so all

792
00:27:10,559 --> 00:27:15,120
these buckets are in the same spot

793
00:27:12,640 --> 00:27:16,400
and then of course how do we process

794
00:27:15,120 --> 00:27:20,000
this information

795
00:27:16,400 --> 00:27:21,919
once we capture it so if you're planning

796
00:27:20,000 --> 00:27:23,520
on doing any type of side channel attack

797
00:27:21,919 --> 00:27:24,799
you really need to get one of these uh

798
00:27:23,520 --> 00:27:26,559
chip whisperers

799
00:27:24,799 --> 00:27:29,600
the top one here is i think about 60

800
00:27:26,559 --> 00:27:30,960
bucks the bottom one's 260 bucks

801
00:27:29,600 --> 00:27:33,439
and it basically comes with this whole

802
00:27:30,960 --> 00:27:35,039
ecosystem on how to learn

803
00:27:33,440 --> 00:27:37,039
side channel attacks and how to perform

804
00:27:35,039 --> 00:27:38,879
them on your own this is the platform

805
00:27:37,039 --> 00:27:39,200
the one on the bottom the chip whisperer

806
00:27:38,880 --> 00:27:41,360
light

807
00:27:39,200 --> 00:27:43,279
is the platform i use to carry out this

808
00:27:41,360 --> 00:27:45,600
attack on the gopro

809
00:27:43,279 --> 00:27:47,520
it's basically 105 million samples per

810
00:27:45,600 --> 00:27:49,360
second oscilloscope has triggers

811
00:27:47,520 --> 00:27:51,918
it has a clock generator you could throw

812
00:27:49,360 --> 00:27:54,799
in as the input clock into your target

813
00:27:51,919 --> 00:27:55,840
and a serial port as well as a way of

814
00:27:54,799 --> 00:27:59,440
doing some voltage

815
00:27:55,840 --> 00:28:00,959
glitching attacks it's amazing ecosystem

816
00:27:59,440 --> 00:28:04,240
and also it has like

817
00:28:00,960 --> 00:28:06,559
you know all these tutorials on various

818
00:28:04,240 --> 00:28:07,440
attacks uh colin often he i think he did

819
00:28:06,559 --> 00:28:09,039
his phd

820
00:28:07,440 --> 00:28:10,640
using this tool and then ended up

821
00:28:09,039 --> 00:28:12,399
selling it and now he does all these

822
00:28:10,640 --> 00:28:14,159
these training things so if you're

823
00:28:12,399 --> 00:28:15,760
you're in interested in getting trained

824
00:28:14,159 --> 00:28:17,120
up on this uh he has a bunch of courses

825
00:28:15,760 --> 00:28:20,000
and stuff like that

826
00:28:17,120 --> 00:28:21,840
and i highly recommend it i i'm not

827
00:28:20,000 --> 00:28:23,440
sponsored by them but they did send me a

828
00:28:21,840 --> 00:28:25,279
care package after my talk

829
00:28:23,440 --> 00:28:27,120
because i think they were a little bit

830
00:28:25,279 --> 00:28:28,640
taken back by the little board that i

831
00:28:27,120 --> 00:28:30,559
made by the target so you ended up

832
00:28:28,640 --> 00:28:31,200
sending me one of these uh ufo boards

833
00:28:30,559 --> 00:28:34,559
which i'm

834
00:28:31,200 --> 00:28:35,760
definitely very appreciative of so that

835
00:28:34,559 --> 00:28:38,240
again this is the tool that i'm going to

836
00:28:35,760 --> 00:28:40,640
be using for all this and the ecosystem

837
00:28:38,240 --> 00:28:42,640
that i'm going to be using to run this

838
00:28:40,640 --> 00:28:44,799
exploit

839
00:28:42,640 --> 00:28:46,480
knowing the eye system since we're going

840
00:28:44,799 --> 00:28:47,520
to be doing a power analysis side

841
00:28:46,480 --> 00:28:49,760
channel attack

842
00:28:47,520 --> 00:28:50,879
we now need to figure out how to push

843
00:28:49,760 --> 00:28:53,360
data into this

844
00:28:50,880 --> 00:28:55,440
the part so it it will decrypt it or

845
00:28:53,360 --> 00:28:58,158
attempt to decrypt this data

846
00:28:55,440 --> 00:28:59,760
so in the case the gopro what i ended up

847
00:28:58,159 --> 00:29:02,559
doing was i ended up sniffing the

848
00:28:59,760 --> 00:29:05,360
i square c protocol to during the update

849
00:29:02,559 --> 00:29:06,559
i found that it was requiring 144 bytes

850
00:29:05,360 --> 00:29:08,158
at per time

851
00:29:06,559 --> 00:29:09,918
there was a flag at the start that

852
00:29:08,159 --> 00:29:11,279
basically reset the whole process which

853
00:29:09,919 --> 00:29:12,480
helped me out a lot

854
00:29:11,279 --> 00:29:15,279
and this is all done during the

855
00:29:12,480 --> 00:29:16,799
reconstant stage i then found out that

856
00:29:15,279 --> 00:29:19,840
it would be easier

857
00:29:16,799 --> 00:29:22,559
to basically hack this part if i took

858
00:29:19,840 --> 00:29:24,080
the part out of the gopro system itself

859
00:29:22,559 --> 00:29:25,678
there was a lot of other stuff going on

860
00:29:24,080 --> 00:29:26,000
in that system a lot of switch mode

861
00:29:25,679 --> 00:29:27,679
power

862
00:29:26,000 --> 00:29:29,440
supplies and stuff that would make my

863
00:29:27,679 --> 00:29:31,360
life a little bit harder

864
00:29:29,440 --> 00:29:32,799
so i found it's easier to to actually

865
00:29:31,360 --> 00:29:34,320
just pull that part off

866
00:29:32,799 --> 00:29:37,279
make my own circuit board and then

867
00:29:34,320 --> 00:29:40,399
resolder it back onto it

868
00:29:37,279 --> 00:29:44,000
this allowed me to recreate the protocol

869
00:29:40,399 --> 00:29:45,760
and recreate basically make a fake

870
00:29:44,000 --> 00:29:48,080
update process where i'm throwing at

871
00:29:45,760 --> 00:29:49,760
these 144 bytes at a time

872
00:29:48,080 --> 00:29:51,279
and was able to start the first

873
00:29:49,760 --> 00:29:53,279
decryption process

874
00:29:51,279 --> 00:29:54,640
which we would end up sniffing and

875
00:29:53,279 --> 00:29:58,880
creating a power

876
00:29:54,640 --> 00:30:00,960
trace from that from that process

877
00:29:58,880 --> 00:30:02,559
we ended up building up a converter to

878
00:30:00,960 --> 00:30:04,880
help us with the

879
00:30:02,559 --> 00:30:06,399
basics glue logic between the chip

880
00:30:04,880 --> 00:30:08,799
whisperer and our target

881
00:30:06,399 --> 00:30:10,399
this knew the whole update process it

882
00:30:08,799 --> 00:30:11,918
basically converted the 16 bytes the

883
00:30:10,399 --> 00:30:14,320
chip whisperer was sending

884
00:30:11,919 --> 00:30:15,600
us the 16 fake bytes it was sending us

885
00:30:14,320 --> 00:30:17,439
to decrypt

886
00:30:15,600 --> 00:30:19,279
and it and it put it into that whole

887
00:30:17,440 --> 00:30:22,640
protocol that the gopro was

888
00:30:19,279 --> 00:30:24,960
was wanting for an update

889
00:30:22,640 --> 00:30:26,399
blob so basically it was uh asking for

890
00:30:24,960 --> 00:30:28,799
144 bytes

891
00:30:26,399 --> 00:30:29,520
we would expand it to from 16 bytes 144

892
00:30:28,799 --> 00:30:32,639
bytes

893
00:30:29,520 --> 00:30:35,918
add on the headers and send it to the

894
00:30:32,640 --> 00:30:36,320
the gopro the target the victim to start

895
00:30:35,919 --> 00:30:40,240
the

896
00:30:36,320 --> 00:30:41,840
the update process and decrypt this data

897
00:30:40,240 --> 00:30:43,679
what was really nice about this is it

898
00:30:41,840 --> 00:30:45,840
allowed us also to put a

899
00:30:43,679 --> 00:30:47,679
very well timed trigger and throw a

900
00:30:45,840 --> 00:30:49,600
trigger out to our chip whisperer and to

901
00:30:47,679 --> 00:30:50,640
our oscilloscope to capture the power

902
00:30:49,600 --> 00:30:53,120
trace

903
00:30:50,640 --> 00:30:54,000
so if your protocol is not necessary

904
00:30:53,120 --> 00:30:56,559
expect if your

905
00:30:54,000 --> 00:30:58,240
victim is not necessarily expecting

906
00:30:56,559 --> 00:30:59,678
serial data

907
00:30:58,240 --> 00:31:01,919
making a converter like this out of

908
00:30:59,679 --> 00:31:04,480
arduino or whatnot is

909
00:31:01,919 --> 00:31:06,240
something i would highly recommend doing

910
00:31:04,480 --> 00:31:07,600
so how do we measure power

911
00:31:06,240 --> 00:31:09,919
how do we create one of these power

912
00:31:07,600 --> 00:31:11,600
traces well it's pretty easy over

913
00:31:09,919 --> 00:31:12,880
we have a we look at the power that's

914
00:31:11,600 --> 00:31:14,799
going to the system in this case it's

915
00:31:12,880 --> 00:31:17,120
going to be 3.3 volts

916
00:31:14,799 --> 00:31:18,000
and after the bulk cap or whatever

917
00:31:17,120 --> 00:31:21,279
capacitors they have

918
00:31:18,000 --> 00:31:22,960
out there the bypass capacitors we

919
00:31:21,279 --> 00:31:24,480
cut the trace and we're going to add

920
00:31:22,960 --> 00:31:27,600
what's called a shunt resistor to it in

921
00:31:24,480 --> 00:31:27,600
this case it's 10 ohms

922
00:31:28,000 --> 00:31:32,159
and after that we're going to add a

923
00:31:29,760 --> 00:31:33,600
voltage probe this voltage probe and i'm

924
00:31:32,159 --> 00:31:35,919
not going to bore you with the math

925
00:31:33,600 --> 00:31:36,799
but it basically is going to allow us to

926
00:31:35,919 --> 00:31:39,840
to measure the

927
00:31:36,799 --> 00:31:41,120
voltage drop across that resistor and

928
00:31:39,840 --> 00:31:42,720
from there we're going to be able to

929
00:31:41,120 --> 00:31:44,239
figure out the current

930
00:31:42,720 --> 00:31:46,000
and current and power we're going to be

931
00:31:44,240 --> 00:31:49,840
using interchangeably here for

932
00:31:46,000 --> 00:31:52,480
for this discussion so this voltage

933
00:31:49,840 --> 00:31:54,559
probe here is more or less going to be

934
00:31:52,480 --> 00:31:55,519
directly proportional to how much power

935
00:31:54,559 --> 00:31:56,879
the system uses

936
00:31:55,519 --> 00:31:58,640
the measurement here it's going to be

937
00:31:56,880 --> 00:32:01,360
directly proportional to

938
00:31:58,640 --> 00:32:03,360
the power that the the system is using

939
00:32:01,360 --> 00:32:06,879
now if we want to do this over time

940
00:32:03,360 --> 00:32:09,678
if we want for each timer each instance

941
00:32:06,880 --> 00:32:10,080
each instance in t we want to measure

942
00:32:09,679 --> 00:32:12,559
the

943
00:32:10,080 --> 00:32:13,519
the power being used all we do is we use

944
00:32:12,559 --> 00:32:16,000
an oscilloscope

945
00:32:13,519 --> 00:32:17,760
and that will measure um you know at

946
00:32:16,000 --> 00:32:18,880
every acquisition point it's going to

947
00:32:17,760 --> 00:32:21,120
measure what that

948
00:32:18,880 --> 00:32:22,159
that voltage drop is and and therefore

949
00:32:21,120 --> 00:32:26,479
measure

950
00:32:22,159 --> 00:32:26,480
basically the the power curve of the

951
00:32:26,840 --> 00:32:30,480
system

952
00:32:28,080 --> 00:32:32,158
let's see uh what ends up happening in

953
00:32:30,480 --> 00:32:33,919
the real world though

954
00:32:32,159 --> 00:32:35,200
in the real world these microcontrollers

955
00:32:33,919 --> 00:32:37,039
now have a lot of inputs

956
00:32:35,200 --> 00:32:38,559
a lot of power inputs they have i o

957
00:32:37,039 --> 00:32:41,840
power inputs they have

958
00:32:38,559 --> 00:32:44,158
ones for their analog they have you know

959
00:32:41,840 --> 00:32:47,678
basically

960
00:32:44,159 --> 00:32:51,200
a power input for each subsystem

961
00:32:47,679 --> 00:32:51,679
specifically they admiral sam d21 had a

962
00:32:51,200 --> 00:32:53,360
power

963
00:32:51,679 --> 00:32:55,039
what's called a internal voltage

964
00:32:53,360 --> 00:32:58,479
regulator for their

965
00:32:55,039 --> 00:32:59,039
vdd core okay so in order to measure how

966
00:32:58,480 --> 00:33:02,240
much

967
00:32:59,039 --> 00:33:04,158
current or power the the core is using i

968
00:33:02,240 --> 00:33:06,080
had to come up with a solution

969
00:33:04,159 --> 00:33:08,960
and that's where what we did here is we

970
00:33:06,080 --> 00:33:09,760
over drove that vd core to like 1.5

971
00:33:08,960 --> 00:33:11,519
volts

972
00:33:09,760 --> 00:33:13,440
and that shut it down effectively shut

973
00:33:11,519 --> 00:33:16,320
it down and then it was

974
00:33:13,440 --> 00:33:17,200
sourcing the power from this out

975
00:33:16,320 --> 00:33:20,480
external

976
00:33:17,200 --> 00:33:21,360
input now you may be asking yourself

977
00:33:20,480 --> 00:33:23,519
self

978
00:33:21,360 --> 00:33:24,559
you know that's way you know i'm gonna

979
00:33:23,519 --> 00:33:27,600
blow it apart

980
00:33:24,559 --> 00:33:28,879
yeah if it's like very hot out or you

981
00:33:27,600 --> 00:33:31,199
know you're using this in a very

982
00:33:28,880 --> 00:33:32,640
heated temperature you might you know

983
00:33:31,200 --> 00:33:34,720
definitely stress the part but we're not

984
00:33:32,640 --> 00:33:37,039
using it for very long at that

985
00:33:34,720 --> 00:33:39,200
voltage range so it'll be fine so

986
00:33:37,039 --> 00:33:41,039
anyways if i continue on

987
00:33:39,200 --> 00:33:42,640
i i just did the same thing here we

988
00:33:41,039 --> 00:33:43,679
ended up using a little bit bigger shot

989
00:33:42,640 --> 00:33:46,559
resistor

990
00:33:43,679 --> 00:33:47,200
okay and that allowed us to have a

991
00:33:46,559 --> 00:33:49,678
little bit

992
00:33:47,200 --> 00:33:50,960
higher gain of the uh the voltage drop

993
00:33:49,679 --> 00:33:52,960
across it

994
00:33:50,960 --> 00:33:54,320
and also because we wanted a very clean

995
00:33:52,960 --> 00:33:55,600
signal we used what's called a

996
00:33:54,320 --> 00:33:58,000
differential probe

997
00:33:55,600 --> 00:33:59,600
which just basically does the math for

998
00:33:58,000 --> 00:34:00,960
you the difference between the

999
00:33:59,600 --> 00:34:03,039
the vultures on this side versus the

1000
00:34:00,960 --> 00:34:04,080
vultures on this side and that gave us a

1001
00:34:03,039 --> 00:34:06,080
very clean signal

1002
00:34:04,080 --> 00:34:09,360
for the power trace that we're requiring

1003
00:34:06,080 --> 00:34:09,360
to run this x point

1004
00:34:10,079 --> 00:34:14,720
okay so now we have the power trace uh

1005
00:34:13,440 --> 00:34:16,639
but one of the things we got to figure

1006
00:34:14,719 --> 00:34:17,040
out is how fast do we have to capture

1007
00:34:16,639 --> 00:34:20,079
this

1008
00:34:17,040 --> 00:34:22,719
power trace how fast do we have to

1009
00:34:20,079 --> 00:34:23,679
basically measure the currents we're

1010
00:34:22,719 --> 00:34:24,399
going to be measuring the current at a

1011
00:34:23,679 --> 00:34:26,000
certain beat

1012
00:34:24,399 --> 00:34:27,759
and we need to figure out what that

1013
00:34:26,000 --> 00:34:29,918
beats going to be

1014
00:34:27,760 --> 00:34:31,200
the chip whisperer is awesome and one of

1015
00:34:29,918 --> 00:34:34,399
the things it does is it

1016
00:34:31,199 --> 00:34:36,239
generally outputs a clock okay and what

1017
00:34:34,399 --> 00:34:37,118
you'll do is you'll feed that clock into

1018
00:34:36,239 --> 00:34:40,479
the system

1019
00:34:37,119 --> 00:34:42,960
into your your victim as its input clock

1020
00:34:40,480 --> 00:34:44,000
and what that allows us to do is allows

1021
00:34:42,960 --> 00:34:45,760
us to capture

1022
00:34:44,000 --> 00:34:47,440
right at the very point that the

1023
00:34:45,760 --> 00:34:50,480
instruction is getting

1024
00:34:47,440 --> 00:34:51,119
operated on are getting executed so that

1025
00:34:50,480 --> 00:34:54,079
makes it

1026
00:34:51,119 --> 00:34:55,679
this exploit so much easier because we

1027
00:34:54,079 --> 00:34:57,280
know exactly when that

1028
00:34:55,679 --> 00:34:59,440
instruction is going to be operated on

1029
00:34:57,280 --> 00:35:03,839
we can measure the current at that

1030
00:34:59,440 --> 00:35:06,480
at that point in time and we really

1031
00:35:03,839 --> 00:35:07,759
are it makes their lives so much easier

1032
00:35:06,480 --> 00:35:09,760
unfortunately for us

1033
00:35:07,760 --> 00:35:11,760
what our target had is what's called an

1034
00:35:09,760 --> 00:35:13,040
internal oscillator it had its clock

1035
00:35:11,760 --> 00:35:14,880
inside of itself

1036
00:35:13,040 --> 00:35:16,720
so there's ways that you could sniff

1037
00:35:14,880 --> 00:35:19,440
that internal clock from like

1038
00:35:16,720 --> 00:35:20,240
the emf radiation and recreate that

1039
00:35:19,440 --> 00:35:22,000
clock

1040
00:35:20,240 --> 00:35:24,959
or you could do what we did and we just

1041
00:35:22,000 --> 00:35:28,880
over sampled it so we over sampled it

1042
00:35:24,960 --> 00:35:31,760
past the 105 million samples per second

1043
00:35:28,880 --> 00:35:33,599
bandwidth that the chip whisperer had

1044
00:35:31,760 --> 00:35:36,960
and in order to do this

1045
00:35:33,599 --> 00:35:36,960
we ended up using

1046
00:35:37,599 --> 00:35:44,400
our trusty oscilloscope and we just

1047
00:35:41,440 --> 00:35:46,560
basically took the differential probe

1048
00:35:44,400 --> 00:35:48,240
dropped it right into our oscilloscope

1049
00:35:46,560 --> 00:35:51,040
had the chip whisperer go to its

1050
00:35:48,240 --> 00:35:53,680
triggers so trigger the oscilloscope

1051
00:35:51,040 --> 00:35:55,440
when it was capturing and you know

1052
00:35:53,680 --> 00:35:58,399
basically bypass the whole

1053
00:35:55,440 --> 00:35:59,920
oscilloscope portion of the chip resper

1054
00:35:58,400 --> 00:36:01,920
once the data was collected

1055
00:35:59,920 --> 00:36:03,599
in the oscilloscope we wrote a python

1056
00:36:01,920 --> 00:36:06,480
script on our computer to

1057
00:36:03,599 --> 00:36:08,079
basically suck in that power trace and

1058
00:36:06,480 --> 00:36:12,400
we sucked it right into like the chip

1059
00:36:08,079 --> 00:36:14,480
whisperer software

1060
00:36:12,400 --> 00:36:15,920
so all together now like man this is

1061
00:36:14,480 --> 00:36:18,640
you're talking a lot of hardware

1062
00:36:15,920 --> 00:36:19,040
but uh you know how does this all work

1063
00:36:18,640 --> 00:36:21,040
so

1064
00:36:19,040 --> 00:36:22,960
let's start with what's going on we have

1065
00:36:21,040 --> 00:36:23,680
the chip whisperer ecosystem running on

1066
00:36:22,960 --> 00:36:26,320
our computer

1067
00:36:23,680 --> 00:36:26,799
and this is running through python it's

1068
00:36:26,320 --> 00:36:29,440
a

1069
00:36:26,800 --> 00:36:30,720
juniper uh basic notebook that we're

1070
00:36:29,440 --> 00:36:32,800
running

1071
00:36:30,720 --> 00:36:35,680
this is talking to the chip whisperer

1072
00:36:32,800 --> 00:36:38,400
and sending it 16 bytes of data

1073
00:36:35,680 --> 00:36:40,240
this data goes over serial and then the

1074
00:36:38,400 --> 00:36:40,880
serial to i square c host is converting

1075
00:36:40,240 --> 00:36:43,839
this data

1076
00:36:40,880 --> 00:36:44,640
from you know 16 bytes to the basically

1077
00:36:43,839 --> 00:36:47,040
the protocol

1078
00:36:44,640 --> 00:36:48,160
that the victim is expecting for an

1079
00:36:47,040 --> 00:36:50,720
update

1080
00:36:48,160 --> 00:36:52,560
it's sending it to the victim and at the

1081
00:36:50,720 --> 00:36:55,839
same time it's sending a trigger

1082
00:36:52,560 --> 00:36:59,520
to my oscilloscope to start capturing

1083
00:36:55,839 --> 00:37:01,680
the uh the power trace okay once that

1084
00:36:59,520 --> 00:37:02,720
capture is completed it uploads it to

1085
00:37:01,680 --> 00:37:05,919
ethernet

1086
00:37:02,720 --> 00:37:09,520
and then this is my whole acquisition of

1087
00:37:05,920 --> 00:37:11,119
chain that was used to capture all these

1088
00:37:09,520 --> 00:37:12,800
you know thousands of thousands of power

1089
00:37:11,119 --> 00:37:16,400
traces in order to do

1090
00:37:12,800 --> 00:37:17,680
power analysis side gel attack

1091
00:37:16,400 --> 00:37:19,760
so you can see like kind of the whole

1092
00:37:17,680 --> 00:37:22,160
setup here's the chip whisperer

1093
00:37:19,760 --> 00:37:23,359
you know talking to the computer over

1094
00:37:22,160 --> 00:37:27,359
this is uh

1095
00:37:23,359 --> 00:37:30,560
you know basically from here it was

1096
00:37:27,359 --> 00:37:33,520
serial to my i square c to serial hills

1097
00:37:30,560 --> 00:37:36,320
i scored c over to my victim okay my

1098
00:37:33,520 --> 00:37:38,800
victim is getting the power is getting

1099
00:37:36,320 --> 00:37:40,560
sniffed basically or monitored through

1100
00:37:38,800 --> 00:37:41,920
my differential probe this is going to

1101
00:37:40,560 --> 00:37:43,920
the oscilloscope

1102
00:37:41,920 --> 00:37:46,079
uh which is getting triggered from here

1103
00:37:43,920 --> 00:37:47,839
and there the trigger line from my

1104
00:37:46,079 --> 00:37:50,079
square sees her serial host is going

1105
00:37:47,839 --> 00:37:51,440
there so that's the same line so

1106
00:37:50,079 --> 00:37:53,280
basically technically

1107
00:37:51,440 --> 00:37:55,440
color spaghetti at this point now that

1108
00:37:53,280 --> 00:37:57,200
we're capturing all these traces

1109
00:37:55,440 --> 00:37:58,720
how do we synchronize the traces amongst

1110
00:37:57,200 --> 00:38:01,279
one of one another

1111
00:37:58,720 --> 00:38:02,560
uh generally if you were you had an

1112
00:38:01,280 --> 00:38:04,400
external clock

1113
00:38:02,560 --> 00:38:05,759
you would make it really easy to to

1114
00:38:04,400 --> 00:38:07,200
synchronize that data and the chip

1115
00:38:05,760 --> 00:38:08,480
whisperer does a good job of

1116
00:38:07,200 --> 00:38:10,560
synchronizing that data for

1117
00:38:08,480 --> 00:38:12,000
for you since we have an internal clock

1118
00:38:10,560 --> 00:38:14,320
and we're over sampling

1119
00:38:12,000 --> 00:38:15,119
how do we make sure that all these power

1120
00:38:14,320 --> 00:38:16,960
traces are

1121
00:38:15,119 --> 00:38:18,160
on top of one another because at the end

1122
00:38:16,960 --> 00:38:20,400
of the day we basically need

1123
00:38:18,160 --> 00:38:22,160
that bucket to be in the same spot for

1124
00:38:20,400 --> 00:38:24,720
each power trace

1125
00:38:22,160 --> 00:38:26,160
well thankfully there's a solution well

1126
00:38:24,720 --> 00:38:27,520
the solution is math

1127
00:38:26,160 --> 00:38:28,879
and basically we're going to use a

1128
00:38:27,520 --> 00:38:29,920
filter called a sum of absolute

1129
00:38:28,880 --> 00:38:31,280
differences

1130
00:38:29,920 --> 00:38:33,599
and that's going to allow us to align

1131
00:38:31,280 --> 00:38:34,320
our traces if we look below here i have

1132
00:38:33,599 --> 00:38:37,119
basically

1133
00:38:34,320 --> 00:38:38,400
uh two well i have a portion of a bunch

1134
00:38:37,119 --> 00:38:41,599
of power traces

1135
00:38:38,400 --> 00:38:44,000
and i have two little distinctive like

1136
00:38:41,599 --> 00:38:44,880
waveforms here that happens on every

1137
00:38:44,000 --> 00:38:48,240
power trace

1138
00:38:44,880 --> 00:38:50,480
and what i would do is i'll end up going

1139
00:38:48,240 --> 00:38:52,640
and running this filter this add filter

1140
00:38:50,480 --> 00:38:55,440
on it and do a course alignment

1141
00:38:52,640 --> 00:38:57,839
and it brings it fairly close and then

1142
00:38:55,440 --> 00:38:59,839
i'll run it through one more time

1143
00:38:57,839 --> 00:39:01,359
and do another fine alignment you know

1144
00:38:59,839 --> 00:39:04,240
on this rising edge

1145
00:39:01,359 --> 00:39:05,279
so this will allow me to to get them you

1146
00:39:04,240 --> 00:39:06,959
know squared up

1147
00:39:05,280 --> 00:39:08,880
so that when i run it through the the

1148
00:39:06,960 --> 00:39:12,079
linkage model that it will

1149
00:39:08,880 --> 00:39:13,760
end up finding the keys for me

1150
00:39:12,079 --> 00:39:15,680
now we need to process all these power

1151
00:39:13,760 --> 00:39:17,040
traces and to do this we're using

1152
00:39:15,680 --> 00:39:19,839
something that's included in

1153
00:39:17,040 --> 00:39:21,200
chip whisperers ecosystem it's these

1154
00:39:19,839 --> 00:39:22,880
juniper notebooks

1155
00:39:21,200 --> 00:39:24,640
they basically have a bunch of tutorials

1156
00:39:22,880 --> 00:39:27,119
on how to implement

1157
00:39:24,640 --> 00:39:29,680
side channel attacks on your own the one

1158
00:39:27,119 --> 00:39:32,400
i used was i think a 256-bit

1159
00:39:29,680 --> 00:39:33,919
bootloader decryption method that he

1160
00:39:32,400 --> 00:39:35,760
came up with

1161
00:39:33,920 --> 00:39:36,960
and i just basically extracted out the

1162
00:39:35,760 --> 00:39:38,720
pieces i need

1163
00:39:36,960 --> 00:39:40,800
it's all python based so you can write

1164
00:39:38,720 --> 00:39:43,118
your own code and that allowed me to

1165
00:39:40,800 --> 00:39:45,040
basically interface to my victim or my

1166
00:39:43,119 --> 00:39:48,480
serial to i squared c converter that i

1167
00:39:45,040 --> 00:39:51,440
that i built and allow me to send

1168
00:39:48,480 --> 00:39:53,280
the random data and capture the traces

1169
00:39:51,440 --> 00:39:56,400
from my oscilloscope right into this

1170
00:39:53,280 --> 00:39:58,800
juniper notebook

1171
00:39:56,400 --> 00:40:00,560
at this time i'm basically going to be

1172
00:39:58,800 --> 00:40:02,960
saving these traces

1173
00:40:00,560 --> 00:40:04,319
with the data that i sent the victim

1174
00:40:02,960 --> 00:40:06,720
okay so now i have a

1175
00:40:04,319 --> 00:40:09,200
basically a plot a bunch of numbers of

1176
00:40:06,720 --> 00:40:11,520
of what the power is at a certain time

1177
00:40:09,200 --> 00:40:12,799
and i have the keys that the the fake

1178
00:40:11,520 --> 00:40:15,119
encrypted data

1179
00:40:12,800 --> 00:40:16,960
that i sent to the target and this will

1180
00:40:15,119 --> 00:40:19,839
this is something that i'll you know

1181
00:40:16,960 --> 00:40:22,079
will end up processing uh after i have

1182
00:40:19,839 --> 00:40:23,920
that that chunker the blob of data for

1183
00:40:22,079 --> 00:40:25,599
you know each power trace i'm going to

1184
00:40:23,920 --> 00:40:27,839
align all the power traces with the

1185
00:40:25,599 --> 00:40:28,800
sad filter like i said uh in the last

1186
00:40:27,839 --> 00:40:30,560
slide

1187
00:40:28,800 --> 00:40:33,359
and then i'm going to basically send it

1188
00:40:30,560 --> 00:40:36,000
into this inverse sbox leakage model

1189
00:40:33,359 --> 00:40:36,880
and have it process all this data from

1190
00:40:36,000 --> 00:40:40,000
there we're going to be

1191
00:40:36,880 --> 00:40:41,599
extracting the round tens keys

1192
00:40:40,000 --> 00:40:44,000
if you're going to attack a target like

1193
00:40:41,599 --> 00:40:45,599
this like let's say the sam d21 or any

1194
00:40:44,000 --> 00:40:48,079
other target that's

1195
00:40:45,599 --> 00:40:49,119
you know you have my controller that you

1196
00:40:48,079 --> 00:40:50,560
you know obviously you're trying to

1197
00:40:49,119 --> 00:40:52,880
extract the keys

1198
00:40:50,560 --> 00:40:54,078
is to create a mock-up we know what kind

1199
00:40:52,880 --> 00:40:55,280
of uh

1200
00:40:54,079 --> 00:40:57,839
encryption algorithm they're they're

1201
00:40:55,280 --> 00:41:00,240
most likely using we know

1202
00:40:57,839 --> 00:41:02,319
what the isrc protocol the protocol they

1203
00:41:00,240 --> 00:41:04,479
are using to talk to it

1204
00:41:02,319 --> 00:41:06,400
we'll figure out stuff like that they're

1205
00:41:04,480 --> 00:41:08,880
using internal clocks

1206
00:41:06,400 --> 00:41:09,599
and we're able to basically remake the

1207
00:41:08,880 --> 00:41:11,359
system

1208
00:41:09,599 --> 00:41:13,520
okay we know everything but the keys at

1209
00:41:11,359 --> 00:41:15,279
this point so

1210
00:41:13,520 --> 00:41:16,640
i would write some code program it on

1211
00:41:15,280 --> 00:41:19,040
the part and then

1212
00:41:16,640 --> 00:41:21,339
try to adjust my do power traces on it

1213
00:41:19,040 --> 00:41:22,800
just like attack this part

1214
00:41:21,340 --> 00:41:25,200
[Music]

1215
00:41:22,800 --> 00:41:26,160
and maximize or optimize your your power

1216
00:41:25,200 --> 00:41:29,279
trace

1217
00:41:26,160 --> 00:41:30,240
optimize you know how many points i need

1218
00:41:29,280 --> 00:41:31,839
to find

1219
00:41:30,240 --> 00:41:33,359
my voltage levels like everything all

1220
00:41:31,839 --> 00:41:35,440
the inputs of the systems like

1221
00:41:33,359 --> 00:41:36,960
my resistance their value how fast i

1222
00:41:35,440 --> 00:41:39,920
need to capture data

1223
00:41:36,960 --> 00:41:40,720
how many points i need to capture and

1224
00:41:39,920 --> 00:41:44,079
really learn

1225
00:41:40,720 --> 00:41:46,720
how this target reacts

1226
00:41:44,079 --> 00:41:48,000
and that was invaluable with for me to

1227
00:41:46,720 --> 00:41:49,919
end up extracting the

1228
00:41:48,000 --> 00:41:52,640
the key i spent more time i think on

1229
00:41:49,920 --> 00:41:54,000
this and getting this all cleaned up and

1230
00:41:52,640 --> 00:41:54,560
right and then once i just popped the

1231
00:41:54,000 --> 00:41:56,640
chip in

1232
00:41:54,560 --> 00:41:57,680
it was very easy to extract the actual

1233
00:41:56,640 --> 00:42:00,240
key itself

1234
00:41:57,680 --> 00:42:01,919
so i highly recommend this when we're

1235
00:42:00,240 --> 00:42:02,319
running these attacks there's some times

1236
00:42:01,920 --> 00:42:04,480
when

1237
00:42:02,319 --> 00:42:05,680
we don't can't extract a key for for

1238
00:42:04,480 --> 00:42:08,400
whatever reason like the

1239
00:42:05,680 --> 00:42:09,680
the certain key bite won't be

1240
00:42:08,400 --> 00:42:12,240
extractable

1241
00:42:09,680 --> 00:42:14,879
well luckily that now only becomes uh

1242
00:42:12,240 --> 00:42:18,319
you know 256 problems i have to solve

1243
00:42:14,880 --> 00:42:21,359
right uh that byte is only 256

1244
00:42:18,319 --> 00:42:23,359
uh possible numbers that it could be

1245
00:42:21,359 --> 00:42:24,640
and we just brute force that we just pop

1246
00:42:23,359 --> 00:42:26,400
the number into the round

1247
00:42:24,640 --> 00:42:27,839
10 key work our way backwards to find

1248
00:42:26,400 --> 00:42:32,000
around zero key

1249
00:42:27,839 --> 00:42:34,400
uh throw in the gopros update decrypt it

1250
00:42:32,000 --> 00:42:35,920
and then throw it in an entropy kind of

1251
00:42:34,400 --> 00:42:38,800
uh post processor

1252
00:42:35,920 --> 00:42:39,839
to see how the data looks if the data

1253
00:42:38,800 --> 00:42:42,240
has

1254
00:42:39,839 --> 00:42:44,640
you know a very high low entropy we know

1255
00:42:42,240 --> 00:42:45,680
we just decrypted it

1256
00:42:44,640 --> 00:42:47,680
the other thing i haven't really

1257
00:42:45,680 --> 00:42:50,240
mentioned throughout all this is the uh

1258
00:42:47,680 --> 00:42:51,520
the chaining mode and for decryption it

1259
00:42:50,240 --> 00:42:54,560
really doesn't matter

1260
00:42:51,520 --> 00:42:55,839
um i mean of course it matters but to

1261
00:42:54,560 --> 00:42:57,040
actually figure out the key

1262
00:42:55,839 --> 00:42:59,040
it doesn't really matter if we look at

1263
00:42:57,040 --> 00:42:59,759
the bottom right hand corner here we

1264
00:42:59,040 --> 00:43:03,200
have

1265
00:42:59,760 --> 00:43:03,680
you know obviously our our encrypted

1266
00:43:03,200 --> 00:43:05,200
data

1267
00:43:03,680 --> 00:43:07,279
we're going to go through our box cipher

1268
00:43:05,200 --> 00:43:08,960
with the key and then once that comes

1269
00:43:07,280 --> 00:43:11,280
out the first 16 bytes

1270
00:43:08,960 --> 00:43:12,160
at that point we zore in the

1271
00:43:11,280 --> 00:43:15,760
initialization

1272
00:43:12,160 --> 00:43:18,560
vector so the id for decryption only

1273
00:43:15,760 --> 00:43:21,119
matters for the first 16 bytes

1274
00:43:18,560 --> 00:43:22,720
and if you know luckily we had the iv of

1275
00:43:21,119 --> 00:43:24,640
zero so it didn't really

1276
00:43:22,720 --> 00:43:26,078
affect us too it was very easy we didn't

1277
00:43:24,640 --> 00:43:27,680
really have to do anything

1278
00:43:26,079 --> 00:43:29,280
but if you have an iv of anything else

1279
00:43:27,680 --> 00:43:30,960
you can go ahead and do a little bit of

1280
00:43:29,280 --> 00:43:33,520
side channel attack there

1281
00:43:30,960 --> 00:43:34,319
and there's a ways around that and for

1282
00:43:33,520 --> 00:43:36,079
most of these

1283
00:43:34,319 --> 00:43:38,160
you know let's say for the cortex or any

1284
00:43:36,079 --> 00:43:39,599
of these parts a lot of times it's just

1285
00:43:38,160 --> 00:43:42,879
a interrupt table

1286
00:43:39,599 --> 00:43:45,280
and we could figure that out on our own

1287
00:43:42,880 --> 00:43:46,960
so it's not as bad as it sounds that

1288
00:43:45,280 --> 00:43:50,880
initialization vector

1289
00:43:46,960 --> 00:43:52,240
and uh pretty easy to circumvent

1290
00:43:50,880 --> 00:43:54,319
honestly i could have done a lot of

1291
00:43:52,240 --> 00:43:56,160
things better during my attack

1292
00:43:54,319 --> 00:43:57,920
uh one thing that i didn't really care

1293
00:43:56,160 --> 00:44:00,240
for was how small i made the

1294
00:43:57,920 --> 00:44:01,359
the the target board the victim board is

1295
00:44:00,240 --> 00:44:04,399
you know very small like

1296
00:44:01,359 --> 00:44:06,640
yeah big uh i should have used

1297
00:44:04,400 --> 00:44:08,240
you know one of the new aes ufo boards

1298
00:44:06,640 --> 00:44:10,480
or at least made it bigger

1299
00:44:08,240 --> 00:44:11,359
i i get so used to making everything so

1300
00:44:10,480 --> 00:44:13,359
small i use

1301
00:44:11,359 --> 00:44:14,720
the smallest disaster values i have all

1302
00:44:13,359 --> 00:44:17,279
four twos

1303
00:44:14,720 --> 00:44:18,560
and uh that really made it a lot harder

1304
00:44:17,280 --> 00:44:21,040
to to

1305
00:44:18,560 --> 00:44:22,160
to run this attack so definitely make it

1306
00:44:21,040 --> 00:44:25,119
bigger

1307
00:44:22,160 --> 00:44:25,759
um emf i would have done this a lot

1308
00:44:25,119 --> 00:44:26,960
faster

1309
00:44:25,760 --> 00:44:28,319
and that's kind of like the way of the

1310
00:44:26,960 --> 00:44:29,040
future i think a lot of people are not

1311
00:44:28,319 --> 00:44:30,800
doing uh

1312
00:44:29,040 --> 00:44:33,520
power analysis side channel attacks as

1313
00:44:30,800 --> 00:44:36,160
much anymore because these emf eyes

1314
00:44:33,520 --> 00:44:38,000
or even laser tags are really powerful

1315
00:44:36,160 --> 00:44:41,359
and really quick

1316
00:44:38,000 --> 00:44:43,920
again start small make your mock-up uh

1317
00:44:41,359 --> 00:44:44,560
learn all the samples on the the new ae

1318
00:44:43,920 --> 00:44:46,480
juniper

1319
00:44:44,560 --> 00:44:47,599
chip whisper you know ecosystem like run

1320
00:44:46,480 --> 00:44:50,720
through all that stuff so you really

1321
00:44:47,599 --> 00:44:52,160
understand it and like i said you know

1322
00:44:50,720 --> 00:44:53,759
create your own mock-up there

1323
00:44:52,160 --> 00:44:55,279
and obviously like any of the stuff you

1324
00:44:53,760 --> 00:44:56,079
just need to do it you just need to run

1325
00:44:55,280 --> 00:45:00,319
with it and

1326
00:44:56,079 --> 00:45:00,319
try it out yourself and see how it works

1327
00:45:00,480 --> 00:45:03,200
at the other day just make sure that

1328
00:45:01,839 --> 00:45:04,640
you're not going down a rabbit hole

1329
00:45:03,200 --> 00:45:05,118
that's pretty much what this whole thing

1330
00:45:04,640 --> 00:45:07,279
was

1331
00:45:05,119 --> 00:45:08,800
i mean i'm grateful that i spent the

1332
00:45:07,280 --> 00:45:09,520
time to learn how to do a side channel

1333
00:45:08,800 --> 00:45:11,920
attack

1334
00:45:09,520 --> 00:45:12,960
on a target such like this but at the

1335
00:45:11,920 --> 00:45:13,599
end of the day i really didn't need to

1336
00:45:12,960 --> 00:45:15,040
do it

1337
00:45:13,599 --> 00:45:16,720
i mean i spent a lot of times figuring

1338
00:45:15,040 --> 00:45:18,240
out how to do it but

1339
00:45:16,720 --> 00:45:19,598
you know make sure you're not going down

1340
00:45:18,240 --> 00:45:21,359
a rabbit hole with this kind of stuff

1341
00:45:19,599 --> 00:45:21,920
make sure that there's not easy ways of

1342
00:45:21,359 --> 00:45:25,598
doing it

1343
00:45:21,920 --> 00:45:27,839
or you know ways to circumvent that

1344
00:45:25,599 --> 00:45:30,720
because it's very easy to get to go down

1345
00:45:27,839 --> 00:45:32,799
that with a side channel attacks

1346
00:45:30,720 --> 00:45:34,000
where to go to the next if you're really

1347
00:45:32,800 --> 00:45:35,200
interested in doing your own side

1348
00:45:34,000 --> 00:45:37,599
channel attack

1349
00:45:35,200 --> 00:45:38,560
i would highly recommend these uh these

1350
00:45:37,599 --> 00:45:40,400
videos or

1351
00:45:38,560 --> 00:45:42,240
articles i have a really good article on

1352
00:45:40,400 --> 00:45:45,599
my website

1353
00:45:42,240 --> 00:45:47,839
uh under my blogs on you know

1354
00:45:45,599 --> 00:45:49,280
this whole attack goes a little bit more

1355
00:45:47,839 --> 00:45:50,799
into detail

1356
00:45:49,280 --> 00:45:51,920
if you're a little confused about aes

1357
00:45:50,800 --> 00:45:53,280
still and want to learn a little bit

1358
00:45:51,920 --> 00:45:56,800
more this computer file

1359
00:45:53,280 --> 00:45:57,839
video did a great job of of explaining

1360
00:45:56,800 --> 00:46:00,000
it

1361
00:45:57,839 --> 00:46:01,599
and of course for side channel attacks i

1362
00:46:00,000 --> 00:46:03,200
would definitely just check out nuai

1363
00:46:01,599 --> 00:46:05,280
they have some really good resources on

1364
00:46:03,200 --> 00:46:06,799
learning how to do side channel attacks

1365
00:46:05,280 --> 00:46:09,200
and this video in particular was

1366
00:46:06,800 --> 00:46:10,960
instrumental in teaching me

1367
00:46:09,200 --> 00:46:12,240
how side channel attacks work and what's

1368
00:46:10,960 --> 00:46:15,440
the premise behind it

1369
00:46:12,240 --> 00:46:16,799
so highly recommend that well thank you

1370
00:46:15,440 --> 00:46:19,599
for sitting through my talk

1371
00:46:16,800 --> 00:46:21,280
i i hope you learned a little bit if you

1372
00:46:19,599 --> 00:46:23,440
want to get in contact with me uh

1373
00:46:21,280 --> 00:46:25,040
feel free to follow me on twitter it's

1374
00:46:23,440 --> 00:46:26,800
at get hypoxic

1375
00:46:25,040 --> 00:46:28,240
uh on instagram i have a bunch of my

1376
00:46:26,800 --> 00:46:31,760
photographs and some video

1377
00:46:28,240 --> 00:46:33,279
that's at get hypoxic also and

1378
00:46:31,760 --> 00:46:34,800
likewise if you want to read some of my

1379
00:46:33,280 --> 00:46:37,599
blogs feel free to

1380
00:46:34,800 --> 00:46:40,319
check out gethypoxide.com where i have

1381
00:46:37,599 --> 00:46:42,000
all my technical blogs and whatnots

1382
00:46:40,319 --> 00:46:43,680
well thank you again and if you're

1383
00:46:42,000 --> 00:46:45,040
listening to this live i will be

1384
00:46:43,680 --> 00:46:46,480
answering questions on discord in a

1385
00:46:45,040 --> 00:46:57,839
little bit

1386
00:46:46,480 --> 00:46:57,839
bye now

1387
00:47:07,440 --> 00:47:09,520
you

