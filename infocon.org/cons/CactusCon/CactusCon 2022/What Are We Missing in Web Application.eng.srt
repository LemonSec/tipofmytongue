1
00:00:01,280 --> 00:00:03,199
hello everyone uh welcome to another

2
00:00:03,199 --> 00:00:05,359
session uh my name is burhan and i will

3
00:00:05,359 --> 00:00:07,200
be talking about what are we missing in

4
00:00:07,200 --> 00:00:09,360
web applications so before going further

5
00:00:09,360 --> 00:00:11,200
i would like to introduce myself my name

6
00:00:11,200 --> 00:00:13,440
is mirza berhanbek and i'm oscp

7
00:00:13,440 --> 00:00:15,120
certified along with some other

8
00:00:15,120 --> 00:00:19,680
credentials ewpdx and ecppt etc so

9
00:00:19,680 --> 00:00:22,240
my main core motive and my main core

10
00:00:22,240 --> 00:00:25,119
research area nowadays is red teaming

11
00:00:25,119 --> 00:00:26,800
and i'm more interested in thread

12
00:00:26,800 --> 00:00:28,160
hunting and

13
00:00:28,160 --> 00:00:30,400
web application is my core

14
00:00:30,400 --> 00:00:33,120
so i'm working in web application and

15
00:00:33,120 --> 00:00:34,880
mobile application penetration testing

16
00:00:34,880 --> 00:00:36,640
field for around seven to eight years

17
00:00:36,640 --> 00:00:39,600
now but i'm more into now red teaming

18
00:00:39,600 --> 00:00:43,440
and trade hunting kind of things so um i

19
00:00:43,440 --> 00:00:45,360
started my career as a bug bounty hunter

20
00:00:45,360 --> 00:00:48,000
uh back in 2012 and 13. so

21
00:00:48,000 --> 00:00:49,760
uh acknowledged by google microsoft

22
00:00:49,760 --> 00:00:52,800
facebook amazon and these are the

23
00:00:52,800 --> 00:00:54,719
few companies that are the top notch

24
00:00:54,719 --> 00:00:56,480
there are a lot of list

25
00:00:56,480 --> 00:01:00,160
that i am already listed in so by bounty

26
00:01:00,160 --> 00:01:02,000
hunting hackers one you are already

27
00:01:02,000 --> 00:01:04,400
aware of that right so uh you know the

28
00:01:04,400 --> 00:01:06,799
potential of the bounty hunting uh i've

29
00:01:06,799 --> 00:01:09,200
been working with uh many companies as

30
00:01:09,200 --> 00:01:11,360
of rendered the third party consultants

31
00:01:11,360 --> 00:01:14,799
as well uh so work for each and every

32
00:01:14,799 --> 00:01:16,880
uh what we can say sectors or the

33
00:01:16,880 --> 00:01:19,520
business units financial health business

34
00:01:19,520 --> 00:01:20,880
energy utilities in the government

35
00:01:20,880 --> 00:01:23,119
sector so i'm more

36
00:01:23,119 --> 00:01:25,280
uh into the third party and the vendor

37
00:01:25,280 --> 00:01:27,360
side so i got a chance to work with

38
00:01:27,360 --> 00:01:28,640
different companies on the different

39
00:01:28,640 --> 00:01:30,240
level with executives and to the

40
00:01:30,240 --> 00:01:32,400
layman's as well so

41
00:01:32,400 --> 00:01:34,159
so mainly uh i've been working with the

42
00:01:34,159 --> 00:01:36,320
financial industries so the banks the

43
00:01:36,320 --> 00:01:38,479
insurance companies and there are a lot

44
00:01:38,479 --> 00:01:41,040
of things going on in the market so now

45
00:01:41,040 --> 00:01:43,680
today's my topic for this presentation

46
00:01:43,680 --> 00:01:45,439
is related to some financial and the

47
00:01:45,439 --> 00:01:48,000
banking application but moving forward

48
00:01:48,000 --> 00:01:50,799
uh i would like to just display the

49
00:01:50,799 --> 00:01:52,399
major change and what are the current

50
00:01:52,399 --> 00:01:54,079
roles and the what are the critical

51
00:01:54,079 --> 00:01:55,600
vulnerabilities in the web application

52
00:01:55,600 --> 00:01:58,000
nowadays there is a change we thought we

53
00:01:58,000 --> 00:01:59,920
will talk about the change right

54
00:01:59,920 --> 00:02:02,560
uh but the major change this is the os

55
00:02:02,560 --> 00:02:04,799
top 10 i'm sure you most of you guys are

56
00:02:04,799 --> 00:02:07,360
aware of this what is the os top 10 so

57
00:02:07,360 --> 00:02:09,360
in the os top 10 we have a baseline we

58
00:02:09,360 --> 00:02:12,160
have a framework to match and to compare

59
00:02:12,160 --> 00:02:14,640
and to test the vulnerabilities and mark

60
00:02:14,640 --> 00:02:17,120
them or we rate them as well we

61
00:02:17,120 --> 00:02:19,840
calculate the cvs as a score as well so

62
00:02:19,840 --> 00:02:21,520
we do a lot of things with this

63
00:02:21,520 --> 00:02:25,200
benchmark or the baseline um

64
00:02:25,200 --> 00:02:29,120
what we get reporting or the checklist

65
00:02:29,120 --> 00:02:33,200
so in 2017 and previous prior to that we

66
00:02:33,200 --> 00:02:34,800
are using oas

67
00:02:34,800 --> 00:02:36,720
for a long time

68
00:02:36,720 --> 00:02:38,800
so we are talking about the

69
00:02:38,800 --> 00:02:42,160
uh 2017 uh checklist the injection was

70
00:02:42,160 --> 00:02:44,319
on the top number one then broken

71
00:02:44,319 --> 00:02:46,879
authentication sensitive data

72
00:02:46,879 --> 00:02:51,120
xml entity injections xfs these are all

73
00:02:51,120 --> 00:02:53,920
listed according to their criticality

74
00:02:53,920 --> 00:02:54,800
right

75
00:02:54,800 --> 00:02:59,200
but in 2021 2021 what we call it now uh

76
00:02:59,200 --> 00:03:00,959
we have a revised list of the

77
00:03:00,959 --> 00:03:03,280
vulnerability practicalities right so

78
00:03:03,280 --> 00:03:04,400
now if we

79
00:03:04,400 --> 00:03:07,040
just map it and we compare it where it

80
00:03:07,040 --> 00:03:10,159
was and now it is on the top of the list

81
00:03:10,159 --> 00:03:12,800
the broken access control things then

82
00:03:12,800 --> 00:03:15,519
the injection will move to number third

83
00:03:15,519 --> 00:03:18,640
and we have ssrf as well we have a lot

84
00:03:18,640 --> 00:03:20,800
of things introduced in this new

85
00:03:20,800 --> 00:03:24,080
checklist last checklist so this is the

86
00:03:24,080 --> 00:03:25,920
current checklist if you download that

87
00:03:25,920 --> 00:03:28,159
from the os website you'll find a lot of

88
00:03:28,159 --> 00:03:31,360
things a lot of checks going on in the

89
00:03:31,360 --> 00:03:32,640
new one

90
00:03:32,640 --> 00:03:35,680
so my main question is change why why

91
00:03:35,680 --> 00:03:37,840
there is need of a change for a change

92
00:03:37,840 --> 00:03:41,200
why why why we change so

93
00:03:41,200 --> 00:03:44,000
this is a human nature and this is

94
00:03:44,000 --> 00:03:45,680
connected to everything everything

95
00:03:45,680 --> 00:03:47,440
evolves so

96
00:03:47,440 --> 00:03:48,720
how we are protecting our web

97
00:03:48,720 --> 00:03:50,720
application back in the days now we have

98
00:03:50,720 --> 00:03:53,120
to protect our web applications in

99
00:03:53,120 --> 00:03:54,560
different manner and with a different

100
00:03:54,560 --> 00:03:56,720
methodology right so we cannot protect

101
00:03:56,720 --> 00:03:58,879
the web application as we were doing

102
00:03:58,879 --> 00:04:01,200
previously so we have to obtain we have

103
00:04:01,200 --> 00:04:03,840
to change we have to introduce new

104
00:04:03,840 --> 00:04:06,720
methods and new techniques to break and

105
00:04:06,720 --> 00:04:09,280
expect it once again so that's why we

106
00:04:09,280 --> 00:04:11,599
need we need change in everything that's

107
00:04:11,599 --> 00:04:14,159
why the os top 10 was changed previously

108
00:04:14,159 --> 00:04:15,120
as well

109
00:04:15,120 --> 00:04:18,320
so static and dynamic scanners as most

110
00:04:18,320 --> 00:04:20,238
of the people are aware that we are we

111
00:04:20,238 --> 00:04:22,639
will be talking about their scanners uh

112
00:04:22,639 --> 00:04:24,080
manual assessments and all the other

113
00:04:24,080 --> 00:04:27,759
things but uh to rest assured static and

114
00:04:27,759 --> 00:04:30,000
dynamic scanners work uh on a very

115
00:04:30,000 --> 00:04:31,680
different pace right most of you guys

116
00:04:31,680 --> 00:04:34,080
know that but the vulnerability and the

117
00:04:34,080 --> 00:04:36,080
issue that i will be discussing in the

118
00:04:36,080 --> 00:04:38,720
further slides uh is kind of a

119
00:04:38,720 --> 00:04:40,880
vulnerability that

120
00:04:40,880 --> 00:04:42,639
no scanner can detect

121
00:04:42,639 --> 00:04:45,280
without the human interaction you do

122
00:04:45,280 --> 00:04:47,120
this static testing you do the source

123
00:04:47,120 --> 00:04:50,479
code reviews you use the front end uh um

124
00:04:50,479 --> 00:04:52,639
what we can say test the web application

125
00:04:52,639 --> 00:04:55,120
from the front end with the like unit x

126
00:04:55,120 --> 00:04:57,840
net sparker and many other scanners that

127
00:04:57,840 --> 00:04:59,840
are available in the market i'm talking

128
00:04:59,840 --> 00:05:01,919
about the commercial uh

129
00:05:01,919 --> 00:05:04,320
scanners as well the specific kind of

130
00:05:04,320 --> 00:05:06,400
vulnerability that cannot be detected

131
00:05:06,400 --> 00:05:08,840
without the human intervention

132
00:05:08,840 --> 00:05:13,199
is coming in the furthest lens so uh

133
00:05:13,199 --> 00:05:15,280
just to be

134
00:05:15,280 --> 00:05:17,039
on the safe side i would like to just

135
00:05:17,039 --> 00:05:19,039
introduce an example to you guys that

136
00:05:19,039 --> 00:05:21,039
how injections are protected focusing on

137
00:05:21,039 --> 00:05:24,479
the sql injection how they are protected

138
00:05:24,479 --> 00:05:26,720
previously and now how they are changing

139
00:05:26,720 --> 00:05:30,160
in the factors so uh nowadays the

140
00:05:30,160 --> 00:05:32,240
frameworks and all the other things are

141
00:05:32,240 --> 00:05:34,000
very smart they protect the web

142
00:05:34,000 --> 00:05:35,520
application or the

143
00:05:35,520 --> 00:05:37,520
any kind of application there are

144
00:05:37,520 --> 00:05:40,080
built-in security libraries built in

145
00:05:40,080 --> 00:05:42,560
their plugins they have the

146
00:05:42,560 --> 00:05:45,919
uh multiple things that are predefined

147
00:05:45,919 --> 00:05:48,160
if you talk about the dotnet we have

148
00:05:48,160 --> 00:05:49,840
multiple security libraries in the

149
00:05:49,840 --> 00:05:51,759
cryptography in the injection input

150
00:05:51,759 --> 00:05:54,560
validations and what's on whatnot so

151
00:05:54,560 --> 00:05:56,639
talking about different vulnerabilities

152
00:05:56,639 --> 00:05:59,199
we have frameworks we have libraries we

153
00:05:59,199 --> 00:06:01,199
have multiple other things that are

154
00:06:01,199 --> 00:06:03,440
protecting the web application from the

155
00:06:03,440 --> 00:06:05,840
front end and the back end as well if

156
00:06:05,840 --> 00:06:08,479
you follow these secure uh

157
00:06:08,479 --> 00:06:11,120
coding programs or if you are following

158
00:06:11,120 --> 00:06:13,840
that you're coding uh techniques so you

159
00:06:13,840 --> 00:06:14,960
will be

160
00:06:14,960 --> 00:06:17,280
uh seeing multiple things that you are

161
00:06:17,280 --> 00:06:19,039
missing in the uh

162
00:06:19,039 --> 00:06:20,800
code of the web application previously

163
00:06:20,800 --> 00:06:23,280
but now you are putting the validations

164
00:06:23,280 --> 00:06:25,520
as you like it and you are making the

165
00:06:25,520 --> 00:06:27,360
web application or the

166
00:06:27,360 --> 00:06:29,919
any kind of application much secure so

167
00:06:29,919 --> 00:06:32,000
these uh this is just an example of the

168
00:06:32,000 --> 00:06:34,160
sql injection i'm talking about multiple

169
00:06:34,160 --> 00:06:36,479
other things as well so now if you move

170
00:06:36,479 --> 00:06:38,560
forward to other vulnerabilities this is

171
00:06:38,560 --> 00:06:40,080
the case for the other vulnerabilities

172
00:06:40,080 --> 00:06:42,639
as well uh we have multiple things to

173
00:06:42,639 --> 00:06:44,800
protect them but there's one thing that

174
00:06:44,800 --> 00:06:47,840
cannot be protected until unless you put

175
00:06:47,840 --> 00:06:50,400
a share place for the spine on that

176
00:06:50,400 --> 00:06:53,280
thing that is a business logic flaw

177
00:06:53,280 --> 00:06:54,479
so now

178
00:06:54,479 --> 00:06:56,160
uh we are talking about the business

179
00:06:56,160 --> 00:06:57,680
logic clause what are the business logic

180
00:06:57,680 --> 00:07:02,000
flaws how they are uh arise how they how

181
00:07:02,000 --> 00:07:04,080
we can achieve it how we can hack it and

182
00:07:04,080 --> 00:07:06,000
how we can protect it so what are the

183
00:07:06,000 --> 00:07:08,720
business logic plot uh i'm sure most of

184
00:07:08,720 --> 00:07:11,599
you guys are very well aware of how

185
00:07:11,599 --> 00:07:14,319
business logic flaws are around so what

186
00:07:14,319 --> 00:07:16,400
are the business logic law a very simple

187
00:07:16,400 --> 00:07:18,800
definition in the scheme uh there are

188
00:07:18,800 --> 00:07:22,319
step a b c if you follow a the door will

189
00:07:22,319 --> 00:07:24,880
be open b then there's a door c it will

190
00:07:24,880 --> 00:07:27,599
be open after you open the door b so you

191
00:07:27,599 --> 00:07:30,080
have to follow the sequence a b c but

192
00:07:30,080 --> 00:07:32,319
you directly jump from a to c that's a

193
00:07:32,319 --> 00:07:35,360
business logic flaw that you are not uh

194
00:07:35,360 --> 00:07:38,240
allowed to access c without accessing b

195
00:07:38,240 --> 00:07:41,199
but if you are accessing a uh c directly

196
00:07:41,199 --> 00:07:43,440
from the a that is a visible logic for

197
00:07:43,440 --> 00:07:45,919
so breaking any kind of logic breaking

198
00:07:45,919 --> 00:07:47,919
any any any kind of logic you are

199
00:07:47,919 --> 00:07:50,720
obtaining business logic flaw right so

200
00:07:50,720 --> 00:07:52,560
what are the business logic flaws uh

201
00:07:52,560 --> 00:07:55,360
vulnerabilities basically uh might be

202
00:07:55,360 --> 00:07:57,360
you are losing your data you you might

203
00:07:57,360 --> 00:07:59,360
lose your data or you might lose your

204
00:07:59,360 --> 00:08:02,319
personal stuff as well because uh either

205
00:08:02,319 --> 00:08:04,319
uh what we call it indirect object

206
00:08:04,319 --> 00:08:05,840
reference vulnerabilities can be the

207
00:08:05,840 --> 00:08:07,599
part of this as well you're accessing

208
00:08:07,599 --> 00:08:08,879
the data without the permission of

209
00:08:08,879 --> 00:08:10,400
another user or you are breaking the

210
00:08:10,400 --> 00:08:12,479
logic of the system you're not

211
00:08:12,479 --> 00:08:14,319
hacking someone but you're just breaking

212
00:08:14,319 --> 00:08:18,720
the sequence of data or transmission

213
00:08:18,720 --> 00:08:21,680
so how do these vulnerabilities arise

214
00:08:21,680 --> 00:08:24,000
negligence simply a developer can put a

215
00:08:24,000 --> 00:08:26,479
check on every protected thing but if

216
00:08:26,479 --> 00:08:28,240
they are missing somewhere something and

217
00:08:28,240 --> 00:08:29,919
they are not checking the station or if

218
00:08:29,919 --> 00:08:32,958
they are not checking the um

219
00:08:32,958 --> 00:08:36,320
user roles basically so you are

220
00:08:36,320 --> 00:08:38,399
destroying your web application or the

221
00:08:38,399 --> 00:08:40,320
system application and you are allowing

222
00:08:40,320 --> 00:08:43,200
someone you just change the name or just

223
00:08:43,200 --> 00:08:44,880
repeat the request without login or

224
00:08:44,880 --> 00:08:48,560
without user uh checking if that user is

225
00:08:48,560 --> 00:08:52,000
able to or if that user should be

226
00:08:52,000 --> 00:08:54,080
viewing this or not but if you are

227
00:08:54,080 --> 00:08:56,080
losing that you might lose your data as

228
00:08:56,080 --> 00:08:56,800
well

229
00:08:56,800 --> 00:08:58,160
uh what is the impact of the business

230
00:08:58,160 --> 00:09:01,120
logic flaws vulnerabilities um in my

231
00:09:01,120 --> 00:09:02,480
view of disaster

232
00:09:02,480 --> 00:09:03,519
why

233
00:09:03,519 --> 00:09:05,600
uh if you follow hacker one or other bug

234
00:09:05,600 --> 00:09:08,399
bounty programs the most most highly

235
00:09:08,399 --> 00:09:09,920
highly paid vulnerabilities are of

236
00:09:09,920 --> 00:09:12,240
business logic plot where an attacker or

237
00:09:12,240 --> 00:09:15,920
researcher tries to um inject the

238
00:09:15,920 --> 00:09:18,399
their own logics or they try to break

239
00:09:18,399 --> 00:09:20,720
the logic or the sequence of the logics

240
00:09:20,720 --> 00:09:22,880
so they are most highly paid

241
00:09:22,880 --> 00:09:24,720
vulnerabilities so for the sake of the

242
00:09:24,720 --> 00:09:27,680
example uh there was a boy who tried to

243
00:09:27,680 --> 00:09:30,640
bypass the otp system mechanism of the

244
00:09:30,640 --> 00:09:33,360
instagram right um if you remember that

245
00:09:33,360 --> 00:09:35,120
that's perfectly fine if you don't go

246
00:09:35,120 --> 00:09:37,680
and check that article as well a boy

247
00:09:37,680 --> 00:09:40,480
tried to bypass the otp in the instagram

248
00:09:40,480 --> 00:09:44,000
uh portal and he was able to bypass it

249
00:09:44,000 --> 00:09:45,920
perfectly

250
00:09:45,920 --> 00:09:48,800
as per my knowledge uh they paid him 20

251
00:09:48,800 --> 00:09:51,120
000 us dollars

252
00:09:51,120 --> 00:09:53,920
that's a big amount they fixed that

253
00:09:53,920 --> 00:09:57,200
he tried to do that again somewhere

254
00:09:57,200 --> 00:09:59,839
and he bypassed that once again so they

255
00:09:59,839 --> 00:10:02,640
paid him 15 000 us dollars again so in

256
00:10:02,640 --> 00:10:04,800
total 35 000 us dollars for a single

257
00:10:04,800 --> 00:10:06,959
vulnerability that was a business logic

258
00:10:06,959 --> 00:10:09,600
flaw so if your business logics are

259
00:10:09,600 --> 00:10:13,279
perfectly occupied perfectly designed

260
00:10:13,279 --> 00:10:16,640
no issues not to worry about a thing

261
00:10:16,640 --> 00:10:20,000
from this side but if there is the logic

262
00:10:20,000 --> 00:10:22,240
law in your web application that might

263
00:10:22,240 --> 00:10:24,560
create a disaster for you

264
00:10:24,560 --> 00:10:25,920
so

265
00:10:25,920 --> 00:10:27,680
what are the common vulnerabilities in

266
00:10:27,680 --> 00:10:30,079
business logic flaw we call it blf in

267
00:10:30,079 --> 00:10:33,200
short uh the most common vulnerabilities

268
00:10:33,200 --> 00:10:36,000
are i'll i'll just put it like that uh

269
00:10:36,000 --> 00:10:37,680
we trust user

270
00:10:37,680 --> 00:10:40,240
we trust user that they will follow the

271
00:10:40,240 --> 00:10:43,040
intended sequence but nowadays everyone

272
00:10:43,040 --> 00:10:45,279
is smart so we don't follow sequence

273
00:10:45,279 --> 00:10:47,839
right we want to check the application

274
00:10:47,839 --> 00:10:50,000
we want to dig into the application as

275
00:10:50,000 --> 00:10:53,360
there are a thousand and multiple

276
00:10:53,360 --> 00:10:56,560
100 of thousand developers

277
00:10:56,560 --> 00:10:59,760
testers qa testers security consultants

278
00:10:59,760 --> 00:11:01,279
they're in the market they're in the

279
00:11:01,279 --> 00:11:03,680
boom so they do their job seriously but

280
00:11:03,680 --> 00:11:05,760
they do take the vulnerabilities in the

281
00:11:05,760 --> 00:11:08,000
web application then as well so you

282
00:11:08,000 --> 00:11:11,120
cannot uh just stretch that

283
00:11:11,120 --> 00:11:13,680
user will follow the intended sequence

284
00:11:13,680 --> 00:11:16,160
so this is the main perspective so you

285
00:11:16,160 --> 00:11:18,640
have to protect everything that comes in

286
00:11:18,640 --> 00:11:20,160
your way

287
00:11:20,160 --> 00:11:22,240
uh failing to handle unconventional

288
00:11:22,240 --> 00:11:24,320
input does come with the input

289
00:11:24,320 --> 00:11:26,800
validation thing so you have to make a

290
00:11:26,800 --> 00:11:28,720
validation request for every every

291
00:11:28,720 --> 00:11:30,959
everything so first of all if you are a

292
00:11:30,959 --> 00:11:33,920
developer or you are owning a website so

293
00:11:33,920 --> 00:11:36,640
just check the input validations on all

294
00:11:36,640 --> 00:11:38,640
input that are coming from the front and

295
00:11:38,640 --> 00:11:40,959
to the back end so you can put a a

296
00:11:40,959 --> 00:11:42,560
healthy healthy white list drag on the

297
00:11:42,560 --> 00:11:44,560
blacklist checklist in your web

298
00:11:44,560 --> 00:11:46,399
application so you will be protected

299
00:11:46,399 --> 00:11:47,440
properly

300
00:11:47,440 --> 00:11:48,560
so

301
00:11:48,560 --> 00:11:50,560
if you are trusting the client side

302
00:11:50,560 --> 00:11:53,040
controls uh please don't because the

303
00:11:53,040 --> 00:11:54,560
lines and controls can be bypassed at

304
00:11:54,560 --> 00:11:57,040
the bottom

305
00:11:57,120 --> 00:11:59,519
if you are not aware of the burp suit

306
00:11:59,519 --> 00:12:01,440
just download it and play with it you

307
00:12:01,440 --> 00:12:04,160
will be amazed how it will be changing

308
00:12:04,160 --> 00:12:06,079
your web application data from the front

309
00:12:06,079 --> 00:12:08,880
end so our user won't always supply

310
00:12:08,880 --> 00:12:10,639
mandatory input for example if i'm

311
00:12:10,639 --> 00:12:13,279
asking you the date of birth so date of

312
00:12:13,279 --> 00:12:14,560
birth

313
00:12:14,560 --> 00:12:18,320
might contain hyphen or slash for the

314
00:12:18,320 --> 00:12:20,320
special character list but if someone is

315
00:12:20,320 --> 00:12:23,360
putting brackets if someone is using

316
00:12:23,360 --> 00:12:25,680
dots or something else so this is the

317
00:12:25,680 --> 00:12:28,000
species right so you have to see it as

318
00:12:28,000 --> 00:12:30,800
well because you have to control the

319
00:12:30,800 --> 00:12:32,880
input validation from the front end so

320
00:12:32,880 --> 00:12:36,880
it won't be going to the back end

321
00:12:36,880 --> 00:12:38,880
all right so moving forward i would like

322
00:12:38,880 --> 00:12:42,160
to just hear an example uh that i came

323
00:12:42,160 --> 00:12:43,760
across during my tenure for doing a

324
00:12:43,760 --> 00:12:46,079
penetration testing for a bank so it was

325
00:12:46,079 --> 00:12:48,320
an oracle system for financial fraud

326
00:12:48,320 --> 00:12:51,279
management and i

327
00:12:51,279 --> 00:12:53,440
found that vulnerability i disclosed

328
00:12:53,440 --> 00:12:56,399
that vulnerability to oracle and it was

329
00:12:56,399 --> 00:12:58,560
uh properly disclosed and

330
00:12:58,560 --> 00:13:01,120
and cve number has been assigned to that

331
00:13:01,120 --> 00:13:04,000
as well in 2019 so that vulnerability

332
00:13:04,000 --> 00:13:06,880
was very simple uh there were two users

333
00:13:06,880 --> 00:13:09,040
uh one was uh

334
00:13:09,040 --> 00:13:10,959
a reporting user we only can see the

335
00:13:10,959 --> 00:13:13,120
reporting and one was the admin of the

336
00:13:13,120 --> 00:13:15,760
system right so the admin of the system

337
00:13:15,760 --> 00:13:17,200
can see the logs and all the other

338
00:13:17,200 --> 00:13:19,040
things as well while on the other hand

339
00:13:19,040 --> 00:13:21,839
uh the reporting system uh user was just

340
00:13:21,839 --> 00:13:24,079
able to see the report so what i did i

341
00:13:24,079 --> 00:13:25,839
just captured all the requests and the

342
00:13:25,839 --> 00:13:27,360
response from the

343
00:13:27,360 --> 00:13:29,279
verbs tool so there were two people if

344
00:13:29,279 --> 00:13:30,639
you can see on the left hand side and

345
00:13:30,639 --> 00:13:33,920
unless ep and any list and why so i just

346
00:13:33,920 --> 00:13:36,240
manipulate and i change the request ids

347
00:13:36,240 --> 00:13:38,720
and multiple parameters in the request

348
00:13:38,720 --> 00:13:40,639
and i'm gonna try to follow the sequence

349
00:13:40,639 --> 00:13:42,880
and i try to break the sequence how

350
00:13:42,880 --> 00:13:44,639
capturing the request from the admin

351
00:13:44,639 --> 00:13:46,800
users all the requests and playing with

352
00:13:46,800 --> 00:13:49,519
that uh with the normal user that was

353
00:13:49,519 --> 00:13:51,199
the analyst

354
00:13:51,199 --> 00:13:52,959
the reporting uh

355
00:13:52,959 --> 00:13:55,920
user so by playing multiple times

356
00:13:55,920 --> 00:13:58,320
multiple times multiple times i try to

357
00:13:58,320 --> 00:14:01,839
do that and somehow i bypass the

358
00:14:01,839 --> 00:14:06,000
and i am able to see with the analyst

359
00:14:06,000 --> 00:14:09,199
uh normal user the reporting one that

360
00:14:09,199 --> 00:14:12,800
has low privilege uh in his bucket

361
00:14:12,800 --> 00:14:16,800
so i try to just forward the request and

362
00:14:16,800 --> 00:14:19,279
i can see all the logs and all the other

363
00:14:19,279 --> 00:14:22,000
things in my system these are the new

364
00:14:22,000 --> 00:14:25,199
alerts that were dated and analyst

365
00:14:25,199 --> 00:14:28,160
we can see that analyst sc is able to

366
00:14:28,160 --> 00:14:30,240
see all the alerts so these are the

367
00:14:30,240 --> 00:14:33,199
system alerts you can use any any kind

368
00:14:33,199 --> 00:14:36,160
of search and you can uh see the logs

369
00:14:36,160 --> 00:14:37,839
and all the other things as well so this

370
00:14:37,839 --> 00:14:40,079
is the main vulnerability of this uh

371
00:14:40,079 --> 00:14:42,639
complete program that you can manipulate

372
00:14:42,639 --> 00:14:44,560
the user data from the front end and the

373
00:14:44,560 --> 00:14:46,480
server responding you without verifying

374
00:14:46,480 --> 00:14:50,800
its user identity uh that is is that

375
00:14:50,800 --> 00:14:52,560
users

376
00:14:52,560 --> 00:14:55,440
already logged in or if that is capable

377
00:14:55,440 --> 00:14:57,440
of viewing that

378
00:14:57,440 --> 00:14:59,600
or if that is already assigned to that

379
00:14:59,600 --> 00:15:02,000
user but without verifying they are just

380
00:15:02,000 --> 00:15:03,600
displaying the data so that was a

381
00:15:03,600 --> 00:15:04,959
vulnerability a very critical

382
00:15:04,959 --> 00:15:08,638
vulnerability for the bank as well

383
00:15:09,360 --> 00:15:11,040
secondly uh there was another

384
00:15:11,040 --> 00:15:13,040
application i tried to just bypass it

385
00:15:13,040 --> 00:15:15,920
without any burp without anything that

386
00:15:15,920 --> 00:15:17,600
was the logic i'll try to explain that

387
00:15:17,600 --> 00:15:20,399
but that is a very very um

388
00:15:20,399 --> 00:15:22,800
common thing that we try to do while we

389
00:15:22,800 --> 00:15:26,399
do the test and this is very very uh i'm

390
00:15:26,399 --> 00:15:28,240
might say interesting at a funny on the

391
00:15:28,240 --> 00:15:31,600
same time how uh there was a login right

392
00:15:31,600 --> 00:15:33,040
username and password we tried to put

393
00:15:33,040 --> 00:15:34,160
the username and password and the

394
00:15:34,160 --> 00:15:36,959
sequence say that it will be sending a

395
00:15:36,959 --> 00:15:39,759
otp uh just like any other banking

396
00:15:39,759 --> 00:15:42,320
applications okay so i check the uh

397
00:15:42,320 --> 00:15:44,079
sequence username and password then

398
00:15:44,079 --> 00:15:46,000
there's an otp send on my mobile number

399
00:15:46,000 --> 00:15:49,040
i forward that encode to the application

400
00:15:49,040 --> 00:15:50,959
and it's logged in so these are the

401
00:15:50,959 --> 00:15:53,600
sequence right then i try to do one more

402
00:15:53,600 --> 00:15:56,240
thing i try to just not put the original

403
00:15:56,240 --> 00:15:59,680
otp i try to uh make a request with a

404
00:15:59,680 --> 00:16:03,440
non-valid invalid request the ot so i

405
00:16:03,440 --> 00:16:05,680
tried to put the username and password

406
00:16:05,680 --> 00:16:07,920
correct when it asked for the passcode

407
00:16:07,920 --> 00:16:10,720
that is an otp uh

408
00:16:10,720 --> 00:16:13,120
i try to put zero zero zero zero one two

409
00:16:13,120 --> 00:16:14,720
three four five six seven

410
00:16:14,720 --> 00:16:17,120
or any random number that i like but it

411
00:16:17,120 --> 00:16:19,839
says invalid passcode and it when we

412
00:16:19,839 --> 00:16:22,000
press ok it redirect back to the

413
00:16:22,000 --> 00:16:23,680
username and password field as you can

414
00:16:23,680 --> 00:16:26,240
see on the uh third image and the bottom

415
00:16:26,240 --> 00:16:28,800
one b pentas one and the password

416
00:16:28,800 --> 00:16:30,320
something something

417
00:16:30,320 --> 00:16:32,639
now when i press the login it doesn't

418
00:16:32,639 --> 00:16:35,199
check the odb and it just opened my bank

419
00:16:35,199 --> 00:16:38,320
account so the sequence it when you when

420
00:16:38,320 --> 00:16:40,560
you put the username and password and it

421
00:16:40,560 --> 00:16:43,440
asks for the otp you put the wrong otp

422
00:16:43,440 --> 00:16:46,720
it says invalid passcode you just press

423
00:16:46,720 --> 00:16:48,639
ok go back to the login screen for the

424
00:16:48,639 --> 00:16:50,560
username and password once again and it

425
00:16:50,560 --> 00:16:54,079
won't be asking you otp again boom so

426
00:16:54,079 --> 00:16:57,279
the check was checked for the otp once

427
00:16:57,279 --> 00:16:59,920
but it was not checking the otp every

428
00:16:59,920 --> 00:17:01,360
time i'm providing the username and

429
00:17:01,360 --> 00:17:03,040
password so this was a very interesting

430
00:17:03,040 --> 00:17:05,760
and funny on the same

431
00:17:05,760 --> 00:17:08,959
time very very very interesting finding

432
00:17:08,959 --> 00:17:10,400
for us as well because we were not

433
00:17:10,400 --> 00:17:12,799
expecting it we were trying to just fire

434
00:17:12,799 --> 00:17:14,240
up our burp suit and all the other

435
00:17:14,240 --> 00:17:16,000
things to test the web application for

436
00:17:16,000 --> 00:17:18,400
this bypass but somehow

437
00:17:18,400 --> 00:17:19,919
uh we never

438
00:17:19,919 --> 00:17:23,199
burn our burp shoot either so we we just

439
00:17:23,199 --> 00:17:26,240
found it so sometimes what happens you

440
00:17:26,240 --> 00:17:28,079
find the vulnerabilities that are on

441
00:17:28,079 --> 00:17:30,320
your way that are not that much hidden

442
00:17:30,320 --> 00:17:31,600
but we

443
00:17:31,600 --> 00:17:33,200
neglect them because

444
00:17:33,200 --> 00:17:34,960
we think these are

445
00:17:34,960 --> 00:17:37,440
very very low hanging fruits but

446
00:17:37,440 --> 00:17:40,080
trust me check everything

447
00:17:40,080 --> 00:17:43,039
follow every sequence and do anything

448
00:17:43,039 --> 00:17:44,960
you want to do with the application

449
00:17:44,960 --> 00:17:46,720
you'd never know which thing will be

450
00:17:46,720 --> 00:17:48,160
exploited and which thing will be

451
00:17:48,160 --> 00:17:49,760
bypassed

452
00:17:49,760 --> 00:17:51,520
so moving forward to another financial

453
00:17:51,520 --> 00:17:52,880
application that was the internet

454
00:17:52,880 --> 00:17:55,600
banking system i try to bypass the otp

455
00:17:55,600 --> 00:17:57,039
here as well

456
00:17:57,039 --> 00:17:59,760
how i try to capture every and response

457
00:17:59,760 --> 00:18:00,960
from the server to the machine and

458
00:18:00,960 --> 00:18:03,120
mercedes server and i put it in a

459
00:18:03,120 --> 00:18:05,039
notepad a sequence of the notepad uh

460
00:18:05,039 --> 00:18:07,200
there were 20 30 note pairs i if i

461
00:18:07,200 --> 00:18:09,200
remember are tabs on the notepad plus

462
00:18:09,200 --> 00:18:10,960
plus so i try to capture every request

463
00:18:10,960 --> 00:18:12,240
in the response that house are

464
00:18:12,240 --> 00:18:14,880
responsing on every request i'm making

465
00:18:14,880 --> 00:18:16,960
to the server so this is the key point

466
00:18:16,960 --> 00:18:18,880
you have to keep everything with along

467
00:18:18,880 --> 00:18:21,600
with you um you never know with work and

468
00:18:21,600 --> 00:18:23,440
which will not work so in this

469
00:18:23,440 --> 00:18:25,760
particular example what we did we try to

470
00:18:25,760 --> 00:18:27,760
put the username and password as always

471
00:18:27,760 --> 00:18:28,960
are correct

472
00:18:28,960 --> 00:18:31,679
it's then the otp right so what we did

473
00:18:31,679 --> 00:18:34,000
uh we checked the server response we put

474
00:18:34,000 --> 00:18:36,240
the correct otp for example there's a

475
00:18:36,240 --> 00:18:39,200
highlighted dnn uh text otp underscore

476
00:18:39,200 --> 00:18:40,960
text four one three

477
00:18:40,960 --> 00:18:43,360
three four two you see the otp right so

478
00:18:43,360 --> 00:18:45,760
this is an otp we put that and we

479
00:18:45,760 --> 00:18:49,280
observe that the server is sending the

480
00:18:49,280 --> 00:18:51,840
page redirect something something and

481
00:18:51,840 --> 00:18:53,520
home.aspx

482
00:18:53,520 --> 00:18:56,480
so this is a valid credentials valid otp

483
00:18:56,480 --> 00:18:58,720
and a valid response from the server so

484
00:18:58,720 --> 00:19:01,679
what i did i try to just copy it and

485
00:19:01,679 --> 00:19:04,080
save it in my file so i can see how

486
00:19:04,080 --> 00:19:06,720
server is sponsoring responding when i'm

487
00:19:06,720 --> 00:19:09,200
putting valid things

488
00:19:09,200 --> 00:19:11,520
then i try to change something uh in the

489
00:19:11,520 --> 00:19:13,760
next request and respond what i did i

490
00:19:13,760 --> 00:19:17,120
just put uh invalid otp so let's have a

491
00:19:17,120 --> 00:19:18,960
look at that as well on the left hand

492
00:19:18,960 --> 00:19:22,240
side the topic screen uh

493
00:19:22,240 --> 00:19:23,760
you can see that i put the username and

494
00:19:23,760 --> 00:19:25,440
password and then ot

495
00:19:25,440 --> 00:19:27,760
uh incorrect otp by the way so the

496
00:19:27,760 --> 00:19:30,799
response for provided otp is incorrect

497
00:19:30,799 --> 00:19:33,600
so server responding that the otp that i

498
00:19:33,600 --> 00:19:35,840
put was incorrect and it was not

499
00:19:35,840 --> 00:19:38,080
bypassing uh to the dashboard of the

500
00:19:38,080 --> 00:19:40,640
home screen so what i did remember i

501
00:19:40,640 --> 00:19:42,480
just saved a valid response from the

502
00:19:42,480 --> 00:19:44,400
server in the previous request i just

503
00:19:44,400 --> 00:19:46,720
copy and paste that request in the

504
00:19:46,720 --> 00:19:49,760
response in the burp suit and forward it

505
00:19:49,760 --> 00:19:52,640
and the server without checking the user

506
00:19:52,640 --> 00:19:54,720
it just observed that the section is

507
00:19:54,720 --> 00:19:56,960
valid so it showed me the dashboard of

508
00:19:56,960 --> 00:19:59,600
the phone screen so i can see the home

509
00:19:59,600 --> 00:20:01,039
screen and the dashboard on the right

510
00:20:01,039 --> 00:20:04,559
hand side so this is how i bypass this

511
00:20:04,559 --> 00:20:08,080
third application by just following and

512
00:20:08,080 --> 00:20:10,240
breaking the sequence and just copy and

513
00:20:10,240 --> 00:20:12,240
pasting so the page over here is once

514
00:20:12,240 --> 00:20:14,960
again copy every request and response

515
00:20:14,960 --> 00:20:16,400
you are making against the web

516
00:20:16,400 --> 00:20:18,080
application you never know which one

517
00:20:18,080 --> 00:20:20,880
will work so

518
00:20:20,880 --> 00:20:23,120
security design flaws we all know that

519
00:20:23,120 --> 00:20:24,480
business logic flow arise from the

520
00:20:24,480 --> 00:20:26,480
security device law because the logics

521
00:20:26,480 --> 00:20:28,720
are failed that the design is failed so

522
00:20:28,720 --> 00:20:30,880
there is a business very close and where

523
00:20:30,880 --> 00:20:32,320
are we lacking so you remember the

524
00:20:32,320 --> 00:20:34,559
example previous example i did uh with

525
00:20:34,559 --> 00:20:36,720
the second application i just bypassed

526
00:20:36,720 --> 00:20:38,960
the otp by just putting wrong and going

527
00:20:38,960 --> 00:20:41,120
back and log enemy

528
00:20:41,120 --> 00:20:42,960
this particular image is from the ports

529
00:20:42,960 --> 00:20:45,520
for your website and it's showing the

530
00:20:45,520 --> 00:20:48,000
same thing attempt one you went valid

531
00:20:48,000 --> 00:20:49,919
attempt to password invalid you know

532
00:20:49,919 --> 00:20:52,480
password invalid with m3 bypass boom you

533
00:20:52,480 --> 00:20:54,000
are into the database or that much you

534
00:20:54,000 --> 00:20:55,760
know the system application anywhere you

535
00:20:55,760 --> 00:20:56,480
want

536
00:20:56,480 --> 00:20:58,400
so we have to focus on the design clause

537
00:20:58,400 --> 00:21:00,240
as well if we are talking about that

538
00:21:00,240 --> 00:21:02,159
methodology is to test your application

539
00:21:02,159 --> 00:21:05,120
see in the first few slides i say no

540
00:21:05,120 --> 00:21:07,039
static or the dynamic scanner can work

541
00:21:07,039 --> 00:21:09,280
for the business logic law so how we

542
00:21:09,280 --> 00:21:11,760
gonna test it how we do it so there are

543
00:21:11,760 --> 00:21:13,200
a few things that you can use for the

544
00:21:13,200 --> 00:21:15,840
burps tool the fourth thing is automatic

545
00:21:15,840 --> 00:21:17,760
there's a plugin available for the burp

546
00:21:17,760 --> 00:21:20,159
suit you can download it you can use it

547
00:21:20,159 --> 00:21:22,159
and you can just repeat the workflow

548
00:21:22,159 --> 00:21:23,679
with the different user groups and the

549
00:21:23,679 --> 00:21:26,720
role i personally will uh

550
00:21:26,720 --> 00:21:28,559
give you the

551
00:21:28,559 --> 00:21:30,559
guide for that as well in the upcoming

552
00:21:30,559 --> 00:21:33,120
slide but uh over here i just would want

553
00:21:33,120 --> 00:21:35,760
to uh include a thought that whenever

554
00:21:35,760 --> 00:21:38,480
you are trying to test an application

555
00:21:38,480 --> 00:21:40,720
just take three or four different roles

556
00:21:40,720 --> 00:21:44,320
user along with you and just check them

557
00:21:44,320 --> 00:21:47,200
uh vice versa across them as well

558
00:21:47,200 --> 00:21:50,240
so what to look in source code

559
00:21:50,240 --> 00:21:52,720
um you just have to divide and model the

560
00:21:52,720 --> 00:21:55,120
workflow that will help you a lot a lot

561
00:21:55,120 --> 00:21:57,679
because a smaller application will work

562
00:21:57,679 --> 00:22:00,320
but if you're talking about the

563
00:22:00,320 --> 00:22:02,720
large scale application the erp system

564
00:22:02,720 --> 00:22:04,799
and these kind of things so you have to

565
00:22:04,799 --> 00:22:06,720
divide and model your workflow to

566
00:22:06,720 --> 00:22:09,440
identify where controls were carried out

567
00:22:09,440 --> 00:22:11,200
and where they are not carried out and

568
00:22:11,200 --> 00:22:13,200
how much access you need to get someone

569
00:22:13,200 --> 00:22:16,799
or how much the access a specific group

570
00:22:16,799 --> 00:22:20,080
needs so you have to be very particular

571
00:22:20,080 --> 00:22:22,320
what business rules process are doing

572
00:22:22,320 --> 00:22:25,360
what is supposed to do basically you

573
00:22:25,360 --> 00:22:26,640
have to

574
00:22:26,640 --> 00:22:28,320
gather all the information understanding

575
00:22:28,320 --> 00:22:30,559
of the url any kind of application then

576
00:22:30,559 --> 00:22:33,120
how it is working then you can secure it

577
00:22:33,120 --> 00:22:35,760
right so if you talk about the what you

578
00:22:35,760 --> 00:22:37,440
have to ask if you are a developer if

579
00:22:37,440 --> 00:22:38,799
you're a cu if you're a security

580
00:22:38,799 --> 00:22:42,080
consultant if you are a design designer

581
00:22:42,080 --> 00:22:43,600
for the application you are the

582
00:22:43,600 --> 00:22:46,000
architect of the application you have to

583
00:22:46,000 --> 00:22:48,159
be very particular about these things

584
00:22:48,159 --> 00:22:49,919
how by what means you are getting the

585
00:22:49,919 --> 00:22:52,000
data when how often for how long you are

586
00:22:52,000 --> 00:22:53,520
obtaining the data or you are sending

587
00:22:53,520 --> 00:22:56,000
the data out where to variant from where

588
00:22:56,000 --> 00:22:57,600
from where the data is coming to where

589
00:22:57,600 --> 00:22:59,360
the data is going and who is sending the

590
00:22:59,360 --> 00:23:01,679
data for how much time taxes will be

591
00:23:01,679 --> 00:23:04,720
granted towards what with what whom from

592
00:23:04,720 --> 00:23:07,360
room to room with room for whom from

593
00:23:07,360 --> 00:23:08,880
where you are getting the data you are

594
00:23:08,880 --> 00:23:10,880
processing the data you are struggling

595
00:23:10,880 --> 00:23:13,760
the data in the database

596
00:23:13,760 --> 00:23:15,520
storing for the temporary purpose then

597
00:23:15,520 --> 00:23:17,120
you are moving from the temp folder or

598
00:23:17,120 --> 00:23:18,880
something and if you are deleting from

599
00:23:18,880 --> 00:23:21,120
the term why and how they are being

600
00:23:21,120 --> 00:23:23,760
carried out so there are thousands of

601
00:23:23,760 --> 00:23:25,200
questions that you can create the

602
00:23:25,200 --> 00:23:26,720
thousand of questions you can ask to the

603
00:23:26,720 --> 00:23:28,400
business owner or the application owner

604
00:23:28,400 --> 00:23:30,880
or the infrastructure owner as well so

605
00:23:30,880 --> 00:23:33,440
you have to ask a lot of things before

606
00:23:33,440 --> 00:23:36,080
going for a launch of the product so

607
00:23:36,080 --> 00:23:37,840
thank you very much everyone for your

608
00:23:37,840 --> 00:23:39,840
time and i'll see you in the next

609
00:23:39,840 --> 00:23:42,720
session in coming years um this is the

610
00:23:42,720 --> 00:23:44,720
thing that you have to focus the

611
00:23:44,720 --> 00:23:47,279
business logic flaws these are the main

612
00:23:47,279 --> 00:23:49,360
key components of your web application

613
00:23:49,360 --> 00:23:51,360
where you like the most because you

614
00:23:51,360 --> 00:23:52,960
secure that skill injection you secure

615
00:23:52,960 --> 00:23:55,679
the accessories but you are focusing on

616
00:23:55,679 --> 00:23:57,600
the logics of your web application or

617
00:23:57,600 --> 00:23:59,440
any kind of presentation

618
00:23:59,440 --> 00:24:01,039
thank you very much everyone for your

619
00:24:01,039 --> 00:24:03,440
time and i'll see you around thank you

620
00:24:03,440 --> 00:24:05,840
bye

621
00:24:26,960 --> 00:24:29,039
you

