1
00:00:04,480 --> 00:00:05,839
hello everyone

2
00:00:05,839 --> 00:00:08,080
thank you for joining the session

3
00:00:08,080 --> 00:00:10,320
today i will be demonstrating two things

4
00:00:10,320 --> 00:00:14,080
which can actually help us to bypass

5
00:00:14,080 --> 00:00:16,560
detection when we are trying to upload

6
00:00:16,560 --> 00:00:20,080
web shell or when we have arbitrary code

7
00:00:20,080 --> 00:00:22,720
execution vulnerability on the server so

8
00:00:22,720 --> 00:00:25,039
there is a previous assumption

9
00:00:25,039 --> 00:00:27,680
that web application or target web

10
00:00:27,680 --> 00:00:30,560
server is actually vulnerable to file

11
00:00:30,560 --> 00:00:32,719
upload or codec equation

12
00:00:32,719 --> 00:00:34,399
the thing is when we are trying to

13
00:00:34,399 --> 00:00:37,120
upload a web shell or when we are trying

14
00:00:37,120 --> 00:00:37,840
to

15
00:00:37,840 --> 00:00:40,160
perform code execution in that case web

16
00:00:40,160 --> 00:00:42,160
application firewall is detecting our

17
00:00:42,160 --> 00:00:44,480
payload and saying no you are not

18
00:00:44,480 --> 00:00:45,440
allowed

19
00:00:45,440 --> 00:00:48,000
so how to tackle that situation because

20
00:00:48,000 --> 00:00:50,719
we know once we have identified there is

21
00:00:50,719 --> 00:00:53,360
a file upload issue or there is code

22
00:00:53,360 --> 00:00:55,360
education issue we just don't want to

23
00:00:55,360 --> 00:00:57,600
give up because that's a gold mine

24
00:00:57,600 --> 00:00:58,719
because

25
00:00:58,719 --> 00:01:01,760
once we get the foothold we can do post

26
00:01:01,760 --> 00:01:04,159
exploitation and other thing so how to

27
00:01:04,159 --> 00:01:06,240
tackle this type of thing i will be

28
00:01:06,240 --> 00:01:09,920
demonstrating using few tricks

29
00:01:10,479 --> 00:01:11,360
so

30
00:01:11,360 --> 00:01:13,600
my name is manish and i am working at

31
00:01:13,600 --> 00:01:15,119
mdsec

32
00:01:15,119 --> 00:01:17,040
mostly i am just

33
00:01:17,040 --> 00:01:19,759
fantastic web applications network infra

34
00:01:19,759 --> 00:01:22,240
that's all

35
00:01:23,840 --> 00:01:25,680
so before starting

36
00:01:25,680 --> 00:01:28,159
just want to introduce what is web so

37
00:01:28,159 --> 00:01:30,560
web application firewall is well known

38
00:01:30,560 --> 00:01:33,600
and nowadays almost every company every

39
00:01:33,600 --> 00:01:35,119
organization is

40
00:01:35,119 --> 00:01:37,759
putting web in front of a web server

41
00:01:37,759 --> 00:01:39,360
just to

42
00:01:39,360 --> 00:01:41,600
provide an extra layer of security so

43
00:01:41,600 --> 00:01:42,640
it's like

44
00:01:42,640 --> 00:01:43,680
for

45
00:01:43,680 --> 00:01:45,200
most of the attacks

46
00:01:45,200 --> 00:01:46,399
it's just

47
00:01:46,399 --> 00:01:48,399
defending web server against those

48
00:01:48,399 --> 00:01:49,680
things

49
00:01:49,680 --> 00:01:51,759
it actually inspects the traffic

50
00:01:51,759 --> 00:01:53,920
it recognize whether it is malicious

51
00:01:53,920 --> 00:01:56,960
traffic or not by using some signatures

52
00:01:56,960 --> 00:02:00,000
and if it is uh malicious but it's just

53
00:02:00,000 --> 00:02:02,399
dropping the traffic

54
00:02:02,399 --> 00:02:05,360
and the best thing about work is if we

55
00:02:05,360 --> 00:02:08,000
are having good hold we can write our

56
00:02:08,000 --> 00:02:10,080
own rules we can write our own signature

57
00:02:10,080 --> 00:02:13,440
to identify the attacks and we can even

58
00:02:13,440 --> 00:02:15,520
write signatures to detect zero data

59
00:02:15,520 --> 00:02:18,080
attacks so let's say if

60
00:02:18,080 --> 00:02:19,040
when

61
00:02:19,040 --> 00:02:20,879
log4j

62
00:02:20,879 --> 00:02:22,879
was discovered so people started

63
00:02:22,879 --> 00:02:26,080
developing signatures just to prevent

64
00:02:26,080 --> 00:02:29,040
uh their server from uh low 4g

65
00:02:29,040 --> 00:02:30,319
vulnerability

66
00:02:30,319 --> 00:02:34,000
attack so this is the thing you can

67
00:02:34,000 --> 00:02:38,400
say like braf is all about this thing

68
00:02:39,440 --> 00:02:41,280
so

69
00:02:41,280 --> 00:02:43,840
in presentation i will be demonstrating

70
00:02:43,840 --> 00:02:44,879
few things

71
00:02:44,879 --> 00:02:47,360
and those things are

72
00:02:47,360 --> 00:02:49,200
first step when we are trying to upload

73
00:02:49,200 --> 00:02:51,840
a web shell the web application firewall

74
00:02:51,840 --> 00:02:54,800
is detecting okay this traffic is

75
00:02:54,800 --> 00:02:56,800
actually containing web shell dropping

76
00:02:56,800 --> 00:02:59,519
the request how to bypass that one

77
00:02:59,519 --> 00:03:01,840
second scenario is let's say we manage

78
00:03:01,840 --> 00:03:03,920
to bypass

79
00:03:03,920 --> 00:03:06,239
the first scenario and

80
00:03:06,239 --> 00:03:08,400
we have uploaded web shell we are we are

81
00:03:08,400 --> 00:03:10,159
trying to access it but again web

82
00:03:10,159 --> 00:03:12,080
application firewall is saying okay you

83
00:03:12,080 --> 00:03:14,239
manage to upload web shell but i have

84
00:03:14,239 --> 00:03:17,440
recognized this is web shell please stop

85
00:03:17,440 --> 00:03:20,159
and third one is let's say

86
00:03:20,159 --> 00:03:22,560
we have managed to bypass scenario one

87
00:03:22,560 --> 00:03:24,159
scenario two

88
00:03:24,159 --> 00:03:25,599
when we are performing something let's

89
00:03:25,599 --> 00:03:27,360
say we are trying to execute command we

90
00:03:27,360 --> 00:03:29,120
are trying to browse some directory we

91
00:03:29,120 --> 00:03:31,040
are trying to do something which is

92
00:03:31,040 --> 00:03:34,560
actually the sole purpose of a web shell

93
00:03:34,560 --> 00:03:36,080
in that case

94
00:03:36,080 --> 00:03:38,159
if web application is saying

95
00:03:38,159 --> 00:03:40,000
okay you have managed to upload web

96
00:03:40,000 --> 00:03:42,480
shelf i was not able to figure it out

97
00:03:42,480 --> 00:03:44,879
but now you are trying to do something

98
00:03:44,879 --> 00:03:46,799
which actually i can recognize that it

99
00:03:46,799 --> 00:03:47,599
is

100
00:03:47,599 --> 00:03:49,920
uh related to web shell so you are

101
00:03:49,920 --> 00:03:50,879
blocked

102
00:03:50,879 --> 00:03:53,200
so how to bypass these things

103
00:03:53,200 --> 00:03:56,159
when we have rc1 rebuilt on the server

104
00:03:56,159 --> 00:04:00,400
so let's start with the first one

105
00:04:00,400 --> 00:04:01,760
so i am just

106
00:04:01,760 --> 00:04:04,239
considering the case of php

107
00:04:04,239 --> 00:04:08,239
similar things we can do in jsp or asp

108
00:04:08,239 --> 00:04:10,159
or any other programming language we

109
00:04:10,159 --> 00:04:12,319
just need to figure out the dots

110
00:04:12,319 --> 00:04:14,239
and we just need to connect but things

111
00:04:14,239 --> 00:04:16,000
will be similar so let's say when we are

112
00:04:16,000 --> 00:04:17,839
trying to upload a web shell

113
00:04:17,839 --> 00:04:19,759
so how actually

114
00:04:19,759 --> 00:04:21,120
web application firewall will be

115
00:04:21,120 --> 00:04:22,479
detecting

116
00:04:22,479 --> 00:04:23,759
so just

117
00:04:23,759 --> 00:04:25,680
uh this is the fact web application

118
00:04:25,680 --> 00:04:29,120
firewalls are all about keywords

119
00:04:29,120 --> 00:04:31,520
signature pattern

120
00:04:31,520 --> 00:04:34,320
what we are going to do we just going to

121
00:04:34,320 --> 00:04:36,880
do something fireball will be confused

122
00:04:36,880 --> 00:04:38,240
it won't be able to recognize the

123
00:04:38,240 --> 00:04:39,280
pattern

124
00:04:39,280 --> 00:04:40,400
so

125
00:04:40,400 --> 00:04:45,440
everyone is aware of c99 r57 b37 4k

126
00:04:45,440 --> 00:04:47,520
i'm not going to use them

127
00:04:47,520 --> 00:04:49,120
in first stage

128
00:04:49,120 --> 00:04:50,639
why because

129
00:04:50,639 --> 00:04:53,520
that code base is huge if i'm going to

130
00:04:53,520 --> 00:04:55,040
record it if i'm going to change

131
00:04:55,040 --> 00:04:57,120
everything it will take ages

132
00:04:57,120 --> 00:04:59,919
plus i'm not sure what which part of web

133
00:04:59,919 --> 00:05:01,840
shell is actually getting detected so i

134
00:05:01,840 --> 00:05:03,919
will be using some other tricks

135
00:05:03,919 --> 00:05:04,960
so let's say

136
00:05:04,960 --> 00:05:07,120
in this case

137
00:05:07,120 --> 00:05:08,320
first of all

138
00:05:08,320 --> 00:05:11,440
just want to highlight a few things

139
00:05:11,440 --> 00:05:14,320
in php then we are saying system and

140
00:05:14,320 --> 00:05:15,840
then command

141
00:05:15,840 --> 00:05:17,600
we can actually write it like this as

142
00:05:17,600 --> 00:05:18,880
well

143
00:05:18,880 --> 00:05:20,320
we can actually

144
00:05:20,320 --> 00:05:21,280
take

145
00:05:21,280 --> 00:05:24,960
system function in this one and then

146
00:05:32,400 --> 00:05:35,039
so people may say okay this is simple

147
00:05:35,039 --> 00:05:37,039
thing we can detect it like

148
00:05:37,039 --> 00:05:40,039
system.assist.com

149
00:05:40,160 --> 00:05:43,120
but no there is more if you want to make

150
00:05:43,120 --> 00:05:46,080
it more complicated we can so let's say

151
00:05:46,080 --> 00:05:47,440
if i say

152
00:05:47,440 --> 00:05:49,280
stream reverse

153
00:05:49,280 --> 00:05:50,160
then

154
00:05:50,160 --> 00:05:53,360
system so i have written system in

155
00:05:53,360 --> 00:05:56,639
reverse and then passing this keyword to

156
00:05:56,639 --> 00:05:58,000
str

157
00:05:58,000 --> 00:06:00,000
rev which is actually going to reverse

158
00:06:00,000 --> 00:06:01,199
it

159
00:06:01,199 --> 00:06:03,280
and then i am going to say okay use this

160
00:06:03,280 --> 00:06:05,919
one so again if you want to make it more

161
00:06:05,919 --> 00:06:08,720
complicated you can do string replace or

162
00:06:08,720 --> 00:06:11,039
other thing so there is no way you can

163
00:06:11,039 --> 00:06:14,000
simply write some uh graph signature to

164
00:06:14,000 --> 00:06:17,360
detect this type of pattern

165
00:06:17,840 --> 00:06:18,880
but

166
00:06:18,880 --> 00:06:21,440
i want to load a full web shell

167
00:06:21,440 --> 00:06:25,840
and how to do that without uploading

168
00:06:26,000 --> 00:06:29,280
so i just came up with this idea

169
00:06:29,280 --> 00:06:30,720
i'm not going to upload a website

170
00:06:30,720 --> 00:06:33,120
directly but i will upload a shell

171
00:06:33,120 --> 00:06:36,160
which will call another web shell

172
00:06:36,160 --> 00:06:39,120
will hold the content of that web shell

173
00:06:39,120 --> 00:06:41,199
in session variable and then will

174
00:06:41,199 --> 00:06:42,479
evaluate it

175
00:06:42,479 --> 00:06:44,000
because

176
00:06:44,000 --> 00:06:46,639
using this trick we are actually

177
00:06:46,639 --> 00:06:48,639
not uploading web shell

178
00:06:48,639 --> 00:06:50,639
but we are uploading a code which is not

179
00:06:50,639 --> 00:06:52,319
detectable and

180
00:06:52,319 --> 00:06:54,720
using this code we are saying okay code

181
00:06:54,720 --> 00:06:56,800
please fetch the webshell from this url

182
00:06:56,800 --> 00:06:59,520
hold it in session variable and execute

183
00:06:59,520 --> 00:07:03,120
it so it will be like till the moment we

184
00:07:03,120 --> 00:07:04,319
are

185
00:07:04,319 --> 00:07:06,560
using our web browser the web shell is

186
00:07:06,560 --> 00:07:08,560
accessible the moment we are going to

187
00:07:08,560 --> 00:07:10,000
say okay

188
00:07:10,000 --> 00:07:12,000
session end that person will be deleted

189
00:07:12,000 --> 00:07:13,199
from server

190
00:07:13,199 --> 00:07:15,520
antivirus is going to scan this file

191
00:07:15,520 --> 00:07:18,400
nothing is there it's not malicious

192
00:07:18,400 --> 00:07:21,919
so this is something which we can use

193
00:07:21,919 --> 00:07:23,440
to bypass

194
00:07:23,440 --> 00:07:25,919
detection phase 1 when we are uploading

195
00:07:25,919 --> 00:07:27,120
a web shell

196
00:07:27,120 --> 00:07:28,240
so this is

197
00:07:28,240 --> 00:07:30,479
smallest code and you can load full web

198
00:07:30,479 --> 00:07:32,719
shell

199
00:07:34,000 --> 00:07:36,560
so you just need to specify the url

200
00:07:36,560 --> 00:07:38,560
and just click the button it will load

201
00:07:38,560 --> 00:07:40,720
the shell this interface will be changed

202
00:07:40,720 --> 00:07:44,520
into the full web shell

203
00:07:45,840 --> 00:07:47,680
second thing is let's say

204
00:07:47,680 --> 00:07:49,599
when we have uploaded a web shell now

205
00:07:49,599 --> 00:07:51,280
the thing is when

206
00:07:51,280 --> 00:07:53,840
this web shell has been uploaded

207
00:07:53,840 --> 00:07:56,400
so there is a uh rule in web application

208
00:07:56,400 --> 00:07:58,639
firewall it's like it's inspecting the

209
00:07:58,639 --> 00:08:00,720
outgoing traffic so let's say uh

210
00:08:00,720 --> 00:08:03,759
whatever the http response is it is just

211
00:08:03,759 --> 00:08:06,720
inspecting whether it is some php source

212
00:08:06,720 --> 00:08:09,599
code or some file which is leaking some

213
00:08:09,599 --> 00:08:11,360
data so

214
00:08:11,360 --> 00:08:13,039
in that case this webshop can be

215
00:08:13,039 --> 00:08:14,160
detected

216
00:08:14,160 --> 00:08:16,240
because of the presence of the keywords

217
00:08:16,240 --> 00:08:18,960
so let's say if c99 keyword is present

218
00:08:18,960 --> 00:08:20,879
in http response it is going to get

219
00:08:20,879 --> 00:08:23,520
detected so this rule is actually not

220
00:08:23,520 --> 00:08:26,240
good one and you can bypass it easily by

221
00:08:26,240 --> 00:08:29,360
just changing by just performing

222
00:08:29,360 --> 00:08:31,680
control f

223
00:08:31,680 --> 00:08:33,919
shall replace it with

224
00:08:33,919 --> 00:08:35,679
sh3

225
00:08:35,679 --> 00:08:37,919
double l so let's say in this key in

226
00:08:37,919 --> 00:08:40,880
this scenario when i try to access a web

227
00:08:40,880 --> 00:08:41,679
shell

228
00:08:41,679 --> 00:08:45,279
containing keyword dp740 in title so

229
00:08:45,279 --> 00:08:48,160
this mod security

230
00:08:48,160 --> 00:08:49,920
firewall actually triggered and said

231
00:08:49,920 --> 00:08:52,000
okay this request has been blocked

232
00:08:52,000 --> 00:08:53,360
because it

233
00:08:53,360 --> 00:08:55,760
a keyword which has been flagged so this

234
00:08:55,760 --> 00:08:58,560
was uh this

235
00:08:58,560 --> 00:09:00,560
log is actually the same

236
00:09:00,560 --> 00:09:01,839
it's been blocked because of the

237
00:09:01,839 --> 00:09:04,080
presence of this keyword we can bypass

238
00:09:04,080 --> 00:09:06,240
this rule easily by just changing the

239
00:09:06,240 --> 00:09:07,600
keywords in

240
00:09:07,600 --> 00:09:08,640
web shell

241
00:09:08,640 --> 00:09:10,320
but i will be showing something

242
00:09:10,320 --> 00:09:12,560
different we need not to do because we

243
00:09:12,560 --> 00:09:14,399
are not going to modify web shell

244
00:09:14,399 --> 00:09:16,240
completely we will be doing some other

245
00:09:16,240 --> 00:09:21,399
things to avoid all this type of thing

246
00:09:22,000 --> 00:09:23,839
the moment i change

247
00:09:23,839 --> 00:09:26,480
the word b37 4k with box

248
00:09:26,480 --> 00:09:28,660
it's accessible

249
00:09:28,660 --> 00:09:30,720
[Music]

250
00:09:30,720 --> 00:09:32,160
now

251
00:09:32,160 --> 00:09:34,560
this one is little bit interesting this

252
00:09:34,560 --> 00:09:37,839
is something which is uh

253
00:09:37,839 --> 00:09:39,839
simply can't be done without knowledge

254
00:09:39,839 --> 00:09:42,480
of uh programming but this is uh the

255
00:09:42,480 --> 00:09:44,480
good one so it's let's say web

256
00:09:44,480 --> 00:09:47,440
application firewall has

257
00:09:47,440 --> 00:09:49,519
has been bypassed in scenario one and

258
00:09:49,519 --> 00:09:50,640
two

259
00:09:50,640 --> 00:09:51,600
now

260
00:09:51,600 --> 00:09:53,920
when we are trying to

261
00:09:53,920 --> 00:09:56,160
execute os command when we are trying to

262
00:09:56,160 --> 00:09:58,320
download a file when we are trying to do

263
00:09:58,320 --> 00:10:00,480
some other thing so in that case

264
00:10:00,480 --> 00:10:02,160
whatever we are doing through that web

265
00:10:02,160 --> 00:10:04,800
shell interface it is actually

266
00:10:04,800 --> 00:10:07,519
making http request and it is containing

267
00:10:07,519 --> 00:10:10,320
those commands directory name file name

268
00:10:10,320 --> 00:10:13,519
or the data is present in http response

269
00:10:13,519 --> 00:10:15,839
in that case firewall is saying hold on

270
00:10:15,839 --> 00:10:17,200
loop

271
00:10:17,200 --> 00:10:20,240
you have been come so far but i know i

272
00:10:20,240 --> 00:10:22,079
know these things these are something

273
00:10:22,079 --> 00:10:24,560
which is malicious and whenever we are

274
00:10:24,560 --> 00:10:26,560
trying to execute command it's saying no

275
00:10:26,560 --> 00:10:27,519
no no

276
00:10:27,519 --> 00:10:29,839
so we have managed to upload webshell

277
00:10:29,839 --> 00:10:32,000
but it is actually

278
00:10:32,000 --> 00:10:34,079
not of any use because of

279
00:10:34,079 --> 00:10:35,519
the thing

280
00:10:35,519 --> 00:10:38,000
the moment we are executing command it's

281
00:10:38,000 --> 00:10:40,000
getting recognized by web

282
00:10:40,000 --> 00:10:42,079
so what's the deal

283
00:10:42,079 --> 00:10:44,319
now

284
00:10:44,560 --> 00:10:46,800
in this case

285
00:10:46,800 --> 00:10:49,040
when i have uh uploaded web shell and

286
00:10:49,040 --> 00:10:50,959
try to execute command

287
00:10:50,959 --> 00:10:52,560
it actually detect it

288
00:10:52,560 --> 00:10:54,880
because of the presence of

289
00:10:54,880 --> 00:10:56,959
cat itc passwd or something like that

290
00:10:56,959 --> 00:10:59,200
and if you have a look on the rule it

291
00:10:59,200 --> 00:11:01,279
will say it's a command execution or

292
00:11:01,279 --> 00:11:03,680
something like that so every time graph

293
00:11:03,680 --> 00:11:05,120
will be triggered

294
00:11:05,120 --> 00:11:08,560
so how to tackle this one

295
00:11:09,360 --> 00:11:12,160
in this case when i try to access a file

296
00:11:12,160 --> 00:11:14,480
in etc directory that case it was

297
00:11:14,480 --> 00:11:17,040
triggered so first one was because of

298
00:11:17,040 --> 00:11:19,760
command this one is because of the

299
00:11:19,760 --> 00:11:21,200
directory

300
00:11:21,200 --> 00:11:22,320
i am trying to

301
00:11:22,320 --> 00:11:24,480
access so

302
00:11:24,480 --> 00:11:28,920
again we are in dead end

303
00:11:30,959 --> 00:11:32,880
this is the case when i try to download

304
00:11:32,880 --> 00:11:34,000
a file

305
00:11:34,000 --> 00:11:36,720
so when i try to download a file so it

306
00:11:36,720 --> 00:11:39,680
the content was in http response so web

307
00:11:39,680 --> 00:11:41,760
application firewall just not just

308
00:11:41,760 --> 00:11:43,600
inspect the incoming traffic it also

309
00:11:43,600 --> 00:11:45,680
inspect outgoing traffic as well so in

310
00:11:45,680 --> 00:11:48,160
this case this uh outgoing traffic

311
00:11:48,160 --> 00:11:51,200
firewall rule triggered and it said no

312
00:11:51,200 --> 00:11:52,560
you cannot download it because it

313
00:11:52,560 --> 00:11:54,880
contain some php source code

314
00:11:54,880 --> 00:11:55,760
so

315
00:11:55,760 --> 00:11:57,600
this in this phase as well the

316
00:11:57,600 --> 00:11:59,519
application firewall sets you are not

317
00:11:59,519 --> 00:12:02,000
allowed so we have shell we cannot do

318
00:12:02,000 --> 00:12:04,959
anything so how to bypass this thing

319
00:12:04,959 --> 00:12:06,800
to bypass this thing

320
00:12:06,800 --> 00:12:08,800
i came up with this thing okay

321
00:12:08,800 --> 00:12:11,360
let's say if web application firewall is

322
00:12:11,360 --> 00:12:13,440
not able to inspect anything

323
00:12:13,440 --> 00:12:15,440
in that case it is not going to flag it

324
00:12:15,440 --> 00:12:18,959
but the problem is what to do how to do

325
00:12:18,959 --> 00:12:21,360
so it's like okay we can use some

326
00:12:21,360 --> 00:12:22,880
something like

327
00:12:22,880 --> 00:12:25,040
we are going to put something

328
00:12:25,040 --> 00:12:27,200
we are going to break the pattern in cat

329
00:12:27,200 --> 00:12:28,880
atc

330
00:12:28,880 --> 00:12:30,560
and whatever the keyword we are

331
00:12:30,560 --> 00:12:32,959
inserting in this command in when we

332
00:12:32,959 --> 00:12:35,040
this command is reaching to web shell

333
00:12:35,040 --> 00:12:37,360
code we are replacing those keywords and

334
00:12:37,360 --> 00:12:39,600
then combining those strings again and

335
00:12:39,600 --> 00:12:41,760
then executing it but that will be

336
00:12:41,760 --> 00:12:43,200
frustrating because

337
00:12:43,200 --> 00:12:45,279
you have to do some extra work and this

338
00:12:45,279 --> 00:12:47,600
is not a web shelf which we want we want

339
00:12:47,600 --> 00:12:50,160
simply a web shell just like normal one

340
00:12:50,160 --> 00:12:52,079
we are doing something it's doing some

341
00:12:52,079 --> 00:12:54,720
magic automatically by passing firewall

342
00:12:54,720 --> 00:12:57,360
and then doing stuff automatically so

343
00:12:57,360 --> 00:13:00,079
for this one

344
00:13:00,399 --> 00:13:02,160
i used

345
00:13:02,160 --> 00:13:04,959
client-side encryption people says

346
00:13:04,959 --> 00:13:08,160
javascript is waste but no it's actually

347
00:13:08,160 --> 00:13:10,880
a really game changer in this case what

348
00:13:10,880 --> 00:13:14,399
actually i did i just implemented

349
00:13:14,399 --> 00:13:17,200
encryption thing on client side so

350
00:13:17,200 --> 00:13:18,959
whenever i'm going to click

351
00:13:18,959 --> 00:13:21,200
this button cm

352
00:13:21,200 --> 00:13:23,040
automatically javascript call is

353
00:13:23,040 --> 00:13:24,160
triggering

354
00:13:24,160 --> 00:13:26,639
getting this data from this input field

355
00:13:26,639 --> 00:13:28,480
encrypting it

356
00:13:28,480 --> 00:13:30,880
then passing it to server and then web

357
00:13:30,880 --> 00:13:32,160
shell

358
00:13:32,160 --> 00:13:35,600
decrypting this data and then uh

359
00:13:35,600 --> 00:13:37,519
executing the command so firewall is not

360
00:13:37,519 --> 00:13:40,240
aware of anything because encrypted data

361
00:13:40,240 --> 00:13:42,240
is not inspectable by firewall so

362
00:13:42,240 --> 00:13:45,040
whenever i'm executing command

363
00:13:45,040 --> 00:13:46,639
this type of data is actually getting

364
00:13:46,639 --> 00:13:49,279
crafted by webshell automatically

365
00:13:49,279 --> 00:13:52,079
by using javascripts so i just used

366
00:13:52,079 --> 00:13:54,320
javascript based encryption on client

367
00:13:54,320 --> 00:13:55,120
side

368
00:13:55,120 --> 00:13:57,519
and then encrypted that data

369
00:13:57,519 --> 00:13:59,199
when this data is

370
00:13:59,199 --> 00:14:01,199
going through the firewall obviously

371
00:14:01,199 --> 00:14:03,680
there is no pattern firewall can detect

372
00:14:03,680 --> 00:14:06,079
and it's like okay you go

373
00:14:06,079 --> 00:14:07,600
and the moment it is reaching to web

374
00:14:07,600 --> 00:14:10,240
shell raft shall is saying okay i know

375
00:14:10,240 --> 00:14:12,000
you are encrypted this is the secret

376
00:14:12,000 --> 00:14:14,160
this is the iv i'm going to decrypt it

377
00:14:14,160 --> 00:14:16,880
and going to execute it so this is

378
00:14:16,880 --> 00:14:18,079
simple thing

379
00:14:18,079 --> 00:14:20,239
but

380
00:14:20,320 --> 00:14:22,240
the thing is

381
00:14:22,240 --> 00:14:23,920
i just don't want to

382
00:14:23,920 --> 00:14:26,320
do this type of stuff but i want more

383
00:14:26,320 --> 00:14:29,199
dynamic stuff like someone has detected

384
00:14:29,199 --> 00:14:32,639
my web shell that okay there is a file

385
00:14:32,639 --> 00:14:34,560
uh with name this thing

386
00:14:34,560 --> 00:14:36,079
and they are like they are just coming

387
00:14:36,079 --> 00:14:37,120
to that

388
00:14:37,120 --> 00:14:38,800
page and they are like okay this is the

389
00:14:38,800 --> 00:14:40,720
website i know this thing

390
00:14:40,720 --> 00:14:41,920
so

391
00:14:41,920 --> 00:14:45,199
anyone who is able to see this interface

392
00:14:45,199 --> 00:14:46,720
they will straight away say this is the

393
00:14:46,720 --> 00:14:48,000
web shell

394
00:14:48,000 --> 00:14:49,920
now the thing is we have managed to

395
00:14:49,920 --> 00:14:53,120
bypass firewall mechanism

396
00:14:53,120 --> 00:14:54,560
now the next

397
00:14:54,560 --> 00:14:56,560
concern is let's say if someone has

398
00:14:56,560 --> 00:14:59,680
detected there is a website on this url

399
00:14:59,680 --> 00:15:01,680
how to hide this web shell or how to

400
00:15:01,680 --> 00:15:03,680
make it more dynamic so that they are

401
00:15:03,680 --> 00:15:05,360
not able to figure it out that okay

402
00:15:05,360 --> 00:15:07,760
webshell is there so i came up with

403
00:15:07,760 --> 00:15:09,519
another idea

404
00:15:09,519 --> 00:15:10,880
use this code

405
00:15:10,880 --> 00:15:12,720
with the first one

406
00:15:12,720 --> 00:15:13,600
then

407
00:15:13,600 --> 00:15:16,480
we can actually combine it and

408
00:15:16,480 --> 00:15:18,480
when we are going to combine this web

409
00:15:18,480 --> 00:15:21,040
shell with the first one so it's like

410
00:15:21,040 --> 00:15:22,800
blank page

411
00:15:22,800 --> 00:15:24,959
we are loading web shell and it's

412
00:15:24,959 --> 00:15:26,959
visible to you only for other people

413
00:15:26,959 --> 00:15:29,120
it's just a blank page

414
00:15:29,120 --> 00:15:31,040
another thing is let's say if they are

415
00:15:31,040 --> 00:15:33,199
able to figure out okay something is

416
00:15:33,199 --> 00:15:34,399
there

417
00:15:34,399 --> 00:15:36,800
they want to inspect that traffic

418
00:15:36,800 --> 00:15:39,360
so we are not going to hardcore any

419
00:15:39,360 --> 00:15:41,839
initial initialization vector or secret

420
00:15:41,839 --> 00:15:43,199
key for

421
00:15:43,199 --> 00:15:45,199
encryption we will be generating it

422
00:15:45,199 --> 00:15:47,600
dynamically we will be storing it in

423
00:15:47,600 --> 00:15:49,040
session variable

424
00:15:49,040 --> 00:15:51,759
browser client storage and it's like the

425
00:15:51,759 --> 00:15:54,560
moment we are going to click session end

426
00:15:54,560 --> 00:15:56,720
everything is gone so they are not able

427
00:15:56,720 --> 00:15:57,920
to

428
00:15:57,920 --> 00:16:00,560
inspect it how

429
00:16:00,560 --> 00:16:01,920
so

430
00:16:01,920 --> 00:16:06,120
let me demonstrate it

431
00:16:11,120 --> 00:16:12,639
so this is the

432
00:16:12,639 --> 00:16:15,040
web shell which is just having 40 line

433
00:16:15,040 --> 00:16:16,240
of code

434
00:16:16,240 --> 00:16:17,920
it will

435
00:16:17,920 --> 00:16:20,079
we just need to specify the password we

436
00:16:20,079 --> 00:16:21,600
need to specify

437
00:16:21,600 --> 00:16:25,519
the url of the web shell from where

438
00:16:25,519 --> 00:16:26,399
this

439
00:16:26,399 --> 00:16:28,399
script need to extract that shell and

440
00:16:28,399 --> 00:16:30,800
need to load it in session variable

441
00:16:30,800 --> 00:16:33,040
so i am just hosting

442
00:16:33,040 --> 00:16:35,360
my web shell

443
00:16:35,360 --> 00:16:37,600
in this direction so this is attacker

444
00:16:37,600 --> 00:16:39,680
control box i just need sorry i need to

445
00:16:39,680 --> 00:16:40,900
respond

446
00:16:40,900 --> 00:16:49,040
[Music]

447
00:16:49,040 --> 00:16:52,959
so in this case we have a an interface

448
00:16:52,959 --> 00:16:55,360
but we can make it blank and we can just

449
00:16:55,360 --> 00:16:56,880
simply use

450
00:16:56,880 --> 00:16:58,320
stuff like this

451
00:16:58,320 --> 00:16:59,300
that okay

452
00:16:59,300 --> 00:17:01,120
[Music]

453
00:17:01,120 --> 00:17:03,519
we are going to specify post parameters

454
00:17:03,519 --> 00:17:05,760
we need to specify the parameters and it

455
00:17:05,760 --> 00:17:07,839
will be launched so in this case for

456
00:17:07,839 --> 00:17:09,919
demonstration purpose i have kept uh

457
00:17:09,919 --> 00:17:12,559
interface but we can make it a white

458
00:17:12,559 --> 00:17:14,799
interface page as well and use if you

459
00:17:14,799 --> 00:17:16,959
are going to specify parameters like

460
00:17:16,959 --> 00:17:19,599
this automatically it will be changed to

461
00:17:19,599 --> 00:17:22,400
the shell whichever the shell we have

462
00:17:22,400 --> 00:17:24,880
uh hosted on this url

463
00:17:24,880 --> 00:17:27,119
it will be fetching that shell we'll be

464
00:17:27,119 --> 00:17:29,039
loading it in session variable that's

465
00:17:29,039 --> 00:17:32,919
all so let's

466
00:17:34,799 --> 00:17:36,000
so yeah

467
00:17:36,000 --> 00:17:38,640
we have this webshell which is actually

468
00:17:38,640 --> 00:17:40,480
containing lot of stuff to bypass

469
00:17:40,480 --> 00:17:41,400
firewall

470
00:17:41,400 --> 00:17:43,760
[Music]

471
00:17:43,760 --> 00:17:47,600
and before that i just want to show okay

472
00:17:47,600 --> 00:17:49,039
so let's say

473
00:17:49,039 --> 00:17:50,880
we have managed to bypass web

474
00:17:50,880 --> 00:17:52,480
application firewall

475
00:17:52,480 --> 00:17:55,919
we uploaded web shell

476
00:17:58,000 --> 00:17:59,919
but web application firewall is

477
00:17:59,919 --> 00:18:01,679
implemented on this server

478
00:18:01,679 --> 00:18:02,480
and

479
00:18:02,480 --> 00:18:04,080
whenever i am trying to do something

480
00:18:04,080 --> 00:18:06,480
let's say

481
00:18:07,440 --> 00:18:08,640
forbidden

482
00:18:08,640 --> 00:18:10,080
so this is the case so let's say we have

483
00:18:10,080 --> 00:18:12,559
managed to bypass firewall but in this

484
00:18:12,559 --> 00:18:14,480
case it's detecting

485
00:18:14,480 --> 00:18:16,080
now

486
00:18:16,080 --> 00:18:19,039
we are going to use two shells to

487
00:18:19,039 --> 00:18:20,320
bypass

488
00:18:20,320 --> 00:18:22,640
those restrictions so this one

489
00:18:22,640 --> 00:18:25,120
we will be loading in

490
00:18:25,120 --> 00:18:27,360
this option

491
00:18:27,360 --> 00:18:35,859
[Music]

492
00:18:37,980 --> 00:18:41,160
[Music]

493
00:18:45,000 --> 00:19:02,940
[Music]

494
00:19:06,000 --> 00:19:08,610
okay give me a second

495
00:19:08,610 --> 00:19:11,810
[Music]

496
00:19:14,270 --> 00:19:17,280
[Music]

497
00:19:17,280 --> 00:19:20,160
so let's say this is the same server

498
00:19:20,160 --> 00:19:22,799
where we got forbidden error because of

499
00:19:22,799 --> 00:19:25,840
presence of firewall

500
00:19:27,520 --> 00:19:30,160
so here on screen you can see

501
00:19:30,160 --> 00:19:32,480
when we are going to load this web shell

502
00:19:32,480 --> 00:19:34,640
it will be loading generating security

503
00:19:34,640 --> 00:19:37,360
and iv for encryption purpose and it's

504
00:19:37,360 --> 00:19:39,440
not static

505
00:19:39,440 --> 00:19:42,799
so it's dynamic and it will be stored on

506
00:19:42,799 --> 00:19:45,520
server in session variable and on client

507
00:19:45,520 --> 00:19:47,440
side it will be stored in

508
00:19:47,440 --> 00:19:48,880
local storage

509
00:19:48,880 --> 00:19:50,960
because we don't want to hard code

510
00:19:50,960 --> 00:19:52,400
anything let's say

511
00:19:52,400 --> 00:19:54,799
this workshop has been leaked or if you

512
00:19:54,799 --> 00:19:57,280
are using this web shell every time so

513
00:19:57,280 --> 00:19:59,200
they will be aware of this thing that

514
00:19:59,200 --> 00:20:00,640
okay this is the secret key this is the

515
00:20:00,640 --> 00:20:01,679
iv

516
00:20:01,679 --> 00:20:02,559
no

517
00:20:02,559 --> 00:20:04,720
this web shell is actually

518
00:20:04,720 --> 00:20:06,480
generating iv

519
00:20:06,480 --> 00:20:09,760
and secret every time and it will be

520
00:20:09,760 --> 00:20:12,640
generating those secret and iv key

521
00:20:12,640 --> 00:20:15,039
dynamically so let's say the moment i am

522
00:20:15,039 --> 00:20:18,320
going to click this button there will be

523
00:20:18,320 --> 00:20:21,760
an entry in local storage

524
00:20:21,760 --> 00:20:24,799
this is here you can see so it's not uh

525
00:20:24,799 --> 00:20:27,280
the value of these things is not a

526
00:20:27,280 --> 00:20:29,120
hardcoded encode at all

527
00:20:29,120 --> 00:20:31,439
now

528
00:20:31,760 --> 00:20:33,520
whenever we are going to make a request

529
00:20:33,520 --> 00:20:36,480
so let's say this one

530
00:20:39,039 --> 00:20:41,679
let me set traffic in buff so that i can

531
00:20:41,679 --> 00:20:44,919
show you

532
00:20:51,760 --> 00:20:53,120
here you can see

533
00:20:53,120 --> 00:20:55,039
command has been executed

534
00:20:55,039 --> 00:20:57,130
and if you inspect the traffic in bob

535
00:20:57,130 --> 00:21:00,080
[Music]

536
00:21:00,080 --> 00:21:01,760
there is actually

537
00:21:01,760 --> 00:21:05,840
[Music]

538
00:21:05,840 --> 00:21:07,320
no key

539
00:21:07,320 --> 00:21:08,799
[Music]

540
00:21:08,799 --> 00:21:11,039
it's just encrypted string so if someone

541
00:21:11,039 --> 00:21:12,640
is going to intercept the traffic

542
00:21:12,640 --> 00:21:14,080
nothing is there

543
00:21:14,080 --> 00:21:16,400
they need to contact to developer who is

544
00:21:16,400 --> 00:21:18,640
actually maintaining this server and

545
00:21:18,640 --> 00:21:20,559
developer is the only person who can

546
00:21:20,559 --> 00:21:23,919
actually grab this key by uh echoing

547
00:21:23,919 --> 00:21:25,919
uh those things which are stored in

548
00:21:25,919 --> 00:21:28,799
session variable so it's not easy for uh

549
00:21:28,799 --> 00:21:31,120
soft guys to get the initialization

550
00:21:31,120 --> 00:21:33,360
vector or secret key and the best part

551
00:21:33,360 --> 00:21:36,080
is it is stored in session this shell is

552
00:21:36,080 --> 00:21:38,400
stored in session keys are stored in

553
00:21:38,400 --> 00:21:40,240
session if you are going to click

554
00:21:40,240 --> 00:21:42,240
session end

555
00:21:42,240 --> 00:21:44,080
it will be destroyed from server nothing

556
00:21:44,080 --> 00:21:45,520
is there

557
00:21:45,520 --> 00:21:46,960
so this is the

558
00:21:46,960 --> 00:21:49,440
best part and

559
00:21:49,440 --> 00:21:51,200
let's say

560
00:21:51,200 --> 00:21:52,400
if you want to

561
00:21:52,400 --> 00:21:53,200
uh

562
00:21:53,200 --> 00:21:54,080
say

563
00:21:54,080 --> 00:21:55,600
okay

564
00:21:55,600 --> 00:21:57,360
whatever the output it is going to

565
00:21:57,360 --> 00:21:58,880
inspect

566
00:21:58,880 --> 00:22:00,960
firewall is

567
00:22:00,960 --> 00:22:01,919
so

568
00:22:01,919 --> 00:22:04,960
in this trap sorry in this http response

569
00:22:04,960 --> 00:22:07,039
uh firewall is going to inspect it's

570
00:22:07,039 --> 00:22:08,799
nothing

571
00:22:08,799 --> 00:22:11,039
so

572
00:22:11,039 --> 00:22:14,080
this rule plus this role means incoming

573
00:22:14,080 --> 00:22:17,039
outgoing firewall is not able to

574
00:22:17,039 --> 00:22:19,280
recognize what actually it is it's

575
00:22:19,280 --> 00:22:21,919
completely random thing this one this

576
00:22:21,919 --> 00:22:24,840
http response is base64 encoded

577
00:22:24,840 --> 00:22:27,840
but still it's not going to trigger any

578
00:22:27,840 --> 00:22:30,320
alarm because it's uh not containing any

579
00:22:30,320 --> 00:22:32,880
source code or any other stuff so yeah

580
00:22:32,880 --> 00:22:35,280
we need not to worry and

581
00:22:35,280 --> 00:22:36,960
in this case this is completely

582
00:22:36,960 --> 00:22:39,120
encrypted stream not even short guy will

583
00:22:39,120 --> 00:22:42,000
come to know what actually it is

584
00:22:42,000 --> 00:22:44,400
and the second thing is

585
00:22:44,400 --> 00:22:45,440
let's say

586
00:22:45,440 --> 00:22:48,240
we want to bypass

587
00:22:48,240 --> 00:22:50,320
file browsing directory restrictions so

588
00:22:50,320 --> 00:22:52,240
let's say

589
00:22:52,240 --> 00:22:53,550
ptc

590
00:22:53,550 --> 00:23:02,159
[Music]

591
00:23:02,159 --> 00:23:04,000
so yeah you can

592
00:23:04,000 --> 00:23:05,840
roam around easily without being

593
00:23:05,840 --> 00:23:09,760
detected by web application firewall

594
00:23:09,760 --> 00:23:13,039
it's simple but it's all about

595
00:23:13,039 --> 00:23:15,840
the encryption on client side on fly

596
00:23:15,840 --> 00:23:17,280
that's all

597
00:23:17,280 --> 00:23:19,600
so yeah people say javascript is waste

598
00:23:19,600 --> 00:23:21,840
no here javascript is fed spreading

599
00:23:21,840 --> 00:23:24,640
magic and you can actually modify web

600
00:23:24,640 --> 00:23:27,679
shell it's like php plus javascript

601
00:23:27,679 --> 00:23:30,240
deadly combination

602
00:23:30,240 --> 00:23:31,760
and let's say

603
00:23:31,760 --> 00:23:33,760
there is a scenario

604
00:23:33,760 --> 00:23:36,320
when we are uploading web shell we are

605
00:23:36,320 --> 00:23:38,559
making request to this file this file is

606
00:23:38,559 --> 00:23:41,279
not of web application and everyone will

607
00:23:41,279 --> 00:23:42,960
come to know okay this file was not

608
00:23:42,960 --> 00:23:45,360
there and this is new file

609
00:23:45,360 --> 00:23:47,679
must be a web shell or something

610
00:23:47,679 --> 00:23:49,440
how to blend in

611
00:23:49,440 --> 00:23:51,679
web shell traffic with legit one so it's

612
00:23:51,679 --> 00:23:53,520
like okay you are not going to upload a

613
00:23:53,520 --> 00:23:55,120
web shell but

614
00:23:55,120 --> 00:23:57,200
you are going to use existing file web

615
00:23:57,200 --> 00:23:58,320
application

616
00:23:58,320 --> 00:24:00,240
uh files

617
00:24:00,240 --> 00:24:03,200
and it must be like a website for you

618
00:24:03,200 --> 00:24:05,679
but for other guys it should be normal

619
00:24:05,679 --> 00:24:06,799
page

620
00:24:06,799 --> 00:24:08,720
so this technique will be actually

621
00:24:08,720 --> 00:24:10,000
helping us to

622
00:24:10,000 --> 00:24:12,000
uh

623
00:24:12,000 --> 00:24:13,440
making things little bit more

624
00:24:13,440 --> 00:24:15,279
complicated for sock guys because

625
00:24:15,279 --> 00:24:16,960
sometimes you are going to access one

626
00:24:16,960 --> 00:24:18,320
file sometime you are going to access

627
00:24:18,320 --> 00:24:20,320
this file that file

628
00:24:20,320 --> 00:24:22,080
but you will be actually accessing your

629
00:24:22,080 --> 00:24:23,360
web shell

630
00:24:23,360 --> 00:24:24,320
but for

631
00:24:24,320 --> 00:24:27,120
in logs like okay this file this file

632
00:24:27,120 --> 00:24:29,919
this parameter not making any sense

633
00:24:29,919 --> 00:24:31,470
so let's say

634
00:24:31,470 --> 00:24:34,690
[Music]

635
00:24:42,559 --> 00:24:45,039
so let's say this is what this website

636
00:24:45,039 --> 00:24:47,600
you have managed to break into wordpress

637
00:24:47,600 --> 00:24:49,679
console and

638
00:24:49,679 --> 00:24:51,520
in this web application you are

639
00:24:51,520 --> 00:24:53,520
uploading a web shell but you want to

640
00:24:53,520 --> 00:24:56,080
upload your webshell in such a way so

641
00:24:56,080 --> 00:24:57,520
that

642
00:24:57,520 --> 00:25:00,960
in at least by inspecting log someone

643
00:25:00,960 --> 00:25:03,039
not supposed to know that something has

644
00:25:03,039 --> 00:25:04,400
been gone wrong

645
00:25:04,400 --> 00:25:06,640
that someone has uploaded web shell and

646
00:25:06,640 --> 00:25:09,120
making request to web share web server

647
00:25:09,120 --> 00:25:11,360
using that web shell so how to do that

648
00:25:11,360 --> 00:25:12,159
one

649
00:25:12,159 --> 00:25:14,559
for this type of thing there is

650
00:25:14,559 --> 00:25:16,480
something which we can use

651
00:25:16,480 --> 00:25:17,440
so

652
00:25:17,440 --> 00:25:19,679
there are files which are being loaded

653
00:25:19,679 --> 00:25:22,400
by wordpress web application

654
00:25:22,400 --> 00:25:24,640
we are going to use those files to

655
00:25:24,640 --> 00:25:26,400
inject our code

656
00:25:26,400 --> 00:25:28,400
and for other people

657
00:25:28,400 --> 00:25:29,840
this web application will be web

658
00:25:29,840 --> 00:25:32,320
application but for us it will be

659
00:25:32,320 --> 00:25:34,400
changing to web shell how

660
00:25:34,400 --> 00:25:35,520
so let's say

661
00:25:35,520 --> 00:25:36,480
uh

662
00:25:36,480 --> 00:25:39,679
this is uh mvc so in mvc based web

663
00:25:39,679 --> 00:25:40,799
application

664
00:25:40,799 --> 00:25:43,279
we just simply use

665
00:25:43,279 --> 00:25:45,760
one file we are going to include it and

666
00:25:45,760 --> 00:25:48,159
other places another file is getting

667
00:25:48,159 --> 00:25:49,919
included so in the end this file is

668
00:25:49,919 --> 00:25:52,000
actually getting included in other

669
00:25:52,000 --> 00:25:52,960
places

670
00:25:52,960 --> 00:25:55,679
for example configuration file

671
00:25:55,679 --> 00:25:56,559
so

672
00:25:56,559 --> 00:25:58,080
in this case

673
00:25:58,080 --> 00:26:00,640
what i have done i have actually

674
00:26:00,640 --> 00:26:03,760
injected config file with my

675
00:26:03,760 --> 00:26:07,200
shell code so here if you have a look

676
00:26:07,200 --> 00:26:08,159
in this

677
00:26:08,159 --> 00:26:10,720
configuration file i have specified that

678
00:26:10,720 --> 00:26:12,000
small code

679
00:26:12,000 --> 00:26:13,679
it's actually again

680
00:26:13,679 --> 00:26:15,679
undetectable

681
00:26:15,679 --> 00:26:17,919
and if someone needs to do sorry if

682
00:26:17,919 --> 00:26:19,840
someone is going to perform scanning on

683
00:26:19,840 --> 00:26:20,880
this file

684
00:26:20,880 --> 00:26:22,480
nothing is there

685
00:26:22,480 --> 00:26:25,279
so this code is very small

686
00:26:25,279 --> 00:26:28,799
so let me zoom in

687
00:26:28,799 --> 00:26:31,520
so yeah i have just injected this much

688
00:26:31,520 --> 00:26:33,600
code

689
00:26:33,600 --> 00:26:35,360
and using this

690
00:26:35,360 --> 00:26:38,080
code i can actually load full web shell

691
00:26:38,080 --> 00:26:39,279
so

692
00:26:39,279 --> 00:26:41,600
we know that web application is going to

693
00:26:41,600 --> 00:26:43,840
use this configuration file in other

694
00:26:43,840 --> 00:26:47,039
places as well even or not from pages so

695
00:26:47,039 --> 00:26:49,039
this is the advantage what we are going

696
00:26:49,039 --> 00:26:49,840
to do

697
00:26:49,840 --> 00:26:53,200
we are just simply

698
00:26:53,200 --> 00:26:55,039
going to make a request

699
00:26:55,039 --> 00:26:57,840
to load a web shell

700
00:26:57,840 --> 00:27:00,320
in this web application so let's say

701
00:27:00,320 --> 00:27:03,320
here

702
00:27:04,450 --> 00:27:07,650
[Music]

703
00:27:08,480 --> 00:27:10,720
so yeah so far this is the stable

704
00:27:10,720 --> 00:27:12,400
application

705
00:27:12,400 --> 00:27:13,440
but now

706
00:27:13,440 --> 00:27:16,480
i have injected a web shell

707
00:27:16,480 --> 00:27:17,840
and i want to

708
00:27:17,840 --> 00:27:21,039
convert this web application into a web

709
00:27:21,039 --> 00:27:21,340
shell

710
00:27:21,340 --> 00:27:25,760
[Music]

711
00:27:25,760 --> 00:27:27,919
what i have to do

712
00:27:27,919 --> 00:27:29,440
i just need to

713
00:27:29,440 --> 00:27:32,320
specify two things

714
00:27:32,320 --> 00:27:34,720
i need to specify a postman parameter

715
00:27:34,720 --> 00:27:35,760
launch

716
00:27:35,760 --> 00:27:38,480
and need to specify shell link that's

717
00:27:38,480 --> 00:27:39,279
all

718
00:27:39,279 --> 00:27:41,679
and later that shell link will be fast

719
00:27:41,679 --> 00:27:43,279
will be loaded into

720
00:27:43,279 --> 00:27:47,960
session variable and will be evaluated

721
00:27:48,080 --> 00:27:51,200
so let's do it

722
00:27:51,200 --> 00:27:54,399
so i'm going to intercept the request

723
00:27:54,399 --> 00:27:57,760
i need to change it to

724
00:27:57,760 --> 00:27:59,990
post body so let's say

725
00:27:59,990 --> 00:28:11,410
[Music]

726
00:28:19,380 --> 00:28:26,720
[Music]

727
00:28:26,720 --> 00:28:29,090
escape

728
00:28:29,090 --> 00:28:32,300
[Music]

729
00:28:37,440 --> 00:28:39,600
so we are just going to specify these

730
00:28:39,600 --> 00:28:42,399
two parameters

731
00:28:43,900 --> 00:28:48,640
[Music]

732
00:28:48,640 --> 00:28:51,120
okay now you can see

733
00:28:51,120 --> 00:28:53,279
we have loaded web shell

734
00:28:53,279 --> 00:28:55,200
without uploading it

735
00:28:55,200 --> 00:28:56,720
in web application

736
00:28:56,720 --> 00:28:59,039
now

737
00:28:59,039 --> 00:29:00,799
even if you are going to

738
00:29:00,799 --> 00:29:03,279
access any non-existing page

739
00:29:03,279 --> 00:29:05,919
webshell is there

740
00:29:05,919 --> 00:29:07,919
if someone is just inspecting traffic

741
00:29:07,919 --> 00:29:10,240
for urls analyzing log they are not

742
00:29:10,240 --> 00:29:12,960
going to get anything

743
00:29:12,960 --> 00:29:14,320
so

744
00:29:14,320 --> 00:29:16,720
when it come to

745
00:29:16,720 --> 00:29:17,840
inspection

746
00:29:17,840 --> 00:29:20,159
no it's not going to make any sense but

747
00:29:20,159 --> 00:29:22,159
for other users

748
00:29:22,159 --> 00:29:25,360
it's still a web application

749
00:29:25,360 --> 00:29:27,200
it's still a normal web application but

750
00:29:27,200 --> 00:29:30,399
for us it's been converted into webshop

751
00:29:30,399 --> 00:29:34,158
and you can do whatever you want

752
00:29:36,240 --> 00:29:37,600
so yeah

753
00:29:37,600 --> 00:29:39,600
you can hide your webshell

754
00:29:39,600 --> 00:29:41,120
you can use

755
00:29:41,120 --> 00:29:43,360
just inject web application with small

756
00:29:43,360 --> 00:29:46,159
code load another one

757
00:29:46,159 --> 00:29:48,159
and in that code you just add some

758
00:29:48,159 --> 00:29:49,760
functionalities which are actually

759
00:29:49,760 --> 00:29:52,480
making this web shell completely dynamic

760
00:29:52,480 --> 00:29:55,360
firewall bypass soft team they are not

761
00:29:55,360 --> 00:29:58,240
able to figure it out

762
00:29:58,559 --> 00:30:01,200
they just need to scan entire server and

763
00:30:01,200 --> 00:30:02,559
for this type of thing they need to

764
00:30:02,559 --> 00:30:05,200
perform integration check on files okay

765
00:30:05,200 --> 00:30:06,640
this file has been modified this file

766
00:30:06,640 --> 00:30:08,399
has been modified then only they can

767
00:30:08,399 --> 00:30:10,159
figure it out otherwise

768
00:30:10,159 --> 00:30:12,559
no they cannot

769
00:30:12,559 --> 00:30:13,279
so

770
00:30:13,279 --> 00:30:14,159
yeah

771
00:30:14,159 --> 00:30:15,919
this is

772
00:30:15,919 --> 00:30:19,799
all about the talk

773
00:30:23,010 --> 00:30:26,220
[Music]

774
00:30:26,559 --> 00:30:29,760
so this was something related to

775
00:30:29,760 --> 00:30:31,279
blending your traffic with ledger

776
00:30:31,279 --> 00:30:32,240
traffic

777
00:30:32,240 --> 00:30:34,559
and yeah you can simply

778
00:30:34,559 --> 00:30:37,279
make their life little bit hard okay

779
00:30:37,279 --> 00:30:39,600
catch me if you can where is my shell

780
00:30:39,600 --> 00:30:43,279
i'm hiding here i'm hiding there

781
00:30:43,440 --> 00:30:45,840
so yeah

782
00:30:47,600 --> 00:30:51,559
any question or

783
00:30:59,279 --> 00:31:00,559
uh

784
00:31:00,559 --> 00:31:03,279
i'm not sure because uh

785
00:31:03,279 --> 00:31:05,120
session was something very interesting

786
00:31:05,120 --> 00:31:07,360
to me and the reason was you can simply

787
00:31:07,360 --> 00:31:10,640
destroy a session by uh it's like okay

788
00:31:10,640 --> 00:31:12,720
session destroyer you can destroy the

789
00:31:12,720 --> 00:31:15,840
session and we are actually uh storing

790
00:31:15,840 --> 00:31:17,840
the data in particular directory where

791
00:31:17,840 --> 00:31:20,720
session variable will be stored so

792
00:31:20,720 --> 00:31:23,120
let's say in case of linux server it

793
00:31:23,120 --> 00:31:25,279
will be in barely php

794
00:31:25,279 --> 00:31:28,080
then session underscore ss underscore

795
00:31:28,080 --> 00:31:29,440
whatever the id

796
00:31:29,440 --> 00:31:31,840
so most of the time people are not going

797
00:31:31,840 --> 00:31:34,000
to perform any scanning for that part

798
00:31:34,000 --> 00:31:37,200
so that's why that's why it was uh very

799
00:31:37,200 --> 00:31:40,080
interesting to me to using this approach

800
00:31:40,080 --> 00:31:42,480
instead of using another one and the

801
00:31:42,480 --> 00:31:45,279
best part is we can actually use this

802
00:31:45,279 --> 00:31:46,480
thing on

803
00:31:46,480 --> 00:31:49,360
web application where

804
00:31:49,360 --> 00:31:51,600
you can actually simply cannot make call

805
00:31:51,600 --> 00:31:52,640
to

806
00:31:52,640 --> 00:31:55,200
internet based url you can use

807
00:31:55,200 --> 00:31:56,159
like

808
00:31:56,159 --> 00:31:58,799
same interface you specify the code

809
00:31:58,799 --> 00:32:01,919
you hold it in session variable again so

810
00:32:01,919 --> 00:32:04,080
that's why if we are going to include a

811
00:32:04,080 --> 00:32:06,880
file there may be restriction regarding

812
00:32:06,880 --> 00:32:10,080
opel file url or if we are going to

813
00:32:10,080 --> 00:32:12,880
write shell on another directory again

814
00:32:12,880 --> 00:32:14,399
there will be it's like we have to

815
00:32:14,399 --> 00:32:16,399
delete it or something like that

816
00:32:16,399 --> 00:32:17,919
but in session variable case we just

817
00:32:17,919 --> 00:32:20,559
need to specify we need to

818
00:32:20,559 --> 00:32:22,480
session end that's all we just need we

819
00:32:22,480 --> 00:32:24,000
need not to worry okay we have to delete

820
00:32:24,000 --> 00:32:25,519
it or we have to upload it we just

821
00:32:25,519 --> 00:32:28,720
specify we just execute it we delete it

822
00:32:28,720 --> 00:32:29,760
and then we

823
00:32:29,760 --> 00:32:31,840
just disappear from the server so that's

824
00:32:31,840 --> 00:32:35,039
why it was something very

825
00:32:41,200 --> 00:32:42,880
external interesting that's still state

826
00:32:42,880 --> 00:32:45,120
that's still power yeah that's that's

827
00:32:45,120 --> 00:32:48,080
there so you need to clean it up as well

828
00:32:48,080 --> 00:32:51,039
yeah but it's uh up to you so let's say

829
00:32:51,039 --> 00:32:52,000
uh

830
00:32:52,000 --> 00:32:54,000
one shell is actually

831
00:32:54,000 --> 00:32:56,399
not of our particular use we are not

832
00:32:56,399 --> 00:32:58,240
going to delete it with the simply say

833
00:32:58,240 --> 00:33:01,039
session and because this uh this profile

834
00:33:01,039 --> 00:33:02,960
is actually capable of loading any php

835
00:33:02,960 --> 00:33:05,919
code yeah so we need not to so let's say

836
00:33:05,919 --> 00:33:07,360
in my case

837
00:33:07,360 --> 00:33:09,679
i want to upload adminer file

838
00:33:09,679 --> 00:33:12,080
so i am not going to upload it i will be

839
00:33:12,080 --> 00:33:13,919
just using this thing

840
00:33:13,919 --> 00:33:15,760
this is actually

841
00:33:15,760 --> 00:33:18,000
a normal code and people are not going

842
00:33:18,000 --> 00:33:20,559
to suspect it so that's why i am just

843
00:33:20,559 --> 00:33:23,039
going to store it in server

844
00:33:23,039 --> 00:33:24,799
and for other things i'm going to hold

845
00:33:24,799 --> 00:33:26,880
it in session variable so that the

846
00:33:26,880 --> 00:33:28,720
moment i'm going to

847
00:33:28,720 --> 00:33:31,120
feel okay work is done i'm just going to

848
00:33:31,120 --> 00:33:32,320
delete it

849
00:33:32,320 --> 00:33:34,559
so that that's why that was the main

850
00:33:34,559 --> 00:33:36,880
point we can go for other things like we

851
00:33:36,880 --> 00:33:41,360
can store web shell in parts as well

852
00:33:41,360 --> 00:33:44,000
so let's say we are just going to break

853
00:33:44,000 --> 00:33:46,320
code in snippets then we are storing it

854
00:33:46,320 --> 00:33:48,320
in different different files

855
00:33:48,320 --> 00:33:49,679
but

856
00:33:49,679 --> 00:33:51,679
i'm actually

857
00:33:51,679 --> 00:33:53,039
it's like i'm not going for that

858
00:33:53,039 --> 00:33:55,039
approach because i just need to clean it

859
00:33:55,039 --> 00:33:56,720
up every time

860
00:33:56,720 --> 00:33:59,440
but in this case right destroy so that

861
00:33:59,440 --> 00:34:02,559
was the main goal

862
00:34:19,599 --> 00:34:22,000
yeah so this is the only thing we can do

863
00:34:22,000 --> 00:34:23,280
because uh

864
00:34:23,280 --> 00:34:25,280
this uh approach is uh based on

865
00:34:25,280 --> 00:34:27,199
something which is uh just simply

866
00:34:27,199 --> 00:34:29,440
injecting a file with small code and

867
00:34:29,440 --> 00:34:32,000
then loading other shell using

868
00:34:32,000 --> 00:34:35,440
that code so in the end we are actually

869
00:34:35,440 --> 00:34:38,399
going to tamper with at least one file

870
00:34:38,399 --> 00:34:40,800
and after that we are storing data in

871
00:34:40,800 --> 00:34:42,079
session so

872
00:34:42,079 --> 00:34:44,639
we just can say okay if we are going to

873
00:34:44,639 --> 00:34:47,119
perform any uh integrity check we can

874
00:34:47,119 --> 00:34:49,440
detect it easily but

875
00:34:49,440 --> 00:34:52,239
if if it come to log analysis and other

876
00:34:52,239 --> 00:34:55,440
thing it may not be possible

877
00:34:55,440 --> 00:34:57,200
because these are the things which

878
00:34:57,200 --> 00:34:59,520
actually analyzed by me but what if

879
00:34:59,520 --> 00:35:01,680
someone is actually having more things

880
00:35:01,680 --> 00:35:03,440
so yeah

881
00:35:03,440 --> 00:35:04,880
this is the only thing which we can say

882
00:35:04,880 --> 00:35:06,560
okay this is uh something which will

883
00:35:06,560 --> 00:35:08,960
work for sure and we can detect okay

884
00:35:08,960 --> 00:35:10,480
this is the thing this is the thing

885
00:35:10,480 --> 00:35:13,880
which is there

886
00:35:21,920 --> 00:35:24,920
okay

