1
00:00:03,040 --> 00:00:04,000
yes

2
00:00:04,000 --> 00:00:06,960
um welcome to my talk um

3
00:00:06,960 --> 00:00:09,120
my name is noman referred and i'm a

4
00:00:09,120 --> 00:00:12,160
senior security consultant at mpsec

5
00:00:12,160 --> 00:00:14,480
uh the topic of my talk today is finding

6
00:00:14,480 --> 00:00:16,800
zero days in wordpress plugins and

7
00:00:16,800 --> 00:00:17,840
themes

8
00:00:17,840 --> 00:00:19,920
uh considering like wordpress

9
00:00:19,920 --> 00:00:22,240
compromises around 43 percent of

10
00:00:22,240 --> 00:00:24,000
worldwide applications

11
00:00:24,000 --> 00:00:26,160
and considering there are like our

12
00:00:26,160 --> 00:00:27,920
billion websites worldwide this is

13
00:00:27,920 --> 00:00:30,000
pretty a very huge number and if you're

14
00:00:30,000 --> 00:00:32,079
a penetration tester or a bug bounty

15
00:00:32,079 --> 00:00:34,559
hunter coming across a wordpress

16
00:00:34,559 --> 00:00:36,800
application is pretty common so in this

17
00:00:36,800 --> 00:00:38,640
talk i'm going to discuss how you can

18
00:00:38,640 --> 00:00:39,840
find

19
00:00:39,840 --> 00:00:41,360
how you can do the code reviews and

20
00:00:41,360 --> 00:00:43,360
wordpress plugins and scenes

21
00:00:43,360 --> 00:00:46,719
and uh what you can do more

22
00:00:46,719 --> 00:00:50,480
than just running a wp scan

23
00:00:50,559 --> 00:00:51,840
this is a very

24
00:00:51,840 --> 00:00:54,160
good advice for the uh new security

25
00:00:54,160 --> 00:00:55,760
researcher they keep asking questions

26
00:00:55,760 --> 00:00:58,480
like where to actually start from

27
00:00:58,480 --> 00:01:01,359
and so this is a very good advice like

28
00:01:01,359 --> 00:01:03,920
just start looking at wordpress plugins

29
00:01:03,920 --> 00:01:05,360
start looking at their code they are

30
00:01:05,360 --> 00:01:07,280
damn vulnerable

31
00:01:07,280 --> 00:01:09,119
there are around

32
00:01:09,119 --> 00:01:12,000
90 000 wordpress plugins floating around

33
00:01:12,000 --> 00:01:14,159
so you start looking at their code for

34
00:01:14,159 --> 00:01:15,600
sure you will find a lot of

35
00:01:15,600 --> 00:01:18,240
vulnerabilities

36
00:01:18,240 --> 00:01:19,920
uh disclaimer uh

37
00:01:19,920 --> 00:01:22,400
everything which i'm going to

38
00:01:22,400 --> 00:01:24,799
discuss in this talk these are not

39
00:01:24,799 --> 00:01:26,960
uniquely my own techniques they are

40
00:01:26,960 --> 00:01:29,520
already known in the public but i have

41
00:01:29,520 --> 00:01:31,759
uh in the wordpress security domain a

42
00:01:31,759 --> 00:01:34,159
lot of people know about this

43
00:01:34,159 --> 00:01:37,200
but i've barely seen in bug bounties and

44
00:01:37,200 --> 00:01:38,880
presentation testing a lot of

45
00:01:38,880 --> 00:01:41,680
consultants they do not follow these

46
00:01:41,680 --> 00:01:44,000
techniques which i'm gonna discuss

47
00:01:44,000 --> 00:01:46,320
in this talk later on

48
00:01:46,320 --> 00:01:47,040
so

49
00:01:47,040 --> 00:01:48,880
what makes me excited about wordpress

50
00:01:48,880 --> 00:01:51,119
first of all is wordpress because i have

51
00:01:51,119 --> 00:01:53,119
been a wordpress developer for a very

52
00:01:53,119 --> 00:01:55,360
long time

53
00:01:55,360 --> 00:01:57,680
and secondly if i came across a

54
00:01:57,680 --> 00:02:00,000
wordpress application which has like 20

55
00:02:00,000 --> 00:02:01,680
plus plugins installed

56
00:02:01,680 --> 00:02:04,640
so most of the times a typical wordpress

57
00:02:04,640 --> 00:02:06,719
application it does contain

58
00:02:06,719 --> 00:02:08,639
a lot of plugins installed

59
00:02:08,639 --> 00:02:09,679
and

60
00:02:09,679 --> 00:02:12,000
the more plugins means there is more

61
00:02:12,000 --> 00:02:13,760
code and there are more chances of it

62
00:02:13,760 --> 00:02:15,280
being vulnerable

63
00:02:15,280 --> 00:02:17,280
the third thing is

64
00:02:17,280 --> 00:02:21,120
it is using premium plugins so

65
00:02:21,120 --> 00:02:23,280
wordpress officially they have their own

66
00:02:23,280 --> 00:02:25,840
repository for wordpress plugins and

67
00:02:25,840 --> 00:02:28,239
teams as well if you are a developer you

68
00:02:28,239 --> 00:02:30,160
may develop the new plugin and you want

69
00:02:30,160 --> 00:02:32,480
to submit to them so wordpress

70
00:02:32,480 --> 00:02:35,280
repository their security team they will

71
00:02:35,280 --> 00:02:37,680
first review your plugin it will try to

72
00:02:37,680 --> 00:02:39,040
look for the very obvious

73
00:02:39,040 --> 00:02:40,879
vulnerabilities which are found most of

74
00:02:40,879 --> 00:02:42,400
the times

75
00:02:42,400 --> 00:02:44,319
and then if they found anything

76
00:02:44,319 --> 00:02:46,560
vulnerable in your plugin they will ask

77
00:02:46,560 --> 00:02:47,920
you to catch it

78
00:02:47,920 --> 00:02:49,360
and then they will publish it on their

79
00:02:49,360 --> 00:02:52,160
repository the fourth thing is users can

80
00:02:52,160 --> 00:02:53,680
if user registration is enabled on

81
00:02:53,680 --> 00:02:55,519
wordpress by default you most of you

82
00:02:55,519 --> 00:02:57,200
know that the user registration is

83
00:02:57,200 --> 00:03:00,080
disabled on wordpress but if somehow you

84
00:03:00,080 --> 00:03:02,640
are able to register a user it actually

85
00:03:02,640 --> 00:03:05,120
expands the attack surface to a very big

86
00:03:05,120 --> 00:03:07,599
extent which i will demonstrate later

87
00:03:07,599 --> 00:03:09,040
how how

88
00:03:09,040 --> 00:03:12,080
so what we do in every uh everyday

89
00:03:12,080 --> 00:03:14,879
wordpress pen test we just run a wp scan

90
00:03:14,879 --> 00:03:17,840
try to brute force credentials uh do

91
00:03:17,840 --> 00:03:20,640
open source intelligence uh like uh try

92
00:03:20,640 --> 00:03:22,400
to find the developer credential from

93
00:03:22,400 --> 00:03:25,040
any bridge databases and use them

94
00:03:25,040 --> 00:03:27,440
but is that it is there any more to it

95
00:03:27,440 --> 00:03:30,640
and i will discuss it now

96
00:03:30,640 --> 00:03:31,599
so

97
00:03:31,599 --> 00:03:33,920
doing the core reviews for wordpress

98
00:03:33,920 --> 00:03:36,400
plugins so wordpress because it is based

99
00:03:36,400 --> 00:03:38,159
on php it can contain all the

100
00:03:38,159 --> 00:03:39,920
vulnerabilities which are found in phd

101
00:03:39,920 --> 00:03:42,000
application so i'm not going to discuss

102
00:03:42,000 --> 00:03:43,599
those obviously

103
00:03:43,599 --> 00:03:45,200
but i will look at the specific

104
00:03:45,200 --> 00:03:49,840
wordpress functions and hooks to look at

105
00:03:49,840 --> 00:03:51,120
you should

106
00:03:51,120 --> 00:03:53,120
make a checklist of all these functions

107
00:03:53,120 --> 00:03:54,560
and hope so every time you are trying to

108
00:03:54,560 --> 00:03:57,040
do a code review just look for these

109
00:03:57,040 --> 00:03:59,040
strings in your wordpress and try to

110
00:03:59,040 --> 00:04:01,439
look for the the functions attached to

111
00:04:01,439 --> 00:04:03,840
these hooks or the functions themselves

112
00:04:03,840 --> 00:04:06,480
and try to review the code inside them

113
00:04:06,480 --> 00:04:07,760
um

114
00:04:07,760 --> 00:04:10,080
before i start so i'm going to start all

115
00:04:10,080 --> 00:04:12,159
of these hooks one by one so before i

116
00:04:12,159 --> 00:04:14,799
start let me tell you one thing as you

117
00:04:14,799 --> 00:04:17,358
maybe uh some of you know that in the

118
00:04:17,358 --> 00:04:20,000
wordpress admin directory there are two

119
00:04:20,000 --> 00:04:23,120
php files which are always accessible as

120
00:04:23,120 --> 00:04:25,520
an unanswered and authenticated user by

121
00:04:25,520 --> 00:04:28,960
default and one of them which you uh may

122
00:04:28,960 --> 00:04:31,759
aware of it is admin edit.php

123
00:04:31,759 --> 00:04:34,479
and the other one is admin post.php so

124
00:04:34,479 --> 00:04:36,240
these two files they are also

125
00:04:36,240 --> 00:04:37,520
responsible

126
00:04:37,520 --> 00:04:41,199
for the 99 of wordpress exploits which

127
00:04:41,199 --> 00:04:42,960
are published every day and not

128
00:04:42,960 --> 00:04:44,479
wordpress i mean the wordpress themes

129
00:04:44,479 --> 00:04:46,080
and plugin exploits

130
00:04:46,080 --> 00:04:47,840
which are published every day

131
00:04:47,840 --> 00:04:49,840
and i have no idea why wordpress has

132
00:04:49,840 --> 00:04:51,919
done absolutely nothing to address these

133
00:04:51,919 --> 00:04:54,479
issues because all of the plugins teams

134
00:04:54,479 --> 00:04:55,759
and

135
00:04:55,759 --> 00:04:58,160
the the yeah the plugins and tmx rights

136
00:04:58,160 --> 00:05:00,880
data revolve around these two files

137
00:05:00,880 --> 00:05:01,680
um

138
00:05:01,680 --> 00:05:04,479
in my opinion like i think if there is

139
00:05:04,479 --> 00:05:06,320
any file in the admin directory it

140
00:05:06,320 --> 00:05:07,600
should be restricted it should be

141
00:05:07,600 --> 00:05:09,360
restricted to only logged in user let's

142
00:05:09,360 --> 00:05:10,960
say administrator

143
00:05:10,960 --> 00:05:11,759
or

144
00:05:11,759 --> 00:05:14,639
any other affiliate user

145
00:05:14,639 --> 00:05:18,240
so first function is is admin let's say

146
00:05:18,240 --> 00:05:19,759
you're a developer and you're very new

147
00:05:19,759 --> 00:05:22,000
to wordpress if you came across this

148
00:05:22,000 --> 00:05:23,199
function

149
00:05:23,199 --> 00:05:25,360
what will come in your mind that this

150
00:05:25,360 --> 00:05:26,479
function

151
00:05:26,479 --> 00:05:28,960
is actually checking for is admin

152
00:05:28,960 --> 00:05:30,880
but no that's not the case uh this

153
00:05:30,880 --> 00:05:33,520
function only checks if the current

154
00:05:33,520 --> 00:05:35,840
page is admin or not and as i said

155
00:05:35,840 --> 00:05:38,080
before these two files they are

156
00:05:38,080 --> 00:05:40,080
accessible without any

157
00:05:40,080 --> 00:05:43,039
uh at an unauthenticated user if you

158
00:05:43,039 --> 00:05:44,639
access these two pages that means you

159
00:05:44,639 --> 00:05:47,280
have already bypassed this chart

160
00:05:47,280 --> 00:05:49,600
for example even if my grandma she opens

161
00:05:49,600 --> 00:05:51,919
this url that means she has bypassed is

162
00:05:51,919 --> 00:05:53,840
that being checked and i will just show

163
00:05:53,840 --> 00:05:56,720
you a very small example uh there was a

164
00:05:56,720 --> 00:05:59,280
uh exploit in social warfare plug-in few

165
00:05:59,280 --> 00:06:00,880
years ago

166
00:06:00,880 --> 00:06:04,560
and that's how uh this uh the

167
00:06:04,560 --> 00:06:07,520
vulnerability uh this is how this uh

168
00:06:07,520 --> 00:06:10,400
the vulnerability occurs um uh so in the

169
00:06:10,400 --> 00:06:12,000
first line of code the developer is

170
00:06:12,000 --> 00:06:13,680
checking it is admin so developer

171
00:06:13,680 --> 00:06:15,039
probably assumed

172
00:06:15,039 --> 00:06:17,680
that if the current user is admin or not

173
00:06:17,680 --> 00:06:19,759
and then just kill the code and the next

174
00:06:19,759 --> 00:06:22,000
line it's taking uh

175
00:06:22,000 --> 00:06:25,840
a user provided input the url

176
00:06:25,840 --> 00:06:27,199
and fetches it

177
00:06:27,199 --> 00:06:28,800
and i will just snip the rest of the

178
00:06:28,800 --> 00:06:31,600
code and come to the and if you look it

179
00:06:31,600 --> 00:06:32,479
sends

180
00:06:32,479 --> 00:06:35,840
all those uh the euro provided input

181
00:06:35,840 --> 00:06:38,479
fetches uh the data from the url and

182
00:06:38,479 --> 00:06:40,639
sent straight into the evil function

183
00:06:40,639 --> 00:06:42,960
so it was totally unauthenticated remote

184
00:06:42,960 --> 00:06:44,880
code execution vulnerability in this

185
00:06:44,880 --> 00:06:47,280
plugin called social warfare plugin

186
00:06:47,280 --> 00:06:49,199
and the payload was so simple it's just

187
00:06:49,199 --> 00:06:51,280
one line url you see the payload equals

188
00:06:51,280 --> 00:06:52,880
this um

189
00:06:52,880 --> 00:06:55,680
admin post.php you already bypass it is

190
00:06:55,680 --> 00:06:58,880
admin check and then you come to wp url

191
00:06:58,880 --> 00:07:01,199
and here you have provided the attacker

192
00:07:01,199 --> 00:07:04,160
host and payload.txt contains just this

193
00:07:04,160 --> 00:07:06,000
code which is calling a php system

194
00:07:06,000 --> 00:07:09,360
function 25 month

195
00:07:09,680 --> 00:07:11,919
admin in it so what is a hook in

196
00:07:11,919 --> 00:07:14,319
wordpress so hook is basically by name

197
00:07:14,319 --> 00:07:16,560
means like uh

198
00:07:16,560 --> 00:07:18,800
you want to call your custom function

199
00:07:18,800 --> 00:07:20,400
every time a

200
00:07:20,400 --> 00:07:22,560
specific wordpress functionality is

201
00:07:22,560 --> 00:07:24,560
performed let's say in wordpress you log

202
00:07:24,560 --> 00:07:27,199
in you try to save posts you try to

203
00:07:27,199 --> 00:07:29,919
activate a plugin you install a plugin

204
00:07:29,919 --> 00:07:32,240
all these like you want to call your

205
00:07:32,240 --> 00:07:33,520
custom function let's say you made a

206
00:07:33,520 --> 00:07:34,960
custom function

207
00:07:34,960 --> 00:07:37,280
so you want which the purpose of that

208
00:07:37,280 --> 00:07:39,520
function is every time someone activates

209
00:07:39,520 --> 00:07:42,240
a plugin you want to send admin an email

210
00:07:42,240 --> 00:07:44,800
for example so you can add the hook like

211
00:07:44,800 --> 00:07:48,319
add action plugin activate for your

212
00:07:48,319 --> 00:07:49,680
custom function

213
00:07:49,680 --> 00:07:51,680
and then send an email there so this is

214
00:07:51,680 --> 00:07:54,080
the purpose of the hook uh so admin

215
00:07:54,080 --> 00:07:57,039
initial it's initialized every time a

216
00:07:57,039 --> 00:07:59,120
page in admin directory is accessed and

217
00:07:59,120 --> 00:08:01,039
as i say because these two pages are

218
00:08:01,039 --> 00:08:03,520
accessible without any authentication

219
00:08:03,520 --> 00:08:07,520
you can also bypass this check as well

220
00:08:07,840 --> 00:08:10,000
this is a very dummy vulnerable code i

221
00:08:10,000 --> 00:08:12,800
have shared here so the red part is the

222
00:08:12,800 --> 00:08:14,160
custom part

223
00:08:14,160 --> 00:08:16,879
uh and the rest of it is the syntax so

224
00:08:16,879 --> 00:08:19,280
uh this is how you declare this admin

225
00:08:19,280 --> 00:08:21,520
inithorp and you can see add action

226
00:08:21,520 --> 00:08:22,960
admin in it

227
00:08:22,960 --> 00:08:24,879
my custom critical function so what's

228
00:08:24,879 --> 00:08:27,599
going on in custom critical function it

229
00:08:27,599 --> 00:08:30,400
takes all of the user inputs and calls

230
00:08:30,400 --> 00:08:32,000
serialize them

231
00:08:32,000 --> 00:08:35,039
and assign them to options uh parameter

232
00:08:35,039 --> 00:08:36,719
and then later update options update

233
00:08:36,719 --> 00:08:38,399
option is also a wordpress score

234
00:08:38,399 --> 00:08:39,440
function

235
00:08:39,440 --> 00:08:40,958
um so you're

236
00:08:40,958 --> 00:08:41,919
like

237
00:08:41,919 --> 00:08:44,560
and in this case here my function

238
00:08:44,560 --> 00:08:47,120
my option name is my team option

239
00:08:47,120 --> 00:08:49,920
so in the modern purpose teams or most

240
00:08:49,920 --> 00:08:52,000
of the wordpress teams like the teams

241
00:08:52,000 --> 00:08:55,040
today are there's so much customizable

242
00:08:55,040 --> 00:08:56,880
uh that if you want to change anything

243
00:08:56,880 --> 00:08:58,640
you want to change your footer header

244
00:08:58,640 --> 00:09:00,399
sidebar anything you do not need to go

245
00:09:00,399 --> 00:09:01,760
into the code

246
00:09:01,760 --> 00:09:03,120
you just log into your wordpress

247
00:09:03,120 --> 00:09:04,560
dashboard there are theme settings and

248
00:09:04,560 --> 00:09:07,360
you just store all of your you want to

249
00:09:07,360 --> 00:09:09,920
set your footer tags logo set everything

250
00:09:09,920 --> 00:09:11,440
and you know

251
00:09:11,440 --> 00:09:12,560
if you want

252
00:09:12,560 --> 00:09:13,360
so

253
00:09:13,360 --> 00:09:16,240
this is a very uh dummy kind of code

254
00:09:16,240 --> 00:09:19,040
so how to actually exploit this uh um

255
00:09:19,040 --> 00:09:20,880
this function this dummy function this

256
00:09:20,880 --> 00:09:22,959
is how you sprite it you just send the

257
00:09:22,959 --> 00:09:25,360
post request to admin post because

258
00:09:25,360 --> 00:09:27,200
admin post is accessible without any

259
00:09:27,200 --> 00:09:28,959
authentication

260
00:09:28,959 --> 00:09:30,880
and setting number one that's called

261
00:09:30,880 --> 00:09:33,120
setting number one is the setting of

262
00:09:33,120 --> 00:09:34,000
your

263
00:09:34,000 --> 00:09:35,519
header for example

264
00:09:35,519 --> 00:09:37,680
and setting number two is responsible

265
00:09:37,680 --> 00:09:40,320
for your footer test right so

266
00:09:40,320 --> 00:09:42,720
i'm gonna send this post request

267
00:09:42,720 --> 00:09:44,640
and your header will be changed with

268
00:09:44,640 --> 00:09:46,399
this text called

269
00:09:46,399 --> 00:09:49,600
test and your footer text which mostly

270
00:09:49,600 --> 00:09:52,080
like copyright 2022 or something like

271
00:09:52,080 --> 00:09:52,800
this

272
00:09:52,800 --> 00:09:55,680
it will be replaced by this so

273
00:09:55,680 --> 00:09:58,560
theoretically you will have a

274
00:09:58,560 --> 00:10:01,040
persistent stored exercise onto the home

275
00:10:01,040 --> 00:10:03,200
page of purpose

276
00:10:03,200 --> 00:10:05,360
and i will literally show you poc on an

277
00:10:05,360 --> 00:10:07,440
actual website i how actually started

278
00:10:07,440 --> 00:10:08,880
there

279
00:10:08,880 --> 00:10:12,160
um spotify stupid units.com so this

280
00:10:12,160 --> 00:10:15,680
website uh uh is owned by

281
00:10:15,680 --> 00:10:19,680
spotify and it it's not right now but it

282
00:10:19,680 --> 00:10:21,519
used to be part of their

283
00:10:21,519 --> 00:10:23,839
bug bounty program so i came across this

284
00:10:23,839 --> 00:10:26,240
website this was a

285
00:10:26,240 --> 00:10:28,399
this was based on wordpress so i started

286
00:10:28,399 --> 00:10:30,640
doing the code review for this one and

287
00:10:30,640 --> 00:10:33,279
when i was doing the code review i found

288
00:10:33,279 --> 00:10:35,760
they were using a premium plugin called

289
00:10:35,760 --> 00:10:37,760
booked and this is the url of that

290
00:10:37,760 --> 00:10:39,200
premium plugin

291
00:10:39,200 --> 00:10:41,519
uh where um

292
00:10:41,519 --> 00:10:43,920
you can actually buy this plugin so this

293
00:10:43,920 --> 00:10:45,839
plugin is worth around twenty or thirty

294
00:10:45,839 --> 00:10:49,040
dollars like i have to either buy it

295
00:10:49,040 --> 00:10:49,839
or

296
00:10:49,839 --> 00:10:51,920
just download it from any priority site

297
00:10:51,920 --> 00:10:53,760
to do the review

298
00:10:53,760 --> 00:10:55,920
so what i did was uh because i was also

299
00:10:55,920 --> 00:10:57,839
a wordpress developer in the past so i

300
00:10:57,839 --> 00:10:59,200
remember i

301
00:10:59,200 --> 00:11:01,120
worked on this plugin for a client so i

302
00:11:01,120 --> 00:11:02,800
had the code so i don't have to worry

303
00:11:02,800 --> 00:11:04,720
about it

304
00:11:04,720 --> 00:11:06,800
and to buy or

305
00:11:06,800 --> 00:11:08,720
download from any pirated website so i

306
00:11:08,720 --> 00:11:11,200
had the source code

307
00:11:11,200 --> 00:11:13,519
and let me show you uh the source code

308
00:11:13,519 --> 00:11:13,890
here

309
00:11:13,890 --> 00:11:17,200
[Music]

310
00:11:17,200 --> 00:11:19,440
so this was it i will not go to the very

311
00:11:19,440 --> 00:11:21,680
um um the whole source code i will just

312
00:11:21,680 --> 00:11:23,519
i just copied the specific vulnerable

313
00:11:23,519 --> 00:11:24,640
function

314
00:11:24,640 --> 00:11:27,600
um just to for poc here

315
00:11:27,600 --> 00:11:31,040
so it was uh initializing admin init

316
00:11:31,040 --> 00:11:31,920
hook

317
00:11:31,920 --> 00:11:32,959
see a

318
00:11:32,959 --> 00:11:35,600
head action admin in it every time a uh

319
00:11:35,600 --> 00:11:38,240
admin pages access call this function

320
00:11:38,240 --> 00:11:40,240
admin in it an admin init is also a

321
00:11:40,240 --> 00:11:42,560
custom function which is defined here

322
00:11:42,560 --> 00:11:45,040
so i will not go to into

323
00:11:45,040 --> 00:11:46,399
very detail

324
00:11:46,399 --> 00:11:49,519
but so this website secret genius was

325
00:11:49,519 --> 00:11:53,200
website for artists like they make an

326
00:11:53,200 --> 00:11:55,360
booking or kind of appointment with the

327
00:11:55,360 --> 00:11:57,760
with spotify they come they submit their

328
00:11:57,760 --> 00:11:59,519
first name last name

329
00:11:59,519 --> 00:12:01,839
uh their address phone number and other

330
00:12:01,839 --> 00:12:05,040
pii just to make an appointment so

331
00:12:05,040 --> 00:12:07,279
all of that details was stored in the

332
00:12:07,279 --> 00:12:10,800
backend database of this wordpress

333
00:12:10,800 --> 00:12:13,279
so this functionality was supposed to be

334
00:12:13,279 --> 00:12:15,680
our only administrator for the

335
00:12:15,680 --> 00:12:19,120
administrator was supposed to

336
00:12:19,760 --> 00:12:21,760
log into the dashboard and download all

337
00:12:21,760 --> 00:12:23,600
of the records of all the requirements

338
00:12:23,600 --> 00:12:26,399
which all the artists have submitted

339
00:12:26,399 --> 00:12:27,519
so

340
00:12:27,519 --> 00:12:29,680
when i came into this function admin in

341
00:12:29,680 --> 00:12:32,240
it i knew as soon as i accessed admin

342
00:12:32,240 --> 00:12:35,519
ages.php or adding post.php i'm already

343
00:12:35,519 --> 00:12:37,279
inside this function and when i review

344
00:12:37,279 --> 00:12:38,560
this function

345
00:12:38,560 --> 00:12:40,480
it's only checking if it said post

346
00:12:40,480 --> 00:12:43,760
parameter if pause parameter this is set

347
00:12:43,760 --> 00:12:46,079
then include this file i will not go to

348
00:12:46,079 --> 00:12:47,920
detail of this file

349
00:12:47,920 --> 00:12:48,720
but

350
00:12:48,720 --> 00:12:50,480
if you look at this function right now

351
00:12:50,480 --> 00:12:52,079
it does not contain any kind of

352
00:12:52,079 --> 00:12:54,880
authorization check it uh it's not

353
00:12:54,880 --> 00:12:56,639
checking if the current user is logged

354
00:12:56,639 --> 00:12:58,639
in or not it's not even checking if the

355
00:12:58,639 --> 00:13:00,560
current user is administrator or not

356
00:13:00,560 --> 00:13:01,760
nothing at all

357
00:13:01,760 --> 00:13:04,240
and and in this very first line is just

358
00:13:04,240 --> 00:13:06,560
checking if pause parameter

359
00:13:06,560 --> 00:13:09,279
this is set then include this file i

360
00:13:09,279 --> 00:13:11,680
will not go to into detail of this file

361
00:13:11,680 --> 00:13:12,800
but

362
00:13:12,800 --> 00:13:15,600
this file was responsible to to take all

363
00:13:15,600 --> 00:13:17,519
the records from

364
00:13:17,519 --> 00:13:19,360
all the requirement records from

365
00:13:19,360 --> 00:13:21,519
database and convert them into gst and

366
00:13:21,519 --> 00:13:23,120
there's throw the output it was so

367
00:13:23,120 --> 00:13:25,519
simple so how we actually exported it i

368
00:13:25,519 --> 00:13:27,200
just sent a post request to admin

369
00:13:27,200 --> 00:13:28,800
post.php

370
00:13:28,800 --> 00:13:30,639
why because this file is again

371
00:13:30,639 --> 00:13:33,680
accessible without any authentication

372
00:13:33,680 --> 00:13:35,760
and i just said this post parameter

373
00:13:35,760 --> 00:13:38,240
which is in in the code above just said

374
00:13:38,240 --> 00:13:40,639
this that's it this was so simple

375
00:13:40,639 --> 00:13:43,199
this was exploit and in the response

376
00:13:43,199 --> 00:13:45,519
it threw me the whole csv file you can

377
00:13:45,519 --> 00:13:48,399
see the csv file name right here and it

378
00:13:48,399 --> 00:13:50,959
i will not obviously share all the data

379
00:13:50,959 --> 00:13:53,120
but there i will just show the header of

380
00:13:53,120 --> 00:13:55,519
the uh output file which i received it

381
00:13:55,519 --> 00:13:57,839
contained first name last name email

382
00:13:57,839 --> 00:13:59,519
phone number and custom field data

383
00:13:59,519 --> 00:14:01,199
further contained

384
00:14:01,199 --> 00:14:04,160
address and stuff like this and uh by

385
00:14:04,160 --> 00:14:06,240
just simple this request i was able to

386
00:14:06,240 --> 00:14:09,120
dump like thousands of artist records

387
00:14:09,120 --> 00:14:12,320
uh on spotify cpu genius uh

388
00:14:12,320 --> 00:14:15,120
while i was still reviewing this i

389
00:14:15,120 --> 00:14:17,360
i found a lot of more issues as well and

390
00:14:17,360 --> 00:14:19,600
when spotify realized the underlying

391
00:14:19,600 --> 00:14:21,600
code was so bad because they purchased a

392
00:14:21,600 --> 00:14:23,680
plugin from somebody

393
00:14:23,680 --> 00:14:26,240
you know like it was so poorly uh

394
00:14:26,240 --> 00:14:28,720
written code so they totally shut down

395
00:14:28,720 --> 00:14:30,639
their website secretcenium.com is not

396
00:14:30,639 --> 00:14:32,160
available anymore if you open this

397
00:14:32,160 --> 00:14:35,360
website if you either spotify.com

398
00:14:35,360 --> 00:14:37,600
um

399
00:14:37,680 --> 00:14:38,720
okay

400
00:14:38,720 --> 00:14:41,519
so another thing is user is registration

401
00:14:41,519 --> 00:14:43,600
widens uh wordpress attack surface this

402
00:14:43,600 --> 00:14:44,800
is what i

403
00:14:44,800 --> 00:14:45,920
mentioned

404
00:14:45,920 --> 00:14:48,720
initially in the start of this talk

405
00:14:48,720 --> 00:14:51,199
so every time you start you're doing a

406
00:14:51,199 --> 00:14:53,600
bug bounty or you're working for a

407
00:14:53,600 --> 00:14:55,440
client

408
00:14:55,440 --> 00:14:58,480
just you your aim is to make sure

409
00:14:58,480 --> 00:14:59,519
somehow

410
00:14:59,519 --> 00:15:01,440
you need to add a user into the

411
00:15:01,440 --> 00:15:03,199
wordpress and by default as i said

412
00:15:03,199 --> 00:15:05,199
registration is disabled but if you

413
00:15:05,199 --> 00:15:07,440
access this url it will tell you that

414
00:15:07,440 --> 00:15:09,920
this user registration is enabled or not

415
00:15:09,920 --> 00:15:10,880
or

416
00:15:10,880 --> 00:15:12,800
review the website manually maybe there

417
00:15:12,800 --> 00:15:14,800
is some custom signup page somewhere in

418
00:15:14,800 --> 00:15:16,800
the wordpress right which allows you to

419
00:15:16,800 --> 00:15:18,720
register especially if this is an

420
00:15:18,720 --> 00:15:20,480
e-commerce website

421
00:15:20,480 --> 00:15:22,399
because obviously if it is an e-commerce

422
00:15:22,399 --> 00:15:23,920
website

423
00:15:23,920 --> 00:15:26,000
the shop owners or the administrator

424
00:15:26,000 --> 00:15:27,680
they encourage you to sign up to their

425
00:15:27,680 --> 00:15:28,800
website

426
00:15:28,800 --> 00:15:30,800
they they want you to you know they want

427
00:15:30,800 --> 00:15:32,800
your data so they want you to encourage

428
00:15:32,800 --> 00:15:34,000
you to sign up

429
00:15:34,000 --> 00:15:36,959
and because they

430
00:15:36,959 --> 00:15:39,040
they can use your email and phone number

431
00:15:39,040 --> 00:15:40,480
later to spam you

432
00:15:40,480 --> 00:15:43,199
um so make sure yeah if it's e-commerce

433
00:15:43,199 --> 00:15:45,759
it's very easy to sign up the thing is

434
00:15:45,759 --> 00:15:47,839
if let's say there are like 20 plugins

435
00:15:47,839 --> 00:15:49,680
installed in wordpress you start

436
00:15:49,680 --> 00:15:51,600
reviewing all the plugins one by one you

437
00:15:51,600 --> 00:15:54,480
came across plugin number one and you

438
00:15:54,480 --> 00:15:56,320
find and you saw there is a privilege

439
00:15:56,320 --> 00:15:58,160
escalation vulnerability there and you

440
00:15:58,160 --> 00:16:01,440
are like i need to have at least a low

441
00:16:01,440 --> 00:16:03,279
privileged user to do the privilege

442
00:16:03,279 --> 00:16:04,480
escalation

443
00:16:04,480 --> 00:16:05,920
and you start reviewing all of the

444
00:16:05,920 --> 00:16:07,920
plugins plug into plugins all and

445
00:16:07,920 --> 00:16:09,920
remember that all these plugins they're

446
00:16:09,920 --> 00:16:11,839
independent of each other right

447
00:16:11,839 --> 00:16:14,160
and you can then and you came across

448
00:16:14,160 --> 00:16:15,920
plugin number five and plugin number

449
00:16:15,920 --> 00:16:16,800
five

450
00:16:16,800 --> 00:16:20,000
allows user to do the registration so

451
00:16:20,000 --> 00:16:22,160
now you can change two plugins plugin

452
00:16:22,160 --> 00:16:24,480
number five and plugin number one

453
00:16:24,480 --> 00:16:27,279
to actually exploit your wordpress which

454
00:16:27,279 --> 00:16:29,440
is your target so plugin number five

455
00:16:29,440 --> 00:16:32,000
will allow you to do the registration

456
00:16:32,000 --> 00:16:34,880
and using that user now you can exploit

457
00:16:34,880 --> 00:16:36,720
the vulnerability you found in front

458
00:16:36,720 --> 00:16:37,920
number one

459
00:16:37,920 --> 00:16:40,399
or you can use google docs like this

460
00:16:40,399 --> 00:16:44,720
search for sign up and register page

461
00:16:45,680 --> 00:16:47,600
the second hook is

462
00:16:47,600 --> 00:16:51,600
wpaj x no privilege action so this hook

463
00:16:51,600 --> 00:16:54,240
is used to trigger specific functions or

464
00:16:54,240 --> 00:16:56,959
specific custom function on edges calls

465
00:16:56,959 --> 00:16:59,279
so this is how the syntax is

466
00:16:59,279 --> 00:17:01,680
the red part is the custom part which

467
00:17:01,680 --> 00:17:02,839
you need to

468
00:17:02,839 --> 00:17:04,720
specify uh

469
00:17:04,720 --> 00:17:07,199
the first one here this empty set

470
00:17:07,199 --> 00:17:10,160
is the name of the action so when action

471
00:17:10,160 --> 00:17:12,400
equals empty set then call this function

472
00:17:12,400 --> 00:17:14,559
empty sec underscore function and then

473
00:17:14,559 --> 00:17:15,919
you can review this function what's

474
00:17:15,919 --> 00:17:18,880
going on there so how to actually reach

475
00:17:18,880 --> 00:17:21,039
this function theoretically this is how

476
00:17:21,039 --> 00:17:22,480
you reach it

477
00:17:22,480 --> 00:17:24,559
uh just send a post request or you can

478
00:17:24,559 --> 00:17:26,720
even send a get request as well to admin

479
00:17:26,720 --> 00:17:28,559
edges because you know this is a hex

480
00:17:28,559 --> 00:17:29,600
hook

481
00:17:29,600 --> 00:17:31,919
and action equals empty set and this is

482
00:17:31,919 --> 00:17:34,400
what i said action equals mbsec

483
00:17:34,400 --> 00:17:36,160
and then you will be inside this

484
00:17:36,160 --> 00:17:37,919
function

485
00:17:37,919 --> 00:17:40,720
uh the thing with this hook is it freely

486
00:17:40,720 --> 00:17:43,760
says wp underscore ajax no privilege no

487
00:17:43,760 --> 00:17:45,280
period means like

488
00:17:45,280 --> 00:17:46,480
this is supposed to be for

489
00:17:46,480 --> 00:17:49,280
unauthenticated user or this is only for

490
00:17:49,280 --> 00:17:51,840
the front-end users so when developers

491
00:17:51,840 --> 00:17:54,400
are using this so most of the time they

492
00:17:54,400 --> 00:17:55,919
then they know that

493
00:17:55,919 --> 00:17:58,640
um this this is only supposed to be for

494
00:17:58,640 --> 00:18:00,880
front-end users so do not put anything

495
00:18:00,880 --> 00:18:02,960
critical inside this function

496
00:18:02,960 --> 00:18:03,840
but

497
00:18:03,840 --> 00:18:05,679
this function should be in your

498
00:18:05,679 --> 00:18:07,679
checklist and you should review i have

499
00:18:07,679 --> 00:18:10,000
found a lot of issues within this

500
00:18:10,000 --> 00:18:12,799
function as well

501
00:18:12,880 --> 00:18:15,679
the next one is wp8x this is exactly

502
00:18:15,679 --> 00:18:18,880
same as wp no privilege but this one is

503
00:18:18,880 --> 00:18:21,039
without no privilege

504
00:18:21,039 --> 00:18:23,280
and you can see here there was no

505
00:18:23,280 --> 00:18:25,280
privilege and this time here it is

506
00:18:25,280 --> 00:18:26,960
without no privilege the syntax is

507
00:18:26,960 --> 00:18:29,840
exactly same and how to reach it now

508
00:18:29,840 --> 00:18:31,840
it's exactly the same syntax action

509
00:18:31,840 --> 00:18:34,720
equilibrium set but this time you need

510
00:18:34,720 --> 00:18:36,720
cookies the session cookies of any

511
00:18:36,720 --> 00:18:39,200
privileged user that user can be even

512
00:18:39,200 --> 00:18:41,600
administrator or it can be even these

513
00:18:41,600 --> 00:18:43,200
clearly users

514
00:18:43,200 --> 00:18:45,360
the problem with this hook is that

515
00:18:45,360 --> 00:18:48,240
developer know that if they want

516
00:18:48,240 --> 00:18:49,919
um

517
00:18:49,919 --> 00:18:51,840
if they want edges for the front end

518
00:18:51,840 --> 00:18:53,840
user then they are using

519
00:18:53,840 --> 00:18:56,400
no privilege but this one here they know

520
00:18:56,400 --> 00:18:58,000
this that

521
00:18:58,000 --> 00:19:00,160
this is only for authenticated user and

522
00:19:00,160 --> 00:19:01,919
they also assume

523
00:19:01,919 --> 00:19:03,520
that

524
00:19:03,520 --> 00:19:05,280
administrator is the only authenticated

525
00:19:05,280 --> 00:19:07,600
user right so they write a lot of

526
00:19:07,600 --> 00:19:10,559
critical stuffs in this function and

527
00:19:10,559 --> 00:19:12,640
this is why i told you that if you are

528
00:19:12,640 --> 00:19:15,120
somehow able to register a user in

529
00:19:15,120 --> 00:19:17,600
wordpress core it will expand your

530
00:19:17,600 --> 00:19:21,280
attack surface and once you have a user

531
00:19:21,280 --> 00:19:23,440
and that any of these plug any of the

532
00:19:23,440 --> 00:19:26,320
plugins or themes is using this uh

533
00:19:26,320 --> 00:19:28,080
this hook then for sure you will find a

534
00:19:28,080 --> 00:19:30,160
lot of critical stuff inside this

535
00:19:30,160 --> 00:19:31,919
function as well

536
00:19:31,919 --> 00:19:33,600
and this is how you reach it you just

537
00:19:33,600 --> 00:19:34,720
need a

538
00:19:34,720 --> 00:19:36,000
in this case

539
00:19:36,000 --> 00:19:37,600
we do not need any kind of session

540
00:19:37,600 --> 00:19:40,559
cookies but here we need a session of

541
00:19:40,559 --> 00:19:41,840
please

542
00:19:41,840 --> 00:19:43,919
any any privileged user

543
00:19:43,919 --> 00:19:45,600
so to sum this up

544
00:19:45,600 --> 00:19:47,600
if you are unauthenticated if you are

545
00:19:47,600 --> 00:19:50,320
not able to register any user on the

546
00:19:50,320 --> 00:19:53,039
wordpress then only these uh hooks in

547
00:19:53,039 --> 00:19:54,960
the green ones are available for you to

548
00:19:54,960 --> 00:19:56,080
review

549
00:19:56,080 --> 00:19:58,240
if you were able to register a user

550
00:19:58,240 --> 00:20:00,720
somehow onto the wordpress and then all

551
00:20:00,720 --> 00:20:03,039
of these hooks are available and this is

552
00:20:03,039 --> 00:20:04,720
how you actually expanded your text

553
00:20:04,720 --> 00:20:07,600
surface to do the core review

554
00:20:07,600 --> 00:20:11,120
test case for coldfusion.adobe.com

555
00:20:11,120 --> 00:20:14,080
um so i came across this site during a

556
00:20:14,080 --> 00:20:16,960
bug bounty as cold fusion is a community

557
00:20:16,960 --> 00:20:20,559
website for adobe product uh

558
00:20:20,559 --> 00:20:22,720
uh when i came across this site i knew

559
00:20:22,720 --> 00:20:25,039
it is developed on wordpress

560
00:20:25,039 --> 00:20:27,200
and i see they have an option to join

561
00:20:27,200 --> 00:20:29,440
community or sign in as well like you

562
00:20:29,440 --> 00:20:31,760
can register or sign in if you have an

563
00:20:31,760 --> 00:20:33,280
account

564
00:20:33,280 --> 00:20:35,679
so when i you click join community or

565
00:20:35,679 --> 00:20:38,080
you use click sign it actually redirects

566
00:20:38,080 --> 00:20:40,240
you to the adobe main authentication

567
00:20:40,240 --> 00:20:41,280
page like

568
00:20:41,280 --> 00:20:43,039
for example when you try to log into a

569
00:20:43,039 --> 00:20:45,200
third-party vendor through google or to

570
00:20:45,200 --> 00:20:47,120
facebook it's pretty normal so this is

571
00:20:47,120 --> 00:20:48,720
also normal

572
00:20:48,720 --> 00:20:50,880
the thing here was

573
00:20:50,880 --> 00:20:53,280
when you sign up here or when you log in

574
00:20:53,280 --> 00:20:55,280
here it will redirect you back to cold

575
00:20:55,280 --> 00:20:56,880
fusion fair enough

576
00:20:56,880 --> 00:20:59,760
the problem is it does not also redirect

577
00:20:59,760 --> 00:21:02,640
you here but it also registered your

578
00:21:02,640 --> 00:21:04,799
user into the wordpress core

579
00:21:04,799 --> 00:21:07,440
of this website called fusion.com and

580
00:21:07,440 --> 00:21:09,360
how i actually knew it because after i

581
00:21:09,360 --> 00:21:11,280
signed it i was inspecting my traffic i

582
00:21:11,280 --> 00:21:13,360
see there is a uh

583
00:21:13,360 --> 00:21:15,120
there is a session cookie going on to

584
00:21:15,120 --> 00:21:17,360
the server and that cookie was the

585
00:21:17,360 --> 00:21:18,559
wordpress

586
00:21:18,559 --> 00:21:20,720
the wordpress session i did not even

587
00:21:20,720 --> 00:21:22,400
know what my username is on the

588
00:21:22,400 --> 00:21:24,799
wordpress but all i had was i had a user

589
00:21:24,799 --> 00:21:26,480
on wordpress i have the session copies

590
00:21:26,480 --> 00:21:27,760
of that

591
00:21:27,760 --> 00:21:31,039
of the wordpress user so this is how the

592
00:21:31,039 --> 00:21:33,280
flow was login to this url if we read

593
00:21:33,280 --> 00:21:34,640
their queue here

594
00:21:34,640 --> 00:21:37,280
so i was doing the code review for um

595
00:21:37,280 --> 00:21:39,200
adobe and i found they were using this

596
00:21:39,200 --> 00:21:41,600
theme called centroid

597
00:21:41,600 --> 00:21:43,840
this one and when i googled more about

598
00:21:43,840 --> 00:21:46,480
this team i found that this is actually

599
00:21:46,480 --> 00:21:49,600
a premium team sold on team forest

600
00:21:49,600 --> 00:21:50,799
so i

601
00:21:50,799 --> 00:21:53,360
and when i checked it well this team was

602
00:21:53,360 --> 00:21:55,919
worth 50 dollars so i'm like i have to

603
00:21:55,919 --> 00:21:57,760
buy this to do the core review or you

604
00:21:57,760 --> 00:21:59,120
can just do this

605
00:21:59,120 --> 00:22:02,480
to download it obviously uh

606
00:22:02,480 --> 00:22:04,960
don't do it um

607
00:22:04,960 --> 00:22:06,480
be ver very careful when you're

608
00:22:06,480 --> 00:22:08,480
downloading like this because for sure

609
00:22:08,480 --> 00:22:10,480
they will contain tractors

610
00:22:10,480 --> 00:22:13,520
so make sure you you do not run in that

611
00:22:13,520 --> 00:22:15,919
theme or those plugins on any critical

612
00:22:15,919 --> 00:22:18,320
infrastructure or any critical system

613
00:22:18,320 --> 00:22:22,639
make sure everything is isolated and so

614
00:22:22,880 --> 00:22:25,200
yeah so i downloaded it and let me show

615
00:22:25,200 --> 00:22:26,300
you a plc

616
00:22:26,300 --> 00:22:27,919
[Music]

617
00:22:27,919 --> 00:22:30,880
the thing is um

618
00:22:30,880 --> 00:22:32,960
um wait let me show you the exploit

619
00:22:32,960 --> 00:22:36,559
first the vulnerable club

620
00:22:36,559 --> 00:22:38,640
so i was doing the code review now i

621
00:22:38,640 --> 00:22:40,880
knew that i have somehow registered a

622
00:22:40,880 --> 00:22:43,919
user into the wordpress so theoretically

623
00:22:43,919 --> 00:22:46,960
i can not only access uh wp ajax no

624
00:22:46,960 --> 00:22:49,760
privilege but i can also review the wp

625
00:22:49,760 --> 00:22:52,400
hx hooks also because i have at least a

626
00:22:52,400 --> 00:22:54,799
privileged user now so i came across

627
00:22:54,799 --> 00:22:56,960
this function and i've only copied the

628
00:22:56,960 --> 00:22:58,880
only vulnerable function for the poc

629
00:22:58,880 --> 00:23:00,000
purposes

630
00:23:00,000 --> 00:23:03,679
um so i came across this function empty

631
00:23:03,679 --> 00:23:05,520
and theme save option what this

632
00:23:05,520 --> 00:23:07,679
basically means is

633
00:23:07,679 --> 00:23:09,360
this function is or this hook is

634
00:23:09,360 --> 00:23:11,280
responsible to save all your theme

635
00:23:11,280 --> 00:23:13,840
options for example on adobe they have

636
00:23:13,840 --> 00:23:14,960
set their

637
00:23:14,960 --> 00:23:16,720
logo they have set their footer they

638
00:23:16,720 --> 00:23:18,559
have set their sidebars and all those

639
00:23:18,559 --> 00:23:21,280
settings are

640
00:23:21,280 --> 00:23:25,200
are responsible by this this hook right

641
00:23:25,200 --> 00:23:27,760
so that and i was like

642
00:23:27,760 --> 00:23:30,080
what if i let's say i found the

643
00:23:30,080 --> 00:23:32,240
vulnerability how am i gonna show them a

644
00:23:32,240 --> 00:23:35,200
poc should i inject my exercise payload

645
00:23:35,200 --> 00:23:37,039
into the footer which should reflect on

646
00:23:37,039 --> 00:23:40,960
their home page which makes no sense

647
00:23:40,960 --> 00:23:43,360
and if i had showed that poc i would

648
00:23:43,360 --> 00:23:45,440
have gotten in trouble so i was like

649
00:23:45,440 --> 00:23:47,679
um i should make this fields in the

650
00:23:47,679 --> 00:23:50,080
localhost and send them the uh send them

651
00:23:50,080 --> 00:23:52,480
the videos so this is the

652
00:23:52,480 --> 00:23:55,039
plc i made on my localhost so what i did

653
00:23:55,039 --> 00:23:58,080
on my localhost was i uh installed this

654
00:23:58,080 --> 00:23:59,919
vulnerable team supposedly vulnerable

655
00:23:59,919 --> 00:24:02,799
team on my localhost and i used to

656
00:24:02,799 --> 00:24:05,600
i made the very least privileged user

657
00:24:05,600 --> 00:24:08,480
call it demo so this demo has only

658
00:24:08,480 --> 00:24:10,559
subscriber level of uh privilege you can

659
00:24:10,559 --> 00:24:12,080
see on the left side it does not have

660
00:24:12,080 --> 00:24:14,240
any kind of privilege right and the

661
00:24:14,240 --> 00:24:16,400
theme centric is installed there

662
00:24:16,400 --> 00:24:18,159
so

663
00:24:18,159 --> 00:24:20,320
and you see in the footer you can see

664
00:24:20,320 --> 00:24:21,760
the uh

665
00:24:21,760 --> 00:24:24,400
copyright 2022 so let's exploit it and

666
00:24:24,400 --> 00:24:28,000
change the 2022 to 2024 maybe

667
00:24:28,000 --> 00:24:30,640
um so

668
00:24:30,640 --> 00:24:34,480
i sent it uh this uh plc uh the request

669
00:24:34,480 --> 00:24:36,880
to my repeater and this request my main

670
00:24:36,880 --> 00:24:39,360
concern is only the cookies i only need

671
00:24:39,360 --> 00:24:41,039
cookies right i only need the session

672
00:24:41,039 --> 00:24:42,240
cookie right

673
00:24:42,240 --> 00:24:44,159
and because i have the session cookie on

674
00:24:44,159 --> 00:24:46,960
adobe collection or adobe.com

675
00:24:46,960 --> 00:24:48,640
so i was like yeah this should work on

676
00:24:48,640 --> 00:24:49,520
the

677
00:24:49,520 --> 00:24:52,400
main website as well so here i send this

678
00:24:52,400 --> 00:24:54,480
request to repeater i

679
00:24:54,480 --> 00:24:56,400
change it to post

680
00:24:56,400 --> 00:25:00,799
and then i change the profile to admin

681
00:25:00,799 --> 00:25:03,840
post.php sorry administrator because the

682
00:25:03,840 --> 00:25:06,159
uh edge excel was vulnerable

683
00:25:06,159 --> 00:25:09,440
and this is i i copied the photo tags um

684
00:25:09,440 --> 00:25:10,960
you can see

685
00:25:10,960 --> 00:25:13,039
it's not

686
00:25:13,039 --> 00:25:14,960
there is no any kind of critical uh what

687
00:25:14,960 --> 00:25:16,400
you say

688
00:25:16,400 --> 00:25:19,039
uh token or stuff like this it's same

689
00:25:19,039 --> 00:25:21,520
for all the teams which are using it's

690
00:25:21,520 --> 00:25:23,279
the same for all of them

691
00:25:23,279 --> 00:25:24,480
so you see

692
00:25:24,480 --> 00:25:27,679
team um responsive and which setting we

693
00:25:27,679 --> 00:25:30,080
are trying to update footer copyright

694
00:25:30,080 --> 00:25:33,440
and we try to change copyright 2022

695
00:25:33,440 --> 00:25:38,080
to 20 let's say 2024

696
00:25:40,240 --> 00:25:42,799
so i send this came back to the home

697
00:25:42,799 --> 00:25:44,880
page go to the bottom you see the footer

698
00:25:44,880 --> 00:25:46,640
settings change here

699
00:25:46,640 --> 00:25:48,640
using only the least privileged user i

700
00:25:48,640 --> 00:25:51,679
was able to change the footer um so this

701
00:25:51,679 --> 00:25:52,400
uh

702
00:25:52,400 --> 00:25:54,320
the issue the broken authentication as

703
00:25:54,320 --> 00:25:56,640
you can call it it was not only their

704
00:25:56,640 --> 00:25:58,880
broken authentication issue but it was

705
00:25:58,880 --> 00:26:00,320
also not sending

706
00:26:00,320 --> 00:26:02,320
sanitizing any kind of user input so i

707
00:26:02,320 --> 00:26:04,159
was like what if i inject

708
00:26:04,159 --> 00:26:06,720
my javascript payload let's call it

709
00:26:06,720 --> 00:26:10,200
script alert

710
00:26:17,440 --> 00:26:19,600
send this come back to home page refresh

711
00:26:19,600 --> 00:26:21,679
it and i have a stored access onto the

712
00:26:21,679 --> 00:26:23,760
home page

713
00:26:23,760 --> 00:26:26,080
imagine if i send this plc to adobe i

714
00:26:26,080 --> 00:26:26,799
mean

715
00:26:26,799 --> 00:26:28,880
i would have gotten trouble

716
00:26:28,880 --> 00:26:30,799
so what i did was i just made the plc on

717
00:26:30,799 --> 00:26:32,880
localhost and took them a few months to

718
00:26:32,880 --> 00:26:35,279
understand what the issue was but they

719
00:26:35,279 --> 00:26:37,279
did acknowledge later on and they

720
00:26:37,279 --> 00:26:39,840
patched it

721
00:26:41,760 --> 00:26:43,600
so

722
00:26:43,600 --> 00:26:44,640
yeah the

723
00:26:44,640 --> 00:26:46,640
next hook is admin post and we

724
00:26:46,640 --> 00:26:49,840
previously have checked

725
00:26:51,279 --> 00:26:55,360
uh wphx i'm sorry

726
00:26:59,039 --> 00:27:00,880
yeah the next one is

727
00:27:00,880 --> 00:27:02,640
admin post

728
00:27:02,640 --> 00:27:04,960
and admin post no privilege so the

729
00:27:04,960 --> 00:27:07,360
syntax of

730
00:27:07,360 --> 00:27:10,320
this hook is exactly same as the hx1

731
00:27:10,320 --> 00:27:13,120
everything is same exactly the same

732
00:27:13,120 --> 00:27:16,400
except just replace eject with hose

733
00:27:16,400 --> 00:27:18,960
and you see the action is exactly same

734
00:27:18,960 --> 00:27:21,039
and how to actually reach this function

735
00:27:21,039 --> 00:27:22,960
is this is how so instead of sending

736
00:27:22,960 --> 00:27:25,520
post request to admin ajax you send post

737
00:27:25,520 --> 00:27:28,240
requests to admin post and action equals

738
00:27:28,240 --> 00:27:31,679
this but this function is very very

739
00:27:31,679 --> 00:27:34,559
rarely used uh i have reviewed a lot of

740
00:27:34,559 --> 00:27:35,919
plugins

741
00:27:35,919 --> 00:27:38,240
because the purpose of this

742
00:27:38,240 --> 00:27:40,080
both hooks are exactly the same so

743
00:27:40,080 --> 00:27:42,240
developer mostly used admin ajax nobody

744
00:27:42,240 --> 00:27:43,760
used it because

745
00:27:43,760 --> 00:27:46,080
but then again this this hope should be

746
00:27:46,080 --> 00:27:47,440
in your checklist when you're doing the

747
00:27:47,440 --> 00:27:50,799
code review to come across for example

748
00:27:50,799 --> 00:27:53,520
in my experience uh if i lastly came

749
00:27:53,520 --> 00:27:56,799
across 100 instances of wp hx against

750
00:27:56,799 --> 00:27:59,360
those hundred instances i may have only

751
00:27:59,360 --> 00:28:01,840
found only one instance of admin post

752
00:28:01,840 --> 00:28:03,600
but yeah once you find it you should do

753
00:28:03,600 --> 00:28:06,240
the code review for that as well

754
00:28:06,240 --> 00:28:07,840
and again

755
00:28:07,840 --> 00:28:09,360
uh if

756
00:28:09,360 --> 00:28:11,679
if i make an overview uh if you're

757
00:28:11,679 --> 00:28:14,000
unsyndicated only the green ones are

758
00:28:14,000 --> 00:28:15,679
available and if you are somehow able to

759
00:28:15,679 --> 00:28:17,200
register user all these hooks are

760
00:28:17,200 --> 00:28:18,799
available there

761
00:28:18,799 --> 00:28:20,720
so that's all from my talk if you have

762
00:28:20,720 --> 00:28:22,320
any question regarding this you can ask

763
00:28:22,320 --> 00:28:24,559
me

764
00:28:43,039 --> 00:28:45,840
um i like i i can pretend to be an

765
00:28:45,840 --> 00:28:46,799
artist

766
00:28:46,799 --> 00:28:48,799
i can do a cc injection for example

767
00:28:48,799 --> 00:28:50,159
maybe

768
00:28:50,159 --> 00:28:52,080
but my concern was not to find any

769
00:28:52,080 --> 00:28:54,000
clients at work like only server side

770
00:28:54,000 --> 00:28:57,679
but try to dump any user data

771
00:28:57,679 --> 00:29:00,720
yeah this is what i tried

772
00:29:07,679 --> 00:29:10,840
all right

773
00:29:14,960 --> 00:29:17,039
you

