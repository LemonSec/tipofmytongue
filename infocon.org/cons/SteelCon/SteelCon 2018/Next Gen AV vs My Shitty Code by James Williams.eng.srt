1
00:00:02,449 --> 00:00:07,560
<font color="#E5E5E5">okay um so thanks for coming</font><font color="#CCCCCC"> guys</font>

2
00:00:05,279 --> 00:00:09,840
this is next-gen AV<font color="#CCCCCC"> vs. my shitty code</font>

3
00:00:07,560 --> 00:00:11,610
<font color="#E5E5E5">and in true</font><font color="#CCCCCC"> dev fashion I did steal all</font>

4
00:00:09,840 --> 00:00:14,549
the code from<font color="#E5E5E5"> Stack Overflow and various</font>

5
00:00:11,610 --> 00:00:16,470
blog posts so the the<font color="#CCCCCC"> Who am I slide</font>

6
00:00:14,549 --> 00:00:17,310
before<font color="#E5E5E5"> we get started - James I'm a pen</font>

7
00:00:16,470 --> 00:00:18,869
tester with<font color="#CCCCCC"> akarma</font>

8
00:00:17,310 --> 00:00:20,939
I'm also a with covering dotnet

9
00:00:18,869 --> 00:00:22,980
developer<font color="#CCCCCC"> I spent about</font><font color="#E5E5E5"> 10 years of</font><font color="#CCCCCC"> my</font>

10
00:00:20,939 --> 00:00:24,810
life<font color="#CCCCCC"> doing that</font><font color="#E5E5E5"> before moving into info</font>

11
00:00:22,980 --> 00:00:26,640
suck and I'm losing<font color="#CCCCCC"> the back of the</font>

12
00:00:24,810 --> 00:00:29,220
<font color="#CCCCCC">battery cover off the slide phone that's</font>

13
00:00:26,640 --> 00:00:30,390
fine<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> motivation behind this</font><font color="#CCCCCC"> I've</font>

14
00:00:29,220 --> 00:00:31,799
<font color="#CCCCCC">realized I cannot</font><font color="#E5E5E5"> put a slide</font><font color="#CCCCCC"> in</font>

15
00:00:30,390 --> 00:00:33,480
actually tells you what I'm<font color="#E5E5E5"> gonna do but</font>

16
00:00:31,800 --> 00:00:35,340
<font color="#E5E5E5">that will</font><font color="#CCCCCC"> become clear in a minute so I</font>

17
00:00:33,480 --> 00:00:39,300
really like<font color="#E5E5E5"> shells as do most pen</font>

18
00:00:35,340 --> 00:00:40,950
testers<font color="#CCCCCC"> but AV stops my shells running</font>

19
00:00:39,300 --> 00:00:42,989
things to modify payloads on<font color="#CCCCCC"> the fly</font>

20
00:00:40,950 --> 00:00:47,730
<font color="#CCCCCC">kinda</font><font color="#E5E5E5"> sucks like having to encode</font>

21
00:00:42,989 --> 00:00:48,870
payloads is<font color="#CCCCCC"> just so before</font><font color="#E5E5E5"> I run the</font>

22
00:00:47,730 --> 00:00:51,569
demo I'm<font color="#CCCCCC"> gonna tell you what we're gonna</font>

23
00:00:48,870 --> 00:00:53,309
do so<font color="#E5E5E5"> I've built a bit of like bit of</font>

24
00:00:51,570 --> 00:00:54,989
tooling that<font color="#E5E5E5"> is gonna bypass a couple of</font>

25
00:00:53,309 --> 00:00:56,879
<font color="#E5E5E5">AV products I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> show you two</font>

26
00:00:54,989 --> 00:00:58,500
examples of next-gen offerings and<font color="#E5E5E5"> this</font>

27
00:00:56,879 --> 00:01:00,510
allows you<font color="#E5E5E5"> to run basically your own</font>

28
00:00:58,500 --> 00:01:03,799
code<font color="#E5E5E5"> and bypass</font><font color="#CCCCCC"> AV without any sort of</font>

29
00:01:00,510 --> 00:01:06,570
encoding so I'm gonna fire<font color="#CCCCCC"> up the videos</font>

30
00:01:03,799 --> 00:01:13,320
I'm<font color="#E5E5E5"> not doing this alive because live</font>

31
00:01:06,570 --> 00:01:18,149
demos are just terrible so this first

32
00:01:13,320 --> 00:01:20,580
one<font color="#E5E5E5"> Mouse so this is McAfee endpoint</font>

33
00:01:18,150 --> 00:01:22,680
<font color="#E5E5E5">with adaptive threat protection so this</font>

34
00:01:20,580 --> 00:01:25,170
is the<font color="#E5E5E5"> McCaffrey</font><font color="#CCCCCC"> sort of next-gen</font>

35
00:01:22,680 --> 00:01:26,729
offering if you like<font color="#CCCCCC"> so I'm running</font>

36
00:01:25,170 --> 00:01:29,040
update<font color="#E5E5E5"> just so you can see it's a latest</font>

37
00:01:26,729 --> 00:01:30,539
virus definitions I've not shown it<font color="#E5E5E5"> but</font>

38
00:01:29,040 --> 00:01:33,900
this<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> latest Windows 10 fully</font>

39
00:01:30,540 --> 00:01:36,119
<font color="#E5E5E5">patch defenders still running if you if</font>

40
00:01:33,900 --> 00:01:38,340
you're interested<font color="#E5E5E5"> in</font><font color="#CCCCCC"> that so up</font><font color="#E5E5E5"> here</font>

41
00:01:36,119 --> 00:01:39,960
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> command prompt I'll explain</font>

42
00:01:38,340 --> 00:01:42,600
what these are<font color="#E5E5E5"> doing in a minute but</font>

43
00:01:39,960 --> 00:01:45,389
essentially this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> my code loading</font>

44
00:01:42,600 --> 00:01:47,689
<font color="#CCCCCC">matera into memory with McAfee running</font>

45
00:01:45,390 --> 00:01:49,619
and<font color="#E5E5E5"> you get the session</font><font color="#CCCCCC"> at the end</font>

46
00:01:47,689 --> 00:01:51,479
<font color="#CCCCCC">remember</font><font color="#E5E5E5"> yeah I'll</font><font color="#CCCCCC"> just pull out host</font>

47
00:01:49,619 --> 00:01:53,549
<font color="#CCCCCC">name and</font><font color="#E5E5E5"> confirm</font><font color="#CCCCCC"> it I'm not</font><font color="#E5E5E5"> doing any</font>

48
00:01:51,479 --> 00:01:57,450
trickery for the video but<font color="#CCCCCC"> it is but I</font>

49
00:01:53,549 --> 00:02:01,469
<font color="#CCCCCC">shall against get windows with McAfee so</font>

50
00:01:57,450 --> 00:02:02,820
that's McAfee I mean this it's<font color="#CCCCCC"> um it's a</font>

51
00:02:01,469 --> 00:02:09,840
reasonably<font color="#E5E5E5"> good thought up from what I</font>

52
00:02:02,820 --> 00:02:12,170
<font color="#E5E5E5">want</font><font color="#CCCCCC"> to seen of it excellent right mouse</font>

53
00:02:09,840 --> 00:02:12,170
pointer

54
00:02:13,330 --> 00:02:20,780
so the next one this<font color="#CCCCCC"> is silence</font><font color="#E5E5E5"> so this</font>

55
00:02:17,420 --> 00:02:22,819
is like proper<font color="#E5E5E5"> next-gen</font><font color="#CCCCCC"> AV right miss</font>

56
00:02:20,780 --> 00:02:25,459
<font color="#E5E5E5">abyss is pitched as a next-gen AV</font>

57
00:02:22,819 --> 00:02:27,440
product<font color="#CCCCCC"> ignore this inspecting all this</font>

58
00:02:25,459 --> 00:02:28,670
is doing<font color="#E5E5E5"> is like the</font><font color="#CCCCCC"> first initial scan</font>

59
00:02:27,440 --> 00:02:30,200
when you install<font color="#E5E5E5"> it this was installed</font>

60
00:02:28,670 --> 00:02:32,179
<font color="#CCCCCC">like ten</font><font color="#E5E5E5"> minutes before I run the demo</font>

61
00:02:30,200 --> 00:02:34,790
video<font color="#E5E5E5"> it is doing background</font><font color="#CCCCCC"> factor</font>

62
00:02:32,180 --> 00:02:36,769
threat detection<font color="#CCCCCC"> slightly</font><font color="#E5E5E5"> different</font>

63
00:02:34,790 --> 00:02:38,569
<font color="#E5E5E5">setup so the payload builder is on the</font>

64
00:02:36,769 --> 00:02:40,370
terminal session<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> on the left</font><font color="#CCCCCC"> hand</font>

65
00:02:38,569 --> 00:02:40,700
side<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is just RDP into</font><font color="#E5E5E5"> the Windows</font>

66
00:02:40,370 --> 00:02:43,310
machine

67
00:02:40,700 --> 00:02:45,380
<font color="#E5E5E5">silence kills VirtualBox which I didn't</font>

68
00:02:43,310 --> 00:02:46,910
know<font color="#E5E5E5"> at the time so I'm gonna do the</font>

69
00:02:45,380 --> 00:02:49,220
same<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> I've generated the the</font>

70
00:02:46,910 --> 00:02:50,930
payload over<font color="#E5E5E5"> here we're passing the</font>

71
00:02:49,220 --> 00:02:52,549
<font color="#CCCCCC">misses of an aes key which I'll explain</font>

72
00:02:50,930 --> 00:02:54,560
in<font color="#E5E5E5"> a minute this is the payload server</font>

73
00:02:52,549 --> 00:02:58,069
and<font color="#CCCCCC"> we're running the</font><font color="#E5E5E5"> same the same</font>

74
00:02:54,560 --> 00:03:08,810
command and I'll start<font color="#CCCCCC"> at the Metasploit</font>

75
00:02:58,069 --> 00:03:11,268
listener again there we<font color="#E5E5E5"> go meterpreter</font>

76
00:03:08,810 --> 00:03:13,220
session open<font color="#E5E5E5"> so if you try and run</font>

77
00:03:11,269 --> 00:03:14,840
meterpreter<font color="#E5E5E5"> direct on this host it won't</font>

78
00:03:13,220 --> 00:03:17,030
<font color="#E5E5E5">even touch the host it gets pinned</font>

79
00:03:14,840 --> 00:03:19,370
before it you can even fetch it<font color="#CCCCCC"> to run</font>

80
00:03:17,030 --> 00:03:21,430
it so both AV products do that and

81
00:03:19,370 --> 00:03:23,930
Windows Defender does that<font color="#E5E5E5"> have the box</font>

82
00:03:21,430 --> 00:03:34,880
<font color="#E5E5E5">so yeah that that's silence getting</font>

83
00:03:23,930 --> 00:03:36,620
bypassed right back in the slides<font color="#CCCCCC"> so</font>

84
00:03:34,880 --> 00:03:38,540
what<font color="#CCCCCC"> this happened</font><font color="#E5E5E5"> so the stage which</font>

85
00:03:36,620 --> 00:03:40,609
I'm calling<font color="#CCCCCC"> update service</font><font color="#E5E5E5"> dot exe just</font>

86
00:03:38,540 --> 00:03:42,650
for a bit of<font color="#E5E5E5"> OPSEC right fetched in</font><font color="#CCCCCC"> AES</font>

87
00:03:40,609 --> 00:03:44,090
encrypted payload<font color="#E5E5E5"> built</font><font color="#CCCCCC"> in memory</font><font color="#E5E5E5"> using</font>

88
00:03:42,650 --> 00:03:46,220
<font color="#CCCCCC">Roslin then executed it using the</font>

89
00:03:44,090 --> 00:03:47,750
function the payload containment<font color="#E5E5E5"> up at</font>

90
00:03:46,220 --> 00:03:49,280
<font color="#CCCCCC">shellcode which is injected into memory</font>

91
00:03:47,750 --> 00:03:51,590
<font color="#E5E5E5">and before it did all that it checked it</font>

92
00:03:49,280 --> 00:03:53,450
<font color="#CCCCCC">wasn't in a sandbox so we have a paint</font>

93
00:03:51,590 --> 00:03:55,250
diagram of the same thing just<font color="#E5E5E5"> if that's</font>

94
00:03:53,450 --> 00:03:57,500
a bit difficult<font color="#E5E5E5"> so the payload server</font>

95
00:03:55,250 --> 00:04:00,380
over<font color="#CCCCCC"> here that is in this demo just</font>

96
00:03:57,500 --> 00:04:01,760
<font color="#CCCCCC">Python simple server this this is the</font>

97
00:04:00,380 --> 00:04:04,130
victim machine<font color="#CCCCCC"> than Windows 10 machine</font>

98
00:04:01,760 --> 00:04:05,720
so it pulls the payload server<font color="#E5E5E5"> it</font>

99
00:04:04,130 --> 00:04:08,569
fetches<font color="#E5E5E5"> the encrypted payload over</font><font color="#CCCCCC"> a</font>

100
00:04:05,720 --> 00:04:10,220
network<font color="#CCCCCC"> a 60-40 codes here then it</font>

101
00:04:08,569 --> 00:04:11,630
decrypt it then it<font color="#CCCCCC"> builds it using</font>

102
00:04:10,220 --> 00:04:13,459
<font color="#E5E5E5">muslin which I'll show you a code</font>

103
00:04:11,630 --> 00:04:15,019
snippet<font color="#CCCCCC"> of in a</font><font color="#E5E5E5"> minute then it uses</font>

104
00:04:13,459 --> 00:04:16,639
<font color="#CCCCCC">reflection</font><font color="#E5E5E5"> to execute it in memory and</font>

105
00:04:15,019 --> 00:04:18,649
<font color="#E5E5E5">then we do the</font><font color="#CCCCCC"> shell code inject</font><font color="#E5E5E5"> I'm</font>

106
00:04:16,639 --> 00:04:20,840
using kernel<font color="#E5E5E5"> 32 and then the Metasploit</font>

107
00:04:18,649 --> 00:04:22,460
staging happens that the usual sort<font color="#E5E5E5"> of</font>

108
00:04:20,839 --> 00:04:23,950
back and<font color="#CCCCCC"> forth so fetch the stage</font><font color="#E5E5E5"> and</font>

109
00:04:22,460 --> 00:04:26,229
<font color="#CCCCCC">mouseboy</font><font color="#E5E5E5"> and we end up with shell</font>

110
00:04:23,950 --> 00:04:27,880
<font color="#E5E5E5">the attacker machine in the videos these</font>

111
00:04:26,230 --> 00:04:29,590
<font color="#CCCCCC">are</font><font color="#E5E5E5"> both the same server but they don't</font>

112
00:04:27,880 --> 00:04:31,180
need<font color="#E5E5E5"> to be you can fetch payloads from</font>

113
00:04:29,590 --> 00:04:31,929
<font color="#CCCCCC">anywhere and launch your shells anywhere</font>

114
00:04:31,180 --> 00:04:34,780
you like

115
00:04:31,930 --> 00:04:36,310
so that's the<font color="#E5E5E5"> the overview of it so the</font>

116
00:04:34,780 --> 00:04:38,140
real basics of this it's written in<font color="#E5E5E5"> C</font>

117
00:04:36,310 --> 00:04:40,690
sharp<font color="#CCCCCC"> because that's what I know</font>

118
00:04:38,140 --> 00:04:43,419
<font color="#CCCCCC">so I did about ten years of out</font><font color="#E5E5E5"> the</font>

119
00:04:40,690 --> 00:04:44,830
force of moving info suck<font color="#CCCCCC"> encrypted</font>

120
00:04:43,420 --> 00:04:47,170
payloads<font color="#CCCCCC"> fetch never</font><font color="#E5E5E5"> the network the</font>

121
00:04:44,830 --> 00:04:48,820
payload never<font color="#CCCCCC"> touches disk</font><font color="#E5E5E5"> the stage</font>

122
00:04:47,170 --> 00:04:50,710
<font color="#E5E5E5">obviously has</font><font color="#CCCCCC"> to touch disk</font><font color="#E5E5E5"> but the</font>

123
00:04:48,820 --> 00:04:52,409
payload itself<font color="#E5E5E5"> is completely memory</font>

124
00:04:50,710 --> 00:04:55,000
resident<font color="#CCCCCC"> as is everything else</font><font color="#E5E5E5"> it does</font>

125
00:04:52,410 --> 00:04:57,190
so we're using<font color="#CCCCCC"> c-sharp</font><font color="#E5E5E5"> to Bill T sharp</font>

126
00:04:55,000 --> 00:04:59,110
the the second video<font color="#CCCCCC"> I'd called this</font>

127
00:04:57,190 --> 00:05:00,310
<font color="#E5E5E5">tool inception for that reason</font><font color="#CCCCCC"> that you</font>

128
00:04:59,110 --> 00:05:03,430
get the meme that<font color="#E5E5E5"> you get in every</font>

129
00:05:00,310 --> 00:05:06,280
intersect<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> how it's done</font><font color="#CCCCCC"> it's</font>

130
00:05:03,430 --> 00:05:08,050
using<font color="#CCCCCC"> Roslyn</font><font color="#E5E5E5"> so this code variable here</font>

131
00:05:06,280 --> 00:05:10,270
this is the decrypted code that we

132
00:05:08,050 --> 00:05:12,280
fetched over<font color="#CCCCCC"> the network so up</font><font color="#E5E5E5"> here the</font>

133
00:05:10,270 --> 00:05:14,049
<font color="#E5E5E5">IES encryption happens and the sandbox</font>

134
00:05:12,280 --> 00:05:16,479
<font color="#CCCCCC">Chuck's and stuff</font><font color="#E5E5E5"> if any of those fail</font>

135
00:05:14,050 --> 00:05:19,570
we just exit<font color="#E5E5E5"> return nothing and nothing</font>

136
00:05:16,480 --> 00:05:21,730
else happens<font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> just the c-sharp</font>

137
00:05:19,570 --> 00:05:24,010
way of generating this so this<font color="#E5E5E5"> is part</font>

138
00:05:21,730 --> 00:05:25,720
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> muslin syntax and then we call</font>

139
00:05:24,010 --> 00:05:27,610
build on it down here which is<font color="#CCCCCC"> all this</font>

140
00:05:25,720 --> 00:05:28,870
stuff<font color="#E5E5E5"> and then we build a new memory</font>

141
00:05:27,610 --> 00:05:30,940
stream for<font color="#E5E5E5"> those of you don't know</font>

142
00:05:28,870 --> 00:05:33,310
dotnet<font color="#E5E5E5"> that is just a byte</font><font color="#CCCCCC"> array in</font>

143
00:05:30,940 --> 00:05:35,640
memory essentially<font color="#E5E5E5"> and admit the result</font>

144
00:05:33,310 --> 00:05:38,470
of the build operation into memory

145
00:05:35,640 --> 00:05:40,479
<font color="#E5E5E5">so we execute using the function up here</font>

146
00:05:38,470 --> 00:05:42,250
<font color="#CCCCCC">was a build check so if</font><font color="#E5E5E5"> it failed again</font>

147
00:05:40,480 --> 00:05:44,710
we do<font color="#E5E5E5"> nothing and exit if the bill</font>

148
00:05:42,250 --> 00:05:47,110
succeeds we then use<font color="#E5E5E5"> reflection so these</font>

149
00:05:44,710 --> 00:05:49,450
two<font color="#CCCCCC"> values</font><font color="#E5E5E5"> are important so the assembly</font>

150
00:05:47,110 --> 00:05:51,700
type TCP<font color="#CCCCCC"> mat so for the process top</font>

151
00:05:49,450 --> 00:05:52,900
program that needs to be<font color="#E5E5E5"> much what you</font>

152
00:05:51,700 --> 00:05:55,360
fetching the payload<font color="#E5E5E5"> and these are</font>

153
00:05:52,900 --> 00:05:57,460
static<font color="#CCCCCC"> in the stage and</font><font color="#E5E5E5"> the name of the</font>

154
00:05:55,360 --> 00:05:59,740
method you<font color="#CCCCCC"> call is static as well</font><font color="#E5E5E5"> but</font>

155
00:05:57,460 --> 00:06:01,390
apart from that I'm using<font color="#CCCCCC"> Metasploit</font>

156
00:05:59,740 --> 00:06:02,770
just because it's a<font color="#E5E5E5"> really nice way of</font>

157
00:06:01,390 --> 00:06:04,479
<font color="#E5E5E5">showing</font><font color="#CCCCCC"> that we've actually</font><font color="#E5E5E5"> done</font><font color="#CCCCCC"> cements</font>

158
00:06:02,770 --> 00:06:07,229
<font color="#CCCCCC">and</font><font color="#E5E5E5"> sort of bypassing</font><font color="#CCCCCC"> that you can run</font>

159
00:06:04,480 --> 00:06:10,420
<font color="#E5E5E5">basically any c-sharp codes you want</font>

160
00:06:07,230 --> 00:06:12,220
using using this method so this probably

161
00:06:10,420 --> 00:06:15,280
all know about this it<font color="#E5E5E5"> blows it in</font>

162
00:06:12,220 --> 00:06:17,410
<font color="#E5E5E5">memory it runs it in memory so some box</font>

163
00:06:15,280 --> 00:06:19,960
detection is done<font color="#E5E5E5"> using check please</font>

164
00:06:17,410 --> 00:06:22,300
I think that was released<font color="#CCCCCC"> steal con last</font>

165
00:06:19,960 --> 00:06:25,000
year but the<font color="#E5E5E5"> github link is there anyway</font>

166
00:06:22,300 --> 00:06:26,920
<font color="#CCCCCC">for now it's simple checks purely</font>

167
00:06:25,000 --> 00:06:28,180
because<font color="#E5E5E5"> this is still</font><font color="#CCCCCC"> in development so</font>

168
00:06:26,920 --> 00:06:30,880
<font color="#E5E5E5">it we're looking</font><font color="#CCCCCC"> for the minimum the</font>

169
00:06:28,180 --> 00:06:32,080
minimum<font color="#E5E5E5"> number of USB drives and the</font>

170
00:06:30,880 --> 00:06:34,120
minimum number<font color="#CCCCCC"> of browsers installed</font>

171
00:06:32,080 --> 00:06:37,349
because nobody's ever<font color="#CCCCCC"> used Windows 10</font>

172
00:06:34,120 --> 00:06:39,849
with your<font color="#E5E5E5"> edge like nobody does that</font>

173
00:06:37,349 --> 00:06:41,289
<font color="#CCCCCC">there</font><font color="#E5E5E5"> are other things you</font><font color="#CCCCCC"> can do</font><font color="#E5E5E5"> so you</font>

174
00:06:39,849 --> 00:06:43,780
<font color="#CCCCCC">can check if you</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to domain joined</font>

175
00:06:41,289 --> 00:06:45,188
host you<font color="#E5E5E5"> can tie it to a domain</font><font color="#CCCCCC"> name</font><font color="#E5E5E5"> so</font>

176
00:06:43,780 --> 00:06:47,080
if your deployments on a red team gig

177
00:06:45,189 --> 00:06:48,400
you<font color="#CCCCCC"> can make sure it's</font><font color="#E5E5E5"> only executed on</font>

178
00:06:47,080 --> 00:06:50,199
<font color="#CCCCCC">the domain</font><font color="#E5E5E5"> that's in scope</font><font color="#CCCCCC"> to the</font>

179
00:06:48,400 --> 00:06:52,628
<font color="#E5E5E5">engagement and stuff like that that's</font>

180
00:06:50,199 --> 00:06:54,490
really<font color="#E5E5E5"> simple to do</font><font color="#CCCCCC"> you just grab extra</font>

181
00:06:52,629 --> 00:06:57,039
code<font color="#E5E5E5"> from check please and add it into</font>

182
00:06:54,490 --> 00:06:58,539
the<font color="#CCCCCC"> program so the payload I'm not going</font>

183
00:06:57,039 --> 00:07:00,729
<font color="#E5E5E5">to show you there split</font><font color="#CCCCCC"> google how</font><font color="#E5E5E5"> to</font>

184
00:06:58,539 --> 00:07:02,590
run meterpreter<font color="#E5E5E5"> with shell code like</font>

185
00:07:00,729 --> 00:07:04,090
shell code in c-sharp and you will find

186
00:07:02,590 --> 00:07:07,688
the same blog post that I found when<font color="#CCCCCC"> I</font>

187
00:07:04,090 --> 00:07:09,849
<font color="#E5E5E5">stole this it uses kernel32 here like</font>

188
00:07:07,689 --> 00:07:11,860
takes the shell code<font color="#CCCCCC"> this comes to</font><font color="#E5E5E5"> MSF</font>

189
00:07:09,849 --> 00:07:15,819
venom with a bit<font color="#CCCCCC"> of encoding injects it</font>

190
00:07:11,860 --> 00:07:18,490
into<font color="#E5E5E5"> memory that's it so almost any</font>

191
00:07:15,819 --> 00:07:19,930
c-sharp code can be<font color="#CCCCCC"> used I think there</font>

192
00:07:18,490 --> 00:07:22,090
were a couple of restrictions or I'm

193
00:07:19,930 --> 00:07:23,560
fetching packages from Nubia<font color="#E5E5E5"> I've not</font>

194
00:07:22,090 --> 00:07:26,109
had a chance<font color="#CCCCCC"> to look into it properly</font>

195
00:07:23,560 --> 00:07:28,000
but essentially if you can build<font color="#E5E5E5"> it in</font>

196
00:07:26,110 --> 00:07:30,940
<font color="#E5E5E5">c-sharp</font><font color="#CCCCCC"> you can run it</font><font color="#E5E5E5"> using this tool</font>

197
00:07:28,000 --> 00:07:32,860
so I think fire I did something on<font color="#E5E5E5"> a</font>

198
00:07:30,940 --> 00:07:35,800
blog reasonably recently called bring

199
00:07:32,860 --> 00:07:37,810
your own land<font color="#E5E5E5"> fire so they were doing</font>

200
00:07:35,800 --> 00:07:39,789
<font color="#CCCCCC">something similar using</font><font color="#E5E5E5"> COBOL strike</font>

201
00:07:37,810 --> 00:07:41,440
camp recompile dotnet binaries and they

202
00:07:39,789 --> 00:07:42,719
fetch the binary and<font color="#CCCCCC"> just load it</font>

203
00:07:41,440 --> 00:07:45,669
<font color="#E5E5E5">through the COBOL strike beacon</font>

204
00:07:42,719 --> 00:07:47,800
similar principle<font color="#CCCCCC"> they were</font><font color="#E5E5E5"> buildings</font>

205
00:07:45,669 --> 00:07:50,229
<font color="#CCCCCC">off-site and they were</font><font color="#E5E5E5"> really aiming to</font>

206
00:07:47,800 --> 00:07:52,659
<font color="#CCCCCC">bypass AV the whole point of this is you</font>

207
00:07:50,229 --> 00:07:55,779
<font color="#CCCCCC">don't need</font><font color="#E5E5E5"> to mess around the baby like</font>

208
00:07:52,659 --> 00:07:58,779
it just works yeah similar concept so

209
00:07:55,779 --> 00:08:00,129
I'm<font color="#E5E5E5"> building</font><font color="#CCCCCC"> in memory</font><font color="#E5E5E5"> so this is an</font>

210
00:07:58,779 --> 00:08:02,349
<font color="#CCCCCC">early version of the payload builder</font>

211
00:08:00,129 --> 00:08:03,849
<font color="#E5E5E5">without the ASCII art sorry I didn't get</font>

212
00:08:02,349 --> 00:08:06,279
a<font color="#CCCCCC"> chance to update the screenshot with</font>

213
00:08:03,849 --> 00:08:07,690
the cool ASCII art but you can<font color="#E5E5E5"> kinda see</font>

214
00:08:06,279 --> 00:08:10,810
what it's<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> so you pass it the usual</font>

215
00:08:07,690 --> 00:08:13,089
<font color="#E5E5E5">our host</font><font color="#CCCCCC"> L port template is a text file</font>

216
00:08:10,810 --> 00:08:14,589
<font color="#CCCCCC">that is the payload in unencrypted text</font>

217
00:08:13,089 --> 00:08:17,860
and it has a tag in it that says put

218
00:08:14,589 --> 00:08:21,099
<font color="#CCCCCC">shellcode here so it calls out MSF venom</font>

219
00:08:17,860 --> 00:08:23,199
<font color="#E5E5E5">I'm using the HTTP payload just here it</font>

220
00:08:21,099 --> 00:08:26,050
does<font color="#CCCCCC"> a few</font><font color="#E5E5E5"> rounds</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> encodings and just</font>

221
00:08:23,199 --> 00:08:27,849
because I can<font color="#CCCCCC"> then it so it dumps the</font>

222
00:08:26,050 --> 00:08:29,289
generated shellcode into the template

223
00:08:27,849 --> 00:08:30,639
file and writes<font color="#CCCCCC"> that to disk</font><font color="#E5E5E5"> cause</font>

224
00:08:29,289 --> 00:08:32,819
unencrypted<font color="#CCCCCC"> so you can see what you're</font>

225
00:08:30,639 --> 00:08:35,529
doing<font color="#CCCCCC"> it then generates</font><font color="#E5E5E5"> a random AES key</font>

226
00:08:32,820 --> 00:08:36,969
encrypts the the modified template<font color="#CCCCCC"> and</font>

227
00:08:35,529 --> 00:08:38,679
dumps it into flushed empty you<font color="#E5E5E5"> can</font>

228
00:08:36,969 --> 00:08:40,269
serve it with Python<font color="#CCCCCC"> server for now and</font>

229
00:08:38,679 --> 00:08:42,309
then you get the the AES key<font color="#CCCCCC"> at the</font>

230
00:08:40,269 --> 00:08:44,829
<font color="#E5E5E5">bottom so these keys</font><font color="#CCCCCC"> are unique they're</font>

231
00:08:42,309 --> 00:08:46,089
generated per<font color="#E5E5E5"> run of this so in theory</font>

232
00:08:44,829 --> 00:08:48,589
you<font color="#E5E5E5"> can run this once and deploy</font>

233
00:08:46,089 --> 00:08:50,990
<font color="#E5E5E5">multiple times or you can run it</font>

234
00:08:48,590 --> 00:08:53,660
like one<font color="#CCCCCC"> Sun run it one might use it</font>

235
00:08:50,990 --> 00:08:56,660
once and<font color="#E5E5E5"> then throw it away</font>

236
00:08:53,660 --> 00:08:58,339
<font color="#CCCCCC">yes so this</font><font color="#E5E5E5"> is this is</font><font color="#CCCCCC"> that in words</font><font color="#E5E5E5"> so</font>

237
00:08:56,660 --> 00:09:00,020
you<font color="#E5E5E5"> generate the shell code you put in a</font>

238
00:08:58,340 --> 00:09:01,910
<font color="#E5E5E5">template file you encrypt it and then</font>

239
00:09:00,020 --> 00:09:03,380
I'm sticking in slush temperatures

240
00:09:01,910 --> 00:09:06,709
because it is<font color="#E5E5E5"> really easy to use</font><font color="#CCCCCC"> flush</font>

241
00:09:03,380 --> 00:09:09,320
<font color="#E5E5E5">temp so work so far we've got the one</font>

242
00:09:06,710 --> 00:09:12,040
template<font color="#E5E5E5"> this does only work with 32-bit</font>

243
00:09:09,320 --> 00:09:14,180
meterpreter<font color="#CCCCCC"> I'm fairly sure I know why</font>

244
00:09:12,040 --> 00:09:16,520
<font color="#CCCCCC">so the interesting thing</font><font color="#E5E5E5"> we've got there</font>

245
00:09:14,180 --> 00:09:18,530
<font color="#E5E5E5">if you try and debug unmanaged code in</font>

246
00:09:16,520 --> 00:09:20,270
dotnet it just doesn't give you any

247
00:09:18,530 --> 00:09:22,939
debug output<font color="#E5E5E5"> it says an error occurred</font>

248
00:09:20,270 --> 00:09:24,949
<font color="#E5E5E5">like visual studios not meant to handle</font>

249
00:09:22,940 --> 00:09:28,130
<font color="#E5E5E5">and manage code right it's just</font><font color="#CCCCCC"> what it</font>

250
00:09:24,950 --> 00:09:30,200
is<font color="#CCCCCC"> I'm fairly sure</font><font color="#E5E5E5"> I know why</font><font color="#CCCCCC"> that</font>

251
00:09:28,130 --> 00:09:32,930
doesn't<font color="#CCCCCC"> work yeah for now</font><font color="#E5E5E5"> it works if</font>

252
00:09:30,200 --> 00:09:34,490
<font color="#E5E5E5">you</font><font color="#CCCCCC"> see that</font><font color="#E5E5E5"> payload generation is done</font>

253
00:09:32,930 --> 00:09:36,380
<font color="#E5E5E5">I mean that that's reasonably simple</font>

254
00:09:34,490 --> 00:09:39,530
<font color="#E5E5E5">Python script</font><font color="#CCCCCC"> I think it's in the same</font>

255
00:09:36,380 --> 00:09:41,330
blog post that I stole we template and

256
00:09:39,530 --> 00:09:43,459
<font color="#E5E5E5">the the stage itself is basically</font>

257
00:09:41,330 --> 00:09:45,170
<font color="#CCCCCC">finished that's it's stable it's</font><font color="#E5E5E5"> been</font>

258
00:09:43,460 --> 00:09:48,170
used in<font color="#E5E5E5"> the wild and one of our red team</font>

259
00:09:45,170 --> 00:09:50,870
<font color="#E5E5E5">gigs it works there's a couple of bits</font>

260
00:09:48,170 --> 00:09:53,930
to<font color="#E5E5E5"> do around extra</font><font color="#CCCCCC"> Sun</font><font color="#E5E5E5"> box checks yeah</font>

261
00:09:50,870 --> 00:09:55,490
<font color="#E5E5E5">it works out of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> box so we</font><font color="#CCCCCC"> do have a</font>

262
00:09:53,930 --> 00:09:58,010
big<font color="#CCCCCC"> problem</font><font color="#E5E5E5"> with this</font>

263
00:09:55,490 --> 00:09:59,720
so<font color="#E5E5E5"> other if you guys know c-sharp</font><font color="#CCCCCC"> when</font>

264
00:09:58,010 --> 00:10:02,300
you build an app in c-sharp<font color="#E5E5E5"> you get a</font>

265
00:09:59,720 --> 00:10:04,070
load of dll's out of it which<font color="#E5E5E5"> you have</font>

266
00:10:02,300 --> 00:10:06,319
to copy up<font color="#CCCCCC"> to the victim in this case I</font>

267
00:10:04,070 --> 00:10:09,020
<font color="#E5E5E5">don't want to be copying like</font><font color="#CCCCCC"> dll files</font>

268
00:10:06,320 --> 00:10:09,680
up<font color="#E5E5E5"> so to solve that I'm using a tool</font>

269
00:10:09,020 --> 00:10:11,449
called<font color="#CCCCCC"> fody</font>

270
00:10:09,680 --> 00:10:14,180
which takes all with the<font color="#CCCCCC"> owl's and</font>

271
00:10:11,450 --> 00:10:15,470
stuffs them in to warn XE<font color="#E5E5E5"> the only you</font>

272
00:10:14,180 --> 00:10:17,089
get one file<font color="#E5E5E5"> out of it right which is</font>

273
00:10:15,470 --> 00:10:19,790
brilliant<font color="#CCCCCC"> is one file to upload but it's</font>

274
00:10:17,090 --> 00:10:22,490
big so<font color="#E5E5E5"> you talking</font><font color="#CCCCCC"> almost 10</font><font color="#E5E5E5"> Meg which I</font>

275
00:10:19,790 --> 00:10:25,880
mean it's still usable but<font color="#E5E5E5"> it could be</font>

276
00:10:22,490 --> 00:10:27,380
better in that regard<font color="#CCCCCC"> so</font><font color="#E5E5E5"> successes here</font>

277
00:10:25,880 --> 00:10:29,210
<font color="#CCCCCC">silence and</font><font color="#E5E5E5"> full protection time at</font><font color="#CCCCCC"> last</font>

278
00:10:27,380 --> 00:10:31,880
quite<font color="#E5E5E5"> cool McAfee endpoint protection</font>

279
00:10:29,210 --> 00:10:33,620
with adaptive protection<font color="#E5E5E5"> Windows</font>

280
00:10:31,880 --> 00:10:35,240
<font color="#CCCCCC">Defender like obviously I've not turned</font>

281
00:10:33,620 --> 00:10:38,120
that off for any of these demos<font color="#E5E5E5"> I'm</font>

282
00:10:35,240 --> 00:10:41,120
fairly sure this<font color="#E5E5E5"> will get around most of</font>

283
00:10:38,120 --> 00:10:44,390
the<font color="#E5E5E5"> sort of end user space AV offerings</font>

284
00:10:41,120 --> 00:10:46,160
<font color="#CCCCCC">I can't think of any reason why like</font>

285
00:10:44,390 --> 00:10:49,040
somebody like<font color="#CCCCCC"> that isn't</font><font color="#E5E5E5"> silence</font>

286
00:10:46,160 --> 00:10:51,290
wouldn't<font color="#E5E5E5"> wouldn't pick this up</font><font color="#CCCCCC"> so</font>

287
00:10:49,040 --> 00:10:53,510
further<font color="#E5E5E5"> work yeah make</font><font color="#CCCCCC"> it work 64-bit I</font>

288
00:10:51,290 --> 00:10:55,880
don't think that's far away<font color="#E5E5E5"> more</font>

289
00:10:53,510 --> 00:10:58,100
<font color="#E5E5E5">templates so more templates equals more</font>

290
00:10:55,880 --> 00:11:00,140
payloads we can then start<font color="#CCCCCC"> doing cool</font>

291
00:10:58,100 --> 00:11:01,820
<font color="#CCCCCC">stuff with it</font><font color="#E5E5E5"> I want to modify that</font>

292
00:11:00,140 --> 00:11:02,390
Python script once we've<font color="#E5E5E5"> done</font><font color="#CCCCCC"> that to</font>

293
00:11:01,820 --> 00:11:04,310
let you

294
00:11:02,390 --> 00:11:05,870
pick and choose templates and payloads

295
00:11:04,310 --> 00:11:07,849
and<font color="#E5E5E5"> habits you can load arbitrary</font>

296
00:11:05,870 --> 00:11:11,240
<font color="#E5E5E5">shellcode or</font><font color="#CCCCCC"> pick some sort of</font><font color="#E5E5E5"> a library</font>

297
00:11:07,850 --> 00:11:12,380
<font color="#CCCCCC">of exploits the payload server</font><font color="#E5E5E5"> so this</font>

298
00:11:11,240 --> 00:11:15,200
is something<font color="#CCCCCC"> that could be</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> cool</font>

299
00:11:12,380 --> 00:11:17,000
<font color="#E5E5E5">at the minute</font><font color="#CCCCCC"> so if blue</font><font color="#E5E5E5"> team's doing</font>

300
00:11:15,200 --> 00:11:18,890
<font color="#E5E5E5">sort of monitoring of command lines and</font>

301
00:11:17,000 --> 00:11:20,420
<font color="#E5E5E5">stuff like that</font><font color="#CCCCCC"> in theory they can</font><font color="#E5E5E5"> get</font>

302
00:11:18,890 --> 00:11:22,550
the<font color="#E5E5E5"> command</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was passed to</font><font color="#CCCCCC"> that app</font>

303
00:11:20,420 --> 00:11:24,500
<font color="#CCCCCC">and</font><font color="#E5E5E5"> the AES key is you pass it in</font><font color="#CCCCCC"> via</font>

304
00:11:22,550 --> 00:11:25,969
command<font color="#E5E5E5"> line go and fetch the payload</font>

305
00:11:24,500 --> 00:11:27,860
they've got the payload that's encrypted

306
00:11:25,970 --> 00:11:29,870
<font color="#E5E5E5">and the key and decrypt it right so they</font>

307
00:11:27,860 --> 00:11:31,700
can see what<font color="#E5E5E5"> you did if we build a</font>

308
00:11:29,870 --> 00:11:33,709
payload server for this<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> make</font>

309
00:11:31,700 --> 00:11:36,410
these<font color="#CCCCCC"> one-time</font><font color="#E5E5E5"> so you can say like once</font>

310
00:11:33,709 --> 00:11:38,300
this this key or this host or whatever

311
00:11:36,410 --> 00:11:41,120
else you tie it to has<font color="#E5E5E5"> fetch this</font>

312
00:11:38,300 --> 00:11:42,589
payload never send it<font color="#CCCCCC"> again then you</font>

313
00:11:41,120 --> 00:11:44,540
could then send something<font color="#CCCCCC"> else in this</font>

314
00:11:42,589 --> 00:11:47,360
<font color="#CCCCCC">place</font><font color="#E5E5E5"> like a legitimate looking update</font>

315
00:11:44,540 --> 00:11:49,610
or a<font color="#E5E5E5"> rickroll or whatever else you feel</font>

316
00:11:47,360 --> 00:11:51,740
like<font color="#E5E5E5"> sending over so it would be a</font>

317
00:11:49,610 --> 00:11:54,079
really<font color="#E5E5E5"> good way of sort of making this a</font>

318
00:11:51,740 --> 00:11:56,450
little bit more resistant to determined

319
00:11:54,079 --> 00:11:58,310
<font color="#E5E5E5">reverse engineering yeah I want to test</font>

320
00:11:56,450 --> 00:12:00,470
this on more<font color="#CCCCCC"> of a carbon black and</font>

321
00:11:58,310 --> 00:12:02,689
<font color="#E5E5E5">CrowdStrike being the</font><font color="#CCCCCC"> two I really want</font>

322
00:12:00,470 --> 00:12:05,420
to<font color="#E5E5E5"> get this tested on carbon black you</font>

323
00:12:02,690 --> 00:12:07,370
not offer a trial<font color="#CCCCCC"> crouched</font><font color="#E5E5E5"> like do and</font>

324
00:12:05,420 --> 00:12:09,019
despite having<font color="#E5E5E5"> come on four attempts to</font>

325
00:12:07,370 --> 00:12:12,140
get a trial have<font color="#E5E5E5"> rejected me at every</font>

326
00:12:09,019 --> 00:12:14,600
time any of you guys can help set that

327
00:12:12,140 --> 00:12:17,569
<font color="#E5E5E5">up that would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> awesome</font><font color="#CCCCCC"> come see me and</font>

328
00:12:14,600 --> 00:12:19,310
talk<font color="#E5E5E5"> to me</font><font color="#CCCCCC"> about running this one over</font>

329
00:12:17,570 --> 00:12:20,690
next<font color="#CCCCCC"> year</font><font color="#E5E5E5"> Navy and there is the</font>

330
00:12:19,310 --> 00:12:22,849
potential<font color="#CCCCCC"> to use</font><font color="#E5E5E5"> other languages</font><font color="#CCCCCC"> for</font>

331
00:12:20,690 --> 00:12:24,740
<font color="#E5E5E5">this so I'm fairly sure c-sharp is not</font>

332
00:12:22,850 --> 00:12:27,890
alone<font color="#E5E5E5"> in</font><font color="#CCCCCC"> this ability to</font><font color="#E5E5E5"> build itself in</font>

333
00:12:24,740 --> 00:12:29,720
memory I'm assuming<font color="#E5E5E5"> Java probably has</font>

334
00:12:27,890 --> 00:12:31,790
this capability<font color="#E5E5E5"> and other languages</font>

335
00:12:29,720 --> 00:12:34,010
<font color="#CCCCCC">probably do as well</font><font color="#E5E5E5"> in theory we</font><font color="#CCCCCC"> could</font>

336
00:12:31,790 --> 00:12:38,779
apply this concept to any<font color="#E5E5E5"> programming</font>

337
00:12:34,010 --> 00:12:41,449
languages support<font color="#E5E5E5"> this yeah so I have to</font>

338
00:12:38,779 --> 00:12:44,180
put this in how do we fix<font color="#E5E5E5"> it this is a</font>

339
00:12:41,449 --> 00:12:46,010
post exploitation tool so avoid the

340
00:12:44,180 --> 00:12:48,859
initial<font color="#E5E5E5"> compromise</font><font color="#CCCCCC"> right that makes this</font>

341
00:12:46,010 --> 00:12:51,470
really<font color="#CCCCCC"> easy but there</font><font color="#E5E5E5"> will always be a</font>

342
00:12:48,860 --> 00:12:53,449
<font color="#CCCCCC">be passes AV</font><font color="#E5E5E5"> bypasses so I'm not</font>

343
00:12:51,470 --> 00:12:56,750
dropping<font color="#E5E5E5"> Leo day against like</font><font color="#CCCCCC"> next-gen</font>

344
00:12:53,449 --> 00:12:58,880
<font color="#CCCCCC">AV it's just another bypass</font><font color="#E5E5E5"> there were</font>

345
00:12:56,750 --> 00:13:00,290
ways to sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> mitigate this so alert</font>

346
00:12:58,880 --> 00:13:02,570
on<font color="#E5E5E5"> new binaries being added to the</font>

347
00:13:00,290 --> 00:13:04,459
<font color="#CCCCCC">system</font><font color="#E5E5E5"> like you don't expect a</font><font color="#CCCCCC"> ten Meg</font>

348
00:13:02,570 --> 00:13:05,990
binary<font color="#E5E5E5"> that's on sign to be dropped onto</font>

349
00:13:04,459 --> 00:13:08,540
one<font color="#E5E5E5"> of your workstations</font><font color="#CCCCCC"> and execute it</font>

350
00:13:05,990 --> 00:13:10,459
by trigger an alert on it<font color="#CCCCCC"> monitor</font>

351
00:13:08,540 --> 00:13:11,779
network traffic<font color="#E5E5E5"> this fetches a payload</font>

352
00:13:10,459 --> 00:13:14,149
it may be encrypted<font color="#E5E5E5"> and it may be over</font>

353
00:13:11,779 --> 00:13:16,010
<font color="#CCCCCC">HTTPS but it's still suspicious network</font>

354
00:13:14,149 --> 00:13:18,440
traffic and<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> blind</font>

355
00:13:16,010 --> 00:13:20,090
they sort of we say this all<font color="#CCCCCC"> the time</font>

356
00:13:18,440 --> 00:13:22,220
like<font color="#CCCCCC"> a</font><font color="#E5E5E5"> V is a defense-in-depth measure</font>

357
00:13:20,090 --> 00:13:24,380
<font color="#E5E5E5">if you were lying on a V to stop quite</font>

358
00:13:22,220 --> 00:13:26,690
crackers then you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> have a bad time</font>

359
00:13:24,380 --> 00:13:28,820
<font color="#CCCCCC">there were plenty</font><font color="#E5E5E5"> of ways of bypassing a</font>

360
00:13:26,690 --> 00:13:32,030
<font color="#E5E5E5">V this is just a generic way of doing it</font>

361
00:13:28,820 --> 00:13:33,350
<font color="#E5E5E5">so</font><font color="#CCCCCC"> that is it have no idea what I've</font>

362
00:13:32,030 --> 00:13:34,760
<font color="#CCCCCC">done for time I probably</font><font color="#E5E5E5"> rattle</font><font color="#CCCCCC"> through</font>

363
00:13:33,350 --> 00:13:36,350
it quite<font color="#E5E5E5"> quickly but if you have any</font>

364
00:13:34,760 --> 00:13:48,380
questions shout out or come find me in

365
00:13:36,350 --> 00:13:49,910
<font color="#E5E5E5">the bar and got me onto a</font><font color="#CCCCCC"> Kalin go so</font>

366
00:13:48,380 --> 00:13:52,010
I'll answer those<font color="#E5E5E5"> in reverse order</font>

367
00:13:49,910 --> 00:13:56,000
the bar<font color="#CCCCCC"> is</font><font color="#E5E5E5"> free so thanks but I'm</font><font color="#CCCCCC"> good</font>

368
00:13:52,010 --> 00:13:59,660
<font color="#CCCCCC">no and so this was built about three</font>

369
00:13:56,000 --> 00:14:01,610
weeks ago over<font color="#E5E5E5"> in</font><font color="#CCCCCC"> a hotel room on</font><font color="#E5E5E5"> site</font>

370
00:13:59,660 --> 00:14:02,930
<font color="#E5E5E5">because we needed to</font><font color="#CCCCCC"> get past silence to</font>

371
00:14:01,610 --> 00:14:05,750
get some tooling<font color="#E5E5E5"> on to some compromise</font>

372
00:14:02,930 --> 00:14:09,050
host for a red team gig<font color="#CCCCCC"> so that the call</font>

373
00:14:05,750 --> 00:14:10,810
for<font color="#CCCCCC"> papers had passed for</font><font color="#E5E5E5"> this I have</font>

374
00:14:09,050 --> 00:14:13,969
submitted it to EMF<font color="#E5E5E5"> I'm yet to hear back</font>

375
00:14:10,810 --> 00:14:15,589
<font color="#CCCCCC">but yeah there's this is</font><font color="#E5E5E5"> about all the</font>

376
00:14:13,970 --> 00:14:17,750
content<font color="#E5E5E5"> I have for now so I'm not</font>

377
00:14:15,590 --> 00:14:18,860
<font color="#E5E5E5">releasing the tooling at this point</font>

378
00:14:17,750 --> 00:14:20,570
<font color="#CCCCCC">because it's not ready for public</font>

379
00:14:18,860 --> 00:14:23,360
<font color="#E5E5E5">consumption what I'm releasing is that</font>

380
00:14:20,570 --> 00:14:26,380
the concept<font color="#E5E5E5"> behind it but there will be</font>

381
00:14:23,360 --> 00:14:28,940
a release of<font color="#E5E5E5"> stable tooling</font><font color="#CCCCCC"> for this</font>

382
00:14:26,380 --> 00:14:30,920
<font color="#E5E5E5">probably at the end of August if this</font>

383
00:14:28,940 --> 00:14:33,730
gets<font color="#E5E5E5"> accepted</font><font color="#CCCCCC"> to EMF otherwise it will</font>

384
00:14:30,920 --> 00:14:38,930
be at some<font color="#CCCCCC"> point</font><font color="#E5E5E5"> probably in September</font>

385
00:14:33,730 --> 00:14:43,070
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> and anybody else I did I said</font><font color="#CCCCCC"> no to</font>

386
00:14:38,930 --> 00:14:47,290
<font color="#E5E5E5">that that was a categoric</font><font color="#CCCCCC"> no thank</font><font color="#E5E5E5"> you</font>

387
00:14:43,070 --> 00:14:52,419
<font color="#E5E5E5">but no no</font><font color="#CCCCCC"> cool</font>

388
00:14:47,290 --> 00:14:52,419
[Applause]

