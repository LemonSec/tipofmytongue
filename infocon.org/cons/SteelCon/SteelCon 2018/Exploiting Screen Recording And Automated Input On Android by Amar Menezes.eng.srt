1
00:00:02,120 --> 00:00:07,529
<font color="#CCCCCC">in automated input</font><font color="#E5E5E5"> but before I begin</font><font color="#CCCCCC"> I</font>

2
00:00:05,370 --> 00:00:08,068
wanted to share<font color="#E5E5E5"> a custom incident with</font>

3
00:00:07,529 --> 00:00:10,769
you guys

4
00:00:08,069 --> 00:00:11,910
so just to warm up the<font color="#E5E5E5"> cart and give you</font>

5
00:00:10,769 --> 00:00:16,500
a perspective of<font color="#CCCCCC"> what are</font><font color="#E5E5E5"> you going</font><font color="#CCCCCC"> to</font>

6
00:00:11,910 --> 00:00:18,448
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> and just some cool stuff</font><font color="#CCCCCC"> so a</font>

7
00:00:16,500 --> 00:00:21,330
<font color="#E5E5E5">client approached us with an interesting</font>

8
00:00:18,449 --> 00:00:23,130
problem<font color="#CCCCCC"> one of their customers had been</font>

9
00:00:21,330 --> 00:00:24,959
<font color="#E5E5E5">scammed out of few thousand</font><font color="#CCCCCC"> pounds</font><font color="#E5E5E5"> and</font>

10
00:00:23,130 --> 00:00:26,849
the way they did that<font color="#E5E5E5"> was they</font>

11
00:00:24,960 --> 00:00:29,939
apparently hacked their banking app

12
00:00:26,849 --> 00:00:32,790
mobile banking app so the<font color="#CCCCCC"> clients</font>

13
00:00:29,939 --> 00:00:35,670
<font color="#E5E5E5">problem was this</font><font color="#CCCCCC"> customer was</font><font color="#E5E5E5"> having</font>

14
00:00:32,790 --> 00:00:38,460
issues<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the mobile banking app and a</font>

15
00:00:35,670 --> 00:00:42,120
scammer<font color="#E5E5E5"> who volunteered to</font><font color="#CCCCCC"> help them</font>

16
00:00:38,460 --> 00:00:45,420
with their mobile<font color="#E5E5E5"> banking issues to this</font>

17
00:00:42,120 --> 00:00:48,120
camera<font color="#CCCCCC"> sets up</font><font color="#E5E5E5"> in view on the on this</font>

18
00:00:45,420 --> 00:00:50,120
<font color="#CCCCCC">customers computer and then gets the</font>

19
00:00:48,120 --> 00:00:53,070
customer connect their Android phone and

20
00:00:50,120 --> 00:00:55,140
<font color="#CCCCCC">authorize ADB so basically they've got a</font>

21
00:00:53,070 --> 00:00:55,860
TeamViewer session<font color="#E5E5E5"> set up on</font><font color="#CCCCCC"> their</font>

22
00:00:55,140 --> 00:00:58,199
Android device

23
00:00:55,860 --> 00:01:00,269
<font color="#E5E5E5">the scammer</font><font color="#CCCCCC"> then gets</font><font color="#E5E5E5"> the customer to</font>

24
00:00:58,199 --> 00:01:02,280
unlock<font color="#E5E5E5"> the mobile banking app leave</font>

25
00:01:00,270 --> 00:01:04,830
<font color="#CCCCCC">their mobile device connected and come</font>

26
00:01:02,280 --> 00:01:06,390
<font color="#E5E5E5">back in an hour an</font><font color="#CCCCCC"> hour later this</font>

27
00:01:04,830 --> 00:01:08,670
camera has made off<font color="#E5E5E5"> at a few thousand</font>

28
00:01:06,390 --> 00:01:10,530
pounds<font color="#E5E5E5"> and the clients ask us well</font><font color="#CCCCCC"> how</font>

29
00:01:08,670 --> 00:01:13,020
do they pull it off<font color="#CCCCCC"> and I post this</font>

30
00:01:10,530 --> 00:01:14,970
<font color="#CCCCCC">question to you guys</font><font color="#E5E5E5"> even</font><font color="#CCCCCC"> if you know as</font>

31
00:01:13,020 --> 00:01:16,798
to how this<font color="#E5E5E5"> camera might have made off</font>

32
00:01:14,970 --> 00:01:22,619
<font color="#CCCCCC">with a few thousand pounds by</font><font color="#E5E5E5"> hacking</font>

33
00:01:16,799 --> 00:01:30,210
<font color="#E5E5E5">the mobile banking app that's one way</font>

34
00:01:22,619 --> 00:01:31,890
<font color="#E5E5E5">any other</font><font color="#CCCCCC"> coop so yeah you are</font><font color="#E5E5E5"> actually</font>

35
00:01:30,210 --> 00:01:33,298
right but there are a<font color="#CCCCCC"> few other bits in</font>

36
00:01:31,890 --> 00:01:36,840
there that we'll discuss further on<font color="#E5E5E5"> in</font>

37
00:01:33,299 --> 00:01:38,939
<font color="#CCCCCC">the in this presentation</font><font color="#E5E5E5"> so yeah my</font>

38
00:01:36,840 --> 00:01:40,650
name's Ahmad Manassas<font color="#CCCCCC"> I'll be talking</font>

39
00:01:38,939 --> 00:01:44,908
about screen recording and<font color="#E5E5E5"> automated</font>

40
00:01:40,650 --> 00:01:47,159
input on Android<font color="#E5E5E5"> so why should</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> care</font>

41
00:01:44,909 --> 00:01:48,479
about<font color="#CCCCCC"> this particular presentation</font><font color="#E5E5E5"> so I</font>

42
00:01:47,159 --> 00:01:50,610
wanted<font color="#E5E5E5"> to share you an attack vector</font>

43
00:01:48,479 --> 00:01:52,229
that people haven't explored before<font color="#E5E5E5"> it's</font>

44
00:01:50,610 --> 00:01:53,189
an interesting attack<font color="#E5E5E5"> lecture and I want</font>

45
00:01:52,229 --> 00:01:54,929
to talk about the research that<font color="#CCCCCC"> I've</font>

46
00:01:53,189 --> 00:01:56,758
been<font color="#E5E5E5"> doing in this particular area</font><font color="#CCCCCC"> and</font>

47
00:01:54,930 --> 00:01:59,009
to get some of you<font color="#E5E5E5"> guys interested in</font>

48
00:01:56,759 --> 00:02:01,619
doing your<font color="#E5E5E5"> own</font><font color="#CCCCCC"> research</font><font color="#E5E5E5"> in this area</font>

49
00:01:59,009 --> 00:02:03,540
<font color="#E5E5E5">if research doesn't interest you and</font>

50
00:02:01,619 --> 00:02:06,509
what why<font color="#E5E5E5"> would you want</font><font color="#CCCCCC"> to get involved</font>

51
00:02:03,540 --> 00:02:08,720
<font color="#E5E5E5">then there's a lot of low-hanging fruit</font>

52
00:02:06,509 --> 00:02:11,520
<font color="#CCCCCC">that people can't find evaluating the</font>

53
00:02:08,720 --> 00:02:14,250
attack<font color="#E5E5E5"> surface</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> particular</font>

54
00:02:11,520 --> 00:02:17,040
and Google's<font color="#E5E5E5"> vulnerability program</font>

55
00:02:14,250 --> 00:02:20,730
<font color="#CCCCCC">rewards researchers handsomely for even</font>

56
00:02:17,040 --> 00:02:22,560
silly bugs that people<font color="#E5E5E5"> find and if</font>

57
00:02:20,730 --> 00:02:24,989
research a bug bounty hunting<font color="#E5E5E5"> doesn't</font>

58
00:02:22,560 --> 00:02:26,640
interest you then<font color="#CCCCCC"> is</font><font color="#E5E5E5"> this awareness they</font>

59
00:02:24,990 --> 00:02:28,490
want to generate<font color="#CCCCCC"> about this is another</font>

60
00:02:26,640 --> 00:02:33,089
<font color="#CCCCCC">Avenue that people are</font><font color="#E5E5E5"> trying to attack</font>

61
00:02:28,490 --> 00:02:35,940
<font color="#E5E5E5">Android devices so a bit about</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> I'm a</font>

62
00:02:33,090 --> 00:02:38,100
mobile security<font color="#E5E5E5"> consultant at</font><font color="#CCCCCC"> MWR</font><font color="#E5E5E5"> advise</font>

63
00:02:35,940 --> 00:02:41,780
clients on<font color="#CCCCCC"> how to build secure mobile</font>

64
00:02:38,100 --> 00:02:44,700
applications<font color="#CCCCCC"> in a previous life I</font><font color="#E5E5E5"> was a</font>

65
00:02:41,780 --> 00:02:47,460
smartphone<font color="#CCCCCC"> malvern Alice so I looked at</font>

66
00:02:44,700 --> 00:02:50,040
Android malware<font color="#E5E5E5"> and understand various</font>

67
00:02:47,460 --> 00:02:53,670
techniques that malware<font color="#E5E5E5"> authors build</font>

68
00:02:50,040 --> 00:02:55,620
into<font color="#E5E5E5"> the Android applications and also</font>

69
00:02:53,670 --> 00:02:58,589
in my spare time<font color="#CCCCCC"> I'd do a bit of Android</font>

70
00:02:55,620 --> 00:03:00,540
burn ability research so what are we

71
00:02:58,590 --> 00:03:02,280
going to<font color="#E5E5E5"> cover today</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> I'm gonna</font>

72
00:03:00,540 --> 00:03:04,230
<font color="#CCCCCC">start</font><font color="#E5E5E5"> off</font><font color="#CCCCCC"> by setting some</font><font color="#E5E5E5"> goals as to</font>

73
00:03:02,280 --> 00:03:05,790
why did I take on<font color="#E5E5E5"> this project what the</font>

74
00:03:04,230 --> 00:03:09,329
objectives of this<font color="#CCCCCC"> project and how I</font>

75
00:03:05,790 --> 00:03:10,590
went<font color="#E5E5E5"> about achieving that in so just</font>

76
00:03:09,330 --> 00:03:11,520
<font color="#E5E5E5">talking about the</font><font color="#CCCCCC"> various bugs</font><font color="#E5E5E5"> I've</font>

77
00:03:10,590 --> 00:03:13,140
<font color="#E5E5E5">found I want to talk</font><font color="#CCCCCC"> about the</font>

78
00:03:11,520 --> 00:03:14,550
methodology<font color="#CCCCCC"> how I value</font><font color="#E5E5E5"> it with the</font>

79
00:03:13,140 --> 00:03:16,829
attack surface identify different

80
00:03:14,550 --> 00:03:19,890
endpoints<font color="#E5E5E5"> how I go about constructing a</font>

81
00:03:16,830 --> 00:03:22,380
<font color="#CCCCCC">proof-of-concept and finally I'd like</font><font color="#E5E5E5"> to</font>

82
00:03:19,890 --> 00:03:23,790
<font color="#CCCCCC">talk about the things</font><font color="#E5E5E5"> I couldn't look at</font>

83
00:03:22,380 --> 00:03:26,070
in this time box

84
00:03:23,790 --> 00:03:27,959
research week that I spent but I'd like

85
00:03:26,070 --> 00:03:29,880
<font color="#E5E5E5">to share those ideas with you guys some</font>

86
00:03:27,960 --> 00:03:33,570
of you can take them up<font color="#E5E5E5"> go find bugs and</font>

87
00:03:29,880 --> 00:03:36,450
then shared with<font color="#E5E5E5"> the community so let's</font>

88
00:03:33,570 --> 00:03:39,030
<font color="#CCCCCC">start by discussing what</font><font color="#E5E5E5"> were the</font>

89
00:03:36,450 --> 00:03:40,410
<font color="#E5E5E5">objectives of this this project what I</font>

90
00:03:39,030 --> 00:03:43,740
was looking for<font color="#CCCCCC"> and what did I</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

91
00:03:40,410 --> 00:03:45,750
prove so the first thing was to<font color="#E5E5E5"> look for</font>

92
00:03:43,740 --> 00:03:47,700
screen recording<font color="#CCCCCC"> what are the different</font>

93
00:03:45,750 --> 00:03:49,850
features<font color="#CCCCCC"> that the Android system</font>

94
00:03:47,700 --> 00:03:53,850
provides you<font color="#CCCCCC"> to</font><font color="#E5E5E5"> record the user screen</font>

95
00:03:49,850 --> 00:03:55,200
<font color="#E5E5E5">the second one was once you've once</font>

96
00:03:53,850 --> 00:03:56,820
you've recorded the screen can you

97
00:03:55,200 --> 00:03:59,700
<font color="#E5E5E5">generate user input can you emulate</font>

98
00:03:56,820 --> 00:04:01,920
<font color="#E5E5E5">touches swipes pinches on the device and</font>

99
00:03:59,700 --> 00:04:04,560
<font color="#E5E5E5">how</font><font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> and if you can change</font>

100
00:04:01,920 --> 00:04:05,700
<font color="#CCCCCC">these bugs in screen capture and</font>

101
00:04:04,560 --> 00:04:09,030
recording then that's a powerful

102
00:04:05,700 --> 00:04:11,190
<font color="#E5E5E5">capability so imagine you can capture</font>

103
00:04:09,030 --> 00:04:14,670
<font color="#E5E5E5">the user screen watch them unlock their</font>

104
00:04:11,190 --> 00:04:16,858
<font color="#E5E5E5">banking apps</font><font color="#CCCCCC"> pull out</font><font color="#E5E5E5"> the pin</font><font color="#CCCCCC"> and then</font>

105
00:04:14,670 --> 00:04:18,870
emulate touches to then unlock that want

106
00:04:16,858 --> 00:04:21,839
<font color="#CCCCCC">with this captured pin so once you can</font>

107
00:04:18,870 --> 00:04:24,790
interact<font color="#E5E5E5"> with this app using touches you</font>

108
00:04:21,839 --> 00:04:28,299
will then be<font color="#E5E5E5"> able to do a lot</font><font color="#CCCCCC"> of things</font>

109
00:04:24,790 --> 00:04:31,350
such as transferring funds<font color="#E5E5E5"> or grabbing</font>

110
00:04:28,300 --> 00:04:34,780
your<font color="#CCCCCC"> 2fa tokens</font><font color="#E5E5E5"> and various other bits</font>

111
00:04:31,350 --> 00:04:36,850
<font color="#E5E5E5">so a brief</font><font color="#CCCCCC"> recap of the android security</font>

112
00:04:34,780 --> 00:04:38,500
<font color="#E5E5E5">model and specific things</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

113
00:04:36,850 --> 00:04:40,870
applicable<font color="#CCCCCC"> to this particular</font><font color="#E5E5E5"> attack</font>

114
00:04:38,500 --> 00:04:43,240
vector<font color="#E5E5E5"> the first one is all applications</font>

115
00:04:40,870 --> 00:04:46,450
on an<font color="#CCCCCC"> android device as sandbox</font><font color="#E5E5E5"> so an</font>

116
00:04:43,240 --> 00:04:48,760
app cannot interact with another unless

117
00:04:46,450 --> 00:04:51,120
it uses some predefined IPC endpoints<font color="#CCCCCC"> so</font>

118
00:04:48,760 --> 00:04:53,590
<font color="#CCCCCC">these are</font><font color="#E5E5E5"> your activities</font><font color="#CCCCCC"> your services</font>

119
00:04:51,120 --> 00:04:57,280
<font color="#E5E5E5">broadcast receivers and content</font>

120
00:04:53,590 --> 00:04:59,260
<font color="#CCCCCC">providers</font><font color="#E5E5E5"> the second thing is permission</font>

121
00:04:57,280 --> 00:05:00,729
<font color="#CCCCCC">model so every Android application</font>

122
00:04:59,260 --> 00:05:02,680
<font color="#CCCCCC">defines a</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> of permissions</font><font color="#E5E5E5"> that allow</font>

123
00:05:00,730 --> 00:05:05,530
it to<font color="#CCCCCC"> use various features on the device</font>

124
00:05:02,680 --> 00:05:10,090
whether it's the<font color="#CCCCCC"> internet Bluetooth read</font>

125
00:05:05,530 --> 00:05:13,299
rights to the SD<font color="#CCCCCC"> card and finally the</font>

126
00:05:10,090 --> 00:05:14,890
Android OS<font color="#E5E5E5"> has implements</font><font color="#CCCCCC"> SELinux policy</font>

127
00:05:13,300 --> 00:05:17,050
so even if you're<font color="#E5E5E5"> running under a</font>

128
00:05:14,890 --> 00:05:19,360
certain<font color="#CCCCCC"> privilege</font><font color="#E5E5E5"> process you are</font>

129
00:05:17,050 --> 00:05:21,700
<font color="#E5E5E5">constrained to seven functionality so</font>

130
00:05:19,360 --> 00:05:24,310
that<font color="#E5E5E5"> the scope or the context of that</font>

131
00:05:21,700 --> 00:05:26,110
process is restricted based on<font color="#E5E5E5"> a SE</font>

132
00:05:24,310 --> 00:05:30,720
<font color="#CCCCCC">linux policy and this will</font><font color="#E5E5E5"> become</font>

133
00:05:26,110 --> 00:05:33,760
apparent why these three features or

134
00:05:30,720 --> 00:05:35,680
three<font color="#E5E5E5"> particular items are important in</font>

135
00:05:33,760 --> 00:05:38,349
terms<font color="#CCCCCC"> of that evaluating the attack</font>

136
00:05:35,680 --> 00:05:40,840
surface<font color="#CCCCCC"> the second goal of</font><font color="#E5E5E5"> this</font>

137
00:05:38,350 --> 00:05:42,490
presentation was<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure that we</font>

138
00:05:40,840 --> 00:05:44,020
understand<font color="#CCCCCC"> what kind</font><font color="#E5E5E5"> of attacks we are</font>

139
00:05:42,490 --> 00:05:46,900
looking at so we<font color="#E5E5E5"> don't want to talk</font>

140
00:05:44,020 --> 00:05:48,310
<font color="#CCCCCC">about</font><font color="#E5E5E5"> rooted devices we want these this</font>

141
00:05:46,900 --> 00:05:50,409
bug<font color="#CCCCCC"> chain or these attacks</font><font color="#E5E5E5"> to work on</font>

142
00:05:48,310 --> 00:05:52,570
non rooted devices<font color="#E5E5E5"> because if you can</font>

143
00:05:50,410 --> 00:05:54,730
achieve root on<font color="#E5E5E5"> the device well one it's</font>

144
00:05:52,570 --> 00:05:57,340
a<font color="#E5E5E5"> lot of work and there's the the bug</font>

145
00:05:54,730 --> 00:05:58,870
chain to get<font color="#CCCCCC"> root on the device is worth</font>

146
00:05:57,340 --> 00:06:00,640
a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> money so we're</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look</font>

147
00:05:58,870 --> 00:06:02,290
for low-hanging fruit<font color="#E5E5E5"> that would work on</font>

148
00:06:00,640 --> 00:06:03,969
a non rooted device so it frees<font color="#CCCCCC"> you from</font>

149
00:06:02,290 --> 00:06:06,460
the investment of<font color="#E5E5E5"> trying to find an</font>

150
00:06:03,970 --> 00:06:07,690
exploit chain it gets you root the

151
00:06:06,460 --> 00:06:11,380
second one is going to<font color="#E5E5E5"> look at how many</font>

152
00:06:07,690 --> 00:06:13,540
<font color="#E5E5E5">AOSP bills so</font><font color="#CCCCCC"> these are bills</font><font color="#E5E5E5"> that more</font>

153
00:06:11,380 --> 00:06:14,890
or less<font color="#E5E5E5"> general across</font><font color="#CCCCCC"> the Android</font>

154
00:06:13,540 --> 00:06:17,230
ecosystem<font color="#CCCCCC"> so the Android ecosystem</font>

155
00:06:14,890 --> 00:06:19,419
suffers from a fragmentation problem

156
00:06:17,230 --> 00:06:21,700
where vendors customized their homes

157
00:06:19,420 --> 00:06:23,530
before they flash it<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> devices so if</font>

158
00:06:21,700 --> 00:06:28,000
we can find bugs that<font color="#E5E5E5"> are in the AOSP</font>

159
00:06:23,530 --> 00:06:31,450
<font color="#E5E5E5">bills or in the</font><font color="#CCCCCC"> asp</font><font color="#E5E5E5"> source we can safely</font>

160
00:06:28,000 --> 00:06:36,100
<font color="#E5E5E5">assume</font><font color="#CCCCCC"> that these</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> then transcend</font>

161
00:06:31,450 --> 00:06:37,340
<font color="#CCCCCC">into other bills</font><font color="#E5E5E5"> or customized roms we</font>

162
00:06:36,100 --> 00:06:39,740
want to look<font color="#E5E5E5"> at attacks</font>

163
00:06:37,340 --> 00:06:41,479
<font color="#E5E5E5">apps so we want to attack these the</font>

164
00:06:39,740 --> 00:06:44,270
different<font color="#E5E5E5"> end points</font><font color="#CCCCCC"> while the a player</font>

165
00:06:41,480 --> 00:06:46,310
so we're not<font color="#CCCCCC"> looking for</font><font color="#E5E5E5"> WebKit bugs</font>

166
00:06:44,270 --> 00:06:48,409
<font color="#E5E5E5">chromium bugs that kind of stuff no</font>

167
00:06:46,310 --> 00:06:49,820
remote exploits<font color="#CCCCCC"> basement exploits you</font>

168
00:06:48,410 --> 00:06:52,580
just want<font color="#E5E5E5"> to say we've installed this</font>

169
00:06:49,820 --> 00:06:54,560
app from this one how do we exploit any

170
00:06:52,580 --> 00:06:57,409
of these bugs to<font color="#E5E5E5"> get screen capture or</font>

171
00:06:54,560 --> 00:06:59,419
automated input and finally we want<font color="#E5E5E5"> to</font>

172
00:06:57,410 --> 00:07:01,250
keep user interaction to a minimum

173
00:06:59,419 --> 00:07:02,810
because<font color="#E5E5E5"> more that use has to interact</font>

174
00:07:01,250 --> 00:07:05,120
with<font color="#E5E5E5"> that they could spotlight out okay</font>

175
00:07:02,810 --> 00:07:06,560
something's dodgy here this is in a

176
00:07:05,120 --> 00:07:08,090
<font color="#E5E5E5">legitimate app or there's something</font>

177
00:07:06,560 --> 00:07:09,650
malicious going on<font color="#CCCCCC"> here</font><font color="#E5E5E5"> more uninstalled</font>

178
00:07:08,090 --> 00:07:11,590
so if you keep<font color="#E5E5E5"> user interaction to a</font>

179
00:07:09,650 --> 00:07:13,580
minimum there are the chances of

180
00:07:11,590 --> 00:07:18,469
successfully exploiting<font color="#E5E5E5"> this particular</font>

181
00:07:13,580 --> 00:07:20,150
vulnerability<font color="#CCCCCC"> Ohio so now that we've set</font>

182
00:07:18,470 --> 00:07:21,620
<font color="#E5E5E5">some expectations</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> are the</font>

183
00:07:20,150 --> 00:07:22,969
constraints<font color="#E5E5E5"> I'm going to work with this</font>

184
00:07:21,620 --> 00:07:24,470
is the<font color="#CCCCCC"> object that I have</font><font color="#E5E5E5"> I want to</font>

185
00:07:22,970 --> 00:07:26,450
<font color="#E5E5E5">record the user screen and try to</font>

186
00:07:24,470 --> 00:07:29,930
<font color="#CCCCCC">automate</font><font color="#E5E5E5"> use input and</font><font color="#CCCCCC"> chained them now</font>

187
00:07:26,450 --> 00:07:31,909
<font color="#E5E5E5">let's look at each</font><font color="#CCCCCC"> of those in turn</font><font color="#E5E5E5"> and</font>

188
00:07:29,930 --> 00:07:35,240
understand whether what<font color="#CCCCCC"> is the attack</font>

189
00:07:31,910 --> 00:07:37,550
surface so I'm<font color="#E5E5E5"> not a professional bug</font>

190
00:07:35,240 --> 00:07:39,350
hunter<font color="#E5E5E5"> so I use my own methodology</font><font color="#CCCCCC"> to</font>

191
00:07:37,550 --> 00:07:41,410
<font color="#E5E5E5">try to find bugs and that's what I want</font>

192
00:07:39,350 --> 00:07:45,650
to discuss<font color="#E5E5E5"> with</font><font color="#CCCCCC"> you in the coming</font><font color="#E5E5E5"> slides</font>

193
00:07:41,410 --> 00:07:48,260
<font color="#E5E5E5">so the first one is screen recording so</font>

194
00:07:45,650 --> 00:07:49,669
a numerating the effect surface<font color="#E5E5E5"> the</font>

195
00:07:48,260 --> 00:07:51,260
first thing<font color="#CCCCCC"> that comes across</font><font color="#E5E5E5"> is screen</font>

196
00:07:49,669 --> 00:07:53,840
record<font color="#E5E5E5"> so screen of course a binary that</font>

197
00:07:51,260 --> 00:07:55,820
exists on<font color="#CCCCCC"> your Android devices this been</font>

198
00:07:53,840 --> 00:07:58,609
<font color="#CCCCCC">around since Android four or maybe</font>

199
00:07:55,820 --> 00:08:00,979
earlier and typically how people use

200
00:07:58,610 --> 00:08:02,539
that is you can acquire<font color="#E5E5E5"> ADB you start</font>

201
00:08:00,979 --> 00:08:06,469
running screen record and it starts

202
00:08:02,539 --> 00:08:07,880
<font color="#CCCCCC">capturing your screen the second one is</font>

203
00:08:06,470 --> 00:08:09,320
the<font color="#E5E5E5"> accessibility service so the</font>

204
00:08:07,880 --> 00:08:11,570
accessibility<font color="#E5E5E5"> service I think is clean</font>

205
00:08:09,320 --> 00:08:14,419
around since Android one if I call

206
00:08:11,570 --> 00:08:16,520
correctly<font color="#E5E5E5"> so this feature was enable was</font>

207
00:08:14,419 --> 00:08:19,130
added to Android to allow<font color="#E5E5E5"> users with</font>

208
00:08:16,520 --> 00:08:21,409
disabilities<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> their devices</font><font color="#CCCCCC"> so</font>

209
00:08:19,130 --> 00:08:24,469
things like magnifying text<font color="#CCCCCC"> speech to</font>

210
00:08:21,410 --> 00:08:27,080
<font color="#E5E5E5">text text to speech</font><font color="#CCCCCC"> some of them are</font>

211
00:08:24,470 --> 00:08:30,110
like automating input<font color="#CCCCCC"> of the screen and</font>

212
00:08:27,080 --> 00:08:32,000
things<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that and finally</font><font color="#CCCCCC"> this is a</font>

213
00:08:30,110 --> 00:08:33,830
more recent<font color="#E5E5E5"> introduction which is the</font>

214
00:08:32,000 --> 00:08:36,229
media projection service so this was

215
00:08:33,830 --> 00:08:37,789
<font color="#CCCCCC">added in Android</font><font color="#E5E5E5"> 5 and it was more it</font>

216
00:08:36,229 --> 00:08:39,800
was aim towards gamers<font color="#E5E5E5"> and people who</font>

217
00:08:37,789 --> 00:08:41,929
wanted to demo<font color="#E5E5E5"> various things on the</font>

218
00:08:39,799 --> 00:08:43,520
device so people would build<font color="#E5E5E5"> an app</font><font color="#CCCCCC"> they</font>

219
00:08:41,929 --> 00:08:44,599
<font color="#CCCCCC">uses the media projection service and</font>

220
00:08:43,520 --> 00:08:48,170
then broadcast<font color="#CCCCCC"> whatever is</font><font color="#E5E5E5"> on their</font>

221
00:08:44,600 --> 00:08:49,550
device on a different screen<font color="#E5E5E5"> so this</font>

222
00:08:48,170 --> 00:08:51,079
<font color="#E5E5E5">these were the three things that I</font>

223
00:08:49,550 --> 00:08:53,089
looked at<font color="#E5E5E5"> so I spent a week look</font>

224
00:08:51,080 --> 00:08:55,490
attack<font color="#E5E5E5"> surfaces for screen</font><font color="#CCCCCC"> recording and</font>

225
00:08:53,090 --> 00:08:57,950
<font color="#E5E5E5">automated input and these were the first</font>

226
00:08:55,490 --> 00:09:00,890
three<font color="#E5E5E5"> things that pop up so the next</font>

227
00:08:57,950 --> 00:09:03,380
step is to evaluate<font color="#E5E5E5"> these three</font><font color="#CCCCCC"> suck</font>

228
00:09:00,890 --> 00:09:05,540
points and understand which ones are

229
00:09:03,380 --> 00:09:07,340
most<font color="#E5E5E5"> likely to</font><font color="#CCCCCC"> lead to a bug</font><font color="#E5E5E5"> so how do</font>

230
00:09:05,540 --> 00:09:08,540
you evaluate<font color="#E5E5E5"> that so the first thing you</font>

231
00:09:07,340 --> 00:09:10,370
want to do is look<font color="#E5E5E5"> at the minimum</font>

232
00:09:08,540 --> 00:09:10,900
<font color="#CCCCCC">Android version for each of those</font><font color="#E5E5E5"> three</font>

233
00:09:10,370 --> 00:09:12,980
points

234
00:09:10,900 --> 00:09:14,959
<font color="#E5E5E5">do they span across different versions</font>

235
00:09:12,980 --> 00:09:17,510
<font color="#CCCCCC">because the older the version of Android</font>

236
00:09:14,960 --> 00:09:21,020
the<font color="#CCCCCC"> more likely you are to find the</font><font color="#E5E5E5"> bug</font>

237
00:09:17,510 --> 00:09:23,150
that's scales across<font color="#E5E5E5"> devices the second</font>

238
00:09:21,020 --> 00:09:24,230
one is permissions<font color="#E5E5E5"> so now if you use all</font>

239
00:09:23,150 --> 00:09:26,740
<font color="#E5E5E5">these different features</font><font color="#CCCCCC"> you need</font><font color="#E5E5E5"> to</font>

240
00:09:24,230 --> 00:09:29,240
define<font color="#E5E5E5"> permissions in your Android app</font>

241
00:09:26,740 --> 00:09:30,830
once you define a<font color="#E5E5E5"> permission you can</font>

242
00:09:29,240 --> 00:09:31,880
then<font color="#E5E5E5"> bill signatures that look for</font>

243
00:09:30,830 --> 00:09:33,590
particular features of<font color="#CCCCCC"> particular</font>

244
00:09:31,880 --> 00:09:35,150
permissions<font color="#E5E5E5"> within the Android app and</font>

245
00:09:33,590 --> 00:09:36,620
flag<font color="#CCCCCC"> it as oh this</font><font color="#E5E5E5"> is malicious so this</font>

246
00:09:35,150 --> 00:09:38,600
is benign<font color="#E5E5E5"> so if you don't have</font>

247
00:09:36,620 --> 00:09:40,310
permission<font color="#CCCCCC"> so if you don't need to</font>

248
00:09:38,600 --> 00:09:43,700
<font color="#E5E5E5">define specific permissions it makes</font>

249
00:09:40,310 --> 00:09:46,369
<font color="#CCCCCC">your most stealthy attack</font><font color="#E5E5E5"> and finally</font>

250
00:09:43,700 --> 00:09:48,200
are there<font color="#CCCCCC"> any defenses that the</font>

251
00:09:46,370 --> 00:09:49,730
application developers have implemented

252
00:09:48,200 --> 00:09:51,650
that prevent you from just simply

253
00:09:49,730 --> 00:09:54,440
<font color="#E5E5E5">calling a binary or</font><font color="#CCCCCC"> calling an API and</font>

254
00:09:51,650 --> 00:09:57,500
<font color="#CCCCCC">just you know having</font><font color="#E5E5E5"> having the</font><font color="#CCCCCC"> other</font>

255
00:09:54,440 --> 00:09:59,420
system so does this require a rooted

256
00:09:57,500 --> 00:10:01,310
device<font color="#E5E5E5"> does it have any</font><font color="#CCCCCC"> selinux</font>

257
00:09:59,420 --> 00:10:02,750
constraints<font color="#E5E5E5"> does it prompt the user does</font>

258
00:10:01,310 --> 00:10:03,890
it alert the user<font color="#CCCCCC"> that</font><font color="#E5E5E5"> oh someone's</font>

259
00:10:02,750 --> 00:10:07,370
going to<font color="#CCCCCC"> capture my screen</font><font color="#E5E5E5"> or someone's</font>

260
00:10:03,890 --> 00:10:09,500
trying<font color="#CCCCCC"> to automate input and finally use</font>

261
00:10:07,370 --> 00:10:11,270
interaction<font color="#E5E5E5"> what is the level</font><font color="#CCCCCC"> of user</font>

262
00:10:09,500 --> 00:10:13,840
interaction that's required in order<font color="#CCCCCC"> to</font>

263
00:10:11,270 --> 00:10:17,390
use each<font color="#E5E5E5"> of these three endpoints so</font>

264
00:10:13,840 --> 00:10:20,270
<font color="#CCCCCC">let's go back</font><font color="#E5E5E5"> and reevaluate these three</font>

265
00:10:17,390 --> 00:10:22,130
items<font color="#CCCCCC"> so with screen record</font><font color="#E5E5E5"> you can</font>

266
00:10:20,270 --> 00:10:25,090
invoke this from an<font color="#E5E5E5"> application but the</font>

267
00:10:22,130 --> 00:10:28,030
problem is an app runs in a constrained

268
00:10:25,090 --> 00:10:30,200
<font color="#CCCCCC">selinux context</font><font color="#E5E5E5"> so what you can capture</font>

269
00:10:28,030 --> 00:10:32,689
<font color="#E5E5E5">anything within your app you can't</font>

270
00:10:30,200 --> 00:10:35,270
capture system by the system-wide

271
00:10:32,690 --> 00:10:37,460
<font color="#CCCCCC">recording</font><font color="#E5E5E5"> system while activities so I</font>

272
00:10:35,270 --> 00:10:39,170
mean you'd have<font color="#CCCCCC"> to find a Nessy</font><font color="#E5E5E5"> Linux</font>

273
00:10:37,460 --> 00:10:41,650
bypass or escalate your<font color="#E5E5E5"> privileges in</font>

274
00:10:39,170 --> 00:10:44,449
order<font color="#E5E5E5"> to use this binary</font>

275
00:10:41,650 --> 00:10:46,370
the<font color="#E5E5E5"> second one was</font><font color="#CCCCCC"> the accessibility</font>

276
00:10:44,450 --> 00:10:47,630
service<font color="#E5E5E5"> now he use accessibility service</font>

277
00:10:46,370 --> 00:10:49,430
you define the permission in<font color="#E5E5E5"> your</font>

278
00:10:47,630 --> 00:10:51,170
Android application<font color="#CCCCCC"> and once you've</font>

279
00:10:49,430 --> 00:10:53,180
installed<font color="#E5E5E5"> this app you then need</font><font color="#CCCCCC"> to</font>

280
00:10:51,170 --> 00:10:57,290
interact<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> system and enable</font><font color="#E5E5E5"> that</font>

281
00:10:53,180 --> 00:10:59,300
service explicitly so lots of game

282
00:10:57,290 --> 00:11:01,189
developers who build BOTS<font color="#E5E5E5"> to</font><font color="#CCCCCC"> bot games</font>

283
00:10:59,300 --> 00:11:02,719
<font color="#CCCCCC">use this particular service and the</font>

284
00:11:01,190 --> 00:11:03,500
accessibility<font color="#E5E5E5"> service has been exploited</font>

285
00:11:02,720 --> 00:11:05,330
<font color="#E5E5E5">in the past</font>

286
00:11:03,500 --> 00:11:07,430
and there's also a<font color="#CCCCCC"> crude research paper</font>

287
00:11:05,330 --> 00:11:10,100
<font color="#E5E5E5">on how to go about exploiting</font><font color="#CCCCCC"> this with</font>

288
00:11:07,430 --> 00:11:11,420
various kinds of overlay attacks the

289
00:11:10,100 --> 00:11:14,360
issue I had with the<font color="#E5E5E5"> accessibility</font>

290
00:11:11,420 --> 00:11:16,520
service is there's a<font color="#E5E5E5"> there's a huge cost</font>

291
00:11:14,360 --> 00:11:18,440
<font color="#CCCCCC">to use interaction</font><font color="#E5E5E5"> so you need the user</font>

292
00:11:16,520 --> 00:11:20,300
to step through multiple hoops<font color="#E5E5E5"> try to</font>

293
00:11:18,440 --> 00:11:21,740
trick them into tapping on various bits

294
00:11:20,300 --> 00:11:23,359
of<font color="#E5E5E5"> the screen in order</font><font color="#CCCCCC"> to get this</font>

295
00:11:21,740 --> 00:11:25,040
<font color="#CCCCCC">service running</font><font color="#E5E5E5"> but once you have it</font>

296
00:11:23,360 --> 00:11:26,600
<font color="#E5E5E5">then you can do all this stuff</font><font color="#CCCCCC"> well I</font>

297
00:11:25,040 --> 00:11:28,130
<font color="#CCCCCC">wonder I</font><font color="#E5E5E5"> wanted to keep user interaction</font>

298
00:11:26,600 --> 00:11:31,640
to a minimum so I<font color="#E5E5E5"> ignored the</font>

299
00:11:28,130 --> 00:11:34,430
accessibility service<font color="#E5E5E5"> media projection</font>

300
00:11:31,640 --> 00:11:36,650
was useful<font color="#E5E5E5"> or was interesting because</font>

301
00:11:34,430 --> 00:11:38,120
one it didn't require any<font color="#CCCCCC"> permission</font><font color="#E5E5E5"> so</font>

302
00:11:36,650 --> 00:11:41,540
you can use the media<font color="#E5E5E5"> projection API</font>

303
00:11:38,120 --> 00:11:43,880
without<font color="#E5E5E5"> defining any permissions you can</font>

304
00:11:41,540 --> 00:11:45,469
<font color="#CCCCCC">run this</font><font color="#E5E5E5"> with the context of your</font>

305
00:11:43,880 --> 00:11:48,880
application<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> don't need to</font>

306
00:11:45,470 --> 00:11:52,430
escalate to a more privileged<font color="#CCCCCC"> context</font>

307
00:11:48,880 --> 00:11:54,920
and finally all it has as in<font color="#E5E5E5"> terms of</font>

308
00:11:52,430 --> 00:11:58,310
<font color="#E5E5E5">defense to</font><font color="#CCCCCC"> prevent</font><font color="#E5E5E5"> an attacker from</font>

309
00:11:54,920 --> 00:11:59,870
exploiting this is a<font color="#CCCCCC"> pop-up so</font><font color="#E5E5E5"> anytime</font>

310
00:11:58,310 --> 00:12:01,579
<font color="#E5E5E5">you use the media projection</font><font color="#CCCCCC"> established</font>

311
00:11:59,870 --> 00:12:03,620
<font color="#E5E5E5">you'll see a</font><font color="#CCCCCC"> pop-up look similar to this</font>

312
00:12:01,580 --> 00:12:04,790
<font color="#CCCCCC">that says this</font><font color="#E5E5E5"> particular application is</font>

313
00:12:03,620 --> 00:12:06,680
going<font color="#E5E5E5"> to start capturing everything</font>

314
00:12:04,790 --> 00:12:10,430
<font color="#E5E5E5">that's on</font><font color="#CCCCCC"> your screen would</font><font color="#E5E5E5"> you like to</font>

315
00:12:06,680 --> 00:12:12,829
continue<font color="#E5E5E5"> so I started thinking like well</font>

316
00:12:10,430 --> 00:12:15,199
if this is<font color="#E5E5E5"> the only defense what could I</font>

317
00:12:12,830 --> 00:12:17,300
do to get around this so one of the

318
00:12:15,200 --> 00:12:21,530
things was well what if I<font color="#E5E5E5"> just overlaid</font>

319
00:12:17,300 --> 00:12:24,109
this with any arbitrary<font color="#E5E5E5"> message so first</font>

320
00:12:21,530 --> 00:12:26,900
thing called the media projection API<font color="#E5E5E5"> it</font>

321
00:12:24,110 --> 00:12:29,270
then<font color="#CCCCCC"> calls the system UI</font><font color="#E5E5E5"> pop-up once we</font>

322
00:12:26,900 --> 00:12:31,970
have to pop up<font color="#E5E5E5"> your overlay there we</font>

323
00:12:29,270 --> 00:12:33,140
wait on user interaction<font color="#E5E5E5"> and then</font>

324
00:12:31,970 --> 00:12:34,820
finally we can<font color="#CCCCCC"> start recording</font><font color="#E5E5E5"> the</font>

325
00:12:33,140 --> 00:12:38,600
screen<font color="#E5E5E5"> so when</font><font color="#CCCCCC"> I overlay it</font><font color="#E5E5E5"> looks</font>

326
00:12:34,820 --> 00:12:41,120
something like this now to overlay to

327
00:12:38,600 --> 00:12:42,410
overlay<font color="#E5E5E5"> these kind of UI</font><font color="#CCCCCC"> elements it's</font>

328
00:12:41,120 --> 00:12:44,720
quite trivial<font color="#E5E5E5"> these attacks are not</font>

329
00:12:42,410 --> 00:12:47,089
<font color="#CCCCCC">novel it's been done in the past</font><font color="#E5E5E5"> back</font>

330
00:12:44,720 --> 00:12:50,060
when Android<font color="#CCCCCC"> 4 was the</font><font color="#E5E5E5"> thing people use</font>

331
00:12:47,089 --> 00:12:52,339
those messages<font color="#E5E5E5"> to overlay</font><font color="#CCCCCC"> the screen the</font>

332
00:12:50,060 --> 00:12:55,069
more modern way<font color="#CCCCCC"> of doing overlays</font><font color="#E5E5E5"> is to</font>

333
00:12:52,339 --> 00:12:56,600
use system alert<font color="#E5E5E5"> windows so system alert</font>

334
00:12:55,070 --> 00:12:58,460
<font color="#CCCCCC">windows is a</font><font color="#E5E5E5"> permission you define in</font>

335
00:12:56,600 --> 00:13:00,860
<font color="#E5E5E5">your applications the lets you draw</font>

336
00:12:58,460 --> 00:13:03,230
<font color="#E5E5E5">overlays within you are the the key</font>

337
00:13:00,860 --> 00:13:05,600
thing<font color="#CCCCCC"> here is this</font><font color="#E5E5E5"> particular UI element</font>

338
00:13:03,230 --> 00:13:07,310
<font color="#CCCCCC">there's this pop-up you can control the</font>

339
00:13:05,600 --> 00:13:09,350
feedback loop<font color="#CCCCCC"> so you can control</font><font color="#E5E5E5"> when</font>

340
00:13:07,310 --> 00:13:10,790
<font color="#E5E5E5">you've triggered this pop-up and listen</font>

341
00:13:09,350 --> 00:13:12,530
for inputs or callbacks

342
00:13:10,790 --> 00:13:14,449
once you've tapped on say cancel or

343
00:13:12,530 --> 00:13:16,040
start now so if you can<font color="#E5E5E5"> control the</font>

344
00:13:14,450 --> 00:13:17,270
feedback loop you can<font color="#CCCCCC"> control when your</font>

345
00:13:16,040 --> 00:13:20,030
overlays display<font color="#CCCCCC"> I mean</font>

346
00:13:17,270 --> 00:13:21,800
you want to dismiss that<font color="#E5E5E5"> the other thing</font>

347
00:13:20,030 --> 00:13:23,510
<font color="#E5E5E5">I want to say is about the system</font><font color="#CCCCCC"> alert</font>

348
00:13:21,800 --> 00:13:25,910
window<font color="#E5E5E5"> this particular permission is</font>

349
00:13:23,510 --> 00:13:28,310
granted<font color="#E5E5E5"> by default so the</font><font color="#CCCCCC"> user</font><font color="#E5E5E5"> is not</font>

350
00:13:25,910 --> 00:13:29,870
one and<font color="#CCCCCC"> that tells them that oh wait</font>

351
00:13:28,310 --> 00:13:32,030
this<font color="#CCCCCC"> app's</font><font color="#E5E5E5"> request this particular</font>

352
00:13:29,870 --> 00:13:34,880
permission unless<font color="#E5E5E5"> you actually</font><font color="#CCCCCC"> decompile</font>

353
00:13:32,030 --> 00:13:36,230
<font color="#CCCCCC">the app look at the manifest</font><font color="#E5E5E5"> file so I</font>

354
00:13:34,880 --> 00:13:38,930
want<font color="#CCCCCC"> to show you how</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> works in</font>

355
00:13:36,230 --> 00:13:40,820
action<font color="#E5E5E5"> so I've got a demo for you and</font>

356
00:13:38,930 --> 00:13:45,939
because I can't do<font color="#E5E5E5"> things live I've</font>

357
00:13:40,820 --> 00:13:47,960
recorded it and<font color="#CCCCCC"> hopefully</font><font color="#E5E5E5"> it's place</font>

358
00:13:45,940 --> 00:13:49,460
yeah so what you're<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> see here is</font>

359
00:13:47,960 --> 00:13:52,240
a proof of concept<font color="#CCCCCC"> app that I've built</font>

360
00:13:49,460 --> 00:13:55,550
the app has two buttons<font color="#E5E5E5"> start and stop</font>

361
00:13:52,240 --> 00:13:57,380
when you hit<font color="#E5E5E5"> start it'll trigger this</font>

362
00:13:55,550 --> 00:14:00,199
<font color="#E5E5E5">pop-up</font><font color="#CCCCCC"> and now this has been overlaid</font>

363
00:13:57,380 --> 00:14:02,000
with my custom message so in a benign

364
00:14:00,200 --> 00:14:04,130
app you'll overlay this and say well

365
00:14:02,000 --> 00:14:06,280
just download this app<font color="#E5E5E5"> get out of my way</font>

366
00:14:04,130 --> 00:14:12,010
I want to<font color="#E5E5E5"> start using it</font>

367
00:14:06,280 --> 00:14:15,230
so in the second<font color="#E5E5E5"> flick start now and</font>

368
00:14:12,010 --> 00:14:18,830
yeah it's capturing the<font color="#CCCCCC"> screen in the</font>

369
00:14:15,230 --> 00:14:22,220
<font color="#CCCCCC">background so here's me just interacting</font>

370
00:14:18,830 --> 00:14:25,460
with the email client<font color="#CCCCCC"> that's not my</font>

371
00:14:22,220 --> 00:14:27,320
email address<font color="#E5E5E5"> so don't spam me</font><font color="#CCCCCC"> I did</font>

372
00:14:25,460 --> 00:14:30,290
this demo at another another<font color="#E5E5E5"> conference</font>

373
00:14:27,320 --> 00:14:37,100
was<font color="#E5E5E5"> the MWR briefing so just repurpose</font>

374
00:14:30,290 --> 00:14:38,839
it here<font color="#E5E5E5"> for this presentation</font><font color="#CCCCCC"> cool so</font>

375
00:14:37,100 --> 00:14:41,150
let's<font color="#CCCCCC"> look at the recordings now we've</font>

376
00:14:38,840 --> 00:14:50,420
captured this recording<font color="#E5E5E5"> what did we</font>

377
00:14:41,150 --> 00:14:51,949
actually see so we<font color="#CCCCCC"> dismiss the</font><font color="#E5E5E5"> pop-up</font>

378
00:14:50,420 --> 00:14:54,650
<font color="#E5E5E5">dismiss the application and now this is</font>

379
00:14:51,950 --> 00:14:56,180
<font color="#E5E5E5">just a recording that</font><font color="#CCCCCC"> the apps made from</font>

380
00:14:54,650 --> 00:14:58,490
<font color="#E5E5E5">your user interactions</font><font color="#CCCCCC"> so here you</font><font color="#E5E5E5"> can</font>

381
00:14:56,180 --> 00:15:04,550
see it's captured me<font color="#E5E5E5"> writing an email to</font>

382
00:14:58,490 --> 00:15:07,400
<font color="#E5E5E5">myself also</font><font color="#CCCCCC"> notice that you can see</font><font color="#E5E5E5"> key</font>

383
00:15:04,550 --> 00:15:09,469
taps<font color="#E5E5E5"> so if this was an app</font><font color="#CCCCCC"> that they</font>

384
00:15:07,400 --> 00:15:11,180
require you to<font color="#CCCCCC"> enter your</font><font color="#E5E5E5"> password you</font>

385
00:15:09,470 --> 00:15:18,020
<font color="#CCCCCC">can record key taps and</font><font color="#E5E5E5"> then reconstruct</font>

386
00:15:11,180 --> 00:15:20,000
the password form the key taps<font color="#E5E5E5"> okay so</font>

387
00:15:18,020 --> 00:15:21,490
now let's talk about<font color="#E5E5E5"> exploitability so</font>

388
00:15:20,000 --> 00:15:25,430
we've put together<font color="#E5E5E5"> as proof of concept</font>

389
00:15:21,490 --> 00:15:26,990
how believable<font color="#E5E5E5"> is this attack so one you</font>

390
00:15:25,430 --> 00:15:29,989
have no permissions required so any

391
00:15:26,990 --> 00:15:30,769
benign app can install can call this API

392
00:15:29,990 --> 00:15:32,869
you

393
00:15:30,769 --> 00:15:34,040
not to be able<font color="#E5E5E5"> to identify just I'm</font>

394
00:15:32,869 --> 00:15:36,079
looking<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> permission that</font><font color="#CCCCCC"> this app</font>

395
00:15:34,040 --> 00:15:39,469
<font color="#E5E5E5">requires that</font><font color="#CCCCCC"> okay this</font><font color="#E5E5E5"> this app can</font>

396
00:15:36,079 --> 00:15:40,699
<font color="#E5E5E5">record the screen unless of course you</font>

397
00:15:39,470 --> 00:15:41,929
decompile it and then try to<font color="#E5E5E5"> look</font><font color="#CCCCCC"> for</font>

398
00:15:40,699 --> 00:15:44,449
<font color="#E5E5E5">API</font><font color="#CCCCCC"> pose</font>

399
00:15:41,929 --> 00:15:45,980
use interaction so the<font color="#E5E5E5"> only user</font>

400
00:15:44,449 --> 00:15:47,899
interaction that<font color="#E5E5E5"> you require here is</font>

401
00:15:45,980 --> 00:15:49,309
obviously install the app and then tap

402
00:15:47,899 --> 00:15:50,929
on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> pop-up</font>

403
00:15:49,309 --> 00:15:52,988
so once you've<font color="#E5E5E5"> granted them permissions</font>

404
00:15:50,929 --> 00:15:55,699
<font color="#E5E5E5">they can capture anything on your screen</font>

405
00:15:52,989 --> 00:15:58,220
so this<font color="#E5E5E5"> affects Android devices running</font>

406
00:15:55,699 --> 00:15:59,899
<font color="#CCCCCC">Android</font><font color="#E5E5E5"> 5 and</font><font color="#CCCCCC"> above</font><font color="#E5E5E5"> so the media</font>

407
00:15:58,220 --> 00:16:02,299
projection<font color="#E5E5E5"> API doesn't exist in</font><font color="#CCCCCC"> Android</font>

408
00:15:59,899 --> 00:16:04,489
<font color="#CCCCCC">less than 5.0 and then</font><font color="#E5E5E5"> you rely on</font>

409
00:16:02,299 --> 00:16:07,819
<font color="#CCCCCC">routing a device and all sorts of frame</font>

410
00:16:04,489 --> 00:16:10,730
buffer hooking so this bug<font color="#CCCCCC"> has</font><font color="#E5E5E5"> been</font>

411
00:16:07,819 --> 00:16:14,118
patched<font color="#E5E5E5"> in Android 8 so Android</font><font color="#CCCCCC"> it and</font>

412
00:16:10,730 --> 00:16:16,819
<font color="#E5E5E5">Android</font><font color="#CCCCCC"> it gives me explicitly prohibit</font>

413
00:16:14,119 --> 00:16:18,649
the use of overlay attacks so it

414
00:16:16,819 --> 00:16:21,378
prevents<font color="#E5E5E5"> you from using system alert</font>

415
00:16:18,649 --> 00:16:24,499
window<font color="#E5E5E5"> to draw overlays over system UI</font>

416
00:16:21,379 --> 00:16:26,149
components and if you're interested<font color="#CCCCCC"> in</font>

417
00:16:24,499 --> 00:16:28,309
the more<font color="#E5E5E5"> technical details</font><font color="#CCCCCC"> about this</font>

418
00:16:26,149 --> 00:16:30,529
particular<font color="#CCCCCC"> attack how'd</font><font color="#E5E5E5"> you control the</font>

419
00:16:28,309 --> 00:16:33,199
feedback loop<font color="#E5E5E5"> so I publish an advisory</font>

420
00:16:30,529 --> 00:16:34,579
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> a link over here so you can</font><font color="#E5E5E5"> look</font>

421
00:16:33,199 --> 00:16:38,299
<font color="#E5E5E5">at that and then try to build it</font>

422
00:16:34,579 --> 00:16:40,609
yourself<font color="#E5E5E5"> so moving on we have automated</font>

423
00:16:38,299 --> 00:16:42,889
<font color="#E5E5E5">input so now we've achieved the goal of</font>

424
00:16:40,610 --> 00:16:44,529
automating of recording the user screen

425
00:16:42,889 --> 00:16:46,910
<font color="#CCCCCC">so now we want</font><font color="#E5E5E5"> to look at how do</font><font color="#CCCCCC"> I</font>

426
00:16:44,529 --> 00:16:49,429
replay<font color="#CCCCCC"> those attack</font><font color="#E5E5E5"> replay those</font>

427
00:16:46,910 --> 00:16:50,689
gestures<font color="#E5E5E5"> or whatever I planned can I</font>

428
00:16:49,429 --> 00:16:53,119
start instrumenting this device of

429
00:16:50,689 --> 00:16:54,980
interacting with<font color="#CCCCCC"> the device</font><font color="#E5E5E5"> so once</font>

430
00:16:53,119 --> 00:16:56,959
again let's look<font color="#E5E5E5"> at the attack surface</font>

431
00:16:54,980 --> 00:16:58,490
<font color="#E5E5E5">so the first one</font><font color="#CCCCCC"> again is the</font>

432
00:16:56,959 --> 00:17:00,859
<font color="#E5E5E5">accessibility service and like we've</font>

433
00:16:58,490 --> 00:17:02,600
<font color="#E5E5E5">discussed before</font><font color="#CCCCCC"> it has a high cost</font><font color="#E5E5E5"> of</font>

434
00:17:00,860 --> 00:17:03,769
user interaction<font color="#CCCCCC"> and people are</font>

435
00:17:02,600 --> 00:17:08,240
<font color="#E5E5E5">constantly looking out for apps</font><font color="#CCCCCC"> that</font>

436
00:17:03,769 --> 00:17:09,888
define<font color="#E5E5E5"> this particular permission so you</font>

437
00:17:08,240 --> 00:17:11,899
<font color="#E5E5E5">know that the second one is the input</font>

438
00:17:09,888 --> 00:17:13,849
binary like the gentleman over<font color="#CCCCCC"> there sir</font>

439
00:17:11,898 --> 00:17:16,099
you can emulate input by using<font color="#E5E5E5"> this</font>

440
00:17:13,849 --> 00:17:18,168
binary<font color="#E5E5E5"> so this binary has been around</font>

441
00:17:16,099 --> 00:17:20,208
since<font color="#E5E5E5"> the first versions of Android I</font>

442
00:17:18,169 --> 00:17:23,029
believe<font color="#E5E5E5"> allows you to different</font><font color="#CCCCCC"> things</font>

443
00:17:20,209 --> 00:17:24,589
like emulate touches emulate swipes<font color="#CCCCCC"> zoom</font>

444
00:17:23,029 --> 00:17:26,599
and that kind<font color="#CCCCCC"> of stuff you can email</font>

445
00:17:24,589 --> 00:17:31,240
emulate hardware components<font color="#E5E5E5"> like a</font>

446
00:17:26,599 --> 00:17:34,520
keyboard<font color="#CCCCCC"> and finally there's system apps</font>

447
00:17:31,240 --> 00:17:35,960
<font color="#E5E5E5">now in order to inject events into an</font>

448
00:17:34,520 --> 00:17:38,480
<font color="#E5E5E5">Android system you need to define this</font>

449
00:17:35,960 --> 00:17:39,919
permission<font color="#E5E5E5"> which is inject events this</font>

450
00:17:38,480 --> 00:17:43,130
<font color="#E5E5E5">is</font><font color="#CCCCCC"> a system permission</font><font color="#E5E5E5"> that's only found</font>

451
00:17:39,919 --> 00:17:46,340
<font color="#E5E5E5">with system apps so what is a system</font><font color="#CCCCCC"> app</font>

452
00:17:43,130 --> 00:17:50,360
and that let's sign<font color="#E5E5E5"> using the device</font>

453
00:17:46,340 --> 00:17:52,340
release keys so once<font color="#E5E5E5"> you once you have</font>

454
00:17:50,360 --> 00:17:54,350
an app<font color="#CCCCCC"> that's signed with the device's</font>

455
00:17:52,340 --> 00:17:56,629
release<font color="#E5E5E5"> keys you can define all these</font>

456
00:17:54,350 --> 00:17:58,699
system level<font color="#CCCCCC"> permissions like inject</font>

457
00:17:56,630 --> 00:18:01,160
events and then you utilize the

458
00:17:58,700 --> 00:18:03,650
functionality<font color="#CCCCCC"> that they provide</font><font color="#E5E5E5"> so this</font>

459
00:18:01,160 --> 00:18:05,000
is particularly<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> because when</font>

460
00:18:03,650 --> 00:18:07,070
we come back to the case<font color="#E5E5E5"> of this camera</font>

461
00:18:05,000 --> 00:18:09,169
it's going<font color="#E5E5E5"> to be obvious as to why they</font>

462
00:18:07,070 --> 00:18:12,159
needed<font color="#E5E5E5"> this particular system</font><font color="#CCCCCC"> app or why</font>

463
00:18:09,169 --> 00:18:15,020
do they need<font color="#E5E5E5"> this particular permission</font>

464
00:18:12,160 --> 00:18:19,400
so now let's look at evaluating<font color="#E5E5E5"> the</font>

465
00:18:15,020 --> 00:18:22,280
attack parts again first<font color="#E5E5E5"> one minimum</font>

466
00:18:19,400 --> 00:18:24,799
version<font color="#E5E5E5"> of Android we want to scale our</font>

467
00:18:22,280 --> 00:18:27,110
attack across<font color="#E5E5E5"> multiple versions multiple</font>

468
00:18:24,799 --> 00:18:31,429
devices<font color="#CCCCCC"> were the permission requirements</font>

469
00:18:27,110 --> 00:18:32,689
to get to get automated<font color="#E5E5E5"> input where the</font>

470
00:18:31,429 --> 00:18:35,090
defense<font color="#E5E5E5"> is in place</font><font color="#CCCCCC"> do you</font><font color="#E5E5E5"> need a</font>

471
00:18:32,690 --> 00:18:36,980
special context you need

472
00:18:35,090 --> 00:18:40,549
are<font color="#CCCCCC"> they</font><font color="#E5E5E5"> any user</font><font color="#CCCCCC"> alert you need to</font>

473
00:18:36,980 --> 00:18:43,100
define<font color="#CCCCCC"> some sort of</font><font color="#E5E5E5"> interaction and</font>

474
00:18:40,549 --> 00:18:44,809
finally there's<font color="#E5E5E5"> user interaction what do</font>

475
00:18:43,100 --> 00:18:46,850
I<font color="#CCCCCC"> need to get the user</font><font color="#E5E5E5"> to do in order</font><font color="#CCCCCC"> to</font>

476
00:18:44,809 --> 00:18:47,860
<font color="#E5E5E5">exploit these vulnerabilities that am i</font>

477
00:18:46,850 --> 00:18:52,189
fine

478
00:18:47,860 --> 00:18:54,110
<font color="#E5E5E5">so that's evaluate each in turn</font><font color="#CCCCCC"> big</font><font color="#E5E5E5"> no</font>

479
00:18:52,190 --> 00:18:57,049
accessibility<font color="#E5E5E5"> service for reasons</font>

480
00:18:54,110 --> 00:18:59,449
mentioned<font color="#E5E5E5"> earlier system apps so yes</font>

481
00:18:57,049 --> 00:19:01,820
this is a potential<font color="#E5E5E5"> Avenue that you</font>

482
00:18:59,450 --> 00:19:03,830
cannot hack system apps<font color="#E5E5E5"> but then they'd</font>

483
00:19:01,820 --> 00:19:05,899
be constrained<font color="#E5E5E5"> to a specific version</font><font color="#CCCCCC"> of</font>

484
00:19:03,830 --> 00:19:07,730
specific<font color="#CCCCCC"> roam</font><font color="#E5E5E5"> and then you attack</font>

485
00:19:05,900 --> 00:19:09,820
wouldn't scale across the Android

486
00:19:07,730 --> 00:19:11,780
ecosystem so you'd<font color="#E5E5E5"> only be targeting</font>

487
00:19:09,820 --> 00:19:15,470
<font color="#E5E5E5">particular rooms so we</font><font color="#CCCCCC"> wanted something</font>

488
00:19:11,780 --> 00:19:17,450
<font color="#E5E5E5">that could scale across Android so then</font>

489
00:19:15,470 --> 00:19:19,190
there was the<font color="#E5E5E5"> input binary but the</font>

490
00:19:17,450 --> 00:19:21,350
problem the input binary is if you<font color="#E5E5E5"> try</font>

491
00:19:19,190 --> 00:19:23,659
to invoke it<font color="#E5E5E5"> from</font><font color="#CCCCCC"> an application</font><font color="#E5E5E5"> you are</font>

492
00:19:21,350 --> 00:19:26,719
constrained with the untrusted<font color="#E5E5E5"> app</font>

493
00:19:23,659 --> 00:19:27,980
context and so you can emulate<font color="#CCCCCC"> input</font>

494
00:19:26,720 --> 00:19:30,890
within<font color="#CCCCCC"> your app but</font><font color="#E5E5E5"> not across the</font>

495
00:19:27,980 --> 00:19:33,260
<font color="#E5E5E5">system so the challenge was</font><font color="#CCCCCC"> to find a</font>

496
00:19:30,890 --> 00:19:37,669
context<font color="#CCCCCC"> that lets you inject input</font>

497
00:19:33,260 --> 00:19:41,960
across the system but we<font color="#CCCCCC"> can already do</font>

498
00:19:37,669 --> 00:19:44,840
that<font color="#CCCCCC"> so if we have a DB so adb runs</font><font color="#E5E5E5"> as</font>

499
00:19:41,960 --> 00:19:48,409
under<font color="#E5E5E5"> the shell context and using adb</font>

500
00:19:44,840 --> 00:19:50,658
you can emulate<font color="#E5E5E5"> touches and inputs but</font>

501
00:19:48,409 --> 00:19:53,360
it's not that easy<font color="#E5E5E5"> to escalate your</font>

502
00:19:50,659 --> 00:19:54,860
<font color="#E5E5E5">privileges to</font><font color="#CCCCCC"> adb</font><font color="#E5E5E5"> so what are the some</font>

503
00:19:53,360 --> 00:19:57,409
other things<font color="#E5E5E5"> I tried to</font>

504
00:19:54,860 --> 00:19:59,959
to authenticate<font color="#CCCCCC"> to a TV</font><font color="#E5E5E5"> the first one is</font>

505
00:19:57,410 --> 00:20:03,200
to use<font color="#CCCCCC"> Android a ps2 emulator</font><font color="#E5E5E5"> USB input</font>

506
00:19:59,960 --> 00:20:05,210
device<font color="#E5E5E5"> so this didn't work because once</font>

507
00:20:03,200 --> 00:20:07,309
<font color="#CCCCCC">you</font><font color="#E5E5E5"> built an app that emulates a USB</font>

508
00:20:05,210 --> 00:20:09,260
device<font color="#CCCCCC"> your app needs to power the USB</font>

509
00:20:07,309 --> 00:20:11,000
bus<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if your app lives on the same</font>

510
00:20:09,260 --> 00:20:14,030
<font color="#E5E5E5">device</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are no api's that</font><font color="#CCCCCC"> can power</font>

511
00:20:11,000 --> 00:20:15,470
the bus and then tell<font color="#CCCCCC"> ADB</font><font color="#E5E5E5"> D so a DVD is</font>

512
00:20:14,030 --> 00:20:18,320
the daemon<font color="#E5E5E5"> that listens for</font><font color="#CCCCCC"> adb</font>

513
00:20:15,470 --> 00:20:20,240
connections<font color="#E5E5E5"> so it can inform the adb</font>

514
00:20:18,320 --> 00:20:22,040
daemon that oh there's a someone's

515
00:20:20,240 --> 00:20:25,160
trying to connect<font color="#E5E5E5"> do</font><font color="#CCCCCC"> we prompt them for</font>

516
00:20:22,040 --> 00:20:28,370
authorization<font color="#E5E5E5"> the second thing that I</font>

517
00:20:25,160 --> 00:20:31,160
discovered<font color="#CCCCCC"> was a DP over TCP so people</font>

518
00:20:28,370 --> 00:20:33,949
generally<font color="#E5E5E5"> call this</font><font color="#CCCCCC"> adb over Wi-Fi what</font>

519
00:20:31,160 --> 00:20:36,350
this allows you is to run ADB over a<font color="#E5E5E5"> TCP</font>

520
00:20:33,950 --> 00:20:40,160
port so this is<font color="#E5E5E5"> something that you need</font>

521
00:20:36,350 --> 00:20:42,139
<font color="#E5E5E5">to manually manually enable so this</font>

522
00:20:40,160 --> 00:20:44,360
doesn't<font color="#CCCCCC"> come enabled by default where</font>

523
00:20:42,140 --> 00:20:47,299
you need<font color="#E5E5E5"> to connect</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> ADB listen to</font>

524
00:20:44,360 --> 00:20:50,240
port<font color="#CCCCCC"> five five five five or any port of</font>

525
00:20:47,299 --> 00:20:52,190
<font color="#E5E5E5">your choosing and yeah like</font><font color="#CCCCCC"> I mentioned</font>

526
00:20:50,240 --> 00:20:54,910
this<font color="#E5E5E5"> is no part of the standard</font><font color="#CCCCCC"> USB</font>

527
00:20:52,190 --> 00:20:56,929
config<font color="#E5E5E5"> so we are looking for</font>

528
00:20:54,910 --> 00:21:01,990
misconfigured devices or devices that

529
00:20:56,929 --> 00:21:04,910
<font color="#E5E5E5">have a DB</font><font color="#CCCCCC"> D listening</font><font color="#E5E5E5"> over a TCP port so</font>

530
00:21:01,990 --> 00:21:07,669
there have<font color="#E5E5E5"> been reports let's say that</font>

531
00:21:04,910 --> 00:21:11,210
<font color="#E5E5E5">tons of these devices</font><font color="#CCCCCC"> that have a DB</font>

532
00:21:07,669 --> 00:21:13,190
listening<font color="#E5E5E5"> of over TCP ports and you can</font>

533
00:21:11,210 --> 00:21:15,790
hit<font color="#E5E5E5"> them</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet I haven't</font>

534
00:21:13,190 --> 00:21:18,980
<font color="#E5E5E5">really looked</font><font color="#CCCCCC"> into the specifics</font><font color="#E5E5E5"> so I</font>

535
00:21:15,790 --> 00:21:21,770
have no real opinion on whether this<font color="#E5E5E5"> is</font>

536
00:21:18,980 --> 00:21:22,880
a scalable<font color="#E5E5E5"> effect but if you guys are</font>

537
00:21:21,770 --> 00:21:25,879
interested you<font color="#CCCCCC"> can read this particular</font>

538
00:21:22,880 --> 00:21:28,160
<font color="#E5E5E5">article</font><font color="#CCCCCC"> by Kevin go see the dog didn't</font>

539
00:21:25,880 --> 00:21:30,500
<font color="#CCCCCC">if you'd</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> guy well yeah so he</font>

540
00:21:28,160 --> 00:21:33,710
had an article<font color="#E5E5E5"> about IOT devices that</font>

541
00:21:30,500 --> 00:21:35,210
have<font color="#CCCCCC"> ADB enabled over TCP and this is</font>

542
00:21:33,710 --> 00:21:39,140
for vendors to<font color="#E5E5E5"> push down updates to</font>

543
00:21:35,210 --> 00:21:40,580
<font color="#E5E5E5">their devices</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> okay let's</font><font color="#CCCCCC"> start by</font>

544
00:21:39,140 --> 00:21:43,630
constructing<font color="#CCCCCC"> a</font><font color="#E5E5E5"> proof-of-concept</font>

545
00:21:40,580 --> 00:21:46,040
<font color="#E5E5E5">so we know that</font><font color="#CCCCCC"> adb has a different</font>

546
00:21:43,630 --> 00:21:48,590
context<font color="#CCCCCC"> a</font><font color="#E5E5E5"> privileged context that lets</font>

547
00:21:46,040 --> 00:21:52,299
you<font color="#E5E5E5"> use the input binary to automate</font>

548
00:21:48,590 --> 00:21:55,220
input assuming a<font color="#E5E5E5"> misconfigured device</font>

549
00:21:52,299 --> 00:21:56,570
you want to connect<font color="#CCCCCC"> to a DB over TCP so</font>

550
00:21:55,220 --> 00:21:58,070
<font color="#E5E5E5">I build an app define the internet</font>

551
00:21:56,570 --> 00:22:02,750
permission<font color="#E5E5E5"> that lets me connect to the</font>

552
00:21:58,070 --> 00:22:05,418
<font color="#E5E5E5">TCP port since Android 4.4</font><font color="#CCCCCC"> adb prompts</font>

553
00:22:02,750 --> 00:22:06,770
you for<font color="#E5E5E5"> authorization so</font><font color="#CCCCCC"> ask</font><font color="#E5E5E5"> you like</font>

554
00:22:05,419 --> 00:22:07,890
<font color="#E5E5E5">this computer is</font><font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to connect to</font>

555
00:22:06,770 --> 00:22:10,470
your<font color="#E5E5E5"> device</font>

556
00:22:07,890 --> 00:22:11,910
you want to authorize<font color="#E5E5E5"> that</font><font color="#CCCCCC"> and if you</font>

557
00:22:10,470 --> 00:22:13,410
grant them authorization then<font color="#CCCCCC"> ADB is</font>

558
00:22:11,910 --> 00:22:16,140
authenticated<font color="#E5E5E5"> and then you can start</font>

559
00:22:13,410 --> 00:22:18,300
<font color="#E5E5E5">interacting in</font><font color="#CCCCCC"> the system and if</font><font color="#E5E5E5"> that</font>

560
00:22:16,140 --> 00:22:23,520
works you've got an adb shell<font color="#CCCCCC"> while</font><font color="#E5E5E5"> an</font>

561
00:22:18,300 --> 00:22:25,770
<font color="#E5E5E5">app so here's a demo where I demonstrate</font>

562
00:22:23,520 --> 00:22:39,210
the current context the application is

563
00:22:25,770 --> 00:22:41,660
we escalate<font color="#E5E5E5"> and</font><font color="#CCCCCC"> give an</font><font color="#E5E5E5"> ADB session so</font>

564
00:22:39,210 --> 00:22:45,000
here's my app it prints you the current

565
00:22:41,660 --> 00:22:48,450
current context so when I click escalate

566
00:22:45,000 --> 00:22:51,120
<font color="#E5E5E5">it triggers an ADB prompt so it connects</font>

567
00:22:48,450 --> 00:22:52,980
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the adb tcp port and then says you</font>

568
00:22:51,120 --> 00:22:56,340
want to authenticate and once you've

569
00:22:52,980 --> 00:22:58,050
escalated<font color="#E5E5E5"> you now are running as adb</font>

570
00:22:56,340 --> 00:22:59,909
shell<font color="#E5E5E5"> tonight when you call the input</font>

571
00:22:58,050 --> 00:23:04,770
binary you<font color="#E5E5E5"> can automate user input</font>

572
00:22:59,910 --> 00:23:07,380
<font color="#E5E5E5">across the device so exploitability the</font>

573
00:23:04,770 --> 00:23:08,730
first one is this particular the target

574
00:23:07,380 --> 00:23:11,490
device<font color="#E5E5E5"> needs to have USB debugging</font>

575
00:23:08,730 --> 00:23:16,920
<font color="#E5E5E5">enabled it then needs</font><font color="#CCCCCC"> to have a BBB</font>

576
00:23:11,490 --> 00:23:19,260
<font color="#E5E5E5">listening</font><font color="#CCCCCC"> over a TCP port and this</font>

577
00:23:16,920 --> 00:23:21,930
particular<font color="#E5E5E5"> floor was fixed in Android 8</font>

578
00:23:19,260 --> 00:23:23,310
where they prevent overlay attacks<font color="#E5E5E5"> but</font>

579
00:23:21,930 --> 00:23:25,680
<font color="#E5E5E5">you can if you get around the overlay</font>

580
00:23:23,310 --> 00:23:27,360
bits you can<font color="#E5E5E5"> still connect</font><font color="#CCCCCC"> to a DB over</font>

581
00:23:25,680 --> 00:23:29,640
TCP and then try to escalate your

582
00:23:27,360 --> 00:23:32,159
privileges<font color="#E5E5E5"> then yeah</font><font color="#CCCCCC"> sure</font>

583
00:23:29,640 --> 00:23:34,080
secure<font color="#CCCCCC"> adb would prevent you some extent</font>

584
00:23:32,160 --> 00:23:35,970
if you want to look at the technical

585
00:23:34,080 --> 00:23:37,830
details<font color="#CCCCCC"> of how this</font><font color="#E5E5E5"> was achieved</font><font color="#CCCCCC"> there's</font>

586
00:23:35,970 --> 00:23:41,220
a link<font color="#E5E5E5"> there and you can download that</font>

587
00:23:37,830 --> 00:23:43,679
and have a look<font color="#CCCCCC"> at the O's</font><font color="#E5E5E5"> so coming</font>

588
00:23:41,220 --> 00:23:45,690
back to<font color="#CCCCCC"> our the case of the scammer</font><font color="#E5E5E5"> so</font>

589
00:23:43,680 --> 00:23:47,370
what actually<font color="#E5E5E5"> happened</font><font color="#CCCCCC"> there was the</font><font color="#E5E5E5"> S</font>

590
00:23:45,690 --> 00:23:49,560
<font color="#E5E5E5">camera had TeamViewer</font><font color="#CCCCCC"> setup on the</font>

591
00:23:47,370 --> 00:23:51,479
device so TeamViewer allows you to

592
00:23:49,560 --> 00:23:54,270
install<font color="#CCCCCC"> plugins now these plugins are</font>

593
00:23:51,480 --> 00:23:55,590
<font color="#E5E5E5">signed by</font><font color="#CCCCCC"> the systems release keys</font><font color="#E5E5E5"> so</font>

594
00:23:54,270 --> 00:23:58,110
different vendors release plug-ins<font color="#CCCCCC"> for</font>

595
00:23:55,590 --> 00:24:01,290
TeamViewer<font color="#CCCCCC"> plugins for their device they</font>

596
00:23:58,110 --> 00:24:03,570
<font color="#E5E5E5">lets you that gives them system</font>

597
00:24:01,290 --> 00:24:05,490
permissions so<font color="#CCCCCC"> two permissions at this</font>

598
00:24:03,570 --> 00:24:07,500
particular TeamViewer<font color="#CCCCCC"> plug-in</font>

599
00:24:05,490 --> 00:24:09,810
implemented were the inject events

600
00:24:07,500 --> 00:24:12,080
<font color="#E5E5E5">plugin and read frame buffer inject</font>

601
00:24:09,810 --> 00:24:16,110
events allows you to<font color="#E5E5E5"> emulate system</font>

602
00:24:12,080 --> 00:24:18,449
allows you to<font color="#E5E5E5"> emulate user events like</font>

603
00:24:16,110 --> 00:24:20,300
touches and swipes<font color="#E5E5E5"> and the read frame</font>

604
00:24:18,450 --> 00:24:22,460
buffer allows you to capture<font color="#E5E5E5"> the</font>

605
00:24:20,300 --> 00:24:24,139
<font color="#E5E5E5">screen now most banking apps implement</font>

606
00:24:22,460 --> 00:24:25,910
the secure<font color="#E5E5E5"> flight so if you try to</font>

607
00:24:24,140 --> 00:24:29,420
<font color="#CCCCCC">capture the screen</font><font color="#E5E5E5"> by traditional means</font>

608
00:24:25,910 --> 00:24:30,950
is usually<font color="#E5E5E5"> blanked out but if you have</font>

609
00:24:29,420 --> 00:24:33,080
access<font color="#CCCCCC"> to the read frame buffer</font>

610
00:24:30,950 --> 00:24:34,940
permission you can bypass<font color="#E5E5E5"> that secure</font>

611
00:24:33,080 --> 00:24:37,909
<font color="#E5E5E5">flag and then still capture the user</font>

612
00:24:34,940 --> 00:24:39,230
screen<font color="#E5E5E5"> so that's how</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> camera</font>

613
00:24:37,910 --> 00:24:41,750
got<font color="#E5E5E5"> around it so they were able to</font>

614
00:24:39,230 --> 00:24:44,450
<font color="#E5E5E5">record the user spin interact</font><font color="#CCCCCC"> with the</font>

615
00:24:41,750 --> 00:24:45,980
device<font color="#E5E5E5"> so they set up an account</font>

616
00:24:44,450 --> 00:24:49,070
<font color="#E5E5E5">transferred money from this</font><font color="#CCCCCC"> victim's</font>

617
00:24:45,980 --> 00:24:52,430
account<font color="#E5E5E5"> to their</font><font color="#CCCCCC"> London</font><font color="#E5E5E5"> account whatever</font>

618
00:24:49,070 --> 00:24:56,510
<font color="#E5E5E5">and yeah that's how the this whole thing</font>

619
00:24:52,430 --> 00:24:58,670
played out<font color="#CCCCCC"> so case closed the key thing</font>

620
00:24:56,510 --> 00:25:00,440
to remember<font color="#E5E5E5"> here is this isn't a Abunda</font>

621
00:24:58,670 --> 00:25:02,480
bility in TeamViewer<font color="#E5E5E5"> TeamViewer is</font><font color="#CCCCCC"> a</font>

622
00:25:00,440 --> 00:25:04,220
<font color="#E5E5E5">useful tool</font><font color="#CCCCCC"> that lets</font><font color="#E5E5E5"> you do various</font>

623
00:25:02,480 --> 00:25:06,500
<font color="#E5E5E5">other things</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just how people use</font>

624
00:25:04,220 --> 00:25:09,110
this tool so<font color="#CCCCCC"> yeah TeamViewer is not a</font>

625
00:25:06,500 --> 00:25:13,040
hacking tool<font color="#E5E5E5"> so yeah</font><font color="#CCCCCC"> in the</font><font color="#E5E5E5"> internet</font>

626
00:25:09,110 --> 00:25:15,709
please don't<font color="#E5E5E5"> don't spread that okay</font>

627
00:25:13,040 --> 00:25:17,330
finally so I've talked about some of<font color="#E5E5E5"> the</font>

628
00:25:15,710 --> 00:25:19,700
<font color="#CCCCCC">attacks of this line looked at</font><font color="#E5E5E5"> but I</font>

629
00:25:17,330 --> 00:25:21,560
want to<font color="#E5E5E5"> talk to you about a few</font><font color="#CCCCCC"> other</font>

630
00:25:19,700 --> 00:25:23,720
<font color="#E5E5E5">things that</font><font color="#CCCCCC"> people can investigate and</font>

631
00:25:21,560 --> 00:25:25,280
<font color="#CCCCCC">try to find bugs in and say yeah I</font>

632
00:25:23,720 --> 00:25:26,200
employ<font color="#CCCCCC"> you to</font><font color="#E5E5E5"> take up some</font><font color="#CCCCCC"> of this</font>

633
00:25:25,280 --> 00:25:29,420
research

634
00:25:26,200 --> 00:25:31,010
the first one is token generation<font color="#CCCCCC"> so</font>

635
00:25:29,420 --> 00:25:32,900
when you call<font color="#E5E5E5"> the media projection API</font>

636
00:25:31,010 --> 00:25:35,240
and once you've accepted<font color="#E5E5E5"> that prompt it</font>

637
00:25:32,900 --> 00:25:36,830
generates a token and says this token is

638
00:25:35,240 --> 00:25:39,740
for<font color="#E5E5E5"> this particular application</font><font color="#CCCCCC"> and it</font>

639
00:25:36,830 --> 00:25:42,080
can now go on and record the screen so

640
00:25:39,740 --> 00:25:43,850
<font color="#E5E5E5">if we investigate how</font><font color="#CCCCCC"> this token is</font>

641
00:25:42,080 --> 00:25:45,379
generated<font color="#CCCCCC"> look at the various controls</font>

642
00:25:43,850 --> 00:25:47,179
are in place<font color="#CCCCCC"> to</font><font color="#E5E5E5"> prevent someone from</font>

643
00:25:45,380 --> 00:25:49,340
just<font color="#CCCCCC"> auto generating tokens or spoofing</font>

644
00:25:47,180 --> 00:25:52,640
tokens<font color="#E5E5E5"> and you can find bugs in there</font>

645
00:25:49,340 --> 00:25:54,740
then that's that's useful the second one

646
00:25:52,640 --> 00:25:56,690
is<font color="#CCCCCC"> intern apps</font><font color="#E5E5E5"> in all these examples you</font>

647
00:25:54,740 --> 00:25:58,700
<font color="#E5E5E5">need to have an application installed on</font>

648
00:25:56,690 --> 00:26:01,130
the device<font color="#E5E5E5"> and then try to exploit the</font>

649
00:25:58,700 --> 00:26:03,230
device using this app in snap is a

650
00:26:01,130 --> 00:26:04,880
fairly recent feature in<font color="#CCCCCC"> Android</font><font color="#E5E5E5"> that</font>

651
00:26:03,230 --> 00:26:07,580
allows you<font color="#E5E5E5"> to point your browser</font><font color="#CCCCCC"> at a</font>

652
00:26:04,880 --> 00:26:10,250
link and<font color="#CCCCCC"> that link</font><font color="#E5E5E5"> then generates an app</font>

653
00:26:07,580 --> 00:26:11,899
<font color="#E5E5E5">on your</font><font color="#CCCCCC"> device so it reduces</font><font color="#E5E5E5"> the</font>

654
00:26:10,250 --> 00:26:14,810
footprint<font color="#E5E5E5"> where you have to install an</font>

655
00:26:11,900 --> 00:26:15,890
apk to then start<font color="#CCCCCC"> your exploit chain so</font>

656
00:26:14,810 --> 00:26:17,810
if you if you can get<font color="#E5E5E5"> this to work</font>

657
00:26:15,890 --> 00:26:19,850
<font color="#CCCCCC">within synapse or they're even more</font>

658
00:26:17,810 --> 00:26:22,370
relaxed controls and in synapse<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

659
00:26:19,850 --> 00:26:24,800
win I'm not sure what user context

660
00:26:22,370 --> 00:26:27,739
<font color="#CCCCCC">intern apps run under but if it's the</font>

661
00:26:24,800 --> 00:26:29,139
<font color="#E5E5E5">same</font><font color="#CCCCCC"> as untrusted app or the</font><font color="#E5E5E5"> default</font>

662
00:26:27,740 --> 00:26:31,179
installer then

663
00:26:29,140 --> 00:26:34,270
yeah<font color="#E5E5E5"> it's probably a bit</font><font color="#CCCCCC"> of a challenge</font>

664
00:26:31,179 --> 00:26:37,030
they're looking for<font color="#CCCCCC"> SELinux bypasses and</font>

665
00:26:34,270 --> 00:26:39,700
finally<font color="#E5E5E5"> there might be unexplored and</font>

666
00:26:37,030 --> 00:26:41,080
undocumented<font color="#E5E5E5"> 80s that you could use so</font>

667
00:26:39,700 --> 00:26:42,340
the ones<font color="#E5E5E5"> that I've listed in my</font>

668
00:26:41,080 --> 00:26:45,820
presentation of the things that I

669
00:26:42,340 --> 00:26:48,040
researched<font color="#E5E5E5"> read the Android the online</font>

670
00:26:45,820 --> 00:26:49,510
documentation<font color="#E5E5E5"> and looked at</font><font color="#CCCCCC"> some other</font>

671
00:26:48,040 --> 00:26:51,340
people's research in this particular

672
00:26:49,510 --> 00:26:54,280
area<font color="#E5E5E5"> but I'm sure there's</font><font color="#CCCCCC"> lots of things</font>

673
00:26:51,340 --> 00:26:55,629
<font color="#E5E5E5">in the OSP source that aren't</font><font color="#CCCCCC"> really</font>

674
00:26:54,280 --> 00:26:57,700
documented<font color="#CCCCCC"> that people need to spend</font>

675
00:26:55,630 --> 00:26:59,559
<font color="#E5E5E5">time looking</font><font color="#CCCCCC"> at say oh well this</font><font color="#E5E5E5"> looks</font>

676
00:26:57,700 --> 00:27:02,670
interesting can I change these bugs<font color="#E5E5E5"> to</font>

677
00:26:59,559 --> 00:27:02,670
<font color="#E5E5E5">achieve the same objective</font>

678
00:27:02,820 --> 00:27:07,149
so yeah that's more or less it<font color="#E5E5E5"> so I want</font>

679
00:27:05,530 --> 00:27:09,330
to<font color="#E5E5E5"> wrap</font><font color="#CCCCCC"> this up by just recapping what</font>

680
00:27:07,150 --> 00:27:11,740
I've covered in this<font color="#E5E5E5"> presentation the</font>

681
00:27:09,330 --> 00:27:13,570
<font color="#E5E5E5">objective would it be set up we wanted</font>

682
00:27:11,740 --> 00:27:15,490
to<font color="#CCCCCC"> demonstrate whether it was</font><font color="#E5E5E5"> possible</font>

683
00:27:13,570 --> 00:27:17,710
to record<font color="#E5E5E5"> the</font><font color="#CCCCCC"> user</font><font color="#E5E5E5"> screen and then</font>

684
00:27:15,490 --> 00:27:21,370
automate input<font color="#E5E5E5"> maybe chain these bugs</font>

685
00:27:17,710 --> 00:27:23,770
together look at the<font color="#CCCCCC"> various attack</font>

686
00:27:21,370 --> 00:27:26,229
surfaces<font color="#E5E5E5"> for each of these two</font><font color="#CCCCCC"> vectors</font>

687
00:27:23,770 --> 00:27:29,080
evaluate them<font color="#E5E5E5"> look at things</font><font color="#CCCCCC"> that work</font>

688
00:27:26,230 --> 00:27:31,630
that didn't work<font color="#E5E5E5"> try</font><font color="#CCCCCC"> to generate some</font>

689
00:27:29,080 --> 00:27:34,090
<font color="#E5E5E5">pox hopefully they're good bugs and</font>

690
00:27:31,630 --> 00:27:36,460
Google accepts them you get a<font color="#CCCCCC"> CVE at the</font>

691
00:27:34,090 --> 00:27:38,530
end of it<font color="#E5E5E5"> and fine if you do come up</font>

692
00:27:36,460 --> 00:27:40,059
<font color="#E5E5E5">with bugs</font><font color="#CCCCCC"> to come up with cool research</font>

693
00:27:38,530 --> 00:27:42,280
share to the rest<font color="#E5E5E5"> of the community</font><font color="#CCCCCC"> and</font>

694
00:27:40,059 --> 00:27:45,428
please tag me I'd like<font color="#E5E5E5"> to see some of</font>

695
00:27:42,280 --> 00:27:45,940
that<font color="#CCCCCC"> research</font><font color="#E5E5E5"> yeah thank you for</font>

696
00:27:45,429 --> 00:28:07,330
<font color="#CCCCCC">listening</font>

697
00:27:45,940 --> 00:28:10,570
<font color="#E5E5E5">any questions so I can't see but you are</font>

698
00:28:07,330 --> 00:28:13,600
with from this general<font color="#E5E5E5"> direction</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> yeah</font>

699
00:28:10,570 --> 00:28:16,389
in case<font color="#E5E5E5"> you didn't hear sorry so as a</font>

700
00:28:13,600 --> 00:28:17,980
<font color="#CCCCCC">developer I run the secure window so</font>

701
00:28:16,390 --> 00:28:20,410
that<font color="#E5E5E5"> a user account screenshot my</font>

702
00:28:17,980 --> 00:28:21,970
banking app or malware<font color="#CCCCCC"> can't screenshot</font>

703
00:28:20,410 --> 00:28:23,799
my banking app so you're saying it's

704
00:28:21,970 --> 00:28:28,179
just<font color="#E5E5E5"> team viewers add-on that breaks</font>

705
00:28:23,799 --> 00:28:30,100
that yes<font color="#E5E5E5"> No so the thing is the</font>

706
00:28:28,179 --> 00:28:32,380
<font color="#CCCCCC">TeamViewer</font><font color="#E5E5E5"> plugins are signed</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font>

707
00:28:30,100 --> 00:28:34,418
vendors so since the vendors built<font color="#E5E5E5"> a</font><font color="#CCCCCC"> ROM</font>

708
00:28:32,380 --> 00:28:36,130
<font color="#E5E5E5">they have</font><font color="#CCCCCC"> to access the</font><font color="#E5E5E5"> signing</font><font color="#CCCCCC"> keys</font>

709
00:28:34,419 --> 00:28:37,450
they<font color="#E5E5E5"> signed these TeamViewer plugins as</font>

710
00:28:36,130 --> 00:28:38,890
well<font color="#E5E5E5"> and the TeamViewer</font>

711
00:28:37,450 --> 00:28:40,570
the app defines these permissions

712
00:28:38,890 --> 00:28:43,270
<font color="#CCCCCC">assistant</font><font color="#E5E5E5"> permissions that would you</font>

713
00:28:40,570 --> 00:28:44,679
<font color="#E5E5E5">on a device or a system app and so in</font>

714
00:28:43,270 --> 00:28:46,690
effect this team<font color="#CCCCCC"> Bo plug-in is now</font>

715
00:28:44,680 --> 00:28:48,640
system app and it can bypass most of

716
00:28:46,690 --> 00:28:49,870
those controls<font color="#CCCCCC"> so yeah to answer</font><font color="#E5E5E5"> your</font>

717
00:28:48,640 --> 00:28:51,790
question it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> properly in Android</font>

718
00:28:49,870 --> 00:29:00,969
it's just the way these<font color="#CCCCCC"> guys have built</font>

719
00:28:51,790 --> 00:29:02,500
that it's just the way they have

720
00:29:00,970 --> 00:29:44,070
<font color="#CCCCCC">designed the solution they wanted</font><font color="#E5E5E5"> to be</font>

721
00:29:02,500 --> 00:29:46,660
as accessible and useful as<font color="#CCCCCC"> possible so</font>

722
00:29:44,070 --> 00:29:49,090
since that particular incident<font color="#CCCCCC"> I'm not</font>

723
00:29:46,660 --> 00:29:50,620
sure if they've discussed this with

724
00:29:49,090 --> 00:29:52,330
TeamViewer and try to add some sort<font color="#CCCCCC"> of</font>

725
00:29:50,620 --> 00:29:55,270
mitigation<font color="#E5E5E5"> in place to prevent people</font>

726
00:29:52,330 --> 00:29:58,389
from<font color="#E5E5E5"> abusing that I'm not sure if</font>

727
00:29:55,270 --> 00:29:59,770
Android in<font color="#E5E5E5"> itself prevents access to</font>

728
00:29:58,390 --> 00:30:01,090
read frame buffer<font color="#E5E5E5"> so that's the</font>

729
00:29:59,770 --> 00:30:03,660
<font color="#E5E5E5">particular permission you require to get</font>

730
00:30:01,090 --> 00:30:05,949
around the screen<font color="#CCCCCC"> capture protection</font>

731
00:30:03,660 --> 00:30:06,990
yeah<font color="#E5E5E5"> but</font><font color="#CCCCCC"> still</font><font color="#E5E5E5"> something worth</font>

732
00:30:05,950 --> 00:30:10,810
investigating

733
00:30:06,990 --> 00:30:15,000
so I think we've<font color="#CCCCCC"> tested</font><font color="#E5E5E5"> through an</font>

734
00:30:10,810 --> 00:30:15,000
external pen testing party and<font color="#CCCCCC"> ourselves</font>

735
00:30:20,940 --> 00:30:30,580
Thank<font color="#E5E5E5"> You Sharon jeez okay I have to</font>

736
00:30:26,890 --> 00:30:32,560
<font color="#CCCCCC">question if I may first</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> I heard</font>

737
00:30:30,580 --> 00:30:36,429
another talk there's green<font color="#CCCCCC"> overlay thing</font>

738
00:30:32,560 --> 00:30:38,350
was<font color="#E5E5E5"> fixed in also an</font><font color="#CCCCCC"> Android</font><font color="#E5E5E5"> 7 but I'm</font>

739
00:30:36,430 --> 00:30:39,910
done<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know whether</font><font color="#CCCCCC"> that you were</font>

740
00:30:38,350 --> 00:30:42,750
<font color="#E5E5E5">talking about the same issue are there</font>

741
00:30:39,910 --> 00:30:46,170
two<font color="#CCCCCC"> different</font><font color="#E5E5E5"> issues maybe</font>

742
00:30:42,750 --> 00:30:48,750
so<font color="#CCCCCC"> their</font><font color="#E5E5E5"> different ways of achieving</font>

743
00:30:46,170 --> 00:30:50,400
<font color="#CCCCCC">overlays so in the older versions of</font>

744
00:30:48,750 --> 00:30:52,500
<font color="#E5E5E5">Android they would use toast messages</font>

745
00:30:50,400 --> 00:30:54,270
<font color="#E5E5E5">and the more recent one of the</font><font color="#CCCCCC"> more</font>

746
00:30:52,500 --> 00:30:56,820
<font color="#E5E5E5">modern way</font><font color="#CCCCCC"> of doing overlay attacks is</font>

747
00:30:54,270 --> 00:30:59,520
to<font color="#CCCCCC"> use a system alert window</font><font color="#E5E5E5"> so this one</font>

748
00:30:56,820 --> 00:31:01,139
was fixed<font color="#E5E5E5"> in Android 8</font><font color="#CCCCCC"> weather if you</font>

749
00:30:59,520 --> 00:31:03,600
attended the developer conference they

750
00:31:01,140 --> 00:31:05,430
specifically said apps that define this

751
00:31:03,600 --> 00:31:09,780
permission<font color="#E5E5E5"> aren't going to be</font><font color="#CCCCCC"> able to</font>

752
00:31:05,430 --> 00:31:12,240
draw over<font color="#E5E5E5"> system components so this was</font>

753
00:31:09,780 --> 00:31:13,950
<font color="#E5E5E5">in Android a so I'm not sure</font><font color="#CCCCCC"> if when you</font>

754
00:31:12,240 --> 00:31:15,810
say Android 17<font color="#E5E5E5"> referring to toast</font>

755
00:31:13,950 --> 00:31:17,640
messages or some other<font color="#CCCCCC"> format</font><font color="#E5E5E5"> was it</font>

756
00:31:15,810 --> 00:31:22,830
<font color="#CCCCCC">that</font><font color="#E5E5E5"> was another name but something was</font>

757
00:31:17,640 --> 00:31:25,560
s my memory is<font color="#E5E5E5"> very weak probably</font>

758
00:31:22,830 --> 00:31:26,850
<font color="#E5E5E5">another technique</font><font color="#CCCCCC"> oh yeah see if you</font>

759
00:31:25,560 --> 00:31:28,560
have the details in<font color="#CCCCCC"> it</font><font color="#E5E5E5"> I'm happy to</font>

760
00:31:26,850 --> 00:31:30,149
<font color="#E5E5E5">discuss this with</font><font color="#CCCCCC"> you so yeah come find</font>

761
00:31:28,560 --> 00:31:31,409
me after the talk and<font color="#E5E5E5"> I love to chat</font>

762
00:31:30,150 --> 00:31:34,470
<font color="#CCCCCC">with you about</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> okay</font>

763
00:31:31,410 --> 00:31:37,350
the<font color="#E5E5E5"> other thing is the I'm not sure what</font>

764
00:31:34,470 --> 00:31:40,980
<font color="#CCCCCC">this overlay saying</font><font color="#E5E5E5"> isn't that</font><font color="#CCCCCC"> possible</font>

765
00:31:37,350 --> 00:31:43,770
to switch it off<font color="#E5E5E5"> as a setting so that is</font>

766
00:31:40,980 --> 00:31:46,410
a good question<font color="#CCCCCC"> so when an app defines</font>

767
00:31:43,770 --> 00:31:47,879
this particular permission by default it

768
00:31:46,410 --> 00:31:50,490
is granted<font color="#E5E5E5"> the permission to draw</font><font color="#CCCCCC"> over</font>

769
00:31:47,880 --> 00:31:52,110
other apps<font color="#E5E5E5"> so if you want to prevent</font>

770
00:31:50,490 --> 00:31:54,150
that<font color="#CCCCCC"> kind of overlay attacks you need to</font>

771
00:31:52,110 --> 00:31:56,790
go in to the<font color="#CCCCCC"> settings Android settings</font>

772
00:31:54,150 --> 00:31:59,460
<font color="#E5E5E5">and explicitly disable that so prevent</font>

773
00:31:56,790 --> 00:32:02,399
<font color="#E5E5E5">this app from drawing over other apps so</font>

774
00:31:59,460 --> 00:32:03,810
<font color="#E5E5E5">I think</font><font color="#CCCCCC"> as a there's a bit of discussion</font>

775
00:32:02,400 --> 00:32:07,020
<font color="#E5E5E5">to be had</font><font color="#CCCCCC"> there about this</font><font color="#E5E5E5"> particular</font>

776
00:32:03,810 --> 00:32:09,360
<font color="#E5E5E5">design inherently you should prevent</font>

777
00:32:07,020 --> 00:32:10,740
<font color="#E5E5E5">apps from drawing over other apps but</font>

778
00:32:09,360 --> 00:32:13,320
the way the Android ecosystem has

779
00:32:10,740 --> 00:32:15,180
evolved they want<font color="#E5E5E5"> to they want to ensure</font>

780
00:32:13,320 --> 00:32:16,770
<font color="#CCCCCC">there's backward compatibility</font><font color="#E5E5E5"> so</font>

781
00:32:15,180 --> 00:32:18,060
developers who<font color="#CCCCCC"> have built apps for older</font>

782
00:32:16,770 --> 00:32:19,650
versions<font color="#CCCCCC"> of Android shouldn't be</font>

783
00:32:18,060 --> 00:32:23,129
penalized<font color="#E5E5E5"> because you've now made a</font>

784
00:32:19,650 --> 00:32:24,870
design change<font color="#E5E5E5"> but if in lots of my work</font>

785
00:32:23,130 --> 00:32:27,510
reversing Android malware<font color="#E5E5E5"> has been</font>

786
00:32:24,870 --> 00:32:29,280
<font color="#E5E5E5">around these kind of overlay attacks so</font>

787
00:32:27,510 --> 00:32:31,290
I think maybe<font color="#E5E5E5"> there is an argument to be</font>

788
00:32:29,280 --> 00:32:33,660
made that<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> this is a bit of a dodgy</font>

789
00:32:31,290 --> 00:32:35,700
permission<font color="#E5E5E5"> and by default we should</font>

790
00:32:33,660 --> 00:32:39,180
disable<font color="#CCCCCC"> that okay</font><font color="#E5E5E5"> what what could be the</font>

791
00:32:35,700 --> 00:32:41,340
<font color="#CCCCCC">use case for for</font><font color="#E5E5E5"> an overlay so lots of</font>

792
00:32:39,180 --> 00:32:43,140
apps like<font color="#E5E5E5"> Facebook messenger uses</font>

793
00:32:41,340 --> 00:32:44,580
overlays<font color="#CCCCCC"> so you know when you use a</font>

794
00:32:43,140 --> 00:32:46,980
facebook<font color="#CCCCCC"> messenger you have</font><font color="#E5E5E5"> the little</font>

795
00:32:44,580 --> 00:32:49,260
<font color="#E5E5E5">bubble that's over every</font><font color="#CCCCCC"> other system</font>

796
00:32:46,980 --> 00:32:56,039
activity<font color="#E5E5E5"> so yes that's one of</font><font color="#CCCCCC"> the use</font>

797
00:32:49,260 --> 00:32:59,279
cases<font color="#E5E5E5"> of overlay hi just with</font>

798
00:32:56,039 --> 00:33:01,350
the system overlay permission by default

799
00:32:59,279 --> 00:33:03,210
in Android<font color="#CCCCCC"> seven it's been disabled okay</font>

800
00:33:01,350 --> 00:33:06,658
and you<font color="#E5E5E5"> have to specifically enable it</font>

801
00:33:03,210 --> 00:33:11,100
<font color="#CCCCCC">on</font><font color="#E5E5E5"> a per hour basis so it's a case of</font>

802
00:33:06,659 --> 00:33:13,970
from<font color="#CCCCCC"> seven onwards certainly</font><font color="#E5E5E5"> on Huawei</font>

803
00:33:11,100 --> 00:33:18,090
devices HTC devices and<font color="#E5E5E5"> Samsung devices</font>

804
00:33:13,970 --> 00:33:19,950
<font color="#E5E5E5">so if that's so the only</font><font color="#CCCCCC"> be draw</font><font color="#E5E5E5"> over of</font>

805
00:33:18,090 --> 00:33:21,779
<font color="#CCCCCC">apps permission is disabled by default</font>

806
00:33:19,950 --> 00:33:24,690
when you have to specifically enable it

807
00:33:21,779 --> 00:33:27,179
per hour<font color="#E5E5E5"> okay and actually now you get</font>

808
00:33:24,690 --> 00:33:29,099
<font color="#CCCCCC">PS didn't notification saying</font><font color="#E5E5E5"> that an</font>

809
00:33:27,179 --> 00:33:31,229
app has<font color="#E5E5E5"> the permission to</font><font color="#CCCCCC"> draw over</font>

810
00:33:29,099 --> 00:33:32,668
other applications<font color="#E5E5E5"> certainly Android</font>

811
00:33:31,229 --> 00:33:35,929
<font color="#CCCCCC">eight it's</font><font color="#E5E5E5"> just a case that there has</font>

812
00:33:32,669 --> 00:33:39,440
<font color="#CCCCCC">been quite a lot</font><font color="#E5E5E5"> of work seemingly on</font>

813
00:33:35,929 --> 00:33:41,789
reducing the possibility<font color="#CCCCCC"> for overlays</font>

814
00:33:39,440 --> 00:33:43,200
overlay attacks by the fact that you get

815
00:33:41,789 --> 00:33:45,330
persistent notifications and

816
00:33:43,200 --> 00:33:45,929
specifically have<font color="#CCCCCC"> to separately go</font><font color="#E5E5E5"> out</font>

817
00:33:45,330 --> 00:33:49,168
<font color="#E5E5E5">to permission</font>

818
00:33:45,929 --> 00:33:51,149
they can't be requested at<font color="#CCCCCC"> install</font><font color="#E5E5E5"> okay</font>

819
00:33:49,169 --> 00:33:54,929
<font color="#E5E5E5">so that's</font><font color="#CCCCCC"> interesting because the demos</font>

820
00:33:51,149 --> 00:33:56,758
<font color="#CCCCCC">that I just showed you on so these were</font>

821
00:33:54,929 --> 00:33:59,759
on pixel devices running Android seven

822
00:33:56,759 --> 00:34:02,159
one two<font color="#CCCCCC"> and it didn't prompt me to</font>

823
00:33:59,759 --> 00:34:04,799
enable the overlay permission all these

824
00:34:02,159 --> 00:34:06,690
apps define that<font color="#E5E5E5"> and at no point was</font><font color="#CCCCCC"> I</font>

825
00:34:04,799 --> 00:34:08,969
prompted to enable this particular

826
00:34:06,690 --> 00:34:11,639
feature<font color="#E5E5E5"> so I'm not sure maybe this is a</font>

827
00:34:08,969 --> 00:34:14,819
specific<font color="#CCCCCC"> thing to some</font><font color="#E5E5E5"> vendors so I</font>

828
00:34:11,639 --> 00:34:15,990
believe Samsung they have a protection

829
00:34:14,819 --> 00:34:18,029
<font color="#CCCCCC">in place</font><font color="#E5E5E5"> that prevents you from drawing</font>

830
00:34:15,989 --> 00:34:19,618
overlays<font color="#CCCCCC"> so don't if is</font><font color="#E5E5E5"> something that</font>

831
00:34:18,030 --> 00:34:22,559
<font color="#E5E5E5">vendors have taken the initiative</font><font color="#CCCCCC"> to</font>

832
00:34:19,619 --> 00:34:25,559
build this kind<font color="#E5E5E5"> of protection by default</font>

833
00:34:22,559 --> 00:34:28,169
in<font color="#CCCCCC"> their owns we are to be</font><font color="#E5E5E5"> hardly</font>

834
00:34:25,559 --> 00:34:31,940
interested<font color="#E5E5E5"> to chat with you more on what</font>

835
00:34:28,168 --> 00:34:31,940
the specifics of that<font color="#E5E5E5"> particular version</font>

836
00:34:35,179 --> 00:34:40,879
<font color="#E5E5E5">any more questions this is my favorite</font>

837
00:34:37,710 --> 00:34:40,879
bit answering<font color="#E5E5E5"> questions</font>

838
00:34:46,329 --> 00:34:49,509
thanks guys

