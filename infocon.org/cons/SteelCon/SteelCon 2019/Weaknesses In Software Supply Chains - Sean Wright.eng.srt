1
00:00:03,980 --> 00:00:08,570
thanks everyone for coming

2
00:00:06,359 --> 00:00:12,299
so my talk is going to focus around

3
00:00:08,570 --> 00:00:14,279
software supply chains it's the topic

4
00:00:12,299 --> 00:00:15,809
that I don't see you discussed often in

5
00:00:14,279 --> 00:00:17,190
the industry and it's something that I

6
00:00:15,809 --> 00:00:20,640
think we really need to start paying

7
00:00:17,190 --> 00:00:21,390
attention to so I just quick bit about

8
00:00:20,640 --> 00:00:29,759
myself

9
00:00:21,390 --> 00:00:32,579
co-leader of Scotland I have a job and I

10
00:00:29,760 --> 00:00:34,260
do security stuff so I'm not going to go

11
00:00:32,579 --> 00:00:35,910
too much detail but I'm active on

12
00:00:34,260 --> 00:00:38,160
Twitter and that's and if you ever need

13
00:00:35,910 --> 00:00:40,078
help in that feel or I'll always feel

14
00:00:38,160 --> 00:00:44,879
free to reach out to me Wendy Eames

15
00:00:40,079 --> 00:00:48,540
often on Twitter all right so don't be

16
00:00:44,880 --> 00:00:50,610
or don't expect any 0 days anything like

17
00:00:48,540 --> 00:00:54,480
this most of what I'm going to talk

18
00:00:50,610 --> 00:00:56,250
about is existing stuff 9 today it's

19
00:00:54,480 --> 00:01:01,559
nothing new it's just something that I

20
00:00:56,250 --> 00:01:03,420
don't see being discussed often so I'm

21
00:01:01,559 --> 00:01:05,399
gonna go back well kind of start off

22
00:01:03,420 --> 00:01:08,729
with how development happens because

23
00:01:05,399 --> 00:01:11,490
this is software that falls into

24
00:01:08,729 --> 00:01:13,740
development so if we go back and see how

25
00:01:11,490 --> 00:01:15,899
it companies used to develop you see

26
00:01:13,740 --> 00:01:19,619
both things from the ground up start

27
00:01:15,899 --> 00:01:21,840
from scratch and the other thing is big

28
00:01:19,619 --> 00:01:23,999
monolithic releases so your core newly

29
00:01:21,840 --> 00:01:27,299
released enough now that's important

30
00:01:23,999 --> 00:01:29,759
because we had big quarterly releases it

31
00:01:27,299 --> 00:01:32,569
was a lot easier to do security reviews

32
00:01:29,759 --> 00:01:35,399
hey we're doing this release in August

33
00:01:32,569 --> 00:01:36,689
yes it's going to take a lot of time to

34
00:01:35,399 --> 00:01:38,819
review but you know what's going to

35
00:01:36,689 --> 00:01:41,219
happen you can have appropriate

36
00:01:38,819 --> 00:01:45,509
resources allocated for that specific

37
00:01:41,219 --> 00:01:46,499
time great to today suffers developments

38
00:01:45,509 --> 00:01:50,429
completely changed

39
00:01:46,499 --> 00:01:54,408
we now have Lawry's that we essentially

40
00:01:50,429 --> 00:01:58,139
glue together to provide a service or

41
00:01:54,409 --> 00:01:59,219
develop an application and things are

42
00:01:58,139 --> 00:02:01,229
growing rapidly

43
00:01:59,219 --> 00:02:03,809
there's no longer these monolithic

44
00:02:01,229 --> 00:02:05,999
releases sometimes it's a bit of a chaos

45
00:02:03,810 --> 00:02:09,660
like that busting the limit all the way

46
00:02:05,999 --> 00:02:13,350
that the point here is it's continuous

47
00:02:09,660 --> 00:02:15,930
release upon release so you can no

48
00:02:13,350 --> 00:02:18,358
longer hey we're going to allocate a

49
00:02:15,930 --> 00:02:20,700
security resourceful this amount of time

50
00:02:18,359 --> 00:02:22,709
it's going to be something that's going

51
00:02:20,700 --> 00:02:24,179
to happen on a continual basis and this

52
00:02:22,709 --> 00:02:26,430
kind of falls into this business is

53
00:02:24,180 --> 00:02:28,379
anomaly even faster trying to keep ahead

54
00:02:26,430 --> 00:02:30,719
of the competition so I have to move

55
00:02:28,379 --> 00:02:32,700
faster so you got things like continuous

56
00:02:30,719 --> 00:02:34,939
integration continuous delivery so

57
00:02:32,700 --> 00:02:38,010
deployments now at a click of a button

58
00:02:34,939 --> 00:02:40,530
the way that works is have automated

59
00:02:38,010 --> 00:02:42,379
tests parse automated tests release into

60
00:02:40,530 --> 00:02:45,299
production

61
00:02:42,379 --> 00:02:48,120
what's so important this is not going to

62
00:02:45,299 --> 00:02:51,269
scale so you can't use manual security

63
00:02:48,120 --> 00:02:53,579
reviews and testing and you need to bulb

64
00:02:51,269 --> 00:02:56,180
it in so I'm sure most people have heard

65
00:02:53,579 --> 00:03:00,650
about shift left this is kind of why

66
00:02:56,180 --> 00:03:06,810
there's a specific needs shift left and

67
00:03:00,650 --> 00:03:09,870
never mentioned holding up systems now

68
00:03:06,810 --> 00:03:13,919
from nabis unless this year is from

69
00:03:09,870 --> 00:03:16,889
sonnet are the 2019 state of software

70
00:03:13,919 --> 00:03:19,469
supply chain if you haven't read it I

71
00:03:16,889 --> 00:03:21,690
recommend you read it there you can

72
00:03:19,469 --> 00:03:24,299
download a copy and there's some

73
00:03:21,690 --> 00:03:28,019
interesting facts in yeah so almost 8

74
00:03:24,299 --> 00:03:31,739
million source code open source releases

75
00:03:28,019 --> 00:03:35,040
a year three hundred and thirteen

76
00:03:31,739 --> 00:03:39,569
thousand downloads for enterprises of

77
00:03:35,040 --> 00:03:42,179
open source and then a hundred forty six

78
00:03:39,569 --> 00:03:44,970
billion requests to download from a

79
00:03:42,180 --> 00:03:50,220
central repository so those numbers are

80
00:03:44,970 --> 00:03:52,349
quite surprising for and perhaps most

81
00:03:50,220 --> 00:03:55,889
alarming is the bottom one 71 percent

82
00:03:52,349 --> 00:03:59,129
increase Union of breaches due to open

83
00:03:55,889 --> 00:04:01,829
source now this nut saying open source

84
00:03:59,129 --> 00:04:05,179
is bad it's just a problem that we need

85
00:04:01,829 --> 00:04:07,470
to look at and hopefully address and

86
00:04:05,180 --> 00:04:10,439
then also when we look at the supply

87
00:04:07,470 --> 00:04:14,189
chain I kind of break it into the three

88
00:04:10,439 --> 00:04:16,409
kind of silos so you have a service so

89
00:04:14,189 --> 00:04:18,870
this would be something that you

90
00:04:16,409 --> 00:04:21,089
integrate in your system a good a good

91
00:04:18,870 --> 00:04:23,610
examples are web-based applications

92
00:04:21,089 --> 00:04:26,669
where you go off and have I don't know

93
00:04:23,610 --> 00:04:28,290
like a chat service you don't develop

94
00:04:26,669 --> 00:04:29,969
the software it's

95
00:04:28,290 --> 00:04:32,460
the perhaps a JavaScript that you

96
00:04:29,970 --> 00:04:36,350
include in your site and then that

97
00:04:32,460 --> 00:04:39,870
integrates it in your system you ever

98
00:04:36,350 --> 00:04:41,820
libraries so this will be libraries that

99
00:04:39,870 --> 00:04:44,850
you download from the central repository

100
00:04:41,820 --> 00:04:48,060
is or gets from elsewhere maybe their

101
00:04:44,850 --> 00:04:50,790
commercial lobbies but the point is you

102
00:04:48,060 --> 00:04:54,210
build your software up with different

103
00:04:50,790 --> 00:04:55,770
libraries and then lastly containers now

104
00:04:54,210 --> 00:04:57,289
container is becoming a big thing so

105
00:04:55,770 --> 00:05:00,330
things like docker

106
00:04:57,290 --> 00:05:02,820
so the gone are the days of hey here's

107
00:05:00,330 --> 00:05:05,250
my software deploy it and install it now

108
00:05:02,820 --> 00:05:07,380
you deploy like entire infrastructure

109
00:05:05,250 --> 00:05:09,930
around your software at the click of a

110
00:05:07,380 --> 00:05:13,370
button for those who are unfamiliar

111
00:05:09,930 --> 00:05:19,890
docker is a container based technology

112
00:05:13,370 --> 00:05:22,700
and and often at times people think of

113
00:05:19,890 --> 00:05:26,159
it as a VM but it's not quite a VM

114
00:05:22,700 --> 00:05:28,170
suggest you try and look online and you

115
00:05:26,160 --> 00:05:31,230
might find a better explanation then I

116
00:05:28,170 --> 00:05:37,070
can give but it's it's it's the way the

117
00:05:31,230 --> 00:05:41,060
industry is going so if we look at the

118
00:05:37,070 --> 00:05:43,890
kind of attack vectors that are foresee

119
00:05:41,060 --> 00:05:45,860
in software support chains I kind of

120
00:05:43,890 --> 00:05:47,550
break it down into two parts one is

121
00:05:45,860 --> 00:05:50,730
vulnerabilities so this is where

122
00:05:47,550 --> 00:05:53,670
someone's essentially made a design flaw

123
00:05:50,730 --> 00:05:56,100
or implementation form it's a bug really

124
00:05:53,670 --> 00:05:59,190
but it has security implications and

125
00:05:56,100 --> 00:06:01,470
then the other is malicious so the the

126
00:05:59,190 --> 00:06:03,960
thread actor here will maliciously or

127
00:06:01,470 --> 00:06:06,330
purposely introduce some sort of fall

128
00:06:03,960 --> 00:06:09,030
and then exploit that so we'll cover

129
00:06:06,330 --> 00:06:13,740
these a later stage I've done that few

130
00:06:09,030 --> 00:06:18,030
slides they're gain taking this very

131
00:06:13,740 --> 00:06:21,020
step back so the way organizations used

132
00:06:18,030 --> 00:06:23,130
to pick protect themselves have a really

133
00:06:21,020 --> 00:06:26,700
strengthened perimeter

134
00:06:23,130 --> 00:06:28,770
a lot of detection prevention on the

135
00:06:26,700 --> 00:06:33,960
outside and then once you in the inside

136
00:06:28,770 --> 00:06:36,539
it's a bit more easier to move about and

137
00:06:33,960 --> 00:06:40,469
if you look at the way attackers usage

138
00:06:36,540 --> 00:06:42,120
will map apps fall to this day exploit

139
00:06:40,470 --> 00:06:45,540
that that's bad luck

140
00:06:42,120 --> 00:06:49,860
Kinki Nirvana a weakness so typically a

141
00:06:45,540 --> 00:06:53,550
boner ability or CV and then now I

142
00:06:49,860 --> 00:06:56,310
exploit that CV get a show and then use

143
00:06:53,550 --> 00:06:58,560
that show as a pivot point so the inside

144
00:06:56,310 --> 00:07:03,030
the network and then I can move about in

145
00:06:58,560 --> 00:07:05,270
the internal corporate network a pod

146
00:07:03,030 --> 00:07:09,869
reverse fell there as well because

147
00:07:05,270 --> 00:07:12,620
typically you want a box going up versus

148
00:07:09,870 --> 00:07:16,470
a connection coming in because that can

149
00:07:12,620 --> 00:07:19,260
flag up on monitoring devices a lot more

150
00:07:16,470 --> 00:07:21,450
than a reversal many organizations

151
00:07:19,260 --> 00:07:25,380
anymore that's for for things coming in

152
00:07:21,450 --> 00:07:27,930
not what's going on but the point of

153
00:07:25,380 --> 00:07:29,940
this is it's very targeted you have to

154
00:07:27,930 --> 00:07:32,640
find the organization you have to find

155
00:07:29,940 --> 00:07:37,080
the correct CBE and then you have to

156
00:07:32,640 --> 00:07:39,240
exploit it so this got me thinking at

157
00:07:37,080 --> 00:07:41,250
the end of the day organized crime is

158
00:07:39,240 --> 00:07:42,020
like a business they in there to make

159
00:07:41,250 --> 00:07:46,610
money

160
00:07:42,020 --> 00:07:49,620
they have profits that have costs and

161
00:07:46,610 --> 00:07:52,580
why spend a whole bunch of effort trying

162
00:07:49,620 --> 00:07:56,040
to break in for a single organization

163
00:07:52,580 --> 00:07:59,039
taking a lot of time and effort when you

164
00:07:56,040 --> 00:08:01,020
can insert yourself in so as anyone

165
00:07:59,040 --> 00:08:04,260
aware of Prison Break scene Prison Break

166
00:08:01,020 --> 00:08:06,479
the series yes for the for those who

167
00:08:04,260 --> 00:08:09,330
haven't um Prison Break was in a series

168
00:08:06,480 --> 00:08:13,530
where there are two brothers the one

169
00:08:09,330 --> 00:08:15,150
brother got in prison and the other

170
00:08:13,530 --> 00:08:15,659
brother has the plan to break them out

171
00:08:15,150 --> 00:08:18,810
of prison

172
00:08:15,660 --> 00:08:21,090
now ordinarily you think smash a hole in

173
00:08:18,810 --> 00:08:23,070
the wall whatever and break him out kind

174
00:08:21,090 --> 00:08:25,349
of like the attack is finding that if

175
00:08:23,070 --> 00:08:28,050
you can arm know what he did is he

176
00:08:25,350 --> 00:08:30,540
purposely got himself jailed in the same

177
00:08:28,050 --> 00:08:33,390
prison and then work with what resources

178
00:08:30,540 --> 00:08:36,780
are in the prison so employees in that

179
00:08:33,390 --> 00:08:41,189
to help hatch a plan to escape and I

180
00:08:36,780 --> 00:08:44,189
said escape so that's kind of why I

181
00:08:41,190 --> 00:08:45,540
think software supply chain is very

182
00:08:44,190 --> 00:08:49,170
important thing because if you think

183
00:08:45,540 --> 00:08:51,480
about it we include a lot of code and

184
00:08:49,170 --> 00:08:53,370
you're seeing that aside the sheer

185
00:08:51,480 --> 00:08:55,010
volume it's easy again it's going to be

186
00:08:53,370 --> 00:08:57,350
easy to hide yourself in it

187
00:08:55,010 --> 00:09:01,300
that's kind of the way our to attack an

188
00:08:57,350 --> 00:09:01,300
organization please don't do this

189
00:09:01,340 --> 00:09:05,750
so the very first thing is time-based

190
00:09:03,260 --> 00:09:09,170
event basis so one of the things that

191
00:09:05,750 --> 00:09:11,060
security reviews are done once the

192
00:09:09,170 --> 00:09:12,140
national phase haven't include this

193
00:09:11,060 --> 00:09:15,349
Lobby or the software

194
00:09:12,140 --> 00:09:17,480
great were Rovio's not open up any ports

195
00:09:15,350 --> 00:09:22,100
I'm not doing any suspicious behavior

196
00:09:17,480 --> 00:09:26,360
great tech and hackers are actually

197
00:09:22,100 --> 00:09:29,540
leveraging us to some point they detect

198
00:09:26,360 --> 00:09:31,160
when a system is in a development

199
00:09:29,540 --> 00:09:33,410
environment or production environment

200
00:09:31,160 --> 00:09:35,420
because most often you're reviewing in

201
00:09:33,410 --> 00:09:37,550
your development your QA environments

202
00:09:35,420 --> 00:09:40,579
not your production environment so when

203
00:09:37,550 --> 00:09:43,490
it goes on Sony exploits the payloads or

204
00:09:40,580 --> 00:09:48,290
the vulnerability or whatever opens

205
00:09:43,490 --> 00:09:52,040
itself up the other thing is try make it

206
00:09:48,290 --> 00:09:53,839
as random as possible so one of the most

207
00:09:52,040 --> 00:09:56,860
frustrating things when trying to

208
00:09:53,840 --> 00:09:59,690
troubleshoot or investigate an issue is

209
00:09:56,860 --> 00:10:01,820
it presents herself than a dozen then it

210
00:09:59,690 --> 00:10:03,620
presents itself the the randomness makes

211
00:10:01,820 --> 00:10:06,380
it incredibly difficult to figure out

212
00:10:03,620 --> 00:10:08,410
what's going on what's happening so

213
00:10:06,380 --> 00:10:12,800
you're going to consume a lot of the

214
00:10:08,410 --> 00:10:14,150
security folks time in trying nail down

215
00:10:12,800 --> 00:10:16,839
what's actually happening and hopefully

216
00:10:14,150 --> 00:10:20,090
by then you've got all your data arts

217
00:10:16,840 --> 00:10:23,150
the other thing is try small footprints

218
00:10:20,090 --> 00:10:26,540
as possible so do you think like RP

219
00:10:23,150 --> 00:10:28,520
based versus DNS it's one less Network

220
00:10:26,540 --> 00:10:33,589
request that needs to go out for DNS

221
00:10:28,520 --> 00:10:35,870
lookup and I call good things encrypt so

222
00:10:33,590 --> 00:10:37,670
encryption is as something attackers are

223
00:10:35,870 --> 00:10:41,000
actually easy more MORE

224
00:10:37,670 --> 00:10:45,140
and this helps hard it from things like

225
00:10:41,000 --> 00:10:46,940
ideas I am a pious because at the end of

226
00:10:45,140 --> 00:10:51,920
the day that I can inspect the the road

227
00:10:46,940 --> 00:10:54,370
traffic and this the intercepting and as

228
00:10:51,920 --> 00:10:57,670
I said reverse payloads so again

229
00:10:54,370 --> 00:11:03,380
connection going art versus coming in

230
00:10:57,670 --> 00:11:06,079
less detection so that's what very well

231
00:11:03,380 --> 00:11:08,890
but if we how would we get the software

232
00:11:06,080 --> 00:11:13,460
end so anyone familiar with maven yeah

233
00:11:08,890 --> 00:11:14,900
if your hands maven is the package kind

234
00:11:13,460 --> 00:11:18,560
of the most popular package management

235
00:11:14,900 --> 00:11:19,130
for Java and it uses what's called a pom

236
00:11:18,560 --> 00:11:22,239
file

237
00:11:19,130 --> 00:11:27,080
don't ask me what that Khanum stands for

238
00:11:22,240 --> 00:11:29,690
but the basic premises say XML file it

239
00:11:27,080 --> 00:11:33,080
defines the bulb for that particular

240
00:11:29,690 --> 00:11:35,240
application but most importantly it has

241
00:11:33,080 --> 00:11:38,660
the dependencies that that application

242
00:11:35,240 --> 00:11:40,730
will have including way to include those

243
00:11:38,660 --> 00:11:44,030
dependencies so if you have a look at

244
00:11:40,730 --> 00:11:47,110
the top of the compiled so it's going to

245
00:11:44,030 --> 00:11:50,030
include the dependencies in the eventual

246
00:11:47,110 --> 00:11:51,140
package that it is released so that's

247
00:11:50,030 --> 00:11:55,490
kind of where you want to inject

248
00:11:51,140 --> 00:11:57,680
yourself and then the other thing to

249
00:11:55,490 --> 00:12:00,380
consider is how do you validate that

250
00:11:57,680 --> 00:12:02,589
those dependencies are legitimate that

251
00:12:00,380 --> 00:12:06,110
they haven't been tampered with

252
00:12:02,590 --> 00:12:08,720
well one of the things maven dieters

253
00:12:06,110 --> 00:12:10,490
obviously denied the dependencies but it

254
00:12:08,720 --> 00:12:13,750
store that in a local repository so if

255
00:12:10,490 --> 00:12:16,310
you go look at your local repository

256
00:12:13,750 --> 00:12:19,940
there's no way for you to validate hey

257
00:12:16,310 --> 00:12:23,869
this jar which is the finally archive of

258
00:12:19,940 --> 00:12:27,440
the dependency is the legitimate one how

259
00:12:23,870 --> 00:12:29,000
do I know the common log in 1.2 hasn't

260
00:12:27,440 --> 00:12:32,300
been tampered with or modified in any

261
00:12:29,000 --> 00:12:35,570
form I can't this there's nothing that

262
00:12:32,300 --> 00:12:37,370
to tell me sure there's a char but a

263
00:12:35,570 --> 00:12:39,170
little shrine down yeah you can create

264
00:12:37,370 --> 00:12:41,630
your own hot sauce so I tamper the

265
00:12:39,170 --> 00:12:46,370
package create a new sha after that's

266
00:12:41,630 --> 00:12:48,620
wrong and done so I did a bit of digging

267
00:12:46,370 --> 00:12:51,560
and it actually turns out that maybe

268
00:12:48,620 --> 00:12:55,160
those supports signatures PGP probably

269
00:12:51,560 --> 00:12:57,410
pretty good privacy signatures and you

270
00:12:55,160 --> 00:12:58,939
can sign things and if you go to maven

271
00:12:57,410 --> 00:13:02,300
central which is the central repository

272
00:12:58,940 --> 00:13:05,990
and public repository you can view

273
00:13:02,300 --> 00:13:08,569
signatures but maven doesn't do this by

274
00:13:05,990 --> 00:13:13,130
default you have to do this manually and

275
00:13:08,570 --> 00:13:16,430
some repositories so I like Nexus Pro

276
00:13:13,130 --> 00:13:17,810
this is a piece of software that you can

277
00:13:16,430 --> 00:13:21,589
put in your infrastructure that kind of

278
00:13:17,810 --> 00:13:22,310
allows you to control packages in an art

279
00:13:21,589 --> 00:13:27,230
of

280
00:13:22,310 --> 00:13:29,359
a maven large circle that does support

281
00:13:27,230 --> 00:13:31,699
it but Estonia in the provision paid

282
00:13:29,360 --> 00:13:34,999
version open-source version doesn't

283
00:13:31,699 --> 00:13:39,170
support it and many organizations going

284
00:13:34,999 --> 00:13:42,980
to use that open source version and as I

285
00:13:39,170 --> 00:13:45,259
mentioned so there's several options for

286
00:13:42,980 --> 00:13:48,110
our attacker yeah in the Maven world

287
00:13:45,259 --> 00:13:51,319
there's basically four kind of

288
00:13:48,110 --> 00:13:53,120
repositories depending on your setup but

289
00:13:51,319 --> 00:13:59,209
in a typical organizational be like this

290
00:13:53,120 --> 00:14:02,629
so every moved maven Bulbul development

291
00:13:59,209 --> 00:14:04,670
environment has a local repository that

292
00:14:02,629 --> 00:14:07,569
one there so you can if you can you can

293
00:14:04,670 --> 00:14:10,040
modify it locally in the box

294
00:14:07,569 --> 00:14:12,790
there's the private repositories so this

295
00:14:10,040 --> 00:14:15,860
is where you get to an access repos and

296
00:14:12,790 --> 00:14:19,339
these are where you upload typically

297
00:14:15,860 --> 00:14:21,259
upload your own internal libraries and

298
00:14:19,339 --> 00:14:24,529
then you've got a proxy mirror so this

299
00:14:21,259 --> 00:14:26,540
this will take the dependencies from the

300
00:14:24,529 --> 00:14:27,139
central repository and keep it in a

301
00:14:26,540 --> 00:14:29,360
local store

302
00:14:27,139 --> 00:14:36,019
and then finally in the public central

303
00:14:29,360 --> 00:14:38,269
one so turn a load diagram form the

304
00:14:36,019 --> 00:14:40,279
attacker has basically three kind of

305
00:14:38,269 --> 00:14:45,470
step entry points where they can exploit

306
00:14:40,279 --> 00:14:47,660
this and depending where they do it they

307
00:14:45,470 --> 00:14:51,439
could get a really good hit

308
00:14:47,660 --> 00:14:53,779
so Jenkins is a bull server and this is

309
00:14:51,439 --> 00:14:55,969
typically where you're gonna do your

310
00:14:53,779 --> 00:14:57,050
ball board your card and then that our

311
00:14:55,970 --> 00:15:00,230
cards going to be installed in your

312
00:14:57,050 --> 00:15:01,729
production servers so if I was an

313
00:15:00,230 --> 00:15:06,199
attacker I'll probably try to target

314
00:15:01,730 --> 00:15:09,230
this the private repository trying a

315
00:15:06,199 --> 00:15:12,559
malicious payload into that because then

316
00:15:09,230 --> 00:15:14,209
every board subsequently will have the

317
00:15:12,559 --> 00:15:21,319
malicious payload and you can get on

318
00:15:14,209 --> 00:15:24,349
your production the the other thing is I

319
00:15:21,319 --> 00:15:27,339
have a look at obviously the the

320
00:15:24,350 --> 00:15:30,529
signature is an issue but what about

321
00:15:27,339 --> 00:15:33,399
intercepting between the download of the

322
00:15:30,529 --> 00:15:36,019
the boundary and that the server

323
00:15:33,399 --> 00:15:38,809
well maven

324
00:15:36,019 --> 00:15:41,209
central you can't hit it without HTTPS

325
00:15:38,809 --> 00:15:44,509
that doesn't force you have HTTPS and

326
00:15:41,209 --> 00:15:46,758
this is a red flag because intercepting

327
00:15:44,509 --> 00:15:51,230
between the diameter of the archive with

328
00:15:46,759 --> 00:15:54,110
name validation on the signature happy

329
00:15:51,230 --> 00:15:56,449
attacker so basically if you get man in

330
00:15:54,110 --> 00:15:58,279
the middle you can on package the

331
00:15:56,449 --> 00:16:02,988
modified in whatever form you went in

332
00:15:58,279 --> 00:16:08,420
you won't detect it I then also looked

333
00:16:02,989 --> 00:16:10,220
at some other technologies and see what

334
00:16:08,420 --> 00:16:11,149
they're doing in terms of signing and it

335
00:16:10,220 --> 00:16:14,569
kind of shocked me a bit

336
00:16:11,149 --> 00:16:17,689
so I've already mentioned Maybin NPM is

337
00:16:14,569 --> 00:16:21,189
no package package manager Kevin rhenium

338
00:16:17,689 --> 00:16:25,269
popular it's primarily web-based

339
00:16:21,189 --> 00:16:27,738
technology they do a manual verification

340
00:16:25,269 --> 00:16:30,019
if you have hundreds of libraries that's

341
00:16:27,739 --> 00:16:33,230
a stable and scale update this library

342
00:16:30,019 --> 00:16:35,869
never gonna scale power park as far as

343
00:16:33,230 --> 00:16:38,059
the qatal had no sony and then dark

344
00:16:35,869 --> 00:16:40,249
hairs as I mentioned scan in popularity

345
00:16:38,059 --> 00:16:41,170
they have signing but it's not enabled

346
00:16:40,249 --> 00:16:44,540
by default

347
00:16:41,170 --> 00:16:47,149
now just morning this may be outdated

348
00:16:44,540 --> 00:16:49,549
it's to the best of my knowledge so if

349
00:16:47,149 --> 00:16:51,319
anyone knows that if there are

350
00:16:49,549 --> 00:16:56,029
improvements yet please let me know I'd

351
00:16:51,319 --> 00:16:59,599
love to find out so you're thinking

352
00:16:56,029 --> 00:17:01,160
great now I'm validation on the

353
00:16:59,600 --> 00:17:04,309
signatures what if I may be going to

354
00:17:01,160 --> 00:17:08,178
trial review the code well as I

355
00:17:04,309 --> 00:17:10,398
mentioned software is boarding software

356
00:17:08,179 --> 00:17:12,500
development hours leveraging lobby upon

357
00:17:10,398 --> 00:17:15,438
larvae from lobby and these are those

358
00:17:12,500 --> 00:17:20,779
two lobbies so the first one is from the

359
00:17:15,439 --> 00:17:24,230
Commons codec and that is 8360 lines of

360
00:17:20,779 --> 00:17:26,740
code one labrie the other one is the

361
00:17:24,230 --> 00:17:30,080
spring security another really popular

362
00:17:26,740 --> 00:17:31,760
Java framework and that is fifteen

363
00:17:30,080 --> 00:17:34,908
thousand seven hundred and thirty nine

364
00:17:31,760 --> 00:17:36,020
lines of code just two libraries and

365
00:17:34,909 --> 00:17:39,830
those all each have their own

366
00:17:36,020 --> 00:17:43,480
dependencies you see she's never going

367
00:17:39,830 --> 00:17:43,480
to be able to review that amount of code

368
00:17:43,750 --> 00:17:49,929
so he has a question for you how many of

369
00:17:48,770 --> 00:17:52,960
you are

370
00:17:49,929 --> 00:17:58,029
and software developments ok quite a few

371
00:17:52,960 --> 00:17:59,590
that if I picked up a Donna Jane on the

372
00:17:58,029 --> 00:18:02,669
street would you allow them to include

373
00:17:59,590 --> 00:18:07,119
code in your in your repository new code

374
00:18:02,669 --> 00:18:09,610
no right that's what we deal with

375
00:18:07,119 --> 00:18:12,639
libraries we literally including other

376
00:18:09,610 --> 00:18:18,840
people's code in your code and often

377
00:18:12,639 --> 00:18:21,248
with no verification so to me obviously

378
00:18:18,840 --> 00:18:23,439
there are many many many people doing

379
00:18:21,249 --> 00:18:27,129
great job but it just takes that one

380
00:18:23,440 --> 00:18:29,289
with malicious intent and these are some

381
00:18:27,129 --> 00:18:32,230
of the other is already highlighted the

382
00:18:29,289 --> 00:18:35,080
the no validation in terms of signature

383
00:18:32,230 --> 00:18:36,970
base but also how do you know though is

384
00:18:35,080 --> 00:18:38,408
publishing the code or actually doing it

385
00:18:36,970 --> 00:18:40,840
for the right reasons

386
00:18:38,409 --> 00:18:41,619
hey I'm publishing this code to generate

387
00:18:40,840 --> 00:18:45,850
gross

388
00:18:41,619 --> 00:18:47,740
great it might generate graphs but in

389
00:18:45,850 --> 00:18:50,529
the back end what is the team are they

390
00:18:47,740 --> 00:18:56,320
doing it for their own game or they're

391
00:18:50,529 --> 00:19:02,559
trying to do it to help the other thing

392
00:18:56,320 --> 00:19:04,418
is the the largely untested but so that

393
00:19:02,559 --> 00:19:07,330
ship volume now is just growing and

394
00:19:04,419 --> 00:19:09,340
growing and growing and there's little

395
00:19:07,330 --> 00:19:16,090
in terms of testing automation around

396
00:19:09,340 --> 00:19:19,509
that and how do we vet that libraries

397
00:19:16,090 --> 00:19:22,658
are secure and that they don't have

398
00:19:19,509 --> 00:19:24,759
common security falls in them and that

399
00:19:22,659 --> 00:19:26,950
kind of relates the the the bottom point

400
00:19:24,759 --> 00:19:28,210
there so I will always assume hey open

401
00:19:26,950 --> 00:19:30,129
source is secure because you can view

402
00:19:28,210 --> 00:19:33,580
the code well there's a sheer volume of

403
00:19:30,129 --> 00:19:35,769
it it's going to require someone or some

404
00:19:33,580 --> 00:19:37,960
tool to verify it is that happening I

405
00:19:35,769 --> 00:19:40,629
know it some of it's happening but not a

406
00:19:37,960 --> 00:19:42,990
lot is happening on that front and then

407
00:19:40,629 --> 00:19:45,699
the other thing especially for my

408
00:19:42,990 --> 00:19:48,639
development point of view I see often is

409
00:19:45,700 --> 00:19:50,740
hey boy review at once will included

410
00:19:48,639 --> 00:19:52,959
once have this version this latest

411
00:19:50,740 --> 00:19:54,519
version and then forget about it five

412
00:19:52,960 --> 00:19:58,359
years down the line still using old

413
00:19:54,519 --> 00:20:02,379
version with I don't know 15 CDs that's

414
00:19:58,359 --> 00:20:03,679
it's never looked at again but thanks to

415
00:20:02,379 --> 00:20:06,649
Philly there are some tools are

416
00:20:03,680 --> 00:20:08,750
can how so very code very craters are

417
00:20:06,650 --> 00:20:10,910
typically looked at a source code in

418
00:20:08,750 --> 00:20:15,280
analyzers looks up the code for common

419
00:20:10,910 --> 00:20:20,270
vulnerabilities but they also have some

420
00:20:15,280 --> 00:20:22,820
dependency tooling in there now not

421
00:20:20,270 --> 00:20:28,400
looked at it too much to be honest but

422
00:20:22,820 --> 00:20:31,090
there are improving that NPM I don't

423
00:20:28,400 --> 00:20:35,350
know where that came out back to front

424
00:20:31,090 --> 00:20:39,470
devices that uh that's not mqn it's NPN

425
00:20:35,350 --> 00:20:41,899
so that's no package manager brilliant

426
00:20:39,470 --> 00:20:44,270
piece of thing that they've done there

427
00:20:41,900 --> 00:20:46,370
that they're back to court MP n ordered

428
00:20:44,270 --> 00:20:49,070
so it's built into the package manager

429
00:20:46,370 --> 00:20:50,419
itself and allows you to order the

430
00:20:49,070 --> 00:20:54,230
dependencies and found out or

431
00:20:50,420 --> 00:20:58,360
vulnerabilities our snack they do the

432
00:20:54,230 --> 00:21:00,230
lobby management I'm not too sure what

433
00:20:58,360 --> 00:21:02,240
features and that they have in there

434
00:21:00,230 --> 00:21:04,820
because I never use it but I know there

435
00:21:02,240 --> 00:21:05,810
are involved best look online and see if

436
00:21:04,820 --> 00:21:08,870
anymore

437
00:21:05,810 --> 00:21:12,200
so I know top Nexus the de-facto kind of

438
00:21:08,870 --> 00:21:18,050
repository for Java based things they do

439
00:21:12,200 --> 00:21:20,930
a lot more pop ah NPM even readout on

440
00:21:18,050 --> 00:21:23,690
that now but the point of this is they

441
00:21:20,930 --> 00:21:25,820
have a product called firewall that can

442
00:21:23,690 --> 00:21:29,270
allow you to set policies and the farm

443
00:21:25,820 --> 00:21:34,010
when to allow a dependency in and when

444
00:21:29,270 --> 00:21:37,520
to reject it I left the best for last

445
00:21:34,010 --> 00:21:40,010
because dependency tracking dependency

446
00:21:37,520 --> 00:21:42,200
check or I was projects so they're free

447
00:21:40,010 --> 00:21:43,550
and our brilliant tool so if you haven't

448
00:21:42,200 --> 00:21:45,800
used them or looked at them I highly

449
00:21:43,550 --> 00:21:48,470
recommend you do so the penalty check

450
00:21:45,800 --> 00:21:52,040
will do a scan on your code I think it

451
00:21:48,470 --> 00:21:55,160
supports most of the technologies and

452
00:21:52,040 --> 00:21:58,070
all generate a HTML report so you can

453
00:21:55,160 --> 00:21:59,570
have it generate XML and all this other

454
00:21:58,070 --> 00:22:01,550
dependencies as well as annoying

455
00:21:59,570 --> 00:22:04,159
vulnerabilities so it will compare them

456
00:22:01,550 --> 00:22:06,889
to the MVD national about the US

457
00:22:04,160 --> 00:22:09,410
government vulnerability database and

458
00:22:06,890 --> 00:22:13,400
they will look for which components have

459
00:22:09,410 --> 00:22:15,320
which CVS dependency track takes that a

460
00:22:13,400 --> 00:22:17,690
step further and kind of puts on a nice

461
00:22:15,320 --> 00:22:20,090
web based format so you

462
00:22:17,690 --> 00:22:22,429
can track its and comments on that sand

463
00:22:20,090 --> 00:22:24,649
like things are false positive and that

464
00:22:22,429 --> 00:22:29,750
really encourage you to have a look at

465
00:22:24,649 --> 00:22:31,070
that excellent job on that one then

466
00:22:29,750 --> 00:22:35,179
there's other things you can do to hope

467
00:22:31,070 --> 00:22:36,678
so one of the first things you should be

468
00:22:35,179 --> 00:22:37,460
looking at is when you included under

469
00:22:36,679 --> 00:22:42,200
the penalty

470
00:22:37,460 --> 00:22:45,559
hey I'm including this graph library but

471
00:22:42,200 --> 00:22:49,789
it's not something needing some HTTP

472
00:22:45,559 --> 00:22:51,500
clients well is that really needed if

473
00:22:49,789 --> 00:22:54,769
it's something that just seemed that

474
00:22:51,500 --> 00:22:57,049
doesn't seem right that means you can

475
00:22:54,769 --> 00:23:01,250
start investigating that and do a

476
00:22:57,049 --> 00:23:05,779
further look inventory is a really

477
00:23:01,250 --> 00:23:09,259
important one make sure you keep your

478
00:23:05,779 --> 00:23:11,480
libraries and dependencies tracked so if

479
00:23:09,259 --> 00:23:14,179
something does come out Apache struts -

480
00:23:11,480 --> 00:23:15,559
you should see later um you know where

481
00:23:14,179 --> 00:23:19,370
it's been used you know where it needs

482
00:23:15,559 --> 00:23:21,860
to be updated already covered the

483
00:23:19,370 --> 00:23:25,309
signature but make sure you you validate

484
00:23:21,860 --> 00:23:29,029
signatures constantly you review an

485
00:23:25,309 --> 00:23:30,379
update so vulnerability is always coming

486
00:23:29,029 --> 00:23:34,879
out make sure you're keeping up-to-date

487
00:23:30,379 --> 00:23:38,090
and update your libraries whitelisting

488
00:23:34,879 --> 00:23:44,168
so if a application needs to get to some

489
00:23:38,090 --> 00:23:46,039
service fine but if you know our sorry

490
00:23:44,169 --> 00:23:47,480
applications that you need to

491
00:23:46,039 --> 00:23:51,259
communicate to the Internet make sure

492
00:23:47,480 --> 00:23:54,230
you have rules based on defining where

493
00:23:51,259 --> 00:23:57,440
they can community community Kate -

494
00:23:54,230 --> 00:23:59,360
sorry for instance I have a service

495
00:23:57,440 --> 00:24:03,440
running and it's only connecting out to

496
00:23:59,360 --> 00:24:04,908
some server a banner in China well that

497
00:24:03,440 --> 00:24:07,039
should be blocked should never be

498
00:24:04,909 --> 00:24:09,580
allowed and if it does that make sure

499
00:24:07,039 --> 00:24:12,200
you monitoring that so it raises a flag

500
00:24:09,580 --> 00:24:15,740
and the other thing this is mainly for

501
00:24:12,200 --> 00:24:17,480
web-based technologies utilize existing

502
00:24:15,740 --> 00:24:20,330
security features so there are some

503
00:24:17,480 --> 00:24:22,639
security features like CSP and srr that

504
00:24:20,330 --> 00:24:25,809
will literally block the request and

505
00:24:22,639 --> 00:24:28,399
raise flags and you see this later

506
00:24:25,809 --> 00:24:29,820
so some concepts that you can use to

507
00:24:28,399 --> 00:24:32,949
help

508
00:24:29,820 --> 00:24:35,260
so realize that it's an ongoing process

509
00:24:32,950 --> 00:24:37,780
don't just review once make sure you

510
00:24:35,260 --> 00:24:40,600
review it on a periodic basis so - like

511
00:24:37,780 --> 00:24:43,000
the pendency track they keep on putting

512
00:24:40,600 --> 00:24:45,820
the MVD so if has near Varner abilities

513
00:24:43,000 --> 00:24:49,510
come in your door updates and you get

514
00:24:45,820 --> 00:24:52,000
the reports monitoring and detection is

515
00:24:49,510 --> 00:24:56,379
important especially abnormal behavior

516
00:24:52,000 --> 00:25:00,570
and in updating updating update I can't

517
00:24:56,380 --> 00:25:05,950
stress this enough and you see why later

518
00:25:00,570 --> 00:25:08,770
sorry automation automation is key to

519
00:25:05,950 --> 00:25:11,260
all of this as you seen the sheer volume

520
00:25:08,770 --> 00:25:12,550
you can do this manually anymore and

521
00:25:11,260 --> 00:25:14,530
there are tools that are coming out that

522
00:25:12,550 --> 00:25:16,270
are helping to update lobbies in

523
00:25:14,530 --> 00:25:19,810
automated fashion and I think it's

524
00:25:16,270 --> 00:25:22,750
really interesting sort of field it's

525
00:25:19,810 --> 00:25:25,090
still in its infancy there are issues

526
00:25:22,750 --> 00:25:28,000
with updating lobbies just showing the

527
00:25:25,090 --> 00:25:32,260
next slide but this is key automation

528
00:25:28,000 --> 00:25:34,690
you can't do it manually so it's all

529
00:25:32,260 --> 00:25:37,110
very well saying update and do over this

530
00:25:34,690 --> 00:25:41,520
are being yeah I've suffered this and

531
00:25:37,110 --> 00:25:47,020
that's anyone heard of dependency how I

532
00:25:41,520 --> 00:25:50,139
see a few nerds in the head so the

533
00:25:47,020 --> 00:25:55,800
problem is sometimes developers of

534
00:25:50,140 --> 00:25:55,800
lobbies for whatever reasons it's not a

535
00:25:56,640 --> 00:26:02,770
taking a thing against them but it's

536
00:26:00,760 --> 00:26:04,650
often difficult so one of the things on

537
00:26:02,770 --> 00:26:07,510
our face that's really frustrating this

538
00:26:04,650 --> 00:26:09,850
lack of backwards compatibility so go

539
00:26:07,510 --> 00:26:11,230
update a library great I've just update

540
00:26:09,850 --> 00:26:12,939
the version the pump I don't know it

541
00:26:11,230 --> 00:26:16,300
doesn't work I'm gonna have I have to

542
00:26:12,940 --> 00:26:18,490
now go update a bunch of code I shall

543
00:26:16,300 --> 00:26:22,540
need to should be able to support the

544
00:26:18,490 --> 00:26:25,720
existing code by requiring extra code

545
00:26:22,540 --> 00:26:27,760
means more time and more time means less

546
00:26:25,720 --> 00:26:30,700
functionality written so it's harder to

547
00:26:27,760 --> 00:26:33,100
get by and the other thing is transitive

548
00:26:30,700 --> 00:26:34,390
dependencies so I've done okay great

549
00:26:33,100 --> 00:26:35,439
I'll grab a plate this Lambie

550
00:26:34,390 --> 00:26:37,450
I'd start reporting these

551
00:26:35,440 --> 00:26:40,000
vulnerabilities because that Lowrey

552
00:26:37,450 --> 00:26:42,140
depends on that librarian it has these

553
00:26:40,000 --> 00:26:44,480
dependencies that haven't been up

554
00:26:42,140 --> 00:26:46,550
so how do you get make sure you get rid

555
00:26:44,480 --> 00:26:49,510
of them you have to have things

556
00:26:46,550 --> 00:26:53,180
essentially and the other thing is

557
00:26:49,510 --> 00:26:57,020
dependency groups so maven works on

558
00:26:53,180 --> 00:27:00,470
group Rd and artifact ID and sometimes

559
00:26:57,020 --> 00:27:02,600
they change and when they change you

560
00:27:00,470 --> 00:27:04,430
don't get informed or you don't see you

561
00:27:02,600 --> 00:27:06,139
they've done a change and then you try

562
00:27:04,430 --> 00:27:08,690
found out what's the latest Lobby and

563
00:27:06,140 --> 00:27:12,520
you just get stuck and it takes time to

564
00:27:08,690 --> 00:27:12,520
figure out what's actually going on so

565
00:27:13,150 --> 00:27:19,250
one thing I'm really a big advocate of

566
00:27:16,790 --> 00:27:21,100
is real world examples too right drive

567
00:27:19,250 --> 00:27:25,730
the message home

568
00:27:21,100 --> 00:27:28,879
so bootstrap sounds anyone familiar with

569
00:27:25,730 --> 00:27:34,660
bootstrap I've got a few hands bootstrap

570
00:27:28,880 --> 00:27:39,950
is a library for web-based technologies

571
00:27:34,660 --> 00:27:46,220
they have this is a gems based Lobby for

572
00:27:39,950 --> 00:27:51,370
I guess a wrapper for gem sorry Ruby and

573
00:27:46,220 --> 00:27:53,690
Bishop on the 27th of March this year

574
00:27:51,370 --> 00:27:56,540
someone compromised the lobby in the

575
00:27:53,690 --> 00:27:58,670
Ruby gems they didn't update the github

576
00:27:56,540 --> 00:28:00,020
repository so there's nothing flagging

577
00:27:58,670 --> 00:28:03,770
and like connect so anything like that

578
00:28:00,020 --> 00:28:06,230
they actually modified the dependency in

579
00:28:03,770 --> 00:28:10,910
the Ruby gems repository and it was

580
00:28:06,230 --> 00:28:15,890
downloaded more than at 1477 times and

581
00:28:10,910 --> 00:28:19,910
what it was was a back door someone put

582
00:28:15,890 --> 00:28:22,610
in that piece of code there and what I

583
00:28:19,910 --> 00:28:26,200
did it took the come on from a cookie

584
00:28:22,610 --> 00:28:26,199
and ran it from the system

585
00:28:27,310 --> 00:28:31,580
this was actually discovered by a

586
00:28:29,510 --> 00:28:34,580
developer and this wasn't actually part

587
00:28:31,580 --> 00:28:38,300
of a security review so this destroys

588
00:28:34,580 --> 00:28:40,280
the the issue that we have it was just a

589
00:28:38,300 --> 00:28:42,680
coincidence that this was found and

590
00:28:40,280 --> 00:28:46,360
lucky was found so soon after it was

591
00:28:42,680 --> 00:28:46,360
introduced this could be in a lot worse

592
00:28:47,770 --> 00:28:53,510
and it was eventually I think replaced

593
00:28:51,140 --> 00:28:55,600
as soon as it was found in laughs goes

594
00:28:53,510 --> 00:28:58,480
on again

595
00:28:55,600 --> 00:29:01,510
maybe this actually happened last week

596
00:28:58,480 --> 00:29:05,919
this week Catherine 8th of July

597
00:29:01,510 --> 00:29:06,190
again attackers compromised a lobby in

598
00:29:05,919 --> 00:29:10,270
the

599
00:29:06,190 --> 00:29:12,400
rubygems repository again I named the

600
00:29:10,270 --> 00:29:18,340
rubygems repeat and change the code on

601
00:29:12,400 --> 00:29:22,650
github and what it did is it went off to

602
00:29:18,340 --> 00:29:25,059
pastebin got a payload from paceman

603
00:29:22,650 --> 00:29:26,740
dollar the payload the payload then

604
00:29:25,059 --> 00:29:28,720
connected answer server and the server

605
00:29:26,740 --> 00:29:31,090
basically told it what to do

606
00:29:28,720 --> 00:29:39,549
so basically a command and control this

607
00:29:31,090 --> 00:29:41,740
was downloaded 537 times and this one

608
00:29:39,549 --> 00:29:43,750
was actually fun based on a security

609
00:29:41,740 --> 00:29:46,270
audit so this was one example where

610
00:29:43,750 --> 00:29:51,280
standard security auditing did actually

611
00:29:46,270 --> 00:29:54,280
catch something this one yeah Scott home

612
00:29:51,280 --> 00:29:56,350
he's not in the room he's the bad subway

613
00:29:54,280 --> 00:29:58,620
he's the one that actually brought this

614
00:29:56,350 --> 00:30:04,418
up and Twitter so it was a Sunday I

615
00:29:58,620 --> 00:30:07,780
think it was last year it was a company

616
00:30:04,419 --> 00:30:13,059
core text hope they have the service

617
00:30:07,780 --> 00:30:16,330
called Brazil R which is for those with

618
00:30:13,059 --> 00:30:19,059
visual impairments on websites and this

619
00:30:16,330 --> 00:30:22,168
was included on about 4,000 websites

620
00:30:19,059 --> 00:30:24,610
globally Bahraini government websites

621
00:30:22,169 --> 00:30:27,429
and what happened here is the tak is

622
00:30:24,610 --> 00:30:30,969
compromised the browser JavaScript

623
00:30:27,429 --> 00:30:34,440
library and injected a coin half crypto

624
00:30:30,970 --> 00:30:38,169
miner was mining for Munro coins

625
00:30:34,440 --> 00:30:40,929
thankfully I was found and basically

626
00:30:38,169 --> 00:30:42,400
resolved in the same day you know anyone

627
00:30:40,929 --> 00:30:51,460
stay hazard a guess how much the attack

628
00:30:42,400 --> 00:30:55,230
is made about $24 but again that's

629
00:30:51,460 --> 00:30:55,230
because it was found on the same day so

630
00:30:55,740 --> 00:31:04,419
let's try to read in the news British

631
00:30:58,690 --> 00:31:07,950
Airways between August 2018 and

632
00:31:04,419 --> 00:31:07,950
September 2018

633
00:31:08,340 --> 00:31:16,230
had a organ collective group called mage

634
00:31:12,870 --> 00:31:20,250
cart na mage carts primarily targets on

635
00:31:16,230 --> 00:31:23,580
on payment systems and trials great for

636
00:31:20,250 --> 00:31:27,990
a personal identification identifiable

637
00:31:23,580 --> 00:31:30,899
data or payment information and they

638
00:31:27,990 --> 00:31:32,400
modify the JavaScript library now I was

639
00:31:30,900 --> 00:31:34,770
wondering whether I should include this

640
00:31:32,400 --> 00:31:38,250
or not because I wasn't too sure if this

641
00:31:34,770 --> 00:31:41,400
was the group actually reaching a server

642
00:31:38,250 --> 00:31:43,320
and then modifying the the the lobby on

643
00:31:41,400 --> 00:31:44,850
the server or actually modifying the

644
00:31:43,320 --> 00:31:46,679
library and then a serve and cleaning it

645
00:31:44,850 --> 00:31:48,870
but I think it's so important to you

646
00:31:46,680 --> 00:31:51,270
highlight this because they have done

647
00:31:48,870 --> 00:31:54,929
that and it is possible the details are

648
00:31:51,270 --> 00:31:58,470
under saw but they're not too clear as

649
00:31:54,930 --> 00:32:00,540
to what actually really happened but the

650
00:31:58,470 --> 00:32:03,900
important thing here is I don't know if

651
00:32:00,540 --> 00:32:07,379
everyone's seen the news British Airways

652
00:32:03,900 --> 00:32:11,250
are now facing a possible fan of 183

653
00:32:07,380 --> 00:32:16,080
million prompts which is the going rate

654
00:32:11,250 --> 00:32:18,660
for Boeing 747 what they could have

655
00:32:16,080 --> 00:32:21,389
zhonya and if the dead have had CSV

656
00:32:18,660 --> 00:32:23,330
content security policy in place this

657
00:32:21,390 --> 00:32:26,070
would have never happened

658
00:32:23,330 --> 00:32:28,620
so what contents are currently security

659
00:32:26,070 --> 00:32:31,350
policy is it's a HTTP header that

660
00:32:28,620 --> 00:32:34,709
defines what resources a page can load

661
00:32:31,350 --> 00:32:37,169
and connect to you by doing that there

662
00:32:34,710 --> 00:32:40,320
would have prevented the coin ha crypt

663
00:32:37,170 --> 00:32:43,800
Amano from running and it has the

664
00:32:40,320 --> 00:32:47,460
ability to report violations so I offer

665
00:32:43,800 --> 00:32:49,110
flag violation gets sent and that would

666
00:32:47,460 --> 00:32:51,570
have flagged up immediately and you

667
00:32:49,110 --> 00:32:56,399
would have been able to rectify the

668
00:32:51,570 --> 00:32:59,820
issue and this affected around three

669
00:32:56,400 --> 00:33:01,380
hundred and eighty thousand customers so

670
00:32:59,820 --> 00:33:03,419
if you're interested I include a link at

671
00:33:01,380 --> 00:33:06,660
the bottom there but hard to see the

672
00:33:03,420 --> 00:33:13,760
coloring sorry but this company did a

673
00:33:06,660 --> 00:33:15,090
great write-up on the actual VA incident

674
00:33:13,760 --> 00:33:17,610
sorry

675
00:33:15,090 --> 00:33:22,139
mage cart as I mentioned the previous

676
00:33:17,610 --> 00:33:25,770
loud that they're now becoming kind of

677
00:33:22,140 --> 00:33:27,900
a big threat to businesses I've seen

678
00:33:25,770 --> 00:33:31,920
they they're now offering like a paid

679
00:33:27,900 --> 00:33:36,210
service and one of the things I was to

680
00:33:31,920 --> 00:33:40,110
doing is targeting AWS s3 buckets which

681
00:33:36,210 --> 00:33:42,530
is basically cloud-based storage so one

682
00:33:40,110 --> 00:33:45,540
common thing that companies don't do is

683
00:33:42,530 --> 00:33:47,809
configure s3 buckets correctly so they

684
00:33:45,540 --> 00:33:51,090
Lau are there anyone to connect and

685
00:33:47,809 --> 00:33:53,340
modify it or anyone with a AWS account

686
00:33:51,090 --> 00:33:55,980
to connect them under fact what they're

687
00:33:53,340 --> 00:33:59,399
doing is only literally trying to do a

688
00:33:55,980 --> 00:34:01,110
shotgun approach looking for any open s3

689
00:33:59,400 --> 00:34:05,130
bucket with JavaScript and injecting the

690
00:34:01,110 --> 00:34:07,110
page of it in there so this is train

691
00:34:05,130 --> 00:34:09,240
they shift away from the target attack

692
00:34:07,110 --> 00:34:14,339
like British Airways and doing that

693
00:34:09,239 --> 00:34:20,250
whole plane spray this is an example

694
00:34:14,340 --> 00:34:22,859
contain a baseball ability so what

695
00:34:20,250 --> 00:34:25,710
happened yet is alp on Linux Linux

696
00:34:22,859 --> 00:34:27,750
whatever you an equal it's it's it's a

697
00:34:25,710 --> 00:34:29,820
base container so the way dr. works is

698
00:34:27,750 --> 00:34:33,869
you have containers and you can kind of

699
00:34:29,820 --> 00:34:35,790
form a hierarchy of containers it's kind

700
00:34:33,869 --> 00:34:37,740
of a base container that companies would

701
00:34:35,790 --> 00:34:43,580
then build upon to put their own

702
00:34:37,739 --> 00:34:47,699
software in and initially back in 2015

703
00:34:43,580 --> 00:34:50,369
it had a real user with no password by

704
00:34:47,699 --> 00:34:53,219
anyone on Linux noise the root user no

705
00:34:50,369 --> 00:34:56,669
password alarm bells that's probably

706
00:34:53,219 --> 00:34:59,490
really really bad so they fixed it and

707
00:34:56,668 --> 00:35:01,770
had a regression test for it later that

708
00:34:59,490 --> 00:35:06,720
yes someone changed the regression test

709
00:35:01,770 --> 00:35:14,100
and change the effects so between 2015

710
00:35:06,720 --> 00:35:17,939
and 2019 this year open images darker

711
00:35:14,100 --> 00:35:23,700
images had user with no password and

712
00:35:17,940 --> 00:35:25,320
this covered versions 3.3 to 3.9 and the

713
00:35:23,700 --> 00:35:28,049
warning thing is this was actually

714
00:35:25,320 --> 00:35:31,260
reported prior to the actual CDE being

715
00:35:28,050 --> 00:35:35,430
traded so it was reported as late as

716
00:35:31,260 --> 00:35:38,089
August 2018 annachi was it was

717
00:35:35,430 --> 00:35:40,500
reported but it wasn't flagged

718
00:35:38,089 --> 00:35:43,730
appropriately so this also how that's an

719
00:35:40,500 --> 00:35:48,119
issue where if you don't have proper

720
00:35:43,730 --> 00:35:50,099
methodologies to handle security issues

721
00:35:48,119 --> 00:35:51,329
and reporting them and prioritizing them

722
00:35:50,099 --> 00:35:55,230
they can go a mess

723
00:35:51,329 --> 00:35:57,000
such as in this case so thankfully this

724
00:35:55,230 --> 00:36:02,130
is all fixed now but uh how that's

725
00:35:57,000 --> 00:36:03,809
another if you're on containers I wasn't

726
00:36:02,130 --> 00:36:09,109
going to ask if him or not anyone knows

727
00:36:03,809 --> 00:36:12,300
Equifax but a senior D sorry Equifax

728
00:36:09,109 --> 00:36:16,730
September 2017 then ants they got

729
00:36:12,300 --> 00:36:18,869
breached got briefs in March 2017

730
00:36:16,730 --> 00:36:22,170
about one hundred and forty five million

731
00:36:18,869 --> 00:36:23,849
US customers got affected I've seen

732
00:36:22,170 --> 00:36:26,099
reports four hundred to forty four

733
00:36:23,849 --> 00:36:28,339
million four hundred thousand to forty

734
00:36:26,099 --> 00:36:29,730
four million British citizens have been

735
00:36:28,339 --> 00:36:31,828
affected

736
00:36:29,730 --> 00:36:38,309
I think that's come down to about four

737
00:36:31,829 --> 00:36:41,540
million now so one of the things around

738
00:36:38,309 --> 00:36:43,710
here is this was as a result of

739
00:36:41,540 --> 00:36:46,200
companies not updating their libraries

740
00:36:43,710 --> 00:36:48,690
so what happened here the attackers

741
00:36:46,200 --> 00:36:50,160
managed to breach them by Apache

742
00:36:48,690 --> 00:36:52,140
stretched to vulnerability

743
00:36:50,160 --> 00:36:56,700
now patchy stretches away a java web

744
00:36:52,140 --> 00:36:59,549
based framework and it had a for addy

745
00:36:56,700 --> 00:37:02,819
serialization for which a lot of attack

746
00:36:59,549 --> 00:37:06,859
is to run remote code on the server and

747
00:37:02,819 --> 00:37:06,859
then from there export rate the data

748
00:37:06,950 --> 00:37:09,839
anyone want to hazard a guess how much

749
00:37:09,240 --> 00:37:20,910
less cost

750
00:37:09,839 --> 00:37:23,520
it affects anyone 1.4 billion and the

751
00:37:20,910 --> 00:37:26,040
thing that makes it even more scary is I

752
00:37:23,520 --> 00:37:28,619
don't know the full details about the

753
00:37:26,040 --> 00:37:30,660
implementation I don't know how the what

754
00:37:28,619 --> 00:37:32,220
even went version of Apache struts they

755
00:37:30,660 --> 00:37:35,040
were using I just know that I using

756
00:37:32,220 --> 00:37:40,470
Apache stress too but there is a

757
00:37:35,040 --> 00:37:44,759
possibility that that 1.4 billion cost

758
00:37:40,470 --> 00:37:47,970
could have been prevented by one code

759
00:37:44,760 --> 00:37:49,310
change one line code change let me

760
00:37:47,970 --> 00:37:52,370
stress that again

761
00:37:49,310 --> 00:37:57,170
one potential one Lanco change cost the

762
00:37:52,370 --> 00:37:57,710
company 1.4 billion dollars and it gets

763
00:37:57,170 --> 00:38:00,320
worse

764
00:37:57,710 --> 00:38:02,540
Equifax is the first company in history

765
00:38:00,320 --> 00:38:04,670
to have a negative credit rating as a

766
00:38:02,540 --> 00:38:07,610
result of the sudden attack so not only

767
00:38:04,670 --> 00:38:11,090
is that 1.4 but there's potential future

768
00:38:07,610 --> 00:38:12,680
costs associated with it and then there

769
00:38:11,090 --> 00:38:16,460
were the whole thing about that one guy

770
00:38:12,680 --> 00:38:18,710
I'm not doing his job if you have your

771
00:38:16,460 --> 00:38:23,540
security relying on one guy I can tell

772
00:38:18,710 --> 00:38:26,390
you now you didn't wrong so I think they

773
00:38:23,540 --> 00:38:30,140
provide an excellent use case for how

774
00:38:26,390 --> 00:38:32,750
not to do things and learning from them

775
00:38:30,140 --> 00:38:34,040
make sure you're updating make sure

776
00:38:32,750 --> 00:38:36,170
you're monitoring because one of the

777
00:38:34,040 --> 00:38:38,690
other things is that's what have been

778
00:38:36,170 --> 00:38:41,150
detected earlier but their detection

779
00:38:38,690 --> 00:38:45,530
system had expired so it's done it'll go

780
00:38:41,150 --> 00:38:49,820
flagged this kind of comes to a point

781
00:38:45,530 --> 00:38:52,340
that I see companies the company is

782
00:38:49,820 --> 00:38:53,750
often via gamble hey we're they have

783
00:38:52,340 --> 00:38:55,670
this vulnerability how much is it going

784
00:38:53,750 --> 00:38:57,830
to cost us to fix how much do we

785
00:38:55,670 --> 00:39:00,770
envisage this vulnerability is going to

786
00:38:57,830 --> 00:39:03,080
cost us cost-benefit analysis and

787
00:39:00,770 --> 00:39:05,050
sometimes like that well if you get

788
00:39:03,080 --> 00:39:08,600
breached the likelihoods law lawyer and

789
00:39:05,050 --> 00:39:11,270
we'll live with the cost well the good

790
00:39:08,600 --> 00:39:13,670
thing is things like Equifax and British

791
00:39:11,270 --> 00:39:16,190
Airways that cost is enough suddenly

792
00:39:13,670 --> 00:39:18,440
becoming significantly more we seen also

793
00:39:16,190 --> 00:39:22,310
with Marriott they're facing that I

794
00:39:18,440 --> 00:39:25,640
think in 99 million pound for an animal

795
00:39:22,310 --> 00:39:29,299
so this gamble is now starting to become

796
00:39:25,640 --> 00:39:31,240
a real thing for companies the cost

797
00:39:29,300 --> 00:39:34,720
associated of getting wrong are

798
00:39:31,240 --> 00:39:34,720
significantly more now

799
00:39:34,900 --> 00:39:42,230
so in closing some of the things to

800
00:39:39,380 --> 00:39:43,910
remind you about updates make sure you

801
00:39:42,230 --> 00:39:46,670
constantly reviewing your lobbies

802
00:39:43,910 --> 00:39:49,089
updating where appropriate leverage

803
00:39:46,670 --> 00:39:55,030
existing functionality lepsius PDS wrong

804
00:39:49,090 --> 00:39:57,770
these things will save you both in the

805
00:39:55,030 --> 00:40:00,209
well I already highlighted the example

806
00:39:57,770 --> 00:40:03,329
with the crypto money

807
00:40:00,209 --> 00:40:06,999
automate where you can make sure you

808
00:40:03,329 --> 00:40:08,920
monitoring and reviewing CVEs in

809
00:40:06,999 --> 00:40:11,799
automated fashion so using things like

810
00:40:08,920 --> 00:40:13,869
dependency track you can even set up web

811
00:40:11,799 --> 00:40:16,150
hooks and that's all alerts on things

812
00:40:13,869 --> 00:40:19,660
like teens and snack so you don't have

813
00:40:16,150 --> 00:40:21,759
to constantly monitor it these

814
00:40:19,660 --> 00:40:24,249
privileges this is kind of a fundamental

815
00:40:21,759 --> 00:40:28,239
security thing there's many companies

816
00:40:24,249 --> 00:40:31,149
aren't doing while shield service have

817
00:40:28,239 --> 00:40:33,009
to open up the sport if you're not

818
00:40:31,150 --> 00:40:36,930
expecting that service to have the port

819
00:40:33,009 --> 00:40:39,789
open if it's tempting to do that flag it

820
00:40:36,930 --> 00:40:42,069
and I kind of formed into monitoring

821
00:40:39,789 --> 00:40:45,449
make sure you monitor for these

822
00:40:42,069 --> 00:40:47,920
violations CSP reports are great thing

823
00:40:45,449 --> 00:40:51,160
they'll flag it and then you can catch

824
00:40:47,920 --> 00:40:55,660
some things sooner than later and update

825
00:40:51,160 --> 00:41:00,770
again Equifax is a good example 1.4

826
00:40:55,660 --> 00:41:03,839
billion so that's me

827
00:41:00,770 --> 00:41:03,840
[Applause]

828
00:41:06,960 --> 00:41:10,050
[Applause]

829
00:41:24,910 --> 00:41:41,410
developers sorry this kind of forms into

830
00:41:35,570 --> 00:41:44,210
a holdfast solution so having tools like

831
00:41:41,410 --> 00:41:46,640
Nexus firewall or really harp so you can

832
00:41:44,210 --> 00:41:49,220
rate and set policies in place that hey

833
00:41:46,640 --> 00:41:51,440
if this this library has a CVE a greater

834
00:41:49,220 --> 00:41:53,689
than Mach 9 rocket so they can't

835
00:41:51,440 --> 00:41:55,340
actually include it also the other

836
00:41:53,690 --> 00:41:57,770
worrying thing about libraries is they

837
00:41:55,340 --> 00:41:59,030
have licenses associated with them so if

838
00:41:57,770 --> 00:42:00,800
you know Martin's trained for that as

839
00:41:59,030 --> 00:42:04,660
well you can have legal implications

840
00:42:00,800 --> 00:42:07,460
that solves the existing vulnerabilities

841
00:42:04,660 --> 00:42:10,399
but you also need some mechanism to make

842
00:42:07,460 --> 00:42:12,230
sure you scanning the service when it

843
00:42:10,400 --> 00:42:15,350
actually gets developed so it's not up

844
00:42:12,230 --> 00:42:18,110
so if it's open up like random ports on

845
00:42:15,350 --> 00:42:19,910
that you can actually detect that so

846
00:42:18,110 --> 00:42:23,480
having things like wireless can help

847
00:42:19,910 --> 00:42:25,700
with that it's also around the inventory

848
00:42:23,480 --> 00:42:28,520
hey the service I know it has these

849
00:42:25,700 --> 00:42:30,980
ports open anything opens up outside of

850
00:42:28,520 --> 00:42:33,170
that should be flagged so having some

851
00:42:30,980 --> 00:42:38,270
tool that automates that's going to help

852
00:42:33,170 --> 00:42:40,460
a lot yeah I'm a big fan of automating

853
00:42:38,270 --> 00:42:42,620
reducing the burden of developers

854
00:42:40,460 --> 00:42:46,400
because then they're gonna be less

855
00:42:42,620 --> 00:42:57,920
resistive and all of that it's it's so

856
00:42:46,400 --> 00:43:05,780
difficult once it's off you see in the

857
00:42:57,920 --> 00:43:07,700
wild right now that's actually a good

858
00:43:05,780 --> 00:43:09,560
point so that's one of the classic

859
00:43:07,700 --> 00:43:13,580
diversion tactics that attackers often

860
00:43:09,560 --> 00:43:15,380
use so there are typically in the past

861
00:43:13,580 --> 00:43:17,360
use like a DDoS attack

862
00:43:15,380 --> 00:43:19,160
so like everything's all hands on deck

863
00:43:17,360 --> 00:43:21,800
looking OVA on and they serve themselves

864
00:43:19,160 --> 00:43:23,899
in the back door so I'm not aware of

865
00:43:21,800 --> 00:43:27,590
anything like that in the software

866
00:43:23,900 --> 00:43:29,630
dependency at realm but hey if if you're

867
00:43:27,590 --> 00:43:31,790
an attacker that's code that's a really

868
00:43:29,630 --> 00:43:34,310
good way to kind of get the tension over

869
00:43:31,790 --> 00:43:36,529
there and sneak yourself back in so yeah

870
00:43:34,310 --> 00:43:38,330
and that's why the monitoring and all

871
00:43:36,530 --> 00:43:40,520
that automation is really important so

872
00:43:38,330 --> 00:43:43,790
it's regardless of where it is and

873
00:43:40,520 --> 00:43:45,440
what's happening it'll still flag up but

874
00:43:43,790 --> 00:43:47,060
the important thing about monitoring and

875
00:43:45,440 --> 00:43:50,060
that's making sure you know so you don't

876
00:43:47,060 --> 00:44:09,110
get the flood otherwise it gets lost in

877
00:43:50,060 --> 00:44:10,759
the noise yeah so it kind of like goes

878
00:44:09,110 --> 00:44:15,200
into the whole thing I've done rolling

879
00:44:10,760 --> 00:44:18,590
crypto a tough thing what I'd say is if

880
00:44:15,200 --> 00:44:22,279
you try stick with common knowing

881
00:44:18,590 --> 00:44:25,640
vendors as best as much as possible so

882
00:44:22,280 --> 00:44:28,280
things like Apache Commons and that what

883
00:44:25,640 --> 00:44:29,990
you'll find is those are downloaded

884
00:44:28,280 --> 00:44:31,730
thousands of times if not hundreds of

885
00:44:29,990 --> 00:44:33,080
thousands of time you have different

886
00:44:31,730 --> 00:44:35,060
companies do you know in security

887
00:44:33,080 --> 00:44:38,500
reviews in that so if anything is fun

888
00:44:35,060 --> 00:44:42,080
it's likely going to be flagged up that

889
00:44:38,500 --> 00:44:43,760
will hopefully flagged up there where is

890
00:44:42,080 --> 00:44:46,009
if you get a project that's probably

891
00:44:43,760 --> 00:44:49,580
been done at the ten times most probably

892
00:44:46,010 --> 00:44:53,330
not going to have that visibility or so

893
00:44:49,580 --> 00:44:57,110
if you write your own libraries you kind

894
00:44:53,330 --> 00:44:58,910
of in that same scenario where depending

895
00:44:57,110 --> 00:45:01,160
on your company size you might have very

896
00:44:58,910 --> 00:45:10,190
limited testing and reviews and all that

897
00:45:01,160 --> 00:45:13,700
on it slow yeah it's that's a trade-off

898
00:45:10,190 --> 00:45:17,960
I guess that would say if your audio in

899
00:45:13,700 --> 00:45:19,629
lobbies the chances of a malicious thing

900
00:45:17,960 --> 00:45:22,280
being put in is obviously going to be

901
00:45:19,630 --> 00:45:23,870
significantly lower if something is

902
00:45:22,280 --> 00:45:26,830
malicious put in there you probably have

903
00:45:23,870 --> 00:45:26,830
big issues to worry about

904
00:45:29,029 --> 00:45:38,400
where I would marry Mira are like again

905
00:45:33,930 --> 00:45:40,500
maybe Thanks so what you're saying but

906
00:45:38,400 --> 00:45:44,660
actually I said delay figuring out this

907
00:45:40,500 --> 00:45:44,660
it's a miracle we might not

908
00:45:50,089 --> 00:45:54,750
yeah it depends on the fix it

909
00:45:52,500 --> 00:45:56,490
I guess if they're about a new version

910
00:45:54,750 --> 00:45:59,519
then you should get the new version and

911
00:45:56,490 --> 00:46:00,990
you're you know Amuro if they keep

912
00:45:59,519 --> 00:46:04,439
sticking to the same version then you

913
00:46:00,990 --> 00:46:14,490
might not get that it might be stored

914
00:46:04,440 --> 00:46:16,410
there with yeah yeah I mean like in the

915
00:46:14,490 --> 00:46:18,299
rubygems though I'm pretty quick about I

916
00:46:16,410 --> 00:46:21,808
think we've got resolved in the same day

917
00:46:18,299 --> 00:46:23,490
so and I would hope they brought new

918
00:46:21,809 --> 00:46:24,960
version so it actually forces you to

919
00:46:23,490 --> 00:46:26,640
update and that's why you're gonna stick

920
00:46:24,960 --> 00:46:27,900
to updated libraries you gotta update

921
00:46:26,640 --> 00:46:35,058
your libraries where possible on

922
00:46:27,900 --> 00:46:35,059
monetarist any other questions okay

923
00:46:36,859 --> 00:46:39,890
thank you

