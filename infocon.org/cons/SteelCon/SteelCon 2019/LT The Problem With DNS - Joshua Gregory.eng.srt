1
00:00:02,580 --> 00:00:06,960
I'm second year substitution here at

2
00:00:04,830 --> 00:00:09,000
Shepard Hallam I got some experience if

3
00:00:06,960 --> 00:00:13,350
I'm in networking from personal projects

4
00:00:09,000 --> 00:00:15,180
her stuff she wasn't open second year

5
00:00:13,350 --> 00:00:18,029
was Dale Carden few other conferences as

6
00:00:15,180 --> 00:00:20,670
well so I'm going to talk briefly bit

7
00:00:18,029 --> 00:00:23,189
about ENS what the problems are with it

8
00:00:20,670 --> 00:00:26,130
and some of the soviets so some people

9
00:00:23,190 --> 00:00:28,740
might have heard about this so it's an

10
00:00:26,130 --> 00:00:30,599
ITP association finalized for the

11
00:00:28,740 --> 00:00:32,369
internet here is birth Awards and they

12
00:00:30,600 --> 00:00:35,400
decided to announce myself as their

13
00:00:32,369 --> 00:00:37,170
villa because they impotent implement

14
00:00:35,400 --> 00:00:40,010
something called the NSF a few TPS and

15
00:00:37,170 --> 00:00:42,360
they claimed that it was it was because

16
00:00:40,010 --> 00:00:44,160
he would be an immigrant in such a way

17
00:00:42,360 --> 00:00:45,690
to bypass the UK filtering obligations

18
00:00:44,160 --> 00:00:48,239
and parental controls and undermine

19
00:00:45,690 --> 00:00:50,849
internet safety standards in the UK and

20
00:00:48,239 --> 00:00:53,209
it got a lot of flack from many people

21
00:00:50,850 --> 00:00:55,110
including Scott helmet but yeah so it's

22
00:00:53,210 --> 00:00:56,399
basically they withdraw Matt and then

23
00:00:55,110 --> 00:00:59,180
withdrawn the entire country because of

24
00:00:56,399 --> 00:01:03,090
that yeah so the DRS protocol self

25
00:00:59,180 --> 00:01:05,339
developed in 1987 by Paul Anka Petrus

26
00:01:03,090 --> 00:01:07,020
essentially they had a problem he was

27
00:01:05,339 --> 00:01:08,639
handed five different solutions to it

28
00:01:07,020 --> 00:01:09,719
Todd come with a compromise if through

29
00:01:08,639 --> 00:01:12,780
all of them in the bin and came up with

30
00:01:09,719 --> 00:01:15,089
something else and this is why I came up

31
00:01:12,780 --> 00:01:18,959
with so it's primarily based on the on

32
00:01:15,090 --> 00:01:21,299
UDP he's got three can use TCP safe port

33
00:01:18,959 --> 00:01:23,959
as well he's limited to 512 back

34
00:01:21,299 --> 00:01:26,969
responses and it's basically the way you

35
00:01:23,959 --> 00:01:28,770
converted a URL into the IP address it's

36
00:01:26,969 --> 00:01:31,649
connected to web servers and other stuff

37
00:01:28,770 --> 00:01:32,999
hello so there's no encryption in it

38
00:01:31,649 --> 00:01:34,799
there's no authentication and there's no

39
00:01:32,999 --> 00:01:37,859
integrity check in all of them wants

40
00:01:34,799 --> 00:01:41,759
including UDP and TCP so it's basically

41
00:01:37,859 --> 00:01:43,829
just wide open in terms of way the

42
00:01:41,759 --> 00:01:46,319
actual protocol communicate some things

43
00:01:43,829 --> 00:01:48,449
you've got basically five tiers you've

44
00:01:46,319 --> 00:01:51,419
got your own clients but then you've got

45
00:01:48,450 --> 00:01:53,520
your resolvers your third providers your

46
00:01:51,419 --> 00:01:57,090
registrar's until the servers and your

47
00:01:53,520 --> 00:01:59,219
service so the route service sit at the

48
00:01:57,090 --> 00:02:01,560
top of the chain and they hold all the

49
00:01:59,219 --> 00:02:05,068
information on where the TLB servers are

50
00:02:01,560 --> 00:02:07,499
located so your your laptop will go

51
00:02:05,069 --> 00:02:08,819
where is Google where is google.com and

52
00:02:07,499 --> 00:02:10,139
here will go straight to the top of the

53
00:02:08,818 --> 00:02:13,010
chain to roof server and go where is

54
00:02:10,139 --> 00:02:15,379
calm as

55
00:02:13,010 --> 00:02:17,420
so I say the route service hard-coded

56
00:02:15,379 --> 00:02:21,109
novice so you always know where to find

57
00:02:17,420 --> 00:02:23,238
them the TLD service not you've tasted

58
00:02:21,110 --> 00:02:25,610
here he'll be server you're asked the

59
00:02:23,239 --> 00:02:28,879
Tod server where it's google.com where

60
00:02:25,610 --> 00:02:31,330
is the names of that and he will then

61
00:02:28,879 --> 00:02:33,739
point you at the registrar full of the

62
00:02:31,330 --> 00:02:35,060
specific domain name and then the

63
00:02:33,739 --> 00:02:38,780
Registrar contains all the information

64
00:02:35,060 --> 00:02:40,489
about NS records a records basically

65
00:02:38,780 --> 00:02:42,769
tell us what you want the IP addresses

66
00:02:40,489 --> 00:02:46,569
are Wi-Fi date how it works it's in

67
00:02:42,769 --> 00:02:48,890
security for each xxx implies that on it

68
00:02:46,569 --> 00:02:51,349
and so there is always a watch he fed us

69
00:02:48,890 --> 00:02:52,849
information you've got two types where

70
00:02:51,349 --> 00:02:54,858
you're caching resolvers and your

71
00:02:52,849 --> 00:02:58,339
recursive results so caching ones

72
00:02:54,859 --> 00:03:01,010
they're essentially they they receive

73
00:02:58,340 --> 00:03:03,040
your request and then they'll go off to

74
00:03:01,010 --> 00:03:05,569
a different resolver and after that and

75
00:03:03,040 --> 00:03:07,420
that will do a process for it this is

76
00:03:05,569 --> 00:03:10,129
what you usually find in your home route

77
00:03:07,420 --> 00:03:12,500
and it's generally what most people

78
00:03:10,129 --> 00:03:14,358
actually drop with your recursive

79
00:03:12,500 --> 00:03:16,640
resolver is what you internet providers

80
00:03:14,359 --> 00:03:17,359
will happen it's what Google run into

81
00:03:16,640 --> 00:03:19,279
our card player

82
00:03:17,359 --> 00:03:20,810
that's nothing actually does the work

83
00:03:19,280 --> 00:03:23,180
and she goes the Beast of the roof

84
00:03:20,810 --> 00:03:25,790
servers and all the others so it's quite

85
00:03:23,180 --> 00:03:27,349
effective to get just just to get me up

86
00:03:25,790 --> 00:03:30,200
here mr. google.com you have to make six

87
00:03:27,349 --> 00:03:31,429
different DNS requests quite a heavy pro

88
00:03:30,200 --> 00:03:35,569
quo in terms of how many requests

89
00:03:31,430 --> 00:03:37,489
required for one thing so temperature

90
00:03:35,569 --> 00:03:40,518
security Indian asks the first batch of

91
00:03:37,489 --> 00:03:42,590
spirit for us is found in 1990 and that

92
00:03:40,519 --> 00:03:46,220
kicked off words is he here the ass and

93
00:03:42,590 --> 00:03:49,310
that took seven years so DNS SEC was

94
00:03:46,220 --> 00:03:52,549
created in 1997 and they then had to be

95
00:03:49,310 --> 00:03:54,530
revised in 1999 and then it had to be

96
00:03:52,549 --> 00:03:56,209
completely redesigned in 2005 because

97
00:03:54,530 --> 00:03:58,069
the way they designed it first time just

98
00:03:56,209 --> 00:04:01,519
did not work with incense at all quite

99
00:03:58,069 --> 00:04:02,690
so many individual requests that he

100
00:04:01,519 --> 00:04:06,620
would have slowed down the internet that

101
00:04:02,690 --> 00:04:09,290
when we were basically useful so that

102
00:04:06,620 --> 00:04:12,410
happened and then Dan Kaminsky came up

103
00:04:09,290 --> 00:04:13,940
and he found a vulnerability in most DNS

104
00:04:12,410 --> 00:04:15,918
resolver and server implementations

105
00:04:13,940 --> 00:04:18,620
which meant that you could poison the

106
00:04:15,919 --> 00:04:20,900
caches and basically inject whatever you

107
00:04:18,620 --> 00:04:23,210
wanted and that was caused by the fact

108
00:04:20,899 --> 00:04:26,929
that the NS protocol is limited to

109
00:04:23,210 --> 00:04:28,130
65,000 536 transaction IDs and of course

110
00:04:26,930 --> 00:04:32,050
is going to be a lot more requests than

111
00:04:28,130 --> 00:04:34,909
that to most yes with all of us so

112
00:04:32,050 --> 00:04:36,949
mitigations are required and accentuate

113
00:04:34,910 --> 00:04:37,789
this is no longer an issue but it really

114
00:04:36,949 --> 00:04:42,139
shouldn't have happened in the first

115
00:04:37,789 --> 00:04:43,940
place so the way the proposed to fix it

116
00:04:42,139 --> 00:04:46,660
is there an asset so it's public key

117
00:04:43,940 --> 00:04:49,250
cryptography sort by HDTV density right

118
00:04:46,660 --> 00:04:51,380
and incorrect modifications records by

119
00:04:49,250 --> 00:04:55,100
resolving DNS servers and things using

120
00:04:51,380 --> 00:04:57,860
heat cryptography another stuff like

121
00:04:55,100 --> 00:04:59,360
that so he secures the root servers here

122
00:04:57,860 --> 00:05:01,940
these servers the register up service

123
00:04:59,360 --> 00:05:03,800
basically secures enforcers all that all

124
00:05:01,940 --> 00:05:06,889
those links are opposite here Anderson

125
00:05:03,800 --> 00:05:10,070
and really it is not too many problems

126
00:05:06,889 --> 00:05:11,840
enough room the big problem is the thing

127
00:05:10,070 --> 00:05:13,699
called the cycle that's me one quick way

128
00:05:11,840 --> 00:05:15,109
so to be able to get bit work that

129
00:05:13,699 --> 00:05:17,000
working they've had to administer good

130
00:05:15,110 --> 00:05:19,789
eating at extension mechanisms for

131
00:05:17,000 --> 00:05:27,590
dinner and that expanded the maximum UDP

132
00:05:19,789 --> 00:05:28,759
packet size by a x2 by x2 for 596 but

133
00:05:27,590 --> 00:05:32,479
then the problem is they're in a second

134
00:05:28,759 --> 00:05:36,639
so if you go through this link here I

135
00:05:32,479 --> 00:05:39,620
don't want to that shows the DNS SEC

136
00:05:36,639 --> 00:05:43,639
resolvers actually adoption of DNS mo

137
00:05:39,620 --> 00:05:47,090
resolvers and checking that is 25% that

138
00:05:43,639 --> 00:05:50,270
the entire internet so 75% of is I'm

139
00:05:47,090 --> 00:05:52,340
even using it I thought I'm very often

140
00:05:50,270 --> 00:05:53,570
when they do use it some websites will

141
00:05:52,340 --> 00:05:55,400
stop working on together because they've

142
00:05:53,570 --> 00:05:57,949
got bad implementations and they just

143
00:05:55,400 --> 00:06:00,320
not configure it correctly so this work

144
00:05:57,949 --> 00:06:03,070
kicked off to resolve that with you

145
00:06:00,320 --> 00:06:07,520
protocols automating things but that's

146
00:06:03,070 --> 00:06:08,960
still many years away now and the other

147
00:06:07,520 --> 00:06:11,448
problem is a DNS it doesn't actually

148
00:06:08,960 --> 00:06:13,820
secure any connections between your

149
00:06:11,449 --> 00:06:15,380
computer and your resolver there's

150
00:06:13,820 --> 00:06:17,270
nothing to actually secure that if

151
00:06:15,380 --> 00:06:20,719
anyone's up between yeah they can

152
00:06:17,270 --> 00:06:23,000
intercept and modify everything and

153
00:06:20,720 --> 00:06:27,650
that's how most ISP filters work at the

154
00:06:23,000 --> 00:06:29,539
moment so the other problem is this DNS

155
00:06:27,650 --> 00:06:32,179
amplification attacks which happened a

156
00:06:29,539 --> 00:06:34,310
few years ago so DNS queries you can

157
00:06:32,180 --> 00:06:36,800
spoof the IP addresses in DNS queries

158
00:06:34,310 --> 00:06:38,479
you screw the source IP address which

159
00:06:36,800 --> 00:06:40,320
means that you can make a request for a

160
00:06:38,479 --> 00:06:43,120
really large record

161
00:06:40,320 --> 00:06:45,699
from a very small request size and you

162
00:06:43,120 --> 00:06:48,010
can get 40 X amplification internal

163
00:06:45,699 --> 00:06:50,979
package size so for a DDoS that means

164
00:06:48,010 --> 00:06:52,719
you're quite 40 times less computers to

165
00:06:50,979 --> 00:06:56,110
actually deliver an effective to our

166
00:06:52,720 --> 00:06:58,600
service stack now I demoed this as for a

167
00:06:56,110 --> 00:07:00,340
project in my unit and I generated over

168
00:06:58,600 --> 00:07:03,910
150 megabits of traffic for a four

169
00:07:00,340 --> 00:07:05,169
pieces I'm wondering I said which is

170
00:07:03,910 --> 00:07:09,190
enough to say down quite a few web

171
00:07:05,169 --> 00:07:10,870
server that I'm aware so dense

172
00:07:09,190 --> 00:07:13,719
application attacks can be done inside

173
00:07:10,870 --> 00:07:15,220
your network as well so if you go to our

174
00:07:13,720 --> 00:07:17,590
resolvers is the net response

175
00:07:15,220 --> 00:07:20,200
rehabilitation which really solves that

176
00:07:17,590 --> 00:07:22,539
all together he will he will drop three

177
00:07:20,200 --> 00:07:24,010
three and every four requests after a

178
00:07:22,540 --> 00:07:26,500
certain threshold and then the remaining

179
00:07:24,010 --> 00:07:28,630
request it will crumb cake force the

180
00:07:26,500 --> 00:07:32,530
connection to be done over TCP instead

181
00:07:28,630 --> 00:07:35,169
which is just the paid criteria attack

182
00:07:32,530 --> 00:07:36,429
compared to the UDP stuff and then all

183
00:07:35,169 --> 00:07:39,909
the Y's it's just preventing the right

184
00:07:36,430 --> 00:07:43,570
easier thing so to solve the yo-yo issue

185
00:07:39,910 --> 00:07:45,970
with the client security side the deep

186
00:07:43,570 --> 00:07:48,430
right working group was founded in 2014

187
00:07:45,970 --> 00:07:52,840
and it proposed the first two which are

188
00:07:48,430 --> 00:07:54,700
doing a TLS and DNS over DT is now the

189
00:07:52,840 --> 00:07:57,010
NSLP right it'll literally as it sounds

190
00:07:54,700 --> 00:07:59,530
it's just the DNS protocol just look on

191
00:07:57,010 --> 00:08:03,070
top of TLS and it uses a different court

192
00:07:59,530 --> 00:08:04,869
and there's some use of it now Android

193
00:08:03,070 --> 00:08:07,030
nine the room the pointer that you can

194
00:08:04,870 --> 00:08:08,139
find execution private or secured in a

195
00:08:07,030 --> 00:08:10,960
city Wi-Fi zones

196
00:08:08,139 --> 00:08:13,870
you know ashamed and it's curious I can

197
00:08:10,960 --> 00:08:15,580
actually resolve and the client and that

198
00:08:13,870 --> 00:08:18,729
this is the bit more controversial one

199
00:08:15,580 --> 00:08:22,090
so this is DNS server HTTP so proposed

200
00:08:18,729 --> 00:08:24,610
by a Google car fly Zilla it sends the

201
00:08:22,090 --> 00:08:26,109
DNS queries over HTTPS instead so it

202
00:08:24,610 --> 00:08:29,680
will send them to a just then one at

203
00:08:26,110 --> 00:08:32,529
endpoint using pop3 out everything else

204
00:08:29,680 --> 00:08:34,169
on HTTP he can't be distinguishing

205
00:08:32,529 --> 00:08:37,539
network traffic a moment because of the

206
00:08:34,169 --> 00:08:39,010
the s and I thought that because that's

207
00:08:37,539 --> 00:08:41,799
also going to be encrypted with chaos

208
00:08:39,010 --> 00:08:43,120
pop3 and Firefox israelian pointed it

209
00:08:41,799 --> 00:08:44,949
that's why they got that wonderful

210
00:08:43,120 --> 00:08:48,010
combination for the internet villains

211
00:08:44,950 --> 00:08:49,630
award and chrome is actually an iminium

212
00:08:48,010 --> 00:08:52,660
point a as well so we'll see a Google

213
00:08:49,630 --> 00:08:54,250
bit nominate an exit so some

214
00:08:52,660 --> 00:08:56,410
considerations with the

215
00:08:54,250 --> 00:08:59,740
the effectively secured the connections

216
00:08:56,410 --> 00:09:01,269
however many of the organizations many

217
00:08:59,740 --> 00:09:02,440
organization is very much in use DNS

218
00:09:01,269 --> 00:09:04,450
filtering as well as part of their

219
00:09:02,440 --> 00:09:06,610
security mechanism especially things

220
00:09:04,450 --> 00:09:09,850
like schools and banks and things like

221
00:09:06,610 --> 00:09:12,880
that so this big challenge here is that

222
00:09:09,850 --> 00:09:15,610
if you use dynamics of a HTTPS you have

223
00:09:12,880 --> 00:09:17,079
to deal with TLS 1.3 next so which means

224
00:09:15,610 --> 00:09:18,670
you've not only got to intercept or

225
00:09:17,079 --> 00:09:21,189
normal web requests you also have to

226
00:09:18,670 --> 00:09:23,079
accept that the DNS requests as well so

227
00:09:21,190 --> 00:09:24,430
there's a few problems that most of

228
00:09:23,079 --> 00:09:27,219
these are result by running one inside

229
00:09:24,430 --> 00:09:29,229
your network the resolver inside your

230
00:09:27,220 --> 00:09:31,320
network it's just not a decent

231
00:09:29,230 --> 00:09:34,269
implementation yet for internal networks

232
00:09:31,320 --> 00:09:40,209
and here middle boxes are going to be a

233
00:09:34,269 --> 00:09:42,940
problem yeah you can use the answer HTTP

234
00:09:40,209 --> 00:09:46,899
already home so you can get pie hole and

235
00:09:42,940 --> 00:09:48,820
you can use comedy to ship it so so

236
00:09:46,899 --> 00:09:52,060
proxy for there next to any of your

237
00:09:48,820 --> 00:09:54,010
remote any remoteness of HTTP service I

238
00:09:52,060 --> 00:09:56,410
use the Raspberry Pi 3 be without an

239
00:09:54,010 --> 00:09:58,959
issue switched over to a different unit

240
00:09:56,410 --> 00:10:02,589
because the I was a and overheating but

241
00:09:58,959 --> 00:10:05,079
yeah so few problems with this and most

242
00:10:02,589 --> 00:10:06,640
of them being worked on yeah there's

243
00:10:05,079 --> 00:10:09,219
some more info there including all the

244
00:10:06,640 --> 00:10:12,550
specifications and things and and couple

245
00:10:09,220 --> 00:10:17,020
guides yeah thank you very much

246
00:10:12,550 --> 00:10:27,540
any questions I realized it was very

247
00:10:17,020 --> 00:10:27,540
quick probably yes

248
00:10:27,740 --> 00:10:30,809
[Music]

