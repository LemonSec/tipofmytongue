1
00:00:04,160 --> 00:00:04,960
hi everyone

2
00:00:04,960 --> 00:00:07,839
i'm alicia your mc for today's workshop

3
00:00:07,839 --> 00:00:08,800
in this workshop

4
00:00:08,800 --> 00:00:11,040
zero to hero ish your journey to car

5
00:00:11,040 --> 00:00:12,240
hacking begins

6
00:00:12,240 --> 00:00:14,320
division zero's class security quarter

7
00:00:14,320 --> 00:00:16,000
core team alina tan

8
00:00:16,000 --> 00:00:18,960
edmond lim tan paisle and javier young

9
00:00:18,960 --> 00:00:21,039
will cover both theoretical vehicular

10
00:00:21,039 --> 00:00:22,560
knowledge and practical hands-on

11
00:00:22,560 --> 00:00:23,519
activities

12
00:00:23,519 --> 00:00:27,199
please welcome them hi everyone

13
00:00:27,199 --> 00:00:29,439
we are the cast ready quarter so today

14
00:00:29,439 --> 00:00:30,240
i'll be presenting

15
00:00:30,240 --> 00:00:32,479
from zero to heberish your journey to

16
00:00:32,479 --> 00:00:33,680
cartoon begins

17
00:00:33,680 --> 00:00:36,160
so my name is alina uh beside me is jbl

18
00:00:36,160 --> 00:00:37,680
bottom left is pacer

19
00:00:37,680 --> 00:00:40,640
and bottom right is edmund so let's

20
00:00:40,640 --> 00:00:45,840
begin our presentation

21
00:00:47,360 --> 00:00:49,600
okay so for today's agenda we'll be

22
00:00:49,600 --> 00:00:50,800
talking about uh

23
00:00:50,800 --> 00:00:53,199
theoretical vehicular knowledge so i'll

24
00:00:53,199 --> 00:00:54,480
be going through the introduction to

25
00:00:54,480 --> 00:00:56,719
nuclear architecture and technology

26
00:00:56,719 --> 00:00:58,879
uh the overview of basically hearing

27
00:00:58,879 --> 00:01:00,480
network protocols

28
00:01:00,480 --> 00:01:02,320
and the introduction to regular threat

29
00:01:02,320 --> 00:01:03,840
landscape and

30
00:01:03,840 --> 00:01:06,000
international vehicular standards and

31
00:01:06,000 --> 00:01:06,880
then followed by

32
00:01:06,880 --> 00:01:08,960
jv and pc will go through the cambus

33
00:01:08,960 --> 00:01:11,119
protocol cam free

34
00:01:11,119 --> 00:01:13,680
introduction to currently tools and also

35
00:01:13,680 --> 00:01:15,360
the practical aspects

36
00:01:15,360 --> 00:01:18,479
for the session itself and

37
00:01:18,479 --> 00:01:20,720
edmund will be going through the rest of

38
00:01:20,720 --> 00:01:22,080
it isotp protocol

39
00:01:22,080 --> 00:01:27,040
uds mostly factory and automotive

40
00:01:27,040 --> 00:01:29,360
yeah so uh this portion as well uh

41
00:01:29,360 --> 00:01:30,799
you'll be going through by

42
00:01:30,799 --> 00:01:34,079
travia and pc okay

43
00:01:34,079 --> 00:01:36,320
so basically uh you can't see our faces

44
00:01:36,320 --> 00:01:38,400
now but here's photo of us and top right

45
00:01:38,400 --> 00:01:39,360
hand corner

46
00:01:39,360 --> 00:01:42,399
so uh um basically i

47
00:01:42,399 --> 00:01:43,680
i'm earlier you know my teammates are

48
00:01:43,680 --> 00:01:45,680
placed at managerial so

49
00:01:45,680 --> 00:01:48,159
um csp itself we have a total of 20

50
00:01:48,159 --> 00:01:49,119
class members

51
00:01:49,119 --> 00:01:50,640
uh we are also part of the wider

52
00:01:50,640 --> 00:01:52,240
subsequent community here in singapore

53
00:01:52,240 --> 00:01:53,680
called division zero

54
00:01:53,680 --> 00:01:56,640
uh and csp also powers uh the automotive

55
00:01:56,640 --> 00:01:57,920
security research group

56
00:01:57,920 --> 00:01:59,680
based in stuttgart uh the singapore

57
00:01:59,680 --> 00:02:01,439
chapter asrg sim

58
00:02:01,439 --> 00:02:03,360
yeah so if you would like to join us

59
00:02:03,360 --> 00:02:05,680
feel free to give us a shout out and

60
00:02:05,680 --> 00:02:07,280
our twitter handlers are right beside

61
00:02:07,280 --> 00:02:09,280
our names

62
00:02:09,280 --> 00:02:10,959
okay so basically the goals of class

63
00:02:10,959 --> 00:02:12,959
quality quarter is to facilitate and

64
00:02:12,959 --> 00:02:14,720
promote to multi-subsecurity awareness

65
00:02:14,720 --> 00:02:15,200
to the

66
00:02:15,200 --> 00:02:17,840
community here in singapore we see that

67
00:02:17,840 --> 00:02:19,440
there is a lack of

68
00:02:19,440 --> 00:02:21,680
automotive knowledge about the community

69
00:02:21,680 --> 00:02:22,959
here hence

70
00:02:22,959 --> 00:02:24,480
we wanted to empower like-minded

71
00:02:24,480 --> 00:02:26,400
security enthusiasts in gaming cancer

72
00:02:26,400 --> 00:02:27,440
experiences

73
00:02:27,440 --> 00:02:29,120
and ultimately want to contribute to the

74
00:02:29,120 --> 00:02:30,879
automotive security industry

75
00:02:30,879 --> 00:02:33,280
through our research community

76
00:02:33,280 --> 00:02:35,200
engagement and building of our test

77
00:02:35,200 --> 00:02:37,120
benches

78
00:02:37,120 --> 00:02:39,760
okay so let's get started this is an

79
00:02:39,760 --> 00:02:40,560
overall

80
00:02:40,560 --> 00:02:43,200
vehicle architecture of a modern vehicle

81
00:02:43,200 --> 00:02:44,800
where you have a central gateway being

82
00:02:44,800 --> 00:02:46,400
linked to the center device

83
00:02:46,400 --> 00:02:48,480
that's actually the majority of the

84
00:02:48,480 --> 00:02:50,239
components such as the

85
00:02:50,239 --> 00:02:52,879
ecu infotainment obd2 port and

86
00:02:52,879 --> 00:02:54,080
telematics

87
00:02:54,080 --> 00:02:55,840
so as you can see the boxes marked in

88
00:02:55,840 --> 00:02:57,120
raid are actually your aftermarket

89
00:02:57,120 --> 00:02:58,640
devices that can be connected to your

90
00:02:58,640 --> 00:03:01,200
obd2 port or your central gateway

91
00:03:01,200 --> 00:03:02,879
your cell phones are also an external

92
00:03:02,879 --> 00:03:04,560
device that can be connected to make a

93
00:03:04,560 --> 00:03:06,000
phone call

94
00:03:06,000 --> 00:03:09,440
to your telematics itself so a majority

95
00:03:09,440 --> 00:03:11,040
of the architecture actually runs on

96
00:03:11,040 --> 00:03:12,159
canvas and bus

97
00:03:12,159 --> 00:03:14,000
however in some vehicles it will be a

98
00:03:14,000 --> 00:03:16,400
mixture of motive ethernet and can bus

99
00:03:16,400 --> 00:03:18,480
or even bars and other protocols but

100
00:03:18,480 --> 00:03:19,519
we'll go through uh

101
00:03:19,519 --> 00:03:23,200
that more afterwards

102
00:03:23,760 --> 00:03:26,319
okay so uh i will first start off with

103
00:03:26,319 --> 00:03:26,799
uh

104
00:03:26,799 --> 00:03:28,799
the definition of traditional vehicles

105
00:03:28,799 --> 00:03:30,560
so basically traditional beakers are

106
00:03:30,560 --> 00:03:32,000
also known as mechanical horses

107
00:03:32,000 --> 00:03:34,159
that gets you from point a to point b

108
00:03:34,159 --> 00:03:35,760
however um you know vehicles are

109
00:03:35,760 --> 00:03:37,760
essentially computers from wheels

110
00:03:37,760 --> 00:03:40,319
uh that have actually multiple embedded

111
00:03:40,319 --> 00:03:42,480
devices known as ecu's electronic

112
00:03:42,480 --> 00:03:44,080
control units they actually control

113
00:03:44,080 --> 00:03:46,239
different functionalities of the vehicle

114
00:03:46,239 --> 00:03:47,840
so uh i would like to bring our

115
00:03:47,840 --> 00:03:49,840
attention over to the bottom

116
00:03:49,840 --> 00:03:52,319
right hand side of the box highlighted

117
00:03:52,319 --> 00:03:53,200
in

118
00:03:53,200 --> 00:03:56,080
raid itself so the first ecu was

119
00:03:56,080 --> 00:03:58,879
actually created by bmw in 1939

120
00:03:58,879 --> 00:04:02,480
and uh the canvas is actually

121
00:04:02,480 --> 00:04:04,640
which is one of the most important

122
00:04:04,640 --> 00:04:05,760
protocols

123
00:04:05,760 --> 00:04:08,239
commonly used commonly used by leaders

124
00:04:08,239 --> 00:04:09,040
now

125
00:04:09,040 --> 00:04:11,280
called the controller area network was

126
00:04:11,280 --> 00:04:13,120
created by robert bosch

127
00:04:13,120 --> 00:04:17,040
group in 1983 and the first

128
00:04:17,040 --> 00:04:19,199
connected car to feature you know

129
00:04:19,199 --> 00:04:20,798
connected functionalities was actually

130
00:04:20,798 --> 00:04:25,280
brought in by general motors in 1996.

131
00:04:25,600 --> 00:04:28,400
okay so as we progress further uh from

132
00:04:28,400 --> 00:04:30,160
our traditional vehicles we have our

133
00:04:30,160 --> 00:04:32,000
next generation of vehicles known as

134
00:04:32,000 --> 00:04:33,440
connected vehicles

135
00:04:33,440 --> 00:04:36,000
so uh we actually commonly see connected

136
00:04:36,000 --> 00:04:37,440
leakers on the road right now

137
00:04:37,440 --> 00:04:38,880
so essentially connected vehicles

138
00:04:38,880 --> 00:04:40,240
actually allow communication with

139
00:04:40,240 --> 00:04:42,320
external devices and have the capability

140
00:04:42,320 --> 00:04:44,639
of connecting over wireless networks

141
00:04:44,639 --> 00:04:47,199
so some of these features are cellular

142
00:04:47,199 --> 00:04:49,280
connectivity which allow manufacturers

143
00:04:49,280 --> 00:04:50,000
to push

144
00:04:50,000 --> 00:04:51,600
software of the inspire over the air

145
00:04:51,600 --> 00:04:54,560
channel unfortunately these features not

146
00:04:54,560 --> 00:04:56,000
currently available in singapore

147
00:04:56,000 --> 00:04:58,400
yet but it's coming in the future and

148
00:04:58,400 --> 00:04:59,600
then next we have the

149
00:04:59,600 --> 00:05:01,520
adas which is known as the advanced

150
00:05:01,520 --> 00:05:02,960
driver assistance systems

151
00:05:02,960 --> 00:05:05,440
which is actually designed to reduce

152
00:05:05,440 --> 00:05:08,080
human fatalities and reduce correlations

153
00:05:08,080 --> 00:05:10,080
and something similar to like collision

154
00:05:10,080 --> 00:05:12,000
avoidance and cruise control

155
00:05:12,000 --> 00:05:13,360
they actually can be found in the

156
00:05:13,360 --> 00:05:16,080
adaptive features itself

157
00:05:16,080 --> 00:05:18,080
then finally you have your in-vehicle

158
00:05:18,080 --> 00:05:19,759
information systems that actually allow

159
00:05:19,759 --> 00:05:21,840
a driver to make a phone call

160
00:05:21,840 --> 00:05:23,840
from their vehicle via their cell phone

161
00:05:23,840 --> 00:05:25,120
voice control and

162
00:05:25,120 --> 00:05:28,240
actually allow them to text messages or

163
00:05:28,240 --> 00:05:30,639
even check on the legal help fire the

164
00:05:30,639 --> 00:05:33,600
diagnostic systems

165
00:05:35,039 --> 00:05:36,720
okay so as we progress further with

166
00:05:36,720 --> 00:05:38,479
technology we have the future

167
00:05:38,479 --> 00:05:40,400
which is known as the autonomous

168
00:05:40,400 --> 00:05:42,080
vehicles so

169
00:05:42,080 --> 00:05:44,880
an autonomous vehicle which is short

170
00:05:44,880 --> 00:05:45,919
form for av

171
00:05:45,919 --> 00:05:47,919
so it actually operates via sensors

172
00:05:47,919 --> 00:05:49,919
actuators and algorithms

173
00:05:49,919 --> 00:05:52,240
so ideally we should actually operate it

174
00:05:52,240 --> 00:05:54,320
without any human involvement

175
00:05:54,320 --> 00:05:56,000
there is also six levels of driving

176
00:05:56,000 --> 00:05:59,360
automation divided by defined by the sae

177
00:05:59,360 --> 00:06:02,240
which is level zero from fully manual to

178
00:06:02,240 --> 00:06:02,960
level five

179
00:06:02,960 --> 00:06:06,400
fully autonomous so avs have the phone

180
00:06:06,400 --> 00:06:07,360
features

181
00:06:07,360 --> 00:06:09,600
so basically you have radars uh they

182
00:06:09,600 --> 00:06:11,199
actually monitors the position of nearby

183
00:06:11,199 --> 00:06:12,080
vehicles

184
00:06:12,080 --> 00:06:13,840
video cameras they actually allow a

185
00:06:13,840 --> 00:06:15,199
detection of traffic light and road

186
00:06:15,199 --> 00:06:16,000
signs

187
00:06:16,000 --> 00:06:18,400
uh lidar sensor that utilizes light to

188
00:06:18,400 --> 00:06:20,639
measure distances and load ages

189
00:06:20,639 --> 00:06:22,960
and then ultrasonic sensors to detect

190
00:06:22,960 --> 00:06:25,440
curves and other vehicles during parking

191
00:06:25,440 --> 00:06:28,720
and then we have the fms which is the

192
00:06:28,720 --> 00:06:30,160
fleet management system to actually

193
00:06:30,160 --> 00:06:32,240
control the fleet which you don't see

194
00:06:32,240 --> 00:06:32,880
here

195
00:06:32,880 --> 00:06:34,560
and of course the software to actually

196
00:06:34,560 --> 00:06:36,240
process all these sensory inputs to

197
00:06:36,240 --> 00:06:37,759
control acceleration breaking and

198
00:06:37,759 --> 00:06:40,240
scaring

199
00:06:40,720 --> 00:06:42,800
okay so having mentioned on the

200
00:06:42,800 --> 00:06:44,880
evolution of vehicles we now come to the

201
00:06:44,880 --> 00:06:46,479
communication protocols within the

202
00:06:46,479 --> 00:06:47,600
vehicle itself

203
00:06:47,600 --> 00:06:49,919
so these are the common uh computation

204
00:06:49,919 --> 00:06:50,720
for the course

205
00:06:50,720 --> 00:06:52,880
uh within a vehicle we have to actually

206
00:06:52,880 --> 00:06:54,400
secure it without

207
00:06:54,400 --> 00:06:56,960
uh it may proof as a potential attack

208
00:06:56,960 --> 00:06:58,319
vector for attackers

209
00:06:58,319 --> 00:07:00,960
so firstly we have the can bus as i

210
00:07:00,960 --> 00:07:01,520
mentioned

211
00:07:01,520 --> 00:07:04,400
on my first few slides so it's actually

212
00:07:04,400 --> 00:07:06,080
a message page protocol that actually

213
00:07:06,080 --> 00:07:06,720
allows my

214
00:07:06,720 --> 00:07:08,319
controllers and devices to communicate

215
00:07:08,319 --> 00:07:10,560
between false and vehicular networks

216
00:07:10,560 --> 00:07:12,479
uh unfortunately the cab bus itself is

217
00:07:12,479 --> 00:07:14,560
very short it's eight bytes

218
00:07:14,560 --> 00:07:16,400
so manufacturers have an improved

219
00:07:16,400 --> 00:07:18,479
version called the cambus fd

220
00:07:18,479 --> 00:07:20,960
uh which is known as the cambus flexible

221
00:07:20,960 --> 00:07:22,319
database

222
00:07:22,319 --> 00:07:24,240
it's an extension to original canvas

223
00:07:24,240 --> 00:07:26,479
protocol actually provides accurate

224
00:07:26,479 --> 00:07:27,599
real-time data

225
00:07:27,599 --> 00:07:30,080
as well and then we have the limbus

226
00:07:30,080 --> 00:07:31,759
which is known as local interconnect

227
00:07:31,759 --> 00:07:32,479
network

228
00:07:32,479 --> 00:07:35,120
it's mainly used in killer systems and

229
00:07:35,120 --> 00:07:37,280
you know other connectivity buses

230
00:07:37,280 --> 00:07:41,759
uh my admin will actually

231
00:07:41,759 --> 00:07:44,000
talk about it more later and then we

232
00:07:44,000 --> 00:07:45,599
have flex rate bus

233
00:07:45,599 --> 00:07:48,479
so factoring is usually used for uh

234
00:07:48,479 --> 00:07:50,720
critical systems such as brick by wire

235
00:07:50,720 --> 00:07:53,759
because it's high speed and um i know

236
00:07:53,759 --> 00:07:54,879
it's very expensive so

237
00:07:54,879 --> 00:07:57,039
usually you actually see it in higher

238
00:07:57,039 --> 00:07:58,319
end vehicles

239
00:07:58,319 --> 00:07:59,919
and then we have the most protocol which

240
00:07:59,919 --> 00:08:01,599
is known as the media oriented systems

241
00:08:01,599 --> 00:08:02,879
transport protocol

242
00:08:02,879 --> 00:08:04,639
which is commonly used in vehicle

243
00:08:04,639 --> 00:08:05,919
infotainment systems

244
00:08:05,919 --> 00:08:07,680
uh unfortunately the most protocol will

245
00:08:07,680 --> 00:08:09,919
be phased out uh soon enough

246
00:08:09,919 --> 00:08:12,080
but we still see some of the vehicles uh

247
00:08:12,080 --> 00:08:14,400
using the most protocol

248
00:08:14,400 --> 00:08:15,919
then lastly we have the automotive

249
00:08:15,919 --> 00:08:17,919
ethernet which actually provides

250
00:08:17,919 --> 00:08:19,919
interconnectivity between vehicles uh

251
00:08:19,919 --> 00:08:22,160
it's much lighter and faster the canvas

252
00:08:22,160 --> 00:08:24,080
again amber will be discussing more

253
00:08:24,080 --> 00:08:26,240
about this later in

254
00:08:26,240 --> 00:08:29,280
the presentation

255
00:08:29,440 --> 00:08:32,479
okay so and then we have the uh several

256
00:08:32,479 --> 00:08:34,559
serial communications between the ecu

257
00:08:34,559 --> 00:08:36,440
which is just in standard of

258
00:08:36,440 --> 00:08:40,240
j1708 then j1850

259
00:08:40,240 --> 00:08:42,399
is uh is basically used for diagnostics

260
00:08:42,399 --> 00:08:44,560
and data sharing application using pulse

261
00:08:44,560 --> 00:08:45,760
rate modulation

262
00:08:45,760 --> 00:08:48,399
and then we have the sae j1939 which

263
00:08:48,399 --> 00:08:50,240
defines the communication between nodes

264
00:08:50,240 --> 00:08:52,240
and used for b for dynamics as well

265
00:08:52,240 --> 00:08:53,920
and then we have the keyword protocol

266
00:08:53,920 --> 00:08:55,600
2000 which is known as

267
00:08:55,600 --> 00:08:59,040
short form kwp2000 which is used for uh

268
00:08:59,040 --> 00:09:01,600
obd2 and uh covers the application

269
00:09:01,600 --> 00:09:02,240
essentially

270
00:09:02,240 --> 00:09:05,120
the osi layer model and finally the

271
00:09:05,120 --> 00:09:06,560
isotp protocol

272
00:09:06,560 --> 00:09:08,240
which actually allows sending of more

273
00:09:08,240 --> 00:09:10,320
than eight bytes of data packets over

274
00:09:10,320 --> 00:09:11,200
canvas

275
00:09:11,200 --> 00:09:13,600
and it can uh allow the ability to

276
00:09:13,600 --> 00:09:14,800
actually change the message into

277
00:09:14,800 --> 00:09:15,920
multiple phrase

278
00:09:15,920 --> 00:09:17,360
uh which actually allows a maximum

279
00:09:17,360 --> 00:09:18,959
payload of capacity of four thousand

280
00:09:18,959 --> 00:09:19,680
zero nine

281
00:09:19,680 --> 00:09:22,560
five parts a bit more even more than

282
00:09:22,560 --> 00:09:25,518
they can fd itself

283
00:09:25,920 --> 00:09:27,600
so um after going through all the

284
00:09:27,600 --> 00:09:29,680
commonly used particular protocols if

285
00:09:29,680 --> 00:09:30,959
they are not secured correctly

286
00:09:30,959 --> 00:09:33,040
it will actually result in an increase

287
00:09:33,040 --> 00:09:34,480
in the amount of potential attack

288
00:09:34,480 --> 00:09:36,080
surfaces which i'm going to briefly

289
00:09:36,080 --> 00:09:37,600
touch on over here

290
00:09:37,600 --> 00:09:40,399
so firstly we have the ota updates so

291
00:09:40,399 --> 00:09:42,000
attackers may be able to actually

292
00:09:42,000 --> 00:09:43,120
intercept traffic

293
00:09:43,120 --> 00:09:44,640
from the cellular channel and push

294
00:09:44,640 --> 00:09:47,360
militias over in the leader system

295
00:09:47,360 --> 00:09:49,920
as for the ecu's over on the right hand

296
00:09:49,920 --> 00:09:51,920
side they can actually include critical

297
00:09:51,920 --> 00:09:55,279
control units such as your pcm which is

298
00:09:55,279 --> 00:09:57,760
known as your powertrain control module

299
00:09:57,760 --> 00:10:00,959
your ecm engine control module and the

300
00:10:00,959 --> 00:10:02,480
attackers are able to actually access

301
00:10:02,480 --> 00:10:04,399
through this opt2 port to obtain

302
00:10:04,399 --> 00:10:06,160
information to the vehicle's internet

303
00:10:06,160 --> 00:10:07,120
network

304
00:10:07,120 --> 00:10:09,120
uh attackers are also able to do a

305
00:10:09,120 --> 00:10:11,040
manual mirror to obtain campus data to

306
00:10:11,040 --> 00:10:12,000
control the legal

307
00:10:12,000 --> 00:10:14,000
if let's say the obd2 ports actually

308
00:10:14,000 --> 00:10:15,120
block

309
00:10:15,120 --> 00:10:17,519
so as for remote hijacking uber on the

310
00:10:17,519 --> 00:10:18,399
bottom

311
00:10:18,399 --> 00:10:21,600
right hand side of the vehicular tab

312
00:10:21,600 --> 00:10:22,079
itself

313
00:10:22,079 --> 00:10:24,000
attackers are able to pull key fobs by

314
00:10:24,000 --> 00:10:26,320
skipping the signal sent by the remote

315
00:10:26,320 --> 00:10:28,000
and clone the frequency or perform a

316
00:10:28,000 --> 00:10:29,360
road gem attack which

317
00:10:29,360 --> 00:10:31,760
actually involves jamming the frequency

318
00:10:31,760 --> 00:10:33,519
and capturing the unlock key

319
00:10:33,519 --> 00:10:37,040
to unlock illegal so for ransomware

320
00:10:37,040 --> 00:10:40,320
uh over here in slightly in the middle

321
00:10:40,320 --> 00:10:42,560
the attackers may be able to compromise

322
00:10:42,560 --> 00:10:44,000
the vehicle by asking for some more

323
00:10:44,000 --> 00:10:46,240
money to unlock the vehicle to drive

324
00:10:46,240 --> 00:10:48,480
or even considering attacking the supply

325
00:10:48,480 --> 00:10:50,079
chain by installing vendor on the

326
00:10:50,079 --> 00:10:51,360
manufacturers and

327
00:10:51,360 --> 00:10:54,480
kilmer suppliers all right attackers may

328
00:10:54,480 --> 00:10:56,160
be able to actually control the fleet

329
00:10:56,160 --> 00:10:58,000
management on the vehicle systems to

330
00:10:58,000 --> 00:10:59,680
actually attack the vehicle and control

331
00:10:59,680 --> 00:11:00,000
them

332
00:11:00,000 --> 00:11:02,560
making them like portnets and use it for

333
00:11:02,560 --> 00:11:04,959
distributed denial of service attacks

334
00:11:04,959 --> 00:11:06,399
there should there are also actually

335
00:11:06,399 --> 00:11:08,560
different potential attack factors such

336
00:11:08,560 --> 00:11:09,440
as

337
00:11:09,440 --> 00:11:12,640
spoofing attacks on lidar sensors camera

338
00:11:12,640 --> 00:11:14,160
sensor attacks and spoofing

339
00:11:14,160 --> 00:11:16,560
rivers can reverse parking sensors over

340
00:11:16,560 --> 00:11:17,600
on the left hand side

341
00:11:17,600 --> 00:11:20,399
of the slide

342
00:11:21,040 --> 00:11:23,600
okay so after touching on all the vagus

343
00:11:23,600 --> 00:11:25,120
potential attack vectors here are the

344
00:11:25,120 --> 00:11:26,720
research types that we're using on

345
00:11:26,720 --> 00:11:27,200
connected

346
00:11:27,200 --> 00:11:30,079
vehicles so for example in august 2020

347
00:11:30,079 --> 00:11:31,040
during a blackhead

348
00:11:31,040 --> 00:11:33,680
security conference the security

349
00:11:33,680 --> 00:11:35,760
researchers from the 360

350
00:11:35,760 --> 00:11:38,399
group sky goal team based in china have

351
00:11:38,399 --> 00:11:39,920
actually uncovered some security bugs

352
00:11:39,920 --> 00:11:42,240
that can liberally control some fleet of

353
00:11:42,240 --> 00:11:44,560
universities ben's vehicles for example

354
00:11:44,560 --> 00:11:46,640
like starting off the engine

355
00:11:46,640 --> 00:11:49,760
so uh in 2019 during uh

356
00:11:49,760 --> 00:11:51,040
you know the blackhead conference

357
00:11:51,040 --> 00:11:53,519
tencent team labs security researchers

358
00:11:53,519 --> 00:11:54,639
also based in china

359
00:11:54,639 --> 00:11:55,839
have discovered about eight

360
00:11:55,839 --> 00:11:57,839
vulnerabilities uh zero days

361
00:11:57,839 --> 00:11:59,839
uh bmw directory allowed attackers to

362
00:11:59,839 --> 00:12:02,240
remotely attack the number of bmw models

363
00:12:02,240 --> 00:12:03,839
through various means like infotainment

364
00:12:03,839 --> 00:12:06,240
systems and bmw ports

365
00:12:06,240 --> 00:12:09,600
and over here in december 2019 bmw and

366
00:12:09,600 --> 00:12:11,600
gta have allegedly been attacked by

367
00:12:11,600 --> 00:12:13,920
an apt group known as ocean lotus or

368
00:12:13,920 --> 00:12:15,200
apg-32

369
00:12:15,200 --> 00:12:18,639
so a um apg-22 have infiltrated

370
00:12:18,639 --> 00:12:21,279
these corporate networks of these two

371
00:12:21,279 --> 00:12:23,360
manufacturers supposedly to steal trade

372
00:12:23,360 --> 00:12:25,040
secrets and intellectual

373
00:12:25,040 --> 00:12:26,959
design for a start-up company or owned

374
00:12:26,959 --> 00:12:29,680
by the state union

375
00:12:29,680 --> 00:12:31,680
so earlier on i actually mentioned some

376
00:12:31,680 --> 00:12:33,040
of the supply chain attacks

377
00:12:33,040 --> 00:12:35,920
so one example is over here so in july

378
00:12:35,920 --> 00:12:38,480
2020 the uk call center utilized by

379
00:12:38,480 --> 00:12:39,680
several car makers have actually

380
00:12:39,680 --> 00:12:41,839
suffered data breach and over 500 000

381
00:12:41,839 --> 00:12:43,680
customers were actually affected

382
00:12:43,680 --> 00:12:46,639
so similarly in 2019 1 million customer

383
00:12:46,639 --> 00:12:48,480
records were stolen into the dust hack

384
00:12:48,480 --> 00:12:49,200
which was

385
00:12:49,200 --> 00:12:52,480
allegedly conducted by apg-1022 as well

386
00:12:52,480 --> 00:12:55,040
so although there hasn't really been a

387
00:12:55,040 --> 00:12:57,040
major cyber attack on this vehicles it

388
00:12:57,040 --> 00:12:58,720
could potentially happen to our votes

389
00:12:58,720 --> 00:13:01,600
here in singapore

390
00:13:02,720 --> 00:13:04,399
and these are the attacks that we have

391
00:13:04,399 --> 00:13:06,079
been seeing for the past few years

392
00:13:06,079 --> 00:13:07,600
the most famous one being the chief

393
00:13:07,600 --> 00:13:09,200
trophy attacks by the two security

394
00:13:09,200 --> 00:13:10,240
researchers uh

395
00:13:10,240 --> 00:13:12,160
chris bellassai and charlie nina and

396
00:13:12,160 --> 00:13:13,839
they were able to literally control the

397
00:13:13,839 --> 00:13:15,440
steering and kill the engine at high

398
00:13:15,440 --> 00:13:16,240
speed

399
00:13:16,240 --> 00:13:18,079
there were also zero day vulnerabilities

400
00:13:18,079 --> 00:13:19,839
that allow attackers to tamper with the

401
00:13:19,839 --> 00:13:22,079
vehicle through bmw portal

402
00:13:22,079 --> 00:13:24,959
and through these unpatched flaws in

403
00:13:24,959 --> 00:13:27,120
2016.

404
00:13:27,120 --> 00:13:30,000
so in 2018 tesla's keyless entry was

405
00:13:30,000 --> 00:13:32,160
really vulnerable to sporting attack

406
00:13:32,160 --> 00:13:33,920
security researchers were able to clone

407
00:13:33,920 --> 00:13:35,600
the keyport by just walking past the

408
00:13:35,600 --> 00:13:36,399
owner

409
00:13:36,399 --> 00:13:37,920
however this can be resolved by adding

410
00:13:37,920 --> 00:13:40,720
the machine to the key fob itself

411
00:13:40,720 --> 00:13:43,199
and then in 2019 tesla's compiler was

412
00:13:43,199 --> 00:13:45,839
compromised by kidnaps researchers

413
00:13:45,839 --> 00:13:48,079
by using train stickers by tricking the

414
00:13:48,079 --> 00:13:49,440
autopilot technology

415
00:13:49,440 --> 00:13:52,000
and steered the vehicle into oncoming

416
00:13:52,000 --> 00:13:54,320
traffic

417
00:13:55,279 --> 00:13:57,279
so earlier on i actually mentioned the

418
00:13:57,279 --> 00:13:59,600
six levels of automation ranging from se

419
00:13:59,600 --> 00:14:00,800
zero

420
00:14:00,800 --> 00:14:03,440
node automation basically and to sae

421
00:14:03,440 --> 00:14:04,880
levels one and two which

422
00:14:04,880 --> 00:14:07,760
features the ada's and driver assistance

423
00:14:07,760 --> 00:14:08,720
systems

424
00:14:08,720 --> 00:14:11,040
and also sae level three and four which

425
00:14:11,040 --> 00:14:13,040
features conditional automation for high

426
00:14:13,040 --> 00:14:13,760
automation

427
00:14:13,760 --> 00:14:16,480
for safety driver facility level 4 and

428
00:14:16,480 --> 00:14:18,639
sc level 5 for full automation for fully

429
00:14:18,639 --> 00:14:20,079
automated vehicles

430
00:14:20,079 --> 00:14:23,120
so um level 4 itself you still have run

431
00:14:23,120 --> 00:14:24,480
on geofencing

432
00:14:24,480 --> 00:14:27,199
so um as of now we are currently at the

433
00:14:27,199 --> 00:14:29,120
state of sae level 102

434
00:14:29,120 --> 00:14:30,320
i understand that there are actually

435
00:14:30,320 --> 00:14:32,160
talks of releasing vehicles in the near

436
00:14:32,160 --> 00:14:32,800
future

437
00:14:32,800 --> 00:14:35,600
years on sae level three however as we

438
00:14:35,600 --> 00:14:36,079
progress

439
00:14:36,079 --> 00:14:38,720
um towards autonomous speakers that's

440
00:14:38,720 --> 00:14:40,639
how we unavoidably introduce new

441
00:14:40,639 --> 00:14:42,399
sub-physical risks

442
00:14:42,399 --> 00:14:45,120
so for example um long distance remote

443
00:14:45,120 --> 00:14:45,760
attacks

444
00:14:45,760 --> 00:14:47,279
compromising the field management

445
00:14:47,279 --> 00:14:49,040
systems that governs the

446
00:14:49,040 --> 00:14:52,079
car updates uh car code updates and

447
00:14:52,079 --> 00:14:54,160
attacking the vehicle to allow complete

448
00:14:54,160 --> 00:14:55,600
cellular

449
00:14:55,600 --> 00:14:58,800
complete vehicular control and also for

450
00:14:58,800 --> 00:15:00,800
short distance remote types one example

451
00:15:00,800 --> 00:15:02,240
could be attacked against the tire

452
00:15:02,240 --> 00:15:03,600
pressure monitoring system

453
00:15:03,600 --> 00:15:06,480
which is known as the tpms a wi-fi cross

454
00:15:06,480 --> 00:15:07,600
module

455
00:15:07,600 --> 00:15:10,240
and then lastly for the uh access

456
00:15:10,240 --> 00:15:11,760
physical access attacks

457
00:15:11,760 --> 00:15:13,279
planting a device that will inject

458
00:15:13,279 --> 00:15:15,440
arbitrary data messages into the

459
00:15:15,440 --> 00:15:18,000
net network

460
00:15:19,519 --> 00:15:22,639
okay so to address all these threats

461
00:15:22,639 --> 00:15:23,360
that

462
00:15:23,360 --> 00:15:25,920
we see globally different countries have

463
00:15:25,920 --> 00:15:26,639
favors

464
00:15:26,639 --> 00:15:28,079
subsequently best practices and

465
00:15:28,079 --> 00:15:30,160
standards for the optometric industry

466
00:15:30,160 --> 00:15:32,880
so for in singapore we have the tr-68

467
00:15:32,880 --> 00:15:34,800
which is known as technical reference 68

468
00:15:34,800 --> 00:15:36,720
which addresses specifically autonomous

469
00:15:36,720 --> 00:15:37,600
vehicles

470
00:15:37,600 --> 00:15:40,639
specifically on which focuses on the

471
00:15:40,639 --> 00:15:42,399
subsecurity principles and assessment

472
00:15:42,399 --> 00:15:43,279
framework

473
00:15:43,279 --> 00:15:46,560
as for the eu region we have the ace

474
00:15:46,560 --> 00:15:47,920
principles of

475
00:15:47,920 --> 00:15:50,560
automobile cybersecurity and any sales

476
00:15:50,560 --> 00:15:52,079
publication on subsecurity and

477
00:15:52,079 --> 00:15:52,880
resilience

478
00:15:52,880 --> 00:15:56,079
of smart cars and as for iso standards

479
00:15:56,079 --> 00:15:58,560
we have the upcoming iso 21434

480
00:15:58,560 --> 00:16:00,959
vote vehicles subsequently engineering

481
00:16:00,959 --> 00:16:02,720
and u.n stake on the harmonization of

482
00:16:02,720 --> 00:16:05,920
vehicular regulations on wp-29

483
00:16:05,920 --> 00:16:07,839
and in the uk the government published

484
00:16:07,839 --> 00:16:09,279
the guidelines on

485
00:16:09,279 --> 00:16:11,839
the key principles of the subsecurity

486
00:16:11,839 --> 00:16:14,399
for connected automated vehicles

487
00:16:14,399 --> 00:16:16,560
and in the u.s we have the national

488
00:16:16,560 --> 00:16:17,920
highway traffic

489
00:16:17,920 --> 00:16:21,040
safety administration that came up with

490
00:16:21,040 --> 00:16:22,959
the automated speakers for safety

491
00:16:22,959 --> 00:16:23,680
article

492
00:16:23,680 --> 00:16:26,959
and the document of the fmvss which is

493
00:16:26,959 --> 00:16:28,720
known as the federal motor vehicle

494
00:16:28,720 --> 00:16:29,920
safety standards

495
00:16:29,920 --> 00:16:31,279
considerations for vehicles with

496
00:16:31,279 --> 00:16:32,959
automated driving systems

497
00:16:32,959 --> 00:16:34,800
although it doesn't really touch fully

498
00:16:34,800 --> 00:16:36,320
on cyber security

499
00:16:36,320 --> 00:16:38,160
it actually touches on the research

500
00:16:38,160 --> 00:16:39,440
findings in terms of

501
00:16:39,440 --> 00:16:41,839
options regarding technical translations

502
00:16:41,839 --> 00:16:42,720
of the

503
00:16:42,720 --> 00:16:46,000
fmvss and evaluates the regulatory text

504
00:16:46,000 --> 00:16:49,040
and test procedures aig briefly takes

505
00:16:49,040 --> 00:16:50,320
some security assessment into

506
00:16:50,320 --> 00:16:51,839
consideration

507
00:16:51,839 --> 00:16:54,079
so and also in the u.s itself the auto

508
00:16:54,079 --> 00:16:55,920
isaac is also formed and they launched

509
00:16:55,920 --> 00:16:57,680
the subsecurity best practices and

510
00:16:57,680 --> 00:16:58,959
guidelines document

511
00:16:58,959 --> 00:17:00,639
so if you are interested you can go to

512
00:17:00,639 --> 00:17:02,480
this website to check out

513
00:17:02,480 --> 00:17:05,839
more of these regulations

514
00:17:06,880 --> 00:17:09,359
okay so after briefly touching on the

515
00:17:09,359 --> 00:17:10,959
global best practices and standards

516
00:17:10,959 --> 00:17:12,559
let's dive into the international

517
00:17:12,559 --> 00:17:14,240
standards and regulations

518
00:17:14,240 --> 00:17:16,799
so for wp29 uh it's actually created by

519
00:17:16,799 --> 00:17:18,559
the uae

520
00:17:18,559 --> 00:17:20,240
inland transport community and it

521
00:17:20,240 --> 00:17:21,919
provides legal framework to allow

522
00:17:21,919 --> 00:17:23,439
contracting parties to establish

523
00:17:23,439 --> 00:17:25,599
regulatory instruments concerning

524
00:17:25,599 --> 00:17:29,039
water vehicles and equipment and as for

525
00:17:29,039 --> 00:17:31,280
the isotope for 34 it's a standard entry

526
00:17:31,280 --> 00:17:33,120
addresses the management of service

527
00:17:33,120 --> 00:17:35,039
really for goods and vehicles

528
00:17:35,039 --> 00:17:37,919
he actually set the minimum criteria for

529
00:17:37,919 --> 00:17:38,799
vehicular

530
00:17:38,799 --> 00:17:41,039
subsecurity engineering and establishes

531
00:17:41,039 --> 00:17:42,799
guidelines on cerabros without a safety

532
00:17:42,799 --> 00:17:44,080
operator

533
00:17:44,080 --> 00:17:47,440
and as for tr-68 is specifically for av

534
00:17:47,440 --> 00:17:48,960
systems here in singapore

535
00:17:48,960 --> 00:17:50,720
and it establishes the subsequent

536
00:17:50,720 --> 00:17:52,480
principles and assessment framework to

537
00:17:52,480 --> 00:17:53,360
support

538
00:17:53,360 --> 00:17:55,600
the development and management for avs

539
00:17:55,600 --> 00:17:56,880
so the assessment framework actually

540
00:17:56,880 --> 00:17:58,799
acts as a guideline for avs prior to

541
00:17:58,799 --> 00:18:00,960
actual deployment itself

542
00:18:00,960 --> 00:18:04,960
so next up we have the saj3061 it's

543
00:18:04,960 --> 00:18:06,640
actually a subsequently guardboard for

544
00:18:06,640 --> 00:18:08,640
several physical vehicle systems

545
00:18:08,640 --> 00:18:10,240
and establishes high level guiding

546
00:18:10,240 --> 00:18:12,000
principles for physical

547
00:18:12,000 --> 00:18:14,960
nuclear security however the e3761 will

548
00:18:14,960 --> 00:18:17,440
be superseded by iso 1.34 once it's

549
00:18:17,440 --> 00:18:18,320
completed

550
00:18:18,320 --> 00:18:21,520
so currently the iso 21434 is in uh

551
00:18:21,520 --> 00:18:25,039
i think it's in draft stage yeah

552
00:18:25,039 --> 00:18:27,919
and then lastly for iso 26262 although

553
00:18:27,919 --> 00:18:29,280
it's not standard focusing on some

554
00:18:29,280 --> 00:18:30,000
security

555
00:18:30,000 --> 00:18:31,520
it actually addresses the functional

556
00:18:31,520 --> 00:18:33,360
safety of the entire life cycle of the

557
00:18:33,360 --> 00:18:34,480
four beaker

558
00:18:34,480 --> 00:18:37,760
subsystem uh for the um

559
00:18:37,760 --> 00:18:40,720
the whole yeah subsystem on the vehicles

560
00:18:40,720 --> 00:18:41,520
itself

561
00:18:41,520 --> 00:18:44,080
okay so um next i'll be present uh

562
00:18:44,080 --> 00:18:45,440
passing all my presentations

563
00:18:45,440 --> 00:18:48,480
over to jbl and lisa will be talking to

564
00:18:48,480 --> 00:18:49,440
you more about

565
00:18:49,440 --> 00:18:53,280
the canvas protocol and the critical

566
00:18:53,280 --> 00:18:53,919
aspects

567
00:18:53,919 --> 00:18:57,120
so i hope you guys are not asleep yet

568
00:18:57,120 --> 00:19:00,880
okay uh thank you alina for uh

569
00:19:00,880 --> 00:19:04,400
so now i'll talk about the 10.4

570
00:19:04,400 --> 00:19:07,360
so the cat protocol um consists of two

571
00:19:07,360 --> 00:19:08,000
portions

572
00:19:08,000 --> 00:19:11,039
so one is can hand kendo uh kenhun

573
00:19:11,039 --> 00:19:11,760
operates at

574
00:19:11,760 --> 00:19:14,880
3.5 volts and kendo operates at 1.5

575
00:19:14,880 --> 00:19:16,080
volts

576
00:19:16,080 --> 00:19:18,640
uh ken high injury operates at pin six

577
00:19:18,640 --> 00:19:20,480
and the camera g operates at pin 14 of

578
00:19:20,480 --> 00:19:22,240
the obd2 port

579
00:19:22,240 --> 00:19:24,880
on the actual vehicle so in this

580
00:19:24,880 --> 00:19:26,480
particle you won't really be seeing this

581
00:19:26,480 --> 00:19:28,000
portion but if you don't try it out on

582
00:19:28,000 --> 00:19:29,520
an actual vehicle this is

583
00:19:29,520 --> 00:19:31,440
what you should be looking up for the

584
00:19:31,440 --> 00:19:33,039
canvas carries eight bytes of

585
00:19:33,039 --> 00:19:35,200
data and kenneth is actually technically

586
00:19:35,200 --> 00:19:37,039
just an extension of

587
00:19:37,039 --> 00:19:39,679
the camera core itself so it carries 64

588
00:19:39,679 --> 00:19:41,280
bytes of data

589
00:19:41,280 --> 00:19:43,120
there's a differential signaling for hot

590
00:19:43,120 --> 00:19:44,640
tolerance so

591
00:19:44,640 --> 00:19:47,679
for ken hi and kendo they will actually

592
00:19:47,679 --> 00:19:50,840
broadcast one block higher all over

593
00:19:50,840 --> 00:19:52,080
simultaneously

594
00:19:52,080 --> 00:19:54,880
as uh compared to like the resting

595
00:19:54,880 --> 00:19:55,760
voltage of

596
00:19:55,760 --> 00:19:59,200
2.5 volts it dominates after

597
00:19:59,200 --> 00:20:03,280
a 120 ohms and supported board rates

598
00:20:03,280 --> 00:20:06,720
are one two five 250

599
00:20:06,720 --> 00:20:12,799
500 and 1 mbps but usually it's 500 kps

600
00:20:12,960 --> 00:20:14,880
and this is actually how a cam frame

601
00:20:14,880 --> 00:20:16,240
looks like

602
00:20:16,240 --> 00:20:19,039
so to break it down there's a style

603
00:20:19,039 --> 00:20:20,000
frame

604
00:20:20,000 --> 00:20:23,520
identifier remote transmission request

605
00:20:23,520 --> 00:20:25,280
data link code there are a few stuffing

606
00:20:25,280 --> 00:20:27,679
beats and crc but what we really want to

607
00:20:27,679 --> 00:20:30,000
focus on is actually a data field so

608
00:20:30,000 --> 00:20:31,919
we'll show you on the next slide

609
00:20:31,919 --> 00:20:34,159
um the data field is the data to be

610
00:20:34,159 --> 00:20:35,520
transmitted

611
00:20:35,520 --> 00:20:38,400
it's usually a maximum of eight bytes

612
00:20:38,400 --> 00:20:39,600
long

613
00:20:39,600 --> 00:20:41,360
so let me just go to the next slide so

614
00:20:41,360 --> 00:20:43,039
if you can see in this actual can

615
00:20:43,039 --> 00:20:44,640
free you see that the other phase

616
00:20:44,640 --> 00:20:46,080
actually uh

617
00:20:46,080 --> 00:20:47,919
eight bytes long and you can actually

618
00:20:47,919 --> 00:20:49,520
see the interface and the ken

619
00:20:49,520 --> 00:20:50,400
arbitration

620
00:20:50,400 --> 00:20:53,760
id so this particular interface is

621
00:20:53,760 --> 00:20:57,360
can utils it's a live capture stream and

622
00:20:57,360 --> 00:20:58,320
this is actually what you'll be

623
00:20:58,320 --> 00:21:00,799
interacting with uh later on

624
00:21:00,799 --> 00:21:03,679
during the practical itself so slk 0 is

625
00:21:03,679 --> 00:21:04,480
the interface

626
00:21:04,480 --> 00:21:06,640
and for the vertical you actually see it

627
00:21:06,640 --> 00:21:07,679
to be

628
00:21:07,679 --> 00:21:10,320
v can 0 and state consistent virtual 10

629
00:21:10,320 --> 00:21:12,720
and then the second arbitration id

630
00:21:12,720 --> 00:21:16,480
and the data field

631
00:21:16,480 --> 00:21:18,960
so let's talk about the car hacking

632
00:21:18,960 --> 00:21:19,679
tools that

633
00:21:19,679 --> 00:21:22,799
are commonly used here the list of tools

634
00:21:22,799 --> 00:21:25,200
that you can use for

635
00:21:25,200 --> 00:21:28,320
uh can bus analysis

636
00:21:28,320 --> 00:21:30,240
so we'll we're really using this time

637
00:21:30,240 --> 00:21:31,919
around is canutils

638
00:21:31,919 --> 00:21:34,480
and these are all the links towards for

639
00:21:34,480 --> 00:21:34,960
the

640
00:21:34,960 --> 00:21:36,640
different tools that you can actually

641
00:21:36,640 --> 00:21:38,080
use

642
00:21:38,080 --> 00:21:40,720
and for simulation two steps udl that's

643
00:21:40,720 --> 00:21:45,039
udsm and icc

644
00:21:45,039 --> 00:21:47,600
so kudus is just a software can use the

645
00:21:47,600 --> 00:21:48,799
space

646
00:21:48,799 --> 00:21:50,320
application that has multiple

647
00:21:50,320 --> 00:21:52,720
functionalities um essentially what you

648
00:21:52,720 --> 00:21:54,080
really want to do with it is that you

649
00:21:54,080 --> 00:21:54,480
can

650
00:21:54,480 --> 00:21:58,080
generate can data it can replay

651
00:21:58,080 --> 00:22:00,960
the message that will send it can send

652
00:22:00,960 --> 00:22:01,919
messages

653
00:22:01,919 --> 00:22:05,360
display cam traffic and yeah you've

654
00:22:05,360 --> 00:22:07,360
actually experienced it for yourself

655
00:22:07,360 --> 00:22:09,760
later on there's also canva studios

656
00:22:09,760 --> 00:22:11,039
which is

657
00:22:11,039 --> 00:22:14,720
similar to tiny deals just as announcing

658
00:22:14,720 --> 00:22:17,919
analyzing canvas traffic

659
00:22:17,919 --> 00:22:20,559
there's also carrying caribou septican

660
00:22:20,559 --> 00:22:23,280
socket candy

661
00:22:23,280 --> 00:22:26,640
and uds sim and later i'll also be using

662
00:22:26,640 --> 00:22:27,039
is i

663
00:22:27,039 --> 00:22:29,520
season so iccin is an instrument cluster

664
00:22:29,520 --> 00:22:31,600
simulator for success

665
00:22:31,600 --> 00:22:35,600
and it works together with candidates

666
00:22:35,840 --> 00:22:38,640
so introduction to candidates so the

667
00:22:38,640 --> 00:22:40,400
main functionalities of candytales is

668
00:22:40,400 --> 00:22:42,080
canda which is display

669
00:22:42,080 --> 00:22:44,960
filtering and logging can data to a file

670
00:22:44,960 --> 00:22:46,400
that is specified

671
00:22:46,400 --> 00:22:48,640
kent layer is replaying can log files

672
00:22:48,640 --> 00:22:51,200
that you've recorded using tandem

673
00:22:51,200 --> 00:22:54,640
can say just sending a single frame of

674
00:22:54,640 --> 00:22:57,919
of data and then ken gen is

675
00:22:57,919 --> 00:23:00,000
randomly generating can traffic so this

676
00:23:00,000 --> 00:23:01,520
is actually really good for

677
00:23:01,520 --> 00:23:05,520
fuzzing and you get you actually

678
00:23:05,520 --> 00:23:08,480
it's much more useful when you want to

679
00:23:08,480 --> 00:23:09,679
fast like actual

680
00:23:09,679 --> 00:23:12,480
like live traffic from car uh ken

681
00:23:12,480 --> 00:23:14,720
sniffer is displaying can data content

682
00:23:14,720 --> 00:23:15,440
differences

683
00:23:15,440 --> 00:23:18,159
so when you lay down the practical

684
00:23:18,159 --> 00:23:20,559
actually you get to see like what

685
00:23:20,559 --> 00:23:22,080
what you can do with it and what you'll

686
00:23:22,080 --> 00:23:25,600
be able to view with it

687
00:23:25,679 --> 00:23:29,120
so now it's time for the practical

688
00:23:29,120 --> 00:23:31,360
so let's see i see sim is a software

689
00:23:31,360 --> 00:23:33,520
utility designed by open garages to

690
00:23:33,520 --> 00:23:34,880
produce a few

691
00:23:34,880 --> 00:23:36,640
key can signals to simulate an actual

692
00:23:36,640 --> 00:23:38,000
environment in the car and that's the

693
00:23:38,000 --> 00:23:40,799
link where you can download icsun from

694
00:23:40,799 --> 00:23:43,679
and it allows you to practice canvas

695
00:23:43,679 --> 00:23:44,400
reversing

696
00:23:44,400 --> 00:23:46,080
in a very safe environment so you won't

697
00:23:46,080 --> 00:23:48,240
be breaking any cars of your own

698
00:23:48,240 --> 00:23:50,880
anything that happens is completely fine

699
00:23:50,880 --> 00:23:52,320
and you can also change the difficulty

700
00:23:52,320 --> 00:23:53,279
levels

701
00:23:53,279 --> 00:23:55,120
by adding so you actually add more

702
00:23:55,120 --> 00:23:56,400
background noise which

703
00:23:56,400 --> 00:23:58,960
makes reversing much harder to perform

704
00:23:58,960 --> 00:24:00,880
as you go along

705
00:24:00,880 --> 00:24:03,520
and as in i also have icy sim which is

706
00:24:03,520 --> 00:24:04,960
the instrument cluster simulator for

707
00:24:04,960 --> 00:24:05,679
socket cam

708
00:24:05,679 --> 00:24:09,440
that works together with key tools

709
00:24:09,440 --> 00:24:13,120
so this is the installation so

710
00:24:13,120 --> 00:24:15,039
for all of you that's following the

711
00:24:15,039 --> 00:24:17,200
practical still

712
00:24:17,200 --> 00:24:18,960
uh so what you want to do is that you

713
00:24:18,960 --> 00:24:21,360
want to update kali linux first or any

714
00:24:21,360 --> 00:24:22,159
debian

715
00:24:22,159 --> 00:24:25,600
or ubuntu vms that you have or actual

716
00:24:25,600 --> 00:24:26,960
computer

717
00:24:26,960 --> 00:24:30,159
but you do by doing sudo apt-get update

718
00:24:30,159 --> 00:24:33,200
or if you're using ubuntu just

719
00:24:33,200 --> 00:24:35,840
do the equivalent of the set of the

720
00:24:35,840 --> 00:24:37,600
commands over here

721
00:24:37,600 --> 00:24:40,559
so you need to install link sdl to dev

722
00:24:40,559 --> 00:24:40,960
and the

723
00:24:40,960 --> 00:24:43,520
sdl to the image that libraries with the

724
00:24:43,520 --> 00:24:44,960
following command

725
00:24:44,960 --> 00:24:47,279
and after you install those libraries

726
00:24:47,279 --> 00:24:49,200
you need to install the can utilities

727
00:24:49,200 --> 00:24:53,279
by sudo apt-get install candy tools

728
00:24:55,600 --> 00:24:58,400
then you need so usually install ic sim

729
00:24:58,400 --> 00:24:58,720
so

730
00:24:58,720 --> 00:25:02,720
just get clone uh the github repository

731
00:25:02,720 --> 00:25:05,600
and then it automatically be cloned over

732
00:25:05,600 --> 00:25:07,120
to your home directory

733
00:25:07,120 --> 00:25:08,720
and make sure that you root um this

734
00:25:08,720 --> 00:25:10,640
won't actually be able to run

735
00:25:10,640 --> 00:25:12,799
without pseudo permissions so just

736
00:25:12,799 --> 00:25:14,559
sitting into the

737
00:25:14,559 --> 00:25:17,120
dark tree and you should be able to see

738
00:25:17,120 --> 00:25:19,200
the contents of ice system if you just

739
00:25:19,200 --> 00:25:21,600
run ls

740
00:25:21,600 --> 00:25:22,559
so we're just gonna give you five

741
00:25:22,559 --> 00:25:25,279
minutes for installation over here uh

742
00:25:25,279 --> 00:25:27,520
make sure you get everything up and if

743
00:25:27,520 --> 00:25:28,880
you can't get things up

744
00:25:28,880 --> 00:25:30,880
you can feel free to message any one of

745
00:25:30,880 --> 00:25:32,880
us to

746
00:25:32,880 --> 00:25:43,840
help help you out with the installation

747
00:30:35,840 --> 00:30:38,000
thank you for the campus introduction so

748
00:30:38,000 --> 00:30:39,360
now we're talking about

749
00:30:39,360 --> 00:30:42,399
the practical power icc and how to

750
00:30:42,399 --> 00:30:44,240
manipulate the cameras packets

751
00:30:44,240 --> 00:30:47,360
so firstly uh we need what we need to do

752
00:30:47,360 --> 00:30:48,640
is to prepare the virtual

753
00:30:48,640 --> 00:30:51,840
care network run by system software so

754
00:30:51,840 --> 00:30:55,039
as mentioned by this default we

755
00:30:55,039 --> 00:30:57,440
need to re-chrome the icc directory from

756
00:30:57,440 --> 00:30:58,720
the internet so

757
00:30:58,720 --> 00:31:00,720
after you decline you share the icc

758
00:31:00,720 --> 00:31:03,039
folder in your

759
00:31:03,039 --> 00:31:05,919
linux machine so if you go inside there

760
00:31:05,919 --> 00:31:07,200
should be a

761
00:31:07,200 --> 00:31:10,240
bench clip called setup weekend.

762
00:31:10,240 --> 00:31:12,159
so what this flash cube does is

763
00:31:12,159 --> 00:31:13,679
basically create a

764
00:31:13,679 --> 00:31:16,320
virtual cam network called we can zero

765
00:31:16,320 --> 00:31:16,799
and

766
00:31:16,799 --> 00:31:19,919
um this virtually can never basically

767
00:31:19,919 --> 00:31:23,519
help us simulate the can network and

768
00:31:23,519 --> 00:31:26,159
also help us run the instrument faster

769
00:31:26,159 --> 00:31:29,679
so if we go to our ubuntu

770
00:31:29,679 --> 00:31:32,399
i mean our last machine we can verify

771
00:31:32,399 --> 00:31:33,440
that

772
00:31:33,440 --> 00:31:35,840
the v10 level is indeed stopped by

773
00:31:35,840 --> 00:31:38,158
running

774
00:31:38,720 --> 00:31:42,080
and then the v10 level should be

775
00:31:42,080 --> 00:31:47,120
here on our device so

776
00:31:47,120 --> 00:31:48,799
we will move on to the next step which

777
00:31:48,799 --> 00:31:51,679
will be capturing the can bus traffic

778
00:31:51,679 --> 00:31:53,360
from p10

779
00:31:53,360 --> 00:31:56,559
so the what is

780
00:31:56,559 --> 00:31:58,960
what this like something else basically

781
00:31:58,960 --> 00:32:00,080
we need to

782
00:32:00,080 --> 00:32:03,440
start our fcc and

783
00:32:03,440 --> 00:32:05,600
which is our cluster and then we also

784
00:32:05,600 --> 00:32:06,880
need to start our

785
00:32:06,880 --> 00:32:10,320
controls which will basically

786
00:32:10,320 --> 00:32:13,519
send the manipulator package over

787
00:32:13,519 --> 00:32:16,399
and then we also open test network to

788
00:32:16,399 --> 00:32:18,640
sniff out the traffic

789
00:32:18,640 --> 00:32:22,240
okay so we can do this on our

790
00:32:22,240 --> 00:32:25,200
computer by running the binaries located

791
00:32:25,200 --> 00:32:26,480
in icc

792
00:32:26,480 --> 00:32:29,039
directory so the first thing is to run

793
00:32:29,039 --> 00:32:30,240
our instrument cluster

794
00:32:30,240 --> 00:32:34,240
which is in the binary icc v10

795
00:32:34,240 --> 00:32:38,000
icg i'm sorry and then with the argument

796
00:32:38,000 --> 00:32:38,960
we can 0

797
00:32:38,960 --> 00:32:44,000
as our network

798
00:32:44,000 --> 00:32:47,039
so after we run we should see this um

799
00:32:47,039 --> 00:32:49,519
dashboard which has the speedometer and

800
00:32:49,519 --> 00:32:51,039
blinkers

801
00:32:51,039 --> 00:32:54,320
then the next step

802
00:32:54,320 --> 00:32:57,279
we should the next step to do is run the

803
00:32:57,279 --> 00:32:58,159
controls

804
00:32:58,159 --> 00:33:01,840
which will send the

805
00:33:01,840 --> 00:33:05,360
packets to our instrument cluster

806
00:33:05,360 --> 00:33:08,880
so this is the controls

807
00:33:08,880 --> 00:33:11,600
binary and how it should look like along

808
00:33:11,600 --> 00:33:14,158
with our

809
00:33:15,279 --> 00:33:18,960
along with our cluster so the last step

810
00:33:18,960 --> 00:33:22,320
is to run cancer on our device to

811
00:33:22,320 --> 00:33:25,679
support the never packets so cancer is

812
00:33:25,679 --> 00:33:27,120
already pre-installed

813
00:33:27,120 --> 00:33:29,279
so we don't need to go to any direct

814
00:33:29,279 --> 00:33:30,320
path

815
00:33:30,320 --> 00:33:34,080
so if we run test network on

816
00:33:34,080 --> 00:33:37,679
computer it should run out like this

817
00:33:37,679 --> 00:33:41,200
so i'll stop cat sniffer and move on to

818
00:33:41,200 --> 00:33:44,240
the next slide first

819
00:33:44,559 --> 00:33:48,080
okay so the next slide will

820
00:33:48,080 --> 00:33:50,840
cover basically the various different

821
00:33:50,840 --> 00:33:52,799
controls that we can

822
00:33:52,799 --> 00:33:56,720
use on our uh that we can use to send to

823
00:33:56,720 --> 00:33:59,760
our cluster so that to manipulate the

824
00:33:59,760 --> 00:34:04,399
various car functions okay so

825
00:34:04,399 --> 00:34:07,919
the first step to do is to come on

826
00:34:07,919 --> 00:34:10,719
uh perform can down which basically

827
00:34:10,719 --> 00:34:11,760
listens

828
00:34:11,760 --> 00:34:15,119
to the network traffic but stories

829
00:34:15,119 --> 00:34:17,199
stores in a file

830
00:34:17,199 --> 00:34:20,560
in a current directory and then

831
00:34:20,560 --> 00:34:24,079
on the right is basically the different

832
00:34:24,079 --> 00:34:26,480
functions and the different keys mapped

833
00:34:26,480 --> 00:34:28,639
to it so i for example accelerate this

834
00:34:28,639 --> 00:34:30,399
up arrow on your computer

835
00:34:30,399 --> 00:34:32,800
but do remember that you need to click

836
00:34:32,800 --> 00:34:34,079
the joystick

837
00:34:34,079 --> 00:34:36,719
window and press the keys first if not

838
00:34:36,719 --> 00:34:38,399
it won't work

839
00:34:38,399 --> 00:34:43,119
so i will move to the

840
00:34:43,119 --> 00:34:46,239
machine and see how it plays out

841
00:34:46,239 --> 00:34:48,960
so first we run kendam

842
00:34:48,960 --> 00:34:50,159
[Music]

843
00:34:50,159 --> 00:34:55,599
and then we'll listen on weekend zero

844
00:34:55,679 --> 00:35:00,079
so if you take note uh this

845
00:35:00,079 --> 00:35:02,560
this uh what kendam does is basically

846
00:35:02,560 --> 00:35:03,599
save

847
00:35:03,599 --> 00:35:06,480
the can traffic to the file name which

848
00:35:06,480 --> 00:35:07,839
is

849
00:35:07,839 --> 00:35:11,359
on the terminal and then um if you click

850
00:35:11,359 --> 00:35:12,880
on the joystick window

851
00:35:12,880 --> 00:35:15,280
and then you press like for example up

852
00:35:15,280 --> 00:35:16,320
key

853
00:35:16,320 --> 00:35:18,160
you can see like the speedometer

854
00:35:18,160 --> 00:35:19,440
increases

855
00:35:19,440 --> 00:35:22,880
so likewise if you follow the slide

856
00:35:22,880 --> 00:35:25,920
the left left arrow is for left left

857
00:35:25,920 --> 00:35:27,119
hand signal

858
00:35:27,119 --> 00:35:29,920
and then a right arrow is for right turn

859
00:35:29,920 --> 00:35:31,839
signal so on and so forth

860
00:35:31,839 --> 00:35:34,960
so you can try this out on your

861
00:35:34,960 --> 00:35:38,079
device and then see how it goes

862
00:35:38,079 --> 00:35:40,960
so moving on

863
00:35:42,320 --> 00:35:45,839
moving on we have a camp layer which

864
00:35:45,839 --> 00:35:47,119
basically

865
00:35:47,119 --> 00:35:51,200
reads the can down file so that you can

866
00:35:51,200 --> 00:35:54,880
view what like you can view

867
00:35:54,880 --> 00:35:57,040
uh what the cambus traffic captured

868
00:35:57,040 --> 00:35:58,720
earlier and see

869
00:35:58,720 --> 00:36:01,839
like it replicates whatever you whatever

870
00:36:01,839 --> 00:36:03,119
data you need to win

871
00:36:03,119 --> 00:36:07,599
or outputs out on the cluster so

872
00:36:07,599 --> 00:36:09,920
uh it should basically replay the same

873
00:36:09,920 --> 00:36:12,160
thing as what you did earlier

874
00:36:12,160 --> 00:36:16,400
yeah so if we go to our ubuntu machine

875
00:36:16,400 --> 00:36:19,440
okay so on the linux side

876
00:36:19,440 --> 00:36:22,480
uh what we need to do is to run cam

877
00:36:22,480 --> 00:36:23,280
player

878
00:36:23,280 --> 00:36:27,119
and you you you need to add a dashboard

879
00:36:27,119 --> 00:36:30,160
the flag so that all the cat data gets

880
00:36:30,160 --> 00:36:30,800
printed

881
00:36:30,800 --> 00:36:33,599
at the same time so when you run camp

882
00:36:33,599 --> 00:36:34,960
layer

883
00:36:34,960 --> 00:36:36,560
like on the right you can see like all

884
00:36:36,560 --> 00:36:39,040
the candidates that was transmitted just

885
00:36:39,040 --> 00:36:39,680
now

886
00:36:39,680 --> 00:36:43,119
by a candle and then we actually need to

887
00:36:43,119 --> 00:36:45,520
wait for a while to see the changes

888
00:36:45,520 --> 00:36:49,119
uh we played on the ic simulator because

889
00:36:49,119 --> 00:36:51,280
i actually started the can down a bit

890
00:36:51,280 --> 00:36:52,400
too early

891
00:36:52,400 --> 00:36:55,200
so if you wait for a while and look at

892
00:36:55,200 --> 00:36:57,200
the ic simulator you should see the

893
00:36:57,200 --> 00:36:57,920
changes

894
00:36:57,920 --> 00:36:59,920
as you can see now the speedometer

895
00:36:59,920 --> 00:37:01,440
increases

896
00:37:01,440 --> 00:37:06,400
and then followed by the girl

897
00:37:06,400 --> 00:37:08,800
and then

898
00:37:10,079 --> 00:37:13,280
so yeah so that's

899
00:37:13,280 --> 00:37:16,560
that's template essentially is basically

900
00:37:16,560 --> 00:37:17,119
just

901
00:37:17,119 --> 00:37:20,400
replaying what uh what did

902
00:37:20,400 --> 00:37:24,400
what you and then

903
00:37:24,400 --> 00:37:27,440
yeah and then we'll move on to the next

904
00:37:27,440 --> 00:37:29,920
slide

905
00:37:32,560 --> 00:37:35,839
okay so moving on we'll be talking about

906
00:37:35,839 --> 00:37:38,000
reverse engineering the can id from

907
00:37:38,000 --> 00:37:39,280
weekend zero

908
00:37:39,280 --> 00:37:42,640
so essentially what reverse

909
00:37:42,640 --> 00:37:46,079
what we are trying to do here is uh

910
00:37:46,079 --> 00:37:49,119
analyzing the can traffic by

911
00:37:49,119 --> 00:37:51,520
using test default and then see what are

912
00:37:51,520 --> 00:37:53,200
the changes

913
00:37:53,200 --> 00:37:56,079
that are made to the traffic when we are

914
00:37:56,079 --> 00:37:56,880
using the

915
00:37:56,880 --> 00:38:00,400
controls to manipulate the

916
00:38:00,400 --> 00:38:04,480
data so uh

917
00:38:04,480 --> 00:38:07,200
if we go to the machine and run can

918
00:38:07,200 --> 00:38:09,759
sniffer

919
00:38:13,200 --> 00:38:18,400
as shown here

920
00:38:18,400 --> 00:38:21,760
you can see that the this is the can

921
00:38:21,760 --> 00:38:25,839
traffic current display so

922
00:38:26,640 --> 00:38:28,640
so as mentioned just now like for

923
00:38:28,640 --> 00:38:29,839
example if you press up

924
00:38:29,839 --> 00:38:33,359
see it's the speedometer is right

925
00:38:33,359 --> 00:38:37,040
the because you're supposed to

926
00:38:37,040 --> 00:38:40,000
uh look and analyze the test equation

927
00:38:40,000 --> 00:38:42,640
here on the right to see what changes

928
00:38:42,640 --> 00:38:45,760
so i think speedometer is a bit hard to

929
00:38:45,760 --> 00:38:48,000
see so we'll do the left blinker for

930
00:38:48,000 --> 00:38:49,119
example

931
00:38:49,119 --> 00:38:52,240
so if you press left angle

932
00:38:52,240 --> 00:38:55,680
you can see that uh i think one

933
00:38:55,680 --> 00:39:00,880
hit it is changing from zero to one

934
00:39:00,880 --> 00:39:04,079
oops yeah one a is changing from zero

935
00:39:04,079 --> 00:39:06,560
zero to zero one on the first

936
00:39:06,560 --> 00:39:09,839
byte so that's how we see

937
00:39:09,839 --> 00:39:13,359
the changes in the can traffic yeah

938
00:39:13,359 --> 00:39:18,480
so bring on to the next slide

939
00:39:18,480 --> 00:39:22,000
okay so now you'll be tasked

940
00:39:22,000 --> 00:39:25,280
to do three analysis of

941
00:39:25,280 --> 00:39:28,480
how to reverse the can id so

942
00:39:28,480 --> 00:39:30,480
the first one will be acceleration and

943
00:39:30,480 --> 00:39:32,079
deceleration

944
00:39:32,079 --> 00:39:34,320
second one will be the open call lock

945
00:39:34,320 --> 00:39:36,400
and then the last one will be

946
00:39:36,400 --> 00:39:39,599
right turn and left and blinker okay

947
00:39:39,599 --> 00:39:43,440
so we will give you five minutes

948
00:39:43,440 --> 00:39:46,320
for you to try this out and if you have

949
00:39:46,320 --> 00:39:46,720
any

950
00:39:46,720 --> 00:39:50,560
questions can ask us okay

951
00:39:50,560 --> 00:39:53,119
we'll leave it over here so that you are

952
00:39:53,119 --> 00:39:55,280
able to see what we

953
00:39:55,280 --> 00:39:58,320
wanted you guys to do so yeah see you in

954
00:39:58,320 --> 00:40:11,839
five minutes

955
00:46:34,800 --> 00:46:37,599
so welcome back guys so now we'll be

956
00:46:37,599 --> 00:46:39,280
going through the

957
00:46:39,280 --> 00:46:42,800
answers for the reversing can ids

958
00:46:42,800 --> 00:46:47,040
question just now so for the first one

959
00:46:47,040 --> 00:46:49,440
acceleration and declaration it's a can

960
00:46:49,440 --> 00:46:50,800
id 244

961
00:46:50,800 --> 00:46:56,640
so if you look at the ubuntu screen

962
00:46:56,640 --> 00:46:58,960
yeah so if you look at the screen if i

963
00:46:58,960 --> 00:46:59,760
press

964
00:46:59,760 --> 00:47:01,680
the acceleration button and then you

965
00:47:01,680 --> 00:47:03,280
look at the

966
00:47:03,280 --> 00:47:05,599
can i need to perform it increases

967
00:47:05,599 --> 00:47:06,560
increase

968
00:47:06,560 --> 00:47:09,980
increments by one bit

969
00:47:09,980 --> 00:47:13,190
[Music]

970
00:47:16,380 --> 00:47:19,449
[Music]

971
00:47:22,960 --> 00:47:26,079
okay so uh next is the

972
00:47:26,079 --> 00:47:29,040
right and the left and signal which is

973
00:47:29,040 --> 00:47:30,480
canadian one eight

974
00:47:30,480 --> 00:47:34,880
so what it is if you look at the weapon

975
00:47:34,880 --> 00:47:38,800
then if you look at the right side uh

976
00:47:38,800 --> 00:47:41,520
it changes from zero to one for the left

977
00:47:41,520 --> 00:47:42,480
blinker

978
00:47:42,480 --> 00:47:45,680
and then for right changes to from zero

979
00:47:45,680 --> 00:47:48,720
and two two so and then lastly

980
00:47:48,720 --> 00:47:52,400
for the dollar and dollar

981
00:47:52,400 --> 00:47:54,720
so currently right now the door is

982
00:47:54,720 --> 00:47:56,720
locked and if you want to unlock it you

983
00:47:56,720 --> 00:47:57,760
shift

984
00:47:57,760 --> 00:48:00,800
it for left front laptop

985
00:48:00,800 --> 00:48:04,319
so if i press shift it

986
00:48:04,319 --> 00:48:07,920
the it changes from zero f to zero

987
00:48:07,920 --> 00:48:12,720
e and then if i lock it again it's

988
00:48:13,440 --> 00:48:18,000
zero f again so yeah that's

989
00:48:18,000 --> 00:48:20,640
so essentially like reversing can ids

990
00:48:20,640 --> 00:48:21,520
because

991
00:48:21,520 --> 00:48:24,000
like for you to analyze the cancer

992
00:48:24,000 --> 00:48:25,920
cancer differentiate

993
00:48:25,920 --> 00:48:27,920
in order to pick up the various

994
00:48:27,920 --> 00:48:29,520
canadians for the different functions of

995
00:48:29,520 --> 00:48:30,640
the cars

996
00:48:30,640 --> 00:48:34,000
so now we'll be moving on to the next

997
00:48:34,000 --> 00:48:37,040
part of the practical which

998
00:48:37,040 --> 00:48:39,279
is

999
00:48:40,319 --> 00:48:43,119
spoofing the canvas effect from weekend

1000
00:48:43,119 --> 00:48:44,000
0

1001
00:48:44,000 --> 00:48:47,119
so previously we have already

1002
00:48:47,119 --> 00:48:49,760
covered how to reverse engineer the can

1003
00:48:49,760 --> 00:48:50,480
ids

1004
00:48:50,480 --> 00:48:52,720
so now we will try to spoof the cam

1005
00:48:52,720 --> 00:48:54,640
traffic directly using the cam

1006
00:48:54,640 --> 00:48:57,760
set tool so

1007
00:48:57,760 --> 00:49:00,480
can send requires you to input the

1008
00:49:00,480 --> 00:49:01,359
network

1009
00:49:01,359 --> 00:49:03,520
and also the canid and along with the

1010
00:49:03,520 --> 00:49:04,559
data

1011
00:49:04,559 --> 00:49:08,960
so we can try to

1012
00:49:09,119 --> 00:49:13,520
edit the speed by sending

1013
00:49:13,680 --> 00:49:17,920
the one f6 data to the canid 244

1014
00:49:17,920 --> 00:49:21,760
so if you go to the ubuntu machine

1015
00:49:21,760 --> 00:49:31,839
and try to send that

1016
00:49:40,960 --> 00:49:44,480
okay so this if let's say

1017
00:49:44,480 --> 00:49:48,160
the the cancer data is not replicated on

1018
00:49:48,160 --> 00:49:49,119
the ic

1019
00:49:49,119 --> 00:49:51,440
simulator we can try to include a volume

1020
00:49:51,440 --> 00:49:52,800
so that

1021
00:49:52,800 --> 00:49:59,839
it's sending the data continuously so

1022
00:50:17,760 --> 00:50:20,720
so after after creating the while loop

1023
00:50:20,720 --> 00:50:21,359
bash

1024
00:50:21,359 --> 00:50:23,680
command you can see that the speed

1025
00:50:23,680 --> 00:50:25,200
actually maintains at

1026
00:50:25,200 --> 00:50:28,800
60 and then yeah that's how

1027
00:50:28,800 --> 00:50:30,960
that's how you basically like send like

1028
00:50:30,960 --> 00:50:32,800
you spoke the can traffic and then

1029
00:50:32,800 --> 00:50:36,960
send the data to the various can ids

1030
00:50:36,960 --> 00:50:40,319
okay so next we have

1031
00:50:40,319 --> 00:50:42,400
another level of exercise for you to try

1032
00:50:42,400 --> 00:50:43,680
out so

1033
00:50:43,680 --> 00:50:47,280
we have uh come up with different uh

1034
00:50:47,280 --> 00:50:49,440
different parts of it different

1035
00:50:49,440 --> 00:50:51,200
functions of the car for you to

1036
00:50:51,200 --> 00:50:56,319
attempt and spoof so first here i

1037
00:50:56,480 --> 00:50:58,720
increase the speedometer up to 60

1038
00:50:58,720 --> 00:50:59,839
horsepower

1039
00:50:59,839 --> 00:51:02,319
and secondly will be to bypass the speed

1040
00:51:02,319 --> 00:51:03,280
we need

1041
00:51:03,280 --> 00:51:04,880
so that will be increasing the

1042
00:51:04,880 --> 00:51:07,440
speedometer to 220

1043
00:51:07,440 --> 00:51:10,559
miles per hour thirdly is to keep

1044
00:51:10,559 --> 00:51:12,960
both right and left turns at the same

1045
00:51:12,960 --> 00:51:13,920
time

1046
00:51:13,920 --> 00:51:17,440
fourth keep the right turn signal up

1047
00:51:17,440 --> 00:51:20,480
fifth is to keep the left hand single up

1048
00:51:20,480 --> 00:51:22,640
and then the last two will be to unlock

1049
00:51:22,640 --> 00:51:23,760
all those and to

1050
00:51:23,760 --> 00:51:26,880
lock all those yep

1051
00:51:26,880 --> 00:51:30,640
so we will be giving you

1052
00:51:30,640 --> 00:51:32,800
around 10 minutes for you to try these

1053
00:51:32,800 --> 00:51:34,640
various exercises and then we'll come

1054
00:51:34,640 --> 00:51:37,599
back and discuss how to decorate

1055
00:51:37,599 --> 00:51:51,839
each of them

1056
01:07:08,720 --> 01:07:12,079
okay so welcome hey guys so now we'll be

1057
01:07:12,079 --> 01:07:13,520
talking about we will be going through

1058
01:07:13,520 --> 01:07:14,480
the

1059
01:07:14,480 --> 01:07:17,119
questions about spoofing the can traffic

1060
01:07:17,119 --> 01:07:18,079
so um

1061
01:07:18,079 --> 01:07:21,039
the first one will be accelerating to 16

1062
01:07:21,039 --> 01:07:22,160
horsepower

1063
01:07:22,160 --> 01:07:25,359
so we can do that uh

1064
01:07:25,359 --> 01:07:28,160
using canson and then for 16 months for

1065
01:07:28,160 --> 01:07:29,359
all the data

1066
01:07:29,359 --> 01:07:32,640
the can id is 244 and then the data is

1067
01:07:32,640 --> 01:07:36,319
2 3 f6 so if we look if we

1068
01:07:36,319 --> 01:07:39,119
input that command into the hotel

1069
01:07:39,119 --> 01:07:42,790
machine you look something like this

1070
01:07:42,790 --> 01:07:45,940
[Music]

1071
01:07:47,119 --> 01:07:50,400
okay so after

1072
01:07:54,319 --> 01:07:57,280
okay so after uh you input the command

1073
01:07:57,280 --> 01:07:57,839
you

1074
01:07:57,839 --> 01:07:59,359
also added the volume so it's more

1075
01:07:59,359 --> 01:08:01,359
obvious so if

1076
01:08:01,359 --> 01:08:04,319
the so if you go to the ac simulator the

1077
01:08:04,319 --> 01:08:05,680
speedometer

1078
01:08:05,680 --> 01:08:08,960
will be at 60 miles per hour and then

1079
01:08:08,960 --> 01:08:11,119
be i'll stop this process and then we'll

1080
01:08:11,119 --> 01:08:12,319
move on to the

1081
01:08:12,319 --> 01:08:14,240
next one which is bypassing the speed

1082
01:08:14,240 --> 01:08:16,799
limit to 230 mass per hour

1083
01:08:16,799 --> 01:08:19,439
so for this the can id is the same 244

1084
01:08:19,439 --> 01:08:19,839
because

1085
01:08:19,839 --> 01:08:22,719
it's regarding the speedometer and but

1086
01:08:22,719 --> 01:08:24,260
for data it's uh

1087
01:08:24,260 --> 01:08:26,799
[Music]

1088
01:08:26,799 --> 01:08:30,880
9 000. so you'll change your last four

1089
01:08:30,880 --> 01:08:34,399
digits to 9000 and then you can see that

1090
01:08:34,399 --> 01:08:35,600
the speedometer

1091
01:08:35,600 --> 01:08:39,920
changes to 220. okay so

1092
01:08:39,920 --> 01:08:44,960
next okay next we'll be going through

1093
01:08:44,960 --> 01:08:48,799
how to how to send the data for

1094
01:08:48,799 --> 01:08:50,880
the signals and also for the draws okay

1095
01:08:50,880 --> 01:08:52,580
so see

1096
01:08:52,580 --> 01:08:53,920
[Music]

1097
01:08:53,920 --> 01:08:57,439
signals uh which is for

1098
01:08:57,439 --> 01:09:01,279
signals is 188 that's a can id

1099
01:09:01,279 --> 01:09:02,960
and then if you want to keep both

1100
01:09:02,960 --> 01:09:05,198
signals up this

1101
01:09:05,198 --> 01:09:08,479
the canon data is 0 3 so

1102
01:09:08,479 --> 01:09:11,520
if we go back to the ubuntu and try so

1103
01:09:11,520 --> 01:09:21,839
i'll edit the command

1104
01:09:28,560 --> 01:09:30,560
okay so after inputting that command you

1105
01:09:30,560 --> 01:09:34,880
can see that both signals are now

1106
01:09:34,880 --> 01:09:37,198
so next question will be right turn

1107
01:09:37,198 --> 01:09:38,880
signal so right turn signal

1108
01:09:38,880 --> 01:09:41,359
uh we change the canada remains the same

1109
01:09:41,359 --> 01:09:44,560
at 188 but we changed the can data from

1110
01:09:44,560 --> 01:09:48,560
zero three now to zero two so

1111
01:09:48,560 --> 01:09:50,319
after inputting that you can see now

1112
01:09:50,319 --> 01:09:52,799
that the right signal is turned

1113
01:09:52,799 --> 01:09:56,000
on okay lastly for signals we have the

1114
01:09:56,000 --> 01:09:58,400
left-hand signal which

1115
01:09:58,400 --> 01:10:03,839
which we will change from zero to zero

1116
01:10:04,320 --> 01:10:07,520
okay so that concludes for signals so

1117
01:10:07,520 --> 01:10:10,960
lastly we will be doing the first unlock

1118
01:10:10,960 --> 01:10:14,719
can message so for those are not the can

1119
01:10:14,719 --> 01:10:16,960
id

1120
01:10:17,120 --> 01:10:20,000
but then we'll change the zero f data to

1121
01:10:20,000 --> 01:10:20,880
zero

1122
01:10:20,880 --> 01:10:24,640
to zero zero so if we input this

1123
01:10:24,640 --> 01:10:27,040
yeah you can see that on the bottom

1124
01:10:27,040 --> 01:10:29,440
right the dots are actually locked

1125
01:10:29,440 --> 01:10:33,040
so that concludes the vertical portion

1126
01:10:33,040 --> 01:10:34,880
for icc

1127
01:10:34,880 --> 01:10:36,800
simulator and then now i'll be passing

1128
01:10:36,800 --> 01:10:38,640
my time to edmond

1129
01:10:38,640 --> 01:10:41,280
we will talk about more about the

1130
01:10:41,280 --> 01:10:42,000
various

1131
01:10:42,000 --> 01:10:45,600
another protocol

1132
01:10:47,520 --> 01:10:49,120
thank you javier for going through the

1133
01:10:49,120 --> 01:10:51,440
lab work on the ic sim

1134
01:10:51,440 --> 01:10:52,719
so now i'll be going through the

1135
01:10:52,719 --> 01:10:54,800
different protocols present in the

1136
01:10:54,800 --> 01:10:57,280
vehicles and the first up will have the

1137
01:10:57,280 --> 01:10:59,280
iso tp protocol

1138
01:10:59,280 --> 01:11:01,760
and it's covering the layer 3 and 4 of

1139
01:11:01,760 --> 01:11:03,199
the osi model

1140
01:11:03,199 --> 01:11:04,880
it is the international standard used to

1141
01:11:04,880 --> 01:11:07,360
send data packets over the can bus

1142
01:11:07,360 --> 01:11:09,840
so previously pacer has colored some

1143
01:11:09,840 --> 01:11:12,400
canvas frames and it contains 8 bytes of

1144
01:11:12,400 --> 01:11:13,120
payload

1145
01:11:13,120 --> 01:11:15,600
with the isotp it can extend the limited

1146
01:11:15,600 --> 01:11:17,159
payload to a data size of

1147
01:11:17,159 --> 01:11:20,880
4095 bytes and the most common usage

1148
01:11:20,880 --> 01:11:23,040
of iso tp is for the transfer of the

1149
01:11:23,040 --> 01:11:25,120
install dynastic messages

1150
01:11:25,120 --> 01:11:27,840
with the obd2

1151
01:11:29,760 --> 01:11:32,560
so the structure of isotp protocol

1152
01:11:32,560 --> 01:11:34,560
mainly defines four frame types

1153
01:11:34,560 --> 01:11:37,520
the single frame first frame consecutive

1154
01:11:37,520 --> 01:11:37,920
frame

1155
01:11:37,920 --> 01:11:40,400
and flow control frame and they are

1156
01:11:40,400 --> 01:11:42,239
denoted by the different codes

1157
01:11:42,239 --> 01:11:45,600
in the first byte of the ktp header

1158
01:11:45,600 --> 01:11:48,159
so packets containing up to seven bytes

1159
01:11:48,159 --> 01:11:49,120
of data

1160
01:11:49,120 --> 01:11:51,199
identifies as single frame and anything

1161
01:11:51,199 --> 01:11:53,040
more than seven bytes of data

1162
01:11:53,040 --> 01:11:54,800
will go to the first frame consider

1163
01:11:54,800 --> 01:11:58,239
frame and flow for two frames

1164
01:11:58,640 --> 01:12:00,800
so how the communication of isotp

1165
01:12:00,800 --> 01:12:02,239
protocol works is

1166
01:12:02,239 --> 01:12:04,000
the sender will send the first frame to

1167
01:12:04,000 --> 01:12:05,440
the receiver

1168
01:12:05,440 --> 01:12:07,760
and the receiver will respond with a

1169
01:12:07,760 --> 01:12:09,440
full control frame

1170
01:12:09,440 --> 01:12:12,159
and then the sender will consecutively

1171
01:12:12,159 --> 01:12:12,719
send

1172
01:12:12,719 --> 01:12:17,280
frames based on the flow control frame

1173
01:12:17,280 --> 01:12:22,960
block size and the separation type

1174
01:12:22,960 --> 01:12:25,040
so soccer can has actually some basic

1175
01:12:25,040 --> 01:12:26,400
functionalities to use

1176
01:12:26,400 --> 01:12:30,000
isotp tools mainly isotp send sotp

1177
01:12:30,000 --> 01:12:34,800
sniffer sotp dom and many other

1178
01:12:34,840 --> 01:12:36,159
functionalities

1179
01:12:36,159 --> 01:12:38,480
so this is an example of how isotp

1180
01:12:38,480 --> 01:12:40,000
protocol can be used using

1181
01:12:40,000 --> 01:12:42,960
socket can and uds so the first one

1182
01:12:42,960 --> 01:12:44,159
denotes the requested

1183
01:12:44,159 --> 01:12:46,800
dynamic session code and then like the

1184
01:12:46,800 --> 01:12:49,280
can send we have the interface which is

1185
01:12:49,280 --> 01:12:52,320
0 and with the dash s and d

1186
01:12:52,320 --> 01:12:55,840
flags we can denote the sender and the

1187
01:12:55,840 --> 01:12:56,640
receiver of

1188
01:12:56,640 --> 01:13:00,719
the response and transmit

1189
01:13:02,840 --> 01:13:05,760
okay

1190
01:13:05,760 --> 01:13:08,640
so moving on to the uds which is unified

1191
01:13:08,640 --> 01:13:11,760
agnostic services communication

1192
01:13:11,760 --> 01:13:14,400
ds uses the iso tp protocol to send

1193
01:13:14,400 --> 01:13:16,960
larger data outputs over the canvas

1194
01:13:16,960 --> 01:13:18,960
so the uds is actually to provide a

1195
01:13:18,960 --> 01:13:21,040
read-only view to display

1196
01:13:21,040 --> 01:13:23,920
information to mechanics and however

1197
01:13:23,920 --> 01:13:25,840
troubleshooting the vehicles such as

1198
01:13:25,840 --> 01:13:27,520
sending a request to unlock doors can

1199
01:13:27,520 --> 01:13:29,840
also be done

1200
01:13:29,840 --> 01:13:32,880
using uts so

1201
01:13:32,880 --> 01:13:36,640
uds capable modules such as seos are

1202
01:13:36,640 --> 01:13:38,880
able to respond to the isotp messages

1203
01:13:38,880 --> 01:13:40,320
examples are

1204
01:13:40,320 --> 01:13:43,120
your instrument clusters and they

1205
01:13:43,120 --> 01:13:44,800
provide the following functionality such

1206
01:13:44,800 --> 01:13:46,000
as the dtcs

1207
01:13:46,000 --> 01:13:48,400
diagnostic trouble codes upload normal

1208
01:13:48,400 --> 01:13:51,280
capabilities for software reprogramming

1209
01:13:51,280 --> 01:13:53,760
remote routine activation to start

1210
01:13:53,760 --> 01:13:55,199
routine memory

1211
01:13:55,199 --> 01:13:58,159
and also write read write capabilities

1212
01:13:58,159 --> 01:13:59,360
to rewrite

1213
01:13:59,360 --> 01:14:02,400
any eeprom values

1214
01:14:02,400 --> 01:14:04,800
so the uds has a specific method to

1215
01:14:04,800 --> 01:14:05,440
receive

1216
01:14:05,440 --> 01:14:08,400
response data and like the canvas it has

1217
01:14:08,400 --> 01:14:10,480
the arbitration id

1218
01:14:10,480 --> 01:14:14,159
a positive and a negative response so

1219
01:14:14,159 --> 01:14:15,679
at the bottom right you can see an

1220
01:14:15,679 --> 01:14:19,199
example of a negative response whereby

1221
01:14:19,199 --> 01:14:22,880
a response is sending a 7f

1222
01:14:22,880 --> 01:14:24,560
and for the positive response it will be

1223
01:14:24,560 --> 01:14:26,400
adding a 0

1224
01:14:26,400 --> 01:14:31,040
4 hex into what you set up

1225
01:14:31,679 --> 01:14:34,960
and the structure of the uds is as

1226
01:14:34,960 --> 01:14:37,199
the example picture we have the

1227
01:14:37,199 --> 01:14:39,920
interface the sl can 0

1228
01:14:39,920 --> 01:14:44,480
the sender and receiver arbitration ids

1229
01:14:44,480 --> 01:14:49,199
number of bytes and also the payload

1230
01:14:49,360 --> 01:14:52,159
so that was the uds and sotp protocol

1231
01:14:52,159 --> 01:14:53,920
next we'll be moving on to the effects

1232
01:14:53,920 --> 01:14:55,360
way protocol

1233
01:14:55,360 --> 01:14:58,560
so in the flex-ray protocol it is

1234
01:14:58,560 --> 01:15:00,400
designed to be faster and more reliable

1235
01:15:00,400 --> 01:15:02,480
than the can bus

1236
01:15:02,480 --> 01:15:04,159
and it's commonly used for braking

1237
01:15:04,159 --> 01:15:07,280
systems or drive-by-wire systems

1238
01:15:07,280 --> 01:15:09,679
it allows clock synchronization and the

1239
01:15:09,679 --> 01:15:11,120
common applications and

1240
01:15:11,120 --> 01:15:13,600
critical safety components are high

1241
01:15:13,600 --> 01:15:15,360
performance for train

1242
01:15:15,360 --> 01:15:18,560
electric cruise control drive by wire

1243
01:15:18,560 --> 01:15:22,320
and active suspension so the downside of

1244
01:15:22,320 --> 01:15:24,800
flex rate protocol points actually the

1245
01:15:24,800 --> 01:15:25,360
price

1246
01:15:25,360 --> 01:15:28,480
is very expensive to use so we don't

1247
01:15:28,480 --> 01:15:28,880
really

1248
01:15:28,880 --> 01:15:31,440
you see it in normal vehicles and

1249
01:15:31,440 --> 01:15:34,960
usually on the higher end vehicle models

1250
01:15:34,960 --> 01:15:36,480
so the structure of the flagship

1251
01:15:36,480 --> 01:15:38,480
protocol can be broken down into

1252
01:15:38,480 --> 01:15:41,679
the header payload and trailer

1253
01:15:41,679 --> 01:15:44,080
the header is 40 bits long and it

1254
01:15:44,080 --> 01:15:45,840
contains information such as

1255
01:15:45,840 --> 01:15:49,120
such as the status bits the frame id

1256
01:15:49,120 --> 01:15:52,239
payload length header crc

1257
01:15:52,239 --> 01:15:56,239
and cybercow the payload is 254 bytes

1258
01:15:56,239 --> 01:15:56,960
long

1259
01:15:56,960 --> 01:15:59,360
and contains the data to be transferred

1260
01:15:59,360 --> 01:16:00,719
by the frame

1261
01:16:00,719 --> 01:16:03,679
the trailer contains three bits of crc

1262
01:16:03,679 --> 01:16:06,880
used for error detection

1263
01:16:06,880 --> 01:16:08,719
so the lean protocol is actually the

1264
01:16:08,719 --> 01:16:10,320
opposite of the flex tray

1265
01:16:10,320 --> 01:16:14,239
it's a slower protocol compared to the

1266
01:16:14,239 --> 01:16:16,000
can bus

1267
01:16:16,000 --> 01:16:17,760
and there's a low cost serial protocol

1268
01:16:17,760 --> 01:16:19,040
designed to interconnect other

1269
01:16:19,040 --> 01:16:20,320
components

1270
01:16:20,320 --> 01:16:22,480
and it's meant to complement the network

1271
01:16:22,480 --> 01:16:24,239
within the vehicle

1272
01:16:24,239 --> 01:16:26,159
so it has a master enslave network

1273
01:16:26,159 --> 01:16:28,960
topology and similar to the can bus

1274
01:16:28,960 --> 01:16:30,800
it's using a broadcast network and

1275
01:16:30,800 --> 01:16:33,760
utilizes the iso 1797

1276
01:16:33,760 --> 01:16:37,600
216. the common applications for the

1277
01:16:37,600 --> 01:16:38,080
lean

1278
01:16:38,080 --> 01:16:40,800
protocol is example the steering wheel

1279
01:16:40,800 --> 01:16:41,679
door

1280
01:16:41,679 --> 01:16:44,800
seats and air conditioning so anything

1281
01:16:44,800 --> 01:16:45,120
that

1282
01:16:45,120 --> 01:16:48,400
is not critical or dependent on the

1283
01:16:48,400 --> 01:16:50,080
speed of transfer

1284
01:16:50,080 --> 01:16:52,880
yeah you will be using lean protocol

1285
01:16:52,880 --> 01:16:53,840
some of the hardware

1286
01:16:53,840 --> 01:16:55,440
being used to decode the waveform of

1287
01:16:55,440 --> 01:16:57,760
limb bus can contain

1288
01:16:57,760 --> 01:17:00,840
example logic analyzers and bus

1289
01:17:00,840 --> 01:17:03,120
analyzers

1290
01:17:03,120 --> 01:17:05,679
so the structure of the limb protocol

1291
01:17:05,679 --> 01:17:06,719
since lin

1292
01:17:06,719 --> 01:17:09,440
is using the master slave architecture

1293
01:17:09,440 --> 01:17:11,199
the master node is looping through the

1294
01:17:11,199 --> 01:17:13,760
snake loads pulling for information

1295
01:17:13,760 --> 01:17:15,840
and transmitting the header of the link

1296
01:17:15,840 --> 01:17:18,640
bus and the slave responds with

1297
01:17:18,640 --> 01:17:21,440
8 data bytes so the header consists of

1298
01:17:21,440 --> 01:17:22,400
the following

1299
01:17:22,400 --> 01:17:25,360
information the sync break field which

1300
01:17:25,360 --> 01:17:27,360
indicates the start frame to all in

1301
01:17:27,360 --> 01:17:28,239
nodes

1302
01:17:28,239 --> 01:17:31,199
the sync bit which allows the lean nodes

1303
01:17:31,199 --> 01:17:32,480
to determine the baud rate

1304
01:17:32,480 --> 01:17:35,440
used by the mastermind identifier which

1305
01:17:35,440 --> 01:17:37,920
identifies the lead message to be sent

1306
01:17:37,920 --> 01:17:41,120
and the parity bits which determines the

1307
01:17:41,120 --> 01:17:44,159
validity of the id field

1308
01:17:44,159 --> 01:17:46,560
in the response we have the data field

1309
01:17:46,560 --> 01:17:48,239
and a checksum

1310
01:17:48,239 --> 01:17:50,960
so the data field transmits two four or

1311
01:17:50,960 --> 01:17:52,320
eight bytes of data

1312
01:17:52,320 --> 01:17:54,239
when the lin slave is pulled by the

1313
01:17:54,239 --> 01:17:55,679
master and a check

1314
01:17:55,679 --> 01:17:57,679
sum ensures the validity of the link

1315
01:17:57,679 --> 01:17:59,760
frame

1316
01:17:59,760 --> 01:18:02,800
so in this table we can see a short

1317
01:18:02,800 --> 01:18:04,400
breakdown of the limb bus

1318
01:18:04,400 --> 01:18:07,840
can bus and flex rate so the difference

1319
01:18:07,840 --> 01:18:09,280
in the voltage

1320
01:18:09,280 --> 01:18:12,480
lane bus is using 12 volts and can bus

1321
01:18:12,480 --> 01:18:14,560
is 5 volts while flex rate uses

1322
01:18:14,560 --> 01:18:17,920
up to 3.5 volts wires

1323
01:18:17,920 --> 01:18:20,960
limb bus is using a single wire can bus

1324
01:18:20,960 --> 01:18:23,520
using twisted pair and flex tray is

1325
01:18:23,520 --> 01:18:24,080
using

1326
01:18:24,080 --> 01:18:27,199
a twisted pair or four wires in the

1327
01:18:27,199 --> 01:18:27,760
speed

1328
01:18:27,760 --> 01:18:30,000
you can see the lane bus is only 20

1329
01:18:30,000 --> 01:18:31,840
kilobits per second

1330
01:18:31,840 --> 01:18:34,239
can bust up to one megabit per second

1331
01:18:34,239 --> 01:18:35,360
and flexway

1332
01:18:35,360 --> 01:18:38,960
10 times of that of can bus so the cost

1333
01:18:38,960 --> 01:18:39,280
for

1334
01:18:39,280 --> 01:18:42,719
lean bus is cheap and can bus

1335
01:18:42,719 --> 01:18:45,679
is moderate but flex rate is very

1336
01:18:45,679 --> 01:18:46,719
expensive

1337
01:18:46,719 --> 01:18:50,800
that's why we don't see much use of

1338
01:18:52,840 --> 01:18:55,360
x-ray

1339
01:18:55,360 --> 01:18:57,199
so now i'll be talking about the most

1340
01:18:57,199 --> 01:18:58,880
protocol so most is

1341
01:18:58,880 --> 01:19:01,920
media oriented systems transport and

1342
01:19:01,920 --> 01:19:04,080
it's actually used for multimedia to

1343
01:19:04,080 --> 01:19:04,800
transmit

1344
01:19:04,800 --> 01:19:07,520
audio video via the plastic fiber of the

1345
01:19:07,520 --> 01:19:09,280
cable

1346
01:19:09,280 --> 01:19:11,840
most ring daisy chain allows high speed

1347
01:19:11,840 --> 01:19:13,600
networking subsystems to be connected

1348
01:19:13,600 --> 01:19:15,520
together on a multiple

1349
01:19:15,520 --> 01:19:17,360
multimedia network optimized for

1350
01:19:17,360 --> 01:19:21,440
multimedia and infotainment applications

1351
01:19:21,520 --> 01:19:23,679
for most protocol it supports up to

1352
01:19:23,679 --> 01:19:26,960
maximum of 64 devices in the network

1353
01:19:26,960 --> 01:19:29,440
and is used in almost every vehicle that

1354
01:19:29,440 --> 01:19:32,719
requires multimedia

1355
01:19:34,880 --> 01:19:36,880
so the design of the mohs protocol there

1356
01:19:36,880 --> 01:19:38,960
are few masters that exist in the most

1357
01:19:38,960 --> 01:19:40,080
network

1358
01:19:40,080 --> 01:19:42,480
the timing master network master

1359
01:19:42,480 --> 01:19:43,520
connection master

1360
01:19:43,520 --> 01:19:45,600
and power master that serves different

1361
01:19:45,600 --> 01:19:47,360
purposes

1362
01:19:47,360 --> 01:19:49,840
within the network most protocol has

1363
01:19:49,840 --> 01:19:50,400
three

1364
01:19:50,400 --> 01:19:53,040
communication channels namely the

1365
01:19:53,040 --> 01:19:54,080
control channel

1366
01:19:54,080 --> 01:19:56,320
asynchronous channel and synchronous

1367
01:19:56,320 --> 01:19:57,840
channel

1368
01:19:57,840 --> 01:19:59,199
there are three different types of data

1369
01:19:59,199 --> 01:20:00,960
frames for most

1370
01:20:00,960 --> 01:20:05,280
most 25 most 50 and most 150

1371
01:20:05,280 --> 01:20:08,000
the difference between them is actually

1372
01:20:08,000 --> 01:20:09,920
just about rate so most 25

1373
01:20:09,920 --> 01:20:13,679
is using 23 megabyte system

1374
01:20:13,679 --> 01:20:17,199
and most 50 is 2 times the speed of most

1375
01:20:17,199 --> 01:20:20,159
25 and most 150 is 6 times the speed of

1376
01:20:20,159 --> 01:20:22,560
almost 25

1377
01:20:22,560 --> 01:20:25,760
most devices follow osi model

1378
01:20:25,760 --> 01:20:28,719
with layer 1 handling the physical

1379
01:20:28,719 --> 01:20:30,239
optical interface

1380
01:20:30,239 --> 01:20:34,400
layer 2 which acts as a mohs transceiver

1381
01:20:34,400 --> 01:20:37,040
most network interface controller the

1382
01:20:37,040 --> 01:20:37,760
nic

1383
01:20:37,760 --> 01:20:39,920
layers 3 to 7 acts as a network

1384
01:20:39,920 --> 01:20:41,840
interface and serves as a communication

1385
01:20:41,840 --> 01:20:42,480
block

1386
01:20:42,480 --> 01:20:46,880
for the application

1387
01:20:46,880 --> 01:20:48,080
for the communication of the most

1388
01:20:48,080 --> 01:20:50,000
protocol the most device

1389
01:20:50,000 --> 01:20:52,159
consists of physical network and

1390
01:20:52,159 --> 01:20:54,320
function blocks

1391
01:20:54,320 --> 01:20:57,520
network service consists of the nic

1392
01:20:57,520 --> 01:20:59,840
the function blocks on layer 7

1393
01:20:59,840 --> 01:21:01,679
application has a master and slave

1394
01:21:01,679 --> 01:21:03,199
function

1395
01:21:03,199 --> 01:21:06,080
the function blocks uses functions in

1396
01:21:06,080 --> 01:21:07,679
slaves called controller

1397
01:21:07,679 --> 01:21:09,600
and the controller send commands to the

1398
01:21:09,600 --> 01:21:12,719
slaves to receive data from the slaves

1399
01:21:12,719 --> 01:21:14,480
controllers are connected to the hmi

1400
01:21:14,480 --> 01:21:15,760
which interfaces

1401
01:21:15,760 --> 01:21:17,520
to the user to issue commands to the

1402
01:21:17,520 --> 01:21:19,760
safe

1403
01:21:20,639 --> 01:21:22,320
so the physical properties of the move

1404
01:21:22,320 --> 01:21:24,080
scale they are using

1405
01:21:24,080 --> 01:21:26,320
[Music]

1406
01:21:26,320 --> 01:21:29,760
photodiode emitting red lights

1407
01:21:29,760 --> 01:21:33,199
with a wavelength of 650 nanometers

1408
01:21:33,199 --> 01:21:35,760
the transmitter uses the ld and receiver

1409
01:21:35,760 --> 01:21:38,080
uses a pin photodiode

1410
01:21:38,080 --> 01:21:40,960
the physical medium uses the plastic

1411
01:21:40,960 --> 01:21:42,239
optic fiber

1412
01:21:42,239 --> 01:21:45,280
so this is true for most 25

1413
01:21:45,280 --> 01:21:47,280
so this is consistent with our findings

1414
01:21:47,280 --> 01:21:48,719
in our bench tool

1415
01:21:48,719 --> 01:21:50,960
so from the pictures below on the left

1416
01:21:50,960 --> 01:21:51,760
you can see

1417
01:21:51,760 --> 01:21:54,560
at the end of the orange cable it's

1418
01:21:54,560 --> 01:21:56,480
emitting a red light

1419
01:21:56,480 --> 01:21:59,600
like the mouse cable that uses the

1420
01:21:59,600 --> 01:22:02,320
red photo diode and then on the right

1421
01:22:02,320 --> 01:22:02,960
picture

1422
01:22:02,960 --> 01:22:04,960
when we talk about our infotainment

1423
01:22:04,960 --> 01:22:06,639
system

1424
01:22:06,639 --> 01:22:10,639
we located the plastic fiber which is

1425
01:22:10,639 --> 01:22:13,360
black in color

1426
01:22:14,560 --> 01:22:17,600
lastly we have the automotive ethernet

1427
01:22:17,600 --> 01:22:20,080
so similar to the normal internet

1428
01:22:20,080 --> 01:22:21,920
automotive ethernet is designed to

1429
01:22:21,920 --> 01:22:24,159
replace or complement can bus

1430
01:22:24,159 --> 01:22:27,679
due to the rising demands for bandwidth

1431
01:22:27,679 --> 01:22:30,719
so the increase in usage of a multimedia

1432
01:22:30,719 --> 01:22:34,239
and upcoming b2x

1433
01:22:34,239 --> 01:22:37,679
the demands are more bandwidth than the

1434
01:22:37,679 --> 01:22:39,199
can bus

1435
01:22:39,199 --> 01:22:41,360
so automotive ethernet comes in two

1436
01:22:41,360 --> 01:22:44,239
forms the 100 base and 1000 base

1437
01:22:44,239 --> 01:22:45,840
and like the flex tray protocol it

1438
01:22:45,840 --> 01:22:47,920
allows for clock synchronization based

1439
01:22:47,920 --> 01:22:48,239
on

1440
01:22:48,239 --> 01:22:51,600
ieee 1588

1441
01:22:51,600 --> 01:22:53,760
it supports a bandwidth of up to 1000

1442
01:22:53,760 --> 01:22:56,239
megabytes per second

1443
01:22:56,239 --> 01:22:59,760
and it's a bi-directional traffic flow

1444
01:22:59,760 --> 01:23:01,600
common implications for automotive

1445
01:23:01,600 --> 01:23:03,600
internet includes the body and comfort

1446
01:23:03,600 --> 01:23:05,520
systems

1447
01:23:05,520 --> 01:23:09,360
safety systems infotainment powertrain

1448
01:23:09,360 --> 01:23:12,400
and ada systems

1449
01:23:14,480 --> 01:23:17,440
so instead of using dynastics over can

1450
01:23:17,440 --> 01:23:19,280
for automotive internet will be using

1451
01:23:19,280 --> 01:23:20,080
dynamostics

1452
01:23:20,080 --> 01:23:24,080
over ip which uses iso13400 for

1453
01:23:24,080 --> 01:23:26,960
automotive fitness

1454
01:23:26,960 --> 01:23:29,440
so in the breakdown on the table on the

1455
01:23:29,440 --> 01:23:30,639
right we can see that

1456
01:23:30,639 --> 01:23:33,920
under the osi layer only layers 1 to 4

1457
01:23:33,920 --> 01:23:35,440
changes in comparison with the

1458
01:23:35,440 --> 01:23:38,000
traditional canvas

1459
01:23:38,000 --> 01:23:41,520
layers 1 and 2 changes to

1460
01:23:41,520 --> 01:23:44,400
100 base and the internet instead of can

1461
01:23:44,400 --> 01:23:45,360
bus

1462
01:23:45,360 --> 01:23:48,960
and layers 3 and 4 changes to ip

1463
01:23:48,960 --> 01:23:52,000
and tcp respectively instead of the

1464
01:23:52,000 --> 01:23:55,280
isotp protocols

1465
01:23:56,320 --> 01:23:57,840
for the physical properties of the

1466
01:23:57,840 --> 01:23:59,760
automotive internet

1467
01:23:59,760 --> 01:24:02,320
single twisted pair wire allows the data

1468
01:24:02,320 --> 01:24:05,600
to transmit and receive at the same time

1469
01:24:05,600 --> 01:24:07,760
and it is designed to reduce the weight

1470
01:24:07,760 --> 01:24:10,000
of the vehicle

1471
01:24:10,000 --> 01:24:12,480
so from the table below you can see the

1472
01:24:12,480 --> 01:24:13,120
differences

1473
01:24:13,120 --> 01:24:14,639
between the standard internet and

1474
01:24:14,639 --> 01:24:17,520
automotive internet

1475
01:24:17,520 --> 01:24:19,679
the length of a standard internet is up

1476
01:24:19,679 --> 01:24:20,880
to 100 meters

1477
01:24:20,880 --> 01:24:23,679
and automotive ethernet is 15 meters and

1478
01:24:23,679 --> 01:24:25,360
the connector for standard internet is

1479
01:24:25,360 --> 01:24:26,880
rj45 whereas

1480
01:24:26,880 --> 01:24:29,040
for automotive internet it can be

1481
01:24:29,040 --> 01:24:30,320
specified by

1482
01:24:30,320 --> 01:24:34,560
each oem variant by model

1483
01:24:34,560 --> 01:24:37,199
for standard internet the cable is

1484
01:24:37,199 --> 01:24:38,480
two-twisted pair

1485
01:24:38,480 --> 01:24:40,719
and in single direction while the

1486
01:24:40,719 --> 01:24:42,159
automotive ethernet

1487
01:24:42,159 --> 01:24:46,560
is one twisted path bi-directional

1488
01:24:46,560 --> 01:24:49,040
next i'll pass to elena to talk a bit

1489
01:24:49,040 --> 01:24:52,320
about the ctf guidelines

1490
01:24:53,520 --> 01:24:56,239
so thank you edmund i hope everybody is

1491
01:24:56,239 --> 01:24:57,280
still alive after

1492
01:24:57,280 --> 01:25:00,560
uh our workshop and hope you guys

1493
01:25:00,560 --> 01:25:02,480
picked up something or learned something

1494
01:25:02,480 --> 01:25:03,760
from the basics

1495
01:25:03,760 --> 01:25:06,239
for the basics of car hacking so next up

1496
01:25:06,239 --> 01:25:07,760
we are going to move on to the ctf

1497
01:25:07,760 --> 01:25:08,719
guidelines

1498
01:25:08,719 --> 01:25:11,840
so the class ready ctr will start from 3

1499
01:25:11,840 --> 01:25:14,480
pm to 8 pm on the 2nd of january

1500
01:25:14,480 --> 01:25:17,360
and 10 am to 3 pm on the 3rd of january

1501
01:25:17,360 --> 01:25:18,560
2021

1502
01:25:18,560 --> 01:25:20,239
so for the registration create an

1503
01:25:20,239 --> 01:25:23,280
account on ctf.comwater.org

1504
01:25:23,280 --> 01:25:24,719
and you will receive an email with

1505
01:25:24,719 --> 01:25:26,480
joining instructions for downloading and

1506
01:25:26,480 --> 01:25:28,960
joining the cotr vpn networks

1507
01:25:28,960 --> 01:25:31,520
so next create a twitch account to join

1508
01:25:31,520 --> 01:25:32,159
the queue

1509
01:25:32,159 --> 01:25:35,280
on twitch and join the discord channel

1510
01:25:35,280 --> 01:25:37,120
of sincon and go to the car security

1511
01:25:37,120 --> 01:25:38,560
kampong channel

1512
01:25:38,560 --> 01:25:41,199
and once the teams have registered an

1513
01:25:41,199 --> 01:25:44,400
account on ctf.com.org

1514
01:25:44,400 --> 01:25:47,199
uh and join a specific vpn network um

1515
01:25:47,199 --> 01:25:49,199
kindly approach our team on synchron's

1516
01:25:49,199 --> 01:25:50,639
discord channel with the following

1517
01:25:50,639 --> 01:25:52,320
details to authenticate yourself into

1518
01:25:52,320 --> 01:25:53,280
the network

1519
01:25:53,280 --> 01:25:56,400
so uh let the discord emmy know the

1520
01:25:56,400 --> 01:25:58,239
specific network name they were drawing

1521
01:25:58,239 --> 01:26:00,719
your team name the number of players in

1522
01:26:00,719 --> 01:26:01,360
the team

1523
01:26:01,360 --> 01:26:03,840
so maximum number of uh three players

1524
01:26:03,840 --> 01:26:04,719
per team

1525
01:26:04,719 --> 01:26:07,360
and your player handlers your players

1526
01:26:07,360 --> 01:26:09,280
device address as shown in the zero tier

1527
01:26:09,280 --> 01:26:09,840
network

1528
01:26:09,840 --> 01:26:11,600
and your twitch account name associated

1529
01:26:11,600 --> 01:26:13,600
with the team only one account is

1530
01:26:13,600 --> 01:26:16,400
needed per team

1531
01:26:21,040 --> 01:26:23,600
okay so next up once you've placed these

1532
01:26:23,600 --> 01:26:25,360
details into the discord channel

1533
01:26:25,360 --> 01:26:27,600
the csq crew will actually inform you to

1534
01:26:27,600 --> 01:26:28,960
kill in the twitch

1535
01:26:28,960 --> 01:26:31,840
and your q number so please only queue

1536
01:26:31,840 --> 01:26:33,760
for one bench at a time

1537
01:26:33,760 --> 01:26:36,159
so to join the twitch queue create an

1538
01:26:36,159 --> 01:26:37,440
account in twitch

1539
01:26:37,440 --> 01:26:40,159
and inform your team's username plus

1540
01:26:40,159 --> 01:26:40,719
your

1541
01:26:40,719 --> 01:26:42,880
tier network details plus the bench you

1542
01:26:42,880 --> 01:26:44,719
would like to play to our csu crew in

1543
01:26:44,719 --> 01:26:45,040
the

1544
01:26:45,040 --> 01:26:48,239
sync cons discord channel um

1545
01:26:48,239 --> 01:26:51,920
car security and uh go to the specific

1546
01:26:51,920 --> 01:26:53,440
stream that you are queuing for

1547
01:26:53,440 --> 01:26:57,679
under the video section of our website

1548
01:26:57,679 --> 01:27:00,800
then type exclamation

1549
01:27:00,800 --> 01:27:03,920
mark drawing in the stream channel to

1550
01:27:03,920 --> 01:27:05,280
join the queue and play

1551
01:27:05,280 --> 01:27:07,520
so once it's your turn the csq crew were

1552
01:27:07,520 --> 01:27:09,360
jpg on squad to draw in

1553
01:27:09,360 --> 01:27:12,880
uh and standby for the bench

1554
01:27:12,880 --> 01:27:15,360
playing session so we have 30 minutes to

1555
01:27:15,360 --> 01:27:16,880
play for each bench and we killing is

1556
01:27:16,880 --> 01:27:18,880
actually allowed so your

1557
01:27:18,880 --> 01:27:21,520
csv crew will inform you on the discord

1558
01:27:21,520 --> 01:27:23,040
when you have three minutes left

1559
01:27:23,040 --> 01:27:25,360
there will also be a countdown timer on

1560
01:27:25,360 --> 01:27:27,440
the twitch stream itself

1561
01:27:27,440 --> 01:27:29,600
so um the difference between the

1562
01:27:29,600 --> 01:27:31,840
previous ctf and the cdf is that all the

1563
01:27:31,840 --> 01:27:32,880
questions will be

1564
01:27:32,880 --> 01:27:36,400
different so hope to see you guys in the

1565
01:27:36,400 --> 01:27:38,960
csgo ctf and we'll be around to assist

1566
01:27:38,960 --> 01:27:40,800
you if you need any help

1567
01:27:40,800 --> 01:27:44,080
so thank you very much everybody

1568
01:27:44,080 --> 01:27:47,280
and do let us know if you need anything

1569
01:27:47,280 --> 01:27:49,280
from us

1570
01:27:49,280 --> 01:28:01,840
thank you

