1
00:00:17,680 --> 00:00:18,880
hello everyone

2
00:00:18,880 --> 00:00:21,279
thanks for your interest in yes we hack

3
00:00:21,279 --> 00:00:22,960
today we will speak about how

4
00:00:22,960 --> 00:00:25,039
security leaders fight cybercrime with

5
00:00:25,039 --> 00:00:27,760
bud bounty

6
00:00:28,240 --> 00:00:30,720
i'm eileen neo the apec regional lead

7
00:00:30,720 --> 00:00:31,840
for yes we hack

8
00:00:31,840 --> 00:00:33,760
and it is my great pleasure to speak

9
00:00:33,760 --> 00:00:36,000
with you today

10
00:00:36,000 --> 00:00:38,399
first off i'd like to introduce esp hack

11
00:00:38,399 --> 00:00:40,559
we are a leading global bug bounty

12
00:00:40,559 --> 00:00:43,360
and vulnerability disclosure platform we

13
00:00:43,360 --> 00:00:44,079
are running over

14
00:00:44,079 --> 00:00:46,960
400 programs in more than 30 countries

15
00:00:46,960 --> 00:00:47,600
across

16
00:00:47,600 --> 00:00:50,239
europe apec and the us for clients

17
00:00:50,239 --> 00:00:52,399
ranging from startups global banks to

18
00:00:52,399 --> 00:00:54,320
governmental institutions

19
00:00:54,320 --> 00:00:56,480
we also have a large community of cyber

20
00:00:56,480 --> 00:00:58,000
security researchers with

21
00:00:58,000 --> 00:01:00,879
over 20 000 vetted ones spread across

22
00:01:00,879 --> 00:01:02,879
120 countries

23
00:01:02,879 --> 00:01:04,720
the issues we solve are common to

24
00:01:04,720 --> 00:01:06,400
sizzles and the teams

25
00:01:06,400 --> 00:01:08,560
we've learned that over the last two

26
00:01:08,560 --> 00:01:09,439
decades

27
00:01:09,439 --> 00:01:11,439
security professionals have seen a

28
00:01:11,439 --> 00:01:12,560
radical change

29
00:01:12,560 --> 00:01:15,040
in the way it impacts the environment

30
00:01:15,040 --> 00:01:16,320
cloud apis

31
00:01:16,320 --> 00:01:19,759
data iot agile methods shift left

32
00:01:19,759 --> 00:01:22,000
all of these strengths are leading to an

33
00:01:22,000 --> 00:01:23,680
expansion of the its

34
00:01:23,680 --> 00:01:26,479
attack surface basically every

35
00:01:26,479 --> 00:01:27,439
organization

36
00:01:27,439 --> 00:01:29,360
is delivering more code at a quicker

37
00:01:29,360 --> 00:01:31,280
rate increasing potential

38
00:01:31,280 --> 00:01:33,439
vulnerabilities on their sets

39
00:01:33,439 --> 00:01:36,240
despite these dramatic changes the means

40
00:01:36,240 --> 00:01:38,479
of auditing and security

41
00:01:38,479 --> 00:01:41,600
and securing it systems usually through

42
00:01:41,600 --> 00:01:42,560
pen testing

43
00:01:42,560 --> 00:01:44,799
have not changed over the last few

44
00:01:44,799 --> 00:01:45,759
decades

45
00:01:45,759 --> 00:01:48,079
as a result there is a real dilemma

46
00:01:48,079 --> 00:01:49,040
between the

47
00:01:49,040 --> 00:01:51,759
rapidly evolving i.t landscape on one

48
00:01:51,759 --> 00:01:52,560
hand

49
00:01:52,560 --> 00:01:55,520
and obsolete security tools and methods

50
00:01:55,520 --> 00:01:57,600
on the other

51
00:01:57,600 --> 00:02:00,000
not to forget that this is all in the

52
00:02:00,000 --> 00:02:01,840
context of continuously

53
00:02:01,840 --> 00:02:04,479
increasing threats and scarcity of

54
00:02:04,479 --> 00:02:05,360
skills

55
00:02:05,360 --> 00:02:08,160
so how do we address this among a few

56
00:02:08,160 --> 00:02:10,318
things we have bug bounty to help us

57
00:02:10,318 --> 00:02:13,280
address these security gaps but bounty

58
00:02:13,280 --> 00:02:14,959
provides security teams

59
00:02:14,959 --> 00:02:17,840
with the operational agility they need

60
00:02:17,840 --> 00:02:19,599
to bridge the gap between

61
00:02:19,599 --> 00:02:24,640
modern i.t processes and security

62
00:02:24,640 --> 00:02:27,520
what is bugbounty it is an enhanced

63
00:02:27,520 --> 00:02:29,440
version of fan testing

64
00:02:29,440 --> 00:02:32,239
there is access to more talent more time

65
00:02:32,239 --> 00:02:34,720
to discover interesting bugs and only

66
00:02:34,720 --> 00:02:36,800
valid findings are rewarded

67
00:02:36,800 --> 00:02:39,519
organizations reward ethical hackers for

68
00:02:39,519 --> 00:02:41,519
the vulnerabilities they report

69
00:02:41,519 --> 00:02:44,000
within a controlled environment there

70
00:02:44,000 --> 00:02:45,920
are strict rules on what they can and

71
00:02:45,920 --> 00:02:46,800
cannot do

72
00:02:46,800 --> 00:02:48,840
what kind of tests they can run in which

73
00:02:48,840 --> 00:02:51,040
environment on which scopes

74
00:02:51,040 --> 00:02:54,160
which bugs are prioritized etc

75
00:02:54,160 --> 00:02:57,040
there is also a clearly defined rewards

76
00:02:57,040 --> 00:02:57,920
grade

77
00:02:57,920 --> 00:02:59,760
which defines the bounty amounts

78
00:02:59,760 --> 00:03:02,159
according to the severity of each bug

79
00:03:02,159 --> 00:03:03,360
reported

80
00:03:03,360 --> 00:03:05,840
naturally the more critical the bug is

81
00:03:05,840 --> 00:03:07,360
the higher the reward

82
00:03:07,360 --> 00:03:11,760
would be yes we hex bug bounty platform

83
00:03:11,760 --> 00:03:14,480
connects clients to our community of

84
00:03:14,480 --> 00:03:15,440
hunters

85
00:03:15,440 --> 00:03:17,120
this is where you will run your bug

86
00:03:17,120 --> 00:03:19,200
bounty programs invite hunters

87
00:03:19,200 --> 00:03:21,680
and manage your bug reports there are

88
00:03:21,680 --> 00:03:23,280
two main type of programs

89
00:03:23,280 --> 00:03:26,000
private ones and public ones most

90
00:03:26,000 --> 00:03:28,000
clients are doing private bug bounty

91
00:03:28,000 --> 00:03:29,280
programs they work

92
00:03:29,280 --> 00:03:32,000
only with selected hunters based on the

93
00:03:32,000 --> 00:03:33,280
program requirements

94
00:03:33,280 --> 00:03:37,440
this can be 5 10 50 or even 500

95
00:03:37,440 --> 00:03:40,400
invited hunters that you can rotate over

96
00:03:40,400 --> 00:03:41,200
time

97
00:03:41,200 --> 00:03:44,159
to get a diversity of skill sets such

98
00:03:44,159 --> 00:03:45,280
programs remain

99
00:03:45,280 --> 00:03:48,480
confidential and are not advertised then

100
00:03:48,480 --> 00:03:50,640
we have public programs where anyone

101
00:03:50,640 --> 00:03:52,959
within the hunter community can submit a

102
00:03:52,959 --> 00:03:53,840
bug

103
00:03:53,840 --> 00:03:56,000
private programs are a great place to

104
00:03:56,000 --> 00:03:57,040
start with

105
00:03:57,040 --> 00:03:59,760
as we maintain a lot of control over who

106
00:03:59,760 --> 00:04:00,959
we work with

107
00:04:00,959 --> 00:04:03,680
an organization may choose to go public

108
00:04:03,680 --> 00:04:05,920
if it wants to publicly showcase their

109
00:04:05,920 --> 00:04:07,760
commitment to security

110
00:04:07,760 --> 00:04:10,239
and if it is very confident of the

111
00:04:10,239 --> 00:04:10,959
prospect

112
00:04:10,959 --> 00:04:13,360
of working with a large community of

113
00:04:13,360 --> 00:04:15,840
hunters

114
00:04:15,920 --> 00:04:18,320
how do we get started with bug bounty

115
00:04:18,320 --> 00:04:20,478
there are five simple steps

116
00:04:20,478 --> 00:04:23,360
first of all we will define the program

117
00:04:23,360 --> 00:04:24,720
rules which include

118
00:04:24,720 --> 00:04:27,759
the scope of the program for example is

119
00:04:27,759 --> 00:04:28,000
it

120
00:04:28,000 --> 00:04:31,120
a domain or subdomain a web or mobile

121
00:04:31,120 --> 00:04:32,320
application

122
00:04:32,320 --> 00:04:35,360
an iot firmware etc

123
00:04:35,360 --> 00:04:37,080
the qualifying and non-qualifying

124
00:04:37,080 --> 00:04:38,560
vulnerabilities

125
00:04:38,560 --> 00:04:42,160
what types of bugs qualify for reward

126
00:04:42,160 --> 00:04:44,800
and the bounty grid which is indexed

127
00:04:44,800 --> 00:04:46,639
according to the severity

128
00:04:46,639 --> 00:04:50,080
of the vulnerability low medium high or

129
00:04:50,080 --> 00:04:51,120
critical

130
00:04:51,120 --> 00:04:54,160
based on the business impact lastly

131
00:04:54,160 --> 00:04:57,440
any relevant information for the hunters

132
00:04:57,440 --> 00:04:59,199
such as the guidelines they need to

133
00:04:59,199 --> 00:05:00,479
follow or

134
00:05:00,479 --> 00:05:02,560
how to get credentials for gray box

135
00:05:02,560 --> 00:05:05,280
testing etc

136
00:05:05,280 --> 00:05:07,919
we would then choose to launch in

137
00:05:07,919 --> 00:05:09,680
private or public mode

138
00:05:09,680 --> 00:05:12,320
in private we would select hunters to

139
00:05:12,320 --> 00:05:13,280
work with

140
00:05:13,280 --> 00:05:16,960
this could be 550 or 500 depending on

141
00:05:16,960 --> 00:05:18,320
the objective

142
00:05:18,320 --> 00:05:20,720
in a public program we launched to the

143
00:05:20,720 --> 00:05:21,520
entire

144
00:05:21,520 --> 00:05:24,720
hunter community once the program has

145
00:05:24,720 --> 00:05:26,000
been launched

146
00:05:26,000 --> 00:05:28,400
hunters begin their testings they submit

147
00:05:28,400 --> 00:05:29,360
their findings

148
00:05:29,360 --> 00:05:31,360
through the platform assigning a

149
00:05:31,360 --> 00:05:33,440
severity level to each bug

150
00:05:33,440 --> 00:05:35,759
we would then validate each report are

151
00:05:35,759 --> 00:05:37,039
they within the rules

152
00:05:37,039 --> 00:05:39,280
what is the business impact and what is

153
00:05:39,280 --> 00:05:41,199
the severity level

154
00:05:41,199 --> 00:05:43,600
if the vulnerability is valid the hunter

155
00:05:43,600 --> 00:05:44,560
is rewarded

156
00:05:44,560 --> 00:05:47,520
based on the severity level and bounty

157
00:05:47,520 --> 00:05:48,400
grid

158
00:05:48,400 --> 00:05:51,360
only the first hunter for a given reward

159
00:05:51,360 --> 00:05:52,000
for a given

160
00:05:52,000 --> 00:05:55,039
bug is rewarded other reports on the

161
00:05:55,039 --> 00:05:57,440
same bar are marked as duplicates and do

162
00:05:57,440 --> 00:05:59,840
not qualify for a reward

163
00:05:59,840 --> 00:06:01,919
once the vulnerability report has been

164
00:06:01,919 --> 00:06:02,880
validated

165
00:06:02,880 --> 00:06:06,400
you may proceed to fix it once the fix

166
00:06:06,400 --> 00:06:07,199
is applied

167
00:06:07,199 --> 00:06:09,600
we ask the hunter to check if the fix

168
00:06:09,600 --> 00:06:11,440
has been properly applied

169
00:06:11,440 --> 00:06:16,000
until we are sure it is resolved

170
00:06:17,280 --> 00:06:20,000
burke bounty has been gaining popularity

171
00:06:20,000 --> 00:06:21,600
and no surprises

172
00:06:21,600 --> 00:06:25,120
as it has many merits firstly it is

173
00:06:25,120 --> 00:06:26,240
highly effective

174
00:06:26,240 --> 00:06:29,199
you can tap into a large talent pool not

175
00:06:29,199 --> 00:06:29,520
just

176
00:06:29,520 --> 00:06:32,319
one or two pen testers and whenever you

177
00:06:32,319 --> 00:06:32,960
need

178
00:06:32,960 --> 00:06:36,080
as long as you need and hence it extends

179
00:06:36,080 --> 00:06:38,000
your testing capabilities

180
00:06:38,000 --> 00:06:40,319
and more interesting bugs are found

181
00:06:40,319 --> 00:06:41,280
thereby

182
00:06:41,280 --> 00:06:44,160
maximizing your risk coverage we very

183
00:06:44,160 --> 00:06:45,039
often deal

184
00:06:45,039 --> 00:06:48,000
with heavily tested scopes but never

185
00:06:48,000 --> 00:06:48,479
fail

186
00:06:48,479 --> 00:06:50,560
to quickly discover high or critical

187
00:06:50,560 --> 00:06:52,319
vulnerabilities

188
00:06:52,319 --> 00:06:54,560
and as only the first hunter for a

189
00:06:54,560 --> 00:06:57,199
certain bug qualifies for a reward

190
00:06:57,199 --> 00:06:59,520
the healthy competition encourages

191
00:06:59,520 --> 00:07:01,840
hunters to surface vulnerabilities as

192
00:07:01,840 --> 00:07:03,280
soon as possible

193
00:07:03,280 --> 00:07:05,840
it is also very cost effective as only

194
00:07:05,840 --> 00:07:07,759
valid bugs with business impact

195
00:07:07,759 --> 00:07:10,800
are rewarded with a classic audit

196
00:07:10,800 --> 00:07:13,360
we pay for the man hours regardless of

197
00:07:13,360 --> 00:07:13,840
whether

198
00:07:13,840 --> 00:07:16,800
anything valuable was found in fact one

199
00:07:16,800 --> 00:07:17,840
of our clients

200
00:07:17,840 --> 00:07:20,240
one of the largest asian banks found

201
00:07:20,240 --> 00:07:21,280
that they were saving

202
00:07:21,280 --> 00:07:24,080
four times per bar on bug bounty as

203
00:07:24,080 --> 00:07:26,960
compared to pen testing

204
00:07:26,960 --> 00:07:30,080
lastly bug bounty is built for agility

205
00:07:30,080 --> 00:07:32,479
and can launch in any environment

206
00:07:32,479 --> 00:07:34,560
pre-post production

207
00:07:34,560 --> 00:07:37,759
uat black to white box testing

208
00:07:37,759 --> 00:07:40,400
i will be diving deeper into these three

209
00:07:40,400 --> 00:07:40,960
points

210
00:07:40,960 --> 00:07:43,680
about buck bounty's agility in the next

211
00:07:43,680 --> 00:07:44,000
few

212
00:07:44,000 --> 00:07:49,039
slides let's start with flexibility

213
00:07:49,840 --> 00:07:52,400
there is a common misconception that bug

214
00:07:52,400 --> 00:07:55,039
bounty is only suitable for very agile

215
00:07:55,039 --> 00:07:55,919
companies

216
00:07:55,919 --> 00:07:58,240
but that's not the case whatever the

217
00:07:58,240 --> 00:07:59,599
level of agility

218
00:07:59,599 --> 00:08:01,680
all businesses can launch crowdsource

219
00:08:01,680 --> 00:08:02,800
pen testing

220
00:08:02,800 --> 00:08:05,599
in a few clicks there are usually two

221
00:08:05,599 --> 00:08:07,680
types of clients that we see

222
00:08:07,680 --> 00:08:09,599
those who are already in some kind of

223
00:08:09,599 --> 00:08:11,440
devops transformation

224
00:08:11,440 --> 00:08:13,120
and those who are still working with the

225
00:08:13,120 --> 00:08:16,800
more traditional waterfall model

226
00:08:16,800 --> 00:08:19,199
for clients in the dev ops journey they

227
00:08:19,199 --> 00:08:21,199
run continuous integration

228
00:08:21,199 --> 00:08:23,919
and continuous delivery so they need to

229
00:08:23,919 --> 00:08:26,000
have continuous testing as well

230
00:08:26,000 --> 00:08:27,919
because they basically deliver code

231
00:08:27,919 --> 00:08:30,080
every day and with bug bounty

232
00:08:30,080 --> 00:08:32,399
they have the ability to do continuous

233
00:08:32,399 --> 00:08:33,279
testing

234
00:08:33,279 --> 00:08:36,240
that surfaces bugs at the same speed

235
00:08:36,240 --> 00:08:38,159
that those bugs are created

236
00:08:38,159 --> 00:08:41,838
by their development teams

237
00:08:42,240 --> 00:08:44,800
for clients in the waterfall model their

238
00:08:44,800 --> 00:08:46,640
releases used to happen

239
00:08:46,640 --> 00:08:49,440
rather infrequently every three or six

240
00:08:49,440 --> 00:08:50,240
months

241
00:08:50,240 --> 00:08:52,080
but now it's been shortened to every

242
00:08:52,080 --> 00:08:54,080
month or every week

243
00:08:54,080 --> 00:08:56,399
hence scheduling old school pen tests so

244
00:08:56,399 --> 00:08:59,600
frequently is not an option

245
00:08:59,600 --> 00:09:01,680
with bulk bounty even clients in the

246
00:09:01,680 --> 00:09:02,880
waterfall model

247
00:09:02,880 --> 00:09:05,040
can quickly mobilize a group of

248
00:09:05,040 --> 00:09:07,200
hand-picked ethical hackers in a few

249
00:09:07,200 --> 00:09:08,080
clicks

250
00:09:08,080 --> 00:09:11,040
to surface bugs during the acceptance or

251
00:09:11,040 --> 00:09:12,480
the testing phase

252
00:09:12,480 --> 00:09:14,880
in the pre-production environment and

253
00:09:14,880 --> 00:09:16,560
then fix those bugs

254
00:09:16,560 --> 00:09:20,160
before each release and they can suspend

255
00:09:20,160 --> 00:09:23,120
update relaunch or stop the program at

256
00:09:23,120 --> 00:09:24,240
any moment

257
00:09:24,240 --> 00:09:28,320
whenever they need a security review

258
00:09:28,640 --> 00:09:31,360
bug bounty is also very empowering for

259
00:09:31,360 --> 00:09:32,640
developers

260
00:09:32,640 --> 00:09:35,680
today as a result of the need for speed

261
00:09:35,680 --> 00:09:37,839
we see that developers have more and

262
00:09:37,839 --> 00:09:38,880
more latitude

263
00:09:38,880 --> 00:09:41,360
and autonomy in the way they work they

264
00:09:41,360 --> 00:09:42,959
deliver more and more code

265
00:09:42,959 --> 00:09:45,120
on a quicker basis security

266
00:09:45,120 --> 00:09:46,399
professionals today

267
00:09:46,399 --> 00:09:49,680
are outnumbered massively by developers

268
00:09:49,680 --> 00:09:52,240
in such a context if the security team

269
00:09:52,240 --> 00:09:54,240
cannot find a way to effectively

270
00:09:54,240 --> 00:09:56,560
embed security within that process from

271
00:09:56,560 --> 00:09:57,920
early start on

272
00:09:57,920 --> 00:10:00,080
they may find themselves progressively

273
00:10:00,080 --> 00:10:01,120
set aside

274
00:10:01,120 --> 00:10:04,000
and basically completely losing control

275
00:10:04,000 --> 00:10:05,920
of the situation

276
00:10:05,920 --> 00:10:08,000
one way to address this is to actually

277
00:10:08,000 --> 00:10:09,120
raise awareness

278
00:10:09,120 --> 00:10:11,440
to train those developers and to have

279
00:10:11,440 --> 00:10:12,720
them implementing

280
00:10:12,720 --> 00:10:15,760
best practices in their work but how to

281
00:10:15,760 --> 00:10:16,640
do that

282
00:10:16,640 --> 00:10:19,120
theoretical trainings are one thing but

283
00:10:19,120 --> 00:10:21,680
bug bounty brings a much more pragmatic

284
00:10:21,680 --> 00:10:23,120
approach to this

285
00:10:23,120 --> 00:10:25,360
through a platform like yes we hex

286
00:10:25,360 --> 00:10:27,760
developers can directly communicate with

287
00:10:27,760 --> 00:10:30,079
the researchers who found their bugs

288
00:10:30,079 --> 00:10:32,480
and through this direct interaction you

289
00:10:32,480 --> 00:10:34,000
create real awareness

290
00:10:34,000 --> 00:10:36,399
you enable transfer skills between the

291
00:10:36,399 --> 00:10:37,279
hunters

292
00:10:37,279 --> 00:10:40,000
and the developers you can actually then

293
00:10:40,000 --> 00:10:40,880
identify

294
00:10:40,880 --> 00:10:43,279
potential security champions within the

295
00:10:43,279 --> 00:10:45,200
deaf team

296
00:10:45,200 --> 00:10:47,839
we even see clients where it's not

297
00:10:47,839 --> 00:10:49,600
anymore the cso or

298
00:10:49,600 --> 00:10:52,079
team who run the buck bounty programs

299
00:10:52,079 --> 00:10:54,720
but security champions within the deaf

300
00:10:54,720 --> 00:10:55,680
teams

301
00:10:55,680 --> 00:10:58,399
the cso team then becomes more of a

302
00:10:58,399 --> 00:11:00,959
service provider who orchestrates the

303
00:11:00,959 --> 00:11:04,480
programs at a higher level

304
00:11:04,480 --> 00:11:07,440
finally bug bounty enables many diverse

305
00:11:07,440 --> 00:11:09,360
automation use cases

306
00:11:09,360 --> 00:11:11,440
pentest leaves you with a static

307
00:11:11,440 --> 00:11:12,399
document

308
00:11:12,399 --> 00:11:15,600
like a pdf it is very difficult if not

309
00:11:15,600 --> 00:11:19,440
impossible to actually use it at scale

310
00:11:19,440 --> 00:11:21,839
with bug bounty you have structured data

311
00:11:21,839 --> 00:11:23,920
because the reports are filled by the

312
00:11:23,920 --> 00:11:24,800
hunters

313
00:11:24,800 --> 00:11:27,200
through the platform interface using

314
00:11:27,200 --> 00:11:28,640
standard fields

315
00:11:28,640 --> 00:11:31,120
when the information is received by the

316
00:11:31,120 --> 00:11:32,240
client site

317
00:11:32,240 --> 00:11:34,560
the report manager will then update and

318
00:11:34,560 --> 00:11:36,959
validate this information

319
00:11:36,959 --> 00:11:39,440
so as a result of this process you get

320
00:11:39,440 --> 00:11:40,399
structured

321
00:11:40,399 --> 00:11:43,200
and validated data which you can

322
00:11:43,200 --> 00:11:46,079
integrate into your workflows and tools

323
00:11:46,079 --> 00:11:49,120
hence you can automate many things many

324
00:11:49,120 --> 00:11:51,360
tasks that otherwise would be done

325
00:11:51,360 --> 00:11:54,240
manually or would not be done at all

326
00:11:54,240 --> 00:11:57,680
just because they're time consuming

327
00:11:57,680 --> 00:12:01,279
a first use case is the most obvious one

328
00:12:01,279 --> 00:12:04,320
ticket management for example algeria

329
00:12:04,320 --> 00:12:05,120
connector

330
00:12:05,120 --> 00:12:08,240
automatically creates tickets and eases

331
00:12:08,240 --> 00:12:09,839
the internal management of

332
00:12:09,839 --> 00:12:12,320
vulnerabilities and remediations

333
00:12:12,320 --> 00:12:14,760
it also creates transparency and

334
00:12:14,760 --> 00:12:16,000
accountability

335
00:12:16,000 --> 00:12:19,200
on the i.t side

336
00:12:19,440 --> 00:12:22,000
another use case could be regression

337
00:12:22,000 --> 00:12:22,720
testing

338
00:12:22,720 --> 00:12:26,240
within your ci or cd pipeline in order

339
00:12:26,240 --> 00:12:28,399
to replace the metal work of code

340
00:12:28,399 --> 00:12:29,040
reviews

341
00:12:29,040 --> 00:12:31,519
for security issues with automated

342
00:12:31,519 --> 00:12:33,200
security testing

343
00:12:33,200 --> 00:12:36,480
using the data from bug bounty reports

344
00:12:36,480 --> 00:12:39,360
which are then directly pushed into the

345
00:12:39,360 --> 00:12:40,000
ci

346
00:12:40,000 --> 00:12:43,760
or cd pipeline as a result of such

347
00:12:43,760 --> 00:12:46,560
use cases many clients start seeing

348
00:12:46,560 --> 00:12:49,360
security from a proactive point of view

349
00:12:49,360 --> 00:12:51,920
as an enabler instead of being an

350
00:12:51,920 --> 00:12:54,399
obstacle

351
00:12:54,639 --> 00:12:57,600
a third use case is virtual patching as

352
00:12:57,600 --> 00:12:58,240
we know

353
00:12:58,240 --> 00:13:00,639
manual patch creation often becomes

354
00:13:00,639 --> 00:13:01,760
unfeasible

355
00:13:01,760 --> 00:13:04,399
as the number of vulnerabilities grow

356
00:13:04,399 --> 00:13:05,760
that's why our platform

357
00:13:05,760 --> 00:13:08,639
enables our clients to easily update and

358
00:13:08,639 --> 00:13:10,720
fine-tune their web application

359
00:13:10,720 --> 00:13:13,760
firewalls with the vulnerability data

360
00:13:13,760 --> 00:13:16,800
generated by our programs and converting

361
00:13:16,800 --> 00:13:17,360
this

362
00:13:17,360 --> 00:13:20,720
data into virtual patches to maximize

363
00:13:20,720 --> 00:13:22,079
their protection

364
00:13:22,079 --> 00:13:25,439
systems efficiency

365
00:13:26,560 --> 00:13:29,040
as we've established today the old

366
00:13:29,040 --> 00:13:31,600
security assessment model is no longer

367
00:13:31,600 --> 00:13:32,639
effective

368
00:13:32,639 --> 00:13:35,200
security needs to be an integrative part

369
00:13:35,200 --> 00:13:36,880
of internal processes

370
00:13:36,880 --> 00:13:40,160
and potentially continuous testing once

371
00:13:40,160 --> 00:13:40,720
a year

372
00:13:40,720 --> 00:13:43,680
while release cycles run on a monthly

373
00:13:43,680 --> 00:13:46,079
weekly or even daily basis

374
00:13:46,079 --> 00:13:49,120
is ineffective and exposes companies to

375
00:13:49,120 --> 00:13:51,839
a lot of security risks when speaking

376
00:13:51,839 --> 00:13:53,279
with security leaders

377
00:13:53,279 --> 00:13:55,680
we see that the question among them is

378
00:13:55,680 --> 00:13:57,360
no longer whether they will

379
00:13:57,360 --> 00:14:00,399
or will not run a bug bounty program but

380
00:14:00,399 --> 00:14:02,880
rather how they will do so and where do

381
00:14:02,880 --> 00:14:04,000
they start

382
00:14:04,000 --> 00:14:06,639
and this is where yes we hack is able to

383
00:14:06,639 --> 00:14:08,880
help

384
00:14:09,120 --> 00:14:10,959
thank you all for watching today and

385
00:14:10,959 --> 00:14:13,279
please feel free to contact us with any

386
00:14:13,279 --> 00:14:14,720
questions you have

387
00:14:14,720 --> 00:14:17,839
have a wonderful day

388
00:14:38,560 --> 00:14:40,638
you

