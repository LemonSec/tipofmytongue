1
00:00:05,600 --> 00:00:09,040
hello everyone and welcome to my talk on

2
00:00:09,040 --> 00:00:12,400
intro to ibn and free can bus tools uh

3
00:00:12,400 --> 00:00:15,839
for simcon 2021 my name is kamel golly

4
00:00:15,839 --> 00:00:18,160
i'm going to be your host for today's uh

5
00:00:18,160 --> 00:00:19,920
car hacking workshop

6
00:00:19,920 --> 00:00:20,800
and

7
00:00:20,800 --> 00:00:22,560
yeah let's uh just go ahead and get

8
00:00:22,560 --> 00:00:24,480
started with

9
00:00:24,480 --> 00:00:26,720
a talk try not to waste too much time we

10
00:00:26,720 --> 00:00:29,119
have a lot of fun stuff to get into

11
00:00:29,119 --> 00:00:31,119
uh going forward so

12
00:00:31,119 --> 00:00:33,600
what have we got we've got a speaker

13
00:00:33,600 --> 00:00:35,120
introduction first of all so my name is

14
00:00:35,120 --> 00:00:37,200
kamel gali i am an automotive cyber

15
00:00:37,200 --> 00:00:38,879
security technology architect at a

16
00:00:38,879 --> 00:00:40,800
company called white motion uh white

17
00:00:40,800 --> 00:00:43,040
motion is a it's not a very you know

18
00:00:43,040 --> 00:00:45,039
super well-known company but it's a

19
00:00:45,039 --> 00:00:46,879
subsidiary of the larger automotive

20
00:00:46,879 --> 00:00:49,039
supplier morelli that's originally based

21
00:00:49,039 --> 00:00:50,800
out of italy but i personally am based

22
00:00:50,800 --> 00:00:52,879
out of tokyo

23
00:00:52,879 --> 00:00:55,600
white motion is mostly focused on cyber

24
00:00:55,600 --> 00:00:58,000
security both automotive iot traditional

25
00:00:58,000 --> 00:01:00,480
cyber security services consulting etc

26
00:01:00,480 --> 00:01:01,840
so on and so forth

27
00:01:01,840 --> 00:01:04,799
um yeah so i work for this company we do

28
00:01:04,799 --> 00:01:06,240
internal penetration tests external

29
00:01:06,240 --> 00:01:08,320
penetration tests training for customers

30
00:01:08,320 --> 00:01:10,080
so if that's something you're interested

31
00:01:10,080 --> 00:01:11,760
in at all either for yourself or for

32
00:01:11,760 --> 00:01:13,360
your employer then by all means please

33
00:01:13,360 --> 00:01:15,920
don't hesitate to to get in touch i'm a

34
00:01:15,920 --> 00:01:18,560
trilingual car hacking enthusiast uh i

35
00:01:18,560 --> 00:01:20,080
am originally from the united states but

36
00:01:20,080 --> 00:01:21,759
as mentioned before i do now live in

37
00:01:21,759 --> 00:01:24,799
japan but i also do speak arabic so um

38
00:01:24,799 --> 00:01:26,560
that is kind of the third language i

39
00:01:26,560 --> 00:01:28,560
speak you know english japanese and

40
00:01:28,560 --> 00:01:29,920
arabic right that's kind of my my

41
00:01:29,920 --> 00:01:31,280
trifecta

42
00:01:31,280 --> 00:01:33,040
sorry my hair is kind of kind of kind of

43
00:01:33,040 --> 00:01:35,439
kind of messy today i'm having a busy

44
00:01:35,439 --> 00:01:37,520
day so unfortunately i haven't really

45
00:01:37,520 --> 00:01:38,960
had time to to to take care of my

46
00:01:38,960 --> 00:01:42,640
appearance um but i'm heavily active in

47
00:01:42,640 --> 00:01:45,600
the asrg asrg is the automotive security

48
00:01:45,600 --> 00:01:48,000
research group it's a group dedicated to

49
00:01:48,000 --> 00:01:49,600
spreading awareness for automotive cyber

50
00:01:49,600 --> 00:01:51,360
security and enabling people to get

51
00:01:51,360 --> 00:01:54,159
involved in the uh in the community it's

52
00:01:54,159 --> 00:01:56,479
a it's a free to participate community

53
00:01:56,479 --> 00:01:58,399
of course so if you if you ever want to

54
00:01:58,399 --> 00:02:00,240
learn any more just please feel free to

55
00:02:00,240 --> 00:02:01,520
contact me i'll be happy to put you in

56
00:02:01,520 --> 00:02:03,920
touch with someone uh maybe heading a

57
00:02:03,920 --> 00:02:05,119
local branch in your area if you're

58
00:02:05,119 --> 00:02:06,240
interested in starting a branch in your

59
00:02:06,240 --> 00:02:08,080
area you're welcome to do so it's more

60
00:02:08,080 --> 00:02:09,598
or less

61
00:02:09,598 --> 00:02:12,720
a locally run international organization

62
00:02:12,720 --> 00:02:14,480
right it's we've got members in all

63
00:02:14,480 --> 00:02:17,120
parts of the world but each small branch

64
00:02:17,120 --> 00:02:17,840
is

65
00:02:17,840 --> 00:02:19,760
managed by the local members where we

66
00:02:19,760 --> 00:02:20,560
have

67
00:02:20,560 --> 00:02:22,560
talks etc every month and just share

68
00:02:22,560 --> 00:02:24,319
information with one another

69
00:02:24,319 --> 00:02:26,480
so uh within automotive security i have

70
00:02:26,480 --> 00:02:28,160
a couple of areas of interest as of

71
00:02:28,160 --> 00:02:30,959
recent so bluetooth is one usb radio

72
00:02:30,959 --> 00:02:32,720
frequency these are all things that i

73
00:02:32,720 --> 00:02:34,080
enjoy and of course little digital

74
00:02:34,080 --> 00:02:36,560
forensics and when i'm not in the garage

75
00:02:36,560 --> 00:02:39,920
i enjoy cooking fighting games i i have

76
00:02:39,920 --> 00:02:41,599
a ukulele that i don't play often enough

77
00:02:41,599 --> 00:02:43,360
and uh but i do also enjoy going for

78
00:02:43,360 --> 00:02:45,040
long walks and getting lost in new

79
00:02:45,040 --> 00:02:47,200
places so

80
00:02:47,200 --> 00:02:49,680
let's talk about today's talk so today's

81
00:02:49,680 --> 00:02:51,120
talk is going to be a very quick

82
00:02:51,120 --> 00:02:52,879
introduction to an in-vehicle network

83
00:02:52,879 --> 00:02:53,920
we're not going to cover a lot of

84
00:02:53,920 --> 00:02:56,000
background information

85
00:02:56,000 --> 00:02:58,159
regarding automotive cyber security as a

86
00:02:58,159 --> 00:02:59,680
as a field as an industry we're going to

87
00:02:59,680 --> 00:03:01,200
kind of jump straight into the

88
00:03:01,200 --> 00:03:03,040
in-vehicle network side of things uh and

89
00:03:03,040 --> 00:03:04,879
vehicle networks being one of the key

90
00:03:04,879 --> 00:03:06,800
aspects of automotive cyber security and

91
00:03:06,800 --> 00:03:08,879
one of the key aspects of security and

92
00:03:08,879 --> 00:03:10,560
automotive that makes it different from

93
00:03:10,560 --> 00:03:13,599
traditional i.t or iot security

94
00:03:13,599 --> 00:03:15,760
it's a very important

95
00:03:15,760 --> 00:03:17,440
i guess fundamental block of the

96
00:03:17,440 --> 00:03:19,599
automotive cyber security industry and

97
00:03:19,599 --> 00:03:21,840
knowing your way around the ibn

98
00:03:21,840 --> 00:03:23,519
situation is kind of the difference

99
00:03:23,519 --> 00:03:24,959
between a traditional security

100
00:03:24,959 --> 00:03:27,040
practitioner and someone who's actually

101
00:03:27,040 --> 00:03:28,640
involved in automotive security so we're

102
00:03:28,640 --> 00:03:30,239
going to be uh focusing a little bit on

103
00:03:30,239 --> 00:03:31,360
that today

104
00:03:31,360 --> 00:03:33,920
we're gonna go over canvas so canvas is

105
00:03:33,920 --> 00:03:35,840
the the main character for today's talk

106
00:03:35,840 --> 00:03:38,239
uh it's the most popular in vehicle

107
00:03:38,239 --> 00:03:40,879
network in use today of course uh we'll

108
00:03:40,879 --> 00:03:42,319
talk a little bit more about what it is

109
00:03:42,319 --> 00:03:44,319
where it's used why it's used so often

110
00:03:44,319 --> 00:03:46,319
and know why it's still being used today

111
00:03:46,319 --> 00:03:47,519
and then we're going to introduce some

112
00:03:47,519 --> 00:03:50,239
can tools that anyone uh can use right

113
00:03:50,239 --> 00:03:51,920
these are going to be freely available

114
00:03:51,920 --> 00:03:54,000
open source software tools that anyone

115
00:03:54,000 --> 00:03:55,920
can download from the internet and if

116
00:03:55,920 --> 00:03:58,080
you have a can bus device you'll be able

117
00:03:58,080 --> 00:04:00,400
to hook it up to your computer and start

118
00:04:00,400 --> 00:04:01,760
actually reading some can data and even

119
00:04:01,760 --> 00:04:03,280
if you don't have a canvas device i'll

120
00:04:03,280 --> 00:04:04,959
show ways for actually creating a

121
00:04:04,959 --> 00:04:07,519
virtual canvas a canvas that exists

122
00:04:07,519 --> 00:04:09,760
entirely in software in your own

123
00:04:09,760 --> 00:04:11,760
computer that you can use it's very good

124
00:04:11,760 --> 00:04:13,280
for like a learning platform or if you

125
00:04:13,280 --> 00:04:15,360
need to simulate or test something a

126
00:04:15,360 --> 00:04:17,358
virtual can bus does the trick just fine

127
00:04:17,358 --> 00:04:19,120
it behaves more or less exactly the same

128
00:04:19,120 --> 00:04:20,560
as a regular can bus

129
00:04:20,560 --> 00:04:22,800
as far as the minus the physical aspects

130
00:04:22,800 --> 00:04:24,960
of course but it does the trick

131
00:04:24,960 --> 00:04:26,160
especially if you're just you know

132
00:04:26,160 --> 00:04:27,600
getting started and can if you're new to

133
00:04:27,600 --> 00:04:29,680
the industry uh it's very good to be

134
00:04:29,680 --> 00:04:32,160
able to know how to set one of those up

135
00:04:32,160 --> 00:04:34,880
so let's go ahead and get started

136
00:04:34,880 --> 00:04:37,199
what is an in-vehicle network so an

137
00:04:37,199 --> 00:04:39,840
in-vehicle network is well obviously

138
00:04:39,840 --> 00:04:42,000
enough it's a network designed for

139
00:04:42,000 --> 00:04:44,320
vehicles but what kind of network is it

140
00:04:44,320 --> 00:04:46,400
where is it used and the vehicle network

141
00:04:46,400 --> 00:04:48,960
refers specifically to the networks that

142
00:04:48,960 --> 00:04:51,040
different components inside a vehicle

143
00:04:51,040 --> 00:04:52,960
use to communicate with one another

144
00:04:52,960 --> 00:04:54,320
right the component side of vehicle

145
00:04:54,320 --> 00:04:56,080
we're going to be referencing in today's

146
00:04:56,080 --> 00:04:58,400
talk we call them ecu's right electronic

147
00:04:58,400 --> 00:05:00,800
control units this could be um as you

148
00:05:00,800 --> 00:05:03,199
can see in the graphic over there uh

149
00:05:03,199 --> 00:05:04,960
like like like a board with a couple of

150
00:05:04,960 --> 00:05:06,479
chips on it maybe a couple different

151
00:05:06,479 --> 00:05:08,400
interfaces this is general like a

152
00:05:08,400 --> 00:05:10,400
logical object we would call an ecu

153
00:05:10,400 --> 00:05:12,639
inside a car it has its own job it has

154
00:05:12,639 --> 00:05:13,520
its own

155
00:05:13,520 --> 00:05:15,440
you know

156
00:05:15,440 --> 00:05:17,360
place or part to play in the vehicle

157
00:05:17,360 --> 00:05:18,880
ecosystem it helps make sure that the

158
00:05:18,880 --> 00:05:21,120
cars is running and

159
00:05:21,120 --> 00:05:22,560
doing all of its

160
00:05:22,560 --> 00:05:24,080
car things right changing the air

161
00:05:24,080 --> 00:05:25,840
conditioner etc so on and so forth

162
00:05:25,840 --> 00:05:27,280
breaking each ecu is going to be a

163
00:05:27,280 --> 00:05:28,720
little bit different but the networks

164
00:05:28,720 --> 00:05:30,400
that we're talking about today are the

165
00:05:30,400 --> 00:05:32,479
networks that these components use to

166
00:05:32,479 --> 00:05:34,240
share information among one another

167
00:05:34,240 --> 00:05:35,759
right you have a lot of different ecu's

168
00:05:35,759 --> 00:05:37,120
in your vehicle each one of them is

169
00:05:37,120 --> 00:05:38,880
taking care of a different task but they

170
00:05:38,880 --> 00:05:40,080
need to share information with one

171
00:05:40,080 --> 00:05:41,680
another sometimes sometimes you may need

172
00:05:41,680 --> 00:05:43,759
to report to your stereo how fast you're

173
00:05:43,759 --> 00:05:45,120
going because a lot of cars these days

174
00:05:45,120 --> 00:05:46,800
will have a mechanism where if you're

175
00:05:46,800 --> 00:05:48,400
going faster the music will

176
00:05:48,400 --> 00:05:49,680
automatically turn up the volume to

177
00:05:49,680 --> 00:05:52,160
compensate for the louder sounds outside

178
00:05:52,160 --> 00:05:54,160
uh so it is one example of course

179
00:05:54,160 --> 00:05:55,919
there's a million examples also you can

180
00:05:55,919 --> 00:05:58,000
think of your your instrument cluster uh

181
00:05:58,000 --> 00:05:59,919
accurately reflecting the speed of your

182
00:05:59,919 --> 00:06:01,919
vehicle in a manner that the human being

183
00:06:01,919 --> 00:06:03,440
can understand so that's another use in

184
00:06:03,440 --> 00:06:05,759
vehicle networks is sharing information

185
00:06:05,759 --> 00:06:07,520
from the control parts of the vehicle to

186
00:06:07,520 --> 00:06:09,440
the display parts uh like an instrument

187
00:06:09,440 --> 00:06:10,560
cluster

188
00:06:10,560 --> 00:06:12,560
so what makes them a little bit

189
00:06:12,560 --> 00:06:14,479
different in their actual design

190
00:06:14,479 --> 00:06:16,479
relative to standard you know it

191
00:06:16,479 --> 00:06:17,840
networks i'm talking things like you

192
00:06:17,840 --> 00:06:20,960
know your standard internet or

193
00:06:20,960 --> 00:06:24,080
you know ip network kind of

194
00:06:24,080 --> 00:06:25,919
traditional networking as we'll put it

195
00:06:25,919 --> 00:06:28,000
right you're your usual you know home

196
00:06:28,000 --> 00:06:29,360
internet what's what what what's

197
00:06:29,360 --> 00:06:31,039
different about the networking use in

198
00:06:31,039 --> 00:06:32,880
these vehicles right so they're designed

199
00:06:32,880 --> 00:06:35,680
with very specific purposes in mind off

200
00:06:35,680 --> 00:06:37,520
you know first of all uh they're

201
00:06:37,520 --> 00:06:39,600
designed to have right reliability right

202
00:06:39,600 --> 00:06:41,440
because these are devices that are going

203
00:06:41,440 --> 00:06:43,520
to be communicating inside a vehicle a

204
00:06:43,520 --> 00:06:46,160
vehicle is a very heavy object that has

205
00:06:46,160 --> 00:06:47,680
people inside it and these people are

206
00:06:47,680 --> 00:06:49,440
very frail if the vehicle crashes or

207
00:06:49,440 --> 00:06:52,000
malfunctions and god forbid you may have

208
00:06:52,000 --> 00:06:54,160
a situation where bodily harm is the

209
00:06:54,160 --> 00:06:56,400
result someone may get injured even

210
00:06:56,400 --> 00:06:58,319
worse you know death and in the worst

211
00:06:58,319 --> 00:07:00,400
scenario so these networks are designed

212
00:07:00,400 --> 00:07:03,840
so they can be used in a very

213
00:07:04,000 --> 00:07:05,039
they're very

214
00:07:05,039 --> 00:07:07,199
robust they're very unlikely to fail and

215
00:07:07,199 --> 00:07:09,360
they have a lot of measures included in

216
00:07:09,360 --> 00:07:11,680
them to kind of support that right

217
00:07:11,680 --> 00:07:14,720
backups fail-safes so on and so forth

218
00:07:14,720 --> 00:07:18,000
again in the same vein of reliability

219
00:07:18,000 --> 00:07:19,840
timing requirements are very important

220
00:07:19,840 --> 00:07:21,280
for in vehicle networks right these in

221
00:07:21,280 --> 00:07:23,039
vehicle networks will usually be

222
00:07:23,039 --> 00:07:24,639
communicating several times a second

223
00:07:24,639 --> 00:07:26,160
several hundred times a second depending

224
00:07:26,160 --> 00:07:28,319
on the actual network and how much data

225
00:07:28,319 --> 00:07:29,520
they're sending of course is going to be

226
00:07:29,520 --> 00:07:31,039
depend on dependent on the network

227
00:07:31,039 --> 00:07:33,599
technology in discussion but they are

228
00:07:33,599 --> 00:07:34,720
often

229
00:07:34,720 --> 00:07:37,199
designed with a strict you know minimum

230
00:07:37,199 --> 00:07:38,639
time guarantee

231
00:07:38,639 --> 00:07:40,240
on the transmission of any message

232
00:07:40,240 --> 00:07:42,319
across a network bus

233
00:07:42,319 --> 00:07:44,400
to ensure that you know decisions that

234
00:07:44,400 --> 00:07:46,160
require data from different components

235
00:07:46,160 --> 00:07:47,840
can be made as fast as possible and

236
00:07:47,840 --> 00:07:49,039
accurately without missing their

237
00:07:49,039 --> 00:07:51,039
deadlines as it were you don't want your

238
00:07:51,039 --> 00:07:52,479
airbags going off a little bit late

239
00:07:52,479 --> 00:07:54,000
because your accelerometer didn't send

240
00:07:54,000 --> 00:07:55,440
the data fast enough

241
00:07:55,440 --> 00:07:56,960
that would be uh probably a worst case

242
00:07:56,960 --> 00:07:58,800
scenario of course but and then

243
00:07:58,800 --> 00:08:01,919
simplicity so another thing that differs

244
00:08:01,919 --> 00:08:03,599
from traditional

245
00:08:03,599 --> 00:08:05,280
general purpose networks is that

246
00:08:05,280 --> 00:08:06,879
automotive and vehicle networks are

247
00:08:06,879 --> 00:08:09,039
generally designed to have

248
00:08:09,039 --> 00:08:12,080
very limited functionality because

249
00:08:12,080 --> 00:08:14,000
you know you want to maximize your speed

250
00:08:14,000 --> 00:08:15,440
and efficiency while also minimizing

251
00:08:15,440 --> 00:08:17,360
costs you don't need a bunch of

252
00:08:17,360 --> 00:08:19,280
complicated you know

253
00:08:19,280 --> 00:08:21,039
overhead in there you don't need a bunch

254
00:08:21,039 --> 00:08:22,720
of confidence some it does get

255
00:08:22,720 --> 00:08:25,520
complicated sometimes i won't lie uh but

256
00:08:25,520 --> 00:08:27,759
in general they're a little bit less

257
00:08:27,759 --> 00:08:29,599
complex than traditional networking

258
00:08:29,599 --> 00:08:32,000
technologies uh and that makes them

259
00:08:32,000 --> 00:08:34,719
easier to keep fail safe and and and

260
00:08:34,719 --> 00:08:37,360
robust right because there isn't so much

261
00:08:37,360 --> 00:08:39,599
you have to account for

262
00:08:39,599 --> 00:08:41,440
uh but and you know they're they're a

263
00:08:41,440 --> 00:08:43,279
ubiquitous part of the modern vehicle

264
00:08:43,279 --> 00:08:44,480
the modern vehicle of course being

265
00:08:44,480 --> 00:08:45,839
filled with electronics you know not

266
00:08:45,839 --> 00:08:48,320
like the model t from back in whenever

267
00:08:48,320 --> 00:08:50,480
uh you know in the last 20 30 years

268
00:08:50,480 --> 00:08:52,240
automobiles have become more or less

269
00:08:52,240 --> 00:08:52,959
full

270
00:08:52,959 --> 00:08:54,800
full of electronics right your windows

271
00:08:54,800 --> 00:08:56,640
are electronic your transmission is

272
00:08:56,640 --> 00:08:57,920
automatic

273
00:08:57,920 --> 00:08:59,040
even your steering wheel might have

274
00:08:59,040 --> 00:09:00,640
powered steering built into it so the

275
00:09:00,640 --> 00:09:02,160
electronics are slowly starting to

276
00:09:02,160 --> 00:09:03,839
overtake the physical mechanical

277
00:09:03,839 --> 00:09:06,560
mechanisms of a vehicle uh you know

278
00:09:06,560 --> 00:09:08,080
especially with electric vehicles moving

279
00:09:08,080 --> 00:09:10,800
into 2022 uh this is gonna be a huge

280
00:09:10,800 --> 00:09:12,720
part of it all right so these

281
00:09:12,720 --> 00:09:14,399
in vehicle networks are used for not

282
00:09:14,399 --> 00:09:15,440
only sharing information like we

283
00:09:15,440 --> 00:09:17,279
mentioned earlier but also things like

284
00:09:17,279 --> 00:09:19,040
the actual operation of the vehicle this

285
00:09:19,040 --> 00:09:20,720
is uh what you would call an x by wire

286
00:09:20,720 --> 00:09:23,120
system in which a given vehicle network

287
00:09:23,120 --> 00:09:25,519
is directly responsible of you know

288
00:09:25,519 --> 00:09:27,279
controlling a phenomenon the vehicle

289
00:09:27,279 --> 00:09:29,519
performs like speed or speeding excuse

290
00:09:29,519 --> 00:09:31,760
me steering by wire braking by wire

291
00:09:31,760 --> 00:09:33,519
driving by wire in the actual throttle

292
00:09:33,519 --> 00:09:35,120
itself all these can be linked to an

293
00:09:35,120 --> 00:09:36,800
vehicle network and the diagnostics is

294
00:09:36,800 --> 00:09:39,440
another really important part of a ivn

295
00:09:39,440 --> 00:09:42,000
technologies implementation in a vehicle

296
00:09:42,000 --> 00:09:44,080
right when someone needs to

297
00:09:44,080 --> 00:09:45,760
request information from a component in

298
00:09:45,760 --> 00:09:47,440
a vehicle they'll usually connect to it

299
00:09:47,440 --> 00:09:49,120
and request information

300
00:09:49,120 --> 00:09:50,480
over an in-vehicle network using

301
00:09:50,480 --> 00:09:52,080
diagnostic protocols right the

302
00:09:52,080 --> 00:09:53,839
diagnostic protocols are often built on

303
00:09:53,839 --> 00:09:55,600
top of a given in vehicle network

304
00:09:55,600 --> 00:09:57,120
technology and i don't think we'll get

305
00:09:57,120 --> 00:09:58,720
too deep into diagnostics today just

306
00:09:58,720 --> 00:10:01,279
because it is kind of a a second level

307
00:10:01,279 --> 00:10:04,320
uh in vehicle network topic but for the

308
00:10:04,320 --> 00:10:05,279
time being just remember that

309
00:10:05,279 --> 00:10:06,959
diagnostics are very closely linked in

310
00:10:06,959 --> 00:10:09,760
vehicle networks in today's vehicles

311
00:10:09,760 --> 00:10:11,279
so but why is it important to study

312
00:10:11,279 --> 00:10:12,480
these right we mentioned that they're

313
00:10:12,480 --> 00:10:13,760
pretty simple but that doesn't mean that

314
00:10:13,760 --> 00:10:15,040
their child's played it doesn't mean

315
00:10:15,040 --> 00:10:16,240
that they're

316
00:10:16,240 --> 00:10:18,000
not worth investing time into

317
00:10:18,000 --> 00:10:20,079
understanding they are more or less

318
00:10:20,079 --> 00:10:22,079
unique to automotive this isn't true

319
00:10:22,079 --> 00:10:24,240
because uh can for example is very

320
00:10:24,240 --> 00:10:27,200
popular for things like robotics uh if

321
00:10:27,200 --> 00:10:28,480
you're um

322
00:10:28,480 --> 00:10:30,240
if you ever did first robotics in high

323
00:10:30,240 --> 00:10:31,600
school you may actually have some

324
00:10:31,600 --> 00:10:33,920
experience with can because can actually

325
00:10:33,920 --> 00:10:35,360
stands for the controller area network

326
00:10:35,360 --> 00:10:36,880
and we'll talk more about can later of

327
00:10:36,880 --> 00:10:38,079
course but

328
00:10:38,079 --> 00:10:39,279
controller could be any controller it

329
00:10:39,279 --> 00:10:40,720
doesn't have to be inside a car it could

330
00:10:40,720 --> 00:10:42,399
be inside a washing machine or it can be

331
00:10:42,399 --> 00:10:44,160
inside a train it can be anywhere really

332
00:10:44,160 --> 00:10:46,000
but it was originally developed for the

333
00:10:46,000 --> 00:10:47,680
automotive environment

334
00:10:47,680 --> 00:10:48,560
but

335
00:10:48,560 --> 00:10:50,640
in vehicle networks are really the most

336
00:10:50,640 --> 00:10:52,800
automotive part of automotive security

337
00:10:52,800 --> 00:10:54,800
because the rest of automotive security

338
00:10:54,800 --> 00:10:57,120
is more or less you know the same as

339
00:10:57,120 --> 00:10:58,480
traditional security we're talking about

340
00:10:58,480 --> 00:10:59,680
things like

341
00:10:59,680 --> 00:11:01,440
okay poor scanning your head unit making

342
00:11:01,440 --> 00:11:03,120
sure that you know there are no

343
00:11:03,120 --> 00:11:04,480
vulnerable services running on it okay

344
00:11:04,480 --> 00:11:07,200
well that much is not exactly you know

345
00:11:07,200 --> 00:11:08,959
automotive specific maybe just the

346
00:11:08,959 --> 00:11:10,800
component itself is only automotive but

347
00:11:10,800 --> 00:11:12,480
it's running a regular operating system

348
00:11:12,480 --> 00:11:14,560
just like any other device right

349
00:11:14,560 --> 00:11:15,920
whereas in vehicle networks are more or

350
00:11:15,920 --> 00:11:18,320
less unique to automotive almost like i

351
00:11:18,320 --> 00:11:20,399
said uh and then they make really the

352
00:11:20,399 --> 00:11:22,320
difference between someone who's first

353
00:11:22,320 --> 00:11:24,000
in security versus someone who's versed

354
00:11:24,000 --> 00:11:26,720
in automotive cyber security

355
00:11:26,720 --> 00:11:28,480
and as we mentioned before they're very

356
00:11:28,480 --> 00:11:30,160
crucial to the operation of the vehicle

357
00:11:30,160 --> 00:11:32,480
so knowing how a vehicle network works

358
00:11:32,480 --> 00:11:35,200
is the kind of the alpha and the omega

359
00:11:35,200 --> 00:11:37,120
of being able to hack a car because once

360
00:11:37,120 --> 00:11:39,839
you compromise your you know your device

361
00:11:39,839 --> 00:11:41,440
you've got root access if you don't know

362
00:11:41,440 --> 00:11:42,720
how the actual

363
00:11:42,720 --> 00:11:45,120
uh networks work to communicate

364
00:11:45,120 --> 00:11:46,560
throughout the vehicle you know you can

365
00:11:46,560 --> 00:11:48,320
only go so far and that's what makes

366
00:11:48,320 --> 00:11:49,920
them

367
00:11:49,920 --> 00:11:52,480
the most i guess fundamental vehicle

368
00:11:52,480 --> 00:11:56,000
part of vehicle cyber security

369
00:11:56,000 --> 00:11:57,839
so let's go over some of the different

370
00:11:57,839 --> 00:11:59,360
in vehicle network technologies that are

371
00:11:59,360 --> 00:12:01,920
in use today so uh there are different

372
00:12:01,920 --> 00:12:03,519
networks for different tasks each of

373
00:12:03,519 --> 00:12:05,360
these networks that i have listed here

374
00:12:05,360 --> 00:12:09,040
they have you know their own special

375
00:12:09,040 --> 00:12:10,880
use cases that they're designed for

376
00:12:10,880 --> 00:12:13,839
right automotive ethernet is a very new

377
00:12:13,839 --> 00:12:15,519
example of an in-vehicle network right

378
00:12:15,519 --> 00:12:17,519
it's very similar to classic ethernet

379
00:12:17,519 --> 00:12:19,360
but the physical interface is usually a

380
00:12:19,360 --> 00:12:20,959
little bit different but it's you know

381
00:12:20,959 --> 00:12:22,720
designed to be very very high bandwidth

382
00:12:22,720 --> 00:12:24,399
we're talking

383
00:12:24,399 --> 00:12:27,120
several gigabits per second this is for

384
00:12:27,120 --> 00:12:29,040
devices that need to send a lot of data

385
00:12:29,040 --> 00:12:30,959
maybe visual data for example a camera

386
00:12:30,959 --> 00:12:33,200
sending a lot of you know high quality

387
00:12:33,200 --> 00:12:35,040
image data to a different ecu to have

388
00:12:35,040 --> 00:12:36,560
processed for

389
00:12:36,560 --> 00:12:38,639
self driving you know adaf systems

390
00:12:38,639 --> 00:12:40,720
collision detection etc all of these

391
00:12:40,720 --> 00:12:43,519
very computationally intensive processes

392
00:12:43,519 --> 00:12:45,920
need a lot of visual data for example so

393
00:12:45,920 --> 00:12:48,079
coming from a lidar sensor or a camera

394
00:12:48,079 --> 00:12:49,680
you'll usually use something with a very

395
00:12:49,680 --> 00:12:51,680
high bandwidth like automotive ethernet

396
00:12:51,680 --> 00:12:52,720
to

397
00:12:52,720 --> 00:12:54,720
carry all that data right so automotive

398
00:12:54,720 --> 00:12:57,279
ethernet is kind of the expensive cool

399
00:12:57,279 --> 00:12:59,360
new you know top-of-the-line

400
00:12:59,360 --> 00:13:01,040
state-of-the-art network that's in use

401
00:13:01,040 --> 00:13:02,959
today in automotives but of course there

402
00:13:02,959 --> 00:13:04,639
are some things that are not quite as

403
00:13:04,639 --> 00:13:06,480
complicated and don't need to have such

404
00:13:06,480 --> 00:13:09,440
a complicated um network technology in

405
00:13:09,440 --> 00:13:10,480
place

406
00:13:10,480 --> 00:13:12,160
uh one of these network technologies

407
00:13:12,160 --> 00:13:13,600
that loves to pick up the slack there is

408
00:13:13,600 --> 00:13:15,839
the local interconnect network i it's

409
00:13:15,839 --> 00:13:17,200
usually weird to introduce this one

410
00:13:17,200 --> 00:13:19,440
before can because lynn was actually

411
00:13:19,440 --> 00:13:20,560
created

412
00:13:20,560 --> 00:13:24,079
uh as kind of can's little brother but

413
00:13:24,079 --> 00:13:25,920
basically all you need to know is the l

414
00:13:25,920 --> 00:13:28,000
in lin stands for low bandwidth it's a

415
00:13:28,000 --> 00:13:30,720
very very slow uh network i won't go too

416
00:13:30,720 --> 00:13:32,560
much into the details for lin itself

417
00:13:32,560 --> 00:13:35,440
just because this is a can bus course of

418
00:13:35,440 --> 00:13:37,279
course um

419
00:13:37,279 --> 00:13:38,880
but lane is used for things that are

420
00:13:38,880 --> 00:13:41,760
very you know very basic very small

421
00:13:41,760 --> 00:13:42,959
amount of information needs to be

422
00:13:42,959 --> 00:13:44,079
transmitted

423
00:13:44,079 --> 00:13:45,920
maybe some diagnostics done over lane

424
00:13:45,920 --> 00:13:47,680
but it's very rare it's not very common

425
00:13:47,680 --> 00:13:49,680
uh but then there's also things like you

426
00:13:49,680 --> 00:13:51,600
know non-safety critical systems are

427
00:13:51,600 --> 00:13:53,279
usually delegated to land because it's

428
00:13:53,279 --> 00:13:54,800
very very cheap right it's usually a

429
00:13:54,800 --> 00:13:57,440
single wire and it doesn't operate very

430
00:13:57,440 --> 00:14:00,079
very quickly you know i think about 250

431
00:14:00,079 --> 00:14:01,600
kilobits per second is the fastest you

432
00:14:01,600 --> 00:14:02,560
can go

433
00:14:02,560 --> 00:14:04,959
or maybe even less actually i'm not

434
00:14:04,959 --> 00:14:06,160
remembering the exact number off top of

435
00:14:06,160 --> 00:14:08,320
my head right now uh but you could see

436
00:14:08,320 --> 00:14:11,519
lynn in stuff like your seat reclining

437
00:14:11,519 --> 00:14:13,519
system right if you have a seat in your

438
00:14:13,519 --> 00:14:15,040
vehicle with an automatic recliner you

439
00:14:15,040 --> 00:14:17,440
can adjust the height adjust the uh the

440
00:14:17,440 --> 00:14:19,120
position the angle that's usually

441
00:14:19,120 --> 00:14:20,720
dedicated something like lin because

442
00:14:20,720 --> 00:14:22,320
it's not

443
00:14:22,320 --> 00:14:24,000
safety critical as it were right you

444
00:14:24,000 --> 00:14:25,760
don't have to worry about your car not

445
00:14:25,760 --> 00:14:27,440
working in the event something goes

446
00:14:27,440 --> 00:14:28,720
wrong with a lin bus and you can't

447
00:14:28,720 --> 00:14:30,720
change the position of your seat right

448
00:14:30,720 --> 00:14:32,800
it's just not that important so that's

449
00:14:32,800 --> 00:14:34,880
where things like lin are actually used

450
00:14:34,880 --> 00:14:37,920
to save costs while also ensuring that

451
00:14:37,920 --> 00:14:40,959
you know you haven't uh sacrificed any

452
00:14:40,959 --> 00:14:42,800
real robustness for something that

453
00:14:42,800 --> 00:14:44,639
actually needs it and then finally you

454
00:14:44,639 --> 00:14:46,560
know the the main character of course is

455
00:14:46,560 --> 00:14:48,800
can controller area network it's

456
00:14:48,800 --> 00:14:50,240
probably the most common in vehicle

457
00:14:50,240 --> 00:14:51,600
network all over the world it is

458
00:14:51,600 --> 00:14:52,720
actually

459
00:14:52,720 --> 00:14:54,480
mandated in the united states and europe

460
00:14:54,480 --> 00:14:57,279
for emissions diagnostics uh

461
00:14:57,279 --> 00:15:00,079
in vehicles um interestingly enough i'm

462
00:15:00,079 --> 00:15:01,279
not going to talk too much about that

463
00:15:01,279 --> 00:15:04,560
today but it's good to know that canvas

464
00:15:04,560 --> 00:15:06,160
is almost is going to be present in

465
00:15:06,160 --> 00:15:08,480
almost every vehicle in the world today

466
00:15:08,480 --> 00:15:09,760
you know i would be very surprised to

467
00:15:09,760 --> 00:15:12,079
find a modern vehicle you know made in

468
00:15:12,079 --> 00:15:14,240
the 2000s and later that doesn't have

469
00:15:14,240 --> 00:15:16,480
canvas of some sort in it and what's

470
00:15:16,480 --> 00:15:18,160
great about canvas is that because of

471
00:15:18,160 --> 00:15:19,920
its popularity and ubiquity throughout

472
00:15:19,920 --> 00:15:21,680
the industry there are a lot of free

473
00:15:21,680 --> 00:15:23,839
tools available for us that will allow

474
00:15:23,839 --> 00:15:25,519
us to actually learn how to use the can

475
00:15:25,519 --> 00:15:27,199
bus even if we don't have access to a

476
00:15:27,199 --> 00:15:29,120
card of hack which can be expensive of

477
00:15:29,120 --> 00:15:30,079
course

478
00:15:30,079 --> 00:15:32,079
or any hardware which could also be

479
00:15:32,079 --> 00:15:33,920
expensive if you want to buy expensive

480
00:15:33,920 --> 00:15:36,560
hardware there's cheap hardware too but

481
00:15:36,560 --> 00:15:38,720
we're going to be focusing on free

482
00:15:38,720 --> 00:15:41,199
software only tools in today's lecture

483
00:15:41,199 --> 00:15:43,600
just that everyone in the world has the

484
00:15:43,600 --> 00:15:47,040
opportunity to follow along so

485
00:15:47,040 --> 00:15:48,720
the canvas crash course this is not

486
00:15:48,720 --> 00:15:51,279
going to be a full in-depth uh

487
00:15:51,279 --> 00:15:53,040
discussion on canvas that would take uh

488
00:15:53,040 --> 00:15:54,880
quite a long time and i i do want to

489
00:15:54,880 --> 00:15:56,639
keep you guys entertained and hopefully

490
00:15:56,639 --> 00:15:58,959
engage for for the entire hour i'm here

491
00:15:58,959 --> 00:16:00,560
but

492
00:16:00,560 --> 00:16:02,959
the basics of can right

493
00:16:02,959 --> 00:16:05,120
it operates on a bus topology that is

494
00:16:05,120 --> 00:16:07,680
multi-master right so it is a generally

495
00:16:07,680 --> 00:16:09,440
considered a two-wire network you can

496
00:16:09,440 --> 00:16:10,880
have a third for the ground if you want

497
00:16:10,880 --> 00:16:12,560
but the main ones are the two wires in

498
00:16:12,560 --> 00:16:14,320
can can high can low

499
00:16:14,320 --> 00:16:17,279
and every node connected to this

500
00:16:17,279 --> 00:16:18,480
can network

501
00:16:18,480 --> 00:16:19,839
is a master on this network they can

502
00:16:19,839 --> 00:16:20,959
transmit it will they don't need

503
00:16:20,959 --> 00:16:22,800
anyone's permission they have complete

504
00:16:22,800 --> 00:16:25,279
autonomy on what they can transmit onto

505
00:16:25,279 --> 00:16:26,880
this network and when you transmit a

506
00:16:26,880 --> 00:16:29,120
message onto a can bus all of the nodes

507
00:16:29,120 --> 00:16:30,800
on this canvas receive the message at

508
00:16:30,800 --> 00:16:32,000
the same time

509
00:16:32,000 --> 00:16:34,560
right and just oh i should clarify this

510
00:16:34,560 --> 00:16:36,160
uh there are a lot of different can

511
00:16:36,160 --> 00:16:38,240
standards but when we talk about can

512
00:16:38,240 --> 00:16:40,560
today we're talking about classic can

513
00:16:40,560 --> 00:16:43,120
2.0 be there's can fd for flexible data

514
00:16:43,120 --> 00:16:45,759
rate there's

515
00:16:45,839 --> 00:16:47,360
there's a lot of different types of can

516
00:16:47,360 --> 00:16:48,880
there's like the special can for for

517
00:16:48,880 --> 00:16:52,880
boats a special can for for trucks j1939

518
00:16:52,880 --> 00:16:54,079
we're not talking about that today we're

519
00:16:54,079 --> 00:16:56,639
talking mostly about the classic can 2.0

520
00:16:56,639 --> 00:16:58,639
be this is generally

521
00:16:58,639 --> 00:17:00,240
you know the most common form of can

522
00:17:00,240 --> 00:17:02,079
also known as high speed can

523
00:17:02,079 --> 00:17:03,360
just assume that's what we're talking

524
00:17:03,360 --> 00:17:06,240
about sorry if that's confusing but

525
00:17:06,240 --> 00:17:07,599
there are a lot of different types of

526
00:17:07,599 --> 00:17:10,319
can that you might want to learn about

527
00:17:10,319 --> 00:17:12,079
more if you get into this field but for

528
00:17:12,079 --> 00:17:12,880
now

529
00:17:12,880 --> 00:17:14,240
i'm going to stop talking about this and

530
00:17:14,240 --> 00:17:17,520
just go on with the with my talk so

531
00:17:17,520 --> 00:17:20,079
regular classic can supports data frame

532
00:17:20,079 --> 00:17:21,919
payloads of up to

533
00:17:21,919 --> 00:17:23,839
eight bytes per payload right so you can

534
00:17:23,839 --> 00:17:25,520
fit up to eight bytes of information in

535
00:17:25,520 --> 00:17:28,079
one can frame uh of course multiple can

536
00:17:28,079 --> 00:17:30,080
frames can be linked into one larger can

537
00:17:30,080 --> 00:17:31,679
message if you use certain higher layer

538
00:17:31,679 --> 00:17:33,120
protocols such as

539
00:17:33,120 --> 00:17:36,160
iso tp um but that's a little a little

540
00:17:36,160 --> 00:17:37,200
bit

541
00:17:37,200 --> 00:17:39,520
more more complicated and not really

542
00:17:39,520 --> 00:17:41,440
appropriate for an introductory course

543
00:17:41,440 --> 00:17:43,600
but can is very robust it has a very

544
00:17:43,600 --> 00:17:45,919
good automated error management system

545
00:17:45,919 --> 00:17:48,400
that allows it to keep itself from

546
00:17:48,400 --> 00:17:50,160
crashing and burning and just bringing

547
00:17:50,160 --> 00:17:52,160
down the whole vehicle on accident uh

548
00:17:52,160 --> 00:17:53,919
arbitration based priority system helps

549
00:17:53,919 --> 00:17:55,360
with this as well

550
00:17:55,360 --> 00:17:57,039
uh in the arbitration-based priority

551
00:17:57,039 --> 00:17:58,960
system each can frame has arbitration

552
00:17:58,960 --> 00:18:00,240
field we will look at a cam frame which

553
00:18:00,240 --> 00:18:01,679
is a second of course so you can see

554
00:18:01,679 --> 00:18:03,039
what i'm talking about but this

555
00:18:03,039 --> 00:18:05,840
arbitration field uh assigns a priority

556
00:18:05,840 --> 00:18:07,280
to each message so that you can be sure

557
00:18:07,280 --> 00:18:08,880
that the more important messages on your

558
00:18:08,880 --> 00:18:11,679
bus are not getting crowded out by less

559
00:18:11,679 --> 00:18:13,760
important diagnostic messages or maybe

560
00:18:13,760 --> 00:18:15,520
information that isn't quite as relevant

561
00:18:15,520 --> 00:18:17,280
to the safety or

562
00:18:17,280 --> 00:18:19,520
operation of the vehicle

563
00:18:19,520 --> 00:18:21,440
and that's done through arbitration now

564
00:18:21,440 --> 00:18:23,520
in arbitration in can you know zero

565
00:18:23,520 --> 00:18:25,280
value is a dominant value and a one

566
00:18:25,280 --> 00:18:27,039
value is a recessive value i'll explain

567
00:18:27,039 --> 00:18:28,240
a little bit more about what this means

568
00:18:28,240 --> 00:18:29,679
in the next slide when we actually look

569
00:18:29,679 --> 00:18:32,000
at what's inside a can frame

570
00:18:32,000 --> 00:18:34,080
but know for now that

571
00:18:34,080 --> 00:18:36,559
zero is dominant one is recessive

572
00:18:36,559 --> 00:18:38,400
it's decently fast as far as in vehicle

573
00:18:38,400 --> 00:18:40,160
networks go it's good bit faster than

574
00:18:40,160 --> 00:18:41,440
lin that we mentioned earlier but it's

575
00:18:41,440 --> 00:18:43,280
also a good bit slower than

576
00:18:43,280 --> 00:18:45,200
um automotive ethernet the cool thing

577
00:18:45,200 --> 00:18:47,280
about can is that it's just fast enough

578
00:18:47,280 --> 00:18:48,960
to do

579
00:18:48,960 --> 00:18:50,559
most of the things a vehicle needs to

580
00:18:50,559 --> 00:18:52,720
have done right as of now you know as of

581
00:18:52,720 --> 00:18:54,640
today most vehicles in the world still

582
00:18:54,640 --> 00:18:56,720
use can and that's because having more

583
00:18:56,720 --> 00:18:59,280
speed isn't necessarily necessarily

584
00:18:59,280 --> 00:19:01,360
necessary is it strictly necessary in a

585
00:19:01,360 --> 00:19:04,080
lot of vehicle subsystems right one

586
00:19:04,080 --> 00:19:05,840
megabit per second is just good enough

587
00:19:05,840 --> 00:19:07,919
and so if it's not broke don't fix it

588
00:19:07,919 --> 00:19:09,360
it's kind of the motto

589
00:19:09,360 --> 00:19:10,720
the industry's been using and why they

590
00:19:10,720 --> 00:19:12,320
still use can today

591
00:19:12,320 --> 00:19:14,559
it uses dual wire differential signaling

592
00:19:14,559 --> 00:19:17,120
this makes it very resilient to

593
00:19:17,120 --> 00:19:19,360
electromagnetic interference which is

594
00:19:19,360 --> 00:19:21,600
very good the physics band is very cool

595
00:19:21,600 --> 00:19:23,039
but essentially because the wires are

596
00:19:23,039 --> 00:19:24,640
very closely intertwined and because

597
00:19:24,640 --> 00:19:26,480
it's using differential signaling any

598
00:19:26,480 --> 00:19:28,080
noise that applies to both wires will

599
00:19:28,080 --> 00:19:29,760
actually get cancelled out because the

600
00:19:29,760 --> 00:19:32,320
differential will remain the same uh all

601
00:19:32,320 --> 00:19:34,320
the time so

602
00:19:34,320 --> 00:19:36,160
it is it's pretty interesting of course

603
00:19:36,160 --> 00:19:38,960
i recommend anyone interested in

604
00:19:38,960 --> 00:19:40,640
that physical aspect of can to look more

605
00:19:40,640 --> 00:19:41,679
into it

606
00:19:41,679 --> 00:19:44,480
so let's talk about the actual can frame

607
00:19:44,480 --> 00:19:45,760
so there are a couple different types of

608
00:19:45,760 --> 00:19:48,559
can frames the most common ones by far

609
00:19:48,559 --> 00:19:50,240
are data frames these are going to take

610
00:19:50,240 --> 00:19:53,280
up about 99.5 percent of every can frame

611
00:19:53,280 --> 00:19:55,039
you ever see in the world

612
00:19:55,039 --> 00:19:56,720
but just for consistency's sake we're

613
00:19:56,720 --> 00:19:58,160
going to mention the other ones remote

614
00:19:58,160 --> 00:20:00,000
frames are often used to request data

615
00:20:00,000 --> 00:20:01,440
from a node instead of actually sending

616
00:20:01,440 --> 00:20:03,760
data itself overload frames are used

617
00:20:03,760 --> 00:20:05,760
when a node needs to communicate to

618
00:20:05,760 --> 00:20:07,039
other nodes on the bus and kind of ask

619
00:20:07,039 --> 00:20:08,799
them to slow down maybe its processor

620
00:20:08,799 --> 00:20:10,960
isn't fast enough to handle all the data

621
00:20:10,960 --> 00:20:12,559
being sent and you can actually use

622
00:20:12,559 --> 00:20:14,720
these to slow down a can bus and then

623
00:20:14,720 --> 00:20:16,640
error frames which are

624
00:20:16,640 --> 00:20:18,799
very important in ensuring that canvas

625
00:20:18,799 --> 00:20:21,600
operates smoothly airframes are used to

626
00:20:21,600 --> 00:20:23,440
allow nodes to talk to another and kind

627
00:20:23,440 --> 00:20:25,520
of if there are any issues with one

628
00:20:25,520 --> 00:20:27,120
particular node's transmission it's able

629
00:20:27,120 --> 00:20:28,640
to kind of communicate to the rest of

630
00:20:28,640 --> 00:20:30,000
the bus saying like hey i'm having a

631
00:20:30,000 --> 00:20:32,320
problem i might need to turn myself off

632
00:20:32,320 --> 00:20:34,480
but the the error state of canbus is

633
00:20:34,480 --> 00:20:35,440
very cool

634
00:20:35,440 --> 00:20:36,640
but we're not going to talk about the

635
00:20:36,640 --> 00:20:38,559
error state management and how that

636
00:20:38,559 --> 00:20:39,919
works today it's a little bit more in

637
00:20:39,919 --> 00:20:41,120
depth

638
00:20:41,120 --> 00:20:43,200
um but the different frames we have

639
00:20:43,200 --> 00:20:44,640
sorry the different fields we have in a

640
00:20:44,640 --> 00:20:46,480
can frame are as follows we have the

641
00:20:46,480 --> 00:20:47,600
start of

642
00:20:47,600 --> 00:20:48,480
frame

643
00:20:48,480 --> 00:20:50,240
field which is actually just one bit and

644
00:20:50,240 --> 00:20:51,679
it's always zero

645
00:20:51,679 --> 00:20:54,159
because the can bus idle state is

646
00:20:54,159 --> 00:20:56,880
usually set at the voltage for one so

647
00:20:56,880 --> 00:20:59,520
when you see a zero appear that's when

648
00:20:59,520 --> 00:21:01,760
a node is indicated hey

649
00:21:01,760 --> 00:21:03,600
i would like to send a message on the

650
00:21:03,600 --> 00:21:05,840
canvas that zero is the sign like hey i

651
00:21:05,840 --> 00:21:08,159
would like to send some data so guys

652
00:21:08,159 --> 00:21:09,679
please listen

653
00:21:09,679 --> 00:21:12,080
uh following the start of frame bit we

654
00:21:12,080 --> 00:21:14,480
have the arbitration field uh for some

655
00:21:14,480 --> 00:21:15,840
reason i switched the positions of the

656
00:21:15,840 --> 00:21:17,280
arbitration and control field in the

657
00:21:17,280 --> 00:21:19,039
actual list here but the arbitration

658
00:21:19,039 --> 00:21:21,520
field definitely comes next and it is 12

659
00:21:21,520 --> 00:21:25,440
bits wide the first 11 bits are used for

660
00:21:25,440 --> 00:21:27,520
the actual arbitration id

661
00:21:27,520 --> 00:21:29,840
and the last bit is the rtr field this

662
00:21:29,840 --> 00:21:31,840
means you know if the rcr field is

663
00:21:31,840 --> 00:21:34,000
checked it essentially means that you're

664
00:21:34,000 --> 00:21:35,679
sending a remote frame but if it's not

665
00:21:35,679 --> 00:21:37,679
it means you're sending a data frame now

666
00:21:37,679 --> 00:21:39,440
in can bus it's worth mentioning that

667
00:21:39,440 --> 00:21:42,320
there are two different types of uh

668
00:21:42,320 --> 00:21:45,120
ids right 11 frame ids and extended ids

669
00:21:45,120 --> 00:21:46,960
so 11 frame is the standard and extended

670
00:21:46,960 --> 00:21:50,000
ids are 29 bits but for

671
00:21:50,000 --> 00:21:51,440
you know for for today we're going to be

672
00:21:51,440 --> 00:21:54,640
mostly talking about 11 bit identifiers

673
00:21:54,640 --> 00:21:56,480
uh when we're talking about canvas but

674
00:21:56,480 --> 00:21:58,480
219 bit ones work almost exactly the

675
00:21:58,480 --> 00:22:00,640
same they just have a special

676
00:22:00,640 --> 00:22:02,320
uh bit set in the control field that

677
00:22:02,320 --> 00:22:04,000
allows them to have 29 bits of

678
00:22:04,000 --> 00:22:05,760
arbitration if you have a lot of nodes

679
00:22:05,760 --> 00:22:08,480
on your can bus and you need more

680
00:22:08,480 --> 00:22:11,120
um how should i say arbitration ids for

681
00:22:11,120 --> 00:22:13,679
your messages that is definitely an

682
00:22:13,679 --> 00:22:14,799
option

683
00:22:14,799 --> 00:22:16,480
and by the way when i say arbitration id

684
00:22:16,480 --> 00:22:18,159
this doesn't mean that every node every

685
00:22:18,159 --> 00:22:19,600
physical node on the can bus is only

686
00:22:19,600 --> 00:22:21,840
sending one message this arbitration id

687
00:22:21,840 --> 00:22:24,320
is not a source address it is a

688
00:22:24,320 --> 00:22:26,720
identifier for the data inside that can

689
00:22:26,720 --> 00:22:27,520
frame

690
00:22:27,520 --> 00:22:30,000
and any node technically can send data

691
00:22:30,000 --> 00:22:32,159
with any arbitration id right so if i

692
00:22:32,159 --> 00:22:33,760
have one node that's sending arbitration

693
00:22:33,760 --> 00:22:35,919
id 1 1 and another node ascending

694
00:22:35,919 --> 00:22:38,400
arbitration 2 2 2 nothing is stopping

695
00:22:38,400 --> 00:22:41,440
any of these nodes from sending uh the

696
00:22:41,440 --> 00:22:42,960
other node's message right it's not a

697
00:22:42,960 --> 00:22:46,240
source address this is technically a

698
00:22:46,240 --> 00:22:47,760
you can call it a weakness of can is

699
00:22:47,760 --> 00:22:48,880
that there's no source of dressing so

700
00:22:48,880 --> 00:22:50,640
it's very hard to authenticate where a

701
00:22:50,640 --> 00:22:52,640
given can message comes from

702
00:22:52,640 --> 00:22:53,679
but

703
00:22:53,679 --> 00:22:55,919
uh it's it is a feature of arbitration

704
00:22:55,919 --> 00:22:58,159
and how arbitration works in can so the

705
00:22:58,159 --> 00:22:59,760
way the arbitration actually works is

706
00:22:59,760 --> 00:23:02,400
when two messages collide right

707
00:23:02,400 --> 00:23:04,000
whoever has the more dominant

708
00:23:04,000 --> 00:23:07,039
arbitration id will generally be ranked

709
00:23:07,039 --> 00:23:08,559
higher they will have a higher priority

710
00:23:08,559 --> 00:23:10,159
and be able to transmit their message

711
00:23:10,159 --> 00:23:12,240
without any issues whereas any colliding

712
00:23:12,240 --> 00:23:13,919
messages with lower priority will

713
00:23:13,919 --> 00:23:16,559
actually be forced into ceasing

714
00:23:16,559 --> 00:23:17,919
transmission and they will have to

715
00:23:17,919 --> 00:23:20,320
reschedule their transmission for some

716
00:23:20,320 --> 00:23:21,760
other time right they'll have an

717
00:23:21,760 --> 00:23:23,600
automatic timer according to their their

718
00:23:23,600 --> 00:23:25,440
programming and it will end up getting

719
00:23:25,440 --> 00:23:28,400
scheduled for a later transmission

720
00:23:28,400 --> 00:23:29,200
um

721
00:23:29,200 --> 00:23:31,760
the control field is for things like

722
00:23:31,760 --> 00:23:33,360
metadata for the message things like the

723
00:23:33,360 --> 00:23:35,600
data length code that tell the receiving

724
00:23:35,600 --> 00:23:38,000
nodes how much data is being transmitted

725
00:23:38,000 --> 00:23:40,480
so you can send zero bit bytes of data

726
00:23:40,480 --> 00:23:42,640
one byte of data two byte data up to

727
00:23:42,640 --> 00:23:45,279
eight right is is the limit for standard

728
00:23:45,279 --> 00:23:47,520
can in you know

729
00:23:47,520 --> 00:23:49,679
the context of today's conversation and

730
00:23:49,679 --> 00:23:50,880
then you have the actual payload so the

731
00:23:50,880 --> 00:23:52,240
payload is going to be up to eight bytes

732
00:23:52,240 --> 00:23:55,039
of data of course uh it's not a lot but

733
00:23:55,039 --> 00:23:57,200
it's it's a lot for

734
00:23:57,200 --> 00:23:58,799
it's good enough for a lot of different

735
00:23:58,799 --> 00:24:01,120
very simple tasks at least for a single

736
00:24:01,120 --> 00:24:02,240
frame

737
00:24:02,240 --> 00:24:04,000
and then you have acrc isolated

738
00:24:04,000 --> 00:24:07,039
redundancy code to ensure that no errors

739
00:24:07,039 --> 00:24:09,120
occur during transmission this isn't

740
00:24:09,120 --> 00:24:11,440
what you would call a uh

741
00:24:11,440 --> 00:24:13,360
an authentication feature it's more like

742
00:24:13,360 --> 00:24:15,440
just an error checking feature for

743
00:24:15,440 --> 00:24:16,880
accidental errors i wouldn't call this a

744
00:24:16,880 --> 00:24:18,559
security feature of course but it's good

745
00:24:18,559 --> 00:24:20,320
for the robustness of the network and

746
00:24:20,320 --> 00:24:22,080
and allows it to operate properly and

747
00:24:22,080 --> 00:24:23,360
then finally you have the end of frame

748
00:24:23,360 --> 00:24:25,679
field which is seven recessive one bits

749
00:24:25,679 --> 00:24:28,080
that allow the bus to kind of realize

750
00:24:28,080 --> 00:24:30,400
that okay transmission is over everyone

751
00:24:30,400 --> 00:24:31,919
just kind of chill out for a second and

752
00:24:31,919 --> 00:24:33,760
let the end of

753
00:24:33,760 --> 00:24:35,600
frame field go out and then from there

754
00:24:35,600 --> 00:24:36,880
someone who wants to transmit again will

755
00:24:36,880 --> 00:24:39,039
send their zero for the start of frame

756
00:24:39,039 --> 00:24:40,880
and we begin the process all over again

757
00:24:40,880 --> 00:24:42,159
so

758
00:24:42,159 --> 00:24:44,320
this is the end of the crash course

759
00:24:44,320 --> 00:24:45,840
right so the crash course of course it's

760
00:24:45,840 --> 00:24:47,840
a crash course it's not going to be

761
00:24:47,840 --> 00:24:49,840
uh super in-depth there's a lot more to

762
00:24:49,840 --> 00:24:51,679
be talked about when it comes to canvas

763
00:24:51,679 --> 00:24:53,679
and um i would love to share that with

764
00:24:53,679 --> 00:24:55,120
you but unfortunately i only have about

765
00:24:55,120 --> 00:24:58,159
an hour or so today for today's workshop

766
00:24:58,159 --> 00:24:59,520
and there's a mosquito flying in front

767
00:24:59,520 --> 00:25:00,720
of my computer i hope he's not being

768
00:25:00,720 --> 00:25:02,880
picked up on the camera um

769
00:25:02,880 --> 00:25:05,279
but we're going to start diving into the

770
00:25:05,279 --> 00:25:07,600
actual hands-on usage of some of the

771
00:25:07,600 --> 00:25:09,600
tools i want to show you today so the

772
00:25:09,600 --> 00:25:11,360
main package we're going to be using is

773
00:25:11,360 --> 00:25:13,520
called canutils it's a very easy to use

774
00:25:13,520 --> 00:25:15,919
very easy to install

775
00:25:15,919 --> 00:25:18,799
free open source package of canvas tools

776
00:25:18,799 --> 00:25:21,679
for linux it runs on the socket can

777
00:25:21,679 --> 00:25:23,679
daemon that is you know part of most

778
00:25:23,679 --> 00:25:25,120
linux distributions especially if you're

779
00:25:25,120 --> 00:25:26,640
running a modern day

780
00:25:26,640 --> 00:25:28,799
debian distribution debian distribution

781
00:25:28,799 --> 00:25:29,840
linux

782
00:25:29,840 --> 00:25:31,840
either you know ubuntu or kali linux

783
00:25:31,840 --> 00:25:33,760
i'll be using kali linux in the hands-on

784
00:25:33,760 --> 00:25:35,039
portion for today

785
00:25:35,039 --> 00:25:36,559
but it's very very easy to install one

786
00:25:36,559 --> 00:25:37,919
simple command and you'll have access to

787
00:25:37,919 --> 00:25:39,200
all these tools

788
00:25:39,200 --> 00:25:40,799
this tools allow you to read data from a

789
00:25:40,799 --> 00:25:43,360
can bus send data onto a can bus you can

790
00:25:43,360 --> 00:25:45,520
create logs of can data using some of

791
00:25:45,520 --> 00:25:47,600
the tools here and they also have some

792
00:25:47,600 --> 00:25:49,679
other ways to view canvas that make it

793
00:25:49,679 --> 00:25:52,480
easier for reverse engineering data

794
00:25:52,480 --> 00:25:53,919
right sometimes it's not easy to know

795
00:25:53,919 --> 00:25:55,360
what the data means and so that's why

796
00:25:55,360 --> 00:25:56,720
there are some tools in here to help you

797
00:25:56,720 --> 00:25:58,720
figure that out uh there are tools to

798
00:25:58,720 --> 00:26:01,760
help you replay a logged can bus log

799
00:26:01,760 --> 00:26:04,480
file onto a boss with the exact same

800
00:26:04,480 --> 00:26:06,080
order of transmission of each of the

801
00:26:06,080 --> 00:26:08,080
messages if you want to try and recreate

802
00:26:08,080 --> 00:26:09,520
some kind of phenomenon that occurred on

803
00:26:09,520 --> 00:26:11,600
the can bus you can record a can log and

804
00:26:11,600 --> 00:26:13,360
then play it back these are all options

805
00:26:13,360 --> 00:26:15,279
available to you with the tools found in

806
00:26:15,279 --> 00:26:16,720
canon sales and remember they're all

807
00:26:16,720 --> 00:26:18,480
free and they all work without any

808
00:26:18,480 --> 00:26:20,159
hardware needed they work with hardware

809
00:26:20,159 --> 00:26:21,360
if you have some hardware you can of

810
00:26:21,360 --> 00:26:23,440
course use these same tools and software

811
00:26:23,440 --> 00:26:25,120
to interact with your hardware but it's

812
00:26:25,120 --> 00:26:26,720
not necessary and we won't be assuming

813
00:26:26,720 --> 00:26:28,880
you have any hardware today so never

814
00:26:28,880 --> 00:26:30,960
fear just follow along and you'll be

815
00:26:30,960 --> 00:26:32,960
able to play along with us

816
00:26:32,960 --> 00:26:34,400
you also have options to generate large

817
00:26:34,400 --> 00:26:36,159
volumes of can data virtual canvas

818
00:26:36,159 --> 00:26:38,080
support as i mentioned and of course

819
00:26:38,080 --> 00:26:40,960
most of all easy to use and free to

820
00:26:40,960 --> 00:26:43,200
install so let's go ahead and dive into

821
00:26:43,200 --> 00:26:45,279
the virtual machine very quickly we will

822
00:26:45,279 --> 00:26:47,279
begin with installing the tools and then

823
00:26:47,279 --> 00:26:48,559
i will walk you through each of the

824
00:26:48,559 --> 00:26:50,000
tools one by one giving a short

825
00:26:50,000 --> 00:26:52,000
explanation of how they work and if you

826
00:26:52,000 --> 00:26:54,000
don't feel like trying to keep up you

827
00:26:54,000 --> 00:26:56,080
know on your own uh feel free to just

828
00:26:56,080 --> 00:26:57,840
come back and look at this again

829
00:26:57,840 --> 00:27:00,080
when you try and implement it yourself

830
00:27:00,080 --> 00:27:01,919
and i think you'll have a great time so

831
00:27:01,919 --> 00:27:04,240
let's go ahead and switch context to the

832
00:27:04,240 --> 00:27:07,559
virtual machine

833
00:27:08,400 --> 00:27:10,240
okay so here we are

834
00:27:10,240 --> 00:27:12,960
safely in our virtual machine so i am

835
00:27:12,960 --> 00:27:14,960
inside a cali linux virtual machine of

836
00:27:14,960 --> 00:27:17,279
course you don't have to use kali linux

837
00:27:17,279 --> 00:27:18,799
any debian

838
00:27:18,799 --> 00:27:20,480
distribution should have the ability to

839
00:27:20,480 --> 00:27:22,559
install the tools very easily but i'm

840
00:27:22,559 --> 00:27:24,159
using kali today so if you are too

841
00:27:24,159 --> 00:27:25,440
awesome if not

842
00:27:25,440 --> 00:27:27,360
nothing personal right

843
00:27:27,360 --> 00:27:28,799
so the first thing you want to do is

844
00:27:28,799 --> 00:27:32,000
just go ahead and install the um

845
00:27:32,000 --> 00:27:33,120
excuse me

846
00:27:33,120 --> 00:27:36,320
the package right so sudo apt install

847
00:27:36,320 --> 00:27:38,480
and utils this is the command this is

848
00:27:38,480 --> 00:27:40,080
the only command you need to install

849
00:27:40,080 --> 00:27:41,440
this let me just zoom this in a bit so

850
00:27:41,440 --> 00:27:42,880
it's a little bit easier to see on the

851
00:27:42,880 --> 00:27:44,000
screen

852
00:27:44,000 --> 00:27:45,840
this is it it's a one

853
00:27:45,840 --> 00:27:47,360
button install right i'm going to put in

854
00:27:47,360 --> 00:27:48,880
my password here

855
00:27:48,880 --> 00:27:50,720
so that i can actually install this but

856
00:27:50,720 --> 00:27:51,919
i already have the newest version of

857
00:27:51,919 --> 00:27:53,279
course so it's not going to be upgraded

858
00:27:53,279 --> 00:27:55,120
but this command is literally the only

859
00:27:55,120 --> 00:27:56,480
thing you need to install and everything

860
00:27:56,480 --> 00:27:58,320
will just kind of fall into place

861
00:27:58,320 --> 00:28:00,640
immediately and you'll be able to start

862
00:28:00,640 --> 00:28:02,799
working on a can bus all by yourself

863
00:28:02,799 --> 00:28:04,399
without needing anything else it's super

864
00:28:04,399 --> 00:28:06,960
painless super easy to get started

865
00:28:06,960 --> 00:28:10,000
so the first thing i like to do to test

866
00:28:10,000 --> 00:28:12,640
if my installation works correctly is to

867
00:28:12,640 --> 00:28:15,600
actually make a can bus and then just

868
00:28:15,600 --> 00:28:17,039
view some data on it so let's go ahead

869
00:28:17,039 --> 00:28:19,039
and see if i already have one made sudo

870
00:28:19,039 --> 00:28:21,279
ip link this is a good command to test

871
00:28:21,279 --> 00:28:22,960
if you have a canvas

872
00:28:22,960 --> 00:28:24,640
active already or not if you guys take a

873
00:28:24,640 --> 00:28:26,480
look over here

874
00:28:26,480 --> 00:28:29,200
i already have a canvas created vcan

875
00:28:29,200 --> 00:28:32,480
zero this is a virtual canvas as it were

876
00:28:32,480 --> 00:28:33,919
right

877
00:28:33,919 --> 00:28:35,600
how did i create this virtual canvas you

878
00:28:35,600 --> 00:28:37,200
may ask that's a great question so let

879
00:28:37,200 --> 00:28:39,279
me show you how so the easiest way to do

880
00:28:39,279 --> 00:28:41,919
this uh is to set it up with mod pro so

881
00:28:41,919 --> 00:28:44,159
let me go ahead and clear this here sudo

882
00:28:44,159 --> 00:28:47,039
mod pro right

883
00:28:47,039 --> 00:28:50,960
vcan this will add the module for vcan

884
00:28:50,960 --> 00:28:52,640
to your system right now right it'll

885
00:28:52,640 --> 00:28:54,880
turn it on now you want to go and use

886
00:28:54,880 --> 00:28:57,200
the pseudo ipl link command again to

887
00:28:57,200 --> 00:28:59,840
actually create a canvas

888
00:28:59,840 --> 00:29:03,919
of the type vcan so sudo iplink add

889
00:29:03,919 --> 00:29:05,760
device right we're going to name our

890
00:29:05,760 --> 00:29:07,760
device here i'm going to call it vcan

891
00:29:07,760 --> 00:29:09,679
one because i already have vcan 0

892
00:29:09,679 --> 00:29:11,600
enabled as you saw before and i want to

893
00:29:11,600 --> 00:29:13,120
say type

894
00:29:13,120 --> 00:29:15,600
vcan i'm going to hit enter here and

895
00:29:15,600 --> 00:29:17,520
then to check that it got up uh we're

896
00:29:17,520 --> 00:29:20,320
going to go ahead and enter sudo sorry

897
00:29:20,320 --> 00:29:23,279
ip link and as you can see now we have

898
00:29:23,279 --> 00:29:25,279
the vcan 0 from before that i had it's

899
00:29:25,279 --> 00:29:27,200
still on it's it's you know it's doing

900
00:29:27,200 --> 00:29:29,440
its thing right but the newly created

901
00:29:29,440 --> 00:29:30,880
weekend one that i just made with this

902
00:29:30,880 --> 00:29:32,880
command here is also there waiting uh

903
00:29:32,880 --> 00:29:34,559
currently it's down it's not ready to be

904
00:29:34,559 --> 00:29:36,159
used so i can't actually use it if i say

905
00:29:36,159 --> 00:29:37,360
candle

906
00:29:37,360 --> 00:29:39,120
pecan one nothing's gonna happen the

907
00:29:39,120 --> 00:29:41,120
network is down but we can set it up

908
00:29:41,120 --> 00:29:44,559
very easily with iplink so sudo ip link

909
00:29:44,559 --> 00:29:45,520
set

910
00:29:45,520 --> 00:29:46,640
up

911
00:29:46,640 --> 00:29:50,320
dcan1 and if i tried ken of the n1 now

912
00:29:50,320 --> 00:29:52,559
it works there's no data there yet

913
00:29:52,559 --> 00:29:55,440
for good reason but don't worry about it

914
00:29:55,440 --> 00:29:56,240
so

915
00:29:56,240 --> 00:29:57,919
if we go back and check this one more

916
00:29:57,919 --> 00:30:00,320
time right let's drop your link

917
00:30:00,320 --> 00:30:02,080
i don't know what that n1 at the end was

918
00:30:02,080 --> 00:30:03,440
but it's fine

919
00:30:03,440 --> 00:30:06,000
uh we can now see that it is

920
00:30:06,000 --> 00:30:07,760
well it's not down anymore right you see

921
00:30:07,760 --> 00:30:09,360
here it said down before now it says

922
00:30:09,360 --> 00:30:11,200
state unknown that's fine it's working

923
00:30:11,200 --> 00:30:13,520
don't worry about it right now this same

924
00:30:13,520 --> 00:30:15,840
process can be used if you actually have

925
00:30:15,840 --> 00:30:17,919
physical can hardware if you have some

926
00:30:17,919 --> 00:30:20,720
actual hardware that you want to use

927
00:30:20,720 --> 00:30:22,640
with a can bus you can use this same

928
00:30:22,640 --> 00:30:24,880
technique to actually bring up your can

929
00:30:24,880 --> 00:30:26,320
interface you need to do this before you

930
00:30:26,320 --> 00:30:28,640
can receive or send any messages

931
00:30:28,640 --> 00:30:30,880
not only for virtual can buses but also

932
00:30:30,880 --> 00:30:31,679
for

933
00:30:31,679 --> 00:30:36,159
real can buses right so you

934
00:30:36,159 --> 00:30:37,440
excuse me

935
00:30:37,440 --> 00:30:39,600
you may want to remember this command in

936
00:30:39,600 --> 00:30:40,960
the event you

937
00:30:40,960 --> 00:30:43,520
have a uh an actual can bus device you

938
00:30:43,520 --> 00:30:44,880
want to use but when you're using a real

939
00:30:44,880 --> 00:30:47,039
physical can bus device there are a

940
00:30:47,039 --> 00:30:48,799
couple things you have to remember you

941
00:30:48,799 --> 00:30:51,760
have to also enable the bitrate or the

942
00:30:51,760 --> 00:30:53,520
baud rate for that device right here in

943
00:30:53,520 --> 00:30:55,200
the virtual world it doesn't really

944
00:30:55,200 --> 00:30:56,880
matter that much because it's all

945
00:30:56,880 --> 00:30:58,960
simulated in software but in real life

946
00:30:58,960 --> 00:31:01,039
when you set up a can interface you have

947
00:31:01,039 --> 00:31:02,960
to specify the baud rate and the baud

948
00:31:02,960 --> 00:31:04,240
rate is for those of you who might not

949
00:31:04,240 --> 00:31:05,679
understand what that is

950
00:31:05,679 --> 00:31:08,320
it's the rate at which this device is

951
00:31:08,320 --> 00:31:10,799
reading bits from the wires right

952
00:31:10,799 --> 00:31:11,679
because the wire is going to have

953
00:31:11,679 --> 00:31:13,279
changing voltages and according to the

954
00:31:13,279 --> 00:31:16,159
messages being sent and this baud rate

955
00:31:16,159 --> 00:31:18,720
allows your device to extract

956
00:31:18,720 --> 00:31:20,880
information from this changing voltage

957
00:31:20,880 --> 00:31:21,760
right

958
00:31:21,760 --> 00:31:24,080
you did that with the iplink command as

959
00:31:24,080 --> 00:31:25,279
well but just keep in mind you have to

960
00:31:25,279 --> 00:31:28,320
do that um only for physical devices and

961
00:31:28,320 --> 00:31:30,559
not for virtual devices so now i'm gonna

962
00:31:30,559 --> 00:31:32,159
go ahead and just clear all this off and

963
00:31:32,159 --> 00:31:34,559
let's go back and actually

964
00:31:34,559 --> 00:31:37,279
uh see some real can bus data so how are

965
00:31:37,279 --> 00:31:39,200
we going to do that right as you may

966
00:31:39,200 --> 00:31:41,679
have seen before i can view data using

967
00:31:41,679 --> 00:31:43,840
the can dump command right so

968
00:31:43,840 --> 00:31:46,559
can dump pecan one well there's nothing

969
00:31:46,559 --> 00:31:48,159
there and that's because there's no one

970
00:31:48,159 --> 00:31:49,919
sending can bus data right now if i hit

971
00:31:49,919 --> 00:31:52,240
cancel here i'm gonna actually take my

972
00:31:52,240 --> 00:31:53,279
terminal

973
00:31:53,279 --> 00:31:54,799
and put it on one half of the screen

974
00:31:54,799 --> 00:31:56,240
here and i'm going to make another

975
00:31:56,240 --> 00:31:58,399
terminal right

976
00:31:58,399 --> 00:31:59,519
here we go

977
00:31:59,519 --> 00:32:01,039
and put it on the other half of the

978
00:32:01,039 --> 00:32:03,440
screen and this way i can send canvas

979
00:32:03,440 --> 00:32:05,919
data on one and we can see it show up on

980
00:32:05,919 --> 00:32:07,840
the other end over here so we're gonna

981
00:32:07,840 --> 00:32:09,840
go ahead and open this can dump so what

982
00:32:09,840 --> 00:32:12,399
this is doing now is it is reading data

983
00:32:12,399 --> 00:32:14,240
from this virtual canvas you can specify

984
00:32:14,240 --> 00:32:15,440
the interface here to be whatever you

985
00:32:15,440 --> 00:32:16,960
want right depending on what's on your

986
00:32:16,960 --> 00:32:18,480
system

987
00:32:18,480 --> 00:32:20,559
and it's going to display all of the can

988
00:32:20,559 --> 00:32:23,039
data that appears here in the standard

989
00:32:23,039 --> 00:32:24,960
output

990
00:32:24,960 --> 00:32:26,559
you can change where this sends the data

991
00:32:26,559 --> 00:32:27,840
but for right now we're just checking

992
00:32:27,840 --> 00:32:30,000
that the canvas works so over here i'm

993
00:32:30,000 --> 00:32:31,919
now going to use the can send command

994
00:32:31,919 --> 00:32:33,279
right can send

995
00:32:33,279 --> 00:32:36,080
can send is a tool that lets you

996
00:32:36,080 --> 00:32:38,880
obviously enough send can bus data right

997
00:32:38,880 --> 00:32:41,279
and this means just transmitting one can

998
00:32:41,279 --> 00:32:43,279
bus message onto the bus so you pick the

999
00:32:43,279 --> 00:32:45,679
bus you want you write out your payload

1000
00:32:45,679 --> 00:32:47,840
and then it will appear on the bus now

1001
00:32:47,840 --> 00:32:49,440
there are a lot of different options to

1002
00:32:49,440 --> 00:32:51,360
can send and can dump of course you can

1003
00:32:51,360 --> 00:32:54,000
see them all by using the man page right

1004
00:32:54,000 --> 00:32:55,440
can send right there's a lot of

1005
00:32:55,440 --> 00:32:56,960
information here for anyone hoping to

1006
00:32:56,960 --> 00:32:58,960
use this so don't be afraid if if i'm

1007
00:32:58,960 --> 00:33:00,799
not explaining too much i just kind of

1008
00:33:00,799 --> 00:33:02,000
have to get through all of these

1009
00:33:02,000 --> 00:33:04,240
different tools uh within the duration

1010
00:33:04,240 --> 00:33:06,320
of this short talk this short workshop

1011
00:33:06,320 --> 00:33:07,279
but

1012
00:33:07,279 --> 00:33:09,039
for now a very simple example let's go

1013
00:33:09,039 --> 00:33:12,000
ahead and say can send

1014
00:33:12,000 --> 00:33:14,399
vcan one

1015
00:33:14,399 --> 00:33:15,919
one two three this is gonna be my

1016
00:33:15,919 --> 00:33:18,080
arbitration id this hashtag is the

1017
00:33:18,080 --> 00:33:19,840
delimiter between the arbitration id and

1018
00:33:19,840 --> 00:33:22,399
the data bytes right and the payload

1019
00:33:22,399 --> 00:33:25,200
let's make it dead beef right you write

1020
00:33:25,200 --> 00:33:27,600
down hexadecimal and when i press enter

1021
00:33:27,600 --> 00:33:29,600
there it is so now this window here that

1022
00:33:29,600 --> 00:33:31,440
was reading the data from the can bus

1023
00:33:31,440 --> 00:33:33,519
now shows okay we've seen a new message

1024
00:33:33,519 --> 00:33:36,399
on the canvas vcan one arbitration id is

1025
00:33:36,399 --> 00:33:37,679
one two three

1026
00:33:37,679 --> 00:33:40,240
right it's got four bytes of data this

1027
00:33:40,240 --> 00:33:41,760
is the first byte second byte third and

1028
00:33:41,760 --> 00:33:43,200
fourth right

1029
00:33:43,200 --> 00:33:45,919
simple as that that is it's just that

1030
00:33:45,919 --> 00:33:48,480
simple right this is how you would send

1031
00:33:48,480 --> 00:33:49,760
data

1032
00:33:49,760 --> 00:33:51,600
from a terminal right i can send this on

1033
00:33:51,600 --> 00:33:53,919
my virtual can bus i can read it on my

1034
00:33:53,919 --> 00:33:56,399
virtual canvas as well we have full

1035
00:33:56,399 --> 00:33:58,640
ability to send and receive cannabis

1036
00:33:58,640 --> 00:34:01,760
data now and you can now use this in any

1037
00:34:01,760 --> 00:34:03,679
type of tool you want but there are some

1038
00:34:03,679 --> 00:34:05,760
more canvas tools here that we can

1039
00:34:05,760 --> 00:34:07,679
explore a little bit more so let's go

1040
00:34:07,679 --> 00:34:10,480
ahead and look at can gen right if i say

1041
00:34:10,480 --> 00:34:13,199
man kanjin this is a really fun one

1042
00:34:13,199 --> 00:34:15,679
right can frames generator what it does

1043
00:34:15,679 --> 00:34:18,079
essentially is it allows you to generate

1044
00:34:18,079 --> 00:34:20,320
a lot of can bus traffic if you want to

1045
00:34:20,320 --> 00:34:21,918
send the same message over and over

1046
00:34:21,918 --> 00:34:23,679
again you can do that with kanjin right

1047
00:34:23,679 --> 00:34:25,440
whereas can send is every time you run

1048
00:34:25,440 --> 00:34:27,119
the message or sorry you run the command

1049
00:34:27,119 --> 00:34:29,119
you get one message with canjen you can

1050
00:34:29,119 --> 00:34:31,440
actually send messages repeatedly so you

1051
00:34:31,440 --> 00:34:33,679
have a lot of options here to adjust the

1052
00:34:33,679 --> 00:34:36,000
frequency right this dash g option

1053
00:34:36,000 --> 00:34:37,359
allows you to adjust the gap in

1054
00:34:37,359 --> 00:34:39,520
milliseconds between messages

1055
00:34:39,520 --> 00:34:41,520
uh you know you can send extended frame

1056
00:34:41,520 --> 00:34:44,639
mode you can send remote transmit frames

1057
00:34:44,639 --> 00:34:46,079
you can send

1058
00:34:46,079 --> 00:34:47,599
there's a lot of different options here

1059
00:34:47,599 --> 00:34:49,119
and they essentially

1060
00:34:49,119 --> 00:34:51,280
rotate around the idea that you can send

1061
00:34:51,280 --> 00:34:53,440
incremental data or randomize data or

1062
00:34:53,440 --> 00:34:56,000
set data right so let's go ahead and try

1063
00:34:56,000 --> 00:34:58,400
and actually see how that would work so

1064
00:34:58,400 --> 00:35:00,480
if i wanted to say

1065
00:35:00,480 --> 00:35:03,200
let's send the

1066
00:35:03,200 --> 00:35:04,400
same

1067
00:35:04,400 --> 00:35:06,400
we're going to send a bunch of messages

1068
00:35:06,400 --> 00:35:08,560
with the same arbitration id but with

1069
00:35:08,560 --> 00:35:09,680
different

1070
00:35:09,680 --> 00:35:12,800
data values right and let's say the same

1071
00:35:12,800 --> 00:35:14,800
length as well how can we do that with

1072
00:35:14,800 --> 00:35:16,560
kanjin so if we take a look here the

1073
00:35:16,560 --> 00:35:18,880
dash l command is used to set the can

1074
00:35:18,880 --> 00:35:22,320
data length code right the dash d

1075
00:35:22,320 --> 00:35:24,560
or option sorry is used to set the

1076
00:35:24,560 --> 00:35:27,440
actual payload and the dash i is used to

1077
00:35:27,440 --> 00:35:30,960
set the can id mode right so we're going

1078
00:35:30,960 --> 00:35:33,119
to keep i constant we're going to keep l

1079
00:35:33,119 --> 00:35:35,119
constant but we're going to change d so

1080
00:35:35,119 --> 00:35:36,320
how do we do that all right so let's go

1081
00:35:36,320 --> 00:35:37,599
ahead and

1082
00:35:37,599 --> 00:35:39,520
exit the man page

1083
00:35:39,520 --> 00:35:40,240
so

1084
00:35:40,240 --> 00:35:41,599
can gen

1085
00:35:41,599 --> 00:35:43,280
be can one

1086
00:35:43,280 --> 00:35:45,520
right dash i let's pick an arbitration

1087
00:35:45,520 --> 00:35:48,640
id i'm going to pick aaa right

1088
00:35:48,640 --> 00:35:50,160
dash d

1089
00:35:50,160 --> 00:35:52,079
sorry dash l

1090
00:35:52,079 --> 00:35:54,400
lowercase r for random

1091
00:35:54,400 --> 00:35:56,720
sorry sorry l we're going to keep six

1092
00:35:56,720 --> 00:35:58,800
six bytes and then dash d

1093
00:35:58,800 --> 00:36:00,640
r for random and if i hit enter this

1094
00:36:00,640 --> 00:36:02,560
should begin generating o

1095
00:36:02,560 --> 00:36:05,520
and i j is greater than zero x f f and d

1096
00:36:05,520 --> 00:36:07,839
oh i'm sorry yeah you're right i picked

1097
00:36:07,839 --> 00:36:09,119
up i picked a number that's a little bit

1098
00:36:09,119 --> 00:36:10,640
too big

1099
00:36:10,640 --> 00:36:12,400
so so what happened was

1100
00:36:12,400 --> 00:36:14,800
obviously 7ff is the upper limit for can

1101
00:36:14,800 --> 00:36:16,240
bus arbitration ids when you're using

1102
00:36:16,240 --> 00:36:18,320
only 11 and in my ignorance i just

1103
00:36:18,320 --> 00:36:19,839
decided to type out three a's not

1104
00:36:19,839 --> 00:36:21,440
remembering that it's a little bit too

1105
00:36:21,440 --> 00:36:23,359
big to fit here but now if you go over

1106
00:36:23,359 --> 00:36:25,200
here to the actual ken dump page what do

1107
00:36:25,200 --> 00:36:27,359
you see happening in sequential order

1108
00:36:27,359 --> 00:36:28,640
you can see

1109
00:36:28,640 --> 00:36:29,440
that

1110
00:36:29,440 --> 00:36:31,200
every time a new message appears we see

1111
00:36:31,200 --> 00:36:33,440
the same arbitration id we see the same

1112
00:36:33,440 --> 00:36:35,680
length on the same network right

1113
00:36:35,680 --> 00:36:37,520
and but the data bytes themselves are

1114
00:36:37,520 --> 00:36:39,119
actually changing

1115
00:36:39,119 --> 00:36:41,680
and so this gives you a better idea of

1116
00:36:41,680 --> 00:36:44,560
how can dump can be used right can dump

1117
00:36:44,560 --> 00:36:47,520
is used to display the data on the can

1118
00:36:47,520 --> 00:36:49,440
bus sequentially you see every single

1119
00:36:49,440 --> 00:36:50,480
message

1120
00:36:50,480 --> 00:36:52,480
in the order that they came one by one

1121
00:36:52,480 --> 00:36:54,880
by one by one by one right what if

1122
00:36:54,880 --> 00:36:56,240
that's not really what you want to do

1123
00:36:56,240 --> 00:36:58,480
what if you wanted to

1124
00:36:58,480 --> 00:37:00,640
reverse engineer

1125
00:37:00,640 --> 00:37:02,720
a given canvas message right so this is

1126
00:37:02,720 --> 00:37:04,240
going to be a very limited example of

1127
00:37:04,240 --> 00:37:05,760
course because i don't have any cool

1128
00:37:05,760 --> 00:37:07,359
hardware with me at the moment to show

1129
00:37:07,359 --> 00:37:09,839
you uh how this can be used to really

1130
00:37:09,839 --> 00:37:11,599
reverse engineer some can data but

1131
00:37:11,599 --> 00:37:13,280
there's another tool in the can util

1132
00:37:13,280 --> 00:37:15,359
suite called can sniffer right so if we

1133
00:37:15,359 --> 00:37:18,800
go ahead and hit man can sniffer

1134
00:37:18,800 --> 00:37:20,880
here you can see a little explanation so

1135
00:37:20,880 --> 00:37:22,800
this is a volatile can content

1136
00:37:22,800 --> 00:37:24,960
visualizer what does that mean it makes

1137
00:37:24,960 --> 00:37:27,680
it easier to see how canvas data is

1138
00:37:27,680 --> 00:37:29,520
changing now

1139
00:37:29,520 --> 00:37:31,200
i'm not going to go over the man page

1140
00:37:31,200 --> 00:37:32,960
for this one as much as i did with ken

1141
00:37:32,960 --> 00:37:36,800
gen but if we say you know can sniffer

1142
00:37:36,800 --> 00:37:38,560
be can one

1143
00:37:38,560 --> 00:37:40,560
and then i come back here

1144
00:37:40,560 --> 00:37:42,320
and send the same command as before

1145
00:37:42,320 --> 00:37:43,839
right the same pattern

1146
00:37:43,839 --> 00:37:45,920
instead of showing it sequentially it's

1147
00:37:45,920 --> 00:37:48,000
actually showing you

1148
00:37:48,000 --> 00:37:50,560
only you know these messages and then

1149
00:37:50,560 --> 00:37:51,839
you can actually see how they change

1150
00:37:51,839 --> 00:37:52,960
your so i think i have to enable the

1151
00:37:52,960 --> 00:37:54,960
colors right if i say

1152
00:37:54,960 --> 00:37:56,880
i've say dash c right to enable the

1153
00:37:56,880 --> 00:37:57,839
colors

1154
00:37:57,839 --> 00:37:59,359
yeah there we go

1155
00:37:59,359 --> 00:38:01,599
this is this is the good stuff right so

1156
00:38:01,599 --> 00:38:03,920
what's going on here now is every time

1157
00:38:03,920 --> 00:38:05,680
one of these bytes changes in the

1158
00:38:05,680 --> 00:38:08,160
payload it's actually highlighted as red

1159
00:38:08,160 --> 00:38:09,680
now this isn't that helpful because

1160
00:38:09,680 --> 00:38:11,680
we're sending randomized messages but in

1161
00:38:11,680 --> 00:38:13,680
an actual vehicle environment you can

1162
00:38:13,680 --> 00:38:15,839
use this technique to actually look for

1163
00:38:15,839 --> 00:38:18,079
certain bits or bytes that are changing

1164
00:38:18,079 --> 00:38:19,839
when you do something in the car and

1165
00:38:19,839 --> 00:38:21,520
this process

1166
00:38:21,520 --> 00:38:22,480
is

1167
00:38:22,480 --> 00:38:24,160
you know the process of reverse

1168
00:38:24,160 --> 00:38:26,160
engineering vehicle data so if i say for

1169
00:38:26,160 --> 00:38:28,320
example i plug this into my car's canvas

1170
00:38:28,320 --> 00:38:30,240
and i sit here and i'm i'm wiggling the

1171
00:38:30,240 --> 00:38:32,560
knob on the on the steering wheel right

1172
00:38:32,560 --> 00:38:34,400
and i see okay oh this bike changes

1173
00:38:34,400 --> 00:38:36,720
every time i turn on my headlights or i

1174
00:38:36,720 --> 00:38:38,800
turn on my

1175
00:38:38,800 --> 00:38:40,880
i don't know my windshield wipers or if

1176
00:38:40,880 --> 00:38:43,040
i turn on my turn signal you can use

1177
00:38:43,040 --> 00:38:44,480
this kind of tool and like i said it

1178
00:38:44,480 --> 00:38:46,320
doesn't look very very cool because i

1179
00:38:46,320 --> 00:38:48,000
just have it running only one

1180
00:38:48,000 --> 00:38:50,000
arbitration id right but if i just run

1181
00:38:50,000 --> 00:38:53,440
the default excuse me tangent

1182
00:38:53,440 --> 00:38:54,960
you'll see a bunch of different can data

1183
00:38:54,960 --> 00:38:56,880
and this also isn't very helpful because

1184
00:38:56,880 --> 00:38:58,640
it's sending a bunch of randomized

1185
00:38:58,640 --> 00:39:00,320
arbitration ids as well and so there's

1186
00:39:00,320 --> 00:39:01,680
no real updating of any of the

1187
00:39:01,680 --> 00:39:03,599
arbitration ids

1188
00:39:03,599 --> 00:39:05,599
but the point is this makes it much

1189
00:39:05,599 --> 00:39:08,160
easier to see data on a bus as a whole

1190
00:39:08,160 --> 00:39:10,000
and you can actually identify which

1191
00:39:10,000 --> 00:39:13,040
parts of which messages are changing and

1192
00:39:13,040 --> 00:39:15,440
learn what the data in the vehicle

1193
00:39:15,440 --> 00:39:16,640
actually means because you have to

1194
00:39:16,640 --> 00:39:18,640
remember at the end of the day the

1195
00:39:18,640 --> 00:39:21,040
canvas data inside this vehicle

1196
00:39:21,040 --> 00:39:24,240
translates on some level to a real world

1197
00:39:24,240 --> 00:39:26,000
thing it could be how fast your car is

1198
00:39:26,000 --> 00:39:28,079
going it could be the cabin temperature

1199
00:39:28,079 --> 00:39:29,359
it can be

1200
00:39:29,359 --> 00:39:32,400
anything from from that to

1201
00:39:32,400 --> 00:39:34,160
you know the date and time the vehicle

1202
00:39:34,160 --> 00:39:36,560
identification number right everything

1203
00:39:36,560 --> 00:39:38,880
inside this car means something and

1204
00:39:38,880 --> 00:39:41,040
finding out what that data means is the

1205
00:39:41,040 --> 00:39:42,960
first step to hacking your vehicle and

1206
00:39:42,960 --> 00:39:44,480
actually understanding what's going on

1207
00:39:44,480 --> 00:39:46,480
under the hood and this tool is really

1208
00:39:46,480 --> 00:39:48,400
really good for helping with that

1209
00:39:48,400 --> 00:39:49,680
i'm going to show a little bit about how

1210
00:39:49,680 --> 00:39:52,240
to log canvas data as well

1211
00:39:52,240 --> 00:39:53,599
just because i feel like that's really

1212
00:39:53,599 --> 00:39:55,280
helpful so let me actually

1213
00:39:55,280 --> 00:39:59,040
create a folder here make dir

1214
00:39:59,040 --> 00:40:01,520
can class right cd

1215
00:40:01,520 --> 00:40:03,920
class

1216
00:40:03,920 --> 00:40:05,440
just so that we're all you know in the

1217
00:40:05,440 --> 00:40:06,560
same spot

1218
00:40:06,560 --> 00:40:07,520
um

1219
00:40:07,520 --> 00:40:09,520
so i have a nice neat place to put all

1220
00:40:09,520 --> 00:40:11,200
of my my files here so let's go ahead

1221
00:40:11,200 --> 00:40:13,200
and clear the screen

1222
00:40:13,200 --> 00:40:15,040
logging can bus data is done with the

1223
00:40:15,040 --> 00:40:17,599
same command as reading it so if i say

1224
00:40:17,599 --> 00:40:19,599
can dump dash l

1225
00:40:19,599 --> 00:40:20,800
right

1226
00:40:20,800 --> 00:40:22,319
um

1227
00:40:22,319 --> 00:40:24,319
vcan1

1228
00:40:24,319 --> 00:40:25,760
and i hit enter

1229
00:40:25,760 --> 00:40:27,599
disable standard output while logging

1230
00:40:27,599 --> 00:40:31,599
enabling log file can dump 2021 1007 and

1231
00:40:31,599 --> 00:40:34,640
edit it up so now if i come here

1232
00:40:34,640 --> 00:40:36,720
i'm actually going to make a third

1233
00:40:36,720 --> 00:40:38,880
monitor a third terminal all right i'm

1234
00:40:38,880 --> 00:40:40,720
gonna come here i'm gonna make a new tab

1235
00:40:40,720 --> 00:40:42,240
uh

1236
00:40:42,240 --> 00:40:43,359
oops

1237
00:40:43,359 --> 00:40:46,240
cd can class clear

1238
00:40:46,240 --> 00:40:49,200
okay here we go so we have this

1239
00:40:49,200 --> 00:40:51,200
file that we just created here

1240
00:40:51,200 --> 00:40:53,359
right that's the log file that we just

1241
00:40:53,359 --> 00:40:54,560
opened up in the other terminal i'm

1242
00:40:54,560 --> 00:40:56,480
going to open just zoom this in a little

1243
00:40:56,480 --> 00:40:57,520
bit

1244
00:40:57,520 --> 00:40:59,599
and now if i come here and i say can

1245
00:40:59,599 --> 00:41:03,040
dump vcan1 right no special commands

1246
00:41:03,040 --> 00:41:04,480
here or no special options we're just

1247
00:41:04,480 --> 00:41:07,760
going to use the same one we used before

1248
00:41:07,760 --> 00:41:09,599
i'm going to run the same randomized

1249
00:41:09,599 --> 00:41:11,520
data here okay and i'm just going to let

1250
00:41:11,520 --> 00:41:12,640
it run for a little bit i'm going to

1251
00:41:12,640 --> 00:41:15,520
stop it right we have about i'd say

1252
00:41:15,520 --> 00:41:17,440
25 messages here i don't really feel

1253
00:41:17,440 --> 00:41:19,440
like counting them but

1254
00:41:19,440 --> 00:41:21,040
nothing shows up here i'm gonna click

1255
00:41:21,040 --> 00:41:22,000
clear

1256
00:41:22,000 --> 00:41:25,440
and now we can go ahead and hit ls

1257
00:41:25,440 --> 00:41:27,280
and we have this can dump log right this

1258
00:41:27,280 --> 00:41:29,040
is the log that it created when you run

1259
00:41:29,040 --> 00:41:30,319
the command as soon as you run the

1260
00:41:30,319 --> 00:41:32,880
command it will make a log file at the

1261
00:41:32,880 --> 00:41:34,560
time you know automatically including

1262
00:41:34,560 --> 00:41:36,480
the time and date that you ran the

1263
00:41:36,480 --> 00:41:38,319
command so that you can have an actual

1264
00:41:38,319 --> 00:41:40,800
timestamp for this so looking at this

1265
00:41:40,800 --> 00:41:41,760
now

1266
00:41:41,760 --> 00:41:44,000
we can actually count how many

1267
00:41:44,000 --> 00:41:46,400
lines are in this right wc-l is a cool

1268
00:41:46,400 --> 00:41:48,160
linux tool for counting how many lines

1269
00:41:48,160 --> 00:41:50,480
are in a file and if i say this candle

1270
00:41:50,480 --> 00:41:53,520
blog there are 22 lines in this file if

1271
00:41:53,520 --> 00:41:54,800
we come back here we count them you know

1272
00:41:54,800 --> 00:41:57,280
one two three four five six seven eight

1273
00:41:57,280 --> 00:41:59,599
nine ten eleven twelve thirteen fourteen

1274
00:41:59,599 --> 00:42:00,880
fifteen sixteen seventeen eighteen

1275
00:42:00,880 --> 00:42:02,960
nineteen 19 20 21 22.

1276
00:42:02,960 --> 00:42:04,640
perfect and if we actually look at the

1277
00:42:04,640 --> 00:42:05,930
contents you'll see that

1278
00:42:05,930 --> 00:42:07,040
[Music]

1279
00:42:07,040 --> 00:42:08,160
cat

1280
00:42:08,160 --> 00:42:09,520
can

1281
00:42:09,520 --> 00:42:10,640
ta-da

1282
00:42:10,640 --> 00:42:13,119
why does it look so different it kind of

1283
00:42:13,119 --> 00:42:14,640
looks the same but you can tell there's

1284
00:42:14,640 --> 00:42:16,160
a bit of a difference in the way the

1285
00:42:16,160 --> 00:42:18,160
data is presented it's the same exact

1286
00:42:18,160 --> 00:42:20,880
data as what we see here in the live

1287
00:42:20,880 --> 00:42:23,119
kandump output but it's presented

1288
00:42:23,119 --> 00:42:24,400
differently and there's an important

1289
00:42:24,400 --> 00:42:26,079
difference in the way the data is

1290
00:42:26,079 --> 00:42:28,400
presented in these two scenarios so let

1291
00:42:28,400 --> 00:42:30,560
me actually can i i can't i don't think

1292
00:42:30,560 --> 00:42:31,839
i can

1293
00:42:31,839 --> 00:42:32,960
excuse me i should have put this one in

1294
00:42:32,960 --> 00:42:34,560
the other side of the screen so you can

1295
00:42:34,560 --> 00:42:37,040
look at them side by side but you know

1296
00:42:37,040 --> 00:42:40,720
message number 164 arbitration id 7 9 10

1297
00:42:40,720 --> 00:42:42,560
49 right

1298
00:42:42,560 --> 00:42:46,560
164 7 9 10 49. so what's going on here

1299
00:42:46,560 --> 00:42:47,920
is this

1300
00:42:47,920 --> 00:42:51,280
is the log format of can dump canned up

1301
00:42:51,280 --> 00:42:53,440
uses this format specifically for

1302
00:42:53,440 --> 00:42:55,920
creating log files and it does this

1303
00:42:55,920 --> 00:42:57,520
because this

1304
00:42:57,520 --> 00:42:59,520
file format right the way the lines are

1305
00:42:59,520 --> 00:43:02,240
structured here makes it easier for a

1306
00:43:02,240 --> 00:43:05,359
computer to process this log file

1307
00:43:05,359 --> 00:43:07,280
excuse me then

1308
00:43:07,280 --> 00:43:09,200
this type right you got like delimiter

1309
00:43:09,200 --> 00:43:10,880
weird figures in here the parenthesis

1310
00:43:10,880 --> 00:43:12,800
might be hard for a program to process

1311
00:43:12,800 --> 00:43:14,400
and this is because the creators of this

1312
00:43:14,400 --> 00:43:15,520
tool

1313
00:43:15,520 --> 00:43:17,760
wanted to make this tool easy for a

1314
00:43:17,760 --> 00:43:19,440
computer to process so now you have a

1315
00:43:19,440 --> 00:43:21,920
can file you know a log file of this can

1316
00:43:21,920 --> 00:43:23,839
data you can actually run this through a

1317
00:43:23,839 --> 00:43:25,280
program to do

1318
00:43:25,280 --> 00:43:27,280
processing of the actual data in there

1319
00:43:27,280 --> 00:43:29,760
maybe extract some information

1320
00:43:29,760 --> 00:43:31,680
so on and so forth and that's why they

1321
00:43:31,680 --> 00:43:33,280
decided to make a difference in the

1322
00:43:33,280 --> 00:43:34,240
different

1323
00:43:34,240 --> 00:43:36,960
uh output formats the log format and the

1324
00:43:36,960 --> 00:43:38,800
standard output format

1325
00:43:38,800 --> 00:43:40,640
the last thing i want to show is the

1326
00:43:40,640 --> 00:43:44,400
ability to replay can data right so can

1327
00:43:44,400 --> 00:43:46,079
data of course can be logged and then

1328
00:43:46,079 --> 00:43:47,440
played back when you play it back it

1329
00:43:47,440 --> 00:43:49,119
sends it in the exact same order that it

1330
00:43:49,119 --> 00:43:51,440
came so over here i'm going to actually

1331
00:43:51,440 --> 00:43:53,359
open up a

1332
00:43:53,359 --> 00:43:56,160
can dump v can one right so we're

1333
00:43:56,160 --> 00:43:58,319
actively monitoring the v can one canvas

1334
00:43:58,319 --> 00:43:59,359
here

1335
00:43:59,359 --> 00:44:00,800
and here we're going to use the can

1336
00:44:00,800 --> 00:44:02,880
player device right the ken player

1337
00:44:02,880 --> 00:44:05,760
command so this one will allow us to

1338
00:44:05,760 --> 00:44:08,560
play back this log file here

1339
00:44:08,560 --> 00:44:10,240
and it will send the exact same can

1340
00:44:10,240 --> 00:44:12,720
payloads in the exact same timing as

1341
00:44:12,720 --> 00:44:14,400
they were captured in that log file and

1342
00:44:14,400 --> 00:44:15,760
we're going to see that happen in real

1343
00:44:15,760 --> 00:44:17,520
time right over here

1344
00:44:17,520 --> 00:44:20,960
hit enter oh excuse me i have to specify

1345
00:44:20,960 --> 00:44:25,280
capital i here for input file right

1346
00:44:25,680 --> 00:44:27,200
and there you go

1347
00:44:27,200 --> 00:44:29,760
we have just replayed that can log onto

1348
00:44:29,760 --> 00:44:32,480
this canvas in exactly the same way it

1349
00:44:32,480 --> 00:44:34,960
was presented to us originally

1350
00:44:34,960 --> 00:44:36,800
this is a really great technique for

1351
00:44:36,800 --> 00:44:38,640
reverse engineering technique um excuse

1352
00:44:38,640 --> 00:44:40,880
me canvas data if you want to take a log

1353
00:44:40,880 --> 00:44:42,560
of something happening

1354
00:44:42,560 --> 00:44:43,920
and then play it back to the vehicle and

1355
00:44:43,920 --> 00:44:45,359
see if the same thing happens again this

1356
00:44:45,359 --> 00:44:47,040
is the best way to do it with these open

1357
00:44:47,040 --> 00:44:49,040
source free tools it's very easy anybody

1358
00:44:49,040 --> 00:44:50,400
can do it of course there are a lot of

1359
00:44:50,400 --> 00:44:52,240
complicated options you can use with cam

1360
00:44:52,240 --> 00:44:53,599
player as well

1361
00:44:53,599 --> 00:44:55,680
but the basic usage is the one i just

1362
00:44:55,680 --> 00:44:57,520
showed here today

1363
00:44:57,520 --> 00:44:59,760
so unfortunately we are running a little

1364
00:44:59,760 --> 00:45:01,920
bit short on time so i will have to

1365
00:45:01,920 --> 00:45:03,200
switch back into the powerpoint

1366
00:45:03,200 --> 00:45:06,160
presentation um although uh spoiler

1367
00:45:06,160 --> 00:45:07,040
alert

1368
00:45:07,040 --> 00:45:09,599
all i've got left for you is a um

1369
00:45:09,599 --> 00:45:11,440
hey thank you for watching

1370
00:45:11,440 --> 00:45:12,800
screen so thank you so much for

1371
00:45:12,800 --> 00:45:14,319
listening and hopefully you guys enjoyed

1372
00:45:14,319 --> 00:45:16,079
this short very short unfortunately i

1373
00:45:16,079 --> 00:45:17,920
couldn't go into any more details today

1374
00:45:17,920 --> 00:45:21,280
a very short introduction to canvas

1375
00:45:21,280 --> 00:45:22,960
hopefully you guys find that canvas and

1376
00:45:22,960 --> 00:45:24,560
automotive security and car hacking are

1377
00:45:24,560 --> 00:45:26,240
interesting things i personally love the

1378
00:45:26,240 --> 00:45:27,920
field i work in i'm always happy to help

1379
00:45:27,920 --> 00:45:31,200
anyone interested in getting uh involved

1380
00:45:31,200 --> 00:45:32,800
so please by all means if you have any

1381
00:45:32,800 --> 00:45:34,240
questions concerns you want more

1382
00:45:34,240 --> 00:45:35,760
information

1383
00:45:35,760 --> 00:45:37,040
go ahead and send me an email i'd be

1384
00:45:37,040 --> 00:45:38,079
happy to point you in the direction of

1385
00:45:38,079 --> 00:45:39,920
resources if i can't answer you directly

1386
00:45:39,920 --> 00:45:42,560
myself um but i'm always happy to speak

1387
00:45:42,560 --> 00:45:44,720
to um people who are interested in

1388
00:45:44,720 --> 00:45:46,160
automotive security i think it's a great

1389
00:45:46,160 --> 00:45:47,760
industry and we need more professionals

1390
00:45:47,760 --> 00:45:48,960
so

1391
00:45:48,960 --> 00:45:51,040
by all means come on in and and let's

1392
00:45:51,040 --> 00:45:52,960
hack cars together so thank you all so

1393
00:45:52,960 --> 00:45:54,480
much for your time and i hope you guys

1394
00:45:54,480 --> 00:45:58,440
enjoy the rest of sync on

1395
00:46:01,040 --> 00:46:03,119
you

