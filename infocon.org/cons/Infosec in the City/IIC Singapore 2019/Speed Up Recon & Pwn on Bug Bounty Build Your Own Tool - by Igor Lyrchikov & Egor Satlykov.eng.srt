1
00:00:01,850 --> 00:00:04,920
so okay hello everyone nice to see you

2
00:00:04,920 --> 00:00:10,290
here today me and my colleague Igor

3
00:00:10,290 --> 00:00:14,700
gonna talk about some kind of automation

4
00:00:14,700 --> 00:00:19,850
in for bug bounties for vini tree

5
00:00:19,850 --> 00:00:24,650
penetration tests and other own stuff so

6
00:00:24,650 --> 00:00:26,640
my friend Igor

7
00:00:26,640 --> 00:00:29,340
he's a nutrition tester bug bounty

8
00:00:29,340 --> 00:00:32,090
hunter sole etcetera etcetera etcetera

9
00:00:32,090 --> 00:00:34,350
he'll like to break stuff

10
00:00:34,350 --> 00:00:37,350
me too my name is Igor nama in iteration

11
00:00:37,350 --> 00:00:41,790
tester from russia and most of my free

12
00:00:41,790 --> 00:00:44,870
time I'm spending doing background stuff

13
00:00:44,870 --> 00:00:48,329
hacker won back route sinner cobalt core

14
00:00:48,329 --> 00:00:52,199
and today we're going to talk about some

15
00:00:52,199 --> 00:00:55,649
optimation related to bug bounties also

16
00:00:55,649 --> 00:00:58,260
some information about tools that

17
00:00:58,260 --> 00:01:01,850
already exists and research in this area

18
00:01:01,850 --> 00:01:06,689
we also want to show our tool when we

19
00:01:06,689 --> 00:01:09,990
put together all the things but at the

20
00:01:09,990 --> 00:01:13,400
same time no need to forget about your

21
00:01:13,400 --> 00:01:17,060
own modifications your own research

22
00:01:17,060 --> 00:01:19,740
because it's really matter in background

23
00:01:19,740 --> 00:01:21,990
is because if you are using public

24
00:01:21,990 --> 00:01:26,070
available tools its wouldn't fit you

25
00:01:26,070 --> 00:01:28,650
wouldn't get real result because

26
00:01:28,650 --> 00:01:31,049
everyone launched it so you need to

27
00:01:31,049 --> 00:01:34,110
improve or create something on your own

28
00:01:34,110 --> 00:01:38,729
and first of all let's describe the

29
00:01:38,729 --> 00:01:41,600
problems were pretending to solve

30
00:01:41,600 --> 00:01:42,920
[Music]

31
00:01:42,920 --> 00:01:45,799
penetration tests and bug bounties

32
00:01:45,799 --> 00:01:49,409
become more popular from year to year

33
00:01:49,409 --> 00:01:53,100
it's get really trendy to launch private

34
00:01:53,100 --> 00:01:55,170
bug bounty program after penetration

35
00:01:55,170 --> 00:01:58,890
tests and the main thing here is that

36
00:01:58,890 --> 00:02:03,030
you the tester are supposed to perform a

37
00:02:03,030 --> 00:02:06,090
big amount of same checks all the time

38
00:02:06,090 --> 00:02:09,410
and no matter if it's bug bounty or

39
00:02:09,410 --> 00:02:12,030
ordinary penetration test you are doing

40
00:02:12,030 --> 00:02:13,000
monkey job

41
00:02:13,000 --> 00:02:16,330
sometimes and you should be sure that

42
00:02:16,330 --> 00:02:20,910
all necessary assets are well covered so

43
00:02:20,910 --> 00:02:24,490
you're covered and it turns you to do

44
00:02:24,490 --> 00:02:27,250
this job again and again all the time

45
00:02:27,250 --> 00:02:30,900
and this is even really what you want

46
00:02:30,900 --> 00:02:37,480
right and what is a way to find a

47
00:02:37,480 --> 00:02:41,650
solution and first you just need to

48
00:02:41,650 --> 00:02:45,550
automate all your common checks and many

49
00:02:45,550 --> 00:02:47,620
old checks you are doing every time yes

50
00:02:47,620 --> 00:02:50,590
it's simple so then you need to add your

51
00:02:50,590 --> 00:02:53,520
custom payload and your custom checks

52
00:02:53,520 --> 00:02:57,280
through your detection mechanisms so to

53
00:02:57,280 --> 00:02:59,320
be on the I don't know some kind of

54
00:02:59,320 --> 00:03:01,980
cutting edge of well known

55
00:03:01,980 --> 00:03:04,780
vulnerabilities fresh brand new one day

56
00:03:04,780 --> 00:03:08,230
vulnerabilities and you need to do it

57
00:03:08,230 --> 00:03:11,590
all the time so it means you would have

58
00:03:11,590 --> 00:03:14,830
more time for actually doing research of

59
00:03:14,830 --> 00:03:17,920
the application logics to find more

60
00:03:17,920 --> 00:03:22,209
custom security illogical flaws zero

61
00:03:22,209 --> 00:03:25,330
days which is much more interesting than

62
00:03:25,330 --> 00:03:29,739
and most profitable in case of back

63
00:03:29,739 --> 00:03:33,160
boundaries so it's likely to be more

64
00:03:33,160 --> 00:03:36,489
critical issue tore your customer or bug

65
00:03:36,489 --> 00:03:38,739
bounty program provider because such

66
00:03:38,739 --> 00:03:41,230
issues won't be found even with paid

67
00:03:41,230 --> 00:03:45,220
scanners because it can check the custom

68
00:03:45,220 --> 00:03:50,200
logic and strategy looks really quite

69
00:03:50,200 --> 00:03:51,070
simple

70
00:03:51,070 --> 00:03:55,000
after you create initial project of your

71
00:03:55,000 --> 00:03:58,510
own scanner so and after my accounting

72
00:03:58,510 --> 00:04:01,510
you should stay ready and updated with

73
00:04:01,510 --> 00:04:03,970
one day's one day vulnerabilities that

74
00:04:03,970 --> 00:04:07,030
can be automated or some zero days you

75
00:04:07,030 --> 00:04:09,850
found just to be faster than a bad guys

76
00:04:09,850 --> 00:04:13,570
at trying to hack someone it's often

77
00:04:13,570 --> 00:04:17,010
necessary to recheck all scopes and

78
00:04:17,010 --> 00:04:20,849
programs each time you have in your list

79
00:04:20,849 --> 00:04:24,280
because condition continuous monitoring

80
00:04:24,280 --> 00:04:25,750
is

81
00:04:25,750 --> 00:04:31,160
really matter and it might be useful in

82
00:04:31,160 --> 00:04:34,700
case of back valleys so sometimes any

83
00:04:34,700 --> 00:04:37,910
kind of issue might exist and you might

84
00:04:37,910 --> 00:04:42,920
miss it at first initial scan and the

85
00:04:42,920 --> 00:04:45,380
first time you're looking into it but

86
00:04:45,380 --> 00:04:48,830
then you recheck it with your new

87
00:04:48,830 --> 00:04:52,700
updates of your scanner and you find an

88
00:04:52,700 --> 00:04:54,620
issue you can report it and get your

89
00:04:54,620 --> 00:04:56,510
bounties it's simple

90
00:04:56,510 --> 00:05:00,050
so the main idea of such scanner and

91
00:05:00,050 --> 00:05:02,450
building of your own tool that you are

92
00:05:02,450 --> 00:05:04,670
not trying to compete with paid scanners

93
00:05:04,670 --> 00:05:07,070
such as I don't know NASA second etics

94
00:05:07,070 --> 00:05:11,810
etc because they have a really big

95
00:05:11,810 --> 00:05:15,260
developers team their researches who's

96
00:05:15,260 --> 00:05:16,790
trying to update and improve their

97
00:05:16,790 --> 00:05:20,390
scanners but you can be sometimes faster

98
00:05:20,390 --> 00:05:25,100
than them if you update in your tool

99
00:05:25,100 --> 00:05:29,660
properly and every time when some new

100
00:05:29,660 --> 00:05:34,790
kind of or type of vulnerability appears

101
00:05:34,790 --> 00:05:37,730
so if you are adding your custom checks

102
00:05:37,730 --> 00:05:42,080
to your tool that might be missed by

103
00:05:42,080 --> 00:05:44,750
paid scanners at some time if their

104
00:05:44,750 --> 00:05:48,410
developers didn't edit quite fast or if

105
00:05:48,410 --> 00:05:52,460
scanner update is in common I don't know

106
00:05:52,460 --> 00:05:56,750
each month or so if you are doing it

107
00:05:56,750 --> 00:05:58,940
faster than them you'll get your money

108
00:05:58,940 --> 00:06:03,770
and now I'm gonna talk about some kind

109
00:06:03,770 --> 00:06:07,130
of issues that is really two really easy

110
00:06:07,130 --> 00:06:10,880
to automate and I believe it's a lot

111
00:06:10,880 --> 00:06:15,500
more areas might be covered but I let it

112
00:06:15,500 --> 00:06:18,980
up on you because you you will build

113
00:06:18,980 --> 00:06:22,910
your own scanner your own tool your own

114
00:06:22,910 --> 00:06:25,310
tool and of course it would be a bit

115
00:06:25,310 --> 00:06:30,620
different from ours so first think it's

116
00:06:30,620 --> 00:06:34,870
actually recon step and it was automated

117
00:06:34,870 --> 00:06:38,810
really many times with a lot of tools

118
00:06:38,810 --> 00:06:40,730
were publicly released and might be

119
00:06:40,730 --> 00:06:44,300
installed and launched with no any

120
00:06:44,300 --> 00:06:47,930
hassle so you need to remember that you

121
00:06:47,930 --> 00:06:50,570
need to gather subdomains with space if

122
00:06:50,570 --> 00:06:52,820
you numeration then you trying to root

123
00:06:52,820 --> 00:06:57,290
for sit and search using search engines

124
00:06:57,290 --> 00:07:01,550
public api s-- find some kind of not

125
00:07:01,550 --> 00:07:04,820
liquid instances and just analyze and

126
00:07:04,820 --> 00:07:06,770
and i like them you can do this with

127
00:07:06,770 --> 00:07:09,380
scripts like I don't know maybe old one

128
00:07:09,380 --> 00:07:12,260
sub Lister which was really popular few

129
00:07:12,260 --> 00:07:14,900
years ago or more fresh solutions such

130
00:07:14,900 --> 00:07:18,260
as ms or sub finder which is written and

131
00:07:18,260 --> 00:07:24,320
go and working like a charm so when you

132
00:07:24,320 --> 00:07:28,250
add some kind of subdomain enumeration

133
00:07:28,250 --> 00:07:30,229
stuff to your tool you can improve it

134
00:07:30,229 --> 00:07:35,120
with continuous gathering using public

135
00:07:35,120 --> 00:07:38,840
api s-- of search engines such as

136
00:07:38,840 --> 00:07:43,130
sheldon census google dorks everything

137
00:07:43,130 --> 00:07:45,770
you want then you're actually perform

138
00:07:45,770 --> 00:07:48,530
lookup truth through every interesting

139
00:07:48,530 --> 00:07:52,160
sources sources you may find useful in

140
00:07:52,160 --> 00:07:56,930
your manually analyzing then one more

141
00:07:56,930 --> 00:08:00,950
necessary step is to find some

142
00:08:00,950 --> 00:08:04,700
parameters that might be used so you can

143
00:08:04,700 --> 00:08:09,020
find an endpoint and but it wouldn't

144
00:08:09,020 --> 00:08:12,860
work without correct parameters so you

145
00:08:12,860 --> 00:08:16,300
need to pass it to this endpoint and

146
00:08:16,300 --> 00:08:20,750
then you may try your luck and find some

147
00:08:20,750 --> 00:08:23,300
vulnerability but first of all you need

148
00:08:23,300 --> 00:08:29,300
to analyze javascript files using for

149
00:08:29,300 --> 00:08:32,809
example link finder script and you can

150
00:08:32,809 --> 00:08:35,419
try to extract these endpoints and

151
00:08:35,419 --> 00:08:39,289
parameters from existence content on the

152
00:08:39,289 --> 00:08:41,719
website if we are talking about website

153
00:08:41,719 --> 00:08:44,839
analysis so then you can also use param

154
00:08:44,839 --> 00:08:48,110
minor which was designed for burp suit

155
00:08:48,110 --> 00:08:52,790
but its source is really important and

156
00:08:52,790 --> 00:08:56,710
and be converted to your own

157
00:08:56,710 --> 00:09:01,190
command-line interface tool and involved

158
00:09:01,190 --> 00:09:04,280
in your script then you can try param

159
00:09:04,280 --> 00:09:08,720
pam-pam script which was created by my

160
00:09:08,720 --> 00:09:12,380
friend russian researcher boom maybe you

161
00:09:12,380 --> 00:09:16,220
seen his reports and he'd used some kind

162
00:09:16,220 --> 00:09:20,540
of sorts magic mathematical algorithms

163
00:09:20,540 --> 00:09:25,060
to increase in numeration time and so

164
00:09:25,060 --> 00:09:28,910
it's working quite good in case when you

165
00:09:28,910 --> 00:09:31,130
need to try to brute-force something

166
00:09:31,130 --> 00:09:34,820
really quick I heard about a script

167
00:09:34,820 --> 00:09:38,150
called Arjun but I'm not quite sure that

168
00:09:38,150 --> 00:09:41,450
it's used in our tool so a lot of same

169
00:09:41,450 --> 00:09:45,680
things might be used as well the next

170
00:09:45,680 --> 00:09:50,140
step and this is quite logical step to

171
00:09:50,140 --> 00:09:54,140
identify the technology in that were

172
00:09:54,140 --> 00:09:56,360
used in research development lifecycle

173
00:09:56,360 --> 00:10:01,610
and I like webalizer really much it's a

174
00:10:01,610 --> 00:10:04,910
good extension for browsers and doing

175
00:10:04,910 --> 00:10:08,480
his job quite but it also can be used in

176
00:10:08,480 --> 00:10:12,950
your scanner as a CLI script so or if

177
00:10:12,950 --> 00:10:15,550
you want you can use what web script

178
00:10:15,550 --> 00:10:20,170
anything just gather information from

179
00:10:20,170 --> 00:10:23,720
tools you want then filter it and get

180
00:10:23,720 --> 00:10:29,210
the bigger output so the next step you

181
00:10:29,210 --> 00:10:31,520
may want to perform some type of visual

182
00:10:31,520 --> 00:10:34,400
identification because it might be hard

183
00:10:34,400 --> 00:10:37,670
to knock at every door your sub monomer

184
00:10:37,670 --> 00:10:41,600
enumeration tools gather it's around ten

185
00:10:41,600 --> 00:10:44,560
thousands of subdomains you need to

186
00:10:44,560 --> 00:10:47,540
filter some false positive results and

187
00:10:47,540 --> 00:10:50,690
false negatives and fight you find your

188
00:10:50,690 --> 00:10:53,180
targets so tools like aqua tan

189
00:10:53,180 --> 00:10:56,540
eyewitness or maybe your own tool which

190
00:10:56,540 --> 00:10:59,630
is easy to build with headless ROM or if

191
00:10:59,630 --> 00:11:02,750
you like Java Script with phantom GS

192
00:11:02,750 --> 00:11:05,240
might help you to solve this desk

193
00:11:05,240 --> 00:11:11,420
and a heart not to notice this kind of

194
00:11:11,420 --> 00:11:15,320
check its subdomain to cover which is

195
00:11:15,320 --> 00:11:20,240
used to pop up every year for a lot of

196
00:11:20,240 --> 00:11:22,760
bug bounty programs and sometimes it

197
00:11:22,760 --> 00:11:24,860
appears on the same as it every year

198
00:11:24,860 --> 00:11:27,350
because just I don't know sis admins for

199
00:11:27,350 --> 00:11:32,839
always forget to expand time off of

200
00:11:32,839 --> 00:11:36,830
works so it all reduce subdomain tick or

201
00:11:36,830 --> 00:11:39,980
was already optimized within a lot of

202
00:11:39,980 --> 00:11:42,560
scripts and of course you can spawn one

203
00:11:42,560 --> 00:11:45,370
more script like this just after

204
00:11:45,370 --> 00:11:47,000
understand

205
00:11:47,000 --> 00:11:51,290
can I take our XY that cheat sheet which

206
00:11:51,290 --> 00:11:55,990
was made by add overflow really cool guy

207
00:11:55,990 --> 00:12:01,790
so and the easiest step I think is to

208
00:12:01,790 --> 00:12:04,820
configure some tools such as potater or

209
00:12:04,820 --> 00:12:07,670
any tool based on your own choice to

210
00:12:07,670 --> 00:12:11,570
perform some simple brute-force attempts

211
00:12:11,570 --> 00:12:15,440
if the website you are testing is not

212
00:12:15,440 --> 00:12:18,160
covered with a lot of JavaScript and

213
00:12:18,160 --> 00:12:23,120
it's if you are dealing with some kind

214
00:12:23,120 --> 00:12:26,870
of basic identification or a simple form

215
00:12:26,870 --> 00:12:29,329
you can brute-force it with a top ten

216
00:12:29,329 --> 00:12:33,470
user names and maybe it's ten thousand

217
00:12:33,470 --> 00:12:36,700
of most common passwords and sometimes

218
00:12:36,700 --> 00:12:40,010
from my experience it's the fastest and

219
00:12:40,010 --> 00:12:42,680
really easiest way to do your job and

220
00:12:42,680 --> 00:12:46,339
get into some system because I don't

221
00:12:46,339 --> 00:12:48,380
know credentials such as test test or

222
00:12:48,380 --> 00:12:51,709
admin admin is working sometimes it's

223
00:12:51,709 --> 00:12:56,990
really crazy as I said you always need

224
00:12:56,990 --> 00:13:00,230
to update your scanner with custom and

225
00:13:00,230 --> 00:13:02,390
fresh checks but you also should

226
00:13:02,390 --> 00:13:05,410
automate the well-known vulnerability

227
00:13:05,410 --> 00:13:10,760
lookup so we have a great script vulner

228
00:13:10,760 --> 00:13:15,680
for nmap it would help you to cover this

229
00:13:15,680 --> 00:13:18,339
area and

230
00:13:20,410 --> 00:13:23,420
mmm-hmm few months ago I found the

231
00:13:23,420 --> 00:13:24,830
repository that called

232
00:13:24,830 --> 00:13:28,730
web CVD tests and it's refreshed I don't

233
00:13:28,730 --> 00:13:29,210
know

234
00:13:29,210 --> 00:13:35,360
really really openly and you can include

235
00:13:35,360 --> 00:13:38,540
it just to check some kind of web

236
00:13:38,540 --> 00:13:43,100
application issues and at the end of

237
00:13:43,100 --> 00:13:45,950
this part there's a lot of injections

238
00:13:45,950 --> 00:13:49,010
all the time and we have a lot of

239
00:13:49,010 --> 00:13:53,930
updates about any new bypass techniques

240
00:13:53,930 --> 00:13:57,410
or one day vulnerabilities and as I said

241
00:13:57,410 --> 00:14:00,020
if you are adding it faster than new

242
00:14:00,020 --> 00:14:02,720
update of pay it scanner so you'll

243
00:14:02,720 --> 00:14:06,200
probably gotta get your bounty or fame

244
00:14:06,200 --> 00:14:10,370
or whatever you are looking for and so

245
00:14:10,370 --> 00:14:13,040
now my colleague will continue to talk

246
00:14:13,040 --> 00:14:16,790
about currently released projects in

247
00:14:16,790 --> 00:14:20,840
this area and of course our tool thank

248
00:14:20,840 --> 00:14:24,230
you hello everyone my name is Igor and

249
00:14:24,230 --> 00:14:26,860
I'll continue our talk about this thing

250
00:14:26,860 --> 00:14:32,780
and now I do some small review of the

251
00:14:32,780 --> 00:14:36,500
tool which you can use nowadays in a big

252
00:14:36,500 --> 00:14:43,360
bounty sphere and also in save your time

253
00:14:43,360 --> 00:14:48,130
so let's begin first is a project black

254
00:14:48,130 --> 00:14:52,100
it's released a few weeks a few years

255
00:14:52,100 --> 00:14:55,970
ago you can find it on a github it's

256
00:14:55,970 --> 00:15:00,200
made by one Russian guy you can check on

257
00:15:00,200 --> 00:15:06,230
a commits we start building it three

258
00:15:06,230 --> 00:15:09,610
years ago so it's very well coded

259
00:15:09,610 --> 00:15:13,490
software you can use for your pen test

260
00:15:13,490 --> 00:15:18,520
back bounty stuff and the other projects

261
00:15:18,520 --> 00:15:23,660
it's very extendable and you can use it

262
00:15:23,660 --> 00:15:26,750
in a darker because it's easy to

263
00:15:26,750 --> 00:15:29,980
configure is it expand

264
00:15:29,980 --> 00:15:32,920
and very or something this is a part of

265
00:15:32,920 --> 00:15:37,360
interface on a screen shot you can track

266
00:15:37,360 --> 00:15:40,120
all your changes all your project all

267
00:15:40,120 --> 00:15:44,580
your scope in one place is very awesome

268
00:15:44,580 --> 00:15:51,510
the next thing is custom board made by

269
00:15:51,510 --> 00:15:54,790
black to fan this is a guy from Twitter

270
00:15:54,790 --> 00:15:59,620
you can also check his his name on

271
00:15:59,620 --> 00:16:02,500
hacker one board and maybe you heard

272
00:16:02,500 --> 00:16:06,630
about it he frequently report a lot of

273
00:16:06,630 --> 00:16:11,680
ceará laughs vulnerabilities and last

274
00:16:11,680 --> 00:16:17,010
year on 0 nice 2018 he on he present his

275
00:16:17,010 --> 00:16:22,600
automatic thing on a conference but it's

276
00:16:22,600 --> 00:16:26,320
still not released but it's very awesome

277
00:16:26,320 --> 00:16:31,360
as a example what you can do and how you

278
00:16:31,360 --> 00:16:37,180
can invest your time to save a lot of

279
00:16:37,180 --> 00:16:44,080
money and time to check everything if

280
00:16:44,080 --> 00:16:48,040
you're using only one checks for

281
00:16:48,040 --> 00:16:53,230
examples here laugh and earn a lot of

282
00:16:53,230 --> 00:16:55,420
cash of course it's not cover everything

283
00:16:55,420 --> 00:17:00,240
but you can focus only only one

284
00:17:00,240 --> 00:17:03,070
vulnerability and use it all the time

285
00:17:03,070 --> 00:17:07,630
and check everywhere the next thing is a

286
00:17:07,630 --> 00:17:11,530
raccoon it's still open source on a

287
00:17:11,530 --> 00:17:21,520
github it have very simple console UI to

288
00:17:21,520 --> 00:17:25,480
be honest is just launcher for several

289
00:17:25,480 --> 00:17:32,770
tools and create one output using Python

290
00:17:32,770 --> 00:17:36,670
and Lua scripts so it's very good for

291
00:17:36,670 --> 00:17:43,169
initial checks for anything

292
00:17:43,169 --> 00:17:45,899
you want to check for first time and

293
00:17:45,899 --> 00:17:48,210
save a lot of time for example if you

294
00:17:48,210 --> 00:17:51,720
are found new scope and want to make

295
00:17:51,720 --> 00:17:53,759
initial recon you can launch it for

296
00:17:53,759 --> 00:17:58,489
whole night woke up and start working

297
00:17:58,489 --> 00:18:02,070
Stryker is the next tool which also has

298
00:18:02,070 --> 00:18:05,759
the same logic it's still open source

299
00:18:05,759 --> 00:18:11,070
and CLI only it's very good for scan and

300
00:18:11,070 --> 00:18:14,820
recon and now I realize I forget about

301
00:18:14,820 --> 00:18:18,629
if I get to say so littles is selected

302
00:18:18,629 --> 00:18:22,769
by us based on our tests because right

303
00:18:22,769 --> 00:18:26,759
before starting right in our small tool

304
00:18:26,759 --> 00:18:30,409
we are test a lot of tools and now pick

305
00:18:30,409 --> 00:18:35,119
this special with good functionality and

306
00:18:35,119 --> 00:18:40,320
your good outputs the good installation

307
00:18:40,320 --> 00:18:47,309
process and dependencies because for

308
00:18:47,309 --> 00:18:52,710
example some weeks ago I test a couple

309
00:18:52,710 --> 00:18:55,529
of tools and it was very hard to install

310
00:18:55,529 --> 00:18:58,289
and very hard to use and it was very

311
00:18:58,289 --> 00:19:03,960
unstable so these tools is very good and

312
00:19:03,960 --> 00:19:07,470
easy to install and easy to use and

313
00:19:07,470 --> 00:19:11,639
helps you to improve your processes of

314
00:19:11,639 --> 00:19:15,809
back bounty and penetration testing next

315
00:19:15,809 --> 00:19:23,369
thing is sniper so it's also provide web

316
00:19:23,369 --> 00:19:27,720
interface and API so you can automate it

317
00:19:27,720 --> 00:19:32,820
and visualize your results it's written

318
00:19:32,820 --> 00:19:37,289
on PHP and Python so PHP is used for web

319
00:19:37,289 --> 00:19:40,019
app and Python and bash script used for

320
00:19:40,019 --> 00:19:45,239
back-end it helps you to do initial

321
00:19:45,239 --> 00:19:48,299
recons some custom checks and you can

322
00:19:48,299 --> 00:19:55,710
change it as you want and later just put

323
00:19:55,710 --> 00:19:58,590
some extra thing inside and use it as

324
00:19:58,590 --> 00:20:02,520
your own system if you want the next

325
00:20:02,520 --> 00:20:08,520
thing is all free recon the tool helps

326
00:20:08,520 --> 00:20:11,640
you to crawl and expand your scope and

327
00:20:11,640 --> 00:20:14,309
expand your assets but sometimes it

328
00:20:14,309 --> 00:20:19,049
stucks I think is because your hardware

329
00:20:19,049 --> 00:20:22,820
system so better use it on your laptop

330
00:20:22,820 --> 00:20:25,350
instead of digitalocean

331
00:20:25,350 --> 00:20:33,080
our FAS AWS instances because it use

332
00:20:33,080 --> 00:20:36,570
crawl lean and sometimes it's not enough

333
00:20:36,570 --> 00:20:43,710
memory and CPU power so it's still

334
00:20:43,710 --> 00:20:47,370
simple step by step launcher for three

335
00:20:47,370 --> 00:20:50,250
or five tools in row and very good

336
00:20:50,250 --> 00:20:53,039
output in one place combine all the

337
00:20:53,039 --> 00:21:02,940
results all together in one file blast

338
00:21:02,940 --> 00:21:07,620
tool we review is spider food its

339
00:21:07,620 --> 00:21:13,230
provides API console output and console

340
00:21:13,230 --> 00:21:17,850
control thing and also web app so it's

341
00:21:17,850 --> 00:21:22,770
very awesome thing for recon it takes a

342
00:21:22,770 --> 00:21:26,549
lot of time and very very slow and very

343
00:21:26,549 --> 00:21:34,159
complex but it's very good for make

344
00:21:34,159 --> 00:21:38,669
intelligence and crawl all information

345
00:21:38,669 --> 00:21:40,230
about the target for example you can

346
00:21:40,230 --> 00:21:43,490
provide twitter.com and launch it for

347
00:21:43,490 --> 00:21:48,029
one day or maybe night and it crawls

348
00:21:48,029 --> 00:21:50,399
everything use a lot of api is like

349
00:21:50,399 --> 00:21:56,429
sensors shot and google dorks are chips

350
00:21:56,429 --> 00:21:59,929
the dork and so on so it's also support

351
00:21:59,929 --> 00:22:03,960
api is for the other services and if you

352
00:22:03,960 --> 00:22:05,760
provide your developers account for

353
00:22:05,760 --> 00:22:09,400
different things like

354
00:22:09,400 --> 00:22:13,240
Twitter developer and stuff you can get

355
00:22:13,240 --> 00:22:16,840
more information so it's very good thing

356
00:22:16,840 --> 00:22:19,090
you can control all the process and

357
00:22:19,090 --> 00:22:22,990
sometimes pose and continue scanning if

358
00:22:22,990 --> 00:22:29,290
you have time very good so the last part

359
00:22:29,290 --> 00:22:34,810
is about our tool we don't provide the

360
00:22:34,810 --> 00:22:38,110
result of our job we just want to share

361
00:22:38,110 --> 00:22:42,790
our ideas and how we are built it based

362
00:22:42,790 --> 00:22:46,300
on our experience our researches and how

363
00:22:46,300 --> 00:22:52,810
we do it so first thing is a web UI of

364
00:22:52,810 --> 00:22:56,230
course it's not necessary because you

365
00:22:56,230 --> 00:22:57,670
can control all the things from a

366
00:22:57,670 --> 00:23:00,150
terminal and sometimes it's better

367
00:23:00,150 --> 00:23:04,150
because you can split your threads on

368
00:23:04,150 --> 00:23:07,300
different instances on digitalocean AWS

369
00:23:07,300 --> 00:23:11,020
and so on but it's very good to

370
00:23:11,020 --> 00:23:13,720
visualize your data your results your

371
00:23:13,720 --> 00:23:19,690
output and you can save your time in the

372
00:23:19,690 --> 00:23:23,640
end to receive results and compare

373
00:23:23,640 --> 00:23:26,770
between your hosts assets and so on

374
00:23:26,770 --> 00:23:29,050
but it's also time killer because you

375
00:23:29,050 --> 00:23:31,390
need extra time to develop it support it

376
00:23:31,390 --> 00:23:35,020
expand functionality and also analyze

377
00:23:35,020 --> 00:23:37,420
the results and the outputs from a

378
00:23:37,420 --> 00:23:41,860
different things but it's very awesome

379
00:23:41,860 --> 00:23:43,960
if you have time and have skills to

380
00:23:43,960 --> 00:23:49,000
build it the next thing is testing

381
00:23:49,000 --> 00:23:51,930
complete altogether different tools so

382
00:23:51,930 --> 00:23:56,280
as I told before we spend a lot of times

383
00:23:56,280 --> 00:24:02,620
to pick the right tools the right ideas

384
00:24:02,620 --> 00:24:06,970
of the tools in different spheres for

385
00:24:06,970 --> 00:24:09,640
example to find in open redirects on a

386
00:24:09,640 --> 00:24:16,360
website we pick 10 or more tools spend a

387
00:24:16,360 --> 00:24:20,050
whole weekend and test it on different

388
00:24:20,050 --> 00:24:22,870
scopes and different assets domains API

389
00:24:22,870 --> 00:24:23,559
is

390
00:24:23,559 --> 00:24:27,639
one and after it choose the best one

391
00:24:27,639 --> 00:24:30,639
sometimes it's not one sometimes two or

392
00:24:30,639 --> 00:24:36,279
three and run it one by one and combine

393
00:24:36,279 --> 00:24:40,029
the results sometimes we are changing

394
00:24:40,029 --> 00:24:43,179
the source code but it's a tricky way

395
00:24:43,179 --> 00:24:47,409
because sometimes developer after a few

396
00:24:47,409 --> 00:24:49,899
updates they change the whole logic of a

397
00:24:49,899 --> 00:24:54,990
tool and you cannot use it it when your

398
00:24:54,990 --> 00:24:56,669
change

399
00:24:56,669 --> 00:25:01,269
we source code so better just pick some

400
00:25:01,269 --> 00:25:03,580
tools what you like and use it in your

401
00:25:03,580 --> 00:25:07,929
system and of course better to track all

402
00:25:07,929 --> 00:25:11,409
the changes because developers sometimes

403
00:25:11,409 --> 00:25:15,159
push the awesome functionality after a

404
00:25:15,159 --> 00:25:20,200
few updates and from the first checks

405
00:25:20,200 --> 00:25:23,549
you can find these tools very useful

406
00:25:23,549 --> 00:25:29,159
sometimes became useless and vice versa

407
00:25:29,159 --> 00:25:35,850
push as a mirror so as eager told before

408
00:25:35,850 --> 00:25:42,659
you you don't want to compete with paid

409
00:25:42,659 --> 00:25:47,019
scanners like a kinetics because it

410
00:25:47,019 --> 00:25:53,129
cover more things but then your first

411
00:25:53,129 --> 00:25:56,259
who is the first is a matter for example

412
00:25:56,259 --> 00:26:01,679
you it's very very awesome very sorry

413
00:26:01,679 --> 00:26:04,509
it's very good for for example subdomain

414
00:26:04,509 --> 00:26:11,499
takeover if you find this domain first

415
00:26:11,499 --> 00:26:16,830
and provide the proofs you earn bounty

416
00:26:16,830 --> 00:26:21,070
so it means you have to create the push

417
00:26:21,070 --> 00:26:26,499
system for your chat for your messenger

418
00:26:26,499 --> 00:26:30,340
like telegram jabber York slack or

419
00:26:30,340 --> 00:26:32,890
wherever you use

420
00:26:32,890 --> 00:26:37,830
and when your tool found a possible

421
00:26:37,830 --> 00:26:42,790
vulnerability or possible finding it

422
00:26:42,790 --> 00:26:45,130
should be immediate immediately notify

423
00:26:45,130 --> 00:26:49,600
you about it and you can switch all your

424
00:26:49,600 --> 00:26:53,740
processes to just recheck it confirm

425
00:26:53,740 --> 00:26:58,690
make POC and report it so it pushes a

426
00:26:58,690 --> 00:27:09,970
mirror will republic tool we are use in

427
00:27:09,970 --> 00:27:12,940
our project is open source and everyone

428
00:27:12,940 --> 00:27:21,030
use it so when you use this tool

429
00:27:21,030 --> 00:27:27,250
everyone use it so the better to create

430
00:27:27,250 --> 00:27:29,590
custom checks for one day

431
00:27:29,590 --> 00:27:31,720
vulnerabilities or maybe rewrite some

432
00:27:31,720 --> 00:27:36,730
checks to improve the flow better than

433
00:27:36,730 --> 00:27:43,930
the public and be the first who report

434
00:27:43,930 --> 00:27:50,650
it and it's really matter because as I

435
00:27:50,650 --> 00:27:53,050
told before like black to fan just

436
00:27:53,050 --> 00:27:55,990
create his custom Sierra love checker

437
00:27:55,990 --> 00:28:02,230
and report it on a whole hack one assets

438
00:28:02,230 --> 00:28:05,370
and earn a lot of money

439
00:28:05,370 --> 00:28:08,380
finding relationship relations between

440
00:28:08,380 --> 00:28:15,160
data is also matter because on some IP

441
00:28:15,160 --> 00:28:19,270
addresses and on some domains you can

442
00:28:19,270 --> 00:28:21,940
find the same functionality and you have

443
00:28:21,940 --> 00:28:25,450
to filter it to save your time like if

444
00:28:25,450 --> 00:28:29,200
you are making screenshots of 10k

445
00:28:29,200 --> 00:28:35,370
domains better to filter it and remove

446
00:28:35,370 --> 00:28:40,570
duplicates and only focus on unique

447
00:28:40,570 --> 00:28:45,940
domains or if you find CD ends if

448
00:28:45,940 --> 00:28:48,330
to also remove it because sometimes it's

449
00:28:48,330 --> 00:28:54,370
useless and don't help you to find you

450
00:28:54,370 --> 00:29:00,639
bugs retest and rechecks is also matter

451
00:29:00,639 --> 00:29:02,740
because the first thing you have to

452
00:29:02,740 --> 00:29:07,590
create a flow of your initial scan and

453
00:29:07,590 --> 00:29:11,710
after it you need to constantly recheck

454
00:29:11,710 --> 00:29:18,539
in but you need to find but the best

455
00:29:18,539 --> 00:29:24,549
position of frequently and delays to

456
00:29:24,549 --> 00:29:27,149
avoid to bands because if you're

457
00:29:27,149 --> 00:29:29,820
constantly recheck for example

458
00:29:29,820 --> 00:29:32,919
directories enumeration you might be

459
00:29:32,919 --> 00:29:35,590
banned by a system for days months or

460
00:29:35,590 --> 00:29:39,970
maybe permanently but if you put some

461
00:29:39,970 --> 00:29:43,059
delays you can do it all the time very

462
00:29:43,059 --> 00:29:47,139
slow but you can find something you when

463
00:29:47,139 --> 00:29:51,159
it will be released by developers so you

464
00:29:51,159 --> 00:29:53,440
have to improve this thing based on your

465
00:29:53,440 --> 00:29:57,700
statistic in your experience and do it

466
00:29:57,700 --> 00:30:02,399
all the time so the last thing is

467
00:30:02,399 --> 00:30:06,879
investing your bounty in your improving

468
00:30:06,879 --> 00:30:11,549
your tool and avoid wasting on time to

469
00:30:11,549 --> 00:30:16,240
do the same job and focus only on new

470
00:30:16,240 --> 00:30:22,149
findings maybe zero days or improving

471
00:30:22,149 --> 00:30:29,019
one day's pay loads to save your time

472
00:30:29,019 --> 00:30:32,909
and script all the things you can do so

473
00:30:32,909 --> 00:30:36,000
on the next three slides I'll show you

474
00:30:36,000 --> 00:30:41,759
some our already created things

475
00:30:42,389 --> 00:30:50,559
so we already scripted square we already

476
00:30:50,559 --> 00:30:54,909
scripted things like assets gathering

477
00:30:54,909 --> 00:30:58,460
like for go Buster DNS

478
00:30:58,460 --> 00:31:01,490
worth forcing against the means to find

479
00:31:01,490 --> 00:31:04,880
the unique domains which not available

480
00:31:04,880 --> 00:31:09,740
from public API s we also script the

481
00:31:09,740 --> 00:31:13,360
things which combine IP addresses call

482
00:31:13,360 --> 00:31:17,720
screenshots in all in one place and we

483
00:31:17,720 --> 00:31:20,929
can change the scope manually or

484
00:31:20,929 --> 00:31:26,620
automatically based on based in your

485
00:31:26,620 --> 00:31:30,200
program for example this is for hack one

486
00:31:30,200 --> 00:31:35,120
so it's built automatically but on some

487
00:31:35,120 --> 00:31:40,220
pen tests you can add your own scope and

488
00:31:40,220 --> 00:31:45,190
assets oh it's all blur

489
00:31:45,190 --> 00:31:49,640
it's bit on your own pen test you can do

490
00:31:49,640 --> 00:31:52,520
it manually and push your AP addresses

491
00:31:52,520 --> 00:31:56,049
in domains in one place and control it

492
00:31:56,049 --> 00:32:01,669
so in the end I want to paint HN these

493
00:32:01,669 --> 00:32:05,899
on on things is like ultimate ization is

494
00:32:05,899 --> 00:32:08,990
a matter because it saves your time it's

495
00:32:08,990 --> 00:32:11,770
also applicable not for only bug bounty

496
00:32:11,770 --> 00:32:14,980
it's applicable for pen test as well and

497
00:32:14,980 --> 00:32:19,669
for your site job custom checks change

498
00:32:19,669 --> 00:32:23,000
the rules and helps you to find some

499
00:32:23,000 --> 00:32:30,820
things everything might be scripted and

500
00:32:30,820 --> 00:32:35,870
automated to save your time and also you

501
00:32:35,870 --> 00:32:38,809
can create your own tools based on your

502
00:32:38,809 --> 00:32:44,419
experience may be on our tools and maybe

503
00:32:44,419 --> 00:32:48,260
be the first in different spheres so

504
00:32:48,260 --> 00:32:51,230
it's all thank you for your attention

505
00:32:51,230 --> 00:32:53,960
any questions

506
00:32:53,960 --> 00:32:57,130
[Applause]

507
00:33:01,960 --> 00:33:06,320
any questions maybe or needless to say

508
00:33:06,320 --> 00:33:11,030
that we are also checking about simple

509
00:33:11,030 --> 00:33:13,250
neuro bilities after initial scan with

510
00:33:13,250 --> 00:33:16,810
some kind of just by scripting but it's

511
00:33:16,810 --> 00:33:23,649
it hard to show just outputs of it yep

512
00:33:25,870 --> 00:33:31,220
sometimes but yeah very often but if you

513
00:33:31,220 --> 00:33:32,540
are dealing with some kind of

514
00:33:32,540 --> 00:33:36,260
penetration test or you can ask for two

515
00:33:36,260 --> 00:33:38,930
for this kind of access or if you are

516
00:33:38,930 --> 00:33:43,310
dealing with programs such as if you are

517
00:33:43,310 --> 00:33:46,010
using some kind of whitelisted emails

518
00:33:46,010 --> 00:33:49,250
for your testing or your iodine custom

519
00:33:49,250 --> 00:33:58,030
header just to prove that you are but

520
00:33:58,030 --> 00:34:05,480
the hard thing is to should I use this

521
00:34:05,480 --> 00:34:09,679
microphone so the hardest thing is to

522
00:34:09,679 --> 00:34:15,050
teach our system how to use a better

523
00:34:15,050 --> 00:34:18,460
rates though it should be really high -

524
00:34:18,460 --> 00:34:22,550
I don't know to complete a job in a

525
00:34:22,550 --> 00:34:26,090
single night or single day but to

526
00:34:26,090 --> 00:34:30,399
probably avoid a band of course so well

527
00:34:30,399 --> 00:34:33,590
right now we are just playing with rates

528
00:34:33,590 --> 00:34:40,060
and trying to configure some parameters

529
00:34:40,060 --> 00:34:44,750
to make different speech rates for our

530
00:34:44,750 --> 00:34:47,960
tool yep but the main thing is you need

531
00:34:47,960 --> 00:34:53,300
to create continuous monitoring and when

532
00:34:53,300 --> 00:34:57,560
your tool is know the program that it

533
00:34:57,560 --> 00:35:00,540
would be launched on

534
00:35:00,540 --> 00:35:03,720
on every continuous monitoring attempt

535
00:35:03,720 --> 00:35:06,480
it wouldn't be bent because it already

536
00:35:06,480 --> 00:35:09,570
know that okay so this is I don't know

537
00:35:09,570 --> 00:35:14,910
uber shop so I can launch a battery ram

538
00:35:14,910 --> 00:35:17,609
because it wouldn't be bent or if I am

539
00:35:17,609 --> 00:35:19,590
scanning for back route and doing I

540
00:35:19,590 --> 00:35:22,530
don't know SoundCloud so I should

541
00:35:22,530 --> 00:35:27,310
decrease some limits because they're

542
00:35:27,310 --> 00:35:30,050
[Music]

543
00:35:30,050 --> 00:35:35,180
CloudFront trying to burn us every time

544
00:35:40,130 --> 00:35:42,920
all the time if you're launched

545
00:35:42,920 --> 00:35:52,050
automatic scans scanning reports in

546
00:35:52,050 --> 00:36:04,020
territory maybe my parameters thank you

547
00:36:04,020 --> 00:36:06,140
again

