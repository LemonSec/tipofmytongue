1
00:00:02,639 --> 00:00:05,440
so the talk that i'm going to

2
00:00:05,440 --> 00:00:08,160
give you today is about free emfa for

3
00:00:08,160 --> 00:00:10,400
all

4
00:00:11,120 --> 00:00:13,519
i see i work with the security pattern

5
00:00:13,519 --> 00:00:16,800
and formerly i worked for about 10 years

6
00:00:16,800 --> 00:00:18,080
as a

7
00:00:18,080 --> 00:00:21,359
red team engineer in a big smart card

8
00:00:21,359 --> 00:00:22,560
company

9
00:00:22,560 --> 00:00:25,039
and when they hired me

10
00:00:25,039 --> 00:00:25,340
they

11
00:00:25,340 --> 00:00:27,920
[Music]

12
00:00:27,920 --> 00:00:30,640
told me that i would be going to work

13
00:00:30,640 --> 00:00:33,120
with lasers in order to inject fault on

14
00:00:33,120 --> 00:00:34,399
smart cards

15
00:00:34,399 --> 00:00:36,079
so as soon

16
00:00:36,079 --> 00:00:36,960
that

17
00:00:36,960 --> 00:00:39,280
they told me i would i would work with

18
00:00:39,280 --> 00:00:40,559
lasers

19
00:00:40,559 --> 00:00:44,000
i imagine that i was going to

20
00:00:44,000 --> 00:00:46,239
fight with

21
00:00:46,239 --> 00:00:47,360
lasers

22
00:00:47,360 --> 00:00:49,440
against hackers in order to defend the

23
00:00:49,440 --> 00:00:52,480
security of credit cards

24
00:00:52,480 --> 00:00:56,320
in reality it's not that but

25
00:00:56,320 --> 00:00:58,800
still i was thinking something like this

26
00:00:58,800 --> 00:01:01,760
where i had to use lasers with mirrors

27
00:01:01,760 --> 00:01:04,879
and then direct lasers to something

28
00:01:04,879 --> 00:01:06,799
but again

29
00:01:06,799 --> 00:01:09,040
reality is a little bit

30
00:01:09,040 --> 00:01:11,760
subtle than this usually with lasers to

31
00:01:11,760 --> 00:01:12,960
inject faults

32
00:01:12,960 --> 00:01:15,840
you have a computer that drives a laser

33
00:01:15,840 --> 00:01:16,880
in some

34
00:01:16,880 --> 00:01:17,759
box

35
00:01:17,759 --> 00:01:19,920
and then you get just to work with the

36
00:01:19,920 --> 00:01:21,280
computer

37
00:01:21,280 --> 00:01:24,640
so the talk today is to show you

38
00:01:24,640 --> 00:01:28,560
lasers but why fault attacks are useful

39
00:01:28,560 --> 00:01:31,759
are used by hackers and how they works

40
00:01:31,759 --> 00:01:34,720
and now you and now everybody can

41
00:01:34,720 --> 00:01:38,840
build a small tool to try using fords

42
00:01:38,840 --> 00:01:42,560
so where fault attacks can be used

43
00:01:42,560 --> 00:01:43,920
basically on

44
00:01:43,920 --> 00:01:45,680
the smart card worlds

45
00:01:45,680 --> 00:01:48,960
then there's one main place where

46
00:01:48,960 --> 00:01:51,280
faults can be used when you use your

47
00:01:51,280 --> 00:01:53,600
smart card to to make a transaction you

48
00:01:53,600 --> 00:01:55,600
basically

49
00:01:55,600 --> 00:01:58,719
insert your pin to verify that you are

50
00:01:58,719 --> 00:02:01,520
the owner of the card

51
00:02:01,520 --> 00:02:04,079
the flowchart shows that if you insert

52
00:02:04,079 --> 00:02:07,600
the right pin the card inside compares

53
00:02:07,600 --> 00:02:10,318
the pin inserted with the with its own

54
00:02:10,318 --> 00:02:12,720
pin and if they are equal then the

55
00:02:12,720 --> 00:02:14,480
transaction is performed

56
00:02:14,480 --> 00:02:18,238
if not the transaction is halted

57
00:02:18,480 --> 00:02:19,360
but

58
00:02:19,360 --> 00:02:21,280
what happens is that there exist big

59
00:02:21,280 --> 00:02:22,800
pockets so

60
00:02:22,800 --> 00:02:25,120
if the card if your card is stolen then

61
00:02:25,120 --> 00:02:26,800
there's only one thing that prevent the

62
00:02:26,800 --> 00:02:29,520
pickpocket to perform transaction on

63
00:02:29,520 --> 00:02:32,000
your money it's that

64
00:02:32,000 --> 00:02:34,879
input pin if they turn if the

65
00:02:34,879 --> 00:02:37,040
hacker if the big pocket

66
00:02:37,040 --> 00:02:39,760
don't know the the right pin he will not

67
00:02:39,760 --> 00:02:41,680
be able to perform transaction with your

68
00:02:41,680 --> 00:02:42,959
money

69
00:02:42,959 --> 00:02:44,000
but

70
00:02:44,000 --> 00:02:46,640
what can happen is that

71
00:02:46,640 --> 00:02:48,000
the hacker

72
00:02:48,000 --> 00:02:51,840
can try to fault this execution in order

73
00:02:51,840 --> 00:02:53,040
to obtain

74
00:02:53,040 --> 00:02:54,560
a correct

75
00:02:54,560 --> 00:02:56,560
transaction to fault the execution of

76
00:02:56,560 --> 00:02:58,000
the card in order to perform the

77
00:02:58,000 --> 00:02:59,360
transaction

78
00:02:59,360 --> 00:03:02,159
to accept a wrong pin even

79
00:03:02,159 --> 00:03:05,040
as if it was the correct one

80
00:03:05,040 --> 00:03:07,680
so from this flow chart how does the

81
00:03:07,680 --> 00:03:09,280
um

82
00:03:09,280 --> 00:03:10,239
the

83
00:03:10,239 --> 00:03:11,519
the

84
00:03:11,519 --> 00:03:13,680
the implementation a generic

85
00:03:13,680 --> 00:03:15,840
implementation of this flow chart

86
00:03:15,840 --> 00:03:19,519
can be can be expressed this is a really

87
00:03:19,519 --> 00:03:20,959
generic

88
00:03:20,959 --> 00:03:23,360
view of the

89
00:03:23,360 --> 00:03:25,840
of the code of the implementation

90
00:03:25,840 --> 00:03:27,920
the function is verify pin which takes

91
00:03:27,920 --> 00:03:30,959
an input a candidate pin from the user

92
00:03:30,959 --> 00:03:33,760
and then in step two a first

93
00:03:33,760 --> 00:03:36,560
function is the comparison of the

94
00:03:36,560 --> 00:03:37,760
card pin

95
00:03:37,760 --> 00:03:40,080
against the input pin if they are both

96
00:03:40,080 --> 00:03:41,280
equal then

97
00:03:41,280 --> 00:03:44,239
the function return a status true

98
00:03:44,239 --> 00:03:45,360
in

99
00:03:45,360 --> 00:03:47,360
instead if they are different the status

100
00:03:47,360 --> 00:03:49,280
return is false

101
00:03:49,280 --> 00:03:52,000
in step three there's an if condition if

102
00:03:52,000 --> 00:03:54,400
the status return is true then the

103
00:03:54,400 --> 00:03:56,239
transaction is performed

104
00:03:56,239 --> 00:04:00,239
if it is not then it jumps to step six

105
00:04:00,239 --> 00:04:03,599
and the transaction is stopped

106
00:04:04,080 --> 00:04:04,959
so

107
00:04:04,959 --> 00:04:05,760
how

108
00:04:05,760 --> 00:04:07,680
the attacker can try to

109
00:04:07,680 --> 00:04:09,599
[Music]

110
00:04:09,599 --> 00:04:12,720
perform a fault in order to corrupt the

111
00:04:12,720 --> 00:04:15,720
execution

112
00:04:16,798 --> 00:04:20,000
we can think of at least three

113
00:04:20,000 --> 00:04:22,479
main points where the fault can occur

114
00:04:22,479 --> 00:04:25,360
first one is the comparison function if

115
00:04:25,360 --> 00:04:29,199
the attacker is able to corrupt this

116
00:04:29,199 --> 00:04:32,080
function in order to return always true

117
00:04:32,080 --> 00:04:33,759
then it is sufficient for the attacker

118
00:04:33,759 --> 00:04:34,479
to

119
00:04:34,479 --> 00:04:37,360
get a transaction

120
00:04:37,360 --> 00:04:39,759
another point of

121
00:04:39,759 --> 00:04:41,360
injection or fault

122
00:04:41,360 --> 00:04:44,160
is the value returned by the comparison

123
00:04:44,160 --> 00:04:46,240
function if this value

124
00:04:46,240 --> 00:04:48,639
which is returned false for example for

125
00:04:48,639 --> 00:04:52,720
a wrong pin is corrupted by the attacker

126
00:04:52,720 --> 00:04:55,280
then the transaction is performed once

127
00:04:55,280 --> 00:04:57,040
again

128
00:04:57,040 --> 00:04:58,880
and a third

129
00:04:58,880 --> 00:05:02,160
point of injection of the of the fault

130
00:05:02,160 --> 00:05:04,240
is the if

131
00:05:04,240 --> 00:05:06,880
instruction if this instruction is

132
00:05:06,880 --> 00:05:09,440
faulted then instead of executing step

133
00:05:09,440 --> 00:05:11,039
three the

134
00:05:11,039 --> 00:05:13,680
flow of execution goes directly to step

135
00:05:13,680 --> 00:05:15,840
four and the transaction can be

136
00:05:15,840 --> 00:05:17,199
performed

137
00:05:17,199 --> 00:05:19,199
so we can identify at least three

138
00:05:19,199 --> 00:05:20,320
different

139
00:05:20,320 --> 00:05:23,039
models for the attack to work

140
00:05:23,039 --> 00:05:25,680
the first one is the corrupt instruction

141
00:05:25,680 --> 00:05:27,440
corrupting the

142
00:05:27,440 --> 00:05:30,400
comparison function

143
00:05:30,400 --> 00:05:32,240
may lead to a

144
00:05:32,240 --> 00:05:34,479
transaction performed the second one is

145
00:05:34,479 --> 00:05:36,960
the corrupt value where the value on a

146
00:05:36,960 --> 00:05:38,479
register inside the

147
00:05:38,479 --> 00:05:41,440
the smart card is corrupted

148
00:05:41,440 --> 00:05:44,880
then this can also provide a correct

149
00:05:44,880 --> 00:05:47,600
transaction and finally

150
00:05:47,600 --> 00:05:50,639
skipping one instruction can make the

151
00:05:50,639 --> 00:05:52,639
flow go

152
00:05:52,639 --> 00:05:56,240
to the perform transaction step

153
00:05:56,720 --> 00:05:58,160
so

154
00:05:58,160 --> 00:06:01,120
fault attacks are very useful

155
00:06:01,120 --> 00:06:02,639
a real threat

156
00:06:02,639 --> 00:06:05,199
because they cannot be applied to many

157
00:06:05,199 --> 00:06:07,039
different things

158
00:06:07,039 --> 00:06:08,960
it can be used to access protected

159
00:06:08,960 --> 00:06:11,600
features or bypass limitations

160
00:06:11,600 --> 00:06:12,800
for example

161
00:06:12,800 --> 00:06:14,880
we have seen smart cards but it's also

162
00:06:14,880 --> 00:06:16,720
true for automotive or internet of

163
00:06:16,720 --> 00:06:17,840
things

164
00:06:17,840 --> 00:06:19,199
they can

165
00:06:19,199 --> 00:06:20,720
allow attackers to

166
00:06:20,720 --> 00:06:23,919
bypass activation codes secure boot

167
00:06:23,919 --> 00:06:26,080
send boxes or perform privilege

168
00:06:26,080 --> 00:06:28,479
escalation

169
00:06:28,479 --> 00:06:30,240
it can also be used

170
00:06:30,240 --> 00:06:32,639
to disable protections or restrictions

171
00:06:32,639 --> 00:06:35,280
for example drones usually have a

172
00:06:35,280 --> 00:06:38,319
limitation on the zone they can fly due

173
00:06:38,319 --> 00:06:39,840
to no flight zone

174
00:06:39,840 --> 00:06:42,160
and this is a limitation these are

175
00:06:42,160 --> 00:06:44,960
limitations imposed by the the vendors

176
00:06:44,960 --> 00:06:46,960
and by using fault attacks it's possible

177
00:06:46,960 --> 00:06:49,280
for example to make drones fly even on

178
00:06:49,280 --> 00:06:51,120
no-flight zones

179
00:06:51,120 --> 00:06:53,520
also it's possible to bypass pay tv

180
00:06:53,520 --> 00:06:56,240
restriction or avoid security measures

181
00:06:56,240 --> 00:06:59,440
usually when you input too much times a

182
00:06:59,440 --> 00:07:01,440
wrong pin into your smart card the smart

183
00:07:01,440 --> 00:07:04,720
card is blocked usually it's about 10

184
00:07:04,720 --> 00:07:06,240
tries

185
00:07:06,240 --> 00:07:08,639
and faults can be used to prevent this

186
00:07:08,639 --> 00:07:09,840
blocking

187
00:07:09,840 --> 00:07:12,160
allowing the attacker to try more even

188
00:07:12,160 --> 00:07:15,440
more than 10 times

189
00:07:15,440 --> 00:07:18,160
fault attacks are historically

190
00:07:18,160 --> 00:07:20,160
being devised to

191
00:07:20,160 --> 00:07:23,440
break cryptography because fault attacks

192
00:07:23,440 --> 00:07:24,400
can be

193
00:07:24,400 --> 00:07:27,520
employed to retrieve secret keys in

194
00:07:27,520 --> 00:07:29,520
embedded hardware

195
00:07:29,520 --> 00:07:31,039
performing

196
00:07:31,039 --> 00:07:33,440
symmetric asymmetric even post quantum

197
00:07:33,440 --> 00:07:37,039
crypto lightweight etc

198
00:07:37,039 --> 00:07:38,000
so

199
00:07:38,000 --> 00:07:42,160
why do fault attacks work

200
00:07:43,280 --> 00:07:45,919
they works because electronics are

201
00:07:45,919 --> 00:07:48,240
basically made of many many many

202
00:07:48,240 --> 00:07:49,840
transistors

203
00:07:49,840 --> 00:07:52,319
millions of transistors

204
00:07:52,319 --> 00:07:54,240
if you can

205
00:07:54,240 --> 00:07:55,199
cut

206
00:07:55,199 --> 00:07:58,400
a microchip in half and look from the

207
00:07:58,400 --> 00:08:00,319
side we would see

208
00:08:00,319 --> 00:08:03,120
mainly three layers

209
00:08:03,120 --> 00:08:05,840
three genera general layers the the the

210
00:08:05,840 --> 00:08:08,479
first layer is the metal layer

211
00:08:08,479 --> 00:08:10,400
which connects the

212
00:08:10,400 --> 00:08:13,120
the chip to the external world

213
00:08:13,120 --> 00:08:15,120
the second layer is the transistors

214
00:08:15,120 --> 00:08:18,800
layer and the back side of the ship is

215
00:08:18,800 --> 00:08:21,360
is the silicon substrate

216
00:08:21,360 --> 00:08:24,720
which embeds the transistors

217
00:08:24,720 --> 00:08:29,039
so transistors are basically switch

218
00:08:29,039 --> 00:08:32,240
they are activated by current or voltage

219
00:08:32,240 --> 00:08:34,640
and by activating a current

220
00:08:34,640 --> 00:08:36,958
is similar to activating a transistor is

221
00:08:36,958 --> 00:08:39,279
similar to pushing a button

222
00:08:39,279 --> 00:08:41,760
and when the button is pushed

223
00:08:41,760 --> 00:08:43,839
electrons flow from the source to the

224
00:08:43,839 --> 00:08:45,040
drain

225
00:08:45,040 --> 00:08:46,720
and when the

226
00:08:46,720 --> 00:08:49,680
button is not pushed then electrons

227
00:08:49,680 --> 00:08:51,440
cannot flow

228
00:08:51,440 --> 00:08:52,839
so the

229
00:08:52,839 --> 00:08:55,200
idea of fault

230
00:08:55,200 --> 00:08:57,920
is that even if the button is not pushed

231
00:08:57,920 --> 00:09:00,560
even if voltage or current is not

232
00:09:00,560 --> 00:09:04,160
applied to the transistor maybe some

233
00:09:04,160 --> 00:09:06,399
physical tampering with the environment

234
00:09:06,399 --> 00:09:07,600
where the

235
00:09:07,600 --> 00:09:09,600
embedded processor works

236
00:09:09,600 --> 00:09:12,800
allows some of the transistor to be

237
00:09:12,800 --> 00:09:15,120
artificially

238
00:09:15,120 --> 00:09:18,560
activated or even artificially

239
00:09:18,560 --> 00:09:21,560
deactivated

240
00:09:23,360 --> 00:09:24,320
so

241
00:09:24,320 --> 00:09:25,360
how

242
00:09:25,360 --> 00:09:26,160
to

243
00:09:26,160 --> 00:09:28,880
perform such

244
00:09:29,040 --> 00:09:31,360
manipulation of the physical environment

245
00:09:31,360 --> 00:09:34,160
in order to make such transistors

246
00:09:34,160 --> 00:09:37,360
behave differently from expected

247
00:09:37,360 --> 00:09:39,920
there are a few different attack vectors

248
00:09:39,920 --> 00:09:42,959
that have been devised in literature

249
00:09:42,959 --> 00:09:44,399
the first one uh

250
00:09:44,399 --> 00:09:45,600
temperature

251
00:09:45,600 --> 00:09:47,839
uh most of you should know

252
00:09:47,839 --> 00:09:50,399
about the airpod called gate where

253
00:09:50,399 --> 00:09:52,720
if you put an iphone an older version of

254
00:09:52,720 --> 00:09:54,720
iphones into the fridge then it stops

255
00:09:54,720 --> 00:09:57,440
work it stops working this is because

256
00:09:57,440 --> 00:09:59,920
lower temperatures or

257
00:09:59,920 --> 00:10:01,760
much higher temperatures

258
00:10:01,760 --> 00:10:02,800
make

259
00:10:02,800 --> 00:10:05,279
transistors not behave

260
00:10:05,279 --> 00:10:07,760
correctly and so

261
00:10:07,760 --> 00:10:10,720
the the the phone shut down

262
00:10:10,720 --> 00:10:12,160
the

263
00:10:12,160 --> 00:10:14,160
positive thing

264
00:10:14,160 --> 00:10:15,360
about

265
00:10:15,360 --> 00:10:16,720
this kind of

266
00:10:16,720 --> 00:10:19,360
fault vector is that it does not require

267
00:10:19,360 --> 00:10:21,040
preparation

268
00:10:21,040 --> 00:10:22,959
preparation means

269
00:10:22,959 --> 00:10:24,480
decapsulating

270
00:10:24,480 --> 00:10:25,760
the

271
00:10:25,760 --> 00:10:30,079
microcontroller removing epoxy or raisin

272
00:10:30,079 --> 00:10:31,680
in order to

273
00:10:31,680 --> 00:10:32,640
reach

274
00:10:32,640 --> 00:10:34,959
the the the electronics

275
00:10:34,959 --> 00:10:37,440
so there's no need for the capsulation

276
00:10:37,440 --> 00:10:39,440
or something like this for temperature

277
00:10:39,440 --> 00:10:40,720
attacks

278
00:10:40,720 --> 00:10:43,120
but the countermeasure are easy because

279
00:10:43,120 --> 00:10:44,880
it just need a temperature sensor to

280
00:10:44,880 --> 00:10:46,880
detect that the temperature is too low

281
00:10:46,880 --> 00:10:48,720
or too high from the

282
00:10:48,720 --> 00:10:50,480
prescribed

283
00:10:50,480 --> 00:10:52,800
also there are other two

284
00:10:52,800 --> 00:10:54,959
easy

285
00:10:54,959 --> 00:10:57,360
fault vectors that are clock glitches or

286
00:10:57,360 --> 00:10:58,839
voltage glitches

287
00:10:58,839 --> 00:11:02,959
basically an electronic device

288
00:11:02,959 --> 00:11:04,880
which is can

289
00:11:04,880 --> 00:11:07,680
get its clock from an external source

290
00:11:07,680 --> 00:11:10,240
if it is the case then an attacker can

291
00:11:10,240 --> 00:11:13,200
try instead of providing a stable clock

292
00:11:13,200 --> 00:11:14,800
to

293
00:11:14,800 --> 00:11:16,959
insert some peak some glitch into the

294
00:11:16,959 --> 00:11:17,920
clock

295
00:11:17,920 --> 00:11:20,000
in order to make the electronics behave

296
00:11:20,000 --> 00:11:20,959
literally

297
00:11:20,959 --> 00:11:24,959
a little bit differently from expected

298
00:11:24,959 --> 00:11:27,120
once again preparation preparation is

299
00:11:27,120 --> 00:11:28,880
nothing and

300
00:11:28,880 --> 00:11:29,600
the

301
00:11:29,600 --> 00:11:31,519
best country measure is not to rely on

302
00:11:31,519 --> 00:11:33,680
an external clock just use an internal

303
00:11:33,680 --> 00:11:35,200
clock to the uh

304
00:11:35,200 --> 00:11:36,720
device

305
00:11:36,720 --> 00:11:38,959
voltage glitches works a little bit

306
00:11:38,959 --> 00:11:40,720
similarly

307
00:11:40,720 --> 00:11:43,839
usually you have to provide power to the

308
00:11:43,839 --> 00:11:46,560
electronics to to work

309
00:11:46,560 --> 00:11:48,000
and

310
00:11:48,000 --> 00:11:50,320
instead of providing a smooth

311
00:11:50,320 --> 00:11:51,440
uh

312
00:11:51,440 --> 00:11:53,839
power you can provide some

313
00:11:53,839 --> 00:11:56,240
glitch has more power with some peak

314
00:11:56,240 --> 00:11:57,680
with some glitches

315
00:11:57,680 --> 00:12:00,320
and these glitches may

316
00:12:00,320 --> 00:12:02,160
make the transistor internally behave

317
00:12:02,160 --> 00:12:03,839
differently corrupt the internal

318
00:12:03,839 --> 00:12:05,839
transistor functioning

319
00:12:05,839 --> 00:12:07,360
so

320
00:12:07,360 --> 00:12:09,519
for voltage glitches usually you have

321
00:12:09,519 --> 00:12:12,079
nothing to do for preparation to

322
00:12:12,079 --> 00:12:14,399
removing some decoupling capacitor which

323
00:12:14,399 --> 00:12:17,680
are there in order to try to smooth

324
00:12:17,680 --> 00:12:18,399
the

325
00:12:18,399 --> 00:12:21,279
voltage incoming

326
00:12:22,240 --> 00:12:23,360
countermeasure one of the best

327
00:12:23,360 --> 00:12:25,920
confirmations is to use regulators for

328
00:12:25,920 --> 00:12:30,719
example to smooth the incoming power

329
00:12:31,519 --> 00:12:34,000
other more advanced

330
00:12:34,000 --> 00:12:36,639
fault attack vectors which is the one i

331
00:12:36,639 --> 00:12:39,120
was talking at the beginning is lasers

332
00:12:39,120 --> 00:12:41,200
or light

333
00:12:41,200 --> 00:12:42,160
the

334
00:12:42,160 --> 00:12:43,279
the bench

335
00:12:43,279 --> 00:12:45,120
that is shown on the right

336
00:12:45,120 --> 00:12:50,079
is a bench from edsi in 2001

337
00:12:50,079 --> 00:12:51,600
and

338
00:12:51,600 --> 00:12:54,720
it's basically a flash of a

339
00:12:54,720 --> 00:12:55,760
camera

340
00:12:55,760 --> 00:13:00,079
uh targeted at the atas mark card

341
00:13:00,079 --> 00:13:02,959
the idea is that by irradiating the

342
00:13:02,959 --> 00:13:04,639
transistor

343
00:13:04,639 --> 00:13:06,560
with some light with a

344
00:13:06,560 --> 00:13:09,519
powerful enough light enough light

345
00:13:09,519 --> 00:13:11,600
then it's possible to change

346
00:13:11,600 --> 00:13:13,920
its state from switched off to switched

347
00:13:13,920 --> 00:13:16,160
on

348
00:13:16,320 --> 00:13:17,760
so

349
00:13:17,760 --> 00:13:21,440
laser benches have evolved since 2001

350
00:13:21,440 --> 00:13:23,760
and today you can have something similar

351
00:13:23,760 --> 00:13:25,200
to this one

352
00:13:25,200 --> 00:13:27,200
this the bench on the right is from

353
00:13:27,200 --> 00:13:29,040
alphanub

354
00:13:29,040 --> 00:13:31,200
and it's capable to

355
00:13:31,200 --> 00:13:32,000
use

356
00:13:32,000 --> 00:13:33,760
two laser sources

357
00:13:33,760 --> 00:13:37,440
a different special position and

358
00:13:37,440 --> 00:13:39,760
activated at different timing to perform

359
00:13:39,760 --> 00:13:42,320
double fault injection into for example

360
00:13:42,320 --> 00:13:44,959
smart cards

361
00:13:46,320 --> 00:13:50,959
another way to inject faults is by emfa

362
00:13:50,959 --> 00:13:54,079
this is the object of the tool that i

363
00:13:54,079 --> 00:13:56,880
mean that i'm going to present you

364
00:13:56,880 --> 00:13:58,079
in this work

365
00:13:58,079 --> 00:13:58,880
and

366
00:13:58,880 --> 00:14:01,440
the idea is that by

367
00:14:01,440 --> 00:14:04,320
producing a super sufficiently strong

368
00:14:04,320 --> 00:14:07,040
electromagnetic field

369
00:14:07,040 --> 00:14:09,920
near the chip circuit it may induce eddy

370
00:14:09,920 --> 00:14:11,040
current

371
00:14:11,040 --> 00:14:14,480
inside and such at the currents may

372
00:14:14,480 --> 00:14:18,240
activate some of the transistor

373
00:14:20,240 --> 00:14:23,120
another way to inject fault is

374
00:14:23,120 --> 00:14:26,720
body bias the idea is similar to em is

375
00:14:26,720 --> 00:14:29,960
that by injecting a high power

376
00:14:29,960 --> 00:14:31,279
[Music]

377
00:14:31,279 --> 00:14:33,519
voltage to the back side to the silicon

378
00:14:33,519 --> 00:14:36,480
substrate of the chip it's possible to

379
00:14:36,480 --> 00:14:38,560
modify the behavior of internal

380
00:14:38,560 --> 00:14:41,199
transistors

381
00:14:41,199 --> 00:14:42,839
and finally

382
00:14:42,839 --> 00:14:46,959
leity showed in 2017 that it's possible

383
00:14:46,959 --> 00:14:49,839
also to use x-rays to modify the to

384
00:14:49,839 --> 00:14:52,480
corrupt the internal transistor of a

385
00:14:52,480 --> 00:14:55,199
function in chip

386
00:14:56,839 --> 00:14:59,920
so this the tool that i'm going to show

387
00:14:59,920 --> 00:15:02,639
you is based on emfa

388
00:15:02,639 --> 00:15:06,240
and there are a few uh reasons why

389
00:15:06,240 --> 00:15:08,880
we have choose to use emfa first of all

390
00:15:08,880 --> 00:15:10,959
it's need it needs know the packaging

391
00:15:10,959 --> 00:15:13,600
basically you just

392
00:15:13,600 --> 00:15:16,399
get near the target with your probe

393
00:15:16,399 --> 00:15:18,240
sufficiently near

394
00:15:18,240 --> 00:15:21,199
and the attack may work

395
00:15:21,199 --> 00:15:22,240
the

396
00:15:22,240 --> 00:15:25,600
risk is relatively low because for

397
00:15:25,600 --> 00:15:27,199
example for faults

398
00:15:27,199 --> 00:15:29,600
for for lasers sorry

399
00:15:29,600 --> 00:15:31,759
there's a risk of

400
00:15:31,759 --> 00:15:34,399
for the eyes because you have to wear

401
00:15:34,399 --> 00:15:35,519
glasses

402
00:15:35,519 --> 00:15:37,920
protecting glasses and the

403
00:15:37,920 --> 00:15:41,519
laser bench must be secured

404
00:15:41,519 --> 00:15:44,079
with emfi you can be a little bit

405
00:15:44,079 --> 00:15:46,240
electro shocked

406
00:15:46,240 --> 00:15:48,959
but if you insulate sufficiently

407
00:15:48,959 --> 00:15:52,160
the device it's not really a problem

408
00:15:52,160 --> 00:15:55,839
emfi are very portable the tool i'm

409
00:15:55,839 --> 00:15:58,480
going to show you is really portable and

410
00:15:58,480 --> 00:16:01,920
they can be very effective they are used

411
00:16:01,920 --> 00:16:04,399
daily on the security of smart cards in

412
00:16:04,399 --> 00:16:08,199
order to test the security

413
00:16:09,360 --> 00:16:11,279
let's have a little

414
00:16:11,279 --> 00:16:13,519
show of recent low-cost attacks and

415
00:16:13,519 --> 00:16:17,600
tools appeared in literature

416
00:16:17,600 --> 00:16:20,839
starting from cheap fail chip.fail is a

417
00:16:20,839 --> 00:16:23,920
website where hackers

418
00:16:23,920 --> 00:16:24,880
show

419
00:16:24,880 --> 00:16:27,040
how to bring fault injection attacks to

420
00:16:27,040 --> 00:16:28,160
the masses

421
00:16:28,160 --> 00:16:30,959
they mainly use voltage glitching

422
00:16:30,959 --> 00:16:34,000
and some of the outers recently broke

423
00:16:34,000 --> 00:16:36,240
the security of the apple air tag by

424
00:16:36,240 --> 00:16:40,000
usic by using a raspberry pi pico

425
00:16:40,000 --> 00:16:42,880
the chip fail show

426
00:16:42,880 --> 00:16:46,399
how to introduce faults into target like

427
00:16:46,399 --> 00:16:47,360
st

428
00:16:47,360 --> 00:16:50,560
esp sam and nrf

429
00:16:50,560 --> 00:16:53,120
they the the outers of chip that fail

430
00:16:53,120 --> 00:16:55,120
are also the authors of wallet fail

431
00:16:55,120 --> 00:16:57,199
where they show that it's possible to

432
00:16:57,199 --> 00:16:59,920
corrupt the execution of the ledger nano

433
00:16:59,920 --> 00:17:02,800
s uh bitcoin wallet

434
00:17:02,800 --> 00:17:05,199
by using glitches and thus

435
00:17:05,199 --> 00:17:08,880
recover the the secrets inside

436
00:17:08,880 --> 00:17:12,959
um another company working on on similar

437
00:17:12,959 --> 00:17:15,359
results here is rail eyes where they

438
00:17:15,359 --> 00:17:18,240
show that it's possible to mount fault

439
00:17:18,240 --> 00:17:20,959
attacks on autosar it's autosar is the

440
00:17:20,959 --> 00:17:23,439
middleware for automotive

441
00:17:23,439 --> 00:17:26,720
also it's they show a secure boot bypass

442
00:17:26,720 --> 00:17:29,919
on the esp32 by using ice glitch which

443
00:17:29,919 --> 00:17:34,240
is a low-cost glitching tool

444
00:17:34,799 --> 00:17:37,120
then limited results

445
00:17:37,120 --> 00:17:38,480
use the

446
00:17:38,480 --> 00:17:41,039
another tool they

447
00:17:41,039 --> 00:17:43,600
conceived

448
00:17:43,600 --> 00:17:44,480
to

449
00:17:44,480 --> 00:17:47,039
resurrect the debug functionality of nrf

450
00:17:47,039 --> 00:17:51,280
chips and recently they were able to use

451
00:17:51,280 --> 00:17:53,039
this this tool to

452
00:17:53,039 --> 00:17:56,600
break the security of the em er

453
00:17:56,600 --> 00:17:59,440
efm32 jacob family

454
00:17:59,440 --> 00:18:01,919
from silicon labs

455
00:18:01,919 --> 00:18:04,000
finally cracking.com

456
00:18:04,000 --> 00:18:04,799
show

457
00:18:04,799 --> 00:18:07,840
how by using glitches it's possible to

458
00:18:07,840 --> 00:18:10,720
make a similar attack like the one from

459
00:18:10,720 --> 00:18:11,760
ledger

460
00:18:11,760 --> 00:18:14,640
on ledger unless on another

461
00:18:14,640 --> 00:18:16,720
family of

462
00:18:16,720 --> 00:18:18,799
bitcoin wallet is the trezor hardware

463
00:18:18,799 --> 00:18:21,200
wallets

464
00:18:22,080 --> 00:18:25,600
on the tools used to mount such attack

465
00:18:25,600 --> 00:18:27,520
there are

466
00:18:27,520 --> 00:18:30,160
the problem of mounting fault attacks is

467
00:18:30,160 --> 00:18:31,919
that they are usually very expensive

468
00:18:31,919 --> 00:18:35,600
lasers goes from 50 to 100 000

469
00:18:35,600 --> 00:18:37,140
you you need

470
00:18:37,140 --> 00:18:39,280
[Music]

471
00:18:39,280 --> 00:18:41,039
costly oscilloscopes

472
00:18:41,039 --> 00:18:43,840
and so people are trying to see if there

473
00:18:43,840 --> 00:18:44,559
are

474
00:18:44,559 --> 00:18:45,600
cheaper

475
00:18:45,600 --> 00:18:48,480
ways to achieve faults

476
00:18:48,480 --> 00:18:51,440
one of the first to suggest a cheaper

477
00:18:51,440 --> 00:18:52,880
alternative is

478
00:18:52,880 --> 00:18:55,600
a cheap shelter from ua

479
00:18:55,600 --> 00:18:57,520
which cost around four thousand dollars

480
00:18:57,520 --> 00:18:59,600
and enable you to

481
00:18:59,600 --> 00:19:01,280
inject emfa

482
00:19:01,280 --> 00:19:02,960
uh into chips

483
00:19:02,960 --> 00:19:05,919
another suggestion from the

484
00:19:05,919 --> 00:19:08,640
ledger team ledger security security

485
00:19:08,640 --> 00:19:10,559
team is silicon toaster

486
00:19:10,559 --> 00:19:11,919
which is the

487
00:19:11,919 --> 00:19:13,679
the first one

488
00:19:13,679 --> 00:19:14,799
on the left

489
00:19:14,799 --> 00:19:18,640
it's a handmade device that you can

490
00:19:18,640 --> 00:19:19,600
create

491
00:19:19,600 --> 00:19:20,640
at home

492
00:19:20,640 --> 00:19:22,080
but

493
00:19:22,080 --> 00:19:24,240
which is which is basically similar to

494
00:19:24,240 --> 00:19:27,440
the chip shelter but requires uh deep

495
00:19:27,440 --> 00:19:30,720
knowledge on electronics and firmware

496
00:19:30,720 --> 00:19:32,320
development

497
00:19:32,320 --> 00:19:34,559
finally limited results

498
00:19:34,559 --> 00:19:37,760
showed the their injector which is a

499
00:19:37,760 --> 00:19:39,440
glitch em

500
00:19:39,440 --> 00:19:41,840
injector probe

501
00:19:41,840 --> 00:19:44,799
but they do not provide the the

502
00:19:44,799 --> 00:19:48,639
how to create this

503
00:19:48,880 --> 00:19:50,880
so

504
00:19:50,880 --> 00:19:54,080
even more recently two weeks ago uh the

505
00:19:54,080 --> 00:19:58,000
author from new a karin of flynn

506
00:19:58,000 --> 00:20:00,400
showed

507
00:20:01,919 --> 00:20:03,679
his last

508
00:20:03,679 --> 00:20:07,760
tool which is calling gplr

509
00:20:07,760 --> 00:20:09,760
which is very similar to the one i'm

510
00:20:09,760 --> 00:20:12,720
going to show you in this talk and

511
00:20:12,720 --> 00:20:14,400
here's the the

512
00:20:14,400 --> 00:20:16,559
circuit of the flash of a disposable

513
00:20:16,559 --> 00:20:19,360
camera in order to create a tool to

514
00:20:19,360 --> 00:20:22,720
mount for emfa attacks

515
00:20:22,720 --> 00:20:24,400
so

516
00:20:24,400 --> 00:20:26,720
let's get to the

517
00:20:26,720 --> 00:20:29,840
subject of this speech

518
00:20:30,320 --> 00:20:32,640
first of all

519
00:20:32,640 --> 00:20:34,880
the tool uses about

520
00:20:34,880 --> 00:20:37,039
from 330 to

521
00:20:37,039 --> 00:20:39,360
600 voltage so

522
00:20:39,360 --> 00:20:41,840
be aware of this if you want to try this

523
00:20:41,840 --> 00:20:44,240
atom it's easy to be electroshocked

524
00:20:44,240 --> 00:20:45,760
electrocute

525
00:20:45,760 --> 00:20:51,039
so try to insulate it properly

526
00:20:51,039 --> 00:20:55,760
the idea is to try to find the cheapest

527
00:20:55,760 --> 00:20:59,440
way to mount fault electromagnetic fault

528
00:20:59,440 --> 00:21:00,960
attacks

529
00:21:00,960 --> 00:21:03,840
our target is the arduino mini it embeds

530
00:21:03,840 --> 00:21:06,280
on a tmega

531
00:21:06,280 --> 00:21:10,559
328 microprocessor

532
00:21:10,559 --> 00:21:13,460
and it's an easy target

533
00:21:13,460 --> 00:21:14,799
[Music]

534
00:21:14,799 --> 00:21:16,480
and the the

535
00:21:16,480 --> 00:21:18,080
tool

536
00:21:18,080 --> 00:21:20,400
that we have conceived is based on a

537
00:21:20,400 --> 00:21:23,039
disposable camera the circuit of the the

538
00:21:23,039 --> 00:21:25,520
flash circuit of a disposable camera

539
00:21:25,520 --> 00:21:27,919
the disposable camera is the informed ac

540
00:21:27,919 --> 00:21:30,799
hp sync plus

541
00:21:30,799 --> 00:21:33,360
400

542
00:21:35,120 --> 00:21:38,080
so when you open the the camera what you

543
00:21:38,080 --> 00:21:39,760
find inside is this

544
00:21:39,760 --> 00:21:43,039
flash circuit which is capable to

545
00:21:43,039 --> 00:21:46,559
transform the 1.5 volts of the battery

546
00:21:46,559 --> 00:21:47,880
into

547
00:21:47,880 --> 00:21:51,280
330 volts

548
00:21:52,480 --> 00:21:54,720
if you look at this circuit basically

549
00:21:54,720 --> 00:21:57,760
there's the pins of the battery

550
00:21:57,760 --> 00:22:00,799
for the ground and the 1.5 volts a

551
00:22:00,799 --> 00:22:02,480
switch to

552
00:22:02,480 --> 00:22:04,480
let the flash light

553
00:22:04,480 --> 00:22:06,159
and then

554
00:22:06,159 --> 00:22:09,840
pins around the flash which holds 30

555
00:22:09,840 --> 00:22:13,440
around 300 volts

556
00:22:13,440 --> 00:22:15,600
it is possible to find online

557
00:22:15,600 --> 00:22:18,080
some reverse engineering of such circuit

558
00:22:18,080 --> 00:22:20,640
or similar circuits basically they are

559
00:22:20,640 --> 00:22:22,559
almost all

560
00:22:22,559 --> 00:22:23,679
the same

561
00:22:23,679 --> 00:22:25,200
there's uh

562
00:22:25,200 --> 00:22:27,360
on the hike part there's a transformer

563
00:22:27,360 --> 00:22:30,240
which is used to transform the 1.5 to

564
00:22:30,240 --> 00:22:32,159
300 volts

565
00:22:32,159 --> 00:22:35,840
and then there's a big capacitor

566
00:22:36,240 --> 00:22:38,159
of

567
00:22:38,159 --> 00:22:40,320
in the middle of the of the circuit

568
00:22:40,320 --> 00:22:42,480
which holds the charge in order to

569
00:22:42,480 --> 00:22:44,320
discharge to the flash and make the

570
00:22:44,320 --> 00:22:47,360
flash uh work

571
00:22:47,679 --> 00:22:50,400
and finally there's a flash switch

572
00:22:50,400 --> 00:22:53,280
which is used to

573
00:22:53,280 --> 00:22:56,640
to activate the the light

574
00:22:56,640 --> 00:22:58,159
the

575
00:22:58,159 --> 00:22:59,679
this circuit

576
00:22:59,679 --> 00:23:01,039
we have

577
00:23:01,039 --> 00:23:04,960
make a few modifications by soldering or

578
00:23:04,960 --> 00:23:06,720
disoldering something

579
00:23:06,720 --> 00:23:09,840
that are really easy to do i'm not

580
00:23:09,840 --> 00:23:13,039
i've not a degree in electronics

581
00:23:13,039 --> 00:23:16,000
so even me can do this so i think

582
00:23:16,000 --> 00:23:18,640
everybody can do such simple

583
00:23:18,640 --> 00:23:21,280
modifications basically

584
00:23:21,280 --> 00:23:24,080
i have removed the big capacitor in

585
00:23:24,080 --> 00:23:26,559
order to not be

586
00:23:26,559 --> 00:23:28,320
annoyed by

587
00:23:28,320 --> 00:23:31,120
having to discharge it

588
00:23:31,120 --> 00:23:33,600
it is not really necessary to perform

589
00:23:33,600 --> 00:23:35,840
faults

590
00:23:35,840 --> 00:23:37,280
then

591
00:23:37,280 --> 00:23:40,400
shorted the big resistance in order to

592
00:23:40,400 --> 00:23:44,720
get the 300 volt passing through

593
00:23:44,720 --> 00:23:46,880
the coil and then

594
00:23:46,880 --> 00:23:48,720
put a coil

595
00:23:48,720 --> 00:23:50,720
instead of the flashlight

596
00:23:50,720 --> 00:23:53,520
and the coil is basically an inductance

597
00:23:53,520 --> 00:23:55,360
and it is used to create the

598
00:23:55,360 --> 00:23:58,799
electromagnetic magnetic field to

599
00:23:58,799 --> 00:24:00,400
fault the

600
00:24:00,400 --> 00:24:02,159
target

601
00:24:02,159 --> 00:24:04,640
so at the end

602
00:24:04,640 --> 00:24:06,799
this is the the result

603
00:24:06,799 --> 00:24:10,000
there's two pins that are powered with

604
00:24:10,000 --> 00:24:11,279
three volts

605
00:24:11,279 --> 00:24:13,200
a manual switch

606
00:24:13,200 --> 00:24:14,159
on the

607
00:24:14,159 --> 00:24:15,600
upper side

608
00:24:15,600 --> 00:24:18,720
in order to create the current flow and

609
00:24:18,720 --> 00:24:20,159
when the current flows through the

610
00:24:20,159 --> 00:24:22,880
induction to the probe to the inductor

611
00:24:22,880 --> 00:24:23,679
then

612
00:24:23,679 --> 00:24:26,640
an electromagnetic field is created and

613
00:24:26,640 --> 00:24:29,120
if it's sufficiently strong then

614
00:24:29,120 --> 00:24:31,200
some force can be induced into the

615
00:24:31,200 --> 00:24:33,600
transistors

616
00:24:33,600 --> 00:24:35,360
so it's time

617
00:24:35,360 --> 00:24:37,600
for a demonstration i hope that the

618
00:24:37,600 --> 00:24:40,240
camera works

619
00:24:43,440 --> 00:24:47,840
how to switch to the camera

620
00:25:09,039 --> 00:25:10,080
okay

621
00:25:10,080 --> 00:25:13,080
okay

622
00:25:15,600 --> 00:25:17,840
so

623
00:25:18,080 --> 00:25:19,120
does this

624
00:25:19,120 --> 00:25:21,439
works

625
00:25:24,799 --> 00:25:27,679
do you hear me okay so i'm gonna

626
00:25:27,679 --> 00:25:29,360
try to explain

627
00:25:29,360 --> 00:25:33,120
how the target is coded while preparing

628
00:25:33,120 --> 00:25:35,279
the

629
00:25:36,720 --> 00:25:39,960
the demonstration

630
00:25:42,080 --> 00:25:43,039
the

631
00:25:43,039 --> 00:25:44,320
target

632
00:25:44,320 --> 00:25:47,200
has a code inside that

633
00:25:47,200 --> 00:25:48,799
upon

634
00:25:48,799 --> 00:25:50,880
reset flashes

635
00:25:50,880 --> 00:25:52,159
blink

636
00:25:52,159 --> 00:25:53,760
fast

637
00:25:53,760 --> 00:25:56,880
and then blink steadily

638
00:25:56,880 --> 00:25:59,039
for

639
00:25:59,039 --> 00:26:00,799
the rest of the time so

640
00:26:00,799 --> 00:26:02,880
if you see when i reset

641
00:26:02,880 --> 00:26:06,559
the target it blinks a little bit

642
00:26:06,559 --> 00:26:11,240
and then blinks more steadily

643
00:26:12,080 --> 00:26:13,200
okay

644
00:26:13,200 --> 00:26:14,320
the

645
00:26:14,320 --> 00:26:16,240
the tool is this one

646
00:26:16,240 --> 00:26:17,360
maybe

647
00:26:17,360 --> 00:26:18,960
okay so

648
00:26:18,960 --> 00:26:21,919
this one you can see the switch here

649
00:26:21,919 --> 00:26:24,799
and it's connected to two batteries

650
00:26:24,799 --> 00:26:27,120
and when i approach

651
00:26:27,120 --> 00:26:30,400
the tool to the target

652
00:26:30,400 --> 00:26:32,799
you should see something different

653
00:26:32,799 --> 00:26:35,200
happening the the blinking stopped

654
00:26:35,200 --> 00:26:37,840
because something errands have happened

655
00:26:37,840 --> 00:26:41,440
during the the program so i can try to

656
00:26:41,440 --> 00:26:43,279
restart it so

657
00:26:43,279 --> 00:26:43,919
it

658
00:26:43,919 --> 00:26:46,799
flashes again if i try to

659
00:26:46,799 --> 00:26:50,159
fold in another position

660
00:26:50,159 --> 00:26:54,080
i can reset the target so luckily

661
00:26:54,080 --> 00:26:56,320
i had no demo effect

662
00:26:56,320 --> 00:26:58,640
so you can see that it's possible

663
00:26:58,640 --> 00:26:59,520
to

664
00:26:59,520 --> 00:27:02,000
get even from quite a distance i don't

665
00:27:02,000 --> 00:27:04,400
know if we can

666
00:27:04,400 --> 00:27:07,279
even from quite a distance it is

667
00:27:07,279 --> 00:27:08,640
possible to

668
00:27:08,640 --> 00:27:09,679
fault

669
00:27:09,679 --> 00:27:12,559
the target

670
00:27:12,880 --> 00:27:16,880
so okay this was for the demonstration

671
00:27:16,880 --> 00:27:19,880
sorry

672
00:27:23,039 --> 00:27:26,480
getting back to the slides

673
00:27:26,480 --> 00:27:30,080
so this is the conclusion of the torque

674
00:27:30,080 --> 00:27:30,880
the

675
00:27:30,880 --> 00:27:35,120
purpose of this talk is to

676
00:27:35,120 --> 00:27:37,360
yes

677
00:27:37,440 --> 00:27:40,240
the purpose of this talk is to show that

678
00:27:40,240 --> 00:27:43,919
fault attacks are a real threat

679
00:27:44,240 --> 00:27:47,760
specifically specifically for customer

680
00:27:47,760 --> 00:27:49,840
devices which are

681
00:27:49,840 --> 00:27:53,279
barely or not at all protected from

682
00:27:53,279 --> 00:27:55,440
hardware attacks

683
00:27:55,440 --> 00:27:59,200
it can be easily mounted and is easily

684
00:27:59,200 --> 00:28:02,000
exploited in the wild

685
00:28:02,000 --> 00:28:03,919
there's no need for

686
00:28:03,919 --> 00:28:06,159
large sum of money in order to start

687
00:28:06,159 --> 00:28:09,120
parking with faults basically

688
00:28:09,120 --> 00:28:11,520
the camera can be

689
00:28:11,520 --> 00:28:14,840
retrieved from a shop

690
00:28:14,840 --> 00:28:18,480
and even a disposed camera can be used

691
00:28:18,480 --> 00:28:22,640
by uh getting the flash circuit out

692
00:28:22,640 --> 00:28:24,399
nor you need deep knowledge

693
00:28:24,399 --> 00:28:28,159
to uh create this it's easy to find some

694
00:28:28,159 --> 00:28:30,399
the instruction

695
00:28:30,399 --> 00:28:32,640
this the flesh circuit on the internet

696
00:28:32,640 --> 00:28:35,120
and it's easy to disorder the two or

697
00:28:35,120 --> 00:28:37,840
three small parts

698
00:28:37,840 --> 00:28:40,000
also emfa is

699
00:28:40,000 --> 00:28:41,760
easier than other

700
00:28:41,760 --> 00:28:43,440
fault attack vectors because you don't

701
00:28:43,440 --> 00:28:45,200
need to decap the target

702
00:28:45,200 --> 00:28:47,440
it works also from a distance

703
00:28:47,440 --> 00:28:48,960
as a show

704
00:28:48,960 --> 00:28:52,240
and it's very effective also and is also

705
00:28:52,240 --> 00:28:54,880
used against high security targets like

706
00:28:54,880 --> 00:28:58,559
smart cards maybe not exactly this tool

707
00:28:58,559 --> 00:29:01,520
but uh you can try to modify the tool to

708
00:29:01,520 --> 00:29:03,039
make it uh

709
00:29:03,039 --> 00:29:05,520
more powerful

710
00:29:05,520 --> 00:29:07,600
another thing is is that not all fault

711
00:29:07,600 --> 00:29:10,159
attacks concern crypto you don't need to

712
00:29:10,159 --> 00:29:12,880
know cryptography in order to retrieve

713
00:29:12,880 --> 00:29:15,360
the keys etc basically what we are doing

714
00:29:15,360 --> 00:29:17,760
here is just disturbing corrupting the

715
00:29:17,760 --> 00:29:20,480
flow of execution so it may be easy as

716
00:29:20,480 --> 00:29:21,679
this

717
00:29:21,679 --> 00:29:22,720
and

718
00:29:22,720 --> 00:29:26,000
finally recycling is fun so this is one

719
00:29:26,000 --> 00:29:28,159
opportunity to recycle some disposable

720
00:29:28,159 --> 00:29:29,600
camera

721
00:29:29,600 --> 00:29:31,919
if somebody is interested

722
00:29:31,919 --> 00:29:33,600
next steps

723
00:29:33,600 --> 00:29:36,720
would be to try to

724
00:29:36,720 --> 00:29:39,760
make the the the remove the switch and

725
00:29:39,760 --> 00:29:40,640
switch

726
00:29:40,640 --> 00:29:42,480
the the circuit

727
00:29:42,480 --> 00:29:46,799
by another arduino to control its timing

728
00:29:46,799 --> 00:29:49,679
so if you are interesting we can talk

729
00:29:49,679 --> 00:29:51,520
together

730
00:29:51,520 --> 00:29:53,279
thank you very much if you have any

731
00:29:53,279 --> 00:29:55,840
questions

732
00:29:58,220 --> 00:30:03,359
[Applause]

733
00:30:04,960 --> 00:30:06,720
is there any question from the audience

734
00:30:06,720 --> 00:30:09,840
for alberto

735
00:30:10,640 --> 00:30:12,480
how did you know what would have been

736
00:30:12,480 --> 00:30:14,000
the effects

737
00:30:14,000 --> 00:30:15,440
on the board when

738
00:30:15,440 --> 00:30:17,760
you clicked the switch

739
00:30:17,760 --> 00:30:20,240
so you can i cannot hear you

740
00:30:20,240 --> 00:30:23,039
how did you know what would what would

741
00:30:23,039 --> 00:30:24,640
have been the effects

742
00:30:24,640 --> 00:30:26,880
on the board when you clicked the switch

743
00:30:26,880 --> 00:30:28,799
for example when you blocked

744
00:30:28,799 --> 00:30:31,520
the ladder when you reset the

745
00:30:31,520 --> 00:30:33,279
switch

746
00:30:33,279 --> 00:30:35,919
with this kind of tool you don't know

747
00:30:35,919 --> 00:30:37,760
basically you try and

748
00:30:37,760 --> 00:30:39,919
see what happened

749
00:30:39,919 --> 00:30:44,000
the the the algorithm is sufficiently

750
00:30:44,000 --> 00:30:46,640
simple that even

751
00:30:46,640 --> 00:30:49,200
an uncontrolled fault can

752
00:30:49,200 --> 00:30:52,080
make it behave differently from expected

753
00:30:52,080 --> 00:30:55,360
i have tested with a little bit

754
00:30:55,360 --> 00:30:57,039
more advanced

755
00:30:57,039 --> 00:30:59,600
algorithm where a for loop

756
00:30:59,600 --> 00:31:01,919
was incrementing a variable

757
00:31:01,919 --> 00:31:03,760
and

758
00:31:03,760 --> 00:31:06,799
there was an if statement where if the

759
00:31:06,799 --> 00:31:09,679
variable reached a value which not

760
00:31:09,679 --> 00:31:11,840
supposed to be reached inside the loop

761
00:31:11,840 --> 00:31:15,120
then a pass then it passed and a

762
00:31:15,120 --> 00:31:16,399
string was

763
00:31:16,399 --> 00:31:19,840
printed and i was able to

764
00:31:19,840 --> 00:31:20,640
make

765
00:31:20,640 --> 00:31:24,390
the the algorithm step into this

766
00:31:24,390 --> 00:31:25,919
[Music]

767
00:31:25,919 --> 00:31:26,960
this

768
00:31:26,960 --> 00:31:30,000
instruction so it's possible to

769
00:31:30,000 --> 00:31:31,120
perform

770
00:31:31,120 --> 00:31:32,720
something but it's not really well

771
00:31:32,720 --> 00:31:34,399
controlled you know don't control the

772
00:31:34,399 --> 00:31:36,640
timing or the power so it's difficult to

773
00:31:36,640 --> 00:31:38,240
have a

774
00:31:38,240 --> 00:31:41,760
a good control on what can happen

775
00:31:41,760 --> 00:31:44,000
this is one of the reason why

776
00:31:44,000 --> 00:31:46,640
some work can still be done to improve

777
00:31:46,640 --> 00:31:50,320
this tool and make it more reliable

778
00:31:50,320 --> 00:31:51,919
thank you alberto

779
00:31:51,919 --> 00:31:54,640
for the nice talk and the

780
00:31:54,640 --> 00:31:58,360
brave live demo

