1
00:00:01,439 --> 00:00:03,540
I have the wonderful luxury of being

2
00:00:03,540 --> 00:00:06,960
between you and dinner

3
00:00:06,960 --> 00:00:10,200
or drinks or food or whatever else it is

4
00:00:10,200 --> 00:00:11,760
or going home so thank you very much for

5
00:00:11,760 --> 00:00:13,440
staying after I appreciate it I'm gonna

6
00:00:13,440 --> 00:00:15,480
try not to knock this Podium over my

7
00:00:15,480 --> 00:00:17,760
name is Matt and I'm here today to talk

8
00:00:17,760 --> 00:00:20,640
to you I I realize I'm probably one of

9
00:00:20,640 --> 00:00:24,180
the blue or defensive talks uh today at

10
00:00:24,180 --> 00:00:26,100
least I'm going to finish off that way I

11
00:00:26,100 --> 00:00:28,740
love seeing when they ask for call for

12
00:00:28,740 --> 00:00:30,240
papers and they put in there like oh

13
00:00:30,240 --> 00:00:31,859
yeah you can also submit stuff on like

14
00:00:31,859 --> 00:00:33,660
you know digital forensics or defense if

15
00:00:33,660 --> 00:00:35,219
you want and I'm like awesome we're

16
00:00:35,219 --> 00:00:36,840
gonna definitely take advantage of that

17
00:00:36,840 --> 00:00:39,660
uh because I like the ability to sit in

18
00:00:39,660 --> 00:00:41,879
a room by the way is it nice to be back

19
00:00:41,879 --> 00:00:44,520
at an actual conference again

20
00:00:44,520 --> 00:00:47,280
not virtual amazing so good to be back

21
00:00:47,280 --> 00:00:50,399
in person yeah but in any event I like

22
00:00:50,399 --> 00:00:52,739
the idea of watching someone Escape out

23
00:00:52,739 --> 00:00:54,899
of a container followed up by ways to

24
00:00:54,899 --> 00:00:56,820
detect adversary activity nowhere else

25
00:00:56,820 --> 00:00:58,620
can you get all this in one place huge

26
00:00:58,620 --> 00:01:00,000
fan of that so thank you and to my

27
00:01:00,000 --> 00:01:01,800
previous speakers as well wherever you

28
00:01:01,800 --> 00:01:02,940
guys are sitting that was an awesome

29
00:01:02,940 --> 00:01:04,500
presentation thank you everything today

30
00:01:04,500 --> 00:01:05,939
has been great

31
00:01:05,939 --> 00:01:07,439
um that being said today I'm here to

32
00:01:07,439 --> 00:01:09,720
talk about striking down Cobalt strike

33
00:01:09,720 --> 00:01:12,900
now uh I've got a handful of reasons why

34
00:01:12,900 --> 00:01:15,119
I wanted to talk about this the biggest

35
00:01:15,119 --> 00:01:18,060
one being the absolute proliferation of

36
00:01:18,060 --> 00:01:20,520
this tool and just how much you see it

37
00:01:20,520 --> 00:01:22,619
going on in attacks out there hands up

38
00:01:22,619 --> 00:01:25,140
if you've heard of cobalt strike before

39
00:01:25,140 --> 00:01:27,119
I'm hoping it's most of the room okay

40
00:01:27,119 --> 00:01:28,619
maybe I don't know it's a loose

41
00:01:28,619 --> 00:01:30,900
calculation we'll see but Cobalt strike

42
00:01:30,900 --> 00:01:32,820
is we'll talk about what it is in just a

43
00:01:32,820 --> 00:01:34,799
moment here but I went and I did some

44
00:01:34,799 --> 00:01:36,720
really basic searches some really basic

45
00:01:36,720 --> 00:01:38,640
highlights across different types of

46
00:01:38,640 --> 00:01:40,680
research sites threat news reports and

47
00:01:40,680 --> 00:01:42,420
things like that and you don't have to

48
00:01:42,420 --> 00:01:43,920
be familiar with all of these different

49
00:01:43,920 --> 00:01:46,680
sources but let's just all agree on one

50
00:01:46,680 --> 00:01:49,979
thing if I go and Google attacker Cobalt

51
00:01:49,979 --> 00:01:51,899
strike hack Cobalt strike things like

52
00:01:51,899 --> 00:01:55,079
that it is an extremely popular toolkit

53
00:01:55,079 --> 00:01:57,420
an extremely popular platform that is

54
00:01:57,420 --> 00:01:59,700
used by adversaries for all sorts of

55
00:01:59,700 --> 00:02:01,079
things now

56
00:02:01,079 --> 00:02:04,020
I have to insert a little divider in

57
00:02:04,020 --> 00:02:05,939
between the word adversaries when I call

58
00:02:05,939 --> 00:02:07,799
them adversaries because believe it or

59
00:02:07,799 --> 00:02:10,318
not this is actually not a piece of

60
00:02:10,318 --> 00:02:12,599
malware for anyone who's used this or

61
00:02:12,599 --> 00:02:13,980
seen this or encountered this before

62
00:02:13,980 --> 00:02:16,379
Cobalt strike is not intended to be a

63
00:02:16,379 --> 00:02:19,440
piece of malware it's intended to be an

64
00:02:19,440 --> 00:02:22,560
adversary emulation tool a red team tool

65
00:02:22,560 --> 00:02:26,640
or a pen testing tool now I I find it

66
00:02:26,640 --> 00:02:29,700
kind of an interesting juxtaposition of

67
00:02:29,700 --> 00:02:32,819
attackers using an adversary emulation

68
00:02:32,819 --> 00:02:35,160
tool but they're not supposed to be

69
00:02:35,160 --> 00:02:36,420
using it but the tool is meant to

70
00:02:36,420 --> 00:02:37,860
emulate adversaries but they're using

71
00:02:37,860 --> 00:02:39,060
never mind it doesn't matter we won't go

72
00:02:39,060 --> 00:02:40,680
through all that circular logic we'll

73
00:02:40,680 --> 00:02:42,540
just say it's very prolific it's used

74
00:02:42,540 --> 00:02:44,519
all over the place

75
00:02:44,519 --> 00:02:46,680
the other reason why I think Cobalt

76
00:02:46,680 --> 00:02:48,840
strike is very popular amongst

77
00:02:48,840 --> 00:02:51,000
adversaries is because all of these

78
00:02:51,000 --> 00:02:52,800
different steps of the attacker life

79
00:02:52,800 --> 00:02:54,360
cycle by the way if you're not familiar

80
00:02:54,360 --> 00:02:55,800
with all those arrows that's the

81
00:02:55,800 --> 00:02:57,420
attacker life cycle these are the

82
00:02:57,420 --> 00:02:59,099
different stages that an adversary is

83
00:02:59,099 --> 00:03:00,720
going to go through as they are

84
00:03:00,720 --> 00:03:02,400
infiltrating a network and trying to

85
00:03:02,400 --> 00:03:04,140
attack on their objectives has anyone

86
00:03:04,140 --> 00:03:06,239
heard of the Lockheed Martin cyber kill

87
00:03:06,239 --> 00:03:07,560
chain before

88
00:03:07,560 --> 00:03:09,000
the kill chains and other popular

89
00:03:09,000 --> 00:03:10,800
framework to describe at a high level

90
00:03:10,800 --> 00:03:13,080
what an adversary's approach may look

91
00:03:13,080 --> 00:03:15,000
like to an organization I think the

92
00:03:15,000 --> 00:03:16,560
attack life cycle does a better job

93
00:03:16,560 --> 00:03:18,840
because it includes the cyclical nature

94
00:03:18,840 --> 00:03:21,300
of what it's like to get into an

95
00:03:21,300 --> 00:03:24,120
environment wash rinse and repeat things

96
00:03:24,120 --> 00:03:26,459
over and over again you may land on a

97
00:03:26,459 --> 00:03:28,800
system go look for more get on another

98
00:03:28,800 --> 00:03:30,840
system go look for more you're going to

99
00:03:30,840 --> 00:03:32,819
harvest credentials one two three four

100
00:03:32,819 --> 00:03:35,519
times as many times as you need to an

101
00:03:35,519 --> 00:03:38,040
actual attack on an organization is

102
00:03:38,040 --> 00:03:41,040
multiple steps multiple systems it's

103
00:03:41,040 --> 00:03:42,959
iterative in nature and I like the fact

104
00:03:42,959 --> 00:03:44,519
that the adversarial that the adversary

105
00:03:44,519 --> 00:03:46,620
life cycle captures that

106
00:03:46,620 --> 00:03:48,599
but in any event I think the other

107
00:03:48,599 --> 00:03:50,340
reason Cobalt strike captures a lot of

108
00:03:50,340 --> 00:03:52,319
popularity is because all of these

109
00:03:52,319 --> 00:03:54,360
different steps can be achieved using

110
00:03:54,360 --> 00:03:57,120
the same platform the same GUI the same

111
00:03:57,120 --> 00:03:58,980
interface the same command line we'll

112
00:03:58,980 --> 00:04:00,720
talk about some of how those different

113
00:04:00,720 --> 00:04:02,879
steps can be achieved but if I'm an

114
00:04:02,879 --> 00:04:05,220
adversary and by the way pop quiz for

115
00:04:05,220 --> 00:04:07,739
everyone here our adversary is lazy or

116
00:04:07,739 --> 00:04:11,239
really really hard workers

117
00:04:11,939 --> 00:04:13,799
I'm not talking about you pen testers or

118
00:04:13,799 --> 00:04:14,939
red teamers out there I'm talking about

119
00:04:14,939 --> 00:04:17,519
like actual nation-state attackers any

120
00:04:17,519 --> 00:04:18,899
guesses anyone want to yell out an

121
00:04:18,899 --> 00:04:20,880
answer for me

122
00:04:20,880 --> 00:04:23,360
they're very lazy

123
00:04:23,360 --> 00:04:26,160
they're very lazy to all who said hard

124
00:04:26,160 --> 00:04:28,440
workers there are some there's always

125
00:04:28,440 --> 00:04:30,419
these cases everything I describe

126
00:04:30,419 --> 00:04:31,979
there's always going to be a caveat

127
00:04:31,979 --> 00:04:34,560
somewhere else but a lot of adversaries

128
00:04:34,560 --> 00:04:36,240
out there are very lazy and you're going

129
00:04:36,240 --> 00:04:38,580
to see this trend pop up and if you

130
00:04:38,580 --> 00:04:40,620
don't believe me I will happily give you

131
00:04:40,620 --> 00:04:43,080
one of my favorite case studies ever an

132
00:04:43,080 --> 00:04:44,759
address it was an investigation I was

133
00:04:44,759 --> 00:04:46,740
performing I'm a former incident

134
00:04:46,740 --> 00:04:49,380
responder but some of the cases some of

135
00:04:49,380 --> 00:04:51,000
the cases that I've worked you'd see

136
00:04:51,000 --> 00:04:53,400
adversaries get on a system download a

137
00:04:53,400 --> 00:04:55,860
tool and then on that infected system

138
00:04:55,860 --> 00:04:59,479
Google how to use that particular tool

139
00:04:59,479 --> 00:05:02,040
copy pasting you know how everyone here

140
00:05:02,040 --> 00:05:03,960
knows the joke about like copy pasting

141
00:05:03,960 --> 00:05:05,759
from stack Overflow is how you Bank a

142
00:05:05,759 --> 00:05:07,560
startup or how you build a company guess

143
00:05:07,560 --> 00:05:09,780
how you hack a network you copy paste

144
00:05:09,780 --> 00:05:11,280
from GitHub

145
00:05:11,280 --> 00:05:13,259
that's just how it works we're going to

146
00:05:13,259 --> 00:05:14,759
see examples of this a little bit later

147
00:05:14,759 --> 00:05:17,100
on my point being adversaries are very

148
00:05:17,100 --> 00:05:19,919
very lazy and I say that with all love

149
00:05:19,919 --> 00:05:21,780
and care for the people who have kept me

150
00:05:21,780 --> 00:05:23,820
employed for a long period of time but

151
00:05:23,820 --> 00:05:26,220
I'll just simply say it is much easier

152
00:05:26,220 --> 00:05:29,220
if I have everything inside of one place

153
00:05:29,220 --> 00:05:31,440
I'm also going to throw a little bit of

154
00:05:31,440 --> 00:05:33,300
shade anyone here ever used Metasploit

155
00:05:33,300 --> 00:05:34,259
before

156
00:05:34,259 --> 00:05:36,419
how often were you using Metasploit do

157
00:05:36,419 --> 00:05:38,220
you have to Google look up or remember

158
00:05:38,220 --> 00:05:40,919
what it takes to build a payload tell me

159
00:05:40,919 --> 00:05:43,740
I'm wrong msf Venom the command line

160
00:05:43,740 --> 00:05:45,720
structure is something that you probably

161
00:05:45,720 --> 00:05:46,979
have to look up every now and then

162
00:05:46,979 --> 00:05:48,240
unless you're creating them every single

163
00:05:48,240 --> 00:05:50,280
day and even then that's like a

164
00:05:50,280 --> 00:05:52,440
pre-packaged payload builder for you

165
00:05:52,440 --> 00:05:54,479
Cobalt strike just gives you the ability

166
00:05:54,479 --> 00:05:56,220
to create one template and everything

167
00:05:56,220 --> 00:05:58,080
follows that template from there on out

168
00:05:58,080 --> 00:06:01,139
my point being I think adversaries tend

169
00:06:01,139 --> 00:06:02,460
to like these types of tools because

170
00:06:02,460 --> 00:06:04,500
they're wrapped inside of nice little

171
00:06:04,500 --> 00:06:06,360
GUI packages that allow you to just

172
00:06:06,360 --> 00:06:08,340
click Point write simple commands and

173
00:06:08,340 --> 00:06:10,380
stuff like that and go on your way

174
00:06:10,380 --> 00:06:12,840
now the funny thing about this is the

175
00:06:12,840 --> 00:06:14,220
folks who use Cobalt strike will tell

176
00:06:14,220 --> 00:06:16,320
you oh no we use it because it's really

177
00:06:16,320 --> 00:06:18,900
good at evading detections it's really

178
00:06:18,900 --> 00:06:21,180
good at getting through all the

179
00:06:21,180 --> 00:06:22,500
detections that everyone has in place

180
00:06:22,500 --> 00:06:24,120
and I'm here to say well after today

181
00:06:24,120 --> 00:06:25,919
we're going to disprove that particular

182
00:06:25,919 --> 00:06:30,600
Theory so lazy is my resource there

183
00:06:30,600 --> 00:06:32,280
for anyone who maybe has not used this

184
00:06:32,280 --> 00:06:33,479
or has not really heard of this before

185
00:06:33,479 --> 00:06:35,400
I've given you kind of the overall

186
00:06:35,400 --> 00:06:37,860
graphical view of cobalt trike the

187
00:06:37,860 --> 00:06:39,840
text-based version It's a closed Source

188
00:06:39,840 --> 00:06:41,639
penetration testing tool that can be

189
00:06:41,639 --> 00:06:43,740
purchased on a discretionary basis I say

190
00:06:43,740 --> 00:06:45,419
this discretionary basis because

191
00:06:45,419 --> 00:06:48,720
technically if you use Cobalt strike you

192
00:06:48,720 --> 00:06:51,360
have gone through the interview or the

193
00:06:51,360 --> 00:06:53,100
uh I'll call it the information

194
00:06:53,100 --> 00:06:55,380
gathering process of actually purchasing

195
00:06:55,380 --> 00:06:57,300
this particular tool you can't just go

196
00:06:57,300 --> 00:06:59,220
and sign up and buy it you actually have

197
00:06:59,220 --> 00:07:01,620
to email them and request a purchase and

198
00:07:01,620 --> 00:07:03,479
they ask what do you intend to use this

199
00:07:03,479 --> 00:07:05,699
for why are you purchasing this thing it

200
00:07:05,699 --> 00:07:08,460
is not cheap it's 2500 US dollars at

201
00:07:08,460 --> 00:07:10,139
least the last I checked was 2500 US

202
00:07:10,139 --> 00:07:11,180
Dollars

203
00:07:11,180 --> 00:07:14,400
it is for that reason it is somewhat

204
00:07:14,400 --> 00:07:15,840
closed Source you can't just go and

205
00:07:15,840 --> 00:07:17,160
download it you've got to actually have

206
00:07:17,160 --> 00:07:20,039
a license so if there's all these steps

207
00:07:20,039 --> 00:07:22,199
in place why is it this very wildly

208
00:07:22,199 --> 00:07:24,599
popular adversarial tool well primarily

209
00:07:24,599 --> 00:07:26,460
because there's also stolen and cracked

210
00:07:26,460 --> 00:07:28,500
versions of it out there they do not

211
00:07:28,500 --> 00:07:30,240
have legitimate licenses but again

212
00:07:30,240 --> 00:07:32,520
they're are cracked and if you are

213
00:07:32,520 --> 00:07:34,440
someone who makes a living off of

214
00:07:34,440 --> 00:07:36,599
hacking other people's networks do you

215
00:07:36,599 --> 00:07:39,419
really think or sorry illegally hacking

216
00:07:39,419 --> 00:07:40,919
other people's networks do you really

217
00:07:40,919 --> 00:07:42,660
think a broken license key is going to

218
00:07:42,660 --> 00:07:44,940
stop you or be in the way let's be very

219
00:07:44,940 --> 00:07:46,860
honest a lot of us in this room got our

220
00:07:46,860 --> 00:07:49,740
start with broken license keys so well

221
00:07:49,740 --> 00:07:51,120
just I didn't say that out loud we'll

222
00:07:51,120 --> 00:07:52,400
just leave that there

223
00:07:52,400 --> 00:07:54,960
but again we assume that AdvoCare

224
00:07:54,960 --> 00:07:57,000
adversaries cannot purchase it so why on

225
00:07:57,000 --> 00:07:59,280
Earth are they using it so much don't

226
00:07:59,280 --> 00:08:01,080
worry we'll come back to this I added a

227
00:08:01,080 --> 00:08:03,000
little bit a little note here there's

228
00:08:03,000 --> 00:08:04,380
been some research published in the past

229
00:08:04,380 --> 00:08:05,940
couple of days that we'll come back to

230
00:08:05,940 --> 00:08:08,400
but long story short adversaries have

231
00:08:08,400 --> 00:08:10,380
their hands on it they're allowed to use

232
00:08:10,380 --> 00:08:12,720
it so a lot of keywords here from this

233
00:08:12,720 --> 00:08:14,460
particular platform as I look at it it's

234
00:08:14,460 --> 00:08:16,139
an all-in-one platform it's very

235
00:08:16,139 --> 00:08:18,300
customizable and modular I can bring all

236
00:08:18,300 --> 00:08:20,639
sorts of features into it there are some

237
00:08:20,639 --> 00:08:22,139
features that are unique to the platform

238
00:08:22,139 --> 00:08:24,780
itself please by no means do not think I

239
00:08:24,780 --> 00:08:26,460
am throwing any shade on the developers

240
00:08:26,460 --> 00:08:28,199
or the folks behind Cobalt strike or the

241
00:08:28,199 --> 00:08:30,060
folks who use it legitimately is it an

242
00:08:30,060 --> 00:08:32,520
extremely a powerful platform in the

243
00:08:32,520 --> 00:08:34,799
right hands the problem is in the wrong

244
00:08:34,799 --> 00:08:36,659
hands none of these attributes go away

245
00:08:36,659 --> 00:08:38,640
it is still an extremely powerful

246
00:08:38,640 --> 00:08:41,279
platform that gets misused the last two

247
00:08:41,279 --> 00:08:43,140
things are I think some of its key

248
00:08:43,140 --> 00:08:44,520
features or at least the reason why it's

249
00:08:44,520 --> 00:08:46,140
grown in popularity the graphical

250
00:08:46,140 --> 00:08:47,580
interface allows for easy attack

251
00:08:47,580 --> 00:08:49,800
management and believe it or not if you

252
00:08:49,800 --> 00:08:51,000
haven't used this tool before there's

253
00:08:51,000 --> 00:08:53,459
also automated reporting at the end you

254
00:08:53,459 --> 00:08:55,380
can get a plate dump of all the things

255
00:08:55,380 --> 00:08:57,180
that you've done during a session it is

256
00:08:57,180 --> 00:08:59,160
very very long and a lot of stuff to

257
00:08:59,160 --> 00:09:01,140
look through very verbose but again it's

258
00:09:01,140 --> 00:09:02,519
all there for automated report and I

259
00:09:02,519 --> 00:09:03,540
think that makes life a little bit

260
00:09:03,540 --> 00:09:05,399
easier

261
00:09:05,399 --> 00:09:07,440
couple notes about the architecture now

262
00:09:07,440 --> 00:09:09,120
some of the terms for Cobalt strike I'm

263
00:09:09,120 --> 00:09:10,620
going to use fairly interchangeably

264
00:09:10,620 --> 00:09:12,120
throughout this presentation just for

265
00:09:12,120 --> 00:09:13,620
the sake of conversation I'm going to

266
00:09:13,620 --> 00:09:15,000
make it a little bit easier but you're

267
00:09:15,000 --> 00:09:16,320
going to hear me talk a lot about the

268
00:09:16,320 --> 00:09:18,720
concept of a listener or Beacon long

269
00:09:18,720 --> 00:09:21,240
story short we are creating a thing that

270
00:09:21,240 --> 00:09:23,220
executes on a victim system that can

271
00:09:23,220 --> 00:09:25,980
hopefully reach back to a C2 server and

272
00:09:25,980 --> 00:09:28,440
allow us to do additional things on that

273
00:09:28,440 --> 00:09:29,640
system

274
00:09:29,640 --> 00:09:31,980
Cobalt strike does have the ability to

275
00:09:31,980 --> 00:09:33,420
determine C2 connectivity and

276
00:09:33,420 --> 00:09:34,800
capabilities we'll talk about that in

277
00:09:34,800 --> 00:09:36,959
just a moment from a beaconing

278
00:09:36,959 --> 00:09:38,580
perspective from a protocol perspective

279
00:09:38,580 --> 00:09:40,200
some of the most common options you're

280
00:09:40,200 --> 00:09:41,220
going to see out there are going to be

281
00:09:41,220 --> 00:09:44,220
DNS HTTP and https which are commonly

282
00:09:44,220 --> 00:09:47,459
used for C2 and per the help manual it's

283
00:09:47,459 --> 00:09:49,740
SMB and TCP are often used for

284
00:09:49,740 --> 00:09:52,260
peer-to-peer or lateral movement

285
00:09:52,260 --> 00:09:54,080
techniques in that case

286
00:09:54,080 --> 00:09:56,820
across all the research I've done all

287
00:09:56,820 --> 00:09:58,620
the blog posts all everything about

288
00:09:58,620 --> 00:10:01,920
Cobalt strike DNS HTTP and https tend to

289
00:10:01,920 --> 00:10:03,779
be the most commonly used for C2

290
00:10:03,779 --> 00:10:06,140
purposes for a lot of different reasons

291
00:10:06,140 --> 00:10:09,899
primarily being SMB ports are often not

292
00:10:09,899 --> 00:10:11,459
exposed to the internet at least they

293
00:10:11,459 --> 00:10:13,200
shouldn't be but more importantly the

294
00:10:13,200 --> 00:10:14,700
instructions and the way that the

295
00:10:14,700 --> 00:10:16,320
protocols are structured between the two

296
00:10:16,320 --> 00:10:18,660
is what allows them to be better for

297
00:10:18,660 --> 00:10:19,980
lateral movement or peer-to-peer

298
00:10:19,980 --> 00:10:22,440
networking we'll talk about that in just

299
00:10:22,440 --> 00:10:24,060
a moment as we look at some of the

300
00:10:24,060 --> 00:10:25,680
hard-coded parts

301
00:10:25,680 --> 00:10:27,720
there's some other connectivity options

302
00:10:27,720 --> 00:10:29,640
built into the platform as well there's

303
00:10:29,640 --> 00:10:31,740
an external C2 option which allows for

304
00:10:31,740 --> 00:10:32,940
third-party programs at the

305
00:10:32,940 --> 00:10:34,200
communication layer and you can also

306
00:10:34,200 --> 00:10:36,300
configure it to actually if you want be

307
00:10:36,300 --> 00:10:37,560
a payload Handler for things like

308
00:10:37,560 --> 00:10:39,300
Metasploit and whatnot

309
00:10:39,300 --> 00:10:41,580
now I'm going through all of this

310
00:10:41,580 --> 00:10:44,700
because I think and I think the more you

311
00:10:44,700 --> 00:10:48,360
know about a weapon or a tool the more

312
00:10:48,360 --> 00:10:49,980
you understand how to detect it how to

313
00:10:49,980 --> 00:10:51,360
see it how to find it

314
00:10:51,360 --> 00:10:54,060
if I just simply told someone who was

315
00:10:54,060 --> 00:10:55,740
colorblind I want you to find the color

316
00:10:55,740 --> 00:10:57,600
red they would have no idea potentially

317
00:10:57,600 --> 00:10:58,860
what that means assuming they're red

318
00:10:58,860 --> 00:11:01,260
colorblind but if I told someone who had

319
00:11:01,260 --> 00:11:03,360
spent a lot of time understanding what

320
00:11:03,360 --> 00:11:05,220
red looks like it's second nature for

321
00:11:05,220 --> 00:11:06,839
them and if I say red they can

322
00:11:06,839 --> 00:11:08,700
immediately picture everything in their

323
00:11:08,700 --> 00:11:10,980
head that's red so I tend to spend a lot

324
00:11:10,980 --> 00:11:13,320
of time analyzing what makes a tool a

325
00:11:13,320 --> 00:11:15,959
tour what makes it so attractive why is

326
00:11:15,959 --> 00:11:18,420
it utilized as often as it is and the

327
00:11:18,420 --> 00:11:20,519
malleable profile capability are I think

328
00:11:20,519 --> 00:11:22,620
one of the other biggest draws for

329
00:11:22,620 --> 00:11:25,680
Cobalt strike it allows for granular

330
00:11:25,680 --> 00:11:29,579
control over C2 comms we also have

331
00:11:29,579 --> 00:11:31,800
malleable PE options how code is

332
00:11:31,800 --> 00:11:33,959
executed how things are deployed it is

333
00:11:33,959 --> 00:11:35,880
full customization of Beacon

334
00:11:35,880 --> 00:11:38,220
communication full customization of how

335
00:11:38,220 --> 00:11:40,740
to spawn processes how to inject threads

336
00:11:40,740 --> 00:11:42,899
what types of artifacts to leave on disk

337
00:11:42,899 --> 00:11:45,120
how stealthy I want you to be in memory

338
00:11:45,120 --> 00:11:47,519
it's also going to control tiny little

339
00:11:47,519 --> 00:11:50,040
key Network artifacts or tiny little C2

340
00:11:50,040 --> 00:11:51,779
artifacts such as interval and Jitter

341
00:11:51,779 --> 00:11:53,459
things we'll talk about in a little bit

342
00:11:53,459 --> 00:11:54,540
here

343
00:11:54,540 --> 00:11:57,660
the C2 profiles are so powerful they

344
00:11:57,660 --> 00:12:00,420
also allow me to customize a Cobalt

345
00:12:00,420 --> 00:12:02,339
strike Beacon to look like some other

346
00:12:02,339 --> 00:12:04,860
type of protocol I can customize it and

347
00:12:04,860 --> 00:12:07,079
make it look like Gmail or Google Drive

348
00:12:07,079 --> 00:12:09,600
Wikipedia onedriver or I guess other

349
00:12:09,600 --> 00:12:11,339
Microsoft profiles

350
00:12:11,339 --> 00:12:13,500
why on Earth and feel free to shout out

351
00:12:13,500 --> 00:12:15,180
the answer any of you here and I'll

352
00:12:15,180 --> 00:12:16,680
repeat it just in case you're not loud

353
00:12:16,680 --> 00:12:18,660
enough why on Earth would I want my C2

354
00:12:18,660 --> 00:12:21,180
traffic to look like Wikipedia

355
00:12:21,180 --> 00:12:23,820
or look like Google drive or look like

356
00:12:23,820 --> 00:12:25,019
Gmail

357
00:12:25,019 --> 00:12:26,760
I'll answer for you go ahead oh here

358
00:12:26,760 --> 00:12:28,200
someone said it

359
00:12:28,200 --> 00:12:30,959
what's that firewalls what type of

360
00:12:30,959 --> 00:12:32,940
traffic do we expect to see white listed

361
00:12:32,940 --> 00:12:34,500
what type of traffic do we expect to see

362
00:12:34,500 --> 00:12:36,540
allowed through legitimate Services

363
00:12:36,540 --> 00:12:38,279
legitimate tools like that so

364
00:12:38,279 --> 00:12:39,779
adversaries are going to say wow if I

365
00:12:39,779 --> 00:12:42,120
can make my traffic look like something

366
00:12:42,120 --> 00:12:44,579
legitimate and yes domain fronting

367
00:12:44,579 --> 00:12:46,560
capabilities are baked into the tool as

368
00:12:46,560 --> 00:12:48,360
well

369
00:12:48,360 --> 00:12:50,100
here's a quick preview of some of the

370
00:12:50,100 --> 00:12:51,600
malleable profiles that are in there I

371
00:12:51,600 --> 00:12:52,680
just went and grabbed some screenshots

372
00:12:52,680 --> 00:12:54,000
to kind of walk through and talk about

373
00:12:54,000 --> 00:12:57,600
this the kind of default GitHub repo for

374
00:12:57,600 --> 00:12:59,880
that has apt options crimeware options

375
00:12:59,880 --> 00:13:02,399
and normal options here's the normals

376
00:13:02,399 --> 00:13:04,380
you can look like Amazon Gmail Google

377
00:13:04,380 --> 00:13:06,120
Drive things that I've talked about and

378
00:13:06,120 --> 00:13:08,040
here's an example of what a profile is

379
00:13:08,040 --> 00:13:09,300
going to look like or a malleable

380
00:13:09,300 --> 00:13:11,040
profile is going to look like it's going

381
00:13:11,040 --> 00:13:12,480
to allow us to control certificate

382
00:13:12,480 --> 00:13:14,519
details we can set things like sleep

383
00:13:14,519 --> 00:13:16,800
time Jitter user agent details sleep

384
00:13:16,800 --> 00:13:19,200
other sleep options idle options so on

385
00:13:19,200 --> 00:13:21,959
and so forth I can also go as far as to

386
00:13:21,959 --> 00:13:24,779
configure various types of requests

387
00:13:24,779 --> 00:13:27,420
protocol specific requests if I have an

388
00:13:27,420 --> 00:13:29,639
HTTP Beacon or an HTTP listener for

389
00:13:29,639 --> 00:13:30,899
example I might want to change

390
00:13:30,899 --> 00:13:32,940
parameters between my get and my post

391
00:13:32,940 --> 00:13:35,279
requests I'm not sure if anyone is

392
00:13:35,279 --> 00:13:36,899
paying too much attention to this but

393
00:13:36,899 --> 00:13:39,060
notice the URI for a get and a post are

394
00:13:39,060 --> 00:13:41,820
different in this case the URI for a get

395
00:13:41,820 --> 00:13:44,459
goes to viewer NG a post goes to viewers

396
00:13:44,459 --> 00:13:47,220
NG across the profile that one little

397
00:13:47,220 --> 00:13:49,260
character might be really important at

398
00:13:49,260 --> 00:13:51,240
breaking hard-coded detections or I

399
00:13:51,240 --> 00:13:53,040
should say inflexible detections if you

400
00:13:53,040 --> 00:13:55,320
will but this is the beauty of that type

401
00:13:55,320 --> 00:13:57,660
of profile is I'm able to create a

402
00:13:57,660 --> 00:13:59,639
profile determine how everything's going

403
00:13:59,639 --> 00:14:02,040
to look on a victim Network my server

404
00:14:02,040 --> 00:14:03,779
acts accordingly and my client acts

405
00:14:03,779 --> 00:14:05,760
accordingly as well

406
00:14:05,760 --> 00:14:08,760
now I tend to find a little bit of a

407
00:14:08,760 --> 00:14:09,959
difference between the two here because

408
00:14:09,959 --> 00:14:13,560
as customizable as you can make Cobalt

409
00:14:13,560 --> 00:14:15,060
strike as customizable as I can make

410
00:14:15,060 --> 00:14:17,639
this profile there's also a lot of other

411
00:14:17,639 --> 00:14:19,980
things that we can recognize in the tool

412
00:14:19,980 --> 00:14:21,420
that are in the platform that are

413
00:14:21,420 --> 00:14:23,880
actually fairly hard-coded and for that

414
00:14:23,880 --> 00:14:25,260
reason I'm going to focus on the things

415
00:14:25,260 --> 00:14:27,420
that are hard-coded because the goal of

416
00:14:27,420 --> 00:14:30,060
this talk is to again understand the

417
00:14:30,060 --> 00:14:31,680
intricacies of the platform and things

418
00:14:31,680 --> 00:14:34,139
that we can use against it to detect

419
00:14:34,139 --> 00:14:36,360
that type of activity

420
00:14:36,360 --> 00:14:39,000
there's finite options inside of cobalt

421
00:14:39,000 --> 00:14:40,860
strike and when I say finite options

422
00:14:40,860 --> 00:14:42,660
what I'm really talking about is I'm

423
00:14:42,660 --> 00:14:43,860
talking about the Windows operating

424
00:14:43,860 --> 00:14:45,600
system

425
00:14:45,600 --> 00:14:47,940
focused on various types of calls and

426
00:14:47,940 --> 00:14:49,440
things and various exploits

427
00:14:49,440 --> 00:14:51,240
vulnerabilities that are out there I

428
00:14:51,240 --> 00:14:52,800
love seeing the discussion two talks ago

429
00:14:52,800 --> 00:14:55,019
about lsas and protected processes and

430
00:14:55,019 --> 00:14:56,579
things like that but I think about

431
00:14:56,579 --> 00:14:58,920
attacking a system or attacking the

432
00:14:58,920 --> 00:15:01,620
Windows operating system at least as a

433
00:15:01,620 --> 00:15:04,380
very very wide to narrow funnel and what

434
00:15:04,380 --> 00:15:07,440
I mean by that is there are tons of ways

435
00:15:07,440 --> 00:15:09,720
to break into a system

436
00:15:09,720 --> 00:15:12,180
the newer the operating system there's

437
00:15:12,180 --> 00:15:14,399
really only a handful of ways to steal

438
00:15:14,399 --> 00:15:16,500
passwords and when I say handful I'm not

439
00:15:16,500 --> 00:15:18,120
obviously talking about only five but it

440
00:15:18,120 --> 00:15:19,980
gets down to a point where it's like all

441
00:15:19,980 --> 00:15:21,300
right well there's really only a set

442
00:15:21,300 --> 00:15:22,980
number of ways to do this and guess what

443
00:15:22,980 --> 00:15:24,839
because I know my adversaries are lazy

444
00:15:24,839 --> 00:15:26,279
someone said this in an earlier talk

445
00:15:26,279 --> 00:15:27,600
they're going to choose the path of

446
00:15:27,600 --> 00:15:29,040
least what

447
00:15:29,040 --> 00:15:32,040
resistance that's out there so when I

448
00:15:32,040 --> 00:15:36,120
say uh finite I mean I can build as many

449
00:15:36,120 --> 00:15:38,519
different capabilities to dump passwords

450
00:15:38,519 --> 00:15:40,380
as I want but guess what they're all

451
00:15:40,380 --> 00:15:42,060
going after either the same process the

452
00:15:42,060 --> 00:15:43,620
same protective space or the same user

453
00:15:43,620 --> 00:15:45,899
accounts I think this creates space for

454
00:15:45,899 --> 00:15:47,459
detection capabilities

455
00:15:47,459 --> 00:15:49,620
I grabbed this quote from a blog post

456
00:15:49,620 --> 00:15:51,600
about Cobalt strike payloads raw

457
00:15:51,600 --> 00:15:53,279
payloads have a predefined structure and

458
00:15:53,279 --> 00:15:54,899
binary format with particular

459
00:15:54,899 --> 00:15:56,880
placeholders and guess what if you

460
00:15:56,880 --> 00:15:59,579
legitimately purchase Cobalt strike your

461
00:15:59,579 --> 00:16:01,860
customer ID is also embedded in your

462
00:16:01,860 --> 00:16:03,540
configurations for the payload and the

463
00:16:03,540 --> 00:16:05,699
beacon as well I kind of like this

464
00:16:05,699 --> 00:16:07,019
there's some interesting attribution

465
00:16:07,019 --> 00:16:09,000
that I think can be done if you have a

466
00:16:09,000 --> 00:16:10,800
legitimate person using this but of

467
00:16:10,800 --> 00:16:12,300
course you're going to need very very

468
00:16:12,300 --> 00:16:14,040
deep insight into Network traffic which

469
00:16:14,040 --> 00:16:16,620
we'll talk about in just a moment

470
00:16:16,620 --> 00:16:18,300
so if you remember a few minutes ago we

471
00:16:18,300 --> 00:16:20,880
talked about the stay or the malleable

472
00:16:20,880 --> 00:16:23,040
profiles within that there is a stage

473
00:16:23,040 --> 00:16:25,560
option these stage block inside the

474
00:16:25,560 --> 00:16:27,300
malleable profile controls how the

475
00:16:27,300 --> 00:16:29,220
beacon is loaded into memory and the

476
00:16:29,220 --> 00:16:30,959
content of various dlls and things like

477
00:16:30,959 --> 00:16:32,940
that there are multiple options

478
00:16:32,940 --> 00:16:35,220
available but guess what and this is

479
00:16:35,220 --> 00:16:37,019
what I talk about for that funnel I can

480
00:16:37,019 --> 00:16:39,240
sit here and say all day long about how

481
00:16:39,240 --> 00:16:41,459
amazing it is to inject code and

482
00:16:41,459 --> 00:16:43,199
allocate things into memory and do all

483
00:16:43,199 --> 00:16:45,300
sorts of evasive stuff but guess what

484
00:16:45,300 --> 00:16:48,480
there's three configurable options when

485
00:16:48,480 --> 00:16:50,519
it comes to how the loader allocates

486
00:16:50,519 --> 00:16:52,800
memory in here three three options

487
00:16:52,800 --> 00:16:54,720
that's it virtual Outlook keep Outlook

488
00:16:54,720 --> 00:16:56,820
or map view of file you're going to want

489
00:16:56,820 --> 00:16:58,380
to remember these actually for a little

490
00:16:58,380 --> 00:17:00,600
bit later on but if I'm writing AV

491
00:17:00,600 --> 00:17:02,759
software or I'm writing detections that

492
00:17:02,759 --> 00:17:05,339
are monitoring memory operations I Now

493
00:17:05,339 --> 00:17:07,260
understand the three potential functions

494
00:17:07,260 --> 00:17:09,720
that are going to be utilized here this

495
00:17:09,720 --> 00:17:11,640
is actually what a lot of the next gen

496
00:17:11,640 --> 00:17:13,319
detection software is doing these days

497
00:17:13,319 --> 00:17:15,480
it's monitoring those types of functions

498
00:17:15,480 --> 00:17:17,819
those dll calls to see what types of

499
00:17:17,819 --> 00:17:19,679
things are loaded into memory because

500
00:17:19,679 --> 00:17:23,520
let's be clear are these bad functions

501
00:17:23,520 --> 00:17:25,260
someone take a sky at least one person

502
00:17:25,260 --> 00:17:26,520
shaking their head these are built into

503
00:17:26,520 --> 00:17:28,260
Windows these are built into the

504
00:17:28,260 --> 00:17:30,480
operating system there's no malicious

505
00:17:30,480 --> 00:17:33,000
function here there's an abuse of a

506
00:17:33,000 --> 00:17:34,679
legitimate function and that's what a

507
00:17:34,679 --> 00:17:36,000
lot of your endpoint detection software

508
00:17:36,000 --> 00:17:37,380
are looking for

509
00:17:37,380 --> 00:17:39,240
there's a bunch of other options built

510
00:17:39,240 --> 00:17:41,520
into the block here into the stage block

511
00:17:41,520 --> 00:17:43,080
as well that allows for different sorts

512
00:17:43,080 --> 00:17:44,640
of evasion techniques just looking

513
00:17:44,640 --> 00:17:46,140
through some of them there's all sorts

514
00:17:46,140 --> 00:17:48,600
of like randomization options uh the

515
00:17:48,600 --> 00:17:49,980
interesting one that's in there is

516
00:17:49,980 --> 00:17:51,780
there's also sorry not not yet there's

517
00:17:51,780 --> 00:17:53,220
also an interesting cleanup option

518
00:17:53,220 --> 00:17:55,140
inside of there there's a sleep option

519
00:17:55,140 --> 00:17:57,360
depending on the type of protocol that

520
00:17:57,360 --> 00:17:58,440
you're using I find this one to be

521
00:17:58,440 --> 00:17:59,760
pretty interesting if you're using like

522
00:17:59,760 --> 00:18:02,520
an SMB Beacon and you customize it to

523
00:18:02,520 --> 00:18:04,679
clean up after itself and sleep it'll

524
00:18:04,679 --> 00:18:07,679
actually be really really quiet in

525
00:18:07,679 --> 00:18:09,600
memory until it needs to pop up come for

526
00:18:09,600 --> 00:18:12,000
air ask or listen for a request and then

527
00:18:12,000 --> 00:18:14,160
go back down again there's an option to

528
00:18:14,160 --> 00:18:15,539
clear out memory space when you're not

529
00:18:15,539 --> 00:18:17,100
being used and things like that so again

530
00:18:17,100 --> 00:18:19,919
there are multiple ways to be evasive

531
00:18:19,919 --> 00:18:22,559
with this platform as I said it's not a

532
00:18:22,559 --> 00:18:23,820
useless platform it is very very

533
00:18:23,820 --> 00:18:25,080
powerful

534
00:18:25,080 --> 00:18:27,120
but that being said despite all these

535
00:18:27,120 --> 00:18:29,280
amazing highly customizable features I

536
00:18:29,280 --> 00:18:30,600
already told you what I think about a

537
00:18:30,600 --> 00:18:32,340
lot of adversaries who are out there do

538
00:18:32,340 --> 00:18:34,020
we think that adversaries ever actually

539
00:18:34,020 --> 00:18:35,640
make the change

540
00:18:35,640 --> 00:18:37,679
or upgrade their software or take

541
00:18:37,679 --> 00:18:39,600
advantage a lot of these capabilities

542
00:18:39,600 --> 00:18:41,220
I'm just going to say it right now and

543
00:18:41,220 --> 00:18:43,140
is this being recorded this is right

544
00:18:43,140 --> 00:18:44,700
cool so I'm going to look in the camera

545
00:18:44,700 --> 00:18:46,260
and say a lot of you don't even know the

546
00:18:46,260 --> 00:18:48,059
functions of cobalt striking you use it

547
00:18:48,059 --> 00:18:50,160
daily that's for the adversaries out

548
00:18:50,160 --> 00:18:51,720
there not the legitimate red teamers and

549
00:18:51,720 --> 00:18:52,980
the legitimate pen testers out there

550
00:18:52,980 --> 00:18:54,660
they don't I'm going to say after

551
00:18:54,660 --> 00:18:56,820
analyzing tons and tons of pieces of

552
00:18:56,820 --> 00:18:58,380
cobalt strike malware over the years

553
00:18:58,380 --> 00:19:00,660
it's just you don't see that much

554
00:19:00,660 --> 00:19:02,340
difference being dropped into it a lot

555
00:19:02,340 --> 00:19:04,980
of folks a lot of malicious adversaries

556
00:19:04,980 --> 00:19:07,140
are downloading cracked stolen versions

557
00:19:07,140 --> 00:19:08,820
and they're rolling with the defaults

558
00:19:08,820 --> 00:19:10,919
I'm going to show you I can prove that

559
00:19:10,919 --> 00:19:13,020
in network traffic a little bit later on

560
00:19:13,020 --> 00:19:15,539
as well but that's how crazy these

561
00:19:15,539 --> 00:19:17,580
profiles get I can download something

562
00:19:17,580 --> 00:19:19,799
with a default profile and it's going to

563
00:19:19,799 --> 00:19:21,660
change how my in-memory operations

564
00:19:21,660 --> 00:19:23,400
happen it's going to change my network

565
00:19:23,400 --> 00:19:25,380
comms it's going to change all sorts of

566
00:19:25,380 --> 00:19:27,240
activity just based on that malleable

567
00:19:27,240 --> 00:19:28,380
profile

568
00:19:28,380 --> 00:19:31,080
again if we're not seeing a change in

569
00:19:31,080 --> 00:19:32,640
the profile we're going to continue to

570
00:19:32,640 --> 00:19:34,740
see consistent patterns throughout we're

571
00:19:34,740 --> 00:19:36,360
going to talk about those in in a little

572
00:19:36,360 --> 00:19:37,679
bit here

573
00:19:37,679 --> 00:19:38,880
now

574
00:19:38,880 --> 00:19:40,080
looking up to this point has been kind

575
00:19:40,080 --> 00:19:42,059
of like basic C2 Communications and

576
00:19:42,059 --> 00:19:44,100
basic listening activity in C2 comms and

577
00:19:44,100 --> 00:19:46,500
whatnot if I was to take advantage of

578
00:19:46,500 --> 00:19:48,240
some of the larger features within

579
00:19:48,240 --> 00:19:49,679
Cobalt strike or I always take advantage

580
00:19:49,679 --> 00:19:51,360
of some of the post-exploitation options

581
00:19:51,360 --> 00:19:54,059
so having presence on a system is one

582
00:19:54,059 --> 00:19:56,700
thing if I want to then dump passwords

583
00:19:56,700 --> 00:19:58,559
or move laterally or elevate my

584
00:19:58,559 --> 00:20:00,600
privileges or do something else well

585
00:20:00,600 --> 00:20:01,860
there's actually that's going to be

586
00:20:01,860 --> 00:20:03,660
brought down or utilized or implemented

587
00:20:03,660 --> 00:20:05,280
as a Windows dll

588
00:20:05,280 --> 00:20:08,520
to execute or to achieve this at a very

589
00:20:08,520 --> 00:20:10,020
high level Cobalt strike is going to

590
00:20:10,020 --> 00:20:11,880
spawn a temporary process it's going to

591
00:20:11,880 --> 00:20:14,100
inject whatever feature is requested

592
00:20:14,100 --> 00:20:15,900
into that particular process

593
00:20:15,900 --> 00:20:18,419
four five and above allows for explicit

594
00:20:18,419 --> 00:20:20,460
injection if specified and there's a few

595
00:20:20,460 --> 00:20:22,440
options as you can see to the right that

596
00:20:22,440 --> 00:20:24,299
allow you to further hide this type of

597
00:20:24,299 --> 00:20:27,080
activity as well

598
00:20:27,660 --> 00:20:29,280
if anyone's been tracking through any

599
00:20:29,280 --> 00:20:31,320
sort of cobalt strike activity there is

600
00:20:31,320 --> 00:20:33,600
actually a default process that gets

601
00:20:33,600 --> 00:20:35,340
utilized for this does anyone know what

602
00:20:35,340 --> 00:20:36,960
that default process is

603
00:20:36,960 --> 00:20:39,539
by any chance there's a blog post from

604
00:20:39,539 --> 00:20:41,580
the founder of cobosstrike who calls out

605
00:20:41,580 --> 00:20:43,380
this particular process because of the

606
00:20:43,380 --> 00:20:45,000
number of questions he got from users

607
00:20:45,000 --> 00:20:48,299
who said why do you use this particular

608
00:20:48,299 --> 00:20:51,120
process and there's a whole explanation

609
00:20:51,120 --> 00:20:54,059
that goes through 32-bit versus 64-bit

610
00:20:54,059 --> 00:20:56,160
in memory operations executing code

611
00:20:56,160 --> 00:20:59,280
trying to run x86 inside of 64 so on and

612
00:20:59,280 --> 00:21:01,320
so forth but I like to just summarize it

613
00:21:01,320 --> 00:21:02,940
and say that's great that's cool just

614
00:21:02,940 --> 00:21:04,380
tell me the process because I'm here to

615
00:21:04,380 --> 00:21:05,520
write detections and I'm here to look

616
00:21:05,520 --> 00:21:07,620
for malicious activity and that process

617
00:21:07,620 --> 00:21:12,059
is run dll 32. run deal32.exe is the

618
00:21:12,059 --> 00:21:14,100
default kind of I'm going to inject

619
00:21:14,100 --> 00:21:16,020
something malicious in Cobalt strike and

620
00:21:16,020 --> 00:21:17,100
we're going to use that to our advantage

621
00:21:17,100 --> 00:21:19,080
a little bit later just in case anyone

622
00:21:19,080 --> 00:21:20,760
was curious I went through and created a

623
00:21:20,760 --> 00:21:22,260
graphical version of what that looks

624
00:21:22,260 --> 00:21:24,000
like but there's an important addition

625
00:21:24,000 --> 00:21:25,860
to this phase or an important addition

626
00:21:25,860 --> 00:21:27,660
to this cycle as well

627
00:21:27,660 --> 00:21:29,159
it's going to spawn that temporary

628
00:21:29,159 --> 00:21:31,500
process run dll 32 is going to be part

629
00:21:31,500 --> 00:21:33,780
of the injection cycle as well then the

630
00:21:33,780 --> 00:21:35,940
result of that injection the result of

631
00:21:35,940 --> 00:21:37,380
whatever command that was is going to be

632
00:21:37,380 --> 00:21:39,659
passed back to my listener via named

633
00:21:39,659 --> 00:21:41,100
pipes

634
00:21:41,100 --> 00:21:43,020
now anyone here ever done any research

635
00:21:43,020 --> 00:21:44,460
or played around with name pipes does

636
00:21:44,460 --> 00:21:46,080
anyone know is there a default name for

637
00:21:46,080 --> 00:21:47,760
name pipes or can I name it whatever I

638
00:21:47,760 --> 00:21:49,080
want

639
00:21:49,080 --> 00:21:51,120
I could name it whatever I want if only

640
00:21:51,120 --> 00:21:52,799
Cobalt strike would let us to do that

641
00:21:52,799 --> 00:21:55,200
instead we have a list of Fairly

642
00:21:55,200 --> 00:21:57,240
predictable name pipe names that we see

643
00:21:57,240 --> 00:21:59,520
in the tool and in the platform pulled

644
00:21:59,520 --> 00:22:00,900
this out of various blog posts and

645
00:22:00,900 --> 00:22:02,340
across research and things like that

646
00:22:02,340 --> 00:22:05,340
there are a set of default name type

647
00:22:05,340 --> 00:22:07,860
names that we see across again a

648
00:22:07,860 --> 00:22:09,960
multitude of Investigations one of the

649
00:22:09,960 --> 00:22:12,360
most common ones is Ms agent underscore

650
00:22:12,360 --> 00:22:13,860
and then there's certain you know paid

651
00:22:13,860 --> 00:22:15,720
values and stuff the asterisks are meant

652
00:22:15,720 --> 00:22:17,100
to be placeholders in this case they're

653
00:22:17,100 --> 00:22:18,360
not actual literals they're just

654
00:22:18,360 --> 00:22:20,880
placeholders but there are fairly

655
00:22:20,880 --> 00:22:23,100
standard names that we see of course

656
00:22:23,100 --> 00:22:24,659
there are ways to go through and change

657
00:22:24,659 --> 00:22:26,400
some of this if we want to but again

658
00:22:26,400 --> 00:22:27,840
I've already told you a lot of

659
00:22:27,840 --> 00:22:29,520
adversaries don't do that they stick

660
00:22:29,520 --> 00:22:30,900
with the defaults they stick with what's

661
00:22:30,900 --> 00:22:32,640
already been presented in the tool for

662
00:22:32,640 --> 00:22:34,440
them we're going to use this to our

663
00:22:34,440 --> 00:22:36,240
advantage in just a moment remember

664
00:22:36,240 --> 00:22:37,860
right now we're walking through

665
00:22:37,860 --> 00:22:41,220
hard-coded values in the tool

666
00:22:41,220 --> 00:22:43,740
there's also placeholders in the beacon

667
00:22:43,740 --> 00:22:45,360
configuration or when a beacon gets

668
00:22:45,360 --> 00:22:46,740
created that determines the different

669
00:22:46,740 --> 00:22:48,480
types of customizations that we talked

670
00:22:48,480 --> 00:22:50,340
about if I'm going to use things like oh

671
00:22:50,340 --> 00:22:54,299
DNS or HTTP There Are Places inside of

672
00:22:54,299 --> 00:22:57,659
the options or inside of the code that

673
00:22:57,659 --> 00:22:59,640
determines what type of comms I'm going

674
00:22:59,640 --> 00:23:01,980
to be using there's Roar 13 hashes which

675
00:23:01,980 --> 00:23:03,720
are calculated using the API functions

676
00:23:03,720 --> 00:23:05,400
and dll names

677
00:23:05,400 --> 00:23:07,080
and I can use this to my advantage

678
00:23:07,080 --> 00:23:09,179
because I can look at the most common

679
00:23:09,179 --> 00:23:10,799
types of protocols that are used out

680
00:23:10,799 --> 00:23:13,380
there and across again tons of research

681
00:23:13,380 --> 00:23:15,840
tons of first-hand experience HTTP and

682
00:23:15,840 --> 00:23:18,000
https C2 traffic is some of the most

683
00:23:18,000 --> 00:23:20,640
common use of cobalt strike DNS is also

684
00:23:20,640 --> 00:23:22,679
in there it's less common but the nice

685
00:23:22,679 --> 00:23:25,320
thing about that is I'm able to predict

686
00:23:25,320 --> 00:23:28,919
and determine just how Cobalt strike

687
00:23:28,919 --> 00:23:31,380
utilize or configures itself and I can

688
00:23:31,380 --> 00:23:33,720
use those hashes against it so up here

689
00:23:33,720 --> 00:23:35,760
is a list of the different hashes based

690
00:23:35,760 --> 00:23:37,860
on the type of payload as I mentioned

691
00:23:37,860 --> 00:23:39,419
it's a really quick function a really

692
00:23:39,419 --> 00:23:42,480
quick algorithm of the dll and the API

693
00:23:42,480 --> 00:23:45,480
name behind it so if my beacon is going

694
00:23:45,480 --> 00:23:47,640
to be using DNS for example it's going

695
00:23:47,640 --> 00:23:50,340
to be calling dnsapi.dll and the DNS

696
00:23:50,340 --> 00:23:52,260
query underscore a function in this case

697
00:23:52,260 --> 00:23:54,900
SMB is going to be create named pipe a

698
00:23:54,900 --> 00:23:57,780
HTTP is going to use win inet and https

699
00:23:57,780 --> 00:24:00,120
is going to be using win inet as well

700
00:24:00,120 --> 00:24:01,679
with the only difference being the

701
00:24:01,679 --> 00:24:04,020
internet set option function as opposed

702
00:24:04,020 --> 00:24:05,880
to the internet open

703
00:24:05,880 --> 00:24:08,039
again we're talking about different

704
00:24:08,039 --> 00:24:10,320
protocols in a sense but when I said to

705
00:24:10,320 --> 00:24:12,000
you all earlier that this highly

706
00:24:12,000 --> 00:24:14,940
customizable tool does have some finite

707
00:24:14,940 --> 00:24:17,760
options based into it here we go

708
00:24:17,760 --> 00:24:20,460
finite options

709
00:24:20,460 --> 00:24:21,960
here's an example of how that particular

710
00:24:21,960 --> 00:24:24,539
hash gets generated again kind of uh

711
00:24:24,539 --> 00:24:27,360
just zoomed in on the particular example

712
00:24:27,360 --> 00:24:29,100
that's up there

713
00:24:29,100 --> 00:24:31,860
we've also got trends inside of the

714
00:24:31,860 --> 00:24:33,960
traffic as well protocol traffic also

715
00:24:33,960 --> 00:24:35,940
tends to follow Trends so if I've got

716
00:24:35,940 --> 00:24:38,940
HTTP or https the get is going to be

717
00:24:38,940 --> 00:24:40,860
what sends metadata and checks for

718
00:24:40,860 --> 00:24:44,220
commands a post to the C2 is going to be

719
00:24:44,220 --> 00:24:46,620
the output of results so for example if

720
00:24:46,620 --> 00:24:50,220
I tell it to dump passwords the dump the

721
00:24:50,220 --> 00:24:52,380
the action dump passwords is going to be

722
00:24:52,380 --> 00:24:54,240
retrieved via a get and the results of

723
00:24:54,240 --> 00:24:55,860
that are going to be sent in a post

724
00:24:55,860 --> 00:24:58,200
SMB listener activity another example

725
00:24:58,200 --> 00:25:00,900
SMB is not going to be so much C2 kind

726
00:25:00,900 --> 00:25:02,340
of request and response it's going to be

727
00:25:02,340 --> 00:25:04,320
more of a listener SMB are going to be

728
00:25:04,320 --> 00:25:06,780
set up as listeners waiting for the

729
00:25:06,780 --> 00:25:09,419
parent to send or send a request back

730
00:25:09,419 --> 00:25:12,059
these are done via SMB write and read

731
00:25:12,059 --> 00:25:14,159
commands and again this is done

732
00:25:14,159 --> 00:25:16,380
listening on a named pipe remember what

733
00:25:16,380 --> 00:25:17,760
I said about name pipes a few moments

734
00:25:17,760 --> 00:25:20,400
ago we have a default list or a fairly

735
00:25:20,400 --> 00:25:22,620
standard common list that gets used so

736
00:25:22,620 --> 00:25:24,779
now I'm understanding more about how the

737
00:25:24,779 --> 00:25:26,640
activity can take place how the network

738
00:25:26,640 --> 00:25:28,799
Community communicate sorry connectivity

739
00:25:28,799 --> 00:25:31,020
can take place and I'm going to use my

740
00:25:31,020 --> 00:25:32,580
knowledge of how the agent or how the

741
00:25:32,580 --> 00:25:35,100
beacon sets itself up to say great so if

742
00:25:35,100 --> 00:25:38,279
I have a list of pipe names and I

743
00:25:38,279 --> 00:25:40,080
understand how the agent can communicate

744
00:25:40,080 --> 00:25:41,700
I now have a stronger chance of

745
00:25:41,700 --> 00:25:44,100
potentially identifying uh SMB

746
00:25:44,100 --> 00:25:45,779
connectivity

747
00:25:45,779 --> 00:25:47,580
I brought the adversarial life cycle

748
00:25:47,580 --> 00:25:49,919
back into this because I also want to

749
00:25:49,919 --> 00:25:51,659
take a look at the way that the tool or

750
00:25:51,659 --> 00:25:53,400
the way that the platform executes on

751
00:25:53,400 --> 00:25:55,799
some of these of various stages here

752
00:25:55,799 --> 00:25:57,299
first one we'll look at is privilege

753
00:25:57,299 --> 00:25:59,340
escalation there are a handful of

754
00:25:59,340 --> 00:26:01,260
options inside of privilege escalation I

755
00:26:01,260 --> 00:26:02,700
didn't bring them all in here I just

756
00:26:02,700 --> 00:26:04,200
focused on some of the key ones that we

757
00:26:04,200 --> 00:26:05,700
see sometimes it's really

758
00:26:05,700 --> 00:26:08,039
straightforward you can just tell Cobalt

759
00:26:08,039 --> 00:26:10,559
strike I want to elevate and it just

760
00:26:10,559 --> 00:26:12,299
elevates you got to provide an exploit

761
00:26:12,299 --> 00:26:14,100
name again I go back to the days of

762
00:26:14,100 --> 00:26:15,299
Metasploit where you're kind of like

763
00:26:15,299 --> 00:26:16,620
trying to look through the database and

764
00:26:16,620 --> 00:26:17,940
remember exactly what the name of that

765
00:26:17,940 --> 00:26:19,320
exploit was has anyone been through that

766
00:26:19,320 --> 00:26:20,700
process before where you're trying to

767
00:26:20,700 --> 00:26:22,020
search through that no maybe it's just

768
00:26:22,020 --> 00:26:23,580
me I can never remember the name of

769
00:26:23,580 --> 00:26:24,960
every single exploit that I ever want to

770
00:26:24,960 --> 00:26:26,580
use but I'll just mention that it makes

771
00:26:26,580 --> 00:26:28,020
it fairly trivial and fairly

772
00:26:28,020 --> 00:26:30,059
straightforward here for you get system

773
00:26:30,059 --> 00:26:31,980
get privs and I threw an asterisk next

774
00:26:31,980 --> 00:26:34,080
to pass the hash run as and run as admin

775
00:26:34,080 --> 00:26:35,700
because we'll also see those utilized in

776
00:26:35,700 --> 00:26:38,039
lateral movement but they can also serve

777
00:26:38,039 --> 00:26:39,600
as a form of privilege escalation as

778
00:26:39,600 --> 00:26:40,500
well

779
00:26:40,500 --> 00:26:42,539
now lateral movements where I tend to

780
00:26:42,539 --> 00:26:44,039
spend a lot of time on building

781
00:26:44,039 --> 00:26:46,320
detections can anyone and I know I'm

782
00:26:46,320 --> 00:26:48,179
making you be involved and interactive

783
00:26:48,179 --> 00:26:50,159
in the last Talk of the day but can

784
00:26:50,159 --> 00:26:52,140
anyone think of why lateral movement

785
00:26:52,140 --> 00:26:54,000
creates unique opportunities that other

786
00:26:54,000 --> 00:26:56,940
stages simply do not

787
00:26:56,940 --> 00:26:59,400
I'll give you a hint lateral movement is

788
00:26:59,400 --> 00:27:03,500
one or n plus one systems

789
00:27:04,080 --> 00:27:06,659
lateral movement needs a to and a from

790
00:27:06,659 --> 00:27:09,480
lateral movement is two minimum two I've

791
00:27:09,480 --> 00:27:11,700
got to be able to go from somewhere to

792
00:27:11,700 --> 00:27:13,980
somewhere so if I have a bunch of

793
00:27:13,980 --> 00:27:15,720
artifacts created on the system from

794
00:27:15,720 --> 00:27:17,279
something like this

795
00:27:17,279 --> 00:27:19,380
how many systems do I now have artifacts

796
00:27:19,380 --> 00:27:21,480
created on because of activity like that

797
00:27:21,480 --> 00:27:24,000
at least two anytime there's an activity

798
00:27:24,000 --> 00:27:25,980
by an adversary that involves multiple

799
00:27:25,980 --> 00:27:28,260
systems I'm rubbing my hands and saying

800
00:27:28,260 --> 00:27:29,640
this is fantastic because now I've got

801
00:27:29,640 --> 00:27:31,919
multiple groups of artifacts all in one

802
00:27:31,919 --> 00:27:33,419
place

803
00:27:33,419 --> 00:27:36,059
again a few a few key commands that

804
00:27:36,059 --> 00:27:37,620
we'll see out of here Port scanning run

805
00:27:37,620 --> 00:27:39,900
as pass the hash jump remote exec and

806
00:27:39,900 --> 00:27:41,820
SSH or some sample Cobalt strike

807
00:27:41,820 --> 00:27:43,919
commands that can be used remember from

808
00:27:43,919 --> 00:27:45,600
an art infrastructure perspective we've

809
00:27:45,600 --> 00:27:47,279
already established persistence this is

810
00:27:47,279 --> 00:27:49,140
an adversary issuing commands through a

811
00:27:49,140 --> 00:27:50,940
listener to a Target system telling it

812
00:27:50,940 --> 00:27:53,520
it wants to do a certain group of things

813
00:27:53,520 --> 00:27:55,320
a few that I'm going to focus on and

814
00:27:55,320 --> 00:27:57,059
provide some screenshots for the first

815
00:27:57,059 --> 00:27:59,460
one is run as again that's very similar

816
00:27:59,460 --> 00:28:01,440
to kind of right clicking and running as

817
00:28:01,440 --> 00:28:02,940
a different account or running as an

818
00:28:02,940 --> 00:28:04,980
administrator the goal here is to once

819
00:28:04,980 --> 00:28:06,779
again try to escalate privileges or act

820
00:28:06,779 --> 00:28:08,580
as a different user to achieve a

821
00:28:08,580 --> 00:28:10,860
different functionality we can pass the

822
00:28:10,860 --> 00:28:14,400
hash built in to the tool jumping is

823
00:28:14,400 --> 00:28:16,080
where it tends to get a little more

824
00:28:16,080 --> 00:28:17,580
intricate or a little more detailed

825
00:28:17,580 --> 00:28:19,799
jumping is one of my favorite commands

826
00:28:19,799 --> 00:28:21,659
to investigate because there's just so

827
00:28:21,659 --> 00:28:23,039
many options that get dropped out of

828
00:28:23,039 --> 00:28:26,340
here I can jump using PS exec quick note

829
00:28:26,340 --> 00:28:29,039
to my knowledge this is not Cobalt

830
00:28:29,039 --> 00:28:30,960
strike downloading the sys internals PS

831
00:28:30,960 --> 00:28:33,059
exec binary and running it for you it's

832
00:28:33,059 --> 00:28:35,159
actually a script or a customized

833
00:28:35,159 --> 00:28:36,480
version there's also PS exec via

834
00:28:36,480 --> 00:28:38,220
Powershell in there then we can also

835
00:28:38,220 --> 00:28:39,600
utilize winrm but it's really

836
00:28:39,600 --> 00:28:40,919
straightforward you can say I want to

837
00:28:40,919 --> 00:28:42,960
jump from one system to another here's

838
00:28:42,960 --> 00:28:45,120
how I'm going to do that thing let's go

839
00:28:45,120 --> 00:28:46,740
let's move on our way

840
00:28:46,740 --> 00:28:49,020
and then remote execution maybe I don't

841
00:28:49,020 --> 00:28:50,340
want an interactive shell on another

842
00:28:50,340 --> 00:28:51,900
system maybe I actually just want to

843
00:28:51,900 --> 00:28:54,179
execute a particular command again it's

844
00:28:54,179 --> 00:28:55,740
really straightforward it's easy to run

845
00:28:55,740 --> 00:28:58,799
oh yikes I'm not sure what that was

846
00:28:58,799 --> 00:29:00,240
a loud noise hope everyone's awake that

847
00:29:00,240 --> 00:29:01,799
looks like a can of something down there

848
00:29:01,799 --> 00:29:03,600
all right in any event

849
00:29:03,600 --> 00:29:05,640
uh remote exec is again another option

850
00:29:05,640 --> 00:29:07,500
that says Hey I want to interact between

851
00:29:07,500 --> 00:29:08,760
two different systems and I'm going to

852
00:29:08,760 --> 00:29:10,380
look for the artifacts on that other

853
00:29:10,380 --> 00:29:11,580
system

854
00:29:11,580 --> 00:29:13,919
I left out SSH because again SSH I view

855
00:29:13,919 --> 00:29:15,299
is kind of like a protocol built into

856
00:29:15,299 --> 00:29:16,799
the tool not something necessarily

857
00:29:16,799 --> 00:29:18,840
specific to the tool

858
00:29:18,840 --> 00:29:21,480
so of all of these types of things all

859
00:29:21,480 --> 00:29:22,980
of these different options capabilities

860
00:29:22,980 --> 00:29:24,419
functionalities built in what are some

861
00:29:24,419 --> 00:29:25,860
of the most commonly observed things

862
00:29:25,860 --> 00:29:27,600
that we see Cobalt strike used for and

863
00:29:27,600 --> 00:29:29,820
again what I'm doing is I'm playing on

864
00:29:29,820 --> 00:29:31,500
the fact that you have this highly

865
00:29:31,500 --> 00:29:34,020
customizable highly malleable platform

866
00:29:34,020 --> 00:29:36,720
and it's mostly used for the same old

867
00:29:36,720 --> 00:29:39,000
stuff abusive accounts and privileges

868
00:29:39,000 --> 00:29:42,179
moving lateral using Powershell loading

869
00:29:42,179 --> 00:29:44,100
malicious code and the introduction of

870
00:29:44,100 --> 00:29:46,980
third-party tools onto a victim system

871
00:29:46,980 --> 00:29:49,559
I find it really really funny I don't

872
00:29:49,559 --> 00:29:50,520
know if anyone else has gone through

873
00:29:50,520 --> 00:29:52,380
this but I'll utilize Cobalt strike in

874
00:29:52,380 --> 00:29:53,880
this little tiny story that comes up

875
00:29:53,880 --> 00:29:56,700
there usually seems to be at least once

876
00:29:56,700 --> 00:29:58,799
a month some massive internet breaking

877
00:29:58,799 --> 00:30:00,840
vulnerability that everyone's just

878
00:30:00,840 --> 00:30:02,580
waiting to crack their networks down

879
00:30:02,580 --> 00:30:03,899
anyone know what I'm talking about

880
00:30:03,899 --> 00:30:05,880
remember when like log for Shell dropped

881
00:30:05,880 --> 00:30:07,559
and it was like the end of the world or

882
00:30:07,559 --> 00:30:10,260
when solarwinds happened or when caseya

883
00:30:10,260 --> 00:30:12,539
happened or when exchange happened or

884
00:30:12,539 --> 00:30:14,220
when F5 happened or we could just

885
00:30:14,220 --> 00:30:16,799
continue VMware happened Citrix said we

886
00:30:16,799 --> 00:30:17,880
could keep going down the list if we

887
00:30:17,880 --> 00:30:19,620
wanted to but there always seems to be

888
00:30:19,620 --> 00:30:23,039
this massive just oh every piece of

889
00:30:23,039 --> 00:30:24,179
software you have every piece of

890
00:30:24,179 --> 00:30:25,919
Hardware you have out there is is

891
00:30:25,919 --> 00:30:28,919
vulnerable so watch out and with all

892
00:30:28,919 --> 00:30:30,480
these amazing vulnerabilities and these

893
00:30:30,480 --> 00:30:32,520
GitHub repositories full of awesome

894
00:30:32,520 --> 00:30:34,740
proof of concept code what do most

895
00:30:34,740 --> 00:30:38,100
adversaries use all this power for

896
00:30:38,100 --> 00:30:40,140
running coin miners

897
00:30:40,140 --> 00:30:41,580
because apparently that's more

898
00:30:41,580 --> 00:30:43,799
attractive the other side of that coin

899
00:30:43,799 --> 00:30:46,320
pun intended is that adversaries will

900
00:30:46,320 --> 00:30:48,840
use all of that to place Cobalt strike

901
00:30:48,840 --> 00:30:51,240
on the system as well so again as I said

902
00:30:51,240 --> 00:30:53,399
a lot of times it's a massive entry

903
00:30:53,399 --> 00:30:56,340
Vector funnel that results into the same

904
00:30:56,340 --> 00:30:58,860
platform the same toolkit I brought up a

905
00:30:58,860 --> 00:31:00,600
screenshot earlier from malware traffic

906
00:31:00,600 --> 00:31:02,880
analysis that talked about Cobalt strike

907
00:31:02,880 --> 00:31:05,100
being the eventual stage of multiple

908
00:31:05,100 --> 00:31:07,559
drive-by infections botnet infections

909
00:31:07,559 --> 00:31:09,600
phishing email infections so on and so

910
00:31:09,600 --> 00:31:13,020
forth It's a widely used platform so for

911
00:31:13,020 --> 00:31:15,000
that reason understanding more about

912
00:31:15,000 --> 00:31:17,039
what I what the platform does how it's

913
00:31:17,039 --> 00:31:19,080
coded how it works gives me the ability

914
00:31:19,080 --> 00:31:21,240
to detect and gives me the ability to

915
00:31:21,240 --> 00:31:24,299
write detections against its own code or

916
00:31:24,299 --> 00:31:25,740
its own built-in

917
00:31:25,740 --> 00:31:27,240
um options

918
00:31:27,240 --> 00:31:28,500
so we're going to focus on a couple

919
00:31:28,500 --> 00:31:30,120
different sides of detection Network and

920
00:31:30,120 --> 00:31:32,100
host based detection I picked up on

921
00:31:32,100 --> 00:31:35,460
network first because to me network is I

922
00:31:35,460 --> 00:31:38,940
think one of the areas the easiest areas

923
00:31:38,940 --> 00:31:40,440
to detect

924
00:31:40,440 --> 00:31:42,779
assuming you have lots of things in

925
00:31:42,779 --> 00:31:43,679
place

926
00:31:43,679 --> 00:31:45,899
but it is also the area that often has

927
00:31:45,899 --> 00:31:48,000
the least visibility it's the easiest

928
00:31:48,000 --> 00:31:49,500
place but it's also one of the largest

929
00:31:49,500 --> 00:31:51,360
pieces of traffic or largest pieces of

930
00:31:51,360 --> 00:31:52,919
telemetry that's out there but the

931
00:31:52,919 --> 00:31:54,539
network is one of the key parts of

932
00:31:54,539 --> 00:31:56,640
cobalt right success in fact I would

933
00:31:56,640 --> 00:31:59,220
argue it is the key to its success a C2

934
00:31:59,220 --> 00:32:02,279
is useless if it cannot Beacon back home

935
00:32:02,279 --> 00:32:04,200
so my network traffic is going to

936
00:32:04,200 --> 00:32:05,820
involve things like initial exploitation

937
00:32:05,820 --> 00:32:09,360
payload download CT C2 comms any lateral

938
00:32:09,360 --> 00:32:10,740
movement is going to happen over the

939
00:32:10,740 --> 00:32:12,539
network so we hope potential

940
00:32:12,539 --> 00:32:15,840
exfiltration the entire gamut of the

941
00:32:15,840 --> 00:32:18,299
attacker adversary life cycle usually

942
00:32:18,299 --> 00:32:21,059
relies on network connectivity I cannot

943
00:32:21,059 --> 00:32:22,919
have initial access and data

944
00:32:22,919 --> 00:32:25,440
exfiltration if I don't have a way to

945
00:32:25,440 --> 00:32:28,440
connect to that particular Network

946
00:32:28,440 --> 00:32:30,240
but this is of course much easier said

947
00:32:30,240 --> 00:32:32,580
than done so I have to caveat this talk

948
00:32:32,580 --> 00:32:34,980
by saying I'm aware that I'm just going

949
00:32:34,980 --> 00:32:36,960
to like pull up an example of a pcap and

950
00:32:36,960 --> 00:32:38,760
be like this works right it's done but

951
00:32:38,760 --> 00:32:41,159
I'm aware Network capture is really hard

952
00:32:41,159 --> 00:32:43,919
it can be really hard but but we don't

953
00:32:43,919 --> 00:32:45,539
always have to do full P CAP number one

954
00:32:45,539 --> 00:32:47,520
we could pivot off of metadata if we

955
00:32:47,520 --> 00:32:49,559
wanted to we could also utilize higher

956
00:32:49,559 --> 00:32:51,179
level things like netflow and other

957
00:32:51,179 --> 00:32:53,399
sorts of network artifacts to say there

958
00:32:53,399 --> 00:32:55,380
are ways for me to interrogate Network

959
00:32:55,380 --> 00:32:57,480
traffic without needing to have a full P

960
00:32:57,480 --> 00:32:59,640
CAP but again we'll look at ways that

961
00:32:59,640 --> 00:33:01,320
makes life either a little bit easier or

962
00:33:01,320 --> 00:33:02,520
a little bit harder

963
00:33:02,520 --> 00:33:06,500
all right anyone see the malware

964
00:33:07,620 --> 00:33:09,539
well this is a talk about Cobalt strike

965
00:33:09,539 --> 00:33:11,460
so assume any screenshot I give you is

966
00:33:11,460 --> 00:33:12,720
probably going to be associated with

967
00:33:12,720 --> 00:33:15,419
Cobalt strike you can fail safely make

968
00:33:15,419 --> 00:33:17,039
that assumption but I'll go the other

969
00:33:17,039 --> 00:33:18,480
route and I'll simply brought up here by

970
00:33:18,480 --> 00:33:19,620
the way did anyone immediately know

971
00:33:19,620 --> 00:33:22,380
notice that it was Port 8008

972
00:33:22,380 --> 00:33:23,760
I had this discussion with someone

973
00:33:23,760 --> 00:33:24,899
yesterday who looked at this they're

974
00:33:24,899 --> 00:33:26,640
like that's the wrong Port before I had

975
00:33:26,640 --> 00:33:28,200
even zoomed in they're like that's the

976
00:33:28,200 --> 00:33:29,700
wrong port and I was like how did you

977
00:33:29,700 --> 00:33:30,960
pick up on that so quickly and they're

978
00:33:30,960 --> 00:33:33,000
like I'm just so used to seeing 80 and

979
00:33:33,000 --> 00:33:35,159
443 that when it violated like that

980
00:33:35,159 --> 00:33:37,200
mnemonic symbol that I'm used to I just

981
00:33:37,200 --> 00:33:39,480
didn't seem right to me so there is

982
00:33:39,480 --> 00:33:41,519
always of course the option of simply

983
00:33:41,519 --> 00:33:43,919
saying well let's do some Port protocol

984
00:33:43,919 --> 00:33:46,140
combinations and see if we have any that

985
00:33:46,140 --> 00:33:48,720
violate what I would expect to see

986
00:33:48,720 --> 00:33:53,580
it's 2022. it's almost 2023 we have some

987
00:33:53,580 --> 00:33:55,140
of the most advanced technology out

988
00:33:55,140 --> 00:33:57,899
there except for the product known as

989
00:33:57,899 --> 00:33:59,880
Twitter but we have some of the most

990
00:33:59,880 --> 00:34:02,100
advanced technology out there

991
00:34:02,100 --> 00:34:03,960
and you might be wondering to yourself

992
00:34:03,960 --> 00:34:06,059
Matt seriously you're up here talking to

993
00:34:06,059 --> 00:34:08,159
me about Port protocol mismatches as a

994
00:34:08,159 --> 00:34:09,960
detection technique and I'm going to say

995
00:34:09,960 --> 00:34:13,800
yeah it still works as a way to get

996
00:34:13,800 --> 00:34:16,379
traffic out it still fails as a

997
00:34:16,379 --> 00:34:17,699
widespread implemented detection

998
00:34:17,699 --> 00:34:19,739
technique now if any of you are sitting

999
00:34:19,739 --> 00:34:20,879
here and being like that would never

1000
00:34:20,879 --> 00:34:23,520
work in my network congratulations it is

1001
00:34:23,520 --> 00:34:25,739
now your responsibility to share how to

1002
00:34:25,739 --> 00:34:27,418
configure a firewall with those who

1003
00:34:27,418 --> 00:34:29,520
don't know because for a lot of folks

1004
00:34:29,520 --> 00:34:31,619
hey can you block this particular Port

1005
00:34:31,619 --> 00:34:34,500
is a three-week change process to take

1006
00:34:34,500 --> 00:34:36,540
place think about that imagine three

1007
00:34:36,540 --> 00:34:38,339
weeks of success to block a firewall

1008
00:34:38,339 --> 00:34:40,379
Port anyways I won't go too much into

1009
00:34:40,379 --> 00:34:42,239
all of that but I'll just simply say yes

1010
00:34:42,239 --> 00:34:44,099
things like this still happen and they

1011
00:34:44,099 --> 00:34:47,159
still work now I'm going to bring up a

1012
00:34:47,159 --> 00:34:48,418
slide in just a moment that's going to

1013
00:34:48,418 --> 00:34:50,219
talk about some of the arguments that I

1014
00:34:50,219 --> 00:34:51,839
get about capturing Network traffic but

1015
00:34:51,839 --> 00:34:52,980
I'll simply say there's plenty of

1016
00:34:52,980 --> 00:34:55,020
metadata available even though I can't

1017
00:34:55,020 --> 00:34:57,119
see the raw packet information there's

1018
00:34:57,119 --> 00:34:59,160
plenty of metadata available in Cobalt

1019
00:34:59,160 --> 00:35:01,320
strike Communications really in any

1020
00:35:01,320 --> 00:35:02,880
encrypted traffic that I can use to my

1021
00:35:02,880 --> 00:35:04,560
advantage

1022
00:35:04,560 --> 00:35:07,140
we can also utilize some of the default

1023
00:35:07,140 --> 00:35:08,520
behavior that we've seen in previous

1024
00:35:08,520 --> 00:35:11,220
cases previous experience there's time

1025
00:35:11,220 --> 00:35:13,260
and time again we see an example of an

1026
00:35:13,260 --> 00:35:15,300
initial Cobalt strike the initial

1027
00:35:15,300 --> 00:35:17,400
dropper if you will reaching out over

1028
00:35:17,400 --> 00:35:19,800
plain text HTTP to pull down the

1029
00:35:19,800 --> 00:35:21,660
subsequent or I should say the beacon or

1030
00:35:21,660 --> 00:35:24,359
the next stage malware and that is the

1031
00:35:24,359 --> 00:35:26,579
one that switches over to https that's

1032
00:35:26,579 --> 00:35:28,079
the one that switches over to encrypted

1033
00:35:28,079 --> 00:35:29,099
Communications

1034
00:35:29,099 --> 00:35:32,040
now I I tend to say now that we

1035
00:35:32,040 --> 00:35:34,200
understand how this works sometimes this

1036
00:35:34,200 --> 00:35:36,000
feels almost like oh now I now I know

1037
00:35:36,000 --> 00:35:38,040
why this works this way if I create a

1038
00:35:38,040 --> 00:35:39,720
Cobalt strike server with this crazy

1039
00:35:39,720 --> 00:35:41,640
intense malleable profile associated

1040
00:35:41,640 --> 00:35:43,500
with it and I'm deploying malware out

1041
00:35:43,500 --> 00:35:45,060
there I need a way to get that profile

1042
00:35:45,060 --> 00:35:46,740
to get that installed or get that beacon

1043
00:35:46,740 --> 00:35:49,260
on that particular system a second stage

1044
00:35:49,260 --> 00:35:51,240
downloader is not really out of the

1045
00:35:51,240 --> 00:35:52,920
ordinary nor is it something we would

1046
00:35:52,920 --> 00:35:56,220
not expect to see furthermore if I'm

1047
00:35:56,220 --> 00:35:58,980
utilizing a previous compromise or

1048
00:35:58,980 --> 00:36:01,320
another form of malware like a botnet or

1049
00:36:01,320 --> 00:36:02,880
something like that to put Cobalt strike

1050
00:36:02,880 --> 00:36:06,000
on a system I might have to utilize that

1051
00:36:06,000 --> 00:36:08,460
first or that primary pieces of malware

1052
00:36:08,460 --> 00:36:11,700
download mechanisms in order to get my

1053
00:36:11,700 --> 00:36:14,339
encrypted my encrypted beacon on that

1054
00:36:14,339 --> 00:36:16,380
particular system so there's always a

1055
00:36:16,380 --> 00:36:18,060
chance that we will see some sort of

1056
00:36:18,060 --> 00:36:20,280
HTTP plain text traffic the reason I

1057
00:36:20,280 --> 00:36:21,960
bring this up here is sometimes when I'm

1058
00:36:21,960 --> 00:36:23,460
talking to folks about network analysis

1059
00:36:23,460 --> 00:36:25,200
and network detection they tend to go

1060
00:36:25,200 --> 00:36:26,760
the route of oh it's encrypted I can't

1061
00:36:26,760 --> 00:36:28,920
see anything so we're done right and I

1062
00:36:28,920 --> 00:36:31,680
say a if you bet on that the adversary

1063
00:36:31,680 --> 00:36:33,119
is assuming you're going to bet on that

1064
00:36:33,119 --> 00:36:34,920
and they're going to hide in plain sight

1065
00:36:34,920 --> 00:36:37,680
and in a lot of cases we'll actually be

1066
00:36:37,680 --> 00:36:40,380
able to see PE files being brought down

1067
00:36:40,380 --> 00:36:43,079
over plain text HTTP folks that is a

1068
00:36:43,079 --> 00:36:45,960
plain text HTTP protocol and a Cobalt

1069
00:36:45,960 --> 00:36:47,520
strike installer being downloaded

1070
00:36:47,520 --> 00:36:49,800
reverse engineer to your heart's content

1071
00:36:49,800 --> 00:36:52,200
it is right there easy to see we can

1072
00:36:52,200 --> 00:36:54,180
also utilize some protocol mismatching

1073
00:36:54,180 --> 00:36:56,160
to our advantage here over on the left

1074
00:36:56,160 --> 00:36:58,140
hand side of this is the HTTP host

1075
00:36:58,140 --> 00:37:01,079
header is anyone here send all of their

1076
00:37:01,079 --> 00:37:04,020
traffic to IP addresses only

1077
00:37:04,020 --> 00:37:06,300
I would hope not unless you're of course

1078
00:37:06,300 --> 00:37:07,920
in a lab or a known environment most of

1079
00:37:07,920 --> 00:37:09,000
the time when we're interacting with

1080
00:37:09,000 --> 00:37:10,320
external networks it's done through

1081
00:37:10,320 --> 00:37:13,020
fqdns there's a lot of websites that we

1082
00:37:13,020 --> 00:37:14,700
interact with very rarely do we bring

1083
00:37:14,700 --> 00:37:17,040
the actual IP to the table unless of

1084
00:37:17,040 --> 00:37:19,020
course it's a hard-coded C2 or a

1085
00:37:19,020 --> 00:37:21,540
hard-coded command that's in there

1086
00:37:21,540 --> 00:37:22,980
I've already kind of mentioned here that

1087
00:37:22,980 --> 00:37:24,420
your network analysis can extend just

1088
00:37:24,420 --> 00:37:25,859
beyond pcap we can do really simple

1089
00:37:25,859 --> 00:37:28,440
things like PE downloads IP host names

1090
00:37:28,440 --> 00:37:31,380
or Port protocol combinations I'd also

1091
00:37:31,380 --> 00:37:32,820
recommend bringing Network traffic into

1092
00:37:32,820 --> 00:37:35,160
more advanced network analysis tools I

1093
00:37:35,160 --> 00:37:37,140
gave a few examples up here Zeke snort

1094
00:37:37,140 --> 00:37:39,660
cerakata and then whatever ndr you might

1095
00:37:39,660 --> 00:37:41,700
have in place right now point being

1096
00:37:41,700 --> 00:37:44,339
you'd be surprised at how many

1097
00:37:44,339 --> 00:37:46,680
detections are built into some of these

1098
00:37:46,680 --> 00:37:48,300
default tools or sorry how many of these

1099
00:37:48,300 --> 00:37:50,520
are built into them by default you'd

1100
00:37:50,520 --> 00:37:52,500
also be surprised at how rare it is for

1101
00:37:52,500 --> 00:37:53,640
adversaries

1102
00:37:53,640 --> 00:37:55,200
to deviate from those particular

1103
00:37:55,200 --> 00:37:56,520
defaults

1104
00:37:56,520 --> 00:37:58,560
and then to answer the argument but Matt

1105
00:37:58,560 --> 00:38:00,180
wait wait wait it's encrypted what can

1106
00:38:00,180 --> 00:38:02,040
we do about that I usually come back and

1107
00:38:02,040 --> 00:38:04,380
I say if it's encrypted you are not dead

1108
00:38:04,380 --> 00:38:06,599
in the water there is more to look at

1109
00:38:06,599 --> 00:38:08,220
go through and profile that traffic

1110
00:38:08,220 --> 00:38:10,140
anyone here by a show of hands familiar

1111
00:38:10,140 --> 00:38:12,960
with ja3 or ja3s hashes for example

1112
00:38:12,960 --> 00:38:15,359
that's one way that you can profile

1113
00:38:15,359 --> 00:38:19,859
client hello server hello Communications

1114
00:38:19,859 --> 00:38:21,900
because guess what I've already given

1115
00:38:21,900 --> 00:38:24,300
you the lowdown of how you can configure

1116
00:38:24,300 --> 00:38:26,339
a Cobalt strike agent to communicate

1117
00:38:26,339 --> 00:38:28,740
outbound if I'm utilizing an encrypted

1118
00:38:28,740 --> 00:38:31,320
profile or an encrypted uh malleable

1119
00:38:31,320 --> 00:38:34,440
profile guess what the way that the

1120
00:38:34,440 --> 00:38:37,619
agent says hello the way that the agent

1121
00:38:37,619 --> 00:38:39,839
reaches out is going to follow the

1122
00:38:39,839 --> 00:38:41,400
parameters I've put in that particular

1123
00:38:41,400 --> 00:38:42,540
profile

1124
00:38:42,540 --> 00:38:45,240
the way that the server says hello back

1125
00:38:45,240 --> 00:38:48,720
is going to once again be respective of

1126
00:38:48,720 --> 00:38:51,000
those particular details so I just did

1127
00:38:51,000 --> 00:38:52,260
some really quick analysis right here

1128
00:38:52,260 --> 00:38:54,480
this is actually the exact same pcap as

1129
00:38:54,480 --> 00:38:56,400
this initial stage right here and I went

1130
00:38:56,400 --> 00:38:57,900
through and I did some calculating I

1131
00:38:57,900 --> 00:38:59,579
didn't but the tool did went through and

1132
00:38:59,579 --> 00:39:02,160
figured out the j3 hash and the ja3s so

1133
00:39:02,160 --> 00:39:03,720
the client hello the server hello for

1134
00:39:03,720 --> 00:39:05,400
that particular traffic ran a quick

1135
00:39:05,400 --> 00:39:07,020
filter and I just did a quick profile

1136
00:39:07,020 --> 00:39:09,720
and I said I took one client hello

1137
00:39:09,720 --> 00:39:12,300
generated a je3 hash from it and I

1138
00:39:12,300 --> 00:39:15,420
pivoted into four different IP addresses

1139
00:39:15,420 --> 00:39:18,000
love it anytime I can get some sort of

1140
00:39:18,000 --> 00:39:19,619
indicator that allows me to Pivot from

1141
00:39:19,619 --> 00:39:22,320
one to many I'll happily take that I

1142
00:39:22,320 --> 00:39:23,940
perform some of the exact same analysis

1143
00:39:23,940 --> 00:39:26,520
against the server as well and guess

1144
00:39:26,520 --> 00:39:28,020
what server I don't have the screenshot

1145
00:39:28,020 --> 00:39:29,280
of it up here but the server was the

1146
00:39:29,280 --> 00:39:30,540
exact same result

1147
00:39:30,540 --> 00:39:33,180
what this is telling you is that there

1148
00:39:33,180 --> 00:39:35,359
are multiple IP addresses out there

1149
00:39:35,359 --> 00:39:38,220
multiple forms of https C2

1150
00:39:38,220 --> 00:39:40,440
Communications

1151
00:39:40,440 --> 00:39:42,599
the way that the client says hello

1152
00:39:42,599 --> 00:39:45,000
across those websites and those various

1153
00:39:45,000 --> 00:39:49,020
installers is exactly the same cool now

1154
00:39:49,020 --> 00:39:50,520
I just found a way to profile encrypted

1155
00:39:50,520 --> 00:39:52,200
traffic and detect potential Cobalt

1156
00:39:52,200 --> 00:39:53,940
strike agents in my environment love it

1157
00:39:53,940 --> 00:39:56,579
I'll happily take that advantage

1158
00:39:56,579 --> 00:39:58,619
I also go as far with folks and I say

1159
00:39:58,619 --> 00:40:00,060
hey you can also just take a look at

1160
00:40:00,060 --> 00:40:01,380
certificate details as well because

1161
00:40:01,380 --> 00:40:03,240
guess what most adversaries are doing

1162
00:40:03,240 --> 00:40:05,099
when they're utilizing encrypted

1163
00:40:05,099 --> 00:40:06,000
channels they've got to have

1164
00:40:06,000 --> 00:40:08,099
certificates associated with this anyone

1165
00:40:08,099 --> 00:40:09,660
here think an adversary is going to go

1166
00:40:09,660 --> 00:40:12,119
through all the trouble of building a

1167
00:40:12,119 --> 00:40:13,859
legitimate domain and setting up a

1168
00:40:13,859 --> 00:40:15,180
legitimate certificate and doing all

1169
00:40:15,180 --> 00:40:17,520
those things some of them will most of

1170
00:40:17,520 --> 00:40:20,220
the time though it's a droplet or some

1171
00:40:20,220 --> 00:40:23,160
sort of VPS out there and what sort of

1172
00:40:23,160 --> 00:40:24,900
encryption or what sort of tool am I

1173
00:40:24,900 --> 00:40:27,000
going to use to quickly self-sign my

1174
00:40:27,000 --> 00:40:28,619
communication or quickly generate a

1175
00:40:28,619 --> 00:40:31,260
certificate for myself let's encrypt

1176
00:40:31,260 --> 00:40:33,240
you'd be surprised again A lot of times

1177
00:40:33,240 --> 00:40:35,099
just how quickly adversaries will

1178
00:40:35,099 --> 00:40:36,960
default to the normal stuff take a look

1179
00:40:36,960 --> 00:40:38,640
at the parameters for this certificate

1180
00:40:38,640 --> 00:40:41,640
as well internet widgets PTY limited

1181
00:40:41,640 --> 00:40:45,060
state or Province name some state

1182
00:40:45,060 --> 00:40:46,920
great thank you for taking the time to

1183
00:40:46,920 --> 00:40:48,119
make it really easy my favorite one

1184
00:40:48,119 --> 00:40:50,700
though is common name localhost this is

1185
00:40:50,700 --> 00:40:53,339
an externally facing C2 server that's

1186
00:40:53,339 --> 00:40:55,140
what the certificate looks like I'll

1187
00:40:55,140 --> 00:40:56,760
take those values all day long because

1188
00:40:56,760 --> 00:40:58,079
I'm going to go and build detections on

1189
00:40:58,079 --> 00:40:59,520
this traffic and say this comes across

1190
00:40:59,520 --> 00:41:02,579
the wire I don't want to see this at all

1191
00:41:02,579 --> 00:41:04,640
we'll also zoom in on host detection

1192
00:41:04,640 --> 00:41:07,260
Cobalt strike requires a host remember

1193
00:41:07,260 --> 00:41:09,300
it's got to be installed on something I

1194
00:41:09,300 --> 00:41:10,800
usually tell folks every time I talk

1195
00:41:10,800 --> 00:41:12,480
about malware showing them up on a

1196
00:41:12,480 --> 00:41:14,760
system in the take everyone in this room

1197
00:41:14,760 --> 00:41:17,280
right here across the tens or hundreds

1198
00:41:17,280 --> 00:41:19,260
of millions of systems that we all have

1199
00:41:19,260 --> 00:41:20,760
interacted with over the course of Our

1200
00:41:20,760 --> 00:41:23,460
Lives never in the history of computing

1201
00:41:23,460 --> 00:41:26,880
have ones and zeros fallen in line and

1202
00:41:26,880 --> 00:41:29,760
that Cobalt strike just appears on there

1203
00:41:29,760 --> 00:41:32,160
doesn't work that way someone puts

1204
00:41:32,160 --> 00:41:35,339
malware on a system a process or a human

1205
00:41:35,339 --> 00:41:37,500
or a script or some sort of automate or

1206
00:41:37,500 --> 00:41:40,380
whatever puts malware on a system

1207
00:41:40,380 --> 00:41:42,060
this is where Cobalt strike tends to be

1208
00:41:42,060 --> 00:41:44,040
a little bit more elusive

1209
00:41:44,040 --> 00:41:46,980
however it is not as evusive as everyone

1210
00:41:46,980 --> 00:41:48,660
thinks that's kind of one of the lines

1211
00:41:48,660 --> 00:41:50,040
that I called out in the abstract for

1212
00:41:50,040 --> 00:41:51,900
this talk as well it's not as elusive as

1213
00:41:51,900 --> 00:41:53,160
everyone thinks because it may have

1214
00:41:53,160 --> 00:41:55,200
amazing capabilities built into it you

1215
00:41:55,200 --> 00:41:56,820
may be able to customize Shell Code

1216
00:41:56,820 --> 00:41:58,440
execution and change all sorts of

1217
00:41:58,440 --> 00:42:00,599
in-memory operations utilize reflective

1218
00:42:00,599 --> 00:42:02,640
dll loading all that kind of stuff guess

1219
00:42:02,640 --> 00:42:05,579
what it still has to interact with the

1220
00:42:05,579 --> 00:42:07,980
system interact with memory carve out or

1221
00:42:07,980 --> 00:42:10,200
allocate space interact with processes

1222
00:42:10,200 --> 00:42:12,000
inject its code in there it's going to

1223
00:42:12,000 --> 00:42:13,859
leave telltale signs all over the place

1224
00:42:13,859 --> 00:42:15,359
and the other reason I highlighted

1225
00:42:15,359 --> 00:42:16,920
Powershell in this particular talk right

1226
00:42:16,920 --> 00:42:18,480
here or in this particular slide is

1227
00:42:18,480 --> 00:42:20,400
because a lot of those Advanced

1228
00:42:20,400 --> 00:42:21,900
capabilities that Cobalt strike brings

1229
00:42:21,900 --> 00:42:24,060
to the table it utilizes Powershell as

1230
00:42:24,060 --> 00:42:25,500
its Workhorse to do a lot of that work

1231
00:42:25,500 --> 00:42:28,740
for it so if I tell you guess what

1232
00:42:28,740 --> 00:42:31,079
there's a significant usage of

1233
00:42:31,079 --> 00:42:33,480
Powershell across Cobalt strike what do

1234
00:42:33,480 --> 00:42:35,160
you think you should start detecting

1235
00:42:35,160 --> 00:42:36,180
against

1236
00:42:36,180 --> 00:42:37,800
any thoughts

1237
00:42:37,800 --> 00:42:40,440
someone said Powershell logs 100 right

1238
00:42:40,440 --> 00:42:42,839
one of the best resources that are out

1239
00:42:42,839 --> 00:42:45,720
there and again here we are Matt it's

1240
00:42:45,720 --> 00:42:47,880
2022 and you're telling me that I need

1241
00:42:47,880 --> 00:42:49,619
to be looking through Powershell logs

1242
00:42:49,619 --> 00:42:51,420
folks I don't know if there's an Italian

1243
00:42:51,420 --> 00:42:53,160
version of this phrase but if it ain't

1244
00:42:53,160 --> 00:42:56,820
broke don't fix it Powershell works as

1245
00:42:56,820 --> 00:42:58,380
an attacker as an adversary's tool

1246
00:42:58,380 --> 00:43:00,839
because guess what it works not a lot of

1247
00:43:00,839 --> 00:43:03,000
folks are detecting or command or uh

1248
00:43:03,000 --> 00:43:04,859
collecting Powershell logs or analyzing

1249
00:43:04,859 --> 00:43:06,180
Powershell logs as good as they should

1250
00:43:06,180 --> 00:43:08,160
be there's two big event IDs of interest

1251
00:43:08,160 --> 00:43:09,599
I'm going to talk about why these are

1252
00:43:09,599 --> 00:43:12,780
it's 4103 and 4104 these are going to be

1253
00:43:12,780 --> 00:43:15,240
the ones that actually capture a script

1254
00:43:15,240 --> 00:43:17,520
block contents or command content as

1255
00:43:17,520 --> 00:43:19,140
their indicator as they're run on a

1256
00:43:19,140 --> 00:43:20,940
particular system which one are we

1257
00:43:20,940 --> 00:43:22,020
interested in

1258
00:43:22,020 --> 00:43:23,880
pop quiz

1259
00:43:23,880 --> 00:43:26,220
the quick answer both and again I'm

1260
00:43:26,220 --> 00:43:27,660
aware that I'm standing between you and

1261
00:43:27,660 --> 00:43:29,400
food and beverages so I'll give you the

1262
00:43:29,400 --> 00:43:31,500
answer on that one both we're interested

1263
00:43:31,500 --> 00:43:33,359
in both because one of them is local one

1264
00:43:33,359 --> 00:43:34,920
of them is remote I want to know what's

1265
00:43:34,920 --> 00:43:36,599
happening there all right here you go

1266
00:43:36,599 --> 00:43:38,280
everyone here's Cobalt strike in the

1267
00:43:38,280 --> 00:43:40,260
form of a Powershell log can you all see

1268
00:43:40,260 --> 00:43:42,060
the malware

1269
00:43:42,060 --> 00:43:44,160
again if I'm bringing up the screenshot

1270
00:43:44,160 --> 00:43:45,480
in a Cobalt strike talk you should

1271
00:43:45,480 --> 00:43:47,160
assume there's malware on there this is

1272
00:43:47,160 --> 00:43:50,160
just a screenshot from a 4103 event that

1273
00:43:50,160 --> 00:43:52,380
captures various pieces of code I've

1274
00:43:52,380 --> 00:43:54,060
highlighted two big boxes here for you

1275
00:43:54,060 --> 00:43:55,800
one of them is calls to a certain

1276
00:43:55,800 --> 00:43:58,020
particular uh system reflection assembly

1277
00:43:58,020 --> 00:44:00,359
name and the second one is a variable at

1278
00:44:00,359 --> 00:44:01,740
the bottom of the screen that is

1279
00:44:01,740 --> 00:44:04,319
declaring a byte array to subsequently

1280
00:44:04,319 --> 00:44:07,319
be injected into memory this is the type

1281
00:44:07,319 --> 00:44:09,839
of stuff I love to see in logs now you

1282
00:44:09,839 --> 00:44:11,579
may notice there's a nice little base64

1283
00:44:11,579 --> 00:44:13,140
string at the end of that you better

1284
00:44:13,140 --> 00:44:14,339
believe we're going to take that thing

1285
00:44:14,339 --> 00:44:15,960
to some sort of decoding tool and figure

1286
00:44:15,960 --> 00:44:17,819
out what's going on inside of there but

1287
00:44:17,819 --> 00:44:20,160
my point Remains the Same this is inside

1288
00:44:20,160 --> 00:44:22,440
of the Windows Event log this is not me

1289
00:44:22,440 --> 00:44:24,359
reverse engineering some crazy malware

1290
00:44:24,359 --> 00:44:25,260
and going through all sorts of

1291
00:44:25,260 --> 00:44:27,420
de-obfuscation and whatnot this is plain

1292
00:44:27,420 --> 00:44:30,720
text Json event log data I'll take it

1293
00:44:30,720 --> 00:44:32,460
all day long by the way that's the

1294
00:44:32,460 --> 00:44:34,619
command that ran this particular data

1295
00:44:34,619 --> 00:44:36,359
right here that's the beginning of it it

1296
00:44:36,359 --> 00:44:39,300
was powershell.exe Dash NOP Dash W

1297
00:44:39,300 --> 00:44:42,660
hidden Dash EC oh oh now we get into

1298
00:44:42,660 --> 00:44:44,099
some other interesting sides of

1299
00:44:44,099 --> 00:44:46,380
Powershell detection as well this is one

1300
00:44:46,380 --> 00:44:47,640
of my favorite discussions to have

1301
00:44:47,640 --> 00:44:49,680
because this is a trick that not only

1302
00:44:49,680 --> 00:44:51,300
works for Cobalt strike but also works

1303
00:44:51,300 --> 00:44:52,859
for a majority of Powershell abuse

1304
00:44:52,859 --> 00:44:54,900
that's out there by the way you might be

1305
00:44:54,900 --> 00:44:57,300
able to go and find posts and whatnot am

1306
00:44:57,300 --> 00:44:59,460
I short on time

1307
00:44:59,460 --> 00:45:01,740
maybe I need to hurry up he's telling me

1308
00:45:01,740 --> 00:45:04,920
I need to hurry up yes hurry up okay

1309
00:45:04,920 --> 00:45:07,619
we only have 45 slides left is that okay

1310
00:45:07,619 --> 00:45:09,240
I'm kidding I'm joking with you all

1311
00:45:09,240 --> 00:45:11,220
right all right

1312
00:45:11,220 --> 00:45:13,079
we can go through and utilize the way

1313
00:45:13,079 --> 00:45:14,700
that Powershell is launched in order to

1314
00:45:14,700 --> 00:45:16,920
kick off keyword searches there's a few

1315
00:45:16,920 --> 00:45:18,420
different switches that you're likely to

1316
00:45:18,420 --> 00:45:19,859
see in Powershell abuse things like

1317
00:45:19,859 --> 00:45:22,079
don't load a profile hide the window I'm

1318
00:45:22,079 --> 00:45:24,060
passing in base64 do not create an

1319
00:45:24,060 --> 00:45:26,220
interactive prompt and guess what there

1320
00:45:26,220 --> 00:45:28,200
was some really cool research done that

1321
00:45:28,200 --> 00:45:30,180
went in and said how many ways can you

1322
00:45:30,180 --> 00:45:32,520
Alias a Powershell commandlet how many

1323
00:45:32,520 --> 00:45:35,339
ways can you Alias a switch some folks

1324
00:45:35,339 --> 00:45:37,020
over at unit 42 went and did analysis

1325
00:45:37,020 --> 00:45:38,940
across 4 100 samples and look what they

1326
00:45:38,940 --> 00:45:42,540
found multiple ways to encode base64

1327
00:45:42,540 --> 00:45:45,660
data multiple ways to hide a window does

1328
00:45:45,660 --> 00:45:47,579
that mean we write one detection and

1329
00:45:47,579 --> 00:45:49,140
forget about it and say we're done no

1330
00:45:49,140 --> 00:45:51,420
this right here everyone is proof that

1331
00:45:51,420 --> 00:45:52,680
our detections are working because

1332
00:45:52,680 --> 00:45:54,599
adversaries are trying new and newer

1333
00:45:54,599 --> 00:45:55,619
techniques

1334
00:45:55,619 --> 00:45:57,720
process execution I'm going to focus on

1335
00:45:57,720 --> 00:45:59,280
a couple of different things I'm going

1336
00:45:59,280 --> 00:46:01,319
to focus on process start service

1337
00:46:01,319 --> 00:46:03,240
creation a form of persistence as well

1338
00:46:03,240 --> 00:46:05,700
as potential privilege escalation and a

1339
00:46:05,700 --> 00:46:07,619
way to execute as well but I'm also

1340
00:46:07,619 --> 00:46:08,760
going to rope in another tool called

1341
00:46:08,760 --> 00:46:10,260
sysmon anyone here heard of cismon

1342
00:46:10,260 --> 00:46:13,140
before I hope cisman is an extremely

1343
00:46:13,140 --> 00:46:14,880
granular tool that's going to bring all

1344
00:46:14,880 --> 00:46:17,220
sorts of capabilities visibility to my

1345
00:46:17,220 --> 00:46:18,900
environment I'm going to look for things

1346
00:46:18,900 --> 00:46:20,760
like process creation Network events

1347
00:46:20,760 --> 00:46:22,560
taking place remote threads process

1348
00:46:22,560 --> 00:46:24,780
Access Network pipe process tampering so

1349
00:46:24,780 --> 00:46:27,420
on and so forth here's an example 70 45

1350
00:46:27,420 --> 00:46:29,700
service creation event in this case

1351
00:46:29,700 --> 00:46:31,980
right here I'm going to be again looking

1352
00:46:31,980 --> 00:46:34,520
for things like Network share access

1353
00:46:34,520 --> 00:46:37,260
accessing localhost this is default

1354
00:46:37,260 --> 00:46:40,020
listener Behavior accessing the admin

1355
00:46:40,020 --> 00:46:42,420
share on my Local Host to receive an

1356
00:46:42,420 --> 00:46:44,760
executable or a dll execute that thing

1357
00:46:44,760 --> 00:46:46,380
inject it into memory we already know

1358
00:46:46,380 --> 00:46:48,599
what that particular process looks like

1359
00:46:48,599 --> 00:46:50,579
I've also got some examples here of

1360
00:46:50,579 --> 00:46:52,140
various sysmon IDs where I'm going to

1361
00:46:52,140 --> 00:46:54,119
zoom in on what it looks like to see

1362
00:46:54,119 --> 00:46:55,859
Powershell commands being executed

1363
00:46:55,859 --> 00:46:58,020
Network pipes being created take a look

1364
00:46:58,020 --> 00:46:59,579
at that default pipe Name by the way

1365
00:46:59,579 --> 00:47:02,040
there's our slash msse one that we've

1366
00:47:02,040 --> 00:47:03,480
seen before remember that list I told

1367
00:47:03,480 --> 00:47:05,819
you earlier always there

1368
00:47:05,819 --> 00:47:07,200
and last but not least for account

1369
00:47:07,200 --> 00:47:09,000
activity we're also going to look across

1370
00:47:09,000 --> 00:47:10,680
various sorts of authentication events

1371
00:47:10,680 --> 00:47:12,180
process creation and things like that

1372
00:47:12,180 --> 00:47:14,220
this is where I'm looking for accounts

1373
00:47:14,220 --> 00:47:16,260
that have been involved in various parts

1374
00:47:16,260 --> 00:47:17,819
of malicious activity

1375
00:47:17,819 --> 00:47:19,680
all right two more little sections then

1376
00:47:19,680 --> 00:47:22,260
we're done I promise I was going to go

1377
00:47:22,260 --> 00:47:24,119
through and spend a lot of time and this

1378
00:47:24,119 --> 00:47:25,619
is remember I said earlier there's some

1379
00:47:25,619 --> 00:47:26,700
cool stuff that's happened in the past

1380
00:47:26,700 --> 00:47:28,260
two days I'm gonna bring up here I was

1381
00:47:28,260 --> 00:47:29,460
going to go through writing Yara

1382
00:47:29,460 --> 00:47:30,960
signatures with y'all but guess what

1383
00:47:30,960 --> 00:47:33,000
there was an article published a day and

1384
00:47:33,000 --> 00:47:34,980
a half ago by Google Cloud security aka

1385
00:47:34,980 --> 00:47:36,480
the folks at Chronicle talking about

1386
00:47:36,480 --> 00:47:39,180
making Powershell abuse easier to detect

1387
00:47:39,180 --> 00:47:41,400
harder to abuse and look what they did

1388
00:47:41,400 --> 00:47:43,079
they went through and they started

1389
00:47:43,079 --> 00:47:45,599
writing Yara signatures anyone recognize

1390
00:47:45,599 --> 00:47:48,300
these different function API calls here

1391
00:47:48,300 --> 00:47:50,819
there we go there's our API calls we

1392
00:47:50,819 --> 00:47:52,200
called out earlier there's the various

1393
00:47:52,200 --> 00:47:54,000
functions they wrote Yara signatures to

1394
00:47:54,000 --> 00:47:55,319
look for those hashes they wrote Yar

1395
00:47:55,319 --> 00:47:56,520
signatures to look for the network

1396
00:47:56,520 --> 00:47:58,740
connections the network hashes being

1397
00:47:58,740 --> 00:48:00,960
built in there there's also a wealth of

1398
00:48:00,960 --> 00:48:02,700
Sigma rules out there but guess what and

1399
00:48:02,700 --> 00:48:04,020
I'll finish on this little note right

1400
00:48:04,020 --> 00:48:05,880
here Sigma rules that are out there

1401
00:48:05,880 --> 00:48:08,520
folks they are work for football strike

1402
00:48:08,520 --> 00:48:10,200
but a lot of times they're looking for

1403
00:48:10,200 --> 00:48:12,480
just general malicious system activity

1404
00:48:12,480 --> 00:48:14,819
run dll without any arguments provided

1405
00:48:14,819 --> 00:48:17,760
to it service creation account abuse and

1406
00:48:17,760 --> 00:48:19,440
things like that so my point being and

1407
00:48:19,440 --> 00:48:20,880
I'll finish on this one because I've got

1408
00:48:20,880 --> 00:48:22,319
a nice little list of references that I

1409
00:48:22,319 --> 00:48:23,760
do not want to read to you you can read

1410
00:48:23,760 --> 00:48:25,740
yourself but I'll simply finish on this

1411
00:48:25,740 --> 00:48:28,319
it's an amazingly capable platform and a

1412
00:48:28,319 --> 00:48:29,760
huge hats off to the developers who

1413
00:48:29,760 --> 00:48:31,680
created this thing and a huge thumbs

1414
00:48:31,680 --> 00:48:33,240
down to the adversaries that abuse it

1415
00:48:33,240 --> 00:48:35,099
you're not as elusive as you think you

1416
00:48:35,099 --> 00:48:37,380
are there are a wealth of artifacts and

1417
00:48:37,380 --> 00:48:39,060
I promise you as blue teamers as

1418
00:48:39,060 --> 00:48:40,980
Defenders we're going to find them we're

1419
00:48:40,980 --> 00:48:42,180
going to detect it we're going to find

1420
00:48:42,180 --> 00:48:43,500
it in your network I'm going to make it

1421
00:48:43,500 --> 00:48:44,760
to the point where Cobalt strike is

1422
00:48:44,760 --> 00:48:46,740
going to be so obsolete it's not really

1423
00:48:46,740 --> 00:48:47,940
going to be worth their time to use it

1424
00:48:47,940 --> 00:48:49,920
anymore and with that said I'm going to

1425
00:48:49,920 --> 00:48:52,319
say I'm done or short on time anyways I

1426
00:48:52,319 --> 00:48:53,940
know I'm again between you and food and

1427
00:48:53,940 --> 00:48:55,200
Beverages and I'm going to say as the

1428
00:48:55,200 --> 00:48:56,579
last presenter today thanks everyone for

1429
00:48:56,579 --> 00:48:58,619
joining me thanks for staying thanks for

1430
00:48:58,619 --> 00:49:00,060
hanging out you're in a beautiful city

1431
00:49:00,060 --> 00:49:01,079
here so I hope you have a wonderful

1432
00:49:01,079 --> 00:49:04,339
night enjoying it thank you

1433
00:49:06,000 --> 00:49:07,760
all right

1434
00:49:07,760 --> 00:49:11,300
I'll leave out there

