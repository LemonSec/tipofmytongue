1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:15,320 --> 00:00:18,660
honored to be here this is always the

3
00:00:18,660 --> 00:00:19,920
eyes actually always been my favorite

4
00:00:19,920 --> 00:00:21,960
concert no offense to ATC which I've

5
00:00:21,960 --> 00:00:23,820
also submitted to and had papers that

6
00:00:23,820 --> 00:00:26,340
attended but ostai has kind of been a

7
00:00:26,340 --> 00:00:28,920
special place for me historically

8
00:00:28,920 --> 00:00:30,960
so

9
00:00:30,960 --> 00:00:32,340
you know at first glance I'm going to

10
00:00:32,340 --> 00:00:34,020
tell you that there's security problems

11
00:00:34,020 --> 00:00:36,840
in open source and I would not be

12
00:00:36,840 --> 00:00:39,180
surprised one of these mics is on maybe

13
00:00:39,180 --> 00:00:41,600
this one

14
00:00:43,200 --> 00:00:46,500
well we'll find out

15
00:00:46,500 --> 00:00:48,420
um

16
00:00:48,420 --> 00:00:51,660
you know this is not news in some sense

17
00:00:51,660 --> 00:00:53,399
and I'm going to try to actually

18
00:00:53,399 --> 00:00:55,199
convince you that it is actually a bit

19
00:00:55,199 --> 00:00:58,140
of news and a few things have changed

20
00:00:58,140 --> 00:01:00,780
uh and that it actually is something we

21
00:01:00,780 --> 00:01:02,640
need to revisit way more seriously than

22
00:01:02,640 --> 00:01:04,199
we have so

23
00:01:04,199 --> 00:01:06,540
uh yes the first obvious thing is way

24
00:01:06,540 --> 00:01:07,979
more use of Open Source I'll get to that

25
00:01:07,979 --> 00:01:10,020
in a minute but really what's changed is

26
00:01:10,020 --> 00:01:13,799
it's permeated society and it's in a you

27
00:01:13,799 --> 00:01:15,360
know a lot of things that we depend on

28
00:01:15,360 --> 00:01:16,380
every day

29
00:01:16,380 --> 00:01:19,979
uh and that includes most Nations most

30
00:01:19,979 --> 00:01:21,540
nations are actively encouraging the use

31
00:01:21,540 --> 00:01:23,040
of Open Source and part because it's

32
00:01:23,040 --> 00:01:25,259
free but also in part because it's

33
00:01:25,259 --> 00:01:28,439
competitor LED sorry competitor freeze

34
00:01:28,439 --> 00:01:31,339
we're gonna fix this

35
00:01:38,360 --> 00:01:40,500
all right

36
00:01:40,500 --> 00:01:42,900
I'll move it a little more

37
00:01:42,900 --> 00:01:45,500
sure

38
00:01:46,680 --> 00:01:49,820
all right so

39
00:01:50,579 --> 00:01:53,040
because Nations count on it they're

40
00:01:53,040 --> 00:01:54,960
starting to get nervous about it and

41
00:01:54,960 --> 00:01:56,579
their answer to nervousness is

42
00:01:56,579 --> 00:01:57,780
regulation

43
00:01:57,780 --> 00:02:00,000
that's the real source of the Biden

44
00:02:00,000 --> 00:02:02,220
executive order which is not specific to

45
00:02:02,220 --> 00:02:04,140
open source but it absolutely explicitly

46
00:02:04,140 --> 00:02:06,659
covers open source and we've had many

47
00:02:06,659 --> 00:02:07,920
discussions with the government about

48
00:02:07,920 --> 00:02:09,598
that

49
00:02:09,598 --> 00:02:11,280
and maybe another thing that's going on

50
00:02:11,280 --> 00:02:12,840
here is we've changed the way we

51
00:02:12,840 --> 00:02:14,459
distribute open source from essentially

52
00:02:14,459 --> 00:02:16,500
something that came with your Linux

53
00:02:16,500 --> 00:02:19,319
distribution and was relatively vetted

54
00:02:19,319 --> 00:02:21,420
to something that comes from a range of

55
00:02:21,420 --> 00:02:23,340
package managers and is not vetted at

56
00:02:23,340 --> 00:02:24,360
all

57
00:02:24,360 --> 00:02:26,459
right so the way you receive open source

58
00:02:26,459 --> 00:02:29,160
actually is a less trustworthy path now

59
00:02:29,160 --> 00:02:30,780
than it used to be

60
00:02:30,780 --> 00:02:32,700
and finally maybe we've even picked some

61
00:02:32,700 --> 00:02:34,319
other security problems

62
00:02:34,319 --> 00:02:36,599
that have made these kinds of attacks

63
00:02:36,599 --> 00:02:38,879
more like the weakest link that's a

64
00:02:38,879 --> 00:02:40,920
unfounded statement I have no data for

65
00:02:40,920 --> 00:02:42,480
that but it does seem like there's been

66
00:02:42,480 --> 00:02:44,640
a shift in attacks especially in the

67
00:02:44,640 --> 00:02:47,238
last two years

68
00:02:49,019 --> 00:02:51,360
so open so we're successful and I spent

69
00:02:51,360 --> 00:02:53,819
a lot of time on this but big picture is

70
00:02:53,819 --> 00:02:57,060
growing like gangbusters right 2.2

71
00:02:57,060 --> 00:02:58,560
trillion downloads of Open Source

72
00:02:58,560 --> 00:03:00,599
packages last year six million new

73
00:03:00,599 --> 00:03:03,300
versions of things 800 000 new projects

74
00:03:03,300 --> 00:03:07,140
right that's 20 growth year over year

75
00:03:07,140 --> 00:03:09,959
and even proprietary applications 90 of

76
00:03:09,959 --> 00:03:11,819
them based on Forester did some

77
00:03:11,819 --> 00:03:14,220
interviews of developers in companies

78
00:03:14,220 --> 00:03:15,840
ninety percent of their applications

79
00:03:15,840 --> 00:03:18,060
have open source inside so this is not

80
00:03:18,060 --> 00:03:18,900
just

81
00:03:18,900 --> 00:03:20,400
you know

82
00:03:20,400 --> 00:03:22,620
open source is going to have different

83
00:03:22,620 --> 00:03:24,239
problems than proprietorship if I could

84
00:03:24,239 --> 00:03:26,159
actually argue that we need to fix the

85
00:03:26,159 --> 00:03:28,019
proprietary applications also but we

86
00:03:28,019 --> 00:03:30,420
can't see them the same way so if we can

87
00:03:30,420 --> 00:03:32,280
figure out how to fix open source well

88
00:03:32,280 --> 00:03:34,019
as a consequence also learn how to fix

89
00:03:34,019 --> 00:03:36,840
closed source right so this is our

90
00:03:36,840 --> 00:03:40,580
playing field to figure these things out

91
00:03:41,099 --> 00:03:43,319
critical Society well what do I mean

92
00:03:43,319 --> 00:03:44,819
when I say it's critical well I mean

93
00:03:44,819 --> 00:03:47,220
that it's in the basic things you use

94
00:03:47,220 --> 00:03:49,680
certainly Linux and open SSL and llvm

95
00:03:49,680 --> 00:03:51,480
and kubernetes I got into this because

96
00:03:51,480 --> 00:03:52,860
of kubernetes would come back at that

97
00:03:52,860 --> 00:03:55,680
point a little bit but these are you

98
00:03:55,680 --> 00:03:57,959
know widely used open source projects

99
00:03:57,959 --> 00:04:00,060
that Financial Services depend on lots

100
00:04:00,060 --> 00:04:02,519
of things depend on all clouds depend on

101
00:04:02,519 --> 00:04:05,159
open source in a huge way all connected

102
00:04:05,159 --> 00:04:08,760
devices right your smart TV is it spying

103
00:04:08,760 --> 00:04:11,879
on you how do you know I'll just say I

104
00:04:11,879 --> 00:04:13,319
don't connect my Smart TV to the

105
00:04:13,319 --> 00:04:14,760
internet

106
00:04:14,760 --> 00:04:18,180
recommend against it your Wi-Fi hotspot

107
00:04:18,180 --> 00:04:20,639
those are disaster relating to happen if

108
00:04:20,639 --> 00:04:22,440
you you know that running an old version

109
00:04:22,440 --> 00:04:24,360
of Linux with probably the admin root

110
00:04:24,360 --> 00:04:26,540
password

111
00:04:27,240 --> 00:04:28,860
electrical grids has already been

112
00:04:28,860 --> 00:04:32,580
attacks in Ukraine U.S and India the tax

113
00:04:32,580 --> 00:04:35,340
in U.S we know about because four

114
00:04:35,340 --> 00:04:37,139
Russians were indicted for attacking the

115
00:04:37,139 --> 00:04:39,060
US electrical grid there was no

116
00:04:39,060 --> 00:04:41,520
consequences but the attack did happen

117
00:04:41,520 --> 00:04:44,100
Water Supplies someone changed the

118
00:04:44,100 --> 00:04:46,080
chemical level of a water supply in

119
00:04:46,080 --> 00:04:48,180
Florida over the internet

120
00:04:48,180 --> 00:04:49,620
oil pipelines you've heard about

121
00:04:49,620 --> 00:04:52,020
ransomware Telco has a huge amount of

122
00:04:52,020 --> 00:04:54,360
Open Source in it right obviously TCP

123
00:04:54,360 --> 00:04:56,820
but much deeper than that open Flow lots

124
00:04:56,820 --> 00:04:58,080
and lots of use of Open Source which is

125
00:04:58,080 --> 00:05:00,120
great it's made telecommunications one

126
00:05:00,120 --> 00:05:02,880
of the more enlightened sectors

127
00:05:02,880 --> 00:05:04,740
and of course government itself agencies

128
00:05:04,740 --> 00:05:06,240
are using open source for all kinds of

129
00:05:06,240 --> 00:05:07,740
things so

130
00:05:07,740 --> 00:05:09,479
you know

131
00:05:09,479 --> 00:05:11,639
you should care that these things

132
00:05:11,639 --> 00:05:14,040
actually work

133
00:05:14,040 --> 00:05:15,900
right and of course there's lots of

134
00:05:15,900 --> 00:05:18,840
attacks they're all pretty significant I

135
00:05:18,840 --> 00:05:20,340
don't want to cover these others to say

136
00:05:20,340 --> 00:05:22,259
that each of these is like a big

137
00:05:22,259 --> 00:05:24,720
reaction for governments and for

138
00:05:24,720 --> 00:05:26,580
companies and this arrival rate is too

139
00:05:26,580 --> 00:05:27,960
high and this is not even counting them

140
00:05:27,960 --> 00:05:28,860
all

141
00:05:28,860 --> 00:05:30,720
right and so when you get this kind of

142
00:05:30,720 --> 00:05:33,060
arrival rate of big problems

143
00:05:33,060 --> 00:05:35,759
you get this top-down pressured fix it

144
00:05:35,759 --> 00:05:37,740
and so again that's partially the

145
00:05:37,740 --> 00:05:40,139
executive order but also it's like

146
00:05:40,139 --> 00:05:42,660
changes in federal regulations and nist

147
00:05:42,660 --> 00:05:44,759
has many new documents on what you need

148
00:05:44,759 --> 00:05:46,740
to do for procurement for U.S government

149
00:05:46,740 --> 00:05:49,320
and they're really driving about well we

150
00:05:49,320 --> 00:05:51,300
can't make developers do the right thing

151
00:05:51,300 --> 00:05:53,460
but we can control what we buy and say

152
00:05:53,460 --> 00:05:54,840
when we buy something we'll make sure it

153
00:05:54,840 --> 00:05:56,280
has all these security properties which

154
00:05:56,280 --> 00:05:57,539
by the way are not going to be easy to

155
00:05:57,539 --> 00:06:00,419
implement and they're not well specified

156
00:06:00,419 --> 00:06:03,419
but EU and UK have also had discussions

157
00:06:03,419 --> 00:06:05,100
about what they want to get out of their

158
00:06:05,100 --> 00:06:07,259
systems right what enforcement they're

159
00:06:07,259 --> 00:06:08,580
going to put what penalties are going to

160
00:06:08,580 --> 00:06:10,979
put in for software all these apply to

161
00:06:10,979 --> 00:06:12,300
open source whether or not The

162
00:06:12,300 --> 00:06:13,860
Regulators think about open source at

163
00:06:13,860 --> 00:06:14,699
all

164
00:06:14,699 --> 00:06:16,139
right so this might even be an

165
00:06:16,139 --> 00:06:17,580
existential threat to open source

166
00:06:17,580 --> 00:06:19,740
accidentally right which I'm working to

167
00:06:19,740 --> 00:06:21,720
prevent but I think it's it's on the

168
00:06:21,720 --> 00:06:22,500
table

169
00:06:22,500 --> 00:06:24,479
and finally if you're a citizen of these

170
00:06:24,479 --> 00:06:25,919
countries do you actually want them to

171
00:06:25,919 --> 00:06:27,539
care right you should want them to care

172
00:06:27,539 --> 00:06:28,860
about your electrical grid and your

173
00:06:28,860 --> 00:06:32,280
water supply and not to mention Airline

174
00:06:32,280 --> 00:06:34,380
scheduling and all kinds of things that

175
00:06:34,380 --> 00:06:37,380
depend on on software every day

176
00:06:37,380 --> 00:06:39,120
so

177
00:06:39,120 --> 00:06:42,180
this pressure is coming it's here now a

178
00:06:42,180 --> 00:06:44,160
little bit but it's going to keep coming

179
00:06:44,160 --> 00:06:45,960
and it's not just governments of course

180
00:06:45,960 --> 00:06:47,819
it's Brands too brands have been you

181
00:06:47,819 --> 00:06:50,400
know severely hurt by their software

182
00:06:50,400 --> 00:06:52,199
vulnerabilities the most famous of which

183
00:06:52,199 --> 00:06:54,000
was absolutely open source with Equifax

184
00:06:54,000 --> 00:06:56,280
using old version of java struts

185
00:06:56,280 --> 00:06:58,979
basically they're kind of almost gone

186
00:06:58,979 --> 00:07:01,280
they've you know had to be rescued

187
00:07:01,280 --> 00:07:03,780
largely wiped out of their sector there

188
00:07:03,780 --> 00:07:05,520
still exist but it's not the same

189
00:07:05,520 --> 00:07:07,500
company

190
00:07:07,500 --> 00:07:10,080
so they should also care

191
00:07:10,080 --> 00:07:11,520
so

192
00:07:11,520 --> 00:07:13,860
it's not an easy problem to fix in fact

193
00:07:13,860 --> 00:07:15,360
I would say in my career it's the

194
00:07:15,360 --> 00:07:17,280
hardest problem I've tried to fix and

195
00:07:17,280 --> 00:07:19,020
that's saying a lot I tried to fix you

196
00:07:19,020 --> 00:07:22,259
know Healthcare in India this is

197
00:07:22,259 --> 00:07:25,080
this is harder but let's talk about some

198
00:07:25,080 --> 00:07:27,000
fundamentals to figure out

199
00:07:27,000 --> 00:07:28,919
uh how we want to make some progress

200
00:07:28,919 --> 00:07:30,840
here so

201
00:07:30,840 --> 00:07:33,539
this is a famous quote from Eric Raymond

202
00:07:33,539 --> 00:07:35,099
when you kind of wrote one of the

203
00:07:35,099 --> 00:07:36,539
original open source paper to Cathedral

204
00:07:36,539 --> 00:07:38,819
in the bazaar given if eyeballs all bugs

205
00:07:38,819 --> 00:07:40,560
are shallow and the idea is that the

206
00:07:40,560 --> 00:07:42,599
transparency of Open Source inherently

207
00:07:42,599 --> 00:07:45,240
gives it a fast rate of bug fixing and

208
00:07:45,240 --> 00:07:47,099
implicit in that and often meant by that

209
00:07:47,099 --> 00:07:49,380
is it's more secure

210
00:07:49,380 --> 00:07:52,199
right and I think that's right on

211
00:07:52,199 --> 00:07:54,180
average there are more eyeballs and the

212
00:07:54,180 --> 00:07:56,280
transparency does help but it only helps

213
00:07:56,280 --> 00:07:57,840
on average it doesn't necessarily help

214
00:07:57,840 --> 00:08:00,599
on any given package and one of my

215
00:08:00,599 --> 00:08:02,639
things I want to convince you of is the

216
00:08:02,639 --> 00:08:04,919
eyeballs are not spread very well and we

217
00:08:04,919 --> 00:08:07,020
can that's a tool we have to fix this

218
00:08:07,020 --> 00:08:09,500
situation

219
00:08:12,000 --> 00:08:13,740
so let's start with the basics do you

220
00:08:13,740 --> 00:08:15,120
trust a package

221
00:08:15,120 --> 00:08:17,099
and my claim is sometimes packages have

222
00:08:17,099 --> 00:08:21,360
zero eyes on them that are effective and

223
00:08:21,360 --> 00:08:23,639
the first stat for that is we looked at

224
00:08:23,639 --> 00:08:24,960
all the open source packages we

225
00:08:24,960 --> 00:08:26,639
literally

226
00:08:26,639 --> 00:08:29,759
crawl them all uh and 30 of packages

227
00:08:29,759 --> 00:08:31,680
have a single maintainer

228
00:08:31,680 --> 00:08:35,219
so that has two problems one is

229
00:08:35,219 --> 00:08:37,260
individuals are

230
00:08:37,260 --> 00:08:38,760
highly random

231
00:08:38,760 --> 00:08:40,860
as a there's a distribution there's

232
00:08:40,860 --> 00:08:42,779
going to be a tail there that is not

233
00:08:42,779 --> 00:08:45,060
great but also there's no checks and

234
00:08:45,060 --> 00:08:46,560
balances for these packages if someone

235
00:08:46,560 --> 00:08:48,600
was to make a bad change no one's there

236
00:08:48,600 --> 00:08:49,980
to catch it because no one else is

237
00:08:49,980 --> 00:08:51,120
looking

238
00:08:51,120 --> 00:08:52,980
right so when I say zeroized it's not

239
00:08:52,980 --> 00:08:54,720
literally zero it's that we have the one

240
00:08:54,720 --> 00:08:56,700
person who's responsible and we're

241
00:08:56,700 --> 00:08:58,920
trusting them completely

242
00:08:58,920 --> 00:09:01,380
whether we know it or not

243
00:09:01,380 --> 00:09:02,940
I think you have a bunch of bad examples

244
00:09:02,940 --> 00:09:05,279
here of things that happen with single

245
00:09:05,279 --> 00:09:07,200
maintainers

246
00:09:07,200 --> 00:09:08,640
um the first one event stream is

247
00:09:08,640 --> 00:09:11,100
basically you know it's a it's a kind of

248
00:09:11,100 --> 00:09:12,540
a lot of these by the way are actually

249
00:09:12,540 --> 00:09:13,980
all of these are in this case they're

250
00:09:13,980 --> 00:09:16,620
mpm packages I'm not picking an npm but

251
00:09:16,620 --> 00:09:18,240
they are entertaining and they're using

252
00:09:18,240 --> 00:09:19,500
the front end so they tend to lead to

253
00:09:19,500 --> 00:09:22,800
things that are more spectacular

254
00:09:22,800 --> 00:09:24,420
uh

255
00:09:24,420 --> 00:09:26,580
you know this is a small package that

256
00:09:26,580 --> 00:09:29,519
doesn't do much but basically uh the

257
00:09:29,519 --> 00:09:30,899
attacker just asked the single

258
00:09:30,899 --> 00:09:32,220
maintainer if he could take it over

259
00:09:32,220 --> 00:09:33,959
because the single maintainer wasn't

260
00:09:33,959 --> 00:09:35,399
doing much with it

261
00:09:35,399 --> 00:09:36,959
and the maintainer did give it to him

262
00:09:36,959 --> 00:09:38,339
and said look it's the package I don't

263
00:09:38,339 --> 00:09:39,779
use anymore I don't really care about it

264
00:09:39,779 --> 00:09:41,700
this new guy wants to maintain it that's

265
00:09:41,700 --> 00:09:42,540
great

266
00:09:42,540 --> 00:09:43,440
right

267
00:09:43,440 --> 00:09:45,899
reasonable response the problem is the

268
00:09:45,899 --> 00:09:48,360
attacker of course who's Anonymous then

269
00:09:48,360 --> 00:09:51,180
put malware in it it still has 8 million

270
00:09:51,180 --> 00:09:53,399
distributions every week so widely used

271
00:09:53,399 --> 00:09:55,200
automatically deployed lots of places

272
00:09:55,200 --> 00:09:57,240
led to all kinds of credit card theft

273
00:09:57,240 --> 00:09:58,740
actually this one is Bitcoin mining

274
00:09:58,740 --> 00:10:00,480
that's another thing to change Bitcoin

275
00:10:00,480 --> 00:10:02,519
mining makes it profitable to do some of

276
00:10:02,519 --> 00:10:04,080
these attacks in a way that wasn't true

277
00:10:04,080 --> 00:10:06,720
before so you can get Bitcoin mining on

278
00:10:06,720 --> 00:10:09,060
8 million JavaScript front ends every

279
00:10:09,060 --> 00:10:12,300
week that's a pretty profitable thing

280
00:10:12,300 --> 00:10:13,800
uh

281
00:10:13,800 --> 00:10:16,560
another maintainer lost his credentials

282
00:10:16,560 --> 00:10:18,300
right because he wasn't using two-factor

283
00:10:18,300 --> 00:10:19,560
authentications you see a lot of

284
00:10:19,560 --> 00:10:22,080
authentication pushes in open source now

285
00:10:22,080 --> 00:10:24,300
uh another guy the left pad guy

286
00:10:24,300 --> 00:10:26,640
basically was in a trademark dispute got

287
00:10:26,640 --> 00:10:28,380
sick and tired of Open Source in general

288
00:10:28,380 --> 00:10:30,180
and just pulled his package except that

289
00:10:30,180 --> 00:10:32,100
it's widely used and lots of people

290
00:10:32,100 --> 00:10:34,560
missed it and so that broke the internet

291
00:10:34,560 --> 00:10:36,660
so to speak

292
00:10:36,660 --> 00:10:39,120
um and again this is not it's absolutely

293
00:10:39,120 --> 00:10:40,800
the person's right to remove their

294
00:10:40,800 --> 00:10:43,080
package right it's very clear that

295
00:10:43,080 --> 00:10:44,820
they're not obligated to keep it there

296
00:10:44,820 --> 00:10:47,760
or to maintain it even right so that's

297
00:10:47,760 --> 00:10:49,860
that's on us for assuming that it needs

298
00:10:49,860 --> 00:10:51,839
to keep working the other thing is bad

299
00:10:51,839 --> 00:10:54,480
about this is an 11 line package right

300
00:10:54,480 --> 00:10:57,360
it does left padding with spaces

301
00:10:57,360 --> 00:10:59,339
right so

302
00:10:59,339 --> 00:11:00,899
we shouldn't depend on a level line

303
00:11:00,899 --> 00:11:02,880
package it's just as a general rule from

304
00:11:02,880 --> 00:11:04,740
random people I'll just that's a bad

305
00:11:04,740 --> 00:11:06,600
president

306
00:11:06,600 --> 00:11:09,540
most recently colors.js was this package

307
00:11:09,540 --> 00:11:11,040
where

308
00:11:11,040 --> 00:11:14,279
um the maintainer who was in was

309
00:11:14,279 --> 00:11:16,500
protesting the invasion of Ukraine made

310
00:11:16,500 --> 00:11:19,620
a version that was mostly innocuous

311
00:11:19,620 --> 00:11:22,920
supporting Ukraine with I believe a

312
00:11:22,920 --> 00:11:27,540
of a piece logo uh if you ran it in

313
00:11:27,540 --> 00:11:29,160
Russia it actually deleted the files on

314
00:11:29,160 --> 00:11:30,779
your system

315
00:11:30,779 --> 00:11:33,180
so it was it was also an attack and that

316
00:11:33,180 --> 00:11:35,160
was a bit disputed but it was good

317
00:11:35,160 --> 00:11:36,300
sources now that said that actually

318
00:11:36,300 --> 00:11:38,339
happened the point is an individual

319
00:11:38,339 --> 00:11:41,100
maintainer has this power and it's an

320
00:11:41,100 --> 00:11:43,440
unchecked power essentially today

321
00:11:43,440 --> 00:11:45,660
It's really because again we're assuming

322
00:11:45,660 --> 00:11:47,100
there's enough eyes to prevent these

323
00:11:47,100 --> 00:11:49,019
kinds of things and on average that's

324
00:11:49,019 --> 00:11:50,040
right

325
00:11:50,040 --> 00:11:53,240
but only on average

326
00:11:53,760 --> 00:11:55,920
but not just one package when you get to

327
00:11:55,920 --> 00:11:57,959
lots and lots of packages you have a

328
00:11:57,959 --> 00:11:59,760
totally different problem

329
00:11:59,760 --> 00:12:02,040
right 90 of your vulnerabilities are not

330
00:12:02,040 --> 00:12:03,300
in the package that you're thinking

331
00:12:03,300 --> 00:12:04,920
about they're in the dependencies of the

332
00:12:04,920 --> 00:12:06,000
packages

333
00:12:06,000 --> 00:12:07,680
and dependencies especially when using

334
00:12:07,680 --> 00:12:11,519
11 line packages are very long and deep

335
00:12:11,519 --> 00:12:13,440
right there's hundreds and hundreds of

336
00:12:13,440 --> 00:12:15,120
packages like I got in this because

337
00:12:15,120 --> 00:12:18,839
kubernetes has had at the time like 1200

338
00:12:18,839 --> 00:12:22,260
dependencies and I you know they weren't

339
00:12:22,260 --> 00:12:24,240
all trustworthy and this was about 2018

340
00:12:24,240 --> 00:12:25,560
when I started thinking about this

341
00:12:25,560 --> 00:12:27,240
problem

342
00:12:27,240 --> 00:12:29,100
and we have that many dependencies you

343
00:12:29,100 --> 00:12:31,440
can't really look at them all and even

344
00:12:31,440 --> 00:12:32,579
if you could look at them all and say

345
00:12:32,579 --> 00:12:34,019
okay I'm going to do an audit and check

346
00:12:34,019 --> 00:12:35,399
them

347
00:12:35,399 --> 00:12:37,920
are you going to do the same audit in

348
00:12:37,920 --> 00:12:41,040
next month next quarter because they're

349
00:12:41,040 --> 00:12:42,360
all changing all the time right

350
00:12:42,360 --> 00:12:44,639
kubernetes has like 45 commits a day

351
00:12:44,639 --> 00:12:45,660
every day

352
00:12:45,660 --> 00:12:47,339
right it's changing all the time so how

353
00:12:47,339 --> 00:12:48,480
are you gonna

354
00:12:48,480 --> 00:12:49,920
keep up

355
00:12:49,920 --> 00:12:51,899
lock for J is another example of this

356
00:12:51,899 --> 00:12:54,540
where it was used is used in eight

357
00:12:54,540 --> 00:12:56,220
percent of all Java packages which means

358
00:12:56,220 --> 00:12:59,459
it has very wide reach right it's deep

359
00:12:59,459 --> 00:13:01,019
in the stack though in all these things

360
00:13:01,019 --> 00:13:03,720
right it's not at the top and so it's

361
00:13:03,720 --> 00:13:06,060
very hard to even know all the places

362
00:13:06,060 --> 00:13:08,459
you use log4j and many corporations had

363
00:13:08,459 --> 00:13:11,399
a kind of you know emergency situation

364
00:13:11,399 --> 00:13:13,260
Google included where let's go find all

365
00:13:13,260 --> 00:13:14,820
the uses of log for J because we don't

366
00:13:14,820 --> 00:13:16,620
have an inventory we don't have an index

367
00:13:16,620 --> 00:13:19,260
we have grep that's our tool of choice

368
00:13:19,260 --> 00:13:21,360
for finding log for J not a great tool

369
00:13:21,360 --> 00:13:23,700
for that use case again because it only

370
00:13:23,700 --> 00:13:25,019
that only helps to find Direct

371
00:13:25,019 --> 00:13:26,940
dependencies

372
00:13:26,940 --> 00:13:29,459
so and even if you could find it it's

373
00:13:29,459 --> 00:13:31,079
because it's the deep in the stack you

374
00:13:31,079 --> 00:13:32,639
have to literally fix everything from

375
00:13:32,639 --> 00:13:34,500
your application through all the

376
00:13:34,500 --> 00:13:35,940
packages down to the thing that's

377
00:13:35,940 --> 00:13:37,260
actually got the vulnerability because

378
00:13:37,260 --> 00:13:39,240
all of them need to have at least a

379
00:13:39,240 --> 00:13:41,339
version bump and if any of those things

380
00:13:41,339 --> 00:13:43,560
are on older versions you have to

381
00:13:43,560 --> 00:13:46,740
basically change the call site to bring

382
00:13:46,740 --> 00:13:48,600
up to be able to use the new version

383
00:13:48,600 --> 00:13:51,540
then you get the security patch so it's

384
00:13:51,540 --> 00:13:53,040
very common Google has this problem too

385
00:13:53,040 --> 00:13:55,139
to get stuck on an old version because

386
00:13:55,139 --> 00:13:57,720
you can't just do a trivial upgrade you

387
00:13:57,720 --> 00:13:59,579
actually have to rewrite the calls

388
00:13:59,579 --> 00:14:01,079
because the semantics have slightly

389
00:14:01,079 --> 00:14:02,040
changed

390
00:14:02,040 --> 00:14:03,899
and you know we have certain things

391
00:14:03,899 --> 00:14:05,519
inside like the Pearl registration

392
00:14:05,519 --> 00:14:06,839
Library we've been trying to get rid of

393
00:14:06,839 --> 00:14:09,420
that for for years but all the uses of

394
00:14:09,420 --> 00:14:11,220
it are slightly different they're not

395
00:14:11,220 --> 00:14:13,139
you have to look at each one to figure

396
00:14:13,139 --> 00:14:14,820
out how to rewrite it and make sure it's

397
00:14:14,820 --> 00:14:17,519
safe so you just gets stuck

398
00:14:17,519 --> 00:14:19,620
all right so it's really actually quite

399
00:14:19,620 --> 00:14:21,360
hard to deal with these deep in the

400
00:14:21,360 --> 00:14:24,139
stack dependencies

401
00:14:25,500 --> 00:14:28,680
we made a tool uh Google open source

402
00:14:28,680 --> 00:14:31,860
insights at the site depths.dev uh it's

403
00:14:31,860 --> 00:14:33,300
pretty useful for this it's free

404
00:14:33,300 --> 00:14:35,399
basically you put in your package it

405
00:14:35,399 --> 00:14:37,440
will tell you transitively all the

406
00:14:37,440 --> 00:14:38,940
things it uses and all of the

407
00:14:38,940 --> 00:14:40,740
vulnerabilities in those things

408
00:14:40,740 --> 00:14:42,720
right that's a super useful tool if you

409
00:14:42,720 --> 00:14:44,699
do any work in open source please try it

410
00:14:44,699 --> 00:14:47,519
uh you'll be scared by what you find but

411
00:14:47,519 --> 00:14:49,560
at least you'll find it right awareness

412
00:14:49,560 --> 00:14:51,240
is the first step

413
00:14:51,240 --> 00:14:54,480
the picture on the right is the

414
00:14:54,480 --> 00:14:56,880
dependency graph for kubernetes

415
00:14:56,880 --> 00:14:58,500
although it's only part of it because it

416
00:14:58,500 --> 00:15:00,420
wouldn't fit on the slide

417
00:15:00,420 --> 00:15:02,639
realistically right so

418
00:15:02,639 --> 00:15:04,440
this is the picture that roughly scared

419
00:15:04,440 --> 00:15:07,199
me I'm like oh we got a problem

420
00:15:07,199 --> 00:15:09,540
I spent a lot of my last 10 years on

421
00:15:09,540 --> 00:15:11,959
kubernetes if you don't know that so uh

422
00:15:11,959 --> 00:15:14,579
tell me I care deeply about I'm happy

423
00:15:14,579 --> 00:15:15,720
with how it's turned out but I don't

424
00:15:15,720 --> 00:15:17,279
want it to crash because it's got

425
00:15:17,279 --> 00:15:20,040
security problems right

426
00:15:20,040 --> 00:15:22,019
and and you know since then we've

427
00:15:22,019 --> 00:15:23,639
reduced the number of dependencies we

428
00:15:23,639 --> 00:15:26,040
still have plenty of work to do so it is

429
00:15:26,040 --> 00:15:28,019
possible to make progress but this is a

430
00:15:28,019 --> 00:15:30,120
great tool to actually understand your

431
00:15:30,120 --> 00:15:32,600
dependencies

432
00:15:33,540 --> 00:15:34,740
and I'm going to shift gears a little

433
00:15:34,740 --> 00:15:36,360
bit and say well what happened when

434
00:15:36,360 --> 00:15:39,720
these log for Jay incident happened and

435
00:15:39,720 --> 00:15:42,779
this is a a legal I'll explain it more

436
00:15:42,779 --> 00:15:45,540
on the next page but basically this guy

437
00:15:45,540 --> 00:15:48,839
who uses just just normal provider of

438
00:15:48,839 --> 00:15:51,600
Open Source got this legal letter and

439
00:15:51,600 --> 00:15:54,240
basically the essence of it is we use

440
00:15:54,240 --> 00:15:56,699
your thing that uses log for J so we

441
00:15:56,699 --> 00:15:59,279
need you to fix it in 24 hours

442
00:15:59,279 --> 00:16:01,260
uh and you need to tell us if you had

443
00:16:01,260 --> 00:16:03,240
any incidents and what was affected also

444
00:16:03,240 --> 00:16:05,639
did you lose any personal data and what

445
00:16:05,639 --> 00:16:07,680
is your remediation plan with steps and

446
00:16:07,680 --> 00:16:08,639
dates

447
00:16:08,639 --> 00:16:10,620
right that's a you can imagine that

448
00:16:10,620 --> 00:16:14,519
legalese letter and that uh it says all

449
00:16:14,519 --> 00:16:19,320
well documented online uh but

450
00:16:19,320 --> 00:16:22,019
you know this is not how open source

451
00:16:22,019 --> 00:16:25,320
works right you don't get to send legal

452
00:16:25,320 --> 00:16:28,320
letters to your open source suppliers

453
00:16:28,320 --> 00:16:31,440
in fact it's very clear that open source

454
00:16:31,440 --> 00:16:33,600
is free but as is it literally says that

455
00:16:33,600 --> 00:16:35,160
on every file

456
00:16:35,160 --> 00:16:37,079
that's what the license says that's one

457
00:16:37,079 --> 00:16:38,459
of the light things license says right

458
00:16:38,459 --> 00:16:42,000
you know no liability but you use it as

459
00:16:42,000 --> 00:16:45,240
is at your own risk

460
00:16:45,240 --> 00:16:48,000
and that's the right policy given that

461
00:16:48,000 --> 00:16:49,079
it's

462
00:16:49,079 --> 00:16:51,180
to large extent by research constrained

463
00:16:51,180 --> 00:16:53,459
developers often volunteers

464
00:16:53,459 --> 00:16:55,740
you know limited investment for ongoing

465
00:16:55,740 --> 00:16:56,820
maintenance or really for anything

466
00:16:56,820 --> 00:16:59,100
that's mundane it's hard to get

467
00:16:59,100 --> 00:17:01,800
maintainers to do the stuff that's not

468
00:17:01,800 --> 00:17:04,079
the fun stuff and I don't blame them

469
00:17:04,079 --> 00:17:07,679
right I did a lot of Open Source work I

470
00:17:07,679 --> 00:17:09,599
did the fun stuff

471
00:17:09,599 --> 00:17:13,079
right no one wants to go do like the

472
00:17:13,079 --> 00:17:15,240
unfun stuff especially if it's a

473
00:17:15,240 --> 00:17:17,459
volunteer job

474
00:17:17,459 --> 00:17:19,020
um and so there's a high it doesn't mean

475
00:17:19,020 --> 00:17:20,579
all maintainers don't do that some do a

476
00:17:20,579 --> 00:17:22,500
great job but they you know they have to

477
00:17:22,500 --> 00:17:23,939
understand it and they of course there's

478
00:17:23,939 --> 00:17:25,799
going to be a wide variation of what

479
00:17:25,799 --> 00:17:28,559
people actually do on on this what I

480
00:17:28,559 --> 00:17:31,460
call the mundane work

481
00:17:31,919 --> 00:17:33,960
so

482
00:17:33,960 --> 00:17:35,280
we're wrapping with this part I think

483
00:17:35,280 --> 00:17:38,340
things can be secure

484
00:17:38,340 --> 00:17:40,559
and many eyes do make all bugs shallow

485
00:17:40,559 --> 00:17:42,000
we just have to make sure we're getting

486
00:17:42,000 --> 00:17:43,980
eyes on the right things

487
00:17:43,980 --> 00:17:46,799
and so I'm going to shift gears and talk

488
00:17:46,799 --> 00:17:50,100
about one idea that I've been pushing uh

489
00:17:50,100 --> 00:17:52,860
to fix this called curation it's not a

490
00:17:52,860 --> 00:17:55,020
new idea although it's an extension of

491
00:17:55,020 --> 00:17:57,120
as you'll see of things that we've been

492
00:17:57,120 --> 00:17:58,559
doing

493
00:17:58,559 --> 00:18:00,299
and I mentioned that we don't really get

494
00:18:00,299 --> 00:18:02,520
open source the same way as we used to

495
00:18:02,520 --> 00:18:04,320
and what I really mean by that is is

496
00:18:04,320 --> 00:18:06,600
this slide which is there's really two

497
00:18:06,600 --> 00:18:09,179
roles for a supplier of Open Source that

498
00:18:09,179 --> 00:18:11,460
we need to think about one is the

499
00:18:11,460 --> 00:18:13,799
distribution how do I get open source

500
00:18:13,799 --> 00:18:16,140
you know from the suppliers and the

501
00:18:16,140 --> 00:18:19,020
other is accountability who's going to

502
00:18:19,020 --> 00:18:21,299
fix it when it breaks

503
00:18:21,299 --> 00:18:24,720
right and package managers which is the

504
00:18:24,720 --> 00:18:27,660
main way people get packages now they do

505
00:18:27,660 --> 00:18:29,340
a fantastic job in distribution that's

506
00:18:29,340 --> 00:18:31,860
what they do they are fantastic for

507
00:18:31,860 --> 00:18:33,179
distribution that's why they're popular

508
00:18:33,179 --> 00:18:35,039
they have all the packages right

509
00:18:35,039 --> 00:18:36,419
including all the ones you shouldn't be

510
00:18:36,419 --> 00:18:37,860
using

511
00:18:37,860 --> 00:18:40,200
um so they're great for that again

512
00:18:40,200 --> 00:18:42,360
they're delivering as is packages they

513
00:18:42,360 --> 00:18:45,439
make no promises either

514
00:18:45,780 --> 00:18:48,419
classically we had things like distros

515
00:18:48,419 --> 00:18:50,340
like a red hat or Debian where they were

516
00:18:50,340 --> 00:18:53,160
doing a mix they would do distribution

517
00:18:53,160 --> 00:18:55,020
but they were also doing some

518
00:18:55,020 --> 00:18:58,440
accountability so for example uh Debian

519
00:18:58,440 --> 00:18:59,820
would make sure that all their packages

520
00:18:59,820 --> 00:19:01,620
work together that actually requires

521
00:19:01,620 --> 00:19:04,919
work and effort rat hat famously gives

522
00:19:04,919 --> 00:19:06,720
you a support license where they'll fix

523
00:19:06,720 --> 00:19:08,940
the security bugs in the packages they

524
00:19:08,940 --> 00:19:10,980
give you and they'll do it even for old

525
00:19:10,980 --> 00:19:13,500
versions right so that really is the

526
00:19:13,500 --> 00:19:15,419
essence of curation it's a supported

527
00:19:15,419 --> 00:19:17,640
version of Open Source

528
00:19:17,640 --> 00:19:19,320
but red hat indeed me to do it for a

529
00:19:19,320 --> 00:19:21,900
kind of a narrow subset of low-level

530
00:19:21,900 --> 00:19:24,059
packages right they're not helping with

531
00:19:24,059 --> 00:19:26,520
mpm packages or your front-end

532
00:19:26,520 --> 00:19:29,700
JavaScript stuff right it's not in scope

533
00:19:29,700 --> 00:19:31,559
these roles distribution and

534
00:19:31,559 --> 00:19:33,840
accountability are real roles and we

535
00:19:33,840 --> 00:19:35,400
need to figure out who's going to play

536
00:19:35,400 --> 00:19:37,260
each role and it's actually perfectly

537
00:19:37,260 --> 00:19:39,299
fine for me if package managers just say

538
00:19:39,299 --> 00:19:41,880
we only do distribution but let's call

539
00:19:41,880 --> 00:19:43,679
it out and name it they only do

540
00:19:43,679 --> 00:19:46,380
distribution right they want to take on

541
00:19:46,380 --> 00:19:48,539
accountability that would be fantastic

542
00:19:48,539 --> 00:19:50,400
if a maintainer wants to do it that's

543
00:19:50,400 --> 00:19:51,660
fantastic

544
00:19:51,660 --> 00:19:54,000
right if no one does it that's not great

545
00:19:54,000 --> 00:19:55,799
but at least we should be talking about

546
00:19:55,799 --> 00:19:57,720
it that way there's no accountability

547
00:19:57,720 --> 00:20:01,880
for this package maybe we can fix that

548
00:20:02,280 --> 00:20:04,740
so you can think of curation as being

549
00:20:04,740 --> 00:20:07,620
this missing layer where we have this

550
00:20:07,620 --> 00:20:10,440
kind of amorphous top-down requirements

551
00:20:10,440 --> 00:20:12,240
whether they're from a executive order

552
00:20:12,240 --> 00:20:16,020
or from legal letters or you know

553
00:20:16,020 --> 00:20:20,100
corporate policy right versus our kind

554
00:20:20,100 --> 00:20:22,500
of bottom-up Open Source

555
00:20:22,500 --> 00:20:24,539
as is software right those are

556
00:20:24,539 --> 00:20:27,120
fundamentally incompatible right they

557
00:20:27,120 --> 00:20:29,940
just are right high expectations no

558
00:20:29,940 --> 00:20:32,640
promises right those don't work well

559
00:20:32,640 --> 00:20:34,860
together so curation in some sense has

560
00:20:34,860 --> 00:20:37,320
to be the thing that bridges that Gap

561
00:20:37,320 --> 00:20:39,120
you can think of it as curated open

562
00:20:39,120 --> 00:20:42,539
source with with support but it's more

563
00:20:42,539 --> 00:20:44,520
complicated than that because first it

564
00:20:44,520 --> 00:20:46,140
costs money to do this the good news is

565
00:20:46,140 --> 00:20:47,220
I think there's money in the system

566
00:20:47,220 --> 00:20:48,419
because the same people that have

567
00:20:48,419 --> 00:20:50,400
top-down pressure actually all have

568
00:20:50,400 --> 00:20:51,600
budgets

569
00:20:51,600 --> 00:20:55,320
right so we need to tie you want

570
00:20:55,320 --> 00:20:56,820
to you know get something that's

571
00:20:56,820 --> 00:20:59,220
supported you have to pay for that

572
00:20:59,220 --> 00:21:00,600
you know if we can get that money down

573
00:21:00,600 --> 00:21:02,160
to the maintainers that would be good

574
00:21:02,160 --> 00:21:04,200
too we'll talk about that a little bit

575
00:21:04,200 --> 00:21:05,880
but let's not shy away from the fact

576
00:21:05,880 --> 00:21:07,200
that this isn't going to be free and

577
00:21:07,200 --> 00:21:08,460
shouldn't be free

578
00:21:08,460 --> 00:21:11,280
this is things like Opex for testing is

579
00:21:11,280 --> 00:21:13,140
it fair to ask maintainers

580
00:21:13,140 --> 00:21:15,660
to pay a cloud to run their test cases

581
00:21:15,660 --> 00:21:17,100
using their own money

582
00:21:17,100 --> 00:21:18,480
clearly not

583
00:21:18,480 --> 00:21:20,460
right I think most clouds would be

584
00:21:20,460 --> 00:21:22,620
actually happy to help maintainers run

585
00:21:22,620 --> 00:21:24,059
their test cases if there was an easy

586
00:21:24,059 --> 00:21:25,980
mechanism to do that

587
00:21:25,980 --> 00:21:27,419
right so that's one thing that costs

588
00:21:27,419 --> 00:21:29,460
money independent of headcount the Opex

589
00:21:29,460 --> 00:21:32,039
is significant as well

590
00:21:32,039 --> 00:21:33,720
so you can think of curation as kind of

591
00:21:33,720 --> 00:21:36,120
Open Source with support

592
00:21:36,120 --> 00:21:38,039
and it you know if you're doing curation

593
00:21:38,039 --> 00:21:39,480
it means you're fixing vulnerabilities

594
00:21:39,480 --> 00:21:42,480
it means you're updating old vulnerable

595
00:21:42,480 --> 00:21:44,460
dependencies so if log4j is something

596
00:21:44,460 --> 00:21:46,919
your thing uses then you need to fix the

597
00:21:46,919 --> 00:21:50,520
path of dependencies up to your thing uh

598
00:21:50,520 --> 00:21:52,740
you need to work on automation you need

599
00:21:52,740 --> 00:21:55,500
to work on uh testing in general most

600
00:21:55,500 --> 00:21:57,360
problem most of the time when we have a

601
00:21:57,360 --> 00:22:00,000
fix for open source we don't really know

602
00:22:00,000 --> 00:22:01,380
if it works all that well because there

603
00:22:01,380 --> 00:22:02,940
aren't enough test cases that say yes

604
00:22:02,940 --> 00:22:05,039
this will work and not break stuff

605
00:22:05,039 --> 00:22:07,200
but again writing test cases goes in the

606
00:22:07,200 --> 00:22:09,840
mundane work category and it tends to be

607
00:22:09,840 --> 00:22:12,240
underfunded

608
00:22:12,240 --> 00:22:13,919
so test case is another thing that

609
00:22:13,919 --> 00:22:16,260
curators should do uh but another way I

610
00:22:16,260 --> 00:22:17,580
think about this is this is about

611
00:22:17,580 --> 00:22:19,320
putting eyeballs and the things we care

612
00:22:19,320 --> 00:22:21,600
about so you know we're starting to look

613
00:22:21,600 --> 00:22:23,400
at what is critical to financial

614
00:22:23,400 --> 00:22:25,760
services into electrical grids into

615
00:22:25,760 --> 00:22:27,960
agencies and we can actually say oh

616
00:22:27,960 --> 00:22:29,580
these things look like they're critical

617
00:22:29,580 --> 00:22:31,740
lock for J is critical we didn't know

618
00:22:31,740 --> 00:22:33,600
that before now we know it's critical

619
00:22:33,600 --> 00:22:35,640
we can put eyes on it through curation

620
00:22:35,640 --> 00:22:37,980
right curation is a way to take money

621
00:22:37,980 --> 00:22:39,720
and turn it into eyes on the things that

622
00:22:39,720 --> 00:22:41,400
we care about

623
00:22:41,400 --> 00:22:43,380
and of course you'd like this to be like

624
00:22:43,380 --> 00:22:44,880
any other support well maybe there's

625
00:22:44,880 --> 00:22:46,740
some service level agreement maybe

626
00:22:46,740 --> 00:22:48,059
there's some liability protection

627
00:22:48,059 --> 00:22:50,039
probably could get reduced cyber

628
00:22:50,039 --> 00:22:51,600
insurance rates which actually is a real

629
00:22:51,600 --> 00:22:53,039
thing and that would make you know

630
00:22:53,039 --> 00:22:54,480
people more likely to use curated

631
00:22:54,480 --> 00:22:56,280
software if they got discounts on their

632
00:22:56,280 --> 00:22:59,480
cyber security insurance

633
00:22:59,820 --> 00:23:01,440
but of course it can't just be a simple

634
00:23:01,440 --> 00:23:04,500
layer and so I'll just draw some ways

635
00:23:04,500 --> 00:23:05,880
this could work

636
00:23:05,880 --> 00:23:07,919
uh you know it could be that you have

637
00:23:07,919 --> 00:23:09,480
your top-down expectations and by the

638
00:23:09,480 --> 00:23:10,440
way there aren't one set of those

639
00:23:10,440 --> 00:23:12,059
there's many sets of those certainly is

640
00:23:12,059 --> 00:23:14,039
a different set for each country and

641
00:23:14,039 --> 00:23:17,159
maybe even each state but also you know

642
00:23:17,159 --> 00:23:18,840
corporations or sectors are going to

643
00:23:18,840 --> 00:23:21,419
have different expectations

644
00:23:21,419 --> 00:23:24,480
and so you can you know say well one way

645
00:23:24,480 --> 00:23:26,159
to do curator is I'm going to have a

646
00:23:26,159 --> 00:23:29,940
maintainer who also does support and you

647
00:23:29,940 --> 00:23:31,740
just pay the maintainer directly and

648
00:23:31,740 --> 00:23:33,360
that would be great that doesn't really

649
00:23:33,360 --> 00:23:35,400
happen today it does for like open SSL

650
00:23:35,400 --> 00:23:37,679
because a heart bleed we you know

651
00:23:37,679 --> 00:23:39,780
there's two two Steves working on heart

652
00:23:39,780 --> 00:23:41,280
bleed part work on open to sell

653
00:23:41,280 --> 00:23:43,740
part-time post heart bleed the industry

654
00:23:43,740 --> 00:23:44,880
decided we should really pay those

655
00:23:44,880 --> 00:23:45,900
people

656
00:23:45,900 --> 00:23:47,940
right that's a critical thing they

657
00:23:47,940 --> 00:23:49,500
should be able to work on it full time

658
00:23:49,500 --> 00:23:51,419
versus part-time

659
00:23:51,419 --> 00:23:53,280
you can get monetized open source

660
00:23:53,280 --> 00:23:54,659
something like data bricks where you can

661
00:23:54,659 --> 00:23:57,480
use Spark the open source version but if

662
00:23:57,480 --> 00:24:00,360
you get a company version that does in

663
00:24:00,360 --> 00:24:02,820
fact come essentially curated right I've

664
00:24:02,820 --> 00:24:04,320
not talked to databricks about this I'm

665
00:24:04,320 --> 00:24:06,179
sure this databricks pokes folks in the

666
00:24:06,179 --> 00:24:08,700
audience but I would assume like with

667
00:24:08,700 --> 00:24:10,260
gke which is the Google version of

668
00:24:10,260 --> 00:24:13,080
kubernetes if you use gke we're going to

669
00:24:13,080 --> 00:24:14,640
fix whatever we know about in kubernetes

670
00:24:14,640 --> 00:24:17,940
that that makes it have a support system

671
00:24:17,940 --> 00:24:19,020
for you

672
00:24:19,020 --> 00:24:21,780
so if when there's companies monetizing

673
00:24:21,780 --> 00:24:23,640
open source that could be the mechanism

674
00:24:23,640 --> 00:24:25,919
for curation

675
00:24:25,919 --> 00:24:28,020
but also just philosophically there's

676
00:24:28,020 --> 00:24:29,760
going to be curators of curators it

677
00:24:29,760 --> 00:24:30,960
might be that there's a financial

678
00:24:30,960 --> 00:24:32,760
services curator and they only work on

679
00:24:32,760 --> 00:24:34,020
things that are specific to that

680
00:24:34,020 --> 00:24:36,179
industry uh

681
00:24:36,179 --> 00:24:39,059
but they then want to work with you know

682
00:24:39,059 --> 00:24:41,280
Red Hats and others to kind of get the

683
00:24:41,280 --> 00:24:42,120
sub

684
00:24:42,120 --> 00:24:44,940
dependencies curated right so curators

685
00:24:44,940 --> 00:24:47,220
of curators is a very logical thing to

686
00:24:47,220 --> 00:24:48,659
do in this model and I think we'll see

687
00:24:48,659 --> 00:24:51,200
that as well

688
00:24:52,880 --> 00:24:54,720
Google's trying to experiment in this

689
00:24:54,720 --> 00:24:57,120
now we've announced but have not really

690
00:24:57,120 --> 00:24:59,340
launched yet a product called assured

691
00:24:59,340 --> 00:25:01,320
OSS and it's you should think it was

692
00:25:01,320 --> 00:25:03,900
just a trial experiment in curation

693
00:25:03,900 --> 00:25:07,020
and what it is is we're already using a

694
00:25:07,020 --> 00:25:09,240
bunch of packages internally where we do

695
00:25:09,240 --> 00:25:12,059
do the security patches and we do track

696
00:25:12,059 --> 00:25:13,980
the dependencies because we use them and

697
00:25:13,980 --> 00:25:15,960
we need to since we're doing all the

698
00:25:15,960 --> 00:25:17,580
hard work we might as well make those

699
00:25:17,580 --> 00:25:19,860
versions available to others so right

700
00:25:19,860 --> 00:25:21,840
now is this going to be Java and python

701
00:25:21,840 --> 00:25:23,580
it might expand later

702
00:25:23,580 --> 00:25:25,620
it'll only start with like 100 packages

703
00:25:25,620 --> 00:25:27,600
or something but it's pretty possible

704
00:25:27,600 --> 00:25:30,120
you could add packages every quarter and

705
00:25:30,120 --> 00:25:31,080
get up to a pretty good number

706
00:25:31,080 --> 00:25:33,240
eventually so what do you get with a

707
00:25:33,240 --> 00:25:35,820
curated package well it means that

708
00:25:35,820 --> 00:25:37,080
we're going to do all the things we

709
00:25:37,080 --> 00:25:38,700
already do internally which is scan the

710
00:25:38,700 --> 00:25:41,279
packages run static analyzers run fuzz

711
00:25:41,279 --> 00:25:43,020
testing and fuzz testing by the way is

712
00:25:43,020 --> 00:25:44,940
also very expensive right so it's

713
00:25:44,940 --> 00:25:46,559
another place where you can't do fuzz

714
00:25:46,559 --> 00:25:49,559
testing without curation essentially

715
00:25:49,559 --> 00:25:52,559
uh we give you metadata about what tests

716
00:25:52,559 --> 00:25:55,740
we ran and why we believe it's viable

717
00:25:55,740 --> 00:25:58,500
we'll build it with metadata for

718
00:25:58,500 --> 00:26:00,120
building which I'll get to later but

719
00:26:00,120 --> 00:26:02,640
this also is we'll sign it so you know

720
00:26:02,640 --> 00:26:04,559
you have our version and then we'll you

721
00:26:04,559 --> 00:26:05,880
know put it in various places where you

722
00:26:05,880 --> 00:26:07,500
can easily access it

723
00:26:07,500 --> 00:26:10,020
and this is not to say that we're

724
00:26:10,020 --> 00:26:11,820
forking these things the purpose here is

725
00:26:11,820 --> 00:26:13,799
not to Fork them but you can't think of

726
00:26:13,799 --> 00:26:15,179
it in some senses we're going to make a

727
00:26:15,179 --> 00:26:17,820
temporary Fork to fix the problem while

728
00:26:17,820 --> 00:26:20,039
in parallel we try to Upstream the

729
00:26:20,039 --> 00:26:21,179
solution

730
00:26:21,179 --> 00:26:23,220
right which is what we do now but that

731
00:26:23,220 --> 00:26:24,960
can take a month or two or sometimes

732
00:26:24,960 --> 00:26:27,360
longer if the maintainers don't agree on

733
00:26:27,360 --> 00:26:30,000
how you solved it right so this is a way

734
00:26:30,000 --> 00:26:31,799
to get a secure version that someone

735
00:26:31,799 --> 00:26:34,740
stands behind get it quickly

736
00:26:34,740 --> 00:26:38,460
and then but not Fork it right so far we

737
00:26:38,460 --> 00:26:39,840
haven't had to Fork anything but we're

738
00:26:39,840 --> 00:26:41,820
also picking packages that are kind of

739
00:26:41,820 --> 00:26:43,320
relatively stable too

740
00:26:43,320 --> 00:26:44,880
so that's the experiment we'll see how

741
00:26:44,880 --> 00:26:46,919
it goes

742
00:26:46,919 --> 00:26:49,080
what should you want out of a curator if

743
00:26:49,080 --> 00:26:50,760
you're a maintainer and I say it this

744
00:26:50,760 --> 00:26:53,279
way because again maintainers are still

745
00:26:53,279 --> 00:26:55,860
operating in the free as is mindset as

746
00:26:55,860 --> 00:26:57,059
they should

747
00:26:57,059 --> 00:26:58,260
so they don't even have to work with

748
00:26:58,260 --> 00:26:59,820
curators at all

749
00:26:59,820 --> 00:27:01,440
right and that would be a shame so we

750
00:27:01,440 --> 00:27:04,020
want to treat this as a two-way street

751
00:27:04,020 --> 00:27:06,120
and say well maintainers should be

752
00:27:06,120 --> 00:27:07,799
getting something out of this deal

753
00:27:07,799 --> 00:27:10,020
and part of it is you know good curators

754
00:27:10,020 --> 00:27:12,440
should actually be making contributions

755
00:27:12,440 --> 00:27:15,419
you know not requests not legal letters

756
00:27:15,419 --> 00:27:18,779
but actual here's fixes here's test

757
00:27:18,779 --> 00:27:22,820
cases here's good pull requests

758
00:27:22,820 --> 00:27:25,140
uh you know I think it's pretty

759
00:27:25,140 --> 00:27:26,880
plausible and this is a place where I

760
00:27:26,880 --> 00:27:29,580
think Community could help to do a

761
00:27:29,580 --> 00:27:31,559
better job of of proof of automated

762
00:27:31,559 --> 00:27:34,740
testing so for example if I have an easy

763
00:27:34,740 --> 00:27:37,080
token that shows that yes here's some

764
00:27:37,080 --> 00:27:38,880
changes and I can prove that my changes

765
00:27:38,880 --> 00:27:41,580
past all your test cases right that

766
00:27:41,580 --> 00:27:43,320
would be very useful for a reviewer

767
00:27:43,320 --> 00:27:44,820
trying to decide is this change worth

768
00:27:44,820 --> 00:27:47,340
accepting is it risky or not right so

769
00:27:47,340 --> 00:27:49,020
there's lots of things where maintainers

770
00:27:49,020 --> 00:27:50,340
and curators could work well together

771
00:27:50,340 --> 00:27:52,140
with a little bit more infrastructure

772
00:27:52,140 --> 00:27:54,240
help

773
00:27:54,240 --> 00:27:56,279
be nice to share the wealth I do think

774
00:27:56,279 --> 00:27:58,380
there's a path down going forward where

775
00:27:58,380 --> 00:28:00,000
either directly or indirectly through

776
00:28:00,000 --> 00:28:01,380
foundations I'll get to the foundation

777
00:28:01,380 --> 00:28:02,820
in a minute

778
00:28:02,820 --> 00:28:05,100
curators they're getting paid and are

779
00:28:05,100 --> 00:28:07,260
using dependencies they can share some

780
00:28:07,260 --> 00:28:08,520
of that wealth to make sure the things

781
00:28:08,520 --> 00:28:10,260
that they care about are fixed because

782
00:28:10,260 --> 00:28:12,299
again the trade-off is if they don't get

783
00:28:12,299 --> 00:28:13,679
it fixed by someone else they have to

784
00:28:13,679 --> 00:28:15,120
fix it themselves

785
00:28:15,120 --> 00:28:17,279
right and so there is some value in

786
00:28:17,279 --> 00:28:18,659
there and paying a third party to fix

787
00:28:18,659 --> 00:28:20,820
stuff even if it's a maintainer or maybe

788
00:28:20,820 --> 00:28:22,860
especially if it's a maintainer

789
00:28:22,860 --> 00:28:24,419
and then once you get to a crisis like

790
00:28:24,419 --> 00:28:25,860
log4j

791
00:28:25,860 --> 00:28:28,200
you should be you know curator should be

792
00:28:28,200 --> 00:28:29,940
driving a lot of that incident response

793
00:28:29,940 --> 00:28:31,940
and helping with a lot of the the

794
00:28:31,940 --> 00:28:34,080
difficulties of doing that it's actually

795
00:28:34,080 --> 00:28:36,900
quite hard on a small

796
00:28:36,900 --> 00:28:39,919
open source package team to deal with

797
00:28:39,919 --> 00:28:42,960
any kind of public security issue right

798
00:28:42,960 --> 00:28:46,080
they just the incoming emails incoming

799
00:28:46,080 --> 00:28:49,559
press requests right uh you know hate

800
00:28:49,559 --> 00:28:51,779
mail all kinds of stuff right so there's

801
00:28:51,779 --> 00:28:53,400
lots of room for help on that front as

802
00:28:53,400 --> 00:28:55,200
well

803
00:28:55,200 --> 00:28:57,600
and then again there's not any tooling

804
00:28:57,600 --> 00:28:59,100
for this generally speaking there's a

805
00:28:59,100 --> 00:29:01,559
little bit but you know in general I

806
00:29:01,559 --> 00:29:03,299
can't take a package off the internet

807
00:29:03,299 --> 00:29:05,700
and easily build and run as test cases

808
00:29:05,700 --> 00:29:09,120
right you have to know that specific

809
00:29:09,120 --> 00:29:12,059
communities process and their Jenkins

810
00:29:12,059 --> 00:29:14,520
files or whatever to do that right and

811
00:29:14,520 --> 00:29:15,720
it's actually a shame because I think

812
00:29:15,720 --> 00:29:17,880
again if people it was easy to run test

813
00:29:17,880 --> 00:29:19,919
cases more people would run them at

814
00:29:19,919 --> 00:29:22,760
their own expense

815
00:29:22,880 --> 00:29:25,980
osv is a vulnerability database it's an

816
00:29:25,980 --> 00:29:28,140
alternative to cves the problem with

817
00:29:28,140 --> 00:29:31,200
cves is they're very English oriented

818
00:29:31,200 --> 00:29:32,940
right they kind of they talk about a

819
00:29:32,940 --> 00:29:35,399
binary and they list in English problems

820
00:29:35,399 --> 00:29:37,860
that they found and that means it is not

821
00:29:37,860 --> 00:29:39,240
automatable

822
00:29:39,240 --> 00:29:40,799
and that works fine if you want to have

823
00:29:40,799 --> 00:29:43,080
a thousand cves a year does not work

824
00:29:43,080 --> 00:29:44,399
fine that you want to deal with the tens

825
00:29:44,399 --> 00:29:45,720
of thousands of vulnerabilities we

826
00:29:45,720 --> 00:29:47,940
actually have right we have to find a

827
00:29:47,940 --> 00:29:50,520
path to automation

828
00:29:50,520 --> 00:29:52,080
and I won't talk about this much but

829
00:29:52,080 --> 00:29:54,539
even things like how diversion numbers

830
00:29:54,539 --> 00:29:57,360
work resolution is when I have multiple

831
00:29:57,360 --> 00:29:58,919
demands on a package which version

832
00:29:58,919 --> 00:30:00,659
actually gets picked in general you

833
00:30:00,659 --> 00:30:02,520
can't know that today which means you

834
00:30:02,520 --> 00:30:03,960
don't really know ahead of time which

835
00:30:03,960 --> 00:30:05,700
version you're going to get of something

836
00:30:05,700 --> 00:30:07,380
in fact in general the only way to know

837
00:30:07,380 --> 00:30:08,940
which version you're going to use is to

838
00:30:08,940 --> 00:30:11,220
install it that's a problem for lots of

839
00:30:11,220 --> 00:30:12,840
reasons one reason's problem is when you

840
00:30:12,840 --> 00:30:15,299
install it you run it as you and it has

841
00:30:15,299 --> 00:30:17,760
init scripts that are untrusted but also

842
00:30:17,760 --> 00:30:20,399
run as you've been attacked just in the

843
00:30:20,399 --> 00:30:21,899
initialization Scripts

844
00:30:21,899 --> 00:30:25,380
uh and so you know there's lots of lots

845
00:30:25,380 --> 00:30:28,159
of things to fix here

846
00:30:28,860 --> 00:30:30,899
but then things get a little worse

847
00:30:30,899 --> 00:30:33,000
so all the Buddies talked about so far

848
00:30:33,000 --> 00:30:34,559
is just kind of

849
00:30:34,559 --> 00:30:37,380
the fundamentals of Open Source and how

850
00:30:37,380 --> 00:30:39,659
the Aziz model doesn't work with well

851
00:30:39,659 --> 00:30:41,220
with top-down pressure and how to

852
00:30:41,220 --> 00:30:43,200
address that

853
00:30:43,200 --> 00:30:45,299
supply chain attacks as I hope will

854
00:30:45,299 --> 00:30:47,520
convince you are kind of like a a big

855
00:30:47,520 --> 00:30:49,320
lever that make this problem a whole lot

856
00:30:49,320 --> 00:30:52,200
worse than it would otherwise be

857
00:30:52,200 --> 00:30:55,020
and reason for that is supply chain

858
00:30:55,020 --> 00:30:58,440
attacks really have two phases and the

859
00:30:58,440 --> 00:31:00,299
the first phase is kind of a normal

860
00:31:00,299 --> 00:31:02,100
attack like you could do with any of

861
00:31:02,100 --> 00:31:04,919
these single maintainer things or any

862
00:31:04,919 --> 00:31:07,559
weird dependency issues

863
00:31:07,559 --> 00:31:09,539
but you're attacking that first attack

864
00:31:09,539 --> 00:31:12,240
is on the supply chain and then the

865
00:31:12,240 --> 00:31:13,799
second phase of the attack is all the

866
00:31:13,799 --> 00:31:17,100
users of that you know uh

867
00:31:17,100 --> 00:31:20,880
tooling system right they get attacked

868
00:31:20,880 --> 00:31:23,460
and it's that amplification which can be

869
00:31:23,460 --> 00:31:25,620
like a factor of twenty thousand a

870
00:31:25,620 --> 00:31:27,299
factor of a hundred thousand that makes

871
00:31:27,299 --> 00:31:29,399
this attack so much worse right so

872
00:31:29,399 --> 00:31:32,039
solarwinds is the famous one here that's

873
00:31:32,039 --> 00:31:34,440
the proprietary closed Source system

874
00:31:34,440 --> 00:31:35,940
although it has a lot of Open Source

875
00:31:35,940 --> 00:31:38,340
inside as I said before

876
00:31:38,340 --> 00:31:41,159
and so you know you've attacked that

877
00:31:41,159 --> 00:31:43,380
that was literally attacked in the build

878
00:31:43,380 --> 00:31:46,320
process of solarwinds Orion thing that

879
00:31:46,320 --> 00:31:48,539
gets distributed now the malware is

880
00:31:48,539 --> 00:31:50,880
inside something that comes from solar

881
00:31:50,880 --> 00:31:53,760
winds runs you know deep the network of

882
00:31:53,760 --> 00:31:55,980
their customers does lots of bad stuff

883
00:31:55,980 --> 00:31:58,500
right and that was a pretty scary that's

884
00:31:58,500 --> 00:32:00,600
really the event that most led to the

885
00:32:00,600 --> 00:32:03,000
Cyber Security executive order because

886
00:32:03,000 --> 00:32:05,760
it was clear it was affecting 20 000

887
00:32:05,760 --> 00:32:07,440
companies we don't even know the full

888
00:32:07,440 --> 00:32:08,760
number

889
00:32:08,760 --> 00:32:10,559
I'm going to talk about code Cove which

890
00:32:10,559 --> 00:32:12,360
is the same kind of attack but on open

891
00:32:12,360 --> 00:32:14,700
source and because it's an open source

892
00:32:14,700 --> 00:32:17,039
we know a lot more about it and it's

893
00:32:17,039 --> 00:32:18,720
it's uh more representative for the

894
00:32:18,720 --> 00:32:20,039
kinds of things I'm talking about here

895
00:32:20,039 --> 00:32:22,279
today

896
00:32:22,620 --> 00:32:25,620
uh this kind of attack up 650 last year

897
00:32:25,620 --> 00:32:27,539
over the year before so this is now in

898
00:32:27,539 --> 00:32:29,460
the Arsenal of attackers in a way that

899
00:32:29,460 --> 00:32:31,559
was not true two years ago

900
00:32:31,559 --> 00:32:35,640
right so this is one reason I think this

901
00:32:35,640 --> 00:32:37,620
there's a weakest link here and and

902
00:32:37,620 --> 00:32:39,419
somehow it's shifted in the last two

903
00:32:39,419 --> 00:32:41,220
years

904
00:32:41,220 --> 00:32:43,799
so the code Cove attack

905
00:32:43,799 --> 00:32:45,360
um this comes from a company called

906
00:32:45,360 --> 00:32:48,360
mercari which is a Japanese retailer a

907
00:32:48,360 --> 00:32:50,100
very successful I do hundreds of

908
00:32:50,100 --> 00:32:52,679
millions of in Revenue

909
00:32:52,679 --> 00:32:57,480
um so this attack essentially is uh on

910
00:32:57,480 --> 00:32:59,940
code cuff so code Cove is a tool that

911
00:32:59,940 --> 00:33:02,340
does code coverage not surprising given

912
00:33:02,340 --> 00:33:04,440
the name and the way it works is you

913
00:33:04,440 --> 00:33:06,480
have your kind of code in your typically

914
00:33:06,480 --> 00:33:08,760
in your GitHub repo you might be using

915
00:33:08,760 --> 00:33:10,740
some GitHub actions which your kind of

916
00:33:10,740 --> 00:33:13,380
event triggers and so when you make a

917
00:33:13,380 --> 00:33:15,840
change the event triggers says oh go run

918
00:33:15,840 --> 00:33:18,480
the code coverage test and code Cub will

919
00:33:18,480 --> 00:33:20,399
run a bunch of tests it collects that

920
00:33:20,399 --> 00:33:22,919
data for test coverage it uploads it to

921
00:33:22,919 --> 00:33:25,200
the code website and then you get a nice

922
00:33:25,200 --> 00:33:27,720
dashboard with your code coverage useful

923
00:33:27,720 --> 00:33:29,760
service lots of people used it Google

924
00:33:29,760 --> 00:33:32,519
used it a little bit

925
00:33:32,519 --> 00:33:33,539
um

926
00:33:33,539 --> 00:33:35,399
the way this attack worked is the

927
00:33:35,399 --> 00:33:39,299
attacker essentially discovered the uh

928
00:33:39,299 --> 00:33:41,100
that they could get the credentials for

929
00:33:41,100 --> 00:33:43,200
code Cove and change the uploading

930
00:33:43,200 --> 00:33:45,419
script so again I told you it uploads

931
00:33:45,419 --> 00:33:48,240
test coverage to code Cove

932
00:33:48,240 --> 00:33:50,220
that's a bash script that's a good thing

933
00:33:50,220 --> 00:33:52,140
to attack because then you can upload

934
00:33:52,140 --> 00:33:53,700
other stuff to other places which is

935
00:33:53,700 --> 00:33:56,159
what's going to happen

936
00:33:56,159 --> 00:33:59,460
how did they get the uh how do they get

937
00:33:59,460 --> 00:34:02,340
the credentials for codecov

938
00:34:02,340 --> 00:34:03,019
um

939
00:34:03,019 --> 00:34:04,620
not

940
00:34:04,620 --> 00:34:07,019
uncommon people leave their credentials

941
00:34:07,019 --> 00:34:08,879
in Docker images then they store those

942
00:34:08,879 --> 00:34:10,379
Docker images in public places like

943
00:34:10,379 --> 00:34:13,320
GitHub and so if you scan Docker images

944
00:34:13,320 --> 00:34:15,899
for credentials looking for the right

945
00:34:15,899 --> 00:34:18,719
regular expression you'll discover lots

946
00:34:18,719 --> 00:34:19,379
of

947
00:34:19,379 --> 00:34:22,739
credentials now the good news is Google

948
00:34:22,739 --> 00:34:25,320
and GitHub have both figured this out

949
00:34:25,320 --> 00:34:27,599
and now we scan all the uploads for

950
00:34:27,599 --> 00:34:29,760
credentials to try to tell you to get

951
00:34:29,760 --> 00:34:31,859
rid of your credentials before an

952
00:34:31,859 --> 00:34:33,300
attacker finds them

953
00:34:33,300 --> 00:34:36,540
right so it's been defended a little bit

954
00:34:36,540 --> 00:34:39,780
but bottom line is get the credentials

955
00:34:39,780 --> 00:34:41,699
out of the docker image upload a

956
00:34:41,699 --> 00:34:43,679
modified version of the bash script

957
00:34:43,679 --> 00:34:45,719
and now what that means is because it's

958
00:34:45,719 --> 00:34:48,780
signed by codecut credentials users of

959
00:34:48,780 --> 00:34:52,159
this new bash uploader

960
00:34:52,159 --> 00:34:54,540
reasonably believe they are using the

961
00:34:54,540 --> 00:34:55,980
one from code cuff and that is

962
00:34:55,980 --> 00:34:58,200
trustworthy it says it's from codecov

963
00:34:58,200 --> 00:35:00,240
it's signed by a code cuff

964
00:35:00,240 --> 00:35:01,560
right

965
00:35:01,560 --> 00:35:04,080
but because it's not the real version if

966
00:35:04,080 --> 00:35:05,880
you had a way to check the hash of it

967
00:35:05,880 --> 00:35:08,880
you would know the hash doesn't match

968
00:35:08,880 --> 00:35:10,619
uh there's other project something

969
00:35:10,619 --> 00:35:12,240
called like Sig store where we actually

970
00:35:12,240 --> 00:35:14,040
are talking about let's make a

971
00:35:14,040 --> 00:35:16,260
essentially a a ledger it's not a

972
00:35:16,260 --> 00:35:17,820
blockchain kind of Ledger but yeah it's

973
00:35:17,820 --> 00:35:20,339
a immutable Ledger where we store hashes

974
00:35:20,339 --> 00:35:22,619
of things and so you could say oh what's

975
00:35:22,619 --> 00:35:24,480
the hash of code cup supposed to be go

976
00:35:24,480 --> 00:35:26,339
check the Ledger it wouldn't match

977
00:35:26,339 --> 00:35:28,380
code could also check the hash itself

978
00:35:28,380 --> 00:35:30,000
and say

979
00:35:30,000 --> 00:35:31,619
are the things we're Distributing

980
00:35:31,619 --> 00:35:33,359
matching the hashes of what they should

981
00:35:33,359 --> 00:35:34,079
be

982
00:35:34,079 --> 00:35:36,180
if they're not then someone is uploading

983
00:35:36,180 --> 00:35:37,980
stuff on our with our name on it right

984
00:35:37,980 --> 00:35:42,200
that's catchable it wasn't caught

985
00:35:42,300 --> 00:35:44,300
um

986
00:35:45,140 --> 00:35:48,720
next step in this attack is the you know

987
00:35:48,720 --> 00:35:51,180
you you basically

988
00:35:51,180 --> 00:35:53,820
have this bad uploader what does it do

989
00:35:53,820 --> 00:35:55,980
well it you know you run your test code

990
00:35:55,980 --> 00:35:59,000
coverage and it runs the the code

991
00:35:59,000 --> 00:36:03,240
uploader and the first thing it does the

992
00:36:03,240 --> 00:36:06,780
is nothing and what I mean by that is it

993
00:36:06,780 --> 00:36:10,200
actually works perfectly fine

994
00:36:10,200 --> 00:36:13,200
so in particular like any good attack it

995
00:36:13,200 --> 00:36:15,720
is continuing to do its official job of

996
00:36:15,720 --> 00:36:18,420
code coverage so it's if you're using it

997
00:36:18,420 --> 00:36:19,800
it still does code coverage correctly

998
00:36:19,800 --> 00:36:21,480
all the data gets sent correctly to

999
00:36:21,480 --> 00:36:23,640
codecov it's producing the right

1000
00:36:23,640 --> 00:36:24,839
dashboards

1001
00:36:24,839 --> 00:36:26,760
on all appearances it is working

1002
00:36:26,760 --> 00:36:30,000
perfectly fine which is why it's hard to

1003
00:36:30,000 --> 00:36:30,900
find

1004
00:36:30,900 --> 00:36:33,660
this is an 1800 line file one line was

1005
00:36:33,660 --> 00:36:36,119
added so this is a very small change

1006
00:36:36,119 --> 00:36:38,760
very hard to notice and review

1007
00:36:38,760 --> 00:36:43,740
this is the line basically this says uh

1008
00:36:43,740 --> 00:36:47,160
copy the environment variables and do a

1009
00:36:47,160 --> 00:36:49,859
essentially a web upload to this website

1010
00:36:49,859 --> 00:36:52,680
indicated by a redacted IP address

1011
00:36:52,680 --> 00:36:55,500
right that even looks plausible in this

1012
00:36:55,500 --> 00:36:57,839
situation because you expect this this

1013
00:36:57,839 --> 00:36:59,940
is the bash uploader this is a line that

1014
00:36:59,940 --> 00:37:01,440
does uploading

1015
00:37:01,440 --> 00:37:03,180
maybe codecov Watcher environment

1016
00:37:03,180 --> 00:37:04,380
variables

1017
00:37:04,380 --> 00:37:06,000
plausible

1018
00:37:06,000 --> 00:37:07,740
why does the attacker watch environment

1019
00:37:07,740 --> 00:37:09,780
variables by the way

1020
00:37:09,780 --> 00:37:12,119
the answer is because once you're not

1021
00:37:12,119 --> 00:37:13,800
putting your credentials in your Docker

1022
00:37:13,800 --> 00:37:15,660
image you're putting your credentials in

1023
00:37:15,660 --> 00:37:17,700
your environment variables instead

1024
00:37:17,700 --> 00:37:20,040
that's the the best practice

1025
00:37:20,040 --> 00:37:21,540
and it is a better place than putting it

1026
00:37:21,540 --> 00:37:23,160
in the docker image

1027
00:37:23,160 --> 00:37:24,960
right but it means if I can get a copy

1028
00:37:24,960 --> 00:37:26,099
of all your environment variables

1029
00:37:26,099 --> 00:37:27,839
sometimes those will have credentials in

1030
00:37:27,839 --> 00:37:29,040
them

1031
00:37:29,040 --> 00:37:31,619
so this is really a credential farming

1032
00:37:31,619 --> 00:37:33,599
uploader that's what this is doing it's

1033
00:37:33,599 --> 00:37:36,740
farming for credentials

1034
00:37:38,339 --> 00:37:39,960
and then the third phase of the attack

1035
00:37:39,960 --> 00:37:43,320
which is or third step second phase in

1036
00:37:43,320 --> 00:37:46,200
my two phases is really

1037
00:37:46,200 --> 00:37:49,079
I got credentials for mercari and

1038
00:37:49,079 --> 00:37:51,900
hashicorp and 20 000 others

1039
00:37:51,900 --> 00:37:53,339
what can I do with those credentials

1040
00:37:53,339 --> 00:37:55,380
well I'll go look at their GitHub repo

1041
00:37:55,380 --> 00:37:58,020
and look around and maybe I'll get

1042
00:37:58,020 --> 00:37:59,040
credentials to their production

1043
00:37:59,040 --> 00:38:00,780
environment that happen in some cases

1044
00:38:00,780 --> 00:38:02,640
right the credentials you get are kind

1045
00:38:02,640 --> 00:38:04,320
of random and by the way it's not an

1046
00:38:04,320 --> 00:38:05,760
attack on any particular company there's

1047
00:38:05,760 --> 00:38:07,920
not like spear phishing this is kind of

1048
00:38:07,920 --> 00:38:10,079
broad attack to collect credentials see

1049
00:38:10,079 --> 00:38:11,760
Rick credentials we get and then just go

1050
00:38:11,760 --> 00:38:13,380
through them and and see what we can get

1051
00:38:13,380 --> 00:38:15,300
so what happened in this case was not so

1052
00:38:15,300 --> 00:38:16,140
bad

1053
00:38:16,140 --> 00:38:20,660
Makari lost its GitHub credentials

1054
00:38:21,119 --> 00:38:24,060
but that as a tax go that's not bad so

1055
00:38:24,060 --> 00:38:25,680
what that the attacker do well they

1056
00:38:25,680 --> 00:38:27,000
could get whatever's in GitHub so they

1057
00:38:27,000 --> 00:38:28,740
get source code

1058
00:38:28,740 --> 00:38:30,300
in this case they also got blogged

1059
00:38:30,300 --> 00:38:31,800
because the logs that turns out worked

1060
00:38:31,800 --> 00:38:33,780
out sort of there so that was bad

1061
00:38:33,780 --> 00:38:35,640
because those logs indirectly contain

1062
00:38:35,640 --> 00:38:37,740
things like details about the merchants

1063
00:38:37,740 --> 00:38:40,500
and their bank accounts so it's a pretty

1064
00:38:40,500 --> 00:38:42,780
big pii leak from this but the

1065
00:38:42,780 --> 00:38:44,160
production credentials of things that

1066
00:38:44,160 --> 00:38:45,839
run in production for Makari those were

1067
00:38:45,839 --> 00:38:48,180
not leaked because they weren't involved

1068
00:38:48,180 --> 00:38:50,400
in the test coverage on GitHub

1069
00:38:50,400 --> 00:38:53,220
so that is a that is in detail what a

1070
00:38:53,220 --> 00:38:56,400
supply chain attack does and why it's

1071
00:38:56,400 --> 00:39:00,260
kind of hard to deal with

1072
00:39:00,359 --> 00:39:02,760
there's the whole picture

1073
00:39:02,760 --> 00:39:03,420
um

1074
00:39:03,420 --> 00:39:06,960
and again the picture came from Makari

1075
00:39:06,960 --> 00:39:09,119
production environment was fine but yes

1076
00:39:09,119 --> 00:39:11,640
things were still lost

1077
00:39:11,640 --> 00:39:13,619
last slide on this is just to point out

1078
00:39:13,619 --> 00:39:15,660
this was the timeline of it I'm not

1079
00:39:15,660 --> 00:39:17,520
going to go through it but in that

1080
00:39:17,520 --> 00:39:19,380
yellow circle is the fact that it was

1081
00:39:19,380 --> 00:39:21,180
more than two months from the time of

1082
00:39:21,180 --> 00:39:23,339
the change in the uploader until the

1083
00:39:23,339 --> 00:39:25,740
time it was caught and fixed

1084
00:39:25,740 --> 00:39:27,480
right that's two months of stealing

1085
00:39:27,480 --> 00:39:28,859
credentials

1086
00:39:28,859 --> 00:39:31,320
in fact it's old enough that most groups

1087
00:39:31,320 --> 00:39:32,820
don't even know what they ran in that

1088
00:39:32,820 --> 00:39:34,740
period like you know what jobs you ran

1089
00:39:34,740 --> 00:39:36,420
two months ago and what credentials they

1090
00:39:36,420 --> 00:39:38,820
were using you probably don't maybe you

1091
00:39:38,820 --> 00:39:40,800
have a log if you're really good at it

1092
00:39:40,800 --> 00:39:43,079
but but certainly most don't have such a

1093
00:39:43,079 --> 00:39:46,140
log that's a long time right and you

1094
00:39:46,140 --> 00:39:48,060
know kudos for the attacker for having a

1095
00:39:48,060 --> 00:39:50,640
well-obscured attack but that's a

1096
00:39:50,640 --> 00:39:52,819
problem

1097
00:39:53,040 --> 00:39:55,680
so take a step back for supply chain tax

1098
00:39:55,680 --> 00:39:57,540
in general

1099
00:39:57,540 --> 00:39:59,180
foreign

1100
00:39:59,180 --> 00:40:01,200
there's four different attacks in here

1101
00:40:01,200 --> 00:40:02,339
and I'm not going to cover them but it's

1102
00:40:02,339 --> 00:40:03,900
not they're injecting some bad code

1103
00:40:03,900 --> 00:40:06,900
they've compromised the build system uh

1104
00:40:06,900 --> 00:40:10,619
they've bypressed the cicd to make bad

1105
00:40:10,619 --> 00:40:13,619
artifacts directly runnable

1106
00:40:13,619 --> 00:40:15,480
um they've compromise package minor

1107
00:40:15,480 --> 00:40:17,460
signing and so when you think about

1108
00:40:17,460 --> 00:40:19,020
supply chain attacks you should think

1109
00:40:19,020 --> 00:40:19,740
about

1110
00:40:19,740 --> 00:40:22,200
all of these letter

1111
00:40:22,200 --> 00:40:24,960
places on this chart have to be fixed

1112
00:40:24,960 --> 00:40:26,940
right supply chain attack means you need

1113
00:40:26,940 --> 00:40:29,040
need a solution that addresses all of

1114
00:40:29,040 --> 00:40:30,540
these attack points and there is going

1115
00:40:30,540 --> 00:40:33,240
to be no easy fix for this

1116
00:40:33,240 --> 00:40:35,280
right and so and this is often about

1117
00:40:35,280 --> 00:40:37,740
invariance how do I know what was used

1118
00:40:37,740 --> 00:40:40,859
what was built how it was built and how

1119
00:40:40,859 --> 00:40:42,480
to get a reasonable signature out of it

1120
00:40:42,480 --> 00:40:44,520
at the end and that includes by the way

1121
00:40:44,520 --> 00:40:46,020
what dependencies you're using and where

1122
00:40:46,020 --> 00:40:47,579
they came from

1123
00:40:47,579 --> 00:40:50,700
so this is a this is a hard problem

1124
00:40:50,700 --> 00:40:52,859
right this is much harder than fixing a

1125
00:40:52,859 --> 00:40:55,140
package or trusting a package this is

1126
00:40:55,140 --> 00:40:58,680
fixing all of the work that goes into it

1127
00:40:58,680 --> 00:41:00,480
so Google has solved this problem

1128
00:41:00,480 --> 00:41:03,780
internally in the sense that Google got

1129
00:41:03,780 --> 00:41:06,599
attacked by a nation state more than 10

1130
00:41:06,599 --> 00:41:08,640
years ago and started going in this

1131
00:41:08,640 --> 00:41:10,260
direction of of our internal supply

1132
00:41:10,260 --> 00:41:12,420
chain except the Google solution is very

1133
00:41:12,420 --> 00:41:13,800
googly and I don't mean that in a good

1134
00:41:13,800 --> 00:41:16,260
way it's this it's

1135
00:41:16,260 --> 00:41:18,060
you know if you happen to have a giant

1136
00:41:18,060 --> 00:41:19,740
mono repo it might work for you but I

1137
00:41:19,740 --> 00:41:21,180
don't think anyone else does

1138
00:41:21,180 --> 00:41:24,060
uh with this there is a single trusted

1139
00:41:24,060 --> 00:41:25,740
build system which I do think is a model

1140
00:41:25,740 --> 00:41:27,240
people should adopt meaning that you're

1141
00:41:27,240 --> 00:41:28,560
not allowed to build stuff on your

1142
00:41:28,560 --> 00:41:30,839
laptop and put it to production you have

1143
00:41:30,839 --> 00:41:32,700
to build stuff in the trusted build

1144
00:41:32,700 --> 00:41:34,740
system because it can enforce all the

1145
00:41:34,740 --> 00:41:35,880
environments I'm going to talk about in

1146
00:41:35,880 --> 00:41:37,320
a minute

1147
00:41:37,320 --> 00:41:39,000
but it says other things it does too for

1148
00:41:39,000 --> 00:41:41,460
example we know all of the authors and

1149
00:41:41,460 --> 00:41:43,859
reviewers we have strong identity for

1150
00:41:43,859 --> 00:41:45,540
them which I'm not advocating for in

1151
00:41:45,540 --> 00:41:47,359
open source that's a longer conversation

1152
00:41:47,359 --> 00:41:50,460
uh but it means that we know that you

1153
00:41:50,460 --> 00:41:52,320
know code is reviewed by two independent

1154
00:41:52,320 --> 00:41:54,480
people you in fact cannot run code

1155
00:41:54,480 --> 00:41:56,280
production that hasn't been reviewed by

1156
00:41:56,280 --> 00:41:59,160
independent people right that's a nice

1157
00:41:59,160 --> 00:42:01,200
and variant to be able to say uh all

1158
00:42:01,200 --> 00:42:02,579
week fours I forgot this one universal

1159
00:42:02,579 --> 00:42:04,859
libraries you're not allowed to choose

1160
00:42:04,859 --> 00:42:06,420
which version of a library you want

1161
00:42:06,420 --> 00:42:08,700
everyone at Google uses the same version

1162
00:42:08,700 --> 00:42:10,500
and you can imagine that causes great

1163
00:42:10,500 --> 00:42:13,140
complaint because there's good reasons

1164
00:42:13,140 --> 00:42:14,880
to have this version instead for my

1165
00:42:14,880 --> 00:42:17,520
project that's not up for discussion

1166
00:42:17,520 --> 00:42:19,079
right you can there's a single version

1167
00:42:19,079 --> 00:42:21,300
in general of things that are libraries

1168
00:42:21,300 --> 00:42:24,960
and we use that that's the trusted one

1169
00:42:24,960 --> 00:42:26,520
that actually makes a bunch of things

1170
00:42:26,520 --> 00:42:28,680
easier but it's very unrealistic for the

1171
00:42:28,680 --> 00:42:30,960
you know broader open source

1172
00:42:30,960 --> 00:42:34,140
so we can't get that to work directly

1173
00:42:34,140 --> 00:42:35,640
I don't want to cover this detail either

1174
00:42:35,640 --> 00:42:37,079
other than say

1175
00:42:37,079 --> 00:42:39,420
the we released a thing called Salsa

1176
00:42:39,420 --> 00:42:41,040
which is really a framework for supply

1177
00:42:41,040 --> 00:42:42,540
chain security you can think about it

1178
00:42:42,540 --> 00:42:44,579
this way it's these are the invariants

1179
00:42:44,579 --> 00:42:46,800
you need to hold if you want to have a

1180
00:42:46,800 --> 00:42:48,660
trustworthy supply chain

1181
00:42:48,660 --> 00:42:50,160
right so it's really about the

1182
00:42:50,160 --> 00:42:52,440
invariance that little table which I

1183
00:42:52,440 --> 00:42:54,000
know you can't read is actually

1184
00:42:54,000 --> 00:42:55,380
different kinds of variants things like

1185
00:42:55,380 --> 00:42:57,960
code review there's little columns also

1186
00:42:57,960 --> 00:42:59,400
one two three and four which have to do

1187
00:42:59,400 --> 00:43:02,520
with you know kind of degree of security

1188
00:43:02,520 --> 00:43:04,140
because it's hard to do all these

1189
00:43:04,140 --> 00:43:06,300
invariants so the ordering means you can

1190
00:43:06,300 --> 00:43:08,099
get some basic things like do you know

1191
00:43:08,099 --> 00:43:10,560
your source code right is it are you

1192
00:43:10,560 --> 00:43:11,640
really using the source code you think

1193
00:43:11,640 --> 00:43:12,599
you're using when you build something

1194
00:43:12,599 --> 00:43:14,520
that's the kind of an easy invariant to

1195
00:43:14,520 --> 00:43:16,980
get to down to the end it's is it

1196
00:43:16,980 --> 00:43:20,099
hermetic meaning things like there's you

1197
00:43:20,099 --> 00:43:22,260
know no network connection is required

1198
00:43:22,260 --> 00:43:24,180
when you build it so you know that if

1199
00:43:24,180 --> 00:43:26,160
these inputs produce this output and

1200
00:43:26,160 --> 00:43:27,420
everything is signed with what

1201
00:43:27,420 --> 00:43:29,520
competitors use what inputs what steps

1202
00:43:29,520 --> 00:43:31,560
what reviews lots and lots of metadata

1203
00:43:31,560 --> 00:43:33,480
so there's a framework to fix this but

1204
00:43:33,480 --> 00:43:36,359
again to adopt this for every ecosystem

1205
00:43:36,359 --> 00:43:38,099
for every build system is going to take

1206
00:43:38,099 --> 00:43:40,020
a long time that is the direction we

1207
00:43:40,020 --> 00:43:43,020
collectively have to go

1208
00:43:43,020 --> 00:43:45,060
I'm going to wrap up

1209
00:43:45,060 --> 00:43:47,579
um so

1210
00:43:47,579 --> 00:43:50,400
I'm a big believer in open source I I

1211
00:43:50,400 --> 00:43:52,640
wanted to rule the world

1212
00:43:52,640 --> 00:43:55,680
and I think it has already greatly

1213
00:43:55,680 --> 00:43:57,300
increased the rate of innovation in many

1214
00:43:57,300 --> 00:43:58,380
sectors

1215
00:43:58,380 --> 00:44:01,260
but it it needs maintenance right you

1216
00:44:01,260 --> 00:44:03,420
think about you know we'd spend a U.S

1217
00:44:03,420 --> 00:44:04,740
spending a trillion dollars on

1218
00:44:04,740 --> 00:44:07,020
infrastructure uh

1219
00:44:07,020 --> 00:44:09,540
we don't spend anything on oh our

1220
00:44:09,540 --> 00:44:11,280
software infrastructure right by

1221
00:44:11,280 --> 00:44:15,119
comparison right so yeah we need these

1222
00:44:15,119 --> 00:44:18,000
kinds of uh we need the maintenance that

1223
00:44:18,000 --> 00:44:20,339
you need for any infrastructure

1224
00:44:20,339 --> 00:44:21,960
it needs to be paid for in a sustainable

1225
00:44:21,960 --> 00:44:23,880
manner so we're trying lots of

1226
00:44:23,880 --> 00:44:25,980
experiments direct funding of

1227
00:44:25,980 --> 00:44:28,440
Foundations and maintainers I started

1228
00:44:28,440 --> 00:44:30,960
something called openssf open source

1229
00:44:30,960 --> 00:44:32,940
security Foundation that's part of the

1230
00:44:32,940 --> 00:44:34,740
Linux Foundation that's kind of the

1231
00:44:34,740 --> 00:44:36,780
industry place to actually have these

1232
00:44:36,780 --> 00:44:39,660
discussions it's also we just did the

1233
00:44:39,660 --> 00:44:41,880
White House Summits the last one was in

1234
00:44:41,880 --> 00:44:44,400
may just directly discussing these

1235
00:44:44,400 --> 00:44:47,040
things uh we'll be going to UK and

1236
00:44:47,040 --> 00:44:48,660
Germany also to have meetings with those

1237
00:44:48,660 --> 00:44:50,700
governments about how to you know move

1238
00:44:50,700 --> 00:44:53,339
open source security forward

1239
00:44:53,339 --> 00:44:55,260
and personally I'm really working on

1240
00:44:55,260 --> 00:44:56,880
three things then I'll get to what you

1241
00:44:56,880 --> 00:44:59,819
can do but openssf is a neutral place to

1242
00:44:59,819 --> 00:45:02,339
sort out these hard problems like how do

1243
00:45:02,339 --> 00:45:04,619
you sign things how do you get what's

1244
00:45:04,619 --> 00:45:06,960
the right metadata for things how do we

1245
00:45:06,960 --> 00:45:08,819
incentivize maintainers to do the

1246
00:45:08,819 --> 00:45:11,060
mundane work how do we get the money

1247
00:45:11,060 --> 00:45:13,560
I do believe open source is a public

1248
00:45:13,560 --> 00:45:15,359
infrastructure and a public good and

1249
00:45:15,359 --> 00:45:17,520
like all public infrastructure public

1250
00:45:17,520 --> 00:45:19,920
goods should be publicly funded that is

1251
00:45:19,920 --> 00:45:21,240
a tall order

1252
00:45:21,240 --> 00:45:24,660
but it's it's a reasonable request and

1253
00:45:24,660 --> 00:45:26,339
we'll see if I can make any progress on

1254
00:45:26,339 --> 00:45:27,720
that

1255
00:45:27,720 --> 00:45:29,819
and and finally one that I talked about

1256
00:45:29,819 --> 00:45:32,160
today we need more curation right we

1257
00:45:32,160 --> 00:45:33,599
need to take seriously the role of

1258
00:45:33,599 --> 00:45:34,800
accountability separate from

1259
00:45:34,800 --> 00:45:38,099
distribution and find ways to use that

1260
00:45:38,099 --> 00:45:40,260
to

1261
00:45:40,260 --> 00:45:42,180
really take advantage of the top down

1262
00:45:42,180 --> 00:45:44,760
pressure and interest to actually cause

1263
00:45:44,760 --> 00:45:46,319
the right things to be looked at and the

1264
00:45:46,319 --> 00:45:47,819
right things to be fixed

1265
00:45:47,819 --> 00:45:49,619
right but you can't just tell

1266
00:45:49,619 --> 00:45:51,240
maintainers what to do you can't send

1267
00:45:51,240 --> 00:45:53,400
them legal requests you have to make

1268
00:45:53,400 --> 00:45:55,020
them part of the system in a way that's

1269
00:45:55,020 --> 00:45:56,280
inclusive and that they want to

1270
00:45:56,280 --> 00:45:57,900
participate and I think there's a path

1271
00:45:57,900 --> 00:46:00,780
to doing that

1272
00:46:00,780 --> 00:46:02,520
what can you do well if you're a

1273
00:46:02,520 --> 00:46:04,740
government besides funding I do think

1274
00:46:04,740 --> 00:46:07,020
most groups government Enterprises

1275
00:46:07,020 --> 00:46:08,940
haven't thought about what are they

1276
00:46:08,940 --> 00:46:11,280
using that's as is versus when do they

1277
00:46:11,280 --> 00:46:13,740
actually want accountability and they

1278
00:46:13,740 --> 00:46:15,180
should and do pay for accountability

1279
00:46:15,180 --> 00:46:16,859
today but they should be more conscious

1280
00:46:16,859 --> 00:46:18,060
about it

1281
00:46:18,060 --> 00:46:19,500
I think you should support the things

1282
00:46:19,500 --> 00:46:20,700
you use

1283
00:46:20,700 --> 00:46:22,920
most companies support their own open

1284
00:46:22,920 --> 00:46:24,359
source projects

1285
00:46:24,359 --> 00:46:26,760
but do you support the projects that you

1286
00:46:26,760 --> 00:46:28,680
use like your dependencies or things you

1287
00:46:28,680 --> 00:46:31,680
just happen to use so uh nice stat here

1288
00:46:31,680 --> 00:46:34,859
for Google 75 of the Google the GitHub

1289
00:46:34,859 --> 00:46:37,079
repost to which we contribute are not

1290
00:46:37,079 --> 00:46:39,780
projects that we started so like who so

1291
00:46:39,780 --> 00:46:41,220
if you take out kubernetes and things

1292
00:46:41,220 --> 00:46:43,859
we've started right

1293
00:46:43,859 --> 00:46:46,079
that's 25 of the things we contribute to

1294
00:46:46,079 --> 00:46:48,480
75 of the contributions go to things

1295
00:46:48,480 --> 00:46:49,980
that someone else worked on and I think

1296
00:46:49,980 --> 00:46:51,480
that's the right model

1297
00:46:51,480 --> 00:46:52,859
right so if you're a company

1298
00:46:52,859 --> 00:46:55,079
enterprising I think about can you do

1299
00:46:55,079 --> 00:46:56,880
your share to support the things that

1300
00:46:56,880 --> 00:46:58,920
you're not so that you didn't create

1301
00:46:58,920 --> 00:47:00,660
right the things you're users of not

1302
00:47:00,660 --> 00:47:02,460
just creators of

1303
00:47:02,460 --> 00:47:04,079
for maintainers I won't go through this

1304
00:47:04,079 --> 00:47:06,540
one for this audience but there's I hope

1305
00:47:06,540 --> 00:47:08,760
maintainers will work with curators

1306
00:47:08,760 --> 00:47:10,319
think about curators for their own

1307
00:47:10,319 --> 00:47:12,660
dependencies enable build and test by

1308
00:47:12,660 --> 00:47:16,020
others others who pay for it themselves

1309
00:47:16,020 --> 00:47:17,940
like in Google I'd be happy to volunteer

1310
00:47:17,940 --> 00:47:19,800
Google to do more testing of Open Source

1311
00:47:19,800 --> 00:47:21,720
packages if you tell us how to run the

1312
00:47:21,720 --> 00:47:25,939
tests basically in some systematic way

1313
00:47:26,520 --> 00:47:29,160
and finally if you're in Academia or a

1314
00:47:29,160 --> 00:47:30,119
funder

1315
00:47:30,119 --> 00:47:31,920
I'll just put a list of problems here

1316
00:47:31,920 --> 00:47:34,640
that I think need systems like help

1317
00:47:34,640 --> 00:47:37,980
right this community has been fantastic

1318
00:47:37,980 --> 00:47:40,260
at producing open source

1319
00:47:40,260 --> 00:47:42,660
but not really great at helping open

1320
00:47:42,660 --> 00:47:45,839
source do the mundane right

1321
00:47:45,839 --> 00:47:47,760
right what's the tooling that would make

1322
00:47:47,760 --> 00:47:49,260
a big difference what's the automation

1323
00:47:49,260 --> 00:47:50,940
that would make a big difference and

1324
00:47:50,940 --> 00:47:52,740
there's a whole bunch here but for

1325
00:47:52,740 --> 00:47:54,900
example cherry picking that's the

1326
00:47:54,900 --> 00:47:56,700
process if I have a security patch for

1327
00:47:56,700 --> 00:47:59,640
the new version can I make it work on an

1328
00:47:59,640 --> 00:48:01,200
old version and that's a hugely

1329
00:48:01,200 --> 00:48:02,940
important problem because most users are

1330
00:48:02,940 --> 00:48:04,500
stuck on an old version it's actually

1331
00:48:04,500 --> 00:48:06,359
going to be much easier to cherry pick

1332
00:48:06,359 --> 00:48:08,460
that patch than it is to get them to

1333
00:48:08,460 --> 00:48:10,859
upgrade to the new version right now we

1334
00:48:10,859 --> 00:48:12,359
expect them to upgrade it's not a

1335
00:48:12,359 --> 00:48:14,700
reasonable expectation

1336
00:48:14,700 --> 00:48:17,099
all right I will stop here actually it's

1337
00:48:17,099 --> 00:48:18,900
actually NSF does have one small program

1338
00:48:18,900 --> 00:48:21,060
in open source which is about how to

1339
00:48:21,060 --> 00:48:22,920
turn open source projects into healthy

1340
00:48:22,920 --> 00:48:25,200
Echo systems like a spark and data

1341
00:48:25,200 --> 00:48:28,140
bricks or Leica kubernetes

1342
00:48:28,140 --> 00:48:29,940
but they're open because I've talked to

1343
00:48:29,940 --> 00:48:32,160
them about you know a broader programs

1344
00:48:32,160 --> 00:48:33,720
that would benefit open source and I

1345
00:48:33,720 --> 00:48:35,640
hope to cause that as well I'll stop

1346
00:48:35,640 --> 00:48:38,339
here take some questions and thank you

1347
00:48:38,339 --> 00:48:41,000
for your time

