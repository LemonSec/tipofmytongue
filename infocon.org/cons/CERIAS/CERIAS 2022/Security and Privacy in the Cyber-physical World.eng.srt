1
00:00:00,000 --> 00:00:03,179
today's speaker is a Dr ning Zhang and

2
00:00:03,179 --> 00:00:05,759
he leads the computer security and

3
00:00:05,759 --> 00:00:07,440
privacy laboratory at Washington

4
00:00:07,440 --> 00:00:11,880
University in San Luis and previously he

5
00:00:11,880 --> 00:00:14,940
also work at Raytheon and today today's

6
00:00:14,940 --> 00:00:17,039
talk is about security and privacy in

7
00:00:17,039 --> 00:00:19,500
the Cyber physical world including iot

8
00:00:19,500 --> 00:00:24,380
devices and embedded systems

9
00:00:24,600 --> 00:00:26,460
all right Pennsylvania for the

10
00:00:26,460 --> 00:00:27,960
introduction

11
00:00:27,960 --> 00:00:28,820
um

12
00:00:28,820 --> 00:00:31,560
so the the topic that I'm going to talk

13
00:00:31,560 --> 00:00:33,360
about today is security and privacy in

14
00:00:33,360 --> 00:00:36,200
the Cyber physical world

15
00:00:36,960 --> 00:00:38,940
um my very biased vision of the future

16
00:00:38,940 --> 00:00:42,360
is that we are embracing a brave new

17
00:00:42,360 --> 00:00:44,219
Cyber physical work

18
00:00:44,219 --> 00:00:46,379
uh where everything is interconnected

19
00:00:46,379 --> 00:00:49,500
and the cyberware and physical war is

20
00:00:49,500 --> 00:00:52,620
closely intertwined together

21
00:00:52,620 --> 00:00:55,500
we already we're already witnessing a

22
00:00:55,500 --> 00:00:57,420
whole bunch of life-changing cyber

23
00:00:57,420 --> 00:01:00,180
physical systems from you know voice

24
00:01:00,180 --> 00:01:03,960
assistant to uh AR goggles that can

25
00:01:03,960 --> 00:01:07,320
translate uh you know languages in real

26
00:01:07,320 --> 00:01:12,119
time to 3D printed organs that is has

27
00:01:12,119 --> 00:01:14,040
been used to save lives

28
00:01:14,040 --> 00:01:18,119
however we have also witnessed how uh

29
00:01:18,119 --> 00:01:21,140
vulnerabilities in these systems can

30
00:01:21,140 --> 00:01:24,360
undermine the Safety and Security of its

31
00:01:24,360 --> 00:01:26,720
users

32
00:01:27,840 --> 00:01:29,640
um so my best solution of security and

33
00:01:29,640 --> 00:01:31,439
privacy in the Cyber physical world in

34
00:01:31,439 --> 00:01:34,380
other words our division for our lab is

35
00:01:34,380 --> 00:01:38,280
freefold from the system security fronts

36
00:01:38,280 --> 00:01:41,579
uh which is my background uh we are more

37
00:01:41,579 --> 00:01:43,560
concerned on the security and private

38
00:01:43,560 --> 00:01:46,020
security and safety in the presence of

39
00:01:46,020 --> 00:01:48,720
cyber attacks some of the research

40
00:01:48,720 --> 00:01:51,240
topics that we work on are CPS

41
00:01:51,240 --> 00:01:53,579
availability real-time system security

42
00:01:53,579 --> 00:01:55,140
resilience

43
00:01:55,140 --> 00:01:57,720
software protection in real-time CPS

44
00:01:57,720 --> 00:01:59,220
medical device trust institution

45
00:01:59,220 --> 00:02:00,960
environments

46
00:02:00,960 --> 00:02:04,079
um moving up the step a little bit uh AI

47
00:02:04,079 --> 00:02:08,840
I believe is uh changing many uh

48
00:02:08,840 --> 00:02:12,360
sectors in the society nowadays and we

49
00:02:12,360 --> 00:02:13,620
are also interested in AI security

50
00:02:13,620 --> 00:02:16,200
because it's sitting on top of the

51
00:02:16,200 --> 00:02:19,160
system uh looking at the software uh

52
00:02:19,160 --> 00:02:22,980
algorithm aspects uh so in in this

53
00:02:22,980 --> 00:02:25,440
domain we work on physical realizable

54
00:02:25,440 --> 00:02:28,319
over zero example semantic preserving of

55
00:02:28,319 --> 00:02:31,080
a zero example and malware

56
00:02:31,080 --> 00:02:31,860
um

57
00:02:31,860 --> 00:02:35,580
and on the Privacy fronts uh we are

58
00:02:35,580 --> 00:02:39,120
interested in both the Cyber privacy and

59
00:02:39,120 --> 00:02:41,099
physical privacy in the emerging new

60
00:02:41,099 --> 00:02:43,500
settings uh so I'm going to talk about

61
00:02:43,500 --> 00:02:47,480
our work on spy camera detection

62
00:02:48,959 --> 00:02:50,459
um so I'm going to start a presentation

63
00:02:50,459 --> 00:02:53,760
with the research frost on security and

64
00:02:53,760 --> 00:02:55,920
safety in the presence of Cyber attack

65
00:02:55,920 --> 00:02:58,739
so in this line of work we make the

66
00:02:58,739 --> 00:03:01,980
assumption that attacker can actually

67
00:03:01,980 --> 00:03:03,720
find one abilities and compromise our

68
00:03:03,720 --> 00:03:07,019
system and we think about ways to you

69
00:03:07,019 --> 00:03:09,180
know bring the Lines line of defense in

70
00:03:09,180 --> 00:03:12,480
such that we can remain safe even in the

71
00:03:12,480 --> 00:03:15,738
presence of cyber attacks

72
00:03:16,800 --> 00:03:18,000
um so the first one I'm gonna talk about

73
00:03:18,000 --> 00:03:20,819
uh so from all of the work that I would

74
00:03:20,819 --> 00:03:23,580
talk about in this talk I only give the

75
00:03:23,580 --> 00:03:25,500
brief introduction except the first word

76
00:03:25,500 --> 00:03:27,720
I'll go into the detail

77
00:03:27,720 --> 00:03:28,980
um

78
00:03:28,980 --> 00:03:31,260
for the first work the research question

79
00:03:31,260 --> 00:03:34,560
is how do we secure the emerging safety

80
00:03:34,560 --> 00:03:36,959
critical cyber physical systems even

81
00:03:36,959 --> 00:03:38,640
when the attacker can compromise the

82
00:03:38,640 --> 00:03:41,099
kernel uh can we maintain minimum

83
00:03:41,099 --> 00:03:43,140
control such as you know for example the

84
00:03:43,140 --> 00:03:45,120
Jung taxi can land safely and people can

85
00:03:45,120 --> 00:03:47,420
get out

86
00:03:47,819 --> 00:03:52,579
uh you know play this introduction video

87
00:03:53,280 --> 00:03:55,680
a defining characteristic of real-time

88
00:03:55,680 --> 00:03:57,720
cyber physical systems is their

89
00:03:57,720 --> 00:03:59,340
continuous interaction with the physical

90
00:03:59,340 --> 00:04:00,599
world

91
00:04:00,599 --> 00:04:02,819
for safety functions like pedestrian

92
00:04:02,819 --> 00:04:05,220
detection computation resources have to

93
00:04:05,220 --> 00:04:07,920
be available in a timely manner

94
00:04:07,920 --> 00:04:10,680
sensing control and actuation forms a

95
00:04:10,680 --> 00:04:12,000
control Loop

96
00:04:12,000 --> 00:04:14,700
availability for CPS implies timely

97
00:04:14,700 --> 00:04:16,918
access to computation for control and

98
00:04:16,918 --> 00:04:19,199
timely access to i o for sensing and

99
00:04:19,199 --> 00:04:20,940
actuation

100
00:04:20,940 --> 00:04:23,460
in this paper we present the design of a

101
00:04:23,460 --> 00:04:25,259
real-time trusted execution environment

102
00:04:25,259 --> 00:04:27,660
to ensure system availability

103
00:04:27,660 --> 00:04:30,660
in order to minimize the TCB we Leverage

104
00:04:30,660 --> 00:04:33,060
The observation that control programs in

105
00:04:33,060 --> 00:04:35,759
CPS are predictable by Design

106
00:04:35,759 --> 00:04:37,259
our system trades off Rich

107
00:04:37,259 --> 00:04:39,240
functionalities for minimally yet secure

108
00:04:39,240 --> 00:04:40,860
implementation using hierarchical

109
00:04:40,860 --> 00:04:44,639
scheduling and I O driver deploading

110
00:04:44,639 --> 00:04:46,680
if you are interested in our work please

111
00:04:46,680 --> 00:04:49,620
join us at Essence so that's the

112
00:04:49,620 --> 00:04:51,060
introduction

113
00:04:51,060 --> 00:04:52,740
um as a matter of fact please ask me

114
00:04:52,740 --> 00:04:54,540
questions and make this interactive as

115
00:04:54,540 --> 00:04:55,820
much as possible

116
00:04:55,820 --> 00:04:58,080
or otherwise I will be reading through

117
00:04:58,080 --> 00:05:00,660
my slides for 40 minutes and it's not

118
00:05:00,660 --> 00:05:03,360
very fun so

119
00:05:03,360 --> 00:05:04,860
one of the things that you when you

120
00:05:04,860 --> 00:05:06,479
think about hey I got a normal World

121
00:05:06,479 --> 00:05:09,120
compromise or I have a compromise OS the

122
00:05:09,120 --> 00:05:10,560
first thing you probably think about to

123
00:05:10,560 --> 00:05:13,440
defend against disabled attack is

124
00:05:13,440 --> 00:05:15,660
trusted execution environment

125
00:05:15,660 --> 00:05:17,520
particularly because we're working on

126
00:05:17,520 --> 00:05:19,380
embedded device so it would be Ultra

127
00:05:19,380 --> 00:05:20,639
zone

128
00:05:20,639 --> 00:05:21,720
um

129
00:05:21,720 --> 00:05:24,800
so amtrakzone provides a hybrid assisted

130
00:05:24,800 --> 00:05:29,340
a strong isolation between uh normal

131
00:05:29,340 --> 00:05:31,560
work and secure

132
00:05:31,560 --> 00:05:32,960
however

133
00:05:32,960 --> 00:05:36,960
in existing deployment of Tes most of

134
00:05:36,960 --> 00:05:40,080
the time we shifts uh all the scheduling

135
00:05:40,080 --> 00:05:43,520
and I O to normal work for Simplicity

136
00:05:43,520 --> 00:05:45,960
insecure right we are making this

137
00:05:45,960 --> 00:05:50,160
cautious trade of choice because most of

138
00:05:50,160 --> 00:05:51,900
the scheduling aisle management Resource

139
00:05:51,900 --> 00:05:54,360
Management are complex so we're shifting

140
00:05:54,360 --> 00:05:57,720
shifting all of them to normal work

141
00:05:57,720 --> 00:06:00,780
but for availability it's very important

142
00:06:00,780 --> 00:06:03,300
that we have a trustworthy research

143
00:06:03,300 --> 00:06:06,419
resource scheduling algorithm

144
00:06:06,419 --> 00:06:08,639
um why is availability important in

145
00:06:08,639 --> 00:06:11,460
cyber physical systems uh because it you

146
00:06:11,460 --> 00:06:12,479
know

147
00:06:12,479 --> 00:06:15,660
CPS uh particularly safe criticals

148
00:06:15,660 --> 00:06:18,600
safety critical CPS they have continuous

149
00:06:18,600 --> 00:06:21,000
interaction with the physical world

150
00:06:21,000 --> 00:06:23,100
um in order for for them to function

151
00:06:23,100 --> 00:06:24,960
correctly they need to perform

152
00:06:24,960 --> 00:06:28,080
sentencing control and actuation in a

153
00:06:28,080 --> 00:06:31,039
timely manner for example

154
00:06:31,039 --> 00:06:34,440
if we don't stop the vehicle in time

155
00:06:34,440 --> 00:06:37,440
when we detect a possession then it

156
00:06:37,440 --> 00:06:39,180
might be too late by the time the car

157
00:06:39,180 --> 00:06:41,100
stops

158
00:06:41,100 --> 00:06:44,639
and lastly uh there are you know very

159
00:06:44,639 --> 00:06:47,280
bad or severe physical work and any

160
00:06:47,280 --> 00:06:49,620
consequences for missing computation

161
00:06:49,620 --> 00:06:53,039
deadlines uh in cyber physical systems

162
00:06:53,039 --> 00:06:55,080
um therefore that's why in this

163
00:06:55,080 --> 00:06:57,960
particular world we choose to focus on

164
00:06:57,960 --> 00:07:00,000
um ensuring availability in cyber

165
00:07:00,000 --> 00:07:02,660
physical systems

166
00:07:02,660 --> 00:07:06,960
to further motivate why real-time

167
00:07:06,960 --> 00:07:09,560
availability is important

168
00:07:09,560 --> 00:07:13,039
we develop an attack called

169
00:07:13,039 --> 00:07:16,259
the time whopping attack where we

170
00:07:16,259 --> 00:07:18,360
exploit the dynamic frequency voltage

171
00:07:18,360 --> 00:07:21,840
scaling DVS features in CPU to you know

172
00:07:21,840 --> 00:07:24,120
sort of slow down the processor but you

173
00:07:24,120 --> 00:07:26,160
know still let it run

174
00:07:26,160 --> 00:07:28,080
um the moment we launch the attack you

175
00:07:28,080 --> 00:07:29,580
can see the trajectory on the bottom

176
00:07:29,580 --> 00:07:32,460
left of the figure start going out of

177
00:07:32,460 --> 00:07:35,699
the Baseline and on the right you can

178
00:07:35,699 --> 00:07:37,759
see the absolute error in the post just

179
00:07:37,759 --> 00:07:40,560
skyrocketed and and that would lead to

180
00:07:40,560 --> 00:07:43,639
crashing of the vehicle

181
00:07:45,300 --> 00:07:47,400
so real-time mobility in cyber physical

182
00:07:47,400 --> 00:07:51,300
systems actually implies two types of

183
00:07:51,300 --> 00:07:54,120
availability protections uh the first

184
00:07:54,120 --> 00:07:55,800
one is real-time computation

185
00:07:55,800 --> 00:07:59,580
availability that is for the control

186
00:07:59,580 --> 00:08:02,039
algorithm to run once you sense

187
00:08:02,039 --> 00:08:03,599
something you want to perform

188
00:08:03,599 --> 00:08:06,840
computation on the sense physical stage

189
00:08:06,840 --> 00:08:08,639
so that you know how to control the

190
00:08:08,639 --> 00:08:11,580
actuator right the second part is

191
00:08:11,580 --> 00:08:14,280
real-time i o availability for sensing

192
00:08:14,280 --> 00:08:16,919
and actuation so basically we want to be

193
00:08:16,919 --> 00:08:18,440
able to sense

194
00:08:18,440 --> 00:08:23,160
correctly and actuate the controls uh

195
00:08:23,160 --> 00:08:24,840
the physical control of the robotic

196
00:08:24,840 --> 00:08:27,900
vehicle uh securely

197
00:08:27,900 --> 00:08:31,080
and Tommy our threat model is we assume

198
00:08:31,080 --> 00:08:32,760
arbitrary code execution in normal world

199
00:08:32,760 --> 00:08:35,339
uh we aim to use denial service attacks

200
00:08:35,339 --> 00:08:38,219
to destabilize the Cyber physical system

201
00:08:38,219 --> 00:08:42,958
and um we assume the attacker can deny

202
00:08:42,958 --> 00:08:45,899
access to a processor deny access to IO

203
00:08:45,899 --> 00:08:48,000
in other words deny all the access to

204
00:08:48,000 --> 00:08:50,220
sensor and actuators and disable

205
00:08:50,220 --> 00:08:52,380
peripherals for example disable the

206
00:08:52,380 --> 00:08:56,279
timer and power and a text that we do

207
00:08:56,279 --> 00:08:57,959
not consider a hardware and sensor

208
00:08:57,959 --> 00:09:01,579
attacks side Channel attacks

209
00:09:02,339 --> 00:09:05,580
there are so from rtte system overview

210
00:09:05,580 --> 00:09:08,220
there are three main parts uh Freeman

211
00:09:08,220 --> 00:09:09,660
research questions that we have to

212
00:09:09,660 --> 00:09:12,360
answer the first one is what is the

213
00:09:12,360 --> 00:09:14,160
minimum set of Hardware primitive for

214
00:09:14,160 --> 00:09:15,779
availability

215
00:09:15,779 --> 00:09:17,459
um that is for bootstrapping

216
00:09:17,459 --> 00:09:19,560
availability using resource isolation

217
00:09:19,560 --> 00:09:22,080
and secure timer

218
00:09:22,080 --> 00:09:24,600
the second research question is how do

219
00:09:24,600 --> 00:09:27,060
we ensure CPU availability with small

220
00:09:27,060 --> 00:09:28,800
TCB

221
00:09:28,800 --> 00:09:30,540
um you know one of the easiest thing to

222
00:09:30,540 --> 00:09:32,820
ensure real-time availability is you

223
00:09:32,820 --> 00:09:34,880
know implement re-implement the entire

224
00:09:34,880 --> 00:09:37,560
scheduling system inside the secure

225
00:09:37,560 --> 00:09:39,839
domain but that's going to blow up the

226
00:09:39,839 --> 00:09:40,940
TCB

227
00:09:40,940 --> 00:09:43,740
and the last research question that we

228
00:09:43,740 --> 00:09:45,240
have to answer is how do we ensure

229
00:09:45,240 --> 00:09:47,820
real-time High availability with with a

230
00:09:47,820 --> 00:09:50,279
small TCB because directly migrating the

231
00:09:50,279 --> 00:09:53,339
driver into the secure would also

232
00:09:53,339 --> 00:09:57,080
increase the TCB significantly

233
00:09:57,500 --> 00:09:59,820
so to answer your first research

234
00:09:59,820 --> 00:10:03,000
question uh we look at the basic

235
00:10:03,000 --> 00:10:05,100
requirements of cyber physical system or

236
00:10:05,100 --> 00:10:07,620
real-time cyber physical systems then we

237
00:10:07,620 --> 00:10:09,480
find out that you know there are

238
00:10:09,480 --> 00:10:11,399
basically two things that you need in

239
00:10:11,399 --> 00:10:15,300
order to ensure that you have secure and

240
00:10:15,300 --> 00:10:18,180
timely execution of State safety

241
00:10:18,180 --> 00:10:20,760
critical workloads the first one is a

242
00:10:20,760 --> 00:10:21,899
secure timer

243
00:10:21,899 --> 00:10:25,380
using the secure timer you can trap the

244
00:10:25,380 --> 00:10:28,980
execution from untrusted normal work

245
00:10:28,980 --> 00:10:31,860
back to secure in other words you can

246
00:10:31,860 --> 00:10:33,959
get back your execution rates

247
00:10:33,959 --> 00:10:36,180
the second one is

248
00:10:36,180 --> 00:10:39,779
um resource isolation because you want

249
00:10:39,779 --> 00:10:43,200
to be able to insert yourself into all

250
00:10:43,200 --> 00:10:45,300
the access control to to mitigate all

251
00:10:45,300 --> 00:10:47,279
the access control through the io

252
00:10:47,279 --> 00:10:48,600
reference monitor

253
00:10:48,600 --> 00:10:50,760
that would allow you to perform

254
00:10:50,760 --> 00:10:53,160
fine-grained resource management

255
00:10:53,160 --> 00:10:57,540
so these are the two key requirements

256
00:10:57,540 --> 00:11:00,420
so uh tap on to the secure timer you you

257
00:11:00,420 --> 00:11:02,220
also need to have access to physical

258
00:11:02,220 --> 00:11:04,980
passage of time the reason why we record

259
00:11:04,980 --> 00:11:07,860
we require that is because

260
00:11:07,860 --> 00:11:09,120
um

261
00:11:09,120 --> 00:11:11,820
passage of time is interesting in

262
00:11:11,820 --> 00:11:14,399
computer computer doesn't really have a

263
00:11:14,399 --> 00:11:16,260
concept of physical work type right it

264
00:11:16,260 --> 00:11:18,480
goes by corrupting so you also need the

265
00:11:18,480 --> 00:11:21,180
physical passage of time

266
00:11:21,180 --> 00:11:24,800
but that's part of the secure timer

267
00:11:24,959 --> 00:11:28,620
so given those two primitive how do we

268
00:11:28,620 --> 00:11:30,540
ensure real-time CPU availability

269
00:11:30,540 --> 00:11:34,880
without significantly increasing the TCB

270
00:11:36,720 --> 00:11:37,339
um

271
00:11:37,339 --> 00:11:41,880
if you look at uh existing scheduling

272
00:11:41,880 --> 00:11:45,360
Paradigm uh all the all the scheduling

273
00:11:45,360 --> 00:11:47,640
is done by the normal world

274
00:11:47,640 --> 00:11:50,040
naive implementation is to move the

275
00:11:50,040 --> 00:11:52,339
complex Linux scheduler to the secure

276
00:11:52,339 --> 00:11:55,740
however if you if we do that then secure

277
00:11:55,740 --> 00:11:58,800
work would not only need to know

278
00:11:58,800 --> 00:12:02,339
um its own scheduling contest but also

279
00:12:02,339 --> 00:12:06,060
all the complex tasks structures inside

280
00:12:06,060 --> 00:12:08,579
the normal work kernel and that would

281
00:12:08,579 --> 00:12:11,540
significantly uh increase the complexity

282
00:12:11,540 --> 00:12:15,019
of the secure

283
00:12:15,360 --> 00:12:17,880
uh within this hierarchical scheduling

284
00:12:17,880 --> 00:12:21,140
framework uh then we can

285
00:12:21,140 --> 00:12:22,760
decouple

286
00:12:22,760 --> 00:12:26,459
the real-time responsiveness from the

287
00:12:26,459 --> 00:12:30,200
complexity of the scheduler design

288
00:12:30,200 --> 00:12:33,180
so hierarchical scheduling is a common

289
00:12:33,180 --> 00:12:36,240
way to perform a compositional

290
00:12:36,240 --> 00:12:38,700
scheduling within real-time computing

291
00:12:38,700 --> 00:12:41,399
and we are leveraging this real-time

292
00:12:41,399 --> 00:12:45,240
Computing tool to enable this decoupling

293
00:12:45,240 --> 00:12:48,720
uh there are two levels of uh CPU

294
00:12:48,720 --> 00:12:50,060
scheduler

295
00:12:50,060 --> 00:12:54,120
at the worst scheduler level you have it

296
00:12:54,120 --> 00:12:56,700
the sole purpose of that scheduler is to

297
00:12:56,700 --> 00:12:59,760
decide whether to run the non-secure or

298
00:12:59,760 --> 00:13:02,459
to run the secure right

299
00:13:02,459 --> 00:13:04,680
um and once you decide you hand the

300
00:13:04,680 --> 00:13:06,420
execution right to either the secure

301
00:13:06,420 --> 00:13:09,420
scheduler or the non-secure scheduler

302
00:13:09,420 --> 00:13:11,459
um this way the the work scheduler only

303
00:13:11,459 --> 00:13:13,680
needs to know very basic information

304
00:13:13,680 --> 00:13:17,339
about which word to uh to direct the

305
00:13:17,339 --> 00:13:20,399
control to and and that's it

306
00:13:20,399 --> 00:13:22,260
however it's actually not that easy

307
00:13:22,260 --> 00:13:24,600
there are if you look at it there are

308
00:13:24,600 --> 00:13:26,700
many challenges in terms of

309
00:13:26,700 --> 00:13:28,860
um not having multiple physical Hammer

310
00:13:28,860 --> 00:13:32,220
uh interrupts uh we have a lot more

311
00:13:32,220 --> 00:13:34,380
detail in terms of Designing this policy

312
00:13:34,380 --> 00:13:36,240
based and event-based optimization in

313
00:13:36,240 --> 00:13:39,899
the paper but from a very high level at

314
00:13:39,899 --> 00:13:43,680
design time we need to fit the task

315
00:13:43,680 --> 00:13:46,440
execution model such as

316
00:13:46,440 --> 00:13:48,600
um you know is it periodic task is it

317
00:13:48,600 --> 00:13:50,940
sporadic task the scheduling algorithm

318
00:13:50,940 --> 00:13:53,820
is it Raymond and tonic into this

319
00:13:53,820 --> 00:13:57,540
composition scheduling analysis uh using

320
00:13:57,540 --> 00:13:59,480
the compositional scheduling analysis

321
00:13:59,480 --> 00:14:03,420
you get the word policy which is to get

322
00:14:03,420 --> 00:14:06,060
fed into the work scheduler and the

323
00:14:06,060 --> 00:14:07,740
individuals

324
00:14:07,740 --> 00:14:10,800
uh OS scheduler can can handle their own

325
00:14:10,800 --> 00:14:14,339
OS time once they they got the piece of

326
00:14:14,339 --> 00:14:18,300
the slice of computation uh CPU to x to

327
00:14:18,300 --> 00:14:20,760
the execute

328
00:14:20,760 --> 00:14:23,220
how do we ensure the real-time i o

329
00:14:23,220 --> 00:14:24,779
availability without significantly

330
00:14:24,779 --> 00:14:28,260
increasing TCB that's the first research

331
00:14:28,260 --> 00:14:30,500
challenge

332
00:14:31,440 --> 00:14:32,180
um

333
00:14:32,180 --> 00:14:34,260
within that availability there are

334
00:14:34,260 --> 00:14:36,060
actually multiple smaller challenges for

335
00:14:36,060 --> 00:14:38,160
example uh like I said in the very

336
00:14:38,160 --> 00:14:40,079
beginning if you just migrate all the

337
00:14:40,079 --> 00:14:42,899
driver from normal world to secure then

338
00:14:42,899 --> 00:14:44,820
you could potentially increase the TCP

339
00:14:44,820 --> 00:14:46,680
significantly

340
00:14:46,680 --> 00:14:47,339
um

341
00:14:47,339 --> 00:14:50,100
if if you can um

342
00:14:50,100 --> 00:14:52,500
the current isolation for Te is bus

343
00:14:52,500 --> 00:14:56,160
level such as i2c bus so we don't really

344
00:14:56,160 --> 00:14:59,459
have lower than bus level uh isolation

345
00:14:59,459 --> 00:15:01,920
Hardware enforce isolation that's

346
00:15:01,920 --> 00:15:04,139
provided by trust Zone

347
00:15:04,139 --> 00:15:04,920
um

348
00:15:04,920 --> 00:15:08,100
the real-time property on iO is

349
00:15:08,100 --> 00:15:11,040
um hard to guarantee when you don't

350
00:15:11,040 --> 00:15:12,899
consider the real-time performance and

351
00:15:12,899 --> 00:15:16,459
and priority inversions

352
00:15:17,100 --> 00:15:20,220
because we're limited to 40 minutes so I

353
00:15:20,220 --> 00:15:22,980
will only go through how we solve the

354
00:15:22,980 --> 00:15:26,040
first one and if brief highlight of

355
00:15:26,040 --> 00:15:28,680
about how we solve the rest illness of

356
00:15:28,680 --> 00:15:31,620
the first challenge we Leverage The

357
00:15:31,620 --> 00:15:35,220
observation that if you look at the CPS

358
00:15:35,220 --> 00:15:37,320
sensing and actuation it's actually very

359
00:15:37,320 --> 00:15:41,160
predictable so a predictable means it

360
00:15:41,160 --> 00:15:42,899
always sends the same thing over the

361
00:15:42,899 --> 00:15:45,959
serial bus so we templatize that entire

362
00:15:45,959 --> 00:15:48,480
interaction uh that way we can

363
00:15:48,480 --> 00:15:51,920
significantly reduce the TCB

364
00:15:52,740 --> 00:15:55,320
and um but when you want to tabletize

365
00:15:55,320 --> 00:15:57,899
that that your training of the

366
00:15:57,899 --> 00:16:01,019
expressiveness of the driver with a

367
00:16:01,019 --> 00:16:03,779
smaller TCB but how do you maintain what

368
00:16:03,779 --> 00:16:06,720
happens if we need compressed features

369
00:16:06,720 --> 00:16:09,240
of driver so one of the ways that we did

370
00:16:09,240 --> 00:16:11,160
that is through a splitted kernel driver

371
00:16:11,160 --> 00:16:14,100
which which is a Sandbox to prevent it

372
00:16:14,100 --> 00:16:16,800
from compromising the uh

373
00:16:16,800 --> 00:16:20,639
the secure OS we also implemented the

374
00:16:20,639 --> 00:16:23,940
spatial temporal reference monitor to

375
00:16:23,940 --> 00:16:27,240
ensure uh that you know you cannot

376
00:16:27,240 --> 00:16:29,820
damage the motor or you cannot do

377
00:16:29,820 --> 00:16:32,959
property immersions

378
00:16:33,300 --> 00:16:36,420
to evaluate we build our own drone using

379
00:16:36,420 --> 00:16:39,839
Raspberry Pi 3 as the control processing

380
00:16:39,839 --> 00:16:41,940
board and navigo toolbar is the daughter

381
00:16:41,940 --> 00:16:43,500
board that would you know connect with

382
00:16:43,500 --> 00:16:44,880
other controls

383
00:16:44,880 --> 00:16:47,699
uh we also done this on cortex a use

384
00:16:47,699 --> 00:16:52,279
cortex M using nxp lpc55s69

385
00:16:52,279 --> 00:16:55,019
and we have both physical work

386
00:16:55,019 --> 00:16:56,699
experiments and software in the loop

387
00:16:56,699 --> 00:16:58,440
experiments

388
00:16:58,440 --> 00:17:01,320
um so we we Benchmark them and look at

389
00:17:01,320 --> 00:17:03,660
how they perform in the real world and

390
00:17:03,660 --> 00:17:06,000
we find that rtt actually has has

391
00:17:06,000 --> 00:17:08,400
minimum control impacts

392
00:17:08,400 --> 00:17:10,740
we also look at all the real-time tasks

393
00:17:10,740 --> 00:17:12,900
and we find out that the real-time tasks

394
00:17:12,900 --> 00:17:14,520
have you know none of them exceed the

395
00:17:14,520 --> 00:17:17,339
deadline either when they are protected

396
00:17:17,339 --> 00:17:19,859
by rtte

397
00:17:19,859 --> 00:17:22,980
oh um that that is the rtt end of rdt

398
00:17:22,980 --> 00:17:25,740
you work so after finishing rtte work

399
00:17:25,740 --> 00:17:29,220
because we did the um the time warping

400
00:17:29,220 --> 00:17:32,640
attack so we have noticed that

401
00:17:32,640 --> 00:17:35,160
um your trust zone is not you know

402
00:17:35,160 --> 00:17:37,440
bulletproof once you are able to slow

403
00:17:37,440 --> 00:17:40,440
down its processing things go you know

404
00:17:40,440 --> 00:17:43,380
strange or or it will crush the system

405
00:17:43,380 --> 00:17:46,020
so we ask ourselves like can we use time

406
00:17:46,020 --> 00:17:48,260
as an attack vector

407
00:17:48,260 --> 00:17:51,900
so we did a work where we look at what

408
00:17:51,900 --> 00:17:54,960
happens if we try to mess up the timing

409
00:17:54,960 --> 00:17:57,660
of your control systems

410
00:17:57,660 --> 00:18:00,900
it turns out that we analyze many slam

411
00:18:00,900 --> 00:18:03,840
algorithm slam is for localization we

412
00:18:03,840 --> 00:18:06,660
analyze many of the slam algorithms uh

413
00:18:06,660 --> 00:18:08,820
and we'll find out that you know using

414
00:18:08,820 --> 00:18:11,520
timing attack is actually possible

415
00:18:11,520 --> 00:18:14,160
to crush them and if you look at the

416
00:18:14,160 --> 00:18:16,039
open loop testing on the top right

417
00:18:16,039 --> 00:18:18,720
you'll find that you know when it's

418
00:18:18,720 --> 00:18:20,700
under attack the path deviates

419
00:18:20,700 --> 00:18:22,799
significantly from the Baseline and it

420
00:18:22,799 --> 00:18:24,840
goes to uh you know of course things are

421
00:18:24,840 --> 00:18:26,820
much worse because it's close to testing

422
00:18:26,820 --> 00:18:29,640
therefore you see the impact uh after

423
00:18:29,640 --> 00:18:32,160
each frame it accumulates

424
00:18:32,160 --> 00:18:35,640
what exactly so I I got a question

425
00:18:35,640 --> 00:18:37,919
what exactly are the secure and

426
00:18:37,919 --> 00:18:41,280
non-secure world are they separate OS

427
00:18:41,280 --> 00:18:43,140
um thanks for the question

428
00:18:43,140 --> 00:18:48,179
um so in Armstrong let me go back quite

429
00:18:48,179 --> 00:18:50,419
a bit

430
00:18:54,780 --> 00:18:57,840
so in arm trust uh Armstrong the

431
00:18:57,840 --> 00:19:02,280
terminology is that your regular OS is a

432
00:19:02,280 --> 00:19:04,679
rich OS the OS with tons of

433
00:19:04,679 --> 00:19:08,160
functionality runs on the non-secure

434
00:19:08,160 --> 00:19:10,200
states and

435
00:19:10,200 --> 00:19:12,419
um your secure OS which does just very

436
00:19:12,419 --> 00:19:14,640
limited stuff such as fingerprinting

437
00:19:14,640 --> 00:19:18,059
authentication runs on secure so you can

438
00:19:18,059 --> 00:19:20,039
understand it as two OS running on the

439
00:19:20,039 --> 00:19:22,340
same Hardware

440
00:19:25,020 --> 00:19:28,700
hopefully that answers your questions

441
00:19:31,620 --> 00:19:33,419
okay

442
00:19:33,419 --> 00:19:37,500
um so the the next thing we look at is

443
00:19:37,500 --> 00:19:39,299
you know can we use timing as an

444
00:19:39,299 --> 00:19:40,620
attacker

445
00:19:40,620 --> 00:19:45,000
and we analyze them and find out we can

446
00:19:45,000 --> 00:19:46,200
um you know that's good news for

447
00:19:46,200 --> 00:19:49,380
attacker but bad news for Defender

448
00:19:49,380 --> 00:19:53,340
um but but in that attack we actually

449
00:19:53,340 --> 00:19:57,840
need to do many uh manual tuning and

450
00:19:57,840 --> 00:20:01,740
manual uh investigation and profiling of

451
00:20:01,740 --> 00:20:03,179
the system in order to launch the attack

452
00:20:03,179 --> 00:20:05,640
so we immediately trying to you know we

453
00:20:05,640 --> 00:20:07,559
are computer scientists so can we

454
00:20:07,559 --> 00:20:09,960
automate these attacks

455
00:20:09,960 --> 00:20:13,440
um so in our RT recent rtss work we look

456
00:20:13,440 --> 00:20:15,780
at is it possible to automate the

457
00:20:15,780 --> 00:20:19,200
resource contention based timing attack

458
00:20:19,200 --> 00:20:21,299
um there are three separate research

459
00:20:21,299 --> 00:20:23,580
challenges the first one is

460
00:20:23,580 --> 00:20:25,919
um you know what our complete set of

461
00:20:25,919 --> 00:20:28,260
resource contention channels right

462
00:20:28,260 --> 00:20:32,700
um in our CCS work we basically look at

463
00:20:32,700 --> 00:20:35,280
um cash but there are file system based

464
00:20:35,280 --> 00:20:37,260
there are network based

465
00:20:37,260 --> 00:20:38,940
um and how do we automatically tune the

466
00:20:38,940 --> 00:20:41,820
Primitive of each uh the parameters of

467
00:20:41,820 --> 00:20:44,580
each primitive and the last one is how

468
00:20:44,580 --> 00:20:46,860
do we adaptively select the combination

469
00:20:46,860 --> 00:20:48,660
of different channels you know both

470
00:20:48,660 --> 00:20:50,700
especially in other words in one time

471
00:20:50,700 --> 00:20:52,700
slides which channel are going to use

472
00:20:52,700 --> 00:20:57,360
and you know temporarily in other words

473
00:20:57,360 --> 00:20:58,500
um

474
00:20:58,500 --> 00:21:01,440
for each of the time slides how should

475
00:21:01,440 --> 00:21:03,419
you vary a between the channels you

476
00:21:03,419 --> 00:21:05,100
don't log into one channel right to

477
00:21:05,100 --> 00:21:08,640
maximum maximize data impact so um by

478
00:21:08,640 --> 00:21:10,559
description you can probably tell it's a

479
00:21:10,559 --> 00:21:12,539
very large search space

480
00:21:12,539 --> 00:21:15,600
um so we start tackling this challenge

481
00:21:15,600 --> 00:21:19,140
by solving existing work to look at what

482
00:21:19,140 --> 00:21:21,059
are the performance uh contention

483
00:21:21,059 --> 00:21:24,120
channels right uh interestingly it's

484
00:21:24,120 --> 00:21:25,380
actually very

485
00:21:25,380 --> 00:21:27,780
um closely related to side channels so

486
00:21:27,780 --> 00:21:29,220
we get quite a bit of inspiration from

487
00:21:29,220 --> 00:21:31,980
there and then we develop a free Phase

488
00:21:31,980 --> 00:21:34,679
template attack also inspired by cache

489
00:21:34,679 --> 00:21:35,780
template attack

490
00:21:35,780 --> 00:21:39,000
so the free Phase basically tackles each

491
00:21:39,000 --> 00:21:40,880
of the challenge stage

492
00:21:40,880 --> 00:21:43,860
in the first phase we use genetic

493
00:21:43,860 --> 00:21:45,840
algorithm to automatically find the

494
00:21:45,840 --> 00:21:47,940
right parameter for each of the

495
00:21:47,940 --> 00:21:50,940
primitive and in the second phase we

496
00:21:50,940 --> 00:21:52,860
basically look at our Target that we

497
00:21:52,860 --> 00:21:54,780
want to close performance significance

498
00:21:54,780 --> 00:21:58,080
on and as you know you know let's search

499
00:21:58,080 --> 00:22:01,200
for which Primitives is most effective

500
00:22:01,200 --> 00:22:03,000
and for the last one we use

501
00:22:03,000 --> 00:22:05,340
reinforcement learning to learn the time

502
00:22:05,340 --> 00:22:08,460
series of what primitive we should use

503
00:22:08,460 --> 00:22:11,299
at each stage

504
00:22:11,480 --> 00:22:15,000
and the yellow bar is our attack as you

505
00:22:15,000 --> 00:22:17,159
can see it's significantly better than

506
00:22:17,159 --> 00:22:21,620
just you know bluntly writing memory

507
00:22:22,440 --> 00:22:24,539
um so on the left are our Benchmark

508
00:22:24,539 --> 00:22:28,919
attacks uh so uh disparity MSR and svm

509
00:22:28,919 --> 00:22:31,799
are you know cortex and testing Suites

510
00:22:31,799 --> 00:22:34,200
and on the right we're actually the the

511
00:22:34,200 --> 00:22:37,320
figure shows our attack on an actual

512
00:22:37,320 --> 00:22:40,460
localization algorithm and you can see

513
00:22:40,460 --> 00:22:43,919
our attack using i o model which is the

514
00:22:43,919 --> 00:22:48,059
brown uh tilted slash we're able to

515
00:22:48,059 --> 00:22:53,880
cause deadline misses uh and let me see

516
00:22:53,880 --> 00:22:58,980
in iteration uh 2500.

517
00:23:00,780 --> 00:23:03,600
now with the automatic attack uh we

518
00:23:03,600 --> 00:23:05,760
which you under the previous work we

519
00:23:05,760 --> 00:23:08,280
show that it's possible to do auto to

520
00:23:08,280 --> 00:23:10,740
automate this attack then we ask the

521
00:23:10,740 --> 00:23:12,419
question you know can we defend against

522
00:23:12,419 --> 00:23:15,179
this no if we cannot defend against at

523
00:23:15,179 --> 00:23:17,400
least we should be able to mitigate this

524
00:23:17,400 --> 00:23:18,900
right

525
00:23:18,900 --> 00:23:21,840
um and this work up here in Iris this

526
00:23:21,840 --> 00:23:24,179
year my student was actually

527
00:23:24,179 --> 00:23:26,820
um just presented this yesterday in

528
00:23:26,820 --> 00:23:28,260
Kyoto

529
00:23:28,260 --> 00:23:29,659
um

530
00:23:29,659 --> 00:23:33,120
so on the picture you can see four

531
00:23:33,120 --> 00:23:37,260
trajectories top left is without uh you

532
00:23:37,260 --> 00:23:39,240
know no resource constraint uh there's

533
00:23:39,240 --> 00:23:41,340
no timing anomaly

534
00:23:41,340 --> 00:23:43,980
um top right and bottom left uh the

535
00:23:43,980 --> 00:23:46,260
resource constraint performs in The

536
00:23:46,260 --> 00:23:49,500
Yards there are uh resource contention

537
00:23:49,500 --> 00:23:52,200
due to platform resource uh limited

538
00:23:52,200 --> 00:23:54,480
performance resources and you can see

539
00:23:54,480 --> 00:23:57,299
the structure is all out of whack and

540
00:23:57,299 --> 00:23:59,220
using our mitigation on the bottom right

541
00:23:59,220 --> 00:24:01,500
you can see all the trajectories remain

542
00:24:01,500 --> 00:24:05,820
uh somewhat aligned with the Baseline

543
00:24:05,820 --> 00:24:09,600
now in order to go into how we were able

544
00:24:09,600 --> 00:24:12,120
to design this mitigation step uh we

545
00:24:12,120 --> 00:24:13,980
need to understand that in Slam

546
00:24:13,980 --> 00:24:15,960
algorithm there's a front end and back

547
00:24:15,960 --> 00:24:19,799
end and uh through our analysis we find

548
00:24:19,799 --> 00:24:22,260
out that most of the tech was able was

549
00:24:22,260 --> 00:24:24,240
uh successful because it was

550
00:24:24,240 --> 00:24:27,480
desynchronizing front-end and back end

551
00:24:27,480 --> 00:24:30,659
so uh our mitigation on the timing

552
00:24:30,659 --> 00:24:33,600
attack is uh we perform online

553
00:24:33,600 --> 00:24:34,740
adaptation

554
00:24:34,740 --> 00:24:37,700
where the online adaptation

555
00:24:37,700 --> 00:24:43,260
basically made a specifically a pig

556
00:24:43,260 --> 00:24:46,020
samples that are temporarily aligned

557
00:24:46,020 --> 00:24:47,580
with each other

558
00:24:47,580 --> 00:24:49,200
um but then how do you know how many to

559
00:24:49,200 --> 00:24:53,520
pick so we use an AI model to predict

560
00:24:53,520 --> 00:24:54,960
um

561
00:24:54,960 --> 00:24:57,360
what is our coming budget and how much

562
00:24:57,360 --> 00:24:59,880
we are delaying

563
00:24:59,880 --> 00:25:04,200
and the outcome as you can see at the uh

564
00:25:04,200 --> 00:25:07,260
1 000 millisecond tick or 100 minutes

565
00:25:07,260 --> 00:25:09,299
can take 10 points we start launching

566
00:25:09,299 --> 00:25:13,440
the attack uh you can see on the bottom

567
00:25:13,440 --> 00:25:17,400
left the the purple one uh purple line

568
00:25:17,400 --> 00:25:21,059
is the response time uh without our

569
00:25:21,059 --> 00:25:23,280
mitigation and the green line is worth

570
00:25:23,280 --> 00:25:26,520
and hours performed significantly better

571
00:25:26,520 --> 00:25:29,220
and on the bottom right you can see the

572
00:25:29,220 --> 00:25:32,039
diagram where it shows that using our

573
00:25:32,039 --> 00:25:34,860
mitigation step we are able to mitigate

574
00:25:34,860 --> 00:25:37,080
the timing attack or at least timing

575
00:25:37,080 --> 00:25:39,600
anomaly

576
00:25:39,600 --> 00:25:42,720
so with that uh I just went through our

577
00:25:42,720 --> 00:25:45,779
research on system security of cyber

578
00:25:45,779 --> 00:25:48,179
physical systems I'm going to pause here

579
00:25:48,179 --> 00:25:52,520
and take any questions if there's any

580
00:25:53,700 --> 00:25:56,279
nope okay

581
00:25:56,279 --> 00:25:59,220
um so I have about 40 minutes left

582
00:25:59,220 --> 00:26:01,559
um uh you know I would just talk about

583
00:26:01,559 --> 00:26:04,440
one word in our emerging uh in our

584
00:26:04,440 --> 00:26:07,760
privacy line of work

585
00:26:08,100 --> 00:26:11,220
um this one is in this year's ccs and we

586
00:26:11,220 --> 00:26:15,000
are developing a usable spy camera

587
00:26:15,000 --> 00:26:17,659
detector

588
00:26:18,179 --> 00:26:21,179
um so spy camera actually has been a

589
00:26:21,179 --> 00:26:22,260
real world

590
00:26:22,260 --> 00:26:24,779
uh physical privacy thread uh as you can

591
00:26:24,779 --> 00:26:28,620
see from all the news uh and Airbnb was

592
00:26:28,620 --> 00:26:30,419
uh you know equipped with many spy

593
00:26:30,419 --> 00:26:33,059
cameras so we asked ourselves you know

594
00:26:33,059 --> 00:26:36,120
what does my camera look like uh so we

595
00:26:36,120 --> 00:26:38,460
went out and purchased every single spy

596
00:26:38,460 --> 00:26:41,100
camera on Amazon and this is the

597
00:26:41,100 --> 00:26:43,260
collection as you can see

598
00:26:43,260 --> 00:26:45,779
um so some of the spy cameras they are

599
00:26:45,779 --> 00:26:48,000
disguised as Electronics some of them

600
00:26:48,000 --> 00:26:50,820
are disguised as photo frames

601
00:26:50,820 --> 00:26:51,419
um

602
00:26:51,419 --> 00:26:53,460
keep this in mind because it's important

603
00:26:53,460 --> 00:26:56,760
to for our solution

604
00:26:56,760 --> 00:26:59,520
existing approach generally use either

605
00:26:59,520 --> 00:27:02,520
if so for many of the spy cameras

606
00:27:02,520 --> 00:27:04,860
because they are Wi-Fi enabled spy

607
00:27:04,860 --> 00:27:07,500
cameras so of course if you look at if

608
00:27:07,500 --> 00:27:09,240
you move around

609
00:27:09,240 --> 00:27:11,220
um Wi-Fi actually transmits packet

610
00:27:11,220 --> 00:27:12,720
because you know it detected moving

611
00:27:12,720 --> 00:27:14,760
stuff and the move uh and the video

612
00:27:14,760 --> 00:27:17,400
stream compression changes right so that

613
00:27:17,400 --> 00:27:19,919
would allow you to correlate the event

614
00:27:19,919 --> 00:27:23,520
um but then you know this is great but

615
00:27:23,520 --> 00:27:25,500
um what happens to some of the spy

616
00:27:25,500 --> 00:27:27,900
cameras that doesn't transmit uh in our

617
00:27:27,900 --> 00:27:30,360
Market survey where we purchase all the

618
00:27:30,360 --> 00:27:32,340
spy cameras we find that many of them

619
00:27:32,340 --> 00:27:34,919
you know actually doesn't transmit about

620
00:27:34,919 --> 00:27:38,039
40 if I recall correctly

621
00:27:38,039 --> 00:27:38,700
um

622
00:27:38,700 --> 00:27:42,240
the other approach is using a red light

623
00:27:42,240 --> 00:27:44,760
to flicker around and hopefully the the

624
00:27:44,760 --> 00:27:48,179
camera lens will reflect back the light

625
00:27:48,179 --> 00:27:51,720
to you so you can see a flashing Dot

626
00:27:51,720 --> 00:27:54,480
um so this also works great

627
00:27:54,480 --> 00:27:56,279
um but sometimes you need to know where

628
00:27:56,279 --> 00:28:00,539
to look at because the reflection is

629
00:28:00,539 --> 00:28:02,520
um you know works very well when you're

630
00:28:02,520 --> 00:28:04,799
directly against it but when you're like

631
00:28:04,799 --> 00:28:06,779
at a tilted angle it's a lot more

632
00:28:06,779 --> 00:28:08,520
difficult to spot so you need to have

633
00:28:08,520 --> 00:28:11,179
expertise

634
00:28:11,700 --> 00:28:13,500
um then then we'll come up with the way

635
00:28:13,500 --> 00:28:16,320
we say you know geez I mean um

636
00:28:16,320 --> 00:28:18,840
a photo frame shouldn't be shouldn't

637
00:28:18,840 --> 00:28:21,299
have hit on right uh what's going on so

638
00:28:21,299 --> 00:28:23,279
so we said you know let's use thermal

639
00:28:23,279 --> 00:28:24,779
emissions

640
00:28:24,779 --> 00:28:27,960
um so as you can see from the picture

641
00:28:27,960 --> 00:28:30,179
um not only does those photo frames that

642
00:28:30,179 --> 00:28:32,520
are supposed to heat up uh heat up but

643
00:28:32,520 --> 00:28:34,620
also if you look at things that is

644
00:28:34,620 --> 00:28:36,960
supposed to heat up it's actually much

645
00:28:36,960 --> 00:28:39,179
hotter because

646
00:28:39,179 --> 00:28:40,919
um it's you know you need to process all

647
00:28:40,919 --> 00:28:43,799
the video and save them in SD cards and

648
00:28:43,799 --> 00:28:45,539
one of the interesting thing that we

649
00:28:45,539 --> 00:28:47,880
teach the machine learning algorithm to

650
00:28:47,880 --> 00:28:51,240
learn is that if you think about the

651
00:28:51,240 --> 00:28:54,059
packaging of the product right

652
00:28:54,059 --> 00:28:55,919
um in order to be stealthy you need to

653
00:28:55,919 --> 00:28:57,360
keep the original external packages

654
00:28:57,360 --> 00:29:00,600
right but you need to fit extra extra

655
00:29:00,600 --> 00:29:03,779
Electronic Component inside that changes

656
00:29:03,779 --> 00:29:06,600
the heat distribution of the case so if

657
00:29:06,600 --> 00:29:07,679
you look at the case the heat

658
00:29:07,679 --> 00:29:09,659
distribution pattern you'll find that

659
00:29:09,659 --> 00:29:12,960
side cameras is quite unique

660
00:29:12,960 --> 00:29:15,840
so um in order to you know because I

661
00:29:15,840 --> 00:29:18,960
mean not everybody knows those Pat what

662
00:29:18,960 --> 00:29:20,760
those pattern looks like so in order to

663
00:29:20,760 --> 00:29:22,919
make this particular tool more usable by

664
00:29:22,919 --> 00:29:25,440
the general public and we develop a

665
00:29:25,440 --> 00:29:27,120
neural network to try to recognize those

666
00:29:27,120 --> 00:29:29,520
patterns because you know AI is very

667
00:29:29,520 --> 00:29:32,539
good at recognizing patterns

668
00:29:32,539 --> 00:29:35,279
and we because it's a data driven

669
00:29:35,279 --> 00:29:37,620
approach uh we actually collected large

670
00:29:37,620 --> 00:29:39,480
amount of photos

671
00:29:39,480 --> 00:29:42,539
um we are making this repository uh

672
00:29:42,539 --> 00:29:45,120
available for the community so please

673
00:29:45,120 --> 00:29:47,100
please contact us and make use of the

674
00:29:47,100 --> 00:29:49,699
data sets

675
00:29:50,220 --> 00:29:54,600
uh now so besides privacy we're also

676
00:29:54,600 --> 00:29:56,820
interested in looking at you know the

677
00:29:56,820 --> 00:29:58,679
algorithm level vulnerabilities of the

678
00:29:58,679 --> 00:30:00,299
Cyber physical world

679
00:30:00,299 --> 00:30:02,100
um so I'll highlight two work that we've

680
00:30:02,100 --> 00:30:04,020
done here uh one is this we're

681
00:30:04,020 --> 00:30:06,720
realizable of zero uh example audio

682
00:30:06,720 --> 00:30:09,360
examples and then uh semantic preserving

683
00:30:09,360 --> 00:30:12,199
audio examples

684
00:30:12,779 --> 00:30:14,940
um in this uh in this paper called when

685
00:30:14,940 --> 00:30:16,980
it will cost targeted advers0 what is

686
00:30:16,980 --> 00:30:18,299
over IP

687
00:30:18,299 --> 00:30:20,940
um we're asking the research question of

688
00:30:20,940 --> 00:30:22,559
how does new connectivity in the

689
00:30:22,559 --> 00:30:24,419
physical world impact the iot system

690
00:30:24,419 --> 00:30:25,440
security

691
00:30:25,440 --> 00:30:28,340
foreign

692
00:30:28,340 --> 00:30:31,620
has reshaped our life forever uh like it

693
00:30:31,620 --> 00:30:33,299
or not you know right now we are very

694
00:30:33,299 --> 00:30:35,460
used to zoom and delivering a talk with

695
00:30:35,460 --> 00:30:37,620
your Zoom I can you know

696
00:30:37,620 --> 00:30:39,539
three years ago I wouldn't think this is

697
00:30:39,539 --> 00:30:42,000
possible I wouldn't think this is wrong

698
00:30:42,000 --> 00:30:44,399
um but now it is so

699
00:30:44,399 --> 00:30:46,679
um you know every audio samples has been

700
00:30:46,679 --> 00:30:49,140
around for quite a bit so you know our

701
00:30:49,140 --> 00:30:51,720
group was asking oh geez is it possible

702
00:30:51,720 --> 00:30:54,419
to deliver F0 audio through Zoom then

703
00:30:54,419 --> 00:30:55,980
you sort of have this teleport system

704
00:30:55,980 --> 00:30:58,080
that can deliver or have a zero audios

705
00:30:58,080 --> 00:30:59,520
you know you don't need to be not right

706
00:30:59,520 --> 00:31:02,059
next to it anymore

707
00:31:02,580 --> 00:31:04,500
um it turns out that yes it's possible

708
00:31:04,500 --> 00:31:06,659
because we were able to do it but on the

709
00:31:06,659 --> 00:31:09,120
other hand it's actually much harder

710
00:31:09,120 --> 00:31:10,500
um because

711
00:31:10,500 --> 00:31:11,100
um

712
00:31:11,100 --> 00:31:15,299
for all the voice over IP Solutions uh

713
00:31:15,299 --> 00:31:16,559
you actually need to go through a whole

714
00:31:16,559 --> 00:31:18,480
bunch of processings including encoding

715
00:31:18,480 --> 00:31:21,299
decoding transmission sometimes package

716
00:31:21,299 --> 00:31:23,820
job uh and and you know in order to

717
00:31:23,820 --> 00:31:26,039
optimizing performance many of the voice

718
00:31:26,039 --> 00:31:28,200
over IP Solutions actually decided to

719
00:31:28,200 --> 00:31:30,000
filter out the frequencies that is not

720
00:31:30,000 --> 00:31:32,220
important for human to hear

721
00:31:32,220 --> 00:31:33,840
um but it's actually very important for

722
00:31:33,840 --> 00:31:36,600
our zero examples because we inject in

723
00:31:36,600 --> 00:31:39,779
places that can maximize the deviation

724
00:31:39,779 --> 00:31:42,960
probability once it reached the decision

725
00:31:42,960 --> 00:31:46,080
boundary right

726
00:31:46,080 --> 00:31:47,399
um now we also find out there's a whole

727
00:31:47,399 --> 00:31:49,559
bunch of noise uh that we weren't

728
00:31:49,559 --> 00:31:51,960
expecting because it's supposed to be

729
00:31:51,960 --> 00:31:54,179
completely digital uh turns out that

730
00:31:54,179 --> 00:31:57,240
there are many noises in

731
00:31:57,240 --> 00:31:59,760
um the uh encoding and decoding process

732
00:31:59,760 --> 00:32:03,059
and also uh the entire pipeline so we

733
00:32:03,059 --> 00:32:04,380
did a whole bunch of reverse engineering

734
00:32:04,380 --> 00:32:07,020
to understand them and we designed a

735
00:32:07,020 --> 00:32:09,600
query based system to come up with

736
00:32:09,600 --> 00:32:11,460
adversary examples

737
00:32:11,460 --> 00:32:15,299
um we've performed attack on four of the

738
00:32:15,299 --> 00:32:17,580
popular voice assistants including you

739
00:32:17,580 --> 00:32:21,240
know Amazon Echo uh over all types of

740
00:32:21,240 --> 00:32:24,179
video conferencing software

741
00:32:24,179 --> 00:32:26,340
um you know generally if over the Lions

742
00:32:26,340 --> 00:32:29,159
have we only need uh only 100 and 500

743
00:32:29,159 --> 00:32:32,460
queries so that's that's quite fast

744
00:32:32,460 --> 00:32:34,799
um we are able to also demonstrate it's

745
00:32:34,799 --> 00:32:36,120
possible to perform all the error attack

746
00:32:36,120 --> 00:32:38,580
without getting highlighted because I

747
00:32:38,580 --> 00:32:40,980
mean one of the things uh in Zoom is

748
00:32:40,980 --> 00:32:44,220
that when you talk Zoom highlight you

749
00:32:44,220 --> 00:32:46,679
but if I'm the attacker I really don't

750
00:32:46,679 --> 00:32:48,840
want you to highlight me because I am

751
00:32:48,840 --> 00:32:50,159
sending the attack right I don't want to

752
00:32:50,159 --> 00:32:53,039
get attributed so we look at it's

753
00:32:53,039 --> 00:32:55,500
possible to hide just below the speaker

754
00:32:55,500 --> 00:32:59,279
volume and you know play baby crying or

755
00:32:59,279 --> 00:33:01,860
play the car driving by or play the

756
00:33:01,860 --> 00:33:03,240
sirens

757
00:33:03,240 --> 00:33:05,460
um so uh the website is right there if

758
00:33:05,460 --> 00:33:07,320
you're interested please go on to the

759
00:33:07,320 --> 00:33:09,299
website you can hear some of our several

760
00:33:09,299 --> 00:33:10,559
examples

761
00:33:10,559 --> 00:33:13,140
um there's a baby crying that embeds a

762
00:33:13,140 --> 00:33:15,539
malicious comment

763
00:33:15,539 --> 00:33:17,640
now lastly you're probably going to be

764
00:33:17,640 --> 00:33:21,240
asking a question of uh geez now you can

765
00:33:21,240 --> 00:33:23,820
of course you can deliver a zero audios

766
00:33:23,820 --> 00:33:27,360
but how about voice authentication

767
00:33:27,360 --> 00:33:29,399
um you know and and also I mean car horn

768
00:33:29,399 --> 00:33:31,320
is pretty obvious

769
00:33:31,320 --> 00:33:33,120
um you know then we asked ourselves can

770
00:33:33,120 --> 00:33:34,620
we do better in terms of making

771
00:33:34,620 --> 00:33:37,440
ourselves more stealthy and the solution

772
00:33:37,440 --> 00:33:39,919
we come up with is uh semantic

773
00:33:39,919 --> 00:33:43,880
meaningful adversarial audio attack

774
00:33:45,059 --> 00:33:48,299
um so in this particular work uh it it

775
00:33:48,299 --> 00:33:51,840
just got accepted to using security uh

776
00:33:51,840 --> 00:33:55,440
the 2023 and

777
00:33:55,440 --> 00:33:58,620
um we aim to use semantic adversarial

778
00:33:58,620 --> 00:34:03,260
audio to attack the ASR and Sr so the

779
00:34:03,260 --> 00:34:05,159
transcription system and the speaker

780
00:34:05,159 --> 00:34:08,059
recognition systems

781
00:34:08,099 --> 00:34:11,820
uh so different and previous work a

782
00:34:11,820 --> 00:34:13,800
little bit uh instead of traditional LP

783
00:34:13,800 --> 00:34:16,379
base so you just inject voice into the

784
00:34:16,379 --> 00:34:18,960
entire Spectrum uh we do semantic

785
00:34:18,960 --> 00:34:22,679
perturbation so you'll probably asking

786
00:34:22,679 --> 00:34:24,800
what is semantic propagate uh

787
00:34:24,800 --> 00:34:27,179
perturbation right

788
00:34:27,179 --> 00:34:30,260
um so in this particular case we look at

789
00:34:30,260 --> 00:34:33,300
porosity and porosity is a semantic

790
00:34:33,300 --> 00:34:34,918
feature so it's something like are you

791
00:34:34,918 --> 00:34:37,440
angry how fast are you talking you have

792
00:34:37,440 --> 00:34:39,719
accent and things like that I'm going to

793
00:34:39,719 --> 00:34:41,520
have an audio sample that you can listen

794
00:34:41,520 --> 00:34:44,399
to uh in a bit and I just want to show

795
00:34:44,399 --> 00:34:46,460
this diagram because I want to show you

796
00:34:46,460 --> 00:34:50,639
in order to change a tune tune to from

797
00:34:50,639 --> 00:34:53,280
you know anger to happy you actually

798
00:34:53,280 --> 00:34:54,780
need to change a whole bunch of things

799
00:34:54,780 --> 00:34:57,660
across the temporal spec it's not just

800
00:34:57,660 --> 00:34:59,520
one point or two points and that's what

801
00:34:59,520 --> 00:35:03,300
makes it hard so we come up with

802
00:35:03,300 --> 00:35:07,500
um a generative method to combine the

803
00:35:07,500 --> 00:35:09,480
original audio and the processing

804
00:35:09,480 --> 00:35:12,780
manipulation Vector to create this type

805
00:35:12,780 --> 00:35:14,300
of

806
00:35:14,300 --> 00:35:17,460
porosity natural

807
00:35:17,460 --> 00:35:21,240
semantic meaningful adversarial examples

808
00:35:21,240 --> 00:35:23,640
and I just want to show quickly what

809
00:35:23,640 --> 00:35:25,560
does it look like so to human is

810
00:35:25,560 --> 00:35:27,960
supposed to listen as uh wipe the floor

811
00:35:27,960 --> 00:35:32,180
but machine it says it's open the door

812
00:35:32,880 --> 00:35:35,720
we'll play again

813
00:35:37,820 --> 00:35:40,980
and this is also wipe the floor but it

814
00:35:40,980 --> 00:35:43,380
says what I want to share

815
00:35:43,380 --> 00:35:46,619
bite the floor right so it shows like

816
00:35:46,619 --> 00:35:49,260
two changes I mean to human it sounds

817
00:35:49,260 --> 00:35:51,420
almost exactly the same it's exactly my

818
00:35:51,420 --> 00:35:52,859
tongue is different my mood is different

819
00:35:52,859 --> 00:35:57,119
but to machine is it's quite different

820
00:35:57,119 --> 00:35:58,260
um

821
00:35:58,260 --> 00:36:00,540
and lastly I just want to highlight our

822
00:36:00,540 --> 00:36:03,780
ongoing work uh called opcps open

823
00:36:03,780 --> 00:36:05,880
platform for cyber physical systems

824
00:36:05,880 --> 00:36:09,780
security research uh within this

825
00:36:09,780 --> 00:36:12,060
um so at what Shield we have a whole

826
00:36:12,060 --> 00:36:13,980
bunch of cyber physical systems that we

827
00:36:13,980 --> 00:36:16,640
built ourselves uh we work with

828
00:36:16,640 --> 00:36:18,780
hospitals and

829
00:36:18,780 --> 00:36:20,160
um we're trying to aggregate all the

830
00:36:20,160 --> 00:36:21,960
stuff because one of the key challenge

831
00:36:21,960 --> 00:36:25,140
of cyber physical system research

832
00:36:25,140 --> 00:36:27,660
um this lack of system to the physical

833
00:36:27,660 --> 00:36:29,880
thing and

834
00:36:29,880 --> 00:36:32,820
um we want to be able to

835
00:36:32,820 --> 00:36:35,220
allow remote access into this physical

836
00:36:35,220 --> 00:36:37,260
system so that we can conduct system

837
00:36:37,260 --> 00:36:39,780
research on top of it if you're

838
00:36:39,780 --> 00:36:42,240
interested please talk to me uh I'm

839
00:36:42,240 --> 00:36:44,220
trying to get this started but again it

840
00:36:44,220 --> 00:36:46,200
doesn't have to be my thing it should be

841
00:36:46,200 --> 00:36:49,020
a our thing

842
00:36:49,020 --> 00:36:51,300
and lastly I I sincerely want to thank

843
00:36:51,300 --> 00:36:52,859
all my students

844
00:36:52,859 --> 00:36:55,200
um you know these are brilliant work

845
00:36:55,200 --> 00:36:58,440
with my students without them none of

846
00:36:58,440 --> 00:37:00,599
this would be possible and I also like

847
00:37:00,599 --> 00:37:03,240
to thank all the funding agencies uh

848
00:37:03,240 --> 00:37:08,579
including NSF DHS uh Ambitions office

849
00:37:08,579 --> 00:37:09,980
and

850
00:37:09,980 --> 00:37:14,220
doe and lastly washu for supporting me

851
00:37:14,220 --> 00:37:15,180
um

852
00:37:15,180 --> 00:37:18,000
thank you so much and I'm going to take

853
00:37:18,000 --> 00:37:20,180
questions

854
00:37:21,839 --> 00:37:25,680
um my question is in your first work so

855
00:37:25,680 --> 00:37:27,420
you mentioned that you have the kind of

856
00:37:27,420 --> 00:37:29,880
word scheduler right so I'm going to top

857
00:37:29,880 --> 00:37:31,680
up the

858
00:37:31,680 --> 00:37:35,839
the normal and a secure work right so

859
00:37:35,839 --> 00:37:38,760
this scheduler I mean is supposed to be

860
00:37:38,760 --> 00:37:40,020
protected

861
00:37:40,020 --> 00:37:42,480
yes the work scheduler is in the secure

862
00:37:42,480 --> 00:37:45,359
world so it's uh within the traffic base

863
00:37:45,359 --> 00:37:47,520
it's a soon to be secure okay and if the

864
00:37:47,520 --> 00:37:49,140
work schedule is broken then we're you

865
00:37:49,140 --> 00:37:50,579
know there's no security guarantee okay

866
00:37:50,579 --> 00:37:53,579
so it's insecure word yes okay yes

867
00:37:53,579 --> 00:37:56,280
anything on the right is unsecure so

868
00:37:56,280 --> 00:37:58,380
including the secure World OS schedule

869
00:37:58,380 --> 00:38:01,680
yeah we have Implement our own secure OS

870
00:38:01,680 --> 00:38:05,099
scheduler it's fairly simple but clearly

871
00:38:05,099 --> 00:38:09,300
the more complex uh you go with the

872
00:38:09,300 --> 00:38:11,280
scheduling algorithm in the secure yeah

873
00:38:11,280 --> 00:38:15,619
the the more complex the TCB is yeah

874
00:38:16,859 --> 00:38:18,599
another question that I'm just curious

875
00:38:18,599 --> 00:38:21,240
so you mentioned this a spy camera right

876
00:38:21,240 --> 00:38:23,520
so and also you show the picture that

877
00:38:23,520 --> 00:38:26,880
there's the there's a lamp yep

878
00:38:26,880 --> 00:38:31,079
and the looks like their camera is right

879
00:38:31,079 --> 00:38:33,599
on the right in the middle yes right so

880
00:38:33,599 --> 00:38:36,839
you're trying to detect the heat do you

881
00:38:36,839 --> 00:38:38,760
think that's going to be difficult

882
00:38:38,760 --> 00:38:40,680
because um yeah it's supposed to be heat

883
00:38:40,680 --> 00:38:41,880
yeah yeah

884
00:38:41,880 --> 00:38:45,240
um that's a very good question uh in

885
00:38:45,240 --> 00:38:47,460
Everest environment where it was

886
00:38:47,460 --> 00:38:49,079
originally it was generating a lot of

887
00:38:49,079 --> 00:38:50,220
heat

888
00:38:50,220 --> 00:38:53,280
um heat heat itself should not be the

889
00:38:53,280 --> 00:38:55,619
only determination so that's why we use

890
00:38:55,619 --> 00:38:57,780
the neural network to train to recognize

891
00:38:57,780 --> 00:39:01,800
patterns so um but you know if you see a

892
00:39:01,800 --> 00:39:04,260
light bulb that's not evenly heated and

893
00:39:04,260 --> 00:39:06,300
you know on the side it's heated and

894
00:39:06,300 --> 00:39:07,920
then in the middle there's a ring that

895
00:39:07,920 --> 00:39:09,839
is cold and the center again there's

896
00:39:09,839 --> 00:39:12,780
another heating spot then some you know

897
00:39:12,780 --> 00:39:16,140
it's not a normal rifle okay so yeah and

898
00:39:16,140 --> 00:39:17,599
then you're yeah

899
00:39:17,599 --> 00:39:20,880
it's off it's a it's a it's easier to

900
00:39:20,880 --> 00:39:22,800
detect all right yeah it's fairly easy

901
00:39:22,800 --> 00:39:26,119
for the new one that could detected

902
00:39:29,400 --> 00:39:32,280
I mean until people use those type of

903
00:39:32,280 --> 00:39:34,800
weird levels all around then it's a

904
00:39:34,800 --> 00:39:36,720
different story yeah that's a good idea

905
00:39:36,720 --> 00:39:39,720
yeah

906
00:39:40,579 --> 00:39:44,339
so I I guess I lost that but for the for

907
00:39:44,339 --> 00:39:45,359
the

908
00:39:45,359 --> 00:39:48,060
hidden camera detection yeah

909
00:39:48,060 --> 00:39:50,640
so what's the equipment you need to use

910
00:39:50,640 --> 00:39:56,099
to do the things so so we have uh uh

911
00:39:56,099 --> 00:39:58,740
um the thermal camera plugin into the

912
00:39:58,740 --> 00:40:02,460
phone uh the thermal camera plug-in is

913
00:40:02,460 --> 00:40:04,500
about 200 dollars

914
00:40:04,500 --> 00:40:06,480
and you can plug it in a normal phone

915
00:40:06,480 --> 00:40:08,820
yeah yeah USBC

916
00:40:08,820 --> 00:40:11,700
interesting they have both uh the

917
00:40:11,700 --> 00:40:13,680
Android version and the iPhone version I

918
00:40:13,680 --> 00:40:15,780
have both

919
00:40:15,780 --> 00:40:19,320
really yeah yeah I I see a lot of these

920
00:40:19,320 --> 00:40:21,119
things actually so they use that thermal

921
00:40:21,119 --> 00:40:23,220
camera to check your you know the

922
00:40:23,220 --> 00:40:25,680
temperature the the some leakage from

923
00:40:25,680 --> 00:40:29,700
your windows your doors yeah yeah so so

924
00:40:29,700 --> 00:40:31,920
you know because we were like

925
00:40:31,920 --> 00:40:34,320
um you know thermal it's always there it

926
00:40:34,320 --> 00:40:35,839
doesn't matter what angle you look at it

927
00:40:35,839 --> 00:40:39,540
so we're like let's use thermal then you

928
00:40:39,540 --> 00:40:41,160
know we really don't need to tune at the

929
00:40:41,160 --> 00:40:43,079
right angle and when I say we're still

930
00:40:43,079 --> 00:40:44,880
able to pick them up I mean there are

931
00:40:44,880 --> 00:40:46,859
definitely limitations uh if you put

932
00:40:46,859 --> 00:40:48,540
them right next to the stove and you

933
00:40:48,540 --> 00:40:52,460
know probably not gonna happen

934
00:40:55,700 --> 00:40:58,640
uh looks like we have a question here um

935
00:40:58,640 --> 00:41:01,500
how were the malicious commands to The

936
00:41:01,500 --> 00:41:03,599
Voice Assistant developed were they made

937
00:41:03,599 --> 00:41:06,540
with machine learning

938
00:41:06,540 --> 00:41:11,460
um yes yes so uh we have two work uh the

939
00:41:11,460 --> 00:41:13,740
first one is curry base inquiry base we

940
00:41:13,740 --> 00:41:15,480
basically

941
00:41:15,480 --> 00:41:17,579
um use Kirby

942
00:41:17,579 --> 00:41:20,220
uh using the query result we estimate

943
00:41:20,220 --> 00:41:22,859
the gradient and we try to push the zero

944
00:41:22,859 --> 00:41:25,680
sample across the boundary right

945
00:41:25,680 --> 00:41:27,960
um in the second example we use a

946
00:41:27,960 --> 00:41:31,380
generative neural net to gen to

947
00:41:31,380 --> 00:41:34,200
synthesize the voice of different types

948
00:41:34,200 --> 00:41:37,500
of you know tune and possibly

949
00:41:37,500 --> 00:41:42,380
so yes we did use ml to create those

950
00:41:42,720 --> 00:41:45,379
thank you

951
00:41:45,780 --> 00:41:48,000
okay I don't see any other questions but

952
00:41:48,000 --> 00:41:51,359
uh yeah uh Professor Shang thank you so

953
00:41:51,359 --> 00:41:52,980
much really appreciate you coming here

954
00:41:52,980 --> 00:41:55,200
and we're so happy to have you here to

955
00:41:55,200 --> 00:41:57,839
visit us on campus um

956
00:41:57,839 --> 00:41:59,880
thank you it's my pleasure great thanks

957
00:41:59,880 --> 00:42:02,880
thanks

