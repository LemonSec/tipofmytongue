1
00:00:03,880 --> 00:00:11,090
yes my PowerUp okay so we're going to

2
00:00:09,590 --> 00:00:14,419
roll right away because as you can tell

3
00:00:11,090 --> 00:00:16,189
we're slightly behind schedule but but

4
00:00:14,419 --> 00:00:19,760
we will be making up some of this time

5
00:00:16,190 --> 00:00:22,630
so our next presentation is by one of

6
00:00:19,760 --> 00:00:24,860
our most recently affiliated faculty

7
00:00:22,630 --> 00:00:26,689
sure Aisha has been with Purdue for a

8
00:00:24,860 --> 00:00:29,630
little while and we end up being at a

9
00:00:26,690 --> 00:00:31,790
dinner together one time and and often

10
00:00:29,630 --> 00:00:33,649
times even on campus I say oh I'm with

11
00:00:31,790 --> 00:00:35,210
Sirius and they say unless they are

12
00:00:33,649 --> 00:00:37,610
already filly with us and what is

13
00:00:35,210 --> 00:00:39,410
serious I had told her I'm with Sirius

14
00:00:37,610 --> 00:00:41,120
he goes I've been meaning to talk to you

15
00:00:39,410 --> 00:00:44,239
I think my work aligns with the center

16
00:00:41,120 --> 00:00:46,610
and we sure enough we met and right away

17
00:00:44,240 --> 00:00:48,079
was blown about by the research and so

18
00:00:46,610 --> 00:00:50,269
even though this is his very first

19
00:00:48,079 --> 00:00:51,920
semester affiliated with us I sought him

20
00:00:50,270 --> 00:00:53,180
out and said please you need to come

21
00:00:51,920 --> 00:00:54,200
present your research because I think

22
00:00:53,180 --> 00:00:57,230
there's a lot of people would be

23
00:00:54,200 --> 00:00:59,810
interested in so welcome thank you can

24
00:00:57,230 --> 00:01:01,279
everybody hear me all right great so

25
00:00:59,810 --> 00:01:04,610
yeah thanks very much for the invitation

26
00:01:01,280 --> 00:01:06,409
so our fantastic symposium so far so my

27
00:01:04,610 --> 00:01:07,729
name is Freya syndrome I'm a professor

28
00:01:06,409 --> 00:01:10,399
and electrical and computer engineering

29
00:01:07,729 --> 00:01:12,139
school here at Purdue my background is

30
00:01:10,399 --> 00:01:13,819
in control theory and so I approach

31
00:01:12,139 --> 00:01:14,869
problems especially the security

32
00:01:13,819 --> 00:01:17,119
problems I'll be talking about today

33
00:01:14,869 --> 00:01:20,090
from that perspective so my research

34
00:01:17,119 --> 00:01:22,189
team our focus is on analysis and design

35
00:01:20,090 --> 00:01:23,209
of large-scale network systems okay and

36
00:01:22,189 --> 00:01:25,309
so we come at it from a theoretical

37
00:01:23,209 --> 00:01:27,259
perspective so we specifically are

38
00:01:25,310 --> 00:01:29,270
interested in the interplay between the

39
00:01:27,259 --> 00:01:30,469
topology of these networks or the

40
00:01:29,270 --> 00:01:31,999
structure of these networks and the

41
00:01:30,469 --> 00:01:33,678
dynamics that are occurring on top of

42
00:01:31,999 --> 00:01:34,908
those networks so you can't understand

43
00:01:33,679 --> 00:01:36,380
what's happening in these large-scale

44
00:01:34,909 --> 00:01:37,729
networks without really considering the

45
00:01:36,380 --> 00:01:39,589
interplay between both of these things

46
00:01:37,729 --> 00:01:42,408
and so we look at these types of

47
00:01:39,590 --> 00:01:44,749
problems and try to understand what a

48
00:01:42,409 --> 00:01:46,310
global type of behavior occur in these

49
00:01:44,749 --> 00:01:48,020
networks based on the combination of

50
00:01:46,310 --> 00:01:49,159
these two and these large-scale networks

51
00:01:48,020 --> 00:01:50,630
you can think of them in a variety of

52
00:01:49,159 --> 00:01:52,459
application domains right you can think

53
00:01:50,630 --> 00:01:54,199
of large scale robotic swarms you could

54
00:01:52,459 --> 00:01:57,200
think of large communication as a

55
00:01:54,200 --> 00:01:58,819
systems power grids but or other

56
00:01:57,200 --> 00:02:01,039
infrastructure networks you can think

57
00:01:58,819 --> 00:02:03,950
about social networks right so these are

58
00:02:01,039 --> 00:02:06,049
all just large-scale networks so one of

59
00:02:03,950 --> 00:02:08,330
the important things that I'm we talking

60
00:02:06,049 --> 00:02:10,789
about focusing on today is the role of

61
00:02:08,330 --> 00:02:12,890
these networks in facilitating

62
00:02:10,788 --> 00:02:15,040
information spreading and coordination

63
00:02:12,890 --> 00:02:16,980
this is one of the most important

64
00:02:15,040 --> 00:02:18,480
functions of a network

65
00:02:16,980 --> 00:02:20,640
and so you can think of for example of

66
00:02:18,480 --> 00:02:22,349
social economic networks as the

67
00:02:20,640 --> 00:02:25,708
information representing things like

68
00:02:22,349 --> 00:02:26,940
ideas or knowledge or opinions fads and

69
00:02:25,709 --> 00:02:28,500
so forth so how does it spread

70
00:02:26,940 --> 00:02:29,940
throughout the network or if you're

71
00:02:28,500 --> 00:02:31,890
looking at engineered networks you can

72
00:02:29,940 --> 00:02:33,720
think about data measurements that are

73
00:02:31,890 --> 00:02:36,000
being gathered and that the various

74
00:02:33,720 --> 00:02:37,530
nodes computations that are being done

75
00:02:36,000 --> 00:02:40,830
different control signals that are being

76
00:02:37,530 --> 00:02:42,060
computed etc and based on this

77
00:02:40,830 --> 00:02:44,010
information whatever the underlying

78
00:02:42,060 --> 00:02:46,260
network happens to be you can talk about

79
00:02:44,010 --> 00:02:48,720
different special cases of information

80
00:02:46,260 --> 00:02:50,790
dissemination or coordination tasks

81
00:02:48,720 --> 00:02:52,500
right so the simplest one perhaps of

82
00:02:50,790 --> 00:02:54,420
data accumulation may be just want

83
00:02:52,500 --> 00:02:56,970
certain nodes in an hour to gather all

84
00:02:54,420 --> 00:02:58,738
of the information and network you can

85
00:02:56,970 --> 00:03:00,180
talk about consensus type problems where

86
00:02:58,739 --> 00:03:02,670
you want all of the nodes in the network

87
00:03:00,180 --> 00:03:04,950
to agree on something related to their

88
00:03:02,670 --> 00:03:06,690
individual data okay so for example if

89
00:03:04,950 --> 00:03:08,458
these are social network maybe you want

90
00:03:06,690 --> 00:03:10,709
everybody to come to the same opinion

91
00:03:08,459 --> 00:03:13,170
based on their initial opinions if this

92
00:03:10,709 --> 00:03:15,359
is a for example the chance would be

93
00:03:13,170 --> 00:03:16,890
smart transportation networks that we're

94
00:03:15,359 --> 00:03:18,750
talking about earlier in the panel maybe

95
00:03:16,890 --> 00:03:21,418
you want all the vehicles to agree on a

96
00:03:18,750 --> 00:03:23,430
common speed and so forth concern about

97
00:03:21,419 --> 00:03:25,230
de tributo optimization somewhere knows

98
00:03:23,430 --> 00:03:26,730
of individual utility functions and

99
00:03:25,230 --> 00:03:28,260
maybe the nose want to cooperatively

100
00:03:26,730 --> 00:03:30,179
figure out what's the best thing to do

101
00:03:28,260 --> 00:03:32,099
is based on all their individual utility

102
00:03:30,180 --> 00:03:33,870
functions you can survive state

103
00:03:32,099 --> 00:03:35,608
estimation problems where there's a big

104
00:03:33,870 --> 00:03:37,380
physical process that's being monitored

105
00:03:35,609 --> 00:03:38,669
by these different nodes and they all

106
00:03:37,380 --> 00:03:40,650
get different measurements and they're

107
00:03:38,669 --> 00:03:42,630
trying to coordinate to figure out what

108
00:03:40,650 --> 00:03:43,440
the state of the underlying processes so

109
00:03:42,630 --> 00:03:45,750
you can think about all these different

110
00:03:43,440 --> 00:03:47,790
types of coordination information

111
00:03:45,750 --> 00:03:50,130
summation tasks and for all these types

112
00:03:47,790 --> 00:03:52,530
of questions the natural types of things

113
00:03:50,130 --> 00:03:55,079
to look at are can the network diffuse

114
00:03:52,530 --> 00:03:57,480
information quickly efficiently reliably

115
00:03:55,079 --> 00:03:59,160
and so forth and in particular what I'm

116
00:03:57,480 --> 00:04:00,869
going to be focusing on is what happens

117
00:03:59,160 --> 00:04:02,340
at certain nodes and network don't play

118
00:04:00,870 --> 00:04:04,349
along right so what happens if they

119
00:04:02,340 --> 00:04:06,060
really behave maliciously how do you

120
00:04:04,349 --> 00:04:07,290
overcome this what are the things that

121
00:04:06,060 --> 00:04:09,359
we should be looking for in these

122
00:04:07,290 --> 00:04:11,849
networks and what kinds of algorithms

123
00:04:09,359 --> 00:04:15,569
will allow us to give some guarantees in

124
00:04:11,849 --> 00:04:16,680
the face of malicious theater so because

125
00:04:15,569 --> 00:04:18,810
I want to be talking at a mathematical

126
00:04:16,680 --> 00:04:21,239
level or than a sort of abstract away

127
00:04:18,810 --> 00:04:22,560
the details of the specific applications

128
00:04:21,238 --> 00:04:24,270
here so it's going to be different from

129
00:04:22,560 --> 00:04:25,530
perhaps the other talks we've seen here

130
00:04:24,270 --> 00:04:27,630
so I'm going to be looking at a higher

131
00:04:25,530 --> 00:04:28,979
level of abstraction and so we're going

132
00:04:27,630 --> 00:04:30,630
to be thinking about an hour of just as

133
00:04:28,979 --> 00:04:32,969
a graph with n nodes

134
00:04:30,630 --> 00:04:35,520
v1 through VN scan these nodes to

135
00:04:32,970 --> 00:04:36,570
represent whatever the the physical

136
00:04:35,520 --> 00:04:38,760
thing is in the network that's

137
00:04:36,570 --> 00:04:41,070
interested in and there's at the edges

138
00:04:38,760 --> 00:04:43,680
between the nodes so an edge from VI to

139
00:04:41,070 --> 00:04:46,830
VJ means that VI can send information to

140
00:04:43,680 --> 00:04:49,170
VJ okay and each node I has access to

141
00:04:46,830 --> 00:04:51,000
some local potentially private

142
00:04:49,170 --> 00:04:52,680
information right surfaces are the

143
00:04:51,000 --> 00:04:54,120
sensor network may be these are the

144
00:04:52,680 --> 00:04:55,530
measurements that they're taking if this

145
00:04:54,120 --> 00:04:57,960
is a social network maybe these are the

146
00:04:55,530 --> 00:04:59,969
opinions of the individuals maybe it's a

147
00:04:57,960 --> 00:05:01,799
large data set that each node has if you

148
00:04:59,970 --> 00:05:03,240
think about sort of large scale machine

149
00:05:01,800 --> 00:05:05,790
learning type of problems they're all

150
00:05:03,240 --> 00:05:08,640
gathering tons of data and just this

151
00:05:05,790 --> 00:05:10,470
information corresponds to the data so

152
00:05:08,640 --> 00:05:12,240
when we focus on consensus for most a

153
00:05:10,470 --> 00:05:13,830
topic it's a very simple problem but

154
00:05:12,240 --> 00:05:16,050
it's going to illustrate mostly concepts

155
00:05:13,830 --> 00:05:17,849
so consensus basically says every node

156
00:05:16,050 --> 00:05:19,800
in the network has some initial value X

157
00:05:17,850 --> 00:05:21,210
I of zero and it's maybe useful to think

158
00:05:19,800 --> 00:05:22,440
about this in terms of social networks

159
00:05:21,210 --> 00:05:24,630
because we can easily imagine it so

160
00:05:22,440 --> 00:05:26,400
imagine that you're this network and

161
00:05:24,630 --> 00:05:29,400
everybody has an initial opinion okay

162
00:05:26,400 --> 00:05:31,469
which is X is zero so at every time step

163
00:05:29,400 --> 00:05:33,989
T so every day each node in the network

164
00:05:31,470 --> 00:05:37,200
talks to its neighbors and updates its

165
00:05:33,990 --> 00:05:39,150
value as an average of the values in its

166
00:05:37,200 --> 00:05:40,469
neighborhood okay very simple right so

167
00:05:39,150 --> 00:05:41,820
you talk to your neighbors you update

168
00:05:40,470 --> 00:05:43,500
your opinion as an average of your

169
00:05:41,820 --> 00:05:45,450
neighbors experience so you can

170
00:05:43,500 --> 00:05:46,320
mathematically represent it like this so

171
00:05:45,450 --> 00:05:47,940
there aren't going to be very many

172
00:05:46,320 --> 00:05:49,469
equations and if they are there's going

173
00:05:47,940 --> 00:05:51,510
to be very simple equations like this so

174
00:05:49,470 --> 00:05:55,380
basically this says the value of node I

175
00:05:51,510 --> 00:05:57,420
at day T plus one is just some convex

176
00:05:55,380 --> 00:05:59,690
combination or some weighted average of

177
00:05:57,420 --> 00:06:00,870
the values of itself and its neighbors

178
00:05:59,690 --> 00:06:03,300
okay

179
00:06:00,870 --> 00:06:05,180
so you can imagine if everybody in our

180
00:06:03,300 --> 00:06:07,440
keeps doing this over and over again

181
00:06:05,180 --> 00:06:10,110
everybody will in fact asymptotically

182
00:06:07,440 --> 00:06:11,520
converge to the same opinion right and

183
00:06:10,110 --> 00:06:13,470
it turns out it's pretty easy to prove

184
00:06:11,520 --> 00:06:15,210
this and so one of the nice things about

185
00:06:13,470 --> 00:06:16,590
algorithms like this is that the nose

186
00:06:15,210 --> 00:06:17,789
don't need to know anything about the

187
00:06:16,590 --> 00:06:19,140
network right they're not explicitly

188
00:06:17,790 --> 00:06:20,760
routing information back and forth

189
00:06:19,140 --> 00:06:23,219
they're not saying hey I want to tell

190
00:06:20,760 --> 00:06:25,050
Jim that my opinion is list so routed

191
00:06:23,220 --> 00:06:26,910
through this path and so forth this is

192
00:06:25,050 --> 00:06:28,530
just sort of diffusive algorithms where

193
00:06:26,910 --> 00:06:31,440
every node just talks to its neighbors

194
00:06:28,530 --> 00:06:32,700
and updates its value over time based on

195
00:06:31,440 --> 00:06:34,620
what it's getting from its neighbors and

196
00:06:32,700 --> 00:06:38,190
information diffuses through the network

197
00:06:34,620 --> 00:06:39,990
to lead to some global behavior okay so

198
00:06:38,190 --> 00:06:41,280
you can extend this sort of very simple

199
00:06:39,990 --> 00:06:42,479
algorithm the sort of diffusive

200
00:06:41,280 --> 00:06:43,650
algorithm to account for things like

201
00:06:42,479 --> 00:06:45,330
distributed optimization

202
00:06:43,650 --> 00:06:47,698
machine learning state estimation and so

203
00:06:45,330 --> 00:06:49,258
forth okay so but the core of these

204
00:06:47,699 --> 00:06:51,750
types of algorithms ends up being the

205
00:06:49,259 --> 00:06:55,110
sort of simple diffusive consent respect

206
00:06:51,750 --> 00:06:56,610
dynamics great so this is you know if

207
00:06:55,110 --> 00:06:58,830
everybody does this everybody's going to

208
00:06:56,610 --> 00:07:00,300
reach consensus on some opinion what

209
00:06:58,830 --> 00:07:01,349
happens if certain nodes and networks

210
00:07:00,300 --> 00:07:03,630
decide they're not going to do this

211
00:07:01,350 --> 00:07:06,000
right so you can have nodes that fail or

212
00:07:03,630 --> 00:07:07,710
compromise by an adversary and just

213
00:07:06,000 --> 00:07:09,960
behave in arbitrary ways or perhaps

214
00:07:07,710 --> 00:07:11,940
worst-case ways these attacks could be

215
00:07:09,960 --> 00:07:13,770
coordinated to try and disrupt whatever

216
00:07:11,940 --> 00:07:15,330
the network is doing okay so we're going

217
00:07:13,770 --> 00:07:16,919
to be looking at for example Byzantine

218
00:07:15,330 --> 00:07:18,690
attacks where the nodes can just update

219
00:07:16,919 --> 00:07:20,130
their values however they want they can

220
00:07:18,690 --> 00:07:23,190
send arbitrary information to their

221
00:07:20,130 --> 00:07:25,110
neighbors and so forth so it turns out

222
00:07:23,190 --> 00:07:26,850
these classical diffusive algorithms are

223
00:07:25,110 --> 00:07:28,530
very vulnerable so if everybody does

224
00:07:26,850 --> 00:07:29,910
this everybody sort of talk to their

225
00:07:28,530 --> 00:07:32,010
neighbors updates their opinion every

226
00:07:29,910 --> 00:07:34,080
day everybody converges if there's even

227
00:07:32,010 --> 00:07:35,550
one stubborn node in the network I

228
00:07:34,080 --> 00:07:37,380
decide it's never going to change its

229
00:07:35,550 --> 00:07:39,660
value no matter what its neighbors say

230
00:07:37,380 --> 00:07:41,340
turns out if everybody else followed the

231
00:07:39,660 --> 00:07:43,680
dynamics everybody will converge to the

232
00:07:41,340 --> 00:07:45,539
value of that stubborn individual okay

233
00:07:43,680 --> 00:07:51,060
we all know this from our organizations

234
00:07:45,539 --> 00:07:52,740
probably so you wouldn't want to

235
00:07:51,060 --> 00:07:56,010
implement this right I don't think you'd

236
00:07:52,740 --> 00:07:58,560
want to implement this so what do we do

237
00:07:56,010 --> 00:08:00,120
about this how can we think about making

238
00:07:58,560 --> 00:08:01,889
algorithms these sort of simple

239
00:08:00,120 --> 00:08:04,260
algorithms that spread information

240
00:08:01,889 --> 00:08:06,690
through networks more resilient against

241
00:08:04,260 --> 00:08:08,909
misbehavior very simple misbehavior but

242
00:08:06,690 --> 00:08:12,419
even more complicated misbehavior like

243
00:08:08,909 --> 00:08:14,460
this okay so now clearly the problem of

244
00:08:12,419 --> 00:08:16,500
resilient information dissemination and

245
00:08:14,460 --> 00:08:17,729
consensus is very old right it goes like

246
00:08:16,500 --> 00:08:20,010
circles there science literature from

247
00:08:17,729 --> 00:08:22,830
the 70s and 80s okay and there's some

248
00:08:20,010 --> 00:08:24,000
fundamental properties and limitations

249
00:08:22,830 --> 00:08:26,789
that have been identified in the

250
00:08:24,000 --> 00:08:28,530
literature which we cannot overcome but

251
00:08:26,789 --> 00:08:30,840
it'll be useful to think about those

252
00:08:28,530 --> 00:08:33,059
those limitations and the classical way

253
00:08:30,840 --> 00:08:34,559
of thinking about these problems so it's

254
00:08:33,059 --> 00:08:36,000
just to make sure it's on the same page

255
00:08:34,559 --> 00:08:37,380
I'll just go over that briefly so

256
00:08:36,000 --> 00:08:39,479
suppose you have a network that looks

257
00:08:37,380 --> 00:08:42,088
like this just four nodes okay and node

258
00:08:39,479 --> 00:08:43,919
one for whatever reason wants to obtain

259
00:08:42,089 --> 00:08:45,450
node three value or calculate some

260
00:08:43,919 --> 00:08:48,360
function of node three values

261
00:08:45,450 --> 00:08:49,980
okay no three values actually seven now

262
00:08:48,360 --> 00:08:51,600
in this network there's only two ways

263
00:08:49,980 --> 00:08:53,670
for information to go from node 3 to

264
00:08:51,600 --> 00:08:56,610
node 1 right through node 2 or 3 node 4

265
00:08:53,670 --> 00:08:57,420
and suppose no 2 decides it doesn't want

266
00:08:56,610 --> 00:08:59,250
node 1 to

267
00:08:57,420 --> 00:09:00,780
no three values so it's going to

268
00:08:59,250 --> 00:09:03,150
participate in whatever algorithm you

269
00:09:00,780 --> 00:09:05,100
specify whatever dynamics you posit for

270
00:09:03,150 --> 00:09:06,630
this network by pretending that no

271
00:09:05,100 --> 00:09:09,990
threes value something else let's say

272
00:09:06,630 --> 00:09:11,160
nine right now so no wonder it's going

273
00:09:09,990 --> 00:09:12,900
to be looking at the information at

274
00:09:11,160 --> 00:09:14,520
getting from those two and four but no

275
00:09:12,900 --> 00:09:16,290
threes value and if it looks over here

276
00:09:14,520 --> 00:09:18,300
it says hey it looks like no three

277
00:09:16,290 --> 00:09:20,640
values nine it looks here it says hey

278
00:09:18,300 --> 00:09:22,260
looks like no threes value seven okay

279
00:09:20,640 --> 00:09:23,699
and unless it has some way for your

280
00:09:22,260 --> 00:09:24,930
reason to believe one versus the other

281
00:09:23,700 --> 00:09:28,280
it's never going to be able to resolve

282
00:09:24,930 --> 00:09:30,510
this ambiguity okay so in this case no

283
00:09:28,280 --> 00:09:31,829
malicious node has succeeded in

284
00:09:30,510 --> 00:09:33,900
preventing some other knows from

285
00:09:31,830 --> 00:09:36,570
accurately or reliably calculating some

286
00:09:33,900 --> 00:09:38,189
function of some other nodes value and

287
00:09:36,570 --> 00:09:39,930
what is the problem here node one really

288
00:09:38,190 --> 00:09:43,110
needs a tiebreaker and it's now worth to

289
00:09:39,930 --> 00:09:44,969
be able to resolve this ambiguity so

290
00:09:43,110 --> 00:09:46,710
this is where the notion of graph

291
00:09:44,970 --> 00:09:49,140
connectivity comes in so this is a

292
00:09:46,710 --> 00:09:51,150
classical way to measure resilience of

293
00:09:49,140 --> 00:09:52,830
networks okay so the connectivity of a

294
00:09:51,150 --> 00:09:54,420
network is basically just the smallest

295
00:09:52,830 --> 00:09:57,210
number of nodes that you have to remove

296
00:09:54,420 --> 00:09:59,160
to disconnect the network so over here

297
00:09:57,210 --> 00:10:00,720
this now works as a connectivity of one

298
00:09:59,160 --> 00:10:03,000
because I just have to remove one node

299
00:10:00,720 --> 00:10:04,470
to disconnect this network this now for

300
00:10:03,000 --> 00:10:06,060
the connectivity of two because I have

301
00:10:04,470 --> 00:10:07,590
to remove at least two nodes and this

302
00:10:06,060 --> 00:10:08,969
node now we're try the contrary of three

303
00:10:07,590 --> 00:10:11,640
because I have to remove at least three

304
00:10:08,970 --> 00:10:12,930
nodes okay and there this is sort of a

305
00:10:11,640 --> 00:10:14,460
structural property this is saying is

306
00:10:12,930 --> 00:10:16,260
the network on a remain connected after

307
00:10:14,460 --> 00:10:18,420
a remove a certain number of nodes but

308
00:10:16,260 --> 00:10:19,890
there's a nice sort of theorem in graph

309
00:10:18,420 --> 00:10:22,170
theory which is called mangers theorem

310
00:10:19,890 --> 00:10:24,420
which basically says if the connectivity

311
00:10:22,170 --> 00:10:26,520
is R that means that there are are

312
00:10:24,420 --> 00:10:28,380
different paths in the network between

313
00:10:26,520 --> 00:10:30,329
any two nodes okay so here for example

314
00:10:28,380 --> 00:10:31,710
the contrary three and no matter what

315
00:10:30,330 --> 00:10:33,330
she knows you choose there's three

316
00:10:31,710 --> 00:10:36,090
different ways for information display

317
00:10:33,330 --> 00:10:38,100
and that's useful because then you can

318
00:10:36,090 --> 00:10:40,110
say things like hey if I wanted to send

319
00:10:38,100 --> 00:10:42,030
information from here to here I could

320
00:10:40,110 --> 00:10:43,800
send it along this path this path in

321
00:10:42,030 --> 00:10:45,959
this path and as long as at most one of

322
00:10:43,800 --> 00:10:47,400
the paths is corrupted the guy at the

323
00:10:45,960 --> 00:10:49,470
other end is going to be receiving two

324
00:10:47,400 --> 00:10:51,750
pieces of information that match and

325
00:10:49,470 --> 00:10:53,610
they can reliably obtain the information

326
00:10:51,750 --> 00:10:55,740
right and so that's basically the

327
00:10:53,610 --> 00:10:57,480
underlying principle behind classical

328
00:10:55,740 --> 00:11:00,330
ways of looking at this if there are up

329
00:10:57,480 --> 00:11:02,070
to s bad nodes in the network you can

330
00:11:00,330 --> 00:11:03,810
any two nodes can reliably exchange

331
00:11:02,070 --> 00:11:06,690
information if and only if the network

332
00:11:03,810 --> 00:11:07,829
is to F plus one connected and this is

333
00:11:06,690 --> 00:11:09,150
basically the simplest way to think

334
00:11:07,830 --> 00:11:11,100
about it just send information along

335
00:11:09,150 --> 00:11:12,990
these two F perform different tasks

336
00:11:11,100 --> 00:11:15,000
and I'm going to as long as does that

337
00:11:12,990 --> 00:11:17,610
most F bad guys in the network I'm going

338
00:11:15,000 --> 00:11:19,500
to guarantee to be receiving s plus-1

339
00:11:17,610 --> 00:11:20,730
coffees that are the same and if I do

340
00:11:19,500 --> 00:11:23,940
that I'm going to take that to the

341
00:11:20,730 --> 00:11:25,110
accurate value okay but implicitly in

342
00:11:23,940 --> 00:11:28,080
what I said there there's this

343
00:11:25,110 --> 00:11:29,880
underlying assumption that the network

344
00:11:28,080 --> 00:11:31,560
is known and fixed and I can route

345
00:11:29,880 --> 00:11:33,030
information through this network and I'm

346
00:11:31,560 --> 00:11:34,530
sitting there and I'm expecting

347
00:11:33,030 --> 00:11:37,079
information from somebody on the other

348
00:11:34,530 --> 00:11:40,079
side and so forth so there's this sort

349
00:11:37,080 --> 00:11:43,200
of fixed network topology a lot of data

350
00:11:40,080 --> 00:11:45,120
storage and computations and routing and

351
00:11:43,200 --> 00:11:46,710
so forth that it's assumed in these

352
00:11:45,120 --> 00:11:48,840
classical results focusing on

353
00:11:46,710 --> 00:11:50,730
connectivity in symmetric ok so what we

354
00:11:48,840 --> 00:11:52,890
really want to focus on are scalable

355
00:11:50,730 --> 00:11:54,360
algorithms that don't really require the

356
00:11:52,890 --> 00:11:56,010
nodes to know anything about the network

357
00:11:54,360 --> 00:11:58,350
topology right we want to be able to

358
00:11:56,010 --> 00:12:00,450
this to work in time varying networks if

359
00:11:58,350 --> 00:12:02,670
these are vehicles or smart cities you

360
00:12:00,450 --> 00:12:04,260
know where nodes come and go and and and

361
00:12:02,670 --> 00:12:06,150
so forth we like to be able to tolerate

362
00:12:04,260 --> 00:12:08,010
many malicious nodes right so in these

363
00:12:06,150 --> 00:12:09,270
giant networks it doesn't make sense to

364
00:12:08,010 --> 00:12:11,040
say I want to be able to tolerate three

365
00:12:09,270 --> 00:12:12,540
bad guys in the entire network I want to

366
00:12:11,040 --> 00:12:14,160
be able to have the number of bad guys

367
00:12:12,540 --> 00:12:16,260
potentially scale with the size of the

368
00:12:14,160 --> 00:12:17,339
network okay and in in certain

369
00:12:16,260 --> 00:12:19,050
applications and distribute

370
00:12:17,340 --> 00:12:20,880
optimizations for example if you're

371
00:12:19,050 --> 00:12:22,410
gathering local data you don't

372
00:12:20,880 --> 00:12:23,880
necessarily want to be sharing the data

373
00:12:22,410 --> 00:12:25,860
with other people right so this could be

374
00:12:23,880 --> 00:12:28,200
private data could be massive amounts of

375
00:12:25,860 --> 00:12:30,690
data so again you want to not just send

376
00:12:28,200 --> 00:12:33,540
information from point to point but you

377
00:12:30,690 --> 00:12:35,040
want sort of diffusive algorithms so

378
00:12:33,540 --> 00:12:37,500
here we're going to talk a little bit

379
00:12:35,040 --> 00:12:39,329
about what we can do to go back to those

380
00:12:37,500 --> 00:12:41,820
sort of diffusive Consensus algorithms

381
00:12:39,330 --> 00:12:43,800
and make them more resilient so let's

382
00:12:41,820 --> 00:12:45,510
think about this so the previous version

383
00:12:43,800 --> 00:12:47,219
of the algorithm said every day you wake

384
00:12:45,510 --> 00:12:49,050
up you listen to all your friends you

385
00:12:47,220 --> 00:12:51,150
update your opinion as an average of all

386
00:12:49,050 --> 00:12:52,589
their opinions but I have pretty crazy

387
00:12:51,150 --> 00:12:54,600
friends why should I take all their

388
00:12:52,590 --> 00:12:56,880
opinions into consideration right so

389
00:12:54,600 --> 00:12:59,670
instead let me assume that they're up to

390
00:12:56,880 --> 00:13:01,860
F bad guys up crazy are F crazy people

391
00:12:59,670 --> 00:13:03,569
in my neighborhood I don't know who they

392
00:13:01,860 --> 00:13:05,910
are what I'm going to do is I'm going to

393
00:13:03,570 --> 00:13:07,260
ignore the extreme opinions in my

394
00:13:05,910 --> 00:13:09,900
neighborhood so I'm going to remove the

395
00:13:07,260 --> 00:13:12,689
highest F lowest F and just average the

396
00:13:09,900 --> 00:13:15,300
rest okay so ignore the crazies average

397
00:13:12,690 --> 00:13:17,280
the moderates so you can model that in

398
00:13:15,300 --> 00:13:19,260
this way it looks exactly the same as

399
00:13:17,280 --> 00:13:20,850
before except now instead of input

400
00:13:19,260 --> 00:13:22,950
including all your neighbors you're just

401
00:13:20,850 --> 00:13:24,959
including the moderate opinions in your

402
00:13:22,950 --> 00:13:27,720
network okay

403
00:13:24,959 --> 00:13:30,089
okay so what would happen under this

404
00:13:27,720 --> 00:13:31,769
very simple algorithm okay so it turns

405
00:13:30,089 --> 00:13:33,149
out people have looked at this algorithm

406
00:13:31,769 --> 00:13:35,100
even the computer science literature in

407
00:13:33,149 --> 00:13:36,690
the 80s but only for special kinds of

408
00:13:35,100 --> 00:13:38,610
graphics complete graphs every week and

409
00:13:36,690 --> 00:13:39,810
talk to each other and so forth and only

410
00:13:38,610 --> 00:13:42,240
recently have we been able to

411
00:13:39,810 --> 00:13:44,160
characterize very crisp conditions on

412
00:13:42,240 --> 00:13:46,980
network topologies that allow dynamics

413
00:13:44,160 --> 00:13:49,170
like this this is sixteen and to think

414
00:13:46,980 --> 00:13:51,600
about what those network conditions are

415
00:13:49,170 --> 00:13:53,430
it's very useful to consider a example

416
00:13:51,600 --> 00:13:55,199
like this so suppose that you have a

417
00:13:53,430 --> 00:13:57,120
network that looks like this so you have

418
00:13:55,199 --> 00:13:59,550
n over two nodes here half the nodes are

419
00:13:57,120 --> 00:14:01,949
here half the nodes are here these are

420
00:13:59,550 --> 00:14:03,540
very sort of closely knit communities

421
00:14:01,949 --> 00:14:04,620
okay everybody knows everybody else so

422
00:14:03,540 --> 00:14:06,209
there's everybody's connected to

423
00:14:04,620 --> 00:14:07,889
everybody here everybody's connected to

424
00:14:06,209 --> 00:14:09,540
everybody here and everybody in each

425
00:14:07,889 --> 00:14:11,550
community has one friend in the other

426
00:14:09,540 --> 00:14:13,620
community so they're connected to one

427
00:14:11,550 --> 00:14:15,149
node on the other side so now suppose

428
00:14:13,620 --> 00:14:16,139
everybody here starts with an initial

429
00:14:15,149 --> 00:14:17,610
value of zero

430
00:14:16,139 --> 00:14:20,009
everybody here starts with an initial

431
00:14:17,610 --> 00:14:22,170
value of one and everybody throws away

432
00:14:20,009 --> 00:14:24,329
one - one lowest values in the

433
00:14:22,170 --> 00:14:25,949
neighborhood in each time step so what's

434
00:14:24,329 --> 00:14:27,479
going to happen here so this person is

435
00:14:25,949 --> 00:14:28,949
going to wake up she's going to say I

436
00:14:27,480 --> 00:14:30,720
have a bunch of friends who say zero I

437
00:14:28,949 --> 00:14:32,160
have one friend who says one I throw

438
00:14:30,720 --> 00:14:34,130
away the highest and the lowest and I

439
00:14:32,160 --> 00:14:37,410
average the rest and her value stays

440
00:14:34,130 --> 00:14:40,829
zero everybody here stays zero everybody

441
00:14:37,410 --> 00:14:43,110
here stays one okay so under this very

442
00:14:40,829 --> 00:14:44,279
simple modification of the algorithm I'm

443
00:14:43,110 --> 00:14:46,290
just throwing a one highest and one

444
00:14:44,279 --> 00:14:48,630
lowest consensus is not reached in this

445
00:14:46,290 --> 00:14:50,550
network this is a beautiful network from

446
00:14:48,630 --> 00:14:53,069
the perspective of classical metrics

447
00:14:50,550 --> 00:14:54,689
everybody's connected to everybody else

448
00:14:53,069 --> 00:14:56,279
half of the nodes in network the

449
00:14:54,689 --> 00:14:58,230
connectivity of this now represent over

450
00:14:56,279 --> 00:14:59,579
two so if I want it you'd have to remove

451
00:14:58,230 --> 00:15:01,740
n over 2 knows to disconnect this

452
00:14:59,579 --> 00:15:03,388
network and I could tolerate n over 4

453
00:15:01,740 --> 00:15:05,399
bad guys if I were to use classical

454
00:15:03,389 --> 00:15:07,019
routing schemes but using these very

455
00:15:05,399 --> 00:15:08,309
simple local diffusive schemes there

456
00:15:07,019 --> 00:15:11,819
aren't even any bad guys in this network

457
00:15:08,309 --> 00:15:13,350
and yet nobody reaches consensus ok so

458
00:15:11,819 --> 00:15:15,000
that's kind of bad news right so this

459
00:15:13,350 --> 00:15:16,500
algorithm seems kind of cool where we're

460
00:15:15,000 --> 00:15:17,730
just kind of throwing away values you

461
00:15:16,500 --> 00:15:19,019
don't need it to knock in bugs Network

462
00:15:17,730 --> 00:15:21,389
but it's not working in networks like

463
00:15:19,019 --> 00:15:23,730
this so what is the problem what is it

464
00:15:21,389 --> 00:15:26,699
about this network that caused this

465
00:15:23,730 --> 00:15:28,139
consensus algorithm not to work and now

466
00:15:26,699 --> 00:15:29,699
if you think about it what happened was

467
00:15:28,139 --> 00:15:32,160
that we could take this network and we

468
00:15:29,699 --> 00:15:33,779
could split it into two sets where even

469
00:15:32,160 --> 00:15:35,430
though each of those sets collectively

470
00:15:33,779 --> 00:15:37,889
had enough information coming in from

471
00:15:35,430 --> 00:15:38,489
the other set individually no node in

472
00:15:37,889 --> 00:15:40,200
that set

473
00:15:38,490 --> 00:15:42,360
enough neighbors outside its own set

474
00:15:40,200 --> 00:15:44,130
right so individually each node was

475
00:15:42,360 --> 00:15:45,839
throwing away the only useful

476
00:15:44,130 --> 00:15:48,209
information it was getting from outside

477
00:15:45,839 --> 00:15:49,950
that set so this was essentially the

478
00:15:48,209 --> 00:15:52,410
bottleneck that prevented this type of

479
00:15:49,950 --> 00:15:53,910
algorithm from working so what we want

480
00:15:52,410 --> 00:15:55,949
to do is we need to come up with a new

481
00:15:53,910 --> 00:15:57,870
topological property connectivity is no

482
00:15:55,950 --> 00:15:59,670
longer sufficient property to be able to

483
00:15:57,870 --> 00:16:01,589
reason about things like this so we need

484
00:15:59,670 --> 00:16:03,270
to come up with a new graph property

485
00:16:01,589 --> 00:16:05,459
that will allow us to be able to say

486
00:16:03,270 --> 00:16:08,939
what networks have bottleneck sizes and

487
00:16:05,459 --> 00:16:10,520
what networks still okay any questions

488
00:16:08,940 --> 00:16:13,620
so far

489
00:16:10,520 --> 00:16:15,209
okay great so here's how we come up with

490
00:16:13,620 --> 00:16:17,070
a graph property so suppose I give you

491
00:16:15,209 --> 00:16:19,560
this network okay and suppose I give you

492
00:16:17,070 --> 00:16:22,440
some subset of nodes we say that that

493
00:16:19,560 --> 00:16:24,029
subset is are reachable if it contains a

494
00:16:22,440 --> 00:16:26,399
node that has our neighbors outside

495
00:16:24,029 --> 00:16:28,080
that's X okay so let's think about this

496
00:16:26,399 --> 00:16:30,149
so if I give you this subset this

497
00:16:28,080 --> 00:16:32,850
greenish subset here this subset is

498
00:16:30,149 --> 00:16:34,470
three reachable because it has a node V

499
00:16:32,850 --> 00:16:36,270
five in this case that has three

500
00:16:34,470 --> 00:16:38,130
neighbors outside that set okay so this

501
00:16:36,270 --> 00:16:40,170
that is three reachable this set is for

502
00:16:38,130 --> 00:16:41,990
reachable because it has a node that has

503
00:16:40,170 --> 00:16:44,339
four neighbors outside that sense

504
00:16:41,990 --> 00:16:45,510
essentially a set being are reachable

505
00:16:44,339 --> 00:16:47,520
means that there's some node that has

506
00:16:45,510 --> 00:16:50,670
enough neighbors outside that says we're

507
00:16:47,520 --> 00:16:52,199
not forcing by heart okay so that's a

508
00:16:50,670 --> 00:16:54,300
set pretty but we want to be able to

509
00:16:52,200 --> 00:16:57,120
reason of our graph okay so we say a

510
00:16:54,300 --> 00:16:59,760
graph is are robust if no matter how I

511
00:16:57,120 --> 00:17:01,760
choose two different sets of nodes at

512
00:16:59,760 --> 00:17:04,260
least one of the sets is are reachable

513
00:17:01,760 --> 00:17:05,970
so for example here no matter how I

514
00:17:04,260 --> 00:17:07,890
treat subsets of nodes they have these

515
00:17:05,970 --> 00:17:09,510
two subsets at least one of these sets

516
00:17:07,890 --> 00:17:11,939
has a node that has three neighbors

517
00:17:09,510 --> 00:17:13,890
outside this set okay and so if I check

518
00:17:11,939 --> 00:17:15,630
this for all possible pairs of sets I'll

519
00:17:13,890 --> 00:17:18,750
find that that's true and so we say that

520
00:17:15,630 --> 00:17:22,140
this graph is all robust that definition

521
00:17:18,750 --> 00:17:23,550
clear okay so the reason why we defined

522
00:17:22,140 --> 00:17:25,620
it this way is because remember what

523
00:17:23,550 --> 00:17:27,030
caused us to fail when we looked at that

524
00:17:25,619 --> 00:17:29,250
other graph we were able to find two

525
00:17:27,030 --> 00:17:30,870
subsets where neither subsets had a node

526
00:17:29,250 --> 00:17:32,790
that had enough neighbors outside its

527
00:17:30,870 --> 00:17:34,919
own set so we want to be able to define

528
00:17:32,790 --> 00:17:36,809
our robustness to say no matter how I

529
00:17:34,920 --> 00:17:37,980
choose two different subsets least one

530
00:17:36,809 --> 00:17:39,450
of the subsets is going to have a node

531
00:17:37,980 --> 00:17:40,890
that has enough neighbors outside that

532
00:17:39,450 --> 00:17:44,340
set so don't run into the problem that I

533
00:17:40,890 --> 00:17:45,870
ran into earlier okay so given that then

534
00:17:44,340 --> 00:17:48,418
here's the main result so if the network

535
00:17:45,870 --> 00:17:50,610
is now 2 s plus 1 robust as opposed to 2

536
00:17:48,419 --> 00:17:52,350
F plus 1 connected then this sort of

537
00:17:50,610 --> 00:17:53,820
simple diffusive algorithm

538
00:17:52,350 --> 00:17:55,949
I throw away high-step Louis F an

539
00:17:53,820 --> 00:17:57,570
average arrest is guaranteed to cause

540
00:17:55,950 --> 00:17:59,520
all the regular nodes that actually

541
00:17:57,570 --> 00:18:01,889
follow the signup algorithm to converge

542
00:17:59,520 --> 00:18:03,600
the consensus that consensus value is

543
00:18:01,890 --> 00:18:05,220
going to be reasonable in the sense that

544
00:18:03,600 --> 00:18:07,168
it's guaranteed to fit between the

545
00:18:05,220 --> 00:18:09,059
largest and smallest initial values of

546
00:18:07,169 --> 00:18:11,010
any regular node okay so this means that

547
00:18:09,059 --> 00:18:12,960
the bad guys can't cause a consensus

548
00:18:11,010 --> 00:18:15,000
value to be some arbitrarily large value

549
00:18:12,960 --> 00:18:18,299
and this is going to happen

550
00:18:15,000 --> 00:18:20,880
despite the actions of any s low set of

551
00:18:18,299 --> 00:18:22,530
adversaries what does that local mean F

552
00:18:20,880 --> 00:18:24,330
local means that you can have up to F

553
00:18:22,530 --> 00:18:26,789
bad guys in the neighborhood of every

554
00:18:24,330 --> 00:18:28,199
good guy okay not just the restriction

555
00:18:26,789 --> 00:18:29,789
on the entire network but you can have

556
00:18:28,200 --> 00:18:33,150
many many many bad guys in the entire

557
00:18:29,789 --> 00:18:34,740
network and this will be this algorithm

558
00:18:33,150 --> 00:18:37,320
will guarantee that property as long as

559
00:18:34,740 --> 00:18:42,679
the robustness condition is satisfied on

560
00:18:37,320 --> 00:18:42,678
an hour okay so here's an illustration

561
00:18:44,539 --> 00:18:48,840
so essentially this is an example of

562
00:18:47,490 --> 00:18:51,539
this tribute optimization but you have a

563
00:18:48,840 --> 00:18:54,000
bunch of regular nodes here and this

564
00:18:51,539 --> 00:18:57,090
value close to zero is the actual true

565
00:18:54,000 --> 00:18:58,830
optimal value of the functions that

566
00:18:57,090 --> 00:19:00,090
they're trying to optimize here well

567
00:18:58,830 --> 00:19:02,399
we're going to see a bunch of bad guys

568
00:19:00,090 --> 00:19:03,629
show up in this network and these bad

569
00:19:02,400 --> 00:19:05,220
guys are just going to do arbitrary

570
00:19:03,630 --> 00:19:06,960
things here we have them doing sinusoid

571
00:19:05,220 --> 00:19:08,520
but you'll notice that no matter how

572
00:19:06,960 --> 00:19:10,500
many of these bad guys show up here the

573
00:19:08,520 --> 00:19:10,950
good guys still are doing the right

574
00:19:10,500 --> 00:19:12,630
thing

575
00:19:10,950 --> 00:19:14,909
compare this to what we saw earlier

576
00:19:12,630 --> 00:19:16,950
where a single stubborn node we got us

577
00:19:14,909 --> 00:19:19,110
up the hub of how big the network was

578
00:19:16,950 --> 00:19:25,580
was able to corrupt the values of all

579
00:19:19,110 --> 00:19:28,530
this other of the other nodes okay and

580
00:19:25,580 --> 00:19:29,939
so this is a nice scalable algorithm in

581
00:19:28,530 --> 00:19:33,330
that this is going to work no matter how

582
00:19:29,940 --> 00:19:34,710
big the analysis so it's worth thinking

583
00:19:33,330 --> 00:19:37,139
about this graph property that we

584
00:19:34,710 --> 00:19:38,760
identified right so we said so how did

585
00:19:37,140 --> 00:19:40,830
we get here we said we want to come up

586
00:19:38,760 --> 00:19:43,110
with this algorithm that allows these

587
00:19:40,830 --> 00:19:44,549
nodes to coordinate despite bad guys we

588
00:19:43,110 --> 00:19:46,020
came up with an algorithm and then we

589
00:19:44,549 --> 00:19:47,908
identified a graph property that's

590
00:19:46,020 --> 00:19:49,440
required for the algorithm succeed but

591
00:19:47,909 --> 00:19:50,880
this grass property seems kind of

592
00:19:49,440 --> 00:19:53,100
interesting on its own it seems like a

593
00:19:50,880 --> 00:19:55,110
really strong graph property right and

594
00:19:53,100 --> 00:19:56,820
so our bust miss is a much stronger

595
00:19:55,110 --> 00:19:58,350
property than our connectivity in

596
00:19:56,820 --> 00:20:00,178
general we saw that network that was n

597
00:19:58,350 --> 00:20:01,918
over G connected but it wasn't it was

598
00:20:00,179 --> 00:20:04,080
just one robust it didn't allow these

599
00:20:01,919 --> 00:20:06,150
dynamics to succeed so the structural

600
00:20:04,080 --> 00:20:07,439
interpretation is the following an R

601
00:20:06,150 --> 00:20:09,000
connected now earth just a refresher

602
00:20:07,440 --> 00:20:11,580
memory means that the network will

603
00:20:09,000 --> 00:20:14,340
remain connected even after any R minus

604
00:20:11,580 --> 00:20:16,409
1 nodes are removed and our robust

605
00:20:14,340 --> 00:20:19,020
network will remain connected even up to

606
00:20:16,410 --> 00:20:20,250
even when up to R minus 1 nodes are

607
00:20:19,020 --> 00:20:22,020
removed from the neighborhood of every

608
00:20:20,250 --> 00:20:23,910
remaining node so you can remove a ton

609
00:20:22,020 --> 00:20:26,310
more nodes so network and still be

610
00:20:23,910 --> 00:20:28,530
guaranteed to remain connected so this

611
00:20:26,310 --> 00:20:30,300
is giving us a new metric for evaluating

612
00:20:28,530 --> 00:20:32,129
and designing networks right so if we

613
00:20:30,300 --> 00:20:33,750
want a design network so that they are

614
00:20:32,130 --> 00:20:35,820
able to tolerate a large number of

615
00:20:33,750 --> 00:20:37,230
failures maybe we don't just go back to

616
00:20:35,820 --> 00:20:39,090
the classical idea of our connectivity

617
00:20:37,230 --> 00:20:41,880
maybe we should be designing them to be

618
00:20:39,090 --> 00:20:43,649
all robust and so here's an example if I

619
00:20:41,880 --> 00:20:45,840
give you this network and I say how many

620
00:20:43,650 --> 00:20:47,880
nodes can failure and have the Knauer

621
00:20:45,840 --> 00:20:50,070
still be connected classically if I go

622
00:20:47,880 --> 00:20:53,550
back to my graph theory and I go back to

623
00:20:50,070 --> 00:20:54,750
my sort of a computer science class I

624
00:20:53,550 --> 00:20:56,280
would say let me calculate the

625
00:20:54,750 --> 00:20:59,070
connectivity of this network in this

626
00:20:56,280 --> 00:21:00,510
case the connectivity is 2 we have to

627
00:20:59,070 --> 00:21:02,250
remove these two nodes to disconnect the

628
00:21:00,510 --> 00:21:04,200
network so I'm only guaranteeing you

629
00:21:02,250 --> 00:21:06,420
that the network will stay connected if

630
00:21:04,200 --> 00:21:08,400
I remove one node but it turns out

631
00:21:06,420 --> 00:21:10,680
that's network is too robust so I could

632
00:21:08,400 --> 00:21:11,790
actually remove any one local set I

633
00:21:10,680 --> 00:21:13,650
could remove one node from the

634
00:21:11,790 --> 00:21:15,030
neighborhood of every remaining node and

635
00:21:13,650 --> 00:21:21,030
I still guarantee you that's a network

636
00:21:15,030 --> 00:21:23,550
will remain connected ok so everything

637
00:21:21,030 --> 00:21:25,560
looks great it's one problem ok it's

638
00:21:23,550 --> 00:21:27,240
it's going to be complete to determine

639
00:21:25,560 --> 00:21:28,530
whether a given network is all robust so

640
00:21:27,240 --> 00:21:30,600
if I walk up to you with the Facebook

641
00:21:28,530 --> 00:21:32,340
graph and I say is this our robust good

642
00:21:30,600 --> 00:21:34,620
luck right I have no idea how to solve

643
00:21:32,340 --> 00:21:36,810
this so it's difficult it's

644
00:21:34,620 --> 00:21:39,360
computationally difficult unless B is

645
00:21:36,810 --> 00:21:41,669
equal to B to be able to calculate the

646
00:21:39,360 --> 00:21:44,250
robustness of given networks however it

647
00:21:41,670 --> 00:21:46,680
is easy to design our robust networks

648
00:21:44,250 --> 00:21:48,150
for any given R ok and what's more

649
00:21:46,680 --> 00:21:50,250
surprising is that there are many

650
00:21:48,150 --> 00:21:51,690
mathematical models for large-scale

651
00:21:50,250 --> 00:21:52,830
networks these are typically random

652
00:21:51,690 --> 00:21:54,870
graph models so you can generate

653
00:21:52,830 --> 00:21:56,639
billions of nodes and put the edges

654
00:21:54,870 --> 00:21:58,620
between the nodes randomly according to

655
00:21:56,640 --> 00:22:00,900
some distribution to model different

656
00:21:58,620 --> 00:22:02,280
types of networks and it's and in these

657
00:22:00,900 --> 00:22:03,840
networks in these random networks you

658
00:22:02,280 --> 00:22:05,670
have to add edges with a certain density

659
00:22:03,840 --> 00:22:07,860
I've had a certain number of edges in

660
00:22:05,670 --> 00:22:09,600
order to be able to get connectivity it

661
00:22:07,860 --> 00:22:11,520
turns out that for these types of random

662
00:22:09,600 --> 00:22:13,590
graph the number of edges that you have

663
00:22:11,520 --> 00:22:15,240
to add to get connectivity actually also

664
00:22:13,590 --> 00:22:16,770
makes the graph are robust so if you're

665
00:22:15,240 --> 00:22:18,540
getting a certain level of connectivity

666
00:22:16,770 --> 00:22:19,320
you're actually getting our robustness

667
00:22:18,540 --> 00:22:21,659
for free

668
00:22:19,320 --> 00:22:23,250
okay and so this was surprising to us

669
00:22:21,660 --> 00:22:24,840
but what this is saying is that these

670
00:22:23,250 --> 00:22:27,120
mathematical models at least for

671
00:22:24,840 --> 00:22:28,919
large-scale networks possess a lot more

672
00:22:27,120 --> 00:22:30,629
structural robustness than previously

673
00:22:28,920 --> 00:22:32,760
identified you could remove a ton more

674
00:22:30,630 --> 00:22:34,440
nodes from these now or still have them

675
00:22:32,760 --> 00:22:36,330
succeed more than you would have

676
00:22:34,440 --> 00:22:39,360
predicted by just focusing on my

677
00:22:36,330 --> 00:22:40,649
activities all right so just to

678
00:22:39,360 --> 00:22:42,060
summarize then what we've been looking

679
00:22:40,650 --> 00:22:45,270
at is again the interplay between

680
00:22:42,060 --> 00:22:47,250
topology and dynamics we were interested

681
00:22:45,270 --> 00:22:49,680
in identifying scalable algorithms

682
00:22:47,250 --> 00:22:51,420
diffusive algorithms to allow nodes and

683
00:22:49,680 --> 00:22:53,190
networks to coordinate and overcome bad

684
00:22:51,420 --> 00:22:54,930
guys so we came up with this algorithm

685
00:22:53,190 --> 00:22:56,490
based on local filtering where nodes

686
00:22:54,930 --> 00:22:58,860
sort of throw away highest and lowest

687
00:22:56,490 --> 00:23:00,800
values and average the rest we came up

688
00:22:58,860 --> 00:23:03,540
with conditions on a topology for which

689
00:23:00,800 --> 00:23:04,740
such an algorithm would succeed we came

690
00:23:03,540 --> 00:23:06,750
up with this property of our robustness

691
00:23:04,740 --> 00:23:08,850
and this sort of thing that we stumbled

692
00:23:06,750 --> 00:23:11,370
across right we just sort of tripped

693
00:23:08,850 --> 00:23:12,750
across this property it turns out

694
00:23:11,370 --> 00:23:14,580
there's a pretty cool property so it

695
00:23:12,750 --> 00:23:16,140
gives you a lot of strong guarantees on

696
00:23:14,580 --> 00:23:17,610
networks and many networks actually

697
00:23:16,140 --> 00:23:20,010
possess this property when we didn't

698
00:23:17,610 --> 00:23:22,189
realize it before that I'll take

699
00:23:20,010 --> 00:23:22,190
questions

700
00:23:29,990 --> 00:23:40,440
so everybody understood that right

701
00:23:32,660 --> 00:23:42,690
hopefully any questions for sure is here

702
00:23:40,440 --> 00:23:45,990
my blocky Purdue University

703
00:23:42,690 --> 00:23:48,840
so np-completeness just means that some

704
00:23:45,990 --> 00:23:51,030
instances are hard is it possible maybe

705
00:23:48,840 --> 00:23:52,830
that for a facebook graph or some other

706
00:23:51,030 --> 00:23:53,970
you know social network that we're

707
00:23:52,830 --> 00:23:55,800
interested in there might be some

708
00:23:53,970 --> 00:23:57,720
customized algorithm to have to learn

709
00:23:55,800 --> 00:23:58,889
yeah yeah and so the random graph

710
00:23:57,720 --> 00:24:00,450
results are actually telling you that

711
00:23:58,890 --> 00:24:02,430
the average instances are easy for all

712
00:24:00,450 --> 00:24:04,500
please yeah because almost all graphs

713
00:24:02,430 --> 00:24:12,510
end up having this property okay exactly

714
00:24:04,500 --> 00:24:16,920
yeah is there a way if you start with a

715
00:24:12,510 --> 00:24:22,730
random graph you can converge it into a

716
00:24:16,920 --> 00:24:25,740
an R robust graph so it'll depend on the

717
00:24:22,730 --> 00:24:27,390
how that random graph was generated okay

718
00:24:25,740 --> 00:24:29,040
and so essentially for example if you

719
00:24:27,390 --> 00:24:30,660
look at the classical random graph which

720
00:24:29,040 --> 00:24:32,430
is it or any random graph where you

721
00:24:30,660 --> 00:24:34,410
basically have a bunch of nodes you're

722
00:24:32,430 --> 00:24:36,210
flipping a coin for each edge and if it

723
00:24:34,410 --> 00:24:38,910
lands heads you put that edge and if it

724
00:24:36,210 --> 00:24:40,110
doesn't you don't put it there if that

725
00:24:38,910 --> 00:24:41,820
probability is high enough you're

726
00:24:40,110 --> 00:24:44,189
guaranteed that will be R robust on its

727
00:24:41,820 --> 00:24:45,600
own if the probability is too low then

728
00:24:44,190 --> 00:24:47,130
essentially it means you're going to

729
00:24:45,600 --> 00:24:49,169
have to add a whole bunch more edges to

730
00:24:47,130 --> 00:24:52,140
do that so depending on the way that the

731
00:24:49,170 --> 00:24:53,460
random graph is generated is that the

732
00:24:52,140 --> 00:24:58,980
answer to your question is going to bet

733
00:24:53,460 --> 00:25:00,740
on that yeah yeah because we random

734
00:24:58,980 --> 00:25:03,210
graphs essentially a lot of it is

735
00:25:00,740 --> 00:25:08,300
related to the density of the edges or

736
00:25:03,210 --> 00:25:08,300
the number of edges in that graph so

737
00:25:14,270 --> 00:25:23,100
right yes yes yes yeah so we have looked

738
00:25:20,760 --> 00:25:24,960
at that specific version of that so once

739
00:25:23,100 --> 00:25:26,310
a class of random graphs that helps the

740
00:25:24,960 --> 00:25:28,350
model that kind of situation is

741
00:25:26,310 --> 00:25:29,879
geometric random graphs essentially you

742
00:25:28,350 --> 00:25:31,800
put an edge between two nodes if they're

743
00:25:29,880 --> 00:25:33,390
close enough together so this model

744
00:25:31,800 --> 00:25:34,379
things like sensor networks or vehicles

745
00:25:33,390 --> 00:25:35,490
that are close together that can

746
00:25:34,380 --> 00:25:36,480
communicate and so forth

747
00:25:35,490 --> 00:25:38,340
so at least our one dimensional

748
00:25:36,480 --> 00:25:40,410
geometric random graphs we can show that

749
00:25:38,340 --> 00:25:42,300
the robotics property holds at the same

750
00:25:40,410 --> 00:25:43,830
time as certain other very basic

751
00:25:42,300 --> 00:25:45,360
properties hold too dramatic

752
00:25:43,830 --> 00:25:47,100
two-dimensional is much more difficult

753
00:25:45,360 --> 00:25:54,899
but we believe that we similar things

754
00:25:47,100 --> 00:25:58,290
happen yeah okay any other questions at

755
00:25:54,900 --> 00:26:00,410
this point if that will thank professor

756
00:25:58,290 --> 00:26:06,928
Shiraki some darling points work

757
00:26:00,410 --> 00:26:06,929
[Applause]

