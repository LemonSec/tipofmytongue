1
00:00:03,360 --> 00:00:10,349
undergrads have been working on a

2
00:00:06,479 --> 00:00:11,789
project together and made some some not

3
00:00:10,349 --> 00:00:13,709
only great research but some very

4
00:00:11,789 --> 00:00:15,959
noteworthy research that you may have

5
00:00:13,709 --> 00:00:20,040
read in many of the trades this this

6
00:00:15,959 --> 00:00:22,590
last week it's been kind of fun from

7
00:00:20,040 --> 00:00:24,480
this side of keeping our lips closed

8
00:00:22,590 --> 00:00:26,400
because we knew it was coming and they

9
00:00:24,480 --> 00:00:27,810
needed some time but instead of me

10
00:00:26,400 --> 00:00:29,840
talking about it I'll let them introduce

11
00:00:27,810 --> 00:00:33,390
themselves and talk about their research

12
00:00:29,840 --> 00:00:35,160
but this is like a proud father moment

13
00:00:33,390 --> 00:00:37,650
for me i love i love when our students

14
00:00:35,160 --> 00:00:46,019
do unbelievable great work so way to go

15
00:00:37,650 --> 00:00:50,970
boys thanks for that introduction father

16
00:00:46,020 --> 00:00:53,880
Joel my name is Robert Warren I'm a PhD

17
00:00:50,970 --> 00:00:57,239
student here this is Dan suckler and

18
00:00:53,880 --> 00:00:59,250
Austin casa we did a research study

19
00:00:57,239 --> 00:01:03,089
under the ensure project which is kind

20
00:00:59,250 --> 00:01:05,960
of a unique project directed by dr.

21
00:01:03,090 --> 00:01:08,729
Melissa dark and dr. John Springer and

22
00:01:05,960 --> 00:01:10,820
we tried to look at an observational

23
00:01:08,729 --> 00:01:13,140
study in this particular research

24
00:01:10,820 --> 00:01:14,850
project that dealt with cisco VPN

25
00:01:13,140 --> 00:01:19,860
streams that was kind of the project

26
00:01:14,850 --> 00:01:21,658
that we were tasked to look at this was

27
00:01:19,860 --> 00:01:23,429
an interesting study because it had a

28
00:01:21,659 --> 00:01:26,340
lot of ups and downs and kind of

29
00:01:23,430 --> 00:01:30,180
different paths and we found some

30
00:01:26,340 --> 00:01:32,070
vulnerabilities that was very surprising

31
00:01:30,180 --> 00:01:35,670
to us so we want to explain a little bit

32
00:01:32,070 --> 00:01:36,960
about what we found how that relates to

33
00:01:35,670 --> 00:01:39,810
some of the work we're doing in the

34
00:01:36,960 --> 00:01:42,059
future to try to quantify that so it

35
00:01:39,810 --> 00:01:45,090
kind of started out as an observational

36
00:01:42,060 --> 00:01:47,909
study to really look at if there's any

37
00:01:45,090 --> 00:01:50,729
information leakage from cisco virtual

38
00:01:47,909 --> 00:01:53,280
private networks as all of you probably

39
00:01:50,729 --> 00:01:55,020
know cisco virtual private networks are

40
00:01:53,280 --> 00:01:58,140
used to connect businesses and

41
00:01:55,020 --> 00:02:00,270
organizations worldwide and so we were

42
00:01:58,140 --> 00:02:03,000
trying to look at this particular VPN

43
00:02:00,270 --> 00:02:05,070
device to see if there was anything we

44
00:02:03,000 --> 00:02:07,079
could learn about it could we learn

45
00:02:05,070 --> 00:02:08,878
about the private communications that

46
00:02:07,079 --> 00:02:12,390
were occurring within the virtual

47
00:02:08,878 --> 00:02:14,069
private network some of the questions we

48
00:02:12,390 --> 00:02:16,859
were trying to answer initially were

49
00:02:14,069 --> 00:02:19,589
just some simple w's you know

50
00:02:16,860 --> 00:02:22,320
what communication occurred when did the

51
00:02:19,590 --> 00:02:23,640
communication take place where did the

52
00:02:22,320 --> 00:02:25,620
communication take place could we

53
00:02:23,640 --> 00:02:27,299
actually understand who was

54
00:02:25,620 --> 00:02:31,080
communicating and why they were

55
00:02:27,300 --> 00:02:32,880
communicating and we wanted to see where

56
00:02:31,080 --> 00:02:35,040
we could answer those questions and if

57
00:02:32,880 --> 00:02:36,930
encryption actually helped or the cisco

58
00:02:35,040 --> 00:02:41,549
virtual private network actually leaked

59
00:02:36,930 --> 00:02:43,950
information one of the salient things we

60
00:02:41,550 --> 00:02:46,020
saw that was surprising to us is that we

61
00:02:43,950 --> 00:02:47,970
believe the cisco after it was

62
00:02:46,020 --> 00:02:50,760
initiating some of the secure encryption

63
00:02:47,970 --> 00:02:52,620
for the cisco VPN device is that it was

64
00:02:50,760 --> 00:02:55,739
using a new protocol called quick which

65
00:02:52,620 --> 00:02:58,050
is developed by google quick is a

66
00:02:55,739 --> 00:03:01,980
protocol that was designed to have

67
00:02:58,050 --> 00:03:04,410
equivalent security to TLS and ssl it

68
00:03:01,980 --> 00:03:07,049
was to have encryption but it was also

69
00:03:04,410 --> 00:03:11,220
to reduce latency and essentially make

70
00:03:07,050 --> 00:03:13,380
the internet fast again it does this by

71
00:03:11,220 --> 00:03:16,770
reducing connection and transport late

72
00:03:13,380 --> 00:03:19,320
latency because it uses UDP and so this

73
00:03:16,770 --> 00:03:21,810
was one of the things that was

74
00:03:19,320 --> 00:03:23,190
surprising to us that we believed we

75
00:03:21,810 --> 00:03:24,750
didn't understand why they were

76
00:03:23,190 --> 00:03:28,170
necessarily using quick and so we had to

77
00:03:24,750 --> 00:03:30,000
investigate what quick was what we

78
00:03:28,170 --> 00:03:31,500
learned is quick and the Internet has

79
00:03:30,000 --> 00:03:33,390
been transformed over the last five

80
00:03:31,500 --> 00:03:36,269
years with these kind of new protocols

81
00:03:33,390 --> 00:03:38,940
to make things faster everybody wants a

82
00:03:36,269 --> 00:03:41,760
faster encryption algorithm so that you

83
00:03:38,940 --> 00:03:45,870
can you know watch Netflix or do video

84
00:03:41,760 --> 00:03:48,239
streaming or just make things faster so

85
00:03:45,870 --> 00:03:51,110
we started to learn that quick is used

86
00:03:48,239 --> 00:03:53,100
in chrome by over a billion users

87
00:03:51,110 --> 00:03:55,980
there's hundreds of thousands of

88
00:03:53,100 --> 00:03:58,829
websites and by default Google proper

89
00:03:55,980 --> 00:04:04,920
such as google com the search engine

90
00:03:58,830 --> 00:04:08,370
youtube all use use quick as their main

91
00:04:04,920 --> 00:04:10,708
protocol so I wanted to talk and turn it

92
00:04:08,370 --> 00:04:12,360
over a little bit to Dan who's going to

93
00:04:10,709 --> 00:04:15,060
tell you about some of our initial

94
00:04:12,360 --> 00:04:16,590
findings of trying to answer those W

95
00:04:15,060 --> 00:04:18,630
questions you know who's communicating

96
00:04:16,589 --> 00:04:21,060
why are they communicating what

97
00:04:18,630 --> 00:04:23,570
information leaked from the quick

98
00:04:21,060 --> 00:04:23,570
protocol

99
00:04:24,020 --> 00:04:30,289
so knowing that this VPN uses quick we

100
00:04:28,970 --> 00:04:32,690
decided to run some different types of

101
00:04:30,289 --> 00:04:34,340
traffic through it to see what it did

102
00:04:32,690 --> 00:04:36,830
what information we can get out of it

103
00:04:34,340 --> 00:04:39,190
and so we started with web and ftp

104
00:04:36,830 --> 00:04:42,050
traffic and what we found was that

105
00:04:39,190 --> 00:04:45,770
within each different type of traffic it

106
00:04:42,050 --> 00:04:47,810
was very consistent the packet size was

107
00:04:45,770 --> 00:04:50,180
consistent the sequence of packets was

108
00:04:47,810 --> 00:04:52,430
consistent but across the different

109
00:04:50,180 --> 00:04:56,509
types of traffic there were differences

110
00:04:52,430 --> 00:04:58,520
most notably the packet size so for web

111
00:04:56,509 --> 00:05:00,639
traffic we found that quick was

112
00:04:58,520 --> 00:05:05,000
consistently breaking it in two sizes of

113
00:05:00,639 --> 00:05:07,720
1392 and for ftp traffic a quick was

114
00:05:05,000 --> 00:05:11,539
consistently breaking it in two sizes of

115
00:05:07,720 --> 00:05:14,900
1463 and that allowed us to actually

116
00:05:11,539 --> 00:05:16,159
determine what the user was doing were

117
00:05:14,900 --> 00:05:18,710
they browsing the web were they

118
00:05:16,159 --> 00:05:21,259
transferring a file so this is us

119
00:05:18,710 --> 00:05:25,340
beginning to determine what the users

120
00:05:21,259 --> 00:05:29,539
doing their habits stuff like that in

121
00:05:25,340 --> 00:05:31,549
addition to web and ftp we ran some IRC

122
00:05:29,539 --> 00:05:33,409
traffic through it so initially we

123
00:05:31,550 --> 00:05:35,539
started with just some basic connecting

124
00:05:33,409 --> 00:05:38,449
and disconnecting and what we found was

125
00:05:35,539 --> 00:05:41,120
that each connect and disconnect had a

126
00:05:38,449 --> 00:05:43,669
pretty specific signature sequence of

127
00:05:41,120 --> 00:05:46,669
packets as you can see up here typically

128
00:05:43,669 --> 00:05:49,520
to TLS packets followed by a very

129
00:05:46,669 --> 00:05:51,080
specific set of quick packets and

130
00:05:49,520 --> 00:05:53,120
because we also have access to the

131
00:05:51,080 --> 00:05:55,789
source and destination IP we can keep

132
00:05:53,120 --> 00:05:58,880
track of individual users connecting and

133
00:05:55,789 --> 00:06:01,669
disconnecting to IRC chats within the

134
00:05:58,880 --> 00:06:04,880
VPN and this is obviously a pretty

135
00:06:01,669 --> 00:06:06,919
significant leakage so beyond just

136
00:06:04,880 --> 00:06:09,529
connecting and disconnecting we took a

137
00:06:06,919 --> 00:06:13,159
look at specific Jack communication

138
00:06:09,529 --> 00:06:16,580
within the VPN and what we found was

139
00:06:13,159 --> 00:06:20,569
that nearly all of the messages were

140
00:06:16,580 --> 00:06:23,990
beneath 300 bytes and for most of them

141
00:06:20,569 --> 00:06:25,819
they were all different sizes which was

142
00:06:23,990 --> 00:06:31,000
a little concerning and a little

143
00:06:25,819 --> 00:06:34,219
confusing so when we rented a bunch more

144
00:06:31,000 --> 00:06:35,210
we started to see some some more

145
00:06:34,219 --> 00:06:38,270
consistency with

146
00:06:35,210 --> 00:06:42,169
that I'll turn over to Austin to my

147
00:06:38,270 --> 00:06:45,080
little bit more about that so as we

148
00:06:42,169 --> 00:06:47,930
started to test IRC chat communication

149
00:06:45,080 --> 00:06:50,599
further we decided to send messages with

150
00:06:47,930 --> 00:06:52,669
an increasing size just sending one

151
00:06:50,599 --> 00:06:54,560
character more each time we sent a

152
00:06:52,669 --> 00:06:56,690
message and we see this really nice

153
00:06:54,560 --> 00:07:01,340
stepping function when we listen to the

154
00:06:56,690 --> 00:07:03,199
unencrypted side of our network however

155
00:07:01,340 --> 00:07:04,849
when we correlate these packets with the

156
00:07:03,199 --> 00:07:08,090
encrypted side after it goes through

157
00:07:04,849 --> 00:07:12,860
quick we see this same really nice

158
00:07:08,090 --> 00:07:15,380
second pattern with 16 bytes of padding

159
00:07:12,860 --> 00:07:19,610
that's used by Cisco's implementation of

160
00:07:15,380 --> 00:07:22,699
quick and from this we can start to

161
00:07:19,610 --> 00:07:24,889
piece together some more information so

162
00:07:22,699 --> 00:07:29,900
when we think about AES GCM the key

163
00:07:24,889 --> 00:07:32,599
space should be 2 to the 128 bits and I

164
00:07:29,900 --> 00:07:35,599
works as expected but when we start to

165
00:07:32,599 --> 00:07:37,340
look at aes GCM and quick we see that

166
00:07:35,599 --> 00:07:39,229
the message space is much smaller than

167
00:07:37,340 --> 00:07:47,150
that since we now know what the length

168
00:07:39,229 --> 00:07:48,469
of the individual messages are so in our

169
00:07:47,150 --> 00:07:51,849
study we were able to successfully

170
00:07:48,470 --> 00:07:55,370
fingerprints web FTP and IRC services

171
00:07:51,849 --> 00:07:57,259
look at the number of IRC clients that

172
00:07:55,370 --> 00:08:00,469
are connecting and disconnecting in an

173
00:07:57,259 --> 00:08:02,539
encrypted cisco VPN and we are able to

174
00:08:00,469 --> 00:08:08,539
identify individual IRC chat message

175
00:08:02,539 --> 00:08:12,460
links so in conclusion this unintended

176
00:08:08,539 --> 00:08:15,919
consequence of containing packet Lotso

177
00:08:12,460 --> 00:08:17,570
contain packet sizes loss is that these

178
00:08:15,919 --> 00:08:20,330
ordinal pattern starts to emerge and

179
00:08:17,570 --> 00:08:23,210
when we start to view these patterns and

180
00:08:20,330 --> 00:08:30,169
look at the larger picture we're able to

181
00:08:23,210 --> 00:08:34,240
see that these specific pieces of

182
00:08:30,169 --> 00:08:37,429
information start to occur so with these

183
00:08:34,240 --> 00:08:40,430
identification of the IRC message links

184
00:08:37,429 --> 00:08:47,140
it suggests that quick is more

185
00:08:40,429 --> 00:08:47,140
susceptible to to

186
00:08:47,680 --> 00:08:52,160
to traffic analysis with sensitive and

187
00:08:50,660 --> 00:08:57,740
short and spontaneous types of

188
00:08:52,160 --> 00:09:00,909
communication so one of our next steps

189
00:08:57,740 --> 00:09:00,909
[Music]

190
00:09:03,670 --> 00:09:10,520
yep Rob will explain this so I think

191
00:09:09,110 --> 00:09:12,380
you're probably wondering okay there's

192
00:09:10,520 --> 00:09:14,180
some information leakage you know what's

193
00:09:12,380 --> 00:09:16,280
the big deal you know we're learning

194
00:09:14,180 --> 00:09:19,099
that there's some web traffic some ftp

195
00:09:16,280 --> 00:09:21,829
traffic you know this is not necessarily

196
00:09:19,100 --> 00:09:24,200
new so I want to explain a little bit

197
00:09:21,830 --> 00:09:25,370
about a proof-of-concept exploit we're

198
00:09:24,200 --> 00:09:27,950
going to show you of how to bypass

199
00:09:25,370 --> 00:09:31,120
authentication in gmail using the

200
00:09:27,950 --> 00:09:33,830
leakage that quick tells you about

201
00:09:31,120 --> 00:09:36,350
particular password links and I want to

202
00:09:33,830 --> 00:09:39,470
talk a little bit about the limitations

203
00:09:36,350 --> 00:09:41,270
as well as the adversarial model that we

204
00:09:39,470 --> 00:09:43,760
kind of put together as this

205
00:09:41,270 --> 00:09:46,640
proof-of-concept so the limitation is is

206
00:09:43,760 --> 00:09:49,310
that quick actually leaks and tells you

207
00:09:46,640 --> 00:09:52,699
the exact length of the password of

208
00:09:49,310 --> 00:09:54,410
someone typing in their username and

209
00:09:52,700 --> 00:09:56,780
password so you can start to do a

210
00:09:54,410 --> 00:09:59,260
process of elimination of is it eight

211
00:09:56,780 --> 00:10:01,970
characters is it seven characters and

212
00:09:59,260 --> 00:10:06,230
we're trying to quantify right now with

213
00:10:01,970 --> 00:10:09,230
dr. blocky and Ben Harsha on what is

214
00:10:06,230 --> 00:10:11,690
that actual damage what is the advantage

215
00:10:09,230 --> 00:10:14,630
that you have as an adversary just from

216
00:10:11,690 --> 00:10:17,570
leaking the password length so we came

217
00:10:14,630 --> 00:10:19,640
up with an adversarial model this isn't

218
00:10:17,570 --> 00:10:21,950
necessarily going to help you get the

219
00:10:19,640 --> 00:10:24,620
most complex password if you have a very

220
00:10:21,950 --> 00:10:26,480
complex password that's 30 characters

221
00:10:24,620 --> 00:10:30,590
long this isn't going to give you much

222
00:10:26,480 --> 00:10:32,600
of an adversarial advantage but we know

223
00:10:30,590 --> 00:10:34,880
that the adversary has a lot of

224
00:10:32,600 --> 00:10:37,160
information today there are lots of data

225
00:10:34,880 --> 00:10:39,050
breaches occurring so for instance the

226
00:10:37,160 --> 00:10:41,660
Yahoo data breach there was one point

227
00:10:39,050 --> 00:10:43,520
seven billion passwords that have been

228
00:10:41,660 --> 00:10:47,360
leaked about what people are really

229
00:10:43,520 --> 00:10:50,300
using for passwords so think about the

230
00:10:47,360 --> 00:10:52,550
adversary now knows this also picture

231
00:10:50,300 --> 00:10:55,579
that the adversary is looking to conduct

232
00:10:52,550 --> 00:10:57,530
a campaign the campaign is looking to go

233
00:10:55,580 --> 00:10:59,780
after political dissidents or a

234
00:10:57,530 --> 00:11:00,649
particular minority religious group and

235
00:10:59,780 --> 00:11:02,920
I want to get in

236
00:11:00,649 --> 00:11:06,860
to the gmail accounts of that particular

237
00:11:02,920 --> 00:11:09,469
targeted group this is the adversarial

238
00:11:06,860 --> 00:11:11,300
model that we put together also think

239
00:11:09,470 --> 00:11:14,029
about the system at gmail let me go over

240
00:11:11,300 --> 00:11:17,748
a couple things a gmail does gmail does

241
00:11:14,029 --> 00:11:19,970
not lock you out if you put in multiple

242
00:11:17,749 --> 00:11:23,509
passwords it uses a system called

243
00:11:19,970 --> 00:11:25,399
CAPTCHA to simply increase usability so

244
00:11:23,509 --> 00:11:28,220
it actually tries to see if you're real

245
00:11:25,399 --> 00:11:30,079
human being to kind of delay an online

246
00:11:28,220 --> 00:11:32,949
brute-force attack but it never locks

247
00:11:30,079 --> 00:11:36,079
you out it also never emails you if

248
00:11:32,949 --> 00:11:38,329
there are multiple online attacks being

249
00:11:36,079 --> 00:11:40,368
done in gmail so the user never knows if

250
00:11:38,329 --> 00:11:42,888
someone's trying to guess a thousand

251
00:11:40,369 --> 00:11:49,179
passwords or two passwords or five

252
00:11:42,889 --> 00:11:52,069
passwords also gmail is does not require

253
00:11:49,179 --> 00:11:54,199
complex passwords you can the only

254
00:11:52,069 --> 00:11:57,050
requirement is between eight characters

255
00:11:54,199 --> 00:11:59,118
and 60 characters so now when you

256
00:11:57,050 --> 00:12:02,449
combine that with leaking what the real

257
00:11:59,119 --> 00:12:04,670
length is of a particular password from

258
00:12:02,449 --> 00:12:07,579
the quick protocol if you're sniffing a

259
00:12:04,670 --> 00:12:09,769
target network again our group that

260
00:12:07,579 --> 00:12:12,439
we're targeting is perhaps a political

261
00:12:09,769 --> 00:12:13,790
dissident group or a minority religious

262
00:12:12,439 --> 00:12:16,929
group that we want to get into those

263
00:12:13,790 --> 00:12:19,939
accounts can we gain a foothold into

264
00:12:16,929 --> 00:12:22,670
some of those accounts and if we do

265
00:12:19,939 --> 00:12:25,429
could that help our campaign to go after

266
00:12:22,670 --> 00:12:27,378
the rest of the users for instance if I

267
00:12:25,429 --> 00:12:30,139
get into a couple accounts could I then

268
00:12:27,379 --> 00:12:32,059
start spearfishing the other accounts so

269
00:12:30,139 --> 00:12:34,069
the idea isn't about total system

270
00:12:32,059 --> 00:12:37,069
compromised but does it give the

271
00:12:34,069 --> 00:12:40,878
adversary enough an advantage to target

272
00:12:37,069 --> 00:12:43,389
a group our initial results are is that

273
00:12:40,879 --> 00:12:46,220
we believe we can get in with some

274
00:12:43,389 --> 00:12:49,249
password links we can get in using

275
00:12:46,220 --> 00:12:52,179
empirical evidence from past password

276
00:12:49,249 --> 00:12:54,920
breaches such as the Yahoo data breach

277
00:12:52,179 --> 00:12:56,809
potentially getting into accounts with a

278
00:12:54,920 --> 00:12:59,748
ten percent chance that's quite an

279
00:12:56,809 --> 00:13:01,670
advantage for an adversary and so we're

280
00:12:59,749 --> 00:13:04,160
going to show you how we apply this to a

281
00:13:01,670 --> 00:13:06,949
real online attack against gmail as a

282
00:13:04,160 --> 00:13:09,350
proof of concept Austin is going to

283
00:13:06,949 --> 00:13:11,508
explain a little bit about the proof of

284
00:13:09,350 --> 00:13:14,299
concept exploit he wrote and the steps

285
00:13:11,509 --> 00:13:14,570
required to make this a reality against

286
00:13:14,299 --> 00:13:18,740
gene

287
00:13:14,570 --> 00:13:21,040
to bypass CAPTCHA to use a commonly used

288
00:13:18,740 --> 00:13:23,720
password that we've gotten out of

289
00:13:21,040 --> 00:13:26,209
dictionaries such as the Yahoo data

290
00:13:23,720 --> 00:13:32,180
breach and actually perform an online

291
00:13:26,210 --> 00:13:33,950
attack that would not be that the user

292
00:13:32,180 --> 00:13:36,920
would not necessarily know is occurring

293
00:13:33,950 --> 00:13:38,720
so i'll let austin take it over and kind

294
00:13:36,920 --> 00:13:41,170
of walk you through his proof of concept

295
00:13:38,720 --> 00:13:41,170
exploit

296
00:14:11,020 --> 00:14:16,670
so before I begin I'll talk about the

297
00:14:13,400 --> 00:14:18,709
three steps that this group of concept

298
00:14:16,670 --> 00:14:21,589
is showing so the first thing that

299
00:14:18,710 --> 00:14:24,740
you'll see is a bot simulating a user

300
00:14:21,590 --> 00:14:26,600
signing on to gmail multiple times so

301
00:14:24,740 --> 00:14:28,490
it'll do it three times while we looking

302
00:14:26,600 --> 00:14:31,550
at Wireshark in the background and we'll

303
00:14:28,490 --> 00:14:34,160
capture that traffic in step two we

304
00:14:31,550 --> 00:14:36,670
extract the password length and we

305
00:14:34,160 --> 00:14:39,560
create an optimized password dictionary

306
00:14:36,670 --> 00:14:42,500
that only contains passwords of that

307
00:14:39,560 --> 00:14:52,310
specific length that we detect and step

308
00:14:42,500 --> 00:14:54,560
three we try to brute force II system so

309
00:14:52,310 --> 00:15:00,229
right now it's I signing on multiple

310
00:14:54,560 --> 00:15:02,959
times like I said and this just shows

311
00:15:00,230 --> 00:15:04,580
what an average user would do when

312
00:15:02,960 --> 00:15:06,920
they're signing on multiple times and

313
00:15:04,580 --> 00:15:08,840
shows that if we have access to the

314
00:15:06,920 --> 00:15:11,240
network and we collect these packets

315
00:15:08,840 --> 00:15:14,410
over a length of time we can start to

316
00:15:11,240 --> 00:15:14,410
gain this information

317
00:15:30,630 --> 00:15:33,720
so as this is happening right now we're

318
00:15:32,400 --> 00:15:35,370
weren't running Wireshark in the

319
00:15:33,720 --> 00:15:38,550
background collecting all these packets

320
00:15:35,370 --> 00:15:40,860
that are being sent across and it's

321
00:15:38,550 --> 00:15:43,050
right now working on step two and

322
00:15:40,860 --> 00:15:45,870
detected the length extracted the

323
00:15:43,050 --> 00:15:47,939
password length from those packets and

324
00:15:45,870 --> 00:15:50,730
we're signing on to an anti capture

325
00:15:47,940 --> 00:15:52,320
service extension that's that we can use

326
00:15:50,730 --> 00:15:56,580
in chrome to automatically solve the

327
00:15:52,320 --> 00:15:57,660
captions for us and as it's working

328
00:15:56,580 --> 00:16:00,270
right now it's going to try the

329
00:15:57,660 --> 00:16:02,760
passwords in this optimized dictionary

330
00:16:00,270 --> 00:16:04,680
so since we know the length we have a

331
00:16:02,760 --> 00:16:06,390
pretty big advantage and we can reduce

332
00:16:04,680 --> 00:16:09,030
the number of guesses that we need and

333
00:16:06,390 --> 00:16:13,890
reduce the cost of getting into the

334
00:16:09,030 --> 00:16:15,780
system and then as Rob said we didn't

335
00:16:13,890 --> 00:16:17,250
find any sort of rate limiting or

336
00:16:15,780 --> 00:16:20,189
anything like that or any account

337
00:16:17,250 --> 00:16:23,130
lockout on the gmail system after we log

338
00:16:20,190 --> 00:16:30,660
in and the best way to get around this

339
00:16:23,130 --> 00:16:32,040
is using two-factor authentication so

340
00:16:30,660 --> 00:16:33,990
most of the delay that you see in the

341
00:16:32,040 --> 00:16:36,270
program is actually delays that we built

342
00:16:33,990 --> 00:16:38,700
in ourselves this could be a little bit

343
00:16:36,270 --> 00:16:39,870
quicker but for demo purposes we want to

344
00:16:38,700 --> 00:16:41,790
make sure that everyone can see what's

345
00:16:39,870 --> 00:16:44,210
going on and we can see that it's

346
00:16:41,790 --> 00:16:44,209
working correctly

347
00:17:08,920 --> 00:17:14,750
so multiple different types of services

348
00:17:12,619 --> 00:17:17,290
could have been used in this case we

349
00:17:14,750 --> 00:17:24,310
just happen to use the Romola service

350
00:17:17,290 --> 00:17:27,470
but others would have worked as well and

351
00:17:24,310 --> 00:17:29,149
this attack is scalable so we can run

352
00:17:27,470 --> 00:17:30,680
this with multiple different BOTS at the

353
00:17:29,150 --> 00:17:40,430
same time to try to get into one

354
00:17:30,680 --> 00:17:41,840
accounts so after it enters the correct

355
00:17:40,430 --> 00:17:44,090
passwords we can see that we can get

356
00:17:41,840 --> 00:17:46,939
access to the Google accounts that we're

357
00:17:44,090 --> 00:17:49,240
trying to target and that includes all

358
00:17:46,940 --> 00:17:52,100
their account settings gmail calendar

359
00:17:49,240 --> 00:17:54,610
and all of their Google services that

360
00:17:52,100 --> 00:17:54,610
they might use

361
00:18:18,590 --> 00:18:25,110
so I did want to talk about disclosure

362
00:18:21,390 --> 00:18:27,120
we did inform us cert we also informed

363
00:18:25,110 --> 00:18:30,540
Google Apple Microsoft and they're

364
00:18:27,120 --> 00:18:33,090
looking at particularly ways to look at

365
00:18:30,540 --> 00:18:36,290
some of the underlining encryption

366
00:18:33,090 --> 00:18:38,760
algorithms that are used in quick also

367
00:18:36,290 --> 00:18:40,590
where those encryption algorithms might

368
00:18:38,760 --> 00:18:42,300
leak information and how to deal with it

369
00:18:40,590 --> 00:18:44,669
so they're meeting with the web

370
00:18:42,300 --> 00:18:47,580
consortium we have some more information

371
00:18:44,670 --> 00:18:49,590
at Ring Road bug calm and we'll be

372
00:18:47,580 --> 00:18:51,840
updating a little bit about how we

373
00:18:49,590 --> 00:18:55,080
actually quantify that over the next

374
00:18:51,840 --> 00:18:57,689
couple months about what is the actual

375
00:18:55,080 --> 00:19:00,149
advantage you have in situations like

376
00:18:57,690 --> 00:19:03,420
this when protocols actually leaked

377
00:19:00,150 --> 00:19:05,010
information um we'd like to thank

378
00:19:03,420 --> 00:19:07,650
several people that really helped with

379
00:19:05,010 --> 00:19:09,330
this we'd like to thank dr. dark and

380
00:19:07,650 --> 00:19:11,850
doctor springer for being our leads in

381
00:19:09,330 --> 00:19:14,189
this particular project we'd also like

382
00:19:11,850 --> 00:19:16,590
to thank Bill Layton and Mark locker for

383
00:19:14,190 --> 00:19:18,720
all their great support on this and

384
00:19:16,590 --> 00:19:20,610
advising us as we went through the ups

385
00:19:18,720 --> 00:19:22,740
and downs of this particular program

386
00:19:20,610 --> 00:19:24,929
we'd also like to thank Steven Frank at

387
00:19:22,740 --> 00:19:27,960
wintec who kind of helped us with

388
00:19:24,930 --> 00:19:29,670
setting up the cisco lab and also adam

389
00:19:27,960 --> 00:19:32,550
hammer who helped us set up the cisco

390
00:19:29,670 --> 00:19:35,580
lab and thanks for dr. spafford and dr.

391
00:19:32,550 --> 00:19:38,010
blocky for making sure that we didn't we

392
00:19:35,580 --> 00:19:39,360
properly articulated our limitations and

393
00:19:38,010 --> 00:19:42,420
our capabilities with this particular

394
00:19:39,360 --> 00:19:43,709
exploit so that's really the end of the

395
00:19:42,420 --> 00:19:46,050
presentation we're happy to take

396
00:19:43,710 --> 00:19:47,910
questions but I know we're also bumping

397
00:19:46,050 --> 00:19:58,710
up against launch so I'm sure everyone's

398
00:19:47,910 --> 00:20:03,810
also very hungry the disclosure yeah so

399
00:19:58,710 --> 00:20:08,970
um we've gotten some mixed so mixed

400
00:20:03,810 --> 00:20:11,370
reaction it's difficult because it deals

401
00:20:08,970 --> 00:20:15,930
with a with a protocol that is used in

402
00:20:11,370 --> 00:20:17,879
chrome and so there is some discussions

403
00:20:15,930 --> 00:20:21,150
at Google in particular about is this

404
00:20:17,880 --> 00:20:22,770
protocol vulnerability or like a product

405
00:20:21,150 --> 00:20:24,870
vulnerability and of course that's very

406
00:20:22,770 --> 00:20:28,470
important from fixing the problem about

407
00:20:24,870 --> 00:20:30,330
which business unit you're using so

408
00:20:28,470 --> 00:20:33,720
there in discussions about that

409
00:20:30,330 --> 00:20:36,269
Apple initially is looking at trying not

410
00:20:33,720 --> 00:20:38,179
to use some of the underlining cipher

411
00:20:36,269 --> 00:20:41,880
Suites to transmit sensitive data

412
00:20:38,179 --> 00:20:44,159
particularly ASG CM they're looking at

413
00:20:41,880 --> 00:20:46,730
alternatives I don't think they've come

414
00:20:44,159 --> 00:20:49,380
up with what they're going to be using

415
00:20:46,730 --> 00:20:52,350
but I think they're looking at you know

416
00:20:49,380 --> 00:20:54,630
some previous ones like a CBC H Mac

417
00:20:52,350 --> 00:20:56,519
that's just a potential I don't think

418
00:20:54,630 --> 00:20:58,649
they've made a decision on that but I

419
00:20:56,519 --> 00:21:00,929
also think one thing we've really

420
00:20:58,649 --> 00:21:03,029
learned about this is how difficult it

421
00:21:00,929 --> 00:21:05,669
is to fix these types of things to make

422
00:21:03,029 --> 00:21:07,919
sure users can still be able to use web

423
00:21:05,669 --> 00:21:11,100
browsers those types of things so I know

424
00:21:07,919 --> 00:21:13,019
that they're bringing this to the web

425
00:21:11,100 --> 00:21:15,539
consortium to try to see if they can fix

426
00:21:13,019 --> 00:21:19,049
it at the HTTP layer in the standards

427
00:21:15,539 --> 00:21:20,820
body with HTTP to where they can

428
00:21:19,049 --> 00:21:23,309
actually identify when am i sending

429
00:21:20,820 --> 00:21:25,678
sensitive credentials like passwords and

430
00:21:23,309 --> 00:21:29,820
can then iPad and off you skate their

431
00:21:25,679 --> 00:21:31,649
length that's one potential solution so

432
00:21:29,820 --> 00:21:34,769
there's a number of different areas and

433
00:21:31,649 --> 00:21:36,899
discussions that are going on but

434
00:21:34,769 --> 00:21:39,539
because quick is so pervasive it I don't

435
00:21:36,899 --> 00:21:40,860
think it's going to be an easy fix so

436
00:21:39,539 --> 00:21:43,980
we've tried to show a proof of concept

437
00:21:40,860 --> 00:21:48,620
exploit but not necessarily develop

438
00:21:43,980 --> 00:21:48,620
something that would be used in the wild

439
00:22:02,300 --> 00:22:11,000
I think we're still going through the

440
00:22:06,470 --> 00:22:13,280
initial results I think it I think yeah

441
00:22:11,000 --> 00:22:16,480
sorry about that Thank You Joel um the

442
00:22:13,280 --> 00:22:20,840
question was most people probably use

443
00:22:16,480 --> 00:22:22,220
eight characters nine characters 10

444
00:22:20,840 --> 00:22:23,689
characters for their passwords so

445
00:22:22,220 --> 00:22:25,430
knowing that how much of an advantage

446
00:22:23,690 --> 00:22:28,460
does that really give you when you leak

447
00:22:25,430 --> 00:22:32,120
the length i think we've quantified

448
00:22:28,460 --> 00:22:35,360
initially that it doubles your advantage

449
00:22:32,120 --> 00:22:37,159
and the reason for that is is that i now

450
00:22:35,360 --> 00:22:39,469
can create an optimized dictionary and

451
00:22:37,160 --> 00:22:41,780
do an online attack where previously i

452
00:22:39,470 --> 00:22:44,660
might have to do the passwords of all of

453
00:22:41,780 --> 00:22:46,760
those and so an online attack may not be

454
00:22:44,660 --> 00:22:49,880
possible in that particular case that's

455
00:22:46,760 --> 00:22:51,650
different for an offline attack and

456
00:22:49,880 --> 00:22:54,020
that's something we're still quantifying

457
00:22:51,650 --> 00:22:58,990
but i think our initial results are it

458
00:22:54,020 --> 00:22:58,990
doubles so your advantage doubles

459
00:23:05,720 --> 00:23:13,190
in additional questions gentlemen thank

460
00:23:10,710 --> 00:23:13,190
you very much

461
00:23:16,160 --> 00:23:18,220
you

462
00:23:26,419 --> 00:23:28,480
you

