1
00:00:01,350 --> 00:00:07,569
okay welcome to the first class of the

2
00:00:05,020 --> 00:00:09,790
spring semester so appreciate everybody

3
00:00:07,569 --> 00:00:11,170
coming today and finding the room that's

4
00:00:09,790 --> 00:00:11,950
always a challenge on the first few

5
00:00:11,170 --> 00:00:14,830
weeks of class

6
00:00:11,950 --> 00:00:17,259
I'm Jerry I work for serious professor

7
00:00:14,830 --> 00:00:19,360
Tian is as traveling this week so he'll

8
00:00:17,260 --> 00:00:21,850
be managing the class and he should be

9
00:00:19,360 --> 00:00:23,380
here for most of the other classes just

10
00:00:21,850 --> 00:00:25,420
a couple of housekeeping things if

11
00:00:23,380 --> 00:00:27,939
during the course of the of the class if

12
00:00:25,420 --> 00:00:29,470
you have a question push the button on

13
00:00:27,940 --> 00:00:31,960
the microphone to ask your question so

14
00:00:29,470 --> 00:00:33,550
it gets recorded if you haven't checked

15
00:00:31,960 --> 00:00:34,960
in on the roster before you leave make

16
00:00:33,550 --> 00:00:37,690
sure you check your name off the roster

17
00:00:34,960 --> 00:00:39,010
list so you get credit for attending so

18
00:00:37,690 --> 00:00:41,829
it's my pleasure to introduce our

19
00:00:39,010 --> 00:00:43,960
speaker today it's Shree Harsha at Akane

20
00:00:41,829 --> 00:00:46,300
he's a postdoc graduate research

21
00:00:43,960 --> 00:00:47,860
associate here at Purdue University he

22
00:00:46,300 --> 00:00:50,230
earned his PhD in electrical and

23
00:00:47,860 --> 00:00:52,629
computer engineering from Rutgers his

24
00:00:50,230 --> 00:00:54,550
research focuses mainly on security acai

25
00:00:52,629 --> 00:00:57,129
berry' physical systems and his research

26
00:00:54,550 --> 00:01:00,370
is to secure cyber physical systems by

27
00:00:57,129 --> 00:01:02,079
using physical and control invariants so

28
00:01:00,370 --> 00:01:04,989
I'm here to learn about that myself

29
00:01:02,079 --> 00:01:06,640
his research interests also include IOT

30
00:01:04,989 --> 00:01:08,890
embedded system security trusted

31
00:01:06,640 --> 00:01:10,780
computing secure boot runtime monitoring

32
00:01:08,890 --> 00:01:12,640
and detection physical side channels and

33
00:01:10,780 --> 00:01:14,580
applied cryptography so pretty broad

34
00:01:12,640 --> 00:01:17,610
spectrum so with that I'll introduce

35
00:01:14,580 --> 00:01:20,400
Shree Harsha and let him take it away

36
00:01:17,610 --> 00:01:23,020
[Applause]

37
00:01:20,400 --> 00:01:25,990
good evening everyone today I'll be

38
00:01:23,020 --> 00:01:28,780
talking about contactless control flow

39
00:01:25,990 --> 00:01:31,149
monitoring so for control flow

40
00:01:28,780 --> 00:01:33,280
monitoring cure we used physical side

41
00:01:31,150 --> 00:01:36,700
channels which is electromagnetic

42
00:01:33,280 --> 00:01:39,759
radiations which are emitted by any of

43
00:01:36,700 --> 00:01:43,869
the electronic components I mainly focus

44
00:01:39,759 --> 00:01:45,790
on safety critical systems here so what

45
00:01:43,869 --> 00:01:48,640
is a safety critical system so safety

46
00:01:45,790 --> 00:01:51,220
critical system is a system whose

47
00:01:48,640 --> 00:01:53,890
failure or malfunction will lead to one

48
00:01:51,220 --> 00:01:56,039
of the following results one or more of

49
00:01:53,890 --> 00:01:59,920
the following outcomes which is like

50
00:01:56,040 --> 00:02:02,920
serious death or injury to people that

51
00:01:59,920 --> 00:02:05,020
is like for example Toyota's

52
00:02:02,920 --> 00:02:09,519
unintentional acceleration which killed

53
00:02:05,020 --> 00:02:12,700
89 people or it could also be a loss or

54
00:02:09,519 --> 00:02:14,650
severe damage to any property or

55
00:02:12,700 --> 00:02:15,100
infrastructure like you can see the

56
00:02:14,650 --> 00:02:17,620
plane

57
00:02:15,100 --> 00:02:20,109
into a building or it could also be

58
00:02:17,620 --> 00:02:23,680
environmental harm which is like the BP

59
00:02:20,110 --> 00:02:26,290
oil leak so which caused environmental

60
00:02:23,680 --> 00:02:28,660
harm so what are safety critical systems

61
00:02:26,290 --> 00:02:31,510
so safety critical system comprises of

62
00:02:28,660 --> 00:02:34,290
physical system as you can see here the

63
00:02:31,510 --> 00:02:36,820
aircraft which is a physical system and

64
00:02:34,290 --> 00:02:38,410
embedded system embedded system involves

65
00:02:36,820 --> 00:02:40,209
a software and hardware which is

66
00:02:38,410 --> 00:02:41,500
actually controlling the physical system

67
00:02:40,210 --> 00:02:43,680
so together

68
00:02:41,500 --> 00:02:46,480
it's called cyber physical system and

69
00:02:43,680 --> 00:02:49,780
also human aspect is also required in

70
00:02:46,480 --> 00:02:52,239
the safety critical systems so

71
00:02:49,780 --> 00:02:54,700
industrial control systems are one of

72
00:02:52,240 --> 00:02:57,670
the safety critical systems especially

73
00:02:54,700 --> 00:02:59,649
few of them so I'll talk about that here

74
00:02:57,670 --> 00:03:01,510
you can see the three layers of

75
00:02:59,650 --> 00:03:03,910
industrial control system the bottom

76
00:03:01,510 --> 00:03:07,209
three layers which are on operational

77
00:03:03,910 --> 00:03:09,520
technology site the bottom layer the

78
00:03:07,210 --> 00:03:12,280
bottom one what you can see is the field

79
00:03:09,520 --> 00:03:16,240
level which is your sensors and

80
00:03:12,280 --> 00:03:18,580
actuators like any meters or any sensors

81
00:03:16,240 --> 00:03:20,380
like for example something measuring the

82
00:03:18,580 --> 00:03:22,510
pressure on a cell in a cylinder or

83
00:03:20,380 --> 00:03:24,220
something like that and actuator is

84
00:03:22,510 --> 00:03:26,410
something like motors which are running

85
00:03:24,220 --> 00:03:31,470
so these kind of things are the sensors

86
00:03:26,410 --> 00:03:34,750
and the actuators the next layer is the

87
00:03:31,470 --> 00:03:38,890
control level where you have industrial

88
00:03:34,750 --> 00:03:40,900
controllers like for example PLC's or RT

89
00:03:38,890 --> 00:03:43,089
use PLC's programmable logic controllers

90
00:03:40,900 --> 00:03:44,770
so which are industrial grade computers

91
00:03:43,090 --> 00:03:47,410
or which are used in manufacturing

92
00:03:44,770 --> 00:03:50,440
plants or any other industrial control

93
00:03:47,410 --> 00:03:53,020
facilities like nuclear power plants or

94
00:03:50,440 --> 00:03:56,290
these kind of things so the main

95
00:03:53,020 --> 00:03:58,720
function of these are to get the input

96
00:03:56,290 --> 00:04:01,480
from the sensors which is from the under

97
00:03:58,720 --> 00:04:04,270
level and then perform some operations

98
00:04:01,480 --> 00:04:06,100
on top of that and then decide on what

99
00:04:04,270 --> 00:04:10,930
our tuition commands to be given to the

100
00:04:06,100 --> 00:04:13,540
actuators so another function of these

101
00:04:10,930 --> 00:04:15,160
are it can also take inputs from the

102
00:04:13,540 --> 00:04:18,459
SCADA system or the human machine

103
00:04:15,160 --> 00:04:21,640
interface the control commands and send

104
00:04:18,459 --> 00:04:24,340
it out to the actuators so in my

105
00:04:21,640 --> 00:04:26,590
scenario I'm just considering the

106
00:04:24,340 --> 00:04:27,560
industrial control system the control

107
00:04:26,590 --> 00:04:30,109
monitoring on industrial

108
00:04:27,560 --> 00:04:34,630
roll system specifically on programmable

109
00:04:30,110 --> 00:04:37,310
logic controllers so one thing is like

110
00:04:34,630 --> 00:04:39,650
one question lot of people might ask is

111
00:04:37,310 --> 00:04:42,320
it easy to attack industrial control

112
00:04:39,650 --> 00:04:45,138
systems so this is just one one simple

113
00:04:42,320 --> 00:04:48,110
example of like what it is if you look

114
00:04:45,139 --> 00:04:51,350
at numbers on the attack surface wise

115
00:04:48,110 --> 00:04:54,139
you can see from the power plants this

116
00:04:51,350 --> 00:04:57,470
is a u.s. power grid transmission grid

117
00:04:54,139 --> 00:05:00,700
you can see that it has 7,000 power

118
00:04:57,470 --> 00:05:04,070
plants around 19,000 power generators

119
00:05:00,700 --> 00:05:06,760
55,000 substations and 450 thousand

120
00:05:04,070 --> 00:05:09,310
miles of high-voltage power lines and

121
00:05:06,760 --> 00:05:12,320
this is not even considering other

122
00:05:09,310 --> 00:05:14,540
equipments like smart meters or any

123
00:05:12,320 --> 00:05:17,630
distribution things and all these things

124
00:05:14,540 --> 00:05:21,110
so you can see that it has a huge attack

125
00:05:17,630 --> 00:05:23,780
surface and location wise most of them

126
00:05:21,110 --> 00:05:25,850
are actually placed in very remote

127
00:05:23,780 --> 00:05:29,030
locations in very hostile environments

128
00:05:25,850 --> 00:05:31,729
so yeah you can decide like if it's

129
00:05:29,030 --> 00:05:34,010
easier to attack or not so these are

130
00:05:31,729 --> 00:05:36,560
some of the malicious attacks on

131
00:05:34,010 --> 00:05:38,810
industrial control system I'm just going

132
00:05:36,560 --> 00:05:41,540
through some of the very popular and

133
00:05:38,810 --> 00:05:44,110
famous ones there are a lot more so

134
00:05:41,540 --> 00:05:47,120
industrial control systems mostly

135
00:05:44,110 --> 00:05:50,510
examples of some of them like the power

136
00:05:47,120 --> 00:05:52,520
grids are the manufacturing plants your

137
00:05:50,510 --> 00:05:54,260
oil and gas refinery nuclear power

138
00:05:52,520 --> 00:05:58,000
plants these are the ones you see how

139
00:05:54,260 --> 00:06:01,550
critical they are so one of the example

140
00:05:58,000 --> 00:06:04,550
the first known malicious attack on

141
00:06:01,550 --> 00:06:07,010
industrial control system was by Stuxnet

142
00:06:04,550 --> 00:06:11,390
malware which attacked the nuclear

143
00:06:07,010 --> 00:06:13,039
enrichment plant the another popular one

144
00:06:11,390 --> 00:06:16,090
which I would like to mention is crash

145
00:06:13,039 --> 00:06:19,580
overwrite which was on Ukrainian power

146
00:06:16,090 --> 00:06:22,010
system and the third one which are like

147
00:06:19,580 --> 00:06:25,669
good to mention is Triton which was on

148
00:06:22,010 --> 00:06:27,890
oil and gas refinery so what kind of

149
00:06:25,669 --> 00:06:30,740
attacks can be done so there is special

150
00:06:27,890 --> 00:06:33,320
kind of attacks which are performed on

151
00:06:30,740 --> 00:06:35,210
this industrial control systems they are

152
00:06:33,320 --> 00:06:37,729
called kinetic cyber attacks so what are

153
00:06:35,210 --> 00:06:40,669
kinetic cyber attacks so kinetic cyber

154
00:06:37,729 --> 00:06:42,199
attacks are direct or indirect assault

155
00:06:40,669 --> 00:06:45,669
on

156
00:06:42,199 --> 00:06:49,639
which is which will cause damage to

157
00:06:45,669 --> 00:06:52,039
properties or any equipments or kill

158
00:06:49,639 --> 00:06:54,379
people or injure them so these kind of

159
00:06:52,039 --> 00:06:55,909
things are solely based on the

160
00:06:54,379 --> 00:06:58,310
exploitation of the vulnerabilities

161
00:06:55,909 --> 00:07:02,150
present in the cyber site so this is a

162
00:06:58,310 --> 00:07:03,919
cyber kinetic cyber attacks so if you

163
00:07:02,150 --> 00:07:06,258
want to see some of the examples again

164
00:07:03,919 --> 00:07:09,049
the Stuxnet is one of the great examples

165
00:07:06,259 --> 00:07:11,960
here for a kinetic cyber attacks where

166
00:07:09,050 --> 00:07:14,449
the cyber part was attacked and the

167
00:07:11,960 --> 00:07:16,729
result of which was destroying around

168
00:07:14,449 --> 00:07:20,349
thousand centrifuges so here you can see

169
00:07:16,729 --> 00:07:22,878
that it destroyed some physical property

170
00:07:20,349 --> 00:07:26,900
the other one I would like to mention is

171
00:07:22,879 --> 00:07:30,680
the water treatment plant control in

172
00:07:26,900 --> 00:07:34,818
Australia where attacker was able to mix

173
00:07:30,680 --> 00:07:37,460
the cleanly treated water with the

174
00:07:34,819 --> 00:07:40,520
untreated water causing poison to the

175
00:07:37,460 --> 00:07:42,799
water so this was one of it and the

176
00:07:40,520 --> 00:07:45,349
other one you can see that cyberattack

177
00:07:42,800 --> 00:07:46,430
on Ukrainian power plant causing

178
00:07:45,349 --> 00:07:51,589
blackout

179
00:07:46,430 --> 00:07:55,039
power outage other one was hack attack

180
00:07:51,589 --> 00:07:57,199
on steel plant in Germany causing damage

181
00:07:55,039 --> 00:08:00,469
to the equipment's so these are some of

182
00:07:57,199 --> 00:08:03,650
the kinetic cyber attacks so my work

183
00:08:00,469 --> 00:08:07,009
basically is to protect against this

184
00:08:03,650 --> 00:08:10,279
kind of kinetic cyber attacks so the

185
00:08:07,009 --> 00:08:13,430
main problem here is to either detect or

186
00:08:10,279 --> 00:08:14,719
prevent this kind of cyber attacks which

187
00:08:13,430 --> 00:08:16,250
are running on industrial control

188
00:08:14,719 --> 00:08:18,169
systems so I'm specifically

189
00:08:16,250 --> 00:08:19,879
concentrating on a programmable logic

190
00:08:18,169 --> 00:08:21,889
controller so if everything runs well

191
00:08:19,879 --> 00:08:23,270
then it's okay if there is an attack you

192
00:08:21,889 --> 00:08:27,860
should be able to detect it as soon as

193
00:08:23,270 --> 00:08:30,349
possible and take preventive actions so

194
00:08:27,860 --> 00:08:32,510
for that you have few previous

195
00:08:30,349 --> 00:08:35,269
literature work from the literature what

196
00:08:32,510 --> 00:08:38,838
what are being done sure one of it is

197
00:08:35,269 --> 00:08:42,380
the offline analysis of verifying the

198
00:08:38,839 --> 00:08:44,660
control logic on the PLC's so here you

199
00:08:42,380 --> 00:08:49,160
can see the green circle as a bump on a

200
00:08:44,660 --> 00:08:52,370
wire which is a device so it is called

201
00:08:49,160 --> 00:08:55,358
trusted safety verifier so what this

202
00:08:52,370 --> 00:08:57,739
does is it actually intercepts the

203
00:08:55,359 --> 00:09:00,559
program which is programmed from the

204
00:08:57,739 --> 00:09:02,029
control operator to the PLC's so any

205
00:09:00,559 --> 00:09:03,999
program what you want to program it to

206
00:09:02,029 --> 00:09:08,449
the PLC so this bump in the wire

207
00:09:03,999 --> 00:09:11,059
intercepts those program analyzes it

208
00:09:08,449 --> 00:09:14,238
verifies for the safety properties to

209
00:09:11,059 --> 00:09:16,488
see if the program is being run on the

210
00:09:14,239 --> 00:09:18,769
PLC there are no physical damages or

211
00:09:16,489 --> 00:09:21,169
violation of any safety properties so

212
00:09:18,769 --> 00:09:23,419
these kind of thing verification it does

213
00:09:21,169 --> 00:09:25,220
and for example if there is any

214
00:09:23,419 --> 00:09:26,989
violation it returns back to the

215
00:09:25,220 --> 00:09:29,269
operator saying that okay this program

216
00:09:26,989 --> 00:09:32,089
if you program it on to the PLC can

217
00:09:29,269 --> 00:09:34,999
cause the safety violations so if there

218
00:09:32,089 --> 00:09:37,999
is no safety violation or then it goes

219
00:09:34,999 --> 00:09:40,549
ahead and programs on to the PLC so this

220
00:09:37,999 --> 00:09:44,389
was offline analysis and one problem

221
00:09:40,549 --> 00:09:47,179
with this is any runtime bugs or attacks

222
00:09:44,389 --> 00:09:52,699
might not be able to detect using this

223
00:09:47,179 --> 00:09:55,549
kind of solutions so another one is a

224
00:09:52,699 --> 00:09:59,449
runtime PLC execution monitoring where

225
00:09:55,549 --> 00:10:02,299
you can see that one example is cyber

226
00:09:59,449 --> 00:10:05,508
physical access control where you have

227
00:10:02,299 --> 00:10:08,089
some code which is programmed onto the

228
00:10:05,509 --> 00:10:11,509
PLC for the execution monitoring during

229
00:10:08,089 --> 00:10:13,369
runtime so in this case you can see that

230
00:10:11,509 --> 00:10:15,589
there are a lot of limitations for this

231
00:10:13,369 --> 00:10:18,889
as well although it can capture any

232
00:10:15,589 --> 00:10:21,079
attacks during runtime so some of the

233
00:10:18,889 --> 00:10:24,230
limitations here are real time

234
00:10:21,079 --> 00:10:26,540
constraints so PLC work are real time

235
00:10:24,230 --> 00:10:28,549
systems which work on a very tight

236
00:10:26,540 --> 00:10:31,129
deadlines and all the deadlines have to

237
00:10:28,549 --> 00:10:34,579
be met so that's one of the constraints

238
00:10:31,129 --> 00:10:37,610
of the PLC's so here when you add some

239
00:10:34,579 --> 00:10:39,910
program on to the PLC so this could

240
00:10:37,610 --> 00:10:43,850
compromise the real-time nests of the

241
00:10:39,910 --> 00:10:46,279
system and it could also have a resource

242
00:10:43,850 --> 00:10:48,850
overhead like because you inject some

243
00:10:46,279 --> 00:10:52,249
code or instrument some code on the PLC

244
00:10:48,850 --> 00:10:54,230
and the other one are the limitation is

245
00:10:52,249 --> 00:10:56,359
that the same attack vector for example

246
00:10:54,230 --> 00:10:59,319
if the attacker has control over the PLC

247
00:10:56,359 --> 00:11:01,609
then it's not that difficult for him to

248
00:10:59,319 --> 00:11:03,890
deactivate this execution monitoring or

249
00:11:01,609 --> 00:11:07,970
change something on this execution

250
00:11:03,890 --> 00:11:10,160
and another problem is most of the

251
00:11:07,970 --> 00:11:12,529
systems what are being used right now

252
00:11:10,160 --> 00:11:14,420
our legacy systems and most of the

253
00:11:12,529 --> 00:11:17,720
control engineers don't want to change

254
00:11:14,420 --> 00:11:19,540
or a probe or do anything onto the

255
00:11:17,720 --> 00:11:21,829
system which is already working and

256
00:11:19,540 --> 00:11:24,199
according to some sources it's also been

257
00:11:21,829 --> 00:11:27,109
said that some of the legacy systems

258
00:11:24,200 --> 00:11:30,740
don't even have additional memory to

259
00:11:27,110 --> 00:11:32,810
even perform security patches so these

260
00:11:30,740 --> 00:11:38,600
kind of things might be little difficult

261
00:11:32,810 --> 00:11:40,518
in this cases and the other other key is

262
00:11:38,600 --> 00:11:45,410
what are the limitations of this is you

263
00:11:40,519 --> 00:11:46,339
can see that this is a previous work by

264
00:11:45,410 --> 00:11:48,140
one of my friend

265
00:11:46,339 --> 00:11:51,680
it's called hey of my malware knows

266
00:11:48,140 --> 00:11:53,360
physics so attacking PLC's with physical

267
00:11:51,680 --> 00:11:55,279
model of a rootkit

268
00:11:53,360 --> 00:11:58,399
so in this case what happens is you can

269
00:11:55,279 --> 00:12:00,230
see that the the physical system is a

270
00:11:58,399 --> 00:12:02,899
power system in this case which has the

271
00:12:00,230 --> 00:12:04,579
sensors and the actuators and you have a

272
00:12:02,899 --> 00:12:06,230
firmware which takes the actual

273
00:12:04,579 --> 00:12:09,349
measurements and sends it to the

274
00:12:06,230 --> 00:12:12,320
legitimate control logic and same way it

275
00:12:09,350 --> 00:12:14,300
gets the legitimate controls from the

276
00:12:12,320 --> 00:12:19,370
user and then passes it to the physical

277
00:12:14,300 --> 00:12:21,469
system but one thing is the if this kind

278
00:12:19,370 --> 00:12:24,560
of system is attacked by a rootkit

279
00:12:21,470 --> 00:12:26,810
in a firmware so what would happen so

280
00:12:24,560 --> 00:12:29,089
that this was a malware or in the

281
00:12:26,810 --> 00:12:31,339
previous literature so you can see here

282
00:12:29,089 --> 00:12:34,160
so what this does is it has two layers

283
00:12:31,339 --> 00:12:37,250
one is the benign physical model and one

284
00:12:34,160 --> 00:12:40,850
is the malicious physical model so what

285
00:12:37,250 --> 00:12:42,860
does basically does is it shows the

286
00:12:40,850 --> 00:12:45,410
operator that okay everything is working

287
00:12:42,860 --> 00:12:48,110
fine in the system so that's on the

288
00:12:45,410 --> 00:12:50,449
benign physical model part of it on the

289
00:12:48,110 --> 00:12:51,949
malicious physical model side what it

290
00:12:50,449 --> 00:12:54,589
does is it performs some malicious

291
00:12:51,949 --> 00:12:56,300
operations below so that the user can

292
00:12:54,589 --> 00:12:59,240
see that okay everything is running well

293
00:12:56,300 --> 00:13:01,699
but on the actual system it's not

294
00:12:59,240 --> 00:13:03,709
running properly so there's been an

295
00:13:01,699 --> 00:13:06,620
attack so when these kind of things

296
00:13:03,709 --> 00:13:08,449
cannot be detected easily by a runtime

297
00:13:06,620 --> 00:13:11,329
monitoring because the system already is

298
00:13:08,449 --> 00:13:13,699
compromised so even for these kind of

299
00:13:11,329 --> 00:13:17,569
things what we wanted to do is we wanted

300
00:13:13,699 --> 00:13:20,170
to detect any control flow violations in

301
00:13:17,570 --> 00:13:22,040
in this case so that's why we used

302
00:13:20,170 --> 00:13:26,540
electromagnetic radiations which is a

303
00:13:22,040 --> 00:13:29,660
physical side channel to capture the

304
00:13:26,540 --> 00:13:32,329
control flow and then see if it is

305
00:13:29,660 --> 00:13:34,719
legitimate one or if it's something by

306
00:13:32,330 --> 00:13:37,160
an attacker so here you can see that

307
00:13:34,720 --> 00:13:39,170
these are the control logic program

308
00:13:37,160 --> 00:13:42,740
which is running on Allen Bradley PLC

309
00:13:39,170 --> 00:13:45,410
and we have electromagnetic radiations

310
00:13:42,740 --> 00:13:47,690
which are emitted by that and that is

311
00:13:45,410 --> 00:13:50,449
being captured by the electromagnetic

312
00:13:47,690 --> 00:13:51,590
probe so this is basically a air gap

313
00:13:50,450 --> 00:13:53,600
there's no contact

314
00:13:51,590 --> 00:13:58,250
so it's contactless control flow

315
00:13:53,600 --> 00:14:00,170
monitoring there like previously there

316
00:13:58,250 --> 00:14:03,440
are there are also being some work on

317
00:14:00,170 --> 00:14:06,760
electromagnetic radiations to crack some

318
00:14:03,440 --> 00:14:08,930
cryptographic algorithms or to do some

319
00:14:06,760 --> 00:14:14,210
execution profiling which is very close

320
00:14:08,930 --> 00:14:16,790
to our work so how are these

321
00:14:14,210 --> 00:14:19,600
electromagnetic radiations emitted so

322
00:14:16,790 --> 00:14:22,579
any of the embedded systems have

323
00:14:19,600 --> 00:14:24,320
semiconductor chips in this case I'm

324
00:14:22,580 --> 00:14:26,180
just considering it as a CMOS component

325
00:14:24,320 --> 00:14:29,270
but it is the same with all the other

326
00:14:26,180 --> 00:14:31,670
things as well so any operations you

327
00:14:29,270 --> 00:14:34,520
perform on them or causes change of

328
00:14:31,670 --> 00:14:36,890
current in a semiconductor chip so this

329
00:14:34,520 --> 00:14:39,470
change of current will actually lead to

330
00:14:36,890 --> 00:14:44,750
electromagnetic field generated and this

331
00:14:39,470 --> 00:14:47,150
is emitted so we captured this to do

332
00:14:44,750 --> 00:14:50,210
some execution monitoring so in this

333
00:14:47,150 --> 00:14:51,709
case on Allen Bradley PLC when we run we

334
00:14:50,210 --> 00:14:54,800
found out that different instructions

335
00:14:51,710 --> 00:14:56,270
actually have different patterns of this

336
00:14:54,800 --> 00:14:59,479
electromagnetic radiations which are

337
00:14:56,270 --> 00:15:01,640
emitted if you see this this is a

338
00:14:59,480 --> 00:15:05,210
spectrogram of different instructions on

339
00:15:01,640 --> 00:15:08,270
the x axis you have the frequency and on

340
00:15:05,210 --> 00:15:09,910
the y axis you have it's actually a time

341
00:15:08,270 --> 00:15:12,740
but we split up into different

342
00:15:09,910 --> 00:15:15,290
instructions so here you can see a lot

343
00:15:12,740 --> 00:15:18,200
of different instructions from very

344
00:15:15,290 --> 00:15:20,569
simple ones from XOR to even the

345
00:15:18,200 --> 00:15:27,170
complicated ones like a PID controllers

346
00:15:20,570 --> 00:15:30,410
you can see and so so from this it might

347
00:15:27,170 --> 00:15:31,339
not be very easy to detect that the

348
00:15:30,410 --> 00:15:33,079
patterns vary

349
00:15:31,340 --> 00:15:36,200
distinctive four different instructions

350
00:15:33,080 --> 00:15:39,320
but when we do some signal processing it

351
00:15:36,200 --> 00:15:43,480
looks much clearer and our next question

352
00:15:39,320 --> 00:15:46,790
was since we were able to capture this

353
00:15:43,480 --> 00:15:50,930
are we able to identify it distinctively

354
00:15:46,790 --> 00:15:52,370
so for that we took six different

355
00:15:50,930 --> 00:15:55,670
instructions from six different

356
00:15:52,370 --> 00:15:59,180
categories ranging from automatic but

357
00:15:55,670 --> 00:16:01,900
comparison array mapping branch control

358
00:15:59,180 --> 00:16:04,849
some advanced math and even complex

359
00:16:01,900 --> 00:16:08,000
instructions like PID programmable logic

360
00:16:04,850 --> 00:16:09,530
controller and you can see here or this

361
00:16:08,000 --> 00:16:11,150
is a confusion matrix and you can see

362
00:16:09,530 --> 00:16:12,380
here we were able to successfully

363
00:16:11,150 --> 00:16:15,860
distinguish between different

364
00:16:12,380 --> 00:16:18,530
instructions and for this we used random

365
00:16:15,860 --> 00:16:22,760
forest decision trees with thousand

366
00:16:18,530 --> 00:16:25,610
samples for training and 500 samples for

367
00:16:22,760 --> 00:16:30,770
testing and each sample was 200

368
00:16:25,610 --> 00:16:33,350
microseconds length so since we are able

369
00:16:30,770 --> 00:16:37,699
to just like distinguish between

370
00:16:33,350 --> 00:16:40,420
different instruction our next aim or

371
00:16:37,700 --> 00:16:43,370
target was can be differentiate between

372
00:16:40,420 --> 00:16:45,949
two different paths and a control

373
00:16:43,370 --> 00:16:48,230
program like for example in this case as

374
00:16:45,950 --> 00:16:51,020
you can see the blue line represents the

375
00:16:48,230 --> 00:16:54,200
control flow of path one and the red one

376
00:16:51,020 --> 00:16:56,720
represents the control flow in path 2 so

377
00:16:54,200 --> 00:16:59,600
our main aim balls can be distinguished

378
00:16:56,720 --> 00:17:01,430
between them so for that we actually

379
00:16:59,600 --> 00:17:05,060
created a framework here

380
00:17:01,430 --> 00:17:07,940
you can see this so here we have two

381
00:17:05,060 --> 00:17:09,619
different stages one is the our training

382
00:17:07,940 --> 00:17:12,200
stage and other one is the deployment

383
00:17:09,619 --> 00:17:14,510
stage and here you can see the red line

384
00:17:12,200 --> 00:17:16,459
represents the training stage modules

385
00:17:14,510 --> 00:17:19,099
and the green one represents the

386
00:17:16,459 --> 00:17:21,950
deployment stage ones so the first stage

387
00:17:19,099 --> 00:17:25,939
in training is to collect the training

388
00:17:21,950 --> 00:17:28,130
signals from the PLC whatever the

389
00:17:25,940 --> 00:17:30,830
control logic is running and the second

390
00:17:28,130 --> 00:17:34,550
one is to convert them into spectrogram

391
00:17:30,830 --> 00:17:36,980
and the third one is to create a program

392
00:17:34,550 --> 00:17:39,080
behavioral model which is later used to

393
00:17:36,980 --> 00:17:41,450
detect if there is a legitimate or

394
00:17:39,080 --> 00:17:44,330
execution part or any malicious

395
00:17:41,450 --> 00:17:45,230
execution path and on the deployment

396
00:17:44,330 --> 00:17:48,168
stage what we

397
00:17:45,230 --> 00:17:50,690
we collect the query signals convert

398
00:17:48,169 --> 00:17:54,710
them again to the spectrogram and then

399
00:17:50,690 --> 00:17:57,679
feed it into the behavioral model to see

400
00:17:54,710 --> 00:18:00,919
if we have the legitimate execution part

401
00:17:57,679 --> 00:18:04,880
or if it's something abnormal in the

402
00:18:00,919 --> 00:18:07,370
execution part so first is is the signal

403
00:18:04,880 --> 00:18:10,460
collection during the training so this

404
00:18:07,370 --> 00:18:12,830
is a PLC program which is written in a

405
00:18:10,460 --> 00:18:15,169
ladder or logic which is a programmable

406
00:18:12,830 --> 00:18:17,379
logic controllers language one of the

407
00:18:15,169 --> 00:18:21,289
programmable controller logics language

408
00:18:17,380 --> 00:18:24,500
so we generate test cases and consider

409
00:18:21,289 --> 00:18:26,899
like capture all the electromagnetic

410
00:18:24,500 --> 00:18:31,490
signals so how do we generate test cases

411
00:18:26,899 --> 00:18:34,309
so what we do is we extract all the path

412
00:18:31,490 --> 00:18:36,740
predicates in the control logic to

413
00:18:34,309 --> 00:18:39,710
determine path constraints of all the

414
00:18:36,740 --> 00:18:42,019
paths and then we solve it using SMT

415
00:18:39,710 --> 00:18:45,980
solver and generate inputs for that and

416
00:18:42,019 --> 00:18:47,720
we use those inputs and we use those

417
00:18:45,980 --> 00:18:50,120
inputs to feed it into the programmable

418
00:18:47,720 --> 00:18:52,909
control logic and force the programmable

419
00:18:50,120 --> 00:18:54,860
logic controller to follow each and

420
00:18:52,909 --> 00:18:57,350
every path which is there on the control

421
00:18:54,860 --> 00:18:59,149
logic so based on that we have our

422
00:18:57,350 --> 00:19:01,428
execution path like we traverse through

423
00:18:59,149 --> 00:19:02,899
all the execution path and collect the

424
00:19:01,429 --> 00:19:09,769
electromagnetic signals for all the

425
00:19:02,899 --> 00:19:14,178
execution paths so some challenges what

426
00:19:09,769 --> 00:19:16,340
what we had was we like the system has a

427
00:19:14,179 --> 00:19:19,190
noisy environments like there are a lot

428
00:19:16,340 --> 00:19:21,019
of white noises as well as noise from

429
00:19:19,190 --> 00:19:25,039
different other components which are

430
00:19:21,019 --> 00:19:26,750
also running on change of electric

431
00:19:25,039 --> 00:19:30,230
currents which will also generate some

432
00:19:26,750 --> 00:19:32,090
electromagnetic fields and another other

433
00:19:30,230 --> 00:19:34,610
problem what we had is as you can see

434
00:19:32,090 --> 00:19:37,850
this different instructions have

435
00:19:34,610 --> 00:19:40,600
different cycles for running and the

436
00:19:37,850 --> 00:19:43,789
execution time is different for them so

437
00:19:40,600 --> 00:19:46,490
it was not that easy for us to test it

438
00:19:43,789 --> 00:19:48,049
on the time domain so we got better

439
00:19:46,490 --> 00:19:53,480
results on frequency domain which I'll

440
00:19:48,049 --> 00:19:57,320
show in coming slides and here you can

441
00:19:53,480 --> 00:19:58,880
see that this is a graph of time on

442
00:19:57,320 --> 00:20:01,070
x-axis and

443
00:19:58,880 --> 00:20:03,860
amplitude on y-axis so this is a signal

444
00:20:01,070 --> 00:20:06,950
collected on time domain so what we do

445
00:20:03,860 --> 00:20:10,699
is we have a sliding window with overlap

446
00:20:06,950 --> 00:20:13,790
and we split up we extract certain

447
00:20:10,700 --> 00:20:16,970
signal segments from those complete

448
00:20:13,790 --> 00:20:18,889
signal and then convert them into the

449
00:20:16,970 --> 00:20:21,440
frequency domain as you can see on the

450
00:20:18,890 --> 00:20:23,300
left hand side it is our time versus

451
00:20:21,440 --> 00:20:25,190
amplitude on the right we after we

452
00:20:23,300 --> 00:20:29,450
convert it into frequency domain it's

453
00:20:25,190 --> 00:20:31,850
frequency versus magnitude so this is a

454
00:20:29,450 --> 00:20:33,950
frequency spectrum where on x axis you

455
00:20:31,850 --> 00:20:39,189
have frequency and on y axis you have

456
00:20:33,950 --> 00:20:42,260
time or in seconds so you can see that

457
00:20:39,190 --> 00:20:46,310
when it takes certain execution path it

458
00:20:42,260 --> 00:20:49,490
has very specific electromagnetic

459
00:20:46,310 --> 00:20:51,260
patterns which can be recognized based

460
00:20:49,490 --> 00:20:54,290
on which we can determine which control

461
00:20:51,260 --> 00:20:57,500
path it was taking so once we come to

462
00:20:54,290 --> 00:21:01,129
the program behavioral model the input

463
00:20:57,500 --> 00:21:04,670
for that is the spectrum sequence which

464
00:21:01,130 --> 00:21:07,940
we had by converting time doping into

465
00:21:04,670 --> 00:21:10,220
frequency domain and then we use that to

466
00:21:07,940 --> 00:21:14,710
predict what control or path it was

467
00:21:10,220 --> 00:21:17,450
taking so for that we used Alice TM a

468
00:21:14,710 --> 00:21:19,700
sequential neural network model because

469
00:21:17,450 --> 00:21:23,930
the signal what we get is sequential in

470
00:21:19,700 --> 00:21:26,720
running of instructions so in this case

471
00:21:23,930 --> 00:21:29,720
we have the hidden state vectors on to

472
00:21:26,720 --> 00:21:32,660
it the time steps and history

473
00:21:29,720 --> 00:21:35,450
information and the current input for

474
00:21:32,660 --> 00:21:37,700
alice tiem to determine the output and

475
00:21:35,450 --> 00:21:41,270
here you can see on the x-axis we have

476
00:21:37,700 --> 00:21:43,160
the execution path on y-axis we have the

477
00:21:41,270 --> 00:21:46,010
probability the probability is like

478
00:21:43,160 --> 00:21:48,710
which path it is taking so based on

479
00:21:46,010 --> 00:21:50,570
certain or threshold we determine if it

480
00:21:48,710 --> 00:21:54,350
is taking the right execution path or

481
00:21:50,570 --> 00:21:57,470
the wrong one and here you can see on

482
00:21:54,350 --> 00:21:59,270
the deployment stage what we do is since

483
00:21:57,470 --> 00:22:02,600
we already have the train model or

484
00:21:59,270 --> 00:22:05,030
running and then once we deploy the plc

485
00:22:02,600 --> 00:22:06,709
on the field we use the same

486
00:22:05,030 --> 00:22:09,200
electromagnetic probe to collect the

487
00:22:06,710 --> 00:22:11,510
data and then convert them into the

488
00:22:09,200 --> 00:22:12,200
spectrogram and frequency domain

489
00:22:11,510 --> 00:22:13,639
spectrograph

490
00:22:12,200 --> 00:22:17,750
and feed it into the program behavioral

491
00:22:13,639 --> 00:22:22,549
model to check if it's a legitimate one

492
00:22:17,750 --> 00:22:24,889
or or if it's an attack execution path

493
00:22:22,549 --> 00:22:26,629
so here you can see the execution path

494
00:22:24,889 --> 00:22:29,149
and the probability graph where you have

495
00:22:26,630 --> 00:22:31,240
the likelihood score and on the bottom

496
00:22:29,149 --> 00:22:34,219
you can see a graph where you have

497
00:22:31,240 --> 00:22:36,139
x-axis is the likelihood score and the

498
00:22:34,220 --> 00:22:38,870
y-axis is probability likelihood score

499
00:22:36,139 --> 00:22:41,500
is that its likelihood that it's a

500
00:22:38,870 --> 00:22:44,479
legitimate part or the anomalous one and

501
00:22:41,500 --> 00:22:46,940
the red ones are the anomalous ones and

502
00:22:44,480 --> 00:22:51,289
the blue ones are the legitimate ones as

503
00:22:46,940 --> 00:22:53,899
you can see the legitimate execution

504
00:22:51,289 --> 00:22:56,960
paths are more scoot towards the

505
00:22:53,899 --> 00:22:59,719
right-hand side which is which

506
00:22:56,960 --> 00:23:01,909
represents more likelihood and the red

507
00:22:59,720 --> 00:23:04,070
one's a skew towards the left-hand side

508
00:23:01,909 --> 00:23:05,990
which shows that okay there are we're

509
00:23:04,070 --> 00:23:08,629
like very less likely and they are

510
00:23:05,990 --> 00:23:10,789
anomalous ones so what we did is we

511
00:23:08,630 --> 00:23:12,500
fixed the threshold or depending on

512
00:23:10,789 --> 00:23:14,720
which we determine if it's a legitimate

513
00:23:12,500 --> 00:23:18,019
execution part or the malicious

514
00:23:14,720 --> 00:23:23,169
execution part so this can be varied

515
00:23:18,019 --> 00:23:29,870
depending on instruction granularity and

516
00:23:23,169 --> 00:23:33,889
like other things so here this was our

517
00:23:29,870 --> 00:23:36,229
experimental setup to start with the plc

518
00:23:33,889 --> 00:23:40,850
we had Allen Bradley PLC which is most

519
00:23:36,230 --> 00:23:42,980
popular PLC in North America and for the

520
00:23:40,850 --> 00:23:46,010
e/m sensor what we did is we just use a

521
00:23:42,980 --> 00:23:48,799
microphone and we removed the transducer

522
00:23:46,010 --> 00:23:54,440
so this acted as an antenna so that that

523
00:23:48,799 --> 00:23:56,240
acted as a iam probe and we used

524
00:23:54,440 --> 00:23:59,360
amplifier to amplify the signal which

525
00:23:56,240 --> 00:24:01,789
was collected by the e/m Pro and then we

526
00:23:59,360 --> 00:24:06,469
had oscilloscope or to sample it at 50

527
00:24:01,789 --> 00:24:11,090
megahertz and this is one of the board

528
00:24:06,470 --> 00:24:12,769
from the PLC so this bolt had like

529
00:24:11,090 --> 00:24:18,099
different components we wanted to check

530
00:24:12,769 --> 00:24:21,439
which component had maximum

531
00:24:18,099 --> 00:24:22,849
the strength of the signal or so we

532
00:24:21,439 --> 00:24:26,299
tried on different components like

533
00:24:22,849 --> 00:24:28,129
assembly capacitor FPGA chips as well as

534
00:24:26,299 --> 00:24:30,709
some proprietary chip I learned about

535
00:24:28,129 --> 00:24:33,319
this proprietary chip so here you can

536
00:24:30,709 --> 00:24:36,279
see that the x-axis is again the

537
00:24:33,319 --> 00:24:38,959
frequency and you have four different

538
00:24:36,279 --> 00:24:41,509
chips that's a proprietary chip FPGAs

539
00:24:38,959 --> 00:24:43,669
and SMB capacitors as you can see the

540
00:24:41,509 --> 00:24:45,859
magnitude or the strength of the signal

541
00:24:43,669 --> 00:24:51,409
for proprietary chip was maximum because

542
00:24:45,859 --> 00:24:54,759
of its size so we started collecting

543
00:24:51,409 --> 00:24:58,189
signals from that proprietary chip and

544
00:24:54,759 --> 00:25:01,579
for evolution programs we evaluated on

545
00:24:58,189 --> 00:25:05,629
like variety of classes of programs from

546
00:25:01,579 --> 00:25:07,609
cryptography control systems to some

547
00:25:05,629 --> 00:25:11,208
signal processing or numerical methods

548
00:25:07,609 --> 00:25:14,899
on various different applications like

549
00:25:11,209 --> 00:25:24,319
object tracking or value searching oh

550
00:25:14,899 --> 00:25:28,008
yeah of emanations in other PLC's or did

551
00:25:24,319 --> 00:25:32,178
you just test that one board actually

552
00:25:28,009 --> 00:25:33,949
only on Allen Bradley PLC but are you

553
00:25:32,179 --> 00:25:36,199
assumed that it will be the same with

554
00:25:33,949 --> 00:25:39,829
all the other PLC's as well so it will

555
00:25:36,199 --> 00:25:41,719
be the same with any of the controllers

556
00:25:39,829 --> 00:25:46,698
which use a semiconductor devices or

557
00:25:41,719 --> 00:25:48,679
anything such kind of things yeah so

558
00:25:46,699 --> 00:25:51,589
yeah these are different examples what

559
00:25:48,679 --> 00:25:54,469
we had and we compared our solution with

560
00:25:51,589 --> 00:25:57,529
the baseline model which is a hidden

561
00:25:54,469 --> 00:26:02,029
Markov model which was from the previous

562
00:25:57,529 --> 00:26:03,619
literature works here we used both time

563
00:26:02,029 --> 00:26:06,289
domain and frequency domain just for

564
00:26:03,619 --> 00:26:10,448
comparison part of it and here you can

565
00:26:06,289 --> 00:26:13,549
see the execution tracking accuracy for

566
00:26:10,449 --> 00:26:16,789
different programs on four different

567
00:26:13,549 --> 00:26:18,349
categories on the time domain the hidden

568
00:26:16,789 --> 00:26:20,779
Markov model and the Elysium and

569
00:26:18,349 --> 00:26:23,809
frequency domain hidden Markov model and

570
00:26:20,779 --> 00:26:25,940
the lsdm and you can see that on the

571
00:26:23,809 --> 00:26:29,329
frequency domain ellis tiem or showed

572
00:26:25,940 --> 00:26:30,830
very great results on this but tracking

573
00:26:29,329 --> 00:26:37,490
accuracy of closed

574
00:26:30,830 --> 00:26:39,710
99% in this case and this is the area

575
00:26:37,490 --> 00:26:41,840
under the curve on x-axis you have a

576
00:26:39,710 --> 00:26:44,210
false positive rates on y-axis you have

577
00:26:41,840 --> 00:26:47,480
true positive rates for different

578
00:26:44,210 --> 00:26:50,690
signals on frequency domain LSD mm-hmm

579
00:26:47,480 --> 00:26:54,620
and then our time domain illicium and

580
00:26:50,690 --> 00:26:57,169
hmm as you can see the blue one

581
00:26:54,620 --> 00:26:59,658
represents the frequency domain ellis

582
00:26:57,169 --> 00:27:02,840
tiem but the area under the curve was

583
00:26:59,659 --> 00:27:04,549
0.99 so the higher the area under the

584
00:27:02,840 --> 00:27:07,490
curve that means that you can

585
00:27:04,549 --> 00:27:09,139
distinguish between the malicious

586
00:27:07,490 --> 00:27:11,659
execution path and the legitimate

587
00:27:09,139 --> 00:27:13,309
execution path very well so if it's one

588
00:27:11,659 --> 00:27:15,860
you can perfectly determine everything

589
00:27:13,309 --> 00:27:18,408
if it's 0.99 it's a little lower as you

590
00:27:15,860 --> 00:27:19,699
can see for different things for time

591
00:27:18,409 --> 00:27:22,880
domain it's lower compared to the

592
00:27:19,700 --> 00:27:27,820
frequency domain and for lsdm is much

593
00:27:22,880 --> 00:27:30,500
greater than hmm and this is another

594
00:27:27,820 --> 00:27:32,720
thing what we had the slicing sliding

595
00:27:30,500 --> 00:27:35,240
window versus the classification

596
00:27:32,720 --> 00:27:36,830
accuracy if you remember previously I

597
00:27:35,240 --> 00:27:39,529
told that we collect the signal and then

598
00:27:36,830 --> 00:27:43,158
slice it on the signal spectrum so this

599
00:27:39,529 --> 00:27:47,090
is what it is and we we tested it on all

600
00:27:43,159 --> 00:27:52,370
four different categories by we

601
00:27:47,090 --> 00:27:54,949
performed so as you can see that the

602
00:27:52,370 --> 00:27:57,649
smaller windows have lower frequency

603
00:27:54,950 --> 00:28:00,110
resolutions that means you don't capture

604
00:27:57,649 --> 00:28:02,120
all the signals and on the higher ones

605
00:28:00,110 --> 00:28:04,279
you have worst temporal granularity that

606
00:28:02,120 --> 00:28:06,500
means even the small change is anything

607
00:28:04,279 --> 00:28:08,840
which goes missing we just capture the

608
00:28:06,500 --> 00:28:09,980
big picture of it so that's the thing

609
00:28:08,840 --> 00:28:12,019
that's the reason so there is a

610
00:28:09,980 --> 00:28:16,789
trade-off between a frequency resolution

611
00:28:12,019 --> 00:28:19,610
and temporal reality here so this is

612
00:28:16,789 --> 00:28:21,919
again a performance for our sliding

613
00:28:19,610 --> 00:28:25,820
window versus the area under the graph

614
00:28:21,919 --> 00:28:27,980
as you can see for arcs in are you like

615
00:28:25,820 --> 00:28:34,480
the 200 microseconds was the best one a

616
00:28:27,980 --> 00:28:37,309
trade-off between these performance and

617
00:28:34,480 --> 00:28:40,299
yeah here you can see or the window size

618
00:28:37,309 --> 00:28:43,039
versus the processing time and on the

619
00:28:40,299 --> 00:28:43,840
x-axis you can see that the sliding

620
00:28:43,039 --> 00:28:47,250
window and y-axis

621
00:28:43,840 --> 00:28:50,139
the process time and you can see that

622
00:28:47,250 --> 00:28:51,130
hmm the hidden Markov model is much

623
00:28:50,140 --> 00:28:54,460
faster than the

624
00:28:51,130 --> 00:28:57,419
lsdm but on accuracy wise lsdm is much

625
00:28:54,460 --> 00:28:59,919
better than the hidden Markov model so

626
00:28:57,419 --> 00:29:05,890
yeah it's a trade-off between the

627
00:28:59,919 --> 00:29:10,380
accuracy and the timing but the timing

628
00:29:05,890 --> 00:29:14,080
was very low so it should be good and

629
00:29:10,380 --> 00:29:16,390
for higher sliding windows we have a

630
00:29:14,080 --> 00:29:20,740
floor recurrences that's why it's lower

631
00:29:16,390 --> 00:29:22,990
the timing and for lower end of the

632
00:29:20,740 --> 00:29:25,840
spectrum where it is like a lesser or a

633
00:29:22,990 --> 00:29:28,149
slide sliding window we have only few

634
00:29:25,840 --> 00:29:33,250
instructions or few signal patterns so

635
00:29:28,149 --> 00:29:36,340
that's why it's faster on that side yeah

636
00:29:33,250 --> 00:29:38,200
to conclude yeah this was a runtime

637
00:29:36,340 --> 00:29:41,139
execution monitoring which was

638
00:29:38,200 --> 00:29:44,770
contactless without any instrumentation

639
00:29:41,140 --> 00:29:47,440
or any code injected onto the system and

640
00:29:44,770 --> 00:29:49,149
it's perfectly air-gapped we use

641
00:29:47,440 --> 00:29:52,539
electromagnetic side channels for

642
00:29:49,149 --> 00:29:55,120
execution monitoring and online signal

643
00:29:52,539 --> 00:30:00,370
processing and program behavioral model

644
00:29:55,120 --> 00:30:05,289
was performed here and yeah we got

645
00:30:00,370 --> 00:30:09,360
around 99% accuracy for control logic

646
00:30:05,289 --> 00:30:13,500
programs yeah thank you

647
00:30:09,360 --> 00:30:13,500
[Applause]

648
00:30:19,410 --> 00:30:25,020
um you mentioned that one of the

649
00:30:22,230 --> 00:30:26,520
challenges you faced was external

650
00:30:25,020 --> 00:30:29,340
electromagnetic noise white noise

651
00:30:26,520 --> 00:30:32,520
influence so Mike why have a question

652
00:30:29,340 --> 00:30:34,379
regarding that would you say during the

653
00:30:32,520 --> 00:30:36,210
signal processing process through the

654
00:30:34,380 --> 00:30:38,600
AUSA no scope did you use any sort of

655
00:30:36,210 --> 00:30:41,419
like a low-pass filter based on the

656
00:30:38,600 --> 00:30:44,610
frequency you sense from the propriety

657
00:30:41,419 --> 00:30:47,039
proprietary allen bradley chip for

658
00:30:44,610 --> 00:30:51,449
instructions did you set a filter of any

659
00:30:47,039 --> 00:30:55,590
source to a threshold yeah so ya be

660
00:30:51,450 --> 00:30:58,110
sampled at 50 megahertz so we we wanted

661
00:30:55,590 --> 00:31:00,360
to eliminate lot of noise which are on

662
00:30:58,110 --> 00:31:02,610
the lower range of it so we mostly

663
00:31:00,360 --> 00:31:09,479
focused on the higher one so we use the

664
00:31:02,610 --> 00:31:11,899
low-pass filter for area any other

665
00:31:09,480 --> 00:31:11,900
questions

666
00:31:30,810 --> 00:31:39,760
okay could you please clarify the

667
00:31:33,340 --> 00:31:42,580
adversary' model of the defense you know

668
00:31:39,760 --> 00:31:44,620
in our model what we consider is the

669
00:31:42,580 --> 00:31:47,620
defensive solution is being provided by

670
00:31:44,620 --> 00:31:51,429
the people internal people who have

671
00:31:47,620 --> 00:31:53,649
access to the code as well as the PLC's

672
00:31:51,430 --> 00:31:57,190
and they have physical access so that's

673
00:31:53,650 --> 00:32:00,640
what we assume and so we assume that all

674
00:31:57,190 --> 00:32:03,940
those actors or all those systems are

675
00:32:00,640 --> 00:32:08,020
protected and trusted and what we assume

676
00:32:03,940 --> 00:32:13,810
is the attacker can either remotely gain

677
00:32:08,020 --> 00:32:19,420
some access to the PLC's either directly

678
00:32:13,810 --> 00:32:21,220
or through any other basically at work

679
00:32:19,420 --> 00:32:25,900
of course they cannot have physical

680
00:32:21,220 --> 00:32:28,210
access which is exactly okay so how

681
00:32:25,900 --> 00:32:31,360
close does it need to be to capture

682
00:32:28,210 --> 00:32:36,220
these signals you know it actually

683
00:32:31,360 --> 00:32:38,740
depends so in our case it was it was

684
00:32:36,220 --> 00:32:40,720
around five centimeters if it's greater

685
00:32:38,740 --> 00:32:44,830
than five centimeters then it's not that

686
00:32:40,720 --> 00:32:46,840
good but there are like recent papers

687
00:32:44,830 --> 00:32:50,980
which came out something called

688
00:32:46,840 --> 00:32:54,580
screaming signals if you know it so what

689
00:32:50,980 --> 00:32:57,550
they do is they actually tell that some

690
00:32:54,580 --> 00:33:00,879
of the microcontroller chips which have

691
00:32:57,550 --> 00:33:03,370
both analog and digital circuitry so in

692
00:33:00,880 --> 00:33:04,960
that cases what happens is the analog

693
00:33:03,370 --> 00:33:07,419
circuit picks up noise from the digital

694
00:33:04,960 --> 00:33:09,850
circuit and then amplifies it and

695
00:33:07,420 --> 00:33:12,340
transmits so that's much higher so they

696
00:33:09,850 --> 00:33:14,800
they were able to pick it up with like

697
00:33:12,340 --> 00:33:19,600
twenty meters distance or something like

698
00:33:14,800 --> 00:33:22,030
that so in this case as of now the PLC

699
00:33:19,600 --> 00:33:24,730
don't have any transmission signals or

700
00:33:22,030 --> 00:33:27,760
something like that but PLC's are very

701
00:33:24,730 --> 00:33:30,060
similar to our T use remote terminal

702
00:33:27,760 --> 00:33:33,700
units so but the remote terminal units

703
00:33:30,060 --> 00:33:37,330
are echoed with a lot of other things

704
00:33:33,700 --> 00:33:40,390
like Wi-Fi or GPRS or these kind of

705
00:33:37,330 --> 00:33:44,250
things so yeah in that case it might

706
00:33:40,390 --> 00:33:44,250
work yeah okay thank you

707
00:33:44,480 --> 00:33:52,300
is your idea to suggest they create

708
00:33:49,220 --> 00:33:56,120
something to install within these units

709
00:33:52,300 --> 00:33:57,590
that just runs autonomously checks and

710
00:33:56,120 --> 00:33:58,820
compares and then just reports the

711
00:33:57,590 --> 00:34:03,139
operators directly

712
00:33:58,820 --> 00:34:06,169
yes that's true so I mean motive was not

713
00:34:03,140 --> 00:34:08,000
to instrument the code or touch any of

714
00:34:06,170 --> 00:34:10,850
the components which are already present

715
00:34:08,000 --> 00:34:12,590
so by this kind of solution what happens

716
00:34:10,850 --> 00:34:17,060
is you can actually create this

717
00:34:12,590 --> 00:34:18,980
framework and then just pack it as a

718
00:34:17,060 --> 00:34:21,679
small box or something and just place it

719
00:34:18,980 --> 00:34:23,990
just beside the system which is already

720
00:34:21,679 --> 00:34:26,270
running so it can just capture and send

721
00:34:23,989 --> 00:34:27,918
the signals to the computer or like the

722
00:34:26,270 --> 00:34:37,389
system where you do all the processing

723
00:34:27,918 --> 00:34:39,440
kind of thing here any other questions

724
00:34:37,389 --> 00:34:41,420
okay if now let's thank our speaker

725
00:34:39,440 --> 00:34:44,550
again

726
00:34:41,420 --> 00:34:44,550
[Applause]

727
00:34:52,659 --> 00:34:54,720
you

