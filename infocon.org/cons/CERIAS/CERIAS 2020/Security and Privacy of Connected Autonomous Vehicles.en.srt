1
00:00:01,420 --> 00:00:08,120
good afternoon it's my pleasure to

2
00:00:04,849 --> 00:00:10,549
introduce dr. Barrera Akuma dr. Kumar is

3
00:00:08,119 --> 00:00:12,620
a postdoctoral research associate in the

4
00:00:10,549 --> 00:00:16,009
Department of Computer Science at Purdue

5
00:00:12,620 --> 00:00:18,470
University vajra earned his Bachelor

6
00:00:16,010 --> 00:00:21,950
degree in electrical engineering at

7
00:00:18,470 --> 00:00:24,799
Indian Institute of Technology Delhi in

8
00:00:21,950 --> 00:00:26,360
2009 and he speech the degree in

9
00:00:24,800 --> 00:00:31,190
Computer Engineering at Virginia Tech

10
00:00:26,360 --> 00:00:33,769
into in 2016 he was the recipient of the

11
00:00:31,190 --> 00:00:36,469
outstanding PhD student award by the

12
00:00:33,769 --> 00:00:39,589
Center for embedded systems for critical

13
00:00:36,469 --> 00:00:41,960
applications at Virginia Tech he also

14
00:00:39,589 --> 00:00:44,260
had a short stint as a project assistant

15
00:00:41,960 --> 00:00:46,309
in the department of electrical

16
00:00:44,260 --> 00:00:49,699
communication engineering at Indian

17
00:00:46,309 --> 00:00:52,099
Institute of Science in 2010 his

18
00:00:49,699 --> 00:00:54,289
research interests include discovering

19
00:00:52,100 --> 00:00:57,109
and mitigating security vulnerabilities

20
00:00:54,289 --> 00:00:59,809
in the communication protocols employed

21
00:00:57,109 --> 00:01:02,239
in cyber-physical systems including

22
00:00:59,809 --> 00:01:06,140
smart home smart transportation and a

23
00:01:02,239 --> 00:01:08,270
smart city brushless research has

24
00:01:06,140 --> 00:01:11,689
featured in top-tier secured venues

25
00:01:08,270 --> 00:01:14,449
including ACM conferences on computer

26
00:01:11,689 --> 00:01:15,740
and communication security CCS and I

27
00:01:14,450 --> 00:01:18,860
Tripoli transactions on information

28
00:01:15,740 --> 00:01:22,009
forensics and security tips he also

29
00:01:18,860 --> 00:01:23,930
served on the tpc a flagship conferences

30
00:01:22,009 --> 00:01:26,750
including I Triple E conferences on

31
00:01:23,930 --> 00:01:28,579
communications and network security CNS

32
00:01:26,750 --> 00:01:32,000
and I Triple E international symposium

33
00:01:28,579 --> 00:01:34,250
on dynamic spectrum access network dai

34
00:01:32,000 --> 00:01:38,140
span so we'd further without further a

35
00:01:34,250 --> 00:01:38,140
do let's welcome dr. Coleman

36
00:01:39,729 --> 00:01:48,710
yeah thank you for the very nice and

37
00:01:42,530 --> 00:01:52,990
very long introduction yeah yeah so I am

38
00:01:48,710 --> 00:01:56,089
very glad to be here and let's look into

39
00:01:52,990 --> 00:01:59,000
some of the security issues that we

40
00:01:56,090 --> 00:02:00,409
encounter in current vehicles and that

41
00:01:59,000 --> 00:02:05,030
we are going to encounter in

42
00:02:00,409 --> 00:02:07,219
next-generation vehicles as well so what

43
00:02:05,030 --> 00:02:09,649
is I guess so let me first start with a

44
00:02:07,219 --> 00:02:12,049
question so what is the first thing that

45
00:02:09,649 --> 00:02:15,500
comes to your mind when you think of an

46
00:02:12,049 --> 00:02:17,390
autonomous vehicle so can somebody just

47
00:02:15,500 --> 00:02:19,250
tell me what is the first thing and

48
00:02:17,390 --> 00:02:24,230
please feel free to stop me in between

49
00:02:19,250 --> 00:02:30,530
and then ask questions safety okay

50
00:02:24,230 --> 00:02:33,290
that's very nice yeah that is very nice

51
00:02:30,530 --> 00:02:35,989
as well yeah so yes so those are the

52
00:02:33,290 --> 00:02:38,390
things that come to your mind

53
00:02:35,989 --> 00:02:41,840
when you first hear about an autonomous

54
00:02:38,390 --> 00:02:43,608
vehicle so the few of the things that I

55
00:02:41,840 --> 00:02:45,500
would like to firmly put some of the

56
00:02:43,609 --> 00:02:48,290
advantages of these connected autonomous

57
00:02:45,500 --> 00:02:51,380
vehicles are driverless travel traffic

58
00:02:48,290 --> 00:02:54,709
management and minimizing accidents so

59
00:02:51,380 --> 00:02:59,150
these are the numbers from India so into

60
00:02:54,709 --> 00:03:01,010
four cities in India if you go outside

61
00:02:59,150 --> 00:03:03,049
with your car you will spend around

62
00:03:01,010 --> 00:03:05,660
forty five minutes driving from your

63
00:03:03,049 --> 00:03:07,310
home to your office location and also

64
00:03:05,660 --> 00:03:09,470
you will spend another thirty minutes in

65
00:03:07,310 --> 00:03:12,440
traffic jams but the most important

66
00:03:09,470 --> 00:03:14,720
number here is the number of accidents

67
00:03:12,440 --> 00:03:18,500
and the number of deaths that happen so

68
00:03:14,720 --> 00:03:20,750
in India more than 100,000 deaths occur

69
00:03:18,500 --> 00:03:23,660
every year which translates to 275

70
00:03:20,750 --> 00:03:27,019
deaths per day so it is very important

71
00:03:23,660 --> 00:03:31,760
that we develop a smart transportation

72
00:03:27,019 --> 00:03:35,690
system which takes care of the faults

73
00:03:31,760 --> 00:03:38,780
that drivers make on the road okay so

74
00:03:35,690 --> 00:03:40,910
the idea of connected and autonomous

75
00:03:38,780 --> 00:03:43,790
vehicles has two components so the first

76
00:03:40,910 --> 00:03:46,040
component is the autonomous component so

77
00:03:43,790 --> 00:03:48,918
the autonomous component means that the

78
00:03:46,040 --> 00:03:51,918
onboard sensors on a vehicle for

79
00:03:48,919 --> 00:03:52,550
instance the cameras the leaders they

80
00:03:51,919 --> 00:03:55,370
make

81
00:03:52,550 --> 00:03:57,860
decisions by sensing their environment

82
00:03:55,370 --> 00:04:01,520
so the autonomous component is just an

83
00:03:57,860 --> 00:04:03,170
in vehicle error component where you

84
00:04:01,520 --> 00:04:06,020
have these nodes which are called

85
00:04:03,170 --> 00:04:07,850
electronic control units which control

86
00:04:06,020 --> 00:04:11,480
each of the components of your vehicle

87
00:04:07,850 --> 00:04:13,760
so one electronic component controls the

88
00:04:11,480 --> 00:04:16,219
brake when another electronic component

89
00:04:13,760 --> 00:04:18,620
controls your steering and similarly

90
00:04:16,220 --> 00:04:22,250
there are around hundreds of electronic

91
00:04:18,620 --> 00:04:24,770
control units in your car these days but

92
00:04:22,250 --> 00:04:27,380
all these electronic control units

93
00:04:24,770 --> 00:04:30,799
communicate over this network which is

94
00:04:27,380 --> 00:04:32,630
called controller area network can so by

95
00:04:30,800 --> 00:04:34,520
communicating over these they make

96
00:04:32,630 --> 00:04:36,800
intelligent decisions for instance when

97
00:04:34,520 --> 00:04:40,090
you are actually using cruise control

98
00:04:36,800 --> 00:04:44,030
the your engine control unit your

99
00:04:40,090 --> 00:04:45,619
steering your brake your accelerator all

100
00:04:44,030 --> 00:04:47,750
of them are talking to each other and

101
00:04:45,620 --> 00:04:51,770
making intelligent decisions so that is

102
00:04:47,750 --> 00:04:54,590
the part of the autonomous component of

103
00:04:51,770 --> 00:04:56,330
our architecture now let us move to the

104
00:04:54,590 --> 00:04:59,270
second component which is the connected

105
00:04:56,330 --> 00:05:00,820
component now you in order to make in

106
00:04:59,270 --> 00:05:04,849
order to enable a smart transportation

107
00:05:00,820 --> 00:05:06,680
you need to make sure that the vehicles

108
00:05:04,850 --> 00:05:08,290
are talking to each other and the

109
00:05:06,680 --> 00:05:10,070
vehicles are also talking to

110
00:05:08,290 --> 00:05:12,440
infrastructure which it may include

111
00:05:10,070 --> 00:05:15,740
traffic lights or other types of

112
00:05:12,440 --> 00:05:18,230
infrastructure so when these vehicles

113
00:05:15,740 --> 00:05:20,300
talk to each other they could make

114
00:05:18,230 --> 00:05:23,419
intelligent decisions in such a way so

115
00:05:20,300 --> 00:05:25,970
for instance when you are using just a

116
00:05:23,419 --> 00:05:28,880
camera the camera will have to detect

117
00:05:25,970 --> 00:05:31,130
that the vehicle in front of you has is

118
00:05:28,880 --> 00:05:34,370
slowing down and then the camera could

119
00:05:31,130 --> 00:05:37,040
instruct the vehicle to make to enable

120
00:05:34,370 --> 00:05:39,470
braking and then the the vehicle which

121
00:05:37,040 --> 00:05:42,440
is behind the actually braking vehicle

122
00:05:39,470 --> 00:05:43,640
will be able to stop itself but when you

123
00:05:42,440 --> 00:05:46,310
have this vehicle to vehicle

124
00:05:43,640 --> 00:05:49,430
communication the first vehicle even

125
00:05:46,310 --> 00:05:51,919
before going even before it is going to

126
00:05:49,430 --> 00:05:53,540
brake it can tell this the vehicle which

127
00:05:51,919 --> 00:05:55,760
is behind it that it is going to brake

128
00:05:53,540 --> 00:05:57,890
and then the second vehicle could also

129
00:05:55,760 --> 00:06:00,669
start braking so it is it will be a very

130
00:05:57,890 --> 00:06:04,310
nice our way to have this connected

131
00:06:00,669 --> 00:06:06,320
vehicle idea as well so now the nodes in

132
00:06:04,310 --> 00:06:09,200
this connected vehicles idea

133
00:06:06,320 --> 00:06:12,320
called onboard telematics units OB user

134
00:06:09,200 --> 00:06:14,420
and the protocol that they utilize to

135
00:06:12,320 --> 00:06:16,360
communicate among themselves is called

136
00:06:14,420 --> 00:06:19,820
vehicle to everything v2x

137
00:06:16,360 --> 00:06:22,640
communication protocol okay so when we

138
00:06:19,820 --> 00:06:25,670
look into the whole model of a connected

139
00:06:22,640 --> 00:06:28,700
autonomous vehicle you can think of it

140
00:06:25,670 --> 00:06:31,130
as an OB u which has these two modems

141
00:06:28,700 --> 00:06:33,680
one is called a v2x modem which is

142
00:06:31,130 --> 00:06:36,680
required for connection over a wireless

143
00:06:33,680 --> 00:06:38,600
network and the different vehicles

144
00:06:36,680 --> 00:06:41,360
talk to each other through this v2x

145
00:06:38,600 --> 00:06:42,980
modem and then the OB U is also

146
00:06:41,360 --> 00:06:45,020
connected to the inn via cooler network

147
00:06:42,980 --> 00:06:47,090
through this kin modem which is the

148
00:06:45,020 --> 00:06:52,280
controller area network modem and then

149
00:06:47,090 --> 00:06:54,169
this can bus is actually a via dub it is

150
00:06:52,280 --> 00:06:57,109
a wired protocol these issues are

151
00:06:54,170 --> 00:06:59,150
following this wired protocol to

152
00:06:57,110 --> 00:07:00,410
communicate among themselves and as I

153
00:06:59,150 --> 00:07:03,289
said there could be a large number of

154
00:07:00,410 --> 00:07:05,990
issues which include body see you or

155
00:07:03,290 --> 00:07:08,830
which controls the doors and other stuff

156
00:07:05,990 --> 00:07:12,320
and you could also have brake or engine

157
00:07:08,830 --> 00:07:15,320
now once we have this vehicle model now

158
00:07:12,320 --> 00:07:18,050
what could go wrong here so it is very

159
00:07:15,320 --> 00:07:20,750
nice to think about the security threats

160
00:07:18,050 --> 00:07:23,140
that we could have in any system but it

161
00:07:20,750 --> 00:07:26,420
is particularly important to think about

162
00:07:23,140 --> 00:07:29,930
these kind of things for us very safety

163
00:07:26,420 --> 00:07:34,270
critical system like a vehicle now most

164
00:07:29,930 --> 00:07:37,850
of researchers here who are looking for

165
00:07:34,270 --> 00:07:40,789
the look look into these are standard

166
00:07:37,850 --> 00:07:42,650
protocols which could be a cellular

167
00:07:40,790 --> 00:07:44,750
protocol or which could be a Bluetooth

168
00:07:42,650 --> 00:07:47,210
protocol and then we also have to look

169
00:07:44,750 --> 00:07:48,920
into this new generation v2x protocol

170
00:07:47,210 --> 00:07:51,770
which will be which will enable this

171
00:07:48,920 --> 00:07:55,100
vehicle to vehicle communication now

172
00:07:51,770 --> 00:07:56,840
when these vehicles were designed they

173
00:07:55,100 --> 00:07:58,190
were never designed to be connected to

174
00:07:56,840 --> 00:08:01,539
the outside world through these

175
00:07:58,190 --> 00:08:04,520
communication protocols because the

176
00:08:01,540 --> 00:08:06,260
controller area network or the idea of

177
00:08:04,520 --> 00:08:08,419
having electronic control units to

178
00:08:06,260 --> 00:08:11,420
control each individual unit in a

179
00:08:08,420 --> 00:08:14,180
vehicle it came around 1990s when there

180
00:08:11,420 --> 00:08:16,880
was no concept that you could you should

181
00:08:14,180 --> 00:08:19,570
be able to use your mobile phone to open

182
00:08:16,880 --> 00:08:21,790
or to lock or unlock your door or

183
00:08:19,570 --> 00:08:24,280
start your engine these concepts were

184
00:08:21,790 --> 00:08:26,830
not there and therefore in the design

185
00:08:24,280 --> 00:08:29,799
phase of these vehicles the the security

186
00:08:26,830 --> 00:08:32,949
was never considered and then also they

187
00:08:29,800 --> 00:08:35,830
there are these resource constraints

188
00:08:32,950 --> 00:08:38,800
which come come because of these price

189
00:08:35,830 --> 00:08:41,950
issues so these because each vehicle

190
00:08:38,799 --> 00:08:43,689
contains hundreds of units the price of

191
00:08:41,950 --> 00:08:45,940
it is very important for the vehicle

192
00:08:43,690 --> 00:08:48,640
manufacturers to keep the price of each

193
00:08:45,940 --> 00:08:51,550
unit very low and therefore the units

194
00:08:48,640 --> 00:08:53,650
which are actually employed there have

195
00:08:51,550 --> 00:08:57,640
resource constraints in terms of energy

196
00:08:53,650 --> 00:08:59,890
and in terms of the bandwidth that they

197
00:08:57,640 --> 00:09:05,380
utilize to communicate with other is

198
00:08:59,890 --> 00:09:08,949
useful ok but now we know that it is

199
00:09:05,380 --> 00:09:12,220
possible to have bugs in these

200
00:09:08,950 --> 00:09:14,020
communication protocols and once an

201
00:09:12,220 --> 00:09:16,660
attacker finds a bug in these

202
00:09:14,020 --> 00:09:19,270
communication protocols it can find a

203
00:09:16,660 --> 00:09:22,089
foothold inside the vehicle or network

204
00:09:19,270 --> 00:09:24,430
and once it finds the foothold inside

205
00:09:22,090 --> 00:09:26,530
the vehicle Network it can take complete

206
00:09:24,430 --> 00:09:29,739
control of the vehicle because as I said

207
00:09:26,530 --> 00:09:32,020
there is no security that is built in

208
00:09:29,740 --> 00:09:33,550
inside the vehicle the messages that are

209
00:09:32,020 --> 00:09:36,730
being communicated they are communicated

210
00:09:33,550 --> 00:09:39,339
in plaintext and therefore when the

211
00:09:36,730 --> 00:09:41,590
attacker takes just that foothold it

212
00:09:39,340 --> 00:09:43,540
will it will be able to control your

213
00:09:41,590 --> 00:09:46,240
brakes it will be able to control your

214
00:09:43,540 --> 00:09:49,329
steering wheel and it can do many other

215
00:09:46,240 --> 00:09:53,320
things very very interesting things to

216
00:09:49,330 --> 00:09:55,690
your vehicle now it is not that there is

217
00:09:53,320 --> 00:09:58,240
only one particular manufacturer which

218
00:09:55,690 --> 00:09:59,860
could be affected by these bugs so

219
00:09:58,240 --> 00:10:02,830
researchers have found a large variety

220
00:09:59,860 --> 00:10:05,920
of bugs in all different top

221
00:10:02,830 --> 00:10:10,660
manufacturers of vehicles which include

222
00:10:05,920 --> 00:10:12,790
Tesla as well and so in order to just

223
00:10:10,660 --> 00:10:14,890
illustrate what can happen when somebody

224
00:10:12,790 --> 00:10:18,699
gets into your vehicle I would like to

225
00:10:14,890 --> 00:10:20,890
show this quick video in which the

226
00:10:18,700 --> 00:10:26,950
attackers are able to do very

227
00:10:20,890 --> 00:10:29,080
interesting things so here you see the

228
00:10:26,950 --> 00:10:33,699
attacker controlling the steering wheel

229
00:10:29,080 --> 00:10:38,579
of a vehicle the door lock and

230
00:10:33,699 --> 00:10:38,579
or feature the rpm meters the brakes

231
00:10:38,759 --> 00:10:43,899
yeah so it can actually do many

232
00:10:41,649 --> 00:10:48,309
interesting things and what the way they

233
00:10:43,899 --> 00:10:51,160
do did it was the that they found a bug

234
00:10:48,309 --> 00:10:53,049
in the entertainment system that was

235
00:10:51,160 --> 00:10:55,449
installed on the vehicle that

236
00:10:53,049 --> 00:10:58,779
entertainment system utilized a cellular

237
00:10:55,449 --> 00:11:01,719
connection and therefore the attackers

238
00:10:58,779 --> 00:11:05,739
were able to get into the vehicle

239
00:11:01,720 --> 00:11:08,230
wirelessly so they exploited the bug in

240
00:11:05,739 --> 00:11:11,129
the entertainment system to ensure that

241
00:11:08,230 --> 00:11:16,109
they have full control of the vehicle

242
00:11:11,129 --> 00:11:19,209
now because of this vulnerability in

243
00:11:16,109 --> 00:11:21,910
2003 which was shown in 2015 Jeep had to

244
00:11:19,209 --> 00:11:24,069
recall 1.4 million cars and do this

245
00:11:21,910 --> 00:11:26,319
security patch for their entertainment

246
00:11:24,069 --> 00:11:30,419
system so that these this security

247
00:11:26,319 --> 00:11:33,759
vulnerability could be mitigated now

248
00:11:30,419 --> 00:11:37,149
some of the researchers in IBM they

249
00:11:33,759 --> 00:11:39,100
actually went ahead and analyzed what

250
00:11:37,149 --> 00:11:42,759
could be an impact of these kind of

251
00:11:39,100 --> 00:11:45,369
security bugs so they found that if if

252
00:11:42,759 --> 00:11:48,100
these type of bugs were not mitigated

253
00:11:45,369 --> 00:11:49,989
during the design phase and they and the

254
00:11:48,100 --> 00:11:52,660
manufacturer would have to recall all

255
00:11:49,989 --> 00:11:54,970
these vehicles and then mitigate them it

256
00:11:52,660 --> 00:11:57,819
costs the vehicle manufacturer a

257
00:11:54,970 --> 00:11:59,649
thousand takes more to do that and

258
00:11:57,819 --> 00:12:02,738
therefore it is very important that we

259
00:11:59,649 --> 00:12:04,389
develop these security mechanisms which

260
00:12:02,739 --> 00:12:05,980
prevent all these different types of

261
00:12:04,389 --> 00:12:09,579
attacks during the design phase of the

262
00:12:05,980 --> 00:12:12,459
vehicle ok so now let me talk let me go

263
00:12:09,579 --> 00:12:14,919
into the technical detail of my talk so

264
00:12:12,459 --> 00:12:16,449
I will go into two so we just looked

265
00:12:14,919 --> 00:12:19,569
into the two components of this

266
00:12:16,449 --> 00:12:20,858
connected and autonomous vehicle idea so

267
00:12:19,569 --> 00:12:23,079
I will go into these two different

268
00:12:20,859 --> 00:12:27,029
aspects and talk about the different

269
00:12:23,079 --> 00:12:30,488
attacks and possible defenses in those

270
00:12:27,029 --> 00:12:31,449
components so looking into the first

271
00:12:30,489 --> 00:12:34,179
component which is the autonomous

272
00:12:31,449 --> 00:12:36,939
component we will look into an

273
00:12:34,179 --> 00:12:39,579
impersonation attack and in this

274
00:12:36,939 --> 00:12:41,679
impersonation attack we assume that the

275
00:12:39,579 --> 00:12:43,988
attacker has already gotten foothold

276
00:12:41,679 --> 00:12:46,360
into the vehicular network which means

277
00:12:43,989 --> 00:12:47,379
that perhaps the OBU is already

278
00:12:46,360 --> 00:12:50,410
compromised

279
00:12:47,379 --> 00:12:53,609
and now we will see what this OBU the

280
00:12:50,410 --> 00:12:57,759
compromised puke can actually achieve

281
00:12:53,609 --> 00:13:00,369
okay so as we already said that this in

282
00:12:57,759 --> 00:13:01,809
regular Network does not employ any kind

283
00:13:00,369 --> 00:13:04,179
of security which means that it does not

284
00:13:01,809 --> 00:13:08,379
employ any encryption or authentication

285
00:13:04,179 --> 00:13:09,789
mechanism now so what would be the

286
00:13:08,379 --> 00:13:12,699
solution so the researchers have

287
00:13:09,789 --> 00:13:15,489
proposed that how about we install an

288
00:13:12,699 --> 00:13:17,769
intrusion detection system on the bus

289
00:13:15,489 --> 00:13:21,099
which detects these different types of

290
00:13:17,769 --> 00:13:23,859
anomalies which can occur because an

291
00:13:21,099 --> 00:13:27,159
attacker has started launches launching

292
00:13:23,859 --> 00:13:29,109
some attack on the vehicle so the ideas

293
00:13:27,159 --> 00:13:31,839
will try to detect these anomalies and

294
00:13:29,109 --> 00:13:35,709
raise an alarm okay

295
00:13:31,839 --> 00:13:37,659
but yeah so you might realize that these

296
00:13:35,709 --> 00:13:39,309
ideas are never perfect

297
00:13:37,659 --> 00:13:44,019
so you have you always have this

298
00:13:39,309 --> 00:13:45,789
cat-and-mouse game so the first attacks

299
00:13:44,019 --> 00:13:48,159
that were proposed where message

300
00:13:45,789 --> 00:13:50,739
impersonation attacks on the canvas and

301
00:13:48,159 --> 00:13:52,989
then people came up with these anomalies

302
00:13:50,739 --> 00:13:56,679
that can occur in messages and detect

303
00:13:52,989 --> 00:13:59,979
those anomalies to come up with an alarm

304
00:13:56,679 --> 00:14:04,419
system then this race continued and

305
00:13:59,979 --> 00:14:05,679
currently we are at this stage where the

306
00:14:04,419 --> 00:14:08,439
state of the art intrusion detection

307
00:14:05,679 --> 00:14:12,879
system utilizes this voltage based

308
00:14:08,439 --> 00:14:14,769
fingerprinting technique now let's see

309
00:14:12,879 --> 00:14:17,019
what are these voltage fingerprinting

310
00:14:14,769 --> 00:14:20,679
based the integer notation system so in

311
00:14:17,019 --> 00:14:26,379
if you see an ECU the architecture of an

312
00:14:20,679 --> 00:14:29,709
ECU you will see that when the ECU wants

313
00:14:26,379 --> 00:14:32,709
to send something on the bus there is a

314
00:14:29,709 --> 00:14:35,679
very simple mechanism to do it so when

315
00:14:32,709 --> 00:14:40,539
the issue wants to send a bit one on the

316
00:14:35,679 --> 00:14:43,329
bus it sends a volt zero on the bus and

317
00:14:40,539 --> 00:14:46,749
when it wants to send a bit zero on the

318
00:14:43,329 --> 00:14:48,309
bus it will send a value of voltage to

319
00:14:46,749 --> 00:14:53,470
be 2 volts

320
00:14:48,309 --> 00:14:56,738
now since this mechanism is implemented

321
00:14:53,470 --> 00:14:59,709
in hardware and hardware is actually a

322
00:14:56,739 --> 00:15:01,210
set of transistors and resistors these

323
00:14:59,709 --> 00:15:03,819
things are never perfect so

324
00:15:01,210 --> 00:15:06,760
in inducing such voltages that never

325
00:15:03,820 --> 00:15:10,240
perfect so on the bus you will see these

326
00:15:06,760 --> 00:15:13,120
different fluctuations in the real value

327
00:15:10,240 --> 00:15:17,190
of the voltages so what the researchers

328
00:15:13,120 --> 00:15:21,730
did was they actually found that these

329
00:15:17,190 --> 00:15:24,520
voltages have a distribution and if we

330
00:15:21,730 --> 00:15:27,340
extract significant number of features

331
00:15:24,520 --> 00:15:30,160
from these distributions it is possible

332
00:15:27,340 --> 00:15:34,570
to differentiate between the senders so

333
00:15:30,160 --> 00:15:36,370
if an engine control unit is sending a

334
00:15:34,570 --> 00:15:38,470
message it will have a particular

335
00:15:36,370 --> 00:15:41,050
distribution of voltage values if the

336
00:15:38,470 --> 00:15:42,430
brake control unit is sending a message

337
00:15:41,050 --> 00:15:46,000
it will have a different distribution

338
00:15:42,430 --> 00:15:48,609
and therefore the proposed mechanism was

339
00:15:46,000 --> 00:15:52,270
to train a machine learning algorithm

340
00:15:48,610 --> 00:15:55,630
with these features and then at the when

341
00:15:52,270 --> 00:15:57,520
it in the operation phase when somebody

342
00:15:55,630 --> 00:15:59,680
sends a message you match the

343
00:15:57,520 --> 00:16:01,870
fingerprint of that message to the

344
00:15:59,680 --> 00:16:06,670
learned fingerprint and if they do not

345
00:16:01,870 --> 00:16:10,480
match you raise an alarm but there is an

346
00:16:06,670 --> 00:16:10,930
issue here so these voltage fingerprint

347
00:16:10,480 --> 00:16:13,210
based

348
00:16:10,930 --> 00:16:15,939
IDs they require regular training

349
00:16:13,210 --> 00:16:19,090
because the voltage fingerprint can

350
00:16:15,940 --> 00:16:20,860
change with temperature because when you

351
00:16:19,090 --> 00:16:24,250
have these resistors and these

352
00:16:20,860 --> 00:16:26,170
transistors working they actually change

353
00:16:24,250 --> 00:16:29,410
their behavior at different temperatures

354
00:16:26,170 --> 00:16:31,719
and then that behavior also changes over

355
00:16:29,410 --> 00:16:35,079
time so when they get old their behavior

356
00:16:31,720 --> 00:16:36,790
changes therefore this irregular

357
00:16:35,080 --> 00:16:42,100
retraining is required in these widths

358
00:16:36,790 --> 00:16:45,579
okay so now let's see how these widsom

359
00:16:42,100 --> 00:16:49,060
these defense were evaluated in the

360
00:16:45,580 --> 00:16:50,950
priority so in the prior art what they

361
00:16:49,060 --> 00:16:54,400
were doing when they were proposing

362
00:16:50,950 --> 00:16:56,680
these with defense mechanisms that they

363
00:16:54,400 --> 00:16:58,780
considered a victim so let us say the

364
00:16:56,680 --> 00:17:01,180
engine control unit is a victim here and

365
00:16:58,780 --> 00:17:03,640
then they said that okay we will have a

366
00:17:01,180 --> 00:17:06,819
whit's defense there and then they

367
00:17:03,640 --> 00:17:08,859
considered one attacker so in this case

368
00:17:06,819 --> 00:17:11,589
let us say the telematics control unit

369
00:17:08,859 --> 00:17:14,589
is an attacker and now the what the

370
00:17:11,589 --> 00:17:17,799
attacker could do was there are

371
00:17:14,589 --> 00:17:20,230
I could only heat itself or cool itself

372
00:17:17,799 --> 00:17:23,639
to change its voltage characteristics

373
00:17:20,230 --> 00:17:26,020
because the voltage characteristics are

374
00:17:23,640 --> 00:17:28,299
generated by the hardware of the vehicle

375
00:17:26,020 --> 00:17:30,429
so even if you are have compromised an

376
00:17:28,299 --> 00:17:33,340
attacker you cannot compromise its

377
00:17:30,429 --> 00:17:35,860
hardware and therefore the voltage

378
00:17:33,340 --> 00:17:37,720
fingerprint cannot be changed but the

379
00:17:35,860 --> 00:17:38,889
attacker could just only try to heat or

380
00:17:37,720 --> 00:17:41,559
cool itself to change the voltage

381
00:17:38,890 --> 00:17:42,820
behavior but you see that the defense is

382
00:17:41,559 --> 00:17:45,610
actually using a machine learning

383
00:17:42,820 --> 00:17:48,730
algorithm and there is an asymmetry here

384
00:17:45,610 --> 00:17:50,860
so the defense is using the machine

385
00:17:48,730 --> 00:17:55,360
learning algorithm but the attacker is

386
00:17:50,860 --> 00:17:58,689
very naive here so therefore we saw an

387
00:17:55,360 --> 00:18:00,610
opportunity to ensure that we can come

388
00:17:58,690 --> 00:18:02,919
up with a better attack that has been

389
00:18:00,610 --> 00:18:05,020
proposed in the prior literature so

390
00:18:02,919 --> 00:18:07,409
therefore we came up with this attack

391
00:18:05,020 --> 00:18:10,779
which we call do it

392
00:18:07,409 --> 00:18:14,260
so this attack requires two compromised

393
00:18:10,779 --> 00:18:16,360
ECU's so we have hundreds of ECU's in a

394
00:18:14,260 --> 00:18:18,669
vehicle so we considered that let's have

395
00:18:16,360 --> 00:18:21,279
to compromise this use so one could be

396
00:18:18,669 --> 00:18:22,630
the telematics control unit which has

397
00:18:21,279 --> 00:18:25,600
this cellular connection to the outside

398
00:18:22,630 --> 00:18:27,340
world and the other could be the VC I am

399
00:18:25,600 --> 00:18:30,580
the vehicle communication interface

400
00:18:27,340 --> 00:18:32,889
module through which you use your mobile

401
00:18:30,580 --> 00:18:34,449
and you connect using the Bluetooth so

402
00:18:32,890 --> 00:18:37,690
the Bluetooth is actually controlled by

403
00:18:34,450 --> 00:18:40,390
this VC I M so let's have these two

404
00:18:37,690 --> 00:18:43,450
compromised ECU's in our attack model

405
00:18:40,390 --> 00:18:46,480
and then these two compromised ECU's

406
00:18:43,450 --> 00:18:48,880
they would employ an adversarial machine

407
00:18:46,480 --> 00:18:51,730
learning technique to actually counter

408
00:18:48,880 --> 00:18:55,330
the machine learning based intrusion

409
00:18:51,730 --> 00:18:57,190
detection system so the specific machine

410
00:18:55,330 --> 00:18:59,799
the adversarial machine learning

411
00:18:57,190 --> 00:19:02,110
technique that we utilized is called a

412
00:18:59,799 --> 00:19:02,918
training set poisoning and let's see how

413
00:19:02,110 --> 00:19:07,059
that works

414
00:19:02,919 --> 00:19:10,390
so this is again revisiting the same

415
00:19:07,059 --> 00:19:13,000
concept that different ECU's will have

416
00:19:10,390 --> 00:19:14,740
different voltage characteristics and

417
00:19:13,000 --> 00:19:17,710
they will have different voltage

418
00:19:14,740 --> 00:19:20,200
distributions so here I have enumerated

419
00:19:17,710 --> 00:19:23,049
them the three is used as victim

420
00:19:20,200 --> 00:19:25,960
attacker and accomplice so now in this

421
00:19:23,049 --> 00:19:28,440
case if the attacker wants to

422
00:19:25,960 --> 00:19:30,490
impersonate the victim

423
00:19:28,440 --> 00:19:33,279
because their distributions are

424
00:19:30,490 --> 00:19:36,340
different the widths will detect that

425
00:19:33,279 --> 00:19:39,850
impersonation attempt but now what we

426
00:19:36,340 --> 00:19:42,158
will do is we will try to bypass the

427
00:19:39,850 --> 00:19:46,090
widths but here one important thing to

428
00:19:42,159 --> 00:19:48,250
note here is that these all three of

429
00:19:46,090 --> 00:19:50,850
them have this unimodal Gaussian

430
00:19:48,250 --> 00:19:55,240
distribution which means that they have

431
00:19:50,850 --> 00:19:56,860
some variance around just one knee the

432
00:19:55,240 --> 00:20:00,940
voltage values have some variance around

433
00:19:56,860 --> 00:20:04,149
that one mean okay so what we will do in

434
00:20:00,940 --> 00:20:08,250
the training phase of the Wits is that

435
00:20:04,149 --> 00:20:10,809
now the attacker will start transmitting

436
00:20:08,250 --> 00:20:13,360
simultaneously with the victim and it

437
00:20:10,809 --> 00:20:15,158
will corrupt some of the voltage samples

438
00:20:13,360 --> 00:20:18,600
that are being transmitted by the victim

439
00:20:15,159 --> 00:20:21,100
so when it actually corrupts some of the

440
00:20:18,600 --> 00:20:23,049
samples that are being corrupted by that

441
00:20:21,100 --> 00:20:25,500
are being transmitted by the victim it

442
00:20:23,049 --> 00:20:28,269
will lead to a bimodal distribution

443
00:20:25,500 --> 00:20:31,840
which means that now you there are two

444
00:20:28,269 --> 00:20:34,210
means one is corresponding to the benign

445
00:20:31,840 --> 00:20:36,309
samples and the other one is the

446
00:20:34,210 --> 00:20:38,350
superimposed samples which are called

447
00:20:36,309 --> 00:20:40,149
corrupted samples here so since the

448
00:20:38,350 --> 00:20:41,769
superimposed samples will have a higher

449
00:20:40,149 --> 00:20:44,469
voltage values because of the

450
00:20:41,769 --> 00:20:46,450
superposition you will see a bimodal

451
00:20:44,470 --> 00:20:48,820
distribution when you see the voltage

452
00:20:46,450 --> 00:20:51,370
characteristics of the victim now in the

453
00:20:48,820 --> 00:20:54,820
training phase the width is now learning

454
00:20:51,370 --> 00:20:57,699
from this bimodal distribution okay so

455
00:20:54,820 --> 00:20:59,710
what is the next step then so now in the

456
00:20:57,700 --> 00:21:03,450
test phase which is the operation phase

457
00:20:59,710 --> 00:21:06,070
of the width what we will do is now the

458
00:21:03,450 --> 00:21:08,769
accomplice and the attacker did start

459
00:21:06,070 --> 00:21:12,250
transmitting together so the message

460
00:21:08,769 --> 00:21:14,760
that is being forged it now contains the

461
00:21:12,250 --> 00:21:17,350
finger fingerprint or the voltage

462
00:21:14,760 --> 00:21:20,230
samples corresponding to this attacker

463
00:21:17,350 --> 00:21:21,250
plus accomplished now again you see that

464
00:21:20,230 --> 00:21:23,139
because there are two issues

465
00:21:21,250 --> 00:21:25,240
transmitting together and they are

466
00:21:23,139 --> 00:21:27,449
superimposing their voltage samples you

467
00:21:25,240 --> 00:21:32,080
will again see a bimodal distribution

468
00:21:27,450 --> 00:21:34,419
which means that so in the training

469
00:21:32,080 --> 00:21:36,820
phase we have tricked the Wits to

470
00:21:34,419 --> 00:21:39,520
consider any bimodal distribution as the

471
00:21:36,820 --> 00:21:41,590
victim and therefore in the test phase

472
00:21:39,520 --> 00:21:43,750
if it the witzy

473
00:21:41,590 --> 00:21:45,939
a bimodal distribution it will classify

474
00:21:43,750 --> 00:21:48,850
it as coming from the victim and

475
00:21:45,940 --> 00:21:51,309
therefore the accomplice Plus which

476
00:21:48,850 --> 00:21:53,199
attacker is classified as coming from

477
00:21:51,309 --> 00:21:57,279
the victim and therefore we have

478
00:21:53,200 --> 00:22:00,789
successfully bypassed the Wiis detection

479
00:21:57,279 --> 00:22:03,940
mechanism now you will notice that in

480
00:22:00,789 --> 00:22:06,220
order to do this in order to do this

481
00:22:03,940 --> 00:22:09,130
simultaneous transmission there are some

482
00:22:06,220 --> 00:22:11,559
challenges so the first challenge is to

483
00:22:09,130 --> 00:22:13,600
do time synchronization which means that

484
00:22:11,559 --> 00:22:16,178
you the attacker should be able to

485
00:22:13,600 --> 00:22:20,529
transmit at the same time as the victim

486
00:22:16,179 --> 00:22:23,679
and in order to do that what we do is we

487
00:22:20,529 --> 00:22:26,950
track the victims periodic transmission

488
00:22:23,679 --> 00:22:29,140
so the victim the all the ECU's on the

489
00:22:26,950 --> 00:22:31,779
canvas including the victim they

490
00:22:29,140 --> 00:22:34,929
transmit messages periodically on the

491
00:22:31,779 --> 00:22:38,100
bus and therefore if we could carefully

492
00:22:34,929 --> 00:22:40,990
track these messages we will be able to

493
00:22:38,100 --> 00:22:43,928
ensure that the attacker could transmit

494
00:22:40,990 --> 00:22:46,539
simultaneously with the victim and then

495
00:22:43,929 --> 00:22:49,149
the second challenge was to superimpose

496
00:22:46,539 --> 00:22:52,270
some of the voltage samples and for that

497
00:22:49,149 --> 00:22:54,668
you need to guess what would be the

498
00:22:52,270 --> 00:22:57,190
payload in the victims message so here

499
00:22:54,669 --> 00:23:01,029
that we call as payload synchronization

500
00:22:57,190 --> 00:23:04,120
so we notice that on the canvas these

501
00:23:01,029 --> 00:23:06,279
miss the messages on the canvas they

502
00:23:04,120 --> 00:23:07,750
have some counters they have some

503
00:23:06,279 --> 00:23:10,029
multivalued numbers which could be

504
00:23:07,750 --> 00:23:13,210
easily guessed and they also have some

505
00:23:10,029 --> 00:23:16,600
sensor data which do not change for a

506
00:23:13,210 --> 00:23:19,840
very long time so for instance some many

507
00:23:16,600 --> 00:23:23,918
of the things so the status saw of the

508
00:23:19,840 --> 00:23:25,510
gear the status of the door they do not

509
00:23:23,919 --> 00:23:28,899
change for a very long time unless you

510
00:23:25,510 --> 00:23:32,049
make and unless the user or the driver

511
00:23:28,899 --> 00:23:34,299
makes some action on the on those things

512
00:23:32,049 --> 00:23:37,658
so therefore we found that it is able to

513
00:23:34,299 --> 00:23:40,149
predict the payload of the next message

514
00:23:37,659 --> 00:23:42,159
by seeing that current message of the

515
00:23:40,149 --> 00:23:45,520
victim and therefore we were able to do

516
00:23:42,159 --> 00:23:47,169
this payload synchronization as well so

517
00:23:45,520 --> 00:23:48,789
in order to do this payload

518
00:23:47,169 --> 00:23:52,539
synchronization we came up with this

519
00:23:48,789 --> 00:23:54,429
idea of predicting these payloads and we

520
00:23:52,539 --> 00:23:55,270
found that we could do this prediction

521
00:23:54,429 --> 00:23:58,780
with very

522
00:23:55,270 --> 00:24:00,910
high accuracy so in this curve what I am

523
00:23:58,780 --> 00:24:04,570
showing is that so let me just get into

524
00:24:00,910 --> 00:24:07,000
the specific example so this curve shows

525
00:24:04,570 --> 00:24:09,610
the cumulative number of messages in

526
00:24:07,000 --> 00:24:14,260
which you could predict certain number

527
00:24:09,610 --> 00:24:16,449
of whites of from the victims message so

528
00:24:14,260 --> 00:24:19,060
here you could on the y-axis we have the

529
00:24:16,450 --> 00:24:21,220
number of messages and on the x-axis you

530
00:24:19,060 --> 00:24:25,360
have the number of bytes so you could

531
00:24:21,220 --> 00:24:27,850
see that when the total so the byte 0

532
00:24:25,360 --> 00:24:32,590
means the total number of messages that

533
00:24:27,850 --> 00:24:37,419
an ECU transmits so on the so for the

534
00:24:32,590 --> 00:24:40,330
red curve you see that the out of 50

535
00:24:37,420 --> 00:24:43,180
messages which you could see on a

536
00:24:40,330 --> 00:24:45,250
particular vehicle there were 45

537
00:24:43,180 --> 00:24:47,590
messages where we could easily predict

538
00:24:45,250 --> 00:24:50,020
at least first 2 bytes of the data and

539
00:24:47,590 --> 00:24:52,840
therefore an attacker could easily

540
00:24:50,020 --> 00:24:54,700
transmit simultaneously with those first

541
00:24:52,840 --> 00:24:58,679
two bytes and corrupt the voltage

542
00:24:54,700 --> 00:25:02,230
samples of the victim okay

543
00:24:58,680 --> 00:25:05,050
okay so now this is the final result

544
00:25:02,230 --> 00:25:07,780
that we have so we actually conducted

545
00:25:05,050 --> 00:25:10,870
our attack do it on a test bed

546
00:25:07,780 --> 00:25:13,389
consisting of these electronic units

547
00:25:10,870 --> 00:25:16,570
which were emulated using Arduino boards

548
00:25:13,390 --> 00:25:19,510
and then we also conducted attacks on to

549
00:25:16,570 --> 00:25:21,790
real vehicles one was Impala and the

550
00:25:19,510 --> 00:25:23,620
other one was gross and we achieved a

551
00:25:21,790 --> 00:25:26,860
very high success rate which is on the

552
00:25:23,620 --> 00:25:29,379
y-axis on this curve and on the x-axis

553
00:25:26,860 --> 00:25:31,360
we have the length of the predictable

554
00:25:29,380 --> 00:25:34,240
payload prefix so which means that if we

555
00:25:31,360 --> 00:25:36,760
were able to corrupt more samples in the

556
00:25:34,240 --> 00:25:39,940
victims message we were able to achieve

557
00:25:36,760 --> 00:25:41,830
higher attack success rate so if we were

558
00:25:39,940 --> 00:25:44,320
not able to corrupt anything in the

559
00:25:41,830 --> 00:25:47,919
victims message that access rate attack

560
00:25:44,320 --> 00:25:49,960
success was very very low so at max we

561
00:25:47,920 --> 00:25:53,110
were able to achieve at more than 80

562
00:25:49,960 --> 00:25:56,650
percent success rate even in vehicles

563
00:25:53,110 --> 00:25:59,260
and an 80 percent success rate is good

564
00:25:56,650 --> 00:26:02,200
enough for a very for a masker attack on

565
00:25:59,260 --> 00:26:05,920
a cyber physical system ok so now I

566
00:26:02,200 --> 00:26:08,950
would like to present an attack demo or

567
00:26:05,920 --> 00:26:13,210
which we created by a

568
00:26:08,950 --> 00:26:16,950
in a real vehicle so in this attack our

569
00:26:13,210 --> 00:26:21,700
goal is to impersonate the RPM meter

570
00:26:16,950 --> 00:26:23,889
while evading the width so the first

571
00:26:21,700 --> 00:26:26,169
what we did was we did some reverse

572
00:26:23,889 --> 00:26:28,899
engineering to find out what messages

573
00:26:26,169 --> 00:26:30,970
correspond to the engine rpm so here you

574
00:26:28,899 --> 00:26:34,418
see that the engine rpm is 700

575
00:26:30,970 --> 00:26:37,000
evolutions per minute now

576
00:26:34,419 --> 00:26:40,720
these widths algorithms they were

577
00:26:37,000 --> 00:26:42,340
implemented in our laptop and we

578
00:26:40,720 --> 00:26:44,500
collected the voltage samples through

579
00:26:42,340 --> 00:26:46,000
the oscilloscope that you see here so in

580
00:26:44,500 --> 00:26:48,010
the first stage which is the training

581
00:26:46,000 --> 00:26:51,220
stage you see that nothing is changing

582
00:26:48,010 --> 00:26:53,169
we are corrupting the voltage values of

583
00:26:51,220 --> 00:26:55,029
the victim but the width is learning

584
00:26:53,169 --> 00:26:57,340
from those corrupted values and nothing

585
00:26:55,029 --> 00:26:59,980
is you do not see any change here but

586
00:26:57,340 --> 00:27:03,070
now when the next attack phase starts

587
00:26:59,980 --> 00:27:04,360
you see that the RPM raises to 7,000

588
00:27:03,070 --> 00:27:06,879
revolutions per minute

589
00:27:04,360 --> 00:27:09,340
you could never reach that value in

590
00:27:06,880 --> 00:27:11,889
these cars if you are right if you are

591
00:27:09,340 --> 00:27:13,928
driving a Formula One car profitably you

592
00:27:11,889 --> 00:27:15,699
might reach that number but in a real

593
00:27:13,929 --> 00:27:18,940
car you will never do that so what we

594
00:27:15,700 --> 00:27:21,070
are doing is we are impersonating the

595
00:27:18,940 --> 00:27:25,210
engine and sending these fake messages

596
00:27:21,070 --> 00:27:27,250
force messages to the this RPM meter and

597
00:27:25,210 --> 00:27:30,179
the RPM meter is accepting those values

598
00:27:27,250 --> 00:27:35,679
and then we notice that tab the width

599
00:27:30,179 --> 00:27:38,830
does not raise any alarm because we were

600
00:27:35,679 --> 00:27:40,779
able to do this successfully able to do

601
00:27:38,830 --> 00:27:44,918
this adversarial machine learning

602
00:27:40,779 --> 00:27:49,450
approach of training set poisoning okay

603
00:27:44,919 --> 00:27:52,419
so that is the end of this first part I

604
00:27:49,450 --> 00:27:57,240
would be happy to take some questions

605
00:27:52,419 --> 00:28:02,289
here yes

606
00:27:57,240 --> 00:28:04,870
remote attack surface I saw that for the

607
00:28:02,289 --> 00:28:10,510
wireless attack it involved targeting

608
00:28:04,870 --> 00:28:14,649
the like the single chip modem like the

609
00:28:10,510 --> 00:28:17,169
road link modems yes would there be a

610
00:28:14,649 --> 00:28:20,620
way to try to mitigate a wireless attack

611
00:28:17,169 --> 00:28:22,500
surface by making that protocol

612
00:28:20,620 --> 00:28:25,110
authenticated

613
00:28:22,500 --> 00:28:28,290
to try to reduce that yeah so definitely

614
00:28:25,110 --> 00:28:30,689
if you enable authentication you should

615
00:28:28,290 --> 00:28:33,570
be able to do you should be able to

616
00:28:30,690 --> 00:28:36,240
reduce the attack surfaces but the

617
00:28:33,570 --> 00:28:37,980
argument here is that you will always

618
00:28:36,240 --> 00:28:39,510
have some bugs in Bluetooth you will

619
00:28:37,980 --> 00:28:43,170
always have some bugs in cellular

620
00:28:39,510 --> 00:28:46,290
protocol we always see researchers

621
00:28:43,170 --> 00:28:48,930
coming up with these bugs and once you

622
00:28:46,290 --> 00:28:50,879
have these bugs no matter what type of

623
00:28:48,930 --> 00:28:54,030
authentication you have in these

624
00:28:50,880 --> 00:29:06,840
vehicles an attacker could always find a

625
00:28:54,030 --> 00:29:09,180
way to get into the vehicle testing

626
00:29:06,840 --> 00:29:13,679
framework so what I want to ask you to

627
00:29:09,180 --> 00:29:15,900
so basically this clear it's pirates so

628
00:29:13,680 --> 00:29:19,320
in the vehicles so typically especially

629
00:29:15,900 --> 00:29:26,820
your target odd vehicle how many issue

630
00:29:19,320 --> 00:29:31,649
there are in so in a Tesla you might see

631
00:29:26,820 --> 00:29:33,480
around 200 so each component of your

632
00:29:31,650 --> 00:29:36,060
vehicle is these days now being

633
00:29:33,480 --> 00:29:39,510
controlled by one electronic control

634
00:29:36,060 --> 00:29:42,840
unit okay in an old vehicle you would

635
00:29:39,510 --> 00:29:45,180
see a dozen electronic control unit so

636
00:29:42,840 --> 00:29:47,459
the vehicle on which we are working it

637
00:29:45,180 --> 00:29:50,640
has around a dozen electronic control

638
00:29:47,460 --> 00:29:53,460
units in the 2011 Impala then probably I

639
00:29:50,640 --> 00:29:55,560
just said so some of those and you see

640
00:29:53,460 --> 00:29:58,380
some of the issue components may have a

641
00:29:55,560 --> 00:30:01,110
some controller logic like a PID

642
00:29:58,380 --> 00:30:04,080
controller whatever how many control

643
00:30:01,110 --> 00:30:07,500
logics are there probably so these are

644
00:30:04,080 --> 00:30:11,899
not very complex electronic units so

645
00:30:07,500 --> 00:30:17,760
they have they have usually one MCU and

646
00:30:11,900 --> 00:30:19,590
then that MCU has one electron the

647
00:30:17,760 --> 00:30:27,000
architecture of that MCU is very very

648
00:30:19,590 --> 00:30:32,280
simple so probably I would say so they

649
00:30:27,000 --> 00:30:34,080
have so one MC you can have multiple

650
00:30:32,280 --> 00:30:36,120
chips

651
00:30:34,080 --> 00:30:38,370
and one of those chips could be a can

652
00:30:36,120 --> 00:30:42,149
controller which enables that ends you

653
00:30:38,370 --> 00:30:48,379
to communicate with this with other MC

654
00:30:42,150 --> 00:30:52,760
used through this can bus so yes I guess

655
00:30:48,380 --> 00:30:56,310
that is the overall architecture of an

656
00:30:52,760 --> 00:30:59,760
electronic control unit that you see in

657
00:30:56,310 --> 00:31:02,220
a vehicle know then just say my question

658
00:30:59,760 --> 00:31:07,410
is uh how many CID contours are there

659
00:31:02,220 --> 00:31:10,680
probably out of that although can was I

660
00:31:07,410 --> 00:31:15,030
would not be able to tell you the exact

661
00:31:10,680 --> 00:31:23,580
number but there should not be many PID

662
00:31:15,030 --> 00:31:26,040
controllers innovator I have a question

663
00:31:23,580 --> 00:31:29,100
so once we find there is a vulnerability

664
00:31:26,040 --> 00:31:32,760
in the ECU so what's the possible

665
00:31:29,100 --> 00:31:35,280
options to fix this or they are totally

666
00:31:32,760 --> 00:31:39,480
cannot be fixed now you can always do a

667
00:31:35,280 --> 00:31:45,300
firmware update so that is what Jeep did

668
00:31:39,480 --> 00:31:47,730
it we call the vehicle so that means we

669
00:31:45,300 --> 00:31:52,649
need to use some devices to connector

670
00:31:47,730 --> 00:31:55,020
that the car and do the update for these

671
00:31:52,650 --> 00:31:58,050
vehicles so now people are coming up

672
00:31:55,020 --> 00:32:00,810
with this idea of over-the-air update so

673
00:31:58,050 --> 00:32:03,330
they could actually update the funder of

674
00:32:00,810 --> 00:32:06,629
an ECU over-the-air so there is not need

675
00:32:03,330 --> 00:32:08,760
to actually recall all the vehicles and

676
00:32:06,630 --> 00:32:18,150
then fix the 1rw

677
00:32:08,760 --> 00:32:21,300
okay thanks okay okay so now that you

678
00:32:18,150 --> 00:32:24,090
know that authentication is very

679
00:32:21,300 --> 00:32:26,760
important before getting access to a

680
00:32:24,090 --> 00:32:29,159
vehicle now let's see an adversarial

681
00:32:26,760 --> 00:32:31,320
model adversity model in which the

682
00:32:29,160 --> 00:32:34,380
attacker is actually trying to get into

683
00:32:31,320 --> 00:32:37,770
the vehicle so the victim is now the

684
00:32:34,380 --> 00:32:41,190
onboard unit and the attacker is trying

685
00:32:37,770 --> 00:32:44,040
to get into this onboard unit so as we

686
00:32:41,190 --> 00:32:47,340
just discussed earlier what we need is

687
00:32:44,040 --> 00:32:47,820
an authentication protocol here which

688
00:32:47,340 --> 00:32:50,509
prevent

689
00:32:47,820 --> 00:32:55,049
this adversary to get into the vehicle

690
00:32:50,509 --> 00:32:57,389
okay so now let us first talk about the

691
00:32:55,049 --> 00:32:59,369
need for these connected vehicles so I

692
00:32:57,389 --> 00:33:02,070
would like to highlight the need for

693
00:32:59,369 --> 00:33:05,100
these connected vehicles through this

694
00:33:02,070 --> 00:33:07,529
video which does not have yes we don't

695
00:33:05,100 --> 00:33:30,809
have a way to hear this but yeah let me

696
00:33:07,529 --> 00:33:32,999
just stop it so no it's fine I could

697
00:33:30,809 --> 00:33:42,389
just tell them it is fine it is alright

698
00:33:32,999 --> 00:33:46,649
yeah no that is fine so this so this in

699
00:33:42,389 --> 00:33:49,139
this tesla vehicle it actually rammed

700
00:33:46,649 --> 00:33:52,320
into a police car which was stopped in

701
00:33:49,139 --> 00:33:55,289
the middle of a road so what happened

702
00:33:52,320 --> 00:33:56,668
was the tesla vehicle did not going at

703
00:33:55,289 --> 00:33:59,879
60 miles per hour

704
00:33:56,669 --> 00:34:02,759
did not expect any vehicle to be stopped

705
00:33:59,879 --> 00:34:06,059
in the middle of a road and when it

706
00:34:02,759 --> 00:34:08,219
actually noticed a vehicle although it

707
00:34:06,059 --> 00:34:09,839
tried to brake but it could not break

708
00:34:08,219 --> 00:34:15,808
and it went directly into that vehicle

709
00:34:09,839 --> 00:34:18,808
and causing an accident so now what what

710
00:34:15,809 --> 00:34:21,750
what was wrong in this scenario the

711
00:34:18,809 --> 00:34:24,540
issue was that these sensors that you

712
00:34:21,750 --> 00:34:27,629
have on a vehicle they have limitations

713
00:34:24,540 --> 00:34:30,690
so for instance the camera could only

714
00:34:27,629 --> 00:34:32,790
see for a particular distance and in fog

715
00:34:30,690 --> 00:34:35,730
probably the camera will not be able to

716
00:34:32,790 --> 00:34:38,040
see anything so these onboard sensors

717
00:34:35,730 --> 00:34:40,319
have limitations and therefore we need

718
00:34:38,040 --> 00:34:43,020
the concept of these connected vehicles

719
00:34:40,319 --> 00:34:45,480
so that these vehicles will talk to each

720
00:34:43,020 --> 00:34:49,259
other over a wireless medium and tell

721
00:34:45,480 --> 00:34:50,730
the status till their status to other

722
00:34:49,260 --> 00:34:53,790
vehicles so for instance in this case

723
00:34:50,730 --> 00:34:56,159
the police car would have broadcasted

724
00:34:53,790 --> 00:34:58,920
its information that it is stopped in

725
00:34:56,159 --> 00:35:00,329
the middle of a road and if this Tesla

726
00:34:58,920 --> 00:35:01,410
vehicle would have received that

727
00:35:00,329 --> 00:35:03,870
information

728
00:35:01,410 --> 00:35:06,060
one kilometer when it was one kilometer

729
00:35:03,870 --> 00:35:10,890
away from the vehicle it would have made

730
00:35:06,060 --> 00:35:13,890
a better choice so now in order to

731
00:35:10,890 --> 00:35:16,650
enable this idea of connected vehicles

732
00:35:13,890 --> 00:35:19,560
the Society of Automotive Engineers ASCE

733
00:35:16,650 --> 00:35:23,430
it has defined a set of basic safety

734
00:35:19,560 --> 00:35:26,340
messages now these basic safety messages

735
00:35:23,430 --> 00:35:30,990
include the broadcasting information

736
00:35:26,340 --> 00:35:33,540
about location speed acceleration in

737
00:35:30,990 --> 00:35:36,060
some cases you also we needed the

738
00:35:33,540 --> 00:35:38,610
vehicle will be needed to broadcast this

739
00:35:36,060 --> 00:35:41,480
forward collision warning intersection

740
00:35:38,610 --> 00:35:44,400
movement Assist so now these so

741
00:35:41,480 --> 00:35:46,650
particularly these location speed and

742
00:35:44,400 --> 00:35:50,610
acceleration messages they are

743
00:35:46,650 --> 00:35:53,640
transmitted periodically over there so

744
00:35:50,610 --> 00:35:58,230
one of the standard value of that period

745
00:35:53,640 --> 00:36:01,830
is 100 milliseconds ok so now let's see

746
00:35:58,230 --> 00:36:05,490
what what properties we need for this

747
00:36:01,830 --> 00:36:08,340
connected vehicles idea to be secure so

748
00:36:05,490 --> 00:36:10,770
the first security property is that we

749
00:36:08,340 --> 00:36:14,130
need to validate those safety messages

750
00:36:10,770 --> 00:36:16,680
so if vehicle is receiving those safety

751
00:36:14,130 --> 00:36:18,780
messages about the location about the

752
00:36:16,680 --> 00:36:20,790
speed of another vehicle it should be

753
00:36:18,780 --> 00:36:22,920
able to authenticate those messages and

754
00:36:20,790 --> 00:36:26,940
therefore authenticity is the criteria

755
00:36:22,920 --> 00:36:27,960
here now we also need to provide privacy

756
00:36:26,940 --> 00:36:29,790
to the sender's

757
00:36:27,960 --> 00:36:31,860
so these senders are actually

758
00:36:29,790 --> 00:36:36,000
broadcasting their private information

759
00:36:31,860 --> 00:36:39,390
about their location over there so it is

760
00:36:36,000 --> 00:36:42,000
very important for any mechanism to

761
00:36:39,390 --> 00:36:44,670
ensure that this private information

762
00:36:42,000 --> 00:36:48,210
about the location cannot be exploited

763
00:36:44,670 --> 00:36:51,270
by an adversary to track the movement of

764
00:36:48,210 --> 00:36:54,060
that driver also the information about

765
00:36:51,270 --> 00:36:56,790
speed and acceleration they could be

766
00:36:54,060 --> 00:36:59,610
utilized to profile or fingerprint a

767
00:36:56,790 --> 00:37:01,710
driver so the driver does it is very

768
00:36:59,610 --> 00:37:06,120
important that we provide this privacy

769
00:37:01,710 --> 00:37:08,910
to the driver and therefore the security

770
00:37:06,120 --> 00:37:12,569
property that we want here is privacy

771
00:37:08,910 --> 00:37:14,770
and then in a regular environment we

772
00:37:12,570 --> 00:37:18,370
also need this

773
00:37:14,770 --> 00:37:20,500
property of revocability because you may

774
00:37:18,370 --> 00:37:22,390
have many vehicles malfunctioning

775
00:37:20,500 --> 00:37:24,520
vehicles and there and you will need

776
00:37:22,390 --> 00:37:26,680
them to not come on the road and

777
00:37:24,520 --> 00:37:29,350
therefore you want to suspend the

778
00:37:26,680 --> 00:37:31,629
license of those vehicles and therefore

779
00:37:29,350 --> 00:37:34,779
we need this third property of revoke

780
00:37:31,630 --> 00:37:37,510
ability but all these the three

781
00:37:34,780 --> 00:37:40,270
components can be provided by this

782
00:37:37,510 --> 00:37:42,670
mechanism called a privacy preserving or

783
00:37:40,270 --> 00:37:45,780
anonymous authentication and one nice

784
00:37:42,670 --> 00:37:48,760
way to do it is called group signatures

785
00:37:45,780 --> 00:37:51,160
so here I would give you a very

786
00:37:48,760 --> 00:37:55,450
high-level overview of group signatures

787
00:37:51,160 --> 00:37:58,690
which was proposed by the researcher at

788
00:37:55,450 --> 00:38:01,149
a Stanford named dr. Dan boney so he is

789
00:37:58,690 --> 00:38:04,090
a cryptographer who has developed many

790
00:38:01,150 --> 00:38:06,970
different types of signature schemes

791
00:38:04,090 --> 00:38:09,160
among them is the group signature scheme

792
00:38:06,970 --> 00:38:12,089
which actually provides privacy

793
00:38:09,160 --> 00:38:15,490
preserving authentication so in this

794
00:38:12,090 --> 00:38:17,920
environment there are three entities the

795
00:38:15,490 --> 00:38:20,080
first is called the group manager and as

796
00:38:17,920 --> 00:38:23,680
the name suggests it is responsible for

797
00:38:20,080 --> 00:38:25,420
generating the group public key now what

798
00:38:23,680 --> 00:38:28,509
is the need for generating this group

799
00:38:25,420 --> 00:38:30,790
public key so that I as the name

800
00:38:28,510 --> 00:38:33,160
suggests the group signatures the

801
00:38:30,790 --> 00:38:36,460
anonymity here is in terms of the group

802
00:38:33,160 --> 00:38:40,450
which means that every sender will

803
00:38:36,460 --> 00:38:42,760
broadcast information saying that I am

804
00:38:40,450 --> 00:38:46,049
part of a particular group and the

805
00:38:42,760 --> 00:38:48,970
receivers will verify that whether this

806
00:38:46,050 --> 00:38:52,360
signer is part of a particular group or

807
00:38:48,970 --> 00:38:55,000
not but the signers will never embed

808
00:38:52,360 --> 00:38:57,670
their own information or their own

809
00:38:55,000 --> 00:39:00,610
identity in the signatures so therefore

810
00:38:57,670 --> 00:39:03,280
the larger the group the signers privacy

811
00:39:00,610 --> 00:39:05,140
will be higher so the very very fire

812
00:39:03,280 --> 00:39:06,790
will not be able to know who is

813
00:39:05,140 --> 00:39:08,770
transmitting it will only be able to

814
00:39:06,790 --> 00:39:11,740
know that someone from the group is

815
00:39:08,770 --> 00:39:14,800
transmitting the message okay so the

816
00:39:11,740 --> 00:39:16,899
group manager task is to generate is to

817
00:39:14,800 --> 00:39:19,570
set up the group by generating the group

818
00:39:16,900 --> 00:39:23,260
public key and then it will also assign

819
00:39:19,570 --> 00:39:25,330
secret keys to these signers then it is

820
00:39:23,260 --> 00:39:28,150
also responsible for publishing a

821
00:39:25,330 --> 00:39:30,788
revocation list which will contain the

822
00:39:28,150 --> 00:39:32,309
information about those whose licenses

823
00:39:30,789 --> 00:39:35,440
has been suspended

824
00:39:32,309 --> 00:39:37,690
now the signers task is very simple it

825
00:39:35,440 --> 00:39:40,630
has to just generate an anonymous

826
00:39:37,690 --> 00:39:43,599
signature of the over the message that

827
00:39:40,630 --> 00:39:45,730
it wants to broadcast and then the

828
00:39:43,599 --> 00:39:49,029
verifiers has verifiers has to do two

829
00:39:45,730 --> 00:39:52,480
things first is to ensure that the

830
00:39:49,029 --> 00:39:54,670
signature is authentic so the message

831
00:39:52,480 --> 00:39:57,640
that it is receiving is authentic is

832
00:39:54,670 --> 00:40:00,220
determined based on the authenticity of

833
00:39:57,640 --> 00:40:03,098
the signature and therefore the verifier

834
00:40:00,220 --> 00:40:05,379
has to verify that and then the second

835
00:40:03,099 --> 00:40:07,359
task that the verifier has to do is to

836
00:40:05,380 --> 00:40:09,789
check the relocation status of the

837
00:40:07,359 --> 00:40:13,660
signer which means that the signer is

838
00:40:09,789 --> 00:40:16,119
not revoked okay now let's look at the

839
00:40:13,660 --> 00:40:20,649
scale of the network that we are

840
00:40:16,119 --> 00:40:23,109
actually considering here so we and the

841
00:40:20,650 --> 00:40:27,700
and the functions that we are employing

842
00:40:23,109 --> 00:40:30,730
in these group signatures so in this

843
00:40:27,700 --> 00:40:33,490
group signature scheme one fundamental

844
00:40:30,730 --> 00:40:36,670
function was called a bilinear map

845
00:40:33,490 --> 00:40:41,470
operation and we ran that operation on

846
00:40:36,670 --> 00:40:43,690
an Intel i7 processor based a computer

847
00:40:41,470 --> 00:40:47,319
and found that it took two milliseconds

848
00:40:43,690 --> 00:40:50,760
to run that by linear operation by

849
00:40:47,319 --> 00:40:56,170
linear map operation this implies that

850
00:40:50,760 --> 00:40:58,839
the the the verifier could only run 500

851
00:40:56,170 --> 00:41:01,420
operations per second now the dilemma of

852
00:40:58,839 --> 00:41:03,160
the verifier is that the verifier does

853
00:41:01,420 --> 00:41:06,400
not know the identity of the signer and

854
00:41:03,160 --> 00:41:08,230
the revocation list does not contain the

855
00:41:06,400 --> 00:41:11,559
identity of the signers it actually

856
00:41:08,230 --> 00:41:14,020
contains the secret keys that were

857
00:41:11,559 --> 00:41:16,809
allotted to those signers and therefore

858
00:41:14,020 --> 00:41:20,589
when the verifier receives a message it

859
00:41:16,809 --> 00:41:24,220
has to look to each entry in the

860
00:41:20,589 --> 00:41:26,319
revocation lists see if that secret key

861
00:41:24,220 --> 00:41:28,299
which is in the revocation list has been

862
00:41:26,319 --> 00:41:31,029
utilized to generate that signature or

863
00:41:28,299 --> 00:41:34,329
not and then move to the next entry in

864
00:41:31,029 --> 00:41:37,329
the revocation list which means that the

865
00:41:34,329 --> 00:41:40,059
computation cost of the verifier is

866
00:41:37,329 --> 00:41:42,070
actually linear in terms of the size of

867
00:41:40,059 --> 00:41:44,350
the deviation list

868
00:41:42,070 --> 00:41:46,470
okay so now you could see that a

869
00:41:44,350 --> 00:41:50,080
verifier could only run these 500

870
00:41:46,470 --> 00:41:52,660
operations so potentially the verifier

871
00:41:50,080 --> 00:41:55,600
could only check a revocation list of

872
00:41:52,660 --> 00:41:58,870
500 entries now let's consider let's see

873
00:41:55,600 --> 00:42:01,210
the scale of this network so now we

874
00:41:58,870 --> 00:42:03,910
consider a simple scenario where you

875
00:42:01,210 --> 00:42:08,440
have a road with three lanes and tuve

876
00:42:03,910 --> 00:42:11,379
highway and you consider one vehicle and

877
00:42:08,440 --> 00:42:13,690
in each 50 meters so the distance

878
00:42:11,380 --> 00:42:17,140
between two vehicles is 50 meters in

879
00:42:13,690 --> 00:42:19,620
each lane and we consider this typical

880
00:42:17,140 --> 00:42:22,000
communication range of 1 kilometer and

881
00:42:19,620 --> 00:42:24,580
we again consider the typical

882
00:42:22,000 --> 00:42:26,980
periodicity of 100 millisecond for the

883
00:42:24,580 --> 00:42:29,259
location and the other information that

884
00:42:26,980 --> 00:42:33,640
each signer is broadcasting so this

885
00:42:29,260 --> 00:42:35,740
translates into 2400 vehicle to

886
00:42:33,640 --> 00:42:38,520
everything communication messages per

887
00:42:35,740 --> 00:42:42,910
second so v2x messages per second okay

888
00:42:38,520 --> 00:42:46,690
and now let's see the number of revoked

889
00:42:42,910 --> 00:42:50,920
vehicles so in u.s. there are around 11

890
00:42:46,690 --> 00:42:54,180
million revoked licenses currently now

891
00:42:50,920 --> 00:42:58,360
if we reduced that number to a vehicle

892
00:42:54,180 --> 00:42:59,259
so and we sold the vehicles will be

893
00:42:58,360 --> 00:43:02,590
malfunctioning

894
00:42:59,260 --> 00:43:04,540
but that malfunctioning could come from

895
00:43:02,590 --> 00:43:07,720
the malfunctioning of the components of

896
00:43:04,540 --> 00:43:09,340
the vehicle or that malfunctioning could

897
00:43:07,720 --> 00:43:11,799
also come from the malfunctioning of the

898
00:43:09,340 --> 00:43:13,660
drivers and therefore we should consider

899
00:43:11,800 --> 00:43:15,970
a conservative number so the

900
00:43:13,660 --> 00:43:18,670
conservative number that I consider here

901
00:43:15,970 --> 00:43:21,419
is a thousand revoked signers now this

902
00:43:18,670 --> 00:43:25,000
means that you need to run that

903
00:43:21,420 --> 00:43:27,940
operation of wiling your map 2400 into

904
00:43:25,000 --> 00:43:31,330
thousand times now you cannot bridge

905
00:43:27,940 --> 00:43:34,020
this gap between the capability and the

906
00:43:31,330 --> 00:43:37,810
requirement by using simple techniques

907
00:43:34,020 --> 00:43:39,580
which which you could employ to do

908
00:43:37,810 --> 00:43:43,090
parallelization or hardware acceleration

909
00:43:39,580 --> 00:43:45,700
and therefore it is imperative that we

910
00:43:43,090 --> 00:43:49,870
develop a novel mechanism to address

911
00:43:45,700 --> 00:43:52,899
this challenge ok so what we proposed

912
00:43:49,870 --> 00:43:56,250
was that rather than verifying the

913
00:43:52,900 --> 00:43:56,250
revocation status of

914
00:43:57,000 --> 00:44:03,180
deterministically how about we verify

915
00:44:00,220 --> 00:44:07,149
the relocation status probabilistically

916
00:44:03,180 --> 00:44:09,910
so now you could think of the analogy

917
00:44:07,150 --> 00:44:14,470
with the Milan rabban primality testing

918
00:44:09,910 --> 00:44:16,870
algorithm where the Prime ality of a

919
00:44:14,470 --> 00:44:19,660
very large number if you want to

920
00:44:16,870 --> 00:44:21,880
determine it deterministically it is

921
00:44:19,660 --> 00:44:24,160
very very computationally expensive but

922
00:44:21,880 --> 00:44:26,110
if you want to just use the

923
00:44:24,160 --> 00:44:27,910
probabilistic algorithm proposed by

924
00:44:26,110 --> 00:44:31,090
Miller and Ravan it is very very

925
00:44:27,910 --> 00:44:32,710
efficient although that efficient

926
00:44:31,090 --> 00:44:36,300
algorithm will not give you 100%

927
00:44:32,710 --> 00:44:39,280
accurate result but still almost all

928
00:44:36,300 --> 00:44:41,050
systems in the current world they

929
00:44:39,280 --> 00:44:42,610
utilize this probabilistic algorithm

930
00:44:41,050 --> 00:44:47,200
called the mirror reliable primality

931
00:44:42,610 --> 00:44:49,030
testing algorithm ok so our idea was to

932
00:44:47,200 --> 00:44:51,160
have this group signatures with

933
00:44:49,030 --> 00:44:53,800
probabilistically vocation so the first

934
00:44:51,160 --> 00:44:58,149
contribution was that we come up with

935
00:44:53,800 --> 00:45:01,780
this idea of alias tokens which these

936
00:44:58,150 --> 00:45:03,580
signers could embed in their signatures

937
00:45:01,780 --> 00:45:06,970
so these signers cannot reveal their

938
00:45:03,580 --> 00:45:09,069
identity in the signatures but what we

939
00:45:06,970 --> 00:45:12,069
wanted to ensure that these signers

940
00:45:09,070 --> 00:45:15,850
reveal something in their signature and

941
00:45:12,070 --> 00:45:18,280
that we call a Lea's token so now these

942
00:45:15,850 --> 00:45:21,520
alias tokens are given to these signers

943
00:45:18,280 --> 00:45:24,370
by the group manager and these signers

944
00:45:21,520 --> 00:45:28,600
now reveal this alias token one aleus

945
00:45:24,370 --> 00:45:31,270
token any signature okay now the second

946
00:45:28,600 --> 00:45:35,290
contribution is the signal processing

947
00:45:31,270 --> 00:45:37,720
part where we check this we will utilize

948
00:45:35,290 --> 00:45:39,940
this alias token that has been embedded

949
00:45:37,720 --> 00:45:41,980
as part of the signature and come up

950
00:45:39,940 --> 00:45:45,970
with a probabilistic revocation check

951
00:45:41,980 --> 00:45:47,530
mechanism so now when the group manager

952
00:45:45,970 --> 00:45:49,810
revokes a signer

953
00:45:47,530 --> 00:45:53,020
it actually revokes these alias tokens

954
00:45:49,810 --> 00:45:55,540
and now the verifier actually checks the

955
00:45:53,020 --> 00:45:57,490
revocation status of these alias tokens

956
00:45:55,540 --> 00:46:01,029
in order to check the revocation status

957
00:45:57,490 --> 00:46:04,330
of the signer okay now let's go into the

958
00:46:01,030 --> 00:46:09,190
details of these contributions so for

959
00:46:04,330 --> 00:46:12,098
this embedded alias token so wha

960
00:46:09,190 --> 00:46:14,050
what we did was we utilized the same

961
00:46:12,099 --> 00:46:16,750
fundamental operation which was called

962
00:46:14,050 --> 00:46:19,660
the bilinear map operation I will not go

963
00:46:16,750 --> 00:46:22,240
into the details of the function but you

964
00:46:19,660 --> 00:46:24,609
could see that it is a very simple

965
00:46:22,240 --> 00:46:27,819
operation so that valanor map operation

966
00:46:24,609 --> 00:46:29,890
ii when conducted on two parameters you

967
00:46:27,819 --> 00:46:34,119
raise to the power a and V raised to the

968
00:46:29,890 --> 00:46:36,520
power B it it is equal to the operation

969
00:46:34,119 --> 00:46:39,550
when it is implied on those two

970
00:46:36,520 --> 00:46:41,560
parameters U V raise to the power a B so

971
00:46:39,550 --> 00:46:43,510
this bilinear map operation is the

972
00:46:41,560 --> 00:46:46,828
fundamental operation which provides

973
00:46:43,510 --> 00:46:49,569
privacy to these signature algorithms

974
00:46:46,829 --> 00:46:52,900
okay so what these three things three

975
00:46:49,569 --> 00:46:55,089
entities in our signature scheme do so

976
00:46:52,900 --> 00:46:58,869
the first step is to generate the group

977
00:46:55,089 --> 00:47:01,029
secret key which is the same here now

978
00:46:58,869 --> 00:47:03,520
the second step is to generate these

979
00:47:01,030 --> 00:47:05,440
alias tokens so the group manager

980
00:47:03,520 --> 00:47:08,619
generates these alias tokens and assigns

981
00:47:05,440 --> 00:47:10,480
them to the signers but the most

982
00:47:08,619 --> 00:47:13,119
important thing to do here is to

983
00:47:10,480 --> 00:47:16,900
generate the signer secret key and now

984
00:47:13,119 --> 00:47:19,569
you see that here in this third step of

985
00:47:16,900 --> 00:47:22,810
the group manager the signer secret key

986
00:47:19,569 --> 00:47:25,180
is generated using all the alias tokens

987
00:47:22,810 --> 00:47:27,970
that has been assigned to the signer so

988
00:47:25,180 --> 00:47:30,940
the finest secret key is now related to

989
00:47:27,970 --> 00:47:31,540
the all of these alias token now what

990
00:47:30,940 --> 00:47:33,750
the signer

991
00:47:31,540 --> 00:47:37,660
does is seiner generates these other

992
00:47:33,750 --> 00:47:40,060
parameters some parameter B and some

993
00:47:37,660 --> 00:47:41,859
parameter C but the important point to

994
00:47:40,060 --> 00:47:44,200
note here is that the parameter B is

995
00:47:41,859 --> 00:47:46,598
generated by all the alias tokens that

996
00:47:44,200 --> 00:47:49,930
it has and the parameter C is generated

997
00:47:46,599 --> 00:47:51,819
by all earliest occurs except the alias

998
00:47:49,930 --> 00:47:55,180
token which it wants to reveal into

999
00:47:51,819 --> 00:47:59,259
signature now when it generates a

1000
00:47:55,180 --> 00:48:01,509
signature it sends the information or

1001
00:47:59,260 --> 00:48:03,430
the 0 so what we call is zero knowledge

1002
00:48:01,510 --> 00:48:07,720
proof of knowledge of these three

1003
00:48:03,430 --> 00:48:12,040
parameters ABC and it reveals this alias

1004
00:48:07,720 --> 00:48:15,399
token X I as well and this verifier now

1005
00:48:12,040 --> 00:48:17,710
checks whether the signer has a valid

1006
00:48:15,400 --> 00:48:21,369
secret key so it runs the same bilinear

1007
00:48:17,710 --> 00:48:22,840
operation which is called e or and it

1008
00:48:21,369 --> 00:48:24,750
checks if the

1009
00:48:22,840 --> 00:48:27,820
just a and we satisfy a particular

1010
00:48:24,750 --> 00:48:32,650
equality or not and then again this

1011
00:48:27,820 --> 00:48:34,810
Elias token is so that now the now the

1012
00:48:32,650 --> 00:48:37,990
verifier ensures that this Elias token

1013
00:48:34,810 --> 00:48:39,970
is actually cryptographically linked to

1014
00:48:37,990 --> 00:48:42,160
the signature or not so it again uses

1015
00:48:39,970 --> 00:48:44,410
the same bilinear map operation to check

1016
00:48:42,160 --> 00:48:49,089
for this linkage of the Elias token with

1017
00:48:44,410 --> 00:48:52,029
the signature scheme okay now the second

1018
00:48:49,090 --> 00:48:53,620
aspect how we utilize these Elias tokens

1019
00:48:52,030 --> 00:48:57,010
to actually do the revocation check

1020
00:48:53,620 --> 00:48:59,529
mechanism so in thing is so for this we

1021
00:48:57,010 --> 00:49:03,010
utilized the very popular technique

1022
00:48:59,530 --> 00:49:06,460
which is utilized in 3G communication so

1023
00:49:03,010 --> 00:49:09,010
it was in the in 3d communication what

1024
00:49:06,460 --> 00:49:12,310
happened was that the users were allowed

1025
00:49:09,010 --> 00:49:14,860
to transmit or at the same time and at

1026
00:49:12,310 --> 00:49:17,770
the same frequency but when these all

1027
00:49:14,860 --> 00:49:20,050
these different senders transmitted at

1028
00:49:17,770 --> 00:49:22,210
the same time at the same frequency it

1029
00:49:20,050 --> 00:49:24,130
is difficult for the receivers to decode

1030
00:49:22,210 --> 00:49:26,560
those signals so this concept of

1031
00:49:24,130 --> 00:49:29,200
spreading codes was developed where

1032
00:49:26,560 --> 00:49:30,460
these goods are utilized by these so

1033
00:49:29,200 --> 00:49:33,129
different codes are utilized by

1034
00:49:30,460 --> 00:49:35,290
different senders and they code their

1035
00:49:33,130 --> 00:49:37,900
signal using these different spreading

1036
00:49:35,290 --> 00:49:39,730
codes and when a particular receiver is

1037
00:49:37,900 --> 00:49:43,170
interested in a particular transmitter

1038
00:49:39,730 --> 00:49:46,200
it will use the same spreading code and

1039
00:49:43,170 --> 00:49:49,570
then it will be able to extract that

1040
00:49:46,200 --> 00:49:52,689
message from the overlapped signal and

1041
00:49:49,570 --> 00:49:54,250
it will be able to know what the sender

1042
00:49:52,690 --> 00:49:56,620
was transmitting over there

1043
00:49:54,250 --> 00:49:59,500
although the sender is actually sharing

1044
00:49:56,620 --> 00:50:01,779
the same spectrum and the same time with

1045
00:49:59,500 --> 00:50:03,970
other senders as well so if you use the

1046
00:50:01,780 --> 00:50:05,530
same spreading code if the sender uses

1047
00:50:03,970 --> 00:50:07,480
the same spreading code and the receiver

1048
00:50:05,530 --> 00:50:11,220
uses the same spreading code they could

1049
00:50:07,480 --> 00:50:14,440
have this communication of information

1050
00:50:11,220 --> 00:50:16,270
okay but if they use different spreading

1051
00:50:14,440 --> 00:50:18,310
codes they will not be able to know what

1052
00:50:16,270 --> 00:50:21,180
they have what the sender has sent and

1053
00:50:18,310 --> 00:50:24,370
they will also not be able to know

1054
00:50:21,180 --> 00:50:26,020
anything about that information so that

1055
00:50:24,370 --> 00:50:30,700
there is a privacy component there as

1056
00:50:26,020 --> 00:50:34,300
well ok so what we did here so what we

1057
00:50:30,700 --> 00:50:36,430
did was we actually took these alias

1058
00:50:34,300 --> 00:50:39,160
tokens and map did to stress

1059
00:50:36,430 --> 00:50:42,879
reading codes and then when the revoke

1060
00:50:39,160 --> 00:50:46,240
when the group manager has to revoke

1061
00:50:42,880 --> 00:50:48,670
these different signers by revoking

1062
00:50:46,240 --> 00:50:50,500
their alias tokens we revoke these

1063
00:50:48,670 --> 00:50:53,020
spreading codes corresponding to those

1064
00:50:50,500 --> 00:50:55,840
alias tokens and the way we revoke this

1065
00:50:53,020 --> 00:50:57,520
is to generate a revocation code so

1066
00:50:55,840 --> 00:51:00,820
rather than generating a revocation list

1067
00:50:57,520 --> 00:51:03,550
now we generate a revocation code which

1068
00:51:00,820 --> 00:51:07,360
is actually a sum of all these

1069
00:51:03,550 --> 00:51:10,480
revocation codes so now you see that the

1070
00:51:07,360 --> 00:51:13,810
analogy of sharing the same time and the

1071
00:51:10,480 --> 00:51:15,910
same frequency using their spreading

1072
00:51:13,810 --> 00:51:17,890
code comes here that now you have what

1073
00:51:15,910 --> 00:51:19,899
you have done is you have generated one

1074
00:51:17,890 --> 00:51:22,150
code which is called any vocation code

1075
00:51:19,900 --> 00:51:25,870
here by summing up all these spreading

1076
00:51:22,150 --> 00:51:29,170
codes which were revoked and now when

1077
00:51:25,870 --> 00:51:31,180
this when a verifier has to actually

1078
00:51:29,170 --> 00:51:34,780
check the revocation status of the

1079
00:51:31,180 --> 00:51:36,910
signer by looking at an alias token so

1080
00:51:34,780 --> 00:51:39,010
that what the verifier can do is the

1081
00:51:36,910 --> 00:51:41,350
verifier could map that and he has token

1082
00:51:39,010 --> 00:51:44,080
to a spreading code which is which we

1083
00:51:41,350 --> 00:51:47,170
call here as Elias code and then it

1084
00:51:44,080 --> 00:51:50,200
could compute a correlation with the

1085
00:51:47,170 --> 00:51:53,530
revocation code and this correlation

1086
00:51:50,200 --> 00:51:56,109
value will lie between 0 & 1 so the

1087
00:51:53,530 --> 00:51:59,470
basic thing here is that if the

1088
00:51:56,110 --> 00:52:02,290
correlation is above a threshold which

1089
00:51:59,470 --> 00:52:04,480
means that the Elias code was encoded in

1090
00:52:02,290 --> 00:52:08,440
the revocation code which implies that

1091
00:52:04,480 --> 00:52:10,870
the signer was revoked and if the value

1092
00:52:08,440 --> 00:52:13,300
is lower than that threshold implies

1093
00:52:10,870 --> 00:52:19,000
that the signer was not revoked so this

1094
00:52:13,300 --> 00:52:21,090
is so this mechanism ensures that you

1095
00:52:19,000 --> 00:52:23,830
are actually using a probabilistic

1096
00:52:21,090 --> 00:52:27,850
mechanism to decide on the revocation

1097
00:52:23,830 --> 00:52:31,529
status of a signer okay so using this

1098
00:52:27,850 --> 00:52:33,339
probabilistic mechanism we were able to

1099
00:52:31,530 --> 00:52:38,080
significantly reduce the computational

1100
00:52:33,340 --> 00:52:40,120
cost of the group signature mechanism so

1101
00:52:38,080 --> 00:52:42,700
here you see the blue curve which is the

1102
00:52:40,120 --> 00:52:45,850
curve for our group signatures with

1103
00:52:42,700 --> 00:52:47,740
probabilistically vocation and the red

1104
00:52:45,850 --> 00:52:49,220
and the green curves are from the prior

1105
00:52:47,740 --> 00:52:51,379
art and we

1106
00:52:49,220 --> 00:52:53,810
see that we were able to significantly

1107
00:52:51,380 --> 00:52:58,300
reduce this computational cost and make

1108
00:52:53,810 --> 00:53:01,160
our scheme implementable in a standard

1109
00:52:58,300 --> 00:53:03,410
vehicle to infrastructure communication

1110
00:53:01,160 --> 00:53:05,750
network so you on the x-axis we have the

1111
00:53:03,410 --> 00:53:07,490
number of revoked private keys and you

1112
00:53:05,750 --> 00:53:10,520
see that even if the number of revoked

1113
00:53:07,490 --> 00:53:13,339
private keys reaches some number like

1114
00:53:10,520 --> 00:53:14,900
10,000 on the y axis we have the

1115
00:53:13,340 --> 00:53:18,470
computational overhead in milliseconds

1116
00:53:14,900 --> 00:53:21,830
so you are still less than 100

1117
00:53:18,470 --> 00:53:23,509
millisecond so the verifier would take

1118
00:53:21,830 --> 00:53:26,660
even less than 100 milliseconds to

1119
00:53:23,510 --> 00:53:29,510
verify each of those messages and I will

1120
00:53:26,660 --> 00:53:31,310
remind you that 100 milliseconds is the

1121
00:53:29,510 --> 00:53:32,630
time when you receive a message so it is

1122
00:53:31,310 --> 00:53:35,150
very important that you should be able

1123
00:53:32,630 --> 00:53:39,260
to verify a message within hundred

1124
00:53:35,150 --> 00:53:42,560
millisecond okay so I would just

1125
00:53:39,260 --> 00:53:45,800
conclude there here I already talked

1126
00:53:42,560 --> 00:53:48,140
about the two components of this

1127
00:53:45,800 --> 00:53:50,660
connected autonomous vehicle in the

1128
00:53:48,140 --> 00:53:53,450
first part I talked about this attack do

1129
00:53:50,660 --> 00:53:55,490
it which evaded the state-of-the-art

1130
00:53:53,450 --> 00:53:56,480
fingerprinting technique that is

1131
00:53:55,490 --> 00:53:59,270
employed by the intrusion detection

1132
00:53:56,480 --> 00:54:01,250
system and the second part I you till

1133
00:53:59,270 --> 00:54:02,930
eyes the this idea of probabilistic

1134
00:54:01,250 --> 00:54:04,570
relieve occasion to come up with this

1135
00:54:02,930 --> 00:54:07,069
scalable privacy-preserving

1136
00:54:04,570 --> 00:54:11,660
authentication mechanism for the v2x

1137
00:54:07,070 --> 00:54:14,359
communication yes so the goal here is to

1138
00:54:11,660 --> 00:54:17,690
actually come up with an in to end

1139
00:54:14,359 --> 00:54:20,750
authentication mechanism and my even my

1140
00:54:17,690 --> 00:54:23,150
current research directions are in to

1141
00:54:20,750 --> 00:54:25,820
enable this smart and secure

1142
00:54:23,150 --> 00:54:28,180
transmission by transportation by

1143
00:54:25,820 --> 00:54:31,190
enabling this into end authentication

1144
00:54:28,180 --> 00:54:39,279
that is the end of my talk and I will be

1145
00:54:31,190 --> 00:54:39,280
happy to take more questions yes

1146
00:54:42,430 --> 00:54:51,740
yeah so how's the threshold is

1147
00:54:49,089 --> 00:54:58,308
determined where vacation

1148
00:54:51,740 --> 00:55:00,979
yeah so we ran some simulations of how

1149
00:54:58,309 --> 00:55:04,609
many number of how many number of

1150
00:55:00,980 --> 00:55:06,440
revoked signers if you have and you

1151
00:55:04,609 --> 00:55:09,020
generate a revocation code and you do

1152
00:55:06,440 --> 00:55:11,390
the same mechanism of setting up the

1153
00:55:09,020 --> 00:55:14,770
threshold and detecting the revocation

1154
00:55:11,390 --> 00:55:19,240
status of the vehicle so we found that

1155
00:55:14,770 --> 00:55:23,180
in order to achieve so these are all

1156
00:55:19,240 --> 00:55:25,879
mechanisms to ensure that you achieve a

1157
00:55:23,180 --> 00:55:29,660
particular false alarm rate and a

1158
00:55:25,880 --> 00:55:32,539
particular detection rate in that system

1159
00:55:29,660 --> 00:55:35,440
so we found that if you have if you

1160
00:55:32,539 --> 00:55:38,779
determine a particular false alarm rate

1161
00:55:35,440 --> 00:55:40,789
you could find the threshold and then

1162
00:55:38,779 --> 00:55:42,650
you could set that threshold in your

1163
00:55:40,789 --> 00:55:45,049
scheme so you will have two so we first

1164
00:55:42,650 --> 00:55:46,730
start with the particular false alarm

1165
00:55:45,049 --> 00:56:00,160
rate and from there we determine the

1166
00:55:46,730 --> 00:56:02,900
threshold value you mentioned that the

1167
00:56:00,160 --> 00:56:06,109
speaker updates their formula by using

1168
00:56:02,900 --> 00:56:08,660
the Obata air channel yeah so I'm

1169
00:56:06,109 --> 00:56:11,000
curious about the weather when they

1170
00:56:08,660 --> 00:56:13,940
conduct about for my update they

1171
00:56:11,000 --> 00:56:16,940
utilized any authentication one formula

1172
00:56:13,940 --> 00:56:20,119
signing message or not so I think they

1173
00:56:16,940 --> 00:56:23,779
do utilize it so so at least I know that

1174
00:56:20,119 --> 00:56:26,119
Tesla utilizes this over there update

1175
00:56:23,779 --> 00:56:30,130
mechanisms and they do utilize the

1176
00:56:26,119 --> 00:56:30,130
authentication while doing that

1177
00:56:41,240 --> 00:56:46,569
[Applause]

1178
00:56:54,180 --> 00:56:56,240
you

