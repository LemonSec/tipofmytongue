1
00:00:00,580 --> 00:00:07,600
good afternoon it's my honor to

2
00:00:03,429 --> 00:00:10,750
introduce mr. Mac met Mickelson so Matt

3
00:00:07,600 --> 00:00:13,080
is a principle in miters navel program

4
00:00:10,750 --> 00:00:15,689
division matt has spent 20 years

5
00:00:13,080 --> 00:00:19,599
integrating emerging technologies

6
00:00:15,689 --> 00:00:21,720
including cyber AI and autonomy to

7
00:00:19,599 --> 00:00:25,029
improve some of the world's largest

8
00:00:21,720 --> 00:00:28,359
organizations he has given given invited

9
00:00:25,029 --> 00:00:30,698
talks in academia and industry he was a

10
00:00:28,359 --> 00:00:33,640
keynote speaker at last year's I Triple

11
00:00:30,699 --> 00:00:35,859
E ICT AI conference and recently an

12
00:00:33,640 --> 00:00:39,070
invited speaker for the National Cyber

13
00:00:35,859 --> 00:00:41,440
Security Alliance at the Nasdaq as a

14
00:00:39,070 --> 00:00:44,620
child he convinced his parents they

15
00:00:41,440 --> 00:00:46,809
needed a color TV and ever since he has

16
00:00:44,620 --> 00:00:49,870
had a passion for identifying and

17
00:00:46,809 --> 00:00:52,480
developing disruptive technology now he

18
00:00:49,870 --> 00:00:55,269
actively coordinates advanced research

19
00:00:52,480 --> 00:00:57,760
programs in cyber security at the Office

20
00:00:55,269 --> 00:01:05,110
of Naval Research with the further ado

21
00:00:57,760 --> 00:01:08,250
let's welcome Matt thank you

22
00:01:05,110 --> 00:01:10,210
I'm here to talk about fit physics rules

23
00:01:08,250 --> 00:01:12,520
physics based approach for creating

24
00:01:10,210 --> 00:01:15,970
cyber resilient systems specifically

25
00:01:12,520 --> 00:01:20,020
cyber physical systems let's get started

26
00:01:15,970 --> 00:01:21,130
so a little motivation for why we're

27
00:01:20,020 --> 00:01:25,860
here

28
00:01:21,130 --> 00:01:28,119
there have been a spate of news articles

29
00:01:25,860 --> 00:01:31,780
highlighting cyber attacks on cyber

30
00:01:28,120 --> 00:01:34,600
physical systems we'll read these out

31
00:01:31,780 --> 00:01:36,220
loud to you but the you've probably seen

32
00:01:34,600 --> 00:01:38,380
them in the news everything from

33
00:01:36,220 --> 00:01:45,100
airplanes to industrial control systems

34
00:01:38,380 --> 00:01:47,440
to cars two basic IOT in your home the

35
00:01:45,100 --> 00:01:49,750
reason why these are making the news is

36
00:01:47,440 --> 00:01:52,300
because these are affecting everybody's

37
00:01:49,750 --> 00:01:55,600
lives today and it's more than hacking

38
00:01:52,300 --> 00:01:57,700
these systems is more than just a dump

39
00:01:55,600 --> 00:02:00,850
of data compromised credentials

40
00:01:57,700 --> 00:02:04,000
compromised identities these things move

41
00:02:00,850 --> 00:02:10,149
in the real world they stand to hurt you

42
00:02:04,000 --> 00:02:11,590
or worse so quick quote about technology

43
00:02:10,149 --> 00:02:13,450
change this is a quote from Douglas

44
00:02:11,590 --> 00:02:14,510
Adams who wrote Hitchhiker's Guide to

45
00:02:13,450 --> 00:02:16,099
the galaxy

46
00:02:14,510 --> 00:02:17,510
if you haven't ever read Hitchhiker's

47
00:02:16,099 --> 00:02:19,488
Guide to the galaxy I highly recommend

48
00:02:17,510 --> 00:02:21,799
it but basically what he does is he

49
00:02:19,489 --> 00:02:23,510
breaks down technology into three basic

50
00:02:21,800 --> 00:02:25,849
categories there's all the stuff that

51
00:02:23,510 --> 00:02:28,340
existed before you were born right and

52
00:02:25,849 --> 00:02:30,319
that's just normal then there's all the

53
00:02:28,340 --> 00:02:32,840
stuff that comes out between when you're

54
00:02:30,319 --> 00:02:35,179
born and when you turn 30 and this is

55
00:02:32,840 --> 00:02:37,010
all really interesting cool stuff you

56
00:02:35,180 --> 00:02:38,810
can make a career out of it it's really

57
00:02:37,010 --> 00:02:40,670
exciting and then there's everything

58
00:02:38,810 --> 00:02:42,230
that comes out after you turn 30 which

59
00:02:40,670 --> 00:02:46,488
is the end of civilization as you know

60
00:02:42,230 --> 00:02:50,480
it so what's really changing with all

61
00:02:46,489 --> 00:02:51,709
these news articles well the common

62
00:02:50,480 --> 00:02:55,399
thread is obviously the cyber-physical

63
00:02:51,709 --> 00:02:57,500
systems these things like we've already

64
00:02:55,400 --> 00:02:59,930
talked about they move in the real world

65
00:02:57,500 --> 00:03:02,239
right it's not just about compromising

66
00:02:59,930 --> 00:03:04,849
your data these things can hurt or kill

67
00:03:02,239 --> 00:03:06,140
people if things go wrong and being

68
00:03:04,849 --> 00:03:08,090
connected to the network

69
00:03:06,140 --> 00:03:10,369
god forbid connected to the entire

70
00:03:08,090 --> 00:03:13,220
internet across the world means that

71
00:03:10,370 --> 00:03:15,079
they're controllable hackable you can

72
00:03:13,220 --> 00:03:20,540
push data to these things and actually

73
00:03:15,079 --> 00:03:23,060
actuate movement in the real world what

74
00:03:20,540 --> 00:03:25,630
differentiates cps I'm going to find out

75
00:03:23,060 --> 00:03:27,950
who all the math majors are in a second

76
00:03:25,630 --> 00:03:29,870
there are a couple distinguishing

77
00:03:27,950 --> 00:03:31,518
characteristics between IT systems

78
00:03:29,870 --> 00:03:34,540
traditional IT systems that just work

79
00:03:31,519 --> 00:03:37,329
with data and cyber-physical systems

80
00:03:34,540 --> 00:03:39,950
I'll highlight a few of these things

81
00:03:37,329 --> 00:03:41,840
probably most notably cyber physical

82
00:03:39,950 --> 00:03:46,069
systems are intended to have a lifespan

83
00:03:41,840 --> 00:03:49,600
in terms of decades where some of the IT

84
00:03:46,069 --> 00:03:51,768
systems your laptop your your phone

85
00:03:49,600 --> 00:03:54,019
typically have a lifespan of anywhere

86
00:03:51,769 --> 00:03:55,459
between one and five years depending on

87
00:03:54,019 --> 00:03:57,650
what they are and how you use it

88
00:03:55,459 --> 00:04:01,010
cyber-physical systems operate in an

89
00:03:57,650 --> 00:04:03,530
industrial control setting in a car on

90
00:04:01,010 --> 00:04:06,769
an airplane those those are designed

91
00:04:03,530 --> 00:04:09,530
from day one to last for 2030 and

92
00:04:06,769 --> 00:04:12,440
sometimes in some cases 40 or even 50

93
00:04:09,530 --> 00:04:14,150
years so the lifespan is different and

94
00:04:12,440 --> 00:04:16,608
when you start to think about that in

95
00:04:14,150 --> 00:04:20,090
terms of how how long those systems are

96
00:04:16,608 --> 00:04:22,969
in use many of them were deployed before

97
00:04:20,089 --> 00:04:26,000
cyber was really a thing right much less

98
00:04:22,970 --> 00:04:28,990
today today's crop of exploits in the

99
00:04:26,000 --> 00:04:32,010
cyber world they were just never design

100
00:04:28,990 --> 00:04:34,750
with any of the cyber exploits in mind

101
00:04:32,010 --> 00:04:36,430
they're also not patched right if

102
00:04:34,750 --> 00:04:38,260
they're in an operational setting in the

103
00:04:36,430 --> 00:04:39,520
middle of an industrial control system

104
00:04:38,260 --> 00:04:41,289
in the middle of a manufacturing

105
00:04:39,520 --> 00:04:43,090
facility or embedded in a car or an

106
00:04:41,290 --> 00:04:43,870
airplane sometimes they're not touched

107
00:04:43,090 --> 00:04:47,289
for years

108
00:04:43,870 --> 00:04:48,910
so the normal patch Tuesday that you get

109
00:04:47,290 --> 00:04:51,070
with Windows and Microsoft does not

110
00:04:48,910 --> 00:04:53,790
exist for cyber-physical systems some of

111
00:04:51,070 --> 00:04:55,810
these things really are not accessible

112
00:04:53,790 --> 00:04:57,400
we've already kind of talked about the

113
00:04:55,810 --> 00:04:58,900
health and safety concerns because they

114
00:04:57,400 --> 00:05:03,370
move and actuate things in the real

115
00:04:58,900 --> 00:05:04,929
world they also have operational

116
00:05:03,370 --> 00:05:07,720
controls I'll kind of look at the last

117
00:05:04,930 --> 00:05:09,490
one where as a server a web server and

118
00:05:07,720 --> 00:05:12,250
application servers typically run and

119
00:05:09,490 --> 00:05:15,400
maintained by an IT professional someone

120
00:05:12,250 --> 00:05:17,320
who is has a background in IT most of

121
00:05:15,400 --> 00:05:19,330
the cyber physical systems are not run

122
00:05:17,320 --> 00:05:20,710
by an IT person much less a security

123
00:05:19,330 --> 00:05:24,190
person they're run by an industrial

124
00:05:20,710 --> 00:05:27,609
control operator right so we have a lot

125
00:05:24,190 --> 00:05:29,080
of different aspects that make cyber for

126
00:05:27,610 --> 00:05:30,460
cyber physical systems really

127
00:05:29,080 --> 00:05:36,310
interesting and in some cases really

128
00:05:30,460 --> 00:05:37,359
dangerous so the first thing that we

129
00:05:36,310 --> 00:05:39,190
need to know about cyber physical

130
00:05:37,360 --> 00:05:42,250
systems is what to pay attention to

131
00:05:39,190 --> 00:05:43,990
right everything in a cyber physical

132
00:05:42,250 --> 00:05:45,880
system really needs to be motivated by

133
00:05:43,990 --> 00:05:47,440
the physical part of the system right

134
00:05:45,880 --> 00:05:49,000
that's the part that can move that can

135
00:05:47,440 --> 00:05:51,430
hurt you that can kill people that can

136
00:05:49,000 --> 00:05:53,140
cause real damage in the real world so

137
00:05:51,430 --> 00:05:54,600
if you've heard about the the

138
00:05:53,140 --> 00:05:58,690
confidentiality integrity availability

139
00:05:54,600 --> 00:06:00,970
triad of cyber security availability is

140
00:05:58,690 --> 00:06:03,670
the number one component for cyber

141
00:06:00,970 --> 00:06:05,860
physical systems what's in this picture

142
00:06:03,670 --> 00:06:07,870
is actually a picture of the per one

143
00:06:05,860 --> 00:06:10,330
nuclear reactor right here at Purdue if

144
00:06:07,870 --> 00:06:13,000
you're running a nuclear reactor and

145
00:06:10,330 --> 00:06:16,599
it's digital which the one here is if

146
00:06:13,000 --> 00:06:18,310
it's connected in any way your number

147
00:06:16,600 --> 00:06:20,280
one priority is to make sure it is

148
00:06:18,310 --> 00:06:23,410
available and you keep it running right

149
00:06:20,280 --> 00:06:25,150
confidentiality is is important but it's

150
00:06:23,410 --> 00:06:27,400
of less importance right we don't need

151
00:06:25,150 --> 00:06:29,500
things like heavyweight encryption

152
00:06:27,400 --> 00:06:31,270
because the data in the can in the

153
00:06:29,500 --> 00:06:33,490
control loop of most of these cyber

154
00:06:31,270 --> 00:06:35,020
physical systems once it's two or three

155
00:06:33,490 --> 00:06:37,990
seconds old it's probably not

156
00:06:35,020 --> 00:06:39,430
interesting anymore so it's we need to

157
00:06:37,990 --> 00:06:44,860
remember that the availability is the

158
00:06:39,430 --> 00:06:46,120
number-one priority okay so now that we

159
00:06:44,860 --> 00:06:48,550
know that availability is the number one

160
00:06:46,120 --> 00:06:49,630
priority what can we actually do what is

161
00:06:48,550 --> 00:06:51,970
it what is that main physical

162
00:06:49,630 --> 00:06:53,590
requirement if we're gonna imbue cyber

163
00:06:51,970 --> 00:06:55,450
or we're gonna put security constraints

164
00:06:53,590 --> 00:06:57,549
on the cyber physical system we

165
00:06:55,450 --> 00:07:00,580
absolutely cannot disrupt that

166
00:06:57,550 --> 00:07:02,560
availability right if if the company

167
00:07:00,580 --> 00:07:04,960
that this is going on or if the company

168
00:07:02,560 --> 00:07:07,570
that owns the equipment that is going to

169
00:07:04,960 --> 00:07:10,930
be employing the cyber is in business

170
00:07:07,570 --> 00:07:12,550
and that cyber physical system is is a

171
00:07:10,930 --> 00:07:14,440
part of their business you cannot shut

172
00:07:12,550 --> 00:07:16,630
the operation down it is it is business

173
00:07:14,440 --> 00:07:18,700
critical function if it's generating

174
00:07:16,630 --> 00:07:20,770
electricity for the power grid if it's

175
00:07:18,700 --> 00:07:22,930
driving you down the highway it doesn't

176
00:07:20,770 --> 00:07:24,760
really matter the number-one priority is

177
00:07:22,930 --> 00:07:27,430
still the availability and we can't

178
00:07:24,760 --> 00:07:29,380
disrupt that it also has to meet the

179
00:07:27,430 --> 00:07:31,750
real-time constraints and the deadlines

180
00:07:29,380 --> 00:07:33,219
of a real-time system the nice thing is

181
00:07:31,750 --> 00:07:35,530
we're gonna see in a little bit that the

182
00:07:33,220 --> 00:07:37,840
real-time system operates a lot slower

183
00:07:35,530 --> 00:07:40,630
than you're used to working with IT

184
00:07:37,840 --> 00:07:43,030
systems so the periodic control loops

185
00:07:40,630 --> 00:07:45,310
which is described in this picture which

186
00:07:43,030 --> 00:07:47,530
is the sensing of the real world by the

187
00:07:45,310 --> 00:07:49,419
sensor the processing the passing the

188
00:07:47,530 --> 00:07:51,280
processed information about the real

189
00:07:49,419 --> 00:07:53,650
world to an actuator and the moving of

190
00:07:51,280 --> 00:07:56,469
the actuator forms a control loop that

191
00:07:53,650 --> 00:07:59,469
control loop only moves at the speed at

192
00:07:56,470 --> 00:08:01,930
which the the external world really

193
00:07:59,470 --> 00:08:04,390
starts to evolve which tends to only be

194
00:08:01,930 --> 00:08:07,090
somewhere between 40 and 200 Hertz as

195
00:08:04,390 --> 00:08:08,800
opposed to the two gigahertz that most

196
00:08:07,090 --> 00:08:11,500
of you have in your phones or on a

197
00:08:08,800 --> 00:08:14,260
typical system so one advantage of doing

198
00:08:11,500 --> 00:08:15,880
cyber on cyber physical systems is that

199
00:08:14,260 --> 00:08:18,729
if we're gonna be doing any sort of

200
00:08:15,880 --> 00:08:21,700
monitoring and execution and processing

201
00:08:18,729 --> 00:08:23,169
if we were processing it 2 gigahertz and

202
00:08:21,700 --> 00:08:25,599
the control loop is only going at a

203
00:08:23,169 --> 00:08:27,820
hundred Hertz we have a lot of shots for

204
00:08:25,600 --> 00:08:31,930
every clock cycle every every loop of

205
00:08:27,820 --> 00:08:34,240
that control loop the periodicity can

206
00:08:31,930 --> 00:08:35,979
tolerate occasional disruption and this

207
00:08:34,240 --> 00:08:38,080
is what is actually ultimately going to

208
00:08:35,979 --> 00:08:42,810
lead us to greater cyber resilience here

209
00:08:38,080 --> 00:08:46,600
in a minute so why in short inertia

210
00:08:42,809 --> 00:08:48,160
inertia of the cyber physical system

211
00:08:46,600 --> 00:08:50,410
specifically the physical side of that

212
00:08:48,160 --> 00:08:53,769
cyber physical system provides a very

213
00:08:50,410 --> 00:08:56,499
natural ability to tolerate small fault

214
00:08:53,769 --> 00:08:59,379
right if you're driving your car on the

215
00:08:56,499 --> 00:09:01,809
interstate you have about 4,000 pounds

216
00:08:59,379 --> 00:09:05,199
of car moving at 60 miles an hour

217
00:09:01,809 --> 00:09:07,179
if you're obeying the speed limit that's

218
00:09:05,199 --> 00:09:08,829
a lot of inertia if the braking system

219
00:09:07,179 --> 00:09:10,720
were to completely disappear for a

220
00:09:08,829 --> 00:09:13,719
hundred milliseconds you probably

221
00:09:10,720 --> 00:09:16,209
wouldn't even notice right so how can we

222
00:09:13,720 --> 00:09:17,739
take advantage of the inertia to give us

223
00:09:16,209 --> 00:09:21,459
cyber resilience in this cyber-physical

224
00:09:17,739 --> 00:09:24,369
system the nice thing is physical laws

225
00:09:21,459 --> 00:09:27,459
don't need law enforcement an attacker a

226
00:09:24,369 --> 00:09:28,839
cyber malicious attacker cannot change

227
00:09:27,459 --> 00:09:30,368
the laws of physics this is something

228
00:09:28,839 --> 00:09:33,339
that's completely off limits to the

229
00:09:30,369 --> 00:09:34,809
adversary so it's another really great

230
00:09:33,339 --> 00:09:37,509
thing to be able to weave into our

231
00:09:34,809 --> 00:09:38,889
system and we've already talked about

232
00:09:37,509 --> 00:09:40,329
the order of magnitude difference

233
00:09:38,889 --> 00:09:43,809
between how fast we can sense and

234
00:09:40,329 --> 00:09:45,459
respond in a IT system and how fast the

235
00:09:43,809 --> 00:09:49,299
control loop of that cyber physical

236
00:09:45,459 --> 00:09:51,549
system is actually moving so now we're

237
00:09:49,299 --> 00:09:54,189
onto something but how do we actually

238
00:09:51,549 --> 00:09:55,629
get inertia in the physical laws to

239
00:09:54,189 --> 00:09:58,540
translate it into actual cyber

240
00:09:55,629 --> 00:10:00,970
resiliency in the system so the first

241
00:09:58,540 --> 00:10:02,649
step is to build on what is

242
00:10:00,970 --> 00:10:04,439
traditionally in these safety-critical

243
00:10:02,649 --> 00:10:07,689
systems

244
00:10:04,439 --> 00:10:09,189
airplanes have multiple engines because

245
00:10:07,689 --> 00:10:10,540
if there's a mechanical failure on one

246
00:10:09,189 --> 00:10:13,868
engine you could still land the plane

247
00:10:10,540 --> 00:10:15,759
you're not stuck safety critical design

248
00:10:13,869 --> 00:10:17,829
systems have redundant components for

249
00:10:15,759 --> 00:10:20,829
the same reason so we're going to build

250
00:10:17,829 --> 00:10:22,508
on the redundancy that's actually built

251
00:10:20,829 --> 00:10:27,279
into many of these safety critical

252
00:10:22,509 --> 00:10:30,970
systems the problem with today's systems

253
00:10:27,279 --> 00:10:33,009
that have redundancy in them is that for

254
00:10:30,970 --> 00:10:35,290
cyber cyber creates a common mode

255
00:10:33,009 --> 00:10:37,540
failure it's no good to have four

256
00:10:35,290 --> 00:10:39,790
engines on an airplane if the same

257
00:10:37,540 --> 00:10:43,329
cyberattack affects all four of them at

258
00:10:39,790 --> 00:10:45,639
the same time right so that redundancy

259
00:10:43,329 --> 00:10:48,279
is great for mechanical failure but it's

260
00:10:45,639 --> 00:10:50,290
really not good against cyber so the

261
00:10:48,279 --> 00:10:52,809
next step is how do we actually extend

262
00:10:50,290 --> 00:10:58,179
this redundancy to give us protection in

263
00:10:52,809 --> 00:11:01,238
the cyber world this is the slide that

264
00:10:58,179 --> 00:11:02,829
kind of sums up everything about the

265
00:11:01,239 --> 00:11:04,990
approach I'm gonna go over it a little

266
00:11:02,829 --> 00:11:06,819
bit but then the rest of the talk I'm

267
00:11:04,990 --> 00:11:07,390
gonna dive into each one of these and a

268
00:11:06,819 --> 00:11:08,530
little bit more

269
00:11:07,390 --> 00:11:11,290
tail and cover each one of them

270
00:11:08,530 --> 00:11:13,510
independently so the first thing that

271
00:11:11,290 --> 00:11:15,189
we're gonna do to get resiliency by

272
00:11:13,510 --> 00:11:19,330
design out of this is we're going to

273
00:11:15,190 --> 00:11:20,920
provide some artificial diversity so now

274
00:11:19,330 --> 00:11:24,070
it might make sense to kind of come up

275
00:11:20,920 --> 00:11:27,579
here in point so the different colors up

276
00:11:24,070 --> 00:11:29,080
here represent software diversity so if

277
00:11:27,580 --> 00:11:32,260
you believe me that we can do some

278
00:11:29,080 --> 00:11:34,840
binary and software transformations to

279
00:11:32,260 --> 00:11:37,000
make the firmware of these controllers

280
00:11:34,840 --> 00:11:39,760
these three controllers that are up here

281
00:11:37,000 --> 00:11:41,890
on the screen functionally equivalent

282
00:11:39,760 --> 00:11:43,689
but make them look different so we can

283
00:11:41,890 --> 00:11:45,550
change and randomize the memory layout

284
00:11:43,690 --> 00:11:46,990
we can mess with the stack we can mess

285
00:11:45,550 --> 00:11:48,609
with the heap we can do a lot of

286
00:11:46,990 --> 00:11:50,890
different transformations without

287
00:11:48,610 --> 00:11:53,110
changing the functionality of these

288
00:11:50,890 --> 00:11:55,510
controllers but making it look different

289
00:11:53,110 --> 00:11:57,820
to an attacker so if an attacker has a

290
00:11:55,510 --> 00:12:00,640
malicious message that may compromise

291
00:11:57,820 --> 00:12:02,260
one controller it may not compromise

292
00:12:00,640 --> 00:12:02,819
another controller that's the whole

293
00:12:02,260 --> 00:12:05,770
point

294
00:12:02,820 --> 00:12:07,240
the next step is an engineered fast

295
00:12:05,770 --> 00:12:08,680
crash this is gonna seem a little

296
00:12:07,240 --> 00:12:10,300
counterintuitive we're gonna talk about

297
00:12:08,680 --> 00:12:11,739
it a little bit more in detail hopefully

298
00:12:10,300 --> 00:12:15,640
it makes more sense by the time I'm done

299
00:12:11,740 --> 00:12:17,680
but the faster we can crash the less the

300
00:12:15,640 --> 00:12:19,240
system is down and the less the system

301
00:12:17,680 --> 00:12:20,949
is down the more we can tolerate that

302
00:12:19,240 --> 00:12:25,990
disruption for the physical inertia of

303
00:12:20,950 --> 00:12:28,090
the physical system controller recovery

304
00:12:25,990 --> 00:12:28,630
can help us restore to a known good

305
00:12:28,090 --> 00:12:31,810
state

306
00:12:28,630 --> 00:12:33,040
mmm that seems fairly obvious we'll come

307
00:12:31,810 --> 00:12:36,310
back to that one in a little more detail

308
00:12:33,040 --> 00:12:38,620
as well and the delayed input sharing is

309
00:12:36,310 --> 00:12:40,930
one of the critical pieces to making

310
00:12:38,620 --> 00:12:45,070
this all work as well so diversity is

311
00:12:40,930 --> 00:12:46,510
good crashing quickly and recovering

312
00:12:45,070 --> 00:12:47,920
quickly is good so that we can absorb

313
00:12:46,510 --> 00:12:49,630
the fault

314
00:12:47,920 --> 00:12:51,160
and then the delayed input sharing is

315
00:12:49,630 --> 00:12:56,910
going to help us keep one of these

316
00:12:51,160 --> 00:13:00,130
controllers clean so six remember a

317
00:12:56,910 --> 00:13:02,230
successful attack cyber otherwise this

318
00:13:00,130 --> 00:13:04,630
is a football example but a successful

319
00:13:02,230 --> 00:13:07,030
attack requires two things not only a

320
00:13:04,630 --> 00:13:08,650
crash you need the you need the target

321
00:13:07,030 --> 00:13:11,110
to lose control of whatever it's

322
00:13:08,650 --> 00:13:12,880
controlling but you also need to recover

323
00:13:11,110 --> 00:13:14,500
control right so if you're the attacker

324
00:13:12,880 --> 00:13:16,990
you need to pick up the ball and

325
00:13:14,500 --> 00:13:19,180
maintain control it's not enough just to

326
00:13:16,990 --> 00:13:21,100
crash the system you have to create the

327
00:13:19,180 --> 00:13:24,819
fault and then you have to

328
00:13:21,100 --> 00:13:27,100
some sort of hold or control of that

329
00:13:24,820 --> 00:13:28,420
program to take it over we're gonna use

330
00:13:27,100 --> 00:13:30,670
those two things in a second

331
00:13:28,420 --> 00:13:31,990
the artificial diversity prevents the

332
00:13:30,670 --> 00:13:34,180
common mode failure which we talked

333
00:13:31,990 --> 00:13:35,560
about before so in this particular case

334
00:13:34,180 --> 00:13:38,560
I've got them color-coded three

335
00:13:35,560 --> 00:13:40,270
different ways and this diagram is this

336
00:13:38,560 --> 00:13:42,310
picture is basically just showing a

337
00:13:40,270 --> 00:13:45,130
single malicious message and how that

338
00:13:42,310 --> 00:13:46,420
might be processed by three controllers

339
00:13:45,130 --> 00:13:48,970
all of which are functionally equivalent

340
00:13:46,420 --> 00:13:52,630
but look different in memory layout and

341
00:13:48,970 --> 00:13:54,760
in computation so the malicious message

342
00:13:52,630 --> 00:13:57,910
which is conveniently coded as the skull

343
00:13:54,760 --> 00:14:00,400
and crossbones will will own the top

344
00:13:57,910 --> 00:14:02,020
controller but it will crash controller

345
00:14:00,400 --> 00:14:04,329
1 and controller 2 because in this

346
00:14:02,020 --> 00:14:06,360
particular case the compromise that it

347
00:14:04,330 --> 00:14:08,830
that this piece of code is looking at

348
00:14:06,360 --> 00:14:10,540
the the part of controller 1 and

349
00:14:08,830 --> 00:14:12,700
controller 2 that it's trying to jump to

350
00:14:10,540 --> 00:14:15,069
and execute and regain control isn't

351
00:14:12,700 --> 00:14:16,450
where it is in in controller 0 it's in a

352
00:14:15,070 --> 00:14:19,860
different spot things have been moved

353
00:14:16,450 --> 00:14:23,110
around and the the most likely the

354
00:14:19,860 --> 00:14:25,960
99.99% likely outcome of that is a crash

355
00:14:23,110 --> 00:14:29,200
so what we now have is we have the

356
00:14:25,960 --> 00:14:31,860
ability to detect when malicious

357
00:14:29,200 --> 00:14:34,150
messages are coming to these controllers

358
00:14:31,860 --> 00:14:35,620
but unfortunately we still have two

359
00:14:34,150 --> 00:14:39,310
machines that have that have crashed on

360
00:14:35,620 --> 00:14:41,770
us so we're not there yet but we have

361
00:14:39,310 --> 00:14:44,410
prevented the common mode failure the

362
00:14:41,770 --> 00:14:46,390
next thing we need to do is to keep one

363
00:14:44,410 --> 00:14:48,790
of these guys clean so how do we keep

364
00:14:46,390 --> 00:14:51,670
one of them clean we put a delay queue

365
00:14:48,790 --> 00:14:53,010
in front of one of them without loss of

366
00:14:51,670 --> 00:14:55,449
generality and putting it on the bottom

367
00:14:53,010 --> 00:14:58,090
so what we have is a first-in first-out

368
00:14:55,450 --> 00:14:59,800
message queue of some length and all

369
00:14:58,090 --> 00:15:01,300
that's gonna do is that's gonna that's

370
00:14:59,800 --> 00:15:04,839
going to take all of the stream of

371
00:15:01,300 --> 00:15:07,120
inputs and it's essentially gonna keep

372
00:15:04,840 --> 00:15:09,760
this guy a hundred milliseconds or 200

373
00:15:07,120 --> 00:15:12,550
milliseconds in the past right this guy

374
00:15:09,760 --> 00:15:16,750
is going to be executing later than c0

375
00:15:12,550 --> 00:15:21,150
and c1 all right now if a malicious

376
00:15:16,750 --> 00:15:23,800
message comes in that can compromise c0

377
00:15:21,150 --> 00:15:26,350
c1 is going to crash which we just

378
00:15:23,800 --> 00:15:28,420
talked about but c2 hasn't seen that bad

379
00:15:26,350 --> 00:15:33,130
message yet right it's trapped in this

380
00:15:28,420 --> 00:15:36,120
in this delay queue somewhere ok so now

381
00:15:33,130 --> 00:15:40,150
we can keep one healthy now what

382
00:15:36,120 --> 00:15:41,710
now we want to limit the fall time so

383
00:15:40,150 --> 00:15:43,600
this is the only this is the only real

384
00:15:41,710 --> 00:15:45,580
math I'm gonna include in here there's a

385
00:15:43,600 --> 00:15:47,020
lot of technical details and technical

386
00:15:45,580 --> 00:15:49,900
implementation but I'm gonna try to

387
00:15:47,020 --> 00:15:52,480
stick to most of the high level

388
00:15:49,900 --> 00:15:54,280
conceptual on this talk but essentially

389
00:15:52,480 --> 00:15:56,860
that message queue that we just talked

390
00:15:54,280 --> 00:15:59,260
about needs to be long enough for us to

391
00:15:56,860 --> 00:16:00,910
be able to see a crash happen and notice

392
00:15:59,260 --> 00:16:03,240
that the crash has happened while the

393
00:16:00,910 --> 00:16:06,640
while the malicious message was in this

394
00:16:03,240 --> 00:16:08,740
was in this message queue here but it

395
00:16:06,640 --> 00:16:11,110
needs to not be so long that we can't

396
00:16:08,740 --> 00:16:14,080
tolerate the outage in the inertia of

397
00:16:11,110 --> 00:16:15,550
the system so now we have an upper bound

398
00:16:14,080 --> 00:16:18,700
and a lower bound for how long that

399
00:16:15,550 --> 00:16:20,079
message queue needs to be the paradox

400
00:16:18,700 --> 00:16:23,950
which I kind of alluded to at the

401
00:16:20,080 --> 00:16:26,350
beginning is that faster crashes lead to

402
00:16:23,950 --> 00:16:29,860
less time that the system is in an

403
00:16:26,350 --> 00:16:32,110
uncontrolled state leads to the ability

404
00:16:29,860 --> 00:16:34,210
to absorb that fault in the inertia of

405
00:16:32,110 --> 00:16:36,010
the system which leads to a more

406
00:16:34,210 --> 00:16:38,530
resilient system so if we put all these

407
00:16:36,010 --> 00:16:41,170
things together you could have malicious

408
00:16:38,530 --> 00:16:44,920
messages theoretically never getting to

409
00:16:41,170 --> 00:16:48,939
see zero and the trade-off is that c0 is

410
00:16:44,920 --> 00:16:50,770
living 100 200 milliseconds later than

411
00:16:48,940 --> 00:16:52,930
the other ones but if we can absorb that

412
00:16:50,770 --> 00:16:55,120
fault every time it happens in the

413
00:16:52,930 --> 00:16:57,550
inertia of the system nothing

414
00:16:55,120 --> 00:17:00,130
theoretically is ever visible to the

415
00:16:57,550 --> 00:17:02,890
user of that operational system so again

416
00:17:00,130 --> 00:17:04,210
going back to the car example if this is

417
00:17:02,890 --> 00:17:06,639
the braking system and you're driving

418
00:17:04,210 --> 00:17:08,440
down the highway you have the 4000

419
00:17:06,640 --> 00:17:10,870
pounds of car at 60 miles an hour worth

420
00:17:08,440 --> 00:17:13,690
of inertia every time something happens

421
00:17:10,869 --> 00:17:15,969
there may be a crash but one of these

422
00:17:13,690 --> 00:17:17,770
controllers is going to stay clean at

423
00:17:15,970 --> 00:17:19,660
the expense of being a little bit late

424
00:17:17,770 --> 00:17:21,339
but we can absorb the lateness as the

425
00:17:19,660 --> 00:17:29,950
fault in the in the inertia of the

426
00:17:21,339 --> 00:17:31,929
system so I'll go ahead and stop well

427
00:17:29,950 --> 00:17:34,390
I'll stop for a second are there any

428
00:17:31,930 --> 00:17:37,780
questions so far because I I know I talk

429
00:17:34,390 --> 00:17:41,170
a little bit fast this is essentially

430
00:17:37,780 --> 00:17:43,120
the crux of using inertia and using the

431
00:17:41,170 --> 00:17:45,280
physical constructs to imbue these

432
00:17:43,120 --> 00:17:47,850
cyber-physical systems with with cyber

433
00:17:45,280 --> 00:17:47,850
resiliency

434
00:17:48,410 --> 00:17:55,380
so now what well the first thing that

435
00:17:53,430 --> 00:17:57,060
somebody does is there's usually there's

436
00:17:55,380 --> 00:17:58,380
usually some smart guy in the back of

437
00:17:57,060 --> 00:18:00,480
the room or smart girl in the back of

438
00:17:58,380 --> 00:18:02,610
the room there's like okay that's cute

439
00:18:00,480 --> 00:18:05,040
but I'm just gonna flood your bus with

440
00:18:02,610 --> 00:18:06,990
bad traffic right I'm just gonna keep

441
00:18:05,040 --> 00:18:10,800
you in a crash state the entire time

442
00:18:06,990 --> 00:18:12,450
okay well that's fair so the first first

443
00:18:10,800 --> 00:18:14,430
enhancement that we're gonna do to the

444
00:18:12,450 --> 00:18:15,780
core design is to actually prevent some

445
00:18:14,430 --> 00:18:17,520
sort of denial of service to keep that

446
00:18:15,780 --> 00:18:19,889
from happening and the way that we do

447
00:18:17,520 --> 00:18:22,650
that is we do we use some sort of out of

448
00:18:19,890 --> 00:18:26,040
bands memory right

449
00:18:22,650 --> 00:18:28,620
short-term memory it can be as crude and

450
00:18:26,040 --> 00:18:30,540
naïve as you want if we have some way to

451
00:18:28,620 --> 00:18:31,860
remember what these bad messages are

452
00:18:30,540 --> 00:18:33,270
when we see them we keep them in a

453
00:18:31,860 --> 00:18:34,770
short-term memory and if we ever see

454
00:18:33,270 --> 00:18:38,210
them on the bus again we just drop them

455
00:18:34,770 --> 00:18:42,030
right so that's the blacklist approach

456
00:18:38,210 --> 00:18:44,880
if we're running this cyber-physical

457
00:18:42,030 --> 00:18:46,740
system in a controlled operational

458
00:18:44,880 --> 00:18:50,610
environment and we know that we're

459
00:18:46,740 --> 00:18:51,810
there's only four valid messages anytime

460
00:18:50,610 --> 00:18:53,909
we could actually whitelist those

461
00:18:51,810 --> 00:18:58,080
messages so that's the whitelist

462
00:18:53,910 --> 00:18:59,160
approach usually there's another smart

463
00:18:58,080 --> 00:19:00,780
person in the back of the room they say

464
00:18:59,160 --> 00:19:02,880
oh yeah that's cute but that's not going

465
00:19:00,780 --> 00:19:04,350
to prevent a denial of service no it's

466
00:19:02,880 --> 00:19:06,000
not actually going to prevent a denial

467
00:19:04,350 --> 00:19:08,159
of service but what it is gonna do is

468
00:19:06,000 --> 00:19:10,530
it's gonna require the attacker to come

469
00:19:08,160 --> 00:19:12,420
up with a unique exploit every time

470
00:19:10,530 --> 00:19:15,750
every bus cycle which makes it

471
00:19:12,420 --> 00:19:22,590
exceptionally expensive for an adversary

472
00:19:15,750 --> 00:19:24,330
to do okay so what's next we can

473
00:19:22,590 --> 00:19:25,860
actually get diversity through more ways

474
00:19:24,330 --> 00:19:27,240
than that just that magic software

475
00:19:25,860 --> 00:19:29,100
transformation that I was talking about

476
00:19:27,240 --> 00:19:31,260
before we could actually use different

477
00:19:29,100 --> 00:19:32,399
Hardware right so what if we had three

478
00:19:31,260 --> 00:19:33,660
different controllers from three

479
00:19:32,400 --> 00:19:36,240
different manufacturers and three

480
00:19:33,660 --> 00:19:37,950
different vendors that's that's even

481
00:19:36,240 --> 00:19:41,580
more diversity right because I haven't

482
00:19:37,950 --> 00:19:44,610
see if these are PLC's I haven't seen a

483
00:19:41,580 --> 00:19:47,300
an attack yet that works with one piece

484
00:19:44,610 --> 00:19:49,290
of code on Siemens and allen-bradley

485
00:19:47,300 --> 00:19:51,210
simultaneously right so you can

486
00:19:49,290 --> 00:19:54,180
diversify the software you can also

487
00:19:51,210 --> 00:19:55,950
diversify the hardware similarly if this

488
00:19:54,180 --> 00:19:57,270
is an IT system I haven't seen an attack

489
00:19:55,950 --> 00:19:59,460
that works equally well with the same

490
00:19:57,270 --> 00:20:02,639
piece of code on x86 arm and FP

491
00:19:59,460 --> 00:20:05,190
yay right so you can do you can play

492
00:20:02,640 --> 00:20:06,960
this game all day long we can also use

493
00:20:05,190 --> 00:20:08,970
complementary protections so long as

494
00:20:06,960 --> 00:20:11,580
they're orthogonal right so if you're

495
00:20:08,970 --> 00:20:14,580
familiar with stack Canaries control

496
00:20:11,580 --> 00:20:16,080
flow address sanitization memory

497
00:20:14,580 --> 00:20:18,299
sanitization any of these techniques

498
00:20:16,080 --> 00:20:20,279
will actually continue to improve the

499
00:20:18,299 --> 00:20:23,340
diversity the more diversity that we

500
00:20:20,279 --> 00:20:26,070
have the more likely we are to keep keep

501
00:20:23,340 --> 00:20:34,620
one of these alive and the more likely

502
00:20:26,070 --> 00:20:36,330
we are to see a crash hey I guess this

503
00:20:34,620 --> 00:20:39,799
is a third enhancement that we can make

504
00:20:36,330 --> 00:20:44,189
is use an out-of-band simulator I

505
00:20:39,799 --> 00:20:46,020
affectionately refer to this as our what

506
00:20:44,190 --> 00:20:50,580
is this is our Google Maps in a tunnel

507
00:20:46,020 --> 00:20:52,620
scenario so what happens when you drive

508
00:20:50,580 --> 00:20:54,299
through a tunnel with Google Maps

509
00:20:52,620 --> 00:20:56,908
well Google Maps doesn't just forget

510
00:20:54,299 --> 00:20:58,320
about you it does assume that you're

511
00:20:56,909 --> 00:20:59,789
continuing to move on a straight line

512
00:20:58,320 --> 00:21:02,070
and you're probably staying on the road

513
00:20:59,789 --> 00:21:04,350
right and it will continue to track you

514
00:21:02,070 --> 00:21:07,439
and it will continue to extrapolate your

515
00:21:04,350 --> 00:21:10,260
position on the map until it regains a

516
00:21:07,440 --> 00:21:13,020
signal again so yet another thing that

517
00:21:10,260 --> 00:21:16,320
we can do this is actually one of the

518
00:21:13,020 --> 00:21:18,809
more nefarious use cases is what I'll

519
00:21:16,320 --> 00:21:20,370
call low slow sensor drift so you're not

520
00:21:18,809 --> 00:21:23,340
gonna actually crash the system you're

521
00:21:20,370 --> 00:21:25,439
gonna feed it just slightly off until

522
00:21:23,340 --> 00:21:27,689
it's until its way off at some point in

523
00:21:25,440 --> 00:21:30,210
the in the future so that's probably the

524
00:21:27,690 --> 00:21:32,100
worst possible malicious attack that you

525
00:21:30,210 --> 00:21:33,570
could do on some of these but if you

526
00:21:32,100 --> 00:21:35,428
have an out-of-band simulator that's

527
00:21:33,570 --> 00:21:38,730
constantly predicting where you should

528
00:21:35,429 --> 00:21:41,130
be and if it ever deviates from where

529
00:21:38,730 --> 00:21:43,320
the sensors say that it is whether or

530
00:21:41,130 --> 00:21:46,710
not you had an actual crash you can now

531
00:21:43,320 --> 00:21:48,658
call that situation a crash and you can

532
00:21:46,710 --> 00:21:51,330
call for those controllers to reboot and

533
00:21:48,659 --> 00:21:55,460
recover so this is another way that you

534
00:21:51,330 --> 00:21:57,899
can actually recover and prevent and

535
00:21:55,460 --> 00:22:02,549
defend against bad and manipulated

536
00:21:57,899 --> 00:22:06,059
sensor data this one adds some runtime

537
00:22:02,549 --> 00:22:08,309
overhead it's but it's usually pretty

538
00:22:06,059 --> 00:22:10,610
negligible because you don't need a full

539
00:22:08,309 --> 00:22:12,780
universe simulator to be able to do this

540
00:22:10,610 --> 00:22:15,090
this will work with

541
00:22:12,780 --> 00:22:17,730
even just a simple lookup table right

542
00:22:15,090 --> 00:22:19,139
it's you were here a minute ago I'm just

543
00:22:17,730 --> 00:22:20,700
gonna extrapolate a linear extrapolation

544
00:22:19,140 --> 00:22:23,040
of where I think you should be right now

545
00:22:20,700 --> 00:22:24,450
or even just a simple lookup table is

546
00:22:23,040 --> 00:22:25,950
enough sometimes to give you an

547
00:22:24,450 --> 00:22:33,150
indication of whether or not somebody's

548
00:22:25,950 --> 00:22:35,820
been messing with your sensor data there

549
00:22:33,150 --> 00:22:38,310
are also other variants so what we

550
00:22:35,820 --> 00:22:39,480
talked about what I had up on here a few

551
00:22:38,310 --> 00:22:42,409
minutes ago hmm

552
00:22:39,480 --> 00:22:45,390
which is the triply redundant system is

553
00:22:42,410 --> 00:22:47,850
sort of the mathematically minimum set

554
00:22:45,390 --> 00:22:51,810
of redundancy that you need to be able

555
00:22:47,850 --> 00:22:53,580
to ensure that upon a malicious message

556
00:22:51,810 --> 00:22:55,440
that is going to compromise some machine

557
00:22:53,580 --> 00:22:57,240
at least one of them are gonna crash so

558
00:22:55,440 --> 00:22:59,250
you'll see this canary you'll see the

559
00:22:57,240 --> 00:23:00,660
crash as the canary and you'll be able

560
00:22:59,250 --> 00:23:02,970
to identify that there has been a

561
00:23:00,660 --> 00:23:05,790
malicious event and you still have a

562
00:23:02,970 --> 00:23:08,220
third one that you can keep clean you

563
00:23:05,790 --> 00:23:11,670
can actually do this with four so if you

564
00:23:08,220 --> 00:23:13,260
are trying to apply this to a system and

565
00:23:11,670 --> 00:23:15,420
you open it up and you find out that it

566
00:23:13,260 --> 00:23:17,280
has redundant components in it and it

567
00:23:15,420 --> 00:23:21,510
has four redundant components that's

568
00:23:17,280 --> 00:23:25,020
great we could still do this if you had

569
00:23:21,510 --> 00:23:26,820
you can actually do it with two it's not

570
00:23:25,020 --> 00:23:29,700
as good as with three but you can

571
00:23:26,820 --> 00:23:32,760
actually put two of them in a backup

572
00:23:29,700 --> 00:23:35,550
failover situation where with an

573
00:23:32,760 --> 00:23:38,400
intermediary which technically acts as a

574
00:23:35,550 --> 00:23:40,530
third system but with two of them and an

575
00:23:38,400 --> 00:23:44,220
intermediary you can you can identify a

576
00:23:40,530 --> 00:23:46,710
crash in one immediately failover to the

577
00:23:44,220 --> 00:23:48,510
other one and then when you recover the

578
00:23:46,710 --> 00:23:50,520
first one that one comes up as the back

579
00:23:48,510 --> 00:23:51,870
up so you can be constantly bouncing

580
00:23:50,520 --> 00:23:56,760
back and forth in a backup failover

581
00:23:51,870 --> 00:23:58,649
situation the no redundancy one is a

582
00:23:56,760 --> 00:24:01,350
little bit of a twist on what we've

583
00:23:58,650 --> 00:24:05,520
talked about so far so I'll talk about

584
00:24:01,350 --> 00:24:06,990
this one because it's kind of cool we

585
00:24:05,520 --> 00:24:08,610
identified that you can actually do this

586
00:24:06,990 --> 00:24:10,170
without any redundancy in the system at

587
00:24:08,610 --> 00:24:12,870
all and the way it works with no

588
00:24:10,170 --> 00:24:14,840
redundancy is you just reboot the

589
00:24:12,870 --> 00:24:17,929
controller over and over

590
00:24:14,840 --> 00:24:19,820
over and over and over again so if you

591
00:24:17,930 --> 00:24:22,430
can reboot this controller every 200

592
00:24:19,820 --> 00:24:23,810
milliseconds and remember these

593
00:24:22,430 --> 00:24:26,480
controllers are not your laptop they

594
00:24:23,810 --> 00:24:27,679
don't take two minutes to boot up there

595
00:24:26,480 --> 00:24:29,540
are some tricks that you can do to

596
00:24:27,680 --> 00:24:31,520
actually skip the boot up and scan times

597
00:24:29,540 --> 00:24:33,470
and things like that so it is possible

598
00:24:31,520 --> 00:24:36,020
to actually reboot these controllers

599
00:24:33,470 --> 00:24:38,060
that fast if you can reboot a controller

600
00:24:36,020 --> 00:24:39,590
in 100 200 milliseconds that's actually

601
00:24:38,060 --> 00:24:43,419
faster than the attacker can write to

602
00:24:39,590 --> 00:24:47,959
flash memory which is kind of cool and

603
00:24:43,420 --> 00:24:50,630
second of all you can if you can cache a

604
00:24:47,960 --> 00:24:53,240
number of these diversified images for

605
00:24:50,630 --> 00:24:54,830
that controller every time you reboot

606
00:24:53,240 --> 00:24:56,900
that controller you can come up with a

607
00:24:54,830 --> 00:24:59,659
diversified image so you can get that

608
00:24:56,900 --> 00:25:01,670
moving target defense in addition to the

609
00:24:59,660 --> 00:25:04,310
rebooting fast enough to prevent

610
00:25:01,670 --> 00:25:06,920
persistence on the system so this there

611
00:25:04,310 --> 00:25:11,120
is a way to just through constant

612
00:25:06,920 --> 00:25:12,500
rebooting enable the same results and

613
00:25:11,120 --> 00:25:13,850
the the constant rebooting takes

614
00:25:12,500 --> 00:25:15,980
advantage of the inertia in the system

615
00:25:13,850 --> 00:25:18,679
as well you're just doing it every time

616
00:25:15,980 --> 00:25:20,900
it's essentially equivalent to every

617
00:25:18,680 --> 00:25:24,680
control loop having a malicious message

618
00:25:20,900 --> 00:25:34,430
is going to crash I'll see did I leave

619
00:25:24,680 --> 00:25:38,060
any out I think we're good ok so what's

620
00:25:34,430 --> 00:25:39,680
next this is really cool and right now

621
00:25:38,060 --> 00:25:41,540
it works for cyber-physical systems

622
00:25:39,680 --> 00:25:44,180
because the cyber-physical systems have

623
00:25:41,540 --> 00:25:46,280
that physical side of the system and the

624
00:25:44,180 --> 00:25:48,290
physical side of the system has these

625
00:25:46,280 --> 00:25:50,060
things that the attacker and the

626
00:25:48,290 --> 00:25:54,460
adversary can't manipulate namely the

627
00:25:50,060 --> 00:25:54,460
laws of physics specifically inertia

628
00:25:55,600 --> 00:26:00,050
there are some systems that inherit

629
00:25:57,950 --> 00:26:05,680
their inertia from other things so a

630
00:26:00,050 --> 00:26:08,510
radar system whether it's lidar RF radar

631
00:26:05,680 --> 00:26:10,280
it doesn't the pixels on the screen the

632
00:26:08,510 --> 00:26:11,050
radar system itself doesn't have any

633
00:26:10,280 --> 00:26:13,250
inertia

634
00:26:11,050 --> 00:26:15,770
however the things that it's measuring

635
00:26:13,250 --> 00:26:18,460
do right so if this is monitoring

636
00:26:15,770 --> 00:26:21,200
airplanes or it's measuring people

637
00:26:18,460 --> 00:26:24,020
pedestrians cars whatever it happens to

638
00:26:21,200 --> 00:26:26,030
be those things all have inertia because

639
00:26:24,020 --> 00:26:28,340
they're in the real world and these dots

640
00:26:26,030 --> 00:26:30,770
on the screen are going to inherit the

641
00:26:28,340 --> 00:26:32,090
the objects in real life so while the

642
00:26:30,770 --> 00:26:34,580
underlying system doesn't have any

643
00:26:32,090 --> 00:26:37,820
inertia the things that are moving on

644
00:26:34,580 --> 00:26:39,230
here do so we can use the inertia that's

645
00:26:37,820 --> 00:26:39,770
essentially an inherited from the real

646
00:26:39,230 --> 00:26:41,840
world

647
00:26:39,770 --> 00:26:43,668
in this system to accomplish the same

648
00:26:41,840 --> 00:26:46,189
thing that we could before so this

649
00:26:43,669 --> 00:26:53,480
actually extends to things outside of

650
00:26:46,190 --> 00:26:55,909
just purely cyber physical systems next

651
00:26:53,480 --> 00:26:57,679
which sort of abstracts another step

652
00:26:55,909 --> 00:27:00,500
further as there are things with virtual

653
00:26:57,679 --> 00:27:01,970
inertia we've all watched Netflix and

654
00:27:00,500 --> 00:27:04,070
we've all watched YouTube right

655
00:27:01,970 --> 00:27:06,049
streaming audio and streaming video

656
00:27:04,070 --> 00:27:09,110
while they don't exhibit physical

657
00:27:06,049 --> 00:27:12,190
inertia in the real world if a hundred

658
00:27:09,110 --> 00:27:14,750
frames of your Netflix video get dropped

659
00:27:12,190 --> 00:27:16,279
again you don't even notice like there's

660
00:27:14,750 --> 00:27:21,200
a blurring effect in your mind so

661
00:27:16,279 --> 00:27:22,909
anything streaming over UDP anything

662
00:27:21,200 --> 00:27:24,789
streaming period regardless of the

663
00:27:22,909 --> 00:27:27,289
protocol is gonna exhibit some of these

664
00:27:24,789 --> 00:27:30,470
features and we're able to use this as a

665
00:27:27,289 --> 00:27:32,450
virtual inertia so these are these are

666
00:27:30,470 --> 00:27:34,429
more future research topics we really

667
00:27:32,450 --> 00:27:35,690
haven't explored these this to the same

668
00:27:34,429 --> 00:27:37,190
degree that we have with the cyber

669
00:27:35,690 --> 00:27:39,529
physical systems that exhibit real

670
00:27:37,190 --> 00:27:42,380
inertia but we're starting to see the

671
00:27:39,529 --> 00:27:44,840
application of this technique on purely

672
00:27:42,380 --> 00:27:51,890
IT systems that exhibit these virtual

673
00:27:44,840 --> 00:27:54,830
inertia concepts and I guess I'm talking

674
00:27:51,890 --> 00:27:59,929
fast because I'm already telling you to

675
00:27:54,830 --> 00:28:06,168
go do something new already let's see

676
00:27:59,929 --> 00:28:08,149
yep so thank you this is me special

677
00:28:06,169 --> 00:28:09,200
thanks to most of the slides in here

678
00:28:08,149 --> 00:28:11,899
most of this concept was developed

679
00:28:09,200 --> 00:28:14,510
through research at the office of naval

680
00:28:11,899 --> 00:28:16,279
research including the titles of these

681
00:28:14,510 --> 00:28:17,960
programs and a lot of the future

682
00:28:16,279 --> 00:28:20,779
research if you're interested in this

683
00:28:17,960 --> 00:28:23,659
absolutely let us know we're looking for

684
00:28:20,779 --> 00:28:25,610
great ideas all the time we're looking

685
00:28:23,659 --> 00:28:28,340
for twists on this obviously this was

686
00:28:25,610 --> 00:28:30,469
just a high level conceptual overview of

687
00:28:28,340 --> 00:28:34,340
how we can get cyber resiliency out of

688
00:28:30,470 --> 00:28:36,620
things that exhibit inertia but there

689
00:28:34,340 --> 00:28:38,330
are other different physical constructs

690
00:28:36,620 --> 00:28:41,030
that are off-limits to an adversary or

691
00:28:38,330 --> 00:28:41,860
an attacker anything else that's

692
00:28:41,030 --> 00:28:43,570
inherited

693
00:28:41,860 --> 00:28:45,189
the laws of physics works in this

694
00:28:43,570 --> 00:28:46,780
construct we're looking at the next

695
00:28:45,190 --> 00:28:48,610
generation of ideas we're looking at the

696
00:28:46,780 --> 00:28:50,170
next generation of tactics and

697
00:28:48,610 --> 00:28:53,110
techniques for for these types of

698
00:28:50,170 --> 00:28:54,820
systems and with that I will get off the

699
00:28:53,110 --> 00:28:56,949
stage and entertain as many questions as

700
00:28:54,820 --> 00:29:11,919
you have because finished up rather

701
00:28:56,950 --> 00:29:16,450
early so you give an example of break in

702
00:29:11,920 --> 00:29:20,260
a car so we know that we could try to

703
00:29:16,450 --> 00:29:22,570
attack the brake control unit which

704
00:29:20,260 --> 00:29:24,549
actually sends messages with the

705
00:29:22,570 --> 00:29:26,710
frequency of or with the periodicity of

706
00:29:24,549 --> 00:29:29,530
10 milliseconds so what is the time

707
00:29:26,710 --> 00:29:32,169
limit that you give for the inertia to

708
00:29:29,530 --> 00:29:35,379
protect your car from getting damaged

709
00:29:32,169 --> 00:29:38,020
when you are actually disabling the

710
00:29:35,380 --> 00:29:39,280
brake control unit sure so every sub

711
00:29:38,020 --> 00:29:41,350
component of the system is gonna be

712
00:29:39,280 --> 00:29:43,360
different and this is where it turns

713
00:29:41,350 --> 00:29:44,830
from a resource exercise into more of

714
00:29:43,360 --> 00:29:47,799
what I would call a systems engineering

715
00:29:44,830 --> 00:29:49,210
exercise because of what works for the

716
00:29:47,799 --> 00:29:50,379
braking controller is not necessarily

717
00:29:49,210 --> 00:29:52,090
gonna work for the flight management

718
00:29:50,380 --> 00:29:54,040
system on an airplane is not necessarily

719
00:29:52,090 --> 00:29:56,409
gonna work for the control rod on a

720
00:29:54,040 --> 00:30:00,010
nuclear reactor what I can tell you

721
00:29:56,410 --> 00:30:01,270
though is that it it depends if you

722
00:30:00,010 --> 00:30:02,919
remember the slide that I had up there

723
00:30:01,270 --> 00:30:06,250
that had the upper bound and lower bound

724
00:30:02,919 --> 00:30:07,750
for your the length of the message Q the

725
00:30:06,250 --> 00:30:09,340
length of your message Q needs to be

726
00:30:07,750 --> 00:30:10,690
long enough so that you'll actually see

727
00:30:09,340 --> 00:30:14,049
the attack happen and you'll capture

728
00:30:10,690 --> 00:30:16,179
whatever message caused that that fault

729
00:30:14,049 --> 00:30:18,040
or the exploit to happen you want to be

730
00:30:16,179 --> 00:30:19,960
able to trap that needs to be long

731
00:30:18,040 --> 00:30:21,790
enough to trap it in the Q but it needs

732
00:30:19,960 --> 00:30:24,340
to be not so long that the inertia of

733
00:30:21,790 --> 00:30:28,330
the system can't absorb it right so for

734
00:30:24,340 --> 00:30:29,770
for the braking system of a car one it

735
00:30:28,330 --> 00:30:31,330
depends on if the cars moving but

736
00:30:29,770 --> 00:30:33,340
assuming the car is moving and it has

737
00:30:31,330 --> 00:30:34,960
some inertia you have a fair amount of

738
00:30:33,340 --> 00:30:41,350
time I don't have an exact number of

739
00:30:34,960 --> 00:30:44,230
milliseconds to tell you the we have

740
00:30:41,350 --> 00:30:47,379
done some work on some really fast

741
00:30:44,230 --> 00:30:49,540
moving systems the system in question is

742
00:30:47,380 --> 00:30:51,460
essentially an electromagnetic door lock

743
00:30:49,540 --> 00:30:52,960
which is actually akin to the

744
00:30:51,460 --> 00:30:55,040
electromagnetic system that holds the

745
00:30:52,960 --> 00:30:58,490
control rods at a nuclear reactor

746
00:30:55,040 --> 00:31:01,129
so if you turn the electromagnet off the

747
00:30:58,490 --> 00:31:04,730
weight will drop away so the question

748
00:31:01,130 --> 00:31:06,080
the the math in question there is how

749
00:31:04,730 --> 00:31:08,480
quickly do you need to be able to turn

750
00:31:06,080 --> 00:31:10,370
the electro magnet back on so that

751
00:31:08,480 --> 00:31:12,800
whatever weight is attached doesn't drop

752
00:31:10,370 --> 00:31:13,729
because once it drops once it exceeds

753
00:31:12,800 --> 00:31:15,950
some threshold

754
00:31:13,730 --> 00:31:18,710
you're never gonna pull it back if you

755
00:31:15,950 --> 00:31:21,140
turn it on that tends to be around 15 to

756
00:31:18,710 --> 00:31:23,150
25 milliseconds and we can still do that

757
00:31:21,140 --> 00:31:24,980
and that basically we can still

758
00:31:23,150 --> 00:31:28,430
accommodate that because it comes back

759
00:31:24,980 --> 00:31:29,930
to the fact that the IT systems that are

760
00:31:28,430 --> 00:31:32,780
that we're using to monitor are

761
00:31:29,930 --> 00:31:37,370
basically operating on 2 gigahertz cycle

762
00:31:32,780 --> 00:31:40,580
so for every 200 Hertz cycle of of the

763
00:31:37,370 --> 00:31:42,800
car control loop we have millions of

764
00:31:40,580 --> 00:31:44,810
shots at that clock cycle right so we

765
00:31:42,800 --> 00:31:50,990
see it many many many many many many

766
00:31:44,810 --> 00:31:55,040
times does that answer your question so

767
00:31:50,990 --> 00:31:57,560
it works on even systems that need to be

768
00:31:55,040 --> 00:32:08,810
that can only accommodate like a 10 to

769
00:31:57,560 --> 00:32:12,080
25 millisecond downtime so so I am aware

770
00:32:08,810 --> 00:32:14,560
of complex a control system where there

771
00:32:12,080 --> 00:32:17,449
is not one but multiple controllers

772
00:32:14,560 --> 00:32:20,210
interconnected in a specific way if

773
00:32:17,450 --> 00:32:22,850
every single controller adopts the

774
00:32:20,210 --> 00:32:25,340
scheme that you presented will you be

775
00:32:22,850 --> 00:32:29,090
concerned about the aggregated that in

776
00:32:25,340 --> 00:32:31,760
latency especially if you no control in

777
00:32:29,090 --> 00:32:35,389
you know inputs going through a cascade

778
00:32:31,760 --> 00:32:37,129
of controllers do you find this visa you

779
00:32:35,390 --> 00:32:40,070
know this would this scheme be feasible

780
00:32:37,130 --> 00:32:43,130
for deployment in a kind of a network of

781
00:32:40,070 --> 00:32:45,500
complex controllers situation so the

782
00:32:43,130 --> 00:32:47,810
short answer is yes and in fact the

783
00:32:45,500 --> 00:32:49,610
original name for this was Byzantine

784
00:32:47,810 --> 00:32:54,139
fault tolerance which was getting it

785
00:32:49,610 --> 00:32:56,600
exactly that scenario this hat what I

786
00:32:54,140 --> 00:32:58,790
will say is that this is just now

787
00:32:56,600 --> 00:33:01,340
starting to get out of the the research

788
00:32:58,790 --> 00:33:04,190
phase we really haven't seen this this

789
00:33:01,340 --> 00:33:06,230
concept deployed in commercial

790
00:33:04,190 --> 00:33:07,570
operational systems at the scale and

791
00:33:06,230 --> 00:33:13,060
complexity that you're discussing

792
00:33:07,570 --> 00:33:15,159
but the the early the early indications

793
00:33:13,060 --> 00:33:17,770
are that it scales exceedingly well

794
00:33:15,160 --> 00:33:19,930
right so long as you can keep one of

795
00:33:17,770 --> 00:33:23,740
those controllers sufficiently behind

796
00:33:19,930 --> 00:33:26,410
the other ones that delay is what gets

797
00:33:23,740 --> 00:33:30,940
breaks you out of that that cascading

798
00:33:26,410 --> 00:33:31,390
Byzantine fault that answer your

799
00:33:30,940 --> 00:33:36,910
question

800
00:33:31,390 --> 00:33:39,850
sort of you know a really nice talk very

801
00:33:36,910 --> 00:33:42,700
interesting topic so my question is how

802
00:33:39,850 --> 00:33:44,860
do you how do you determine the output

803
00:33:42,700 --> 00:33:48,100
from which controller you have to take

804
00:33:44,860 --> 00:33:50,830
that's my first question and my second

805
00:33:48,100 --> 00:33:54,189
question is or will there be a scenario

806
00:33:50,830 --> 00:33:58,060
sometimes that the crash gets delayed

807
00:33:54,190 --> 00:34:00,120
that means it doesn't crash fast and the

808
00:33:58,060 --> 00:34:03,940
attacker has control over one of the

809
00:34:00,120 --> 00:34:06,280
controller and can he inject some

810
00:34:03,940 --> 00:34:11,050
malicious activity on the system or

811
00:34:06,280 --> 00:34:12,699
something like that so maybe so let me

812
00:34:11,050 --> 00:34:18,010
go back to your first question restate

813
00:34:12,699 --> 00:34:21,399
your first question again like how do

814
00:34:18,010 --> 00:34:25,420
you choose the output out of the three C

815
00:34:21,400 --> 00:34:27,820
0 C 1 and C T so in the short answer is

816
00:34:25,420 --> 00:34:31,810
it doesn't really matter and it doesn't

817
00:34:27,820 --> 00:34:35,680
really matter because you we're you're

818
00:34:31,810 --> 00:34:37,090
not really trying to figure out what bad

819
00:34:35,679 --> 00:34:39,429
traffic looks like compared to good

820
00:34:37,090 --> 00:34:41,350
traffic essentially by making the

821
00:34:39,429 --> 00:34:44,649
controllers brittle and having them

822
00:34:41,350 --> 00:34:47,889
crash on a sufficient anomaly ie

823
00:34:44,650 --> 00:34:49,840
malicious message the the crash of the

824
00:34:47,889 --> 00:34:53,080
system happens as a result of the

825
00:34:49,840 --> 00:34:55,870
brittleness of those controllers and

826
00:34:53,080 --> 00:34:57,580
then the crash also is the canary that

827
00:34:55,870 --> 00:34:58,900
tells you that something bad happened

828
00:34:57,580 --> 00:35:01,270
that there's a nauseous message on the

829
00:34:58,900 --> 00:35:03,430
line so the only thing that matters is

830
00:35:01,270 --> 00:35:06,270
that you keep one of the controllers on

831
00:35:03,430 --> 00:35:10,120
a delay to keep it safe and clean

832
00:35:06,270 --> 00:35:12,540
otherwise they're what's not pictured in

833
00:35:10,120 --> 00:35:15,490
that diagram that would be in a real

834
00:35:12,540 --> 00:35:16,990
operational commercial setting is is

835
00:35:15,490 --> 00:35:19,009
another controller that it would be

836
00:35:16,990 --> 00:35:21,259
out-of-band that is monitoring for the

837
00:35:19,010 --> 00:35:22,730
trash and then sending the messages to

838
00:35:21,260 --> 00:35:25,280
the controllers to either reboot and

839
00:35:22,730 --> 00:35:26,930
recover so that one's not showed it's

840
00:35:25,280 --> 00:35:29,990
it's sort of implicit in the diagram

841
00:35:26,930 --> 00:35:31,879
that so long as you have that it doesn't

842
00:35:29,990 --> 00:35:34,819
really matter because of the the race

843
00:35:31,880 --> 00:35:37,220
condition if you will that exists under

844
00:35:34,820 --> 00:35:39,380
normal operation with with non malicious

845
00:35:37,220 --> 00:35:40,700
traffic controller 1 and controller two

846
00:35:39,380 --> 00:35:42,350
are gonna be feeding you output

847
00:35:40,700 --> 00:35:44,060
controller 3 is always going to be

848
00:35:42,350 --> 00:35:47,240
behind so the traffic is likely always

849
00:35:44,060 --> 00:35:49,070
going to be dropped controller 3 is only

850
00:35:47,240 --> 00:35:51,859
going to be executing the messages if

851
00:35:49,070 --> 00:35:54,680
controller of 0 and controller 1 are not

852
00:35:51,860 --> 00:35:58,160
present that make sense yeah so you have

853
00:35:54,680 --> 00:36:00,620
the priority the power 0 0 1 2 okay yeah

854
00:35:58,160 --> 00:36:02,750
it's just what sort of without any loss

855
00:36:00,620 --> 00:36:04,580
of generality we're putting them up and

856
00:36:02,750 --> 00:36:07,330
calling the the delay queue on the

857
00:36:04,580 --> 00:36:09,920
bottom to answer your other question

858
00:36:07,330 --> 00:36:11,330
your other question is exactly the type

859
00:36:09,920 --> 00:36:14,810
of scenario that we're trying to prevent

860
00:36:11,330 --> 00:36:17,090
right so if an attacker or an adversary

861
00:36:14,810 --> 00:36:20,720
can actually slip a message in this is

862
00:36:17,090 --> 00:36:23,330
able to compromise both c0 and c1 that

863
00:36:20,720 --> 00:36:25,459
essentially foils the approach so the

864
00:36:23,330 --> 00:36:27,259
the presumption in our approach one of

865
00:36:25,460 --> 00:36:29,960
the initial assumptions is that we can

866
00:36:27,260 --> 00:36:32,780
make those controllers brittle enough so

867
00:36:29,960 --> 00:36:34,760
that any malicious message that

868
00:36:32,780 --> 00:36:37,310
compromises one will crash the other one

869
00:36:34,760 --> 00:36:39,650
this isn't effectively immediately it

870
00:36:37,310 --> 00:36:41,299
also presumes that the diversification

871
00:36:39,650 --> 00:36:43,790
of those controllers is sufficient that

872
00:36:41,300 --> 00:36:45,860
there's not a fixed point in the code

873
00:36:43,790 --> 00:36:47,600
that is exploitable by the same piece of

874
00:36:45,860 --> 00:36:49,370
code across all the controllers because

875
00:36:47,600 --> 00:36:52,000
that would give you a common mode

876
00:36:49,370 --> 00:36:54,410
failure so if during the diversification

877
00:36:52,000 --> 00:36:57,050
there was a large swath of code that was

878
00:36:54,410 --> 00:36:58,850
left untouched obviously an attacker if

879
00:36:57,050 --> 00:37:01,160
they found enough Rob gadgets or they

880
00:36:58,850 --> 00:37:02,900
found enough exploitable material in the

881
00:37:01,160 --> 00:37:04,549
part that was not moved across all those

882
00:37:02,900 --> 00:37:06,260
components you'd still have a common

883
00:37:04,550 --> 00:37:07,790
mode failure so those are the

884
00:37:06,260 --> 00:37:09,530
assumptions going is that you are

885
00:37:07,790 --> 00:37:12,890
sufficiently diversified and that you

886
00:37:09,530 --> 00:37:15,130
are sufficiently brittle so you have a

887
00:37:12,890 --> 00:37:18,140
detection system and then you switch to

888
00:37:15,130 --> 00:37:20,660
the detection system is essentially just

889
00:37:18,140 --> 00:37:22,490
detecting that there was a crash right

890
00:37:20,660 --> 00:37:24,140
so you don't actually need this this

891
00:37:22,490 --> 00:37:26,870
actually preclude it's actually a lot

892
00:37:24,140 --> 00:37:29,299
simpler than a lot of folks initially

893
00:37:26,870 --> 00:37:31,279
observe it to be because you don't need

894
00:37:29,300 --> 00:37:32,160
an intrusion detection system you don't

895
00:37:31,280 --> 00:37:33,600
need anything

896
00:37:32,160 --> 00:37:35,549
essentially using the the crashed

897
00:37:33,600 --> 00:37:37,470
component as the canary that tells you

898
00:37:35,550 --> 00:37:39,300
that something bad happened and then you

899
00:37:37,470 --> 00:37:41,310
don't even really care what bad thing

900
00:37:39,300 --> 00:37:43,590
happened because the assumption is that

901
00:37:41,310 --> 00:37:45,240
it was trapped in that delay queue and

902
00:37:43,590 --> 00:37:46,860
then you're gonna save it off or you're

903
00:37:45,240 --> 00:37:47,609
gonna prevent that bad message from

904
00:37:46,860 --> 00:37:49,350
getting in there you don't even

905
00:37:47,610 --> 00:37:51,530
necessarily need to care what it is you

906
00:37:49,350 --> 00:38:40,110
just want to keep that third one cleaned

907
00:37:51,530 --> 00:38:42,690
okay correct me let me go back to let me

908
00:38:40,110 --> 00:38:44,190
go back to this one right so that the

909
00:38:42,690 --> 00:38:45,990
scenario that you're describing which

910
00:38:44,190 --> 00:38:47,670
which I sort of refer to as sort of the

911
00:38:45,990 --> 00:38:49,950
the most nefarious that were the worst

912
00:38:47,670 --> 00:38:52,080
of all possible exploits which is

913
00:38:49,950 --> 00:38:54,180
there's an exploit that doesn't cause a

914
00:38:52,080 --> 00:38:56,819
crash but it does cause some unintended

915
00:38:54,180 --> 00:38:58,500
behavior I referred to it as a low slow

916
00:38:56,820 --> 00:38:59,730
sensor drift where you're not going to

917
00:38:58,500 --> 00:39:01,740
crash the system but you're just gonna

918
00:38:59,730 --> 00:39:04,440
slightly perturb the sensor reading

919
00:39:01,740 --> 00:39:06,540
that's not the only way that's not the

920
00:39:04,440 --> 00:39:09,390
only exploit there but the defense

921
00:39:06,540 --> 00:39:11,040
against that is to actually employ some

922
00:39:09,390 --> 00:39:13,710
sort of out-of-band simulator that

923
00:39:11,040 --> 00:39:15,690
allows you to essentially throw the flag

924
00:39:13,710 --> 00:39:18,300
and call a crash even if there wasn't a

925
00:39:15,690 --> 00:39:21,540
physical crash right and and you're a

926
00:39:18,300 --> 00:39:24,030
lot.you you're enabled to do that only

927
00:39:21,540 --> 00:39:26,070
if you have some out-of-band thing that

928
00:39:24,030 --> 00:39:27,960
tells you the difference between what

929
00:39:26,070 --> 00:39:30,090
normal and what your sensor readings say

930
00:39:27,960 --> 00:39:34,350
so that's the need for this this

931
00:39:30,090 --> 00:39:36,510
simulator if I was expecting you to

932
00:39:34,350 --> 00:39:38,250
mention blue box because that is oh my

933
00:39:36,510 --> 00:39:39,720
oh my blue box because that is a

934
00:39:38,250 --> 00:39:42,450
that is a perdu that

935
00:39:39,720 --> 00:39:44,040
effort since we're at Purdue we can talk

936
00:39:42,450 --> 00:39:45,470
about blue box because mu box does

937
00:39:44,040 --> 00:39:48,529
exactly that

938
00:39:45,470 --> 00:39:54,450
hey did I mention this call blue box

939
00:39:48,530 --> 00:39:58,650
thank you yeah yeah go okay you in the

940
00:39:54,450 --> 00:40:02,359
back all right so I have three questions

941
00:39:58,650 --> 00:40:05,130
and essentially the first one a somehow

942
00:40:02,359 --> 00:40:07,380
it's the same as doing a house earlier

943
00:40:05,130 --> 00:40:10,290
like how could you guarantee this fast

944
00:40:07,380 --> 00:40:12,060
crash I mean I thinking one extreme you

945
00:40:10,290 --> 00:40:14,670
scenario you just put assert and a

946
00:40:12,060 --> 00:40:16,078
panicky into each instruction like as

947
00:40:14,670 --> 00:40:18,810
long as you see something normal is you

948
00:40:16,079 --> 00:40:20,640
just crash yep so but I I don't think

949
00:40:18,810 --> 00:40:23,130
that is the way to do this control or

950
00:40:20,640 --> 00:40:25,560
programming second question is like how

951
00:40:23,130 --> 00:40:27,900
fast you need to do the packet filtering

952
00:40:25,560 --> 00:40:30,660
or this message filtering I think it

953
00:40:27,900 --> 00:40:33,510
depends on like how many features you

954
00:40:30,660 --> 00:40:36,270
need to fingerprint a malicious message

955
00:40:33,510 --> 00:40:38,099
so if you have like a big message then

956
00:40:36,270 --> 00:40:39,599
you probably only need like to live the

957
00:40:38,099 --> 00:40:41,339
number memory to memorize everything

958
00:40:39,599 --> 00:40:44,940
right I mean well if you think about

959
00:40:41,339 --> 00:40:46,950
like denial service attack in network

960
00:40:44,940 --> 00:40:49,829
security if you have to filter like a

961
00:40:46,950 --> 00:40:51,540
mewling of different IP addresses you

962
00:40:49,829 --> 00:40:53,849
probably need to build a bloom filter

963
00:40:51,540 --> 00:40:55,529
like you know to do something crazy

964
00:40:53,849 --> 00:40:57,810
yeah so I wonder like how fast you need

965
00:40:55,530 --> 00:40:59,400
to do this like malicious a message of

966
00:40:57,810 --> 00:41:02,069
filtering so that's the second question

967
00:40:59,400 --> 00:41:03,869
how fast or how how many do you need to

968
00:41:02,069 --> 00:41:05,940
remember yes yes pretty much the same

969
00:41:03,869 --> 00:41:09,599
the last question is you mentioned these

970
00:41:05,940 --> 00:41:13,079
auto fan simulators does that mean like

971
00:41:09,599 --> 00:41:17,430
you need your controller to be equipped

972
00:41:13,079 --> 00:41:19,050
with some high end like no CPU or MCU or

973
00:41:17,430 --> 00:41:21,029
lot because like I don't think you are

974
00:41:19,050 --> 00:41:22,050
able to do this simulation on the

975
00:41:21,030 --> 00:41:23,190
controller itself

976
00:41:22,050 --> 00:41:25,050
no you wouldn't want to do the

977
00:41:23,190 --> 00:41:27,060
simulation on that you could but I don't

978
00:41:25,050 --> 00:41:29,220
you can you can you you can but you

979
00:41:27,060 --> 00:41:31,259
don't necessarily need to right so most

980
00:41:29,220 --> 00:41:33,089
of the implementations to date of an

981
00:41:31,260 --> 00:41:35,670
out-of-band simulator are literally out

982
00:41:33,089 --> 00:41:37,078
of and from okay from the controller it

983
00:41:35,670 --> 00:41:39,690
could be even as simple as like a

984
00:41:37,079 --> 00:41:41,910
Raspberry Pi that contains a a

985
00:41:39,690 --> 00:41:45,180
comparator that is going to run it past

986
00:41:41,910 --> 00:41:50,460
a little bit whatever you look yeah okay

987
00:41:45,180 --> 00:41:52,810
I'll refer you to blue box but it could

988
00:41:50,460 --> 00:41:55,760
be it could be as simple and naive

989
00:41:52,810 --> 00:41:58,220
as a lookup table or a linear

990
00:41:55,760 --> 00:42:00,230
extrapolation of position or something

991
00:41:58,220 --> 00:42:02,899
like that and then you have a comparator

992
00:42:00,230 --> 00:42:04,940
of the output that is coming from your

993
00:42:02,900 --> 00:42:07,580
or the input that is coming from your

994
00:42:04,940 --> 00:42:09,290
sensor and what the predicted value from

995
00:42:07,580 --> 00:42:10,460
your simulator is and when there's a

996
00:42:09,290 --> 00:42:13,250
large enough they step and say you just

997
00:42:10,460 --> 00:42:15,470
you call that a virtual fault and you I

998
00:42:13,250 --> 00:42:17,480
said you didn't see a crash you call it

999
00:42:15,470 --> 00:42:19,100
a crash and you reboot and recover yeah

1000
00:42:17,480 --> 00:42:21,830
I was thinking about for example armed

1001
00:42:19,100 --> 00:42:24,140
beak beegley told like you have cortex-m

1002
00:42:21,830 --> 00:42:25,850
you have cortex aaand eyes SOC at the

1003
00:42:24,140 --> 00:42:27,890
same time we probably can't run the

1004
00:42:25,850 --> 00:42:29,029
simulation on the cortex a8 I mean while

1005
00:42:27,890 --> 00:42:31,370
the cortex that means is doing the

1006
00:42:29,030 --> 00:42:34,790
controller job yep so and even though

1007
00:42:31,370 --> 00:42:36,200
those are the same there they're big and

1008
00:42:34,790 --> 00:42:39,800
little that does give you a little bit

1009
00:42:36,200 --> 00:42:41,720
of diversity to your second question

1010
00:42:39,800 --> 00:42:43,790
about like how many do you need to

1011
00:42:41,720 --> 00:42:45,169
remember yeah again that's another one

1012
00:42:43,790 --> 00:42:47,270
that probably falls into the system

1013
00:42:45,170 --> 00:42:49,580
engineering category it's going to

1014
00:42:47,270 --> 00:42:51,410
depend on the system and it's also gonna

1015
00:42:49,580 --> 00:42:53,660
depend on your risk tolerance right so

1016
00:42:51,410 --> 00:42:55,310
it's basically how many unique messages

1017
00:42:53,660 --> 00:42:58,129
would you want the adversary to have to

1018
00:42:55,310 --> 00:43:00,770
come up with in a row to be able to

1019
00:42:58,130 --> 00:43:03,590
denial-of-service you right if ten is

1020
00:43:00,770 --> 00:43:06,920
sufficient then just remember ten right

1021
00:43:03,590 --> 00:43:08,420
if you need ten thousands then you need

1022
00:43:06,920 --> 00:43:10,400
to remember ten thousand messages that

1023
00:43:08,420 --> 00:43:12,980
you want to blacklist and then you could

1024
00:43:10,400 --> 00:43:15,560
put those in and essentially a ring

1025
00:43:12,980 --> 00:43:18,080
buffer so that like once you remember a

1026
00:43:15,560 --> 00:43:19,520
thousand you just you forget and you

1027
00:43:18,080 --> 00:43:20,540
just fill up the queue as you go so

1028
00:43:19,520 --> 00:43:22,880
you're only gonna remember the most

1029
00:43:20,540 --> 00:43:23,870
recent thousand what it's gonna be

1030
00:43:22,880 --> 00:43:27,350
whatever works for your particular

1031
00:43:23,870 --> 00:43:28,910
system so there's not unfortunately

1032
00:43:27,350 --> 00:43:30,770
there's not a there's not a cut and

1033
00:43:28,910 --> 00:43:32,660
right answer for that one but like it

1034
00:43:30,770 --> 00:43:35,180
can be tricky because you really need to

1035
00:43:32,660 --> 00:43:37,009
fast back go to throw terrain you do

1036
00:43:35,180 --> 00:43:39,020
need fast packet filtering so you do

1037
00:43:37,010 --> 00:43:40,730
that one will require you to have some

1038
00:43:39,020 --> 00:43:43,910
sort of interrupt or some sort of mana

1039
00:43:40,730 --> 00:43:46,820
nestled on the bus you can do that man

1040
00:43:43,910 --> 00:43:48,890
in the middle on the bus that shim in

1041
00:43:46,820 --> 00:43:50,960
software you can also do it in hardware

1042
00:43:48,890 --> 00:43:54,890
nice so there research efforts underway

1043
00:43:50,960 --> 00:43:57,110
that will you know for PLC for pocs and

1044
00:43:54,890 --> 00:43:58,609
industrial control systems for those

1045
00:43:57,110 --> 00:44:01,220
types of controllers you could actually

1046
00:43:58,610 --> 00:44:03,800
have a hardware shim that would

1047
00:44:01,220 --> 00:44:04,740
essentially piggyback there also if

1048
00:44:03,800 --> 00:44:07,140
that's either

1049
00:44:04,740 --> 00:44:09,299
unpalatable or unfeasible there's a

1050
00:44:07,140 --> 00:44:16,379
virtualized software shims that you

1051
00:44:09,300 --> 00:44:18,900
could do yes yeah particularly mention

1052
00:44:16,380 --> 00:44:21,869
about the cause if the engine control

1053
00:44:18,900 --> 00:44:23,940
unit dies of course nowadays the

1054
00:44:21,869 --> 00:44:26,369
probably steering unit and even the

1055
00:44:23,940 --> 00:44:28,980
accelerated everything is sensor control

1056
00:44:26,369 --> 00:44:31,200
yep thanks God they haven't gone to them

1057
00:44:28,980 --> 00:44:33,750
to the braking system because if that

1058
00:44:31,200 --> 00:44:36,359
one was the sense it would difficult but

1059
00:44:33,750 --> 00:44:39,300
what happens if you are at the turn or

1060
00:44:36,360 --> 00:44:41,670
you are changing lanes and then your

1061
00:44:39,300 --> 00:44:45,420
engine control unit dies for whatever

1062
00:44:41,670 --> 00:44:47,970
reason this will never protect you

1063
00:44:45,420 --> 00:44:49,680
against purely mechanical failure right

1064
00:44:47,970 --> 00:44:52,140
if the engine control system goes down

1065
00:44:49,680 --> 00:44:53,790
or the engine goes down that's like this

1066
00:44:52,140 --> 00:44:58,618
will never protect you from abject

1067
00:44:53,790 --> 00:45:00,690
failure like that the state of the

1068
00:44:58,619 --> 00:45:02,369
system so whether you're in a turn or

1069
00:45:00,690 --> 00:45:04,320
whether you're braking or whether you're

1070
00:45:02,369 --> 00:45:05,880
accelerating won't really matter because

1071
00:45:04,320 --> 00:45:07,470
the inertia in the system will still be

1072
00:45:05,880 --> 00:45:09,960
the same and you'll be able if you're

1073
00:45:07,470 --> 00:45:13,520
able to absorb the fault in the inertia

1074
00:45:09,960 --> 00:45:16,080
of the system it won't matter what

1075
00:45:13,520 --> 00:45:18,780
specific instantaneous state you're in

1076
00:45:16,080 --> 00:45:21,330
does that make sense I'm doing if you

1077
00:45:18,780 --> 00:45:23,220
are turning and you have you have the

1078
00:45:21,330 --> 00:45:25,470
momentum it's out of your control god

1079
00:45:23,220 --> 00:45:28,500
you cannot turn if it's just sensor unit

1080
00:45:25,470 --> 00:45:31,200
sensor control or don't care about the

1081
00:45:28,500 --> 00:45:33,359
acceleration good tax it is not working

1082
00:45:31,200 --> 00:45:35,580
but I'm talking about turning or right

1083
00:45:33,359 --> 00:45:38,430
now of course it is mechanical system

1084
00:45:35,580 --> 00:45:42,029
for braking but the way that they

1085
00:45:38,430 --> 00:45:44,790
control it is at nowadays you basically

1086
00:45:42,030 --> 00:45:46,320
you say by Google whether they attend

1087
00:45:44,790 --> 00:45:49,290
was something but if somebody changing

1088
00:45:46,320 --> 00:45:51,869
learn and changing currents lanes or

1089
00:45:49,290 --> 00:45:53,580
you're turning you are not in a channel

1090
00:45:51,869 --> 00:45:55,770
or whatever basically you lose the

1091
00:45:53,580 --> 00:45:58,290
engine control unit basically lots of

1092
00:45:55,770 --> 00:46:01,710
things are controlled by the engine many

1093
00:45:58,290 --> 00:46:03,990
toys you lose a lot of control so you do

1094
00:46:01,710 --> 00:46:06,960
lose control but the whole premise of

1095
00:46:03,990 --> 00:46:09,899
the concept is that you want to shrink

1096
00:46:06,960 --> 00:46:12,060
the window of the uncontrolled time down

1097
00:46:09,900 --> 00:46:15,300
to small enough where the inertia of the

1098
00:46:12,060 --> 00:46:17,400
system can actually absorb that fault in

1099
00:46:15,300 --> 00:46:18,390
the original example that I gave of like

1100
00:46:17,400 --> 00:46:20,250
the braking

1101
00:46:18,390 --> 00:46:21,839
taking on a car if it's straight line

1102
00:46:20,250 --> 00:46:23,700
breaking you probably won't ever notice

1103
00:46:21,839 --> 00:46:26,250
if you're breaking while you're turning

1104
00:46:23,700 --> 00:46:29,160
the car may deviate from its original

1105
00:46:26,250 --> 00:46:31,410
intended target but should be able to

1106
00:46:29,160 --> 00:46:33,960
recover so it's not gonna go exactly

1107
00:46:31,410 --> 00:46:35,670
where you had planned for it to go but

1108
00:46:33,960 --> 00:46:37,500
because of the inertia of the system it

1109
00:46:35,670 --> 00:46:40,140
should be able to absorb it and get you

1110
00:46:37,500 --> 00:46:42,420
back on track without a large deviation

1111
00:46:40,140 --> 00:46:44,190
and this is where it becomes yet another

1112
00:46:42,420 --> 00:46:45,450
system is engineering problem where I

1113
00:46:44,190 --> 00:46:47,309
would kick it to the system engineering

1114
00:46:45,450 --> 00:46:50,519
community to essentially give you that

1115
00:46:47,309 --> 00:46:52,890
safety envelope and create your your

1116
00:46:50,519 --> 00:46:55,229
window the size of that message queue

1117
00:46:52,890 --> 00:46:57,288
such that you never deviate from the

1118
00:46:55,230 --> 00:46:58,559
safety envelope of either plus or minus

1119
00:46:57,289 --> 00:47:00,930
yo

1120
00:46:58,559 --> 00:47:02,760
several feet I mean if there are some

1121
00:47:00,930 --> 00:47:05,190
other people next to you it is when you

1122
00:47:02,760 --> 00:47:07,740
are just the middle of nowhere that's

1123
00:47:05,190 --> 00:47:09,359
okay but if you have people just run

1124
00:47:07,740 --> 00:47:11,578
with you 60 miles per office have any

1125
00:47:09,359 --> 00:47:14,130
idea whatever right yeah so that's gonna

1126
00:47:11,579 --> 00:47:15,809
be a difference to it so just to give

1127
00:47:14,130 --> 00:47:17,460
you some specific numbers we're we're

1128
00:47:15,809 --> 00:47:20,579
usually talking about we're usually

1129
00:47:17,460 --> 00:47:23,670
talking in milliseconds 20 milliseconds

1130
00:47:20,579 --> 00:47:26,400
up to about 200 milliseconds so 1/5 of a

1131
00:47:23,670 --> 00:47:29,160
second all the way down to you know 10

1132
00:47:26,400 --> 00:47:31,079
20 milliseconds is really all that is

1133
00:47:29,160 --> 00:47:33,390
required to be able to recover some of

1134
00:47:31,079 --> 00:47:35,670
these controllers so in that period of

1135
00:47:33,390 --> 00:47:38,098
time even if you're going 60 miles an

1136
00:47:35,670 --> 00:47:39,900
hour and you're in the middle of a turn

1137
00:47:38,099 --> 00:47:41,880
and you're breaking the inertia of the

1138
00:47:39,900 --> 00:47:43,920
system is still gonna be able to to

1139
00:47:41,880 --> 00:47:46,319
absorb most of the fault and while you

1140
00:47:43,920 --> 00:47:48,059
may not be exactly where your intended

1141
00:47:46,319 --> 00:47:50,038
steering target would have been you're

1142
00:47:48,059 --> 00:47:51,299
not gonna be that far off to be so far

1143
00:47:50,039 --> 00:47:53,730
out of your lane that it's gonna be

1144
00:47:51,299 --> 00:47:55,500
unsafe but this is this is the kind of

1145
00:47:53,730 --> 00:47:58,859
question that I think falls into that

1146
00:47:55,500 --> 00:48:00,119
that systems engineering of when you're

1147
00:47:58,859 --> 00:48:01,769
gonna actually put this on a very

1148
00:48:00,119 --> 00:48:06,119
specific system with very specific

1149
00:48:01,769 --> 00:48:08,038
safety considerations and tolerances you

1150
00:48:06,119 --> 00:48:14,519
need to figure out what that what that

1151
00:48:08,039 --> 00:48:16,740
envelope looks like yeah thanks for

1152
00:48:14,519 --> 00:48:21,959
asking questions by the way like thanks

1153
00:48:16,740 --> 00:48:24,118
for not just being like silent okay the

1154
00:48:21,960 --> 00:48:27,509
question is regarding you are mentioning

1155
00:48:24,119 --> 00:48:30,359
about the fast reboot yep so what if I

1156
00:48:27,509 --> 00:48:32,130
have a persistent threat if you have a

1157
00:48:30,359 --> 00:48:34,950
persistent threat all bets are off

1158
00:48:32,130 --> 00:48:37,170
right so another thing that this

1159
00:48:34,950 --> 00:48:38,640
approach is not going to protect you

1160
00:48:37,170 --> 00:48:40,380
against is if there's some sort of

1161
00:48:38,640 --> 00:48:42,990
hardware Trojan that is baked into the

1162
00:48:40,380 --> 00:48:44,820
supply chain that is always there and

1163
00:48:42,990 --> 00:48:47,970
was there before you implemented this

1164
00:48:44,820 --> 00:48:51,780
this concept this will provide you a

1165
00:48:47,970 --> 00:48:54,089
little bit of resilience to it but that

1166
00:48:51,780 --> 00:48:57,810
supply chain vulnerability in the

1167
00:48:54,090 --> 00:48:59,910
hardware is akin to a common mode

1168
00:48:57,810 --> 00:49:03,650
failure right if it's in every single

1169
00:48:59,910 --> 00:49:03,649
one of the chips all bets are off

1170
00:49:05,270 --> 00:49:14,460
yeah so when it comes to like comparing

1171
00:49:12,330 --> 00:49:16,680
against out-of-band sensor you're

1172
00:49:14,460 --> 00:49:20,550
comparing within a range of Tolerance

1173
00:49:16,680 --> 00:49:24,390
correct yep what if an attacker brings

1174
00:49:20,550 --> 00:49:26,220
in your sensor information to like with

1175
00:49:24,390 --> 00:49:28,200
while meeting the range of tolerance to

1176
00:49:26,220 --> 00:49:29,959
the point where you're getting to a

1177
00:49:28,200 --> 00:49:32,939
physical site damage for example

1178
00:49:29,960 --> 00:49:35,010
reducing the timings in an engine so

1179
00:49:32,940 --> 00:49:38,130
that you're running leaner and then the

1180
00:49:35,010 --> 00:49:39,840
engine will more likely fail faster how

1181
00:49:38,130 --> 00:49:44,520
will this sum handle that kind of an

1182
00:49:39,840 --> 00:49:45,990
attack so the it will it will the short

1183
00:49:44,520 --> 00:49:50,490
answer is it will handle it however it

1184
00:49:45,990 --> 00:49:54,959
handles it this one is is mostly focused

1185
00:49:50,490 --> 00:49:57,540
on preventing unsafe behavior of the

1186
00:49:54,960 --> 00:50:00,930
physical system right so it's not as

1187
00:49:57,540 --> 00:50:03,600
focused on preventing wear and tear on

1188
00:50:00,930 --> 00:50:06,270
the individual components if that makes

1189
00:50:03,600 --> 00:50:07,140
sense so if you have an attack say which

1190
00:50:06,270 --> 00:50:09,330
I think is the one that you're

1191
00:50:07,140 --> 00:50:10,830
describing let me know if I'm putting

1192
00:50:09,330 --> 00:50:12,920
words in your mouth but I think the

1193
00:50:10,830 --> 00:50:15,480
attack you're describing is some sort of

1194
00:50:12,920 --> 00:50:18,380
attack that would not take you out of

1195
00:50:15,480 --> 00:50:21,150
the safety envelope but would cause

1196
00:50:18,380 --> 00:50:23,070
extra wear and tear on the components

1197
00:50:21,150 --> 00:50:26,550
and maybe cause them to fail faster or

1198
00:50:23,070 --> 00:50:29,160
use more fuel or be more costly is that

1199
00:50:26,550 --> 00:50:34,070
is that right yeah so so long as those

1200
00:50:29,160 --> 00:50:37,230
attacks so if those attacks did not

1201
00:50:34,070 --> 00:50:41,630
cause the physical system to behave in

1202
00:50:37,230 --> 00:50:44,430
an unsafe manner in the physical world

1203
00:50:41,630 --> 00:50:45,250
this approach is gonna let them continue

1204
00:50:44,430 --> 00:50:49,210
right

1205
00:50:45,250 --> 00:50:51,250
if those approaches do manifest

1206
00:50:49,210 --> 00:50:53,080
themselves as unsafe behavior of the

1207
00:50:51,250 --> 00:50:55,119
physical system this one will catch it

1208
00:50:53,080 --> 00:50:56,859
and this again is where I would kick it

1209
00:50:55,119 --> 00:50:58,540
to more of a system engineering exercise

1210
00:50:56,859 --> 00:51:00,580
because you could actually bake that in

1211
00:50:58,540 --> 00:51:02,740
you could bake those in as additional

1212
00:51:00,580 --> 00:51:07,900
requirements so if you know for example

1213
00:51:02,740 --> 00:51:10,509
that going back to the car exercise if

1214
00:51:07,900 --> 00:51:11,770
if the ARP if additional rpm is gonna

1215
00:51:10,510 --> 00:51:13,930
cause additional wear and tear on the

1216
00:51:11,770 --> 00:51:16,000
car you may be able to bake that into

1217
00:51:13,930 --> 00:51:18,009
your your message queue to keep that at

1218
00:51:16,000 --> 00:51:20,140
a minimum almost to talk about like for

1219
00:51:18,010 --> 00:51:22,750
example fuel air for your ratio if you

1220
00:51:20,140 --> 00:51:25,420
run leaner you're more likely to get to

1221
00:51:22,750 --> 00:51:27,460
the point where your car will just die

1222
00:51:25,420 --> 00:51:30,220
short Midway and you won't be detected

1223
00:51:27,460 --> 00:51:33,369
for like a long time but it will double

1224
00:51:30,220 --> 00:51:35,049
the costs yep yeah yeah so I think

1225
00:51:33,369 --> 00:51:36,599
that's that is a consideration that you

1226
00:51:35,050 --> 00:51:39,550
could bake in when you're trying to

1227
00:51:36,599 --> 00:51:41,200
calculate the the message queue and the

1228
00:51:39,550 --> 00:51:43,359
safety envelope that you want to be able

1229
00:51:41,200 --> 00:51:46,598
to operate the system in so you could

1230
00:51:43,359 --> 00:51:48,670
you could extend the research to not

1231
00:51:46,599 --> 00:51:50,260
just look at the unsafe conditions of

1232
00:51:48,670 --> 00:51:53,410
the physical system but also anything

1233
00:51:50,260 --> 00:51:54,640
that would contribute to long-term

1234
00:51:53,410 --> 00:51:57,690
maintenance and wear and tear and

1235
00:51:54,640 --> 00:51:57,690
additional cost

1236
00:52:07,990 --> 00:52:13,388
you

1237
00:52:08,830 --> 00:52:13,389
[Applause]

1238
00:52:18,850 --> 00:52:20,910
you

