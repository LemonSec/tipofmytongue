1
00:00:09,030 --> 00:00:12,750
good evening everyone today I'm very

2
00:00:11,530 --> 00:00:15,989
happy to

3
00:00:12,750 --> 00:00:18,060
my colleague Jeremiah blocky Jeremiah is

4
00:00:15,990 --> 00:00:20,009
a theoretical computer scientist who is

5
00:00:18,060 --> 00:00:22,490
interested in applying fundamental ideas

6
00:00:20,010 --> 00:00:25,830
from computer science to address

7
00:00:22,490 --> 00:00:28,439
practical problems in usable privacy and

8
00:00:25,830 --> 00:00:31,528
security Jeremiah's research interest

9
00:00:28,439 --> 00:00:34,260
span several topics for example

10
00:00:31,529 --> 00:00:37,949
developing usable authentication

11
00:00:34,260 --> 00:00:39,870
protocols for humans multiple exploring

12
00:00:37,949 --> 00:00:41,900
easy ways for humans to create and

13
00:00:39,870 --> 00:00:44,430
remember multiple strong passwords and

14
00:00:41,900 --> 00:00:46,199
designing secure cryptographic protocols

15
00:00:44,430 --> 00:00:48,690
that are so simple that they can be run

16
00:00:46,200 --> 00:00:52,680
by humans prior to joining our

17
00:00:48,690 --> 00:00:55,110
department Jeremiah did his PhD from CMU

18
00:00:52,680 --> 00:00:58,140
and was also a postdoc at Microsoft

19
00:00:55,110 --> 00:01:00,570
Research New England today Jeremiah will

20
00:00:58,140 --> 00:01:02,610
be talking about usable and secure human

21
00:01:00,570 --> 00:01:04,530
authentication all right thanks for the

22
00:01:02,610 --> 00:01:06,780
introduction so I'm going to talk to you

23
00:01:04,530 --> 00:01:10,590
today about creating and remembering

24
00:01:06,780 --> 00:01:14,310
multiple passwords so this talk is on

25
00:01:10,590 --> 00:01:16,560
the collection of works with some of my

26
00:01:14,310 --> 00:01:18,450
co-authors have been fortunate to be a

27
00:01:16,560 --> 00:01:20,850
path of opportunity to work with a lot

28
00:01:18,450 --> 00:01:23,820
of great people over the years so shown

29
00:01:20,850 --> 00:01:27,240
up here on the slide we have my advisors

30
00:01:23,820 --> 00:01:30,029
Manuel Blum and Anupam data and saranga

31
00:01:27,240 --> 00:01:32,789
commander II who was a grad student with

32
00:01:30,030 --> 00:01:37,710
me at Carnegie Mellon and his adviser

33
00:01:32,790 --> 00:01:39,420
lori greiner so to start off this talk I

34
00:01:37,710 --> 00:01:42,869
want to ask you to memorize a few

35
00:01:39,420 --> 00:01:45,630
secrets so I want you to imagine that

36
00:01:42,869 --> 00:01:48,450
Bill Clinton is standing on this beach

37
00:01:45,630 --> 00:01:52,679
here and I want you to imagine that he

38
00:01:48,450 --> 00:01:55,320
is tickling a peach all right take a

39
00:01:52,680 --> 00:01:57,060
second and really visualize that maybe

40
00:01:55,320 --> 00:01:59,548
the peaches laughing as Bill Clinton's

41
00:01:57,060 --> 00:02:03,420
tickling it there will be a test at the

42
00:01:59,549 --> 00:02:06,060
end of the talk alright so that's person

43
00:02:03,420 --> 00:02:09,899
action object Bill Clinton tickling a

44
00:02:06,060 --> 00:02:12,959
peach all right everyone got it let's

45
00:02:09,899 --> 00:02:16,920
move on to our second experiment let's

46
00:02:12,959 --> 00:02:19,620
imagine Albert Einstein standing in this

47
00:02:16,920 --> 00:02:21,089
rip on this railroad track and I want

48
00:02:19,620 --> 00:02:24,599
you to imagine imagine that he's

49
00:02:21,090 --> 00:02:26,550
puckering up and kissing a piranha all

50
00:02:24,599 --> 00:02:29,040
right everyone got it that's

51
00:02:26,550 --> 00:02:34,980
Einstein kissing a piranha really try to

52
00:02:29,040 --> 00:02:36,480
visualize that okay so today we're going

53
00:02:34,980 --> 00:02:39,690
to be talking about password management

54
00:02:36,480 --> 00:02:41,630
and password management is the task that

55
00:02:39,690 --> 00:02:43,470
we all face every day when we go online

56
00:02:41,630 --> 00:02:46,260
visit a website and that website

57
00:02:43,470 --> 00:02:48,540
requires us to either create a password

58
00:02:46,260 --> 00:02:51,359
or remember a password that we've

59
00:02:48,540 --> 00:02:53,340
already created to authenticate the

60
00:02:51,360 --> 00:02:55,440
challenge is that users don't just have

61
00:02:53,340 --> 00:02:57,930
one password they have multiple accounts

62
00:02:55,440 --> 00:02:59,340
so they need to authenticate with they

63
00:02:57,930 --> 00:03:01,470
need to create and remember passwords

64
00:02:59,340 --> 00:03:03,810
for all of for all these different

65
00:03:01,470 --> 00:03:05,160
accounts so there's two competing goals

66
00:03:03,810 --> 00:03:08,240
when the user tries to manage his

67
00:03:05,160 --> 00:03:10,590
passwords security and usability and

68
00:03:08,240 --> 00:03:12,120
informally security means that we don't

69
00:03:10,590 --> 00:03:13,940
want adversaries cracking into our

70
00:03:12,120 --> 00:03:16,530
accounts you know stealing our money

71
00:03:13,940 --> 00:03:17,970
usability means that we don't want to

72
00:03:16,530 --> 00:03:22,020
tear our hair out trying to remember all

73
00:03:17,970 --> 00:03:24,480
of these darn passwords so let's look

74
00:03:22,020 --> 00:03:27,930
first at the issue of security what

75
00:03:24,480 --> 00:03:29,399
could go wrong and in increasing order

76
00:03:27,930 --> 00:03:30,870
of danger there are three types of

77
00:03:29,400 --> 00:03:33,690
attacks that an adversary could mount

78
00:03:30,870 --> 00:03:35,970
online attacks offline attacks in plain

79
00:03:33,690 --> 00:03:38,910
text recovery attacks I'll illustrate

80
00:03:35,970 --> 00:03:41,040
each attack in the next few slides so

81
00:03:38,910 --> 00:03:43,890
your online attack is your simplest form

82
00:03:41,040 --> 00:03:46,190
of attack here the user registers an

83
00:03:43,890 --> 00:03:48,690
account it picks his favorite password

84
00:03:46,190 --> 00:03:50,730
maybe this is a bank account and he puts

85
00:03:48,690 --> 00:03:52,890
a bunch of money in his bank account and

86
00:03:50,730 --> 00:03:54,690
now the adversary just comes along and

87
00:03:52,890 --> 00:03:57,238
he tries lots of popular password

88
00:03:54,690 --> 00:04:00,060
guesses so maybe tries password he

89
00:03:57,239 --> 00:04:01,800
doesn't get in he tries 123456 in this

90
00:04:00,060 --> 00:04:04,880
case he gets in and can steal the user's

91
00:04:01,800 --> 00:04:08,400
money so to defend against online

92
00:04:04,880 --> 00:04:10,829
attacks oftentimes organizations

93
00:04:08,400 --> 00:04:12,720
institute some sort of K strikes policy

94
00:04:10,830 --> 00:04:16,230
in which the user is locked out after a

95
00:04:12,720 --> 00:04:18,690
few incorrect guesses these policies are

96
00:04:16,230 --> 00:04:21,620
relatively effective if the user picks a

97
00:04:18,690 --> 00:04:24,120
strong password but of course if users

98
00:04:21,620 --> 00:04:26,070
select predictable passwords like 12

99
00:04:24,120 --> 00:04:29,820
3456 there's a chance that the adversary

100
00:04:26,070 --> 00:04:32,460
might still break in the second type of

101
00:04:29,820 --> 00:04:35,159
attack is even more dangerous here the

102
00:04:32,460 --> 00:04:38,130
user registers for an account with his

103
00:04:35,160 --> 00:04:40,230
favorite password again and the server

104
00:04:38,130 --> 00:04:43,050
stores picks a random value

105
00:04:40,230 --> 00:04:45,270
all the salt and they append this value

106
00:04:43,050 --> 00:04:47,460
to the user's password in this case

107
00:04:45,270 --> 00:04:50,159
unbreakable with the salt value appended

108
00:04:47,460 --> 00:04:51,989
and they run this value through a hash

109
00:04:50,160 --> 00:04:53,910
function and what they store on their

110
00:04:51,990 --> 00:04:57,720
server is the cryptographic hash of the

111
00:04:53,910 --> 00:05:01,070
password with assault appended so what

112
00:04:57,720 --> 00:05:03,000
can happen you know due to

113
00:05:01,070 --> 00:05:04,409
vulnerabilities and the software that

114
00:05:03,000 --> 00:05:08,070
the server is running or due to

115
00:05:04,410 --> 00:05:09,450
configuration errors oftentimes an

116
00:05:08,070 --> 00:05:11,730
adversary is able to break into the

117
00:05:09,450 --> 00:05:14,520
server and steal the cryptographic hash

118
00:05:11,730 --> 00:05:16,770
file in this case the adversary can try

119
00:05:14,520 --> 00:05:18,539
as many guesses as he wants he's only

120
00:05:16,770 --> 00:05:19,979
limited by the resources that he's

121
00:05:18,540 --> 00:05:22,710
willing to invest trying to crack the

122
00:05:19,980 --> 00:05:25,080
users password so you know here the

123
00:05:22,710 --> 00:05:26,880
adversary might download his favorite

124
00:05:25,080 --> 00:05:28,140
tool there's you know lots of open

125
00:05:26,880 --> 00:05:30,390
source tools that the adversary could

126
00:05:28,140 --> 00:05:32,729
use John the Ripper is one of them he

127
00:05:30,390 --> 00:05:34,349
can rent time on amazon's cloud or it

128
00:05:32,730 --> 00:05:36,870
can use his own computer and you can

129
00:05:34,350 --> 00:05:38,970
just brute force try lots and lots of

130
00:05:36,870 --> 00:05:41,220
guesses in a large dictionary and see if

131
00:05:38,970 --> 00:05:46,200
the users password matches any of these

132
00:05:41,220 --> 00:05:48,570
passwords so this is unfortunately a

133
00:05:46,200 --> 00:05:50,099
common problem password breaches at

134
00:05:48,570 --> 00:05:52,710
major companies have affected millions

135
00:05:50,100 --> 00:05:55,290
of users and as I've given this a talk

136
00:05:52,710 --> 00:05:57,030
this talk over the year this Wall of

137
00:05:55,290 --> 00:06:00,360
shame if you will has grown and grown

138
00:05:57,030 --> 00:06:03,780
and grown so here's my slide from four

139
00:06:00,360 --> 00:06:06,780
or five years ago here's a more recent

140
00:06:03,780 --> 00:06:11,010
version of the slide and Yahoo really

141
00:06:06,780 --> 00:06:13,380
gets extra credit for releasing the

142
00:06:11,010 --> 00:06:17,310
cryptographic hash values of half a

143
00:06:13,380 --> 00:06:21,930
billion users this was in the news a

144
00:06:17,310 --> 00:06:25,440
week and a half ago I think where it was

145
00:06:21,930 --> 00:06:27,300
500 billion password hashes and they

146
00:06:25,440 --> 00:06:29,520
they've been leaked so if you have an

147
00:06:27,300 --> 00:06:31,020
account on yahoo an adversary

148
00:06:29,520 --> 00:06:32,849
potentially is running this type of

149
00:06:31,020 --> 00:06:37,950
attack right now against your very own

150
00:06:32,850 --> 00:06:40,890
password alright so the final type of

151
00:06:37,950 --> 00:06:44,280
attack is a plaintext recovery attack

152
00:06:40,890 --> 00:06:46,469
and fishing is one example of a

153
00:06:44,280 --> 00:06:49,400
plaintext recovery attack so in this

154
00:06:46,470 --> 00:06:52,620
case you know the user thinks he's

155
00:06:49,400 --> 00:06:54,060
logging into paypal calm but whoopsie

156
00:06:52,620 --> 00:06:56,970
didn't check the URL carefully and

157
00:06:54,060 --> 00:06:58,500
this is actually pay Paul calm and in

158
00:06:56,970 --> 00:07:01,860
this case he just sends the adversary

159
00:06:58,500 --> 00:07:04,169
the password directly notice that in

160
00:07:01,860 --> 00:07:06,780
this case it doesn't really matter how

161
00:07:04,169 --> 00:07:10,080
strong the users password is because he

162
00:07:06,780 --> 00:07:11,909
just gave it to the adversary there's no

163
00:07:10,080 --> 00:07:14,820
no need for that verse area to crack the

164
00:07:11,910 --> 00:07:17,220
password he just has it so fishing is

165
00:07:14,820 --> 00:07:19,010
one example of this type of attack of

166
00:07:17,220 --> 00:07:21,450
course there are lots of other examples

167
00:07:19,010 --> 00:07:23,219
you could have malware on your computer

168
00:07:21,450 --> 00:07:27,719
you could have a hidden camera when you

169
00:07:23,220 --> 00:07:29,580
login or the website where you have the

170
00:07:27,720 --> 00:07:32,540
account may just not encrypt their

171
00:07:29,580 --> 00:07:36,960
passwords period for example rock you

172
00:07:32,540 --> 00:07:39,690
developed games for facebook and they

173
00:07:36,960 --> 00:07:42,330
decided not to encrypt their passwords

174
00:07:39,690 --> 00:07:44,729
and later someone was able to break into

175
00:07:42,330 --> 00:07:47,909
their servers using an SQL basic SQL

176
00:07:44,729 --> 00:07:50,099
injection attack and there were 30 2.6

177
00:07:47,910 --> 00:07:56,760
million passwords that are now published

178
00:07:50,100 --> 00:07:59,610
online because of this and plain text

179
00:07:56,760 --> 00:08:01,640
recovery is a real issue it not only

180
00:07:59,610 --> 00:08:03,960
affects the account that was breached

181
00:08:01,640 --> 00:08:07,800
but it can affect other accounts as well

182
00:08:03,960 --> 00:08:10,109
so in particular users often reuse the

183
00:08:07,800 --> 00:08:12,000
same password at multiple accounts so if

184
00:08:10,110 --> 00:08:14,460
the user obtains your paypal com

185
00:08:12,000 --> 00:08:17,130
password perhaps you can try using the

186
00:08:14,460 --> 00:08:19,109
same password at other accounts and see

187
00:08:17,130 --> 00:08:22,639
if he's successful and the problem

188
00:08:19,110 --> 00:08:24,960
propagates all right so the user is

189
00:08:22,639 --> 00:08:26,520
given the task of creating and

190
00:08:24,960 --> 00:08:28,440
remembering multiple different passwords

191
00:08:26,520 --> 00:08:30,090
in the face of all these different

192
00:08:28,440 --> 00:08:32,309
threats and this is a challenging

193
00:08:30,090 --> 00:08:35,610
problem and there's lots of advice that

194
00:08:32,309 --> 00:08:37,140
we tend to give users traditionally and

195
00:08:35,610 --> 00:08:39,000
the advice typically sounds something

196
00:08:37,140 --> 00:08:41,610
like the following don't make your

197
00:08:39,000 --> 00:08:44,190
password too short use a mix of upper

198
00:08:41,610 --> 00:08:47,060
and lower case letters these numbers as

199
00:08:44,190 --> 00:08:50,580
well as letters don't use words or names

200
00:08:47,060 --> 00:08:53,189
use special symbols don't write your

201
00:08:50,580 --> 00:08:55,560
password down don't ever reuse your

202
00:08:53,190 --> 00:08:57,270
passwords and oh by the way if you could

203
00:08:55,560 --> 00:09:00,859
change them every 90 days that would be

204
00:08:57,270 --> 00:09:00,860
great yeah question

205
00:09:06,149 --> 00:09:13,589
so there are programs are called he

206
00:09:09,399 --> 00:09:16,870
passes their password management and

207
00:09:13,589 --> 00:09:18,970
last time Mike I counted the accounts

208
00:09:16,870 --> 00:09:20,890
that i have with is almost 20 in each

209
00:09:18,970 --> 00:09:22,570
one of them is at a different password

210
00:09:20,890 --> 00:09:23,980
and it's really hard to track down all

211
00:09:22,570 --> 00:09:26,260
the passwords sometimes you forget them

212
00:09:23,980 --> 00:09:27,820
so there are program called opossum I'm

213
00:09:26,260 --> 00:09:29,170
thinking of actually using one of these

214
00:09:27,820 --> 00:09:31,690
programs so what do you think of that

215
00:09:29,170 --> 00:09:33,099
okay that's a great question so there

216
00:09:31,690 --> 00:09:35,260
are password managers that kind of

217
00:09:33,100 --> 00:09:38,520
automate the task of creating and

218
00:09:35,260 --> 00:09:41,189
remembering multiple passwords and

219
00:09:38,520 --> 00:09:45,760
password managers come with trade-offs

220
00:09:41,190 --> 00:09:47,980
security and usability trade-offs so one

221
00:09:45,760 --> 00:09:51,220
password manager called LastPass has

222
00:09:47,980 --> 00:09:55,060
kind of been a frequent target recently

223
00:09:51,220 --> 00:09:59,410
there was a breach back in 2015 and a

224
00:09:55,060 --> 00:10:01,420
recent security vulnerability in 2016 so

225
00:09:59,410 --> 00:10:03,640
you know well it addresses some security

226
00:10:01,420 --> 00:10:05,949
concerns so there's also a single point

227
00:10:03,640 --> 00:10:08,920
of failure and if you implement the

228
00:10:05,950 --> 00:10:12,399
password manager incorrectly or if you

229
00:10:08,920 --> 00:10:14,800
enter your master password on any

230
00:10:12,399 --> 00:10:16,120
machine that's infected then you've just

231
00:10:14,800 --> 00:10:19,660
given the adversary all of your

232
00:10:16,120 --> 00:10:21,520
credentials so there are costs and

233
00:10:19,660 --> 00:10:23,829
benefits to using a password manager and

234
00:10:21,520 --> 00:10:26,699
you would have to evaluate those costs

235
00:10:23,829 --> 00:10:28,839
and benefits for example if you tend to

236
00:10:26,700 --> 00:10:30,790
authenticate frequently from public

237
00:10:28,839 --> 00:10:32,740
computers or from a friend's computer i

238
00:10:30,790 --> 00:10:34,599
would recommend against using a password

239
00:10:32,740 --> 00:10:35,920
manager because now you have to expose

240
00:10:34,600 --> 00:10:39,310
your master password on multiple

241
00:10:35,920 --> 00:10:41,380
different devices and if you can't

242
00:10:39,310 --> 00:10:44,109
ensure that any that every of these

243
00:10:41,380 --> 00:10:45,880
devices is malware free then you're

244
00:10:44,110 --> 00:10:48,850
exposing your master password every time

245
00:10:45,880 --> 00:10:54,160
every time you authenticate so that's a

246
00:10:48,850 --> 00:10:56,800
that's a great question ok so right this

247
00:10:54,160 --> 00:10:59,110
is a challenging problem and that leads

248
00:10:56,800 --> 00:11:00,849
me to the second point users are

249
00:10:59,110 --> 00:11:04,060
frustrated with all these suggestions

250
00:11:00,850 --> 00:11:06,070
it's just unusable you can't you can't

251
00:11:04,060 --> 00:11:09,880
follow all these suggestions it's it's

252
00:11:06,070 --> 00:11:13,230
impossible so there's a need to

253
00:11:09,880 --> 00:11:14,439
reevaluate traditional advice and

254
00:11:13,230 --> 00:11:17,650
Randall

255
00:11:14,440 --> 00:11:20,260
ro author of the popular web comic XKCD

256
00:11:17,650 --> 00:11:23,410
in fact suggested that we've been doing

257
00:11:20,260 --> 00:11:24,790
passwords wrong for many years so you

258
00:11:23,410 --> 00:11:27,040
know typically if you follow the

259
00:11:24,790 --> 00:11:29,020
suggestions you might pick a word make

260
00:11:27,040 --> 00:11:31,030
some number substitutions you know add

261
00:11:29,020 --> 00:11:33,730
some special symbols at the end he's

262
00:11:31,030 --> 00:11:35,230
suggesting that these these types of

263
00:11:33,730 --> 00:11:37,450
passwords have much lower entropy

264
00:11:35,230 --> 00:11:39,310
they're much easier to crack than just

265
00:11:37,450 --> 00:11:42,540
picking four random words and he's

266
00:11:39,310 --> 00:11:45,040
suggesting that for random words are

267
00:11:42,540 --> 00:11:47,819
actually much easier to remember than a

268
00:11:45,040 --> 00:11:49,839
than a password that looks like this now

269
00:11:47,820 --> 00:11:52,540
there's been some interesting studies

270
00:11:49,840 --> 00:11:56,830
recently actually coming out of out of

271
00:11:52,540 --> 00:12:01,420
Purdue in which they actually asked

272
00:11:56,830 --> 00:12:04,120
users to pick word based passwords XKCD

273
00:12:01,420 --> 00:12:05,380
style and they found that when users are

274
00:12:04,120 --> 00:12:07,540
providing the source of randomness

275
00:12:05,380 --> 00:12:10,780
actually there's a pretty high collision

276
00:12:07,540 --> 00:12:12,099
rate so with user randomness you know

277
00:12:10,780 --> 00:12:15,220
these passwords actually aren't that

278
00:12:12,100 --> 00:12:17,140
secure you might think that they have 44

279
00:12:15,220 --> 00:12:19,900
bits of entropy and that's true if you

280
00:12:17,140 --> 00:12:22,090
pick each word independently uniformly

281
00:12:19,900 --> 00:12:24,430
at random but when users are asked to

282
00:12:22,090 --> 00:12:26,680
select these words it oftentimes isn't

283
00:12:24,430 --> 00:12:31,989
independent their selections oftentimes

284
00:12:26,680 --> 00:12:33,790
aren't at random all right so let's look

285
00:12:31,990 --> 00:12:36,940
at a couple password management

286
00:12:33,790 --> 00:12:41,079
strategies that a user might adopt so

287
00:12:36,940 --> 00:12:43,630
scheme one will call reuse and here just

288
00:12:41,080 --> 00:12:48,730
imagine picking four random words XKCD

289
00:12:43,630 --> 00:12:51,220
style and reusing that password at every

290
00:12:48,730 --> 00:12:53,050
different account so at Amazon your

291
00:12:51,220 --> 00:12:55,510
password is correct course battery

292
00:12:53,050 --> 00:12:58,810
staple at eBay your password is also

293
00:12:55,510 --> 00:13:01,089
correct towards battery staple etc all

294
00:12:58,810 --> 00:13:03,280
right so well there's a natural variant

295
00:13:01,089 --> 00:13:05,500
of this called strong random independent

296
00:13:03,280 --> 00:13:08,170
which is basically the same thing except

297
00:13:05,500 --> 00:13:11,140
for each different account you pick a

298
00:13:08,170 --> 00:13:12,819
different set of forwards so Amazon

299
00:13:11,140 --> 00:13:15,780
might be correct course battery staple

300
00:13:12,820 --> 00:13:20,050
and eBay might be banana baseball bat

301
00:13:15,780 --> 00:13:22,209
potato a table or something something

302
00:13:20,050 --> 00:13:24,490
like that and for every new website that

303
00:13:22,210 --> 00:13:27,640
you create you just memorize for four

304
00:13:24,490 --> 00:13:28,209
new words so intuitively you might think

305
00:13:27,640 --> 00:13:30,040
the first

306
00:13:28,209 --> 00:13:33,459
sounds easy to do and the second one

307
00:13:30,040 --> 00:13:35,618
sounds sounds quite challenging but can

308
00:13:33,459 --> 00:13:39,758
we actually quantify this quantify this

309
00:13:35,619 --> 00:13:41,709
intuition all right so let's go back to

310
00:13:39,759 --> 00:13:45,639
the problem of password management and

311
00:13:41,709 --> 00:13:47,709
let's look first at usability how can we

312
00:13:45,639 --> 00:13:51,639
actually quantify the usability of a

313
00:13:47,709 --> 00:13:53,559
proposed password management strategy so

314
00:13:51,639 --> 00:13:56,350
to talk about usability we have to talk

315
00:13:53,559 --> 00:13:58,990
about human memory and this is

316
00:13:56,350 --> 00:14:01,329
challenging because human memory is not

317
00:13:58,990 --> 00:14:03,429
a hard disk right this is not just a

318
00:14:01,329 --> 00:14:06,128
platter where you can execute read and

319
00:14:03,429 --> 00:14:08,170
write operations so human memory is

320
00:14:06,129 --> 00:14:10,089
lossy that's what makes the the problem

321
00:14:08,170 --> 00:14:12,248
challenging and human memory doesn't

322
00:14:10,089 --> 00:14:15,850
work by just simply writing to a cell

323
00:14:12,249 --> 00:14:17,740
and reading from a cell well what does

324
00:14:15,850 --> 00:14:19,749
human memory look like human memories

325
00:14:17,740 --> 00:14:22,449
associative so if I tell you the word

326
00:14:19,749 --> 00:14:25,600
Apple you might be reminded of certain

327
00:14:22,449 --> 00:14:28,179
products constructed by a company named

328
00:14:25,600 --> 00:14:31,480
Apple that might remind you of text

329
00:14:28,179 --> 00:14:33,670
messages you sent on said product or it

330
00:14:31,480 --> 00:14:35,769
might remind you of late CEO of that

331
00:14:33,670 --> 00:14:38,019
company that might remind you of other

332
00:14:35,769 --> 00:14:39,459
famous CEOs and that might remind you of

333
00:14:38,019 --> 00:14:42,610
you know other operating systems

334
00:14:39,459 --> 00:14:44,258
designed by that CEO or maybe the word

335
00:14:42,610 --> 00:14:45,850
Apple will remind remind you of other

336
00:14:44,259 --> 00:14:47,439
fruits in this case you might think of

337
00:14:45,850 --> 00:14:48,819
oranges you might think of orange juice

338
00:14:47,439 --> 00:14:54,099
and then you might start thinking about

339
00:14:48,819 --> 00:14:56,349
what you had for breakfast so when we

340
00:14:54,100 --> 00:14:58,089
talk about memory it's in human memory

341
00:14:56,350 --> 00:15:00,819
it's important to think about queues

342
00:14:58,089 --> 00:15:03,959
what was the context when a memory was

343
00:15:00,819 --> 00:15:06,429
created and stored in the human brain

344
00:15:03,959 --> 00:15:08,679
the context includes the surrounding

345
00:15:06,429 --> 00:15:11,410
environment when a new secret is

346
00:15:08,679 --> 00:15:13,869
memorized that might include sounds what

347
00:15:11,410 --> 00:15:15,368
you're hearing around you might include

348
00:15:13,869 --> 00:15:16,480
your visual surroundings maybe you're

349
00:15:15,369 --> 00:15:18,670
sitting at your desk when you're

350
00:15:16,480 --> 00:15:21,519
creating a new password and it might

351
00:15:18,670 --> 00:15:23,799
involve the website that you're sitting

352
00:15:21,519 --> 00:15:27,220
in front of probably just a text box

353
00:15:23,799 --> 00:15:29,019
with the label password maybe you're

354
00:15:27,220 --> 00:15:30,910
also thinking about some other stuff

355
00:15:29,019 --> 00:15:34,389
like tests that you have to take later

356
00:15:30,910 --> 00:15:38,699
in the week and and whatnot so later on

357
00:15:34,389 --> 00:15:41,769
when you try to retrieve this the secret

358
00:15:38,699 --> 00:15:43,839
much of this context will be lost

359
00:15:41,769 --> 00:15:46,480
so later when you try to retrieve your

360
00:15:43,839 --> 00:15:49,300
your password probably the only context

361
00:15:46,480 --> 00:15:53,369
that's that's the same as just this text

362
00:15:49,300 --> 00:15:53,368
box that says Amazon and password

363
00:15:54,989 --> 00:16:00,459
alright so how can we quantify usability

364
00:15:58,259 --> 00:16:03,579
well a first attempt to quantify

365
00:16:00,459 --> 00:16:05,618
usability involves chunking so suppose I

366
00:16:03,579 --> 00:16:09,670
ask you to memorize the following string

367
00:16:05,619 --> 00:16:12,489
NBC CBS ABC probably not too difficult

368
00:16:09,670 --> 00:16:17,290
right now suppose I ask you to memorize

369
00:16:12,489 --> 00:16:19,889
this string tkq izr lwp probably a

370
00:16:17,290 --> 00:16:22,420
little bit more challenging why is that

371
00:16:19,889 --> 00:16:24,519
well the first string is three chunks of

372
00:16:22,420 --> 00:16:26,259
information three popular broadcasting

373
00:16:24,519 --> 00:16:28,660
companies that most of us are familiar

374
00:16:26,259 --> 00:16:30,519
with and the second string is nine

375
00:16:28,660 --> 00:16:32,699
chunks of information unless you can

376
00:16:30,519 --> 00:16:36,610
find some sort of meaningful way to

377
00:16:32,699 --> 00:16:38,709
combine these these characters into

378
00:16:36,610 --> 00:16:40,420
meaningful words it's nine independent

379
00:16:38,709 --> 00:16:44,049
pieces of information that you have to

380
00:16:40,420 --> 00:16:46,089
memorize so this suggests a natural goal

381
00:16:44,049 --> 00:16:49,540
which is just minimize the number of

382
00:16:46,089 --> 00:16:51,189
chunks in all of your passwords and this

383
00:16:49,540 --> 00:16:55,389
is a natural goal but I want to argue

384
00:16:51,189 --> 00:16:57,279
that this is a very incomplete goal why

385
00:16:55,389 --> 00:17:00,129
do I argue that this is incomplete so

386
00:16:57,279 --> 00:17:03,639
well because human memory is vast but

387
00:17:00,129 --> 00:17:05,230
lossy we have plenty of space or

388
00:17:03,639 --> 00:17:08,520
capacity in our brains to store all

389
00:17:05,230 --> 00:17:11,260
these secrets but yet our brain

390
00:17:08,520 --> 00:17:13,629
continually discards the passwords that

391
00:17:11,260 --> 00:17:18,220
we've memorized we've all experienced

392
00:17:13,630 --> 00:17:20,620
this at one time or another so our basic

393
00:17:18,220 --> 00:17:24,189
premise is that if you memorize the

394
00:17:20,619 --> 00:17:26,289
secret you need to rehearse it or you're

395
00:17:24,189 --> 00:17:28,000
likely to forget that secret now the

396
00:17:26,289 --> 00:17:29,710
question is how much work do you

397
00:17:28,000 --> 00:17:33,460
actually have to do to memorize and

398
00:17:29,710 --> 00:17:35,020
rehearse all the secrets and to quantify

399
00:17:33,460 --> 00:17:38,580
usability we're going to introduce a

400
00:17:35,020 --> 00:17:40,899
rehearsal assumption which basically

401
00:17:38,580 --> 00:17:42,220
quantifies how often you'll need to

402
00:17:40,899 --> 00:17:46,059
rehearse the secret if you want to

403
00:17:42,220 --> 00:17:48,789
continue remembering it so okay here in

404
00:17:46,059 --> 00:17:50,649
this picture you know suppose the user

405
00:17:48,789 --> 00:17:53,529
hasn't logged into amazon for a while

406
00:17:50,649 --> 00:17:55,209
maybe three months in this case the user

407
00:17:53,529 --> 00:17:59,980
is likely to forget

408
00:17:55,210 --> 00:18:02,500
forget that particular password so our

409
00:17:59,980 --> 00:18:05,649
our memory capability is motivated by a

410
00:18:02,500 --> 00:18:08,830
user study we conducted and in this user

411
00:18:05,649 --> 00:18:10,840
study we gave users for person action

412
00:18:08,830 --> 00:18:12,908
object stories much like the ones I gave

413
00:18:10,840 --> 00:18:14,439
you at the start of this lecture and ask

414
00:18:12,909 --> 00:18:16,870
them to memorize all four of these

415
00:18:14,440 --> 00:18:19,390
stories and each point on this graph

416
00:18:16,870 --> 00:18:22,029
represents a point in time at which we

417
00:18:19,390 --> 00:18:23,919
asks ask users to return and rehearse

418
00:18:22,029 --> 00:18:28,090
all four of their person action object

419
00:18:23,919 --> 00:18:29,890
stories and here this graph shows the

420
00:18:28,090 --> 00:18:32,500
fraction of users that were successful

421
00:18:29,890 --> 00:18:34,659
when they returned divided by the total

422
00:18:32,500 --> 00:18:37,720
fraction of users that actually returned

423
00:18:34,659 --> 00:18:42,039
to complete that that rehearsal round

424
00:18:37,720 --> 00:18:43,990
and here we can see that you know with

425
00:18:42,039 --> 00:18:46,149
ten rehearsals over one hundred and

426
00:18:43,990 --> 00:18:48,279
fifty six days users are highly

427
00:18:46,149 --> 00:18:50,469
successful remembering all four of their

428
00:18:48,279 --> 00:18:52,480
person action object stories in fact on

429
00:18:50,470 --> 00:18:55,630
the last rehearsal this is the tenth

430
00:18:52,480 --> 00:18:57,760
rehearsal 156 days after they initially

431
00:18:55,630 --> 00:18:58,990
memorized all four stories a hundred

432
00:18:57,760 --> 00:19:01,120
percent of users that returned

433
00:18:58,990 --> 00:19:03,789
remembered all four of their stories

434
00:19:01,120 --> 00:19:06,330
this is even after a gap of about sixty

435
00:19:03,789 --> 00:19:09,070
four days since their previous rehearsal

436
00:19:06,330 --> 00:19:15,399
the key point here is that memories are

437
00:19:09,070 --> 00:19:19,779
strengthened with repetition yeah kind

438
00:19:15,399 --> 00:19:22,750
of a slide showing the number of like

439
00:19:19,779 --> 00:19:25,000
the raw number of returners and such for

440
00:19:22,750 --> 00:19:27,659
those wrong number of returners um I

441
00:19:25,000 --> 00:19:32,880
think it was about fifty percent of

442
00:19:27,659 --> 00:19:35,110
users completed every rehearsal round so

443
00:19:32,880 --> 00:19:39,010
this was a study on Amazon Mechanical

444
00:19:35,110 --> 00:19:40,889
Turk and we initially invited everyone

445
00:19:39,010 --> 00:19:43,240
to complete the first phase which was

446
00:19:40,890 --> 00:19:44,919
memorization phase and after they

447
00:19:43,240 --> 00:19:47,980
completed it we would send them emails

448
00:19:44,919 --> 00:19:49,720
to ask them to return and if a user

449
00:19:47,980 --> 00:19:52,059
wasn't able to return in a timely

450
00:19:49,720 --> 00:19:54,940
fashion than we had to drop them from

451
00:19:52,059 --> 00:19:56,230
the study if a user returned and forgot

452
00:19:54,940 --> 00:19:59,500
one of their stories then we would

453
00:19:56,230 --> 00:20:04,990
remind them and invite them to continue

454
00:19:59,500 --> 00:20:07,389
continue participating but the key

455
00:20:04,990 --> 00:20:09,010
challenge here is actually you know a

456
00:20:07,389 --> 00:20:10,929
lot of users on mechanical

457
00:20:09,010 --> 00:20:16,540
just don't return for follow-up studies

458
00:20:10,930 --> 00:20:19,240
period and in fact you'll see that from

459
00:20:16,540 --> 00:20:21,220
the memorization phase to the first

460
00:20:19,240 --> 00:20:23,470
rehearsal round where the drop off is

461
00:20:21,220 --> 00:20:25,560
you know about sixty percent of users

462
00:20:23,470 --> 00:20:28,120
returned for that first first-round

463
00:20:25,560 --> 00:20:31,300
conditioned on users returning for that

464
00:20:28,120 --> 00:20:36,610
first round the return rate was pretty

465
00:20:31,300 --> 00:20:40,510
high so users that that return tend to

466
00:20:36,610 --> 00:20:42,820
keep returning and users that don't like

467
00:20:40,510 --> 00:20:45,730
to participate in follow-up studies just

468
00:20:42,820 --> 00:20:48,429
don't participate this is this is kind

469
00:20:45,730 --> 00:20:50,080
of a global phenomena in all studies

470
00:20:48,430 --> 00:20:52,510
that you would conduct on Mechanical

471
00:20:50,080 --> 00:20:54,820
Turk with a follow-up phase you know

472
00:20:52,510 --> 00:20:57,820
every every study I've seen has a return

473
00:20:54,820 --> 00:21:00,040
rate of about sixty percent so for

474
00:20:57,820 --> 00:21:02,830
whatever reason you know forty percent

475
00:21:00,040 --> 00:21:04,120
of users either missed the reminder or

476
00:21:02,830 --> 00:21:11,639
they're too busy when they get it and

477
00:21:04,120 --> 00:21:15,370
just never never return okay so uh

478
00:21:11,640 --> 00:21:17,980
motivated by the user study and by some

479
00:21:15,370 --> 00:21:20,939
other studies older studies in cognitive

480
00:21:17,980 --> 00:21:23,230
psychology we introduced the following

481
00:21:20,940 --> 00:21:25,600
rehearsal assumption the assumption

482
00:21:23,230 --> 00:21:27,070
basically says that you'll remember a

483
00:21:25,600 --> 00:21:29,530
secret that you've memorized if you were

484
00:21:27,070 --> 00:21:30,970
rehearse it at least once during each of

485
00:21:29,530 --> 00:21:33,220
the following time intervals once

486
00:21:30,970 --> 00:21:35,110
between day one and day two once between

487
00:21:33,220 --> 00:21:36,940
day 2 and day for once between day four

488
00:21:35,110 --> 00:21:39,010
and day eight of course you can adjust

489
00:21:36,940 --> 00:21:40,480
the parameters of this model so that you

490
00:21:39,010 --> 00:21:45,040
know the intervals don't double each

491
00:21:40,480 --> 00:21:48,730
time but for simplicity we're going to

492
00:21:45,040 --> 00:21:51,490
just use this as a running example okay

493
00:21:48,730 --> 00:21:53,830
so now we have this assumption let's

494
00:21:51,490 --> 00:21:57,370
suppose now that the user visits there

495
00:21:53,830 --> 00:22:00,669
amazon account maybe on day four day

496
00:21:57,370 --> 00:22:02,649
five day eight well in this case they're

497
00:22:00,670 --> 00:22:05,350
naturally going to satisfy some of these

498
00:22:02,650 --> 00:22:06,850
rehearsal requirements every time they

499
00:22:05,350 --> 00:22:08,830
visit amazon they have to type in their

500
00:22:06,850 --> 00:22:12,639
password and rehearse the corresponding

501
00:22:08,830 --> 00:22:14,889
secret all right let's suppose that the

502
00:22:12,640 --> 00:22:17,200
user also has a google account and that

503
00:22:14,890 --> 00:22:20,530
he visits google maybe at day one and a

504
00:22:17,200 --> 00:22:22,480
half maybe day four and a half maybe day

505
00:22:20,530 --> 00:22:28,418
nine etc

506
00:22:22,480 --> 00:22:30,370
well okay in this case we can use X sub

507
00:22:28,419 --> 00:22:33,340
T to denote the total number of extra

508
00:22:30,370 --> 00:22:36,309
her CIL's necessary to remember all of

509
00:22:33,340 --> 00:22:40,030
your passwords forty days so in this

510
00:22:36,309 --> 00:22:41,830
case whoop let's suppose that I asked

511
00:22:40,030 --> 00:22:43,360
you for the value of x eight how many

512
00:22:41,830 --> 00:22:46,299
extra her CIL's with these are need to

513
00:22:43,360 --> 00:22:49,629
do to remember all of his passwords for

514
00:22:46,299 --> 00:22:51,809
eight days well the answer depends on

515
00:22:49,630 --> 00:22:55,330
what strategy the user is adopting

516
00:22:51,809 --> 00:22:57,309
suppose that the user is reusing the

517
00:22:55,330 --> 00:22:58,840
same password every everywhere how many

518
00:22:57,309 --> 00:23:07,080
extra rehearsals just that user need to

519
00:22:58,840 --> 00:23:07,080
do anyone want to venture a guess yeah

520
00:23:09,390 --> 00:23:13,690
right so yeah if the passwords the same

521
00:23:11,710 --> 00:23:15,520
then there's no no extra her CIL's

522
00:23:13,690 --> 00:23:17,650
because you get it you get a practice

523
00:23:15,520 --> 00:23:21,580
round during each of these each of these

524
00:23:17,650 --> 00:23:23,590
intervals suppose instead that the user

525
00:23:21,580 --> 00:23:26,139
picks independent passwords for each

526
00:23:23,590 --> 00:23:29,100
account how many X rehearsals with these

527
00:23:26,140 --> 00:23:29,100
are need to do in this case

528
00:23:35,080 --> 00:23:41,749
maybe like 10 net so a half an extra

529
00:23:38,629 --> 00:23:47,330
rehearsal kind of thing um okay well so

530
00:23:41,749 --> 00:23:49,039
uh let's I guess break this down so the

531
00:23:47,330 --> 00:23:51,230
user has an Amazon password which they

532
00:23:49,039 --> 00:23:52,429
don't rehearse during this window so if

533
00:23:51,230 --> 00:23:54,320
we want to guarantee that the user

534
00:23:52,429 --> 00:23:55,989
remembers the password we're going to

535
00:23:54,320 --> 00:23:58,279
have to remind the user to rehearse

536
00:23:55,989 --> 00:24:00,320
rehearse their password once during this

537
00:23:58,279 --> 00:24:02,029
window and that's you know an extra

538
00:24:00,320 --> 00:24:04,989
rehearsal beyond what they would do in

539
00:24:02,029 --> 00:24:07,820
their natural course of internet usage

540
00:24:04,989 --> 00:24:09,320
similarly for Google the user is going

541
00:24:07,820 --> 00:24:11,359
to have to be reminded to rehearse as

542
00:24:09,320 --> 00:24:13,428
google password once during this

543
00:24:11,359 --> 00:24:15,080
interval because he doesn't visit Google

544
00:24:13,429 --> 00:24:16,879
during that time interval so in this

545
00:24:15,080 --> 00:24:19,489
case there's two extra rehearsals that

546
00:24:16,879 --> 00:24:24,289
the user would need to do to remember

547
00:24:19,489 --> 00:24:26,690
all those passwords for eight days so

548
00:24:24,289 --> 00:24:29,239
our usability measure is actually going

549
00:24:26,690 --> 00:24:30,710
to be X T just the total number of extra

550
00:24:29,239 --> 00:24:32,749
rehearsals to remember all of your

551
00:24:30,710 --> 00:24:35,450
passwords forty days and now our

552
00:24:32,749 --> 00:24:37,009
usability goal is naturally minimize the

553
00:24:35,450 --> 00:24:42,320
total number of rehearsal reminders

554
00:24:37,009 --> 00:24:47,389
beyond a natural internet usage alright

555
00:24:42,320 --> 00:24:49,700
so so we looked at a toy example but so

556
00:24:47,389 --> 00:24:52,399
what about users that have you know more

557
00:24:49,700 --> 00:24:55,249
than two accounts so you can introduce a

558
00:24:52,399 --> 00:24:56,959
model of of the user in particular you

559
00:24:55,249 --> 00:24:59,450
can introduce a model of an active user

560
00:24:56,960 --> 00:25:01,639
with 75 accounts you know some of these

561
00:24:59,450 --> 00:25:04,340
accounts they visit every day some of

562
00:25:01,639 --> 00:25:05,689
the accounts maybe they visit once every

563
00:25:04,340 --> 00:25:08,389
week maybe some of the accounts they

564
00:25:05,690 --> 00:25:10,100
only visit once a month and now you can

565
00:25:08,389 --> 00:25:12,289
actually predict how many extra her

566
00:25:10,100 --> 00:25:14,678
CIL's disease or need over his lifetime

567
00:25:12,289 --> 00:25:19,129
to remember all of these passwords and

568
00:25:14,679 --> 00:25:20,899
even our active user needs about 3,000

569
00:25:19,129 --> 00:25:22,039
extra rehearsal reminders over his

570
00:25:20,899 --> 00:25:25,369
lifetime to remember all of his

571
00:25:22,039 --> 00:25:28,639
passwords if the user reuses the same

572
00:25:25,369 --> 00:25:31,279
password then even our infrequent or

573
00:25:28,639 --> 00:25:34,369
occasional user basically never needs an

574
00:25:31,279 --> 00:25:37,820
extra rehearsal reminder at all so our

575
00:25:34,369 --> 00:25:39,980
in free our occasional user only needs a

576
00:25:37,820 --> 00:25:41,928
point one that means with you know

577
00:25:39,980 --> 00:25:43,669
probability one-tenth you might need to

578
00:25:41,929 --> 00:25:47,149
send them one rehearsal reminder over

579
00:25:43,669 --> 00:25:49,179
his lifetime and our infrequent you

580
00:25:47,149 --> 00:25:51,529
user who's visiting most of his accounts

581
00:25:49,179 --> 00:25:53,479
you know once a month or once a year

582
00:25:51,529 --> 00:25:57,229
think of grandma when you think of the

583
00:25:53,479 --> 00:25:59,629
infrequent user would only need three

584
00:25:57,229 --> 00:26:01,609
extra rehearsal reminders of her his or

585
00:25:59,629 --> 00:26:05,299
her lifetime to remember remember all

586
00:26:01,609 --> 00:26:08,029
for passwords alright so we have one

587
00:26:05,299 --> 00:26:11,749
scheme that's usable and one scheme

588
00:26:08,029 --> 00:26:13,729
that's unusable so if we weren't

589
00:26:11,749 --> 00:26:15,320
concerned about security at all the

590
00:26:13,729 --> 00:26:20,419
answer is obvious just reuse the same

591
00:26:15,320 --> 00:26:22,099
password all right of course security is

592
00:26:20,419 --> 00:26:24,139
an issue so we have to talk about

593
00:26:22,099 --> 00:26:29,418
security and how we want to quantify

594
00:26:24,139 --> 00:26:32,418
security so before i define security

595
00:26:29,419 --> 00:26:35,929
formally let me just go over our

596
00:26:32,419 --> 00:26:37,039
high-level approach or philosophy so we

597
00:26:35,929 --> 00:26:41,749
want to make a dangerous world

598
00:26:37,039 --> 00:26:43,129
assumption a lot of times so when people

599
00:26:41,749 --> 00:26:45,529
do password analysis they're only

600
00:26:43,129 --> 00:26:47,059
looking at current adversaries they're

601
00:26:45,529 --> 00:26:50,389
looking at how secure their scheme would

602
00:26:47,059 --> 00:26:52,070
be against current attackers but in our

603
00:26:50,389 --> 00:26:53,839
view it's not enough to just defend

604
00:26:52,070 --> 00:26:56,119
against existing adversaries because

605
00:26:53,839 --> 00:26:58,820
after you propose a new strategy the

606
00:26:56,119 --> 00:27:00,769
adversary can adapt his scheme to be as

607
00:26:58,820 --> 00:27:04,700
effective as possible against your

608
00:27:00,769 --> 00:27:06,109
strategy so we want to make a dangerous

609
00:27:04,700 --> 00:27:07,609
world assumption we want to assume that

610
00:27:06,109 --> 00:27:09,678
the adversary is going to adapt his

611
00:27:07,609 --> 00:27:11,899
attack to be as effective as possible

612
00:27:09,679 --> 00:27:14,059
against our scheme and we want to

613
00:27:11,899 --> 00:27:15,918
provide guarantees even when things go

614
00:27:14,059 --> 00:27:17,960
wrong so this means that even if the

615
00:27:15,919 --> 00:27:20,029
adversary sees the cryptographic hash of

616
00:27:17,960 --> 00:27:21,979
your password and maybe one of your

617
00:27:20,029 --> 00:27:26,119
other passwords he still shouldn't be

618
00:27:21,979 --> 00:27:27,619
able to crack that cryptographic hash so

619
00:27:26,119 --> 00:27:29,299
this means that offline attacks should

620
00:27:27,619 --> 00:27:30,709
fail with high probability and we want

621
00:27:29,299 --> 00:27:34,339
to limit the damage of successful

622
00:27:30,710 --> 00:27:36,109
phishing attacks alright so formally

623
00:27:34,339 --> 00:27:37,928
we're going to treat security as a game

624
00:27:36,109 --> 00:27:40,489
between the user and the adversary and

625
00:27:37,929 --> 00:27:43,159
the user moves first in this game he

626
00:27:40,489 --> 00:27:46,700
picks his password management strategy

627
00:27:43,159 --> 00:27:48,589
and now he registers for registers at

628
00:27:46,700 --> 00:27:50,869
lots of different accounts with

629
00:27:48,589 --> 00:27:53,719
passwords following whatever strategy he

630
00:27:50,869 --> 00:27:56,359
picked and now the adversary gets to

631
00:27:53,719 --> 00:27:58,579
move and the adversary gets to point at

632
00:27:56,359 --> 00:28:00,090
you know let's say one of the users

633
00:27:58,579 --> 00:28:02,010
account accounts

634
00:28:00,090 --> 00:28:04,649
this case PayPal and say show me the

635
00:28:02,010 --> 00:28:06,210
users paypal com password and in the

636
00:28:04,650 --> 00:28:09,570
game the adversaries shown the users

637
00:28:06,210 --> 00:28:10,950
paypal com password then the adversary

638
00:28:09,570 --> 00:28:12,779
gets to point out one of the users

639
00:28:10,950 --> 00:28:14,789
accounts and say show me the

640
00:28:12,779 --> 00:28:17,460
cryptographic hash of the users let's

641
00:28:14,789 --> 00:28:18,658
say playstation com password and in this

642
00:28:17,460 --> 00:28:20,850
case the adversary gets the

643
00:28:18,659 --> 00:28:23,159
cryptographic hash value and now the

644
00:28:20,850 --> 00:28:26,490
adversaries given a budget with which to

645
00:28:23,159 --> 00:28:28,110
crack the users password for example

646
00:28:26,490 --> 00:28:30,690
maybe the adversary is given a million

647
00:28:28,110 --> 00:28:34,289
dollars to rent computing resources on

648
00:28:30,690 --> 00:28:36,419
Amazon Cloud and now we can use these

649
00:28:34,289 --> 00:28:38,730
resources to try to crack crack teasers

650
00:28:36,419 --> 00:28:40,890
password so he's given a fixed number of

651
00:28:38,730 --> 00:28:43,140
guesses that he's that he's able to try

652
00:28:40,890 --> 00:28:46,470
and the num the specific number of

653
00:28:43,140 --> 00:28:48,480
guesses depends depends largely on the

654
00:28:46,470 --> 00:28:52,890
particular password hash function that

655
00:28:48,480 --> 00:28:55,980
was used so if say sha-256 was your

656
00:28:52,890 --> 00:28:58,110
password hash function then within a

657
00:28:55,980 --> 00:29:00,059
second on a GPU you can evaluate

658
00:28:58,110 --> 00:29:02,580
billions and billions of password

659
00:29:00,059 --> 00:29:05,070
guesses if you do a little bit of key

660
00:29:02,580 --> 00:29:07,439
stretching for example bcrypt instead of

661
00:29:05,070 --> 00:29:10,049
returning the hash value it iterates

662
00:29:07,440 --> 00:29:13,260
this hash function lots of times to make

663
00:29:10,049 --> 00:29:15,179
this process more expensive and there

664
00:29:13,260 --> 00:29:18,000
are even more effective key stretching

665
00:29:15,179 --> 00:29:22,710
pools besides bcrypt for example I might

666
00:29:18,000 --> 00:29:24,630
recommend s crypt or other memory hard

667
00:29:22,710 --> 00:29:28,860
functions if you want to if you want to

668
00:29:24,630 --> 00:29:30,539
do password hashing but once this

669
00:29:28,860 --> 00:29:33,840
password hash function is fixed then

670
00:29:30,539 --> 00:29:35,309
there's a cost cost associated with

671
00:29:33,840 --> 00:29:37,470
computing the stash function and that

672
00:29:35,309 --> 00:29:41,789
gives the adversary a fixed number of

673
00:29:37,470 --> 00:29:43,890
guesses that he can try so the user wins

674
00:29:41,789 --> 00:29:45,658
this game if the adversary fails to

675
00:29:43,890 --> 00:29:48,840
crack any of the passwords that he

676
00:29:45,659 --> 00:29:51,149
doesn't already have so in this case you

677
00:29:48,840 --> 00:29:52,889
know if the adversary manages to get any

678
00:29:51,149 --> 00:29:56,250
of the users other passwords other than

679
00:29:52,890 --> 00:29:58,230
paypal com the user the adversary would

680
00:29:56,250 --> 00:30:02,309
win this game and if the adversary fails

681
00:29:58,230 --> 00:30:04,110
then the user wins this game so to

682
00:30:02,309 --> 00:30:06,899
formalize this we say that the adversary

683
00:30:04,110 --> 00:30:09,809
can compromise at most our sites plain

684
00:30:06,899 --> 00:30:11,820
text recovery attacks and the adversary

685
00:30:09,809 --> 00:30:14,389
can execute offline attacks against at

686
00:30:11,820 --> 00:30:17,399
most H additional sites

687
00:30:14,390 --> 00:30:18,840
and due to resource constraints the

688
00:30:17,400 --> 00:30:20,520
adversary has a budget cue that he's

689
00:30:18,840 --> 00:30:23,610
willing that he's able to spend during

690
00:30:20,520 --> 00:30:25,410
an offline attack the adversary wins

691
00:30:23,610 --> 00:30:29,909
this game if he can compromise any new

692
00:30:25,410 --> 00:30:31,980
sites and this looks like alphabet soup

693
00:30:29,910 --> 00:30:34,470
but throwing all the parameters of the

694
00:30:31,980 --> 00:30:38,340
game on one slide we say that a scheme

695
00:30:34,470 --> 00:30:40,020
is Q Delta M s rh secure if the

696
00:30:38,340 --> 00:30:42,720
probability that the adversary wins this

697
00:30:40,020 --> 00:30:45,600
game given all the parameters is that

698
00:30:42,720 --> 00:30:47,670
most Delta here RQ is number of offline

699
00:30:45,600 --> 00:30:49,889
guesses m is the number of user accounts

700
00:30:47,670 --> 00:30:51,390
s is the number of online guesses that

701
00:30:49,890 --> 00:30:54,690
the adversary can try before he gets

702
00:30:51,390 --> 00:30:56,220
locked out r is the number of plaintext

703
00:30:54,690 --> 00:30:59,309
passwords that the adversary gets to

704
00:30:56,220 --> 00:31:00,720
observe and h is the number of password

705
00:30:59,309 --> 00:31:06,210
hashes that the adversary gets to

706
00:31:00,720 --> 00:31:09,000
observe so as a simple example q delta m

707
00:31:06,210 --> 00:31:12,150
311 security is when the adversary gets

708
00:31:09,000 --> 00:31:15,360
one password and one password hash value

709
00:31:12,150 --> 00:31:19,500
and q guess is to break that password

710
00:31:15,360 --> 00:31:24,120
hash and it's secure if the if the user

711
00:31:19,500 --> 00:31:27,720
wins this game with high probability all

712
00:31:24,120 --> 00:31:30,059
right so well so what about security we

713
00:31:27,720 --> 00:31:31,740
can use our two toys games again reusing

714
00:31:30,059 --> 00:31:34,379
the same password we can look at

715
00:31:31,740 --> 00:31:36,780
different security parameters well in

716
00:31:34,380 --> 00:31:39,030
this case it's very easy to analyze once

717
00:31:36,780 --> 00:31:42,270
the adversary gets one password it's

718
00:31:39,030 --> 00:31:44,190
game over so the scheme isn't secure

719
00:31:42,270 --> 00:31:46,770
with our equals one it isn't secure with

720
00:31:44,190 --> 00:31:48,660
our equals to R equals three etc once

721
00:31:46,770 --> 00:31:52,290
the user gets one once adversary gets

722
00:31:48,660 --> 00:31:55,170
one password it's game over similarly if

723
00:31:52,290 --> 00:31:56,730
we pick independent passwords it doesn't

724
00:31:55,170 --> 00:31:59,600
matter how many passwords the adversary

725
00:31:56,730 --> 00:32:01,860
actually observed so he's not going to

726
00:31:59,600 --> 00:32:04,070
learn anything about these there's other

727
00:32:01,860 --> 00:32:06,809
passwords because they're independent

728
00:32:04,070 --> 00:32:08,610
and because they're strong and random

729
00:32:06,809 --> 00:32:11,490
he's unlikely to crack any of these

730
00:32:08,610 --> 00:32:12,809
passwords in an offline attack so in

731
00:32:11,490 --> 00:32:15,390
this case we're secure under all of

732
00:32:12,809 --> 00:32:17,910
these attack scenarios so great we have

733
00:32:15,390 --> 00:32:20,010
one scheme that's usable and highly

734
00:32:17,910 --> 00:32:23,790
insecure another scheme that's highly

735
00:32:20,010 --> 00:32:27,270
unusable but secure the question is can

736
00:32:23,790 --> 00:32:29,399
we find anything better so

737
00:32:27,270 --> 00:32:31,080
our approach as I hinted at at the

738
00:32:29,400 --> 00:32:33,630
beginning of the talk uses person action

739
00:32:31,080 --> 00:32:36,240
object stories and we're going to divide

740
00:32:33,630 --> 00:32:39,510
these stories into two pieces a public Q

741
00:32:36,240 --> 00:32:43,770
and a private secret so the public Q is

742
00:32:39,510 --> 00:32:46,650
a scene and a person in this case LeBron

743
00:32:43,770 --> 00:32:49,020
James on the bridge and the private

744
00:32:46,650 --> 00:32:50,910
secret is a random action in a random

745
00:32:49,020 --> 00:32:53,520
object that the user has associated with

746
00:32:50,910 --> 00:32:57,200
these images so in this case LeBron

747
00:32:53,520 --> 00:32:57,200
James is kicking a penguin on the bridge

748
00:32:57,950 --> 00:33:02,880
by the way I don't have a violent

749
00:33:00,620 --> 00:33:08,100
imagination that actually was the

750
00:33:02,880 --> 00:33:11,610
randomly generated example okay so once

751
00:33:08,100 --> 00:33:13,889
once the users memorized all these all

752
00:33:11,610 --> 00:33:16,919
these stories what does the login screen

753
00:33:13,890 --> 00:33:18,510
look like well login screen is just a

754
00:33:16,920 --> 00:33:20,910
sequence of challenges in this case

755
00:33:18,510 --> 00:33:22,560
you're asked for the action involving

756
00:33:20,910 --> 00:33:26,300
LeBron James on the bridge then the

757
00:33:22,560 --> 00:33:29,010
object then maybe the object involving

758
00:33:26,300 --> 00:33:31,560
Albert Einstein at the railroad tracks

759
00:33:29,010 --> 00:33:33,360
and the user has to type in all of these

760
00:33:31,560 --> 00:33:37,830
secrets or maybe the first three letters

761
00:33:33,360 --> 00:33:39,449
from each from each word all right and

762
00:33:37,830 --> 00:33:41,909
similarly when the user are locked into

763
00:33:39,450 --> 00:33:46,050
paypal you'll see a similar set of

764
00:33:41,910 --> 00:33:47,640
challenges all right and if you are

765
00:33:46,050 --> 00:33:49,889
paying attention you'll notice that this

766
00:33:47,640 --> 00:33:54,000
first piece of the challenge was the

767
00:33:49,890 --> 00:33:57,600
same for paypal and and for eBay or was

768
00:33:54,000 --> 00:34:00,600
that eBay sorry paypal and Amazon all

769
00:33:57,600 --> 00:34:03,929
right so we are sharing some of these

770
00:34:00,600 --> 00:34:05,879
cues across different websites and as we

771
00:34:03,930 --> 00:34:08,370
saw before sharing cues has certain

772
00:34:05,880 --> 00:34:09,659
usability advantages one potentially

773
00:34:08,370 --> 00:34:12,779
there's fewer stories to remember

774
00:34:09,659 --> 00:34:14,490
overall and there's also more natural

775
00:34:12,780 --> 00:34:16,770
rehearsal for each of the stories that

776
00:34:14,489 --> 00:34:18,928
you have to memorize now of course the

777
00:34:16,770 --> 00:34:22,409
question is what about security isn't

778
00:34:18,929 --> 00:34:27,780
reusing secrets across websites and

779
00:34:22,409 --> 00:34:29,700
insecure practice i well know and we'll

780
00:34:27,780 --> 00:34:31,740
use a combinatorial design to ensure

781
00:34:29,699 --> 00:34:34,830
that any pair of accounts has at most

782
00:34:31,739 --> 00:34:37,168
gamma secret stories in common so in

783
00:34:34,830 --> 00:34:38,909
this case you might think of gammas one

784
00:34:37,168 --> 00:34:41,129
meaning that any pair of accounts that

785
00:34:38,909 --> 00:34:45,029
the user has should share up most

786
00:34:41,129 --> 00:34:48,230
one common secret so formally we can

787
00:34:45,029 --> 00:34:51,779
introduce an NL gamma sharing set family

788
00:34:48,230 --> 00:34:55,079
we're set family is just a sequence of

789
00:34:51,779 --> 00:34:58,410
subsets s 1 through n sm each of these

790
00:34:55,079 --> 00:35:01,559
subsets is a subset of the universe 1

791
00:34:58,410 --> 00:35:04,470
through n and each subset should have

792
00:35:01,559 --> 00:35:07,049
size l so here m is the total number of

793
00:35:04,470 --> 00:35:09,779
passwords each subset corresponds to the

794
00:35:07,049 --> 00:35:12,660
secrets that the user might use at a

795
00:35:09,779 --> 00:35:14,430
particular account for example SI is the

796
00:35:12,660 --> 00:35:18,359
secret that you use to authenticate to

797
00:35:14,430 --> 00:35:20,549
account I and gamma tells you how much

798
00:35:18,359 --> 00:35:24,058
information one password might leak

799
00:35:20,549 --> 00:35:27,480
about another password l tells you how

800
00:35:24,059 --> 00:35:29,190
long each password is and n is the total

801
00:35:27,480 --> 00:35:34,799
number of Secrets that the user has to

802
00:35:29,190 --> 00:35:37,769
memorize so this is an NL gamma sharing

803
00:35:34,799 --> 00:35:40,829
sharing set family how many passwords

804
00:35:37,769 --> 00:35:44,578
can you actually form if you use this

805
00:35:40,829 --> 00:35:46,380
this trick well suppose that you only

806
00:35:44,579 --> 00:35:48,869
are willing to memorize for person

807
00:35:46,380 --> 00:35:51,630
action object stories like the users in

808
00:35:48,869 --> 00:35:53,130
our mechanical turk study well in this

809
00:35:51,630 --> 00:35:56,490
case i claim that you can actually form

810
00:35:53,130 --> 00:35:59,099
up to 14 different passwords with the

811
00:35:56,490 --> 00:36:00,959
guarantee that any pair of password any

812
00:35:59,099 --> 00:36:02,730
with a guarantee that every password

813
00:36:00,960 --> 00:36:04,559
uses for secrets in any pair of

814
00:36:02,730 --> 00:36:06,900
passwords intersects in utmost to

815
00:36:04,559 --> 00:36:09,000
secrets so in this case you have

816
00:36:06,900 --> 00:36:12,750
security against an adversary who sees

817
00:36:09,000 --> 00:36:14,009
one of your passwords but you don't

818
00:36:12,750 --> 00:36:15,960
provide security against an adversary

819
00:36:14,009 --> 00:36:17,549
you see is two of your passwords after

820
00:36:15,960 --> 00:36:18,990
an adversary sees two of your passwords

821
00:36:17,549 --> 00:36:23,450
he can potentially start to predict

822
00:36:18,990 --> 00:36:25,589
other passwords all right well suppose

823
00:36:23,450 --> 00:36:27,269
right to an adversary with one password

824
00:36:25,589 --> 00:36:29,369
is unlikely to guess any of your other

825
00:36:27,269 --> 00:36:31,859
passwords suppose that you have more

826
00:36:29,369 --> 00:36:34,829
than 14 accounts suppose that you have

827
00:36:31,859 --> 00:36:36,630
75 accounts well in this case if you're

828
00:36:34,829 --> 00:36:39,420
willing to memorize 7 person action

829
00:36:36,630 --> 00:36:42,240
object stories you can generate up to 75

830
00:36:39,420 --> 00:36:45,960
passwords with the same exact security

831
00:36:42,240 --> 00:36:47,160
guarantee all right so that's great but

832
00:36:45,960 --> 00:36:50,069
what if you want stronger security

833
00:36:47,160 --> 00:36:52,440
guarantees well ok suppose that you're

834
00:36:50,069 --> 00:36:54,420
willing to memorize 15 person action

835
00:36:52,440 --> 00:36:57,079
object stories in this

836
00:36:54,420 --> 00:36:59,609
case you can have 75 unique passwords

837
00:36:57,079 --> 00:37:02,220
with security against any adversary you

838
00:36:59,609 --> 00:37:03,720
seen up to two of your passwords so if

839
00:37:02,220 --> 00:37:05,250
the adversary gets to see any two of

840
00:37:03,720 --> 00:37:06,629
your passwords of this choosing you

841
00:37:05,250 --> 00:37:09,720
still can't predict any of your other

842
00:37:06,630 --> 00:37:12,059
passwords and if you're really motivated

843
00:37:09,720 --> 00:37:14,459
you could memorize 43 person action

844
00:37:12,059 --> 00:37:16,890
object stories and in this case you'd

845
00:37:14,460 --> 00:37:19,680
get two very extreme security guarantee

846
00:37:16,890 --> 00:37:21,808
any adversary who's seen up to six of

847
00:37:19,680 --> 00:37:23,848
your passwords is still not going to be

848
00:37:21,809 --> 00:37:27,210
able to predict any of your other any of

849
00:37:23,849 --> 00:37:29,099
your other passwords yeah if you do four

850
00:37:27,210 --> 00:37:30,960
person action object stories do you know

851
00:37:29,099 --> 00:37:34,950
how many passwords you could do with say

852
00:37:30,960 --> 00:37:36,630
the two password security oh if you

853
00:37:34,950 --> 00:37:43,919
memorize for person action object

854
00:37:36,630 --> 00:37:49,319
stories security against to uh off the

855
00:37:43,920 --> 00:37:53,730
top of my head uh I don't know I my

856
00:37:49,319 --> 00:37:57,089
guess is not very many but I'd have to

857
00:37:53,730 --> 00:37:58,530
actually try to run a computer program

858
00:37:57,089 --> 00:38:01,078
to compute the corresponding

859
00:37:58,530 --> 00:38:03,630
combinatorial design my intuition is not

860
00:38:01,079 --> 00:38:08,520
very many but I could be wrong I could

861
00:38:03,630 --> 00:38:13,349
be wrong about that so yet to get you

862
00:38:08,520 --> 00:38:14,970
know to get stronger guarantees you know

863
00:38:13,349 --> 00:38:18,950
this this technique is particularly

864
00:38:14,970 --> 00:38:24,240
powerful as the number of stories grows

865
00:38:18,950 --> 00:38:27,210
so you know with 15 stories i can get

866
00:38:24,240 --> 00:38:30,598
security to and 75 accounts if i just

867
00:38:27,210 --> 00:38:32,910
add one more story i think the number of

868
00:38:30,599 --> 00:38:36,470
passwords that i could form skyrockets

869
00:38:32,910 --> 00:38:39,058
up to like 160 or something like that so

870
00:38:36,470 --> 00:38:42,660
you know the technique is powerful and

871
00:38:39,059 --> 00:38:46,020
it's you do get a lot of growth once you

872
00:38:42,660 --> 00:38:47,460
pass a certain threshold but my

873
00:38:46,020 --> 00:38:50,839
conjecture is that if you want security

874
00:38:47,460 --> 00:38:52,859
to with four stories you're you're still

875
00:38:50,839 --> 00:38:54,779
not going to be passed that threshold

876
00:38:52,859 --> 00:38:57,569
and yet the construction is not going to

877
00:38:54,780 --> 00:38:59,430
be not going to be particularly large so

878
00:38:57,569 --> 00:39:03,380
my guess is you can't create too many

879
00:38:59,430 --> 00:39:03,379
too many passwords yeah

880
00:39:06,870 --> 00:39:16,089
no I was wondering who gets to choose

881
00:39:11,800 --> 00:39:18,520
the action and the object yeah that's it

882
00:39:16,090 --> 00:39:19,800
that's an excellent question um so we're

883
00:39:18,520 --> 00:39:22,630
recommending that these are actually

884
00:39:19,800 --> 00:39:24,970
random system assigned actions and

885
00:39:22,630 --> 00:39:27,220
objects in the user study we conducted

886
00:39:24,970 --> 00:39:29,310
these were system assigned actions and

887
00:39:27,220 --> 00:39:32,410
objects that the users were memorizing

888
00:39:29,310 --> 00:39:35,170
and the reason we use system assigned

889
00:39:32,410 --> 00:39:36,850
actions and objects is that you know if

890
00:39:35,170 --> 00:39:38,590
users are selecting their own actions

891
00:39:36,850 --> 00:39:40,720
and objects they might select an action

892
00:39:38,590 --> 00:39:44,050
or an object that's highly correlated

893
00:39:40,720 --> 00:39:46,180
with the person or seeing that they see

894
00:39:44,050 --> 00:39:48,550
so if they have Bill Clinton on the

895
00:39:46,180 --> 00:39:50,919
beach for example maybe actions like

896
00:39:48,550 --> 00:39:53,080
swimming or objects like shark are

897
00:39:50,920 --> 00:39:56,230
natural objects to associate with a

898
00:39:53,080 --> 00:39:58,779
beach but in our case it was tickling a

899
00:39:56,230 --> 00:40:01,960
peach because these are random actions

900
00:39:58,780 --> 00:40:04,000
and objects you know it's it's not

901
00:40:01,960 --> 00:40:07,690
something that's necessarily associated

902
00:40:04,000 --> 00:40:09,460
with the person or scene and in fact you

903
00:40:07,690 --> 00:40:11,170
know what we found is that these random

904
00:40:09,460 --> 00:40:15,310
system assigned actions and objects are

905
00:40:11,170 --> 00:40:17,800
are memorable so you know if you can go

906
00:40:15,310 --> 00:40:20,160
with system assigned words that's

907
00:40:17,800 --> 00:40:27,700
certainly the most most secure option

908
00:40:20,160 --> 00:40:31,750
yeah yeah I wanted to ask the challenge

909
00:40:27,700 --> 00:40:35,710
posed by amazon is fixed over time yes

910
00:40:31,750 --> 00:40:39,310
and do amazon and paypal need to

911
00:40:35,710 --> 00:40:41,350
coordinate who'd like what challenges

912
00:40:39,310 --> 00:40:45,029
they will be posing right so okay that's

913
00:40:41,350 --> 00:40:47,500
that's an excellent question so yes

914
00:40:45,030 --> 00:40:49,450
first of all the challenge that you

915
00:40:47,500 --> 00:40:50,800
would see when you visit amazon is going

916
00:40:49,450 --> 00:40:52,810
to be fixed it's going to be the same

917
00:40:50,800 --> 00:40:54,520
every time so your password is going to

918
00:40:52,810 --> 00:40:58,540
be be the same every time you visit

919
00:40:54,520 --> 00:41:02,280
amazon do amazon and ebay need to

920
00:40:58,540 --> 00:41:04,330
coordinate i would love it if they would

921
00:41:02,280 --> 00:41:07,270
realistically I don't think this is ever

922
00:41:04,330 --> 00:41:08,830
going to happen so the way i use the

923
00:41:07,270 --> 00:41:11,250
scheme personally is I just have a

924
00:41:08,830 --> 00:41:14,770
spreadsheet on google where I record

925
00:41:11,250 --> 00:41:16,600
amazon and the associated cues we are

926
00:41:14,770 --> 00:41:18,790
working on developing a browser

927
00:41:16,600 --> 00:41:20,710
attention which functions like a

928
00:41:18,790 --> 00:41:23,560
password manager except that it doesn't

929
00:41:20,710 --> 00:41:24,790
keep any secret state it just stores the

930
00:41:23,560 --> 00:41:27,070
challenges that you would need to

931
00:41:24,790 --> 00:41:31,810
authenticate every different website and

932
00:41:27,070 --> 00:41:36,790
I say and one more question like in this

933
00:41:31,810 --> 00:41:39,670
one so suppose today a kid starts and he

934
00:41:36,790 --> 00:41:43,990
is able to remember only four stories

935
00:41:39,670 --> 00:41:46,180
and 14 password suffices as he grows old

936
00:41:43,990 --> 00:41:48,759
he might be willing to learn more

937
00:41:46,180 --> 00:41:52,600
stories yes and does your community

938
00:41:48,760 --> 00:41:54,730
really design in update dynamically or

939
00:41:52,600 --> 00:41:57,700
it does it need to be refreshed

940
00:41:54,730 --> 00:41:59,860
completely that's that's a great

941
00:41:57,700 --> 00:42:01,270
question so currently know the

942
00:41:59,860 --> 00:42:04,810
combinatorial design does not update

943
00:42:01,270 --> 00:42:06,820
dynamically getting a combinatorial

944
00:42:04,810 --> 00:42:09,100
design that does update dynamically is

945
00:42:06,820 --> 00:42:11,530
one of the research directions that

946
00:42:09,100 --> 00:42:14,850
we're trying to push hard right now so

947
00:42:11,530 --> 00:42:17,440
that is that is a great question and I

948
00:42:14,850 --> 00:42:18,610
think the intuition is spot-on you know

949
00:42:17,440 --> 00:42:22,150
it's going to be tough for a user to

950
00:42:18,610 --> 00:42:25,300
memorize 15 stories all at once and in

951
00:42:22,150 --> 00:42:28,660
fact you know we would recommend so if

952
00:42:25,300 --> 00:42:30,760
you adopt the scheme as is that you kind

953
00:42:28,660 --> 00:42:32,379
of memorize the stories in advance

954
00:42:30,760 --> 00:42:34,390
before you start using the scheme and

955
00:42:32,380 --> 00:42:35,740
you just slowly memorize the stories

956
00:42:34,390 --> 00:42:37,120
eventually you've memorized enough

957
00:42:35,740 --> 00:42:39,520
stories and now you can start using the

958
00:42:37,120 --> 00:42:41,890
scheme so that's a that's a great

959
00:42:39,520 --> 00:42:44,560
question and the intuition is spot-on we

960
00:42:41,890 --> 00:42:46,450
are trying very hard to push push in

961
00:42:44,560 --> 00:42:48,610
that direction and kind of allow for

962
00:42:46,450 --> 00:42:50,319
incremental memorization so a user can

963
00:42:48,610 --> 00:42:52,000
start using the scheme after they

964
00:42:50,320 --> 00:42:57,940
memorize for stories but increase

965
00:42:52,000 --> 00:43:04,450
security over time all right so as far

966
00:42:57,940 --> 00:43:07,210
as security goes if you use this 36 to

967
00:43:04,450 --> 00:43:09,399
sharing set family so memorizing 15

968
00:43:07,210 --> 00:43:12,400
stories each story gives you two secrets

969
00:43:09,400 --> 00:43:14,020
in action in an object then you can get

970
00:43:12,400 --> 00:43:17,140
security under the first three attack

971
00:43:14,020 --> 00:43:19,780
scenarios but if the adversary sees two

972
00:43:17,140 --> 00:43:22,029
of your passwords then potentially when

973
00:43:19,780 --> 00:43:23,830
he sees another password he knows four

974
00:43:22,030 --> 00:43:25,960
of the secrets and he can brute force

975
00:43:23,830 --> 00:43:27,970
over the remaining two secrets so it's

976
00:43:25,960 --> 00:43:29,500
not secure if the adversary sees to any

977
00:43:27,970 --> 00:43:29,950
two passwords of his choosing and then

978
00:43:29,500 --> 00:43:32,940
gets too

979
00:43:29,950 --> 00:43:35,770
execute an offline attack and if you

980
00:43:32,940 --> 00:43:38,500
only memorize for stories or seven

981
00:43:35,770 --> 00:43:40,240
stories you pick this weaker weaker

982
00:43:38,500 --> 00:43:41,800
version then you provide security under

983
00:43:40,240 --> 00:43:43,410
this first scenario where the adversary

984
00:43:41,800 --> 00:43:46,329
gets to see any one of your passwords

985
00:43:43,410 --> 00:43:47,859
but security starts to break down if the

986
00:43:46,329 --> 00:43:49,750
adversary gets more information for

987
00:43:47,859 --> 00:43:51,520
example if he sees one of your passwords

988
00:43:49,750 --> 00:43:54,970
and then gets the cryptographic hash

989
00:43:51,520 --> 00:44:00,790
then he can execute a successful offline

990
00:43:54,970 --> 00:44:04,180
attack alright so as far as usability we

991
00:44:00,790 --> 00:44:05,920
can run the same same algorithm predict

992
00:44:04,180 --> 00:44:07,419
to predict how many extra her CIL's the

993
00:44:05,920 --> 00:44:09,670
user would need over his lifetime to

994
00:44:07,420 --> 00:44:12,400
remember these secrets and here we can

995
00:44:09,670 --> 00:44:14,140
see that you know our active user is

996
00:44:12,400 --> 00:44:16,630
going to need somewhere between four and

997
00:44:14,140 --> 00:44:18,940
ten extra her CIL's over his lifetime to

998
00:44:16,630 --> 00:44:21,310
remember all these secrets and in fact

999
00:44:18,940 --> 00:44:23,140
most of these rehearsals are going to

1000
00:44:21,310 --> 00:44:26,020
come within the first week after

1001
00:44:23,140 --> 00:44:27,490
memorizing all the secrets so after you

1002
00:44:26,020 --> 00:44:29,500
know in the first week you might have to

1003
00:44:27,490 --> 00:44:31,990
annoy the user a few times but after

1004
00:44:29,500 --> 00:44:33,730
that first week most likely the user is

1005
00:44:31,990 --> 00:44:37,839
going to continue to remember all of the

1006
00:44:33,730 --> 00:44:41,680
secrets that he's remembered so now we

1007
00:44:37,839 --> 00:44:44,078
have schemes that you know it's a little

1008
00:44:41,680 --> 00:44:46,000
bit more difficult to use than just

1009
00:44:44,079 --> 00:44:49,359
reusing the same password but much more

1010
00:44:46,000 --> 00:44:51,280
secure and it's a little bit less secure

1011
00:44:49,359 --> 00:44:56,339
than picking strong random independent

1012
00:44:51,280 --> 00:44:56,339
passwords but much more much more usable

1013
00:44:56,430 --> 00:45:03,640
all right so future directions as we

1014
00:45:01,030 --> 00:45:06,579
kind of hinted at how would you actually

1015
00:45:03,640 --> 00:45:08,020
use this this game well if you wanted to

1016
00:45:06,579 --> 00:45:09,609
adopt it right now you would have to

1017
00:45:08,020 --> 00:45:12,430
basically set up your own spreadsheet

1018
00:45:09,609 --> 00:45:14,799
and record amazon and here's the

1019
00:45:12,430 --> 00:45:19,990
associated cues you know LeBron James

1020
00:45:14,800 --> 00:45:21,940
action Bill Clinton object etc so we'd

1021
00:45:19,990 --> 00:45:23,379
like to develop a browser extension and

1022
00:45:21,940 --> 00:45:27,339
this is a project that we're working on

1023
00:45:23,380 --> 00:45:28,900
right now which would allow you to have

1024
00:45:27,339 --> 00:45:32,259
the computer just show you the

1025
00:45:28,900 --> 00:45:33,970
appropriate cues when you login so you

1026
00:45:32,260 --> 00:45:37,329
know right now for me the most annoying

1027
00:45:33,970 --> 00:45:39,609
feature of the scheme is not remembering

1028
00:45:37,329 --> 00:45:41,500
the secrets but opening up the

1029
00:45:39,609 --> 00:45:43,779
spreadsheet and finding the associated

1030
00:45:41,500 --> 00:45:45,940
cues so

1031
00:45:43,780 --> 00:45:48,340
if we can eliminate this challenge I

1032
00:45:45,940 --> 00:45:52,380
think this game is going to be much much

1033
00:45:48,340 --> 00:45:55,510
easier to use and also as Himanta

1034
00:45:52,380 --> 00:45:59,140
indicated gradual password strengthening

1035
00:45:55,510 --> 00:46:01,210
so can we allow a user to memorize for

1036
00:45:59,140 --> 00:46:03,460
password fourth person action object

1037
00:46:01,210 --> 00:46:05,410
stories initially and increase security

1038
00:46:03,460 --> 00:46:08,940
over time instead of demanding that the

1039
00:46:05,410 --> 00:46:11,680
users memorize all their secrets upfront

1040
00:46:08,940 --> 00:46:14,740
another important direction is

1041
00:46:11,680 --> 00:46:16,720
recovering forgotten secrets so you know

1042
00:46:14,740 --> 00:46:18,640
what happens if the user does happen to

1043
00:46:16,720 --> 00:46:21,310
forget one of these person action object

1044
00:46:18,640 --> 00:46:23,640
stories we have some ideas about ways to

1045
00:46:21,310 --> 00:46:27,970
construct a secure recovery mechanism

1046
00:46:23,640 --> 00:46:29,799
which would allow a user to recover any

1047
00:46:27,970 --> 00:46:32,189
forgotten secret given that he can

1048
00:46:29,800 --> 00:46:34,990
remember most of his other other stories

1049
00:46:32,190 --> 00:46:36,640
and in this case the idea would be to

1050
00:46:34,990 --> 00:46:39,609
use error correcting codes and some

1051
00:46:36,640 --> 00:46:41,140
other tools from cryptography to make

1052
00:46:39,610 --> 00:46:43,270
the mechanism something in it that's

1053
00:46:41,140 --> 00:46:45,430
completely inaccessible to an adversary

1054
00:46:43,270 --> 00:46:49,180
who doesn't know already know most of

1055
00:46:45,430 --> 00:46:51,009
these are secrets in a final direction

1056
00:46:49,180 --> 00:46:52,660
one that I think is potentially

1057
00:46:51,010 --> 00:46:55,480
interesting to explore is intrusion

1058
00:46:52,660 --> 00:46:57,160
detection so we have a model spaced

1059
00:46:55,480 --> 00:47:00,280
repetition model that allows us to

1060
00:46:57,160 --> 00:47:04,230
predict when a user is going to forget

1061
00:47:00,280 --> 00:47:08,920
their password if they don't rehearse so

1062
00:47:04,230 --> 00:47:11,670
what happens if you're a server and you

1063
00:47:08,920 --> 00:47:15,220
observe a user logging in at time one

1064
00:47:11,670 --> 00:47:19,120
he's successful you observe him login an

1065
00:47:15,220 --> 00:47:21,970
hour later he's successful and then you

1066
00:47:19,120 --> 00:47:23,589
know an hour later these are logs in

1067
00:47:21,970 --> 00:47:26,230
three times and he's unsuccessful every

1068
00:47:23,590 --> 00:47:28,210
time well that seems a little bit

1069
00:47:26,230 --> 00:47:29,980
suspicious because it seems like the

1070
00:47:28,210 --> 00:47:33,670
user has memorized the password and all

1071
00:47:29,980 --> 00:47:36,100
of a sudden he's forgotten it whereas if

1072
00:47:33,670 --> 00:47:38,260
you see the user login you know once

1073
00:47:36,100 --> 00:47:41,170
that day one and he gets the password

1074
00:47:38,260 --> 00:47:42,820
correct and then maybe you know three

1075
00:47:41,170 --> 00:47:44,830
months later he tries to log in and

1076
00:47:42,820 --> 00:47:47,650
these incorrect three times this might

1077
00:47:44,830 --> 00:47:49,330
be less suspicious so the question is

1078
00:47:47,650 --> 00:47:51,700
whether we can use the space repetition

1079
00:47:49,330 --> 00:47:55,660
model to actually gain some intuition

1080
00:47:51,700 --> 00:47:57,040
and predict which login attempts may or

1081
00:47:55,660 --> 00:47:59,339
may not be an entry

1082
00:47:57,040 --> 00:48:02,620
are trying to access the users account

1083
00:47:59,340 --> 00:48:12,670
so thank you for listening and I'll take

1084
00:48:02,620 --> 00:48:15,700
any questions all right I think we had

1085
00:48:12,670 --> 00:48:18,070
one yes yeah what is the role of two FA

1086
00:48:15,700 --> 00:48:19,509
in the password cracking cracking like

1087
00:48:18,070 --> 00:48:22,540
what is the role of two factor

1088
00:48:19,510 --> 00:48:24,100
authentication so I mean two factor

1089
00:48:22,540 --> 00:48:27,490
authentication could certainly be used

1090
00:48:24,100 --> 00:48:30,610
in addition in addition to any of this

1091
00:48:27,490 --> 00:48:33,669
games that we we propose you know of

1092
00:48:30,610 --> 00:48:37,210
course when a two-factor authentication

1093
00:48:33,670 --> 00:48:39,970
is great you know encourage anyone to

1094
00:48:37,210 --> 00:48:42,700
adopt it whenever possible it's not

1095
00:48:39,970 --> 00:48:45,879
universally available some companies

1096
00:48:42,700 --> 00:48:49,529
offer it some you know google offers at

1097
00:48:45,880 --> 00:48:52,150
some organizations tend not to offer it

1098
00:48:49,530 --> 00:48:54,580
but you know even if you use two-factor

1099
00:48:52,150 --> 00:48:57,160
authentication there's still there's

1100
00:48:54,580 --> 00:48:58,660
still that risk that an adversary will

1101
00:48:57,160 --> 00:49:01,060
break into the server and be able to

1102
00:48:58,660 --> 00:49:05,140
execute that offline attack on your on

1103
00:49:01,060 --> 00:49:06,340
your password so even then it's you know

1104
00:49:05,140 --> 00:49:08,410
even if you're using two-factor

1105
00:49:06,340 --> 00:49:15,580
authentication it's still good to have

1106
00:49:08,410 --> 00:49:20,020
independent passwords if if possible any

1107
00:49:15,580 --> 00:49:23,799
other questions yeah I think I already

1108
00:49:20,020 --> 00:49:25,990
asked you if that password based

1109
00:49:23,800 --> 00:49:28,750
authentication scheme has such a

1110
00:49:25,990 --> 00:49:30,700
difficulties why don't we move to

1111
00:49:28,750 --> 00:49:33,790
hardware based authentication or

1112
00:49:30,700 --> 00:49:38,350
fingerprint ok this is a this is a great

1113
00:49:33,790 --> 00:49:41,200
question so there's been a lot of work

1114
00:49:38,350 --> 00:49:43,860
over really last few decades trying to

1115
00:49:41,200 --> 00:49:46,810
replace passwords so you have hardware

1116
00:49:43,860 --> 00:49:49,840
authentication you have biometrics you

1117
00:49:46,810 --> 00:49:53,160
have graphical passwords you know you

1118
00:49:49,840 --> 00:49:58,120
have your RSA I you know securid tokens

1119
00:49:53,160 --> 00:50:02,350
and in 2004 Bill Gates kind of famously

1120
00:49:58,120 --> 00:50:04,270
declared the password is dead but you

1121
00:50:02,350 --> 00:50:07,029
know here's a plot of the number of

1122
00:50:04,270 --> 00:50:07,820
passwords that that are being used over

1123
00:50:07,030 --> 00:50:12,020
time

1124
00:50:07,820 --> 00:50:14,060
and you know there's this is the point

1125
00:50:12,020 --> 00:50:15,800
in time at which Bill Gates declares the

1126
00:50:14,060 --> 00:50:18,770
password is dead and this is what's

1127
00:50:15,800 --> 00:50:20,750
happened since so you know somehow

1128
00:50:18,770 --> 00:50:22,340
despite all of these attempts to replace

1129
00:50:20,750 --> 00:50:26,090
passwords they don't seem to be going

1130
00:50:22,340 --> 00:50:27,940
away well why is that so we have

1131
00:50:26,090 --> 00:50:32,410
password management software that's one

1132
00:50:27,940 --> 00:50:34,640
potential replacement but as we

1133
00:50:32,410 --> 00:50:36,350
mentioned earlier now you have to trust

1134
00:50:34,640 --> 00:50:39,080
all the computational devices that you

1135
00:50:36,350 --> 00:50:41,450
ever use what happens if one's infected

1136
00:50:39,080 --> 00:50:45,020
with malware or what happens if there's

1137
00:50:41,450 --> 00:50:49,250
a security breach at one of the password

1138
00:50:45,020 --> 00:50:51,380
managers that would be problematic of

1139
00:50:49,250 --> 00:50:54,560
course password managers are only one

1140
00:50:51,380 --> 00:50:57,460
alternative you know there's like

1141
00:50:54,560 --> 00:51:03,410
Hardware tokens biometrics I scanners

1142
00:50:57,460 --> 00:51:06,380
and there was a paper published in 2012

1143
00:51:03,410 --> 00:51:08,330
by be know her leave in or shot and

1144
00:51:06,380 --> 00:51:10,700
others called the quest to replace

1145
00:51:08,330 --> 00:51:14,360
passwords they kind of looked at all of

1146
00:51:10,700 --> 00:51:17,000
these proposed replacements and found

1147
00:51:14,360 --> 00:51:19,520
that really none of them is that silver

1148
00:51:17,000 --> 00:51:22,970
bullet that we that we need to replace

1149
00:51:19,520 --> 00:51:28,040
passwords so you know despite all their

1150
00:51:22,970 --> 00:51:31,580
issues a password has a low amortized

1151
00:51:28,040 --> 00:51:34,520
cost per user so if your Facebook and

1152
00:51:31,580 --> 00:51:37,430
you haven't you haven't raised capital

1153
00:51:34,520 --> 00:51:40,310
yet they had a million users before they

1154
00:51:37,430 --> 00:51:42,230
started to raise any capital you know

1155
00:51:40,310 --> 00:51:45,410
you can't issue all of your customers an

1156
00:51:42,230 --> 00:51:48,740
RSA securid tag it's just you know too

1157
00:51:45,410 --> 00:51:51,200
much money passwords are essentially

1158
00:51:48,740 --> 00:51:52,879
free to to implement you know there's

1159
00:51:51,200 --> 00:51:54,950
they're mature you have open source

1160
00:51:52,880 --> 00:51:58,820
implementations of password libraries

1161
00:51:54,950 --> 00:52:02,029
like bcrypt so it's kind of free to free

1162
00:51:58,820 --> 00:52:03,470
to implement so if you're a facebook and

1163
00:52:02,030 --> 00:52:05,840
you have these options are you going to

1164
00:52:03,470 --> 00:52:09,200
use passwords or are you going to use

1165
00:52:05,840 --> 00:52:11,660
you know RSA securid well of course

1166
00:52:09,200 --> 00:52:12,740
you're going to use passwords you know

1167
00:52:11,660 --> 00:52:15,980
similarly we could think about

1168
00:52:12,740 --> 00:52:17,600
biometrics well the advantage is there's

1169
00:52:15,980 --> 00:52:21,170
nothing to remember I just have to have

1170
00:52:17,600 --> 00:52:23,210
my finger but you know what happens if

1171
00:52:21,170 --> 00:52:25,430
an adversary is able to obtain my

1172
00:52:23,210 --> 00:52:29,030
biometric you know I can't change my

1173
00:52:25,430 --> 00:52:32,569
fingerprint once it's gone it's gone and

1174
00:52:29,030 --> 00:52:34,630
in fact you know I'm kind of leaking my

1175
00:52:32,569 --> 00:52:37,849
fingerprint every time I touch something

1176
00:52:34,630 --> 00:52:39,440
in fact i'm potentially licking my

1177
00:52:37,849 --> 00:52:41,900
finger print right now when I wave it in

1178
00:52:39,440 --> 00:52:45,500
front of the high-definition camera in

1179
00:52:41,900 --> 00:52:48,670
fact a German hacker looked at a

1180
00:52:45,500 --> 00:52:52,520
high-resolution photo of angela merkel's

1181
00:52:48,670 --> 00:52:54,740
of Angela Merkel zoomed in on one of her

1182
00:52:52,520 --> 00:52:57,470
fingers and actually was able to extract

1183
00:52:54,740 --> 00:53:01,490
the fingerprint and forge authentication

1184
00:52:57,470 --> 00:53:03,799
credentials so there's lots of proposed

1185
00:53:01,490 --> 00:53:05,419
replacements but none of these

1186
00:53:03,799 --> 00:53:07,759
replacements is strictly better than

1187
00:53:05,420 --> 00:53:09,440
passwords they have some some advantages

1188
00:53:07,760 --> 00:53:13,339
but they always come with that critical

1189
00:53:09,440 --> 00:53:15,859
disadvantage which means that you know

1190
00:53:13,339 --> 00:53:19,130
until we find a replacement that's going

1191
00:53:15,859 --> 00:53:21,589
to address all of these security and

1192
00:53:19,130 --> 00:53:25,540
usability criteria most likely passwords

1193
00:53:21,589 --> 00:53:25,540
are here to stay for better or worse

1194
00:53:47,290 --> 00:53:49,350
you

