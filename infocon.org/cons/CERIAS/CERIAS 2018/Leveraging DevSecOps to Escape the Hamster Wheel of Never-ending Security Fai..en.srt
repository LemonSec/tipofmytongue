1
00:00:07,059 --> 00:00:14,110
hello everyone it's my great pleasure to

2
00:00:10,370 --> 00:00:17,210
introduce Chris Reed from the Lille

3
00:00:14,110 --> 00:00:20,000
company he's the director of product

4
00:00:17,210 --> 00:00:21,560
cybersecurity so he's been running in

5
00:00:20,000 --> 00:00:24,350
the hamster wheel for a couple of years

6
00:00:21,560 --> 00:00:28,759
now doing a lot of amazing stuff working

7
00:00:24,350 --> 00:00:31,580
on mitigations security failures other

8
00:00:28,760 --> 00:00:35,239
kind of issues and here's going to talk

9
00:00:31,580 --> 00:00:36,860
about leveraging diff sec ops and how we

10
00:00:35,239 --> 00:00:38,989
can actually escape this hamster wheel

11
00:00:36,860 --> 00:00:40,069
of never-ending security Phil I'm very

12
00:00:38,989 --> 00:00:42,739
interested in here what do you have to

13
00:00:40,069 --> 00:00:44,659
say about also he also told me that he's

14
00:00:42,739 --> 00:00:47,089
fine with an interactive talks if you

15
00:00:44,659 --> 00:00:48,979
during the talk feel free to interrupt

16
00:00:47,089 --> 00:00:50,059
him and we'll see probably I can take it

17
00:00:48,979 --> 00:00:53,059
from there so please take it away

18
00:00:50,059 --> 00:00:55,129
yep yeah so just a little bit more to

19
00:00:53,059 --> 00:00:57,489
give you some of my background so you

20
00:00:55,129 --> 00:01:00,409
know what types of questions you can ask

21
00:00:57,489 --> 00:01:02,748
so I've been with Lille

22
00:01:00,409 --> 00:01:05,269
I'm coming up I'm almost at 19 years

23
00:01:02,749 --> 00:01:08,240
I've been in security for most of that

24
00:01:05,269 --> 00:01:11,780
and I've had a number of security rules

25
00:01:08,240 --> 00:01:13,339
I started out more on the IT side I've

26
00:01:11,780 --> 00:01:15,950
built like our Security Operations

27
00:01:13,340 --> 00:01:18,469
Center at one point managing a team

28
00:01:15,950 --> 00:01:19,759
doing that and I've done security

29
00:01:18,469 --> 00:01:21,908
architecture I've even gone over on an

30
00:01:19,759 --> 00:01:24,619
assignment to China for eight months

31
00:01:21,909 --> 00:01:26,979
where I helped deal with some issues we

32
00:01:24,619 --> 00:01:30,649
had in our research center there and

33
00:01:26,979 --> 00:01:32,119
most recently I've taken over as the

34
00:01:30,649 --> 00:01:35,780
director of product cybersecurity Lilly

35
00:01:32,119 --> 00:01:37,159
is getting ready to launch software

36
00:01:35,780 --> 00:01:40,159
products we're traditionally a

37
00:01:37,159 --> 00:01:43,009
pharmaceutical company with drug

38
00:01:40,159 --> 00:01:44,600
products but we are starting to add

39
00:01:43,009 --> 00:01:45,890
software components do that and I'm

40
00:01:44,600 --> 00:01:49,130
going to give you some context for that

41
00:01:45,890 --> 00:01:52,189
today the other thing that is relevant

42
00:01:49,130 --> 00:01:56,420
for the talk today is that I'm also one

43
00:01:52,189 --> 00:01:58,850
of our third-party Assessors they're all

44
00:01:56,420 --> 00:02:01,939
they're probably six or seven of us at

45
00:01:58,850 --> 00:02:03,020
Lille that go out to when we have

46
00:02:01,939 --> 00:02:04,758
companies that are high-risk enough

47
00:02:03,020 --> 00:02:06,770
we'll actually go visit them on-site and

48
00:02:04,759 --> 00:02:10,190
so I've had the privilege of getting to

49
00:02:06,770 --> 00:02:15,079
go peek on behind the curtains at places

50
00:02:10,190 --> 00:02:17,450
like box in Microsoft

51
00:02:15,080 --> 00:02:18,770
I've even before they before they

52
00:02:17,450 --> 00:02:19,369
stopped allowing customers ago I've

53
00:02:18,770 --> 00:02:22,129
actually been on

54
00:02:19,370 --> 00:02:23,930
say it at AWS in Seattle and so I've

55
00:02:22,129 --> 00:02:26,359
gotten to see how lots of different

56
00:02:23,930 --> 00:02:28,280
companies approach security which helps

57
00:02:26,360 --> 00:02:30,080
inform how I do my job so I really enjoy

58
00:02:28,280 --> 00:02:31,159
that part of it and I think I'll I'll be

59
00:02:30,080 --> 00:02:34,909
able to represent lots of different

60
00:02:31,159 --> 00:02:38,359
perspectives today so today what I want

61
00:02:34,909 --> 00:02:40,970
to talk through I want to set some

62
00:02:38,360 --> 00:02:43,159
context for you first of all talking

63
00:02:40,970 --> 00:02:46,250
about digital health because this will

64
00:02:43,159 --> 00:02:47,890
give some context of why what we're

65
00:02:46,250 --> 00:02:51,200
going to talk about what security is so

66
00:02:47,890 --> 00:02:52,518
important and essential and then I want

67
00:02:51,200 --> 00:02:55,179
to talk about what I call the hamster

68
00:02:52,519 --> 00:02:58,370
wheel which is the pace of development

69
00:02:55,180 --> 00:03:00,620
today compared to the past and why

70
00:02:58,370 --> 00:03:03,650
traditional methods of securing software

71
00:03:00,620 --> 00:03:07,190
just aren't keeping up and why we need

72
00:03:03,650 --> 00:03:09,290
to be faster and then I'll try to

73
00:03:07,190 --> 00:03:10,909
propose a solution to that at least the

74
00:03:09,290 --> 00:03:14,209
one that were worth the route that we're

75
00:03:10,909 --> 00:03:17,470
taking and so again interrupt at any

76
00:03:14,209 --> 00:03:25,069
point if you have questions

77
00:03:17,470 --> 00:03:26,840
so first what I'd like to do I can't

78
00:03:25,069 --> 00:03:28,760
talk directly about our software

79
00:03:26,840 --> 00:03:31,310
products because they're not currently

80
00:03:28,760 --> 00:03:33,230
on the market in their development you

81
00:03:31,310 --> 00:03:35,049
can go and research and we've had

82
00:03:33,230 --> 00:03:37,760
articles like in The Wall Street Journal

83
00:03:35,049 --> 00:03:39,590
and some other locations where our CEO

84
00:03:37,760 --> 00:03:41,000
has talked about our products but I'm

85
00:03:39,590 --> 00:03:43,489
going to give you a hypothetical product

86
00:03:41,000 --> 00:03:47,480
today but you can apply all these things

87
00:03:43,489 --> 00:03:49,280
to products we may have and just to help

88
00:03:47,480 --> 00:03:52,129
you connect dots you know we're a big

89
00:03:49,280 --> 00:03:54,829
maker of diabetes products so you can

90
00:03:52,129 --> 00:03:56,690
imagine insulins and other treatments

91
00:03:54,829 --> 00:03:58,280
like that so you can you can pretty

92
00:03:56,690 --> 00:03:59,930
quickly see the jump that you would make

93
00:03:58,280 --> 00:04:02,359
from these to the types of software

94
00:03:59,930 --> 00:04:05,620
products we have so what I wanted to

95
00:04:02,359 --> 00:04:09,739
give you guys to start with is just a

96
00:04:05,620 --> 00:04:13,190
scenario of a medical situation and this

97
00:04:09,739 --> 00:04:15,379
one's actually pretty personal to me my

98
00:04:13,190 --> 00:04:17,329
wife we luckily have three beautiful

99
00:04:15,379 --> 00:04:19,548
kids now but I will tell you that wasn't

100
00:04:17,329 --> 00:04:22,039
an easy process

101
00:04:19,548 --> 00:04:24,289
my wife has complicated pregnancies all

102
00:04:22,039 --> 00:04:27,800
she's had issues in every single one of

103
00:04:24,289 --> 00:04:31,010
them and in fact to be perfectly honest

104
00:04:27,800 --> 00:04:32,260
we've we've actually lost babies fairly

105
00:04:31,010 --> 00:04:34,390
far along and pride

106
00:04:32,260 --> 00:04:38,650
see and so when a woman goes through

107
00:04:34,390 --> 00:04:43,150
that and even the husband that can be a

108
00:04:38,650 --> 00:04:44,950
pretty stressful time and so you can

109
00:04:43,150 --> 00:04:46,390
imagine she's she's had preeclampsia

110
00:04:44,950 --> 00:04:48,280
which is really high blood pressure

111
00:04:46,390 --> 00:04:50,320
where she's supposed to be on bed rest

112
00:04:48,280 --> 00:04:52,090
she's actually had gestational diabetes

113
00:04:50,320 --> 00:04:55,180
where she's having to check her blood

114
00:04:52,090 --> 00:04:56,950
sugar multiple times a day and the

115
00:04:55,180 --> 00:04:59,530
treatment for these again monitoring

116
00:04:56,950 --> 00:05:02,190
blood glucose she HF she'd have to take

117
00:04:59,530 --> 00:05:04,090
her blood pressure multiple times a day

118
00:05:02,190 --> 00:05:05,620
and she would write those down on a

119
00:05:04,090 --> 00:05:06,940
paper log and then once a day she called

120
00:05:05,620 --> 00:05:08,830
the doctor's office and really all that

121
00:05:06,940 --> 00:05:09,940
information and by the way that she

122
00:05:08,830 --> 00:05:11,109
wasn't talked to the doctor she was

123
00:05:09,940 --> 00:05:13,180
talking to someone I met just took it

124
00:05:11,110 --> 00:05:17,410
down and then two hours later the doctor

125
00:05:13,180 --> 00:05:19,960
would call back also in addition to that

126
00:05:17,410 --> 00:05:22,840
she would have to go in three times a

127
00:05:19,960 --> 00:05:25,330
week to do what they call fetal stress

128
00:05:22,840 --> 00:05:27,070
testing she would go in and lay in a bed

129
00:05:25,330 --> 00:05:29,349
and they'd put a fetal heart rate

130
00:05:27,070 --> 00:05:31,180
monitor on her stomach and watch the

131
00:05:29,350 --> 00:05:33,250
heart rate of the baby for about 30

132
00:05:31,180 --> 00:05:35,770
minutes so three times a week she had to

133
00:05:33,250 --> 00:05:38,650
interrupt her day and by the way

134
00:05:35,770 --> 00:05:40,930
sometimes with little kids and then she

135
00:05:38,650 --> 00:05:42,760
had to go in to an office strap

136
00:05:40,930 --> 00:05:43,990
something on for 30 minutes and then you

137
00:05:42,760 --> 00:05:45,219
know again the doctor would review it

138
00:05:43,990 --> 00:05:49,090
later in the day and let her know if

139
00:05:45,220 --> 00:05:50,410
there are any issues and then once a

140
00:05:49,090 --> 00:05:52,450
week - she had to go in and actually

141
00:05:50,410 --> 00:05:55,330
talk to the doctor so she's having to

142
00:05:52,450 --> 00:05:59,170
make for doctor doctor trips a week and

143
00:05:55,330 --> 00:06:02,260
this is like in the last 1012 weeks so

144
00:05:59,170 --> 00:06:04,270
this is multiple months of this and

145
00:06:02,260 --> 00:06:05,590
again if you've been through a stressful

146
00:06:04,270 --> 00:06:08,260
event this can be quite a stressful

147
00:06:05,590 --> 00:06:09,580
thing to go through so that's kind of

148
00:06:08,260 --> 00:06:15,400
the scenario I want you guys to imagine

149
00:06:09,580 --> 00:06:17,800
just so how can we use technology to

150
00:06:15,400 --> 00:06:22,810
help that so I've made up a fictitious

151
00:06:17,800 --> 00:06:25,630
app that I call gestation yeah my name

152
00:06:22,810 --> 00:06:27,850
is not my forte sorry this is completely

153
00:06:25,630 --> 00:06:29,710
fictitious I promise but it really

154
00:06:27,850 --> 00:06:32,470
illustrates the point of what I'm gonna

155
00:06:29,710 --> 00:06:33,789
talk about the features of this app is

156
00:06:32,470 --> 00:06:35,800
that it's going to integrate and get

157
00:06:33,790 --> 00:06:38,260
your heart rate from your Apple watch or

158
00:06:35,800 --> 00:06:40,120
your and also that you can have a

159
00:06:38,260 --> 00:06:42,550
wearable heart rate monitor for your a

160
00:06:40,120 --> 00:06:43,870
fetal monitor so literally all day long

161
00:06:42,550 --> 00:06:45,010
you can just drop that thing on and

162
00:06:43,870 --> 00:06:46,980
it'll monitor the heart rate of your

163
00:06:45,010 --> 00:06:49,090
baby

164
00:06:46,980 --> 00:06:52,030
you know you can have a blood-pressure

165
00:06:49,090 --> 00:06:57,880
device on and also a blood glucose meter

166
00:06:52,030 --> 00:07:00,070
that all is digital and you can also in

167
00:06:57,880 --> 00:07:01,360
the app track what medication you've

168
00:07:00,070 --> 00:07:02,830
taken because a lot of times for the

169
00:07:01,360 --> 00:07:06,190
glucose you're taking some type of

170
00:07:02,830 --> 00:07:07,750
medication and it's also just pulling in

171
00:07:06,190 --> 00:07:11,620
data from all those sources and starting

172
00:07:07,750 --> 00:07:12,820
to track it over time and then also in

173
00:07:11,620 --> 00:07:15,160
that app it will give you information

174
00:07:12,820 --> 00:07:17,980
just basic information about things like

175
00:07:15,160 --> 00:07:19,510
if you have a question about hey IVA you

176
00:07:17,980 --> 00:07:21,430
know I haven't felt the baby kick in

177
00:07:19,510 --> 00:07:22,659
like four hours you know you could look

178
00:07:21,430 --> 00:07:24,100
in the app and it would give you some

179
00:07:22,660 --> 00:07:25,110
information about that maybe help you

180
00:07:24,100 --> 00:07:27,669
relax

181
00:07:25,110 --> 00:07:29,080
but the real interesting part here is

182
00:07:27,669 --> 00:07:31,090
that it's also gonna integrate with the

183
00:07:29,080 --> 00:07:35,729
electronic health care record that sits

184
00:07:31,090 --> 00:07:35,729
back at the doctor's office question

185
00:07:42,540 --> 00:07:49,000
disembodied voice reminded me I forget

186
00:07:46,590 --> 00:07:52,419
so you've got an Apple product you've

187
00:07:49,000 --> 00:07:55,450
got a charm honor from XYZ you've got a

188
00:07:52,419 --> 00:08:02,020
BP devise new BGM device from ABC and d

189
00:07:55,450 --> 00:08:03,969
EF who's assuming a liability on the

190
00:08:02,020 --> 00:08:05,799
reliability the accuracy and

191
00:08:03,970 --> 00:08:07,600
repeatability of all that equipment and

192
00:08:05,800 --> 00:08:09,610
how do you mitigate those factors out

193
00:08:07,600 --> 00:08:12,270
when you collected digitally that's an

194
00:08:09,610 --> 00:08:14,889
excellent question

195
00:08:12,270 --> 00:08:17,639
so the perp to be perfectly honest the

196
00:08:14,889 --> 00:08:20,560
answer is that's still unclear but

197
00:08:17,639 --> 00:08:22,389
clearly the manufacturer of the software

198
00:08:20,560 --> 00:08:24,700
product is going to take a large part of

199
00:08:22,389 --> 00:08:26,229
that but I will and I will talk to that

200
00:08:24,700 --> 00:08:29,229
a little bit this is obviously because

201
00:08:26,229 --> 00:08:30,520
it's being used in medical care it's

202
00:08:29,229 --> 00:08:32,439
gonna be highly regulated and I'll talk

203
00:08:30,520 --> 00:08:34,449
to that a little bit but to be honest

204
00:08:32,440 --> 00:08:37,450
with you this this idea of like wearable

205
00:08:34,450 --> 00:08:39,339
stuff you know telemetry that people are

206
00:08:37,450 --> 00:08:41,800
wearing home and it's informing doctor

207
00:08:39,339 --> 00:08:44,680
decisions like this is a new space for

208
00:08:41,799 --> 00:08:46,839
the FDA and you're starting to see lots

209
00:08:44,680 --> 00:08:48,640
of products get there in fact a lot of

210
00:08:46,839 --> 00:08:50,320
consumer products have walked up to the

211
00:08:48,640 --> 00:08:53,140
edge but then very careful not to step

212
00:08:50,320 --> 00:08:56,650
across you know like health kit with

213
00:08:53,140 --> 00:08:58,180
Apple and so many other devices but even

214
00:08:56,650 --> 00:08:58,470
those companies Apple and Google and

215
00:08:58,180 --> 00:09:00,209
every

216
00:08:58,470 --> 00:09:02,100
are trying to figure out how to cross

217
00:09:00,210 --> 00:09:03,450
the line but they don't want to take on

218
00:09:02,100 --> 00:09:07,560
all that liability so they're trying to

219
00:09:03,450 --> 00:09:10,920
walk it right now it's great question so

220
00:09:07,560 --> 00:09:12,180
if all that's going on I think you guys

221
00:09:10,920 --> 00:09:15,180
would agree that we could have some

222
00:09:12,180 --> 00:09:17,880
pretty good outcomes here we have no

223
00:09:15,180 --> 00:09:20,760
fetal monitor visits so my wife gets to

224
00:09:17,880 --> 00:09:23,100
save multiple hours a week and the

225
00:09:20,760 --> 00:09:26,460
stress of draggin her her four kids to

226
00:09:23,100 --> 00:09:27,690
the the office to do those visits we

227
00:09:26,460 --> 00:09:30,300
actually get more regular heart rate

228
00:09:27,690 --> 00:09:33,210
data both from her and the baby like

229
00:09:30,300 --> 00:09:36,089
it's not just an hour and a half of data

230
00:09:33,210 --> 00:09:37,950
point a week it's now can be up to 24

231
00:09:36,090 --> 00:09:41,700
hours a day so we have a lot of data to

232
00:09:37,950 --> 00:09:44,280
choose from we have no phone calls for

233
00:09:41,700 --> 00:09:46,260
her to like call and wait on hold and

234
00:09:44,280 --> 00:09:48,350
then read off the log and then hope

235
00:09:46,260 --> 00:09:51,510
hopefully that gets written down right

236
00:09:48,350 --> 00:09:52,710
and then also you can you can imagine

237
00:09:51,510 --> 00:09:54,600
with this data flow that we could

238
00:09:52,710 --> 00:09:56,010
actually be more proactive like imagine

239
00:09:54,600 --> 00:09:57,720
now the the physician doesn't even have

240
00:09:56,010 --> 00:10:00,120
to look at it until she comes in for a

241
00:09:57,720 --> 00:10:01,770
visit but if there's values that are out

242
00:10:00,120 --> 00:10:04,040
of certain ranges it can immediately

243
00:10:01,770 --> 00:10:06,420
notify the physician that go take a look

244
00:10:04,040 --> 00:10:07,829
and so we can actually react much

245
00:10:06,420 --> 00:10:12,449
quicker instead of waiting two or three

246
00:10:07,830 --> 00:10:14,520
days to see to see a problem you know it

247
00:10:12,450 --> 00:10:15,960
could be resolved possibly within an

248
00:10:14,520 --> 00:10:19,230
hour or being addressed within an hour

249
00:10:15,960 --> 00:10:24,780
which is pretty exciting okay so that's

250
00:10:19,230 --> 00:10:31,500
our scenario I'm just gonna reach back

251
00:10:24,780 --> 00:10:33,990
and Boop too far so this is a horrible

252
00:10:31,500 --> 00:10:36,630
architecture diagram it was the best I

253
00:10:33,990 --> 00:10:37,920
could do really quick this just kind of

254
00:10:36,630 --> 00:10:39,540
gives you an idea of all the different

255
00:10:37,920 --> 00:10:41,969
major components that are involved in

256
00:10:39,540 --> 00:10:45,599
the system and so on the bottom left

257
00:10:41,970 --> 00:10:47,640
it's all the the equipment that the

258
00:10:45,600 --> 00:10:49,020
woman would be wearing so we can see a

259
00:10:47,640 --> 00:10:52,290
heart rate monitor there's even a

260
00:10:49,020 --> 00:10:54,420
glucose sensor the watch and both of

261
00:10:52,290 --> 00:10:57,120
those are communicating with an iPhone

262
00:10:54,420 --> 00:10:59,310
and that's communicating with our cloud

263
00:10:57,120 --> 00:11:03,440
service for the application which is

264
00:10:59,310 --> 00:11:03,439
also communicating back here with the

265
00:11:04,070 --> 00:11:09,930
integrated healthcare delivery network

266
00:11:06,650 --> 00:11:12,329
to their EHR system and then ultimately

267
00:11:09,930 --> 00:11:14,160
the doctor on

268
00:11:12,329 --> 00:11:16,709
app on an iPad or whatever device they

269
00:11:14,160 --> 00:11:18,149
typically use maybe even at home they

270
00:11:16,709 --> 00:11:20,429
can actually pull up the patient's

271
00:11:18,149 --> 00:11:22,199
record and get all sorts of information

272
00:11:20,429 --> 00:11:23,970
at their fingerprint and the other thing

273
00:11:22,199 --> 00:11:25,709
I want to show here is some of that

274
00:11:23,970 --> 00:11:27,600
informations coming from the EHR but

275
00:11:25,709 --> 00:11:29,638
some of it is pulling the real-time data

276
00:11:27,600 --> 00:11:31,319
that we're collecting because we collect

277
00:11:29,639 --> 00:11:34,049
way more data than they want to jam into

278
00:11:31,319 --> 00:11:35,939
the EHR system so in some of this the

279
00:11:34,049 --> 00:11:39,029
diagnostic data they can see the last

280
00:11:35,939 --> 00:11:40,649
ultrasound you can imagine all the rich

281
00:11:39,029 --> 00:11:45,149
data that the physician could have at

282
00:11:40,649 --> 00:11:47,069
their fingertips situation so again we

283
00:11:45,149 --> 00:11:50,069
have so if I think through the major

284
00:11:47,069 --> 00:11:53,519
components we have a mobile medical

285
00:11:50,069 --> 00:11:55,049
application that has an iOS app and we

286
00:11:53,519 --> 00:11:56,579
also would support Android of course

287
00:11:55,049 --> 00:11:58,889
because that's still the majority in the

288
00:11:56,579 --> 00:12:01,109
market there's a cloud component and

289
00:11:58,889 --> 00:12:04,679
just to give you guys a figure as we go

290
00:12:01,110 --> 00:12:08,309
on there's three gateway what we call

291
00:12:04,679 --> 00:12:10,559
API services that different components

292
00:12:08,309 --> 00:12:12,749
like the EHR or the mobile app would

293
00:12:10,559 --> 00:12:15,089
talk to and then behind that we have

294
00:12:12,749 --> 00:12:18,059
what we call micro services that

295
00:12:15,089 --> 00:12:19,709
actually store the data and allow the

296
00:12:18,059 --> 00:12:22,469
Gateway to communicate with key

297
00:12:19,709 --> 00:12:25,529
functions inside the cloud and then of

298
00:12:22,470 --> 00:12:28,529
course there's a this app itself would

299
00:12:25,529 --> 00:12:31,049
be a component of the EHR but something

300
00:12:28,529 --> 00:12:32,699
that we are responsible for developing

301
00:12:31,049 --> 00:12:34,230
and there's a protocol if you look it up

302
00:12:32,699 --> 00:12:36,329
called Smart on fire that's starting to

303
00:12:34,230 --> 00:12:38,579
be used to do this interesting

304
00:12:36,329 --> 00:12:42,238
interaction where you can interact

305
00:12:38,579 --> 00:12:44,248
directly with the EHR but also in Agoura

306
00:12:42,239 --> 00:12:46,919
interact with third-party sources and

307
00:12:44,249 --> 00:12:48,779
kind of integrate it together ok so

308
00:12:46,919 --> 00:12:59,040
that's kind of the software scenario

309
00:12:48,779 --> 00:13:00,720
that we have and so the key thing I

310
00:12:59,040 --> 00:13:03,689
would emphasize and I think the question

311
00:13:00,720 --> 00:13:05,549
LED very well to this that this is

312
00:13:03,689 --> 00:13:07,829
really a health product not an IT system

313
00:13:05,549 --> 00:13:10,519
and so there's just a different approach

314
00:13:07,829 --> 00:13:14,339
that we have to take to this software

315
00:13:10,519 --> 00:13:17,730
this software is now part of the medical

316
00:13:14,339 --> 00:13:19,110
treatment it's not just some software

317
00:13:17,730 --> 00:13:22,189
you're going to download and you know

318
00:13:19,110 --> 00:13:24,630
we're going to be regulated specifically

319
00:13:22,189 --> 00:13:26,339
by the FDA as

320
00:13:24,630 --> 00:13:28,740
medical device and so we're gonna have

321
00:13:26,340 --> 00:13:33,780
to show very rigorous control of that

322
00:13:28,740 --> 00:13:36,090
environment and if you go out and look

323
00:13:33,780 --> 00:13:38,459
up pre-market cybersecurity guidance

324
00:13:36,090 --> 00:13:42,210
with the FDA you will see that they

325
00:13:38,460 --> 00:13:46,290
require design including including hat

326
00:13:42,210 --> 00:13:48,840
safety hazard analysis and they require

327
00:13:46,290 --> 00:13:50,640
software update capabilities why would

328
00:13:48,840 --> 00:13:54,570
we ever update software right it's

329
00:13:50,640 --> 00:13:55,830
always perfect and then they actually

330
00:13:54,570 --> 00:13:58,230
have come out with what they call post

331
00:13:55,830 --> 00:13:59,550
market guidance so so the first one is

332
00:13:58,230 --> 00:14:01,770
saying hey you need to make sure you've

333
00:13:59,550 --> 00:14:05,189
designed security into your product and

334
00:14:01,770 --> 00:14:08,280
that you are sure that it can be used in

335
00:14:05,190 --> 00:14:10,050
a safe way the second one talks about

336
00:14:08,280 --> 00:14:11,520
once it's on the market you're not off

337
00:14:10,050 --> 00:14:13,890
the hook

338
00:14:11,520 --> 00:14:15,810
you guys have heard you know there's

339
00:14:13,890 --> 00:14:17,640
there's a legacy medical device problem

340
00:14:15,810 --> 00:14:19,109
out in the market right now there's a

341
00:14:17,640 --> 00:14:22,890
lot of legacy medical devices that

342
00:14:19,110 --> 00:14:24,270
aren't well patched and so even last

343
00:14:22,890 --> 00:14:26,520
year you had things like want to cry

344
00:14:24,270 --> 00:14:30,390
that tore through medical devices in

345
00:14:26,520 --> 00:14:32,220
hospital contexts because of that legacy

346
00:14:30,390 --> 00:14:33,480
mindset that we never had to patch this

347
00:14:32,220 --> 00:14:35,730
piece of a medical equipment because

348
00:14:33,480 --> 00:14:37,410
it's it's too sensitive to patch and so

349
00:14:35,730 --> 00:14:41,250
the FDA basically came out and said no

350
00:14:37,410 --> 00:14:42,719
you will patch and don't expect to get

351
00:14:41,250 --> 00:14:44,700
anything through unless you have a clear

352
00:14:42,720 --> 00:14:46,710
plan on how you're going to do that and

353
00:14:44,700 --> 00:14:48,270
then of course if we're dealing with

354
00:14:46,710 --> 00:14:50,580
patient information in the u.s. we have

355
00:14:48,270 --> 00:14:54,720
HIPPA which is going to require process

356
00:14:50,580 --> 00:14:57,300
and technical controls and then emerging

357
00:14:54,720 --> 00:15:00,330
in Europe you have gdpr which actually

358
00:14:57,300 --> 00:15:01,979
mandates security by design so you can't

359
00:15:00,330 --> 00:15:04,230
just come in and slap it on at the end

360
00:15:01,980 --> 00:15:06,900
like you really have to have shown you

361
00:15:04,230 --> 00:15:09,420
made a conscious effort to secure all

362
00:15:06,900 --> 00:15:11,550
the information in that product and then

363
00:15:09,420 --> 00:15:13,410
lastly you have to think about what this

364
00:15:11,550 --> 00:15:15,719
looks like in the field the customer

365
00:15:13,410 --> 00:15:18,270
support of it how are you going to

366
00:15:15,720 --> 00:15:20,940
manage when the patient's in control

367
00:15:18,270 --> 00:15:22,290
about when they upgrade the app if you

368
00:15:20,940 --> 00:15:24,360
have a major issue how do you make sure

369
00:15:22,290 --> 00:15:27,410
that that the patient understands that

370
00:15:24,360 --> 00:15:29,370
and upgrades their software what about

371
00:15:27,410 --> 00:15:30,959
do you guys have anyone that you know

372
00:15:29,370 --> 00:15:34,170
that it never applies their phone

373
00:15:30,960 --> 00:15:36,450
updates yeah people don't don't do that

374
00:15:34,170 --> 00:15:37,660
I have family members that usually like

375
00:15:36,450 --> 00:15:40,030
when I see them they're like

376
00:15:37,660 --> 00:15:42,540
it's I think in an air and sure enough I

377
00:15:40,030 --> 00:15:45,220
update their software and it's it's gone

378
00:15:42,540 --> 00:15:47,110
so we have to learn how to operate in

379
00:15:45,220 --> 00:15:49,330
this type of environment and maintain

380
00:15:47,110 --> 00:15:51,910
the security and most importantly to the

381
00:15:49,330 --> 00:15:55,350
FDA the safety of this environment so

382
00:15:51,910 --> 00:15:59,829
the question about the liability of this

383
00:15:55,350 --> 00:16:02,260
is a big big question right now when

384
00:15:59,830 --> 00:16:04,900
something goes wrong who's at fault is

385
00:16:02,260 --> 00:16:06,160
it can we if the patient didn't upgrade

386
00:16:04,900 --> 00:16:07,449
their software didn't put a strong

387
00:16:06,160 --> 00:16:09,579
passcode on their device is it their

388
00:16:07,450 --> 00:16:12,760
fault or is it our fault because we

389
00:16:09,580 --> 00:16:15,520
didn't require them to do that and a lot

390
00:16:12,760 --> 00:16:18,730
of that will play out in the marketplace

391
00:16:15,520 --> 00:16:20,670
as time goes on any questions this is

392
00:16:18,730 --> 00:16:22,840
the context we're kind of working in

393
00:16:20,670 --> 00:16:28,240
just to give an idea of the sensitivity

394
00:16:22,840 --> 00:16:30,700
of it alright so then we have the fun of

395
00:16:28,240 --> 00:16:32,230
the hamster wheel okay so let me

396
00:16:30,700 --> 00:16:33,400
describe the hamster wheel I might step

397
00:16:32,230 --> 00:16:36,880
back here it's this one's gonna have to

398
00:16:33,400 --> 00:16:40,420
build my my my clicker isn't working

399
00:16:36,880 --> 00:16:43,930
quite as well so a lot of you have

400
00:16:40,420 --> 00:16:45,370
probably seen something like this it's

401
00:16:43,930 --> 00:16:47,170
usually associated with something called

402
00:16:45,370 --> 00:16:48,790
agile software development methodology

403
00:16:47,170 --> 00:16:52,270
although to be honest with you it's

404
00:16:48,790 --> 00:16:56,740
really just waterfall driven drawn in a

405
00:16:52,270 --> 00:16:58,540
in an infinite loop but what's

406
00:16:56,740 --> 00:17:01,780
interesting about this is if you think

407
00:16:58,540 --> 00:17:03,250
about software development in the

408
00:17:01,780 --> 00:17:07,060
old-school way and honestly it doesn't

409
00:17:03,250 --> 00:17:09,459
matter if it's waterfall or agile even

410
00:17:07,060 --> 00:17:13,208
even at a fast pace you might do three

411
00:17:09,459 --> 00:17:14,860
releases of software a year okay and so

412
00:17:13,209 --> 00:17:19,089
I'm gonna go through how we handle a

413
00:17:14,859 --> 00:17:20,290
cycle that moves at that pace first

414
00:17:19,089 --> 00:17:21,458
thing we're gonna do in the planning

415
00:17:20,290 --> 00:17:24,010
phase we're gonna do some type of risk

416
00:17:21,459 --> 00:17:26,380
assessment to just understand what type

417
00:17:24,010 --> 00:17:28,720
of data we're using what type of safety

418
00:17:26,380 --> 00:17:30,220
implications we could have because this

419
00:17:28,720 --> 00:17:32,380
is going to help us dial in like how

420
00:17:30,220 --> 00:17:34,450
much work I went out to do on the

421
00:17:32,380 --> 00:17:36,010
security side and I put a week there

422
00:17:34,450 --> 00:17:37,330
that's probably generous because you

423
00:17:36,010 --> 00:17:38,890
know by the time you have meetings and

424
00:17:37,330 --> 00:17:40,540
get people together it probably takes a

425
00:17:38,890 --> 00:17:43,180
couple weeks to kind of figure that out

426
00:17:40,540 --> 00:17:47,860
but let's be nice and give it a week to

427
00:17:43,180 --> 00:17:49,240
do that we then of course we inventory

428
00:17:47,860 --> 00:17:50,679
all the different open-source tools

429
00:17:49,240 --> 00:17:53,200
we're using during

430
00:17:50,680 --> 00:17:55,360
development and I'm smiling because that

431
00:17:53,200 --> 00:17:56,950
is not a practice that you see a lot

432
00:17:55,360 --> 00:17:58,659
usually developers are just like oh this

433
00:17:56,950 --> 00:18:01,750
is cool and they load it into their

434
00:17:58,660 --> 00:18:04,180
their development but you need to make

435
00:18:01,750 --> 00:18:06,820
sure your inventory you can do what we

436
00:18:04,180 --> 00:18:10,720
call static analysis scans to make sure

437
00:18:06,820 --> 00:18:11,980
we're as the developers are getting to

438
00:18:10,720 --> 00:18:13,120
certain points in the project to make

439
00:18:11,980 --> 00:18:15,430
sure that they haven't made any major

440
00:18:13,120 --> 00:18:16,899
coding mistakes and again I'm putting

441
00:18:15,430 --> 00:18:21,250
timelines on these these are days

442
00:18:16,900 --> 00:18:22,030
measured in days maybe weeks then as

443
00:18:21,250 --> 00:18:23,320
you're getting to the point we're

444
00:18:22,030 --> 00:18:25,990
actually building you might run a

445
00:18:23,320 --> 00:18:28,780
dynamic scan to actually launch some

446
00:18:25,990 --> 00:18:31,870
attacks at the at the software and see

447
00:18:28,780 --> 00:18:33,970
how it reacts and then when we're really

448
00:18:31,870 --> 00:18:36,969
ready we're gonna pay some team to come

449
00:18:33,970 --> 00:18:38,590
in and do a pen test and that's gonna

450
00:18:36,970 --> 00:18:40,390
like the final system are ready to put

451
00:18:38,590 --> 00:18:41,980
it out the door let's see listen let's

452
00:18:40,390 --> 00:18:44,950
let's pay someone to come do what they

453
00:18:41,980 --> 00:18:46,300
can to it and see what we find and you'd

454
00:18:44,950 --> 00:18:47,890
be lucky if that takes just two weeks

455
00:18:46,300 --> 00:18:51,879
because you know this is a very manual

456
00:18:47,890 --> 00:18:53,410
work and can be very intense and then of

457
00:18:51,880 --> 00:18:55,420
course in when you're operating it over

458
00:18:53,410 --> 00:18:58,200
in production you're gonna patch the

459
00:18:55,420 --> 00:19:00,850
infrastructure whatever 30 days or so

460
00:18:58,200 --> 00:19:02,170
and then of course you're paying

461
00:19:00,850 --> 00:19:03,550
attention to open source so you're gonna

462
00:19:02,170 --> 00:19:05,230
be patching all the open source that you

463
00:19:03,550 --> 00:19:07,090
have for the whole product and I put

464
00:19:05,230 --> 00:19:08,500
question mark days because I think it

465
00:19:07,090 --> 00:19:10,240
depends on what you're patching how

466
00:19:08,500 --> 00:19:12,880
often that would happen and how long it

467
00:19:10,240 --> 00:19:15,070
take you and of course we're going to

468
00:19:12,880 --> 00:19:17,140
vulnerability scan and and pen test that

469
00:19:15,070 --> 00:19:19,330
production environment on some basis

470
00:19:17,140 --> 00:19:21,010
because that's just kind of the the

471
00:19:19,330 --> 00:19:24,550
current practice of how we handle

472
00:19:21,010 --> 00:19:27,070
software environments so that's kind of

473
00:19:24,550 --> 00:19:29,260
the way traditional security tends to

474
00:19:27,070 --> 00:19:31,720
work would anyone care to add something

475
00:19:29,260 --> 00:19:33,550
or does that sound familiar with

476
00:19:31,720 --> 00:19:35,200
anything that you've seen I know at

477
00:19:33,550 --> 00:19:38,440
least a few people in the room know what

478
00:19:35,200 --> 00:19:42,160
this typically looks like I'm seeing a

479
00:19:38,440 --> 00:19:44,200
lot of head shaking yes so again this

480
00:19:42,160 --> 00:19:46,450
this might work it's already stressful

481
00:19:44,200 --> 00:19:48,220
but it might work at a scale where

482
00:19:46,450 --> 00:19:51,130
you're only releasing every three or

483
00:19:48,220 --> 00:19:53,230
four months and even then that that's

484
00:19:51,130 --> 00:19:55,750
actually 10 weeks worth of security work

485
00:19:53,230 --> 00:19:59,110
in a process that might take three or

486
00:19:55,750 --> 00:20:01,300
four months so we're talking we're

487
00:19:59,110 --> 00:20:02,919
already we're already stressed out

488
00:20:01,300 --> 00:20:03,909
because that's a that's a that's a lot

489
00:20:02,920 --> 00:20:05,470
of time and a

490
00:20:03,910 --> 00:20:07,540
you know the development team of course

491
00:20:05,470 --> 00:20:14,290
is never waiting on the security team to

492
00:20:07,540 --> 00:20:16,840
do any work so this is where it gets bad

493
00:20:14,290 --> 00:20:23,620
how many in the room have have heard of

494
00:20:16,840 --> 00:20:24,970
DevOps okay about half of the room how

495
00:20:23,620 --> 00:20:26,679
many of the room feel like they

496
00:20:24,970 --> 00:20:29,350
understand what that looks like in

497
00:20:26,680 --> 00:20:30,460
practice some so let me let me talk

498
00:20:29,350 --> 00:20:34,439
through what this looks like a little

499
00:20:30,460 --> 00:20:37,210
bit DevOps is the idea that we're gonna

500
00:20:34,440 --> 00:20:39,940
automate a lot of things and that we're

501
00:20:37,210 --> 00:20:41,920
gonna go through this loop we're not

502
00:20:39,940 --> 00:20:45,220
gonna do it in months we're gonna do it

503
00:20:41,920 --> 00:20:46,810
in weeks and sometimes in days there are

504
00:20:45,220 --> 00:20:50,350
companies if you go out and look like

505
00:20:46,810 --> 00:20:53,399
Netflix we're literally they're rolling

506
00:20:50,350 --> 00:20:57,219
out to production multiple times a day

507
00:20:53,400 --> 00:20:59,580
and they just let it let it rip so all

508
00:20:57,220 --> 00:21:04,420
day long there are rolling changes out

509
00:20:59,580 --> 00:21:07,449
and so this is really a factor of DevOps

510
00:21:04,420 --> 00:21:08,590
more than it is agile development but

511
00:21:07,450 --> 00:21:10,120
the idea is that you're making lots of

512
00:21:08,590 --> 00:21:12,280
little changes and so when something

513
00:21:10,120 --> 00:21:13,750
breaks you have a better idea of exactly

514
00:21:12,280 --> 00:21:16,000
what just broke it and you can just roll

515
00:21:13,750 --> 00:21:18,220
off and so the other thing Netflix does

516
00:21:16,000 --> 00:21:19,870
it's that's fun and interesting have you

517
00:21:18,220 --> 00:21:22,690
guys ever heard of a tool called chaos

518
00:21:19,870 --> 00:21:24,429
monkey they literally have a tool they

519
00:21:22,690 --> 00:21:27,430
run in production that'll go randomly

520
00:21:24,430 --> 00:21:28,990
break parts of their software so that

521
00:21:27,430 --> 00:21:30,250
they can test it how fast they can

522
00:21:28,990 --> 00:21:33,790
diagnose and react to it and they do

523
00:21:30,250 --> 00:21:36,460
that all that like live just to make

524
00:21:33,790 --> 00:21:38,260
sure their environments resilient they

525
00:21:36,460 --> 00:21:41,200
work at a speed that most software

526
00:21:38,260 --> 00:21:43,900
places don't aren't used to working at

527
00:21:41,200 --> 00:21:47,350
and so they're able to do this with

528
00:21:43,900 --> 00:21:49,240
tools because they can they can use

529
00:21:47,350 --> 00:21:50,679
github and keep track of you know their

530
00:21:49,240 --> 00:21:51,820
software or you know the types of

531
00:21:50,680 --> 00:21:53,620
changes they're making they can know

532
00:21:51,820 --> 00:21:56,169
exactly what version of code went when

533
00:21:53,620 --> 00:21:57,550
and they can revert back to code they

534
00:21:56,170 --> 00:21:58,960
can branch the code and be working on

535
00:21:57,550 --> 00:22:00,610
multiple types of features at the same

536
00:21:58,960 --> 00:22:04,510
time and then carefully merge all that

537
00:22:00,610 --> 00:22:06,010
back there's a tool a common tool that

538
00:22:04,510 --> 00:22:08,680
you'll hear of called Jenkins that helps

539
00:22:06,010 --> 00:22:10,000
automate a lot of this process so you

540
00:22:08,680 --> 00:22:14,290
can almost think of Jenkins as the

541
00:22:10,000 --> 00:22:15,820
orchestrator of when I when I check this

542
00:22:14,290 --> 00:22:17,500
off it's gonna see when I check code

543
00:22:15,820 --> 00:22:18,669
into the repository and then

544
00:22:17,500 --> 00:22:22,180
it's automatically going to kick off

545
00:22:18,670 --> 00:22:24,130
testing and building in this process in

546
00:22:22,180 --> 00:22:26,860
order to move that fast you can't do any

547
00:22:24,130 --> 00:22:28,360
step manually it's all automated and so

548
00:22:26,860 --> 00:22:33,429
Jenkins is kind of the orchestrator that

549
00:22:28,360 --> 00:22:35,770
does that JIRA has a fun stack where

550
00:22:33,430 --> 00:22:38,200
they can keep track you can have bugs

551
00:22:35,770 --> 00:22:40,180
get results sent back to JIRA for

552
00:22:38,200 --> 00:22:42,700
developers to resolve it's also where

553
00:22:40,180 --> 00:22:44,440
you might keep track of requirements and

554
00:22:42,700 --> 00:22:47,470
basically JIRA becomes a place where you

555
00:22:44,440 --> 00:22:49,510
can kind of manage your work and of

556
00:22:47,470 --> 00:22:54,070
course I assume a lot of you've heard of

557
00:22:49,510 --> 00:22:55,750
AWS where literally you know it used to

558
00:22:54,070 --> 00:22:57,490
be even just servers that you could spin

559
00:22:55,750 --> 00:22:59,230
up and down at will but now you get into

560
00:22:57,490 --> 00:23:02,500
this concept of containers which aren't

561
00:22:59,230 --> 00:23:04,360
even full servers and the idea that you

562
00:23:02,500 --> 00:23:06,790
know in in the old environment you had

563
00:23:04,360 --> 00:23:08,189
servers that would run for years and it

564
00:23:06,790 --> 00:23:10,510
was a big deal when you went to like

565
00:23:08,190 --> 00:23:12,100
upgrade to a new operating system or

566
00:23:10,510 --> 00:23:16,030
something like that well in the new

567
00:23:12,100 --> 00:23:18,129
world it may only be weeks that an

568
00:23:16,030 --> 00:23:21,220
environment is up and running and it may

569
00:23:18,130 --> 00:23:22,390
even be less time than that so you're

570
00:23:21,220 --> 00:23:23,890
going to have lots of environments that

571
00:23:22,390 --> 00:23:25,390
just don't live very long and then

572
00:23:23,890 --> 00:23:27,820
they're gone and new environments have

573
00:23:25,390 --> 00:23:29,200
taken their place so this this process

574
00:23:27,820 --> 00:23:32,340
is going to happen very fast and

575
00:23:29,200 --> 00:23:36,790
automated okay

576
00:23:32,340 --> 00:23:38,679
so again the velocity is fast what's

577
00:23:36,790 --> 00:23:41,830
interesting too about the container

578
00:23:38,680 --> 00:23:45,160
approach is persistence isn't there your

579
00:23:41,830 --> 00:23:47,230
database becomes your only data store

580
00:23:45,160 --> 00:23:49,990
that's persistent like your servers are

581
00:23:47,230 --> 00:23:53,080
just gone there is no like you can't say

582
00:23:49,990 --> 00:23:55,060
like server X is where that issue

583
00:23:53,080 --> 00:23:58,230
happened because server X is no longer

584
00:23:55,060 --> 00:24:00,370
there it went away two weeks ago so

585
00:23:58,230 --> 00:24:01,840
diagnosing problems and things like that

586
00:24:00,370 --> 00:24:04,239
you have to be very quick and have lots

587
00:24:01,840 --> 00:24:07,980
of good data to tell what happened where

588
00:24:04,240 --> 00:24:12,570
and then again the scale of this is just

589
00:24:07,980 --> 00:24:15,070
very fast lots of different pieces and

590
00:24:12,570 --> 00:24:18,040
this is fun an environment where our

591
00:24:15,070 --> 00:24:19,030
compliance burden and the level of

592
00:24:18,040 --> 00:24:21,220
security we have to have is only

593
00:24:19,030 --> 00:24:24,100
increasing so we have to be better at

594
00:24:21,220 --> 00:24:26,080
security than we've ever been but yet we

595
00:24:24,100 --> 00:24:28,928
have to move fast and in the old-school

596
00:24:26,080 --> 00:24:30,809
model basically what happens here is

597
00:24:28,929 --> 00:24:32,370
that uh

598
00:24:30,809 --> 00:24:36,899
this is when I this is literally footage

599
00:24:32,370 --> 00:24:38,549
of my career trying to keep up yeah

600
00:24:36,899 --> 00:24:41,789
that's how it feels if you're a security

601
00:24:38,549 --> 00:24:44,840
person right and my favorite part is

602
00:24:41,789 --> 00:24:44,840
when he falls out he's just shaking

603
00:24:45,950 --> 00:24:51,389
he starts all over yeah because we got

604
00:24:48,690 --> 00:24:52,860
to go to work right no I mean honestly

605
00:24:51,389 --> 00:24:54,090
it feels like that sometimes sometimes

606
00:24:52,860 --> 00:24:55,979
the speed people are talking about

607
00:24:54,090 --> 00:24:57,360
moving at we just need to learn to

608
00:24:55,980 --> 00:25:00,929
innovate and do things a little

609
00:24:57,360 --> 00:25:03,928
differently and so all it's not hopeless

610
00:25:00,929 --> 00:25:05,909
and the big thing I'd say here is if you

611
00:25:03,929 --> 00:25:07,799
can't beat them we've got to join them

612
00:25:05,909 --> 00:25:09,059
we've got to figure out how to work in

613
00:25:07,799 --> 00:25:12,029
this environment at the speed that

614
00:25:09,059 --> 00:25:14,428
they're working at so this slides a

615
00:25:12,029 --> 00:25:19,799
little busy but I'm going to take a few

616
00:25:14,429 --> 00:25:22,019
minutes to explain it what we what we

617
00:25:19,799 --> 00:25:24,090
need to start doing is running our

618
00:25:22,019 --> 00:25:25,379
security is code like as part of the

619
00:25:24,090 --> 00:25:30,119
system we have to automate wherever

620
00:25:25,379 --> 00:25:32,779
possible so let me explain on the top

621
00:25:30,119 --> 00:25:34,889
right first the top right is showing you

622
00:25:32,779 --> 00:25:38,700
software branching that's happening

623
00:25:34,889 --> 00:25:40,019
inside your source code so along the

624
00:25:38,700 --> 00:25:41,759
bottom you have what we will call the

625
00:25:40,019 --> 00:25:43,169
master branch the master branch is

626
00:25:41,759 --> 00:25:46,710
usually the code that you have running

627
00:25:43,169 --> 00:25:49,830
out in production so it should be very

628
00:25:46,710 --> 00:25:51,179
stable by the time it gets there so if

629
00:25:49,830 --> 00:25:53,820
you look down here you have production

630
00:25:51,179 --> 00:25:57,539
this is that master branch then you have

631
00:25:53,820 --> 00:26:00,539
a release branch a release is hey I'm

632
00:25:57,539 --> 00:26:02,279
working on this set of code and this is

633
00:26:00,539 --> 00:26:05,129
the code that I'm formerly testing and

634
00:26:02,279 --> 00:26:07,379
planning to release out to production at

635
00:26:05,129 --> 00:26:09,570
some point and push back into the master

636
00:26:07,379 --> 00:26:12,509
branch and then what happens is

637
00:26:09,570 --> 00:26:16,499
developers will branch off of that to do

638
00:26:12,509 --> 00:26:17,789
feature development and so you can

639
00:26:16,499 --> 00:26:19,950
imagine depending on the speed that

640
00:26:17,789 --> 00:26:21,450
folks are moving at there's usually

641
00:26:19,950 --> 00:26:22,740
multiple features being developed all at

642
00:26:21,450 --> 00:26:24,809
the same time and all that's being

643
00:26:22,740 --> 00:26:26,779
merged back into the release and I'm

644
00:26:24,809 --> 00:26:29,480
kind of trying to illustrate that there

645
00:26:26,779 --> 00:26:31,830
multiple check-ins of the code happening

646
00:26:29,480 --> 00:26:34,860
usually just one developer was working

647
00:26:31,830 --> 00:26:36,299
on on a feature but when they check in

648
00:26:34,860 --> 00:26:37,860
their code someone's looking at it and

649
00:26:36,299 --> 00:26:41,129
eventually it's merging back down into

650
00:26:37,860 --> 00:26:44,500
here and basically you can think of the

651
00:26:41,129 --> 00:26:47,270
red dots as development

652
00:26:44,500 --> 00:26:51,230
it kind of looks navy blue or purple I

653
00:26:47,270 --> 00:26:53,510
can't tell on this monitor that is where

654
00:26:51,230 --> 00:26:55,700
we're doing testing and then ultimately

655
00:26:53,510 --> 00:26:59,090
what we're going to run in production

656
00:26:55,700 --> 00:27:02,000
and so what we need to do is in this

657
00:26:59,090 --> 00:27:07,610
process we want to automate all the

658
00:27:02,000 --> 00:27:11,120
areas where we have the highest risks in

659
00:27:07,610 --> 00:27:12,649
fact we'll probably verify the same

660
00:27:11,120 --> 00:27:14,539
thing at multiple points and multiple

661
00:27:12,649 --> 00:27:16,158
ways through the process because we're

662
00:27:14,539 --> 00:27:18,320
gonna automate it so we we don't have to

663
00:27:16,159 --> 00:27:20,799
you know that one scan that we ran

664
00:27:18,320 --> 00:27:23,418
dynamically one time in the in a release

665
00:27:20,799 --> 00:27:28,190
why not run it every time they check in

666
00:27:23,419 --> 00:27:30,169
code because we can and so we can start

667
00:27:28,190 --> 00:27:32,330
to manage change on a smaller scale so

668
00:27:30,169 --> 00:27:36,950
let me talk through that a little bit in

669
00:27:32,330 --> 00:27:39,740
the development side we can do things

670
00:27:36,950 --> 00:27:41,779
like there's a SCA is a software

671
00:27:39,740 --> 00:27:44,169
composition analysis it'll identify the

672
00:27:41,779 --> 00:27:45,919
open source software and your tools and

673
00:27:44,169 --> 00:27:48,470
it'll tell you if there's any of all

674
00:27:45,919 --> 00:27:51,080
abilities in them so why not as soon as

675
00:27:48,470 --> 00:27:54,140
the developer checks in code run that

676
00:27:51,080 --> 00:27:55,250
that way if the developer tries to sneak

677
00:27:54,140 --> 00:27:57,350
something in there you weren't aware of

678
00:27:55,250 --> 00:27:59,450
it's gonna get flagged and inventoried

679
00:27:57,350 --> 00:28:01,699
and if it's more nimble we can actually

680
00:27:59,450 --> 00:28:03,559
even stop the developer from checking it

681
00:28:01,700 --> 00:28:05,960
in and make them go back and fix it that

682
00:28:03,559 --> 00:28:07,970
way they're not finding out in three

683
00:28:05,960 --> 00:28:09,740
weeks they're finding out shoot I can't

684
00:28:07,970 --> 00:28:11,750
get I thought I was done but I didn't

685
00:28:09,740 --> 00:28:14,029
pass and I've got to fix that before I

686
00:28:11,750 --> 00:28:18,220
finished checking it in so you're giving

687
00:28:14,029 --> 00:28:21,890
them that feedback right away sass this

688
00:28:18,220 --> 00:28:23,240
static analysis security testing so it's

689
00:28:21,890 --> 00:28:24,620
looking at the source code and trying to

690
00:28:23,240 --> 00:28:26,270
see did the developer make any mistakes

691
00:28:24,620 --> 00:28:29,120
are they doing validation checks do they

692
00:28:26,270 --> 00:28:30,799
have cross-site scripting you can run

693
00:28:29,120 --> 00:28:32,059
that test and again you can run it right

694
00:28:30,799 --> 00:28:33,440
up when the developer checks in and

695
00:28:32,059 --> 00:28:34,549
they're getting immediate feedback so if

696
00:28:33,440 --> 00:28:37,490
they need to fix something they can do

697
00:28:34,549 --> 00:28:38,990
that and then also you can run what I

698
00:28:37,490 --> 00:28:40,340
would call security unit tests so there

699
00:28:38,990 --> 00:28:43,520
may be certain things that you just want

700
00:28:40,340 --> 00:28:46,789
to verify right away an example this

701
00:28:43,520 --> 00:28:49,639
would be if you're writing an API that

702
00:28:46,789 --> 00:28:51,590
has authentication you may have a unit

703
00:28:49,640 --> 00:28:57,230
test that just verifies like let's say

704
00:28:51,590 --> 00:29:00,080
it's taking a a Roth token of some type

705
00:28:57,230 --> 00:29:01,610
- as a authenticate you can have a go

706
00:29:00,080 --> 00:29:03,710
ahead and check

707
00:29:01,610 --> 00:29:05,029
hey is it validating the signature kind

708
00:29:03,710 --> 00:29:08,059
of give it a bad signature and does it

709
00:29:05,029 --> 00:29:09,769
reject it does it you can do different

710
00:29:08,059 --> 00:29:11,090
types of testing to make sure that the

711
00:29:09,769 --> 00:29:13,190
key controls that you need to have in

712
00:29:11,090 --> 00:29:14,570
place are actually working all the way

713
00:29:13,190 --> 00:29:16,100
back when the developer's checking that

714
00:29:14,570 --> 00:29:19,730
in and again you can only do it on the

715
00:29:16,100 --> 00:29:21,139
unit test by the unit scale but you can

716
00:29:19,730 --> 00:29:23,330
start writing those tests immediately

717
00:29:21,139 --> 00:29:25,908
and those same tests will typically

718
00:29:23,330 --> 00:29:29,990
continue to run all the way through this

719
00:29:25,909 --> 00:29:31,789
process as you move into the next level

720
00:29:29,990 --> 00:29:35,539
you can start to pull pieces together

721
00:29:31,789 --> 00:29:38,090
and test the system so this is you can't

722
00:29:35,539 --> 00:29:40,158
really run dynamic tests too easily back

723
00:29:38,090 --> 00:29:42,649
in the development but now that we have

724
00:29:40,159 --> 00:29:45,110
like if the system has multiple api's

725
00:29:42,649 --> 00:29:47,449
and services we can now start to run

726
00:29:45,110 --> 00:29:52,010
more complicated tests that require the

727
00:29:47,450 --> 00:29:53,990
whole system to be up and so you might

728
00:29:52,010 --> 00:29:56,539
have multiple source code branches that

729
00:29:53,990 --> 00:29:58,130
are all coming in and need to be tested

730
00:29:56,539 --> 00:29:59,539
for integration and so there's security

731
00:29:58,130 --> 00:30:01,269
checks that you'd want to do to make

732
00:29:59,539 --> 00:30:04,639
sure it's all integrating all together

733
00:30:01,269 --> 00:30:05,720
and then of course when you when you

734
00:30:04,639 --> 00:30:08,479
move to production there's other things

735
00:30:05,720 --> 00:30:10,519
that you want to keep keep doing even in

736
00:30:08,480 --> 00:30:12,980
a production environment and the the

737
00:30:10,519 --> 00:30:15,200
thing here that I would emphasize is and

738
00:30:12,980 --> 00:30:16,669
this is kind of the point on the second

739
00:30:15,200 --> 00:30:19,789
bullet on the left like I said this is a

740
00:30:16,669 --> 00:30:22,669
little bit a bit of a busy slide but you

741
00:30:19,789 --> 00:30:24,169
want to verify both on change and you

742
00:30:22,669 --> 00:30:25,850
may also run a schedule where it just

743
00:30:24,169 --> 00:30:27,799
runs so especially here on the

744
00:30:25,850 --> 00:30:29,178
integration level you just may want to

745
00:30:27,799 --> 00:30:31,220
go ahead and run all your tests once a

746
00:30:29,179 --> 00:30:33,710
week just to make sure you're you have

747
00:30:31,220 --> 00:30:36,500
an eye on what's going on because for

748
00:30:33,710 --> 00:30:38,179
example there may be a third-party

749
00:30:36,500 --> 00:30:40,130
library that wasn't vulnerable last week

750
00:30:38,179 --> 00:30:41,870
that's now vulnerable and so you don't

751
00:30:40,130 --> 00:30:43,789
want to wait and find that all the way

752
00:30:41,870 --> 00:30:44,928
when you're in production and so

753
00:30:43,789 --> 00:30:46,250
sometimes you're going to schedule these

754
00:30:44,929 --> 00:30:47,899
tests to run sometimes you're going to

755
00:30:46,250 --> 00:30:49,190
run it when changes are happening and

756
00:30:47,899 --> 00:30:51,739
the cool thing is since we're automating

757
00:30:49,190 --> 00:30:55,309
it we're just going to do both does that

758
00:30:51,740 --> 00:30:57,139
make sense so one more piece to really

759
00:30:55,309 --> 00:31:00,200
give you the idea of why this is

760
00:30:57,139 --> 00:31:01,610
complicated in DevOps is you're also

761
00:31:00,200 --> 00:31:04,370
going to treat your infrastructure as

762
00:31:01,610 --> 00:31:07,610
code so it's not just software that

763
00:31:04,370 --> 00:31:09,289
you're writing you're gonna have like an

764
00:31:07,610 --> 00:31:11,059
Amazon they have this concept of cloud

765
00:31:09,289 --> 00:31:12,799
formations groups where you basic

766
00:31:11,059 --> 00:31:16,370
we script the environment you need to

767
00:31:12,799 --> 00:31:17,480
have to host that your software and when

768
00:31:16,370 --> 00:31:20,149
you're ready to spin up an environment

769
00:31:17,480 --> 00:31:22,279
you you give that template to Amazon and

770
00:31:20,149 --> 00:31:24,979
it basically goes and builds your data

771
00:31:22,279 --> 00:31:27,259
center that you need it can be lots of

772
00:31:24,980 --> 00:31:31,759
containers lots of servers lots of data

773
00:31:27,259 --> 00:31:33,830
areas and so that same infrastructure

774
00:31:31,759 --> 00:31:35,090
can also go through a software

775
00:31:33,830 --> 00:31:37,129
development process because it's now

776
00:31:35,090 --> 00:31:39,139
sought it's now essentially software not

777
00:31:37,129 --> 00:31:41,719
just an environment you've waited for

778
00:31:39,139 --> 00:31:44,209
people to manually test and or manually

779
00:31:41,720 --> 00:31:45,619
build in fact what's cool about that is

780
00:31:44,210 --> 00:31:47,929
if we want to have a test environment we

781
00:31:45,619 --> 00:31:50,480
literally just spin it up and we run it

782
00:31:47,929 --> 00:31:54,769
and then we we tear it down so things

783
00:31:50,480 --> 00:31:56,149
are very dynamic the other last thing I

784
00:31:54,769 --> 00:31:57,409
want to say in this slide is typically

785
00:31:56,149 --> 00:31:59,508
when you're back here in development if

786
00:31:57,409 --> 00:32:02,419
we're finding issues we're just going to

787
00:31:59,509 --> 00:32:04,399
open bugs for the developers because

788
00:32:02,419 --> 00:32:07,490
they these are just things they need to

789
00:32:04,399 --> 00:32:11,779
fix but it's not really hurting anything

790
00:32:07,490 --> 00:32:13,779
yet as you move into testing usually

791
00:32:11,779 --> 00:32:16,669
especially in a regulated environment

792
00:32:13,779 --> 00:32:18,080
these are now what we call anomalies and

793
00:32:16,669 --> 00:32:21,740
we're gonna have to keep track of those

794
00:32:18,080 --> 00:32:23,809
because at the end of the day when we go

795
00:32:21,740 --> 00:32:25,490
to submit we need to show like all the

796
00:32:23,809 --> 00:32:27,139
different test failures we've had and

797
00:32:25,490 --> 00:32:29,149
how we've resolved every single one of

798
00:32:27,139 --> 00:32:30,408
those so when we get into this phase we

799
00:32:29,149 --> 00:32:32,209
have to make sure we're tracking those a

800
00:32:30,409 --> 00:32:33,889
little tighter and then obviously once

801
00:32:32,210 --> 00:32:35,929
it's deployed you now have more of what

802
00:32:33,889 --> 00:32:38,119
I would call an incident like if you run

803
00:32:35,929 --> 00:32:39,080
some testing and it fails and you have

804
00:32:38,119 --> 00:32:41,330
that environment running in production

805
00:32:39,080 --> 00:32:43,490
you now need to respond because it's

806
00:32:41,330 --> 00:32:45,799
live on the internet and you could have

807
00:32:43,490 --> 00:32:47,720
a real problem so as you go to the right

808
00:32:45,799 --> 00:32:51,519
when you find problems they kind of

809
00:32:47,720 --> 00:32:55,009
escalate and how serious they are okay

810
00:32:51,519 --> 00:32:57,950
any questions that's a lot but hopefully

811
00:32:55,009 --> 00:32:59,720
the DevOps make sense we're moving at

812
00:32:57,950 --> 00:33:03,710
very fast speeds and and basically

813
00:32:59,720 --> 00:33:07,850
trying to automate all of it this is

814
00:33:03,710 --> 00:33:12,019
just another view so typically one of

815
00:33:07,850 --> 00:33:15,289
those boxes is or to progress through

816
00:33:12,019 --> 00:33:18,009
there we run what we call pipelines as

817
00:33:15,289 --> 00:33:22,450
it has anyone ever heard of that term a

818
00:33:18,009 --> 00:33:24,470
couple people so a pipeline is basically

819
00:33:22,450 --> 00:33:25,850
when I haven't when

820
00:33:24,470 --> 00:33:28,520
have some event like the source code

821
00:33:25,850 --> 00:33:30,740
gets merged in I now I'm gonna this is

822
00:33:28,520 --> 00:33:32,720
where Jenkins comes in and Jenkins has a

823
00:33:30,740 --> 00:33:35,720
whole set of steps that it's gonna walk

824
00:33:32,720 --> 00:33:37,909
through in order to get that code moved

825
00:33:35,720 --> 00:33:40,100
on to the next phase so I know this text

826
00:33:37,909 --> 00:33:41,419
is way too small for you to read and I

827
00:33:40,100 --> 00:33:42,289
didn't I did that on purpose because I

828
00:33:41,419 --> 00:33:44,330
don't want you to get caught in the

829
00:33:42,289 --> 00:33:47,120
detail but you can see it's kind of like

830
00:33:44,330 --> 00:33:50,418
a flowchart right you can see there's

831
00:33:47,120 --> 00:33:52,309
decisions places so what's happening is

832
00:33:50,419 --> 00:33:53,960
you have tools that might get used so

833
00:33:52,309 --> 00:33:56,149
sneak is a tool that will do software

834
00:33:53,960 --> 00:33:57,799
composition composition acid analysis

835
00:33:56,150 --> 00:33:58,870
it'll look for third-party libraries and

836
00:33:57,799 --> 00:34:02,150
whether or not they're vulnerable

837
00:33:58,870 --> 00:34:05,149
checkmarks will do static analysis so

838
00:34:02,150 --> 00:34:08,440
literally your automation and can run

839
00:34:05,150 --> 00:34:11,000
those tools and then get the results and

840
00:34:08,440 --> 00:34:13,520
the cool part about pipelines is if the

841
00:34:11,000 --> 00:34:16,849
results are bad we can do what we call

842
00:34:13,520 --> 00:34:21,730
breaking in the build so up you failed

843
00:34:16,849 --> 00:34:21,730
so this little trying or this little

844
00:34:21,940 --> 00:34:28,399
what would that be this little decision

845
00:34:25,159 --> 00:34:31,040
here would be basically a decision point

846
00:34:28,399 --> 00:34:32,629
of hey did I have too many failures and

847
00:34:31,040 --> 00:34:35,690
do I need to go ahead and fail the build

848
00:34:32,629 --> 00:34:38,989
if it fails it'll send data like to

849
00:34:35,690 --> 00:34:41,450
notify the developers and it'll maybe

850
00:34:38,989 --> 00:34:46,580
send those results into JIRA as a bug

851
00:34:41,449 --> 00:34:48,080
for someone to go fix so the other thing

852
00:34:46,580 --> 00:34:51,139
that's going on through this process is

853
00:34:48,080 --> 00:34:55,848
the way DevOps works is you build

854
00:34:51,139 --> 00:34:57,290
software by having a container and you

855
00:34:55,849 --> 00:34:58,820
load your software into that container

856
00:34:57,290 --> 00:35:00,619
and basically start running your tests

857
00:34:58,820 --> 00:35:04,550
on that container and the container is

858
00:35:00,619 --> 00:35:05,930
basically an abstraction of the the

859
00:35:04,550 --> 00:35:09,980
hosts that the software is going to run

860
00:35:05,930 --> 00:35:11,868
on and if it passes through all of its

861
00:35:09,980 --> 00:35:14,570
tests including its unit tests you're

862
00:35:11,869 --> 00:35:15,890
gonna check it into a repository that

863
00:35:14,570 --> 00:35:17,720
then when you go to QA you're gonna

864
00:35:15,890 --> 00:35:20,150
start with that container and start

865
00:35:17,720 --> 00:35:22,609
running the next set of tests so again

866
00:35:20,150 --> 00:35:25,369
the infrastructure has been coded and

867
00:35:22,609 --> 00:35:27,348
all the testing has been coded Acunetix

868
00:35:25,369 --> 00:35:31,280
is a tool that you could use to do

869
00:35:27,349 --> 00:35:32,839
dynamic scanning the other thing I would

870
00:35:31,280 --> 00:35:34,369
point out here is because we have test

871
00:35:32,839 --> 00:35:38,119
hopping all over the place there's tools

872
00:35:34,369 --> 00:35:38,510
like sonar cube that let you grab data

873
00:35:38,119 --> 00:35:39,920
from

874
00:35:38,510 --> 00:35:42,470
all the different tools and get a

875
00:35:39,920 --> 00:35:46,010
dashboard over the overall health of the

876
00:35:42,470 --> 00:35:47,589
system okay so I have one more slide and

877
00:35:46,010 --> 00:35:49,520
this this one intentionally is trying to

878
00:35:47,590 --> 00:35:51,290
freak you out a little bit so don't

879
00:35:49,520 --> 00:35:55,430
don't worry about the fact that it's a

880
00:35:51,290 --> 00:35:57,740
little overwhelming I'll explain it if I

881
00:35:55,430 --> 00:36:01,879
go back to the example app that I talked

882
00:35:57,740 --> 00:36:03,680
through gestation this would be an

883
00:36:01,880 --> 00:36:05,720
example of all the all the different

884
00:36:03,680 --> 00:36:07,609
pipelines that are happening to make

885
00:36:05,720 --> 00:36:09,950
that environment work so every little

886
00:36:07,610 --> 00:36:13,550
red line is a pipe line happening with

887
00:36:09,950 --> 00:36:17,540
all sorts of automation and if it if I'm

888
00:36:13,550 --> 00:36:21,020
working on the core mobile medical app

889
00:36:17,540 --> 00:36:22,759
and I check in my code the pipeline runs

890
00:36:21,020 --> 00:36:26,090
and it checks runs through all of its

891
00:36:22,760 --> 00:36:29,060
automated checks and if I pass it

892
00:36:26,090 --> 00:36:30,590
actually feeds the test environment in

893
00:36:29,060 --> 00:36:32,509
the test environment since it now has

894
00:36:30,590 --> 00:36:36,050
that code will run through its all of

895
00:36:32,510 --> 00:36:38,180
its automated checks and so you can see

896
00:36:36,050 --> 00:36:39,950
how we have basically over 50 different

897
00:36:38,180 --> 00:36:42,080
pipelines now that as changes are

898
00:36:39,950 --> 00:36:43,790
happening in the system automation is

899
00:36:42,080 --> 00:36:46,520
kicking off to kind of check and

900
00:36:43,790 --> 00:36:48,380
integrate and automate and this is you

901
00:36:46,520 --> 00:36:49,460
know this is how Netflix and companies

902
00:36:48,380 --> 00:36:52,100
like that are able to role the

903
00:36:49,460 --> 00:36:53,510
production so fast is they automate

904
00:36:52,100 --> 00:36:54,950
almost everything and so they're

905
00:36:53,510 --> 00:36:57,430
constantly checking everything they're

906
00:36:54,950 --> 00:36:59,569
doing every time they make changes and

907
00:36:57,430 --> 00:37:01,430
they're learning quickly when they make

908
00:36:59,570 --> 00:37:02,960
mistakes if they have mistakes make it

909
00:37:01,430 --> 00:37:04,549
through production here's the other cool

910
00:37:02,960 --> 00:37:06,320
part about this if they have mistakes

911
00:37:04,550 --> 00:37:07,550
that make it all way over here they can

912
00:37:06,320 --> 00:37:09,290
go how do we keep that mistake from

913
00:37:07,550 --> 00:37:12,350
happening again and they can now

914
00:37:09,290 --> 00:37:14,509
automate that check back in here and so

915
00:37:12,350 --> 00:37:17,150
you this is where I talked about its

916
00:37:14,510 --> 00:37:19,820
security is code because now we're gonna

917
00:37:17,150 --> 00:37:22,520
start figuring out how to code all the

918
00:37:19,820 --> 00:37:24,350
checks to keep failure from happening at

919
00:37:22,520 --> 00:37:27,530
the end of the at the end of the process

920
00:37:24,350 --> 00:37:29,450
okay so let's say god forbid something

921
00:37:27,530 --> 00:37:33,770
happens in deployment that doesn't work

922
00:37:29,450 --> 00:37:35,750
hardly happens I'm sure but see you

923
00:37:33,770 --> 00:37:37,100
found out what's wrong with the code but

924
00:37:35,750 --> 00:37:38,450
then how do you go back to your pipeline

925
00:37:37,100 --> 00:37:41,000
system and say okay how did it get

926
00:37:38,450 --> 00:37:42,379
through the pipeline yes there's

927
00:37:41,000 --> 00:37:45,020
probably it depends there's a couple of

928
00:37:42,380 --> 00:37:46,490
great question so there's a couple

929
00:37:45,020 --> 00:37:47,750
things first of all it's where are you

930
00:37:46,490 --> 00:37:49,549
recording the change and knowing you

931
00:37:47,750 --> 00:37:51,540
need to make the fix and it really that

932
00:37:49,550 --> 00:37:55,600
the answer depends on

933
00:37:51,540 --> 00:37:57,700
how it got detected so for instance if

934
00:37:55,600 --> 00:37:59,710
it's over here in production and it

935
00:37:57,700 --> 00:38:03,850
happens to be after a vulnerable third

936
00:37:59,710 --> 00:38:05,170
party library you're gonna you're gonna

937
00:38:03,850 --> 00:38:06,580
see the data it's gonna say well that

938
00:38:05,170 --> 00:38:09,310
won't ability just got released last

939
00:38:06,580 --> 00:38:10,810
week and that's why it just happened but

940
00:38:09,310 --> 00:38:13,509
you have to you have to now take action

941
00:38:10,810 --> 00:38:14,920
to fix that and so you have to fix it at

942
00:38:13,510 --> 00:38:16,180
the right spot and let it go through all

943
00:38:14,920 --> 00:38:18,760
the testing to make sure that that

944
00:38:16,180 --> 00:38:21,399
upgraded software doesn't break anything

945
00:38:18,760 --> 00:38:23,140
in the system but the cool part is you

946
00:38:21,400 --> 00:38:25,390
can now do that and have lots of testing

947
00:38:23,140 --> 00:38:26,859
that's automated to be confident that by

948
00:38:25,390 --> 00:38:30,210
changing to the latest version of that

949
00:38:26,860 --> 00:38:32,320
library it won't break everything

950
00:38:30,210 --> 00:38:34,930
because a lot of times that's what makes

951
00:38:32,320 --> 00:38:37,090
people nervous like oh we haven't we

952
00:38:34,930 --> 00:38:38,560
even patched that system in three months

953
00:38:37,090 --> 00:38:41,380
if we apply that patch what's gonna

954
00:38:38,560 --> 00:38:44,650
happen but if we if we do these small

955
00:38:41,380 --> 00:38:46,480
changes you can tweak that if we find a

956
00:38:44,650 --> 00:38:48,070
new chain like let's if we find an

957
00:38:46,480 --> 00:38:50,080
incident because we've had something bad

958
00:38:48,070 --> 00:38:52,570
happen and we're manually like that's

959
00:38:50,080 --> 00:38:55,420
that's now work so what I would say

960
00:38:52,570 --> 00:38:56,920
there is as a security professional now

961
00:38:55,420 --> 00:39:00,280
my time is spent looking at how the

962
00:38:56,920 --> 00:39:02,080
system is running not like running a

963
00:39:00,280 --> 00:39:04,900
scan and writing a report and trying to

964
00:39:02,080 --> 00:39:06,730
convince them to you know go fix a

965
00:39:04,900 --> 00:39:08,110
problem like I'm now looking at the

966
00:39:06,730 --> 00:39:09,880
overall system and trying to figure out

967
00:39:08,110 --> 00:39:10,840
as I'm finding problems back here I'm

968
00:39:09,880 --> 00:39:13,210
trying to figure out where to go

969
00:39:10,840 --> 00:39:15,160
automate that and I'm also watching the

970
00:39:13,210 --> 00:39:18,010
types of errors that the tools are

971
00:39:15,160 --> 00:39:19,359
picking up and you know as an example if

972
00:39:18,010 --> 00:39:21,940
they're if they keep seeing cross-site

973
00:39:19,360 --> 00:39:24,040
scripting come up I'm gonna see that

974
00:39:21,940 --> 00:39:25,900
data on my dashboard and I'm gonna go

975
00:39:24,040 --> 00:39:28,509
wow I need to I need to go back and

976
00:39:25,900 --> 00:39:30,250
reinforce my developers that I see this

977
00:39:28,510 --> 00:39:31,630
happening mistake happening a lot I need

978
00:39:30,250 --> 00:39:33,630
to go back and try to keep them from

979
00:39:31,630 --> 00:39:36,730
making the mistake in the first place

980
00:39:33,630 --> 00:39:38,590
but you can use all the data to do that

981
00:39:36,730 --> 00:39:39,930
the other thing I would emphasize here

982
00:39:38,590 --> 00:39:44,650
is all these tools are generating

983
00:39:39,930 --> 00:39:48,069
records and so now when we're asked to

984
00:39:44,650 --> 00:39:50,200
do compliance we have a lot a lot of

985
00:39:48,070 --> 00:39:51,730
data a log trail an audit trail of all

986
00:39:50,200 --> 00:39:54,759
the different things that we've checked

987
00:39:51,730 --> 00:39:56,680
and when they've passed and we can point

988
00:39:54,760 --> 00:39:57,760
to that as proof of the continuous

989
00:39:56,680 --> 00:40:03,839
testing that we're doing to make sure

990
00:39:57,760 --> 00:40:09,789
our products working as as claimed okay

991
00:40:03,839 --> 00:40:11,949
Larry he's trying to unmute all right

992
00:40:09,789 --> 00:40:14,469
sorry so Chris I think the diagram is

993
00:40:11,949 --> 00:40:17,049
awesome for showing the linear nature of

994
00:40:14,469 --> 00:40:18,819
those tasks but what about when you get

995
00:40:17,049 --> 00:40:20,859
into tests and you have to have

996
00:40:18,819 --> 00:40:23,199
integration among all of those different

997
00:40:20,859 --> 00:40:24,788
components now is that automated yeah

998
00:40:23,199 --> 00:40:28,420
that's a great question my diagram

999
00:40:24,789 --> 00:40:29,859
probably fails to show that very well I

1000
00:40:28,420 --> 00:40:31,239
probably need to go back and work on it

1001
00:40:29,859 --> 00:40:33,880
what I'm trying to show here when you

1002
00:40:31,239 --> 00:40:35,859
see like reduced arrows these are still

1003
00:40:33,880 --> 00:40:38,190
happening on every service but this

1004
00:40:35,859 --> 00:40:41,499
arrow really is these three feeding it

1005
00:40:38,190 --> 00:40:43,809
and again if I make a change so this is

1006
00:40:41,499 --> 00:40:45,459
saying in the Bluetooth component of the

1007
00:40:43,809 --> 00:40:47,349
code if I make a change here and it

1008
00:40:45,459 --> 00:40:50,078
makes it through here it then goes into

1009
00:40:47,349 --> 00:40:51,999
this against merged into the release it

1010
00:40:50,079 --> 00:40:53,619
makes it to here and then that kicks off

1011
00:40:51,999 --> 00:40:56,019
integration testing and then when that

1012
00:40:53,619 --> 00:40:57,579
goes it's now going to start to do full

1013
00:40:56,019 --> 00:40:59,609
integration across the whole system I

1014
00:40:57,579 --> 00:41:01,989
probably need to show like little

1015
00:40:59,609 --> 00:41:04,930
funnels that are going down in there

1016
00:41:01,989 --> 00:41:06,339
that's great great question though so

1017
00:41:04,930 --> 00:41:08,529
you are you're always going to start out

1018
00:41:06,339 --> 00:41:09,910
doing what you can on the unit level but

1019
00:41:08,529 --> 00:41:10,869
then it's gonna flow together and you're

1020
00:41:09,910 --> 00:41:15,788
gonna have to start doing that

1021
00:41:10,869 --> 00:41:18,759
integration great great question any

1022
00:41:15,789 --> 00:41:24,880
other questions trying to watch my time

1023
00:41:18,759 --> 00:41:28,239
here so that all sounds like magic and

1024
00:41:24,880 --> 00:41:31,959
it is a little bit because it's I'd love

1025
00:41:28,239 --> 00:41:33,489
to say it's that easy it's not so really

1026
00:41:31,959 --> 00:41:36,848
if you take this approach there's

1027
00:41:33,489 --> 00:41:38,739
there's three key things that we really

1028
00:41:36,849 --> 00:41:40,209
need to work on first is connecting all

1029
00:41:38,739 --> 00:41:41,920
the dots I mentioned already the

1030
00:41:40,209 --> 00:41:46,839
security person is now standing back to

1031
00:41:41,920 --> 00:41:48,670
look at the system there are manual

1032
00:41:46,839 --> 00:41:50,410
steps in this process still there are

1033
00:41:48,670 --> 00:41:54,969
times when you want to slow it down and

1034
00:41:50,410 --> 00:41:57,190
do things manually as an example if one

1035
00:41:54,969 --> 00:42:00,009
of the developed changes is to introduce

1036
00:41:57,190 --> 00:42:01,630
a new authentication system you're

1037
00:42:00,009 --> 00:42:03,459
probably going to slow down and manually

1038
00:42:01,630 --> 00:42:05,410
look at that and figure out what tests

1039
00:42:03,459 --> 00:42:08,019
you need to change and reintegrate into

1040
00:42:05,410 --> 00:42:09,368
your system and those are going to be

1041
00:42:08,019 --> 00:42:11,738
changes where you're manually going to

1042
00:42:09,369 --> 00:42:14,979
not allow things to flow through the

1043
00:42:11,739 --> 00:42:16,839
whole system automatically however if

1044
00:42:14,979 --> 00:42:18,308
you do a risk assessment upfront

1045
00:42:16,839 --> 00:42:19,450
the change and it's low you're just

1046
00:42:18,309 --> 00:42:20,890
gonna let it fly through this the

1047
00:42:19,450 --> 00:42:22,569
process if it passes everything you're

1048
00:42:20,890 --> 00:42:26,499
going to push the button and send it to

1049
00:42:22,569 --> 00:42:28,690
production you're also going to do

1050
00:42:26,499 --> 00:42:30,249
something we call threat modeling you

1051
00:42:28,690 --> 00:42:32,229
heard me say repeatedly that you're

1052
00:42:30,249 --> 00:42:34,029
looking for the high risk secured areas

1053
00:42:32,229 --> 00:42:35,979
threat modeling is going to help you

1054
00:42:34,029 --> 00:42:38,469
identify all those parts of the system

1055
00:42:35,979 --> 00:42:42,729
that you care about most authentication

1056
00:42:38,469 --> 00:42:44,529
access control and and with that threat

1057
00:42:42,729 --> 00:42:46,479
modeling that'll help you identify where

1058
00:42:44,529 --> 00:42:48,519
you want to integrate automated security

1059
00:42:46,479 --> 00:42:51,788
testing and so there is manual work

1060
00:42:48,519 --> 00:42:53,680
happening in fact it's still a lot of

1061
00:42:51,789 --> 00:42:54,430
work just to be clear it's just when you

1062
00:42:53,680 --> 00:42:56,769
automate it

1063
00:42:54,430 --> 00:42:58,989
you can now scale you can scale your

1064
00:42:56,769 --> 00:43:00,988
your expertise at a level that you might

1065
00:42:58,989 --> 00:43:03,579
not have been able to do before

1066
00:43:00,989 --> 00:43:05,229
and the other thing I kind of mentioned

1067
00:43:03,579 --> 00:43:06,849
this already but if you use this process

1068
00:43:05,229 --> 00:43:09,368
it has a lot of telemetry

1069
00:43:06,849 --> 00:43:11,890
it's almost self documenting you you get

1070
00:43:09,369 --> 00:43:13,450
results in real time if you integrate it

1071
00:43:11,890 --> 00:43:15,009
correctly where bugs are getting sent

1072
00:43:13,450 --> 00:43:16,629
back to JIRA and then developers I mean

1073
00:43:15,009 --> 00:43:18,609
to sign that bug and they're fixing it

1074
00:43:16,630 --> 00:43:21,519
you literally can trace like here's the

1075
00:43:18,609 --> 00:43:22,779
test that failed here's the the bug that

1076
00:43:21,519 --> 00:43:24,999
I got created here's the developer

1077
00:43:22,779 --> 00:43:26,920
here's the check in that fix the bug and

1078
00:43:24,999 --> 00:43:28,058
by the way and here's the test where it

1079
00:43:26,920 --> 00:43:30,249
passed and you can literally trace

1080
00:43:28,059 --> 00:43:33,190
through the system all the work that's

1081
00:43:30,249 --> 00:43:36,609
actually happening now that type of

1082
00:43:33,190 --> 00:43:39,460
control is is ideal to be able to show

1083
00:43:36,609 --> 00:43:40,509
that we have we can prove in our system

1084
00:43:39,460 --> 00:43:42,249
that we're controlling it and then

1085
00:43:40,509 --> 00:43:45,579
lastly I've kind of made this point

1086
00:43:42,249 --> 00:43:46,930
already you can iterate fast in you when

1087
00:43:45,579 --> 00:43:53,769
you learn of problems you can figure out

1088
00:43:46,930 --> 00:43:56,649
how to get it back in the system before

1089
00:43:53,769 --> 00:43:58,149
you have now been deeply integrated but

1090
00:43:56,650 --> 00:44:00,579
you may run into the problem of having

1091
00:43:58,150 --> 00:44:02,589
to triage right because all this

1092
00:44:00,579 --> 00:44:04,269
telemetry will sum up right so you have

1093
00:44:02,589 --> 00:44:06,940
thousands tens of thousands of messages

1094
00:44:04,269 --> 00:44:09,578
and you run into the instead of having

1095
00:44:06,940 --> 00:44:11,829
the problem to have having to react to a

1096
00:44:09,579 --> 00:44:13,779
single incident you now have potential

1097
00:44:11,829 --> 00:44:16,630
potentially hundreds of incidents just

1098
00:44:13,779 --> 00:44:18,519
like sitting there and adding red flags

1099
00:44:16,630 --> 00:44:19,660
and you are on your console how do you

1100
00:44:18,519 --> 00:44:22,299
triage yeah

1101
00:44:19,660 --> 00:44:23,950
yeah so so that's a great question and

1102
00:44:22,299 --> 00:44:27,549
in fact that would bring me to another

1103
00:44:23,950 --> 00:44:29,799
point that you can't just like in it you

1104
00:44:27,549 --> 00:44:30,580
know settle this up and then turn it on

1105
00:44:29,799 --> 00:44:33,100
and hope it works

1106
00:44:30,580 --> 00:44:34,990
day one there's a lot of processes like

1107
00:44:33,100 --> 00:44:36,490
writing right now I'm working on

1108
00:44:34,990 --> 00:44:39,790
integrating some of these tools into

1109
00:44:36,490 --> 00:44:41,319
certain processes and we do like what we

1110
00:44:39,790 --> 00:44:47,140
call an onboarding process where we

1111
00:44:41,320 --> 00:44:49,780
manually fix and reduce the noise and

1112
00:44:47,140 --> 00:44:52,480
then not until we get it to where it's

1113
00:44:49,780 --> 00:44:56,080
passing and not creating noise do we

1114
00:44:52,480 --> 00:44:58,240
automate it and especially do we not we

1115
00:44:56,080 --> 00:45:00,970
don't break the build and cause

1116
00:44:58,240 --> 00:45:03,759
development to stop until we we have we

1117
00:45:00,970 --> 00:45:06,910
know that it's in a healthy state and so

1118
00:45:03,760 --> 00:45:09,940
it becomes a little bit of how you tool

1119
00:45:06,910 --> 00:45:12,040
the system so that you don't just turn

1120
00:45:09,940 --> 00:45:13,720
if you just scan with default policies

1121
00:45:12,040 --> 00:45:15,279
on day one with at every point in the

1122
00:45:13,720 --> 00:45:16,330
process you're gonna have thousands of

1123
00:45:15,280 --> 00:45:18,580
events and you're gonna be overwhelmed

1124
00:45:16,330 --> 00:45:21,250
with all the noise so it's kind of like

1125
00:45:18,580 --> 00:45:24,130
it's that how do we add it step by step

1126
00:45:21,250 --> 00:45:25,630
and slowly so that we're not

1127
00:45:24,130 --> 00:45:26,980
overwhelming developers because at the

1128
00:45:25,630 --> 00:45:28,210
end of the day they're not there just to

1129
00:45:26,980 --> 00:45:28,420
fix security problems that are found

1130
00:45:28,210 --> 00:45:31,300
there

1131
00:45:28,420 --> 00:45:32,980
they're there to get code out so this is

1132
00:45:31,300 --> 00:45:34,420
you kind of mature into this and that's

1133
00:45:32,980 --> 00:45:35,770
probably the point I want to make on the

1134
00:45:34,420 --> 00:45:38,230
last one is you you iterate and get

1135
00:45:35,770 --> 00:45:39,100
better and the cool part is if you do

1136
00:45:38,230 --> 00:45:42,130
that and you're automating everything

1137
00:45:39,100 --> 00:45:44,080
over time your system you know a lot of

1138
00:45:42,130 --> 00:45:46,330
legacy systems get less secure over time

1139
00:45:44,080 --> 00:45:48,400
if you do this right you'll actually

1140
00:45:46,330 --> 00:45:50,610
increase the security over time of your

1141
00:45:48,400 --> 00:45:53,890
system because you keep working back in

1142
00:45:50,610 --> 00:45:58,360
increasing the level of checks and in

1143
00:45:53,890 --> 00:46:02,160
the system it's all another question you

1144
00:45:58,360 --> 00:46:02,160
know we're okay

1145
00:46:03,480 --> 00:46:19,680
devices Android so on the consumer

1146
00:46:17,450 --> 00:46:22,439
controlled devices how do you validate

1147
00:46:19,680 --> 00:46:25,350
because these devices are untrusted all

1148
00:46:22,440 --> 00:46:27,810
right Lilly didn't deploy them you don't

1149
00:46:25,350 --> 00:46:29,330
know how the user may interact with the

1150
00:46:27,810 --> 00:46:31,380
application there's certainly a design

1151
00:46:29,330 --> 00:46:33,359
implementation of how you want them to

1152
00:46:31,380 --> 00:46:35,340
interact with it but you can't control

1153
00:46:33,359 --> 00:46:38,340
the user how do you validate for their

1154
00:46:35,340 --> 00:46:40,230
inconsistencies and yeah so we have to

1155
00:46:38,340 --> 00:46:44,490
design those controls in so as an

1156
00:46:40,230 --> 00:46:45,720
example I hope it's rare now but you

1157
00:46:44,490 --> 00:46:47,100
know there are users that probably still

1158
00:46:45,720 --> 00:46:49,439
don't put a passcode on their device

1159
00:46:47,100 --> 00:46:50,940
right and very if you if you start out

1160
00:46:49,440 --> 00:46:52,140
with that you're kind of in trouble from

1161
00:46:50,940 --> 00:46:54,030
the start because that means anyone can

1162
00:46:52,140 --> 00:46:58,170
come up and interact with that device

1163
00:46:54,030 --> 00:46:59,340
and do things on the system we have to

1164
00:46:58,170 --> 00:47:01,440
think through those in the threat

1165
00:46:59,340 --> 00:47:05,100
modeling process and then make sure we

1166
00:47:01,440 --> 00:47:06,780
have controls and then we that are built

1167
00:47:05,100 --> 00:47:08,460
in to detect those scenarios like if

1168
00:47:06,780 --> 00:47:12,869
there's not a passcode set and then we

1169
00:47:08,460 --> 00:47:14,160
have to react device yeah so we yeah is

1170
00:47:12,869 --> 00:47:16,530
the device jailbroken does I have a

1171
00:47:14,160 --> 00:47:18,330
passcode and then basically depending on

1172
00:47:16,530 --> 00:47:21,290
how those depending on the safety of the

1173
00:47:18,330 --> 00:47:23,940
situation we may take different

1174
00:47:21,290 --> 00:47:26,040
approaches we may just warn the user hey

1175
00:47:23,940 --> 00:47:28,890
you don't have a passcode set we don't

1176
00:47:26,040 --> 00:47:30,600
recommend that but we may still let them

1177
00:47:28,890 --> 00:47:33,509
use the application but let's say it's

1178
00:47:30,600 --> 00:47:35,730
controlling like a automated device that

1179
00:47:33,510 --> 00:47:37,230
does insulin delivery in that case we're

1180
00:47:35,730 --> 00:47:40,560
gonna say oh you can't use this app

1181
00:47:37,230 --> 00:47:42,750
until you remediating so we absolutely

1182
00:47:40,560 --> 00:47:44,009
have to operate like that we also have

1183
00:47:42,750 --> 00:47:46,170
to protect the app code to make sure

1184
00:47:44,010 --> 00:47:47,910
people aren't figuring out how to bypass

1185
00:47:46,170 --> 00:47:49,230
those controls because you can do all

1186
00:47:47,910 --> 00:47:52,049
sorts of fun things especially on

1187
00:47:49,230 --> 00:47:53,910
Android so we're having to think through

1188
00:47:52,050 --> 00:47:55,980
all those situations and the thing that

1189
00:47:53,910 --> 00:47:59,069
the FDA is looking for is that we've

1190
00:47:55,980 --> 00:48:01,410
done as good of a job as we can there's

1191
00:47:59,070 --> 00:48:03,270
always risk in these systems we're never

1192
00:48:01,410 --> 00:48:05,129
gonna eliminate risk but we need to

1193
00:48:03,270 --> 00:48:07,170
manage it especially we need to manage

1194
00:48:05,130 --> 00:48:08,220
it to make the device safe to use but it

1195
00:48:07,170 --> 00:48:10,140
doesn't mean that things aren't going to

1196
00:48:08,220 --> 00:48:12,240
happen in fact it doesn't mean that just

1197
00:48:10,140 --> 00:48:14,190
like with a drug product there are some

1198
00:48:12,240 --> 00:48:17,080
people that take a drug or they take too

1199
00:48:14,190 --> 00:48:18,880
much and it

1200
00:48:17,080 --> 00:48:21,130
it becomes harmful and so but we have to

1201
00:48:18,880 --> 00:48:26,500
kind of show that the logic of how we

1202
00:48:21,130 --> 00:48:29,740
Becan it for all that yep in terms of

1203
00:48:26,500 --> 00:48:31,870
the the automated secure sdlc right with

1204
00:48:29,740 --> 00:48:33,459
static analysis and dynamic analysis how

1205
00:48:31,870 --> 00:48:35,830
are you handling that for the mobile

1206
00:48:33,460 --> 00:48:37,330
apps right because typically is you you

1207
00:48:35,830 --> 00:48:39,850
know those are done manually right your

1208
00:48:37,330 --> 00:48:42,130
your your code reviewing manually and

1209
00:48:39,850 --> 00:48:44,529
you're definitely more difficult we do

1210
00:48:42,130 --> 00:48:45,910
we do have static analysis tools but

1211
00:48:44,530 --> 00:48:50,860
you're right the effectiveness of them

1212
00:48:45,910 --> 00:48:52,450
aren't as good again I'm kind of

1213
00:48:50,860 --> 00:48:55,960
presenting the simplistic view when we

1214
00:48:52,450 --> 00:48:58,359
have major like feature releases we'll

1215
00:48:55,960 --> 00:49:01,450
still do like well they're already doing

1216
00:48:58,360 --> 00:49:03,940
code reviews by peers to get it in we'll

1217
00:49:01,450 --> 00:49:05,950
also do audits of code later on down the

1218
00:49:03,940 --> 00:49:07,450
line so we're not just relying on that

1219
00:49:05,950 --> 00:49:10,960
tool the other thing about the mobile

1220
00:49:07,450 --> 00:49:13,839
devices there are ways that we can do a

1221
00:49:10,960 --> 00:49:15,430
fair amount of automation where we're

1222
00:49:13,840 --> 00:49:16,990
simulating lots of different hardware

1223
00:49:15,430 --> 00:49:19,210
manual models but a lot of its

1224
00:49:16,990 --> 00:49:22,359
simulation and then we still end up

1225
00:49:19,210 --> 00:49:25,630
doing some amount of real finger to

1226
00:49:22,360 --> 00:49:27,700
hardware testing at some point so you're

1227
00:49:25,630 --> 00:49:28,930
testing the API is that the mobile apps

1228
00:49:27,700 --> 00:49:31,060
are using yes

1229
00:49:28,930 --> 00:49:32,410
yeah testing the api's but even even the

1230
00:49:31,060 --> 00:49:34,509
mobile yeah we're definitely testing the

1231
00:49:32,410 --> 00:49:36,310
API is but even the even the screen

1232
00:49:34,510 --> 00:49:41,230
presses like there are there is software

1233
00:49:36,310 --> 00:49:43,960
where we can automate some of that when

1234
00:49:41,230 --> 00:49:46,570
we do a major release there's gonna be a

1235
00:49:43,960 --> 00:49:48,520
lot more of that manual work involved if

1236
00:49:46,570 --> 00:49:50,620
we want to patch something we're gonna

1237
00:49:48,520 --> 00:49:52,780
let a lot of the automation cover what

1238
00:49:50,620 --> 00:49:54,940
we need to to make sure you know we've

1239
00:49:52,780 --> 00:49:56,650
what would we use the term like smoke

1240
00:49:54,940 --> 00:49:57,850
tests hey we've done enough checking to

1241
00:49:56,650 --> 00:49:59,920
know that we have a pretty high

1242
00:49:57,850 --> 00:50:01,630
confidence that that library change

1243
00:49:59,920 --> 00:50:04,150
didn't actually brick the way our

1244
00:50:01,630 --> 00:50:07,030
product worked so those are the types of

1245
00:50:04,150 --> 00:50:11,699
decisions we make early on good question

1246
00:50:07,030 --> 00:50:18,729
I think I'm at time so

1247
00:50:11,699 --> 00:50:21,670
any other questions

1248
00:50:18,729 --> 00:50:23,859
okay I'm happy I'll be around and I

1249
00:50:21,670 --> 00:50:26,079
think there's a event here shortly so

1250
00:50:23,859 --> 00:50:27,699
come talk to us if but I love they hear

1251
00:50:26,079 --> 00:50:29,469
more questions and feedback and

1252
00:50:27,699 --> 00:50:31,660
hopefully this got your your minds

1253
00:50:29,469 --> 00:50:33,069
thinking about how software development

1254
00:50:31,660 --> 00:50:36,578
in the cloud and things like that work

1255
00:50:33,069 --> 00:50:37,989
here and hopefully you you you look to

1256
00:50:36,579 --> 00:50:40,059
this because it's it's a pretty exciting

1257
00:50:37,989 --> 00:50:44,369
area that's gonna do it to find a lot of

1258
00:50:40,059 --> 00:50:44,369
our future so great thanks everyone

1259
00:50:56,090 --> 00:50:58,150
you

