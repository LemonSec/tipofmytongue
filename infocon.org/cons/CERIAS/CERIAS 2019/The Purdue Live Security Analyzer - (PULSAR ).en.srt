1
00:00:00,060 --> 00:00:04,770
well today we welcome you to the final

2
00:00:02,159 --> 00:00:05,640
serious seminar of the spring 2019

3
00:00:04,770 --> 00:00:08,010
semester

4
00:00:05,640 --> 00:00:11,250
tonight we're honored to have with us a

5
00:00:08,010 --> 00:00:16,980
team from right here at Purdue and I

6
00:00:11,250 --> 00:00:18,930
will turn it over to Eric go-to who is

7
00:00:16,980 --> 00:00:23,430
with the Rosen Center for academic

8
00:00:18,930 --> 00:00:27,439
computing here at Purdue and has been

9
00:00:23,430 --> 00:00:30,300
responsible for several projects that

10
00:00:27,439 --> 00:00:34,590
develop systems to support academic

11
00:00:30,300 --> 00:00:37,550
research and we'll get a chance to look

12
00:00:34,590 --> 00:00:40,379
at one of those today thank you

13
00:00:37,550 --> 00:00:42,750
I'm here with this undergraduate student

14
00:00:40,379 --> 00:00:46,860
team and we're gonna tell you about the

15
00:00:42,750 --> 00:00:49,530
Purdue live security analyzer pulsar I'm

16
00:00:46,860 --> 00:00:51,989
gonna give a basic overview and then the

17
00:00:49,530 --> 00:00:54,329
students will go through and provide you

18
00:00:51,989 --> 00:00:56,640
details about the implementation and the

19
00:00:54,329 --> 00:00:58,770
impact that it provides on Purdue's

20
00:00:56,640 --> 00:01:02,190
network so the real goal of this

21
00:00:58,770 --> 00:01:03,960
particular project is to enhance the

22
00:01:02,190 --> 00:01:06,630
cybersecurity on Purdue's research

23
00:01:03,960 --> 00:01:11,369
network so we identified that there was

24
00:01:06,630 --> 00:01:13,679
a gap in the cybersecurity framework for

25
00:01:11,369 --> 00:01:16,830
research and that gap was there was no

26
00:01:13,680 --> 00:01:19,740
network based monitoring or intrusion

27
00:01:16,830 --> 00:01:23,548
detection and so the goal that of this

28
00:01:19,740 --> 00:01:25,350
project is to is to implement network

29
00:01:23,549 --> 00:01:28,380
monitoring and intrusion detection on

30
00:01:25,350 --> 00:01:30,839
the campus research network so we have

31
00:01:28,380 --> 00:01:32,509
some project goals and motivation to do

32
00:01:30,840 --> 00:01:34,850
this what we would like to do is empower

33
00:01:32,509 --> 00:01:37,110
Purdue's faculty to be able to conduct

34
00:01:34,850 --> 00:01:40,229
research that has heightened

35
00:01:37,110 --> 00:01:42,360
cybersecurity requirements so think of

36
00:01:40,229 --> 00:01:43,710
us aligning the research network

37
00:01:42,360 --> 00:01:46,079
cybersecurity framework with the

38
00:01:43,710 --> 00:01:49,710
cybersecurity framework that is in

39
00:01:46,079 --> 00:01:54,149
industry maybe at an aerospace aerospace

40
00:01:49,710 --> 00:01:56,399
company or a defense company the second

41
00:01:54,149 --> 00:01:58,380
goal is to aid cybersecurity researchers

42
00:01:56,399 --> 00:02:01,219
which you guys it might be you guys that

43
00:01:58,380 --> 00:02:04,439
are in this room by using this system to

44
00:02:01,219 --> 00:02:07,369
produce network data and then anonymize

45
00:02:04,439 --> 00:02:10,769
that data and provide it back to you

46
00:02:07,369 --> 00:02:13,360
the last goal is to engage undergraduate

47
00:02:10,770 --> 00:02:15,520
students and mentor them in the

48
00:02:13,360 --> 00:02:21,840
pointment and design of this advanced

49
00:02:15,520 --> 00:02:23,680
cyber infrastructure so this is an NSF

50
00:02:21,840 --> 00:02:26,650
supported project under the

51
00:02:23,680 --> 00:02:28,960
cybersecurity innovation for cyber

52
00:02:26,650 --> 00:02:31,720
infrastructure program and it's a

53
00:02:28,960 --> 00:02:33,580
collaboration between serious computer

54
00:02:31,720 --> 00:02:36,220
science computer information technology

55
00:02:33,580 --> 00:02:41,470
research computing and IT security and

56
00:02:36,220 --> 00:02:44,470
policy so a broad team has been has been

57
00:02:41,470 --> 00:02:46,090
assembled to to solve this problem so

58
00:02:44,470 --> 00:02:47,980
here are some of the people that are

59
00:02:46,090 --> 00:02:50,170
involved project leadership at the PI

60
00:02:47,980 --> 00:02:52,390
and copii eye level we also have the

61
00:02:50,170 --> 00:02:53,708
student team which is very diverse we

62
00:02:52,390 --> 00:02:56,859
have a lot of people who have worked on

63
00:02:53,709 --> 00:02:59,890
this over about the past year and a half

64
00:02:56,860 --> 00:03:03,610
to two years and the student team

65
00:02:59,890 --> 00:03:06,130
includes people from for undergraduate

66
00:03:03,610 --> 00:03:08,739
students from Purdue and from Ivy Tech

67
00:03:06,130 --> 00:03:12,250
and also to high school students who did

68
00:03:08,739 --> 00:03:15,130
summer work for us last year and are now

69
00:03:12,250 --> 00:03:18,340
enrolled as freshmen in the upcoming

70
00:03:15,130 --> 00:03:23,440
class of Purdue we also have mentors and

71
00:03:18,340 --> 00:03:24,850
staff from our CAC and itsp and the the

72
00:03:23,440 --> 00:03:27,370
important part of this project is that

73
00:03:24,850 --> 00:03:30,489
the design and implementation was led by

74
00:03:27,370 --> 00:03:32,799
the student team and they got help from

75
00:03:30,489 --> 00:03:34,420
the mentors so I was a mentor and worked

76
00:03:32,799 --> 00:03:36,519
with them to help in this advanced

77
00:03:34,420 --> 00:03:38,320
deployment of a network monitoring

78
00:03:36,519 --> 00:03:41,440
system so the student team is going to

79
00:03:38,320 --> 00:03:44,470
give you give you an overview of what we

80
00:03:41,440 --> 00:03:47,440
did this is Siobhan Trivedi he is a

81
00:03:44,470 --> 00:03:49,359
graduating senior in CIT Lauren

82
00:03:47,440 --> 00:03:52,329
Featherstone also a graduating senior in

83
00:03:49,360 --> 00:03:56,019
CIT and Bryan Wirtz who is graduating

84
00:03:52,330 --> 00:03:58,170
from Ivy Tech this year so take it away

85
00:03:56,019 --> 00:03:58,170
guys

86
00:03:59,910 --> 00:04:05,590
so hello I'm Shivan and I was

87
00:04:03,220 --> 00:04:07,810
responsible for the student engineering

88
00:04:05,590 --> 00:04:11,049
and systems administration side of the

89
00:04:07,810 --> 00:04:13,299
project as we built the system and I

90
00:04:11,049 --> 00:04:16,750
worked on this project for the entire

91
00:04:13,299 --> 00:04:18,940
duration of the project so just to give

92
00:04:16,750 --> 00:04:21,370
you some overview about how large

93
00:04:18,940 --> 00:04:23,620
produced these such infrastructure is we

94
00:04:21,370 --> 00:04:25,289
have over 200 P research groups that use

95
00:04:23,620 --> 00:04:27,190
the research computing resources

96
00:04:25,289 --> 00:04:29,800
these include

97
00:04:27,190 --> 00:04:32,410
community clusters which provide compute

98
00:04:29,800 --> 00:04:34,570
to researchers we have several

99
00:04:32,410 --> 00:04:37,000
world-class supercomputing clusters

100
00:04:34,570 --> 00:04:40,270
thousands of nodes and we've had

101
00:04:37,000 --> 00:04:41,920
multiple top 500 supercomputers on in

102
00:04:40,270 --> 00:04:44,320
our infrastructure over the last few

103
00:04:41,920 --> 00:04:47,920
years we have multiple petabyte scale

104
00:04:44,320 --> 00:04:51,070
data storage resources some fall-like

105
00:04:47,920 --> 00:04:53,320
immediate result storage and like high

106
00:04:51,070 --> 00:04:54,790
performance storage and some for like

107
00:04:53,320 --> 00:04:57,849
cold storage where you are trying to

108
00:04:54,790 --> 00:05:00,550
store like petabytes of data in for a

109
00:04:57,850 --> 00:05:02,440
long period of time but you ranks among

110
00:05:00,550 --> 00:05:04,350
the top US universities in terms of

111
00:05:02,440 --> 00:05:08,980
research computing cyber infrastructure

112
00:05:04,350 --> 00:05:12,610
and this most of it comes from a

113
00:05:08,980 --> 00:05:15,070
research infrastructure we transfer

114
00:05:12,610 --> 00:05:18,390
hundreds of terabytes of data both to

115
00:05:15,070 --> 00:05:22,420
and from the peer institutions daily and

116
00:05:18,390 --> 00:05:24,460
this entire process is done over our

117
00:05:22,420 --> 00:05:28,660
high-speed dedicated high-speed network

118
00:05:24,460 --> 00:05:33,909
which follows a science DMZ model so a

119
00:05:28,660 --> 00:05:38,200
science dmz model is very unique because

120
00:05:33,910 --> 00:05:42,340
it provides certain characteristics to

121
00:05:38,200 --> 00:05:46,300
allow research to be performed at a very

122
00:05:42,340 --> 00:05:50,080
high speed so the science dmz model as

123
00:05:46,300 --> 00:05:52,150
you can see right here is the Green Line

124
00:05:50,080 --> 00:05:54,099
right here so what the science dmz model

125
00:05:52,150 --> 00:05:57,520
does is that it bypasses all of campus

126
00:05:54,100 --> 00:06:00,760
infrastructure and this is done at a

127
00:05:57,520 --> 00:06:03,130
very low latency on a very low latency

128
00:06:00,760 --> 00:06:05,289
link and a very high throughput link so

129
00:06:03,130 --> 00:06:07,419
this basically effectively provides a

130
00:06:05,290 --> 00:06:10,630
friction-free network for high speeds

131
00:06:07,419 --> 00:06:11,669
high speeds and minimal packet loss it's

132
00:06:10,630 --> 00:06:14,650
optimized for high-performance

133
00:06:11,669 --> 00:06:18,479
scientific applications then what a

134
00:06:14,650 --> 00:06:18,479
commodity network would look like

135
00:06:18,570 --> 00:06:23,830
another important characteristics

136
00:06:21,060 --> 00:06:26,169
characteristic of science dmz is that

137
00:06:23,830 --> 00:06:27,880
the security policies are tailored to

138
00:06:26,169 --> 00:06:30,940
not impact the high performance science

139
00:06:27,880 --> 00:06:33,909
environment so in this scenario it is

140
00:06:30,940 --> 00:06:35,560
important that this consistent high

141
00:06:33,910 --> 00:06:37,510
throughput that is maintained to

142
00:06:35,560 --> 00:06:39,340
transfer large amounts of data as well

143
00:06:37,510 --> 00:06:40,860
as a low latency is maintained because

144
00:06:39,340 --> 00:06:43,049
no additional latency can

145
00:06:40,860 --> 00:06:45,090
added to the network so this model

146
00:06:43,050 --> 00:06:47,669
allows us to not be affected by a

147
00:06:45,090 --> 00:06:50,310
commodity network which is like produce

148
00:06:47,669 --> 00:06:52,188
Wi-Fi or student computers or anything

149
00:06:50,310 --> 00:06:55,439
of that sort

150
00:06:52,189 --> 00:06:58,560
so speaking of produce network this is a

151
00:06:55,439 --> 00:07:01,740
very nice overview of what produce

152
00:06:58,560 --> 00:07:06,629
research infrastructure looks like as

153
00:07:01,740 --> 00:07:09,449
you can see right here there's the wide

154
00:07:06,629 --> 00:07:10,889
area network the campus core and the

155
00:07:09,449 --> 00:07:15,000
research core so these are like the

156
00:07:10,889 --> 00:07:18,180
three layers in our network networking

157
00:07:15,000 --> 00:07:20,069
environment and the campus core and

158
00:07:18,180 --> 00:07:22,229
campus core as you can see is connected

159
00:07:20,069 --> 00:07:23,789
to data center and campus so that's

160
00:07:22,229 --> 00:07:27,029
basically what the commodity network

161
00:07:23,789 --> 00:07:28,729
lies and we are like down here which are

162
00:07:27,029 --> 00:07:34,710
connected directly to the research core

163
00:07:28,729 --> 00:07:36,060
so as you can see the science dmz and

164
00:07:34,710 --> 00:07:38,460
the commodity networks are slightly

165
00:07:36,060 --> 00:07:41,509
separated and the commodity network

166
00:07:38,460 --> 00:07:44,969
usually passes through an inline ids/ips

167
00:07:41,509 --> 00:07:48,509
and on the other hand the research

168
00:07:44,969 --> 00:07:52,139
network is just use mostly uses mostly

169
00:07:48,509 --> 00:07:54,270
the 100 gig fiber optic links so as you

170
00:07:52,139 --> 00:07:56,159
can see some of the arrows here so let's

171
00:07:54,270 --> 00:07:59,039
say a traditional packet for example

172
00:07:56,159 --> 00:08:00,779
you're sitting on a laptop in one of the

173
00:07:59,039 --> 00:08:05,400
academic buildings and you're using pal

174
00:08:00,779 --> 00:08:08,159
a wireless system and you try to access

175
00:08:05,400 --> 00:08:11,489
something on the internet so you can see

176
00:08:08,159 --> 00:08:13,110
these dark blue arrows right here that's

177
00:08:11,490 --> 00:08:15,270
the path it would take so it would go

178
00:08:13,110 --> 00:08:17,219
from the campus network to the campus

179
00:08:15,270 --> 00:08:19,740
core then it'll go up to the internet

180
00:08:17,219 --> 00:08:22,889
edge and then it'll go through the link

181
00:08:19,740 --> 00:08:25,020
with the IPS on it to the Internet

182
00:08:22,889 --> 00:08:29,909
so this IPS provides some in-line

183
00:08:25,020 --> 00:08:33,029
security for the for the computer that

184
00:08:29,909 --> 00:08:36,299
is on a commodity network on the other

185
00:08:33,029 --> 00:08:37,948
hand the traffic from research goes a

186
00:08:36,299 --> 00:08:39,299
different way depending on the type of

187
00:08:37,948 --> 00:08:43,049
traffic especially if it's to another

188
00:08:39,299 --> 00:08:46,979
pure institution so on the bottom right

189
00:08:43,049 --> 00:08:50,910
you can see this cluster called CMS CMS

190
00:08:46,980 --> 00:08:53,040
is a CMS as one of our super computing

191
00:08:50,910 --> 00:08:54,600
clusters which consistently generates a

192
00:08:53,040 --> 00:08:58,980
lot of network trash

193
00:08:54,600 --> 00:09:02,089
and we are tier two son supercomputing

194
00:08:58,980 --> 00:09:04,829
facility so what happens is that CMS

195
00:09:02,089 --> 00:09:08,759
transfers a lot of data to and from the

196
00:09:04,829 --> 00:09:11,579
CERN facility in Geneva so this is CMS

197
00:09:08,759 --> 00:09:12,300
is like a huge generator of network

198
00:09:11,579 --> 00:09:15,779
traffic for us

199
00:09:12,300 --> 00:09:18,420
so a typical traffic from CMS would go

200
00:09:15,779 --> 00:09:20,550
to a research core it would go up to the

201
00:09:18,420 --> 00:09:22,290
campus core and as you can see it's my

202
00:09:20,550 --> 00:09:24,389
passing all the campus infrastructure

203
00:09:22,290 --> 00:09:27,240
like the commodity infrastructure goes

204
00:09:24,389 --> 00:09:29,100
to the internet edge and because CERN

205
00:09:27,240 --> 00:09:31,170
would technically be classified as an

206
00:09:29,100 --> 00:09:32,790
Internet - or a peer institution where

207
00:09:31,170 --> 00:09:35,719
they are part of the research

208
00:09:32,790 --> 00:09:38,910
institutions they would bypass the IPS

209
00:09:35,720 --> 00:09:41,430
to go out to the Indian and Giga pop so

210
00:09:38,910 --> 00:09:43,769
as you can see a very high throughput

211
00:09:41,430 --> 00:09:46,290
links all the way through and we try to

212
00:09:43,769 --> 00:09:49,529
introduce as little latency as possible

213
00:09:46,290 --> 00:09:51,990
as it goes out to the Internet so

214
00:09:49,529 --> 00:09:53,579
because of such a large scale of the

215
00:09:51,990 --> 00:09:55,980
problem there are a lot of challenges

216
00:09:53,579 --> 00:09:58,729
that we had to think about before we

217
00:09:55,980 --> 00:10:01,110
even started designing the system so our

218
00:09:58,730 --> 00:10:04,829
research infrastructure served many

219
00:10:01,110 --> 00:10:07,319
types of research and science like it

220
00:10:04,829 --> 00:10:09,149
could be industry industry partners

221
00:10:07,319 --> 00:10:11,130
using super computing clusters for some

222
00:10:09,149 --> 00:10:12,389
of their research or just some academic

223
00:10:11,130 --> 00:10:14,639
research and collaboration between

224
00:10:12,389 --> 00:10:17,430
different departments all of this

225
00:10:14,639 --> 00:10:19,589
provides all of these researchers

226
00:10:17,430 --> 00:10:21,839
generate a huge volume of traffic and

227
00:10:19,589 --> 00:10:23,910
it's very steady and it's in both

228
00:10:21,839 --> 00:10:26,310
directions in and out of the network

229
00:10:23,910 --> 00:10:28,410
so usually we only think about the

230
00:10:26,310 --> 00:10:30,660
download speeds but the upload is just

231
00:10:28,410 --> 00:10:32,250
as important as download for us because

232
00:10:30,660 --> 00:10:33,329
we're uploading a lot of data to other

233
00:10:32,250 --> 00:10:34,680
Institute's as well when you are

234
00:10:33,329 --> 00:10:38,599
transferring transferring data out of

235
00:10:34,680 --> 00:10:43,380
here so we definitely sustained

236
00:10:38,600 --> 00:10:46,410
sustained 10 to 30 gigs of data at any

237
00:10:43,380 --> 00:10:51,120
given point usually in 10 to 20 kg bps

238
00:10:46,410 --> 00:10:52,949
range and we frequently get bursts of 60

239
00:10:51,120 --> 00:10:55,560
plus Gbps

240
00:10:52,949 --> 00:10:57,569
and this is why typical inline idea

241
00:10:55,560 --> 00:11:00,180
solutions or IPS solutions are not

242
00:10:57,569 --> 00:11:01,800
feasible because a they cannot handle

243
00:11:00,180 --> 00:11:03,269
that large amount of traffic especially

244
00:11:01,800 --> 00:11:05,160
when there's a burst of traffic through

245
00:11:03,269 --> 00:11:08,420
the links and be it introduced this

246
00:11:05,160 --> 00:11:24,770
introduces significant amount of latency

247
00:11:08,420 --> 00:11:28,610
as the traffic gets analyzed yes you

248
00:11:24,770 --> 00:11:30,650
know adding even 100 milliseconds of

249
00:11:28,610 --> 00:11:32,440
latency is probably not a big deal as

250
00:11:30,650 --> 00:11:35,420
long as you can handle the throughput

251
00:11:32,440 --> 00:11:36,920
whereas others could be some sort of

252
00:11:35,420 --> 00:11:39,110
distributed computing where they're

253
00:11:36,920 --> 00:11:42,370
actually using this cluster in some

254
00:11:39,110 --> 00:11:45,860
other cluster elsewhere do you have any

255
00:11:42,370 --> 00:11:49,340
idea what the types of traffic and

256
00:11:45,860 --> 00:11:51,440
whether it's actually just your large

257
00:11:49,340 --> 00:11:53,270
volumes of data being sent one way or

258
00:11:51,440 --> 00:11:57,560
whether it's actually really interactive

259
00:11:53,270 --> 00:11:59,720
where the latency would matter that is

260
00:11:57,560 --> 00:12:01,489
something that we will go over as the

261
00:11:59,720 --> 00:12:02,810
presentation goes along the later stage

262
00:12:01,490 --> 00:12:06,830
we'll talk about the type types of

263
00:12:02,810 --> 00:12:09,349
traffic we see but when we get to the

264
00:12:06,830 --> 00:12:11,120
Q&A session we will have one of our

265
00:12:09,350 --> 00:12:12,860
full-time engineers actually talk about

266
00:12:11,120 --> 00:12:14,990
the traffic that's they see on a daily

267
00:12:12,860 --> 00:12:18,290
basis but we definitely do see traffic

268
00:12:14,990 --> 00:12:21,800
both ways and given the trap science dmz

269
00:12:18,290 --> 00:12:23,120
model we tend to not introduce we tend

270
00:12:21,800 --> 00:12:25,280
to introduce as little latency as

271
00:12:23,120 --> 00:12:26,570
possible and it's very important to some

272
00:12:25,280 --> 00:12:39,110
of the researchers where the traffic

273
00:12:26,570 --> 00:12:42,800
remains low latency okay so we do see a

274
00:12:39,110 --> 00:12:44,540
couple so one thing is a bulk data

275
00:12:42,800 --> 00:12:47,990
transfer that either comes in or goes

276
00:12:44,540 --> 00:12:50,990
out of the network but we also see a lot

277
00:12:47,990 --> 00:12:53,150
of cases where we have data that is

278
00:12:50,990 --> 00:12:56,510
accessible via like a global Federation

279
00:12:53,150 --> 00:12:59,300
of storage so we will see jobs at MIT

280
00:12:56,510 --> 00:13:02,420
Caltech wherever actually running there

281
00:12:59,300 --> 00:13:05,420
and reading from our storage so in those

282
00:13:02,420 --> 00:13:06,979
cases increasing the latency by a bit

283
00:13:05,420 --> 00:13:09,500
could have a pretty severe impact and

284
00:13:06,980 --> 00:13:14,150
with the I mean with the amount of data

285
00:13:09,500 --> 00:13:16,160
that that we receive and with the

286
00:13:14,150 --> 00:13:18,410
expectation of how fast it should show

287
00:13:16,160 --> 00:13:20,360
up a lot of times adding additional

288
00:13:18,410 --> 00:13:21,709
latency even like in the hundreds of

289
00:13:20,360 --> 00:13:24,800
milliseconds

290
00:13:21,710 --> 00:13:27,950
a pretty serious problem because if if

291
00:13:24,800 --> 00:13:30,079
somebody's from from CERN says okay we

292
00:13:27,950 --> 00:13:31,820
need to transfer this 20 terabyte data

293
00:13:30,080 --> 00:13:35,690
set to your site because we need to

294
00:13:31,820 --> 00:13:37,850
analyze it if it's not there within you

295
00:13:35,690 --> 00:13:40,060
know a day or so it's actually a problem

296
00:13:37,850 --> 00:13:44,380
so they so we want to make sure to keep

297
00:13:40,060 --> 00:13:44,380
keep the links as wide open as possible

298
00:13:46,780 --> 00:13:53,300
so yeah as I was talking about like we

299
00:13:50,060 --> 00:13:54,859
transfer a lot of data so just here in

300
00:13:53,300 --> 00:13:56,449
the graph you can see that over the last

301
00:13:54,860 --> 00:13:58,760
three months we have transferred about

302
00:13:56,450 --> 00:14:02,450
27 petabytes of data both in and out of

303
00:13:58,760 --> 00:14:04,550
the network and as you can see these

304
00:14:02,450 --> 00:14:07,100
shaded areas right here those are the

305
00:14:04,550 --> 00:14:10,219
bursts of traffic when CMS decides it

306
00:14:07,100 --> 00:14:12,770
wants to transfer data bytes of data for

307
00:14:10,220 --> 00:14:15,680
to some resource use not on our

308
00:14:12,770 --> 00:14:18,829
infrastructure so you can see like again

309
00:14:15,680 --> 00:14:20,510
there's a huge burst as well so it is

310
00:14:18,830 --> 00:14:22,220
very important for an infrastructure to

311
00:14:20,510 --> 00:14:25,300
be able to handle huge bursts of traffic

312
00:14:22,220 --> 00:14:28,190
when we are monitoring such bulk loads

313
00:14:25,300 --> 00:14:31,810
yeah so as you can see in the bottom the

314
00:14:28,190 --> 00:14:35,240
statistics it also says that the max

315
00:14:31,810 --> 00:14:37,339
outbound speed was 80 gigs a second and

316
00:14:35,240 --> 00:14:39,110
involves speed max in one speed was

317
00:14:37,340 --> 00:14:42,830
about 71 gigs per second so again very

318
00:14:39,110 --> 00:14:45,740
high throughput sand traditional ids/ips

319
00:14:42,830 --> 00:14:48,170
solutions cannot handle that amount of

320
00:14:45,740 --> 00:14:50,600
traffic without causing significant

321
00:14:48,170 --> 00:14:52,010
issues in fact sometimes routers cannot

322
00:14:50,600 --> 00:14:53,480
handle that much amount a that amount of

323
00:14:52,010 --> 00:14:59,600
traffic without causing significant

324
00:14:53,480 --> 00:15:02,900
issues so because of these complex

325
00:14:59,600 --> 00:15:06,620
challenges and complex constraints we

326
00:15:02,900 --> 00:15:11,300
have created an entire system consisting

327
00:15:06,620 --> 00:15:13,430
of multiple modules to create a solution

328
00:15:11,300 --> 00:15:15,410
like a complete solution made up of

329
00:15:13,430 --> 00:15:18,290
different modules and different pieces

330
00:15:15,410 --> 00:15:20,120
so as you can see this is a high-level

331
00:15:18,290 --> 00:15:24,829
overview of what an architecture looks

332
00:15:20,120 --> 00:15:27,110
like for pulse' so going left to right

333
00:15:24,830 --> 00:15:29,600
top to bottom we have the networked apps

334
00:15:27,110 --> 00:15:32,090
layer the network tap layer is the layer

335
00:15:29,600 --> 00:15:34,580
which duplicates the traffic which is

336
00:15:32,090 --> 00:15:36,230
going in and out of a network and sends

337
00:15:34,580 --> 00:15:39,440
it to us

338
00:15:36,230 --> 00:15:40,280
so we get the data that we are supposed

339
00:15:39,440 --> 00:15:42,050
to be monitoring

340
00:15:40,280 --> 00:15:46,060
there's the traffic distribution layer

341
00:15:42,050 --> 00:15:50,030
which will distribute all of the traffic

342
00:15:46,060 --> 00:15:52,400
into chunks of TCP and UDP flows or any

343
00:15:50,030 --> 00:15:54,650
other flows that you can think of to our

344
00:15:52,400 --> 00:15:55,280
analysis cluster so it's like load

345
00:15:54,650 --> 00:15:58,160
balance

346
00:15:55,280 --> 00:16:01,339
there's the traffic analysis layer so it

347
00:15:58,160 --> 00:16:04,969
is a cluster of xik ids server so just

348
00:16:01,340 --> 00:16:07,190
to let you guys know Zeke is formally

349
00:16:04,970 --> 00:16:09,110
known as bro so Zeke is a network

350
00:16:07,190 --> 00:16:11,150
security monitor so if you are familiar

351
00:16:09,110 --> 00:16:16,790
with bro Zeke and bro are the same thing

352
00:16:11,150 --> 00:16:19,220
it's just Zeke was renamed from bro so a

353
00:16:16,790 --> 00:16:21,380
cluster of Zeke idea servers they

354
00:16:19,220 --> 00:16:25,340
analyze all of the traffic that is sent

355
00:16:21,380 --> 00:16:28,490
to them from the traffic analysis there

356
00:16:25,340 --> 00:16:30,530
are two things that happen number one we

357
00:16:28,490 --> 00:16:33,440
log every single traffic that we see

358
00:16:30,530 --> 00:16:36,260
obviously so all of this logging or logs

359
00:16:33,440 --> 00:16:38,270
are stored and we do multiple different

360
00:16:36,260 --> 00:16:39,860
things with the logs like storing it in

361
00:16:38,270 --> 00:16:41,300
cold storage for a long time in text

362
00:16:39,860 --> 00:16:43,220
format as well as like sending into a

363
00:16:41,300 --> 00:16:45,680
visualization cluster there's the

364
00:16:43,220 --> 00:16:48,770
alerting layer where once we are flag

365
00:16:45,680 --> 00:16:51,140
malicious or weird traffic and depending

366
00:16:48,770 --> 00:16:53,810
on how we have configured a finetuner

367
00:16:51,140 --> 00:16:55,699
system the system will alert us when it

368
00:16:53,810 --> 00:16:59,119
sees something that is of interest to

369
00:16:55,700 --> 00:17:01,960
the team and the last layer is the

370
00:16:59,120 --> 00:17:03,710
blocking layer the blocking layer is

371
00:17:01,960 --> 00:17:07,280
something that is currently under

372
00:17:03,710 --> 00:17:09,350
development so the eventual goal is to

373
00:17:07,280 --> 00:17:11,480
automate the entire system so that the

374
00:17:09,349 --> 00:17:14,599
system can automatically automatically

375
00:17:11,480 --> 00:17:17,810
block malicious traffic this is slightly

376
00:17:14,599 --> 00:17:21,469
challenging and slightly important to

377
00:17:17,810 --> 00:17:24,020
tread carefully with because there are

378
00:17:21,470 --> 00:17:25,850
there is a lot of constraints when it

379
00:17:24,020 --> 00:17:27,410
comes to like like the stakes are very

380
00:17:25,849 --> 00:17:28,280
high when it comes to false positives

381
00:17:27,410 --> 00:17:30,230
and false negatives

382
00:17:28,280 --> 00:17:32,629
especially false positives for example

383
00:17:30,230 --> 00:17:34,250
you see some malicious traffic and then

384
00:17:32,630 --> 00:17:35,990
you decide to block half of internet for

385
00:17:34,250 --> 00:17:38,390
produce research infrastructure because

386
00:17:35,990 --> 00:17:39,830
that can happen you know these kind of

387
00:17:38,390 --> 00:17:41,090
things can happen so that is something

388
00:17:39,830 --> 00:17:42,500
that we are treading lightly but but

389
00:17:41,090 --> 00:17:44,030
that is currently and the development

390
00:17:42,500 --> 00:17:49,490
and strategies are being developed for

391
00:17:44,030 --> 00:17:51,350
that so as I was talking about the the

392
00:17:49,490 --> 00:17:53,900
as I was talking about the network taps

393
00:17:51,350 --> 00:17:57,379
right here on the top left these are

394
00:17:53,900 --> 00:17:58,910
what our network taps look like so this

395
00:17:57,380 --> 00:18:00,860
the there are the two campus core

396
00:17:58,910 --> 00:18:04,400
routers and the to research Cove routers

397
00:18:00,860 --> 00:18:06,649
as you can see right here and here we

398
00:18:04,400 --> 00:18:09,470
have tapped every single link going

399
00:18:06,650 --> 00:18:12,290
between these four routers so this is

400
00:18:09,470 --> 00:18:15,100
where the pulsar system resides because

401
00:18:12,290 --> 00:18:18,860
like in a logical in a logical diagram

402
00:18:15,100 --> 00:18:20,719
these steps are fiber optic taps

403
00:18:18,860 --> 00:18:22,729
so there are fiber lines and there are

404
00:18:20,720 --> 00:18:24,410
optical taps so they're pretty cool

405
00:18:22,730 --> 00:18:28,250
because what they do is they actually

406
00:18:24,410 --> 00:18:30,440
split the light in the optic cables so a

407
00:18:28,250 --> 00:18:32,330
part of the light goes ahead as intended

408
00:18:30,440 --> 00:18:34,820
and the second portion of the light

409
00:18:32,330 --> 00:18:37,639
comes to us and as you can see there are

410
00:18:34,820 --> 00:18:40,939
two dotted lines coming out of each tab

411
00:18:37,640 --> 00:18:43,100
is because there is basically a link for

412
00:18:40,940 --> 00:18:46,700
both inbound and outbound from each tap

413
00:18:43,100 --> 00:18:48,770
as we are duplicating all of the traffic

414
00:18:46,700 --> 00:18:51,280
so as you can see this tap is like

415
00:18:48,770 --> 00:18:54,590
pretty much in line and introduces like

416
00:18:51,280 --> 00:18:56,450
next to no latency because this is

417
00:18:54,590 --> 00:18:58,639
literally splitting the light while

418
00:18:56,450 --> 00:19:00,080
we're trying to get the data so all of

419
00:18:58,640 --> 00:19:02,870
this traffic goes to the arrestor layer

420
00:19:00,080 --> 00:19:05,540
the Arista layer is our traffic

421
00:19:02,870 --> 00:19:08,270
distribution layer the two Arista

422
00:19:05,540 --> 00:19:09,860
switches they work together the

423
00:19:08,270 --> 00:19:13,059
configure to work together they look at

424
00:19:09,860 --> 00:19:15,678
all of this traffic and then they take

425
00:19:13,059 --> 00:19:18,590
then they distribute traffic to each of

426
00:19:15,679 --> 00:19:20,900
the server based on flows so per TCP

427
00:19:18,590 --> 00:19:23,600
flow UDP flow so the idea is that each

428
00:19:20,900 --> 00:19:26,090
flow would typically like just go to a

429
00:19:23,600 --> 00:19:28,490
single machine so even if it sees the

430
00:19:26,090 --> 00:19:30,230
flow from somewhere else coming in so we

431
00:19:28,490 --> 00:19:32,059
try to distribute my flow everywhere and

432
00:19:30,230 --> 00:19:33,740
at the bottom as you can see from the

433
00:19:32,059 --> 00:19:36,710
Arista the traffic is getting

434
00:19:33,740 --> 00:19:38,900
distributed to a z cluster there are

435
00:19:36,710 --> 00:19:41,600
about 10 servers in there and we will

436
00:19:38,900 --> 00:19:43,130
talk more about that as we go along so

437
00:19:41,600 --> 00:19:46,550
when we are talking about that cluster

438
00:19:43,130 --> 00:19:48,890
down there the cluster runs the core of

439
00:19:46,550 --> 00:19:50,389
the system which is called Zeke as I

440
00:19:48,890 --> 00:19:53,960
mentioned earlier it's a highly parallel

441
00:19:50,390 --> 00:19:55,970
network security monitor Zeke is very

442
00:19:53,960 --> 00:19:59,600
popular it's used in the widely in

443
00:19:55,970 --> 00:20:01,970
industry and in government and as it is

444
00:19:59,600 --> 00:20:03,309
gaining popularity this was the best

445
00:20:01,970 --> 00:20:05,200
choice for us to use

446
00:20:03,309 --> 00:20:08,799
Zeke is made up of four major components

447
00:20:05,200 --> 00:20:11,350
there are the workers which are the main

448
00:20:08,799 --> 00:20:14,500
process so to speak they're the process

449
00:20:11,350 --> 00:20:16,510
that analyze and lock traffic each

450
00:20:14,500 --> 00:20:18,610
process is single threaded but multiple

451
00:20:16,510 --> 00:20:20,830
instances of the process can run per

452
00:20:18,610 --> 00:20:23,469
server so for example if you have a 24

453
00:20:20,830 --> 00:20:26,139
core server you can run 22 instances of

454
00:20:23,470 --> 00:20:28,210
Zeke on it and pin each of them to a CPU

455
00:20:26,140 --> 00:20:29,559
and leave 2 cores for something else

456
00:20:28,210 --> 00:20:30,460
whatever it needs to do like other

457
00:20:29,559 --> 00:20:32,379
functions

458
00:20:30,460 --> 00:20:33,909
there's the manager process which is

459
00:20:32,380 --> 00:20:37,150
responsible for configuration of the

460
00:20:33,909 --> 00:20:38,830
cluster it contacts the workers when

461
00:20:37,150 --> 00:20:40,480
there's a configuration change or an

462
00:20:38,830 --> 00:20:44,230
administrative function to be performed

463
00:20:40,480 --> 00:20:46,450
so this ensures that whenever you're

464
00:20:44,230 --> 00:20:49,120
trying to deploy a Zeke worker cluster

465
00:20:46,450 --> 00:20:52,900
you can just say you can just perform

466
00:20:49,120 --> 00:20:54,250
like Zeke and deploy on the manager and

467
00:20:52,900 --> 00:20:56,500
the manager will automatically contact

468
00:20:54,250 --> 00:20:58,210
all the workers and get the

469
00:20:56,500 --> 00:20:59,770
configuration changes done and do what

470
00:20:58,210 --> 00:21:03,070
the administrative functions like power

471
00:20:59,770 --> 00:21:05,049
off reboot everything of that sort this

472
00:21:03,070 --> 00:21:07,330
is the proxy function which is also very

473
00:21:05,049 --> 00:21:10,960
important because this ensures that the

474
00:21:07,330 --> 00:21:12,610
entire z cluster is context aware so it

475
00:21:10,960 --> 00:21:15,220
maintains like the state of all the Zeke

476
00:21:12,610 --> 00:21:17,740
workers in relation to each other so for

477
00:21:15,220 --> 00:21:20,950
example if you see is so for example if

478
00:21:17,740 --> 00:21:22,840
you see a lot of traffic on one one

479
00:21:20,950 --> 00:21:24,039
machine and a part of the traffic on the

480
00:21:22,840 --> 00:21:26,020
other machine part of the attack on the

481
00:21:24,039 --> 00:21:28,750
other machine the proxy can help you

482
00:21:26,020 --> 00:21:31,418
identify the entire entire attack as a

483
00:21:28,750 --> 00:21:33,549
whole and last is the logger function

484
00:21:31,419 --> 00:21:40,750
which receives an D duplicates all the

485
00:21:33,549 --> 00:21:43,658
logs just an additional work process hi

486
00:21:40,750 --> 00:21:47,250
I'm Lauren I was more on the like IT

487
00:21:43,659 --> 00:21:49,870
security and policy side of things so

488
00:21:47,250 --> 00:21:52,059
pulsar and the technology underlying it

489
00:21:49,870 --> 00:21:55,120
which is Zeke logs all of the traffic

490
00:21:52,059 --> 00:21:56,559
going to and from the science DMZ this

491
00:21:55,120 --> 00:21:59,500
at the very least fills our auditing

492
00:21:56,559 --> 00:22:01,510
functions that we need it also breaks

493
00:21:59,500 --> 00:22:03,280
out the traffic into individual logs

494
00:22:01,510 --> 00:22:06,789
based on criteria which I'll talk more

495
00:22:03,280 --> 00:22:08,559
about later it detects any suspected

496
00:22:06,789 --> 00:22:10,059
security incidents and Flags them and

497
00:22:08,559 --> 00:22:13,090
sticks them in separate logs so they're

498
00:22:10,059 --> 00:22:15,399
easy to find and it is also able to send

499
00:22:13,090 --> 00:22:17,269
email alerts based on specific incidents

500
00:22:15,399 --> 00:22:18,829
that we have told it to do

501
00:22:17,269 --> 00:22:20,509
eventually we're working on putting

502
00:22:18,829 --> 00:22:23,959
together a team of individuals to either

503
00:22:20,509 --> 00:22:25,459
respond to these alerts manually or find

504
00:22:23,959 --> 00:22:27,729
we might find a way to automate this

505
00:22:25,459 --> 00:22:30,559
like blocking them at the edge router

506
00:22:27,729 --> 00:22:33,499
all of this is determined by local

507
00:22:30,559 --> 00:22:35,299
policy so you have to set this up and

508
00:22:33,499 --> 00:22:39,979
basically tell it what you want it to do

509
00:22:35,299 --> 00:22:41,779
with different kinds of traffic so the

510
00:22:39,979 --> 00:22:43,989
power of Zeke which is once again the

511
00:22:41,779 --> 00:22:47,059
underlying technology is really

512
00:22:43,989 --> 00:22:48,589
customization it uses its own scripting

513
00:22:47,059 --> 00:22:50,109
language which is Zeke scripts and

514
00:22:48,589 --> 00:22:52,309
everything is configured through this

515
00:22:50,109 --> 00:22:54,408
what that means is that you can

516
00:22:52,309 --> 00:22:57,199
basically set it to do whatever you want

517
00:22:54,409 --> 00:22:59,479
so you can load a script to detect a

518
00:22:57,199 --> 00:23:01,519
specific security incident you can write

519
00:22:59,479 --> 00:23:03,199
your own you can change the way that the

520
00:23:01,519 --> 00:23:05,389
logs are configured or laid out if you

521
00:23:03,199 --> 00:23:10,059
would like so that's a really cool thing

522
00:23:05,389 --> 00:23:13,428
about it when setting this up so

523
00:23:10,059 --> 00:23:16,039
sufficient actor so for example you can

524
00:23:13,429 --> 00:23:19,279
say that all ssh traffic should be

525
00:23:16,039 --> 00:23:21,019
logged but ssh brute-forcing attempts

526
00:23:19,279 --> 00:23:22,789
should be logged into a separate log and

527
00:23:21,019 --> 00:23:24,949
then you can say that you only want

528
00:23:22,789 --> 00:23:26,209
alerts to be sent about the ssh

529
00:23:24,949 --> 00:23:29,029
brute-forcing attempts that are

530
00:23:26,209 --> 00:23:31,069
successful that way that we're not

531
00:23:29,029 --> 00:23:34,149
skewed and spamming analysts with like

532
00:23:31,069 --> 00:23:37,129
alerts that you really can't act upon

533
00:23:34,149 --> 00:23:39,258
another cool thing about Zeke is that

534
00:23:37,129 --> 00:23:40,668
you can integrate a lot of custom

535
00:23:39,259 --> 00:23:42,169
scripts there's a lot of scripts that

536
00:23:40,669 --> 00:23:44,389
are already out there on the internet

537
00:23:42,169 --> 00:23:45,739
and they're really easy to just plug in

538
00:23:44,389 --> 00:23:47,539
and you can do a lot of cool things with

539
00:23:45,739 --> 00:23:50,449
it or once again you can totally just

540
00:23:47,539 --> 00:23:52,519
completely write your own script so some

541
00:23:50,449 --> 00:23:54,949
cool ones that I've integrated I've

542
00:23:52,519 --> 00:23:58,009
integrated an SSL fingerprinting script

543
00:23:54,949 --> 00:23:59,809
so what this does is it gives us some

544
00:23:58,009 --> 00:24:02,179
insight into what services are running

545
00:23:59,809 --> 00:24:03,168
on our encrypted traffic so that's

546
00:24:02,179 --> 00:24:04,939
pretty cool

547
00:24:03,169 --> 00:24:06,259
I also have a Bitcoin mining script

548
00:24:04,939 --> 00:24:10,669
because you know you wouldn't want that

549
00:24:06,259 --> 00:24:12,169
to happen on a supercomputer so that one

550
00:24:10,669 --> 00:24:14,389
is able to detect if someone's running

551
00:24:12,169 --> 00:24:18,349
Bitcoin ting on the supercomputers and

552
00:24:14,389 --> 00:24:19,789
then we can shut that down yes once

553
00:24:18,349 --> 00:24:21,499
again so there's I mean it's really easy

554
00:24:19,789 --> 00:24:25,699
to integrate it with outside services so

555
00:24:21,499 --> 00:24:28,940
that's also a plus we've integrated

556
00:24:25,699 --> 00:24:30,870
threat intelligence into pulsar threat

557
00:24:28,940 --> 00:24:32,399
intelligence is basically data points

558
00:24:30,870 --> 00:24:35,189
you've gotten from the community that

559
00:24:32,399 --> 00:24:36,959
tell you about malicious actors and so

560
00:24:35,190 --> 00:24:39,210
for example this might be IP addresses

561
00:24:36,960 --> 00:24:42,090
host means file hashes that kind of

562
00:24:39,210 --> 00:24:44,340
thing so we pull this into pulsar and

563
00:24:42,090 --> 00:24:46,559
then it compares it against the traffic

564
00:24:44,340 --> 00:24:48,360
that it sees if there's a match then

565
00:24:46,559 --> 00:24:51,210
it'll flag it as malicious and stick it

566
00:24:48,360 --> 00:24:53,189
in a separate log so that we know and

567
00:24:51,210 --> 00:24:54,990
then once again we're working on

568
00:24:53,190 --> 00:24:57,899
developing the next steps as to how to

569
00:24:54,990 --> 00:24:59,879
follow up on that we're currently using

570
00:24:57,899 --> 00:25:02,189
alienvault otx

571
00:24:59,879 --> 00:25:03,990
it integrates really well with bro and

572
00:25:02,190 --> 00:25:06,570
there's a you know wide array of

573
00:25:03,990 --> 00:25:09,240
community intelligence what we are it's

574
00:25:06,570 --> 00:25:11,490
free but we are looking into some

575
00:25:09,240 --> 00:25:14,159
services that other universities use so

576
00:25:11,490 --> 00:25:15,419
that we can get data that they are data

577
00:25:14,159 --> 00:25:17,039
about threats that they're seeing on

578
00:25:15,419 --> 00:25:22,289
their research networks because that

579
00:25:17,039 --> 00:25:25,649
might be highly relevant to us so like I

580
00:25:22,289 --> 00:25:28,320
said one of the cool things that Zeke is

581
00:25:25,649 --> 00:25:30,119
the way that it breaks out the logs so

582
00:25:28,320 --> 00:25:32,100
you have sort of general logs for

583
00:25:30,119 --> 00:25:34,590
example conte log is all the traffic

584
00:25:32,100 --> 00:25:36,658
that comes across the network I took all

585
00:25:34,590 --> 00:25:39,449
those to one place there's also protocol

586
00:25:36,659 --> 00:25:42,779
specific logs so for example HTTP log

587
00:25:39,450 --> 00:25:45,840
FTP log DNS that log if I want to see

588
00:25:42,779 --> 00:25:48,330
only HTTP HTTP traffic I would go to

589
00:25:45,840 --> 00:25:50,399
that log and I can see it there there's

590
00:25:48,330 --> 00:25:53,340
also logs that flag sort of specific

591
00:25:50,399 --> 00:25:55,678
events so weird dot log is sort of

592
00:25:53,340 --> 00:25:58,350
strange traffic or malformed traffic or

593
00:25:55,679 --> 00:26:00,090
traffic that's non typical and this

594
00:25:58,350 --> 00:26:01,619
might be indicative of a security event

595
00:26:00,090 --> 00:26:03,720
but we really don't know so it's

596
00:26:01,619 --> 00:26:05,369
something to keep an eye on this is also

597
00:26:03,720 --> 00:26:07,440
a good place to figure out you know you

598
00:26:05,369 --> 00:26:08,668
have things that are not configured the

599
00:26:07,440 --> 00:26:11,610
correct way because there's a good

600
00:26:08,669 --> 00:26:13,529
chance it'll show up here another log is

601
00:26:11,610 --> 00:26:15,600
notice that log so this is basically

602
00:26:13,529 --> 00:26:18,059
where any events I've told it to fly get

603
00:26:15,600 --> 00:26:19,860
flagged so I give my example of SSH

604
00:26:18,059 --> 00:26:22,590
brute-forcing and that would go into

605
00:26:19,860 --> 00:26:24,779
notice that log and then anything in

606
00:26:22,590 --> 00:26:27,899
this law you can create an alert upon so

607
00:26:24,779 --> 00:26:29,490
for example all the SSH brute-forcing

608
00:26:27,899 --> 00:26:32,340
attempts are logged in to notice that

609
00:26:29,490 --> 00:26:35,580
log but only the ones are successful

610
00:26:32,340 --> 00:26:37,168
result in a notification being sent and

611
00:26:35,580 --> 00:26:39,449
told that log that's where our threat

612
00:26:37,169 --> 00:26:40,649
intelligence hits go so if you look

613
00:26:39,450 --> 00:26:44,400
through this you'll see basically

614
00:26:40,649 --> 00:26:46,290
anything that's been hit upon

615
00:26:44,400 --> 00:26:49,020
all of these are once again loaded and

616
00:26:46,290 --> 00:26:52,440
altered by site policy pulsar is highly

617
00:26:49,020 --> 00:26:55,620
customizable which is its benefit below

618
00:26:52,440 --> 00:26:57,840
you see an example of a notification so

619
00:26:55,620 --> 00:27:01,229
for example here we had a situation

620
00:26:57,840 --> 00:27:02,970
where there was a internal host actually

621
00:27:01,230 --> 00:27:05,730
the second that we turned on pulsar we

622
00:27:02,970 --> 00:27:08,790
saw this there was a internal host that

623
00:27:05,730 --> 00:27:10,290
was scanning nodes within the research

624
00:27:08,790 --> 00:27:11,850
network this thing was on the enriched

625
00:27:10,290 --> 00:27:12,950
research network and we were able to

626
00:27:11,850 --> 00:27:14,939
find it and shut it down

627
00:27:12,950 --> 00:27:16,020
as you can see this is kind of

628
00:27:14,940 --> 00:27:18,660
customized in the sense that I can

629
00:27:16,020 --> 00:27:20,610
specify that this is a local host that

630
00:27:18,660 --> 00:27:22,380
is scanning things that way I'm not

631
00:27:20,610 --> 00:27:24,000
sending massive amount of alerts based

632
00:27:22,380 --> 00:27:28,860
on anything that happens to poke the

633
00:27:24,000 --> 00:27:30,720
network so that's kind of cool so here's

634
00:27:28,860 --> 00:27:33,540
an example of the connection log and

635
00:27:30,720 --> 00:27:35,309
this is Khan dot log you can see I don't

636
00:27:33,540 --> 00:27:38,280
know like the originating IP address you

637
00:27:35,309 --> 00:27:39,928
can see the responding IP address we

638
00:27:38,280 --> 00:27:42,300
mark these with different levels of

639
00:27:39,929 --> 00:27:45,360
sensitivity so this one is sensitive

640
00:27:42,300 --> 00:27:47,428
because it contains IP addresses we're

641
00:27:45,360 --> 00:27:49,080
what we're once again we're looking into

642
00:27:47,429 --> 00:27:51,230
anonymizing this data so that

643
00:27:49,080 --> 00:27:53,550
researchers are able to use it in

644
00:27:51,230 --> 00:27:56,220
determining these sensitivity levels has

645
00:27:53,550 --> 00:27:58,200
been part of getting that set up below

646
00:27:56,220 --> 00:28:06,000
you can see an example of what the log

647
00:27:58,200 --> 00:28:07,770
actually looks like in practice so my

648
00:28:06,000 --> 00:28:10,140
name is Brian and I have been primarily

649
00:28:07,770 --> 00:28:12,980
responsible for the log distribution

650
00:28:10,140 --> 00:28:16,110
indexing and visualization into our data

651
00:28:12,980 --> 00:28:17,670
and this is the logical overview of the

652
00:28:16,110 --> 00:28:20,280
entire log distribution portion of the

653
00:28:17,670 --> 00:28:21,929
poster project there's quite a lot going

654
00:28:20,280 --> 00:28:25,350
on here and I'll go through it really

655
00:28:21,929 --> 00:28:27,300
quickly as I go through on any given day

656
00:28:25,350 --> 00:28:30,559
we generate tens of gigabytes of log

657
00:28:27,300 --> 00:28:32,790
data a day usually around 20 to 30 gigs

658
00:28:30,559 --> 00:28:34,980
and this data is stored in multiple

659
00:28:32,790 --> 00:28:37,860
places in utilized in a multiple of

660
00:28:34,980 --> 00:28:40,290
different ways so the first location

661
00:28:37,860 --> 00:28:42,959
that we store our data is our long-term

662
00:28:40,290 --> 00:28:45,210
GPFS storage location and we write logs

663
00:28:42,960 --> 00:28:47,610
directly from Zeke to this location in

664
00:28:45,210 --> 00:28:49,260
plain text for data backups and in the

665
00:28:47,610 --> 00:28:51,809
future it'll hold as a placeholder for

666
00:28:49,260 --> 00:28:52,950
sharing this data with researchers so

667
00:28:51,809 --> 00:28:56,220
they can utilize it machine learning

668
00:28:52,950 --> 00:28:57,750
projects or other computational research

669
00:28:56,220 --> 00:28:59,610
projects I see fit

670
00:28:57,750 --> 00:29:03,690
now this second location that we store

671
00:28:59,610 --> 00:29:05,850
logs is a Kefka data broker cluster we

672
00:29:03,690 --> 00:29:08,850
write these logs here via file B

673
00:29:05,850 --> 00:29:12,990
so as logs are generated on Zeke side we

674
00:29:08,850 --> 00:29:14,969
transfer those to Kafka writing logs to

675
00:29:12,990 --> 00:29:16,890
Kafka in lean of writing them directly

676
00:29:14,970 --> 00:29:19,020
to LS search gives us a few different

677
00:29:16,890 --> 00:29:21,000
benefits one is that cap Co will act as

678
00:29:19,020 --> 00:29:23,400
a buffer as Siobhan had mentioned

679
00:29:21,000 --> 00:29:24,630
earlier sometimes we see huge influxes

680
00:29:23,400 --> 00:29:26,370
of data and data connections on the

681
00:29:24,630 --> 00:29:28,350
network and we don't want to overload

682
00:29:26,370 --> 00:29:31,110
the last search cluster and hinder our

683
00:29:28,350 --> 00:29:34,260
ability high-speed ability to visualize

684
00:29:31,110 --> 00:29:35,969
our data in any way via Cubana a second

685
00:29:34,260 --> 00:29:38,280
benefit in the main benefit of Kafka is

686
00:29:35,970 --> 00:29:40,800
that it gives us a very modular and

687
00:29:38,280 --> 00:29:43,020
centralized location where we can gather

688
00:29:40,800 --> 00:29:44,750
and distribute data across many

689
00:29:43,020 --> 00:29:47,430
different producer and consumer

690
00:29:44,750 --> 00:29:48,690
applications instead of just log stash

691
00:29:47,430 --> 00:29:51,780
or excuse me

692
00:29:48,690 --> 00:29:53,100
lots of search and Cabana so we can

693
00:29:51,780 --> 00:29:56,610
collect additional data from things like

694
00:29:53,100 --> 00:29:59,010
syslog servers or get additional net

695
00:29:56,610 --> 00:30:00,959
flow data and then we can distribute

696
00:29:59,010 --> 00:30:02,250
that data along with the IDS data that

697
00:30:00,960 --> 00:30:03,960
we've already been collecting to other

698
00:30:02,250 --> 00:30:07,470
consumer applications like Hadoop for

699
00:30:03,960 --> 00:30:10,140
batch processing or spark for additional

700
00:30:07,470 --> 00:30:11,970
data processing and in the future when

701
00:30:10,140 --> 00:30:13,590
we get the anonymization portion

702
00:30:11,970 --> 00:30:15,600
finalized we'll be able to stream

703
00:30:13,590 --> 00:30:17,189
anonymize data directly to custom

704
00:30:15,600 --> 00:30:20,669
applications written by researchers or

705
00:30:17,190 --> 00:30:21,960
utilized by researchers at the latter

706
00:30:20,670 --> 00:30:25,290
portion of the overview we have our

707
00:30:21,960 --> 00:30:27,900
Search Indexing cluster here our data is

708
00:30:25,290 --> 00:30:30,930
actually stored and indexed to make it

709
00:30:27,900 --> 00:30:33,120
more easily searchable via Cabana the

710
00:30:30,930 --> 00:30:35,880
latter portion also acts as the sim for

711
00:30:33,120 --> 00:30:37,879
the IDs P security analysts so with

712
00:30:35,880 --> 00:30:40,590
cabana we can create custom dashboards

713
00:30:37,880 --> 00:30:43,320
and also get additional alerting based

714
00:30:40,590 --> 00:30:45,209
off of those dashboards so itsp can

715
00:30:43,320 --> 00:30:47,159
utilize these dashboards for to

716
00:30:45,210 --> 00:30:49,770
investigate correlation of events on the

717
00:30:47,160 --> 00:30:51,870
network to see maybe whether or not past

718
00:30:49,770 --> 00:30:53,550
events have been attacks on the network

719
00:30:51,870 --> 00:30:55,320
have been successful or if ongoing

720
00:30:53,550 --> 00:30:58,080
attacks need to be furthering further

721
00:30:55,320 --> 00:30:59,550
investigated if things need to be

722
00:30:58,080 --> 00:31:02,159
further investigated these dashboards

723
00:30:59,550 --> 00:31:04,470
also give us a very dynamic ability to

724
00:31:02,160 --> 00:31:05,970
narrow down a specific time windows and

725
00:31:04,470 --> 00:31:08,130
data subsets to give us a really

726
00:31:05,970 --> 00:31:11,360
up-close look about what is happening on

727
00:31:08,130 --> 00:31:11,360
our network at any given time

728
00:31:14,100 --> 00:31:19,649
so as we are talking about the data and

729
00:31:16,650 --> 00:31:22,460
anima zation portion of this so the logs

730
00:31:19,650 --> 00:31:25,650
that are generated by we by Zeke are

731
00:31:22,460 --> 00:31:28,920
valuable resource for the network data

732
00:31:25,650 --> 00:31:31,290
network characterization data and we

733
00:31:28,920 --> 00:31:33,180
anonymize this so that researchers can

734
00:31:31,290 --> 00:31:36,420
perform analysis on it without like

735
00:31:33,180 --> 00:31:38,490
violating the sensitivity of the data so

736
00:31:36,420 --> 00:31:41,160
we use multiple tools to anonymize the

737
00:31:38,490 --> 00:31:44,820
data one tool that we use a script open

738
00:31:41,160 --> 00:31:47,130
which provides a one-to-one mapping for

739
00:31:44,820 --> 00:31:49,559
any IP addresses that may be in the logs

740
00:31:47,130 --> 00:31:51,870
so what this means is that for example

741
00:31:49,559 --> 00:31:56,520
if there's an IP address crypto pan or

742
00:31:51,870 --> 00:31:58,979
crypto pan will preserve the network

743
00:31:56,520 --> 00:32:02,330
prefix of it so for example like 10.4

744
00:31:58,980 --> 00:32:05,640
and the last two octaves will be

745
00:32:02,330 --> 00:32:09,059
encrypted in a one-to-one fashion so

746
00:32:05,640 --> 00:32:12,600
anything from let's say 10 dot 4.1.1 is

747
00:32:09,059 --> 00:32:14,490
mapped to ten dot 4.1.2 in the encrypted

748
00:32:12,600 --> 00:32:16,889
locks it will remain consistent

749
00:32:14,490 --> 00:32:18,480
everywhere in the encrypted block so it

750
00:32:16,890 --> 00:32:21,929
provides additional value of actually

751
00:32:18,480 --> 00:32:23,940
performing analysis based on hosts we

752
00:32:21,929 --> 00:32:25,800
have also made use of random salt and

753
00:32:23,940 --> 00:32:28,350
hashing and the Python scripts have also

754
00:32:25,800 --> 00:32:31,230
been developed to anonymize some of the

755
00:32:28,350 --> 00:32:34,260
other logs in Zeke so just to give you

756
00:32:31,230 --> 00:32:37,440
an example right here there are three

757
00:32:34,260 --> 00:32:40,050
fields that we would normally encrypt in

758
00:32:37,440 --> 00:32:42,690
a connection log and those are the

759
00:32:40,050 --> 00:32:45,240
original responding and the tunnel IPS

760
00:32:42,690 --> 00:32:47,970
so these are IPS that we encrypt with a

761
00:32:45,240 --> 00:32:50,790
one-to-one mapping to fields which are

762
00:32:47,970 --> 00:32:52,170
the layer 2 original at origin address

763
00:32:50,790 --> 00:32:54,780
and the destination address those are

764
00:32:52,170 --> 00:32:56,220
salt and hashed these are usually the

765
00:32:54,780 --> 00:32:59,000
MAC addresses of the router so they

766
00:32:56,220 --> 00:33:01,350
don't provide that significant amount of

767
00:32:59,000 --> 00:33:03,510
insight for the researchers anyway so we

768
00:33:01,350 --> 00:33:06,090
decide to just salt and hash it just to

769
00:33:03,510 --> 00:33:07,950
and we also do not want to like give up

770
00:33:06,090 --> 00:33:09,629
actual data there because that is also

771
00:33:07,950 --> 00:33:11,580
very sensitive because again router MAC

772
00:33:09,630 --> 00:33:14,670
addresses and we drop the node name

773
00:33:11,580 --> 00:33:16,409
which is the basically the Zeke worker

774
00:33:14,670 --> 00:33:18,630
that actually logged this it's

775
00:33:16,410 --> 00:33:22,500
irrelevant to researchers so we just

776
00:33:18,630 --> 00:33:24,840
decide to drop it so this is a very cool

777
00:33:22,500 --> 00:33:25,200
diagram because this shows us some of

778
00:33:24,840 --> 00:33:27,000
the

779
00:33:25,200 --> 00:33:30,870
operational observations we had when the

780
00:33:27,000 --> 00:33:32,549
system went live the first thing that we

781
00:33:30,870 --> 00:33:34,620
discovered was obviously that there are

782
00:33:32,549 --> 00:33:35,970
many malicious external hosts that are

783
00:33:34,620 --> 00:33:40,018
constantly scanning police research

784
00:33:35,970 --> 00:33:42,600
infrastructure for open services and it

785
00:33:40,019 --> 00:33:44,940
could be in maps or just like actually

786
00:33:42,600 --> 00:33:48,090
like look looking for like actual

787
00:33:44,940 --> 00:33:52,769
services like open ports this diagram

788
00:33:48,090 --> 00:33:55,830
shows the connections over a week the

789
00:33:52,769 --> 00:33:58,080
part shaded in blue is any connection

790
00:33:55,830 --> 00:34:00,720
that is initiated but does not receive a

791
00:33:58,080 --> 00:34:02,610
response so you can see a majority of

792
00:34:00,720 --> 00:34:04,620
the traffic that we see is a connection

793
00:34:02,610 --> 00:34:06,510
that is initiated but it does not get a

794
00:34:04,620 --> 00:34:08,690
response as this includes all the

795
00:34:06,510 --> 00:34:14,010
scanning that is happening on a network

796
00:34:08,690 --> 00:34:16,980
on any any given hour we see over a 1.5

797
00:34:14,010 --> 00:34:19,200
million connections and this diagram is

798
00:34:16,980 --> 00:34:22,260
very cool in the sense that it validates

799
00:34:19,199 --> 00:34:24,210
the functioning of a system because as

800
00:34:22,260 --> 00:34:28,169
you can see there's a clear dip right

801
00:34:24,210 --> 00:34:30,240
here somewhere around day 2 if you when

802
00:34:28,168 --> 00:34:32,368
we actually saw the dip we actually went

803
00:34:30,239 --> 00:34:34,500
to our slack channel and went to the

804
00:34:32,369 --> 00:34:36,389
time frame when the dip happened and an

805
00:34:34,500 --> 00:34:38,010
operation channel Operations channel we

806
00:34:36,389 --> 00:34:39,750
could clearly see the network engine

807
00:34:38,010 --> 00:34:42,450
talking about bypassing one of our taps

808
00:34:39,750 --> 00:34:44,190
to perform a network upgrade and as soon

809
00:34:42,449 --> 00:34:45,750
as the upgrade was complete the tap was

810
00:34:44,190 --> 00:34:47,250
back in production and all of us we see

811
00:34:45,750 --> 00:34:49,469
all of the traffic again so this just

812
00:34:47,250 --> 00:34:51,030
shows that this was a good validation

813
00:34:49,469 --> 00:34:52,888
that we are actually seeing traffic and

814
00:34:51,030 --> 00:35:00,869
the taps are working properly and so on

815
00:34:52,889 --> 00:35:02,460
and so forth ok um so we've had I feel

816
00:35:00,869 --> 00:35:06,089
like we've had a lot of impact by

817
00:35:02,460 --> 00:35:07,740
implementing pulsar so previously like

818
00:35:06,089 --> 00:35:10,828
Garret kind of talked about we didn't

819
00:35:07,740 --> 00:35:12,810
have any network level security

820
00:35:10,829 --> 00:35:14,579
monitoring over the research network we

821
00:35:12,810 --> 00:35:16,740
had host based monitoring and firewalls

822
00:35:14,579 --> 00:35:18,480
essentially so this really is a

823
00:35:16,740 --> 00:35:20,250
significant increase in terms of the

824
00:35:18,480 --> 00:35:22,920
security that we have over the research

825
00:35:20,250 --> 00:35:24,599
network this was something that was

826
00:35:22,920 --> 00:35:26,369
really desired and it'll also allow us

827
00:35:24,599 --> 00:35:27,810
to process different kinds of data and

828
00:35:26,369 --> 00:35:30,510
partner with people that we couldn't

829
00:35:27,810 --> 00:35:32,069
before so for example now we can handle

830
00:35:30,510 --> 00:35:34,319
HIPAA data in a way that we weren't

831
00:35:32,069 --> 00:35:36,119
allowed to do that before so it

832
00:35:34,319 --> 00:35:39,300
increases like sort of the value of our

833
00:35:36,119 --> 00:35:41,640
data center so we've

834
00:35:39,300 --> 00:35:44,280
like I said I'm internal hosts this was

835
00:35:41,640 --> 00:35:45,509
slipping the lights on we found that we

836
00:35:44,280 --> 00:35:48,120
have some that have been kind of a

837
00:35:45,510 --> 00:35:49,740
bigger threat than we've realized so for

838
00:35:48,120 --> 00:35:51,870
example like I was saying on the first

839
00:35:49,740 --> 00:35:54,899
day we turned it on and we immediately

840
00:35:51,870 --> 00:35:56,759
saw a host that was on the research

841
00:35:54,900 --> 00:35:59,510
network compromised and it was scanning

842
00:35:56,760 --> 00:36:01,980
the inside of the research network and

843
00:35:59,510 --> 00:36:03,780
transmitting this data out it was

844
00:36:01,980 --> 00:36:05,640
actually scanning a report that could

845
00:36:03,780 --> 00:36:06,540
have resulted in an attack and like I

846
00:36:05,640 --> 00:36:08,160
was trying to get a remote shell

847
00:36:06,540 --> 00:36:10,800
basically based on this port we think

848
00:36:08,160 --> 00:36:12,480
theoretically it could have so either

849
00:36:10,800 --> 00:36:14,550
way we found this host and we were able

850
00:36:12,480 --> 00:36:16,890
to disable it which is not something

851
00:36:14,550 --> 00:36:20,190
that necessarily would have happened if

852
00:36:16,890 --> 00:36:21,870
we hadn't had pulsar we had another case

853
00:36:20,190 --> 00:36:23,730
where there's basically a team of

854
00:36:21,870 --> 00:36:26,069
researchers and they deleted part of

855
00:36:23,730 --> 00:36:27,510
their Samba sure and they came to us and

856
00:36:26,070 --> 00:36:29,670
they were like hey what happened to my

857
00:36:27,510 --> 00:36:31,380
Samba share and we were actually able to

858
00:36:29,670 --> 00:36:34,770
go through and see the commands which

859
00:36:31,380 --> 00:36:37,560
they issued deleting their share so it

860
00:36:34,770 --> 00:36:39,090
also provides us some like I guess

861
00:36:37,560 --> 00:36:42,330
insight into that kind of thing that

862
00:36:39,090 --> 00:36:44,100
happens we have like a number of alerts

863
00:36:42,330 --> 00:36:45,930
coming in each week I've really been

864
00:36:44,100 --> 00:36:47,670
working on getting these fine-tuned so

865
00:36:45,930 --> 00:36:51,839
that it's really only flagging the

866
00:36:47,670 --> 00:36:54,990
important things so we have maybe like

867
00:36:51,840 --> 00:36:57,390
3040 alerts each week so far I mean

868
00:36:54,990 --> 00:36:58,680
we've had the pulsar team analyzing

869
00:36:57,390 --> 00:37:04,319
these and boarding them to I see

870
00:36:58,680 --> 00:37:06,299
security as needed yeah so yeah so in

871
00:37:04,320 --> 00:37:07,770
conclusion and we've really heightened

872
00:37:06,300 --> 00:37:10,380
the security over the research network

873
00:37:07,770 --> 00:37:12,120
it's been a really positive thing work

874
00:37:10,380 --> 00:37:15,120
will continue and sort of fine-tuning

875
00:37:12,120 --> 00:37:17,220
the system and I think as it's used when

876
00:37:15,120 --> 00:37:18,900
people discover different security

877
00:37:17,220 --> 00:37:20,580
vulnerabilities or issues that we want

878
00:37:18,900 --> 00:37:23,310
to monitor for and maybe we'll implement

879
00:37:20,580 --> 00:37:24,840
a script or will change how the logs are

880
00:37:23,310 --> 00:37:28,110
configured out because once again very

881
00:37:24,840 --> 00:37:30,420
highly customizable and then we're

882
00:37:28,110 --> 00:37:32,040
working on getting log the logs in on

883
00:37:30,420 --> 00:37:33,720
and wise so that we can provide these to

884
00:37:32,040 --> 00:37:36,900
researchers and provide additional value

885
00:37:33,720 --> 00:37:38,640
this way I've been really lucky to be a

886
00:37:36,900 --> 00:37:40,860
member of this student team that got to

887
00:37:38,640 --> 00:37:43,230
have really hands-on research with this

888
00:37:40,860 --> 00:37:44,700
as an undergrad and this wasn't a toy

889
00:37:43,230 --> 00:37:47,850
project this was a really cool thing

890
00:37:44,700 --> 00:37:50,009
that I got to do I want to thank you for

891
00:37:47,850 --> 00:37:53,040
listening let us know if you have any

892
00:37:50,010 --> 00:38:09,120
questions thank you

893
00:37:53,040 --> 00:38:12,960
I have won some of the some of the rules

894
00:38:09,120 --> 00:38:15,270
that you're using I mean you had to was

895
00:38:12,960 --> 00:38:17,280
this their the the scripts were these

896
00:38:15,270 --> 00:38:19,500
things that there's kind of a standard

897
00:38:17,280 --> 00:38:21,210
set out there you chose from where many

898
00:38:19,500 --> 00:38:23,010
of them things you had to write or could

899
00:38:21,210 --> 00:38:27,210
they be automated do you think it's a

900
00:38:23,010 --> 00:38:30,030
mix so basically when you install Zeke

901
00:38:27,210 --> 00:38:32,070
it comes with a set of scripts that are

902
00:38:30,030 --> 00:38:33,420
basically automatically activated and

903
00:38:32,070 --> 00:38:34,350
those are sort of the ones that log all

904
00:38:33,420 --> 00:38:36,780
the traffic

905
00:38:34,350 --> 00:38:38,370
it checks certain security events and it

906
00:38:36,780 --> 00:38:41,100
separates the traffic out into logs

907
00:38:38,370 --> 00:38:43,109
there's also another set that comes with

908
00:38:41,100 --> 00:38:45,600
it that we're kind of optional you can

909
00:38:43,110 --> 00:38:47,700
do things like trace route like flag for

910
00:38:45,600 --> 00:38:49,920
that you have to decide whether or not

911
00:38:47,700 --> 00:38:51,750
to turn these on and then I mean there's

912
00:38:49,920 --> 00:38:54,810
some totally outside scripts that I've

913
00:38:51,750 --> 00:38:56,220
also found and integrated and it's it's

914
00:38:54,810 --> 00:38:58,410
also a matter it's not just a matter of

915
00:38:56,220 --> 00:38:59,850
like turning on or off the scripts or

916
00:38:58,410 --> 00:39:01,649
like writing some of them a lot of it

917
00:38:59,850 --> 00:39:03,420
has been integrating it with outside

918
00:39:01,650 --> 00:39:11,360
services so that it's able to work that

919
00:39:03,420 --> 00:39:13,650
way - yes we have a question in the back

920
00:39:11,360 --> 00:39:15,600
what do you think your biggest challenge

921
00:39:13,650 --> 00:39:25,290
was like starting from the beginning -

922
00:39:15,600 --> 00:39:28,110
now that you've overcame many separate

923
00:39:25,290 --> 00:39:29,670
challenges so but well I mean I think

924
00:39:28,110 --> 00:39:31,530
the number one challenge was just

925
00:39:29,670 --> 00:39:34,650
designing something that didn't increase

926
00:39:31,530 --> 00:39:36,210
latency I mean it was such a big network

927
00:39:34,650 --> 00:39:37,650
that really wasn't a solution out there

928
00:39:36,210 --> 00:39:39,600
or one that we had really heard of that

929
00:39:37,650 --> 00:39:42,110
was able to handle multiple hundred

930
00:39:39,600 --> 00:39:44,460
gigabit links there was sort of a

931
00:39:42,110 --> 00:39:46,590
similar system those instituted at

932
00:39:44,460 --> 00:39:48,870
Berkley but it was on 100 gigabit link

933
00:39:46,590 --> 00:39:51,060
and we really don't even know of one

934
00:39:48,870 --> 00:39:54,569
that's this large even remotely so

935
00:39:51,060 --> 00:39:57,990
that's been a big challenge yeah one of

936
00:39:54,570 --> 00:40:00,540
the biggest challenges that I face and

937
00:39:57,990 --> 00:40:03,540
Eric and I worked on it for a very long

938
00:40:00,540 --> 00:40:05,759
time was that at certain points we would

939
00:40:03,540 --> 00:40:06,870
only see half of the traffic in the

940
00:40:05,760 --> 00:40:08,730
system like when it was

941
00:40:06,870 --> 00:40:12,029
initially when it initially went into

942
00:40:08,730 --> 00:40:13,320
production and we spent probably weeks

943
00:40:12,030 --> 00:40:15,780
like trying to figure out where the

944
00:40:13,320 --> 00:40:18,030
problem was because half the time would

945
00:40:15,780 --> 00:40:20,670
Zeke would start screaming and saying

946
00:40:18,030 --> 00:40:22,740
knife like 50% of your connections I

947
00:40:20,670 --> 00:40:24,510
half duplex and we don't know where the

948
00:40:22,740 --> 00:40:26,640
other half of the traffic is going so

949
00:40:24,510 --> 00:40:28,380
eventually we found out like after a lot

950
00:40:26,640 --> 00:40:29,850
of troubleshooting and doing the

951
00:40:28,380 --> 00:40:32,580
troubleshooting we also added a lot of

952
00:40:29,850 --> 00:40:34,710
monitoring features and every layer but

953
00:40:32,580 --> 00:40:37,620
after a lot of time we figured out that

954
00:40:34,710 --> 00:40:39,930
there was a network link that was active

955
00:40:37,620 --> 00:40:41,670
on the research core there was not

956
00:40:39,930 --> 00:40:43,740
supposed to be active so half the

957
00:40:41,670 --> 00:40:45,600
traffic would go up a link that was

958
00:40:43,740 --> 00:40:47,129
monitored by us I will come back the

959
00:40:45,600 --> 00:40:48,390
link that was not monitored by us and

960
00:40:47,130 --> 00:40:50,040
that happened because there was a

961
00:40:48,390 --> 00:40:52,410
rollback in a network upgrade that we

962
00:40:50,040 --> 00:40:54,300
were not aware of so it is very

963
00:40:52,410 --> 00:40:55,920
important to also look outside the

964
00:40:54,300 --> 00:40:58,230
department we thought it was a problem

965
00:40:55,920 --> 00:40:59,880
on our end and we probably spent weeks

966
00:40:58,230 --> 00:41:01,710
figuring it out but that was a big

967
00:40:59,880 --> 00:41:03,570
challenge well I would say another one

968
00:41:01,710 --> 00:41:05,190
is once again we didn't have any network

969
00:41:03,570 --> 00:41:07,050
level monitoring over the research

970
00:41:05,190 --> 00:41:09,780
network so we really didn't know what

971
00:41:07,050 --> 00:41:12,060
the traffic was so trying to decide what

972
00:41:09,780 --> 00:41:14,790
security policy is to implement and like

973
00:41:12,060 --> 00:41:16,620
what to look for was kind of a process

974
00:41:14,790 --> 00:41:19,320
because we just really didn't have any

975
00:41:16,620 --> 00:41:21,000
knowledge of like where to start so I

976
00:41:19,320 --> 00:41:25,230
think that was another big challenge and

977
00:41:21,000 --> 00:41:27,570
it's continuing to be an ongoing one and

978
00:41:25,230 --> 00:41:31,710
one less challenges definitely managing

979
00:41:27,570 --> 00:41:33,390
alerts is so just to give some

980
00:41:31,710 --> 00:41:37,290
perspective when Lauren was first

981
00:41:33,390 --> 00:41:39,690
working on alerts she did not so we

982
00:41:37,290 --> 00:41:41,790
talked about specificity is key well

983
00:41:39,690 --> 00:41:45,230
that is there for a reason because

984
00:41:41,790 --> 00:41:47,430
Lauren was not specific enough and I

985
00:41:45,230 --> 00:41:50,430
went to sleep and I woke up and

986
00:41:47,430 --> 00:41:53,370
overnight it had sent about 60 to 70

987
00:41:50,430 --> 00:41:57,000
alerts to my email on the mailing list

988
00:41:53,370 --> 00:41:58,920
that we have so it was just insanity

989
00:41:57,000 --> 00:42:01,590
trying to man it's just my inbox at that

990
00:41:58,920 --> 00:42:03,450
point so we have been fine-tuning the

991
00:42:01,590 --> 00:42:05,520
system over a long period of time to

992
00:42:03,450 --> 00:42:07,620
actually get to a point where only the

993
00:42:05,520 --> 00:42:09,300
important stuff is important shown what

994
00:42:07,620 --> 00:42:11,100
was fun that week what that week it

995
00:42:09,300 --> 00:42:13,560
happened over the weekend and the server

996
00:42:11,100 --> 00:42:15,540
actually filled up so I was kept going

997
00:42:13,560 --> 00:42:16,950
in and trying to disable this and I

998
00:42:15,540 --> 00:42:18,750
couldn't because it wouldn't push my

999
00:42:16,950 --> 00:42:20,368
change because the server was full so it

1000
00:42:18,750 --> 00:42:23,849
just kept going all weekend it was great

1001
00:42:20,369 --> 00:42:24,690
yeah and all the former students who

1002
00:42:23,849 --> 00:42:26,249
worked on the project

1003
00:42:24,690 --> 00:42:28,319
unscrew unsubscribe from the mailing

1004
00:42:26,249 --> 00:42:31,259
list which is very funny because and

1005
00:42:28,319 --> 00:42:34,529
they were pretty mad about it but it was

1006
00:42:31,259 --> 00:42:37,279
very funny at that point I guess any

1007
00:42:34,529 --> 00:42:37,279
other questions

1008
00:42:52,190 --> 00:42:58,480
[Applause]

1009
00:43:08,049 --> 00:43:10,109
you

