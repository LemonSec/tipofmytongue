1
00:00:00,219 --> 00:00:07,160
welcome to the serious seminar for March

2
00:00:03,770 --> 00:00:10,850
27th 2019 today we're honored to have

3
00:00:07,160 --> 00:00:14,320
with us professor Wei Zheng who comes to

4
00:00:10,850 --> 00:00:18,740
us from University of missouri-columbia

5
00:00:14,320 --> 00:00:22,640
dr. Jiang is an expert in secure

6
00:00:18,740 --> 00:00:25,220
multi-party computation and particularly

7
00:00:22,640 --> 00:00:27,500
techniques for making this practical in

8
00:00:25,220 --> 00:00:32,028
the real world dating back to his

9
00:00:27,500 --> 00:00:37,970
dissertation which looked at problems in

10
00:00:32,029 --> 00:00:43,760
kind of the real world requirements for

11
00:00:37,970 --> 00:00:46,519
secure multi-party computation to be to

12
00:00:43,760 --> 00:00:51,640
actually be useful and solve real

13
00:00:46,520 --> 00:00:51,640
problems as opposed to some of the

14
00:00:54,480 --> 00:00:58,019
kind of either went overboard on what

15
00:00:56,190 --> 00:01:00,289
people needed for security or didn't go

16
00:00:58,019 --> 00:01:00,289
far enough

17
00:01:01,010 --> 00:01:05,369
professor Sheng has a distinguished

18
00:01:03,719 --> 00:01:06,570
career he's recently joined in was

19
00:01:05,369 --> 00:01:10,229
University of Missouri at Columbia

20
00:01:06,570 --> 00:01:13,020
having spent several years at Missouri

21
00:01:10,229 --> 00:01:15,000
Institute of Science and Technology but

22
00:01:13,020 --> 00:01:18,689
before that he did his undergraduate

23
00:01:15,000 --> 00:01:22,399
work at University of Iowa his graduate

24
00:01:18,689 --> 00:01:26,520
work was done right here at Purdue as a

25
00:01:22,399 --> 00:01:29,130
serious student this is this is where

26
00:01:26,520 --> 00:01:30,899
you could end up he was affiliated was

27
00:01:29,130 --> 00:01:35,610
serious and active and serious when he

28
00:01:30,899 --> 00:01:37,950
was here and so we're really excited and

29
00:01:35,610 --> 00:01:40,740
and pleased to have him back and joining

30
00:01:37,950 --> 00:01:43,709
us so I will turn it over to Wei who

31
00:01:40,740 --> 00:01:45,630
will be talking about some some new

32
00:01:43,709 --> 00:01:51,119
things that are happening that he is

33
00:01:45,630 --> 00:01:52,318
developing in secure computation Thank

34
00:01:51,119 --> 00:01:54,330
You professor good evening for the

35
00:01:52,319 --> 00:01:57,569
introduction and and we're happy to be

36
00:01:54,330 --> 00:01:59,670
home again so I think this is a great

37
00:01:57,569 --> 00:02:02,250
place that had really performed memory

38
00:01:59,670 --> 00:02:03,989
about you know Purdue so it's always

39
00:02:02,250 --> 00:02:06,420
appreciating you know the chance

40
00:02:03,989 --> 00:02:08,009
opportunity to be back to share you know

41
00:02:06,420 --> 00:02:11,519
some of the work you know we are doing

42
00:02:08,008 --> 00:02:14,518
at the moment so so the main topic Anna

43
00:02:11,519 --> 00:02:18,239
be secure multi-party computation in

44
00:02:14,519 --> 00:02:21,480
particular we want to talk about some

45
00:02:18,239 --> 00:02:24,090
the you know how to design you know

46
00:02:21,480 --> 00:02:25,379
motivation you know so here comparison

47
00:02:24,090 --> 00:02:27,510
techniques all right so that's the main

48
00:02:25,379 --> 00:02:30,090
topic if you have any question you can

49
00:02:27,510 --> 00:02:33,269
stop me any moment right and so I can

50
00:02:30,090 --> 00:02:36,030
clarify any question you may have just a

51
00:02:33,269 --> 00:02:37,680
quick question here anyone do you have a

52
00:02:36,030 --> 00:02:42,690
sound background in secure multi-party

53
00:02:37,680 --> 00:02:45,000
computation anyone here I saw right so

54
00:02:42,690 --> 00:02:47,989
if not this okay some of the details in

55
00:02:45,000 --> 00:02:50,220
maybe a little bit too much but

56
00:02:47,989 --> 00:02:52,440
hopefully I can give you some general

57
00:02:50,220 --> 00:02:54,120
idea regarding what is secure

58
00:02:52,440 --> 00:02:57,299
multi-party computation you know what

59
00:02:54,120 --> 00:03:00,629
are the may you know concepts in

60
00:02:57,299 --> 00:03:03,590
definitions underlying you know the SMC

61
00:03:00,629 --> 00:03:06,840
concept okay so so here is the

62
00:03:03,590 --> 00:03:08,520
motivation regarding why I'm doing a

63
00:03:06,840 --> 00:03:11,870
secure comparison

64
00:03:08,520 --> 00:03:16,740
so many organization right they want to

65
00:03:11,870 --> 00:03:18,990
sort data right to cloud for example in

66
00:03:16,740 --> 00:03:20,700
this example here the house care

67
00:03:18,990 --> 00:03:23,550
organization okay I'll source the

68
00:03:20,700 --> 00:03:26,489
metadata to the cloud right then the

69
00:03:23,550 --> 00:03:29,000
cloud can do you know data analytics and

70
00:03:26,490 --> 00:03:33,990
then send the result back you know to

71
00:03:29,000 --> 00:03:36,150
whoever in acquiring the data so but the

72
00:03:33,990 --> 00:03:38,610
problem you know by doing this you know

73
00:03:36,150 --> 00:03:41,610
there are a couple challenges here you

74
00:03:38,610 --> 00:03:44,700
know one the data may contain sensitive

75
00:03:41,610 --> 00:03:48,180
information right so especially for

76
00:03:44,700 --> 00:03:51,060
medical data and then another thing the

77
00:03:48,180 --> 00:03:53,580
cloud cannot be fully you know trusted

78
00:03:51,060 --> 00:03:56,130
right because you know there's some

79
00:03:53,580 --> 00:03:58,440
insider you know threat right so unhappy

80
00:03:56,130 --> 00:04:00,120
employee you know can grab the

81
00:03:58,440 --> 00:04:02,790
encryption key you know got the data in

82
00:04:00,120 --> 00:04:05,160
a Cell to other parties another one

83
00:04:02,790 --> 00:04:09,480
security breach can happen right so they

84
00:04:05,160 --> 00:04:13,350
can the the intruder can get the data so

85
00:04:09,480 --> 00:04:14,850
to violet you know privacy right so so

86
00:04:13,350 --> 00:04:17,790
because this problem you know we need to

87
00:04:14,850 --> 00:04:21,149
you know have a solution that can

88
00:04:17,790 --> 00:04:24,120
protect the sensitivity or the privacy

89
00:04:21,149 --> 00:04:28,560
you know of the medical data or personal

90
00:04:24,120 --> 00:04:29,760
data so how do we protect the privacy so

91
00:04:28,560 --> 00:04:30,660
these are some of the common techniques

92
00:04:29,760 --> 00:04:32,460
out there

93
00:04:30,660 --> 00:04:35,610
I'm not say in common the first one

94
00:04:32,460 --> 00:04:37,440
definitely not common right so the ideal

95
00:04:35,610 --> 00:04:40,440
solution right the IT solutions where

96
00:04:37,440 --> 00:04:43,229
you know we have a trusted third party

97
00:04:40,440 --> 00:04:45,330
right if we trust someone completely and

98
00:04:43,229 --> 00:04:47,159
then the data can send to that

99
00:04:45,330 --> 00:04:49,320
organization that party the party can

100
00:04:47,160 --> 00:04:50,880
analyze it and then get the result that

101
00:04:49,320 --> 00:04:53,159
right this is so called the ideal

102
00:04:50,880 --> 00:04:56,370
solution right why Scott ideal because

103
00:04:53,160 --> 00:04:57,990
under this model you can maximize the

104
00:04:56,370 --> 00:05:01,020
data protection right that's why it's

105
00:04:57,990 --> 00:05:02,910
called the ideal but may not be I mean I

106
00:05:01,020 --> 00:05:04,469
don't think he's proud to go because how

107
00:05:02,910 --> 00:05:07,290
you gonna find someone you know

108
00:05:04,470 --> 00:05:07,800
everybody can trust right so another

109
00:05:07,290 --> 00:05:09,990
solution

110
00:05:07,800 --> 00:05:11,970
kind of like data in a perturbation

111
00:05:09,990 --> 00:05:14,250
technique right you can perturb your

112
00:05:11,970 --> 00:05:16,740
data so that the server you know won't

113
00:05:14,250 --> 00:05:18,390
learn the sensitive information but

114
00:05:16,740 --> 00:05:20,490
maybe the same time some the

115
00:05:18,390 --> 00:05:21,550
esthetically information can still be

116
00:05:20,490 --> 00:05:23,650
preserved

117
00:05:21,550 --> 00:05:26,490
and you know the killall can steer apply

118
00:05:23,650 --> 00:05:28,719
or analyze data you know for the

119
00:05:26,490 --> 00:05:31,360
organization you know who needed results

120
00:05:28,720 --> 00:05:34,300
another technique called the searchable

121
00:05:31,360 --> 00:05:36,849
encryption right so you transform data a

122
00:05:34,300 --> 00:05:39,759
certain way such that the data can still

123
00:05:36,849 --> 00:05:43,479
be searched by the cloud and get you the

124
00:05:39,759 --> 00:05:46,659
result outcome the next one is called a

125
00:05:43,479 --> 00:05:48,039
fully homomorphic encryption so the

126
00:05:46,659 --> 00:05:50,409
basic idea is that you can include the

127
00:05:48,039 --> 00:05:52,378
data and then on top of the incoming

128
00:05:50,409 --> 00:05:55,389
data you can do addition multiplication

129
00:05:52,379 --> 00:05:56,680
without ever decrypting the data so if

130
00:05:55,389 --> 00:05:57,940
we can perform you know these two

131
00:05:56,680 --> 00:06:00,159
operators write addition and

132
00:05:57,940 --> 00:06:02,259
multiplication then you can perform any

133
00:06:00,159 --> 00:06:04,870
operation in the purely based on the

134
00:06:02,259 --> 00:06:07,449
encrypted data right so you I mean the

135
00:06:04,870 --> 00:06:10,449
cloud don't even need to see any the

136
00:06:07,449 --> 00:06:13,120
real data original data so to further to

137
00:06:10,449 --> 00:06:16,569
fully protect the the security of the

138
00:06:13,120 --> 00:06:19,659
data the last one idea here is called a

139
00:06:16,569 --> 00:06:21,699
secure multi-party computation right so

140
00:06:19,659 --> 00:06:24,520
so the goal of the secure multi-party

141
00:06:21,699 --> 00:06:27,099
computation right it's actually you know

142
00:06:24,520 --> 00:06:30,190
to accomplish the same outcome you know

143
00:06:27,099 --> 00:06:33,789
as if you know there were trusted third

144
00:06:30,190 --> 00:06:36,090
party so so basically we can develop you

145
00:06:33,789 --> 00:06:39,509
know SMC secure multi-party computation

146
00:06:36,090 --> 00:06:42,039
protocol to replace you know the need of

147
00:06:39,509 --> 00:06:45,849
trusted third party okay that's the goal

148
00:06:42,039 --> 00:06:50,229
was SMC okay so please you can stop me

149
00:06:45,849 --> 00:06:53,319
anytime if you had any questions so

150
00:06:50,229 --> 00:06:56,409
what's the problem of SMC you know one

151
00:06:53,319 --> 00:07:00,060
problem is the the generic solution is

152
00:06:56,409 --> 00:07:02,800
not very efficient by generic we I mean

153
00:07:00,060 --> 00:07:04,930
the the garbage circular purse so I

154
00:07:02,800 --> 00:07:06,960
mentioned I will point it out a little

155
00:07:04,930 --> 00:07:10,029
bit later do you live ammo data on that

156
00:07:06,960 --> 00:07:13,239
and then the data become the big date

157
00:07:10,029 --> 00:07:15,789
had become even bigger right and so so

158
00:07:13,240 --> 00:07:18,759
the the scalability you know it's become

159
00:07:15,789 --> 00:07:22,080
worse and worse due to the large amount

160
00:07:18,759 --> 00:07:25,479
of data we have another problem is the

161
00:07:22,080 --> 00:07:27,219
you know the SMC requires you know at

162
00:07:25,479 --> 00:07:29,529
least two or three you know independent

163
00:07:27,219 --> 00:07:31,960
servers right sometimes may be hard to

164
00:07:29,529 --> 00:07:34,669
find even one server right so now we

165
00:07:31,960 --> 00:07:36,710
need to find by two or three servers so

166
00:07:34,669 --> 00:07:40,490
you know that become which could become

167
00:07:36,710 --> 00:07:42,859
a challenging problem so so over go here

168
00:07:40,490 --> 00:07:45,680
you know the main problem here is the

169
00:07:42,860 --> 00:07:47,330
efficiency we want to you know somehow

170
00:07:45,680 --> 00:07:49,159
to improve the computation

171
00:07:47,330 --> 00:07:52,188
efficiency right now how do we do that

172
00:07:49,159 --> 00:07:54,349
you know you know many of the you know

173
00:07:52,189 --> 00:07:56,750
data analytical you know tasks you know

174
00:07:54,349 --> 00:07:58,938
based on comparison right so think about

175
00:07:56,750 --> 00:08:01,310
the cane years in april quarries right

176
00:07:58,939 --> 00:08:03,770
the range queries by the you know

177
00:08:01,310 --> 00:08:06,979
similarity computation right so these

178
00:08:03,770 --> 00:08:08,659
are based on comparison operator so so

179
00:08:06,979 --> 00:08:10,580
the efficiency of the comparison the

180
00:08:08,659 --> 00:08:14,090
secure comparison you know can affect

181
00:08:10,580 --> 00:08:17,659
the efficiency of more advanced you know

182
00:08:14,090 --> 00:08:19,159
SMC protocol so so this is the reason if

183
00:08:17,659 --> 00:08:22,099
we can somehow write improve the

184
00:08:19,159 --> 00:08:25,039
efficiency of the comparison and then

185
00:08:22,099 --> 00:08:26,719
hopefully we can increase the efficiency

186
00:08:25,039 --> 00:08:27,469
of you know more advanced protocol right

187
00:08:26,719 --> 00:08:29,389
that's the goal here

188
00:08:27,469 --> 00:08:31,340
so that's one of the reason why we are

189
00:08:29,389 --> 00:08:34,909
looking at the comparison protocol you

190
00:08:31,340 --> 00:08:36,828
know in particular all right so here's a

191
00:08:34,909 --> 00:08:39,289
real contribution over a current work

192
00:08:36,828 --> 00:08:43,519
right so we want to develop in a highly

193
00:08:39,289 --> 00:08:44,959
efficient SMC comparison protocols all

194
00:08:43,519 --> 00:08:46,160
right so what do you mean back in person

195
00:08:44,959 --> 00:08:48,469
right that's easy or you have two

196
00:08:46,160 --> 00:08:51,560
numbers if I say a and B you want to

197
00:08:48,470 --> 00:08:54,050
return you know one means a is greater

198
00:08:51,560 --> 00:08:55,790
than B and 0 otherwise right so there's

199
00:08:54,050 --> 00:09:00,140
a very normal and a standard in a

200
00:08:55,790 --> 00:09:02,329
comparison operator so how do we achieve

201
00:09:00,140 --> 00:09:05,630
the efficiency we need compared to the

202
00:09:02,329 --> 00:09:07,550
existing solution right we can buy in

203
00:09:05,630 --> 00:09:10,790
several you know strategies right the

204
00:09:07,550 --> 00:09:12,319
first one we are using additive you know

205
00:09:10,790 --> 00:09:14,810
super sharing right the traditional

206
00:09:12,320 --> 00:09:16,519
technique they use the Sameer the seeker

207
00:09:14,810 --> 00:09:20,119
sharing or a Sameer signature is based

208
00:09:16,519 --> 00:09:23,300
on the polynomial it's a computationally

209
00:09:20,120 --> 00:09:26,120
intensive so additive session is very

210
00:09:23,300 --> 00:09:27,949
easy and simple to compete with another

211
00:09:26,120 --> 00:09:31,640
idea we use is called the you know

212
00:09:27,949 --> 00:09:33,560
protocol you know a cemetery right so

213
00:09:31,640 --> 00:09:35,420
many of the existing work you know the

214
00:09:33,560 --> 00:09:37,130
protocol is a symmetric among all the

215
00:09:35,420 --> 00:09:37,610
parties every little bit doing the same

216
00:09:37,130 --> 00:09:39,529
thing

217
00:09:37,610 --> 00:09:42,339
based on their here so I will give you

218
00:09:39,529 --> 00:09:45,860
one example a little later another one

219
00:09:42,339 --> 00:09:47,990
another thing you will use is called

220
00:09:45,860 --> 00:09:50,600
making a group switching you know for

221
00:09:47,990 --> 00:09:52,550
different you know sharing sizes so why

222
00:09:50,600 --> 00:09:55,459
we want to switch different groups

223
00:09:52,550 --> 00:09:57,800
the reason being in group of you know

224
00:09:55,459 --> 00:10:00,290
even the value in the group of 0 and 1

225
00:09:57,800 --> 00:10:02,810
so the computation in that group can be

226
00:10:00,290 --> 00:10:05,480
done locally you know between you know

227
00:10:02,810 --> 00:10:07,609
among these parties right so we want to

228
00:10:05,480 --> 00:10:10,730
maximize the computation in the group of

229
00:10:07,610 --> 00:10:13,310
so called Z 2 so Z 2 means you know 0

230
00:10:10,730 --> 00:10:17,120
and the 1 right so again more example

231
00:10:13,310 --> 00:10:21,018
will come so by doing that you know we

232
00:10:17,120 --> 00:10:23,180
are able to decrease the the order of

233
00:10:21,019 --> 00:10:26,959
the complexity you know as well as the

234
00:10:23,180 --> 00:10:29,209
the magnitude of the dominating you know

235
00:10:26,959 --> 00:10:31,099
term coefficient right so we'll share

236
00:10:29,209 --> 00:10:34,010
some the outcome we have you know at the

237
00:10:31,100 --> 00:10:36,560
end the protocol okay so here's the

238
00:10:34,010 --> 00:10:39,079
overview of our design and so this is

239
00:10:36,560 --> 00:10:41,239
the rest of the talk and so I'll give

240
00:10:39,079 --> 00:10:43,819
you some background and then talk about

241
00:10:41,240 --> 00:10:45,980
the design hover over protocol and then

242
00:10:43,820 --> 00:10:48,950
I will highlight some of the future or

243
00:10:45,980 --> 00:10:51,800
in the research direction so any

244
00:10:48,950 --> 00:11:07,339
question you have so far oh can you hear

245
00:10:51,800 --> 00:11:09,709
me well so I'm reducing like the odor of

246
00:11:07,339 --> 00:11:13,579
the complexity like odor and means like

247
00:11:09,709 --> 00:11:16,670
you know from you know and cube you know

248
00:11:13,579 --> 00:11:20,269
two likes in power too right that's kind

249
00:11:16,670 --> 00:11:21,829
of reducing the odor coefficient you

250
00:11:20,269 --> 00:11:22,519
know sometimes the under the big

251
00:11:21,829 --> 00:11:25,430
o-notation

252
00:11:22,519 --> 00:11:27,649
they hide the coefficient right like the

253
00:11:25,430 --> 00:11:30,560
you know beagle and some time could be

254
00:11:27,649 --> 00:11:32,750
in a big ol 1000 times then so we reduce

255
00:11:30,560 --> 00:11:34,399
it a thousand by for example could be

256
00:11:32,750 --> 00:11:36,949
you know instead of thousand it can be

257
00:11:34,399 --> 00:11:40,010
hunger so that's what I mean by reducing

258
00:11:36,949 --> 00:11:45,279
the coefficient as well I'm not sure if

259
00:11:40,010 --> 00:11:49,060
I answer so we try to reduce both but

260
00:11:45,279 --> 00:11:49,060
hopefully we got the job done

261
00:11:53,990 --> 00:12:00,030
right and so sometimes groans right so

262
00:11:56,430 --> 00:12:03,719
when we design secure porticoes like you

263
00:12:00,030 --> 00:12:06,089
know under the SMC setting first thing

264
00:12:03,720 --> 00:12:07,620
we have to understand what is the

265
00:12:06,090 --> 00:12:10,320
average remodel

266
00:12:07,620 --> 00:12:12,600
so by Everest remodel we mean the

267
00:12:10,320 --> 00:12:16,170
behavior in the foodie among the

268
00:12:12,600 --> 00:12:19,370
participating parties right so you know

269
00:12:16,170 --> 00:12:22,910
in the ice MC protocol you know oh the

270
00:12:19,370 --> 00:12:25,320
SMC protocol require you know several

271
00:12:22,910 --> 00:12:27,689
participating parties right so they need

272
00:12:25,320 --> 00:12:29,070
to communicate they need to collaborate

273
00:12:27,690 --> 00:12:31,700
to perform you know some of the

274
00:12:29,070 --> 00:12:33,960
computations right so their behavior

275
00:12:31,700 --> 00:12:36,000
directly determines you know what kind

276
00:12:33,960 --> 00:12:38,940
of security guarantee we have so among

277
00:12:36,000 --> 00:12:41,100
all the average remodels the most common

278
00:12:38,940 --> 00:12:43,530
one is called the assignment inside my

279
00:12:41,100 --> 00:12:45,630
honest right what that means that you

280
00:12:43,530 --> 00:12:48,120
know every party who participate in the

281
00:12:45,630 --> 00:12:52,050
computation they follow you know the

282
00:12:48,120 --> 00:12:53,850
steps required by the protocol right so

283
00:12:52,050 --> 00:12:56,099
if I have a secured comparison protocol

284
00:12:53,850 --> 00:12:58,020
the protocol gonna tell you know the

285
00:12:56,100 --> 00:12:59,880
party let's say Addison Bob right so the

286
00:12:58,020 --> 00:13:02,280
the four gonna say Alice you do the

287
00:12:59,880 --> 00:13:03,540
folding computation and then the product

288
00:13:02,280 --> 00:13:06,270
gonna say Bob you do the folding

289
00:13:03,540 --> 00:13:09,449
computation right so if Addison Bob

290
00:13:06,270 --> 00:13:13,079
Simon honest they can follow whatever

291
00:13:09,450 --> 00:13:15,260
the protocol you know informs them to do

292
00:13:13,080 --> 00:13:18,420
okay that's called in a semi honest

293
00:13:15,260 --> 00:13:20,100
another one called the malicious

294
00:13:18,420 --> 00:13:22,620
malicious amines like the party can

295
00:13:20,100 --> 00:13:25,020
behave in any way right so they can

296
00:13:22,620 --> 00:13:28,020
refuse to participate right so if we ask

297
00:13:25,020 --> 00:13:29,910
them okay so to execute my protocol but

298
00:13:28,020 --> 00:13:31,910
they can refuse right I don't want to do

299
00:13:29,910 --> 00:13:35,160
that right so that's a part of the

300
00:13:31,910 --> 00:13:37,020
behavior under the malicious model so

301
00:13:35,160 --> 00:13:39,689
anything so they can behave arbitrarily

302
00:13:37,020 --> 00:13:41,490
to compromise the security right it's

303
00:13:39,690 --> 00:13:43,890
called the malicious averageg model

304
00:13:41,490 --> 00:13:46,380
another one called the covert the cobra

305
00:13:43,890 --> 00:13:48,569
means you know malicious behavior can be

306
00:13:46,380 --> 00:13:51,240
detected right you don't have to prevent

307
00:13:48,570 --> 00:13:53,580
them from happening but you know this

308
00:13:51,240 --> 00:13:55,850
can be protected graeme can be detected

309
00:13:53,580 --> 00:13:58,230
right if you run you know some the

310
00:13:55,850 --> 00:14:02,280
verification verification protocol right

311
00:13:58,230 --> 00:14:04,020
to do that so you probably can tell all

312
00:14:02,280 --> 00:14:05,490
right so the protocol secure under the

313
00:14:04,020 --> 00:14:06,389
same mouse model is generally more

314
00:14:05,490 --> 00:14:09,059
efficient

315
00:14:06,389 --> 00:14:10,860
because you assuming they can behave you

316
00:14:09,059 --> 00:14:12,299
know according to a protocol right so

317
00:14:10,860 --> 00:14:14,699
you had you don't have to prevent them

318
00:14:12,299 --> 00:14:16,470
from you know diverge from the normal

319
00:14:14,699 --> 00:14:17,910
execution of the protocol so the

320
00:14:16,470 --> 00:14:19,679
protocol secure under the malicious

321
00:14:17,910 --> 00:14:22,410
model can be very expensive because you

322
00:14:19,679 --> 00:14:24,629
have to add additional computation to

323
00:14:22,410 --> 00:14:27,749
force them to foster the party to follow

324
00:14:24,629 --> 00:14:29,610
the protocol right so I'm not going you

325
00:14:27,749 --> 00:14:31,889
know give you the details but just some

326
00:14:29,610 --> 00:14:33,660
kind of intuition behind why the

327
00:14:31,889 --> 00:14:41,040
protocols you know can be very efficient

328
00:14:33,660 --> 00:14:43,139
he under the same honest model so to

329
00:14:41,040 --> 00:14:46,439
prove security all right how do we prove

330
00:14:43,139 --> 00:14:49,619
or prove security and for smc protocols

331
00:14:46,439 --> 00:14:52,589
we generally compare the protocol you

332
00:14:49,619 --> 00:14:55,410
developed right to the ideal solution

333
00:14:52,589 --> 00:14:57,389
right about the ideal solution ideal

334
00:14:55,410 --> 00:15:00,149
solution where you know everybody trusts

335
00:14:57,389 --> 00:15:02,069
a party right the trusted third party I

336
00:15:00,149 --> 00:15:03,660
give you the partly the information then

337
00:15:02,069 --> 00:15:05,699
the party can analyze everything for us

338
00:15:03,660 --> 00:15:08,189
right for comparison right the Addison

339
00:15:05,699 --> 00:15:10,738
Bob can give the their number to

340
00:15:08,189 --> 00:15:12,779
atrocity party the party can compare and

341
00:15:10,739 --> 00:15:15,239
then send out compact well it's a bug

342
00:15:12,779 --> 00:15:17,369
right so that's the ideal solution so if

343
00:15:15,239 --> 00:15:20,160
we design a secure comparison protocol

344
00:15:17,369 --> 00:15:23,279
we need to analyze the information

345
00:15:20,160 --> 00:15:25,709
leakage between the two model right so

346
00:15:23,279 --> 00:15:28,439
the real model the ideal model the real

347
00:15:25,709 --> 00:15:30,719
model is the one you know where you

348
00:15:28,439 --> 00:15:32,219
execute your own protocol right you

349
00:15:30,720 --> 00:15:34,980
develop a new protocol you're executing

350
00:15:32,220 --> 00:15:35,429
that so so in this picture here the real

351
00:15:34,980 --> 00:15:37,379
model

352
00:15:35,429 --> 00:15:40,110
everybody is sending the message right

353
00:15:37,379 --> 00:15:43,319
so this message I send required by the

354
00:15:40,110 --> 00:15:44,879
protocol so if we can analyze the

355
00:15:43,319 --> 00:15:47,248
information leakage between these two

356
00:15:44,879 --> 00:15:49,860
model the same and then we say the

357
00:15:47,249 --> 00:15:51,660
protocol you develop is really secure ok

358
00:15:49,860 --> 00:15:53,699
so how do we say they are the same you

359
00:15:51,660 --> 00:15:57,540
know depend on the the computational

360
00:15:53,699 --> 00:15:59,099
model so no one you know you know if

361
00:15:57,540 --> 00:16:00,748
they are computationally

362
00:15:59,100 --> 00:16:03,749
indistinguishable you can say the same

363
00:16:00,749 --> 00:16:05,610
right if the adversary has a limited

364
00:16:03,749 --> 00:16:07,860
computing power right even the heaviest

365
00:16:05,610 --> 00:16:09,959
it doesn't mean they have element can be

366
00:16:07,860 --> 00:16:12,209
empowered and to prove they are the same

367
00:16:09,959 --> 00:16:13,770
you had to say you know there are you

368
00:16:12,209 --> 00:16:16,829
know uniformly you

369
00:16:13,770 --> 00:16:18,630
random right so these two execution they

370
00:16:16,830 --> 00:16:20,520
are purely random so you cannot really

371
00:16:18,630 --> 00:16:24,540
tell different recoveries how many how

372
00:16:20,520 --> 00:16:26,579
much computing power they have so here's

373
00:16:24,540 --> 00:16:28,949
the example you know the dead guy in the

374
00:16:26,580 --> 00:16:30,660
average we cannot tell the information

375
00:16:28,950 --> 00:16:33,180
because between the two and then we say

376
00:16:30,660 --> 00:16:37,170
the vertical under the real model the

377
00:16:33,180 --> 00:16:40,920
one you design is really secure right so

378
00:16:37,170 --> 00:16:42,810
what are the approaches right under SMC

379
00:16:40,920 --> 00:16:45,329
the building blocks and the one the

380
00:16:42,810 --> 00:16:47,369
building block is the the house you know

381
00:16:45,330 --> 00:16:49,710
Cobb Road circuit right so I mentioned

382
00:16:47,370 --> 00:16:52,200
about the comparison isolate the

383
00:16:49,710 --> 00:16:54,990
conversion problem is also the one

384
00:16:52,200 --> 00:16:57,660
introduced by cows you know Famers

385
00:16:54,990 --> 00:17:00,150
bidding there a problem I don't know if

386
00:16:57,660 --> 00:17:02,040
you write that paper and so so the two

387
00:17:00,150 --> 00:17:04,319
millionaires that I won't want to learn

388
00:17:02,040 --> 00:17:05,909
her who is richer but they don't want

389
00:17:04,319 --> 00:17:07,919
each other to know how much money they

390
00:17:05,910 --> 00:17:09,690
have so so that's the kind of like this

391
00:17:07,920 --> 00:17:11,640
here comparison protocol can get a job

392
00:17:09,690 --> 00:17:14,670
done so this is the first classic

393
00:17:11,640 --> 00:17:18,030
example and to motivate the secure

394
00:17:14,670 --> 00:17:21,420
multi-party computation right so in his

395
00:17:18,030 --> 00:17:22,649
paper he suggested you know the garbled

396
00:17:21,420 --> 00:17:26,310
in a circular approach

397
00:17:22,650 --> 00:17:28,380
so this first is so early on I said

398
00:17:26,310 --> 00:17:30,450
about the generic solution you know it's

399
00:17:28,380 --> 00:17:32,550
not very efficient so the copper circuit

400
00:17:30,450 --> 00:17:36,720
is considered to be a generic solution

401
00:17:32,550 --> 00:17:40,500
right so the technique here is that we

402
00:17:36,720 --> 00:17:42,570
know how to evaluate the you know the

403
00:17:40,500 --> 00:17:45,180
end gate or the s or gate you know any

404
00:17:42,570 --> 00:17:47,310
logic gate in a security right if we can

405
00:17:45,180 --> 00:17:48,930
do that we can evaluate a you know

406
00:17:47,310 --> 00:17:51,000
carburetor and you circle I put in

407
00:17:48,930 --> 00:17:53,100
circle security so any polynomial

408
00:17:51,000 --> 00:17:54,840
function can be represented by a boolean

409
00:17:53,100 --> 00:17:56,780
circuit so that's why I can evaluate a

410
00:17:54,840 --> 00:17:59,520
function security right is called the

411
00:17:56,780 --> 00:18:01,649
general solution but the solution is not

412
00:17:59,520 --> 00:18:03,000
very efficient you know still ok

413
00:18:01,650 --> 00:18:04,170
generally speaking right it's not very

414
00:18:03,000 --> 00:18:06,660
efficient but they are efficient for

415
00:18:04,170 --> 00:18:09,240
smaller input size right the smaller

416
00:18:06,660 --> 00:18:11,520
imprecise give you a reasonable size

417
00:18:09,240 --> 00:18:13,590
circuit right you have large data then

418
00:18:11,520 --> 00:18:14,930
the circuit become you know interactive

419
00:18:13,590 --> 00:18:17,820
of the size

420
00:18:14,930 --> 00:18:19,020
another solution called the homomorphic

421
00:18:17,820 --> 00:18:21,330
encryption right this is why is it

422
00:18:19,020 --> 00:18:22,710
different from the food a homomorphic

423
00:18:21,330 --> 00:18:25,360
encryption right I mentioned about the

424
00:18:22,710 --> 00:18:27,970
fully homomorphic but this one is only

425
00:18:25,360 --> 00:18:29,559
you know most times people use additive

426
00:18:27,970 --> 00:18:34,679
you know komamura encryption right bye

427
00:18:29,559 --> 00:18:37,499
baby it's the example yeah but this one

428
00:18:34,679 --> 00:18:41,470
the communication cost is very high

429
00:18:37,499 --> 00:18:43,869
reason being if we want to encrypt one

430
00:18:41,470 --> 00:18:47,950
single bit for example right so one bit

431
00:18:43,869 --> 00:18:51,730
of data you have to use a key size or I

432
00:18:47,950 --> 00:18:53,259
say 2048 bits to ensure the security so

433
00:18:51,730 --> 00:18:55,239
so after the encryption

434
00:18:53,259 --> 00:18:57,309
you're taking the sides become you know

435
00:18:55,239 --> 00:19:00,429
two thousand times more than before

436
00:18:57,309 --> 00:19:01,869
right so clearly you know the you pay

437
00:19:00,429 --> 00:19:04,389
the overhead and there's a kind of too

438
00:19:01,869 --> 00:19:06,639
much depend on the size of the data you

439
00:19:04,389 --> 00:19:08,859
have so another approach called the

440
00:19:06,639 --> 00:19:10,928
secret sharing all right so city of

441
00:19:08,859 --> 00:19:13,629
sharing doesn't have the problem of the

442
00:19:10,929 --> 00:19:16,179
homomorphic encryption you know you can

443
00:19:13,629 --> 00:19:18,248
if the data is one bit you could

444
00:19:16,179 --> 00:19:20,169
generally share with the same size you

445
00:19:18,249 --> 00:19:22,090
know you can generally to run the bits

446
00:19:20,169 --> 00:19:23,919
to represent you know one single bit

447
00:19:22,090 --> 00:19:26,619
right uses the top of the size instead

448
00:19:23,919 --> 00:19:29,049
of you know two thousand times more than

449
00:19:26,619 --> 00:19:31,269
you know the regional data size right

450
00:19:29,049 --> 00:19:33,429
but here the secret sharing has a

451
00:19:31,269 --> 00:19:34,809
problem of you know requiring at least

452
00:19:33,429 --> 00:19:37,029
three parties right you need to have

453
00:19:34,809 --> 00:19:39,340
three party to do all the computation I

454
00:19:37,029 --> 00:19:41,200
can I can mention I will tell you a

455
00:19:39,340 --> 00:19:43,779
little bit more tested a bit later and

456
00:19:41,200 --> 00:19:46,090
then another problem is the neurons of

457
00:19:43,779 --> 00:19:48,429
communication right so if you see your

458
00:19:46,090 --> 00:19:50,799
sharing then most often you have a

459
00:19:48,429 --> 00:19:53,440
number wrong they had to go through to

460
00:19:50,799 --> 00:19:55,658
finish the computation right so many of

461
00:19:53,440 --> 00:19:57,779
the research even for comparison

462
00:19:55,659 --> 00:20:00,519
Protocol secure conversion protocol

463
00:19:57,779 --> 00:20:02,350
currently people look at how do we

464
00:20:00,519 --> 00:20:05,200
design conversion protocol you know with

465
00:20:02,350 --> 00:20:07,988
constant wrong communication right so

466
00:20:05,200 --> 00:20:09,970
the more on we have you know the the

467
00:20:07,989 --> 00:20:11,739
more error sorry the network you know

468
00:20:09,970 --> 00:20:14,320
problem can play into a picture right

469
00:20:11,739 --> 00:20:16,859
you really want to reduce the number of

470
00:20:14,320 --> 00:20:18,789
round of communication right user

471
00:20:16,859 --> 00:20:21,189
establishing communication you know can

472
00:20:18,789 --> 00:20:23,950
be a expensive you know operation as

473
00:20:21,190 --> 00:20:27,009
well okay so so that's why the goal we

474
00:20:23,950 --> 00:20:29,859
have we want to use a seeker sharing and

475
00:20:27,009 --> 00:20:32,109
but without the complexity over the

476
00:20:29,859 --> 00:20:34,299
seeker sharing right so we want to

477
00:20:32,109 --> 00:20:36,460
design something it's a constant wrong

478
00:20:34,299 --> 00:20:38,050
the comparison protocol as a constant

479
00:20:36,460 --> 00:20:39,850
wrong comparison protocol

480
00:20:38,050 --> 00:20:45,879
and the motivation to the easiest

481
00:20:39,850 --> 00:20:47,260
solution write this over go here okay

482
00:20:45,880 --> 00:20:51,730
there's a deeper more information

483
00:20:47,260 --> 00:20:55,570
regarding the seeker sharing schemes the

484
00:20:51,730 --> 00:20:56,920
the schemes we you know we can use you

485
00:20:55,570 --> 00:20:59,679
need to have the folding you know

486
00:20:56,920 --> 00:21:03,430
properties right the first one in the

487
00:20:59,680 --> 00:21:05,980
scheme we can give it a value X right we

488
00:21:03,430 --> 00:21:09,970
can share the value using the scheme for

489
00:21:05,980 --> 00:21:12,400
example given value 10 right so under

490
00:21:09,970 --> 00:21:16,150
the additive seeker sharing anyway II

491
00:21:12,400 --> 00:21:18,880
for the domain size is 100 right so for

492
00:21:16,150 --> 00:21:22,240
example the domain of maybe you know

493
00:21:18,880 --> 00:21:23,860
over ages right in front 0 to 99 I don't

494
00:21:22,240 --> 00:21:25,780
know what's the oldest person anyone

495
00:21:23,860 --> 00:21:29,139
knows who's the oldest wasn't the age

496
00:21:25,780 --> 00:21:31,300
for the oldest person 124 or something

497
00:21:29,140 --> 00:21:32,890
I'd forgotten but you know the range if

498
00:21:31,300 --> 00:21:34,930
I say 200 that's probably enough to

499
00:21:32,890 --> 00:21:38,320
cover everybody right the oldest person

500
00:21:34,930 --> 00:21:40,950
so so if we want to see share the age 10

501
00:21:38,320 --> 00:21:43,689
in the group in a domain of from 0 to

502
00:21:40,950 --> 00:21:45,880
200 for example what should we do we

503
00:21:43,690 --> 00:21:49,300
just initially against like a rounded

504
00:21:45,880 --> 00:21:52,810
number right in the group from 0 to 200

505
00:21:49,300 --> 00:21:58,000
and then you know we can do you know we

506
00:21:52,810 --> 00:21:59,440
can use a 200 minus the 10 I had to make

507
00:21:58,000 --> 00:22:03,130
sure I got everything right so basically

508
00:21:59,440 --> 00:22:05,590
the 10 see you go to you know what's the

509
00:22:03,130 --> 00:22:07,510
first number based like do you want give

510
00:22:05,590 --> 00:22:09,370
me a number so we need to like I run a

511
00:22:07,510 --> 00:22:11,080
number in the GU first right this is the

512
00:22:09,370 --> 00:22:15,250
first secret can you give me a number

513
00:22:11,080 --> 00:22:17,230
okay can you give me a number okay so 10

514
00:22:15,250 --> 00:22:18,850
fives good so we can have 25 is the

515
00:22:17,230 --> 00:22:21,960
first secret right it says randomly

516
00:22:18,850 --> 00:22:24,340
selected and then 25 you know plus

517
00:22:21,960 --> 00:22:27,640
another share we need to have 2 shares

518
00:22:24,340 --> 00:22:31,540
right second share give a mod the group

519
00:22:27,640 --> 00:22:33,460
size now is 201 right give us 10 so now

520
00:22:31,540 --> 00:22:35,409
you can derive what's the value for the

521
00:22:33,460 --> 00:22:37,240
second here all right so that's called

522
00:22:35,410 --> 00:22:39,670
the seeker sharing right used to like

523
00:22:37,240 --> 00:22:42,010
one random value from the group and then

524
00:22:39,670 --> 00:22:45,910
you can derive the second share by using

525
00:22:42,010 --> 00:22:47,770
that folder okay so you sheer alone is

526
00:22:45,910 --> 00:22:49,150
indeed you can the Union formula you

527
00:22:47,770 --> 00:22:51,220
know distributed right so that's why

528
00:22:49,150 --> 00:22:51,730
they are secure so that's the idea so

529
00:22:51,220 --> 00:22:53,799
you need to

530
00:22:51,730 --> 00:22:57,039
something you can share the the value

531
00:22:53,799 --> 00:22:58,389
and you can also need to you know based

532
00:22:57,039 --> 00:23:00,580
on the numbers here you have you can

533
00:22:58,389 --> 00:23:03,279
also review the original values right

534
00:23:00,580 --> 00:23:04,990
that's called the review and you have

535
00:23:03,279 --> 00:23:08,409
the addition addition means you can add

536
00:23:04,990 --> 00:23:11,409
a number together without knowing the

537
00:23:08,409 --> 00:23:14,440
real number right so you have two values

538
00:23:11,409 --> 00:23:16,269
and B right so a and B are shared how

539
00:23:14,440 --> 00:23:20,019
you're gonna produce you know the share

540
00:23:16,269 --> 00:23:21,700
of a plus B right so the the secret

541
00:23:20,019 --> 00:23:24,519
sharing scheme allow you to do the

542
00:23:21,700 --> 00:23:25,840
addition without communicating you know

543
00:23:24,519 --> 00:23:27,610
between the two parties right so you

544
00:23:25,840 --> 00:23:29,949
could the to the shares belong to the

545
00:23:27,610 --> 00:23:32,860
two parties at is about issue one has a

546
00:23:29,950 --> 00:23:35,529
share of you know a and B they can get a

547
00:23:32,860 --> 00:23:38,408
share of a plus B locally by adding

548
00:23:35,529 --> 00:23:40,360
their own share together right so that

549
00:23:38,409 --> 00:23:44,320
can be done locally another one

550
00:23:40,360 --> 00:23:46,779
multiplication by a constant so if you

551
00:23:44,320 --> 00:23:49,168
have let's say Alice Bob again you know

552
00:23:46,779 --> 00:23:51,429
they have you know have a share of a

553
00:23:49,169 --> 00:23:54,519
you're right they don't know the value a

554
00:23:51,429 --> 00:23:56,980
but they have a shares of a right using

555
00:23:54,519 --> 00:23:59,649
the example I gave you early and how do

556
00:23:56,980 --> 00:24:03,190
they compute given a constant value

557
00:23:59,649 --> 00:24:05,620
right mock ally with a okay how to do

558
00:24:03,190 --> 00:24:08,139
that so this can be done you know the

559
00:24:05,620 --> 00:24:10,719
scheme allow us to do that locally okay

560
00:24:08,139 --> 00:24:11,889
so there's no communication here but

561
00:24:10,720 --> 00:24:14,019
they had to share the constant at the

562
00:24:11,889 --> 00:24:15,580
first place if you consider that as a

563
00:24:14,019 --> 00:24:18,940
communication that's fine but most often

564
00:24:15,580 --> 00:24:20,710
this value has already been pre shared

565
00:24:18,940 --> 00:24:23,559
right it's most often they don't come as

566
00:24:20,710 --> 00:24:24,789
a communication so oh this operation can

567
00:24:23,559 --> 00:24:28,110
be done locally you know by the

568
00:24:24,789 --> 00:24:30,820
individual parties what is missing here

569
00:24:28,110 --> 00:24:33,428
right so if we want to solve any

570
00:24:30,820 --> 00:24:35,799
computation right so this operator is

571
00:24:33,429 --> 00:24:39,570
not enough right so which not preacher

572
00:24:35,799 --> 00:24:39,570
is missing from this list here

573
00:24:40,300 --> 00:24:44,899
multiplication right over to share the

574
00:24:42,320 --> 00:24:47,450
values so so here we have addition right

575
00:24:44,900 --> 00:24:49,700
so you have to share value a and B you

576
00:24:47,450 --> 00:24:52,460
can do you can compute the shares of a

577
00:24:49,700 --> 00:24:53,860
plus B right but here this out

578
00:24:52,460 --> 00:24:57,010
you know this scheme doesn't have a

579
00:24:53,860 --> 00:24:59,300
multiplication you know you cannot do

580
00:24:57,010 --> 00:25:02,870
let's say you have shares of a and B you

581
00:24:59,300 --> 00:25:05,000
cannot do cheers of a times B locally

582
00:25:02,870 --> 00:25:06,620
all right so that's why people do you

583
00:25:05,000 --> 00:25:09,170
end up you know different protocols to

584
00:25:06,620 --> 00:25:10,689
enable the multiplication right between

585
00:25:09,170 --> 00:25:12,830
the you know - Cheers

586
00:25:10,690 --> 00:25:14,780
all right so how you do that I mean

587
00:25:12,830 --> 00:25:17,720
there are many there are some classical

588
00:25:14,780 --> 00:25:20,540
papers you know to depend on how the

589
00:25:17,720 --> 00:25:22,700
sheer is constructed right under Samir

590
00:25:20,540 --> 00:25:26,899
you can do one way under the attitude

591
00:25:22,700 --> 00:25:28,820
sharing you do it differently okay so

592
00:25:26,900 --> 00:25:33,590
but we can do that you know with some

593
00:25:28,820 --> 00:25:36,139
kind of communication so one design

594
00:25:33,590 --> 00:25:37,970
issue here to minimize communication we

595
00:25:36,140 --> 00:25:40,670
want to we don't want to use a secure

596
00:25:37,970 --> 00:25:42,560
multiplication right Isum as many you

597
00:25:40,670 --> 00:25:44,390
know we want to reduce that you know as

598
00:25:42,560 --> 00:25:46,550
much as we could you know to hopefully

599
00:25:44,390 --> 00:25:48,050
we can minimize the communication right

600
00:25:46,550 --> 00:25:51,620
so that's that I did one of the design

601
00:25:48,050 --> 00:25:54,379
ideas we have all right so this is the

602
00:25:51,620 --> 00:25:56,479
protocol you know many of the existing

603
00:25:54,380 --> 00:25:59,770
work you know based upon right so this

604
00:25:56,480 --> 00:26:01,940
is the first protocol you know for the

605
00:25:59,770 --> 00:26:04,340
constant wrong there I constantly wrong

606
00:26:01,940 --> 00:26:08,060
secure comparison based on in a secure

607
00:26:04,340 --> 00:26:11,929
sharing designed by Dan guard he's one

608
00:26:08,060 --> 00:26:14,570
well known person in in cryptography in

609
00:26:11,930 --> 00:26:16,130
literature so so what's that I would go

610
00:26:14,570 --> 00:26:18,320
through this one and then I can show you

611
00:26:16,130 --> 00:26:21,620
in over protocol how differing from

612
00:26:18,320 --> 00:26:25,159
their design so in this protocol the

613
00:26:21,620 --> 00:26:27,770
input right the input is the you know to

614
00:26:25,160 --> 00:26:32,000
share the value right we have the a and

615
00:26:27,770 --> 00:26:34,940
B the notation here like a zero P in a

616
00:26:32,000 --> 00:26:37,880
bracket means a zero right this is the

617
00:26:34,940 --> 00:26:40,820
zeroes bit of the input value is the

618
00:26:37,880 --> 00:26:42,920
secret here in the domain defined by P

619
00:26:40,820 --> 00:26:45,100
right so P is a modular right the

620
00:26:42,920 --> 00:26:49,160
example I give you about the age I used

621
00:26:45,100 --> 00:26:52,909
the modulus like to 201 right so here we

622
00:26:49,160 --> 00:26:53,300
is the general you know verbal right

623
00:26:52,910 --> 00:26:56,630
Pete

624
00:26:53,300 --> 00:27:00,350
and then be social you know shear

625
00:26:56,630 --> 00:27:01,520
similarly and so the output is they see

626
00:27:00,350 --> 00:27:03,590
the bracket

627
00:27:01,520 --> 00:27:06,680
generally speaking the bracket C means

628
00:27:03,590 --> 00:27:09,199
the C is shared the C represent the

629
00:27:06,680 --> 00:27:11,840
regional value the bracket C represent

630
00:27:09,200 --> 00:27:13,970
the share value the P there the

631
00:27:11,840 --> 00:27:17,740
subscript means the group size all right

632
00:27:13,970 --> 00:27:17,740
so we're the value the shear came from

633
00:27:17,960 --> 00:27:24,140
so if we see you to 1 then we can say

634
00:27:20,540 --> 00:27:25,820
you know a you know a secretor than b0

635
00:27:24,140 --> 00:27:28,520
you know otherwise right so this is the

636
00:27:25,820 --> 00:27:30,470
input output right how do we do this

637
00:27:28,520 --> 00:27:31,910
computation right so here the the staff

638
00:27:30,470 --> 00:27:35,090
is in wall

639
00:27:31,910 --> 00:27:39,890
so the so how do we do comparison you

640
00:27:35,090 --> 00:27:42,260
know in general right so think about the

641
00:27:39,890 --> 00:27:45,230
comparison at the bit level right if you

642
00:27:42,260 --> 00:27:47,720
have a two numbers or a and B how can I

643
00:27:45,230 --> 00:27:50,450
tell all right so let's say a is bigger

644
00:27:47,720 --> 00:27:52,010
than B so what's the first step you know

645
00:27:50,450 --> 00:27:54,020
in general don't worry about security

646
00:27:52,010 --> 00:27:57,080
right it's no more about that it says in

647
00:27:54,020 --> 00:27:59,240
general at the beat level right if we

648
00:27:57,080 --> 00:28:05,449
want to compare to a number what kind of

649
00:27:59,240 --> 00:28:07,580
operation you want to do so the first

650
00:28:05,450 --> 00:28:10,730
thing we need to know is the you know

651
00:28:07,580 --> 00:28:12,500
which pit location right so so what one

652
00:28:10,730 --> 00:28:15,410
thing the go there right the you two may

653
00:28:12,500 --> 00:28:17,810
go is that we want to lock it right so

654
00:28:15,410 --> 00:28:20,360
the most significant bit location where

655
00:28:17,810 --> 00:28:22,909
the two number are differ right so the

656
00:28:20,360 --> 00:28:25,429
remote the first right and in the first

657
00:28:22,910 --> 00:28:27,410
most things and you know signal hasn't

658
00:28:25,430 --> 00:28:29,720
bit location right how do we identify

659
00:28:27,410 --> 00:28:31,790
that to identify that location we need

660
00:28:29,720 --> 00:28:34,100
to do a thorough first right so to

661
00:28:31,790 --> 00:28:36,409
answer the two number and the icer give

662
00:28:34,100 --> 00:28:37,879
us the locations right over to be

663
00:28:36,410 --> 00:28:40,460
different right

664
00:28:37,880 --> 00:28:42,770
now we need to look at verse in the

665
00:28:40,460 --> 00:28:45,170
first location once we got the first

666
00:28:42,770 --> 00:28:48,800
location you know we can go to either A

667
00:28:45,170 --> 00:28:50,990
or B right if we go to a even the a that

668
00:28:48,800 --> 00:28:52,300
location is one the B's one which means

669
00:28:50,990 --> 00:28:55,490
a bigger than B right

670
00:28:52,300 --> 00:28:58,820
does it make sense everyone so if we go

671
00:28:55,490 --> 00:29:00,680
to be right if a B is one you know these

672
00:28:58,820 --> 00:29:02,270
bigger B 0 you know this is smaller

673
00:29:00,680 --> 00:29:04,880
right but you get the point right so the

674
00:29:02,270 --> 00:29:07,609
most important of we you know the most

675
00:29:04,880 --> 00:29:10,129
important information we need to find is

676
00:29:07,609 --> 00:29:14,090
the most significant location where the

677
00:29:10,129 --> 00:29:16,189
two lady differ right so how do we

678
00:29:14,090 --> 00:29:19,129
identify that the first step we need to

679
00:29:16,190 --> 00:29:21,289
compute the XOR operation right that's

680
00:29:19,129 --> 00:29:23,359
our operation again all these aperture

681
00:29:21,289 --> 00:29:24,980
here can be done security I'm not gonna

682
00:29:23,359 --> 00:29:28,178
give you the detail how to do security

683
00:29:24,980 --> 00:29:30,739
because this involves lots of you know

684
00:29:28,179 --> 00:29:32,330
information I don't think we have the

685
00:29:30,739 --> 00:29:33,980
time to discuss that but just assume

686
00:29:32,330 --> 00:29:35,869
right we understand the concept you

687
00:29:33,980 --> 00:29:38,359
don't know the detail you don't need to

688
00:29:35,869 --> 00:29:39,859
understand detail but let's assume the

689
00:29:38,359 --> 00:29:42,980
answer operator here can be done

690
00:29:39,859 --> 00:29:44,899
security right so the first step we

691
00:29:42,980 --> 00:29:48,049
applied the ISO operation and to find

692
00:29:44,899 --> 00:29:49,939
the other locations right where the beta

693
00:29:48,049 --> 00:29:54,109
different right between the two value a

694
00:29:49,940 --> 00:29:55,940
and B so the next location let me show

695
00:29:54,109 --> 00:29:59,029
you the example here right so here we

696
00:29:55,940 --> 00:30:01,730
have an example like the a and B here

697
00:29:59,029 --> 00:30:05,659
right in the binary representation so

698
00:30:01,730 --> 00:30:07,639
after the Dicer operator here I don't

699
00:30:05,659 --> 00:30:10,580
have a pointer to point in you maybe I

700
00:30:07,639 --> 00:30:13,008
can use the my mouse here right so this

701
00:30:10,580 --> 00:30:16,970
line here you know you do i sir than the

702
00:30:13,009 --> 00:30:19,519
e becomes 0 1 0 1 0 again here I show

703
00:30:16,970 --> 00:30:21,259
you the regional value but we execute

704
00:30:19,519 --> 00:30:24,080
the protocol right the parties don't

705
00:30:21,259 --> 00:30:27,139
know the the e value at all all right so

706
00:30:24,080 --> 00:30:30,439
this protocol here is executed by 3

707
00:30:27,139 --> 00:30:33,080
parties right so each party gonna do the

708
00:30:30,440 --> 00:30:34,759
same thing here with the own share right

709
00:30:33,080 --> 00:30:36,470
so each party what I mean by same thing

710
00:30:34,759 --> 00:30:38,659
same means they perform the same

711
00:30:36,470 --> 00:30:41,720
computation but based on their

712
00:30:38,659 --> 00:30:44,179
individual shares right so I have three

713
00:30:41,720 --> 00:30:46,759
parties three party can execute this

714
00:30:44,179 --> 00:30:48,559
answer operation and the input is the

715
00:30:46,759 --> 00:30:52,070
share values right so they don't know

716
00:30:48,559 --> 00:30:54,918
anything about a and B right at the end

717
00:30:52,070 --> 00:30:56,779
what they have is the share of the e

718
00:30:54,919 --> 00:30:57,830
value right again they don't know

719
00:30:56,779 --> 00:31:00,049
anything about ebuddy

720
00:30:57,830 --> 00:31:02,960
they won't know the shears of the e ok

721
00:31:00,049 --> 00:31:06,470
so everything is still secure the next

722
00:31:02,960 --> 00:31:08,379
operation this one is called the pre or

723
00:31:06,470 --> 00:31:12,379
operation right so this operation gonna

724
00:31:08,379 --> 00:31:14,689
produce this value F here right so this

725
00:31:12,379 --> 00:31:19,158
F here you know the first value is zero

726
00:31:14,690 --> 00:31:20,690
so the the first one right for the e so

727
00:31:19,159 --> 00:31:22,730
that's the

728
00:31:20,690 --> 00:31:24,020
the most instant location where the two

729
00:31:22,730 --> 00:31:27,470
value are different right you know we're

730
00:31:24,020 --> 00:31:30,710
in my example here right so after that

731
00:31:27,470 --> 00:31:33,770
location this value F here everything

732
00:31:30,710 --> 00:31:36,530
become one okay so you if you do this

733
00:31:33,770 --> 00:31:38,090
operation right again you know I even or

734
00:31:36,530 --> 00:31:40,240
you know the details about how do you

735
00:31:38,090 --> 00:31:43,070
gonna perform the Supriya or operation

736
00:31:40,240 --> 00:31:44,810
you know security but let's assume we

737
00:31:43,070 --> 00:31:48,350
can do that securely right side the end

738
00:31:44,810 --> 00:31:50,840
this is the value for F then another

739
00:31:48,350 --> 00:31:54,050
thing we're gonna do is this you know G

740
00:31:50,840 --> 00:31:56,419
vector right in this vector the other

741
00:31:54,050 --> 00:32:00,860
value are 0 only one word is 1 right so

742
00:31:56,420 --> 00:32:03,800
that value indicating right so the the

743
00:32:00,860 --> 00:32:05,810
most significant bit location where to

744
00:32:03,800 --> 00:32:07,850
where you are different all right so

745
00:32:05,810 --> 00:32:10,220
this vector is very important when after

746
00:32:07,850 --> 00:32:13,280
we got this vector here the G writer you

747
00:32:10,220 --> 00:32:15,320
can multiply G in which a here trying to

748
00:32:13,280 --> 00:32:17,720
do a multiplication bitwise

749
00:32:15,320 --> 00:32:21,080
multiplication right so once you do the

750
00:32:17,720 --> 00:32:24,140
more occasion you can retrieve I think I

751
00:32:21,080 --> 00:32:25,550
need to update you know this example

752
00:32:24,140 --> 00:32:27,650
here I think I made some changes but

753
00:32:25,550 --> 00:32:30,440
actually this H here you need to have

754
00:32:27,650 --> 00:32:32,960
one here will multiply G right so G

755
00:32:30,440 --> 00:32:36,710
multiplied with a here what you got you

756
00:32:32,960 --> 00:32:38,960
got one right so the this location here

757
00:32:36,710 --> 00:32:41,030
is one then the other location 0 if you

758
00:32:38,960 --> 00:32:43,370
something together you get a value one

759
00:32:41,030 --> 00:32:46,520
right so one indicating in ASA greater

760
00:32:43,370 --> 00:32:48,860
than B right so that's the idea does it

761
00:32:46,520 --> 00:32:51,740
make sense I know I'm kind of ignoring

762
00:32:48,860 --> 00:32:54,379
lots of details but I'd like to give you

763
00:32:51,740 --> 00:32:56,150
some high level you know understanding

764
00:32:54,380 --> 00:32:58,940
about this protocol here again this is a

765
00:32:56,150 --> 00:33:00,620
type over here I made some changes to my

766
00:32:58,940 --> 00:33:02,840
example so if I didn't update this value

767
00:33:00,620 --> 00:33:04,939
H here this edge here the second

768
00:33:02,840 --> 00:33:09,260
location here need to be 1 instead of 0

769
00:33:04,940 --> 00:33:11,090
so should be 0 1 0 0 ok and then if you

770
00:33:09,260 --> 00:33:14,990
combine all the shears together then you

771
00:33:11,090 --> 00:33:17,090
should get one right again here at this

772
00:33:14,990 --> 00:33:20,150
moment right everything is a bit why

773
00:33:17,090 --> 00:33:21,679
shared right to finish the competition

774
00:33:20,150 --> 00:33:25,100
you want to make sure you won't have one

775
00:33:21,680 --> 00:33:26,660
share for the whole number H so this is

776
00:33:25,100 --> 00:33:29,719
what you got here you won't have one

777
00:33:26,660 --> 00:33:31,840
share for the value for H ok so this

778
00:33:29,720 --> 00:33:33,490
year you know over example here is one

779
00:33:31,840 --> 00:33:38,010
meaning a

780
00:33:33,490 --> 00:33:41,650
greater than B so I would go to be

781
00:33:38,010 --> 00:33:43,840
faster so so let me talk about our

782
00:33:41,650 --> 00:33:46,660
design so you saw this one right so this

783
00:33:43,840 --> 00:33:48,939
one is executed by every party so that's

784
00:33:46,660 --> 00:33:50,590
why I mentioned at the beginning the

785
00:33:48,940 --> 00:33:53,650
protocol the existing protocol a

786
00:33:50,590 --> 00:33:55,540
symmetric right because everybody doing

787
00:33:53,650 --> 00:33:56,890
the same thing based on their own share

788
00:33:55,540 --> 00:33:59,530
the only thing different is their own

789
00:33:56,890 --> 00:34:01,510
share all right so we're gonna break

790
00:33:59,530 --> 00:34:03,720
this you know symmetry you know to

791
00:34:01,510 --> 00:34:06,370
improve the efficiency of the protocol

792
00:34:03,720 --> 00:34:08,260
right so here's the over design the

793
00:34:06,370 --> 00:34:10,149
protocol or review so what do we want to

794
00:34:08,260 --> 00:34:14,460
achieve so the protocol allows a group

795
00:34:10,149 --> 00:34:19,000
of three parties in p1 p2 p3 to securely

796
00:34:14,460 --> 00:34:22,270
compare two numbers a and B owned by you

797
00:34:19,000 --> 00:34:24,159
know p1 p2 ok I'm not assuming the value

798
00:34:22,270 --> 00:34:25,719
are shared among a three party the only

799
00:34:24,159 --> 00:34:28,060
two parties shared I mean has the

800
00:34:25,719 --> 00:34:30,609
private value a and B and they want to

801
00:34:28,060 --> 00:34:32,918
compare in which ones bigger so the the

802
00:34:30,610 --> 00:34:34,960
party number 3 here just to facilitate

803
00:34:32,918 --> 00:34:37,359
you know the computation the secure

804
00:34:34,960 --> 00:34:40,470
computation right but they he or she

805
00:34:37,360 --> 00:34:43,169
doesn't hold anything about in a and B

806
00:34:40,469 --> 00:34:47,529
so the the protocol going to return 1

807
00:34:43,168 --> 00:34:50,109
you know if you know p2 p1 p2 you know

808
00:34:47,530 --> 00:34:53,580
if a Christian B so this is the outcome

809
00:34:50,109 --> 00:34:56,080
for protocol here

810
00:34:53,580 --> 00:34:59,109
another important thing we did is called

811
00:34:56,080 --> 00:35:01,330
the problem transformation right so we

812
00:34:59,109 --> 00:35:03,009
transform comparison to a summation

813
00:35:01,330 --> 00:35:05,710
problem you know we are not compare them

814
00:35:03,010 --> 00:35:08,350
directly so we use the summation we

815
00:35:05,710 --> 00:35:10,780
compare the sum of the the B's you know

816
00:35:08,350 --> 00:35:12,368
to make it as a the same outcome as the

817
00:35:10,780 --> 00:35:15,119
comparison so I can show you you know

818
00:35:12,369 --> 00:35:18,040
what's the problem transformation we had

819
00:35:15,119 --> 00:35:20,710
the first one given two integers right a

820
00:35:18,040 --> 00:35:23,470
and B here you know this Albert in a

821
00:35:20,710 --> 00:35:26,560
domain size we compute the alpha alpha

822
00:35:23,470 --> 00:35:29,640
is 2 times a plus 1 and then we compute

823
00:35:26,560 --> 00:35:34,060
the data or a beta is 2 times B here and

824
00:35:29,640 --> 00:35:36,910
I denote the the most significant bit

825
00:35:34,060 --> 00:35:40,299
location when we're a I in alpha I

826
00:35:36,910 --> 00:35:41,680
naught equal to R 2 beta I right again

827
00:35:40,300 --> 00:35:43,540
that's the location we need to locate

828
00:35:41,680 --> 00:35:46,779
right if we want to compare which number

829
00:35:43,540 --> 00:35:49,360
is bigger or smaller and this edge here

830
00:35:46,780 --> 00:35:53,080
it's an L plus one bit you know binary

831
00:35:49,360 --> 00:35:56,110
vector we're you know a CI is equal to 1

832
00:35:53,080 --> 00:35:58,569
and SJ equal to 0 and I fold the other

833
00:35:56,110 --> 00:36:01,330
location right only one locations 1 for

834
00:35:58,570 --> 00:36:04,810
this issue vector remember the issue a

835
00:36:01,330 --> 00:36:06,310
to recompute here so at the end we had

836
00:36:04,810 --> 00:36:15,790
an issue actor here that's the same

837
00:36:06,310 --> 00:36:18,430
thing okay so additionally we define a

838
00:36:15,790 --> 00:36:20,920
couple you know values here and so this

839
00:36:18,430 --> 00:36:26,850
this is the summation we have the ice

840
00:36:20,920 --> 00:36:29,980
alpha so I serve for Ghana some the

841
00:36:26,850 --> 00:36:33,009
individual bits of the value alpha right

842
00:36:29,980 --> 00:36:35,230
so we had the Alpha and so the ice RF is

843
00:36:33,010 --> 00:36:38,620
the summation basically the number of

844
00:36:35,230 --> 00:36:42,550
bits you know set in number represented

845
00:36:38,620 --> 00:36:45,250
by alpha right another one SR for prime

846
00:36:42,550 --> 00:36:46,900
so this one is said to be different

847
00:36:45,250 --> 00:36:50,740
right so this one is equal to you know

848
00:36:46,900 --> 00:36:54,370
issue I know is H J right exchange - you

849
00:36:50,740 --> 00:36:57,729
know alpha J mod - so what this one

850
00:36:54,370 --> 00:37:00,700
gives us remember what's H right H only

851
00:36:57,730 --> 00:37:05,770
one location for H has the bit 1 right

852
00:37:00,700 --> 00:37:08,439
oh the other 0 so the 0 - you know a a a

853
00:37:05,770 --> 00:37:12,100
j ma - you know doesn't change anything

854
00:37:08,440 --> 00:37:15,130
to AJ okay so 0 minus 1 give you minus 1

855
00:37:12,100 --> 00:37:17,890
in the group of you know Z - under that

856
00:37:15,130 --> 00:37:19,660
group you still got one back right so 0

857
00:37:17,890 --> 00:37:24,040
minus anything give you the same value

858
00:37:19,660 --> 00:37:26,589
back right is 0-1 give you 1 0-0 give

859
00:37:24,040 --> 00:37:28,779
you 0 ok so this is the reason we use

860
00:37:26,590 --> 00:37:31,090
the group - you know to do this kind of

861
00:37:28,780 --> 00:37:34,600
computation so what you have here is

862
00:37:31,090 --> 00:37:39,280
that you know SR for prime is also a

863
00:37:34,600 --> 00:37:41,740
summation over the set of bits after you

864
00:37:39,280 --> 00:37:44,500
perform this issue hej you know - you

865
00:37:41,740 --> 00:37:46,689
know alpha by 4 J I cannot give you even

866
00:37:44,500 --> 00:37:48,640
more information here so here is over

867
00:37:46,690 --> 00:37:52,000
key observation right so we define the

868
00:37:48,640 --> 00:37:56,109
value in 1/2 here so f is equal to you

869
00:37:52,000 --> 00:37:59,050
know Arthur s r4 + sr 4 minus alpha

870
00:37:56,110 --> 00:38:00,410
prime plus 1 divided by 2 so if we

871
00:37:59,050 --> 00:38:03,440
define this way the

872
00:38:00,410 --> 00:38:07,009
F equal to 1/u indicating you know a is

873
00:38:03,440 --> 00:38:09,829
greater than or equal to B all right and

874
00:38:07,009 --> 00:38:11,589
if F is a zero then you know it gonna be

875
00:38:09,829 --> 00:38:14,420
less than B all right so this is over

876
00:38:11,589 --> 00:38:16,609
problem transformation so we can form

877
00:38:14,420 --> 00:38:18,859
the comparison to discount like the

878
00:38:16,609 --> 00:38:21,288
summation problem right the SR flaw I

879
00:38:18,859 --> 00:38:23,808
start from prime right so based on these

880
00:38:21,289 --> 00:38:26,390
two value we derive the comparison

881
00:38:23,809 --> 00:38:29,240
outcome alright so here's a why we can

882
00:38:26,390 --> 00:38:32,500
do that for example according to the

883
00:38:29,240 --> 00:38:36,950
definition for H and the modulo 2

884
00:38:32,500 --> 00:38:40,759
operation right is the HDI minus AI mod

885
00:38:36,950 --> 00:38:43,848
2 C go to 1 minus AI remember the issue

886
00:38:40,759 --> 00:38:45,920
is the only location has beat 1 right so

887
00:38:43,849 --> 00:38:48,200
if we do this operation then that's what

888
00:38:45,920 --> 00:38:51,769
you got the other operation like the

889
00:38:48,200 --> 00:38:54,019
other location SJ minus AJ mod to kill

890
00:38:51,769 --> 00:38:56,750
AJ it doesn't matter what the value for

891
00:38:54,019 --> 00:39:00,890
AJ right so what that means that only

892
00:38:56,750 --> 00:39:02,869
one bit of alpha got changed right so if

893
00:39:00,890 --> 00:39:05,299
that be this one you change that to 0

894
00:39:02,869 --> 00:39:08,750
right if that be this 0 at the beginning

895
00:39:05,299 --> 00:39:11,569
is just into one makes sense so so the

896
00:39:08,750 --> 00:39:14,380
difference between this is an SR for SAR

897
00:39:11,569 --> 00:39:19,069
for prime is by one bit

898
00:39:14,380 --> 00:39:22,880
right so so if s are 4 and the the ice

899
00:39:19,069 --> 00:39:25,549
location has the one bit already you

900
00:39:22,880 --> 00:39:30,950
know this this subtraction here give you

901
00:39:25,549 --> 00:39:33,288
one okay so which means when our for I

902
00:39:30,950 --> 00:39:35,450
equal to 1 right this is implying where

903
00:39:33,289 --> 00:39:39,200
the Arfa is Kristin I mean a is greater

904
00:39:35,450 --> 00:39:41,029
than B right because the ice location is

905
00:39:39,200 --> 00:39:43,939
the most significant bit location where

906
00:39:41,029 --> 00:39:45,680
a and B are different right so that's

907
00:39:43,940 --> 00:39:49,009
the most intimate location right even

908
00:39:45,680 --> 00:39:51,019
that location for a is 1 clearly a

909
00:39:49,009 --> 00:39:54,559
secretion be right so this is the

910
00:39:51,019 --> 00:39:57,558
reservation we have so on the other hand

911
00:39:54,559 --> 00:40:00,529
right if AR is equal to 0 then s are 4

912
00:39:57,559 --> 00:40:03,099
minus alpha prime give us minus 1 right

913
00:40:00,529 --> 00:40:06,740
so this is the reason why here we add a

914
00:40:03,099 --> 00:40:10,910
plus 1 here right to make sure this

915
00:40:06,740 --> 00:40:12,379
number is either 0 you know a 1 all

916
00:40:10,910 --> 00:40:14,118
right B at all come you know we want to

917
00:40:12,380 --> 00:40:18,140
preserve is 0 and 1 right so

918
00:40:14,119 --> 00:40:20,299
indicating greater than no echo to write

919
00:40:18,140 --> 00:40:22,129
zero indicating you know less than right

920
00:40:20,299 --> 00:40:24,470
so these are the two values we want to

921
00:40:22,130 --> 00:40:26,140
preserve so we don't have any native

922
00:40:24,470 --> 00:40:29,629
ready we cannot represent native values

923
00:40:26,140 --> 00:40:33,019
you know in the end the co-chairing

924
00:40:29,630 --> 00:40:36,859
schemes so this is the transformation we

925
00:40:33,019 --> 00:40:38,598
have so another you know here are just

926
00:40:36,859 --> 00:40:41,660
highlighting you know a few design

927
00:40:38,599 --> 00:40:44,029
principles we have you know another one

928
00:40:41,660 --> 00:40:46,098
the Dicer operation again we need to

929
00:40:44,029 --> 00:40:48,920
perform the icer operation right as I

930
00:40:46,099 --> 00:40:51,259
show you from the existing in protocol

931
00:40:48,920 --> 00:40:53,569
right but the Esser operation can be

932
00:40:51,259 --> 00:40:55,579
done locally you don't need any

933
00:40:53,569 --> 00:40:57,259
communication between the parties right

934
00:40:55,579 --> 00:40:59,539
so this is we can mean by the

935
00:40:57,259 --> 00:41:02,839
communication by you know using the

936
00:40:59,539 --> 00:41:05,299
shear in z2 instead of share of ZP you

937
00:41:02,839 --> 00:41:07,369
know other you know other group right if

938
00:41:05,299 --> 00:41:09,380
we use here other group then we had to

939
00:41:07,369 --> 00:41:12,859
communicate amount of parties right we

940
00:41:09,380 --> 00:41:15,170
will increase the capacity another thing

941
00:41:12,859 --> 00:41:19,069
we want to dynamically switch groups

942
00:41:15,170 --> 00:41:21,499
between you know Z 2 and Z n right so to

943
00:41:19,069 --> 00:41:23,119
minimize to maximize computation in Z 2

944
00:41:21,499 --> 00:41:25,308
where everything can be done in Z 2

945
00:41:23,119 --> 00:41:28,549
there's no communication required right

946
00:41:25,309 --> 00:41:30,710
so this is the observation without so

947
00:41:28,549 --> 00:41:31,910
group switching is done obviously right

948
00:41:30,710 --> 00:41:33,440
you had to be careful you don't want to

949
00:41:31,910 --> 00:41:36,549
leak any information we need to swish it

950
00:41:33,440 --> 00:41:40,039
boobs you know super randomizations and

951
00:41:36,549 --> 00:41:42,230
also I just show you a moment and go

952
00:41:40,039 --> 00:41:44,239
right transforming the comparison to the

953
00:41:42,230 --> 00:41:46,400
summation problem right so these are the

954
00:41:44,239 --> 00:41:51,220
techniques we can buy you know to design

955
00:41:46,400 --> 00:41:51,220
you know much more efficient solution ok

956
00:41:53,170 --> 00:41:58,509
so here the high level in a summary of

957
00:42:12,339 --> 00:42:18,259
no you don't you don't know so we had to

958
00:42:16,130 --> 00:42:19,759
hide the the I the I so location right

959
00:42:18,259 --> 00:42:21,619
how do we hide that so that's part of

960
00:42:19,759 --> 00:42:23,359
the protocol right so we need to design

961
00:42:21,619 --> 00:42:25,190
in a way that we can hide the ice

962
00:42:23,359 --> 00:42:28,299
location they're going to show you where

963
00:42:25,190 --> 00:42:28,299
to hide that's a nice location

964
00:42:28,480 --> 00:42:41,450
you cannot tell anything you don't know

965
00:42:39,680 --> 00:42:48,500
the location where they differ at the

966
00:42:41,450 --> 00:42:50,509
beach you know all right so the steps

967
00:42:48,500 --> 00:42:52,310
these are the main steps we have right

968
00:42:50,510 --> 00:42:54,710
the first thing we had to do input

969
00:42:52,310 --> 00:42:57,920
transformation all right so I show you

970
00:42:54,710 --> 00:42:59,960
you know the 2 times a plus 1 right then

971
00:42:57,920 --> 00:43:02,420
2 times B the reason being we don't want

972
00:42:59,960 --> 00:43:04,339
to have equality if we do how you call

973
00:43:02,420 --> 00:43:06,320
it the beauty to our product gonna leak

974
00:43:04,339 --> 00:43:08,328
some information right so this is one

975
00:43:06,320 --> 00:43:12,410
thing we had to avoid that's why we do

976
00:43:08,329 --> 00:43:14,210
that and then we're gonna do compute the

977
00:43:12,410 --> 00:43:17,240
bit Y difference this is the are per se

978
00:43:14,210 --> 00:43:20,359
operator we need to you know this

979
00:43:17,240 --> 00:43:22,009
combination need to be done and then the

980
00:43:20,359 --> 00:43:26,060
next step we're gonna locate the most

981
00:43:22,010 --> 00:43:29,180
innocent bit difference then we're going

982
00:43:26,060 --> 00:43:30,230
to derive the SR for prime and at the

983
00:43:29,180 --> 00:43:32,270
end we're gonna do a shear

984
00:43:30,230 --> 00:43:37,160
transformation so these are the key

985
00:43:32,270 --> 00:43:41,300
steps we have so so now I'm gonna go

986
00:43:37,160 --> 00:43:43,310
through the steps quickly here so now

987
00:43:41,300 --> 00:43:46,700
you can see right the computation here

988
00:43:43,310 --> 00:43:49,040
is not symmetric all right so the p1 can

989
00:43:46,700 --> 00:43:51,680
do some computation very different than

990
00:43:49,040 --> 00:43:53,270
the competition done by p2 and then you

991
00:43:51,680 --> 00:43:54,589
know p3 right the old performing

992
00:43:53,270 --> 00:43:56,359
different computation instead of

993
00:43:54,589 --> 00:43:57,290
everybody doing the same thing as I

994
00:43:56,359 --> 00:44:00,710
showed you previously

995
00:43:57,290 --> 00:44:03,020
okay so here the p1 you know transformed

996
00:44:00,710 --> 00:44:06,020
you know he's a local value I starting

997
00:44:03,020 --> 00:44:09,290
with the again using the previous value

998
00:44:06,020 --> 00:44:11,180
a AC go 215 BC go to 5 I'm using the

999
00:44:09,290 --> 00:44:12,560
same example so after you do the

1000
00:44:11,180 --> 00:44:15,348
transformation right this is the value

1001
00:44:12,560 --> 00:44:17,960
you got for alpha right based on the you

1002
00:44:15,349 --> 00:44:20,300
know a and B we have and then you

1003
00:44:17,960 --> 00:44:21,920
compute the I sofa and again I service

1004
00:44:20,300 --> 00:44:25,400
you know the number of bits had been

1005
00:44:21,920 --> 00:44:27,859
said in in our Father okay so you have

1006
00:44:25,400 --> 00:44:31,160
five B's here ice one Danny you got one

1007
00:44:27,859 --> 00:44:33,230
you got five here so and the rest of

1008
00:44:31,160 --> 00:44:36,290
number are the random values you need to

1009
00:44:33,230 --> 00:44:38,599
use to will do the group switching you

1010
00:44:36,290 --> 00:44:41,029
need to mask right the the real values

1011
00:44:38,599 --> 00:44:43,029
so these are the values cancer

1012
00:44:41,029 --> 00:44:46,999
as a mosque and to hide the information

1013
00:44:43,029 --> 00:44:48,979
that could be leaked by communicating

1014
00:44:46,999 --> 00:44:50,988
among the parties so I'm not going into

1015
00:44:48,979 --> 00:44:52,848
detail here but I just show you what is

1016
00:44:50,989 --> 00:44:56,539
the purpose of it is to randomize values

1017
00:44:52,849 --> 00:44:58,640
here for the P to again do impose

1018
00:44:56,539 --> 00:45:01,099
transformation right top of the input

1019
00:44:58,640 --> 00:45:03,618
and then generate the ship shares right

1020
00:45:01,099 --> 00:45:06,890
so these are the shares of you know

1021
00:45:03,619 --> 00:45:09,589
value data in the group of you know z2

1022
00:45:06,890 --> 00:45:11,509
right so everything here you know in the

1023
00:45:09,589 --> 00:45:15,319
group of his ear and once so to minimize

1024
00:45:11,509 --> 00:45:16,849
the communication complexity so step

1025
00:45:15,319 --> 00:45:19,058
number three here now they cannot doing

1026
00:45:16,849 --> 00:45:21,859
the the nicer operation now you remember

1027
00:45:19,059 --> 00:45:25,309
the the first really important operation

1028
00:45:21,859 --> 00:45:27,169
is a sir right to compute the you know

1029
00:45:25,309 --> 00:45:29,959
to find out the locations where the

1030
00:45:27,169 --> 00:45:32,118
beasts are different so so here you're

1031
00:45:29,959 --> 00:45:33,828
gonna find a ye so this is done locally

1032
00:45:32,119 --> 00:45:37,219
that's why I had the notation here the

1033
00:45:33,829 --> 00:45:39,169
PJ here right PJ means either party one

1034
00:45:37,219 --> 00:45:41,449
or two right they do the same thing here

1035
00:45:39,169 --> 00:45:44,049
we said based on their own local shares

1036
00:45:41,449 --> 00:45:49,099
all right so no communication whatsoever

1037
00:45:44,049 --> 00:45:51,499
and then this one here the the be here

1038
00:45:49,099 --> 00:45:54,909
is the randomization you're randomizing

1039
00:45:51,499 --> 00:46:00,259
so you use the RI RI is this one bit

1040
00:45:54,909 --> 00:46:02,839
okay so you're randomizing the the value

1041
00:46:00,259 --> 00:46:05,479
here so that you know the party number

1042
00:46:02,839 --> 00:46:06,619
three when look at the e he won't be

1043
00:46:05,479 --> 00:46:09,948
able to tell right we should eat

1044
00:46:06,619 --> 00:46:11,900
location a and B are different right so

1045
00:46:09,949 --> 00:46:14,359
we'll look at number three here number

1046
00:46:11,900 --> 00:46:17,569
three here you know pics we need to

1047
00:46:14,359 --> 00:46:19,609
reconstruct the the real value of e here

1048
00:46:17,569 --> 00:46:22,219
not the real value but need to

1049
00:46:19,609 --> 00:46:24,799
reconstruct the a randomized right had

1050
00:46:22,219 --> 00:46:27,469
been mask the e here so if we don't have

1051
00:46:24,799 --> 00:46:29,989
a step B here then the e will be leaked

1052
00:46:27,469 --> 00:46:32,989
to to p3 right that's something we don't

1053
00:46:29,989 --> 00:46:35,919
want and then so here's the group

1054
00:46:32,989 --> 00:46:38,809
switching part right so now the shears

1055
00:46:35,919 --> 00:46:41,868
you know the p3 kind of generate here in

1056
00:46:38,809 --> 00:46:44,599
group of Z and two right so this is

1057
00:46:41,869 --> 00:46:48,289
another group we use no longer in you

1058
00:46:44,599 --> 00:46:50,569
know Z 2 here so because the subsequent

1059
00:46:48,289 --> 00:46:52,279
computation require a bigger you know

1060
00:46:50,569 --> 00:46:54,799
share size we can no longer use the

1061
00:46:52,279 --> 00:46:58,549
smaller size at the beginning

1062
00:46:54,799 --> 00:47:00,890
to compute the answer so so here but if

1063
00:46:58,549 --> 00:47:04,279
we don't do the the masa here at the

1064
00:47:00,890 --> 00:47:05,959
step three be here the piece we're going

1065
00:47:04,279 --> 00:47:08,299
to learn right so the number of

1066
00:47:05,959 --> 00:47:10,910
locations and be differ right a bit

1067
00:47:08,299 --> 00:47:14,259
locations so you generally share and

1068
00:47:10,910 --> 00:47:18,199
then send back to the party p1 p2 and

1069
00:47:14,259 --> 00:47:20,959
then the p1 p2 here and so J is the

1070
00:47:18,199 --> 00:47:24,229
index for you know p1 p2 so P and we do

1071
00:47:20,959 --> 00:47:26,448
gonna do the same thing here by you know

1072
00:47:24,229 --> 00:47:28,729
read randomize the value right remember

1073
00:47:26,449 --> 00:47:31,069
the the e vector has been randomized at

1074
00:47:28,729 --> 00:47:32,899
beginning right because sending to p3 so

1075
00:47:31,069 --> 00:47:35,599
when the new here

1076
00:47:32,900 --> 00:47:38,390
you know new share came back from p3

1077
00:47:35,599 --> 00:47:40,279
then the p1 p2 cannot read you know D

1078
00:47:38,390 --> 00:47:41,839
randomized the value to get the real you

1079
00:47:40,279 --> 00:47:44,630
know you want back you know you better

1080
00:47:41,839 --> 00:47:47,269
back so here's the e vector here and

1081
00:47:44,630 --> 00:47:51,259
then I think my time is kind of running

1082
00:47:47,269 --> 00:47:52,368
out so I would go live it quicker so you

1083
00:47:51,259 --> 00:47:55,699
had the e vector here

1084
00:47:52,369 --> 00:47:58,459
and then we're gonna compute this gamma

1085
00:47:55,699 --> 00:48:01,789
better right so the rest of step is

1086
00:47:58,459 --> 00:48:04,219
allow us to generate the vector u here

1087
00:48:01,789 --> 00:48:06,769
write this vector u here you can look at

1088
00:48:04,219 --> 00:48:10,279
one location zero right so that location

1089
00:48:06,769 --> 00:48:12,919
there corresponding to you know the most

1090
00:48:10,279 --> 00:48:15,039
significant bit location between a and B

1091
00:48:12,920 --> 00:48:18,019
you know where they they are different

1092
00:48:15,039 --> 00:48:19,849
okay so the other location like the last

1093
00:48:18,019 --> 00:48:21,589
value here is actually random values

1094
00:48:19,849 --> 00:48:24,679
they are not the same random value I

1095
00:48:21,589 --> 00:48:27,589
just want to use x2 indicating the

1096
00:48:24,679 --> 00:48:28,910
randomize values right so by looking at

1097
00:48:27,589 --> 00:48:31,099
the s value you cannot tell anything

1098
00:48:28,910 --> 00:48:31,729
about you know the the actual value were

1099
00:48:31,099 --> 00:48:33,829
hiding

1100
00:48:31,729 --> 00:48:37,279
so all this computation here are done

1101
00:48:33,829 --> 00:48:38,989
you know obliviously right so the server

1102
00:48:37,279 --> 00:48:40,429
don't know anything about you know

1103
00:48:38,989 --> 00:48:42,349
what's going wrong and your niece the

1104
00:48:40,429 --> 00:48:48,739
shears okay but this is the what

1105
00:48:42,349 --> 00:48:51,140
happened under the shears okay so again

1106
00:48:48,739 --> 00:48:53,869
this is step number five is a sphere

1107
00:48:51,140 --> 00:48:56,598
swishing again and then the step number

1108
00:48:53,869 --> 00:48:58,489
seven we got back the issue vector

1109
00:48:56,599 --> 00:49:02,239
remember the actuator is the one we need

1110
00:48:58,489 --> 00:49:04,579
and to you know to inform the summations

1111
00:49:02,239 --> 00:49:07,910
right see the summations if you remember

1112
00:49:04,579 --> 00:49:08,539
the equation we have we have a hu I -

1113
00:49:07,910 --> 00:49:11,269
you know our

1114
00:49:08,539 --> 00:49:12,619
right HJ and - our frenzy right so this

1115
00:49:11,269 --> 00:49:16,758
is an information we need we need to get

1116
00:49:12,619 --> 00:49:19,579
the extractor so so let me go through

1117
00:49:16,759 --> 00:49:24,679
this you know rather quickly a little

1118
00:49:19,579 --> 00:49:26,809
bit so how do you keep something here so

1119
00:49:24,679 --> 00:49:29,269
I didn't write so this time I'm not here

1120
00:49:26,809 --> 00:49:31,939
we're gonna compute the you know ice

1121
00:49:29,269 --> 00:49:34,669
alpha prime right and so this one is

1122
00:49:31,939 --> 00:49:36,678
equal to four you know based on the you

1123
00:49:34,669 --> 00:49:39,828
know the example we have and at the end

1124
00:49:36,679 --> 00:49:42,650
we can derive you know the F value F is

1125
00:49:39,829 --> 00:49:44,359
the the comparison outcome right again

1126
00:49:42,650 --> 00:49:46,579
everything here is a super here right

1127
00:49:44,359 --> 00:49:50,538
you cannot tell exactly you know what's

1128
00:49:46,579 --> 00:49:52,819
the comparison outcome so the last step

1129
00:49:50,539 --> 00:49:54,799
we have you know so we have one more

1130
00:49:52,819 --> 00:49:57,650
step here try to convert the shear and

1131
00:49:54,799 --> 00:49:59,329
no back to the normal computation right

1132
00:49:57,650 --> 00:50:02,719
so you make your competition may start

1133
00:49:59,329 --> 00:50:05,119
with a specific domain you know where

1134
00:50:02,719 --> 00:50:06,919
the shear came from right so I didn't

1135
00:50:05,119 --> 00:50:09,049
will return to outcome you also want to

1136
00:50:06,919 --> 00:50:11,660
perform preserve the same consistency

1137
00:50:09,049 --> 00:50:13,729
otherwise you cannot do the subsequent

1138
00:50:11,660 --> 00:50:15,879
you know computation right so here the

1139
00:50:13,729 --> 00:50:18,589
last two system here we have is to

1140
00:50:15,880 --> 00:50:20,900
convert the shear you know back to the

1141
00:50:18,589 --> 00:50:24,709
original domain alright so that's the

1142
00:50:20,900 --> 00:50:27,349
stuff we have here okay so I keep

1143
00:50:24,709 --> 00:50:29,178
something here so this is a summary of

1144
00:50:27,349 --> 00:50:31,099
you know what I talked about you know

1145
00:50:29,179 --> 00:50:34,909
Molly's steps it's kind of complicated

1146
00:50:31,099 --> 00:50:37,039
here I was here two slides with you you

1147
00:50:34,909 --> 00:50:38,539
know after the talk here but it's the

1148
00:50:37,039 --> 00:50:41,150
same information but I just googled

1149
00:50:38,539 --> 00:50:42,219
example together to show you you know

1150
00:50:41,150 --> 00:50:45,699
how it works

1151
00:50:42,219 --> 00:50:50,689
so here is a table of over comparison

1152
00:50:45,699 --> 00:50:54,349
alright so we compare with the second

1153
00:50:50,689 --> 00:50:56,689
solution the first five them are the

1154
00:50:54,349 --> 00:50:59,739
constant around you know comparison

1155
00:50:56,689 --> 00:51:02,239
Protocol secure converting protocol so

1156
00:50:59,739 --> 00:51:04,159
you know these are the you know one

1157
00:51:02,239 --> 00:51:05,989
column representing the number run

1158
00:51:04,159 --> 00:51:08,479
required to perform the secure

1159
00:51:05,989 --> 00:51:10,759
computation the Dunbar one requires

1160
00:51:08,479 --> 00:51:12,979
forty four rounds and so these are the

1161
00:51:10,759 --> 00:51:17,089
the number of bits need to be in a

1162
00:51:12,979 --> 00:51:18,649
transferred and so you know here we have

1163
00:51:17,089 --> 00:51:20,869
like five round instead of forty four

1164
00:51:18,650 --> 00:51:21,590
round and then you know we chopped the

1165
00:51:20,869 --> 00:51:23,090
leading to

1166
00:51:21,590 --> 00:51:26,540
nice well alright so you know DS

1167
00:51:23,090 --> 00:51:29,450
protocol responded by you know B go now

1168
00:51:26,540 --> 00:51:32,000
you know squirt right so I was the

1169
00:51:29,450 --> 00:51:34,549
number of beasts in representing a and B

1170
00:51:32,000 --> 00:51:37,250
so we were able to drop that and we

1171
00:51:34,550 --> 00:51:40,840
become you know our logo L so to improve

1172
00:51:37,250 --> 00:51:40,840
the efficiency you know quite a lot

1173
00:51:43,720 --> 00:51:48,410
alright and so there are some variations

1174
00:51:46,580 --> 00:51:48,830
we are considering you know at the

1175
00:51:48,410 --> 00:51:51,020
moment

1176
00:51:48,830 --> 00:51:52,730
another one we have another version and

1177
00:51:51,020 --> 00:51:54,680
that should of you know between the

1178
00:51:52,730 --> 00:51:56,630
wrong and the communication complexity

1179
00:51:54,680 --> 00:51:58,910
we can say by one more on right so this

1180
00:51:56,630 --> 00:52:01,190
one that current one is a fire round

1181
00:51:58,910 --> 00:52:04,730
alright so we can reduce that to four

1182
00:52:01,190 --> 00:52:06,350
round by you know increasing the combats

1183
00:52:04,730 --> 00:52:08,630
a little bit right the new combination

1184
00:52:06,350 --> 00:52:10,640
see we have gonna be our square Big O F

1185
00:52:08,630 --> 00:52:12,800
square but still the constant term is

1186
00:52:10,640 --> 00:52:15,190
very small compared to the easy in

1187
00:52:12,800 --> 00:52:17,720
solution so it's still very sufficient

1188
00:52:15,190 --> 00:52:19,760
another protocol in this table and I

1189
00:52:17,720 --> 00:52:22,910
forgot to mention this is the share mine

1190
00:52:19,760 --> 00:52:25,310
share my is one the commercial two out

1191
00:52:22,910 --> 00:52:27,440
there you know from Europe you know

1192
00:52:25,310 --> 00:52:29,480
their protocol is not constant wrong I

1193
00:52:27,440 --> 00:52:32,570
just want to show you what's the current

1194
00:52:29,480 --> 00:52:34,820
state of art the non constant round and

1195
00:52:32,570 --> 00:52:38,780
protocol right so this photo here has

1196
00:52:34,820 --> 00:52:40,250
you know three so there are two

1197
00:52:38,780 --> 00:52:41,930
different versions right the the most

1198
00:52:40,250 --> 00:52:45,020
efficient were three wrong you know plus

1199
00:52:41,930 --> 00:52:47,870
you know log to hell right that's their

1200
00:52:45,020 --> 00:52:50,500
complexity so you know if you have a

1201
00:52:47,870 --> 00:52:52,880
very small L then you know this

1202
00:52:50,500 --> 00:52:55,280
sequential one you know can be better

1203
00:52:52,880 --> 00:52:57,080
but if with the arrow is big and then

1204
00:52:55,280 --> 00:52:59,510
you know over protocol are still better

1205
00:52:57,080 --> 00:53:01,940
right so we just want to see even for

1206
00:52:59,510 --> 00:53:04,550
the sequential one right the non

1207
00:53:01,940 --> 00:53:11,780
constant wrong one were a work

1208
00:53:04,550 --> 00:53:14,870
performance compared in a wisdom so we

1209
00:53:11,780 --> 00:53:17,480
also look into in a protocol secure

1210
00:53:14,870 --> 00:53:19,279
against malicious adversary's right so

1211
00:53:17,480 --> 00:53:21,620
the current design is only secured under

1212
00:53:19,280 --> 00:53:23,510
the semi honest model right and we

1213
00:53:21,620 --> 00:53:25,370
expecting the party follow the protocol

1214
00:53:23,510 --> 00:53:27,560
so what if if you don't follow the

1215
00:53:25,370 --> 00:53:27,970
protocol right what should we do so we

1216
00:53:27,560 --> 00:53:31,270
have

1217
00:53:27,970 --> 00:53:33,160
version not be some edited secret

1218
00:53:31,270 --> 00:53:35,020
sharing it's actually based on Sameer

1219
00:53:33,160 --> 00:53:37,899
secure sharing I use some kind of

1220
00:53:35,020 --> 00:53:41,920
commitment scheme verifiable in a scheme

1221
00:53:37,900 --> 00:53:43,060
right to make sure to make sure the you

1222
00:53:41,920 --> 00:53:47,290
know kind of like secure against

1223
00:53:43,060 --> 00:53:48,940
malicious modest militia adversaries all

1224
00:53:47,290 --> 00:53:52,570
right so I just touch a livid

1225
00:53:48,940 --> 00:53:54,910
so some the open in open question still

1226
00:53:52,570 --> 00:53:57,369
out there is how do we design you know

1227
00:53:54,910 --> 00:53:58,480
where fireable secret sharing based on

1228
00:53:57,369 --> 00:54:00,520
edited signatures

1229
00:53:58,480 --> 00:54:02,590
right so the purpose your sharing scheme

1230
00:54:00,520 --> 00:54:05,050
based on Sameer but nothing based on

1231
00:54:02,590 --> 00:54:07,330
additive secure sharing how do we

1232
00:54:05,050 --> 00:54:09,880
achieve fault tolerance right under edit

1233
00:54:07,330 --> 00:54:11,830
easier sharing and then there are some

1234
00:54:09,880 --> 00:54:14,410
new research talked about you know do

1235
00:54:11,830 --> 00:54:18,880
executions right against malicious

1236
00:54:14,410 --> 00:54:20,410
behaviors right so based on the

1237
00:54:18,880 --> 00:54:22,390
comparison protocol we can design more

1238
00:54:20,410 --> 00:54:24,009
advanced protocols like you know pricey

1239
00:54:22,390 --> 00:54:26,129
preserving you know Franklin

1240
00:54:24,010 --> 00:54:29,230
recommendations in social network domain

1241
00:54:26,130 --> 00:54:31,990
you know some kind of sorting algorithms

1242
00:54:29,230 --> 00:54:34,330
you know query processing and you know

1243
00:54:31,990 --> 00:54:36,098
authentication to based on comparison

1244
00:54:34,330 --> 00:54:38,230
you know protocols so if we can speed it

1245
00:54:36,099 --> 00:54:40,839
up comparison then we can speed up you

1246
00:54:38,230 --> 00:54:43,540
know this is a applications as well so

1247
00:54:40,839 --> 00:54:44,890
so here you know two of my PT students

1248
00:54:43,540 --> 00:54:46,779
are working on this this is their

1249
00:54:44,890 --> 00:54:48,759
contribution they cannot be here but I

1250
00:54:46,780 --> 00:54:50,320
need to acknowledge their first you know

1251
00:54:48,760 --> 00:54:52,359
without them then I cannot be here to

1252
00:54:50,320 --> 00:54:54,310
talk to you do maybe thought something

1253
00:54:52,359 --> 00:54:57,130
else but these are the easysing papers

1254
00:54:54,310 --> 00:54:59,080
we compare and again I think that's all

1255
00:54:57,130 --> 00:55:00,940
I have and they started to take a bit

1256
00:54:59,080 --> 00:55:04,480
longer than I needed

1257
00:55:00,940 --> 00:55:11,770
I still skip some technical details so

1258
00:55:04,480 --> 00:55:13,359
yeah thank you we have time for a couple

1259
00:55:11,770 --> 00:55:14,950
of quick questions if anybody has any

1260
00:55:13,359 --> 00:55:16,619
questions otherwise we could take

1261
00:55:14,950 --> 00:55:21,490
questions all flying it out in the halls

1262
00:55:16,619 --> 00:55:23,260
just wondering if you attempted to

1263
00:55:21,490 --> 00:55:26,618
implement the protocol or like you

1264
00:55:23,260 --> 00:55:29,619
bought tools used implement so we could

1265
00:55:26,619 --> 00:55:32,470
use the the GNP library and I don't know

1266
00:55:29,619 --> 00:55:34,480
her but thou has a bigger number library

1267
00:55:32,470 --> 00:55:35,799
said well the fat is out there they

1268
00:55:34,480 --> 00:55:39,550
called the GNP

1269
00:55:35,800 --> 00:55:42,070
precision I think number you know to

1270
00:55:39,550 --> 00:55:44,530
handle larger numbers we also use the C

1271
00:55:42,070 --> 00:55:47,320
programming language and I see with the

1272
00:55:44,530 --> 00:55:49,510
GNU GMP they are compatible so we use

1273
00:55:47,320 --> 00:55:51,940
that to implement over protocols using

1274
00:55:49,510 --> 00:55:52,420
Swiss servers we have the locos suite

1275
00:55:51,940 --> 00:55:54,670
machines

1276
00:55:52,420 --> 00:56:01,300
locally so we can run our protocol you

1277
00:55:54,670 --> 00:56:03,790
know int I set up okay

1278
00:56:01,300 --> 00:56:05,680
well way I'd like to thank you and if

1279
00:56:03,790 --> 00:56:07,420
you ever think it feels like it's been a

1280
00:56:05,680 --> 00:56:11,529
long time since you've been here at

1281
00:56:07,420 --> 00:56:14,020
Purdue you can have this to remember

1282
00:56:11,530 --> 00:56:25,570
that produce been around a lot longer

1283
00:56:14,020 --> 00:56:29,490
than me celebrating our hopefully I can

1284
00:56:25,570 --> 00:56:29,490
come back with a 200 degrees

1285
00:56:30,990 --> 00:56:34,129
[Applause]

1286
00:56:41,870 --> 00:56:43,930
you

