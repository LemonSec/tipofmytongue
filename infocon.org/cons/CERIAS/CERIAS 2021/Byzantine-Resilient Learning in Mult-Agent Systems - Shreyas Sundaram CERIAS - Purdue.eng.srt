1
00:00:00,399 --> 00:00:02,800
so next on our agenda is a technical

2
00:00:02,800 --> 00:00:04,319
talk number two of the day from

3
00:00:04,319 --> 00:00:06,960
professor sharaya sundaram now sherius

4
00:00:06,960 --> 00:00:09,040
is the marie gordon associate professor

5
00:00:09,040 --> 00:00:11,120
of electrical and computer engineering

6
00:00:11,120 --> 00:00:12,960
and is also co-director of the purdue

7
00:00:12,960 --> 00:00:15,440
center for innovation in control

8
00:00:15,440 --> 00:00:17,920
optimization and networks also known as

9
00:00:17,920 --> 00:00:20,240
icon his contact information is in the

10
00:00:20,240 --> 00:00:21,119
chat

11
00:00:21,119 --> 00:00:24,640
sure is it's all yours

12
00:00:24,960 --> 00:00:26,880
wonderful thanks so much joel can you

13
00:00:26,880 --> 00:00:29,760
hear me okay and see my screen

14
00:00:29,760 --> 00:00:31,519
yeah absolutely looks good

15
00:00:31,519 --> 00:00:33,120
wonderful thank you so much it's a

16
00:00:33,120 --> 00:00:34,480
pleasure to be

17
00:00:34,480 --> 00:00:36,559
at the symposium again it's uh you know

18
00:00:36,559 --> 00:00:38,559
plugging forward proceeding forward

19
00:00:38,559 --> 00:00:40,399
despite the challenges provided by covet

20
00:00:40,399 --> 00:00:42,480
and still an excellent program so i'm uh

21
00:00:42,480 --> 00:00:44,399
it's a pleasure to be a part of this

22
00:00:44,399 --> 00:00:47,120
um so um yeah my talk today is going to

23
00:00:47,120 --> 00:00:48,320
be about

24
00:00:48,320 --> 00:00:49,600
byzantine resilient learning and

25
00:00:49,600 --> 00:00:51,199
multi-agent systems so broadly speaking

26
00:00:51,199 --> 00:00:53,280
my research group looks at these network

27
00:00:53,280 --> 00:00:55,520
systems of agents collaborating to

28
00:00:55,520 --> 00:00:57,120
achieve tasks in these complex

29
00:00:57,120 --> 00:00:59,120
environments and particularly what

30
00:00:59,120 --> 00:01:00,800
happens when you have agents that don't

31
00:01:00,800 --> 00:01:02,399
follow the protocols or the algorithms

32
00:01:02,399 --> 00:01:05,600
how do you design algorithms proactively

33
00:01:05,600 --> 00:01:08,000
and still give guarantees of success

34
00:01:08,000 --> 00:01:09,840
so today i'm going to be talking about

35
00:01:09,840 --> 00:01:11,520
general setting and focusing on a

36
00:01:11,520 --> 00:01:13,760
specific problem just to illustrate the

37
00:01:13,760 --> 00:01:15,360
kinds of ideas and algorithms we've been

38
00:01:15,360 --> 00:01:16,320
developing

39
00:01:16,320 --> 00:01:19,119
um so consider a large network of agents

40
00:01:19,119 --> 00:01:21,280
that are employed in some environment so

41
00:01:21,280 --> 00:01:23,680
this could be robotic swarms that are

42
00:01:23,680 --> 00:01:25,119
exploring

43
00:01:25,119 --> 00:01:27,040
some sort of space a battlefield or

44
00:01:27,040 --> 00:01:28,880
environmental monitoring it could be

45
00:01:28,880 --> 00:01:30,960
smart factories with sensors deployed

46
00:01:30,960 --> 00:01:33,280
everywhere or smart cities

47
00:01:33,280 --> 00:01:34,799
and in general you've got all these

48
00:01:34,799 --> 00:01:37,439
agents representing drones or robots or

49
00:01:37,439 --> 00:01:39,360
sensors they're all interacting with

50
00:01:39,360 --> 00:01:41,040
this environment that they're deployed

51
00:01:41,040 --> 00:01:42,720
in they're all measuring different

52
00:01:42,720 --> 00:01:44,079
aspects of it

53
00:01:44,079 --> 00:01:46,079
and each one of them only need to see a

54
00:01:46,079 --> 00:01:48,079
little piece of the overall puzzle and

55
00:01:48,079 --> 00:01:49,759
so the idea is how do you get them to

56
00:01:49,759 --> 00:01:51,439
work together what information do they

57
00:01:51,439 --> 00:01:53,200
have to exchange with each other in

58
00:01:53,200 --> 00:01:55,840
order to enable everybody to get a full

59
00:01:55,840 --> 00:01:56,719
picture

60
00:01:56,719 --> 00:01:58,159
i mean there are variety of challenges

61
00:01:58,159 --> 00:01:59,840
that come with this the network through

62
00:01:59,840 --> 00:02:02,079
which these agents communicate could be

63
00:02:02,079 --> 00:02:04,000
mobile the agents could be moving so the

64
00:02:04,000 --> 00:02:05,439
communication links could be changing

65
00:02:05,439 --> 00:02:06,560
over time

66
00:02:06,560 --> 00:02:07,920
there could be adversaries in the

67
00:02:07,920 --> 00:02:09,840
network so it's certain agents may be

68
00:02:09,840 --> 00:02:11,760
compromised or may come from untrusted

69
00:02:11,760 --> 00:02:13,920
sources and they may not be necessarily

70
00:02:13,920 --> 00:02:15,520
following the algorithm you expect them

71
00:02:15,520 --> 00:02:18,319
to so how do you come up with algorithms

72
00:02:18,319 --> 00:02:20,319
that enable all the regular agents the

73
00:02:20,319 --> 00:02:23,040
agents that are following the rules to

74
00:02:23,040 --> 00:02:25,360
cooperatively learn about the

75
00:02:25,360 --> 00:02:27,280
environment despite this adversarial

76
00:02:27,280 --> 00:02:29,680
behavior

77
00:02:30,480 --> 00:02:31,760
um so there are a couple different

78
00:02:31,760 --> 00:02:34,000
versions of this uh problem today i'm

79
00:02:34,000 --> 00:02:36,000
going to be focusing on distributed

80
00:02:36,000 --> 00:02:38,720
hypothesis testing um i won't be able to

81
00:02:38,720 --> 00:02:40,640
monitor the chat carefully so if there

82
00:02:40,640 --> 00:02:42,480
are any questions perhaps you can save

83
00:02:42,480 --> 00:02:43,599
them to the end

84
00:02:43,599 --> 00:02:44,959
um

85
00:02:44,959 --> 00:02:46,319
so the problem that we're going to be

86
00:02:46,319 --> 00:02:48,160
focusing on here primarily for this talk

87
00:02:48,160 --> 00:02:50,080
is this idea of distributed hypothesis

88
00:02:50,080 --> 00:02:52,560
testing um so the idea has got a set of

89
00:02:52,560 --> 00:02:53,920
agents again deployed in the world

90
00:02:53,920 --> 00:02:55,680
there's some true state of the world

91
00:02:55,680 --> 00:02:57,440
agents are trying to figure out which of

92
00:02:57,440 --> 00:02:59,040
the possible states is the true state of

93
00:02:59,040 --> 00:03:00,480
the world and there may be some

94
00:03:00,480 --> 00:03:02,800
byzantine agents that are trying to lie

95
00:03:02,800 --> 00:03:04,400
and prevent the other agents from

96
00:03:04,400 --> 00:03:06,720
learning the true state after i describe

97
00:03:06,720 --> 00:03:08,800
our approaches to this problem and kind

98
00:03:08,800 --> 00:03:11,680
of the the results that we have uh which

99
00:03:11,680 --> 00:03:13,760
establish the capability to solve this

100
00:03:13,760 --> 00:03:16,000
problem um also touch very briefly on

101
00:03:16,000 --> 00:03:17,840
the extension to things like resilient

102
00:03:17,840 --> 00:03:19,840
distributed reinforcement learning

103
00:03:19,840 --> 00:03:22,319
at the end of the talk

104
00:03:22,319 --> 00:03:24,000
so let's start with this uh the idea of

105
00:03:24,000 --> 00:03:26,720
distributed hypothesis testing um so

106
00:03:26,720 --> 00:03:29,280
here's a general setup so again we're in

107
00:03:29,280 --> 00:03:32,000
some environment and there's impossible

108
00:03:32,000 --> 00:03:33,680
different states of the world right so

109
00:03:33,680 --> 00:03:35,360
if there's a classification problem

110
00:03:35,360 --> 00:03:36,959
there's gonna be impossible things that

111
00:03:36,959 --> 00:03:39,040
are going on in this environment okay we

112
00:03:39,040 --> 00:03:40,640
don't know which one is the true state

113
00:03:40,640 --> 00:03:42,560
but one of them is the true state okay

114
00:03:42,560 --> 00:03:44,239
what some one of these states is really

115
00:03:44,239 --> 00:03:45,680
happening

116
00:03:45,680 --> 00:03:47,519
so each of the agents that are deployed

117
00:03:47,519 --> 00:03:49,840
in this network each agent i is getting

118
00:03:49,840 --> 00:03:51,360
signals from the environment it's

119
00:03:51,360 --> 00:03:52,879
observing this environment or

120
00:03:52,879 --> 00:03:55,439
interacting with it and so each agent i

121
00:03:55,439 --> 00:03:58,480
received some signal to denote s i of t

122
00:03:58,480 --> 00:04:01,360
at each time step t okay and so each

123
00:04:01,360 --> 00:04:02,560
agent could have a different signal

124
00:04:02,560 --> 00:04:04,640
space for example one agent has a

125
00:04:04,640 --> 00:04:06,480
thermal camera versus another agent has

126
00:04:06,480 --> 00:04:08,959
a rgb camera the types of signals they

127
00:04:08,959 --> 00:04:11,040
may be receiving are different but they

128
00:04:11,040 --> 00:04:14,560
still get some sort of stream of signals

129
00:04:14,560 --> 00:04:16,880
and for each possible state of the world

130
00:04:16,880 --> 00:04:18,639
each agent has a conditional likelihood

131
00:04:18,639 --> 00:04:19,680
function so what does this mean it

132
00:04:19,680 --> 00:04:22,560
basically says okay given that this is

133
00:04:22,560 --> 00:04:24,080
the true state of the world what is the

134
00:04:24,080 --> 00:04:26,400
distribution of signals i expect to see

135
00:04:26,400 --> 00:04:28,240
similarly if that is the true state of

136
00:04:28,240 --> 00:04:29,680
the world what would be the distribution

137
00:04:29,680 --> 00:04:31,600
of signals i expect to see okay so all

138
00:04:31,600 --> 00:04:32,960
of this is just captured by this

139
00:04:32,960 --> 00:04:34,160
function which says okay what's the

140
00:04:34,160 --> 00:04:36,400
probability that i see a certain type of

141
00:04:36,400 --> 00:04:38,400
signal if this were the true state of

142
00:04:38,400 --> 00:04:39,360
the world

143
00:04:39,360 --> 00:04:40,720
and the agents are going to be able to

144
00:04:40,720 --> 00:04:42,000
leverage this are going to want to

145
00:04:42,000 --> 00:04:43,600
leverage this information about the

146
00:04:43,600 --> 00:04:45,040
distribution of types of signals that

147
00:04:45,040 --> 00:04:47,440
they see to cooperatively learn what

148
00:04:47,440 --> 00:04:48,800
data star is

149
00:04:48,800 --> 00:04:51,520
okay and so the idea in these class of

150
00:04:51,520 --> 00:04:53,120
problems is that each agent maintains a

151
00:04:53,120 --> 00:04:55,360
belief vector which is just a vector

152
00:04:55,360 --> 00:04:56,960
it's a probability distribution over all

153
00:04:56,960 --> 00:04:59,199
the states right so that's denoted mu i

154
00:04:59,199 --> 00:05:02,000
of t so agent i's belief over the states

155
00:05:02,000 --> 00:05:03,759
at time t is mu i of t so it could be

156
00:05:03,759 --> 00:05:05,280
something like hey i think it's ten

157
00:05:05,280 --> 00:05:07,759
percent theta one thirty percent theta

158
00:05:07,759 --> 00:05:11,600
two seventy percent um theta three okay

159
00:05:11,600 --> 00:05:13,120
and it's going to update the set of

160
00:05:13,120 --> 00:05:14,960
beliefs over time based on the

161
00:05:14,960 --> 00:05:16,639
measurements it's getting and

162
00:05:16,639 --> 00:05:18,080
information it may get from its

163
00:05:18,080 --> 00:05:19,120
neighbors

164
00:05:19,120 --> 00:05:20,960
so the key question and these kinds of

165
00:05:20,960 --> 00:05:22,560
problems is how should you do that

166
00:05:22,560 --> 00:05:24,639
update right how do i incorporate local

167
00:05:24,639 --> 00:05:26,479
information with information from

168
00:05:26,479 --> 00:05:28,720
neighbors if i only rely on local

169
00:05:28,720 --> 00:05:30,240
information there may be a limit on what

170
00:05:30,240 --> 00:05:31,759
i can do due to the limitations of my

171
00:05:31,759 --> 00:05:33,440
sensors and the limited information i'm

172
00:05:33,440 --> 00:05:34,720
getting so i have to talk to other

173
00:05:34,720 --> 00:05:36,800
people but when i talk to other people

174
00:05:36,800 --> 00:05:38,479
first how should i use their information

175
00:05:38,479 --> 00:05:40,320
and second i open myself up to

176
00:05:40,320 --> 00:05:43,520
misinformation or corrupted information

177
00:05:43,520 --> 00:05:45,680
that's injected by those neighbors so

178
00:05:45,680 --> 00:05:47,280
after i balance those two

179
00:05:47,280 --> 00:05:48,560
that's that's the key question how do we

180
00:05:48,560 --> 00:05:50,880
design these update and exchange rules

181
00:05:50,880 --> 00:05:53,199
that guarantee everybody all the good

182
00:05:53,199 --> 00:05:55,840
nodes at least learn the true state over

183
00:05:55,840 --> 00:05:57,440
time

184
00:05:57,440 --> 00:05:59,199
so hopefully that's uh the setting is

185
00:05:59,199 --> 00:06:00,720
relatively clear and so the

186
00:06:00,720 --> 00:06:02,160
contributions that we've made in the

187
00:06:02,160 --> 00:06:04,160
group over the past couple years is that

188
00:06:04,160 --> 00:06:05,440
you know we've come up with industry

189
00:06:05,440 --> 00:06:06,800
learning rules that

190
00:06:06,800 --> 00:06:10,000
guarantee learning um and work faster

191
00:06:10,000 --> 00:06:11,680
than existing algorithms for these are

192
00:06:11,680 --> 00:06:13,680
sort of best in class algorithms and

193
00:06:13,680 --> 00:06:15,680
they also have the benefit of being

194
00:06:15,680 --> 00:06:17,440
robust or can be made robust to these

195
00:06:17,440 --> 00:06:19,280
kinds of adversarial attacks that are

196
00:06:19,280 --> 00:06:21,039
modeled with these typical byzantine

197
00:06:21,039 --> 00:06:22,080
models

198
00:06:22,080 --> 00:06:23,840
so let me give you kind of uh the

199
00:06:23,840 --> 00:06:25,199
overview of how these algorithms work

200
00:06:25,199 --> 00:06:26,479
and it turns out they also have the

201
00:06:26,479 --> 00:06:28,479
benefit of being most embarrassingly

202
00:06:28,479 --> 00:06:31,120
simple okay and so here's a simple

203
00:06:31,120 --> 00:06:32,880
example for us to

204
00:06:32,880 --> 00:06:34,160
wrap

205
00:06:34,160 --> 00:06:35,520
suppose that you have a single agent

206
00:06:35,520 --> 00:06:37,199
let's not even worry about multiple

207
00:06:37,199 --> 00:06:38,639
agents for a second let's just kind of

208
00:06:38,639 --> 00:06:41,440
establish some basic limitations and

209
00:06:41,440 --> 00:06:42,800
terminology

210
00:06:42,800 --> 00:06:44,080
suppose that you have three possible

211
00:06:44,080 --> 00:06:45,919
states of the world right theta one two

212
00:06:45,919 --> 00:06:47,120
or theta three we don't know which one

213
00:06:47,120 --> 00:06:49,120
of those three is true and suppose the

214
00:06:49,120 --> 00:06:51,440
agent the signals that it sees are just

215
00:06:51,440 --> 00:06:53,840
coin flips so heads and tails

216
00:06:53,840 --> 00:06:55,680
and suppose that the signal structure of

217
00:06:55,680 --> 00:06:57,280
the agent is given by this matrix here

218
00:06:57,280 --> 00:06:59,199
so what does this mean it means if the

219
00:06:59,199 --> 00:07:01,680
true state of the world were theta one

220
00:07:01,680 --> 00:07:03,440
the agent is going to see heads three

221
00:07:03,440 --> 00:07:05,199
quarters of the time and tails one

222
00:07:05,199 --> 00:07:06,560
quarter of the time

223
00:07:06,560 --> 00:07:07,840
if the true state of the world were

224
00:07:07,840 --> 00:07:09,520
theta two the agent is going to see

225
00:07:09,520 --> 00:07:11,360
heads half the time and tails half the

226
00:07:11,360 --> 00:07:13,199
time and if the true state is stated

227
00:07:13,199 --> 00:07:14,720
three the agent is going to see heads

228
00:07:14,720 --> 00:07:17,039
three quarters of the time and tails one

229
00:07:17,039 --> 00:07:18,319
quarter at a time

230
00:07:18,319 --> 00:07:20,160
okay so each of these rows is basically

231
00:07:20,160 --> 00:07:21,680
that conditional likelihood function

232
00:07:21,680 --> 00:07:23,599
that i mentioned before the probability

233
00:07:23,599 --> 00:07:25,599
of seeing a certain signal under a

234
00:07:25,599 --> 00:07:27,440
certain speed

235
00:07:27,440 --> 00:07:29,280
and one thing you can notice immediately

236
00:07:29,280 --> 00:07:31,280
just based on the signal structure is

237
00:07:31,280 --> 00:07:33,680
that both under theta one and theta

238
00:07:33,680 --> 00:07:36,400
three the agent is seeing heads three

239
00:07:36,400 --> 00:07:38,080
quarters of the time and fails one

240
00:07:38,080 --> 00:07:39,360
quarter

241
00:07:39,360 --> 00:07:40,720
so imagine you're sitting there and

242
00:07:40,720 --> 00:07:42,319
you're observing the sequence of heads

243
00:07:42,319 --> 00:07:43,919
and tails and you're saying hey look you

244
00:07:43,919 --> 00:07:45,759
know heads is occurring three quarters

245
00:07:45,759 --> 00:07:47,840
of the time tails occurring one per time

246
00:07:47,840 --> 00:07:50,319
i wouldn't know if i'm in world theta

247
00:07:50,319 --> 00:07:52,160
one or theta three right because both of

248
00:07:52,160 --> 00:07:53,440
those are going to generate that same

249
00:07:53,440 --> 00:07:54,400
sequence

250
00:07:54,400 --> 00:07:55,919
but i would know for sure that i'm not

251
00:07:55,919 --> 00:07:57,599
in theta two

252
00:07:57,599 --> 00:08:00,000
okay similarly if i saw heads one half

253
00:08:00,000 --> 00:08:01,440
of the time it could be pretty confident

254
00:08:01,440 --> 00:08:03,199
in my theta two and i could immediately

255
00:08:03,199 --> 00:08:05,599
eliminate that one and theta three

256
00:08:05,599 --> 00:08:07,360
so this example sort of shows us that

257
00:08:07,360 --> 00:08:08,960
there may be certain states that we can

258
00:08:08,960 --> 00:08:10,560
eliminate based on the signals that

259
00:08:10,560 --> 00:08:12,560
we're seeing just locally and there may

260
00:08:12,560 --> 00:08:13,840
be certain states that we cannot

261
00:08:13,840 --> 00:08:16,879
distinguish okay for in this case uh uh

262
00:08:16,879 --> 00:08:18,240
states theta one and theta three are

263
00:08:18,240 --> 00:08:21,440
said to be observationally equivalent

264
00:08:21,440 --> 00:08:24,000
okay so uh kind of zooming in on that

265
00:08:24,000 --> 00:08:25,919
right the probability distributions that

266
00:08:25,919 --> 00:08:27,680
tell me what kinds of signals i see

267
00:08:27,680 --> 00:08:29,520
under each of those states that's what's

268
00:08:29,520 --> 00:08:30,879
going to tell me the ability to

269
00:08:30,879 --> 00:08:32,240
distinguish between those states the

270
00:08:32,240 --> 00:08:34,320
more different those distributions are

271
00:08:34,320 --> 00:08:36,240
the more likely the easier it is for me

272
00:08:36,240 --> 00:08:38,080
to tell those states apart in this case

273
00:08:38,080 --> 00:08:39,279
the distributions for theta one and

274
00:08:39,279 --> 00:08:41,519
theta three are identical

275
00:08:41,519 --> 00:08:43,760
so from a mathematical perspective right

276
00:08:43,760 --> 00:08:45,440
this slide is looks scary and has a lot

277
00:08:45,440 --> 00:08:46,959
of attention so if you're not familiar

278
00:08:46,959 --> 00:08:48,320
with this much more information theory

279
00:08:48,320 --> 00:08:50,480
do not worry about it all this is saying

280
00:08:50,480 --> 00:08:52,640
is if i give you two distributions i

281
00:08:52,640 --> 00:08:54,160
want to have a way of coming up with a

282
00:08:54,160 --> 00:08:56,080
number that tells me how different those

283
00:08:56,080 --> 00:08:57,680
distributions are because from a

284
00:08:57,680 --> 00:08:59,360
previous slide we saw we want to be able

285
00:08:59,360 --> 00:09:01,279
to see how different distributions are

286
00:09:01,279 --> 00:09:03,120
able to tell apart these states so

287
00:09:03,120 --> 00:09:04,480
they're very there are lots of different

288
00:09:04,480 --> 00:09:05,920
ways to do that one of these things is

289
00:09:05,920 --> 00:09:08,000
called the kl divergence which basically

290
00:09:08,000 --> 00:09:09,519
is a function it's got all these

291
00:09:09,519 --> 00:09:11,360
vertical lines which looks super scary

292
00:09:11,360 --> 00:09:13,120
but all that's happening is it's eating

293
00:09:13,120 --> 00:09:15,360
two probability distributions

294
00:09:15,360 --> 00:09:17,200
putting them together and spitting out a

295
00:09:17,200 --> 00:09:18,640
number that tells you how different

296
00:09:18,640 --> 00:09:20,160
those distributions are okay in

297
00:09:20,160 --> 00:09:21,440
particular if the distributions are

298
00:09:21,440 --> 00:09:23,920
exactly the same then you get a

299
00:09:23,920 --> 00:09:25,680
metric of zero here and if the

300
00:09:25,680 --> 00:09:26,800
distributions are different you're going

301
00:09:26,800 --> 00:09:28,399
to get some positive numbers saying how

302
00:09:28,399 --> 00:09:29,920
different here okay

303
00:09:29,920 --> 00:09:31,920
so in general for any given pair of

304
00:09:31,920 --> 00:09:33,760
states of the world we say that the pair

305
00:09:33,760 --> 00:09:35,360
is observationally equivalent from the

306
00:09:35,360 --> 00:09:37,120
perspective of a certain agent if the

307
00:09:37,120 --> 00:09:38,720
probability distributions of the signals

308
00:09:38,720 --> 00:09:41,360
that you see are exactly the same under

309
00:09:41,360 --> 00:09:42,959
uh those two states or equivalently if

310
00:09:42,959 --> 00:09:44,720
the kl divergence between their

311
00:09:44,720 --> 00:09:47,360
likelihood functions zero

312
00:09:47,360 --> 00:09:48,160
okay

313
00:09:48,160 --> 00:09:50,399
so that's again you know don't worry if

314
00:09:50,399 --> 00:09:52,880
that's uh that's foreign to you you know

315
00:09:52,880 --> 00:09:54,640
it's just to establish some basic

316
00:09:54,640 --> 00:09:55,920
concepts where people are familiar with

317
00:09:55,920 --> 00:09:57,200
information

318
00:09:57,200 --> 00:09:59,279
okay so now that we've established this

319
00:09:59,279 --> 00:10:01,839
kind of idea of you know using

320
00:10:01,839 --> 00:10:03,279
distributions of the signals that you

321
00:10:03,279 --> 00:10:05,040
expect to see to be able to figure out

322
00:10:05,040 --> 00:10:06,880
something about the two states how do we

323
00:10:06,880 --> 00:10:08,320
start incorporating information from

324
00:10:08,320 --> 00:10:09,440
neighbors

325
00:10:09,440 --> 00:10:11,040
and this problem's been looked at for

326
00:10:11,040 --> 00:10:13,360
you know some time now close to a decade

327
00:10:13,360 --> 00:10:14,720
um and variety of rules have been

328
00:10:14,720 --> 00:10:17,200
proposed for how you incorporate

329
00:10:17,200 --> 00:10:19,120
information from neighbors and sort of

330
00:10:19,120 --> 00:10:21,120
the simplest earliest approach to do

331
00:10:21,120 --> 00:10:23,040
this was the following basically what

332
00:10:23,040 --> 00:10:24,160
this says was the following so

333
00:10:24,160 --> 00:10:26,160
essentially i have local signals so what

334
00:10:26,160 --> 00:10:27,279
i'm going to do is i'm going to take my

335
00:10:27,279 --> 00:10:29,680
belief vector right my my distribution

336
00:10:29,680 --> 00:10:31,519
over the sets of states that i think is

337
00:10:31,519 --> 00:10:33,360
currently true and i'm going to use

338
00:10:33,360 --> 00:10:35,279
bayes rule right very basic bayes rule

339
00:10:35,279 --> 00:10:37,279
from probability theory to do an update

340
00:10:37,279 --> 00:10:38,240
of that

341
00:10:38,240 --> 00:10:39,920
plus a prior probability into a

342
00:10:39,920 --> 00:10:41,600
posterior belief

343
00:10:41,600 --> 00:10:42,720
and then what i'm going to do is i'm

344
00:10:42,720 --> 00:10:44,480
going to grab the beliefs from all my

345
00:10:44,480 --> 00:10:46,480
neighbors in the network and i'm just

346
00:10:46,480 --> 00:10:48,079
going to average them so that's all this

347
00:10:48,079 --> 00:10:49,760
is saying so this is saying do a local

348
00:10:49,760 --> 00:10:51,120
bayesian update

349
00:10:51,120 --> 00:10:53,040
grab the beliefs from your neighbors and

350
00:10:53,040 --> 00:10:55,040
average all of those to form your next

351
00:10:55,040 --> 00:10:57,279
belief okay so this is kind of called

352
00:10:57,279 --> 00:10:58,959
kind of a linear update rule because i'm

353
00:10:58,959 --> 00:11:01,200
linearly averaging information from my

354
00:11:01,200 --> 00:11:02,480
neighbors

355
00:11:02,480 --> 00:11:04,399
similarly other people have proposed log

356
00:11:04,399 --> 00:11:05,920
linear rules where you do slightly more

357
00:11:05,920 --> 00:11:07,760
complicated operations but they're still

358
00:11:07,760 --> 00:11:09,360
linear averaging in a different space

359
00:11:09,360 --> 00:11:10,560
and so forth

360
00:11:10,560 --> 00:11:12,240
and with all of these simple ideas which

361
00:11:12,240 --> 00:11:13,760
is basically you know bayesian update

362
00:11:13,760 --> 00:11:16,480
locally average my neighbors beliefs it

363
00:11:16,480 --> 00:11:18,160
turns out that under some very mild

364
00:11:18,160 --> 00:11:20,480
conditions it's going to guarantee that

365
00:11:20,480 --> 00:11:21,519
all the

366
00:11:21,519 --> 00:11:23,360
agents in the network learn

367
00:11:23,360 --> 00:11:25,040
the true belief the true state

368
00:11:25,040 --> 00:11:27,680
asymptotically if everybody follows the

369
00:11:27,680 --> 00:11:29,600
same algorithm okay and there are some

370
00:11:29,600 --> 00:11:32,240
very basic conditions essentially

371
00:11:32,240 --> 00:11:34,160
for every pair of states some agent in

372
00:11:34,160 --> 00:11:35,760
the network has to be able to tell those

373
00:11:35,760 --> 00:11:37,120
states apart based on their local

374
00:11:37,120 --> 00:11:38,959
signals okay so somebody has to be able

375
00:11:38,959 --> 00:11:40,640
to distinguish between each pair of

376
00:11:40,640 --> 00:11:42,800
states similarly on the network

377
00:11:42,800 --> 00:11:44,640
structure there has to be a path between

378
00:11:44,640 --> 00:11:46,000
each pair of agents doesn't have to be

379
00:11:46,000 --> 00:11:47,680
fully connected right as long as there's

380
00:11:47,680 --> 00:11:49,120
a multi-hop path

381
00:11:49,120 --> 00:11:50,959
that's fine and then conditions on

382
00:11:50,959 --> 00:11:52,720
priors which is everybody should start

383
00:11:52,720 --> 00:11:54,480
out believing that any of the states are

384
00:11:54,480 --> 00:11:56,240
possible right if i start out and i wake

385
00:11:56,240 --> 00:11:57,920
up one day and i say there's no way

386
00:11:57,920 --> 00:11:59,920
theta one is true no amount of new

387
00:11:59,920 --> 00:12:01,360
information is going to change my mind

388
00:12:01,360 --> 00:12:02,720
so as long as everybody starts out even

389
00:12:02,720 --> 00:12:05,519
with a small prior on everything

390
00:12:05,519 --> 00:12:07,200
that's that's a condition

391
00:12:07,200 --> 00:12:08,880
okay and it turns out that under all of

392
00:12:08,880 --> 00:12:10,959
these um you know

393
00:12:10,959 --> 00:12:12,959
assumptions all of these prior works

394
00:12:12,959 --> 00:12:15,600
will guarantee convergence but they all

395
00:12:15,600 --> 00:12:17,920
rely on this kind of averaging okay and

396
00:12:17,920 --> 00:12:19,680
so the question we started out asking

397
00:12:19,680 --> 00:12:22,079
primarily with a view towards building

398
00:12:22,079 --> 00:12:24,399
towards resilience is first do we need

399
00:12:24,399 --> 00:12:26,639
to do averaging is there a different way

400
00:12:26,639 --> 00:12:27,920
to solve this problem that actually

401
00:12:27,920 --> 00:12:30,720
makes it more amenable to solving uh in

402
00:12:30,720 --> 00:12:32,399
a resilient fashion

403
00:12:32,399 --> 00:12:34,480
so again let's think about carefully

404
00:12:34,480 --> 00:12:36,720
what each agent can do on its own right

405
00:12:36,720 --> 00:12:38,399
suppose i forget about talking to

406
00:12:38,399 --> 00:12:40,079
anybody else and i just look at the

407
00:12:40,079 --> 00:12:42,240
signals that i'm getting and i just use

408
00:12:42,240 --> 00:12:45,680
bayes rule over time to refine my local

409
00:12:45,680 --> 00:12:47,920
beliefs on the true state set of states

410
00:12:47,920 --> 00:12:49,920
okay so that bayes rule update is just

411
00:12:49,920 --> 00:12:51,839
looks like this okay and there are

412
00:12:51,839 --> 00:12:53,360
certain basic facts that you can

413
00:12:53,360 --> 00:12:55,519
establish about this just coming back to

414
00:12:55,519 --> 00:12:56,959
that example we did with the heads and

415
00:12:56,959 --> 00:12:58,240
tails which i'll show again on the next

416
00:12:58,240 --> 00:13:00,560
slide essentially if theta star is the

417
00:13:00,560 --> 00:13:02,320
true state of the world and i consider

418
00:13:02,320 --> 00:13:04,560
some other state theta

419
00:13:04,560 --> 00:13:06,480
if theta is not observationally

420
00:13:06,480 --> 00:13:07,920
equivalent to theta star meaning that

421
00:13:07,920 --> 00:13:09,839
the distribution of signals that i would

422
00:13:09,839 --> 00:13:11,360
get under theta and theta star are

423
00:13:11,360 --> 00:13:12,959
different then eventually i should be

424
00:13:12,959 --> 00:13:14,079
able to tell

425
00:13:14,079 --> 00:13:16,079
that theta is not the true state of the

426
00:13:16,079 --> 00:13:17,920
world right because the signals i'm

427
00:13:17,920 --> 00:13:20,079
getting don't match up with the signals

428
00:13:20,079 --> 00:13:22,560
i expect to get under theta

429
00:13:22,560 --> 00:13:24,240
however if theta is observationally

430
00:13:24,240 --> 00:13:25,760
equivalent to theta star meaning these

431
00:13:25,760 --> 00:13:27,600
signals have the same distribution from

432
00:13:27,600 --> 00:13:29,680
my sensors i won't be able to tell it

433
00:13:29,680 --> 00:13:31,360
apart right i won't be able to tell if

434
00:13:31,360 --> 00:13:33,680
that's true state or not

435
00:13:33,680 --> 00:13:36,160
so the key insight here is just by using

436
00:13:36,160 --> 00:13:37,680
bayes rule just by looking at my local

437
00:13:37,680 --> 00:13:40,720
signals i can eliminate certain states i

438
00:13:40,720 --> 00:13:43,279
can say for sure that's not looking like

439
00:13:43,279 --> 00:13:46,320
the true state okay so here's an example

440
00:13:46,320 --> 00:13:48,320
coming back to that um example that we

441
00:13:48,320 --> 00:13:51,440
saw before suppose that um theta one is

442
00:13:51,440 --> 00:13:53,839
the true state okay and so then this

443
00:13:53,839 --> 00:13:55,440
agent is sitting there looking at those

444
00:13:55,440 --> 00:13:58,320
local signals is seeing you know how

445
00:13:58,320 --> 00:14:00,639
often heads and tails come up and over

446
00:14:00,639 --> 00:14:02,800
time as it's doing bayes rule it sees

447
00:14:02,800 --> 00:14:05,680
that the belief on theta two goes to

448
00:14:05,680 --> 00:14:07,519
zero right it's like hey i'm not seeing

449
00:14:07,519 --> 00:14:09,760
heads three quarters of the time i'm

450
00:14:09,760 --> 00:14:11,279
going to have a lower and lower belief

451
00:14:11,279 --> 00:14:12,639
that that's going to be the true state

452
00:14:12,639 --> 00:14:14,000
but for theta one and theta three

453
00:14:14,000 --> 00:14:15,440
because i can't tell them apart they're

454
00:14:15,440 --> 00:14:17,360
gonna basically even out at 50

455
00:14:17,360 --> 00:14:19,760
probability each

456
00:14:19,760 --> 00:14:21,440
okay

457
00:14:21,440 --> 00:14:23,279
so that's the key idea so the key idea

458
00:14:23,279 --> 00:14:25,600
is locally i can eliminate certain

459
00:14:25,600 --> 00:14:27,680
states so everybody in the network can

460
00:14:27,680 --> 00:14:29,440
do this right so somebody

461
00:14:29,440 --> 00:14:31,360
over there can eliminate a certain state

462
00:14:31,360 --> 00:14:32,959
from being true i can eliminate

463
00:14:32,959 --> 00:14:34,160
different states somebody else can

464
00:14:34,160 --> 00:14:36,160
eliminate a third state and so forth so

465
00:14:36,160 --> 00:14:37,920
the question is how do we leverage this

466
00:14:37,920 --> 00:14:39,600
capability throughout this network for

467
00:14:39,600 --> 00:14:40,639
different people

468
00:14:40,639 --> 00:14:41,839
different agents to be eliminating

469
00:14:41,839 --> 00:14:43,839
different states to help everybody else

470
00:14:43,839 --> 00:14:45,600
converge to the true state

471
00:14:45,600 --> 00:14:47,600
and here is very simple just use process

472
00:14:47,600 --> 00:14:49,760
elimination right so if i have

473
00:14:49,760 --> 00:14:51,440
eliminated a state state meaning i have

474
00:14:51,440 --> 00:14:53,519
a very low belief that that's a true

475
00:14:53,519 --> 00:14:56,079
state i should tell everybody else hey

476
00:14:56,079 --> 00:14:58,320
i'm pretty sure this is not the state

477
00:14:58,320 --> 00:15:00,399
right and so what that means is i want

478
00:15:00,399 --> 00:15:02,639
low beliefs on a true state to propagate

479
00:15:02,639 --> 00:15:04,639
very quickly through the network

480
00:15:04,639 --> 00:15:06,320
what's a way for low beliefs to

481
00:15:06,320 --> 00:15:08,560
propagate well you can just use a min

482
00:15:08,560 --> 00:15:10,800
rule rather than averaging

483
00:15:10,800 --> 00:15:12,959
so the idea is very simple every agent

484
00:15:12,959 --> 00:15:14,800
maintains a local belief vector which is

485
00:15:14,800 --> 00:15:16,560
based on asian updating right it just

486
00:15:16,560 --> 00:15:18,240
looks at its local signals and it's

487
00:15:18,240 --> 00:15:20,480
figuring out what's true and what's not

488
00:15:20,480 --> 00:15:22,959
and a global belief or network belief

489
00:15:22,959 --> 00:15:24,480
character which incorporates information

490
00:15:24,480 --> 00:15:26,320
from its neighbors and it does so by

491
00:15:26,320 --> 00:15:28,880
taking the minimum belief uh for each

492
00:15:28,880 --> 00:15:30,959
state from its neighbors and again the

493
00:15:30,959 --> 00:15:32,880
key idea is that somebody's eliminated a

494
00:15:32,880 --> 00:15:35,360
state but below belief on it if i take

495
00:15:35,360 --> 00:15:37,279
the minimum belief that'll allow me to

496
00:15:37,279 --> 00:15:39,120
put a low belief on it and eliminate

497
00:15:39,120 --> 00:15:40,800
that state and that's going to boost

498
00:15:40,800 --> 00:15:44,079
everybody's beliefs on the true state up

499
00:15:44,079 --> 00:15:45,360
okay so hopefully that's kind of

500
00:15:45,360 --> 00:15:47,519
intuitive sort of the take home is for

501
00:15:47,519 --> 00:15:49,920
each hypothesis listen to your neighbor

502
00:15:49,920 --> 00:15:51,440
that has the lowest belief on that

503
00:15:51,440 --> 00:15:53,600
hypothesis

504
00:15:53,600 --> 00:15:55,440
so this is basically the math behind it

505
00:15:55,440 --> 00:15:56,800
right at each time step at each

506
00:15:56,800 --> 00:15:58,800
iteration each agent is maintaining two

507
00:15:58,800 --> 00:16:01,120
beliefs a local belief but never listens

508
00:16:01,120 --> 00:16:03,680
to anybody just does just trying to

509
00:16:03,680 --> 00:16:05,120
figure out what it can learn based on

510
00:16:05,120 --> 00:16:06,880
his local signals and the network

511
00:16:06,880 --> 00:16:08,639
beliefs which incorporates the minimum

512
00:16:08,639 --> 00:16:10,720
belief um on each state from the

513
00:16:10,720 --> 00:16:12,880
standards

514
00:16:12,880 --> 00:16:14,240
and again you know it looks like a lot

515
00:16:14,240 --> 00:16:16,000
of matter but again just basically on

516
00:16:16,000 --> 00:16:16,959
the three

517
00:16:16,959 --> 00:16:18,320
simple conditions that we talked about

518
00:16:18,320 --> 00:16:20,480
before for every pair of states somebody

519
00:16:20,480 --> 00:16:22,160
should be able to eliminate it or

520
00:16:22,160 --> 00:16:23,680
distinguish between them strong

521
00:16:23,680 --> 00:16:25,360
connectivity meaning there's a path from

522
00:16:25,360 --> 00:16:27,279
every agent to every other agent and

523
00:16:27,279 --> 00:16:28,880
everybody starts not believing anything

524
00:16:28,880 --> 00:16:31,759
is true the simple mineral update

525
00:16:31,759 --> 00:16:34,160
guarantees that everybody will learn the

526
00:16:34,160 --> 00:16:36,560
true state as entirely again as long as

527
00:16:36,560 --> 00:16:38,160
everybody is following the correct

528
00:16:38,160 --> 00:16:39,120
algorithm

529
00:16:39,120 --> 00:16:40,639
and then this scary looking expression

530
00:16:40,639 --> 00:16:42,240
basically gives a convergence rate it

531
00:16:42,240 --> 00:16:44,720
just says the rate that you discard

532
00:16:44,720 --> 00:16:46,959
false hypothesis uh is going to be

533
00:16:46,959 --> 00:16:48,160
exponential you're going to discard

534
00:16:48,160 --> 00:16:50,480
false hypothesis exponentially fast at a

535
00:16:50,480 --> 00:16:52,320
rate that's given by the ability of the

536
00:16:52,320 --> 00:16:53,920
best agent in the network to distinguish

537
00:16:53,920 --> 00:16:55,920
those hypotheses okay

538
00:16:55,920 --> 00:16:57,600
uh i'm just putting it here for people

539
00:16:57,600 --> 00:16:59,120
who are quite familiar with you know

540
00:16:59,120 --> 00:17:00,720
information theory and this kind of

541
00:17:00,720 --> 00:17:02,399
reasoning but uh

542
00:17:02,399 --> 00:17:04,319
main takeaway is it works and it works

543
00:17:04,319 --> 00:17:06,400
fast

544
00:17:06,400 --> 00:17:07,599
okay

545
00:17:07,599 --> 00:17:09,119
so and again this is better than

546
00:17:09,119 --> 00:17:11,039
existing algorithms that

547
00:17:11,039 --> 00:17:11,839
don't

548
00:17:11,839 --> 00:17:14,240
reject this quite as quickly so here's a

549
00:17:14,240 --> 00:17:15,520
simple example right so this is a

550
00:17:15,520 --> 00:17:17,359
project done with sandia

551
00:17:17,359 --> 00:17:19,359
and this is sort of still a toy example

552
00:17:19,359 --> 00:17:21,199
but hopefully we'll kind of illustrate

553
00:17:21,199 --> 00:17:22,880
uh the performance of the algorithm

554
00:17:22,880 --> 00:17:25,039
suppose you have a bunch of drones that

555
00:17:25,039 --> 00:17:27,119
are monitoring a given area and they're

556
00:17:27,119 --> 00:17:29,039
looking for nuclear material being

557
00:17:29,039 --> 00:17:30,880
transported through a certain region

558
00:17:30,880 --> 00:17:33,520
right so there are four cells in this uh

559
00:17:33,520 --> 00:17:35,440
in this uh area and there are five

560
00:17:35,440 --> 00:17:36,960
possible states of the world okay

561
00:17:36,960 --> 00:17:38,480
there's no nuclear material being

562
00:17:38,480 --> 00:17:40,400
transported nuclear materials being

563
00:17:40,400 --> 00:17:42,160
transported through cell one or cell two

564
00:17:42,160 --> 00:17:43,679
or cell three or so four those are the

565
00:17:43,679 --> 00:17:45,200
five possible states

566
00:17:45,200 --> 00:17:47,360
and so these agents are moving around in

567
00:17:47,360 --> 00:17:49,360
their neighborhood they have sensors at

568
00:17:49,360 --> 00:17:50,720
their sensor locations that they're

569
00:17:50,720 --> 00:17:53,360
visiting to try and look for signatures

570
00:17:53,360 --> 00:17:55,360
of nuclear material they can talk to

571
00:17:55,360 --> 00:17:57,600
other agents within their own cell or to

572
00:17:57,600 --> 00:17:59,360
agents and adjacent cells but they can't

573
00:17:59,360 --> 00:18:02,240
talk diagonally okay and so that's this

574
00:18:02,240 --> 00:18:03,600
is the hypothesis testing problem that

575
00:18:03,600 --> 00:18:05,360
they're trying to solve which of these

576
00:18:05,360 --> 00:18:07,679
five states is true

577
00:18:07,679 --> 00:18:10,240
so here's uh a simulation here and so

578
00:18:10,240 --> 00:18:12,720
i'm going to be plotting the belief on

579
00:18:12,720 --> 00:18:14,720
the true state which is theta two right

580
00:18:14,720 --> 00:18:16,080
nuclear materials being transported

581
00:18:16,080 --> 00:18:18,960
through cell two uh on four uh three

582
00:18:18,960 --> 00:18:20,799
different agents in this network here

583
00:18:20,799 --> 00:18:23,679
the red curve is our algorithm a blue

584
00:18:23,679 --> 00:18:26,000
curve is uh and green curve are two

585
00:18:26,000 --> 00:18:27,679
different algorithms and we can see that

586
00:18:27,679 --> 00:18:30,000
algorithm does allow these agents to

587
00:18:30,000 --> 00:18:32,400
learn the true state rapidly

588
00:18:32,400 --> 00:18:36,080
okay faster than existing options

589
00:18:36,160 --> 00:18:38,320
okay so that's great so i told you look

590
00:18:38,320 --> 00:18:39,919
every day you wake up you talk to your

591
00:18:39,919 --> 00:18:41,360
friends you

592
00:18:41,360 --> 00:18:43,440
take the lowest belief that your friend

593
00:18:43,440 --> 00:18:45,120
any of your friends has on

594
00:18:45,120 --> 00:18:47,120
an emphasis you use that as your belief

595
00:18:47,120 --> 00:18:48,400
and you go from there and everybody's

596
00:18:48,400 --> 00:18:49,520
going to learn

597
00:18:49,520 --> 00:18:51,280
so that's great if everybody does what

598
00:18:51,280 --> 00:18:53,600
they're supposed to do but what happens

599
00:18:53,600 --> 00:18:56,080
if some friend of yours isn't following

600
00:18:56,080 --> 00:18:57,919
that algorithm right or if they put a

601
00:18:57,919 --> 00:19:00,480
very low belief on the true hypothesis

602
00:19:00,480 --> 00:19:02,960
without uh legitimate reasoning

603
00:19:02,960 --> 00:19:05,520
so here's an example where node five or

604
00:19:05,520 --> 00:19:07,440
agent five at a certain time step

605
00:19:07,440 --> 00:19:09,039
becomes malicious or starts acting

606
00:19:09,039 --> 00:19:11,200
maliciously and says i don't want the

607
00:19:11,200 --> 00:19:12,799
rest of the network to figure out that

608
00:19:12,799 --> 00:19:14,480
theta 2 is the true state right i don't

609
00:19:14,480 --> 00:19:16,240
want the rest of the network to figure

610
00:19:16,240 --> 00:19:17,679
out that material is being transported

611
00:19:17,679 --> 00:19:19,200
through here so i'm going to put a

612
00:19:19,200 --> 00:19:22,880
belief of 0 on that true state theta 2.

613
00:19:22,880 --> 00:19:25,039
well zero is the minimum possible belief

614
00:19:25,039 --> 00:19:26,559
everybody's going to adopt that belief

615
00:19:26,559 --> 00:19:28,160
and every very quickly everybody's

616
00:19:28,160 --> 00:19:30,960
belief on the true state goes to zero

617
00:19:30,960 --> 00:19:32,480
okay so you can see that this simple

618
00:19:32,480 --> 00:19:34,880
algorithm is very easily hijacked right

619
00:19:34,880 --> 00:19:37,840
by even a single agent that decides to

620
00:19:37,840 --> 00:19:39,840
spread misinformation about what's

621
00:19:39,840 --> 00:19:41,760
happening in the system

622
00:19:41,760 --> 00:19:42,960
that's not great

623
00:19:42,960 --> 00:19:44,880
so how do we make this resilient to

624
00:19:44,880 --> 00:19:46,480
these kinds of adversaries and

625
00:19:46,480 --> 00:19:48,799
misbehavior okay the nice thing is that

626
00:19:48,799 --> 00:19:51,039
the algorithm is easily extendable to to

627
00:19:51,039 --> 00:19:52,799
account for these kinds of things so

628
00:19:52,799 --> 00:19:54,559
we're going to consider a byzantine

629
00:19:54,559 --> 00:19:56,880
attack model where each compromised

630
00:19:56,880 --> 00:19:58,640
agent and network has complete knowledge

631
00:19:58,640 --> 00:20:01,200
of the system even potentially signals

632
00:20:01,200 --> 00:20:02,960
being received by the other agents it

633
00:20:02,960 --> 00:20:05,280
can act completely arbitrarily and we're

634
00:20:05,280 --> 00:20:06,480
going to assume

635
00:20:06,480 --> 00:20:08,880
an f local model okay and an f local

636
00:20:08,880 --> 00:20:11,520
model basically says each good guy in

637
00:20:11,520 --> 00:20:14,080
the network has at most f bad guys in

638
00:20:14,080 --> 00:20:16,080
its neighborhood okay so this

639
00:20:16,080 --> 00:20:17,679
potentially allows the entire network to

640
00:20:17,679 --> 00:20:19,440
have a huge number of bad guys right as

641
00:20:19,440 --> 00:20:21,120
long as they're no more than f in the

642
00:20:21,120 --> 00:20:23,280
neighborhood of any good node that's all

643
00:20:23,280 --> 00:20:24,720
we need

644
00:20:24,720 --> 00:20:26,720
and the regular the good agents that

645
00:20:26,720 --> 00:20:28,559
actually follow the algorithm will be

646
00:20:28,559 --> 00:20:31,678
denoted by the set r

647
00:20:31,760 --> 00:20:33,679
so when we have bad guys in the network

648
00:20:33,679 --> 00:20:35,600
there's actually two kinds of redundancy

649
00:20:35,600 --> 00:20:37,440
that we need in the system

650
00:20:37,440 --> 00:20:38,400
first

651
00:20:38,400 --> 00:20:39,120
remember that we're trying to

652
00:20:39,120 --> 00:20:40,559
distinguish between pairs of states

653
00:20:40,559 --> 00:20:42,240
right and we need agents that can

654
00:20:42,240 --> 00:20:44,559
distinguish between each pair of states

655
00:20:44,559 --> 00:20:47,280
if the good guy compromises all of the

656
00:20:47,280 --> 00:20:48,799
agents that can distinguish between a

657
00:20:48,799 --> 00:20:50,880
certain pair of states there's no hope

658
00:20:50,880 --> 00:20:52,320
of the other agents being able to

659
00:20:52,320 --> 00:20:53,760
distinguish between them right because

660
00:20:53,760 --> 00:20:55,919
everybody whose sensors are able to tell

661
00:20:55,919 --> 00:20:58,240
those states apart have been compromised

662
00:20:58,240 --> 00:20:59,760
so essentially you need information

663
00:20:59,760 --> 00:21:02,159
dependency you need enough agents in the

664
00:21:02,159 --> 00:21:03,600
network to be able to distinguish

665
00:21:03,600 --> 00:21:05,440
between a pair of states so that an f

666
00:21:05,440 --> 00:21:07,520
local set of bad guys can't just take

667
00:21:07,520 --> 00:21:08,799
them all out

668
00:21:08,799 --> 00:21:10,159
but that's not enough in this kind of

669
00:21:10,159 --> 00:21:11,919
situation maybe you do have a lot of

670
00:21:11,919 --> 00:21:13,600
agents that can tell apart pairs of

671
00:21:13,600 --> 00:21:15,679
states but off of all their information

672
00:21:15,679 --> 00:21:18,159
has to get funneled through a bottleneck

673
00:21:18,159 --> 00:21:19,919
in the network that's also a problem

674
00:21:19,919 --> 00:21:22,240
because the uh the malicious attackers

675
00:21:22,240 --> 00:21:24,080
could just compromise the bottleneck and

676
00:21:24,080 --> 00:21:25,840
prevent all that good information from

677
00:21:25,840 --> 00:21:28,480
that huge number of informative agents

678
00:21:28,480 --> 00:21:30,240
from propagating to the agents that

679
00:21:30,240 --> 00:21:31,840
actually need that information

680
00:21:31,840 --> 00:21:33,280
so you not only need information

681
00:21:33,280 --> 00:21:34,880
redundancy but you need communication

682
00:21:34,880 --> 00:21:37,120
redundancy so you need topological

683
00:21:37,120 --> 00:21:38,640
properties that account for both the

684
00:21:38,640 --> 00:21:40,320
information structure and the

685
00:21:40,320 --> 00:21:42,320
communication network structure

686
00:21:42,320 --> 00:21:44,240
okay i won't go into what that property

687
00:21:44,240 --> 00:21:46,159
is in the interest of time but we we

688
00:21:46,159 --> 00:21:47,600
introduced a new graph property that we

689
00:21:47,600 --> 00:21:48,880
call uh

690
00:21:48,880 --> 00:21:51,280
our robustness or strong our robustness

691
00:21:51,280 --> 00:21:53,280
to capture both of these redundancy

692
00:21:53,280 --> 00:21:54,720
requirements and if you're interested

693
00:21:54,720 --> 00:21:56,000
you're welcome to look at the paper i'm

694
00:21:56,000 --> 00:21:58,799
happy to chat with you through email

695
00:21:58,799 --> 00:22:00,640
so here's the idea so you know we've

696
00:22:00,640 --> 00:22:02,320
identified the need for redundancy we've

697
00:22:02,320 --> 00:22:05,440
identified properties that kind of

698
00:22:05,440 --> 00:22:07,760
capture the necessary redundancy and

699
00:22:07,760 --> 00:22:09,120
here's how we're going to modify the

700
00:22:09,120 --> 00:22:11,039
algorithm to make it resilient

701
00:22:11,039 --> 00:22:12,480
so each agent is still going to do his

702
00:22:12,480 --> 00:22:14,320
local bayesian update right that never

703
00:22:14,320 --> 00:22:16,159
requires interacting with anybody else

704
00:22:16,159 --> 00:22:17,760
so you continue to do that figure out

705
00:22:17,760 --> 00:22:19,760
what you can eliminate on your own

706
00:22:19,760 --> 00:22:22,240
and then when it comes time to

707
00:22:22,240 --> 00:22:24,080
uh updating its network belief right

708
00:22:24,080 --> 00:22:25,520
which incorporates information from

709
00:22:25,520 --> 00:22:27,679
information from neighbors if i have

710
00:22:27,679 --> 00:22:30,000
fewer than two f plus one neighbors i'm

711
00:22:30,000 --> 00:22:31,440
not going to do anything at that time

712
00:22:31,440 --> 00:22:32,559
step

713
00:22:32,559 --> 00:22:34,400
however if i have more than two f plus

714
00:22:34,400 --> 00:22:36,159
one neighbors remember in the previous

715
00:22:36,159 --> 00:22:38,080
version i gathered all my neighbors

716
00:22:38,080 --> 00:22:40,240
beliefs and i took the lowest one and i

717
00:22:40,240 --> 00:22:42,480
used that and i updated my belief with

718
00:22:42,480 --> 00:22:43,360
that

719
00:22:43,360 --> 00:22:44,640
here what i'm going to do is i'm going

720
00:22:44,640 --> 00:22:46,320
to reject expression beliefs so i'm

721
00:22:46,320 --> 00:22:48,320
going to look at all my friends opinions

722
00:22:48,320 --> 00:22:50,400
right their beliefs on that state i'm

723
00:22:50,400 --> 00:22:52,080
going to throw away the highest f and

724
00:22:52,080 --> 00:22:54,320
lowest f and then take the next smallest

725
00:22:54,320 --> 00:22:57,039
one the remaining smallest one okay so

726
00:22:57,039 --> 00:22:58,559
instead of taking the minimum value i'm

727
00:22:58,559 --> 00:23:00,559
gonna take the f plus first minimum

728
00:23:00,559 --> 00:23:02,799
value from this for my neighbors and i'm

729
00:23:02,799 --> 00:23:06,320
gonna use that in my update

730
00:23:06,320 --> 00:23:08,480
okay it's very simple hopefully and it

731
00:23:08,480 --> 00:23:10,000
turns out that under this redundancy

732
00:23:10,000 --> 00:23:11,840
condition that i identified and again

733
00:23:11,840 --> 00:23:14,400
just under nonzero priors and hypotheses

734
00:23:14,400 --> 00:23:16,559
all the good nodes are guaranteed again

735
00:23:16,559 --> 00:23:18,320
to learn the true state of the world and

736
00:23:18,320 --> 00:23:20,000
this is going to work regardless of the

737
00:23:20,000 --> 00:23:21,919
actions of any f local byzantine

738
00:23:21,919 --> 00:23:23,039
adversary

739
00:23:23,039 --> 00:23:25,120
okay so a very simple tweak where i just

740
00:23:25,120 --> 00:23:27,280
throw away extreme beliefs

741
00:23:27,280 --> 00:23:29,200
and then use the rest is going to

742
00:23:29,200 --> 00:23:31,600
guarantee a huge amount of resilience to

743
00:23:31,600 --> 00:23:33,600
potentially a very large number of

744
00:23:33,600 --> 00:23:35,039
adversaries in the network acting

745
00:23:35,039 --> 00:23:37,520
arbitrarily

746
00:23:37,520 --> 00:23:39,440
okay and so this is just an example

747
00:23:39,440 --> 00:23:41,520
again to illustrate that using you know

748
00:23:41,520 --> 00:23:43,520
this modified algorithm same setup as

749
00:23:43,520 --> 00:23:47,039
before where uh node becomes adversarial

750
00:23:47,039 --> 00:23:48,799
sets this belief on the true state to

751
00:23:48,799 --> 00:23:50,880
zero but now

752
00:23:50,880 --> 00:23:52,400
given that all the other agents in the

753
00:23:52,400 --> 00:23:54,720
network are suspicious right potentially

754
00:23:54,720 --> 00:23:56,559
worried about potential bad guys a

755
00:23:56,559 --> 00:23:58,960
single agent in this network has no hope

756
00:23:58,960 --> 00:24:02,840
of uh preventing the others from

757
00:24:02,840 --> 00:24:05,600
learning and so again with the red curve

758
00:24:05,600 --> 00:24:07,600
shows the rest of the agents are in fact

759
00:24:07,600 --> 00:24:10,000
converging to a belief of one on theta

760
00:24:10,000 --> 00:24:12,240
two

761
00:24:12,480 --> 00:24:14,400
um and you know so there are extensions

762
00:24:14,400 --> 00:24:16,400
to distributed reinforcement learning i

763
00:24:16,400 --> 00:24:18,480
think uh given in the interest of time i

764
00:24:18,480 --> 00:24:20,480
won't go too carefully through this but

765
00:24:20,480 --> 00:24:22,000
you know in the current setup that we

766
00:24:22,000 --> 00:24:23,360
looked at

767
00:24:23,360 --> 00:24:24,960
there are no real interactions with the

768
00:24:24,960 --> 00:24:26,960
environment other than observations but

769
00:24:26,960 --> 00:24:28,400
if you have reinforcement learning where

770
00:24:28,400 --> 00:24:29,840
agents are trying to figure out how to

771
00:24:29,840 --> 00:24:32,480
take actions in order to collectively

772
00:24:32,480 --> 00:24:35,520
optimize their costs uh of taking those

773
00:24:35,520 --> 00:24:37,679
actions and and control the system that

774
00:24:37,679 --> 00:24:39,760
they're all interacting with then

775
00:24:39,760 --> 00:24:41,279
essentially again you want them to

776
00:24:41,279 --> 00:24:42,799
interact with each other exchange

777
00:24:42,799 --> 00:24:44,799
information about the rewards or costs

778
00:24:44,799 --> 00:24:47,200
that they're seeing optimize sort of

779
00:24:47,200 --> 00:24:50,559
this long run uh cost function

780
00:24:50,559 --> 00:24:52,799
okay and so the you know reinforcement

781
00:24:52,799 --> 00:24:54,320
learning in general is about how do you

782
00:24:54,320 --> 00:24:56,960
update your policies which specify

783
00:24:56,960 --> 00:24:58,640
actions to take in any given state or

784
00:24:58,640 --> 00:25:00,559
time distributed reinforcement learning

785
00:25:00,559 --> 00:25:02,000
is how do you do that with multiple

786
00:25:02,000 --> 00:25:04,559
agents working together and in our case

787
00:25:04,559 --> 00:25:06,720
what happens if you have bad guys who

788
00:25:06,720 --> 00:25:09,039
are trying to make all the agents learn

789
00:25:09,039 --> 00:25:11,200
a bad policy right to potentially damage

790
00:25:11,200 --> 00:25:14,080
themselves or damage the system so again

791
00:25:14,080 --> 00:25:16,320
you know we propose a simple distributed

792
00:25:16,320 --> 00:25:18,799
q learning algorithm that uses this idea

793
00:25:18,799 --> 00:25:20,960
of local filtering right it throw away

794
00:25:20,960 --> 00:25:22,559
extreme values from your neighbors at

795
00:25:22,559 --> 00:25:24,720
each iteration use the rest in an

796
00:25:24,720 --> 00:25:27,120
appropriate sense and so we propose sort

797
00:25:27,120 --> 00:25:29,600
of q learning rules where you use local

798
00:25:29,600 --> 00:25:32,240
filtering to mitigate extreme behavior

799
00:25:32,240 --> 00:25:34,400
use consensus type terms to incorporate

800
00:25:34,400 --> 00:25:36,000
information from others and use

801
00:25:36,000 --> 00:25:38,000
innovation terms that account for local

802
00:25:38,000 --> 00:25:40,159
experiences and local costs and under

803
00:25:40,159 --> 00:25:42,960
appropriate conditions again on the

804
00:25:42,960 --> 00:25:45,760
network and the um

805
00:25:45,760 --> 00:25:47,039
adversarial agents and the cost

806
00:25:47,039 --> 00:25:48,960
structures and so forth we can show that

807
00:25:48,960 --> 00:25:51,039
this does enable learning okay and

808
00:25:51,039 --> 00:25:53,200
that's a paper that'll show up this year

809
00:25:53,200 --> 00:25:56,080
at the conference on decision control

810
00:25:56,080 --> 00:25:58,240
so that is samurai so you know we

811
00:25:58,240 --> 00:25:59,919
developed these resilient algorithms

812
00:25:59,919 --> 00:26:02,000
that enable agents and be these

813
00:26:02,000 --> 00:26:04,480
large-scale networks to learn um in

814
00:26:04,480 --> 00:26:06,000
various contexts despite these

815
00:26:06,000 --> 00:26:07,200
disadvantages of behavior and these

816
00:26:07,200 --> 00:26:08,799
algorithms are highly scalable right

817
00:26:08,799 --> 00:26:11,440
very simple operations uh they just rely

818
00:26:11,440 --> 00:26:12,960
on information from neighbors and very

819
00:26:12,960 --> 00:26:14,960
simple filtering operations where i'm

820
00:26:14,960 --> 00:26:17,120
ignoring extreme values and so forth you

821
00:26:17,120 --> 00:26:18,240
can tolerate a huge number of

822
00:26:18,240 --> 00:26:19,760
adversaries potentially depending on the

823
00:26:19,760 --> 00:26:21,679
network structure and these simple

824
00:26:21,679 --> 00:26:23,919
design principles transfer to a variety

825
00:26:23,919 --> 00:26:26,720
of learning and optimization scenarios

826
00:26:26,720 --> 00:26:28,559
with that i will stop thank you for

827
00:26:28,559 --> 00:26:30,879
listening

828
00:26:34,880 --> 00:26:36,960
charis thank you very much

829
00:26:36,960 --> 00:26:38,720
uh for those who are following that

830
00:26:38,720 --> 00:26:40,880
sharia says a link to his home page

831
00:26:40,880 --> 00:26:43,279
which hatch's contact information is in

832
00:26:43,279 --> 00:26:46,600
the chat

833
00:26:54,640 --> 00:26:56,720
you

