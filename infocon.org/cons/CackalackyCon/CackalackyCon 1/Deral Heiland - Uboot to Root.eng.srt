1
00:00:00,110 --> 00:00:04,500
so as we get started on this it's not an

2
00:00:02,700 --> 00:00:06,420
oversized crowd so if you have any

3
00:00:04,500 --> 00:00:08,039
questions I think we'd probably work

4
00:00:06,420 --> 00:00:09,929
them in I don't have a lot of slides

5
00:00:08,039 --> 00:00:13,500
just basically some introduction in some

6
00:00:09,929 --> 00:00:15,000
areas this is very demo intensive so the

7
00:00:13,500 --> 00:00:18,259
number area the number of things I want

8
00:00:15,000 --> 00:00:20,810
to cover one we're going to go ahead and

9
00:00:18,260 --> 00:00:23,220
let's see if I get the right one on here

10
00:00:20,810 --> 00:00:27,960
we're going to go over some basics on

11
00:00:23,220 --> 00:00:30,660
using a logic analyzer so that's always

12
00:00:27,960 --> 00:00:32,009
that's always kind of cool if I can get

13
00:00:30,660 --> 00:00:34,079
it hooked up properly when we get to

14
00:00:32,009 --> 00:00:35,969
that point if we can't then I get a

15
00:00:34,079 --> 00:00:37,890
video I always have videos because you

16
00:00:35,969 --> 00:00:41,730
never know when shits gonna go to hell

17
00:00:37,890 --> 00:00:43,200
in a handbasket so so I've been working

18
00:00:41,730 --> 00:00:44,398
on this presentation on and off and

19
00:00:43,200 --> 00:00:46,410
there's a few things that aren't 100%

20
00:00:44,399 --> 00:00:48,239
perfect I apologize for that it's kind

21
00:00:46,410 --> 00:00:50,429
of a work in progress and kind of worked

22
00:00:48,239 --> 00:00:52,620
out in a way of some stuff but we're

23
00:00:50,430 --> 00:00:54,210
gonna get all the basics covered and

24
00:00:52,620 --> 00:00:56,099
give you guys some stuff that you can go

25
00:00:54,210 --> 00:00:58,710
out of here with and hopefully do some

26
00:00:56,100 --> 00:01:01,350
cool and break some hardware and I

27
00:00:58,710 --> 00:01:04,199
know I got tons of broken hardware so

28
00:01:01,350 --> 00:01:07,799
nothing wrong with destroying it that's

29
00:01:04,199 --> 00:01:09,630
why they make garbage cans so the

30
00:01:07,799 --> 00:01:11,250
presentation today is you boot two

31
00:01:09,630 --> 00:01:13,798
routes so obviously we're going to cover

32
00:01:11,250 --> 00:01:16,619
some concepts around you boot some

33
00:01:13,799 --> 00:01:18,689
methods on some IOT to actually get into

34
00:01:16,619 --> 00:01:20,640
the u-boot console and then we're going

35
00:01:18,689 --> 00:01:23,119
to cover a couple of interesting things

36
00:01:20,640 --> 00:01:25,619
you can do I have two different videos

37
00:01:23,119 --> 00:01:26,759
accessing you boots very similar and

38
00:01:25,619 --> 00:01:29,280
then I'm going to do something outside

39
00:01:26,759 --> 00:01:31,409
of the u-boot also it's something you

40
00:01:29,280 --> 00:01:33,570
often deserve when you get a console on

41
00:01:31,409 --> 00:01:35,549
a better hardware a consumer grace one

42
00:01:33,570 --> 00:01:38,548
that often shows up and I want to show

43
00:01:35,549 --> 00:01:40,049
that also so hopefully this works out

44
00:01:38,549 --> 00:01:43,229
and we get through all the demos without

45
00:01:40,049 --> 00:01:52,420
any major glitches so let's start off

46
00:01:43,229 --> 00:01:54,700
with getting new batteries well

47
00:01:52,420 --> 00:01:56,440
it's first one so the first thing we

48
00:01:54,700 --> 00:02:00,610
want to cover what is what is you boot

49
00:01:56,440 --> 00:02:04,539
so you boot you boot is a in the United

50
00:02:00,610 --> 00:02:08,800
States you boot is not a submarine in

51
00:02:04,540 --> 00:02:10,479
Germany you put is submarine so a

52
00:02:08,800 --> 00:02:12,880
universal boot loader is what we're

53
00:02:10,479 --> 00:02:15,160
talking about and it's used a low it's

54
00:02:12,880 --> 00:02:18,160
loaded from flash memory and it loads up

55
00:02:15,160 --> 00:02:20,140
and it calls another storage area or

56
00:02:18,160 --> 00:02:22,329
maybe the same storage area and loads

57
00:02:20,140 --> 00:02:24,309
the operating system or kernel in the

58
00:02:22,330 --> 00:02:27,160
memory and executed to move from there

59
00:02:24,310 --> 00:02:29,140
you can often access this via serial

60
00:02:27,160 --> 00:02:31,510
connections so that's why we're going to

61
00:02:29,140 --> 00:02:34,359
use the logic analyzer to dig in to

62
00:02:31,510 --> 00:02:36,519
identify a serial connection and then we

63
00:02:34,360 --> 00:02:37,420
get into it has a very minimal command

64
00:02:36,519 --> 00:02:39,519
set so you're going to see all the

65
00:02:37,420 --> 00:02:40,839
command set you're going to see looking

66
00:02:39,519 --> 00:02:42,519
at the environment we're going to alter

67
00:02:40,840 --> 00:02:43,840
environment variables on the device

68
00:02:42,519 --> 00:02:45,790
we're going to write them back to the

69
00:02:43,840 --> 00:02:51,519
device so we get it to do certain things

70
00:02:45,790 --> 00:02:55,209
that we want to do so why do you want to

71
00:02:51,519 --> 00:02:58,180
attack you boot other than because you

72
00:02:55,209 --> 00:02:59,860
can freaking do it often you want to

73
00:02:58,180 --> 00:03:01,209
gain root access why do I want to gain

74
00:02:59,860 --> 00:03:03,640
root access typically there's two

75
00:03:01,209 --> 00:03:06,489
reasons for that if I gain root access I

76
00:03:03,640 --> 00:03:08,078
can actually monitor the running

77
00:03:06,489 --> 00:03:09,700
application running code on the system

78
00:03:08,079 --> 00:03:11,079
it gives me more insight and what's

79
00:03:09,700 --> 00:03:13,450
going on if we want to do further

80
00:03:11,079 --> 00:03:15,579
testing looking for bugs vulnerabilities

81
00:03:13,450 --> 00:03:17,440
and things like that it's also great for

82
00:03:15,579 --> 00:03:19,360
extracting firmware if I want to get a

83
00:03:17,440 --> 00:03:20,799
firmware off the device there's a number

84
00:03:19,360 --> 00:03:22,180
of ways to do it I could pull the chip

85
00:03:20,799 --> 00:03:24,310
off the device I may be able to use a

86
00:03:22,180 --> 00:03:25,900
reader on the device or if I can get

87
00:03:24,310 --> 00:03:29,079
root level access and there's an

88
00:03:25,900 --> 00:03:30,850
expiration means either USB or our

89
00:03:29,079 --> 00:03:33,760
network we can go ahead and make calls

90
00:03:30,850 --> 00:03:36,340
right too often the block devices on the

91
00:03:33,760 --> 00:03:38,950
on the system and actually do dd copies

92
00:03:36,340 --> 00:03:41,320
off and with DD copies we can also alter

93
00:03:38,950 --> 00:03:43,510
that data even if it's a non writable

94
00:03:41,320 --> 00:03:45,120
filesystem bring them back in we're not

95
00:03:43,510 --> 00:03:48,548
going to do this but bring them back in

96
00:03:45,120 --> 00:03:53,109
unload the filesystem rewrite the actual

97
00:03:48,549 --> 00:03:54,190
chip the block device with DD and alter

98
00:03:53,109 --> 00:03:56,019
the device which is what we did last

99
00:03:54,190 --> 00:03:57,730
year was kind of the hard way if anyone

100
00:03:56,019 --> 00:03:59,350
was in that presentation we actually

101
00:03:57,730 --> 00:04:02,738
pulled an embedded multimedia controller

102
00:03:59,350 --> 00:04:06,040
and we actually did that here showing

103
00:04:02,739 --> 00:04:08,769
how to do that so you can alter firmware

104
00:04:06,040 --> 00:04:10,659
you install your own perform for

105
00:04:08,769 --> 00:04:12,510
firmware if you want to alter the device

106
00:04:10,659 --> 00:04:16,988
and use it for some other purpose I

107
00:04:12,510 --> 00:04:19,329
don't wanna keep using that damn it so

108
00:04:16,988 --> 00:04:21,039
so in the beginning understanding and

109
00:04:19,329 --> 00:04:23,229
identifying so before if you're gonna

110
00:04:21,039 --> 00:04:24,310
get into hardware the first thing you

111
00:04:23,229 --> 00:04:27,039
want to do is start understanding

112
00:04:24,310 --> 00:04:31,120
hardware and often one of the best ways

113
00:04:27,039 --> 00:04:34,270
to do that is literally tear the devices

114
00:04:31,120 --> 00:04:35,919
down let's start looking at them so we

115
00:04:34,270 --> 00:04:41,198
have a number on this one happens to be

116
00:04:35,919 --> 00:04:43,780
a luma luma is a mesh device it does

117
00:04:41,199 --> 00:04:45,520
Wi-Fi and Bluetooth I use this example

118
00:04:43,780 --> 00:04:47,320
because I had a number of

119
00:04:45,520 --> 00:04:50,440
characteristics that I wanted to show

120
00:04:47,320 --> 00:04:52,030
and demo this evening so we can easily

121
00:04:50,440 --> 00:04:53,710
look into that so I always encourage

122
00:04:52,030 --> 00:04:55,690
people to go out and get your hands on

123
00:04:53,710 --> 00:04:58,330
hardware just by any hard work go to go

124
00:04:55,690 --> 00:05:01,030
to a secondhand store buy junk off eBay

125
00:04:58,330 --> 00:05:03,159
and before you start hooking stuff up to

126
00:05:01,030 --> 00:05:05,948
it and doing all this crazy stuff just

127
00:05:03,160 --> 00:05:07,539
learn what's there open the device up

128
00:05:05,949 --> 00:05:09,009
and look at it let's get into

129
00:05:07,539 --> 00:05:10,510
identifying is there a place where

130
00:05:09,009 --> 00:05:12,760
there's a header where it can

131
00:05:10,510 --> 00:05:14,740
potentially connect our tools into the

132
00:05:12,760 --> 00:05:16,780
system to identify what's going on there

133
00:05:14,740 --> 00:05:19,620
where are the memory chips this happens

134
00:05:16,780 --> 00:05:22,000
to be a NAND flash chip it's a SPI

135
00:05:19,620 --> 00:05:24,220
serial peripheral interface type device

136
00:05:22,000 --> 00:05:27,970
this over here is a controller for the

137
00:05:24,220 --> 00:05:30,340
Ethernet this here being an arm ipq 4018

138
00:05:27,970 --> 00:05:32,229
is a Wi-Fi chip you can go out and pull

139
00:05:30,340 --> 00:05:34,570
down the data sheets on all these

140
00:05:32,229 --> 00:05:36,159
particular devices and look at it before

141
00:05:34,570 --> 00:05:38,169
you put power to it before you do

142
00:05:36,159 --> 00:05:40,030
anything understand what's going on

143
00:05:38,169 --> 00:05:43,240
behind the scenes learn to identify that

144
00:05:40,030 --> 00:05:45,340
because it's often very similar in

145
00:05:43,240 --> 00:05:46,750
nature as you start digging into these

146
00:05:45,340 --> 00:05:48,369
devices and there's structure of the

147
00:05:46,750 --> 00:05:50,289
chipsets the type of data things you're

148
00:05:48,370 --> 00:05:53,919
looking at so you want to be able to do

149
00:05:50,289 --> 00:05:55,539
that pop off these shields the only

150
00:05:53,919 --> 00:05:59,770
thing you need these shields for is to

151
00:05:55,539 --> 00:06:02,130
meet FCC regulations and we know where

152
00:05:59,770 --> 00:06:02,130
that's going

153
00:06:02,499 --> 00:06:07,580
so pop all these shields off often often

154
00:06:05,930 --> 00:06:11,810
I'll pop the shields off I think we have

155
00:06:07,580 --> 00:06:14,359
I think this one actually has me pull

156
00:06:11,810 --> 00:06:16,310
this off here this has a jumper wire on

157
00:06:14,360 --> 00:06:17,810
just ignore that pass it around so you

158
00:06:16,310 --> 00:06:19,189
can look in you can look into the device

159
00:06:17,810 --> 00:06:21,169
and underneath here happens to be the

160
00:06:19,189 --> 00:06:23,240
RAM chips one of the easiest way to

161
00:06:21,169 --> 00:06:24,799
identify the RAM chips is you see all

162
00:06:23,240 --> 00:06:26,689
these squiggly lines there's no straight

163
00:06:24,800 --> 00:06:29,569
hole shot lines going to the actual chip

164
00:06:26,689 --> 00:06:31,669
they're all squiggly communication the

165
00:06:29,569 --> 00:06:33,590
RAM chip is in parallel that all has to

166
00:06:31,669 --> 00:06:36,770
get there at the same time thus they

167
00:06:33,590 --> 00:06:38,090
actually function as delay functionality

168
00:06:36,770 --> 00:06:40,008
to be able to read and write to the RAM

169
00:06:38,090 --> 00:06:41,989
chip so if you actually look at this

170
00:06:40,009 --> 00:06:43,400
underneath that I'll pass it around you

171
00:06:41,990 --> 00:06:45,969
can actually see all those squiggly

172
00:06:43,400 --> 00:06:54,080
lines so it's a quick way to identify

173
00:06:45,969 --> 00:06:55,729
standard RAM chips on a device so we're

174
00:06:54,080 --> 00:06:57,229
at a point where we're getting into

175
00:06:55,729 --> 00:07:01,068
basics there's a number of tools that

176
00:06:57,229 --> 00:07:04,580
you can use to actually identify serial

177
00:07:01,069 --> 00:07:05,839
communications which is a console you

178
00:07:04,580 --> 00:07:07,609
want to get on the device and it's you

179
00:07:05,839 --> 00:07:09,830
are universal asynchronous receive

180
00:07:07,610 --> 00:07:12,729
transmit there's a number of tools of

181
00:07:09,830 --> 00:07:15,258
doing that you can go out by jtagulator

182
00:07:12,729 --> 00:07:16,699
160 bucks or something like that but

183
00:07:15,259 --> 00:07:19,639
this has other means to you can use this

184
00:07:16,699 --> 00:07:21,110
for testing for JTAG so what it does is

185
00:07:19,639 --> 00:07:22,759
you hook this up to all the pins and

186
00:07:21,110 --> 00:07:25,849
I'll go through a series of sequences

187
00:07:22,759 --> 00:07:28,189
and it'll send data to those and try to

188
00:07:25,849 --> 00:07:29,750
get a response back and it'll do it with

189
00:07:28,189 --> 00:07:32,000
all the different pins at all the

190
00:07:29,750 --> 00:07:33,949
different ball rate speeds to try to

191
00:07:32,000 --> 00:07:36,500
identify which ones read which ones

192
00:07:33,949 --> 00:07:38,089
right and what the ball rate is so it's

193
00:07:36,500 --> 00:07:40,009
it's it's somewhat convenient and it

194
00:07:38,089 --> 00:07:42,259
works pretty good you can also use a

195
00:07:40,009 --> 00:07:45,500
multimeter and actually measure voltage

196
00:07:42,259 --> 00:07:47,120
on it and I've seen people talk about

197
00:07:45,500 --> 00:07:49,550
that I actually think that sucks

198
00:07:47,120 --> 00:07:52,460
come on there's a lot better ways of

199
00:07:49,550 --> 00:07:54,710
actually doing it that is the cheapest

200
00:07:52,460 --> 00:07:56,539
way for sure but it's not a guarantee of

201
00:07:54,710 --> 00:07:59,659
what you're actually looking for another

202
00:07:56,539 --> 00:08:03,020
way is a logic analyzer now you can get

203
00:07:59,659 --> 00:08:06,379
these in different price ranges this one

204
00:08:03,020 --> 00:08:09,198
here is like a $700 one it's eight

205
00:08:06,379 --> 00:08:11,539
channels 100 mega psych 100 megahertz

206
00:08:09,199 --> 00:08:14,120
sampling rate so it's pretty pretty high

207
00:08:11,539 --> 00:08:18,469
in this one unfortunately they quit

208
00:08:14,120 --> 00:08:20,000
making this was a there for I don't

209
00:08:18,469 --> 00:08:22,399
remember what the sampling rate is it's

210
00:08:20,000 --> 00:08:25,969
a four connector one this used to be

211
00:08:22,399 --> 00:08:28,430
like 99 bucks so it used to be cheap I'm

212
00:08:25,969 --> 00:08:30,769
not sure but sale a when they quit

213
00:08:28,430 --> 00:08:33,440
producing this told me they had a

214
00:08:30,769 --> 00:08:35,870
freaking pile of these things

215
00:08:33,440 --> 00:08:37,039
in the warehouse because I contacted and

216
00:08:35,870 --> 00:08:39,769
bitching about them because I want to

217
00:08:37,039 --> 00:08:43,370
teach for training purposes so they sold

218
00:08:39,769 --> 00:08:45,170
me six of them for like 50 bucks so that

219
00:08:43,370 --> 00:08:46,579
is an option to reach out and say hey do

220
00:08:45,170 --> 00:08:48,920
you still have that I'm trying to learn

221
00:08:46,579 --> 00:08:50,149
and I'm looking to use your product this

222
00:08:48,920 --> 00:08:51,649
is one of the better products but

223
00:08:50,149 --> 00:08:54,230
there's a number of cheap ones out there

224
00:08:51,649 --> 00:08:57,529
that work pretty good and I'd recommend

225
00:08:54,230 --> 00:09:00,470
this is the best way for doing analysis

226
00:08:57,529 --> 00:09:02,329
looking for UART connections also using

227
00:09:00,470 --> 00:09:04,399
the tool we're gonna show and I'll show

228
00:09:02,329 --> 00:09:06,170
some of the stuff in it there's like 20

229
00:09:04,399 --> 00:09:09,079
different decode protocols in the

230
00:09:06,170 --> 00:09:13,000
application that you can actually use

231
00:09:09,079 --> 00:09:15,769
everything from CANbus spi uart

232
00:09:13,000 --> 00:09:18,079
the list goes on and on and on it comes

233
00:09:15,769 --> 00:09:20,930
in really handy for doing various other

234
00:09:18,079 --> 00:09:22,729
circuit analysis on the device but it's

235
00:09:20,930 --> 00:09:24,349
great for figuring out what you are if

236
00:09:22,730 --> 00:09:26,810
it's UART and what the pinout is and

237
00:09:24,350 --> 00:09:30,829
what the bald rate is fairly quick with

238
00:09:26,810 --> 00:09:34,339
very little effort so the first thing

239
00:09:30,829 --> 00:09:37,880
you want to do is do a demo and let's

240
00:09:34,339 --> 00:09:41,709
see if this will actually work any

241
00:09:37,880 --> 00:09:41,709
questions while I'm fumbling around here

242
00:09:43,180 --> 00:09:49,329
Universal asynchronous received transmit

243
00:09:45,890 --> 00:09:49,329
it's a serial console

244
00:09:50,749 --> 00:10:00,360
I'll use the expensive one because

245
00:09:53,399 --> 00:10:01,769
that's why serial interface when you're

246
00:10:00,360 --> 00:10:04,470
looking for serial interfaces you can

247
00:10:01,769 --> 00:10:07,439
often find those on a lot of the MC use

248
00:10:04,470 --> 00:10:08,459
or the processors you also saw find you

249
00:10:07,439 --> 00:10:10,379
aren't used for internship

250
00:10:08,459 --> 00:10:12,689
communications like if you have a

251
00:10:10,379 --> 00:10:14,999
Bluetooth chip on a board and you have a

252
00:10:12,689 --> 00:10:18,748
processor whether it's a Wi-Fi processor

253
00:10:14,999 --> 00:10:20,429
or a standalone microcontroller they

254
00:10:18,749 --> 00:10:22,019
actually communicate to each other over

255
00:10:20,429 --> 00:10:23,970
UART and that seems to be the standard

256
00:10:22,019 --> 00:10:25,139
and that's internship communication so

257
00:10:23,970 --> 00:10:27,809
you can look at that and decode that

258
00:10:25,139 --> 00:10:29,999
information there but it's often on a

259
00:10:27,809 --> 00:10:33,569
lot of the microcontrollers and

260
00:10:29,999 --> 00:10:36,059
controllers either by default or can be

261
00:10:33,569 --> 00:10:37,969
defined via GPIO general purpose input

262
00:10:36,059 --> 00:10:40,679
output and that's usually done

263
00:10:37,970 --> 00:10:42,209
programmatically on devices and a lot of

264
00:10:40,679 --> 00:10:44,249
vendors will do that they'll have

265
00:10:42,209 --> 00:10:46,049
consoles almost most of the devices I

266
00:10:44,249 --> 00:10:48,299
open up have some form of console if

267
00:10:46,049 --> 00:10:50,279
especially if they have a full operating

268
00:10:48,299 --> 00:10:52,350
system some type you know some full

269
00:10:50,279 --> 00:11:04,139
embedded operating system you're able to

270
00:10:52,350 --> 00:11:05,879
do that ok let's come over here and it's

271
00:11:04,139 --> 00:11:07,230
all about time I'm gonna get through

272
00:11:05,879 --> 00:11:10,589
this in time we're not going to get

273
00:11:07,230 --> 00:11:15,110
through this a talk okay so on the four

274
00:11:10,589 --> 00:11:19,949
channel one let's go ahead and wrong and

275
00:11:15,110 --> 00:11:22,319
let me jump over here to this right here

276
00:11:19,949 --> 00:11:24,719
so you can see the device so hopefully

277
00:11:22,319 --> 00:11:28,439
everyone can see that does it look good

278
00:11:24,720 --> 00:11:31,619
behind me can you see it okay so maybe a

279
00:11:28,439 --> 00:11:35,879
little focus issues I like this camera

280
00:11:31,619 --> 00:11:36,509
but it has its own little issues okay

281
00:11:35,879 --> 00:11:39,299
it's good enough

282
00:11:36,509 --> 00:11:41,970
so everything's gonna be backwards from

283
00:11:39,299 --> 00:11:43,739
what I'm looking at so we can see right

284
00:11:41,970 --> 00:11:44,850
here is the actual pins these are kind

285
00:11:43,739 --> 00:11:47,100
of high pins where we've actually

286
00:11:44,850 --> 00:11:49,559
soldered the board we'll just have four

287
00:11:47,100 --> 00:11:51,929
holes in it it'll be typically 2.5 4

288
00:11:49,559 --> 00:11:53,219
millimeters so you can buy strips of

289
00:11:51,929 --> 00:11:54,569
those you can break off stick them in

290
00:11:53,220 --> 00:11:57,749
and solder min to get the headers

291
00:11:54,569 --> 00:11:59,939
working and then what we need to do is I

292
00:11:57,749 --> 00:12:03,299
know that the first one on here the very

293
00:11:59,939 --> 00:12:04,380
first one right here is a ground pin and

294
00:12:03,299 --> 00:12:06,350
the way we do that is we

295
00:12:04,380 --> 00:12:08,850
a multimeter and we check it against

296
00:12:06,350 --> 00:12:11,610
like in this case these ground lugs that

297
00:12:08,850 --> 00:12:13,020
go to the ground plane on the device we

298
00:12:11,610 --> 00:12:15,810
checked to see does it ring out with a

299
00:12:13,020 --> 00:12:17,910
multimeter so it's actually ground so

300
00:12:15,810 --> 00:12:19,829
once you identify ground you want to

301
00:12:17,910 --> 00:12:23,579
actually hook the ground ones to it so

302
00:12:19,830 --> 00:12:27,360
in this case here the lower wires on

303
00:12:23,580 --> 00:12:29,700
these rigs all black on the bottom of

304
00:12:27,360 --> 00:12:32,370
course they made the first line black

305
00:12:29,700 --> 00:12:33,750
too which sucks but the head on it's

306
00:12:32,370 --> 00:12:36,930
actually black so that's a ground line

307
00:12:33,750 --> 00:12:43,560
so if we can get my blindness to

308
00:12:36,930 --> 00:12:47,989
actually see this thing dark and of

309
00:12:43,560 --> 00:12:47,989
course watch old man fumble around here

310
00:12:48,710 --> 00:12:56,730
and we got black brown black brown and

311
00:12:54,510 --> 00:12:58,620
red we got four channels we're gonna

312
00:12:56,730 --> 00:13:01,110
look at three channels on this thing I

313
00:12:58,620 --> 00:13:03,120
wouldn't really typically worry about

314
00:13:01,110 --> 00:13:07,110
the order you can figure that out once

315
00:13:03,120 --> 00:13:08,790
you're seeing the communications so so

316
00:13:07,110 --> 00:13:10,950
what we're looking for a serial and off

317
00:13:08,790 --> 00:13:14,130
to check these not all of the headers

318
00:13:10,950 --> 00:13:16,140
that you find will have a UART on it

319
00:13:14,130 --> 00:13:18,420
they could easily be a JTAG connection

320
00:13:16,140 --> 00:13:21,120
or some other in circa serial program

321
00:13:18,420 --> 00:13:22,890
connection so we have that hooked up so

322
00:13:21,120 --> 00:13:25,290
that what we want to do is jump over

323
00:13:22,890 --> 00:13:28,350
here to I believe this one and it did

324
00:13:25,290 --> 00:13:31,680
detect it my device so we know that's

325
00:13:28,350 --> 00:13:34,410
good and this program is called logic

326
00:13:31,680 --> 00:13:37,140
sail a logic this varenka probably needs

327
00:13:34,410 --> 00:13:38,969
updated it's 1.2 but if we come over

328
00:13:37,140 --> 00:13:40,890
here we can actually set things so we

329
00:13:38,970 --> 00:13:43,080
can set the sampling rates and how long

330
00:13:40,890 --> 00:13:46,199
we want this to runs so we go ahead and

331
00:13:43,080 --> 00:13:48,630
set this for 20 seconds on mine I can

332
00:13:46,200 --> 00:13:52,620
have up to eight channels on this one so

333
00:13:48,630 --> 00:13:56,310
once we get that set at 20 seconds you

334
00:13:52,620 --> 00:13:58,980
get a power plug over here and we're

335
00:13:56,310 --> 00:14:00,959
going to go ahead and start this once it

336
00:13:58,980 --> 00:14:03,300
started I'm going to put power to it

337
00:14:00,960 --> 00:14:05,670
so if I had a power strip on and

338
00:14:03,300 --> 00:14:09,870
apparently I don't have the power strip

339
00:14:05,670 --> 00:14:11,729
on so let's turn it on okay so now we

340
00:14:09,870 --> 00:14:13,470
got all the balloonists on the backside

341
00:14:11,730 --> 00:14:16,670
of this and it's running and we should

342
00:14:13,470 --> 00:14:16,670
capture some stuff here

343
00:14:17,430 --> 00:14:22,290
so once it's done running you can use up

344
00:14:20,130 --> 00:14:23,400
and down arrow keys to look at this

345
00:14:22,290 --> 00:14:27,360
stuff and we can see we have

346
00:14:23,400 --> 00:14:28,760
communication on channel zero usually

347
00:14:27,360 --> 00:14:32,070
when I see this and I only see one

348
00:14:28,760 --> 00:14:34,080
channel doing that and not like all four

349
00:14:32,070 --> 00:14:34,350
of them with similar communications on

350
00:14:34,080 --> 00:14:36,300
it

351
00:14:34,350 --> 00:14:39,530
now you usually quickly identify that

352
00:14:36,300 --> 00:14:42,750
this happens to be potentially you are

353
00:14:39,530 --> 00:14:45,930
so what we can do is and as I mentioned

354
00:14:42,750 --> 00:14:47,640
with the analyzers you have a number of

355
00:14:45,930 --> 00:14:51,630
different analyzers let's see if we can

356
00:14:47,640 --> 00:14:53,630
show all the different analyzers let's

357
00:14:51,630 --> 00:14:55,620
see get this up so you guys can see it

358
00:14:53,630 --> 00:14:58,130
so we can see all the different

359
00:14:55,620 --> 00:15:03,230
analyzers have happened to be available

360
00:14:58,130 --> 00:15:05,580
for decoding so it's a fairly decent set

361
00:15:03,230 --> 00:15:07,860
sometimes you can actually pick up other

362
00:15:05,580 --> 00:15:13,730
decoders available as kind of plug-in

363
00:15:07,860 --> 00:15:13,730
type functionality come back down here

364
00:15:13,790 --> 00:15:20,640
and what we're gonna do is we are going

365
00:15:17,040 --> 00:15:23,339
to set up an async of course I managed

366
00:15:20,640 --> 00:15:25,080
to lose my freaking glasses okay

367
00:15:23,340 --> 00:15:26,850
and we know it's channel 1 so we're

368
00:15:25,080 --> 00:15:29,280
going to go ahead and set to channel 1

369
00:15:26,850 --> 00:15:31,770
the next thing is the bold rate so how

370
00:15:29,280 --> 00:15:34,319
do you determine the bald rate there's a

371
00:15:31,770 --> 00:15:36,420
number of ways to doing it one way is we

372
00:15:34,320 --> 00:15:37,950
can blow this thing out and logic gives

373
00:15:36,420 --> 00:15:40,729
you ability to take a measurement so you

374
00:15:37,950 --> 00:15:43,770
can take a measurement of the shortest

375
00:15:40,730 --> 00:15:45,570
pulse in there take what that

376
00:15:43,770 --> 00:15:47,670
measurement is in microseconds and

377
00:15:45,570 --> 00:15:49,110
divide it into one you're gonna come up

378
00:15:47,670 --> 00:15:52,199
with a number that's going to be

379
00:15:49,110 --> 00:15:53,790
basically the ball rate are close it's

380
00:15:52,200 --> 00:15:55,050
not 100% accurate it's close you're

381
00:15:53,790 --> 00:15:57,420
gonna land mostly at one of the

382
00:15:55,050 --> 00:15:59,010
standards so you have a whole bunch of

383
00:15:57,420 --> 00:16:00,420
standards so you can Google standard

384
00:15:59,010 --> 00:16:03,450
Baldrige so you're gonna get a list up

385
00:16:00,420 --> 00:16:06,060
and running from 9600 up to 200 I

386
00:16:03,450 --> 00:16:08,810
believe or 200 and something but IOT

387
00:16:06,060 --> 00:16:12,680
typically falls into two general areas

388
00:16:08,810 --> 00:16:14,339
90% of the time or more and that is

389
00:16:12,680 --> 00:16:18,150
57600

390
00:16:14,340 --> 00:16:19,740
and the other one is 1 1 5 200 so I just

391
00:16:18,150 --> 00:16:22,350
pick you know it's guess it didn't work

392
00:16:19,740 --> 00:16:25,110
change it there's only so many options

393
00:16:22,350 --> 00:16:26,880
and if none of those work then you may

394
00:16:25,110 --> 00:16:28,860
have to dig a little do do a little math

395
00:16:26,880 --> 00:16:31,110
if somebody's some vendor decided he

396
00:16:28,860 --> 00:16:33,510
wanted to get weird and play with you

397
00:16:31,110 --> 00:16:36,990
head by creating weird things I had one

398
00:16:33,510 --> 00:16:38,550
device as an example it actually changed

399
00:16:36,990 --> 00:16:41,130
a number of these other settings so

400
00:16:38,550 --> 00:16:43,260
let's expand this out so you can see it

401
00:16:41,130 --> 00:16:45,839
so you have eight bits one stop no

402
00:16:43,260 --> 00:16:47,490
parity I had one vendor that as the

403
00:16:45,839 --> 00:16:49,860
system booted up you can see the whole

404
00:16:47,490 --> 00:16:53,880
boot process and when it loaded kernel

405
00:16:49,860 --> 00:16:55,680
it changed the parity bit that took me

406
00:16:53,880 --> 00:16:57,390
freaking a whole day to figure out what

407
00:16:55,680 --> 00:16:59,430
the hell was going on I'm like this

408
00:16:57,390 --> 00:17:01,920
makes absolutely no sense I know this is

409
00:16:59,430 --> 00:17:03,959
UART I know what's going on why is this

410
00:17:01,920 --> 00:17:05,730
changing I'm I'm getting gibberish all

411
00:17:03,959 --> 00:17:08,609
of a sudden but I eventually got that

412
00:17:05,730 --> 00:17:13,319
figured out so we're going to go ahead

413
00:17:08,609 --> 00:17:14,879
and set this to 1 1 5 200 and we're

414
00:17:13,319 --> 00:17:17,849
going to go ahead and save that out and

415
00:17:14,880 --> 00:17:20,040
it should decode so if we go ahead and

416
00:17:17,849 --> 00:17:22,619
we expand this out and we see that line

417
00:17:20,040 --> 00:17:26,280
up there we can see that we've actually

418
00:17:22,619 --> 00:17:29,070
decode this data so we have these

419
00:17:26,280 --> 00:17:31,350
characters if we come over to the right

420
00:17:29,070 --> 00:17:35,428
hand side we can see it all over here so

421
00:17:31,350 --> 00:17:38,189
we can see it's saying format so format

422
00:17:35,429 --> 00:17:42,330
logic and we can see that now we do have

423
00:17:38,190 --> 00:17:46,500
a true serial connection and we've

424
00:17:42,330 --> 00:17:50,178
actually decoded it as you are standard

425
00:17:46,500 --> 00:17:52,470
async communication any questions I

426
00:17:50,179 --> 00:17:54,480
would recommend if you're interested in

427
00:17:52,470 --> 00:17:57,240
hardware get one either try to track

428
00:17:54,480 --> 00:17:59,940
down to use sale a I love these they're

429
00:17:57,240 --> 00:18:03,390
great devices I do not own stock in the

430
00:17:59,940 --> 00:18:05,400
company you're not quite sure the

431
00:18:03,390 --> 00:18:07,650
cheapest one right now is around 300 so

432
00:18:05,400 --> 00:18:09,780
it's a fairly heavy cost point our price

433
00:18:07,650 --> 00:18:12,000
point but I think you could probably

434
00:18:09,780 --> 00:18:13,590
track down one of the smaller force and

435
00:18:12,000 --> 00:18:15,120
you could always contact them and say

436
00:18:13,590 --> 00:18:17,459
hey you know I'm trying to learn this

437
00:18:15,120 --> 00:18:18,899
stuff and I'm really entry-level they

438
00:18:17,460 --> 00:18:20,640
may sell you one at ninety bucks they

439
00:18:18,900 --> 00:18:22,559
may actually go cheaper I don't know if

440
00:18:20,640 --> 00:18:24,360
they happen to still have them so I

441
00:18:22,559 --> 00:18:28,470
would not pass up that opportunity to

442
00:18:24,360 --> 00:18:33,928
give that a try so the next thing we

443
00:18:28,470 --> 00:18:36,390
want to do is now that we've done that

444
00:18:33,929 --> 00:18:38,100
let's go ahead and disconnect that and

445
00:18:36,390 --> 00:18:44,750
then what we're going to do is we're

446
00:18:38,100 --> 00:18:44,750
going to go over to a chakra chakra

447
00:18:44,880 --> 00:18:49,110
to get here so here's a Chikara shikre

448
00:18:47,340 --> 00:18:51,570
is a small device and you could do a

449
00:18:49,110 --> 00:18:54,629
number of different things with this you

450
00:18:51,570 --> 00:18:58,019
can do spi you can do some JTAG stuff

451
00:18:54,630 --> 00:19:00,509
you use an open OCD I don't use it for

452
00:18:58,019 --> 00:19:02,789
none of those because I'm lazy so I buy

453
00:19:00,509 --> 00:19:05,750
the right tools but this thing is

454
00:19:02,789 --> 00:19:07,860
actually great for UART

455
00:19:05,750 --> 00:19:12,620
communication it's simple it's easy and

456
00:19:07,860 --> 00:19:15,209
there's a number of FTD FTDI 232 devices

457
00:19:12,620 --> 00:19:16,768
all different brands out there just pick

458
00:19:15,210 --> 00:19:18,149
one for this type of stuff there's even

459
00:19:16,769 --> 00:19:20,100
a board that will actually have four of

460
00:19:18,149 --> 00:19:23,399
them built right into it so then you

461
00:19:20,100 --> 00:19:32,299
want to go ahead and look at that well

462
00:19:23,399 --> 00:19:36,809
if I have a cable here and I do

463
00:19:32,299 --> 00:19:38,399
so go ahead this up plug it in here so

464
00:19:36,809 --> 00:19:40,860
the things you need to be concerned with

465
00:19:38,399 --> 00:19:43,889
as we as we looked at this and we

466
00:19:40,860 --> 00:19:46,320
connect it to this particular device we

467
00:19:43,889 --> 00:19:48,449
also we notice where the ground was so

468
00:19:46,320 --> 00:19:50,100
that's easy enough pen eighteens the

469
00:19:48,450 --> 00:19:53,460
ground and then they have receive or

470
00:19:50,100 --> 00:19:56,490
transmit the rule of thumb is if this

471
00:19:53,460 --> 00:19:58,529
pin happens to be transmitted okay

472
00:19:56,490 --> 00:19:59,850
because we receiving data from it if

473
00:19:58,529 --> 00:20:01,409
it's a received channel you're not gonna

474
00:19:59,850 --> 00:20:03,689
see nothing on it's gonna be zero

475
00:20:01,409 --> 00:20:04,830
voltage on it so it's going to be on one

476
00:20:03,690 --> 00:20:07,529
side or the other

477
00:20:04,830 --> 00:20:09,210
both of those are zero it's 50/50 plug

478
00:20:07,529 --> 00:20:11,309
it in if it doesn't work plug it in the

479
00:20:09,210 --> 00:20:13,679
other side and the goal is is you have

480
00:20:11,309 --> 00:20:16,110
to go from transmit to receive and from

481
00:20:13,679 --> 00:20:18,149
receive to transmit you know what I mean

482
00:20:16,110 --> 00:20:20,758
so that they crossover or you won't get

483
00:20:18,149 --> 00:20:22,620
communication again I usually don't give

484
00:20:20,759 --> 00:20:25,470
this much thought I just plug it in if

485
00:20:22,620 --> 00:20:27,330
it doesn't work I swap the wires makes

486
00:20:25,470 --> 00:20:30,210
it fairly easy so I'm gonna power this

487
00:20:27,330 --> 00:20:35,490
off so don't mess it up and we're gonna

488
00:20:30,210 --> 00:20:38,840
go ahead and hook how are we on time and

489
00:20:35,490 --> 00:20:38,840
run a little longer than I thought

490
00:20:39,620 --> 00:20:44,668
either way we should get through this if

491
00:20:42,120 --> 00:20:47,928
push comes to shove on presentations I

492
00:20:44,669 --> 00:20:52,250
can run through some of the other videos

493
00:20:47,929 --> 00:20:52,250
and it's lighting that's rough in here

494
00:20:56,390 --> 00:21:01,380
okay I think you got it and we're gonna

495
00:20:59,220 --> 00:21:04,440
give it a whirl and see if I got it

496
00:21:01,380 --> 00:21:06,720
right so I use and you can use a number

497
00:21:04,440 --> 00:21:12,450
of different serial consoles this

498
00:21:06,720 --> 00:21:13,590
particular one that I'm using is it's

499
00:21:12,450 --> 00:21:15,840
cool term

500
00:21:13,590 --> 00:21:17,790
I like cool term I just run it on my Mac

501
00:21:15,840 --> 00:21:20,730
comes and easy so now we have to come

502
00:21:17,790 --> 00:21:23,850
over here to options so we want to see

503
00:21:20,730 --> 00:21:27,960
if we actually see our device if we do

504
00:21:23,850 --> 00:21:30,240
there is the us B serial connection we

505
00:21:27,960 --> 00:21:34,290
have we know what the bald rate is it's

506
00:21:30,240 --> 00:21:36,150
one one five two hundred the data bits

507
00:21:34,290 --> 00:21:38,550
were all the same there's no parity 1

508
00:21:36,150 --> 00:21:40,260
stop bit only thing left was some

509
00:21:38,550 --> 00:21:42,659
terminal settings so my terminal works

510
00:21:40,260 --> 00:21:44,280
right handle this and you can play

511
00:21:42,660 --> 00:21:47,610
around this find out what works best

512
00:21:44,280 --> 00:21:50,820
from a terminal standpoint you go ok you

513
00:21:47,610 --> 00:21:52,320
connect to the device I like that tick

514
00:21:50,820 --> 00:21:54,510
mark that make me and I actually got it

515
00:21:52,320 --> 00:22:03,510
right the first time it maybe not so

516
00:21:54,510 --> 00:22:07,280
let's find out I think maybe not ok love

517
00:22:03,510 --> 00:22:07,280
these swap these around here real quick

518
00:22:12,590 --> 00:22:19,320
and of course it was always a chance my

519
00:22:16,190 --> 00:22:26,340
thing is going bad oh gosh come on up

520
00:22:19,320 --> 00:22:27,870
here and go in oh good one of the things

521
00:22:26,340 --> 00:22:30,120
about shipping stuff and throwing it

522
00:22:27,870 --> 00:22:33,989
around in your bag is you like Jam

523
00:22:30,120 --> 00:22:38,969
up so we're going to start over and I'm

524
00:22:33,990 --> 00:22:45,600
going to use another one that's kind of

525
00:22:38,970 --> 00:22:47,309
little less mangled ya know watching

526
00:22:45,600 --> 00:22:50,250
watching Darrell plug things in is kind

527
00:22:47,309 --> 00:22:52,460
of boring just don't throw up my

528
00:22:50,250 --> 00:22:52,460
head

529
00:22:54,770 --> 00:23:02,250
okay a little garbage they're not sure

530
00:22:58,140 --> 00:23:04,110
why we'll find out now this is another

531
00:23:02,250 --> 00:23:13,020
50/50 whether I plugged it in right

532
00:23:04,110 --> 00:23:16,340
because I wasn't paying attention hoping

533
00:23:13,020 --> 00:23:16,340
I got these things plugged in right

534
00:23:16,850 --> 00:23:29,100
wonders of live demos yeah because if

535
00:23:25,560 --> 00:23:34,020
this part fails then the next part can't

536
00:23:29,100 --> 00:23:36,810
be done of course I forgot to do

537
00:23:34,020 --> 00:23:42,080
something like actually check to see if

538
00:23:36,810 --> 00:23:44,280
oh gosh yeah cancel let's disconnect

539
00:23:42,080 --> 00:23:48,169
Cory that's probably why it's not

540
00:23:44,280 --> 00:23:58,160
working there we go I got that okay

541
00:23:48,170 --> 00:23:58,160
connect let's try one more time damn it

542
00:24:04,479 --> 00:24:12,739
this doesn't work I need to check my

543
00:24:06,709 --> 00:24:27,709
other connectors yeah I'm having some

544
00:24:12,739 --> 00:24:32,569
problems here sorry about that guys any

545
00:24:27,709 --> 00:24:33,739
questions why fumble of course I haven't

546
00:24:32,569 --> 00:24:36,369
given you anything to ask questions

547
00:24:33,739 --> 00:24:36,369
about yet have I

548
00:24:40,239 --> 00:24:49,029
what's that I think the bus pirates a

549
00:24:45,559 --> 00:24:50,479
piece of but that's my opinion

550
00:24:49,029 --> 00:24:53,839
yeah here we go

551
00:24:50,479 --> 00:24:56,779
okay so we're booting up it was just

552
00:24:53,839 --> 00:24:59,869
some connection issues hit any key -

553
00:24:56,779 --> 00:25:06,079
ought to be okay there we go okay

554
00:24:59,869 --> 00:25:08,658
of course this device is messed up so we

555
00:25:06,079 --> 00:25:12,469
have to I apologise apparently I grabbed

556
00:25:08,659 --> 00:25:15,249
the wrong device where's that devices

557
00:25:12,469 --> 00:25:21,979
going around anyone still have that

558
00:25:15,249 --> 00:25:23,509
bring it here real quick yeah the reason

559
00:25:21,979 --> 00:25:28,479
why is one of these was used for another

560
00:25:23,509 --> 00:25:28,479
demo so it wasn't reset properly

561
00:25:37,190 --> 00:25:43,399
so the bus part has its traits but and

562
00:25:41,850 --> 00:25:46,889
it probably worked pretty good on cereal

563
00:25:43,399 --> 00:25:48,989
to be honest with you my experience with

564
00:25:46,890 --> 00:25:52,049
it was trying to use it to pull flash

565
00:25:48,990 --> 00:25:55,769
memory out and it has a tendency to run

566
00:25:52,049 --> 00:25:57,600
a little slow and definitely if you're

567
00:25:55,769 --> 00:26:02,090
in a VM environment has serious problems

568
00:25:57,600 --> 00:26:06,769
with the USB bus on timing issues I

569
00:26:02,090 --> 00:26:12,059
actually took the one that I had and

570
00:26:06,769 --> 00:26:15,539
reprogrammed it as an SDK 500 to do

571
00:26:12,059 --> 00:26:18,090
connections to atmega chips to be able

572
00:26:15,539 --> 00:26:23,940
to rule pull the firmware off this and

573
00:26:18,090 --> 00:26:26,059
that it works really good at give me

574
00:26:23,940 --> 00:26:33,740
 me why is this in playing with me I

575
00:26:26,059 --> 00:26:33,740
apologize dammit this is crazy

576
00:26:33,889 --> 00:26:54,959
should you just rewrote the other one

577
00:26:36,470 --> 00:26:57,870
could have done that okay so it's

578
00:26:54,960 --> 00:27:00,570
already booting up so you can get to the

579
00:26:57,870 --> 00:27:03,510
whole idea of the boot okay so we get a

580
00:27:00,570 --> 00:27:05,100
logon on this thing apologize for that

581
00:27:03,510 --> 00:27:06,149
that's kind of kind of screwed up on my

582
00:27:05,100 --> 00:27:08,699
part I had them all plug together

583
00:27:06,149 --> 00:27:10,949
plugged into use and of course they got

584
00:27:08,700 --> 00:27:12,720
unplugged in the bag being bouncing

585
00:27:10,950 --> 00:27:13,980
around into one the pins were all

586
00:27:12,720 --> 00:27:15,779
mangled and it was actually a couple

587
00:27:13,980 --> 00:27:16,950
shorted out to each other so that's why

588
00:27:15,779 --> 00:27:19,830
I pulled that out there so it wouldn't

589
00:27:16,950 --> 00:27:22,049
be any more problems and this thing will

590
00:27:19,830 --> 00:27:24,899
come up as as Illuma we don't know the

591
00:27:22,049 --> 00:27:26,940
password I've got the hash off of it we

592
00:27:24,899 --> 00:27:28,379
weren't able to crack that which is not

593
00:27:26,940 --> 00:27:30,690
uncommon for a lot of number of these

594
00:27:28,380 --> 00:27:34,260
devices so one of the things we want to

595
00:27:30,690 --> 00:27:35,789
do and let me jump over now that we're

596
00:27:34,260 --> 00:27:37,860
at this point let's go ahead and while

597
00:27:35,789 --> 00:27:39,360
that's running up let's go ahead and

598
00:27:37,860 --> 00:27:42,299
step over here breaking in console

599
00:27:39,360 --> 00:27:43,678
methods for gaining access so there's a

600
00:27:42,299 --> 00:27:46,168
number of different methods but you want

601
00:27:43,679 --> 00:27:48,720
to be able to get into you boo you boot

602
00:27:46,169 --> 00:27:50,400
has what's known as a boot delay

603
00:27:48,720 --> 00:27:52,560
so you can fire up a device and you can

604
00:27:50,400 --> 00:27:55,050
actually see it count down from three to

605
00:27:52,560 --> 00:27:56,730
one that means it has a boot delay in

606
00:27:55,050 --> 00:27:58,500
place most of the board's you're gonna

607
00:27:56,730 --> 00:27:59,970
run into that's going to be set to zero

608
00:27:58,500 --> 00:28:03,480
that means you're not going to be able

609
00:27:59,970 --> 00:28:05,880
to halt it and go into you boot mode so

610
00:28:03,480 --> 00:28:07,440
and it can be set in seconds but you

611
00:28:05,880 --> 00:28:09,900
have to get into you boot console to be

612
00:28:07,440 --> 00:28:11,880
able to set that so we want to be able

613
00:28:09,900 --> 00:28:14,640
to do that so the way we're going to

614
00:28:11,880 --> 00:28:19,560
actually do that is an attack we know

615
00:28:14,640 --> 00:28:21,420
and refer to as a ping glitch for know

616
00:28:19,560 --> 00:28:24,149
better terms and the way that works is

617
00:28:21,420 --> 00:28:26,250
we have we have a memory chip in this

618
00:28:24,150 --> 00:28:28,710
case this is much easier to do on this

619
00:28:26,250 --> 00:28:30,120
way there's two memory chips there's one

620
00:28:28,710 --> 00:28:34,320
on the other side of the board happens

621
00:28:30,120 --> 00:28:36,689
to be an 8-pin SOI c spi flash chip that

622
00:28:34,320 --> 00:28:39,689
actually holds you bit the chip on the

623
00:28:36,690 --> 00:28:42,390
upper side happens to be a nan spi chip

624
00:28:39,690 --> 00:28:44,520
this one this is a w saw and socket it's

625
00:28:42,390 --> 00:28:47,010
like five by air six by seven or five by

626
00:28:44,520 --> 00:28:49,050
six millimeters pretty small and that's

627
00:28:47,010 --> 00:28:52,320
the actual pin out so the ultimate goal

628
00:28:49,050 --> 00:28:54,030
is as you boot loads up what you want to

629
00:28:52,320 --> 00:28:55,350
do is prevent it from after it's loaded

630
00:28:54,030 --> 00:28:57,660
you don't want to do anything while

631
00:28:55,350 --> 00:28:59,189
floating just load it you want to

632
00:28:57,660 --> 00:29:01,200
actually stop it from me actually being

633
00:28:59,190 --> 00:29:02,940
able to read the kernel by default you

634
00:29:01,200 --> 00:29:06,510
boot will fell into a console when you

635
00:29:02,940 --> 00:29:09,030
actually do that so so and here we have

636
00:29:06,510 --> 00:29:10,770
the actual pin house so the pin you want

637
00:29:09,030 --> 00:29:13,110
to take the ground happens to be the

638
00:29:10,770 --> 00:29:16,139
slave out for the spi this is the

639
00:29:13,110 --> 00:29:17,850
outgoing data now as I show this to you

640
00:29:16,140 --> 00:29:20,990
don't go out and go hey let's just start

641
00:29:17,850 --> 00:29:23,490
shorting out and see what happens

642
00:29:20,990 --> 00:29:25,740
because you will find out quickly what

643
00:29:23,490 --> 00:29:28,530
will happen and it won't go good for you

644
00:29:25,740 --> 00:29:30,390
number of times this attack works a lot

645
00:29:28,530 --> 00:29:32,070
of times doesn't work all the times I

646
00:29:30,390 --> 00:29:34,140
was doing an engagement for a customer

647
00:29:32,070 --> 00:29:35,580
we had a similar layout like this but

648
00:29:34,140 --> 00:29:37,830
they were reading everything from one

649
00:29:35,580 --> 00:29:40,860
chip so big timing issue there because

650
00:29:37,830 --> 00:29:43,110
it's just literally milliseconds so you

651
00:29:40,860 --> 00:29:45,899
have to try like 4050 times before you

652
00:29:43,110 --> 00:29:48,600
get it to fail into you boot console all

653
00:29:45,900 --> 00:29:51,360
I managed to do is have it to fail in by

654
00:29:48,600 --> 00:29:53,340
wiping out the u-boot somehow it was

655
00:29:51,360 --> 00:29:54,719
kind of weird so in the demo what we're

656
00:29:53,340 --> 00:29:56,850
going to do is we're actually going to

657
00:29:54,720 --> 00:29:59,190
ground this out as the device is booting

658
00:29:56,850 --> 00:30:01,010
up and as presentation has been going so

659
00:29:59,190 --> 00:30:04,250
far this level to go to hell

660
00:30:01,010 --> 00:30:07,160
handbasket - but I hope not

661
00:30:04,250 --> 00:30:09,680
I usually put a lot of time into working

662
00:30:07,160 --> 00:30:12,980
through these demos so that we can that

663
00:30:09,680 --> 00:30:15,800
we can have good demos live demos and

664
00:30:12,980 --> 00:30:17,720
make sense so we have this device so

665
00:30:15,800 --> 00:30:20,389
we're gonna actually going to power this

666
00:30:17,720 --> 00:30:27,170
device off and then we're gonna go ahead

667
00:30:20,390 --> 00:30:32,090
I don't want that document camera we

668
00:30:27,170 --> 00:30:35,090
don't want that we actually want the USB

669
00:30:32,090 --> 00:30:37,520
microscope okay so we get into the

670
00:30:35,090 --> 00:30:40,879
microscope here this USB microscope and

671
00:30:37,520 --> 00:30:43,070
we kind of bring this thing down bring

672
00:30:40,880 --> 00:30:47,000
it in focus a little bit here happens to

673
00:30:43,070 --> 00:30:49,159
be the actual chip so I've already

674
00:30:47,000 --> 00:30:51,590
hooked to the ground plane of this wire

675
00:30:49,160 --> 00:30:54,350
here to the ground plane and a goal is

676
00:30:51,590 --> 00:30:56,709
as soon as you power this thing up you

677
00:30:54,350 --> 00:30:59,560
want to be able to ground out pin two

678
00:30:56,710 --> 00:31:02,600
which happens to be this pin right here

679
00:30:59,560 --> 00:31:04,360
okay and while you're doing that you

680
00:31:02,600 --> 00:31:08,899
don't want to short out other

681
00:31:04,360 --> 00:31:11,570
because that's not good so we're gonna

682
00:31:08,900 --> 00:31:14,090
cry do this and we got to be able to

683
00:31:11,570 --> 00:31:18,830
watch the console on the other side so

684
00:31:14,090 --> 00:31:21,560
let's shorten this up a little bit let's

685
00:31:18,830 --> 00:31:23,270
bring this over so we can see some kind

686
00:31:21,560 --> 00:31:26,659
of traffic taking place over here let's

687
00:31:23,270 --> 00:31:30,590
clear this data hopefully we'll get this

688
00:31:26,660 --> 00:31:32,330
the first time I was doing it the other

689
00:31:30,590 --> 00:31:34,129
day for some reason like this is really

690
00:31:32,330 --> 00:31:36,500
easy it took me like four times I'm like

691
00:31:34,130 --> 00:31:37,940
well you're not even in front of people

692
00:31:36,500 --> 00:31:39,080
Darrell you're not supposed to screw

693
00:31:37,940 --> 00:31:41,560
this up when you're in your lab by

694
00:31:39,080 --> 00:31:41,560
yourself

695
00:31:55,020 --> 00:32:20,650
yep nope too quick powered off boom so

696
00:32:19,510 --> 00:32:23,640
now there's there's a number of

697
00:32:20,650 --> 00:32:27,580
different commands there is a print

698
00:32:23,640 --> 00:32:29,440
environment print EMV and we can see the

699
00:32:27,580 --> 00:32:31,480
can everyone see that good I try to make

700
00:32:29,440 --> 00:32:33,610
it big enough so UK so we're actually

701
00:32:31,480 --> 00:32:35,620
able to see the environment variables so

702
00:32:33,610 --> 00:32:37,840
we can walk up through here and there's

703
00:32:35,620 --> 00:32:40,330
a couple of interesting environment

704
00:32:37,840 --> 00:32:42,179
variables right here right here we have

705
00:32:40,330 --> 00:32:45,909
let's see if this laser pointer works

706
00:32:42,180 --> 00:32:47,170
dan this thing's like sheep oh that's

707
00:32:45,910 --> 00:32:52,660
why I didn't have it turned on what a

708
00:32:47,170 --> 00:32:55,210
dumbass so so I'm a real comedian today

709
00:32:52,660 --> 00:32:57,640
so if we come over here we have we have

710
00:32:55,210 --> 00:33:00,040
boot delay so we have boot delay boot

711
00:32:57,640 --> 00:33:01,120
delay right here so we can actually set

712
00:33:00,040 --> 00:33:02,500
that so the first thing we're going to

713
00:33:01,120 --> 00:33:03,790
do is we're gonna set boot delay to a

714
00:33:02,500 --> 00:33:05,200
number and then we're gonna power it off

715
00:33:03,790 --> 00:33:07,389
and back on again and you can see how we

716
00:33:05,200 --> 00:33:08,800
can actually halter it so let's go ahead

717
00:33:07,390 --> 00:33:13,200
and do that first and see if we can get

718
00:33:08,800 --> 00:33:17,620
through that without blowing my leg off

719
00:33:13,200 --> 00:33:22,930
and the way we do that is we want to set

720
00:33:17,620 --> 00:33:26,919
E and V boot delay and we're gonna set

721
00:33:22,930 --> 00:33:29,050
it at 5 put that out there let's go

722
00:33:26,920 --> 00:33:34,680
ahead and scroll our print environment

723
00:33:29,050 --> 00:33:34,680
see if that will actually look right so

724
00:33:35,040 --> 00:33:39,940
we have boot delay set to 5 and then

725
00:33:38,200 --> 00:33:44,110
what we want to do is we want to save

726
00:33:39,940 --> 00:33:45,460
the environment variables out there so

727
00:33:44,110 --> 00:33:47,800
now we've written an entire environment

728
00:33:45,460 --> 00:33:48,780
variables back to the system things that

729
00:33:47,800 --> 00:33:50,860
are weird

730
00:33:48,780 --> 00:33:52,270
this should normally work you should be

731
00:33:50,860 --> 00:33:54,159
able to write back to the chip no

732
00:33:52,270 --> 00:33:55,660
problem I did actually encounter a piece

733
00:33:54,160 --> 00:33:57,730
of hardware we were actually at this

734
00:33:55,660 --> 00:34:00,070
level here I was changing environment

735
00:33:57,730 --> 00:34:02,290
variables and I said say V and V

736
00:34:00,070 --> 00:34:05,470
and it literally wiped the entire flash

737
00:34:02,290 --> 00:34:08,350
chip blank I have yet to figure out why

738
00:34:05,470 --> 00:34:10,929
the saving grace was and this was a gig

739
00:34:08,350 --> 00:34:13,659
for a customer the saving grace was and

740
00:34:10,929 --> 00:34:15,699
they had no idea why it did it either I

741
00:34:13,659 --> 00:34:17,440
actually made a copy of the firmware by

742
00:34:15,699 --> 00:34:18,790
pulling the chip off and pulling the

743
00:34:17,440 --> 00:34:21,610
firmware and putting the chip back go on

744
00:34:18,790 --> 00:34:25,029
so all I did was pull a chip off reflash

745
00:34:21,610 --> 00:34:27,310
the firmware I typically pull chips if

746
00:34:25,030 --> 00:34:28,510
it's like an SPI because if you're

747
00:34:27,310 --> 00:34:31,120
actually going to read and write to an

748
00:34:28,510 --> 00:34:32,800
SPI chip to pull flash memory you have

749
00:34:31,120 --> 00:34:34,989
to actually take the main processor

750
00:34:32,800 --> 00:34:37,000
reset and you have to take the CPU in

751
00:34:34,989 --> 00:34:38,439
the reset mode or it'll interfere with

752
00:34:37,000 --> 00:34:40,960
that communication

753
00:34:38,440 --> 00:34:43,990
I typically notice if it's an i2c chip

754
00:34:40,960 --> 00:34:45,639
ITC is a bus protocol so if you hook up

755
00:34:43,989 --> 00:34:47,319
to that you will actually put a request

756
00:34:45,639 --> 00:34:49,120
on the bus to communicate with it and

757
00:34:47,320 --> 00:34:53,140
typically you can do those in circuit

758
00:34:49,120 --> 00:34:55,569
just a couple quick notes there so from

759
00:34:53,139 --> 00:34:58,330
here there's a command let's look at the

760
00:34:55,570 --> 00:35:00,250
commands real quick so a dollar here a

761
00:34:58,330 --> 00:35:02,920
question mark you can actually see the

762
00:35:00,250 --> 00:35:04,990
commands you boot will be will be

763
00:35:02,920 --> 00:35:07,570
compiled different for every product

764
00:35:04,990 --> 00:35:09,450
with different functions so you can see

765
00:35:07,570 --> 00:35:11,530
a massive amount of different

766
00:35:09,450 --> 00:35:13,960
functionality that may be there or not

767
00:35:11,530 --> 00:35:16,390
be there I've seen the command structure

768
00:35:13,960 --> 00:35:18,640
to be really minimal and I've seen it be

769
00:35:16,390 --> 00:35:20,350
very intense so here's the command

770
00:35:18,640 --> 00:35:21,970
instructions and you can do all kinds of

771
00:35:20,350 --> 00:35:25,480
things you can read from memory you can

772
00:35:21,970 --> 00:35:28,959
boot a boot from TFTP which we're

773
00:35:25,480 --> 00:35:30,190
actually going to do to get some level

774
00:35:28,960 --> 00:35:31,870
of access to the device

775
00:35:30,190 --> 00:35:33,580
so once we've saved that out one of the

776
00:35:31,870 --> 00:35:36,790
commands is reset which actually cause

777
00:35:33,580 --> 00:35:39,040
the CPU to go reset mode and it should

778
00:35:36,790 --> 00:35:40,840
reboot for us and it should come up at

779
00:35:39,040 --> 00:35:42,190
one point and actually prompt us so we

780
00:35:40,840 --> 00:35:43,540
no longer have the glitch so then you

781
00:35:42,190 --> 00:35:45,760
just hit the enter key and there we've

782
00:35:43,540 --> 00:35:48,250
broken out of it because we put that

783
00:35:45,760 --> 00:35:52,150
delay function in there so at this point

784
00:35:48,250 --> 00:35:54,310
some of the things we want to do is the

785
00:35:52,150 --> 00:35:57,550
ultimate goal is to actually get root

786
00:35:54,310 --> 00:36:00,520
access to the actual device so at this

787
00:35:57,550 --> 00:36:03,670
point with the delay put in only with

788
00:36:00,520 --> 00:36:05,470
that delay set other than zero the

789
00:36:03,670 --> 00:36:08,470
function called boot command will

790
00:36:05,470 --> 00:36:10,390
actually work okay so at this point you

791
00:36:08,470 --> 00:36:14,049
can actually put specific boot commands

792
00:36:10,390 --> 00:36:18,220
in there in our case I am actually

793
00:36:14,050 --> 00:36:19,990
going to just cut and paste to be able

794
00:36:18,220 --> 00:36:21,580
to do that because I don't want to type

795
00:36:19,990 --> 00:36:23,379
all this stuff and we're not going to

796
00:36:21,580 --> 00:36:26,259
write it in there what we're going to do

797
00:36:23,380 --> 00:36:32,860
is we're gonna run it from the console

798
00:36:26,260 --> 00:36:34,960
run it from the u-boot console so what

799
00:36:32,860 --> 00:36:37,570
we're gonna do here based on the system

800
00:36:34,960 --> 00:36:41,020
booting up we know where everything is

801
00:36:37,570 --> 00:36:42,640
in memory typically I have to check one

802
00:36:41,020 --> 00:36:45,250
more thing before we run this is gonna

803
00:36:42,640 --> 00:36:49,740
go to hell on us a couple things to to

804
00:36:45,250 --> 00:36:52,360
mention we have this device actually has

805
00:36:49,740 --> 00:36:56,500
server IP this happens to be the IP

806
00:36:52,360 --> 00:36:58,450
address of the TFTP server so before we

807
00:36:56,500 --> 00:36:59,080
get started let's go ahead and cancel

808
00:36:58,450 --> 00:37:04,020
out of that

809
00:36:59,080 --> 00:37:07,870
let me check real quick here we have a

810
00:37:04,020 --> 00:37:13,900
VM running here and I'm just going to go

811
00:37:07,870 --> 00:37:22,750
ahead and what was that it was 182 so we

812
00:37:13,900 --> 00:37:24,010
need to set it to 11 . 182 wrong 1182 so

813
00:37:22,750 --> 00:37:30,630
I'm going to go ahead and just do this

814
00:37:24,010 --> 00:37:30,630
under edit connections our connection

815
00:37:33,360 --> 00:37:55,300
chain just a medial add one not to 182

816
00:37:43,000 --> 00:37:57,430
did I type that in right okay okay and

817
00:37:55,300 --> 00:37:59,620
then we want to have out of there and

818
00:37:57,430 --> 00:38:05,560
then we want to go ahead and save that

819
00:37:59,620 --> 00:38:07,740
out and then we have Ethernet connected

820
00:38:05,560 --> 00:38:07,740
up

821
00:38:09,470 --> 00:38:18,299
and my wiring mess and we're gonna plug

822
00:38:12,960 --> 00:38:20,519
the ethernet into this luckily this

823
00:38:18,299 --> 00:38:22,920
thing had a couple Ethernet ports I

824
00:38:20,519 --> 00:38:25,799
wasn't sure how long these videos would

825
00:38:22,920 --> 00:38:27,420
take or these demos would take so we're

826
00:38:25,799 --> 00:38:28,680
still making good time we won't be able

827
00:38:27,420 --> 00:38:29,940
to go through all of them but I can run

828
00:38:28,680 --> 00:38:32,578
a quick video and talk to you through

829
00:38:29,940 --> 00:38:38,180
some of the other stuff so at this point

830
00:38:32,579 --> 00:38:49,440
let's see if we can actually ping it

831
00:38:38,180 --> 00:38:58,890
ping 192.168.1.1 82 using Ethernet and

832
00:38:49,440 --> 00:39:00,839
of course it's not there okay we went to

833
00:38:58,890 --> 00:39:30,868
split-screen my screen got even smaller

834
00:39:00,839 --> 00:39:34,469
so I'm like going blind here okay now

835
00:39:30,869 --> 00:39:36,329
it's up in live so at this point we can

836
00:39:34,469 --> 00:39:39,089
actually do TFTP it's gonna take the

837
00:39:36,329 --> 00:39:40,710
TFTP variables that are actually in this

838
00:39:39,089 --> 00:39:42,808
particular boot which is the actual

839
00:39:40,710 --> 00:39:45,589
server it's going to go out and what I

840
00:39:42,809 --> 00:39:50,099
did was I went out since this is an IP Q

841
00:39:45,589 --> 00:39:53,700
4018 chip there was there was some open

842
00:39:50,099 --> 00:39:56,400
wrt projects out there for it so we're

843
00:39:53,700 --> 00:39:58,558
actually able to compile one we didn't

844
00:39:56,400 --> 00:40:00,479
get all the pieces work in one of the

845
00:39:58,559 --> 00:40:03,660
reasons one of the reasons is is that

846
00:40:00,479 --> 00:40:06,868
secondary chip on here happens to be a

847
00:40:03,660 --> 00:40:09,089
very non-standard chip so I ran out of

848
00:40:06,869 --> 00:40:11,519
time the process would be to actually

849
00:40:09,089 --> 00:40:13,619
rebuild the kernel with the new device

850
00:40:11,519 --> 00:40:17,598
tree where I define all the variables

851
00:40:13,619 --> 00:40:20,400
for that particular chip into a DTS file

852
00:40:17,599 --> 00:40:22,080
which was we just walked

853
00:40:20,400 --> 00:40:25,320
that process recently so I didn't get it

854
00:40:22,080 --> 00:40:26,970
actually into the system yet so we're

855
00:40:25,320 --> 00:40:29,310
gonna go ahead and run this and if it

856
00:40:26,970 --> 00:40:30,779
works out it's starting to load so at

857
00:40:29,310 --> 00:40:40,680
this point it's actually loading over

858
00:40:30,780 --> 00:40:42,930
TFTP server but it does give us a level

859
00:40:40,680 --> 00:40:46,080
of access so the next phase of it would

860
00:40:42,930 --> 00:40:47,940
be get to recompile for the right DTS

861
00:40:46,080 --> 00:40:50,100
for the right device tree that would

862
00:40:47,940 --> 00:40:53,120
give us more access to other pieces of

863
00:40:50,100 --> 00:40:53,120
the actual device

864
00:40:56,960 --> 00:41:03,720
and there we actually got root level

865
00:41:00,870 --> 00:41:09,830
access to the device so we're able to

866
00:41:03,720 --> 00:41:09,830
actually see some of the stuff so oh

867
00:41:12,290 --> 00:41:16,080
gosh

868
00:41:13,560 --> 00:41:17,549
everything's not working now oh don't

869
00:41:16,080 --> 00:41:29,150
tell me this thing's decided to

870
00:41:17,550 --> 00:41:29,150
with me it's not disconnected it's there

871
00:41:32,480 --> 00:41:41,250
tree you should play back in case you

872
00:41:36,420 --> 00:41:43,230
can't read document tree damn it

873
00:41:41,250 --> 00:41:46,080
 go hell in a handbasket quick

874
00:41:43,230 --> 00:41:48,600
doesn't it but you see we came up with

875
00:41:46,080 --> 00:41:51,480
root level access from there you can go

876
00:41:48,600 --> 00:41:54,960
ahead and go into proc and proc in and

877
00:41:51,480 --> 00:41:58,050
request a dump of the MT DS and identify

878
00:41:54,960 --> 00:42:00,980
all of the actual partitions that are

879
00:41:58,050 --> 00:42:03,330
actually lined out on the actual chips

880
00:42:00,980 --> 00:42:04,410
any questions we're gonna go over

881
00:42:03,330 --> 00:42:05,759
something else here in a minute

882
00:42:04,410 --> 00:42:09,270
hopefully it goes good too

883
00:42:05,760 --> 00:42:12,380
any questions any concerns any beer

884
00:42:09,270 --> 00:42:12,380
bottles to throw at my head yeah

885
00:42:15,070 --> 00:42:19,400
it's usually set to nothing what it's

886
00:42:17,300 --> 00:42:22,190
going to do in this case it's going to

887
00:42:19,400 --> 00:42:24,140
pull from boot ipq which is going to

888
00:42:22,190 --> 00:42:25,880
pull from the flash memory just to find

889
00:42:24,140 --> 00:42:27,950
in you boot in this particular case

890
00:42:25,880 --> 00:42:30,590
there's a number of different ways you

891
00:42:27,950 --> 00:42:32,569
can actually to break into this some of

892
00:42:30,590 --> 00:42:34,490
the other examples is in the you boot

893
00:42:32,570 --> 00:42:37,310
arguments the environment area called

894
00:42:34,490 --> 00:42:38,899
boot args in boot args you can often at

895
00:42:37,310 --> 00:42:40,220
the end of the line there's a couple

896
00:42:38,900 --> 00:42:41,960
things you do it doesn't work on this

897
00:42:40,220 --> 00:42:44,149
one but works on some of them you can

898
00:42:41,960 --> 00:42:47,180
actually put a one in there which tells

899
00:42:44,150 --> 00:42:49,190
booted in single user mode you can

900
00:42:47,180 --> 00:42:51,529
actually put single in there it varies

901
00:42:49,190 --> 00:42:53,930
or you can put emergency and that will

902
00:42:51,530 --> 00:42:55,070
often give it to boot into that one of

903
00:42:53,930 --> 00:42:57,859
the other things I was going to show

904
00:42:55,070 --> 00:43:09,859
before I managed to disable myself

905
00:42:57,859 --> 00:43:12,680
somehow there we go so just disconnect

906
00:43:09,859 --> 00:43:20,089
and reconnect it here let me show this

907
00:43:12,680 --> 00:43:23,660
cat /proc MTD and we can actually see

908
00:43:20,089 --> 00:43:25,339
partitions on the initial chip there's a

909
00:43:23,660 --> 00:43:27,950
secondary chip that contains some other

910
00:43:25,339 --> 00:43:30,440
file system data that would be where we

911
00:43:27,950 --> 00:43:32,509
often want to get in this case but it's

912
00:43:30,440 --> 00:43:35,960
again it's about how the chipsets are

913
00:43:32,510 --> 00:43:39,170
lined out what's available and actually

914
00:43:35,960 --> 00:43:41,390
building those DTS files to actually put

915
00:43:39,170 --> 00:43:43,430
that into the device tree which would be

916
00:43:41,390 --> 00:43:46,520
one of the next steps so one of the

917
00:43:43,430 --> 00:43:48,410
things I want to do now is just to show

918
00:43:46,520 --> 00:43:49,849
this to you there's other functions that

919
00:43:48,410 --> 00:43:55,069
often show up when you're in these

920
00:43:49,849 --> 00:43:57,790
consoles so let's go ahead and go yeah

921
00:43:55,070 --> 00:44:02,690
my serial ports act do not connect

922
00:43:57,790 --> 00:44:05,029
reboot so we're gonna go ahead and we're

923
00:44:02,690 --> 00:44:06,470
gonna let this let this come back up I

924
00:44:05,030 --> 00:44:08,330
think I keep bumping these wires all I

925
00:44:06,470 --> 00:44:10,390
know exactly why it's doing it this

926
00:44:08,330 --> 00:44:12,650
thing was actually shorty not over here

927
00:44:10,390 --> 00:44:16,420
so we're gonna let this come up and what

928
00:44:12,650 --> 00:44:16,420
we're looking for is an F switch show up

929
00:44:20,130 --> 00:44:40,740
gotta be quick or not be quick I miss it

930
00:44:33,460 --> 00:44:43,390
I must have missed it there we go

931
00:44:40,740 --> 00:44:45,580
that F switch and see if we can screw up

932
00:44:43,390 --> 00:44:47,710
so you can actually see that I see this

933
00:44:45,580 --> 00:44:50,110
a lot and there's a lot of cool stuff

934
00:44:47,710 --> 00:44:51,850
you can do from here because this F

935
00:44:50,110 --> 00:44:53,650
switch will actually put the device in

936
00:44:51,850 --> 00:44:55,900
single user mode if they compiled it to

937
00:44:53,650 --> 00:44:57,580
actually be able to do that the

938
00:44:55,900 --> 00:45:01,780
difference is is now that we're in here

939
00:44:57,580 --> 00:45:03,540
if we go if we try to read any-any we

940
00:45:01,780 --> 00:45:06,940
can actually do and see the actual

941
00:45:03,540 --> 00:45:09,550
devices under proc MTD and you can see

942
00:45:06,940 --> 00:45:11,770
the few that we actually missed down

943
00:45:09,550 --> 00:45:14,290
toward the bottom that are on that other

944
00:45:11,770 --> 00:45:16,000
chipset so we're able to get into this

945
00:45:14,290 --> 00:45:18,520
but now we're in this single user mode

946
00:45:16,000 --> 00:45:20,050
and literally none of the drivers none

947
00:45:18,520 --> 00:45:22,210
of the functions none of the pieces are

948
00:45:20,050 --> 00:45:25,270
actually in place to actually

949
00:45:22,210 --> 00:45:29,260
communicate over Ethernet or communicate

950
00:45:25,270 --> 00:45:31,600
over USB I actually try to enable the

951
00:45:29,260 --> 00:45:34,270
Wi-Fi on this thing and it literally

952
00:45:31,600 --> 00:45:37,660
just kicked my ass and nothing would

953
00:45:34,270 --> 00:45:38,740
work so I got Wi-Fi Ethernet neither one

954
00:45:37,660 --> 00:45:40,750
of those was I able to actually

955
00:45:38,740 --> 00:45:43,149
communicate with or get fully

956
00:45:40,750 --> 00:45:45,520
functioning so then I circled around to

957
00:45:43,150 --> 00:45:49,360
the usb seen this thing come up and it

958
00:45:45,520 --> 00:45:51,400
says USB and it says all this data here

959
00:45:49,360 --> 00:45:54,010
but you still can't address the USB

960
00:45:51,400 --> 00:45:55,660
there's no device in the system even

961
00:45:54,010 --> 00:45:59,410
though it recognized I plug something in

962
00:45:55,660 --> 00:46:05,500
there's no device so one of the methods

963
00:45:59,410 --> 00:46:07,870
that I have is I found out that you have

964
00:46:05,500 --> 00:46:11,640
to actually build the device from

965
00:46:07,870 --> 00:46:14,529
scratch so we're actually able to

966
00:46:11,640 --> 00:46:17,129
shithead sucked I don't work come on an

967
00:46:14,530 --> 00:46:17,130
errand control

968
00:46:17,850 --> 00:46:26,080
get ready wrong there we go so you use

969
00:46:23,680 --> 00:46:29,410
make note and a generally way to make

970
00:46:26,080 --> 00:46:31,900
note works is we have to define some

971
00:46:29,410 --> 00:46:34,420
variables with make note we set this is

972
00:46:31,900 --> 00:46:37,420
just the Linux rewrite rewrite rewrite

973
00:46:34,420 --> 00:46:38,770
we have to define the device when where

974
00:46:37,420 --> 00:46:41,110
we want to put it

975
00:46:38,770 --> 00:46:43,870
and this be switch lets us define two

976
00:46:41,110 --> 00:46:45,400
things which is the major and minor the

977
00:46:43,870 --> 00:46:49,020
major in this particular case that

978
00:46:45,400 --> 00:46:51,310
number require replies to an SD device

979
00:46:49,020 --> 00:46:53,770
one of the block devices that you can

980
00:46:51,310 --> 00:46:56,259
actually configure into a system the one

981
00:46:53,770 --> 00:46:58,300
from what I understand is actually the

982
00:46:56,260 --> 00:46:59,800
sequence of device if I had multiples on

983
00:46:58,300 --> 00:47:02,470
there they would be numbered differently

984
00:46:59,800 --> 00:47:05,350
as I'm setting them up so it'd be eight

985
00:47:02,470 --> 00:47:08,770
one eight two eight three and then and

986
00:47:05,350 --> 00:47:10,750
it would be s DASD bsd C whatever the

987
00:47:08,770 --> 00:47:12,880
case may be and you have to set the

988
00:47:10,750 --> 00:47:14,830
miner to be appropriate that to actually

989
00:47:12,880 --> 00:47:17,860
communicate that so we're gonna go ahead

990
00:47:14,830 --> 00:47:22,120
and we're gonna put that in there one of

991
00:47:17,860 --> 00:47:23,740
the next ones we had to do was check the

992
00:47:22,120 --> 00:47:26,080
device let's make sure we can actually

993
00:47:23,740 --> 00:47:30,040
see it I like to put that in there don't

994
00:47:26,080 --> 00:47:32,380
do that so we actually do run a check on

995
00:47:30,040 --> 00:47:33,910
the device and it comes up and I don't

996
00:47:32,380 --> 00:47:36,550
actually see any errors on it which is

997
00:47:33,910 --> 00:47:37,960
kind of cool the ultimate goal in this

998
00:47:36,550 --> 00:47:39,520
case here is I want to get the firmware

999
00:47:37,960 --> 00:47:41,740
off and I want to get it off

1000
00:47:39,520 --> 00:47:43,750
other than pulling it from a flash pull

1001
00:47:41,740 --> 00:47:45,430
it from a flash I get a blob so all the

1002
00:47:43,750 --> 00:47:47,590
pieces all the parts trying to separate

1003
00:47:45,430 --> 00:47:50,140
it out very difficult at this point I

1004
00:47:47,590 --> 00:47:51,820
have all the mounted partitions I can DD

1005
00:47:50,140 --> 00:47:54,279
all of them off and get the individual

1006
00:47:51,820 --> 00:47:57,060
partition structure so the next thing we

1007
00:47:54,280 --> 00:48:03,280
want to do and I always do this is

1008
00:47:57,060 --> 00:48:06,279
format the device so we're actually

1009
00:48:03,280 --> 00:48:09,720
going to format SDA so this will take is

1010
00:48:06,280 --> 00:48:09,720
take a second so any questions

1011
00:48:15,010 --> 00:48:19,590
no because they could come from

1012
00:48:17,170 --> 00:48:23,020
literally anywhere it's kind of amazing

1013
00:48:19,590 --> 00:48:26,410
a lot of them come obviously from China

1014
00:48:23,020 --> 00:48:29,200
the sources in China are like kind of

1015
00:48:26,410 --> 00:48:30,850
iffy so you usually have to screen

1016
00:48:29,200 --> 00:48:33,549
through a whole bunch of sales crap a

1017
00:48:30,850 --> 00:48:35,319
lot of times to drill down into it some

1018
00:48:33,550 --> 00:48:38,200
of the bigger manufacturers have better

1019
00:48:35,320 --> 00:48:40,060
resources to actually go to the sites

1020
00:48:38,200 --> 00:48:42,100
for of those particular chips you know

1021
00:48:40,060 --> 00:48:43,779
Texas Instruments and and things like

1022
00:48:42,100 --> 00:48:45,610
that are much easier to track you down

1023
00:48:43,780 --> 00:48:47,920
you still run into a lot of cases where

1024
00:48:45,610 --> 00:48:49,450
you're dealing with OM devices and you

1025
00:48:47,920 --> 00:48:51,580
know you have to sell your firstborn

1026
00:48:49,450 --> 00:48:54,120
child to actually get your hands on them

1027
00:48:51,580 --> 00:48:54,120
yes sir

1028
00:49:05,820 --> 00:49:13,000
yeah I guess if you could determine that

1029
00:49:08,560 --> 00:49:14,830
timing cycle you know it's yeah it's I

1030
00:49:13,000 --> 00:49:16,060
mean you can still very random because

1031
00:49:14,830 --> 00:49:17,950
you don't know where it's gonna be

1032
00:49:16,060 --> 00:49:19,210
but once is there a way to identify that

1033
00:49:17,950 --> 00:49:20,919
yeah that would be an interesting

1034
00:49:19,210 --> 00:49:23,350
project I'd love to see be able to do

1035
00:49:20,920 --> 00:49:24,940
that and maybe hook it up to something

1036
00:49:23,350 --> 00:49:26,650
where it just restarts a system and

1037
00:49:24,940 --> 00:49:29,320
keeps going until it figures out what

1038
00:49:26,650 --> 00:49:31,300
that is but again as an example you

1039
00:49:29,320 --> 00:49:34,420
never know with power off island off on

1040
00:49:31,300 --> 00:49:35,950
off on off on what will happen I've seen

1041
00:49:34,420 --> 00:49:38,560
some strange things happen where the

1042
00:49:35,950 --> 00:49:40,149
device just says screw you and doesn't

1043
00:49:38,560 --> 00:49:41,320
come up anymore we had one where we use

1044
00:49:40,150 --> 00:49:43,630
them for training and end up getting

1045
00:49:41,320 --> 00:49:50,170
cycled the u-boot and barrett varmint

1046
00:49:43,630 --> 00:49:53,980
variables went away so okay so that came

1047
00:49:50,170 --> 00:49:56,080
up so at this point one of the things we

1048
00:49:53,980 --> 00:49:59,410
can do is we want to go ahead and mount

1049
00:49:56,080 --> 00:50:01,540
the device so we have to make a

1050
00:49:59,410 --> 00:50:04,359
directory so now we're on a device and

1051
00:50:01,540 --> 00:50:06,970
all of the directory structure is only

1052
00:50:04,360 --> 00:50:08,740
read-only so the one way around that is

1053
00:50:06,970 --> 00:50:11,049
all these devices boot up and put a lot

1054
00:50:08,740 --> 00:50:13,450
of stuff in temp temp will be rewritable

1055
00:50:11,050 --> 00:50:16,720
on these embedded tech so we're actually

1056
00:50:13,450 --> 00:50:22,270
able to create that there the next

1057
00:50:16,720 --> 00:50:24,009
option is let's go ahead and second

1058
00:50:22,270 --> 00:50:26,610
I'm going to go ahead and we're going to

1059
00:50:24,010 --> 00:50:29,170
mount it so we're going to mount the USB

1060
00:50:26,610 --> 00:50:30,760
yeah it mount it's mounted okay it goes

1061
00:50:29,170 --> 00:50:31,990
through says I don't know what this I

1062
00:50:30,760 --> 00:50:34,090
don't know what this is all yeah I know

1063
00:50:31,990 --> 00:50:35,890
what this is and it mounts it up the

1064
00:50:34,090 --> 00:50:38,560
next thing we want to do is now that

1065
00:50:35,890 --> 00:50:40,900
we've done that let's start grabbing

1066
00:50:38,560 --> 00:50:43,779
crap off this thing

1067
00:50:40,900 --> 00:50:46,150
and since we knew the partitions let me

1068
00:50:43,780 --> 00:50:51,930
see you 1210 let's look at these

1069
00:50:46,150 --> 00:50:54,940
petitions again so cat /proc slash MTD

1070
00:50:51,930 --> 00:50:57,160
so we see these partitions here running

1071
00:50:54,940 --> 00:50:58,330
out of time but the interesting thing

1072
00:50:57,160 --> 00:51:01,690
when you're dealing with embedded

1073
00:50:58,330 --> 00:51:05,140
systems you're actually going to have to

1074
00:51:01,690 --> 00:51:07,750
ubi repo systems or - root systems these

1075
00:51:05,140 --> 00:51:09,100
are typically the the main root file

1076
00:51:07,750 --> 00:51:10,840
system structure you're actually going

1077
00:51:09,100 --> 00:51:11,980
to see the reason why you have two of

1078
00:51:10,840 --> 00:51:14,560
these and two kernels

1079
00:51:11,980 --> 00:51:16,750
it's upgrade that's how you do upgrades

1080
00:51:14,560 --> 00:51:18,310
on the system if you look into you boot

1081
00:51:16,750 --> 00:51:21,130
there'll be an environment variable it

1082
00:51:18,310 --> 00:51:23,080
tells what structure to actually use on

1083
00:51:21,130 --> 00:51:25,180
that boot up so what happens is when the

1084
00:51:23,080 --> 00:51:27,940
system does an update it receives the

1085
00:51:25,180 --> 00:51:29,350
update what it'll do is do DDD to the

1086
00:51:27,940 --> 00:51:30,940
one it's offline because they're not

1087
00:51:29,350 --> 00:51:33,190
amounted they're not they can unmount

1088
00:51:30,940 --> 00:51:34,210
them dd write to those and then what

1089
00:51:33,190 --> 00:51:35,859
it'll do is they'll change the

1090
00:51:34,210 --> 00:51:38,790
environment variable switch is part of

1091
00:51:35,859 --> 00:51:41,770
this it'll boot back up so if the whole

1092
00:51:38,790 --> 00:51:44,259
firmware update fails fails back to the

1093
00:51:41,770 --> 00:51:46,420
valid structure and that's why they do

1094
00:51:44,260 --> 00:51:48,340
that versus you know how many times

1095
00:51:46,420 --> 00:51:50,290
power cycle in your house happens to do

1096
00:51:48,340 --> 00:51:51,970
upgrade what's going on you'd be killing

1097
00:51:50,290 --> 00:51:55,390
devices all over the place it wasn't for

1098
00:51:51,970 --> 00:51:57,759
that so the next thing we want to do is

1099
00:51:55,390 --> 00:52:02,790
we're going to go ahead and DD partition

1100
00:51:57,760 --> 00:52:05,380
MTD MTD 10 over to the device and this

1101
00:52:02,790 --> 00:52:06,820
process here works pretty good and now

1102
00:52:05,380 --> 00:52:09,250
we can get it off now we have the actual

1103
00:52:06,820 --> 00:52:10,570
file system partition running out of

1104
00:52:09,250 --> 00:52:12,160
time so I'm not going to show it but

1105
00:52:10,570 --> 00:52:14,470
what you would do is you can easily take

1106
00:52:12,160 --> 00:52:18,100
that now they have it and actually to

1107
00:52:14,470 --> 00:52:19,839
unscrew sure so you can well you can do

1108
00:52:18,100 --> 00:52:21,130
you can do been walk you don't even need

1109
00:52:19,840 --> 00:52:23,050
to been walk on it cuz it's just gonna

1110
00:52:21,130 --> 00:52:25,060
be a squash filesystem so you just

1111
00:52:23,050 --> 00:52:26,710
basically unscrew it out and now you got

1112
00:52:25,060 --> 00:52:28,270
it blowing out into a writable format

1113
00:52:26,710 --> 00:52:30,490
you can go in and create your own user

1114
00:52:28,270 --> 00:52:33,520
names passwords everything all into this

1115
00:52:30,490 --> 00:52:36,100
file system and then go back and make

1116
00:52:33,520 --> 00:52:38,259
squash and then take that image

1117
00:52:36,100 --> 00:52:40,660
deedy it right back onto the device

1118
00:52:38,260 --> 00:52:42,220
right into that location make sure the

1119
00:52:40,660 --> 00:52:43,870
environment variable set to point to

1120
00:52:42,220 --> 00:52:46,240
that particular one and you boot it up

1121
00:52:43,870 --> 00:52:48,940
or you can be risky like I did last year

1122
00:52:46,240 --> 00:52:50,020
when I did the demo when I initially did

1123
00:52:48,940 --> 00:52:52,000
that when we're talking about the

1124
00:52:50,020 --> 00:52:53,560
embedded multimedia controller I just

1125
00:52:52,000 --> 00:52:57,820
wrote the image into both um it's either

1126
00:52:53,560 --> 00:52:59,259
gonna work or it's going in the trash so

1127
00:52:57,820 --> 00:53:01,210
it's kind of still it's kind of still

1128
00:52:59,260 --> 00:53:03,220
running here so one of the things I

1129
00:53:01,210 --> 00:53:04,930
wanted to show and I'm gonna be around

1130
00:53:03,220 --> 00:53:07,390
tomorrow if anyone wants to see it or

1131
00:53:04,930 --> 00:53:10,149
actually do one of these attacks I have

1132
00:53:07,390 --> 00:53:11,049
some hew devices or had some hew devices

1133
00:53:10,150 --> 00:53:17,110
oh here we are

1134
00:53:11,050 --> 00:53:21,040
these is what we used it at RSA sandbox

1135
00:53:17,110 --> 00:53:23,050
village and also we use these at the DEF

1136
00:53:21,040 --> 00:53:24,460
CON IOT village for hands-on training

1137
00:53:23,050 --> 00:53:26,800
which we're going to be back this year

1138
00:53:24,460 --> 00:53:28,930
doing some stuff but you can do that

1139
00:53:26,800 --> 00:53:31,660
glitching on here the cool thing with

1140
00:53:28,930 --> 00:53:35,230
this the manufacturer actually put the

1141
00:53:31,660 --> 00:53:37,960
root password hash as an environment

1142
00:53:35,230 --> 00:53:40,600
variable so ya you connect into there

1143
00:53:37,960 --> 00:53:43,150
and you go you just delete it you know

1144
00:53:40,600 --> 00:53:46,299
you do set environment security and -

1145
00:53:43,150 --> 00:53:47,920
tick marks it wipes it out you write it

1146
00:53:46,300 --> 00:53:51,070
back to the system you reboot it and

1147
00:53:47,920 --> 00:53:52,450
your root game over it's a really it's a

1148
00:53:51,070 --> 00:53:54,880
really funny example I was hoping to

1149
00:53:52,450 --> 00:53:57,100
show that so as you see we kind of

1150
00:53:54,880 --> 00:54:00,160
finished up here we're able to actually

1151
00:53:57,100 --> 00:54:01,779
write that out out to the actual USB now

1152
00:54:00,160 --> 00:54:03,879
that we built the environment very all

1153
00:54:01,780 --> 00:54:06,130
environment for it and now we can pull

1154
00:54:03,880 --> 00:54:08,710
off all the partitions on that disk and

1155
00:54:06,130 --> 00:54:11,950
do analysis and it's much easier than

1156
00:54:08,710 --> 00:54:15,580
trying to explode it out from an actual

1157
00:54:11,950 --> 00:54:17,109
blob dump er a flash dump and I got one

1158
00:54:15,580 --> 00:54:17,650
minute and then they're gonna drag me

1159
00:54:17,110 --> 00:54:23,200
out of here

1160
00:54:17,650 --> 00:54:27,210
so any questions real quick so we got

1161
00:54:23,200 --> 00:54:27,210
through all the press all the demos yes

1162
00:54:35,930 --> 00:54:42,839
yeah you can mount this up if you wanted

1163
00:54:38,849 --> 00:54:45,210
to no yeah yeah when you pull you pull

1164
00:54:42,839 --> 00:54:47,790
the flash ROM off I've never been able

1165
00:54:45,210 --> 00:54:49,920
to mount that up straight up not in that

1166
00:54:47,790 --> 00:54:51,329
that environment I've never been

1167
00:54:49,920 --> 00:54:53,940
successful in doing it I've gone through

1168
00:54:51,329 --> 00:54:55,619
and I've tried to do that I have

1169
00:54:53,940 --> 00:54:58,619
actually taken him off

1170
00:54:55,619 --> 00:55:01,470
I've taken the objects off that way and

1171
00:54:58,619 --> 00:55:03,869
was successful in one case to actually

1172
00:55:01,470 --> 00:55:06,480
didi the whole flash onto is this was

1173
00:55:03,869 --> 00:55:09,119
kind of weird the whole flash it wasn't

1174
00:55:06,480 --> 00:55:11,520
an SPI but the whole flash block onto a

1175
00:55:09,119 --> 00:55:14,250
USB and cut it to mount up when I

1176
00:55:11,520 --> 00:55:15,569
plugged it in and booted and mounted it

1177
00:55:14,250 --> 00:55:18,569
up and it actually mounted up as a

1178
00:55:15,569 --> 00:55:20,970
filesystem on another device I had but

1179
00:55:18,569 --> 00:55:23,970
no I hadn't been successful in that so

1180
00:55:20,970 --> 00:55:25,890
that kind of finishes everything up I

1181
00:55:23,970 --> 00:55:28,319
hope you enjoyed it we got through all

1182
00:55:25,890 --> 00:55:32,490
the demos except for the hue in spite of

1183
00:55:28,319 --> 00:55:33,900
the the blind old man glitches so I hope

1184
00:55:32,490 --> 00:55:36,328
you enjoyed that I'm going to be here

1185
00:55:33,900 --> 00:55:39,060
through tomorrow please talk to me

1186
00:55:36,329 --> 00:55:41,550
if you have any questions catch me or

1187
00:55:39,060 --> 00:55:43,990
reach out to me online I'm always online

1188
00:55:41,550 --> 00:55:47,960
so thank you very much

1189
00:55:43,990 --> 00:55:47,959
[Applause]

