1
00:00:00,030 --> 00:00:03,289
Thank You cackalacky Khan for not

2
00:00:01,380 --> 00:00:05,040
sticking me in the craps lot and I

3
00:00:03,290 --> 00:00:07,109
realized I am the only thing standing

4
00:00:05,040 --> 00:00:09,150
between you all and lunch so I will try

5
00:00:07,109 --> 00:00:11,730
to shove all this into an hour bear with

6
00:00:09,150 --> 00:00:14,250
me I'm Jan Helton has introduced from

7
00:00:11,730 --> 00:00:16,320
NCC group senior consultant I do a lot

8
00:00:14,250 --> 00:00:18,270
of web app and net pen and red teaming

9
00:00:16,320 --> 00:00:20,250
I'm something of a geek for computer

10
00:00:18,270 --> 00:00:22,109
history and esoteric operating systems

11
00:00:20,250 --> 00:00:23,850
which got me into mainframes

12
00:00:22,109 --> 00:00:26,970
I'm probably the only guy in here who

13
00:00:23,850 --> 00:00:30,869
has an open VMs hobbyist license anybody

14
00:00:26,970 --> 00:00:32,969
in the house work for IBM not a soul a

15
00:00:30,869 --> 00:00:35,610
one used to be a mainframe er work on

16
00:00:32,969 --> 00:00:37,649
mainframes before Oh whew alright so

17
00:00:35,610 --> 00:00:40,559
I'll share a little bit of your guys

18
00:00:37,649 --> 00:00:41,969
secrets with uh with us uninitiated here

19
00:00:40,559 --> 00:00:43,589
also there's my twitter handle in my

20
00:00:41,969 --> 00:00:44,879
blog I'll have this presentation all the

21
00:00:43,590 --> 00:00:46,289
Google Drive linked up to the

22
00:00:44,879 --> 00:00:47,968
presentation and I'm gonna write some

23
00:00:46,289 --> 00:00:49,860
blog posts in the near future on all

24
00:00:47,969 --> 00:00:51,270
this stuff and yeah I was you can blame

25
00:00:49,860 --> 00:00:55,949
me for the broken RMI challenge in the

26
00:00:51,270 --> 00:00:58,920
CTF so what is a mainframe it almost

27
00:00:55,949 --> 00:01:00,599
always means IBM Z Hardware and there's

28
00:00:58,920 --> 00:01:02,910
a few other players like unisys and

29
00:01:00,600 --> 00:01:04,710
Fujitsu but the main mainframe maker is

30
00:01:02,910 --> 00:01:06,479
IBM it's almost always Z hardware and

31
00:01:04,709 --> 00:01:08,100
it's almost always z/os which is their

32
00:01:06,479 --> 00:01:10,080
flagship operating system there are a

33
00:01:08,100 --> 00:01:12,689
few other operating systems they offer

34
00:01:10,080 --> 00:01:14,010
for the platform it's not just any big

35
00:01:12,689 --> 00:01:15,809
clunky computer it's not just any

36
00:01:14,010 --> 00:01:18,270
dinosaur mainframe is very specific type

37
00:01:15,810 --> 00:01:20,189
of machine it's built to handle huge

38
00:01:18,270 --> 00:01:21,630
amounts of i/o so like for example like

39
00:01:20,189 --> 00:01:23,429
all the credit card transactions that

40
00:01:21,630 --> 00:01:24,539
happen every day if you use the credit

41
00:01:23,430 --> 00:01:26,369
card today you interacted with a

42
00:01:24,540 --> 00:01:27,810
mainframe they're built for a

43
00:01:26,369 --> 00:01:29,189
reliability availability and

44
00:01:27,810 --> 00:01:31,170
serviceability these things are like

45
00:01:29,189 --> 00:01:32,460
utilities like they are made to not fall

46
00:01:31,170 --> 00:01:34,799
over

47
00:01:32,460 --> 00:01:37,139
they usually have insane backwards

48
00:01:34,799 --> 00:01:38,400
compatibility I mean IBM Z Hardware will

49
00:01:37,140 --> 00:01:41,070
run stuff that was like written in the

50
00:01:38,400 --> 00:01:42,659
60s with very little modification batch

51
00:01:41,070 --> 00:01:44,520
oriented is the other big thing they

52
00:01:42,659 --> 00:01:45,960
write really complex batch jobs so that

53
00:01:44,520 --> 00:01:48,149
you can do things like shove like a

54
00:01:45,960 --> 00:01:49,829
billion credit card transactions run

55
00:01:48,149 --> 00:01:51,659
them through a batch job had them all

56
00:01:49,829 --> 00:01:52,829
processed and laid out without people

57
00:01:51,659 --> 00:01:54,689
having to constantly come in and

58
00:01:52,829 --> 00:01:57,119
interact with it and interrupt processes

59
00:01:54,689 --> 00:01:58,589
and they're always mission critical

60
00:01:57,119 --> 00:02:01,200
systems that's one of the reasons why

61
00:01:58,590 --> 00:02:03,630
mainframes won't let you touch them a

62
00:02:01,200 --> 00:02:05,040
quick note about as/400 which it hasn't

63
00:02:03,630 --> 00:02:08,038
been called that since the 80s the real

64
00:02:05,040 --> 00:02:10,500
name for the platform now is IBM I it's

65
00:02:08,038 --> 00:02:11,790
not the mainframe but it's a what's

66
00:02:10,500 --> 00:02:13,739
called a mid-range it's like the next

67
00:02:11,790 --> 00:02:14,100
tier down you still see them out there

68
00:02:13,739 --> 00:02:15,180
I've had

69
00:02:14,100 --> 00:02:16,829
before there's actually a lot of good

70
00:02:15,180 --> 00:02:19,620
work on them too but they're they're out

71
00:02:16,830 --> 00:02:22,830
of scope for this as well so what isn't

72
00:02:19,620 --> 00:02:24,090
a mainframe it's not freakin legacy so

73
00:02:22,830 --> 00:02:25,470
just to get that out of your freaking

74
00:02:24,090 --> 00:02:26,640
little brain and it's what you

75
00:02:25,470 --> 00:02:28,950
constantly hear when you talk about man

76
00:02:26,640 --> 00:02:30,510
from security IBM Z still makes a couple

77
00:02:28,950 --> 00:02:32,850
billion dollars a year for IBM it ain't

78
00:02:30,510 --> 00:02:34,560
going anywhere it's still the backbone

79
00:02:32,850 --> 00:02:37,590
as I mentioned of things like Finance

80
00:02:34,560 --> 00:02:39,800
Airlines the insurance industry

81
00:02:37,590 --> 00:02:41,970
government's lots of big customers

82
00:02:39,800 --> 00:02:43,080
created there's not a lot of growth most

83
00:02:41,970 --> 00:02:44,670
of your mainframe customers have been

84
00:02:43,080 --> 00:02:46,590
made from customers since the 60s and

85
00:02:44,670 --> 00:02:48,299
70s but it still makes a lot of money

86
00:02:46,590 --> 00:02:50,430
for IBM in licensing and hardware

87
00:02:48,300 --> 00:02:52,470
replacement and updates it still

88
00:02:50,430 --> 00:02:53,820
actively maintained it's not legacy my

89
00:02:52,470 --> 00:02:55,380
research director even fell for this

90
00:02:53,820 --> 00:02:56,549
she's like if you drop OD on the

91
00:02:55,380 --> 00:02:57,780
mainframe early it's like every

92
00:02:56,550 --> 00:02:59,760
mainframe customer gonna be hosed and

93
00:02:57,780 --> 00:03:02,070
I'm like no they're updated like they

94
00:02:59,760 --> 00:03:05,130
get patches ok it's like if I drop owed

95
00:03:02,070 --> 00:03:08,100
a IBM will fix it don't worry in fact

96
00:03:05,130 --> 00:03:09,930
the next major version is as US 2.4 that

97
00:03:08,100 --> 00:03:11,130
will be coming out in this September and

98
00:03:09,930 --> 00:03:13,290
it's about every two year cycle they

99
00:03:11,130 --> 00:03:14,850
release a major version and it's been

100
00:03:13,290 --> 00:03:17,429
updated to run modern stuff they run web

101
00:03:14,850 --> 00:03:18,810
apps it runs Java it runs SQL and it

102
00:03:17,430 --> 00:03:22,560
also runs COBOL apps that were written

103
00:03:18,810 --> 00:03:24,180
in the freaking 60s an IBM likes to push

104
00:03:22,560 --> 00:03:25,760
into new things like cloud computing and

105
00:03:24,180 --> 00:03:28,290
blockchain and all that trendy stuff

106
00:03:25,760 --> 00:03:30,030
just because z/os is very conservative

107
00:03:28,290 --> 00:03:31,410
and in its design I mean you can tell

108
00:03:30,030 --> 00:03:32,820
that this is one of the first operating

109
00:03:31,410 --> 00:03:35,370
systems ever written it's a direct

110
00:03:32,820 --> 00:03:37,650
descendant of os/360 which was the first

111
00:03:35,370 --> 00:03:39,240
mainframe operating system just because

112
00:03:37,650 --> 00:03:41,730
it's very conservative in this design

113
00:03:39,240 --> 00:03:43,830
style and just because it has that nutso

114
00:03:41,730 --> 00:03:46,980
backwards compatibility don't confuse

115
00:03:43,830 --> 00:03:47,880
that for legacy and when you think of a

116
00:03:46,980 --> 00:03:48,780
mainframe you probably think of

117
00:03:47,880 --> 00:03:50,310
something like this you think I like

118
00:03:48,780 --> 00:03:54,060
magnetic tape reels and blinky lights

119
00:03:50,310 --> 00:03:55,860
you like the stuff on my t-shirt here in

120
00:03:54,060 --> 00:03:58,260
fact this is my great aunt Fran who

121
00:03:55,860 --> 00:04:00,120
works for Amex she retired from there

122
00:03:58,260 --> 00:04:04,200
several years ago that's where in the

123
00:04:00,120 --> 00:04:05,370
70s on an IBM system/370 mainframe but

124
00:04:04,200 --> 00:04:09,390
nowadays they look like this they look

125
00:04:05,370 --> 00:04:11,250
like a giant gaming PC these things are

126
00:04:09,390 --> 00:04:13,589
beasts you know it's like the size of a

127
00:04:11,250 --> 00:04:16,380
cafeteria refrigerator it can have like

128
00:04:13,590 --> 00:04:20,730
a hundred and seventy ish processors and

129
00:04:16,380 --> 00:04:24,030
coprocessors like 320 gigs to 32

130
00:04:20,730 --> 00:04:26,220
terabytes of RAM I believe you know it's

131
00:04:24,030 --> 00:04:27,179
a 64-bit like 10 core architecture for

132
00:04:26,220 --> 00:04:31,290
each chip I mean these

133
00:04:27,180 --> 00:04:33,389
our beasts I screwed up I didn't have

134
00:04:31,290 --> 00:04:35,220
the background I'm on the monitor view

135
00:04:33,389 --> 00:04:37,889
but I have a background from an anime

136
00:04:35,220 --> 00:04:39,750
called sword art online and one of the

137
00:04:37,889 --> 00:04:41,490
movies of that they show like the is

138
00:04:39,750 --> 00:04:43,259
it's about like a fictional like online

139
00:04:41,490 --> 00:04:45,389
game and the mainframe that runs the

140
00:04:43,259 --> 00:04:47,460
game in the anime is a street ripoff of

141
00:04:45,389 --> 00:04:49,650
a z14 mainframe with it's like a little

142
00:04:47,460 --> 00:04:54,180
like you know that angular like blue

143
00:04:49,650 --> 00:04:55,530
light II stuff so one thing I know

144
00:04:54,180 --> 00:04:57,150
teachers kind of speak mainframe er

145
00:04:55,530 --> 00:04:59,280
because they have a very different lingo

146
00:04:57,150 --> 00:05:02,039
from Windows and UNIX admins they have

147
00:04:59,280 --> 00:05:03,419
their own language so one thing you're

148
00:05:02,039 --> 00:05:05,159
off the bat is that mainframes don't

149
00:05:03,419 --> 00:05:07,020
speak EPSA dick or sorry they don't

150
00:05:05,160 --> 00:05:08,310
speak ask excuse me they don't speak

151
00:05:07,020 --> 00:05:09,448
ASCII like everything else in the world

152
00:05:08,310 --> 00:05:12,360
they speak EPSA dick which is a

153
00:05:09,449 --> 00:05:14,960
proprietary text encoding format that

154
00:05:12,360 --> 00:05:16,620
IBM has yeah we used since the 60s

155
00:05:14,960 --> 00:05:18,719
another thing you'll talk to mainframe

156
00:05:16,620 --> 00:05:21,570
is you'll hear about El pars there may

157
00:05:18,720 --> 00:05:22,979
only be one actual like mainframe box in

158
00:05:21,570 --> 00:05:25,409
your data center at your company or

159
00:05:22,979 --> 00:05:27,000
maybe just a handful but it'll look like

160
00:05:25,410 --> 00:05:28,949
you have dozens of them because each

161
00:05:27,000 --> 00:05:31,590
mainframe will be busted up into logical

162
00:05:28,949 --> 00:05:33,090
partitions or el pars of

163
00:05:31,590 --> 00:05:35,039
colleague a co-worker named Austin

164
00:05:33,090 --> 00:05:37,320
Robertson who is a mainframe return pen

165
00:05:35,039 --> 00:05:40,560
tester he he can potentially vm's like

166
00:05:37,320 --> 00:05:42,060
on an ESX I box but yes and no because

167
00:05:40,560 --> 00:05:43,320
they're not really VMs it's just that

168
00:05:42,060 --> 00:05:44,789
there's so much RAM and so many

169
00:05:43,320 --> 00:05:46,889
processors around you can just run

170
00:05:44,789 --> 00:05:49,139
multiple OSS simultaneously on these

171
00:05:46,889 --> 00:05:51,599
things in most places will have like I

172
00:05:49,139 --> 00:05:52,919
think supports like up to 70 el pars on

173
00:05:51,599 --> 00:05:54,750
a box and it's all like managed in

174
00:05:52,919 --> 00:05:57,060
firmware like who gets what resources

175
00:05:54,750 --> 00:05:59,070
and everything and a cluster el part of

176
00:05:57,060 --> 00:06:00,330
the cluster Gator and assists plexus so

177
00:05:59,070 --> 00:06:01,860
like in an environment you might have

178
00:06:00,330 --> 00:06:03,990
production el pars or a whole production

179
00:06:01,860 --> 00:06:06,930
sysplex and you might have a dev or QA

180
00:06:03,990 --> 00:06:08,190
sysplex and el pars it's usually on the

181
00:06:06,930 --> 00:06:09,810
same box or it might be multiple

182
00:06:08,190 --> 00:06:12,620
mainframes that are networked with like

183
00:06:09,810 --> 00:06:15,150
fiber-optic it can kind of span boxes

184
00:06:12,620 --> 00:06:17,030
IPL just means initial program load and

185
00:06:15,150 --> 00:06:19,109
that just means booting the mainframe

186
00:06:17,030 --> 00:06:20,909
storage is kind of confusing a mainframe

187
00:06:19,110 --> 00:06:22,710
world because it refers both to what we

188
00:06:20,909 --> 00:06:24,840
would call storage like hard drives like

189
00:06:22,710 --> 00:06:25,500
des D is the acronym they used for hard

190
00:06:24,840 --> 00:06:28,138
drives

191
00:06:25,500 --> 00:06:29,580
direct access storage device but it also

192
00:06:28,139 --> 00:06:31,500
means memory so if you are you hear

193
00:06:29,580 --> 00:06:32,789
about virtual storage that means like

194
00:06:31,500 --> 00:06:34,020
virtual memory like well you know like

195
00:06:32,789 --> 00:06:37,110
the windows the Linux world would call

196
00:06:34,020 --> 00:06:40,580
that and you don't have files you have

197
00:06:37,110 --> 00:06:44,240
datasets the mainframe operating the

198
00:06:40,580 --> 00:06:45,289
mainframe file system is very flat you

199
00:06:44,240 --> 00:06:46,699
don't have like a lot of nested

200
00:06:45,289 --> 00:06:50,389
directories like you do in Windows and

201
00:06:46,699 --> 00:06:52,099
UNIX land most things are to kind of

202
00:06:50,389 --> 00:06:53,539
organize it there kind of do it dot

203
00:06:52,099 --> 00:06:56,180
notation kind of like Java or like

204
00:06:53,539 --> 00:06:57,740
reverse DNS so like the first part will

205
00:06:56,180 --> 00:06:59,180
be the high-level qualifier will be the

206
00:06:57,740 --> 00:07:01,310
first part so like if it's a system file

207
00:06:59,180 --> 00:07:03,409
it's you feel like sis one dot something

208
00:07:01,310 --> 00:07:05,569
or if you as a user when you create a

209
00:07:03,409 --> 00:07:06,889
new a new data set it'll usually get

210
00:07:05,569 --> 00:07:08,960
appended with your username so if your

211
00:07:06,889 --> 00:07:12,129
user one and you make a file called like

212
00:07:08,960 --> 00:07:14,030
job JCL it'll become user one jobs ACL

213
00:07:12,129 --> 00:07:16,520
that was those were what you call

214
00:07:14,030 --> 00:07:18,409
sequential data sets which are kind of

215
00:07:16,520 --> 00:07:20,419
normal files like it's just a file and

216
00:07:18,409 --> 00:07:22,490
then the equivalent of a folder is

217
00:07:20,419 --> 00:07:24,560
called a PDS or a partitioned data set

218
00:07:22,490 --> 00:07:27,139
and in this example you see that it's

219
00:07:24,560 --> 00:07:29,120
like user 1 PDS and then in parentheses

220
00:07:27,139 --> 00:07:31,759
you put the members like the contents of

221
00:07:29,120 --> 00:07:33,590
this you know directory but you can't

222
00:07:31,759 --> 00:07:34,639
nest PDS is you can only have one PDS

223
00:07:33,590 --> 00:07:36,378
with stuff you can't have like nested

224
00:07:34,639 --> 00:07:37,940
inside it so it's not it's not like a

225
00:07:36,379 --> 00:07:40,490
Windows or UNIX file system it's very

226
00:07:37,940 --> 00:07:42,590
flat almost everything on the mainframe

227
00:07:40,490 --> 00:07:45,050
is a job like even if you have like the

228
00:07:42,590 --> 00:07:47,419
HTTP server running it's running as a as

229
00:07:45,050 --> 00:07:49,039
a start a task or a job and everything

230
00:07:47,419 --> 00:07:50,448
is managed by the job entries subsystem

231
00:07:49,039 --> 00:07:52,490
that controls all the batch jobs that

232
00:07:50,449 --> 00:07:56,810
get processed all the jobs you submit

233
00:07:52,490 --> 00:07:58,520
and then also you'll hear MVS used MVS

234
00:07:56,810 --> 00:07:59,900
is the mainframe operating system has

235
00:07:58,520 --> 00:08:03,109
changed names about a dozen times

236
00:07:59,900 --> 00:08:05,870
between 1964 and now and for most of the

237
00:08:03,110 --> 00:08:06,860
70s and 80s it was called MVS and so

238
00:08:05,870 --> 00:08:09,440
you'll still hear people have to refer

239
00:08:06,860 --> 00:08:12,409
to the MVS file system or I uploaded a

240
00:08:09,440 --> 00:08:13,879
file on FTP to the MVS side so when you

241
00:08:12,409 --> 00:08:18,139
hear MVS that just means the mainframe

242
00:08:13,879 --> 00:08:19,550
OS it's just a old-timey term for it the

243
00:08:18,139 --> 00:08:22,069
way you interact with the mainframe is

244
00:08:19,550 --> 00:08:23,599
with TN 30 to 70 would we call the green

245
00:08:22,069 --> 00:08:26,120
screen it's actually a modified version

246
00:08:23,599 --> 00:08:29,449
of telnet that speaks EPSA deck instead

247
00:08:26,120 --> 00:08:31,009
of ASCII and it emulates an IBM 3270

248
00:08:29,449 --> 00:08:32,180
terminal kind of the same way like when

249
00:08:31,009 --> 00:08:34,099
you use SSH or something you're

250
00:08:32,179 --> 00:08:36,799
emulating an old vt100 terminal

251
00:08:34,099 --> 00:08:38,329
technically vtm don't kill me many

252
00:08:36,799 --> 00:08:39,799
framers but I'll you know simplify it's

253
00:08:38,328 --> 00:08:41,598
a vtm it's kind like your portal when

254
00:08:39,799 --> 00:08:43,698
you start your tea and 3270 session and

255
00:08:41,599 --> 00:08:44,959
you hit port 23 you'll get the V Tam

256
00:08:43,698 --> 00:08:46,579
screen and I'll ask you what you want to

257
00:08:44,959 --> 00:08:48,560
do like do you want to log into TSO or

258
00:08:46,579 --> 00:08:50,000
do you want to log into a Kix app it

259
00:08:48,560 --> 00:08:51,530
does a lot more but for our purposes

260
00:08:50,000 --> 00:08:53,900
it's a portal so I won't go too

261
00:08:51,530 --> 00:08:55,280
much depth on that TSO is basically like

262
00:08:53,900 --> 00:08:57,230
the shell is the command-line interface

263
00:08:55,280 --> 00:08:58,250
for the mainframe and I'm gonna show it

264
00:08:57,230 --> 00:09:00,470
to you here in just a minute with some

265
00:08:58,250 --> 00:09:03,170
demo videos ispf is kind of the

266
00:09:00,470 --> 00:09:04,460
mainframe GUI it's very encouraged like

267
00:09:03,170 --> 00:09:05,990
it's in the terminal you can actually

268
00:09:04,460 --> 00:09:09,200
click around your mouse but it's me know

269
00:09:05,990 --> 00:09:10,940
text-based and then every mainframe has

270
00:09:09,200 --> 00:09:11,570
Unix inside it it's a mandatory

271
00:09:10,940 --> 00:09:13,460
component

272
00:09:11,570 --> 00:09:15,680
it was IBM's cheap and dirty way of

273
00:09:13,460 --> 00:09:18,110
porting TCP into the mainframe like in

274
00:09:15,680 --> 00:09:19,219
the 80s which windows scanted is

275
00:09:18,110 --> 00:09:20,870
something similar Windows like ripped

276
00:09:19,220 --> 00:09:23,120
off like BS D's like network stack in

277
00:09:20,870 --> 00:09:23,900
order to have TCP you yeah IBM was just

278
00:09:23,120 --> 00:09:26,960
like well let's just put a whole

279
00:09:23,900 --> 00:09:28,819
freaking unix inside it so it's a little

280
00:09:26,960 --> 00:09:30,770
oh s it's much like WS L is in Windows

281
00:09:28,820 --> 00:09:33,740
10 it runs as a subsystem it can talk to

282
00:09:30,770 --> 00:09:35,930
the mainframe the mb/s file system you

283
00:09:33,740 --> 00:09:37,160
can copy files down to UNIX it can

284
00:09:35,930 --> 00:09:42,589
interact with it in certain ways and

285
00:09:37,160 --> 00:09:44,660
you'll see that in the demos yeah I'm

286
00:09:42,590 --> 00:09:45,980
probably not doing it justice I know

287
00:09:44,660 --> 00:09:48,430
main framers are gonna be

288
00:09:45,980 --> 00:09:51,680
shaking their fist at me like you know

289
00:09:48,430 --> 00:09:53,089
but anyway mainframe culture is very

290
00:09:51,680 --> 00:09:54,680
different than Windows culture mainframe

291
00:09:53,090 --> 00:09:56,300
most your mainframe installs are very

292
00:09:54,680 --> 00:09:57,589
old I mean people have been made from

293
00:09:56,300 --> 00:09:59,510
customers have been customers since the

294
00:09:57,589 --> 00:10:01,250
60s and 70s they have their own culture

295
00:09:59,510 --> 00:10:03,439
around it they'll even use their own

296
00:10:01,250 --> 00:10:04,850
terminology internally that like IBM

297
00:10:03,440 --> 00:10:07,460
doesn't use so it can't be kind of

298
00:10:04,850 --> 00:10:09,170
confusing and may ribs kind of want to

299
00:10:07,460 --> 00:10:10,970
be decentralized and centralized at the

300
00:10:09,170 --> 00:10:13,579
same time you'll generally only have one

301
00:10:10,970 --> 00:10:14,930
or a handful of large boxes but like I

302
00:10:13,580 --> 00:10:17,930
mentioned they'll be divvied up into L

303
00:10:14,930 --> 00:10:20,479
pars or if you run zvm which is another

304
00:10:17,930 --> 00:10:21,410
popular mainframe OS it's actually was

305
00:10:20,480 --> 00:10:23,780
the it was actually the very first

306
00:10:21,410 --> 00:10:26,209
hypervisor created in the 70s it might

307
00:10:23,780 --> 00:10:28,310
have like a thousand like Z Linux

308
00:10:26,210 --> 00:10:29,360
instances running inside of it so it

309
00:10:28,310 --> 00:10:30,709
kind of wants to be in the center

310
00:10:29,360 --> 00:10:31,790
everything but also kind of wants to be

311
00:10:30,710 --> 00:10:35,600
distributed with a bunch of different

312
00:10:31,790 --> 00:10:38,209
instances to security is not exactly

313
00:10:35,600 --> 00:10:39,770
built into z/os z/os has a very

314
00:10:38,210 --> 00:10:42,770
rudimentary like data set security

315
00:10:39,770 --> 00:10:44,390
falses features to it but almost

316
00:10:42,770 --> 00:10:46,670
everyone buys an external security

317
00:10:44,390 --> 00:10:48,380
manager the most popular is rack F which

318
00:10:46,670 --> 00:10:50,569
is the one IBM makes and then Computer

319
00:10:48,380 --> 00:10:53,420
Associates owns two others ACF to and

320
00:10:50,570 --> 00:10:54,620
top secret I'll talk about rack F it's

321
00:10:53,420 --> 00:10:55,880
the most popular it's got the biggest

322
00:10:54,620 --> 00:10:58,460
market share and it's the one that I

323
00:10:55,880 --> 00:11:01,310
have available to me to test so this the

324
00:10:58,460 --> 00:11:03,740
one I'll be covering and rack F has a

325
00:11:01,310 --> 00:11:05,359
database that basically holds everything

326
00:11:03,740 --> 00:11:06,769
in it holds a table of all the

327
00:11:05,360 --> 00:11:08,690
all permissions who has rights to what

328
00:11:06,769 --> 00:11:09,920
all the different profiles it holds the

329
00:11:08,690 --> 00:11:12,019
password hashes it can hold

330
00:11:09,920 --> 00:11:14,209
cryptographic keys you can use the are

331
00:11:12,019 --> 00:11:16,070
very command in TSO in order to find out

332
00:11:14,209 --> 00:11:19,279
like what the name of the database data

333
00:11:16,070 --> 00:11:22,640
set is there's no real concept of a root

334
00:11:19,279 --> 00:11:23,930
or an admin like super user in mainframe

335
00:11:22,640 --> 00:11:25,459
world

336
00:11:23,930 --> 00:11:27,260
the closest thing is like if somebody

337
00:11:25,459 --> 00:11:28,489
has the special attribute in rack F

338
00:11:27,260 --> 00:11:30,290
which just basically means they can

339
00:11:28,490 --> 00:11:32,060
change anything in rack F so if you have

340
00:11:30,290 --> 00:11:33,500
special you can give yourself access to

341
00:11:32,060 --> 00:11:36,079
every file every data set on the

342
00:11:33,500 --> 00:11:38,510
mainframe historically they've had

343
00:11:36,079 --> 00:11:40,819
really shitty passwords and really bad

344
00:11:38,510 --> 00:11:43,310
like des hash functions I mean it's like

345
00:11:40,820 --> 00:11:45,320
LM level bad they have gotten better

346
00:11:43,310 --> 00:11:47,540
they've now support longer passphrases

347
00:11:45,320 --> 00:11:50,120
they support a new algorithm called KDF

348
00:11:47,540 --> 00:11:52,699
AES which is AES based for hashing

349
00:11:50,120 --> 00:11:54,800
passwords they even support like RSA

350
00:11:52,700 --> 00:11:56,060
tokens is stuff like that but don't be

351
00:11:54,800 --> 00:11:57,469
surprised if you go to a site and

352
00:11:56,060 --> 00:11:59,540
they're still using like 8 character

353
00:11:57,470 --> 00:12:01,279
passwords that are all uppercase and

354
00:11:59,540 --> 00:12:04,579
only allow like 3 special characters to

355
00:12:01,279 --> 00:12:08,120
be used inside them because main framers

356
00:12:04,579 --> 00:12:09,529
also tend it tend to have a III a BD fi

357
00:12:08,120 --> 00:12:11,149
if it ain't broke don't fix it

358
00:12:09,529 --> 00:12:12,500
they tend to have that the kind of

359
00:12:11,149 --> 00:12:16,130
mentality sometimes like well it's

360
00:12:12,500 --> 00:12:17,180
working don't with it on the

361
00:12:16,130 --> 00:12:18,860
mainframe you're big you're big

362
00:12:17,180 --> 00:12:20,209
programming platforms are still like

363
00:12:18,860 --> 00:12:22,880
assembler a lot of people still write

364
00:12:20,209 --> 00:12:23,719
stuff in like 64 bit big endian

365
00:12:22,880 --> 00:12:26,420
z/architecture

366
00:12:23,720 --> 00:12:28,430
assembler code a COBOL and silk and pl/i

367
00:12:26,420 --> 00:12:31,760
are still out there Fortran seems to

368
00:12:28,430 --> 00:12:33,260
have kind of PL 1 sorry see I'm already

369
00:12:31,760 --> 00:12:37,510
getting courage I'm going again the

370
00:12:33,260 --> 00:12:39,470
actually from the mainframe nerds

371
00:12:37,510 --> 00:12:40,760
Fortran seems to have fallen off in

372
00:12:39,470 --> 00:12:42,709
popularity because it's not even

373
00:12:40,760 --> 00:12:44,689
referenced on some IBM sites but it for

374
00:12:42,709 --> 00:12:46,609
transpose day later and then through USS

375
00:12:44,690 --> 00:12:50,779
UNIX system services you get Java and C

376
00:12:46,610 --> 00:12:52,430
and C++ your big scripting languages the

377
00:12:50,779 --> 00:12:53,930
biggest is JCL which is really much more

378
00:12:52,430 --> 00:12:55,399
than the scripting language pretty much

379
00:12:53,930 --> 00:12:56,630
everything is done with JCL with a

380
00:12:55,399 --> 00:12:58,399
called job cards which you could think

381
00:12:56,630 --> 00:12:59,870
of like a script now i'll tell like a

382
00:12:58,399 --> 00:13:01,250
program how to run what to do with the

383
00:12:59,870 --> 00:13:03,769
input what to do with the output you'll

384
00:13:01,250 --> 00:13:06,110
see some examples in a minute see list i

385
00:13:03,769 --> 00:13:08,029
would liken it to like dos batch files

386
00:13:06,110 --> 00:13:10,430
it's just like a list of TSO commands

387
00:13:08,029 --> 00:13:12,019
with some kind of primitive like loops

388
00:13:10,430 --> 00:13:13,910
and stuff it sucks

389
00:13:12,019 --> 00:13:16,310
use rex instead rex is a much more

390
00:13:13,910 --> 00:13:18,649
feature filled scripting language it's

391
00:13:16,310 --> 00:13:20,388
much more like Perl or Python

392
00:13:18,649 --> 00:13:22,309
most of the tools that like guys like I

393
00:13:20,389 --> 00:13:23,930
feel young is one of the big is like the

394
00:13:22,309 --> 00:13:24,769
god of like mainframe hacking he

395
00:13:23,930 --> 00:13:26,359
actually helped me with this

396
00:13:24,769 --> 00:13:28,430
presentation and reviewed it for me so

397
00:13:26,360 --> 00:13:31,100
Big Ups to Phil I'll thank him later in

398
00:13:28,430 --> 00:13:32,180
the in the acknowledgement section him

399
00:13:31,100 --> 00:13:33,949
and mostly guys do you mainframe hacking

400
00:13:32,180 --> 00:13:35,179
right there stuff in racks and then you

401
00:13:33,949 --> 00:13:37,248
also get shell scripts and Perl and

402
00:13:35,179 --> 00:13:38,720
stuff through SS and rocket software

403
00:13:37,249 --> 00:13:40,519
which is a big mainframe software vendor

404
00:13:38,720 --> 00:13:42,019
they've ported Python and some other

405
00:13:40,519 --> 00:13:45,920
tools which you can get for free off

406
00:13:42,019 --> 00:13:47,509
their website if you sign up these I

407
00:13:45,920 --> 00:13:49,610
won't cover as much because it's a feat

408
00:13:47,509 --> 00:13:51,410
it's a whole subject to itself is kicks

409
00:13:49,610 --> 00:13:53,720
and IMS so kick stands for customer

410
00:13:51,410 --> 00:13:55,819
information control system and that is

411
00:13:53,720 --> 00:13:57,139
basically like mainframe apps so that

412
00:13:55,819 --> 00:14:00,290
you don't have to teach normies how to

413
00:13:57,139 --> 00:14:02,179
use TSO and log into stuff if you seem

414
00:14:00,290 --> 00:14:03,439
like funky like people and like look

415
00:14:02,179 --> 00:14:05,720
like DOS prompts and they're in these

416
00:14:03,439 --> 00:14:08,269
like you know green screen apps like at

417
00:14:05,720 --> 00:14:09,949
your DMV or maybe like at a like an

418
00:14:08,269 --> 00:14:11,240
autozone or something it's very likely

419
00:14:09,949 --> 00:14:12,800
it's a Kix application they're

420
00:14:11,240 --> 00:14:14,179
interacting with if you can see this

421
00:14:12,800 --> 00:14:16,040
example like this is just like a form

422
00:14:14,179 --> 00:14:17,300
field and all somebody would do just you

423
00:14:16,040 --> 00:14:18,410
know click around fill out the form

424
00:14:17,300 --> 00:14:20,779
field hit enter it's just a

425
00:14:18,410 --> 00:14:23,569
purpose-built application a lot of the

426
00:14:20,779 --> 00:14:25,699
security is actually relying on the TN

427
00:14:23,569 --> 00:14:27,679
3270 protocol to behave and a lot of it

428
00:14:25,699 --> 00:14:29,899
is what we would call client side so a

429
00:14:27,679 --> 00:14:31,670
lot of it sucks it's a subject to itself

430
00:14:29,899 --> 00:14:33,649
if you're more curious

431
00:14:31,670 --> 00:14:35,329
Domenic white and a you LS all have done

432
00:14:33,649 --> 00:14:38,209
some great work on this I have links in

433
00:14:35,329 --> 00:14:39,290
the resources so after this talk if you

434
00:14:38,209 --> 00:14:41,059
want to download it from my Google Drive

435
00:14:39,290 --> 00:14:43,129
all I'll have to link on my blog you can

436
00:14:41,059 --> 00:14:44,540
go see all their presentations it's it's

437
00:14:43,129 --> 00:14:48,110
it's a really fascinating topic on its

438
00:14:44,540 --> 00:14:51,019
own but I can't really cover it all so

439
00:14:48,110 --> 00:14:52,279
now some demos so let me show you all I

440
00:14:51,019 --> 00:14:55,550
just recorded it because I'm not gonna

441
00:14:52,279 --> 00:14:58,189
attempt the demo gods I'll show you guys

442
00:14:55,550 --> 00:15:04,279
a little demo of what Tso and ispf look

443
00:14:58,189 --> 00:15:08,089
like here alrighty okay so here I'm

444
00:15:04,279 --> 00:15:11,360
using X 32 70 which is just a free Linux

445
00:15:08,089 --> 00:15:13,129
x11 based terminal emulator it runs in

446
00:15:11,360 --> 00:15:14,449
Mac you can run in Windows and I'll go

447
00:15:13,129 --> 00:15:16,759
over some of the other options for you

448
00:15:14,449 --> 00:15:17,839
if depending what platform you use so

449
00:15:16,759 --> 00:15:19,040
here's the first thing I'm gonna go and

450
00:15:17,839 --> 00:15:22,069
I'm going to connect to the IP the

451
00:15:19,040 --> 00:15:23,809
default port is 23 just like telnet now

452
00:15:22,069 --> 00:15:25,729
pause it real quick you see here this is

453
00:15:23,809 --> 00:15:27,829
V TM so you're hitting the v TM screen

454
00:15:25,730 --> 00:15:29,509
and it's telling you I you can do this

455
00:15:27,829 --> 00:15:31,699
you can do login and your user name ID

456
00:15:29,509 --> 00:15:32,180
or you going to enter Tia so if I had

457
00:15:31,699 --> 00:15:33,890
kicks

458
00:15:32,180 --> 00:15:37,010
anything installed it might say Oh enter

459
00:15:33,890 --> 00:15:40,189
this to enter kicks 1 2 3 4 to hit this

460
00:15:37,010 --> 00:15:41,750
kicks region so if you're not sure if

461
00:15:40,190 --> 00:15:46,430
you're on VTA or not you can just hit

462
00:15:41,750 --> 00:15:47,630
the command IBM test and it'll print a

463
00:15:46,430 --> 00:15:48,770
little test screen so if you're hitting

464
00:15:47,630 --> 00:15:50,450
an app and you're not sure whether those

465
00:15:48,770 --> 00:15:52,040
feet a more kicks or something else you

466
00:15:50,450 --> 00:15:54,800
can just do that and here I'm going to

467
00:15:52,040 --> 00:15:56,990
use the log on command if it works there

468
00:15:54,800 --> 00:15:59,120
we go and there's my username so this is

469
00:15:56,990 --> 00:16:01,190
a this is a mainframe it's part of

470
00:15:59,120 --> 00:16:03,020
master the mainframe which is an IBM

471
00:16:01,190 --> 00:16:04,399
program for like college outreach you

472
00:16:03,020 --> 00:16:07,130
can get a free account on it I'll just

473
00:16:04,399 --> 00:16:09,200
tell you the details later that's a very

474
00:16:07,130 --> 00:16:11,270
common username scheme you'll see for we

475
00:16:09,200 --> 00:16:13,160
call TSO IDs if you work at a place in

476
00:16:11,270 --> 00:16:14,300
your username is called a TSO d ID this

477
00:16:13,160 --> 00:16:16,430
is why it's because you're a mainframe

478
00:16:14,300 --> 00:16:18,349
customer and a lot of time it'll follow

479
00:16:16,430 --> 00:16:20,689
a format like TS those requirements are

480
00:16:18,350 --> 00:16:23,510
you have to be seven characters and it

481
00:16:20,690 --> 00:16:26,270
can't start with a number so I worked at

482
00:16:23,510 --> 00:16:28,250
a place where our login IDs for even for

483
00:16:26,270 --> 00:16:29,899
Windows was a and then a six digit

484
00:16:28,250 --> 00:16:31,970
number where I were to another place

485
00:16:29,899 --> 00:16:33,529
where we use TSO IDs and it was like

486
00:16:31,970 --> 00:16:35,240
your initials and a four digit number

487
00:16:33,529 --> 00:16:38,720
that's just like one of the old like

488
00:16:35,240 --> 00:16:42,020
limitations of TSO so I'm gonna log in

489
00:16:38,720 --> 00:16:47,660
here and so I hit the login screen here

490
00:16:42,020 --> 00:16:49,130
I just enter my crappy password they'll

491
00:16:47,660 --> 00:16:50,990
go through some boot messages and stuff

492
00:16:49,130 --> 00:16:54,560
you know so broadcast messages kind of

493
00:16:50,990 --> 00:16:55,910
like on on SSH if you log in and here

494
00:16:54,560 --> 00:17:00,859
you'll get to see some episodic art in a

495
00:16:55,910 --> 00:17:02,630
minute yes and say ASCII art is episodic

496
00:17:00,860 --> 00:17:04,670
art main firmers love episodic art

497
00:17:02,630 --> 00:17:05,839
you'll see it a lot of it you like when

498
00:17:04,670 --> 00:17:07,699
you look at like some of the mainframes

499
00:17:05,839 --> 00:17:08,958
out there so there's the master the

500
00:17:07,699 --> 00:17:11,420
mainframe logo with a little like world

501
00:17:08,959 --> 00:17:15,709
map and so now we're gonna hit get into

502
00:17:11,420 --> 00:17:17,360
ispf here okay I'm actually gonna exit

503
00:17:15,709 --> 00:17:19,459
out of it and then I'm going to show TSO

504
00:17:17,359 --> 00:17:21,559
it looks like so this is the shell so

505
00:17:19,459 --> 00:17:24,829
this is TSO it has that ready prompt

506
00:17:21,559 --> 00:17:26,839
like a freaking commodore 64 and TSO

507
00:17:24,829 --> 00:17:28,940
socks like TSO is like for very low

508
00:17:26,839 --> 00:17:32,059
level stuff it's I mean it makes the

509
00:17:28,940 --> 00:17:34,190
command exe look good it's most main

510
00:17:32,059 --> 00:17:35,450
favors do their work in ispf but here

511
00:17:34,190 --> 00:17:36,679
I'll show you some commands like there's

512
00:17:35,450 --> 00:17:37,910
the list user command which is kinda

513
00:17:36,679 --> 00:17:40,610
like running ID it shows me all my

514
00:17:37,910 --> 00:17:42,530
access rights to stuff and my name and

515
00:17:40,610 --> 00:17:44,120
things you can also do shortcuts like a

516
00:17:42,530 --> 00:17:45,860
new Lu instead of list user and then I

517
00:17:44,120 --> 00:17:48,559
can give it a user ID

518
00:17:45,860 --> 00:17:49,909
I gave it my own but has liked my e by

519
00:17:48,559 --> 00:17:51,678
default I'm not allowed to view other

520
00:17:49,910 --> 00:17:52,790
users profiles like if I put something

521
00:17:51,679 --> 00:17:55,010
else's username it would just tell me

522
00:17:52,790 --> 00:17:56,299
I'm not allowed to do that but you do

523
00:17:55,010 --> 00:17:57,920
the same thing and here I'll tell it to

524
00:17:56,299 --> 00:18:00,290
specifically telling you my TSO and my

525
00:17:57,920 --> 00:18:02,090
OMB s rights so you can see OMB s right

526
00:18:00,290 --> 00:18:03,710
there I can see that like that's my UID

527
00:18:02,090 --> 00:18:06,110
on the system there's my home directory

528
00:18:03,710 --> 00:18:13,970
and then whatever shell I'm supposed to

529
00:18:06,110 --> 00:18:15,559
use when I blog into OMB s and now I'll

530
00:18:13,970 --> 00:18:18,919
run profile which is kind of like bash

531
00:18:15,559 --> 00:18:21,049
RC it'll it'll do things like say what P

532
00:18:18,919 --> 00:18:23,720
level qualifier is your default when you

533
00:18:21,049 --> 00:18:26,270
like run a command to list lists of

534
00:18:23,720 --> 00:18:27,710
datasets it has the ping command so

535
00:18:26,270 --> 00:18:29,809
there's even like network stuff ported

536
00:18:27,710 --> 00:18:31,309
over like ping is in there there's no

537
00:18:29,809 --> 00:18:33,649
real like ifconfig would instead what

538
00:18:31,309 --> 00:18:35,389
she uses Usenet stat home which I'm

539
00:18:33,650 --> 00:18:36,470
going to do right here and now I'll show

540
00:18:35,390 --> 00:18:38,570
you all your interfaces they're

541
00:18:36,470 --> 00:18:39,650
installed and when you get to the the

542
00:18:38,570 --> 00:18:41,149
other thing I'm TSO sucks there's no

543
00:18:39,650 --> 00:18:43,100
like job control there's no history

544
00:18:41,150 --> 00:18:44,270
there's no like scroll buffer when you

545
00:18:43,100 --> 00:18:45,530
hit the bottom of the screen you get the

546
00:18:44,270 --> 00:18:46,820
three asterisks and you have to hit

547
00:18:45,530 --> 00:18:49,610
enter and then it'll clear the screen

548
00:18:46,820 --> 00:18:51,590
and start at the top again yeah it's all

549
00:18:49,610 --> 00:18:53,559
TSO sucks that's why everybody does

550
00:18:51,590 --> 00:18:55,639
anything ispf cuz I have so much nicer

551
00:18:53,559 --> 00:18:57,770
so there's list cat which is kind of

552
00:18:55,640 --> 00:18:59,840
like the LS command it'll list and by

553
00:18:57,770 --> 00:19:02,000
default I have it set the like prefix

554
00:18:59,840 --> 00:19:03,770
everything with my username so when I do

555
00:19:02,000 --> 00:19:05,240
list cat and only lists the files that

556
00:19:03,770 --> 00:19:07,160
belong to me they have my high-level

557
00:19:05,240 --> 00:19:08,210
qualifier Ito which is my user name so

558
00:19:07,160 --> 00:19:09,830
there I've got a bunch of stuff here

559
00:19:08,210 --> 00:19:12,860
I've got some scripts I got from JCL

560
00:19:09,830 --> 00:19:16,699
stuff I've got different system files

561
00:19:12,860 --> 00:19:17,928
and you can also abbreviated see list

562
00:19:16,700 --> 00:19:19,580
des will actually just show you an

563
00:19:17,929 --> 00:19:21,890
individual file like it'll just show you

564
00:19:19,580 --> 00:19:24,889
some information like the block size ll

565
00:19:21,890 --> 00:19:26,240
making new files in nto TSO is also like

566
00:19:24,890 --> 00:19:28,130
a tremendous pain in the ass it's like

567
00:19:26,240 --> 00:19:31,070
defining c variables you have to assign

568
00:19:28,130 --> 00:19:33,650
like sizes and it sucks or here i'm

569
00:19:31,070 --> 00:19:36,320
listing out a PDS and I use the the

570
00:19:33,650 --> 00:19:39,650
members option in list des in order to

571
00:19:36,320 --> 00:19:43,580
like oh did it jump like it tonight

572
00:19:39,650 --> 00:19:45,730
jumped over hold on here okay let's do

573
00:19:43,580 --> 00:19:45,730
it again

574
00:19:46,360 --> 00:19:52,699
okay here I can use del to delete a file

575
00:19:49,130 --> 00:19:55,100
I can rename files making new files

576
00:19:52,700 --> 00:19:57,530
sucks I think I show a brief example

577
00:19:55,100 --> 00:20:00,439
just making a new blank file so there

578
00:19:57,530 --> 00:20:03,290
are eated the UNIX dot JCL and then I'm

579
00:20:00,440 --> 00:20:05,420
gonna rename test JC LT UNIX command J

580
00:20:03,290 --> 00:20:07,370
Co just to show you you know you can

581
00:20:05,420 --> 00:20:16,940
move stuff around it's not as nice as

582
00:20:07,370 --> 00:20:20,090
Linux but you'll get the job done come

583
00:20:16,940 --> 00:20:21,500
on oh yes you can't can't files it sucks

584
00:20:20,090 --> 00:20:23,300
you have to use the line editor in order

585
00:20:21,500 --> 00:20:25,370
to like view the contents of a file so

586
00:20:23,300 --> 00:20:28,520
here I'm gonna use edit on the command

587
00:20:25,370 --> 00:20:30,649
JCL file I just renamed and you'll go

588
00:20:28,520 --> 00:20:33,139
into line editor mode and also you tell

589
00:20:30,650 --> 00:20:35,210
it what type of data said it is so cntl

590
00:20:33,140 --> 00:20:36,770
just is what they use for it's a control

591
00:20:35,210 --> 00:20:38,150
file or it's a JCL there's also like

592
00:20:36,770 --> 00:20:39,680
text and there's a couple other options

593
00:20:38,150 --> 00:20:41,750
you can enter to tell it like what kind

594
00:20:39,680 --> 00:20:43,700
of file you're editing and then I have

595
00:20:41,750 --> 00:20:45,110
to use the list sub command in edit in

596
00:20:43,700 --> 00:20:47,990
order to list the contents and that's

597
00:20:45,110 --> 00:20:49,399
where the JCL job card looks like you'll

598
00:20:47,990 --> 00:20:52,130
see it in more detail in the ispf video

599
00:20:49,400 --> 00:20:56,090
so I do end no save to just quit out of

600
00:20:52,130 --> 00:20:57,110
it I'll see you here I'm editing

601
00:20:56,090 --> 00:21:01,970
something again I don't remember what I

602
00:20:57,110 --> 00:21:04,040
did here okay here's the Rex here's a

603
00:21:01,970 --> 00:21:06,890
Rex script which will look a lot like

604
00:21:04,040 --> 00:21:08,330
more user-friendly so I tell it's a text

605
00:21:06,890 --> 00:21:13,040
file because Rex is just treated like

606
00:21:08,330 --> 00:21:14,629
text okay and that listed out and here's

607
00:21:13,040 --> 00:21:15,379
your Rex file which you know looks a lot

608
00:21:14,630 --> 00:21:16,900
more familiar it looks like a

609
00:21:15,380 --> 00:21:20,240
programming language you might recognize

610
00:21:16,900 --> 00:21:23,000
you my comic convention you do it like a

611
00:21:20,240 --> 00:21:24,470
c-plus well no I call it a C++ spell

612
00:21:23,000 --> 00:21:26,420
comment but Rex might have done it first

613
00:21:24,470 --> 00:21:27,830
I don't know so you put Rex and then

614
00:21:26,420 --> 00:21:30,410
here's a comment this is a script that

615
00:21:27,830 --> 00:21:31,550
just lists all the the UNIX users and

616
00:21:30,410 --> 00:21:33,590
they're like you IDs and home

617
00:21:31,550 --> 00:21:35,540
directories and stuff out it's one that

618
00:21:33,590 --> 00:21:40,340
I kind of modified from a IBM example

619
00:21:35,540 --> 00:21:45,080
and now there's n no save and here's me

620
00:21:40,340 --> 00:21:47,060
executing this Rex script so you exec or

621
00:21:45,080 --> 00:21:50,179
e^x you can preview at e^x and then you

622
00:21:47,060 --> 00:21:51,679
put the name so here it is it's gonna

623
00:21:50,180 --> 00:21:53,210
generate a lot because I'm gonna big ass

624
00:21:51,680 --> 00:21:56,180
mainframe so here's another thing is

625
00:21:53,210 --> 00:21:58,820
your equivalent of ctrl C

626
00:21:56,180 --> 00:22:00,890
is the PA one function key which there's

627
00:21:58,820 --> 00:22:02,780
a lot of funky function keys in T and

628
00:22:00,890 --> 00:22:04,340
3270 that's why all the emulators have

629
00:22:02,780 --> 00:22:06,260
like a little virtual keyboard so you

630
00:22:04,340 --> 00:22:07,850
can get all these like weird ones so the

631
00:22:06,260 --> 00:22:09,170
the PF ones will usually be mapped to

632
00:22:07,850 --> 00:22:10,429
your function keys on your keyboard but

633
00:22:09,170 --> 00:22:12,920
like PA one and PA two

634
00:22:10,430 --> 00:22:14,330
they're mapped to something in X 3270 I

635
00:22:12,920 --> 00:22:16,700
don't remember so I just used the

636
00:22:14,330 --> 00:22:18,020
virtual on-screen one that's bass like

637
00:22:16,700 --> 00:22:21,260
that get me the hell out of here key is

638
00:22:18,020 --> 00:22:22,820
to bash PA one so you'll see it'll let

639
00:22:21,260 --> 00:22:25,580
me kill out of that long listing I just

640
00:22:22,820 --> 00:22:28,730
entered H I in order to exit ow so

641
00:22:25,580 --> 00:22:31,159
here's allocating a new data set called

642
00:22:28,730 --> 00:22:33,230
test and the fastest way to just to make

643
00:22:31,160 --> 00:22:34,820
a blank one is just to tell make a test

644
00:22:33,230 --> 00:22:36,800
and make it look like this other file I

645
00:22:34,820 --> 00:22:38,750
have named oh I screwed it up cuz

646
00:22:36,800 --> 00:22:40,430
there's nothing in test JCL so there's

647
00:22:38,750 --> 00:22:41,720
an error message for you to and all

648
00:22:40,430 --> 00:22:43,610
these like obscure error codes if you

649
00:22:41,720 --> 00:22:45,050
just google them they're all up on IBM's

650
00:22:43,610 --> 00:22:47,540
website you can see what they mean it

651
00:22:45,050 --> 00:22:49,760
may help you it may not sometimes

652
00:22:47,540 --> 00:22:52,639
they're a bit obscure so there is a

653
00:22:49,760 --> 00:22:53,720
today new data set and it's just blank

654
00:22:52,640 --> 00:22:56,260
it's just that's just basically the

655
00:22:53,720 --> 00:22:58,940
equivalent running the touch command

656
00:22:56,260 --> 00:23:01,850
okay I think that's the end of that demo

657
00:22:58,940 --> 00:23:07,070
okay and um I'm logging off and so now

658
00:23:01,850 --> 00:23:09,860
I'm out of out of that so next up let's

659
00:23:07,070 --> 00:23:13,010
see what is PF looks like ice PF is much

660
00:23:09,860 --> 00:23:16,399
nicer to interact with it holds your

661
00:23:13,010 --> 00:23:18,620
hand a little better so here I am a V

662
00:23:16,400 --> 00:23:20,570
team again and I did the generic TSO

663
00:23:18,620 --> 00:23:24,500
which let me enter a username and then

664
00:23:20,570 --> 00:23:26,659
my password back in okay I'm back

665
00:23:24,500 --> 00:23:28,520
connected so this is ispf which gives

666
00:23:26,660 --> 00:23:30,200
you this nice little number driven menu

667
00:23:28,520 --> 00:23:32,090
you know you see everything there Lily

668
00:23:30,200 --> 00:23:33,080
said it's much more user friendly so at

669
00:23:32,090 --> 00:23:34,820
the bottom they have other functions

670
00:23:33,080 --> 00:23:36,530
this this install has been nice enough

671
00:23:34,820 --> 00:23:39,050
to define little shortcuts to common

672
00:23:36,530 --> 00:23:41,240
things like UNIX or SD SF which you'll

673
00:23:39,050 --> 00:23:42,980
see in a minute that's not default

674
00:23:41,240 --> 00:23:45,260
that's somebody's been nice enough to do

675
00:23:42,980 --> 00:23:46,790
that you'll see every install will be a

676
00:23:45,260 --> 00:23:48,320
little bit different and how its laid

677
00:23:46,790 --> 00:23:49,280
out it all kind of depends on the

678
00:23:48,320 --> 00:23:52,030
history of the company and how the

679
00:23:49,280 --> 00:23:54,010
mainframe was like their stuff

680
00:23:52,030 --> 00:23:55,870
you can run TSO commands in there too if

681
00:23:54,010 --> 00:23:57,370
you do TSO and then let's see you'll see

682
00:23:55,870 --> 00:24:00,729
it run the list C command for me and

683
00:23:57,370 --> 00:24:02,379
then once it's done go back to ISP F so

684
00:24:00,730 --> 00:24:04,330
here I went to three which is utilities

685
00:24:02,380 --> 00:24:07,660
and I'm gonna go to 4 which is DS list

686
00:24:04,330 --> 00:24:08,379
which is just for listing out data sets

687
00:24:07,660 --> 00:24:10,690
in the file system

688
00:24:08,380 --> 00:24:12,220
so here the DS name level is my username

689
00:24:10,690 --> 00:24:13,480
and so you can see just like running

690
00:24:12,220 --> 00:24:15,520
list C you can see all the files that

691
00:24:13,480 --> 00:24:18,130
belong to me and here I'm gonna edit one

692
00:24:15,520 --> 00:24:19,990
so I went real quick down here and in

693
00:24:18,130 --> 00:24:22,240
this column I put the letter E and hit

694
00:24:19,990 --> 00:24:23,920
enter and that's tell them telling ispf

695
00:24:22,240 --> 00:24:26,200
I want to go into the ispf editor and

696
00:24:23,920 --> 00:24:27,400
edit this file so you get one of these

697
00:24:26,200 --> 00:24:31,270
little messages you just hit enter and

698
00:24:27,400 --> 00:24:34,150
ignore the come on there we go

699
00:24:31,270 --> 00:24:36,280
so here's a JCL job card so this is one

700
00:24:34,150 --> 00:24:38,650
that it's just a simple one that it runs

701
00:24:36,280 --> 00:24:43,450
a program called I this very very easy

702
00:24:38,650 --> 00:24:45,040
to remember name ikj EFT 0 1 which is

703
00:24:43,450 --> 00:24:47,920
basically just a JCL program it just

704
00:24:45,040 --> 00:24:49,840
says run TSO commands so here's this is

705
00:24:47,920 --> 00:24:51,640
the name of the job which i need at TSO

706
00:24:49,840 --> 00:24:53,139
info and then there's some like control

707
00:24:51,640 --> 00:24:55,570
information so that you can you know

708
00:24:53,140 --> 00:24:57,910
tell you know prioritize jobs and stuff

709
00:24:55,570 --> 00:25:00,100
this is the name of the step because JCL

710
00:24:57,910 --> 00:25:01,840
jobs can have multiple steps i'm kind of

711
00:25:00,100 --> 00:25:03,219
defined convention because as a good

712
00:25:01,840 --> 00:25:05,470
user you're supposed to just use your

713
00:25:03,220 --> 00:25:07,240
username and then another number but i

714
00:25:05,470 --> 00:25:09,040
did it to be a little more readable so

715
00:25:07,240 --> 00:25:11,830
this is just saying this step i'm gonna

716
00:25:09,040 --> 00:25:13,090
run this program i'm just doing

717
00:25:11,830 --> 00:25:14,439
something this is controlling like the

718
00:25:13,090 --> 00:25:16,240
input and output stuff it's just going

719
00:25:14,440 --> 00:25:19,960
to print to like a file that i'm gonna

720
00:25:16,240 --> 00:25:22,150
read through the SD SF manager and I'm

721
00:25:19,960 --> 00:25:23,470
just gonna run these commands so here

722
00:25:22,150 --> 00:25:24,610
I'll show you how to edit it so let's

723
00:25:23,470 --> 00:25:26,140
say I want to delete that I just go

724
00:25:24,610 --> 00:25:28,270
there to the line number and I write D

725
00:25:26,140 --> 00:25:32,170
and enter and it deletes it and then I'm

726
00:25:28,270 --> 00:25:33,550
gonna I to re-enter a number and you put

727
00:25:32,170 --> 00:25:35,020
a new line in there and I'll read at it

728
00:25:33,550 --> 00:25:38,830
and hit enter hit enter again I'm done

729
00:25:35,020 --> 00:25:41,260
so I'm gonna go save it and then I'm

730
00:25:38,830 --> 00:25:43,570
gonna submit it and I'll submit it to be

731
00:25:41,260 --> 00:25:46,030
hold on you gonna almost missed it let

732
00:25:43,570 --> 00:25:49,710
me go back a little bit at the bottom of

733
00:25:46,030 --> 00:25:49,710
the screen you can barely see it oh

734
00:25:54,300 --> 00:25:58,270
there we go you can see down here that

735
00:25:56,470 --> 00:26:00,070
says job submitted so it gives me a job

736
00:25:58,270 --> 00:26:02,290
number so that I can go find out like

737
00:26:00,070 --> 00:26:03,970
when it's completed and what input what

738
00:26:02,290 --> 00:26:05,720
input or output it made or if it screwed

739
00:26:03,970 --> 00:26:09,540
up and generate an error for me

740
00:26:05,720 --> 00:26:11,280
so I'm going to exit out of here you use

741
00:26:09,540 --> 00:26:12,899
the f3 command well like just send you

742
00:26:11,280 --> 00:26:14,220
back that's also kind of like to get me

743
00:26:12,900 --> 00:26:16,560
the hell out of here just hit the f3

744
00:26:14,220 --> 00:26:20,430
function key and so now I'm going to go

745
00:26:16,560 --> 00:26:22,169
to SDS F as CF f is kind of like the

746
00:26:20,430 --> 00:26:24,600
task manager in Windows but on steroids

747
00:26:22,170 --> 00:26:26,370
so I'm going in there and going to st to

748
00:26:24,600 --> 00:26:27,899
view job status so I'm go down to my job

749
00:26:26,370 --> 00:26:32,550
here I'll do a question mark in the

750
00:26:27,900 --> 00:26:34,440
column enter and system cysts ts print

751
00:26:32,550 --> 00:26:36,899
and you can see the output my job which

752
00:26:34,440 --> 00:26:40,020
it just ran TSO command so ran Lu it

753
00:26:36,900 --> 00:26:48,300
then ran or they run down here and net

754
00:26:40,020 --> 00:26:50,850
stay-at-home and some other stuff so

755
00:26:48,300 --> 00:26:53,159
when I'm done there I can a lot of times

756
00:26:50,850 --> 00:26:56,879
f4 will just be a generic Kia send you

757
00:26:53,160 --> 00:26:57,780
back to the start of the ice PF menu so

758
00:26:56,880 --> 00:27:00,240
now I'm going to add another one and

759
00:26:57,780 --> 00:27:03,899
this is another JCL job that will run

760
00:27:00,240 --> 00:27:05,550
unix commands for me and so this one

761
00:27:03,900 --> 00:27:07,890
here runs another program called bpx

762
00:27:05,550 --> 00:27:10,020
batch about anything that says bpx I

763
00:27:07,890 --> 00:27:11,910
don't know what that actually stands for

764
00:27:10,020 --> 00:27:14,129
but always refers to UNIX because you'll

765
00:27:11,910 --> 00:27:15,900
see like bpx super-users like the rack F

766
00:27:14,130 --> 00:27:18,270
permission to like let somebody be super

767
00:27:15,900 --> 00:27:19,620
user in UNIX so this one I'm just

768
00:27:18,270 --> 00:27:22,379
feeding it a parameter and it's gonna

769
00:27:19,620 --> 00:27:24,689
run ID in the nest @h in order to see

770
00:27:22,380 --> 00:27:25,830
like my interfaces so here I'll show you

771
00:27:24,690 --> 00:27:27,260
a little shortcut so I didn't have to

772
00:27:25,830 --> 00:27:29,720
like enter so much text I can write

773
00:27:27,260 --> 00:27:33,090
reset to get rid of or error messages

774
00:27:29,720 --> 00:27:35,520
now you submit and then : and then as it

775
00:27:33,090 --> 00:27:38,970
signifies I'm gonna feed it another T is

776
00:27:35,520 --> 00:27:41,280
PF command so I'm gonna do equals SD

777
00:27:38,970 --> 00:27:43,650
which means go back to the first panel

778
00:27:41,280 --> 00:27:45,330
of ice of ice PF and run the command

779
00:27:43,650 --> 00:27:47,130
because the SD commands define there and

780
00:27:45,330 --> 00:27:47,669
the first like the homepage of ispf you

781
00:27:47,130 --> 00:27:49,680
wanna call it that

782
00:27:47,670 --> 00:27:52,230
and in another colon saying hey once

783
00:27:49,680 --> 00:27:54,600
you're in sts f we run st to go view job

784
00:27:52,230 --> 00:27:56,760
statuses so that saves me some steps so

785
00:27:54,600 --> 00:27:58,830
I'm right back at this page now and so

786
00:27:56,760 --> 00:28:04,920
I'll go find that unix job i go take a

787
00:27:58,830 --> 00:28:07,409
look i go view it and there you go see I

788
00:28:04,920 --> 00:28:09,360
ran my UID and GID info cause we're in

789
00:28:07,410 --> 00:28:10,890
the ID command and then then that's debt

790
00:28:09,360 --> 00:28:14,179
and home info so I can see like my

791
00:28:10,890 --> 00:28:14,180
interface and everything

792
00:28:14,770 --> 00:28:21,680
and go back to the homepage of ispf and

793
00:28:18,200 --> 00:28:23,510
now we're gonna take a look at Unix so

794
00:28:21,680 --> 00:28:26,540
you can get to you next video the OMB s

795
00:28:23,510 --> 00:28:28,640
command in TSO so also your people call

796
00:28:26,540 --> 00:28:30,320
UNIX own vs it stands for like open

797
00:28:28,640 --> 00:28:31,430
Edition mb/s so it looks what they

798
00:28:30,320 --> 00:28:33,260
called it back in the 80s when they

799
00:28:31,430 --> 00:28:35,990
first ported it into the mainframe OS

800
00:28:33,260 --> 00:28:37,220
and you get this little prompt here so I

801
00:28:35,990 --> 00:28:38,570
can do it you know Sarah and I D come

802
00:28:37,220 --> 00:28:40,820
and show that you name it still thinks

803
00:28:38,570 --> 00:28:42,230
it's OS 390 which is the 90s name for

804
00:28:40,820 --> 00:28:43,909
mainframe operating system I don't know

805
00:28:42,230 --> 00:28:45,800
why they haven't updated the head but

806
00:28:43,910 --> 00:28:47,450
you know I can run LS and let's see

807
00:28:45,800 --> 00:28:48,980
what's in my home directory do all this

808
00:28:47,450 --> 00:28:50,960
stuff and you can also get to this

809
00:28:48,980 --> 00:28:51,980
through SSH usually or older

810
00:28:50,960 --> 00:28:53,690
environments might still have like

811
00:28:51,980 --> 00:28:55,250
telnet or even like our login or

812
00:28:53,690 --> 00:28:57,950
something in order to interact with UNIX

813
00:28:55,250 --> 00:29:00,560
pro tip is to find your terminal

814
00:28:57,950 --> 00:29:03,230
variable it's like do like you know do

815
00:29:00,560 --> 00:29:05,179
like export term equals VT 100 or else

816
00:29:03,230 --> 00:29:07,460
like you won't be able to use like VI or

817
00:29:05,180 --> 00:29:09,380
or clear screen or like the nice like

818
00:29:07,460 --> 00:29:11,270
terminal commands cuz it was because it

819
00:29:09,380 --> 00:29:12,680
won't know because you're on modern

820
00:29:11,270 --> 00:29:14,690
system like the terminal variable if it

821
00:29:12,680 --> 00:29:16,010
would be like X term you know 256 or

822
00:29:14,690 --> 00:29:16,580
something like that it won't know what

823
00:29:16,010 --> 00:29:18,650
the hell that is

824
00:29:16,580 --> 00:29:21,679
you got tell it's a VT 100 and hear what

825
00:29:18,650 --> 00:29:22,970
I just did is I just ran I just copied a

826
00:29:21,680 --> 00:29:24,740
file if you see here this is how you

827
00:29:22,970 --> 00:29:26,630
copy files out of both the only BS side

828
00:29:24,740 --> 00:29:28,580
you have to do and usually do it in

829
00:29:26,630 --> 00:29:32,060
parenthesis you do slash slash slash

830
00:29:28,580 --> 00:29:34,429
kind of like a almost like a like an SMB

831
00:29:32,060 --> 00:29:36,710
share and then you do the name of the

832
00:29:34,430 --> 00:29:38,000
file and you copied over to Unix and so

833
00:29:36,710 --> 00:29:41,060
you see here it was just a Rex file this

834
00:29:38,000 --> 00:29:44,330
just says hello world and then you can

835
00:29:41,060 --> 00:29:45,860
you can just chmod plus x to a Rex file

836
00:29:44,330 --> 00:29:48,500
and just make it to an executable and

837
00:29:45,860 --> 00:29:50,360
it'll run and it'll run in Oh mb/s here

838
00:29:48,500 --> 00:29:51,680
so that's what I'm doing I marked it

839
00:29:50,360 --> 00:29:53,139
executable and I'm just going to run it

840
00:29:51,680 --> 00:29:55,970
and all its gonna do is say hello world

841
00:29:53,140 --> 00:29:57,440
you could copy files from UNIX back to

842
00:29:55,970 --> 00:29:58,760
MVS but it's a little more complicated

843
00:29:57,440 --> 00:30:00,260
because you have to do all this stupid

844
00:29:58,760 --> 00:30:01,900
allocation like tell it like the

845
00:30:00,260 --> 00:30:04,220
block size and things like that so

846
00:30:01,900 --> 00:30:07,100
generally the way I copy files is I just

847
00:30:04,220 --> 00:30:08,690
use FTP because FTP detangles all the

848
00:30:07,100 --> 00:30:10,580
apps it ik translation and all like the

849
00:30:08,690 --> 00:30:12,590
size allocation so I just write

850
00:30:10,580 --> 00:30:14,120
scripts in like sublime text and then

851
00:30:12,590 --> 00:30:17,470
just FTP it up because that's way easier

852
00:30:14,120 --> 00:30:17,469
than with this thing

853
00:30:17,970 --> 00:30:22,350
and Here I am I do the X command in

854
00:30:19,950 --> 00:30:23,639
order to exit and there in all it's

855
00:30:22,350 --> 00:30:26,158
doing here is it's got it's basically

856
00:30:23,639 --> 00:30:27,750
got like a it's got this file SPF log

857
00:30:26,159 --> 00:30:30,600
want list which is kind of like your

858
00:30:27,750 --> 00:30:31,649
command history nice PF and I just tell

859
00:30:30,600 --> 00:30:33,719
it I don't want to save it I'm going to

860
00:30:31,649 --> 00:30:35,459
delete it so do the two option and hit

861
00:30:33,720 --> 00:30:37,169
enter and then I'm out I'm back at the

862
00:30:35,460 --> 00:30:45,000
TSO prompt and then I can log off and

863
00:30:37,169 --> 00:30:51,419
I'm done with the system okay now resume

864
00:30:45,000 --> 00:30:53,299
here know Hecker's in the mainframe so

865
00:30:51,419 --> 00:30:57,659
also want to address overcoming some

866
00:30:53,299 --> 00:31:00,658
organizational obstacles to getting

867
00:30:57,659 --> 00:31:02,460
mainframe span tested my first encounter

868
00:31:00,659 --> 00:31:04,740
with a mainframe was being screened at

869
00:31:02,460 --> 00:31:07,379
over the telephone by an old man I

870
00:31:04,740 --> 00:31:09,000
worked a large insurance company and we

871
00:31:07,379 --> 00:31:10,168
were exploring privileged Identity

872
00:31:09,000 --> 00:31:12,659
Management so he wanted to have some

873
00:31:10,169 --> 00:31:15,240
kind of solution like like our I was a

874
00:31:12,659 --> 00:31:16,230
that's that one site or one well those

875
00:31:15,240 --> 00:31:18,149
ones that like anything manage all your

876
00:31:16,230 --> 00:31:20,639
root accounts and like domain admins and

877
00:31:18,149 --> 00:31:22,258
stuff cyber-ark yes Thank You audience

878
00:31:20,639 --> 00:31:24,658
yeah I was like we were looking like

879
00:31:22,259 --> 00:31:26,039
cyber Rock and those stuff and and we

880
00:31:24,659 --> 00:31:27,929
knew had mainframes and at the time I

881
00:31:26,039 --> 00:31:28,950
didn't know jack about mainframe so

882
00:31:27,929 --> 00:31:30,539
I was on the phone with these main

883
00:31:28,950 --> 00:31:32,009
framers with a guy named Kyle who was in

884
00:31:30,539 --> 00:31:33,720
our security team he had been in IBM

885
00:31:32,009 --> 00:31:35,399
before and he spoke their language and

886
00:31:33,720 --> 00:31:37,110
we're telling like what we want to do

887
00:31:35,399 --> 00:31:38,370
and I mean I don't even know like what

888
00:31:37,110 --> 00:31:40,350
the equivalent of a root is on a

889
00:31:38,370 --> 00:31:41,908
mainframe or anything and this guy just

890
00:31:40,350 --> 00:31:43,889
starts like laying into us over the

891
00:31:41,909 --> 00:31:45,509
phone about how Security's gonna jack

892
00:31:43,889 --> 00:31:47,070
his stuff up and if he can't get into

893
00:31:45,509 --> 00:31:48,720
systems when there's a critical outage

894
00:31:47,070 --> 00:31:50,309
that like we're gonna lose billions of

895
00:31:48,720 --> 00:31:52,500
dollars every second in lost transaction

896
00:31:50,309 --> 00:31:53,820
Oh blah blah blah like for five - about

897
00:31:52,500 --> 00:31:55,799
five straight minutes this guy's just

898
00:31:53,820 --> 00:31:57,418
yelling at us and I'm like a phone on

899
00:31:55,799 --> 00:31:58,980
mute because I'm cracking up and I'm

900
00:31:57,419 --> 00:32:01,470
like I can't believe I found like a

901
00:31:58,980 --> 00:32:05,220
specimen that's even sillier than like

902
00:32:01,470 --> 00:32:07,649
an old UNIX gray beard like they're so

903
00:32:05,220 --> 00:32:11,730
the problem with the mainframe is the

904
00:32:07,649 --> 00:32:14,939
mainframes are simultaneously this but

905
00:32:11,730 --> 00:32:17,279
also this it's a myth it's the most

906
00:32:14,940 --> 00:32:18,870
highly secured system in our data center

907
00:32:17,279 --> 00:32:20,070
leg has never been hacked it's never

908
00:32:18,870 --> 00:32:22,139
gonna be hacked it's got all the latest

909
00:32:20,070 --> 00:32:24,210
security features the IBM has to offer

910
00:32:22,139 --> 00:32:25,918
but simultaneous leaves my pressure

911
00:32:24,210 --> 00:32:27,299
fresh baby and if you so much as port

912
00:32:25,919 --> 00:32:30,119
scan it it's gonna fall over and we're

913
00:32:27,299 --> 00:32:31,860
gonna lose a million dollars so

914
00:32:30,119 --> 00:32:33,090
obviously obstacle number one

915
00:32:31,860 --> 00:32:36,959
to mainframe pet testing is the main

916
00:32:33,090 --> 00:32:38,730
framers themselves but your thing may

917
00:32:36,960 --> 00:32:40,049
bring knowledge is a lot more guarded

918
00:32:38,730 --> 00:32:41,220
and it's a lot less accessible than

919
00:32:40,049 --> 00:32:43,080
Windows and Linux because you can't just

920
00:32:41,220 --> 00:32:44,730
go by z/os unless you have like a

921
00:32:43,080 --> 00:32:45,990
million dollars sitting around it's not

922
00:32:44,730 --> 00:32:47,070
like Windows they're like Linux where

923
00:32:45,990 --> 00:32:49,559
it's like freely available there's lots

924
00:32:47,070 --> 00:32:50,730
of people that know that stuff members

925
00:32:49,559 --> 00:32:51,928
are very steeped in their own culture as

926
00:32:50,730 --> 00:32:54,120
you see they speak a totally different

927
00:32:51,929 --> 00:32:56,640
language and like Linux and UNIX dis

928
00:32:54,120 --> 00:32:58,320
admins or Windows admins they skew a

929
00:32:56,640 --> 00:32:59,640
little older but iBM is trying to fix

930
00:32:58,320 --> 00:33:01,080
that they've got a lot more college

931
00:32:59,640 --> 00:33:02,429
outreach now because they realized that

932
00:33:01,080 --> 00:33:04,260
like half their workforce was about to

933
00:33:02,429 --> 00:33:06,029
retire because like most live members

934
00:33:04,260 --> 00:33:07,200
are baby boomers so that guy realize oh

935
00:33:06,029 --> 00:33:08,610
 maybe we should actually start

936
00:33:07,200 --> 00:33:12,029
teaching like college kids how to like

937
00:33:08,610 --> 00:33:13,408
program mainframes as I mentioned before

938
00:33:12,029 --> 00:33:15,990
they kind of have a if it ain't broke

939
00:33:13,409 --> 00:33:17,279
don't fix it mentality they sometimes a

940
00:33:15,990 --> 00:33:18,330
little bit doing security things cuz

941
00:33:17,279 --> 00:33:20,760
it's like well everything's working fine

942
00:33:18,330 --> 00:33:23,039
let's not it up they can be

943
00:33:20,760 --> 00:33:24,840
incredibly surly as I learned but the

944
00:33:23,039 --> 00:33:26,850
key thing to talking to em is assure

945
00:33:24,840 --> 00:33:28,199
them that you respect their platform and

946
00:33:26,850 --> 00:33:29,459
one of the easiest ways is learn this

947
00:33:28,200 --> 00:33:31,649
lingo and talk to them in their language

948
00:33:29,460 --> 00:33:32,909
you know show them that you respect how

949
00:33:31,649 --> 00:33:34,199
important it is to the business and

950
00:33:32,909 --> 00:33:35,279
you're not there to dunk on them you're

951
00:33:34,200 --> 00:33:36,929
not there just make them look like

952
00:33:35,279 --> 00:33:38,370
you're there to make the security better

953
00:33:36,929 --> 00:33:39,840
and yet you want to make the mainframe a

954
00:33:38,370 --> 00:33:42,239
better system you're not there to just

955
00:33:39,840 --> 00:33:43,860
like oh dinosaur you know as

956
00:33:42,240 --> 00:33:46,769
shitty passwords and everybody can own

957
00:33:43,860 --> 00:33:47,908
it you know to make them feel better and

958
00:33:46,769 --> 00:33:50,880
you get him on your side it'll make a

959
00:33:47,909 --> 00:33:53,639
lot easier Hospital number two is still

960
00:33:50,880 --> 00:33:55,260
something I call the fear IBM is the

961
00:33:53,639 --> 00:33:56,610
master of fear uncertainty and doubt

962
00:33:55,260 --> 00:33:58,799
Fudd you know you've all heard that

963
00:33:56,610 --> 00:34:01,769
acronym IBM pioneered it actually was a

964
00:33:58,799 --> 00:34:03,570
there's a guy named yeah his first name

965
00:34:01,769 --> 00:34:05,309
is Amdahl he left IBM to form another

966
00:34:03,570 --> 00:34:06,899
like mainframe competitor and he talked

967
00:34:05,309 --> 00:34:09,750
about IBM used Fudd fear uncertainty and

968
00:34:06,899 --> 00:34:11,549
doubt they yeah gene Amidala yes our

969
00:34:09,750 --> 00:34:13,020
gene model said Fudd because like IBM

970
00:34:11,550 --> 00:34:14,129
would always like if customers were

971
00:34:13,020 --> 00:34:14,639
thinking about moving to a different

972
00:34:14,129 --> 00:34:16,500
platform

973
00:34:14,639 --> 00:34:18,030
IBM would so the fear and certainty

974
00:34:16,500 --> 00:34:20,040
doubt like oh you don't know about those

975
00:34:18,030 --> 00:34:22,320
guys it's not tested you know iBM is

976
00:34:20,040 --> 00:34:24,300
reliable nobody got fired for buying IBM

977
00:34:22,320 --> 00:34:25,859
you know so don't risk it on this

978
00:34:24,300 --> 00:34:28,919
he's unknown you know new you know

979
00:34:25,859 --> 00:34:30,418
johnny-come-lately is so that's the

980
00:34:28,918 --> 00:34:31,918
biggest obstacle is the foot is the fear

981
00:34:30,418 --> 00:34:33,868
because the mainframe whirs know

982
00:34:31,918 --> 00:34:35,940
everything about the platform and upper

983
00:34:33,869 --> 00:34:37,139
management knows freaking nothing they

984
00:34:35,940 --> 00:34:38,129
don't know anything except what the

985
00:34:37,139 --> 00:34:39,270
mainframe whirs tell them and the

986
00:34:38,129 --> 00:34:40,679
mainframe whirs have told them if you

987
00:34:39,270 --> 00:34:42,418
poke it it's gonna fall over and we're

988
00:34:40,679 --> 00:34:43,560
gonna lose a billion dollars so of

989
00:34:42,418 --> 00:34:45,000
course they don't want to like they

990
00:34:43,560 --> 00:34:45,659
don't even ask for pen test against

991
00:34:45,000 --> 00:34:47,549
mainframes

992
00:34:45,659 --> 00:34:50,490
it's an enviable system and you do not

993
00:34:47,549 --> 00:34:52,918
touch it but the truth is it's just a

994
00:34:50,489 --> 00:34:55,439
 computer and at that it's a

995
00:34:52,918 --> 00:34:58,410
computer built for ungodly availability

996
00:34:55,440 --> 00:35:01,619
and you have to try hard to like ruin a

997
00:34:58,410 --> 00:35:02,970
mainframe it's not easy I don't I mean

998
00:35:01,619 --> 00:35:04,829
part of this came about I think in the

999
00:35:02,970 --> 00:35:06,930
90s there was actually I've heard the

1000
00:35:04,829 --> 00:35:09,750
story told of z/os and I've heard it

1001
00:35:06,930 --> 00:35:12,210
told of as/400 that one of them like had

1002
00:35:09,750 --> 00:35:13,859
like really long time to live on like on

1003
00:35:12,210 --> 00:35:15,539
like waiting on syntax like a sent like

1004
00:35:13,859 --> 00:35:17,970
us like a sin but like it send a cynic

1005
00:35:15,539 --> 00:35:19,319
and have like a like a day's long TTL so

1006
00:35:17,970 --> 00:35:23,098
like if you did a sin scan like you

1007
00:35:19,319 --> 00:35:24,119
would like do s the TCP stack but that's

1008
00:35:23,099 --> 00:35:25,589
obviously been fixed cuz there's

1009
00:35:24,119 --> 00:35:29,250
mainframes on the Internet Phil Young

1010
00:35:25,589 --> 00:35:31,859
the soldier Fortran on on Twitter the

1011
00:35:29,250 --> 00:35:33,390
big mainframe hacking guy he has a whole

1012
00:35:31,859 --> 00:35:34,890
catalog on tumblr of like hundreds of

1013
00:35:33,390 --> 00:35:36,390
mainframes he's found online and

1014
00:35:34,890 --> 00:35:37,440
obviously if that happened like those

1015
00:35:36,390 --> 00:35:39,359
things would be getting knocked over

1016
00:35:37,440 --> 00:35:42,299
multiple times a day but no they're

1017
00:35:39,359 --> 00:35:45,299
they're very resilient and also like any

1018
00:35:42,299 --> 00:35:47,819
computing environment they have dev and

1019
00:35:45,299 --> 00:35:50,009
QA l parse or even sometimes even entire

1020
00:35:47,819 --> 00:35:52,410
sysplex is of a dev sysplex and they'll

1021
00:35:50,009 --> 00:35:55,140
have a QA sysplex or or you know a prod

1022
00:35:52,410 --> 00:35:56,700
sysplex and they you have ones that

1023
00:35:55,140 --> 00:35:58,710
mirror prod just like any good

1024
00:35:56,700 --> 00:36:00,689
environment so yeah sure you don't want

1025
00:35:58,710 --> 00:36:02,430
me to test on prod I get it let me go

1026
00:36:00,690 --> 00:36:04,079
test the QA version that mirrors prod

1027
00:36:02,430 --> 00:36:05,430
and then let me see like how rack eff

1028
00:36:04,079 --> 00:36:06,599
has said how our user accounts when

1029
00:36:05,430 --> 00:36:08,430
they're provision what kind of rights do

1030
00:36:06,599 --> 00:36:09,990
they have can I do nasty stuff you know

1031
00:36:08,430 --> 00:36:11,519
ass wage in that way let me mess with

1032
00:36:09,990 --> 00:36:13,589
the QA system I won't you know I won't

1033
00:36:11,519 --> 00:36:15,348
ruin your I won't make you bankrupt you

1034
00:36:13,589 --> 00:36:17,940
know if I if I something up there

1035
00:36:15,349 --> 00:36:19,589
and then maybe a more minor one is

1036
00:36:17,940 --> 00:36:22,319
hubris that's kind of first part where

1037
00:36:19,589 --> 00:36:23,519
you know mainframe is is Fort Knox and

1038
00:36:22,319 --> 00:36:24,960
you know you can't you can't touch it

1039
00:36:23,519 --> 00:36:27,058
you know it's the most secure system in

1040
00:36:24,960 --> 00:36:29,430
the data center they can't be very

1041
00:36:27,059 --> 00:36:31,049
secure that is that's not the joke you

1042
00:36:29,430 --> 00:36:33,629
properly can fear them they're a very

1043
00:36:31,049 --> 00:36:37,288
secure platform but mainframes do get

1044
00:36:33,630 --> 00:36:39,420
hacked the the most famous one that we

1045
00:36:37,289 --> 00:36:40,529
know of was anakata

1046
00:36:39,420 --> 00:36:43,589
there's one of the guys that founded the

1047
00:36:40,529 --> 00:36:45,089
Pirate Bay touring site in 2012 he got

1048
00:36:43,589 --> 00:36:46,349
pissed off at his native Sweden and he

1049
00:36:45,089 --> 00:36:48,089
went after a bunch of companies there

1050
00:36:46,349 --> 00:36:49,950
that were running mainframes he got into

1051
00:36:48,089 --> 00:36:51,839
one called Logica which was a contractor

1052
00:36:49,950 --> 00:36:53,339
to the to the Swedish and maybe even

1053
00:36:51,839 --> 00:36:55,078
that I think also the Danish government

1054
00:36:53,339 --> 00:36:57,180
was a lot of country interlinking here

1055
00:36:55,079 --> 00:36:58,920
he hacked into their mainframe and he

1056
00:36:57,180 --> 00:36:59,440
just like found it initiative research

1057
00:36:58,920 --> 00:37:01,210
on his own

1058
00:36:59,440 --> 00:37:03,039
with like an open-source emulator and I

1059
00:37:01,210 --> 00:37:04,799
figured out like 200 days in order to

1060
00:37:03,039 --> 00:37:08,289
like own the mainframe and then he also

1061
00:37:04,799 --> 00:37:10,030
hacked a bank in Sweden he got $5,000

1062
00:37:08,289 --> 00:37:12,700
out and then got greedy and tried to do

1063
00:37:10,030 --> 00:37:14,680
like a 10,000 like euro transaction and

1064
00:37:12,700 --> 00:37:16,149
got busted there and then there was a

1065
00:37:14,680 --> 00:37:17,859
third company in Norway guys mainframe

1066
00:37:16,150 --> 00:37:19,210
hacked that they haven't proven it was

1067
00:37:17,859 --> 00:37:21,339
him but I think he's gonna be on trial

1068
00:37:19,210 --> 00:37:24,250
for it soon so they highly suspect he

1069
00:37:21,339 --> 00:37:26,770
did that one - iBM is very much into as

1070
00:37:24,250 --> 00:37:28,630
security via obscurity they they don't

1071
00:37:26,770 --> 00:37:30,160
like publishing stuff they published CV

1072
00:37:28,630 --> 00:37:32,829
he's after the logic of breach because

1073
00:37:30,160 --> 00:37:34,598
like the EU made them like neo was gonna

1074
00:37:32,829 --> 00:37:37,869
sue them if they didn't make a public CV

1075
00:37:34,599 --> 00:37:39,309
for like the the hack that led to it and

1076
00:37:37,869 --> 00:37:40,390
even if you drink the IBM kool-aid and

1077
00:37:39,309 --> 00:37:42,010
you believe this is the most secure

1078
00:37:40,390 --> 00:37:43,118
system it can't be hacked a woman what's

1079
00:37:42,010 --> 00:37:45,549
the what's the harm in letting the

1080
00:37:43,119 --> 00:37:48,329
pentester verify it right so you used to

1081
00:37:45,549 --> 00:37:50,049
use their words against them so

1082
00:37:48,329 --> 00:37:51,430
obviously you want to know how to hack

1083
00:37:50,049 --> 00:37:54,609
mainframes that's why you're here right

1084
00:37:51,430 --> 00:37:56,558
so let me let me organize this like a

1085
00:37:54,609 --> 00:37:59,799
pen tester red team so let's start with

1086
00:37:56,559 --> 00:38:01,450
our initial recon just like anything

1087
00:37:59,799 --> 00:38:03,038
else in map it I would recommend doing

1088
00:38:01,450 --> 00:38:04,750
all ports oh that's another one that's

1089
00:38:03,039 --> 00:38:08,680
surprisingly few people know is if you

1090
00:38:04,750 --> 00:38:09,819
do - B - that scans all 2 to the 32nd

1091
00:38:08,680 --> 00:38:12,730
we're around that number you

1092
00:38:09,819 --> 00:38:14,020
know 65,000 and some change boards it's

1093
00:38:12,730 --> 00:38:17,349
easier than remembering that number that

1094
00:38:14,020 --> 00:38:18,730
I never remember because you have find

1095
00:38:17,349 --> 00:38:20,859
stuff running on nasty reports like port

1096
00:38:18,730 --> 00:38:23,380
23 will be there a lot of times they

1097
00:38:20,859 --> 00:38:26,440
might have apps hosted like iterations

1098
00:38:23,380 --> 00:38:29,230
like 10 23 20 23 just gained every port

1099
00:38:26,440 --> 00:38:31,299
to be sure if you have access to an

1100
00:38:29,230 --> 00:38:33,010
internal knowledgebase like say like

1101
00:38:31,299 --> 00:38:34,809
it's a you know this an internal pen

1102
00:38:33,010 --> 00:38:36,160
test or maybe like a Red Team scenario

1103
00:38:34,809 --> 00:38:37,569
and you can get to the SharePoint or the

1104
00:38:36,160 --> 00:38:39,609
confluence or if they have like internal

1105
00:38:37,569 --> 00:38:41,020
wiki's go searching for mainframes stuff

1106
00:38:39,609 --> 00:38:42,640
because the terminology is unique enough

1107
00:38:41,020 --> 00:38:45,119
you can find results really quickly you

1108
00:38:42,640 --> 00:38:48,400
search for stuff like l par or TS oid

1109
00:38:45,119 --> 00:38:49,750
Attachmate and rumba r2 commercial t and

1110
00:38:48,400 --> 00:38:51,670
3270 emulators that are way too

1111
00:38:49,750 --> 00:38:52,960
expensive for me but you know you can

1112
00:38:51,670 --> 00:38:54,910
find you find stuff about them they

1113
00:38:52,960 --> 00:38:58,180
might tell you like where the IPS are or

1114
00:38:54,910 --> 00:38:59,440
what the naming scheme is another Red

1115
00:38:58,180 --> 00:39:00,700
Team scenario if you've compromised a

1116
00:38:59,440 --> 00:39:02,829
host you know take a look at the file

1117
00:39:00,700 --> 00:39:04,899
system if they're a mainframe user they

1118
00:39:02,829 --> 00:39:06,309
might have FTP scripts that they're

1119
00:39:04,900 --> 00:39:08,200
uploading stuff to the mainframes FTP

1120
00:39:06,309 --> 00:39:10,480
server and maybe it's got the password

1121
00:39:08,200 --> 00:39:11,890
and user name stashed in it you might

1122
00:39:10,480 --> 00:39:13,390
look at their config files for their

1123
00:39:11,890 --> 00:39:14,739
terminal emulators things like that

1124
00:39:13,390 --> 00:39:16,180
and so the stuff you want to know is you

1125
00:39:14,739 --> 00:39:18,160
want to find out like L power names or

1126
00:39:16,180 --> 00:39:20,410
IPs you might look for kicks region

1127
00:39:18,160 --> 00:39:21,368
names if you're hacking those you want

1128
00:39:20,410 --> 00:39:22,390
to find out like what the username

1129
00:39:21,369 --> 00:39:23,769
convention is so you can start at

1130
00:39:22,390 --> 00:39:26,440
numerating find out what the password

1131
00:39:23,769 --> 00:39:28,839
convention is and of course if you can

1132
00:39:26,440 --> 00:39:30,670
find it just get some freaking creds so

1133
00:39:28,839 --> 00:39:32,859
here's the typical nmap scan I don't

1134
00:39:30,670 --> 00:39:35,079
know if anybody see this but here's some

1135
00:39:32,859 --> 00:39:36,299
pretty typical ones this is that master

1136
00:39:35,079 --> 00:39:39,999
the mainframe when I was doing earlier

1137
00:39:36,299 --> 00:39:43,538
okay my mouse so port 21 is open and

1138
00:39:39,999 --> 00:39:46,328
it's identified it as oh is 390 FTP

1139
00:39:43,539 --> 00:39:48,069
Damon stair against OS 390 which it

1140
00:39:46,329 --> 00:39:50,109
hasn't been called that since the 90s so

1141
00:39:48,069 --> 00:39:52,538
I don't know why it's still that way you

1142
00:39:50,109 --> 00:39:54,759
know SSH is open to port 23 it's

1143
00:39:52,539 --> 00:39:58,359
identified it as T and 30 to 70 IBM

1144
00:39:54,759 --> 00:40:00,819
telnet 10 23 you can see here that's

1145
00:39:58,359 --> 00:40:03,219
another one another T and 3270 it's got

1146
00:40:00,819 --> 00:40:05,049
db2 open on it it's got IBM Explorer for

1147
00:40:03,219 --> 00:40:07,089
z/os which is another like user product

1148
00:40:05,049 --> 00:40:07,799
that's kind of a typical MMO that would

1149
00:40:07,089 --> 00:40:11,019
look like

1150
00:40:07,799 --> 00:40:12,099
and how do I get creds so there's a lot

1151
00:40:11,019 --> 00:40:13,299
of different ways and that's one things

1152
00:40:12,099 --> 00:40:17,529
about mainframe hacking is there's not a

1153
00:40:13,299 --> 00:40:19,449
lot of routes to to go from zero access

1154
00:40:17,529 --> 00:40:20,949
to owning it you gotta find credits lost

1155
00:40:19,449 --> 00:40:23,380
in some way along the way so that's one

1156
00:40:20,949 --> 00:40:24,339
of the better things about IBM so one

1157
00:40:23,380 --> 00:40:25,869
thing is if you're in an internal

1158
00:40:24,339 --> 00:40:27,459
environment you can do our spoofing and

1159
00:40:25,869 --> 00:40:29,380
start man-in-the-middle stuff and sniff

1160
00:40:27,459 --> 00:40:31,419
traffic a lot so the traffic is

1161
00:40:29,380 --> 00:40:33,400
unencrypted because T and 30 to 70 by

1162
00:40:31,420 --> 00:40:36,459
default is it's telling it it's not

1163
00:40:33,400 --> 00:40:38,259
encrypted you can run it till like TSL

1164
00:40:36,459 --> 00:40:40,629
TLS encrypted on usually something

1165
00:40:38,259 --> 00:40:43,509
that's on port like 992 but maybe about

1166
00:40:40,630 --> 00:40:44,739
half of shops actually do that as I

1167
00:40:43,509 --> 00:40:46,900
mentioned before you can steal them out

1168
00:40:44,739 --> 00:40:49,569
of like config files or like FTP scripts

1169
00:40:46,900 --> 00:40:52,269
and stuff you could even fish them Phil

1170
00:40:49,569 --> 00:40:53,859
Young has a tool called set and 3270

1171
00:40:52,269 --> 00:40:55,868
which is like his social engineering

1172
00:40:53,859 --> 00:40:58,749
toolkit where he he'll let you put up

1173
00:40:55,869 --> 00:41:00,249
like a fake vtm login and alexei act as

1174
00:40:58,749 --> 00:41:01,988
a proxy so if you can trick people to go

1175
00:41:00,249 --> 00:41:03,698
log into a Dilla proxy the connection to

1176
00:41:01,989 --> 00:41:04,869
the real mainframe for you so you know

1177
00:41:03,699 --> 00:41:06,119
you'll get their creds and you can man

1178
00:41:04,869 --> 00:41:08,799
in the middle of their traffic

1179
00:41:06,119 --> 00:41:10,299
try reusing because I knew I were to the

1180
00:41:08,799 --> 00:41:13,059
place where they had to sync passwords

1181
00:41:10,299 --> 00:41:13,809
between every system so all the Linux

1182
00:41:13,059 --> 00:41:15,519
UNIX windows

1183
00:41:13,809 --> 00:41:16,959
mainframe all had to use the same

1184
00:41:15,519 --> 00:41:18,999
password with a password sync solution

1185
00:41:16,959 --> 00:41:20,410
and that's we had like horrible password

1186
00:41:18,999 --> 00:41:21,640
rules as a result like it was like eight

1187
00:41:20,410 --> 00:41:24,279
character limits and you can only use

1188
00:41:21,640 --> 00:41:25,569
certain special characters so you know

1189
00:41:24,279 --> 00:41:27,220
if you've already sold in some Windows

1190
00:41:25,569 --> 00:41:29,440
creds and they look like they fit the

1191
00:41:27,220 --> 00:41:31,600
the mainframe password convention try

1192
00:41:29,440 --> 00:41:33,700
them out and if they're sinking or not

1193
00:41:31,600 --> 00:41:35,230
maybe users are just lazy so they don't

1194
00:41:33,700 --> 00:41:36,430
want to remember to passwords so they'll

1195
00:41:35,230 --> 00:41:39,340
just set their mainframe password to be

1196
00:41:36,430 --> 00:41:42,220
the same as their Windows one you can

1197
00:41:39,340 --> 00:41:43,300
brute good and they are we gimmicks said

1198
00:41:42,220 --> 00:41:44,230
a lot of times they will they might be

1199
00:41:43,300 --> 00:41:45,550
limited like eight characters or

1200
00:41:44,230 --> 00:41:47,850
something but do it with caution

1201
00:41:45,550 --> 00:41:51,280
by default rack F does not set a

1202
00:41:47,850 --> 00:41:53,319
password limit but everywhere basically

1203
00:41:51,280 --> 00:41:55,630
sets like three temps five attempts

1204
00:41:53,320 --> 00:41:57,340
total like if you do three or five bad

1205
00:41:55,630 --> 00:41:59,530
attempts in a row it locks you out it's

1206
00:41:57,340 --> 00:42:01,480
not like Windows domains where you know

1207
00:41:59,530 --> 00:42:02,740
it's like you know you just spray for

1208
00:42:01,480 --> 00:42:05,050
passwords in Windows you can do like two

1209
00:42:02,740 --> 00:42:06,399
or three an hour and just wait for kind

1210
00:42:05,050 --> 00:42:09,340
of the timer to reset and then try again

1211
00:42:06,400 --> 00:42:11,020
it's not like that main framing so Phil

1212
00:42:09,340 --> 00:42:12,850
Phil recommended maybe trying like one

1213
00:42:11,020 --> 00:42:16,990
like seasonal password like maybe try

1214
00:42:12,850 --> 00:42:20,620
like Zhu ju n at 2019 something like

1215
00:42:16,990 --> 00:42:22,149
that and maybe trying one a week so very

1216
00:42:20,620 --> 00:42:23,710
slow most people don't have that kind of

1217
00:42:22,150 --> 00:42:26,590
time so yeah pepper spraying

1218
00:42:23,710 --> 00:42:29,950
unfortunately is not a valid attack path

1219
00:42:26,590 --> 00:42:32,800
really and that applies to logging into

1220
00:42:29,950 --> 00:42:34,689
TSO SSH even su I actually tested that

1221
00:42:32,800 --> 00:42:36,850
out and like if you if you get on UNIX

1222
00:42:34,690 --> 00:42:38,260
and you try to su to another user it'll

1223
00:42:36,850 --> 00:42:39,640
count against rack F in a lock the

1224
00:42:38,260 --> 00:42:50,800
account if you try like three bad ones

1225
00:42:39,640 --> 00:42:51,850
however they haven't said exactly yeah

1226
00:42:50,800 --> 00:42:53,110
you can always tell like I said they're

1227
00:42:51,850 --> 00:42:55,029
easing passwords you can always password

1228
00:42:53,110 --> 00:42:57,790
spray windows instead and maybe they

1229
00:42:55,030 --> 00:42:59,260
were using passwords between them once

1230
00:42:57,790 --> 00:43:02,290
you're on like any good pen test started

1231
00:42:59,260 --> 00:43:04,150
numerating there again I like I said

1232
00:43:02,290 --> 00:43:07,750
with that map you know use the pet - the

1233
00:43:04,150 --> 00:43:09,910
- P - flag there's plenty of em map

1234
00:43:07,750 --> 00:43:11,610
scripts to enumerate stuff Phil Jung

1235
00:43:09,910 --> 00:43:14,370
wrote most of them so you can enumerate

1236
00:43:11,610 --> 00:43:16,720
differently vite am application IDs

1237
00:43:14,370 --> 00:43:18,549
logical units I don't really get into

1238
00:43:16,720 --> 00:43:19,569
that one that's that's more like when

1239
00:43:18,550 --> 00:43:20,950
you connect to a terminal you're

1240
00:43:19,570 --> 00:43:22,390
assigned a logical unit number and

1241
00:43:20,950 --> 00:43:23,620
sometimes you can just like tell it a

1242
00:43:22,390 --> 00:43:25,089
different number and it'll give you with

1243
00:43:23,620 --> 00:43:26,490
somebody else's session I think that's

1244
00:43:25,090 --> 00:43:29,740
pretty rare nowadays

1245
00:43:26,490 --> 00:43:31,810
tickets transactions or TSO user IDs TSO

1246
00:43:29,740 --> 00:43:34,240
is nice enough to let you know that a

1247
00:43:31,810 --> 00:43:35,560
user name is not valid now it might mean

1248
00:43:34,240 --> 00:43:37,240
that the user exists but they're not

1249
00:43:35,560 --> 00:43:39,070
allowed to log into TSO or it might mean

1250
00:43:37,240 --> 00:43:40,569
that it the username doesn't exist but

1251
00:43:39,070 --> 00:43:42,490
if you put in a username that's

1252
00:43:40,570 --> 00:43:44,410
valid before we even have to enter a

1253
00:43:42,490 --> 00:43:46,060
password it has a little error message

1254
00:43:44,410 --> 00:43:48,339
that says right there it says user ID

1255
00:43:46,060 --> 00:43:50,320
fake not authorized to use TSO if you

1256
00:43:48,340 --> 00:43:51,850
can see my little little screenshot over

1257
00:43:50,320 --> 00:43:54,630
there so it's nice enough to let you

1258
00:43:51,850 --> 00:43:56,890
know so it makes enumeration really easy

1259
00:43:54,630 --> 00:43:59,080
so if you got creds at this point you

1260
00:43:56,890 --> 00:44:01,060
know try logging in one caveat is you

1261
00:43:59,080 --> 00:44:03,549
may find users that they may have access

1262
00:44:01,060 --> 00:44:05,020
to TSO or they might have access to unix

1263
00:44:03,550 --> 00:44:06,820
but they might not have access to both

1264
00:44:05,020 --> 00:44:07,990
it depends on how the user was created

1265
00:44:06,820 --> 00:44:13,420
they might not have been created with a

1266
00:44:07,990 --> 00:44:14,709
with a UNIX UID and and an OMB sxs TSI

1267
00:44:13,420 --> 00:44:17,110
was also nice enough to let you know

1268
00:44:14,710 --> 00:44:18,730
that if you're logging in that the other

1269
00:44:17,110 --> 00:44:20,200
you the user with that name is already

1270
00:44:18,730 --> 00:44:23,140
logged in so it gives you a little bit

1271
00:44:20,200 --> 00:44:25,029
of OPSEC like but also by the same token

1272
00:44:23,140 --> 00:44:26,350
if you log in and then the legit user

1273
00:44:25,030 --> 00:44:27,610
comes along and tries to log in he'll

1274
00:44:26,350 --> 00:44:31,240
see that somebody else is using this

1275
00:44:27,610 --> 00:44:32,560
username so SSH and FTP don't have that

1276
00:44:31,240 --> 00:44:34,569
limitation you can have multiple

1277
00:44:32,560 --> 00:44:35,799
instances logged in at a time so it's a

1278
00:44:34,570 --> 00:44:39,640
little stealthier that way you don't

1279
00:44:35,800 --> 00:44:42,220
risk getting caught and FTP on z/os

1280
00:44:39,640 --> 00:44:44,140
can run JCL jobs you can set it to a

1281
00:44:42,220 --> 00:44:46,060
mode where you can upload a JCL script

1282
00:44:44,140 --> 00:44:47,560
and it'll just run it under the whatever

1283
00:44:46,060 --> 00:44:49,779
context you're logged in as so it's

1284
00:44:47,560 --> 00:44:52,450
basically RCE as a freaking service and

1285
00:44:49,780 --> 00:44:54,250
Phil Jung has written like four or five

1286
00:44:52,450 --> 00:44:55,240
different tools to exploit this and the

1287
00:44:54,250 --> 00:44:57,190
most easiest one is the Metasploit

1288
00:44:55,240 --> 00:44:58,689
module which you can use and it'll just

1289
00:44:57,190 --> 00:45:01,810
give you a river shell back into the

1290
00:44:58,690 --> 00:45:03,280
UNIX environment another service you'll

1291
00:45:01,810 --> 00:45:05,350
find on on mainframes is called nje

1292
00:45:03,280 --> 00:45:07,570
which is network job entry and it

1293
00:45:05,350 --> 00:45:10,299
basically it's a way for different l

1294
00:45:07,570 --> 00:45:12,670
parse or sis Plexus to send JCL jobs

1295
00:45:10,300 --> 00:45:14,320
between each other all you do is like

1296
00:45:12,670 --> 00:45:16,480
you and you write your JCL job card you

1297
00:45:14,320 --> 00:45:17,650
write the name of a different node all

1298
00:45:16,480 --> 00:45:19,510
you need to know is you need to know

1299
00:45:17,650 --> 00:45:21,580
your own node name you need to know the

1300
00:45:19,510 --> 00:45:23,800
node name of who you're sending to and

1301
00:45:21,580 --> 00:45:25,569
it's all defined in a config file on the

1302
00:45:23,800 --> 00:45:27,910
mainframe filesystem and then you have

1303
00:45:25,570 --> 00:45:29,830
to have a valid user name like on on the

1304
00:45:27,910 --> 00:45:31,600
remote end that you're connecting to so

1305
00:45:29,830 --> 00:45:32,799
you have to have like and actually it

1306
00:45:31,600 --> 00:45:33,880
doesn't have to be the same person like

1307
00:45:32,800 --> 00:45:35,380
that's another thing you might exploit

1308
00:45:33,880 --> 00:45:36,820
is that like the same user name it might

1309
00:45:35,380 --> 00:45:38,890
be two different people on two different

1310
00:45:36,820 --> 00:45:41,110
mainframes but if it's valid and JE will

1311
00:45:38,890 --> 00:45:44,500
accept it so you can route the node

1312
00:45:41,110 --> 00:45:47,410
names they can't be considered to

1313
00:45:44,500 --> 00:45:49,930
require a static password you can brute

1314
00:45:47,410 --> 00:45:52,420
that too so it's another way of just

1315
00:45:49,930 --> 00:45:53,680
like getting or sees a service and also

1316
00:45:52,420 --> 00:45:55,320
it's good for lateral movement as I'll

1317
00:45:53,680 --> 00:45:56,759
talk about later

1318
00:45:55,320 --> 00:45:58,260
again I won't go too much detail about

1319
00:45:56,760 --> 00:46:00,750
kicks because it's a subject to itself

1320
00:45:58,260 --> 00:46:01,890
but kicks can also be a foothold it

1321
00:46:00,750 --> 00:46:03,300
might have like a bad default

1322
00:46:01,890 --> 00:46:05,129
transaction enabled where you can also

1323
00:46:03,300 --> 00:46:07,440
upload JCL and run it and then you get

1324
00:46:05,130 --> 00:46:10,860
like a TSO account as the as the is like

1325
00:46:07,440 --> 00:46:13,140
the kicks like service account but

1326
00:46:10,860 --> 00:46:15,750
there's more tools for that that I won't

1327
00:46:13,140 --> 00:46:17,490
really talk about here also on the on

1328
00:46:15,750 --> 00:46:20,670
the other side on UNIX a lot of them run

1329
00:46:17,490 --> 00:46:23,370
WebSphere and Tomcat so same as if you

1330
00:46:20,670 --> 00:46:25,320
found it on Linux or Windows if the

1331
00:46:23,370 --> 00:46:26,850
manager page is available and you can

1332
00:46:25,320 --> 00:46:28,710
guess the password you can upload a war

1333
00:46:26,850 --> 00:46:30,089
file and get yourself a shell you can

1334
00:46:28,710 --> 00:46:31,800
try different things like you know red

1335
00:46:30,090 --> 00:46:34,140
nikto against it

1336
00:46:31,800 --> 00:46:35,640
chad rick intrude another like luminary

1337
00:46:34,140 --> 00:46:36,660
in the mainframe hacking world he's done

1338
00:46:35,640 --> 00:46:38,850
some work around like java

1339
00:46:36,660 --> 00:46:41,879
deserialization attacks against web

1340
00:46:38,850 --> 00:46:42,990
servers running on mainframes you might

1341
00:46:41,880 --> 00:46:45,060
even see older ones that have these

1342
00:46:42,990 --> 00:46:46,229
crappy like cgi apps that just basically

1343
00:46:45,060 --> 00:46:48,390
have command injection in them that's

1344
00:46:46,230 --> 00:46:49,890
actually how anakata got onto like one

1345
00:46:48,390 --> 00:46:51,240
of the mainframes he hacked was it was

1346
00:46:49,890 --> 00:46:55,410
just a command injection and a cgi

1347
00:46:51,240 --> 00:46:57,029
script and then db2 I feel db2 is really

1348
00:46:55,410 --> 00:46:58,529
underserved on the mainframe it's got a

1349
00:46:57,030 --> 00:47:00,840
lot of tension when it runs on like UNIX

1350
00:46:58,530 --> 00:47:01,800
and Windows and stuff but that's

1351
00:47:00,840 --> 00:47:02,850
something I think I'm gonna research

1352
00:47:01,800 --> 00:47:04,680
more in the future especially around

1353
00:47:02,850 --> 00:47:07,319
stored procedures because I've seen some

1354
00:47:04,680 --> 00:47:10,680
interesting stuff with db2 on on the

1355
00:47:07,320 --> 00:47:12,480
s400 platform being able to like run req

1356
00:47:10,680 --> 00:47:13,649
scripts and stuff and I want to do more

1357
00:47:12,480 --> 00:47:15,410
research on this guy feel it's really

1358
00:47:13,650 --> 00:47:17,490
underserved on the mainframe platform so

1359
00:47:15,410 --> 00:47:19,350
it's a space that needs more attention

1360
00:47:17,490 --> 00:47:22,979
and you may find other things out there

1361
00:47:19,350 --> 00:47:25,290
you might find like NFS or SNMP running

1362
00:47:22,980 --> 00:47:26,940
on it MQ servers yeah just look a lot of

1363
00:47:25,290 --> 00:47:29,940
stuff friends that are the the UNIX side

1364
00:47:26,940 --> 00:47:31,170
of the house so once you're in you may

1365
00:47:29,940 --> 00:47:32,670
not need special if you've got a

1366
00:47:31,170 --> 00:47:33,930
sufficient user account your goal is

1367
00:47:32,670 --> 00:47:35,010
just to like steal credit cards or

1368
00:47:33,930 --> 00:47:36,569
something you might get a user account

1369
00:47:35,010 --> 00:47:37,680
has access to that stuff and you might

1370
00:47:36,570 --> 00:47:39,930
be able to pull those data sets and

1371
00:47:37,680 --> 00:47:41,160
exfill them and go but I mean I know

1372
00:47:39,930 --> 00:47:42,930
you're not here for that you're here to

1373
00:47:41,160 --> 00:47:45,330
own the the sucker completely right so

1374
00:47:42,930 --> 00:47:46,859
you want to get special and and be you

1375
00:47:45,330 --> 00:47:49,440
know the closest thing is you can't be

1376
00:47:46,860 --> 00:47:50,940
to a super user on the platform so I can

1377
00:47:49,440 --> 00:47:53,670
even test this time for even more

1378
00:47:50,940 --> 00:47:55,590
enumeration and Phil Young has a great

1379
00:47:53,670 --> 00:47:57,360
script called Inu it's just a wreck

1380
00:47:55,590 --> 00:47:59,250
script you can run and it'll just dump a

1381
00:47:57,360 --> 00:48:00,660
bunch of data about the system it's a

1382
00:47:59,250 --> 00:48:02,820
great one I recommend to run and see

1383
00:48:00,660 --> 00:48:03,870
like what kind of nasty libraries might

1384
00:48:02,820 --> 00:48:05,760
be installed what kind of file

1385
00:48:03,870 --> 00:48:08,339
permissions are out there

1386
00:48:05,760 --> 00:48:12,200
protip 4x filling I

1387
00:48:08,339 --> 00:48:15,328
use FTP the old secure copy command or

1388
00:48:12,200 --> 00:48:16,890
in the teen 3270 emulator it has a

1389
00:48:15,329 --> 00:48:19,410
built-in like file transfer function

1390
00:48:16,890 --> 00:48:22,469
called IND dollar sign file did you run

1391
00:48:19,410 --> 00:48:24,328
from TSO I would recommend using those I

1392
00:48:22,469 --> 00:48:25,920
have not had great luck with SFTP if I

1393
00:48:24,329 --> 00:48:27,180
use the SFTP you come in it usually like

1394
00:48:25,920 --> 00:48:29,489
fuck's up and it doesn't convert

1395
00:48:27,180 --> 00:48:32,519
properly from like episodic to ASCII and

1396
00:48:29,489 --> 00:48:33,930
vice versa but but normal FTP or for

1397
00:48:32,519 --> 00:48:35,609
some reason the SCP command which just

1398
00:48:33,930 --> 00:48:39,538
uses SSH I don't know why it works in

1399
00:48:35,609 --> 00:48:41,069
the others don't but oh well so there

1400
00:48:39,539 --> 00:48:43,859
are a couple different unique privilege

1401
00:48:41,069 --> 00:48:45,299
escalation routes you can do on the MVS

1402
00:48:43,859 --> 00:48:48,058
side and I'll talk about the UNIX side

1403
00:48:45,299 --> 00:48:49,170
too you can try checking there is kinda

1404
00:48:48,059 --> 00:48:50,880
like it the closest thing to a default

1405
00:48:49,170 --> 00:48:52,170
root account is there's the IBM user

1406
00:48:50,880 --> 00:48:55,140
account which is created when you first

1407
00:48:52,170 --> 00:48:56,789
install z/os but you'll almost never

1408
00:48:55,140 --> 00:48:59,069
find him activated you use him to

1409
00:48:56,789 --> 00:49:00,420
install use that account to install the

1410
00:48:59,069 --> 00:49:02,369
operating system and then you revoke it

1411
00:49:00,420 --> 00:49:06,359
and it's almost always a dead account so

1412
00:49:02,369 --> 00:49:08,339
you try though even might been sloppy in

1413
00:49:06,359 --> 00:49:10,319
rack F you can assign surrogate profiles

1414
00:49:08,339 --> 00:49:12,180
so like say an administrator doesn't

1415
00:49:10,319 --> 00:49:15,029
want to be bothered by like the regular

1416
00:49:12,180 --> 00:49:17,098
users to run it cuz like maybe there's a

1417
00:49:15,029 --> 00:49:18,420
job has to be run and it relies on stuff

1418
00:49:17,099 --> 00:49:20,249
that the normies don't have permission

1419
00:49:18,420 --> 00:49:22,170
to so he just sets a surrogate profile

1420
00:49:20,249 --> 00:49:24,419
says ok you can submit jobs as me Bob

1421
00:49:22,170 --> 00:49:26,759
the admin you know I have no idea like

1422
00:49:24,420 --> 00:49:28,319
this could be abused right you know you

1423
00:49:26,759 --> 00:49:30,029
just basically write a JCL jobs that oh

1424
00:49:28,319 --> 00:49:32,160
give me special permissions and rack F

1425
00:49:30,029 --> 00:49:34,079
so you know that's another way abuse it

1426
00:49:32,160 --> 00:49:36,450
and then also on a lower level you have

1427
00:49:34,079 --> 00:49:37,920
supervisor calls and you have a PF

1428
00:49:36,450 --> 00:49:39,538
authorized libraries and what both of

1429
00:49:37,920 --> 00:49:41,549
these do is to let you run code and

1430
00:49:39,539 --> 00:49:43,920
what's called supervisor state which in

1431
00:49:41,549 --> 00:49:46,140
MVS there's basically problem state

1432
00:49:43,920 --> 00:49:48,930
which is user mode and then supervisor

1433
00:49:46,140 --> 00:49:50,368
state is kernel mode it's ring 0 so it's

1434
00:49:48,930 --> 00:49:54,419
like you can access any protected region

1435
00:49:50,369 --> 00:49:56,519
of memory you can do anything you'll see

1436
00:49:54,420 --> 00:49:58,289
sometimes supervisor calls or system

1437
00:49:56,519 --> 00:50:00,538
calls that are like user-defined you can

1438
00:49:58,289 --> 00:50:02,309
write your own SVC s and sometimes

1439
00:50:00,539 --> 00:50:03,779
vendors write SCC's for their products

1440
00:50:02,309 --> 00:50:05,190
to run on the mainframe and if they're

1441
00:50:03,779 --> 00:50:07,079
written really sloppily there's

1442
00:50:05,190 --> 00:50:08,640
something to refer to as magic SVC s and

1443
00:50:07,079 --> 00:50:10,289
they just like like to run any code you

1444
00:50:08,640 --> 00:50:12,269
want in supervisor state so you can just

1445
00:50:10,289 --> 00:50:14,339
go change memory directly and give

1446
00:50:12,269 --> 00:50:15,328
yourself rack F special permissions or

1447
00:50:14,339 --> 00:50:18,210
whatever you want to do because it's

1448
00:50:15,329 --> 00:50:19,559
just like a bit you flip in memory a PF

1449
00:50:18,210 --> 00:50:21,299
authorized libraries they're called

1450
00:50:19,559 --> 00:50:22,290
libraries but they're just those PDS is

1451
00:50:21,299 --> 00:50:25,020
partitioned data set

1452
00:50:22,290 --> 00:50:26,910
like kind like a folder and and the way

1453
00:50:25,020 --> 00:50:30,330
they're marked is any member of that

1454
00:50:26,910 --> 00:50:32,160
data set can run code and supervisor

1455
00:50:30,330 --> 00:50:34,620
state so if they screwed up and they

1456
00:50:32,160 --> 00:50:36,750
gave normies write permissions to one of

1457
00:50:34,620 --> 00:50:39,450
these API file threads libraries you

1458
00:50:36,750 --> 00:50:42,000
could just write your own binary in like

1459
00:50:39,450 --> 00:50:43,379
assembly language add it to the PDS and

1460
00:50:42,000 --> 00:50:47,160
then run it and then it'll go change

1461
00:50:43,380 --> 00:50:48,510
memory for you another really good man

1462
00:50:47,160 --> 00:50:51,089
from hacker after his name died you Bela

1463
00:50:48,510 --> 00:50:52,590
Saul he wrote a previous script for this

1464
00:50:51,090 --> 00:50:54,000
which is great because you don't have to

1465
00:50:52,590 --> 00:50:55,200
write your own assembly code he just

1466
00:50:54,000 --> 00:50:57,180
does it for you all you have to do is

1467
00:50:55,200 --> 00:50:59,310
run his recs script tell it what write

1468
00:50:57,180 --> 00:51:01,370
library to do and then it'll submit a

1469
00:50:59,310 --> 00:51:05,670
job and then just like make you special

1470
00:51:01,370 --> 00:51:07,259
give you special permissions UNIX is a

1471
00:51:05,670 --> 00:51:08,370
little bit different and it's a little

1472
00:51:07,260 --> 00:51:10,530
more complicated

1473
00:51:08,370 --> 00:51:12,509
the usual tricks we're getting root on

1474
00:51:10,530 --> 00:51:14,400
UNIX are all they're like if they're

1475
00:51:12,510 --> 00:51:15,570
using sudo suta has been ported I don't

1476
00:51:14,400 --> 00:51:17,360
know how many places use it though

1477
00:51:15,570 --> 00:51:19,770
because it's fairly recently been ported

1478
00:51:17,360 --> 00:51:22,350
but if they bad sudo permissions exploit

1479
00:51:19,770 --> 00:51:24,600
it if they have stuff with like set UID

1480
00:51:22,350 --> 00:51:26,700
0 on it and like you can you know do

1481
00:51:24,600 --> 00:51:29,040
dumb with it you know exploit that

1482
00:51:26,700 --> 00:51:31,230
but getting root does not mean getting

1483
00:51:29,040 --> 00:51:33,509
root on the MVS side you're just the

1484
00:51:31,230 --> 00:51:36,420
king inside of Unix it's very much like

1485
00:51:33,510 --> 00:51:38,040
wsl if your route in wsl and Windows

1486
00:51:36,420 --> 00:51:40,830
like you doesn't mean you're the admin

1487
00:51:38,040 --> 00:51:42,900
of the box but there are some

1488
00:51:40,830 --> 00:51:44,580
workarounds Mir a calf is still in

1489
00:51:42,900 --> 00:51:46,170
control here a calf controls all those

1490
00:51:44,580 --> 00:51:47,549
provisions but there are some

1491
00:51:46,170 --> 00:51:50,280
workarounds because there are a PF

1492
00:51:47,550 --> 00:51:52,470
authorized binaries in UNIX and that's

1493
00:51:50,280 --> 00:51:54,960
another path as like you can just write

1494
00:51:52,470 --> 00:51:56,459
a custom see file market a PF authorized

1495
00:51:54,960 --> 00:51:58,590
if you have the right and then execute

1496
00:51:56,460 --> 00:52:01,560
that and change memory and give yourself

1497
00:51:58,590 --> 00:52:03,240
rack eff system special permissions or

1498
00:52:01,560 --> 00:52:06,690
the my sole contribution to mainframe

1499
00:52:03,240 --> 00:52:08,339
happening so far is I found a way to get

1500
00:52:06,690 --> 00:52:11,010
it is just by backdooring like the

1501
00:52:08,340 --> 00:52:12,570
system programmers freaking UNIX account

1502
00:52:11,010 --> 00:52:15,960
using SSH keys which I'll show you a

1503
00:52:12,570 --> 00:52:18,360
demo of that in a minute so once you're

1504
00:52:15,960 --> 00:52:19,980
on there some lateral movement stuff you

1505
00:52:18,360 --> 00:52:21,240
can dump the rack F database and try to

1506
00:52:19,980 --> 00:52:23,460
crack it because if they're still using

1507
00:52:21,240 --> 00:52:25,319
I mean even though using the newer stuff

1508
00:52:23,460 --> 00:52:27,030
it's just like anything if you dump you

1509
00:52:25,320 --> 00:52:29,100
know like the shadow file in UNIX you

1510
00:52:27,030 --> 00:52:31,200
can run a cracker against it John and

1511
00:52:29,100 --> 00:52:33,089
hash cat both support cracking it john

1512
00:52:31,200 --> 00:52:35,069
has a tool to convert a rack F database

1513
00:52:33,090 --> 00:52:37,550
into a John friendly format called rack

1514
00:52:35,070 --> 00:52:37,550
F - John

1515
00:52:37,710 --> 00:52:42,100
actually check for it first thing

1516
00:52:39,700 --> 00:52:44,319
because some places screw up and give

1517
00:52:42,100 --> 00:52:45,910
users permission to copy the rack F

1518
00:52:44,320 --> 00:52:47,530
database you run are very and he'll tell

1519
00:52:45,910 --> 00:52:50,259
you the file location so you should be

1520
00:52:47,530 --> 00:52:51,430
something like sis one rack fdes or

1521
00:52:50,260 --> 00:52:53,350
something like that it'll be different

1522
00:52:51,430 --> 00:52:55,569
everywhere and it'll be a backup one

1523
00:52:53,350 --> 00:52:56,920
called you know whatever dot backup you

1524
00:52:55,570 --> 00:52:58,660
know you I usually just do the backup

1525
00:52:56,920 --> 00:53:02,050
one to be safe I'll copy that to FTP and

1526
00:52:58,660 --> 00:53:03,160
exfil it see yeah there's a normal user

1527
00:53:02,050 --> 00:53:04,000
if you're allowed to do that because

1528
00:53:03,160 --> 00:53:05,470
sometimes they screwed up the

1529
00:53:04,000 --> 00:53:08,260
permissions and you can just copy it off

1530
00:53:05,470 --> 00:53:11,200
and take it on FTP and just go crack all

1531
00:53:08,260 --> 00:53:12,850
the system and just log in but if it's a

1532
00:53:11,200 --> 00:53:14,319
good good environment then they've

1533
00:53:12,850 --> 00:53:16,690
marked it that only like system

1534
00:53:14,320 --> 00:53:18,880
programmers can touch it so once you've

1535
00:53:16,690 --> 00:53:20,620
got those rights you know X fill it and

1536
00:53:18,880 --> 00:53:22,150
see if like other el pars if they're

1537
00:53:20,620 --> 00:53:23,440
user accounts are being shared across

1538
00:53:22,150 --> 00:53:24,700
them so then maybe you can just break

1539
00:53:23,440 --> 00:53:26,740
into other el power so I'm going to go

1540
00:53:24,700 --> 00:53:29,770
through all those steps and then also I

1541
00:53:26,740 --> 00:53:31,600
mentioned nje once you get on the system

1542
00:53:29,770 --> 00:53:34,180
and you can get to everything usually

1543
00:53:31,600 --> 00:53:36,640
it's a dataset called sis one arm Lib

1544
00:53:34,180 --> 00:53:37,180
and then it's a member called Jes to

1545
00:53:36,640 --> 00:53:39,520
parm

1546
00:53:37,180 --> 00:53:41,259
stands for J is two parameters if you go

1547
00:53:39,520 --> 00:53:43,270
in there it'll have all the node names

1548
00:53:41,260 --> 00:53:46,030
and if they're using a static password

1549
00:53:43,270 --> 00:53:47,170
to like authenticate and nje it'll just

1550
00:53:46,030 --> 00:53:49,690
be there in clear-text

1551
00:53:47,170 --> 00:53:51,250
so then you can just go and just hug it

1552
00:53:49,690 --> 00:53:54,400
and like go go to town all over the

1553
00:53:51,250 --> 00:53:57,700
system so now I'm gonna do another video

1554
00:53:54,400 --> 00:54:02,620
here and I'll show you guys where's my

1555
00:53:57,700 --> 00:54:08,439
mouse okay grab mine I'll show you my

1556
00:54:02,620 --> 00:54:12,160
little attack path video using SSH and

1557
00:54:08,440 --> 00:54:15,610
apologies this is kind of small so here

1558
00:54:12,160 --> 00:54:19,770
I'm going to show you I have a user

1559
00:54:15,610 --> 00:54:23,320
named Eve she's gonna try and login TSO

1560
00:54:19,770 --> 00:54:24,880
and she can't because she had TSO access

1561
00:54:23,320 --> 00:54:26,200
but it got revoked so now her account

1562
00:54:24,880 --> 00:54:28,900
number isn't valid anymore so she's

1563
00:54:26,200 --> 00:54:30,310
gonna disconnect so she's so she says

1564
00:54:28,900 --> 00:54:32,500
lor so say it's the hacker I'm a hacker

1565
00:54:30,310 --> 00:54:34,390
I still use password out of a config

1566
00:54:32,500 --> 00:54:40,330
file somewhere so much writing SSH is

1567
00:54:34,390 --> 00:54:43,390
Eve I try it okay what's her password it

1568
00:54:40,330 --> 00:54:45,640
doesn't work doesn't work doesn't work

1569
00:54:43,390 --> 00:54:48,549
now don't worry I haven't locked her out

1570
00:54:45,640 --> 00:54:49,848
she's actually just denied in SSH the

1571
00:54:48,550 --> 00:54:53,599
SSH config from

1572
00:54:49,849 --> 00:54:55,940
- SSH but she can't login with FTP so

1573
00:54:53,599 --> 00:54:57,559
I'm here as an FTP user so I know a

1574
00:54:55,940 --> 00:55:03,829
permissions to that so here I can see

1575
00:54:57,559 --> 00:55:05,150
some files on there and when your FTP

1576
00:55:03,829 --> 00:55:08,180
you start off on the MVS side but you

1577
00:55:05,150 --> 00:55:10,789
can do CD and then a UNIX directory path

1578
00:55:08,180 --> 00:55:14,328
and you can move to that over here I'm

1579
00:55:10,789 --> 00:55:17,089
gonna run the FTP JCL execute code

1580
00:55:14,329 --> 00:55:18,499
execution Metasploit script so all this

1581
00:55:17,089 --> 00:55:20,058
is gonna do is just run and give me a

1582
00:55:18,499 --> 00:55:21,488
reverse shell on the mainframe in the

1583
00:55:20,059 --> 00:55:24,349
UNIX environment

1584
00:55:21,489 --> 00:55:27,140
so I've already preset the settings on

1585
00:55:24,349 --> 00:55:28,279
all this like a password and stuff so

1586
00:55:27,140 --> 00:55:32,058
your password was just earned username

1587
00:55:28,279 --> 00:55:34,160
until you set a crappy password so I

1588
00:55:32,059 --> 00:55:35,599
start that and here it is I've got

1589
00:55:34,160 --> 00:55:40,190
session on the mainframe in a rochelle

1590
00:55:35,599 --> 00:55:42,920
on unix so first thing i'm gonna do is

1591
00:55:40,190 --> 00:55:45,380
gonna start a numerating and i'm gonna

1592
00:55:42,920 --> 00:55:50,259
do a find command to look for anything

1593
00:55:45,380 --> 00:55:52,910
with set UID on it and that belongs to

1594
00:55:50,259 --> 00:55:54,769
user 0 there's no really a root user but

1595
00:55:52,910 --> 00:55:57,348
there's a UID 0 which usually as a name

1596
00:55:54,769 --> 00:56:00,109
like start 1 or start - or something and

1597
00:55:57,349 --> 00:56:02,059
so there the find binary the fine binary

1598
00:56:00,109 --> 00:56:03,529
has set UID probably because like they

1599
00:56:02,059 --> 00:56:05,809
haven't got tired of people you know

1600
00:56:03,529 --> 00:56:07,609
complaining about errors so then I'm

1601
00:56:05,809 --> 00:56:10,430
going to do the old you know old CTF

1602
00:56:07,609 --> 00:56:11,900
trick I'm gonna do the exec flag and

1603
00:56:10,430 --> 00:56:14,419
find and execute a shell

1604
00:56:11,900 --> 00:56:16,489
now I'm UID it's got some at the

1605
00:56:14,420 --> 00:56:18,199
end so I'm just gonna do su to throw all

1606
00:56:16,489 --> 00:56:21,229
my you ID to the front and never an ID

1607
00:56:18,199 --> 00:56:23,599
again and there I'm the I'm user 0 which

1608
00:56:21,229 --> 00:56:25,489
in here they need to start to they don't

1609
00:56:23,599 --> 00:56:27,049
normally name it root what I'm gonna do

1610
00:56:25,489 --> 00:56:28,430
is I'm going to generate an RSA key and

1611
00:56:27,049 --> 00:56:30,440
I'll let you skip forward because my

1612
00:56:28,430 --> 00:56:31,910
emulator is really freaking slow and it

1613
00:56:30,440 --> 00:56:37,009
took like a good couple minutes to

1614
00:56:31,910 --> 00:56:41,089
generate the key here we go so I just

1615
00:56:37,009 --> 00:56:42,199
saved this RSA key yeah yeah no

1616
00:56:41,089 --> 00:56:46,390
passphrase or anything I'm just gonna

1617
00:56:42,199 --> 00:56:46,390
generate it so there it is

1618
00:56:49,370 --> 00:56:55,130
set permissions on it so that I can copy

1619
00:56:50,900 --> 00:56:57,140
it off of FTP and then I'm gonna echo

1620
00:56:55,130 --> 00:57:00,440
the contents over your element download

1621
00:56:57,140 --> 00:57:01,279
it first yeah the other come on must be

1622
00:57:00,440 --> 00:57:04,430
this up a little bit

1623
00:57:01,280 --> 00:57:06,290
cuz I'm running out of time so basically

1624
00:57:04,430 --> 00:57:11,629
what I did is I took that key and I

1625
00:57:06,290 --> 00:57:15,500
copied it into I copied it into Bob's

1626
00:57:11,630 --> 00:57:23,030
Dada SSH folder and tagged it onto his

1627
00:57:15,500 --> 00:57:24,410
authorized keys file yeah sorry I'm

1628
00:57:23,030 --> 00:57:25,820
going to overtime but hey I'm just

1629
00:57:24,410 --> 00:57:26,330
keeping off from eating right so that's

1630
00:57:25,820 --> 00:57:29,150
no big deal

1631
00:57:26,330 --> 00:57:34,370
they'll be done very soon hold on okay

1632
00:57:29,150 --> 00:57:36,230
so I can't that over and now I'm just

1633
00:57:34,370 --> 00:57:39,140
gonna exit out of my meterpreter session

1634
00:57:36,230 --> 00:57:43,160
because now I've got Bob so then I can

1635
00:57:39,140 --> 00:57:44,779
go over here I've got that key I copied

1636
00:57:43,160 --> 00:57:46,819
over and I've set the proper permissions

1637
00:57:44,780 --> 00:57:48,980
or else SSH will yell at me so I have

1638
00:57:46,820 --> 00:57:51,260
that key that I put in Bob's SSH folder

1639
00:57:48,980 --> 00:57:58,040
and now when SSH using that is my day

1640
00:57:51,260 --> 00:58:00,050
file givin no whammy no whammy and there

1641
00:57:58,040 --> 00:58:02,390
I've got a shell and I'm Bob now and Bob

1642
00:58:00,050 --> 00:58:04,040
is a sis prog he's got all the rights

1643
00:58:02,390 --> 00:58:06,770
and now I can use the TSO command

1644
00:58:04,040 --> 00:58:09,230
command in UNIX in order to run TSO

1645
00:58:06,770 --> 00:58:11,180
stuff so I can see here see I'm Bob and

1646
00:58:09,230 --> 00:58:12,800
Bob has special ant operations meaning

1647
00:58:11,180 --> 00:58:14,839
he can change any rack I've setting and

1648
00:58:12,800 --> 00:58:17,000
he has he can do anything to any data

1649
00:58:14,840 --> 00:58:20,510
set on the mainframe eve doesn't have

1650
00:58:17,000 --> 00:58:21,730
any of that you know so sad but I can

1651
00:58:20,510 --> 00:58:24,080
change that

1652
00:58:21,730 --> 00:58:25,580
so now that I'm is Bob a teen you have

1653
00:58:24,080 --> 00:58:26,720
to know Bob's password I can't go log

1654
00:58:25,580 --> 00:58:28,130
into TSO because I have no idea what's

1655
00:58:26,720 --> 00:58:30,500
password is on TSO but I can get into

1656
00:58:28,130 --> 00:58:32,060
Unix so I'm just gonna run a shell

1657
00:58:30,500 --> 00:58:33,380
script because as I'm telling you here

1658
00:58:32,060 --> 00:58:37,940
my little comment on the shell I'm too

1659
00:58:33,380 --> 00:58:38,960
lazy to memorize all this so what's

1660
00:58:37,940 --> 00:58:41,030
gonna do is just gonna run a bunch of

1661
00:58:38,960 --> 00:58:43,400
rack of commands that are gonna give Eve

1662
00:58:41,030 --> 00:58:46,070
special and operations permissions and

1663
00:58:43,400 --> 00:58:47,870
then allow her to log into TSO so now I

1664
00:58:46,070 --> 00:58:51,020
check Eve and now she's got special own

1665
00:58:47,870 --> 00:58:53,359
operations if I was doing this in TSO

1666
00:58:51,020 --> 00:58:54,980
like say was even I ran an exploit to

1667
00:58:53,360 --> 00:58:56,510
get myself special in operations I would

1668
00:58:54,980 --> 00:58:58,490
actually have a logout TSO and log back

1669
00:58:56,510 --> 00:58:59,900
in before it would take effect but since

1670
00:58:58,490 --> 00:59:01,640
i'm on unix you know I'm just gonna now

1671
00:58:59,900 --> 00:59:03,020
I'm a log in is a XIV because I've gave

1672
00:59:01,640 --> 00:59:07,420
myself TSO rights again

1673
00:59:03,020 --> 00:59:10,190
so here I am I'm Eve and I'm back in

1674
00:59:07,420 --> 00:59:11,390
sucker a nice PF and C this one's a

1675
00:59:10,190 --> 00:59:12,860
little different is that's the commands

1676
00:59:11,390 --> 00:59:15,350
down at the bottom like I told you they

1677
00:59:12,860 --> 00:59:16,910
customize love stuff and in mainframe

1678
00:59:15,350 --> 00:59:18,259
land and there I'm Eve and I've got

1679
00:59:16,910 --> 00:59:21,770
special operations so I've owned the

1680
00:59:18,260 --> 00:59:25,600
mainframe okay so here I'm almost done I

1681
00:59:21,770 --> 00:59:28,759
promise that y'all are getting hungry so

1682
00:59:25,600 --> 00:59:32,000
anyway that's my favorite hacking video

1683
00:59:28,760 --> 00:59:34,400
I love that guy okay it's for mega64

1684
00:59:32,000 --> 00:59:36,140
so how can I start learning main framing

1685
00:59:34,400 --> 00:59:38,270
or learning how to hack mainframes or

1686
00:59:36,140 --> 00:59:39,980
use mainframes obviously if your

1687
00:59:38,270 --> 00:59:40,610
company's got one and will let you use

1688
00:59:39,980 --> 00:59:43,640
it

1689
00:59:40,610 --> 00:59:45,710
go ahead the other official way is IBM

1690
00:59:43,640 --> 00:59:47,089
has an official Emilio package it gets

1691
00:59:45,710 --> 00:59:49,190
rebranded every couple years it's

1692
00:59:47,090 --> 00:59:51,650
currently called ZD + TZ development

1693
00:59:49,190 --> 00:59:53,150
test environment and it's about 5,000

1694
00:59:51,650 --> 00:59:55,610
ish dollars kind of depends on like the

1695
00:59:53,150 --> 00:59:58,700
licensing and like how much CPUs you

1696
00:59:55,610 --> 01:00:00,560
have any users whatever and it's like an

1697
00:59:58,700 --> 01:00:02,660
official emulator they'll run on like

1698
01:00:00,560 --> 01:00:04,640
x86 you can run it on a laptop or you

1699
01:00:02,660 --> 01:00:08,118
can run it in the cloud server like AWS

1700
01:00:04,640 --> 01:00:09,830
or as your you can also sign up for the

1701
01:00:08,119 --> 01:00:11,630
IBM master the mainframe competition

1702
01:00:09,830 --> 01:00:13,609
which that's the first demos I showed

1703
01:00:11,630 --> 01:00:15,290
you was on that box it's their student

1704
01:00:13,609 --> 01:00:17,750
outreach to try to like save the dying

1705
01:00:15,290 --> 01:00:18,830
mainframe or species if you're a college

1706
01:00:17,750 --> 01:00:20,690
student you're actually eligible to

1707
01:00:18,830 --> 01:00:22,069
compete like win prizes but if not you

1708
01:00:20,690 --> 01:00:23,900
can just go and you could go register

1709
01:00:22,070 --> 01:00:26,060
for the learning system and they'll give

1710
01:00:23,900 --> 01:00:27,530
you a mainframe account cons are that

1711
01:00:26,060 --> 01:00:29,690
sometimes it's not available there'll be

1712
01:00:27,530 --> 01:00:31,130
certain times the year will be down for

1713
01:00:29,690 --> 01:00:33,410
maintenance or because the competition

1714
01:00:31,130 --> 01:00:35,900
ended and also you can't hack on it they

1715
01:00:33,410 --> 01:00:37,970
highly discourage that happen the other

1716
01:00:35,900 --> 01:00:40,400
way is Hercules which is an open source

1717
01:00:37,970 --> 01:00:42,140
mainframe emulator IBM hates them like

1718
01:00:40,400 --> 01:00:44,570
I've heard IBM employees are for bought

1719
01:00:42,140 --> 01:00:47,240
and from like using it it's maintained

1720
01:00:44,570 --> 01:00:48,890
by Tron guy J Maynard who old Internet

1721
01:00:47,240 --> 01:00:50,868
heads may remember him from like early

1722
01:00:48,890 --> 01:00:53,529
YouTube he's like one of the maintainer

1723
01:00:50,869 --> 01:00:57,050
of it the legal way is you can find like

1724
01:00:53,530 --> 01:00:58,730
public domain versions of MVS like the

1725
01:00:57,050 --> 01:01:01,280
old operating system and you can like

1726
01:00:58,730 --> 01:01:02,540
run those and that's small and like

1727
01:01:01,280 --> 01:01:06,320
lightweight enough you can even run it

1728
01:01:02,540 --> 01:01:07,609
like on a Raspberry Pi but like the

1729
01:01:06,320 --> 01:01:09,170
things that rack F and stuff aren't

1730
01:01:07,609 --> 01:01:11,060
public domain so they had to take those

1731
01:01:09,170 --> 01:01:12,650
out and put in like drop-in replacements

1732
01:01:11,060 --> 01:01:13,910
for it al like it gets you familiar with

1733
01:01:12,650 --> 01:01:15,200
it that's kind of funky it doesn't have

1734
01:01:13,910 --> 01:01:16,430
Unix it's missing some like newer

1735
01:01:15,200 --> 01:01:17,750
features

1736
01:01:16,430 --> 01:01:19,730
that's illegal ways you just go find a

1737
01:01:17,750 --> 01:01:23,360
bootleg like dump of z/os like some guy

1738
01:01:19,730 --> 01:01:24,410
dumped like the the ad CD which is

1739
01:01:23,360 --> 01:01:26,180
another one of their like emulator

1740
01:01:24,410 --> 01:01:27,859
packages several years ago some guys

1741
01:01:26,180 --> 01:01:28,910
like just burned his bridges IBM and

1742
01:01:27,860 --> 01:01:31,250
just dumped it all through the internet

1743
01:01:28,910 --> 01:01:33,200
so you can run that too and that one you

1744
01:01:31,250 --> 01:01:34,850
can hack it and it's about ten years out

1745
01:01:33,200 --> 01:01:37,279
of date now but like it's not too bad

1746
01:01:34,850 --> 01:01:38,450
it's it'll still be okay I'll still do

1747
01:01:37,280 --> 01:01:41,300
most of the things you can do and I like

1748
01:01:38,450 --> 01:01:43,370
modern up-to-date cos honorable mention

1749
01:01:41,300 --> 01:01:44,870
to z/os AF globe comm which is some

1750
01:01:43,370 --> 01:01:46,190
weird Canadian company that just has a

1751
01:01:44,870 --> 01:01:48,650
public mainframe and you can go in there

1752
01:01:46,190 --> 01:01:50,180
forum and ask for a user ID I've never

1753
01:01:48,650 --> 01:01:54,380
used it but I know people who have and

1754
01:01:50,180 --> 01:01:56,600
it's an option and then also you'll need

1755
01:01:54,380 --> 01:01:59,240
a TM 30 to 70 emulator you saw I used X

1756
01:01:56,600 --> 01:02:01,220
30 to 70 that package also comes with C

1757
01:01:59,240 --> 01:02:03,259
30 to 70 which will run inside like a

1758
01:02:01,220 --> 01:02:05,450
like a your terminal session instead of

1759
01:02:03,260 --> 01:02:07,940
having use X it's available on Mac your

1760
01:02:05,450 --> 01:02:09,470
own Windows via like WSL and there's

1761
01:02:07,940 --> 01:02:12,200
mocha soft has a couple commercial ones

1762
01:02:09,470 --> 01:02:14,000
for like 30 bucks you can get a free

1763
01:02:12,200 --> 01:02:15,290
license for Vista team 30 to 70 for

1764
01:02:14,000 --> 01:02:18,110
Windows if you signed up for most of the

1765
01:02:15,290 --> 01:02:19,850
mainframe and then here's some links to

1766
01:02:18,110 --> 01:02:21,680
different stuff and also in this this

1767
01:02:19,850 --> 01:02:23,630
presentation when I put it up online on

1768
01:02:21,680 --> 01:02:26,000
my blog I'll have a big reference

1769
01:02:23,630 --> 01:02:28,010
section in the back that has links to

1770
01:02:26,000 --> 01:02:30,250
all the tools other people's talks on

1771
01:02:28,010 --> 01:02:32,540
mainframes blog articles different stuff

1772
01:02:30,250 --> 01:02:34,250
last I want to say a big thanks to Phil

1773
01:02:32,540 --> 01:02:35,960
young Chad reckons rude and Austin

1774
01:02:34,250 --> 01:02:37,490
Robertson who all helped me with this

1775
01:02:35,960 --> 01:02:38,870
presentation and peer reviewed it for me

1776
01:02:37,490 --> 01:02:41,089
and gave me good advice

1777
01:02:38,870 --> 01:02:42,859
big thanks to Lu bellows all and Dominic

1778
01:02:41,090 --> 01:02:45,050
white who done a lot of great work on

1779
01:02:42,860 --> 01:02:46,970
hacking kicks and Prive s 'king

1780
01:02:45,050 --> 01:02:49,100
cackalacky con for now sticking me in

1781
01:02:46,970 --> 01:02:51,560
the crappy morning slot and thanks to

1782
01:02:49,100 --> 01:02:52,970
all of you for attending so otherwise

1783
01:02:51,560 --> 01:02:54,080
get the hell out of here go eat lunch if

1784
01:02:52,970 --> 01:02:56,480
you want to talk to me about mainframe

1785
01:02:54,080 --> 01:02:59,890
stuff I'm available for questions just

1786
01:02:56,480 --> 01:02:59,890
come hit me up thank you everybody

