1
00:00:03,080 --> 00:00:07,099
[Music]

2
00:00:10,580 --> 00:00:16,280
and so thanks<font color="#E5E5E5"> for that introduction my</font>

3
00:00:14,510 --> 00:00:19,340
name is Mark Dodd and I'm going to<font color="#E5E5E5"> be</font>

4
00:00:16,280 --> 00:00:21,320
speaking about<font color="#E5E5E5"> memory corruption</font>

5
00:00:19,340 --> 00:00:23,960
<font color="#E5E5E5">mitigations</font><font color="#CCCCCC"> in modern operating systems</font>

6
00:00:21,320 --> 00:00:26,240
<font color="#CCCCCC">and particularly how they've impacted</font>

7
00:00:23,960 --> 00:00:29,960
the cost of attackers wishing to exploit

8
00:00:26,240 --> 00:00:32,060
<font color="#E5E5E5">these flaws and compare that to how it</font>

9
00:00:29,960 --> 00:00:37,280
used<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> about 10 years ago to how it</font>

10
00:00:32,060 --> 00:00:38,600
is<font color="#CCCCCC"> now a brief introduction of my career</font>

11
00:00:37,280 --> 00:00:40,190
so I've been doing vulnerability

12
00:00:38,600 --> 00:00:42,530
research for a while so<font color="#E5E5E5"> this is an area</font>

13
00:00:40,190 --> 00:00:43,940
that particularly interests<font color="#CCCCCC"> me for a</font>

14
00:00:42,530 --> 00:00:46,609
long<font color="#CCCCCC"> time I was</font><font color="#E5E5E5"> doing vulnerability</font>

15
00:00:43,940 --> 00:00:50,839
research and exploitive for ISS which is

16
00:00:46,609 --> 00:00:53,179
now IBM<font color="#E5E5E5"> and following that I started my</font>

17
00:00:50,840 --> 00:00:54,859
own company<font color="#CCCCCC"> azimuth</font><font color="#E5E5E5"> security and we've</font>

18
00:00:53,179 --> 00:00:56,570
<font color="#CCCCCC">actually consulted</font><font color="#E5E5E5"> to various vendors</font>

19
00:00:54,859 --> 00:00:58,879
<font color="#E5E5E5">about some of these current mitigations</font>

20
00:00:56,570 --> 00:01:00,920
and trying to break them<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I'm pretty</font>

21
00:00:58,879 --> 00:01:02,300
familiar<font color="#CCCCCC"> with some of them and in</font>

22
00:01:00,920 --> 00:01:03,980
addition I've done a bit<font color="#CCCCCC"> of security</font>

23
00:01:02,300 --> 00:01:08,179
research<font color="#E5E5E5"> for my own and presented at</font>

24
00:01:03,980 --> 00:01:10,940
various conferences on that<font color="#E5E5E5"> I basically</font>

25
00:01:08,180 --> 00:01:12,140
wanted<font color="#CCCCCC"> to talk about memory</font><font color="#E5E5E5"> corruption</font>

26
00:01:10,940 --> 00:01:14,840
mitigations and where they're going

27
00:01:12,140 --> 00:01:16,760
<font color="#E5E5E5">because memory corruption is continues</font>

28
00:01:14,840 --> 00:01:18,980
to<font color="#CCCCCC"> be a big</font><font color="#E5E5E5"> deal like it always has</font><font color="#CCCCCC"> been</font>

29
00:01:16,760 --> 00:01:20,600
and it's going<font color="#E5E5E5"> to be for the foreseeable</font>

30
00:01:18,980 --> 00:01:25,790
<font color="#CCCCCC">future</font><font color="#E5E5E5"> really</font>

31
00:01:20,600 --> 00:01:27,589
there's thousands about in in total<font color="#CCCCCC"> CVE</font>

32
00:01:25,790 --> 00:01:29,900
thinks a thousand bugs every year or<font color="#E5E5E5"> so</font>

33
00:01:27,590 --> 00:01:32,390
and it's<font color="#CCCCCC"> not just the volume of memory</font>

34
00:01:29,900 --> 00:01:34,000
corruption mitigate bugs but also the

35
00:01:32,390 --> 00:01:37,730
highest<font color="#E5E5E5"> impact</font><font color="#CCCCCC"> ones that you hear about</font>

36
00:01:34,000 --> 00:01:40,490
<font color="#E5E5E5">basically mostly memory corruption ones</font>

37
00:01:37,730 --> 00:01:42,190
<font color="#E5E5E5">so heartbleed</font><font color="#CCCCCC"> stagefright basically</font>

38
00:01:40,490 --> 00:01:45,669
everything you<font color="#E5E5E5"> see at phone to own</font>

39
00:01:42,190 --> 00:01:48,380
various jailbreak things and so<font color="#E5E5E5"> on</font>

40
00:01:45,670 --> 00:01:50,080
so I've got 30<font color="#CCCCCC"> minutes</font><font color="#E5E5E5"> and this is</font>

41
00:01:48,380 --> 00:01:53,270
<font color="#CCCCCC">basically what I want to</font><font color="#E5E5E5"> cover</font>

42
00:01:50,080 --> 00:01:55,910
essentially the overall strategy that

43
00:01:53,270 --> 00:01:58,630
<font color="#E5E5E5">are you know modern operating systems</font>

44
00:01:55,910 --> 00:02:01,700
<font color="#CCCCCC">and vendors have used to approach</font>

45
00:01:58,630 --> 00:02:03,890
security basically what have we got<font color="#CCCCCC"> and</font>

46
00:02:01,700 --> 00:02:06,170
then I want<font color="#E5E5E5"> to talk about the offensive</font>

47
00:02:03,890 --> 00:02:08,119
side<font color="#CCCCCC"> of it and what they used</font><font color="#E5E5E5"> to have to</font>

48
00:02:06,170 --> 00:02:10,009
do versus<font color="#CCCCCC"> what they have to do</font><font color="#E5E5E5"> now so</font>

49
00:02:08,119 --> 00:02:12,830
that we can sort of<font color="#E5E5E5"> can compare and</font>

50
00:02:10,008 --> 00:02:15,559
contrast<font color="#E5E5E5"> and work out what cost has</font><font color="#CCCCCC"> been</font>

51
00:02:12,830 --> 00:02:18,770
added<font color="#CCCCCC"> to them as a result</font><font color="#E5E5E5"> of the efforts</font>

52
00:02:15,560 --> 00:02:20,660
<font color="#CCCCCC">by these vendors and then</font><font color="#E5E5E5"> I will try and</font>

53
00:02:18,770 --> 00:02:23,950
talk<font color="#CCCCCC"> about some future predictions of</font>

54
00:02:20,660 --> 00:02:27,209
mine and by the way this talk

55
00:02:23,950 --> 00:02:29,829
about state-of-the-art<font color="#E5E5E5"> mitigations most</font>

56
00:02:27,209 --> 00:02:32,890
mature operating systems such<font color="#E5E5E5"> as</font><font color="#CCCCCC"> windows</font>

57
00:02:29,830 --> 00:02:35,019
and iOS and that<font color="#E5E5E5"> use a very</font>

58
00:02:32,890 --> 00:02:37,779
state-of-the-art<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> mitigation</font>

59
00:02:35,019 --> 00:02:40,720
technology but<font color="#CCCCCC"> a lot of IOT</font><font color="#E5E5E5"> devices</font>

60
00:02:37,780 --> 00:02:42,250
don't and as such a pretty wide open<font color="#E5E5E5"> and</font>

61
00:02:40,720 --> 00:02:44,920
probably will be<font color="#CCCCCC"> for the foreseeable</font>

62
00:02:42,250 --> 00:02:49,450
future<font color="#CCCCCC"> so I'm not going</font><font color="#E5E5E5"> to be</font>

63
00:02:44,920 --> 00:02:53,048
considering IOT stuff okay so what

64
00:02:49,450 --> 00:02:55,869
defense<font color="#E5E5E5"> vendors have basically adopted a</font>

65
00:02:53,049 --> 00:02:58,390
<font color="#E5E5E5">three-tier approach</font><font color="#CCCCCC"> first of all they've</font>

66
00:02:55,870 --> 00:03:00,340
done bug minimization<font color="#E5E5E5"> which is their</font>

67
00:02:58,390 --> 00:03:02,670
attempts to basically create bug free

68
00:03:00,340 --> 00:03:05,890
software or<font color="#CCCCCC"> as</font><font color="#E5E5E5"> close as they</font><font color="#CCCCCC"> can to it</font>

69
00:03:02,670 --> 00:03:07,899
<font color="#CCCCCC">then exploit mitigations and then</font>

70
00:03:05,890 --> 00:03:09,069
isolation which is sandboxing and<font color="#E5E5E5"> I'll</font>

71
00:03:07,900 --> 00:03:12,489
talk about<font color="#E5E5E5"> all three of these things</font>

72
00:03:09,069 --> 00:03:17,078
<font color="#CCCCCC">separately</font><font color="#E5E5E5"> their goals are basically</font>

73
00:03:12,489 --> 00:03:18,489
being in<font color="#E5E5E5"> response to early work on you</font>

74
00:03:17,079 --> 00:03:20,500
know exploitation<font color="#E5E5E5"> where they said it</font>

75
00:03:18,489 --> 00:03:23,340
where they<font color="#E5E5E5"> noticed it was very easy to</font>

76
00:03:20,500 --> 00:03:26,950
<font color="#E5E5E5">you know exploit bugs</font><font color="#CCCCCC"> to compromise</font>

77
00:03:23,340 --> 00:03:30,459
their systems<font color="#CCCCCC"> so</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> basically wanted</font>

78
00:03:26,950 --> 00:03:32,709
<font color="#E5E5E5">to reduce</font><font color="#CCCCCC"> the window of attack</font><font color="#E5E5E5"> render</font>

79
00:03:30,459 --> 00:03:35,799
some or all of these bugs unexploited

80
00:03:32,709 --> 00:03:37,690
all<font color="#E5E5E5"> and</font><font color="#CCCCCC"> to ones that they were unable to</font>

81
00:03:35,799 --> 00:03:41,650
<font color="#E5E5E5">render unavoidable at least raise the</font>

82
00:03:37,690 --> 00:03:44,170
cost of development<font color="#CCCCCC"> so that you had to</font>

83
00:03:41,650 --> 00:03:47,109
put in a lot of effort to<font color="#E5E5E5"> try</font><font color="#CCCCCC"> and</font>

84
00:03:44,170 --> 00:03:49,958
successfully exploit them<font color="#CCCCCC"> and of course</font>

85
00:03:47,109 --> 00:03:51,910
<font color="#CCCCCC">also compromise exploit reliability so</font>

86
00:03:49,959 --> 00:03:54,180
that<font color="#E5E5E5"> even if you did exploit them a lot</font>

87
00:03:51,910 --> 00:03:58,840
<font color="#E5E5E5">of the times these attempts would fail</font>

88
00:03:54,180 --> 00:04:01,630
<font color="#CCCCCC">so bug minimization is the first the</font>

89
00:03:58,840 --> 00:04:03,989
<font color="#E5E5E5">first stage of this and this is like I</font>

90
00:04:01,630 --> 00:04:07,889
<font color="#E5E5E5">said an attempt to produce bug-free code</font>

91
00:04:03,989 --> 00:04:10,510
<font color="#CCCCCC">there's been a whole lot of technology</font>

92
00:04:07,889 --> 00:04:14,859
<font color="#CCCCCC">that has gone into trying to</font><font color="#E5E5E5"> make this</font>

93
00:04:10,510 --> 00:04:16,959
happen<font color="#CCCCCC"> with</font><font color="#E5E5E5"> varying success</font><font color="#CCCCCC"> a lot of a</font>

94
00:04:14,859 --> 00:04:19,120
lot of<font color="#E5E5E5"> vendors do various different</font>

95
00:04:16,959 --> 00:04:21,280
things<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> thing is attack surface</font>

96
00:04:19,120 --> 00:04:23,410
reduction so sort<font color="#E5E5E5"> of looking</font><font color="#CCCCCC"> at their</font>

97
00:04:21,279 --> 00:04:25,929
software going<font color="#E5E5E5"> what can attackers target</font>

98
00:04:23,410 --> 00:04:27,479
and interact with how<font color="#E5E5E5"> can we make how</font>

99
00:04:25,930 --> 00:04:31,270
<font color="#E5E5E5">can we make that attack surface smaller</font>

100
00:04:27,479 --> 00:04:33,969
<font color="#CCCCCC">and you know</font><font color="#E5E5E5"> vendors now are constantly</font>

101
00:04:31,270 --> 00:04:36,210
<font color="#CCCCCC">looking for</font><font color="#E5E5E5"> ways to to maybe trim some</font>

102
00:04:33,970 --> 00:04:38,340
of the fat<font color="#E5E5E5"> and</font>

103
00:04:36,210 --> 00:04:41,460
especially with older legacy

104
00:04:38,340 --> 00:04:44,070
technologies to make them less available

105
00:04:41,460 --> 00:04:47,039
<font color="#E5E5E5">so that so that the taxes kind of tax</font>

106
00:04:44,070 --> 00:04:49,080
them<font color="#E5E5E5"> one</font><font color="#CCCCCC"> example I</font><font color="#E5E5E5"> can think of is when</font>

107
00:04:47,039 --> 00:04:50,940
Microsoft introduced edge<font color="#E5E5E5"> they got rid</font>

108
00:04:49,080 --> 00:04:53,070
<font color="#CCCCCC">of a whole lot of</font><font color="#E5E5E5"> legacy technologies</font>

109
00:04:50,940 --> 00:04:56,430
they you can't interact with<font color="#E5E5E5"> sub-unit</font>

110
00:04:53,070 --> 00:04:59,930
WMS and<font color="#E5E5E5"> EMF files anymore</font><font color="#CCCCCC"> you can use</font>

111
00:04:56,430 --> 00:05:03,150
<font color="#CCCCCC">vbscript and VML and things</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font>

112
00:04:59,930 --> 00:05:05,340
also<font color="#E5E5E5"> google recently</font><font color="#CCCCCC"> changed their</font>

113
00:05:03,150 --> 00:05:07,370
browser<font color="#CCCCCC"> I believe to use click-to-play</font>

114
00:05:05,340 --> 00:05:09,448
<font color="#E5E5E5">flash because flash was such a problem</font>

115
00:05:07,370 --> 00:05:12,810
<font color="#CCCCCC">so that's the</font><font color="#E5E5E5"> kind of thing</font><font color="#CCCCCC"> that we're</font>

116
00:05:09,449 --> 00:05:15,030
talking<font color="#E5E5E5"> about there</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> addition we have</font>

117
00:05:12,810 --> 00:05:17,099
<font color="#CCCCCC">our static</font><font color="#E5E5E5"> analysis tools which used to</font>

118
00:05:15,030 --> 00:05:19,109
be<font color="#E5E5E5"> quite rudimentary but have become</font>

119
00:05:17,099 --> 00:05:21,150
increasingly<font color="#CCCCCC"> sophisticated</font><font color="#E5E5E5"> and</font>

120
00:05:19,110 --> 00:05:23,160
<font color="#E5E5E5">particularly as the static analysis</font>

121
00:05:21,150 --> 00:05:28,080
stuff that's<font color="#E5E5E5"> gone into compilers and</font><font color="#CCCCCC"> IDs</font>

122
00:05:23,160 --> 00:05:30,180
<font color="#E5E5E5">to perhaps inform developers and help</font>

123
00:05:28,080 --> 00:05:31,500
them create code that's<font color="#E5E5E5"> not going to</font>

124
00:05:30,180 --> 00:05:35,550
have these kind of vulnerabilities in

125
00:05:31,500 --> 00:05:36,870
them<font color="#CCCCCC"> and of</font><font color="#E5E5E5"> course the</font><font color="#CCCCCC"> the thing you</font>

126
00:05:35,550 --> 00:05:38,940
will have heard about probably<font color="#E5E5E5"> the most</font>

127
00:05:36,870 --> 00:05:43,229
is you know the fuzzing and<font color="#E5E5E5"> bug bounties</font>

128
00:05:38,940 --> 00:05:44,669
side of things<font color="#E5E5E5"> where vendors acknowledge</font>

129
00:05:43,229 --> 00:05:48,060
<font color="#CCCCCC">okay we're still going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> have some</font><font color="#E5E5E5"> bugs</font>

130
00:05:44,669 --> 00:05:49,620
<font color="#E5E5E5">let's put our put our arm software</font>

131
00:05:48,060 --> 00:05:52,320
through<font color="#E5E5E5"> some pretty epic testing</font>

132
00:05:49,620 --> 00:05:54,090
compared to what they<font color="#CCCCCC"> used</font><font color="#E5E5E5"> to do and and</font>

133
00:05:52,320 --> 00:05:56,610
try and get rid<font color="#E5E5E5"> of these bugs before</font>

134
00:05:54,090 --> 00:06:00,060
<font color="#E5E5E5">they become a problem</font><font color="#CCCCCC"> I know that Google</font>

135
00:05:56,610 --> 00:06:02,820
<font color="#E5E5E5">uses cluster size they used to</font><font color="#CCCCCC"> run like</font>

136
00:06:00,060 --> 00:06:04,889
<font color="#E5E5E5">10 million tests of</font><font color="#CCCCCC"> chrome per day and</font>

137
00:06:02,820 --> 00:06:08,250
<font color="#E5E5E5">that</font><font color="#CCCCCC"> was back in like 2012</font><font color="#E5E5E5"> or something</font>

138
00:06:04,889 --> 00:06:10,560
so whatever they do now must<font color="#E5E5E5"> be like way</font>

139
00:06:08,250 --> 00:06:12,150
further than<font color="#CCCCCC"> that other</font><font color="#E5E5E5"> vendors do</font>

140
00:06:10,560 --> 00:06:14,669
similar Microsoft with their<font color="#E5E5E5"> sage</font>

141
00:06:12,150 --> 00:06:16,500
<font color="#E5E5E5">technology and I presume Apple does</font>

142
00:06:14,669 --> 00:06:18,780
quite a<font color="#E5E5E5"> lot of fuzzing but since they're</font>

143
00:06:16,500 --> 00:06:24,330
quite not very<font color="#CCCCCC"> open about their</font>

144
00:06:18,780 --> 00:06:28,440
practices<font color="#E5E5E5"> we don't know exactly</font><font color="#CCCCCC"> so after</font>

145
00:06:24,330 --> 00:06:29,820
that we've gone<font color="#E5E5E5"> okay well let's make the</font>

146
00:06:28,440 --> 00:06:33,050
assumption<font color="#CCCCCC"> that some bugs made us</font>

147
00:06:29,820 --> 00:06:35,849
through code into into<font color="#E5E5E5"> production so</font>

148
00:06:33,050 --> 00:06:37,889
vendors then started to look at exploit

149
00:06:35,849 --> 00:06:39,599
mitigations<font color="#E5E5E5"> and say</font><font color="#CCCCCC"> okay we assume the</font>

150
00:06:37,889 --> 00:06:41,490
bugs are<font color="#E5E5E5"> in code how can we make</font>

151
00:06:39,599 --> 00:06:45,479
exploitation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these bugs not possible</font>

152
00:06:41,490 --> 00:06:48,240
or not practical the goal with most

153
00:06:45,479 --> 00:06:49,900
mitigations is to render a whole class

154
00:06:48,240 --> 00:06:53,080
of<font color="#CCCCCC"> bugs an exploitable</font>

155
00:06:49,900 --> 00:06:54,190
raise the cost<font color="#E5E5E5"> of development for bugs</font>

156
00:06:53,080 --> 00:06:57,130
<font color="#CCCCCC">that still are exploitable</font>

157
00:06:54,190 --> 00:07:00,460
and<font color="#E5E5E5"> compromise reliability like the</font>

158
00:06:57,130 --> 00:07:01,870
goals we talked about before<font color="#CCCCCC"> I don't</font>

159
00:07:00,460 --> 00:07:04,299
<font color="#E5E5E5">have enough time to go through</font><font color="#CCCCCC"> all these</font>

160
00:07:01,870 --> 00:07:06,550
mitigations<font color="#CCCCCC"> but they're all things that</font>

161
00:07:04,300 --> 00:07:08,650
<font color="#E5E5E5">you would</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> heard of</font><font color="#CCCCCC"> before a SLR in</font>

162
00:07:06,550 --> 00:07:12,370
<font color="#E5E5E5">depth</font><font color="#CCCCCC"> whether</font><font color="#E5E5E5"> really the first</font><font color="#CCCCCC"> big ones</font>

163
00:07:08,650 --> 00:07:14,710
that<font color="#CCCCCC"> came</font><font color="#E5E5E5"> along and and also</font><font color="#CCCCCC"> heap</font>

164
00:07:12,370 --> 00:07:17,170
<font color="#E5E5E5">hardening to prevent standard heap</font>

165
00:07:14,710 --> 00:07:20,109
overflow strategies<font color="#CCCCCC"> and then more</font>

166
00:07:17,170 --> 00:07:22,960
recently<font color="#CCCCCC"> you know vendors</font><font color="#E5E5E5"> are trying to</font>

167
00:07:20,110 --> 00:07:25,300
combat<font color="#E5E5E5"> things like rot and and that's</font>

168
00:07:22,960 --> 00:07:27,250
where we get like<font color="#CCCCCC"> CFG control</font><font color="#E5E5E5"> flow</font>

169
00:07:25,300 --> 00:07:29,980
guards and<font color="#CCCCCC"> fill flow integrity and</font><font color="#E5E5E5"> those</font>

170
00:07:27,250 --> 00:07:32,770
<font color="#CCCCCC">EOS X</font><font color="#E5E5E5"> wrap things to try and to try and</font>

171
00:07:29,980 --> 00:07:37,090
<font color="#CCCCCC">protect against that</font><font color="#E5E5E5"> and we also have</font>

172
00:07:32,770 --> 00:07:38,620
code signing<font color="#E5E5E5"> which has been largely an</font>

173
00:07:37,090 --> 00:07:41,739
<font color="#CCCCCC">Apple thing but other vendors are</font>

174
00:07:38,620 --> 00:07:44,980
increasingly looking<font color="#CCCCCC"> to adopt</font><font color="#E5E5E5"> this this</font>

175
00:07:41,740 --> 00:07:46,570
kind of technology in terms<font color="#E5E5E5"> of</font>

176
00:07:44,980 --> 00:07:49,840
mitigations is both early<font color="#E5E5E5"> in</font><font color="#CCCCCC"> late-stage</font>

177
00:07:46,570 --> 00:07:51,969
<font color="#E5E5E5">mitigations</font><font color="#CCCCCC"> early stage mitigations of</font>

178
00:07:49,840 --> 00:07:54,280
those that basically attempt to

179
00:07:51,970 --> 00:07:57,250
completely<font color="#CCCCCC"> obliterate an entire bug</font>

180
00:07:54,280 --> 00:07:59,679
class and they do so by<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to stop</font>

181
00:07:57,250 --> 00:08:03,160
you from doing control flow hijacking or

182
00:07:59,680 --> 00:08:05,440
something like<font color="#CCCCCC"> that they'll attempt to</font>

183
00:08:03,160 --> 00:08:06,970
detect<font color="#E5E5E5"> if data structures have been</font>

184
00:08:05,440 --> 00:08:08,380
modified<font color="#E5E5E5"> or maybe they'll</font><font color="#CCCCCC"> just encode</font>

185
00:08:06,970 --> 00:08:10,150
the data structures so<font color="#CCCCCC"> that you don't</font>

186
00:08:08,380 --> 00:08:11,460
know how to modify them to<font color="#CCCCCC"> do something</font>

187
00:08:10,150 --> 00:08:14,140
<font color="#CCCCCC">useful</font>

188
00:08:11,460 --> 00:08:16,659
these mitigations generally<font color="#E5E5E5"> apply for</font>

189
00:08:14,140 --> 00:08:19,479
only one or<font color="#CCCCCC"> two</font><font color="#E5E5E5"> bug</font><font color="#CCCCCC"> sizes each but</font>

190
00:08:16,660 --> 00:08:22,060
they're exceedingly effective<font color="#E5E5E5"> in those</font>

191
00:08:19,480 --> 00:08:23,950
<font color="#CCCCCC">particular instances the problem we have</font>

192
00:08:22,060 --> 00:08:26,350
of<font color="#CCCCCC"> course is</font><font color="#E5E5E5"> that when new bug classes</font>

193
00:08:23,950 --> 00:08:29,340
get discovered the old mitigations

194
00:08:26,350 --> 00:08:31,690
become somewhat useless<font color="#E5E5E5"> against those</font>

195
00:08:29,340 --> 00:08:33,429
<font color="#CCCCCC">then we have late-stage</font><font color="#E5E5E5"> mitigations</font>

196
00:08:31,690 --> 00:08:35,350
where where the vendors<font color="#E5E5E5"> have said</font><font color="#CCCCCC"> okay</font>

197
00:08:33,429 --> 00:08:37,809
let's assume<font color="#CCCCCC"> that data structures have</font>

198
00:08:35,350 --> 00:08:41,440
been corrupted and the attacker has been

199
00:08:37,809 --> 00:08:43,859
able<font color="#CCCCCC"> to gain control of the</font><font color="#E5E5E5"> gain control</font>

200
00:08:41,440 --> 00:08:46,300
of the process and<font color="#E5E5E5"> try to you</font><font color="#CCCCCC"> know</font>

201
00:08:43,860 --> 00:08:48,340
change execution flow<font color="#E5E5E5"> to something of</font>

202
00:08:46,300 --> 00:08:51,280
their choosing so the latest stage

203
00:08:48,340 --> 00:08:52,900
<font color="#E5E5E5">mitigation then prevents attempt to</font>

204
00:08:51,280 --> 00:08:56,199
prevent arbitrary code from loading or

205
00:08:52,900 --> 00:08:57,670
executing<font color="#E5E5E5"> these are really useful</font>

206
00:08:56,200 --> 00:08:59,430
<font color="#E5E5E5">because they can hinder most attacks</font>

207
00:08:57,670 --> 00:09:03,610
since<font color="#E5E5E5"> most attacks have the goal</font><font color="#CCCCCC"> of</font>

208
00:08:59,430 --> 00:09:06,219
executing arbitrary code and these are

209
00:09:03,610 --> 00:09:09,550
things like<font color="#CCCCCC"> ASL R</font><font color="#E5E5E5"> and X and then more</font>

210
00:09:06,220 --> 00:09:14,050
<font color="#CCCCCC">recently CFG jet hardening and</font><font color="#E5E5E5"> code</font>

211
00:09:09,550 --> 00:09:16,390
<font color="#CCCCCC">signing</font><font color="#E5E5E5"> now these mitigations have</font>

212
00:09:14,050 --> 00:09:18,579
various usefulness and<font color="#CCCCCC"> i tried to</font>

213
00:09:16,390 --> 00:09:22,060
<font color="#E5E5E5">categorize them here the the most</font>

214
00:09:18,579 --> 00:09:25,000
important thing to to note is whether

215
00:09:22,060 --> 00:09:29,410
they render bugs<font color="#CCCCCC"> on exploitable</font><font color="#E5E5E5"> and also</font>

216
00:09:25,000 --> 00:09:31,089
the cost that they incur to develop an

217
00:09:29,410 --> 00:09:33,640
exploit to work around<font color="#E5E5E5"> it</font>

218
00:09:31,089 --> 00:09:36,339
now a lot<font color="#E5E5E5"> of a lot of mitigations will</font>

219
00:09:33,640 --> 00:09:37,899
produce a one-time cost<font color="#CCCCCC"> where you will</font>

220
00:09:36,339 --> 00:09:40,180
have<font color="#E5E5E5"> to figure out</font><font color="#CCCCCC"> a way to bypass</font><font color="#E5E5E5"> the</font>

221
00:09:37,899 --> 00:09:43,720
mitigation<font color="#E5E5E5"> but once you do you can reuse</font>

222
00:09:40,180 --> 00:09:46,750
that<font color="#CCCCCC"> technique over and</font><font color="#E5E5E5"> over again</font><font color="#CCCCCC"> so</font>

223
00:09:43,720 --> 00:09:50,380
that's<font color="#E5E5E5"> very good</font><font color="#CCCCCC"> for the attacker other</font>

224
00:09:46,750 --> 00:09:52,600
other other mitigations<font color="#CCCCCC"> produced a</font>

225
00:09:50,380 --> 00:09:54,579
recurring cost where you have to work

226
00:09:52,600 --> 00:09:57,550
out a way<font color="#E5E5E5"> to</font><font color="#CCCCCC"> bypass the mitigation in</font>

227
00:09:54,579 --> 00:09:59,859
each instance that you use it<font color="#E5E5E5"> I've been</font>

228
00:09:57,550 --> 00:10:03,880
fairly general generous with<font color="#CCCCCC"> what I've</font>

229
00:09:59,860 --> 00:10:05,740
labeled as recurring<font color="#E5E5E5"> or not because you</font>

230
00:10:03,880 --> 00:10:10,000
<font color="#CCCCCC">can consider recurring in two different</font>

231
00:10:05,740 --> 00:10:12,970
<font color="#E5E5E5">ways one way</font><font color="#CCCCCC"> is if</font><font color="#E5E5E5"> you have to rework</font>

232
00:10:10,000 --> 00:10:14,890
the the solution in different<font color="#E5E5E5"> context</font>

233
00:10:12,970 --> 00:10:16,990
<font color="#CCCCCC">and the other one is reworking the</font>

234
00:10:14,890 --> 00:10:18,339
solution in the same context so for

235
00:10:16,990 --> 00:10:20,560
example if you're exploiting<font color="#E5E5E5"> the same</font>

236
00:10:18,339 --> 00:10:24,519
browser<font color="#E5E5E5"> over and over again can you use</font>

237
00:10:20,560 --> 00:10:25,899
<font color="#E5E5E5">on the same CFG bypass for example for</font>

238
00:10:24,519 --> 00:10:28,199
multiple<font color="#E5E5E5"> exploits and generally the</font>

239
00:10:25,899 --> 00:10:31,510
<font color="#CCCCCC">answer for</font><font color="#E5E5E5"> that is yes</font>

240
00:10:28,199 --> 00:10:33,959
latest aged mitigations generally don't

241
00:10:31,510 --> 00:10:36,579
compromise reliability very much but

242
00:10:33,959 --> 00:10:40,959
what<font color="#E5E5E5"> they do do is</font><font color="#CCCCCC"> create a very high</font>

243
00:10:36,579 --> 00:10:42,910
cost for for gaining<font color="#E5E5E5"> code execution once</font>

244
00:10:40,959 --> 00:10:44,890
you've got<font color="#E5E5E5"> NX and particularly some</font><font color="#CCCCCC"> of</font>

245
00:10:42,910 --> 00:10:46,449
<font color="#E5E5E5">the other things some of</font><font color="#CCCCCC"> the other</font>

246
00:10:44,890 --> 00:10:48,819
things<font color="#E5E5E5"> added</font><font color="#CCCCCC"> to it like</font><font color="#E5E5E5"> CFG or code</font>

247
00:10:46,449 --> 00:10:51,180
signing<font color="#E5E5E5"> suddenly getting unconstrained</font>

248
00:10:48,820 --> 00:10:54,310
kind of code<font color="#E5E5E5"> running is</font><font color="#CCCCCC"> very difficult</font>

249
00:10:51,180 --> 00:10:55,959
the<font color="#E5E5E5"> last thing we have is isolation</font><font color="#CCCCCC"> this</font>

250
00:10:54,310 --> 00:10:57,310
<font color="#E5E5E5">is this is</font><font color="#CCCCCC"> basically where you go</font><font color="#E5E5E5"> okay</font>

251
00:10:55,959 --> 00:10:59,469
<font color="#E5E5E5">we've shipped some software</font><font color="#CCCCCC"> that</font>

252
00:10:57,310 --> 00:11:02,410
probably has bugs<font color="#E5E5E5"> in it and those bugs</font>

253
00:10:59,470 --> 00:11:04,839
<font color="#E5E5E5">can be successfully exploited so what we</font>

254
00:11:02,410 --> 00:11:06,969
want<font color="#E5E5E5"> to do here</font><font color="#CCCCCC"> is create a environment</font>

255
00:11:04,839 --> 00:11:09,250
<font color="#E5E5E5">where the the process that has</font><font color="#CCCCCC"> been</font>

256
00:11:06,970 --> 00:11:12,220
compromised<font color="#E5E5E5"> cannot adversely affect the</font>

257
00:11:09,250 --> 00:11:14,740
other system as the rest<font color="#E5E5E5"> of the system</font>

258
00:11:12,220 --> 00:11:17,280
to install malware<font color="#E5E5E5"> to install cncs or</font>

259
00:11:14,740 --> 00:11:19,750
read sensitive data or<font color="#E5E5E5"> whatever</font>

260
00:11:17,280 --> 00:11:22,270
there's been a number<font color="#CCCCCC"> of technologies</font>

261
00:11:19,750 --> 00:11:24,910
<font color="#CCCCCC">that have come</font><font color="#E5E5E5"> across over the last few</font>

262
00:11:22,270 --> 00:11:28,449
years<font color="#E5E5E5"> and being</font><font color="#CCCCCC"> considered</font><font color="#E5E5E5"> iteratively</font>

263
00:11:24,910 --> 00:11:30,189
approved on improved on<font color="#E5E5E5"> but both most of</font>

264
00:11:28,450 --> 00:11:36,010
those technologies get implemented<font color="#E5E5E5"> into</font>

265
00:11:30,190 --> 00:11:39,540
<font color="#E5E5E5">into sandboxes so that's basically an</font>

266
00:11:36,010 --> 00:11:41,770
overview<font color="#CCCCCC"> of what what mitigations</font><font color="#E5E5E5"> and</font>

267
00:11:39,540 --> 00:11:43,439
technologies are vendors are working on

268
00:11:41,770 --> 00:11:46,270
at the moment<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I wanted</font><font color="#CCCCCC"> to look</font><font color="#E5E5E5"> at</font>

269
00:11:43,440 --> 00:11:49,540
from an attackers perspective<font color="#CCCCCC"> how you go</font>

270
00:11:46,270 --> 00:11:52,569
about<font color="#CCCCCC"> getting around</font><font color="#E5E5E5"> these and what</font><font color="#CCCCCC"> cost</font>

271
00:11:49,540 --> 00:11:53,740
<font color="#E5E5E5">has been produced for you so firstly you</font>

272
00:11:52,570 --> 00:11:56,440
have<font color="#CCCCCC"> to consider</font><font color="#E5E5E5"> what you're trying to</font>

273
00:11:53,740 --> 00:11:58,380
<font color="#CCCCCC">do and so for most exploits basically</font>

274
00:11:56,440 --> 00:12:02,260
they want to do arbitrary code execution

275
00:11:58,380 --> 00:12:04,120
<font color="#E5E5E5">they will</font><font color="#CCCCCC"> leverage</font><font color="#E5E5E5"> some sort of memory</font>

276
00:12:02,260 --> 00:12:05,740
<font color="#E5E5E5">memory access varner ability whether</font>

277
00:12:04,120 --> 00:12:09,270
it's a buffer overflow<font color="#CCCCCC"> use after free</font>

278
00:12:05,740 --> 00:12:12,340
<font color="#E5E5E5">type confusion or whatever and then</font>

279
00:12:09,270 --> 00:12:12,900
basically try<font color="#CCCCCC"> and execute</font><font color="#E5E5E5"> their own code</font>

280
00:12:12,340 --> 00:12:16,630
from that

281
00:12:12,900 --> 00:12:18,550
now each exploit is unique but they

282
00:12:16,630 --> 00:12:21,970
generally<font color="#E5E5E5"> form a follow a pretty</font>

283
00:12:18,550 --> 00:12:23,829
standard template<font color="#CCCCCC"> usually there's early</font>

284
00:12:21,970 --> 00:12:26,890
<font color="#CCCCCC">stage exploitation which is triggered a</font>

285
00:12:23,830 --> 00:12:29,320
bug<font color="#CCCCCC"> late stage exploitation which is</font>

286
00:12:26,890 --> 00:12:31,930
where you want to introduce new code<font color="#E5E5E5"> to</font>

287
00:12:29,320 --> 00:12:34,300
execute<font color="#E5E5E5"> and then post exploitation which</font>

288
00:12:31,930 --> 00:12:37,630
<font color="#E5E5E5">has run that new code and do what up</font>

289
00:12:34,300 --> 00:12:39,490
<font color="#E5E5E5">whatever else you</font><font color="#CCCCCC"> want to do this</font><font color="#E5E5E5"> used</font>

290
00:12:37,630 --> 00:12:41,050
to<font color="#E5E5E5"> be very</font><font color="#CCCCCC"> straightforward when the</font>

291
00:12:39,490 --> 00:12:42,400
standards was like stack overflows

292
00:12:41,050 --> 00:12:45,099
basically you would<font color="#CCCCCC"> just overflow the</font>

293
00:12:42,400 --> 00:12:46,720
stack change an instruction pointer<font color="#E5E5E5"> you</font>

294
00:12:45,100 --> 00:12:48,130
could point it<font color="#E5E5E5"> back at the</font><font color="#CCCCCC"> stacks</font><font color="#E5E5E5"> to</font>

295
00:12:46,720 --> 00:12:50,170
your own data<font color="#E5E5E5"> and because there was no</font>

296
00:12:48,130 --> 00:12:53,020
NX<font color="#E5E5E5"> or anything you could just run your</font>

297
00:12:50,170 --> 00:12:57,939
<font color="#CCCCCC">own code</font><font color="#E5E5E5"> these days</font><font color="#CCCCCC"> though it's a lot</font>

298
00:12:53,020 --> 00:13:01,329
<font color="#E5E5E5">more</font><font color="#CCCCCC"> complicated the cost of developing</font>

299
00:12:57,940 --> 00:13:03,280
expect these exploits has increased

300
00:13:01,330 --> 00:13:06,460
increased quite dramatically when all

301
00:13:03,280 --> 00:13:09,300
these mitigations<font color="#E5E5E5"> are in place and when</font>

302
00:13:06,460 --> 00:13:11,950
they've been matured<font color="#E5E5E5"> a certain amount</font>

303
00:13:09,300 --> 00:13:14,410
<font color="#CCCCCC">bypassing them</font><font color="#E5E5E5"> is often non-trivial and</font>

304
00:13:11,950 --> 00:13:17,020
another very important<font color="#CCCCCC"> thing to</font><font color="#E5E5E5"> note is</font>

305
00:13:14,410 --> 00:13:19,930
that<font color="#E5E5E5"> vendors have got more aggressive</font>

306
00:13:17,020 --> 00:13:21,460
<font color="#E5E5E5">about patching now so you're taking</font>

307
00:13:19,930 --> 00:13:23,469
longer to<font color="#E5E5E5"> write an exploit and it's</font>

308
00:13:21,460 --> 00:13:26,920
<font color="#CCCCCC">useful for</font><font color="#E5E5E5"> less amount of</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> due to</font>

309
00:13:23,470 --> 00:13:28,480
<font color="#CCCCCC">due</font><font color="#E5E5E5"> to patching</font><font color="#CCCCCC"> I would say that</font>

310
00:13:26,920 --> 00:13:30,189
<font color="#CCCCCC">sandboxes that</font><font color="#E5E5E5"> probably had the biggest</font>

311
00:13:28,480 --> 00:13:32,680
<font color="#E5E5E5">effect on development time</font>

312
00:13:30,190 --> 00:13:35,170
by quite<font color="#CCCCCC"> a long way because if you want</font>

313
00:13:32,680 --> 00:13:36,849
to compromise<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system we used to talk</font>

314
00:13:35,170 --> 00:13:38,110
about<font color="#E5E5E5"> writing an exploit to compromise</font>

315
00:13:36,850 --> 00:13:40,410
<font color="#E5E5E5">that system but now we talk about</font>

316
00:13:38,110 --> 00:13:43,480
exploit<font color="#E5E5E5"> chains where you have to</font>

317
00:13:40,410 --> 00:13:49,600
compromise the process then do a sandbox

318
00:13:43,480 --> 00:13:54,420
escape of some kind just<font color="#E5E5E5"> so basically</font>

319
00:13:49,600 --> 00:13:57,250
there's if<font color="#CCCCCC"> you are considering the</font>

320
00:13:54,420 --> 00:13:59,110
<font color="#CCCCCC">calculation for an attacker they have to</font>

321
00:13:57,250 --> 00:14:00,490
consider the amount of<font color="#E5E5E5"> time</font><font color="#CCCCCC"> to discover</font>

322
00:13:59,110 --> 00:14:04,839
<font color="#E5E5E5">the vulnerabilities and the amount of</font>

323
00:14:00,490 --> 00:14:06,279
time to develop the the exploit<font color="#CCCCCC"> like I</font>

324
00:14:04,839 --> 00:14:09,040
said you often need<font color="#CCCCCC"> to find multiple</font>

325
00:14:06,279 --> 00:14:10,750
bugs now<font color="#CCCCCC"> and then once you've done that</font>

326
00:14:09,040 --> 00:14:15,849
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can develop</font><font color="#E5E5E5"> them put them together</font>

327
00:14:10,750 --> 00:14:17,500
and<font color="#E5E5E5"> create a exploit chain discovery</font>

328
00:14:15,850 --> 00:14:19,959
time is very difficult<font color="#CCCCCC"> to quantify</font>

329
00:14:17,500 --> 00:14:21,610
<font color="#E5E5E5">because it's nonlinear sometimes you can</font>

330
00:14:19,959 --> 00:14:25,079
find<font color="#E5E5E5"> something in a day sometimes</font><font color="#CCCCCC"> it can</font>

331
00:14:21,610 --> 00:14:27,100
take<font color="#CCCCCC"> three months I looked at a</font><font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of</font>

332
00:14:25,079 --> 00:14:29,019
presentations when researching<font color="#CCCCCC"> this one</font>

333
00:14:27,100 --> 00:14:31,269
about fuzzing and<font color="#CCCCCC"> the various statistics</font>

334
00:14:29,019 --> 00:14:33,129
that they had for this<font color="#E5E5E5"> and it was</font>

335
00:14:31,269 --> 00:14:36,160
<font color="#E5E5E5">basically all</font><font color="#CCCCCC"> over the</font><font color="#E5E5E5"> maps depending on</font>

336
00:14:33,129 --> 00:14:38,380
what they were fuzzing<font color="#E5E5E5"> how effective how</font>

337
00:14:36,160 --> 00:14:43,060
sophisticated<font color="#CCCCCC"> their setup was and how</font>

338
00:14:38,380 --> 00:14:45,339
long<font color="#CCCCCC"> it took</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> so so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a very</font>

339
00:14:43,060 --> 00:14:46,779
difficult thing<font color="#CCCCCC"> to to estimate and also</font>

340
00:14:45,339 --> 00:14:49,389
it depends<font color="#CCCCCC"> a lot on what software</font><font color="#E5E5E5"> you're</font>

341
00:14:46,779 --> 00:14:50,980
attacking<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> thing you have to</font>

342
00:14:49,389 --> 00:14:53,199
consider<font color="#E5E5E5"> now a lot more</font><font color="#CCCCCC"> than in the past</font>

343
00:14:50,980 --> 00:14:55,660
<font color="#CCCCCC">is whether the bugs you discover are</font>

344
00:14:53,199 --> 00:14:57,430
actually usable so in the past when<font color="#CCCCCC"> you</font>

345
00:14:55,660 --> 00:14:59,769
found memory corruption bug basically

346
00:14:57,430 --> 00:15:02,459
all<font color="#CCCCCC"> of them were usable there was no</font>

347
00:14:59,769 --> 00:15:05,589
real there was<font color="#E5E5E5"> no real hindrance</font><font color="#CCCCCC"> but now</font>

348
00:15:02,459 --> 00:15:07,869
mitigations<font color="#E5E5E5"> might might make a lot</font><font color="#CCCCCC"> of</font>

349
00:15:05,589 --> 00:15:10,089
quite a lot<font color="#E5E5E5"> of these unusable so only</font>

350
00:15:07,870 --> 00:15:12,730
<font color="#E5E5E5">every like fourth or fifth bug might be</font>

351
00:15:10,089 --> 00:15:16,329
<font color="#CCCCCC">useful now as opposed to every</font><font color="#E5E5E5"> every</font>

352
00:15:12,730 --> 00:15:18,040
second bug in the past<font color="#E5E5E5"> I did find this</font>

353
00:15:16,329 --> 00:15:20,410
<font color="#CCCCCC">interesting statistic</font><font color="#E5E5E5"> from a cancer</font>

354
00:15:18,040 --> 00:15:24,160
quest<font color="#E5E5E5"> presentation by Dan Kaminsky and</font>

355
00:15:20,410 --> 00:15:27,189
<font color="#CCCCCC">Adam cicchetti in</font><font color="#E5E5E5"> 2011</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> actually</font>

356
00:15:24,160 --> 00:15:30,100
<font color="#CCCCCC">first</font><font color="#E5E5E5"> the same software using the same</font>

357
00:15:27,189 --> 00:15:32,019
fuzzing<font color="#E5E5E5"> test harness at different</font>

358
00:15:30,100 --> 00:15:35,170
iterations of that<font color="#E5E5E5"> software that was</font>

359
00:15:32,019 --> 00:15:38,259
released<font color="#E5E5E5"> in different years and then</font>

360
00:15:35,170 --> 00:15:40,930
they plotted the amount of exploitable

361
00:15:38,259 --> 00:15:43,340
bugs they found in them<font color="#E5E5E5"> in that software</font>

362
00:15:40,930 --> 00:15:45,439
<font color="#E5E5E5">so</font><font color="#CCCCCC"> you see that as time</font><font color="#E5E5E5"> has</font>

363
00:15:43,340 --> 00:15:47,390
<font color="#E5E5E5">progress but some of the bug</font>

364
00:15:45,440 --> 00:15:50,720
minimization strategies have in fact

365
00:15:47,390 --> 00:15:52,010
been somewhat<font color="#CCCCCC"> successful in in you</font><font color="#E5E5E5"> know</font>

366
00:15:50,720 --> 00:15:53,930
<font color="#E5E5E5">getting rid of some</font><font color="#CCCCCC"> of the more</font>

367
00:15:52,010 --> 00:15:58,189
exploitable bugs in<font color="#E5E5E5"> this software</font>

368
00:15:53,930 --> 00:15:59,900
obviously<font color="#E5E5E5"> obviously</font><font color="#CCCCCC"> are all</font><font color="#E5E5E5"> software</font>

369
00:15:58,190 --> 00:16:01,670
doesn't<font color="#E5E5E5"> have a uniform downward</font>

370
00:15:59,900 --> 00:16:04,250
trajectory like this because they keep

371
00:16:01,670 --> 00:16:08,839
<font color="#CCCCCC">introducing new features but those new</font>

372
00:16:04,250 --> 00:16:10,370
<font color="#E5E5E5">features often</font><font color="#CCCCCC"> have are often a little</font>

373
00:16:08,840 --> 00:16:12,560
<font color="#E5E5E5">bit less at risk than legacy code</font>

374
00:16:10,370 --> 00:16:14,780
because they've<font color="#E5E5E5"> been built with you know</font>

375
00:16:12,560 --> 00:16:17,510
these<font color="#E5E5E5"> ideas</font><font color="#CCCCCC"> that have static analysis</font>

376
00:16:14,780 --> 00:16:21,050
<font color="#E5E5E5">tools and developer education is a lot</font>

377
00:16:17,510 --> 00:16:23,600
better<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is my estimate of</font>

378
00:16:21,050 --> 00:16:25,459
discovery cost of finding

379
00:16:23,600 --> 00:16:28,700
<font color="#E5E5E5">vulnerabilities in the early 2000s</font>

380
00:16:25,460 --> 00:16:30,950
<font color="#E5E5E5">versus now</font><font color="#CCCCCC"> the main thing I would say</font>

381
00:16:28,700 --> 00:16:32,990
about<font color="#CCCCCC"> this is that you'll notice</font><font color="#E5E5E5"> that</font>

382
00:16:30,950 --> 00:16:34,760
we've gone<font color="#E5E5E5"> from basically</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> a week</font>

383
00:16:32,990 --> 00:16:37,870
<font color="#CCCCCC">to</font><font color="#E5E5E5"> find a</font><font color="#CCCCCC"> vulnerabilities before in many</font>

384
00:16:34,760 --> 00:16:41,270
cases<font color="#E5E5E5"> to now like three or four weeks</font>

385
00:16:37,870 --> 00:16:43,490
<font color="#CCCCCC">possibly and</font><font color="#E5E5E5"> if you're looking for major</font>

386
00:16:41,270 --> 00:16:44,630
<font color="#CCCCCC">sort of</font><font color="#E5E5E5"> ulnar abilities in like IAS or</font>

387
00:16:43,490 --> 00:16:47,060
something like<font color="#E5E5E5"> that</font>

388
00:16:44,630 --> 00:16:52,280
they're basically moonshots<font color="#E5E5E5"> in a lot of</font>

389
00:16:47,060 --> 00:16:54,800
cases<font color="#CCCCCC"> also in the past kernel bugs were</font>

390
00:16:52,280 --> 00:17:00,800
not<font color="#E5E5E5"> necessarily required to do a to do a</font>

391
00:16:54,800 --> 00:17:02,689
reasonable<font color="#CCCCCC"> compromise so in</font><font color="#E5E5E5"> addition</font><font color="#CCCCCC"> to</font>

392
00:17:00,800 --> 00:17:05,569
the discovery costs there's the the

393
00:17:02,690 --> 00:17:08,450
development<font color="#CCCCCC"> cost</font><font color="#E5E5E5"> I ran across this which</font>

394
00:17:05,569 --> 00:17:10,429
was a<font color="#E5E5E5"> recent paper released by</font><font color="#CCCCCC"> lily</font><font color="#E5E5E5"> and</font>

395
00:17:08,450 --> 00:17:12,830
<font color="#CCCCCC">Adlon and Andy</font><font color="#E5E5E5"> Bogart for the RAND</font>

396
00:17:10,430 --> 00:17:16,790
Corporation<font color="#E5E5E5"> and they basically talked</font>

397
00:17:12,829 --> 00:17:18,020
about essentially they said developing

398
00:17:16,790 --> 00:17:21,290
an exploit once you've found it<font color="#E5E5E5"> takes</font>

399
00:17:18,020 --> 00:17:24,709
about 22 days<font color="#CCCCCC"> I don't think this is too</font>

400
00:17:21,290 --> 00:17:27,470
too<font color="#CCCCCC"> far off the marks but um</font><font color="#E5E5E5"> their data</font>

401
00:17:24,709 --> 00:17:29,660
<font color="#CCCCCC">collection is quite</font><font color="#E5E5E5"> dubious because they</font>

402
00:17:27,470 --> 00:17:31,940
collected a whole bunch of of<font color="#CCCCCC"> zero-day</font>

403
00:17:29,660 --> 00:17:35,030
and measured the amount<font color="#E5E5E5"> of time to</font>

404
00:17:31,940 --> 00:17:38,540
develop<font color="#E5E5E5"> them but that zero day standard</font>

405
00:17:35,030 --> 00:17:40,820
from 2000 to 2015<font color="#CCCCCC"> so they basically</font>

406
00:17:38,540 --> 00:17:42,500
making<font color="#CCCCCC"> the assumption that everything is</font>

407
00:17:40,820 --> 00:17:46,820
uniform<font color="#E5E5E5"> and nothing has got harder over</font>

408
00:17:42,500 --> 00:17:51,260
<font color="#E5E5E5">time which of</font><font color="#CCCCCC"> course it has</font><font color="#E5E5E5"> so in order</font>

409
00:17:46,820 --> 00:17:53,240
<font color="#E5E5E5">to illustrate what the cost is I figured</font>

410
00:17:51,260 --> 00:17:55,169
we<font color="#E5E5E5"> could do a</font><font color="#CCCCCC"> walk through</font><font color="#E5E5E5"> and see how</font>

411
00:17:53,240 --> 00:17:57,630
basically browser hacking works

412
00:17:55,169 --> 00:18:01,260
that's the most<font color="#E5E5E5"> popular form of</font><font color="#CCCCCC"> memory</font>

413
00:17:57,630 --> 00:18:03,360
corruption<font color="#E5E5E5"> what I'll do is I'll present</font>

414
00:18:01,260 --> 00:18:06,260
<font color="#E5E5E5">different bugs</font><font color="#CCCCCC"> and in incrementally</font>

415
00:18:03,360 --> 00:18:08,760
<font color="#CCCCCC">introduce mitigation</font><font color="#E5E5E5"> and show you how</font>

416
00:18:06,260 --> 00:18:11,429
those mitigations create problems<font color="#E5E5E5"> and</font>

417
00:18:08,760 --> 00:18:14,220
what you have to<font color="#E5E5E5"> do basically</font><font color="#CCCCCC"> in an</font>

418
00:18:11,429 --> 00:18:15,870
exploit<font color="#E5E5E5"> this is only considering</font>

419
00:18:14,220 --> 00:18:17,940
development time so we're assuming that

420
00:18:15,870 --> 00:18:21,268
<font color="#E5E5E5">you've already discovered the bugs and I</font>

421
00:18:17,940 --> 00:18:25,890
this is<font color="#CCCCCC"> the development time for them so</font>

422
00:18:21,269 --> 00:18:27,899
we're going to start<font color="#E5E5E5"> off with a youth</font>

423
00:18:25,890 --> 00:18:31,559
after free in a web<font color="#CCCCCC"> browser from</font><font color="#E5E5E5"> about</font>

424
00:18:27,899 --> 00:18:33,120
2008<font color="#CCCCCC"> bucks then writing an exploit</font>

425
00:18:31,559 --> 00:18:35,340
basically consisted of these three

426
00:18:33,120 --> 00:18:37,500
<font color="#E5E5E5">stages you would trigger a vulnerability</font>

427
00:18:35,340 --> 00:18:39,570
<font color="#CCCCCC">you know corrupt memory or trigger the</font>

428
00:18:37,500 --> 00:18:44,220
use after free you would<font color="#CCCCCC"> seize program</font>

429
00:18:39,570 --> 00:18:45,960
execution this<font color="#E5E5E5"> would depend on exactly</font>

430
00:18:44,220 --> 00:18:48,269
<font color="#CCCCCC">what kind</font><font color="#E5E5E5"> of bug it is to how you do</font>

431
00:18:45,960 --> 00:18:52,049
this<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then run your post exploitation</font>

432
00:18:48,269 --> 00:18:55,019
payload so this is the<font color="#CCCCCC"> aurora bug</font><font color="#E5E5E5"> that</font>

433
00:18:52,049 --> 00:18:57,450
affected<font color="#E5E5E5"> IE 6</font><font color="#CCCCCC"> and 7 and it was written</font>

434
00:18:55,019 --> 00:18:58,409
about 2008<font color="#E5E5E5"> and</font><font color="#CCCCCC"> zeno days</font><font color="#E5E5E5"> over</font><font color="#CCCCCC"> you</font>

435
00:18:57,450 --> 00:19:00,750
actually did a really<font color="#E5E5E5"> good presentation</font>

436
00:18:58,409 --> 00:19:02,460
where he<font color="#E5E5E5"> dissected the vulnerability and</font>

437
00:19:00,750 --> 00:19:05,100
talked<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> exploit that</font><font color="#CCCCCC"> was found</font>

438
00:19:02,460 --> 00:19:06,929
in the<font color="#CCCCCC"> wild but</font><font color="#E5E5E5"> essentially you can see</font>

439
00:19:05,100 --> 00:19:09,779
the<font color="#E5E5E5"> stages there of what they had to do</font>

440
00:19:06,929 --> 00:19:12,320
they they trigger the<font color="#E5E5E5"> bugs by freeing an</font>

441
00:19:09,779 --> 00:19:14,460
object<font color="#CCCCCC"> they</font><font color="#E5E5E5"> basically do a</font><font color="#CCCCCC"> heap spray to</font>

442
00:19:12,320 --> 00:19:16,200
replace that object in<font color="#CCCCCC"> memory with</font>

443
00:19:14,460 --> 00:19:19,110
something that they can control<font color="#E5E5E5"> that</font>

444
00:19:16,200 --> 00:19:21,419
points back<font color="#CCCCCC"> to their own data</font><font color="#E5E5E5"> which has</font>

445
00:19:19,110 --> 00:19:23,340
shellcode placed at the end of it and

446
00:19:21,419 --> 00:19:25,889
then they access the free object which

447
00:19:23,340 --> 00:19:30,899
causes of<font color="#CCCCCC"> the table</font><font color="#E5E5E5"> pointer dereference</font>

448
00:19:25,889 --> 00:19:32,459
<font color="#E5E5E5">and and execute their own code so this</font>

449
00:19:30,899 --> 00:19:33,750
is pretty<font color="#CCCCCC"> straightforward</font><font color="#E5E5E5"> and it</font>

450
00:19:32,460 --> 00:19:37,340
wouldn't<font color="#E5E5E5"> have taken</font><font color="#CCCCCC"> very long to develop</font>

451
00:19:33,750 --> 00:19:40,830
<font color="#CCCCCC">I'm guessing about three to seven</font><font color="#E5E5E5"> days</font>

452
00:19:37,340 --> 00:19:45,570
<font color="#E5E5E5">so let's</font><font color="#CCCCCC"> move forward to 2a 11 and</font>

453
00:19:40,830 --> 00:19:48,658
<font color="#E5E5E5">Windows 8 this</font><font color="#CCCCCC"> is about 2015 a lot of</font>

454
00:19:45,570 --> 00:19:49,399
mitigations have<font color="#CCCCCC"> grown in place in since</font>

455
00:19:48,659 --> 00:19:53,340
87

456
00:19:49,399 --> 00:19:55,918
they added a<font color="#E5E5E5"> ASL more mature</font><font color="#CCCCCC"> ASLR except</font>

457
00:19:53,340 --> 00:19:58,949
now there's control flow guard<font color="#E5E5E5"> stronger</font>

458
00:19:55,919 --> 00:20:03,720
heat mitigations<font color="#CCCCCC"> and we will ignore</font><font color="#E5E5E5"> the</font>

459
00:19:58,950 --> 00:20:06,240
sandbox for now so now this<font color="#CCCCCC"> is more what</font>

460
00:20:03,720 --> 00:20:08,490
a modern exploit<font color="#E5E5E5"> would look like in</font>

461
00:20:06,240 --> 00:20:11,670
<font color="#E5E5E5">terms of the stages of development</font>

462
00:20:08,490 --> 00:20:14,640
you can't just go<font color="#CCCCCC"> from triggering</font><font color="#E5E5E5"> the</font>

463
00:20:11,670 --> 00:20:16,380
<font color="#CCCCCC">bug</font><font color="#E5E5E5"> to you know getting code execution</font>

464
00:20:14,640 --> 00:20:18,930
<font color="#E5E5E5">now there's an extra stage where you</font>

465
00:20:16,380 --> 00:20:20,190
<font color="#CCCCCC">have to bypass</font><font color="#E5E5E5"> a as</font><font color="#CCCCCC"> allowed</font><font color="#E5E5E5"> and</font>

466
00:20:18,930 --> 00:20:23,280
essentially that<font color="#CCCCCC"> means information</font>

467
00:20:20,190 --> 00:20:27,810
<font color="#E5E5E5">leaking information leaking you can</font>

468
00:20:23,280 --> 00:20:29,160
usually do by either<font color="#E5E5E5"> repurposing the</font>

469
00:20:27,810 --> 00:20:31,230
memory corruption vulnerability you

470
00:20:29,160 --> 00:20:33,600
found<font color="#E5E5E5"> or it's</font><font color="#CCCCCC"> possible you'll have to</font>

471
00:20:31,230 --> 00:20:36,120
find a separate memory<font color="#CCCCCC"> info leaking</font><font color="#E5E5E5"> bugs</font>

472
00:20:33,600 --> 00:20:38,790
<font color="#CCCCCC">in order</font><font color="#E5E5E5"> to find the</font><font color="#CCCCCC"> information</font><font color="#E5E5E5"> you</font>

473
00:20:36,120 --> 00:20:40,110
need<font color="#CCCCCC"> to bypass</font><font color="#E5E5E5"> a SLR and remember what</font>

474
00:20:38,790 --> 00:20:42,659
<font color="#E5E5E5">we said about development time we're</font>

475
00:20:40,110 --> 00:20:45,780
finding additional bugs<font color="#E5E5E5"> is potentially</font>

476
00:20:42,660 --> 00:20:47,310
quite<font color="#E5E5E5"> a large overhead the other thing</font>

477
00:20:45,780 --> 00:20:50,940
you'll<font color="#CCCCCC"> notice is</font><font color="#E5E5E5"> that code execution</font>

478
00:20:47,310 --> 00:20:53,610
<font color="#E5E5E5">isn't the two things anymore isn't</font><font color="#CCCCCC"> one</font>

479
00:20:50,940 --> 00:20:55,800
stage<font color="#E5E5E5"> anymore it's two stages because of</font>

480
00:20:53,610 --> 00:21:00,540
<font color="#CCCCCC">NX you can't just execute your own code</font>

481
00:20:55,800 --> 00:21:02,669
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> to basically change the</font><font color="#E5E5E5"> memory</font>

482
00:21:00,540 --> 00:21:05,389
protections of where your data is so

483
00:21:02,670 --> 00:21:08,520
that it's executable and then run it<font color="#CCCCCC"> and</font>

484
00:21:05,390 --> 00:21:12,480
not<font color="#E5E5E5"> only that but once CFG is in place</font>

485
00:21:08,520 --> 00:21:15,740
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> the problem that you can't just</font>

486
00:21:12,480 --> 00:21:19,560
do unconstrained<font color="#E5E5E5"> rot and both of those</font>

487
00:21:15,740 --> 00:21:22,170
can<font color="#CCCCCC"> be quite a quite a large burden to</font>

488
00:21:19,560 --> 00:21:25,500
the exploit developer particularly<font color="#CCCCCC"> Rob's</font>

489
00:21:22,170 --> 00:21:27,630
<font color="#CCCCCC">payload development</font><font color="#E5E5E5"> and then you can run</font>

490
00:21:25,500 --> 00:21:30,120
<font color="#CCCCCC">your post exploitation payload so this</font>

491
00:21:27,630 --> 00:21:32,910
was a<font color="#E5E5E5"> loner ability that core security</font>

492
00:21:30,120 --> 00:21:36,179
exploited for<font color="#CCCCCC"> one of the</font><font color="#E5E5E5"> prone to owns I</font>

493
00:21:32,910 --> 00:21:38,820
think in<font color="#E5E5E5"> 2015</font><font color="#CCCCCC"> and you can</font><font color="#E5E5E5"> basically see</font>

494
00:21:36,180 --> 00:21:42,150
<font color="#CCCCCC">that they took a number</font><font color="#E5E5E5"> of extra steps</font>

495
00:21:38,820 --> 00:21:44,730
<font color="#E5E5E5">in order</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> gain code execution the</font>

496
00:21:42,150 --> 00:21:46,410
things<font color="#E5E5E5"> to to note here is stage two they</font>

497
00:21:44,730 --> 00:21:48,960
actually use an entirely separate

498
00:21:46,410 --> 00:21:51,960
information<font color="#CCCCCC"> leaking</font><font color="#E5E5E5"> bug which is on a</font>

499
00:21:48,960 --> 00:21:56,660
pretty significant<font color="#CCCCCC"> change and</font><font color="#E5E5E5"> step four</font>

500
00:21:51,960 --> 00:21:59,310
<font color="#E5E5E5">they had to bypass CFG and also do rot</font>

501
00:21:56,660 --> 00:22:01,260
at this point in time CFG was actually

502
00:21:59,310 --> 00:22:04,500
<font color="#E5E5E5">very immature so they didn't</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> have</font>

503
00:22:01,260 --> 00:22:06,720
<font color="#E5E5E5">to do very</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> but if you're exploiting</font>

504
00:22:04,500 --> 00:22:09,660
a bug today there<font color="#E5E5E5"> would be a this would</font>

505
00:22:06,720 --> 00:22:11,040
<font color="#E5E5E5">be a significantly more involved process</font>

506
00:22:09,660 --> 00:22:15,810
<font color="#CCCCCC">I think this would take about</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> or</font>

507
00:22:11,040 --> 00:22:18,210
three<font color="#E5E5E5"> weeks</font><font color="#CCCCCC"> so then the thing is though</font>

508
00:22:15,810 --> 00:22:20,010
exploiting I<font color="#E5E5E5"> eleven eleven has a sandbox</font>

509
00:22:18,210 --> 00:22:21,880
<font color="#CCCCCC">so now let's turn</font><font color="#E5E5E5"> that sandbox on and</font>

510
00:22:20,010 --> 00:22:25,060
again we have<font color="#E5E5E5"> to add an</font>

511
00:22:21,880 --> 00:22:27,910
a stage<font color="#E5E5E5"> to exploit development</font><font color="#CCCCCC"> in the</font>

512
00:22:25,060 --> 00:22:30,159
past<font color="#CCCCCC"> we didn't have</font><font color="#E5E5E5"> this stage once you</font>

513
00:22:27,910 --> 00:22:31,720
had code execution you could<font color="#E5E5E5"> basically</font>

514
00:22:30,160 --> 00:22:34,720
steal all the users<font color="#E5E5E5"> data and</font><font color="#CCCCCC"> that kind</font>

515
00:22:31,720 --> 00:22:36,370
of thing<font color="#E5E5E5"> now that's not so easy</font><font color="#CCCCCC"> you</font>

516
00:22:34,720 --> 00:22:38,980
essentially have to<font color="#E5E5E5"> find a second</font>

517
00:22:36,370 --> 00:22:41,560
vulnerability in either the broker<font color="#E5E5E5"> for</font>

518
00:22:38,980 --> 00:22:43,390
the sandbox<font color="#CCCCCC"> or in the kernel or some</font>

519
00:22:41,560 --> 00:22:44,800
system<font color="#E5E5E5"> service you're able that the</font>

520
00:22:43,390 --> 00:22:48,220
sandbox<font color="#CCCCCC"> permits you</font><font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> to</font>

521
00:22:44,800 --> 00:22:49,780
communicate<font color="#E5E5E5"> with and then once you find</font>

522
00:22:48,220 --> 00:22:51,550
that vulnerability<font color="#CCCCCC"> you have to exploit</font>

523
00:22:49,780 --> 00:22:54,399
<font color="#CCCCCC">that vulnerability and basically</font><font color="#E5E5E5"> do</font>

524
00:22:51,550 --> 00:22:56,260
stages one to four but for the other<font color="#E5E5E5"> for</font>

525
00:22:54,400 --> 00:23:00,700
the<font color="#E5E5E5"> other process that</font><font color="#CCCCCC"> you're trying to</font>

526
00:22:56,260 --> 00:23:03,250
<font color="#E5E5E5">exploit</font><font color="#CCCCCC"> so this is the</font><font color="#E5E5E5"> same bug</font><font color="#CCCCCC"> they did</font>

527
00:23:00,700 --> 00:23:06,280
the same things here but<font color="#E5E5E5"> then they have</font>

528
00:23:03,250 --> 00:23:08,560
<font color="#CCCCCC">to</font><font color="#E5E5E5"> essentially do all this over again to</font>

529
00:23:06,280 --> 00:23:10,210
get a kernel code execution

530
00:23:08,560 --> 00:23:13,899
I borrowed someone else's kernel exploit

531
00:23:10,210 --> 00:23:16,330
to put in here but<font color="#E5E5E5"> basically yeah they</font>

532
00:23:13,900 --> 00:23:19,690
had<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> information leaking memory</font>

533
00:23:16,330 --> 00:23:23,980
grooming and then eventually<font color="#E5E5E5"> you know</font>

534
00:23:19,690 --> 00:23:26,680
get system so this is a massive<font color="#CCCCCC"> cost</font><font color="#E5E5E5"> to</font>

535
00:23:23,980 --> 00:23:28,300
the development process<font color="#E5E5E5"> which before I</font>

536
00:23:26,680 --> 00:23:29,680
said took two<font color="#E5E5E5"> to three weeks now</font><font color="#CCCCCC"> this'll</font>

537
00:23:28,300 --> 00:23:32,169
<font color="#CCCCCC">take</font><font color="#E5E5E5"> five to six because I have to do</font>

538
00:23:29,680 --> 00:23:34,540
twice as much<font color="#CCCCCC"> work</font><font color="#E5E5E5"> and incidentally have</font>

539
00:23:32,170 --> 00:23:38,970
to have expertise in two different<font color="#CCCCCC"> areas</font>

540
00:23:34,540 --> 00:23:41,020
<font color="#CCCCCC">of technology so you</font><font color="#E5E5E5"> might think</font><font color="#CCCCCC"> that</font>

541
00:23:38,970 --> 00:23:43,210
mitigations have added to the

542
00:23:41,020 --> 00:23:44,770
development<font color="#CCCCCC"> time but apart from that</font><font color="#E5E5E5"> why</font>

543
00:23:43,210 --> 00:23:48,700
didn't they protect us from this kind<font color="#E5E5E5"> of</font>

544
00:23:44,770 --> 00:23:50,230
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> and but a lot of</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> talked</font>

545
00:23:48,700 --> 00:23:52,480
<font color="#CCCCCC">about that</font><font color="#E5E5E5"> when you see blackhat talks</font>

546
00:23:50,230 --> 00:23:54,430
about you know browser mitigation

547
00:23:52,480 --> 00:23:56,410
<font color="#CCCCCC">bypasses and that kind of thing but</font>

548
00:23:54,430 --> 00:23:59,410
really<font color="#E5E5E5"> browsers are the weakest measure</font>

549
00:23:56,410 --> 00:24:01,780
of mitigation success admittedly<font color="#E5E5E5"> one of</font>

550
00:23:59,410 --> 00:24:04,570
the most prevalent because<font color="#E5E5E5"> it is the</font>

551
00:24:01,780 --> 00:24:06,399
most attacked<font color="#E5E5E5"> thing and there's good</font>

552
00:24:04,570 --> 00:24:08,110
reason<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> the attacker has</font>

553
00:24:06,400 --> 00:24:11,380
favorable conditions they've got a large

554
00:24:08,110 --> 00:24:13,719
attack surface to find bugs in but more

555
00:24:11,380 --> 00:24:15,690
importantly they're able to groom memory

556
00:24:13,720 --> 00:24:18,280
and interact with<font color="#E5E5E5"> the JavaScript engine</font>

557
00:24:15,690 --> 00:24:21,250
and get programmatic feedback which<font color="#CCCCCC"> is</font>

558
00:24:18,280 --> 00:24:23,290
critical for information leaking<font color="#CCCCCC"> and</font>

559
00:24:21,250 --> 00:24:24,610
beyond<font color="#CCCCCC"> that</font><font color="#E5E5E5"> all browsers have</font>

560
00:24:23,290 --> 00:24:26,710
<font color="#E5E5E5">just-in-time</font>

561
00:24:24,610 --> 00:24:29,590
like jet regions of memory<font color="#CCCCCC"> that are</font>

562
00:24:26,710 --> 00:24:32,770
marked executable<font color="#E5E5E5"> to speed up JavaScript</font>

563
00:24:29,590 --> 00:24:34,090
execution<font color="#E5E5E5"> and you abusing various</font>

564
00:24:32,770 --> 00:24:36,490
features<font color="#E5E5E5"> has been</font>

565
00:24:34,090 --> 00:24:39,250
a strategy<font color="#E5E5E5"> for a very long time for</font>

566
00:24:36,490 --> 00:24:43,029
attackers to<font color="#CCCCCC"> basically bypass</font><font color="#E5E5E5"> those CFG</font>

567
00:24:39,250 --> 00:24:44,799
<font color="#E5E5E5">and</font><font color="#CCCCCC"> n X if you consider other use case</font>

568
00:24:43,029 --> 00:24:47,140
<font color="#CCCCCC">of such a server software you'll see</font>

569
00:24:44,799 --> 00:24:51,039
that mitigations have been dramatically

570
00:24:47,140 --> 00:24:52,779
<font color="#E5E5E5">more effective</font><font color="#CCCCCC"> and because the attacker</font>

571
00:24:51,039 --> 00:24:55,658
is basically vastly more constrained in

572
00:24:52,779 --> 00:24:58,210
what they're able to do<font color="#E5E5E5"> so I looked up</font>

573
00:24:55,659 --> 00:25:00,400
you know Microsoft<font color="#E5E5E5"> service software as</font>

574
00:24:58,210 --> 00:25:02,380
an example<font color="#E5E5E5"> of this and there used to</font><font color="#CCCCCC"> be</font>

575
00:25:00,400 --> 00:25:04,090
like tons of exploits coming out<font color="#E5E5E5"> for</font>

576
00:25:02,380 --> 00:25:07,539
Microsoft service software<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the time</font>

577
00:25:04,090 --> 00:25:09,129
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> our PC mssql</font><font color="#E5E5E5"> a bunch of them</font>

578
00:25:07,539 --> 00:25:13,960
got made<font color="#E5E5E5"> into worms as you probably</font>

579
00:25:09,130 --> 00:25:17,049
<font color="#E5E5E5">remember and I also wrote some</font><font color="#CCCCCC"> myself</font><font color="#E5E5E5"> in</font>

580
00:25:13,960 --> 00:25:21,100
my<font color="#E5E5E5"> previous job once</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> SLR</font><font color="#CCCCCC"> in-depth</font>

581
00:25:17,049 --> 00:25:23,799
became maturing in Windows I couldn't

582
00:25:21,100 --> 00:25:27,490
find a single example<font color="#CCCCCC"> of</font><font color="#E5E5E5"> getting</font>

583
00:25:23,799 --> 00:25:29,980
complete code execution of you know a

584
00:25:27,490 --> 00:25:33,100
Microsoft server product not to say they

585
00:25:29,980 --> 00:25:35,289
<font color="#E5E5E5">don't exist</font><font color="#CCCCCC"> if private</font><font color="#E5E5E5"> organizations</font><font color="#CCCCCC"> you</font>

586
00:25:33,100 --> 00:25:39,010
know<font color="#E5E5E5"> are</font><font color="#CCCCCC"> able to find them and exploit</font>

587
00:25:35,289 --> 00:25:40,510
<font color="#E5E5E5">them but basically the cost the</font>

588
00:25:39,010 --> 00:25:44,220
mitigation effectiveness in this

589
00:25:40,510 --> 00:25:44,220
situation is dramatically<font color="#CCCCCC"> better</font>

590
00:25:44,380 --> 00:25:49,000
another example is of course<font color="#E5E5E5"> MMS so you</font>

591
00:25:46,779 --> 00:25:50,919
know<font color="#CCCCCC"> stagefright was a big thing not</font>

592
00:25:49,000 --> 00:25:53,230
long ago and there<font color="#E5E5E5"> was like 30 or 40</font>

593
00:25:50,919 --> 00:25:55,510
remote<font color="#E5E5E5"> CVS and are all reachable from</font>

594
00:25:53,230 --> 00:25:58,120
<font color="#E5E5E5">MMS but did you see a</font><font color="#CCCCCC"> stage-fright worm</font>

595
00:25:55,510 --> 00:26:02,169
no and the answer<font color="#CCCCCC"> is because of ASL ASL</font>

596
00:25:58,120 --> 00:26:04,719
<font color="#CCCCCC">are nnx dramatically compromised</font><font color="#E5E5E5"> the</font>

597
00:26:02,169 --> 00:26:07,120
<font color="#E5E5E5">ability to create exploits for this even</font>

598
00:26:04,720 --> 00:26:09,190
<font color="#E5E5E5">though project</font><font color="#CCCCCC"> 0 who successfully</font>

599
00:26:07,120 --> 00:26:11,199
<font color="#E5E5E5">exploited the state of one of the stage</font>

600
00:26:09,190 --> 00:26:13,480
<font color="#CCCCCC">fights</font><font color="#E5E5E5"> but bug chose to do so by the</font>

601
00:26:11,200 --> 00:26:19,419
<font color="#E5E5E5">browser because it's a drastically</font>

602
00:26:13,480 --> 00:26:22,029
easier<font color="#CCCCCC"> place from where to attack lastly</font>

603
00:26:19,419 --> 00:26:23,559
there's a data point<font color="#CCCCCC"> case in point is</font>

604
00:26:22,029 --> 00:26:26,350
project<font color="#CCCCCC"> 0 offered a prize for this</font>

605
00:26:23,559 --> 00:26:28,600
recently<font color="#CCCCCC"> there $200,000 for anyone who</font>

606
00:26:26,350 --> 00:26:32,080
can produce a fully remote<font color="#CCCCCC"> non</font>

607
00:26:28,600 --> 00:26:33,760
<font color="#CCCCCC">interactive</font><font color="#E5E5E5"> Android pixel chain and you</font>

608
00:26:32,080 --> 00:26:36,129
know<font color="#CCCCCC"> stagefright would qualify for this</font>

609
00:26:33,760 --> 00:26:38,140
<font color="#CCCCCC">you've find a vulnerability</font><font color="#E5E5E5"> in that the</font>

610
00:26:36,130 --> 00:26:41,169
media services now sandbox<font color="#E5E5E5"> so you need a</font>

611
00:26:38,140 --> 00:26:45,760
sandbox escape<font color="#E5E5E5"> but they got not a single</font>

612
00:26:41,169 --> 00:26:47,570
entrance so in aggregate under favorable

613
00:26:45,760 --> 00:26:49,580
<font color="#CCCCCC">conditions</font><font color="#E5E5E5"> reliable remote</font>

614
00:26:47,570 --> 00:26:52,550
it can still be developed<font color="#E5E5E5"> but the amount</font>

615
00:26:49,580 --> 00:26:55,550
of time to develop<font color="#E5E5E5"> them has gone from</font>

616
00:26:52,550 --> 00:26:58,159
<font color="#E5E5E5">you know days to weeks or possibly</font>

617
00:26:55,550 --> 00:26:59,840
months<font color="#CCCCCC"> and under non</font><font color="#E5E5E5"> favorable</font>

618
00:26:58,160 --> 00:27:01,340
conditions such as<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> a</font>

619
00:26:59,840 --> 00:27:03,159
constrained environment<font color="#E5E5E5"> when you're</font>

620
00:27:01,340 --> 00:27:07,280
attacking particular<font color="#E5E5E5"> service software</font>

621
00:27:03,160 --> 00:27:08,810
<font color="#CCCCCC">the the cost for</font><font color="#E5E5E5"> bypassing mitigations</font>

622
00:27:07,280 --> 00:27:11,780
is very high and<font color="#E5E5E5"> sometimes not even</font>

623
00:27:08,810 --> 00:27:14,840
<font color="#CCCCCC">possible I would say the cost of a chain</font>

624
00:27:11,780 --> 00:27:16,820
<font color="#E5E5E5">takes about</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> fourteen weeks but</font>

625
00:27:14,840 --> 00:27:18,320
<font color="#E5E5E5">that's like I said assuming</font><font color="#CCCCCC"> you can't</font>

626
00:27:16,820 --> 00:27:23,030
<font color="#CCCCCC">reuse some of</font><font color="#E5E5E5"> your techniques</font><font color="#CCCCCC"> which</font>

627
00:27:18,320 --> 00:27:24,620
sometimes you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> there's limited data I</font>

628
00:27:23,030 --> 00:27:27,620
found<font color="#E5E5E5"> also to find the fact that</font>

629
00:27:24,620 --> 00:27:29,929
criminals are<font color="#E5E5E5"> struggling to keep up with</font>

630
00:27:27,620 --> 00:27:31,489
these<font color="#E5E5E5"> mitigations as well the most</font>

631
00:27:29,930 --> 00:27:34,340
interesting was from Matt Miller and

632
00:27:31,490 --> 00:27:37,070
Dave<font color="#E5E5E5"> Weston who showed that even</font><font color="#CCCCCC"> though</font>

633
00:27:34,340 --> 00:27:38,899
the<font color="#CCCCCC"> amount of remote bugs being found in</font>

634
00:27:37,070 --> 00:27:41,120
<font color="#CCCCCC">Microsoft products is going up</font><font color="#E5E5E5"> over time</font>

635
00:27:38,900 --> 00:27:42,680
<font color="#E5E5E5">the amount of vulnerabilities they're</font>

636
00:27:41,120 --> 00:27:45,139
finding exploited in the<font color="#E5E5E5"> wild in their</font>

637
00:27:42,680 --> 00:27:47,150
<font color="#E5E5E5">software</font><font color="#CCCCCC"> is on a strict downward</font>

638
00:27:45,140 --> 00:27:49,610
trajectory<font color="#E5E5E5"> and that's ever since about</font>

639
00:27:47,150 --> 00:27:51,920
Windows 8 so that's a sign<font color="#CCCCCC"> I think that</font>

640
00:27:49,610 --> 00:27:53,510
some<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> things are working Qualis</font>

641
00:27:51,920 --> 00:27:55,400
also noticed<font color="#CCCCCC"> that in the wild flash</font>

642
00:27:53,510 --> 00:27:59,030
exploitation has halved in the last year

643
00:27:55,400 --> 00:28:00,680
or so<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that makes sense because flash</font>

644
00:27:59,030 --> 00:28:02,240
has been putting<font color="#E5E5E5"> in a lot of mitigations</font>

645
00:28:00,680 --> 00:28:05,510
<font color="#CCCCCC">and doing a lot more aggressive patching</font>

646
00:28:02,240 --> 00:28:08,230
recently as well so<font color="#E5E5E5"> I wanted to talk</font>

647
00:28:05,510 --> 00:28:11,060
<font color="#CCCCCC">about what I think is the future for</font>

648
00:28:08,230 --> 00:28:12,830
<font color="#CCCCCC">exploitation of these bugs and and</font>

649
00:28:11,060 --> 00:28:14,330
mitigations<font color="#E5E5E5"> but I only have</font><font color="#CCCCCC"> about a</font>

650
00:28:12,830 --> 00:28:16,179
<font color="#E5E5E5">minute left so I'm</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> try and go</font>

651
00:28:14,330 --> 00:28:19,490
as quick as I can

652
00:28:16,180 --> 00:28:21,740
I think exploitable memory corruption

653
00:28:19,490 --> 00:28:23,630
bugs occurring<font color="#CCCCCC"> within a bit creative</font>

654
00:28:21,740 --> 00:28:26,210
<font color="#CCCCCC">software is going to become increasingly</font>

655
00:28:23,630 --> 00:28:27,980
<font color="#E5E5E5">rare I think exploitable bugs will</font><font color="#CCCCCC"> be</font>

656
00:28:26,210 --> 00:28:30,590
the<font color="#E5E5E5"> exception rather than the rule and</font>

657
00:28:27,980 --> 00:28:31,910
this is because software<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

658
00:28:30,590 --> 00:28:34,669
software<font color="#CCCCCC"> is being rewritten in more</font>

659
00:28:31,910 --> 00:28:37,160
typesafe languages<font color="#E5E5E5"> case in</font><font color="#CCCCCC"> point is a</font>

660
00:28:34,670 --> 00:28:39,800
number of JavaScript engines<font color="#E5E5E5"> being</font>

661
00:28:37,160 --> 00:28:40,970
<font color="#CCCCCC">written largely</font><font color="#E5E5E5"> and a fair bit of it is</font>

662
00:28:39,800 --> 00:28:44,810
<font color="#E5E5E5">being written</font><font color="#CCCCCC"> and rewritten</font><font color="#E5E5E5"> in</font>

663
00:28:40,970 --> 00:28:47,870
JavaScript<font color="#E5E5E5"> itself</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> IDE tools are</font>

664
00:28:44,810 --> 00:28:49,700
getting<font color="#CCCCCC"> very sophisticated</font><font color="#E5E5E5"> and these</font>

665
00:28:47,870 --> 00:28:52,209
companies like<font color="#E5E5E5"> Google and</font><font color="#CCCCCC"> Microsoft have</font>

666
00:28:49,700 --> 00:28:55,100
so much money<font color="#E5E5E5"> to throw it fuzzing and</font>

667
00:28:52,210 --> 00:28:56,690
and triaging that they're going<font color="#E5E5E5"> to be</font>

668
00:28:55,100 --> 00:28:59,770
able<font color="#CCCCCC"> to mow down a lot</font><font color="#E5E5E5"> of the bugs</font>

669
00:28:56,690 --> 00:28:59,770
before<font color="#E5E5E5"> they become a real problem</font>

670
00:29:00,320 --> 00:29:05,450
I<font color="#CCCCCC"> where I think we're on</font><font color="#E5E5E5"> the precipice</font>

671
00:29:02,900 --> 00:29:06,830
<font color="#E5E5E5">of a new iteration of mitigations that</font>

672
00:29:05,450 --> 00:29:09,080
<font color="#E5E5E5">are going to be very interesting for</font>

673
00:29:06,830 --> 00:29:12,740
<font color="#E5E5E5">memory corruption</font><font color="#CCCCCC"> there at the moment</font>

674
00:29:09,080 --> 00:29:15,530
<font color="#CCCCCC">severely tending towards later</font>

675
00:29:12,740 --> 00:29:17,690
exploitation stages<font color="#CCCCCC"> where</font><font color="#E5E5E5"> we basically</font>

676
00:29:15,530 --> 00:29:19,760
have<font color="#E5E5E5"> only verified code that has been</font>

677
00:29:17,690 --> 00:29:21,560
<font color="#E5E5E5">cryptographically hashed and verified to</font>

678
00:29:19,760 --> 00:29:23,420
<font color="#CCCCCC">be running</font><font color="#E5E5E5"> on devices and this is the</font>

679
00:29:21,560 --> 00:29:25,450
<font color="#E5E5E5">area</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> in it's a strategy that</font>

680
00:29:23,420 --> 00:29:27,890
<font color="#CCCCCC">was popularized by Apple with iOS</font>

681
00:29:25,450 --> 00:29:29,270
originally with a user<font color="#E5E5E5"> mode code</font><font color="#CCCCCC"> signing</font>

682
00:29:27,890 --> 00:29:31,730
and now with<font color="#CCCCCC"> their kernel touch</font>

683
00:29:29,270 --> 00:29:33,080
<font color="#CCCCCC">protection microsoft has had this kind</font>

684
00:29:31,730 --> 00:29:35,750
<font color="#CCCCCC">of technology</font><font color="#E5E5E5"> for a long</font><font color="#CCCCCC"> time but</font>

685
00:29:33,080 --> 00:29:37,520
<font color="#E5E5E5">they've not really</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> deployed it</font>

686
00:29:35,750 --> 00:29:39,680
on mass in the same way that<font color="#E5E5E5"> iOS has</font>

687
00:29:37,520 --> 00:29:42,560
however<font color="#CCCCCC"> that's about to change with the</font>

688
00:29:39,680 --> 00:29:46,580
<font color="#CCCCCC">creators preview</font><font color="#E5E5E5"> you know they've got</font>

689
00:29:42,560 --> 00:29:50,540
credential guard<font color="#E5E5E5"> and and application</font>

690
00:29:46,580 --> 00:29:52,669
guard<font color="#E5E5E5"> and basically the idea</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> to to</font>

691
00:29:50,540 --> 00:29:55,820
only allow verified code to be loaded

692
00:29:52,670 --> 00:29:57,380
and running and prevent<font color="#E5E5E5"> you know</font>

693
00:29:55,820 --> 00:29:59,389
executable code from being mapped in the

694
00:29:57,380 --> 00:30:02,480
first place

695
00:29:59,390 --> 00:30:02,870
so I think in in light of this kind of

696
00:30:02,480 --> 00:30:05,390
stuff

697
00:30:02,870 --> 00:30:08,169
also<font color="#E5E5E5"> chip hardening is going to be a</font>

698
00:30:05,390 --> 00:30:10,280
thing<font color="#E5E5E5"> so</font><font color="#CCCCCC"> Jeff hardening has already</font>

699
00:30:08,170 --> 00:30:11,300
there's already been some<font color="#CCCCCC"> mitigations</font>

700
00:30:10,280 --> 00:30:13,610
<font color="#E5E5E5">put in place that they're kind of</font>

701
00:30:11,300 --> 00:30:16,730
terrible<font color="#E5E5E5"> at the moment in the future I</font>

702
00:30:13,610 --> 00:30:18,439
<font color="#CCCCCC">think that stuff like</font><font color="#E5E5E5"> our process</font><font color="#CCCCCC"> chip</font>

703
00:30:16,730 --> 00:30:20,120
which<font color="#CCCCCC"> is what edge is doing is going</font><font color="#E5E5E5"> to</font>

704
00:30:18,440 --> 00:30:23,240
<font color="#CCCCCC">be an enormous problem when it's coupled</font>

705
00:30:20,120 --> 00:30:26,689
<font color="#E5E5E5">with when it's coupled</font><font color="#CCCCCC"> with an X and so</font>

706
00:30:23,240 --> 00:30:28,190
forth<font color="#CCCCCC"> so I think it's</font><font color="#E5E5E5"> likely that the</font>

707
00:30:26,690 --> 00:30:30,160
<font color="#CCCCCC">next</font><font color="#E5E5E5"> gen memory exploits are going to be</font>

708
00:30:28,190 --> 00:30:32,090
largely data only<font color="#E5E5E5"> attacks</font><font color="#CCCCCC"> which is</font>

709
00:30:30,160 --> 00:30:34,520
essentially what's already happening<font color="#E5E5E5"> so</font>

710
00:30:32,090 --> 00:30:35,990
kernel mode exploits<font color="#CCCCCC"> instead of getting</font>

711
00:30:34,520 --> 00:30:37,340
code execution in the kernel often

712
00:30:35,990 --> 00:30:39,620
people just modify their token or

713
00:30:37,340 --> 00:30:42,080
whatever and I<font color="#E5E5E5"> think that it's likely</font>

714
00:30:39,620 --> 00:30:44,239
<font color="#CCCCCC">that other you know other types</font><font color="#E5E5E5"> of</font>

715
00:30:42,080 --> 00:30:49,010
memory memory<font color="#E5E5E5"> corruption attacks will</font>

716
00:30:44,240 --> 00:30:50,900
follow<font color="#CCCCCC"> to integrity</font><font color="#E5E5E5"> of data structures I</font>

717
00:30:49,010 --> 00:30:53,240
also think it's going<font color="#CCCCCC"> to be an area of</font>

718
00:30:50,900 --> 00:30:54,800
<font color="#E5E5E5">increasing interest so with heap</font>

719
00:30:53,240 --> 00:30:57,140
mitigations you know they're<font color="#CCCCCC"> very</font>

720
00:30:54,800 --> 00:30:59,300
concerned<font color="#E5E5E5"> with making</font><font color="#CCCCCC"> sure the integrity</font>

721
00:30:57,140 --> 00:31:04,790
of the heap is<font color="#E5E5E5"> okay but there's been not</font>

722
00:30:59,300 --> 00:31:06,530
that<font color="#E5E5E5"> much work to check the you know</font>

723
00:31:04,790 --> 00:31:08,050
check the<font color="#E5E5E5"> integrity of various other</font>

724
00:31:06,530 --> 00:31:10,750
data<font color="#E5E5E5"> structures and</font>

725
00:31:08,050 --> 00:31:13,300
this also is starting to<font color="#E5E5E5"> change with</font>

726
00:31:10,750 --> 00:31:17,590
both<font color="#E5E5E5"> Microsoft and Apple in particularly</font>

727
00:31:13,300 --> 00:31:19,389
internal checking the various<font color="#CCCCCC"> kernel</font>

728
00:31:17,590 --> 00:31:22,149
data structures have not been<font color="#E5E5E5"> modified</font>

729
00:31:19,390 --> 00:31:25,030
in memory and in fact<font color="#E5E5E5"> Microsoft just</font>

730
00:31:22,150 --> 00:31:26,470
announced<font color="#E5E5E5"> with their ATP defender thing</font>

731
00:31:25,030 --> 00:31:28,960
that they're going that it will

732
00:31:26,470 --> 00:31:31,330
continually<font color="#E5E5E5"> scan kernel memory for</font>

733
00:31:28,960 --> 00:31:33,930
things<font color="#E5E5E5"> like when you've turned snap off</font>

734
00:31:31,330 --> 00:31:33,929
or something like that

735
00:31:35,470 --> 00:31:39,790
mitigations are becoming<font color="#CCCCCC"> increasingly</font>

736
00:31:37,420 --> 00:31:42,720
<font color="#E5E5E5">hardware-based I'm I'm basically getting</font>

737
00:31:39,790 --> 00:31:45,399
<font color="#E5E5E5">shoved off the stage by the timer so I</font>

738
00:31:42,720 --> 00:31:49,390
might<font color="#E5E5E5"> just skip the hardware-based</font>

739
00:31:45,400 --> 00:31:50,410
<font color="#CCCCCC">things so someone can you can go back</font>

740
00:31:49,390 --> 00:31:51,880
and<font color="#CCCCCC"> look at my slides if you're</font>

741
00:31:50,410 --> 00:31:54,130
interested but<font color="#E5E5E5"> suffice to</font><font color="#CCCCCC"> say I think</font>

742
00:31:51,880 --> 00:31:57,340
<font color="#E5E5E5">that</font><font color="#CCCCCC"> CPU level bugs with the increased</font>

743
00:31:54,130 --> 00:32:00,010
complexity of our rolling in protections

744
00:31:57,340 --> 00:32:01,510
into<font color="#E5E5E5"> the CPU might be targeted and</font>

745
00:32:00,010 --> 00:32:04,720
<font color="#E5E5E5">exploited and we've started seeing this</font>

746
00:32:01,510 --> 00:32:07,000
in you<font color="#CCCCCC"> know real applications recently</font>

747
00:32:04,720 --> 00:32:09,040
with like<font color="#E5E5E5"> row hammer that</font><font color="#CCCCCC"> mark</font><font color="#E5E5E5"> Seaborn</font>

748
00:32:07,000 --> 00:32:14,500
and however flake did and also<font color="#CCCCCC"> with the</font>

749
00:32:09,040 --> 00:32:17,649
the<font color="#E5E5E5"> recent</font><font color="#CCCCCC"> AMC ale ASLR bypass</font><font color="#E5E5E5"> that was</font>

750
00:32:14,500 --> 00:32:19,870
able<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> triggered</font><font color="#CCCCCC"> from JavaScript and</font>

751
00:32:17,650 --> 00:32:21,970
<font color="#E5E5E5">lastly I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> that isolation</font>

752
00:32:19,870 --> 00:32:23,889
technologies are<font color="#E5E5E5"> currently under</font>

753
00:32:21,970 --> 00:32:26,350
<font color="#CCCCCC">univille utilized I talked about how</font>

754
00:32:23,890 --> 00:32:28,750
much<font color="#E5E5E5"> sandboxes add to the cost of</font>

755
00:32:26,350 --> 00:32:30,909
exploit development but the next

756
00:32:28,750 --> 00:32:33,250
<font color="#E5E5E5">iteration of this is going to be using</font>

757
00:32:30,910 --> 00:32:37,390
<font color="#E5E5E5">hypervisors and secure memory</font><font color="#CCCCCC"> areas</font>

758
00:32:33,250 --> 00:32:39,970
secure processes such as<font color="#CCCCCC"> apple step</font><font color="#E5E5E5"> in a</font>

759
00:32:37,390 --> 00:32:41,830
more a bit<font color="#CCCCCC"> Curtis fashion and this is</font>

760
00:32:39,970 --> 00:32:44,410
going<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Microsoft with creative</font>

761
00:32:41,830 --> 00:32:45,760
previews like I said<font color="#E5E5E5"> introducing</font>

762
00:32:44,410 --> 00:32:47,230
application<font color="#E5E5E5"> Garden credential guard</font>

763
00:32:45,760 --> 00:32:49,600
which basically<font color="#E5E5E5"> runs edge in a</font>

764
00:32:47,230 --> 00:32:52,030
hypervisor it runs<font color="#CCCCCC"> LSA no</font><font color="#E5E5E5"> hypervisor and</font>

765
00:32:49,600 --> 00:32:54,490
so getting to<font color="#E5E5E5"> the rest of the system is</font>

766
00:32:52,030 --> 00:32:56,290
<font color="#E5E5E5">going to require possibly like external</font>

767
00:32:54,490 --> 00:32:58,510
<font color="#E5E5E5">exploit and then a hypervisor escape</font>

768
00:32:56,290 --> 00:33:01,899
which will again dramatically in cost

769
00:32:58,510 --> 00:33:04,510
the the the cost of developing an

770
00:33:01,900 --> 00:33:06,130
exploit chain<font color="#CCCCCC"> I think that full chains</font>

771
00:33:04,510 --> 00:33:08,110
will<font color="#CCCCCC"> be still possible</font><font color="#E5E5E5"> but extremely</font>

772
00:33:06,130 --> 00:33:12,310
<font color="#E5E5E5">high</font><font color="#CCCCCC"> cost</font><font color="#E5E5E5"> compared to what they are</font><font color="#CCCCCC"> now</font>

773
00:33:08,110 --> 00:33:14,290
and it will most likely be unattainable

774
00:33:12,310 --> 00:33:17,470
for organizations to<font color="#CCCCCC"> have all of those</font>

775
00:33:14,290 --> 00:33:20,290
vulnerabilities<font color="#CCCCCC"> worked up and working at</font>

776
00:33:17,470 --> 00:33:23,020
the<font color="#CCCCCC"> same</font><font color="#E5E5E5"> for the same period of time</font>

777
00:33:20,290 --> 00:33:24,780
and as a<font color="#E5E5E5"> result for lengthy</font><font color="#CCCCCC"> periods of</font>

778
00:33:23,020 --> 00:33:27,160
time they'll only be able<font color="#E5E5E5"> to do partial</font>

779
00:33:24,780 --> 00:33:30,879
compromises<font color="#CCCCCC"> I think it will take about</font><font color="#E5E5E5"> a</font>

780
00:33:27,160 --> 00:33:36,760
year's worth of<font color="#E5E5E5"> work</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> create such a</font>

781
00:33:30,880 --> 00:33:38,200
chain so in summary<font color="#CCCCCC"> some people will go</font>

782
00:33:36,760 --> 00:33:40,150
to<font color="#E5E5E5"> the lengths to develop these chains</font>

783
00:33:38,200 --> 00:33:42,820
but<font color="#E5E5E5"> I think attackers are pragmatic and</font>

784
00:33:40,150 --> 00:33:46,240
will basically<font color="#E5E5E5"> go for easier wins</font><font color="#CCCCCC"> stuff</font>

785
00:33:42,820 --> 00:33:48,730
like IOT devices which at the moment<font color="#E5E5E5"> for</font>

786
00:33:46,240 --> 00:33:51,550
the most part<font color="#E5E5E5"> way less protected than</font>

787
00:33:48,730 --> 00:33:55,000
you know your your Windows 10<font color="#E5E5E5"> machine or</font>

788
00:33:51,550 --> 00:33:56,770
your iPhone<font color="#CCCCCC"> and when you do attack</font>

789
00:33:55,000 --> 00:33:59,320
<font color="#CCCCCC">high-security devices I think they'll</font>

790
00:33:56,770 --> 00:34:00,460
yield limited<font color="#CCCCCC"> compromise maybe they</font>

791
00:33:59,320 --> 00:34:02,770
won't be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> break the hypervisor</font>

792
00:34:00,460 --> 00:34:04,720
but they'll get<font color="#E5E5E5"> to</font><font color="#CCCCCC"> kern colonel and</font>

793
00:34:02,770 --> 00:34:06,310
<font color="#E5E5E5">they'll be able to do some you know some</font>

794
00:34:04,720 --> 00:34:07,840
useful things<font color="#CCCCCC"> mabel they'll get access</font>

795
00:34:06,310 --> 00:34:11,469
to some data<font color="#E5E5E5"> or i'll be able to modify</font>

796
00:34:07,840 --> 00:34:14,590
some security settings<font color="#CCCCCC"> so that's all</font>

797
00:34:11,469 --> 00:34:16,419
<font color="#E5E5E5">I've got</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> now so thanks for listening</font>

798
00:34:14,590 --> 00:34:19,959
everyone

799
00:34:16,420 --> 00:34:19,959
[Applause]

