1
00:00:00,000 --> 00:00:05,299
and get this done so I met Tony this is
Nick are we're both consultant mandy is

2
00:00:05,299 --> 00:00:09,639
focusing on its a response so this talk
really comes from a particular

3
00:00:09,639 --> 00:00:16,759
investigation we did last year so does
particularly just particularly demanding

4
00:00:16,760 --> 00:00:19,710
and so we're going to talk about some of
the challenges kind of came from that

5
00:00:19,710 --> 00:00:23,949
too many approaches we took to address
those challenges and some of the lessons

6
00:00:23,949 --> 00:00:29,560
we learned along the way so rather top
couple disclaimers personal the

7
00:00:29,560 --> 00:00:32,159
confidentiality of our clients is
paramount so we've done what we needed

8
00:00:32,159 --> 00:00:36,610
to do to maintain that confidentiality
and secondly you know we're into

9
00:00:36,610 --> 00:00:39,510
response not researchers are
particularly experts in any of these

10
00:00:39,510 --> 00:00:43,280
domains we really focus on knowing
enough about a lot of different tack to

11
00:00:43,280 --> 00:00:47,370
get the job done so there's certainly
could be people here to know more about

12
00:00:47,370 --> 00:00:58,328
some of these specific things that we do
but you know we we focus on the little

13
00:00:58,329 --> 00:01:02,379
blue background here started to a lot of
these things do with phishing email

14
00:01:02,379 --> 00:01:05,850
fairly generic looking at it was
designed to actually look like kind of

15
00:01:05,850 --> 00:01:11,530
commoditized you no nonsense fishing
line investigated but failed their purse

16
00:01:11,530 --> 00:01:16,220
remediation police cope so then be very
determination state attacker was in this

17
00:01:16,220 --> 00:01:21,530
environment decided that they weren't
getting kicked out and really started to

18
00:01:21,530 --> 00:01:23,470
kind of drive on more aggressively

19
00:01:23,470 --> 00:01:28,298
a rampage their daggers mission really
wasn't impacted by any of these ongoing

20
00:01:28,299 --> 00:01:31,880
remediation measures that the attacker
was doing when that the crime was doing

21
00:01:31,880 --> 00:01:36,119
when we arrived on site to to attack a
real objectives here to steal the email

22
00:01:36,119 --> 00:01:40,170
TBI peace and to monitor the security
team in order to keep an eye on what was

23
00:01:40,170 --> 00:01:45,000
being done from a response perspective
so kind of these long-term outcome of

24
00:01:45,000 --> 00:01:48,490
this we had a four-person team on site

25
00:01:48,490 --> 00:01:53,119
the two of us deejay and you know one or
two more people would kind of bounce on

26
00:01:53,119 --> 00:01:56,869
and off we were there for about eight
months all told when longer

27
00:01:56,869 --> 00:01:58,370
investigations we've really been

28
00:01:58,370 --> 00:02:02,030
involved in at the end we had over a
thousand compromised systems similar

29
00:02:02,030 --> 00:02:08,180
number of unique malware samples as well
as unique c2 domains and IP he's fifty

30
00:02:08,180 --> 00:02:11,850
thousand-plus email communication stolen
that we identified but there are

31
00:02:11,850 --> 00:02:15,890
probably a lot more than we did have
evidence including all their scripts and

32
00:02:15,890 --> 00:02:18,589
tools and config files and everything I
went through a sandbox in there were

33
00:02:18,590 --> 00:02:21,570
over seven thousand files in there that
were tagged for this specific

34
00:02:21,570 --> 00:02:26,530
investigation they pull this off it was
really screwed just a fast pace of their

35
00:02:26,530 --> 00:02:31,500
intrusion that the very stealthy tactics
that they used the rapidly changing

36
00:02:31,500 --> 00:02:35,980
tactics as well as the sum of these
never-before-seen advanced techniques

37
00:02:35,980 --> 00:02:39,570
things that we knew about it seemed
research on but I have encountered in

38
00:02:39,570 --> 00:02:43,709
the wild or hadn't seen used to the
extent that this attacker used them so

39
00:02:43,710 --> 00:02:46,340
therefore things really going to be
talking about here in the first of these

40
00:02:46,340 --> 00:02:51,080
challenges are going to address is the
pace of the attacker activity so after

41
00:02:51,080 --> 00:02:53,980
that first failure mediation attempt to
attack started affecting ten or more

42
00:02:53,980 --> 00:02:57,910
systems per day with their main back to
her family especially when they're

43
00:02:57,910 --> 00:03:02,100
provoked the climate system cooling
systems offline just kind of an internal

44
00:03:02,100 --> 00:03:05,470
political thing that we really couldn't
get them to stop doing so they kept

45
00:03:05,470 --> 00:03:08,609
pulling them and then the attacker was
just in fact that many more systems

46
00:03:08,610 --> 00:03:12,540
making sure that they always had access
to continue their mission no matter what

47
00:03:12,540 --> 00:03:15,900
was going on in the environment to
access hundreds of systems for recounted

48
00:03:15,900 --> 00:03:19,570
credential theft they removed tools in
forensic artifacts to hide the activity

49
00:03:19,570 --> 00:03:22,950
which really forced us to move a lot
faster to get to these systems before

50
00:03:22,950 --> 00:03:26,820
they could could remove a lot of the
things they deployed additional back to

51
00:03:26,820 --> 00:03:31,000
our families so even as they were
deploying ten back doors per day their

52
00:03:31,000 --> 00:03:34,250
main family they were deploying convey
stealthy one office or the secondary

53
00:03:34,250 --> 00:03:37,810
families remain really designed to
maintain that deeper level of

54
00:03:37,810 --> 00:03:40,980
persistence and they continue to steal
data every week no matter what the

55
00:03:40,980 --> 00:03:45,850
client did they never interrupted their
data that efforts so what do we do to

56
00:03:45,850 --> 00:03:48,519
try to respond to this will first thing
we had to change with the way that we do

57
00:03:48,519 --> 00:03:52,769
our live response analysis typically
anytime we have compromised system we do

58
00:03:52,769 --> 00:03:55,900
it fairly deep dive forensic analysis is
that system in order to determine

59
00:03:55,900 --> 00:03:59,290
exactly what's happened on it what the
attackers been doing but with the sheer

60
00:03:59,290 --> 00:04:02,690
number of systems in with so many of
them being very similar in the activity

61
00:04:02,690 --> 00:04:05,660
that we identified on them they're
really just wasn't enough time to get

62
00:04:05,660 --> 00:04:08,950
through that level of analysis and all
these systems so we're able to compress

63
00:04:08,950 --> 00:04:11,160
that down into an abbreviated triage

64
00:04:11,160 --> 00:04:13,859
houses which really leverage the
attackers tools techniques and

65
00:04:13,860 --> 00:04:15,220
procedures

66
00:04:15,220 --> 00:04:18,649
the activity that we knew them to be
engaged in to help us to compress that

67
00:04:18,649 --> 00:04:23,419
time frame so to do this we developed
signatures for all of their activity

68
00:04:23,420 --> 00:04:27,520
meaning not just their malware but also
their lateral movement techniques their

69
00:04:27,520 --> 00:04:32,760
secondary tools any kind of printing
artifacts left behind by things that

70
00:04:32,760 --> 00:04:36,270
they were doing some of their cleanup
measures so that by the time you got to

71
00:04:36,270 --> 00:04:40,520
system you have a good idea of what had
happened on there before he even arrived

72
00:04:40,520 --> 00:04:45,810
at it so then you still have to look at
all these systems you're looking for the

73
00:04:45,810 --> 00:04:49,010
lateral movement we weren't able to to
create a lot of good signatures for that

74
00:04:49,010 --> 00:04:51,539
so you really had to still get on there
make sure that you knew where the

75
00:04:51,540 --> 00:04:54,440
attacker was coming from what accounts
were in use all those sorts of key

76
00:04:54,440 --> 00:04:58,640
elements pivoting recon new tools are
back doors really anything that we

77
00:04:58,640 --> 00:05:02,320
haven't seen before any deviation was
really critical to identify because

78
00:05:02,320 --> 00:05:05,430
that's how we're going to do you know
what they're coming out with next 12

79
00:05:05,430 --> 00:05:09,130
back to our family is dropping and take
those indicators back to look at scale

80
00:05:09,130 --> 00:05:13,530
and any sign of data theft because
that's obviously critical to the client

81
00:05:13,530 --> 00:05:16,869
to know exactly what's leaving the
environment we do a streamlined

82
00:05:16,870 --> 00:05:21,090
documentation as much as we typically do
a very deep level forensic analysis we

83
00:05:21,090 --> 00:05:24,109
also have a similar level of
documentation that we provide to the

84
00:05:24,110 --> 00:05:27,100
client fortunately in this instance
there really wasn't possible as those

85
00:05:27,100 --> 00:05:31,540
reports take time to generate and to
write so in this instance were able to

86
00:05:31,540 --> 00:05:35,760
repress this down into these
standardized finding bodies d I was

87
00:05:35,760 --> 00:05:41,680
comfortable West he's really focused on
key aspects off each system our an

88
00:05:41,680 --> 00:05:43,790
attacker tools we identified on the
system

89
00:05:43,790 --> 00:05:47,060
the persistence mechanism used to ensure
that the malware ran across reboots

90
00:05:47,060 --> 00:05:51,030
periods of attacker activity in any
significant time stamps as well as the

91
00:05:51,030 --> 00:05:54,030
source of that if the activity on that
system so that we could make sure that

92
00:05:54,030 --> 00:06:00,369
we had good coverage across and could
kind of treats the advance of the attack

93
00:06:00,370 --> 00:06:04,480
we also documented anything else it
didn't fit into that block new DVDs data

94
00:06:04,480 --> 00:06:08,150
that Beijing like that after this is all
just went into our engagement tracking

95
00:06:08,150 --> 00:06:11,909
spreadsheet with which we shared with
decline so they were able to keep an eye

96
00:06:11,910 --> 00:06:17,240
on how things are going next step is to
leverage the available resources within

97
00:06:17,240 --> 00:06:21,760
the organization so generally when we go
in and do one of these investigations we

98
00:06:21,760 --> 00:06:22,620
really go when we do

99
00:06:22,620 --> 00:06:27,229
all the analysis ourselves in this
particular instance just because we

100
00:06:27,229 --> 00:06:30,479
weren't allowed to bring enough
consultants on site to do all of the

101
00:06:30,479 --> 00:06:33,979
analysis that was in front of us we were
able to leverage some of the client

102
00:06:33,979 --> 00:06:36,710
personnel to do some things that we
generally wouldn't have them do

103
00:06:36,710 --> 00:06:41,520
including assisting with network
monitoring including and analysts as

104
00:06:41,520 --> 00:06:45,799
well as network censors and also to do
that triage now says which I mentioned

105
00:06:45,800 --> 00:06:48,520
so we walked them through a process of
doing this triage analysis and they

106
00:06:48,520 --> 00:06:51,940
would go through and help us get through
these systems and anytime we identified

107
00:06:51,940 --> 00:06:55,190
anything there really was different and
interesting we will try to follow back

108
00:06:55,190 --> 00:06:58,500
on the system's make sure that we're
getting a thorough analysis of them we

109
00:06:58,500 --> 00:07:02,990
also work with the SCCM team to help
find some of the low-hanging fruit of

110
00:07:02,990 --> 00:07:06,780
things that the attacker was doing any
time today's did start to get into a

111
00:07:06,780 --> 00:07:10,960
repetitive pattern where we could use
SCCM to look for it we would because it

112
00:07:10,960 --> 00:07:14,299
helped to ensure that we had maximum
coverage over the environment and was

113
00:07:14,300 --> 00:07:17,539
just another resource to help speed up
the the rate at which we're identifying

114
00:07:17,539 --> 00:07:22,969
these systems we are also worked with
the hips team to create some host

115
00:07:22,970 --> 00:07:29,240
Intrusion Prevention rules on the points
to help with the remediation we never

116
00:07:29,240 --> 00:07:33,270
really expected this to actually stop
the attacker the hope was that if they

117
00:07:33,270 --> 00:07:36,919
did come back and use a lot of GDP
sweetie before it really set off some

118
00:07:36,919 --> 00:07:40,210
alerts and maybe slow them down a little
bit so that we can make a meaningful

119
00:07:40,210 --> 00:07:47,440
defense against him a lesson of this
this whole piece is to be willing to

120
00:07:47,440 --> 00:07:50,389
change the normal practices and
disregard official methodologies when

121
00:07:50,389 --> 00:07:52,990
they're not working you have to be fast
and flex we have to do what you need to

122
00:07:52,990 --> 00:07:55,979
do to get the job done and if the way
that you've been doing it for the way

123
00:07:55,979 --> 00:07:59,169
you supposed to do it gets in the way
you have to be one to disregard that and

124
00:07:59,169 --> 00:08:02,039
to make the most of outside help every
team is always going to have some

125
00:08:02,039 --> 00:08:05,690
constrictions you never going to have
the exact right people that you want or

126
00:08:05,690 --> 00:08:09,130
all the logistical support you might
want to be well under it to reach

127
00:08:09,130 --> 00:08:12,199
outside of your normal team and your
normal processes and see what's out

128
00:08:12,199 --> 00:08:15,699
there that can really help you get the
job done especially when you're doing

129
00:08:15,699 --> 00:08:21,650
something to the scale and two people
are saying the back there's actually a

130
00:08:21,650 --> 00:08:25,609
lot of seats in the front view on its
way better with the slide so it doesn't

131
00:08:25,610 --> 00:08:27,630
bother me so

132
00:08:27,630 --> 00:08:30,909
the next big challenge was just how
stealthy the attacker was there using a

133
00:08:30,910 --> 00:08:34,840
number of counter forensic techniques on
the endpoints and on the network so on

134
00:08:34,840 --> 00:08:37,669
the host they're using things like
secure deletion and really impressive

135
00:08:37,669 --> 00:08:42,380
operational security so they would say
they packed up and moved so they would

136
00:08:42,380 --> 00:08:46,910
every two to three days they would just
esteli their tools and move systems

137
00:08:46,910 --> 00:08:51,390
regardless we have found they were not
and then if all this ninety percent

138
00:08:51,390 --> 00:08:55,100
doctrine that's just what we came up
again to call this where of those 10

139
00:08:55,100 --> 00:08:58,030
systems they had infected with a
particular back to our family they'd

140
00:08:58,030 --> 00:09:01,650
shared nine characteristics and an
attempt to be really do different really

141
00:09:01,650 --> 00:09:06,350
smart idea that way they could test out
some new tactics on that tenth system or

142
00:09:06,350 --> 00:09:11,760
also identify how was there on the
network side they used exclusively so

143
00:09:11,760 --> 00:09:15,020
all those thousand-plus network
indicators these explore exclusively

144
00:09:15,020 --> 00:09:22,840
compromise third party websites also use
social media as c2 so either web sites

145
00:09:22,840 --> 00:09:26,160
like social media sites that they were
using maliciously or legitimate third

146
00:09:26,160 --> 00:09:30,260
party websites out there they compromise
for infrastructure they alter their

147
00:09:30,260 --> 00:09:33,930
communication scheme regularly they had
really strong cryptographic

148
00:09:33,930 --> 00:09:39,540
implementations and they also embraced
as a self so you kind of get all the

149
00:09:39,540 --> 00:09:43,010
odds are magnifying at the odds were
stacked against us we are unable to use

150
00:09:43,010 --> 00:09:48,939
our network censors and in some of the
signatures we had coming into it and

151
00:09:48,940 --> 00:09:52,440
some existing devices were in
consistently deployed and had some

152
00:09:52,440 --> 00:09:58,940
spotty coverage so also the rolling
remediation which is kind of like to see

153
00:09:58,940 --> 00:10:04,320
that a lot we sometimes call a camel
that approach in this particular case

154
00:10:04,320 --> 00:10:07,890
was really showing your hand to the
attacker so again they knew exactly what

155
00:10:07,890 --> 00:10:14,240
was working it wasn't so the first thing
we did on the other end points as we

156
00:10:14,240 --> 00:10:18,200
made the most out of some of these trace
artifacts although the attackers using

157
00:10:18,200 --> 00:10:22,500
esteli right to file past the names and
the content was certainly not

158
00:10:22,500 --> 00:10:26,650
recoverable but we did some other things
on the metadata to help identify

159
00:10:26,650 --> 00:10:31,790
activities so regular expressions to
identify the particular pattern left

160
00:10:31,790 --> 00:10:36,630
right when you run Microsoft
Sysinternals esteli tool and then for

161
00:10:36,630 --> 00:10:40,230
those entries the entry modified
timestamp would typically indicate when

162
00:10:40,230 --> 00:10:40,579
that is

163
00:10:40,579 --> 00:10:43,609
stilleto Kurds and I have a little bit
more information

164
00:10:43,610 --> 00:10:48,339
some of these we've actually doing for a
while but they're good illustration so

165
00:10:48,339 --> 00:10:53,079
anytime you run escalate or actually
anything Sysinternals tools it leaves

166
00:10:53,079 --> 00:10:56,699
you have to accept the end user license
agreement to do it

167
00:10:56,699 --> 00:10:59,799
interactively on the command line stuff
to do it that leaves a nice little

168
00:10:59,799 --> 00:11:04,139
registry entry for each tool so then ok
now we start to have something we can

169
00:11:04,139 --> 00:11:09,389
identify new uses of asleep across the
environment then now he said the file

170
00:11:09,389 --> 00:11:13,309
names were written that that's true and
by that pattern but there's other places

171
00:11:13,309 --> 00:11:16,449
you can actually identify the original
file names for instance when the

172
00:11:16,449 --> 00:11:21,699
attacker was running certain things and
compressing files for instance if there

173
00:11:21,699 --> 00:11:24,628
was prefetch on that system before the
attacker started leading the prefetch

174
00:11:24,629 --> 00:11:31,739
files they access files it would give
you an original filename so on the

175
00:11:31,739 --> 00:11:37,869
network side we we made lemonade on the
network lemons right so we leverage

176
00:11:37,869 --> 00:11:41,879
these client network tools and we
embrace the varying tech and it actually

177
00:11:41,879 --> 00:11:46,790
turned out to be a really interesting
really really good thing here it turns

178
00:11:46,790 --> 00:11:50,209
out that you know the attack would do
the same thing and when it reversed

179
00:11:50,209 --> 00:11:53,919
different appliances you get different
results so I really don't expect a

180
00:11:53,919 --> 00:11:56,939
different result from the attackers
doing the same thing will to patterns

181
00:11:56,939 --> 00:12:01,230
there so we can we begin to take the
time and patience to sort through that

182
00:12:01,230 --> 00:12:06,629
noise so for every newly discovered
compromised system we look on the

183
00:12:06,629 --> 00:12:11,339
network side for all the activity during
that period of compromise and then we

184
00:12:11,339 --> 00:12:16,209
would and we did this kind of blindly in
we didn't really know what devices were

185
00:12:16,209 --> 00:12:18,809
out there just that there was a bunch of
different devices within different

186
00:12:18,809 --> 00:12:23,868
business units of the company so we
searched for all the activity between

187
00:12:23,869 --> 00:12:28,809
sets of infected host so of those 10 per
day we kinda did more analysis between

188
00:12:28,809 --> 00:12:33,969
those and look for anything there was
tons of stuff firing so anytime we found

189
00:12:33,970 --> 00:12:37,660
valuable filters to reduce the
information down we automated that can

190
00:12:37,660 --> 00:12:41,749
develop dashboards so that the incident
response team could focus on more

191
00:12:41,749 --> 00:12:46,459
interesting things as opposed to it
repeating repeating so what does that

192
00:12:46,459 --> 00:12:50,800
look like yours to cut kind of examples
that this particular device that

193
00:12:50,800 --> 00:12:55,839
the attackers behavior was the traffic
was stressing over was undoing device

194
00:12:55,839 --> 00:13:01,540
only capture the first packet analyzer
only really do we pull the first packet

195
00:13:01,540 --> 00:13:07,399
for for validation so one of the things
the attackers doing we give you the

196
00:13:07,399 --> 00:13:11,950
first example one of the things the
attack was doing was using SMB to push

197
00:13:11,950 --> 00:13:16,769
files on the network very common and
they were using UPX packing packing to

198
00:13:16,769 --> 00:13:22,459
put the files around so this security
plans actually had a signature for the

199
00:13:22,459 --> 00:13:27,029
SMB transfer of you P X-files defend
your network like that's a super noisy

200
00:13:27,029 --> 00:13:32,189
signature and it's firing you know
everywhere that's very valid for it but

201
00:13:32,190 --> 00:13:35,050
then we start to extract the fields that
are most interesting to us in this case

202
00:13:35,050 --> 00:13:40,579
in the example here we recreated right
we have the file the file name it was

203
00:13:40,579 --> 00:13:45,599
really great to pull out and create new
objects to create indexes off so in this

204
00:13:45,600 --> 00:13:51,550
case you see you can start to separate
out these RUP expect files an attacker

205
00:13:51,550 --> 00:13:55,810
pushed and the first one is a printer
software so printer software is pretty

206
00:13:55,810 --> 00:14:00,399
commonly pact that would not be that
interesting and then seeing an attacker

207
00:14:00,399 --> 00:14:06,730
push over SMB pushed Adobe armed exe and
pcs Inc that exe UPX pack files to those

208
00:14:06,730 --> 00:14:10,390
locations that that's a little bit
suspicious oK so that's a pretty good

209
00:14:10,390 --> 00:14:15,110
then we started to combine signatures to
the second example requires a little bit

210
00:14:15,110 --> 00:14:19,290
of a quick story so as we were chasing
these guys around we found a couple

211
00:14:19,290 --> 00:14:25,360
systems we will look at it and they got
on it they ran a batch script ran a

212
00:14:25,360 --> 00:14:29,130
scheduled task to execute batch script
there was really nothing else there by

213
00:14:29,130 --> 00:14:32,570
the time we got there they had secured
to the batch script and there is nothing

214
00:14:32,570 --> 00:14:35,790
so we meet I'm lined it we looked for
anything on the system

215
00:14:35,790 --> 00:14:38,550
anytime we're trying to find any other
leads and there wasn't that much we can

216
00:14:38,550 --> 00:14:44,260
identify so we lower the prioritization
there and come back and and look at this

217
00:14:44,260 --> 00:14:48,279
little bit later so enter the network
side as we start to a combined

218
00:14:48,279 --> 00:14:53,480
signatures and look between this
compromise we see you know kind of

219
00:14:53,480 --> 00:14:58,160
interesting thing firing on the London
device this MSRP see suspicious

220
00:14:58,160 --> 00:15:01,640
encryption event so it turns out when
you use the

221
00:15:01,640 --> 00:15:06,670
newer Task Scheduler crips scheduled
task when you do the remote scheduled

222
00:15:06,670 --> 00:15:10,280
task using the Scheduled Tasks tool as
opposed to a lot of a lot of a see the

223
00:15:10,280 --> 00:15:16,740
attackers run to run the name scheduled
tasks so that it is an encrypted packet

224
00:15:16,740 --> 00:15:22,810
that this is firing on this and every
suspicious RPC package so we would

225
00:15:22,810 --> 00:15:25,989
shelter that down it turns out we were
able to identify the UUID associated

226
00:15:25,990 --> 00:15:30,430
with scheduled tasks and so this is all
of a sudden we had some visibility to

227
00:15:30,430 --> 00:15:34,479
the attacker scheduling tasks on the
network side well then we go back we

228
00:15:34,480 --> 00:15:37,880
look between two systems that we knew
the attacker on something else firing

229
00:15:37,880 --> 00:15:42,900
right at the same time and that was SMB
rights to system32 so that's super noisy

230
00:15:42,900 --> 00:15:46,140
as a signature but when combined with
other its it was really interesting it

231
00:15:46,140 --> 00:15:50,280
turns out what the attacker is doing is
they were pushing their files to SMB

232
00:15:50,280 --> 00:15:55,350
they're actually overriding and which
double double time stomping legitimate

233
00:15:55,350 --> 00:16:00,410
Microsoft binary system 32 then they
were dropping a batch script running it

234
00:16:00,410 --> 00:16:04,490
with the Scheduled Tasks tool and they
were taking ownership and so from our

235
00:16:04,490 --> 00:16:09,980
perspective when we responded to it
that's why we couldn't see the timestamp

236
00:16:09,980 --> 00:16:14,030
activity lining up so the key for us
here is that network time is preserved

237
00:16:14,030 --> 00:16:17,020
when the other time stamps can be
trusted does actually way we identified

238
00:16:17,020 --> 00:16:22,510
a different back door for my rights in
addition to make the best of what we had

239
00:16:22,510 --> 00:16:27,500
we we made some some new stuff so we
deployed additional budget friendly open

240
00:16:27,500 --> 00:16:32,920
source tech in this case bro IDs people
aren't using it really recommended we a

241
00:16:32,920 --> 00:16:38,430
lot of us like it we found ways to apply
our methodology to it so we we have an

242
00:16:38,430 --> 00:16:41,199
incident tracker we use we track all the
details of the investigation we found

243
00:16:41,200 --> 00:16:45,990
ways to implement that on the back into
enriched that data and we did things

244
00:16:45,990 --> 00:16:52,160
like a classic mandiant approach is
stacking frequency analysis that's just

245
00:16:52,160 --> 00:16:57,670
fancy speak for counting things so we
just counted stuff but the good things

246
00:16:57,670 --> 00:17:01,689
like a blanket I think it's just another
tools more people are adopting spark

247
00:17:01,690 --> 00:17:05,860
lines recently they allow you to show
another element in this case we chose

248
00:17:05,859 --> 00:17:09,439
time so if you look at what actually
happened here this was toward the end of

249
00:17:09,440 --> 00:17:09,640
the

250
00:17:09,640 --> 00:17:13,730
investigation with high-fidelity network
signature that's actually firing every

251
00:17:13,730 --> 00:17:19,319
time the attacker interacts with the
system so walking up there from host 12

252
00:17:19,319 --> 00:17:25,149
3456 alt 210 the attacker is dropping a
back door there in that order and the

253
00:17:25,150 --> 00:17:30,630
first one just peeking out immediately
assume since then so from our

254
00:17:30,630 --> 00:17:34,730
perspective typically when we're running
endpoint sweeps and we identify attacker

255
00:17:34,730 --> 00:17:38,390
activity we're most interested in the
most recent activity so host n do

256
00:17:38,390 --> 00:17:41,260
nothing else was that that's when the
most recent back tourism sober look at

257
00:17:41,260 --> 00:17:45,420
that first so with this visibility you
see await the attacker actually dropped

258
00:17:45,420 --> 00:17:49,030
doctors in 10 systems and they went back
to the fit system and they were active

259
00:17:49,030 --> 00:17:52,870
on that system and it obviously change
which one that was very difficult very

260
00:17:52,870 --> 00:17:56,780
stealthy we started to catch up and then
we were able to prioritize post analysis

261
00:17:56,780 --> 00:18:03,649
based on the traffic then lastly the
great part year was host 5 you got the

262
00:18:03,650 --> 00:18:06,760
smash-and-grab before they could
escalate their files that's where he

263
00:18:06,760 --> 00:18:09,990
jumped on and grabbed everything out of
the directors we knew they were working

264
00:18:09,990 --> 00:18:13,570
it so thats restarted catch up on their
tools as well

265
00:18:13,570 --> 00:18:19,610
the lesson learned for us here is to add
visibility never stop looking so map but

266
00:18:19,610 --> 00:18:22,800
the attackers doing to all the sources
of evidence you have to make sure you

267
00:18:22,800 --> 00:18:27,620
minimize your blind spots so that
included here giving your team's access

268
00:18:27,620 --> 00:18:30,939
to different tools they might not be
used to people doing so space analysis

269
00:18:30,940 --> 00:18:33,840
giving access to the network site and
vice versa

270
00:18:33,840 --> 00:18:38,209
considered applying additional
technology use that cautiously but if

271
00:18:38,210 --> 00:18:42,160
the if the situation warrants it it can
be great to augment in areas that your

272
00:18:42,160 --> 00:18:47,920
week and then network time just provided
that reliable reconstruction of events

273
00:18:47,920 --> 00:18:55,020
when other things couldn't really stop
network time right and then combat are

274
00:18:55,020 --> 00:18:59,950
fatigued by automating your high
confidence searches what the doctors

275
00:18:59,950 --> 00:19:02,760
found fight to maintain line of sight
that's a good transition into the third

276
00:19:02,760 --> 00:19:08,430
challenge that's just how rapidly the
tactics revolving right so there were

277
00:19:08,430 --> 00:19:14,070
seven distinct backdoor families one our
family went through at least three major

278
00:19:14,070 --> 00:19:17,120
version revisions showed that in a
second attack was also using seven

279
00:19:17,120 --> 00:19:21,360
unique persistence mechanism so seven
different ways to persist reboot

280
00:19:21,360 --> 00:19:25,389
and they were just cycle these
intermittently from our families but

281
00:19:25,390 --> 00:19:29,929
they were register run keys shortcut
persistence is dealing with the power as

282
00:19:29,929 --> 00:19:33,990
a persistent service using WMI which
Matt gonna talk about a minute using

283
00:19:33,990 --> 00:19:38,090
name scheduled task hijacking
pre-existing name scheduled task to

284
00:19:38,090 --> 00:19:42,120
really blended that was pretty tricky
and an overriding the legitimate files I

285
00:19:42,120 --> 00:19:47,199
gave you a few examples of those on the
network siberia if you think about it is

286
00:19:47,200 --> 00:19:51,870
really pretty smart anything that
already has pre-existing persistence in

287
00:19:51,870 --> 00:19:55,059
this case I think I you know to be armed
and pcs Inc in piles like that or just

288
00:19:55,059 --> 00:19:59,799
RunKeeper systems but then the registry
timestamp is obviously not creating new

289
00:19:59,799 --> 00:20:03,830
entries so they overlook them and they
used icons PE resources things that

290
00:20:03,830 --> 00:20:06,460
blended into the actually pretty hard to
find

291
00:20:06,460 --> 00:20:12,370
then also people in InfoSec will share
things like Andy fives file names and

292
00:20:12,370 --> 00:20:16,389
command control and call these
indicators in some cases they they they

293
00:20:16,390 --> 00:20:20,669
that's valid in this case they were
unique to every system so that's not

294
00:20:20,669 --> 00:20:23,540
much of an indicator you're not gonna
really refined it and certainly not

295
00:20:23,540 --> 00:20:26,649
worth having everything on disk and
looking for something that's not be used

296
00:20:26,650 --> 00:20:32,690
again so the attacker also didn't need
to reuse compromised accounts again

297
00:20:32,690 --> 00:20:35,490
think about that for a second one of
things we always track is that they're

298
00:20:35,490 --> 00:20:40,000
probably using these these sets of admin
credentials that their their move around

299
00:20:40,000 --> 00:20:45,260
they didn't have to raise them matching
to talk about exactly why that was right

300
00:20:45,260 --> 00:20:49,270
so I apologize especially to people over
on that side in their little further

301
00:20:49,270 --> 00:20:52,090
back but I want to give a quick example
of what it really looked like about

302
00:20:52,090 --> 00:20:58,000
trying to keep our eyes on the families
as they shifted so I mention I was gonna

303
00:20:58,000 --> 00:21:02,080
show you three version updates that this
went through so all credit to the

304
00:21:02,080 --> 00:21:06,530
attacker here this this is really
impressive this is a reducing it down a

305
00:21:06,530 --> 00:21:11,918
good amount but version 1 this is
actually just the cookie field of one of

306
00:21:11,919 --> 00:21:17,620
the back door families but it used a
static cookie name encoded with a 64

307
00:21:17,620 --> 00:21:24,840
compressed then use ASU's good crypto
implementations again they are hardcoded

308
00:21:24,840 --> 00:21:28,790
into each unique malware samples so you
have to actually recovered on disk and

309
00:21:28,790 --> 00:21:32,240
then you could Dakota but we could
decode it certainly add a signature for

310
00:21:32,240 --> 00:21:32,700
it

311
00:21:32,700 --> 00:21:38,550
and we could could see it across devices
and your version too so we lost our

312
00:21:38,550 --> 00:21:43,139
ability to decode it they dynamically
change the the cookie names they used a

313
00:21:43,140 --> 00:21:48,280
customer base 64 library dictionary ok
fine but within their they actually

314
00:21:48,280 --> 00:21:53,160
implemented are safe or safer and they
did the reason the stream cipher her

315
00:21:53,160 --> 00:21:55,180
sessions the generated per session

316
00:21:55,180 --> 00:22:01,220
our C four keys so yeah I mean we have
to brute force it on our end after we've

317
00:22:01,220 --> 00:22:05,730
recovered the AES key and the
initialization vector so we lost our

318
00:22:05,730 --> 00:22:08,820
ability to decode it meaningfully that
wasn't worth our time

319
00:22:08,820 --> 00:22:14,149
version 3 least that point we could
figure for version 3 they just did

320
00:22:14,150 --> 00:22:18,980
things like they implemented a random
split function right snort cigs is like

321
00:22:18,980 --> 00:22:22,800
okay this is a little bit more noise
that's going to enter their just because

322
00:22:22,800 --> 00:22:28,180
the ability to write something that that
at scale for actual random functions

323
00:22:28,180 --> 00:22:34,530
it's very frustrating even with a bunch
of red X's then least we can still see

324
00:22:34,530 --> 00:22:38,820
it well that's changed they wrapped it
in SL so we lost their ability to see it

325
00:22:38,820 --> 00:22:43,590
now I was just a little bit frustrated
we turned around and looked okay good we

326
00:22:43,590 --> 00:22:47,560
have bro so we get some of the school
data so broad as some really cool stuff

327
00:22:47,560 --> 00:22:52,050
SSL log in a bunch of data from the SSL
session even if you don't know what's

328
00:22:52,050 --> 00:22:56,950
going on inside you look at medidata X
50 X 509 certificate you could see the

329
00:22:56,950 --> 00:23:01,800
certificate email associated with it the
actual cipher and then the big thing

330
00:23:01,800 --> 00:23:05,070
here thats not on there is we're we're
actually able to automatically identify

331
00:23:05,070 --> 00:23:09,110
self signed certificates so what you're
kinda looking at here is a re-creation

332
00:23:09,110 --> 00:23:13,669
again a bunch of a self-signed
certificates then within their you can

333
00:23:13,670 --> 00:23:18,720
filter down on a the attacker wasn't
being thorough maybe and just left the

334
00:23:18,720 --> 00:23:24,370
default email addresses for those and
then using the exact same AES 256 safer

335
00:23:24,370 --> 00:23:28,639
that we knew the back door to you so you
start to catch up in at least at least

336
00:23:28,640 --> 00:23:33,740
there we could see it again we had last
night at the end that they then they

337
00:23:33,740 --> 00:23:37,500
intimately did and didn't use SSL which
was actually even more frustrating

338
00:23:37,500 --> 00:23:42,140
because then he lost what was changing
underneath so it was very difficult to

339
00:23:42,140 --> 00:23:43,810
keep up with

340
00:23:43,810 --> 00:23:49,139
so we touched on this a little bit we
had to prioritize systems with unknown

341
00:23:49,140 --> 00:23:52,820
activity the most interesting systems
were always the one where we knew the

342
00:23:52,820 --> 00:23:56,850
attacker access to it but we didn't know
what they did this was that that one off

343
00:23:56,850 --> 00:24:02,830
stealthy activity so we limited analysis
on systems with known and consistent

344
00:24:02,830 --> 00:24:05,500
attacker tactics there's no way to say i
right

345
00:24:05,500 --> 00:24:09,680
indicators for unknown activity right
you're what we did is we really ought to

346
00:24:09,680 --> 00:24:11,200
me as much as possible looking for

347
00:24:11,200 --> 00:24:15,740
known activity and then everything else
was the focus on so while those things

348
00:24:15,740 --> 00:24:21,820
were useful as stand-alone indicators
defies filenames different different but

349
00:24:21,820 --> 00:24:26,189
the commanding control specifically it
turned out to be very necessary to track

350
00:24:26,190 --> 00:24:30,080
and prioritize because they were
compromising these third party websites

351
00:24:30,080 --> 00:24:33,980
for use as c2 some of them start to
share traits an example i'd give you is

352
00:24:33,980 --> 00:24:39,380
there a particular application that
blood donor websites for using right so

353
00:24:39,380 --> 00:24:43,100
to give you idea how much were making it
up as we go along to stay to stay on

354
00:24:43,100 --> 00:24:46,980
these guys we brought in a bunch of
network six we couldn't find them in

355
00:24:46,980 --> 00:24:50,440
their search for blood in the fully
qualified domain name and we found to

356
00:24:50,440 --> 00:24:57,230
Morsi to channel so it worked but some
other things the more practical things

357
00:24:57,230 --> 00:25:02,070
there's a pseudo-random filename that's
dropped associated with with each see to

358
00:25:02,070 --> 00:25:06,470
channel so as soon as we see that from
an end points we we knew that we re new

359
00:25:06,470 --> 00:25:09,760
the cd4 me wouldn't have to recover the
binary immediately imperative that one

360
00:25:09,760 --> 00:25:15,940
lower we still look at every system we
found little ways to speed up and we

361
00:25:15,940 --> 00:25:18,450
continued the last thing I want to talk
about it we continually improved our

362
00:25:18,450 --> 00:25:21,810
host base indicator so not mention we
had indicators for every stage of the

363
00:25:21,810 --> 00:25:25,310
life cycle so all seven persistence
mechanism we talk about we had things

364
00:25:25,310 --> 00:25:28,490
for the attacker using those in a
particular way the reconnaissance

365
00:25:28,490 --> 00:25:32,920
lateral movement into these are
methodology indicators kind of cord what

366
00:25:32,920 --> 00:25:36,550
we do on our team it at mediator
behavioral indicators if you recall that

367
00:25:36,550 --> 00:25:42,350
so that way we know that the attackers
doing and and regardless of the back

368
00:25:42,350 --> 00:25:49,299
door family they're using then we we the
flare team are are are now we're analyst

369
00:25:49,299 --> 00:25:53,629
did a deep dive did a full analysis of
every backdoor vision and updated the

370
00:25:53,629 --> 00:25:58,389
indicators as needed and we maintain a
list of high confidence indicators to

371
00:25:58,389 --> 00:26:02,639
focus new development this is just to
try to maintain the craziness is the

372
00:26:02,639 --> 00:26:05,330
four of us are going back and forth
coming up with new ways to do things we

373
00:26:05,330 --> 00:26:10,668
need to focus in but little crazy story
that came out of it so I don't list of

374
00:26:10,669 --> 00:26:15,610
the the seven different ways we're
finding one back door family it's we

375
00:26:15,610 --> 00:26:19,629
felt pretty good about it and then one
week later the attacker had changed six

376
00:26:19,629 --> 00:26:23,908
of those who really fighting with one
way so validated our approach and also

377
00:26:23,909 --> 00:26:26,649
made us think a little bit more about
them targeting the incident response

378
00:26:26,649 --> 00:26:32,219
team and everything like that so it was
important to to maintain and know where

379
00:26:32,220 --> 00:26:37,080
you need to develop indicators and
lastly developing these flexible and

380
00:26:37,080 --> 00:26:41,970
resilient indicators focusing on writing
them to get high fidelity matches on how

381
00:26:41,970 --> 00:26:46,669
to pick up on any changes the attacker
may be doing so using things like

382
00:26:46,669 --> 00:26:51,489
imports and exports size ranges section
names compiled times other consistent

383
00:26:51,489 --> 00:26:56,369
attributes you can actually write
indicators for your packaging of tools

384
00:26:56,369 --> 00:27:00,879
to anyone that's done instant response
friends except now analysis instantly

385
00:27:00,879 --> 00:27:06,309
recognize this is a picture of malware
know this is just a week to try to

386
00:27:06,309 --> 00:27:11,070
categorize a bunch of their different
utilities and now where families can use

387
00:27:11,070 --> 00:27:14,830
this layered approach so at its core the
use of scripting language in this case

388
00:27:14,830 --> 00:27:19,710
he skated Python great again
cross-platform easy to quickly update

389
00:27:19,710 --> 00:27:25,149
and change then the draft with a
compiler my installer exe UPS package as

390
00:27:25,149 --> 00:27:29,908
we mentioned before and then push it
over a similar system so for each layer

391
00:27:29,909 --> 00:27:34,999
there right we we sped up as much as
possible indicators to do enterprise

392
00:27:34,999 --> 00:27:42,039
wide string search is a process memory
to find the div skated back door but the

393
00:27:42,039 --> 00:27:46,070
core of our work is really in that
middle area it turns out when used by

394
00:27:46,070 --> 00:27:50,210
installer exe you get a certain set of
import hashes and a certain set of

395
00:27:50,210 --> 00:27:56,279
compiled times and then when combined
with using UPS packing in kind of a

396
00:27:56,279 --> 00:28:00,120
default mode your section names you pics
0 ups one ups to stuff like that

397
00:28:00,120 --> 00:28:04,250
you start to have indicators for this
packaging regardless of what's changed

398
00:28:04,250 --> 00:28:09,380
underneath and we adopted those that
that file system based in Decatur to

399
00:28:09,380 --> 00:28:12,650
look all the other places where we'd
seen it so process handles and

400
00:28:12,650 --> 00:28:17,690
prefetching an event logs and stuff like
that in the last one we also had some

401
00:28:17,690 --> 00:28:21,720
cigs that found their encrypted back
doors before they push them out to new

402
00:28:21,720 --> 00:28:28,620
systems the real lesson with if the
attackers rapidly evolving their tactics

403
00:28:28,620 --> 00:28:33,699
is to find it wants to refine it and
refine it again and continue to work on

404
00:28:33,700 --> 00:28:37,870
it this was a change of mindset for us
to enhance your best indicators we felt

405
00:28:37,870 --> 00:28:41,080
really good about something it was kind
of time to consider may be improving

406
00:28:41,080 --> 00:28:42,409
that even more

407
00:28:42,410 --> 00:28:45,870
these were all like low to no false
positive indicators as well so it's just

408
00:28:45,870 --> 00:28:50,000
continually refining your best ones
track with the attacker can change

409
00:28:50,000 --> 00:28:54,510
before you lose visibility of their
activity as they might and then don't

410
00:28:54,510 --> 00:28:57,770
let that technical data fall through the
cracks even if it's not particularly

411
00:28:57,770 --> 00:29:01,670
valuable seeming as an indicator it's
really important it will be important

412
00:29:01,670 --> 00:29:05,040
for reporting to pull this whole thing
together but it's important for shaping

413
00:29:05,040 --> 00:29:08,950
the direction of the investigation of
prioritizing systems so that back to

414
00:29:08,950 --> 00:29:15,080
match the last chance we can talk about
it some of these advanced attack

415
00:29:15,080 --> 00:29:18,530
techniques they were using so they were
using Windows Management Instrumentation

416
00:29:18,530 --> 00:29:24,139
a administrative framework that
underlies Windows 8 Start back and leg

417
00:29:24,140 --> 00:29:28,520
windows ninety-five it's been around
forever but it seems like all the sudden

418
00:29:28,520 --> 00:29:32,810
people are really start to take more of
an interest in it they used aw my to

419
00:29:32,810 --> 00:29:37,879
persist back doors to embed backdoor
files and PowerShell scripts in the WMI

420
00:29:37,880 --> 00:29:42,290
repository which is a file on disk that
stores all of this w my data so it

421
00:29:42,290 --> 00:29:46,940
allowed them to story these files and
file this way where if you're just doing

422
00:29:46,940 --> 00:29:50,970
standard file system friends you won't
be able to identify these two to steal

423
00:29:50,970 --> 00:29:53,760
credentials from remote systems so
instead of having to use like yes

424
00:29:53,760 --> 00:29:54,330
exactly

425
00:29:54,330 --> 00:29:56,639
scheduled task or something like that
they're able to use this for their

426
00:29:56,640 --> 00:30:02,660
remote code execution Delta configured a
back door to extracting execute months

427
00:30:02,660 --> 00:30:03,600
into the future

428
00:30:03,600 --> 00:30:06,370
the idea being that if we did
remediation successfully removed them

429
00:30:06,370 --> 00:30:10,709
from the environment if we overlook this
very hidden W my back door

430
00:30:10,710 --> 00:30:13,940
a few months later on Optus backdoor out
it would connect down may be right back

431
00:30:13,940 --> 00:30:18,100
in again they also leverage power show
another very powerful administrative

432
00:30:18,100 --> 00:30:23,270
tool used extensively in any modern
Windows domain

433
00:30:23,270 --> 00:30:27,960
really provides a very powerful but
stealthy mechanism for attack especially

434
00:30:27,960 --> 00:30:33,110
in Windows 7 was the PowerShell 2.0 that
comes installed there by default login

435
00:30:33,110 --> 00:30:37,049
just doesn't give you very much so they
use this to execute some of their

436
00:30:37,049 --> 00:30:40,929
stealthy back doors they used it some of
the PowerShell scripts like invoke Mimi

437
00:30:40,929 --> 00:30:45,870
cats to eat he paid antivirus detection
and also has excellent W my immigration

438
00:30:45,870 --> 00:30:49,610
to the use this to actually implement a
lot of the W my attacks and really they

439
00:30:49,610 --> 00:30:52,789
use PowerShell in every stage of their
life cycles really kind of what their

440
00:30:52,789 --> 00:30:56,350
attacks were built around and then
Kerberos the Kerberos authentication

441
00:30:56,350 --> 00:31:00,480
protocols which user authentication any
modern Windows domain they used a lot of

442
00:31:00,480 --> 00:31:03,700
these ticket tax I'm sure a lot of you
are familiar with them they've got a lot

443
00:31:03,700 --> 00:31:06,909
of press but this was the first time
he'd ever seen them using the wild and

444
00:31:06,909 --> 00:31:12,299
they used to improve basically this is
really made their letter moving more

445
00:31:12,299 --> 00:31:17,789
difficult and was very powerful tool for
them so first we talk about this w my

446
00:31:17,789 --> 00:31:24,510
usage so the person we really tackle
here was W my persistence so this is one

447
00:31:24,510 --> 00:31:29,039
of the first time he'd ever encountered
this and it was difficult at first to

448
00:31:29,039 --> 00:31:32,580
look at it it's Kelsey basically started
out looking on a given in point looking

449
00:31:32,580 --> 00:31:35,639
at the strings from the objects to
update a file which is part of that WMI

450
00:31:35,640 --> 00:31:39,100
repository which stores all this data
did actually just pull the strings out

451
00:31:39,100 --> 00:31:44,689
of in look through it for the relevant
strings for this w my persistence that's

452
00:31:44,690 --> 00:31:48,440
obviously that's not scaling it all on
this very time consuming so visually

453
00:31:48,440 --> 00:31:50,890
were able to run some scripts across
environment to parse out this

454
00:31:50,890 --> 00:31:54,890
persistence W my is an administrative
framework so there are ways to create

455
00:31:54,890 --> 00:31:58,330
this is Gail basically what we worked
with the climb was that they ran the

456
00:31:58,330 --> 00:32:02,070
script and it kind of dumped into a file
sharing we will grab against here again

457
00:32:02,070 --> 00:32:05,928
kind of clergy not very effective so
eventually some of our colleagues

458
00:32:05,929 --> 00:32:10,480
developed a custom eroded to allow us to
look for this persistence of scale very

459
00:32:10,480 --> 00:32:14,250
quickly this turned out to be very
valuable we're being

460
00:32:14,250 --> 00:32:19,400
our primary tool that we use for any of
these investigations we also found ways

461
00:32:19,400 --> 00:32:23,950
to identify the attack occurred in the
WMI repository so the attackers using

462
00:32:23,950 --> 00:32:28,340
embedded power power show code in W my
class properties to execute code on

463
00:32:28,340 --> 00:32:32,580
remote system so it's going the way this
works is you can use W my commands to

464
00:32:32,580 --> 00:32:36,949
create a pro a class on a remote system
basically this gives you something to

465
00:32:36,950 --> 00:32:41,010
write into on the remote system in the
repository you can add properties to

466
00:32:41,010 --> 00:32:44,310
that so they created to text properties
they would read the contents of the

467
00:32:44,310 --> 00:32:48,570
invoke me cat script into one of these
properties send a process called create

468
00:32:48,570 --> 00:32:52,480
command which in W my will create a
process with that they send a powershell

469
00:32:52,480 --> 00:32:57,720
stuff which would execute the contents
of that first class property dump the

470
00:32:57,720 --> 00:33:01,580
credentials into the second property
read their the contents of that

471
00:33:01,580 --> 00:33:04,929
credential from remote system back to
their system and then delete that

472
00:33:04,930 --> 00:33:08,680
classroom basically wipe all the
evidence that has ever happened out and

473
00:33:08,680 --> 00:33:12,120
really all you get down on the remote
system from a forensic standpoint is the

474
00:33:12,120 --> 00:33:17,800
initial login so sometimes the attacker
wouldn't believe the class or whether

475
00:33:17,800 --> 00:33:20,600
they implemented this script with
sometimes fails we were able to focus on

476
00:33:20,600 --> 00:33:23,919
some of the classic property names that
they were using and look for that object

477
00:33:23,920 --> 00:33:29,390
data strings and could do that its scale
we also looked it they were actually

478
00:33:29,390 --> 00:33:34,150
embedding plain text code were also able
to identify that we also had to find

479
00:33:34,150 --> 00:33:37,150
ways to parse out some of these embedded
scripting malware the WMI repository

480
00:33:37,150 --> 00:33:42,220
where all the stuff is getting stored is
not the easiest thing to work with it is

481
00:33:42,220 --> 00:33:48,110
not really documented anywhere and it
will actually break up the things that

482
00:33:48,110 --> 00:33:51,490
are embedded in it after a certain size
it it starts chopping it up putting it

483
00:33:51,490 --> 00:33:55,780
all across this file all this is
associated based on some external files

484
00:33:55,780 --> 00:33:59,110
are basically indexes all of this stuff
at the time we don't have any kind of

485
00:33:59,110 --> 00:34:02,229
partner for it so this is basically very
manual process of parsing out the

486
00:34:02,230 --> 00:34:06,190
contents of this file and trying to
piece all this back together this work

487
00:34:06,190 --> 00:34:09,760
pretty well when they were doing this
with plain text code or with binaries

488
00:34:09,760 --> 00:34:12,700
but the challenge really came when they
start doing this with

489
00:34:12,699 --> 00:34:17,638
adding a layer of encryption on top of
it so they would actually create a

490
00:34:17,639 --> 00:34:22,899
persistent PowerShell step which would
extract decrypt and execute this this

491
00:34:22,899 --> 00:34:26,328
backdoor on the system memory very
stealthy but also kind of a pain because

492
00:34:26,329 --> 00:34:29,149
if you're trying to parse this out if
you don't get all of the pieces don't

493
00:34:29,149 --> 00:34:32,868
get them into the exact right order want
to correct so we had some luck doing

494
00:34:32,869 --> 00:34:36,760
this just manually piecing this stuff
together there's one file that I haven't

495
00:34:36,760 --> 00:34:43,629
been able to get yet but I'm gonna get
it thankfully my way through the

496
00:34:43,629 --> 00:34:49,060
investigation we actually did start to
get some parsers coming in so really mad

497
00:34:49,060 --> 00:34:53,750
and cloudy oh we're very helpful in
developing some new tools for this as

498
00:34:53,750 --> 00:34:58,750
well as actually reversing the entire W
my repository so now really actually has

499
00:34:58,750 --> 00:35:03,050
on his public get a full partner for the
WMI repository so if you run into this

500
00:35:03,050 --> 00:35:03,950
in the future

501
00:35:03,950 --> 00:35:08,040
install his handy Python modules and
then you should be able to parse out all

502
00:35:08,040 --> 00:35:10,640
of those files anything else that you
want to have that repository which

503
00:35:10,640 --> 00:35:15,920
there's some good friends of data in
there as well this is an example of what

504
00:35:15,920 --> 00:35:19,420
that persistence would look like we're
parsing out of the strings at the top of

505
00:35:19,420 --> 00:35:22,210
the event filter this actually
determines when the persistence will

506
00:35:22,210 --> 00:35:25,530
execute in this instance it will run on
certain days of the week at a

507
00:35:25,530 --> 00:35:31,359
predetermined time basically using what
looks like a sequel very then you have

508
00:35:31,359 --> 00:35:34,609
at the bottom of the command line even
consumer this would represent an

509
00:35:34,609 --> 00:35:38,900
instance where they are actually using
one of these PowerShell stubs to extract

510
00:35:38,900 --> 00:35:43,010
and decrypted execute an embedded back
door and then you have the filter to

511
00:35:43,010 --> 00:35:48,369
consumer buying shares the two things up

512
00:35:48,369 --> 00:35:53,010
talk about is PowerShell so I shall 2.0
which ships with Windows seven server

513
00:35:53,010 --> 00:35:56,680
2008 really doesn't have any effective
load unit there's enough there to know

514
00:35:56,680 --> 00:36:00,098
that PowerShell executed but really no
idea of what actually happened on the

515
00:36:00,099 --> 00:36:05,130
end point frankly they've been doing a
lot to prove that PowerShell 4.0 has

516
00:36:05,130 --> 00:36:09,069
some improvements in it especially for
Windows 8.1 + but in this instance was

517
00:36:09,069 --> 00:36:13,210
mostly Windows seven but we were able to
enable module logging look for

518
00:36:13,210 --> 00:36:15,109
PowerShell 5 to come out this lot better
log

519
00:36:15,109 --> 00:36:20,230
so but we were able to get this deployed
across the environment and this

520
00:36:20,230 --> 00:36:23,640
basically recorded a lot of the attacker
activity including input and output

521
00:36:23,640 --> 00:36:27,868
variable initialization entire functions
out of the PowerShell scripts that they

522
00:36:27,869 --> 00:36:31,640
were executing some of the attacker
command script output this really

523
00:36:31,640 --> 00:36:36,288
allowed us to see at scale what the
attacker was doing it was all but a

524
00:36:36,289 --> 00:36:39,690
transcript of what actual commander
running what what the content of their

525
00:36:39,690 --> 00:36:43,140
scripts was just really enabled us to
get a kind of unprecedented visibility

526
00:36:43,140 --> 00:36:44,519
into what they were doing

527
00:36:44,519 --> 00:36:48,919
given that you know they were using this
otherwise very stealthy to all along

528
00:36:48,920 --> 00:36:51,440
with that we were able to read
indicators to actually observe this

529
00:36:51,440 --> 00:36:56,009
activity scale so we were able to
capture lateral movement unique back

530
00:36:56,009 --> 00:37:01,900
doors credential theft data theft
reconnaissance persistent persistence

531
00:37:01,900 --> 00:37:05,420
creation really every aspect of their
attacks use PowerShell so in this

532
00:37:05,420 --> 00:37:10,140
recording were really able to write very
effective indicators to not only observe

533
00:37:10,140 --> 00:37:13,960
what they were doing but also to find
her activity at scale a great example of

534
00:37:13,960 --> 00:37:17,680
how valuable this was was indicated that
they were using a powershell script

535
00:37:17,680 --> 00:37:22,910
along with a legitimate Microsoft
Exchange DLL casually dump the email

536
00:37:22,910 --> 00:37:26,420
from a trip from Exchange servers onto
whatever local system may happen to be

537
00:37:26,420 --> 00:37:30,859
on and when they would do that this trip
would write these files out to the to

538
00:37:30,859 --> 00:37:35,499
the file system like these HTML files
and the logs actually record the name of

539
00:37:35,499 --> 00:37:38,910
all of these files which also correspond
to the names of the emails they were

540
00:37:38,910 --> 00:37:42,618
stealing we also get the name of the
account that there was taking email

541
00:37:42,619 --> 00:37:46,539
strong as well as the name of the admin
account to reusing to dump them so we

542
00:37:46,539 --> 00:37:49,420
basically got full visibility into all
of their data theft once were able to

543
00:37:49,420 --> 00:37:53,829
get this logging out there and could
just then handed over to decline to

544
00:37:53,829 --> 00:37:57,109
really kind of point of this is that
we're able to turn PowerShell from a

545
00:37:57,109 --> 00:38:03,970
threat to benefit it went from being a
very stealthy very powerful tool and is

546
00:38:03,970 --> 00:38:07,098
something that really allowed us to
identify their activities going really

547
00:38:07,099 --> 00:38:08,930
know exactly what they were doing

548
00:38:08,930 --> 00:38:12,290
have really don't think that we would
have been successful in remediating this

549
00:38:12,290 --> 00:38:15,970
we hadn't been able to get this login
deployed their environment

550
00:38:15,970 --> 00:38:19,540
this is a great example of what you'll
see in these PowerShell are specifically

551
00:38:19,540 --> 00:38:24,119
the module logging sec at the top is lot
of different metadata including that is

552
00:38:24,119 --> 00:38:28,359
to command passing this Casey windows
temp died three WS one that actually

553
00:38:28,359 --> 00:38:32,650
turned out to be invoked me that script
so then you see down there you can

554
00:38:32,650 --> 00:38:35,980
actually see the output from many cats
the header

555
00:38:35,980 --> 00:38:40,450
you're familiar with that and then blow
they can actually see the exact amanda

556
00:38:40,450 --> 00:38:44,759
was being run which is the Kerberos past
the ticket attack with one day care B

557
00:38:44,760 --> 00:38:47,990
which would be one of their forged
Kerberos tickets

558
00:38:47,990 --> 00:38:53,549
the characteristics of cats by down
there and that kind of brings us to our

559
00:38:53,550 --> 00:39:00,410
next thing which is the Kerberos ticket
tax so you must provide them a lot of

560
00:39:00,410 --> 00:39:05,220
capability in doing there to tax so
first off it allowed them to use

561
00:39:05,220 --> 00:39:11,058
arbitrary account names and privilege
levels for their log on so you can

562
00:39:11,059 --> 00:39:14,609
really specified basically anytime
anyone in this case with the attacker

563
00:39:14,609 --> 00:39:17,470
did was to enumerate all of the
unpublished accounts in Active Directory

564
00:39:17,470 --> 00:39:21,980
and then randomly pick accounts out and
then used that account name to

565
00:39:21,980 --> 00:39:25,099
authenticate to the remote system giving
themselves administrator privileges on

566
00:39:25,099 --> 00:39:29,430
it harder to identified scale given that
on every system they would be using a

567
00:39:29,430 --> 00:39:33,200
different account and especially in an
environment is largest with I'm not even

568
00:39:33,200 --> 00:39:37,790
sure how many users over $100,000 very
difficult to try to narrow that down

569
00:39:37,790 --> 00:39:41,460
compared to you know looking for
administrator accounts where maybe you

570
00:39:41,460 --> 00:39:47,040
know they have even have a hundred or a
few hundred it's manageable there's also

571
00:39:47,040 --> 00:39:52,540
had the benefit of not providing the
typical event you'd expect to see when

572
00:39:52,540 --> 00:39:57,058
someone logs onto a remote system so the
schedule I would typically recorded that

573
00:39:57,059 --> 00:40:00,400
in this instance because of the way the
attack worked it didn't let me tracking

574
00:40:00,400 --> 00:40:03,349
lateral movement much more difficult to
get tell where an attacker came from

575
00:40:03,349 --> 00:40:07,770
we're never able to tell where they were
going to from a given system so to

576
00:40:07,770 --> 00:40:10,730
respond to this basically had to work
around these Kerberos attacks at the

577
00:40:10,730 --> 00:40:15,910
outset so we swept through that invoke
many cats pasady usage like you just saw

578
00:40:15,910 --> 00:40:19,299
that allowed us to identify pivot
systems at least know

579
00:40:19,300 --> 00:40:23,970
kind of rather appealing from other
indicators of lateral movement we had

580
00:40:23,970 --> 00:40:26,669
pretty good indicators for their
scheduled tasks for a lot of the other

581
00:40:26,670 --> 00:40:30,330
things that they were doing and that
allowed us to identify those two dozen

582
00:40:30,330 --> 00:40:33,610
nations systems and then that's cool we
will go on to analyzing we would look

583
00:40:33,610 --> 00:40:37,750
for those Kerberos logons around the
time of the attack activity thankfully

584
00:40:37,750 --> 00:40:39,300
towards the end of the investigation

585
00:40:39,300 --> 00:40:43,420
John Metcalfe over 80 security dot org
was doing some really good research

586
00:40:43,420 --> 00:40:47,430
about these taken attacks in that kind
of what the forensic evidence was left

587
00:40:47,430 --> 00:40:51,040
behind to be able to use some of that
research to develop some indicators we

588
00:40:51,040 --> 00:40:55,529
could use to sweep it scale we weren't
really able to use these two to great

589
00:40:55,530 --> 00:40:58,390
effect in the investigation just because
it was so late but we've been able to

590
00:40:58,390 --> 00:41:03,560
bring those into future investigations
in and they have really been crucial

591
00:41:03,560 --> 00:41:09,080
they are extremely hot hospitality and
and very useful for a couple of examples

592
00:41:09,080 --> 00:41:15,390
of things you might look for for that in
2007 the 4624 log on again if the FQDN

593
00:41:15,390 --> 00:41:19,009
occurs in the account domain that's
probably malicious I think there's some

594
00:41:19,010 --> 00:41:23,070
educators about red cross domain logons
or something like that happens but it's

595
00:41:23,070 --> 00:41:28,330
not going to be there also in the
privilege log on and the log off against

596
00:41:28,330 --> 00:41:31,759
the empty account domain there's really
no use case in which you should have an

597
00:41:31,760 --> 00:41:36,890
account you may not like enterprise
Windows domain now I know that the

598
00:41:36,890 --> 00:41:40,240
authors have gone through and patch some
of these things and they definitely

599
00:41:40,240 --> 00:41:44,169
passed yet cutie in and also Windows
change the way that the record log on

600
00:41:44,170 --> 00:41:48,790
events in Windows 10 so that FQDN will
false positive on every Windows 10

601
00:41:48,790 --> 00:41:53,320
system so not quite as good as it used
to be but I haven't done research yet on

602
00:41:53,320 --> 00:41:58,360
whether they patched the Gympie account
domains but as far as I know those does

603
00:41:58,360 --> 00:42:03,120
should still be good indicators January

604
00:42:03,120 --> 00:42:07,240
well it's dead

605
00:42:07,240 --> 00:42:14,379
the key to this is your tech restraints
against them you know any of these like

606
00:42:14,380 --> 00:42:20,350
really interesting high-tech attacks
make for very good indicators if if

607
00:42:20,350 --> 00:42:24,860
things are being used legitimately like
W my we look for W my persistence

608
00:42:24,860 --> 00:42:28,630
there's only one false positive I've
ever seen and it's this Dell tool for

609
00:42:28,630 --> 00:42:32,610
like stolen laptops or something it's
very easy to filter out these false

610
00:42:32,610 --> 00:42:37,000
positives win we really nobody else is
using it you know you can kind of walk

611
00:42:37,000 --> 00:42:41,040
through the the typical indicator
development cycle they're like identify

612
00:42:41,040 --> 00:42:44,770
the activity developer indicators
increase your visibility at scale this

613
00:42:44,770 --> 00:42:47,800
is this is key especially for things
like how shall I I can't recommend

614
00:42:47,800 --> 00:42:51,680
enough that every organization needs to
have our show logging enabled in their

615
00:42:51,680 --> 00:42:52,609
environment

616
00:42:52,610 --> 00:42:56,130
this is something I've been preaching a
lot automate the detection wherever

617
00:42:56,130 --> 00:42:59,020
possible and if you can create an
alerting system all the better to that

618
00:42:59,020 --> 00:43:03,930
will really help you stay on top of your
your attackers if you've learned nothing

619
00:43:03,930 --> 00:43:08,529
else from this the kind of key takeaways
you have to meet or exceed attackers

620
00:43:08,530 --> 00:43:13,400
pace their visibility the development
cycle and their dance techniques you

621
00:43:13,400 --> 00:43:15,790
really just have to match their
intensity because the attacker always

622
00:43:15,790 --> 00:43:18,790
has the advantage you have to be willing
to do whatever it takes to keep up with

623
00:43:18,790 --> 00:43:25,109
them in order to ultimately be
successful and with that will take

624
00:43:25,109 --> 00:44:07,029
questions

625
00:44:07,030 --> 00:44:17,650
because it does create a lot of loving
with a sharp-eyed there's actually some

626
00:44:17,650 --> 00:44:21,110
flexibility there C everett script block
logging will actually record every block

627
00:44:21,110 --> 00:44:23,920
of script that comes in which is great
cuz it'll actually be obfuscated

628
00:44:23,920 --> 00:44:28,080
everything forties so even if they do
have things like obfuscating up during

629
00:44:28,080 --> 00:44:31,960
those logs it will get ultimately back
to plain text and see you can read

630
00:44:31,960 --> 00:44:35,740
indicators against a different things
that we're going to try to get some

631
00:44:35,740 --> 00:44:40,270
guidance out from many as far as like
what we recommend for PowerShell logs it

632
00:44:40,270 --> 00:44:44,800
does create a module ugly does create a
lot of logs can create up to a megabyte

633
00:44:44,800 --> 00:44:48,750
a minute of logs during on the attacker
activity but that's a matter of even if

634
00:44:48,750 --> 00:44:51,540
you're not integrating that into your
sim which I would definitely not

635
00:44:51,540 --> 00:44:55,340
recommend anyone integrate that into
their sim at least having on the

636
00:44:55,340 --> 00:44:59,750
endpoint provides a date a resource that
if you have a disability and if you

637
00:44:59,750 --> 00:45:03,620
don't have employees visibility will
bring to you said that way at least the

638
00:45:03,620 --> 00:45:07,600
data is there for you to use and it's
kind of a good preparation for an

639
00:45:07,600 --> 00:45:32,200
incident by personnel yeah

640
00:45:32,200 --> 00:45:40,930
we don't typically involve the client
teams that's good that's not entirely

641
00:45:40,930 --> 00:45:46,660
true just not normally to the skills so
as a learning opportunity always were

642
00:45:46,660 --> 00:45:51,450
very hands-on will work with the team
show them everything that we're doing we

643
00:45:51,450 --> 00:45:55,779
can we really referring to there is
typically when we say you own this these

644
00:45:55,780 --> 00:46:00,820
five systems of the tentative been
compromised this day I mean it's pretty

645
00:46:00,820 --> 00:46:04,970
unheard of for us to not have actually
done it there's legal ramifications for

646
00:46:04,970 --> 00:46:08,910
that if we're the hired its response
company and the symptom challenges there

647
00:46:08,910 --> 00:46:12,670
but this meant fully kind about
outsourcing because we change the

648
00:46:12,670 --> 00:46:16,030
reporting model it allowed it to those
little triage text blocks whereas

649
00:46:16,030 --> 00:46:18,650
normally there's a kind of a forensic
report and some requirements on

650
00:46:18,650 --> 00:46:22,200
reporting it's more about what how we
expected to come back but we're really

651
00:46:22,200 --> 00:46:26,899
big on involving people that's a great
qualification it's not as if we come in

652
00:46:26,900 --> 00:46:30,930
blind to the security team of things to
pack up and leave and you know we try to

653
00:46:30,930 --> 00:46:42,919
make sure we get something from its
great comment

654
00:46:42,920 --> 00:46:46,290
yeah we can see the questions about the
preventive landscape things that the

655
00:46:46,290 --> 00:46:51,270
client wasn't doing that they were doing
later and that actually has the amount

656
00:46:51,270 --> 00:46:55,759
of mitigating steps needed were
definitely be part of the timeline right

657
00:46:55,760 --> 00:46:58,990
we had to make sure we stayed on them
all the way up to when we were ready to

658
00:46:58,990 --> 00:47:03,129
do the proper remediation is why
wouldn't lose track but I do want to say

659
00:47:03,130 --> 00:47:06,530
you're saying the things the client
wasn't doing something we we forgot to

660
00:47:06,530 --> 00:47:10,930
say that this particular client team to
this was one of the best in the industry

661
00:47:10,930 --> 00:47:15,790
they're very good team so there wasn't
as if there was any negligence and a lot

662
00:47:15,790 --> 00:47:21,190
of not being done I don't have any
particular additional things that they

663
00:47:21,190 --> 00:47:22,390
they really cold out

664
00:47:22,390 --> 00:47:27,520
yeah I mean just really properly scoping
it and doing everything at the right

665
00:47:27,520 --> 00:47:31,490
time in order to do things like the
Kerberos to get training ticket double

666
00:47:31,490 --> 00:47:34,890
reset like across all the domain
controllers making sure that that's

667
00:47:34,890 --> 00:47:38,190
completely useless if you are not
properly scope to the attacker still

668
00:47:38,190 --> 00:47:42,170
there that will grabbing continue but we
can talk about maybe some of the things

669
00:47:42,170 --> 00:48:01,150
they did

670
00:48:01,150 --> 00:48:08,779
as we said we were used to you know we
weren't able to play our own tools so

671
00:48:08,779 --> 00:48:13,680
this is actually fairly common so I'm
not going to say we had amazing

672
00:48:13,680 --> 00:48:17,348
indicators and this would have all been
great we want to move quickly this is

673
00:48:17,349 --> 00:48:22,140
fairly typical there's costs associated
with everything I one of things I really

674
00:48:22,140 --> 00:48:26,210
like about her job as we respond and we
prefer our tools as you saw when we talk

675
00:48:26,210 --> 00:48:29,930
about like I really want to talk about
gender specific things but because we

676
00:48:29,930 --> 00:48:33,839
all use it we came up with scripts and
weighs enterprise-wide to parse W my

677
00:48:33,839 --> 00:48:37,569
look for those things but it's very
common for us to just use whatever's out

678
00:48:37,569 --> 00:48:40,880
there again it is part of what I like so
we've responded to this same group in

679
00:48:40,880 --> 00:48:44,710
places that have you know carbon black
that have different tools just hop on

680
00:48:44,710 --> 00:48:48,339
and use those in this case I mention
Splunk in bro those are something we

681
00:48:48,339 --> 00:48:53,069
typically use so we try to be pretty
creative so there's just a different

682
00:48:53,069 --> 00:48:57,329
clients have different requirements on
why you came can't use different things

683
00:48:57,329 --> 00:49:00,380
so far things use off-site processing
some people prefer to have an on premise

684
00:49:00,380 --> 00:49:03,819
it depends on the particular tool set
but there was just some policy

685
00:49:03,819 --> 00:49:08,038
limitations that makes sense and they
they actually had a lot of fun to a lot

686
00:49:08,039 --> 00:49:13,470
of tools already

687
00:49:13,470 --> 00:49:22,040
yes so we haven't so our particular talk
we really try to avoid I was talking

688
00:49:22,040 --> 00:49:25,150
about the decline in the particular
groups really interesting we know a lot

689
00:49:25,150 --> 00:49:29,780
about the group we'd put out a lot about
was put out some things about this group

690
00:49:29,780 --> 00:49:33,480
so we put out now we're family profiles
and indicators and things like that so

691
00:49:33,480 --> 00:49:38,109
far most of those back-door families I
think that describes it may be about

692
00:49:38,109 --> 00:49:43,410
half of them so but there's not a
particular conference of research that's

693
00:49:43,410 --> 00:49:57,839
breach specific but we have put a lot of
stuff about this group

694
00:49:57,839 --> 00:50:06,440
last year and in most of those
intrusions they were not nearly this

695
00:50:06,440 --> 00:50:10,890
persistent so it does seem like they
were doing something a little bit

696
00:50:10,890 --> 00:50:14,339
differently probably based on just their
targeting priority I think that this

697
00:50:14,339 --> 00:50:16,828
particular client with such a high
priority for them that they were willing

698
00:50:16,829 --> 00:50:20,739
to burn like the resources to do this
mean if you think about burning you know

699
00:50:20,739 --> 00:50:24,190
close to a thousand compromise
legitimate websites I mean that's that's

700
00:50:24,190 --> 00:50:27,329
a lot of logistics that you're you're
dumping into this investigation you're

701
00:50:27,329 --> 00:50:43,269
never gonna be able to use again not
really sorry we're really trying to

702
00:50:43,269 --> 00:50:48,819
avoid like vendor specific things that
they actually had one of our products on

703
00:50:48,819 --> 00:50:52,329
the networks as the reason that we got
told about it is we are told about that

704
00:50:52,329 --> 00:50:57,059
we got some phone calls hey we're seeing
beginning from this backdoor family and

705
00:50:57,059 --> 00:51:01,960
some people got really excited but we
try to get them soon be coming from this

706
00:51:01,960 --> 00:51:05,690
other back to our family like we also
like that one you you know you might be

707
00:51:05,690 --> 00:51:09,890
in some trouble and that's when they
contained it made the containment

708
00:51:09,890 --> 00:51:13,969
attempt on their own that didn't work
and I think we're on site for three days

709
00:51:13,969 --> 00:51:19,109
after that so the initial detection was
based on signatures from like a fire I

710
00:51:19,109 --> 00:51:24,680
network device

711
00:51:24,680 --> 00:51:30,250
I guess we should have

712
00:51:30,250 --> 00:51:35,800
you know you never really know what
these guys so hesitant to say that but

713
00:51:35,800 --> 00:51:40,890
yeah we have no indication that they're
still there through the comprehensive

714
00:51:40,890 --> 00:51:44,160
there was another channel right the
whole group of people who were

715
00:51:44,160 --> 00:51:48,140
attempting to we were informing the
remediation team but there's a whole

716
00:51:48,140 --> 00:51:52,850
other team tackling that and they did a
bunch of comprehensive changes and kind

717
00:51:52,850 --> 00:51:59,040
of combination all those scoping it well
led to success I would add to that as

718
00:51:59,040 --> 00:52:02,770
well with the personnel to mediation
attempt like they just came back in just

719
00:52:02,770 --> 00:52:06,130
started deploying on mass like they
didn't try to go stealthy they didn't

720
00:52:06,130 --> 00:52:10,430
try to like hide they just like full
onslaught and I think that if we build

721
00:52:10,430 --> 00:52:12,680
the second time it probably would have
been more of the same it would've been

722
00:52:12,680 --> 00:52:14,020
back to business as usual

723
00:52:14,020 --> 00:52:18,970
yeah so also kind of an interesting
thing from an outside perspective they

724
00:52:18,970 --> 00:52:21,850
did actually to blame you back to our
family three hours before our

725
00:52:21,850 --> 00:52:27,190
remediation started so yeah I mean they
they were definitely on top of it and in

726
00:52:27,190 --> 00:52:31,730
doing some interesting things their
scope so we're able to stop we think

727
00:52:31,730 --> 00:52:37,720
that that further indication that they
just got the stop sign but maybe I will

728
00:52:37,720 --> 00:52:41,169
be here and also hit us up on twitter if
you want to follow up we'd be happy to

729
00:52:41,170 --> 00:52:48,590
talk

730
00:52:48,590 --> 00:52:55,750
everybody we are here filming off the
tracks and so

731
00:52:55,750 --> 00:53:00,760
this presentation out on our table in
about 20 or 30 minutes they're $10 thank

732
00:53:00,760 --> 00:53:00,870
you

