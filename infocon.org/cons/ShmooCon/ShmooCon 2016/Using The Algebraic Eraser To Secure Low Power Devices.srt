1
00:00:00,000 --> 00:00:04,819
introduced Eric Atkins who is from
secure RFU's talking about the algebraic

2
00:00:04,819 --> 00:00:07,750
eraser public key cryptography system

3
00:00:07,750 --> 00:00:14,570
good morning everybody

4
00:00:14,570 --> 00:00:20,090
are actually good afternoon john thank
you and shook on team for allowing me to

5
00:00:20,090 --> 00:00:24,300
speak here I was told that I can't use
the little over to Mike's I'm gonna be

6
00:00:24,300 --> 00:00:29,109
stuck right here which I apologize for I
usually move around a little bit so I'm

7
00:00:29,109 --> 00:00:34,149
sort of him I am I still stands here
that's why I need to get my name is

8
00:00:34,149 --> 00:00:38,070
Derrick Adkins I'm going to speak to you
a bit about using the algebraic eraser

9
00:00:38,070 --> 00:00:45,230
and securing low-power and passive IOT
devices so first of all what what is the

10
00:00:45,230 --> 00:00:50,660
Internet of Things IOT here's a bunch of
example devices that you may find

11
00:00:50,660 --> 00:00:55,429
there's tons of other stuff out there I
just picked a random sampling everything

12
00:00:55,430 --> 00:01:02,519
from bio devices to security devices too
large for about products and

13
00:01:02,520 --> 00:01:10,049
manufacturing sensors and basically it's
anything that can help its electronic

14
00:01:10,049 --> 00:01:15,750
device that going to do a service or
perform a function so what all these

15
00:01:15,750 --> 00:01:19,909
devices have in common and generally
being electronic

16
00:01:19,909 --> 00:01:24,450
well I'll give you one thing to have in
common and general they'll have limited

17
00:01:24,450 --> 00:01:29,700
computation and power resources many
times are often run out of battery they

18
00:01:29,700 --> 00:01:35,740
have small CPUs or or even dedicated
controllers they don't have the

19
00:01:35,740 --> 00:01:41,408
processor that my laptop or even my cell
phone would have so many wanna talk

20
00:01:41,409 --> 00:01:46,189
about securing these devices what we
have to do so let me actually step back

21
00:01:46,189 --> 00:01:50,729
from that and talk about a real-world
use case so this is a problem that that

22
00:01:50,729 --> 00:01:56,579
actually exists so let's say you have
some medical pharmaceuticals that are

23
00:01:56,579 --> 00:02:01,369
out there they're below pac's you get
them through the supply chain and you

24
00:02:01,369 --> 00:02:04,000
wanna make sure that they're actually
not counterfeit their actual 10 take

25
00:02:04,000 --> 00:02:09,259
pieces of medication so what do you have
to authenticate them with us

26
00:02:09,258 --> 00:02:14,750
presumption whatcha say you have a cell
phone to used to authenticate and in

27
00:02:14,750 --> 00:02:19,340
this case reaction not considering the
cell phone to be a constraint device but

28
00:02:19,340 --> 00:02:23,379
we are considering a constrained device
is what you have to use to authenticate

29
00:02:23,379 --> 00:02:26,548
so this is actually NFC tag

30
00:02:26,549 --> 00:02:31,989
little black dot dot in the middle of
that circle next to the quarter that's

31
00:02:31,989 --> 00:02:36,290
the actual piece of silicon us the
processor that you have and you take one

32
00:02:36,290 --> 00:02:42,858
of these tags and ticket to the met the
pharmaceutical packaging packaging in a

33
00:02:42,859 --> 00:02:44,739
way that can't be removed

34
00:02:44,739 --> 00:02:50,019
can't be copied and obviously when you
open up the medication it destroys it so

35
00:02:50,019 --> 00:02:51,459
now you can take your phone

36
00:02:51,459 --> 00:02:58,019
put up the medication verify that tag
and realize that action authentic or not

37
00:02:58,019 --> 00:03:04,650
authentic piece of medication so what we
do is we would actually put our our

38
00:03:04,650 --> 00:03:12,510
cryptography actually into that pieces
so so I stepped forward valency ok now

39
00:03:12,510 --> 00:03:18,230
we have this this problem are trying to
solve how do you actually secure these

40
00:03:18,230 --> 00:03:23,010
devices that when you have such small
power power constraints such small

41
00:03:23,010 --> 00:03:29,440
competition constraints while you think
about you can use a yes or some other

42
00:03:29,440 --> 00:03:33,000
symmetric cipher you know those are
relatively small is designed for small

43
00:03:33,000 --> 00:03:37,180
things are more things that are also
similar but unfortunately these kinds of

44
00:03:37,180 --> 00:03:40,629
solutions require explicit key
management so you have to put keys into

45
00:03:40,629 --> 00:03:45,660
every device and every tag and then you
have to maintain databases all that and

46
00:03:45,660 --> 00:03:49,060
secure those databases and me and every
reader that's going to verify this has

47
00:03:49,060 --> 00:03:53,209
to have access to a secure database and
of course of that data gets out you can

48
00:03:53,209 --> 00:03:58,220
now afford attack so the solution is
really have a public key cryptosystems

49
00:03:58,220 --> 00:04:03,480
with public key you have the ability to
have a private and public key to pieces

50
00:04:03,480 --> 00:04:04,829
that relate to each other

51
00:04:04,830 --> 00:04:09,380
sure you all know what that means so ok
great we got blood the public key

52
00:04:09,380 --> 00:04:13,019
cryptosystems out there a wide when you
get another one now we've got our essay

53
00:04:13,020 --> 00:04:17,650
we've got ECC you got to be Helmand what
what's wrong with these out their date

54
00:04:17,649 --> 00:04:22,849
they were really great well the problem
is all of these systems require too much

55
00:04:22,850 --> 00:04:28,090
time too much power too much CPU to run
in these really right I know I'm not

56
00:04:28,090 --> 00:04:34,090
that Specter showed you on that other
slide has such a small footprint to get

57
00:04:34,090 --> 00:04:40,210
down to that size it just doesn't have
the capability to run these devices so I

58
00:04:40,210 --> 00:04:44,500
actually AM see you on there you can do
this new software but the software

59
00:04:44,500 --> 00:04:51,870
implementations of ECC Lolo naras a way
to slow humans have a small window of

60
00:04:51,870 --> 00:04:55,090
opportunity whether willing to wait for
something to occur and when you run

61
00:04:55,090 --> 00:04:59,630
these algorithms at speeds that are
available to you human just not willing

62
00:04:59,630 --> 00:05:04,510
to wait that long they'll retry which
begins the process all over again so ok

63
00:05:04,510 --> 00:05:08,230
we can move and insulting well the
promise that the hardware required to

64
00:05:08,230 --> 00:05:13,520
amend RSA or ECC is too much to put
these small devices just blows the cost

65
00:05:13,520 --> 00:05:18,780
of the water so it's not worth
protecting $10 piece of medication with

66
00:05:18,780 --> 00:05:22,640
a tag that cost you five dollars is just
the cost benefit analysis just doesn't

67
00:05:22,640 --> 00:05:28,810
work so we really need is a lightweight
solution and this is like you know so

68
00:05:28,810 --> 00:05:32,740
this is like we were talking about
something that can run efficiently in

69
00:05:32,740 --> 00:05:36,210
the small devices and provide the
security necessary to provide these

70
00:05:36,210 --> 00:05:41,530
functions so this is where the algebraic
eraser comes to play and I we talk about

71
00:05:41,530 --> 00:05:48,669
the rest of the talk so what is the
algebraic eraser this is why we talking

72
00:05:48,669 --> 00:05:50,430
about for the next

73
00:05:50,430 --> 00:05:55,070
I guess 45 minutes or so I'll give you a
little background on it

74
00:05:55,070 --> 00:05:59,610
talk about math and math primary give
you a little background of the math

75
00:05:59,610 --> 00:06:04,600
behind the algorithm and talk about one
construction that we've got 150 Helmand

76
00:06:04,600 --> 00:06:09,570
construction and a security analysis of
that to be home construction and I got

77
00:06:09,570 --> 00:06:13,400
couple demonstrations I'd like to give
to you up here but I thought this up and

78
00:06:13,400 --> 00:06:19,859
then we'll talk about some conclusions
at the end so

79
00:06:19,860 --> 00:06:24,540
Eraser is a group the erratic public key
algorithm it was first introduced in

80
00:06:24,540 --> 00:06:33,010
2005 published in 2006 it's been a
number of papers and programs throughout

81
00:06:33,010 --> 00:06:37,690
the US history it's a lightweight
quantum resistant algorithm and its

82
00:06:37,690 --> 00:06:43,590
finding it has significant performance
gains over ECC it's both in terms of

83
00:06:43,590 --> 00:06:50,469
running faster requiring less power less
CPU and lots of good things when we talk

84
00:06:50,470 --> 00:06:54,480
about these small little devices here I
want the other interesting things about

85
00:06:54,480 --> 00:07:00,200
algebra grazers out and scales linearly
as you increase the security level so

86
00:07:00,200 --> 00:07:04,180
I'll get into more detail about why this
is the case later this talk but they see

87
00:07:04,180 --> 00:07:08,260
what this means is that as you want to
make it stronger use have to run it for

88
00:07:08,260 --> 00:07:13,840
a linearly a linearly longer time period
and that's not the case with other

89
00:07:13,840 --> 00:07:18,969
algorithms like our safety helmet recc
with ECC is you double security level

90
00:07:18,970 --> 00:07:24,860
you have to run for two or more times as
much and the complex II time RCA's even

91
00:07:24,860 --> 00:07:30,080
worse than that so when things got crazy
was designed specifically with these

92
00:07:30,080 --> 00:07:32,770
small devices in mind

93
00:07:32,770 --> 00:07:38,299
things like RFID bluetooth is six
systems on ships is really small devices

94
00:07:38,300 --> 00:07:43,930
that don't necessarily have the
processor power or power or the actual

95
00:07:43,930 --> 00:07:48,720
battery power lifetime to support these
are these older larger more complex

96
00:07:48,720 --> 00:07:54,150
algorithms are the other thing about
algebra and I'll get to slow deliberate

97
00:07:54,150 --> 00:07:57,530
well is that there's multiple
cryptographic constructions that we can

98
00:07:57,530 --> 00:08:00,669
make out of it so it's a building block
of pieces from which we can have

99
00:08:00,670 --> 00:08:06,520
different algorithms cryptosystems so I
mentioned groups groups here at a

100
00:08:06,520 --> 00:08:12,609
cryptography this technology has been
around for awhile since study from the

101
00:08:12,610 --> 00:08:17,480
book that you get from Amazon right now
for $61 you can have it on Monday if you

102
00:08:17,480 --> 00:08:23,210
order it within a couple hours it's
actually good book I don't have a copy

103
00:08:23,210 --> 00:08:27,580
but some some friends of mine and after
they talk about our algorithm in here so

104
00:08:27,580 --> 00:08:32,520
it's been studied and and published in
multiple places so I get a little bit

105
00:08:32,520 --> 00:08:36,250
into the background of algebraic eraser
so to do that I need to step back to

106
00:08:36,250 --> 00:08:42,190
some math so hopefully this won't bore
anybody I'm sure a lot of people are are

107
00:08:42,190 --> 00:08:48,960
interested in how you came to screw
kinda get a good math lecture so this is

108
00:08:48,960 --> 00:08:55,040
not yet I'm an engineer not a
mathematician basically the background

109
00:08:55,040 --> 00:08:58,439
algebra grazer goes back to the theory
of braids now what they want to point

110
00:08:58,440 --> 00:09:02,180
out this is not a breakthrough
cryptography so if you if you look to

111
00:09:02,180 --> 00:09:10,520
your brains oh this is broken this is
not break up to Apocrypha that something

112
00:09:10,520 --> 00:09:14,860
completely different that is broken this
is something that this is something new

113
00:09:14,860 --> 00:09:20,580
the difference is that braids here just
use as a construct too cumbersome heart

114
00:09:20,580 --> 00:09:26,630
problems that we face so Braves were
first introduced in 1921 by a guy named

115
00:09:26,630 --> 00:09:33,600
14 and if anyone has a woman in a life
with long hair or a man who has long

116
00:09:33,600 --> 00:09:37,450
hair you've probably actually played
yourself you take different strands and

117
00:09:37,450 --> 00:09:42,620
cross them so here's an example of a
braid with four strands and of strands

118
00:09:42,620 --> 00:09:46,010
cross over and under each other and

119
00:09:46,010 --> 00:09:52,200
you can't put this aside geometric form
I was leaders made different geometric

120
00:09:52,200 --> 00:09:57,420
pointing come up with and you can add
more crossings and it just gets very

121
00:09:57,420 --> 00:10:03,199
very complex very quickly so the
interesting thing braids that you can

122
00:10:03,200 --> 00:10:07,680
think of it as a math system just like
numbers are other things so you can take

123
00:10:07,680 --> 00:10:12,160
two braids and you can you can multiply
so the way you multiply two braids is

124
00:10:12,160 --> 00:10:17,490
that you can catch them so you take two
braids and you stop them together and

125
00:10:17,490 --> 00:10:20,970
you now have an overweight which is the
first break multiplied by the second

126
00:10:20,970 --> 00:10:28,500
grade how cool is that like other month
contracts there's element so you have a

127
00:10:28,500 --> 00:10:32,130
multiple take a break and multiplied by
the identity element you get that same

128
00:10:32,130 --> 00:10:38,730
grade so not surprisingly the identity
element of a braid braid that has no

129
00:10:38,730 --> 00:10:44,190
crossings at all and when you take any
braids and multiplied by the Iranian

130
00:10:44,190 --> 00:10:50,690
either in front of the back you get the
same rate out there is also have been

131
00:10:50,690 --> 00:10:56,290
versus invertebrates as when you
multiply it by its the inverse you get

132
00:10:56,290 --> 00:11:03,380
back to the identity so let's say you
have a break here and you have a second

133
00:11:03,380 --> 00:11:07,630
day which is the universe and if you
multiply them together which I don't

134
00:11:07,630 --> 00:11:12,130
have a picture of I'm afraid you can all
you can then basically pulled the

135
00:11:12,130 --> 00:11:17,450
strands of part one by one and each
crossing has a crossing that is

136
00:11:17,450 --> 00:11:22,030
backwards to it at the end you'll have
straight lines through becomes in the

137
00:11:22,030 --> 00:11:26,660
identity element

138
00:11:26,660 --> 00:11:30,230
also find interesting let's not break
down Brady even more so this is

139
00:11:30,230 --> 00:11:33,990
interesting is that when you have a
braid based on all these different

140
00:11:33,990 --> 00:11:38,240
strands you can break it down into
single crossings so any break can be

141
00:11:38,240 --> 00:11:44,490
based upon its crossings so they say you
have a great generators so you have

142
00:11:44,490 --> 00:11:50,300
written the first page generator be one
where you have the first ran causes me

143
00:11:50,300 --> 00:11:57,209
to second crosses over third mp3 and of
course because everybody has an inverse

144
00:11:57,209 --> 00:12:03,969
you can do the reverse so he won in
verses to crossing Dr one now that is

145
00:12:03,970 --> 00:12:08,509
interesting is that the rich braid
brands crossing over or under actually

146
00:12:08,509 --> 00:12:12,759
matters here so that's another thing to
keep in mind when he started about the

147
00:12:12,759 --> 00:12:16,680
complexity of these braids that's not
just switch does not as a question of

148
00:12:16,680 --> 00:12:20,469
which strands are crossing but in which
order the crossings whose mother is

149
00:12:20,470 --> 00:12:28,040
crossing this way and that actually
matters nothing braids out there are a

150
00:12:28,040 --> 00:12:32,670
number of trade relations at work in
these generators and go through this

151
00:12:32,670 --> 00:12:39,290
little quickly so basically when you
have three Brittany crossings we have a

152
00:12:39,290 --> 00:12:44,130
braid crossing the next one over and the
back you can then that's equivalent to

153
00:12:44,130 --> 00:12:48,589
if you spot the round and how the second
one the first one second one so for

154
00:12:48,589 --> 00:12:56,160
example B one B to B to B to the earth
is interesting is that if you have

155
00:12:56,160 --> 00:13:00,560
prayed that are not contempt next to
each other then you can you can actually

156
00:13:00,560 --> 00:13:04,739
go back and forth across the diamond
either order so here's a picture of that

157
00:13:04,740 --> 00:13:11,220
first one and that when you have the
bridge crossing to be the same thing and

158
00:13:11,220 --> 00:13:12,269
you can basically

159
00:13:12,269 --> 00:13:17,000
basically fought the brady will see that
there actually are the same braids and

160
00:13:17,000 --> 00:13:20,670
for the second one when they don't
actually cross themselves at all not

161
00:13:20,670 --> 00:13:24,529
text which other you can doesn't matter
which order in which order do the

162
00:13:24,529 --> 00:13:29,560
operations in Stockton still the same
rate

163
00:13:29,560 --> 00:13:33,869
so brady's not just the crossings not
just the structure raised also have

164
00:13:33,870 --> 00:13:39,310
permutations so basically when you have
a break have the crossings

165
00:13:39,310 --> 00:13:43,609
you basically have great starting the
beginning that you'd imagine that

166
00:13:43,610 --> 00:13:50,350
they're tied to post ads are stuck in
and they take the braids go down they do

167
00:13:50,350 --> 00:13:53,380
the crossings Indian questions where
they want to put the end not sure

168
00:13:53,380 --> 00:13:58,740
permutation so in this particular grade
you have a permutation where each trade

169
00:13:58,740 --> 00:14:04,500
winds up going down to itself so you
have one follow one down goes to divert

170
00:14:04,500 --> 00:14:12,220
22 comes down goes number 33 comes down
and goes number four and four comes down

171
00:14:12,220 --> 00:14:17,820
to go to number one so that would be the
permutation of this particular braids so

172
00:14:17,820 --> 00:14:20,589
this is all going to come into play
because it's not just the British not

173
00:14:20,589 --> 00:14:25,140
just a structure but also the
permutation matters so is also this

174
00:14:25,140 --> 00:14:29,949
concept called pure braids so we talked
earlier about the identity prayed up

175
00:14:29,950 --> 00:14:34,060
your brain is a brain that is not
straight doctor has real crossings but

176
00:14:34,060 --> 00:14:40,290
still has a tribute permutation so if
you have this bridge here if you notice

177
00:14:40,290 --> 00:14:44,050
how each strand if you follow through it
ends up in the exact same place where

178
00:14:44,050 --> 00:14:48,680
started from but you can't put the break
apart like you can't get to the identity

179
00:14:48,680 --> 00:14:55,949
so that's a controversial bridge so when
I was first my first company I had never

180
00:14:55,950 --> 00:15:00,080
heard of grace before it's not something
I ever stayed in my engineering and math

181
00:15:00,080 --> 00:15:05,220
classes at the school so has completed
me in what one thing that was trying to

182
00:15:05,220 --> 00:15:09,730
get to my head is ok I got these pretty
pictures that they're drawing for me i

183
00:15:09,730 --> 00:15:15,380
working computer engineering show me the
numbers work in two numbers so this is

184
00:15:15,380 --> 00:15:19,830
where the color bureau haitian coming to
play so you take this is nice

185
00:15:19,830 --> 00:15:23,450
mathematical concept of braids American
actually converted into numbers that

186
00:15:23,450 --> 00:15:29,990
computers can operate on and we do that
is that every braid generator works into

187
00:15:29,990 --> 00:15:34,750
it converts into a specific metrics and
permutation so basically we can take

188
00:15:34,750 --> 00:15:35,980
this association

189
00:15:35,980 --> 00:15:41,760
and show you an example so basically
what we have is a car bureau metrics so

190
00:15:41,760 --> 00:15:48,130
basically the based on the bridge
generator matrix in a specific form so

191
00:15:48,130 --> 00:15:52,520
every generator has a single known
matrix of a specific form they can now

192
00:15:52,520 --> 00:15:57,650
apply to a mathematical function and of
course there is the inverse of that as

193
00:15:57,650 --> 00:16:03,459
well so when you have so when you have
the first grade generator or the

194
00:16:03,460 --> 00:16:07,780
interest rate you have a specific matrix
that their forms out and these two guys

195
00:16:07,780 --> 00:16:12,579
that are you see you there are actually
two variables so it's a very lovely

196
00:16:12,580 --> 00:16:18,150
people again so based upon now we have
this to contact Kody multiplication that

197
00:16:18,150 --> 00:16:22,900
we've come up with so you know the
location is a one-way function so he

198
00:16:22,900 --> 00:16:29,189
takes a matrix and a permutation and
implies a break generator or a series of

199
00:16:29,190 --> 00:16:33,290
them and with this associate permutation
in the end result is another major

200
00:16:33,290 --> 00:16:37,209
permutation and this is a building
blocks for all the algebraic grazer

201
00:16:37,210 --> 00:16:43,250
constructions so basically start with
the break room so it's a group that's a

202
00:16:43,250 --> 00:16:45,120
braid on n strands have been showing you

203
00:16:45,120 --> 00:16:50,550
instances of before there's a big group
of four strands have a finite field of

204
00:16:50,550 --> 00:16:55,520
key elements so this could be a binary
feel to be a prime field when you talk

205
00:16:55,520 --> 00:17:00,710
about ECC think of P two D six it's a
prime filled with 256 bits the field

206
00:17:00,710 --> 00:17:05,400
you're much much smaller we're actually
doing a bitter lesson these fields and

207
00:17:05,400 --> 00:17:10,920
any other safety values so it's just an
array of numbers within that finite

208
00:17:10,920 --> 00:17:17,890
field one per grade stranded those
equate into those ti's at least I showed

209
00:17:17,890 --> 00:17:22,100
you on the previous slide and what we do
is we fill those in our culture that in

210
00:17:22,099 --> 00:17:27,089
a bit so basically these two values
given an action on the symmetric group

211
00:17:27,089 --> 00:17:32,330
presentation group so basic given a
function when you have this ti's you can

212
00:17:32,330 --> 00:17:34,879
you can apply the TVs and you actually
get it

213
00:17:34,880 --> 00:17:43,330
some numbers out instead so get well so
the interesting thing is that can be

214
00:17:43,330 --> 00:17:47,010
introduced well I'm guessing bring some
people they're walking out on

215
00:17:47,010 --> 00:17:54,020
I guess you're not a mathematician not
my mathematicians make this much more

216
00:17:54,020 --> 00:17:59,580
interesting so a lot of patience of the
computer generated so you have the whole

217
00:17:59,580 --> 00:18:00,210
braid

218
00:18:00,210 --> 00:18:04,510
generators you do it one step at a time
so each deposit is a single

219
00:18:04,510 --> 00:18:09,860
multiplication and so you can basically
find out that you keep on going through

220
00:18:09,860 --> 00:18:16,340
their son Matthew can look out later but
because it is rapidly computable so I

221
00:18:16,340 --> 00:18:20,659
think you may have noticed about point
out now is that a car bureau matrix is a

222
00:18:20,660 --> 00:18:26,840
sparse matrix there's only one entry in
there that is not identity and not 20

223
00:18:26,840 --> 00:18:32,560
actually started to first base side any
matrix which you know you don't have

224
00:18:32,560 --> 00:18:37,510
anything for because its matrix multiply
into a matrix is just itself so you

225
00:18:37,510 --> 00:18:40,700
think you have to do is deal with those
couple of entries that are not that are

226
00:18:40,700 --> 00:18:44,050
not the identity so it makes it very
easy to write code that can actually

227
00:18:44,050 --> 00:18:51,590
computer single a modification so so
this is showing the mathematics of any

228
00:18:51,590 --> 00:18:56,330
modification to give you a concrete
example cuz you know i i i don't recall

229
00:18:56,330 --> 00:18:59,939
in math variables sure love you don't
either so let me give you an example

230
00:18:59,940 --> 00:19:06,500
here so if you see him before so you
gonna four-by-four matrix of seven cuz

231
00:19:06,500 --> 00:19:13,540
it's nice nice now small Prime so if you
start with this matrix and that

232
00:19:13,540 --> 00:19:17,639
permutation and we have ice shows some
random he values of two four six and

233
00:19:17,640 --> 00:19:25,600
three and I want to apply the brake
generator be too so you do that is you

234
00:19:25,600 --> 00:19:29,490
apply the permutation the T value to the
curb your mattress so there's the car

235
00:19:29,490 --> 00:19:33,800
bureau matrix and you get for be two
when you apply the T values

236
00:19:33,800 --> 00:19:39,100
interpretation that's the result you get
you see a lot of zeros in there and just

237
00:19:39,100 --> 00:19:43,490
mostly died any matrix so actually
rights are being very easy to compute

238
00:19:43,490 --> 00:19:47,450
this so when you multiply that through
within have seven

239
00:19:47,450 --> 00:19:53,980
you are getting this do this new matrix
and again you apply the permutation to

240
00:19:53,980 --> 00:20:00,649
get a new permutation of his well we
just any modification obviously this

241
00:20:00,649 --> 00:20:07,340
grows bigger and bigger as you get to
larger and larger break groups so I

242
00:20:07,340 --> 00:20:10,250
mentioned earlier that we have these T
Valley these two guys and they're

243
00:20:10,250 --> 00:20:14,000
actually being plugged into these
variables or what happens is these if

244
00:20:14,000 --> 00:20:19,340
you didn't do that you obtain these
largely so here's a short random word if

245
00:20:19,340 --> 00:20:27,250
you have a similar braid of just 10
crossings and using before so basically

246
00:20:27,250 --> 00:20:32,830
not the result of the equation that you
would get so this is actually what do

247
00:20:32,830 --> 00:20:37,769
multiplication is racing to break a
razor wire BC erasing all the complexity

248
00:20:37,769 --> 00:20:43,110
and thus plugging in numbers which makes
it much easier to compute but if you

249
00:20:43,110 --> 00:20:45,820
didn't have those very well to plug in
you have to meet computing all this and

250
00:20:45,820 --> 00:20:53,100
this is no magic going out to a thousand
so as I mentioned multiplication is a

251
00:20:53,100 --> 00:20:56,580
one-way function that's being used to
construct lots of different algorithms

252
00:20:56,580 --> 00:21:00,529
the first one here I want talk about is
the algebraic eraser diffie-hellman out

253
00:21:00,529 --> 00:21:05,240
for them this is the one that's been out
there for a long time this is the first

254
00:21:05,240 --> 00:21:11,610
one health care so everyone is aware
what did you helen is also talk about

255
00:21:11,610 --> 00:21:15,779
the 18 TH protocol so the public you
have a public system ID information

256
00:21:15,779 --> 00:21:23,840
which is your began in your FQ we need a
seat matrix and 20 which is just a

257
00:21:23,840 --> 00:21:30,500
matrix that is that you use that have
two sets of commuting conjugates so

258
00:21:30,500 --> 00:21:34,980
these contracts are actually braids of
specific forums so have the a side in

259
00:21:34,980 --> 00:21:40,630
the B side and they're actually designed
such a way such that they commute and as

260
00:21:40,630 --> 00:21:43,539
I said earlier the way you do that you
stop them from different sides of the

261
00:21:43,539 --> 00:21:49,059
brain group such that no one side uses
11 because they're not crossing each

262
00:21:49,059 --> 00:21:52,610
other at the next to each other they
they can commute

263
00:21:52,610 --> 00:21:57,280
and then after you after you create
these country get to rewrite them you

264
00:21:57,280 --> 00:22:02,520
then destroy easy and you move on so
what do you have the system I parameters

265
00:22:02,520 --> 00:22:07,940
that are generated you then create one
person help us create safety values and

266
00:22:07,940 --> 00:22:16,670
generate the public keep her from that
so that they start by choosing a random

267
00:22:16,670 --> 00:22:23,160
matrix as a polynomial in that seat
matrix matrix that was generated earlier

268
00:22:23,160 --> 00:22:28,490
then generate a random polynomial and
creating a matrix is some of it so it's

269
00:22:28,490 --> 00:22:39,740
wise to being and 200 square 02 random
multiplies in front so does choose a

270
00:22:39,740 --> 00:22:46,620
random word in those sets of conjugates
there assisted else so this and this is

271
00:22:46,620 --> 00:22:52,559
no can be as many as they want but
because the modification is that

272
00:22:52,559 --> 00:22:58,799
actually effect is affecting how fast
algorithms gonna run and then later

273
00:22:58,799 --> 00:23:04,549
publickey by using a modification so she
just takes a private key to start with

274
00:23:04,549 --> 00:23:11,190
matrix and her word and I'll can be
multiplied out and you get to public key

275
00:23:11,190 --> 00:23:15,900
which is basically just a matrix
interpretation and then she says sense

276
00:23:15,900 --> 00:23:20,980
that million TVs over to bob and Bob
just does the fact that the exact same

277
00:23:20,980 --> 00:23:26,150
thing using his axing steps to complete
his his public in and centre-back Dallas

278
00:23:26,150 --> 00:23:30,290
that's great

279
00:23:30,290 --> 00:23:35,889
so now else but bob each other's public
key and they have their own private data

280
00:23:35,890 --> 00:23:43,220
and from there they can compute their
this is after all so they actually take

281
00:23:43,220 --> 00:23:47,310
the public you the other side multiplied
by the matrix and then they use

282
00:23:47,310 --> 00:23:51,899
multiplication to go to the private
braids and it turned out that these want

283
00:23:51,900 --> 00:23:55,950
to being exactly the same to each other
specific because the Braves were set to

284
00:23:55,950 --> 00:24:00,920
commute if they were not commuting
objects in this will not work if the

285
00:24:00,920 --> 00:24:04,240
matrix these are not the same doesn't
work if the TV is not the same doesn't

286
00:24:04,240 --> 00:24:08,380
work so you need a lot of things to be
this to be distributed same for this

287
00:24:08,380 --> 00:24:15,350
network because it's actually that was
the big thing now what they want to

288
00:24:15,350 --> 00:24:19,240
point out right now is that there's lots
of different architectures and

289
00:24:19,240 --> 00:24:23,810
deployment scenarios that I'm not
talking about today that how different

290
00:24:23,810 --> 00:24:27,050
processes and characteristics I was
focusing on this one because it is the

291
00:24:27,050 --> 00:24:32,480
original is the one that has been the
most studied and I'll talk about

292
00:24:32,480 --> 00:24:38,360
something alternate ones we have this
well why can't the demonstrations but

293
00:24:38,360 --> 00:24:40,860
there are different different for
different characteristics for example

294
00:24:40,860 --> 00:24:47,310
you to help forum where one person and
we're busy Alice and everything out to

295
00:24:47,310 --> 00:24:55,990
Bob including conjugates real-time and
and changes on every transaction so we

296
00:24:55,990 --> 00:25:00,810
can talk about the attacks and security
analysis basically since been published

297
00:25:00,810 --> 00:25:05,909
in 2006 there have been three attacks on
algebraic eraser

298
00:25:05,910 --> 00:25:10,650
other than brute force attacks obviously
but forces easiest but there's three

299
00:25:10,650 --> 00:25:15,710
that go beyond that the first one is a
attack that tries to discover the secret

300
00:25:15,710 --> 00:25:21,460
contra Gator the second attack is
actually trying to recover part of the

301
00:25:21,460 --> 00:25:26,050
public key and a third attack which was
just published last november is actually

302
00:25:26,050 --> 00:25:31,430
a target act actually tries to recreate
the shared secret now I'm gonna more

303
00:25:31,430 --> 00:25:34,100
detail on some of these start

304
00:25:34,100 --> 00:25:39,020
so I'm going that for the first attack
so that first attack is trying to find

305
00:25:39,020 --> 00:25:40,510
that secret contra Gators E

306
00:25:40,510 --> 00:25:44,539
so basically was doing is taking the two
cuts at the conjugates which are the

307
00:25:44,539 --> 00:25:51,330
forms et al fayed Indian version is the
BOJ the inverse for a healthy house and

308
00:25:51,330 --> 00:25:57,830
bob says conjugates and using that data
tries to recover Z basically what they

309
00:25:57,830 --> 00:26:03,379
did here is that they actually took on
its way smaller and reduced the size as

310
00:26:03,380 --> 00:26:07,690
they make their tech work basically if
you make the country it's the size of

311
00:26:07,690 --> 00:26:12,110
appropriate size of what he had done
originally their tax sales this is

312
00:26:12,110 --> 00:26:18,110
survived trying to use their mats
doctoring 02 factor RSA keys well yeah I

313
00:26:18,110 --> 00:26:23,049
make a RSA key that's only a hundred
bits long I can certainly use them out

314
00:26:23,049 --> 00:26:30,080
stopping at the 2000 it doesn't work
anymore just falls apart so this is the

315
00:26:30,080 --> 00:26:33,570
same thing here if you make your contact
you via the country get a small enough

316
00:26:33,570 --> 00:26:37,789
which is what they did then I'll get the
marks but as soon as you make it up to

317
00:26:37,789 --> 00:26:41,299
reasonable sizes doesn't work anymore
and if you're interested in the

318
00:26:41,299 --> 00:26:45,240
reputation there and there's the URL to
the paper and actually talks about this

319
00:26:45,240 --> 00:26:51,900
attack in and how it doesn't apply to a
second attack was actually trying to

320
00:26:51,900 --> 00:26:56,750
find a private matrix this one a little
more interesting in the morn fault so

321
00:26:56,750 --> 00:27:00,919
it's actually a linear algebra talk
about how many people to clear out last

322
00:27:00,919 --> 00:27:05,640
time I actually studied it was about 25
years ago but basically was doing a

323
00:27:05,640 --> 00:27:08,559
bunch of budget equations in a bunch of
unknowns and once you have enough

324
00:27:08,559 --> 00:27:11,639
equations and nothing nothing to you can
you can basically forced out an answer

325
00:27:11,640 --> 00:27:18,440
so what they're doing is facing making
Spurrier's brains and using those braids

326
00:27:18,440 --> 00:27:25,940
to come up with these sets of equations
such that that the matrix must form but

327
00:27:25,940 --> 00:27:31,950
actually satisfy these questions but
actually make their attack work they

328
00:27:31,950 --> 00:27:39,690
assumed that made that seat matrix was
generated randomly and that was not the

329
00:27:39,690 --> 00:27:43,330
case was not the case and is not the
case so basically instead of creating a

330
00:27:43,330 --> 00:27:44,280
mad

331
00:27:44,280 --> 00:27:48,700
round braid you can take a purebred
which it says the braid that has lotta

332
00:27:48,700 --> 00:27:55,770
crossings but the permutation is is the
ID any permutation and you can use that

333
00:27:55,770 --> 00:28:02,580
to generate your seat matrix and zero
and then once you do that whenever you

334
00:28:02,580 --> 00:28:07,800
create a public key based metrics based
upon that that form which is what we

335
00:28:07,800 --> 00:28:11,919
talked earlier than actually any result
of this equation satisfies the equation

336
00:28:11,920 --> 00:28:17,450
that they said before so wanted being
doesn't help that much of returning back

337
00:28:17,450 --> 00:28:24,540
to brute force and again the paper for
this is is also listed there so for

338
00:28:24,540 --> 00:28:28,149
those two attacks I'm just summarizing
them for this next attack because I

339
00:28:28,150 --> 00:28:32,410
published in November and we have
reputation paper that coming out next

340
00:28:32,410 --> 00:28:36,250
week but there's been a little more time
on this other attack because much more

341
00:28:36,250 --> 00:28:41,840
recent so this is the BBT attack that
came out last November and what they're

342
00:28:41,840 --> 00:28:45,199
claiming is that they can compute the
shared secret based upon a lot of public

343
00:28:45,200 --> 00:28:51,130
information so what their day see what
they do is if you have knowledge of both

344
00:28:51,130 --> 00:28:57,610
public ease the T values the seat matrix
which I forgot to put in here and the

345
00:28:57,610 --> 00:29:03,620
Senate and 12 conjugates using all that
data you can then do a lot of pre

346
00:29:03,620 --> 00:29:09,250
computation and then eventually computes
the shared secret so really what they're

347
00:29:09,250 --> 00:29:14,290
doing is that rising the key so they're
taking the original key which would be

348
00:29:14,290 --> 00:29:20,290
P&G key matrix interpretation and their
trip what they're doing is they're

349
00:29:20,290 --> 00:29:27,830
finding another matrix and another braid
that windup producing the same public

350
00:29:27,830 --> 00:29:32,199
key they're not so that I actually
finding bob's private data are not

351
00:29:32,200 --> 00:29:35,070
findings private matrix are not finding
his private break they're actually

352
00:29:35,070 --> 00:29:39,760
finding another matrix and another break
that happens to turn up to turn into the

353
00:29:39,760 --> 00:29:42,419
same public key turns out that that

354
00:29:42,419 --> 00:29:47,210
based on this day can actually use that
doctor I is key to create the same

355
00:29:47,210 --> 00:29:53,340
shared secret so one day after a
computer all that stuff they can then

356
00:29:53,340 --> 00:30:01,009
create the shared secret of this farm
right here and bases are plugging

357
00:30:01,009 --> 00:30:06,059
analysis public key into this equation
to make them at work so how does it

358
00:30:06,059 --> 00:30:09,970
stack actually work so the first thing
they do is they take bob's conjugates

359
00:30:09,970 --> 00:30:15,869
and how to computer setup your braids so
they have a conjecture that they can do

360
00:30:15,869 --> 00:30:20,600
this relatively easily using random
distributions but there's a lot of work

361
00:30:20,600 --> 00:30:26,139
involved here and in doing that takes up
a lot of the time then once I had not

362
00:30:26,139 --> 00:30:31,119
done they kept cut they take the braids
and I find simple transpositions and

363
00:30:31,119 --> 00:30:34,908
provocation generator so they want to as
I thought one find these using what

364
00:30:34,909 --> 00:30:40,350
combinations of confidence in his pure
braids can find a single crossover brain

365
00:30:40,350 --> 00:30:45,189
on the interpretation and then they can
use a simple ones to build up whatever

366
00:30:45,190 --> 00:30:50,669
permutation of having the next thing you
have to do is they have to take those

367
00:30:50,669 --> 00:30:54,409
tree braids and a tee values for the
transaction and computer back to full

368
00:30:54,409 --> 00:30:59,679
vector space which is a ton of matrices
and then using all those major sees how

369
00:30:59,679 --> 00:31:05,419
to find the basis so this is all this is
a lot of work and then what they have to

370
00:31:05,419 --> 00:31:08,799
do is want to actually see the kids
being generated use for that particular

371
00:31:08,799 --> 00:31:13,440
transaction they have to figure out what
sets a country gets are being used and

372
00:31:13,440 --> 00:31:21,489
applied them all in order to get the
factorization of the key so all that

373
00:31:21,489 --> 00:31:26,659
being said was mean well first of all
this running time is there were fighting

374
00:31:26,659 --> 00:31:30,440
movie and that they claim in their
attack that they can get their running

375
00:31:30,440 --> 00:31:35,389
time of this is order entered the fifth
in space and to the third which doesn't

376
00:31:35,389 --> 00:31:40,899
sound like a lot but not realize that
being still has a lot of work and

377
00:31:40,899 --> 00:31:46,850
basically again as I said again this is
just find a seat okie that can that can

378
00:31:46,850 --> 00:31:50,260
create that shared secret you know it's
not actually finding

379
00:31:50,260 --> 00:31:58,680
al-ahzar bob's private data so this
attack

380
00:31:58,680 --> 00:32:01,850
well first of all as I said the doctor
needs a lot of data for this to work

381
00:32:01,850 --> 00:32:07,060
they need the country gets a near the T
values the matrix they need both public

382
00:32:07,060 --> 00:32:11,300
keys so preventing access to any one of
these pieces of data makes the attack

383
00:32:11,300 --> 00:32:15,659
fail and there are certainly many
deployment architecture that's the case

384
00:32:15,660 --> 00:32:20,190
we can in fact in their original paper
and that they published November they

385
00:32:20,190 --> 00:32:24,770
reference and ISO specification that
we're working on where in one of the

386
00:32:24,770 --> 00:32:30,200
profiles not we actually have the public
keys are not actually being transferred

387
00:32:30,200 --> 00:32:33,540
across the air so the attacker doesn't
have Act does not have access to the

388
00:32:33,540 --> 00:32:40,300
public he said he doesn't even work in
that profile so change the contrary to

389
00:32:40,300 --> 00:32:44,830
the T values in any way the results
required resultant vector space and has

390
00:32:44,830 --> 00:32:47,889
two from all that work again so in their
paper the talk about all this P

391
00:32:47,890 --> 00:32:53,170
commutation they can do well that works
great if there is precum mutation if

392
00:32:53,170 --> 00:32:57,900
you're doing an album ala type attack
type model for example every transaction

393
00:32:57,900 --> 00:33:02,780
you get a new set of conjugates and so
have you all that work all over again so

394
00:33:02,780 --> 00:33:08,510
again there's different architectures
we're at the top doesn't work

395
00:33:08,510 --> 00:33:12,490
the other thing is that if you freeze
the brain size increases the time and

396
00:33:12,490 --> 00:33:16,900
storage required by the attacker so you
make the attack effectively invisible by

397
00:33:16,900 --> 00:33:23,090
going to larger brains but most
importantly their talk is based on

398
00:33:23,090 --> 00:33:27,600
conjecture and the conjectures that it
is possible to generate the short

399
00:33:27,600 --> 00:33:30,610
expression to the conjugates to generate

400
00:33:30,610 --> 00:33:35,030
to generate five-year braids and we'd
actually found a counterexample so a

401
00:33:35,030 --> 00:33:39,620
conjecture is just a statement that has
no proof behind it so for example I L it

402
00:33:39,620 --> 00:33:43,040
rains here in Dec yesterday so I can
make the conjecture that tells you

403
00:33:43,040 --> 00:33:49,510
yesterday and EC every day well as a
conductor it's not

404
00:33:49,510 --> 00:33:53,820
maybe it's raining today I am sitting
inside a building but you know all you

405
00:33:53,820 --> 00:33:57,370
need is money counter example to show
that the conjectures false so we

406
00:33:57,370 --> 00:34:04,989
actually found one and he did so
basically we have these permutations as

407
00:34:04,990 --> 00:34:11,810
you see it as a series of cycles so each
CPU and see prime here's a cycle of

408
00:34:11,810 --> 00:34:19,860
prime link that reputation and each of
these cycles are destroying they had the

409
00:34:19,860 --> 00:34:25,720
same six points and they're not a power
of each other and please don't ask me

410
00:34:25,719 --> 00:34:30,379
what that means cuz I have to go back
and call another editions don't like

411
00:34:30,380 --> 00:34:36,240
being called on Saturdays but basically
when you have this type of of

412
00:34:36,239 --> 00:34:41,060
permutation setup you can actually
generate these many countries and

413
00:34:41,060 --> 00:34:46,060
randomly it's not that hard to choose
randomly want to have that and to find

414
00:34:46,060 --> 00:34:50,350
out how these properties and then what
happens is these permutations actually

415
00:34:50,350 --> 00:34:57,180
live in a group that has extremely high
in order and what that means is that it

416
00:34:57,180 --> 00:35:01,810
requires a significant number of
conjugates to actually get back to a

417
00:35:01,810 --> 00:35:05,950
simple permutation and basically they're
conjecture and that you can do it always

418
00:35:05,950 --> 00:35:10,660
in and are less so if you're working
break group B 16 for example they say

419
00:35:10,660 --> 00:35:17,129
they always require at least most 16
elements to to find a backup your braids

420
00:35:17,130 --> 00:35:21,760
and in this case that's not the case is
working to much bigger trade group of

421
00:35:21,760 --> 00:35:25,690
course but it but require significantly
more than that number of countries to

422
00:35:25,690 --> 00:35:28,110
get back to a great to a purebred

423
00:35:28,110 --> 00:35:34,570
basing their conjectures actually
feeling here

424
00:35:34,570 --> 00:35:37,450
so actually let me give you some
demonstrations of our technology

425
00:35:37,450 --> 00:35:44,240
conference so the first time I talked
about is a demonstration on Microsoft

426
00:35:44,240 --> 00:35:45,470
keyboard

427
00:35:45,470 --> 00:35:48,779
unfortunately the cable here is
relatively short so I can people not

428
00:35:48,780 --> 00:35:56,060
surprised very well so it's not a PDA
that has an arm built into it such a

429
00:35:56,060 --> 00:36:02,299
combination of fabric and and software
so basically what this has on there is a

430
00:36:02,300 --> 00:36:08,730
combination of Albert algebraic eraser
and elliptic curve so they're both in

431
00:36:08,730 --> 00:36:11,750
hardware sitting next to each other so
we're going to do is do a side-by-side

432
00:36:11,750 --> 00:36:19,090
comparison to the speed of algebraic
erasure and and ECC so I'm gonna do in

433
00:36:19,090 --> 00:36:22,380
the second I'm gonna start the test and
what you'll see is that is going to draw

434
00:36:22,380 --> 00:36:24,140
a picture

435
00:36:24,140 --> 00:36:28,109
authentication so every line the picture
is the single authentication that's

436
00:36:28,110 --> 00:36:32,530
being completed so goes back to the book
goes the board does not indication draws

437
00:36:32,530 --> 00:36:36,420
a line the photo and picture and goes
back is doing the speed and parallel to

438
00:36:36,420 --> 00:36:40,040
each other so it's not exactly to
process is actually two processes

439
00:36:40,040 --> 00:36:48,029
running side by side so I'm gonna start
that don't think so

440
00:36:48,030 --> 00:36:53,980
running as you can see on the right hand
side so complete that this is actually

441
00:36:53,980 --> 00:36:58,900
512 authentication source 500 lines in
this photo so did the 512 indications

442
00:36:58,900 --> 00:37:05,000
using algebraic eraser in 37 seconds I
want to bring about 70 to 90 °c seventy

443
00:37:05,000 --> 00:37:10,950
microseconds per authentication ECC on
the same system is taking 370

444
00:37:10,950 --> 00:37:15,660
milliseconds per authentication I'll let
you guys do the math of how much faster

445
00:37:15,660 --> 00:37:21,379
algebraic racer is the ECC but why one
point out is that not only is it a speed

446
00:37:21,380 --> 00:37:28,050
difference here but speed equates to to
power consumption as well so we're using

447
00:37:28,050 --> 00:37:35,540
about 400 times less power than ECC and
implementation

448
00:37:35,540 --> 00:38:14,360
does yet again and i dont blank card
that actually has an 8051 processor that

449
00:38:14,360 --> 00:38:23,650
which is a lower low power a bit
controller has I think maybe house ik of

450
00:38:23,650 --> 00:38:32,550
RAM has a lot of flash storage on this
device so that you can imagine that this

451
00:38:32,550 --> 00:38:36,830
is actually does a different form factor
for that tag that I showed up at the

452
00:38:36,830 --> 00:38:40,560
beginning of the page that little time
without little dot dot dot dot showing

453
00:38:40,560 --> 00:38:46,820
in here most of what's in this card is
an antenna for power so I used to work

454
00:38:46,820 --> 00:38:51,940
this is one of my idea bad idea badges
and what I have on this card is on this

455
00:38:51,940 --> 00:38:56,280
card there's a certain point exactly in
software on this card is not in the

456
00:38:56,280 --> 00:39:02,720
silicon itself and I also have a
certificate and some other data so I got

457
00:39:02,720 --> 00:39:07,319
myself on here insist this is just a
standard off the shelf she sees Android

458
00:39:07,320 --> 00:39:27,700
phone you can go to any Sprint store and
could have by the body

459
00:39:27,700 --> 00:39:37,328
placement

460
00:39:37,329 --> 00:39:43,299
and I can do it against in case you
missed it this time again it read the

461
00:39:43,299 --> 00:39:47,989
certificate certificate on here read the
certificate off the card and went on to

462
00:39:47,989 --> 00:39:52,589
found and validated the certificate
addenda now drag racer so create a

463
00:39:52,589 --> 00:39:56,249
public key in real-time scented the
public key down here and in the

464
00:39:56,249 --> 00:40:07,029
computation sent back saying here's my
here's my here's my here's my

465
00:40:07,029 --> 00:40:13,329
authentication token center back to the
phone says authentic here cause actual

466
00:40:13,329 --> 00:40:16,959
verified that's the result the shared
secret supposed to have retrieved and

467
00:40:16,959 --> 00:40:21,239
then a draw a picture which actually put
off the card one thing should notice is

468
00:40:21,239 --> 00:40:26,660
that my phone to airplane mode so all
this is actually being done between the

469
00:40:26,660 --> 00:40:30,180
phone and the card so it's not going
back to a database somewhere it doesn't

470
00:40:30,180 --> 00:40:33,359
have to look up anything you know off
the internet

471
00:40:33,359 --> 00:40:55,578
this is all being done purely between
the phone and the card

472
00:40:55,579 --> 00:41:08,979
well as multiplying very very large
numbers but easy see you're talking

473
00:41:08,979 --> 00:41:14,890
about you know 256 bit primes you know
or more withdrawals say you're talking

474
00:41:14,890 --> 00:41:23,109
2008 numbers to be home and even know
that size or larger as well as your

475
00:41:23,109 --> 00:41:27,200
processors get smaller the amount of
work you have to do to do those

476
00:41:27,200 --> 00:41:30,549
computations actually grows because you
have to break them up into smaller and

477
00:41:30,549 --> 00:41:35,670
smaller and smaller pieces and put them
back together so as your process gets

478
00:41:35,670 --> 00:41:40,309
those those multiple parts steps you
have to do which makes the work they

479
00:41:40,309 --> 00:41:47,930
have too much harder so as much earlier
occasions small fields in particular I

480
00:41:47,930 --> 00:41:54,249
think we're using the field of 32 on
here so 25 that field that were doing so

481
00:41:54,249 --> 00:41:58,558
because it's a bit processor you can do
that and single steps it's easy to a

482
00:41:58,559 --> 00:42:05,009
modification re actually look up and a
lookup table and he makes it really

483
00:42:05,009 --> 00:42:08,969
really fast and has a much earlier as i
shud with the multiplication

484
00:42:08,969 --> 00:42:15,199
doing a couple of modification to the
multiplication and subtraction perot and

485
00:42:15,199 --> 00:42:18,819
that you can do that basically based on
like the break so I have been very very

486
00:42:18,819 --> 00:42:24,009
fast so the runtime him on occasion I
just based on the links above grade so

487
00:42:24,009 --> 00:42:27,199
great as the break goes longer you have

488
00:42:27,199 --> 00:42:30,589
morning altercations you have to do that
really controls how long your

489
00:42:30,589 --> 00:42:35,890
authentication to take but because each
step in any modification so fast and

490
00:42:35,890 --> 00:42:41,690
takes up so little time and effort is
still being significantly faster than I

491
00:42:41,690 --> 00:42:47,900
these other algorithms even when we're
doing thousands of multiplications the

492
00:42:47,900 --> 00:42:50,779
other thing as much as the brake disc
brake is growing literally as you

493
00:42:50,779 --> 00:42:54,469
increase the security level so insecure
increases security level you just have

494
00:42:54,469 --> 00:42:58,599
to combine more those conjugates
together as you create your key and

495
00:42:58,599 --> 00:43:03,890
making your break grow nearly as you get
more so if you're going to go from

496
00:43:03,890 --> 00:43:07,879
11 security level to another security
level 12 effectively doubling the length

497
00:43:07,880 --> 00:43:14,630
of your braids so you want to double
your efforts they expanding their thing

498
00:43:14,630 --> 00:43:20,029
about algebraic racers I said we have
multiple verticals we can do you know

499
00:43:20,029 --> 00:43:25,490
it's all based on location so one thing
we also how about how function of a

500
00:43:25,490 --> 00:43:32,038
paper that was accepted to publication
several months ago who knows when that's

501
00:43:32,039 --> 00:43:38,200
actually gonna get published just send
it to you but using against using him

502
00:43:38,200 --> 00:43:42,419
altercation in braids to take it as a
hash function and the interesting thing

503
00:43:42,420 --> 00:43:48,390
about this function is actually a family
so you can actually create a random

504
00:43:48,390 --> 00:43:53,288
house on the fly just by changing which
order prayed you have settings and

505
00:43:53,289 --> 00:43:57,710
there's also some some tweets you can do
in terms of said in terms of speed vs

506
00:43:57,710 --> 00:44:02,670
effort and storage so there's a lot of
interesting tweaks to actually run some

507
00:44:02,670 --> 00:44:06,369
stand rest on the statistical analysis
on this based on this random number

508
00:44:06,369 --> 00:44:11,430
tests which they have what they do to
generate and test randomness and it

509
00:44:11,430 --> 00:44:15,799
worked out that this actually performed
as good if not better than ever and

510
00:44:15,799 --> 00:44:21,000
demand a couple of tests which I found
surprising but so that works pretty well

511
00:44:21,000 --> 00:44:28,140
we got block cipher is just an
interesting concept in the construction

512
00:44:28,140 --> 00:44:34,900
that that's there you can also using
similar cuts into a house roads leading

513
00:44:34,900 --> 00:44:40,339
to a PR Eng and increased adrenalin
generator and from there actually have

514
00:44:40,339 --> 00:44:43,119
created a stream cipher

515
00:44:43,119 --> 00:44:46,720
we also have a digital signature
algorithm we're working on a paper on

516
00:44:46,720 --> 00:44:47,819
that as well

517
00:44:47,819 --> 00:44:52,299
hope with hoping to send to provoke
conference so if you're if you're on the

518
00:44:52,299 --> 00:44:56,299
crypto PC will be coming

519
00:44:56,299 --> 00:45:02,630
interesting thing about this is that
unlike ECDs a verification of ADHD

520
00:45:02,630 --> 00:45:07,610
a tedious extremely fast in fact
actually faster

521
00:45:07,610 --> 00:45:13,850
by a factor back to Denver then the
diffie-hellman data showed you so if you

522
00:45:13,850 --> 00:45:19,390
want to actually valid certificates on
these devices now you can do it within a

523
00:45:19,390 --> 00:45:24,850
tedious a signature holiday extremely
quickly whereas ECC on this takes the

524
00:45:24,850 --> 00:45:30,259
best algorithm for ECC takes
approximately 1.5 seconds for a single

525
00:45:30,260 --> 00:45:37,040
point multiplication and since the curve
digital signatures to for validation so

526
00:45:37,040 --> 00:45:41,400
it's at least three seconds to validate
a signature on this card in the best

527
00:45:41,400 --> 00:45:50,210
algorithm you can possibly find so I'm
not go into details of these today just

528
00:45:50,210 --> 00:45:55,640
because I'm almost out of time but I'm
just gonna do a quick conclusion so we

529
00:45:55,640 --> 00:45:59,250
think that this is a novel publicly
model it solves a lot of problems for

530
00:45:59,250 --> 00:46:03,650
the small constrained devices think it's
certainly seen as we showed you

531
00:46:03,650 --> 00:46:10,000
significantly faster than PCR assay into
it scales linearly as opposed to a

532
00:46:10,000 --> 00:46:15,930
quadratically as increases security so
it makes it easier to do that the

533
00:46:15,930 --> 00:46:21,029
underlying core technologies can be used
to form different constructs and it's

534
00:46:21,030 --> 00:46:26,900
quite resistant we have a paper on that
as well we can describe and it has a

535
00:46:26,900 --> 00:46:29,960
small footprint in hardware and software
plantation so again if it's on these

536
00:46:29,960 --> 00:46:34,650
really small constrained devices so we
think it has a big future so thank you

537
00:46:34,650 --> 00:46:37,290
and your questions

538
00:46:37,290 --> 00:46:42,330
up five minutes or less

539
00:46:42,330 --> 00:47:06,970
are actually block ciphers not public
not public key so it's hard to compare

540
00:47:06,970 --> 00:47:10,029
them it's like comparing apples and
kumquats

541
00:47:10,030 --> 00:47:17,060
there to perform a very different things
so I haven't done that so I don't have

542
00:47:17,060 --> 00:47:21,049
numbers on our block cipher vs that
sorry we've been focusing on the public

543
00:47:21,050 --> 00:47:30,450
he side of things not and the house not
offer yes what is the license onerous

544
00:47:30,450 --> 00:47:35,819
it is patented technology currently the
actual license that we would try to ask

545
00:47:35,820 --> 00:47:41,260
me based on what you wanna do with it
but we want to go out there so we do not

546
00:47:41,260 --> 00:47:45,480
want to be an impediment so we will work
with you to make sure that the license

547
00:47:45,480 --> 00:47:57,830
works for whatever you want to do well

548
00:47:57,830 --> 00:48:01,700
the question has been broken many times
why you think will be broken again

549
00:48:01,700 --> 00:48:06,270
well I'll stand by steve hasn't been
broken many times the first two attacks

550
00:48:06,270 --> 00:48:13,980
specifically used used data that we were
not using so they basically created a

551
00:48:13,980 --> 00:48:18,790
con- struct based on the math that
actually work for their attack so in the

552
00:48:18,790 --> 00:48:22,720
first case they used really really small
keys which was much more than what you

553
00:48:22,720 --> 00:48:27,339
have proposed this case are using random
data as opposed to date of specific form

554
00:48:27,340 --> 00:48:31,740
that's like saying well gee if I create
our psyche of two random numbers I just

555
00:48:31,740 --> 00:48:34,080
happen to create the prime who cares

556
00:48:34,080 --> 00:48:39,430
well as insecure well yeah of course so
those first two attacks don't count on

557
00:48:39,430 --> 00:48:44,560
the most recent act is is more
interesting and do we think it's going

558
00:48:44,560 --> 00:48:47,130
broke things get more tax

559
00:48:47,130 --> 00:48:51,520
that's the only thing if you think about
it bc C&R say also had similar things in

560
00:48:51,520 --> 00:48:55,050
the twenty first came out to their loss
of attacks against you see lots of tax

561
00:48:55,050 --> 00:49:05,500
cuts are say when their first published
I'm sorry and the end there's been no

562
00:49:05,500 --> 00:49:09,710
attacks based upon our our country said
the congregation separation search

563
00:49:09,710 --> 00:49:15,700
problem that were based on the
breakthrough be there so that we can

564
00:49:15,700 --> 00:49:28,930
talk afterwards you either one

565
00:49:28,930 --> 00:49:41,169
yes they're they're both using $129 EDH
so it's comparing apples to apples using

566
00:49:41,170 --> 00:49:43,700
algebraic record of Helmand to

567
00:49:43,700 --> 00:50:09,038
behind the light i guess i guess i
apologize hard to see his latest

568
00:50:09,039 --> 00:50:13,459
so let me try paraphrase that question
there's a difference between theoretical

569
00:50:13,459 --> 00:50:16,799
and practical attacks in the questions
about our weather implementation is

570
00:50:16,799 --> 00:50:22,410
closed or open are currently under
implementation is closed so all the

571
00:50:22,410 --> 00:50:25,919
attacks are theoretical against them
there are other implications are

572
00:50:25,919 --> 00:50:27,049
actually out there

573
00:50:27,049 --> 00:50:30,749
the Stevens 22 did that first attack
outraged wrote a bunch of code in a

574
00:50:30,749 --> 00:50:38,098
published it on the website to get the
code 44 from them so you can actually

575
00:50:38,099 --> 00:50:41,999
have the full implementation out there
we do plan to have a reference

576
00:50:41,999 --> 00:50:46,499
implementation we put out there but we
are have not done so yet but it is in

577
00:50:46,499 --> 00:51:31,500
our plan you and then you

578
00:51:31,500 --> 00:51:43,510
so basically there's a bunch of
conjectures in the in their paper so

579
00:51:43,510 --> 00:51:46,660
it's not just one point out to one that
we have a counterexample for there are

580
00:51:46,660 --> 00:51:50,069
actually several this the whole papers
based on conjecture and there's multiple

581
00:51:50,070 --> 00:51:54,530
contractors in there so they say what
they say is that in the general case

582
00:51:54,530 --> 00:52:03,300
they can find these short expressions in
the conjugates but in general case what

583
00:52:03,300 --> 00:52:06,950
we found is that you can but you can
generate conjugates in such a way that

584
00:52:06,950 --> 00:52:11,000
does not the case so when you do that
and then there's no there's a month and

585
00:52:11,000 --> 00:52:15,150
visitors infinite number of conjugates
actually meet that so

586
00:52:15,150 --> 00:52:20,180
ok yes it's another class of wikis an
hour weeks weak data just like you can

587
00:52:20,180 --> 00:52:24,129
find me kisi curbs now you can go find a
secret that's really weak

588
00:52:24,130 --> 00:52:28,490
the same thing here you can find
contradicted that's doctor is weak

589
00:52:28,490 --> 00:52:31,890
enough to sub be subject to the BBC
attack if you feel more confident in

590
00:52:31,890 --> 00:52:46,750
this way it's not subject to that time

591
00:52:46,750 --> 00:52:51,990
so it's basically depend on many things
so it's going to be what being you're

592
00:52:51,990 --> 00:52:58,930
talking about and what you're talking
about and also how long years he is and

593
00:52:58,930 --> 00:53:04,149
how long the contras guitar which are so
it's not as nice as not just does a lot

594
00:53:04,150 --> 00:53:10,230
of light weeks ago into that I can tell
you in the the break that was on here is

595
00:53:10,230 --> 00:53:25,130
approximately 2,500 generators

596
00:53:25,130 --> 00:53:37,809
basically give a paper on it which which
I can I get to you too specific question

597
00:53:37,809 --> 00:53:44,630
was what what about you modification to
stop cantons questions ok so the

598
00:53:44,630 --> 00:53:50,579
question is what about a modification
makes it quite resistant the answer is

599
00:53:50,579 --> 00:53:55,089
why I can't tell you that very well cuz
I'm not mathematicians the basically

600
00:53:55,089 --> 00:53:59,710
it's not up to shore and that we talked
appear short he has no idea how to apply

601
00:53:59,710 --> 00:54:03,990
his algorithm to this it would be
subject to Grover but everything subject

602
00:54:03,990 --> 00:54:08,410
grover so you because you just have to
make it twice as hard because twice as

603
00:54:08,410 --> 00:54:14,910
hard for them versus for Ecco to be four
and a half times as hard so that when we

604
00:54:14,910 --> 00:54:18,890
go to a bunch of contraction base a
bunch of clinton analysis of the

605
00:54:18,890 --> 00:54:26,118
different known attacks and so did the
billion hidden subgroup problem doesn't

606
00:54:26,119 --> 00:54:30,150
apply because grades are actually not a
million miles 100 interesting things

607
00:54:30,150 --> 00:54:34,900
about this is that supposed to be early
enough so long that a lot of teams don't

608
00:54:34,900 --> 00:54:41,039
play so I've been told I have to stop so
I'm happy to take your questions thank

609
00:54:41,039 --> 00:54:41,150
you

