1
00:00:00,000 --> 00:00:10,469
more cowbell these more cowbell I so the
stock my name is Josh pizza or author

2
00:00:10,469 --> 00:00:18,720
behind doctor factory don't know if it's
kinda patches code in other people's

3
00:00:18,720 --> 00:00:29,409
code so yeah alright so why this talk
well if you do any iOS RSX forensics

4
00:00:29,410 --> 00:00:32,558
code signing his part

5
00:00:32,558 --> 00:00:38,750
forensic workflow not really sure how
goes on he works working on a high data

6
00:00:38,750 --> 00:00:46,710
from folks that don't know how goes on
your ground rules everything is close to

7
00:00:46,710 --> 00:00:54,399
install there is no direct militias
execution during the stop there is some

8
00:00:54,399 --> 00:01:04,080
delicious execution but its first and
see if you really want to see so if you

9
00:01:04,080 --> 00:01:12,590
do this on Windows appended to the
binaries as expected

10
00:01:12,590 --> 00:01:22,700
I S still is sort of depends on how you
count how you check depends on if you

11
00:01:22,700 --> 00:01:31,409
can check correctly so I took this bug
and what I thought was a bug and

12
00:01:31,409 --> 00:01:37,390
resource issue 42 to Apple in April in
juneau give us the resources you may

13
00:01:37,390 --> 00:01:43,049
notice that the adding data to the
binary still was that that you should I

14
00:01:43,049 --> 00:01:49,259
thought was you know existed el capitan
came out september thirtieth issue still

15
00:01:49,259 --> 00:01:54,929
exists I reported it to Apple again I
talked with Apple engineers on the phone

16
00:01:54,929 --> 00:02:04,459
and i got their response usually strict
checking and just a show of hands anyone

17
00:02:04,459 --> 00:02:16,430
know what that is like 12 hands this one
works for Apple so let's go into it so

18
00:02:16,430 --> 00:02:18,299
strict versus no strict

19
00:02:18,299 --> 00:02:27,239
you see the color so strict checking
think of it as gatekeeper gatekeeper

20
00:02:27,239 --> 00:02:32,160
what it does at least from strict
checking standpoint verify the integrity

21
00:02:32,160 --> 00:02:38,620
of the file if there's an issue with
integrity will tell you it's the code

22
00:02:38,620 --> 00:02:44,340
signatures invalid however no strict
checking is is only what is loaded into

23
00:02:44,340 --> 00:02:48,480
memory of the binary assigned that is
checked and so there's a definite

24
00:02:48,480 --> 00:02:56,700
chapter right and on iOS there's no
there's only no strict checking I'm

25
00:02:56,700 --> 00:03:04,720
gonna show you that so in this is a
universal binary file now this has

26
00:03:04,720 --> 00:03:10,660
multiple architectures and is pending
between each architecture these party

27
00:03:10,660 --> 00:03:14,790
locations they're not shocked

28
00:03:14,790 --> 00:03:20,629
so you know I assessment to use only for
checking so I decided to look around and

29
00:03:20,629 --> 00:03:23,920
the industry and the tools that are
available to see who's doing strict

30
00:03:23,920 --> 00:03:33,369
checking know where it's been shop where
it's been hot here the doors when I

31
00:03:33,370 --> 00:03:37,530
started this research we're using just
no strict checking now

32
00:03:37,530 --> 00:03:47,030
collector is a sub reasons aside from
code from not now then you have a query

33
00:03:47,030 --> 00:03:51,030
from Facebook Google sent out this i
really forensics close to it in there

34
00:03:51,030 --> 00:04:00,169
just so people now so I was also told I
S people who did forensics who taught

35
00:04:00,169 --> 00:04:05,530
forensics and I asked him how they would
check outside and they told me this this

36
00:04:05,530 --> 00:04:11,530
is not correct this would just tell you
if the binary itself has a signature and

37
00:04:11,530 --> 00:04:17,329
who signed it but not in the signatures
now and that's a big difference so so

38
00:04:17,329 --> 00:04:21,449
really unless you are who signed it
don't use it I'm gonna have example that

39
00:04:21,449 --> 00:04:25,520
here in a moment and what you do when
you should check this is how you do it

40
00:04:25,520 --> 00:04:33,740
if you look at the source country codes
on you'll see that there's a case

41
00:04:33,740 --> 00:04:39,650
statement and all of these pretty much
in the same place

42
00:04:39,650 --> 00:04:43,739
now this is how you know basically do
strict checking Israel the nursery Czech

43
00:04:43,740 --> 00:04:48,690
flag in now you can't always used to
strict strict checking our ensure that

44
00:04:48,690 --> 00:04:56,509
the second alright so this this is a
less and I modify a binary sign in below

45
00:04:56,509 --> 00:05:04,780
so if you do cosign digital the binary
you'll see that it says by Apple but if

46
00:05:04,780 --> 00:05:11,210
you actually do strict checking and
rechecking and that's what you want

47
00:05:11,210 --> 00:05:16,479
right this is what what you don't want
it but this is how the chechen fallout

48
00:05:16,479 --> 00:05:23,419
unfortunately but if you append data i
appended data to this binary and you'll

49
00:05:23,419 --> 00:05:29,070
see if UD triple B that's designed by
Apple right because not checking to see

50
00:05:29,070 --> 00:05:38,750
if you do strip check that it fails
check validation it's valid on disc now

51
00:05:38,750 --> 00:05:45,169
if you see this you have a problem this
is changing one single bite in the

52
00:05:45,169 --> 00:05:52,979
patent section between miners there's no
real way that you to know that that's

53
00:05:52,979 --> 00:05:57,159
the issue you have to open up the heck
senator be familiar with a moscow format

54
00:05:57,159 --> 00:06:02,409
or use a tool that I'm going to talk
about later on so if you have a binary

55
00:06:02,409 --> 00:06:12,159
like this try to load it on sex its
alright so going back to the bat file

56
00:06:12,159 --> 00:06:17,360
stuff I wrote something called Life
program and what it does it injects data

57
00:06:17,360 --> 00:06:21,110
into the padding sections because you
can inject it into the Body section and

58
00:06:21,110 --> 00:06:37,970
it doesn't break anything over certain
our sides sizes so I wrote in this

59
00:06:37,970 --> 00:06:39,600
example I have

60
00:06:39,600 --> 00:06:51,440
Firefox rate to has two architectures
and I just crammed LLS into the file now

61
00:06:51,440 --> 00:06:55,430
you may be saying you know what if what
if you're using a file carver like Scott

62
00:06:55,430 --> 00:07:01,630
who foremost as well it's true there's
no encryption know anything you'll find

63
00:07:01,630 --> 00:07:05,940
find find a magic editor and then say
yes I have this file here but not if I

64
00:07:05,940 --> 00:07:12,570
do this this is just taking OpenSSL
encrypting file removing the literal

65
00:07:12,570 --> 00:07:19,620
word salted from the magic had an
opinion into Firefox and Firefox who is

66
00:07:19,620 --> 00:07:29,520
cute sign and pass validation so you can
also mess with the files on iOS

67
00:07:29,520 --> 00:07:38,859
application in this example chrome cast
it to a new record created and then I

68
00:07:38,860 --> 00:07:46,770
unzip it because I P ages and then that
I go to check check and i cant you

69
00:07:46,770 --> 00:07:52,280
should check you can't just checking I S
nine years is just maybe the cosine

70
00:07:52,280 --> 00:08:02,080
tools broken just you can do no strict
checking great so I just go into the

71
00:08:02,080 --> 00:08:12,700
application directory I tend to get data
to the binary data and then back out

72
00:08:12,700 --> 00:08:18,409
patient still new street signs the only
way I can check it and then I sit up

73
00:08:18,410 --> 00:08:27,130
things and then I use Xcode side loaded
but you can also use iTunes so here's

74
00:08:27,130 --> 00:08:37,429
the before and after so I went from
twenty amex to two gigs

75
00:08:37,429 --> 00:08:44,270
if you want the applications to work

76
00:08:44,270 --> 00:08:51,839
crashes the information that the log out
is kind of interesting I don't have

77
00:08:51,839 --> 00:08:56,980
access to source code or compiled kernel
so I can tell you exactly the problem

78
00:08:56,980 --> 00:09:06,240
but also limited to 15 in the section
because you can extend adding the patent

79
00:09:06,240 --> 00:09:13,130
application crash about 15 16 gigabytes
but I say fifty so that you have so if

80
00:09:13,130 --> 00:09:21,520
you have some other interview data so
this only worse so you can put it on I

81
00:09:21,520 --> 00:09:27,750
was nine devices and other stuff but to
get the data back off a stylist aids or

82
00:09:27,750 --> 00:09:32,950
jailbroken phone right the reason for
that is that Apple has implemented

83
00:09:32,950 --> 00:09:42,370
absentee and abstinence easiest way to
explain it is it's you you try to

84
00:09:42,370 --> 00:09:51,600
transfer purchases of them coming from
your income from Apple's cloud and

85
00:09:51,600 --> 00:10:01,040
transfer data back but I can now these
techniques also work on unsigned miners

86
00:10:01,040 --> 00:10:06,439
such as external now

87
00:10:06,440 --> 00:10:11,640
some some people well there's the
problem is that the if you haven't

88
00:10:11,640 --> 00:10:12,470
locked out

89
00:10:12,470 --> 00:10:20,230
recovery mode from the user user can
just do it in and disabled and then and

90
00:10:20,230 --> 00:10:24,740
then I do whatever they want on the
machine to machine so if you're doing

91
00:10:24,740 --> 00:10:28,630
forensic she can't depend on set to
protect the files so you can count those

92
00:10:28,630 --> 00:10:35,180
files out so we're going to take and I
just coffee table set the current local

93
00:10:35,180 --> 00:10:39,189
independent random data to it and then I
got it back

94
00:10:39,190 --> 00:10:53,470
reboot you'll see that the Colonels 1.2
and their potential for abuse there's a

95
00:10:53,470 --> 00:11:01,180
there's two files that I wrote hunchback
tutsi and see what hunchback does it

96
00:11:01,180 --> 00:11:06,670
will take a it can be assigned out and
then what you do is you

97
00:11:06,670 --> 00:11:10,630
data that's been formatted with a magic
header

98
00:11:10,630 --> 00:11:14,540
shellcode appended to the binary and
then what all do when you execute it

99
00:11:14,540 --> 00:11:20,370
will look to see if that data exist if
it's not there it will execute normally

100
00:11:20,370 --> 00:11:27,180
if it is their sake execute take the
payload executed memory and then

101
00:11:27,180 --> 00:11:33,060
truncated self so that will pass faster
checking and then parse on does look for

102
00:11:33,060 --> 00:11:39,180
binary data appended to them and then
executed finds magic header then it will

103
00:11:39,180 --> 00:11:43,670
execute that data and then another
potential for abuse that you've probably

104
00:11:43,670 --> 00:11:47,849
already recognized is data hiding so

105
00:11:47,850 --> 00:11:52,829
there is potential for abuse if you do
not know how to check codes are

106
00:11:52,829 --> 00:11:57,670
improperly you could be missing data
that could be used for tax bill could

107
00:11:57,670 --> 00:12:09,050
use or storage rack still pictures can
be anything so solutions a recent thing

108
00:12:09,050 --> 00:12:13,719
called doses and that is the medical
term for hunchback has the original idea

109
00:12:13,720 --> 00:12:20,440
was you could take a 64 killed by filing
have five to six gigs of data writing on

110
00:12:20,440 --> 00:12:26,959
it so all this does is look at where
data is not loaded into memory

111
00:12:26,959 --> 00:12:34,410
find something wasn't right the
statistics for investigation so it's

112
00:12:34,410 --> 00:12:39,880
quite on 27 is a classy just important
to any projects that you're using this

113
00:12:39,880 --> 00:12:49,029
example right page changed just one bite
and padding section of the one they gave

114
00:12:49,029 --> 00:12:55,550
me here and this is the South Island so
you can do a lot of just so you can see

115
00:12:55,550 --> 00:13:04,250
there's been changed now in 2006
collector which is a forensics tool that

116
00:13:04,250 --> 00:13:16,290
was my folks at Yale and interesting
entire bill

117
00:13:16,290 --> 00:13:29,310
and I found that I don't 6.8 how to file
and install that actually be honest with

118
00:13:29,310 --> 00:13:34,439
you but it turns out that it was a
script is legitimate script that was

119
00:13:34,440 --> 00:13:36,420
tackled tackles

120
00:13:36,420 --> 00:13:45,029
tickle tickle kit is packaged with to go
get and it was just what happens is the

121
00:13:45,029 --> 00:13:52,069
finer with load it would call this
toolkit script from discs loaded into

122
00:13:52,069 --> 00:13:59,979
memory so I just 6.9 doesn't do this I
wonder why the change I did not sign so

123
00:13:59,980 --> 00:14:07,920
they didn't have to change it but yeah I
submitted patches to the following

124
00:14:07,920 --> 00:14:13,750
repositories accepted all the patches
and they're very know some of these

125
00:14:13,750 --> 00:14:21,029
passes were literally just one flag
change is pretty simple just shows that

126
00:14:21,029 --> 00:14:27,250
you know a lot of people don't
understand these these are the

127
00:14:27,250 --> 00:14:34,920
differences in performance it really it
was faster to checked strict than it was

128
00:14:34,920 --> 00:14:44,010
not to use the flags if you're going to
use the API to call these are the facts

129
00:14:44,010 --> 00:14:50,300
you want to use the first let me know in
the middle and a minimum you can just do

130
00:14:50,300 --> 00:14:55,719
strict checking but if you want to check
the last three texts Rick check all

131
00:14:55,720 --> 00:14:59,939
architectures and oil and if you wanna
check Niseko this is if they use the

132
00:14:59,939 --> 00:15:11,279
cosine told signed deep soul actually
faster than my second

133
00:15:11,279 --> 00:15:24,699
collector same same deal ended up being
three seconds faster conclusion a little

134
00:15:24,699 --> 00:15:34,410
fast you can on Marco file formats and
and in the file format you really need

135
00:15:34,410 --> 00:15:39,889
to be doing strict checking where you
can do it for example nihilist you can't

136
00:15:39,889 --> 00:15:47,319
do it and then if you can't do strict
checking you to Ryan closest against or

137
00:15:47,319 --> 00:15:53,360
something else and learn so that you see
if anything's been appended to it and I

138
00:15:53,360 --> 00:15:59,529
know PNL files can be abused in the same
way on P it's pretty binary that the

139
00:15:59,529 --> 00:16:05,800
files going to sign or not there is no
codes so you can append dated 22 files

140
00:16:05,800 --> 00:16:10,490
also and I really have not looked into
the hall format my friends are no really

141
00:16:10,490 --> 00:16:15,860
well they could tell me but there might
be more ways to hide data and who knows

142
00:16:15,860 --> 00:16:22,019
any questions

143
00:16:22,019 --> 00:16:23,689
right

