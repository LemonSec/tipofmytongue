1
00:00:00,080 --> 00:00:03,280
start to search a session

2
00:00:03,280 --> 00:00:05,839
on fit attacks uh we're actually

3
00:00:05,839 --> 00:00:06,560
starting

4
00:00:06,560 --> 00:00:09,760
with kevin talking about

5
00:00:09,760 --> 00:00:12,559
your sensor is my sensor weaponizing

6
00:00:12,559 --> 00:00:14,240
censorship infrastructure for

7
00:00:14,240 --> 00:00:17,120
availability

8
00:00:24,080 --> 00:00:27,119
awesome thank you so much one sec to get

9
00:00:27,119 --> 00:00:31,840
my screen share going

10
00:00:37,360 --> 00:00:39,440
all right can everybody see this you

11
00:00:39,440 --> 00:00:40,960
should get a thumbs up or a yes in the

12
00:00:40,960 --> 00:00:42,960
chat

13
00:00:42,960 --> 00:00:46,480
beautiful and everyone can hear me

14
00:00:46,960 --> 00:00:50,000
fantastic alrighty if at any point i

15
00:00:50,000 --> 00:00:51,520
stopped being audible just

16
00:00:51,520 --> 00:00:53,360
seriously cut me off interrupt me and

17
00:00:53,360 --> 00:00:56,239
let me know and we'll try and fix it

18
00:00:56,239 --> 00:00:59,839
i'm good to go whenever

19
00:01:01,840 --> 00:01:04,559
i assume yes cool alrighty hey everyone

20
00:01:04,559 --> 00:01:06,000
my name is kevin bach i'm from the

21
00:01:06,000 --> 00:01:07,600
university of maryland uh before i get

22
00:01:07,600 --> 00:01:08,960
started i do want to thank all the boot

23
00:01:08,960 --> 00:01:11,280
organizers matteus fong fay

24
00:01:11,280 --> 00:01:13,119
eric all the ae folks everyone behind

25
00:01:13,119 --> 00:01:14,479
the scenes pulling this off

26
00:01:14,479 --> 00:01:15,759
it's been a ton of work putting together

27
00:01:15,759 --> 00:01:17,200
the event and i've really been enjoying

28
00:01:17,200 --> 00:01:17,920
it so far

29
00:01:17,920 --> 00:01:19,600
um and i also have to give a shout out

30
00:01:19,600 --> 00:01:20,720
to all the other collaborators in the

31
00:01:20,720 --> 00:01:21,920
project who aren't up here with me

32
00:01:21,920 --> 00:01:23,040
because this really has been a team

33
00:01:23,040 --> 00:01:24,000
effort

34
00:01:24,000 --> 00:01:25,360
so today i'm going to be talking about

35
00:01:25,360 --> 00:01:27,360
how attackers can weaponize a key

36
00:01:27,360 --> 00:01:29,040
feature of censorship infrastructure

37
00:01:29,040 --> 00:01:31,119
to affect availability attacks and that

38
00:01:31,119 --> 00:01:32,960
features residual censorship

39
00:01:32,960 --> 00:01:34,320
before we get into that though let me

40
00:01:34,320 --> 00:01:35,600
give you a quick run-through of what

41
00:01:35,600 --> 00:01:37,360
nation-state censorship looks like today

42
00:01:37,360 --> 00:01:40,799
and how residual censorship works

43
00:01:40,799 --> 00:01:42,720
so let's say we have a user located

44
00:01:42,720 --> 00:01:44,479
inside some censoring regime and they're

45
00:01:44,479 --> 00:01:45,920
trying to communicate with some resource

46
00:01:45,920 --> 00:01:48,079
outside the country some website

47
00:01:48,079 --> 00:01:50,000
and as the user makes requests there is

48
00:01:50,000 --> 00:01:51,680
some censoring middle box that is

49
00:01:51,680 --> 00:01:53,360
performing deep packet inspection

50
00:01:53,360 --> 00:01:56,079
or dpi on those requests and they're

51
00:01:56,079 --> 00:01:57,759
basically searching for any forbidden

52
00:01:57,759 --> 00:01:59,439
keywords or content

53
00:01:59,439 --> 00:02:01,840
now as the user generates requests that

54
00:02:01,840 --> 00:02:02,880
the sensor is okay with

55
00:02:02,880 --> 00:02:05,759
these will bypass unaffected but if the

56
00:02:05,759 --> 00:02:07,360
user generates something forbidden

57
00:02:07,360 --> 00:02:09,440
in this case religion the sensor will

58
00:02:09,440 --> 00:02:11,120
then move to disrupt the connection and

59
00:02:11,120 --> 00:02:13,760
this happens in different ways

60
00:02:13,760 --> 00:02:15,440
a key feature though of many censorship

61
00:02:15,440 --> 00:02:17,120
systems is that they don't stop here

62
00:02:17,120 --> 00:02:18,959
they also have something called residual

63
00:02:18,959 --> 00:02:20,319
censorship

64
00:02:20,319 --> 00:02:22,080
and residual censorship is a feature by

65
00:02:22,080 --> 00:02:24,080
which the sensor will continue to block

66
00:02:24,080 --> 00:02:25,599
all communication between these two

67
00:02:25,599 --> 00:02:26,319
hosts

68
00:02:26,319 --> 00:02:27,920
for some small period of time this is

69
00:02:27,920 --> 00:02:30,160
almost a punitive form of censorship

70
00:02:30,160 --> 00:02:32,080
so for example even if this user tries

71
00:02:32,080 --> 00:02:33,599
to make an innocuous request to the

72
00:02:33,599 --> 00:02:34,400
server

73
00:02:34,400 --> 00:02:36,560
if residual censorship is active the

74
00:02:36,560 --> 00:02:38,319
sensor will still disrupt this

75
00:02:38,319 --> 00:02:40,000
until that residual censorship time has

76
00:02:40,000 --> 00:02:42,400
elapsed

77
00:02:42,400 --> 00:02:43,519
now there are different types of

78
00:02:43,519 --> 00:02:45,120
residual censorship though and we can

79
00:02:45,120 --> 00:02:46,400
categorize these

80
00:02:46,400 --> 00:02:48,080
by how much information the sensor

81
00:02:48,080 --> 00:02:50,000
remembers when it activates residual

82
00:02:50,000 --> 00:02:52,000
censorship so for example when this

83
00:02:52,000 --> 00:02:53,360
client server are talking

84
00:02:53,360 --> 00:02:55,120
this is a source ip address and port

85
00:02:55,120 --> 00:02:56,640
communicated with the destination ipad

86
00:02:56,640 --> 00:02:58,000
or support

87
00:02:58,000 --> 00:02:59,920
if the sensor remembers all four of

88
00:02:59,920 --> 00:03:01,280
these species of information

89
00:03:01,280 --> 00:03:03,120
the ip port ip port source and

90
00:03:03,120 --> 00:03:04,959
destination we can call this

91
00:03:04,959 --> 00:03:07,760
four tuple residual censorship if it

92
00:03:07,760 --> 00:03:09,680
remembers only the source ip address and

93
00:03:09,680 --> 00:03:11,440
the destination ip address import

94
00:03:11,440 --> 00:03:13,120
we call this three tuple residual

95
00:03:13,120 --> 00:03:15,040
censorship and so on

96
00:03:15,040 --> 00:03:16,400
what you'll notice is that the fewer

97
00:03:16,400 --> 00:03:18,080
pieces of information that the sensor

98
00:03:18,080 --> 00:03:18,959
holds onto

99
00:03:18,959 --> 00:03:20,640
the more aggressive this residual

100
00:03:20,640 --> 00:03:23,120
sensors is with four tuple residual

101
00:03:23,120 --> 00:03:23,760
censorship

102
00:03:23,760 --> 00:03:25,200
the client only needs to choose a new

103
00:03:25,200 --> 00:03:27,200
source port and this happens by default

104
00:03:27,200 --> 00:03:28,640
and then they'll be unaffected by this

105
00:03:28,640 --> 00:03:30,799
residual censorship with something like

106
00:03:30,799 --> 00:03:31,120
two

107
00:03:31,120 --> 00:03:33,280
for residual censorship though the ports

108
00:03:33,280 --> 00:03:34,879
the client and server use don't matter

109
00:03:34,879 --> 00:03:36,239
they'll be entirely cut off from one

110
00:03:36,239 --> 00:03:39,519
another once this is activated

111
00:03:39,920 --> 00:03:41,200
in this talk i'm going to show that this

112
00:03:41,200 --> 00:03:43,280
feature of censorship infrastructure

113
00:03:43,280 --> 00:03:44,879
can be weaponized and it can be

114
00:03:44,879 --> 00:03:46,640
weaponized specifically to block any

115
00:03:46,640 --> 00:03:47,599
pair of hosts

116
00:03:47,599 --> 00:03:49,440
innocent hosts from communicating across

117
00:03:49,440 --> 00:03:51,040
the sensor's borders even if what

118
00:03:51,040 --> 00:03:52,239
they're communicating is completely

119
00:03:52,239 --> 00:03:53,360
innocuous

120
00:03:53,360 --> 00:03:54,560
the idea of this attack is pretty

121
00:03:54,560 --> 00:03:55,920
straightforward but the details get a

122
00:03:55,920 --> 00:03:56,640
little tricky

123
00:03:56,640 --> 00:03:58,000
so i want to first give you the

124
00:03:58,000 --> 00:03:59,439
intuition for what this attack will look

125
00:03:59,439 --> 00:04:00,000
like

126
00:04:00,000 --> 00:04:01,519
and then we'll get into the details of

127
00:04:01,519 --> 00:04:03,360
both how residual censorship works

128
00:04:03,360 --> 00:04:04,480
around the world today

129
00:04:04,480 --> 00:04:07,760
and what we need to pull this attack off

130
00:04:07,760 --> 00:04:09,599
so to pull off this attack we have some

131
00:04:09,599 --> 00:04:11,439
off path attacker and we'll assume ahead

132
00:04:11,439 --> 00:04:12,879
of time that the attacker already knows

133
00:04:12,879 --> 00:04:14,799
the ip addresses of the victim client

134
00:04:14,799 --> 00:04:16,798
and server that they're attacking

135
00:04:16,798 --> 00:04:18,238
what the attacker will do is it will

136
00:04:18,238 --> 00:04:20,238
spoof their source ip address to be that

137
00:04:20,238 --> 00:04:22,000
of the client

138
00:04:22,000 --> 00:04:23,759
and then it issues a forbidden request

139
00:04:23,759 --> 00:04:25,600
that crosses the sensor's borders

140
00:04:25,600 --> 00:04:28,400
destined to the victim server of course

141
00:04:28,400 --> 00:04:30,240
the sensor the sensor sees this

142
00:04:30,240 --> 00:04:31,919
and assumes that the client just made

143
00:04:31,919 --> 00:04:33,759
this request to the server

144
00:04:33,759 --> 00:04:35,600
and this then activates residual

145
00:04:35,600 --> 00:04:37,520
censorship within within the sensor

146
00:04:37,520 --> 00:04:39,520
between this client server

147
00:04:39,520 --> 00:04:40,720
what this means is that if the client

148
00:04:40,720 --> 00:04:42,560
now tries to make an innocuous request

149
00:04:42,560 --> 00:04:44,160
while this residual censorship time is

150
00:04:44,160 --> 00:04:45,120
still active

151
00:04:45,120 --> 00:04:46,720
they will be unable to the sensor will

152
00:04:46,720 --> 00:04:48,639
step in and censor this even though it's

153
00:04:48,639 --> 00:04:51,199
completely benign

154
00:04:51,199 --> 00:04:52,320
so what this is showing is that

155
00:04:52,320 --> 00:04:54,080
attackers can restrict arbitrary benign

156
00:04:54,080 --> 00:04:55,600
communication from crossing sensors

157
00:04:55,600 --> 00:04:57,440
borders

158
00:04:57,440 --> 00:04:59,040
the attack conceptually is simple but

159
00:04:59,040 --> 00:05:00,639
like i said the devil's in the details

160
00:05:00,639 --> 00:05:01,919
there's a few questions we need to

161
00:05:01,919 --> 00:05:03,840
answer to evaluate this attack so for

162
00:05:03,840 --> 00:05:04,560
example

163
00:05:04,560 --> 00:05:06,560
how long does a residual censorship last

164
00:05:06,560 --> 00:05:08,479
in various places around the world

165
00:05:08,479 --> 00:05:10,080
are there limitations to what the sensor

166
00:05:10,080 --> 00:05:12,080
will block or process

167
00:05:12,080 --> 00:05:13,840
many sensors and middle boxes are also

168
00:05:13,840 --> 00:05:15,759
stateful to tcp they try to track the

169
00:05:15,759 --> 00:05:16,880
through a handshake

170
00:05:16,880 --> 00:05:18,479
how can we even trigger these sensors in

171
00:05:18,479 --> 00:05:20,479
a stateless manner and then

172
00:05:20,479 --> 00:05:22,240
arguably most importantly how can we

173
00:05:22,240 --> 00:05:23,840
even test and evaluate this attack

174
00:05:23,840 --> 00:05:25,600
ethically

175
00:05:25,600 --> 00:05:26,880
so for the rest of this talk i'm going

176
00:05:26,880 --> 00:05:28,479
to split this into two sections to break

177
00:05:28,479 --> 00:05:29,919
down these questions

178
00:05:29,919 --> 00:05:31,520
first i'm going to present more details

179
00:05:31,520 --> 00:05:32,880
on the current state of residual

180
00:05:32,880 --> 00:05:34,320
censorship around the world

181
00:05:34,320 --> 00:05:35,759
to study this we obtained multiple

182
00:05:35,759 --> 00:05:37,840
vantage points within censoring regimes

183
00:05:37,840 --> 00:05:38,720
in iran

184
00:05:38,720 --> 00:05:41,199
china and kazakhstan we find significant

185
00:05:41,199 --> 00:05:42,960
differences actually in how residual

186
00:05:42,960 --> 00:05:44,720
censorship systems are implemented

187
00:05:44,720 --> 00:05:47,360
how long they last when they take effect

188
00:05:47,360 --> 00:05:49,199
all of these things

189
00:05:49,199 --> 00:05:52,000
impact the efficacy of the attack next

190
00:05:52,000 --> 00:05:53,039
i'm going to speak to how we can go

191
00:05:53,039 --> 00:05:54,479
about weaponizing this feature

192
00:05:54,479 --> 00:05:55,759
i'll show how we designed ethical

193
00:05:55,759 --> 00:05:57,919
experiments using a tool called sp3

194
00:05:57,919 --> 00:06:00,800
stands for a simple practical and safe

195
00:06:00,800 --> 00:06:02,400
packet spoofing protocol

196
00:06:02,400 --> 00:06:03,840
and then we use this to launch this

197
00:06:03,840 --> 00:06:05,600
attack against ourselves hosts we

198
00:06:05,600 --> 00:06:06,319
control

199
00:06:06,319 --> 00:06:07,840
from over a dozen vantage points in

200
00:06:07,840 --> 00:06:09,199
different geographic locations around

201
00:06:09,199 --> 00:06:10,479
the world

202
00:06:10,479 --> 00:06:12,800
so first let's talk about what does

203
00:06:12,800 --> 00:06:16,319
residual censorship look like today

204
00:06:17,360 --> 00:06:19,120
so first we looked into what protocols

205
00:06:19,120 --> 00:06:20,880
are affected by residual censorship

206
00:06:20,880 --> 00:06:22,080
different countries censor different

207
00:06:22,080 --> 00:06:23,759
things and so we started by testing

208
00:06:23,759 --> 00:06:25,120
these six protocols

209
00:06:25,120 --> 00:06:28,319
http https with s and i and going

210
00:06:28,319 --> 00:06:29,759
forward for simplicity i'm just going to

211
00:06:29,759 --> 00:06:31,360
refer to this as sni

212
00:06:31,360 --> 00:06:33,520
uh https with esni or encrypted servant

213
00:06:33,520 --> 00:06:35,120
of indication i'm going to refer to this

214
00:06:35,120 --> 00:06:38,560
simply just as esmi dns

215
00:06:38,560 --> 00:06:41,199
smtp which is actually censored in china

216
00:06:41,199 --> 00:06:42,560
and other and i'll come back to this

217
00:06:42,560 --> 00:06:44,080
other in a moment

218
00:06:44,080 --> 00:06:45,680
we find that not all protocols even

219
00:06:45,680 --> 00:06:46,639
though they're censored by these

220
00:06:46,639 --> 00:06:47,520
countries

221
00:06:47,520 --> 00:06:49,199
are actually affected by residual

222
00:06:49,199 --> 00:06:50,560
censorship in the first place

223
00:06:50,560 --> 00:06:52,080
and actually the mechanism by which

224
00:06:52,080 --> 00:06:53,919
residual censorship is implemented

225
00:06:53,919 --> 00:06:55,120
is not consistent between these

226
00:06:55,120 --> 00:06:57,199
countries the great firewall of china

227
00:06:57,199 --> 00:06:58,160
for example injects

228
00:06:58,160 --> 00:07:00,000
resets for residual censorship and they

229
00:07:00,000 --> 00:07:01,520
don't do this until after the three-way

230
00:07:01,520 --> 00:07:02,800
handshake completes

231
00:07:02,800 --> 00:07:04,800
whereas in iran and kazakhstan they use

232
00:07:04,800 --> 00:07:06,560
null routing or black holing

233
00:07:06,560 --> 00:07:09,759
to affect residual sensorship this other

234
00:07:09,759 --> 00:07:11,039
here on this table by the way

235
00:07:11,039 --> 00:07:12,880
this refers to the iranian particle

236
00:07:12,880 --> 00:07:14,960
filter iran currently has a system

237
00:07:14,960 --> 00:07:16,800
running where if you use any protocol

238
00:07:16,800 --> 00:07:18,800
they don't permit on specific ports

239
00:07:18,800 --> 00:07:20,240
regardless of the data you're trying to

240
00:07:20,240 --> 00:07:22,800
transfer that connection is

241
00:07:22,800 --> 00:07:24,800
censored so this other is literally a

242
00:07:24,800 --> 00:07:26,560
catch-all for any protocol that iran

243
00:07:26,560 --> 00:07:29,280
does not approve of

244
00:07:29,280 --> 00:07:30,960
we also find that the type of residual

245
00:07:30,960 --> 00:07:32,479
censorship is not consistent

246
00:07:32,479 --> 00:07:34,479
either between countries or even between

247
00:07:34,479 --> 00:07:36,479
protocols censored by each country

248
00:07:36,479 --> 00:07:38,240
china for example has three tuple

249
00:07:38,240 --> 00:07:40,240
residual censorship for http

250
00:07:40,240 --> 00:07:42,720
and https with s and i whether esi

251
00:07:42,720 --> 00:07:43,840
censorship is actually no more

252
00:07:43,840 --> 00:07:44,639
complicated

253
00:07:44,639 --> 00:07:46,479
it starts with four tuple residual

254
00:07:46,479 --> 00:07:48,319
censorship but if you trigger it

255
00:07:48,319 --> 00:07:50,080
multiple times while four tuple is

256
00:07:50,080 --> 00:07:50,639
active

257
00:07:50,639 --> 00:07:52,720
it then turns on three two positional

258
00:07:52,720 --> 00:07:54,560
censorship it gets more aggressive than

259
00:07:54,560 --> 00:07:55,919
where you poke it

260
00:07:55,919 --> 00:07:57,599
ironic kha'zix on the other hand are

261
00:07:57,599 --> 00:07:59,680
purely for tuple residual censorship

262
00:07:59,680 --> 00:08:01,680
and all these things again will affect

263
00:08:01,680 --> 00:08:04,720
the efficacy of the attack

264
00:08:04,960 --> 00:08:07,199
we next tested the duration of residual

265
00:08:07,199 --> 00:08:09,280
censorship and this also varies both

266
00:08:09,280 --> 00:08:10,319
between countries

267
00:08:10,319 --> 00:08:12,800
and within each country for example in

268
00:08:12,800 --> 00:08:15,039
china the esni residual censorship

269
00:08:15,039 --> 00:08:17,680
runs for somewhere between 120 and 180

270
00:08:17,680 --> 00:08:18,560
seconds

271
00:08:18,560 --> 00:08:21,039
whereas their http censorship is only 90

272
00:08:21,039 --> 00:08:22,160
seconds

273
00:08:22,160 --> 00:08:23,440
in iran the difference is even more

274
00:08:23,440 --> 00:08:25,520
stark the protocol filter when it's

275
00:08:25,520 --> 00:08:27,280
active only affects connections for 60

276
00:08:27,280 --> 00:08:28,000
seconds

277
00:08:28,000 --> 00:08:30,080
but its sni censorship runs for a

278
00:08:30,080 --> 00:08:31,919
minimum of 180 seconds

279
00:08:31,919 --> 00:08:33,919
and this asterisk here refers to that in

280
00:08:33,919 --> 00:08:35,599
some experiments we saw it last even

281
00:08:35,599 --> 00:08:36,080
longer

282
00:08:36,080 --> 00:08:38,880
up to five minutes or more as we'll see

283
00:08:38,880 --> 00:08:39,519
shortly

284
00:08:39,519 --> 00:08:42,399
the longer residual censorship lasts the

285
00:08:42,399 --> 00:08:44,000
easier it is to weaponize for the

286
00:08:44,000 --> 00:08:45,680
attacker the lower the cost is

287
00:08:45,680 --> 00:08:48,719
to pull off this attack

288
00:08:49,440 --> 00:08:51,519
we also tested if residual censorship is

289
00:08:51,519 --> 00:08:52,560
bi-directional

290
00:08:52,560 --> 00:08:54,080
if it affects traffic entering the

291
00:08:54,080 --> 00:08:55,839
country in the same way that does

292
00:08:55,839 --> 00:08:57,680
traffic leaving the country

293
00:08:57,680 --> 00:08:59,680
in general we find this is true every

294
00:08:59,680 --> 00:09:01,680
every protocol and system we tested with

295
00:09:01,680 --> 00:09:03,360
the exception of the iranian protocol

296
00:09:03,360 --> 00:09:04,560
filter

297
00:09:04,560 --> 00:09:06,560
acted bidirectionally both affected

298
00:09:06,560 --> 00:09:08,320
traffic and

299
00:09:08,320 --> 00:09:10,000
activated residual censorship in both

300
00:09:10,000 --> 00:09:11,440
directions

301
00:09:11,440 --> 00:09:12,720
importantly though we find that the

302
00:09:12,720 --> 00:09:14,720
sensor is still tracking the direction

303
00:09:14,720 --> 00:09:15,680
of traffic

304
00:09:15,680 --> 00:09:17,600
so once residual censorship is triggered

305
00:09:17,600 --> 00:09:18,720
in one direction

306
00:09:18,720 --> 00:09:20,240
it's only actually in effect for that

307
00:09:20,240 --> 00:09:22,240
one direction so even though you can

308
00:09:22,240 --> 00:09:22,880
trigger

309
00:09:22,880 --> 00:09:24,640
censorship in either direction the

310
00:09:24,640 --> 00:09:26,160
sensor knows which direction is the

311
00:09:26,160 --> 00:09:28,880
problematic one

312
00:09:29,440 --> 00:09:31,440
so in summary residual censorship is

313
00:09:31,440 --> 00:09:32,959
implemented differently around the world

314
00:09:32,959 --> 00:09:34,640
there's different censorship mechanisms

315
00:09:34,640 --> 00:09:36,560
resets signal routing and others

316
00:09:36,560 --> 00:09:37,920
different types of censorship even

317
00:09:37,920 --> 00:09:39,760
within countries they act

318
00:09:39,760 --> 00:09:41,279
bidirectionally but the direction still

319
00:09:41,279 --> 00:09:43,440
matters

320
00:09:43,440 --> 00:09:45,519
now that we have this info in the second

321
00:09:45,519 --> 00:09:46,480
half of this talk

322
00:09:46,480 --> 00:09:48,080
i'm going to discuss how we can use this

323
00:09:48,080 --> 00:09:51,200
to weaponize residual censorship

324
00:09:51,200 --> 00:09:52,640
before we get there though we need to

325
00:09:52,640 --> 00:09:54,240
ask a different question we need to

326
00:09:54,240 --> 00:09:55,440
solve this question

327
00:09:55,440 --> 00:09:57,360
how can we trigger these sensors in the

328
00:09:57,360 --> 00:09:58,560
first place

329
00:09:58,560 --> 00:10:00,160
every sensor i've discussed so far today

330
00:10:00,160 --> 00:10:02,560
is stateful they try to track the state

331
00:10:02,560 --> 00:10:04,160
of the through a handshake

332
00:10:04,160 --> 00:10:05,760
so it shouldn't be enough just to be

333
00:10:05,760 --> 00:10:07,600
able to issue requests while spoofing

334
00:10:07,600 --> 00:10:09,200
your source ip address this should not

335
00:10:09,200 --> 00:10:10,560
work

336
00:10:10,560 --> 00:10:12,240
fortunately we actually ran into this

337
00:10:12,240 --> 00:10:13,760
this problem in a work we ran

338
00:10:13,760 --> 00:10:15,360
concurrently to this one

339
00:10:15,360 --> 00:10:16,800
and this will appear later this year in

340
00:10:16,800 --> 00:10:18,399
houston security where we

341
00:10:18,399 --> 00:10:20,720
found that middle boxes were also

342
00:10:20,720 --> 00:10:22,800
weaponizable to perform tcp reflected

343
00:10:22,800 --> 00:10:25,120
amplification attacks

344
00:10:25,120 --> 00:10:26,399
in that work we detailed how we were

345
00:10:26,399 --> 00:10:27,920
able to use a machine learning algorithm

346
00:10:27,920 --> 00:10:30,160
to search for ways to elicit responses

347
00:10:30,160 --> 00:10:31,600
from these middle boxes

348
00:10:31,600 --> 00:10:34,079
and what we found was that metal boxes

349
00:10:34,079 --> 00:10:35,519
aren't actually doing a very good job

350
00:10:35,519 --> 00:10:36,560
tracking the state of three-way

351
00:10:36,560 --> 00:10:37,440
handshakes

352
00:10:37,440 --> 00:10:38,720
and in fact we could trigger these

353
00:10:38,720 --> 00:10:40,880
middle boxes without properly completing

354
00:10:40,880 --> 00:10:43,920
any three handshake in total we found

355
00:10:43,920 --> 00:10:45,360
five packet sequences

356
00:10:45,360 --> 00:10:47,279
that when we put forbidden requests in

357
00:10:47,279 --> 00:10:49,440
them trigger a large fraction of little

358
00:10:49,440 --> 00:10:52,399
boxes around the worlds

359
00:10:52,399 --> 00:10:54,240
for this paper what we use is we can

360
00:10:54,240 --> 00:10:55,680
send a sin packet

361
00:10:55,680 --> 00:10:57,600
followed by a push act packet containing

362
00:10:57,600 --> 00:10:59,120
a forbidden request

363
00:10:59,120 --> 00:11:00,880
and this sequence of packets is enough

364
00:11:00,880 --> 00:11:02,320
to successfully trigger residual

365
00:11:02,320 --> 00:11:03,279
censorship

366
00:11:03,279 --> 00:11:04,720
even if these sensors are trying to

367
00:11:04,720 --> 00:11:06,079
properly track the state of the through

368
00:11:06,079 --> 00:11:08,320
a handshake

369
00:11:08,320 --> 00:11:10,079
now that we have the ability to trigger

370
00:11:10,079 --> 00:11:12,320
sensors we need to work on how we can

371
00:11:12,320 --> 00:11:14,720
ethically evaluate this attack our goal

372
00:11:14,720 --> 00:11:16,240
here is to be able to attack ourselves

373
00:11:16,240 --> 00:11:17,839
without affecting any other hosts

374
00:11:17,839 --> 00:11:19,680
so we need the ability to spoof traffic

375
00:11:19,680 --> 00:11:22,079
either to or from some sensitive regime

376
00:11:22,079 --> 00:11:23,519
we want to do this specifically between

377
00:11:23,519 --> 00:11:25,600
hosts we control we also need to have

378
00:11:25,600 --> 00:11:28,000
full control over the packets we send

379
00:11:28,000 --> 00:11:29,600
so the mechanism we used for this was

380
00:11:29,600 --> 00:11:32,240
sp3

381
00:11:32,640 --> 00:11:33,920
we'll walk you through our experiment

382
00:11:33,920 --> 00:11:36,079
setup we have our client machine

383
00:11:36,079 --> 00:11:38,240
server machine and we use sp3 as the

384
00:11:38,240 --> 00:11:39,279
attacker

385
00:11:39,279 --> 00:11:41,279
now a key feature of sp3 is that it

386
00:11:41,279 --> 00:11:43,760
requires the receiver of spoofs traffic

387
00:11:43,760 --> 00:11:45,680
to consent to receiving that spoof

388
00:11:45,680 --> 00:11:48,560
traffic before sp3 will send it

389
00:11:48,560 --> 00:11:49,839
so the experiment setup looks something

390
00:11:49,839 --> 00:11:52,240
like this we have a server connects to

391
00:11:52,240 --> 00:11:53,040
sp3

392
00:11:53,040 --> 00:11:54,639
and it can sense to receiving the

393
00:11:54,639 --> 00:11:57,200
spoofed traffic

394
00:11:57,200 --> 00:11:59,519
next we use sp3 to spoof the source

395
00:11:59,519 --> 00:12:00,880
address of the client

396
00:12:00,880 --> 00:12:02,720
and then send a packet sequence

397
00:12:02,720 --> 00:12:04,320
containing a forbidden request

398
00:12:04,320 --> 00:12:06,639
something the sensor forbids to that

399
00:12:06,639 --> 00:12:08,320
server or pretending to be our client

400
00:12:08,320 --> 00:12:11,200
which is located somewhere else

401
00:12:11,200 --> 00:12:12,800
this should trigger the sensor and

402
00:12:12,800 --> 00:12:15,440
initiate residual censorship

403
00:12:15,440 --> 00:12:16,959
next the client issues their own

404
00:12:16,959 --> 00:12:19,200
innocuous requests to the server

405
00:12:19,200 --> 00:12:21,440
and we can see if the sensor interfered

406
00:12:21,440 --> 00:12:24,079
with this connection

407
00:12:24,079 --> 00:12:25,680
now recall that the direction of

408
00:12:25,680 --> 00:12:27,440
residual censorship matters so the

409
00:12:27,440 --> 00:12:29,680
attacker needs to be on the same side

410
00:12:29,680 --> 00:12:32,320
of the sensor as the victim client for

411
00:12:32,320 --> 00:12:34,160
these experiments we use the public sp3

412
00:12:34,160 --> 00:12:35,680
instance that's currently being run by

413
00:12:35,680 --> 00:12:36,959
the university of washington

414
00:12:36,959 --> 00:12:39,440
and that's outside sensor regimes that

415
00:12:39,440 --> 00:12:40,959
means for our clients we use test

416
00:12:40,959 --> 00:12:42,639
locations located geographically

417
00:12:42,639 --> 00:12:44,240
dispersed around the worlds

418
00:12:44,240 --> 00:12:46,160
and ran servers inside our sensory

419
00:12:46,160 --> 00:12:48,320
regimes to test this out

420
00:12:48,320 --> 00:12:49,519
so to show you specifically what this

421
00:12:49,519 --> 00:12:51,680
looks like this is our experiment setup

422
00:12:51,680 --> 00:12:54,079
we had our attacker sp3 in washington

423
00:12:54,079 --> 00:12:56,160
we had 16 total external vantage points

424
00:12:56,160 --> 00:12:57,519
scattered around the worlds and these

425
00:12:57,519 --> 00:12:58,959
were our victim clients

426
00:12:58,959 --> 00:13:00,560
and i know there aren't actually 16

427
00:13:00,560 --> 00:13:02,560
black dots here there were some vantage

428
00:13:02,560 --> 00:13:03,440
points that were

429
00:13:03,440 --> 00:13:05,440
either geolocated the same location or

430
00:13:05,440 --> 00:13:06,959
within the same city so they show up in

431
00:13:06,959 --> 00:13:09,279
the same spot on the graph

432
00:13:09,279 --> 00:13:10,639
you can see the sensor nation states

433
00:13:10,639 --> 00:13:13,200
here in red and our location of servers

434
00:13:13,200 --> 00:13:15,200
within each of these sensor nation

435
00:13:15,200 --> 00:13:17,680
states here

436
00:13:17,839 --> 00:13:19,760
so let's talk about our results these

437
00:13:19,760 --> 00:13:20,880
are the results across all of the

438
00:13:20,880 --> 00:13:22,399
protocols we could trigger

439
00:13:22,399 --> 00:13:24,079
for every location to every other

440
00:13:24,079 --> 00:13:26,240
location on the left you can see all the

441
00:13:26,240 --> 00:13:28,000
victim locations we tested

442
00:13:28,000 --> 00:13:31,839
australia china india iran ireland japan

443
00:13:31,839 --> 00:13:35,600
kazakhstan russia the uae and the usa

444
00:13:35,600 --> 00:13:36,959
on the top you can see the destination

445
00:13:36,959 --> 00:13:38,320
servers we tested these were in

446
00:13:38,320 --> 00:13:39,360
kazakhstan

447
00:13:39,360 --> 00:13:41,040
in iran and in two different locations

448
00:13:41,040 --> 00:13:42,639
within china

449
00:13:42,639 --> 00:13:45,120
so here are the results first you'll see

450
00:13:45,120 --> 00:13:46,399
that in some countries the attack was

451
00:13:46,399 --> 00:13:47,279
highly reliable

452
00:13:47,279 --> 00:13:50,320
for example both protocols we tested in

453
00:13:50,320 --> 00:13:53,199
iran and https in kazakhstan worked with

454
00:13:53,199 --> 00:13:54,880
a hundred percent reliability against

455
00:13:54,880 --> 00:13:56,560
every client we tested the check marks

456
00:13:56,560 --> 00:13:58,959
in this table denote 100 reliability

457
00:13:58,959 --> 00:14:01,199
x marks denote zero you'll see

458
00:14:01,199 --> 00:14:02,639
kazakhstan is interesting here and it's

459
00:14:02,639 --> 00:14:03,920
not quite as consistent

460
00:14:03,920 --> 00:14:05,760
as iran and we actually found the

461
00:14:05,760 --> 00:14:07,199
strange result where the protocol we

462
00:14:07,199 --> 00:14:09,040
triggered censorship with mattered

463
00:14:09,040 --> 00:14:11,199
more so than the location of the victim

464
00:14:11,199 --> 00:14:13,440
if we trigger censorship with http

465
00:14:13,440 --> 00:14:14,959
we get different reliability for this

466
00:14:14,959 --> 00:14:17,199
attack than with hdbs

467
00:14:17,199 --> 00:14:18,639
we hypothesize in the paper that

468
00:14:18,639 --> 00:14:20,480
kazakhstan has physically fewer

469
00:14:20,480 --> 00:14:22,639
https censoring middle boxes that our

470
00:14:22,639 --> 00:14:24,160
traffic is being load balanced across

471
00:14:24,160 --> 00:14:25,839
compared to http which they've been

472
00:14:25,839 --> 00:14:28,880
censored for longer censoring for longer

473
00:14:28,880 --> 00:14:30,240
on the flip side you'll see that china

474
00:14:30,240 --> 00:14:32,000
is much less reliable there are some

475
00:14:32,000 --> 00:14:33,279
victims for which we could reliably

476
00:14:33,279 --> 00:14:34,399
launch this attack

477
00:14:34,399 --> 00:14:35,839
others against which the attack never

478
00:14:35,839 --> 00:14:37,199
worked and still others in which the

479
00:14:37,199 --> 00:14:39,040
attacks work some of the time

480
00:14:39,040 --> 00:14:40,560
the next few minutes i want to dig into

481
00:14:40,560 --> 00:14:44,079
why we think these failures occurred to

482
00:14:44,079 --> 00:14:46,399
get insights into why this attack failed

483
00:14:46,399 --> 00:14:48,560
for the cases that it did we developed

484
00:14:48,560 --> 00:14:49,760
the ability to run a

485
00:14:49,760 --> 00:14:52,560
source spoofed trace route so we would

486
00:14:52,560 --> 00:14:52,880
have

487
00:14:52,880 --> 00:14:55,360
sp3 pretend to be our client and issue a

488
00:14:55,360 --> 00:14:56,399
trace route

489
00:14:56,399 --> 00:14:58,399
record the respondents responses from

490
00:14:58,399 --> 00:15:00,240
the client and then reissue that same

491
00:15:00,240 --> 00:15:03,120
tracer out from the client

492
00:15:03,120 --> 00:15:04,959
by comparing the network paths they take

493
00:15:04,959 --> 00:15:06,639
and then running experiments to see how

494
00:15:06,639 --> 00:15:08,800
how many hops away the sensor is we can

495
00:15:08,800 --> 00:15:10,639
estimate at which points these paths

496
00:15:10,639 --> 00:15:11,760
converge

497
00:15:11,760 --> 00:15:14,480
to the server

498
00:15:15,040 --> 00:15:16,560
what this shows us when we look at these

499
00:15:16,560 --> 00:15:18,399
traceroutes is that in many cases when

500
00:15:18,399 --> 00:15:19,440
we fail

501
00:15:19,440 --> 00:15:21,120
the attacker's traffic would enter the

502
00:15:21,120 --> 00:15:22,880
country at a geographically different

503
00:15:22,880 --> 00:15:25,279
point than the victim clients

504
00:15:25,279 --> 00:15:26,480
what means that what's happening here

505
00:15:26,480 --> 00:15:28,160
what we believe is that the attacker is

506
00:15:28,160 --> 00:15:29,519
successfully triggering his israel

507
00:15:29,519 --> 00:15:30,320
censorship

508
00:15:30,320 --> 00:15:31,920
but they've actually just triggered a

509
00:15:31,920 --> 00:15:33,600
different middle box entirely from the

510
00:15:33,600 --> 00:15:36,000
one that processed the victim's packets

511
00:15:36,000 --> 00:15:37,440
this shows this attack is actually

512
00:15:37,440 --> 00:15:39,360
partially limited by the location of the

513
00:15:39,360 --> 00:15:41,040
attacker geographically

514
00:15:41,040 --> 00:15:44,319
relative to that of the client

515
00:15:45,040 --> 00:15:46,560
next i want to discuss what it takes to

516
00:15:46,560 --> 00:15:48,560
sustain this attack so recall that

517
00:15:48,560 --> 00:15:49,680
residual censorship

518
00:15:49,680 --> 00:15:51,680
doesn't last that long we talked earlier

519
00:15:51,680 --> 00:15:53,040
it was really three to five minutes at

520
00:15:53,040 --> 00:15:53,759
the most

521
00:15:53,759 --> 00:15:55,199
so how could an attack keep this going

522
00:15:55,199 --> 00:15:57,120
for longer

523
00:15:57,120 --> 00:15:58,320
the answer to this question really

524
00:15:58,320 --> 00:15:59,680
depends on the type of residual

525
00:15:59,680 --> 00:16:00,560
censorship

526
00:16:00,560 --> 00:16:02,720
but our goal here is to be able to block

527
00:16:02,720 --> 00:16:04,959
and prevent some client ip address

528
00:16:04,959 --> 00:16:06,800
from communicating with some server ip

529
00:16:06,800 --> 00:16:08,000
address in port

530
00:16:08,000 --> 00:16:09,279
but the amount of work the attacker

531
00:16:09,279 --> 00:16:11,040
needs to do again depends on that type

532
00:16:11,040 --> 00:16:13,360
of residual censorship

533
00:16:13,360 --> 00:16:15,040
recall that in four tuple residual

534
00:16:15,040 --> 00:16:17,360
censorship the sensor remembers the

535
00:16:17,360 --> 00:16:18,880
client's ip address

536
00:16:18,880 --> 00:16:21,440
and their source port the problem is the

537
00:16:21,440 --> 00:16:22,959
attacker can't guess the client's source

538
00:16:22,959 --> 00:16:25,120
port it will be random every time

539
00:16:25,120 --> 00:16:26,959
so in order to make four tuple residual

540
00:16:26,959 --> 00:16:28,639
censorship useful to the attacker

541
00:16:28,639 --> 00:16:31,040
what the attacker has to do is simply

542
00:16:31,040 --> 00:16:33,440
re-trigger censorship from all 65

543
00:16:33,440 --> 00:16:37,839
535 source ports

544
00:16:37,839 --> 00:16:39,360
recall though that resistor censorship

545
00:16:39,360 --> 00:16:41,279
only lasts for a certain amount of time

546
00:16:41,279 --> 00:16:43,120
so can the attacker act fast enough to

547
00:16:43,120 --> 00:16:45,680
block all of these ports

548
00:16:45,680 --> 00:16:47,360
we can calculate the speed required to

549
00:16:47,360 --> 00:16:49,120
keep this attack going indefinitely

550
00:16:49,120 --> 00:16:50,720
we can calculate this based on the size

551
00:16:50,720 --> 00:16:52,320
of the packet sequence required to

552
00:16:52,320 --> 00:16:54,399
trigger residual censorship

553
00:16:54,399 --> 00:16:57,839
times 65 535 for all the ports we must

554
00:16:57,839 --> 00:16:58,639
send

555
00:16:58,639 --> 00:17:00,240
divided by the duration that residual

556
00:17:00,240 --> 00:17:02,000
censorship lasts

557
00:17:02,000 --> 00:17:04,319
to use kazakhstan for example uh if we

558
00:17:04,319 --> 00:17:05,039
want to use

559
00:17:05,039 --> 00:17:08,720
http residual censorship it requires 145

560
00:17:08,720 --> 00:17:10,160
bytes to trigger the censorship

561
00:17:10,160 --> 00:17:11,839
this is a syn packet followed by a

562
00:17:11,839 --> 00:17:13,599
pushback packet containing a forbidden

563
00:17:13,599 --> 00:17:15,359
http query

564
00:17:15,359 --> 00:17:17,839
and this lasts for 120 seconds when you

565
00:17:17,839 --> 00:17:19,599
do this map out this means the attacker

566
00:17:19,599 --> 00:17:21,199
only needs to hold a network speed of

567
00:17:21,199 --> 00:17:23,359
634 kilobits per second

568
00:17:23,359 --> 00:17:26,720
this is not very fast with three cooper

569
00:17:26,720 --> 00:17:28,240
residual censorship this actually gets

570
00:17:28,240 --> 00:17:29,280
even easier

571
00:17:29,280 --> 00:17:31,039
with three tuple the sensor doesn't

572
00:17:31,039 --> 00:17:32,799
remember the client source port at all

573
00:17:32,799 --> 00:17:34,480
we don't need to play any of these games

574
00:17:34,480 --> 00:17:36,160
all we need to do is trigger it once

575
00:17:36,160 --> 00:17:38,320
per duration that we want this to run

576
00:17:38,320 --> 00:17:39,840
which means in china if we want to do

577
00:17:39,840 --> 00:17:40,320
this

578
00:17:40,320 --> 00:17:42,480
for http the attacker just needs to be

579
00:17:42,480 --> 00:17:43,440
able to sustain

580
00:17:43,440 --> 00:17:46,559
13 bits per second this shows that a

581
00:17:46,559 --> 00:17:47,520
weak attacker

582
00:17:47,520 --> 00:17:49,039
a very weak attacker can launch this

583
00:17:49,039 --> 00:17:50,400
attack and launch this attack

584
00:17:50,400 --> 00:17:52,000
effectively

585
00:17:52,000 --> 00:17:53,280
but it actually gets worse than what i'm

586
00:17:53,280 --> 00:17:55,039
describing and the reason for this is

587
00:17:55,039 --> 00:17:57,120
that some of the sensors we described

588
00:17:57,120 --> 00:17:59,039
the victims can actually help sustain

589
00:17:59,039 --> 00:18:01,200
the attacks on themselves

590
00:18:01,200 --> 00:18:02,720
we found that in both iran and

591
00:18:02,720 --> 00:18:04,880
kazakhstan the residual censorship

592
00:18:04,880 --> 00:18:07,840
timer resets if the client issues an

593
00:18:07,840 --> 00:18:10,160
innocuous request or issues any network

594
00:18:10,160 --> 00:18:10,720
traffic

595
00:18:10,720 --> 00:18:12,960
while that timer is active any traffic

596
00:18:12,960 --> 00:18:14,320
that matches the rule

597
00:18:14,320 --> 00:18:17,520
resets the timer of the rule what this

598
00:18:17,520 --> 00:18:19,760
means is that by default as the victim's

599
00:18:19,760 --> 00:18:22,559
tcp stack is retransmitting data

600
00:18:22,559 --> 00:18:24,799
that retransmissions are unknowingly

601
00:18:24,799 --> 00:18:29,440
sustaining the attack on themselves

602
00:18:29,440 --> 00:18:30,720
we also asked the question could the

603
00:18:30,720 --> 00:18:32,480
server detect this while the attacker is

604
00:18:32,480 --> 00:18:34,160
doing this and the answer unfortunately

605
00:18:34,160 --> 00:18:36,480
is if the attacker is smart enough no

606
00:18:36,480 --> 00:18:38,559
the attacker can limit the ttl of the

607
00:18:38,559 --> 00:18:40,000
packets the time to live

608
00:18:40,000 --> 00:18:41,679
and they can set this up such that it

609
00:18:41,679 --> 00:18:43,280
reaches the sensor

610
00:18:43,280 --> 00:18:45,120
but it will die before it reaches the

611
00:18:45,120 --> 00:18:47,120
server so this is the type of attack

612
00:18:47,120 --> 00:18:48,799
that an attacker can launch

613
00:18:48,799 --> 00:18:50,080
that the client will have no ideas

614
00:18:50,080 --> 00:18:52,720
ongoing the server has no ideas ongoing

615
00:18:52,720 --> 00:18:54,799
but can still operate successfully even

616
00:18:54,799 --> 00:18:57,600
in very low bandwidth environments

617
00:18:57,600 --> 00:18:59,200
there are some limitations to this

618
00:18:59,200 --> 00:19:01,520
attack though the attacker needs to have

619
00:19:01,520 --> 00:19:03,440
a vantage point the vantage point needs

620
00:19:03,440 --> 00:19:05,360
to have no egress filtering

621
00:19:05,360 --> 00:19:07,200
it needs to share a similar enough path

622
00:19:07,200 --> 00:19:08,480
with their victim

623
00:19:08,480 --> 00:19:10,240
their traffic needs to cross a sensor

624
00:19:10,240 --> 00:19:11,600
and it's across a sensor

625
00:19:11,600 --> 00:19:14,000
that has residual censorship and they

626
00:19:14,000 --> 00:19:15,840
need the ability to trigger that sensor

627
00:19:15,840 --> 00:19:17,520
statelessly

628
00:19:17,520 --> 00:19:18,799
unfortunately we found there is a

629
00:19:18,799 --> 00:19:20,559
surprisingly high number of shared

630
00:19:20,559 --> 00:19:21,520
network paths

631
00:19:21,520 --> 00:19:23,520
i mean for example in kazakhstan our

632
00:19:23,520 --> 00:19:25,200
attacker in the us could successfully

633
00:19:25,200 --> 00:19:26,880
affect traffic leaving europe

634
00:19:26,880 --> 00:19:29,120
australia japan all over the world

635
00:19:29,120 --> 00:19:31,840
highly successfully

636
00:19:31,840 --> 00:19:33,360
so this seems pretty bleak but what can

637
00:19:33,360 --> 00:19:35,120
be done about this there are some

638
00:19:35,120 --> 00:19:35,840
mitigations

639
00:19:35,840 --> 00:19:38,000
available to censorship infrastructure

640
00:19:38,000 --> 00:19:39,760
they could abolish three tuple residual

641
00:19:39,760 --> 00:19:41,280
censorship this more periodic form of

642
00:19:41,280 --> 00:19:42,559
censorship

643
00:19:42,559 --> 00:19:44,000
they could upgrade their system such

644
00:19:44,000 --> 00:19:45,600
that no routing should track sequence

645
00:19:45,600 --> 00:19:47,360
numbers so it doesn't just

646
00:19:47,360 --> 00:19:50,000
blindly eat all packets without a flow

647
00:19:50,000 --> 00:19:51,520
it could update their systems to try and

648
00:19:51,520 --> 00:19:52,000
properly

649
00:19:52,000 --> 00:19:54,080
track the through a handshake

650
00:19:54,080 --> 00:19:55,360
unfortunately there aren't really any

651
00:19:55,360 --> 00:19:56,720
good countermeasures available to

652
00:19:56,720 --> 00:19:58,480
victims because this is just baked into

653
00:19:58,480 --> 00:20:02,320
how these nation state sensors operate

654
00:20:02,480 --> 00:20:04,000
now there are more details and results

655
00:20:04,000 --> 00:20:05,280
in the paper that i unfortunately don't

656
00:20:05,280 --> 00:20:06,799
have time to run through today

657
00:20:06,799 --> 00:20:08,480
we did more experiments to examine what

658
00:20:08,480 --> 00:20:09,679
ports are affected in these various

659
00:20:09,679 --> 00:20:10,559
countries

660
00:20:10,559 --> 00:20:12,159
we studied the reliability of residual

661
00:20:12,159 --> 00:20:14,400
censorship uh we had more details on how

662
00:20:14,400 --> 00:20:16,320
to weaponize that strange esmi case in

663
00:20:16,320 --> 00:20:17,679
china i mentioned

664
00:20:17,679 --> 00:20:19,840
we also speculate and do some analysis

665
00:20:19,840 --> 00:20:21,360
on the true breadth of this attack what

666
00:20:21,360 --> 00:20:22,720
other countries might be affected by

667
00:20:22,720 --> 00:20:24,320
this

668
00:20:24,320 --> 00:20:26,400
but just in some sensors could be

669
00:20:26,400 --> 00:20:27,840
weaponized to launch availability

670
00:20:27,840 --> 00:20:28,400
attacks

671
00:20:28,400 --> 00:20:29,679
it really doesn't take a very strong

672
00:20:29,679 --> 00:20:31,760
attacker to do it collectively our

673
00:20:31,760 --> 00:20:33,440
results show that nation-state sensors

674
00:20:33,440 --> 00:20:34,960
pose a much greater threat to the

675
00:20:34,960 --> 00:20:36,400
broader internet than was previously

676
00:20:36,400 --> 00:20:37,520
understood

677
00:20:37,520 --> 00:20:38,799
to learn more there's going to be more

678
00:20:38,799 --> 00:20:40,400
information about this attack and the

679
00:20:40,400 --> 00:20:41,039
other

680
00:20:41,039 --> 00:20:43,120
attack i mentioned earlier in this talk

681
00:20:43,120 --> 00:20:44,640
up on our website later today

682
00:20:44,640 --> 00:20:48,559
at censorship.iii thanks so much

683
00:20:48,559 --> 00:20:51,919
awesome thanks kevin for a great talk um

684
00:20:51,919 --> 00:20:53,520
we don't have too much time for

685
00:20:53,520 --> 00:20:55,039
questions if there's a quick one

686
00:20:55,039 --> 00:20:57,280
please go ahead and type it in and i'll

687
00:20:57,280 --> 00:20:58,880
relay it and i'll i'll actually get

688
00:20:58,880 --> 00:20:59,840
started with one

689
00:20:59,840 --> 00:21:01,520
how do you determine the forbidden

690
00:21:01,520 --> 00:21:03,280
content

691
00:21:03,280 --> 00:21:04,720
ah that's a great question so the

692
00:21:04,720 --> 00:21:07,760
forbidden content it can vary by

693
00:21:07,760 --> 00:21:09,520
country by country but fortunately

694
00:21:09,520 --> 00:21:10,960
there's all sorts of great tools out

695
00:21:10,960 --> 00:21:11,520
there

696
00:21:11,520 --> 00:21:14,960
that are designed to track and monitor

697
00:21:14,960 --> 00:21:17,760
which content each country forbids so

698
00:21:17,760 --> 00:21:18,720
you can go to uni

699
00:21:18,720 --> 00:21:21,039
citizen lab uh censored planet and all

700
00:21:21,039 --> 00:21:22,799
of these tools are actively on a daily

701
00:21:22,799 --> 00:21:23,600
basis

702
00:21:23,600 --> 00:21:25,039
uh tracking what sensor in each of these

703
00:21:25,039 --> 00:21:27,200
places okay

704
00:21:27,200 --> 00:21:29,520
um and maybe a very stupid question you

705
00:21:29,520 --> 00:21:31,440
you partially answer it but i want to

706
00:21:31,440 --> 00:21:32,720
ask it anyway

707
00:21:32,720 --> 00:21:35,440
um how uh like how can you make sure

708
00:21:35,440 --> 00:21:35,760
that

709
00:21:35,760 --> 00:21:38,240
your messages are not being dropped by

710
00:21:38,240 --> 00:21:38,880
your

711
00:21:38,880 --> 00:21:41,039
like the fake packets that you sent

712
00:21:41,039 --> 00:21:42,559
they're not dropped by your your

713
00:21:42,559 --> 00:21:43,280
provider

714
00:21:43,280 --> 00:21:45,120
or as part of your like because you're

715
00:21:45,120 --> 00:21:47,120
coming from a different asm

716
00:21:47,120 --> 00:21:48,960
right so you're saying as the attacker

717
00:21:48,960 --> 00:21:50,559
as the attacker how can you make sure

718
00:21:50,559 --> 00:21:52,960
this attack is functioning uh it's a

719
00:21:52,960 --> 00:21:54,640
little tricky actually from the attacker

720
00:21:54,640 --> 00:21:56,640
if you don't have access to either the

721
00:21:56,640 --> 00:21:57,200
client

722
00:21:57,200 --> 00:21:59,120
or the server you can play some sort of

723
00:21:59,120 --> 00:22:00,559
games like inject traffic

724
00:22:00,559 --> 00:22:02,159
at the server that you know should give

725
00:22:02,159 --> 00:22:04,240
you a response like if you inject a sin

726
00:22:04,240 --> 00:22:05,520
hopefully you'll see a synack

727
00:22:05,520 --> 00:22:08,960
or well that will go to the client

728
00:22:08,960 --> 00:22:10,320
it can be tough to get insight as to

729
00:22:10,320 --> 00:22:11,440
whether your packets are going to where

730
00:22:11,440 --> 00:22:12,159
they need to be

731
00:22:12,159 --> 00:22:14,240
so we we tested this by just having

732
00:22:14,240 --> 00:22:16,159
control of one of those signs and then

733
00:22:16,159 --> 00:22:17,679
monitoring that the traffic actually got

734
00:22:17,679 --> 00:22:19,440
there okay

735
00:22:19,440 --> 00:22:22,640
is that a too strong assumption for the

736
00:22:22,640 --> 00:22:25,039
attacker or is this realistic

737
00:22:25,039 --> 00:22:27,520
i think it's so for at least for for

738
00:22:27,520 --> 00:22:28,960
these experiments it's realistic and i

739
00:22:28,960 --> 00:22:29,919
think for the broader

740
00:22:29,919 --> 00:22:30,960
context of the internet this is

741
00:22:30,960 --> 00:22:33,200
realistic um as egress filtering starts

742
00:22:33,200 --> 00:22:34,640
to be rolled out more and more

743
00:22:34,640 --> 00:22:35,840
it's getting more difficult for

744
00:22:35,840 --> 00:22:37,760
attackers to find these vantage points

745
00:22:37,760 --> 00:22:40,240
with unlimited egress filtering but it's

746
00:22:40,240 --> 00:22:41,840
still unfortunately common like you

747
00:22:41,840 --> 00:22:43,120
still see these

748
00:22:43,120 --> 00:22:44,880
reflected ddos attacks happening all the

749
00:22:44,880 --> 00:22:47,039
time and we unfortunately have not yet

750
00:22:47,039 --> 00:22:48,240
solved the problem of

751
00:22:48,240 --> 00:22:50,159
egress filtering so as much as i would

752
00:22:50,159 --> 00:22:52,000
love to tell you that no it's not an

753
00:22:52,000 --> 00:22:52,480
issue

754
00:22:52,480 --> 00:22:53,760
i don't think i can do that honestly

755
00:22:53,760 --> 00:22:55,760
just yet right cool

756
00:22:55,760 --> 00:22:58,000
thank you um there's a couple more

757
00:22:58,000 --> 00:22:58,880
questions

758
00:22:58,880 --> 00:23:01,360
on the on the chat i would suggest that

759
00:23:01,360 --> 00:23:02,559
you take them

760
00:23:02,559 --> 00:23:05,280
uh and answer them from the project

761
00:23:05,280 --> 00:23:06,960
thanks again for the talk this is super

762
00:23:06,960 --> 00:23:08,080
interesting i learned

763
00:23:08,080 --> 00:23:13,840
a lot and we'll move on to the next talk

