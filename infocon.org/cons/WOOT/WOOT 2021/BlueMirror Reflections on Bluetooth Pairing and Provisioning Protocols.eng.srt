1
00:00:00,240 --> 00:00:03,679
so our next speaker is uh

2
00:00:03,679 --> 00:00:07,440
uh tristan uh he will be talking about

3
00:00:07,440 --> 00:00:11,120
his uh paper on blue mirror reflections

4
00:00:11,120 --> 00:00:12,160
on bluetooth

5
00:00:12,160 --> 00:00:15,280
pairing and the provisioning protocols

6
00:00:15,280 --> 00:00:18,400
yes thank you do you see do you see the

7
00:00:18,400 --> 00:00:19,840
slide changing

8
00:00:19,840 --> 00:00:22,880
yes yes okay perfect

9
00:00:22,880 --> 00:00:25,920
so i will get started then

10
00:00:25,920 --> 00:00:28,480
hi everyone i'm tristan clavre and i

11
00:00:28,480 --> 00:00:30,160
will present the work that we did with

12
00:00:30,160 --> 00:00:31,599
jose lopez estevez

13
00:00:31,599 --> 00:00:33,280
on the security of bluetooth key

14
00:00:33,280 --> 00:00:34,880
agreement protocols

15
00:00:34,880 --> 00:00:37,680
so in this presentation we'll explain uh

16
00:00:37,680 --> 00:00:38,079
what

17
00:00:38,079 --> 00:00:39,920
kind of bluetooth technologies we

18
00:00:39,920 --> 00:00:42,879
studied what are

19
00:00:42,879 --> 00:00:45,039
in the context of bluetooth protocols

20
00:00:45,039 --> 00:00:46,399
and the results

21
00:00:46,399 --> 00:00:48,879
that we got when we attacked them so

22
00:00:48,879 --> 00:00:50,800
jose and i work for the wireless

23
00:00:50,800 --> 00:00:53,520
security laboratory of fancy

24
00:00:53,520 --> 00:00:55,440
in this laboratory we deal with

25
00:00:55,440 --> 00:00:57,199
electromagnetic security

26
00:00:57,199 --> 00:01:00,160
and electromagnetic phenomenon and we

27
00:01:00,160 --> 00:01:01,120
also perform

28
00:01:01,120 --> 00:01:04,159
some wireless protocol security

29
00:01:04,159 --> 00:01:06,799
and me are more specialized in wireless

30
00:01:06,799 --> 00:01:08,880
protocol security

31
00:01:08,880 --> 00:01:10,240
so this is the outline of this

32
00:01:10,240 --> 00:01:11,680
presentation we'll tackle three

33
00:01:11,680 --> 00:01:12,000
different

34
00:01:12,000 --> 00:01:13,680
bluetooth technologies bluetooth classic

35
00:01:13,680 --> 00:01:16,159
bluetooth slow energy bluetooth mesh

36
00:01:16,159 --> 00:01:19,360
we'll detail uh roughly how they work

37
00:01:19,360 --> 00:01:21,040
we'll detail what we did and which

38
00:01:21,040 --> 00:01:23,119
protocols were attacked exactly

39
00:01:23,119 --> 00:01:25,040
and then we'll present a subset of the

40
00:01:25,040 --> 00:01:27,680
results and will conclude

41
00:01:27,680 --> 00:01:30,960
so first short introduction so

42
00:01:30,960 --> 00:01:32,960
bluetooth is a set of different

43
00:01:32,960 --> 00:01:34,960
technologies first you add bluetooth

44
00:01:34,960 --> 00:01:35,520
classic

45
00:01:35,520 --> 00:01:37,439
it's a communication protocol the goal

46
00:01:37,439 --> 00:01:39,360
is to have two or more devices which

47
00:01:39,360 --> 00:01:40,880
communicate together

48
00:01:40,880 --> 00:01:43,520
and it's mainly used in cars smartphones

49
00:01:43,520 --> 00:01:45,040
and audio devices

50
00:01:45,040 --> 00:01:47,200
then you've got bluetooth low energy ble

51
00:01:47,200 --> 00:01:49,680
it's also a communication protocol

52
00:01:49,680 --> 00:01:52,320
two devices are can communicate together

53
00:01:52,320 --> 00:01:53,680
and its use

54
00:01:53,680 --> 00:01:56,719
our smartphones and various connected

55
00:01:56,719 --> 00:01:58,159
devices

56
00:01:58,159 --> 00:02:01,360
and then you've got bluetooth mesh bm

57
00:02:01,360 --> 00:02:03,200
it's a bit different because the goal is

58
00:02:03,200 --> 00:02:04,880
to create a mesh network

59
00:02:04,880 --> 00:02:08,878
out of single ble communication link

60
00:02:08,878 --> 00:02:11,200
and the idea is that you will have

61
00:02:11,200 --> 00:02:12,640
several applications

62
00:02:12,640 --> 00:02:15,280
in a mesh network and the main use case

63
00:02:15,280 --> 00:02:15,760
of that

64
00:02:15,760 --> 00:02:18,800
is connected homes so

65
00:02:18,800 --> 00:02:21,040
if we look at the security properties of

66
00:02:21,040 --> 00:02:22,160
those

67
00:02:22,160 --> 00:02:24,400
while the communication protocols bt and

68
00:02:24,400 --> 00:02:26,319
ble have similar goals

69
00:02:26,319 --> 00:02:28,879
the goals are confidentiality integrity

70
00:02:28,879 --> 00:02:31,360
and authenticity of the communications

71
00:02:31,360 --> 00:02:34,239
as always with bluetooth authenticity is

72
00:02:34,239 --> 00:02:35,599
optional

73
00:02:35,599 --> 00:02:38,000
and in bluetooth mesh we still have

74
00:02:38,000 --> 00:02:39,120
confidentiality

75
00:02:39,120 --> 00:02:40,959
integrity and authenticity of the

76
00:02:40,959 --> 00:02:42,319
communication

77
00:02:42,319 --> 00:02:44,959
but due to the nature of the network we

78
00:02:44,959 --> 00:02:47,040
also have more advanced properties like

79
00:02:47,040 --> 00:02:49,200
segregation of applications inside the

80
00:02:49,200 --> 00:02:50,640
network

81
00:02:50,640 --> 00:02:52,879
and to ensure that those properties are

82
00:02:52,879 --> 00:02:55,040
guaranteed there are a set of symmetric

83
00:02:55,040 --> 00:02:56,879
keys which are used so

84
00:02:56,879 --> 00:02:59,200
in bt and ble there is basically a

85
00:02:59,200 --> 00:03:01,120
master key which is used

86
00:03:01,120 --> 00:03:03,840
here we call it encryption key and key

87
00:03:03,840 --> 00:03:05,200
and it is used to encrypt the

88
00:03:05,200 --> 00:03:08,080
communication between two devices

89
00:03:08,080 --> 00:03:10,560
in bluetooth mesh you have more keys so

90
00:03:10,560 --> 00:03:12,159
they are here the network key the

91
00:03:12,159 --> 00:03:13,120
application key

92
00:03:13,120 --> 00:03:15,599
and the device key because everything is

93
00:03:15,599 --> 00:03:17,680
symmetric cryptography the question

94
00:03:17,680 --> 00:03:20,720
is how those keys are exchanged between

95
00:03:20,720 --> 00:03:21,920
devices

96
00:03:21,920 --> 00:03:24,319
and that the role of a key agreement

97
00:03:24,319 --> 00:03:24,959
protocol

98
00:03:24,959 --> 00:03:26,879
which will be used to exchange those

99
00:03:26,879 --> 00:03:28,959
symmetric secrets

100
00:03:28,959 --> 00:03:32,159
so if we look at bt and ble the key

101
00:03:32,159 --> 00:03:33,280
agreement protocol

102
00:03:33,280 --> 00:03:35,280
is something which is called pairing so

103
00:03:35,280 --> 00:03:37,440
pairing is kind of a magic procedure

104
00:03:37,440 --> 00:03:39,200
you've got your two devices

105
00:03:39,200 --> 00:03:41,280
they do not know each other and they

106
00:03:41,280 --> 00:03:43,599
want to communicate in a secure way

107
00:03:43,599 --> 00:03:45,840
they do this pairing procedure and at

108
00:03:45,840 --> 00:03:47,040
the end they both

109
00:03:47,040 --> 00:03:49,519
share the encryption key and they may

110
00:03:49,519 --> 00:03:51,440
protect the communications

111
00:03:51,440 --> 00:03:52,959
this pairing procedure may be

112
00:03:52,959 --> 00:03:54,720
authenticated and

113
00:03:54,720 --> 00:03:56,480
several pairing protocols exist

114
00:03:56,480 --> 00:03:58,959
depending on the technology

115
00:03:58,959 --> 00:04:01,360
now in bluetooth mesh you've also got a

116
00:04:01,360 --> 00:04:02,720
key agreement but it's called

117
00:04:02,720 --> 00:04:03,840
provisioning

118
00:04:03,840 --> 00:04:06,159
is basically the same thing it's used

119
00:04:06,159 --> 00:04:08,239
when you have a device which wants to

120
00:04:08,239 --> 00:04:10,319
join a network so the device

121
00:04:10,319 --> 00:04:12,959
announces itself and there is a master

122
00:04:12,959 --> 00:04:14,239
in the network which is called

123
00:04:14,239 --> 00:04:15,599
provisioner

124
00:04:15,599 --> 00:04:17,680
which would start the protocol with the

125
00:04:17,680 --> 00:04:18,639
device

126
00:04:18,639 --> 00:04:21,600
they do this provisioning and at the end

127
00:04:21,600 --> 00:04:23,360
the provisioner sends the device

128
00:04:23,360 --> 00:04:25,360
the symmetric secrets it needs to

129
00:04:25,360 --> 00:04:27,360
communicate on the network

130
00:04:27,360 --> 00:04:29,759
again this protocol may be authenticated

131
00:04:29,759 --> 00:04:30,960
and there are several kinds of

132
00:04:30,960 --> 00:04:33,040
provisionings

133
00:04:33,040 --> 00:04:36,960
now if we look at them from a high level

134
00:04:36,960 --> 00:04:40,560
it's rather always the same thing so

135
00:04:40,560 --> 00:04:42,880
for the pairing protocols you've got two

136
00:04:42,880 --> 00:04:44,240
devices which are called

137
00:04:44,240 --> 00:04:47,360
initiator and responder they do one step

138
00:04:47,360 --> 00:04:49,040
which is called feature exchange with

139
00:04:49,040 --> 00:04:51,120
cryptographic algorithms to support

140
00:04:51,120 --> 00:04:54,400
which do they want authentication or not

141
00:04:54,400 --> 00:04:57,120
then they exchange the first key then

142
00:04:57,120 --> 00:04:57,680
they may

143
00:04:57,680 --> 00:05:00,560
authenticate themselves and at the end

144
00:05:00,560 --> 00:05:01,360
they share an

145
00:05:01,360 --> 00:05:04,560
encryption key the provisioning is

146
00:05:04,560 --> 00:05:06,880
really the same thing so you've got the

147
00:05:06,880 --> 00:05:08,400
provisioner the device

148
00:05:08,400 --> 00:05:10,320
you have the same step feature exchange

149
00:05:10,320 --> 00:05:12,400
key exchange authentication

150
00:05:12,400 --> 00:05:14,240
and you've got the key distribution

151
00:05:14,240 --> 00:05:16,560
which is used for the provisioner to

152
00:05:16,560 --> 00:05:20,160
send the symmetric secrets to the device

153
00:05:20,160 --> 00:05:22,880
now if we look inside it start to get

154
00:05:22,880 --> 00:05:24,720
messy but really it's not that

155
00:05:24,720 --> 00:05:25,919
complicated

156
00:05:25,919 --> 00:05:28,000
the pairing protocols there are 12 of

157
00:05:28,000 --> 00:05:29,039
them in total

158
00:05:29,039 --> 00:05:30,880
it depends on the technology bluetooth

159
00:05:30,880 --> 00:05:32,960
classic or bluetooth low energy

160
00:05:32,960 --> 00:05:35,039
it depends on the supported version of

161
00:05:35,039 --> 00:05:36,800
the specification you've got legacy

162
00:05:36,800 --> 00:05:38,000
protocols and you've got

163
00:05:38,000 --> 00:05:40,639
secure protocols and it depends on the

164
00:05:40,639 --> 00:05:43,680
user interaction which is required

165
00:05:43,680 --> 00:05:46,560
and what you note is that the names are

166
00:05:46,560 --> 00:05:48,560
actually the same you see it just works

167
00:05:48,560 --> 00:05:50,880
several times past entry several times

168
00:05:50,880 --> 00:05:53,919
there are two things to be aware of here

169
00:05:53,919 --> 00:05:57,360
for ble legacy pairing

170
00:05:57,360 --> 00:05:59,039
is different from secure pairing so

171
00:05:59,039 --> 00:06:00,400
legacy just works

172
00:06:00,400 --> 00:06:02,319
is a different protocol from secure

173
00:06:02,319 --> 00:06:04,639
dress works but

174
00:06:04,639 --> 00:06:08,479
between ble and bluetooth uh the secure

175
00:06:08,479 --> 00:06:09,840
simple pairing

176
00:06:09,840 --> 00:06:13,199
and any secure pairing they are actually

177
00:06:13,199 --> 00:06:16,639
roughly the same protocol so ssp pascal

178
00:06:16,639 --> 00:06:17,840
entry for example

179
00:06:17,840 --> 00:06:20,479
is the same as any secure pairing pesky

180
00:06:20,479 --> 00:06:22,560
entry

181
00:06:22,560 --> 00:06:24,560
now for the provisioning again you've

182
00:06:24,560 --> 00:06:26,160
got different kinds

183
00:06:26,160 --> 00:06:28,319
the kind of provisioning depends on two

184
00:06:28,319 --> 00:06:29,360
things

185
00:06:29,360 --> 00:06:31,440
how the key exchange is performed the

186
00:06:31,440 --> 00:06:33,440
two possibilities are the key exchanges

187
00:06:33,440 --> 00:06:35,120
done on the ble channel

188
00:06:35,120 --> 00:06:38,160
or it's done on an out-of-bound channel

189
00:06:38,160 --> 00:06:40,400
and the second element is how

190
00:06:40,400 --> 00:06:42,639
authentication data is exchanged

191
00:06:42,639 --> 00:06:44,960
there are four different possibilities

192
00:06:44,960 --> 00:06:46,319
no authentication data

193
00:06:46,319 --> 00:06:49,759
input data output data or static data

194
00:06:49,759 --> 00:06:52,400
and two times four that makes eight

195
00:06:52,400 --> 00:06:54,800
different kinds of provisioning

196
00:06:54,800 --> 00:06:57,680
so this may seem complicated but if we

197
00:06:57,680 --> 00:06:59,440
look at them from above

198
00:06:59,440 --> 00:07:01,919
really we can make three different

199
00:07:01,919 --> 00:07:04,479
classes of protocol

200
00:07:04,479 --> 00:07:06,960
so for bluetooth agreement there are

201
00:07:06,960 --> 00:07:08,720
unauthenticated key agreements

202
00:07:08,720 --> 00:07:10,800
they're green here they do not provide

203
00:07:10,800 --> 00:07:12,160
authentication

204
00:07:12,160 --> 00:07:14,800
you have authenticated key agreements

205
00:07:14,800 --> 00:07:16,080
they're in blue

206
00:07:16,080 --> 00:07:18,160
and you've got out of bounty agreements

207
00:07:18,160 --> 00:07:19,440
there in red

208
00:07:19,440 --> 00:07:21,840
for out of bank agreement the security

209
00:07:21,840 --> 00:07:23,440
of the key agreement depends on

210
00:07:23,440 --> 00:07:26,400
unspecified channels so you can't really

211
00:07:26,400 --> 00:07:27,280
say something

212
00:07:27,280 --> 00:07:29,039
just by looking at the bluetooth

213
00:07:29,039 --> 00:07:31,840
specification

214
00:07:31,840 --> 00:07:34,720
so that was it for the introduction now

215
00:07:34,720 --> 00:07:36,479
what was our study

216
00:07:36,479 --> 00:07:39,360
so first a bit of state-of-the-art

217
00:07:39,360 --> 00:07:41,199
bluetooth agreement have been attacked

218
00:07:41,199 --> 00:07:42,720
since the birth of bluetooth so there

219
00:07:42,720 --> 00:07:44,400
have been passive attacks

220
00:07:44,400 --> 00:07:47,440
on bluetooth classic ble and more

221
00:07:47,440 --> 00:07:48,639
recently there have been

222
00:07:48,639 --> 00:07:50,800
active attacks but get back to the blue

223
00:07:50,800 --> 00:07:52,639
ones in a moment

224
00:07:52,639 --> 00:07:54,960
what you may notice that there was a

225
00:07:54,960 --> 00:07:56,720
problem in implementation

226
00:07:56,720 --> 00:08:00,319
which affected secure modes you've got

227
00:08:00,319 --> 00:08:02,639
even more recently inducted yellow

228
00:08:02,639 --> 00:08:04,720
apparent confusion which was presented

229
00:08:04,720 --> 00:08:05,120
in

230
00:08:05,120 --> 00:08:08,240
security and privacy 2021

231
00:08:08,240 --> 00:08:10,400
and on ble secure pairing you've got a

232
00:08:10,400 --> 00:08:11,599
possible downgrade

233
00:08:11,599 --> 00:08:15,520
in the key size here

234
00:08:15,520 --> 00:08:17,759
and for bluetooth mesh we have found no

235
00:08:17,759 --> 00:08:19,440
previous work on the security of the

236
00:08:19,440 --> 00:08:21,680
provisioning protocol

237
00:08:21,680 --> 00:08:24,319
now what about our study we wanted to

238
00:08:24,319 --> 00:08:26,639
study the security of authenticated

239
00:08:26,639 --> 00:08:27,840
bluetooth key agreements

240
00:08:27,840 --> 00:08:30,400
so those are the blue protocols that you

241
00:08:30,400 --> 00:08:31,440
see here

242
00:08:31,440 --> 00:08:34,159
and how we did that we studied them with

243
00:08:34,159 --> 00:08:36,080
reflection attack we'll explain what we

244
00:08:36,080 --> 00:08:37,919
did on them

245
00:08:37,919 --> 00:08:40,479
first how is bluetooth authentication

246
00:08:40,479 --> 00:08:42,320
performed

247
00:08:42,320 --> 00:08:44,800
well one basic block which is very often

248
00:08:44,800 --> 00:08:45,920
used we'll see it

249
00:08:45,920 --> 00:08:48,399
later it's called a commitment protocol

250
00:08:48,399 --> 00:08:49,600
it's used in many bluetooth

251
00:08:49,600 --> 00:08:51,200
authentication protocol

252
00:08:51,200 --> 00:08:53,600
so here you've got two devices initiator

253
00:08:53,600 --> 00:08:54,880
and responder

254
00:08:54,880 --> 00:08:57,600
the initiator selects the nonce and i

255
00:08:57,600 --> 00:08:59,200
and it computes what is called a

256
00:08:59,200 --> 00:09:01,839
confirmation value with a function

257
00:09:01,839 --> 00:09:03,760
of the nonce and some authentication

258
00:09:03,760 --> 00:09:06,480
data it sends a confirmation value the

259
00:09:06,480 --> 00:09:08,320
responder does the same and sends its

260
00:09:08,320 --> 00:09:09,760
confirmation value

261
00:09:09,760 --> 00:09:12,160
then the initiator sends a nonce the

262
00:09:12,160 --> 00:09:14,160
responder verifies that the non-cit

263
00:09:14,160 --> 00:09:14,720
receives

264
00:09:14,720 --> 00:09:17,120
ni matches the confirmation value and

265
00:09:17,120 --> 00:09:19,360
the authentication data ignores

266
00:09:19,360 --> 00:09:21,839
and if it matches it sends its sound

267
00:09:21,839 --> 00:09:23,600
nouns and the initiator does the

268
00:09:23,600 --> 00:09:26,399
verification too

269
00:09:26,399 --> 00:09:29,200
now if we were to make a reflection

270
00:09:29,200 --> 00:09:30,560
attack on that

271
00:09:30,560 --> 00:09:32,240
this is the kind of thing we do in this

272
00:09:32,240 --> 00:09:34,640
study so we've got an attacker which

273
00:09:34,640 --> 00:09:37,040
observates the responder

274
00:09:37,040 --> 00:09:39,120
it receives the confirmation it sends

275
00:09:39,120 --> 00:09:40,320
back the confirmation

276
00:09:40,320 --> 00:09:42,560
it receives the nonce and it sends back

277
00:09:42,560 --> 00:09:43,680
the nonce

278
00:09:43,680 --> 00:09:45,680
and the impact and that depends us

279
00:09:45,680 --> 00:09:47,200
what's inside the function

280
00:09:47,200 --> 00:09:50,399
f here so

281
00:09:50,399 --> 00:09:52,560
in a reflection tag usually you want to

282
00:09:52,560 --> 00:09:54,800
complete the authentication protocol and

283
00:09:54,800 --> 00:09:56,640
after that you've got more specific

284
00:09:56,640 --> 00:09:59,040
impacts sometimes you do retrieve the

285
00:09:59,040 --> 00:10:00,399
encryption key at the end

286
00:10:00,399 --> 00:10:01,839
on time you do not retrieve the

287
00:10:01,839 --> 00:10:03,440
encryption key

288
00:10:03,440 --> 00:10:06,640
they've existed since decades but

289
00:10:06,640 --> 00:10:09,040
in the recent literature we have a

290
00:10:09,040 --> 00:10:11,680
reflection attack on tls 1.3 psk

291
00:10:11,680 --> 00:10:14,880
mode and we have a theoretical attack in

292
00:10:14,880 --> 00:10:18,079
another bluetooth security protocol

293
00:10:18,079 --> 00:10:20,079
which was not included in the state of

294
00:10:20,079 --> 00:10:21,360
the art because it's not

295
00:10:21,360 --> 00:10:25,120
exactly a pairing protocol in both cases

296
00:10:25,120 --> 00:10:27,200
the attacker does not recover the

297
00:10:27,200 --> 00:10:29,440
encryption key at the end

298
00:10:29,440 --> 00:10:31,440
basically reflection attack are easy to

299
00:10:31,440 --> 00:10:34,079
patch because you see that the

300
00:10:34,079 --> 00:10:37,040
message you receive is just the one you

301
00:10:37,040 --> 00:10:38,720
send so you can detect something is

302
00:10:38,720 --> 00:10:39,519
wrong

303
00:10:39,519 --> 00:10:41,200
but good protocol should make them

304
00:10:41,200 --> 00:10:42,640
impossible

305
00:10:42,640 --> 00:10:45,120
and in our studies sometimes we interact

306
00:10:45,120 --> 00:10:46,880
with one device sometimes we interact

307
00:10:46,880 --> 00:10:48,720
with two devices and we consider that

308
00:10:48,720 --> 00:10:49,839
the user

309
00:10:49,839 --> 00:10:53,040
is always performing the exact actions

310
00:10:53,040 --> 00:10:56,480
as required by the specification

311
00:10:56,480 --> 00:10:58,800
so we'll present two different results

312
00:10:58,800 --> 00:11:00,480
first we'll present a reflection attack

313
00:11:00,480 --> 00:11:02,160
on one of the protocols and then we'll

314
00:11:02,160 --> 00:11:03,600
present an interesting case of

315
00:11:03,600 --> 00:11:07,120
cryptographic misuse on bluetooth mesh

316
00:11:07,120 --> 00:11:09,120
so we attach the secure pesky entry

317
00:11:09,120 --> 00:11:11,279
protocol it's used in bluetooth classic

318
00:11:11,279 --> 00:11:13,440
secure simple pairing and ble secure

319
00:11:13,440 --> 00:11:14,320
pairing

320
00:11:14,320 --> 00:11:16,240
the idea that you've got one device

321
00:11:16,240 --> 00:11:18,079
which displays a pass key so it's a

322
00:11:18,079 --> 00:11:19,279
numeric code

323
00:11:19,279 --> 00:11:21,360
and the user inputs it on the other the

324
00:11:21,360 --> 00:11:23,760
pass key is always 20 bits long

325
00:11:23,760 --> 00:11:25,600
protocol is rather simple you've got the

326
00:11:25,600 --> 00:11:27,680
feature exchange tab you've got the case

327
00:11:27,680 --> 00:11:29,600
chance step it's a very simple difficult

328
00:11:29,600 --> 00:11:30,480
man

329
00:11:30,480 --> 00:11:31,920
and then you've got the commitment

330
00:11:31,920 --> 00:11:33,680
protocol which is used with the first

331
00:11:33,680 --> 00:11:34,800
bit

332
00:11:34,800 --> 00:11:37,760
and there are 20 commitments protocol to

333
00:11:37,760 --> 00:11:40,399
use all the 20 bits of the pass key

334
00:11:40,399 --> 00:11:42,480
and then you've got the last exchange of

335
00:11:42,480 --> 00:11:43,920
messages

336
00:11:43,920 --> 00:11:46,959
so the result we we have here if we have

337
00:11:46,959 --> 00:11:48,560
an attacker which is replayed the

338
00:11:48,560 --> 00:11:49,680
responder

339
00:11:49,680 --> 00:11:51,760
it performs a feature exchange step and

340
00:11:51,760 --> 00:11:53,920
we found that if the attacker reflects

341
00:11:53,920 --> 00:11:56,160
the public key to the initiator

342
00:11:56,160 --> 00:11:58,480
then it can reflect all the commitment

343
00:11:58,480 --> 00:11:59,839
rounds

344
00:11:59,839 --> 00:12:01,760
and we have a second result which comes

345
00:12:01,760 --> 00:12:04,639
from lindel in blackcat in 2008 which is

346
00:12:04,639 --> 00:12:06,320
that if you know the round if you know

347
00:12:06,320 --> 00:12:08,160
the confirmation value and the nonce you

348
00:12:08,160 --> 00:12:10,079
can retrieve the beat of the pesky that

349
00:12:10,079 --> 00:12:11,920
was used in this round

350
00:12:11,920 --> 00:12:14,240
and if you do that 20 times that means

351
00:12:14,240 --> 00:12:16,720
that you recover the entire pass key

352
00:12:16,720 --> 00:12:19,519
and so that means that if you interact

353
00:12:19,519 --> 00:12:20,959
with the responder

354
00:12:20,959 --> 00:12:22,720
you can do the reflection attack to get

355
00:12:22,720 --> 00:12:25,120
the pesky with the initiator and use the

356
00:12:25,120 --> 00:12:27,040
pass key to authenticate yourself to the

357
00:12:27,040 --> 00:12:28,079
responder

358
00:12:28,079 --> 00:12:30,079
so at the end you've successfully

359
00:12:30,079 --> 00:12:32,399
impersonated the initiator towards the

360
00:12:32,399 --> 00:12:33,440
responder

361
00:12:33,440 --> 00:12:35,040
you get the encryption key with the

362
00:12:35,040 --> 00:12:37,600
responder and this works in

363
00:12:37,600 --> 00:12:40,399
bluetooth classic and in ble and the

364
00:12:40,399 --> 00:12:41,120
initiator

365
00:12:41,120 --> 00:12:43,519
has failed pairing so there are details

366
00:12:43,519 --> 00:12:46,000
and variants in the paper

367
00:12:46,000 --> 00:12:49,200
now second result we're looking at the

368
00:12:49,200 --> 00:12:50,399
provisioning protocol

369
00:12:50,399 --> 00:12:52,480
so for recall we are looking at the

370
00:12:52,480 --> 00:12:54,320
authenticated provisioning

371
00:12:54,320 --> 00:12:56,399
that means that the key exchange is

372
00:12:56,399 --> 00:12:58,480
performed on the ble channel you've got

373
00:12:58,480 --> 00:12:59,839
one device which output

374
00:12:59,839 --> 00:13:02,959
authentication data and the user inputs

375
00:13:02,959 --> 00:13:04,720
it on the other device

376
00:13:04,720 --> 00:13:07,040
it is very simple it's rather the same

377
00:13:07,040 --> 00:13:08,880
thing but even simpler that what we saw

378
00:13:08,880 --> 00:13:10,320
you've got the feature exchange key

379
00:13:10,320 --> 00:13:11,200
exchange

380
00:13:11,200 --> 00:13:12,720
and the commitment protocol for

381
00:13:12,720 --> 00:13:14,399
authentication

382
00:13:14,399 --> 00:13:17,680
now what is important here that is that

383
00:13:17,680 --> 00:13:20,000
the authentication data is padded into

384
00:13:20,000 --> 00:13:22,399
something that is called odd value

385
00:13:22,399 --> 00:13:24,639
and odd value nazis and confirmation

386
00:13:24,639 --> 00:13:26,560
values they are always

387
00:13:26,560 --> 00:13:29,279
16 bytes long and if we look at the

388
00:13:29,279 --> 00:13:31,120
commitment protocol

389
00:13:31,120 --> 00:13:33,040
you use an intermediate key which is

390
00:13:33,040 --> 00:13:35,440
called ck which depends on the defiant

391
00:13:35,440 --> 00:13:36,079
key here

392
00:13:36,079 --> 00:13:38,880
and on the fit exchange step and the

393
00:13:38,880 --> 00:13:40,079
confirmation value

394
00:13:40,079 --> 00:13:43,519
computation is just a yes in c mac mode

395
00:13:43,519 --> 00:13:46,560
so if you you can notice that there is a

396
00:13:46,560 --> 00:13:48,320
simple reflection attacks here

397
00:13:48,320 --> 00:13:50,320
but more interestingly there is a case

398
00:13:50,320 --> 00:13:52,480
of cryptographic misuse

399
00:13:52,480 --> 00:13:54,880
the problem here is that the cmak mode

400
00:13:54,880 --> 00:13:56,800
is not pretty much resistant

401
00:13:56,800 --> 00:13:58,639
that means that if you know the key

402
00:13:58,639 --> 00:14:00,480
there is one block of plaintext that

403
00:14:00,480 --> 00:14:01,519
leaks

404
00:14:01,519 --> 00:14:04,320
the true results that we have is that if

405
00:14:04,320 --> 00:14:05,920
we know the key the nonce and the

406
00:14:05,920 --> 00:14:07,839
confirmation value we are able to

407
00:14:07,839 --> 00:14:09,920
retrieve the authentication value

408
00:14:09,920 --> 00:14:11,600
and if we know the key the

409
00:14:11,600 --> 00:14:13,040
authentication value and the

410
00:14:13,040 --> 00:14:14,160
confirmation value

411
00:14:14,160 --> 00:14:17,199
we retrieve the norms and we use

412
00:14:17,199 --> 00:14:21,040
those and while further possible because

413
00:14:21,040 --> 00:14:23,600
all the values we use they are 16 bytes

414
00:14:23,600 --> 00:14:26,079
long which is the block size of the ies

415
00:14:26,079 --> 00:14:29,519
block cipher and we use those to mount a

416
00:14:29,519 --> 00:14:30,000
complete

417
00:14:30,000 --> 00:14:32,800
attack on bluetooth mesh so here is the

418
00:14:32,800 --> 00:14:34,399
attack

419
00:14:34,399 --> 00:14:37,040
first the attacker sends the public key

420
00:14:37,040 --> 00:14:38,800
to the provisioner

421
00:14:38,800 --> 00:14:40,720
the professional sends the confirmation

422
00:14:40,720 --> 00:14:42,480
value the attacker sends a

423
00:14:42,480 --> 00:14:45,440
really random confirmation value then

424
00:14:45,440 --> 00:14:46,000
the

425
00:14:46,000 --> 00:14:48,079
provisions and the nouns and the

426
00:14:48,079 --> 00:14:50,240
attacker uses the first result

427
00:14:50,240 --> 00:14:52,000
to get the authentication value from

428
00:14:52,000 --> 00:14:53,600
confirmation and notes

429
00:14:53,600 --> 00:14:55,920
then it uses the second result to find

430
00:14:55,920 --> 00:14:56,959
the correct nonce

431
00:14:56,959 --> 00:14:59,360
for the confirmation value in previously

432
00:14:59,360 --> 00:15:00,800
sent

433
00:15:00,800 --> 00:15:03,040
and that's it the attacker has

434
00:15:03,040 --> 00:15:04,720
successfully authenticated to the

435
00:15:04,720 --> 00:15:06,000
provisioner while

436
00:15:06,000 --> 00:15:08,480
it didn't know the authentication value

437
00:15:08,480 --> 00:15:10,399
and it didn't need it

438
00:15:10,399 --> 00:15:12,639
and the provisioner will send the

439
00:15:12,639 --> 00:15:14,639
secrets of the network to the attacker

440
00:15:14,639 --> 00:15:17,120
so the attacker can join the network

441
00:15:17,120 --> 00:15:19,279
and we can simply upgrade that to a

442
00:15:19,279 --> 00:15:21,360
complete machine in the middle

443
00:15:21,360 --> 00:15:23,680
uh if we interact with the device

444
00:15:23,680 --> 00:15:25,839
because we recover the authentication

445
00:15:25,839 --> 00:15:27,920
value so we can authenticate ourselves

446
00:15:27,920 --> 00:15:29,199
to the device

447
00:15:29,199 --> 00:15:31,040
so we can gain the device key of the

448
00:15:31,040 --> 00:15:32,880
device which means that we can perform

449
00:15:32,880 --> 00:15:35,519
privileged operation on the device

450
00:15:35,519 --> 00:15:38,399
this problem cannot be seen by an

451
00:15:38,399 --> 00:15:40,079
implementation so

452
00:15:40,079 --> 00:15:42,160
it can't be patched by an implementation

453
00:15:42,160 --> 00:15:43,680
it requires to be

454
00:15:43,680 --> 00:15:47,519
patched at the specifications level

455
00:15:47,519 --> 00:15:50,240
and the protocol has to be has to be

456
00:15:50,240 --> 00:15:51,839
reworked

457
00:15:51,839 --> 00:15:54,880
so if we bring in some context

458
00:15:54,880 --> 00:15:58,560
uh so on the secure pesky entry protocol

459
00:15:58,560 --> 00:16:01,199
the previous work stated that if the

460
00:16:01,199 --> 00:16:03,279
pass key is perfectly random there was

461
00:16:03,279 --> 00:16:05,759
no problem and in this work we

462
00:16:05,759 --> 00:16:07,680
proved that even if the pass key is

463
00:16:07,680 --> 00:16:08,959
perfectly random

464
00:16:08,959 --> 00:16:11,600
there are security problems bluetooth

465
00:16:11,600 --> 00:16:13,519
smash we've mentioned that there were no

466
00:16:13,519 --> 00:16:16,160
analysis of the providing protocol

467
00:16:16,160 --> 00:16:18,959
but a related work is that thomas rosa

468
00:16:18,959 --> 00:16:19,680
found that

469
00:16:19,680 --> 00:16:22,000
there was a malleable commitment in ble

470
00:16:22,000 --> 00:16:23,680
legacy pesky entry

471
00:16:23,680 --> 00:16:25,360
which means that authentication is

472
00:16:25,360 --> 00:16:27,120
broken and here we prove

473
00:16:27,120 --> 00:16:29,680
that there is a malleable commitment in

474
00:16:29,680 --> 00:16:31,360
bluetooth smash provisioning which means

475
00:16:31,360 --> 00:16:32,880
that bluetooth smash provisioning

476
00:16:32,880 --> 00:16:33,759
authentication

477
00:16:33,759 --> 00:16:37,759
is also broken now this is the complete

478
00:16:37,759 --> 00:16:38,880
study that we did

479
00:16:38,880 --> 00:16:41,360
in total we discovered seven tags we

480
00:16:41,360 --> 00:16:42,480
tested our text

481
00:16:42,480 --> 00:16:45,519
against reward implementation the work

482
00:16:45,519 --> 00:16:47,440
we disclosed everything responsibly to

483
00:16:47,440 --> 00:16:49,199
the bluetooth sig in september they are

484
00:16:49,199 --> 00:16:51,600
located 6 cvs have been released earlier

485
00:16:51,600 --> 00:16:52,959
this week

486
00:16:52,959 --> 00:16:55,199
and here we talked about only the lines

487
00:16:55,199 --> 00:16:56,480
in green so

488
00:16:56,480 --> 00:16:59,360
every other every everything else is

489
00:16:59,360 --> 00:17:02,959
included in the paper that you can read

490
00:17:02,959 --> 00:17:05,839
now if we look at what we wanted to do

491
00:17:05,839 --> 00:17:07,520
our initial target were the blue

492
00:17:07,520 --> 00:17:09,760
protocols here

493
00:17:09,760 --> 00:17:11,839
in black circles you see the protocols

494
00:17:11,839 --> 00:17:13,359
that are considered secure

495
00:17:13,359 --> 00:17:15,119
according to the specification to the

496
00:17:15,119 --> 00:17:17,039
bluetooth specification

497
00:17:17,039 --> 00:17:18,959
and in red those are the protocols that

498
00:17:18,959 --> 00:17:21,119
we were able to successfully attack

499
00:17:21,119 --> 00:17:23,280
either with reflection attack or with

500
00:17:23,280 --> 00:17:26,480
cryptographic problems

501
00:17:26,640 --> 00:17:29,760
now as a conclusion so we've seen very

502
00:17:29,760 --> 00:17:32,080
informative cases of reward reflection

503
00:17:32,080 --> 00:17:32,799
attack and

504
00:17:32,799 --> 00:17:34,960
included key retrieval which is not that

505
00:17:34,960 --> 00:17:36,240
often

506
00:17:36,240 --> 00:17:38,320
numeric comparison protocol could not be

507
00:17:38,320 --> 00:17:40,160
attacked so it appears again to be the

508
00:17:40,160 --> 00:17:42,480
most resistant pair method

509
00:17:42,480 --> 00:17:44,400
most of the problems we found they are

510
00:17:44,400 --> 00:17:45,520
reflection attacks

511
00:17:45,520 --> 00:17:47,039
and so they can be patched in

512
00:17:47,039 --> 00:17:49,039
implementations and some are already

513
00:17:49,039 --> 00:17:50,080
patched

514
00:17:50,080 --> 00:17:52,000
but the cryptographic problems will

515
00:17:52,000 --> 00:17:54,480
require a redesign of the protocols

516
00:17:54,480 --> 00:17:57,200
that means that now three out of three

517
00:17:57,200 --> 00:17:58,720
bluetooth technologies so bluetooth

518
00:17:58,720 --> 00:18:00,799
classic ble in bluetooth mesh

519
00:18:00,799 --> 00:18:02,559
require the complete redesign of the

520
00:18:02,559 --> 00:18:04,559
initial key agreements

521
00:18:04,559 --> 00:18:07,360
and looking forward we'll see the new

522
00:18:07,360 --> 00:18:09,679
bluetooth mesh specification we'll see

523
00:18:09,679 --> 00:18:12,080
if it has return compatibility inside if

524
00:18:12,080 --> 00:18:14,960
it has it may pose new security problems

525
00:18:14,960 --> 00:18:16,640
otherwise don't rely on bluetooth's

526
00:18:16,640 --> 00:18:18,880
built-in security and if you really have

527
00:18:18,880 --> 00:18:19,679
to

528
00:18:19,679 --> 00:18:21,440
pair and provision your devices in

529
00:18:21,440 --> 00:18:23,600
controlled environments

530
00:18:23,600 --> 00:18:26,559
now thanks for your attention says for

531
00:18:26,559 --> 00:18:28,720
everyone who participated in this study

532
00:18:28,720 --> 00:18:30,799
thanks for everyone at nc site who

533
00:18:30,799 --> 00:18:32,960
participate in the disclosure

534
00:18:32,960 --> 00:18:35,520
thanks to g scott clash uh classen who

535
00:18:35,520 --> 00:18:36,480
scheduled our

536
00:18:36,480 --> 00:18:40,960
uh paper and uh

537
00:18:40,960 --> 00:18:43,520
that's it uh thanks for your attention

538
00:18:43,520 --> 00:18:46,639
do you have any questions

539
00:18:46,960 --> 00:18:50,000
um feel free to uh post your questions

540
00:18:50,000 --> 00:18:50,960
in the chat

541
00:18:50,960 --> 00:18:54,080
so thank you uh tristan for the very

542
00:18:54,080 --> 00:18:56,240
nice talk um

543
00:18:56,240 --> 00:18:59,760
actually i'm curious uh whether you're

544
00:18:59,760 --> 00:19:02,000
you found so many attacks are you a tax

545
00:19:02,000 --> 00:19:02,880
fund through

546
00:19:02,880 --> 00:19:06,000
a paper and pencil analysis or

547
00:19:06,000 --> 00:19:09,360
some formal verification tool

548
00:19:09,360 --> 00:19:12,480
complete pen and paper okay

549
00:19:12,480 --> 00:19:14,480
we took all the specifications and we

550
00:19:14,480 --> 00:19:16,559
looked at everything and we tried the

551
00:19:16,559 --> 00:19:18,640
reflection attacks on everything and on

552
00:19:18,640 --> 00:19:20,640
the bluetooth mesh provisioning

553
00:19:20,640 --> 00:19:22,880
we saw additional problems and we

554
00:19:22,880 --> 00:19:25,679
investigated those

555
00:19:25,679 --> 00:19:29,120
okay so do you think it's possible to

556
00:19:29,120 --> 00:19:32,640
like to uh fund the attack using some uh

557
00:19:32,640 --> 00:19:34,640
formal verification tool

558
00:19:34,640 --> 00:19:38,000
uh yeah uh we didn't mention the

559
00:19:38,000 --> 00:19:40,240
presentation but actually people from

560
00:19:40,240 --> 00:19:41,919
purdue university

561
00:19:41,919 --> 00:19:44,000
discovered the bluetooth mesh reflection

562
00:19:44,000 --> 00:19:45,200
attack a few months

563
00:19:45,200 --> 00:19:47,440
after us so they reported it to the

564
00:19:47,440 --> 00:19:48,480
siege the cv

565
00:19:48,480 --> 00:19:50,480
was already allocated we discussed it

566
00:19:50,480 --> 00:19:51,520
together

567
00:19:51,520 --> 00:19:53,760
and i think they've well they mentioned

568
00:19:53,760 --> 00:19:55,760
that they use formal analysis

569
00:19:55,760 --> 00:19:57,520
basically the reflection attack should

570
00:19:57,520 --> 00:19:58,960
be

571
00:19:58,960 --> 00:20:00,230
possible to

572
00:20:00,230 --> 00:20:02,320
[Music]

573
00:20:02,320 --> 00:20:05,679
to find with thermal analysis entry

574
00:20:05,679 --> 00:20:07,600
is a bit tricky because you have to know

575
00:20:07,600 --> 00:20:09,919
that the pesky is retrievable so it

576
00:20:09,919 --> 00:20:11,039
depends on the

577
00:20:11,039 --> 00:20:12,799
exact framework that you used i know

578
00:20:12,799 --> 00:20:14,559
that pro very fast something which is

579
00:20:14,559 --> 00:20:16,080
called weak secret

580
00:20:16,080 --> 00:20:17,919
which means that something can be brute

581
00:20:17,919 --> 00:20:20,000
force and that may be used to actually

582
00:20:20,000 --> 00:20:24,799
recover the the attack using that

583
00:20:24,799 --> 00:20:27,360
but for the cryptographic misuse and the

584
00:20:27,360 --> 00:20:28,640
cmak problems

585
00:20:28,640 --> 00:20:32,320
uh i don't know if today any formal tool

586
00:20:32,320 --> 00:20:35,760
may be able to uh see them

587
00:20:35,760 --> 00:20:40,400
uh automatically okay

588
00:20:40,720 --> 00:20:44,559
um any more questions so if we don't

589
00:20:44,559 --> 00:20:44,960
have

590
00:20:44,960 --> 00:20:48,159
more questions uh probably we can

591
00:20:48,159 --> 00:20:51,520
uh thank the speaker uh

592
00:20:51,520 --> 00:20:53,919
and we can move to the next session

593
00:20:53,919 --> 00:20:57,520
which will be hosted by matias

594
00:20:57,520 --> 00:21:00,320
uh tristan thank you again thanks

595
00:21:00,320 --> 00:21:01,039
tristan

596
00:21:01,039 --> 00:21:03,120
and thanks to all the the two previous

597
00:21:03,120 --> 00:21:04,720
speakers from the previous session keep

598
00:21:04,720 --> 00:21:06,880
asking questions in the chat those will

599
00:21:06,880 --> 00:21:08,200
stick around

600
00:21:08,200 --> 00:21:11,200
thanks

