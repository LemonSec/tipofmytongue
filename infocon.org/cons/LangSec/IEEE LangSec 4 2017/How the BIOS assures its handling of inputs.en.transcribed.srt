1
00:00:04,839 --> 00:00:10,299
so now I'm<font color="#E5E5E5"> working</font><font color="#CCCCCC"> mock I see but</font>

2
00:00:07,700 --> 00:00:14,330
previously<font color="#E5E5E5"> worked for</font><font color="#CCCCCC"> years in Intel</font>

3
00:00:10,299 --> 00:00:17,630
<font color="#CCCCCC">most of the research done and add value</font>

4
00:00:14,330 --> 00:00:20,119
was in<font color="#E5E5E5"> Intel but nowadays when McAfee</font>

5
00:00:17,630 --> 00:00:22,759
and having the same name of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> team and</font>

6
00:00:20,119 --> 00:00:25,939
we<font color="#E5E5E5"> continue research this area just a</font>

7
00:00:22,760 --> 00:00:32,240
different company<font color="#CCCCCC"> before I go to this</font>

8
00:00:25,939 --> 00:00:33,580
area<font color="#CCCCCC"> I want to get some kind</font><font color="#E5E5E5"> of</font>

9
00:00:32,240 --> 00:00:36,710
[Music]

10
00:00:33,580 --> 00:00:39,589
introduction about why we need to think

11
00:00:36,710 --> 00:00:43,790
<font color="#CCCCCC">about</font><font color="#E5E5E5"> bias why this is important area</font>

12
00:00:39,589 --> 00:00:48,440
<font color="#E5E5E5">and in general from</font><font color="#CCCCCC"> breath</font><font color="#E5E5E5"> so we</font><font color="#CCCCCC"> have</font>

13
00:00:43,790 --> 00:00:52,070
the kind of malware campaign like wanna

14
00:00:48,440 --> 00:00:56,299
cry<font color="#E5E5E5"> which is main delivery method and</font>

15
00:00:52,070 --> 00:00:59,000
everything<font color="#CCCCCC"> happened in 300 so kind of</font>

16
00:00:56,299 --> 00:01:01,820
user more than<font color="#E5E5E5"> kernel and really rare</font>

17
00:00:59,000 --> 00:01:04,459
some malware go to some more<font color="#CCCCCC"> privilege</font>

18
00:01:01,820 --> 00:01:05,119
level like provider level less mem level

19
00:01:04,459 --> 00:01:10,219
and so on

20
00:01:05,119 --> 00:01:13,219
but nowadays<font color="#CCCCCC"> recent years we saw more</font>

21
00:01:10,219 --> 00:01:15,979
and<font color="#E5E5E5"> more sophisticated attacks which is</font>

22
00:01:13,219 --> 00:01:20,298
targeting low level components of<font color="#E5E5E5"> the</font>

23
00:01:15,979 --> 00:01:23,719
platform like from<font color="#E5E5E5"> where like hard life</font>

24
00:01:20,299 --> 00:01:27,920
<font color="#E5E5E5">former different other components</font><font color="#CCCCCC"> of the</font>

25
00:01:23,719 --> 00:01:34,249
platform<font color="#CCCCCC"> and different privileges level</font>

26
00:01:27,920 --> 00:01:36,560
like<font color="#CCCCCC"> SMM and repetition well so think</font>

27
00:01:34,249 --> 00:01:40,009
about scenario like you travel in and

28
00:01:36,560 --> 00:01:42,140
you don't have the locker in your hotel

29
00:01:40,009 --> 00:01:43,700
you just leave your laptop<font color="#E5E5E5"> you never</font>

30
00:01:42,140 --> 00:01:46,909
know what will<font color="#CCCCCC"> happen with your letter</font>

31
00:01:43,700 --> 00:01:49,789
<font color="#E5E5E5">laughter because someone can inject</font>

32
00:01:46,909 --> 00:01:52,819
implants of the<font color="#CCCCCC"> Year through physical</font>

33
00:01:49,789 --> 00:01:56,329
access as simple this<font color="#E5E5E5"> really simple</font>

34
00:01:52,819 --> 00:01:58,219
method<font color="#CCCCCC"> it also possible</font><font color="#E5E5E5"> to inject</font>

35
00:01:56,329 --> 00:02:00,259
implants in<font color="#E5E5E5"> runtime but</font><font color="#CCCCCC"> that more</font>

36
00:01:58,219 --> 00:02:02,329
<font color="#E5E5E5">sophisticated</font><font color="#CCCCCC"> than rely on</font><font color="#E5E5E5"> burner</font>

37
00:02:00,259 --> 00:02:05,090
abilities in your<font color="#E5E5E5"> firmware</font><font color="#CCCCCC"> and as a</font>

38
00:02:02,329 --> 00:02:07,758
<font color="#E5E5E5">scenario is when you buy laptop you can</font>

39
00:02:05,090 --> 00:02:10,399
no idea what exactly the year<font color="#CCCCCC"> you have</font>

40
00:02:07,759 --> 00:02:11,340
no<font color="#E5E5E5"> idea what what</font><font color="#CCCCCC"> firm idea what</font>

41
00:02:10,399 --> 00:02:13,200
<font color="#CCCCCC">personally</font>

42
00:02:11,340 --> 00:02:15,959
how many<font color="#CCCCCC"> farmers</font><font color="#E5E5E5"> you have what</font>

43
00:02:13,200 --> 00:02:23,100
components<font color="#E5E5E5"> that</font><font color="#CCCCCC"> Sherman has and so on</font>

44
00:02:15,959 --> 00:02:26,610
and this<font color="#CCCCCC"> is given us the idea</font><font color="#E5E5E5"> of the the</font>

45
00:02:23,100 --> 00:02:29,519
problem of platform transparency so you

46
00:02:26,610 --> 00:02:33,750
want to understand like what what<font color="#E5E5E5"> is</font>

47
00:02:29,520 --> 00:02:36,120
inside your<font color="#CCCCCC"> system and for my definition</font>

48
00:02:33,750 --> 00:02:39,950
of transparency is really please<font color="#E5E5E5"> face</font>

49
00:02:36,120 --> 00:02:43,920
things to us is is there is any feature

50
00:02:39,950 --> 00:02:45,690
which can<font color="#E5E5E5"> be disabled the Macan is to</font>

51
00:02:43,920 --> 00:02:48,809
disable and enable<font color="#E5E5E5"> feature should be</font>

52
00:02:45,690 --> 00:02:51,750
available documented and<font color="#CCCCCC"> well-known so</font>

53
00:02:48,810 --> 00:02:55,200
in case<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> have like someone like</font>

54
00:02:51,750 --> 00:02:59,250
some vendor without names<font color="#E5E5E5"> will</font><font color="#CCCCCC"> have some</font>

55
00:02:55,200 --> 00:03:01,260
<font color="#E5E5E5">extra feature</font><font color="#CCCCCC"> in your</font><font color="#E5E5E5"> laptop like you</font>

56
00:02:59,250 --> 00:03:02,430
want to<font color="#CCCCCC"> disable this feature if you and</font>

57
00:03:01,260 --> 00:03:06,569
you want to know<font color="#CCCCCC"> that</font><font color="#E5E5E5"> these features</font>

58
00:03:02,430 --> 00:03:08,640
exist<font color="#CCCCCC"> second is you always</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to have</font>

59
00:03:06,569 --> 00:03:10,500
the<font color="#CCCCCC"> rid primitive like if you have the</font>

60
00:03:08,640 --> 00:03:12,238
from where you<font color="#CCCCCC"> always want</font><font color="#E5E5E5"> to down the</font>

61
00:03:10,500 --> 00:03:14,850
<font color="#CCCCCC">firma from two thousand two different</font>

62
00:03:12,239 --> 00:03:16,380
<font color="#CCCCCC">methods</font><font color="#E5E5E5"> soft and</font><font color="#CCCCCC"> hardware reach</font>

63
00:03:14,850 --> 00:03:19,170
primitive is really important<font color="#CCCCCC"> and</font>

64
00:03:16,380 --> 00:03:21,720
nowadays<font color="#E5E5E5"> there's not too many farmers</font>

65
00:03:19,170 --> 00:03:23,399
<font color="#E5E5E5">can this with primitive because without</font>

66
00:03:21,720 --> 00:03:24,840
real image if it's really<font color="#E5E5E5"> hard to</font>

67
00:03:23,400 --> 00:03:27,000
extract<font color="#CCCCCC"> it you need</font><font color="#E5E5E5"> to find</font><font color="#CCCCCC"> a way you</font>

68
00:03:24,840 --> 00:03:29,010
need<font color="#CCCCCC"> to find a vulnerability like for</font>

69
00:03:27,000 --> 00:03:31,320
<font color="#CCCCCC">example if you</font><font color="#E5E5E5"> if you're talking about a</font>

70
00:03:29,010 --> 00:03:33,000
scene from where to dump its information

71
00:03:31,320 --> 00:03:34,920
to find<font color="#E5E5E5"> vulnerabilities</font><font color="#CCCCCC"> your farmer</font><font color="#E5E5E5"> then</font>

72
00:03:33,000 --> 00:03:37,739
you will dump it<font color="#CCCCCC"> so it's not the right</font>

73
00:03:34,920 --> 00:03:40,440
way<font color="#E5E5E5"> to do that</font><font color="#CCCCCC"> and third is you need to</font>

74
00:03:37,739 --> 00:03:42,690
<font color="#E5E5E5">match it</font><font color="#CCCCCC"> with something so after you</font>

75
00:03:40,440 --> 00:03:44,160
<font color="#CCCCCC">have</font><font color="#E5E5E5"> the sweet primitive you've done the</font>

76
00:03:42,690 --> 00:03:47,340
<font color="#E5E5E5">firmware you want to match it because</font>

77
00:03:44,160 --> 00:03:50,280
<font color="#E5E5E5">without mention it doesn't it doesn't</font>

78
00:03:47,340 --> 00:03:53,790
give you<font color="#CCCCCC"> any idea about</font><font color="#E5E5E5"> what this firm</font>

79
00:03:50,280 --> 00:03:57,720
is and<font color="#E5E5E5"> two interesting example I want to</font>

80
00:03:53,790 --> 00:04:00,570
<font color="#E5E5E5">give</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> the one is from</font><font color="#CCCCCC"> Island</font><font color="#E5E5E5"> for my</font>

81
00:03:57,720 --> 00:04:02,340
laptop<font color="#E5E5E5"> with a novelty</font><font color="#CCCCCC"> 430 I've collected</font>

82
00:04:00,570 --> 00:04:04,590
all<font color="#E5E5E5"> of the biases from the vendor side</font>

83
00:04:02,340 --> 00:04:06,450
and I assume in<font color="#CCCCCC"> that if I collected all</font>

84
00:04:04,590 --> 00:04:08,310
<font color="#CCCCCC">of the biases from</font><font color="#E5E5E5"> the vendor side and I</font>

85
00:04:06,450 --> 00:04:10,350
parse<font color="#E5E5E5"> it all of them and collected the</font>

86
00:04:08,310 --> 00:04:13,170
hashes<font color="#CCCCCC"> I assumed that</font><font color="#E5E5E5"> if I</font><font color="#CCCCCC"> ran in my</font>

87
00:04:10,350 --> 00:04:15,209
<font color="#CCCCCC">system match matching</font><font color="#E5E5E5"> to the</font><font color="#CCCCCC"> binary</font>

88
00:04:13,170 --> 00:04:17,039
which I have in my system all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

89
00:04:15,209 --> 00:04:20,640
<font color="#E5E5E5">binaries should be from the list because</font>

90
00:04:17,039 --> 00:04:22,680
<font color="#E5E5E5">it's others</font><font color="#CCCCCC"> I just bought a laptop turns</font>

91
00:04:20,640 --> 00:04:23,780
<font color="#E5E5E5">out when I run it I figure out</font><font color="#CCCCCC"> that one</font>

92
00:04:22,680 --> 00:04:27,440
module<font color="#E5E5E5"> not in the list</font>

93
00:04:23,780 --> 00:04:30,169
I was kind of surprised because<font color="#E5E5E5"> it's</font>

94
00:04:27,440 --> 00:04:31,880
just one it's not like 100 it's not kind

95
00:04:30,170 --> 00:04:34,640
of something<font color="#E5E5E5"> which you quick</font><font color="#CCCCCC"> false</font>

96
00:04:31,880 --> 00:04:36,530
<font color="#CCCCCC">positive</font><font color="#E5E5E5"> it's real not just one model so</font>

97
00:04:34,640 --> 00:04:39,590
after couple hours<font color="#E5E5E5"> reverse</font><font color="#CCCCCC"> engineering I</font>

98
00:04:36,530 --> 00:04:42,739
figure<font color="#E5E5E5"> out that it is false positive</font>

99
00:04:39,590 --> 00:04:45,049
<font color="#E5E5E5">because there is some this is version</font><font color="#CCCCCC"> of</font>

100
00:04:42,740 --> 00:04:46,790
the<font color="#E5E5E5"> bias which has some different</font>

101
00:04:45,050 --> 00:04:49,550
compilation<font color="#CCCCCC"> like the options</font><font color="#E5E5E5"> and they</font>

102
00:04:46,790 --> 00:04:51,530
denied a little bit different<font color="#CCCCCC"> code but I</font>

103
00:04:49,550 --> 00:04:55,370
didn't<font color="#E5E5E5"> find that bias in the vendor side</font>

104
00:04:51,530 --> 00:04:57,799
<font color="#E5E5E5">so I couldn't trust</font><font color="#CCCCCC"> that binary if I if</font>

105
00:04:55,370 --> 00:04:59,390
I not<font color="#E5E5E5"> reverse engineer</font><font color="#CCCCCC"> it because I</font>

106
00:04:57,800 --> 00:05:02,660
didn't find this any source of<font color="#CCCCCC"> this</font>

107
00:04:59,390 --> 00:05:06,770
binary didn't exist<font color="#CCCCCC"> so that's kind of</font>

108
00:05:02,660 --> 00:05:09,410
the state<font color="#E5E5E5"> of the problem and the</font>

109
00:05:06,770 --> 00:05:11,870
solution there is not really<font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

110
00:05:09,410 --> 00:05:14,570
silver boot which you can just use it

111
00:05:11,870 --> 00:05:16,820
<font color="#CCCCCC">run it and see okay here is all input</font>

112
00:05:14,570 --> 00:05:19,040
<font color="#CCCCCC">which BIOS handle here is</font><font color="#E5E5E5"> all components</font>

113
00:05:16,820 --> 00:05:22,400
<font color="#CCCCCC">which biases you can verify it you can</font>

114
00:05:19,040 --> 00:05:25,760
check them<font color="#CCCCCC"> okay there's like</font><font color="#E5E5E5"> this this</font>

115
00:05:22,400 --> 00:05:27,679
amount of<font color="#E5E5E5"> issue was</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> set and you you</font>

116
00:05:25,760 --> 00:05:30,440
don't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> any kind</font><font color="#E5E5E5"> of guarantee that</font>

117
00:05:27,680 --> 00:05:32,419
<font color="#CCCCCC">all of this done or not done there is</font>

118
00:05:30,440 --> 00:05:34,190
not<font color="#CCCCCC"> no like kind of good</font><font color="#E5E5E5"> mechanism</font>

119
00:05:32,419 --> 00:05:37,250
there's<font color="#CCCCCC"> couple maintenance which can</font>

120
00:05:34,190 --> 00:05:40,219
give you some answers<font color="#CCCCCC"> and that's kind of</font>

121
00:05:37,250 --> 00:05:41,870
<font color="#E5E5E5">the main topic of their of the my</font>

122
00:05:40,220 --> 00:05:45,020
presentation so I will go<font color="#E5E5E5"> through the</font>

123
00:05:41,870 --> 00:05:47,860
<font color="#E5E5E5">BIOS overview then method how to static</font>

124
00:05:45,020 --> 00:05:50,990
and dynamic and<font color="#E5E5E5"> dynamically</font><font color="#CCCCCC"> analyze bias</font>

125
00:05:47,860 --> 00:05:54,280
<font color="#CCCCCC">what kind of interface is accessible how</font>

126
00:05:50,990 --> 00:05:56,720
they<font color="#CCCCCC"> accessible what kind of kind</font><font color="#E5E5E5"> of</font>

127
00:05:54,280 --> 00:05:59,179
<font color="#E5E5E5">languages bias use to implement</font>

128
00:05:56,720 --> 00:06:01,250
<font color="#CCCCCC">different component</font><font color="#E5E5E5"> and where is the</font>

129
00:05:59,180 --> 00:06:04,970
<font color="#CCCCCC">person a very the person inside the bias</font>

130
00:06:01,250 --> 00:06:08,900
<font color="#CCCCCC">work how much the code</font><font color="#E5E5E5"> base to different</font>

131
00:06:04,970 --> 00:06:12,620
component of the bias<font color="#E5E5E5"> then I've</font>

132
00:06:08,900 --> 00:06:14,929
explained a little<font color="#CCCCCC"> bit how</font><font color="#E5E5E5"> we can apply</font>

133
00:06:12,620 --> 00:06:19,640
<font color="#E5E5E5">some different</font><font color="#CCCCCC"> formal education method</font>

134
00:06:14,930 --> 00:06:22,669
to make<font color="#E5E5E5"> some checks like for example in</font>

135
00:06:19,640 --> 00:06:25,130
some in some<font color="#CCCCCC"> of the biases in many</font>

136
00:06:22,669 --> 00:06:27,830
biases there is a semi friendless and in

137
00:06:25,130 --> 00:06:30,320
source code<font color="#E5E5E5"> of the SMI handler you have</font>

138
00:06:27,830 --> 00:06:32,990
the comments which will tell you this

139
00:06:30,320 --> 00:06:35,900
function will handle<font color="#CCCCCC"> untrusted simple</font>

140
00:06:32,990 --> 00:06:37,759
and this is<font color="#E5E5E5"> just common</font><font color="#CCCCCC"> Nationals so</font>

141
00:06:35,900 --> 00:06:40,820
could<font color="#E5E5E5"> be done more like</font><font color="#CCCCCC"> good be done</font>

142
00:06:37,759 --> 00:06:43,820
some compilation<font color="#CCCCCC"> plug-in which will make</font>

143
00:06:40,820 --> 00:06:46,909
some checks about who who the<font color="#E5E5E5"> call this</font>

144
00:06:43,820 --> 00:06:50,300
<font color="#E5E5E5">function how how</font><font color="#CCCCCC"> this function handle</font>

145
00:06:46,910 --> 00:06:52,430
input and so on<font color="#E5E5E5"> and a little</font><font color="#CCCCCC"> bit about</font>

146
00:06:50,300 --> 00:06:54,650
symbolic execution of the causation this

147
00:06:52,430 --> 00:06:57,110
really related to formal verification

148
00:06:54,650 --> 00:06:59,929
method because it will<font color="#CCCCCC"> represent that</font>

149
00:06:57,110 --> 00:07:02,240
<font color="#E5E5E5">for for the</font><font color="#CCCCCC"> framers a formal</font>

150
00:06:59,930 --> 00:07:05,690
verification<font color="#E5E5E5"> is much more important</font><font color="#CCCCCC"> than</font>

151
00:07:02,240 --> 00:07:08,449
<font color="#E5E5E5">for</font><font color="#CCCCCC"> example for huge software</font><font color="#E5E5E5"> because in</font>

152
00:07:05,690 --> 00:07:11,020
from area<font color="#E5E5E5"> you have a lot</font><font color="#CCCCCC"> of code but the</font>

153
00:07:08,449 --> 00:07:16,400
traces the size of the flow which

154
00:07:11,020 --> 00:07:18,469
<font color="#E5E5E5">usually going through the</font><font color="#CCCCCC"> sum which</font><font color="#E5E5E5"> it</font>

155
00:07:16,400 --> 00:07:20,659
can<font color="#CCCCCC"> learn some specific input there is</font>

156
00:07:18,470 --> 00:07:23,180
much<font color="#CCCCCC"> much smaller</font><font color="#E5E5E5"> like if you compare</font>

157
00:07:20,660 --> 00:07:24,830
<font color="#E5E5E5">like for example SMI handler which is</font>

158
00:07:23,180 --> 00:07:27,139
one<font color="#CCCCCC"> of the parent</font><font color="#E5E5E5"> I'm component of the</font>

159
00:07:24,830 --> 00:07:30,070
bias<font color="#E5E5E5"> you have like always less than</font>

160
00:07:27,139 --> 00:07:32,870
million instruction in during entire

161
00:07:30,070 --> 00:07:35,360
flow from the begin to the end it's

162
00:07:32,870 --> 00:07:39,919
really<font color="#E5E5E5"> less than</font><font color="#CCCCCC"> any like even driver</font>

163
00:07:35,360 --> 00:07:43,639
flow when<font color="#E5E5E5"> you handle any iOS ioctl in</font>

164
00:07:39,919 --> 00:07:46,310
any driver in<font color="#E5E5E5"> Windows so the amount of</font>

165
00:07:43,639 --> 00:07:48,380
lines of<font color="#E5E5E5"> course there is a lot but the</font>

166
00:07:46,310 --> 00:07:51,710
amount of lines which is<font color="#E5E5E5"> handling input</font>

167
00:07:48,380 --> 00:07:55,099
and how they separate the flows make

168
00:07:51,710 --> 00:07:58,210
makes us<font color="#CCCCCC"> easier to have to implement</font>

169
00:07:55,099 --> 00:08:01,099
<font color="#E5E5E5">verification method to that small flow</font>

170
00:07:58,210 --> 00:08:04,580
so it's<font color="#E5E5E5"> not small overview of the bias</font>

171
00:08:01,099 --> 00:08:07,159
so<font color="#E5E5E5"> we have typically user mode</font><font color="#CCCCCC"> keyer</font>

172
00:08:04,580 --> 00:08:10,008
<font color="#E5E5E5">know everything I mean everything</font><font color="#CCCCCC"> candor</font>

173
00:08:07,159 --> 00:08:12,530
<font color="#CCCCCC">and environmental</font><font color="#E5E5E5"> or hypervisor</font><font color="#CCCCCC"> can be</font>

174
00:08:10,009 --> 00:08:17,599
between<font color="#E5E5E5"> hardware and the operation</font>

175
00:08:12,530 --> 00:08:20,210
<font color="#E5E5E5">system and</font><font color="#CCCCCC"> SML is the runtime part of</font>

176
00:08:17,599 --> 00:08:23,719
the<font color="#CCCCCC"> bios which is living</font><font color="#E5E5E5"> in the SML mode</font>

177
00:08:20,210 --> 00:08:25,340
and implemented SMI handlers which<font color="#CCCCCC"> make</font>

178
00:08:23,720 --> 00:08:27,500
some<font color="#E5E5E5"> management functionality of the</font>

179
00:08:25,340 --> 00:08:30,619
platter for example if<font color="#E5E5E5"> your cooler</font>

180
00:08:27,500 --> 00:08:32,299
<font color="#E5E5E5">doesn't work in</font><font color="#CCCCCC"> your motherboard or is</font>

181
00:08:30,620 --> 00:08:34,760
<font color="#CCCCCC">they any signal coming from some</font>

182
00:08:32,299 --> 00:08:37,458
controller<font color="#CCCCCC"> in many cases go into this</font>

183
00:08:34,760 --> 00:08:39,169
<font color="#CCCCCC">mmm code and so</font><font color="#E5E5E5"> might handle it and get</font>

184
00:08:37,458 --> 00:08:42,468
the<font color="#CCCCCC"> information to the bias also there's</font>

185
00:08:39,169 --> 00:08:45,350
a soft winter<font color="#CCCCCC"> software interface</font><font color="#E5E5E5"> mm my</font>

186
00:08:42,469 --> 00:08:45,950
<font color="#E5E5E5">canvas so operation system can call any</font>

187
00:08:45,350 --> 00:08:48,110
SMI

188
00:08:45,950 --> 00:08:51,890
handler<font color="#E5E5E5"> through the interface</font><font color="#CCCCCC"> through</font>

189
00:08:48,110 --> 00:08:54,200
the<font color="#CCCCCC"> i/o port</font><font color="#E5E5E5"> Batum in general bias is</font>

190
00:08:51,890 --> 00:08:55,610
<font color="#CCCCCC">split into two for two components one</font><font color="#E5E5E5"> is</font>

191
00:08:54,200 --> 00:08:58,490
<font color="#E5E5E5">boot time component</font>

192
00:08:55,610 --> 00:09:00,830
<font color="#CCCCCC">butum component is everything which is</font>

193
00:08:58,490 --> 00:09:02,870
running<font color="#E5E5E5"> when you power</font><font color="#CCCCCC"> on your system</font>

194
00:09:00,830 --> 00:09:04,670
<font color="#E5E5E5">after reset vector</font><font color="#CCCCCC"> instruction so first</font>

195
00:09:02,870 --> 00:09:07,130
<font color="#CCCCCC">instruction in the system is reset</font>

196
00:09:04,670 --> 00:09:09,319
<font color="#CCCCCC">vector</font><font color="#E5E5E5"> and then after</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> after there</font><font color="#CCCCCC"> is</font>

197
00:09:07,130 --> 00:09:11,960
a<font color="#E5E5E5"> vector</font><font color="#CCCCCC"> we have</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of this complicated</font>

198
00:09:09,320 --> 00:09:14,540
<font color="#E5E5E5">boot flow which is big part of the</font><font color="#CCCCCC"> bios</font>

199
00:09:11,960 --> 00:09:17,870
in that part of<font color="#E5E5E5"> the bytes we also have</font>

200
00:09:14,540 --> 00:09:20,390
the inputs<font color="#CCCCCC"> like it</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to buy the file</font>

201
00:09:17,870 --> 00:09:23,720
system it in<font color="#CCCCCC"> to parse</font><font color="#E5E5E5"> the executable</font>

202
00:09:20,390 --> 00:09:27,199
files<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Lord</font><font color="#E5E5E5"> boot water and so on so</font>

203
00:09:23,720 --> 00:09:30,320
that<font color="#CCCCCC"> that area</font><font color="#E5E5E5"> has some vectors of</font>

204
00:09:27,200 --> 00:09:32,810
attack and the second part of the bias

205
00:09:30,320 --> 00:09:34,190
is<font color="#E5E5E5"> runtime component so random component</font>

206
00:09:32,810 --> 00:09:38,329
is everything which is<font color="#E5E5E5"> related</font><font color="#CCCCCC"> to</font>

207
00:09:34,190 --> 00:09:42,380
support some<font color="#CCCCCC"> of the functionality which</font>

208
00:09:38,330 --> 00:09:45,680
is which bias has to the operation

209
00:09:42,380 --> 00:09:47,630
<font color="#E5E5E5">system including a runtime table which</font>

210
00:09:45,680 --> 00:09:49,670
is<font color="#CCCCCC"> untimely fire table which is</font>

211
00:09:47,630 --> 00:09:51,250
<font color="#E5E5E5">implementing some functionality which</font>

212
00:09:49,670 --> 00:09:57,979
you can trigger it for<font color="#E5E5E5"> example</font>

213
00:09:51,250 --> 00:10:01,940
redirected BIOS configuration so so what

214
00:09:57,980 --> 00:10:04,580
is different<font color="#CCCCCC"> between</font><font color="#E5E5E5"> bias and unified so</font>

215
00:10:01,940 --> 00:10:07,160
buyers like in the in the terminology<font color="#CCCCCC"> of</font>

216
00:10:04,580 --> 00:10:08,870
legacy bias was implemented<font color="#CCCCCC"> without</font><font color="#E5E5E5"> any</font>

217
00:10:07,160 --> 00:10:11,620
<font color="#E5E5E5">standards it was implemented in</font>

218
00:10:08,870 --> 00:10:14,750
assembler<font color="#E5E5E5"> and it was implemented through</font>

219
00:10:11,620 --> 00:10:16,970
<font color="#E5E5E5">IDT table through the handler ADC table</font>

220
00:10:14,750 --> 00:10:20,270
<font color="#E5E5E5">so making any verification</font><font color="#CCCCCC"> of the code</font>

221
00:10:16,970 --> 00:10:24,350
was really really complicated<font color="#E5E5E5"> because it</font>

222
00:10:20,270 --> 00:10:28,460
doesn't have any<font color="#E5E5E5"> kind of formal</font><font color="#CCCCCC"> and it</font>

223
00:10:24,350 --> 00:10:31,210
not formal any kind<font color="#E5E5E5"> of firm structure</font>

224
00:10:28,460 --> 00:10:34,160
like Harrison was an assembler you

225
00:10:31,210 --> 00:10:36,050
define the IDT table then inside the

226
00:10:34,160 --> 00:10:38,030
handler you redefine<font color="#E5E5E5"> it it because you</font>

227
00:10:36,050 --> 00:10:40,400
want to<font color="#E5E5E5"> switch education to some other</font>

228
00:10:38,030 --> 00:10:43,939
flow and so<font color="#E5E5E5"> on so far so the code base</font>

229
00:10:40,400 --> 00:10:45,670
was really kind of not really structured

230
00:10:43,940 --> 00:10:51,730
and not really good for<font color="#E5E5E5"> verification</font>

231
00:10:45,670 --> 00:10:55,280
<font color="#CCCCCC">also it uses the different proprietary</font>

232
00:10:51,730 --> 00:10:57,350
mechanism to compress the bias<font color="#E5E5E5"> so in the</font>

233
00:10:55,280 --> 00:10:59,300
<font color="#E5E5E5">FI base bias the mechanism how to</font>

234
00:10:57,350 --> 00:11:02,320
compress all of<font color="#E5E5E5"> the code</font>

235
00:10:59,300 --> 00:11:05,569
<font color="#E5E5E5">is define it at</font><font color="#CCCCCC"> assistant standard and</font>

236
00:11:02,320 --> 00:11:07,339
all of the UEFA vendors use the same

237
00:11:05,570 --> 00:11:10,010
method so you can unpack<font color="#E5E5E5"> all of the</font>

238
00:11:07,339 --> 00:11:11,990
biases almost the same method<font color="#CCCCCC"> but in</font>

239
00:11:10,010 --> 00:11:14,060
<font color="#CCCCCC">Legacy</font><font color="#E5E5E5"> there was different</font><font color="#CCCCCC"> methods and</font>

240
00:11:11,990 --> 00:11:16,339
vendor uses proprietary algorithm so

241
00:11:14,060 --> 00:11:19,518
this was another<font color="#CCCCCC"> a really kind</font><font color="#E5E5E5"> of</font>

242
00:11:16,339 --> 00:11:21,470
interesting<font color="#CCCCCC"> point to discuss in Legacy</font>

243
00:11:19,519 --> 00:11:24,019
bias also<font color="#E5E5E5"> there was kind of fundamental</font>

244
00:11:21,470 --> 00:11:26,149
problem with<font color="#E5E5E5"> the protections and with</font>

245
00:11:24,019 --> 00:11:29,079
the booth law<font color="#CCCCCC"> so inside the booth flow</font>

246
00:11:26,149 --> 00:11:32,209
<font color="#E5E5E5">there in the boot sequence there was</font>

247
00:11:29,079 --> 00:11:34,579
many points when the configuration

248
00:11:32,209 --> 00:11:36,489
should be done previously<font color="#E5E5E5"> or it's too</font>

249
00:11:34,579 --> 00:11:38,180
<font color="#E5E5E5">late and so on so forth</font><font color="#CCCCCC"> there was no</font>

250
00:11:36,490 --> 00:11:40,700
<font color="#E5E5E5">definition like what should be</font>

251
00:11:38,180 --> 00:11:42,550
initialized at first<font color="#E5E5E5"> and if it's working</font>

252
00:11:40,700 --> 00:11:45,170
it working<font color="#E5E5E5"> no one kind of touches it and</font>

253
00:11:42,550 --> 00:11:47,269
if I base it<font color="#E5E5E5"> bias there was completely</font>

254
00:11:45,170 --> 00:11:50,899
<font color="#CCCCCC">different story they make in standard</font>

255
00:11:47,269 --> 00:11:53,959
they put a lot of effort to<font color="#E5E5E5"> standard</font>

256
00:11:50,899 --> 00:11:55,820
<font color="#E5E5E5">standardize their boot flow so you have</font>

257
00:11:53,959 --> 00:11:59,209
<font color="#E5E5E5">different</font><font color="#CCCCCC"> phases in different phases</font>

258
00:11:55,820 --> 00:12:04,640
should happen different things and they

259
00:11:59,209 --> 00:12:07,310
they kind<font color="#E5E5E5"> of</font><font color="#CCCCCC"> fun</font><font color="#E5E5E5"> there was more easy</font><font color="#CCCCCC"> to</font>

260
00:12:04,640 --> 00:12:09,949
validate them because there was all kind

261
00:12:07,310 --> 00:12:13,040
of part<font color="#E5E5E5"> of the standard also if I base</font>

262
00:12:09,950 --> 00:12:16,250
<font color="#CCCCCC">advice it's almost</font><font color="#E5E5E5"> C code assembler just</font>

263
00:12:13,040 --> 00:12:18,709
small portion of<font color="#E5E5E5"> that man ID</font><font color="#CCCCCC"> 11%</font><font color="#E5E5E5"> almost</font>

264
00:12:16,250 --> 00:12:21,399
all<font color="#CCCCCC"> of the code</font><font color="#E5E5E5"> the C code implemented</font>

265
00:12:18,709 --> 00:12:24,949
<font color="#CCCCCC">in them in a way</font><font color="#E5E5E5"> that you have</font>

266
00:12:21,399 --> 00:12:26,089
<font color="#CCCCCC">components which which allow to</font><font color="#E5E5E5"> reuse</font>

267
00:12:24,950 --> 00:12:28,250
different components

268
00:12:26,089 --> 00:12:30,560
although the components has the<font color="#E5E5E5"> similar</font>

269
00:12:28,250 --> 00:12:35,810
methods to call each<font color="#E5E5E5"> other to set</font>

270
00:12:30,560 --> 00:12:38,719
callbacks<font color="#E5E5E5"> all of</font><font color="#CCCCCC"> them set by a similar</font>

271
00:12:35,810 --> 00:12:42,829
compression methods and similar way

272
00:12:38,720 --> 00:12:48,920
called<font color="#E5E5E5"> BIOS color how viruses build it</font>

273
00:12:42,829 --> 00:12:50,930
to<font color="#E5E5E5"> to entires to the spy image so there</font>

274
00:12:48,920 --> 00:12:54,949
is the list of<font color="#CCCCCC"> things which is</font><font color="#E5E5E5"> coming to</font>

275
00:12:50,930 --> 00:12:58,219
the<font color="#CCCCCC"> ufi i was mentioned couple</font><font color="#E5E5E5"> one of</font>

276
00:12:54,949 --> 00:13:00,439
the another important is the format of

277
00:12:58,220 --> 00:13:04,550
the executable components of the buyers

278
00:13:00,440 --> 00:13:07,070
was standard Pico format<font color="#E5E5E5"> actually</font>

279
00:13:04,550 --> 00:13:08,390
there's two<font color="#CCCCCC"> format speak often T</font><font color="#E5E5E5"> for</font>

280
00:13:07,070 --> 00:13:10,970
this<font color="#CCCCCC"> four</font><font color="#E5E5E5"> different faces different</font>

281
00:13:08,390 --> 00:13:13,590
format<font color="#E5E5E5"> there is just two loaders which</font>

282
00:13:10,970 --> 00:13:16,080
is<font color="#CCCCCC"> load and different and binaries</font>

283
00:13:13,590 --> 00:13:17,880
but<font color="#E5E5E5"> I</font><font color="#CCCCCC"> ended</font><font color="#E5E5E5"> all of the rest and</font><font color="#CCCCCC"> uh so</font>

284
00:13:16,080 --> 00:13:20,700
then<font color="#E5E5E5"> just need to implement correctly</font>

285
00:13:17,880 --> 00:13:24,000
just<font color="#CCCCCC"> tool orders</font><font color="#E5E5E5"> and after that they can</font>

286
00:13:20,700 --> 00:13:27,360
<font color="#CCCCCC">reuse it to to entire face to work all</font>

287
00:13:24,000 --> 00:13:29,910
<font color="#E5E5E5">the components inside the</font><font color="#CCCCCC"> BIOS</font><font color="#E5E5E5"> so yeah</font>

288
00:13:27,360 --> 00:13:32,300
that's<font color="#E5E5E5"> this varies from relating so</font>

289
00:13:29,910 --> 00:13:35,520
<font color="#E5E5E5">Italy in between operation system and</font>

290
00:13:32,300 --> 00:13:38,160
hardware<font color="#CCCCCC"> and this is that different</font>

291
00:13:35,520 --> 00:13:41,250
<font color="#CCCCCC">faces</font><font color="#E5E5E5"> that standard pictures of every</font>

292
00:13:38,160 --> 00:13:43,490
<font color="#CCCCCC">ufi presentation so I want</font><font color="#E5E5E5"> to be</font>

293
00:13:41,250 --> 00:13:46,200
persistent<font color="#CCCCCC"> that's about to</font><font color="#E5E5E5"> fi and the</font>

294
00:13:43,490 --> 00:13:48,390
<font color="#E5E5E5">bestest</font><font color="#CCCCCC"> light so but we have these</font>

295
00:13:46,200 --> 00:13:51,330
spaces and what is important is that

296
00:13:48,390 --> 00:13:55,860
<font color="#E5E5E5">faces</font><font color="#CCCCCC"> is pretty well define it and in</font>

297
00:13:51,330 --> 00:13:58,620
each face should should<font color="#E5E5E5"> be some should</font>

298
00:13:55,860 --> 00:14:01,890
be should set some registers which is

299
00:13:58,620 --> 00:14:06,080
defined<font color="#E5E5E5"> in that face sometimes it was</font>

300
00:14:01,890 --> 00:14:09,900
not that precise so sometimes the if the

301
00:14:06,080 --> 00:14:13,200
spec doesn't<font color="#E5E5E5"> predict some of the right</font>

302
00:14:09,900 --> 00:14:15,990
hardware configuration it can be flip it

303
00:14:13,200 --> 00:14:20,580
and for example<font color="#CCCCCC"> I know it will scuttle</font>

304
00:14:15,990 --> 00:14:24,230
register registers which should be it

305
00:14:20,580 --> 00:14:27,630
should<font color="#CCCCCC"> be insulated here but because</font>

306
00:14:24,230 --> 00:14:30,800
bias<font color="#CCCCCC"> vendor making some extra</font>

307
00:14:27,630 --> 00:14:34,290
<font color="#E5E5E5">functionality and they want to have that</font>

308
00:14:30,800 --> 00:14:36,660
interface unlocked<font color="#E5E5E5"> until this phase so</font>

309
00:14:34,290 --> 00:14:38,640
it is kind of dangerous<font color="#E5E5E5"> it's not super</font>

310
00:14:36,660 --> 00:14:42,569
critical it's not<font color="#CCCCCC"> a security</font><font color="#E5E5E5"> issue but</font>

311
00:14:38,640 --> 00:14:47,250
it's not kind of whatever is this<font color="#E5E5E5"> faces</font>

312
00:14:42,570 --> 00:14:49,589
was define it and here is a lot of area

313
00:14:47,250 --> 00:14:51,690
when you can kind of try<font color="#CCCCCC"> to apply the</font>

314
00:14:49,589 --> 00:14:54,480
formal verification method when you<font color="#E5E5E5"> in</font>

315
00:14:51,690 --> 00:14:57,870
<font color="#E5E5E5">during compiler time you can say okay if</font>

316
00:14:54,480 --> 00:15:00,570
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> P I face and in P I face this</font>

317
00:14:57,870 --> 00:15:03,060
set of<font color="#E5E5E5"> register should set and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> that</font>

318
00:15:00,570 --> 00:15:05,339
set of register is not set then<font color="#E5E5E5"> you just</font>

319
00:15:03,060 --> 00:15:07,199
cannot build your buyers so even if the

320
00:15:05,339 --> 00:15:09,120
buyers<font color="#E5E5E5"> developer making mistake and</font>

321
00:15:07,200 --> 00:15:11,250
didn't lock<font color="#CCCCCC"> the register he will figure</font>

322
00:15:09,120 --> 00:15:13,440
<font color="#E5E5E5">out</font><font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> cannot give</font><font color="#CCCCCC"> my bias because</font><font color="#E5E5E5"> I</font>

323
00:15:11,250 --> 00:15:15,510
didn't set some registers and that

324
00:15:13,440 --> 00:15:18,480
because the standard is define it over

325
00:15:15,510 --> 00:15:23,670
there that kind of one of<font color="#E5E5E5"> the nice part</font>

326
00:15:18,480 --> 00:15:27,600
of<font color="#E5E5E5"> the you find another is important</font>

327
00:15:23,670 --> 00:15:29,630
things for you<font color="#CCCCCC"> fi</font><font color="#E5E5E5"> and to and also</font><font color="#CCCCCC"> to</font>

328
00:15:27,600 --> 00:15:32,220
apply verification method is

329
00:15:29,630 --> 00:15:33,660
configuration<font color="#CCCCCC"> of the virus nowadays</font>

330
00:15:32,220 --> 00:15:35,880
configuration of the<font color="#CCCCCC"> biases pretty</font>

331
00:15:33,660 --> 00:15:39,120
complex<font color="#E5E5E5"> and Stewart and NV are armed</font><font color="#CCCCCC"> and</font>

332
00:15:35,880 --> 00:15:42,390
not<font color="#CCCCCC"> as storage inside the spy and the</font>

333
00:15:39,120 --> 00:15:44,760
format of the every variable<font color="#CCCCCC"> if a</font>

334
00:15:42,390 --> 00:15:48,120
variable<font color="#E5E5E5"> which is configuration of the</font>

335
00:15:44,760 --> 00:15:51,270
bias is define it and every<font color="#E5E5E5"> time when</font>

336
00:15:48,120 --> 00:15:54,000
you<font color="#E5E5E5"> kind of change the variable and read</font>

337
00:15:51,270 --> 00:15:58,230
it<font color="#E5E5E5"> again use the person the person API</font>

338
00:15:54,000 --> 00:16:01,140
<font color="#CCCCCC">so if you have a chance to put some kind</font>

339
00:15:58,230 --> 00:16:04,410
of<font color="#E5E5E5"> miss</font><font color="#CCCCCC"> format that is</font><font color="#E5E5E5"> variable inside</font>

340
00:16:01,140 --> 00:16:07,230
<font color="#E5E5E5">there inside your bias</font><font color="#CCCCCC"> you can you</font><font color="#E5E5E5"> can</font>

341
00:16:04,410 --> 00:16:09,329
use it to to make to figure out

342
00:16:07,230 --> 00:16:11,610
<font color="#CCCCCC">readwrite primitive to the bias</font><font color="#E5E5E5"> so</font>

343
00:16:09,330 --> 00:16:13,320
that's really important point and<font color="#E5E5E5"> also</font>

344
00:16:11,610 --> 00:16:16,470
<font color="#E5E5E5">really important point for</font><font color="#CCCCCC"> verification</font>

345
00:16:13,320 --> 00:16:19,470
<font color="#E5E5E5">is the property of</font><font color="#CCCCCC"> the variable so if</font>

346
00:16:16,470 --> 00:16:23,010
the variable shouldn't<font color="#E5E5E5"> be accessible</font>

347
00:16:19,470 --> 00:16:25,529
<font color="#E5E5E5">after</font><font color="#CCCCCC"> good time</font><font color="#E5E5E5"> you can add this to the</font>

348
00:16:23,010 --> 00:16:27,899
<font color="#E5E5E5">entire form on the vacation</font><font color="#CCCCCC"> structure of</font>

349
00:16:25,529 --> 00:16:30,870
the bias and<font color="#E5E5E5"> it you will check</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> now</font>

350
00:16:27,899 --> 00:16:34,170
in this<font color="#E5E5E5"> platform for</font><font color="#CCCCCC"> example setup</font>

351
00:16:30,870 --> 00:16:36,329
variable<font color="#E5E5E5"> shouldn't be a random</font><font color="#CCCCCC"> variable</font>

352
00:16:34,170 --> 00:16:40,680
<font color="#E5E5E5">and time variable because if set of</font>

353
00:16:36,329 --> 00:16:42,329
variable is<font color="#CCCCCC"> even a long time then you</font>

354
00:16:40,680 --> 00:16:44,550
can<font color="#E5E5E5"> modify the a person system can</font>

355
00:16:42,329 --> 00:16:46,890
modify it and change configuration of

356
00:16:44,550 --> 00:16:51,479
the bias which shouldn't be accessible

357
00:16:46,890 --> 00:16:53,819
at runtime<font color="#E5E5E5"> and there is no kind of good</font>

358
00:16:51,480 --> 00:16:55,589
methods which is very fine which

359
00:16:53,820 --> 00:16:58,320
<font color="#E5E5E5">variables should be</font><font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> which</font>

360
00:16:55,589 --> 00:17:00,750
variables of the boot<font color="#E5E5E5"> time we have this</font>

361
00:16:58,320 --> 00:17:03,120
in<font color="#E5E5E5"> chipset like simple check like okay</font>

362
00:17:00,750 --> 00:17:06,329
if you can read this variable then mean

363
00:17:03,120 --> 00:17:08,510
it probably<font color="#E5E5E5"> system on arrival but there</font>

364
00:17:06,329 --> 00:17:12,030
is nothing<font color="#E5E5E5"> integrated to the</font><font color="#CCCCCC"> bios</font><font color="#E5E5E5"> to</font>

365
00:17:08,510 --> 00:17:15,809
<font color="#E5E5E5">check itself</font><font color="#CCCCCC"> what kind of variable</font>

366
00:17:12,030 --> 00:17:18,599
exposed to the runtime and<font color="#E5E5E5"> does the</font><font color="#CCCCCC"> bios</font>

367
00:17:15,809 --> 00:17:22,020
developer making mistakes

368
00:17:18,599 --> 00:17:25,079
<font color="#E5E5E5">et k2 has their reference</font><font color="#CCCCCC"> implementation</font>

369
00:17:22,020 --> 00:17:28,410
so you can just download it and run any

370
00:17:25,079 --> 00:17:30,450
tests<font color="#CCCCCC"> make an</font><font color="#E5E5E5"> investigation many bugs</font>

371
00:17:28,410 --> 00:17:33,760
was found by<font color="#CCCCCC"> the main source code of the</font>

372
00:17:30,450 --> 00:17:35,890
DK which was really<font color="#E5E5E5"> good</font>

373
00:17:33,760 --> 00:17:39,040
they were speaks it before they come

374
00:17:35,890 --> 00:17:42,299
<font color="#CCCCCC">into</font><font color="#E5E5E5"> the vendors and</font><font color="#CCCCCC"> booth and the</font>

375
00:17:39,040 --> 00:17:46,149
vendor didn't like kind<font color="#E5E5E5"> of pull</font><font color="#CCCCCC"> that box</font>

376
00:17:42,299 --> 00:17:48,639
so another important things because<font color="#CCCCCC"> it's</font>

377
00:17:46,150 --> 00:17:51,790
open source<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can also create all of</font>

378
00:17:48,640 --> 00:17:54,309
these plugins<font color="#E5E5E5"> and kind of apply it to</font>

379
00:17:51,790 --> 00:17:56,350
the<font color="#E5E5E5"> entire source code of</font><font color="#CCCCCC"> dedicate</font><font color="#E5E5E5"> to</font>

380
00:17:54,309 --> 00:17:58,649
which with the<font color="#E5E5E5"> probability will be</font>

381
00:17:56,350 --> 00:18:02,230
<font color="#E5E5E5">applied to</font><font color="#CCCCCC"> many vendors and many</font>

382
00:17:58,650 --> 00:18:04,740
different places<font color="#CCCCCC"> and as a</font><font color="#E5E5E5"> really</font>

383
00:18:02,230 --> 00:18:07,630
important point is that bias has

384
00:18:04,740 --> 00:18:09,850
multiple entry points<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> mentioned</font>

385
00:18:07,630 --> 00:18:11,710
about couple of them but but there is

386
00:18:09,850 --> 00:18:14,110
much<font color="#CCCCCC"> more</font><font color="#E5E5E5"> than couple and unfortunately</font>

387
00:18:11,710 --> 00:18:15,790
they all not<font color="#CCCCCC"> the same so they all</font>

388
00:18:14,110 --> 00:18:18,250
different and has different interfaces

389
00:18:15,790 --> 00:18:20,320
and sometimes you don't have too much

390
00:18:18,250 --> 00:18:24,280
accesses<font color="#CCCCCC"> to make a verification if you</font>

391
00:18:20,320 --> 00:18:27,389
don't have for<font color="#E5E5E5"> example some some source</font>

392
00:18:24,280 --> 00:18:31,600
code<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> or something else</font><font color="#E5E5E5"> so</font>

393
00:18:27,390 --> 00:18:33,970
one of the important interfaces is by

394
00:18:31,600 --> 00:18:35,770
setting<font color="#E5E5E5"> which I already mentioned</font><font color="#CCCCCC"> so by</font>

395
00:18:33,970 --> 00:18:37,600
the second should<font color="#E5E5E5"> be properly during</font>

396
00:18:35,770 --> 00:18:40,929
should be set properly<font color="#E5E5E5"> during the boot</font>

397
00:18:37,600 --> 00:18:45,250
and any mistake in that boot time can

398
00:18:40,929 --> 00:18:51,340
can<font color="#E5E5E5"> be used to to some to compromise the</font>

399
00:18:45,250 --> 00:18:53,710
bias or<font color="#CCCCCC"> Arsenal attribute script there</font>

400
00:18:51,340 --> 00:18:56,470
<font color="#E5E5E5">is kind of language inside the bias</font>

401
00:18:53,710 --> 00:19:00,070
which<font color="#CCCCCC"> is running when you come in from</font>

402
00:18:56,470 --> 00:19:01,960
the<font color="#CCCCCC"> home</font><font color="#E5E5E5"> away</font><font color="#CCCCCC"> from when you go into</font><font color="#E5E5E5"> when</font>

403
00:19:00,070 --> 00:19:05,649
<font color="#CCCCCC">new system go</font><font color="#E5E5E5"> sleeping and returning</font>

404
00:19:01,960 --> 00:19:07,960
<font color="#CCCCCC">from the sleep during this return you</font>

405
00:19:05,650 --> 00:19:09,580
<font color="#E5E5E5">your system instead of execute entire</font>

406
00:19:07,960 --> 00:19:12,190
bias is the<font color="#CCCCCC"> killed just a</font><font color="#E5E5E5"> scribble</font>

407
00:19:09,580 --> 00:19:14,678
script which<font color="#E5E5E5"> is kind of a special</font>

408
00:19:12,190 --> 00:19:17,250
<font color="#CCCCCC">language which</font><font color="#E5E5E5"> also restoring the</font>

409
00:19:14,679 --> 00:19:21,730
configuration which also<font color="#E5E5E5"> should</font><font color="#CCCCCC"> be</font>

410
00:19:17,250 --> 00:19:25,690
restored properly in with all<font color="#E5E5E5"> of the</font>

411
00:19:21,730 --> 00:19:27,490
security<font color="#CCCCCC"> settings SMI handlers</font><font color="#E5E5E5"> as I</font>

412
00:19:25,690 --> 00:19:31,000
<font color="#E5E5E5">mention</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> a runtime components</font>

413
00:19:27,490 --> 00:19:34,600
really<font color="#E5E5E5"> important to making</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you</font>

414
00:19:31,000 --> 00:19:37,630
<font color="#E5E5E5">have they are the SMI handlers properly</font>

415
00:19:34,600 --> 00:19:39,389
handle<font color="#CCCCCC"> inputs</font><font color="#E5E5E5"> which is set which is</font>

416
00:19:37,630 --> 00:19:42,549
<font color="#CCCCCC">handled from the operation system and</font>

417
00:19:39,390 --> 00:19:44,679
here you can use kind of<font color="#E5E5E5"> precondition</font>

418
00:19:42,549 --> 00:19:46,940
<font color="#E5E5E5">post condition to check</font><font color="#CCCCCC"> all of the</font>

419
00:19:44,679 --> 00:19:51,440
things with<font color="#E5E5E5"> you which you need to</font>

420
00:19:46,940 --> 00:19:53,570
I<font color="#E5E5E5"> have to to validate SMI handlers</font><font color="#CCCCCC"> here</font>

421
00:19:51,440 --> 00:19:56,300
<font color="#E5E5E5">really quick</font><font color="#CCCCCC"> about some of the tools</font>

422
00:19:53,570 --> 00:19:59,120
which<font color="#E5E5E5"> you can use to</font><font color="#CCCCCC"> make sound</font>

423
00:19:56,300 --> 00:20:02,120
validation<font color="#E5E5E5"> and maybe use</font><font color="#CCCCCC"> it to build</font>

424
00:19:59,120 --> 00:20:07,360
something with formal verification on

425
00:20:02,120 --> 00:20:11,449
<font color="#E5E5E5">basis on</font><font color="#CCCCCC"> that tool so chipset tool has</font>

426
00:20:07,360 --> 00:20:14,780
has interfaces to has the<font color="#CCCCCC"> methods to</font>

427
00:20:11,450 --> 00:20:16,880
<font color="#CCCCCC">access interfaces</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bias which is</font>

428
00:20:14,780 --> 00:20:18,530
accessible<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> operating systems of</font>

429
00:20:16,880 --> 00:20:22,760
chips<font color="#CCCCCC"> occurs driver and user mode</font>

430
00:20:18,530 --> 00:20:25,870
component<font color="#CCCCCC"> and the driver read filter and</font>

431
00:20:22,760 --> 00:20:28,520
a lot of interfaces to allow you to

432
00:20:25,870 --> 00:20:31,810
<font color="#E5E5E5">fingerprint your system to talk to the</font>

433
00:20:28,520 --> 00:20:33,920
BIOS to trigger<font color="#CCCCCC"> a summize to</font>

434
00:20:31,810 --> 00:20:37,250
reconfiguration of<font color="#CCCCCC"> the bias to making</font>

435
00:20:33,920 --> 00:20:40,460
sure<font color="#CCCCCC"> that you</font><font color="#E5E5E5"> configuration after reboot</font>

436
00:20:37,250 --> 00:20:43,280
script is the<font color="#CCCCCC"> same as before also has</font>

437
00:20:40,460 --> 00:20:46,160
the interfaces to create the<font color="#CCCCCC"> visors when</font>

438
00:20:43,280 --> 00:20:48,800
you can define what the precondition and

439
00:20:46,160 --> 00:20:51,830
check the in this condition is happening

440
00:20:48,800 --> 00:20:54,500
after<font color="#CCCCCC"> for example for my handlers when</font>

441
00:20:51,830 --> 00:20:56,570
we found the bugs in in SMI handlers we

442
00:20:54,500 --> 00:20:59,480
just<font color="#E5E5E5"> defined</font><font color="#CCCCCC"> ok we want</font><font color="#E5E5E5"> this set of</font>

443
00:20:56,570 --> 00:21:02,060
registers<font color="#E5E5E5"> said before SMI handler and we</font>

444
00:20:59,480 --> 00:21:03,980
want to see<font color="#E5E5E5"> this check after and and we</font>

445
00:21:02,060 --> 00:21:06,860
<font color="#E5E5E5">run it for all of their handlers and</font>

446
00:21:03,980 --> 00:21:08,840
every time when<font color="#E5E5E5"> we find that okay we got</font>

447
00:21:06,860 --> 00:21:11,510
the changes we check the changes<font color="#E5E5E5"> in many</font>

448
00:21:08,840 --> 00:21:13,189
cases we get right<font color="#E5E5E5"> images as a man so</font>

449
00:21:11,510 --> 00:21:18,410
can<font color="#CCCCCC"> a virus doesn't</font><font color="#E5E5E5"> have any validation</font>

450
00:21:13,190 --> 00:21:23,300
<font color="#E5E5E5">to end what address you you supplies</font><font color="#CCCCCC"> to</font>

451
00:21:18,410 --> 00:21:24,650
as an input to<font color="#E5E5E5"> decima handlers</font><font color="#CCCCCC"> that's</font>

452
00:21:23,300 --> 00:21:27,530
the list of<font color="#E5E5E5"> the all interfaces</font>

453
00:21:24,650 --> 00:21:29,030
accessible so you<font color="#E5E5E5"> can use all</font><font color="#CCCCCC"> of them</font>

454
00:21:27,530 --> 00:21:31,639
depends of what what<font color="#CCCCCC"> exactly you want</font>

455
00:21:29,030 --> 00:21:34,790
done right<font color="#E5E5E5"> now adays</font><font color="#CCCCCC"> chipsets support</font>

456
00:21:31,640 --> 00:21:37,330
<font color="#CCCCCC">two different type of number is the</font>

457
00:21:34,790 --> 00:21:40,610
mainframe<font color="#E5E5E5"> and</font><font color="#CCCCCC"> optional also you can dump</font>

458
00:21:37,330 --> 00:21:42,980
this<font color="#E5E5E5"> two type of camera in the future</font>

459
00:21:40,610 --> 00:21:46,820
<font color="#E5E5E5">will support definitely more rumors as</font>

460
00:21:42,980 --> 00:21:48,890
much as we can<font color="#CCCCCC"> if we figure out the</font><font color="#E5E5E5"> read</font>

461
00:21:46,820 --> 00:21:53,659
primitive to dump the firmware we will

462
00:21:48,890 --> 00:21:55,940
<font color="#E5E5E5">edit that to chipset</font><font color="#CCCCCC"> really good thing</font>

463
00:21:53,660 --> 00:21:58,190
is a really good device which you can

464
00:21:55,940 --> 00:21:59,350
use to<font color="#E5E5E5"> make a lot of interesting</font><font color="#CCCCCC"> things</font>

465
00:21:58,190 --> 00:22:02,580
in<font color="#E5E5E5"> the BIOS area</font>

466
00:21:59,350 --> 00:22:05,320
<font color="#E5E5E5">is a mineral minnowboard minimums board</font>

467
00:22:02,580 --> 00:22:08,080
<font color="#CCCCCC">that the open</font><font color="#E5E5E5"> that the board which has</font>

468
00:22:05,320 --> 00:22:10,418
open source bias<font color="#E5E5E5"> entire biases open</font>

469
00:22:08,080 --> 00:22:13,418
source<font color="#CCCCCC"> except some of</font><font color="#E5E5E5"> the components</font>

470
00:22:10,419 --> 00:22:15,789
which proprietary for some vendors<font color="#E5E5E5"> but</font>

471
00:22:13,419 --> 00:22:19,590
like<font color="#CCCCCC"> I know</font><font color="#E5E5E5"> entire boot</font><font color="#CCCCCC"> processes all of</font>

472
00:22:15,789 --> 00:22:21,940
<font color="#E5E5E5">the stages is open and you can you can</font>

473
00:22:19,590 --> 00:22:24,970
<font color="#E5E5E5">implement your own component you can</font>

474
00:22:21,940 --> 00:22:25,539
<font color="#E5E5E5">enable TPM you can implement some</font>

475
00:22:24,970 --> 00:22:27,820
offenders

476
00:22:25,539 --> 00:22:30,490
after that you<font color="#CCCCCC"> can run tests and and</font>

477
00:22:27,820 --> 00:22:32,110
verify your<font color="#E5E5E5"> model also</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> it to</font>

478
00:22:30,490 --> 00:22:34,000
create<font color="#CCCCCC"> a plugins</font><font color="#E5E5E5"> to make</font><font color="#CCCCCC"> a formal</font>

479
00:22:32,110 --> 00:22:36,939
verification for some of the component

480
00:22:34,000 --> 00:22:40,659
like EU<font color="#CCCCCC"> Phi D parser</font><font color="#E5E5E5"> or compression</font>

481
00:22:36,940 --> 00:22:41,320
mechanism or SMI<font color="#E5E5E5"> handlers everything can</font>

482
00:22:40,659 --> 00:22:43,870
<font color="#E5E5E5">be done there</font>

483
00:22:41,320 --> 00:22:46,240
<font color="#CCCCCC">we using this platform</font><font color="#E5E5E5"> to our training</font>

484
00:22:43,870 --> 00:22:48,250
which we<font color="#E5E5E5"> provided so really a really</font>

485
00:22:46,240 --> 00:22:52,620
good powerful<font color="#E5E5E5"> platform to make a lot of</font>

486
00:22:48,250 --> 00:22:55,780
<font color="#CCCCCC">a research and test in the</font><font color="#E5E5E5"> BIOS area</font>

487
00:22:52,620 --> 00:22:59,168
really fast about symbolic execution<font color="#CCCCCC"> so</font>

488
00:22:55,780 --> 00:23:01,960
one of the one of the<font color="#E5E5E5"> main goals for us</font>

489
00:22:59,169 --> 00:23:04,690
was to understand that SMS and<font color="#E5E5E5"> this is</font>

490
00:23:01,960 --> 00:23:06,730
not<font color="#E5E5E5"> vulnerable</font><font color="#CCCCCC"> somehow</font><font color="#E5E5E5"> automatically</font>

491
00:23:04,690 --> 00:23:09,580
this good coverage so<font color="#CCCCCC"> we want to cover</font>

492
00:23:06,730 --> 00:23:11,110
and see the<font color="#E5E5E5"> passes and see</font><font color="#CCCCCC"> ok this</font><font color="#E5E5E5"> is my</font>

493
00:23:09,580 --> 00:23:14,350
<font color="#E5E5E5">friend</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> has this amount of</font><font color="#CCCCCC"> fastest</font>

494
00:23:11,110 --> 00:23:16,658
recovering kind of 90%<font color="#CCCCCC"> of the all of</font><font color="#E5E5E5"> the</font>

495
00:23:14,350 --> 00:23:22,360
passes and they didn't find<font color="#E5E5E5"> any integer</font>

496
00:23:16,659 --> 00:23:26,289
flow any<font color="#E5E5E5"> read pointer outside of them</font><font color="#CCCCCC"> or</font>

497
00:23:22,360 --> 00:23:28,750
<font color="#E5E5E5">right to the memory outside of</font><font color="#CCCCCC"> SM run</font>

498
00:23:26,289 --> 00:23:33,280
without<font color="#E5E5E5"> checks and so on of</font><font color="#CCCCCC"> course</font><font color="#E5E5E5"> so</font>

499
00:23:28,750 --> 00:23:36,940
what we did basically<font color="#E5E5E5"> is we dumped the</font>

500
00:23:33,280 --> 00:23:39,340
<font color="#E5E5E5">SM Ram so the memory of the</font><font color="#CCCCCC"> SMM how we</font>

501
00:23:36,940 --> 00:23:42,190
did it<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> it by two different</font>

502
00:23:39,340 --> 00:23:44,949
things one<font color="#E5E5E5"> is using the dead</font><font color="#CCCCCC"> minimums</font>

503
00:23:42,190 --> 00:23:47,289
board and experiment in the year<font color="#E5E5E5"> second</font>

504
00:23:44,950 --> 00:23:48,730
is if you<font color="#E5E5E5"> haven't the vulnerability so</font>

505
00:23:47,289 --> 00:23:50,590
<font color="#CCCCCC">unfortunately there is no silver</font><font color="#E5E5E5"> bullet</font>

506
00:23:48,730 --> 00:23:52,690
<font color="#CCCCCC">when you can dump a tsunami in any</font>

507
00:23:50,590 --> 00:23:55,000
system unfortunately<font color="#CCCCCC"> SMM code is</font>

508
00:23:52,690 --> 00:23:56,610
protected and if you don't have

509
00:23:55,000 --> 00:23:59,020
vulnerability<font color="#CCCCCC"> oh you don't have</font>

510
00:23:56,610 --> 00:24:01,719
experimental platform like<font color="#E5E5E5"> minimums</font><font color="#CCCCCC"> that</font>

511
00:23:59,020 --> 00:24:03,580
<font color="#CCCCCC">will be</font><font color="#E5E5E5"> tricky how you can dump that but</font>

512
00:24:01,720 --> 00:24:07,030
if you already<font color="#E5E5E5"> done that that everything</font>

513
00:24:03,580 --> 00:24:09,100
else is<font color="#E5E5E5"> pretty trivial then you you get</font>

514
00:24:07,030 --> 00:24:10,759
this binary<font color="#CCCCCC"> you loaded binary</font>

515
00:24:09,100 --> 00:24:12,468
instability execution engine

516
00:24:10,759 --> 00:24:14,479
<font color="#E5E5E5">find where you want to start creation</font>

517
00:24:12,469 --> 00:24:15,739
and where you want<font color="#E5E5E5"> to stop tracing and</font>

518
00:24:14,479 --> 00:24:18,729
what kind of condition you're looking

519
00:24:15,739 --> 00:24:20,570
for and then<font color="#CCCCCC"> you just waiting until the</font>

520
00:24:18,729 --> 00:24:23,329
<font color="#E5E5E5">disabilities equation engine will</font>

521
00:24:20,570 --> 00:24:25,399
generate an amount of iteration and<font color="#E5E5E5"> will</font>

522
00:24:23,329 --> 00:24:27,079
give you the<font color="#E5E5E5"> result of the coverage and</font>

523
00:24:25,399 --> 00:24:31,399
what kind of condition it will it will

524
00:24:27,079 --> 00:24:33,289
have like<font color="#E5E5E5"> about integer flow and written</font>

525
00:24:31,399 --> 00:24:36,228
<font color="#E5E5E5">and</font><font color="#CCCCCC"> writing memory outside of the</font><font color="#E5E5E5"> cement</font>

526
00:24:33,289 --> 00:24:38,179
<font color="#E5E5E5">and so on so that's kind of what I</font>

527
00:24:36,229 --> 00:24:40,009
<font color="#CCCCCC">mentioned that you</font><font color="#E5E5E5"> first</font><font color="#CCCCCC"> done then you</font>

528
00:24:38,179 --> 00:24:42,949
run it<font color="#CCCCCC"> inside the</font><font color="#E5E5E5"> queue and make the</font>

529
00:24:40,009 --> 00:24:46,519
coverage<font color="#CCCCCC"> there there is separate paper</font>

530
00:24:42,949 --> 00:24:49,909
about this<font color="#E5E5E5"> tool published year goal in</font>

531
00:24:46,519 --> 00:24:52,940
the UNIX<font color="#E5E5E5"> conference so example in system</font>

532
00:24:49,909 --> 00:24:56,839
they<font color="#CCCCCC"> can read about</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> here's some</font>

533
00:24:52,940 --> 00:24:59,569
<font color="#CCCCCC">results conclusion first</font><font color="#E5E5E5"> of all the</font>

534
00:24:56,839 --> 00:25:01,579
<font color="#E5E5E5">framework areas has many different from</font>

535
00:24:59,569 --> 00:25:04,249
<font color="#CCCCCC">race in any platform it's not just one</font>

536
00:25:01,579 --> 00:25:05,029
second is there is not all primitive<font color="#E5E5E5"> is</font>

537
00:25:04,249 --> 00:25:07,579
<font color="#E5E5E5">available</font>

538
00:25:05,029 --> 00:25:08,989
<font color="#CCCCCC">third is if the primitive is available</font>

539
00:25:07,579 --> 00:25:11,389
there is<font color="#CCCCCC"> no</font><font color="#E5E5E5"> verification of that</font>

540
00:25:08,989 --> 00:25:14,839
primitives<font color="#E5E5E5"> and there is no kind of</font>

541
00:25:11,389 --> 00:25:17,329
golden golden<font color="#E5E5E5"> images and you can compare</font>

542
00:25:14,839 --> 00:25:19,749
<font color="#E5E5E5">third days even if you can compare that</font>

543
00:25:17,329 --> 00:25:23,479
<font color="#CCCCCC">you cannot verify all of the</font>

544
00:25:19,749 --> 00:25:25,879
vulnerabilities because there is no easy

545
00:25:23,479 --> 00:25:28,339
way when you can<font color="#CCCCCC"> by</font><font color="#E5E5E5"> one click checking</font>

546
00:25:25,879 --> 00:25:30,319
all<font color="#CCCCCC"> of the conditions</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> the all of the</font>

547
00:25:28,339 --> 00:25:32,299
inputs<font color="#E5E5E5"> because there is too much entry</font>

548
00:25:30,319 --> 00:25:34,940
point<font color="#E5E5E5"> and some of them you can check</font>

549
00:25:32,299 --> 00:25:36,949
<font color="#E5E5E5">some</font><font color="#CCCCCC"> of them you need to enable to work</font>

550
00:25:34,940 --> 00:25:40,699
a lot of<font color="#CCCCCC"> with reverse engineering and so</font>

551
00:25:36,949 --> 00:25:43,099
<font color="#E5E5E5">on so forth</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> future area</font><font color="#CCCCCC"> if it is in</font>

552
00:25:40,699 --> 00:25:47,089
<font color="#E5E5E5">about</font><font color="#CCCCCC"> chip sack tool or exit tool or</font>

553
00:25:43,099 --> 00:25:51,039
about bias itself find me here or in

554
00:25:47,089 --> 00:25:51,039
<font color="#E5E5E5">Twitter and thank you for your time</font>

555
00:25:51,340 --> 00:25:55,470
[Applause]

556
00:25:56,509 --> 00:26:23,029
<font color="#E5E5E5">every time I start learning something</font>

557
00:25:59,309 --> 00:26:23,029
about a student of mine is working<font color="#CCCCCC"> one</font>

558
00:26:23,090 --> 00:26:30,539
project<font color="#E5E5E5"> to disambiguate</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> top of the</font>

559
00:26:27,450 --> 00:26:34,019
<font color="#CCCCCC">Parsis interactions of movie</font><font color="#E5E5E5"> inputs and</font>

560
00:26:30,539 --> 00:26:36,629
healthy which<font color="#CCCCCC"> Twitter</font><font color="#E5E5E5"> questions the</font>

561
00:26:34,019 --> 00:26:40,649
<font color="#CCCCCC">internet you are</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> freely on the</font>

562
00:26:36,629 --> 00:26:43,889
<font color="#CCCCCC">talk that very little of the of the code</font>

563
00:26:40,649 --> 00:26:46,529
<font color="#E5E5E5">of the vial is in the canvas</font><font color="#CCCCCC"> how do you</font>

564
00:26:43,889 --> 00:26:48,750
say<font color="#E5E5E5"> the silent that compares between the</font>

565
00:26:46,529 --> 00:26:52,679
reason why<font color="#E5E5E5"> ah that's interesting</font>

566
00:26:48,750 --> 00:26:55,440
<font color="#CCCCCC">question</font><font color="#E5E5E5"> I mean it depends how you</font>

567
00:26:52,679 --> 00:26:59,149
measure that there is this<font color="#CCCCCC"> Mahender</font>

568
00:26:55,440 --> 00:27:01,230
itself<font color="#E5E5E5"> there's maybe I don't know</font>

569
00:26:59,149 --> 00:27:03,928
<font color="#CCCCCC">hundreds of thousands</font><font color="#E5E5E5"> maybe less</font>

570
00:27:01,230 --> 00:27:06,169
compared<font color="#CCCCCC"> to millions</font><font color="#E5E5E5"> of entire that</font>

571
00:27:03,929 --> 00:27:09,389
entire source<font color="#E5E5E5"> code</font>

572
00:27:06,169 --> 00:27:11,909
<font color="#CCCCCC">DB but</font><font color="#E5E5E5"> there is also other parts so</font>

573
00:27:09,389 --> 00:27:15,809
sometimes when you when you<font color="#CCCCCC"> find a</font><font color="#E5E5E5"> new</font>

574
00:27:11,909 --> 00:27:19,759
vector<font color="#E5E5E5"> you find a new kind of source and</font>

575
00:27:15,809 --> 00:27:23,129
new<font color="#E5E5E5"> people new entry point I would</font><font color="#CCCCCC"> say</font>

576
00:27:19,759 --> 00:27:25,440
there is<font color="#E5E5E5"> like kind of less than 10% of</font>

577
00:27:23,129 --> 00:27:27,330
<font color="#E5E5E5">the code is handling the in contrast</font>

578
00:27:25,440 --> 00:27:32,850
input but I would say<font color="#E5E5E5"> even less than</font><font color="#CCCCCC"> ten</font>

579
00:27:27,330 --> 00:27:36,470
<font color="#CCCCCC">ten is</font><font color="#E5E5E5"> maximum I would say I for you if</font>

580
00:27:32,850 --> 00:27:39,570
I definitely for legacy buyers<font color="#E5E5E5"> it can be</font>

581
00:27:36,470 --> 00:27:42,090
depends<font color="#E5E5E5"> because legacy buyers itself was</font>

582
00:27:39,570 --> 00:27:44,879
smaller and that didn't have the

583
00:27:42,090 --> 00:27:48,689
<font color="#E5E5E5">infrastructure and because of that it</font>

584
00:27:44,879 --> 00:27:51,959
may may it may be more<font color="#CCCCCC"> code to</font><font color="#E5E5E5"> handle</font>

585
00:27:48,690 --> 00:27:54,570
<font color="#CCCCCC">the input that in you</font><font color="#E5E5E5"> fi the pacified</font>

586
00:27:51,960 --> 00:27:58,190
has infrastructure different<font color="#CCCCCC"> faces and</font>

587
00:27:54,570 --> 00:28:01,590
<font color="#E5E5E5">all of these but interestingly that</font>

588
00:27:58,190 --> 00:28:02,660
every time when we discover new entry

589
00:28:01,590 --> 00:28:05,570
point<font color="#E5E5E5"> new vector</font>

590
00:28:02,660 --> 00:28:08,120
we figured<font color="#E5E5E5"> okay we find the mutant which</font>

591
00:28:05,570 --> 00:28:12,860
you have a new parser like<font color="#E5E5E5"> file system</font>

592
00:28:08,120 --> 00:28:16,310
parser<font color="#E5E5E5"> FIFA beef beef parser like combat</font>

593
00:28:12,860 --> 00:28:19,040
require<font color="#E5E5E5"> a</font><font color="#CCCCCC"> CPI table parser and so on</font><font color="#E5E5E5"> and</font>

594
00:28:16,310 --> 00:28:21,440
<font color="#E5E5E5">so forth so it as much as</font><font color="#CCCCCC"> you</font>

595
00:28:19,040 --> 00:28:24,530
investigate I<font color="#CCCCCC"> know like ten different</font>

596
00:28:21,440 --> 00:28:27,050
<font color="#E5E5E5">inputs</font><font color="#CCCCCC"> major demo exists</font><font color="#E5E5E5"> maybe 15 maybe</font>

597
00:28:24,530 --> 00:28:30,080
<font color="#E5E5E5">even</font><font color="#CCCCCC"> more I didn't know</font><font color="#E5E5E5"> is to get for</font>

598
00:28:27,050 --> 00:28:32,120
<font color="#CCCCCC">example TPM called us inputs from</font><font color="#E5E5E5"> TPM</font>

599
00:28:30,080 --> 00:28:34,340
<font color="#CCCCCC">parentless</font><font color="#E5E5E5"> how does communication happen</font>

600
00:28:32,120 --> 00:28:36,530
maybe there is something out<font color="#E5E5E5"> there and I</font>

601
00:28:34,340 --> 00:28:39,889
didn't mention<font color="#E5E5E5"> this in</font><font color="#CCCCCC"> slides so I I</font>

602
00:28:36,530 --> 00:28:41,480
know<font color="#E5E5E5"> I know what</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> cover it but I'm not</font>

603
00:28:39,890 --> 00:28:48,950
sure<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> know everything</font>

604
00:28:41,480 --> 00:28:49,610
it's supposed<font color="#E5E5E5"> to be covered no - any one</font>

605
00:28:48,950 --> 00:28:53,450
time

606
00:28:49,610 --> 00:28:55,610
I find this<font color="#E5E5E5"> terrifying in terms of the</font>

607
00:28:53,450 --> 00:28:58,550
in terms of being able<font color="#CCCCCC"> mounted an</font>

608
00:28:55,610 --> 00:29:00,320
<font color="#CCCCCC">attacker this here</font><font color="#E5E5E5"> does it really need</font>

609
00:28:58,550 --> 00:29:05,750
to be this complicated

610
00:29:00,320 --> 00:29:07,909
<font color="#E5E5E5">just to do what that's really good</font>

611
00:29:05,750 --> 00:29:11,330
<font color="#CCCCCC">question</font><font color="#E5E5E5"> awesome question I'm asking</font>

612
00:29:07,910 --> 00:29:12,950
this myself<font color="#E5E5E5"> like three years in a row</font><font color="#CCCCCC"> so</font>

613
00:29:11,330 --> 00:29:15,110
first of all it's even more<font color="#CCCCCC"> complicated</font>

614
00:29:12,950 --> 00:29:16,610
that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> explained it I cannot make it</font>

615
00:29:15,110 --> 00:29:20,659
super<font color="#CCCCCC"> simple</font>

616
00:29:16,610 --> 00:29:22,729
I mean pagando perspective definitely

617
00:29:20,660 --> 00:29:25,520
because they want<font color="#E5E5E5"> to have a lot of</font>

618
00:29:22,730 --> 00:29:27,800
<font color="#E5E5E5">different</font><font color="#CCCCCC"> features</font><font color="#E5E5E5"> a lot of different</font>

619
00:29:25,520 --> 00:29:30,620
<font color="#E5E5E5">things for our perspective as</font><font color="#CCCCCC"> a</font>

620
00:29:27,800 --> 00:29:32,320
researchers<font color="#CCCCCC"> there is good example to</font>

621
00:29:30,620 --> 00:29:34,909
make it simpler<font color="#E5E5E5"> for example core</font><font color="#CCCCCC"> board</font>

622
00:29:32,320 --> 00:29:37,399
<font color="#CCCCCC">called core good has</font><font color="#E5E5E5"> completely</font>

623
00:29:34,910 --> 00:29:39,350
<font color="#E5E5E5">different story and in Corbeau there is</font>

624
00:29:37,400 --> 00:29:42,350
one disadvantages<font color="#E5E5E5"> you cannot update it</font>

625
00:29:39,350 --> 00:29:44,480
because they have<font color="#CCCCCC"> their</font><font color="#E5E5E5"> there they have</font>

626
00:29:42,350 --> 00:29:46,879
<font color="#E5E5E5">redone the memory and that read-only</font>

627
00:29:44,480 --> 00:29:48,950
memory is protected by pain and by

628
00:29:46,880 --> 00:29:51,590
<font color="#CCCCCC">screwdriver</font><font color="#E5E5E5"> so if you want updated it</font>

629
00:29:48,950 --> 00:29:54,410
you need<font color="#CCCCCC"> to unscrew the driver drive the</font>

630
00:29:51,590 --> 00:29:56,419
then and then you can update so the ones

631
00:29:54,410 --> 00:29:59,740
disadvantages<font color="#CCCCCC"> you cannot dissipate is</font>

632
00:29:56,420 --> 00:30:02,900
that Park s<font color="#CCCCCC"> premiere ability</font><font color="#E5E5E5"> but</font>

633
00:29:59,740 --> 00:30:05,660
everything else is much more better

634
00:30:02,900 --> 00:30:07,310
because they they use the<font color="#CCCCCC"> read only</font>

635
00:30:05,660 --> 00:30:11,600
<font color="#CCCCCC">maintenance</font><font color="#E5E5E5"> to validate the</font><font color="#CCCCCC"> read/write</font>

636
00:30:07,310 --> 00:30:12,860
<font color="#E5E5E5">part and then they publish the algorithm</font>

637
00:30:11,600 --> 00:30:15,060
how they might<font color="#CCCCCC"> involve a</font>

638
00:30:12,860 --> 00:30:17,580
because they have this read-only memory

639
00:30:15,060 --> 00:30:19,980
<font color="#E5E5E5">they disable a lot of features which is</font>

640
00:30:17,580 --> 00:30:24,000
not which is<font color="#E5E5E5"> not necessary to</font><font color="#CCCCCC"> have and</font>

641
00:30:19,980 --> 00:30:28,050
then<font color="#E5E5E5"> to simply simplify a coordinate for</font>

642
00:30:24,000 --> 00:30:31,250
really short<font color="#E5E5E5"> for really small amount of</font>

643
00:30:28,050 --> 00:30:34,560
lines<font color="#CCCCCC"> but the point is that because</font><font color="#E5E5E5"> they</font>

644
00:30:31,250 --> 00:30:38,100
it's not<font color="#E5E5E5"> applicable for every case so</font>

645
00:30:34,560 --> 00:30:41,040
for example some<font color="#CCCCCC"> on e TPM some</font><font color="#E5E5E5"> need some</font>

646
00:30:38,100 --> 00:30:43,439
other features<font color="#E5E5E5"> and they force it to have</font>

647
00:30:41,040 --> 00:30:45,060
the update mechanism<font color="#E5E5E5"> so if you have a</font>

648
00:30:43,440 --> 00:30:47,130
lot a picture you<font color="#E5E5E5"> want update them if</font>

649
00:30:45,060 --> 00:30:50,310
you want to<font color="#CCCCCC"> date them you cannot have</font>

650
00:30:47,130 --> 00:30:52,620
the same method<font color="#CCCCCC"> at</font><font color="#E5E5E5"> the coral head you</font>

651
00:30:50,310 --> 00:30:54,629
want<font color="#E5E5E5"> to have like alright memory then</font>

652
00:30:52,620 --> 00:30:56,399
<font color="#CCCCCC">you need to enable configuration</font><font color="#E5E5E5"> then</font>

653
00:30:54,630 --> 00:30:58,800
you want<font color="#E5E5E5"> to have a secure boot to verify</font>

654
00:30:56,400 --> 00:31:00,960
the<font color="#E5E5E5"> method and so on so</font><font color="#CCCCCC"> forth so because</font>

655
00:30:58,800 --> 00:31:03,360
they<font color="#CCCCCC"> have that much features they</font><font color="#E5E5E5"> want</font>

656
00:31:00,960 --> 00:31:05,850
to support<font color="#E5E5E5"> all</font><font color="#CCCCCC"> that it is the way how</font>

657
00:31:03,360 --> 00:31:07,709
you can<font color="#E5E5E5"> make it better and vendors is</font>

658
00:31:05,850 --> 00:31:09,090
working<font color="#E5E5E5"> on</font><font color="#CCCCCC"> that for example</font><font color="#E5E5E5"> nowadays all</font>

659
00:31:07,710 --> 00:31:11,250
of them<font color="#E5E5E5"> run in Cheapside before</font>

660
00:31:09,090 --> 00:31:12,810
releasing the platform so nowadays<font color="#E5E5E5"> when</font>

661
00:31:11,250 --> 00:31:13,860
you<font color="#E5E5E5"> buy the platform they</font><font color="#CCCCCC"> definitely</font>

662
00:31:12,810 --> 00:31:15,929
much more<font color="#E5E5E5"> secure than there</font><font color="#CCCCCC"> was</font>

663
00:31:13,860 --> 00:31:18,000
previously<font color="#E5E5E5"> but they still have a lot of</font>

664
00:31:15,930 --> 00:31:19,890
<font color="#E5E5E5">issues with low data for example</font><font color="#CCCCCC"> as my</font>

665
00:31:18,000 --> 00:31:22,800
hand<font color="#E5E5E5"> it was the second tool which I</font>

666
00:31:19,890 --> 00:31:24,930
<font color="#E5E5E5">talked mention it's much more harder to</font>

667
00:31:22,800 --> 00:31:27,300
<font color="#CCCCCC">to apply</font><font color="#E5E5E5"> chips</font><font color="#CCCCCC"> like you</font><font color="#E5E5E5"> can just hand by</font>

668
00:31:24,930 --> 00:31:28,860
three common line<font color="#CCCCCC"> in Linux but excite</font>

669
00:31:27,300 --> 00:31:31,379
<font color="#E5E5E5">you need to kind of</font><font color="#CCCCCC"> make really hard</font>

670
00:31:28,860 --> 00:31:34,050
<font color="#E5E5E5">work to apply so and that</font><font color="#CCCCCC"> one is</font><font color="#E5E5E5"> not</font>

671
00:31:31,380 --> 00:31:36,030
done by vendors and<font color="#E5E5E5"> that because in</font>

672
00:31:34,050 --> 00:31:38,879
because of that you<font color="#CCCCCC"> have issues they are</font>

673
00:31:36,030 --> 00:31:41,310
<font color="#E5E5E5">and I hope I</font><font color="#CCCCCC"> answered</font><font color="#E5E5E5"> the question you</font>

674
00:31:38,880 --> 00:31:43,360
may give a<font color="#CCCCCC"> chemical to deliver security</font>

675
00:31:41,310 --> 00:31:46,090
<font color="#E5E5E5">features like</font>

676
00:31:43,360 --> 00:31:47,740
increase the<font color="#E5E5E5"> attack service vastly</font><font color="#CCCCCC"> yeah</font>

677
00:31:46,090 --> 00:31:51,809
<font color="#E5E5E5">it's making</font><font color="#CCCCCC"> one question whether</font><font color="#E5E5E5"> your</font>

678
00:31:47,740 --> 00:31:51,809
debt security has gone up or gone down

679
00:31:52,170 --> 00:31:56,770
<font color="#E5E5E5">can</font><font color="#CCCCCC"> they're good the</font><font color="#E5E5E5"> question well what</font>

680
00:31:55,030 --> 00:31:58,809
<font color="#CCCCCC">do you</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> order to get all of these</font>

681
00:31:56,770 --> 00:32:01,679
features over<font color="#CCCCCC"> your security</font><font color="#E5E5E5"> features</font>

682
00:31:58,809 --> 00:32:05,049
<font color="#E5E5E5">like it's not just</font><font color="#CCCCCC"> security features</font>

683
00:32:01,679 --> 00:32:07,030
<font color="#CCCCCC">yeah drink resupply to be accepted so if</font>

684
00:32:05,049 --> 00:32:10,720
<font color="#CCCCCC">we</font><font color="#E5E5E5"> got met increasing secured and</font>

685
00:32:07,030 --> 00:32:11,320
<font color="#E5E5E5">decrease in security by I mean again</font>

686
00:32:10,720 --> 00:32:13,299
<font color="#E5E5E5">hello</font>

687
00:32:11,320 --> 00:32:14,590
it depends how<font color="#CCCCCC"> you measure depends how</font>

688
00:32:13,299 --> 00:32:16,629
<font color="#CCCCCC">it is implemented</font>

689
00:32:14,590 --> 00:32:19,720
I would say some of<font color="#E5E5E5"> the features really</font>

690
00:32:16,630 --> 00:32:21,970
<font color="#E5E5E5">good but some of the big feature</font>

691
00:32:19,720 --> 00:32:23,620
increasing their attack surface for

692
00:32:21,970 --> 00:32:25,450
example<font color="#CCCCCC"> when we discovered the</font>

693
00:32:23,620 --> 00:32:27,879
configuration of the bias and<font color="#E5E5E5"> we're on</font>

694
00:32:25,450 --> 00:32:29,620
and all of<font color="#CCCCCC"> the variable that was</font><font color="#E5E5E5"> method</font>

695
00:32:27,880 --> 00:32:31,600
<font color="#E5E5E5">that was not security</font><font color="#CCCCCC"> features what kind</font>

696
00:32:29,620 --> 00:32:33,909
of mechanism to<font color="#E5E5E5"> store the configuration</font>

697
00:32:31,600 --> 00:32:37,299
<font color="#E5E5E5">but it was interesting</font><font color="#CCCCCC"> how many issues</font>

698
00:32:33,910 --> 00:32:39,880
was there<font color="#E5E5E5"> so some of the feature is</font><font color="#CCCCCC"> more</font>

699
00:32:37,299 --> 00:32:41,980
important for<font color="#CCCCCC"> security perspective some</font>

700
00:32:39,880 --> 00:32:46,450
<font color="#E5E5E5">of them added more attack surface it's</font>

701
00:32:41,980 --> 00:32:49,179
all not kind of linear yes<font color="#E5E5E5"> there are</font>

702
00:32:46,450 --> 00:32:52,690
<font color="#E5E5E5">many concerns therefore</font><font color="#CCCCCC"> require just</font>

703
00:32:49,179 --> 00:32:56,710
about the human<font color="#E5E5E5"> transistor the initial</font>

704
00:32:52,690 --> 00:32:58,350
<font color="#CCCCCC">informative</font><font color="#E5E5E5"> image because it's so much</font>

705
00:32:56,710 --> 00:33:01,740
complicated

706
00:32:58,350 --> 00:33:04,110
different<font color="#E5E5E5"> layers with</font><font color="#CCCCCC"> system comparative</font>

707
00:33:01,740 --> 00:33:06,990
<font color="#E5E5E5">site has it for you fight for you five</font>

708
00:33:04,110 --> 00:33:09,510
<font color="#CCCCCC">baseball chipset hazard we tested them</font>

709
00:33:06,990 --> 00:33:12,900
<font color="#CCCCCC">fourteen thousand</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> UFO Basin</font>

710
00:33:09,510 --> 00:33:16,080
<font color="#E5E5E5">biases working well a couple different</font>

711
00:33:12,900 --> 00:33:17,760
tools<font color="#E5E5E5"> exist for legacy</font><font color="#CCCCCC"> bias</font><font color="#E5E5E5"> it is much</font>

712
00:33:16,080 --> 00:33:20,159
more complicated<font color="#E5E5E5"> but I would say it's</font>

713
00:33:17,760 --> 00:33:22,260
not<font color="#E5E5E5"> really interesting because from two</font>

714
00:33:20,160 --> 00:33:24,630
thousand six or seven we already have

715
00:33:22,260 --> 00:33:27,419
<font color="#CCCCCC">EFI</font><font color="#E5E5E5"> based biases so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> interest in an</font>

716
00:33:24,630 --> 00:33:29,970
area<font color="#CCCCCC"> before 2007 yeah it is much much</font>

717
00:33:27,419 --> 00:33:32,130
harder to<font color="#CCCCCC"> find the good tools there</font><font color="#E5E5E5"> but</font>

718
00:33:29,970 --> 00:33:35,159
after<font color="#CCCCCC"> that to use</font><font color="#E5E5E5"> jisuk tools and you</font>

719
00:33:32,130 --> 00:33:49,770
can<font color="#E5E5E5"> parse any image including image from</font>

720
00:33:35,159 --> 00:33:53,039
your<font color="#E5E5E5"> system and or image from the</font><font color="#CCCCCC"> inside</font>

721
00:33:49,770 --> 00:33:55,500
that's very good question<font color="#CCCCCC"> so complexity</font>

722
00:33:53,039 --> 00:33:58,650
impossible<font color="#CCCCCC"> so said to be subject three</font>

723
00:33:55,500 --> 00:34:01,940
years ago wanted to look at<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I don't</font>

724
00:33:58,650 --> 00:34:08,179
<font color="#E5E5E5">hold that scheme looking at that</font><font color="#CCCCCC"> unknown</font>

725
00:34:01,940 --> 00:34:13,619
definitely some<font color="#CCCCCC"> people was interesting -</font>

726
00:34:08,179 --> 00:34:16,530
as a bin of our<font color="#CCCCCC"> freelancer</font>

727
00:34:13,619 --> 00:34:21,149
there<font color="#E5E5E5"> is a huge</font><font color="#CCCCCC"> awkward service here and</font>

728
00:34:16,530 --> 00:34:25,250
<font color="#E5E5E5">where to start</font><font color="#CCCCCC"> and like I said</font><font color="#E5E5E5"> started</font>

729
00:34:21,149 --> 00:34:28,770
looking at what<font color="#E5E5E5"> a loader is as an</font>

730
00:34:25,250 --> 00:34:33,530
execution platform driven<font color="#E5E5E5"> by its</font>

731
00:34:28,770 --> 00:34:36,149
metadata<font color="#E5E5E5"> and specifically boot loaders</font>

732
00:34:33,530 --> 00:34:37,679
<font color="#E5E5E5">but of</font><font color="#CCCCCC"> course we're not looking at the</font>

733
00:34:36,149 --> 00:34:58,380
<font color="#E5E5E5">unit right</font>

734
00:34:37,679 --> 00:35:01,260
oh<font color="#CCCCCC"> really good graduation so so so well</font>

735
00:34:58,380 --> 00:35:03,300
yes we started<font color="#E5E5E5"> with the classical</font><font color="#CCCCCC"> ufi</font>

736
00:35:01,260 --> 00:35:05,160
<font color="#E5E5E5">firma but now the extended</font><font color="#CCCCCC"> amounts and</font>

737
00:35:03,300 --> 00:35:08,579
<font color="#CCCCCC">Robbie's support you</font><font color="#E5E5E5"> definitely will</font>

738
00:35:05,160 --> 00:35:11,190
support<font color="#CCCCCC"> a hard-line</font><font color="#E5E5E5"> firm about mobile</font>

739
00:35:08,579 --> 00:35:12,900
report the<font color="#E5E5E5"> chipset to the arm although</font>

740
00:35:11,190 --> 00:35:15,690
it's<font color="#E5E5E5"> not public unfortunately here but</font>

741
00:35:12,900 --> 00:35:18,119
it will<font color="#E5E5E5"> use this year and then you can</font>

742
00:35:15,690 --> 00:35:20,130
you<font color="#E5E5E5"> can you can use it in the phone in</font>

743
00:35:18,119 --> 00:35:22,410
front<font color="#CCCCCC"> it's really</font><font color="#E5E5E5"> interesting story so</font>

744
00:35:20,130 --> 00:35:24,480
in the pixel<font color="#E5E5E5"> in Google Dixon</font><font color="#CCCCCC"> there's 16</font>

745
00:35:22,410 --> 00:35:26,040
different<font color="#CCCCCC"> formers</font><font color="#E5E5E5"> and many of them is</font>

746
00:35:24,480 --> 00:35:28,619
not documented and doesn't have

747
00:35:26,040 --> 00:35:30,690
<font color="#CCCCCC">reprinted it so you need</font><font color="#E5E5E5"> to kind of make</font>

748
00:35:28,619 --> 00:35:33,839
a lot of<font color="#E5E5E5"> effort</font><font color="#CCCCCC"> to understand how does</font>

749
00:35:30,690 --> 00:35:35,880
<font color="#E5E5E5">it work and</font><font color="#CCCCCC"> to understand what would the</font>

750
00:35:33,839 --> 00:35:38,240
interfaces and how they<font color="#CCCCCC"> protect them</font>

751
00:35:35,880 --> 00:35:40,680
I<font color="#E5E5E5"> have interesting result unfortunately</font>

752
00:35:38,240 --> 00:35:43,759
because we are in process of information

753
00:35:40,680 --> 00:35:46,589
<font color="#E5E5E5">disposal is the</font><font color="#CCCCCC"> vendor or I can just say</font>

754
00:35:43,760 --> 00:35:48,299
some<font color="#CCCCCC"> firmware is easy to dump and easy</font>

755
00:35:46,589 --> 00:35:50,359
to initiate some of them<font color="#E5E5E5"> it's much much</font>

756
00:35:48,299 --> 00:35:53,339
harder<font color="#CCCCCC"> to demand Cargill investigate and</font>

757
00:35:50,359 --> 00:36:01,640
definitely<font color="#CCCCCC"> constraints problem is</font>

758
00:35:53,339 --> 00:36:04,049
applicable<font color="#CCCCCC"> there</font><font color="#E5E5E5"> as well thank you</font>

759
00:36:01,640 --> 00:36:08,848
<font color="#E5E5E5">let's thank the speaker</font>

760
00:36:04,050 --> 00:36:08,849
[Applause]

