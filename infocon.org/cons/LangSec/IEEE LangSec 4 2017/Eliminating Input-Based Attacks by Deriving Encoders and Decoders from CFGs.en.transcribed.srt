1
00:00:04,510 --> 00:00:08,469
yeah thanks<font color="#E5E5E5"> thanks</font><font color="#CCCCCC"> Iggy for the</font>

2
00:00:06,819 --> 00:00:11,610
introduction this is<font color="#E5E5E5"> basically the thing</font>

3
00:00:08,470 --> 00:00:14,469
that I want to<font color="#E5E5E5"> say so we made up this</font>

4
00:00:11,610 --> 00:00:17,439
<font color="#E5E5E5">glorified title explaining what we want</font>

5
00:00:14,469 --> 00:00:20,198
to do<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> this is I should mention</font>

6
00:00:17,440 --> 00:00:24,009
my co-authors here thanks<font color="#CCCCCC"> to them I'm</font>

7
00:00:20,199 --> 00:00:26,529
just<font color="#CCCCCC"> presenting here so this</font><font color="#E5E5E5"> is the</font>

8
00:00:24,009 --> 00:00:30,460
<font color="#CCCCCC">title actually but actually it's all</font>

9
00:00:26,529 --> 00:00:33,370
about unprocess right<font color="#E5E5E5"> so we actually</font>

10
00:00:30,460 --> 00:00:37,090
have facing things in application

11
00:00:33,370 --> 00:00:43,858
security<font color="#E5E5E5"> so the web thing that can be</font>

12
00:00:37,090 --> 00:00:47,500
simply solved by um parsing correctly so

13
00:00:43,859 --> 00:00:51,940
glad<font color="#CCCCCC"> to see this year the OS released</font>

14
00:00:47,500 --> 00:00:54,730
another top<font color="#CCCCCC"> ten list</font><font color="#E5E5E5"> so I can reference</font>

15
00:00:51,940 --> 00:00:58,589
this<font color="#E5E5E5"> here actually</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the last time</font><font color="#CCCCCC"> to</font>

16
00:00:54,730 --> 00:01:02,500
now the first<font color="#E5E5E5"> three do not really change</font>

17
00:00:58,590 --> 00:01:04,449
<font color="#CCCCCC">so looking at those one can see that</font>

18
00:01:02,500 --> 00:01:08,200
<font color="#CCCCCC">there is number</font><font color="#E5E5E5"> one and number three</font>

19
00:01:04,449 --> 00:01:10,840
which are both injections<font color="#E5E5E5"> right so they</font>

20
00:01:08,200 --> 00:01:13,360
are no<font color="#CCCCCC"> different injections exist in</font>

21
00:01:10,840 --> 00:01:19,500
with which every language<font color="#E5E5E5"> you basically</font>

22
00:01:13,360 --> 00:01:23,200
unpassed<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> point is</font><font color="#E5E5E5"> here I mean</font>

23
00:01:19,500 --> 00:01:25,420
keeping those two things different<font color="#E5E5E5"> then</font>

24
00:01:23,200 --> 00:01:28,000
<font color="#CCCCCC">just confuses people right crosshead</font>

25
00:01:25,420 --> 00:01:31,720
<font color="#E5E5E5">cooking's nothing out but injection so</font>

26
00:01:28,000 --> 00:01:33,970
the root cause here<font color="#E5E5E5"> is basically that</font>

27
00:01:31,720 --> 00:01:37,690
when unpausing some things it's<font color="#E5E5E5"> really</font>

28
00:01:33,970 --> 00:01:41,440
difficult to correctly<font color="#E5E5E5"> do to do this</font>

29
00:01:37,690 --> 00:01:44,140
correctly<font color="#E5E5E5"> and</font><font color="#CCCCCC"> context sensitive encoding</font>

30
00:01:41,440 --> 00:01:47,100
in this case<font color="#E5E5E5"> so basically in HTML it's</font>

31
00:01:44,140 --> 00:01:55,360
really hard to respond to spot the right

32
00:01:47,100 --> 00:01:58,330
encoding for the right context so to

33
00:01:55,360 --> 00:02:01,390
bash<font color="#E5E5E5"> a little bit bit more</font><font color="#CCCCCC"> about the the</font>

34
00:01:58,330 --> 00:02:04,840
over thing and the epic<font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> a</font>

35
00:02:01,390 --> 00:02:07,270
<font color="#CCCCCC">mess the keynote already pointed out and</font>

36
00:02:04,840 --> 00:02:09,220
well doing<font color="#E5E5E5"> it like we did before</font><font color="#CCCCCC"> might</font>

37
00:02:07,270 --> 00:02:11,319
be not<font color="#E5E5E5"> too good a year so basic Johnson</font>

38
00:02:09,220 --> 00:02:13,599
<font color="#E5E5E5">trading on new things it's a good thing</font>

39
00:02:11,319 --> 00:02:14,980
so<font color="#E5E5E5"> basically throwing static analysis</font>

40
00:02:13,599 --> 00:02:15,970
<font color="#CCCCCC">and dynamic analysis all the time</font>

41
00:02:14,980 --> 00:02:18,679
against

42
00:02:15,970 --> 00:02:22,220
turing-complete languages<font color="#E5E5E5"> might not end</font>

43
00:02:18,680 --> 00:02:24,530
up<font color="#E5E5E5"> in being a good</font><font color="#CCCCCC"> thing because yeah</font>

44
00:02:22,220 --> 00:02:27,590
<font color="#E5E5E5">what could</font><font color="#CCCCCC"> we expect</font><font color="#E5E5E5"> from this right</font>

45
00:02:24,530 --> 00:02:31,520
it's<font color="#E5E5E5"> true</font><font color="#CCCCCC"> incomplete so it's not</font><font color="#E5E5E5"> going</font>

46
00:02:27,590 --> 00:02:34,490
to<font color="#E5E5E5"> let them to bring us much</font><font color="#CCCCCC"> and so it's</font>

47
00:02:31,520 --> 00:02:36,290
<font color="#E5E5E5">like this this</font><font color="#CCCCCC"> unfair thing which which</font>

48
00:02:34,490 --> 00:02:37,910
are noted<font color="#CCCCCC"> here in exchange over</font><font color="#E5E5E5"> it's</font>

49
00:02:36,290 --> 00:02:41,170
just<font color="#CCCCCC"> like I</font><font color="#E5E5E5"> mean if you're just using</font>

50
00:02:37,910 --> 00:02:43,370
some string<font color="#CCCCCC"> coconut</font><font color="#E5E5E5"> concatenation your</font>

51
00:02:41,170 --> 00:02:44,958
program does not<font color="#E5E5E5"> state</font><font color="#CCCCCC"> what it's really</font>

52
00:02:43,370 --> 00:02:48,590
doing there it was it's trying to

53
00:02:44,959 --> 00:02:52,630
<font color="#E5E5E5">achieve so you could not do anything</font>

54
00:02:48,590 --> 00:02:56,630
<font color="#E5E5E5">about this or make it any any better</font>

55
00:02:52,630 --> 00:02:58,400
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> the thing is it it's easy</font>

56
00:02:56,630 --> 00:03:02,000
<font color="#E5E5E5">that's the only point</font><font color="#CCCCCC"> why it's</font><font color="#E5E5E5"> used</font>

57
00:02:58,400 --> 00:03:05,420
<font color="#E5E5E5">right so just printing it is easy so</font>

58
00:03:02,000 --> 00:03:11,300
<font color="#E5E5E5">people do and so coming from a length</font>

59
00:03:05,420 --> 00:03:14,029
<font color="#CCCCCC">tech perspectives learn the</font><font color="#E5E5E5"> the idea</font>

60
00:03:11,300 --> 00:03:17,660
must be to<font color="#E5E5E5"> actually specify what what we</font>

61
00:03:14,030 --> 00:03:21,830
want to print<font color="#E5E5E5"> out or unfairest makes you</font>

62
00:03:17,660 --> 00:03:24,640
before cutting<font color="#E5E5E5"> it all together</font><font color="#CCCCCC"> so on the</font>

63
00:03:21,830 --> 00:03:27,890
other hand it needs to be used<font color="#CCCCCC"> right so</font>

64
00:03:24,640 --> 00:03:29,899
the<font color="#CCCCCC"> the average</font><font color="#E5E5E5"> soft we develop the</font>

65
00:03:27,890 --> 00:03:33,890
civil developer<font color="#E5E5E5"> just does not</font><font color="#CCCCCC"> care about</font>

66
00:03:29,900 --> 00:03:39,850
this<font color="#E5E5E5"> right it needs to be easy as string</font>

67
00:03:33,890 --> 00:03:47,359
concatenation yeah<font color="#E5E5E5"> otherwise they just</font>

68
00:03:39,850 --> 00:03:49,970
<font color="#E5E5E5">don't care so as I</font><font color="#CCCCCC"> just discussed the</font>

69
00:03:47,360 --> 00:03:51,560
first<font color="#E5E5E5"> point we want to solve actually</font>

70
00:03:49,970 --> 00:03:53,510
<font color="#E5E5E5">those injections coming from the</font>

71
00:03:51,560 --> 00:03:56,269
application security<font color="#E5E5E5"> thing with lengths</font>

72
00:03:53,510 --> 00:04:00,470
like tools and now I want<font color="#E5E5E5"> to tell a</font>

73
00:03:56,269 --> 00:04:03,080
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more on</font><font color="#E5E5E5"> how we actually try</font>

74
00:04:00,470 --> 00:04:06,769
to do this<font color="#E5E5E5"> and then afterwards coming to</font>

75
00:04:03,080 --> 00:04:11,630
some some listings<font color="#E5E5E5"> about how we actually</font>

76
00:04:06,769 --> 00:04:15,530
define binary grammars which our<font color="#E5E5E5"> grammar</font>

77
00:04:11,630 --> 00:04:17,959
<font color="#E5E5E5">to yourself so first a little bit more</font>

78
00:04:15,530 --> 00:04:19,579
into the<font color="#E5E5E5"> into the problem then so</font>

79
00:04:17,959 --> 00:04:22,280
basically what is what<font color="#E5E5E5"> is injection</font>

80
00:04:19,579 --> 00:04:24,260
injection you<font color="#E5E5E5"> usually have this this</font>

81
00:04:22,280 --> 00:04:26,479
thing where you<font color="#CCCCCC"> have an attacker which</font>

82
00:04:24,260 --> 00:04:27,050
is using one language<font color="#CCCCCC"> talking to a front</font>

83
00:04:26,479 --> 00:04:29,859
<font color="#E5E5E5">and</font>

84
00:04:27,050 --> 00:04:34,069
<font color="#E5E5E5">this front end being a web server also</font>

85
00:04:29,860 --> 00:04:36,590
<font color="#E5E5E5">uncrossing some message into language</font>

86
00:04:34,069 --> 00:04:38,810
and then one is then sent over to<font color="#E5E5E5"> a</font>

87
00:04:36,590 --> 00:04:41,568
target<font color="#E5E5E5"> mostly database this is</font><font color="#CCCCCC"> a</font>

88
00:04:38,810 --> 00:04:43,729
classical<font color="#CCCCCC"> setting but this might be</font>

89
00:04:41,569 --> 00:04:46,069
anything<font color="#E5E5E5"> right so</font><font color="#CCCCCC"> every two systems</font>

90
00:04:43,729 --> 00:04:48,258
communicating with each<font color="#E5E5E5"> other</font><font color="#CCCCCC"> where the</font>

91
00:04:46,069 --> 00:04:52,699
target is trusting the<font color="#CCCCCC"> front end is</font>

92
00:04:48,259 --> 00:04:57,440
basically prone to<font color="#CCCCCC"> two injection if</font><font color="#E5E5E5"> yeah</font>

93
00:04:52,699 --> 00:05:01,009
<font color="#CCCCCC">if</font><font color="#E5E5E5"> the language supports injection so to</font>

94
00:04:57,440 --> 00:05:04,069
say<font color="#E5E5E5"> so</font><font color="#CCCCCC"> what actually is injection exit</font>

95
00:05:01,009 --> 00:05:08,150
injection means that within<font color="#E5E5E5"> the past</font>

96
00:05:04,069 --> 00:05:09,800
<font color="#CCCCCC">three so basically I</font><font color="#E5E5E5"> assume always that</font>

97
00:05:08,150 --> 00:05:12,739
we have something<font color="#CCCCCC"> like the path</font><font color="#E5E5E5"> tree</font>

98
00:05:09,800 --> 00:05:14,330
within<font color="#E5E5E5"> the component</font><font color="#CCCCCC"> this is this</font><font color="#E5E5E5"> is</font>

99
00:05:12,740 --> 00:05:16,460
<font color="#E5E5E5">basically sending the message because</font>

100
00:05:14,330 --> 00:05:17,960
<font color="#E5E5E5">otherwise I'm always screwed right if I</font>

101
00:05:16,460 --> 00:05:20,539
don't have a structured representation

102
00:05:17,960 --> 00:05:24,770
of this<font color="#E5E5E5"> thing that I want to send and</font>

103
00:05:20,539 --> 00:05:28,210
screwed<font color="#E5E5E5"> it the very beginning so having</font>

104
00:05:24,770 --> 00:05:31,549
<font color="#E5E5E5">that one</font><font color="#CCCCCC"> basically there might be some</font>

105
00:05:28,210 --> 00:05:34,068
some syntax<font color="#E5E5E5"> within the leaves of this</font>

106
00:05:31,550 --> 00:05:36,770
<font color="#CCCCCC">parse tree</font><font color="#E5E5E5"> that actually do not belong</font>

107
00:05:34,069 --> 00:05:40,039
<font color="#CCCCCC">there right</font><font color="#E5E5E5"> so from a from a definition</font>

108
00:05:36,770 --> 00:05:42,020
<font color="#E5E5E5">of this</font><font color="#CCCCCC"> office</font><font color="#E5E5E5"> path tree they should not</font>

109
00:05:40,039 --> 00:05:44,568
be there because<font color="#E5E5E5"> the token definition of</font>

110
00:05:42,020 --> 00:05:47,990
this<font color="#CCCCCC"> Leafs should not allow those</font><font color="#E5E5E5"> tokens</font>

111
00:05:44,569 --> 00:05:50,560
to be there so what we<font color="#E5E5E5"> actually want to</font>

112
00:05:47,990 --> 00:05:54,289
achieve is<font color="#E5E5E5"> what</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> written</font><font color="#CCCCCC"> down there</font>

113
00:05:50,560 --> 00:05:56,569
<font color="#E5E5E5">with with some some formulas is</font>

114
00:05:54,289 --> 00:06:00,830
<font color="#E5E5E5">basically that we want to ensure that</font>

115
00:05:56,569 --> 00:06:04,909
those those messages<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we on</font><font color="#E5E5E5"> Paris</font>

116
00:06:00,830 --> 00:06:07,490
<font color="#E5E5E5">basically end up in the same ast or in</font>

117
00:06:04,909 --> 00:06:09,319
the same<font color="#CCCCCC"> parse tree as the one which</font>

118
00:06:07,490 --> 00:06:11,509
which sent over the line<font color="#CCCCCC"> this is</font>

119
00:06:09,319 --> 00:06:14,719
<font color="#E5E5E5">basically the one we want to have and</font>

120
00:06:11,509 --> 00:06:17,810
there's encoding actually required so

121
00:06:14,719 --> 00:06:21,020
encoding basically being ripping out

122
00:06:17,810 --> 00:06:26,330
those characters or those keywords that

123
00:06:21,020 --> 00:06:28,789
are messing up<font color="#E5E5E5"> basically those tokens so</font>

124
00:06:26,330 --> 00:06:31,849
<font color="#CCCCCC">F this here as an example again</font><font color="#E5E5E5"> to</font>

125
00:06:28,789 --> 00:06:35,360
<font color="#E5E5E5">clarify you can see these those arrows</font>

126
00:06:31,849 --> 00:06:37,849
right right<font color="#E5E5E5"> so basically you have this</font>

127
00:06:35,360 --> 00:06:38,360
<font color="#E5E5E5">path view of the left and then unfairest</font>

128
00:06:37,849 --> 00:06:39,949
<font color="#CCCCCC">List</font>

129
00:06:38,360 --> 00:06:41,750
<font color="#E5E5E5">with a string representation and then</font>

130
00:06:39,949 --> 00:06:45,889
<font color="#E5E5E5">parting it again and I</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> want to have</font>

131
00:06:41,750 --> 00:06:49,759
as I just said<font color="#CCCCCC"> the same path tree again</font>

132
00:06:45,889 --> 00:06:52,610
<font color="#CCCCCC">so what happens if I add there some some</font>

133
00:06:49,759 --> 00:06:56,020
things<font color="#E5E5E5"> that do not belong into</font><font color="#CCCCCC"> this into</font>

134
00:06:52,610 --> 00:06:58,879
this token they get<font color="#E5E5E5"> unhorsed and then</font>

135
00:06:56,020 --> 00:07:02,389
manipulate the<font color="#CCCCCC"> we pass tree on the other</font>

136
00:06:58,879 --> 00:07:04,250
side<font color="#CCCCCC"> so</font><font color="#E5E5E5"> basically what I actually want</font>

137
00:07:02,389 --> 00:07:07,039
to do is I want<font color="#E5E5E5"> to detect this and</font>

138
00:07:04,250 --> 00:07:09,979
<font color="#E5E5E5">basically just only detect okay here's</font>

139
00:07:07,039 --> 00:07:13,878
an injection<font color="#CCCCCC"> and how do we do this we</font>

140
00:07:09,979 --> 00:07:16,729
basically<font color="#E5E5E5"> check those tokens again with</font>

141
00:07:13,879 --> 00:07:19,250
with<font color="#CCCCCC"> the T power Combinator as</font><font color="#E5E5E5"> we are</font>

142
00:07:16,729 --> 00:07:22,669
using hammer underneath<font color="#E5E5E5"> we are basically</font>

143
00:07:19,250 --> 00:07:24,650
checking<font color="#E5E5E5"> those those tokens there with</font>

144
00:07:22,669 --> 00:07:26,508
the part of<font color="#CCCCCC"> the Combinator which</font><font color="#E5E5E5"> was</font>

145
00:07:24,650 --> 00:07:30,258
used which should be<font color="#E5E5E5"> used to actually</font>

146
00:07:26,509 --> 00:07:32,689
<font color="#E5E5E5">derive this</font><font color="#CCCCCC"> and this token and check if</font>

147
00:07:30,259 --> 00:07:36,139
<font color="#E5E5E5">this when we</font><font color="#CCCCCC"> parse this</font><font color="#E5E5E5"> this is still</font>

148
00:07:32,689 --> 00:07:39,349
the same<font color="#CCCCCC"> just in the same</font><font color="#E5E5E5"> content</font><font color="#CCCCCC"> there</font>

149
00:07:36,139 --> 00:07:41,539
<font color="#CCCCCC">is the same token type and afterwards we</font>

150
00:07:39,349 --> 00:07:45,889
double check that<font color="#E5E5E5"> there are no keywords</font>

151
00:07:41,539 --> 00:07:50,180
within this one so<font color="#CCCCCC"> yes the parts are</font>

152
00:07:45,889 --> 00:07:53,180
good<font color="#E5E5E5"> that</font><font color="#CCCCCC"> does not get confused um so</font>

153
00:07:50,180 --> 00:07:55,460
<font color="#E5E5E5">now about well now we detected this and</font>

154
00:07:53,180 --> 00:07:59,839
now we want to actually automatically

155
00:07:55,460 --> 00:08:01,878
derive an encoding from from grammar<font color="#E5E5E5"> so</font>

156
00:07:59,839 --> 00:08:05,509
basically the challenges<font color="#E5E5E5"> you just plant</font>

157
00:08:01,879 --> 00:08:08,599
the language there<font color="#E5E5E5"> as over there with</font>

158
00:08:05,509 --> 00:08:11,240
<font color="#E5E5E5">this</font><font color="#CCCCCC"> MC</font><font color="#E5E5E5"> G's</font><font color="#CCCCCC"> Multi multi core grammar</font>

159
00:08:08,599 --> 00:08:15,259
<font color="#E5E5E5">thing and we want to extract all those</font>

160
00:08:11,240 --> 00:08:17,719
<font color="#CCCCCC">key words</font><font color="#E5E5E5"> and then we split those key</font>

161
00:08:15,259 --> 00:08:20,060
words<font color="#E5E5E5"> so we might not end up in some</font>

162
00:08:17,719 --> 00:08:22,580
cases where some neighboring nodes

163
00:08:20,060 --> 00:08:25,039
within the path tree have some parts of

164
00:08:22,580 --> 00:08:26,779
the key words and ends up in<font color="#E5E5E5"> the same in</font>

165
00:08:25,039 --> 00:08:30,250
<font color="#E5E5E5">the in this key word then</font>

166
00:08:26,779 --> 00:08:34,399
and afterwards<font color="#E5E5E5"> we wanna actually</font>

167
00:08:30,250 --> 00:08:35,990
identify from this grammar which symbols

168
00:08:34,399 --> 00:08:39,640
we could use to actually<font color="#E5E5E5"> create an</font>

169
00:08:35,990 --> 00:08:42,349
encoding so um in this example here

170
00:08:39,640 --> 00:08:44,990
there is this ID token<font color="#E5E5E5"> the only one</font>

171
00:08:42,349 --> 00:08:47,899
which actually<font color="#E5E5E5"> allows some more symbols</font>

172
00:08:44,990 --> 00:08:50,149
<font color="#CCCCCC">and this is why we only have there some</font>

173
00:08:47,899 --> 00:08:51,829
free symbols we could actually use to

174
00:08:50,149 --> 00:08:54,920
<font color="#E5E5E5">create some encoding</font>

175
00:08:51,829 --> 00:08:58,488
<font color="#E5E5E5">including hearings and that you can put</font>

176
00:08:54,920 --> 00:09:02,899
some<font color="#E5E5E5"> other keywords within this within</font>

177
00:08:58,489 --> 00:09:04,309
this token<font color="#E5E5E5"> be not</font><font color="#CCCCCC"> any more keywords and</font>

178
00:09:02,899 --> 00:09:06,110
<font color="#CCCCCC">for our the others</font>

179
00:09:04,309 --> 00:09:09,618
we are good because<font color="#CCCCCC"> we don't have</font><font color="#E5E5E5"> any</font>

180
00:09:06,110 --> 00:09:13,610
free symbols and then actually<font color="#E5E5E5"> we need</font>

181
00:09:09,619 --> 00:09:16,939
sure<font color="#CCCCCC"> need to take out those from those</font>

182
00:09:13,610 --> 00:09:19,489
three symbols<font color="#E5E5E5"> those those</font><font color="#CCCCCC"> keywords</font><font color="#E5E5E5"> that</font>

183
00:09:16,939 --> 00:09:22,309
were that we are having over<font color="#E5E5E5"> here so</font>

184
00:09:19,489 --> 00:09:25,639
<font color="#E5E5E5">basically the part of the</font><font color="#CCCCCC"> keywords that</font>

185
00:09:22,309 --> 00:09:27,350
<font color="#E5E5E5">do not need to be part of the of these</font>

186
00:09:25,639 --> 00:09:35,980
symbols which that we can use for

187
00:09:27,350 --> 00:09:39,110
encoding<font color="#CCCCCC"> entry so then we actually first</font>

188
00:09:35,980 --> 00:09:41,569
choose a<font color="#CCCCCC"> baneling</font><font color="#E5E5E5"> basically we choose to</font>

189
00:09:39,110 --> 00:09:44,119
two symbols and do a<font color="#E5E5E5"> binary encoding of</font>

190
00:09:41,569 --> 00:09:46,670
all<font color="#E5E5E5"> key words so they be numerate all</font>

191
00:09:44,119 --> 00:09:48,799
those<font color="#CCCCCC"> key words</font><font color="#E5E5E5"> choose two symbols to a</font>

192
00:09:46,670 --> 00:09:51,259
<font color="#E5E5E5">binary encoding of this one we know</font>

193
00:09:48,799 --> 00:09:54,619
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> when processing the grammar how</font>

194
00:09:51,259 --> 00:09:56,990
many<font color="#CCCCCC"> key words are there so it's just e</font>

195
00:09:54,619 --> 00:09:58,490
<font color="#E5E5E5">to the mystically clear and how many</font>

196
00:09:56,990 --> 00:10:00,110
keywords we have how<font color="#E5E5E5"> long this encoding</font>

197
00:09:58,490 --> 00:10:02,959
might end up and we can basically

198
00:10:00,110 --> 00:10:06,860
<font color="#CCCCCC">generate all</font><font color="#E5E5E5"> the stuff and here's an</font>

199
00:10:02,959 --> 00:10:08,809
example<font color="#E5E5E5"> for this very grammar how some</font>

200
00:10:06,860 --> 00:10:11,889
<font color="#CCCCCC">of those encoding looks like and we</font>

201
00:10:08,809 --> 00:10:16,059
would basically<font color="#E5E5E5"> choose here capital a as</font>

202
00:10:11,889 --> 00:10:19,929
as our<font color="#E5E5E5"> escape symbol and B as another</font>

203
00:10:16,059 --> 00:10:22,600
symbol<font color="#E5E5E5"> for encoding here we actually</font>

204
00:10:19,929 --> 00:10:25,970
<font color="#E5E5E5">experience it a little bit with some</font>

205
00:10:22,600 --> 00:10:29,350
option called<font color="#E5E5E5"> seesaw which means stuff</font>

206
00:10:25,970 --> 00:10:33,319
<font color="#CCCCCC">inside stuff out so basically</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> only</font>

207
00:10:29,350 --> 00:10:35,749
using not only encoding those key words

208
00:10:33,319 --> 00:10:38,089
<font color="#E5E5E5">but all symbols which are not</font><font color="#CCCCCC"> defined</font>

209
00:10:35,749 --> 00:10:39,949
within this grammar which means that you

210
00:10:38,089 --> 00:10:42,619
could<font color="#CCCCCC"> basically stuff anything in there</font>

211
00:10:39,949 --> 00:10:44,628
and it still ends up so<font color="#CCCCCC"> Steph anything</font>

212
00:10:42,619 --> 00:10:47,769
into your<font color="#CCCCCC"> pass tree</font><font color="#E5E5E5"> and then it's</font>

213
00:10:44,629 --> 00:10:50,660
serialized<font color="#E5E5E5"> and Dec parsed at the</font>

214
00:10:47,769 --> 00:10:53,660
<font color="#E5E5E5">receiver and still ends up in your your</font>

215
00:10:50,660 --> 00:10:56,389
path tree from a yeah if you just<font color="#CCCCCC"> want</font>

216
00:10:53,660 --> 00:10:59,089
<font color="#CCCCCC">to transfer</font><font color="#E5E5E5"> data this is nice but from</font>

217
00:10:56,389 --> 00:11:02,929
<font color="#E5E5E5">another point</font><font color="#CCCCCC"> of view is</font><font color="#E5E5E5"> this like okay</font>

218
00:10:59,089 --> 00:11:04,519
you actually<font color="#E5E5E5"> define your grammar as a</font>

219
00:11:02,929 --> 00:11:04,970
receiver you define<font color="#E5E5E5"> your grammar and</font>

220
00:11:04,519 --> 00:11:07,389
stay

221
00:11:04,970 --> 00:11:10,610
<font color="#E5E5E5">okay I want just expecting those</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

222
00:11:07,389 --> 00:11:12,829
those kind of<font color="#E5E5E5"> things to</font><font color="#CCCCCC"> be read and then</font>

223
00:11:10,610 --> 00:11:15,649
<font color="#E5E5E5">you end up having</font><font color="#CCCCCC"> some different things</font>

224
00:11:12,829 --> 00:11:17,959
<font color="#E5E5E5">in</font><font color="#CCCCCC"> your past</font><font color="#E5E5E5"> tree which did not specify</font>

225
00:11:15,649 --> 00:11:20,870
within<font color="#E5E5E5"> your grammar which might lead to</font>

226
00:11:17,959 --> 00:11:24,529
some confusion and some<font color="#E5E5E5"> other kind of</font>

227
00:11:20,870 --> 00:11:28,579
yeah secondary confusions within this

228
00:11:24,529 --> 00:11:32,329
application<font color="#E5E5E5"> there so actually</font><font color="#CCCCCC"> as I</font>

229
00:11:28,579 --> 00:11:34,758
already said we we<font color="#E5E5E5"> used hammer for an</font>

230
00:11:32,329 --> 00:11:39,229
implementation which<font color="#CCCCCC"> is called</font><font color="#E5E5E5"> MC</font><font color="#CCCCCC"> hammer</font>

231
00:11:34,759 --> 00:11:41,180
<font color="#E5E5E5">coder</font><font color="#CCCCCC"> actually I guess Segway</font><font color="#E5E5E5"> was coming</font>

232
00:11:39,230 --> 00:11:43,009
up with this name<font color="#E5E5E5"> so we had a</font><font color="#CCCCCC"> control</font>

233
00:11:41,180 --> 00:11:44,719
and he<font color="#E5E5E5"> was like okay MC hammer would be</font>

234
00:11:43,009 --> 00:11:50,620
cool isn't it I guess

235
00:11:44,720 --> 00:11:53,269
yeah yeah yeah you<font color="#E5E5E5"> you're you I okay</font>

236
00:11:50,620 --> 00:11:56,899
yeah it's the combination of Monty<font color="#CCCCCC"> Corps</font>

237
00:11:53,269 --> 00:11:59,870
which<font color="#E5E5E5"> is the which</font><font color="#CCCCCC"> is the framework for</font>

238
00:11:56,899 --> 00:12:02,449
actually designing<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> specific</font>

239
00:11:59,870 --> 00:12:06,019
languages for all those<font color="#CCCCCC"> Java guys out</font>

240
00:12:02,449 --> 00:12:10,508
<font color="#CCCCCC">there</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> actually integrated</font><font color="#E5E5E5"> this</font>

241
00:12:06,019 --> 00:12:12,589
with a hammer<font color="#CCCCCC"> browser</font><font color="#E5E5E5"> back-end and</font>

242
00:12:10,509 --> 00:12:15,019
integrated our<font color="#CCCCCC"> encoding decoding</font>

243
00:12:12,589 --> 00:12:17,809
generating for this is actually

244
00:12:15,019 --> 00:12:20,540
providing a<font color="#E5E5E5"> parse tree with in Java and</font>

245
00:12:17,809 --> 00:12:21,879
<font color="#CCCCCC">you could actually specify those actions</font>

246
00:12:20,540 --> 00:12:24,170
<font color="#E5E5E5">in Java</font>

247
00:12:21,879 --> 00:12:26,149
ripping them all through that<font color="#E5E5E5"> they are</font>

248
00:12:24,170 --> 00:12:28,128
triggered<font color="#E5E5E5"> by hammer and then executed</font>

249
00:12:26,149 --> 00:12:33,500
again into Java you can<font color="#CCCCCC"> find all this</font>

250
00:12:28,129 --> 00:12:35,839
code on get up have<font color="#E5E5E5"> fun and now I'm</font>

251
00:12:33,500 --> 00:12:39,589
<font color="#E5E5E5">going to show you a little bit more</font>

252
00:12:35,839 --> 00:12:41,959
about those grammars so those<font color="#CCCCCC"> multi-core</font>

253
00:12:39,589 --> 00:12:47,149
grammar binary languages how we can

254
00:12:41,959 --> 00:12:51,829
<font color="#E5E5E5">define this so basically what we have</font>

255
00:12:47,149 --> 00:12:56,379
<font color="#CCCCCC">here on top is</font><font color="#E5E5E5"> straightforward just some</font>

256
00:12:51,829 --> 00:12:59,120
tokens<font color="#E5E5E5"> and some some productions where</font>

257
00:12:56,379 --> 00:13:00,949
so this is our starting<font color="#CCCCCC"> point basically</font>

258
00:12:59,120 --> 00:13:04,300
<font color="#E5E5E5">this is what what multi-core provided</font>

259
00:13:00,949 --> 00:13:08,300
before and we actually extend this by

260
00:13:04,300 --> 00:13:12,050
<font color="#E5E5E5">adding some binaries</font><font color="#CCCCCC"> some binary</font>

261
00:13:08,300 --> 00:13:14,569
construct for actually extending the

262
00:13:12,050 --> 00:13:16,609
alphabet for<font color="#E5E5E5"> binary</font>

263
00:13:14,570 --> 00:13:21,190
representation<font color="#CCCCCC"> - over there so down here</font>

264
00:13:16,610 --> 00:13:23,690
<font color="#CCCCCC">you can see you have these D integers</font>

265
00:13:21,190 --> 00:13:25,130
<font color="#CCCCCC">where you can specify it in those</font><font color="#E5E5E5"> Gregg</font>

266
00:13:23,690 --> 00:13:28,850
brackets

267
00:13:25,130 --> 00:13:30,950
how they if they appear<font color="#CCCCCC"> how they must</font>

268
00:13:28,850 --> 00:13:34,070
appear and then afterwards you<font color="#E5E5E5"> can</font>

269
00:13:30,950 --> 00:13:38,060
specify<font color="#E5E5E5"> some other</font><font color="#CCCCCC"> alternative</font><font color="#E5E5E5"> so you</font>

270
00:13:34,070 --> 00:13:42,140
have the idea<font color="#CCCCCC"> you can basically specify</font>

271
00:13:38,060 --> 00:13:45,400
what you<font color="#E5E5E5"> expect there this is in the end</font>

272
00:13:42,140 --> 00:13:49,370
<font color="#E5E5E5">of this is translated to a hammer so</font>

273
00:13:45,400 --> 00:13:55,970
should<font color="#E5E5E5"> somehow the concept should should</font>

274
00:13:49,370 --> 00:13:58,430
match over<font color="#CCCCCC"> there and then we we added</font>

275
00:13:55,970 --> 00:14:01,390
those concepts<font color="#E5E5E5"> also present in hammer</font>

276
00:13:58,430 --> 00:14:05,390
<font color="#CCCCCC">versus offset</font><font color="#E5E5E5"> in length field and</font>

277
00:14:01,390 --> 00:14:11,150
actually<font color="#CCCCCC"> with</font><font color="#E5E5E5"> these offsets we can</font>

278
00:14:05,390 --> 00:14:18,020
specify<font color="#CCCCCC"> we can specify a linear function</font>

279
00:14:11,150 --> 00:14:26,300
<font color="#CCCCCC">so basically we can when we parse we</font>

280
00:14:18,020 --> 00:14:30,980
have this office rule or<font color="#E5E5E5"> you how this</font>

281
00:14:26,300 --> 00:14:33,229
how this<font color="#E5E5E5"> parsed</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> translate to the</font>

282
00:14:30,980 --> 00:14:35,360
to the offset<font color="#CCCCCC"> we could have actually</font>

283
00:14:33,230 --> 00:14:38,150
<font color="#E5E5E5">implemented this as well</font><font color="#CCCCCC"> for the length</font>

284
00:14:35,360 --> 00:14:41,090
<font color="#CCCCCC">width which</font><font color="#E5E5E5"> was the comment</font><font color="#CCCCCC"> actually for</font>

285
00:14:38,150 --> 00:14:43,540
the presentation<font color="#E5E5E5"> right</font><font color="#CCCCCC"> before so we</font>

286
00:14:41,090 --> 00:14:46,760
actually support kind<font color="#E5E5E5"> of the same thing</font>

287
00:14:43,540 --> 00:14:52,400
<font color="#E5E5E5">that we</font><font color="#CCCCCC"> just heard about</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> speeds</font>

288
00:14:46,760 --> 00:14:55,760
with mrs. caleca<font color="#CCCCCC"> records so basically we</font>

289
00:14:52,400 --> 00:14:58,610
<font color="#CCCCCC">name those length fields</font><font color="#E5E5E5"> and afterwards</font>

290
00:14:55,760 --> 00:15:00,920
<font color="#E5E5E5">you can basically use this very values</font>

291
00:14:58,610 --> 00:15:03,800
you<font color="#CCCCCC"> just parse twitches I hope kind of</font>

292
00:15:00,920 --> 00:15:08,510
the same thing<font color="#E5E5E5"> so we are ending up in</font>

293
00:15:03,800 --> 00:15:12,079
the right direction over there so we did

294
00:15:08,510 --> 00:15:14,780
some evaluation basically some

295
00:15:12,080 --> 00:15:19,550
functional ones for generators<font color="#CCCCCC"> hema</font>

296
00:15:14,780 --> 00:15:22,100
browser which we fast with peach fuzzer

297
00:15:19,550 --> 00:15:24,170
and thanks to hammer we had no<font color="#E5E5E5"> crashes</font>

298
00:15:22,100 --> 00:15:26,090
<font color="#E5E5E5">which is great</font><font color="#CCCCCC"> I mean I have no clue</font>

299
00:15:24,170 --> 00:15:26,829
about how to to really<font color="#E5E5E5"> do this right</font><font color="#CCCCCC"> so</font>

300
00:15:26,090 --> 00:15:31,990
<font color="#E5E5E5">thanks</font>

301
00:15:26,830 --> 00:15:34,269
we<font color="#E5E5E5"> we had no crashes and then we</font>

302
00:15:31,990 --> 00:15:37,500
compared this<font color="#E5E5E5"> to so we</font><font color="#CCCCCC"> threw those</font>

303
00:15:34,269 --> 00:15:39,970
<font color="#E5E5E5">inputs to to</font><font color="#CCCCCC"> our parser</font><font color="#E5E5E5"> into</font><font color="#CCCCCC"> two DNS</font>

304
00:15:37,500 --> 00:15:44,019
<font color="#E5E5E5">puzzle which is finding this way and</font>

305
00:15:39,970 --> 00:15:47,230
then our language was just the same from

306
00:15:44,019 --> 00:15:49,740
these samples<font color="#CCCCCC"> like the like</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> pine</font>

307
00:15:47,230 --> 00:15:54,310
powder which<font color="#E5E5E5"> accepted right the same</font>

308
00:15:49,740 --> 00:15:56,920
packet section and then<font color="#E5E5E5"> we do what all</font>

309
00:15:54,310 --> 00:15:59,500
those web guys do with when it comes<font color="#CCCCCC"> to</font>

310
00:15:56,920 --> 00:16:02,079
encoding to actually have a look at if

311
00:15:59,500 --> 00:16:05,110
this is correctly encoded we basically

312
00:16:02,079 --> 00:16:07,569
use those specialized<font color="#CCCCCC"> Fathers for web</font>

313
00:16:05,110 --> 00:16:11,040
languages so basically we we have an

314
00:16:07,570 --> 00:16:14,440
HTML language<font color="#CCCCCC"> with JavaScript and try to</font>

315
00:16:11,040 --> 00:16:19,300
try to<font color="#CCCCCC"> fast this</font><font color="#E5E5E5"> one with with</font><font color="#CCCCCC"> Def IBM</font>

316
00:16:14,440 --> 00:16:22,660
<font color="#CCCCCC">FCN and fast DB and we</font><font color="#E5E5E5"> actually did not</font>

317
00:16:19,300 --> 00:16:26,500
<font color="#E5E5E5">find something which well might</font><font color="#CCCCCC"> be ok</font>

318
00:16:22,660 --> 00:16:28,779
<font color="#CCCCCC">but I hope we really did not miss</font>

319
00:16:26,500 --> 00:16:30,760
something over there and<font color="#CCCCCC"> actually we</font>

320
00:16:28,779 --> 00:16:32,800
compared those<font color="#CCCCCC"> path trees because</font>

321
00:16:30,760 --> 00:16:37,420
actually we have different encoding then

322
00:16:32,800 --> 00:16:39,310
which was specified within HTML<font color="#E5E5E5"> so we</font>

323
00:16:37,420 --> 00:16:41,439
came<font color="#E5E5E5"> up</font><font color="#CCCCCC"> with a generated encoding which</font>

324
00:16:39,310 --> 00:16:45,939
browsers definitely do not understand

325
00:16:41,440 --> 00:16:48,430
but our own decoder then<font color="#E5E5E5"> does and so</font>

326
00:16:45,940 --> 00:16:50,980
when we compared those<font color="#E5E5E5"> path trees we</font>

327
00:16:48,430 --> 00:16:53,739
<font color="#CCCCCC">sent in those past history parse again</font>

328
00:16:50,980 --> 00:17:00,640
we did<font color="#E5E5E5"> not find any differences for</font><font color="#CCCCCC"> all</font>

329
00:16:53,740 --> 00:17:02,950
<font color="#E5E5E5">those inputs so to sum up we we have</font>

330
00:17:00,640 --> 00:17:05,319
this situation where<font color="#E5E5E5"> the injection</font>

331
00:17:02,950 --> 00:17:07,390
<font color="#E5E5E5">vulnerabilities are still yeah kind of</font>

332
00:17:05,319 --> 00:17:09,819
not<font color="#E5E5E5"> really understood by those guys who</font>

333
00:17:07,390 --> 00:17:12,760
<font color="#E5E5E5">care most so basically the OS</font><font color="#CCCCCC"> Pro</font><font color="#E5E5E5"> 10</font>

334
00:17:09,819 --> 00:17:14,829
<font color="#E5E5E5">seems to be broken</font><font color="#CCCCCC"> and those guys should</font>

335
00:17:12,760 --> 00:17:19,720
<font color="#E5E5E5">really catch up</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> some legs except I</font>

336
00:17:14,829 --> 00:17:21,579
suppose<font color="#E5E5E5"> and we delivered here some ideas</font>

337
00:17:19,720 --> 00:17:25,449
on<font color="#CCCCCC"> how to actually generate some</font>

338
00:17:21,579 --> 00:17:28,600
encoding if<font color="#E5E5E5"> you're if you're running a</font>

339
00:17:25,449 --> 00:17:30,730
new protocol on your<font color="#E5E5E5"> language and you're</font>

340
00:17:28,600 --> 00:17:33,189
not building<font color="#E5E5E5"> up on all those stuff that</font>

341
00:17:30,730 --> 00:17:35,080
is<font color="#CCCCCC"> available for for the web and you're</font>

342
00:17:33,190 --> 00:17:37,030
running a new protocol you actually want

343
00:17:35,080 --> 00:17:39,500
<font color="#E5E5E5">to have something that</font><font color="#CCCCCC"> provides you</font>

344
00:17:37,030 --> 00:17:42,110
these kind<font color="#E5E5E5"> of encoding</font>

345
00:17:39,500 --> 00:17:51,860
and so you don't mess up<font color="#E5E5E5"> those things by</font>

346
00:17:42,110 --> 00:17:54,350
yourself<font color="#E5E5E5"> yeah and yeah the last point</font>

347
00:17:51,860 --> 00:17:57,049
actually from so reflecting back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font>

348
00:17:54,350 --> 00:17:59,270
keynote is<font color="#E5E5E5"> basically I mean if we get</font>

349
00:17:57,049 --> 00:18:00,918
this right so these<font color="#E5E5E5"> parsing and</font>

350
00:17:59,270 --> 00:18:02,658
unplugging if we actually<font color="#E5E5E5"> get this right</font>

351
00:18:00,919 --> 00:18:04,820
<font color="#CCCCCC">we might end up in a</font><font color="#E5E5E5"> solution where</font>

352
00:18:02,659 --> 00:18:07,909
where she can verify some things right

353
00:18:04,820 --> 00:18:11,030
and<font color="#E5E5E5"> decompose security again which would</font>

354
00:18:07,909 --> 00:18:13,700
<font color="#E5E5E5">be great I mean we would</font><font color="#CCCCCC"> have been at</font>

355
00:18:11,030 --> 00:18:15,010
life for the last<font color="#CCCCCC"> thirty years with this</font>

356
00:18:13,700 --> 00:18:18,409
would be great

357
00:18:15,010 --> 00:18:21,530
so some<font color="#E5E5E5"> some points were one could</font>

358
00:18:18,409 --> 00:18:24,710
actually work on is definitely positive

359
00:18:21,530 --> 00:18:27,110
wrenches which we<font color="#E5E5E5"> definitely do</font><font color="#CCCCCC"> not care</font>

360
00:18:24,710 --> 00:18:28,850
about<font color="#E5E5E5"> I mean we when we have different</font>

361
00:18:27,110 --> 00:18:31,520
<font color="#CCCCCC">fathers and they've definitely</font><font color="#E5E5E5"> behaved</font>

362
00:18:28,850 --> 00:18:33,740
differently<font color="#E5E5E5"> and this is what we did not</font>

363
00:18:31,520 --> 00:18:40,820
did<font color="#CCCCCC"> not travel</font><font color="#E5E5E5"> in this approach up to</font>

364
00:18:33,740 --> 00:18:43,039
now<font color="#E5E5E5"> on the other thing for for doing</font>

365
00:18:40,820 --> 00:18:45,970
some more<font color="#E5E5E5"> offense research might be</font>

366
00:18:43,039 --> 00:18:49,700
interesting to<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> learn those</font>

367
00:18:45,970 --> 00:18:51,679
learn those languages<font color="#E5E5E5"> that</font><font color="#CCCCCC"> programs</font><font color="#E5E5E5"> talk</font>

368
00:18:49,700 --> 00:18:53,960
right so<font color="#E5E5E5"> basically extracting those</font>

369
00:18:51,679 --> 00:18:57,950
those grammars from existing

370
00:18:53,960 --> 00:18:59,960
implementations and looking for and look

371
00:18:57,950 --> 00:19:02,059
for injections so basically extracting

372
00:18:59,960 --> 00:19:04,070
<font color="#E5E5E5">those keywords and try if we can inject</font>

373
00:19:02,059 --> 00:19:09,678
things over there<font color="#E5E5E5"> might be interesting</font>

374
00:19:04,070 --> 00:19:12,590
<font color="#CCCCCC">to find</font><font color="#E5E5E5"> some things and yeah as I said</font>

375
00:19:09,679 --> 00:19:14,450
before I<font color="#E5E5E5"> mean we need to get these</font>

376
00:19:12,590 --> 00:19:15,620
<font color="#CCCCCC">things those things more easily and</font>

377
00:19:14,450 --> 00:19:17,870
bring this more to the<font color="#E5E5E5"> heart of</font>

378
00:19:15,620 --> 00:19:20,840
developers so<font color="#E5E5E5"> they actually use this</font>

379
00:19:17,870 --> 00:19:22,939
stuff<font color="#E5E5E5"> this would be close to my heart</font><font color="#CCCCCC"> so</font>

380
00:19:20,840 --> 00:19:34,059
<font color="#CCCCCC">perhaps we can do</font><font color="#E5E5E5"> some things about this</font>

381
00:19:22,940 --> 00:19:34,059
<font color="#E5E5E5">and</font><font color="#CCCCCC"> that's it thank you some questions</font>

382
00:19:35,519 --> 00:19:40,989
three very very<font color="#E5E5E5"> quick points first of</font>

383
00:19:38,409 --> 00:19:44,349
<font color="#E5E5E5">all on your early slide where you show</font>

384
00:19:40,989 --> 00:19:47,170
you are your invariant<font color="#E5E5E5"> for the parts of</font>

385
00:19:44,349 --> 00:19:49,090
<font color="#CCCCCC">mania</font><font color="#E5E5E5"> of the un-- parts you know</font>

386
00:19:47,170 --> 00:19:51,850
that's the<font color="#E5E5E5"> theory about</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> prove in</font>

387
00:19:49,090 --> 00:19:55,449
order<font color="#CCCCCC"> to just show that your your</font>

388
00:19:51,850 --> 00:19:57,070
<font color="#E5E5E5">imitation is correct</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> right there</font><font color="#CCCCCC"> if</font>

389
00:19:55,450 --> 00:19:59,740
you were<font color="#E5E5E5"> working the</font><font color="#CCCCCC"> system what</font><font color="#E5E5E5"> that</font>

390
00:19:57,070 --> 00:20:01,000
would be what<font color="#E5E5E5"> you have to prove yeah we</font>

391
00:19:59,740 --> 00:20:02,920
know and<font color="#E5E5E5"> then you would know that this</font>

392
00:20:01,000 --> 00:20:05,620
the rest of<font color="#CCCCCC"> us our second brilliant</font>

393
00:20:02,920 --> 00:20:08,950
question so you almost<font color="#E5E5E5"> are doing this in</font>

394
00:20:05,620 --> 00:20:11,590
some ways - well you<font color="#CCCCCC"> just by by getting</font>

395
00:20:08,950 --> 00:20:13,720
<font color="#E5E5E5">the invariant in and out even in the</font>

396
00:20:11,590 --> 00:20:17,020
presence<font color="#E5E5E5"> of something that clearly pops</font>

397
00:20:13,720 --> 00:20:19,419
<font color="#CCCCCC">top code</font><font color="#E5E5E5"> this down the line and</font><font color="#CCCCCC"> it's</font>

398
00:20:17,020 --> 00:20:21,280
badly<font color="#E5E5E5"> written will be vulnerable</font><font color="#CCCCCC"> even</font>

399
00:20:19,419 --> 00:20:23,830
<font color="#E5E5E5">the code that used that using more</font>

400
00:20:21,280 --> 00:20:25,450
<font color="#CCCCCC">technical</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> will not be protected</font><font color="#E5E5E5"> by</font>

401
00:20:23,830 --> 00:20:27,939
codes<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> using your techniques or if</font>

402
00:20:25,450 --> 00:20:30,100
<font color="#E5E5E5">your</font><font color="#CCCCCC"> kögel</font><font color="#E5E5E5"> is work fine regardless</font><font color="#CCCCCC"> of</font>

403
00:20:27,940 --> 00:20:32,650
what you throw it and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> something</font>

404
00:20:30,100 --> 00:20:36,189
that's badly written down<font color="#CCCCCC"> the line</font><font color="#E5E5E5"> will</font>

405
00:20:32,650 --> 00:20:39,040
will will risk will still receive you

406
00:20:36,190 --> 00:20:41,440
know the embedded stuff and you know in

407
00:20:39,040 --> 00:20:43,210
some<font color="#CCCCCC"> Soviet</font><font color="#E5E5E5"> yeah baby needs just</font>

408
00:20:41,440 --> 00:20:45,730
<font color="#CCCCCC">unplugging right it's not caring about</font>

409
00:20:43,210 --> 00:20:47,799
writing<font color="#E5E5E5"> and really good parsers right</font>

410
00:20:45,730 --> 00:20:49,750
the other<font color="#E5E5E5"> way around</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so and this</font>

411
00:20:47,799 --> 00:20:52,240
<font color="#E5E5E5">is kind of the Cecil things so if you</font>

412
00:20:49,750 --> 00:20:55,059
<font color="#E5E5E5">enable</font><font color="#CCCCCC"> the CTO mode yeah definitely your</font>

413
00:20:52,240 --> 00:20:56,890
father is all your your<font color="#CCCCCC"> path tree which</font>

414
00:20:55,059 --> 00:20:59,020
is<font color="#E5E5E5"> generated from your father</font><font color="#CCCCCC"> contains</font>

415
00:20:56,890 --> 00:21:01,299
stuff that you're<font color="#CCCCCC"> not want to have</font><font color="#E5E5E5"> it in</font>

416
00:20:59,020 --> 00:21:03,429
there so this<font color="#E5E5E5"> is was just an</font><font color="#CCCCCC"> option and</font>

417
00:21:01,299 --> 00:21:07,710
we<font color="#CCCCCC"> actually do not enable this just</font>

418
00:21:03,429 --> 00:21:10,150
showing this<font color="#CCCCCC"> my describe</font><font color="#E5E5E5"> parsers as</font>

419
00:21:07,710 --> 00:21:13,990
deliberately well providing extra

420
00:21:10,150 --> 00:21:18,100
ammunition<font color="#E5E5E5"> extra computing power yes to</font>

421
00:21:13,990 --> 00:21:20,980
the<font color="#CCCCCC"> adapters refusing to decode</font><font color="#E5E5E5"> run into</font>

422
00:21:18,100 --> 00:21:24,159
their execution model<font color="#E5E5E5"> but of course you</font>

423
00:21:20,980 --> 00:21:24,840
know other's<font color="#CCCCCC"> performances</font><font color="#E5E5E5"> let's real</font>

424
00:21:24,160 --> 00:21:26,850
quick

425
00:21:24,840 --> 00:21:28,918
<font color="#E5E5E5">very something that</font><font color="#CCCCCC"> looked really really</font>

426
00:21:26,850 --> 00:21:31,289
<font color="#CCCCCC">fascinating</font><font color="#E5E5E5"> on last part of the last</font><font color="#CCCCCC"> lie</font>

427
00:21:28,919 --> 00:21:34,230
<font color="#E5E5E5">which is the notion of providing</font>

428
00:21:31,289 --> 00:21:37,759
programming languages<font color="#E5E5E5"> with built-in</font>

429
00:21:34,230 --> 00:21:37,759
reasonable representation for<font color="#CCCCCC"> forever</font>

430
00:21:37,850 --> 00:21:46,070
yeah yes we done yeah if you if you have

431
00:21:43,710 --> 00:21:48,659
a good<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> this I'm very up to</font>

432
00:21:46,070 --> 00:21:50,580
getting<font color="#E5E5E5"> this</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> but I'm actually not</font>

433
00:21:48,659 --> 00:21:54,019
sure<font color="#E5E5E5"> how this really is the right</font><font color="#CCCCCC"> thing</font>

434
00:21:50,580 --> 00:21:58,918
<font color="#CCCCCC">right I've seen some some guys writing</font>

435
00:21:54,019 --> 00:22:05,279
<font color="#E5E5E5">grammars with in XML things so this</font>

436
00:21:58,919 --> 00:22:07,679
might<font color="#CCCCCC"> be not the right</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> terribly</font>

437
00:22:05,279 --> 00:22:13,499
what you're<font color="#CCCCCC"> writing</font><font color="#E5E5E5"> here is much more</font>

438
00:22:07,679 --> 00:22:16,860
general<font color="#E5E5E5"> the same you know the point is</font>

439
00:22:13,499 --> 00:22:19,470
<font color="#CCCCCC">that if the code that used would induce</font>

440
00:22:16,860 --> 00:22:22,949
doesn't look like the grammar of<font color="#E5E5E5"> those</font>

441
00:22:19,470 --> 00:22:27,029
<font color="#E5E5E5">inputs that code</font><font color="#CCCCCC"> is trouble</font><font color="#E5E5E5"> that code</font>

442
00:22:22,950 --> 00:22:29,309
has no business existing right<font color="#CCCCCC"> I open it</font>

443
00:22:27,029 --> 00:22:38,039
<font color="#CCCCCC">yourself</font><font color="#E5E5E5"> you look at this and</font><font color="#CCCCCC"> you see a</font>

444
00:22:29,309 --> 00:22:41,940
pointer style right you know<font color="#E5E5E5"> static with</font>

445
00:22:38,039 --> 00:22:43,499
integer arithmetic<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> definitely if</font>

446
00:22:41,940 --> 00:22:47,779
it doesn't look<font color="#CCCCCC"> like the grammar</font>

447
00:22:43,499 --> 00:22:51,090
<font color="#E5E5E5">it is trouble pretty much helpless so</font>

448
00:22:47,779 --> 00:22:53,509
what would you say<font color="#E5E5E5"> and what largest</font><font color="#CCCCCC"> said</font>

449
00:22:51,090 --> 00:22:57,059
is again a portal or<font color="#CCCCCC"> corollary of that</font>

450
00:22:53,509 --> 00:23:00,600
we want make<font color="#CCCCCC"> it easy for developers to</font>

451
00:22:57,059 --> 00:23:05,639
<font color="#CCCCCC">make the code look likely expect valid</font>

452
00:23:00,600 --> 00:23:10,879
grammar parser generators are that<font color="#E5E5E5"> but</font>

453
00:23:05,639 --> 00:23:10,879
other means are<font color="#CCCCCC"> portable</font><font color="#E5E5E5"> as well</font>

454
00:23:11,990 --> 00:23:18,620
so regarding<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> bi-directional</font>

455
00:23:15,140 --> 00:23:24,220
<font color="#E5E5E5">property of partisan announcers</font><font color="#CCCCCC"> I think</font>

456
00:23:18,620 --> 00:23:28,540
it might be too strong with them believe

457
00:23:24,220 --> 00:23:41,120
in the politics<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the source code</font>

458
00:23:28,540 --> 00:23:42,889
<font color="#E5E5E5">attracting a tree and yeah we skipped</font>

459
00:23:41,120 --> 00:23:44,510
actually<font color="#E5E5E5"> this problem actually in the</font>

460
00:23:42,890 --> 00:23:47,120
first implementation<font color="#E5E5E5"> we tried to</font>

461
00:23:44,510 --> 00:23:49,700
<font color="#E5E5E5">actually incorporate</font><font color="#CCCCCC"> asta abstraction in</font>

462
00:23:47,120 --> 00:23:51,409
there<font color="#E5E5E5"> but yes you're right and then</font>

463
00:23:49,700 --> 00:23:54,080
<font color="#E5E5E5">basically this construction of the</font>

464
00:23:51,410 --> 00:24:08,810
umpire is really<font color="#E5E5E5"> a tough things also we</font>

465
00:23:54,080 --> 00:24:14,179
basically stick with the past redone

466
00:24:08,810 --> 00:24:24,899
person yeah<font color="#CCCCCC"> yeah we don't want to solve</font>

467
00:24:14,180 --> 00:24:29,759
it again right<font color="#E5E5E5"> yeah thank you</font>

468
00:24:24,900 --> 00:24:29,759
[Applause]

