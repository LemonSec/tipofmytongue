1
00:00:00,240 --> 00:00:04,499
so I just<font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk a little bit</font>

2
00:00:02,340 --> 00:00:06,869
about you know some of the the places

3
00:00:04,499 --> 00:00:08,849
that the field has gone over the course

4
00:00:06,869 --> 00:00:10,830
of the last year we've<font color="#CCCCCC"> had a lot of</font>

5
00:00:08,849 --> 00:00:13,200
questions from people about the

6
00:00:10,830 --> 00:00:16,289
connection between<font color="#CCCCCC"> Lang second type</font>

7
00:00:13,200 --> 00:00:17,519
theory and I kind<font color="#E5E5E5"> of been beating my</font>

8
00:00:16,289 --> 00:00:19,109
head against<font color="#CCCCCC"> the wall for a long time</font>

9
00:00:17,519 --> 00:00:21,000
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out how to</font><font color="#CCCCCC"> explain it</font>

10
00:00:19,109 --> 00:00:23,369
and<font color="#E5E5E5"> then thanks</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> home</font><font color="#CCCCCC"> atobe type</font>

11
00:00:21,000 --> 00:00:26,789
<font color="#CCCCCC">Theory workshop that I made it to in</font>

12
00:00:23,369 --> 00:00:30,000
Berlin back in April I realized it's

13
00:00:26,789 --> 00:00:32,610
actually fairly simple you know the job

14
00:00:30,000 --> 00:00:37,320
of any input handler which is to say a

15
00:00:32,610 --> 00:00:40,650
parser is to take<font color="#E5E5E5"> a string eliminate it</font>

16
00:00:37,320 --> 00:00:42,990
<font color="#E5E5E5">and turn that string into some other</font>

17
00:00:40,650 --> 00:00:45,210
type to introduce a new type and these

18
00:00:42,990 --> 00:00:47,790
are these<font color="#E5E5E5"> are the two basic operations</font>

19
00:00:45,210 --> 00:00:50,730
of type theory yeah we're essentially

20
00:00:47,790 --> 00:00:53,190
considering a parser to be in a type

21
00:00:50,730 --> 00:00:55,769
constructor for<font color="#CCCCCC"> the data that</font><font color="#E5E5E5"> you're</font>

22
00:00:53,190 --> 00:00:59,760
that you're that your code operates on

23
00:00:55,770 --> 00:01:03,060
and as we saw through quite a lot<font color="#E5E5E5"> of</font>

24
00:00:59,760 --> 00:01:05,670
last year incorrect string elimination

25
00:01:03,060 --> 00:01:08,579
<font color="#CCCCCC">misrecognition</font><font color="#E5E5E5"> of strings leads to the</font>

26
00:01:05,670 --> 00:01:10,350
creation of incorrect types and leads to

27
00:01:08,579 --> 00:01:12,298
and leads to all kinds of problems I

28
00:01:10,350 --> 00:01:14,548
<font color="#CCCCCC">mean we we</font><font color="#E5E5E5"> could easily have called 2014</font>

29
00:01:12,299 --> 00:01:16,920
<font color="#CCCCCC">the year of parsing bugs just for the</font>

30
00:01:14,549 --> 00:01:18,810
sheer number of massive you<font color="#E5E5E5"> know</font>

31
00:01:16,920 --> 00:01:20,490
world-shattering vulnerability

32
00:01:18,810 --> 00:01:24,780
vulnerabilities that turned out<font color="#CCCCCC"> to be</font>

33
00:01:20,490 --> 00:01:28,460
problems in a parser so we can<font color="#E5E5E5"> further</font>

34
00:01:24,780 --> 00:01:32,520
go on to say that because a parser is

35
00:01:28,460 --> 00:01:34,889
introducing new types it is also giving

36
00:01:32,520 --> 00:01:37,350
us the<font color="#CCCCCC"> ability to reason about those</font>

37
00:01:34,890 --> 00:01:39,090
types and reason about preconditions for

38
00:01:37,350 --> 00:01:44,850
when we're making program correctness

39
00:01:39,090 --> 00:01:49,109
proofs when we talk about verified

40
00:01:44,850 --> 00:01:51,389
compilers it's it's an unfortunate it's

41
00:01:49,109 --> 00:01:53,788
an unfortunate truth that they tend<font color="#E5E5E5"> to</font>

42
00:01:51,389 --> 00:01:55,740
<font color="#E5E5E5">not focus on parsing too much there's</font>

43
00:01:53,789 --> 00:01:58,499
there's a wonderful<font color="#CCCCCC"> paper from 2011 by</font>

44
00:01:55,740 --> 00:02:00,509
<font color="#E5E5E5">Adam koprowski and honry binstock called</font>

45
00:01:58,499 --> 00:02:03,719
TRX a formally verified parser

46
00:02:00,509 --> 00:02:06,299
interpreter which mentions that in the

47
00:02:03,719 --> 00:02:08,190
2009 article about concert an<font color="#E5E5E5"> impressive</font>

48
00:02:06,299 --> 00:02:10,530
project<font color="#E5E5E5"> formally verifying a compiler</font>

49
00:02:08,190 --> 00:02:12,630
for a large subset of C the introduction

50
00:02:10,530 --> 00:02:13,470
<font color="#CCCCCC">starts with a question</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> trust</font>

51
00:02:12,630 --> 00:02:15,390
your compiler

52
00:02:13,470 --> 00:02:18,390
nevertheless the formal verification

53
00:02:15,390 --> 00:02:20,670
starts on<font color="#CCCCCC"> the level of the</font><font color="#E5E5E5"> AST and does</font>

54
00:02:18,390 --> 00:02:22,920
not concern the parser can you trust

55
00:02:20,670 --> 00:02:26,429
your parser<font color="#E5E5E5"> you know and this is</font><font color="#CCCCCC"> a very</font>

56
00:02:22,920 --> 00:02:27,720
<font color="#CCCCCC">good question you know if your goal if</font>

57
00:02:26,430 --> 00:02:30,360
your goal is<font color="#CCCCCC"> to try to eradicate a</font>

58
00:02:27,720 --> 00:02:32,490
trusting trust attack that's great but

59
00:02:30,360 --> 00:02:34,050
if you<font color="#E5E5E5"> can't trust the</font><font color="#CCCCCC"> ast that's coming</font>

60
00:02:32,490 --> 00:02:36,390
in they're still not a whole lot you can

61
00:02:34,050 --> 00:02:38,790
do I mean cops start has closed this gap

62
00:02:36,390 --> 00:02:40,739
with some later work on on formally

63
00:02:38,790 --> 00:02:42,209
validating LR parsers but unfortunately

64
00:02:40,740 --> 00:02:44,820
it's a no camel which means it's kind of

65
00:02:42,210 --> 00:02:47,940
hard to integrate it to see and we're

66
00:02:44,820 --> 00:02:53,670
still kind of back where we started but

67
00:02:47,940 --> 00:02:57,540
we will be<font color="#E5E5E5"> showing a sea toolkit for</font>

68
00:02:53,670 --> 00:02:59,309
building more secure parsers not

69
00:02:57,540 --> 00:03:00,780
actually not actually verified or really

70
00:02:59,310 --> 00:03:05,459
even verifiable at this point because

71
00:03:00,780 --> 00:03:07,680
it's still in<font color="#E5E5E5"> C but baby steps yeah so</font>

72
00:03:05,459 --> 00:03:12,170
we'll actually will actually be

73
00:03:07,680 --> 00:03:15,240
concluding with that and going<font color="#CCCCCC"> into a</font>

74
00:03:12,170 --> 00:03:18,268
general discussion but let's let's

75
00:03:15,240 --> 00:03:22,230
review right we started this year with

76
00:03:18,269 --> 00:03:26,100
heartbleed right and other which<font color="#CCCCCC"> is very</font>

77
00:03:22,230 --> 00:03:30,870
obviously<font color="#E5E5E5"> a parser bug and exactly where</font>

78
00:03:26,100 --> 00:03:34,680
we<font color="#CCCCCC"> are warned it would</font><font color="#E5E5E5"> be the nested</font>

79
00:03:30,870 --> 00:03:38,480
links then<font color="#E5E5E5"> less</font><font color="#CCCCCC"> than Inc links a bit us</font>

80
00:03:34,680 --> 00:03:41,910
again Microsoft decided to reimplement

81
00:03:38,480 --> 00:03:46,010
ssl/tls and had their own secure<font color="#CCCCCC"> Channel</font>

82
00:03:41,910 --> 00:03:51,500
and where do you think their bug was

83
00:03:46,010 --> 00:04:02,579
again in parsing of nested structures in

84
00:03:51,500 --> 00:04:07,220
sn1 in the asn.1 ber<font color="#E5E5E5"> in code so</font><font color="#CCCCCC"> we are</font>

85
00:04:02,580 --> 00:04:09,510
looking<font color="#CCCCCC"> at these very same encoding in</font>

86
00:04:07,220 --> 00:04:12,480
just about every bit of critical

87
00:04:09,510 --> 00:04:14,820
software we're looking at<font color="#CCCCCC"> asn.1 being</font>

88
00:04:12,480 --> 00:04:16,738
introduced in vehicle<font color="#CCCCCC"> to vehicles and</font>

89
00:04:14,820 --> 00:04:19,260
vehicle to infrastructure protocols

90
00:04:16,738 --> 00:04:22,799
because yes these things are going to

91
00:04:19,260 --> 00:04:26,460
have certificates and so we're now in

92
00:04:22,800 --> 00:04:27,330
this situation where<font color="#E5E5E5"> are verifying</font>

93
00:04:26,460 --> 00:04:31,739
parsers

94
00:04:27,330 --> 00:04:34,409
is just<font color="#E5E5E5"> about</font><font color="#CCCCCC"> the biggest payoff that we</font>

95
00:04:31,740 --> 00:04:37,379
could imagine to come from verification

96
00:04:34,409 --> 00:04:39,509
and yet somehow this is not the thing so

97
00:04:37,379 --> 00:04:43,530
we're gathered together<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make this a</font>

98
00:04:39,509 --> 00:04:47,639
thing and we're<font color="#E5E5E5"> going to have a quite a</font>

99
00:04:43,530 --> 00:04:49,859
number<font color="#E5E5E5"> of new topics introduced this</font>

100
00:04:47,639 --> 00:04:53,750
year so we'll start<font color="#CCCCCC"> with the correctness</font>

101
00:04:49,860 --> 00:04:56,879
security gap or and then go on<font color="#CCCCCC"> to</font>

102
00:04:53,750 --> 00:04:59,879
automatic synthesis of grammars are heap

103
00:04:56,879 --> 00:05:02,849
allocator semantics lowering<font color="#E5E5E5"> parser</font>

104
00:04:59,879 --> 00:05:04,379
verification costs by using a sub

105
00:05:02,849 --> 00:05:07,139
cheering environment in which you do you

106
00:05:04,379 --> 00:05:09,240
proof and then a whole<font color="#E5E5E5"> bunch</font><font color="#CCCCCC"> of</font>

107
00:05:07,139 --> 00:05:11,460
practical things such as rust on for

108
00:05:09,240 --> 00:05:14,460
<font color="#E5E5E5">sirs session languages and more system</font>

109
00:05:11,460 --> 00:05:17,750
languages yes yes so we have quite a

110
00:05:14,460 --> 00:05:17,750
workshop ahead of us

