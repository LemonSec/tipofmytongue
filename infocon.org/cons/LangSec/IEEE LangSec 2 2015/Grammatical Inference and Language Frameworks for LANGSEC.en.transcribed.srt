1
00:00:00,000 --> 00:00:04,170
my name is Kerry Wood I'm actually a

2
00:00:02,310 --> 00:00:05,520
contractor that<font color="#E5E5E5"> Army Research Lab rich</font>

3
00:00:04,170 --> 00:00:07,500
wasn't<font color="#E5E5E5"> able to make it so I'm here today</font>

4
00:00:05,520 --> 00:00:10,500
as it works out I wrote most of the

5
00:00:07,500 --> 00:00:11,910
paper so that's not a<font color="#CCCCCC"> problem you have</font>

6
00:00:10,500 --> 00:00:13,290
any questions and<font color="#CCCCCC"> I can't answer them</font>

7
00:00:11,910 --> 00:00:17,730
I'll blame them on rich but I'm totally

8
00:00:13,290 --> 00:00:19,230
punting we are going to take<font color="#E5E5E5"> a little</font>

9
00:00:17,730 --> 00:00:20,550
bit of a<font color="#CCCCCC"> different look and</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> from</font>

10
00:00:19,230 --> 00:00:23,490
the get-go I'm gonna put a caveat in

11
00:00:20,550 --> 00:00:25,380
that i am<font color="#CCCCCC"> not a formal language guy i am</font>

12
00:00:23,490 --> 00:00:27,209
new to all this I put computational

13
00:00:25,380 --> 00:00:29,038
complexity on my resume and started down

14
00:00:27,210 --> 00:00:31,859
the rabbit hole that was about<font color="#CCCCCC"> a year</font>

15
00:00:29,039 --> 00:00:33,420
ago so if I say something<font color="#CCCCCC"> stupid it's</font>

16
00:00:31,859 --> 00:00:36,030
because I'm<font color="#E5E5E5"> probably stupid so please</font>

17
00:00:33,420 --> 00:00:37,829
clear it up<font color="#CCCCCC"> for me basically the</font>

18
00:00:36,030 --> 00:00:39,750
beginning<font color="#E5E5E5"> of this was a natural was</font>

19
00:00:37,829 --> 00:00:40,620
literature review right you start out

20
00:00:39,750 --> 00:00:41,969
especially when you don't know what

21
00:00:40,620 --> 00:00:43,769
you're talking about looking at all this

22
00:00:41,969 --> 00:00:45,750
<font color="#E5E5E5">stuff and it's a rich field that's been</font>

23
00:00:43,770 --> 00:00:48,270
looked at for the better part if I'd say

24
00:00:45,750 --> 00:00:51,090
four years deciphering<font color="#E5E5E5"> some of it can be</font>

25
00:00:48,270 --> 00:00:52,949
interesting there's edge cases there's

26
00:00:51,090 --> 00:00:54,329
specifics and because of that this<font color="#E5E5E5"> is</font>

27
00:00:52,949 --> 00:00:56,010
<font color="#E5E5E5">just going to be a teaser especially</font>

28
00:00:54,329 --> 00:00:57,690
this talk if you're interested in<font color="#E5E5E5"> this</font>

29
00:00:56,010 --> 00:00:59,250
at all I definitely recommend you look

30
00:00:57,690 --> 00:01:01,140
<font color="#E5E5E5">at my paper which cites a lot of other</font>

31
00:00:59,250 --> 00:01:03,420
papers so mine is kind of the beginning

32
00:01:01,140 --> 00:01:05,129
<font color="#E5E5E5">of hey take</font><font color="#CCCCCC"> a look</font><font color="#E5E5E5"> go look at these</font>

33
00:01:03,420 --> 00:01:06,900
other references you're never going<font color="#CCCCCC"> to</font>

34
00:01:05,129 --> 00:01:10,220
<font color="#E5E5E5">find one that's comprehensive even the</font>

35
00:01:06,900 --> 00:01:12,720
closest ones are<font color="#E5E5E5"> going to be 50 60 pages</font>

36
00:01:10,220 --> 00:01:15,750
we came into<font color="#CCCCCC"> this kind of knowing that</font>

37
00:01:12,720 --> 00:01:17,640
inferring grammars is difficult so<font color="#CCCCCC"> is if</font>

38
00:01:15,750 --> 00:01:20,970
we go and stand before<font color="#CCCCCC"> army leadership</font>

39
00:01:17,640 --> 00:01:22,229
we say this is a this is<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that</font>

40
00:01:20,970 --> 00:01:23,580
may work and if<font color="#E5E5E5"> it does it would be</font>

41
00:01:22,229 --> 00:01:25,470
great but<font color="#E5E5E5"> we're pretty sure it's not</font>

42
00:01:23,580 --> 00:01:27,630
<font color="#CCCCCC">going to we also think it's probably</font>

43
00:01:25,470 --> 00:01:28,829
<font color="#E5E5E5">harder to bake all this into every piece</font>

44
00:01:27,630 --> 00:01:32,339
<font color="#CCCCCC">of code that's ever going</font><font color="#E5E5E5"> to be written</font>

45
00:01:28,829 --> 00:01:34,619
<font color="#E5E5E5">for the rest of time so it's a kind</font><font color="#CCCCCC"> of</font>

46
00:01:32,340 --> 00:01:36,810
natural converse way of looking at the

47
00:01:34,619 --> 00:01:38,360
problem and we hope we've seen a little

48
00:01:36,810 --> 00:01:42,420
<font color="#E5E5E5">bit</font><font color="#CCCCCC"> of progress but the results are</font>

49
00:01:38,360 --> 00:01:44,250
minimal at best at this point just a

50
00:01:42,420 --> 00:01:46,380
quick overview we're going<font color="#E5E5E5"> to do a brief</font>

51
00:01:44,250 --> 00:01:47,430
introduction of what grammars and<font color="#CCCCCC"> Lange</font>

52
00:01:46,380 --> 00:01:49,079
<font color="#E5E5E5">sack</font><font color="#CCCCCC"> we'll skip through that pretty</font>

53
00:01:47,430 --> 00:01:50,880
quickly mostly that's the kind of scope

54
00:01:49,079 --> 00:01:53,189
what we think Lange sack is especially

55
00:01:50,880 --> 00:01:54,360
from our perspective models of learning

56
00:01:53,189 --> 00:01:56,070
definitions are extraordinarily

57
00:01:54,360 --> 00:01:57,810
important when you start looking<font color="#E5E5E5"> at</font>

58
00:01:56,070 --> 00:02:00,360
these references because a slight change

59
00:01:57,810 --> 00:02:02,060
in one to another can<font color="#E5E5E5"> be a completely</font>

60
00:02:00,360 --> 00:02:05,310
different computational complexity class

61
00:02:02,060 --> 00:02:07,860
models of teaching how is data presented

62
00:02:05,310 --> 00:02:09,539
is it available that's<font color="#E5E5E5"> also important</font>

63
00:02:07,860 --> 00:02:11,610
not only in like I said reading<font color="#E5E5E5"> these</font>

64
00:02:09,538 --> 00:02:13,410
results but in applying them to

65
00:02:11,610 --> 00:02:15,240
real-world data and systems

66
00:02:13,410 --> 00:02:16,859
part of this also in this literature

67
00:02:15,240 --> 00:02:18,060
review is to say can we take problems

68
00:02:16,860 --> 00:02:19,650
that we're already looking at intrusion

69
00:02:18,060 --> 00:02:21,090
detection anomaly detection can we look

70
00:02:19,650 --> 00:02:22,770
at<font color="#E5E5E5"> them in the scope a formal language</font>

71
00:02:21,090 --> 00:02:24,540
theory so we get into that<font color="#E5E5E5"> a little bit</font>

72
00:02:22,770 --> 00:02:25,830
if we're interested but there were more

73
00:02:24,540 --> 00:02:28,010
goals than what i'm going to talk about

74
00:02:25,830 --> 00:02:30,030
here we'll talk<font color="#E5E5E5"> about two specific</font>

75
00:02:28,010 --> 00:02:31,950
constructs pattern languages and

76
00:02:30,030 --> 00:02:34,020
elementary formal systems<font color="#CCCCCC"> i say there</font>

77
00:02:31,950 --> 00:02:35,220
are<font color="#CCCCCC"> favourites they're my favorites i</font>

78
00:02:34,020 --> 00:02:37,020
don't know if<font color="#E5E5E5"> there are</font><font color="#CCCCCC"> favourites but</font>

79
00:02:35,220 --> 00:02:38,040
EFS is<font color="#CCCCCC"> I think are some of the more</font>

80
00:02:37,020 --> 00:02:39,600
interesting ones although they're kind

81
00:02:38,040 --> 00:02:41,579
of<font color="#E5E5E5"> hard to work with some initial work</font>

82
00:02:39,600 --> 00:02:42,210
and then hope<font color="#E5E5E5"> springs eternal I'm going</font>

83
00:02:41,580 --> 00:02:45,650
<font color="#E5E5E5">to tell you about all</font><font color="#CCCCCC"> the wonderful</font>

84
00:02:42,210 --> 00:02:48,060
things I'm<font color="#E5E5E5"> going to do hopefully someday</font>

85
00:02:45,650 --> 00:02:50,130
this is the slide will probably fly

86
00:02:48,060 --> 00:02:52,320
through just the background we all know

87
00:02:50,130 --> 00:02:54,230
the the complexity goes up as the<font color="#CCCCCC"> chomp</font>

88
00:02:52,320 --> 00:02:56,400
you crawl up the Chomsky hierarchy

89
00:02:54,230 --> 00:02:57,750
depending on<font color="#E5E5E5"> who you</font><font color="#CCCCCC"> talk to you never</font>

90
00:02:56,400 --> 00:02:59,010
<font color="#E5E5E5">want to be out of regular you certainly</font>

91
00:02:57,750 --> 00:03:01,250
don't want to be<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> context free</font>

92
00:02:59,010 --> 00:03:03,630
once you get<font color="#E5E5E5"> here you're in real trouble</font>

93
00:03:01,250 --> 00:03:05,580
the question is<font color="#CCCCCC"> can you even infer those</font>

94
00:03:03,630 --> 00:03:07,260
classes and the answer is almost<font color="#E5E5E5"> always</font>

95
00:03:05,580 --> 00:03:10,260
<font color="#E5E5E5">known but we'll talk a little bit more</font>

96
00:03:07,260 --> 00:03:11,760
<font color="#E5E5E5">about</font><font color="#CCCCCC"> that the grammatical inference</font>

97
00:03:10,260 --> 00:03:13,230
problem is pretty simple you're given a

98
00:03:11,760 --> 00:03:14,670
bunch of strings and again we'll talk

99
00:03:13,230 --> 00:03:16,200
about<font color="#E5E5E5"> how they're presented and how</font><font color="#CCCCCC"> many</font>

100
00:03:14,670 --> 00:03:17,880
<font color="#E5E5E5">of them you get to see you have to</font>

101
00:03:16,200 --> 00:03:19,560
identify<font color="#E5E5E5"> this generating structure and</font>

102
00:03:17,880 --> 00:03:21,209
<font color="#E5E5E5">whatever your favorite formalism is in</font>

103
00:03:19,560 --> 00:03:22,890
essence<font color="#E5E5E5"> you're kind of decompiling the</font>

104
00:03:21,209 --> 00:03:25,890
grammar it just is much harder because

105
00:03:22,890 --> 00:03:27,510
these tend to be asymptotic arguments so

106
00:03:25,890 --> 00:03:28,980
you can have grammars that are infinite

107
00:03:27,510 --> 00:03:30,540
how do you infer an infinite grammar

108
00:03:28,980 --> 00:03:31,980
right it's simple you might be able<font color="#E5E5E5"> to</font>

109
00:03:30,540 --> 00:03:34,380
pull it off but in a grant in<font color="#E5E5E5"> the grand</font>

110
00:03:31,980 --> 00:03:36,140
scheme of things you probably can and a

111
00:03:34,380 --> 00:03:38,250
teaching model they actually do infinite

112
00:03:36,140 --> 00:03:39,690
presentations so you have to see every

113
00:03:38,250 --> 00:03:41,520
string from the infinite grammar before

114
00:03:39,690 --> 00:03:42,920
you can infer the grammar that's going

115
00:03:41,520 --> 00:03:45,030
<font color="#E5E5E5">to be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> problem in the real world so</font>

116
00:03:42,920 --> 00:03:48,780
obviously we look at those bounds but

117
00:03:45,030 --> 00:03:50,970
they're not all<font color="#CCCCCC"> that useful this is kind</font>

118
00:03:48,780 --> 00:03:53,430
of<font color="#E5E5E5"> our view of why</font><font color="#CCCCCC"> Lang SEC is important</font>

119
00:03:50,970 --> 00:03:54,989
and I think everybody in the room tends

120
00:03:53,430 --> 00:03:56,160
<font color="#E5E5E5">to agree i'm glad because i've heard</font>

121
00:03:54,989 --> 00:03:57,209
some comments this morning of your

122
00:03:56,160 --> 00:03:58,980
<font color="#E5E5E5">little sheet of paper with all the</font>

123
00:03:57,209 --> 00:04:00,150
things<font color="#CCCCCC"> that I've heard that agree with</font>

124
00:03:58,980 --> 00:04:03,988
me I didn't write<font color="#CCCCCC"> down any of</font><font color="#E5E5E5"> the ones</font>

125
00:04:00,150 --> 00:04:06,660
that didn't you have all of<font color="#E5E5E5"> the possible</font>

126
00:04:03,989 --> 00:04:08,220
messages in the universe you really want

127
00:04:06,660 --> 00:04:09,480
to accept a little<font color="#E5E5E5"> green bubble which</font>

128
00:04:08,220 --> 00:04:12,000
you're probably accepting is somewhere

129
00:04:09,480 --> 00:04:13,859
in the middle and that circle can be

130
00:04:12,000 --> 00:04:15,390
defined in lots of different ways right

131
00:04:13,860 --> 00:04:16,919
so it depends<font color="#E5E5E5"> on what the programmer men</font>

132
00:04:15,390 --> 00:04:18,959
but the grammar meant what you really

133
00:04:16,918 --> 00:04:20,640
meant with the security guy men and what

134
00:04:18,959 --> 00:04:23,340
we'd like to do<font color="#CCCCCC"> is kind of have an idea</font>

135
00:04:20,640 --> 00:04:24,930
of which of those and the scope of how

136
00:04:23,340 --> 00:04:26,250
<font color="#E5E5E5">of the grammars that actually build</font>

137
00:04:24,930 --> 00:04:27,660
those strings

138
00:04:26,250 --> 00:04:29,310
the trouble begins when<font color="#E5E5E5"> we need to</font>

139
00:04:27,660 --> 00:04:31,260
<font color="#E5E5E5">define a recognizer but we actually</font>

140
00:04:29,310 --> 00:04:33,150
define one for the top one<font color="#E5E5E5"> and that's</font>

141
00:04:31,260 --> 00:04:34,860
what we do most<font color="#E5E5E5"> of the time right so we</font>

142
00:04:33,150 --> 00:04:39,810
define this one we mean the little<font color="#E5E5E5"> green</font>

143
00:04:34,860 --> 00:04:41,820
ball and exploits exploits exploits<font color="#CCCCCC"> uh</font>

144
00:04:39,810 --> 00:04:43,560
we'd love<font color="#E5E5E5"> to use only simple grammars</font>

145
00:04:41,820 --> 00:04:46,170
with provable properties i heard the

146
00:04:43,560 --> 00:04:47,700
keynote this morning and I the question

147
00:04:46,170 --> 00:04:50,190
I wanted to ask<font color="#E5E5E5"> that thankfully Michael</font>

148
00:04:47,700 --> 00:04:51,750
asked for me was it seems like<font color="#E5E5E5"> you want</font>

149
00:04:50,190 --> 00:04:53,130
<font color="#E5E5E5">to teach people</font><font color="#CCCCCC"> how to do this but how</font>

150
00:04:51,750 --> 00:04:54,330
do<font color="#E5E5E5"> you convince them to do it because at</font>

151
00:04:53,130 --> 00:04:55,680
the end of the day they're moving bits

152
00:04:54,330 --> 00:04:57,000
from one end to the other or they're

153
00:04:55,680 --> 00:04:58,680
taking their bits and doing<font color="#E5E5E5"> something</font>

154
00:04:57,000 --> 00:05:00,600
with it and I don't<font color="#E5E5E5"> know the answer</font><font color="#CCCCCC"> to</font>

155
00:04:58,680 --> 00:05:02,340
that I also don't know if it's<font color="#E5E5E5"> really</font>

156
00:05:00,600 --> 00:05:05,340
possible because defense is nowhere near

157
00:05:02,340 --> 00:05:07,229
as sexy as offense never will be playing

158
00:05:05,340 --> 00:05:09,210
defense is like playing offensive line

159
00:05:07,230 --> 00:05:10,470
for a good football team right nobody

160
00:05:09,210 --> 00:05:14,190
knows your name unless you've screwed up

161
00:05:10,470 --> 00:05:15,480
so it's it's a tough job so i think<font color="#CCCCCC"> the</font>

162
00:05:14,190 --> 00:05:17,190
tools have to be there<font color="#E5E5E5"> and i think there</font>

163
00:05:15,480 --> 00:05:19,710
has to be an intuitive way to tell

164
00:05:17,190 --> 00:05:21,450
programmers and consumer consumer's of

165
00:05:19,710 --> 00:05:22,620
this kind of information what they're

166
00:05:21,450 --> 00:05:25,320
actually looking at<font color="#E5E5E5"> that was part of</font>

167
00:05:22,620 --> 00:05:27,450
this research as well I think we know

168
00:05:25,320 --> 00:05:29,070
all this I will skip through most of it

169
00:05:27,450 --> 00:05:30,630
this is where it starts to get

170
00:05:29,070 --> 00:05:32,909
interesting when you look at the

171
00:05:30,630 --> 00:05:33,960
literature almost all of the papers are

172
00:05:32,910 --> 00:05:36,570
going to talk<font color="#E5E5E5"> about learning from</font>

173
00:05:33,960 --> 00:05:38,400
<font color="#CCCCCC">positive examples so in a</font><font color="#E5E5E5"> sense you're</font>

174
00:05:36,570 --> 00:05:40,770
presenting examples from the grammar to

175
00:05:38,400 --> 00:05:42,210
a learner repeatedly usually until

176
00:05:40,770 --> 00:05:43,500
<font color="#E5E5E5">you've exhausted the entire grammar</font>

177
00:05:42,210 --> 00:05:45,659
you've<font color="#E5E5E5"> given them every example that</font>

178
00:05:43,500 --> 00:05:47,100
could possibly be constructed again it's

179
00:05:45,660 --> 00:05:49,380
not all that interesting<font color="#CCCCCC"> but even under</font>

180
00:05:47,100 --> 00:05:51,810
those constraints you still can't learn

181
00:05:49,380 --> 00:05:52,919
a lot of grammars that's pretty shocking

182
00:05:51,810 --> 00:05:54,180
when you think about<font color="#E5E5E5"> it so even</font><font color="#CCCCCC"> if</font>

183
00:05:52,919 --> 00:05:55,080
you're presented with all the examples

184
00:05:54,180 --> 00:05:57,330
you're never going to<font color="#E5E5E5"> learn the grammar</font>

185
00:05:55,080 --> 00:05:58,919
there's the possibility of positive and

186
00:05:57,330 --> 00:06:00,780
negative examples this is a complete

187
00:05:58,919 --> 00:06:02,219
presentation much more powerful many

188
00:06:00,780 --> 00:06:04,289
<font color="#E5E5E5">more grammars are learnable under these</font>

189
00:06:02,220 --> 00:06:05,700
constraints learning with an Oracle

190
00:06:04,290 --> 00:06:07,620
Learning with a teacher and then

191
00:06:05,700 --> 00:06:09,030
compressed simple examples there's this

192
00:06:07,620 --> 00:06:10,380
corpus of research and<font color="#E5E5E5"> I don't wanna get</font>

193
00:06:09,030 --> 00:06:11,909
into the details like I said<font color="#E5E5E5"> because I</font>

194
00:06:10,380 --> 00:06:14,340
will bore you all to death on the second

195
00:06:11,910 --> 00:06:16,200
talk in the morning but<font color="#CCCCCC"> every one of</font>

196
00:06:14,340 --> 00:06:17,489
<font color="#CCCCCC">these models has different results and I</font>

197
00:06:16,200 --> 00:06:20,250
think<font color="#E5E5E5"> that every one of these models</font>

198
00:06:17,490 --> 00:06:22,500
maps to a small<font color="#E5E5E5"> segment of what we</font>

199
00:06:20,250 --> 00:06:23,760
actually do every day so there's a slide

200
00:06:22,500 --> 00:06:27,419
actually at the end but just keep<font color="#E5E5E5"> them</font>

201
00:06:23,760 --> 00:06:29,640
in mind as<font color="#CCCCCC"> we go</font><font color="#E5E5E5"> on so the models of</font>

202
00:06:27,419 --> 00:06:31,469
learning again the model is pretty

203
00:06:29,640 --> 00:06:33,210
simple a learner in this case we call

204
00:06:31,470 --> 00:06:35,160
that script day take some data d and

205
00:06:33,210 --> 00:06:37,140
outputs a possible generating grammar G

206
00:06:35,160 --> 00:06:39,790
now whether<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> verify that</font><font color="#E5E5E5"> grammar</font>

207
00:06:37,140 --> 00:06:42,039
that's also<font color="#CCCCCC"> up for debate</font><font color="#E5E5E5"> sometimes</font>

208
00:06:39,790 --> 00:06:43,390
and you have these specific types and

209
00:06:42,040 --> 00:06:44,680
you'll hear these terms thrown around

210
00:06:43,390 --> 00:06:46,390
learning in the limit which is gold

211
00:06:44,680 --> 00:06:48,610
style learning kind of kicked off this

212
00:06:46,390 --> 00:06:50,320
field of research the learners presented

213
00:06:48,610 --> 00:06:52,000
presented sequentially from the entire

214
00:06:50,320 --> 00:06:54,159
<font color="#E5E5E5">grammar and then each iteration at</font>

215
00:06:52,000 --> 00:06:55,900
guesses so<font color="#CCCCCC"> eventually converges on one</font>

216
00:06:54,160 --> 00:06:58,150
right and says I'm never going<font color="#E5E5E5"> to change</font>

217
00:06:55,900 --> 00:07:01,359
my guess I think I know the grammar but

218
00:06:58,150 --> 00:07:02,979
even asking that learner to stop and say

219
00:07:01,360 --> 00:07:04,990
yes I'm never going<font color="#E5E5E5"> to change is</font>

220
00:07:02,980 --> 00:07:07,030
something that changes the complexity

221
00:07:04,990 --> 00:07:09,580
class again I won't<font color="#CCCCCC"> get into</font><font color="#E5E5E5"> the</font>

222
00:07:07,030 --> 00:07:11,289
specifics but the problem itself gets

223
00:07:09,580 --> 00:07:12,490
very<font color="#E5E5E5"> intractable very quickly and the</font>

224
00:07:11,290 --> 00:07:14,230
reason to talk about that and<font color="#E5E5E5"> keep</font>

225
00:07:12,490 --> 00:07:16,330
<font color="#E5E5E5">saying it over and over is because we</font>

226
00:07:14,230 --> 00:07:17,590
end up getting simpler and simpler and

227
00:07:16,330 --> 00:07:19,060
what we're actually trying to<font color="#E5E5E5"> learn on</font>

228
00:07:17,590 --> 00:07:20,349
purpose and I think<font color="#E5E5E5"> it actually maps</font>

229
00:07:19,060 --> 00:07:23,410
pretty well to<font color="#E5E5E5"> what we're trying to do</font>

230
00:07:20,350 --> 00:07:25,990
in the real world down here probably

231
00:07:23,410 --> 00:07:27,940
approximately correct given access to

232
00:07:25,990 --> 00:07:30,370
examples you basically output a guess

233
00:07:27,940 --> 00:07:32,020
with a certain accuracy bound and you

234
00:07:30,370 --> 00:07:33,490
can tweak these bounds to decide how

235
00:07:32,020 --> 00:07:35,620
much data<font color="#E5E5E5"> you need and how sure you want</font>

236
00:07:33,490 --> 00:07:37,210
to be about<font color="#E5E5E5"> your answer this tends to be</font>

237
00:07:35,620 --> 00:07:39,220
where most people want to play these

238
00:07:37,210 --> 00:07:40,930
days<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> think it's probably</font><font color="#E5E5E5"> the most</font>

239
00:07:39,220 --> 00:07:43,450
interesting unfortunately the results in

240
00:07:40,930 --> 00:07:47,440
terms of learning don't get appreciably

241
00:07:43,450 --> 00:07:48,909
better I drew this little diagram for

242
00:07:47,440 --> 00:07:50,770
somebody and I wanted<font color="#E5E5E5"> to include it here</font>

243
00:07:48,910 --> 00:07:52,150
<font color="#E5E5E5">because after you hear all that and your</font>

244
00:07:50,770 --> 00:07:54,490
<font color="#E5E5E5">brains kind of spinning and it sounds</font>

245
00:07:52,150 --> 00:07:56,320
horrible<font color="#E5E5E5"> really the end of the day the</font>

246
00:07:54,490 --> 00:07:58,390
only thing that happens is examples come

247
00:07:56,320 --> 00:08:01,180
in the learner looks at them and outputs

248
00:07:58,390 --> 00:08:03,580
a hypothesis eventually at this dotted

249
00:08:01,180 --> 00:08:07,360
line they stop guessing they say i'm

250
00:08:03,580 --> 00:08:09,370
done i've fixed myself on a candidate

251
00:08:07,360 --> 00:08:11,290
grammar and<font color="#E5E5E5"> i'm going</font><font color="#CCCCCC"> to stay there so</font>

252
00:08:09,370 --> 00:08:12,880
don't<font color="#CCCCCC"> get to convey don't go let's like</font>

253
00:08:11,290 --> 00:08:14,140
<font color="#E5E5E5">go too far down the rabbit hole and</font><font color="#CCCCCC"> i'm</font>

254
00:08:12,880 --> 00:08:15,430
sorry about<font color="#CCCCCC"> the subscripts for some of</font>

255
00:08:14,140 --> 00:08:21,300
the examples on<font color="#E5E5E5"> the left hand side those</font>

256
00:08:15,430 --> 00:08:23,410
can go<font color="#E5E5E5"> off to infinity one of the few</font>

257
00:08:21,300 --> 00:08:26,020
constructs that actually<font color="#CCCCCC"> is shown to be</font>

258
00:08:23,410 --> 00:08:27,640
learnable by<font color="#CCCCCC"> dana Anglin was the pattern</font>

259
00:08:26,020 --> 00:08:29,140
languages for those of<font color="#E5E5E5"> you who have</font>

260
00:08:27,640 --> 00:08:30,610
never heard of them and<font color="#CCCCCC"> i don't expect</font>

261
00:08:29,140 --> 00:08:32,679
<font color="#E5E5E5">anybody to have heard of them</font><font color="#CCCCCC"> they're</font>

262
00:08:30,610 --> 00:08:34,300
regular expressions heavily restricted

263
00:08:32,679 --> 00:08:36,189
regular expressions is the best way to

264
00:08:34,299 --> 00:08:40,510
<font color="#E5E5E5">think about them you have some constants</font>

265
00:08:36,190 --> 00:08:42,130
that can turn<font color="#CCCCCC"> into strings we have</font>

266
00:08:40,510 --> 00:08:43,689
variables and then patterns are

267
00:08:42,130 --> 00:08:46,240
comprised of stuffing those variables

268
00:08:43,690 --> 00:08:48,040
into strings you map out a substitution

269
00:08:46,240 --> 00:08:49,630
and<font color="#E5E5E5"> I'm just showing some of the</font>

270
00:08:48,040 --> 00:08:51,160
notation pulled directly from the paper

271
00:08:49,630 --> 00:08:52,529
again<font color="#E5E5E5"> it's kind of a teaser this is</font>

272
00:08:51,160 --> 00:08:55,529
pretty standard notation

273
00:08:52,529 --> 00:08:57,360
the key here<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that empty substitutions</font>

274
00:08:55,529 --> 00:08:58,499
are not allowed<font color="#E5E5E5"> remember I said at the</font>

275
00:08:57,360 --> 00:08:59,850
<font color="#E5E5E5">beginning you change one little thing</font>

276
00:08:58,499 --> 00:09:01,800
and all of a sudden<font color="#CCCCCC"> the results fall</font>

277
00:08:59,850 --> 00:09:03,600
apart if you include empty substitutions

278
00:09:01,800 --> 00:09:04,709
it gets even harder then the patterns

279
00:09:03,600 --> 00:09:07,350
that<font color="#E5E5E5"> are actually generating the</font>

280
00:09:04,709 --> 00:09:08,399
language changed completely and you end

281
00:09:07,350 --> 00:09:10,949
up<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> completely different</font>

282
00:09:08,399 --> 00:09:11,699
learnability result so regular patterns

283
00:09:10,949 --> 00:09:13,620
are probably the ones that<font color="#E5E5E5"> were most</font>

284
00:09:11,699 --> 00:09:15,508
interested in because they're<font color="#E5E5E5"> the most</font>

285
00:09:13,620 --> 00:09:18,660
likely to be learnable and that's where

286
00:09:15,509 --> 00:09:21,269
a variable appears at just once so you

287
00:09:18,660 --> 00:09:25,139
can have<font color="#E5E5E5"> x1 x2 x3 but not x1 x1 very</font>

288
00:09:21,269 --> 00:09:27,089
<font color="#E5E5E5">simply there's somewhat natural their</font>

289
00:09:25,139 --> 00:09:30,149
show that they're learnable this<font color="#CCCCCC"> land we</font>

290
00:09:27,089 --> 00:09:32,069
hangin algorithm is<font color="#CCCCCC"> twenty lines of</font>

291
00:09:30,149 --> 00:09:34,439
Python if you want to write it<font color="#CCCCCC"> and learn</font>

292
00:09:32,069 --> 00:09:36,029
yourself pattern language go for it in

293
00:09:34,439 --> 00:09:37,889
general the bad news is<font color="#E5E5E5"> that they're</font>

294
00:09:36,029 --> 00:09:39,959
<font color="#E5E5E5">np-complete even to determine membership</font>

295
00:09:37,889 --> 00:09:41,759
so if<font color="#E5E5E5"> I give you</font><font color="#CCCCCC"> a pattern and</font><font color="#E5E5E5"> I give</font>

296
00:09:39,959 --> 00:09:43,290
you a string it's actually np-complete

297
00:09:41,759 --> 00:09:44,579
in most examples let's be honest the

298
00:09:43,290 --> 00:09:46,680
string isn't that long so it doesn't

299
00:09:44,579 --> 00:09:48,508
matter<font color="#E5E5E5"> it's still fairly tractable they</font>

300
00:09:46,680 --> 00:09:50,579
do not map the<font color="#E5E5E5"> chomsky they're actually</font>

301
00:09:48,509 --> 00:09:52,439
orthogonal so you can't look at one a

302
00:09:50,579 --> 00:09:53,489
pattern and say beyond the regular

303
00:09:52,439 --> 00:09:55,079
patterns which were pretty heavily

304
00:09:53,490 --> 00:09:57,990
restricted<font color="#CCCCCC"> that they fall into one of</font>

305
00:09:55,079 --> 00:09:59,779
<font color="#E5E5E5">the Chomsky compu-date hierarchy</font><font color="#CCCCCC"> that a</font>

306
00:09:57,990 --> 00:10:01,559
class and hierarchy excuse me

307
00:09:59,779 --> 00:10:04,410
relationships are<font color="#CCCCCC"> very hard to determine</font>

308
00:10:01,559 --> 00:10:06,000
as well so not closed under Union lots

309
00:10:04,410 --> 00:10:07,500
of academic subclasses and pack

310
00:10:06,000 --> 00:10:09,120
learnability is hard they sound awesome

311
00:10:07,500 --> 00:10:12,420
right the only one we've gotten to

312
00:10:09,120 --> 00:10:14,160
really work<font color="#E5E5E5"> so not</font><font color="#CCCCCC"> exactly all that</font>

313
00:10:12,420 --> 00:10:15,959
encouraging but<font color="#E5E5E5"> like I said they're</font>

314
00:10:14,160 --> 00:10:17,219
they're very intuitive and when you

315
00:10:15,959 --> 00:10:19,888
<font color="#E5E5E5">throw lots of data at them they make</font>

316
00:10:17,220 --> 00:10:21,899
<font color="#E5E5E5">sense relatively quickly the reason even</font>

317
00:10:19,889 --> 00:10:23,490
mentioned stuff like not closed under

318
00:10:21,899 --> 00:10:24,750
<font color="#CCCCCC">Union is because really when you start</font>

319
00:10:23,490 --> 00:10:26,550
implementing these things and<font color="#E5E5E5"> you try to</font>

320
00:10:24,750 --> 00:10:28,740
<font color="#E5E5E5">learn grammars in the real world you end</font>

321
00:10:26,550 --> 00:10:30,059
up kind of reducing your state space and

322
00:10:28,740 --> 00:10:31,410
reducing your space and reducing your

323
00:10:30,059 --> 00:10:32,309
space until<font color="#E5E5E5"> you get a problem small</font>

324
00:10:31,410 --> 00:10:34,889
enough that you think you can actually

325
00:10:32,309 --> 00:10:36,660
<font color="#E5E5E5">do something with it so we'll talk about</font>

326
00:10:34,889 --> 00:10:40,649
unions in a little bit but that's<font color="#E5E5E5"> where</font>

327
00:10:36,660 --> 00:10:42,300
this ends up going my favorite again are

328
00:10:40,649 --> 00:10:44,550
these elementary formal systems that

329
00:10:42,300 --> 00:10:47,189
came out of<font color="#E5E5E5"> millions paper back in the</font>

330
00:10:44,550 --> 00:10:50,609
50s talking about recursive theory that

331
00:10:47,189 --> 00:10:53,569
turned into<font color="#E5E5E5"> a universal formalism for</font>

332
00:10:50,610 --> 00:10:56,249
grammar inference and writing down and

333
00:10:53,569 --> 00:11:00,029
accepting grammars and basically do we

334
00:10:56,249 --> 00:11:01,920
have<font color="#CCCCCC"> any people who write prologue one I</font>

335
00:11:00,029 --> 00:11:03,720
knew if I asked it in<font color="#E5E5E5"> this room I'd get</font>

336
00:11:01,920 --> 00:11:05,279
a yes I've asked it a thousand times and

337
00:11:03,720 --> 00:11:07,110
<font color="#E5E5E5">I don't think of anybody's ever really</font>

338
00:11:05,279 --> 00:11:09,579
said yes

339
00:11:07,110 --> 00:11:11,470
right and maps if you know it it<font color="#E5E5E5"> maps</font>

340
00:11:09,579 --> 00:11:13,300
beautifully it makes a lot of sense the

341
00:11:11,470 --> 00:11:15,100
grammar is and I've heard<font color="#E5E5E5"> this over and</font>

342
00:11:13,300 --> 00:11:16,719
over the grammar is the language right

343
00:11:15,100 --> 00:11:18,970
it's<font color="#E5E5E5"> easy to write them unfortunately</font>

344
00:11:16,720 --> 00:11:22,600
<font color="#CCCCCC">everyone no offense intended hates</font>

345
00:11:18,970 --> 00:11:24,790
prologue so it turns out that trying to

346
00:11:22,600 --> 00:11:26,410
<font color="#E5E5E5">sell this to people is a bit much but</font>

347
00:11:24,790 --> 00:11:27,849
the good news is that even the learning

348
00:11:26,410 --> 00:11:30,550
algorithms while they're terrible in

349
00:11:27,850 --> 00:11:32,110
terms of computational bounds are fairly

350
00:11:30,550 --> 00:11:34,300
natural because to determine<font color="#CCCCCC"> whether or</font>

351
00:11:32,110 --> 00:11:35,949
<font color="#E5E5E5">not you have a member of these grammars</font>

352
00:11:34,300 --> 00:11:37,719
you're actually<font color="#E5E5E5"> kind of walking</font><font color="#CCCCCC"> the tree</font>

353
00:11:35,949 --> 00:11:40,120
you're doing assertions and plugging in

354
00:11:37,720 --> 00:11:42,370
substitutions so one of<font color="#E5E5E5"> my favorites and</font>

355
00:11:40,120 --> 00:11:43,899
this is why all you have to do is put

356
00:11:42,370 --> 00:11:45,399
very natural restrictions on the

357
00:11:43,899 --> 00:11:47,620
elementary formal system and they map

358
00:11:45,399 --> 00:11:49,120
very nicely to the Chomsky class so

359
00:11:47,620 --> 00:11:50,680
variable bounded are<font color="#E5E5E5"> recursively</font>

360
00:11:49,120 --> 00:11:52,269
personally innumerable everything you

361
00:11:50,680 --> 00:11:54,819
can have right length bounded regular

362
00:11:52,269 --> 00:11:56,949
and excuse the regular are actually

363
00:11:54,819 --> 00:11:59,139
context-free so our regular EFS maps to

364
00:11:56,949 --> 00:12:00,790
context-free and then right left linear

365
00:11:59,139 --> 00:12:02,139
maps to regular like I<font color="#E5E5E5"> said there's a</font>

366
00:12:00,790 --> 00:12:05,560
reason that<font color="#CCCCCC"> it took me</font><font color="#E5E5E5"> forever to do the</font>

367
00:12:02,139 --> 00:12:06,880
<font color="#E5E5E5">let search because that alone I have</font>

368
00:12:05,560 --> 00:12:08,380
<font color="#E5E5E5">about three pages in my notebook with</font><font color="#CCCCCC"> a</font>

369
00:12:06,880 --> 00:12:11,319
big box written around it that says

370
00:12:08,380 --> 00:12:12,459
regular is not regular for EFS because

371
00:12:11,319 --> 00:12:14,709
when you start<font color="#CCCCCC"> doing it over and over</font>

372
00:12:12,459 --> 00:12:18,219
you get pretty confused but<font color="#CCCCCC"> again these</font>

373
00:12:14,709 --> 00:12:20,079
are fairly natural constraints on

374
00:12:18,220 --> 00:12:21,939
building those elementary formal systems

375
00:12:20,079 --> 00:12:23,439
if you consider elementary formal

376
00:12:21,939 --> 00:12:25,959
systems natural in any way shape<font color="#CCCCCC"> or form</font>

377
00:12:23,439 --> 00:12:28,000
then they map pretty well to the Chomsky

378
00:12:25,959 --> 00:12:29,500
hierarchy and if what's<font color="#E5E5E5"> even nicer about</font>

379
00:12:28,000 --> 00:12:31,000
<font color="#E5E5E5">that is that pattern languages in and of</font>

380
00:12:29,500 --> 00:12:34,870
themselves are actually a single class

381
00:12:31,000 --> 00:12:36,939
of<font color="#E5E5E5"> bffs so it's just an assertion so</font>

382
00:12:34,870 --> 00:12:38,829
it's it's effectively in<font color="#E5E5E5"> EFS but it</font>

383
00:12:36,939 --> 00:12:42,370
doesn't<font color="#E5E5E5"> really fall into the the overall</font>

384
00:12:38,829 --> 00:12:44,050
hierarchy I'm sorry that framework when

385
00:12:42,370 --> 00:12:46,029
you put a few restrictions on an

386
00:12:44,050 --> 00:12:48,008
elementary formal system and this<font color="#E5E5E5"> is</font>

387
00:12:46,029 --> 00:12:49,750
called a hereditary<font color="#CCCCCC"> Clauson but it the</font>

388
00:12:48,009 --> 00:12:51,670
notations kind of us but really all it

389
00:12:49,750 --> 00:12:53,620
says is that any substring contained in

390
00:12:51,670 --> 00:12:55,479
the right hand side which<font color="#CCCCCC"> is kind of the</font>

391
00:12:53,620 --> 00:12:57,009
asserting part it's an if/then clause on

392
00:12:55,480 --> 00:12:58,480
the<font color="#E5E5E5"> right hand side you're essentially</font>

393
00:12:57,009 --> 00:13:00,670
saying if you can prove those those

394
00:12:58,480 --> 00:13:02,589
individual components than<font color="#E5E5E5"> the left hand</font>

395
00:13:00,670 --> 00:13:04,029
side is true on<font color="#E5E5E5"> the right</font><font color="#CCCCCC"> hand side any</font>

396
00:13:02,589 --> 00:13:05,649
substring there has to be a substring of

397
00:13:04,029 --> 00:13:06,759
the left again very natural constraint

398
00:13:05,649 --> 00:13:08,589
then you get some pretty<font color="#E5E5E5"> good</font>

399
00:13:06,759 --> 00:13:10,420
learnability results and<font color="#CCCCCC"> I pulled this</font>

400
00:13:08,589 --> 00:13:13,240
chart right out of the paper<font color="#E5E5E5"> and really</font>

401
00:13:10,420 --> 00:13:14,349
and I didn't actually label the the

402
00:13:13,240 --> 00:13:15,910
columns here because it's<font color="#CCCCCC"> easier to</font>

403
00:13:14,350 --> 00:13:18,699
explain them but all we're saying here

404
00:13:15,910 --> 00:13:19,270
is that infinite is not learnable and

405
00:13:18,699 --> 00:13:21,640
find

406
00:13:19,270 --> 00:13:23,500
is that's really<font color="#CCCCCC"> all that those columns</font>

407
00:13:21,640 --> 00:13:25,030
being which you'd<font color="#CCCCCC"> expect right I</font><font color="#E5E5E5"> mean if</font>

408
00:13:23,500 --> 00:13:27,040
you're given enough data out of<font color="#E5E5E5"> a finite</font>

409
00:13:25,030 --> 00:13:28,540
clatter out of a finite grammar you

410
00:13:27,040 --> 00:13:31,810
should be able to pull<font color="#CCCCCC"> it out using</font>

411
00:13:28,540 --> 00:13:33,520
those those components these this

412
00:13:31,810 --> 00:13:34,510
notation basically indicates that you

413
00:13:33,520 --> 00:13:36,579
have<font color="#E5E5E5"> to bound the number of clauses</font>

414
00:13:34,510 --> 00:13:38,800
again it's that asymptotic argument and

415
00:13:36,580 --> 00:13:40,120
then variable occurrences in the head of

416
00:13:38,800 --> 00:13:41,949
each<font color="#CCCCCC"> Clause so the number</font><font color="#E5E5E5"> of variables</font>

417
00:13:40,120 --> 00:13:43,120
matters as<font color="#E5E5E5"> well that's the real</font>

418
00:13:41,950 --> 00:13:45,460
constraint as far as I'm concerned

419
00:13:43,120 --> 00:13:46,600
obviously this one's pretty pretty

420
00:13:45,460 --> 00:13:48,040
notional right i mean if you have

421
00:13:46,600 --> 00:13:52,060
infinite clauses you would expect not to

422
00:13:48,040 --> 00:13:53,199
learn that before the universe cools so

423
00:13:52,060 --> 00:13:55,300
if<font color="#E5E5E5"> we</font><font color="#CCCCCC"> look at</font><font color="#E5E5E5"> a bunch of different</font>

424
00:13:53,200 --> 00:13:56,560
<font color="#CCCCCC">problems this way and this is the the</font>

425
00:13:55,300 --> 00:13:59,260
slide when we're presenting to

426
00:13:56,560 --> 00:14:01,060
management and they say<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> why why do</font>

427
00:13:59,260 --> 00:14:02,680
we care because<font color="#CCCCCC"> they don't understand</font>

428
00:14:01,060 --> 00:14:03,969
any of this stuff and you know you ask

429
00:14:02,680 --> 00:14:06,790
<font color="#E5E5E5">them the difference</font><font color="#CCCCCC"> between a parser and</font>

430
00:14:03,970 --> 00:14:07,930
<font color="#E5E5E5">executing code and there I spin I think</font>

431
00:14:06,790 --> 00:14:10,839
a lot<font color="#CCCCCC"> of these problems that we look at</font>

432
00:14:07,930 --> 00:14:12,609
are actually best described as some of

433
00:14:10,840 --> 00:14:13,810
those differences in grammars so

434
00:14:12,610 --> 00:14:15,700
supervised learning problems we have

435
00:14:13,810 --> 00:14:17,109
these anomaly detection problems fuzzing

436
00:14:15,700 --> 00:14:18,880
which we'll<font color="#CCCCCC"> talk a little bit about</font>

437
00:14:17,110 --> 00:14:21,280
later and of course done supervised

438
00:14:18,880 --> 00:14:22,930
clustering can we look at it through<font color="#CCCCCC"> a</font>

439
00:14:21,280 --> 00:14:24,189
framework of grammar inference right

440
00:14:22,930 --> 00:14:26,140
some of<font color="#E5E5E5"> these problems are so hard that</font>

441
00:14:24,190 --> 00:14:27,640
you can't ever hope to do them so are

442
00:14:26,140 --> 00:14:28,750
these problems actually manifestations

443
00:14:27,640 --> 00:14:30,520
of that where we could say just stop

444
00:14:28,750 --> 00:14:31,960
just stop looking for that science of

445
00:14:30,520 --> 00:14:34,090
security answer that we keep throwing

446
00:14:31,960 --> 00:14:38,140
<font color="#CCCCCC">money at that you're actually trying to</font>

447
00:14:34,090 --> 00:14:39,700
<font color="#E5E5E5">solve a</font><font color="#CCCCCC"> problem that's unsolvable what</font>

448
00:14:38,140 --> 00:14:42,400
we did find is obviously that<font color="#E5E5E5"> simple is</font>

449
00:14:39,700 --> 00:14:44,530
better simple is inferable so our

450
00:14:42,400 --> 00:14:46,540
hypothesis is that most data in the wild

451
00:14:44,530 --> 00:14:49,480
comes from simple grammars and this<font color="#CCCCCC"> b is</font>

452
00:14:46,540 --> 00:14:51,760
because our ARL especially we have a

453
00:14:49,480 --> 00:14:54,220
mission as a<font color="#E5E5E5"> I shouldn't say we I'm a</font>

454
00:14:51,760 --> 00:14:56,050
contractor ARL has a mission to do

455
00:14:54,220 --> 00:14:57,310
computer network defense so they are

456
00:14:56,050 --> 00:14:59,740
actually paid by other companies<font color="#E5E5E5"> in</font>

457
00:14:57,310 --> 00:15:01,540
other pieces<font color="#E5E5E5"> of the government to watch</font>

458
00:14:59,740 --> 00:15:04,270
networks which means staring at snore

459
00:15:01,540 --> 00:15:05,860
logs for like a better<font color="#E5E5E5"> description but</font>

460
00:15:04,270 --> 00:15:07,030
<font color="#E5E5E5">we get access to lots of data and when</font>

461
00:15:05,860 --> 00:15:09,190
you look<font color="#E5E5E5"> at</font><font color="#CCCCCC"> data in real-world systems</font>

462
00:15:07,030 --> 00:15:10,780
especially on the military side a lot<font color="#E5E5E5"> of</font>

463
00:15:09,190 --> 00:15:13,120
it is fairly<font color="#E5E5E5"> simple there's lots of</font>

464
00:15:10,780 --> 00:15:14,470
stuff out<font color="#CCCCCC"> there that that has complexity</font>

465
00:15:13,120 --> 00:15:16,120
but<font color="#E5E5E5"> when you look at what you're really</font>

466
00:15:14,470 --> 00:15:18,040
trying to do you can actually peel out

467
00:15:16,120 --> 00:15:19,840
pieces that make sense and are those

468
00:15:18,040 --> 00:15:22,420
little examples<font color="#E5E5E5"> I talked about where you</font>

469
00:15:19,840 --> 00:15:23,560
can actually learn something so even

470
00:15:22,420 --> 00:15:24,849
though a protocol and this is what

471
00:15:23,560 --> 00:15:25,869
Sergei said this morning says if you

472
00:15:24,850 --> 00:15:27,880
have protocols that are everything to

473
00:15:25,870 --> 00:15:29,620
everyone that is bad that is true over

474
00:15:27,880 --> 00:15:31,300
they all start that way right so the

475
00:15:29,620 --> 00:15:32,620
army loves to install the software

476
00:15:31,300 --> 00:15:33,910
systems that

477
00:15:32,620 --> 00:15:36,340
they buy or they go get that are open

478
00:15:33,910 --> 00:15:38,230
source that are all encompassing and do

479
00:15:36,340 --> 00:15:39,670
everything from make coffee to polish

480
00:15:38,230 --> 00:15:41,320
your car you know but really they use

481
00:15:39,670 --> 00:15:43,540
this tiny<font color="#E5E5E5"> little piece if we get that</font>

482
00:15:41,320 --> 00:15:44,530
tiny little<font color="#E5E5E5"> piece out that's great so</font>

483
00:15:43,540 --> 00:15:46,420
that's what we're trying to do initially

484
00:15:44,530 --> 00:15:48,069
is is sometimes you know<font color="#E5E5E5"> even just</font>

485
00:15:46,420 --> 00:15:50,589
classifying a message is good place to

486
00:15:48,070 --> 00:15:52,240
start and our most messages as complex

487
00:15:50,590 --> 00:15:53,500
is the overall grammar empirically I

488
00:15:52,240 --> 00:15:56,020
don't have the data to say for sure but

489
00:15:53,500 --> 00:15:58,060
no I mean really in most cases they're

490
00:15:56,020 --> 00:16:00,640
very simple subsets of the<font color="#E5E5E5"> overall huge</font>

491
00:15:58,060 --> 00:16:01,660
grammar and then what we're trying to do

492
00:16:00,640 --> 00:16:02,980
and<font color="#E5E5E5"> this will talk a little bit more</font>

493
00:16:01,660 --> 00:16:05,199
<font color="#CCCCCC">about in future work as well</font><font color="#E5E5E5"> as use the</font>

494
00:16:02,980 --> 00:16:08,080
<font color="#E5E5E5">program itself as a guide so the program</font>

495
00:16:05,200 --> 00:16:09,940
is an asset in a sense a recognizer that

496
00:16:08,080 --> 00:16:11,470
can help you teach the grammar or learn

497
00:16:09,940 --> 00:16:13,360
the<font color="#E5E5E5"> grammar rather it acts as an Oracle</font>

498
00:16:11,470 --> 00:16:15,400
so we have all this data and<font color="#E5E5E5"> we have</font>

499
00:16:13,360 --> 00:16:16,840
what we think are pretty<font color="#E5E5E5"> good sensors</font>

500
00:16:15,400 --> 00:16:18,760
for some of this stuff to keep the bad

501
00:16:16,840 --> 00:16:21,250
guys out so we have good<font color="#E5E5E5"> examples of</font>

502
00:16:18,760 --> 00:16:23,140
what we really<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> to accept can we</font>

503
00:16:21,250 --> 00:16:24,850
segment these big problems into smaller

504
00:16:23,140 --> 00:16:29,470
problems and then start limiting what

505
00:16:24,850 --> 00:16:31,420
we're actually accepting the very simple

506
00:16:29,470 --> 00:16:32,890
like<font color="#CCCCCC"> I said pattern language example you</font>

507
00:16:31,420 --> 00:16:34,569
start here because if<font color="#E5E5E5"> this is totally</font>

508
00:16:32,890 --> 00:16:36,100
<font color="#CCCCCC">not itude</font><font color="#E5E5E5"> and it doesn't work stop and</font>

509
00:16:34,570 --> 00:16:38,650
go work on something else before they

510
00:16:36,100 --> 00:16:41,200
take away your research money we have

511
00:16:38,650 --> 00:16:43,600
huge logs of posts and get requests from

512
00:16:41,200 --> 00:16:45,820
army systems and their notionally

513
00:16:43,600 --> 00:16:47,800
<font color="#E5E5E5">anonymized all</font><font color="#CCCCCC"> I did was just map</font>

514
00:16:45,820 --> 00:16:49,270
characters to characters to preserve the

515
00:16:47,800 --> 00:16:51,719
structure of the URL<font color="#E5E5E5"> and get it through</font>

516
00:16:49,270 --> 00:16:54,100
my form one public release process so

517
00:16:51,720 --> 00:16:57,640
<font color="#E5E5E5">you can kind of see the structure here</font>

518
00:16:54,100 --> 00:16:59,380
we break<font color="#CCCCCC"> down by endpoint</font><font color="#E5E5E5"> obviously most</font>

519
00:16:57,640 --> 00:17:01,270
of the good requests we get are

520
00:16:59,380 --> 00:17:03,490
extraordinarily structured and we would

521
00:17:01,270 --> 00:17:04,780
expect<font color="#E5E5E5"> that so when you plot the nice</font>

522
00:17:03,490 --> 00:17:07,329
part is when you plop in something that

523
00:17:04,780 --> 00:17:08,859
<font color="#E5E5E5">someone's sniffing the learner explodes</font>

524
00:17:07,329 --> 00:17:11,500
because<font color="#E5E5E5"> now it can't find a very good</font>

525
00:17:08,859 --> 00:17:13,419
pattern not a huge not a<font color="#CCCCCC"> very powerful</font>

526
00:17:11,500 --> 00:17:15,760
example but powerful enough to keep us

527
00:17:13,420 --> 00:17:18,340
interested the<font color="#CCCCCC"> lang we had an algorithm</font>

528
00:17:15,760 --> 00:17:20,440
is very simple<font color="#E5E5E5"> to code runs very fast</font>

529
00:17:18,339 --> 00:17:23,199
and like I said it's very

530
00:17:20,440 --> 00:17:24,940
straightforward to plug in the next

531
00:17:23,200 --> 00:17:26,560
thing that we went<font color="#E5E5E5"> to and I'm trying to</font>

532
00:17:24,940 --> 00:17:29,290
<font color="#E5E5E5">go quickly because I know time as a</font>

533
00:17:26,560 --> 00:17:30,850
factor is fuzzing so we have a bit of<font color="#E5E5E5"> a</font>

534
00:17:29,290 --> 00:17:32,139
hypothesis I said we want to link it<font color="#CCCCCC"> to</font>

535
00:17:30,850 --> 00:17:35,020
the code we're fuzzing is actually

536
00:17:32,140 --> 00:17:37,330
grammatical inference and<font color="#E5E5E5"> Michael</font>

537
00:17:35,020 --> 00:17:39,070
<font color="#CCCCCC">zalewski AFL fuzzer which I don't know</font>

538
00:17:37,330 --> 00:17:41,080
<font color="#CCCCCC">if</font><font color="#E5E5E5"> you've ever played with great piece</font>

539
00:17:39,070 --> 00:17:42,340
<font color="#CCCCCC">of code just</font><font color="#E5E5E5"> a blast just to turn on</font>

540
00:17:41,080 --> 00:17:44,039
that's<font color="#CCCCCC"> the best i love code you just</font>

541
00:17:42,340 --> 00:17:46,149
turn on you don't have to do

542
00:17:44,039 --> 00:17:47,889
so you can<font color="#CCCCCC"> just turn it on and it starts</font>

543
00:17:46,149 --> 00:17:49,570
organizing<font color="#E5E5E5"> going through test cases a</font>

544
00:17:47,889 --> 00:17:51,250
nice part about it is it grabs these

545
00:17:49,570 --> 00:17:52,389
test cases and start smashing them into

546
00:17:51,250 --> 00:17:53,769
little folders where it thinks they're

547
00:17:52,389 --> 00:17:56,168
interesting and building new test cases

548
00:17:53,769 --> 00:17:57,669
and so it's this tree where it's kind of

549
00:17:56,169 --> 00:18:00,159
inferring what the code is doing<font color="#CCCCCC"> during</font>

550
00:17:57,669 --> 00:18:01,809
<font color="#E5E5E5">trying to get maximum coverage but at</font>

551
00:18:00,159 --> 00:18:03,250
the same time he's got<font color="#E5E5E5"> a blog post</font><font color="#CCCCCC"> that</font>

552
00:18:01,809 --> 00:18:05,110
actually spurred me to think he was

553
00:18:03,250 --> 00:18:08,830
inferring the JPEG standard so he

554
00:18:05,110 --> 00:18:10,899
started out with a JPEG file that was

555
00:18:08,830 --> 00:18:12,340
just hello world in text and he fed it

556
00:18:10,899 --> 00:18:13,479
to<font color="#CCCCCC"> his fuzzy</font><font color="#E5E5E5"> and the fuzzer starts</font>

557
00:18:12,340 --> 00:18:14,980
tweaking and tweaking and tweaking and

558
00:18:13,480 --> 00:18:16,120
tweaking and moving down the tree<font color="#CCCCCC"> and</font>

559
00:18:14,980 --> 00:18:17,980
trying to cover the code and eventually

560
00:18:16,120 --> 00:18:20,199
comes up with a JPEG by mistake almost

561
00:18:17,980 --> 00:18:21,190
so to learning a grammar slowly it's

562
00:18:20,200 --> 00:18:22,539
learning a grammar it's not going<font color="#E5E5E5"> to</font>

563
00:18:21,190 --> 00:18:24,549
<font color="#E5E5E5">learn all</font><font color="#CCCCCC"> of the test cases but it's</font>

564
00:18:22,539 --> 00:18:26,408
<font color="#E5E5E5">exactly what</font><font color="#CCCCCC"> we want to do and again</font>

565
00:18:24,549 --> 00:18:27,850
this is jpg because<font color="#E5E5E5"> I can't show you any</font>

566
00:18:26,409 --> 00:18:29,500
of<font color="#E5E5E5"> the other stuff we're doing not</font>

567
00:18:27,850 --> 00:18:31,360
because it's super secret or important

568
00:18:29,500 --> 00:18:32,710
but because form<font color="#E5E5E5"> one release we would</font>

569
00:18:31,360 --> 00:18:35,110
have been with taken seven months to get

570
00:18:32,710 --> 00:18:37,149
some of<font color="#CCCCCC"> the stuff through it so we did</font>

571
00:18:35,110 --> 00:18:38,439
<font color="#E5E5E5">the</font><font color="#CCCCCC"> JPEG thing and you can see where the</font>

572
00:18:37,149 --> 00:18:39,969
little bit tweaks end up with different

573
00:18:38,440 --> 00:18:41,950
pieces of code but they're all parts of

574
00:18:39,970 --> 00:18:43,480
the grammar so in most of our cases we

575
00:18:41,950 --> 00:18:44,980
have a giant web server that'll do all

576
00:18:43,480 --> 00:18:46,149
sorts of different interesting things if

577
00:18:44,980 --> 00:18:47,590
you want it to but we don't want it to

578
00:18:46,149 --> 00:18:49,149
do that we want<font color="#E5E5E5"> to do like one thing one</font>

579
00:18:47,590 --> 00:18:54,158
endpoint we want to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that works</font>

580
00:18:49,149 --> 00:18:56,918
right so with that in mind the future

581
00:18:54,159 --> 00:18:58,899
work we're where we're going now is

582
00:18:56,919 --> 00:19:00,669
basically exploiting all of this

583
00:18:58,899 --> 00:19:02,529
<font color="#E5E5E5">wonderful work for these folks that are</font>

584
00:19:00,669 --> 00:19:05,940
doing binary analysis static<font color="#E5E5E5"> analysis</font>

585
00:19:02,529 --> 00:19:08,860
pulling especially lifting code up into

586
00:19:05,940 --> 00:19:10,960
kind of a generic<font color="#E5E5E5"> language so that we</font>

587
00:19:08,860 --> 00:19:13,870
can either infer interesting grammars

588
00:19:10,960 --> 00:19:15,700
about that code or we can feed data in

589
00:19:13,870 --> 00:19:17,590
and determine what branches of that<font color="#E5E5E5"> code</font>

590
00:19:15,700 --> 00:19:19,480
we think are safe now remember<font color="#E5E5E5"> we're not</font>

591
00:19:17,590 --> 00:19:22,360
trying to solve all<font color="#E5E5E5"> the problems here we</font>

592
00:19:19,480 --> 00:19:23,799
just have<font color="#E5E5E5"> to explain how the DoD</font><font color="#CCCCCC"> and the</font>

593
00:19:22,360 --> 00:19:25,000
military intends to work first what you

594
00:19:23,799 --> 00:19:26,679
<font color="#E5E5E5">do is you decide you can do it better</font>

595
00:19:25,000 --> 00:19:28,389
than everybody<font color="#CCCCCC"> and you throw a bunch of</font>

596
00:19:26,679 --> 00:19:29,559
money<font color="#CCCCCC"> on it then you wait two years you</font>

597
00:19:28,389 --> 00:19:30,549
come<font color="#E5E5E5"> back and you realize no no we can't</font>

598
00:19:29,559 --> 00:19:32,500
do a better than everybody we got<font color="#E5E5E5"> to go</font>

599
00:19:30,549 --> 00:19:33,820
buy<font color="#E5E5E5"> something and then you pet you take</font>

600
00:19:32,500 --> 00:19:35,019
forty percent of the money you<font color="#CCCCCC"> spent</font><font color="#E5E5E5"> the</font>

601
00:19:33,820 --> 00:19:36,460
first time and you go pay somebody else

602
00:19:35,019 --> 00:19:38,019
to do it could also screws it up and by

603
00:19:36,460 --> 00:19:39,730
<font color="#E5E5E5">the end you end up with a little bit of</font>

604
00:19:38,019 --> 00:19:41,830
<font color="#CCCCCC">money to try and do which traded at the</font>

605
00:19:39,730 --> 00:19:44,740
<font color="#CCCCCC">beginning and then you start all over so</font>

606
00:19:41,830 --> 00:19:46,120
it's<font color="#E5E5E5"> like a five-year process so so when</font>

607
00:19:44,740 --> 00:19:47,500
you talk about<font color="#E5E5E5"> as interesting here this</font>

608
00:19:46,120 --> 00:19:49,178
morning you know maybe<font color="#E5E5E5"> we could</font><font color="#CCCCCC"> just</font>

609
00:19:47,500 --> 00:19:51,549
deploy new code faster they can find

610
00:19:49,179 --> 00:19:53,440
vulnerabilities i'm<font color="#E5E5E5"> working on a linux</font>

611
00:19:51,549 --> 00:19:55,120
box that i'm guessing hasn't had a pisco

612
00:19:53,440 --> 00:19:56,029
deployed on it since about two thousand

613
00:19:55,120 --> 00:19:57,408
eight that's

614
00:19:56,029 --> 00:19:58,849
organ for<font color="#E5E5E5"> the military it's just the way</font>

615
00:19:57,409 --> 00:20:01,580
it is you just can't do anything about

616
00:19:58,849 --> 00:20:03,439
it so we have to take<font color="#E5E5E5"> these old broken</font>

617
00:20:01,580 --> 00:20:05,359
potentially terrible pieces of code and

618
00:20:03,440 --> 00:20:07,070
harden them up a little bit and so the

619
00:20:05,359 --> 00:20:08,718
low-hanging fruit that's our mo

620
00:20:07,070 --> 00:20:10,158
right now just hardened what you can

621
00:20:08,719 --> 00:20:11,690
harden and this grammar inference stuff

622
00:20:10,159 --> 00:20:13,489
seems<font color="#E5E5E5"> to be working relatively well in</font>

623
00:20:11,690 --> 00:20:14,779
terms of hey this is what we should be

624
00:20:13,489 --> 00:20:16,429
accepting and there's some interesting

625
00:20:14,779 --> 00:20:18,469
results as well<font color="#E5E5E5"> that are pretty</font>

626
00:20:16,429 --> 00:20:20,659
preliminary so I won't get<font color="#E5E5E5"> into them</font>

627
00:20:18,469 --> 00:20:22,580
here but the simple stuff is definitely

628
00:20:20,659 --> 00:20:24,679
a good place to start we've seen some

629
00:20:22,580 --> 00:20:26,658
some ways to either normalize or to

630
00:20:24,679 --> 00:20:29,450
throw out classify traffic very quickly

631
00:20:26,659 --> 00:20:32,389
and the bottom<font color="#CCCCCC"> one of course EFS seems</font>

632
00:20:29,450 --> 00:20:33,710
intuitive I don't know<font color="#E5E5E5"> that it's all</font>

633
00:20:32,389 --> 00:20:35,570
that into it if I need more prologue

634
00:20:33,710 --> 00:20:39,049
programmers so<font color="#E5E5E5"> if you can spread</font><font color="#CCCCCC"> the</font>

635
00:20:35,570 --> 00:20:40,158
word that would be outstanding and the

636
00:20:39,049 --> 00:20:42,019
grand scheme of things like I said I

637
00:20:40,159 --> 00:20:44,299
think<font color="#CCCCCC"> it's nice because it maps</font><font color="#E5E5E5"> to the</font>

638
00:20:42,019 --> 00:20:46,039
Chomsky hierarchy accidentally you could

639
00:20:44,299 --> 00:20:47,658
give somebody a recipe and say do this

640
00:20:46,039 --> 00:20:49,190
don't do that<font color="#E5E5E5"> and you can at least</font>

641
00:20:47,659 --> 00:20:52,820
restrict what they can do in<font color="#CCCCCC"> terms of</font>

642
00:20:49,190 --> 00:20:54,229
parsers so with that I'll end I know

643
00:20:52,820 --> 00:20:55,668
there was<font color="#CCCCCC"> a whirlwind tour and I didn't</font>

644
00:20:54,229 --> 00:20:57,950
get into too much detail but trust me

645
00:20:55,669 --> 00:21:04,129
there's a tail gets ugly quickly<font color="#E5E5E5"> all</font>

646
00:20:57,950 --> 00:21:05,359
<font color="#E5E5E5">right let's</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> our speaker we're kind</font>

647
00:21:04,129 --> 00:21:11,478
of pressed for time but<font color="#E5E5E5"> I can take like</font>

648
00:21:05,359 --> 00:21:16,279
one question yes hey great dunk um I

649
00:21:11,479 --> 00:21:19,429
wonder if you started dynamic syntheses

650
00:21:16,279 --> 00:21:21,830
of invariants of<font color="#E5E5E5"> four programs there is</font>

651
00:21:19,429 --> 00:21:23,869
there is like a<font color="#CCCCCC"> feel of</font><font color="#E5E5E5"> research that's</font>

652
00:21:21,830 --> 00:21:27,678
very interesting because a lot of these

653
00:21:23,869 --> 00:21:29,599
invariants are hard to thin thighs but

654
00:21:27,679 --> 00:21:33,019
if you could somehow find heuristics to

655
00:21:29,599 --> 00:21:34,759
do that or I don't<font color="#CCCCCC"> know no no it's I</font>

656
00:21:33,019 --> 00:21:36,799
mean it's a good point and like I said

657
00:21:34,759 --> 00:21:39,349
from<font color="#E5E5E5"> our perspective you have to</font>

658
00:21:36,799 --> 00:21:40,969
remember<font color="#CCCCCC"> that it's not like</font><font color="#E5E5E5"> we re sit we</font>

659
00:21:39,349 --> 00:21:42,918
again being a RL a single product

660
00:21:40,969 --> 00:21:45,169
organization right so we need something

661
00:21:42,919 --> 00:21:47,479
that<font color="#E5E5E5"> is is applicable to</font><font color="#CCCCCC"> a heterogeneous</font>

662
00:21:45,169 --> 00:21:50,539
<font color="#E5E5E5">and when I say heterogeneous everything</font>

663
00:21:47,479 --> 00:21:52,129
from software-defined radios to you know

664
00:21:50,539 --> 00:21:53,719
web requests and we're choosing ones

665
00:21:52,129 --> 00:21:54,619
that are kind of simple right now so

666
00:21:53,719 --> 00:21:57,320
it's something<font color="#E5E5E5"> we're definitely</font>

667
00:21:54,619 --> 00:21:59,359
interested in it's mostly time like we

668
00:21:57,320 --> 00:22:00,830
need<font color="#CCCCCC"> to show quick wins to keep some</font>

669
00:21:59,359 --> 00:22:02,928
money flowing because otherwise they

670
00:22:00,830 --> 00:22:04,399
will redirect now you know the five-year

671
00:22:02,929 --> 00:22:07,549
cycle will be starting it all over again

672
00:22:04,399 --> 00:22:08,979
so yeah thanks for<font color="#CCCCCC"> the we'd</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to it's</font>

673
00:22:07,549 --> 00:22:10,690
<font color="#E5E5E5">just a matter of</font><font color="#CCCCCC"> time</font>

674
00:22:08,980 --> 00:22:12,160
and on that<font color="#CCCCCC"> note if anybody's interested</font>

675
00:22:10,690 --> 00:22:13,630
and wants<font color="#CCCCCC"> to work with ARL they are</font>

676
00:22:12,160 --> 00:22:15,340
<font color="#E5E5E5">dying to get people to work with it my</font>

677
00:22:13,630 --> 00:22:17,950
was specifically told to come recruit

678
00:22:15,340 --> 00:22:20,320
people so as a contractor I know how

679
00:22:17,950 --> 00:22:23,130
that works but let me know all right

680
00:22:20,320 --> 00:22:23,129
<font color="#E5E5E5">let's take our speaker again</font>

