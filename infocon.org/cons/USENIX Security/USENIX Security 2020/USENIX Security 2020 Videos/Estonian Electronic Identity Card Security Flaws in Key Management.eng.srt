1
00:00:08,880 --> 00:00:11,840
hello everyone

2
00:00:09,679 --> 00:00:13,679
arnis parchows university of tartu i

3
00:00:11,840 --> 00:00:15,679
will give you a brief overview of

4
00:00:13,679 --> 00:00:17,199
our research on the security flaws in

5
00:00:15,679 --> 00:00:19,840
the key management of the estonian

6
00:00:17,199 --> 00:00:23,039
electronic identity card

7
00:00:19,840 --> 00:00:25,680
so in 2002 estonia introduced the

8
00:00:23,039 --> 00:00:27,760
electronic identity card or id card

9
00:00:25,680 --> 00:00:30,080
the id card is a mandatory identity

10
00:00:27,760 --> 00:00:32,960
document and has a smart card chip

11
00:00:30,080 --> 00:00:34,160
that contains two asymmetric keys with

12
00:00:32,960 --> 00:00:35,760
the corresponding public key

13
00:00:34,160 --> 00:00:38,239
certificates

14
00:00:35,760 --> 00:00:39,519
one key is used for authentication and

15
00:00:38,239 --> 00:00:40,959
document decryption

16
00:00:39,520 --> 00:00:43,440
while the other key is used to kill

17
00:00:40,960 --> 00:00:45,760
legally binding digital signatures

18
00:00:43,440 --> 00:00:46,718
over the years this electronic

19
00:00:45,760 --> 00:00:48,719
functionality

20
00:00:46,719 --> 00:00:49,760
has been implemented using different

21
00:00:48,719 --> 00:00:51,440
chip platforms

22
00:00:49,760 --> 00:00:54,000
in the latest platforms it is

23
00:00:51,440 --> 00:00:56,000
implemented using a java card applet

24
00:00:54,000 --> 00:00:58,640
running inside the chip

25
00:00:56,000 --> 00:00:59,440
so the estonian id card is an example of

26
00:00:58,640 --> 00:01:01,840
a successful

27
00:00:59,440 --> 00:01:04,559
nationwide pki deployment that actually

28
00:01:01,840 --> 00:01:07,920
works and is widely used

29
00:01:04,559 --> 00:01:10,320
now as you may already see the security

30
00:01:07,920 --> 00:01:12,640
of this scheme depends on the secrecy of

31
00:01:10,320 --> 00:01:14,399
a cardholder's private keys

32
00:01:12,640 --> 00:01:17,119
and these keys are generated in the id

33
00:01:14,400 --> 00:01:19,680
card manufacturing process

34
00:01:17,119 --> 00:01:21,759
here you see the id card personalization

35
00:01:19,680 --> 00:01:23,840
line of gemalto the company

36
00:01:21,759 --> 00:01:25,600
that was responsible for manufacturing

37
00:01:23,840 --> 00:01:27,040
the estonian id card for more than 15

38
00:01:25,600 --> 00:01:29,919
years

39
00:01:27,040 --> 00:01:30,880
so the key security question here is how

40
00:01:29,920 --> 00:01:32,479
can we be sure

41
00:01:30,880 --> 00:01:34,320
that in the manufacturing process the

42
00:01:32,479 --> 00:01:36,799
manufacturer does not collect the

43
00:01:34,320 --> 00:01:38,158
private key stored on these cards

44
00:01:36,799 --> 00:01:39,840
the answer has been that the

45
00:01:38,159 --> 00:01:42,159
manufacturing contract

46
00:01:39,840 --> 00:01:43,759
requires that the private key be

47
00:01:42,159 --> 00:01:45,840
generated inside the chip

48
00:01:43,759 --> 00:01:47,520
such that it never leaves the card and

49
00:01:45,840 --> 00:01:49,520
no copies of the private key

50
00:01:47,520 --> 00:01:52,320
should ever exist only the public key

51
00:01:49,520 --> 00:01:54,399
should ever be exported from this card

52
00:01:52,320 --> 00:01:55,360
but then the question becomes how can we

53
00:01:54,399 --> 00:01:58,399
be sure that

54
00:01:55,360 --> 00:02:01,280
this requirement is followed in practice

55
00:01:58,399 --> 00:02:02,079
the answer has been that security audits

56
00:02:01,280 --> 00:02:04,640
are carried out

57
00:02:02,079 --> 00:02:06,079
and also as the id card manufacturer is

58
00:02:04,640 --> 00:02:08,479
in the business of trust

59
00:02:06,079 --> 00:02:11,519
it would never risk its reputation for

60
00:02:08,479 --> 00:02:13,920
example by copying private keys

61
00:02:11,520 --> 00:02:15,920
now the findings of our research show

62
00:02:13,920 --> 00:02:18,160
that contrary to these requirements

63
00:02:15,920 --> 00:02:19,599
the id card manufacturer had generated

64
00:02:18,160 --> 00:02:21,920
keys outside the card

65
00:02:19,599 --> 00:02:24,000
and these previously mentioned security

66
00:02:21,920 --> 00:02:26,559
audits were not able to discover

67
00:02:24,000 --> 00:02:28,400
the practice over the five year period

68
00:02:26,560 --> 00:02:31,920
while it happened

69
00:02:28,400 --> 00:02:34,080
okay but how did it all start

70
00:02:31,920 --> 00:02:36,000
the first series id card security

71
00:02:34,080 --> 00:02:39,360
incident was the recall

72
00:02:36,000 --> 00:02:42,480
of id cards issued in 2011.

73
00:02:39,360 --> 00:02:45,120
in 2012 the authorities announced that

74
00:02:42,480 --> 00:02:46,879
one of the electronic security measures

75
00:02:45,120 --> 00:02:48,640
of the id card needs to be renewed

76
00:02:46,879 --> 00:02:50,399
but the id card users have no reason to

77
00:02:48,640 --> 00:02:51,679
be concerned the card is secure all

78
00:02:50,400 --> 00:02:53,120
transactions made with the card are

79
00:02:51,680 --> 00:02:55,280
fully reliable

80
00:02:53,120 --> 00:02:56,160
adding that in july 2013 the

81
00:02:55,280 --> 00:02:58,000
certificates

82
00:02:56,160 --> 00:02:59,840
of the non-renewed cards will be

83
00:02:58,000 --> 00:03:01,360
suspended

84
00:02:59,840 --> 00:03:03,360
one note which will be important later

85
00:03:01,360 --> 00:03:04,800
is that the affected cards were not

86
00:03:03,360 --> 00:03:07,440
physically replaced

87
00:03:04,800 --> 00:03:09,440
to save costs the renewal process

88
00:03:07,440 --> 00:03:11,120
consisted of reinstalling the cards

89
00:03:09,440 --> 00:03:14,239
flawed java card applet

90
00:03:11,120 --> 00:03:16,640
in ppa customer service points ppi

91
00:03:14,239 --> 00:03:18,480
here is the state authority that issues

92
00:03:16,640 --> 00:03:20,879
id cards

93
00:03:18,480 --> 00:03:22,079
so in this renewal process the card

94
00:03:20,879 --> 00:03:24,399
received a new uplet

95
00:03:22,080 --> 00:03:26,319
new keys new certificates and new pin

96
00:03:24,400 --> 00:03:29,760
codes

97
00:03:26,319 --> 00:03:30,879
it was clear that something underhanded

98
00:03:29,760 --> 00:03:33,200
was going on because

99
00:03:30,879 --> 00:03:34,000
if the cards were actually secure then

100
00:03:33,200 --> 00:03:36,319
there would

101
00:03:34,000 --> 00:03:37,280
have been no need for an expensive

102
00:03:36,319 --> 00:03:39,440
recall

103
00:03:37,280 --> 00:03:40,720
and revocation of certificates what is

104
00:03:39,440 --> 00:03:42,560
interesting is that

105
00:03:40,720 --> 00:03:44,400
to this day the authorities have not

106
00:03:42,560 --> 00:03:46,400
disclosed the details of the security

107
00:03:44,400 --> 00:03:48,560
flaw in these cards

108
00:03:46,400 --> 00:03:51,200
however this secrecy around this

109
00:03:48,560 --> 00:03:53,200
incident motivated us to discover the

110
00:03:51,200 --> 00:03:54,560
security flaws the authorities and the

111
00:03:53,200 --> 00:03:57,439
id card manufacturer

112
00:03:54,560 --> 00:03:59,360
were reluctant to disclose and we

113
00:03:57,439 --> 00:04:01,519
decided to start with the analysis of

114
00:03:59,360 --> 00:04:03,680
public key certificates

115
00:04:01,519 --> 00:04:04,720
so in estonia all currently valid id

116
00:04:03,680 --> 00:04:06,480
card certificates

117
00:04:04,720 --> 00:04:08,720
are available in a public certificate

118
00:04:06,480 --> 00:04:11,840
repository where anyone can search

119
00:04:08,720 --> 00:04:13,760
for them using the personal identity

120
00:04:11,840 --> 00:04:15,760
code of the cardholder

121
00:04:13,760 --> 00:04:17,680
we collected and analyzed millions of

122
00:04:15,760 --> 00:04:19,358
certificates issued over the years and

123
00:04:17,680 --> 00:04:20,959
this data helped us to discover

124
00:04:19,358 --> 00:04:23,359
several flaws in the id card

125
00:04:20,959 --> 00:04:25,199
manufacturing process

126
00:04:23,360 --> 00:04:27,280
the first discovery was of 10

127
00:04:25,199 --> 00:04:30,639
certificate pairs that contained

128
00:04:27,280 --> 00:04:33,359
dublicate rsa public keys

129
00:04:30,639 --> 00:04:34,880
the certificates in a pair were issued

130
00:04:33,360 --> 00:04:37,199
very close to each other

131
00:04:34,880 --> 00:04:39,440
only with a few second difference and in

132
00:04:37,199 --> 00:04:42,160
most of the cases it enrolled id cards

133
00:04:39,440 --> 00:04:45,520
renewed in ppa to fix this security flaw

134
00:04:42,160 --> 00:04:47,440
in the 2011 issued id card

135
00:04:45,520 --> 00:04:49,198
now the question was how could this

136
00:04:47,440 --> 00:04:51,759
possibly happen

137
00:04:49,199 --> 00:04:53,360
if the cards did indeed contain

138
00:04:51,759 --> 00:04:55,440
duplicate private keys

139
00:04:53,360 --> 00:04:56,800
then the only plausible explanation is

140
00:04:55,440 --> 00:04:58,880
that their keys

141
00:04:56,800 --> 00:04:59,840
had been generated outside the card and

142
00:04:58,880 --> 00:05:03,520
due to some

143
00:04:59,840 --> 00:05:05,599
error the private key was imported twice

144
00:05:03,520 --> 00:05:06,639
so we decided to investigate the case of

145
00:05:05,600 --> 00:05:09,759
the public key

146
00:05:06,639 --> 00:05:11,520
shared between ulle and toivo in more

147
00:05:09,759 --> 00:05:13,199
detail

148
00:05:11,520 --> 00:05:15,039
here you see the authentication

149
00:05:13,199 --> 00:05:17,360
certificate of toyo

150
00:05:15,039 --> 00:05:19,120
and here the digital signature

151
00:05:17,360 --> 00:05:21,039
certificate of full

152
00:05:19,120 --> 00:05:24,320
if we switch between them we see that

153
00:05:21,039 --> 00:05:25,599
the public key stays the same now

154
00:05:24,320 --> 00:05:27,680
if the id cards indeed contain the

155
00:05:25,600 --> 00:05:29,919
corresponding private key then it means

156
00:05:27,680 --> 00:05:32,000
that toyo can forge digital signatures

157
00:05:29,919 --> 00:05:34,320
in the name of ullah and ullah can

158
00:05:32,000 --> 00:05:36,960
impersonate turbo

159
00:05:34,320 --> 00:05:38,960
so we contacted taiwan and he confirmed

160
00:05:36,960 --> 00:05:41,120
that his id card did indeed contain the

161
00:05:38,960 --> 00:05:42,719
corresponding private key

162
00:05:41,120 --> 00:05:44,400
to demonstrate the security issue we

163
00:05:42,720 --> 00:05:47,360
asked toevo to create a signature

164
00:05:44,400 --> 00:05:49,120
using his authentication key so we sent

165
00:05:47,360 --> 00:05:50,000
him a program that he had to run on his

166
00:05:49,120 --> 00:05:52,400
computer

167
00:05:50,000 --> 00:05:54,720
and he sent us back the screenshot

168
00:05:52,400 --> 00:05:57,120
containing the signature value

169
00:05:54,720 --> 00:05:59,120
we copied the signature value into a

170
00:05:57,120 --> 00:06:01,520
digital signature container

171
00:05:59,120 --> 00:06:02,240
and obtained the valid signature in the

172
00:06:01,520 --> 00:06:05,120
name of full

173
00:06:02,240 --> 00:06:06,080
created using the authentication key of

174
00:06:05,120 --> 00:06:08,400
toiwa

175
00:06:06,080 --> 00:06:10,400
point proven later we obtained

176
00:06:08,400 --> 00:06:12,000
convincing evidence that ul's id card

177
00:06:10,400 --> 00:06:13,280
also contains the corresponding private

178
00:06:12,000 --> 00:06:15,520
key

179
00:06:13,280 --> 00:06:16,960
in the meantime the id card manufacturer

180
00:06:15,520 --> 00:06:20,880
had discovered the problem and had

181
00:06:16,960 --> 00:06:22,880
issued new id cards for toyo and ulla

182
00:06:20,880 --> 00:06:24,560
it still was not clear to us whether the

183
00:06:22,880 --> 00:06:25,840
authorities were fully aware of the true

184
00:06:24,560 --> 00:06:27,680
reasons behind these faults

185
00:06:25,840 --> 00:06:29,359
therefore we decided to inform the

186
00:06:27,680 --> 00:06:29,840
authorities about the case of toivo and

187
00:06:29,360 --> 00:06:33,039
noorlan

188
00:06:29,840 --> 00:06:35,919
and our suspicion of key generation

189
00:06:33,039 --> 00:06:36,639
outside the id card according to the

190
00:06:35,919 --> 00:06:39,039
authorities

191
00:06:36,639 --> 00:06:41,280
the id card manufacturer denied that the

192
00:06:39,039 --> 00:06:44,080
id card contained duplicate private keys

193
00:06:41,280 --> 00:06:45,679
saying that the problem is only with the

194
00:06:44,080 --> 00:06:46,400
certificates and that this problem had

195
00:06:45,680 --> 00:06:49,360
been fixed

196
00:06:46,400 --> 00:06:50,880
a long time ago so we had a deadlock

197
00:06:49,360 --> 00:06:53,919
here

198
00:06:50,880 --> 00:06:54,719
fortunately in the meantime there was a

199
00:06:53,919 --> 00:06:57,359
breakthrough

200
00:06:54,720 --> 00:06:57,840
in the research world due to the paper

201
00:06:57,360 --> 00:06:59,919
the

202
00:06:57,840 --> 00:07:02,080
million key question investigating the

203
00:06:59,919 --> 00:07:06,159
origins of rsa public keys presented

204
00:07:02,080 --> 00:07:08,400
at unix 2016. the researchers found that

205
00:07:06,160 --> 00:07:09,280
the rsa public key modulus carries a

206
00:07:08,400 --> 00:07:11,039
fingerprint

207
00:07:09,280 --> 00:07:12,719
that can be used to distinguish between

208
00:07:11,039 --> 00:07:14,880
key generation algorithms

209
00:07:12,720 --> 00:07:16,880
in particular the range from where

210
00:07:14,880 --> 00:07:19,840
primes p and q are selected to obtain

211
00:07:16,880 --> 00:07:21,599
a modulus of the required length and

212
00:07:19,840 --> 00:07:23,119
this fingerprint can be absurd from

213
00:07:21,599 --> 00:07:25,280
probability distribution

214
00:07:23,120 --> 00:07:26,160
of the most significant byte of public

215
00:07:25,280 --> 00:07:29,280
key modulus

216
00:07:26,160 --> 00:07:31,680
here are some examples of distributions

217
00:07:29,280 --> 00:07:35,280
produced by different implementations of

218
00:07:31,680 --> 00:07:37,840
the rsa key generation algorithm

219
00:07:35,280 --> 00:07:39,520
a long story short we generated and

220
00:07:37,840 --> 00:07:42,000
exported millions of reference keys

221
00:07:39,520 --> 00:07:44,000
from each id card platform and analyzed

222
00:07:42,000 --> 00:07:46,000
whether the properties in these keys

223
00:07:44,000 --> 00:07:48,800
match the properties of the public keys

224
00:07:46,000 --> 00:07:51,759
contained in the eddy card certificates

225
00:07:48,800 --> 00:07:55,360
as a result we found that the id card

226
00:07:51,759 --> 00:07:57,280
keys renewed in ppa from 2012 to 2017

227
00:07:55,360 --> 00:07:59,199
had been generated outside the card

228
00:07:57,280 --> 00:08:01,039
because the public keys in these

229
00:07:59,199 --> 00:08:01,440
certificates were generated by setting

230
00:08:01,039 --> 00:08:04,719
the

231
00:08:01,440 --> 00:08:05,919
two most significant bits of p and q

232
00:08:04,720 --> 00:08:07,919
while the key generation algorithm

233
00:08:05,919 --> 00:08:09,599
implemented by the platform did not set

234
00:08:07,919 --> 00:08:12,000
these bits

235
00:08:09,599 --> 00:08:13,680
now it is important to note that this

236
00:08:12,000 --> 00:08:14,639
could not have been done by accident

237
00:08:13,680 --> 00:08:16,960
because

238
00:08:14,639 --> 00:08:18,800
the key import feature had to be

239
00:08:16,960 --> 00:08:20,638
programmed into the applet

240
00:08:18,800 --> 00:08:22,080
this means that this decision was made

241
00:08:20,639 --> 00:08:23,840
by the id card manufacturer

242
00:08:22,080 --> 00:08:26,479
intentionally

243
00:08:23,840 --> 00:08:28,560
we hope however that the intent was just

244
00:08:26,479 --> 00:08:29,039
to speed up the id card renewal process

245
00:08:28,560 --> 00:08:32,000
because

246
00:08:29,039 --> 00:08:33,039
on-car key generation is quite slow and

247
00:08:32,000 --> 00:08:35,440
would have

248
00:08:33,039 --> 00:08:37,919
added an extra five minutes on average

249
00:08:35,440 --> 00:08:40,320
to the id card renewal process

250
00:08:37,919 --> 00:08:42,000
however this case nicely demonstrates

251
00:08:40,320 --> 00:08:42,479
what a malicious id card manufacturer

252
00:08:42,000 --> 00:08:44,720
could have

253
00:08:42,479 --> 00:08:46,880
done without it being discovered and

254
00:08:44,720 --> 00:08:49,440
this is not limited only to key import

255
00:08:46,880 --> 00:08:52,640
the keys could also have been exported

256
00:08:49,440 --> 00:08:55,519
after generating them inside the card

257
00:08:52,640 --> 00:08:56,240
anyhow at that time for more than 74 000

258
00:08:55,519 --> 00:08:59,360
id cards

259
00:08:56,240 --> 00:09:02,160
renewed in ppa only 12 000

260
00:08:59,360 --> 00:09:03,360
cards were still valid after receiving

261
00:09:02,160 --> 00:09:05,680
our findings

262
00:09:03,360 --> 00:09:07,519
ppa announced the replacement of the

263
00:09:05,680 --> 00:09:09,680
affected id cards

264
00:09:07,519 --> 00:09:10,959
the public message was that the keys

265
00:09:09,680 --> 00:09:12,479
could have been copied

266
00:09:10,959 --> 00:09:14,479
and could be applied without actually

267
00:09:12,480 --> 00:09:17,680
using the corresponding id cards

268
00:09:14,480 --> 00:09:19,680
and that the ppa has filled a claim

269
00:09:17,680 --> 00:09:21,439
against the manufacturer for violation

270
00:09:19,680 --> 00:09:23,040
of security requirements

271
00:09:21,440 --> 00:09:24,560
gemalto's public response was that

272
00:09:23,040 --> 00:09:25,199
gemalto has fulfilled the id card

273
00:09:24,560 --> 00:09:27,279
agreement

274
00:09:25,200 --> 00:09:28,399
and that the ppa statements are a

275
00:09:27,279 --> 00:09:30,640
surprise to jamalton

276
00:09:28,399 --> 00:09:31,760
so in their response gemalto denied the

277
00:09:30,640 --> 00:09:34,319
findings

278
00:09:31,760 --> 00:09:35,839
later in september 2018 the state

279
00:09:34,320 --> 00:09:39,519
brought gemalto to court

280
00:09:35,839 --> 00:09:40,800
demanding a contractual penalty of 152

281
00:09:39,519 --> 00:09:43,360
million euros

282
00:09:40,800 --> 00:09:45,120
but this matter has not yet been

283
00:09:43,360 --> 00:09:48,080
resolved by the court

284
00:09:45,120 --> 00:09:50,080
today gemalto has left estonia and the

285
00:09:48,080 --> 00:09:51,120
latest study cards are manufactured by a

286
00:09:50,080 --> 00:09:54,240
different company

287
00:09:51,120 --> 00:09:56,959
idemia formerly oberthor

288
00:09:54,240 --> 00:09:59,040
it is hard to say however if any lessons

289
00:09:56,959 --> 00:10:00,959
have been learned from this case because

290
00:09:59,040 --> 00:10:02,480
nothing has fundamentally changed in the

291
00:10:00,959 --> 00:10:04,479
id card

292
00:10:02,480 --> 00:10:06,480
production process to prevent similar

293
00:10:04,480 --> 00:10:08,079
incidents from happening again

294
00:10:06,480 --> 00:10:09,600
so preferably we would like to have a

295
00:10:08,079 --> 00:10:11,680
technological solution

296
00:10:09,600 --> 00:10:13,360
that is secure even if the eddy car

297
00:10:11,680 --> 00:10:15,680
manufacturer is malicious

298
00:10:13,360 --> 00:10:16,560
so schemes based on threshold

299
00:10:15,680 --> 00:10:19,359
cryptography

300
00:10:16,560 --> 00:10:20,399
could help here but introducing the

301
00:10:19,360 --> 00:10:24,399
schemes of course

302
00:10:20,399 --> 00:10:26,560
would require a strong political will

303
00:10:24,399 --> 00:10:28,079
now i will just mention a separate flaw

304
00:10:26,560 --> 00:10:29,040
that was found by analyzing the

305
00:10:28,079 --> 00:10:31,359
certificates

306
00:10:29,040 --> 00:10:32,079
namely a set of certificates that

307
00:10:31,360 --> 00:10:34,800
contained

308
00:10:32,079 --> 00:10:35,839
corrupt rsa publicly modulus one of

309
00:10:34,800 --> 00:10:39,040
these keys

310
00:10:35,839 --> 00:10:41,839
we were able to fully factor but

311
00:10:39,040 --> 00:10:42,480
for more details on this and the

312
00:10:41,839 --> 00:10:44,959
previous

313
00:10:42,480 --> 00:10:59,120
mentioned findings please consult the

314
00:10:44,959 --> 00:10:59,119
paper thank you for your attention

