1
00:00:08,720 --> 00:00:12,080
and i'm a postdoctoral researcher at

2
00:00:10,480 --> 00:00:13,759
epfl spring lab

3
00:00:12,080 --> 00:00:15,200
it's my pleasure to present vote again

4
00:00:13,759 --> 00:00:16,560
which is joint work with indigo and

5
00:00:15,200 --> 00:00:19,038
carmela

6
00:00:16,560 --> 00:00:20,240
so vote coercion resistance is an

7
00:00:19,039 --> 00:00:23,039
important property

8
00:00:20,240 --> 00:00:24,479
in voting systems in general as it

9
00:00:23,039 --> 00:00:26,240
ensures that voters can

10
00:00:24,480 --> 00:00:28,560
vote the way they want without fear of

11
00:00:26,240 --> 00:00:30,959
being forced by a coercer

12
00:00:28,560 --> 00:00:32,719
now in traditional voting systems this

13
00:00:30,960 --> 00:00:34,800
is achieved by letting voters

14
00:00:32,719 --> 00:00:36,960
vote in the privacy of a polling booth

15
00:00:34,800 --> 00:00:39,360
so that courses cannot verify

16
00:00:36,960 --> 00:00:41,120
how courses vote now clearly in the

17
00:00:39,360 --> 00:00:43,200
electronic voting setting which is what

18
00:00:41,120 --> 00:00:46,160
we'll be focusing on in this talk

19
00:00:43,200 --> 00:00:47,840
that is not the case so vote again

20
00:00:46,160 --> 00:00:51,919
builds on top of the slightly less

21
00:00:47,840 --> 00:00:54,000
well-known re-voting paradigm where

22
00:00:51,920 --> 00:00:55,440
voters can vote multiple times and only

23
00:00:54,000 --> 00:00:57,360
the last vote counts

24
00:00:55,440 --> 00:00:58,640
so here is how that actually helps with

25
00:00:57,360 --> 00:01:01,519
coercion resistance

26
00:00:58,640 --> 00:01:02,399
so suppose the voter is forced to cast

27
00:01:01,520 --> 00:01:04,479
the vote

28
00:01:02,399 --> 00:01:06,320
under the influence of the course then

29
00:01:04,479 --> 00:01:08,000
in that case the voter can do exactly

30
00:01:06,320 --> 00:01:09,119
what the cursor wants her to do she

31
00:01:08,000 --> 00:01:10,720
doesn't need to lie

32
00:01:09,119 --> 00:01:12,479
she cast the ballot as she would

33
00:01:10,720 --> 00:01:14,320
normally do however

34
00:01:12,479 --> 00:01:15,840
then at a later point in time when the

35
00:01:14,320 --> 00:01:19,119
coercer is absent

36
00:01:15,840 --> 00:01:20,640
she can cast another ballot and because

37
00:01:19,119 --> 00:01:24,320
in the revoting system

38
00:01:20,640 --> 00:01:26,400
only the last ballot is counted coercion

39
00:01:24,320 --> 00:01:28,960
happens to be ineffective thereby

40
00:01:26,400 --> 00:01:32,079
providing coercion resistance

41
00:01:28,960 --> 00:01:33,360
now and the re-voting setting differs a

42
00:01:32,079 --> 00:01:35,759
little bit from the slightly more

43
00:01:33,360 --> 00:01:37,680
well-known approach of fake credentials

44
00:01:35,759 --> 00:01:39,360
in the fake credential approach during a

45
00:01:37,680 --> 00:01:41,360
pre-election phase

46
00:01:39,360 --> 00:01:42,560
voters register with the voting system

47
00:01:41,360 --> 00:01:44,799
and then obtain

48
00:01:42,560 --> 00:01:46,640
both some form of real credential and

49
00:01:44,799 --> 00:01:49,520
some form of fake credential

50
00:01:46,640 --> 00:01:51,200
then whenever they're coerced they will

51
00:01:49,520 --> 00:01:53,039
provide this fake credential to the

52
00:01:51,200 --> 00:01:54,880
course or claiming that it's real so

53
00:01:53,040 --> 00:01:57,119
they need to lie convincingly

54
00:01:54,880 --> 00:01:59,439
and they need this a mechanism to either

55
00:01:57,119 --> 00:02:02,880
memorize or store these credentials

56
00:01:59,439 --> 00:02:06,000
so that they can use them later

57
00:02:02,880 --> 00:02:07,839
re-voting and fake credentials both make

58
00:02:06,000 --> 00:02:09,038
strong assumptions in order to achieve

59
00:02:07,840 --> 00:02:11,200
correction resistance

60
00:02:09,038 --> 00:02:13,200
both require some form of inalienable

61
00:02:11,200 --> 00:02:15,599
means of authentication to ensure that

62
00:02:13,200 --> 00:02:18,079
the coercer cannot interpret

63
00:02:15,599 --> 00:02:19,920
impersonate them in the fake credential

64
00:02:18,080 --> 00:02:21,680
case during pre-election and in a

65
00:02:19,920 --> 00:02:23,760
re-voting case to make sure that the

66
00:02:21,680 --> 00:02:25,680
voter can always revote again at the end

67
00:02:23,760 --> 00:02:27,519
so this could for example be

68
00:02:25,680 --> 00:02:29,200
a national identity card or something

69
00:02:27,520 --> 00:02:32,560
based on biometrics

70
00:02:29,200 --> 00:02:34,640
now also in both cases the

71
00:02:32,560 --> 00:02:36,080
coercer needs to be absent at some point

72
00:02:34,640 --> 00:02:38,000
during the election phase

73
00:02:36,080 --> 00:02:39,519
so that voters actually have a chance to

74
00:02:38,000 --> 00:02:41,599
cast a real ballot

75
00:02:39,519 --> 00:02:43,200
however in re-voting we need to make the

76
00:02:41,599 --> 00:02:45,679
slightly stronger assumption that the

77
00:02:43,200 --> 00:02:47,839
coercer is also absent

78
00:02:45,680 --> 00:02:49,599
at the end of the election phase but we

79
00:02:47,840 --> 00:02:51,519
don't need to assume that the courser is

80
00:02:49,599 --> 00:02:54,480
absent during the pre-election phase

81
00:02:51,519 --> 00:02:54,480
because there is none

82
00:02:54,879 --> 00:02:59,599
now re-voting systems have a bit of a

83
00:02:58,080 --> 00:03:01,840
problem in that they skill

84
00:02:59,599 --> 00:03:02,799
very badly in order to filter the

85
00:03:01,840 --> 00:03:05,599
ballots and

86
00:03:02,800 --> 00:03:08,080
to only obtain retain the ballots that

87
00:03:05,599 --> 00:03:10,238
contain the last vote of every voter

88
00:03:08,080 --> 00:03:12,239
existing revoting schemes induce a

89
00:03:10,239 --> 00:03:14,080
quadratic filtering complexity

90
00:03:12,239 --> 00:03:15,840
that compares every that privately

91
00:03:14,080 --> 00:03:16,400
compares every ballot with every other

92
00:03:15,840 --> 00:03:19,440
ballot

93
00:03:16,400 --> 00:03:21,680
now this is very slow and only skills to

94
00:03:19,440 --> 00:03:23,680
let's say large villages vote again on

95
00:03:21,680 --> 00:03:26,640
the other hand

96
00:03:23,680 --> 00:03:28,400
has a quasi-linear filtering phase that

97
00:03:26,640 --> 00:03:30,000
therefore scales to nation-scale

98
00:03:28,400 --> 00:03:32,080
elections

99
00:03:30,000 --> 00:03:34,640
so let's look at an overview of voting

100
00:03:32,080 --> 00:03:36,799
and vote again

101
00:03:34,640 --> 00:03:38,079
each time a voter wants to cast a ballot

102
00:03:36,799 --> 00:03:39,840
and vote again

103
00:03:38,080 --> 00:03:42,400
the voter authenticates to a polling

104
00:03:39,840 --> 00:03:44,959
authority obtains a voting token

105
00:03:42,400 --> 00:03:45,760
and then uses this voting token to cast

106
00:03:44,959 --> 00:03:47,360
her ballot

107
00:03:45,760 --> 00:03:48,798
which she then publishes on the public

108
00:03:47,360 --> 00:03:51,040
bulletin board

109
00:03:48,799 --> 00:03:52,959
now by attending every time to the

110
00:03:51,040 --> 00:03:55,120
polling authority

111
00:03:52,959 --> 00:03:56,080
vote again avoids to have a device

112
00:03:55,120 --> 00:03:57,920
binding

113
00:03:56,080 --> 00:04:00,239
to the voter that can then be taken away

114
00:03:57,920 --> 00:04:03,119
by the coercer

115
00:04:00,239 --> 00:04:05,120
at the end of the election phase the

116
00:04:03,120 --> 00:04:06,640
tally server takes all the ballots from

117
00:04:05,120 --> 00:04:09,040
the public bulletin board

118
00:04:06,640 --> 00:04:10,640
and filters them in order to output the

119
00:04:09,040 --> 00:04:12,319
filtered ballots namely

120
00:04:10,640 --> 00:04:13,839
the latest ballots of every voter

121
00:04:12,319 --> 00:04:14,798
together with the proof of correct

122
00:04:13,840 --> 00:04:16,639
filtering

123
00:04:14,799 --> 00:04:18,160
then we proceed as in any other

124
00:04:16,639 --> 00:04:21,120
electronic voting system

125
00:04:18,160 --> 00:04:22,639
by taking these filtered ballots

126
00:04:21,120 --> 00:04:24,240
stuffing them in a mix and decrypt

127
00:04:22,639 --> 00:04:26,240
network that is run by a group of

128
00:04:24,240 --> 00:04:28,320
trustees to finally end up

129
00:04:26,240 --> 00:04:31,280
with the election result and the proof

130
00:04:28,320 --> 00:04:31,280
of correct encryption

131
00:04:31,759 --> 00:04:35,280
so here is what a ballot looks like in a

132
00:04:33,919 --> 00:04:38,320
traditional voting scheme

133
00:04:35,280 --> 00:04:40,000
it contains the encrypted candidate a

134
00:04:38,320 --> 00:04:41,599
proof that this candidate that is

135
00:04:40,000 --> 00:04:42,000
include ciphertext actually contains

136
00:04:41,600 --> 00:04:44,240
something

137
00:04:42,000 --> 00:04:45,520
useful and the proof that the voter that

138
00:04:44,240 --> 00:04:48,479
produced this ballot

139
00:04:45,520 --> 00:04:49,599
is an eligible voter now in order to

140
00:04:48,479 --> 00:04:52,080
filter ballots

141
00:04:49,600 --> 00:04:53,360
per voter we need something extra in

142
00:04:52,080 --> 00:04:55,520
revoting schemes

143
00:04:53,360 --> 00:04:58,000
we follow existing schemes and we add an

144
00:04:55,520 --> 00:05:01,280
encrypted voter identity so that we can

145
00:04:58,000 --> 00:05:03,039
group ballots per vote and then

146
00:05:01,280 --> 00:05:05,919
and this is a vote against specific

147
00:05:03,039 --> 00:05:07,599
edition we also add an encrypted ballot

148
00:05:05,919 --> 00:05:09,758
counter that is increased for every

149
00:05:07,600 --> 00:05:10,880
ballot that a voter cast and we use this

150
00:05:09,759 --> 00:05:14,400
ballot counter

151
00:05:10,880 --> 00:05:15,520
to identify the last ballot count by

152
00:05:14,400 --> 00:05:17,758
this filter

153
00:05:15,520 --> 00:05:19,680
now these two two values the encrypted

154
00:05:17,759 --> 00:05:21,440
voter identity and the ballot counter

155
00:05:19,680 --> 00:05:23,280
are encrypted against the public key of

156
00:05:21,440 --> 00:05:25,759
the

157
00:05:23,280 --> 00:05:27,440
tally server and are authenticated by

158
00:05:25,759 --> 00:05:29,919
the voting token obtained

159
00:05:27,440 --> 00:05:31,919
by the polling authority now of course

160
00:05:29,919 --> 00:05:33,919
the encrypted candidate can only be

161
00:05:31,919 --> 00:05:36,159
decrypted by the group of trustees as a

162
00:05:33,919 --> 00:05:36,159
whole

163
00:05:36,639 --> 00:05:42,000
so let's look at how a tally server

164
00:05:40,000 --> 00:05:43,919
might naively

165
00:05:42,000 --> 00:05:46,720
take the set of ballots in this case

166
00:05:43,919 --> 00:05:47,599
four by by two voters that each cast two

167
00:05:46,720 --> 00:05:49,600
ballots

168
00:05:47,600 --> 00:05:52,160
and filter them in order to select the

169
00:05:49,600 --> 00:05:54,160
last ballot for each voter

170
00:05:52,160 --> 00:05:55,440
so all the italian server needs to do is

171
00:05:54,160 --> 00:05:58,160
shuffle them and then

172
00:05:55,440 --> 00:05:59,680
verifiably decrypt the voter identity

173
00:05:58,160 --> 00:06:01,919
and the counter

174
00:05:59,680 --> 00:06:03,759
now identifying the last ballot per

175
00:06:01,919 --> 00:06:06,560
voter is very easy

176
00:06:03,759 --> 00:06:08,479
all the teleserver needs to do is group

177
00:06:06,560 --> 00:06:10,880
them per voter

178
00:06:08,479 --> 00:06:12,318
and point at the last ciphertext per

179
00:06:10,880 --> 00:06:14,159
vote

180
00:06:12,319 --> 00:06:16,319
now note that these voter identities are

181
00:06:14,160 --> 00:06:18,880
actually random so these groups are not

182
00:06:16,319 --> 00:06:19,360
linked to specific voters however the

183
00:06:18,880 --> 00:06:22,560
group

184
00:06:19,360 --> 00:06:25,120
sizes are what breaks coercion

185
00:06:22,560 --> 00:06:27,680
resistance in this approach

186
00:06:25,120 --> 00:06:30,080
because a coercer can always force a

187
00:06:27,680 --> 00:06:30,479
voter to vote a specific number of times

188
00:06:30,080 --> 00:06:33,840
and

189
00:06:30,479 --> 00:06:36,000
then at the end of this naive filtering

190
00:06:33,840 --> 00:06:37,198
check if a group size appears with that

191
00:06:36,000 --> 00:06:38,720
number of votes

192
00:06:37,199 --> 00:06:40,240
and therefore determine whether the

193
00:06:38,720 --> 00:06:42,560
voter voted again or not

194
00:06:40,240 --> 00:06:45,120
and thereby determine whether the voter

195
00:06:42,560 --> 00:06:49,360
avoided coercion

196
00:06:45,120 --> 00:06:51,759
so the key idea in vote again is that we

197
00:06:49,360 --> 00:06:52,800
can avoid this leakage due to group

198
00:06:51,759 --> 00:06:54,560
sizes by

199
00:06:52,800 --> 00:06:56,479
at the beginning of the filtering phase

200
00:06:54,560 --> 00:06:57,919
inserting a deterministic amount of

201
00:06:56,479 --> 00:07:00,840
dummy balance

202
00:06:57,919 --> 00:07:02,000
so that at the end of the filtering

203
00:07:00,840 --> 00:07:05,039
phase

204
00:07:02,000 --> 00:07:07,120
any possible groupings of votes among of

205
00:07:05,039 --> 00:07:09,599
ballots among voters is explained by the

206
00:07:07,120 --> 00:07:12,080
groupings observed by the courser

207
00:07:09,599 --> 00:07:14,000
and this enables us to retain this good

208
00:07:12,080 --> 00:07:16,639
property of filtering in the clear

209
00:07:14,000 --> 00:07:17,520
without running the risk of breaking

210
00:07:16,639 --> 00:07:19,440
existence

211
00:07:17,520 --> 00:07:20,880
so let's look at an example of how that

212
00:07:19,440 --> 00:07:22,560
would work so

213
00:07:20,880 --> 00:07:24,400
suppose we have nine ballots that are

214
00:07:22,560 --> 00:07:26,400
produced by two voters and

215
00:07:24,400 --> 00:07:28,159
both of these values are public the

216
00:07:26,400 --> 00:07:29,840
ballots you can just see in the bulletin

217
00:07:28,160 --> 00:07:31,120
board and the number of voters will be

218
00:07:29,840 --> 00:07:34,318
revealed anyway

219
00:07:31,120 --> 00:07:37,120
at the end of the election now

220
00:07:34,319 --> 00:07:37,520
these mine ballots can be grouped among

221
00:07:37,120 --> 00:07:40,000
these

222
00:07:37,520 --> 00:07:41,120
two photos in different ways that result

223
00:07:40,000 --> 00:07:42,720
in different groupings

224
00:07:41,120 --> 00:07:44,160
that would result in different groupings

225
00:07:42,720 --> 00:07:46,080
at the end of the filtering phase

226
00:07:44,160 --> 00:07:47,840
namely these four possible groupings

227
00:07:46,080 --> 00:07:51,758
where we have one two three

228
00:07:47,840 --> 00:07:52,719
four uh ballots in each of the smallest

229
00:07:51,759 --> 00:07:54,800
groups

230
00:07:52,720 --> 00:07:57,039
now what we need to do in order to make

231
00:07:54,800 --> 00:07:59,360
this dummy ballot trick work and this is

232
00:07:57,039 --> 00:08:00,878
what makes vote against filtering phase

233
00:07:59,360 --> 00:08:04,400
coercion resistant

234
00:08:00,879 --> 00:08:07,599
is we need to insert extra dummies

235
00:08:04,400 --> 00:08:09,758
so that we end up with a group of

236
00:08:07,599 --> 00:08:11,440
different groups that are super cover of

237
00:08:09,759 --> 00:08:14,000
each of these four situations

238
00:08:11,440 --> 00:08:16,080
now you might observe that the only

239
00:08:14,000 --> 00:08:16,560
group sizes that appear here are one two

240
00:08:16,080 --> 00:08:18,400
four

241
00:08:16,560 --> 00:08:20,960
one two three four five six seven and

242
00:08:18,400 --> 00:08:22,878
eight so that a possible super cover

243
00:08:20,960 --> 00:08:25,440
would be this one which indeed covers

244
00:08:22,879 --> 00:08:27,919
for example the example groupings of

245
00:08:25,440 --> 00:08:30,080
three and six now the problem with this

246
00:08:27,919 --> 00:08:33,039
approach is that now we needed to add

247
00:08:30,080 --> 00:08:34,958
a ton of dummies in order to provide

248
00:08:33,039 --> 00:08:37,199
sufficient cover

249
00:08:34,958 --> 00:08:38,799
but we can do a little bit better by

250
00:08:37,200 --> 00:08:40,719
adding also

251
00:08:38,799 --> 00:08:42,399
actually we can do a lot better by

252
00:08:40,719 --> 00:08:44,959
adding also

253
00:08:42,399 --> 00:08:46,000
dummy ballots to existing voting groups

254
00:08:44,959 --> 00:08:48,000
of real voters

255
00:08:46,000 --> 00:08:49,200
so for example here we're in exactly the

256
00:08:48,000 --> 00:08:52,399
same situation

257
00:08:49,200 --> 00:08:54,160
as before nine ballots and two two

258
00:08:52,399 --> 00:08:56,320
voters that produce them

259
00:08:54,160 --> 00:08:58,240
and again we have four different

260
00:08:56,320 --> 00:09:00,000
groupings but now we added

261
00:08:58,240 --> 00:09:02,000
we padded up each of these groups to a

262
00:09:00,000 --> 00:09:04,399
power of two

263
00:09:02,000 --> 00:09:05,600
as a result the only occurring group

264
00:09:04,399 --> 00:09:07,680
sizes are one two

265
00:09:05,600 --> 00:09:09,519
three uh one two four and eight and none

266
00:09:07,680 --> 00:09:11,120
of these occurs more than once in each

267
00:09:09,519 --> 00:09:13,279
of these four situations

268
00:09:11,120 --> 00:09:14,720
therefore we can do with a much smaller

269
00:09:13,279 --> 00:09:18,160
cover of one two

270
00:09:14,720 --> 00:09:19,680
four and eight groups and indeed this

271
00:09:18,160 --> 00:09:23,360
situation would cover

272
00:09:19,680 --> 00:09:26,319
our example of three and six ballots

273
00:09:23,360 --> 00:09:26,640
namely we add one dummy to the group of

274
00:09:26,320 --> 00:09:28,399
three

275
00:09:26,640 --> 00:09:30,319
and we add two dummies to the group of

276
00:09:28,399 --> 00:09:32,560
six and then we add

277
00:09:30,320 --> 00:09:33,760
two more dummy voters one with one dummy

278
00:09:32,560 --> 00:09:36,479
ballot and the other with

279
00:09:33,760 --> 00:09:38,240
two dummy belts now at this point you

280
00:09:36,480 --> 00:09:41,200
might be asking me ah this this

281
00:09:38,240 --> 00:09:42,080
these dummies i see that that that works

282
00:09:41,200 --> 00:09:43,680
that gives me

283
00:09:42,080 --> 00:09:45,200
that ensures that these groups don't

284
00:09:43,680 --> 00:09:47,680
leak but now

285
00:09:45,200 --> 00:09:50,160
as a result of these can now a tally

286
00:09:47,680 --> 00:09:51,760
server influence the election result now

287
00:09:50,160 --> 00:09:53,680
it turns out that that's actually not

288
00:09:51,760 --> 00:09:55,200
the case in this talk so far have been

289
00:09:53,680 --> 00:09:56,880
omitting

290
00:09:55,200 --> 00:09:58,959
almost all zero knowledge proofs that

291
00:09:56,880 --> 00:10:01,040
are in these protocols there are a lot

292
00:09:58,959 --> 00:10:01,760
of them i refer you to the paper to find

293
00:10:01,040 --> 00:10:04,399
them

294
00:10:01,760 --> 00:10:07,040
but here is why these dummy ballasts

295
00:10:04,399 --> 00:10:09,839
don't influence the election result

296
00:10:07,040 --> 00:10:11,920
when there is a dummy voter a voter that

297
00:10:09,839 --> 00:10:13,279
only casts dummy ballots so not a real

298
00:10:11,920 --> 00:10:17,360
one

299
00:10:13,279 --> 00:10:19,439
then the tally server proves that

300
00:10:17,360 --> 00:10:21,839
the final cipher text that is selected

301
00:10:19,440 --> 00:10:24,000
does not influence the election result

302
00:10:21,839 --> 00:10:25,680
moreover when there are dummy ballots

303
00:10:24,000 --> 00:10:27,360
that are added to a real voter they're

304
00:10:25,680 --> 00:10:28,479
added in such a way that they can never

305
00:10:27,360 --> 00:10:31,600
replace

306
00:10:28,480 --> 00:10:33,760
a real ballot by this photo

307
00:10:31,600 --> 00:10:34,800
so let's look at the security analysis

308
00:10:33,760 --> 00:10:37,200
as a whole

309
00:10:34,800 --> 00:10:38,880
indian for verifiability we only need to

310
00:10:37,200 --> 00:10:40,320
trust the polling authority which makes

311
00:10:38,880 --> 00:10:41,920
sense because the following authority

312
00:10:40,320 --> 00:10:43,279
determines who gets to vote and none of

313
00:10:41,920 --> 00:10:45,439
the other parties

314
00:10:43,279 --> 00:10:47,600
for ballot privacy we only need to trust

315
00:10:45,440 --> 00:10:50,160
the trustees because they in the end

316
00:10:47,600 --> 00:10:51,360
are the ones that decrypt the encrypted

317
00:10:50,160 --> 00:10:53,439
candidates

318
00:10:51,360 --> 00:10:55,120
so all of that is pretty good now with

319
00:10:53,440 --> 00:10:56,880
respect to coercion resistance we need

320
00:10:55,120 --> 00:10:57,920
to make slightly stronger assumptions

321
00:10:56,880 --> 00:11:01,439
first of all

322
00:10:57,920 --> 00:11:03,360
in order to prevent voters from having

323
00:11:01,440 --> 00:11:04,000
to keep state they need to authenticate

324
00:11:03,360 --> 00:11:05,360
every time

325
00:11:04,000 --> 00:11:06,720
for every ballot that the calling

326
00:11:05,360 --> 00:11:08,560
authority and therefore the polling

327
00:11:06,720 --> 00:11:10,079
authority must be trusted with respect

328
00:11:08,560 --> 00:11:12,479
to coercion resistance

329
00:11:10,079 --> 00:11:14,800
and additionally we trust the tally

330
00:11:12,480 --> 00:11:16,720
server to enable fast filtering

331
00:11:14,800 --> 00:11:18,399
and we also trust the bulletin board

332
00:11:16,720 --> 00:11:19,760
unless we use some kind of anonymous

333
00:11:18,399 --> 00:11:21,519
communication system

334
00:11:19,760 --> 00:11:23,200
now the full definitions and proofs of

335
00:11:21,519 --> 00:11:26,560
this can be found in

336
00:11:23,200 --> 00:11:28,240
paper we also implemented all of these

337
00:11:26,560 --> 00:11:30,239
cryptographic schemes

338
00:11:28,240 --> 00:11:32,399
using a python implementation using the

339
00:11:30,240 --> 00:11:34,480
patellar wrapper around openssl

340
00:11:32,399 --> 00:11:35,519
which implements all verifiable shuffles

341
00:11:34,480 --> 00:11:38,240
and server knowledge

342
00:11:35,519 --> 00:11:41,200
and here on the right you can see the

343
00:11:38,240 --> 00:11:42,800
single core performance showing that

344
00:11:41,200 --> 00:11:44,399
filtering around a hundred thousand

345
00:11:42,800 --> 00:11:48,319
ballots takes seven minutes

346
00:11:44,399 --> 00:11:50,160
uh on a single core in contrast

347
00:11:48,320 --> 00:11:52,240
approach takes five months to do the

348
00:11:50,160 --> 00:11:54,319
same now of course on

349
00:11:52,240 --> 00:11:56,079
a nation scale election you would have a

350
00:11:54,320 --> 00:11:58,480
much more powerful machine so

351
00:11:56,079 --> 00:11:59,359
as an example we estimated that it only

352
00:11:58,480 --> 00:12:02,480
takes

353
00:11:59,360 --> 00:12:04,560
about an hour to filter 150 million

354
00:12:02,480 --> 00:12:06,639
the code of this is online so just to

355
00:12:04,560 --> 00:12:07,279
wrap up vote again provides coercion

356
00:12:06,639 --> 00:12:10,240
resistance

357
00:12:07,279 --> 00:12:11,839
by enabling revoting that needs

358
00:12:10,240 --> 00:12:14,000
feministic balance

359
00:12:11,839 --> 00:12:15,200
to enable fast public filtering the

360
00:12:14,000 --> 00:12:17,040
security proofs

361
00:12:15,200 --> 00:12:25,839
and definitions are in the paper code is

362
00:12:17,040 --> 00:12:25,839
online and happy to take any questions

363
00:12:27,920 --> 00:12:30,000
you

