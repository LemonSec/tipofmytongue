1
00:00:09,519 --> 00:00:12,320
hi everyone and thanks for coming in

2
00:00:10,719 --> 00:00:13,518
this talk this is the ballot as busted

3
00:00:12,320 --> 00:00:15,040
before the blockchain is security

4
00:00:13,519 --> 00:00:16,079
analysis of votes which is the first

5
00:00:15,040 --> 00:00:18,799
internet application

6
00:00:16,079 --> 00:00:20,880
used in u.s federal elections my name is

7
00:00:18,800 --> 00:00:22,720
mike spector this is joint work with

8
00:00:20,880 --> 00:00:23,519
jimmy koppel and danny weitzner and

9
00:00:22,720 --> 00:00:25,599
we're from

10
00:00:23,519 --> 00:00:27,439
mit's computer science and artificial

11
00:00:25,599 --> 00:00:28,800
intelligence laboratory

12
00:00:27,439 --> 00:00:30,480
so in february the state of west

13
00:00:28,800 --> 00:00:32,320
virginia abruptly abandoned plans to

14
00:00:30,480 --> 00:00:33,440
adopt an internet voting phone app

15
00:00:32,320 --> 00:00:36,239
called voats

16
00:00:33,440 --> 00:00:38,160
this research is why it also serves as a

17
00:00:36,239 --> 00:00:39,839
great case study for explaining why we

18
00:00:38,160 --> 00:00:41,760
should be careful

19
00:00:39,840 --> 00:00:44,079
before advocating for the introduction

20
00:00:41,760 --> 00:00:45,519
of new technologies and civic processes

21
00:00:44,079 --> 00:00:46,960
and it also highlights the need for

22
00:00:45,520 --> 00:00:49,760
transparency and accountability in

23
00:00:46,960 --> 00:00:52,640
election systems in particular

24
00:00:49,760 --> 00:00:54,399
the story states starts in late 2019

25
00:00:52,640 --> 00:00:56,079
when it became clear that west virginia

26
00:00:54,399 --> 00:00:57,600
was going to pass a bill directing the

27
00:00:56,079 --> 00:00:59,199
secretary of state to allow disabled

28
00:00:57,600 --> 00:01:00,160
voters to cast their ballots over the

29
00:00:59,199 --> 00:01:01,760
internet

30
00:01:00,160 --> 00:01:03,519
this is important because west virginia

31
00:01:01,760 --> 00:01:05,039
has a higher than average number of

32
00:01:03,520 --> 00:01:07,200
disabled voters

33
00:01:05,040 --> 00:01:08,640
for example according to cdc 22 of

34
00:01:07,200 --> 00:01:11,040
adults in west virginia have serious

35
00:01:08,640 --> 00:01:12,799
difficulty walking or climbing

36
00:01:11,040 --> 00:01:15,520
uh seven stairs seven percent have some

37
00:01:12,799 --> 00:01:17,119
sort of uh vision impairment

38
00:01:15,520 --> 00:01:18,640
interestingly west virginia had already

39
00:01:17,119 --> 00:01:20,720
been using votes for over

40
00:01:18,640 --> 00:01:22,000
for overseas military voters or you

41
00:01:20,720 --> 00:01:24,158
acaba voters

42
00:01:22,000 --> 00:01:26,000
uh leading us to believe that they would

43
00:01:24,159 --> 00:01:29,200
likely be used

44
00:01:26,000 --> 00:01:29,200
for this expansion as well

45
00:01:30,400 --> 00:01:34,000
so given the potential impact we wanted

46
00:01:32,880 --> 00:01:35,520
to know how votes

47
00:01:34,000 --> 00:01:37,119
provided the essential security

48
00:01:35,520 --> 00:01:40,000
guarantees

49
00:01:37,119 --> 00:01:41,680
required in voting this is commonly

50
00:01:40,000 --> 00:01:42,079
these are commonly defined in literature

51
00:01:41,680 --> 00:01:45,200
as

52
00:01:42,079 --> 00:01:48,479
correctness privacy receipt freeness

53
00:01:45,200 --> 00:01:49,119
and coercion resistance additionally

54
00:01:48,479 --> 00:01:52,240
votes made

55
00:01:49,119 --> 00:01:53,439
heavy uh claim to make heavy use of

56
00:01:52,240 --> 00:01:55,920
cryptography including things like

57
00:01:53,439 --> 00:01:59,439
hardware back key storage mixnets

58
00:01:55,920 --> 00:02:02,000
and of course the blockchain this led us

59
00:01:59,439 --> 00:02:03,758
to wonder whether or not votes was n10

60
00:02:02,000 --> 00:02:05,920
verifiable

61
00:02:03,759 --> 00:02:07,200
intent verifiability allows a voter to

62
00:02:05,920 --> 00:02:08,000
tell if their ballot was counted

63
00:02:07,200 --> 00:02:09,520
correctly in the final

64
00:02:08,000 --> 00:02:11,360
tally and given the use of cryptography

65
00:02:09,520 --> 00:02:13,920
that was reported here it would be an

66
00:02:11,360 --> 00:02:15,280
expected guarantee of the system

67
00:02:13,920 --> 00:02:16,238
a key challenge we had was that we

68
00:02:15,280 --> 00:02:17,599
couldn't touch their backend

69
00:02:16,239 --> 00:02:19,440
infrastructure and therefore had to make

70
00:02:17,599 --> 00:02:21,040
assumptions

71
00:02:19,440 --> 00:02:22,720
our solution to this was to manually

72
00:02:21,040 --> 00:02:23,920
reverse engineer the app and iteratively

73
00:02:22,720 --> 00:02:27,120
re-implement the server

74
00:02:23,920 --> 00:02:28,799
from instead this static analysis

75
00:02:27,120 --> 00:02:30,160
we would further assume the best

76
00:02:28,800 --> 00:02:32,319
possible situation

77
00:02:30,160 --> 00:02:33,200
situation for the back end if we

78
00:02:32,319 --> 00:02:35,440
couldn't confirm

79
00:02:33,200 --> 00:02:36,720
some action and whenever we deviated

80
00:02:35,440 --> 00:02:39,920
from this assumption we explicitly

81
00:02:36,720 --> 00:02:39,920
discussed why in this paper

82
00:02:40,560 --> 00:02:46,560
in the end we found five high severity

83
00:02:42,959 --> 00:02:48,319
vulnerabilities a serious privacy issue

84
00:02:46,560 --> 00:02:50,480
we found that there were many basic

85
00:02:48,319 --> 00:02:53,599
implementation failures including

86
00:02:50,480 --> 00:02:55,440
mandated use of weak passwords that

87
00:02:53,599 --> 00:02:58,640
resulted in easily brute forceable

88
00:02:55,440 --> 00:03:00,560
encrypted database we found that their

89
00:02:58,640 --> 00:03:02,399
anti-tamper slash antivirus solution was

90
00:03:00,560 --> 00:03:03,920
very easily circumventable

91
00:03:02,400 --> 00:03:06,080
we also found that the app would send a

92
00:03:03,920 --> 00:03:08,480
photo of the user's id

93
00:03:06,080 --> 00:03:09,519
driver's license or passport and their

94
00:03:08,480 --> 00:03:11,440
physical location

95
00:03:09,519 --> 00:03:14,800
to a third party without alerting the

96
00:03:11,440 --> 00:03:17,760
user that this was going on

97
00:03:14,800 --> 00:03:18,400
we further found that their api server

98
00:03:17,760 --> 00:03:20,000
could

99
00:03:18,400 --> 00:03:21,680
completely control the user's vote

100
00:03:20,000 --> 00:03:22,319
surreptitiously which was surprising

101
00:03:21,680 --> 00:03:24,560
given the

102
00:03:22,319 --> 00:03:26,238
purported use of a blockchain and what

103
00:03:24,560 --> 00:03:29,280
we found was that there was no proof of

104
00:03:26,239 --> 00:03:30,480
inclusion sent back to the device

105
00:03:29,280 --> 00:03:32,879
we further found that there was a

106
00:03:30,480 --> 00:03:34,399
receipt that was used in this but it was

107
00:03:32,879 --> 00:03:35,679
very unlikely that this receipt

108
00:03:34,400 --> 00:03:40,000
represented a sort of

109
00:03:35,680 --> 00:03:43,200
known antenna verifiable scheme

110
00:03:40,000 --> 00:03:44,720
here is a summary of the adversaries

111
00:03:43,200 --> 00:03:46,879
that we modeled and the

112
00:03:44,720 --> 00:03:48,879
things that we believe that an attacker

113
00:03:46,879 --> 00:03:51,200
would be able to do

114
00:03:48,879 --> 00:03:52,159
i will leave explanation of all of this

115
00:03:51,200 --> 00:03:54,560
to the

116
00:03:52,159 --> 00:03:56,399
paper but i wanted to go through one

117
00:03:54,560 --> 00:03:59,840
particular attack and this is the

118
00:03:56,400 --> 00:04:01,360
passive network adversary attack

119
00:03:59,840 --> 00:04:04,000
because i thought it was felt it was

120
00:04:01,360 --> 00:04:05,280
particularly interesting

121
00:04:04,000 --> 00:04:07,360
to understand this attack we first have

122
00:04:05,280 --> 00:04:09,840
to get into details of the protocol

123
00:04:07,360 --> 00:04:10,799
first the device establishes a standard

124
00:04:09,840 --> 00:04:12,799
https

125
00:04:10,799 --> 00:04:14,239
connection to votes's api server and

126
00:04:12,799 --> 00:04:17,440
everything that follows

127
00:04:14,239 --> 00:04:19,120
actually goes over https then

128
00:04:17,440 --> 00:04:20,719
on top of this it'll perform the

129
00:04:19,120 --> 00:04:24,560
following non-standard

130
00:04:20,720 --> 00:04:27,199
home rolled crypto protocol

131
00:04:24,560 --> 00:04:28,400
first the phone will generate 100 ecdsa

132
00:04:27,199 --> 00:04:30,000
key pairs

133
00:04:28,400 --> 00:04:32,560
and then immediately discards all but

134
00:04:30,000 --> 00:04:34,639
the 57th

135
00:04:32,560 --> 00:04:36,000
then the device sends all 100 public

136
00:04:34,639 --> 00:04:37,759
keys to the server

137
00:04:36,000 --> 00:04:39,280
the server will generate its own 100

138
00:04:37,759 --> 00:04:41,520
keys perform key agreement with the

139
00:04:39,280 --> 00:04:43,280
sender's 57th public key

140
00:04:41,520 --> 00:04:45,120
generate a random value which will later

141
00:04:43,280 --> 00:04:48,239
be used as the aes gcm

142
00:04:45,120 --> 00:04:50,960
share key then encrypt the aes gcm

143
00:04:48,240 --> 00:04:55,040
shared key with the ecdsa

144
00:04:50,960 --> 00:04:57,198
key and sends the client its 100

145
00:04:55,040 --> 00:04:58,639
public keys finally the phone will

146
00:04:57,199 --> 00:05:01,360
perform its own key agreement

147
00:04:58,639 --> 00:05:02,240
decrypt the aes gcm key and from this

148
00:05:01,360 --> 00:05:05,680
point forward

149
00:05:02,240 --> 00:05:08,960
all communications are asgcm encrypted

150
00:05:05,680 --> 00:05:11,360
using that share key now

151
00:05:08,960 --> 00:05:13,120
this is non-standard and has very

152
00:05:11,360 --> 00:05:15,039
unclear security benefits especially

153
00:05:13,120 --> 00:05:16,479
since there's no actual

154
00:05:15,039 --> 00:05:18,800
signing of the key public keys

155
00:05:16,479 --> 00:05:20,639
themselves but isn't necessarily

156
00:05:18,800 --> 00:05:22,960
insecure on its own

157
00:05:20,639 --> 00:05:24,800
so explain why this complicates matters

158
00:05:22,960 --> 00:05:26,719
i first have to explain

159
00:05:24,800 --> 00:05:28,240
the structure of ballot information as a

160
00:05:26,720 --> 00:05:29,440
descent between the server and the

161
00:05:28,240 --> 00:05:32,560
client

162
00:05:29,440 --> 00:05:34,240
so on the left is what a ballot looks

163
00:05:32,560 --> 00:05:35,840
like in app when the user is selecting

164
00:05:34,240 --> 00:05:38,560
their preferred candidate in an

165
00:05:35,840 --> 00:05:39,679
example election uh this is generated

166
00:05:38,560 --> 00:05:41,600
from json

167
00:05:39,680 --> 00:05:42,880
strings sent by the server which are

168
00:05:41,600 --> 00:05:43,919
variable length

169
00:05:42,880 --> 00:05:45,440
depending on the description of the

170
00:05:43,919 --> 00:05:47,599
candidate for example you can see the

171
00:05:45,440 --> 00:05:49,039
corresponding json sent from the server

172
00:05:47,600 --> 00:05:52,400
to the client on the right

173
00:05:49,039 --> 00:05:55,919
for the display on the left

174
00:05:52,400 --> 00:06:00,000
anyway when a user submits their ballot

175
00:05:55,919 --> 00:06:01,758
the vote is then sent to the server as

176
00:06:00,000 --> 00:06:04,840
all of the metadata of the voter's

177
00:06:01,759 --> 00:06:07,360
choice but only that candidate's

178
00:06:04,840 --> 00:06:09,359
metadata

179
00:06:07,360 --> 00:06:10,880
the end result is a textbook side

180
00:06:09,360 --> 00:06:13,280
channel attack that was made

181
00:06:10,880 --> 00:06:14,560
far worse by the custom crypto protocol

182
00:06:13,280 --> 00:06:17,440
involved

183
00:06:14,560 --> 00:06:18,560
to understand why one has to think a

184
00:06:17,440 --> 00:06:21,360
little bit about how

185
00:06:18,560 --> 00:06:22,240
normal https traffic works in normal

186
00:06:21,360 --> 00:06:24,720
https

187
00:06:22,240 --> 00:06:26,960
uh traffic plain text is somewhat

188
00:06:24,720 --> 00:06:29,199
obfuscated by gzip compression

189
00:06:26,960 --> 00:06:30,638
and in votes protocol the plain text is

190
00:06:29,199 --> 00:06:34,080
encrypted before gzip gets

191
00:06:30,639 --> 00:06:35,759
a chance the result is that if you know

192
00:06:34,080 --> 00:06:37,758
the length of the ballot options you can

193
00:06:35,759 --> 00:06:39,120
very obviously tell which options the

194
00:06:37,759 --> 00:06:41,199
voters selected

195
00:06:39,120 --> 00:06:43,280
this image graphs the size of packets

196
00:06:41,199 --> 00:06:45,120
sent from the device to the server

197
00:06:43,280 --> 00:06:46,840
immediately after a vote submission for

198
00:06:45,120 --> 00:06:48,000
the candidate with the short and long

199
00:06:46,840 --> 00:06:50,400
description

200
00:06:48,000 --> 00:06:50,400
is sent

201
00:06:51,440 --> 00:06:54,639
note that you can clearly tell which

202
00:06:52,880 --> 00:06:57,680
packet is the vote submission and which

203
00:06:54,639 --> 00:06:59,039
candidate is the long candidate the end

204
00:06:57,680 --> 00:07:00,080
result is that a passive network

205
00:06:59,039 --> 00:07:02,880
adversary like say

206
00:07:00,080 --> 00:07:06,159
the user's isp can trivially determine

207
00:07:02,880 --> 00:07:06,159
the user's ballot selections

208
00:07:06,880 --> 00:07:10,880
so since these attacks are sort of

209
00:07:08,479 --> 00:07:11,758
obvious failings of design a natural

210
00:07:10,880 --> 00:07:14,000
question would be

211
00:07:11,759 --> 00:07:15,360
how the system ended up being fielded

212
00:07:14,000 --> 00:07:17,039
without someone saying something or

213
00:07:15,360 --> 00:07:18,639
noticing in the first place and i think

214
00:07:17,039 --> 00:07:22,318
the reason

215
00:07:18,639 --> 00:07:24,080
is obfuscation in fact it appears that

216
00:07:22,319 --> 00:07:26,080
significant effort was made to hide the

217
00:07:24,080 --> 00:07:28,318
system's design

218
00:07:26,080 --> 00:07:29,758
so while analysis of this sort of

219
00:07:28,319 --> 00:07:30,880
analysis was easy

220
00:07:29,759 --> 00:07:32,479
actually getting the point where we

221
00:07:30,880 --> 00:07:33,520
could do that analysis was incredibly

222
00:07:32,479 --> 00:07:35,520
difficult

223
00:07:33,520 --> 00:07:37,758
first for example there was a explicit

224
00:07:35,520 --> 00:07:39,120
lack of documentation

225
00:07:37,759 --> 00:07:40,880
the only documentation that existed in

226
00:07:39,120 --> 00:07:44,319
fact was an faq with

227
00:07:40,880 --> 00:07:45,759
a bunch of security claims there was no

228
00:07:44,319 --> 00:07:48,720
formal description of the system

229
00:07:45,759 --> 00:07:50,160
no security reviews were made public uh

230
00:07:48,720 --> 00:07:51,840
no list of fixed vulnerabilities from

231
00:07:50,160 --> 00:07:53,440
those security reviews

232
00:07:51,840 --> 00:07:54,960
uh and then there were these sort of

233
00:07:53,440 --> 00:07:59,199
claims

234
00:07:54,960 --> 00:08:00,638
that were very unclear at first glance

235
00:07:59,199 --> 00:08:02,240
uh these look like cryptographic

236
00:08:00,639 --> 00:08:04,800
guarantees but actually in reality

237
00:08:02,240 --> 00:08:06,240
there's no formal definition uh for

238
00:08:04,800 --> 00:08:07,680
example end-to-end vote encryption

239
00:08:06,240 --> 00:08:09,280
doesn't actually mean anything but

240
00:08:07,680 --> 00:08:10,160
ending verifiability does so these are

241
00:08:09,280 --> 00:08:11,679
sort of

242
00:08:10,160 --> 00:08:14,160
near misses of things that actually

243
00:08:11,680 --> 00:08:16,080
exist in literature

244
00:08:14,160 --> 00:08:17,520
second the binary itself was also

245
00:08:16,080 --> 00:08:20,400
obfuscated um

246
00:08:17,520 --> 00:08:21,039
using a cots product called proguard

247
00:08:20,400 --> 00:08:24,080
which comes

248
00:08:21,039 --> 00:08:24,878
embedded in android admittedly but in

249
00:08:24,080 --> 00:08:28,000
addition

250
00:08:24,879 --> 00:08:29,440
all protocol strings which were

251
00:08:28,000 --> 00:08:32,639
obfuscated using this runtime

252
00:08:29,440 --> 00:08:32,639
obfuscation protocol

253
00:08:32,880 --> 00:08:36,719
what's generally called a string

254
00:08:34,159 --> 00:08:38,958
encoding scheme this is common in games

255
00:08:36,719 --> 00:08:42,800
drm kits and particularly in the command

256
00:08:38,958 --> 00:08:45,359
and control strings used in malware

257
00:08:42,799 --> 00:08:48,079
it also used a non-standard 57th key

258
00:08:45,360 --> 00:08:50,000
protocol as i described before

259
00:08:48,080 --> 00:08:53,120
and the bug bounty version of the app

260
00:08:50,000 --> 00:08:54,080
was also obfuscated

261
00:08:53,120 --> 00:08:55,760
it's important to note that there's no

262
00:08:54,080 --> 00:08:56,959
concrete security benefit of any of this

263
00:08:55,760 --> 00:08:59,279
obfuscation

264
00:08:56,959 --> 00:09:02,319
except it does make independent analysis

265
00:08:59,279 --> 00:09:04,160
significantly harder

266
00:09:02,320 --> 00:09:06,000
to make matters worse a previous attempt

267
00:09:04,160 --> 00:09:06,560
at doing a security analysis resulted in

268
00:09:06,000 --> 00:09:09,360
a um

269
00:09:06,560 --> 00:09:11,279
researcher being investigated by the fbi

270
00:09:09,360 --> 00:09:11,680
uh while we couldn't find any indication

271
00:09:11,279 --> 00:09:14,720
that this

272
00:09:11,680 --> 00:09:17,040
this bothered the company

273
00:09:14,720 --> 00:09:18,560
we instead found quotes like this their

274
00:09:17,040 --> 00:09:20,800
reaction worried us so much that we

275
00:09:18,560 --> 00:09:20,800
actually

276
00:09:21,360 --> 00:09:25,040
it actually complicated our ability to

277
00:09:22,959 --> 00:09:27,199
disclose the results of our work

278
00:09:25,040 --> 00:09:29,360
um their justification for reporting the

279
00:09:27,200 --> 00:09:31,040
researcher also appears to be the dhs

280
00:09:29,360 --> 00:09:33,440
has designated election systems as

281
00:09:31,040 --> 00:09:35,519
critical infrastructure

282
00:09:33,440 --> 00:09:37,600
we actually agreed with this assessment

283
00:09:35,519 --> 00:09:39,519
so we reported to cisa

284
00:09:37,600 --> 00:09:43,120
which is the department in dhs that

285
00:09:39,519 --> 00:09:43,120
actually handles these incidents

286
00:09:43,200 --> 00:09:46,399
once we had confirmation that there were

287
00:09:44,720 --> 00:09:49,440
no active users of the system we

288
00:09:46,399 --> 00:09:51,839
released a preprint of this paper

289
00:09:49,440 --> 00:09:53,519
votes's response to say the least was

290
00:09:51,839 --> 00:09:56,240
not encouraging

291
00:09:53,519 --> 00:09:57,360
they began by calling us fudsters and

292
00:09:56,240 --> 00:10:00,000
then they

293
00:09:57,360 --> 00:10:01,600
sort of had two main complaints the

294
00:10:00,000 --> 00:10:04,240
first was a claim that we had used an

295
00:10:01,600 --> 00:10:05,760
older version of the app which was not

296
00:10:04,240 --> 00:10:07,440
true

297
00:10:05,760 --> 00:10:09,040
and that our methodology was somehow

298
00:10:07,440 --> 00:10:10,079
unrealistic

299
00:10:09,040 --> 00:10:11,040
it's important to note that they didn't

300
00:10:10,079 --> 00:10:12,719
actually refute any of the

301
00:10:11,040 --> 00:10:14,000
vulnerabilities or the results of our

302
00:10:12,720 --> 00:10:15,680
study themselves

303
00:10:14,000 --> 00:10:17,120
and interestingly these sorts of details

304
00:10:15,680 --> 00:10:18,399
appear to be a long-standing tradition

305
00:10:17,120 --> 00:10:20,240
in the market

306
00:10:18,399 --> 00:10:22,160
in fact these arguments are identical to

307
00:10:20,240 --> 00:10:25,680
die bulge response in a previous study

308
00:10:22,160 --> 00:10:25,680
that found faults in their systems

309
00:10:26,399 --> 00:10:31,360
votes then revealed that they had hired

310
00:10:29,279 --> 00:10:32,560
trailer bits a third-party security firm

311
00:10:31,360 --> 00:10:34,480
in new york

312
00:10:32,560 --> 00:10:36,079
which then released a report which

313
00:10:34,480 --> 00:10:37,279
confirmed all the vulnerabilities

314
00:10:36,079 --> 00:10:38,880
and confirmed that they existed in the

315
00:10:37,279 --> 00:10:40,240
most recent version of the app it

316
00:10:38,880 --> 00:10:41,680
confirmed the severity of the

317
00:10:40,240 --> 00:10:42,240
vulnerabilities and they confirmed that

318
00:10:41,680 --> 00:10:44,800
they had

319
00:10:42,240 --> 00:10:46,560
confirmed this to votes prior to votes

320
00:10:44,800 --> 00:10:49,439
speaking to the press

321
00:10:46,560 --> 00:10:50,079
they also validated our methodology and

322
00:10:49,440 --> 00:10:51,680
then found

323
00:10:50,079 --> 00:10:53,599
many server-side issues that we couldn't

324
00:10:51,680 --> 00:10:54,800
have found including the fact that av

325
00:10:53,600 --> 00:10:58,720
wasn't running during their past

326
00:10:54,800 --> 00:11:00,160
elections and a host of 40 other issues

327
00:10:58,720 --> 00:11:02,800
it's important to note that this still

328
00:11:00,160 --> 00:11:04,959
is not an independent audit

329
00:11:02,800 --> 00:11:06,800
okay so let's take a step back and talk

330
00:11:04,959 --> 00:11:09,119
about what we can learn about this going

331
00:11:06,800 --> 00:11:09,120
forward

332
00:11:09,440 --> 00:11:13,279
a lot can be summed up by reading this

333
00:11:11,600 --> 00:11:14,000
quote by bradley tusk which is votes

334
00:11:13,279 --> 00:11:16,800
backer and

335
00:11:14,000 --> 00:11:17,360
mobile voting project founder and he

336
00:11:16,800 --> 00:11:19,439
says

337
00:11:17,360 --> 00:11:20,959
that it's not that cyber security people

338
00:11:19,440 --> 00:11:24,720
are bad people

339
00:11:20,959 --> 00:11:26,239
per se i think that it's there solving

340
00:11:24,720 --> 00:11:26,880
for one situation that i'm solving for

341
00:11:26,240 --> 00:11:28,640
another

342
00:11:26,880 --> 00:11:30,720
they want zero technology risk in any

343
00:11:28,640 --> 00:11:31,199
way shape or form i am solving for the

344
00:11:30,720 --> 00:11:34,720
problem

345
00:11:31,200 --> 00:11:36,160
of turnout and to sort of abstract this

346
00:11:34,720 --> 00:11:39,519
a bit what he's saying is that

347
00:11:36,160 --> 00:11:42,959
we should solve a policy problem through

348
00:11:39,519 --> 00:11:44,000
uh new technology the problem here is

349
00:11:42,959 --> 00:11:45,279
that

350
00:11:44,000 --> 00:11:47,440
when you do that you're inherently

351
00:11:45,279 --> 00:11:49,120
adding risks from the technology itself

352
00:11:47,440 --> 00:11:50,000
that may be poorly understood and in

353
00:11:49,120 --> 00:11:51,680
this case

354
00:11:50,000 --> 00:11:53,760
how to do remote electronic voting

355
00:11:51,680 --> 00:11:57,359
remote only electronic voting

356
00:11:53,760 --> 00:11:59,839
is still an open research problem

357
00:11:57,360 --> 00:12:01,360
compounding this issue are the

358
00:11:59,839 --> 00:12:02,880
information asymmetries between the

359
00:12:01,360 --> 00:12:04,240
vendors and the election administrators

360
00:12:02,880 --> 00:12:06,480
purchasing the product as well as the

361
00:12:04,240 --> 00:12:07,680
voters themselves

362
00:12:06,480 --> 00:12:10,639
all right so what should we take away

363
00:12:07,680 --> 00:12:12,399
from this well we gave in the paper

364
00:12:10,639 --> 00:12:13,920
the following recommendations first we

365
00:12:12,399 --> 00:12:17,279
should fight efforts that

366
00:12:13,920 --> 00:12:19,760
to increase this information asymmetry

367
00:12:17,279 --> 00:12:21,439
second because of number one we should

368
00:12:19,760 --> 00:12:22,639
provide universal public scrutiny of

369
00:12:21,440 --> 00:12:25,760
deployed election systems

370
00:12:22,639 --> 00:12:27,279
before they are fielded and three

371
00:12:25,760 --> 00:12:28,639
we should uphold standards of software

372
00:12:27,279 --> 00:12:30,800
independence verifiability and

373
00:12:28,639 --> 00:12:32,880
transparency election systems

374
00:12:30,800 --> 00:12:34,639
and for everything else you should take

375
00:12:32,880 --> 00:12:39,839
a hard look

376
00:12:34,639 --> 00:12:39,839
thank you and please go vote

