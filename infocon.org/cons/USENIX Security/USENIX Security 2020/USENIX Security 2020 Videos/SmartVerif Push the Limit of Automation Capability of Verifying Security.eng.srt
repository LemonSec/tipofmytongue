1
00:00:09,120 --> 00:00:12,239
ladies and gentlemen

2
00:00:10,320 --> 00:00:13,440
it is a great pleasure for me to attend

3
00:00:12,240 --> 00:00:15,839
this conference

4
00:00:13,440 --> 00:00:16,880
today i would like to present the paper

5
00:00:15,839 --> 00:00:18,400
smartwave

6
00:00:16,880 --> 00:00:20,320
pushes the limit of automation

7
00:00:18,400 --> 00:00:22,640
capability of verifying security

8
00:00:20,320 --> 00:00:24,960
protocols by dynamic strategies

9
00:00:22,640 --> 00:00:28,160
i'm chonsu from university of science

10
00:00:24,960 --> 00:00:30,320
and technology of china

11
00:00:28,160 --> 00:00:32,800
in recent years secretive flaws have

12
00:00:30,320 --> 00:00:36,079
been found in several security protocols

13
00:00:32,800 --> 00:00:38,319
such as 4g trs and 5g

14
00:00:36,079 --> 00:00:40,960
the design of security protocols is

15
00:00:38,320 --> 00:00:40,960
error prone

16
00:00:41,440 --> 00:00:46,640
therefore verifying security protocols

17
00:00:43,840 --> 00:00:48,559
has become a key issue in security

18
00:00:46,640 --> 00:00:49,680
there are several approaches in protocol

19
00:00:48,559 --> 00:00:52,399
verification

20
00:00:49,680 --> 00:00:54,160
such as formal methods and fuzzy

21
00:00:52,399 --> 00:00:55,920
compared with other approaches

22
00:00:54,160 --> 00:00:57,440
formal measures can provide formal

23
00:00:55,920 --> 00:01:01,120
security guarantee

24
00:00:57,440 --> 00:01:02,879
but can only achieve partial automation

25
00:01:01,120 --> 00:01:05,039
it may require human guidance when

26
00:01:02,879 --> 00:01:06,960
verifying protocols with global states

27
00:01:05,040 --> 00:01:09,280
or unbounded sessions

28
00:01:06,960 --> 00:01:11,679
in contrast other approaches such as

29
00:01:09,280 --> 00:01:13,520
fuzzy achieve full automation

30
00:01:11,680 --> 00:01:15,840
but there are false positives and false

31
00:01:13,520 --> 00:01:18,000
negatives in experiments

32
00:01:15,840 --> 00:01:19,360
in this work our modulation is so

33
00:01:18,000 --> 00:01:22,320
achieved for automation

34
00:01:19,360 --> 00:01:22,320
in formal methods

35
00:01:22,560 --> 00:01:26,720
several state of the art formal method

36
00:01:24,400 --> 00:01:29,360
tools such as pro wealth and state value

37
00:01:26,720 --> 00:01:31,119
use static strategies they can achieve

38
00:01:29,360 --> 00:01:32,000
automated verification for some

39
00:01:31,119 --> 00:01:34,240
protocols

40
00:01:32,000 --> 00:01:36,880
but cannot verify complicated protocols

41
00:01:34,240 --> 00:01:38,960
such as ubq protocol

42
00:01:36,880 --> 00:01:41,199
other tools such as tamarind and gs

43
00:01:38,960 --> 00:01:43,039
valve lose automation capability to

44
00:01:41,200 --> 00:01:45,119
verify more protocols

45
00:01:43,040 --> 00:01:47,600
they require human information to guide

46
00:01:45,119 --> 00:01:47,600
the tool

47
00:01:47,759 --> 00:01:50,880
in this presentation we implement smart

48
00:01:50,159 --> 00:01:52,560
warf

49
00:01:50,880 --> 00:01:54,399
which pushes the limit of the mission

50
00:01:52,560 --> 00:01:55,759
capability of verifying security

51
00:01:54,399 --> 00:01:57,439
protocols

52
00:01:55,759 --> 00:02:01,520
it achieves full automation in

53
00:01:57,439 --> 00:02:03,919
verification without any human guidance

54
00:02:01,520 --> 00:02:05,039
we chose 24 typical protocols in our

55
00:02:03,920 --> 00:02:07,040
experiments

56
00:02:05,040 --> 00:02:08,319
and the results show that our tour

57
00:02:07,040 --> 00:02:10,239
achieve 100

58
00:02:08,318 --> 00:02:12,879
success rate in verifying these

59
00:02:10,239 --> 00:02:13,760
protocols

60
00:02:12,879 --> 00:02:16,879
which are the performance

61
00:02:13,760 --> 00:02:18,000
state-of-the-art tools smart wave use

62
00:02:16,879 --> 00:02:20,879
tumblr improver

63
00:02:18,000 --> 00:02:22,879
a formal method tool as backhand and it

64
00:02:20,879 --> 00:02:23,599
is achieved by designing a novel dynamic

65
00:02:22,879 --> 00:02:25,760
strategy

66
00:02:23,599 --> 00:02:28,000
and replacing the original strategies in

67
00:02:25,760 --> 00:02:30,319
tamarind

68
00:02:28,000 --> 00:02:32,000
to describe our problem definition we

69
00:02:30,319 --> 00:02:32,560
firstly illustrate the verification

70
00:02:32,000 --> 00:02:35,519
process

71
00:02:32,560 --> 00:02:38,720
in our work the process is implemented

72
00:02:35,519 --> 00:02:38,720
in a verification tree

73
00:02:39,680 --> 00:02:42,879
in the tree each node represents

74
00:02:41,599 --> 00:02:44,799
approved states

75
00:02:42,879 --> 00:02:46,640
we collected the propositions in each

76
00:02:44,800 --> 00:02:49,840
group step of tamarind proverb

77
00:02:46,640 --> 00:02:52,238
and store it in the node

78
00:02:49,840 --> 00:02:54,160
uniquely identify a node we additionally

79
00:02:52,239 --> 00:02:58,000
stores harsh value of the proposition

80
00:02:54,160 --> 00:02:58,000
and the proof stem number in the node

81
00:02:58,159 --> 00:03:02,480
the root node of the tree represents the

82
00:03:00,080 --> 00:03:04,560
security property

83
00:03:02,480 --> 00:03:06,560
in the tree the proof state in the child

84
00:03:04,560 --> 00:03:07,920
can be used to prove the full state is

85
00:03:06,560 --> 00:03:10,560
parent

86
00:03:07,920 --> 00:03:11,518
for example if the proposition send sk

87
00:03:10,560 --> 00:03:14,159
in time point i

88
00:03:11,519 --> 00:03:16,080
is verified the proposition signify is

89
00:03:14,159 --> 00:03:17,760
verified

90
00:03:16,080 --> 00:03:20,000
note that it does not require the

91
00:03:17,760 --> 00:03:23,040
children to be verified

92
00:03:20,000 --> 00:03:25,519
which means if snsk is not verified

93
00:03:23,040 --> 00:03:27,440
and the ku hk is verified the

94
00:03:25,519 --> 00:03:29,120
proposition simplified can also be

95
00:03:27,440 --> 00:03:31,359
verified

96
00:03:29,120 --> 00:03:32,799
in the verification process the goal is

97
00:03:31,360 --> 00:03:35,519
finding a correct proof path

98
00:03:32,799 --> 00:03:36,640
in the tree a path is correct if and

99
00:03:35,519 --> 00:03:39,440
only if the path

100
00:03:36,640 --> 00:03:40,798
starts from the root node and ends with

101
00:03:39,440 --> 00:03:44,000
a leaf node

102
00:03:40,799 --> 00:03:46,239
which contains an exam since the exam is

103
00:03:44,000 --> 00:03:48,400
assumed to be true in our verification

104
00:03:46,239 --> 00:03:51,280
we can verify the security property

105
00:03:48,400 --> 00:03:51,280
following the path

106
00:03:52,159 --> 00:03:56,798
here if a node is on a correct path we

107
00:03:54,879 --> 00:04:00,480
define the proposition it contains

108
00:03:56,799 --> 00:04:01,760
as a supporting lemma based on the

109
00:04:00,480 --> 00:04:04,879
previous definition

110
00:04:01,760 --> 00:04:06,640
we present our strategy design

111
00:04:04,879 --> 00:04:08,798
our dynamic strategy is finding the

112
00:04:06,640 --> 00:04:10,480
creditproof path by optimizing itself

113
00:04:08,799 --> 00:04:11,760
according to historical incredible

114
00:04:10,480 --> 00:04:14,159
process

115
00:04:11,760 --> 00:04:16,880
initially it uses a purely random

116
00:04:14,159 --> 00:04:18,959
strategy to select a path

117
00:04:16,880 --> 00:04:20,000
and then estimates the quantities of the

118
00:04:18,959 --> 00:04:22,720
path

119
00:04:20,000 --> 00:04:23,520
if it is correct the strategy terminates

120
00:04:22,720 --> 00:04:25,680
otherwise

121
00:04:23,520 --> 00:04:27,039
it optimizes the selection policy using

122
00:04:25,680 --> 00:04:29,680
reinforcement learning

123
00:04:27,040 --> 00:04:31,199
and reselects the path after the

124
00:04:29,680 --> 00:04:33,120
strategy is optimized

125
00:04:31,199 --> 00:04:35,440
it tends to select a node representing

126
00:04:33,120 --> 00:04:37,600
support dilemma among the candidates

127
00:04:35,440 --> 00:04:40,880
which leads to higher probability of

128
00:04:37,600 --> 00:04:40,880
successful verification

129
00:04:41,040 --> 00:04:44,880
the strategy is designed based on our

130
00:04:42,880 --> 00:04:46,320
insight formally speaking

131
00:04:44,880 --> 00:04:47,919
the insight is that the node

132
00:04:46,320 --> 00:04:49,919
representing a supporting lemma

133
00:04:47,919 --> 00:04:51,039
is on the incorrect path with lower

134
00:04:49,919 --> 00:04:54,240
probability

135
00:04:51,040 --> 00:04:58,000
when a random strategy is given it is

136
00:04:54,240 --> 00:05:00,800
proven in our appendix in our paper

137
00:04:58,000 --> 00:05:01,520
informally from the path a0 to air is

138
00:05:00,800 --> 00:05:05,120
estimated

139
00:05:01,520 --> 00:05:07,599
incorrect the probabilities of a1 a2

140
00:05:05,120 --> 00:05:09,680
to a minus 1 being supporting lamata

141
00:05:07,600 --> 00:05:12,000
decrease expansionally

142
00:05:09,680 --> 00:05:13,759
based on the insight we can leverage the

143
00:05:12,000 --> 00:05:14,880
incorrect passes to guide the path

144
00:05:13,759 --> 00:05:16,639
selection

145
00:05:14,880 --> 00:05:18,719
which can increase the probability of

146
00:05:16,639 --> 00:05:23,039
selecting nodes with supporting lamata

147
00:05:18,720 --> 00:05:25,360
in future rounds in our implementation

148
00:05:23,039 --> 00:05:26,880
we apply on insight by introducing deep

149
00:05:25,360 --> 00:05:29,840
q network

150
00:05:26,880 --> 00:05:30,719
dqa is a reinforcement learning agent

151
00:05:29,840 --> 00:05:33,758
for each node

152
00:05:30,720 --> 00:05:35,759
it computes the q value here the q value

153
00:05:33,759 --> 00:05:38,080
represents the probability of the node

154
00:05:35,759 --> 00:05:40,000
representing supporting lemma

155
00:05:38,080 --> 00:05:41,359
then it tends to select nodes with

156
00:05:40,000 --> 00:05:45,680
higher q values

157
00:05:41,360 --> 00:05:47,759
it adjusts q values by optimizing itself

158
00:05:45,680 --> 00:05:49,280
in our dynamic strategy we use the

159
00:05:47,759 --> 00:05:51,120
current to sell the path

160
00:05:49,280 --> 00:05:54,400
and optimize the decryption if the

161
00:05:51,120 --> 00:05:56,960
selected path is estimated incorrect

162
00:05:54,400 --> 00:05:58,880
according to our insight the dqm tends

163
00:05:56,960 --> 00:05:59,758
to select a node representing supporting

164
00:05:58,880 --> 00:06:01,840
lemma after it

165
00:05:59,759 --> 00:06:06,319
is optimized which leads to higher

166
00:06:01,840 --> 00:06:08,960
probability of successful verification

167
00:06:06,319 --> 00:06:10,479
taking ubk protocol as an example it is

168
00:06:08,960 --> 00:06:11,440
the most important case in our

169
00:06:10,479 --> 00:06:13,599
experiment

170
00:06:11,440 --> 00:06:14,800
because it is widely studied in recent

171
00:06:13,600 --> 00:06:16,720
years

172
00:06:14,800 --> 00:06:18,080
since it contains global states on

173
00:06:16,720 --> 00:06:19,840
normal decisions

174
00:06:18,080 --> 00:06:21,280
the large state space leads to

175
00:06:19,840 --> 00:06:23,440
non-termination for all the

176
00:06:21,280 --> 00:06:24,960
state-of-the-art tours

177
00:06:23,440 --> 00:06:26,960
therefore it still cannot be

178
00:06:24,960 --> 00:06:28,719
automatically verified

179
00:06:26,960 --> 00:06:30,000
no there to successfully verify the

180
00:06:28,720 --> 00:06:32,000
protocol

181
00:06:30,000 --> 00:06:33,759
tamarin improver needs additional human

182
00:06:32,000 --> 00:06:37,440
guidance to manually select the

183
00:06:33,759 --> 00:06:38,960
supporting laminator in verification

184
00:06:37,440 --> 00:06:41,039
here we illustrate a part of the

185
00:06:38,960 --> 00:06:43,120
verification tree the selection

186
00:06:41,039 --> 00:06:44,400
in step number eight on the credit rule

187
00:06:43,120 --> 00:06:46,840
path is b

188
00:06:44,400 --> 00:06:48,239
where selecting other nodes leads to

189
00:06:46,840 --> 00:06:50,318
non-termination

190
00:06:48,240 --> 00:06:52,720
however the default strategy of timer

191
00:06:50,319 --> 00:06:55,039
improver selects a in this step

192
00:06:52,720 --> 00:06:58,240
since a contains unsupporting lemma it

193
00:06:55,039 --> 00:07:00,560
leads to a loop in verification

194
00:06:58,240 --> 00:07:02,479
in contrast in our tool we achieve

195
00:07:00,560 --> 00:07:04,319
successful verification

196
00:07:02,479 --> 00:07:07,680
here we present the change of the q

197
00:07:04,319 --> 00:07:10,000
values of the nodes in step number eight

198
00:07:07,680 --> 00:07:10,720
initially the q value of each node is

199
00:07:10,000 --> 00:07:13,759
the same

200
00:07:10,720 --> 00:07:16,400
zero after 90 epochs

201
00:07:13,759 --> 00:07:17,440
you'll find that node a c d and e may

202
00:07:16,400 --> 00:07:19,440
lead to loops

203
00:07:17,440 --> 00:07:22,880
therefore there is a slighter difference

204
00:07:19,440 --> 00:07:27,520
in their q values with this value

205
00:07:22,880 --> 00:07:30,639
in epoch 40 the difference gets larger

206
00:07:27,520 --> 00:07:33,359
finally in epoch 79 our strategy selects

207
00:07:30,639 --> 00:07:34,319
b in step 8 and finds a credit proof

208
00:07:33,360 --> 00:07:37,039
pass

209
00:07:34,319 --> 00:07:39,120
in this epoch b skills value is much

210
00:07:37,039 --> 00:07:41,280
higher than its symbols

211
00:07:39,120 --> 00:07:42,800
based on the q values small wave

212
00:07:41,280 --> 00:07:44,638
automatically finds a node with

213
00:07:42,800 --> 00:07:46,560
supporting lama b

214
00:07:44,639 --> 00:07:50,160
such that the protocol can be verified

215
00:07:46,560 --> 00:07:52,400
without any user interaction

216
00:07:50,160 --> 00:07:53,759
in our implementation we solve several

217
00:07:52,400 --> 00:07:56,080
technical problems

218
00:07:53,759 --> 00:07:58,160
such as constructing verification tree

219
00:07:56,080 --> 00:08:01,520
estimating the correctness of the path

220
00:07:58,160 --> 00:08:03,360
and designing the rewards for the dqm

221
00:08:01,520 --> 00:08:06,240
in the tree construction process the

222
00:08:03,360 --> 00:08:09,919
tree is generated and expanded gradually

223
00:08:06,240 --> 00:08:11,680
to avoid memory explosion in each round

224
00:08:09,919 --> 00:08:13,680
only one of the endpoint nodes in the

225
00:08:11,680 --> 00:08:15,520
current tree is expanded

226
00:08:13,680 --> 00:08:18,560
the selection of the endpoint node is

227
00:08:15,520 --> 00:08:21,039
guided by the dql

228
00:08:18,560 --> 00:08:22,960
for the cranius determination process

229
00:08:21,039 --> 00:08:24,479
the main idea is to detect whether there

230
00:08:22,960 --> 00:08:26,239
are loops along the path

231
00:08:24,479 --> 00:08:28,639
since we find the loops may lead to

232
00:08:26,240 --> 00:08:30,720
non-termination in verification

233
00:08:28,639 --> 00:08:32,159
based on the observation we designed the

234
00:08:30,720 --> 00:08:34,159
loop detection algorithm

235
00:08:32,159 --> 00:08:36,159
to constant numbers of similar elements

236
00:08:34,159 --> 00:08:38,559
on the path

237
00:08:36,159 --> 00:08:40,080
in our dq when we estimate an incorrect

238
00:08:38,559 --> 00:08:42,079
path will give a negative

239
00:08:40,080 --> 00:08:44,080
reward for all the nodes on the path to

240
00:08:42,080 --> 00:08:46,000
adjust their q values

241
00:08:44,080 --> 00:08:47,920
as a result it can increase the

242
00:08:46,000 --> 00:08:50,399
probability of selecting nodes with

243
00:08:47,920 --> 00:08:52,240
supporting lamata in future rounds

244
00:08:50,399 --> 00:08:55,839
which leads to higher probability of

245
00:08:52,240 --> 00:08:55,839
successful verification

246
00:08:56,000 --> 00:08:59,519
in our experiments we choose typical

247
00:08:58,160 --> 00:09:02,640
state-of-the-art tools

248
00:08:59,519 --> 00:09:04,160
such as state values set pi gswells

249
00:09:02,640 --> 00:09:07,519
and tamarind proverbs with different

250
00:09:04,160 --> 00:09:09,519
heuristics to compare with smart

251
00:09:07,519 --> 00:09:11,519
the study protocols include all the

252
00:09:09,519 --> 00:09:14,640
protocols that have been evaluated

253
00:09:11,519 --> 00:09:16,720
in papers of the compared tools and five

254
00:09:14,640 --> 00:09:18,000
protocols with observation equivalence

255
00:09:16,720 --> 00:09:19,760
properties

256
00:09:18,000 --> 00:09:22,160
we calculate the set rate of

257
00:09:19,760 --> 00:09:24,000
automatically verifying 24 protocols

258
00:09:22,160 --> 00:09:25,199
with some boundary sessions using each

259
00:09:24,000 --> 00:09:27,839
tool as

260
00:09:25,200 --> 00:09:29,440
illustrated in the table smartwave can

261
00:09:27,839 --> 00:09:31,440
fully automatically verify all the

262
00:09:29,440 --> 00:09:34,160
protocols

263
00:09:31,440 --> 00:09:35,680
note that except 24 protocol cases there

264
00:09:34,160 --> 00:09:39,519
are many practical protocols

265
00:09:35,680 --> 00:09:42,239
such as trs 5g aka smart contrast

266
00:09:39,519 --> 00:09:43,519
and a blockchain protocol they cannot be

267
00:09:42,240 --> 00:09:45,040
automatically verified by

268
00:09:43,519 --> 00:09:47,040
state-of-the-art tools

269
00:09:45,040 --> 00:09:49,760
but can be fully automatically verified

270
00:09:47,040 --> 00:09:51,760
by smartwear

271
00:09:49,760 --> 00:09:54,000
for the efficiency and overhead of smart

272
00:09:51,760 --> 00:09:56,640
valve we use two metrics

273
00:09:54,000 --> 00:09:58,800
the running time and the training epochs

274
00:09:56,640 --> 00:10:01,360
the results show that our tool verifies

275
00:09:58,800 --> 00:10:03,680
protocols in a very efficient way

276
00:10:01,360 --> 00:10:04,640
for most protocols the epochs are less

277
00:10:03,680 --> 00:10:07,439
than 25

278
00:10:04,640 --> 00:10:10,800
and it costs less than half an hour the

279
00:10:07,440 --> 00:10:14,800
worst case is pkcs number 11 protocol

280
00:10:10,800 --> 00:10:18,319
our tour uses 175 epochs and 83 minutes

281
00:10:14,800 --> 00:10:20,479
to find the credit proof pass

282
00:10:18,320 --> 00:10:22,000
in conclusion we solve the problem of

283
00:10:20,480 --> 00:10:24,959
automatically verifying security

284
00:10:22,000 --> 00:10:26,640
protocols using a novel dynamic strategy

285
00:10:24,959 --> 00:10:28,239
this is the first framework that

286
00:10:26,640 --> 00:10:30,319
automatically verifies security

287
00:10:28,240 --> 00:10:33,279
protocols by the length strategies

288
00:10:30,320 --> 00:10:35,200
to the best our knowledge the strategy

289
00:10:33,279 --> 00:10:36,800
is achieved by using the dqr

290
00:10:35,200 --> 00:10:39,360
and designing the rewards and the

291
00:10:36,800 --> 00:10:41,199
greatness estimating algorithm

292
00:10:39,360 --> 00:10:42,640
our work achieved generality in

293
00:10:41,200 --> 00:10:46,480
designing heuristics

294
00:10:42,640 --> 00:10:48,399
and full automation in verification

295
00:10:46,480 --> 00:10:50,480
in our future work we will use an

296
00:10:48,399 --> 00:10:51,040
optimized dating strategy as the initial

297
00:10:50,480 --> 00:10:53,440
strategy

298
00:10:51,040 --> 00:10:55,599
in smartwatch we will also apply our

299
00:10:53,440 --> 00:10:57,839
dynamic strategy to other problems

300
00:10:55,600 --> 00:11:00,000
such as automated formal verification of

301
00:10:57,839 --> 00:11:02,240
software or systems

302
00:11:00,000 --> 00:11:04,320
besides we will optimize the efficiency

303
00:11:02,240 --> 00:11:05,440
of smartwatch

304
00:11:04,320 --> 00:11:15,839
thank you for listening for my

305
00:11:05,440 --> 00:11:15,839
presentation do you have any questions

306
00:11:17,200 --> 00:11:19,279
you

