1
00:00:08,160 --> 00:00:10,800
good morning

2
00:00:08,880 --> 00:00:12,160
i'm being from hong kong university of

3
00:00:10,800 --> 00:00:14,080
stems and technology

4
00:00:12,160 --> 00:00:15,519
i'm really grateful to get to share with

5
00:00:14,080 --> 00:00:17,680
you the work that we

6
00:00:15,519 --> 00:00:20,160
on understanding the security risks in

7
00:00:17,680 --> 00:00:22,000
cross-class iot access education

8
00:00:20,160 --> 00:00:23,920
which is a joint work from hardware

9
00:00:22,000 --> 00:00:26,240
university of samsung technology

10
00:00:23,920 --> 00:00:27,039
indiana university bloomington syrian

11
00:00:26,240 --> 00:00:29,279
university

12
00:00:27,039 --> 00:00:30,240
and the university of chinese academy of

13
00:00:29,279 --> 00:00:32,079
some cities

14
00:00:30,240 --> 00:00:34,000
this work was done where i was doing

15
00:00:32,079 --> 00:00:35,120
postdoc at indiana university

16
00:00:34,000 --> 00:00:38,320
bloomington

17
00:00:35,120 --> 00:00:39,360
so the polarity of iot gives its rise to

18
00:00:38,320 --> 00:00:42,000
the demand for

19
00:00:39,360 --> 00:00:44,079
effectively managing the iot devices

20
00:00:42,000 --> 00:00:47,519
which has been supported by the iot

21
00:00:44,079 --> 00:00:48,399
clouds operated by both the device

22
00:00:47,520 --> 00:00:51,760
vendors and

23
00:00:48,399 --> 00:00:54,559
the cloud service providers also today's

24
00:00:51,760 --> 00:00:57,039
lg clouds tend to provide complicated

25
00:00:54,559 --> 00:00:59,760
functionalities such

26
00:00:57,039 --> 00:01:01,840
cross as device control and the sharing

27
00:00:59,760 --> 00:01:03,760
of device access

28
00:01:01,840 --> 00:01:05,199
in order to meet different user

29
00:01:03,760 --> 00:01:07,439
requirements for example

30
00:01:05,199 --> 00:01:08,479
a user might want to use one single

31
00:01:07,439 --> 00:01:10,960
console to

32
00:01:08,479 --> 00:01:12,320
manage all the devices from different

33
00:01:10,960 --> 00:01:14,798
vendors

34
00:01:12,320 --> 00:01:17,520
supporting these functionalities is the

35
00:01:14,799 --> 00:01:20,240
homegrown delegation mechanisms

36
00:01:17,520 --> 00:01:20,880
developed by different iot clouds for

37
00:01:20,240 --> 00:01:23,679
example

38
00:01:20,880 --> 00:01:24,158
google home uses a customized oauth

39
00:01:23,680 --> 00:01:26,799
project

40
00:01:24,159 --> 00:01:29,439
for access delegation also such

41
00:01:26,799 --> 00:01:30,000
mechanisms can support delegation across

42
00:01:29,439 --> 00:01:32,960
different

43
00:01:30,000 --> 00:01:35,040
clouds and users this can lead to a

44
00:01:32,960 --> 00:01:38,399
convoluted delegation chain

45
00:01:35,040 --> 00:01:40,000
whose complicated authorization

46
00:01:38,400 --> 00:01:42,479
operations could easily go

47
00:01:40,000 --> 00:01:43,360
wrong however neither has been done so

48
00:01:42,479 --> 00:01:46,079
far to

49
00:01:43,360 --> 00:01:48,720
systematically analysis and understand

50
00:01:46,079 --> 00:01:50,079
the circuit the security implications of

51
00:01:48,720 --> 00:01:52,560
such mechanisms

52
00:01:50,079 --> 00:01:53,600
level to this end we consider astrid

53
00:01:52,560 --> 00:01:55,920
moderating

54
00:01:53,600 --> 00:01:56,719
well the delegate t user can be

55
00:01:55,920 --> 00:01:59,680
malicious

56
00:01:56,719 --> 00:02:01,119
aiming to gain unauthorized access to

57
00:01:59,680 --> 00:02:04,799
iot devices

58
00:02:01,119 --> 00:02:07,759
while the iot clouds the devices and the

59
00:02:04,799 --> 00:02:10,399
administrator are blind we also assume

60
00:02:07,759 --> 00:02:12,959
the adversary is capable of

61
00:02:10,399 --> 00:02:15,040
extracting information from system logs

62
00:02:12,959 --> 00:02:18,640
of official documentations

63
00:02:15,040 --> 00:02:20,959
and the network traffic between the iot

64
00:02:18,640 --> 00:02:23,279
cloud and his mobile phone

65
00:02:20,959 --> 00:02:24,560
notified throughout this talk we call

66
00:02:23,280 --> 00:02:27,680
the party delegating

67
00:02:24,560 --> 00:02:30,640
access right to another party delegator

68
00:02:27,680 --> 00:02:31,200
and the recipient of the right delegatee

69
00:02:30,640 --> 00:02:33,920
also

70
00:02:31,200 --> 00:02:35,920
a a delegator could be a delegated user

71
00:02:33,920 --> 00:02:37,679
or a dedicated cloud and then the

72
00:02:35,920 --> 00:02:42,720
delegate t could also be

73
00:02:37,680 --> 00:02:45,840
a delegate to user and a dedicated cloud

74
00:02:42,720 --> 00:02:47,920
and we further summarize the circuit the

75
00:02:45,840 --> 00:02:50,879
security requirement for iot

76
00:02:47,920 --> 00:02:53,760
for iot delegation first it is important

77
00:02:50,879 --> 00:02:56,000
that the delegation policy among all the

78
00:02:53,760 --> 00:02:58,399
parties involved in the delegation chain

79
00:02:56,000 --> 00:03:00,640
are safe and consistent

80
00:02:58,400 --> 00:03:01,519
further the enforcement of a delegation

81
00:03:00,640 --> 00:03:04,319
policy is

82
00:03:01,519 --> 00:03:05,040
expected to be comprehensive and none by

83
00:03:04,319 --> 00:03:08,238
possible

84
00:03:05,040 --> 00:03:10,000
blocking all i value of unauthorized

85
00:03:08,239 --> 00:03:12,720
access

86
00:03:10,000 --> 00:03:14,640
also important is the transit is the

87
00:03:12,720 --> 00:03:17,120
transitive delegation control

88
00:03:14,640 --> 00:03:18,399
for example once a delegate once a

89
00:03:17,120 --> 00:03:20,800
delegate revokes

90
00:03:18,400 --> 00:03:22,720
its delegates exists right all

91
00:03:20,800 --> 00:03:23,519
downstream parties in the delegation

92
00:03:22,720 --> 00:03:26,640
changed

93
00:03:23,519 --> 00:03:29,840
should all follow suit the risks here is

94
00:03:26,640 --> 00:03:32,200
that today's lg class often

95
00:03:29,840 --> 00:03:34,159
utilize the individual and the

96
00:03:32,200 --> 00:03:36,959
heterogeneous

97
00:03:34,159 --> 00:03:37,920
delegation protocols that may not be

98
00:03:36,959 --> 00:03:40,239
compatible

99
00:03:37,920 --> 00:03:41,760
with those of other clouds and may not

100
00:03:40,239 --> 00:03:44,239
have been properly

101
00:03:41,760 --> 00:03:45,440
for example we found the delegation into

102
00:03:44,239 --> 00:03:49,120
our cloud is

103
00:03:45,440 --> 00:03:52,239
vulnerable which actually motivated this

104
00:03:49,120 --> 00:03:54,560
our this study specifically tui allows

105
00:03:52,239 --> 00:03:56,959
the administrator aka the device owner

106
00:03:54,560 --> 00:03:59,680
to share the device access with

107
00:03:56,959 --> 00:04:01,920
other users also julia allows the

108
00:03:59,680 --> 00:04:04,959
delegate user to further delegate

109
00:04:01,920 --> 00:04:08,159
access to google home by issuing

110
00:04:04,959 --> 00:04:08,480
um auth token to google home however we

111
00:04:08,159 --> 00:04:10,879
found

112
00:04:08,480 --> 00:04:13,040
that after the device owner revokes the

113
00:04:10,879 --> 00:04:16,238
delegated users access right

114
00:04:13,040 --> 00:04:17,680
in the two-year cloud the dedicated user

115
00:04:16,238 --> 00:04:20,478
can still use the

116
00:04:17,680 --> 00:04:22,560
google home app to control the device

117
00:04:20,478 --> 00:04:23,199
which is not entitled to access it

118
00:04:22,560 --> 00:04:26,240
anymore

119
00:04:23,199 --> 00:04:29,280
this is because the old stock issue to

120
00:04:26,240 --> 00:04:32,560
issue to google home is still valid and

121
00:04:29,280 --> 00:04:34,159
this clearly violates the transitive

122
00:04:32,560 --> 00:04:36,960
delegation control now

123
00:04:34,160 --> 00:04:38,720
if we take a closer look at this case we

124
00:04:36,960 --> 00:04:41,440
can observe a few things

125
00:04:38,720 --> 00:04:43,600
which actually needed to our further

126
00:04:41,440 --> 00:04:46,400
design of how to discover

127
00:04:43,600 --> 00:04:47,680
vulnerabilities in iot delegation in a

128
00:04:46,400 --> 00:04:50,000
more automatic way

129
00:04:47,680 --> 00:04:51,199
the first thing we can see here is that

130
00:04:50,000 --> 00:04:54,000
there are multiple

131
00:04:51,199 --> 00:04:54,800
operations in this setting such as bind

132
00:04:54,000 --> 00:04:58,080
share and

133
00:04:54,800 --> 00:04:59,040
all operations secondly there is always

134
00:04:58,080 --> 00:05:01,120
data flow

135
00:04:59,040 --> 00:05:02,400
occurring along with each operation for

136
00:05:01,120 --> 00:05:04,720
instance the

137
00:05:02,400 --> 00:05:06,719
two-year cloud sinks an oauth token to

138
00:05:04,720 --> 00:05:09,759
the google home cloud during the

139
00:05:06,720 --> 00:05:10,479
operation of all also the clouds usually

140
00:05:09,759 --> 00:05:13,280
conduct

141
00:05:10,479 --> 00:05:14,159
access control checks and forward access

142
00:05:13,280 --> 00:05:16,638
requests

143
00:05:14,160 --> 00:05:18,960
to its upstream actors for example the

144
00:05:16,639 --> 00:05:20,080
two-year cloud takes the access request

145
00:05:18,960 --> 00:05:23,680
from google home and

146
00:05:20,080 --> 00:05:26,000
forward it to the device if a provided

147
00:05:23,680 --> 00:05:29,280
of all stockings provided

148
00:05:26,000 --> 00:05:32,320
and at last we can see that the

149
00:05:29,280 --> 00:05:34,880
access to the device could be a multiple

150
00:05:32,320 --> 00:05:35,599
step path such as from google home to

151
00:05:34,880 --> 00:05:38,800
two year and

152
00:05:35,600 --> 00:05:40,400
then to the plot further the same

153
00:05:38,800 --> 00:05:42,960
observations are found

154
00:05:40,400 --> 00:05:43,919
in all the iot class that were studied

155
00:05:42,960 --> 00:05:46,320
for example

156
00:05:43,919 --> 00:05:47,280
uh leafy's cloud also supports all

157
00:05:46,320 --> 00:05:49,680
operations

158
00:05:47,280 --> 00:05:50,320
and the field queue provides an api

159
00:05:49,680 --> 00:05:53,520
request

160
00:05:50,320 --> 00:05:56,400
to send its delegatee claude the

161
00:05:53,520 --> 00:05:57,359
whiteness id and auth token which are

162
00:05:56,400 --> 00:06:00,400
used

163
00:05:57,360 --> 00:06:02,240
for access control checks so starting

164
00:06:00,400 --> 00:06:05,198
from the manually discovered

165
00:06:02,240 --> 00:06:07,600
two-year case we wanted to discover the

166
00:06:05,199 --> 00:06:10,880
iot delegation vulnerabilities

167
00:06:07,600 --> 00:06:13,280
more automatically and with the

168
00:06:10,880 --> 00:06:14,960
common delegation part identified in the

169
00:06:13,280 --> 00:06:17,520
different iot settings

170
00:06:14,960 --> 00:06:19,599
we believe the formal verification

171
00:06:17,520 --> 00:06:22,639
technique can be used here

172
00:06:19,600 --> 00:06:24,960
specifically we designed the route

173
00:06:22,639 --> 00:06:26,560
which is as far as we know the first

174
00:06:24,960 --> 00:06:28,799
verification tool

175
00:06:26,560 --> 00:06:30,560
for iot class cloud delegation

176
00:06:28,800 --> 00:06:33,520
volability discovery

177
00:06:30,560 --> 00:06:34,080
at the high level we define the security

178
00:06:33,520 --> 00:06:36,799
property

179
00:06:34,080 --> 00:06:38,000
as an authorized delegated user should

180
00:06:36,800 --> 00:06:41,680
not have a path

181
00:06:38,000 --> 00:06:44,960
to access lg devices by

182
00:06:41,680 --> 00:06:46,160
access pass we mean that the delegated

183
00:06:44,960 --> 00:06:48,719
user host

184
00:06:46,160 --> 00:06:50,880
holds tokens that would pass other

185
00:06:48,720 --> 00:06:54,240
actors exist control check

186
00:06:50,880 --> 00:06:56,960
and eventually allows him to

187
00:06:54,240 --> 00:06:58,880
reach the device another part and to

188
00:06:56,960 --> 00:07:01,359
verify the security

189
00:06:58,880 --> 00:07:03,120
property we modeled the iot delegation

190
00:07:01,360 --> 00:07:05,599
as a transition system

191
00:07:03,120 --> 00:07:07,120
in which each stage records the tokens

192
00:07:05,599 --> 00:07:10,719
that the actors receive

193
00:07:07,120 --> 00:07:11,440
from or issued to other actors during

194
00:07:10,720 --> 00:07:14,479
the

195
00:07:11,440 --> 00:07:15,280
delegation operations and each operation

196
00:07:14,479 --> 00:07:18,479
is defined

197
00:07:15,280 --> 00:07:19,359
by its corresponding delegator

198
00:07:18,479 --> 00:07:22,719
delegating

199
00:07:19,360 --> 00:07:25,599
the data flow and the access right

200
00:07:22,720 --> 00:07:26,479
level driven by the operations the

201
00:07:25,599 --> 00:07:29,599
system can

202
00:07:26,479 --> 00:07:30,560
transit from one state to the next with

203
00:07:29,599 --> 00:07:33,360
such a model

204
00:07:30,560 --> 00:07:35,440
we are able to detect flows in iot

205
00:07:33,360 --> 00:07:36,800
delegation setting by using a model

206
00:07:35,440 --> 00:07:40,000
checker to verify

207
00:07:36,800 --> 00:07:43,199
whether there is a path from the

208
00:07:40,000 --> 00:07:44,879
authorized user to the device in each

209
00:07:43,199 --> 00:07:47,840
stage of the market the most

210
00:07:44,879 --> 00:07:50,240
challenging here is to model different

211
00:07:47,840 --> 00:07:52,080
railroad iot systems since they usually

212
00:07:50,240 --> 00:07:52,639
support different operations with

213
00:07:52,080 --> 00:07:56,000
different

214
00:07:52,639 --> 00:07:56,800
data flows to this end we built a base

215
00:07:56,000 --> 00:07:59,280
model

216
00:07:56,800 --> 00:08:01,199
that includes a minimum set of actors

217
00:07:59,280 --> 00:08:04,239
and delegation operations that

218
00:08:01,199 --> 00:08:05,039
trigger the stage transitions and we

219
00:08:04,240 --> 00:08:08,080
also built

220
00:08:05,039 --> 00:08:09,039
a set of templates for different types

221
00:08:08,080 --> 00:08:11,440
of

222
00:08:09,039 --> 00:08:12,719
delegation operations which can be

223
00:08:11,440 --> 00:08:16,240
directly used

224
00:08:12,720 --> 00:08:16,720
customized or even extended by the use

225
00:08:16,240 --> 00:08:20,160
of

226
00:08:16,720 --> 00:08:21,840
variety and to verify the real-world

227
00:08:20,160 --> 00:08:24,240
delegation systems

228
00:08:21,840 --> 00:08:25,119
one can build a configuration file to

229
00:08:24,240 --> 00:08:27,680
list the

230
00:08:25,120 --> 00:08:28,639
actors the operations and their

231
00:08:27,680 --> 00:08:31,840
templates

232
00:08:28,639 --> 00:08:33,440
then our model takes as input this

233
00:08:31,840 --> 00:08:36,319
configuration file to

234
00:08:33,440 --> 00:08:36,880
automatically generate um executable

235
00:08:36,320 --> 00:08:40,080
model

236
00:08:36,880 --> 00:08:41,599
and uses spin which is an off-the-shelf

237
00:08:40,080 --> 00:08:44,080
model checker to verify

238
00:08:41,599 --> 00:08:44,959
the security property and outputs the

239
00:08:44,080 --> 00:08:48,240
flows

240
00:08:44,959 --> 00:08:50,560
reports with the help of variety

241
00:08:48,240 --> 00:08:52,800
we have discovered six vulnerabilities

242
00:08:50,560 --> 00:08:53,599
in the iot cloud including google home

243
00:08:52,800 --> 00:08:58,240
smart things

244
00:08:53,600 --> 00:09:00,000
and ifttt here we report two of them

245
00:08:58,240 --> 00:09:02,320
the first floor is caused by the

246
00:09:00,000 --> 00:09:04,320
inadequate cross-cloud coordination

247
00:09:02,320 --> 00:09:06,560
specifically google home uses a

248
00:09:04,320 --> 00:09:09,120
customized os protocol

249
00:09:06,560 --> 00:09:10,319
in which one being delegated from the

250
00:09:09,120 --> 00:09:12,480
smartthings cloud

251
00:09:10,320 --> 00:09:14,800
google home requests the device id of

252
00:09:12,480 --> 00:09:18,320
the device in the smart themes cloud

253
00:09:14,800 --> 00:09:20,240
and google home discloses this device id

254
00:09:18,320 --> 00:09:22,880
to the google home users

255
00:09:20,240 --> 00:09:25,120
we found that such a delegation process

256
00:09:22,880 --> 00:09:25,680
introduces a new security risk because

257
00:09:25,120 --> 00:09:28,240
of the

258
00:09:25,680 --> 00:09:29,839
misaligned security requirements between

259
00:09:28,240 --> 00:09:32,399
these two clouds

260
00:09:29,839 --> 00:09:35,120
in fact summer themes uses the device

261
00:09:32,399 --> 00:09:36,480
idi's authentication token for trigger

262
00:09:35,120 --> 00:09:38,480
action management

263
00:09:36,480 --> 00:09:40,560
however due to the lack of knowledge

264
00:09:38,480 --> 00:09:43,120
about the security implication of

265
00:09:40,560 --> 00:09:45,439
smart themes device id google home fails

266
00:09:43,120 --> 00:09:46,640
to provide a strict protection on this

267
00:09:45,440 --> 00:09:49,440
information

268
00:09:46,640 --> 00:09:50,000
these different security assumptions on

269
00:09:49,440 --> 00:09:52,560
the address

270
00:09:50,000 --> 00:09:55,120
id between google home and smart things

271
00:09:52,560 --> 00:09:55,760
enables a malicious dedicated user for

272
00:09:55,120 --> 00:09:58,880
example

273
00:09:55,760 --> 00:10:00,000
an airbnb guest to spoof event with the

274
00:09:58,880 --> 00:10:02,079
device id

275
00:10:00,000 --> 00:10:05,040
to trigger smart things to open the

276
00:10:02,079 --> 00:10:08,160
owner's door even after he checks art

277
00:10:05,040 --> 00:10:11,439
and variety helped us to discover

278
00:10:08,160 --> 00:10:13,680
such an unauthorized access post

279
00:10:11,440 --> 00:10:16,399
we also found the flaws caused by the

280
00:10:13,680 --> 00:10:19,279
inadequate policy enforcement

281
00:10:16,399 --> 00:10:21,519
to mediate remote access requests

282
00:10:19,279 --> 00:10:22,320
failure secure perform checks both in

283
00:10:21,519 --> 00:10:26,959
the cloud

284
00:10:22,320 --> 00:10:30,480
and in the bridge with two tokens

285
00:10:26,959 --> 00:10:33,439
also field sql provides an api to

286
00:10:30,480 --> 00:10:35,440
delegate access to third-party class the

287
00:10:33,440 --> 00:10:38,079
problem we found here is that

288
00:10:35,440 --> 00:10:38,720
when reworking a user's access right

289
00:10:38,079 --> 00:10:41,599
phillips

290
00:10:38,720 --> 00:10:42,560
only invalidates the token that is used

291
00:10:41,600 --> 00:10:45,360
for

292
00:10:42,560 --> 00:10:46,479
the access check in the bridge not that

293
00:10:45,360 --> 00:10:48,720
in the cloud

294
00:10:46,480 --> 00:10:51,120
this incomplete revocation scheme

295
00:10:48,720 --> 00:10:54,399
enables a malicious user to

296
00:10:51,120 --> 00:10:57,120
abuse the api to gain new tokens and

297
00:10:54,399 --> 00:10:58,240
thus to remotely control the philips hue

298
00:10:57,120 --> 00:11:01,440
devices

299
00:10:58,240 --> 00:11:05,200
which is not entitled to access

300
00:11:01,440 --> 00:11:07,600
any longer and to sum up our findings

301
00:11:05,200 --> 00:11:09,440
suggested that the heterogeneous and

302
00:11:07,600 --> 00:11:12,640
ad-hoc delegation process

303
00:11:09,440 --> 00:11:15,200
is the root cause for this flaws in the

304
00:11:12,640 --> 00:11:16,000
absence of a standardized and fully

305
00:11:15,200 --> 00:11:18,720
verified

306
00:11:16,000 --> 00:11:19,360
delegation project one should take extra

307
00:11:18,720 --> 00:11:22,160
caution

308
00:11:19,360 --> 00:11:23,680
when applying a customized authorization

309
00:11:22,160 --> 00:11:26,160
scheme to today's

310
00:11:23,680 --> 00:11:27,040
already complicated iot delegation

311
00:11:26,160 --> 00:11:30,560
specifically

312
00:11:27,040 --> 00:11:31,519
it is recommended to establish a channel

313
00:11:30,560 --> 00:11:33,680
between the

314
00:11:31,519 --> 00:11:36,160
delegation clause to exchange the

315
00:11:33,680 --> 00:11:38,640
circuit assumptions and the constraints

316
00:11:36,160 --> 00:11:40,319
and to discover the delegated cloud and

317
00:11:38,640 --> 00:11:42,880
the delegator cloud

318
00:11:40,320 --> 00:11:44,160
in order to reduce the inadvertent

319
00:11:42,880 --> 00:11:46,959
policy violation

320
00:11:44,160 --> 00:11:49,199
and one should to verify the delegation

321
00:11:46,959 --> 00:11:52,000
design whenever possible we have

322
00:11:49,200 --> 00:11:52,399
open sourced our tour and published all

323
00:11:52,000 --> 00:11:55,120
the

324
00:11:52,399 --> 00:11:57,440
related materials please refer to our

325
00:11:55,120 --> 00:12:01,040
website for all the details

326
00:11:57,440 --> 00:12:01,040
that's all thank you so much for your

327
00:12:07,720 --> 00:12:10,720
time

