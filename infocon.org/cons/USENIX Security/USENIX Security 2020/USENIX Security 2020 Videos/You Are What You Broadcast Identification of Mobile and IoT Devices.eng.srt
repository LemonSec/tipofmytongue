1
00:00:09,599 --> 00:00:12,960
hello everyone

2
00:00:10,559 --> 00:00:14,000
i'm evening from chinese academy of

3
00:00:12,960 --> 00:00:15,839
sciences

4
00:00:14,000 --> 00:00:18,000
it's my great player to attend this

5
00:00:15,839 --> 00:00:20,000
conference and present our paper

6
00:00:18,000 --> 00:00:22,640
the title of the paper is your water

7
00:00:20,000 --> 00:00:25,279
broadcast identification of mobile and

8
00:00:22,640 --> 00:00:28,240
iot devices from public wi-fi

9
00:00:25,279 --> 00:00:30,480
the authors are unintentional matching

10
00:00:28,240 --> 00:00:32,800
joshua

11
00:00:30,480 --> 00:00:34,800
this is collaborative research among

12
00:00:32,800 --> 00:00:37,599
chinese academy of sciences

13
00:00:34,800 --> 00:00:40,239
the university of kansas and cinco

14
00:00:37,600 --> 00:00:40,239
university

15
00:00:42,160 --> 00:00:46,800
in this paper we focus on the problem of

16
00:00:44,879 --> 00:00:48,399
device identification

17
00:00:46,800 --> 00:00:50,160
this has been an important and

18
00:00:48,399 --> 00:00:50,879
challenging problem in network

19
00:00:50,160 --> 00:00:53,599
management

20
00:00:50,879 --> 00:00:58,559
device management several situational

21
00:00:53,600 --> 00:01:01,520
wireless and many other applications

22
00:00:58,559 --> 00:01:04,080
in a wireless network it is essential

23
00:01:01,520 --> 00:01:05,680
for system administrators to identify

24
00:01:04,080 --> 00:01:08,640
connected devices

25
00:01:05,680 --> 00:01:10,320
and manage those devices accordingly the

26
00:01:08,640 --> 00:01:13,280
first task of our project

27
00:01:10,320 --> 00:01:14,960
is to identify the manufacturing type

28
00:01:13,280 --> 00:01:18,640
and model of devices

29
00:01:14,960 --> 00:01:18,640
connect to a wifi network

30
00:01:20,000 --> 00:01:24,479
on the other hand both the system

31
00:01:22,200 --> 00:01:26,720
administrator and the users

32
00:01:24,479 --> 00:01:28,320
are interested in finding out if there's

33
00:01:26,720 --> 00:01:31,360
any malicious device

34
00:01:28,320 --> 00:01:33,600
in the network so our third task

35
00:01:31,360 --> 00:01:35,119
is to detect malicious device or

36
00:01:33,600 --> 00:01:37,360
abnormal devices

37
00:01:35,119 --> 00:01:41,840
whose network traffic develops from the

38
00:01:37,360 --> 00:01:41,840
line patterns

39
00:01:41,920 --> 00:01:46,640
on a mobile or iot device is connected

40
00:01:44,799 --> 00:01:49,439
to a wireless network

41
00:01:46,640 --> 00:01:50,159
it constantly sends out broadcast or

42
00:01:49,439 --> 00:01:53,360
multicast

43
00:01:50,159 --> 00:01:56,640
packets such as dhcp mds

44
00:01:53,360 --> 00:01:59,119
ssdp and so on the core idea about

45
00:01:56,640 --> 00:02:03,200
solution is to fingerprint devices

46
00:01:59,119 --> 00:02:03,200
using features from these packets

47
00:02:04,479 --> 00:02:08,000
to start we went out to collect data

48
00:02:07,280 --> 00:02:11,280
from public

49
00:02:08,000 --> 00:02:14,319
wireless networks such as hotel wi-fi

50
00:02:11,280 --> 00:02:16,959
airport wi-fi coffee shops and so on we

51
00:02:14,319 --> 00:02:19,359
connected our laptops to open wi-fi

52
00:02:16,959 --> 00:02:21,680
networks and received all broadcast

53
00:02:19,360 --> 00:02:23,040
and multicast package that were

54
00:02:21,680 --> 00:02:25,599
delivered to us

55
00:02:23,040 --> 00:02:29,599
we also collect the data from our own

56
00:02:25,599 --> 00:02:29,599
homes and our lab networks

57
00:02:31,360 --> 00:02:36,000
in about half a year we collected the

58
00:02:33,519 --> 00:02:39,200
broadcast in the multicast package

59
00:02:36,000 --> 00:02:42,080
from 176 wi-fi networks

60
00:02:39,200 --> 00:02:43,839
from seven countries our data set

61
00:02:42,080 --> 00:02:44,879
contains more than thirty thousand

62
00:02:43,840 --> 00:02:47,760
devices

63
00:02:44,879 --> 00:02:51,840
each device is identified by its unique

64
00:02:47,760 --> 00:02:51,840
mac address

65
00:02:51,920 --> 00:02:56,799
we would like to note that our data was

66
00:02:54,319 --> 00:02:57,760
collected as well completely passive

67
00:02:56,800 --> 00:03:00,560
approach

68
00:02:57,760 --> 00:03:02,799
we didn't have promised growth mode

69
00:03:00,560 --> 00:03:04,879
which means we were the legitimate

70
00:03:02,800 --> 00:03:07,440
and intentional reserves of this

71
00:03:04,879 --> 00:03:09,679
broadcast and multicast package

72
00:03:07,440 --> 00:03:10,480
we have discussed the data collection

73
00:03:09,680 --> 00:03:15,280
process

74
00:03:10,480 --> 00:03:15,280
with two irbs and got their approval

75
00:03:15,760 --> 00:03:21,840
we attempted to level the devices first

76
00:03:19,120 --> 00:03:23,760
we are able to physically approach about

77
00:03:21,840 --> 00:03:26,239
400 devices

78
00:03:23,760 --> 00:03:26,798
and label each of them with manufactural

79
00:03:26,239 --> 00:03:30,239
type and

80
00:03:26,799 --> 00:03:33,200
model this is the ground choice data set

81
00:03:30,239 --> 00:03:35,120
last we use human intelligence to

82
00:03:33,200 --> 00:03:37,839
examine any readable content

83
00:03:35,120 --> 00:03:38,640
in these packets we were able to

84
00:03:37,840 --> 00:03:42,720
annotate

85
00:03:38,640 --> 00:03:46,079
about 4000 devices with all three labels

86
00:03:42,720 --> 00:03:49,840
in addition we also annotated over

87
00:03:46,080 --> 00:03:52,879
6000 devices with manufacturer on tap

88
00:03:49,840 --> 00:03:55,840
but not the exact model we left

89
00:03:52,879 --> 00:03:57,840
over 15 on the devices with only

90
00:03:55,840 --> 00:04:01,120
manufacturer

91
00:03:57,840 --> 00:04:03,920
finally we took the annotated data set

92
00:04:01,120 --> 00:04:04,560
and removed all umar interpretable

93
00:04:03,920 --> 00:04:07,359
contents

94
00:04:04,560 --> 00:04:10,560
from the packet we call this the

95
00:04:07,360 --> 00:04:10,560
centralized data

96
00:04:12,000 --> 00:04:15,599
we extracted the three types of features

97
00:04:14,400 --> 00:04:18,639
from the data

98
00:04:15,599 --> 00:04:19,358
the first is the ident files such as mac

99
00:04:18,639 --> 00:04:21,519
prefix

100
00:04:19,358 --> 00:04:23,359
and the host name attributes from the

101
00:04:21,519 --> 00:04:25,120
dhcp packets

102
00:04:23,360 --> 00:04:27,360
the carry significant amount of

103
00:04:25,120 --> 00:04:28,720
information that may help with device

104
00:04:27,360 --> 00:04:31,759
identification

105
00:04:28,720 --> 00:04:34,479
however they often are available except

106
00:04:31,759 --> 00:04:36,880
mac prefix meanwhile some of them could

107
00:04:34,479 --> 00:04:39,599
be easily tempered by anyone who knows

108
00:04:36,880 --> 00:04:39,600
their os

109
00:04:41,600 --> 00:04:44,639
our bone features are key value pairs

110
00:04:44,400 --> 00:04:46,880
and

111
00:04:44,639 --> 00:04:47,680
pseudo-lateral language features

112
00:04:46,880 --> 00:04:50,000
extracted

113
00:04:47,680 --> 00:04:51,919
from the content of the broadcast and

114
00:04:50,000 --> 00:04:54,320
mudcast packets

115
00:04:51,919 --> 00:04:56,880
they are almost always available and

116
00:04:54,320 --> 00:04:59,120
relatively reliable it's actually not

117
00:04:56,880 --> 00:05:01,600
easy to tap with those boring numbers

118
00:04:59,120 --> 00:05:03,759
and the codes without being noticed

119
00:05:01,600 --> 00:05:06,000
later our model will show that these

120
00:05:03,759 --> 00:05:10,960
features provide abundant information

121
00:05:06,000 --> 00:05:13,199
for device identification

122
00:05:10,960 --> 00:05:15,680
finally we extracted the features from

123
00:05:13,199 --> 00:05:19,440
the device description files retrieved

124
00:05:15,680 --> 00:05:21,600
through the url in ssdp notify packets

125
00:05:19,440 --> 00:05:25,840
they were only used in validating the

126
00:05:21,600 --> 00:05:25,840
accuracy of our approach

127
00:05:26,400 --> 00:05:29,679
our initial observations tell us the

128
00:05:28,800 --> 00:05:32,080
reasons

129
00:05:29,680 --> 00:05:32,960
one each protocol generates an

130
00:05:32,080 --> 00:05:36,159
independent

131
00:05:32,960 --> 00:05:37,440
set of features two features from

132
00:05:36,160 --> 00:05:40,639
different protocols

133
00:05:37,440 --> 00:05:41,360
complement each other three lot of

134
00:05:40,639 --> 00:05:44,960
protocols

135
00:05:41,360 --> 00:05:46,880
are available in all devices intuitively

136
00:05:44,960 --> 00:05:49,520
these observations suggest

137
00:05:46,880 --> 00:05:50,400
the use of multiview learning features

138
00:05:49,520 --> 00:05:53,198
from different

139
00:05:50,400 --> 00:05:54,159
protocols are laterally organized into

140
00:05:53,199 --> 00:05:57,039
views

141
00:05:54,160 --> 00:05:57,680
and the class file will be optimized

142
00:05:57,039 --> 00:06:00,560
across

143
00:05:57,680 --> 00:06:00,560
all the views

144
00:06:01,360 --> 00:06:06,160
so we design a multiview wide and deep

145
00:06:04,880 --> 00:06:08,960
learning framework

146
00:06:06,160 --> 00:06:10,560
for device classification and abnormal

147
00:06:08,960 --> 00:06:13,520
device detection

148
00:06:10,560 --> 00:06:15,360
the framework consists of two structures

149
00:06:13,520 --> 00:06:18,400
a deep neural network

150
00:06:15,360 --> 00:06:19,680
is used to maximize the generalization

151
00:06:18,400 --> 00:06:22,799
performance

152
00:06:19,680 --> 00:06:27,360
a white component is used to memorize

153
00:06:22,800 --> 00:06:27,360
how the views respond to the labels

154
00:06:28,400 --> 00:06:33,039
let's look at the red box here if the

155
00:06:31,680 --> 00:06:36,080
deep component

156
00:06:33,039 --> 00:06:38,479
is like a standard deep neural network

157
00:06:36,080 --> 00:06:40,880
the last function is to optimize the

158
00:06:38,479 --> 00:06:44,400
general classification performance

159
00:06:40,880 --> 00:06:46,960
with all input features

160
00:06:44,400 --> 00:06:48,000
the last one is a white component it's

161
00:06:46,960 --> 00:06:50,799
essentially a

162
00:06:48,000 --> 00:06:52,000
multiview classifier with late viewing

163
00:06:50,800 --> 00:06:54,160
the last function

164
00:06:52,000 --> 00:06:55,120
is to optimize classification

165
00:06:54,160 --> 00:06:58,000
performance

166
00:06:55,120 --> 00:06:58,000
on each view

167
00:06:58,960 --> 00:07:03,198
for benign devices the views are

168
00:07:01,280 --> 00:07:04,719
supposed to agree with each other as

169
00:07:03,199 --> 00:07:07,759
much as possible

170
00:07:04,720 --> 00:07:08,960
therefore our third last function is to

171
00:07:07,759 --> 00:07:12,319
maximize

172
00:07:08,960 --> 00:07:14,880
view consistence for the benign samples

173
00:07:12,319 --> 00:07:17,840
we also have one more loss function that

174
00:07:14,880 --> 00:07:21,440
is used for malicious device detection

175
00:07:17,840 --> 00:07:21,440
we will describe it later

176
00:07:22,319 --> 00:07:27,360
we use three metrics to measure the

177
00:07:24,400 --> 00:07:30,239
performance of device identification

178
00:07:27,360 --> 00:07:33,039
first the coverage is a portion of

179
00:07:30,240 --> 00:07:35,919
devices that we can reconcile

180
00:07:33,039 --> 00:07:37,520
last the accuracy is a portion of

181
00:07:35,919 --> 00:07:41,039
written glass devices

182
00:07:37,520 --> 00:07:44,240
that are correctly recompressed finally

183
00:07:41,039 --> 00:07:48,240
the oir is a portion of all devices that

184
00:07:44,240 --> 00:07:48,240
are correctly recognized

185
00:07:48,400 --> 00:07:52,719
we first compare our solution with two

186
00:07:50,720 --> 00:07:53,759
state-of-art methods on the ground

187
00:07:52,720 --> 00:07:56,639
choose data

188
00:07:53,759 --> 00:07:58,800
as we can see from the figure we provide

189
00:07:56,639 --> 00:08:02,240
the best overall performance

190
00:07:58,800 --> 00:08:04,800
at all granularity levels especially

191
00:08:02,240 --> 00:08:06,319
we significantly outperform the other

192
00:08:04,800 --> 00:08:09,599
two in the identification

193
00:08:06,319 --> 00:08:09,599
of type and model

194
00:08:11,199 --> 00:08:15,199
last but not the experiments on the

195
00:08:13,440 --> 00:08:17,280
annotator data set

196
00:08:15,199 --> 00:08:18,639
our portion game provides the best

197
00:08:17,280 --> 00:08:20,638
overall performance

198
00:08:18,639 --> 00:08:22,400
the overall identification rate is

199
00:08:20,639 --> 00:08:27,840
somewhere between

200
00:08:22,400 --> 00:08:27,840
95 to 98 percent

201
00:08:28,479 --> 00:08:32,640
finally we test those performers in

202
00:08:30,960 --> 00:08:35,439
extreme conditions

203
00:08:32,640 --> 00:08:37,360
using the centralized data as you have

204
00:08:35,440 --> 00:08:38,159
described the centralized dataset

205
00:08:37,360 --> 00:08:41,360
doesn't have

206
00:08:38,159 --> 00:08:43,919
any human interpretable content this

207
00:08:41,360 --> 00:08:46,240
experiment will give a lower bound of

208
00:08:43,919 --> 00:08:49,199
the performance of our solution

209
00:08:46,240 --> 00:08:50,080
as shown in this figure the oir is still

210
00:08:49,200 --> 00:08:55,200
pretty high

211
00:08:50,080 --> 00:08:55,200
in the range of 75 to 88

212
00:08:56,240 --> 00:09:01,120
okay let's come back to the task of

213
00:08:58,800 --> 00:09:03,599
abnormal device detection

214
00:09:01,120 --> 00:09:05,200
the last last function of our framework

215
00:09:03,600 --> 00:09:08,080
is to maximize the view

216
00:09:05,200 --> 00:09:09,760
in constants for devices that are long

217
00:09:08,080 --> 00:09:12,640
to be malicious

218
00:09:09,760 --> 00:09:13,600
in testing we measure the correlation

219
00:09:12,640 --> 00:09:16,959
among views

220
00:09:13,600 --> 00:09:20,160
for each device if the vo in constant

221
00:09:16,959 --> 00:09:21,119
is larger than threshold we label it as

222
00:09:20,160 --> 00:09:23,519
suspicious

223
00:09:21,120 --> 00:09:26,640
and give it to the administrator for

224
00:09:23,519 --> 00:09:26,640
further analysis

225
00:09:27,279 --> 00:09:31,439
here's an example of a group of

226
00:09:29,120 --> 00:09:33,680
malicious devices we found

227
00:09:31,440 --> 00:09:34,560
they all appear to be very similar to

228
00:09:33,680 --> 00:09:37,599
apple tv

229
00:09:34,560 --> 00:09:38,880
in the mdis view but they also appear to

230
00:09:37,600 --> 00:09:41,600
be something else like

231
00:09:38,880 --> 00:09:42,080
apple tv in all other views let's

232
00:09:41,600 --> 00:09:44,480
trigger

233
00:09:42,080 --> 00:09:46,080
our detector we first examined the

234
00:09:44,480 --> 00:09:48,880
devices and found that

235
00:09:46,080 --> 00:09:51,120
they are all smart tvs that collaborate

236
00:09:48,880 --> 00:09:52,880
with a company called the happycast

237
00:09:51,120 --> 00:09:54,160
they all supported apple's airplay

238
00:09:52,880 --> 00:09:56,720
through mds

239
00:09:54,160 --> 00:09:57,760
this means that as apple devices could

240
00:09:56,720 --> 00:10:00,800
discover them

241
00:09:57,760 --> 00:10:03,839
as apple tv and play content on them

242
00:10:00,800 --> 00:10:04,800
however airplay is apple's proprietary

243
00:10:03,839 --> 00:10:07,600
protocol

244
00:10:04,800 --> 00:10:10,000
which is never open sourced our guess is

245
00:10:07,600 --> 00:10:10,720
that someone reverse engineered apple's

246
00:10:10,000 --> 00:10:13,279
airplay

247
00:10:10,720 --> 00:10:14,320
and deployed on these devices

248
00:10:13,279 --> 00:10:17,040
technically

249
00:10:14,320 --> 00:10:18,000
they are like forged opportunities this

250
00:10:17,040 --> 00:10:21,199
example shows

251
00:10:18,000 --> 00:10:22,399
that we are able to evaluate the view in

252
00:10:21,200 --> 00:10:25,040
constances

253
00:10:22,399 --> 00:10:28,320
and use this information to detect

254
00:10:25,040 --> 00:10:28,319
abnormal devices

255
00:10:30,079 --> 00:10:34,719
in summary we present a level device

256
00:10:32,959 --> 00:10:37,599
identification approach

257
00:10:34,720 --> 00:10:38,959
our core idea is to extract features

258
00:10:37,600 --> 00:10:41,600
from the broadcast and

259
00:10:38,959 --> 00:10:44,079
multicast package and used a

260
00:10:41,600 --> 00:10:47,200
multiview-wide and deep learning model

261
00:10:44,079 --> 00:10:49,920
for device identification meanwhile

262
00:10:47,200 --> 00:10:50,560
we discover the disagreements across

263
00:10:49,920 --> 00:10:55,920
views

264
00:10:50,560 --> 00:10:55,920
to detect fabricated or forged devices

265
00:10:57,279 --> 00:11:12,880
finally we would like to thank our

266
00:10:59,279 --> 00:11:12,880
sponsors and thank you for listening

