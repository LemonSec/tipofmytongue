1
00:00:09,120 --> 00:00:11,840
hi there

2
00:00:09,920 --> 00:00:13,840
i'm jonathan spring i'll be talking

3
00:00:11,840 --> 00:00:15,920
about our paper historical analysis

4
00:00:13,840 --> 00:00:17,520
of exploit availability timelines joint

5
00:00:15,920 --> 00:00:19,759
work with allen householder

6
00:00:17,520 --> 00:00:20,960
jeff krabitz trent navally and david

7
00:00:19,760 --> 00:00:24,080
warren

8
00:00:20,960 --> 00:00:24,480
this paper is at cset and the conference

9
00:00:24,080 --> 00:00:27,759
is

10
00:00:24,480 --> 00:00:27,760
august 2020

11
00:00:28,800 --> 00:00:32,480
very standard legal slide

12
00:00:33,440 --> 00:00:38,160
the topic of our historical analysis is

13
00:00:36,320 --> 00:00:39,920
public exploit development this is a

14
00:00:38,160 --> 00:00:41,360
part of the exploit development life

15
00:00:39,920 --> 00:00:44,719
cycle and it fits in

16
00:00:41,360 --> 00:00:46,399
sort of as you see here alongside

17
00:00:44,719 --> 00:00:48,320
private exploit development

18
00:00:46,399 --> 00:00:49,840
but also the public aspect of

19
00:00:48,320 --> 00:00:52,399
vulnerability being published is

20
00:00:49,840 --> 00:00:54,559
the main driver of vulnerabilities

21
00:00:52,399 --> 00:00:57,840
getting remediated

22
00:00:54,559 --> 00:00:59,280
our main goal in general is to have

23
00:00:57,840 --> 00:01:02,480
defenders

24
00:00:59,280 --> 00:01:04,400
remediate vulnerabilities more and more

25
00:01:02,480 --> 00:01:06,798
often than they do now

26
00:01:04,400 --> 00:01:08,240
so there are fewer adversary exploits

27
00:01:06,799 --> 00:01:10,640
that are going through and causing

28
00:01:08,240 --> 00:01:12,720
incidents

29
00:01:10,640 --> 00:01:14,159
our historical analysis focuses

30
00:01:12,720 --> 00:01:15,840
specifically on the public

31
00:01:14,159 --> 00:01:17,280
aspect of exploit development and we

32
00:01:15,840 --> 00:01:18,479
don't focus on private exploit

33
00:01:17,280 --> 00:01:20,880
development

34
00:01:18,479 --> 00:01:22,240
this obviously has some trade-offs the

35
00:01:20,880 --> 00:01:24,080
benefits are that the data is

36
00:01:22,240 --> 00:01:25,759
transparently available

37
00:01:24,080 --> 00:01:27,520
sort of by definition it's public and so

38
00:01:25,759 --> 00:01:31,040
we have access to it uh

39
00:01:27,520 --> 00:01:34,240
obviously what happens in public is not

40
00:01:31,040 --> 00:01:36,479
the entire system so we are

41
00:01:34,240 --> 00:01:38,079
sort of defining a scope here that has

42
00:01:36,479 --> 00:01:41,280
some known limits

43
00:01:38,079 --> 00:01:43,119
and the trade-off though is that we can

44
00:01:41,280 --> 00:01:45,360
sort of adequately and accurately

45
00:01:43,119 --> 00:01:47,600
measure that

46
00:01:45,360 --> 00:01:54,000
completely based on focusing on the

47
00:01:47,600 --> 00:01:56,320
public aspect

48
00:01:54,000 --> 00:01:57,200
our research questions to help us

49
00:01:56,320 --> 00:02:00,000
understand

50
00:01:57,200 --> 00:02:01,840
the the exploit availability uh within

51
00:02:00,000 --> 00:02:05,600
the exploit development life cycle

52
00:02:01,840 --> 00:02:07,840
uh are these three questions

53
00:02:05,600 --> 00:02:10,639
the first two are more basic right so

54
00:02:07,840 --> 00:02:13,599
how many cve ids get public exploit code

55
00:02:10,639 --> 00:02:13,920
within a year note that we're going to

56
00:02:13,599 --> 00:02:17,760
say

57
00:02:13,920 --> 00:02:19,440
cve ids and not vulnerabilities in

58
00:02:17,760 --> 00:02:22,319
general

59
00:02:19,440 --> 00:02:23,920
this is because cve ids are are the

60
00:02:22,319 --> 00:02:27,280
things that get tagged

61
00:02:23,920 --> 00:02:31,040
both in vulnerability disclosure

62
00:02:27,280 --> 00:02:34,319
documents as well as what we can then

63
00:02:31,040 --> 00:02:37,040
track and exploit to

64
00:02:34,319 --> 00:02:38,958
and link that together to figure out how

65
00:02:37,040 --> 00:02:40,239
much time elapsed

66
00:02:38,959 --> 00:02:42,480
there are some vulnerabilities that

67
00:02:40,239 --> 00:02:44,640
don't get cve ids

68
00:02:42,480 --> 00:02:46,560
and that's okay because many or a lot of

69
00:02:44,640 --> 00:02:48,799
them do or an important subset of

70
00:02:46,560 --> 00:02:52,239
vulnerabilities get cv ids

71
00:02:48,800 --> 00:02:52,800
but that is an explicit choice that

72
00:02:52,239 --> 00:02:55,519
we've made

73
00:02:52,800 --> 00:02:58,080
to make the data quality higher but it's

74
00:02:55,519 --> 00:03:01,280
another sort of restriction of the scope

75
00:02:58,080 --> 00:03:03,519
of those so question number two

76
00:03:01,280 --> 00:03:05,840
of those cv ids that get public exploit

77
00:03:03,519 --> 00:03:09,360
code how quickly is it published

78
00:03:05,840 --> 00:03:12,480
and do they do different subpopulations

79
00:03:09,360 --> 00:03:14,800
of these cva ids

80
00:03:12,480 --> 00:03:15,760
as miter defines in the common weakness

81
00:03:14,800 --> 00:03:18,400
enumeration

82
00:03:15,760 --> 00:03:19,760
have different publication rates and

83
00:03:18,400 --> 00:03:22,800
finally and sort of

84
00:03:19,760 --> 00:03:24,879
the really

85
00:03:22,800 --> 00:03:26,720
core important research question is are

86
00:03:24,879 --> 00:03:27,920
there features that we can identify of a

87
00:03:26,720 --> 00:03:30,840
cve id

88
00:03:27,920 --> 00:03:33,839
that correlate with this exploit

89
00:03:30,840 --> 00:03:33,840
publication

90
00:03:36,480 --> 00:03:40,238
so there are a couple of important parts

91
00:03:37,920 --> 00:03:41,760
of background one is that we want to use

92
00:03:40,239 --> 00:03:44,720
exploit publication as

93
00:03:41,760 --> 00:03:46,720
part of prioritizing and triaging

94
00:03:44,720 --> 00:03:48,720
vulnerabilities in general

95
00:03:46,720 --> 00:03:50,879
uh our work on the stakeholder specific

96
00:03:48,720 --> 00:03:54,640
vulnerability categorization

97
00:03:50,879 --> 00:03:56,959
has sort of codified how we would want

98
00:03:54,640 --> 00:03:58,079
that information to be used but uh there

99
00:03:56,959 --> 00:03:59,840
are certainly other

100
00:03:58,080 --> 00:04:03,519
people who are working on that you know

101
00:03:59,840 --> 00:04:06,560
epss uh is related to using

102
00:04:03,519 --> 00:04:09,599
exploit timelines to prioritize

103
00:04:06,560 --> 00:04:10,640
vulnerabilities as well um and so an

104
00:04:09,599 --> 00:04:14,959
important

105
00:04:10,640 --> 00:04:16,798
uh uh it's important to get

106
00:04:14,959 --> 00:04:18,560
historical background in order to move

107
00:04:16,798 --> 00:04:20,159
forwards with these things

108
00:04:18,560 --> 00:04:22,000
of course there's a long history of both

109
00:04:20,160 --> 00:04:24,160
practitioners and researchers

110
00:04:22,000 --> 00:04:25,520
um and these are just a sort of

111
00:04:24,160 --> 00:04:27,600
opportunistic

112
00:04:25,520 --> 00:04:28,560
selection of some important pieces of

113
00:04:27,600 --> 00:04:32,000
work of course

114
00:04:28,560 --> 00:04:34,720
um the dan guido stuff is pretty is

115
00:04:32,000 --> 00:04:35,840
obviously uh stood the test of time

116
00:04:34,720 --> 00:04:38,400
pretty well

117
00:04:35,840 --> 00:04:39,039
um but also luca has done a bunch of

118
00:04:38,400 --> 00:04:42,560
work on

119
00:04:39,040 --> 00:04:45,040
different aspects of this problem and

120
00:04:42,560 --> 00:04:46,960
the thing is that although there's been

121
00:04:45,040 --> 00:04:48,479
a lot of work on this

122
00:04:46,960 --> 00:04:50,320
none of them have really taken this sort

123
00:04:48,479 --> 00:04:52,719
of quite long

124
00:04:50,320 --> 00:04:53,759
historical view we take seven years of

125
00:04:52,720 --> 00:04:57,040
data

126
00:04:53,759 --> 00:04:59,840
and we also take a

127
00:04:57,040 --> 00:05:00,560
sort of novel methodological approach by

128
00:04:59,840 --> 00:05:03,520
using for

129
00:05:00,560 --> 00:05:03,520
survival analysis

130
00:05:05,199 --> 00:05:10,160
uh so survival analysis has mostly been

131
00:05:07,759 --> 00:05:12,639
used in medicine for hazard analysis

132
00:05:10,160 --> 00:05:14,320
of which things properties

133
00:05:12,639 --> 00:05:18,479
co-morbidities whatever

134
00:05:14,320 --> 00:05:21,039
um impact the survival of a

135
00:05:18,479 --> 00:05:22,479
population in this case they mean

136
00:05:21,039 --> 00:05:25,360
literal survival

137
00:05:22,479 --> 00:05:26,960
they're usually doing mortality rates

138
00:05:25,360 --> 00:05:30,639
but we're going to consider

139
00:05:26,960 --> 00:05:34,080
that a cve id survives as long as it has

140
00:05:30,639 --> 00:05:36,000
been published so it's been born

141
00:05:34,080 --> 00:05:38,880
but there's no public exploit code

142
00:05:36,000 --> 00:05:41,280
associated with it

143
00:05:38,880 --> 00:05:42,719
we consider the publication date by

144
00:05:41,280 --> 00:05:46,799
definition is

145
00:05:42,720 --> 00:05:49,360
is positive or zero um because

146
00:05:46,800 --> 00:05:51,039
publication of an exploit tagged with

147
00:05:49,360 --> 00:05:53,600
the cve id

148
00:05:51,039 --> 00:05:55,039
is public disclosure although it is not

149
00:05:53,600 --> 00:05:56,080
exactly the public disclosure that

150
00:05:55,039 --> 00:05:57,680
everyone might want

151
00:05:56,080 --> 00:05:59,280
it certainly is a kind of public

152
00:05:57,680 --> 00:06:01,840
disclosure so

153
00:05:59,280 --> 00:06:04,880
the statistical model which is a cox

154
00:06:01,840 --> 00:06:06,880
hazard proportional hazard model

155
00:06:04,880 --> 00:06:08,719
provides an interval estimate for how

156
00:06:06,880 --> 00:06:10,880
the different features affect

157
00:06:08,720 --> 00:06:11,759
the survival of the different cve ids in

158
00:06:10,880 --> 00:06:15,120
the population

159
00:06:11,759 --> 00:06:17,680
the total population is about 75 000

160
00:06:15,120 --> 00:06:19,280
vulnerabilities over the seven year span

161
00:06:17,680 --> 00:06:20,800
the model assumes a proportional

162
00:06:19,280 --> 00:06:23,280
relationship for the effect of each

163
00:06:20,800 --> 00:06:26,560
variable so there's no

164
00:06:23,280 --> 00:06:28,479
sort of logistic or exponential or

165
00:06:26,560 --> 00:06:30,720
additive

166
00:06:28,479 --> 00:06:32,800
relationships modeled with a cox

167
00:06:30,720 --> 00:06:35,840
proportional hazard model

168
00:06:32,800 --> 00:06:39,600
so we take this on as an assumption it's

169
00:06:35,840 --> 00:06:41,520
probably fine um but an untested

170
00:06:39,600 --> 00:06:44,319
assumption so one of the things that we

171
00:06:41,520 --> 00:06:44,318
want to look out for

172
00:06:45,759 --> 00:06:48,400
our data sources are of course the

173
00:06:47,199 --> 00:06:48,960
important way in which we're going to

174
00:06:48,400 --> 00:06:51,599
measure

175
00:06:48,960 --> 00:06:53,758
all of these different aspects of the

176
00:06:51,599 --> 00:06:55,840
exploit development life cycle

177
00:06:53,759 --> 00:06:58,400
there's really two important ones the

178
00:06:55,840 --> 00:07:00,400
date of the publication of the cve id

179
00:06:58,400 --> 00:07:02,000
which we have these four sources here

180
00:07:00,400 --> 00:07:04,638
and should note that the search cc

181
00:07:02,000 --> 00:07:05,759
data has a couple of different dates on

182
00:07:04,639 --> 00:07:07,120
it actually so it's

183
00:07:05,759 --> 00:07:09,840
it's actually five or six different

184
00:07:07,120 --> 00:07:12,800
dates there so the minimum of those

185
00:07:09,840 --> 00:07:14,239
five or six dates is the publication

186
00:07:12,800 --> 00:07:16,880
date

187
00:07:14,240 --> 00:07:19,280
for the cve id and then we have two

188
00:07:16,880 --> 00:07:21,919
sources for exploit code publication

189
00:07:19,280 --> 00:07:23,840
as long as it's associated with a cve id

190
00:07:21,919 --> 00:07:24,719
we use the github repositories and

191
00:07:23,840 --> 00:07:28,159
rather than the web

192
00:07:24,720 --> 00:07:31,360
interfaces for exploit db and metasploit

193
00:07:28,160 --> 00:07:31,840
because both the metasploit and exploit

194
00:07:31,360 --> 00:07:34,960
tb

195
00:07:31,840 --> 00:07:36,960
github repositories are clearly and

196
00:07:34,960 --> 00:07:37,840
consistently time stamped for exactly

197
00:07:36,960 --> 00:07:41,520
when

198
00:07:37,840 --> 00:07:43,599
the exploit code was committed and also

199
00:07:41,520 --> 00:07:45,280
uh it contains comments and other sort

200
00:07:43,599 --> 00:07:48,159
of auxiliary information

201
00:07:45,280 --> 00:07:48,878
that often is is where the contributors

202
00:07:48,160 --> 00:07:51,919
will put

203
00:07:48,879 --> 00:07:51,919
the cve id

204
00:07:52,080 --> 00:07:58,318
we rely on manual tags such as

205
00:07:55,520 --> 00:08:00,400
the committers you know including these

206
00:07:58,319 --> 00:08:03,599
cve id tags in the databases

207
00:08:00,400 --> 00:08:06,719
because uh it is an outstanding hard and

208
00:08:03,599 --> 00:08:09,120
turing complete problem uh to

209
00:08:06,720 --> 00:08:10,639
identify equivalent exploits where two

210
00:08:09,120 --> 00:08:11,440
exploits exploit exactly the same

211
00:08:10,639 --> 00:08:12,639
vulnerability

212
00:08:11,440 --> 00:08:14,160
of course there are heuristics and

213
00:08:12,639 --> 00:08:15,199
fuzzing and all of these things used to

214
00:08:14,160 --> 00:08:18,240
help with that

215
00:08:15,199 --> 00:08:21,280
but we so far find that the

216
00:08:18,240 --> 00:08:22,720
manual tags are better quality and

217
00:08:21,280 --> 00:08:24,479
much more efficient of course because

218
00:08:22,720 --> 00:08:27,520
it's just text matching

219
00:08:24,479 --> 00:08:30,878
and so we rely on that and so of course

220
00:08:27,520 --> 00:08:31,599
there are going to be some pieces of

221
00:08:30,879 --> 00:08:34,479
exploit code

222
00:08:31,599 --> 00:08:36,080
in these repositories that are are

223
00:08:34,479 --> 00:08:38,159
improperly labeled and we will miss

224
00:08:36,080 --> 00:08:41,039
so we should consider that to be under

225
00:08:38,159 --> 00:08:43,838
counted slightly

226
00:08:41,039 --> 00:08:44,560
this chart is the clearest and most

227
00:08:43,839 --> 00:08:46,880
straightforward

228
00:08:44,560 --> 00:08:48,479
presentation of our results do note that

229
00:08:46,880 --> 00:08:51,120
the y-axis is

230
00:08:48,480 --> 00:08:52,240
you know clipped down to 0.95 so there's

231
00:08:51,120 --> 00:08:55,519
quite a lot below here

232
00:08:52,240 --> 00:08:57,600
that does survive that is does not have

233
00:08:55,519 --> 00:09:00,320
public exploit code associated with it

234
00:08:57,600 --> 00:09:01,440
but mostly note that exploits happened

235
00:09:00,320 --> 00:09:02,959
quite quickly when they happened at

236
00:09:01,440 --> 00:09:04,160
first and then they slow down but they

237
00:09:02,959 --> 00:09:07,040
do continue

238
00:09:04,160 --> 00:09:08,079
uh to get published as the year goes on

239
00:09:07,040 --> 00:09:11,599
ending up with us

240
00:09:08,080 --> 00:09:14,880
at about four percent total uh you know

241
00:09:11,600 --> 00:09:16,959
of cve ids with publicly associated

242
00:09:14,880 --> 00:09:19,760
exploit code

243
00:09:16,959 --> 00:09:22,399
so a little bit more concretely here you

244
00:09:19,760 --> 00:09:24,080
know 4.1 percent of those cveids

245
00:09:22,399 --> 00:09:25,519
don't survive they see public exploit

246
00:09:24,080 --> 00:09:26,160
code associated with them just to be a

247
00:09:25,519 --> 00:09:30,000
little a bit

248
00:09:26,160 --> 00:09:33,279
concrete that's about 3 100 cve ids

249
00:09:30,000 --> 00:09:37,120
over seven years now of those 3 100

250
00:09:33,279 --> 00:09:38,959
42 of them see their exploit code

251
00:09:37,120 --> 00:09:42,399
published on the same day

252
00:09:38,959 --> 00:09:42,800
as disclosure this is not exactly a zero

253
00:09:42,399 --> 00:09:44,720
day

254
00:09:42,800 --> 00:09:46,399
exploit or zero day vulnerability

255
00:09:44,720 --> 00:09:46,800
because when we say zero day normally we

256
00:09:46,399 --> 00:09:48,880
mean

257
00:09:46,800 --> 00:09:51,680
that the adversary is exploiting the

258
00:09:48,880 --> 00:09:54,480
vulnerability actively in the wild

259
00:09:51,680 --> 00:09:56,239
not just that the exploit is public and

260
00:09:54,480 --> 00:09:56,880
these two things are not exactly the

261
00:09:56,240 --> 00:10:00,880
same

262
00:09:56,880 --> 00:10:03,279
but of course it is still not desirable

263
00:10:00,880 --> 00:10:04,320
for the exploit code to be public being

264
00:10:03,279 --> 00:10:06,959
the first time

265
00:10:04,320 --> 00:10:07,839
that people hear about the vulnerability

266
00:10:06,959 --> 00:10:10,000
as you can see

267
00:10:07,839 --> 00:10:11,040
the code is published quite quickly but

268
00:10:10,000 --> 00:10:14,240
there is also a long

269
00:10:11,040 --> 00:10:17,360
tail as with everything on the internet

270
00:10:14,240 --> 00:10:19,760
so although about

271
00:10:17,360 --> 00:10:21,440
half of all exploit code is published

272
00:10:19,760 --> 00:10:24,560
within two days

273
00:10:21,440 --> 00:10:26,240
if it's going to appear um you can never

274
00:10:24,560 --> 00:10:28,079
quite be safe because there's still

275
00:10:26,240 --> 00:10:30,720
more exploit code getting added as time

276
00:10:28,079 --> 00:10:33,279
goes on this data because it's curated

277
00:10:30,720 --> 00:10:36,560
just since 2013

278
00:10:33,279 --> 00:10:38,720
sort of starts when these exploit

279
00:10:36,560 --> 00:10:41,359
databases were already mature and so

280
00:10:38,720 --> 00:10:43,519
these data points don't include sort of

281
00:10:41,360 --> 00:10:46,880
big jumps of people

282
00:10:43,519 --> 00:10:50,240
post hoc labeling exploits for

283
00:10:46,880 --> 00:10:52,399
cves that existed before the

284
00:10:50,240 --> 00:10:55,040
exploit databases so this is pretty

285
00:10:52,399 --> 00:10:58,160
reliable as far as that goes

286
00:10:55,040 --> 00:11:01,680
also as you might expect different cwes

287
00:10:58,160 --> 00:11:02,800
for easy or hard to exploit types of

288
00:11:01,680 --> 00:11:04,640
vulnerability

289
00:11:02,800 --> 00:11:06,640
do have a significant and sometimes

290
00:11:04,640 --> 00:11:10,880
quite large effect

291
00:11:06,640 --> 00:11:12,959
on uh exploit publication

292
00:11:10,880 --> 00:11:15,839
you can get sort of a visual sense of

293
00:11:12,959 --> 00:11:15,839
that here

294
00:11:16,640 --> 00:11:24,000
so two things

295
00:11:20,480 --> 00:11:26,800
you can see that the different cwes have

296
00:11:24,000 --> 00:11:28,560
different exploit publication rates

297
00:11:26,800 --> 00:11:32,959
based on the sort of middle

298
00:11:28,560 --> 00:11:34,079
um teal baseline right those are going

299
00:11:32,959 --> 00:11:37,119
to differ

300
00:11:34,079 --> 00:11:38,319
the used after free happens slightly

301
00:11:37,120 --> 00:11:41,519
more often

302
00:11:38,320 --> 00:11:42,399
than buffer overflows you see the sea

303
00:11:41,519 --> 00:11:44,079
surfs

304
00:11:42,399 --> 00:11:45,920
as sort of mentioned in the last slide

305
00:11:44,079 --> 00:11:47,439
happen much more often right especially

306
00:11:45,920 --> 00:11:50,639
like quite quickly there

307
00:11:47,440 --> 00:11:51,360
uh left left uh left middle there's a

308
00:11:50,639 --> 00:11:53,519
big drop

309
00:11:51,360 --> 00:11:56,000
um but also and this is getting into our

310
00:11:53,519 --> 00:12:00,079
third research question

311
00:11:56,000 --> 00:12:04,079
if you partition the data based on

312
00:12:00,079 --> 00:12:06,479
date vulnerabilities

313
00:12:04,079 --> 00:12:08,239
that are published more recently are

314
00:12:06,480 --> 00:12:10,240
more likely

315
00:12:08,240 --> 00:12:11,360
to have public exploit code associated

316
00:12:10,240 --> 00:12:15,120
with them

317
00:12:11,360 --> 00:12:19,120
than vulnerabilities that were published

318
00:12:15,120 --> 00:12:21,920
seven years ago this trend

319
00:12:19,120 --> 00:12:23,839
varies slightly in its impact across

320
00:12:21,920 --> 00:12:25,680
different cwes but it's remarkably

321
00:12:23,839 --> 00:12:27,519
consistent across the different cwe

322
00:12:25,680 --> 00:12:28,800
types and in fact it's consistent across

323
00:12:27,519 --> 00:12:31,360
the whole data set

324
00:12:28,800 --> 00:12:33,359
so one thing that we see with this is

325
00:12:31,360 --> 00:12:36,240
that

326
00:12:33,360 --> 00:12:37,360
as we move forwards in time it's more

327
00:12:36,240 --> 00:12:38,959
likely

328
00:12:37,360 --> 00:12:40,720
that public exploit code will be

329
00:12:38,959 --> 00:12:43,040
associated with a cve

330
00:12:40,720 --> 00:12:43,040
id

331
00:12:45,279 --> 00:12:50,560
there are several factors that are

332
00:12:48,399 --> 00:12:53,760
associated with cv ids

333
00:12:50,560 --> 00:12:54,959
in some way or another the base cvss

334
00:12:53,760 --> 00:12:56,720
base score is

335
00:12:54,959 --> 00:13:00,079
lightly correlated but is positively

336
00:12:56,720 --> 00:13:01,839
correlated in a meaningful way

337
00:13:00,079 --> 00:13:03,120
the number of cve ids and the

338
00:13:01,839 --> 00:13:06,480
publication date

339
00:13:03,120 --> 00:13:06,959
uh both influence this positively about

340
00:13:06,480 --> 00:13:10,079
the same

341
00:13:06,959 --> 00:13:11,359
amount or slightly more as cvss base

342
00:13:10,079 --> 00:13:13,920
scores

343
00:13:11,360 --> 00:13:15,360
certain vendors are more likely to have

344
00:13:13,920 --> 00:13:17,040
exploits than others but this is also

345
00:13:15,360 --> 00:13:19,360
not super surprising

346
00:13:17,040 --> 00:13:20,560
if a vendor predominantly makes security

347
00:13:19,360 --> 00:13:24,320
software

348
00:13:20,560 --> 00:13:25,279
their code is more likely to see public

349
00:13:24,320 --> 00:13:29,120
exploits

350
00:13:25,279 --> 00:13:31,839
than writers of non-security software

351
00:13:29,120 --> 00:13:31,839
things like this

352
00:13:32,800 --> 00:13:36,240
our overall interpretation here is a

353
00:13:35,279 --> 00:13:39,120
couple of good things

354
00:13:36,240 --> 00:13:39,680
and a couple of bad things on the one

355
00:13:39,120 --> 00:13:41,600
hand

356
00:13:39,680 --> 00:13:43,199
only about four percent of cv ids have

357
00:13:41,600 --> 00:13:44,720
exploit code published that seems all

358
00:13:43,199 --> 00:13:48,319
right that's not very many

359
00:13:44,720 --> 00:13:49,680
on the other hand it is published

360
00:13:48,320 --> 00:13:52,959
quickly when it is published

361
00:13:49,680 --> 00:13:55,199
half of the time within two days so

362
00:13:52,959 --> 00:13:56,719
uh on the uh and so you know we have a

363
00:13:55,199 --> 00:13:58,479
second good one here right we have

364
00:13:56,720 --> 00:14:00,560
demonstrated sort of an exploit search

365
00:13:58,480 --> 00:14:02,639
of these different databases

366
00:14:00,560 --> 00:14:04,160
and we think that we can integrate that

367
00:14:02,639 --> 00:14:06,320
into prioritization in a somewhat

368
00:14:04,160 --> 00:14:09,600
automated way because we have the cve id

369
00:14:06,320 --> 00:14:11,360
tags we have all of the stuff

370
00:14:09,600 --> 00:14:13,199
but on the other side the need to do

371
00:14:11,360 --> 00:14:15,440
this is also increasing because we see

372
00:14:13,199 --> 00:14:18,719
the exploit code publication speed

373
00:14:15,440 --> 00:14:20,959
increasing over time

374
00:14:18,720 --> 00:14:23,120
now one consistent interpretation

375
00:14:20,959 --> 00:14:26,560
although there's no causal

376
00:14:23,120 --> 00:14:27,040
uh information in what we have is that

377
00:14:26,560 --> 00:14:30,399
there's

378
00:14:27,040 --> 00:14:32,240
perhaps a latent variable here and

379
00:14:30,399 --> 00:14:33,760
these various things that we've tested

380
00:14:32,240 --> 00:14:34,480
for are proxying for that latent

381
00:14:33,760 --> 00:14:38,079
variable

382
00:14:34,480 --> 00:14:41,519
and one hypothesis is that latent

383
00:14:38,079 --> 00:14:42,319
product is the value of the vulnerable

384
00:14:41,519 --> 00:14:44,000
component

385
00:14:42,320 --> 00:14:47,920
to the attackers this is an important

386
00:14:44,000 --> 00:14:47,920
thing for future work to try to study

387
00:14:50,800 --> 00:14:56,000
um i've been discussing a lot of these

388
00:14:53,760 --> 00:14:57,519
limitations as we've been going along

389
00:14:56,000 --> 00:14:59,120
but to pull them all together here i

390
00:14:57,519 --> 00:15:00,800
think is is valuable

391
00:14:59,120 --> 00:15:02,160
um you can see a longer discussion of

392
00:15:00,800 --> 00:15:04,000
these in the paper this

393
00:15:02,160 --> 00:15:06,000
restricts our interpretation and to some

394
00:15:04,000 --> 00:15:08,240
extent like informs future work

395
00:15:06,000 --> 00:15:09,199
uh which is all important but i think

396
00:15:08,240 --> 00:15:11,600
that the

397
00:15:09,199 --> 00:15:13,839
the results themselves are are pretty

398
00:15:11,600 --> 00:15:13,839
clear

399
00:15:14,880 --> 00:15:19,680
so um

400
00:15:18,000 --> 00:15:20,959
we have a few ideas for future work of

401
00:15:19,680 --> 00:15:23,120
course there's lots of other things that

402
00:15:20,959 --> 00:15:26,160
one could do

403
00:15:23,120 --> 00:15:28,160
and we are open to

404
00:15:26,160 --> 00:15:30,000
anyone else who's got more and better

405
00:15:28,160 --> 00:15:34,639
ideas because we certainly don't have

406
00:15:30,000 --> 00:15:34,639
all of them so if you do

407
00:15:34,959 --> 00:15:39,359
thank you very much for your time i hope

408
00:15:36,639 --> 00:15:41,040
you found the presentation useful

409
00:15:39,360 --> 00:15:43,600
if you have any questions do feel free

410
00:15:41,040 --> 00:15:45,839
to reach out also if you would like to

411
00:15:43,600 --> 00:15:47,519
have a look at the code we used you can

412
00:15:45,839 --> 00:15:51,920
go to our github

413
00:15:47,519 --> 00:15:51,920
and find it at this

414
00:15:52,839 --> 00:15:55,839
project

415
00:16:00,320 --> 00:16:02,399
you

