1
00:00:08,559 --> 00:00:10,480
hi my name is patrick cronin and today

2
00:00:10,480 --> 00:00:11,920
i'd like to talk to you about our work

3
00:00:11,920 --> 00:00:13,840
charger surfing exploring a powerline

4
00:00:13,840 --> 00:00:15,440
side channel for smartphone information

5
00:00:15,440 --> 00:00:16,640
linkage

6
00:00:16,640 --> 00:00:18,400
now charger surfing is this idea that

7
00:00:18,400 --> 00:00:19,600
we're going to execute a shoulder

8
00:00:19,600 --> 00:00:22,400
surfing attack via the charger and what

9
00:00:22,400 --> 00:00:23,840
we really mean by this is we're going to

10
00:00:23,840 --> 00:00:25,519
attempt to utilize the power signal from

11
00:00:25,519 --> 00:00:27,760
the charger to infer what is on the

12
00:00:27,760 --> 00:00:30,480
user's screen as they interact with it

13
00:00:30,480 --> 00:00:32,558
now from an attack perspective we really

14
00:00:32,558 --> 00:00:34,160
expect that many users are very

15
00:00:34,160 --> 00:00:36,000
comfortable plugging their devices into

16
00:00:36,000 --> 00:00:38,079
public charging ports for example at an

17
00:00:38,079 --> 00:00:40,719
airport or a hotel or a coffee shop many

18
00:00:40,719 --> 00:00:42,879
users will freely plug their devices in

19
00:00:42,879 --> 00:00:44,879
without a second thought we expect that

20
00:00:44,879 --> 00:00:47,120
attackers know this and might attempt to

21
00:00:47,120 --> 00:00:48,719
modify the port somehow adding

22
00:00:48,719 --> 00:00:50,879
potentially a hidden voltage probe that

23
00:00:50,879 --> 00:00:53,120
can stream them the power trays as the

24
00:00:53,120 --> 00:00:55,280
user's device is charging then the

25
00:00:55,280 --> 00:00:57,360
attacker might utilize this power trace

26
00:00:57,360 --> 00:00:58,640
and perhaps some machine learning

27
00:00:58,640 --> 00:01:00,399
techniques to try to figure out what

28
00:01:00,399 --> 00:01:02,640
type of animations or

29
00:01:02,640 --> 00:01:04,159
interactions the user is having with

30
00:01:04,159 --> 00:01:06,479
this screen

31
00:01:06,479 --> 00:01:08,000
now the threat of public charging has

32
00:01:08,000 --> 00:01:10,159
been studied a little bit in the past in

33
00:01:10,159 --> 00:01:13,920
2017 two independent research groups

34
00:01:13,920 --> 00:01:16,000
came up with this idea of potentially

35
00:01:16,000 --> 00:01:17,600
figuring out what app the users were

36
00:01:17,600 --> 00:01:19,759
using or maybe what websites they were

37
00:01:19,759 --> 00:01:21,680
currently browsing now these are very

38
00:01:21,680 --> 00:01:23,520
coarse-grained attacks that don't

39
00:01:23,520 --> 00:01:25,759
necessarily take into account the

40
00:01:25,759 --> 00:01:27,759
individual actions of the user right

41
00:01:27,759 --> 00:01:29,759
they're just looking at things like you

42
00:01:29,759 --> 00:01:32,400
went to google or you went to amazon our

43
00:01:32,400 --> 00:01:34,720
attack has more fine-grained focus of

44
00:01:34,720 --> 00:01:36,479
potentially exactly what you might be

45
00:01:36,479 --> 00:01:39,520
typing into your phone at the time

46
00:01:39,520 --> 00:01:41,680
now our intuition here is that we know

47
00:01:41,680 --> 00:01:43,119
the phone screen is going to refresh

48
00:01:43,119 --> 00:01:46,000
from left to right and top to bottom we

49
00:01:46,000 --> 00:01:48,000
also know that as the user interacts

50
00:01:48,000 --> 00:01:49,840
with the screen we're going to get nice

51
00:01:49,840 --> 00:01:51,840
animations if we think about the lock

52
00:01:51,840 --> 00:01:54,159
screen where we focus most of this work

53
00:01:54,159 --> 00:01:55,600
we know that there's a three by three

54
00:01:55,600 --> 00:01:56,799
grid with

55
00:01:56,799 --> 00:01:58,880
one through nine and then a nice zero at

56
00:01:58,880 --> 00:02:01,280
the bottom in almost all lock screens so

57
00:02:01,280 --> 00:02:02,640
if we can figure out some form of

58
00:02:02,640 --> 00:02:05,119
locality we might be able to figure out

59
00:02:05,119 --> 00:02:07,040
exactly what the user has pressed and

60
00:02:07,040 --> 00:02:08,800
what their passcode is

61
00:02:08,800 --> 00:02:10,399
now we know that every animation is

62
00:02:10,399 --> 00:02:12,239
going to lead to a different pixel color

63
00:02:12,239 --> 00:02:13,360
changing

64
00:02:13,360 --> 00:02:14,560
and we know this is going to lead to

65
00:02:14,560 --> 00:02:16,959
some form of different energy cost the

66
00:02:16,959 --> 00:02:18,400
next thing we have to prove is that

67
00:02:18,400 --> 00:02:20,400
there is some form of locality to these

68
00:02:20,400 --> 00:02:22,720
animations and we do this by creating a

69
00:02:22,720 --> 00:02:24,879
preliminary testing app where we create

70
00:02:24,879 --> 00:02:27,360
a fully black screen and we flash white

71
00:02:27,360 --> 00:02:29,200
bars either in vertical positions or

72
00:02:29,200 --> 00:02:31,440
horizontal positions and we classify

73
00:02:31,440 --> 00:02:33,360
those power traces we average them

74
00:02:33,360 --> 00:02:35,040
together or we want to see if we can at

75
00:02:35,040 --> 00:02:37,120
least detect difference

76
00:02:37,120 --> 00:02:39,280
what we see is very interesting if we

77
00:02:39,280 --> 00:02:41,440
look here we can see that there are

78
00:02:41,440 --> 00:02:43,680
different power traces for the different

79
00:02:43,680 --> 00:02:45,599
locations on the screens and this is for

80
00:02:45,599 --> 00:02:47,680
two different screen types both an lcd

81
00:02:47,680 --> 00:02:49,840
and an oled screen and what's awesome

82
00:02:49,840 --> 00:02:51,840
here is we can see that there's a lot of

83
00:02:51,840 --> 00:02:54,160
separability to these

84
00:02:54,160 --> 00:02:56,239
signals and that means that we can very

85
00:02:56,239 --> 00:02:58,319
likely to extract some form of locality

86
00:02:58,319 --> 00:03:01,040
information from them later on

87
00:03:01,040 --> 00:03:02,720
now from a system design perspective we

88
00:03:02,720 --> 00:03:04,480
have a couple things we need to solve

89
00:03:04,480 --> 00:03:06,480
first we need to acquire a raw signal

90
00:03:06,480 --> 00:03:07,760
and let's talk about how we might do

91
00:03:07,760 --> 00:03:08,480
that

92
00:03:08,480 --> 00:03:10,239
in a lab setting we could very easily

93
00:03:10,239 --> 00:03:12,319
utilize an oscilloscope

94
00:03:12,319 --> 00:03:14,400
we could just take that oscilloscope

95
00:03:14,400 --> 00:03:18,480
probe stick it onto a low a very small

96
00:03:18,480 --> 00:03:20,959
resistance resistor that's been placed

97
00:03:20,959 --> 00:03:23,200
into the charging line and we can

98
00:03:23,200 --> 00:03:25,040
record that power trace in nearly real

99
00:03:25,040 --> 00:03:26,480
time

100
00:03:26,480 --> 00:03:27,920
and the next thing we want to do is look

101
00:03:27,920 --> 00:03:29,920
at kind of the button sequence detection

102
00:03:29,920 --> 00:03:30,840
and button

103
00:03:30,840 --> 00:03:33,519
isolation and so we take a very low pass

104
00:03:33,519 --> 00:03:36,319
filtered image of our phone trace and we

105
00:03:36,319 --> 00:03:37,519
examine it just to see if we can

106
00:03:37,519 --> 00:03:39,519
identify where the button presses are

107
00:03:39,519 --> 00:03:40,959
what we see is very nice right we can

108
00:03:40,959 --> 00:03:43,599
see this different screen off screen on

109
00:03:43,599 --> 00:03:45,280
enter the lock screen and finally start

110
00:03:45,280 --> 00:03:47,360
to tap the pin code what's very nice

111
00:03:47,360 --> 00:03:49,680
here is the pin code buttons each look

112
00:03:49,680 --> 00:03:51,040
very different from all these other

113
00:03:51,040 --> 00:03:52,720
actions and so this leads us to believe

114
00:03:52,720 --> 00:03:55,360
that we can very easily separate them

115
00:03:55,360 --> 00:03:57,760
going a step further we think about the

116
00:03:57,760 --> 00:03:59,760
fact that many users don't necessarily

117
00:03:59,760 --> 00:04:01,439
press the screen at exactly the same

118
00:04:01,439 --> 00:04:04,239
rate or like a metronome so we start to

119
00:04:04,239 --> 00:04:05,599
look at how we might separate these

120
00:04:05,599 --> 00:04:07,519
button presses and classify them

121
00:04:07,519 --> 00:04:09,360
individually just so we can pass them to

122
00:04:09,360 --> 00:04:10,959
our network

123
00:04:10,959 --> 00:04:13,280
so looking at a low pass filter of this

124
00:04:13,280 --> 00:04:15,680
signal we look here and we can see that

125
00:04:15,680 --> 00:04:17,759
as we go through the signal if we

126
00:04:17,759 --> 00:04:19,519
utilize some form of threshold we can

127
00:04:19,519 --> 00:04:21,759
very easily detect the beginning of that

128
00:04:21,759 --> 00:04:23,520
button press and then utilize it to

129
00:04:23,520 --> 00:04:26,800
classify in the neural network

130
00:04:26,800 --> 00:04:29,120
finally we now have with all this

131
00:04:29,120 --> 00:04:31,040
information we can start to begin to

132
00:04:31,040 --> 00:04:32,800
worry about what might our animation

133
00:04:32,800 --> 00:04:34,240
inferences look like what kind of

134
00:04:34,240 --> 00:04:37,120
accuracy might we expect from the system

135
00:04:37,120 --> 00:04:38,880
so in this system we have two main goals

136
00:04:38,880 --> 00:04:40,880
the first thing we want to demonstrate

137
00:04:40,880 --> 00:04:42,479
is the charger surfing is very effective

138
00:04:42,479 --> 00:04:44,160
across a wide range of phones with

139
00:04:44,160 --> 00:04:46,080
multiple users and the next thing we

140
00:04:46,080 --> 00:04:47,360
want to do is demonstrate that it

141
00:04:47,360 --> 00:04:49,520
transfers across phones of the same

142
00:04:49,520 --> 00:04:50,400
model

143
00:04:50,400 --> 00:04:51,840
the attacker isn't going to have your

144
00:04:51,840 --> 00:04:53,440
exact phone so we need to make sure that

145
00:04:53,440 --> 00:04:55,919
he can train on his phone and test on

146
00:04:55,919 --> 00:04:57,120
your phone

147
00:04:57,120 --> 00:04:58,960
so we have two kind of broad analytical

148
00:04:58,960 --> 00:05:00,800
thrusts here one where we have four

149
00:05:00,800 --> 00:05:02,160
different phones and we look at a lot of

150
00:05:02,160 --> 00:05:04,160
feasibility studies and then a more

151
00:05:04,160 --> 00:05:06,000
detailed analysis where we look at some

152
00:05:06,000 --> 00:05:09,199
of that cross-device testing

153
00:05:09,199 --> 00:05:11,199
in the broad analysis the first thing we

154
00:05:11,199 --> 00:05:13,520
want to do is just verify that we can

155
00:05:13,520 --> 00:05:14,400
achieve

156
00:05:14,400 --> 00:05:16,800
a very good single button accuracy we're

157
00:05:16,800 --> 00:05:18,240
not going to be able to do some form of

158
00:05:18,240 --> 00:05:20,320
pin code analysis but we can't at least

159
00:05:20,320 --> 00:05:22,160
figure out how to classify a single

160
00:05:22,160 --> 00:05:24,479
button accurately so we gather a large

161
00:05:24,479 --> 00:05:26,000
amount of data from a number of

162
00:05:26,000 --> 00:05:28,240
different users and we begin to process

163
00:05:28,240 --> 00:05:31,120
this what we find is very interesting we

164
00:05:31,120 --> 00:05:33,440
find that more users is actually far

165
00:05:33,440 --> 00:05:35,360
more important than more data

166
00:05:35,360 --> 00:05:37,600
so as we begin to train for many users

167
00:05:37,600 --> 00:05:39,440
we begin to see our accuracies greatly

168
00:05:39,440 --> 00:05:41,680
increase and this is because users

169
00:05:41,680 --> 00:05:43,039
interact with the screen in different

170
00:05:43,039 --> 00:05:44,240
ways

171
00:05:44,240 --> 00:05:45,919
users might press more towards the left

172
00:05:45,919 --> 00:05:47,440
or more towards the right of a button

173
00:05:47,440 --> 00:05:48,560
and that's going to cause different

174
00:05:48,560 --> 00:05:49,840
animations

175
00:05:49,840 --> 00:05:52,160
as we gather more and more users we

176
00:05:52,160 --> 00:05:54,800
begin to you know really see the gamut

177
00:05:54,800 --> 00:05:57,440
of these animations and now we're able

178
00:05:57,440 --> 00:06:00,080
to achieve very high accuracies in the

179
00:06:00,080 --> 00:06:02,880
end we had about a 98.7 accuracy with

180
00:06:02,880 --> 00:06:05,759
five training users

181
00:06:05,759 --> 00:06:07,120
next we'll move on to a forge to

182
00:06:07,120 --> 00:06:09,840
passcode inferencing and we look at this

183
00:06:09,840 --> 00:06:11,680
from two perspectives our first trial

184
00:06:11,680 --> 00:06:14,400
accuracy and the 10th trial accuracy we

185
00:06:14,400 --> 00:06:16,800
choose 10 trials as our bottom number

186
00:06:16,800 --> 00:06:19,039
because most phones don't lock you out

187
00:06:19,039 --> 00:06:20,960
after the first trial but real really

188
00:06:20,960 --> 00:06:22,880
lock up or potentially erase themselves

189
00:06:22,880 --> 00:06:25,039
after 10 incorrect ties

190
00:06:25,039 --> 00:06:28,639
we see about a 99.5 success rate after

191
00:06:28,639 --> 00:06:30,720
10 trials which is a very encouraging

192
00:06:30,720 --> 00:06:33,199
number remember there are 10 000

193
00:06:33,199 --> 00:06:35,280
possible combinations here so this is

194
00:06:35,280 --> 00:06:37,280
much much better than any type of random

195
00:06:37,280 --> 00:06:39,199
guess

196
00:06:39,199 --> 00:06:40,400
next you look at a little bit of a

197
00:06:40,400 --> 00:06:42,639
feasibility analysis remember up to this

198
00:06:42,639 --> 00:06:44,639
point we're using an oscilloscope we

199
00:06:44,639 --> 00:06:46,000
think you know an oscilloscope is

200
00:06:46,000 --> 00:06:48,400
important because we need to have

201
00:06:48,400 --> 00:06:51,120
high frequency analysis and very stable

202
00:06:51,120 --> 00:06:53,360
analysis but the question is do we

203
00:06:53,360 --> 00:06:56,000
really need this or can we begin to

204
00:06:56,000 --> 00:06:57,599
decrease that frequency and potentially

205
00:06:57,599 --> 00:07:00,160
make our setup we're stealthy

206
00:07:00,160 --> 00:07:02,479
so we do a sampling frequency study and

207
00:07:02,479 --> 00:07:03,840
we find that we can decrease our

208
00:07:03,840 --> 00:07:06,240
frequency all the way down to about 31.3

209
00:07:06,240 --> 00:07:08,880
kilohertz before we really speak into

210
00:07:08,880 --> 00:07:10,639
the accuracy fall off

211
00:07:10,639 --> 00:07:13,520
now 31.3 kilohertz is not that fast of a

212
00:07:13,520 --> 00:07:16,080
sampling rate and we develop a low-cost

213
00:07:16,080 --> 00:07:19,039
attack to utilize this sampling rate so

214
00:07:19,039 --> 00:07:22,000
we gather an esp32 wi-fi enabled

215
00:07:22,000 --> 00:07:24,720
bluetooth microcontroller as well as an

216
00:07:24,720 --> 00:07:26,240
off-the-shelf analog to digital

217
00:07:26,240 --> 00:07:27,360
converter

218
00:07:27,360 --> 00:07:29,280
tying these two together plus less than

219
00:07:29,280 --> 00:07:31,120
twenty dollars and we can create a very

220
00:07:31,120 --> 00:07:33,520
stealthy system that can stream very

221
00:07:33,520 --> 00:07:36,319
accurate data to our system for very low

222
00:07:36,319 --> 00:07:38,319
cost

223
00:07:38,319 --> 00:07:40,479
utilizing this low cost system we then

224
00:07:40,479 --> 00:07:43,039
start to enter a more detailed analysis

225
00:07:43,039 --> 00:07:44,800
in our question here we look at that

226
00:07:44,800 --> 00:07:46,720
kind of cross-device setting some

227
00:07:46,720 --> 00:07:48,479
different configurations and finally

228
00:07:48,479 --> 00:07:51,120
some defenses for this system

229
00:07:51,120 --> 00:07:52,879
now our cross-device experiments

230
00:07:52,879 --> 00:07:54,560
remember the main thing we want to prove

231
00:07:54,560 --> 00:07:57,039
here is that this isn't independ this is

232
00:07:57,039 --> 00:07:58,800
actually independent of the phone it

233
00:07:58,800 --> 00:08:01,520
doesn't depend on your exact phone so if

234
00:08:01,520 --> 00:08:04,400
the attacker has an iphone 8 plus and is

235
00:08:04,400 --> 00:08:06,960
able to train the system can his trained

236
00:08:06,960 --> 00:08:10,639
system attack your iphone 8 plus

237
00:08:10,639 --> 00:08:12,639
and so we test this with two scenarios

238
00:08:12,639 --> 00:08:15,199
we have two iphone 6 pluses and two

239
00:08:15,199 --> 00:08:16,960
iphone 8 pluses

240
00:08:16,960 --> 00:08:18,400
the numbers we find here are very

241
00:08:18,400 --> 00:08:20,479
encouraging our single button accuracy

242
00:08:20,479 --> 00:08:22,400
is always above 99

243
00:08:22,400 --> 00:08:24,639
and even our six digit passcode values

244
00:08:24,639 --> 00:08:27,280
end above 96 percent remember a six

245
00:08:27,280 --> 00:08:29,039
digit passcode now has a million

246
00:08:29,039 --> 00:08:31,599
possible values so this is again far

247
00:08:31,599 --> 00:08:33,440
superior to any type of brute force

248
00:08:33,440 --> 00:08:36,080
random guessing

249
00:08:36,080 --> 00:08:37,919
finally we look at kind of some attack

250
00:08:37,919 --> 00:08:39,599
effectiveness and for attack

251
00:08:39,599 --> 00:08:41,919
effectiveness we're really talking about

252
00:08:41,919 --> 00:08:44,560
what happens as we begin to change the

253
00:08:44,560 --> 00:08:46,720
conditions on the phone

254
00:08:46,720 --> 00:08:48,720
it's not feasible for us to assume that

255
00:08:48,720 --> 00:08:50,720
you are going to have the same wallpaper

256
00:08:50,720 --> 00:08:52,800
or brightness settings as the attacker

257
00:08:52,800 --> 00:08:55,600
however if we can demonstrate that this

258
00:08:55,600 --> 00:08:57,519
doesn't really matter that's a big win

259
00:08:57,519 --> 00:08:59,200
for our attack

260
00:08:59,200 --> 00:09:01,440
what we see is exactly that across

261
00:09:01,440 --> 00:09:02,720
different brightnesses and different

262
00:09:02,720 --> 00:09:05,200
wallpapers we see almost no drop-off in

263
00:09:05,200 --> 00:09:07,200
accuracy our worst case number here is

264
00:09:07,200 --> 00:09:08,399
97

265
00:09:08,399 --> 00:09:10,800
which again really isn't that big of a

266
00:09:10,800 --> 00:09:14,560
fall off from our about 98 that we saw

267
00:09:14,560 --> 00:09:18,240
in the normal phone setting

268
00:09:18,240 --> 00:09:20,320
finally we look at the counter measures

269
00:09:20,320 --> 00:09:22,000
and in the counter measures our big

270
00:09:22,000 --> 00:09:23,680
question is can we stop this attack

271
00:09:23,680 --> 00:09:25,680
either hopefully in software but at

272
00:09:25,680 --> 00:09:27,680
least in hardware

273
00:09:27,680 --> 00:09:29,839
so looking from the software perspective

274
00:09:29,839 --> 00:09:32,080
our idea is let's see if we can

275
00:09:32,080 --> 00:09:34,240
really film up this system by adding a

276
00:09:34,240 --> 00:09:37,040
lot of extra noise via a live wallpaper

277
00:09:37,040 --> 00:09:38,480
now with the live wallpaper we're going

278
00:09:38,480 --> 00:09:40,720
to see continuous animation so the

279
00:09:40,720 --> 00:09:41,760
question is because in the neural

280
00:09:41,760 --> 00:09:43,839
network identify the animations that

281
00:09:43,839 --> 00:09:46,320
matter from all these noisy animations

282
00:09:46,320 --> 00:09:48,000
the answer is yes

283
00:09:48,000 --> 00:09:50,000
the neural network when trained on the

284
00:09:50,000 --> 00:09:52,560
live wallpaper was able to accurately

285
00:09:52,560 --> 00:09:55,120
inference any other samples we gave it

286
00:09:55,120 --> 00:09:57,920
as long as again we trained with live

287
00:09:57,920 --> 00:09:59,600
wallpaper so training with a live

288
00:09:59,600 --> 00:10:01,360
wallpaper teaches the network enough

289
00:10:01,360 --> 00:10:03,360
that it can test on any live wallpapers

290
00:10:03,360 --> 00:10:05,600
that we threw at it and the system is

291
00:10:05,600 --> 00:10:07,839
completely not thwarted by live

292
00:10:07,839 --> 00:10:09,120
wallpapers

293
00:10:09,120 --> 00:10:10,640
the next question is all right can we

294
00:10:10,640 --> 00:10:13,279
filter the power output potentially

295
00:10:13,279 --> 00:10:15,200
we know that lowering the sampling rate

296
00:10:15,200 --> 00:10:16,560
is going to decrease the attack

297
00:10:16,560 --> 00:10:18,560
effectiveness perhaps we can filter the

298
00:10:18,560 --> 00:10:20,000
power output

299
00:10:20,000 --> 00:10:23,040
with a low pass filter potentially an rc

300
00:10:23,040 --> 00:10:25,920
circuit within the charging circuitry

301
00:10:25,920 --> 00:10:28,240
and we gave this a try and what we found

302
00:10:28,240 --> 00:10:30,320
was as expected

303
00:10:30,320 --> 00:10:32,079
utilizing a low filter completely

304
00:10:32,079 --> 00:10:34,079
obliterates any signal that's useful to

305
00:10:34,079 --> 00:10:36,000
the neural network and

306
00:10:36,000 --> 00:10:37,920
partner surfing as a whole and we're

307
00:10:37,920 --> 00:10:39,519
able to defend this system so we would

308
00:10:39,519 --> 00:10:42,640
expect that or recommend at least that

309
00:10:42,640 --> 00:10:45,200
newer phones should have some form of

310
00:10:45,200 --> 00:10:47,360
charging circuitry that has a filter

311
00:10:47,360 --> 00:10:50,079
system built into it

312
00:10:50,079 --> 00:10:51,760
i'd like to thank you so much for your

313
00:10:51,760 --> 00:10:53,519
time and if you have any questions that

314
00:10:53,519 --> 00:10:55,360
aren't answered either by the slides or

315
00:10:55,360 --> 00:10:57,040
the paper please feel free to reach out

316
00:10:57,040 --> 00:10:58,959
to us via that email there at the bottom

317
00:10:58,959 --> 00:11:02,920
of the slide thank you

