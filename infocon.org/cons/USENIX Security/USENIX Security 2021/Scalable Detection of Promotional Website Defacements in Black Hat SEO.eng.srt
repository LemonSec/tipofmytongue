1
00:00:09,200 --> 00:00:11,679
i'm simbo from the chinese university of

2
00:00:11,679 --> 00:00:14,400
hong kong in this talk i will share our

3
00:00:14,400 --> 00:00:17,119
work on website defacement detection

4
00:00:17,119 --> 00:00:19,279
this is a joint work with people from

5
00:00:19,279 --> 00:00:21,359
stanford technologies and the chinese

6
00:00:21,359 --> 00:00:24,480
university of hong kong

7
00:00:24,480 --> 00:00:26,960
so what is website defacement here's an

8
00:00:26,960 --> 00:00:28,400
interesting example

9
00:00:28,400 --> 00:00:30,000
in this screenshot of google search

10
00:00:30,000 --> 00:00:31,199
result

11
00:00:31,199 --> 00:00:33,760
can you notice anything strange

12
00:00:33,760 --> 00:00:36,320
look at the web page description there

13
00:00:36,320 --> 00:00:38,719
are some unrelated and elastic keywords

14
00:00:38,719 --> 00:00:40,960
in our university's website

15
00:00:40,960 --> 00:00:43,120
so what happens if we dig into the

16
00:00:43,120 --> 00:00:45,039
source code of the web page we can see

17
00:00:45,039 --> 00:00:46,640
that there are some malicious code

18
00:00:46,640 --> 00:00:49,680
snippets likely to be inserted by some

19
00:00:49,680 --> 00:00:50,800
hacker

20
00:00:50,800 --> 00:00:53,120
and their purpose is quite clear to

21
00:00:53,120 --> 00:00:54,960
promote their illicit products by

22
00:00:54,960 --> 00:00:57,520
hijacking search engine traffic

23
00:00:57,520 --> 00:01:00,320
this is a typical case of of what we

24
00:01:00,320 --> 00:01:02,879
called promotional devicement and is

25
00:01:02,879 --> 00:01:06,960
what we try to detect in this work

26
00:01:07,119 --> 00:01:09,680
traditionally this kind of hackings are

27
00:01:09,680 --> 00:01:11,760
a type of blackhead search engine

28
00:01:11,760 --> 00:01:13,119
optimization

29
00:01:13,119 --> 00:01:14,560
seo

30
00:01:14,560 --> 00:01:16,640
and well-known tricks like keyword

31
00:01:16,640 --> 00:01:19,280
stuffing and link farming has been run

32
00:01:19,280 --> 00:01:22,159
since the search engine was created

33
00:01:22,159 --> 00:01:23,200
however

34
00:01:23,200 --> 00:01:25,119
those classical tricks introduced

35
00:01:25,119 --> 00:01:27,920
massive modified modification so they

36
00:01:27,920 --> 00:01:31,280
can be easily detected

37
00:01:31,520 --> 00:01:33,680
people have proposed different approach

38
00:01:33,680 --> 00:01:34,960
for detection

39
00:01:34,960 --> 00:01:37,040
one of the most popular approach is

40
00:01:37,040 --> 00:01:39,759
based on profile anomaly detection

41
00:01:39,759 --> 00:01:41,840
basically to check whether a website

42
00:01:41,840 --> 00:01:44,000
contains some content that doesn't match

43
00:01:44,000 --> 00:01:47,200
its profile for example gambling content

44
00:01:47,200 --> 00:01:49,439
appears on a university webpage

45
00:01:49,439 --> 00:01:51,680
indicates something unusual

46
00:01:51,680 --> 00:01:53,759
there are also other approaches like

47
00:01:53,759 --> 00:01:55,840
change monitoring and image based

48
00:01:55,840 --> 00:01:58,240
detection which are suitable under

49
00:01:58,240 --> 00:02:01,119
different scenarios

50
00:02:01,439 --> 00:02:03,920
however we observe that recent trend of

51
00:02:03,920 --> 00:02:05,759
defacement makes detection more

52
00:02:05,759 --> 00:02:07,040
challenging

53
00:02:07,040 --> 00:02:09,038
this diagram shows modern defacement

54
00:02:09,038 --> 00:02:11,599
campaign based on the conspiring act of

55
00:02:11,599 --> 00:02:14,400
con of defacers and their customers

56
00:02:14,400 --> 00:02:16,160
when someone wants to search for some

57
00:02:16,160 --> 00:02:18,720
illicit content his search terms may

58
00:02:18,720 --> 00:02:21,040
trigger the block by search engines or

59
00:02:21,040 --> 00:02:23,040
other detection systems

60
00:02:23,040 --> 00:02:25,280
so he would try his luck with obfuscated

61
00:02:25,280 --> 00:02:26,800
keywords instead

62
00:02:26,800 --> 00:02:28,800
or recorded jargons

63
00:02:28,800 --> 00:02:31,599
defacers on the other side expecting

64
00:02:31,599 --> 00:02:34,000
this behavior of their customers and

65
00:02:34,000 --> 00:02:36,480
then planned corresponding jargons into

66
00:02:36,480 --> 00:02:38,160
the hacked websites

67
00:02:38,160 --> 00:02:39,200
meanwhile

68
00:02:39,200 --> 00:02:42,000
because of the uniqueness of the jargons

69
00:02:42,000 --> 00:02:44,640
devices only need to insert a minimum

70
00:02:44,640 --> 00:02:47,200
amount of content into the hex website

71
00:02:47,200 --> 00:02:48,959
to evade detection

72
00:02:48,959 --> 00:02:51,040
and can still have good chance to reach

73
00:02:51,040 --> 00:02:53,920
their customers

74
00:02:54,640 --> 00:02:56,959
this new defacement technique introduced

75
00:02:56,959 --> 00:02:59,920
two key challenges first the detector

76
00:02:59,920 --> 00:03:02,239
needs to understand the obfuscated

77
00:03:02,239 --> 00:03:04,800
keywords like the term highlighted in

78
00:03:04,800 --> 00:03:07,280
red on the deface web page example on

79
00:03:07,280 --> 00:03:08,319
the right

80
00:03:08,319 --> 00:03:10,879
second the detector needs to identify

81
00:03:10,879 --> 00:03:13,040
the tiny piece of the placement code

82
00:03:13,040 --> 00:03:14,800
from the whole webpage

83
00:03:14,800 --> 00:03:17,360
like the line highlighted in white

84
00:03:17,360 --> 00:03:19,120
this is like searching a needle in a

85
00:03:19,120 --> 00:03:21,519
haystack

86
00:03:21,519 --> 00:03:23,920
to tackle these challenges we propose

87
00:03:23,920 --> 00:03:25,440
two key solutions

88
00:03:25,440 --> 00:03:27,440
we design a jargon normalization

89
00:03:27,440 --> 00:03:30,080
algorithm to recover the obfuscated

90
00:03:30,080 --> 00:03:31,120
keywords

91
00:03:31,120 --> 00:03:33,840
and we use tech aware attention network

92
00:03:33,840 --> 00:03:37,920
to detect tiny insurgents

93
00:03:37,920 --> 00:03:40,400
based on these two key ideas we design

94
00:03:40,400 --> 00:03:42,799
and implement our cloud-based defacement

95
00:03:42,799 --> 00:03:45,040
monitoring system dmos

96
00:03:45,040 --> 00:03:47,120
the user only need to submit their

97
00:03:47,120 --> 00:03:50,239
domain to our service webpage then our

98
00:03:50,239 --> 00:03:52,319
system will actively monitor the web

99
00:03:52,319 --> 00:03:53,920
pages

100
00:03:53,920 --> 00:03:56,959
for each webpage demos will first detect

101
00:03:56,959 --> 00:03:58,799
and recover jargons with jargon

102
00:03:58,799 --> 00:04:01,200
normalization component

103
00:04:01,200 --> 00:04:03,040
then the webpage will be passed to the

104
00:04:03,040 --> 00:04:05,040
tech aware machine learning component

105
00:04:05,040 --> 00:04:07,840
for classification

106
00:04:07,840 --> 00:04:10,000
now let's get into details of each part

107
00:04:10,000 --> 00:04:11,680
of our system

108
00:04:11,680 --> 00:04:13,920
first let's see what people usually do

109
00:04:13,920 --> 00:04:15,920
to create jargons

110
00:04:15,920 --> 00:04:18,560
there are two types of dragons one we

111
00:04:18,560 --> 00:04:22,000
call homophonic in which some characters

112
00:04:22,000 --> 00:04:23,520
are replaced with

113
00:04:23,520 --> 00:04:26,240
characters in similar pronunciations

114
00:04:26,240 --> 00:04:29,120
for example the k replaced by c in the

115
00:04:29,120 --> 00:04:33,120
term mark 6 as highlighted in blue

116
00:04:33,120 --> 00:04:35,840
another is homomorphic dragons which

117
00:04:35,840 --> 00:04:38,080
means replacing characters in similar

118
00:04:38,080 --> 00:04:39,120
shapes

119
00:04:39,120 --> 00:04:43,120
as the 8 to 4 example in red even worse

120
00:04:43,120 --> 00:04:45,840
this too can be combined to create some

121
00:04:45,840 --> 00:04:47,360
mixed jargons

122
00:04:47,360 --> 00:04:49,199
the result is easy for humans to

123
00:04:49,199 --> 00:04:52,080
understand but will confuse machines

124
00:04:52,080 --> 00:04:54,160
know that we have mainly seen chinese

125
00:04:54,160 --> 00:04:56,639
cases in the world possibly because

126
00:04:56,639 --> 00:04:58,560
there are a lot of chinese characters in

127
00:04:58,560 --> 00:05:01,199
similar shapes or pronunciations

128
00:05:01,199 --> 00:05:03,120
which gives more flexibility for

129
00:05:03,120 --> 00:05:05,520
obfuscation

130
00:05:05,520 --> 00:05:07,600
this shows how the jargon normalization

131
00:05:07,600 --> 00:05:11,039
algorithm works first we fit sentences

132
00:05:11,039 --> 00:05:13,120
into a language model to detect

133
00:05:13,120 --> 00:05:14,960
non-fluent sentences

134
00:05:14,960 --> 00:05:17,199
then we generate candidates replacements

135
00:05:17,199 --> 00:05:20,000
for strange terms inside the sentence

136
00:05:20,000 --> 00:05:21,199
after that

137
00:05:21,199 --> 00:05:23,039
the replaced sentence goes through the

138
00:05:23,039 --> 00:05:25,919
language model again for fluency test

139
00:05:25,919 --> 00:05:28,240
if it becomes fluent that means we have

140
00:05:28,240 --> 00:05:30,479
formed the correct recovery of the

141
00:05:30,479 --> 00:05:32,560
jargon

142
00:05:32,560 --> 00:05:34,880
after dragon normalization we will fit

143
00:05:34,880 --> 00:05:36,840
web pages into the machine learning

144
00:05:36,840 --> 00:05:40,639
classifier remember the second key idea

145
00:05:40,639 --> 00:05:42,400
is to keep the tag information when

146
00:05:42,400 --> 00:05:43,919
doing this

147
00:05:43,919 --> 00:05:47,039
so first we will convert the html code

148
00:05:47,039 --> 00:05:49,280
into text sentence pairs

149
00:05:49,280 --> 00:05:51,440
note that we treat tag attributes that

150
00:05:51,440 --> 00:05:54,479
can hold text as separate text

151
00:05:54,479 --> 00:05:58,319
like the out attribute of image

152
00:05:58,319 --> 00:06:00,160
then we propose the tech aware

153
00:06:00,160 --> 00:06:02,960
hierarchical attention network t-h-a-n

154
00:06:02,960 --> 00:06:05,120
to train the classifier

155
00:06:05,120 --> 00:06:07,680
it first learns the texan's values for

156
00:06:07,680 --> 00:06:09,840
each text and is paired then in the

157
00:06:09,840 --> 00:06:12,000
second layer it learns to assign

158
00:06:12,000 --> 00:06:14,160
attentions to the text sentence pairs

159
00:06:14,160 --> 00:06:16,400
and generates a single web page

160
00:06:16,400 --> 00:06:17,840
embedding vector

161
00:06:17,840 --> 00:06:21,400
for final classification

162
00:06:21,440 --> 00:06:24,160
this visualizes the learned attentions

163
00:06:24,160 --> 00:06:27,199
we can see that texts like title meta

164
00:06:27,199 --> 00:06:28,880
which are more essential to search

165
00:06:28,880 --> 00:06:31,360
endings are automatically assigned with

166
00:06:31,360 --> 00:06:33,840
higher weights

167
00:06:33,840 --> 00:06:36,160
keywords related to gambling get more

168
00:06:36,160 --> 00:06:38,639
attention while uninteresting keywords

169
00:06:38,639 --> 00:06:41,600
get lower weights

170
00:06:42,319 --> 00:06:44,639
this diagram illustrates the effect of

171
00:06:44,639 --> 00:06:47,680
the overall pipeline of demos

172
00:06:47,680 --> 00:06:50,720
given given a webpage our system will

173
00:06:50,720 --> 00:06:53,919
first identify and recover obviously

174
00:06:53,919 --> 00:06:56,560
terms inside the text content

175
00:06:56,560 --> 00:06:58,880
then it will assign attention weights to

176
00:06:58,880 --> 00:07:00,720
different texans pairs

177
00:07:00,720 --> 00:07:02,720
and outputs a single embedding for

178
00:07:02,720 --> 00:07:05,199
classification

179
00:07:05,199 --> 00:07:07,759
we train the system with about half a

180
00:07:07,759 --> 00:07:10,160
million labeled web pages

181
00:07:10,160 --> 00:07:12,479
then we conduct performance evaluation

182
00:07:12,479 --> 00:07:14,400
and ablation study

183
00:07:14,400 --> 00:07:17,520
our system outperform existing solutions

184
00:07:17,520 --> 00:07:20,560
boost the precision from the level of 80

185
00:07:20,560 --> 00:07:22,639
to over 90 percent

186
00:07:22,639 --> 00:07:24,319
note that some commercial web

187
00:07:24,319 --> 00:07:27,199
application firewall has relatively high

188
00:07:27,199 --> 00:07:28,319
precision

189
00:07:28,319 --> 00:07:30,319
but also miss the majority of the face

190
00:07:30,319 --> 00:07:32,720
pages

191
00:07:32,720 --> 00:07:35,520
during the ablation study we find that

192
00:07:35,520 --> 00:07:38,400
by enabling tech awareness we can reduce

193
00:07:38,400 --> 00:07:40,479
the false alarm and thus relieve human

194
00:07:40,479 --> 00:07:43,280
efforts by 30 percent

195
00:07:43,280 --> 00:07:45,759
the jargon normalization module alone

196
00:07:45,759 --> 00:07:48,080
can further reduce human efforts by over

197
00:07:48,080 --> 00:07:50,319
40 percent

198
00:07:50,319 --> 00:07:52,879
together demos can indeed achieve

199
00:07:52,879 --> 00:07:56,080
production-ready performance

200
00:07:56,080 --> 00:07:58,639
we deploy demos to rail customers and

201
00:07:58,639 --> 00:08:01,680
monitored over 38 million web pages for

202
00:08:01,680 --> 00:08:03,120
five months

203
00:08:03,120 --> 00:08:04,639
the system has

204
00:08:04,639 --> 00:08:06,879
successfully detected over half a

205
00:08:06,879 --> 00:08:10,080
million defaced web pages in real life

206
00:08:10,080 --> 00:08:12,240
and a significant portion of them

207
00:08:12,240 --> 00:08:14,960
belongs to influential websites like

208
00:08:14,960 --> 00:08:16,960
government website and university

209
00:08:16,960 --> 00:08:19,520
websites

210
00:08:20,160 --> 00:08:22,720
we also did some comparison experiments

211
00:08:22,720 --> 00:08:24,879
to evaluate the performance of our

212
00:08:24,879 --> 00:08:27,919
system against some popular commercial

213
00:08:27,919 --> 00:08:29,599
url checkers

214
00:08:29,599 --> 00:08:31,919
we can see that demos increase both

215
00:08:31,919 --> 00:08:35,598
precision and recall largely

216
00:08:36,320 --> 00:08:38,559
this table shows the top a jargons

217
00:08:38,559 --> 00:08:40,559
transformed from the chinese term of

218
00:08:40,559 --> 00:08:41,679
mark vi

219
00:08:41,679 --> 00:08:43,599
you can see that this kind of techniques

220
00:08:43,599 --> 00:08:46,000
is quite common in defacement

221
00:08:46,000 --> 00:08:48,720
and it's surprising to see how creative

222
00:08:48,720 --> 00:08:51,040
those defacers are and they indeed

223
00:08:51,040 --> 00:08:53,120
obfuscate keywords with both characters

224
00:08:53,120 --> 00:08:57,120
in similar shapes and pronunciations

225
00:08:57,120 --> 00:09:00,320
we cut the frequency of infected html

226
00:09:00,320 --> 00:09:02,720
tags to see what kind of tags are more

227
00:09:02,720 --> 00:09:05,120
preferred by defaces

228
00:09:05,120 --> 00:09:07,760
the high ranking of some tags like a

229
00:09:07,760 --> 00:09:11,200
title and meta are expected as they are

230
00:09:11,200 --> 00:09:14,000
essential to search engine optimization

231
00:09:14,000 --> 00:09:17,279
one surprising result is the marquee tag

232
00:09:17,279 --> 00:09:19,600
if you look up a line you can see that

233
00:09:19,600 --> 00:09:22,560
this is the non-standard html tag

234
00:09:22,560 --> 00:09:24,959
that can hold automatically scrolling

235
00:09:24,959 --> 00:09:25,839
text

236
00:09:25,839 --> 00:09:28,720
we guess it can help devices to evade

237
00:09:28,720 --> 00:09:29,920
detections

238
00:09:29,920 --> 00:09:32,720
by search engines or web application

239
00:09:32,720 --> 00:09:34,880
files

240
00:09:34,880 --> 00:09:37,440
here are some other interesting findings

241
00:09:37,440 --> 00:09:39,600
in a significant portion of the face

242
00:09:39,600 --> 00:09:41,440
pack pages

243
00:09:41,440 --> 00:09:43,360
defacement appears in less than 10

244
00:09:43,360 --> 00:09:46,480
places so this type of dlc defacement

245
00:09:46,480 --> 00:09:49,200
are indeed common right now overtaking

246
00:09:49,200 --> 00:09:51,760
old tricks like killer staffing

247
00:09:51,760 --> 00:09:53,920
as we collected our data set from

248
00:09:53,920 --> 00:09:56,240
various search engines we also noticed

249
00:09:56,240 --> 00:09:57,839
that mobile search engines start to

250
00:09:57,839 --> 00:10:00,080
attract the phasers attentions

251
00:10:00,080 --> 00:10:03,360
possibly because of weaker protection

252
00:10:03,360 --> 00:10:04,560
interestingly

253
00:10:04,560 --> 00:10:08,560
in 2019 we noticed a spike of defacement

254
00:10:08,560 --> 00:10:10,880
in chinese government websites

255
00:10:10,880 --> 00:10:13,360
after some dig up we find that it is

256
00:10:13,360 --> 00:10:16,079
result of regulation change which

257
00:10:16,079 --> 00:10:18,240
requires all government website to

258
00:10:18,240 --> 00:10:19,920
migrate to a new

259
00:10:19,920 --> 00:10:21,360
official domain

260
00:10:21,360 --> 00:10:26,320
so the old domains are left unattended

261
00:10:26,320 --> 00:10:28,560
finally some conclusions

262
00:10:28,560 --> 00:10:30,640
we have designed and deployed demos to

263
00:10:30,640 --> 00:10:33,600
monitor over 7000 rail websites and

264
00:10:33,600 --> 00:10:34,880
found

265
00:10:34,880 --> 00:10:36,959
over 11 percent of them have been

266
00:10:36,959 --> 00:10:39,279
defaced at least once

267
00:10:39,279 --> 00:10:41,600
although our design focused on chinese

268
00:10:41,600 --> 00:10:43,920
website defacement

269
00:10:43,920 --> 00:10:46,079
we have also demonstrated that it's easy

270
00:10:46,079 --> 00:10:48,480
to extend to other languages with

271
00:10:48,480 --> 00:10:50,160
reasonable performance

272
00:10:50,160 --> 00:10:52,560
we have released some english samples on

273
00:10:52,560 --> 00:10:54,480
our website

274
00:10:54,480 --> 00:10:56,560
so please check our paper if you are

275
00:10:56,560 --> 00:10:59,040
interested in more details

276
00:10:59,040 --> 00:11:01,040
and if you have any other questions just

277
00:11:01,040 --> 00:11:05,000
drop us an email

