1
00:00:08,080 --> 00:00:10,320
hi everyone in this video i am going to

2
00:00:10,320 --> 00:00:12,320
present our paper that is real-time

3
00:00:12,320 --> 00:00:14,559
fishing administration i know any

4
00:00:14,559 --> 00:00:17,040
switching up

5
00:00:20,880 --> 00:00:22,480
so for a long time online user

6
00:00:22,480 --> 00:00:24,080
authentication has been based on

7
00:00:24,080 --> 00:00:26,720
passwords but as the many research works

8
00:00:26,720 --> 00:00:28,720
have shown that passwords are have many

9
00:00:28,720 --> 00:00:30,880
vulnerabilities they are weak usually

10
00:00:30,880 --> 00:00:32,719
they have entropy

11
00:00:32,719 --> 00:00:34,399
users also like to reuse the same

12
00:00:34,399 --> 00:00:36,480
passwords on multiple websites so if one

13
00:00:36,480 --> 00:00:37,760
of them is

14
00:00:37,760 --> 00:00:39,600
compromised then the user password is

15
00:00:39,600 --> 00:00:41,280
linked and potentially all the users

16
00:00:41,280 --> 00:00:43,520
accounts are compromised as well also

17
00:00:43,520 --> 00:00:45,440
they are vulnerable to key loggers but

18
00:00:45,440 --> 00:00:46,719
the one

19
00:00:46,719 --> 00:00:48,879
specific attack vector that we are

20
00:00:48,879 --> 00:00:50,879
interested in we focus in this paper is

21
00:00:50,879 --> 00:00:51,920
fishing

22
00:00:51,920 --> 00:00:54,399
fishing has been going on for a while

23
00:00:54,399 --> 00:00:56,879
and initially the fishing websites were

24
00:00:56,879 --> 00:00:59,120
like very simple they would collect the

25
00:00:59,120 --> 00:01:00,960
user credentials and then the attackers

26
00:01:00,960 --> 00:01:03,359
would exploit them later and such

27
00:01:03,359 --> 00:01:05,519
attacks are cheap and scalable and in

28
00:01:05,519 --> 00:01:07,439
order to prevent from such attack

29
00:01:07,439 --> 00:01:10,400
vectors but also from other attacks

30
00:01:10,400 --> 00:01:12,400
service providers started to deploy

31
00:01:12,400 --> 00:01:15,200
two-factor authentications which usually

32
00:01:15,200 --> 00:01:18,479
require for a otp like one-time password

33
00:01:18,479 --> 00:01:20,159
via some

34
00:01:20,159 --> 00:01:22,720
special hardware or even some sms or

35
00:01:22,720 --> 00:01:25,119
smart points soon after that also

36
00:01:25,119 --> 00:01:27,200
attackers advanced their tools and

37
00:01:27,200 --> 00:01:29,280
actually they developed like real-time

38
00:01:29,280 --> 00:01:31,920
fishing which can easily also to

39
00:01:31,920 --> 00:01:34,640
backpacks do factor authentication and

40
00:01:34,640 --> 00:01:35,600
such

41
00:01:35,600 --> 00:01:38,400
tools are also cheap and scalable and so

42
00:01:38,400 --> 00:01:42,240
after that the industry reacted with uh

43
00:01:42,240 --> 00:01:43,920
simpler and stronger authentication

44
00:01:43,920 --> 00:01:45,840
which is called fido plus identity

45
00:01:45,840 --> 00:01:47,680
online and this is meant

46
00:01:47,680 --> 00:01:50,880
especially to counter phishing attacks

47
00:01:50,880 --> 00:01:52,960
however in this paper we

48
00:01:52,960 --> 00:01:55,680
ask if a real phishing attack is still

49
00:01:55,680 --> 00:01:58,240
possible also with fido in place and if

50
00:01:58,240 --> 00:01:59,759
such attacks are

51
00:01:59,759 --> 00:02:02,320
all cheap and scalable as well

52
00:02:02,320 --> 00:02:04,560
now i will present the main goals of

53
00:02:04,560 --> 00:02:06,880
fido fido aims to provide secure

54
00:02:06,880 --> 00:02:08,800
authentication which is also privacy

55
00:02:08,800 --> 00:02:12,000
preserving also it aims to be easy to

56
00:02:12,000 --> 00:02:14,800
use and scalable as well statement from

57
00:02:14,800 --> 00:02:17,920
five which captures uh nicely all the

58
00:02:17,920 --> 00:02:20,480
goals that the fido aims to achieve it's

59
00:02:20,480 --> 00:02:22,800
like this one in the final audience

60
00:02:22,800 --> 00:02:25,120
which says that 52 cryptographic login

61
00:02:25,120 --> 00:02:27,360
and credentials are unique across every

62
00:02:27,360 --> 00:02:29,280
website never leave the user's device

63
00:02:29,280 --> 00:02:31,920
and are never stored in a server

64
00:02:31,920 --> 00:02:34,080
and they claim that this security model

65
00:02:34,080 --> 00:02:35,840
eliminates the risk of phishing all

66
00:02:35,840 --> 00:02:39,440
forms of password and the replay attacks

67
00:02:39,440 --> 00:02:41,840
so as an overview to understand the

68
00:02:41,840 --> 00:02:42,879
trusted

69
00:02:42,879 --> 00:02:44,959
entities of that the fidu assumes are

70
00:02:44,959 --> 00:02:46,800
the private servers which are going to

71
00:02:46,800 --> 00:02:49,200
authenticate the users it is also the

72
00:02:49,200 --> 00:02:51,200
glass software and the host of the user

73
00:02:51,200 --> 00:02:54,400
so it's me which means that the browser

74
00:02:54,400 --> 00:02:56,720
supports some specific apis but also

75
00:02:56,720 --> 00:02:58,720
there are no malicious applications

76
00:02:58,720 --> 00:03:01,440
running on the users lost and the

77
00:03:01,440 --> 00:03:04,560
the last trusted part is

78
00:03:04,560 --> 00:03:06,640
the authenticators or as they are known

79
00:03:06,640 --> 00:03:09,120
as security keys and the security key

80
00:03:09,120 --> 00:03:10,560
might be a

81
00:03:10,560 --> 00:03:12,800
hardware device a smartphone or even a

82
00:03:12,800 --> 00:03:14,800
smart watch

83
00:03:14,800 --> 00:03:16,640
also fido assumes

84
00:03:16,640 --> 00:03:18,159
trust on first use which means the

85
00:03:18,159 --> 00:03:20,959
enrollment is trusted and in during this

86
00:03:20,959 --> 00:03:23,599
process the user enrolls its uh

87
00:03:23,599 --> 00:03:25,680
authenticator or the security key to a

88
00:03:25,680 --> 00:03:28,159
server so it starts with request from

89
00:03:28,159 --> 00:03:30,239
the browser and then the server will

90
00:03:30,239 --> 00:03:32,640
reply with some username and

91
00:03:32,640 --> 00:03:34,239
challenge like notes and some optional

92
00:03:34,239 --> 00:03:36,480
data if necessary and it is important to

93
00:03:36,480 --> 00:03:38,959
note that the browser will forward such

94
00:03:38,959 --> 00:03:41,360
data to the authenticator and it will

95
00:03:41,360 --> 00:03:44,560
append the app id which is linked to the

96
00:03:44,560 --> 00:03:46,560
domain that the user is visiting right

97
00:03:46,560 --> 00:03:49,120
now so if the user is visiting a

98
00:03:49,120 --> 00:03:51,280
phishing domain then

99
00:03:51,280 --> 00:03:52,799
the browser will send the phishing

100
00:03:52,799 --> 00:03:55,519
domain to the authenticator

101
00:03:55,519 --> 00:03:58,720
and in the end the user has to click to

102
00:03:58,720 --> 00:04:00,799
the authenticator in order to generate a

103
00:04:00,799 --> 00:04:02,560
signature which is then sent to the

104
00:04:02,560 --> 00:04:04,640
browser and the browser sends this to

105
00:04:04,640 --> 00:04:07,040
the server now the server has the public

106
00:04:07,040 --> 00:04:10,959
key of the user's authenticator

107
00:04:11,120 --> 00:04:12,400
then after

108
00:04:12,400 --> 00:04:14,560
the user has a rooted security key now

109
00:04:14,560 --> 00:04:17,358
the user can login using fido to his

110
00:04:17,358 --> 00:04:19,839
account and again the

111
00:04:19,839 --> 00:04:22,160
the flow is quite similar to the

112
00:04:22,160 --> 00:04:24,560
enrollment again it starts with a login

113
00:04:24,560 --> 00:04:26,479
request from the browser

114
00:04:26,479 --> 00:04:29,040
and then the server replaces some data

115
00:04:29,040 --> 00:04:32,000
username and nodes and again the browser

116
00:04:32,000 --> 00:04:34,080
now appends the app id which is linked

117
00:04:34,080 --> 00:04:35,759
to a domain that the user is currently

118
00:04:35,759 --> 00:04:38,479
visiting and the user will click in the

119
00:04:38,479 --> 00:04:40,240
authenticator or touch it depending on

120
00:04:40,240 --> 00:04:42,960
the model and this will

121
00:04:42,960 --> 00:04:45,600
trigger the signature computation which

122
00:04:45,600 --> 00:04:47,199
then is sent to the browser and the

123
00:04:47,199 --> 00:04:49,600
browser forwards this to the server so

124
00:04:49,600 --> 00:04:50,560
if the

125
00:04:50,560 --> 00:04:52,960
user is visiting some phishing website

126
00:04:52,960 --> 00:04:56,000
at this point the browser would send the

127
00:04:56,000 --> 00:04:57,759
phishing app id

128
00:04:57,759 --> 00:05:00,000
and the device would sign the phishing

129
00:05:00,000 --> 00:05:02,400
app id which should be invalid for the

130
00:05:02,400 --> 00:05:04,320
legitimate server

131
00:05:04,320 --> 00:05:06,320
and in the end the server will verify

132
00:05:06,320 --> 00:05:08,479
the signature and if the if the

133
00:05:08,479 --> 00:05:10,320
signature is correct and the user has

134
00:05:10,320 --> 00:05:12,960
been in the correct app id it means that

135
00:05:12,960 --> 00:05:15,039
the user the server will give access to

136
00:05:15,039 --> 00:05:17,680
the user and at this point the fido

137
00:05:17,680 --> 00:05:20,800
protocol ends however if the user

138
00:05:20,800 --> 00:05:23,520
is interacting with the with a malicious

139
00:05:23,520 --> 00:05:25,600
website it means that now

140
00:05:25,600 --> 00:05:27,280
the malicious website or the fishing

141
00:05:27,280 --> 00:05:29,440
website can show any arbitrary feedback

142
00:05:29,440 --> 00:05:31,759
to the user

143
00:05:31,759 --> 00:05:34,560
and since the fighter doesn't assume any

144
00:05:34,560 --> 00:05:37,520
uh secure feedback this allows an

145
00:05:37,520 --> 00:05:39,600
attacker to render the usual success

146
00:05:39,600 --> 00:05:41,759
message profile to the user and the user

147
00:05:41,759 --> 00:05:43,840
has no way how to prove if the

148
00:05:43,840 --> 00:05:47,280
successful message is true or not

149
00:05:47,280 --> 00:05:49,600
and potentially by seeing a success

150
00:05:49,600 --> 00:05:51,919
message for the five step the user gets

151
00:05:51,919 --> 00:05:54,479
a false sense of security

152
00:05:54,479 --> 00:05:56,880
another weakness on the real deployment

153
00:05:56,880 --> 00:05:59,199
is that um recovery and fallbacks are

154
00:05:59,199 --> 00:06:01,680
really necessary so fido makes the

155
00:06:01,680 --> 00:06:03,280
trade-off office

156
00:06:03,280 --> 00:06:05,199
by favoring the security and usability

157
00:06:05,199 --> 00:06:07,520
versus availability but this means that

158
00:06:07,520 --> 00:06:08,880
the server

159
00:06:08,880 --> 00:06:10,639
the server should have also a secure

160
00:06:10,639 --> 00:06:12,720
recovery at scale which is a difficult

161
00:06:12,720 --> 00:06:15,600
task and mostly like in

162
00:06:15,600 --> 00:06:17,600
a common practice for service providers

163
00:06:17,600 --> 00:06:20,560
is to rely on weaker 2fas but it is

164
00:06:20,560 --> 00:06:22,479
important to note that all such

165
00:06:22,479 --> 00:06:24,000
two-factor authentications are

166
00:06:24,000 --> 00:06:26,000
vulnerable to phishing

167
00:06:26,000 --> 00:06:28,319
so we inspected the alexa top 100

168
00:06:28,319 --> 00:06:30,319
websites and actually we

169
00:06:30,319 --> 00:06:33,759
noticed that the 23 of them support fido

170
00:06:33,759 --> 00:06:35,440
and 14 of the

171
00:06:35,440 --> 00:06:37,600
these websites are partners of fido as

172
00:06:37,600 --> 00:06:38,560
well

173
00:06:38,560 --> 00:06:40,639
however all of them allow alternatives

174
00:06:40,639 --> 00:06:42,560
to file and even some of them ask the

175
00:06:42,560 --> 00:06:44,639
users to enroll an alternative just in

176
00:06:44,639 --> 00:06:47,520
case the user will misplace or lose the

177
00:06:47,520 --> 00:06:49,360
security key in the future so they have

178
00:06:49,360 --> 00:06:52,400
another way to authenticate

179
00:06:52,400 --> 00:06:55,919
and given this uh deployment by almost

180
00:06:55,919 --> 00:06:57,759
all the websites then we ask the

181
00:06:57,759 --> 00:06:59,680
questions like does spider really

182
00:06:59,680 --> 00:07:01,919
eliminate the fishing where is five

183
00:07:01,919 --> 00:07:04,720
enough to secure a user account and also

184
00:07:04,720 --> 00:07:06,880
what is the security of fido and other

185
00:07:06,880 --> 00:07:08,240
to face

186
00:07:08,240 --> 00:07:10,319
so here are some screenshots from the

187
00:07:10,319 --> 00:07:12,800
google login page and here here we have

188
00:07:12,800 --> 00:07:14,240
a user that has

189
00:07:14,240 --> 00:07:16,720
enrolled file to his account and as you

190
00:07:16,720 --> 00:07:19,039
see after the user has

191
00:07:19,039 --> 00:07:20,960
entered the username and password the

192
00:07:20,960 --> 00:07:24,479
user is asked for a file

193
00:07:24,479 --> 00:07:27,199
token and they however the user can

194
00:07:27,199 --> 00:07:29,360
still click cancel here and then it will

195
00:07:29,360 --> 00:07:31,919
be presented with a list of our two

196
00:07:31,919 --> 00:07:33,680
factor authentication that can log into

197
00:07:33,680 --> 00:07:35,360
the website and if the user clicks for

198
00:07:35,360 --> 00:07:37,199
example here in the google authenticator

199
00:07:37,199 --> 00:07:39,360
app then the user

200
00:07:39,360 --> 00:07:41,120
sees this

201
00:07:41,120 --> 00:07:43,520
page which asks for the otp but also

202
00:07:43,520 --> 00:07:46,400
which is a fishable

203
00:07:46,400 --> 00:07:48,319
in in this diagram we present an

204
00:07:48,319 --> 00:07:50,800
overview of our attack that we based on

205
00:07:50,800 --> 00:07:53,039
these two weaknesses that i presented

206
00:07:53,039 --> 00:07:54,639
earlier the first one is the lack of

207
00:07:54,639 --> 00:07:56,639
secure feedback and the other is the

208
00:07:56,639 --> 00:07:59,440
presence of the alternatives and here is

209
00:07:59,440 --> 00:08:02,319
the detailed workflow of the attack

210
00:08:02,319 --> 00:08:04,319
but in on high level i would like to say

211
00:08:04,319 --> 00:08:06,400
that the first part of the attack it

212
00:08:06,400 --> 00:08:08,560
exploits the lack of secure feedback to

213
00:08:08,560 --> 00:08:11,120
the user from fido so it potentially

214
00:08:11,120 --> 00:08:13,039
gives a false sense of security to the

215
00:08:13,039 --> 00:08:15,840
user while the second part is

216
00:08:15,840 --> 00:08:17,759
an interaction between the attacker and

217
00:08:17,759 --> 00:08:20,080
the server only where the attacker asks

218
00:08:20,080 --> 00:08:22,560
the server to downgrade the

219
00:08:22,560 --> 00:08:25,440
two factor authentication

220
00:08:25,440 --> 00:08:27,440
while the second part is a typical

221
00:08:27,440 --> 00:08:29,520
phishing attack where the attacker gets

222
00:08:29,520 --> 00:08:31,759
the otp from the user and forwards it to

223
00:08:31,759 --> 00:08:33,279
the server

224
00:08:33,279 --> 00:08:35,360
so what is important to note here is

225
00:08:35,360 --> 00:08:37,679
that all these three parts are easy to

226
00:08:37,679 --> 00:08:40,399
scale so an attacker can automate the

227
00:08:40,399 --> 00:08:42,080
process and

228
00:08:42,080 --> 00:08:43,440
also target

229
00:08:43,440 --> 00:08:45,040
hundreds or thousands or millions of

230
00:08:45,040 --> 00:08:48,160
users that are fido users as well

231
00:08:48,160 --> 00:08:50,080
in order to evaluate the effectiveness

232
00:08:50,080 --> 00:08:52,560
of the attack that we presented we

233
00:08:52,560 --> 00:08:54,240
we the

234
00:08:54,240 --> 00:08:55,760
user study

235
00:08:55,760 --> 00:08:57,519
in our paper we

236
00:08:57,519 --> 00:08:59,360
detail our reasoning for the study

237
00:08:59,360 --> 00:09:01,440
design in the scenario but on a high

238
00:09:01,440 --> 00:09:04,080
level i would like to say that we

239
00:09:04,080 --> 00:09:06,399
our user study is based in a role

240
00:09:06,399 --> 00:09:07,760
playing experiment and the

241
00:09:07,760 --> 00:09:09,680
semi-structured interview

242
00:09:09,680 --> 00:09:10,959
which lasted

243
00:09:10,959 --> 00:09:13,839
around one hour and as a scenario we

244
00:09:13,839 --> 00:09:16,080
assumed each participant is a new

245
00:09:16,080 --> 00:09:18,880
employee in a tech company and also each

246
00:09:18,880 --> 00:09:21,760
participant receives 15 emails for

247
00:09:21,760 --> 00:09:23,760
which are phishing attacks in total we

248
00:09:23,760 --> 00:09:27,360
had 51 participants

249
00:09:27,360 --> 00:09:28,720
in order to

250
00:09:28,720 --> 00:09:31,040
evaluate the results of course we didn't

251
00:09:31,040 --> 00:09:32,800
just uh consider as following

252
00:09:32,800 --> 00:09:35,600
professional participants that just

253
00:09:35,600 --> 00:09:37,360
submitted the credentials that we

254
00:09:37,360 --> 00:09:39,839
provided to them because this was a role

255
00:09:39,839 --> 00:09:43,040
playing uh scenarios for that we

256
00:09:43,040 --> 00:09:45,680
we classify participants as aware of

257
00:09:45,680 --> 00:09:48,800
fishing or unaware of fishing and

258
00:09:48,800 --> 00:09:51,279
where participants is someone that named

259
00:09:51,279 --> 00:09:53,760
at least one phishing email from the 15

260
00:09:53,760 --> 00:09:56,080
that we sent to them or they named it

261
00:09:56,080 --> 00:09:59,440
through fishing indicators such as like

262
00:09:59,440 --> 00:10:01,600
mismatching the domain name or something

263
00:10:01,600 --> 00:10:02,959
similar

264
00:10:02,959 --> 00:10:05,760
and as a result we had the four cases

265
00:10:05,760 --> 00:10:08,399
and yes in case one the participants

266
00:10:08,399 --> 00:10:09,760
falling in this category they are

267
00:10:09,760 --> 00:10:12,000
susceptible to phishing and actually

268
00:10:12,000 --> 00:10:15,040
they are 55 percent of our total

269
00:10:15,040 --> 00:10:17,680
participants in the user study the user

270
00:10:17,680 --> 00:10:19,680
study shows that the attack that we

271
00:10:19,680 --> 00:10:21,680
presented earlier in the paper is quite

272
00:10:21,680 --> 00:10:24,240
effective and actually the users even by

273
00:10:24,240 --> 00:10:25,760
using fido

274
00:10:25,760 --> 00:10:28,399
they are still potentially verner will

275
00:10:28,399 --> 00:10:31,040
do fishing so in the paper also we

276
00:10:31,040 --> 00:10:33,279
discussed some possible counter measures

277
00:10:33,279 --> 00:10:35,440
but i would like to note that this is

278
00:10:35,440 --> 00:10:36,399
not a

279
00:10:36,399 --> 00:10:38,240
an easy

280
00:10:38,240 --> 00:10:40,640
problem so also there are no simple

281
00:10:40,640 --> 00:10:42,640
solution to that one

282
00:10:42,640 --> 00:10:44,880
so a trivial counter measure would be to

283
00:10:44,880 --> 00:10:47,360
disable any weaker alternatives another

284
00:10:47,360 --> 00:10:49,519
countermeasure could be risk-based

285
00:10:49,519 --> 00:10:51,440
authentication but still also this is

286
00:10:51,440 --> 00:10:53,680
not full proven another solution would

287
00:10:53,680 --> 00:10:55,440
be like if the browser would provide

288
00:10:55,440 --> 00:10:57,440
additional hints the question is what is

289
00:10:57,440 --> 00:10:59,360
the added value of the fighter because

290
00:10:59,360 --> 00:11:02,320
if we had such a browser hints then any

291
00:11:02,320 --> 00:11:04,240
actually any 2fa would

292
00:11:04,240 --> 00:11:06,480
be secure enough to prevent against the

293
00:11:06,480 --> 00:11:08,800
phishing

294
00:11:08,800 --> 00:11:11,839
so the only way that we can have

295
00:11:11,839 --> 00:11:13,760
we can have a real counter measure is to

296
00:11:13,760 --> 00:11:15,839
have a secure login and also recovery

297
00:11:15,839 --> 00:11:17,360
algorithm because basically they're

298
00:11:17,360 --> 00:11:19,680
looking at the recovery or the fallbacks

299
00:11:19,680 --> 00:11:21,200
alternatives there are

300
00:11:21,200 --> 00:11:22,240
different

301
00:11:22,240 --> 00:11:24,800
different sides of the same coin the

302
00:11:24,800 --> 00:11:26,959
last counter measure maybe it's user

303
00:11:26,959 --> 00:11:29,680
education this is possible but yet it's

304
00:11:29,680 --> 00:11:31,519
somehow ineffective and with that i

305
00:11:31,519 --> 00:11:33,839
would like to conclude my presentation

306
00:11:33,839 --> 00:11:37,880
so thank you for your attention

307
00:11:45,760 --> 00:11:47,839
you

