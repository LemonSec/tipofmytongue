1
00:00:07,919 --> 00:00:10,320
hello everyone my name is sander ramesh

2
00:00:10,320 --> 00:00:11,840
and i'm a third year phd student at the

3
00:00:11,840 --> 00:00:13,840
national university of singapore today

4
00:00:13,840 --> 00:00:15,200
i'll be presenting our work on a

5
00:00:15,200 --> 00:00:17,279
physical key inference attack which was

6
00:00:17,279 --> 00:00:19,199
done as a collaboration between national

7
00:00:19,199 --> 00:00:20,960
university of singapore university of

8
00:00:20,960 --> 00:00:22,880
oklahoma and university of texas at san

9
00:00:22,880 --> 00:00:24,560
antonio

10
00:00:24,560 --> 00:00:26,560
today mechanical lock systems are a

11
00:00:26,560 --> 00:00:28,880
popular solution for securing doors and

12
00:00:28,880 --> 00:00:30,800
cabinets of several commercial buildings

13
00:00:30,800 --> 00:00:32,399
and residences

14
00:00:32,399 --> 00:00:34,640
further several reports predict the

15
00:00:34,640 --> 00:00:36,320
prevalence of the systems even in the

16
00:00:36,320 --> 00:00:37,600
future

17
00:00:37,600 --> 00:00:39,520
hence comes an important question

18
00:00:39,520 --> 00:00:42,320
are these systems actually secure

19
00:00:42,320 --> 00:00:44,079
some of the well-known existing attacks

20
00:00:44,079 --> 00:00:46,399
on these systems include lock picking

21
00:00:46,399 --> 00:00:48,000
which involves inserting tools into

22
00:00:48,000 --> 00:00:50,239
locks in order to unlock the mechanism

23
00:00:50,239 --> 00:00:52,000
however this has the disadvantage of

24
00:00:52,000 --> 00:00:54,239
being less healthy as inserting

25
00:00:54,239 --> 00:00:56,879
specialized tools raises suspicion

26
00:00:56,879 --> 00:00:59,440
to overcome this researchers proposed an

27
00:00:59,440 --> 00:01:01,520
attack which involves capturing images

28
00:01:01,520 --> 00:01:02,960
of keys in order to predict the key

29
00:01:02,960 --> 00:01:05,119
secret which is actually embedded in the

30
00:01:05,119 --> 00:01:06,799
key surface

31
00:01:06,799 --> 00:01:08,320
however this approach also has a

32
00:01:08,320 --> 00:01:10,080
limitation that it requires still images

33
00:01:10,080 --> 00:01:12,400
of keys and hence is less practical in a

34
00:01:12,400 --> 00:01:14,560
non-stationary setting

35
00:01:14,560 --> 00:01:16,880
this brings us to a research question as

36
00:01:16,880 --> 00:01:18,640
to whether we can design an attack which

37
00:01:18,640 --> 00:01:21,040
is more stealthy and practical compared

38
00:01:21,040 --> 00:01:23,040
to prior work

39
00:01:23,040 --> 00:01:25,200
as a potential solution to this question

40
00:01:25,200 --> 00:01:27,119
we wondered if you can utilize the sound

41
00:01:27,119 --> 00:01:29,200
of key insertion

42
00:01:29,200 --> 00:01:30,720
if you've ever inserted a key into a

43
00:01:30,720 --> 00:01:31,520
lock

44
00:01:31,520 --> 00:01:32,960
you've heard a characteristic sound of

45
00:01:32,960 --> 00:01:34,560
keen session

46
00:01:34,560 --> 00:01:38,520
let me play this for you now

47
00:01:40,000 --> 00:01:42,320
team and i were curious if this sound of

48
00:01:42,320 --> 00:01:44,159
key insertion contained any information

49
00:01:44,159 --> 00:01:45,680
about the key secret

50
00:01:45,680 --> 00:01:47,119
which is actually a set of cuts with

51
00:01:47,119 --> 00:01:48,880
varying depths

52
00:01:48,880 --> 00:01:50,399
to a surprise the answer was a

53
00:01:50,399 --> 00:01:52,079
resounding yes

54
00:01:52,079 --> 00:01:54,000
and in this rest in the rest of the talk

55
00:01:54,000 --> 00:01:57,439
we will show you how this is possible

56
00:01:57,439 --> 00:02:00,240
we now propose our work kinergy

57
00:02:00,240 --> 00:02:01,840
which is a novel audio based key

58
00:02:01,840 --> 00:02:03,520
inference approach

59
00:02:03,520 --> 00:02:06,079
specifically kinergy utilizes the timing

60
00:02:06,079 --> 00:02:08,239
information between audible clicks that

61
00:02:08,239 --> 00:02:09,758
occur during keen session for its

62
00:02:09,758 --> 00:02:11,120
inference

63
00:02:11,120 --> 00:02:12,800
because this information is inherently

64
00:02:12,800 --> 00:02:13,840
noisy

65
00:02:13,840 --> 00:02:15,840
kinergy augments this with other noisy

66
00:02:15,840 --> 00:02:18,000
information from the visual domain

67
00:02:18,000 --> 00:02:20,080
which specifically is blurry visuals of

68
00:02:20,080 --> 00:02:22,640
keys in motion

69
00:02:22,640 --> 00:02:24,319
the main goal of the attacker here is to

70
00:02:24,319 --> 00:02:27,040
launch a practical key inference attack

71
00:02:27,040 --> 00:02:29,520
specifically the attacker is capable of

72
00:02:29,520 --> 00:02:31,360
launching a proximity attack with the

73
00:02:31,360 --> 00:02:33,440
possession of smartphone

74
00:02:33,440 --> 00:02:35,440
that can be used to capture the video

75
00:02:35,440 --> 00:02:37,599
and audio of victim's key insertion

76
00:02:37,599 --> 00:02:40,000
similarly an attacker with long range

77
00:02:40,000 --> 00:02:42,239
recording equipment can perform the same

78
00:02:42,239 --> 00:02:44,480
attack from several meters away

79
00:02:44,480 --> 00:02:46,160
our work assumes that the attacker has

80
00:02:46,160 --> 00:02:48,239
knowledge of the locks make and model

81
00:02:48,239 --> 00:02:50,640
and also has access to 3d printer or

82
00:02:50,640 --> 00:02:51,760
code cutting machine in order to

83
00:02:51,760 --> 00:02:53,200
recreate the key

84
00:02:53,200 --> 00:02:55,519
before describing our attack we go into

85
00:02:55,519 --> 00:02:58,080
some essential background on locks

86
00:02:58,080 --> 00:03:00,640
within each lock are a set of pin stacks

87
00:03:00,640 --> 00:03:02,400
each of which consists of a top pin and

88
00:03:02,400 --> 00:03:03,680
a bottom pin

89
00:03:03,680 --> 00:03:06,080
in the locked state the boundary between

90
00:03:06,080 --> 00:03:07,519
the top and the bottom pin does not

91
00:03:07,519 --> 00:03:08,879
align with the shear line hence

92
00:03:08,879 --> 00:03:10,560
preventing rotation

93
00:03:10,560 --> 00:03:12,800
however when a key with the right set of

94
00:03:12,800 --> 00:03:15,040
depths is introduced into the lock the

95
00:03:15,040 --> 00:03:16,560
bottom pins are raised such that the pin

96
00:03:16,560 --> 00:03:18,159
stacks perfectly align with the shear

97
00:03:18,159 --> 00:03:20,720
line hence unlocking the lock

98
00:03:20,720 --> 00:03:23,040
if we take a closer look at the key

99
00:03:23,040 --> 00:03:25,040
we see that it has cuts of different

100
00:03:25,040 --> 00:03:26,080
depths

101
00:03:26,080 --> 00:03:27,840
it is in fact these depths that make up

102
00:03:27,840 --> 00:03:29,760
the secret of the key and are also

103
00:03:29,760 --> 00:03:31,440
called as key bittings

104
00:03:31,440 --> 00:03:33,519
each of these cuts take on 10 possible

105
00:03:33,519 --> 00:03:35,200
depth values

106
00:03:35,200 --> 00:03:37,519
each key secret is represented as a five

107
00:03:37,519 --> 00:03:40,640
digit number in this case 39359

108
00:03:40,640 --> 00:03:42,239
this analysis also indicates that the

109
00:03:42,239 --> 00:03:44,000
ideal key space that is the total number

110
00:03:44,000 --> 00:03:46,319
of keys should be 10 per phi however due

111
00:03:46,319 --> 00:03:47,760
to manufacturing constraints the actual

112
00:03:47,760 --> 00:03:50,319
number of keys is about 75000 the keys

113
00:03:50,319 --> 00:03:53,280
geometry also gives rise to peaks also

114
00:03:53,280 --> 00:03:55,519
known as ridges which become crucial

115
00:03:55,519 --> 00:03:56,879
part of our attack as they are

116
00:03:56,879 --> 00:03:58,640
responsible for the production of sound

117
00:03:58,640 --> 00:04:00,959
as we will see next we now explain the

118
00:04:00,959 --> 00:04:02,799
cause of key insertion sound which we

119
00:04:02,799 --> 00:04:04,640
first reported in our prior work

120
00:04:04,640 --> 00:04:07,519
published at hot mobile 2020.

121
00:04:07,519 --> 00:04:09,360
if we take a closer look at lock-in key

122
00:04:09,360 --> 00:04:11,200
during key insertion

123
00:04:11,200 --> 00:04:15,120
especially at the ridge in the pin

124
00:04:15,120 --> 00:04:16,720
we see that whenever the pin falls off

125
00:04:16,720 --> 00:04:19,120
the ridge it produces a sharp click

126
00:04:19,120 --> 00:04:20,320
sound

127
00:04:20,320 --> 00:04:21,918
because of the presence of multiple pins

128
00:04:21,918 --> 00:04:24,400
and ridges within the lock and key

129
00:04:24,400 --> 00:04:26,479
during key insertion the following click

130
00:04:26,479 --> 00:04:29,600
pattern images

131
00:04:29,600 --> 00:04:32,639
here the time t1 t2 t3 and so on

132
00:04:32,639 --> 00:04:34,080
indicate the time at which the different

133
00:04:34,080 --> 00:04:35,520
clicks occur

134
00:04:35,520 --> 00:04:37,120
and it is in fact the time interval

135
00:04:37,120 --> 00:04:39,520
between these clicks that carries

136
00:04:39,520 --> 00:04:41,440
information about the key secret or keys

137
00:04:41,440 --> 00:04:43,360
biddings

138
00:04:43,360 --> 00:04:44,960
given the bidding goal we can always

139
00:04:44,960 --> 00:04:47,040
compute the corresponding click pattern

140
00:04:47,040 --> 00:04:50,400
as an example given the code 39359 we

141
00:04:50,400 --> 00:04:52,720
can construct the exact shape of the key

142
00:04:52,720 --> 00:04:54,880
that corresponds to this code and hence

143
00:04:54,880 --> 00:04:56,400
precisely identify the position of

144
00:04:56,400 --> 00:04:57,840
ridges that are responsible for

145
00:04:57,840 --> 00:04:59,440
production of sound

146
00:04:59,440 --> 00:05:01,280
in this way we can utilize the distance

147
00:05:01,280 --> 00:05:02,880
between ridges to compute the

148
00:05:02,880 --> 00:05:05,280
corresponding audio click patterns

149
00:05:05,280 --> 00:05:07,280
in this process we make one assumption

150
00:05:07,280 --> 00:05:10,240
of consistent insertion speed

151
00:05:10,240 --> 00:05:12,080
due to this idealistic assumption we

152
00:05:12,080 --> 00:05:13,680
also call these audio click patterns

153
00:05:13,680 --> 00:05:15,600
simulated click patterns

154
00:05:15,600 --> 00:05:17,039
now that we are equipped with sufficient

155
00:05:17,039 --> 00:05:19,199
background we describe the high level

156
00:05:19,199 --> 00:05:21,440
design of kinergy which consists of the

157
00:05:21,440 --> 00:05:23,440
audio and video components

158
00:05:23,440 --> 00:05:25,520
the audio component takes as input the

159
00:05:25,520 --> 00:05:27,520
key insertion audio of victim key

160
00:05:27,520 --> 00:05:29,759
performs audio analysis to output an

161
00:05:29,759 --> 00:05:31,600
observed click pattern

162
00:05:31,600 --> 00:05:33,520
the video component takes as input

163
00:05:33,520 --> 00:05:35,600
blurry visuals of key insertions

164
00:05:35,600 --> 00:05:37,759
applies prior work to output a reduced

165
00:05:37,759 --> 00:05:38,880
key space

166
00:05:38,880 --> 00:05:41,199
this reduce space contains the victim

167
00:05:41,199 --> 00:05:43,520
key with high probability

168
00:05:43,520 --> 00:05:45,280
we then utilize the simulated pattern

169
00:05:45,280 --> 00:05:46,800
computation module

170
00:05:46,800 --> 00:05:49,199
to convert this key pool to a set of

171
00:05:49,199 --> 00:05:51,520
simulated patterns

172
00:05:51,520 --> 00:05:52,400
finally

173
00:05:52,400 --> 00:05:54,560
we have a pattern ranking module that

174
00:05:54,560 --> 00:05:57,520
ranks these keys k1 to kn

175
00:05:57,520 --> 00:05:59,360
depending on the similarity between

176
00:05:59,360 --> 00:06:01,520
their simulated patterns to that of the

177
00:06:01,520 --> 00:06:03,280
observed click pattern

178
00:06:03,280 --> 00:06:05,919
to in a sense convert this reduce key

179
00:06:05,919 --> 00:06:09,039
space to a set of key rank list

180
00:06:09,039 --> 00:06:10,560
in this example we see that the victim

181
00:06:10,560 --> 00:06:13,360
key takes a rank of three

182
00:06:13,360 --> 00:06:14,960
now we delve into the details of audio

183
00:06:14,960 --> 00:06:17,120
analysis particularly we talk about two

184
00:06:17,120 --> 00:06:18,400
important challenges faced by this

185
00:06:18,400 --> 00:06:19,840
module and briefly describe the

186
00:06:19,840 --> 00:06:20,960
solutions

187
00:06:20,960 --> 00:06:22,639
first let us look into the challenge of

188
00:06:22,639 --> 00:06:25,600
inconsistent insertion speed

189
00:06:25,600 --> 00:06:27,280
we know that the simulated pattern is

190
00:06:27,280 --> 00:06:29,280
modeled based out of constant insertion

191
00:06:29,280 --> 00:06:30,319
speed

192
00:06:30,319 --> 00:06:32,160
in the idealistic case where the real

193
00:06:32,160 --> 00:06:34,000
key insertion also exhibits the same

194
00:06:34,000 --> 00:06:35,919
pattern there would be a one-to-one

195
00:06:35,919 --> 00:06:37,520
correspondence between the clicks of the

196
00:06:37,520 --> 00:06:39,520
two patterns and this would make pattern

197
00:06:39,520 --> 00:06:41,520
matching straightforward

198
00:06:41,520 --> 00:06:43,600
however in reality the key insertion

199
00:06:43,600 --> 00:06:45,280
data looks very different

200
00:06:45,280 --> 00:06:47,680
and therefore the observed click pattern

201
00:06:47,680 --> 00:06:49,599
has very different trends from that of

202
00:06:49,599 --> 00:06:51,120
the simulated pattern

203
00:06:51,120 --> 00:06:52,880
even if we scale up the simulated click

204
00:06:52,880 --> 00:06:54,400
pattern to match that of the observe

205
00:06:54,400 --> 00:06:56,639
click pattern we see that there is no

206
00:06:56,639 --> 00:06:58,639
sufficient correspondence

207
00:06:58,639 --> 00:07:00,639
this is clearly a case of inconsistent

208
00:07:00,639 --> 00:07:02,319
insertion speed in the observed click

209
00:07:02,319 --> 00:07:03,440
pattern

210
00:07:03,440 --> 00:07:05,440
as a solution to this we propose the

211
00:07:05,440 --> 00:07:07,280
detection of what we call localized

212
00:07:07,280 --> 00:07:08,479
groups

213
00:07:08,479 --> 00:07:10,400
in a majority of keys

214
00:07:10,400 --> 00:07:12,960
clicks tend to occur in localized groups

215
00:07:12,960 --> 00:07:14,319
as shown here

216
00:07:14,319 --> 00:07:16,720
we call such localized groups clusters

217
00:07:16,720 --> 00:07:18,639
and in this case we observe up to five

218
00:07:18,639 --> 00:07:20,080
clusters

219
00:07:20,080 --> 00:07:21,680
also we make an important observation

220
00:07:21,680 --> 00:07:24,000
that clicks within clusters exhibit

221
00:07:24,000 --> 00:07:26,080
close to consistent speed

222
00:07:26,080 --> 00:07:28,319
due to this by detecting clusters from

223
00:07:28,319 --> 00:07:30,639
key insertion audio we will be able to

224
00:07:30,639 --> 00:07:33,039
perform pattern matching within clusters

225
00:07:33,039 --> 00:07:34,720
and hence solve the first challenge of

226
00:07:34,720 --> 00:07:37,039
inconsistent insertion speed

227
00:07:37,039 --> 00:07:38,160
now that we've solved the first

228
00:07:38,160 --> 00:07:39,919
challenge we move on to the second

229
00:07:39,919 --> 00:07:41,360
challenge which is noise and click

230
00:07:41,360 --> 00:07:42,560
detection

231
00:07:42,560 --> 00:07:44,479
if we take a particular cluster

232
00:07:44,479 --> 00:07:46,879
such as cluster 3 in this case and look

233
00:07:46,879 --> 00:07:48,639
at its corresponding observed click

234
00:07:48,639 --> 00:07:49,599
pattern

235
00:07:49,599 --> 00:07:51,599
we observe that there could be excessive

236
00:07:51,599 --> 00:07:53,039
clicks detected

237
00:07:53,039 --> 00:07:54,800
this could happen due to noise during

238
00:07:54,800 --> 00:07:56,400
key insertion or errors in click

239
00:07:56,400 --> 00:07:58,479
detection algorithm similarly there

240
00:07:58,479 --> 00:08:00,319
could be a case where a particular

241
00:08:00,319 --> 00:08:03,199
cluster has less clicks than required

242
00:08:03,199 --> 00:08:04,479
in order to solve the problem of

243
00:08:04,479 --> 00:08:06,479
detecting the wrong number of clicks or

244
00:08:06,479 --> 00:08:07,919
click pattern

245
00:08:07,919 --> 00:08:10,319
we propose fusing information across

246
00:08:10,319 --> 00:08:12,639
multiple key insertion trials by doing

247
00:08:12,639 --> 00:08:14,960
so we eliminate the noise and obtain a

248
00:08:14,960 --> 00:08:16,080
click pattern that most likely

249
00:08:16,080 --> 00:08:17,440
corresponds to the underlying click

250
00:08:17,440 --> 00:08:19,039
pattern

251
00:08:19,039 --> 00:08:21,599
finally we have a pattern ranking module

252
00:08:21,599 --> 00:08:24,319
that compares the clusters present in

253
00:08:24,319 --> 00:08:25,840
observed click pattern with the

254
00:08:25,840 --> 00:08:27,840
corresponding clusters present in

255
00:08:27,840 --> 00:08:29,599
simulated patterns

256
00:08:29,599 --> 00:08:32,958
by doing so it obtains a combined rank

257
00:08:32,958 --> 00:08:35,200
list which we depict here

258
00:08:35,200 --> 00:08:36,559
please refer to the paper for more

259
00:08:36,559 --> 00:08:37,760
details

260
00:08:37,760 --> 00:08:40,080
we now present the evaluation of kinergy

261
00:08:40,080 --> 00:08:42,000
for the experiment we create a door-like

262
00:08:42,000 --> 00:08:44,320
setup and install two locks on them of

263
00:08:44,320 --> 00:08:46,720
the schlage sc1 lock type

264
00:08:46,720 --> 00:08:49,440
this model has a total of 59207

265
00:08:49,440 --> 00:08:51,279
vulnerable keys based on the presence of

266
00:08:51,279 --> 00:08:52,480
clusters

267
00:08:52,480 --> 00:08:54,640
we test our system with a total of 74

268
00:08:54,640 --> 00:08:56,880
keys and also perform experiments with

269
00:08:56,880 --> 00:08:58,240
multiple microphones including

270
00:08:58,240 --> 00:09:00,640
smartphone parabolic mic and condenser

271
00:09:00,640 --> 00:09:02,640
mic we now provide a summary of our

272
00:09:02,640 --> 00:09:04,080
evaluation results

273
00:09:04,080 --> 00:09:05,839
the combined audio video approach

274
00:09:05,839 --> 00:09:07,440
considerably improves the performance of

275
00:09:07,440 --> 00:09:09,040
video only attack

276
00:09:09,040 --> 00:09:11,279
the acoustic attack works well up to 25

277
00:09:11,279 --> 00:09:13,360
feet with parabolic mic and up to 10

278
00:09:13,360 --> 00:09:15,600
feet with a smartphone mic

279
00:09:15,600 --> 00:09:17,360
our attack is also robust to noise such

280
00:09:17,360 --> 00:09:20,000
as dog barking and human speech up to 75

281
00:09:20,000 --> 00:09:21,680
db noise level

282
00:09:21,680 --> 00:09:23,680
finally our attack works well for

283
00:09:23,680 --> 00:09:25,120
different participants and is also

284
00:09:25,120 --> 00:09:27,519
consistent across days

285
00:09:27,519 --> 00:09:29,040
now we elaborate only on the first

286
00:09:29,040 --> 00:09:30,880
result in the interest of time

287
00:09:30,880 --> 00:09:32,320
i would kindly request you to read our

288
00:09:32,320 --> 00:09:35,040
paper for the remaining evaluation

289
00:09:35,040 --> 00:09:36,640
we first present the results of video

290
00:09:36,640 --> 00:09:38,959
based inference alone where we utilize

291
00:09:38,959 --> 00:09:41,600
blurry visuals of key during insertion

292
00:09:41,600 --> 00:09:44,240
to obtain a reduced pool of keys that

293
00:09:44,240 --> 00:09:45,680
most likely corresponds to the victim

294
00:09:45,680 --> 00:09:47,360
key

295
00:09:47,360 --> 00:09:49,200
in this plot we depict in sorted manner

296
00:09:49,200 --> 00:09:51,600
the reduced key space for the 74 keys

297
00:09:51,600 --> 00:09:53,760
where a lower key space is preferred

298
00:09:53,760 --> 00:09:56,800
from a total of 59 000 207 keys the

299
00:09:56,800 --> 00:09:58,480
video based approach gives a reduced key

300
00:09:58,480 --> 00:10:02,079
space whose mean size is about 166 keys

301
00:10:02,079 --> 00:10:04,320
although this is a significant deduction

302
00:10:04,320 --> 00:10:06,000
it is not sufficient for a realistic

303
00:10:06,000 --> 00:10:07,600
attack

304
00:10:07,600 --> 00:10:09,600
hence we augment the video approach with

305
00:10:09,600 --> 00:10:11,279
audio based information

306
00:10:11,279 --> 00:10:13,200
the red curve shown here plots in sorted

307
00:10:13,200 --> 00:10:15,519
manner for the 74 keys the key rank

308
00:10:15,519 --> 00:10:17,120
obtained by the combined audio video

309
00:10:17,120 --> 00:10:19,920
approaches this approach achieves a mean

310
00:10:19,920 --> 00:10:22,560
rank of 63. in particular there are

311
00:10:22,560 --> 00:10:25,519
about six keys in that tested 74 keys

312
00:10:25,519 --> 00:10:27,440
that achieve a high rank within the top

313
00:10:27,440 --> 00:10:28,320
ten

314
00:10:28,320 --> 00:10:30,240
this was previously unachievable with

315
00:10:30,240 --> 00:10:32,480
video based techniques alone as an

316
00:10:32,480 --> 00:10:35,040
example of this we consider a key kv

317
00:10:35,040 --> 00:10:37,360
that depicts one of these six keys and

318
00:10:37,360 --> 00:10:40,720
this key achieves a high rank of five

319
00:10:40,720 --> 00:10:42,240
if we extrapolate this result that we

320
00:10:42,240 --> 00:10:44,079
obtain on the 74 keys to the whole key

321
00:10:44,079 --> 00:10:46,320
space this would correspond to a total

322
00:10:46,320 --> 00:10:49,680
of 4700 keys that achieve a rank within

323
00:10:49,680 --> 00:10:51,120
the top 10.

324
00:10:51,120 --> 00:10:54,800
this is in fact a considerable number

325
00:10:54,800 --> 00:10:57,120
this result really depicts the potential

326
00:10:57,120 --> 00:10:58,320
of audio

327
00:10:58,320 --> 00:11:00,720
and how well audio complements video

328
00:11:00,720 --> 00:11:02,880
based techniques to considerably improve

329
00:11:02,880 --> 00:11:05,839
the key inference accuracy

330
00:11:05,839 --> 00:11:07,279
we now discuss broader aspects of

331
00:11:07,279 --> 00:11:09,839
kinergy's attack firstly our attack

332
00:11:09,839 --> 00:11:11,200
would work on different lock models

333
00:11:11,200 --> 00:11:13,440
within the pentamillar family

334
00:11:13,440 --> 00:11:15,839
secondly although we propose our attack

335
00:11:15,839 --> 00:11:18,000
with an attackable key space of over 60

336
00:11:18,000 --> 00:11:18,800
000

337
00:11:18,800 --> 00:11:20,560
in reality far fewer keys are in

338
00:11:20,560 --> 00:11:23,440
circulation as shown by several reports

339
00:11:23,440 --> 00:11:25,200
this indicates the increased efficacy of

340
00:11:25,200 --> 00:11:27,839
our attack in practice

341
00:11:27,839 --> 00:11:29,440
we propose a counter measure that

342
00:11:29,440 --> 00:11:30,800
involves playing high frequency

343
00:11:30,800 --> 00:11:33,760
inaudible sound during key insertion

344
00:11:33,760 --> 00:11:35,519
because our attack utilizes high

345
00:11:35,519 --> 00:11:37,839
frequency features playing any noise in

346
00:11:37,839 --> 00:11:39,839
this region significantly degrades the

347
00:11:39,839 --> 00:11:41,440
attack

348
00:11:41,440 --> 00:11:42,480
to conclude

349
00:11:42,480 --> 00:11:44,720
we present a novel acoustics based side

350
00:11:44,720 --> 00:11:47,040
channel and physical lock systems

351
00:11:47,040 --> 00:11:49,680
utilizing this we propose a multi-modal

352
00:11:49,680 --> 00:11:52,079
attack to infer key bitings

353
00:11:52,079 --> 00:11:53,839
we hope that our work brings to light

354
00:11:53,839 --> 00:11:55,279
the potential of multimodal side

355
00:11:55,279 --> 00:11:56,959
channels and how they can enable novel

356
00:11:56,959 --> 00:11:58,639
attacks thank you for listening to the

357
00:11:58,639 --> 00:12:01,639
talk

