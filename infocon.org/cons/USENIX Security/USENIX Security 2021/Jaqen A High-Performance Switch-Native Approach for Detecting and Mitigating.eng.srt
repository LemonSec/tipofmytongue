1
00:00:08,880 --> 00:00:10,960
hello my name is alan zhao xinglu at

2
00:00:10,960 --> 00:00:13,440
boston university today i'm going to

3
00:00:13,440 --> 00:00:15,920
present our assistant jaquin on how we

4
00:00:15,920 --> 00:00:18,160
can build a high-performance internet

5
00:00:18,160 --> 00:00:20,160
service provider-based ddos defense

6
00:00:20,160 --> 00:00:22,240
solution with emerging programmable

7
00:00:22,240 --> 00:00:24,800
natural hardware as a joint work with my

8
00:00:24,800 --> 00:00:27,279
colleagues from intel johns hopkins

9
00:00:27,279 --> 00:00:30,080
hover and carnegie mellon

10
00:00:30,080 --> 00:00:33,520
so today ddos attacks are on the rise

11
00:00:33,520 --> 00:00:35,840
despite of decades of efforts we're

12
00:00:35,840 --> 00:00:38,239
still facing increasing attack risks in

13
00:00:38,239 --> 00:00:41,440
terms of volumes diversity and large

14
00:00:41,440 --> 00:00:42,719
capital and

15
00:00:42,719 --> 00:00:44,719
and like operational costs to fight

16
00:00:44,719 --> 00:00:46,000
against them

17
00:00:46,000 --> 00:00:47,520
for example you might see a lot of

18
00:00:47,520 --> 00:00:49,719
recent news like for example from

19
00:00:49,719 --> 00:00:51,360
infosecurity

20
00:00:51,360 --> 00:00:53,039
from the u.s cyber security

21
00:00:53,039 --> 00:00:55,680
infrastructure security agency

22
00:00:55,680 --> 00:00:59,760
from new star from zd net and many more

23
00:00:59,760 --> 00:01:02,800
so ddos attacks are really getting worse

24
00:01:02,800 --> 00:01:05,040
regardless of efforts of more than 20

25
00:01:05,040 --> 00:01:07,280
years

26
00:01:07,760 --> 00:01:09,920
so in general ddos defense has the

27
00:01:09,920 --> 00:01:12,240
following three requirements first of

28
00:01:12,240 --> 00:01:14,240
all we expect the defense defense can

29
00:01:14,240 --> 00:01:17,040
handle large volume of traffic with low

30
00:01:17,040 --> 00:01:19,280
latency especially not trying to

31
00:01:19,280 --> 00:01:21,759
interrupt legitimate traffic

32
00:01:21,759 --> 00:01:24,240
second the system needs to be highly

33
00:01:24,240 --> 00:01:27,040
flexible in order to handle diverse

34
00:01:27,040 --> 00:01:29,040
attack vectors and dynamic attack

35
00:01:29,040 --> 00:01:30,720
vectors

36
00:01:30,720 --> 00:01:33,520
third the ddos systems need to optimize

37
00:01:33,520 --> 00:01:36,079
their capital and operational cost for

38
00:01:36,079 --> 00:01:39,119
the best possible cost effective defense

39
00:01:39,119 --> 00:01:42,079
especially for like large-scale networks

40
00:01:42,079 --> 00:01:42,799
like

41
00:01:42,799 --> 00:01:47,360
internet service providers or isps

42
00:01:47,840 --> 00:01:50,159
given all these requirements in mind

43
00:01:50,159 --> 00:01:52,399
existing ddos solutions they rely on

44
00:01:52,399 --> 00:01:54,960
auto bank detection for example like net

45
00:01:54,960 --> 00:01:57,119
flow as flow based sampling approach

46
00:01:57,119 --> 00:01:58,960
they sample some packets and trying to

47
00:01:58,960 --> 00:02:01,040
do some offline analysis to detect the

48
00:02:01,040 --> 00:02:02,000
tax

49
00:02:02,000 --> 00:02:04,560
this can be quite slow or even accurate

50
00:02:04,560 --> 00:02:07,280
because um if you're not sample enough

51
00:02:07,280 --> 00:02:09,119
packets

52
00:02:09,119 --> 00:02:12,319
so once attacks are detected indeed then

53
00:02:12,319 --> 00:02:14,879
we can deploy some hardware appliance to

54
00:02:14,879 --> 00:02:17,200
mitigate the attacks

55
00:02:17,200 --> 00:02:18,640
for example

56
00:02:18,640 --> 00:02:20,840
firewalls with certain like mitigation

57
00:02:20,840 --> 00:02:22,879
rules however

58
00:02:22,879 --> 00:02:24,959
these hardware clients are usually with

59
00:02:24,959 --> 00:02:28,720
fixed functions and not very flexible

60
00:02:28,720 --> 00:02:30,879
and also to buy them it's a high

61
00:02:30,879 --> 00:02:32,959
purchase cost

62
00:02:32,959 --> 00:02:36,160
for example we survey a 10g volumetric

63
00:02:36,160 --> 00:02:38,720
hardware appliance from auburn networks

64
00:02:38,720 --> 00:02:40,480
so based on the public estimates is

65
00:02:40,480 --> 00:02:44,560
about like one hundred thousand dollars

66
00:02:44,959 --> 00:02:47,360
alternatively we can deploy server

67
00:02:47,360 --> 00:02:49,680
cluster to mitigate attacks

68
00:02:49,680 --> 00:02:51,599
so these software clients they are

69
00:02:51,599 --> 00:02:54,160
flexible for sure but they come with low

70
00:02:54,160 --> 00:02:55,519
performance

71
00:02:55,519 --> 00:02:57,760
for example a reason

72
00:02:57,760 --> 00:03:00,560
in a free-based defense solution they

73
00:03:00,560 --> 00:03:03,519
need at least like 100 commodity servers

74
00:03:03,519 --> 00:03:06,959
to handle 1000 gigabytes of traffic

75
00:03:06,959 --> 00:03:09,440
so not even to mention the processing

76
00:03:09,440 --> 00:03:10,959
latency

77
00:03:10,959 --> 00:03:12,879
so my question really is

78
00:03:12,879 --> 00:03:14,080
can we

79
00:03:14,080 --> 00:03:16,959
do better in ddos defense in terms of

80
00:03:16,959 --> 00:03:20,159
its performance flexibility and cost

81
00:03:20,159 --> 00:03:22,720
efficiency

82
00:03:23,760 --> 00:03:25,519
there are indeed some new opportunities

83
00:03:25,519 --> 00:03:27,840
here based on the emerging trend in

84
00:03:27,840 --> 00:03:29,840
networking community

85
00:03:29,840 --> 00:03:31,680
so with the increasing in natural

86
00:03:31,680 --> 00:03:34,400
probability and like new device in the

87
00:03:34,400 --> 00:03:35,680
network

88
00:03:35,680 --> 00:03:39,120
large networks such as like isp networks

89
00:03:39,120 --> 00:03:41,680
they have the new capabilities now

90
00:03:41,680 --> 00:03:44,080
for now and for the first in future

91
00:03:44,080 --> 00:03:46,480
for example programmable switches

92
00:03:46,480 --> 00:03:48,400
they're running operating at the high

93
00:03:48,400 --> 00:03:51,599
land rates like uh 6 to 12 terabytes per

94
00:03:51,599 --> 00:03:53,519
second per device

95
00:03:53,519 --> 00:03:55,599
and they can you know allow you to

96
00:03:55,599 --> 00:03:57,680
freely define the packet processing

97
00:03:57,680 --> 00:03:58,799
behavior

98
00:03:58,799 --> 00:04:01,120
using high-level language like for

99
00:04:01,120 --> 00:04:03,200
example p4

100
00:04:03,200 --> 00:04:04,000
and

101
00:04:04,000 --> 00:04:06,319
these devices are usually quite cost

102
00:04:06,319 --> 00:04:08,480
effective in terms of the

103
00:04:08,480 --> 00:04:10,560
operational and purchase cost quite

104
00:04:10,560 --> 00:04:12,720
similar as traditional switches at the

105
00:04:12,720 --> 00:04:14,879
same speed

106
00:04:14,879 --> 00:04:16,880
so given all this

107
00:04:16,880 --> 00:04:18,959
there are some recent efforts trying to

108
00:04:18,959 --> 00:04:21,199
explore on this direction

109
00:04:21,199 --> 00:04:24,639
so for example preciso so precise on

110
00:04:24,639 --> 00:04:26,400
trying to add a programmable switches

111
00:04:26,400 --> 00:04:28,960
into scrapping centers in order to

112
00:04:28,960 --> 00:04:30,720
improve the performance of existing

113
00:04:30,720 --> 00:04:32,160
servers there

114
00:04:32,160 --> 00:04:34,720
however their approaches is not well

115
00:04:34,720 --> 00:04:36,479
suited for large-scale defense for

116
00:04:36,479 --> 00:04:38,880
example isp based defense for several

117
00:04:38,880 --> 00:04:40,080
reasons

118
00:04:40,080 --> 00:04:42,560
so one this do you need

119
00:04:42,560 --> 00:04:45,040
auto band detection which can be quite

120
00:04:45,040 --> 00:04:46,479
slow

121
00:04:46,479 --> 00:04:49,120
second the scrapping center can approach

122
00:04:49,120 --> 00:04:50,400
it require

123
00:04:50,400 --> 00:04:52,720
a lot of like traffic routing to the

124
00:04:52,720 --> 00:04:56,960
fixed location which add large latency

125
00:04:56,960 --> 00:05:00,560
third reported a few like a server-based

126
00:05:00,560 --> 00:05:02,800
mitigation function into switches

127
00:05:02,800 --> 00:05:04,160
directly

128
00:05:04,160 --> 00:05:06,240
so these functions

129
00:05:06,240 --> 00:05:09,039
can are not very scalable

130
00:05:09,039 --> 00:05:10,400
when the traffic

131
00:05:10,400 --> 00:05:12,639
volume is high

132
00:05:12,639 --> 00:05:16,240
so i will show example later

133
00:05:16,720 --> 00:05:18,880
so given these drawbacks of existing

134
00:05:18,880 --> 00:05:20,479
solutions

135
00:05:20,479 --> 00:05:22,400
we think

136
00:05:22,400 --> 00:05:25,120
the emerging like programmability in the

137
00:05:25,120 --> 00:05:27,840
asp network let the networks become a

138
00:05:27,840 --> 00:05:30,960
vantage point to conduct ddos defense

139
00:05:30,960 --> 00:05:32,880
so the ddos

140
00:05:32,880 --> 00:05:35,039
the isps they are either near the source

141
00:05:35,039 --> 00:05:37,600
of the tax or near the victim of the tax

142
00:05:37,600 --> 00:05:40,080
and with this capabilities together they

143
00:05:40,080 --> 00:05:43,440
do have the power and the incentive to

144
00:05:43,440 --> 00:05:44,400
provide

145
00:05:44,400 --> 00:05:47,199
the ddos defense as a service to their

146
00:05:47,199 --> 00:05:48,800
client for profit

147
00:05:48,800 --> 00:05:50,320
and now they can do a much high

148
00:05:50,320 --> 00:05:52,160
performance way and a much lower cost

149
00:05:52,160 --> 00:05:53,520
away

150
00:05:53,520 --> 00:05:56,000
today we i'm focusing on isp based

151
00:05:56,000 --> 00:05:58,400
defense

152
00:05:58,800 --> 00:06:01,600
so our question is simple to say

153
00:06:01,600 --> 00:06:04,160
can we design isp based ddos defense

154
00:06:04,160 --> 00:06:06,240
that fully leverage the programmable

155
00:06:06,240 --> 00:06:08,720
switches

156
00:06:09,039 --> 00:06:11,680
to answer this question

157
00:06:11,680 --> 00:06:14,720
our vision is a switch native ddos

158
00:06:14,720 --> 00:06:17,840
defense solution called jquery

159
00:06:17,840 --> 00:06:20,720
so jquery turns isp network into a

160
00:06:20,720 --> 00:06:22,000
defender

161
00:06:22,000 --> 00:06:23,600
no out of

162
00:06:23,600 --> 00:06:26,319
band detection required no scrapping

163
00:06:26,319 --> 00:06:27,360
centers

164
00:06:27,360 --> 00:06:31,199
no whatsoever so jacon they integrate

165
00:06:31,199 --> 00:06:33,199
the detection and the mitigation

166
00:06:33,199 --> 00:06:35,919
completely in the programmable switches

167
00:06:35,919 --> 00:06:38,479
and design some switch native mitigation

168
00:06:38,479 --> 00:06:40,319
efforts so literally means that all this

169
00:06:40,319 --> 00:06:43,039
component completely run switches to

170
00:06:43,039 --> 00:06:45,919
fully leverage its capability for ddos

171
00:06:45,919 --> 00:06:48,880
defense

172
00:06:48,880 --> 00:06:51,360
so let me give some details about j4 so

173
00:06:51,360 --> 00:06:52,720
in jquery

174
00:06:52,720 --> 00:06:55,440
we have three components

175
00:06:55,440 --> 00:06:57,039
so the first component is that we need

176
00:06:57,039 --> 00:07:00,479
to do some broad spectrum always on

177
00:07:00,479 --> 00:07:02,720
attack detection deploy for example at

178
00:07:02,720 --> 00:07:05,039
the broader routers

179
00:07:05,039 --> 00:07:06,160
and then

180
00:07:06,160 --> 00:07:09,280
once we get some metrics and attack

181
00:07:09,280 --> 00:07:12,000
types and volumes all this information

182
00:07:12,000 --> 00:07:14,720
we'll send it to the controller for

183
00:07:14,720 --> 00:07:17,280
dynamic resource allocation which trying

184
00:07:17,280 --> 00:07:18,960
to

185
00:07:18,960 --> 00:07:21,759
determine where and when to

186
00:07:21,759 --> 00:07:24,639
activate the mitigation functions on the

187
00:07:24,639 --> 00:07:28,240
switches where they have the resources

188
00:07:28,240 --> 00:07:30,400
and then based on this decision you know

189
00:07:30,400 --> 00:07:34,000
the switches will enable activate some

190
00:07:34,000 --> 00:07:36,639
mitigation functions

191
00:07:36,639 --> 00:07:38,319
so let me try to talk about each

192
00:07:38,319 --> 00:07:39,680
component

193
00:07:39,680 --> 00:07:41,919
so first of all in the detection

194
00:07:41,919 --> 00:07:44,879
components our design leverage universal

195
00:07:44,879 --> 00:07:46,960
sketches which is quite new concept in

196
00:07:46,960 --> 00:07:49,440
the network monitoring to estimate a

197
00:07:49,440 --> 00:07:52,240
large range of statistics or even

198
00:07:52,240 --> 00:07:54,800
sometimes unforeseen functions for

199
00:07:54,800 --> 00:07:57,360
different flow keys for example like for

200
00:07:57,360 --> 00:07:59,759
like estimating large flows distinct

201
00:07:59,759 --> 00:08:03,039
flows heavy change the flows number of

202
00:08:03,039 --> 00:08:08,319
distinct sources entropy value or etc

203
00:08:08,319 --> 00:08:11,199
so in addition to the sketches we also

204
00:08:11,199 --> 00:08:13,199
add a few signature counters trying to

205
00:08:13,199 --> 00:08:16,000
you know navigate among some existing

206
00:08:16,000 --> 00:08:17,039
attacks

207
00:08:17,039 --> 00:08:19,360
so combining these all together we can

208
00:08:19,360 --> 00:08:21,599
estimate various attacks

209
00:08:21,599 --> 00:08:24,240
types and volumes and even trying to

210
00:08:24,240 --> 00:08:27,599
make a alarm about unidentified attack

211
00:08:27,599 --> 00:08:30,479
attacks because we have the power to

212
00:08:30,479 --> 00:08:33,120
estimate large range of attack related

213
00:08:33,120 --> 00:08:34,799
metrics

214
00:08:34,799 --> 00:08:36,958
so based on these capabilities we define

215
00:08:36,958 --> 00:08:39,839
that attaching a detection metric api

216
00:08:39,839 --> 00:08:40,880
query

217
00:08:40,880 --> 00:08:44,080
that you know the developers operators

218
00:08:44,080 --> 00:08:46,000
they can you know

219
00:08:46,000 --> 00:08:48,399
define the way they obtain this uh

220
00:08:48,399 --> 00:08:51,200
detection results

221
00:08:51,200 --> 00:08:52,720
and then

222
00:08:52,720 --> 00:08:54,480
we have the detection results along with

223
00:08:54,480 --> 00:08:56,480
the natural wide available resources

224
00:08:56,480 --> 00:08:58,640
that's something we can get from the

225
00:08:58,640 --> 00:09:00,480
network and we do the resource

226
00:09:00,480 --> 00:09:02,080
allocation and then we're trying to

227
00:09:02,080 --> 00:09:04,000
activate mitigation efforts on the

228
00:09:04,000 --> 00:09:06,320
switches here this critical part is that

229
00:09:06,320 --> 00:09:08,160
we need to do on-demand mitigation

230
00:09:08,160 --> 00:09:09,440
because

231
00:09:09,440 --> 00:09:11,440
the switches are

232
00:09:11,440 --> 00:09:13,519
resource constraint we cannot afford to

233
00:09:13,519 --> 00:09:15,839
really prolong all possible mitigation

234
00:09:15,839 --> 00:09:17,920
running all time even there's no attack

235
00:09:17,920 --> 00:09:20,480
so we have to do this on demand

236
00:09:20,480 --> 00:09:22,480
but this is not enough

237
00:09:22,480 --> 00:09:24,720
so given this very constraint let's say

238
00:09:24,720 --> 00:09:26,399
we have like several megabytes several

239
00:09:26,399 --> 00:09:29,440
tens of megabytes of memory that's it

240
00:09:29,440 --> 00:09:31,680
how we can really afford

241
00:09:31,680 --> 00:09:34,480
to run even one to such mitigation

242
00:09:34,480 --> 00:09:37,760
trying to fully leverage its capability

243
00:09:37,760 --> 00:09:40,640
to processing traffic

244
00:09:40,640 --> 00:09:45,120
so what we do is we have to optimize

245
00:09:45,120 --> 00:09:46,800
certain best practice mitigation

246
00:09:46,800 --> 00:09:47,920
functions

247
00:09:47,920 --> 00:09:50,959
and combine with a lot of sweet uh

248
00:09:50,959 --> 00:09:53,200
switch optimized probabilistic data

249
00:09:53,200 --> 00:09:55,360
structure like sketches bloom filters

250
00:09:55,360 --> 00:09:57,600
counting bloom feeders uh processing

251
00:09:57,600 --> 00:09:59,760
proxy with filters rate limiters all

252
00:09:59,760 --> 00:10:01,440
this together

253
00:10:01,440 --> 00:10:04,560
we combine them to provide you certain

254
00:10:04,560 --> 00:10:07,360
switch optimized mitigation api

255
00:10:07,360 --> 00:10:10,640
so like a rate limit option mater based

256
00:10:10,640 --> 00:10:12,800
allow list a block list

257
00:10:12,800 --> 00:10:14,320
and etc

258
00:10:14,320 --> 00:10:17,040
and using this mitigation api we can

259
00:10:17,040 --> 00:10:18,399
provide you the best possible

260
00:10:18,399 --> 00:10:20,079
performance we can achieve right now

261
00:10:20,079 --> 00:10:23,120
like we can preserve like 10 million

262
00:10:23,120 --> 00:10:25,360
legitimate connections using only like a

263
00:10:25,360 --> 00:10:29,279
10 megabytes of unchecked memory

264
00:10:29,279 --> 00:10:30,000
so

265
00:10:30,000 --> 00:10:31,760
in this way it's much better than you

266
00:10:31,760 --> 00:10:34,880
just developed like moving server-based

267
00:10:34,880 --> 00:10:37,279
components into switches

268
00:10:37,279 --> 00:10:40,240
and currently jquery already supports 21

269
00:10:40,240 --> 00:10:44,000
attacks and their mitigation strategies

270
00:10:44,000 --> 00:10:45,839
to see the difference between a switch

271
00:10:45,839 --> 00:10:47,760
native design versus standard way of

272
00:10:47,760 --> 00:10:50,079
doing mitigation let's consider this

273
00:10:50,079 --> 00:10:51,279
example

274
00:10:51,279 --> 00:10:53,519
so the president implements standards in

275
00:10:53,519 --> 00:10:56,640
proxy in switches in this way

276
00:10:56,640 --> 00:10:59,040
but the critical part here is that they

277
00:10:59,040 --> 00:11:01,040
have to keep per connection state for

278
00:11:01,040 --> 00:11:03,279
example sequence number to make sure

279
00:11:03,279 --> 00:11:05,200
that the connections that passing

280
00:11:05,200 --> 00:11:07,279
through the proxy will keep the sequence

281
00:11:07,279 --> 00:11:09,120
numbers in order

282
00:11:09,120 --> 00:11:10,560
however

283
00:11:10,560 --> 00:11:12,720
this per connection state is not going

284
00:11:12,720 --> 00:11:15,279
to scalable in the resource constraint

285
00:11:15,279 --> 00:11:18,000
switches so we wanted to use

286
00:11:18,000 --> 00:11:20,480
more efficient data structures

287
00:11:20,480 --> 00:11:22,720
so but we have to change the logic of

288
00:11:22,720 --> 00:11:24,320
sync proxy

289
00:11:24,320 --> 00:11:26,320
one way we're doing this is that instead

290
00:11:26,320 --> 00:11:29,200
of sending back a normal synapse packet

291
00:11:29,200 --> 00:11:31,519
with cookie we send an arrow to one

292
00:11:31,519 --> 00:11:33,760
which is an auto window one

293
00:11:33,760 --> 00:11:35,760
and just to pretend something wrong with

294
00:11:35,760 --> 00:11:38,240
the connection and the client who gets

295
00:11:38,240 --> 00:11:41,680
it will send back a reset packet

296
00:11:41,680 --> 00:11:44,000
and with the cookie inside it and now we

297
00:11:44,000 --> 00:11:46,240
can verify this client as a legitimate

298
00:11:46,240 --> 00:11:48,800
one and add this identity into the allow

299
00:11:48,800 --> 00:11:49,760
list

300
00:11:49,760 --> 00:11:51,680
so this allows us that we can use a lot

301
00:11:51,680 --> 00:11:53,279
of like efficient data structure for

302
00:11:53,279 --> 00:11:55,120
example bloomfield to do that which is

303
00:11:55,120 --> 00:11:56,880
more scary

304
00:11:56,880 --> 00:11:58,639
so there are many many more such

305
00:11:58,639 --> 00:12:01,920
examples in our paper

306
00:12:02,560 --> 00:12:03,360
so

307
00:12:03,360 --> 00:12:05,440
let's look at some real world evaluation

308
00:12:05,440 --> 00:12:08,160
results always a single attack so

309
00:12:08,160 --> 00:12:10,720
compare with precison we're running a

310
00:12:10,720 --> 00:12:13,760
single intel intel tofino switch

311
00:12:13,760 --> 00:12:16,880
on three different attacks like sync dns

312
00:12:16,880 --> 00:12:19,920
and ntp we find that

313
00:12:19,920 --> 00:12:22,399
by the power of of adopting problems

314
00:12:22,399 --> 00:12:24,000
data structures

315
00:12:24,000 --> 00:12:26,240
jquery is much more scalable and

316
00:12:26,240 --> 00:12:29,680
accurate than preciso

317
00:12:30,160 --> 00:12:32,240
then we can consider more complex

318
00:12:32,240 --> 00:12:34,480
dynamic attack scenarios we randomly

319
00:12:34,480 --> 00:12:38,160
pick six volumetric texts in launching

320
00:12:38,160 --> 00:12:41,680
around like 380 total volumes

321
00:12:41,680 --> 00:12:43,760
in a period of five hours you can see

322
00:12:43,760 --> 00:12:44,639
here

323
00:12:44,639 --> 00:12:46,959
jquery can achieve very high detection

324
00:12:46,959 --> 00:12:49,200
accuracy and very high mitigation

325
00:12:49,200 --> 00:12:51,200
effectiveness

326
00:12:51,200 --> 00:12:53,920
so many more examples please look at our

327
00:12:53,920 --> 00:12:55,360
paper

328
00:12:55,360 --> 00:12:56,240
so

329
00:12:56,240 --> 00:12:57,839
let me conclude here

330
00:12:57,839 --> 00:12:59,839
so internet service-based ddos defense

331
00:12:59,839 --> 00:13:01,360
today they have to compromise

332
00:13:01,360 --> 00:13:03,440
performance flexibility and cost

333
00:13:03,440 --> 00:13:04,800
effectiveness

334
00:13:04,800 --> 00:13:07,040
so the programmable switches as as

335
00:13:07,040 --> 00:13:08,160
appealing

336
00:13:08,160 --> 00:13:10,720
uh device like providing like high

337
00:13:10,720 --> 00:13:12,480
leverage packet processing and the

338
00:13:12,480 --> 00:13:14,079
probability

339
00:13:14,079 --> 00:13:16,160
so by leveraging pro uh programmable

340
00:13:16,160 --> 00:13:18,560
switches in the isp networks jay quinn

341
00:13:18,560 --> 00:13:19,519
provide

342
00:13:19,519 --> 00:13:22,160
switch native way to do ddos defense

343
00:13:22,160 --> 00:13:24,959
that has like broad spectrum detection

344
00:13:24,959 --> 00:13:27,279
natural wide resource management to

345
00:13:27,279 --> 00:13:29,920
efficiently leverage resources and can

346
00:13:29,920 --> 00:13:32,320
enable switch optimized library for best

347
00:13:32,320 --> 00:13:35,600
practice mitigation in this way we can

348
00:13:35,600 --> 00:13:37,680
envision by using our library that more

349
00:13:37,680 --> 00:13:40,399
and more the switch-based mitigation

350
00:13:40,399 --> 00:13:42,639
structures can be developed

351
00:13:42,639 --> 00:13:44,480
so i'm ending my talk now and i'm happy

352
00:13:44,480 --> 00:13:46,399
to take any questions thank you very

353
00:13:46,399 --> 00:13:49,399
much

