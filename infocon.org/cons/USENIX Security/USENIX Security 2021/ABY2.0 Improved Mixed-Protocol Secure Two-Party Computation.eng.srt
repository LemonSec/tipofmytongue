1
00:00:08,960 --> 00:00:11,679
hey all i'm here to present or work

2
00:00:11,679 --> 00:00:15,120
title aby2 improved mixed protocol

3
00:00:15,120 --> 00:00:17,600
secure two-party computation

4
00:00:17,600 --> 00:00:19,600
this is a joint work with my advisor

5
00:00:19,600 --> 00:00:21,920
thomas schneider of thieve darmistad

6
00:00:21,920 --> 00:00:25,359
arpitapatra and it suraj of iisc

7
00:00:25,359 --> 00:00:27,519
bangalore university

8
00:00:27,519 --> 00:00:29,279
in the problem of security party

9
00:00:29,279 --> 00:00:31,760
competition there are two parties say

10
00:00:31,760 --> 00:00:34,800
yasmin and aladdin as an example let's

11
00:00:34,800 --> 00:00:37,040
assume that bulls have a box of the

12
00:00:37,040 --> 00:00:38,079
diamonds

13
00:00:38,079 --> 00:00:40,559
and the goal is to compute the number of

14
00:00:40,559 --> 00:00:43,280
diamonds that both have with the same

15
00:00:43,280 --> 00:00:47,039
color the privacy requirement is that

16
00:00:47,039 --> 00:00:49,440
the parties should not learn anything

17
00:00:49,440 --> 00:00:52,719
behind this information

18
00:00:52,719 --> 00:00:57,039
here we have one magic or magic is to pc

19
00:00:57,039 --> 00:00:59,520
or secure two-party computation

20
00:00:59,520 --> 00:01:02,079
two pc allows two mutually distillation

21
00:01:02,079 --> 00:01:05,040
parties to compute a join function on

22
00:01:05,040 --> 00:01:07,760
their private inputs without revealing

23
00:01:07,760 --> 00:01:10,720
any information

24
00:01:10,720 --> 00:01:13,200
a state state-of-the-art work for two pc

25
00:01:13,200 --> 00:01:14,720
is aby

26
00:01:14,720 --> 00:01:18,720
aby considers semi-annus security and

27
00:01:18,720 --> 00:01:21,200
three different protocols and conversion

28
00:01:21,200 --> 00:01:23,600
between them they consider arithmetic

29
00:01:23,600 --> 00:01:26,400
sharing boolean sharing and yard carbon

30
00:01:26,400 --> 00:01:27,439
circuits

31
00:01:27,439 --> 00:01:29,520
in additive shading they have cheap

32
00:01:29,520 --> 00:01:32,479
multiplication in boolean shading they

33
00:01:32,479 --> 00:01:36,960
need run for each and gate evaluation

34
00:01:36,960 --> 00:01:39,200
and in yoga hour circuits they don't

35
00:01:39,200 --> 00:01:41,680
need any interaction for and gate

36
00:01:41,680 --> 00:01:44,079
evaluation but the communication

37
00:01:44,079 --> 00:01:46,079
overhead in yao

38
00:01:46,079 --> 00:01:46,960
is

39
00:01:46,960 --> 00:01:52,079
more than boolean gmw shading

40
00:01:52,079 --> 00:01:55,680
in general in aby we can say

41
00:01:55,680 --> 00:01:57,840
you have a high level description of

42
00:01:57,840 --> 00:01:59,680
some functions

43
00:01:59,680 --> 00:02:02,079
then your function should be represented

44
00:02:02,079 --> 00:02:04,560
as arithmetic circuits or boolean

45
00:02:04,560 --> 00:02:05,840
circuits

46
00:02:05,840 --> 00:02:08,080
and then for arithmetic circuits you

47
00:02:08,080 --> 00:02:11,360
should use gmw arithmetic shading and

48
00:02:11,360 --> 00:02:14,000
for boolean circuits you should use real

49
00:02:14,000 --> 00:02:16,640
garber circuits or gmw

50
00:02:16,640 --> 00:02:19,440
boolean shading

51
00:02:19,440 --> 00:02:23,599
here in aby2 we designed neo arithmetic

52
00:02:23,599 --> 00:02:27,520
sharing new boolean sharing and also we

53
00:02:27,520 --> 00:02:29,360
designed

54
00:02:29,360 --> 00:02:32,959
depths optimized building blocks for our

55
00:02:32,959 --> 00:02:36,560
new boolean sharing

56
00:02:36,560 --> 00:02:39,519
talking about or contribution we propose

57
00:02:39,519 --> 00:02:42,879
a new passively secure two-party

58
00:02:42,879 --> 00:02:46,080
computation which is at least two times

59
00:02:46,080 --> 00:02:48,400
better than aby

60
00:02:48,400 --> 00:02:51,840
we use function dependent pd processing

61
00:02:51,840 --> 00:02:55,120
which is not the case in aby the

62
00:02:55,120 --> 00:02:57,680
function dependent preprocessing means

63
00:02:57,680 --> 00:02:59,599
you should know

64
00:02:59,599 --> 00:03:02,319
the function in advance when you want to

65
00:03:02,319 --> 00:03:05,120
evaluate some functions

66
00:03:05,120 --> 00:03:07,440
and also we improve the online

67
00:03:07,440 --> 00:03:09,920
communication compared to instead of the

68
00:03:09,920 --> 00:03:13,518
artwork i mean aby

69
00:03:13,599 --> 00:03:15,440
and we extend the two input

70
00:03:15,440 --> 00:03:18,800
multiplication to theory and four inputs

71
00:03:18,800 --> 00:03:21,440
at a time or construction retain an

72
00:03:21,440 --> 00:03:24,879
online communication of just two values

73
00:03:24,879 --> 00:03:27,760
and using this td and four input

74
00:03:27,760 --> 00:03:31,120
multiplication gates we propose round

75
00:03:31,120 --> 00:03:33,519
and communication efficient circuits

76
00:03:33,519 --> 00:03:39,360
like new others and new aes spikes

77
00:03:39,360 --> 00:03:42,720
and we provide efficient conversions

78
00:03:42,720 --> 00:03:45,040
between different protocols or

79
00:03:45,040 --> 00:03:47,760
conversion is often more efficient

80
00:03:47,760 --> 00:03:50,159
compared to avy

81
00:03:50,159 --> 00:03:52,319
and also we provide efficient

82
00:03:52,319 --> 00:03:55,120
construction for several privacy

83
00:03:55,120 --> 00:03:57,760
preserving machine learning

84
00:03:57,760 --> 00:04:02,720
and we have a new scalar product

85
00:04:02,720 --> 00:04:05,760
where the online communication is

86
00:04:05,760 --> 00:04:08,319
independent of the vector

87
00:04:08,319 --> 00:04:10,958
dimension

88
00:04:11,280 --> 00:04:14,720
we now describe or approach the major

89
00:04:14,720 --> 00:04:18,639
modification is the shading scheme

90
00:04:18,639 --> 00:04:22,320
which the general idea is from theory pc

91
00:04:22,320 --> 00:04:24,400
asura

92
00:04:24,400 --> 00:04:27,840
for every value v we associate a random

93
00:04:27,840 --> 00:04:31,360
mask denote in blue

94
00:04:31,360 --> 00:04:35,440
given the value v and its mask we define

95
00:04:35,440 --> 00:04:38,080
the mask value v

96
00:04:38,080 --> 00:04:39,120
as

97
00:04:39,120 --> 00:04:43,040
value plus mask blue denote in red in

98
00:04:43,040 --> 00:04:44,560
the slide

99
00:04:44,560 --> 00:04:47,199
and then the mask value is given in

100
00:04:47,199 --> 00:04:49,840
clear to both parties along with one

101
00:04:49,840 --> 00:04:51,680
shade of its mask

102
00:04:51,680 --> 00:04:54,560
and the missing shade of the mask

103
00:04:54,560 --> 00:04:57,199
provide privacy of the values from its

104
00:04:57,199 --> 00:04:58,240
shades

105
00:04:58,240 --> 00:05:01,199
for example yasmine doesn't have delta

106
00:05:01,199 --> 00:05:06,880
v2 and alloy din doesn't have delta v1

107
00:05:06,960 --> 00:05:10,960
the addition operation is local in a b y

108
00:05:10,960 --> 00:05:12,800
2.

109
00:05:12,800 --> 00:05:16,560
for this values x and y can be written

110
00:05:16,560 --> 00:05:20,400
in terms of mask and the mask values

111
00:05:20,400 --> 00:05:24,960
and open rearranging we get

112
00:05:24,960 --> 00:05:28,000
and then these parties can add up their

113
00:05:28,000 --> 00:05:31,120
shares corresponding to x and y to get

114
00:05:31,120 --> 00:05:33,919
the share of set and here you can see

115
00:05:33,919 --> 00:05:37,520
the delta z and delta z1 and 2 can

116
00:05:37,520 --> 00:05:40,880
calculate locally

117
00:05:41,120 --> 00:05:44,560
we will now see the multiplication of x

118
00:05:44,560 --> 00:05:46,160
and y

119
00:05:46,160 --> 00:05:49,039
again we have the mask values

120
00:05:49,039 --> 00:05:52,000
then upon substituting values with their

121
00:05:52,000 --> 00:05:56,800
mask and vast values we get z as this

122
00:05:57,520 --> 00:05:59,759
and then

123
00:05:59,759 --> 00:06:02,639
the parties have the shade of x and y

124
00:06:02,639 --> 00:06:05,360
and also they have the shade of mask z

125
00:06:05,360 --> 00:06:10,720
denote by delta z1 and delta z2

126
00:06:10,720 --> 00:06:12,880
similar to the traditional approach

127
00:06:12,880 --> 00:06:16,080
assume that the parties somehow obtain

128
00:06:16,080 --> 00:06:17,759
the shade of mass

129
00:06:17,759 --> 00:06:21,120
x and mass y denoted by delta x delta y

130
00:06:21,120 --> 00:06:24,240
one and delta x delta y two

131
00:06:24,240 --> 00:06:26,319
then

132
00:06:26,319 --> 00:06:28,960
the parties can locally compute an

133
00:06:28,960 --> 00:06:31,919
additive shade of mass z i mean delta z

134
00:06:31,919 --> 00:06:34,880
one and delta z two and the parties then

135
00:06:34,880 --> 00:06:36,240
exchange

136
00:06:36,240 --> 00:06:38,639
and obtain

137
00:06:38,639 --> 00:06:41,680
and obtain the mask thread in clear as

138
00:06:41,680 --> 00:06:44,880
you can see in the slide

139
00:06:44,880 --> 00:06:47,120
note that this approach required a

140
00:06:47,120 --> 00:06:50,240
communication of just two values instead

141
00:06:50,240 --> 00:06:55,360
of four in the traditional avy approach

142
00:06:55,360 --> 00:06:58,880
to summarize the aby approach required a

143
00:06:58,880 --> 00:07:01,680
communication of four values

144
00:07:01,680 --> 00:07:04,880
per multiplication in the online phase

145
00:07:04,880 --> 00:07:08,720
whereas we only need two values

146
00:07:08,720 --> 00:07:11,039
note that the pre-processing cost is the

147
00:07:11,039 --> 00:07:15,039
same for both a b y two and a b y

148
00:07:15,039 --> 00:07:18,400
and we are function dependent and a b y

149
00:07:18,400 --> 00:07:21,599
is function independent

150
00:07:21,599 --> 00:07:24,319
also we extend or two inputs to

151
00:07:24,319 --> 00:07:26,880
multi-input multiplication then for the

152
00:07:26,880 --> 00:07:29,199
first time in the literature

153
00:07:29,199 --> 00:07:31,280
we have the online communication

154
00:07:31,280 --> 00:07:33,840
independent of the finding of the gates

155
00:07:33,840 --> 00:07:35,840
it means for example for for input

156
00:07:35,840 --> 00:07:38,319
multiplication we just need two elements

157
00:07:38,319 --> 00:07:42,080
in online phase but in aby we need like

158
00:07:42,080 --> 00:07:45,479
12 elements

159
00:07:45,759 --> 00:07:49,520
and in aby2 we present conversion

160
00:07:49,520 --> 00:07:52,560
protocol to switch between the

161
00:07:52,560 --> 00:07:56,319
different protocols and our protocols is

162
00:07:56,319 --> 00:07:59,599
more efficient than the conversions in

163
00:07:59,599 --> 00:08:00,960
api

164
00:08:00,960 --> 00:08:03,440
as you can see in this slides or online

165
00:08:03,440 --> 00:08:08,240
communication and run is better than avy

166
00:08:08,240 --> 00:08:11,599
one of the key highlight is our protocol

167
00:08:11,599 --> 00:08:13,840
for dot product

168
00:08:13,840 --> 00:08:16,960
for that for redux aby requires an

169
00:08:16,960 --> 00:08:19,840
online communication of 4d

170
00:08:19,840 --> 00:08:21,280
which d

171
00:08:21,280 --> 00:08:24,800
denotes the dimension of the vectors but

172
00:08:24,800 --> 00:08:28,400
we require only two values

173
00:08:28,400 --> 00:08:31,599
and a b by two is the first work to make

174
00:08:31,599 --> 00:08:34,479
the online cost independent

175
00:08:34,479 --> 00:08:38,320
of the future size in this setting

176
00:08:38,320 --> 00:08:41,279
and this brings in huge improvement when

177
00:08:41,279 --> 00:08:45,839
come to machine learning application

178
00:08:45,839 --> 00:08:48,560
for benchmarking we use google keyload

179
00:08:48,560 --> 00:08:51,120
as a keyword platform we have showcased

180
00:08:51,120 --> 00:08:53,279
the improvements in

181
00:08:53,279 --> 00:08:54,240
pool

182
00:08:54,240 --> 00:08:58,560
improved aes sparks circuit-based psi

183
00:08:58,560 --> 00:09:00,880
minimum equilibrium distance biometric

184
00:09:00,880 --> 00:09:04,080
matching and privacy preserving machine

185
00:09:04,080 --> 00:09:06,160
learning

186
00:09:06,160 --> 00:09:08,560
talking about a ppml

187
00:09:08,560 --> 00:09:11,839
for logistic regulation inference you

188
00:09:11,839 --> 00:09:15,360
can see or run time

189
00:09:15,360 --> 00:09:18,560
is like six times better in land setting

190
00:09:18,560 --> 00:09:20,959
and two times better event setting when

191
00:09:20,959 --> 00:09:22,959
compared to secular ml

192
00:09:22,959 --> 00:09:26,880
and or turopod is like 35 times better

193
00:09:26,880 --> 00:09:29,200
in land setting and 11 times better in

194
00:09:29,200 --> 00:09:31,839
vance setting when we compare to the

195
00:09:31,839 --> 00:09:34,560
secura mode

196
00:09:34,560 --> 00:09:37,440
and in neural network inference

197
00:09:37,440 --> 00:09:39,279
or runtime

198
00:09:39,279 --> 00:09:41,440
is about three times better than

199
00:09:41,440 --> 00:09:45,440
securamo and the two report again

200
00:09:45,440 --> 00:09:47,920
is better than like

201
00:09:47,920 --> 00:09:49,680
700

202
00:09:49,680 --> 00:09:50,880
times

203
00:09:50,880 --> 00:09:51,839
and the

204
00:09:51,839 --> 00:09:54,720
main reason of that is or

205
00:09:54,720 --> 00:09:56,240
dot product

206
00:09:56,240 --> 00:10:00,080
in aby 2.

207
00:10:00,880 --> 00:10:03,600
and in neural network training you can

208
00:10:03,600 --> 00:10:07,120
see or throughput is better like theory

209
00:10:07,120 --> 00:10:08,160
times

210
00:10:08,160 --> 00:10:10,800
when compared to secular ml

211
00:10:10,800 --> 00:10:13,760
and the main reason of that is or

212
00:10:13,760 --> 00:10:16,839
neo softmax in

213
00:10:16,839 --> 00:10:18,480
aby2

214
00:10:18,480 --> 00:10:22,640
to conclude about a b by 2 we can say we

215
00:10:22,640 --> 00:10:25,600
propose a new 2pc protocol

216
00:10:25,600 --> 00:10:29,600
for securely evaluating a circuit

217
00:10:29,600 --> 00:10:32,240
we provide a better mix protocol

218
00:10:32,240 --> 00:10:33,519
conversions

219
00:10:33,519 --> 00:10:38,240
regarding rand and online communication

220
00:10:38,240 --> 00:10:42,160
we extend two inputs to an input and

221
00:10:42,160 --> 00:10:45,360
gate evaluation and we have constant

222
00:10:45,360 --> 00:10:48,959
online cost of only two rings

223
00:10:48,959 --> 00:10:50,640
that's for the first time in the

224
00:10:50,640 --> 00:10:51,760
literature

225
00:10:51,760 --> 00:10:54,480
and we designed efficient building

226
00:10:54,480 --> 00:10:57,120
blocks for several application

227
00:10:57,120 --> 00:11:00,000
especially we designed a new scalar

228
00:11:00,000 --> 00:11:01,360
product

229
00:11:01,360 --> 00:11:03,839
where the online communication is

230
00:11:03,839 --> 00:11:07,279
independent of the vector dimension

231
00:11:07,279 --> 00:11:10,959
we designed run efficient other using a

232
00:11:10,959 --> 00:11:14,399
combination of two td and four input and

233
00:11:14,399 --> 00:11:16,079
gates

234
00:11:16,079 --> 00:11:19,279
and also we proposed a neo matrix

235
00:11:19,279 --> 00:11:22,640
multiplication a new equality test a new

236
00:11:22,640 --> 00:11:25,920
comparison and in neobiotech selection

237
00:11:25,920 --> 00:11:29,760
all of them are better regarding round

238
00:11:29,760 --> 00:11:32,560
and online communication then compare

239
00:11:32,560 --> 00:11:36,959
them with the asset of the artwork

240
00:11:37,040 --> 00:11:41,360
thank you for listening my presentation

241
00:11:41,360 --> 00:11:45,200
and i'm here to answer the question

242
00:11:45,200 --> 00:11:48,519
if you have

