1
00:00:08,559 --> 00:00:10,559
hello everyone thank you for taking the

2
00:00:10,559 --> 00:00:12,719
time to attend my presentation i hope

3
00:00:12,719 --> 00:00:14,080
this talk will make you question what

4
00:00:14,080 --> 00:00:15,920
you think you know about vpn security

5
00:00:15,920 --> 00:00:18,320
and then read our paper blind in on path

6
00:00:18,320 --> 00:00:20,880
attacks and applications to vpns

7
00:00:20,880 --> 00:00:22,880
i'm william talley from arizona state

8
00:00:22,880 --> 00:00:24,800
university and break pointing bad and

9
00:00:24,800 --> 00:00:26,160
this is a collaborative effort with

10
00:00:26,160 --> 00:00:28,720
washington and lee university india and

11
00:00:28,720 --> 00:00:31,519
ixe

12
00:00:31,519 --> 00:00:33,120
people often assume that if you're using

13
00:00:33,120 --> 00:00:34,800
the internet in a repressive environment

14
00:00:34,800 --> 00:00:36,079
such as a country that applies

15
00:00:36,079 --> 00:00:38,559
information controls a vpn will protect

16
00:00:38,559 --> 00:00:40,079
you against attackers within the network

17
00:00:40,079 --> 00:00:41,760
infrastructure who want to know what

18
00:00:41,760 --> 00:00:43,360
service you're connected to and

19
00:00:43,360 --> 00:00:44,800
interfere with or hijack certain

20
00:00:44,800 --> 00:00:46,239
connections

21
00:00:46,239 --> 00:00:48,239
examples of these potential attackers

22
00:00:48,239 --> 00:00:50,160
include network adjacent attackers such

23
00:00:50,160 --> 00:00:52,399
as a public wi-fi router or a cell phone

24
00:00:52,399 --> 00:00:54,559
tower under an attacker's control or an

25
00:00:54,559 --> 00:00:56,719
in-path state-controlled isp as we'll

26
00:00:56,719 --> 00:00:58,960
see in the next slide we wanted to know

27
00:00:58,960 --> 00:01:00,559
are these security assumptions about

28
00:01:00,559 --> 00:01:03,280
vpns true

29
00:01:03,280 --> 00:01:05,519
take iran as an example this figure is

30
00:01:05,519 --> 00:01:07,439
from a recent article 19 report about

31
00:01:07,439 --> 00:01:09,520
how iran's internet is structured you

32
00:01:09,520 --> 00:01:11,360
can see that all traffic to and from the

33
00:01:11,360 --> 00:01:13,280
country goes through tehran

34
00:01:13,280 --> 00:01:14,960
assuming you trust the wi-fi or cell

35
00:01:14,960 --> 00:01:16,640
tower that you're connected to there's

36
00:01:16,640 --> 00:01:18,080
still a question of what happens as your

37
00:01:18,080 --> 00:01:20,080
traffic exits and enters the country

38
00:01:20,080 --> 00:01:21,520
where it's well known that information

39
00:01:21,520 --> 00:01:24,479
controls are applied

40
00:01:24,640 --> 00:01:27,600
during protests in iran in 2009 it is

41
00:01:27,600 --> 00:01:28,640
believed that the government was

42
00:01:28,640 --> 00:01:30,560
stealing facebook credentials it would

43
00:01:30,560 --> 00:01:31,920
have been trivial for them to do so

44
00:01:31,920 --> 00:01:33,840
because there was no encryption in all

45
00:01:33,840 --> 00:01:35,920
traffic transits through tehran

46
00:01:35,920 --> 00:01:37,520
later that year facebook was banned in

47
00:01:37,520 --> 00:01:38,479
iran

48
00:01:38,479 --> 00:01:40,159
if iranians were accessing facebook

49
00:01:40,159 --> 00:01:42,720
through a vpn after the adoption of tls

50
00:01:42,720 --> 00:01:44,240
would their connections be secure from

51
00:01:44,240 --> 00:01:46,880
such attacks

52
00:01:47,280 --> 00:01:48,880
as a thought experiment we'll use marty

53
00:01:48,880 --> 00:01:50,640
mcfly's time machine to ignore any

54
00:01:50,640 --> 00:01:52,079
anachronisms

55
00:01:52,079 --> 00:01:54,159
imagine it's 2009 and tehran wants to

56
00:01:54,159 --> 00:01:55,680
perform man in the middle attacks on

57
00:01:55,680 --> 00:01:58,079
facebook during protests but facebook

58
00:01:58,079 --> 00:02:00,079
offers tls protection and users are

59
00:02:00,079 --> 00:02:01,520
using the most up-to-date version of

60
00:02:01,520 --> 00:02:04,079
wireguard a modern advanced vpn

61
00:02:04,079 --> 00:02:07,040
specifically version

62
00:02:07,040 --> 00:02:07,840
zero four 1.0.20

63
00:02:07,840 --> 00:02:10,000
four which includes all security fixes

64
00:02:10,000 --> 00:02:11,280
that resulted from our ethical

65
00:02:11,280 --> 00:02:13,840
disclosure process

66
00:02:13,840 --> 00:02:15,440
current thinking about network security

67
00:02:15,440 --> 00:02:17,280
is represented in this figure

68
00:02:17,280 --> 00:02:19,360
there are two kinds of attackers n on

69
00:02:19,360 --> 00:02:21,360
path attackers in orange and blind off

70
00:02:21,360 --> 00:02:23,360
path attackers in red

71
00:02:23,360 --> 00:02:24,959
a lot of research and protocol design

72
00:02:24,959 --> 00:02:26,560
decisions have gone into defenses

73
00:02:26,560 --> 00:02:28,640
against the off path attacker in the red

74
00:02:28,640 --> 00:02:30,160
but the only real defense against the

75
00:02:30,160 --> 00:02:32,959
in-on-path attackers in orange are tls

76
00:02:32,959 --> 00:02:34,800
or an encrypted tunnel such as a vpn

77
00:02:34,800 --> 00:02:36,560
that hides the tunnel protocols from

78
00:02:36,560 --> 00:02:37,760
them

79
00:02:37,760 --> 00:02:39,920
our example network operators in tehran

80
00:02:39,920 --> 00:02:42,000
would be orange however just because you

81
00:02:42,000 --> 00:02:43,360
can encrypt something doesn't mean that

82
00:02:43,360 --> 00:02:45,680
you've hidden its existence its timing

83
00:02:45,680 --> 00:02:48,400
or its size

84
00:02:48,879 --> 00:02:50,640
our paper proposes a new threat model

85
00:02:50,640 --> 00:02:52,239
that research and practice and encrypted

86
00:02:52,239 --> 00:02:54,640
tunnels needs to consider the blind in

87
00:02:54,640 --> 00:02:56,720
on path attacker

88
00:02:56,720 --> 00:02:58,319
in this figure you can ignore the red

89
00:02:58,319 --> 00:02:59,760
off path attackers because that's not

90
00:02:59,760 --> 00:03:01,360
what our study is about

91
00:03:01,360 --> 00:03:03,040
you can also ignore the orange attackers

92
00:03:03,040 --> 00:03:04,159
on the right because it's well known

93
00:03:04,159 --> 00:03:05,599
that vpns don't protect you from

94
00:03:05,599 --> 00:03:07,440
malicious routers in between the vpn

95
00:03:07,440 --> 00:03:08,720
server and the remote server you're

96
00:03:08,720 --> 00:03:10,640
trying to access

97
00:03:10,640 --> 00:03:12,319
here our example network operators in

98
00:03:12,319 --> 00:03:13,840
tehran are green

99
00:03:13,840 --> 00:03:15,360
they're blind in the sense that the vpn

100
00:03:15,360 --> 00:03:16,879
tunnel's encryption prevents them from

101
00:03:16,879 --> 00:03:18,879
seeing the contents of packets or packet

102
00:03:18,879 --> 00:03:21,840
headers but they're still in on path

103
00:03:21,840 --> 00:03:23,760
does a vpn tunnel actually protect you

104
00:03:23,760 --> 00:03:25,760
from blind in on path attackers shown

105
00:03:25,760 --> 00:03:28,159
here in green

106
00:03:28,159 --> 00:03:29,599
one of the attacks we present in this

107
00:03:29,599 --> 00:03:31,280
paper that takes advantage of the fact

108
00:03:31,280 --> 00:03:32,959
that a blind in-on-path attacker can

109
00:03:32,959 --> 00:03:34,400
observe packets and transit through the

110
00:03:34,400 --> 00:03:36,560
tunnel is shown on the left

111
00:03:36,560 --> 00:03:38,159
independently of any other field in the

112
00:03:38,159 --> 00:03:41,360
ip udp or dns header a blind and on-path

113
00:03:41,360 --> 00:03:43,200
attacker can infer the ephemeral port of

114
00:03:43,200 --> 00:03:45,200
a dns request tunneled through the vpn

115
00:03:45,200 --> 00:03:47,280
connection using the simple fact that if

116
00:03:47,280 --> 00:03:49,360
they guess it incorrectly in a spoof dns

117
00:03:49,360 --> 00:03:51,519
response nothing will be netted and sent

118
00:03:51,519 --> 00:03:53,120
through the encrypted tunnel

119
00:03:53,120 --> 00:03:54,400
whereas if they guess it correctly

120
00:03:54,400 --> 00:03:55,920
they'll see a packet roughly the size of

121
00:03:55,920 --> 00:03:57,439
their spoof packet come back through the

122
00:03:57,439 --> 00:04:00,720
vpn tunnel albeit encrypted

123
00:04:00,720 --> 00:04:02,879
for a spoof dns response to be accepted

124
00:04:02,879 --> 00:04:04,560
both the ephemeral port and transaction

125
00:04:04,560 --> 00:04:06,560
id both have to be correct

126
00:04:06,560 --> 00:04:08,400
they're each 16 bits so in the worst

127
00:04:08,400 --> 00:04:10,400
case it will take an off path attacker 2

128
00:04:10,400 --> 00:04:13,120
to the 32 or over 4 billion guesses to

129
00:04:13,120 --> 00:04:15,599
get both numbers correct

130
00:04:15,599 --> 00:04:17,680
on the other hand an in-on-path attacker

131
00:04:17,680 --> 00:04:19,440
can independently infer the destination

132
00:04:19,440 --> 00:04:21,358
port number by guessing and then use the

133
00:04:21,358 --> 00:04:22,720
correct port after they've inferred it

134
00:04:22,720 --> 00:04:24,720
to brute force all possible transaction

135
00:04:24,720 --> 00:04:27,600
ids the result is 32 000 times faster

136
00:04:27,600 --> 00:04:29,919
than the off path attacker

137
00:04:29,919 --> 00:04:32,000
does being 32 000 times faster than an

138
00:04:32,000 --> 00:04:33,759
off path attacker make it practical for

139
00:04:33,759 --> 00:04:35,840
a blind and on path attacker to spoof a

140
00:04:35,840 --> 00:04:37,520
dns response

141
00:04:37,520 --> 00:04:39,280
typical operating systems and browsers

142
00:04:39,280 --> 00:04:41,840
time out after 5 to 15 seconds and you

143
00:04:41,840 --> 00:04:43,440
can see our success rates for the dns

144
00:04:43,440 --> 00:04:45,040
attack on the right within these time

145
00:04:45,040 --> 00:04:46,000
ranges

146
00:04:46,000 --> 00:04:47,600
this is obviously not acceptable when

147
00:04:47,600 --> 00:04:49,199
compared to the security and privacy

148
00:04:49,199 --> 00:04:51,600
users assume a vpn is giving them not

149
00:04:51,600 --> 00:04:53,120
even for the smaller end of the timeout

150
00:04:53,120 --> 00:04:54,720
range

151
00:04:54,720 --> 00:04:56,960
back to our example we observe that when

152
00:04:56,960 --> 00:04:58,320
you're browsing facebook it will make a

153
00:04:58,320 --> 00:05:00,880
dns request about every two minutes

154
00:05:00,880 --> 00:05:02,160
so in our thought experiment where

155
00:05:02,160 --> 00:05:04,080
iranian facebook users were accessing

156
00:05:04,080 --> 00:05:05,919
facebook with the latest vpn technology

157
00:05:05,919 --> 00:05:07,919
available today after our ethical

158
00:05:07,919 --> 00:05:10,240
disclosures and we assumed that facebook

159
00:05:10,240 --> 00:05:12,160
used tls but the network operators in

160
00:05:12,160 --> 00:05:15,039
tehran have obtained a valid certificate

161
00:05:15,039 --> 00:05:16,720
as a user is browsing facebook we were

162
00:05:16,720 --> 00:05:18,240
able to see all their traffic in plain

163
00:05:18,240 --> 00:05:21,280
text and serve them fart book instead

164
00:05:21,280 --> 00:05:22,639
you might be wondering how we were able

165
00:05:22,639 --> 00:05:24,720
to remove two layers of encryption both

166
00:05:24,720 --> 00:05:27,919
the vpn and tls to strip off the vpn

167
00:05:27,919 --> 00:05:29,840
protection we use the dns hijacking

168
00:05:29,840 --> 00:05:31,759
attack we just presented

169
00:05:31,759 --> 00:05:34,960
more details about this are in the paper

170
00:05:34,960 --> 00:05:37,440
as far as tls keep two things in mind

171
00:05:37,440 --> 00:05:38,800
recall that we assume the network

172
00:05:38,800 --> 00:05:41,120
operators have a valid certificate

173
00:05:41,120 --> 00:05:43,199
also recall that a typical vpn leaves a

174
00:05:43,199 --> 00:05:44,880
one ip address size hole in the

175
00:05:44,880 --> 00:05:46,880
encryption so that vpn traffic sent to

176
00:05:46,880 --> 00:05:49,120
the vpn server isn't grabbed and sent

177
00:05:49,120 --> 00:05:51,120
back for encryption again

178
00:05:51,120 --> 00:05:52,960
the vpn server's ip address is the one

179
00:05:52,960 --> 00:05:55,520
we serve with our spoof dns response and

180
00:05:55,520 --> 00:05:57,360
we subsequently can hijack any web

181
00:05:57,360 --> 00:05:59,520
request the vpn client makes to that ip

182
00:05:59,520 --> 00:06:01,039
address

183
00:06:01,039 --> 00:06:02,800
note the lock tells you this is the real

184
00:06:02,800 --> 00:06:05,840
facebook.com as per tls authentication

185
00:06:05,840 --> 00:06:07,280
and just to be clear the user is

186
00:06:07,280 --> 00:06:08,800
protecting their traffic from us with

187
00:06:08,800 --> 00:06:10,560
the latest version of wireguard a

188
00:06:10,560 --> 00:06:12,319
leading edge vpn

189
00:06:12,319 --> 00:06:14,080
yet the amount of visibility and control

190
00:06:14,080 --> 00:06:16,240
we have over this user's facebook usage

191
00:06:16,240 --> 00:06:17,680
is as severe as if they were using no

192
00:06:17,680 --> 00:06:18,840
protection at

193
00:06:18,840 --> 00:06:21,039
all in addition to the server-side

194
00:06:21,039 --> 00:06:23,360
attacks against dns we just presented we

195
00:06:23,360 --> 00:06:25,360
also perform attacks on tcp connections

196
00:06:25,360 --> 00:06:27,360
using two different methods including a

197
00:06:27,360 --> 00:06:28,880
client-side attack from the perspective

198
00:06:28,880 --> 00:06:31,120
of a malicious access point

199
00:06:31,120 --> 00:06:32,560
for this attack instead of spoofing

200
00:06:32,560 --> 00:06:34,639
packets to the vpn server we instead

201
00:06:34,639 --> 00:06:37,039
spoof packets to the vpn client

202
00:06:37,039 --> 00:06:38,880
this attack required an additional step

203
00:06:38,880 --> 00:06:40,960
of inferring the virtual ip used by the

204
00:06:40,960 --> 00:06:42,639
client to communicate with the vpn to

205
00:06:42,639 --> 00:06:44,720
make inferences about active connections

206
00:06:44,720 --> 00:06:46,080
and then using the same inference

207
00:06:46,080 --> 00:06:47,520
technique to infer the sequence and

208
00:06:47,520 --> 00:06:49,360
acknowledge numbers of the active tcp

209
00:06:49,360 --> 00:06:50,560
connection

210
00:06:50,560 --> 00:06:52,080
in the interest of time we elected to

211
00:06:52,080 --> 00:06:54,400
present the dns hijacking attack so for

212
00:06:54,400 --> 00:06:56,720
more details on the tcp hijacking attack

213
00:06:56,720 --> 00:06:58,560
and a link to our artifact which

214
00:06:58,560 --> 00:07:00,000
includes the source code in a virtual

215
00:07:00,000 --> 00:07:01,759
environment to explore the attacks

216
00:07:01,759 --> 00:07:03,680
please refer to our paper

217
00:07:03,680 --> 00:07:05,520
the client side attacks resulted in two

218
00:07:05,520 --> 00:07:06,960
cbes

219
00:07:06,960 --> 00:07:08,680
cve

220
00:07:08,680 --> 00:07:10,960
2019-1489 which exploits the fact that

221
00:07:10,960 --> 00:07:12,800
modern unix-like operating systems have

222
00:07:12,800 --> 00:07:15,039
adopted the weak host model meaning that

223
00:07:15,039 --> 00:07:16,960
any packet received on any interface

224
00:07:16,960 --> 00:07:18,400
with a known local address will be

225
00:07:18,400 --> 00:07:20,479
processed by the kernel and forwarded to

226
00:07:20,479 --> 00:07:22,160
the application or service associated

227
00:07:22,160 --> 00:07:23,039
with it

228
00:07:23,039 --> 00:07:24,560
this allows an attacker to receive

229
00:07:24,560 --> 00:07:26,400
responses from the spoof packets sent to

230
00:07:26,400 --> 00:07:27,440
the victim

231
00:07:27,440 --> 00:07:28,840
in cve

232
00:07:28,840 --> 00:07:31,599
2019-9461 where android does all of this

233
00:07:31,599 --> 00:07:33,199
in plain text

234
00:07:33,199 --> 00:07:34,800
this attack has been mitigated by many

235
00:07:34,800 --> 00:07:36,240
vendors including wireguard by

236
00:07:36,240 --> 00:07:38,720
distinguishing the virtual interface

237
00:07:38,720 --> 00:07:40,960
the server-side attack against tcp as

238
00:07:40,960 --> 00:07:42,479
well as the attack we presented against

239
00:07:42,479 --> 00:07:44,800
dns however have not been mitigated by

240
00:07:44,800 --> 00:07:46,240
any vendor despite our effort to

241
00:07:46,240 --> 00:07:48,400
ethically disclose it and the solution

242
00:07:48,400 --> 00:07:50,000
proposed for the client side attack does

243
00:07:50,000 --> 00:07:51,360
not help since all the fields in the

244
00:07:51,360 --> 00:07:53,360
packets received by the vpn server in

245
00:07:53,360 --> 00:07:54,879
these attacks are identical to

246
00:07:54,879 --> 00:07:56,639
legitimate traffic

247
00:07:56,639 --> 00:07:58,400
here are our results from the client

248
00:07:58,400 --> 00:08:00,879
side attack against tcp connections

249
00:08:00,879 --> 00:08:02,400
the attack successfully hijacked

250
00:08:02,400 --> 00:08:05,440
connections 91.6 percent of the time

251
00:08:05,440 --> 00:08:07,360
but it should be noted that 6.1 percent

252
00:08:07,360 --> 00:08:08,639
of these failures were due to the

253
00:08:08,639 --> 00:08:10,160
attacker accidentally resetting the

254
00:08:10,160 --> 00:08:11,599
connection by guessing the exact

255
00:08:11,599 --> 00:08:13,840
sequence number

256
00:08:13,840 --> 00:08:15,440
our paper is not a simple matter if we

257
00:08:15,440 --> 00:08:16,960
found some number of vulnerabilities and

258
00:08:16,960 --> 00:08:18,720
now those have been fixed

259
00:08:18,720 --> 00:08:20,400
rather a lot more work is required

260
00:08:20,400 --> 00:08:21,919
before we know what it all means for

261
00:08:21,919 --> 00:08:23,360
users and how we can protect them

262
00:08:23,360 --> 00:08:26,160
against blind and on path attacks for

263
00:08:26,160 --> 00:08:27,840
example have client side attacks

264
00:08:27,840 --> 00:08:30,000
actually been mitigated by vendors

265
00:08:30,000 --> 00:08:31,520
while it's a straightforward fix it's

266
00:08:31,520 --> 00:08:33,279
not as simple as it sounds because of

267
00:08:33,279 --> 00:08:34,880
things like asymmetric routing and the

268
00:08:34,880 --> 00:08:36,719
fact that vpn source code is often

269
00:08:36,719 --> 00:08:38,719
incorporated into branded clients and

270
00:08:38,719 --> 00:08:40,799
configured in many different ways

271
00:08:40,799 --> 00:08:42,799
for example openvpn and most linux

272
00:08:42,799 --> 00:08:44,399
distros are examples of vendors that

273
00:08:44,399 --> 00:08:46,160
didn't issue any fix for even our

274
00:08:46,160 --> 00:08:48,080
client-side attacks

275
00:08:48,080 --> 00:08:49,680
how practical are server-side attacks

276
00:08:49,680 --> 00:08:51,600
for a real isp

277
00:08:51,600 --> 00:08:53,279
can we detect and prevent server-side

278
00:08:53,279 --> 00:08:54,640
attacks

279
00:08:54,640 --> 00:08:56,959
what about things like shadow socks

280
00:08:56,959 --> 00:08:59,360
what about the addition of padding

281
00:08:59,360 --> 00:09:01,920
for example with ops proxy what else can

282
00:09:01,920 --> 00:09:03,279
go wrong when you stack layers of

283
00:09:03,279 --> 00:09:04,800
abstraction on top of each other and

284
00:09:04,800 --> 00:09:06,240
encrypt them

285
00:09:06,240 --> 00:09:08,000
the conclusion of our research is that

286
00:09:08,000 --> 00:09:09,440
you can encrypt your packets but you

287
00:09:09,440 --> 00:09:11,360
can't hide their existence their timing

288
00:09:11,360 --> 00:09:12,640
or their size

289
00:09:12,640 --> 00:09:14,320
and that blind in on path attackers

290
00:09:14,320 --> 00:09:15,839
should be considered when designing any

291
00:09:15,839 --> 00:09:17,600
protocols that might be tunneled as we

292
00:09:17,600 --> 00:09:19,519
have seen with vpns

293
00:09:19,519 --> 00:09:23,080
thanks for your time

