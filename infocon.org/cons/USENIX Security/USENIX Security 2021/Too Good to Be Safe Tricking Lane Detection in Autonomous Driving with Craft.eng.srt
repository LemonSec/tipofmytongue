1
00:00:08,559 --> 00:00:11,280
hello everyone this is jim pompe from

2
00:00:11,280 --> 00:00:14,000
the hong kong polytechnic university uh

3
00:00:14,000 --> 00:00:16,480
currently carrying out the research

4
00:00:16,480 --> 00:00:18,880
in tencent securitykin lab

5
00:00:18,880 --> 00:00:21,439
and today i'm honored to

6
00:00:21,439 --> 00:00:24,640
present our study to good to be safe

7
00:00:24,640 --> 00:00:26,960
tricking lane detection in autonomous

8
00:00:26,960 --> 00:00:31,359
driving with crafted perturbations

9
00:00:31,359 --> 00:00:33,840
uh first about our motivation

10
00:00:33,840 --> 00:00:34,960
we know that

11
00:00:34,960 --> 00:00:37,520
autonomous driving is developing very

12
00:00:37,520 --> 00:00:38,719
rapidly

13
00:00:38,719 --> 00:00:39,760
and

14
00:00:39,760 --> 00:00:42,559
autonomous driving system is very very

15
00:00:42,559 --> 00:00:46,160
safety critical here we have some news

16
00:00:46,160 --> 00:00:49,600
for example in may 2020 tesla on

17
00:00:49,600 --> 00:00:53,360
autopilot crashes into overturned truck

18
00:00:53,360 --> 00:00:56,320
in taiwan because the vehicle fails to

19
00:00:56,320 --> 00:00:58,480
recognize the truck

20
00:00:58,480 --> 00:01:00,640
in front of the vehicle

21
00:01:00,640 --> 00:01:02,879
and in april 2021

22
00:01:02,879 --> 00:01:06,159
two men killed in driveland's tesla car

23
00:01:06,159 --> 00:01:08,400
in highway in america

24
00:01:08,400 --> 00:01:09,439
and also

25
00:01:09,439 --> 00:01:10,840
in may

26
00:01:10,840 --> 00:01:14,640
2021 a tesla in autopilot mode crashes

27
00:01:14,640 --> 00:01:17,360
into a parked police car

28
00:01:17,360 --> 00:01:20,000
these facts are reminding us that

29
00:01:20,000 --> 00:01:23,200
the decisions made by the autonomous

30
00:01:23,200 --> 00:01:24,479
driving system

31
00:01:24,479 --> 00:01:27,119
may not be that reliable at the current

32
00:01:27,119 --> 00:01:30,720
stage and it is very urgent for us to

33
00:01:30,720 --> 00:01:33,840
investigate uh the security of such

34
00:01:33,840 --> 00:01:35,680
systems

35
00:01:35,680 --> 00:01:40,880
and here in my presentation uh first

36
00:01:40,880 --> 00:01:44,079
i have some backgrounds to share

37
00:01:44,079 --> 00:01:47,119
uh first tips about the detection and

38
00:01:47,119 --> 00:01:49,680
how this is involved in the autonomous

39
00:01:49,680 --> 00:01:52,799
driving so basically the images are

40
00:01:52,799 --> 00:01:55,840
connected by the camera on the vehicle

41
00:01:55,840 --> 00:01:58,560
and based on the camera images

42
00:01:58,560 --> 00:02:00,240
lane detection module

43
00:02:00,240 --> 00:02:03,600
generates the corresponding lane image

44
00:02:03,600 --> 00:02:06,159
or the corresponding lane output

45
00:02:06,159 --> 00:02:07,600
and then the

46
00:02:07,600 --> 00:02:10,479
autonomous vehicle behaves based on the

47
00:02:10,479 --> 00:02:12,319
lane detection result

48
00:02:12,319 --> 00:02:14,319
so

49
00:02:14,319 --> 00:02:16,400
based on these facts

50
00:02:16,400 --> 00:02:19,120
changing the lane detection result which

51
00:02:19,120 --> 00:02:20,480
is here

52
00:02:20,480 --> 00:02:23,440
can affect the steering decision

53
00:02:23,440 --> 00:02:26,480
for example we can exploit its

54
00:02:26,480 --> 00:02:28,080
oversensitivity

55
00:02:28,080 --> 00:02:30,400
to create a fake link

56
00:02:30,400 --> 00:02:32,560
if we can

57
00:02:32,560 --> 00:02:34,959
add some perturbations

58
00:02:34,959 --> 00:02:36,400
on the image

59
00:02:36,400 --> 00:02:38,879
to make the main detection model believe

60
00:02:38,879 --> 00:02:41,840
that it is a real lane

61
00:02:41,840 --> 00:02:43,840
and here we have an

62
00:02:43,840 --> 00:02:46,000
intuitive approach to

63
00:02:46,000 --> 00:02:47,599
finish this task

64
00:02:47,599 --> 00:02:51,280
for example here uh on the ground

65
00:02:51,280 --> 00:02:53,200
at the attacker manually add

66
00:02:53,200 --> 00:02:54,720
perturbations

67
00:02:54,720 --> 00:02:55,680
and

68
00:02:55,680 --> 00:02:56,480
then

69
00:02:56,480 --> 00:02:58,720
check whether the module will be

70
00:02:58,720 --> 00:02:59,920
affected

71
00:02:59,920 --> 00:03:02,000
by checking the output

72
00:03:02,000 --> 00:03:04,800
and if not the perturbation should be

73
00:03:04,800 --> 00:03:07,840
changed or relocated by the attacker

74
00:03:07,840 --> 00:03:09,280
again

75
00:03:09,280 --> 00:03:11,040
um so

76
00:03:11,040 --> 00:03:14,080
unfortunately such an approach is very

77
00:03:14,080 --> 00:03:16,560
labor-intensive and error-prone because

78
00:03:16,560 --> 00:03:20,000
it is more like a try and error method

79
00:03:20,000 --> 00:03:22,480
and of course it would it will cost a

80
00:03:22,480 --> 00:03:25,040
lot of efforts

81
00:03:25,040 --> 00:03:27,599
and to solve this problem

82
00:03:27,599 --> 00:03:30,000
in our research we propose our two-stage

83
00:03:30,000 --> 00:03:31,200
attack

84
00:03:31,200 --> 00:03:33,599
to solve this problem

85
00:03:33,599 --> 00:03:35,680
so our attack is

86
00:03:35,680 --> 00:03:39,280
divided into two stages and in stage one

87
00:03:39,280 --> 00:03:42,640
first we add the perturbation to the

88
00:03:42,640 --> 00:03:46,080
camera image extracted from the vehicle

89
00:03:46,080 --> 00:03:47,040
and

90
00:03:47,040 --> 00:03:50,319
to trigger the lane detection module

91
00:03:50,319 --> 00:03:53,280
generate the corresponding output lane

92
00:03:53,280 --> 00:03:54,879
image

93
00:03:54,879 --> 00:03:57,640
and after that we formulate an

94
00:03:57,640 --> 00:04:00,400
optimization problem based on the

95
00:04:00,400 --> 00:04:01,760
visibility

96
00:04:01,760 --> 00:04:03,519
of perturbation

97
00:04:03,519 --> 00:04:06,879
and the visibility of the detected lane

98
00:04:06,879 --> 00:04:08,319
and adopted

99
00:04:08,319 --> 00:04:10,640
heuristic algorithms to find the best

100
00:04:10,640 --> 00:04:12,480
motivations

101
00:04:12,480 --> 00:04:15,599
and after that we deploy this best

102
00:04:15,599 --> 00:04:18,399
motivation in physical world

103
00:04:18,399 --> 00:04:21,440
for evaluation

104
00:04:21,918 --> 00:04:22,880
um

105
00:04:22,880 --> 00:04:25,759
to achieve this goal we are faced with

106
00:04:25,759 --> 00:04:26,840
three main

107
00:04:26,840 --> 00:04:29,840
challenges and the first challenge is

108
00:04:29,840 --> 00:04:32,479
how to extract the data from the real

109
00:04:32,479 --> 00:04:33,520
vehicle

110
00:04:33,520 --> 00:04:35,120
and

111
00:04:35,120 --> 00:04:38,240
in most cases these data are not exposed

112
00:04:38,240 --> 00:04:39,919
to users

113
00:04:39,919 --> 00:04:41,759
so to solve this problem we conduct

114
00:04:41,759 --> 00:04:44,560
static and dynamic analysis on the

115
00:04:44,560 --> 00:04:47,600
firmware responsible for lane detection

116
00:04:47,600 --> 00:04:51,120
in the vehicle to connect our data

117
00:04:51,120 --> 00:04:53,680
include including the camera image and

118
00:04:53,680 --> 00:04:57,600
the corresponding lane image

119
00:04:57,600 --> 00:04:59,919
and secondly

120
00:04:59,919 --> 00:05:02,800
how can we add perturbations to the

121
00:05:02,800 --> 00:05:04,720
input camera image

122
00:05:04,720 --> 00:05:06,560
now this is a

123
00:05:06,560 --> 00:05:09,039
this is a very

124
00:05:09,039 --> 00:05:11,680
this is a challenge because

125
00:05:11,680 --> 00:05:14,560
we want our attack to function

126
00:05:14,560 --> 00:05:17,120
uh in the real world to be effective in

127
00:05:17,120 --> 00:05:20,800
the real world instead of just

128
00:05:22,320 --> 00:05:25,280
function as the digital image

129
00:05:25,280 --> 00:05:28,639
so for the ease of deployment we use

130
00:05:28,639 --> 00:05:30,800
eight parameters

131
00:05:30,800 --> 00:05:34,400
which form a vector x to represent the

132
00:05:34,400 --> 00:05:38,800
attributes of the perturbations

133
00:05:38,800 --> 00:05:39,840
and

134
00:05:39,840 --> 00:05:42,880
we use the pinhole camera model and the

135
00:05:42,880 --> 00:05:44,960
on distortion techniques

136
00:05:44,960 --> 00:05:47,440
to map these perturbations on the

137
00:05:47,440 --> 00:05:48,800
digital image

138
00:05:48,800 --> 00:05:53,680
for our optimization problem so

139
00:05:53,680 --> 00:05:54,960
specifically

140
00:05:54,960 --> 00:05:57,520
these parameters

141
00:05:57,520 --> 00:06:00,720
includes the length and width

142
00:06:00,720 --> 00:06:02,960
representing the shape of the

143
00:06:02,960 --> 00:06:04,240
perturbation

144
00:06:04,240 --> 00:06:07,520
and the three distances representing the

145
00:06:07,520 --> 00:06:08,319
uh

146
00:06:08,319 --> 00:06:10,800
location of the perturbation

147
00:06:10,800 --> 00:06:14,240
and l delta g represents the intensity

148
00:06:14,240 --> 00:06:15,680
of the perturbation

149
00:06:15,680 --> 00:06:18,800
and theta as the rotation angle

150
00:06:18,800 --> 00:06:23,039
and n as the number of the perturbations

151
00:06:23,039 --> 00:06:25,039
and at last

152
00:06:25,039 --> 00:06:26,960
we have the last challenge

153
00:06:26,960 --> 00:06:30,080
how to find the best elevation

154
00:06:30,080 --> 00:06:32,560
so to solve this challenge

155
00:06:32,560 --> 00:06:34,400
we formulate

156
00:06:34,400 --> 00:06:37,440
an optimization problem to find the best

157
00:06:37,440 --> 00:06:39,039
motivation

158
00:06:39,039 --> 00:06:42,000
specifically we quantify the quality of

159
00:06:42,000 --> 00:06:43,600
the perturbation

160
00:06:43,600 --> 00:06:46,080
by the feasibility of lane

161
00:06:46,080 --> 00:06:46,880
and

162
00:06:46,880 --> 00:06:49,680
visibility of perturbation

163
00:06:49,680 --> 00:06:52,720
to be specific the visibility of lane

164
00:06:52,720 --> 00:06:55,919
should be high in order to make the

165
00:06:55,919 --> 00:06:57,840
attack effective

166
00:06:57,840 --> 00:07:00,639
and also the visibility of perturbation

167
00:07:00,639 --> 00:07:03,360
should be low in order to make the

168
00:07:03,360 --> 00:07:07,360
perturbation unobtrusive or invisible to

169
00:07:07,360 --> 00:07:08,880
human

170
00:07:08,880 --> 00:07:11,759
then we combine these two parameters

171
00:07:11,759 --> 00:07:14,240
together to form

172
00:07:14,240 --> 00:07:18,560
the sx to represent the overall score

173
00:07:18,560 --> 00:07:21,199
and based on this overall score we use

174
00:07:21,199 --> 00:07:23,919
the heuristic algorithms to find the

175
00:07:23,919 --> 00:07:25,360
best pertivation

176
00:07:25,360 --> 00:07:27,440
or the best the motivation with the

177
00:07:27,440 --> 00:07:30,560
heights score

178
00:07:30,560 --> 00:07:32,720
so

179
00:07:32,960 --> 00:07:35,199
that's all about the details of our

180
00:07:35,199 --> 00:07:36,240
attack

181
00:07:36,240 --> 00:07:37,759
and

182
00:07:37,759 --> 00:07:39,039
uh

183
00:07:39,039 --> 00:07:41,680
how will we how how can we evaluate our

184
00:07:41,680 --> 00:07:42,639
attack

185
00:07:42,639 --> 00:07:45,840
so in the paper we answered totally six

186
00:07:45,840 --> 00:07:47,199
research questions

187
00:07:47,199 --> 00:07:48,400
and here

188
00:07:48,400 --> 00:07:50,400
i will detail the

189
00:07:50,400 --> 00:07:53,440
most to import the most important two

190
00:07:53,440 --> 00:07:56,639
questions the first is how efficient are

191
00:07:56,639 --> 00:07:58,639
these algorithms to find the best

192
00:07:58,639 --> 00:07:59,840
perturbation

193
00:07:59,840 --> 00:08:00,720
and

194
00:08:00,720 --> 00:08:03,199
can we misguide the vehicle in physical

195
00:08:03,199 --> 00:08:04,960
world

196
00:08:04,960 --> 00:08:06,879
so for the first

197
00:08:06,879 --> 00:08:08,000
question

198
00:08:08,000 --> 00:08:09,360
we use

199
00:08:09,360 --> 00:08:11,840
five heuristic algorithms to find the

200
00:08:11,840 --> 00:08:13,919
best perturbations

201
00:08:13,919 --> 00:08:17,680
and it turns out that we found pso which

202
00:08:17,680 --> 00:08:20,800
is the particle swarm optimization is

203
00:08:20,800 --> 00:08:23,360
the most efficient one and thus we use

204
00:08:23,360 --> 00:08:27,360
it in other experiments and here is a

205
00:08:27,360 --> 00:08:30,000
demonstration of the

206
00:08:30,000 --> 00:08:31,919
best perturbation we found

207
00:08:31,919 --> 00:08:34,320
so here in the first row we have

208
00:08:34,320 --> 00:08:37,519
an a clean image without any link and of

209
00:08:37,519 --> 00:08:40,320
course the corresponding output is empty

210
00:08:40,320 --> 00:08:41,599
without any

211
00:08:41,599 --> 00:08:42,559
laying

212
00:08:42,559 --> 00:08:44,640
and after we add

213
00:08:44,640 --> 00:08:47,360
a perturbation which is only one

214
00:08:47,360 --> 00:08:50,160
centimeter wide

215
00:08:50,160 --> 00:08:51,519
these

216
00:08:51,519 --> 00:08:52,800
and then we

217
00:08:52,800 --> 00:08:56,000
feed this modified camera image to the

218
00:08:56,000 --> 00:08:57,600
injection module

219
00:08:57,600 --> 00:09:00,480
then the model believes that there is a

220
00:09:00,480 --> 00:09:04,640
very obvious link on the ground

221
00:09:04,880 --> 00:09:07,760
so in q1 in question one we actually

222
00:09:07,760 --> 00:09:11,279
answered that our attack is effective

223
00:09:11,279 --> 00:09:13,440
as the digital image

224
00:09:13,440 --> 00:09:14,880
but

225
00:09:14,880 --> 00:09:17,680
can we misguide the vehicle in physical

226
00:09:17,680 --> 00:09:19,200
world

227
00:09:19,200 --> 00:09:20,880
to answer this question

228
00:09:20,880 --> 00:09:23,120
we deployed the perturbations

229
00:09:23,120 --> 00:09:25,120
in the crossroads scenario

230
00:09:25,120 --> 00:09:27,680
then we switch the vehicle to auto steer

231
00:09:27,680 --> 00:09:30,480
mode and let it pass the crossroad to

232
00:09:30,480 --> 00:09:31,839
see whether

233
00:09:31,839 --> 00:09:34,240
its control will be affected by our

234
00:09:34,240 --> 00:09:36,880
perturbations

235
00:09:36,880 --> 00:09:38,880
here is the picture demonstrating our

236
00:09:38,880 --> 00:09:39,839
attack

237
00:09:39,839 --> 00:09:41,279
when the vehicle is

238
00:09:41,279 --> 00:09:43,120
running on the correct direction we use

239
00:09:43,120 --> 00:09:45,760
the physical perturbations to try to

240
00:09:45,760 --> 00:09:48,240
mislead the vehicle into the oncoming

241
00:09:48,240 --> 00:09:49,680
traffic

242
00:09:49,680 --> 00:09:51,519
and actually

243
00:09:51,519 --> 00:09:53,360
we found that the fake lane can

244
00:09:53,360 --> 00:09:56,240
successfully misguide the vehicle into

245
00:09:56,240 --> 00:09:58,800
the oncoming traffic

246
00:09:58,800 --> 00:10:00,320
and here is the

247
00:10:00,320 --> 00:10:02,880
video demonstration about

248
00:10:02,880 --> 00:10:05,279
what happened during our attack

249
00:10:05,279 --> 00:10:07,920
please note that the vehicle is in auto

250
00:10:07,920 --> 00:10:10,959
steer mode when recording meaning that

251
00:10:10,959 --> 00:10:12,720
we do not actually

252
00:10:12,720 --> 00:10:16,360
steer by human

253
00:10:18,720 --> 00:10:20,720
you can see that when passing the

254
00:10:20,720 --> 00:10:22,000
crossroads

255
00:10:22,000 --> 00:10:24,320
the vehicle actually follows the fake

256
00:10:24,320 --> 00:10:28,079
lane into the oncoming traffic

257
00:10:31,360 --> 00:10:33,519
to conclude

258
00:10:33,519 --> 00:10:34,320
we

259
00:10:34,320 --> 00:10:37,440
conduct the first investigation on the

260
00:10:37,440 --> 00:10:40,000
security of the land detection module in

261
00:10:40,000 --> 00:10:41,680
a real vehicle

262
00:10:41,680 --> 00:10:44,160
and review its sensitivity

263
00:10:44,160 --> 00:10:47,519
can be exploited to generate fake lanes

264
00:10:47,519 --> 00:10:50,240
and then even consequently mislead the

265
00:10:50,240 --> 00:10:51,839
vehicle

266
00:10:51,839 --> 00:10:54,160
also we propose a novel two-stage

267
00:10:54,160 --> 00:10:56,560
approach to generate the optimal

268
00:10:56,560 --> 00:10:59,040
perturbations against the lane detection

269
00:10:59,040 --> 00:11:00,560
module

270
00:11:00,560 --> 00:11:01,519
and

271
00:11:01,519 --> 00:11:04,240
we conduct extensive

272
00:11:04,240 --> 00:11:06,640
experiments on a tesla vehicle to

273
00:11:06,640 --> 00:11:08,959
evaluate our approach

274
00:11:08,959 --> 00:11:11,519
also the results show that the detection

275
00:11:11,519 --> 00:11:15,200
module in autopilot is vulnerable to our

276
00:11:15,200 --> 00:11:16,560
attack

277
00:11:16,560 --> 00:11:18,560
as for the future works

278
00:11:18,560 --> 00:11:20,000
we plan to

279
00:11:20,000 --> 00:11:23,200
assess other autonomous driving systems

280
00:11:23,200 --> 00:11:26,320
including for example apollo and open

281
00:11:26,320 --> 00:11:27,600
pilot

282
00:11:27,600 --> 00:11:30,079
and we will try other attack methods as

283
00:11:30,079 --> 00:11:31,760
well for example

284
00:11:31,760 --> 00:11:36,079
or try to erase the existing lane

285
00:11:36,079 --> 00:11:40,279
okay thanks so much for your time

286
00:11:46,880 --> 00:11:48,959
you

