1
00:00:07,839 --> 00:00:10,320
hello everyone i'm kai borcham from

2
00:00:10,320 --> 00:00:13,360
picking university here i give a talk on

3
00:00:13,360 --> 00:00:15,200
incrementally

4
00:00:15,200 --> 00:00:18,720
for only parts of the world

5
00:00:19,119 --> 00:00:21,359
password was also known as password

6
00:00:21,359 --> 00:00:23,920
managers are recommended for password

7
00:00:23,920 --> 00:00:25,119
management

8
00:00:25,119 --> 00:00:27,840
a user can store multiple passwords in

9
00:00:27,840 --> 00:00:30,480
your board and for set up

10
00:00:30,480 --> 00:00:35,920
mass passwords in to encrypt the vote

11
00:00:36,719 --> 00:00:39,440
the subtext is usually stored on an

12
00:00:39,440 --> 00:00:42,320
online service for sync

13
00:00:42,320 --> 00:00:44,559
so that a user can retrieve the

14
00:00:44,559 --> 00:00:45,840
passwords

15
00:00:45,840 --> 00:00:48,640
the website passwords on any kind by

16
00:00:48,640 --> 00:00:52,800
only remembering the mass password

17
00:00:54,160 --> 00:00:56,320
but the path the possible walls suffer

18
00:00:56,320 --> 00:00:59,600
from a significant stretch

19
00:00:59,600 --> 00:01:02,320
an attacker may steal the story trial

20
00:01:02,320 --> 00:01:05,438
from the online service

21
00:01:05,438 --> 00:01:06,320
that

22
00:01:06,320 --> 00:01:07,920
then she can

23
00:01:07,920 --> 00:01:10,240
carry out a guessing attack against the

24
00:01:10,240 --> 00:01:13,040
mass password

25
00:01:13,040 --> 00:01:15,360
since the mass password is human

26
00:01:15,360 --> 00:01:19,280
memorable it may be easily guessed

27
00:01:19,280 --> 00:01:21,520
in addition traditional encryption

28
00:01:21,520 --> 00:01:23,920
yields period or random junk for

29
00:01:23,920 --> 00:01:26,880
incorrect guesses then the attacker can

30
00:01:26,880 --> 00:01:29,040
efficiently retrieve all website

31
00:01:29,040 --> 00:01:31,600
passwords

32
00:01:32,960 --> 00:01:35,759
on possible votes are proposed to

33
00:01:35,759 --> 00:01:38,960
address these issues

34
00:01:38,960 --> 00:01:41,680
this technique can generate coil boards

35
00:01:41,680 --> 00:01:43,680
for input keys

36
00:01:43,680 --> 00:01:46,159
so that the attacker cannot distinguish

37
00:01:46,159 --> 00:01:48,479
the real one and have to do online

38
00:01:48,479 --> 00:01:50,960
verification which can be easily

39
00:01:50,960 --> 00:01:53,960
prevented

40
00:01:56,159 --> 00:01:58,719
the state of the art honeywell schemes

41
00:01:58,719 --> 00:02:01,520
leverage honey encryption for decoy

42
00:02:01,520 --> 00:02:03,600
generation

43
00:02:03,600 --> 00:02:06,479
the passwords are first encoded to a

44
00:02:06,479 --> 00:02:09,679
uniform with string by an encoder and

45
00:02:09,679 --> 00:02:13,040
then will be encrypted

46
00:02:13,040 --> 00:02:15,440
the encoder is designed according to the

47
00:02:15,440 --> 00:02:18,720
password word distribution so that

48
00:02:18,720 --> 00:02:21,840
a random bit stream will be decoded to a

49
00:02:21,840 --> 00:02:25,200
plausible looking vote

50
00:02:26,400 --> 00:02:29,840
an open problem for honor password words

51
00:02:29,840 --> 00:02:33,040
is how to achieve update security if the

52
00:02:33,040 --> 00:02:36,879
user adds or changes a website password

53
00:02:36,879 --> 00:02:38,319
the current

54
00:02:38,319 --> 00:02:41,599
honeywell schemes do a four updates for

55
00:02:41,599 --> 00:02:43,040
the set text

56
00:02:43,040 --> 00:02:44,959
even if

57
00:02:44,959 --> 00:02:49,040
even if only one password is changed

58
00:02:49,040 --> 00:02:52,080
this yields an independent new word for

59
00:02:52,080 --> 00:02:53,120
the

60
00:02:53,120 --> 00:02:56,959
each for each decoy box

61
00:02:56,959 --> 00:02:59,840
thus attacker can easily distinguish the

62
00:02:59,840 --> 00:03:02,319
robot according to the similarity

63
00:03:02,319 --> 00:03:06,159
between old and the new versions

64
00:03:06,159 --> 00:03:09,280
to carry out this attack the attacker

65
00:03:09,280 --> 00:03:11,760
only needs the old and new version of

66
00:03:11,760 --> 00:03:13,519
the subjects

67
00:03:13,519 --> 00:03:16,640
the old subtext is usually saw along

68
00:03:16,640 --> 00:03:20,799
with the kind of words at the background

69
00:03:21,840 --> 00:03:23,360
this means

70
00:03:23,360 --> 00:03:26,319
the threat is practical not just a

71
00:03:26,319 --> 00:03:29,359
theoretical one

72
00:03:30,560 --> 00:03:33,360
we first proposed a generic construction

73
00:03:33,360 --> 00:03:36,319
and an incremental update mechanism for

74
00:03:36,319 --> 00:03:37,680
honeywell

75
00:03:37,680 --> 00:03:40,879
which achieves update security further

76
00:03:40,879 --> 00:03:43,680
we instantiate our construction which

77
00:03:43,680 --> 00:03:45,760
can generate more plausible looking

78
00:03:45,760 --> 00:03:48,319
decoys

79
00:03:50,159 --> 00:03:53,280
in addition we formally investigate the

80
00:03:53,280 --> 00:03:55,840
optimal strategy for distinguished

81
00:03:55,840 --> 00:03:58,879
decoys and propose practical attacks

82
00:03:58,879 --> 00:04:02,959
to evaluate the honeywell schemes

83
00:04:04,720 --> 00:04:07,280
our construction for password was is

84
00:04:07,280 --> 00:04:09,840
simple we think the user generates the

85
00:04:09,840 --> 00:04:11,519
password

86
00:04:11,519 --> 00:04:15,159
one by one

87
00:04:16,079 --> 00:04:19,040
so that the probability of both is a

88
00:04:19,040 --> 00:04:21,519
product of the conditional probability

89
00:04:21,519 --> 00:04:23,360
of passwords

90
00:04:23,360 --> 00:04:25,840
then we only need to estimate the

91
00:04:25,840 --> 00:04:27,759
condition of probability of a new

92
00:04:27,759 --> 00:04:29,919
password and the server appearing old

93
00:04:29,919 --> 00:04:32,159
one

94
00:04:33,120 --> 00:04:35,520
based on the simple construction we

95
00:04:35,520 --> 00:04:37,680
propose the conditional encoder which

96
00:04:37,680 --> 00:04:40,320
can encode a new password under several

97
00:04:40,320 --> 00:04:41,759
old ones

98
00:04:41,759 --> 00:04:43,919
the conditional encoder is designed

99
00:04:43,919 --> 00:04:47,919
according to the condition of ability

100
00:04:48,160 --> 00:04:49,759
modeled by

101
00:04:49,759 --> 00:04:53,360
chung ethos transformation

102
00:04:53,360 --> 00:04:56,080
then the vote can be encoded password by

103
00:04:56,080 --> 00:04:58,639
password

104
00:05:00,160 --> 00:05:02,479
the base spring of our board is a

105
00:05:02,479 --> 00:05:04,639
confirmation of the base string of

106
00:05:04,639 --> 00:05:07,280
passwords

107
00:05:08,840 --> 00:05:11,120
with the completion of with the

108
00:05:11,120 --> 00:05:13,919
conditional encoder and the prefix

109
00:05:13,919 --> 00:05:16,479
keeping encryption scheme we can provide

110
00:05:16,479 --> 00:05:18,240
an incremental

111
00:05:18,240 --> 00:05:20,160
updates mechanism

112
00:05:20,160 --> 00:05:22,080
to add a new password

113
00:05:22,080 --> 00:05:25,360
we first encode a new password and add

114
00:05:25,360 --> 00:05:28,560
the password string to the wordpress

115
00:05:28,560 --> 00:05:30,800
screen

116
00:05:30,800 --> 00:05:34,160
to delete an old password we mark the

117
00:05:34,160 --> 00:05:36,720
password and stated but do not change

118
00:05:36,720 --> 00:05:38,400
the subtext

119
00:05:38,400 --> 00:05:41,199
to change an old password we encode the

120
00:05:41,199 --> 00:05:43,440
new password added password-based screen

121
00:05:43,440 --> 00:05:46,400
for the vote bit stream and updates a

122
00:05:46,400 --> 00:05:49,199
possible index for the corresponding

123
00:05:49,199 --> 00:05:52,199
account

124
00:05:53,759 --> 00:05:56,560
the conditional encoder guarantees

125
00:05:56,560 --> 00:05:59,520
that the old byte spring is the prefix

126
00:05:59,520 --> 00:06:01,919
of the new battery

127
00:06:01,919 --> 00:06:05,280
the prefix keeping encryption scheme for

128
00:06:05,280 --> 00:06:07,120
the guarantee that

129
00:06:07,120 --> 00:06:08,160
the old

130
00:06:08,160 --> 00:06:11,120
subtext is the is the prefix of the new

131
00:06:11,120 --> 00:06:12,720
set text

132
00:06:12,720 --> 00:06:14,960
thus taker with

133
00:06:14,960 --> 00:06:18,319
two versions of the subtext it generates

134
00:06:18,319 --> 00:06:20,000
to an attacker only with the

135
00:06:20,000 --> 00:06:22,800
counterwords

136
00:06:24,639 --> 00:06:25,919
for each

137
00:06:25,919 --> 00:06:28,400
decoy words the passwords in the new

138
00:06:28,400 --> 00:06:31,039
word are the same as those in the other

139
00:06:31,039 --> 00:06:34,080
words except the changed device

140
00:06:34,080 --> 00:06:36,639
this means our incremental update

141
00:06:36,639 --> 00:06:40,960
mechanism achieved update secret

142
00:06:45,440 --> 00:06:47,600
to extension

143
00:06:47,600 --> 00:06:49,759
our construction

144
00:06:49,759 --> 00:06:52,080
we propose a new conditional probability

145
00:06:52,080 --> 00:06:55,120
model for password awards

146
00:06:55,120 --> 00:06:57,599
the basic idea is simple a user

147
00:06:57,599 --> 00:07:00,560
generates a new password by reusing an

148
00:07:00,560 --> 00:07:02,720
older one or not

149
00:07:02,720 --> 00:07:05,599
for reusing

150
00:07:05,599 --> 00:07:08,319
case we design a simple

151
00:07:08,319 --> 00:07:09,680
single

152
00:07:09,680 --> 00:07:12,960
similar password module to capture call

153
00:07:12,960 --> 00:07:16,720
user reuse auto password

154
00:07:16,720 --> 00:07:19,280
for the second case we use a markup

155
00:07:19,280 --> 00:07:22,479
model to capture how a user creates a

156
00:07:22,479 --> 00:07:25,360
brand new password then we use

157
00:07:25,360 --> 00:07:28,000
unreused ability to capture the

158
00:07:28,000 --> 00:07:31,840
probability of the second case

159
00:07:32,560 --> 00:07:34,560
another important question for

160
00:07:34,560 --> 00:07:38,160
honeywell's research is how to evaluate

161
00:07:38,160 --> 00:07:38,919
the

162
00:07:38,919 --> 00:07:41,680
indistinguishability of the coils

163
00:07:41,680 --> 00:07:43,919
answer the question we formally

164
00:07:43,919 --> 00:07:45,280
investigate

165
00:07:45,280 --> 00:07:47,840
optimal stretch or distinguished real

166
00:07:47,840 --> 00:07:49,680
undercovers

167
00:07:49,680 --> 00:07:52,479
the opportunity strategy is ranking the

168
00:07:52,479 --> 00:07:55,120
world by the condition of ability or

169
00:07:55,120 --> 00:07:58,720
being real under the giving subtext

170
00:07:58,720 --> 00:08:01,199
the conditional probability for volts is

171
00:08:01,199 --> 00:08:04,400
proportional to the real-time decoy

172
00:08:04,400 --> 00:08:07,599
probability ratio

173
00:08:08,160 --> 00:08:12,720
but the real ability cannot be size the

174
00:08:12,720 --> 00:08:14,879
calculated

175
00:08:14,879 --> 00:08:17,840
so we estimate the ratio on the single

176
00:08:17,840 --> 00:08:20,080
password distribution and password

177
00:08:20,080 --> 00:08:21,840
reviewed features

178
00:08:21,840 --> 00:08:26,520
and then propose practical attacks

179
00:08:27,039 --> 00:08:29,840
the experimental results show that our

180
00:08:29,840 --> 00:08:31,399
attack is more

181
00:08:31,399 --> 00:08:34,240
effective than the state of the art

182
00:08:34,240 --> 00:08:39,880
attack against the existing schemes

183
00:08:41,120 --> 00:08:44,800
no attack achieved more than

184
00:08:44,800 --> 00:08:46,080
58

185
00:08:46,080 --> 00:08:49,360
distinguished accuracy against our skin

186
00:08:49,360 --> 00:08:52,399
this is close to 50 percent

187
00:08:52,399 --> 00:08:55,839
for the perfect skin

188
00:08:56,160 --> 00:08:58,880
compared with the current steam our

189
00:08:58,880 --> 00:09:00,800
scheme brings

190
00:09:00,800 --> 00:09:02,640
2.8

191
00:09:02,640 --> 00:09:04,160
to

192
00:09:04,160 --> 00:09:06,160
7.5

193
00:09:06,160 --> 00:09:09,839
times online cost to attackers

194
00:09:09,839 --> 00:09:12,720
note that along the online guessing can

195
00:09:12,720 --> 00:09:14,800
be easily prevented

196
00:09:14,800 --> 00:09:19,680
this is a great improvement on security

197
00:09:20,959 --> 00:09:24,480
our work may also benefit other research

198
00:09:24,480 --> 00:09:27,200
topics for example the incremental

199
00:09:27,200 --> 00:09:30,160
update mechanism may apply to other

200
00:09:30,160 --> 00:09:33,680
applications using home encryption

201
00:09:33,680 --> 00:09:35,920
the probability model design for

202
00:09:35,920 --> 00:09:37,120
passwords

203
00:09:37,120 --> 00:09:39,279
and possible words may be used for

204
00:09:39,279 --> 00:09:40,720
password guessing

205
00:09:40,720 --> 00:09:44,880
we leave this as future work

206
00:09:45,519 --> 00:09:48,760
thank you

207
00:09:54,160 --> 00:09:56,240
you

