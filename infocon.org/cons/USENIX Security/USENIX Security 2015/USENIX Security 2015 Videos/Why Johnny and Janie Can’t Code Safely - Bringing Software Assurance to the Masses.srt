1
00:00:10,650 --> 00:00:15,059
good morning everyone it's probably all
up late last night at the box and other

2
00:00:15,059 --> 00:00:18,960
sessions I'll see if I can try to wake
you up to this isn't going to be an

3
00:00:18,960 --> 00:00:22,840
in-depth research talk you know that's
that's it for the people to submit the

4
00:00:22,840 --> 00:00:26,009
heart papers and everything like that
i'm gonna talk a little about the role

5
00:00:26,009 --> 00:00:32,668
of had recently in some the swamp and
other projects and trying to bring the

6
00:00:32,668 --> 00:00:37,029
things I've learned in my research 22 a
larger sphere I think much of what's

7
00:00:37,030 --> 00:00:41,440
going on gonna say is probably preaching
to the choir many of you know and

8
00:00:41,440 --> 00:00:45,280
believe this stuff so you have no idea
ahead many of you can give part of this

9
00:00:45,280 --> 00:00:50,350
talk may be better known as many bad
jokes so we'll see how that goes over

10
00:00:50,350 --> 00:00:54,449
don't offend you but being too obvious
and obvious to many of you is not

11
00:00:54,449 --> 00:00:57,989
obvious to the large part of the idea
and computer world out there and that's

12
00:00:57,989 --> 00:01:02,129
a little frightening and i want to talk
about that and what I'd really

13
00:01:02,129 --> 00:01:05,209
appreciated your your insight your
feedback

14
00:01:05,209 --> 00:01:12,889
your comments during her at the end of
the talk if all I do is talk indicating

15
00:01:12,890 --> 00:01:19,980
back from it you know it's not exciting
for me to talk a little bit self-serving

16
00:01:19,980 --> 00:01:24,270
talk about this one project about try to
finish up with some cool fun bad code

17
00:01:24,270 --> 00:01:30,149
things that are going on out there is
word you at the end I just got back from

18
00:01:30,150 --> 00:01:37,640
a week of backcountry of off the grid
backpacking and in the Sierras which is

19
00:01:37,640 --> 00:01:43,190
my favorite place to hide away from the
world and I got in a surprising security

20
00:01:43,190 --> 00:01:47,830
discussion with one of the National Park
national forest rangers we're talking

21
00:01:47,830 --> 00:01:52,530
about bringing my food bags are food
bags to keep away from critters in the

22
00:01:52,530 --> 00:01:54,450
backcountry to people

23
00:01:54,450 --> 00:02:00,130
lunch or dinner in your breakfast as
well and they were complaining that my

24
00:02:00,130 --> 00:02:03,929
bed with paying too low as I was not
addressing the advanced persistent

25
00:02:03,930 --> 00:02:08,670
threat which was the Bears and and I was
trying to explain to me how I wasn't

26
00:02:08,669 --> 00:02:12,670
concerned about the Bears as they really
weren't after me they were better

27
00:02:12,670 --> 00:02:15,579
resources for them to go after that me

28
00:02:15,580 --> 00:02:21,730
discussion not making this up and they
said well you should get the best

29
00:02:21,730 --> 00:02:26,239
quality security which is bare barrel
city backpackers here in about their

30
00:02:26,240 --> 00:02:30,830
barrels but bear barrels are really
annoying your heavy and carrying around

31
00:02:30,830 --> 00:02:38,280
is a pain in the heat in the back and
they require a tool to get open and so

32
00:02:38,280 --> 00:02:44,370
you tend to leave them open inconvenient
to use so then the Chipmunks get in your

33
00:02:44,370 --> 00:02:49,750
food and so because you're careless
about this heavyweight barrier

34
00:02:49,750 --> 00:02:55,560
being careless and leaving it there and
then the Chipmunks and until we get this

35
00:02:55,560 --> 00:02:58,910
big long discussion you know well you
know I hang it up here you know the

36
00:02:58,910 --> 00:03:03,010
Bears know you had a cut down your food
will not get somebody in the wilderness

37
00:03:03,010 --> 00:03:07,149
areas are not as well trained there and
and it well but you in the Grand Canyon

38
00:03:07,150 --> 00:03:12,340
the bird will cut the strobe and then
the squirrels with your bag to work

39
00:03:12,340 --> 00:03:20,760
together there's these teams so I really
was trying to get off the grid and it

40
00:03:20,760 --> 00:03:27,510
wasn't working okay enough's enough
let's so every good security talk at the

41
00:03:27,510 --> 00:03:32,299
Starbucks care in the audience here's my
story flood slide I actually give a talk

42
00:03:32,300 --> 00:03:36,959
a little later as visiting the Senate
Homeland Security Committee and I

43
00:03:36,959 --> 00:03:40,820
started off with a slide and I had to
explain to him why this light was funny

44
00:03:40,820 --> 00:03:45,500
and that if any after you explain to a
senator waistlines funny they will laugh

45
00:03:45,500 --> 00:03:47,380
and it it was pretty good

46
00:03:47,380 --> 00:03:53,930
ok ok so we've got this world of
software that those women around here

47
00:03:53,930 --> 00:03:59,180
it's just mind bending Lee incredible
how much software there is okay we've

48
00:03:59,180 --> 00:04:03,510
got platforms out there and we all know
these platform we've got the mobile

49
00:04:03,510 --> 00:04:09,640
devices which is really one of the worst
things going on we've got program what

50
00:04:09,640 --> 00:04:13,869
program should graduate the battery for
Greek off into web program and a program

51
00:04:13,870 --> 00:04:18,220
inside these Framework Programme a
framework doesn't mean you're safe and

52
00:04:18,220 --> 00:04:22,270
well structured we have a lot of really
cool badly used framework

53
00:04:22,270 --> 00:04:27,479
vulnerabilities we found but you've got
people writing a bazillion back in

54
00:04:27,479 --> 00:04:28,770
software

55
00:04:28,770 --> 00:04:33,549
tools that are running a website you've
got open source software which is being

56
00:04:33,550 --> 00:04:39,139
written by usually fairly talented
people with no as as as as Eric like to

57
00:04:39,139 --> 00:04:44,379
say no adult supervision are very little
and that creates a whole interesting set

58
00:04:44,379 --> 00:04:47,780
of other problem and you've got this
cloud thing and people are deploying

59
00:04:47,780 --> 00:04:53,159
more and more things out there and
you've got something which is called the

60
00:04:53,159 --> 00:04:57,219
internet thing for basic need everything
you ever owned

61
00:04:57,220 --> 00:05:00,509
will have software in it and that's off
will be on the internet

62
00:05:00,509 --> 00:05:07,509
ok that's really so this just create an
unlimited opportunity and global

63
00:05:07,509 --> 00:05:12,220
ubiquitous attack surface and this is
really frightening so this is kind of

64
00:05:12,220 --> 00:05:18,220
fun I'm gonna show the show the the
Google show the Android went to this is

65
00:05:18,220 --> 00:05:22,690
the number of apps out there in the most
recent did I get which is pretty recent

66
00:05:22,690 --> 00:05:30,719
June this past June 1.5 million apps ok
and just so I don't sound like a big hit

67
00:05:30,719 --> 00:05:39,229
you know about 1.3 million in in the
Android store now anybody who's got a

68
00:05:39,229 --> 00:05:42,508
little bit of gray hey places are
covered up or wherever shaved off

69
00:05:42,509 --> 00:05:49,050
whatever you do with your great if you
would have been told ten years ago or

70
00:05:49,050 --> 00:05:53,759
fifteen years ago there's gonna be a
platform with over a million different

71
00:05:53,759 --> 00:05:58,190
programs running on it you would have
looked at the person said it like they

72
00:05:58,190 --> 00:06:04,400
were completed it may be a visionary but
it was just you know amy is just

73
00:06:04,400 --> 00:06:10,830
extraordinary now what is what does that
mean this this is the dispatcher

74
00:06:10,830 --> 00:06:18,008
reproduction in the you in the us- this
is the Taliban survey of the top of the

75
00:06:18,009 --> 00:06:22,590
top action program and what we see is
we're producing right as the last

76
00:06:22,590 --> 00:06:30,448
projected data we're going to produce
18,000 bathrooms and this is below what

77
00:06:30,449 --> 00:06:35,240
we had at the top internet but this is
this is enrollment to this is newly

78
00:06:35,240 --> 00:06:40,899
declared majors and you can see we have
about 25,000 newly declared major and

79
00:06:40,899 --> 00:06:41,849
this

80
00:06:41,849 --> 00:06:48,389
right here is is the dot-com bubble so
we're not even caught up with the most

81
00:06:48,389 --> 00:06:58,899
recent frenetic high and so look at this
date here look at look at the curve

82
00:06:58,899 --> 00:07:08,529
growing only in 10 and so we are we're
at a point where you know where we're at

83
00:07:08,529 --> 00:07:14,580
a point here where we're not catching up
with the highest point in

84
00:07:14,580 --> 00:07:20,938
trained programmers yet we have that
absurd growth in software now when I was

85
00:07:20,939 --> 00:07:26,689
20 grad student had my first conference
susp in 1983 and the closing comments I

86
00:07:26,689 --> 00:07:30,869
believe it was right levin was given a
said you know they're probably only a

87
00:07:30,869 --> 00:07:34,419
good hundred good system programs also a
thousand cause that makes people feel

88
00:07:34,419 --> 00:07:37,740
better but it's probably only a hundred
good system programs in the world if you

89
00:07:37,740 --> 00:07:42,019
don't have one of them on your project
you're probably doomed to failure

90
00:07:42,019 --> 00:07:46,919
ok well you know we've had like I'm
growth since the eighties you know but

91
00:07:46,919 --> 00:07:52,818
do we have enough good programmers to be
producing millions of program out there

92
00:07:52,819 --> 00:07:56,649
okay so so this is this is kind of
terrifying for the software assurance

93
00:07:56,649 --> 00:07:59,939
world because we're just gonna be
putting software more and more places

94
00:07:59,939 --> 00:08:06,459
and more more things so I guess I'd
guess at what my foot ok so what are our

95
00:08:06,459 --> 00:08:11,159
defensive let me talk a little about him
and I'm a professor first-line defense I

96
00:08:11,159 --> 00:08:17,860
think it's education secure design
secure coding technique vulnerability

97
00:08:17,860 --> 00:08:22,509
assessment so learning how to think and
offensive way learning how to think in

98
00:08:22,509 --> 00:08:26,439
offensive way so these are really quick

99
00:08:26,439 --> 00:08:30,849
critical and they're not part of our
undergrad and grad curriculums there are

100
00:08:30,849 --> 00:08:35,218
a few courses out there and I'll talk
about this is really lacking in what we

101
00:08:35,219 --> 00:08:39,300
teach in this is not it will be teaching
a computer security courses and training

102
00:08:39,299 --> 00:08:43,789
training is distinct this is what you do
post graduation you're out of the

103
00:08:43,789 --> 00:08:48,689
University and trying to you know trying
to stick your skills up there a lot of

104
00:08:48,689 --> 00:08:51,779
organization for the good at it but
there's many more organizations that are

105
00:08:51,779 --> 00:08:56,510
bad at that use you until what you know
is useless then they cut the project in

106
00:08:56,510 --> 00:09:00,160
your fifty year old laid off engineer
complaining about the young 20 year olds

107
00:09:00,160 --> 00:09:04,089
coming from Iowa India and China
wherever they could twenty year old come

108
00:09:04,089 --> 00:09:09,699
from and they're taking my job and not
take your job because you're older take

109
00:09:09,699 --> 00:09:13,510
your job could you know things for
thirty years old and new stuff so

110
00:09:13,510 --> 00:09:17,660
organizations can't be complacent
especially in the security aspect of it

111
00:09:17,660 --> 00:09:22,050
they can't leave the universities and
they can't and employees he did take

112
00:09:22,050 --> 00:09:28,959
some incentive here but organizational
policies organizations need to have

113
00:09:28,959 --> 00:09:36,569
policies in place that require people to
behave well that use best practices

114
00:09:36,569 --> 00:09:44,370
though I love I love Gilbert's comment
that practices of other companies are

115
00:09:44,370 --> 00:09:50,699
using best practices doesn't that mean
we just all mediocre so that I won't

116
00:09:50,699 --> 00:09:55,540
worry when I use that phrase but we need
requirements procedures standards for

117
00:09:55,540 --> 00:10:00,079
what it means to write software for
organizations tools are first-line

118
00:10:00,079 --> 00:10:05,329
defense and this is where my hat tonight
my chief scientist with the swamp

119
00:10:05,329 --> 00:10:09,420
project comes in and I'll talk about
that more we need we need to use to love

120
00:10:09,420 --> 00:10:12,939
to help but they're not the end of the
story in fact they're just the very

121
00:10:12,939 --> 00:10:18,309
beginning of the story for good security
but they are a necessary lower bound and

122
00:10:18,309 --> 00:10:24,939
we need to be using tools and we need to
be doing in-depth analysis of critical

123
00:10:24,939 --> 00:10:28,059
resource we need to know what are
critical resources are and then we need

124
00:10:28,059 --> 00:10:32,969
to be doing really much more in-depth
Red Team Blue teaming of software though

125
00:10:32,970 --> 00:10:37,709
if you can get people to spend money on
the left second the last one last one

126
00:10:37,709 --> 00:10:44,518
forget it so let's talk a little bit
more about that okay so where is secure

127
00:10:44,519 --> 00:10:53,610
coding in our curriculum it typically
appears if anywhere at week unit WEA k

128
00:10:53,610 --> 00:11:00,110
bye week 7 days a one-week unit as part
of a security class so you learn

129
00:11:00,110 --> 00:11:07,450
something about it gets tossed in but
there's no there's no extensive

130
00:11:07,450 --> 00:11:12,820
extensive training and that is really
quite limited and now there are courses

131
00:11:12,820 --> 00:11:17,990
there are courses that are insecure
coating designed to offer their very

132
00:11:17,990 --> 00:11:22,840
rare they're taught around a few places
I looked at one CMU has one though they

133
00:11:22,840 --> 00:11:26,690
talk to the people and talk by the folks
at search in the regular curriculum they

134
00:11:26,690 --> 00:11:30,540
say but only seven people take it each
year is one the biggest loss programs in

135
00:11:30,540 --> 00:11:34,270
the country the world maybe only seven
people take it you know I've seen him in

136
00:11:34,270 --> 00:11:39,340
a few other places I'm not fond of a lot
of I'm glad they're being taught in the

137
00:11:39,340 --> 00:11:44,040
few places I'm not always fun to what's
being taught they spent too much time on

138
00:11:44,040 --> 00:11:50,230
on board non-technical issues and
potential issues but there just almost

139
00:11:50,230 --> 00:11:54,580
non-existent there and we also need to
integrate this with other subject I i

140
00:11:54,580 --> 00:12:01,170
teach tutorials and secure coding and
and and we we go all over the place to

141
00:12:01,170 --> 00:12:06,699
do this week we don't charge money do it
and I'll talk about that in a minute and

142
00:12:06,700 --> 00:12:09,840
I have always slideshows talk with my
colleagues at a faculty meeting saying

143
00:12:09,840 --> 00:12:13,430
well we need to teach it and so simply
said well how do we do that I said to

144
00:12:13,430 --> 00:12:17,319
him to the memory stick to the database
guys had here for slideshow the sequel

145
00:12:17,320 --> 00:12:22,630
injection teach these and one electrical
take you 10 minute and you can make the

146
00:12:22,630 --> 00:12:26,590
world safer ok so we need to be
integrating these things in with our

147
00:12:26,590 --> 00:12:31,050
courses and of course we teach I teach
the undergrad and grad OS courses and we

148
00:12:31,050 --> 00:12:35,420
talked a lot about security there but we
need to be making it even the processor

149
00:12:35,420 --> 00:12:39,280
level we need to be talking about all
the interesting things are going on the

150
00:12:39,280 --> 00:12:44,360
processor level oK so that's occasion
professional trading where universities

151
00:12:44,360 --> 00:12:50,260
leave off the professional company step
in I just grabbed a bunch of people who

152
00:12:50,260 --> 00:12:53,600
teach the stop group here

153
00:12:53,600 --> 00:12:57,650
charge a lot of money the bottom group
have free resources for you typically

154
00:12:57,650 --> 00:13:03,260
pay several a few thousand dollars to
send one student for a week of teaching

155
00:13:03,260 --> 00:13:08,260
this stuff is pretty expensive
organizations tend to not do a lot of it

156
00:13:08,260 --> 00:13:11,530
because expensive but maybe they're
doing more of it could hurt the bunch of

157
00:13:11,530 --> 00:13:15,600
people trying to make a lot of money out
there and typically need more than one

158
00:13:15,600 --> 00:13:19,970
course you can spend a week learning C
C++ security another week learning job

159
00:13:19,970 --> 00:13:20,950
and other week learning P

160
00:13:20,950 --> 00:13:26,870
HP in web and on and on and on and so on
and there's an increasing number of free

161
00:13:26,870 --> 00:13:31,810
online resources for this in fact we
have we're we're starting to build

162
00:13:31,810 --> 00:13:39,000
podcast for our stuff so I Safeco dork
has a nice online modules is only a few

163
00:13:39,000 --> 00:13:42,950
out there but they're pretty nice and
we're gonna start pumping out modules to

164
00:13:42,950 --> 00:13:51,390
its suit I can spend enough time in
Madison actually record them so sure

165
00:13:51,390 --> 00:13:56,689
really interesting you know I had a long
and in fact one of our one of our goals

166
00:13:56,690 --> 00:14:03,090
for either the end of this academic
coming academic year at the beginning

167
00:14:03,090 --> 00:14:07,580
next one is to take our secure coding
course input on it as a movie and we're

168
00:14:07,580 --> 00:14:10,960
hoping we're hoping to do that day I was
I was teaching system for Dave Patterson

169
00:14:10,960 --> 00:14:16,850
when I grad student and Dave's amazing
amazing teacher is when the best I know

170
00:14:16,850 --> 00:14:22,610
and and he's had a long talk about him
he's done a really good job picking

171
00:14:22,610 --> 00:14:27,810
summits offer engineering so we're
hoping hoping to benefit from people

172
00:14:27,810 --> 00:14:44,479
like him in and do that yeah

173
00:14:44,480 --> 00:14:52,449
how to get people to do it i mean
they're you know they're just such a

174
00:14:52,449 --> 00:14:59,490
draw out into regular jobs to get people
to do that kind of thing to fund it and

175
00:14:59,490 --> 00:15:29,370
and how you people spend their time tell
me more about these data science

176
00:15:29,370 --> 00:15:33,050
incubators and we can we can talk about
more about that I like to hear more

177
00:15:33,050 --> 00:15:39,560
about that okay so I'm gonna take away
slide you know so much softer touches

178
00:15:39,560 --> 00:15:43,029
the internet and end their summit
software that we wrote that wasn't

179
00:15:43,029 --> 00:15:46,959
supposed to touch the internet are we
wrote it there was no internet seriously

180
00:15:46,959 --> 00:15:48,079
that still out there

181
00:15:48,079 --> 00:15:54,819
your code never dies it's really scary
that that there are few things were

182
00:15:54,819 --> 00:15:58,949
writing that have no attack surface and
the air gap doesn't seem to be robust as

183
00:15:58,949 --> 00:16:05,300
it was several years ago there were a
couple of well-publicized publicized

184
00:16:05,300 --> 00:16:12,979
attacks both in the iraqi command post
during the during the war and also the

185
00:16:12,980 --> 00:16:17,569
Iranian Iranian centrifuges that show
there been some sophisticated attacks

186
00:16:17,569 --> 00:16:21,029
that jump the air gap year gap is when
you don't you don't connect classified

187
00:16:21,029 --> 00:16:27,040
network to the rest of the world you
know and so that's used to be a high

188
00:16:27,040 --> 00:16:32,089
compliment kind confidence kind of
security but not as much so we think

189
00:16:32,089 --> 00:16:35,920
every student coming through their needs
to have a thorough exposure to secure

190
00:16:35,920 --> 00:16:39,649
programming techniques because what
they're gonna do is going to affect

191
00:16:39,649 --> 00:16:45,920
security ok so I'm gonna start talking
about tools and a second these kind of

192
00:16:45,920 --> 00:16:49,800
tools for analyzing programs that can be
a segue into the swamp project but let

193
00:16:49,800 --> 00:16:54,359
me just talk about terminology and I
probably don't need to tell the audience

194
00:16:54,360 --> 00:16:57,870
but terminology but language shapes
thought of my linguist

195
00:16:57,870 --> 00:17:03,339
like to say and so and I'm constantly
trying to talk with people out in the

196
00:17:03,339 --> 00:17:08,130
real world about what they should be
using what they should be doing so say a

197
00:17:08,130 --> 00:17:12,740
weakness as the bug in your code is
something wrong in your code your

198
00:17:12,740 --> 00:17:17,140
programs not acting the way it should at
the crash is printouts seven instead of

199
00:17:17,140 --> 00:17:17,880
three

200
00:17:17,880 --> 00:17:20,959
the airplane turned left instead of
right little things like that and

201
00:17:20,959 --> 00:17:23,959
they're just really wonderful taxonomy
of weaknesses out there called the

202
00:17:23,959 --> 00:17:29,860
common weakness enumeration which is a
way of providing a fairly standardized

203
00:17:29,860 --> 00:17:32,990
numbering and naming system for things
that go wrong with programs and that's

204
00:17:32,990 --> 00:17:36,840
useful when you're building tools and
compare things and trying to understand

205
00:17:36,840 --> 00:17:40,439
what's wrong with the program so
vulnerabilities when you can take a

206
00:17:40,440 --> 00:17:46,650
weakness and actually do something that
has a useful bad result to it I can X

207
00:17:46,650 --> 00:17:52,590
pills and data I can I can you know you
know I can I can raise my privilege I

208
00:17:52,590 --> 00:17:55,270
can I can modify your data

209
00:17:55,270 --> 00:18:00,230
you know whatever it is I can disable
your system take away you know I can do

210
00:18:00,230 --> 00:18:04,080
any third number of bad things to that
and exploit that's the code or chic

211
00:18:04,080 --> 00:18:09,290
winter activity that allows you to make
use of the vulnerabilities this just a

212
00:18:09,290 --> 00:18:14,899
little bit a language I try you know
weakness and vulnerability are used

213
00:18:14,900 --> 00:18:20,460
interchangeably they shouldn't be so
pardon over pedantic news here

214
00:18:20,460 --> 00:18:25,220
ok so they're they're they're these
tools out there for analyzing programs

215
00:18:25,220 --> 00:18:28,820
in various ways tried to tech
something's wrong and this is a

216
00:18:28,820 --> 00:18:33,230
substitute for programmers doing the
right thing it should be in the best

217
00:18:33,230 --> 00:18:37,580
environment it should be an accessory in
and help for programmers are trying to

218
00:18:37,580 --> 00:18:41,199
do the right thing it's often a
substitute that shouldn't be so they're

219
00:18:41,200 --> 00:18:45,590
they're commercial and open source tools
commercial tools are often either use a

220
00:18:45,590 --> 00:18:49,800
more polished talk a bit more about that
so often the open source tools a great

221
00:18:49,800 --> 00:18:58,240
find bugs bill puse just down the street
here in College Park Road 44 job is like

222
00:18:58,240 --> 00:19:02,760
the most widely used probably the most
successful many commercial tools that

223
00:19:02,760 --> 00:19:07,510
have Java functionality or just wrappers
around fine books so maybe with a few

224
00:19:07,510 --> 00:19:11,430
more rules huge lack of business base
lodge back in

225
00:19:11,430 --> 00:19:17,300
returning the research into tools and
then their new companies popping up all

226
00:19:17,300 --> 00:19:18,280
the time

227
00:19:18,280 --> 00:19:23,500
there are some companies that run tools
as a service area code for example is

228
00:19:23,500 --> 00:19:29,790
one of the most well-known 1 I'm not get
now there there's one company is

229
00:19:29,790 --> 00:19:35,490
offering a free tools or service version
of their commercial tool but it requires

230
00:19:35,490 --> 00:19:41,180
you to download 300 megabytes compressed
image that you then have to install it

231
00:19:41,180 --> 00:19:45,750
takes up almost 2 Gigabyte on your desk
and then when you run out 2009 see

232
00:19:45,750 --> 00:19:49,150
program through it produces three
megabytes of something that you can

233
00:19:49,150 --> 00:19:54,820
upload to get it analyzed in view and so
while it's free and easier to service a

234
00:19:54,820 --> 00:20:01,389
lot of people find this overwhelming and
annoying and it almost no easier to use

235
00:20:01,390 --> 00:20:13,310
a tool is a service that is to just
installed to yourself so it's yeah you

236
00:20:13,310 --> 00:20:17,820
know what we're doing in their global
circuit could be could be anything in

237
00:20:17,820 --> 00:20:24,470
there ok so the most popular in large
part of this case the static analysis

238
00:20:24,470 --> 00:20:29,570
tools and these are the one in either
very attractive because their tools for

239
00:20:29,570 --> 00:20:33,800
almost every language and framework to
not only other tools for Ruby this tool

240
00:20:33,800 --> 00:20:37,690
for Ruby on Rails all the other things
there's tools for all sorted development

241
00:20:37,690 --> 00:20:41,430
frameworks they know about the semantics
of the framework which helped find

242
00:20:41,430 --> 00:20:46,000
things they run on typically run source
here in a bytecode there's text tools to

243
00:20:46,000 --> 00:20:51,230
and by Anna Rachele so there's a whole
variety of tools for different spaces

244
00:20:51,230 --> 00:20:56,890
there the simplest of all that kind of
tools to use could you don't have to run

245
00:20:56,890 --> 00:21:00,330
the program so you don't need input
dataset you don't need installation

246
00:21:00,330 --> 00:21:04,510
you'll need execute the program doesn't
even have to fully built properly to run

247
00:21:04,510 --> 00:21:09,450
the tools for their their valuable that
way there are some tools that require

248
00:21:09,450 --> 00:21:13,700
code to fully build and that's actually
a very legitimate and useful thing and

249
00:21:13,700 --> 00:21:21,580
I'll tell show you why these tools are
surprisingly big and hard to install the

250
00:21:21,580 --> 00:21:24,570
you know I've seen tools in the

251
00:21:24,570 --> 00:21:30,000
210 megabyte download range for the
toolbar note in there and they take even

252
00:21:30,000 --> 00:21:35,909
more space when they're there they have
a turn of options you know there's a

253
00:21:35,909 --> 00:21:37,970
long time ago

254
00:21:37,970 --> 00:21:44,799
cats don't have options he got really
tired of the cat command got something

255
00:21:44,799 --> 00:21:46,600
like 75 options

256
00:21:46,600 --> 00:21:51,820
single letters for that so these these
programs are more complicated so if you

257
00:21:51,820 --> 00:21:56,980
don't set the options right you to get
overwhelmed with irrelevant reports or

258
00:21:56,980 --> 00:22:01,399
you just get too few to be useful so and
every tool gives you different reports

259
00:22:01,399 --> 00:22:07,580
in a different format some some of them
generously saying many of our friends

260
00:22:07,580 --> 00:22:12,070
like these results to CWE notation seek
at least compared across tools lot of

261
00:22:12,070 --> 00:22:19,658
tools don't and some tools are really
fast and some tools are really deep and

262
00:22:19,659 --> 00:22:24,179
some tools are tunable you can kind of
pick what part of the space you want and

263
00:22:24,179 --> 00:22:30,539
if you are sound but they're really slow
and they're very specialized and so but

264
00:22:30,539 --> 00:22:36,429
you gotta pick somewhere in that you
gotta pick what you want their so and if

265
00:22:36,429 --> 00:22:44,210
you pick one you lose some of the other
so that's and and you know like a verity

266
00:22:44,210 --> 00:22:48,759
of course has made their business model
under Tools being fast as they know

267
00:22:48,759 --> 00:22:54,190
their tools aren't fast nobody will run
them and so no comment about what that

268
00:22:54,190 --> 00:23:01,240
implies ok so when you go to the
software assurance meetings and there's

269
00:23:01,240 --> 00:23:04,190
people who meet all the time to talk
about software assurance out there

270
00:23:04,190 --> 00:23:11,080
people interested insurance in the stock
for supply chain problems all US

271
00:23:11,080 --> 00:23:15,070
interests you hear the song over and
over again that different tools are good

272
00:23:15,070 --> 00:23:20,590
at different things so running a single
tool is really limited limiting and the

273
00:23:20,590 --> 00:23:25,049
country commercial vendors don't want
you to know don't want you to think that

274
00:23:25,049 --> 00:23:29,600
there truly is the best but what we see
again and again in the studies that

275
00:23:29,600 --> 00:23:31,570
compare tools more about that

276
00:23:31,570 --> 00:23:36,550
in a little bit how to do a study that
compares tools that the problem and

277
00:23:36,550 --> 00:23:41,629
maybe not the way you're thinking it
comes up the different tools I think

278
00:23:41,630 --> 00:23:42,770
we're good at different things

279
00:23:42,770 --> 00:23:48,100
ok so but and then we have a lot of
dynamic tool that Emma code analysis

280
00:23:48,100 --> 00:23:52,409
tools things a check for memory errors
and taint analysis and things like that

281
00:23:52,410 --> 00:23:58,140
these are very useful interesting tools
they do require an execution environment

282
00:23:58,140 --> 00:24:03,290
representative data you're only gonna
test what you exercise any schools tend

283
00:24:03,290 --> 00:24:07,290
to be unfortunately slows discourages
many people from running I'm but they

284
00:24:07,290 --> 00:24:11,129
can be really really good so they're
really really good to get the patient

285
00:24:11,130 --> 00:24:14,570
and then there's dynamic testing tools
with a million tools that will hammer on

286
00:24:14,570 --> 00:24:18,960
your website and look for your your web
server being installed right and your

287
00:24:18,960 --> 00:24:22,620
webpages being formatted right you're
not not allowing redirection and you're

288
00:24:22,620 --> 00:24:27,379
not allowing very kind of privileges and
things like that happen and easy to

289
00:24:27,380 --> 00:24:31,340
complete client-server environment to
work out well so there you have a

290
00:24:31,340 --> 00:24:36,490
different more difficult installation
process ok so not cool

291
00:24:36,490 --> 00:24:40,520
ok in the real world there's a lot of
resistance to running even the most

292
00:24:40,520 --> 00:24:46,320
basic of tool and and there's there's a
bunch of companies saying you know why

293
00:24:46,320 --> 00:24:49,830
don't you you know you should be you
should be doing in depth code analysis

294
00:24:49,830 --> 00:24:54,439
we can't do it just run a tool we can't
do it

295
00:24:54,440 --> 00:24:59,010
ok why not well commercial tools are
expensive and hard to install yet to

296
00:24:59,010 --> 00:25:02,690
keep up-to-date reports are not easy to
understand we have to train all our

297
00:25:02,690 --> 00:25:06,450
users on how to understand this report
we don't know what the tool for telling

298
00:25:06,450 --> 00:25:12,550
them to get in the options set right is
difficult if you try to fire about to

299
00:25:12,550 --> 00:25:16,639
land a legacy code base you get the
number reports proportional to the

300
00:25:16,640 --> 00:25:22,570
number of lines of code anybody ever
taken a legacy code turned on all the

301
00:25:22,570 --> 00:25:25,810
warnings in their compiler

302
00:25:25,810 --> 00:25:30,440
people laughing this shit that should
not be a funny thing right but so you

303
00:25:30,440 --> 00:25:35,320
can think of these tools as the compiler
warning from steroid pack compilers are

304
00:25:35,320 --> 00:25:38,909
getting better and better and better and
finding more and more these things these

305
00:25:38,910 --> 00:25:42,910
things are being integrated compilers
and we had our compilers were good

306
00:25:42,910 --> 00:25:44,850
enough we actually wouldn't need

307
00:25:44,850 --> 00:25:50,830
cool if they were you know if we weren't
worried about cogeneration is much more

308
00:25:50,830 --> 00:25:56,590
worried about code quality so so running
it on legacy code bases is is it a

309
00:25:56,590 --> 00:26:00,350
problem let me tell you something we did
on her own project and I i said i was

310
00:26:00,350 --> 00:26:06,330
talking to a group of software testing
executives and managers at a at a

311
00:26:06,330 --> 00:26:10,360
different kind of forum and I and it
said well how can we deal with this

312
00:26:10,360 --> 00:26:14,189
problem I said well what we did not
project was that we turned on all the

313
00:26:14,190 --> 00:26:18,810
warnings and the requirement was every
time you make a commit you have to have

314
00:26:18,810 --> 00:26:23,649
decreased the number of warnings by at
least one that's it so you know there

315
00:26:23,650 --> 00:26:27,010
were warnings your system will be
monotonically decreasing and for active

316
00:26:27,010 --> 00:26:32,110
code files you get and programmers treat
warnings like potato chips you cannot

317
00:26:32,110 --> 00:26:36,169
eat just one when you fix a warning of
the program we go out for another one

318
00:26:36,170 --> 00:26:40,700
and you tend to get at ten to twenty or
thirty and gets bored and says dam not

319
00:26:40,700 --> 00:26:45,870
commit the file if you're dealing with a
legacy code base and you can't shut down

320
00:26:45,870 --> 00:26:49,780
your development you just say make
whatever warning from untimely

321
00:26:49,780 --> 00:26:53,950
decreasing it easy to build some scripts
that monitor that and yell at the

322
00:26:53,950 --> 00:26:58,540
programmer if they don't do it no no big
deal and you can convert over a year

323
00:26:58,540 --> 00:27:02,440
into a really clean code base so there
are methodologies for cleaning things up

324
00:27:02,440 --> 00:27:11,040
and your security flaws slowdown
software delivery so far from editors

325
00:27:11,040 --> 00:27:16,320
completo want them reported because they
won't deliver their software and if they

326
00:27:16,320 --> 00:27:19,770
don't deliver the top of the get fired
if they deliver the top of the get happy

327
00:27:19,770 --> 00:27:35,850
everybody gets hacked there's an
interesting

328
00:27:35,850 --> 00:27:40,949
ok so are people not running tools
because they don't know they will get

329
00:27:40,950 --> 00:27:50,450
sued over you know we've seen some of
that and but there's a hot there is

330
00:27:50,450 --> 00:27:55,309
going to be increasing awareness of due
diligence and and so you know the very

331
00:27:55,309 --> 00:28:00,678
first time we did in depth analysis with
back in the nineties of the other copy

332
00:28:00,679 --> 00:28:05,190
of the Condor system in Wisconsin this
batch scheduling system that's used in

333
00:28:05,190 --> 00:28:07,880
10 2000 sites around the world

334
00:28:07,880 --> 00:28:15,620
Pixar uses it ever I mean computer 44
doing processor design it did the Higgs

335
00:28:15,620 --> 00:28:20,379
boson data analysis and means science
e-science runs on this scheduling system

336
00:28:20,380 --> 00:28:26,510
and Android 11 who's my colleague many
years also very good friend you he said

337
00:28:26,510 --> 00:28:33,559
well I don't look that I said look at
well I said I prime so if the attitude

338
00:28:33,559 --> 00:28:37,110
should be that if somebody's not
evaluating their code of reporting

339
00:28:37,110 --> 00:28:38,320
vulnerabilities

340
00:28:38,320 --> 00:28:41,840
either in our reporting to the not
looking and that's not good are they

341
00:28:41,840 --> 00:28:46,510
looking and finding a not telling you
that's not good and I and i said im so

342
00:28:46,510 --> 00:28:50,929
what it turned out for Marrone what he's
got an enormous amount of credit as

343
00:28:50,929 --> 00:28:56,500
running a active security program and
every time we report things people

344
00:28:56,500 --> 00:29:00,320
actually feel some kind of relief that
the city is being found it fixed so he's

345
00:29:00,320 --> 00:29:04,320
actually professionally benefited and
the National Science Foundation which is

346
00:29:04,320 --> 00:29:08,899
one of its primary funder is enormously
happy that this was going on and I think

347
00:29:08,900 --> 00:29:12,679
the same thing happens in the real world
you know we're relieved we see things

348
00:29:12,679 --> 00:29:18,409
fixed so but I don't you know I think I
think that's a problem but it's a fading

349
00:29:18,409 --> 00:29:23,170
problem

350
00:29:23,170 --> 00:29:40,920
well it's a question is why should you
fix things are false positive this is

351
00:29:40,920 --> 00:29:45,510
the short answer questions really good
question you know there are somethings a

352
00:29:45,510 --> 00:29:52,430
tool report that are just simply wrong
and they're not there in no way a flaw

353
00:29:52,430 --> 00:29:56,730
in the code the tools because of the
limitations of static analysis either

354
00:29:56,730 --> 00:30:01,220
the fundamental limitations and static
analysis or code complexity that the

355
00:30:01,220 --> 00:30:05,990
tool tool stopped short of a deep
analysis on there just to get it wrong

356
00:30:05,990 --> 00:30:11,780
and mostly tools have ways annotating
the code saying believe me that point

357
00:30:11,780 --> 00:30:16,780
never know and so and that's it and
that's not a bad exercise putting a

358
00:30:16,780 --> 00:30:21,320
search in your code that's like putting
practice and to to say to say that you

359
00:30:21,320 --> 00:30:25,370
know certain behaviors are there that's
not a bad response to it there are other

360
00:30:25,370 --> 00:30:29,709
ones that are minor flaws this flow will
only allow me to put a little blue dot

361
00:30:29,710 --> 00:30:33,220
up in the top left hand corner the
screen that nobody ever notice but

362
00:30:33,220 --> 00:30:37,860
combined with that blue dot and
something else I might be able to build

363
00:30:37,860 --> 00:30:43,209
an exploit you can expect I've watched
the people who do it for our government

364
00:30:43,210 --> 00:30:50,070
to exploits and they say well I can only
own bit 17 and 18 of the return address

365
00:30:50,070 --> 00:30:55,179
of this function the next week later say
we have full control the system for a

366
00:30:55,180 --> 00:30:59,260
full and and and you listen to me they
would do this and we did this we do this

367
00:30:59,260 --> 00:31:01,720
we do this and there was another problem
were here

368
00:31:01,720 --> 00:31:07,110
a combined together I somehow got enough
bit constructed it so you know you want

369
00:31:07,110 --> 00:31:07,389
it

370
00:31:07,390 --> 00:31:16,140
above and beyond all of this its
economic issue we can't fix everything

371
00:31:16,140 --> 00:31:20,290
we gotta fix the most important things
first and somehow we really would like

372
00:31:20,290 --> 00:31:24,190
to tools to prioritize what they tell us
and hope the priorities are in some

373
00:31:24,190 --> 00:31:53,970
reality reflecting the seriousness of
the vulnerabilities so yes

374
00:31:53,970 --> 00:32:01,990
management education for managers can
know how to make a decision of whether

375
00:32:01,990 --> 00:32:03,950
security vulnerability should stop it

376
00:32:03,950 --> 00:32:07,730
release or not and and the answer is
absolutely we should we should have that

377
00:32:07,730 --> 00:32:12,190
I'm focusing on the programmers right
here and actually if you look at my to

378
00:32:12,190 --> 00:32:18,110
do list there is there is it took the
tutorial chap with tutorial sections

379
00:32:18,110 --> 00:32:23,570
quite prolifically and the one that
don't have is the executive manager

380
00:32:23,570 --> 00:32:30,929
briefing that's on my list of things to
have things to do in my free time or

381
00:32:30,930 --> 00:32:35,020
actually the upcoming academic year I
hope to put together a briefing that's

382
00:32:35,020 --> 00:32:38,389
like that I don't know exactly what I'm
gonna tell them yet so if you have

383
00:32:38,390 --> 00:32:45,690
thought that I know we have to do when I
totally agree with that ok so the

384
00:32:45,690 --> 00:32:48,890
takeaway this is a rather self-serving
one can see me segue into the swamp

385
00:32:48,890 --> 00:32:57,210
project you know let's try to make tools
easier to run to users and provide help

386
00:32:57,210 --> 00:33:02,210
to tool users and also to the tool
builders and the tool builders of the

387
00:33:02,210 --> 00:33:05,790
people just coming up with assistant
professor trying to come up with the

388
00:33:05,790 --> 00:33:10,490
next cool idea of how to find problems
in code or whether it's a startup

389
00:33:10,490 --> 00:33:12,930
company trying to do this there's a lot
of things

390
00:33:12,930 --> 00:33:17,650
advantages the big guys have that the
little guys don't have and I'll try to

391
00:33:17,650 --> 00:33:22,090
talk about that okay so let me talk a
little bit about the Swan project what

392
00:33:22,090 --> 00:33:26,919
we've been working on and and this will
be his kind of middle of talking to get

393
00:33:26,920 --> 00:33:29,810
some fun coach stuff at the end of you
stick around

394
00:33:29,810 --> 00:33:36,519
yes sir

395
00:33:36,519 --> 00:33:48,169
oh you're so should we be signed
languages that programs that don't have

396
00:33:48,169 --> 00:33:50,889
a lot of these problems and I'm gonna
talk about later on the Internet

397
00:33:50,889 --> 00:33:55,619
absolutely yes it let me let me in and
there's so many cool cute languages out

398
00:33:55,619 --> 00:34:00,259
there you go and things like that are
just really fun and we should really be

399
00:34:00,259 --> 00:34:04,399
using some really fun new language of
out there and I'm really excited about a

400
00:34:04,399 --> 00:34:09,918
lot of them but I give away something
it's a little later but I think we can

401
00:34:09,918 --> 00:34:15,118
do something in season nineteen
seventies language I mean I was so

402
00:34:15,119 --> 00:34:22,419
excited in 1972 we got there we got to
version 7 tape from Bell Labs and we

403
00:34:22,418 --> 00:34:28,038
have stalled it on her 88th and it was
just really fun and mind blowing at the

404
00:34:28,039 --> 00:34:35,869
time so and that's still probably the
same day language but why not have those

405
00:34:35,869 --> 00:34:38,119
who are working tools when I have tools

406
00:34:38,119 --> 00:34:44,579
tell us about what parts of the code
they cannot analyze properly and have

407
00:34:44,579 --> 00:34:50,579
you clean up your and clean up your code
so even if you can write one of these

408
00:34:50,579 --> 00:34:54,230
horrible languages you the right in a
dialect of those people talk about

409
00:34:54,230 --> 00:34:58,380
secure subsets there's good work in that
people talk about that one not have

410
00:34:58,380 --> 00:35:02,920
tools that tell us about that nor code
so we can modify our existing code

411
00:35:02,920 --> 00:35:08,220
converge re just encode and decode at
least can be analyzed well to the tools

412
00:35:08,220 --> 00:35:12,828
can help us so that's that's that's the
flip side of I would prefer what you

413
00:35:12,829 --> 00:35:20,900
suggested but there's a flip side of
that legacy C and C++ code that's ok so

414
00:35:20,900 --> 00:35:25,660
DHS gave us a bucket load of money to
try to help improve software assurance

415
00:35:25,660 --> 00:35:31,868
so it's basically an open facility that
we can upload your coding it assessed by

416
00:35:31,869 --> 00:35:39,230
a whole bunch of good tool and so and so
it's it's it's mainly the University

417
00:35:39,230 --> 00:35:44,369
Wisconsin mortgage Institute one of our
research institute where Livni of Condor

418
00:35:44,369 --> 00:35:48,710
fame is is our project director and
chief scientist Indiana University von

419
00:35:48,710 --> 00:35:49,640
welch's are

420
00:35:49,640 --> 00:35:54,529
chief security officer and our identity
management group is that is too bad

421
00:35:54,529 --> 00:36:03,130
these groups at Indiana University
Illinois Urbana Champaign and so we're

422
00:36:03,130 --> 00:36:07,369
actually standing up and operational
center where you can comment

423
00:36:07,369 --> 00:36:13,710
upload your coat and run it and get
access so I wrote it looks like about

424
00:36:13,710 --> 00:36:18,010
building communities and so the first
thing we're trying to do is try to raise

425
00:36:18,010 --> 00:36:22,210
awareness and get people interested in
software assurance they wanna upload

426
00:36:22,210 --> 00:36:26,480
their code so that people who want to
use a technology people to practice to

427
00:36:26,480 --> 00:36:30,839
technology can both come together and
benefit from each other and so so for

428
00:36:30,839 --> 00:36:32,500
software developers

429
00:36:32,500 --> 00:36:37,059
it's a place to easily access these
assessment tools where you don't have to

430
00:36:37,059 --> 00:36:40,809
worry about installing and maintaining
or buying or tuning or adjusting or

431
00:36:40,809 --> 00:36:44,750
anything about it you can just get your
coat up there were told developers we

432
00:36:44,750 --> 00:36:49,099
want to provide a lot of the automation
infrastructure you would need to make

433
00:36:49,099 --> 00:36:52,380
your tool run well and I'll tell you
more about that some detail because the

434
00:36:52,380 --> 00:36:56,269
more technical audience but there are
things that companies like a parody and

435
00:36:56,269 --> 00:37:00,479
fortify have spent a lot of time and
money doing that a small group can't

436
00:37:00,480 --> 00:37:02,509
afford to do and where we've done that

437
00:37:02,509 --> 00:37:06,579
free software and giving it away so you
can you can make you told me to use I'll

438
00:37:06,579 --> 00:37:11,690
tell you about that the researchers we
have a ton of assessment data and if you

439
00:37:11,690 --> 00:37:15,900
choose to make you know that people
researchers can study quantitatively if

440
00:37:15,900 --> 00:37:18,900
you choose to make your raw data
publicly you doing open source software

441
00:37:18,900 --> 00:37:24,829
you can add study the software assurance
process so there's a lot of data here as

442
00:37:24,829 --> 00:37:28,940
the longer the swamp runs the more day
to accumulate as software stays there

443
00:37:28,940 --> 00:37:34,299
over many revisions we accumulate to
offer insurance data that parallels the

444
00:37:34,299 --> 00:37:40,049
update in the in the in the various
repositories says a lot of stuff you can

445
00:37:40,049 --> 00:37:45,700
study that interesting and for teachers
we run classes we've had we've had

446
00:37:45,700 --> 00:37:49,549
several university classes use it as as
a vehicle

447
00:37:49,549 --> 00:37:52,900
intro classes require it

448
00:37:52,900 --> 00:37:56,789
security classes to graduate security
class was using it we've had a high

449
00:37:56,789 --> 00:38:00,750
school programming class use it was kind
of fun you know where you can't you

450
00:38:00,750 --> 00:38:03,050
can't turn you go into the instructor
into the

451
00:38:03,050 --> 00:38:07,500
intact clean by these three tools or
something like that so so it's it's we

452
00:38:07,500 --> 00:38:15,840
have a variety of communities or that
are using it so the goal is you can

453
00:38:15,840 --> 00:38:22,420
upload your software package easy easily
add tools easily absorb the sounds like

454
00:38:22,420 --> 00:38:29,380
marketing and I really hate that really
important is that you can access

455
00:38:29,380 --> 00:38:35,670
multiple tools and we benefit from
Sakura decisions Kodiaks tool we did

456
00:38:35,670 --> 00:38:38,770
write that we're not writing tools
rebuilding the infrastructure to make

457
00:38:38,770 --> 00:38:43,620
all this work and that's surprising
amount of work so there's a tool out

458
00:38:43,620 --> 00:38:47,250
there the several but when we were
working with we like brings together the

459
00:38:47,250 --> 00:38:50,570
output from multiple tools and gives it
to you in a single unified format

460
00:38:50,570 --> 00:38:56,060
unified labeled and a nice viewer so you
don't have to understand the output in

461
00:38:56,060 --> 00:38:59,930
multiple tools you can look at one way
though we actually supports several

462
00:38:59,930 --> 00:39:08,950
results you're so we're not use that we
have a lot of software controls that you

463
00:39:08,950 --> 00:39:13,350
can make when you define a project you
can say you can see my software and the

464
00:39:13,350 --> 00:39:17,430
database you can say everybody or nobody
or just my friend who can see who can

465
00:39:17,430 --> 00:39:21,960
see the assessment results same kind of
thing so so you can you can decide how

466
00:39:21,960 --> 00:39:25,510
public you wanna make your results and
then of course we have all this data

467
00:39:25,510 --> 00:39:31,070
that were here people are trying to
study ok so we want the new be that the

468
00:39:31,070 --> 00:39:35,590
unexperienced program this this first
bullet is my goal for almost any

469
00:39:35,590 --> 00:39:40,900
software I wanna built I want software
that helps accelerate the beginner up to

470
00:39:40,900 --> 00:39:46,190
a higher levels they're doing better
stuff but I want experience people also

471
00:39:46,190 --> 00:39:51,330
to be able to get their work done and I
don't they should find the stuff they

472
00:39:51,330 --> 00:39:56,430
know how to order do go faster and less
whenever he said so

473
00:39:56,430 --> 00:40:01,240
ok so we have this term called
continuous insurance and most you know

474
00:40:01,240 --> 00:40:05,899
about continuous integration continuous
integration is the process of consulate

475
00:40:05,900 --> 00:40:10,440
doing billed as you do commits doing
building and testing as you go along to

476
00:40:10,440 --> 00:40:14,150
validate your software in the
development process continuous sure it

477
00:40:14,150 --> 00:40:16,369
is a natural extension of it

478
00:40:16,369 --> 00:40:20,509
it just means any time you're going to
be doing an insurance activity like

479
00:40:20,509 --> 00:40:24,569
running these tools every time you do it
up into the software or any of its

480
00:40:24,569 --> 00:40:29,460
dependencies or any or the tulips are
the tools that are using anything gets

481
00:40:29,460 --> 00:40:33,029
updated to trigger a new assessment so
we should be so that should be going

482
00:40:33,029 --> 00:40:38,059
continuously so that's that's what
continues assurances anybody know we we

483
00:40:38,059 --> 00:40:44,190
thought we introduce this term but it
turned out I found this I love it when

484
00:40:44,190 --> 00:40:47,490
I'm doing research and I think there's
something bring you a discover there's a

485
00:40:47,490 --> 00:40:57,669
classic source for the classic source
for this term is in the Orange Book and

486
00:40:57,670 --> 00:41:02,269
and people people derive the Orange Book
but it was a fascinating informative

487
00:41:02,269 --> 00:41:06,808
interesting document it it's it's a
little dated and naive from our point of

488
00:41:06,809 --> 00:41:09,240
view but there are some really really
good idea

489
00:41:09,240 --> 00:41:14,479
important concepts and the orange book
about you know how to develop secure

490
00:41:14,480 --> 00:41:18,720
systems and designing higher he's at
what level security guards its there's

491
00:41:18,720 --> 00:41:21,419
some good I there's some good stuff in
there I mean I wouldn't want to base my

492
00:41:21,420 --> 00:41:23,339
life on that book but it's pretty good

493
00:41:23,339 --> 00:41:29,420
ok so what we want to do is to get
people fixing stuff Studer because you

494
00:41:29,420 --> 00:41:34,249
know if this is a ballistic right the
suit earlier that you make these fixes

495
00:41:34,249 --> 00:41:37,288
earlier detect these problems the
cheaper they are to fix it won't try to

496
00:41:37,289 --> 00:41:40,869
fix them as early as possible this
really good data out there what's the

497
00:41:40,869 --> 00:41:45,299
cost for fixing a bug or security flaw
at different stages in the process

498
00:41:45,299 --> 00:41:50,509
you know anywhere from you know why
you're typing it to you know in testing

499
00:41:50,509 --> 00:41:56,730
phases to in released checking it
opposed to release and in so I i dont

500
00:41:56,730 --> 00:42:00,680
have to reproduce that so we want to try
to make it really easy to do this early

501
00:42:00,680 --> 00:42:05,019
as possible and we won't try to make a
cultural change remember that we're

502
00:42:05,019 --> 00:42:09,720
talking to not security people all the
time we're trying to talk to the people

503
00:42:09,720 --> 00:42:14,160
developing the software out in the world
and not every organization is like a

504
00:42:14,160 --> 00:42:18,569
Google or Microsoft that have
fundamental security cultures built into

505
00:42:18,569 --> 00:42:23,999
the companies and in fact most companies
are not like that I had a very long

506
00:42:23,999 --> 00:42:29,680
interesting discussion with the C at the
new with the CIO and new CISO

507
00:42:29,680 --> 00:42:35,319
new CIO who just hired a CISO at Target
to target had these interesting problem

508
00:42:35,320 --> 00:42:43,700
with this interesting event I went to
buy some cell phones for my partner's

509
00:42:43,700 --> 00:42:48,339
daughter and we went to Target and they
had a great deal

510
00:42:48,340 --> 00:42:54,670
five bucks put them on my contract for
new iPhones ok so we went and bought it

511
00:42:54,670 --> 00:42:58,570
so the guy went to the Tourmalet
targeted like an activated for you and

512
00:42:58,570 --> 00:43:05,200
it's obviously some software layer on
top of all the eighteen teen Verizon

513
00:43:05,200 --> 00:43:11,220
everybody else t-mobile stuff and so he
says well I need I need your and your

514
00:43:11,220 --> 00:43:17,330
phone number and password for your AT&T
account I need your I need your less for

515
00:43:17,330 --> 00:43:24,590
his social security number and zip code
WTF except I spell that the acronyms and

516
00:43:24,590 --> 00:43:29,300
end it and I go but you shouldn't need
these deficit well he doesn't trust us

517
00:43:29,300 --> 00:43:34,410
why should I trust you and here's the
turmoil sitting here in the walkway with

518
00:43:34,410 --> 00:43:38,690
people walking by and anybody can look
at the screen the not blacking out field

519
00:43:38,690 --> 00:43:45,840
and I guess I'm just appalled at this at
this lack of privacy and target had

520
00:43:45,840 --> 00:43:51,250
strike send email off this new CIO who's
just just fired their previous one

521
00:43:51,250 --> 00:43:55,160
because of all the credit card and
actually got the guy on the phone and I

522
00:43:55,160 --> 00:43:59,420
am talking with him on a conference call
with CISO and say you guys should really

523
00:43:59,420 --> 00:44:04,480
fix these thing and and you obviously
have some for layering problems and and

524
00:44:04,480 --> 00:44:08,430
information sharing problems things like
that is it don't worry we'll fix it

525
00:44:08,430 --> 00:44:13,569
we're target will fix it and go well you
know what you gonna do to validate this

526
00:44:13,570 --> 00:44:20,450
and so and so in this is target had just
gone through this guy just taken a seat

527
00:44:20,450 --> 00:44:24,270
it was still warm from the body of the
person that was fired and killed a total

528
00:44:24,270 --> 00:44:27,370
targeted with them and so and so

529
00:44:27,370 --> 00:44:32,000
organization at that level which are
confronted with things that are fairly

530
00:44:32,000 --> 00:44:39,890
substantive and have just gone through a
trauma dealer not responding so he might

531
00:44:39,890 --> 00:44:43,009
work stoppage computer security
researcher go right video gave her some

532
00:44:43,010 --> 00:45:04,580
because nobody cares no yes sir

533
00:45:04,580 --> 00:45:12,220
absolute so CISO 2004 often are often
not aware you're absolutely right but

534
00:45:12,220 --> 00:45:18,160
here they had some smartass professor on
the phone you know and who is telling

535
00:45:18,160 --> 00:45:24,759
them in doing a very very
straightforward presentation you know

536
00:45:24,760 --> 00:45:30,770
and these and these people were
sensitized security threat its assembly

537
00:45:30,770 --> 00:45:34,560
was actually walking in through it step
by step of what the issues were in may

538
00:45:34,560 --> 00:45:41,430
be made it impossible remediation and
their biggest fear was publicity their

539
00:45:41,430 --> 00:45:49,240
fear was not the technical problem
biggest fear with the publicity so yes

540
00:45:49,240 --> 00:46:33,770
sir yes

541
00:46:33,770 --> 00:46:43,680
Japanese car manufacturing program has
now been adopted this offer well that

542
00:46:43,680 --> 00:46:47,490
took a surprisingly long time for
american car manufacturers to adopt

543
00:46:47,490 --> 00:46:51,560
those practices but now they do and it's
really impressive how much influence

544
00:46:51,560 --> 00:46:56,350
that at I was just at the Ford F 150
plant this last summer touring that

545
00:46:56,350 --> 00:46:59,960
fantastic tour by the way if you're if
you're into any

546
00:46:59,960 --> 00:47:05,880
pretty machines at all just how things
work it's really good tour they do a

547
00:47:05,880 --> 00:47:06,730
good job

548
00:47:06,730 --> 00:47:15,130
why don't we do it in software boy i
mean we're we're not even getting people

549
00:47:15,130 --> 00:47:20,260
to do bad security practice trying to
get him to thorough complete end-to-end

550
00:47:20,260 --> 00:47:31,340
security practices i think is even
harder that I don't know I know I dunno

551
00:47:31,340 --> 00:47:48,900
whenever when we hear about these great
exploits against cars here we've seen

552
00:47:48,900 --> 00:47:55,640
well yet so so so the software supply
chain is a very serious issue in fact

553
00:47:55,640 --> 00:47:59,460
there are tools out there that will take
your program especially in Java and

554
00:47:59,460 --> 00:48:04,470
actually build dependency model and then
give you summaries of known

555
00:48:04,470 --> 00:48:08,450
vulnerabilities down your dependency so
people are very worried about the

556
00:48:08,450 --> 00:48:14,370
software supply chain CRM resource
management in the software world that's

557
00:48:14,370 --> 00:48:19,870
an area that people are concerned about
but you like anything getting people to

558
00:48:19,870 --> 00:48:24,310
globally embrace that we're having a
hard time people value in the software

559
00:48:24,310 --> 00:48:28,290
they write little of value in the
software that the dependent upon they

560
00:48:28,290 --> 00:48:33,009
don't even know it look at OpenSSL
people had OpenSSL places they had no

561
00:48:33,010 --> 00:48:38,470
idea so trying to figure out what your
dependents chain is is actually a pretty

562
00:48:38,470 --> 00:48:48,899
challenging

563
00:48:48,900 --> 00:48:53,680
companies really nice job building tools
for the softer dependence in the Java

564
00:48:53,680 --> 00:48:57,870
spaces so to type and we're actually
working in a great city type tools in so

565
00:48:57,870 --> 00:49:03,009
we'll build will build a supply chain
model of that either report known

566
00:49:03,010 --> 00:49:07,350
vulnerabilities are actually take swamp
data that we've done for those various

567
00:49:07,350 --> 00:49:11,000
components and integrated all up
together so yeah absolutely supply chain

568
00:49:11,000 --> 00:49:15,090
model is something we're very sensitive
about that's the fifth community and I

569
00:49:15,090 --> 00:49:20,160
talked about to offer developers and
tool developers and research software

570
00:49:20,160 --> 00:49:23,779
process researchers and educators the
fifth this community I didn't mention

571
00:49:23,780 --> 00:49:34,470
was with the supply chain management
community so if I was going to fall

572
00:49:34,470 --> 00:49:41,060
ok so currently in the swamp we have 16
tools installed and running C C++ Java

573
00:49:41,060 --> 00:49:45,040
Python Ruby and Android I do and write
separately cuz your tools are

574
00:49:45,040 --> 00:49:49,259
specialized for that all sorts of magic
that happens the Android app permissions

575
00:49:49,260 --> 00:49:53,880
and manifest things like that sort of
significant later there we have we have

576
00:49:53,880 --> 00:49:58,690
a commercial one commercial tool
currently installed and momentarily with

577
00:49:58,690 --> 00:50:01,440
an extra least we have two more
commercial tools coming out that you can

578
00:50:01,440 --> 00:50:02,289
use for free

579
00:50:02,289 --> 00:50:07,109
open source software wire vendors doing
this it's a good question but they're

580
00:50:07,109 --> 00:50:07,679
out there

581
00:50:07,679 --> 00:50:12,759
Parasoft gate S&C test lot of open
source tools coming up red lizard great

582
00:50:12,759 --> 00:50:14,229
company down in Australia

583
00:50:14,229 --> 00:50:19,948
really good code analysis engines in
there are gonna tool around attack many

584
00:50:19,949 --> 00:50:26,130
you know that I'm wraps my colleagues
he's principal their coach sonar it

585
00:50:26,130 --> 00:50:31,169
coming out and then some new new Rubi
tools are coming out where we already

586
00:50:31,169 --> 00:50:36,058
have to mention faith we already have
tools from places like we have Google's

587
00:50:36,059 --> 00:50:41,299
open-source tools were being Facebook
and fair tool gasoline diesel and coach

588
00:50:41,299 --> 00:50:46,538
never forgetting PHP and CSS tools
coming in JavaScript tools coming in

589
00:50:46,539 --> 00:50:53,769
there these are all free to use if you
have for open source project if your

590
00:50:53,769 --> 00:51:00,549
commercial project you upload your code
you you're limited to certain tools all

591
00:51:00,549 --> 00:51:04,650
the open source tools and I think one of
them one of the commercial tools allows

592
00:51:04,650 --> 00:51:08,519
it but if you're an open source project
then you can use any of these tools for

593
00:51:08,519 --> 00:51:13,118
free and so so you up on your code it
goes

594
00:51:13,119 --> 00:51:19,489
has to build and by the way I know some
people things slide anybody since me

595
00:51:19,489 --> 00:51:24,099
email you a PDF of the whole talk so you
don't have to do that I hate you know

596
00:51:24,099 --> 00:51:31,609
it's it's happy to share the secret in
here so you just check off which tools

597
00:51:31,609 --> 00:51:34,959
you want and then it runs against all
the tools are appropriate for your

598
00:51:34,959 --> 00:51:40,769
language Java tools for C C++ tools or
Ruby tools or whatever and the results

599
00:51:40,769 --> 00:51:47,749
come out in a single viewing experience
to get a raw listing or or use the

600
00:51:47,749 --> 00:51:52,439
Kodiaks tool and we hope sometime in the
current quarter and had the toy tool

601
00:51:52,439 --> 00:51:59,160
which is another alternative for viewing
integrated results

602
00:51:59,160 --> 00:52:08,810
we're not looking for you know comment
or or or copy code in the tool this

603
00:52:08,810 --> 00:52:13,700
we're looking for tools specifically for
doing static analysis for flaws in the

604
00:52:13,700 --> 00:52:24,129
code III I think their services already
on the web for doing that I know this is

605
00:52:24,130 --> 00:52:29,150
service at Berkeley and if it's still up
or not that we've used in the past but

606
00:52:29,150 --> 00:52:36,290
it's not something we've specific you
know where we have a lot of stuff to do

607
00:52:36,290 --> 00:52:40,170
and and that's that's not a quarterly
not high enough on our priority list to

608
00:52:40,170 --> 00:52:44,570
worry about it so what are the things we
were working on heavily if you on a

609
00:52:44,570 --> 00:52:49,110
vacation to streamline experience so our
users you don't have to worry about tool

610
00:52:49,110 --> 00:52:53,410
settings we've worked very hard to try
we're not worried about too long

611
00:52:53,410 --> 00:52:56,970
variable name and we're not worried
about curly brackets on the wrong line

612
00:52:56,970 --> 00:53:02,850
in an organization that has a strong
coding standard culture that's great and

613
00:53:02,850 --> 00:53:06,980
it's great that organizations of force
that but we're trying to be a neutral

614
00:53:06,980 --> 00:53:15,180
insurance facility and we're not trying
to enforce consistency in the code so we

615
00:53:15,180 --> 00:53:19,000
try to make sure that anybody uses will
get something useful out of it

616
00:53:19,000 --> 00:53:23,240
we automatically integrate into the
building that's where I spent some time

617
00:53:23,240 --> 00:53:26,839
talking about it we allow you to do
direct pulled from your repositories

618
00:53:26,840 --> 00:53:31,570
repository update the new coaching this
is part of the continued continuous

619
00:53:31,570 --> 00:53:37,280
insurance and direct exports from you I
Dec should be able to push a button when

620
00:53:37,280 --> 00:53:44,930
you're in IntelliJ or are one of the
other pick your favorite IDE got to push

621
00:53:44,930 --> 00:53:49,009
a button and the code gets uploaded the
swap and triggers a new assessment we

622
00:53:49,010 --> 00:53:54,310
wanted this the last ones kind of rough
right now cuz I had some graduate

623
00:53:54,310 --> 00:53:58,190
students not staff working on that and
they left with students graduate really

624
00:53:58,190 --> 00:54:02,470
rude of them and so we have a whole new
group of graduates coming in the fall

625
00:54:02,470 --> 00:54:08,569
that are attacking various things
including that we we have a lot of

626
00:54:08,570 --> 00:54:11,490
requests for Windows t-shirt dotnet

627
00:54:11,490 --> 00:54:15,600
and that's our next major environment
and they will start moving into Mac OS

628
00:54:15,600 --> 00:54:22,069
after that as a segue into to iOS but
that's little further down the road so

629
00:54:22,070 --> 00:54:38,110
yes sir what might those are probably
lower priority because if you just do a

630
00:54:38,110 --> 00:54:43,700
survey of which language her out there
to play we're trying to hit so but you

631
00:54:43,700 --> 00:54:51,500
know if if somebody but if somebody has
a tool for that and and and they come to

632
00:54:51,500 --> 00:54:52,560
us with a tool

633
00:54:52,560 --> 00:54:55,640
we're usually pretty about installing it
doesn't take that long to update the

634
00:54:55,640 --> 00:55:00,210
infrastructure especially for
interpreted languages that don't have

635
00:55:00,210 --> 00:55:06,570
complex build monitoring it's usually
pretty quick install a new tool so if if

636
00:55:06,570 --> 00:55:13,960
some people come to us with a tool where
are usually pretty responsive to that

637
00:55:13,960 --> 00:55:17,500
little the source doesn't have to be
open source but if you want to access to

638
00:55:17,500 --> 00:55:22,820
commercial tools our agreement with
those companies requires us requires you

639
00:55:22,820 --> 00:55:32,810
could be open source yes student
projects don't don't don't phone are not

640
00:55:32,810 --> 00:55:37,460
no issue you can run against all tools
open source is kind of a there's a

641
00:55:37,460 --> 00:55:41,869
longer more complex legal description
and open source was kinda easy short

642
00:55:41,869 --> 00:55:45,040
phrase the course of course projects
definitely fall into the category of

643
00:55:45,040 --> 00:56:06,680
running under everything

644
00:56:06,680 --> 00:56:17,870
we don't I haven't seen that explicitly
denied sexually do that but i dont

645
00:56:17,870 --> 00:56:21,920
nobody but it will set up to do that
specifically trying to do a triage kind

646
00:56:21,920 --> 00:56:29,340
of effect there so they would love to
have somebody investigate we help them

647
00:56:29,340 --> 00:56:34,320
do that in this one so if you want to do
it we'd be happy to work with you we're

648
00:56:34,320 --> 00:56:37,960
always looking we bring in lots of
partners is where we have been with

649
00:56:37,960 --> 00:57:05,260
limits like anybody

650
00:57:05,260 --> 00:57:08,850
that's interesting questions why
organizations may be commercial

651
00:57:08,850 --> 00:57:13,060
organizations maybe has about uploading
their code to this one there's there's

652
00:57:13,060 --> 00:57:16,830
several things going on versus the
things we do and then there's a new

653
00:57:16,830 --> 00:57:25,220
options coming up with your interesting
yeah we try to run environment with we

654
00:57:25,220 --> 00:57:29,109
do our we do it right we have our own
security team so we're currently doing

655
00:57:29,110 --> 00:57:33,050
evaluating our own system running your
own code for these tools were doing your

656
00:57:33,050 --> 00:57:40,310
own blue teaming every the interesting
thing is everything runs in virtual

657
00:57:40,310 --> 00:57:44,049
machines so your assessment your
application and your programs are all

658
00:57:44,050 --> 00:57:48,140
uploaded and then in order on an
assessment to a time your stuff is

659
00:57:48,140 --> 00:57:52,350
running a basic take a virtual machine
provision it with a tool provision it

660
00:57:52,350 --> 00:57:56,720
with your program we run the tools and
that virtual machine has no access

661
00:57:56,720 --> 00:58:02,220
outside of its own private network that
the assessment finishes we stop the

662
00:58:02,220 --> 00:58:07,189
virtual machine and then extract the
results so there's never any so when you

663
00:58:07,190 --> 00:58:11,430
do a build process or run a tool for
running outside code that code runs

664
00:58:11,430 --> 00:58:15,980
completely isolated so so we're doing
we're doing pretty strong isolation of

665
00:58:15,980 --> 00:58:21,350
that and so we're trying to do the
system's been designed from day would

666
00:58:21,350 --> 00:58:27,190
write strong isolation we're also
currently Annex I to producing the swap

667
00:58:27,190 --> 00:58:36,050
in a box so you can run your own swamp
and so there are problems not just with

668
00:58:36,050 --> 00:58:40,540
organizations but national boundaries me
up to move certain kinds of code places

669
00:58:40,540 --> 00:58:44,920
regulations international laws so we're
allowing will allow other people to run

670
00:58:44,920 --> 00:58:49,580
their own independence wants and if they
want to do that we're also going to

671
00:58:49,580 --> 00:58:55,069
bring up a high sides want so for
government users who can't cross the air

672
00:58:55,070 --> 00:58:59,150
gap and that will run a different space
and I imagine other countries may want

673
00:58:59,150 --> 00:59:03,090
to do the same thing so so we're trying
there's a lot of possibilities there

674
00:59:03,090 --> 00:59:09,170
what is I think we're doing a pretty
good job you know we're gonna have flaws

675
00:59:09,170 --> 00:59:12,340
like anybody else but there's also
opportunities for you to run your own

676
00:59:12,340 --> 00:59:14,750
coming up

677
00:59:14,750 --> 00:59:26,540
yes absolutely runner own tools against
our own code absolutely

678
00:59:26,540 --> 00:59:32,759
absolutely open sign up can I didn't put
the URL on their continuous assurance

679
00:59:32,760 --> 00:59:37,970
toward continuous assurance that our
school swap project I'm sorry to let me

680
00:59:37,970 --> 00:59:43,370
move on okay so this is this is the
cartoon form you know you have a budget

681
00:59:43,370 --> 00:59:46,560
packages like a bunch of tools you
select which platforms because there's

682
00:59:46,560 --> 00:59:51,740
lots of different Linux and you know
this Android and Windows and which dive

683
00:59:51,740 --> 00:59:57,680
interpreter you you tell us want to run
the assessment to get out put the pic

684
00:59:57,680 --> 01:00:02,190
which results fewer you want and you
view the results that's the cartoon for

685
01:00:02,190 --> 01:00:08,560
and everything and this this completely
runs in a virtual machine here the

686
01:00:08,560 --> 01:00:12,870
assessment part runs in a virtual
machine and it has no access to any East

687
01:00:12,870 --> 01:00:16,670
anything set its own local virtual
machine storage that's no file systems

688
01:00:16,670 --> 01:00:21,850
mounted to get provision run tests and
then we extract from the virtual machine

689
01:00:21,850 --> 01:00:28,310
the results and that's that's one of our
isolation capability ok so the

690
01:00:28,310 --> 01:00:30,509
automation that we've worked on pretty
hard

691
01:00:30,510 --> 01:00:36,730
is trying to apply to let us offer
package will try to make it really

692
01:00:36,730 --> 01:00:45,740
simple okay and so let me get pass just
jump into so what makes it hard to apply

693
01:00:45,740 --> 01:00:52,279
a tool naively 2 starter package so
here's here's our basic simple tool one

694
01:00:52,280 --> 01:00:54,650
source file

695
01:00:54,650 --> 01:01:01,540
Norma gets compiled executable and it's
only go GCC food at sea for example and

696
01:01:01,540 --> 01:01:06,710
when you wanna run the tool use a tool
to DOTC with similar command line and

697
01:01:06,710 --> 01:01:10,420
you get the tool out but that's the
naive view of what it will do that now

698
01:01:10,420 --> 01:01:15,530
unfortunately real software is a bit
more complex we have multiple source

699
01:01:15,530 --> 01:01:21,970
file and these separately compiled into
object files combined libraries and

700
01:01:21,970 --> 01:01:26,819
executables but different source files
come from different directories and the

701
01:01:26,820 --> 01:01:29,670
same source file may be combined to
multiple libraries and multiple

702
01:01:29,670 --> 01:01:32,510
executables to produce multiple
different libraries and multiple

703
01:01:32,510 --> 01:01:39,520
completely separate programs and we have
built generators so a lot of the make

704
01:01:39,520 --> 01:01:39,810
file

705
01:01:39,810 --> 01:01:46,020
filed since the program the source files
get generate the pic botha generated a

706
01:01:46,020 --> 01:01:50,750
bill time the source files include files
could generate runtime the programs that

707
01:01:50,750 --> 01:01:58,130
generate the source files and get built
at runtime so so it's not obvious what

708
01:01:58,130 --> 01:02:07,220
to us assess or even get a list and if
you look at distributed software build

709
01:02:07,220 --> 01:02:12,600
are done so many mind glowingly
different ways including custom scripts

710
01:02:12,600 --> 01:02:18,950
and tools generators that you just it's
just really hard to statically look at a

711
01:02:18,950 --> 01:02:22,100
director in figure out what the heck you
should be assessing in that directory or

712
01:02:22,100 --> 01:02:23,350
even having it available

713
01:02:23,350 --> 01:02:29,920
ok so let me show you this is this is a
reasonable schematic of what to build

714
01:02:29,920 --> 01:02:34,730
process looks like today for a serious
offer project so that the top you've got

715
01:02:34,730 --> 01:02:39,150
your system data system include files
you got library files that aren't there

716
01:02:39,150 --> 01:02:45,000
is somehow your build is gonna have to
obtain you've got system library files

717
01:02:45,000 --> 01:02:51,290
and you got tools user you've also got
document an unusual source files every

718
01:02:51,290 --> 01:02:56,250
build a full source file that nobody
ever uses anymore forget about unused

719
01:02:56,250 --> 01:03:00,490
code in a source file source files
getting rid of those kids they're just

720
01:03:00,490 --> 01:03:09,540
they're distracting you so you know this
when you start the build you know you

721
01:03:09,540 --> 01:03:11,710
get these green boxes to build

722
01:03:11,710 --> 01:03:17,300
configure and build whatever top-level
thing you've got to start generating

723
01:03:17,300 --> 01:03:25,020
make files and generating source files
as one of its first things to do and

724
01:03:25,020 --> 01:03:31,110
what we really want to do is analyzed to
generate source file the system include

725
01:03:31,110 --> 01:03:36,780
files missing library files the project
for smiles down at the bottom the ones

726
01:03:36,780 --> 01:03:40,770
that have to be there those are easy to
find and that's what we want to really

727
01:03:40,770 --> 01:03:47,880
analyze all of that and you know we have
to deal with all the stuff that's

728
01:03:47,880 --> 01:03:53,119
generated the generator like your PC
stuff generator a partial jittery

729
01:03:53,119 --> 01:03:57,039
has to build and install time to the
thing that's going to generate the

730
01:03:57,039 --> 01:04:06,869
programs you're going to analyze
actually has to be generated so you're

731
01:04:06,869 --> 01:04:13,720
dealing with several levels of
indirection here and then these are all

732
01:04:13,720 --> 01:04:17,480
the files we have to look at the general
stores files executables the library

733
01:04:17,480 --> 01:04:21,069
that are gonna go to a software
assurance to love these analysis tools

734
01:04:21,069 --> 01:04:34,819
ok ok so you know what excusable exist
with source files to build so all this

735
01:04:34,819 --> 01:04:41,558
is summarizing into the blue that
require some amount of automation and

736
01:04:41,559 --> 01:04:45,509
its best hope program analysis as well
and there are some tools out there when

737
01:04:45,509 --> 01:04:50,680
you hold programming else so what do we
do so here's here's a simple picture of

738
01:04:50,680 --> 01:04:55,799
what you seeing a lot of directories you
got a source file where there on the

739
01:04:55,799 --> 01:05:01,329
left that build only built into
executable one that's cool one also has

740
01:05:01,329 --> 01:05:05,769
things from the other directory that
goes into two projects and got source

741
01:05:05,769 --> 01:05:08,970
file to build here so this is this is
the kind of stuff we're trying to figure

742
01:05:08,970 --> 01:05:15,700
out and it gets worse because macros and
pound to find all that kind of stuff

743
01:05:15,700 --> 01:05:19,489
being the source you're looking at isn't
actually the stories you can analyze

744
01:05:19,489 --> 01:05:24,680
you've got include files if you don't
know where the include files coming from

745
01:05:24,680 --> 01:05:28,529
you don't actually know which include
fire including and and and there can be

746
01:05:28,529 --> 01:05:32,700
real big variations in version of the
same include file and there's language

747
01:05:32,700 --> 01:05:37,640
dialects excellent 11 all these kind of
things you know which version of c plus

748
01:05:37,640 --> 01:05:41,808
plus I'm I actually analyzing it has a
big effect on the semantics of the

749
01:05:41,809 --> 01:05:48,549
program so and then you need to know to
libraries and director is the fact that

750
01:05:48,549 --> 01:05:50,530
so how do you deal with that so

751
01:05:50,530 --> 01:05:58,330
so I tools assume that all sources are a
single directory that doesn't always

752
01:05:58,330 --> 01:06:04,880
work a lot of tools provide recipes on
how for particular build system to

753
01:06:04,880 --> 01:06:10,630
extract this information it's really
hard to keep that up to date and even if

754
01:06:10,630 --> 01:06:13,970
you do you don't get generated stuff you
make it something about the built

755
01:06:13,970 --> 01:06:20,459
environment and inserted shim into the
into the built environment somewhere you

756
01:06:20,460 --> 01:06:23,900
know you capture your sticks unnamed
variable in there but that's hard to

757
01:06:23,900 --> 01:06:28,200
make sure that you if sometimes to make
files are generated you don't always

758
01:06:28,200 --> 01:06:36,629
capture all the right places to
intercept and and their command line

759
01:06:36,630 --> 01:06:38,970
options that if you don't get the
command line options right you not

760
01:06:38,970 --> 01:06:45,379
analyze and write code ok so what do we
do so the basic idea is you take the

761
01:06:45,380 --> 01:06:51,100
build system and I'm I thought source
package and you monitor the build you

762
01:06:51,100 --> 01:06:55,610
watch the bill happen to this is what
all the big kids do could be ready for

763
01:06:55,610 --> 01:06:59,620
250 metric and things like that this is
what they do they built all this stuff

764
01:06:59,620 --> 01:07:04,779
and they monitor build the C and C++
world you watch the system calls me find

765
01:07:04,780 --> 01:07:08,140
the compiler phases where C compiler
feels good by you grab it and all its

766
01:07:08,140 --> 01:07:12,629
options and I know exactly what happened
every file every directory you capture

767
01:07:12,630 --> 01:07:18,340
the bill compiling steps if you're using
enter a domain even in the in the Java

768
01:07:18,340 --> 01:07:22,110
world there is a callback interface
intercept all the stuff he basing

769
01:07:22,110 --> 01:07:26,460
monitor the build and you build
something we called the build artifact

770
01:07:26,460 --> 01:07:34,350
and then we have a driver which is
applied to all that says I want I have

771
01:07:34,350 --> 01:07:38,890
little patterns has to apply to food
this is the option to use against filed

772
01:07:38,890 --> 01:07:43,620
against the whole directory and I take
all the build information and that plus

773
01:07:43,620 --> 01:07:49,720
the formula how to run a tool tells me
how to run a tool against every file

774
01:07:49,720 --> 01:07:56,399
exactly the way it was compiled and
built and so and so we have this for

775
01:07:56,400 --> 01:08:03,170
both C C++ and Java and it's all set up
very table driven and if you want to

776
01:08:03,170 --> 01:08:04,120
send me e-mail

777
01:08:04,120 --> 01:08:08,799
to you and your tool can run as
effectively as the big kids to not miss

778
01:08:08,800 --> 01:08:18,700
a single option so that's that's that's
the virus scanner just said it's time to

779
01:08:18,700 --> 01:08:22,970
check fire's cause obviously doesn't
trust any of you out there

780
01:08:22,970 --> 01:08:32,790
ok so you know we do a pretty person's
job in Greenville made it may be a great

781
01:08:32,790 --> 01:08:36,140
oh and handles Android

782
01:08:36,140 --> 01:08:54,259
captured all these various things is
open and free

783
01:08:54,259 --> 01:09:02,238
we thought a lot about that and we've
been we haven't we were trying to just

784
01:09:02,238 --> 01:09:15,089
get the results out there so people can
run to compare right there's there's a

785
01:09:15,089 --> 01:09:19,509
lot of there's a lot of really cool
things you can do with the results and

786
01:09:19,509 --> 01:09:24,599
and there's and I think it's a vehicle
for it we're not we want to be a vehicle

787
01:09:24,599 --> 01:09:28,269
for we're not gonna do this all we need
we need partners to do those kind of

788
01:09:28,269 --> 01:09:33,029
things we love to see people working let
me let me move on a little bit let me

789
01:09:33,029 --> 01:09:37,909
get past some of the stuff I would I
want to talk about

790
01:09:37,908 --> 01:09:42,858
are some some limiting factors because
it's not you know here's what I will

791
01:09:42,859 --> 01:09:47,250
swamp right to come and use it right but
you know getting an organization to use

792
01:09:47,250 --> 01:09:52,439
a tool any too little or service and we
end up having a dialogue that with the

793
01:09:52,439 --> 01:09:54,690
answers to the various comments or what

794
01:09:54,690 --> 01:09:59,268
no thanks we don't really need it know
nobody can afford it we take care of

795
01:09:59,269 --> 01:09:59,940
that already

796
01:09:59,940 --> 01:10:03,799
sure what the questions are limited to
those are the answers that we get and

797
01:10:03,800 --> 01:10:06,019
tools needed serious improvement

798
01:10:06,019 --> 01:10:14,349
slow limit you know you know fast the
sound right and we don't really know how

799
01:10:14,349 --> 01:10:17,639
good these tools are and this is very
interesting on technical limitations to

800
01:10:17,639 --> 01:10:23,219
that and even if we it's hard to know
how the tools are we know how good they

801
01:10:23,219 --> 01:10:30,190
are we can talk about it I want to talk
about how we can talk about ok so so I

802
01:10:30,190 --> 01:10:35,379
for sure it's groups usually end up in
organization of the board the testing

803
01:10:35,380 --> 01:10:40,300
group shouldn't they should be a
separate group and these people don't

804
01:10:40,300 --> 01:10:45,530
understand security and I don't think
it's important we we we were talking

805
01:10:45,530 --> 01:10:49,849
with a group of corporate testing

806
01:10:49,849 --> 01:10:54,550
directors and managers and it really was
surprising how many question a question

807
01:10:54,550 --> 01:10:59,150
about so I for sure insecurities that
even though the existence of these tools

808
01:10:59,150 --> 01:11:04,098
that was interest even if you so you can
you convince them they need it they

809
01:11:04,099 --> 01:11:07,280
can't afford it or they can afford to
install the tools we can't afford to

810
01:11:07,280 --> 01:11:07,790
maintain

811
01:11:07,790 --> 01:11:14,370
or they can take the time development to
train the programmers and they do that

812
01:11:14,370 --> 01:11:18,130
they're worried about the delay the
release cycle are real concerns were

813
01:11:18,130 --> 01:11:24,250
getting from people and even think makes
sense they can't afford the price of the

814
01:11:24,250 --> 01:11:27,940
tool these commercial tools they're
expensive they're afraid of the open

815
01:11:27,940 --> 01:11:32,669
source tools and they said what we did a
risk assessment there's this amazing

816
01:11:32,670 --> 01:11:38,450
confusion in the world about well we
assessed risk so now we are okay right

817
01:11:38,450 --> 01:11:44,250
now we're working we have a separate
project we're working with container

818
01:11:44,250 --> 01:11:49,530
port security and come talk to me if you
want it is a really fun project and

819
01:11:49,530 --> 01:11:53,050
we're and we're trying to assess the
software that maintains the database and

820
01:11:53,050 --> 01:11:58,810
controls container ports and and there
are so many studies of the risk

821
01:11:58,810 --> 01:12:03,240
associated container ports and nobody's
looking at the security the software and

822
01:12:03,240 --> 01:12:07,630
they can play well I've got this risk
manager report are we done this risk

823
01:12:07,630 --> 01:12:11,080
assessment report it's just
mind-boggling the confusion between risk

824
01:12:11,080 --> 01:12:15,870
assessment and real software so just

825
01:12:15,870 --> 01:12:19,940
risk assessments way cheaper nothing to
do with the end of it just proves report

826
01:12:19,940 --> 01:12:25,870
so how do we how do we know how good the
tools are nobody publishes comparative

827
01:12:25,870 --> 01:12:32,450
studies and there are calibration test
suites from distant I R by Julia and

828
01:12:32,450 --> 01:12:37,380
institutional talk about let me talk
about those real quickly

829
01:12:37,380 --> 01:12:43,640
NSA produced an hour n town east manages
a set of artificially constructed test

830
01:12:43,640 --> 01:12:52,660
that they they had started out with 230
different flaws ewwies in the code and

831
01:12:52,660 --> 01:12:59,120
had constructed in such as somewhat of
an ad hoc way are increasingly complex

832
01:12:59,120 --> 01:13:04,570
containers of code to contain these
flaws and they generated a whole bunch

833
01:13:04,570 --> 01:13:09,830
of variations together soon end up with
65,000 small unit test each one labeled

834
01:13:09,830 --> 01:13:14,309
with the with the flaw in the code and a
false-positive version of the flow and

835
01:13:14,310 --> 01:13:17,240
you can run your tools against that and
that's actually pretty good out there

836
01:13:17,240 --> 01:13:20,040
for free on this website

837
01:13:20,040 --> 01:13:26,380
IR PA recently came out with stone soup
which is 16 real 8 Java C C++ programs

838
01:13:26,380 --> 01:13:34,580
here are some examples they they took 78
ewwies and went in a mutated the code

839
01:13:34,580 --> 01:13:41,870
contains some number of those and they
produced 8500 complete test program is

840
01:13:41,870 --> 01:13:46,720
completely real will programs containing
a known flaw base here on YouTube

841
01:13:46,720 --> 01:13:49,980
against the Unrated version or a new
tool against mutated version take the

842
01:13:49,980 --> 01:13:54,059
different results and did you find the
diff should contain the flow of the

843
01:13:54,060 --> 01:13:58,410
inserted it doesn't help you with false
positives in the code because you don't

844
01:13:58,410 --> 01:14:02,849
know what's in the code that they didn't
put in what's in the code already native

845
01:14:02,850 --> 01:14:07,480
to the code laws are there so that it
does see if you can find the things they

846
01:14:07,480 --> 01:14:13,740
put in the code in the context of a real
complex control flow data flow large

847
01:14:13,740 --> 01:14:18,490
program base so these are great these
are good we we have some thoughts on how

848
01:14:18,490 --> 01:14:22,360
to make how to make things better but
these are really great resource list

849
01:14:22,360 --> 01:14:32,530
maintained both these in their free ok
now let me talk about legal hazards so

850
01:14:32,530 --> 01:14:41,059
in 2009 we didn't interesting study we
have been doing in-depth assessment of

851
01:14:41,060 --> 01:14:45,150
real systems will counter system was one
of the first we did we had a bunch of

852
01:14:45,150 --> 01:14:50,330
note exploitable we've built we we only
in our in our blue teaming methodology

853
01:14:50,330 --> 01:14:54,700
we only consider something a reportable
vulnerability if we can handle and

854
01:14:54,700 --> 01:14:57,700
exploit to the software authors we did
it

855
01:14:57,700 --> 01:15:01,550
some variant up the set assessment of
this million line code base very

856
01:15:01,550 --> 01:15:06,670
sophisticated distributed system
multi-platform code and we had 15

857
01:15:06,670 --> 01:15:11,570
well-documented vulnerabilities we said
what's the best of the breed are our

858
01:15:11,570 --> 01:15:15,120
friends in industry academia and
government said use fortifying Coverity

859
01:15:15,120 --> 01:15:23,660
we then ran those tools against this
reference set of of code and fortify

860
01:15:23,660 --> 01:15:27,920
found six-foot birdie found one of the
16 weaknesses and we publish that

861
01:15:27,920 --> 01:15:33,550
analysis of the false-positive a lot of
false positives the big issue

862
01:15:33,550 --> 01:15:40,020
pics are won or lost a lot of noise
there and five years later compared to

863
01:15:40,020 --> 01:15:44,890
what legal on us what you publish that
you can't do that a license said that no

864
01:15:44,890 --> 01:15:49,900
license we had at the time that we could
sorry but they changed their license now

865
01:15:49,900 --> 01:16:04,710
you can to the study anymore because
licensing so the shrink wrap you'll do

866
01:16:04,710 --> 01:16:11,210
it plus license to David DeWitt is is
one of our best remembered I very

867
01:16:11,210 --> 01:16:15,600
well-known database guy in 1983 he
published a paper VLDB comparing a bunch

868
01:16:15,600 --> 01:16:19,380
of systems including Oracle Larry
Ellison went crazy

869
01:16:19,380 --> 01:16:23,250
caller to chair demanded that he be
fired if you call the chair call 1300

870
01:16:23,250 --> 01:16:28,380
charity hung up on larry ellison's a
great deal of emotional pleasure in

871
01:16:28,380 --> 01:16:34,680
doing that Oracle then and now others
changed their all their license

872
01:16:34,680 --> 01:16:38,420
agreements to say you cannot report
benchmark are compared the results call

873
01:16:38,420 --> 01:16:48,200
to do it cause ur even and so this is a
hazard so here's an example I want to

874
01:16:48,200 --> 01:16:51,870
use these are these are all these are
from now from software assessment tool

875
01:16:51,870 --> 01:16:55,680
specifically tools like I've been
talking about from commercial vendors

876
01:16:55,680 --> 01:17:03,520
you shall not publicly third-party
benchmarks are the comparisons ok here's

877
01:17:03,520 --> 01:17:07,010
another one should not be limit the
result of benchmarking software software

878
01:17:07,010 --> 01:17:12,740
that so-and-so's approval ok here's
another one customer not disclosed to

879
01:17:12,740 --> 01:17:16,190
any third party compares results the
operation of our software with other

880
01:17:16,190 --> 01:17:21,179
products so this is what you're buying
do it so you know

881
01:17:21,180 --> 01:17:27,030
consumer reports cannot operate in this
space I'm not limited liability clauses

882
01:17:27,030 --> 01:17:31,710
are even worse off the car is your
problem and no warranty closet no

883
01:17:31,710 --> 01:17:34,430
reverse engineering my friend lauren
cohan felder

884
01:17:34,430 --> 01:17:43,300
that recent blog post by Oracle again
saying you know if I want to figure out

885
01:17:43,300 --> 01:17:47,000
of my code safe I can't do a binder
analysis of the code because I

886
01:17:47,000 --> 01:17:51,850
reverse engineering and I love minor
else one of my favorite things to do so

887
01:17:51,850 --> 01:17:56,110
we went and talked to Senate Homeland
Security government affairs and

888
01:17:56,110 --> 01:18:01,670
government affairs committee two months
ago and trying to motivate we also have

889
01:18:01,670 --> 01:18:06,710
actual progress lawyers who take on a
public advocacy they make bunch of some

890
01:18:06,710 --> 01:18:09,670
money doing patent disputes many of you

891
01:18:09,670 --> 01:18:13,600
company has been a lot of money but
they're they're really public mind these

892
01:18:13,600 --> 01:18:16,130
guys are really there's a really
interesting privacy and security

893
01:18:16,130 --> 01:18:21,360
concerns and so we're starting to make a
movement try to see if we can make some

894
01:18:21,360 --> 01:18:29,299
leverage about getting rid of these
classes because we think this is counter

895
01:18:29,300 --> 01:18:34,460
to our national international security
ok so the lack of transparency

896
01:18:34,460 --> 01:18:39,220
capabilities tools I can tell you which
tools are good at which things because

897
01:18:39,220 --> 01:18:43,740
I'm not allowed to I can't publish him I
can't do good academic studies I think

898
01:18:43,740 --> 01:18:50,849
that's hurting global security ok ok let
me take a few minutes and I don't have

899
01:18:50,850 --> 01:18:53,920
time to go through this but let me show
you some weird things I found in code

900
01:18:53,920 --> 01:19:01,280
and so just because I'm talking in BS
stuff and let me talk about some code

901
01:19:01,280 --> 01:19:08,030
stuff that's ok this is from one of the
tutorials we take my colleague Simon and

902
01:19:08,030 --> 01:19:15,170
I teach these tutorials and this is one
of the things we do record Orioles is we

903
01:19:15,170 --> 01:19:19,960
only show you stuff we found for real we
started teaching these tutorials cause

904
01:19:19,960 --> 01:19:24,450
we're finding this stuff in our Blue
Team Red Team exercises to this is this

905
01:19:24,450 --> 01:19:28,769
is something we found ok now here's the
scenario the guys are parsing this

906
01:19:28,770 --> 01:19:41,080
nation to put the code so here's the
problem you wrote you wrote you wrote

907
01:19:41,080 --> 01:19:48,490
some code in pearl and the problem is
everybody out wrote that the locking

908
01:19:48,490 --> 01:19:52,519
system for your world was written in
Python there's a Python library

909
01:19:52,520 --> 01:19:56,020
everybody slogging through standard
system log logging skewed really

910
01:19:56,020 --> 01:20:00,040
important for security for forensics
pieces

911
01:20:00,040 --> 01:20:09,670
and so you need to use the Python
logging library and you can either

912
01:20:09,670 --> 01:20:16,520
rewrite your code in Python or you can
write a second version along a librarian

913
01:20:16,520 --> 01:20:26,060
pearl or you can do something much
faster and easier which is fire off the

914
01:20:26,060 --> 01:20:33,840
Python interpreter and redo log files
from your Perl version and send them to

915
01:20:33,840 --> 01:20:40,660
the Python interpreter running that
library so you're basically your Perl

916
01:20:40,660 --> 01:20:44,230
code is gonna fire up the Python
interpreter generate Python code on the

917
01:20:44,230 --> 01:20:51,280
fly and send it to it this was a good
idea this was really a great idea so so

918
01:20:51,280 --> 01:20:56,450
if you know about perot you know there's
a whole language in the open command

919
01:20:56,450 --> 01:20:59,880
this this is basically P open putting a
pipe character in the open you can

920
01:20:59,880 --> 01:21:05,010
create files in open you can also create
processes you can remove files duplicate

921
01:21:05,010 --> 01:21:10,930
files in the opening statement in this
fire is out the Python interpreter

922
01:21:10,930 --> 01:21:21,300
region the logs and spit them out down
here and basically if you if you can get

923
01:21:21,300 --> 01:21:26,840
bad event to happen and it logs it we
actually caused it to log some stuff

924
01:21:26,840 --> 01:21:31,950
that got some valid Python code in it so
instead of saying log it with just a

925
01:21:31,950 --> 01:21:39,320
name we call the Law get function where
we will be allowed to import the OS

926
01:21:39,320 --> 01:21:44,080
interface and then we call the system
function allows us to run a shell

927
01:21:44,080 --> 01:21:50,740
command and we get to like you run any
command you want as a result of that

928
01:21:50,740 --> 01:21:58,960
logging information ok so this is the
kind of stuff we're doing the real world

929
01:21:58,960 --> 01:22:02,040
clever you should definitely be punished

930
01:22:02,040 --> 01:22:07,570
cogeneration offers are hugely rich
attack vehicle and it worries me

931
01:22:07,570 --> 01:22:10,880
whenever I see that and this is when the
tool should be able to find that they

932
01:22:10,880 --> 01:22:13,280
don't seem to be able to find it

933
01:22:13,280 --> 01:22:16,710
I'm gonna skip this one that was kind of
fun but i wanna show you another one

934
01:22:16,710 --> 01:22:24,090
that less obvious and that's what I want
your code so here's a system where your

935
01:22:24,090 --> 01:22:28,550
login to the client code you can access
the service and this they also have a

936
01:22:28,550 --> 01:22:31,969
nightly analytics thing that goes over
there log files looking for bad pattern

937
01:22:31,969 --> 01:22:39,449
so you take something bizarre into your
web form you request the service to

938
01:22:39,449 --> 01:22:44,928
process that web for the chairman said
that and says I don't like that and logs

939
01:22:44,929 --> 01:22:52,300
it ok nothing bad happened it rejected
the bad input that turns out that this

940
01:22:52,300 --> 01:23:02,020
bad string is enough is enough to
exploit the log nightly log processor

941
01:23:02,020 --> 01:23:09,239
and caused it to be owned so we have a
piece of software running as root behind

942
01:23:09,239 --> 01:23:14,579
the firewall isolated with no interface
to the real world and we owned it for

943
01:23:14,579 --> 01:23:18,909
the string that we fed the long process
services that went into their and this

944
01:23:18,909 --> 01:23:25,879
was this is real stuff these are getting
real things ok ok so if a single program

945
01:23:25,880 --> 01:23:30,329
wasn't hard enough to analyze flows
through a series of programs harder in

946
01:23:30,329 --> 01:23:33,750
los alamos when they're looking at
nuclear simulations which is a whole

947
01:23:33,750 --> 01:23:37,699
sequence of many many programs generally
output files going into more physics

948
01:23:37,699 --> 01:23:42,299
filed more physics filed the actually
track the provenance of data so that

949
01:23:42,300 --> 01:23:46,050
they discover they want to change the
input parameter Prescott input parameter

950
01:23:46,050 --> 01:23:51,199
wrong they know exactly what output data
sets were affected by it they know which

951
01:23:51,199 --> 01:23:56,808
simulations to rerun the simulations
take weeks or months so they're tracking

952
01:23:56,809 --> 01:24:02,079
tape effectively through a distributed
system a program we need to be able to

953
01:24:02,079 --> 01:24:06,739
do that same thing or larger scale it's
not just enough to analyze Cody be able

954
01:24:06,739 --> 01:24:13,070
to do that ok we need to be having
system scales programs don't live in

955
01:24:13,070 --> 01:24:18,860
isolation and I have a whole discussion
of heart bleed but I'm not gonna talk

956
01:24:18,860 --> 01:24:25,839
about we have a really good paper on
that and I'll tell you so I apologize

957
01:24:25,840 --> 01:24:26,900
the fact that you guys

958
01:24:26,900 --> 01:24:32,080
asking too many questions so it's your
fault but I and i'm and i'm having sure

959
01:24:32,080 --> 01:24:36,980
the slide to tell you why Hartley failed
and and white walls don't get into that

960
01:24:36,980 --> 01:24:41,000
but I had all sorts of I just want to
say one thing this is how they fixed

961
01:24:41,000 --> 01:24:46,909
partly if one place to put payload 416
this is at an absolutely correct

962
01:24:46,909 --> 01:24:52,969
check but you know if you handing code
to my undergraduate class for the better

963
01:24:52,969 --> 01:24:57,630
constant you lose half your point that
assignment so when the heart bleed when

964
01:24:57,630 --> 01:25:02,670
the OpenSSL guide for the entire world
watching them were also traumatize

965
01:25:02,670 --> 01:25:06,750
because we've lost security in so many
places and everything watching you to do

966
01:25:06,750 --> 01:25:11,739
your best job this is the code they
wrote and I call them up and said what's

967
01:25:11,739 --> 01:25:16,280
with that he said well the region code
was 19 + payload we thought this was

968
01:25:16,280 --> 01:25:20,219
much better

969
01:25:20,219 --> 01:25:28,190
ok ok so I I'll be having to walk
through that we should stop being

970
01:25:28,190 --> 01:25:31,219
surprised about things like hardly
clearly languages and seventies are

971
01:25:31,219 --> 01:25:38,980
killing us that's not new to me lovely
new languages and say what if we in the

972
01:25:38,980 --> 01:25:54,919
meantime how about tools that we are
using we are we are using them in some

973
01:25:54,920 --> 01:26:01,070
courses but not enough absolute

974
01:26:01,070 --> 01:26:05,750
contest as a big question you know you
know it really depends on what you're

975
01:26:05,750 --> 01:26:10,880
doing I i goin swift but that's not a
big data length really cool big in

976
01:26:10,880 --> 01:26:14,150
languages it really depends on what
you're doing and the problem is that we

977
01:26:14,150 --> 01:26:17,000
teach a funny language we get showed up
at companies weren't you teaching

978
01:26:17,000 --> 01:26:22,380
seashore ok

979
01:26:22,380 --> 01:26:30,340
saying rather drive a truck thank you
Ricky Nelson if I left you out of a

980
01:26:30,340 --> 01:26:34,159
discussion here when you hear from you
and I'm running long but i'll settle

981
01:26:34,159 --> 01:26:38,009
questions until they cut me off and then
please come and talk with me afterwards

982
01:26:38,010 --> 01:26:46,150
you mentioned early on the idea of
getting getting students interested are

983
01:26:46,150 --> 01:26:53,179
aware of these sort of issues very
possible is there much work since a lot

984
01:26:53,179 --> 01:26:59,270
of kids get started by programming games
a lot

985
01:26:59,270 --> 01:27:09,350
I don't know what he told specifically
the gaming area and in my next money

986
01:27:09,350 --> 01:27:19,200
should be fun I mean to develop some
really gauging gauge that had a security

987
01:27:19,200 --> 01:27:24,720
aspect to them combined the game in the
security aspect we we we we only play

988
01:27:24,720 --> 01:27:28,090
games all the time we do capture the
flag with all these contests things like

989
01:27:28,090 --> 01:27:32,950
that really interesting to see if we
could develop a challenge out there is

990
01:27:32,950 --> 01:27:37,580
there is there a gaming version we can
engage the average programmer together

991
01:27:37,580 --> 01:27:38,350
to get out there

