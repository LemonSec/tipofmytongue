1
00:00:10,700 --> 00:00:14,570
my name is trying to ruin good afternoon

2
00:00:14,570 --> 00:00:18,640
I'm from the Penn State University and
today I'm going to talk about toward

3
00:00:18,640 --> 00:00:23,300
discovering and understanding has
carjacking enjoyed and this work has

4
00:00:23,300 --> 00:00:29,300
collaborated with John we should however
imply and the pump you from Penn State

5
00:00:29,300 --> 00:00:32,128
in the PC world

6
00:00:32,128 --> 00:00:35,510
multitasking means that multiple
processor running at the same period of

7
00:00:35,510 --> 00:00:36,620
time

8
00:00:36,620 --> 00:00:41,750
platform likely anyways I ever in order
to adapt the user experience a much

9
00:00:41,750 --> 00:00:45,980
smaller screen multi tasking very
different concept as defined by the

10
00:00:45,980 --> 00:00:51,468
Android developer documentation ing task
is a collection of activity that users

11
00:00:51,469 --> 00:00:57,809
have interacted with when performing a
certain drop they hear the user

12
00:00:57,809 --> 00:01:02,449
interacting with a few user interface in
time series and the engine light each of

13
00:01:02,449 --> 00:01:08,000
these user interface is called activity
and the task is a series of these

14
00:01:08,000 --> 00:01:13,330
activities that user have interacted
with note that the activity may come

15
00:01:13,330 --> 00:01:18,179
from different application different
from come from different applications

16
00:01:18,179 --> 00:01:23,200
for example in this case clicking the
URL inactivity be which is the email

17
00:01:23,200 --> 00:01:31,610
message could launch browser activity
which is also included in task one and

18
00:01:31,610 --> 00:01:36,729
activities in the taskbar organized in
the stack in the order in which each of

19
00:01:36,729 --> 00:01:43,090
the activity is opened and this stack is
called back stack the owner of a task

20
00:01:43,090 --> 00:01:48,119
it's determined in this case by activity
aid which is a route activity of this

21
00:01:48,119 --> 00:01:53,259
task and in this case is a gmail task
and then the system they are usually

22
00:01:53,259 --> 00:02:01,270
multiple task task and the 2012 showing
on top the stream is called a full grant

23
00:02:01,270 --> 00:02:06,310
has their the system service called
actively managed service that is

24
00:02:06,310 --> 00:02:13,930
responsible for managing all the tasks
and activities in the system the life

25
00:02:13,930 --> 00:02:19,989
cycle of Android has usually start from
the launcher so in this figure the lower

26
00:02:19,989 --> 00:02:24,370
partial to task the state of the system
and the upper part

27
00:02:24,370 --> 00:02:32,299
you the screenshot and initially there's
only one long term in the system and

28
00:02:32,299 --> 00:02:35,950
when the user click the gmail icon then
the Inbox

29
00:02:35,950 --> 00:02:42,069
showed up so under the hood what happens
is this a gmail taxes created in closing

30
00:02:42,069 --> 00:02:47,018
one inbox activity which is brought to
the fore ground then the user click

31
00:02:47,019 --> 00:02:52,799
email message again then what happens in
NASA stated that there is a message

32
00:02:52,799 --> 00:02:58,030
activity push on top of the back stack
of the Gmail task so original inbox

33
00:02:58,030 --> 00:03:06,870
activity is suspended and the States is
a resume is it sustained so nice feature

34
00:03:06,870 --> 00:03:11,909
about Android that it provides this back
button to allow user to go back to the

35
00:03:11,909 --> 00:03:17,298
history of activity user have interacted
with so when user click it back then

36
00:03:17,299 --> 00:03:24,799
some message will pop from the back back
back stack and original box activities

37
00:03:24,799 --> 00:03:31,040
resumed when the user click and back
again then this inbox is pop pop from

38
00:03:31,040 --> 00:03:34,989
the stack and the Gmail task is
destroyed

39
00:03:34,989 --> 00:03:41,599
such that user go back to the to the
launch it has the user can choose to go

40
00:03:41,599 --> 00:03:45,929
switch between different house by
clicking on the lower right button and

41
00:03:45,930 --> 00:03:52,209
go to the overview screen and can we can
see that it has claimed has provided has

42
00:03:52,209 --> 00:03:57,139
greatly promote user experience for
example taxes switching new immigration

43
00:03:57,139 --> 00:04:04,769
and also allows years allow developers
to customize a behaviour however the

44
00:04:04,769 --> 00:04:08,269
security implications of enjoy
multitasking remain to be investigated

45
00:04:08,269 --> 00:04:15,519
and in the heart of the problem we have
two major concerns first Android allows

46
00:04:15,519 --> 00:04:21,048
activity from different apps to reside
in the same task so it's actually opens

47
00:04:21,048 --> 00:04:26,340
up opportunities for Apple activity from
different applications to interfere with

48
00:04:26,340 --> 00:04:31,510
one another when they are put into the
same task and secondly enjoy offer

49
00:04:31,510 --> 00:04:34,860
developers great flexibility to
customize

50
00:04:34,860 --> 00:04:41,789
a behaviour for example past creation
activity placement or even customizing

51
00:04:41,789 --> 00:04:46,449
the back button pressing behavior so
with all these flexibilities we were

52
00:04:46,449 --> 00:04:52,150
suspecting that if a malicious activity
can sneak into a victim task and to

53
00:04:52,150 --> 00:04:57,128
achieve its malicious purpose by for
example in confusing user or the system

54
00:04:57,129 --> 00:05:02,789
it turns out that this is indeed
possible and enjoy multitasking is

55
00:05:02,789 --> 00:05:05,199
played by a serious security risk

56
00:05:05,199 --> 00:05:12,810
called task hijacking here's a simple
example to rush to give you a flavour of

57
00:05:12,810 --> 00:05:19,460
what simple casket can achieve in the
user spoofing attack in this example

58
00:05:19,460 --> 00:05:25,719
soyuz's trying to open up our intensity
opened up a paper application however

59
00:05:25,719 --> 00:05:30,840
instead of show up to a PayPal app a
malicious take paypal activity

60
00:05:30,840 --> 00:05:36,529
controlled by the tanker showed up and
the PayPal account password in stolen by

61
00:05:36,529 --> 00:05:43,529
the attacker the question is how did the
system showed up instead of the people

62
00:05:43,529 --> 00:05:53,479
activity that note that in this attack
this attacks are very different from the

63
00:05:53,479 --> 00:05:58,400
well-studied inter component
communication problem where the intent

64
00:05:58,400 --> 00:06:05,239
and sent to undesirable party but here
it's achieved the bypass hijacking if we

65
00:06:05,240 --> 00:06:07,069
take a closer look at the norm

66
00:06:07,069 --> 00:06:13,310
look at the task the state normal case
the PayPal cash will be created and

67
00:06:13,310 --> 00:06:19,349
abroad to the foreground however in the
tax case where there is a melt there the

68
00:06:19,349 --> 00:06:20,699
malicious applique

69
00:06:20,699 --> 00:06:26,180
application run the malware task running
in the background which two activities

70
00:06:26,180 --> 00:06:31,759
and Wang and M to know that this task
can be created in advance

71
00:06:31,759 --> 00:06:38,349
even without user interaction so the TAC
happens when this PayPal task is created

72
00:06:38,349 --> 00:06:41,979
and if we take a closer look at his
PayPal task

73
00:06:41,979 --> 00:06:45,248
asked to prime we find it interesting
fact that

74
00:06:45,249 --> 00:06:51,219
am 22 malicious activity has migrated
from the malware task to the Paypal has

75
00:06:51,219 --> 00:06:59,049
now the question is why does this AM to
migrate it turns out that entry provides

76
00:06:59,049 --> 00:07:04,508
a rich set of tests control knobs to let
developers customized task behaviour

77
00:07:04,509 --> 00:07:09,759
despite of the memories we have talked
about it also opened the new tax surface

78
00:07:09,759 --> 00:07:14,949
in this particular example the malware
can trick the system to relocate to

79
00:07:14,949 --> 00:07:21,129
malicious activity to the Paypal half by
manipulating the following task control

80
00:07:21,129 --> 00:07:28,649
not pass affinity and allowed Astra
parenting so testified that he is an

81
00:07:28,649 --> 00:07:33,289
activity attributes defined in each
activity tagged in the manifest file

82
00:07:33,289 --> 00:07:38,998
like in this example this application
contains two active the A&B where be

83
00:07:38,999 --> 00:07:46,249
explicitly specifies tax affinity to a
stream the task of anything can specify

84
00:07:46,249 --> 00:07:52,909
which task that activity besides to draw
on and by default all activity in the

85
00:07:52,909 --> 00:07:59,889
apt have the same affinity it means that
all the all the activity are by default

86
00:07:59,889 --> 00:08:05,429
willing to draw in the single task and
this test affinity is by default that to

87
00:08:05,429 --> 00:08:11,448
the a Pakistani again use this example
activity a without the explicit setting

88
00:08:11,449 --> 00:08:18,209
the tackle vineyard he has had the
package name at its affinity and the be

89
00:08:18,209 --> 00:08:23,809
explicit said this task affinity to
another stream in this case A&B are more

90
00:08:23,809 --> 00:08:29,769
likely to put into different has
inserted in certain circumstances but

91
00:08:29,769 --> 00:08:35,479
why this useful it is useful when the
balance from one group activity into a

92
00:08:35,479 --> 00:08:38,889
different house for example the
activities may have very different

93
00:08:38,889 --> 00:08:43,649
functionalities and developer intends to
put the activity in two different user

94
00:08:43,649 --> 00:08:50,819
session and secondly developers also can
also place activity defining different

95
00:08:50,819 --> 00:08:54,140
apps winds into single task

96
00:08:54,140 --> 00:09:02,640
allowed repairing the is another
activity attribute which is a few cases

97
00:09:02,640 --> 00:09:10,199
that can make a task affinity factor and
if it's true for CITV a and when a task

98
00:09:10,200 --> 00:09:15,210
with the same affinity as a is brought
to the fore ground then the system will

99
00:09:15,210 --> 00:09:21,150
move away from its original hosted has
to this new foreign task so by default

100
00:09:21,150 --> 00:09:26,650
when the activity is created it will
stay on the task for his entire life but

101
00:09:26,650 --> 00:09:31,329
this attribute break this restriction
and allows activity to my grade in the

102
00:09:31,330 --> 00:09:38,690
middle of the life cycle now it is more
clear all the malware can abuse the pest

103
00:09:38,690 --> 00:09:44,440
control knob so first is that the task
affinity of activity I'm into to the

104
00:09:44,440 --> 00:09:50,550
Paypal package name and then it sends a
loud has prepared to true so under these

105
00:09:50,550 --> 00:09:56,520
circumstances when the people it has
created to

106
00:09:56,520 --> 00:10:03,380
relocated by the system from the malware
to the people and know that during this

107
00:10:03,380 --> 00:10:10,450
process the AM to all those people in
started but the p1 activity is not

108
00:10:10,450 --> 00:10:14,820
brought onto the screen at all and at
this point in time

109
00:10:14,820 --> 00:10:20,770
cautions user may go to the overall
overview strain and carefully exam if he

110
00:10:20,770 --> 00:10:27,069
or she is interacting with a real PayPal
test however seems empty is already part

111
00:10:27,070 --> 00:10:33,120
of the PayPal by only looking at the
overview screen user can only be more

112
00:10:33,120 --> 00:10:39,050
convincing and moreover this malware can
abuse some other control knobs to

113
00:10:39,050 --> 00:10:43,550
disappear or being absent from the whole
review screen in order to be more

114
00:10:43,550 --> 00:10:51,760
stealthy so given this task we want to
fully understand this new threat and ask

115
00:10:51,760 --> 00:10:55,230
the following questions how many types
of tasks

116
00:10:55,230 --> 00:11:01,180
air craft the individual attacks how to
assess the vulnerability and lastly how

117
00:11:01,180 --> 00:11:07,550
to defend it to our answer the first
question we find out there were a rich

118
00:11:07,550 --> 00:11:13,310
set of pest control up there can be
abused by attacker and they are

119
00:11:13,310 --> 00:11:18,839
classified into four categories intense
black activity attribute callback

120
00:11:18,840 --> 00:11:26,230
function and framework API so intense
lakh lakh attribute that can be set to

121
00:11:26,230 --> 00:11:32,260
intent to start activity compared with
activity tribute which it's more static

122
00:11:32,260 --> 00:11:39,600
way to sidestep to define past behaviour
intense black and more time more like a

123
00:11:39,600 --> 00:11:46,090
dynamic dynamic way for example this new
task black if this new catholic and said

124
00:11:46,090 --> 00:11:50,400
that's activities more likely to be
started in the new test instead of

125
00:11:50,400 --> 00:11:56,770
placing on some existing past so we have
activity tribute we have talked about

126
00:11:56,770 --> 00:11:59,949
tax affinity and allowed Astra parenting

127
00:11:59,950 --> 00:12:05,670
also this task the mode is another way
to define how effective he should be

128
00:12:05,670 --> 00:12:12,300
started where to place it in the static
way in the callback function there is an

129
00:12:12,300 --> 00:12:13,920
interesting call back called

130
00:12:13,920 --> 00:12:21,140
impact rest which can override the back
button clicking behavior and also the

131
00:12:21,140 --> 00:12:26,840
framework API provides you take the
classes and function to start to spread

132
00:12:26,840 --> 00:12:33,150
the predefined set of activities in the
new task so with all these complicated

133
00:12:33,150 --> 00:12:41,640
has control knobs we want to understand
the possibility of all checking cases to

134
00:12:41,640 --> 00:12:46,500
this and we formalize that has dynamic
at the state transition model and

135
00:12:46,500 --> 00:12:51,670
simulate Android system with three
applications only to be nine and one

136
00:12:51,670 --> 00:12:56,770
militias we then generate a steady state
transition graph and the flag the

137
00:12:56,770 --> 00:13:04,250
following alerts first hijacked asked
state it is a dangerous stage in which

138
00:13:04,250 --> 00:13:07,560
at least one has in the system will
contain

139
00:13:07,560 --> 00:13:14,529
both militias and benign activities and
secondly hijacking state transition it's

140
00:13:14,529 --> 00:13:18,350
a transition that can lead to the system
too dangerous

141
00:13:18,350 --> 00:13:23,680
hijacked state here shoulder resolve the
left figures showed that text a

142
00:13:23,680 --> 00:13:29,750
transition of power of a subgraph of the
test the transition and each of the

143
00:13:29,750 --> 00:13:34,580
nodes in the graph indicates the tax the
state which also visualized on the right

144
00:13:34,580 --> 00:13:40,900
so the red-nosed indicate that dangerous
hijack state and the right errol's

145
00:13:40,900 --> 00:13:47,100
indicates knows hijacking state
transition also know as a testis then

146
00:13:47,100 --> 00:13:53,560
the system to the hijack state so we we
observed two types of issues he's either

147
00:13:53,560 --> 00:14:01,439
the malware activity find ways to move
into the apt app task or activity it's

148
00:14:01,440 --> 00:14:08,690
tricked by the malware and is placing to
the Mallard task we also find that once

149
00:14:08,690 --> 00:14:14,310
the HST are exploited the resulting
highly practical and serious real-world

150
00:14:14,310 --> 00:14:21,550
attacks by exploiting this is teased we
implement 6 Prafulla concept attacks and

151
00:14:21,550 --> 00:14:25,849
we surprisingly find that these attacks
can cover a wide spectrum of tax base

152
00:14:25,850 --> 00:14:32,020
ranging from user spoofing to denounce
service and to user monitoring so the

153
00:14:32,020 --> 00:14:37,130
consequences are severe for example
sensitive information stolen in a

154
00:14:37,130 --> 00:14:41,990
phishing attack user access restriction
buy or rent somewhere or user privacy

155
00:14:41,990 --> 00:14:48,260
infringement by a spyware and then and
it turns out that has hijacked contact

156
00:14:48,260 --> 00:14:53,189
account fact almost all android versions
and all applications including those

157
00:14:53,190 --> 00:15:03,089
most privileged system that from the
unique and also the overly flexible has

158
00:15:03,089 --> 00:15:07,700
control that will be forty fence we
would like to first understand the use

159
00:15:07,700 --> 00:15:10,550
of these securities has control knobs

160
00:15:10,550 --> 00:15:16,199
really implementations so to this and we
analyze 6.8 million apps from Google

161
00:15:16,200 --> 00:15:18,590
Play and all other and other

162
00:15:18,590 --> 00:15:25,730
12 popular third-party app market this
table shows the percentage application

163
00:15:25,730 --> 00:15:31,430
that's used each of these has control
not as we can see that the bulk of these

164
00:15:31,430 --> 00:15:37,709
control knobs are extremely popular with
developers and users for instance more

165
00:15:37,710 --> 00:15:43,730
than a quarter of these applications are
used non default launcher and

166
00:15:43,730 --> 00:15:49,980
intentional acts are heavily used in
majority of applications and also almost

167
00:15:49,980 --> 00:15:54,360
two-thirds of the application will
customize it back button clicking

168
00:15:54,360 --> 00:16:04,590
behavior so given this user has control
knobs for the offense or defense simply

169
00:16:04,590 --> 00:16:12,130
disable this feature will hurt user
experience and a puncture analogies and

170
00:16:12,130 --> 00:16:18,900
we have two alternative ways to do this
to defend the first is we can be

171
00:16:18,900 --> 00:16:24,630
proactive and detective has kind jacking
in the app review process however

172
00:16:24,630 --> 00:16:27,390
specifying I get line into a preview

173
00:16:27,390 --> 00:16:32,890
balancing the balancing that security
and features is non-trivial partly

174
00:16:32,890 --> 00:16:38,819
because it is difficult to distinguish
legitimate use a podcast features from

175
00:16:38,820 --> 00:16:46,090
those with malicious intention so here's
an example of the phone call dialer

176
00:16:46,090 --> 00:16:52,780
application and by specifying that has
caffeine et the same medicine dialer app

177
00:16:52,780 --> 00:16:57,350
voice recorder application can show up a
ray of control buttons on top of that

178
00:16:57,350 --> 00:17:04,470
application and let's end such that the
user can control this voice recording

179
00:17:04,470 --> 00:17:09,560
functionality of this out however
technique is technically speaking this

180
00:17:09,560 --> 00:17:15,310
voice recording application has already
interfere with the GUI integrity of the

181
00:17:15,310 --> 00:17:20,480
file application and it's hard for the
app review process to distinguish if

182
00:17:20,480 --> 00:17:24,390
this is benign or malicious purpose

183
00:17:24,390 --> 00:17:29,180
and another challenge is it is hard to
detect a stealthy dynamic team dynamic

184
00:17:29,180 --> 00:17:35,100
behavior of advanced malware in the app
review process for example dynamical

185
00:17:35,100 --> 00:17:40,120
golding another alternative for defense
it's to enhance the clearing the of

186
00:17:40,120 --> 00:17:44,830
multitasking mechanism by introducing
additional security features 100 task

187
00:17:44,830 --> 00:17:50,240
for example we can't use the bully
activity attributes which can control if

188
00:17:50,240 --> 00:17:55,900
that allows other applications to
specify the same pass affinity at itself

189
00:17:55,900 --> 00:18:04,210
if not then the system will will not
blindly relocate some activity to the

190
00:18:04,210 --> 00:18:06,230
current cast even

191
00:18:06,230 --> 00:18:13,170
activity decide to do so so I would like
to end my talk with steel product

192
00:18:13,170 --> 00:18:19,600
concept attacked animals so for other
attack attack kisses and how this attack

193
00:18:19,600 --> 00:18:24,490
such Eve please refer to our paper so
the first attacking the phishing attack

194
00:18:24,490 --> 00:18:30,380
that can steal user Citibank account and
password and the goal here is similar

195
00:18:30,380 --> 00:18:39,960
with another tack we have seen but with
different approaches

196
00:18:39,960 --> 00:18:44,920
for demo purposes our first manually
start this malware showed up just a

197
00:18:44,920 --> 00:18:51,400
normal activity and in reality this
number can be highly still see if we

198
00:18:51,400 --> 00:18:56,690
look at the screen is not there but
that's already in the background now

199
00:18:56,690 --> 00:19:03,610
then you open up the Citibank
application and before the user sign on

200
00:19:03,610 --> 00:19:09,389
to this account the user a special user
may be interested to first take a look

201
00:19:09,390 --> 00:19:15,850
at two nice tutorial video about how to
use this banking application so that you

202
00:19:15,850 --> 00:19:19,860
can go ahead and click this link and the
truth

203
00:19:19,860 --> 00:19:30,020
bringing starred legitimate media player
on the system to play this video so

204
00:19:30,020 --> 00:19:34,160
after clicking after clicking this video
after finishing

205
00:19:34,160 --> 00:19:39,590
viewing this video the user click the
back button to go back to the original

206
00:19:39,590 --> 00:19:46,050
activity however this back button has
redirect the user to fishing activity

207
00:19:46,050 --> 00:19:58,080
controlled by Packer then the user IDs
and passwords and stolen after this the

208
00:19:58,080 --> 00:20:01,639
malware it simply quit and show double
organ failure

209
00:20:01,640 --> 00:20:06,440
alert and here shows that user name and
password is stolen

210
00:20:06,440 --> 00:20:15,050
for the second I will show you do now
service tack that will disable Apple

211
00:20:15,050 --> 00:20:26,540
installation on the system so similarly
I will manually start

212
00:20:26,540 --> 00:20:32,220
and after this there's no application
can be on the stuff from this device and

213
00:20:32,220 --> 00:20:38,300
you can find different ways to install
app for example go to the setting find

214
00:20:38,300 --> 00:20:48,460
the app you want to install and click
the Uninstall button at this point in

215
00:20:48,460 --> 00:20:53,370
time there's a malicious activity showed
up immediately which blocks the

216
00:20:53,370 --> 00:20:59,379
underlying system confirmation dialog
for user to install the application such

217
00:20:59,380 --> 00:21:07,100
that the user have no way to uninstall
the application when user click the back

218
00:21:07,100 --> 00:21:14,399
button then this activity may treat iraq
the user to a launcher and all the

219
00:21:14,400 --> 00:21:20,710
previous setting activities are killed
me find different ways for example

220
00:21:20,710 --> 00:21:28,570
dragging the icons

221
00:21:28,570 --> 00:21:33,189
and finally the frustrate users may
resort to the help of antivirus software

222
00:21:33,190 --> 00:21:44,360
and install this application to
similarly this operation is also

223
00:21:44,360 --> 00:21:51,658
prohibited so that this can be easily
extended to read somewhere that can

224
00:21:51,659 --> 00:21:58,460
disable user says too many applications
that is that hackers specify so with

225
00:21:58,460 --> 00:22:39,059
that I would like to thank you all and a
number two questions

226
00:22:39,059 --> 00:23:16,869
attacks but regarding particular
application depends on what kind of

227
00:23:16,869 --> 00:23:52,330
attack that are abusing this task
control knobs although as we have seen

228
00:23:52,330 --> 00:24:01,240
in the dialer app for example that this
phone call recorder it's actually

229
00:24:01,240 --> 00:24:07,249
interfere with the greed of the dialer
but it's just one step 2 p.m. hour Maori

230
00:24:07,249 --> 00:24:14,840
can interfere with that we can do so but
we don't have evidence that malware

231
00:24:14,840 --> 00:24:21,809
caramel drizzle doing this and I
developed in order to fix this problem

232
00:24:21,809 --> 00:24:30,090
or do you think that this is something
that cannot be

233
00:24:30,090 --> 00:24:34,580
feature

234
00:24:34,580 --> 00:24:40,678
parts for developer from developer super
stack to defend a completely but if a

235
00:24:40,679 --> 00:24:44,940
really concerned about the volatility
the developer can basically check

236
00:24:44,940 --> 00:24:53,539
frequently how their tax during their
app running process that's one way I

237
00:24:53,539 --> 00:25:01,149
could think about and also develop I
mean developer can I mean for the

238
00:25:01,149 --> 00:25:09,279
antivirus software can do similar things
to check if any task might be hijacking

239
00:25:09,279 --> 00:25:13,450
by a malicious software

240
00:25:13,450 --> 00:25:28,490
example throughout but can look out also
are from now I i I don't think to my

241
00:25:28,490 --> 00:25:34,240
knowledge I don't think like house for
now can stop activity from running if it

242
00:25:34,240 --> 00:25:38,289
doesn't have any permissions but at
least he can show some alerts to the

243
00:25:38,289 --> 00:25:49,179
user that might be hijacked by malware
or some normal situations ok so other

244
00:25:49,179 --> 00:25:55,090
questions I think we can think this
again and then with the second talking

