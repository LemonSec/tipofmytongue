1
00:00:10,400 --> 00:00:13,280
hi everyone my name is jamie hayes and i

2
00:00:13,280 --> 00:00:14,880
am a phd student from university college

3
00:00:14,880 --> 00:00:17,199
london so today i'm just going to talk a

4
00:00:17,199 --> 00:00:18,800
little bit about website fingerprinting

5
00:00:18,800 --> 00:00:20,320
attacks and

6
00:00:20,320 --> 00:00:21,760
um as i said

7
00:00:21,760 --> 00:00:23,680
this is joint work with my supervisor

8
00:00:23,680 --> 00:00:26,240
george denises

9
00:00:26,240 --> 00:00:30,240
so um as you heard from philip tor is a

10
00:00:30,240 --> 00:00:32,159
a way to basically

11
00:00:32,159 --> 00:00:34,000
uh de-link the sender receiver

12
00:00:34,000 --> 00:00:36,160
relationship when you you know go to a

13
00:00:36,160 --> 00:00:38,800
website so what happens when you fire up

14
00:00:38,800 --> 00:00:40,160
the tor browser

15
00:00:40,160 --> 00:00:43,040
is you put into the url bar the address

16
00:00:43,040 --> 00:00:44,399
the you know the website that you want

17
00:00:44,399 --> 00:00:46,239
to visit and before the network traffic

18
00:00:46,239 --> 00:00:48,000
actually reaches this website it

19
00:00:48,000 --> 00:00:49,600
traverses three different volunteer

20
00:00:49,600 --> 00:00:51,360
relays

21
00:00:51,360 --> 00:00:53,520
okay so the adversary in the website

22
00:00:53,520 --> 00:00:55,520
fingerprinting tries to learn this

23
00:00:55,520 --> 00:00:57,120
relationship between

24
00:00:57,120 --> 00:00:58,480
sender and receiver it tries to

25
00:00:58,480 --> 00:01:00,559
specifically learn what website you're

26
00:01:00,559 --> 00:01:02,079
visiting

27
00:01:02,079 --> 00:01:04,640
so how this works is the adversary will

28
00:01:04,640 --> 00:01:05,519
first

29
00:01:05,519 --> 00:01:07,680
act like a normal client on tour so it

30
00:01:07,680 --> 00:01:08,960
will pick a bunch of websites that

31
00:01:08,960 --> 00:01:10,320
actually cares about fingerprinting and

32
00:01:10,320 --> 00:01:12,400
knowing if someone has visited so in

33
00:01:12,400 --> 00:01:14,479
this example we have a facebook google

34
00:01:14,479 --> 00:01:15,680
and reddit

35
00:01:15,680 --> 00:01:17,600
and it just issues requests to these

36
00:01:17,600 --> 00:01:18,880
sites

37
00:01:18,880 --> 00:01:20,640
the idea is that each site will have

38
00:01:20,640 --> 00:01:23,840
some kind of unique network traffic

39
00:01:23,840 --> 00:01:25,759
fingerprint and so they can create

40
00:01:25,759 --> 00:01:27,360
fingerprints that are unique to these

41
00:01:27,360 --> 00:01:28,880
websites

42
00:01:28,880 --> 00:01:30,320
so this is what it does so in this

43
00:01:30,320 --> 00:01:31,920
example the obviously creates unique

44
00:01:31,920 --> 00:01:33,360
fingerprints for facebook google and

45
00:01:33,360 --> 00:01:34,320
reddit

46
00:01:34,320 --> 00:01:36,479
and then when a client comes along

47
00:01:36,479 --> 00:01:38,079
the advertiser will sit on some link

48
00:01:38,079 --> 00:01:39,439
between the

49
00:01:39,439 --> 00:01:41,520
client and the the officer will sit on

50
00:01:41,520 --> 00:01:43,360
someone between the client and the entry

51
00:01:43,360 --> 00:01:45,280
uh entry guard

52
00:01:45,280 --> 00:01:46,960
and just passively collect the client's

53
00:01:46,960 --> 00:01:48,960
traffic and so when clients browse to

54
00:01:48,960 --> 00:01:50,479
more websites it'll create different

55
00:01:50,479 --> 00:01:52,079
fingerprints these websites and then

56
00:01:52,079 --> 00:01:53,759
with some degree of confidence output

57
00:01:53,759 --> 00:01:56,320
whether it thinks the client has visited

58
00:01:56,320 --> 00:01:57,520
one of these sites that it wants to

59
00:01:57,520 --> 00:01:59,200
monitor

60
00:01:59,200 --> 00:02:00,320
so that's roughly how website

61
00:02:00,320 --> 00:02:02,880
fingerprinting works

62
00:02:02,880 --> 00:02:05,119
in the past

63
00:02:05,119 --> 00:02:07,759
people researchers evaluated this kind

64
00:02:07,759 --> 00:02:10,560
of attacks in a closed world setting

65
00:02:10,560 --> 00:02:13,200
so in this setting um an attacker would

66
00:02:13,200 --> 00:02:16,160
choose some number of websites so

67
00:02:16,160 --> 00:02:17,920
end websites and then we would only

68
00:02:17,920 --> 00:02:20,400
allow the client to visit these same end

69
00:02:20,400 --> 00:02:22,480
websites and this was

70
00:02:22,480 --> 00:02:24,560
quite rightly criticized for being

71
00:02:24,560 --> 00:02:26,879
completely unrealistic right in uh you

72
00:02:26,879 --> 00:02:28,640
know if this attack was going on in

73
00:02:28,640 --> 00:02:30,239
practice because it's a passive attack

74
00:02:30,239 --> 00:02:31,760
you know the client is not limited or

75
00:02:31,760 --> 00:02:34,560
constrained to visit these same websites

76
00:02:34,560 --> 00:02:36,640
this it can it can visit the entire

77
00:02:36,640 --> 00:02:38,480
internet basically

78
00:02:38,480 --> 00:02:39,840
so to

79
00:02:39,840 --> 00:02:41,680
kind of reflect that people started

80
00:02:41,680 --> 00:02:43,920
started uh evaluating these attacks in

81
00:02:43,920 --> 00:02:45,360
an open world

82
00:02:45,360 --> 00:02:47,760
so in the open world the attacker again

83
00:02:47,760 --> 00:02:50,080
chooses his end websites but now we

84
00:02:50,080 --> 00:02:52,400
allow the client to visit maybe some

85
00:02:52,400 --> 00:02:54,560
other websites that the attacker didn't

86
00:02:54,560 --> 00:02:57,120
train on or you know care about

87
00:02:57,120 --> 00:03:01,360
fingerprinting so some unwanted websites

88
00:03:02,640 --> 00:03:06,159
okay so the contributions that we um

89
00:03:06,159 --> 00:03:08,400
for this work poses uh

90
00:03:08,400 --> 00:03:10,720
we have a new attack based on random

91
00:03:10,720 --> 00:03:12,480
forest and k nearest neighbors the two

92
00:03:12,480 --> 00:03:14,080
very common techniques within machine

93
00:03:14,080 --> 00:03:16,720
learning the k n attack was first

94
00:03:16,720 --> 00:03:18,640
actually used in this venue a couple of

95
00:03:18,640 --> 00:03:21,840
years ago by tawwang and his co-authors

96
00:03:21,840 --> 00:03:23,120
so we kind of build on that attack a

97
00:03:23,120 --> 00:03:24,560
little bit

98
00:03:24,560 --> 00:03:25,440
we

99
00:03:25,440 --> 00:03:28,319
present a preliminary analysis of which

100
00:03:28,319 --> 00:03:30,400
features are most important

101
00:03:30,400 --> 00:03:33,920
as in which um types attributes within a

102
00:03:33,920 --> 00:03:35,200
network traffic leak the most

103
00:03:35,200 --> 00:03:36,879
information about which website you're

104
00:03:36,879 --> 00:03:38,480
actually accessing

105
00:03:38,480 --> 00:03:40,080
now this is because

106
00:03:40,080 --> 00:03:41,920
this is very important because if you

107
00:03:41,920 --> 00:03:43,040
know

108
00:03:43,040 --> 00:03:44,080
um

109
00:03:44,080 --> 00:03:46,720
we need to know what um content within

110
00:03:46,720 --> 00:03:48,319
network traffic weeks the most

111
00:03:48,319 --> 00:03:49,840
information so then we can build better

112
00:03:49,840 --> 00:03:52,319
defenses it's not good enough to know um

113
00:03:52,319 --> 00:03:53,840
you know if an attack works or if a

114
00:03:53,840 --> 00:03:55,120
defense worker it's very important to

115
00:03:55,120 --> 00:03:57,120
know why the attack works and what

116
00:03:57,120 --> 00:03:58,799
things are leaking information within a

117
00:03:58,799 --> 00:04:01,519
website

118
00:04:01,519 --> 00:04:04,560
we also test our evaluate our attack on

119
00:04:04,560 --> 00:04:06,159
quite a large open world so over a

120
00:04:06,159 --> 00:04:09,120
hundred thousand websites uh in the past

121
00:04:09,120 --> 00:04:10,959
researchers were evaluating on like five

122
00:04:10,959 --> 00:04:13,040
or ten or twenty thousand websites so we

123
00:04:13,040 --> 00:04:14,799
kind of increase that a little bit

124
00:04:14,799 --> 00:04:16,560
and there's some concurrent work by

125
00:04:16,560 --> 00:04:18,079
panchenko in his group that have done

126
00:04:18,079 --> 00:04:20,000
similar things this year's ndss so

127
00:04:20,000 --> 00:04:21,440
that's pretty cool

128
00:04:21,440 --> 00:04:22,560
and we

129
00:04:22,560 --> 00:04:24,320
also experiment with both standard

130
00:04:24,320 --> 00:04:28,560
websites as well as tour hidden services

131
00:04:28,560 --> 00:04:29,840
okay

132
00:04:29,840 --> 00:04:31,360
so

133
00:04:31,360 --> 00:04:33,520
what kind of features did we use well we

134
00:04:33,520 --> 00:04:35,360
we used a very diverse feature set um

135
00:04:35,360 --> 00:04:37,360
consisting of some new features that

136
00:04:37,360 --> 00:04:39,280
we've come up with and kind of drawing

137
00:04:39,280 --> 00:04:40,400
on the past

138
00:04:40,400 --> 00:04:42,479
past people's past work to

139
00:04:42,479 --> 00:04:44,880
find the most important features

140
00:04:44,880 --> 00:04:46,880
so we use things like volume information

141
00:04:46,880 --> 00:04:48,880
so the total number of packets that were

142
00:04:48,880 --> 00:04:51,199
generated during a website load

143
00:04:51,199 --> 00:04:53,199
um as well as things like timing

144
00:04:53,199 --> 00:04:55,199
information so the times that packets

145
00:04:55,199 --> 00:04:57,759
were sent and received things like that

146
00:04:57,759 --> 00:04:59,040
this is a

147
00:04:59,040 --> 00:05:00,639
we need a very diverse feature set is

148
00:05:00,639 --> 00:05:02,720
what i'm trying to say because

149
00:05:02,720 --> 00:05:04,479
certain website fingerprint defenses

150
00:05:04,479 --> 00:05:07,360
will target subsets of features so some

151
00:05:07,360 --> 00:05:10,560
defenses may inject packets to destroy

152
00:05:10,560 --> 00:05:13,039
the ability for a classifier to

153
00:05:13,039 --> 00:05:16,639
use volume information some defenses may

154
00:05:16,639 --> 00:05:18,639
rate limit packets so delay packets to

155
00:05:18,639 --> 00:05:21,440
some some degree to then

156
00:05:21,440 --> 00:05:23,280
not let the classifier exploit timing

157
00:05:23,280 --> 00:05:24,479
information

158
00:05:24,479 --> 00:05:26,800
and so if you want an attack to kind of

159
00:05:26,800 --> 00:05:27,759
work

160
00:05:27,759 --> 00:05:30,320
against any of these defenses you need a

161
00:05:30,320 --> 00:05:32,639
very diverse feature set so that if some

162
00:05:32,639 --> 00:05:35,039
subsets of features are blocked the

163
00:05:35,039 --> 00:05:36,320
other subsets of features in your

164
00:05:36,320 --> 00:05:40,080
feature set kind of compensate for that

165
00:05:40,160 --> 00:05:41,919
so this is the feature importance graph

166
00:05:41,919 --> 00:05:43,600
that i'm not sure if you can see but

167
00:05:43,600 --> 00:05:46,560
this so we used 150 features

168
00:05:46,560 --> 00:05:48,320
and we found about 20 or 30 of these

169
00:05:48,320 --> 00:05:50,320
were relatively quite important and

170
00:05:50,320 --> 00:05:51,280
there's

171
00:05:51,280 --> 00:05:53,600
a sharp drop off and we have sort of a

172
00:05:53,600 --> 00:05:55,199
diminishing returns of importance for

173
00:05:55,199 --> 00:05:56,880
the the

174
00:05:56,880 --> 00:05:59,440
rest like 100 features or so

175
00:05:59,440 --> 00:06:01,680
uh but the best features we found and i

176
00:06:01,680 --> 00:06:02,960
think this is confirming what other

177
00:06:02,960 --> 00:06:04,639
resources have found in the past two is

178
00:06:04,639 --> 00:06:07,199
that the actual total number of uh

179
00:06:07,199 --> 00:06:09,280
incoming and outgoing packets leaked by

180
00:06:09,280 --> 00:06:11,840
far the most information to an attack

181
00:06:11,840 --> 00:06:13,280
and this stands to reason if you think

182
00:06:13,280 --> 00:06:14,800
about it i mean if you take google for

183
00:06:14,800 --> 00:06:16,960
example which has a landing page it is

184
00:06:16,960 --> 00:06:18,800
very small and then you usually look at

185
00:06:18,800 --> 00:06:20,479
another page like in the new york times

186
00:06:20,479 --> 00:06:22,240
or the guardian which has a lot of

187
00:06:22,240 --> 00:06:24,160
content it has a lot of you know images

188
00:06:24,160 --> 00:06:26,800
and text so even to the naked eye it's

189
00:06:26,800 --> 00:06:28,000
very easy to

190
00:06:28,000 --> 00:06:29,280
see that these are two have two

191
00:06:29,280 --> 00:06:30,639
different sizes

192
00:06:30,639 --> 00:06:32,800
and this is like this simple feature is

193
00:06:32,800 --> 00:06:34,639
easily exploited by you know advanced

194
00:06:34,639 --> 00:06:37,039
classification techniques

195
00:06:37,039 --> 00:06:39,759
uh we also find as well that

196
00:06:39,759 --> 00:06:41,919
information that's leaked from the

197
00:06:41,919 --> 00:06:44,080
first second or so of a website load so

198
00:06:44,080 --> 00:06:46,240
the kind of get request and then the

199
00:06:46,240 --> 00:06:49,120
downloaded downloading of the index html

200
00:06:49,120 --> 00:06:50,960
leaks a lot more information say the end

201
00:06:50,960 --> 00:06:53,039
of the website load which may be a bit

202
00:06:53,039 --> 00:06:55,360
variable

203
00:06:55,360 --> 00:06:57,919
okay so how does this attack work

204
00:06:57,919 --> 00:07:00,719
so given some

205
00:07:00,880 --> 00:07:02,639
given their website we loaded and we

206
00:07:02,639 --> 00:07:04,319
record the network traffic that was

207
00:07:04,319 --> 00:07:06,479
generated by that load so we record the

208
00:07:06,479 --> 00:07:07,599
times that packets were sent and

209
00:07:07,599 --> 00:07:08,880
received

210
00:07:08,880 --> 00:07:10,560
and then we just converted into this

211
00:07:10,560 --> 00:07:12,319
feature set so you know like total

212
00:07:12,319 --> 00:07:13,520
number of packets that were generated

213
00:07:13,520 --> 00:07:14,639
things like that

214
00:07:14,639 --> 00:07:16,400
and then we pass it into a random forest

215
00:07:16,400 --> 00:07:18,880
so a random forest is

216
00:07:18,880 --> 00:07:20,479
an ensemble of decision trees and i'm

217
00:07:20,479 --> 00:07:21,680
sure you all know what a decision tree

218
00:07:21,680 --> 00:07:23,440
is very simple construct that takes some

219
00:07:23,440 --> 00:07:26,000
kind of input and you know tries to work

220
00:07:26,000 --> 00:07:27,840
out how best to split the data up until

221
00:07:27,840 --> 00:07:29,280
it lands out upon a leaf which is the

222
00:07:29,280 --> 00:07:32,000
category for that data

223
00:07:32,000 --> 00:07:33,759
so the random forest takes a bunch of

224
00:07:33,759 --> 00:07:36,160
these decision trees and usually uses

225
00:07:36,160 --> 00:07:38,000
some kind of voting mechanism to decide

226
00:07:38,000 --> 00:07:41,120
on how this input should be classified

227
00:07:41,120 --> 00:07:42,720
and so instead of doing

228
00:07:42,720 --> 00:07:45,039
classification just using random forests

229
00:07:45,039 --> 00:07:47,039
we instead take the

230
00:07:47,039 --> 00:07:48,800
um we use the random forest to create

231
00:07:48,800 --> 00:07:51,360
the fingerprint so what we do is we

232
00:07:51,360 --> 00:07:53,599
look at the positions of the leaf nodes

233
00:07:53,599 --> 00:07:56,560
um the input the leaf nodes

234
00:07:56,560 --> 00:07:59,120
were fell upon and we take those

235
00:07:59,120 --> 00:08:00,960
positions as the fingerprint for this

236
00:08:00,960 --> 00:08:02,080
input

237
00:08:02,080 --> 00:08:03,599
and then what we do is we use the

238
00:08:03,599 --> 00:08:05,199
k-nearest neighbor classification

239
00:08:05,199 --> 00:08:08,080
technique to finally classify an input

240
00:08:08,080 --> 00:08:08,879
so

241
00:08:08,879 --> 00:08:10,560
for example if we have a new website and

242
00:08:10,560 --> 00:08:12,400
we want to classify it

243
00:08:12,400 --> 00:08:13,840
well we've already got ground truth from

244
00:08:13,840 --> 00:08:15,360
the training data

245
00:08:15,360 --> 00:08:17,680
so if we wanted to classify a new input

246
00:08:17,680 --> 00:08:19,039
we look at say the five nearest

247
00:08:19,039 --> 00:08:21,280
neighbors to this new input and if all

248
00:08:21,280 --> 00:08:22,800
these five nearest neighbors agree on

249
00:08:22,800 --> 00:08:24,800
classification on what website this new

250
00:08:24,800 --> 00:08:26,639
input should be classified as then we

251
00:08:26,639 --> 00:08:28,639
just classified as that website

252
00:08:28,639 --> 00:08:30,560
if any of these five nearest neighbors

253
00:08:30,560 --> 00:08:32,479
disagree on classification so if maybe

254
00:08:32,479 --> 00:08:34,159
some of them said it was website a and

255
00:08:34,159 --> 00:08:35,679
some said website b

256
00:08:35,679 --> 00:08:38,479
then we just marked this new input as a

257
00:08:38,479 --> 00:08:40,880
website that the um

258
00:08:40,880 --> 00:08:42,320
that the adversary didn't care about so

259
00:08:42,320 --> 00:08:45,519
an unmonitored website

260
00:08:46,000 --> 00:08:48,240
okay so before i discuss how well the

261
00:08:48,240 --> 00:08:49,839
attack work i'd like to speak a little

262
00:08:49,839 --> 00:08:51,680
bit about the base rate and which comes

263
00:08:51,680 --> 00:08:53,200
up a lot in website fingerprinting

264
00:08:53,200 --> 00:08:54,560
research

265
00:08:54,560 --> 00:08:56,000
so when

266
00:08:56,000 --> 00:08:57,680
people first started

267
00:08:57,680 --> 00:08:59,279
looking into website fingerprinting

268
00:08:59,279 --> 00:09:00,800
researchers were getting very high true

269
00:09:00,800 --> 00:09:02,160
positive rates and very very false

270
00:09:02,160 --> 00:09:04,640
positive rates which looked you know

271
00:09:04,640 --> 00:09:05,680
really good

272
00:09:05,680 --> 00:09:07,600
but they were usually only evaluating on

273
00:09:07,600 --> 00:09:10,240
a few hundred or maybe a thousand or two

274
00:09:10,240 --> 00:09:11,600
websites

275
00:09:11,600 --> 00:09:13,120
which means that you know the actual

276
00:09:13,120 --> 00:09:15,040
number of fossil arms is quite low of

277
00:09:15,040 --> 00:09:17,040
course in practice

278
00:09:17,040 --> 00:09:19,920
people there is no real upper bound like

279
00:09:19,920 --> 00:09:21,279
hard upper bound to the number of

280
00:09:21,279 --> 00:09:22,800
websites that someone's going to visit

281
00:09:22,800 --> 00:09:24,480
this is going to increase increase over

282
00:09:24,480 --> 00:09:26,240
time

283
00:09:26,240 --> 00:09:28,080
so the point is that the false positive

284
00:09:28,080 --> 00:09:29,760
rate needs to be extremely low in

285
00:09:29,760 --> 00:09:32,800
practice for an attack to take place

286
00:09:32,800 --> 00:09:34,720
right to actually withstand the number

287
00:09:34,720 --> 00:09:37,040
of false alarms for example if you had a

288
00:09:37,040 --> 00:09:38,800
full possibility of just one percent and

289
00:09:38,800 --> 00:09:41,200
the client loads 100 unmonitored pages

290
00:09:41,200 --> 00:09:42,640
the attacker's gonna on average think or

291
00:09:42,640 --> 00:09:43,760
one of these is

292
00:09:43,760 --> 00:09:46,720
incorrectly a monitored page and over

293
00:09:46,720 --> 00:09:48,800
time if the client visits like a million

294
00:09:48,800 --> 00:09:49,920
pages

295
00:09:49,920 --> 00:09:51,200
we're gonna the attack is gonna get

296
00:09:51,200 --> 00:09:52,959
about 10 000 fossil arms which is just

297
00:09:52,959 --> 00:09:54,720
far too high

298
00:09:54,720 --> 00:09:57,200
so for an attacker plate to

299
00:09:57,200 --> 00:09:59,440
withstand the number of false alarms the

300
00:09:59,440 --> 00:10:01,200
false positive rate needs to be in

301
00:10:01,200 --> 00:10:03,040
orders of magnitude lower than one

302
00:10:03,040 --> 00:10:05,839
percent

303
00:10:05,920 --> 00:10:08,000
okay so here are the accuracy metrics

304
00:10:08,000 --> 00:10:11,200
that we used to evaluate the attack

305
00:10:11,200 --> 00:10:12,959
the first was the standard true positive

306
00:10:12,959 --> 00:10:14,560
rate which is the probability that a

307
00:10:14,560 --> 00:10:16,640
monitored page is classified correctly

308
00:10:16,640 --> 00:10:18,720
as that monitored page

309
00:10:18,720 --> 00:10:20,240
the false positive rate which is the

310
00:10:20,240 --> 00:10:22,320
probability that a unwanted page is

311
00:10:22,320 --> 00:10:23,920
incorrectly classified as a monitored

312
00:10:23,920 --> 00:10:24,800
page

313
00:10:24,800 --> 00:10:25,920
and

314
00:10:25,920 --> 00:10:27,600
excuse me something called the basic

315
00:10:27,600 --> 00:10:29,440
detection rate which is the probability

316
00:10:29,440 --> 00:10:31,440
that a page corresponds to the correct

317
00:10:31,440 --> 00:10:33,440
amount of page given that it was

318
00:10:33,440 --> 00:10:35,200
classified it recognized as that

319
00:10:35,200 --> 00:10:36,640
monitored page

320
00:10:36,640 --> 00:10:38,560
so the basic detection rate takes into

321
00:10:38,560 --> 00:10:39,760
account things like the true positive

322
00:10:39,760 --> 00:10:42,160
rate the false positive rate the size of

323
00:10:42,160 --> 00:10:44,240
your monitored web the number of your

324
00:10:44,240 --> 00:10:46,160
monitored websites and the number of

325
00:10:46,160 --> 00:10:47,600
unmonitored websites that you're you

326
00:10:47,600 --> 00:10:49,760
know testing with so it takes into

327
00:10:49,760 --> 00:10:52,399
account um the base rate and gives you a

328
00:10:52,399 --> 00:10:53,680
real idea of actually how well your

329
00:10:53,680 --> 00:10:55,680
attack is performing it tells you what

330
00:10:55,680 --> 00:10:57,680
is the actual probability that your

331
00:10:57,680 --> 00:11:01,839
classifier made a correct prediction

332
00:11:02,959 --> 00:11:04,880
okay so i said that we

333
00:11:04,880 --> 00:11:07,120
fingerprinted talking services as well

334
00:11:07,120 --> 00:11:09,360
as standard web pages so i'll just

335
00:11:09,360 --> 00:11:11,200
briefly tell you what toy series are for

336
00:11:11,200 --> 00:11:12,959
maybe a few of you that don't know

337
00:11:12,959 --> 00:11:14,640
so when you use

338
00:11:14,640 --> 00:11:17,120
um you know standard tour you and you

339
00:11:17,120 --> 00:11:18,320
browse the wikipedia through your tour

340
00:11:18,320 --> 00:11:19,839
browser you're usually only getting

341
00:11:19,839 --> 00:11:21,920
sender anonymity right

342
00:11:21,920 --> 00:11:23,600
wikipedia doesn't try to hide where

343
00:11:23,600 --> 00:11:25,200
they're located it doesn't have it has a

344
00:11:25,200 --> 00:11:27,040
public ip address

345
00:11:27,040 --> 00:11:29,279
and but there is some entities that have

346
00:11:29,279 --> 00:11:31,600
a very good reason not to want to

347
00:11:31,600 --> 00:11:33,279
have this as public information for

348
00:11:33,279 --> 00:11:35,360
example securedrop which is a

349
00:11:35,360 --> 00:11:37,760
whistleblowing platform for journalists

350
00:11:37,760 --> 00:11:39,680
and hosts a lot of extreme extremely

351
00:11:39,680 --> 00:11:41,519
sensitive content

352
00:11:41,519 --> 00:11:44,079
um and they have a very good reason to

353
00:11:44,079 --> 00:11:45,120
not want to

354
00:11:45,120 --> 00:11:46,720
you know publicly

355
00:11:46,720 --> 00:11:48,399
have publicly known where their servers

356
00:11:48,399 --> 00:11:50,240
are located and things like that so they

357
00:11:50,240 --> 00:11:52,880
require receiver anonymity as well as um

358
00:11:52,880 --> 00:11:55,680
clients requiring sender anonymity

359
00:11:55,680 --> 00:11:58,160
and so how the touring service setup

360
00:11:58,160 --> 00:11:59,200
works when

361
00:11:59,200 --> 00:12:01,440
um well the adversary in the uh threat

362
00:12:01,440 --> 00:12:03,360
model sits in the same place so it sits

363
00:12:03,360 --> 00:12:05,279
on like the in the

364
00:12:05,279 --> 00:12:06,320
um

365
00:12:06,320 --> 00:12:08,160
at the edge of the network but now the

366
00:12:08,160 --> 00:12:09,760
website that your the client wants to

367
00:12:09,760 --> 00:12:11,040
browse to is actually part of the tor

368
00:12:11,040 --> 00:12:12,639
network so it's hosted within the tor

369
00:12:12,639 --> 00:12:14,079
network

370
00:12:14,079 --> 00:12:16,000
and what when the client wants to browse

371
00:12:16,000 --> 00:12:18,880
a website first the website actually

372
00:12:18,880 --> 00:12:20,480
creates something called an introduction

373
00:12:20,480 --> 00:12:22,480
point to just some node within the tor

374
00:12:22,480 --> 00:12:23,440
network

375
00:12:23,440 --> 00:12:25,040
it applies this information to something

376
00:12:25,040 --> 00:12:27,360
called the torhen service directory

377
00:12:27,360 --> 00:12:28,560
the client then downloads this

378
00:12:28,560 --> 00:12:30,000
information so it discovers where these

379
00:12:30,000 --> 00:12:32,399
introduction points are and creates two

380
00:12:32,399 --> 00:12:34,560
circuits one called a rendezvous point

381
00:12:34,560 --> 00:12:35,920
and another chord

382
00:12:35,920 --> 00:12:38,240
another to the introduction point and

383
00:12:38,240 --> 00:12:38,959
then

384
00:12:38,959 --> 00:12:40,560
tells the

385
00:12:40,560 --> 00:12:42,560
the website where this rendezvous point

386
00:12:42,560 --> 00:12:45,040
is located they wrote the website

387
00:12:45,040 --> 00:12:47,600
removes these removes this circuit and

388
00:12:47,600 --> 00:12:49,040
creates a new circuit to this render

389
00:12:49,040 --> 00:12:50,160
viewpoint

390
00:12:50,160 --> 00:12:52,320
and then the client can start actually

391
00:12:52,320 --> 00:12:55,519
browsing this website

392
00:12:55,519 --> 00:12:57,120
okay so

393
00:12:57,120 --> 00:12:58,880
before i get into the about how well the

394
00:12:58,880 --> 00:13:00,800
attack worked all the

395
00:13:00,800 --> 00:13:01,839
um

396
00:13:01,839 --> 00:13:04,320
traffic was collected viator um clearly

397
00:13:04,320 --> 00:13:06,720
and we used two monitor data sets one

398
00:13:06,720 --> 00:13:08,399
consisting of

399
00:13:08,399 --> 00:13:10,639
alexa sites so google wikipedia things

400
00:13:10,639 --> 00:13:12,880
like that and another popular tour

401
00:13:12,880 --> 00:13:15,200
hidden services as listed by um

402
00:13:15,200 --> 00:13:16,720
army which is a

403
00:13:16,720 --> 00:13:19,040
search engine for tall hidden services

404
00:13:19,040 --> 00:13:20,639
oh we only collected the landing page

405
00:13:20,639 --> 00:13:23,600
for each web uh website so maybe more

406
00:13:23,600 --> 00:13:24,639
app name would be web page

407
00:13:24,639 --> 00:13:26,000
fingerprinting

408
00:13:26,000 --> 00:13:26,720
but

409
00:13:26,720 --> 00:13:29,440
as is standard in website fingerprinting

410
00:13:29,440 --> 00:13:31,760
and we only and then we use a an

411
00:13:31,760 --> 00:13:35,279
additional 100 000 extra websites for

412
00:13:35,279 --> 00:13:37,839
this kind of unmonitored uh data set

413
00:13:37,839 --> 00:13:39,120
where the adversary doesn't care about

414
00:13:39,120 --> 00:13:41,920
fingerprinting it

415
00:13:42,959 --> 00:13:45,519
okay so we found um

416
00:13:45,519 --> 00:13:48,800
that parameter tuning was a huge deal in

417
00:13:48,800 --> 00:13:50,240
the accuracy of the attack and i think

418
00:13:50,240 --> 00:13:52,079
this is just echoing what tao wang found

419
00:13:52,079 --> 00:13:54,160
with when he used his k-nearest neighbor

420
00:13:54,160 --> 00:13:55,279
classifier

421
00:13:55,279 --> 00:13:56,320
so the

422
00:13:56,320 --> 00:13:58,240
left-hand figure shows

423
00:13:58,240 --> 00:14:00,000
the true positive and false positive

424
00:14:00,000 --> 00:14:01,360
rate

425
00:14:01,360 --> 00:14:03,120
four different numbers of

426
00:14:03,120 --> 00:14:04,399
nearest neighbours used for final

427
00:14:04,399 --> 00:14:06,240
classification so the top right of the

428
00:14:06,240 --> 00:14:07,760
left-hand figure

429
00:14:07,760 --> 00:14:09,199
shows the

430
00:14:09,199 --> 00:14:10,639
true positive rate and false positive

431
00:14:10,639 --> 00:14:13,360
rate when we just use one neighbor

432
00:14:13,360 --> 00:14:14,560
and because we just use one neighbor

433
00:14:14,560 --> 00:14:16,880
there's much greater opportunity for

434
00:14:16,880 --> 00:14:18,880
false positives to arise

435
00:14:18,880 --> 00:14:20,560
so the false positive rate is

436
00:14:20,560 --> 00:14:22,480
comparatively quite high and at the

437
00:14:22,480 --> 00:14:24,800
bottom left is when we use five or six

438
00:14:24,800 --> 00:14:26,639
neighbors for final classification and

439
00:14:26,639 --> 00:14:29,040
so it's quite unlikely that five or six

440
00:14:29,040 --> 00:14:31,360
of these neighbors and all incorrectly

441
00:14:31,360 --> 00:14:32,880
have the same label

442
00:14:32,880 --> 00:14:35,279
so the false false positive rate is

443
00:14:35,279 --> 00:14:36,800
relatively low

444
00:14:36,800 --> 00:14:39,440
uh the point is that we can

445
00:14:39,440 --> 00:14:42,240
kind of tune this attack um based on if

446
00:14:42,240 --> 00:14:43,600
we care more about true positives or

447
00:14:43,600 --> 00:14:46,000
false positives so it gives some gives

448
00:14:46,000 --> 00:14:47,440
us some latitude to you know kind of

449
00:14:47,440 --> 00:14:49,440
configure the attack

450
00:14:49,440 --> 00:14:51,680
and the right hand

451
00:14:51,680 --> 00:14:53,839
figure just shows the

452
00:14:53,839 --> 00:14:54,959
the attack

453
00:14:54,959 --> 00:14:56,560
doesn't really benefit from adding more

454
00:14:56,560 --> 00:14:59,199
trees after we hit a certain uh certain

455
00:14:59,199 --> 00:15:00,800
number of trees after like 10 or 15

456
00:15:00,800 --> 00:15:03,760
trees the attack doesn't like you know

457
00:15:03,760 --> 00:15:04,880
increa

458
00:15:04,880 --> 00:15:06,480
dramatically increase in accuracy so we

459
00:15:06,480 --> 00:15:09,120
could use 100 or 20 trees and pretty

460
00:15:09,120 --> 00:15:12,880
much get the same same accuracy

461
00:15:12,880 --> 00:15:13,760
okay

462
00:15:13,760 --> 00:15:17,199
so here are the results for the um alexa

463
00:15:17,199 --> 00:15:19,519
monitored set as we increase the number

464
00:15:19,519 --> 00:15:22,480
of unmonitored sites

465
00:15:22,480 --> 00:15:24,720
so we have a steady true positive rate

466
00:15:24,720 --> 00:15:29,440
of about 96 when using just one neighbor

467
00:15:29,440 --> 00:15:31,279
but we also have a

468
00:15:31,279 --> 00:15:33,120
quite a steady false positive rate of

469
00:15:33,120 --> 00:15:35,120
just under four percent

470
00:15:35,120 --> 00:15:36,880
and you know when we're testing against

471
00:15:36,880 --> 00:15:38,720
a hundred thousand on monitored sites

472
00:15:38,720 --> 00:15:40,639
that means we're getting quite actually

473
00:15:40,639 --> 00:15:42,880
quite a few thousand um false positives

474
00:15:42,880 --> 00:15:45,759
so not that great

475
00:15:45,759 --> 00:15:49,360
um for the tour hidden service data set

476
00:15:49,360 --> 00:15:50,240
uh

477
00:15:50,240 --> 00:15:51,920
the true positive rate dropped by about

478
00:15:51,920 --> 00:15:55,920
10 to 85 86 percent uh for regardless of

479
00:15:55,920 --> 00:15:58,000
the number of unmonitored sites

480
00:15:58,000 --> 00:16:00,160
but the false positive false positive

481
00:16:00,160 --> 00:16:01,759
rate dropped dramatically dramatically

482
00:16:01,759 --> 00:16:04,480
to about 0.3.2 percent

483
00:16:04,480 --> 00:16:06,560
meaning that if we were testing against

484
00:16:06,560 --> 00:16:08,560
you know 20 or 30 000

485
00:16:08,560 --> 00:16:10,079
web pages

486
00:16:10,079 --> 00:16:11,360
we only have

487
00:16:11,360 --> 00:16:13,199
false positives in the order of tens and

488
00:16:13,199 --> 00:16:15,120
not hundreds or thousands which you know

489
00:16:15,120 --> 00:16:17,040
the the attacker might be able to cope

490
00:16:17,040 --> 00:16:18,880
with

491
00:16:18,880 --> 00:16:20,800
okay and here is the

492
00:16:20,800 --> 00:16:23,440
to two uh monitored sets uh the beta

493
00:16:23,440 --> 00:16:24,639
detection rate for the two monitored

494
00:16:24,639 --> 00:16:25,440
sets

495
00:16:25,440 --> 00:16:27,279
so in the bottom figure is for the alexa

496
00:16:27,279 --> 00:16:28,480
monitored set

497
00:16:28,480 --> 00:16:30,480
and uh things look pretty good in terms

498
00:16:30,480 --> 00:16:33,519
of how well our classifier is making a

499
00:16:33,519 --> 00:16:35,040
classification when we're testing

500
00:16:35,040 --> 00:16:37,759
against 10 or 20 or 30 000 on monitored

501
00:16:37,759 --> 00:16:39,600
sites like we're getting

502
00:16:39,600 --> 00:16:42,160
you know around 80 percent accuracy

503
00:16:42,160 --> 00:16:44,160
um as we increase to about a hundred

504
00:16:44,160 --> 00:16:46,639
hundred thousand months on monitor sites

505
00:16:46,639 --> 00:16:47,680
we

506
00:16:47,680 --> 00:16:48,560
um

507
00:16:48,560 --> 00:16:50,480
suffer quite badly the

508
00:16:50,480 --> 00:16:52,639
classifier is making more incorrect

509
00:16:52,639 --> 00:16:54,639
predictions than correct predictions

510
00:16:54,639 --> 00:16:56,560
which isn't great

511
00:16:56,560 --> 00:16:58,079
things again look quite different in the

512
00:16:58,079 --> 00:17:00,800
torhen service data set though

513
00:17:00,800 --> 00:17:02,160
we have

514
00:17:02,160 --> 00:17:04,559
up to about 50 or 60 000 we have a an

515
00:17:04,559 --> 00:17:06,400
accuracy of over 90

516
00:17:06,400 --> 00:17:07,760
meaning that

517
00:17:07,760 --> 00:17:09,199
the classifier is actually making

518
00:17:09,199 --> 00:17:12,240
correct prediction given some input 90

519
00:17:12,240 --> 00:17:13,599
of the time

520
00:17:13,599 --> 00:17:15,520
and even when we hit 100 000 we're only

521
00:17:15,520 --> 00:17:17,760
getting incorrect predictions 20 of the

522
00:17:17,760 --> 00:17:19,839
time

523
00:17:20,400 --> 00:17:21,679
okay

524
00:17:21,679 --> 00:17:22,640
um

525
00:17:22,640 --> 00:17:23,919
okay just before i finish i'd like to

526
00:17:23,919 --> 00:17:26,000
speak a little bit about the limitations

527
00:17:26,000 --> 00:17:28,640
of this work and actually pretty much

528
00:17:28,640 --> 00:17:30,880
most website fingerprinting research

529
00:17:30,880 --> 00:17:33,280
so the first problem is we have this

530
00:17:33,280 --> 00:17:35,520
bunch of websites this unmonitored data

531
00:17:35,520 --> 00:17:37,760
set and this monitored data set which

532
00:17:37,760 --> 00:17:39,840
has websites in it and

533
00:17:39,840 --> 00:17:41,679
we just assumed that

534
00:17:41,679 --> 00:17:43,280
someone would browse to any of these

535
00:17:43,280 --> 00:17:45,200
uniformly at random right so some

536
00:17:45,200 --> 00:17:47,200
uniform probability that doesn't really

537
00:17:47,200 --> 00:17:49,200
make sense i mean people have different

538
00:17:49,200 --> 00:17:51,360
tastes you know people some people may

539
00:17:51,360 --> 00:17:53,039
visit social media sites all the time

540
00:17:53,039 --> 00:17:54,559
some people may visit new sites all the

541
00:17:54,559 --> 00:17:55,440
time

542
00:17:55,440 --> 00:17:57,919
and so if we could before we launched

543
00:17:57,919 --> 00:18:00,400
the attack directly have an informed

544
00:18:00,400 --> 00:18:03,760
prior that um that shows like which type

545
00:18:03,760 --> 00:18:05,679
of site people may visit

546
00:18:05,679 --> 00:18:07,679
then i expect we could kind of remove

547
00:18:07,679 --> 00:18:09,840
some of these sites from the from the uh

548
00:18:09,840 --> 00:18:11,919
from the from this data set and have a

549
00:18:11,919 --> 00:18:13,120
much better

550
00:18:13,120 --> 00:18:14,720
much better results

551
00:18:14,720 --> 00:18:15,679
get

552
00:18:15,679 --> 00:18:17,360
estimating this prior but without some

553
00:18:17,360 --> 00:18:18,559
kind of side knowledge of who you're

554
00:18:18,559 --> 00:18:20,640
attacking i think is

555
00:18:20,640 --> 00:18:22,000
it doesn't it's not clear to me how to

556
00:18:22,000 --> 00:18:25,200
do that so that's one limitation

557
00:18:25,200 --> 00:18:27,120
uh the other problem is that the website

558
00:18:27,120 --> 00:18:28,720
for immigrating research basically

559
00:18:28,720 --> 00:18:30,320
cheats

560
00:18:30,320 --> 00:18:32,640
given some stream of data some network

561
00:18:32,640 --> 00:18:34,880
data network traffic data we assume that

562
00:18:34,880 --> 00:18:36,640
the attacker can

563
00:18:36,640 --> 00:18:37,679
pretty much

564
00:18:37,679 --> 00:18:39,840
like you know perfectly know when the

565
00:18:39,840 --> 00:18:41,840
start and stop of a website load is and

566
00:18:41,840 --> 00:18:43,520
also that the client doesn't do things

567
00:18:43,520 --> 00:18:45,840
like multiple tab browsing it doesn't

568
00:18:45,840 --> 00:18:46,799
they don't

569
00:18:46,799 --> 00:18:48,240
listen to music or downloads into the

570
00:18:48,240 --> 00:18:49,520
background which may add noise to the

571
00:18:49,520 --> 00:18:50,640
signal

572
00:18:50,640 --> 00:18:52,000
but of course you know people do do

573
00:18:52,000 --> 00:18:54,000
these things people do multiple tab

574
00:18:54,000 --> 00:18:56,240
browsing on tour they download things

575
00:18:56,240 --> 00:18:58,799
maybe in the background

576
00:18:58,799 --> 00:19:01,679
and so until we know how well

577
00:19:01,679 --> 00:19:03,520
these uh how well these attacks cope

578
00:19:03,520 --> 00:19:06,080
with this this more realistic scenario

579
00:19:06,080 --> 00:19:08,559
i don't think it's um right to say that

580
00:19:08,559 --> 00:19:10,240
maybe toy users are actually vulnerable

581
00:19:10,240 --> 00:19:12,240
to these attacks

582
00:19:12,240 --> 00:19:14,400
so taiwan did some pretty cool research

583
00:19:14,400 --> 00:19:16,080
at pets actually this year that started

584
00:19:16,080 --> 00:19:18,720
to look into this but there's much more

585
00:19:18,720 --> 00:19:21,280
research that should be done here

586
00:19:21,280 --> 00:19:22,160
okay

587
00:19:22,160 --> 00:19:24,640
but in conclusion uh

588
00:19:24,640 --> 00:19:26,480
i think the open world

589
00:19:26,480 --> 00:19:27,840
there was kind of an assumption that the

590
00:19:27,840 --> 00:19:30,000
open world presented a really big

591
00:19:30,000 --> 00:19:32,160
problem in that the actual total number

592
00:19:32,160 --> 00:19:34,720
of false alarms overwhelmed the

593
00:19:34,720 --> 00:19:36,880
overwhelmed the attacker as you increase

594
00:19:36,880 --> 00:19:39,200
the number of unmonitored sites

595
00:19:39,200 --> 00:19:41,039
and

596
00:19:41,039 --> 00:19:42,880
when we're accessing against you know 40

597
00:19:42,880 --> 00:19:45,760
or 30 000 um unmonitored sites that

598
00:19:45,760 --> 00:19:47,520
wasn't the case we're getting accuracies

599
00:19:47,520 --> 00:19:50,799
in you know the 90 percentile

600
00:19:50,799 --> 00:19:53,679
and even when we increase it to like uh

601
00:19:53,679 --> 00:19:55,760
100 000 even in the

602
00:19:55,760 --> 00:19:57,600
in the hidden service data set we were

603
00:19:57,600 --> 00:19:59,280
still getting you know very very

604
00:19:59,280 --> 00:20:02,799
accurate results high accurate results

605
00:20:02,799 --> 00:20:04,720
so

606
00:20:04,720 --> 00:20:06,240
and you know this attack these attacks

607
00:20:06,240 --> 00:20:07,679
are only going to you know increase in

608
00:20:07,679 --> 00:20:09,520
accuracy like people are going to use

609
00:20:09,520 --> 00:20:11,120
better techniques than what i've done i

610
00:20:11,120 --> 00:20:13,840
mean i just use two very standard um

611
00:20:13,840 --> 00:20:15,440
machine learning techniques people can

612
00:20:15,440 --> 00:20:17,280
are going to start using better like you

613
00:20:17,280 --> 00:20:19,039
know deep learning techniques like i

614
00:20:19,039 --> 00:20:20,880
assume and probably getting much more

615
00:20:20,880 --> 00:20:22,400
much better results so i don't think

616
00:20:22,400 --> 00:20:26,240
these kind of problems are intractable

617
00:20:26,240 --> 00:20:28,080
the other the other thing that we found

618
00:20:28,080 --> 00:20:29,039
was there is definitely

619
00:20:29,039 --> 00:20:30,720
distinguishability between tour hidden

620
00:20:30,720 --> 00:20:33,440
services and normal websites meaning

621
00:20:33,440 --> 00:20:35,360
that if i give you if you give me some

622
00:20:35,360 --> 00:20:37,360
network traffic i can tell

623
00:20:37,360 --> 00:20:38,880
with some high degree of confidence

624
00:20:38,880 --> 00:20:40,240
whether you're actually browsing a tour

625
00:20:40,240 --> 00:20:42,400
hand service or not

626
00:20:42,400 --> 00:20:44,400
because towards services

627
00:20:44,400 --> 00:20:46,000
by their very nature hosts very

628
00:20:46,000 --> 00:20:48,400
sensitive content that is believes

629
00:20:48,400 --> 00:20:50,400
people that you know access

630
00:20:50,400 --> 00:20:52,240
this sensitive content to

631
00:20:52,240 --> 00:20:54,640
vulnerable to this kind of attack

632
00:20:54,640 --> 00:20:57,200
um and so i think it's worth trying to

633
00:20:57,200 --> 00:20:59,520
research and why there is this

634
00:20:59,520 --> 00:21:01,280
distinguishability so we can then

635
00:21:01,280 --> 00:21:03,600
mitigate it

636
00:21:03,600 --> 00:21:06,880
all the code is available on my website

637
00:21:06,880 --> 00:21:09,200
and the data and feel free to ask me any

638
00:21:09,200 --> 00:21:11,120
questions now or later

639
00:21:11,120 --> 00:21:12,810
thank you

640
00:21:12,810 --> 00:21:16,200
[Applause]

641
00:21:18,960 --> 00:21:21,360
uh aaron johnson nail research lab uh at

642
00:21:21,360 --> 00:21:23,120
the very beginning you listed 100

643
00:21:23,120 --> 00:21:26,080
something features and you were 150 yes

644
00:21:26,080 --> 00:21:28,000
okay then you were listing how effective

645
00:21:28,000 --> 00:21:30,240
they were uh how did you obtain those

646
00:21:30,240 --> 00:21:31,520
features where did you get them what

647
00:21:31,520 --> 00:21:33,120
were they so

648
00:21:33,120 --> 00:21:34,559
i mean the full list is available in the

649
00:21:34,559 --> 00:21:35,520
paper

650
00:21:35,520 --> 00:21:38,400
uh there were things like you know

651
00:21:38,400 --> 00:21:40,000
there were things like you know timing

652
00:21:40,000 --> 00:21:41,840
features like the times the time that

653
00:21:41,840 --> 00:21:43,440
the page took to load are volume

654
00:21:43,440 --> 00:21:45,360
features like the time that the total

655
00:21:45,360 --> 00:21:47,440
number of um packets that were sent and

656
00:21:47,440 --> 00:21:49,440
received or in a communication

657
00:21:49,440 --> 00:21:51,440
during a website load and there are

658
00:21:51,440 --> 00:21:53,200
standard features that people have used

659
00:21:53,200 --> 00:21:54,880
time time again in website

660
00:21:54,880 --> 00:21:56,559
fingerprinting research

661
00:21:56,559 --> 00:21:57,840
but the full voice is available in my

662
00:21:57,840 --> 00:22:00,400
paper i see so you manually constructed

663
00:22:00,400 --> 00:22:01,600
that yes it's not a it's not an

664
00:22:01,600 --> 00:22:03,200
automatic there's no like kind of

665
00:22:03,200 --> 00:22:05,120
automatic feature generation is uh you

666
00:22:05,120 --> 00:22:10,039
know it's handmade yes okay thanks

667
00:22:13,919 --> 00:22:17,520
david field from uc berkeley uh

668
00:22:17,520 --> 00:22:19,280
the tour hidden service protocol the

669
00:22:19,280 --> 00:22:20,799
beginning with the introduction point in

670
00:22:20,799 --> 00:22:22,480
the rendezvous point is going to happen

671
00:22:22,480 --> 00:22:23,919
for every

672
00:22:23,919 --> 00:22:25,840
access to a tour hidden service

673
00:22:25,840 --> 00:22:27,840
is that process

674
00:22:27,840 --> 00:22:29,360
noisy in terms of the features it

675
00:22:29,360 --> 00:22:32,159
generates or is it consistent and also

676
00:22:32,159 --> 00:22:34,000
did you feed that was that part of the

677
00:22:34,000 --> 00:22:36,000
input to your featurization or did you

678
00:22:36,000 --> 00:22:38,080
start it when the website starts to load

679
00:22:38,080 --> 00:22:39,360
we started

680
00:22:39,360 --> 00:22:42,000
um in both scenarios so when we first

681
00:22:42,000 --> 00:22:44,640
started um researching this we

682
00:22:44,640 --> 00:22:46,559
chose to actually fingerprint the entire

683
00:22:46,559 --> 00:22:48,080
process so from the introduction point

684
00:22:48,080 --> 00:22:49,679
to the rendezvous point i think albert

685
00:22:49,679 --> 00:22:51,919
quan from maybe from actually this venue

686
00:22:51,919 --> 00:22:55,280
last year and found that these kind of

687
00:22:55,280 --> 00:22:57,120
fingerprinting these circuits

688
00:22:57,120 --> 00:22:59,520
leaked a lot of information so it was

689
00:22:59,520 --> 00:23:01,440
it's possible to i mean because it's

690
00:23:01,440 --> 00:23:03,120
circuit creation no matter what even if

691
00:23:03,120 --> 00:23:04,320
you was visiting you know a normal

692
00:23:04,320 --> 00:23:06,640
website and it's and he found that it's

693
00:23:06,640 --> 00:23:08,880
easy to distinguish if you're

694
00:23:08,880 --> 00:23:10,960
having a circuit creation to then access

695
00:23:10,960 --> 00:23:12,400
a hidden service rather than a normal

696
00:23:12,400 --> 00:23:13,440
website

697
00:23:13,440 --> 00:23:15,919
and the other reason that i think maybe

698
00:23:15,919 --> 00:23:17,440
there's some kind of distinguishability

699
00:23:17,440 --> 00:23:19,120
between touring services and standard

700
00:23:19,120 --> 00:23:20,880
websites is that

701
00:23:20,880 --> 00:23:23,440
we found that um the landing pages of

702
00:23:23,440 --> 00:23:25,600
hidden services were much much smaller

703
00:23:25,600 --> 00:23:28,720
than um normal websites so i mean the

704
00:23:28,720 --> 00:23:30,240
toy and service landing pages were

705
00:23:30,240 --> 00:23:31,840
usually to some kind of forum and they

706
00:23:31,840 --> 00:23:33,120
you know they were in the order of like

707
00:23:33,120 --> 00:23:34,720
less than a megabyte

708
00:23:34,720 --> 00:23:37,679
and and maybe that kind of

709
00:23:37,679 --> 00:23:39,679
distinguished them from normal

710
00:23:39,679 --> 00:23:41,360
normal pages but that's you know that's

711
00:23:41,360 --> 00:23:44,479
a guess i'm not sure why

712
00:23:46,799 --> 00:23:49,360
i have one question for you as well

713
00:23:49,360 --> 00:23:50,799
so given that the state of website

714
00:23:50,799 --> 00:23:52,640
fingerprinting attacks seems to be

715
00:23:52,640 --> 00:23:54,720
getting better every year or with every

716
00:23:54,720 --> 00:23:56,240
conference

717
00:23:56,240 --> 00:23:58,240
how should anonymity systems such as the

718
00:23:58,240 --> 00:24:00,720
thor project respond

719
00:24:00,720 --> 00:24:03,200
to these threats and i'm also curious as

720
00:24:03,200 --> 00:24:04,480
an aside if you've discussed these

721
00:24:04,480 --> 00:24:05,760
attacks with someone from the dart

722
00:24:05,760 --> 00:24:06,960
project and what their thoughts have

723
00:24:06,960 --> 00:24:09,440
been so

724
00:24:09,440 --> 00:24:11,039
um

725
00:24:11,039 --> 00:24:13,120
i think the tourism service

726
00:24:13,120 --> 00:24:15,200
the tour project introduced things like

727
00:24:15,200 --> 00:24:16,640
a few years ago like randomized

728
00:24:16,640 --> 00:24:19,520
pipelining that you know randomizes the

729
00:24:19,520 --> 00:24:21,520
order that requests are made

730
00:24:21,520 --> 00:24:23,840
um i think that quite rightly they're

731
00:24:23,840 --> 00:24:25,600
unwilling to

732
00:24:25,600 --> 00:24:27,120
introduce them

733
00:24:27,120 --> 00:24:28,159
heavy

734
00:24:28,159 --> 00:24:30,000
heavy defenses right i mean you could

735
00:24:30,000 --> 00:24:32,080
just pad every website with you know

736
00:24:32,080 --> 00:24:33,679
hundreds and hundreds of extra packets

737
00:24:33,679 --> 00:24:35,440
and just confuse classifiers it's quite

738
00:24:35,440 --> 00:24:38,159
easy to do and to do that without you

739
00:24:38,159 --> 00:24:38,880
know

740
00:24:38,880 --> 00:24:40,960
having a huge like huge expensive

741
00:24:40,960 --> 00:24:43,120
bandwidth which i wrote quite rightly to

742
00:24:43,120 --> 00:24:44,720
the tour project is probably concerned

743
00:24:44,720 --> 00:24:47,520
with um is difficult so there's been

744
00:24:47,520 --> 00:24:49,360
some research quite recently that's done

745
00:24:49,360 --> 00:24:50,799
that's done um

746
00:24:50,799 --> 00:24:52,240
that's looked into probabilistic

747
00:24:52,240 --> 00:24:54,159
techniques to you know inserting packets

748
00:24:54,159 --> 00:24:56,000
with some instead of practice into some

749
00:24:56,000 --> 00:24:57,840
kind of stream with some kind of you

750
00:24:57,840 --> 00:24:58,840
know

751
00:24:58,840 --> 00:25:00,400
probabilistic

752
00:25:00,400 --> 00:25:01,679
schemes

753
00:25:01,679 --> 00:25:02,960
uh

754
00:25:02,960 --> 00:25:04,720
but until

755
00:25:04,720 --> 00:25:06,799
we find a defense that you know

756
00:25:06,799 --> 00:25:09,039
has not too high a bandwidth overhead i

757
00:25:09,039 --> 00:25:10,960
don't think the tour projects is willing

758
00:25:10,960 --> 00:25:12,400
to

759
00:25:12,400 --> 00:25:14,720
introduce it especially especially when

760
00:25:14,720 --> 00:25:17,679
we haven't really proven that these

761
00:25:17,679 --> 00:25:19,200
attacks are

762
00:25:19,200 --> 00:25:20,480
you know

763
00:25:20,480 --> 00:25:22,559
the toy users are practically vulnerable

764
00:25:22,559 --> 00:25:25,279
to these attacks

765
00:25:26,960 --> 00:25:29,200
so you mentioned um

766
00:25:29,200 --> 00:25:31,440
some limitations of this work about the

767
00:25:31,440 --> 00:25:34,559
way that you were doing the crawling

768
00:25:34,559 --> 00:25:36,159
i was wondering which of these things do

769
00:25:36,159 --> 00:25:37,919
you think would have the most impact if

770
00:25:37,919 --> 00:25:39,440
you actually like

771
00:25:39,440 --> 00:25:40,960
in terms of methodology which thing

772
00:25:40,960 --> 00:25:42,240
would you do first to try to be more

773
00:25:42,240 --> 00:25:43,840
realistic

774
00:25:43,840 --> 00:25:45,760
too sorry to be more realistic more

775
00:25:45,760 --> 00:25:48,000
realistic yeah i think the um the big

776
00:25:48,000 --> 00:25:50,080
one the big thing that when it comes to

777
00:25:50,080 --> 00:25:52,400
me is estimating within a stream of

778
00:25:52,400 --> 00:25:54,400
network traffic where the actual start

779
00:25:54,400 --> 00:25:56,960
and stop time if websites are and the

780
00:25:56,960 --> 00:25:58,559
ability to

781
00:25:58,559 --> 00:25:59,520
um

782
00:25:59,520 --> 00:26:02,400
recognize a website perhaps if you can't

783
00:26:02,400 --> 00:26:04,480
actually capture the entire

784
00:26:04,480 --> 00:26:05,440
um

785
00:26:05,440 --> 00:26:07,440
entire load when it's not being when

786
00:26:07,440 --> 00:26:09,120
it's not noisy right when it when people

787
00:26:09,120 --> 00:26:10,960
aren't doing multiple tabs and things

788
00:26:10,960 --> 00:26:12,559
like that i think that's probably the

789
00:26:12,559 --> 00:26:13,679
next step in terms of website

790
00:26:13,679 --> 00:26:16,240
fingerprinting research

791
00:26:16,240 --> 00:26:20,039
all right let's thank jimmy again

792
00:26:27,520 --> 00:26:29,600
you

