1
00:00:10,719 --> 00:00:13,040
hello everyone welcome to

2
00:00:13,040 --> 00:00:14,719
my presentation

3
00:00:14,719 --> 00:00:17,039
this is actually our recent research on

4
00:00:17,039 --> 00:00:20,480
ransomware it's a follow-up project on

5
00:00:20,480 --> 00:00:22,800
our previous study and ransomware that

6
00:00:22,800 --> 00:00:25,519
published last year at timba

7
00:00:25,519 --> 00:00:26,240
so

8
00:00:26,240 --> 00:00:28,160
the first question is uh what is the

9
00:00:28,160 --> 00:00:31,439
ransomware attack transformer attack is

10
00:00:31,439 --> 00:00:32,880
a class of

11
00:00:32,880 --> 00:00:34,160
malware

12
00:00:34,160 --> 00:00:37,840
that locks the digital resources of the

13
00:00:37,840 --> 00:00:40,879
user and request money

14
00:00:40,879 --> 00:00:43,520
so after a successful ransomware attack

15
00:00:43,520 --> 00:00:47,039
the user has two options one is to pay

16
00:00:47,039 --> 00:00:49,600
the ransom fee with

17
00:00:49,600 --> 00:00:53,039
the hope of receiving the data back or

18
00:00:53,039 --> 00:00:56,320
permanently losing access to the data

19
00:00:56,320 --> 00:00:58,719
so if the user agrees to pay the ransom

20
00:00:58,719 --> 00:00:59,920
fee

21
00:00:59,920 --> 00:01:02,079
he will receive the

22
00:01:02,079 --> 00:01:04,319
private key that is generated remotely

23
00:01:04,319 --> 00:01:05,040
by

24
00:01:05,040 --> 00:01:05,920
the

25
00:01:05,920 --> 00:01:07,680
in the cnc server

26
00:01:07,680 --> 00:01:12,720
and can be used for decrypting the files

27
00:01:12,720 --> 00:01:14,400
this is a typical

28
00:01:14,400 --> 00:01:16,799
ransom node that is shown to user after

29
00:01:16,799 --> 00:01:19,600
successful ransom and a ransomware

30
00:01:19,600 --> 00:01:21,040
attack

31
00:01:21,040 --> 00:01:23,680
depending on the ransomware family or

32
00:01:23,680 --> 00:01:26,560
the geographical location of the user

33
00:01:26,560 --> 00:01:28,880
a different ransom note

34
00:01:28,880 --> 00:01:32,158
can be shown to the user

35
00:01:32,240 --> 00:01:33,439
so

36
00:01:33,439 --> 00:01:35,680
the the attack is very straightforward

37
00:01:35,680 --> 00:01:39,360
and it's very simple and it has been

38
00:01:39,360 --> 00:01:42,960
in the wild since uh last decade but the

39
00:01:42,960 --> 00:01:45,200
recent resurgence of this class of

40
00:01:45,200 --> 00:01:47,360
malware has resulted in

41
00:01:47,360 --> 00:01:50,560
increasing concern on how to detect or

42
00:01:50,560 --> 00:01:51,759
defend

43
00:01:51,759 --> 00:01:54,399
against this class of malware

44
00:01:54,399 --> 00:01:57,439
for example the recent attack on

45
00:01:57,439 --> 00:02:00,640
hospitals across the u.s at least three

46
00:02:00,640 --> 00:02:02,640
hospitals were impacted

47
00:02:02,640 --> 00:02:05,200
by ransomware were on the news and

48
00:02:05,200 --> 00:02:08,399
universities canada were also

49
00:02:08,399 --> 00:02:11,120
was also impacted with ransomware and

50
00:02:11,120 --> 00:02:12,879
last year police department in

51
00:02:12,879 --> 00:02:14,560
massachusetts had to pay the ransom in

52
00:02:14,560 --> 00:02:17,360
order to get the data back

53
00:02:17,360 --> 00:02:19,360
so the there is a

54
00:02:19,360 --> 00:02:20,720
no

55
00:02:20,720 --> 00:02:22,800
estimation about the financial cost of

56
00:02:22,800 --> 00:02:25,760
ransomware but a recent report shows

57
00:02:25,760 --> 00:02:29,040
that uh in just three months more than

58
00:02:29,040 --> 00:02:31,760
two million dollars were the amount that

59
00:02:31,760 --> 00:02:32,560
they

60
00:02:32,560 --> 00:02:34,400
uh made

61
00:02:34,400 --> 00:02:35,360
by

62
00:02:35,360 --> 00:02:38,480
uh data extortion from the user

63
00:02:38,480 --> 00:02:40,160
so the attack is

64
00:02:40,160 --> 00:02:42,319
has a impact

65
00:02:42,319 --> 00:02:44,480
and it's a destructive and make

66
00:02:44,480 --> 00:02:47,040
users suffer so the question is how we

67
00:02:47,040 --> 00:02:50,160
can detect or defend against this class

68
00:02:50,160 --> 00:02:52,799
of malware

69
00:02:54,160 --> 00:02:56,160
there are at least three approaches that

70
00:02:56,160 --> 00:02:58,640
can minimize the risk of ransomware one

71
00:02:58,640 --> 00:03:00,640
is and the most important one is

72
00:03:00,640 --> 00:03:02,800
educating the end user

73
00:03:02,800 --> 00:03:05,599
for example having a reliable backup

74
00:03:05,599 --> 00:03:09,440
policy for the user can help them or

75
00:03:09,440 --> 00:03:11,840
teaching them for

76
00:03:11,840 --> 00:03:13,120
having a

77
00:03:13,120 --> 00:03:14,000
safe

78
00:03:14,000 --> 00:03:15,760
browsing on a web for example not

79
00:03:15,760 --> 00:03:18,720
clicking every links they see or

80
00:03:18,720 --> 00:03:21,280
opening every attachment that they have

81
00:03:21,280 --> 00:03:23,280
in their email

82
00:03:23,280 --> 00:03:25,280
and two developing

83
00:03:25,280 --> 00:03:27,040
tools that help

84
00:03:27,040 --> 00:03:30,080
defenders and reverse engineers to get

85
00:03:30,080 --> 00:03:32,480
insight about internal

86
00:03:32,480 --> 00:03:35,360
behavior of a ransomware for example how

87
00:03:35,360 --> 00:03:37,760
the crypto system works how the keys are

88
00:03:37,760 --> 00:03:39,280
generated

89
00:03:39,280 --> 00:03:40,879
how the keys are maintained by the

90
00:03:40,879 --> 00:03:42,239
crypto system

91
00:03:42,239 --> 00:03:44,959
and the three is

92
00:03:44,959 --> 00:03:47,280
protection approaches that

93
00:03:47,280 --> 00:03:50,640
can sit on the end user machine monitor

94
00:03:50,640 --> 00:03:53,280
the white system and

95
00:03:53,280 --> 00:03:57,200
detect ransomware and kill once it start

96
00:03:57,200 --> 00:04:01,760
encrypting the user's data in our in our

97
00:04:01,760 --> 00:04:03,840
in this slide we're talking about the

98
00:04:03,840 --> 00:04:05,519
second approach which is

99
00:04:05,519 --> 00:04:08,640
a detection tool that helps researcher

100
00:04:08,640 --> 00:04:09,439
and

101
00:04:09,439 --> 00:04:12,080
reverse engineers to

102
00:04:12,080 --> 00:04:14,720
get insight about internal behavior of

103
00:04:14,720 --> 00:04:17,279
this class of malware

104
00:04:17,279 --> 00:04:19,040
so this is our thread model in our

105
00:04:19,040 --> 00:04:20,639
thread model we

106
00:04:20,639 --> 00:04:23,600
assume that a ransomware like any other

107
00:04:23,600 --> 00:04:26,320
classes of malware

108
00:04:26,320 --> 00:04:29,919
can use any techniques to attack the

109
00:04:29,919 --> 00:04:32,880
user for example they can inject code

110
00:04:32,880 --> 00:04:36,160
into the context of benign application

111
00:04:36,160 --> 00:04:38,000
in order to evade

112
00:04:38,000 --> 00:04:39,840
some

113
00:04:39,840 --> 00:04:41,199
well-known

114
00:04:41,199 --> 00:04:44,320
detection techniques or perform

115
00:04:44,320 --> 00:04:46,800
encrypted communication with the cnc

116
00:04:46,800 --> 00:04:51,040
server to consult about the client and

117
00:04:51,040 --> 00:04:52,479
for example

118
00:04:52,479 --> 00:04:53,680
get the

119
00:04:53,680 --> 00:04:56,960
private key the public key and three is

120
00:04:56,960 --> 00:04:58,320
uh

121
00:04:58,320 --> 00:05:01,600
that we we assume that it can use any

122
00:05:01,600 --> 00:05:03,120
customized or

123
00:05:03,120 --> 00:05:05,039
standard crypto system in order to

124
00:05:05,039 --> 00:05:07,120
attack the user file

125
00:05:07,120 --> 00:05:10,720
we also assume that the os kernel the

126
00:05:10,720 --> 00:05:12,880
hardware and software stack and the

127
00:05:12,880 --> 00:05:14,240
kernel are

128
00:05:14,240 --> 00:05:16,080
free from malicious code this is

129
00:05:16,080 --> 00:05:18,400
actually a fair assumption

130
00:05:18,400 --> 00:05:20,720
because all of the ransomware samples

131
00:05:20,720 --> 00:05:22,800
that are in the weld are

132
00:05:22,800 --> 00:05:25,280
in the user mode and they don't attack

133
00:05:25,280 --> 00:05:28,479
the kernel driver in caramel

134
00:05:28,479 --> 00:05:29,440
so

135
00:05:29,440 --> 00:05:31,360
in our approach

136
00:05:31,360 --> 00:05:33,600
and the tool that we develop

137
00:05:33,600 --> 00:05:35,199
is

138
00:05:35,199 --> 00:05:37,680
try to detect ransomware and analyze

139
00:05:37,680 --> 00:05:39,759
them during the detection phase it's not

140
00:05:39,759 --> 00:05:41,199
an end user

141
00:05:41,199 --> 00:05:42,960
protection approach

142
00:05:42,960 --> 00:05:44,880
and it can be

143
00:05:44,880 --> 00:05:48,080
used on top of dynamic analysis system

144
00:05:48,080 --> 00:05:50,479
as a public service

145
00:05:50,479 --> 00:05:53,520
and provide insight about uh the

146
00:05:53,520 --> 00:05:56,000
ransomware and it can be used for sample

147
00:05:56,000 --> 00:05:57,440
sharing about

148
00:05:57,440 --> 00:05:58,319
for

149
00:05:58,319 --> 00:06:01,199
uh reverse engineers for researchers and

150
00:06:01,199 --> 00:06:02,080
uh

151
00:06:02,080 --> 00:06:03,680
for the defenders

152
00:06:03,680 --> 00:06:06,160
so but the question is how we can detect

153
00:06:06,160 --> 00:06:09,280
a ransomware sample

154
00:06:11,280 --> 00:06:14,240
unlike other classes of malware that try

155
00:06:14,240 --> 00:06:17,520
to be as stealthy as possible

156
00:06:17,520 --> 00:06:19,360
in ransomware attacks

157
00:06:19,360 --> 00:06:21,600
that when you are infected with

158
00:06:21,600 --> 00:06:24,319
ransomware you are informed that you are

159
00:06:24,319 --> 00:06:25,840
infected

160
00:06:25,840 --> 00:06:28,560
or there are some uh

161
00:06:28,560 --> 00:06:31,199
distinct behavior that advancement has

162
00:06:31,199 --> 00:06:33,120
because encryption for example is

163
00:06:33,120 --> 00:06:35,919
involved in the attack there is an

164
00:06:35,919 --> 00:06:37,759
entropy change in the content of the

165
00:06:37,759 --> 00:06:39,440
files right

166
00:06:39,440 --> 00:06:42,720
or because the the malicious process

167
00:06:42,720 --> 00:06:44,479
wants to

168
00:06:44,479 --> 00:06:47,039
encrypt as many as file as possible in

169
00:06:47,039 --> 00:06:49,759
order to maximize the chance of

170
00:06:49,759 --> 00:06:51,039
res getting

171
00:06:51,039 --> 00:06:52,720
money from the user

172
00:06:52,720 --> 00:06:55,440
you see iteration over the files or you

173
00:06:55,440 --> 00:06:58,639
see a modal dialogue that shows that the

174
00:06:58,639 --> 00:07:02,240
user is infected so if we use this high

175
00:07:02,240 --> 00:07:04,400
level heuristics and

176
00:07:04,400 --> 00:07:06,880
translate them into concrete defense

177
00:07:06,880 --> 00:07:09,039
approaches it's possible to detect a

178
00:07:09,039 --> 00:07:11,599
significant number of ransomware in the

179
00:07:11,599 --> 00:07:13,520
wild

180
00:07:13,520 --> 00:07:17,759
so the rest of this talk is actually the

181
00:07:17,759 --> 00:07:19,919
introduction of the tools and techniques

182
00:07:19,919 --> 00:07:21,919
we used and the evaluation of our

183
00:07:21,919 --> 00:07:24,479
approach to detect ransomware

184
00:07:24,479 --> 00:07:26,800
so our our approach is

185
00:07:26,800 --> 00:07:28,880
a system that

186
00:07:28,880 --> 00:07:30,479
assess in the kernel

187
00:07:30,479 --> 00:07:32,400
and perform wide

188
00:07:32,400 --> 00:07:35,120
system-wide process monitoring and the

189
00:07:35,120 --> 00:07:36,880
interaction of the process with the file

190
00:07:36,880 --> 00:07:37,840
system

191
00:07:37,840 --> 00:07:39,280
and for

192
00:07:39,280 --> 00:07:42,639
requests like read and write we get we

193
00:07:42,639 --> 00:07:45,520
calculate the entropy of uh the data

194
00:07:45,520 --> 00:07:46,639
block

195
00:07:46,639 --> 00:07:48,479
when they want to

196
00:07:48,479 --> 00:07:49,680
for example

197
00:07:49,680 --> 00:07:52,960
touch a file we i collect some other

198
00:07:52,960 --> 00:07:54,879
things that i'm going to talk about in

199
00:07:54,879 --> 00:07:57,680
the following slides

200
00:07:57,680 --> 00:08:01,039
so in order to

201
00:08:01,280 --> 00:08:03,759
detect ransomware we have to address two

202
00:08:03,759 --> 00:08:05,840
classes of ransomware one is

203
00:08:05,840 --> 00:08:08,879
cryptographic ransomware that attack the

204
00:08:08,879 --> 00:08:11,919
user files and the other is desktop

205
00:08:11,919 --> 00:08:15,919
locker that simply locks the desktop

206
00:08:15,919 --> 00:08:17,599
so in order to

207
00:08:17,599 --> 00:08:20,639
detect cryptographic ransomware we

208
00:08:20,639 --> 00:08:22,639
generate a fake but attractive

209
00:08:22,639 --> 00:08:25,039
environment for the malware to run and

210
00:08:25,039 --> 00:08:28,400
then sit in the kernel and look at the

211
00:08:28,400 --> 00:08:30,319
interaction of the

212
00:08:30,319 --> 00:08:32,240
process with the file system so the

213
00:08:32,240 --> 00:08:33,519
question is

214
00:08:33,519 --> 00:08:36,399
why we generate fake

215
00:08:36,399 --> 00:08:38,559
user environment

216
00:08:38,559 --> 00:08:40,399
there are a couple of reasons for that

217
00:08:40,399 --> 00:08:43,839
the first reason is we want to make the

218
00:08:43,839 --> 00:08:46,080
dynamic analysis system as relaxed

219
00:08:46,080 --> 00:08:48,160
realistic as possible

220
00:08:48,160 --> 00:08:50,240
and two we want to

221
00:08:50,240 --> 00:08:53,519
protect the operating the the analysis

222
00:08:53,519 --> 00:08:57,120
environment from a certain user

223
00:08:57,120 --> 00:08:59,040
environment fingerprinting techniques

224
00:08:59,040 --> 00:09:00,160
that

225
00:09:00,160 --> 00:09:03,839
a malware can use for example and static

226
00:09:03,839 --> 00:09:05,760
environment analysis is very

227
00:09:05,760 --> 00:09:08,560
straightforward for the malware to

228
00:09:08,560 --> 00:09:11,600
find out for regardless of the fact that

229
00:09:11,600 --> 00:09:14,080
the sample is running in a bare metal

230
00:09:14,080 --> 00:09:18,240
environment or in a vm right

231
00:09:19,440 --> 00:09:23,120
so in order to do that we uh we want a

232
00:09:23,120 --> 00:09:24,240
strategy

233
00:09:24,240 --> 00:09:25,040
so

234
00:09:25,040 --> 00:09:27,040
uh

235
00:09:27,040 --> 00:09:29,600
in order to generate the content we

236
00:09:29,600 --> 00:09:32,240
generate files with real uh

237
00:09:32,240 --> 00:09:33,760
and valid content

238
00:09:33,760 --> 00:09:34,959
the

239
00:09:34,959 --> 00:09:37,600
the content look real realistic we

240
00:09:37,600 --> 00:09:39,200
distribute them randomly but

241
00:09:39,200 --> 00:09:41,040
meaningfully on the disk

242
00:09:41,040 --> 00:09:45,200
and the metadata of the files are

243
00:09:45,200 --> 00:09:48,160
designed to to simulate uh

244
00:09:48,160 --> 00:09:49,040
real

245
00:09:49,040 --> 00:09:51,440
user files for example the creation the

246
00:09:51,440 --> 00:09:52,800
modification

247
00:09:52,800 --> 00:09:54,720
and the access time

248
00:09:54,720 --> 00:09:57,440
are designed in such a way that

249
00:09:57,440 --> 00:10:00,080
the malware cannot easily detect whether

250
00:10:00,080 --> 00:10:04,040
it's automatically generated

251
00:10:04,160 --> 00:10:06,320
so we generate the content with and sit

252
00:10:06,320 --> 00:10:08,959
in the kernel

253
00:10:09,040 --> 00:10:09,839
and

254
00:10:09,839 --> 00:10:12,160
run the malware

255
00:10:12,160 --> 00:10:14,000
and log

256
00:10:14,000 --> 00:10:16,560
the interaction with the file system so

257
00:10:16,560 --> 00:10:19,440
we collect the time the process name the

258
00:10:19,440 --> 00:10:21,440
process id

259
00:10:21,440 --> 00:10:24,399
the request in form of irp

260
00:10:24,399 --> 00:10:26,640
the argument of the request

261
00:10:26,640 --> 00:10:29,760
and the entropy of

262
00:10:29,760 --> 00:10:34,959
the data buffer in case is read or write

263
00:10:38,640 --> 00:10:40,480
we analyze a

264
00:10:40,480 --> 00:10:43,279
wide range of ransomware families

265
00:10:43,279 --> 00:10:45,360
during our analysis

266
00:10:45,360 --> 00:10:49,040
and we found that regardless of what

267
00:10:49,040 --> 00:10:51,519
or how a ransomware

268
00:10:51,519 --> 00:10:52,560
attack

269
00:10:52,560 --> 00:10:55,680
the the user and in order to compromise

270
00:10:55,680 --> 00:10:57,120
it or

271
00:10:57,120 --> 00:10:59,360
being installed in the machine the

272
00:10:59,360 --> 00:11:01,680
low-level file system activity are very

273
00:11:01,680 --> 00:11:02,720
similar

274
00:11:02,720 --> 00:11:04,480
for example

275
00:11:04,480 --> 00:11:07,680
crypto locker and crypto wall are

276
00:11:07,680 --> 00:11:10,399
two different ransomware families

277
00:11:10,399 --> 00:11:13,279
but because they were using the same

278
00:11:13,279 --> 00:11:16,079
crypto api they were generating very

279
00:11:16,079 --> 00:11:18,800
similar i o activity in the car in in

280
00:11:18,800 --> 00:11:20,959
the low level uh

281
00:11:20,959 --> 00:11:23,040
file system request so

282
00:11:23,040 --> 00:11:25,279
based on that we

283
00:11:25,279 --> 00:11:28,480
categorize all the samples that we have

284
00:11:28,480 --> 00:11:30,800
based on their file system

285
00:11:30,800 --> 00:11:34,160
access request and we

286
00:11:34,160 --> 00:11:36,560
find out there are only three different

287
00:11:36,560 --> 00:11:39,200
classes based on the current ransomware

288
00:11:39,200 --> 00:11:42,000
attacks and the first one for example

289
00:11:42,000 --> 00:11:44,240
opens the file

290
00:11:44,240 --> 00:11:46,079
and reads the low entropy data and

291
00:11:46,079 --> 00:11:49,120
overwrite it with a high entropy data

292
00:11:49,120 --> 00:11:50,880
and in the second one

293
00:11:50,880 --> 00:11:53,519
what happens is that an encrypted

294
00:11:53,519 --> 00:11:57,040
version of the files is generated and

295
00:11:57,040 --> 00:11:58,240
is

296
00:11:58,240 --> 00:12:00,160
saved in

297
00:12:00,160 --> 00:12:01,920
some part of the disk

298
00:12:01,920 --> 00:12:06,079
and the original file is simply unlinked

299
00:12:06,079 --> 00:12:08,079
or deleted from the disk

300
00:12:08,079 --> 00:12:10,800
but the attacker found out that it's

301
00:12:10,800 --> 00:12:13,360
easy for the victim to recover those

302
00:12:13,360 --> 00:12:14,320
data

303
00:12:14,320 --> 00:12:16,800
uh that were unlinked from the decks so

304
00:12:16,800 --> 00:12:18,000
uh

305
00:12:18,000 --> 00:12:21,440
they changed their strategy and uh once

306
00:12:21,440 --> 00:12:24,079
they generated the encrypted version of

307
00:12:24,079 --> 00:12:25,120
the file

308
00:12:25,120 --> 00:12:26,000
they

309
00:12:26,000 --> 00:12:29,839
overwrite the original one with the

310
00:12:29,839 --> 00:12:32,079
random data

311
00:12:32,079 --> 00:12:34,320
a form of secure deletion

312
00:12:34,320 --> 00:12:38,279
on the original files

313
00:12:42,639 --> 00:12:45,600
these are three ransomware families that

314
00:12:45,600 --> 00:12:46,880
follow

315
00:12:46,880 --> 00:12:49,519
those i o access requests for example

316
00:12:49,519 --> 00:12:51,120
crypto wall

317
00:12:51,120 --> 00:12:53,279
read the low entropy data and write

318
00:12:53,279 --> 00:12:55,680
overwrite it with high entropy data

319
00:12:55,680 --> 00:12:57,600
a file coder

320
00:12:57,600 --> 00:13:00,639
simply deletes the original data by

321
00:13:00,639 --> 00:13:02,959
unlinking from the desk and

322
00:13:02,959 --> 00:13:05,600
the third one world

323
00:13:05,600 --> 00:13:07,680
uses a different

324
00:13:07,680 --> 00:13:10,160
cryptosystem and overrides the original

325
00:13:10,160 --> 00:13:12,880
data with

326
00:13:13,040 --> 00:13:14,720
some random

327
00:13:14,720 --> 00:13:17,279
bytes so having a

328
00:13:17,279 --> 00:13:19,519
sort of secure deletion

329
00:13:19,519 --> 00:13:21,839
function

330
00:13:23,040 --> 00:13:24,880
in addition to

331
00:13:24,880 --> 00:13:28,639
those three different i o requests

332
00:13:28,639 --> 00:13:31,680
because the attacker wants to

333
00:13:31,680 --> 00:13:35,040
maximize the chance of forcing the user

334
00:13:35,040 --> 00:13:37,519
to pay

335
00:13:37,600 --> 00:13:40,480
the malicious process

336
00:13:40,480 --> 00:13:42,800
encrypt as many files as possible so you

337
00:13:42,800 --> 00:13:45,279
see iteration of where the files

338
00:13:45,279 --> 00:13:47,600
regardless of what

339
00:13:47,600 --> 00:13:50,480
extension a file has you see exactly the

340
00:13:50,480 --> 00:13:53,760
same requests among different files

341
00:13:53,760 --> 00:13:57,040
by the same process

342
00:13:57,600 --> 00:14:00,480
that was actually our approach to

343
00:14:00,480 --> 00:14:02,639
detect crypto

344
00:14:02,639 --> 00:14:03,760
style or

345
00:14:03,760 --> 00:14:05,920
cryptographic ransomware

346
00:14:05,920 --> 00:14:08,160
in order to detect uh

347
00:14:08,160 --> 00:14:10,880
desktop locker ransomware we what we did

348
00:14:10,880 --> 00:14:12,639
was that first we

349
00:14:12,639 --> 00:14:14,800
take a snapshot of the clean state of

350
00:14:14,800 --> 00:14:16,399
the system

351
00:14:16,399 --> 00:14:18,079
and run the malware

352
00:14:18,079 --> 00:14:19,440
and

353
00:14:19,440 --> 00:14:20,639
then

354
00:14:20,639 --> 00:14:22,399
capture

355
00:14:22,399 --> 00:14:24,480
another snapshot

356
00:14:24,480 --> 00:14:25,839
of the system

357
00:14:25,839 --> 00:14:28,800
so if and ransomware attack has happened

358
00:14:28,800 --> 00:14:30,720
there is a ransom note that's shown to

359
00:14:30,720 --> 00:14:32,000
the user

360
00:14:32,000 --> 00:14:32,880
and

361
00:14:32,880 --> 00:14:34,880
because it is shown to user and is

362
00:14:34,880 --> 00:14:37,440
persistent there isn't a structural

363
00:14:37,440 --> 00:14:39,440
change between the

364
00:14:39,440 --> 00:14:43,120
the content of uh pre and post attack

365
00:14:43,120 --> 00:14:44,399
images

366
00:14:44,399 --> 00:14:46,480
so we define a score called the

367
00:14:46,480 --> 00:14:48,320
similarity score

368
00:14:48,320 --> 00:14:49,839
that

369
00:14:49,839 --> 00:14:52,240
compares the structural differences

370
00:14:52,240 --> 00:14:54,800
between two images so the the the

371
00:14:54,800 --> 00:14:57,600
similarity score is between zero and 1

372
00:14:57,600 --> 00:15:00,079
the values close to 1 means that there

373
00:15:00,079 --> 00:15:01,360
is a huge

374
00:15:01,360 --> 00:15:03,760
structural change in the image and the

375
00:15:03,760 --> 00:15:07,600
value is close to 0 means there's

376
00:15:07,600 --> 00:15:10,399
not significant changes in the

377
00:15:10,399 --> 00:15:13,839
content of the image

378
00:15:14,880 --> 00:15:18,079
in order to test the system and uh

379
00:15:18,079 --> 00:15:19,839
run the

380
00:15:19,839 --> 00:15:20,959
our tool

381
00:15:20,959 --> 00:15:23,360
to test with real word

382
00:15:23,360 --> 00:15:26,720
samples we use kaku sandbox

383
00:15:26,720 --> 00:15:29,199
the reason was that

384
00:15:29,199 --> 00:15:31,360
in order to provide it actually provide

385
00:15:31,360 --> 00:15:33,759
us with basic

386
00:15:33,759 --> 00:15:35,759
sandboxing services

387
00:15:35,759 --> 00:15:39,440
and we use windows xp for that because

388
00:15:39,440 --> 00:15:41,519
it is mainly supported by

389
00:15:41,519 --> 00:15:43,040
kaku but

390
00:15:43,040 --> 00:15:46,880
uh unveil can be installed on any uh

391
00:15:46,880 --> 00:15:49,440
operating system any windows operating

392
00:15:49,440 --> 00:15:50,959
system

393
00:15:50,959 --> 00:15:53,279
by just attaching to the file system

394
00:15:53,279 --> 00:15:54,959
driver

395
00:15:54,959 --> 00:15:57,279
we use the

396
00:15:57,279 --> 00:16:00,000
windows kernel drive driver framework

397
00:16:00,000 --> 00:16:03,519
which is formally supported

398
00:16:03,519 --> 00:16:04,639
way to

399
00:16:04,639 --> 00:16:06,240
develop

400
00:16:06,240 --> 00:16:08,639
monitoring services like antivirus

401
00:16:08,639 --> 00:16:10,560
companies and the

402
00:16:10,560 --> 00:16:13,360
antivirus scanners and also

403
00:16:13,360 --> 00:16:15,759
backup software use some or less the

404
00:16:15,759 --> 00:16:18,480
same approach

405
00:16:18,639 --> 00:16:21,120
and for those that are

406
00:16:21,120 --> 00:16:22,560
in uh

407
00:16:22,560 --> 00:16:25,279
malware research they know that uh

408
00:16:25,279 --> 00:16:27,519
running and and finding an active

409
00:16:27,519 --> 00:16:30,320
malware is very hard it's not easy

410
00:16:30,320 --> 00:16:32,399
so in order to make

411
00:16:32,399 --> 00:16:35,839
the system uh resilient against this

412
00:16:35,839 --> 00:16:38,880
fingerprinting techniques we actually

413
00:16:38,880 --> 00:16:42,560
what we did was uh making kaku more

414
00:16:42,560 --> 00:16:44,720
resilient about this

415
00:16:44,720 --> 00:16:47,759
fingerprinting by changing certain codes

416
00:16:47,759 --> 00:16:51,279
to in kaku sandbox in order to return

417
00:16:51,279 --> 00:16:53,839
fake response to cert certain finger

418
00:16:53,839 --> 00:16:56,079
printing techniques like for certain

419
00:16:56,079 --> 00:16:58,639
processes or

420
00:16:58,639 --> 00:17:00,079
registry keys

421
00:17:00,079 --> 00:17:02,320
of course there are more sophisticated

422
00:17:02,320 --> 00:17:04,240
ways to fingerprint their environment we

423
00:17:04,240 --> 00:17:06,319
were not able to do anything about them

424
00:17:06,319 --> 00:17:08,720
but these are the more straightforward

425
00:17:08,720 --> 00:17:11,679
approach that we were able to

426
00:17:11,679 --> 00:17:13,520
address

427
00:17:13,520 --> 00:17:14,959
we also

428
00:17:14,959 --> 00:17:16,720
use other

429
00:17:16,720 --> 00:17:18,880
antivision measures

430
00:17:18,880 --> 00:17:20,959
like defining

431
00:17:20,959 --> 00:17:24,160
multiple ntfs drives or changing the ip

432
00:17:24,160 --> 00:17:26,559
address or mac address these are the

433
00:17:26,559 --> 00:17:28,480
things that we did

434
00:17:28,480 --> 00:17:29,679
you can

435
00:17:29,679 --> 00:17:31,600
check out the paper for

436
00:17:31,600 --> 00:17:34,000
more details about

437
00:17:34,000 --> 00:17:37,200
our configuration

438
00:17:38,320 --> 00:17:40,880
we tested the system with our label and

439
00:17:40,880 --> 00:17:45,120
data ground truth data with 3500

440
00:17:45,120 --> 00:17:49,200
malware samples we collected from uh

441
00:17:49,200 --> 00:17:51,679
public repositories anabes

442
00:17:51,679 --> 00:17:54,720
and to security companies

443
00:17:54,720 --> 00:17:58,400
from those 35 000 samples

444
00:17:58,400 --> 00:18:00,960
1900 of them were active during the

445
00:18:00,960 --> 00:18:02,400
analysis

446
00:18:02,400 --> 00:18:05,440
and we also use uh some benign

447
00:18:05,440 --> 00:18:06,960
application including the

448
00:18:06,960 --> 00:18:09,919
ransomware-like

449
00:18:10,480 --> 00:18:12,960
programs for example

450
00:18:12,960 --> 00:18:14,400
uh

451
00:18:14,400 --> 00:18:17,039
this script aes script s delete in order

452
00:18:17,039 --> 00:18:19,679
to make our data set

453
00:18:19,679 --> 00:18:20,559
having

454
00:18:20,559 --> 00:18:21,600
both

455
00:18:21,600 --> 00:18:25,120
benign and malicious data set

456
00:18:26,320 --> 00:18:28,160
this is actually one of the false

457
00:18:28,160 --> 00:18:31,360
negative cases that we had you see

458
00:18:31,360 --> 00:18:34,160
and a structural change in the image

459
00:18:34,160 --> 00:18:36,640
but because it's not the the

460
00:18:36,640 --> 00:18:38,640
similarities score is not significant

461
00:18:38,640 --> 00:18:40,400
because it's transparent

462
00:18:40,400 --> 00:18:43,600
uh we were not able to detect that so

463
00:18:43,600 --> 00:18:46,400
in order to detect these cases and have

464
00:18:46,400 --> 00:18:48,000
a higher

465
00:18:48,000 --> 00:18:49,679
coverage of the data

466
00:18:49,679 --> 00:18:52,160
we perform an

467
00:18:52,160 --> 00:18:54,840
test by varying the the similarity

468
00:18:54,840 --> 00:18:59,360
threshold and we found that at point 32

469
00:18:59,360 --> 00:19:00,240
we

470
00:19:00,240 --> 00:19:02,160
have the highest

471
00:19:02,160 --> 00:19:05,039
recall was 100 precision on the label

472
00:19:05,039 --> 00:19:08,160
data set which means that if we detect a

473
00:19:08,160 --> 00:19:11,120
sample as ransomware it was a 100

474
00:19:11,120 --> 00:19:12,320
percent

475
00:19:12,320 --> 00:19:14,960
ransomware

476
00:19:18,799 --> 00:19:21,360
we also test our approach with unknown

477
00:19:21,360 --> 00:19:23,360
data set on samples

478
00:19:23,360 --> 00:19:25,280
we collected

479
00:19:25,280 --> 00:19:30,879
1200 sample unknown samples every day

480
00:19:32,080 --> 00:19:34,160
from animus

481
00:19:34,160 --> 00:19:34,960
we

482
00:19:34,960 --> 00:19:38,480
created an infrastructure with 56

483
00:19:38,480 --> 00:19:40,720
unveiling enabled machines

484
00:19:40,720 --> 00:19:44,720
on eight servers and ganache cluster

485
00:19:44,720 --> 00:19:46,000
what the

486
00:19:46,000 --> 00:19:48,559
same threshold that uh

487
00:19:48,559 --> 00:19:52,080
i talked about in previous slide

488
00:19:52,080 --> 00:19:55,200
we tested the system with 148

489
00:19:55,200 --> 00:19:56,480
000

490
00:19:56,480 --> 00:19:59,280
distinct samples and our

491
00:19:59,280 --> 00:20:03,039
approach a new detection is

492
00:20:03,039 --> 00:20:03,919
if

493
00:20:03,919 --> 00:20:06,799
we detect a sample as ransomware

494
00:20:06,799 --> 00:20:08,559
and we

495
00:20:08,559 --> 00:20:10,559
submit it to virustotal

496
00:20:10,559 --> 00:20:14,559
and if virustotal report reported as a

497
00:20:14,559 --> 00:20:17,600
malware or a ransomware

498
00:20:17,600 --> 00:20:20,159
it's it was not a new detection but if

499
00:20:20,159 --> 00:20:23,440
none of the av scanners uh detec report

500
00:20:23,440 --> 00:20:25,440
anything malicious about that we detect

501
00:20:25,440 --> 00:20:26,320
it as

502
00:20:26,320 --> 00:20:29,760
label it as a new detection

503
00:20:31,200 --> 00:20:32,000
we

504
00:20:32,000 --> 00:20:35,120
continue to submit uh the

505
00:20:35,120 --> 00:20:38,159
samples we detected as ransomware six

506
00:20:38,159 --> 00:20:40,720
times to virustotal in order to see

507
00:20:40,720 --> 00:20:43,520
whether the detection rate changes

508
00:20:43,520 --> 00:20:46,240
we define a score called a pollution

509
00:20:46,240 --> 00:20:50,240
ratio which is between zero and one

510
00:20:50,240 --> 00:20:53,280
and the values close to one means that

511
00:20:53,280 --> 00:20:56,000
all the av scanners in virustotal were

512
00:20:56,000 --> 00:20:59,360
able to detect a sample and the value is

513
00:20:59,360 --> 00:21:01,600
close to zero means that none of the

514
00:21:01,600 --> 00:21:04,000
samples were detected

515
00:21:04,000 --> 00:21:06,000
by av scanners so as you see in the

516
00:21:06,000 --> 00:21:08,640
first submission 72 percent of the

517
00:21:08,640 --> 00:21:11,679
samples had the

518
00:21:11,679 --> 00:21:14,400
pollution ratio zero means that none of

519
00:21:14,400 --> 00:21:17,200
them were detected by av scanners in the

520
00:21:17,200 --> 00:21:19,120
first submission but in the second

521
00:21:19,120 --> 00:21:21,919
submission the pollution ratio changed

522
00:21:21,919 --> 00:21:23,760
significantly

523
00:21:23,760 --> 00:21:25,440
and

524
00:21:25,440 --> 00:21:27,600
as you see in the subsequent submission

525
00:21:27,600 --> 00:21:28,880
there is no

526
00:21:28,880 --> 00:21:32,240
significant change on

527
00:21:32,240 --> 00:21:34,559
the pollution ratio meaning that a

528
00:21:34,559 --> 00:21:37,600
sample is detected either by a large

529
00:21:37,600 --> 00:21:38,720
number of

530
00:21:38,720 --> 00:21:40,720
avs scanners or

531
00:21:40,720 --> 00:21:45,559
only by by a small number of them

532
00:21:45,760 --> 00:21:47,919
this is the summary of our detection

533
00:21:47,919 --> 00:21:48,960
result

534
00:21:48,960 --> 00:21:50,080
uh we got

535
00:21:50,080 --> 00:21:51,600
we have false

536
00:21:51,600 --> 00:21:54,880
zero false positive cases uh at the cost

537
00:21:54,880 --> 00:21:59,600
of uh not detecting all the

538
00:21:59,600 --> 00:22:02,080
ransomware in our data set

539
00:22:02,080 --> 00:22:03,440
and uh

540
00:22:03,440 --> 00:22:05,600
as i mentioned 72 percent of the sound

541
00:22:05,600 --> 00:22:07,840
poles were new detection

542
00:22:07,840 --> 00:22:12,559
and we detected uh 9.2 percent of uh

543
00:22:12,559 --> 00:22:14,480
9.2 percent of the sample that we

544
00:22:14,480 --> 00:22:16,799
detected with ransomware including

545
00:22:16,799 --> 00:22:18,480
uh crypto

546
00:22:18,480 --> 00:22:20,960
um cryptographic ransomware and desktop

547
00:22:20,960 --> 00:22:24,559
blocker around 20 of those were desktop

548
00:22:24,559 --> 00:22:27,559
locker

549
00:22:27,600 --> 00:22:30,480
during our analysis we also found a new

550
00:22:30,480 --> 00:22:33,280
uh ransomware family

551
00:22:33,280 --> 00:22:36,240
uh we call this silent crypt the reason

552
00:22:36,240 --> 00:22:38,559
we call this all encrypt was that

553
00:22:38,559 --> 00:22:40,559
after successful attack

554
00:22:40,559 --> 00:22:41,840
uh

555
00:22:41,840 --> 00:22:45,280
it the the process showed an uh ransom

556
00:22:45,280 --> 00:22:46,159
note

557
00:22:46,159 --> 00:22:48,799
and uh claimed that they are silent

558
00:22:48,799 --> 00:22:51,760
team so we used the same name for that

559
00:22:51,760 --> 00:22:54,799
uh what happens with that uh it

560
00:22:54,799 --> 00:22:56,480
performed some

561
00:22:56,480 --> 00:22:59,200
sort of user fingerprinting in order to

562
00:22:59,200 --> 00:23:02,240
see whether they're running in a bare

563
00:23:02,240 --> 00:23:04,559
user environment or in a

564
00:23:04,559 --> 00:23:08,480
analysis or in a real user

565
00:23:08,480 --> 00:23:09,679
computer

566
00:23:09,679 --> 00:23:10,799
and

567
00:23:10,799 --> 00:23:13,039
after consulting with the server and

568
00:23:13,039 --> 00:23:14,640
receiving the key

569
00:23:14,640 --> 00:23:16,720
they started

570
00:23:16,720 --> 00:23:19,440
encrypting the the user's file and as

571
00:23:19,440 --> 00:23:22,480
you see in the third row which is the

572
00:23:22,480 --> 00:23:25,120
right operation it performed

573
00:23:25,120 --> 00:23:26,640
some

574
00:23:26,640 --> 00:23:29,440
techniques in order to evade uh

575
00:23:29,440 --> 00:23:32,799
potential behavior-based approaches like

576
00:23:32,799 --> 00:23:35,520
imposing delays artificial delays

577
00:23:35,520 --> 00:23:36,400
between

578
00:23:36,400 --> 00:23:39,520
uh their operation

579
00:23:39,520 --> 00:23:41,840
after a couple of rides they

580
00:23:41,840 --> 00:23:44,158
uh

581
00:23:44,240 --> 00:23:46,080
imposed some delay and then started

582
00:23:46,080 --> 00:23:48,320
again

583
00:23:48,960 --> 00:23:51,760
we submitted the sample to

584
00:23:51,760 --> 00:23:55,440
av to virustotal and after two days they

585
00:23:55,440 --> 00:23:59,039
started reporting it as malicious

586
00:23:59,039 --> 00:24:00,640
this is uh

587
00:24:00,640 --> 00:24:02,159
also

588
00:24:02,159 --> 00:24:04,960
the google result in that time we the

589
00:24:04,960 --> 00:24:06,960
first one is the

590
00:24:06,960 --> 00:24:10,559
the the submission i had to uh youtube

591
00:24:10,559 --> 00:24:13,520
about demo of the attack the other are

592
00:24:13,520 --> 00:24:14,880
relevant to

593
00:24:14,880 --> 00:24:17,120
google results

594
00:24:17,120 --> 00:24:19,760
so the conclusion of this work is that

595
00:24:19,760 --> 00:24:22,799
a ransomware is a serious threat

596
00:24:22,799 --> 00:24:24,080
and the

597
00:24:24,080 --> 00:24:26,159
unveil introduces

598
00:24:26,159 --> 00:24:28,000
concrete models concrete detection

599
00:24:28,000 --> 00:24:30,159
techniques to

600
00:24:30,159 --> 00:24:33,679
analyze these class of malware

601
00:24:33,679 --> 00:24:36,240
detecting a new ransomware family uh

602
00:24:36,240 --> 00:24:38,559
shows that this approach

603
00:24:38,559 --> 00:24:40,720
is useful in practice and can be used

604
00:24:40,720 --> 00:24:43,840
without implementation costs on top of

605
00:24:43,840 --> 00:24:45,520
anti

606
00:24:45,520 --> 00:24:48,080
analysis anti-malware

607
00:24:48,080 --> 00:24:50,720
tools and dynamic analysis system

608
00:24:50,720 --> 00:24:52,960
uh of course our approach is not perfect

609
00:24:52,960 --> 00:24:54,000
but

610
00:24:54,000 --> 00:24:56,240
we continue to improve the work

611
00:24:56,240 --> 00:24:57,440
uh

612
00:24:57,440 --> 00:24:59,679
this this field of research is an

613
00:24:59,679 --> 00:25:02,480
adversarial research so we try to

614
00:25:02,480 --> 00:25:05,039
improve it and make it a public service

615
00:25:05,039 --> 00:25:06,720
for

616
00:25:06,720 --> 00:25:08,480
to be used by

617
00:25:08,480 --> 00:25:10,720
researchers and

618
00:25:10,720 --> 00:25:12,840
defenders and reverse

619
00:25:12,840 --> 00:25:15,440
engineers thank you so much i would

620
00:25:15,440 --> 00:25:18,800
happy to have a question answer

621
00:25:18,800 --> 00:25:24,960
[Applause]

622
00:25:24,960 --> 00:25:27,960
questions

623
00:25:30,880 --> 00:25:33,840
hi um i'm ryan from google um so i had a

624
00:25:33,840 --> 00:25:35,919
question about your false positive rate

625
00:25:35,919 --> 00:25:37,760
you said that you had like nine thousand

626
00:25:37,760 --> 00:25:39,600
new detections but

627
00:25:39,600 --> 00:25:42,159
zero percent false positives how did you

628
00:25:42,159 --> 00:25:44,720
compute that

629
00:25:44,720 --> 00:25:47,360
how did i calculate that yeah

630
00:25:47,360 --> 00:25:48,240
okay

631
00:25:48,240 --> 00:25:51,360
so for the desktop locker samples that

632
00:25:51,360 --> 00:25:52,880
were around the

633
00:25:52,880 --> 00:25:55,200
300 samples

634
00:25:55,200 --> 00:25:57,520
three thousand samples we did it

635
00:25:57,520 --> 00:26:00,400
manually by just checking uh

636
00:26:00,400 --> 00:26:03,679
the post attack images if we see that

637
00:26:03,679 --> 00:26:06,080
the post attack image is a ransom note

638
00:26:06,080 --> 00:26:07,440
we uh

639
00:26:07,440 --> 00:26:10,240
call it we report it as a

640
00:26:10,240 --> 00:26:12,080
correct detection

641
00:26:12,080 --> 00:26:13,919
and uh

642
00:26:13,919 --> 00:26:16,080
for

643
00:26:16,400 --> 00:26:18,720
crypto style ransomware

644
00:26:18,720 --> 00:26:22,080
we what we did was checking uh sorting

645
00:26:22,080 --> 00:26:24,480
the files automatically and finding

646
00:26:24,480 --> 00:26:26,720
whether uh

647
00:26:26,720 --> 00:26:28,799
there is an iteration of where the files

648
00:26:28,799 --> 00:26:30,880
for example the file the first file

649
00:26:30,880 --> 00:26:33,440
files and uh see the

650
00:26:33,440 --> 00:26:34,720
if the

651
00:26:34,720 --> 00:26:36,559
the content of the file has an entropy

652
00:26:36,559 --> 00:26:39,600
change so in our detection

653
00:26:39,600 --> 00:26:42,320
uh we use entropy to double check our

654
00:26:42,320 --> 00:26:45,200
result we didn't use entropy in order to

655
00:26:45,200 --> 00:26:46,400
uh

656
00:26:46,400 --> 00:26:49,600
as a function as a feature to

657
00:26:49,600 --> 00:26:51,679
report whether sample is reservoir or

658
00:26:51,679 --> 00:26:54,400
not we use it to double check whether uh

659
00:26:54,400 --> 00:26:56,640
the sample that we detected as transfer

660
00:26:56,640 --> 00:26:58,960
is in fact massive or not

661
00:26:58,960 --> 00:27:00,400
like could couldn't you also use an

662
00:27:00,400 --> 00:27:01,840
entropy just to

663
00:27:01,840 --> 00:27:03,440
like detect it as well

664
00:27:03,440 --> 00:27:05,520
pardon couldn't you use the entropy to

665
00:27:05,520 --> 00:27:07,039
detect it as well

666
00:27:07,039 --> 00:27:07,840
uh

667
00:27:07,840 --> 00:27:11,360
as a detection feature so it a

668
00:27:11,360 --> 00:27:13,840
very good question uh the problem with

669
00:27:13,840 --> 00:27:17,120
this uh is that there

670
00:27:17,120 --> 00:27:18,960
can and there are

671
00:27:18,960 --> 00:27:21,760
certain cases that they have already

672
00:27:21,760 --> 00:27:24,640
high entropy for example

673
00:27:24,640 --> 00:27:27,679
the file is a compress file has already

674
00:27:27,679 --> 00:27:30,559
has not very high but it has high

675
00:27:30,559 --> 00:27:33,520
interviews so the change between the

676
00:27:33,520 --> 00:27:35,840
read and write the entropy of the read

677
00:27:35,840 --> 00:27:39,760
and write is not meaningful in order to

678
00:27:39,760 --> 00:27:42,159
report that as a change in the entropy

679
00:27:42,159 --> 00:27:44,080
of the file in order to report it as a

680
00:27:44,080 --> 00:27:47,279
ransomware so we tried not to use that

681
00:27:47,279 --> 00:27:51,200
in our detection but use it as a feature

682
00:27:51,200 --> 00:27:54,320
to evaluate our result

683
00:27:54,320 --> 00:27:56,879
okay thank you

684
00:27:58,159 --> 00:28:01,360
very nice work and just a quick question

685
00:28:01,360 --> 00:28:03,279
these ransomware samples when you run

686
00:28:03,279 --> 00:28:05,840
them on your environment

687
00:28:05,840 --> 00:28:08,559
they almost always immediately start

688
00:28:08,559 --> 00:28:09,679
attacking

689
00:28:09,679 --> 00:28:12,399
um what if they actually wait

690
00:28:12,399 --> 00:28:14,799
um how long do you need to run them

691
00:28:14,799 --> 00:28:17,520
and yeah how do you trigger them okay

692
00:28:17,520 --> 00:28:19,200
so uh

693
00:28:19,200 --> 00:28:20,640
like uh other

694
00:28:20,640 --> 00:28:24,080
um dynamic analysis system our approach

695
00:28:24,080 --> 00:28:27,120
is also vulnerable to installing code

696
00:28:27,120 --> 00:28:31,039
we run the samples for 20 minutes

697
00:28:31,039 --> 00:28:32,320
and

698
00:28:32,320 --> 00:28:34,480
with the assumption that

699
00:28:34,480 --> 00:28:35,279
the

700
00:28:35,279 --> 00:28:38,559
attack will start after 5-10 minutes

701
00:28:38,559 --> 00:28:40,000
but if

702
00:28:40,000 --> 00:28:43,600
it wants to wait for two days one days

703
00:28:43,600 --> 00:28:46,159
five hours so we were not able to take

704
00:28:46,159 --> 00:28:47,200
anything

705
00:28:47,200 --> 00:28:48,880
but if

706
00:28:48,880 --> 00:28:50,240
the sample

707
00:28:50,240 --> 00:28:53,520
start in 10 minutes after 10 minutes of

708
00:28:53,520 --> 00:28:55,200
running the sample

709
00:28:55,200 --> 00:28:56,720
and show

710
00:28:56,720 --> 00:28:58,640
a malicious activity you were able to

711
00:28:58,640 --> 00:28:59,840
detect that

712
00:28:59,840 --> 00:29:02,399
so typically in your experience um how

713
00:29:02,399 --> 00:29:04,960
soon does the attack start five minutes

714
00:29:04,960 --> 00:29:07,440
one minute ten minutes so and we

715
00:29:07,440 --> 00:29:10,480
actually experiment that uh in our

716
00:29:10,480 --> 00:29:11,360
first

717
00:29:11,360 --> 00:29:13,600
phase of this project and we found that

718
00:29:13,600 --> 00:29:16,240
after the seven to ten minutes they

719
00:29:16,240 --> 00:29:18,720
start doing activity this this is

720
00:29:18,720 --> 00:29:22,159
actually what happened in our case

721
00:29:22,159 --> 00:29:25,559
okay thank you

722
00:29:26,159 --> 00:29:28,000
so uh so this is just another uh

723
00:29:28,000 --> 00:29:30,480
question about the nhp um

724
00:29:30,480 --> 00:29:32,720
check

725
00:29:33,120 --> 00:29:34,799
i don't know if you mentioned it but how

726
00:29:34,799 --> 00:29:37,520
many samples did you look at

727
00:29:37,520 --> 00:29:40,320
to kind of get a good feel for what the

728
00:29:40,320 --> 00:29:42,080
threshold should be or

729
00:29:42,080 --> 00:29:44,080
is it comparison for just

730
00:29:44,080 --> 00:29:45,600
a straight increase

731
00:29:45,600 --> 00:29:47,679
well uh

732
00:29:47,679 --> 00:29:49,440
good question uh

733
00:29:49,440 --> 00:29:50,640
for

734
00:29:50,640 --> 00:29:51,840
for the

735
00:29:51,840 --> 00:29:54,720
entropy change uh we

736
00:29:54,720 --> 00:29:56,240
we checked uh

737
00:29:56,240 --> 00:29:59,200
a couple of uh samples like uh

738
00:29:59,200 --> 00:30:00,000
two

739
00:30:00,000 --> 00:30:05,120
250 samples and uh we found that

740
00:30:05,120 --> 00:30:08,799
because the samples that the the suite

741
00:30:08,799 --> 00:30:10,640
file or the honey files that we were

742
00:30:10,640 --> 00:30:12,559
using were mainly text

743
00:30:12,559 --> 00:30:15,520
and we found we we saw that for example

744
00:30:15,520 --> 00:30:17,840
an entropy change from four

745
00:30:17,840 --> 00:30:20,240
from fourth 30

746
00:30:20,240 --> 00:30:21,039
to

747
00:30:21,039 --> 00:30:22,399
that it's changed to

748
00:30:22,399 --> 00:30:23,760
for example

749
00:30:23,760 --> 00:30:27,120
uh above seven means that a high entropy

750
00:30:27,120 --> 00:30:29,679
change but as i mentioned we didn't use

751
00:30:29,679 --> 00:30:32,000
that in our detection because

752
00:30:32,000 --> 00:30:35,440
it it it was uh something that can be

753
00:30:35,440 --> 00:30:38,480
evaded by the malware in future so we

754
00:30:38,480 --> 00:30:41,039
didn't use that in detection but for

755
00:30:41,039 --> 00:30:43,840
example for the text file uh

756
00:30:43,840 --> 00:30:46,159
we were able to

757
00:30:46,159 --> 00:30:48,799
confirm uh that for example there is a

758
00:30:48,799 --> 00:30:51,039
huge change in the entropy this is what

759
00:30:51,039 --> 00:30:52,960
we can say

760
00:30:52,960 --> 00:30:55,279
thank you

761
00:30:57,200 --> 00:30:58,880
all right let's thank our speaker again

762
00:30:58,880 --> 00:31:00,350
thanks

763
00:31:00,350 --> 00:31:03,030
[Applause]

764
00:31:03,030 --> 00:31:06,260
[Music]

765
00:31:08,640 --> 00:31:10,720
you

