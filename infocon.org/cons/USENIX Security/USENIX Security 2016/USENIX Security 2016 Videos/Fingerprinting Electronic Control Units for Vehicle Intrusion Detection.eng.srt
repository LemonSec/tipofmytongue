1
00:00:10,480 --> 00:00:12,480
today i'll be talking about

2
00:00:12,480 --> 00:00:14,639
fingerprinting electronic control units

3
00:00:14,639 --> 00:00:16,880
for vehicle intrusion detection i'm

4
00:00:16,880 --> 00:00:18,320
kyong tak cho

5
00:00:18,320 --> 00:00:20,480
and this is work done with my advisor

6
00:00:20,480 --> 00:00:22,160
kang shin from the university of

7
00:00:22,160 --> 00:00:24,640
michigan

8
00:00:24,720 --> 00:00:27,279
as many of you may know vehicles were

9
00:00:27,279 --> 00:00:29,840
composed of mechanical parts but now

10
00:00:29,840 --> 00:00:32,000
they are being replaced with electronic

11
00:00:32,000 --> 00:00:33,040
parts

12
00:00:33,040 --> 00:00:34,800
and also equipped with wireless

13
00:00:34,800 --> 00:00:37,360
connectivities although these provide

14
00:00:37,360 --> 00:00:39,760
controllability efficiency

15
00:00:39,760 --> 00:00:42,000
they are actually providing remote

16
00:00:42,000 --> 00:00:45,760
access points for attackers to actually

17
00:00:45,760 --> 00:00:48,000
compromise the vehicle network and then

18
00:00:48,000 --> 00:00:49,280
take control

19
00:00:49,280 --> 00:00:52,239
which obviously is a security risk as

20
00:00:52,239 --> 00:00:54,480
everyone knows

21
00:00:54,480 --> 00:00:56,399
there have been a lot of attacks that

22
00:00:56,399 --> 00:00:58,800
have been demonstrated out there so the

23
00:00:58,800 --> 00:01:00,239
question would be

24
00:01:00,239 --> 00:01:02,399
why are these attacks actually happening

25
00:01:02,399 --> 00:01:03,199
and

26
00:01:03,199 --> 00:01:05,760
what what is difficult to actually

27
00:01:05,760 --> 00:01:09,280
defend against these attacks

28
00:01:09,280 --> 00:01:11,760
so in can which is the de facto standard

29
00:01:11,760 --> 00:01:13,680
for in-vehicle networks

30
00:01:13,680 --> 00:01:16,159
ecu's which are basically components of

31
00:01:16,159 --> 00:01:18,320
your cars we actually which actually

32
00:01:18,320 --> 00:01:20,479
controls your car

33
00:01:20,479 --> 00:01:22,560
broadcast messages on the bus those

34
00:01:22,560 --> 00:01:24,799
messages contain information about the

35
00:01:24,799 --> 00:01:27,200
wheel speed steering wheel angle and so

36
00:01:27,200 --> 00:01:28,720
forth

37
00:01:28,720 --> 00:01:31,520
and if we close a look closely at those

38
00:01:31,520 --> 00:01:33,200
messages

39
00:01:33,200 --> 00:01:35,200
those messages are actually addressed

40
00:01:35,200 --> 00:01:37,600
based on what they actually contain

41
00:01:37,600 --> 00:01:40,079
not actually based on the transmitter or

42
00:01:40,079 --> 00:01:41,280
the receiver

43
00:01:41,280 --> 00:01:43,520
and each message id is actually assigned

44
00:01:43,520 --> 00:01:45,680
to a certain ecu to be transmitted on

45
00:01:45,680 --> 00:01:47,119
the bus

46
00:01:47,119 --> 00:01:49,360
so what this tells us is that we don't

47
00:01:49,360 --> 00:01:51,920
have any information on who actually is

48
00:01:51,920 --> 00:01:54,560
sending that message

49
00:01:54,560 --> 00:01:57,119
so to discuss about vehicle cyber

50
00:01:57,119 --> 00:01:59,360
attacks we just we consider two

51
00:01:59,360 --> 00:02:01,439
different attackers

52
00:02:01,439 --> 00:02:03,680
first a strong attacker who is taking

53
00:02:03,680 --> 00:02:05,680
control that's a full control of a

54
00:02:05,680 --> 00:02:08,080
compromised ecu so it can start and use

55
00:02:08,080 --> 00:02:10,399
transmission from the compromised node

56
00:02:10,399 --> 00:02:12,720
and also stop transformation that it was

57
00:02:12,720 --> 00:02:14,720
usually transmitting

58
00:02:14,720 --> 00:02:17,680
another attacker is a weak attacker that

59
00:02:17,680 --> 00:02:19,840
only has partial control so it can only

60
00:02:19,840 --> 00:02:21,920
stop transmissions the existence of

61
00:02:21,920 --> 00:02:24,319
these two different attackers were

62
00:02:24,319 --> 00:02:27,280
actually shown in a different paper

63
00:02:27,280 --> 00:02:29,760
for the attack itself we categorized

64
00:02:29,760 --> 00:02:31,440
those attacks into three different

65
00:02:31,440 --> 00:02:32,720
attack models

66
00:02:32,720 --> 00:02:36,000
first fabrication second suspension and

67
00:02:36,000 --> 00:02:38,720
lastly masquerade i'll first talk about

68
00:02:38,720 --> 00:02:40,560
the first two attacks that can be made

69
00:02:40,560 --> 00:02:43,040
on in vehicle networks

70
00:02:43,040 --> 00:02:45,120
normally ecu's broadcast messages

71
00:02:45,120 --> 00:02:46,560
periodically

72
00:02:46,560 --> 00:02:49,200
however if an attacker take control of

73
00:02:49,200 --> 00:02:51,840
an ecu and broadcast the messages on the

74
00:02:51,840 --> 00:02:52,800
bus

75
00:02:52,800 --> 00:02:55,440
and if it if that message has an id

76
00:02:55,440 --> 00:02:57,519
equivalent to the one that another

77
00:02:57,519 --> 00:02:59,920
legitimate node is sending

78
00:02:59,920 --> 00:03:02,800
and the send frequency is really high it

79
00:03:02,800 --> 00:03:04,879
would overwrite other messages and be

80
00:03:04,879 --> 00:03:07,440
able to control the vehicle manufacture

81
00:03:07,440 --> 00:03:08,959
so this is why

82
00:03:08,959 --> 00:03:11,360
attacks have been possible on in vehicle

83
00:03:11,360 --> 00:03:14,080
networks so one representative example

84
00:03:14,080 --> 00:03:16,319
would be the one demonstrated in 2010

85
00:03:16,319 --> 00:03:17,280
oakland

86
00:03:17,280 --> 00:03:18,959
by researchers from university of

87
00:03:18,959 --> 00:03:21,280
washington and university of california

88
00:03:21,280 --> 00:03:23,680
san diego

89
00:03:23,680 --> 00:03:25,360
although we didn't really illustrate

90
00:03:25,360 --> 00:03:27,519
suspension attack here suspension attack

91
00:03:27,519 --> 00:03:29,360
is the one that instead of injecting

92
00:03:29,360 --> 00:03:31,200
messages you can just

93
00:03:31,200 --> 00:03:33,280
basically just stop transmission and

94
00:03:33,280 --> 00:03:35,519
then not no further deliver information

95
00:03:35,519 --> 00:03:38,000
to others

96
00:03:38,080 --> 00:03:40,400
actually the attacker can be a little

97
00:03:40,400 --> 00:03:42,159
bit smarter than

98
00:03:42,159 --> 00:03:44,319
the fabrication and suspension attack so

99
00:03:44,319 --> 00:03:46,560
we call that masquerade attack say we

100
00:03:46,560 --> 00:03:49,280
have two ecu's here compromised as

101
00:03:49,280 --> 00:03:50,879
strong and weak

102
00:03:50,879 --> 00:03:52,720
with a strong a weak attacker the

103
00:03:52,720 --> 00:03:54,799
attacker can just basically keep sending

104
00:03:54,799 --> 00:03:57,519
its original message but after some time

105
00:03:57,519 --> 00:04:00,720
passes it can switch that transmission

106
00:04:00,720 --> 00:04:04,000
to a strong attacker and then inject its

107
00:04:04,000 --> 00:04:06,400
attack message instead

108
00:04:06,400 --> 00:04:09,120
so why would the attacker actually mount

109
00:04:09,120 --> 00:04:11,280
such a masquerade attack

110
00:04:11,280 --> 00:04:14,480
well first if you look at the gra the

111
00:04:14,480 --> 00:04:17,279
picture in the below you can see that

112
00:04:17,279 --> 00:04:19,440
the id is pretty much the same so even

113
00:04:19,440 --> 00:04:21,279
though the attacker has actually mounted

114
00:04:21,279 --> 00:04:23,520
and injected the attack message the

115
00:04:23,520 --> 00:04:25,440
network traffic actually looks pretty

116
00:04:25,440 --> 00:04:27,520
much the same

117
00:04:27,520 --> 00:04:29,520
and again

118
00:04:29,520 --> 00:04:32,000
in the famous gpac actually they discuss

119
00:04:32,000 --> 00:04:34,080
in their white paper they actually had

120
00:04:34,080 --> 00:04:36,639
to shut down this legitimate note that

121
00:04:36,639 --> 00:04:38,400
was sending the original message and use

122
00:04:38,400 --> 00:04:40,320
another node to inject

123
00:04:40,320 --> 00:04:42,639
and control the braking behavior

124
00:04:42,639 --> 00:04:43,840
so

125
00:04:43,840 --> 00:04:45,680
i would say that a similar attack to

126
00:04:45,680 --> 00:04:47,520
this masquerade attack was actually used

127
00:04:47,520 --> 00:04:50,880
for this jeep attack

128
00:04:51,040 --> 00:04:52,400
so the

129
00:04:52,400 --> 00:04:55,840
main problem in actually defending or

130
00:04:55,840 --> 00:04:58,560
detecting these attacks would be

131
00:04:58,560 --> 00:05:01,360
first we don't have any idea on who

132
00:05:01,360 --> 00:05:05,039
actually sent the messages on the bus

133
00:05:05,280 --> 00:05:07,039
and also even though we have actually

134
00:05:07,039 --> 00:05:09,919
detected those messages we have no idea

135
00:05:09,919 --> 00:05:11,919
on who actually attacked

136
00:05:11,919 --> 00:05:13,360
if we knew

137
00:05:13,360 --> 00:05:14,720
we can actually

138
00:05:14,720 --> 00:05:16,800
respond to this attack pretty much

139
00:05:16,800 --> 00:05:18,960
quickly and then patch

140
00:05:18,960 --> 00:05:21,360
and then move on

141
00:05:21,360 --> 00:05:23,520
so to answer to these two questions that

142
00:05:23,520 --> 00:05:26,560
i had before in this paper we propose a

143
00:05:26,560 --> 00:05:28,639
scheme that can fingerprint ecu's for

144
00:05:28,639 --> 00:05:30,479
intrusion detection

145
00:05:30,479 --> 00:05:32,800
the fingerprinting is done by extracting

146
00:05:32,800 --> 00:05:36,560
clock skews of transmitters

147
00:05:36,960 --> 00:05:39,120
so by using these clock skus as a

148
00:05:39,120 --> 00:05:41,360
reference we detect malicious messages

149
00:05:41,360 --> 00:05:43,600
that are injected on the bus and detect

150
00:05:43,600 --> 00:05:46,080
intrusions

151
00:05:47,360 --> 00:05:49,680
so what exactly is clock skew

152
00:05:49,680 --> 00:05:52,400
due to hardware imperfection

153
00:05:52,400 --> 00:05:53,199
each

154
00:05:53,199 --> 00:05:56,000
clocks runs at different speed

155
00:05:56,000 --> 00:05:58,639
so if we have the rightmost clock as the

156
00:05:58,639 --> 00:05:59,919
true clock

157
00:05:59,919 --> 00:06:02,319
after an hour passes before it was sent

158
00:06:02,319 --> 00:06:05,840
set at 3 pm now one clock can show 359

159
00:06:05,840 --> 00:06:08,080
another can show 401.

160
00:06:08,080 --> 00:06:10,560
so in such a case we defined clock

161
00:06:10,560 --> 00:06:12,960
offset as the absolute

162
00:06:12,960 --> 00:06:14,400
as the value

163
00:06:14,400 --> 00:06:16,960
as a difference in the reported times of

164
00:06:16,960 --> 00:06:20,560
each clock compared to the true clock

165
00:06:20,560 --> 00:06:23,440
and clock we define clock skew as the

166
00:06:23,440 --> 00:06:26,160
differences in the rates at in which

167
00:06:26,160 --> 00:06:29,039
each clock progresses so in this case

168
00:06:29,039 --> 00:06:30,720
over an hour there was an offset of

169
00:06:30,720 --> 00:06:33,280
minus one and plus one so we would have

170
00:06:33,280 --> 00:06:36,240
a class q of minus 1 over 60 and plus 1

171
00:06:36,240 --> 00:06:38,960
over 16.

172
00:06:39,280 --> 00:06:42,240
so in cars um actually ecu's have their

173
00:06:42,240 --> 00:06:44,639
own course crystal clocks and they use

174
00:06:44,639 --> 00:06:46,319
them to actually schedule their

175
00:06:46,319 --> 00:06:48,800
transmissions and so forth

176
00:06:48,800 --> 00:06:49,759
well

177
00:06:49,759 --> 00:06:51,440
because again because of hardware

178
00:06:51,440 --> 00:06:52,960
imperfection they would have different

179
00:06:52,960 --> 00:06:55,199
speeds slightly different speeds

180
00:06:55,199 --> 00:06:57,120
and it was actually reported that you

181
00:06:57,120 --> 00:07:00,080
can have a 2.4 second clock offset over

182
00:07:00,080 --> 00:07:01,680
a day period

183
00:07:01,680 --> 00:07:03,680
so this kind of justifies that clock

184
00:07:03,680 --> 00:07:05,599
skew might be a good candidate in

185
00:07:05,599 --> 00:07:08,000
fingerprinting these use

186
00:07:08,000 --> 00:07:10,720
well using clock skills as fingerprints

187
00:07:10,720 --> 00:07:13,440
is not really a new thing because in the

188
00:07:13,440 --> 00:07:15,039
internet domain

189
00:07:15,039 --> 00:07:16,720
it was previously used for

190
00:07:16,720 --> 00:07:18,560
fingerprinting the notes

191
00:07:18,560 --> 00:07:20,960
however we cannot really directly

192
00:07:20,960 --> 00:07:23,360
transfer that idea to the automotive

193
00:07:23,360 --> 00:07:25,680
domain because in the internet domain

194
00:07:25,680 --> 00:07:27,840
most ideas on fingerprinting using cloud

195
00:07:27,840 --> 00:07:30,080
skus require timestamps from

196
00:07:30,080 --> 00:07:32,720
transmitters and receivers which are not

197
00:07:32,720 --> 00:07:35,360
quite available in vehicles even though

198
00:07:35,360 --> 00:07:37,840
we tried to add them in messages

199
00:07:37,840 --> 00:07:39,840
it would actually incur overhead and it

200
00:07:39,840 --> 00:07:41,599
would affect the real-time

201
00:07:41,599 --> 00:07:44,080
communication

202
00:07:44,080 --> 00:07:46,479
in this paper we did it in a quite a

203
00:07:46,479 --> 00:07:48,400
slightly different way

204
00:07:48,400 --> 00:07:50,479
we exploited the fact that most messages

205
00:07:50,479 --> 00:07:52,400
are periodic and we use those

206
00:07:52,400 --> 00:07:54,720
periodicities to actually extract the

207
00:07:54,720 --> 00:07:56,319
clock skewed values

208
00:07:56,319 --> 00:07:59,759
so how say we have two nodes here uh

209
00:07:59,759 --> 00:08:01,039
ecua

210
00:08:01,039 --> 00:08:04,160
is it intended to send a message every t

211
00:08:04,160 --> 00:08:07,440
milliseconds to to be a 2r of course

212
00:08:07,440 --> 00:08:09,840
it's a broadcast but still

213
00:08:09,840 --> 00:08:12,960
so ideally from the perspective of r

214
00:08:12,960 --> 00:08:15,520
it should have been sent at time t to t

215
00:08:15,520 --> 00:08:18,400
3t and so forth however due to the

216
00:08:18,400 --> 00:08:19,919
difference in how

217
00:08:19,919 --> 00:08:22,160
how fast the clock runs

218
00:08:22,160 --> 00:08:23,599
it would actually have the slight

219
00:08:23,599 --> 00:08:26,800
offsets to its ideal timing

220
00:08:26,800 --> 00:08:29,759
so accordingly the received time would

221
00:08:29,759 --> 00:08:32,080
also include those information on the

222
00:08:32,080 --> 00:08:34,159
transmitter's offset so if you look at

223
00:08:34,159 --> 00:08:36,719
the equations here you can see that in

224
00:08:36,719 --> 00:08:39,279
fact if you look at the receiver's

225
00:08:39,279 --> 00:08:40,799
timestamps you can see that the

226
00:08:40,799 --> 00:08:43,120
transmitter's clock information is

227
00:08:43,120 --> 00:08:45,600
is actually hidden in those timestamps

228
00:08:45,600 --> 00:08:47,600
so the next question was how can we

229
00:08:47,600 --> 00:08:49,680
extract those offset values from the

230
00:08:49,680 --> 00:08:52,800
timestamps that we have

231
00:08:53,279 --> 00:08:55,279
because we have the measured timestamps

232
00:08:55,279 --> 00:08:57,519
what we did based was based on

233
00:08:57,519 --> 00:09:00,160
historical data and based on the log

234
00:09:00,160 --> 00:09:01,360
data and

235
00:09:01,360 --> 00:09:03,360
derived periodicities

236
00:09:03,360 --> 00:09:06,160
we can extrapolate those values and make

237
00:09:06,160 --> 00:09:07,040
up

238
00:09:07,040 --> 00:09:10,160
an estimated value that as many times

239
00:09:10,160 --> 00:09:12,399
that those packets would arrive by

240
00:09:12,399 --> 00:09:13,920
taking the difference

241
00:09:13,920 --> 00:09:16,160
we can have a rough estimation on the

242
00:09:16,160 --> 00:09:18,560
what the transmitter offset would be of

243
00:09:18,560 --> 00:09:22,320
course by just looking at just one one

244
00:09:22,320 --> 00:09:24,080
of those values would not be enough

245
00:09:24,080 --> 00:09:26,080
because there would be some noise in it

246
00:09:26,080 --> 00:09:28,560
so we take an average and then

247
00:09:28,560 --> 00:09:30,800
obtain the average clock offset

248
00:09:30,800 --> 00:09:33,360
but this average clock offset is an

249
00:09:33,360 --> 00:09:35,680
offset that has incurred for just those

250
00:09:35,680 --> 00:09:39,200
messages not the ones that have been

251
00:09:39,200 --> 00:09:41,279
incurred for the previous ones and

252
00:09:41,279 --> 00:09:43,519
though and those so what we do is we

253
00:09:43,519 --> 00:09:45,440
accumulate them and if we accumulate

254
00:09:45,440 --> 00:09:48,240
them what we get is

255
00:09:48,240 --> 00:09:51,279
something like this because ecu's have

256
00:09:51,279 --> 00:09:53,360
different clocks and different speed and

257
00:09:53,360 --> 00:09:56,000
how they can how their clock runs their

258
00:09:56,000 --> 00:09:57,839
slope which is the clock skew in this

259
00:09:57,839 --> 00:09:59,519
graph will be different

260
00:09:59,519 --> 00:10:00,399
so

261
00:10:00,399 --> 00:10:04,000
if we actually monitor each message and

262
00:10:04,000 --> 00:10:05,519
draw a graph

263
00:10:05,519 --> 00:10:07,440
if if they were sent by different

264
00:10:07,440 --> 00:10:09,120
transmitters they would have different

265
00:10:09,120 --> 00:10:10,480
slopes

266
00:10:10,480 --> 00:10:12,880
however if two messages were sent by the

267
00:10:12,880 --> 00:10:14,640
same transmitter

268
00:10:14,640 --> 00:10:16,399
then we would have exactly have the same

269
00:10:16,399 --> 00:10:18,079
linear model you'll later see in the

270
00:10:18,079 --> 00:10:20,240
evaluation result that such kind of

271
00:10:20,240 --> 00:10:21,519
trend shows

272
00:10:21,519 --> 00:10:23,519
so we learned this linear model

273
00:10:23,519 --> 00:10:25,600
continuously using an algorithm called

274
00:10:25,600 --> 00:10:27,360
recursive least square

275
00:10:27,360 --> 00:10:29,279
because clock skew is

276
00:10:29,279 --> 00:10:31,440
a hardware thing that

277
00:10:31,440 --> 00:10:32,399
is

278
00:10:32,399 --> 00:10:34,800
supposed to be as constant

279
00:10:34,800 --> 00:10:36,480
if we formulate this as a linear

280
00:10:36,480 --> 00:10:38,959
parameter identification problem then we

281
00:10:38,959 --> 00:10:40,399
would have

282
00:10:40,399 --> 00:10:43,040
a constant almost a constant

283
00:10:43,040 --> 00:10:45,680
slope value and also the identification

284
00:10:45,680 --> 00:10:47,040
error of this

285
00:10:47,040 --> 00:10:49,760
recursively square rls being skewed

286
00:10:49,760 --> 00:10:52,560
towards zero

287
00:10:53,120 --> 00:10:55,200
so with this linear model what we did

288
00:10:55,200 --> 00:10:57,279
was we detected an intrusion in two

289
00:10:57,279 --> 00:10:59,760
different ways so per message detection

290
00:10:59,760 --> 00:11:02,800
and message pairwise detection

291
00:11:02,800 --> 00:11:04,560
per message detection is a detection

292
00:11:04,560 --> 00:11:07,279
that it just looks at a per message

293
00:11:07,279 --> 00:11:09,440
message basis so we just look at one

294
00:11:09,440 --> 00:11:11,760
message and then extract this clock

295
00:11:11,760 --> 00:11:13,680
behavior and use that as a reference for

296
00:11:13,680 --> 00:11:17,040
detecting malicious messages

297
00:11:17,200 --> 00:11:19,200
so for example what if an attacker

298
00:11:19,200 --> 00:11:21,040
actually injects a message using the

299
00:11:21,040 --> 00:11:22,640
fabrication attack that i described

300
00:11:22,640 --> 00:11:23,519
before

301
00:11:23,519 --> 00:11:25,200
what would happen is because the

302
00:11:25,200 --> 00:11:26,959
original legitimate node is sending the

303
00:11:26,959 --> 00:11:28,959
message anyway

304
00:11:28,959 --> 00:11:30,720
it would actually change the outputs

305
00:11:30,720 --> 00:11:33,120
that we have in our system because it's

306
00:11:33,120 --> 00:11:34,640
it outputs a

307
00:11:34,640 --> 00:11:36,560
measured timestamp that is very

308
00:11:36,560 --> 00:11:38,959
different from what we actually estimate

309
00:11:38,959 --> 00:11:40,880
that would actually make our average

310
00:11:40,880 --> 00:11:43,040
clock offset increase

311
00:11:43,040 --> 00:11:45,279
so in our linear model that we had what

312
00:11:45,279 --> 00:11:47,120
would show is

313
00:11:47,120 --> 00:11:49,519
with an attack it's as leaner as normal

314
00:11:49,519 --> 00:11:52,079
but with the attack

315
00:11:52,079 --> 00:11:54,079
suddenly there will be a high shift in

316
00:11:54,079 --> 00:11:57,200
how this linear model changes

317
00:11:57,200 --> 00:11:59,360
so this is very different from what we

318
00:11:59,360 --> 00:12:01,519
had before because i said

319
00:12:01,519 --> 00:12:05,040
for in the rls because it's linear the

320
00:12:05,040 --> 00:12:07,120
identification error suppose has

321
00:12:07,120 --> 00:12:09,440
supposed to be zero whereas if an attack

322
00:12:09,440 --> 00:12:10,959
is mounted suddenly there is a high

323
00:12:10,959 --> 00:12:13,040
value

324
00:12:13,040 --> 00:12:15,440
similarly when a mass grade attack is

325
00:12:15,440 --> 00:12:18,000
mounted because the transmitter of that

326
00:12:18,000 --> 00:12:19,760
message has changed from one node to

327
00:12:19,760 --> 00:12:22,079
another

328
00:12:22,079 --> 00:12:23,200
the slope

329
00:12:23,200 --> 00:12:24,880
suddenly changes

330
00:12:24,880 --> 00:12:27,600
so in in this in this case similarly

331
00:12:27,600 --> 00:12:29,920
from the previous attack again there's a

332
00:12:29,920 --> 00:12:31,920
high error in the recursively square

333
00:12:31,920 --> 00:12:33,120
errors

334
00:12:33,120 --> 00:12:34,000
so

335
00:12:34,000 --> 00:12:36,880
we detect such abnormal shifts using

336
00:12:36,880 --> 00:12:39,279
accumulated sum analysis so we did not

337
00:12:39,279 --> 00:12:41,360
really go into the details here

338
00:12:41,360 --> 00:12:43,600
so if interested you can refer to the

339
00:12:43,600 --> 00:12:45,920
paper

340
00:12:46,320 --> 00:12:48,000
so instead of just looking at one

341
00:12:48,000 --> 00:12:50,959
message we also looked at how the clock

342
00:12:50,959 --> 00:12:53,519
behaviors of extracted from each message

343
00:12:53,519 --> 00:12:56,160
are related

344
00:12:58,800 --> 00:13:00,720
i think this is one of the interesting

345
00:13:00,720 --> 00:13:02,720
observations that we had while we were

346
00:13:02,720 --> 00:13:06,000
reading off the can bus in the cars so

347
00:13:06,000 --> 00:13:08,079
actually when messages were sent from

348
00:13:08,079 --> 00:13:11,279
different ecu's obviously as expected

349
00:13:11,279 --> 00:13:14,800
the offsets were uncorrelated however

350
00:13:14,800 --> 00:13:17,279
when they were sent by the same ecu we

351
00:13:17,279 --> 00:13:20,000
found out the instantaneous offsets were

352
00:13:20,000 --> 00:13:22,880
actually correlated between them

353
00:13:22,880 --> 00:13:23,920
so

354
00:13:23,920 --> 00:13:28,000
what advantage does this provide to us

355
00:13:28,399 --> 00:13:30,399
so per message detection was kind of

356
00:13:30,399 --> 00:13:33,040
looking at the long trend on how this

357
00:13:33,040 --> 00:13:35,120
linear model will change on whether the

358
00:13:35,120 --> 00:13:37,120
slope would change or whether there's a

359
00:13:37,120 --> 00:13:38,959
high deviation from it

360
00:13:38,959 --> 00:13:41,279
on the other hand message pairwise

361
00:13:41,279 --> 00:13:43,360
detection is actually looking at its

362
00:13:43,360 --> 00:13:45,760
instantaneous values and looking at

363
00:13:45,760 --> 00:13:47,279
their correlation

364
00:13:47,279 --> 00:13:48,480
because it's looking at their

365
00:13:48,480 --> 00:13:50,959
instantaneous values unless the attacker

366
00:13:50,959 --> 00:13:53,680
is tr is kind of changing the

367
00:13:53,680 --> 00:13:55,600
temperature or the instantaneous

368
00:13:55,600 --> 00:13:58,320
workload in real time and in a very

369
00:13:58,320 --> 00:14:00,480
fine-grained manner it's very difficult

370
00:14:00,480 --> 00:14:03,199
to imitate this

371
00:14:03,199 --> 00:14:05,279
so this is the result that we had when

372
00:14:05,279 --> 00:14:08,560
we read the can bus traffic from our car

373
00:14:08,560 --> 00:14:11,199
2013 honda accord

374
00:14:11,199 --> 00:14:13,760
so you can see on the left hand side

375
00:14:13,760 --> 00:14:16,000
once it was verified it was sent by the

376
00:14:16,000 --> 00:14:18,000
same transmitter it also showed that the

377
00:14:18,000 --> 00:14:19,760
clock offsets were actually correlated

378
00:14:19,760 --> 00:14:21,760
so we can use this again as a similar

379
00:14:21,760 --> 00:14:24,240
linear model to take as a reference and

380
00:14:24,240 --> 00:14:27,199
then detect intrusions as well

381
00:14:27,199 --> 00:14:28,079
also

382
00:14:28,079 --> 00:14:29,600
if it was sent by a different

383
00:14:29,600 --> 00:14:30,959
transmitter

384
00:14:30,959 --> 00:14:34,320
the correlation showed a value near zero

385
00:14:34,320 --> 00:14:36,560
similarly when we use the data that was

386
00:14:36,560 --> 00:14:39,920
logged on a 2010 toyota camry

387
00:14:39,920 --> 00:14:42,000
the result showed the same so if it was

388
00:14:42,000 --> 00:14:43,839
sent by the same transmitter it showed

389
00:14:43,839 --> 00:14:45,680
correlation whereas

390
00:14:45,680 --> 00:14:49,680
if not then the correlation was zero

391
00:14:50,079 --> 00:14:52,160
so to evaluate

392
00:14:52,160 --> 00:14:54,880
our proposed idea system and also our

393
00:14:54,880 --> 00:14:56,720
fingerprinting scheme

394
00:14:56,720 --> 00:14:58,800
first we did that in three settings

395
00:14:58,800 --> 00:15:01,680
first we configured a campus prototype

396
00:15:01,680 --> 00:15:03,760
this node is actually composed of a

397
00:15:03,760 --> 00:15:05,120
canon shield

398
00:15:05,120 --> 00:15:08,000
and arduino uno it's just 50 bucks

399
00:15:08,000 --> 00:15:11,519
so we compose them as a canvas prototype

400
00:15:11,519 --> 00:15:13,680
as being connected to each other through

401
00:15:13,680 --> 00:15:15,839
a two-wire bus

402
00:15:15,839 --> 00:15:18,480
and using those nodes we actually uh log

403
00:15:18,480 --> 00:15:22,800
off data from a 2013 honda accord which

404
00:15:22,800 --> 00:15:24,720
was my car actually

405
00:15:24,720 --> 00:15:28,639
but using using my my node um you can

406
00:15:28,639 --> 00:15:30,959
connect to the obd2 port and then just

407
00:15:30,959 --> 00:15:32,880
read off the data from the from the

408
00:15:32,880 --> 00:15:34,639
canvas so what you can do is you can

409
00:15:34,639 --> 00:15:36,720
also not only read but you can also

410
00:15:36,720 --> 00:15:39,279
inject messages to the bus

411
00:15:39,279 --> 00:15:41,680
so in this setting all these three nodes

412
00:15:41,680 --> 00:15:43,519
were actually reading all the data that

413
00:15:43,519 --> 00:15:45,839
was actually on the bus but also we were

414
00:15:45,839 --> 00:15:48,000
able to program them to inject and just

415
00:15:48,000 --> 00:15:49,600
control things

416
00:15:49,600 --> 00:15:50,880
and lastly

417
00:15:50,880 --> 00:15:53,279
we also used can log data to verify our

418
00:15:53,279 --> 00:15:55,920
fingerprinting scheme so the data that

419
00:15:55,920 --> 00:15:57,440
we used were

420
00:15:57,440 --> 00:15:59,360
data that was locked by researchers from

421
00:15:59,360 --> 00:16:02,399
university of tulsa on a 2010 toyota

422
00:16:02,399 --> 00:16:05,519
camry and a 2010 dodge ram pickup

423
00:16:05,519 --> 00:16:09,360
during a 30 minute drive

424
00:16:09,360 --> 00:16:11,440
so this is what the fingerprints

425
00:16:11,440 --> 00:16:13,519
actually looked like on different cars

426
00:16:13,519 --> 00:16:15,120
and different settings

427
00:16:15,120 --> 00:16:17,600
so you can see that the models that we

428
00:16:17,600 --> 00:16:19,440
actually constructed based on message

429
00:16:19,440 --> 00:16:22,160
curiosities were actually all linear as

430
00:16:22,160 --> 00:16:23,440
expected

431
00:16:23,440 --> 00:16:25,839
and more interestingly that

432
00:16:25,839 --> 00:16:28,079
if those messages were sent by the same

433
00:16:28,079 --> 00:16:30,079
transmitter they had the exact same

434
00:16:30,079 --> 00:16:31,040
slope

435
00:16:31,040 --> 00:16:33,519
and also for those they had correlated

436
00:16:33,519 --> 00:16:37,639
offsets that i have shown before

437
00:16:39,120 --> 00:16:43,199
again also we to kind of evaluate how

438
00:16:43,199 --> 00:16:46,240
our idea system would react to attacks

439
00:16:46,240 --> 00:16:48,399
that have been made on the canvas

440
00:16:48,399 --> 00:16:50,959
we programmed one of our node as the ids

441
00:16:50,959 --> 00:16:52,560
system that we proposed which is the

442
00:16:52,560 --> 00:16:55,120
clock based ids and another as an

443
00:16:55,120 --> 00:16:57,839
attacker that is can inject messages

444
00:16:57,839 --> 00:17:00,079
using fabrication attack or masquerade

445
00:17:00,079 --> 00:17:02,479
attack

446
00:17:02,639 --> 00:17:04,959
so this is the result that we had on our

447
00:17:04,959 --> 00:17:06,400
ids system

448
00:17:06,400 --> 00:17:10,559
so as shown as an example before

449
00:17:10,559 --> 00:17:12,720
because of the fabrication attack there

450
00:17:12,720 --> 00:17:15,679
was a sudden shift in how the

451
00:17:15,679 --> 00:17:18,480
linear model changed so the blue dot dot

452
00:17:18,480 --> 00:17:20,640
line shows what was expected

453
00:17:20,640 --> 00:17:23,119
whereas this red line shows what was

454
00:17:23,119 --> 00:17:25,839
actually output on the system

455
00:17:25,839 --> 00:17:28,640
so our system was actually showing that

456
00:17:28,640 --> 00:17:31,440
sudden shift in that linear model so we

457
00:17:31,440 --> 00:17:34,400
were able to detect that attack

458
00:17:34,400 --> 00:17:36,640
and more importantly we

459
00:17:36,640 --> 00:17:39,039
evaluated how our system would react to

460
00:17:39,039 --> 00:17:40,960
this masquerade attack

461
00:17:40,960 --> 00:17:42,720
this masquerade attack

462
00:17:42,720 --> 00:17:45,520
is an interesting attack because

463
00:17:45,520 --> 00:17:47,600
even though it's mounting the

464
00:17:47,600 --> 00:17:48,559
attack

465
00:17:48,559 --> 00:17:51,120
the distribution of message intervals

466
00:17:51,120 --> 00:17:53,679
doesn't really change so that means

467
00:17:53,679 --> 00:17:56,080
for existing ideas is for just that just

468
00:17:56,080 --> 00:17:58,240
look at message curiosity would not

469
00:17:58,240 --> 00:18:01,200
really be able to capture this attack

470
00:18:01,200 --> 00:18:03,039
so as you can see on the left hand side

471
00:18:03,039 --> 00:18:05,200
the distributions before and after the

472
00:18:05,200 --> 00:18:08,080
attack was pretty much the same

473
00:18:08,080 --> 00:18:10,320
however our system was looking at

474
00:18:10,320 --> 00:18:12,160
attacks in a in a different angle we

475
00:18:12,160 --> 00:18:14,240
were also looking at the whether the

476
00:18:14,240 --> 00:18:16,160
clock skew value was changing or whether

477
00:18:16,160 --> 00:18:18,559
the correlation was changing also

478
00:18:18,559 --> 00:18:20,880
so here you can see that there's a

479
00:18:20,880 --> 00:18:23,039
sudden jump in the errors that we have

480
00:18:23,039 --> 00:18:24,960
we're detecting so our system was

481
00:18:24,960 --> 00:18:26,799
alerting that there was a masquerade

482
00:18:26,799 --> 00:18:29,919
attack that was mounted on the bus

483
00:18:29,919 --> 00:18:32,000
and the last thing is

484
00:18:32,000 --> 00:18:33,840
i think one another very interesting

485
00:18:33,840 --> 00:18:35,440
aspect that we had

486
00:18:35,440 --> 00:18:36,640
so

487
00:18:36,640 --> 00:18:38,799
once the attacker actually mounted this

488
00:18:38,799 --> 00:18:40,880
masquerade attack that's the red line

489
00:18:40,880 --> 00:18:42,400
you can see that the slope suddenly

490
00:18:42,400 --> 00:18:43,520
changes

491
00:18:43,520 --> 00:18:47,200
but the slope changed to a value

492
00:18:47,200 --> 00:18:49,919
value of a message that was also sent by

493
00:18:49,919 --> 00:18:52,559
the attacker so what does that tell

494
00:18:52,559 --> 00:18:54,799
we can tell that by looking at the clock

495
00:18:54,799 --> 00:18:57,280
skew value if that if the attack is done

496
00:18:57,280 --> 00:18:59,919
periodically then we can say

497
00:18:59,919 --> 00:19:01,840
oh okay this attacker must have been

498
00:19:01,840 --> 00:19:04,960
using this ecu to inject this message so

499
00:19:04,960 --> 00:19:07,360
now we have a rough idea on who actually

500
00:19:07,360 --> 00:19:09,039
was attacking the

501
00:19:09,039 --> 00:19:11,840
attacking the bus

502
00:19:13,360 --> 00:19:16,080
also we evaluated our message pairwise

503
00:19:16,080 --> 00:19:17,919
detection that's looking that which

504
00:19:17,919 --> 00:19:19,520
looks at the correlation between

505
00:19:19,520 --> 00:19:21,440
messages offsets

506
00:19:21,440 --> 00:19:23,760
so people can ask what if the in-person

507
00:19:23,760 --> 00:19:26,000
impersonating node has near equivalent

508
00:19:26,000 --> 00:19:27,520
cluster in the first place because of

509
00:19:27,520 --> 00:19:30,160
the birthday paradox or what if the

510
00:19:30,160 --> 00:19:32,960
attacker tries to control its matches

511
00:19:32,960 --> 00:19:35,600
clock skew by heating up or cooling down

512
00:19:35,600 --> 00:19:37,760
the ecu

513
00:19:37,760 --> 00:19:40,880
so we kind of evaluate the similar

514
00:19:40,880 --> 00:19:42,480
scenario by

515
00:19:42,480 --> 00:19:45,280
having this attack still with the same

516
00:19:45,280 --> 00:19:47,600
claw skew but of course with different

517
00:19:47,600 --> 00:19:50,160
instantaneous offset because we consider

518
00:19:50,160 --> 00:19:54,080
that to be difficult to imitate due to

519
00:19:54,080 --> 00:19:56,480
due to the requirements of matching the

520
00:19:56,480 --> 00:19:59,440
workloads and instantaneous temperature

521
00:19:59,440 --> 00:20:01,679
so even in this case because we were

522
00:20:01,679 --> 00:20:04,080
looking at the correlations between the

523
00:20:04,080 --> 00:20:05,440
offsets also

524
00:20:05,440 --> 00:20:07,200
it was shown that our system also

525
00:20:07,200 --> 00:20:09,120
detected that masquerade that is the

526
00:20:09,120 --> 00:20:11,039
switching from one transmitter to

527
00:20:11,039 --> 00:20:13,440
another

528
00:20:14,400 --> 00:20:16,400
false alarm rates would also be

529
00:20:16,400 --> 00:20:18,960
definitely an important aspect for idea

530
00:20:18,960 --> 00:20:22,240
systems so this shows an rc curve of our

531
00:20:22,240 --> 00:20:25,760
system with just per message detection

532
00:20:25,760 --> 00:20:27,919
we were able to detect all

533
00:20:27,919 --> 00:20:30,159
900 attacks that we mounted

534
00:20:30,159 --> 00:20:32,799
using fabrication and suspension but not

535
00:20:32,799 --> 00:20:35,120
all masquerade because

536
00:20:35,120 --> 00:20:37,360
if the attacker switches from one to

537
00:20:37,360 --> 00:20:39,600
another in a very

538
00:20:39,600 --> 00:20:42,400
good with a very good timing then

539
00:20:42,400 --> 00:20:44,960
because only this clock and that clock

540
00:20:44,960 --> 00:20:47,200
skew is pretty much the same before and

541
00:20:47,200 --> 00:20:49,760
after then we won't be able to detect

542
00:20:49,760 --> 00:20:52,000
that with just per message

543
00:20:52,000 --> 00:20:54,720
but if we added message pairwise which

544
00:20:54,720 --> 00:20:57,039
looks at instantaneous offsets and their

545
00:20:57,039 --> 00:20:58,799
correlation we were able to actually

546
00:20:58,799 --> 00:21:01,120
suppress all those false alarms and

547
00:21:01,120 --> 00:21:04,400
detect all of them correctly

548
00:21:04,400 --> 00:21:06,880
so to conclude this talk i have talked

549
00:21:06,880 --> 00:21:09,679
about a clock-based ids which detects

550
00:21:09,679 --> 00:21:11,520
malicious messages looking at their

551
00:21:11,520 --> 00:21:12,880
timings

552
00:21:12,880 --> 00:21:15,120
so basically the idea was to fingerprint

553
00:21:15,120 --> 00:21:18,000
transmitters by extracting clock skews

554
00:21:18,000 --> 00:21:19,919
of them

555
00:21:19,919 --> 00:21:22,400
and one merit of this idea system

556
00:21:22,400 --> 00:21:24,480
overcomes some limitations that existing

557
00:21:24,480 --> 00:21:27,039
ideas had on for vehicles

558
00:21:27,039 --> 00:21:29,520
and most importantly we didn't require

559
00:21:29,520 --> 00:21:31,679
any change in the protocol or message

560
00:21:31,679 --> 00:21:33,039
itself so

561
00:21:33,039 --> 00:21:35,360
we believe this is a one good merit for

562
00:21:35,360 --> 00:21:38,000
this kind of approach

563
00:21:38,000 --> 00:21:39,440
so although our

564
00:21:39,440 --> 00:21:41,039
talk was more focused on intrusion

565
00:21:41,039 --> 00:21:42,799
detection and a bit on root cause

566
00:21:42,799 --> 00:21:44,799
analysis we believe these kind of

567
00:21:44,799 --> 00:21:46,159
schemes can be applied for

568
00:21:46,159 --> 00:21:48,000
authentication schemes and

569
00:21:48,000 --> 00:21:50,480
all other schemes that you can imagine

570
00:21:50,480 --> 00:21:52,160
thank you

571
00:21:52,160 --> 00:22:00,480
[Applause]

572
00:22:00,480 --> 00:22:03,440
microsoft research great work um that's

573
00:22:03,440 --> 00:22:05,440
my question about kind of timeliness of

574
00:22:05,440 --> 00:22:06,799
your detection

575
00:22:06,799 --> 00:22:09,360
i assume that you know if attacks going

576
00:22:09,360 --> 00:22:11,679
on you the ideal you want to detect like

577
00:22:11,679 --> 00:22:13,520
right away right but looks like you're

578
00:22:13,520 --> 00:22:15,600
scheming you need to kind of observe

579
00:22:15,600 --> 00:22:17,520
some a little bit of messages to be able

580
00:22:17,520 --> 00:22:20,240
to detect this clock skew so can you

581
00:22:20,240 --> 00:22:21,919
tell us a little bit about the

582
00:22:21,919 --> 00:22:24,159
timeliness of your detection i i think

583
00:22:24,159 --> 00:22:26,159
that's a great question like because as

584
00:22:26,159 --> 00:22:28,640
you said to detect say fabrication

585
00:22:28,640 --> 00:22:30,400
attack we can detect that immediately

586
00:22:30,400 --> 00:22:33,200
but for masquerade attack we have to get

587
00:22:33,200 --> 00:22:35,280
that clock value which takes some

588
00:22:35,280 --> 00:22:38,400
messages to actually measure that so

589
00:22:38,400 --> 00:22:40,720
for in our experiment we took 10

590
00:22:40,720 --> 00:22:41,919
messages

591
00:22:41,919 --> 00:22:44,320
to to get one clock skew say cloud

592
00:22:44,320 --> 00:22:47,280
offset value so that would take around

593
00:22:47,280 --> 00:22:49,679
100 milliseconds for a 10 millisecond

594
00:22:49,679 --> 00:22:50,720
message

595
00:22:50,720 --> 00:22:51,520
and

596
00:22:51,520 --> 00:22:52,799
so

597
00:22:52,799 --> 00:22:54,720
yeah it depends on what messages we are

598
00:22:54,720 --> 00:22:56,320
trying to do and that's one aspect that

599
00:22:56,320 --> 00:22:58,799
we should look into as a for future work

600
00:22:58,799 --> 00:23:01,039
so the timeliness is another important

601
00:23:01,039 --> 00:23:03,600
aspect yes

602
00:23:04,480 --> 00:23:07,360
hi so uh the clock sku is typically

603
00:23:07,360 --> 00:23:10,240
affected a lot by environmental factors

604
00:23:10,240 --> 00:23:12,400
like temperature right so in your

605
00:23:12,400 --> 00:23:14,159
experiments have you also looked whether

606
00:23:14,159 --> 00:23:16,640
your detection accuracy is affected for

607
00:23:16,640 --> 00:23:18,799
example when

608
00:23:18,799 --> 00:23:20,640
let's say engine heats up

609
00:23:20,640 --> 00:23:22,720
whether this creates additional false

610
00:23:22,720 --> 00:23:25,840
positives and second part of my question

611
00:23:25,840 --> 00:23:28,159
i mean uh the communication on the can

612
00:23:28,159 --> 00:23:30,000
bus is not strictly periodic right you

613
00:23:30,000 --> 00:23:32,559
have event-based messages that may also

614
00:23:32,559 --> 00:23:34,320
influence the periodicity of your

615
00:23:34,320 --> 00:23:36,400
communication so have you how have you

616
00:23:36,400 --> 00:23:38,640
taken this into account uh can you

617
00:23:38,640 --> 00:23:40,080
repeat the second section the second

618
00:23:40,080 --> 00:23:41,840
question is there's also event-based

619
00:23:41,840 --> 00:23:43,520
communication on the canvas that

620
00:23:43,520 --> 00:23:46,400
basically uh violates the periodicity of

621
00:23:46,400 --> 00:23:48,720
the communication so have you seen this

622
00:23:48,720 --> 00:23:50,720
and has this led to false positives oh

623
00:23:50,720 --> 00:23:53,520
okay so to answer to the first question

624
00:23:53,520 --> 00:23:55,600
um we did uh

625
00:23:55,600 --> 00:23:57,760
in our car experiment we didn't really

626
00:23:57,760 --> 00:23:58,720
actually

627
00:23:58,720 --> 00:24:01,440
try to heat it up or like cool it down

628
00:24:01,440 --> 00:24:04,000
before heating up it would it would

629
00:24:04,000 --> 00:24:06,480
incur false positive results if it's

630
00:24:06,480 --> 00:24:08,640
changing too much but what we also

631
00:24:08,640 --> 00:24:10,400
looked at as you can see we also looked

632
00:24:10,400 --> 00:24:12,080
at the instantaneous values how it

633
00:24:12,080 --> 00:24:14,799
changed so that change also

634
00:24:14,799 --> 00:24:17,120
that changes are less

635
00:24:17,120 --> 00:24:19,520
impacted by the temperature itself so

636
00:24:19,520 --> 00:24:23,600
that's why we try to combine both so for

637
00:24:23,600 --> 00:24:25,360
for those temperature effects we

638
00:24:25,360 --> 00:24:27,600
consider message pairwise detection to

639
00:24:27,600 --> 00:24:30,320
actually be able to deal with that and

640
00:24:30,320 --> 00:24:32,480
to answer to the second question um it

641
00:24:32,480 --> 00:24:35,360
depends on the car that that we have so

642
00:24:35,360 --> 00:24:36,960
for the car that we have for the honda

643
00:24:36,960 --> 00:24:41,440
accord most say 95 were periodic and for

644
00:24:41,440 --> 00:24:43,840
the dodge ram pickup data that i used

645
00:24:43,840 --> 00:24:47,600
they all 51 messages were periodic so in

646
00:24:47,600 --> 00:24:51,600
cars like i saw um like on except for

647
00:24:51,600 --> 00:24:53,840
like two or three messages on the canvas

648
00:24:53,840 --> 00:24:55,840
everything was periodic so we we're not

649
00:24:55,840 --> 00:24:58,159
really focusing on the aperiodic ones

650
00:24:58,159 --> 00:25:00,400
but we are we're just focusing on the

651
00:25:00,400 --> 00:25:03,360
periodic message okay did you also uh

652
00:25:03,360 --> 00:25:05,440
looked at the car in operation so while

653
00:25:05,440 --> 00:25:08,159
driving while triggering actuators or

654
00:25:08,159 --> 00:25:10,159
was it basically just the baseline when

655
00:25:10,159 --> 00:25:12,000
the car was

656
00:25:12,000 --> 00:25:13,840
where the engine was running but not not

657
00:25:13,840 --> 00:25:16,559
traveling yeah so i think our messages

658
00:25:16,559 --> 00:25:18,960
are mostly configured to be periodic

659
00:25:18,960 --> 00:25:21,520
regardless of how they are actuated for

660
00:25:21,520 --> 00:25:23,600
some messages of course they can be a

661
00:25:23,600 --> 00:25:25,520
periodic so

662
00:25:25,520 --> 00:25:28,080
as a as you said as a baseline

663
00:25:28,080 --> 00:25:30,320
we have everything as as periodic so

664
00:25:30,320 --> 00:25:33,039
that's what we used

665
00:25:33,679 --> 00:25:34,640
so

666
00:25:34,640 --> 00:25:37,440
young that came from christ um

667
00:25:37,440 --> 00:25:38,559
if the

668
00:25:38,559 --> 00:25:39,440
the

669
00:25:39,440 --> 00:25:42,480
ecu is compromised can it learn the

670
00:25:42,480 --> 00:25:44,000
clock skews

671
00:25:44,000 --> 00:25:46,799
and try to emulate

672
00:25:46,799 --> 00:25:50,240
exactly other issues behavior yeah

673
00:25:50,240 --> 00:25:53,760
exactly so what the attacker might do is

674
00:25:53,760 --> 00:25:55,679
try to learn the clock skew heat it up

675
00:25:55,679 --> 00:25:57,120
or cool it down and match the

676
00:25:57,120 --> 00:25:58,720
temperature and try to match the clock

677
00:25:58,720 --> 00:26:02,559
skew but what we observed is even though

678
00:26:02,559 --> 00:26:05,200
it matches that slope the instantaneous

679
00:26:05,200 --> 00:26:07,520
change cannot be matched unless you find

680
00:26:07,520 --> 00:26:09,120
it control your temperature in fine

681
00:26:09,120 --> 00:26:11,039
grain and also that klovsky would also

682
00:26:11,039 --> 00:26:13,279
be affected by other factors

683
00:26:13,279 --> 00:26:14,080
so

684
00:26:14,080 --> 00:26:16,799
unless it is sent by the same ecu that

685
00:26:16,799 --> 00:26:19,360
instantaneous value was not quite

686
00:26:19,360 --> 00:26:21,919
magical but it could be possible i won't

687
00:26:21,919 --> 00:26:24,080
say no but i would say it's very

688
00:26:24,080 --> 00:26:26,559
difficult compared to to just like

689
00:26:26,559 --> 00:26:30,799
matching the long trends all right

690
00:26:31,279 --> 00:26:32,799
sahara muslin from george mason

691
00:26:32,799 --> 00:26:34,080
university

692
00:26:34,080 --> 00:26:36,400
uh congrats for the nice work i would

693
00:26:36,400 --> 00:26:38,960
like to know uh does these uh for

694
00:26:38,960 --> 00:26:42,400
example fingerprints or these clock skus

695
00:26:42,400 --> 00:26:44,880
are affected by the time or bearing off

696
00:26:44,880 --> 00:26:47,200
or that do they change by the time or if

697
00:26:47,200 --> 00:26:49,360
somebody reprogram or exchange these

698
00:26:49,360 --> 00:26:51,679
issues with their new ones

699
00:26:51,679 --> 00:26:53,919
the clock skill is different or they're

700
00:26:53,919 --> 00:26:55,760
the same

701
00:26:55,760 --> 00:26:57,120
so

702
00:26:57,120 --> 00:26:58,799
how long they are valid basically how

703
00:26:58,799 --> 00:26:59,919
long these

704
00:26:59,919 --> 00:27:01,919
fingerprints are valid

705
00:27:01,919 --> 00:27:04,240
are valid yes so

706
00:27:04,240 --> 00:27:06,960
for our experiment uh we actually locked

707
00:27:06,960 --> 00:27:09,679
the data for at least an hour so for an

708
00:27:09,679 --> 00:27:12,240
hour we will say yes but for like 24

709
00:27:12,240 --> 00:27:14,159
hours or so

710
00:27:14,159 --> 00:27:16,000
um

711
00:27:16,000 --> 00:27:18,240
i didn't really experiment up until up

712
00:27:18,240 --> 00:27:20,320
to that time so i won't i'm not sure but

713
00:27:20,320 --> 00:27:23,440
this rls always and why we used it is

714
00:27:23,440 --> 00:27:26,399
because it's uh recursively learning the

715
00:27:26,399 --> 00:27:28,799
uh slope and unless that slope is

716
00:27:28,799 --> 00:27:30,559
suddenly changing as in

717
00:27:30,559 --> 00:27:32,960
the fabrication or masquerade attack it

718
00:27:32,960 --> 00:27:34,960
would actually adapt to how that is

719
00:27:34,960 --> 00:27:37,200
changing so that can also be considered

720
00:27:37,200 --> 00:27:38,799
as false positive results that might

721
00:27:38,799 --> 00:27:40,960
have to be considered in the system i'm

722
00:27:40,960 --> 00:27:44,159
just curious about to know uh does these

723
00:27:44,159 --> 00:27:45,760
fingerprints are different in the

724
00:27:45,760 --> 00:27:47,600
critical ecus compared to the

725
00:27:47,600 --> 00:27:49,600
non-critical issues or there's no

726
00:27:49,600 --> 00:27:52,799
difference for fingerprinting

727
00:27:52,799 --> 00:27:55,360
we know which message was sent by which

728
00:27:55,360 --> 00:27:58,159
ecu but we don't know whether that ecu

729
00:27:58,159 --> 00:27:58,880
was

730
00:27:58,880 --> 00:28:00,720
safety critical or not we just have a

731
00:28:00,720 --> 00:28:02,559
rough idea based on just looking at the

732
00:28:02,559 --> 00:28:04,880
period of the cities and if the the

733
00:28:04,880 --> 00:28:07,520
frequency was very high then we just

734
00:28:07,520 --> 00:28:09,679
think it might be a safety critical ecu

735
00:28:09,679 --> 00:28:11,840
but it was not that

736
00:28:11,840 --> 00:28:12,799
thank you

737
00:28:12,799 --> 00:28:14,799
one last last question

738
00:28:14,799 --> 00:28:16,000
hi

739
00:28:16,000 --> 00:28:18,880
frank heist so uh can you apply this

740
00:28:18,880 --> 00:28:21,039
technique to prevent

741
00:28:21,039 --> 00:28:23,360
the canned message injections oh yeah

742
00:28:23,360 --> 00:28:25,520
that's because yeah because

743
00:28:25,520 --> 00:28:26,640
if uh

744
00:28:26,640 --> 00:28:29,120
if you if you can even though you can't

745
00:28:29,120 --> 00:28:32,559
detect the canned messages then

746
00:28:32,559 --> 00:28:35,440
after the accident it's not yeah right

747
00:28:35,440 --> 00:28:38,240
so yeah that's one great question so um

748
00:28:38,240 --> 00:28:40,320
this is not really for prevention it's

749
00:28:40,320 --> 00:28:43,279
for detection but for masquerade attack

750
00:28:43,279 --> 00:28:45,279
as i said even though the the attacker

751
00:28:45,279 --> 00:28:47,200
actually switched and doesn't really

752
00:28:47,200 --> 00:28:48,720
inject

753
00:28:48,720 --> 00:28:50,960
something malicious

754
00:28:50,960 --> 00:28:52,480
the network traffic would look fine the

755
00:28:52,480 --> 00:28:55,120
driving would be fine but the switch in

756
00:28:55,120 --> 00:28:57,279
the transmitter would be detectable so

757
00:28:57,279 --> 00:29:00,399
we can somehow think that as something

758
00:29:00,399 --> 00:29:02,799
preventing a further say fabrication

759
00:29:02,799 --> 00:29:05,120
attack or something but we cannot really

760
00:29:05,120 --> 00:29:07,039
prevent everything we're just trying to

761
00:29:07,039 --> 00:29:09,520
focus on how to detect it so i believe

762
00:29:09,520 --> 00:29:10,960
prevention

763
00:29:10,960 --> 00:29:12,799
should be done in a very different or

764
00:29:12,799 --> 00:29:15,520
maybe you can optimize the techniques to

765
00:29:15,520 --> 00:29:17,760
check the can messages before processing

766
00:29:17,760 --> 00:29:20,559
they can message in each issue then

767
00:29:20,559 --> 00:29:22,720
yeah that can be an odd way

768
00:29:22,720 --> 00:29:25,720
thanks

769
00:29:28,480 --> 00:29:30,190
oh

770
00:29:30,190 --> 00:29:34,719
[Applause]

