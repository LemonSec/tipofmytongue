1
00:00:10,240 --> 00:00:11,599
hi everyone

2
00:00:11,599 --> 00:00:13,200
my name is carol bartosz i'm a

3
00:00:13,200 --> 00:00:16,400
researcher from cisco and i would like

4
00:00:16,400 --> 00:00:19,520
to show you today a new way how to

5
00:00:19,520 --> 00:00:21,760
represent network traffic so we can

6
00:00:21,760 --> 00:00:22,800
detect

7
00:00:22,800 --> 00:00:24,960
new and previously unseen malware

8
00:00:24,960 --> 00:00:26,560
variants

9
00:00:26,560 --> 00:00:29,439
so a little bit of motivation

10
00:00:29,439 --> 00:00:31,199
every day we see

11
00:00:31,199 --> 00:00:33,600
a large variety of

12
00:00:33,600 --> 00:00:36,960
malicious samples and to detect that we

13
00:00:36,960 --> 00:00:38,879
need a lot of labels

14
00:00:38,879 --> 00:00:41,680
and we don't have that because obtaining

15
00:00:41,680 --> 00:00:44,800
additional labels is very costly so the

16
00:00:44,800 --> 00:00:46,000
current

17
00:00:46,000 --> 00:00:47,920
security

18
00:00:47,920 --> 00:00:50,640
detectors rely heavily on signature

19
00:00:50,640 --> 00:00:53,039
matching feeds blacklists

20
00:00:53,039 --> 00:00:54,879
and those things

21
00:00:54,879 --> 00:00:57,120
they are fine they have a really good

22
00:00:57,120 --> 00:00:58,559
precision

23
00:00:58,559 --> 00:01:01,280
but their ability to detect new things

24
00:01:01,280 --> 00:01:03,120
is very limited

25
00:01:03,120 --> 00:01:06,240
and what's worse is that

26
00:01:06,240 --> 00:01:07,760
the behavior

27
00:01:07,760 --> 00:01:11,200
changes introduce problems uh when we

28
00:01:11,200 --> 00:01:13,680
want to train the detectors

29
00:01:13,680 --> 00:01:16,400
so http or https

30
00:01:16,400 --> 00:01:18,880
is heavily used by the attackers

31
00:01:18,880 --> 00:01:21,759
for large variety of attacks

32
00:01:21,759 --> 00:01:24,240
and some of them follow an escalation

33
00:01:24,240 --> 00:01:27,040
path which means that they initially

34
00:01:27,040 --> 00:01:28,240
start

35
00:01:28,240 --> 00:01:29,759
at

36
00:01:29,759 --> 00:01:32,320
for example as a money scam or an

37
00:01:32,320 --> 00:01:36,240
injector some of them can advance and

38
00:01:36,240 --> 00:01:38,159
use exploit kits

39
00:01:38,159 --> 00:01:40,720
to get to the terminal stage

40
00:01:40,720 --> 00:01:41,600
where

41
00:01:41,600 --> 00:01:43,759
the damage has been done and there is no

42
00:01:43,759 --> 00:01:45,200
turning back

43
00:01:45,200 --> 00:01:49,040
which is exfiltration or run somewhere

44
00:01:49,040 --> 00:01:51,439
and our goal is to detect these all of

45
00:01:51,439 --> 00:01:53,520
these threats

46
00:01:53,520 --> 00:01:56,799
with our representation

47
00:01:56,799 --> 00:01:58,560
and the representation should be

48
00:01:58,560 --> 00:02:02,240
invariant in terms of okay we can detect

49
00:02:02,240 --> 00:02:04,640
current attacks but when an attacker

50
00:02:04,640 --> 00:02:07,360
change will change something we will

51
00:02:07,360 --> 00:02:10,000
still be able to detect that and the

52
00:02:10,000 --> 00:02:12,319
most typical changes we see

53
00:02:12,319 --> 00:02:14,640
are the following the change in the

54
00:02:14,640 --> 00:02:16,400
malicious code payload

55
00:02:16,400 --> 00:02:19,120
or obfuscation it happens all the time

56
00:02:19,120 --> 00:02:21,040
change in host name or server ip address

57
00:02:21,040 --> 00:02:23,200
to bypass the blacklist

58
00:02:23,200 --> 00:02:25,120
right changing the intensity of the

59
00:02:25,120 --> 00:02:28,400
attack in timings or in the

60
00:02:28,400 --> 00:02:31,040
components of the url everything happens

61
00:02:31,040 --> 00:02:33,120
very frequently and we want to build a

62
00:02:33,120 --> 00:02:35,680
representation that is invariant against

63
00:02:35,680 --> 00:02:37,280
those changes

64
00:02:37,280 --> 00:02:39,200
so our input data

65
00:02:39,200 --> 00:02:42,959
is uh we we use proxy log records

66
00:02:42,959 --> 00:02:45,200
which are basically infor which is

67
00:02:45,200 --> 00:02:47,040
information from the header of the

68
00:02:47,040 --> 00:02:48,239
packets

69
00:02:48,239 --> 00:02:50,640
and it's a metadata with the fields like

70
00:02:50,640 --> 00:02:55,040
time ip url user agent my type

71
00:02:55,040 --> 00:02:57,040
and those things

72
00:02:57,040 --> 00:02:59,040
and i will be referring to

73
00:02:59,040 --> 00:03:01,120
uh

74
00:03:01,120 --> 00:03:04,480
one one flow will be for me one row

75
00:03:04,480 --> 00:03:06,159
in these

76
00:03:06,159 --> 00:03:08,560
proxy lock records so basically one flow

77
00:03:08,560 --> 00:03:12,159
is a one connection in in this data

78
00:03:12,159 --> 00:03:14,480
and

79
00:03:16,159 --> 00:03:19,519
i will be very frequently using the word

80
00:03:19,519 --> 00:03:23,040
back which is actually a set of laws

81
00:03:23,040 --> 00:03:24,239
with the same

82
00:03:24,239 --> 00:03:26,319
user or device

83
00:03:26,319 --> 00:03:29,440
and the same host name so it basically

84
00:03:29,440 --> 00:03:31,519
describes the communication between one

85
00:03:31,519 --> 00:03:34,560
user and one host name

86
00:03:34,560 --> 00:03:37,599
and we what we did we took all our

87
00:03:37,599 --> 00:03:40,400
all our malicious traffic that we had

88
00:03:40,400 --> 00:03:44,640
and divided that into three groups

89
00:03:44,640 --> 00:03:46,480
the first one

90
00:03:46,480 --> 00:03:47,360
uh

91
00:03:47,360 --> 00:03:48,239
is

92
00:03:48,239 --> 00:03:50,640
called single flow backs let's say and

93
00:03:50,640 --> 00:03:52,640
those bags are

94
00:03:52,640 --> 00:03:54,720
uh the communic single flow

95
00:03:54,720 --> 00:03:57,040
communication from a user to one domain

96
00:03:57,040 --> 00:04:00,319
so those bags have only one flow

97
00:04:00,319 --> 00:04:03,439
for a long period of time

98
00:04:03,439 --> 00:04:06,080
it could be basically some unsuccessful

99
00:04:06,080 --> 00:04:07,760
attempts

100
00:04:07,760 --> 00:04:10,720
when a dga domain or

101
00:04:10,720 --> 00:04:13,280
if if a malware wants to contact a dji

102
00:04:13,280 --> 00:04:14,959
domain that

103
00:04:14,959 --> 00:04:17,358
doesn't exist or something like that so

104
00:04:17,358 --> 00:04:19,199
those backs are not that

105
00:04:19,199 --> 00:04:22,079
much interesting

106
00:04:22,079 --> 00:04:24,000
then the second one is more interesting

107
00:04:24,000 --> 00:04:26,160
those bags are static bags where we can

108
00:04:26,160 --> 00:04:29,759
observe more flows but all of them are

109
00:04:29,759 --> 00:04:31,840
the same so it could basically be

110
00:04:31,840 --> 00:04:34,240
something like a cnc

111
00:04:34,240 --> 00:04:38,479
channel as when where the

112
00:04:38,639 --> 00:04:41,120
channel asks what to do with with the

113
00:04:41,120 --> 00:04:43,840
infected machine

114
00:04:44,320 --> 00:04:46,000
and finally the most interesting

115
00:04:46,000 --> 00:04:48,000
category

116
00:04:48,000 --> 00:04:49,919
is the dynamic backs where we can

117
00:04:49,919 --> 00:04:52,160
observe a different

118
00:04:52,160 --> 00:04:53,440
flaws

119
00:04:53,440 --> 00:04:55,040
in the communication between the

120
00:04:55,040 --> 00:04:56,479
infected user

121
00:04:56,479 --> 00:05:00,320
and domain and this is what we actually

122
00:05:00,320 --> 00:05:01,840
are focusing on

123
00:05:01,840 --> 00:05:03,039
because

124
00:05:03,039 --> 00:05:04,160
the

125
00:05:04,160 --> 00:05:07,360
single flow bags or static bags can be

126
00:05:07,360 --> 00:05:10,240
modeled by fl standard and widely used

127
00:05:10,240 --> 00:05:12,400
flow based features which means that you

128
00:05:12,400 --> 00:05:15,759
will take one flow extract a predefined

129
00:05:15,759 --> 00:05:17,440
set of features put it into the

130
00:05:17,440 --> 00:05:19,440
classifier and that's it

131
00:05:19,440 --> 00:05:21,520
and since all of the flows are the same

132
00:05:21,520 --> 00:05:25,680
there is like no way how to use the

133
00:05:25,680 --> 00:05:28,000
the other features but in case of the

134
00:05:28,000 --> 00:05:29,919
dynamic backs

135
00:05:29,919 --> 00:05:31,680
it doesn't i'll show you that it doesn't

136
00:05:31,680 --> 00:05:33,919
work and we need to

137
00:05:33,919 --> 00:05:36,080
define a new representation that is

138
00:05:36,080 --> 00:05:36,960
based

139
00:05:36,960 --> 00:05:39,039
on the back itself

140
00:05:39,039 --> 00:05:42,800
and not on the individual flow

141
00:05:42,800 --> 00:05:46,080
so let me show you a simple example

142
00:05:46,080 --> 00:05:49,120
here you can see a two bags

143
00:05:49,120 --> 00:05:51,360
of

144
00:05:51,360 --> 00:05:53,120
malverciality

145
00:05:53,120 --> 00:05:55,759
and the question is are they similar or

146
00:05:55,759 --> 00:05:57,199
different

147
00:05:57,199 --> 00:06:00,160
so if you look at it from the flow based

148
00:06:00,160 --> 00:06:01,520
perspective

149
00:06:01,520 --> 00:06:03,039
you would say they are different because

150
00:06:03,039 --> 00:06:05,600
they have a different host name

151
00:06:05,600 --> 00:06:07,600
different path different file name

152
00:06:07,600 --> 00:06:11,520
different parameters right so if

153
00:06:11,520 --> 00:06:12,560
if we

154
00:06:12,560 --> 00:06:14,400
make it really simple for an

155
00:06:14,400 --> 00:06:16,960
illustration and see okay we have one

156
00:06:16,960 --> 00:06:18,960
feature which is the url length and we

157
00:06:18,960 --> 00:06:21,280
will ex will use it to classify these

158
00:06:21,280 --> 00:06:22,560
two bags

159
00:06:22,560 --> 00:06:24,240
uh

160
00:06:24,240 --> 00:06:26,639
for the first for the first black we we

161
00:06:26,639 --> 00:06:28,160
got five

162
00:06:28,160 --> 00:06:30,240
numbers for the second one

163
00:06:30,240 --> 00:06:32,319
five numbers as well we will put the

164
00:06:32,319 --> 00:06:34,000
first one into the training bed the

165
00:06:34,000 --> 00:06:37,600
second one into the testing back we will

166
00:06:37,600 --> 00:06:39,919
learn a model based on the training data

167
00:06:39,919 --> 00:06:40,800
that

168
00:06:40,800 --> 00:06:44,720
if the url length is between 42 44 and

169
00:06:44,720 --> 00:06:48,960
48 it means that it's malicious but

170
00:06:48,960 --> 00:06:49,840
the

171
00:06:49,840 --> 00:06:51,759
testing back is not detected because the

172
00:06:51,759 --> 00:06:54,319
length is more than 48

173
00:06:54,319 --> 00:06:55,840
and you can say okay that's a very

174
00:06:55,840 --> 00:06:58,319
simple example right i agree but we did

175
00:06:58,319 --> 00:07:01,120
much more investigations here and we

176
00:07:01,120 --> 00:07:03,360
analyzed many malware categories and

177
00:07:03,360 --> 00:07:05,120
many floor-based features

178
00:07:05,120 --> 00:07:06,240
and

179
00:07:06,240 --> 00:07:08,880
this is exactly what happened

180
00:07:08,880 --> 00:07:10,400
so they

181
00:07:10,400 --> 00:07:12,240
in on the illustration

182
00:07:12,240 --> 00:07:13,120
the

183
00:07:13,120 --> 00:07:16,319
arrows represent malware categories and

184
00:07:16,319 --> 00:07:19,360
the columns are

185
00:07:19,440 --> 00:07:21,440
the columns are features

186
00:07:21,440 --> 00:07:23,520
and the color represents the variability

187
00:07:23,520 --> 00:07:27,039
within the category for this particular

188
00:07:27,039 --> 00:07:29,360
feature yellow means that all of the

189
00:07:29,360 --> 00:07:32,160
values are different while the blue

190
00:07:32,160 --> 00:07:34,880
color represents or means that all of

191
00:07:34,880 --> 00:07:37,120
the values are the same so the most

192
00:07:37,120 --> 00:07:39,599
variable is url string itself which is

193
00:07:39,599 --> 00:07:42,080
not surprising right but what it is what

194
00:07:42,080 --> 00:07:44,560
this illustrates is that

195
00:07:44,560 --> 00:07:48,080
it's even hard to actually learn

196
00:07:48,080 --> 00:07:49,199
a

197
00:07:49,199 --> 00:07:52,560
flow-based classifier for one specific

198
00:07:52,560 --> 00:07:54,960
category not mentioning

199
00:07:54,960 --> 00:07:57,520
a classifier for all of those categories

200
00:07:57,520 --> 00:07:59,840
together

201
00:08:00,000 --> 00:08:02,960
so we should be using something else

202
00:08:02,960 --> 00:08:03,680
so

203
00:08:03,680 --> 00:08:06,400
all right we can use a histogram right

204
00:08:06,400 --> 00:08:09,120
so we will predefine a number of bins

205
00:08:09,120 --> 00:08:10,160
and

206
00:08:10,160 --> 00:08:12,560
put the value flow-based feature values

207
00:08:12,560 --> 00:08:15,199
in the histogram and got this feature

208
00:08:15,199 --> 00:08:16,319
vector

209
00:08:16,319 --> 00:08:18,160
let's say we have four bins for

210
00:08:18,160 --> 00:08:20,479
simplicity we'll do the same thing for

211
00:08:20,479 --> 00:08:22,720
the testing back and

212
00:08:22,720 --> 00:08:25,360
yeah we got much better

213
00:08:25,360 --> 00:08:28,319
result but the question is okay is it

214
00:08:28,319 --> 00:08:30,800
enough or not so we thought okay let's

215
00:08:30,800 --> 00:08:33,200
find something even better than that

216
00:08:33,200 --> 00:08:35,919
and we want to ask ourselves what is

217
00:08:35,919 --> 00:08:37,200
actually the thing that we want to

218
00:08:37,200 --> 00:08:38,320
represent

219
00:08:38,320 --> 00:08:40,479
what is the common thing across the

220
00:08:40,479 --> 00:08:42,399
malware categories

221
00:08:42,399 --> 00:08:43,440
so

222
00:08:43,440 --> 00:08:44,959
here is uh

223
00:08:44,959 --> 00:08:47,839
you can see a few examples of different

224
00:08:47,839 --> 00:08:50,080
malware bags and two examples of

225
00:08:50,080 --> 00:08:52,800
legitimate traffic i hope you can read

226
00:08:52,800 --> 00:08:54,480
the

227
00:08:54,480 --> 00:08:56,240
exact characters

228
00:08:56,240 --> 00:08:58,320
because then you would be following you

229
00:08:58,320 --> 00:08:59,839
would be focusing on the flow based

230
00:08:59,839 --> 00:09:02,160
features and that's what we want to

231
00:09:02,160 --> 00:09:04,640
avoid

232
00:09:04,959 --> 00:09:05,760
but

233
00:09:05,760 --> 00:09:09,120
if you have a look at it from distance

234
00:09:09,120 --> 00:09:11,519
you would see that okay

235
00:09:11,519 --> 00:09:14,640
these the malware bags look or the flows

236
00:09:14,640 --> 00:09:16,959
within the malware back

237
00:09:16,959 --> 00:09:19,040
look very similar

238
00:09:19,040 --> 00:09:22,560
and this applies to every back here

239
00:09:22,560 --> 00:09:24,560
as opposed to the legitimate traffic

240
00:09:24,560 --> 00:09:27,920
where the flows or where the urls are

241
00:09:27,920 --> 00:09:30,160
actually very different right because

242
00:09:30,160 --> 00:09:32,560
you have to download if you go to a

243
00:09:32,560 --> 00:09:34,000
legitimate page you have to download

244
00:09:34,000 --> 00:09:36,560
some javascript some pictures

245
00:09:36,560 --> 00:09:38,800
some frames right and so on and so forth

246
00:09:38,800 --> 00:09:41,519
so the the urls are different

247
00:09:41,519 --> 00:09:43,760
and this is exactly what we want to

248
00:09:43,760 --> 00:09:45,200
extract here

249
00:09:45,200 --> 00:09:47,600
the url structure

250
00:09:47,600 --> 00:09:48,320
of

251
00:09:48,320 --> 00:09:49,120
the

252
00:09:49,120 --> 00:09:52,080
malwarebacks or in other words the

253
00:09:52,080 --> 00:09:54,480
malware dynamics

254
00:09:54,480 --> 00:09:55,440
and

255
00:09:55,440 --> 00:09:57,920
how we are going to do that well we can

256
00:09:57,920 --> 00:10:00,480
see a parallel in action recognition

257
00:10:00,480 --> 00:10:03,040
when we had when you have a sequence of

258
00:10:03,040 --> 00:10:05,920
images and you want to detect or

259
00:10:05,920 --> 00:10:08,800
recognize some kind of action

260
00:10:08,800 --> 00:10:10,560
so for us

261
00:10:10,560 --> 00:10:14,480
one image is basically one flow

262
00:10:14,480 --> 00:10:18,000
and the video is the sequence is it is

263
00:10:18,000 --> 00:10:19,200
the back

264
00:10:19,200 --> 00:10:22,240
so the back actually describes a video

265
00:10:22,240 --> 00:10:25,680
of malware and we want to

266
00:10:25,680 --> 00:10:28,079
we want to detect that

267
00:10:28,079 --> 00:10:30,800
so what is commonly used

268
00:10:30,800 --> 00:10:34,079
in action recognition

269
00:10:34,079 --> 00:10:34,959
is

270
00:10:34,959 --> 00:10:38,240
self-similarity metrics so we compute

271
00:10:38,240 --> 00:10:39,440
from the

272
00:10:39,440 --> 00:10:41,440
flow-based feature values self-simulator

273
00:10:41,440 --> 00:10:44,560
matrix which is a matrix where

274
00:10:44,560 --> 00:10:47,920
for example at uh the first flow you

275
00:10:47,920 --> 00:10:50,079
have uh in the first component as a

276
00:10:50,079 --> 00:10:51,680
difference from the first and the first

277
00:10:51,680 --> 00:10:53,200
and the difference between the first and

278
00:10:53,200 --> 00:10:55,600
the second first and the third and so on

279
00:10:55,600 --> 00:10:58,480
and so forth so you get these metrics of

280
00:10:58,480 --> 00:11:00,560
the differences and it actually

281
00:11:00,560 --> 00:11:03,040
describes the dynamics and it describes

282
00:11:03,040 --> 00:11:04,480
what we need

283
00:11:04,480 --> 00:11:07,600
so if we do this and okay it's symmetric

284
00:11:07,600 --> 00:11:09,440
right so we can

285
00:11:09,440 --> 00:11:10,959
take only the

286
00:11:10,959 --> 00:11:13,200
lower triangular matrix of this or the

287
00:11:13,200 --> 00:11:14,800
upper it doesn't matter

288
00:11:14,800 --> 00:11:17,279
and put it into the histogram again

289
00:11:17,279 --> 00:11:18,560
and got the feature vector and

290
00:11:18,560 --> 00:11:20,640
surprisingly if we do this for these two

291
00:11:20,640 --> 00:11:21,920
bags

292
00:11:21,920 --> 00:11:24,720
the feature vectors look the same

293
00:11:24,720 --> 00:11:28,519
or they are the same

294
00:11:28,959 --> 00:11:30,560
so

295
00:11:30,560 --> 00:11:32,480
then we can combine it with the original

296
00:11:32,480 --> 00:11:36,079
histogram and we have our representation

297
00:11:36,079 --> 00:11:38,240
and with this representation we can

298
00:11:38,240 --> 00:11:41,519
actually detect all

299
00:11:41,519 --> 00:11:45,279
versions of sality but not only that

300
00:11:45,279 --> 00:11:48,720
we can also detect cryptowall which is a

301
00:11:48,720 --> 00:11:50,800
well-known ransomware right

302
00:11:50,800 --> 00:11:53,040
because as you can see it has exactly

303
00:11:53,040 --> 00:11:55,519
the same variability

304
00:11:55,519 --> 00:11:58,240
it is exactly the same dynamics

305
00:11:58,240 --> 00:12:00,480
we can detect dns changer

306
00:12:00,480 --> 00:12:03,279
actually we were the first who detected

307
00:12:03,279 --> 00:12:04,160
uh

308
00:12:04,160 --> 00:12:07,360
and large dns change outbreak few months

309
00:12:07,360 --> 00:12:09,360
back

310
00:12:09,360 --> 00:12:11,839
we can detect exploit kits

311
00:12:11,839 --> 00:12:13,839
like this rig exploit kit you can see

312
00:12:13,839 --> 00:12:16,399
that okay we have

313
00:12:16,399 --> 00:12:19,360
several urls with tons of nonsense

314
00:12:19,360 --> 00:12:21,279
traffic

315
00:12:21,279 --> 00:12:22,720
or tons of

316
00:12:22,720 --> 00:12:24,480
random characters

317
00:12:24,480 --> 00:12:26,320
we can detect directx and we can detect

318
00:12:26,320 --> 00:12:28,560
many other

319
00:12:28,560 --> 00:12:31,920
many other categories

320
00:12:32,160 --> 00:12:35,440
so this is the overview of the

321
00:12:35,440 --> 00:12:37,200
of the process of getting the

322
00:12:37,200 --> 00:12:39,839
representation so at first we have

323
00:12:39,839 --> 00:12:42,079
the flows we will group them into the

324
00:12:42,079 --> 00:12:44,320
bags extract the flow-based feature

325
00:12:44,320 --> 00:12:46,399
values

326
00:12:46,399 --> 00:12:48,480
for each feature

327
00:12:48,480 --> 00:12:51,120
we get all the values and

328
00:12:51,120 --> 00:12:53,279
compute the histogram compute the

329
00:12:53,279 --> 00:12:55,279
feature differences

330
00:12:55,279 --> 00:12:57,040
again histogram and all of this is

331
00:12:57,040 --> 00:12:59,760
concatenated into the one large feature

332
00:12:59,760 --> 00:13:02,160
vector

333
00:13:02,399 --> 00:13:04,800
and

334
00:13:04,839 --> 00:13:07,600
this representation is actually

335
00:13:07,600 --> 00:13:11,200
invariant against all of these

336
00:13:11,200 --> 00:13:13,920
changes the attacker can make to bypass

337
00:13:13,920 --> 00:13:16,480
the current security

338
00:13:16,480 --> 00:13:17,279
so

339
00:13:17,279 --> 00:13:19,839
okay we are using metadata so we are

340
00:13:19,839 --> 00:13:21,600
invariant against any malicious code

341
00:13:21,600 --> 00:13:24,079
payload obfuscation and so on it goes by

342
00:13:24,079 --> 00:13:25,519
default right

343
00:13:25,519 --> 00:13:26,320
uh

344
00:13:26,320 --> 00:13:27,920
if the attacker change

345
00:13:27,920 --> 00:13:29,760
changes if the attacker decides to

346
00:13:29,760 --> 00:13:33,839
change the server hostname it will just

347
00:13:33,839 --> 00:13:36,079
one part of the url but the structure

348
00:13:36,079 --> 00:13:38,079
will remain the same so

349
00:13:38,079 --> 00:13:39,680
no problem

350
00:13:39,680 --> 00:13:42,399
if he decided to

351
00:13:42,399 --> 00:13:45,920
change the url path or filename or

352
00:13:45,920 --> 00:13:47,760
number of flows or thinking time

353
00:13:47,760 --> 00:13:48,880
ordering

354
00:13:48,880 --> 00:13:51,680
number of bytes doesn't matter

355
00:13:51,680 --> 00:13:55,120
we're still able to detect that

356
00:13:56,320 --> 00:13:58,480
of course there are some

357
00:13:58,480 --> 00:14:02,480
limitations and i'll show the

358
00:14:02,480 --> 00:14:05,040
limitations here so i said that we are

359
00:14:05,040 --> 00:14:07,839
modeling only the dynamic behaviors

360
00:14:07,839 --> 00:14:09,920
right so if the if we observe only one

361
00:14:09,920 --> 00:14:12,880
flow or if the flow is repeating itself

362
00:14:12,880 --> 00:14:15,040
it has zero dynamics so we can't detect

363
00:14:15,040 --> 00:14:17,839
those

364
00:14:17,920 --> 00:14:21,120
if we observe multiple behaviors in the

365
00:14:21,120 --> 00:14:23,440
same bag so the bag contains like a

366
00:14:23,440 --> 00:14:24,720
mixture of

367
00:14:24,720 --> 00:14:26,880
of various behaviors it's

368
00:14:26,880 --> 00:14:30,240
it has a like violated dynamics and it

369
00:14:30,240 --> 00:14:32,160
will not be detected as well but we we

370
00:14:32,160 --> 00:14:33,519
don't see that

371
00:14:33,519 --> 00:14:34,800
very often

372
00:14:34,800 --> 00:14:37,760
because that would mean that

373
00:14:37,760 --> 00:14:39,680
you would have more

374
00:14:39,680 --> 00:14:43,040
behaviors from one user to one

375
00:14:43,040 --> 00:14:47,040
host name which is like very unlikely

376
00:14:47,040 --> 00:14:50,079
uh then https right so

377
00:14:50,079 --> 00:14:51,839
yeah we are using urls we don't have

378
00:14:51,839 --> 00:14:54,160
that with https so we are currently

379
00:14:54,160 --> 00:14:56,240
working on how to

380
00:14:56,240 --> 00:14:59,040
make it work only also

381
00:14:59,040 --> 00:15:01,279
for the https and this is a work in

382
00:15:01,279 --> 00:15:04,399
progress so this version doesn't work

383
00:15:04,399 --> 00:15:06,800
for https

384
00:15:06,800 --> 00:15:08,880
and also if the attacker

385
00:15:08,880 --> 00:15:10,959
decides to

386
00:15:10,959 --> 00:15:13,199
create a malware that would really

387
00:15:13,199 --> 00:15:14,800
dynamically

388
00:15:14,800 --> 00:15:16,720
change the behavior

389
00:15:16,720 --> 00:15:18,000
that would

390
00:15:18,000 --> 00:15:19,600
also decrease the

391
00:15:19,600 --> 00:15:21,920
the performance of the

392
00:15:21,920 --> 00:15:24,560
of the method

393
00:15:24,839 --> 00:15:26,880
so uh

394
00:15:26,880 --> 00:15:29,279
that was that was the representation and

395
00:15:29,279 --> 00:15:31,199
as you as you saw

396
00:15:31,199 --> 00:15:33,040
uh it heavily

397
00:15:33,040 --> 00:15:35,680
depends on the histograms

398
00:15:35,680 --> 00:15:36,800
and

399
00:15:36,800 --> 00:15:38,800
if you create a histogram you have

400
00:15:38,800 --> 00:15:40,720
basically

401
00:15:40,720 --> 00:15:42,880
two parameters

402
00:15:42,880 --> 00:15:45,279
the number of bins and they read

403
00:15:45,279 --> 00:15:48,160
right and usually what you do if you

404
00:15:48,160 --> 00:15:50,240
want to apply histogram you just say

405
00:15:50,240 --> 00:15:52,240
okay so let's

406
00:15:52,240 --> 00:15:55,839
define 16 equidistant bins and see

407
00:15:55,839 --> 00:15:59,199
right but that's very ineffective

408
00:15:59,199 --> 00:16:00,000
so

409
00:16:00,000 --> 00:16:03,199
what we did we actually

410
00:16:03,199 --> 00:16:05,839
invented a new way how to

411
00:16:05,839 --> 00:16:08,800
learn the number of bins and their

412
00:16:08,800 --> 00:16:10,160
widths

413
00:16:10,160 --> 00:16:12,399
automatically from the data so it is

414
00:16:12,399 --> 00:16:16,000
optimal for the classifier

415
00:16:16,000 --> 00:16:16,959
and

416
00:16:16,959 --> 00:16:19,279
this could be applied not only in the

417
00:16:19,279 --> 00:16:21,519
domain of network security but in

418
00:16:21,519 --> 00:16:24,240
the other domains in general and i don't

419
00:16:24,240 --> 00:16:26,560
want to go into the details but the i'll

420
00:16:26,560 --> 00:16:29,440
show you the basic idea

421
00:16:29,440 --> 00:16:31,040
at first

422
00:16:31,040 --> 00:16:32,480
you

423
00:16:32,480 --> 00:16:33,680
define

424
00:16:33,680 --> 00:16:36,560
a large number of small equidistant bins

425
00:16:36,560 --> 00:16:40,079
let's say hundreds of small bins

426
00:16:40,079 --> 00:16:41,600
and then

427
00:16:41,600 --> 00:16:44,399
you start iterating and start evaluating

428
00:16:44,399 --> 00:16:46,800
the classifier with those

429
00:16:46,800 --> 00:16:49,440
bins with with this representation

430
00:16:49,440 --> 00:16:52,480
and you start merging those small bins

431
00:16:52,480 --> 00:16:54,639
into larger bins

432
00:16:54,639 --> 00:16:56,480
and

433
00:16:56,480 --> 00:16:58,880
two neighbor two neighboring bins are

434
00:16:58,880 --> 00:17:01,600
merged if both contribute to the same

435
00:17:01,600 --> 00:17:03,279
class which means

436
00:17:03,279 --> 00:17:06,240
if they both contribute either to

437
00:17:06,240 --> 00:17:08,079
malicious traffic to recognize the

438
00:17:08,079 --> 00:17:09,679
malicious traffic or to recognize the

439
00:17:09,679 --> 00:17:11,760
legitimate traffic and at the end of

440
00:17:11,760 --> 00:17:13,280
this iteration

441
00:17:13,280 --> 00:17:15,439
process

442
00:17:15,439 --> 00:17:17,119
we ended up with

443
00:17:17,119 --> 00:17:19,520
a handful

444
00:17:19,520 --> 00:17:21,359
of bins

445
00:17:21,359 --> 00:17:24,959
of different widths and different sizes

446
00:17:24,959 --> 00:17:26,720
exactly

447
00:17:26,720 --> 00:17:28,799
optimal to our problem and to our

448
00:17:28,799 --> 00:17:31,280
classifier

449
00:17:31,280 --> 00:17:33,840
so

450
00:17:35,120 --> 00:17:37,600
i'll show you the let's jump into the

451
00:17:37,600 --> 00:17:39,360
experiments

452
00:17:39,360 --> 00:17:41,280
uh we

453
00:17:41,280 --> 00:17:43,840
took all our data that we had and

454
00:17:43,840 --> 00:17:45,760
separated into the two datasets the

455
00:17:45,760 --> 00:17:48,240
training data and testing data

456
00:17:48,240 --> 00:17:51,760
and for the training data we pu we used

457
00:17:51,760 --> 00:17:55,039
eight malware categories and

458
00:17:55,039 --> 00:17:57,600
a background traffic of company a let's

459
00:17:57,600 --> 00:17:59,039
say

460
00:17:59,039 --> 00:18:01,280
and the testing data

461
00:18:01,280 --> 00:18:04,240
contains 24

462
00:18:04,240 --> 00:18:06,960
completely different malware categories

463
00:18:06,960 --> 00:18:08,960
completely different from the categories

464
00:18:08,960 --> 00:18:11,520
that are in the training data

465
00:18:11,520 --> 00:18:15,120
and a background was a different company

466
00:18:15,120 --> 00:18:17,039
so it is like the

467
00:18:17,039 --> 00:18:19,200
toughest scenario that you can you can

468
00:18:19,200 --> 00:18:21,520
have

469
00:18:23,760 --> 00:18:25,520
here is the

470
00:18:25,520 --> 00:18:27,919
uh okay so it doesn't display very well

471
00:18:27,919 --> 00:18:28,720
but

472
00:18:28,720 --> 00:18:30,400
uh

473
00:18:30,400 --> 00:18:33,039
it is an illustration a two-dimensional

474
00:18:33,039 --> 00:18:34,240
projection

475
00:18:34,240 --> 00:18:36,799
of the flow-based feature values

476
00:18:36,799 --> 00:18:37,679
and

477
00:18:37,679 --> 00:18:40,240
our proposed representation and on the

478
00:18:40,240 --> 00:18:41,919
left-hand side you can see that the

479
00:18:41,919 --> 00:18:43,919
flow-based feature values

480
00:18:43,919 --> 00:18:45,679
uh

481
00:18:45,679 --> 00:18:47,919
the malicious traffic is

482
00:18:47,919 --> 00:18:50,400
distributed all over the place right so

483
00:18:50,400 --> 00:18:53,120
you can build a classifier

484
00:18:53,120 --> 00:18:55,280
with the flow based features or general

485
00:18:55,280 --> 00:18:56,880
malware classifier with the flow based

486
00:18:56,880 --> 00:18:59,600
features but what you you can do is to

487
00:18:59,600 --> 00:19:02,080
actually you can see that there are some

488
00:19:02,080 --> 00:19:04,320
small red clusters

489
00:19:04,320 --> 00:19:05,280
and

490
00:19:05,280 --> 00:19:07,679
each cluster is basically one malware

491
00:19:07,679 --> 00:19:10,160
behavior so with the flow based features

492
00:19:10,160 --> 00:19:12,400
which is a ba which is the baseline you

493
00:19:12,400 --> 00:19:15,200
should be able to learn one specific

494
00:19:15,200 --> 00:19:18,000
classifier for one specific behavior

495
00:19:18,000 --> 00:19:20,400
but not the general one

496
00:19:20,400 --> 00:19:23,520
as opposed to our representation

497
00:19:23,520 --> 00:19:26,320
where the legitimate traffic is

498
00:19:26,320 --> 00:19:29,918
like separated from the rest

499
00:19:30,000 --> 00:19:33,520
of the malicious categories

500
00:19:33,520 --> 00:19:34,880
here you can see

501
00:19:34,880 --> 00:19:36,240
the

502
00:19:36,240 --> 00:19:40,080
uh how how the bins look like

503
00:19:40,080 --> 00:19:43,200
and if we use a standard svm algorithm

504
00:19:43,200 --> 00:19:45,039
and learn the bins

505
00:19:45,039 --> 00:19:48,080
like as as a baseline you can see that

506
00:19:48,080 --> 00:19:51,039
the histogram

507
00:19:51,039 --> 00:19:52,400
this is actually the how the

508
00:19:52,400 --> 00:19:54,080
representation look like for the one

509
00:19:54,080 --> 00:19:55,600
feature

510
00:19:55,600 --> 00:19:57,600
uh the histogram

511
00:19:57,600 --> 00:20:00,719
is a chaos

512
00:20:00,960 --> 00:20:01,679
it's

513
00:20:01,679 --> 00:20:05,360
it's it has a lot of bands and they are

514
00:20:05,360 --> 00:20:08,400
chaotically going down and up and it

515
00:20:08,400 --> 00:20:11,600
this will clearly result

516
00:20:11,600 --> 00:20:12,720
into

517
00:20:12,720 --> 00:20:15,039
overtrain classifier

518
00:20:15,039 --> 00:20:16,799
as opposed to the

519
00:20:16,799 --> 00:20:17,600
uh

520
00:20:17,600 --> 00:20:20,720
our method that would that actually

521
00:20:20,720 --> 00:20:21,760
learns

522
00:20:21,760 --> 00:20:24,640
the number of bins and their sizes

523
00:20:24,640 --> 00:20:25,600
and

524
00:20:25,600 --> 00:20:28,000
we ended up with 18 bins for this

525
00:20:28,000 --> 00:20:29,360
feature

526
00:20:29,360 --> 00:20:32,640
and they are of different widths right

527
00:20:32,640 --> 00:20:35,640
but

528
00:20:35,919 --> 00:20:38,240
and here you can see what is the effect

529
00:20:38,240 --> 00:20:39,679
of this

530
00:20:39,679 --> 00:20:41,600
so if you have

531
00:20:41,600 --> 00:20:44,240
the original histogram which is like a

532
00:20:44,240 --> 00:20:45,840
chaos

533
00:20:45,840 --> 00:20:47,840
you you can see that the decision

534
00:20:47,840 --> 00:20:49,440
boundary

535
00:20:49,440 --> 00:20:50,720
is

536
00:20:50,720 --> 00:20:52,880
very complex and the classifier will be

537
00:20:52,880 --> 00:20:55,760
overtrained while the

538
00:20:55,760 --> 00:20:56,960
while

539
00:20:56,960 --> 00:20:59,840
after applying our approach the

540
00:20:59,840 --> 00:21:02,320
number of bins

541
00:21:02,320 --> 00:21:05,600
make it much more smoother and much more

542
00:21:05,600 --> 00:21:07,200
and it will actually

543
00:21:07,200 --> 00:21:09,039
increase the generalization of the

544
00:21:09,039 --> 00:21:12,080
classifier a lot

545
00:21:14,480 --> 00:21:15,679
so

546
00:21:15,679 --> 00:21:18,880
here are the final efficacy results

547
00:21:18,880 --> 00:21:20,080
uh

548
00:21:20,080 --> 00:21:21,679
on the left hand side you can see the

549
00:21:21,679 --> 00:21:24,960
roc curve in a log scale

550
00:21:24,960 --> 00:21:28,799
and the yellow line represents the

551
00:21:28,799 --> 00:21:31,919
baseline which is the flow based feature

552
00:21:31,919 --> 00:21:33,840
which is a classifier based on the flow

553
00:21:33,840 --> 00:21:35,679
based feature values

554
00:21:35,679 --> 00:21:37,480
you can see that it has very

555
00:21:37,480 --> 00:21:40,159
unsatisfactory results as opposed to the

556
00:21:40,159 --> 00:21:43,440
three lines the blue green and purple

557
00:21:43,440 --> 00:21:46,159
which are the proposed

558
00:21:46,159 --> 00:21:47,760
representation

559
00:21:47,760 --> 00:21:51,039
describing the malware dynamics

560
00:21:51,039 --> 00:21:52,080
but

561
00:21:52,080 --> 00:21:54,640
with the predefined

562
00:21:54,640 --> 00:21:56,240
number of bins

563
00:21:56,240 --> 00:22:00,080
that are equi equidistantly distributed

564
00:22:00,080 --> 00:22:01,440
and if you apply

565
00:22:01,440 --> 00:22:04,000
the other method that actually learns

566
00:22:04,000 --> 00:22:06,240
the histogram and the number of bins you

567
00:22:06,240 --> 00:22:07,520
will get the

568
00:22:07,520 --> 00:22:09,360
red curve which is

569
00:22:09,360 --> 00:22:11,919
in order of magnitude better than

570
00:22:11,919 --> 00:22:13,919
everything else

571
00:22:13,919 --> 00:22:16,480
and if we have a look at it

572
00:22:16,480 --> 00:22:19,440
from the security perspective and plot

573
00:22:19,440 --> 00:22:23,120
the precision recall curve

574
00:22:23,440 --> 00:22:26,320
the optimal point i would say is around

575
00:22:26,320 --> 00:22:30,720
90 precision and 67 recall which means

576
00:22:30,720 --> 00:22:31,679
that

577
00:22:31,679 --> 00:22:35,440
the classifier was able to learn 70 or

578
00:22:35,440 --> 00:22:39,280
67 percent of new malware categories

579
00:22:39,280 --> 00:22:41,679
was able to detect

580
00:22:41,679 --> 00:22:43,039
67

581
00:22:43,039 --> 00:22:46,320
of completely unseen categories

582
00:22:46,320 --> 00:22:48,960
with 90 precision which means that out

583
00:22:48,960 --> 00:22:52,799
of 10 alerts nine of them are actually

584
00:22:52,799 --> 00:22:55,840
malicious traffic

585
00:22:56,720 --> 00:22:58,400
so to conclude

586
00:22:58,400 --> 00:22:59,760
uh

587
00:22:59,760 --> 00:23:01,679
i'll show

588
00:23:01,679 --> 00:23:03,280
i showed you that the flow based

589
00:23:03,280 --> 00:23:06,400
representation is not very suitable for

590
00:23:06,400 --> 00:23:08,559
making a general classifiers and we need

591
00:23:08,559 --> 00:23:09,280
to

592
00:23:09,280 --> 00:23:11,919
invent new representations

593
00:23:11,919 --> 00:23:13,120
i'll show you

594
00:23:13,120 --> 00:23:15,200
an example of such a representation

595
00:23:15,200 --> 00:23:17,520
describing the modeler dynamics

596
00:23:17,520 --> 00:23:18,880
and

597
00:23:18,880 --> 00:23:22,000
also which is further improved by the

598
00:23:22,000 --> 00:23:25,679
another algorithm that learns the para

599
00:23:25,679 --> 00:23:27,840
all the parameters of the representation

600
00:23:27,840 --> 00:23:30,080
automatically from the data so there is

601
00:23:30,080 --> 00:23:32,799
no need to manually predefined anything

602
00:23:32,799 --> 00:23:35,360
which is completely

603
00:23:35,360 --> 00:23:36,880
an optimal

604
00:23:36,880 --> 00:23:38,640
and

605
00:23:38,640 --> 00:23:40,559
as a follow-up we would like to make it

606
00:23:40,559 --> 00:23:42,799
work also on the https which would be

607
00:23:42,799 --> 00:23:44,240
really awesome

608
00:23:44,240 --> 00:23:46,880
so that's the end of my presentation and

609
00:23:46,880 --> 00:23:48,500
thank you

610
00:23:48,500 --> 00:23:56,410
[Applause]

611
00:24:04,000 --> 00:24:05,840
hey very nice work i mean jen from

612
00:24:05,840 --> 00:24:08,240
qualcomm uh a quick question and how

613
00:24:08,240 --> 00:24:10,799
would you approach https

614
00:24:10,799 --> 00:24:13,919
yeah well this is something that

615
00:24:13,919 --> 00:24:16,559
i cannot answer yet

616
00:24:16,559 --> 00:24:21,840
because for for various reasons but

617
00:24:22,000 --> 00:24:24,480
you i can only say that

618
00:24:24,480 --> 00:24:27,279
you should probably use

619
00:24:27,279 --> 00:24:29,760
you should you should redefine

620
00:24:29,760 --> 00:24:31,600
the bags

621
00:24:31,600 --> 00:24:33,760
and you should use more contextual

622
00:24:33,760 --> 00:24:35,520
information and that's

623
00:24:35,520 --> 00:24:38,880
uh everything that i can

624
00:24:38,880 --> 00:24:41,600
answer thank you

625
00:24:42,880 --> 00:24:45,840
hi uh you commented on your on the the

626
00:24:45,840 --> 00:24:48,159
point that you found to be optimal in

627
00:24:48,159 --> 00:24:50,080
terms of trade-off between precision and

628
00:24:50,080 --> 00:24:52,960
recall right but normally especially if

629
00:24:52,960 --> 00:24:56,000
you're alerting on flows you in a normal

630
00:24:56,000 --> 00:24:57,360
company you would have a very large

631
00:24:57,360 --> 00:24:58,960
number of flow so you would have to

632
00:24:58,960 --> 00:25:00,799
tweak your detector to

633
00:25:00,799 --> 00:25:03,440
to have a smaller amount of false

634
00:25:03,440 --> 00:25:05,600
positives so can you comment on other

635
00:25:05,600 --> 00:25:08,880
sure tradeoff points actually the metric

636
00:25:08,880 --> 00:25:11,679
was not based on the flows but on the

637
00:25:11,679 --> 00:25:15,600
level of bags which means the user host

638
00:25:15,600 --> 00:25:17,520
name communication

639
00:25:17,520 --> 00:25:18,400
so

640
00:25:18,400 --> 00:25:20,480
this is basically the malware activity

641
00:25:20,480 --> 00:25:22,960
that we can see on the host so it

642
00:25:22,960 --> 00:25:24,880
describes the

643
00:25:24,880 --> 00:25:28,559
number of infected users sort of

644
00:25:28,559 --> 00:25:32,240
so that should be i think quite okay for

645
00:25:32,240 --> 00:25:35,279
alerting based on at the level of users

646
00:25:35,279 --> 00:25:36,320
right

647
00:25:36,320 --> 00:25:38,720
that that these pairs should still be a

648
00:25:38,720 --> 00:25:41,200
very high number in a normal

649
00:25:41,200 --> 00:25:43,200
if you take a fortune 500 companies how

650
00:25:43,200 --> 00:25:46,400
many bags would you expect

651
00:25:46,400 --> 00:25:49,279
well we we see

652
00:25:49,279 --> 00:25:52,320
hundreds of thousands of bags

653
00:25:52,320 --> 00:25:53,679
but

654
00:25:53,679 --> 00:25:54,799
i didn't

655
00:25:54,799 --> 00:25:55,760
show you

656
00:25:55,760 --> 00:25:58,080
how many malicious bags are actually

657
00:25:58,080 --> 00:26:00,080
found at the company right i'll show you

658
00:26:00,080 --> 00:26:01,919
that out of 10

659
00:26:01,919 --> 00:26:05,919
alerts nine of them are malicious

660
00:26:05,919 --> 00:26:08,799
which is kind of the

661
00:26:08,799 --> 00:26:11,039
action actionability that you would you

662
00:26:11,039 --> 00:26:13,360
would perceive if you have this kind of

663
00:26:13,360 --> 00:26:16,240
detector thank you

664
00:26:16,240 --> 00:26:18,890
okay let's thank carl again

665
00:26:18,890 --> 00:26:25,279
[Applause]

666
00:26:27,360 --> 00:26:29,439
you

