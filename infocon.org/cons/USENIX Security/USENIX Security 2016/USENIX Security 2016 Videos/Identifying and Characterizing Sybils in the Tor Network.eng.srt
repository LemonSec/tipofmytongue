1
00:00:10,639 --> 00:00:12,240
my name is philip and i will tell you a

2
00:00:12,240 --> 00:00:14,799
little bit about the experience we

3
00:00:14,799 --> 00:00:16,960
gained by looking for sybils in the tor

4
00:00:16,960 --> 00:00:19,920
network over the last one two years

5
00:00:19,920 --> 00:00:21,600
if you had a look at the list of

6
00:00:21,600 --> 00:00:25,119
accepted papers you could already tell

7
00:00:25,119 --> 00:00:26,800
that

8
00:00:26,800 --> 00:00:28,960
oh

9
00:00:28,960 --> 00:00:30,640
i'm having troubles with the slides i'm

10
00:00:30,640 --> 00:00:32,558
sorry

11
00:00:32,558 --> 00:00:34,480
ah sorry

12
00:00:34,480 --> 00:00:35,840
yeah you could already tell that this

13
00:00:35,840 --> 00:00:37,760
was a paper about civil attacks simply

14
00:00:37,760 --> 00:00:39,920
by looking at the author list because we

15
00:00:39,920 --> 00:00:41,040
somehow

16
00:00:41,040 --> 00:00:43,040
managed to get my name on there twice

17
00:00:43,040 --> 00:00:45,920
but usenix was very quick to fix that so

18
00:00:45,920 --> 00:00:47,840
that doesn't work anymore

19
00:00:47,840 --> 00:00:49,680
but on a more serious note why are we

20
00:00:49,680 --> 00:00:52,640
working on this in the first place

21
00:00:52,640 --> 00:00:55,760
tor is the code is developed by the tor

22
00:00:55,760 --> 00:00:57,920
project but the network is run by

23
00:00:57,920 --> 00:01:00,320
volunteers the network of approximately

24
00:01:00,320 --> 00:01:03,280
7000 relays that we have these days

25
00:01:03,280 --> 00:01:04,080
and

26
00:01:04,080 --> 00:01:05,920
a lot of these operators a lot of these

27
00:01:05,920 --> 00:01:08,960
volunteers are anonymous so 30 of these

28
00:01:08,960 --> 00:01:11,520
7000 relays do not have any contact

29
00:01:11,520 --> 00:01:13,520
information so it's not possible for us

30
00:01:13,520 --> 00:01:15,600
to get in touch with any of them

31
00:01:15,600 --> 00:01:17,680
and that is good to some degree right

32
00:01:17,680 --> 00:01:19,119
just like we should be anonymous when

33
00:01:19,119 --> 00:01:20,960
using tor it should be possible to set

34
00:01:20,960 --> 00:01:22,720
up a relay that way

35
00:01:22,720 --> 00:01:24,960
so the barrier of entry is pretty low

36
00:01:24,960 --> 00:01:26,799
you can set up a relay in a matter of

37
00:01:26,799 --> 00:01:29,280
just minutes which is good for adoption

38
00:01:29,280 --> 00:01:30,799
because otherwise we wouldn't have that

39
00:01:30,799 --> 00:01:33,360
many relays these days but it also mean

40
00:01:33,360 --> 00:01:35,520
that it means that it's easier to start

41
00:01:35,520 --> 00:01:36,960
attacks

42
00:01:36,960 --> 00:01:39,280
and the attack we're interested in here

43
00:01:39,280 --> 00:01:42,479
is called a sybil attack so to refresh

44
00:01:42,479 --> 00:01:44,640
your memory a civil attack takes place

45
00:01:44,640 --> 00:01:47,680
when one person or one entity is running

46
00:01:47,680 --> 00:01:51,040
a lot of relays in a tor network

47
00:01:51,040 --> 00:01:54,000
and this is not just an academic threat

48
00:01:54,000 --> 00:01:56,799
it is something that even the tech press

49
00:01:56,799 --> 00:01:58,079
has

50
00:01:58,079 --> 00:02:00,399
written about a couple times so i think

51
00:02:00,399 --> 00:02:02,399
many of you might have known about the

52
00:02:02,399 --> 00:02:03,600
attack

53
00:02:03,600 --> 00:02:06,000
cmu's sci

54
00:02:06,000 --> 00:02:08,399
the branch was launching against tour

55
00:02:08,399 --> 00:02:11,038
users a couple months ago

56
00:02:11,038 --> 00:02:12,000
so

57
00:02:12,000 --> 00:02:14,400
it's a real threat which is why we we

58
00:02:14,400 --> 00:02:16,800
have been working on that

59
00:02:16,800 --> 00:02:18,400
and you might be thinking there is a lot

60
00:02:18,400 --> 00:02:21,200
of defenses out there already to uh to

61
00:02:21,200 --> 00:02:25,200
defend against civil attacks but

62
00:02:25,200 --> 00:02:27,280
in our experience they don't perfectly

63
00:02:27,280 --> 00:02:29,599
apply to the tor network so there is a

64
00:02:29,599 --> 00:02:31,519
lot of work out there on

65
00:02:31,519 --> 00:02:33,840
social network-based defenses but it

66
00:02:33,840 --> 00:02:35,440
doesn't work very well here because

67
00:02:35,440 --> 00:02:37,760
there is no trust relationship between

68
00:02:37,760 --> 00:02:40,239
those 7 000 tor relays there is no

69
00:02:40,239 --> 00:02:42,879
concept of befriending a relay

70
00:02:42,879 --> 00:02:44,959
similarly proof of work

71
00:02:44,959 --> 00:02:47,120
systems also don't work quite well

72
00:02:47,120 --> 00:02:49,040
because in a way

73
00:02:49,040 --> 00:02:51,040
proof of works are already inherent to

74
00:02:51,040 --> 00:02:52,400
running a relay because you're

75
00:02:52,400 --> 00:02:54,560
constantly consuming bandwidth you're

76
00:02:54,560 --> 00:02:57,280
constantly consuming cpu power it also

77
00:02:57,280 --> 00:02:58,959
doesn't work that well

78
00:02:58,959 --> 00:03:00,959
so instead we're leveraging two

79
00:03:00,959 --> 00:03:02,560
observations that we made over the

80
00:03:02,560 --> 00:03:05,440
course of this work number one is that

81
00:03:05,440 --> 00:03:08,640
sybils often are controlled similarly

82
00:03:08,640 --> 00:03:10,800
what i mean by that is that an attacker

83
00:03:10,800 --> 00:03:13,519
who runs say 10 relays

84
00:03:13,519 --> 00:03:15,920
tends to start and stop their sybils at

85
00:03:15,920 --> 00:03:18,239
the same time for example to install an

86
00:03:18,239 --> 00:03:20,480
operating system upgrade

87
00:03:20,480 --> 00:03:23,120
similarly sybils tends to look very

88
00:03:23,120 --> 00:03:25,120
similar if you look at the configuration

89
00:03:25,120 --> 00:03:26,959
of these tor relays

90
00:03:26,959 --> 00:03:29,760
so i have an example here every row

91
00:03:29,760 --> 00:03:32,159
represents a relay and every column is a

92
00:03:32,159 --> 00:03:33,760
basically an attribute

93
00:03:33,760 --> 00:03:35,760
and these are the sybils that were run

94
00:03:35,760 --> 00:03:39,440
by cmu's sei institute and you can see

95
00:03:39,440 --> 00:03:41,760
by just eyeballing the rows that they're

96
00:03:41,760 --> 00:03:44,239
very similar the nickname is identical

97
00:03:44,239 --> 00:03:47,680
the ip addresses are from the same 16

98
00:03:47,680 --> 00:03:50,319
network so they look very similar right

99
00:03:50,319 --> 00:03:54,000
by just eyeballing it

100
00:03:54,640 --> 00:03:57,760
to really set out and look for sybils we

101
00:03:57,760 --> 00:04:00,799
are having two data sets the first one

102
00:04:00,799 --> 00:04:01,920
we call

103
00:04:01,920 --> 00:04:04,000
we call our passive data set and this

104
00:04:04,000 --> 00:04:06,319
was already out there waiting for us

105
00:04:06,319 --> 00:04:08,319
because the tor project is archiving

106
00:04:08,319 --> 00:04:10,000
lots and lots of data which is all

107
00:04:10,000 --> 00:04:13,360
online at collector.tourproject.org

108
00:04:13,360 --> 00:04:15,040
for some reason it's not used a lot in

109
00:04:15,040 --> 00:04:17,600
research which is a pity because

110
00:04:17,600 --> 00:04:21,279
it's data dating back almost a decade

111
00:04:21,279 --> 00:04:23,120
in particular we're interested in

112
00:04:23,120 --> 00:04:25,120
network consensuses

113
00:04:25,120 --> 00:04:27,840
so a network consensus is produced by

114
00:04:27,840 --> 00:04:30,720
the tor network each hour so each r we

115
00:04:30,720 --> 00:04:33,120
get a consensus which is basically a

116
00:04:33,120 --> 00:04:35,759
list of all running relays a list

117
00:04:35,759 --> 00:04:39,199
counting approximately 7 000 relays

118
00:04:39,199 --> 00:04:41,360
so we use these consensuses

119
00:04:41,360 --> 00:04:43,520
that were published each hour over the

120
00:04:43,520 --> 00:04:45,280
last 10 years which amounts to

121
00:04:45,280 --> 00:04:48,400
approximately 100 gigabyte of data

122
00:04:48,400 --> 00:04:50,320
which is really cool because it allows

123
00:04:50,320 --> 00:04:52,240
us to reconstruct the state of the

124
00:04:52,240 --> 00:04:54,840
network for any hour over the last 10

125
00:04:54,840 --> 00:04:58,080
years the second data set we're using is

126
00:04:58,080 --> 00:04:59,840
basically the reason we started to work

127
00:04:59,840 --> 00:05:01,600
on this project in the first place we

128
00:05:01,600 --> 00:05:04,320
call it the active data set

129
00:05:04,320 --> 00:05:06,639
this is basically the output of the exit

130
00:05:06,639 --> 00:05:09,840
mac scanner which we developed in some

131
00:05:09,840 --> 00:05:11,600
previous work

132
00:05:11,600 --> 00:05:15,120
exit map is a small python tool that

133
00:05:15,120 --> 00:05:18,000
allows you to run a network task over

134
00:05:18,000 --> 00:05:21,280
each of the 1000 exit relays of the tor

135
00:05:21,280 --> 00:05:23,280
network

136
00:05:23,280 --> 00:05:26,240
we use it to find malicious exit relays

137
00:05:26,240 --> 00:05:28,720
so the idea is you send some decoy

138
00:05:28,720 --> 00:05:30,800
traffic to a website you record the

139
00:05:30,800 --> 00:05:32,960
response and then you see if the

140
00:05:32,960 --> 00:05:34,639
response is what you would actually

141
00:05:34,639 --> 00:05:37,600
expect to come from the exit relay if

142
00:05:37,600 --> 00:05:39,199
it's not the same then you have some

143
00:05:39,199 --> 00:05:40,720
reason to believe that something bad

144
00:05:40,720 --> 00:05:44,000
happened like a man-in-the-middle attack

145
00:05:44,000 --> 00:05:46,080
and we wrote a bunch of new models on

146
00:05:46,080 --> 00:05:48,639
top of the ones we already had and ran

147
00:05:48,639 --> 00:05:51,520
them for around 18 months

148
00:05:51,520 --> 00:05:54,240
and that way we ended up with around 250

149
00:05:54,240 --> 00:05:56,479
malicious exit relays

150
00:05:56,479 --> 00:05:58,080
and the reason we started to work on

151
00:05:58,080 --> 00:06:00,000
this particular project is because we

152
00:06:00,000 --> 00:06:03,280
noticed among these 250 relays a lot of

153
00:06:03,280 --> 00:06:06,000
them turn out to be sybils not isolated

154
00:06:06,000 --> 00:06:08,080
incidents of maliciousness that

155
00:06:08,080 --> 00:06:10,479
sometimes happens in the tor network but

156
00:06:10,479 --> 00:06:13,280
really systematic attacks by people that

157
00:06:13,280 --> 00:06:16,240
occurred one after each other

158
00:06:16,240 --> 00:06:18,000
of course there were also some isolated

159
00:06:18,000 --> 00:06:20,400
incidents but the bulk of these 250

160
00:06:20,400 --> 00:06:24,318
relays were indeed related

161
00:06:24,400 --> 00:06:26,560
having these two data sets we then

162
00:06:26,560 --> 00:06:29,280
developed a new tool that we call civil

163
00:06:29,280 --> 00:06:30,800
hunter

164
00:06:30,800 --> 00:06:32,560
it is a

165
00:06:32,560 --> 00:06:34,560
it is free software available online

166
00:06:34,560 --> 00:06:35,840
already

167
00:06:35,840 --> 00:06:37,680
and it basically as you can see on the

168
00:06:37,680 --> 00:06:38,800
bottom right

169
00:06:38,800 --> 00:06:41,600
takes as input all the consensuses and

170
00:06:41,600 --> 00:06:44,800
then runs analysis modules on them and

171
00:06:44,800 --> 00:06:49,120
it outputs csv files and images

172
00:06:49,120 --> 00:06:52,160
so far we have developed four different

173
00:06:52,160 --> 00:06:54,560
analysis modules that i will quickly

174
00:06:54,560 --> 00:06:56,319
discuss before i will dive into the

175
00:06:56,319 --> 00:06:58,000
results

176
00:06:58,000 --> 00:07:00,560
so number one is

177
00:07:00,560 --> 00:07:03,440
we call it visualizing uptimes or i also

178
00:07:03,440 --> 00:07:05,840
like to call it uptime art as you will

179
00:07:05,840 --> 00:07:07,360
see in a minute

180
00:07:07,360 --> 00:07:09,280
so recall that each hour we get a new

181
00:07:09,280 --> 00:07:10,720
consensus

182
00:07:10,720 --> 00:07:13,440
this means that for any given relay we

183
00:07:13,440 --> 00:07:16,160
can determine basically a binary uptime

184
00:07:16,160 --> 00:07:18,880
sequence so you see here uh

185
00:07:18,880 --> 00:07:20,000
six

186
00:07:20,000 --> 00:07:22,560
hours and for each hour for a relay we

187
00:07:22,560 --> 00:07:25,120
can say the relay is either online which

188
00:07:25,120 --> 00:07:27,039
means that it's part of the consensus or

189
00:07:27,039 --> 00:07:28,960
it's offline which means that we can't

190
00:07:28,960 --> 00:07:30,800
find it in there

191
00:07:30,800 --> 00:07:32,960
and it turns out that we can do that not

192
00:07:32,960 --> 00:07:35,120
only for one single relay we can do it

193
00:07:35,120 --> 00:07:36,800
for many relays

194
00:07:36,800 --> 00:07:38,400
which means that it looks like that so

195
00:07:38,400 --> 00:07:40,479
we basically get a two dimensional

196
00:07:40,479 --> 00:07:42,880
matrix

197
00:07:42,880 --> 00:07:45,680
and the problem here is

198
00:07:45,680 --> 00:07:48,080
in this particular matrix we already

199
00:07:48,080 --> 00:07:50,639
have two relays that look very similar

200
00:07:50,639 --> 00:07:53,280
so the observation here is relays that

201
00:07:53,280 --> 00:07:56,319
have an identical or highly correlated

202
00:07:56,319 --> 00:07:59,360
uptime sequence are likely to be symbols

203
00:07:59,360 --> 00:08:00,960
that is not always the case but it's

204
00:08:00,960 --> 00:08:03,840
surprisingly often the case

205
00:08:03,840 --> 00:08:06,479
in that case it's these two right but

206
00:08:06,479 --> 00:08:08,400
it's not immediately obvious because

207
00:08:08,400 --> 00:08:10,319
those two columns aren't grouped next to

208
00:08:10,319 --> 00:08:11,440
each other

209
00:08:11,440 --> 00:08:14,160
so it's very important to search to sort

210
00:08:14,160 --> 00:08:16,240
these columns in a way

211
00:08:16,240 --> 00:08:17,919
that by just eyeballing it you can

212
00:08:17,919 --> 00:08:19,680
immediately tell oh there are a bunch of

213
00:08:19,680 --> 00:08:21,520
relays that have a highly correlated

214
00:08:21,520 --> 00:08:24,479
uptime sequence so we use single linkage

215
00:08:24,479 --> 00:08:26,720
clustering for that purpose

216
00:08:26,720 --> 00:08:29,039
and once you apply it to the matrix it

217
00:08:29,039 --> 00:08:30,960
becomes a little bit easier right

218
00:08:30,960 --> 00:08:33,120
they're now adjacent which makes it

219
00:08:33,120 --> 00:08:35,599
easier to spot them

220
00:08:35,599 --> 00:08:38,000
and not only can we group them next to

221
00:08:38,000 --> 00:08:40,479
each other we can also correlate uptime

222
00:08:40,479 --> 00:08:43,519
sequences that have perfect correlation

223
00:08:43,519 --> 00:08:45,760
basically and again this is really for

224
00:08:45,760 --> 00:08:47,839
visual inspection you basically look at

225
00:08:47,839 --> 00:08:49,920
an image as you will see in a minute and

226
00:08:49,920 --> 00:08:51,600
it will make it much easier to spot

227
00:08:51,600 --> 00:08:53,600
these symbols

228
00:08:53,600 --> 00:08:56,000
so this is just a small toy example but

229
00:08:56,000 --> 00:08:58,560
let's take a step back and look at these

230
00:08:58,560 --> 00:09:00,480
uptime images for the tor network as a

231
00:09:00,480 --> 00:09:01,279
whole

232
00:09:01,279 --> 00:09:03,600
and it starts to look like this

233
00:09:03,600 --> 00:09:05,920
so what you see here is the same thing

234
00:09:05,920 --> 00:09:08,399
just on a larger scale again on the

235
00:09:08,399 --> 00:09:11,440
y-axis we basically have time each r is

236
00:09:11,440 --> 00:09:14,640
a consensus and on the x-axis we have

237
00:09:14,640 --> 00:09:17,200
the relay index and here we're looking

238
00:09:17,200 --> 00:09:22,399
at around 2000 relays back in july 2014.

239
00:09:22,399 --> 00:09:23,839
and there are two

240
00:09:23,839 --> 00:09:26,720
suspiciously large red blocks here that

241
00:09:26,720 --> 00:09:28,560
you can see and these turn out to be the

242
00:09:28,560 --> 00:09:31,360
relays that cmu's sci was running back

243
00:09:31,360 --> 00:09:32,399
then

244
00:09:32,399 --> 00:09:34,720
the big block on the left here was the

245
00:09:34,720 --> 00:09:37,040
block that was uh removed by the tour

246
00:09:37,040 --> 00:09:38,640
project once they learned about the

247
00:09:38,640 --> 00:09:39,600
attack

248
00:09:39,600 --> 00:09:41,600
and there is a slightly smaller block

249
00:09:41,600 --> 00:09:44,240
that was also run by the sci

250
00:09:44,240 --> 00:09:46,320
that as far as i know was not removed

251
00:09:46,320 --> 00:09:49,040
perhaps because sci stopped it by

252
00:09:49,040 --> 00:09:50,720
themselves just a couple hours before

253
00:09:50,720 --> 00:09:53,920
the other one was removed

254
00:09:53,920 --> 00:09:57,519
and we generated these uptime images for

255
00:09:57,519 --> 00:10:01,279
each month dating back to i think 2007

256
00:10:01,279 --> 00:10:02,880
and the gallery of all these images

257
00:10:02,880 --> 00:10:06,560
available online if you're curious

258
00:10:06,560 --> 00:10:08,240
but let's have a look at a couple more

259
00:10:08,240 --> 00:10:11,680
examples what we have here is around 1

260
00:10:11,680 --> 00:10:15,279
600 relays in june 2010

261
00:10:15,279 --> 00:10:17,680
and here somebody was starting around

262
00:10:17,680 --> 00:10:20,320
500 relays on planet lab to learn more

263
00:10:20,320 --> 00:10:23,200
about taurus scalability effects and

264
00:10:23,200 --> 00:10:26,000
again we have uh it's pretty obvious

265
00:10:26,000 --> 00:10:28,800
here it's this big red rectangle right

266
00:10:28,800 --> 00:10:32,480
it works very well in these cases

267
00:10:32,480 --> 00:10:36,160
this is july 2012 and what we had here

268
00:10:36,160 --> 00:10:38,320
so for each case we did some manual

269
00:10:38,320 --> 00:10:40,880
analysis to figure out what was going on

270
00:10:40,880 --> 00:10:43,440
and this is approximately 100 relays

271
00:10:43,440 --> 00:10:46,000
that originated from russia and germany

272
00:10:46,000 --> 00:10:48,079
so each day they came online for a

273
00:10:48,079 --> 00:10:50,240
couple hours and then they were offline

274
00:10:50,240 --> 00:10:51,920
for the rest of the day only for the

275
00:10:51,920 --> 00:10:53,839
same pattern to repeat the subsequent

276
00:10:53,839 --> 00:10:55,279
day

277
00:10:55,279 --> 00:10:57,600
in this particular case we're not sure

278
00:10:57,600 --> 00:10:59,040
what was going on

279
00:10:59,040 --> 00:11:01,920
but the sybils we're talking about are

280
00:11:01,920 --> 00:11:04,240
not always malicious right

281
00:11:04,240 --> 00:11:06,079
some of them are but some of them are

282
00:11:06,079 --> 00:11:08,399
perfectly benign and are really just an

283
00:11:08,399 --> 00:11:10,399
effect of volunteers forgetting to

284
00:11:10,399 --> 00:11:12,320
express in their configuration files

285
00:11:12,320 --> 00:11:14,480
that they're running basically sybils so

286
00:11:14,480 --> 00:11:15,920
they don't have to be

287
00:11:15,920 --> 00:11:18,480
malicious per se

288
00:11:18,480 --> 00:11:20,959
and our coloring scheme doesn't always

289
00:11:20,959 --> 00:11:23,200
work perfectly well so in this case you

290
00:11:23,200 --> 00:11:24,800
see

291
00:11:24,800 --> 00:11:28,160
this bar on the left which looks like

292
00:11:28,160 --> 00:11:30,320
sybils but they weren't colored in red

293
00:11:30,320 --> 00:11:32,399
simply because the uptimes weren't

294
00:11:32,399 --> 00:11:35,200
perfectly correlated and we can reduce

295
00:11:35,200 --> 00:11:37,600
the sensitivity of our algorithm but we

296
00:11:37,600 --> 00:11:40,000
would drown in false positives but then

297
00:11:40,000 --> 00:11:43,040
again it's mostly for visual inspection

298
00:11:43,040 --> 00:11:46,399
so it's not a huge issue in this case

299
00:11:46,399 --> 00:11:49,120
and this method to visualize the uptime

300
00:11:49,120 --> 00:11:51,680
of relays turns out to be

301
00:11:51,680 --> 00:11:53,600
to work very well

302
00:11:53,600 --> 00:11:55,839
to look at relays so it paints a very

303
00:11:55,839 --> 00:11:57,920
fine grained picture but it doesn't work

304
00:11:57,920 --> 00:12:00,000
quite that well

305
00:12:00,000 --> 00:12:02,079
on a more aggregate view right so if

306
00:12:02,079 --> 00:12:04,800
you're trying to figure out what happens

307
00:12:04,800 --> 00:12:07,360
between two subsequent consensuses this

308
00:12:07,360 --> 00:12:08,959
is not the perfect way to look at this

309
00:12:08,959 --> 00:12:11,440
phenomenon so for that we came up with

310
00:12:11,440 --> 00:12:13,680
the second method that we call network

311
00:12:13,680 --> 00:12:16,079
churn and as the name suggests it

312
00:12:16,079 --> 00:12:18,320
determines the churn value between two

313
00:12:18,320 --> 00:12:21,040
subsequent consensuses

314
00:12:21,040 --> 00:12:23,440
so it paints a more aggregate picture

315
00:12:23,440 --> 00:12:25,519
and the churn is basically the fraction

316
00:12:25,519 --> 00:12:28,320
of new relays and the fraction of relays

317
00:12:28,320 --> 00:12:30,399
that disappeared from one consensus to

318
00:12:30,399 --> 00:12:32,000
the next one

319
00:12:32,000 --> 00:12:34,399
and what

320
00:12:34,399 --> 00:12:36,399
what we end up with is basically a time

321
00:12:36,399 --> 00:12:38,240
series like the one you can see at the

322
00:12:38,240 --> 00:12:40,560
bottom right

323
00:12:40,560 --> 00:12:42,639
we see the value

324
00:12:42,639 --> 00:12:45,519
exhibiting a really weird zigzag pattern

325
00:12:45,519 --> 00:12:47,920
between monday and tuesday

326
00:12:47,920 --> 00:12:50,240
and this is an artifact of a research

327
00:12:50,240 --> 00:12:53,680
project that took place in 2013 and i'm

328
00:12:53,680 --> 00:12:56,240
going to talk about that in a minute

329
00:12:56,240 --> 00:12:58,959
not only can this sometimes point us to

330
00:12:58,959 --> 00:13:01,120
sybils in the tor network it also

331
00:13:01,120 --> 00:13:02,639
teaches us a little bit about the

332
00:13:02,639 --> 00:13:04,880
network as a whole for example we

333
00:13:04,880 --> 00:13:07,680
learned that the churn the median churn

334
00:13:07,680 --> 00:13:10,639
decreased over the years from 0.04 in

335
00:13:10,639 --> 00:13:13,120
2008 to 0.02

336
00:13:13,120 --> 00:13:14,639
so

337
00:13:14,639 --> 00:13:16,560
i interpret this as the network as a

338
00:13:16,560 --> 00:13:18,399
whole becoming more mature and more

339
00:13:18,399 --> 00:13:21,519
stable over the years

340
00:13:21,519 --> 00:13:22,959
but again

341
00:13:22,959 --> 00:13:25,519
in this diagram we see these civil

342
00:13:25,519 --> 00:13:27,279
relays that were used in a research

343
00:13:27,279 --> 00:13:30,079
project and this is an interesting way

344
00:13:30,079 --> 00:13:32,000
to look at it but we found that there is

345
00:13:32,000 --> 00:13:34,160
a better way to look at this particular

346
00:13:34,160 --> 00:13:35,920
issue

347
00:13:35,920 --> 00:13:37,519
to understand how it works let me

348
00:13:37,519 --> 00:13:39,600
quickly tell you about

349
00:13:39,600 --> 00:13:42,000
the fingerprint of tor relays so each

350
00:13:42,000 --> 00:13:44,000
tory layer has a fingerprint which is

351
00:13:44,000 --> 00:13:46,560
the hash over its public key

352
00:13:46,560 --> 00:13:48,720
as a result it's supposed to be unique

353
00:13:48,720 --> 00:13:50,720
right each relay has a unique

354
00:13:50,720 --> 00:13:52,800
fingerprint and they're not supposed to

355
00:13:52,800 --> 00:13:55,279
change because the public relay is long

356
00:13:55,279 --> 00:13:58,000
lived if it changes once or twice it

357
00:13:58,000 --> 00:14:00,000
wouldn't it wouldn't raise any eyebrows

358
00:14:00,000 --> 00:14:01,760
but if it does so frequently and

359
00:14:01,760 --> 00:14:04,320
systematically it certainly would raise

360
00:14:04,320 --> 00:14:06,320
eyebrows

361
00:14:06,320 --> 00:14:08,880
so what we did to find that sort of

362
00:14:08,880 --> 00:14:10,000
issue

363
00:14:10,000 --> 00:14:12,320
we added a new method to our tool civil

364
00:14:12,320 --> 00:14:14,720
hunter and this sort of issue is often a

365
00:14:14,720 --> 00:14:16,880
symptom of an attempt to manipulate the

366
00:14:16,880 --> 00:14:19,600
distributed hash table that is used to

367
00:14:19,600 --> 00:14:22,560
power towards hidden services

368
00:14:22,560 --> 00:14:25,199
so for each relay identified by its ip

369
00:14:25,199 --> 00:14:26,959
address we basically keep track of the

370
00:14:26,959 --> 00:14:29,440
number of fingerprints we see

371
00:14:29,440 --> 00:14:32,240
and what you see here is the same

372
00:14:32,240 --> 00:14:33,920
the same research project from the

373
00:14:33,920 --> 00:14:35,760
previous slide looked at it a little bit

374
00:14:35,760 --> 00:14:37,920
differently so we see a bunch of ip

375
00:14:37,920 --> 00:14:39,760
addresses in a

376
00:14:39,760 --> 00:14:41,920
in a related network space that changed

377
00:14:41,920 --> 00:14:44,399
their address their fingerprint exactly

378
00:14:44,399 --> 00:14:46,079
24 times

379
00:14:46,079 --> 00:14:48,079
and we tracked it down and we found out

380
00:14:48,079 --> 00:14:49,600
that this was an experiment of the

381
00:14:49,600 --> 00:14:52,720
security and privacy 2013 paper trawling

382
00:14:52,720 --> 00:14:55,279
for tour hidden services so we contacted

383
00:14:55,279 --> 00:14:57,040
the authors and they could verify that

384
00:14:57,040 --> 00:14:58,720
this was indeed part of the research

385
00:14:58,720 --> 00:15:01,120
project

386
00:15:01,680 --> 00:15:04,880
let's move on to the final method which

387
00:15:04,880 --> 00:15:07,199
we call nearest neighbor ranking and

388
00:15:07,199 --> 00:15:08,880
it's a little bit different from the

389
00:15:08,880 --> 00:15:11,680
previous methods because it doesn't find

390
00:15:11,680 --> 00:15:15,760
sybils on its own instead it's an

391
00:15:15,760 --> 00:15:18,639
a technique that a sister assists us in

392
00:15:18,639 --> 00:15:21,360
analyzing sybils

393
00:15:21,360 --> 00:15:23,360
why is this useful

394
00:15:23,360 --> 00:15:25,600
often when we found malicious exit

395
00:15:25,600 --> 00:15:27,279
relays

396
00:15:27,279 --> 00:15:28,240
that were

397
00:15:28,240 --> 00:15:30,720
sybils presumably we weren't completely

398
00:15:30,720 --> 00:15:33,120
sure if there might be more relays out

399
00:15:33,120 --> 00:15:35,120
there that are up to

400
00:15:35,120 --> 00:15:37,279
the same attack but that we didn't find

401
00:15:37,279 --> 00:15:39,600
for one reason or another so what we

402
00:15:39,600 --> 00:15:41,759
really wanted was a technique that takes

403
00:15:41,759 --> 00:15:42,959
this input

404
00:15:42,959 --> 00:15:45,839
to a relay and gives us a list of the

405
00:15:45,839 --> 00:15:48,639
most similar relays according to their

406
00:15:48,639 --> 00:15:51,600
configuration for example

407
00:15:51,600 --> 00:15:52,720
and

408
00:15:52,720 --> 00:15:54,639
our current technique is pretty simple

409
00:15:54,639 --> 00:15:57,120
so we take a seed relay and we turn it

410
00:15:57,120 --> 00:16:00,000
into a textural representation which is

411
00:16:00,000 --> 00:16:02,000
really just things like the nickname the

412
00:16:02,000 --> 00:16:05,040
ip address and so on we do this

413
00:16:05,040 --> 00:16:07,120
also for all the other relays that are

414
00:16:07,120 --> 00:16:09,199
in the consensus and then we determine

415
00:16:09,199 --> 00:16:10,880
the levenshtein distance between the

416
00:16:10,880 --> 00:16:12,880
seed relay and all the remaining relays

417
00:16:12,880 --> 00:16:14,560
in the consensus

418
00:16:14,560 --> 00:16:16,480
the levenstein distance gives you the

419
00:16:16,480 --> 00:16:18,639
number of basically modifications you

420
00:16:18,639 --> 00:16:20,639
need to turn one string into another

421
00:16:20,639 --> 00:16:23,839
string so i have a small example here

422
00:16:23,839 --> 00:16:26,320
where it takes six modifications to turn

423
00:16:26,320 --> 00:16:29,759
s1 into s2 and the smaller the distance

424
00:16:29,759 --> 00:16:33,040
the more similar we see relays

425
00:16:33,040 --> 00:16:35,279
so what does it look like in practice

426
00:16:35,279 --> 00:16:36,959
like this

427
00:16:36,959 --> 00:16:39,120
we wrote a small tool that is available

428
00:16:39,120 --> 00:16:41,120
online

429
00:16:41,120 --> 00:16:43,440
and what we have here is

430
00:16:43,440 --> 00:16:45,839
a relay that we run at our university on

431
00:16:45,839 --> 00:16:48,240
the very first line and the subsequent

432
00:16:48,240 --> 00:16:50,160
lines are relays that are the most

433
00:16:50,160 --> 00:16:52,320
similar to the seed relay and you also

434
00:16:52,320 --> 00:16:54,720
see the distance the most similar one

435
00:16:54,720 --> 00:16:57,040
happens to be another relay that we also

436
00:16:57,040 --> 00:16:59,120
run at the same university which isn't

437
00:16:59,120 --> 00:17:01,120
particularly surprising because we went

438
00:17:01,120 --> 00:17:03,279
out of our way to basically make the

439
00:17:03,279 --> 00:17:05,439
configuration look similar so this

440
00:17:05,439 --> 00:17:07,679
example works very much in our favor but

441
00:17:07,679 --> 00:17:11,439
i think you get the idea of how it works

442
00:17:11,520 --> 00:17:14,240
let's move on to the results

443
00:17:14,240 --> 00:17:17,199
we ended up with a lot of civil groups

444
00:17:17,199 --> 00:17:19,280
not all of them are malicious and it

445
00:17:19,280 --> 00:17:21,119
takes a little bit of work to analyze

446
00:17:21,119 --> 00:17:22,640
them and to figure out what they're up

447
00:17:22,640 --> 00:17:26,000
to in our paper we focus on 20 sybil

448
00:17:26,000 --> 00:17:28,160
groups that we characterize and this is

449
00:17:28,160 --> 00:17:30,160
really just a lower bound it's important

450
00:17:30,160 --> 00:17:31,600
to understand that there are probably

451
00:17:31,600 --> 00:17:35,039
many more out there that we didn't find

452
00:17:35,039 --> 00:17:38,240
we grouped them into five categories

453
00:17:38,240 --> 00:17:40,080
number one is men in the middle so these

454
00:17:40,080 --> 00:17:42,480
relays were basically trying to steal

455
00:17:42,480 --> 00:17:44,080
bitcoins and i'm gonna talk about that

456
00:17:44,080 --> 00:17:45,360
in a while

457
00:17:45,360 --> 00:17:47,600
number two is botnets so we had two

458
00:17:47,600 --> 00:17:50,000
civil groups that we assume were part of

459
00:17:50,000 --> 00:17:51,200
a botnet

460
00:17:51,200 --> 00:17:53,919
we had one group that was basically an

461
00:17:53,919 --> 00:17:55,600
attempt to run a denial of service

462
00:17:55,600 --> 00:17:57,200
against uh

463
00:17:57,200 --> 00:18:00,000
attack against tor not very successfully

464
00:18:00,000 --> 00:18:02,160
we had four groups that were parts of

465
00:18:02,160 --> 00:18:04,240
research projects and six we couldn't

466
00:18:04,240 --> 00:18:06,400
quite classify simply because we didn't

467
00:18:06,400 --> 00:18:09,360
know what they were up to

468
00:18:09,360 --> 00:18:10,640
i want to tell you a little bit about

469
00:18:10,640 --> 00:18:12,960
the bitcoin symbols because i think this

470
00:18:12,960 --> 00:18:14,480
is the most interesting civil group

471
00:18:14,480 --> 00:18:15,600
we've found

472
00:18:15,600 --> 00:18:17,520
so these were all exit relays meaning

473
00:18:17,520 --> 00:18:20,000
that they were exposed to the traffic of

474
00:18:20,000 --> 00:18:21,679
tour users

475
00:18:21,679 --> 00:18:25,039
uh and their goal was uh as we believe

476
00:18:25,039 --> 00:18:27,440
to steal bitcoins basically and the way

477
00:18:27,440 --> 00:18:30,960
they did that was to manipulate the html

478
00:18:30,960 --> 00:18:33,919
code on websites so you can see two

479
00:18:33,919 --> 00:18:36,880
sites here uh the original one at the

480
00:18:36,880 --> 00:18:39,679
top and the fake impersonation side at

481
00:18:39,679 --> 00:18:40,799
the bottom

482
00:18:40,799 --> 00:18:43,440
and the only difference is a tiny string

483
00:18:43,440 --> 00:18:44,880
which you cannot really see it doesn't

484
00:18:44,880 --> 00:18:47,520
matter at the bottom which is a bitcoin

485
00:18:47,520 --> 00:18:49,440
donation address

486
00:18:49,440 --> 00:18:52,160
and these exit readers would rewrite

487
00:18:52,160 --> 00:18:54,480
them transparently they would recognize

488
00:18:54,480 --> 00:18:56,559
bitcoin addresses and turn them into

489
00:18:56,559 --> 00:18:58,880
their own ones in an attempt probably to

490
00:18:58,880 --> 00:19:01,200
hijack bitcoin donations

491
00:19:01,200 --> 00:19:03,120
not only did they do that but i think

492
00:19:03,120 --> 00:19:05,200
they would also create their own bitcoin

493
00:19:05,200 --> 00:19:07,520
addresses that resembled the original

494
00:19:07,520 --> 00:19:10,160
ones so you can see that some characters

495
00:19:10,160 --> 00:19:12,720
uh looked similar to the original one

496
00:19:12,720 --> 00:19:14,559
probably to fool people that at least

497
00:19:14,559 --> 00:19:18,160
tried to verify the first couple digits

498
00:19:18,160 --> 00:19:20,480
and every time we discovered one of

499
00:19:20,480 --> 00:19:22,640
those groups we reported them to the tor

500
00:19:22,640 --> 00:19:24,559
project they blocked it but they would

501
00:19:24,559 --> 00:19:27,760
show up very quickly afterwards so we

502
00:19:27,760 --> 00:19:29,520
basically got involved in this game of

503
00:19:29,520 --> 00:19:31,760
whack-a-mole that lasted for a couple

504
00:19:31,760 --> 00:19:33,360
months

505
00:19:33,360 --> 00:19:36,000
and might still be going on even

506
00:19:36,000 --> 00:19:37,440
but this attack was financially

507
00:19:37,440 --> 00:19:39,600
motivated so it's a good example of a

508
00:19:39,600 --> 00:19:42,080
highly sophisticated attacker which is

509
00:19:42,080 --> 00:19:44,400
quite different from from a lot of from

510
00:19:44,400 --> 00:19:46,000
a lot of other civil groups we

511
00:19:46,000 --> 00:19:48,559
discovered

512
00:19:48,640 --> 00:19:50,480
uh so what are the limitations of our

513
00:19:50,480 --> 00:19:52,000
work

514
00:19:52,000 --> 00:19:54,880
some of them are already touched on

515
00:19:54,880 --> 00:19:57,039
determining the intent of civil groups

516
00:19:57,039 --> 00:19:59,280
is often really hard so we try to figure

517
00:19:59,280 --> 00:20:01,280
out why are they online what are they

518
00:20:01,280 --> 00:20:04,080
trying to do sometimes it's very obvious

519
00:20:04,080 --> 00:20:06,159
sometimes there is really no clue at all

520
00:20:06,159 --> 00:20:09,360
that we can uh make use of so this is

521
00:20:09,360 --> 00:20:11,280
really difficult and it involves

522
00:20:11,280 --> 00:20:14,640
sometimes a lot of manual analysis

523
00:20:14,640 --> 00:20:16,320
again our results are really just the

524
00:20:16,320 --> 00:20:19,600
lower bound there are probably many

525
00:20:19,600 --> 00:20:22,000
many more sybils out there

526
00:20:22,000 --> 00:20:23,039
and

527
00:20:23,039 --> 00:20:25,760
in our work we mostly focused on attacks

528
00:20:25,760 --> 00:20:28,000
that took place sometimes several years

529
00:20:28,000 --> 00:20:30,640
ago so in an online setting things are

530
00:20:30,640 --> 00:20:32,720
quite different right if you consider an

531
00:20:32,720 --> 00:20:34,880
attacker that looks at our techniques

532
00:20:34,880 --> 00:20:37,120
and that can adapt it's much harder to

533
00:20:37,120 --> 00:20:39,280
defend against that sort of thing

534
00:20:39,280 --> 00:20:41,039
we thought a lot about how to deal with

535
00:20:41,039 --> 00:20:43,600
that there is one way that seems to help

536
00:20:43,600 --> 00:20:44,880
somewhat

537
00:20:44,880 --> 00:20:46,720
we found that it can be useful to have

538
00:20:46,720 --> 00:20:49,039
an open analysis framework to publish

539
00:20:49,039 --> 00:20:51,520
the code how it works to make it easier

540
00:20:51,520 --> 00:20:54,400
to reproduce our our work but to keep

541
00:20:54,400 --> 00:20:56,640
secret some of the specific parameters

542
00:20:56,640 --> 00:20:59,360
and thresholds we use right and some of

543
00:20:59,360 --> 00:21:00,640
you now might think this sounds

544
00:21:00,640 --> 00:21:02,640
suspiciously similar to security through

545
00:21:02,640 --> 00:21:05,360
obscurity it's partially correct

546
00:21:05,360 --> 00:21:07,840
but we don't really advocate for

547
00:21:07,840 --> 00:21:09,919
only obscurity instead we're advocating

548
00:21:09,919 --> 00:21:13,120
for obscurity on top of a more or less

549
00:21:13,120 --> 00:21:15,760
sound framework already

550
00:21:15,760 --> 00:21:19,280
and it's also really hard to

551
00:21:19,280 --> 00:21:22,559
detect or defend against future attacks

552
00:21:22,559 --> 00:21:26,640
right so the attack that cmu's sei

553
00:21:26,640 --> 00:21:28,480
division was using

554
00:21:28,480 --> 00:21:31,520
was not fully expected so it was not

555
00:21:31,520 --> 00:21:33,600
entirely novel but it was not something

556
00:21:33,600 --> 00:21:36,080
anyone was actively looking for and of

557
00:21:36,080 --> 00:21:37,919
course there are probably many more

558
00:21:37,919 --> 00:21:40,080
attacks out there that we don't quite

559
00:21:40,080 --> 00:21:41,760
yet know what to look for so our

560
00:21:41,760 --> 00:21:43,600
solution to that is how to have a

561
00:21:43,600 --> 00:21:46,320
modular framework that is easy to extend

562
00:21:46,320 --> 00:21:48,799
and to make manual analysis as easy as

563
00:21:48,799 --> 00:21:52,799
possible so it's easy for us to react

564
00:21:53,120 --> 00:21:54,960
so to sum up uh

565
00:21:54,960 --> 00:21:57,039
in a way we're exploiting the laziness

566
00:21:57,039 --> 00:21:59,120
of our attackers right

567
00:21:59,120 --> 00:22:01,280
they're trying to make it easy to

568
00:22:01,280 --> 00:22:03,600
control their relays in parallel and

569
00:22:03,600 --> 00:22:05,039
they're also copy and pasting

570
00:22:05,039 --> 00:22:07,440
configuration files simply because they

571
00:22:07,440 --> 00:22:09,440
want to save time

572
00:22:09,440 --> 00:22:12,000
and we also think that because of the

573
00:22:12,000 --> 00:22:15,280
wide variety of sybils it's important to

574
00:22:15,280 --> 00:22:18,720
have complementary analysis methods

575
00:22:18,720 --> 00:22:21,360
so sybil hunter by itself is not able to

576
00:22:21,360 --> 00:22:23,520
detect all these attacks which is why we

577
00:22:23,520 --> 00:22:25,760
are running it in parallel with our exit

578
00:22:25,760 --> 00:22:28,000
map scanner and it's also going to be

579
00:22:28,000 --> 00:22:30,640
important to add a bunch of new

580
00:22:30,640 --> 00:22:34,320
detection methods as we move on

581
00:22:34,320 --> 00:22:36,799
another thing is one of our lessons

582
00:22:36,799 --> 00:22:39,200
learned that academic research is not by

583
00:22:39,200 --> 00:22:42,000
definition always harmless so you might

584
00:22:42,000 --> 00:22:43,840
already have heard that the tour project

585
00:22:43,840 --> 00:22:46,400
is now running a research safety board

586
00:22:46,400 --> 00:22:48,640
which is a great

587
00:22:48,640 --> 00:22:50,640
point of contact to talk to before you

588
00:22:50,640 --> 00:22:53,440
do your tour research it is not meant to

589
00:22:53,440 --> 00:22:55,679
police research instead it's really just

590
00:22:55,679 --> 00:22:58,960
there to help you do the right thing

591
00:22:58,960 --> 00:23:00,799
we also believe that some of our methods

592
00:23:00,799 --> 00:23:02,480
could be of use to other anonymity

593
00:23:02,480 --> 00:23:05,280
networks i had a quick chat with the i2p

594
00:23:05,280 --> 00:23:06,960
developers and they signaled some

595
00:23:06,960 --> 00:23:10,559
interest in basically methods to detect

596
00:23:10,559 --> 00:23:13,200
dht manipulation attempts

597
00:23:13,200 --> 00:23:16,080
and we also found it really useful to do

598
00:23:16,080 --> 00:23:18,480
some crowdsourcing so we worked with the

599
00:23:18,480 --> 00:23:20,320
tor project to set up a mailing list

600
00:23:20,320 --> 00:23:22,559
that is used uh to

601
00:23:22,559 --> 00:23:25,600
basically have people send reports of

602
00:23:25,600 --> 00:23:27,840
relays that sound suspicious

603
00:23:27,840 --> 00:23:29,360
uh that worked

604
00:23:29,360 --> 00:23:31,280
well and not so well it worked not so

605
00:23:31,280 --> 00:23:33,200
well when we exposed it wildly because

606
00:23:33,200 --> 00:23:35,200
you get a lot of reports from tinfoil

607
00:23:35,200 --> 00:23:37,200
hat people that see attacks on every

608
00:23:37,200 --> 00:23:39,520
corner of the network but once we made

609
00:23:39,520 --> 00:23:40,320
it

610
00:23:40,320 --> 00:23:42,320
a little bit less exposed it worked much

611
00:23:42,320 --> 00:23:44,000
better when we when you actually get

612
00:23:44,000 --> 00:23:46,480
reports from people who know very well

613
00:23:46,480 --> 00:23:49,520
what they're talking about

614
00:23:49,520 --> 00:23:51,360
okay so there is a list of people i

615
00:23:51,360 --> 00:23:53,520
would like to thank most importantly my

616
00:23:53,520 --> 00:23:57,279
co-authors roya carson and nick

617
00:23:57,279 --> 00:23:59,919
we tried to publish basically everything

618
00:23:59,919 --> 00:24:03,200
we did on our project website nimity.ch

619
00:24:03,200 --> 00:24:04,480
sybil hunting

620
00:24:04,480 --> 00:24:08,000
to make it easy to replicate our work

621
00:24:08,000 --> 00:24:10,320
finally and perhaps most importantly

622
00:24:10,320 --> 00:24:12,320
like pratik already said roy is looking

623
00:24:12,320 --> 00:24:14,400
for a faculty position she has done a

624
00:24:14,400 --> 00:24:16,240
lot of really great work on networking

625
00:24:16,240 --> 00:24:18,720
and measurement uh so you should hire

626
00:24:18,720 --> 00:24:20,799
her before someone else does

627
00:24:20,799 --> 00:24:23,360
thanks a lot

628
00:24:30,159 --> 00:24:33,799
we have time for questions

629
00:24:34,320 --> 00:24:36,640
rob jansen nrl thanks phil for the nice

630
00:24:36,640 --> 00:24:37,600
talk

631
00:24:37,600 --> 00:24:39,279
uh so it's my understanding that you're

632
00:24:39,279 --> 00:24:41,840
looking at sybil's civil relays right

633
00:24:41,840 --> 00:24:43,440
i'm wondering if you thought all about

634
00:24:43,440 --> 00:24:44,720
how to detect

635
00:24:44,720 --> 00:24:47,520
client symbols

636
00:24:48,400 --> 00:24:50,720
client symbols as in perhaps botnets

637
00:24:50,720 --> 00:24:51,600
maybe

638
00:24:51,600 --> 00:24:53,679
oh yeah just an attacker who's using

639
00:24:53,679 --> 00:24:56,480
different uh torque clients and maybe

640
00:24:56,480 --> 00:24:57,919
launching a denial of service attack or

641
00:24:57,919 --> 00:24:59,520
something like that

642
00:24:59,520 --> 00:25:01,840
yeah we have not at all actually but

643
00:25:01,840 --> 00:25:03,840
that's an interesting point yeah i

644
00:25:03,840 --> 00:25:05,600
wonder if we could recycle some of our

645
00:25:05,600 --> 00:25:09,120
techniques to to do that

646
00:25:12,080 --> 00:25:13,360
all right well the audience thanks for a

647
00:25:13,360 --> 00:25:16,400
few more questions uh

648
00:25:16,400 --> 00:25:19,440
i'm curious to pick your brain on uh how

649
00:25:19,440 --> 00:25:21,840
adversaries might respond to sybil

650
00:25:21,840 --> 00:25:23,600
hunter now that your tool is published

651
00:25:23,600 --> 00:25:25,520
so you talked about

652
00:25:25,520 --> 00:25:27,039
having some secret parameters in the

653
00:25:27,039 --> 00:25:28,640
system

654
00:25:28,640 --> 00:25:33,120
but if the output of the system has

655
00:25:34,000 --> 00:25:35,679
can lead to publicly distinguishable

656
00:25:35,679 --> 00:25:37,679
changes to what extent could an

657
00:25:37,679 --> 00:25:41,120
adversary infer the secret parameters

658
00:25:41,120 --> 00:25:43,200
right that is another problem so a live

659
00:25:43,200 --> 00:25:44,960
setting is really problematic like you

660
00:25:44,960 --> 00:25:46,240
said

661
00:25:46,240 --> 00:25:48,320
all we are doing is basically to drive

662
00:25:48,320 --> 00:25:50,640
up the cost of an attack and it is

663
00:25:50,640 --> 00:25:52,799
certainly possible through a lot of

664
00:25:52,799 --> 00:25:54,799
experimenting to figure out what the

665
00:25:54,799 --> 00:25:56,640
thresholds are but then again it

666
00:25:56,640 --> 00:25:59,200
requires cost which we're driving as

667
00:25:59,200 --> 00:26:01,919
high up as possible but ultimately

668
00:26:01,919 --> 00:26:03,919
through the very nature of civil attacks

669
00:26:03,919 --> 00:26:06,559
there is just we don't really see in

670
00:26:06,559 --> 00:26:08,080
given the current design of the tor

671
00:26:08,080 --> 00:26:11,840
network a fundamental fix to that

672
00:26:12,720 --> 00:26:15,440
hi trevor pottinger here um

673
00:26:15,440 --> 00:26:17,919
so i really enjoyed the uh the 11th

674
00:26:17,919 --> 00:26:19,840
trying distance the configuration

675
00:26:19,840 --> 00:26:21,760
comparison stuff that you guys worked on

676
00:26:21,760 --> 00:26:23,520
um did you guys play around with other

677
00:26:23,520 --> 00:26:25,279
sort of uh encodings of the

678
00:26:25,279 --> 00:26:27,520
configuration or alternative distance

679
00:26:27,520 --> 00:26:29,360
metrics to try to assess like how

680
00:26:29,360 --> 00:26:31,200
similar different things were

681
00:26:31,200 --> 00:26:32,640
uh a little bit

682
00:26:32,640 --> 00:26:34,720
so the actual distance metric we use is

683
00:26:34,720 --> 00:26:36,640
the correlation coefficient we played

684
00:26:36,640 --> 00:26:39,520
with things like the xor as distance

685
00:26:39,520 --> 00:26:43,440
i think it didn't make a huge difference

686
00:26:43,440 --> 00:26:45,760
so i'm afraid not an awful lot but i

687
00:26:45,760 --> 00:26:47,200
think there is a massive room for

688
00:26:47,200 --> 00:26:49,760
improvement because turning a relay into

689
00:26:49,760 --> 00:26:51,840
a simple text string loses an awful lot

690
00:26:51,840 --> 00:26:54,159
of information like the topological

691
00:26:54,159 --> 00:26:57,279
nature of ip addresses port numbers

692
00:26:57,279 --> 00:26:59,600
so this would certainly be a good

693
00:26:59,600 --> 00:27:01,840
opportunity for future work

694
00:27:01,840 --> 00:27:04,480
cool thanks

695
00:27:04,480 --> 00:27:06,559
one more question uh before we let you

696
00:27:06,559 --> 00:27:07,679
go uh

697
00:27:07,679 --> 00:27:09,360
this one is a bit more philosophical in

698
00:27:09,360 --> 00:27:12,000
nature i'm curious uh

699
00:27:12,000 --> 00:27:13,600
your current defenses are a bit more

700
00:27:13,600 --> 00:27:15,679
reactive and they're disparate that the

701
00:27:15,679 --> 00:27:17,840
attack has already happened and uh

702
00:27:17,840 --> 00:27:19,520
especially since some of the features

703
00:27:19,520 --> 00:27:22,559
have to look at historical

704
00:27:22,559 --> 00:27:24,000
time series data

705
00:27:24,000 --> 00:27:26,000
relays availability the impact of the

706
00:27:26,000 --> 00:27:28,000
attack could already have taken place

707
00:27:28,000 --> 00:27:29,279
especially

708
00:27:29,279 --> 00:27:32,320
for attacks such as bitcoin stealing

709
00:27:32,320 --> 00:27:34,159
could you comment on how in the future

710
00:27:34,159 --> 00:27:36,399
that our network could uh

711
00:27:36,399 --> 00:27:38,320
could deploy proactive defenses against

712
00:27:38,320 --> 00:27:40,240
civil attacks

713
00:27:40,240 --> 00:27:42,080
uh so i can tell you the way it

714
00:27:42,080 --> 00:27:44,559
currently works uh the moment we find

715
00:27:44,559 --> 00:27:46,399
out about an attack we report it to the

716
00:27:46,399 --> 00:27:49,039
network and the tor network has the

717
00:27:49,039 --> 00:27:51,200
ability to block relays by basically

718
00:27:51,200 --> 00:27:53,840
having a threshold voting scheme so the

719
00:27:53,840 --> 00:27:56,080
operators of the directory authorities

720
00:27:56,080 --> 00:27:58,799
basically the gatekeepers of the network

721
00:27:58,799 --> 00:28:00,720
express in their configuration file that

722
00:28:00,720 --> 00:28:03,120
they want a certain relay to disappear

723
00:28:03,120 --> 00:28:04,880
so we basically send an email to them

724
00:28:04,880 --> 00:28:06,720
they update their configuration file and

725
00:28:06,720 --> 00:28:09,520
this works more or less well

726
00:28:09,520 --> 00:28:11,760
and in a couple of hours we usually have

727
00:28:11,760 --> 00:28:14,320
success in removing a relay from the

728
00:28:14,320 --> 00:28:16,720
network so this has been streamlined to

729
00:28:16,720 --> 00:28:18,799
a degree that it works reasonably well

730
00:28:18,799 --> 00:28:21,360
but there is always room for improvement

731
00:28:21,360 --> 00:28:24,360
thanks

732
00:28:25,880 --> 00:28:34,229
[Applause]

733
00:28:36,960 --> 00:28:39,039
you

