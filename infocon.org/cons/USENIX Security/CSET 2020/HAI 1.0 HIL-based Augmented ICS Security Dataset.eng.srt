1
00:00:09,200 --> 00:00:09,840
hello

2
00:00:09,840 --> 00:00:12,480
my name is yaki shin i'm working in the

3
00:00:12,480 --> 00:00:13,759
affiliate institute of

4
00:00:13,759 --> 00:00:16,800
adrian south korea my team has been

5
00:00:16,800 --> 00:00:18,480
researching for a control system

6
00:00:18,480 --> 00:00:21,039
security of critical infrastructures

7
00:00:21,039 --> 00:00:24,240
in the russ csun 19 my team member umel

8
00:00:24,240 --> 00:00:24,560
lee

9
00:00:24,560 --> 00:00:26,640
represented our approach to develop a

10
00:00:26,640 --> 00:00:27,840
data set

11
00:00:27,840 --> 00:00:31,279
today our introduced hill-based

12
00:00:31,279 --> 00:00:34,880
augmented ics security dataset version

13
00:00:34,880 --> 00:00:35,360
one

14
00:00:35,360 --> 00:00:38,480
we call it high dataset please note that

15
00:00:38,480 --> 00:00:40,719
the speaker instead is not possible due

16
00:00:40,719 --> 00:00:45,840
to our security policies

17
00:00:48,239 --> 00:00:50,079
i will go over the following four

18
00:00:50,079 --> 00:00:52,640
contents

19
00:00:54,000 --> 00:00:56,719
now let me start by explaining what is

20
00:00:56,719 --> 00:00:58,719
the ics security data set

21
00:00:58,719 --> 00:01:02,160
and how to be used recently ai-based

22
00:01:02,160 --> 00:01:04,400
security studies for ics have been

23
00:01:04,400 --> 00:01:07,119
actively conducted following their

24
00:01:07,119 --> 00:01:09,040
general scheme the data set is

25
00:01:09,040 --> 00:01:11,439
essential to training validation and

26
00:01:11,439 --> 00:01:12,560
testing

27
00:01:12,560 --> 00:01:14,479
training dataset is used to training the

28
00:01:14,479 --> 00:01:16,560
model or to get the best modeling

29
00:01:16,560 --> 00:01:20,159
validation stage and the testing dataset

30
00:01:20,159 --> 00:01:23,759
is used to evaluate the trained model

31
00:01:23,759 --> 00:01:26,080
i say security dataset is a set of the

32
00:01:26,080 --> 00:01:28,080
labor time series data

33
00:01:28,080 --> 00:01:30,720
collected on the boss of the normal and

34
00:01:30,720 --> 00:01:33,280
enormous situation of ics

35
00:01:33,280 --> 00:01:35,360
it's generally divided into training

36
00:01:35,360 --> 00:01:38,400
data set and the testing data set

37
00:01:38,400 --> 00:01:41,040
training has a completely normal

38
00:01:41,040 --> 00:01:42,079
behaviors

39
00:01:42,079 --> 00:01:44,000
because most of our number detection

40
00:01:44,000 --> 00:01:46,000
studies have been trying to find

41
00:01:46,000 --> 00:01:49,759
anomalies different from normal

42
00:01:52,840 --> 00:01:55,119
situations

43
00:01:55,119 --> 00:01:57,439
to create a high data set we try to

44
00:01:57,439 --> 00:01:59,040
solve three problems

45
00:01:59,040 --> 00:02:01,280
generating trading data set the first

46
00:02:01,280 --> 00:02:02,479
problem is

47
00:02:02,479 --> 00:02:04,799
how to overcome simple process of lab

48
00:02:04,799 --> 00:02:06,640
scale test beds

49
00:02:06,640 --> 00:02:08,800
for richer richard dataset we made a

50
00:02:08,800 --> 00:02:10,000
complex process

51
00:02:10,000 --> 00:02:12,400
of combining a three real-world test bed

52
00:02:12,400 --> 00:02:13,120
using

53
00:02:13,120 --> 00:02:16,160
heat simulator the second problem is

54
00:02:16,160 --> 00:02:18,239
that is the challenge for a human to

55
00:02:18,239 --> 00:02:21,840
control the long-term operations

56
00:02:21,840 --> 00:02:24,400
we made the automation tool for unmanned

57
00:02:24,400 --> 00:02:26,879
normal operation

58
00:02:26,879 --> 00:02:28,959
meanwhile when generating the testing

59
00:02:28,959 --> 00:02:30,000
data set

60
00:02:30,000 --> 00:02:31,920
typically manual attack have many

61
00:02:31,920 --> 00:02:33,280
limitations in

62
00:02:33,280 --> 00:02:36,879
implementing brass sophisticated attacks

63
00:02:36,879 --> 00:02:39,920
and labeling the anomalies

64
00:02:39,920 --> 00:02:42,800
and expanding the attacks on the large

65
00:02:42,800 --> 00:02:44,400
scale system

66
00:02:44,400 --> 00:02:47,599
so high data set we can automatically

67
00:02:47,599 --> 00:02:49,760
launch browser text using scalable

68
00:02:49,760 --> 00:02:52,399
attack tool

69
00:02:55,760 --> 00:02:58,640
first let's look at process augmentation

70
00:02:58,640 --> 00:02:59,040
with

71
00:02:59,040 --> 00:03:02,560
hardware in the loop simulator 3d world

72
00:03:02,560 --> 00:03:04,879
testbed were interconnected by our heal

73
00:03:04,879 --> 00:03:06,959
simulator

74
00:03:06,959 --> 00:03:09,599
high test beds consist of six process

75
00:03:09,599 --> 00:03:10,480
controllers

76
00:03:10,480 --> 00:03:13,760
on three industrial controllers border

77
00:03:13,760 --> 00:03:15,040
process controlled by

78
00:03:15,040 --> 00:03:18,879
ems innovation dcs has four contours for

79
00:03:18,879 --> 00:03:21,760
water level pressure flow light and

80
00:03:21,760 --> 00:03:23,360
temperature

81
00:03:23,360 --> 00:03:27,040
turbine process controlled by gmax6e dcs

82
00:03:27,040 --> 00:03:30,640
only has speed controller

83
00:03:30,640 --> 00:03:32,560
water treatment process controlled by

84
00:03:32,560 --> 00:03:35,920
gms sm plcs water level control

85
00:03:35,920 --> 00:03:38,959
finally he simulates amoled to

86
00:03:38,959 --> 00:03:42,080
synchronize the power generator with a

87
00:03:42,080 --> 00:03:45,680
micro grid model it's enhanced the

88
00:03:45,680 --> 00:03:47,680
correlation between signals

89
00:03:47,680 --> 00:03:51,920
not to get precise simulation results

90
00:03:54,879 --> 00:03:57,519
high test data automatically operate to

91
00:03:57,519 --> 00:03:59,760
minimize human intervention

92
00:03:59,760 --> 00:04:02,640
for five process controllers their set

93
00:04:02,640 --> 00:04:04,480
points were automatically changed

94
00:04:04,480 --> 00:04:07,840
five times a day with a random delay

95
00:04:07,840 --> 00:04:10,080
automation to check whether the contrary

96
00:04:10,080 --> 00:04:11,200
is stabilized

97
00:04:11,200 --> 00:04:14,959
depending on new setpoint step use

98
00:04:14,959 --> 00:04:18,160
if system is settled send a new setpoint

99
00:04:18,160 --> 00:04:20,320
command with a random value within

100
00:04:20,320 --> 00:04:23,919
operation range so it's necessary to

101
00:04:23,919 --> 00:04:25,919
work experimentally to determine

102
00:04:25,919 --> 00:04:29,840
safe operation range

103
00:04:32,000 --> 00:04:34,800
now let's move on our tech tool the last

104
00:04:34,800 --> 00:04:35,840
gta workshop

105
00:04:35,840 --> 00:04:38,240
we introduced scalable attack tool based

106
00:04:38,240 --> 00:04:40,560
on a process controller

107
00:04:40,560 --> 00:04:43,040
this method can attack all variables of

108
00:04:43,040 --> 00:04:45,120
a process controller

109
00:04:45,120 --> 00:04:48,720
a process controller is a closed loop

110
00:04:48,720 --> 00:04:51,680
that attempts to maintain process value

111
00:04:51,680 --> 00:04:52,720
at setpoint

112
00:04:52,720 --> 00:04:56,000
adjusting control outputs we assume

113
00:04:56,000 --> 00:04:58,240
that attacker can change all these

114
00:04:58,240 --> 00:05:00,240
variables by modifying the

115
00:05:00,240 --> 00:05:02,639
parameter of function blocks such as

116
00:05:02,639 --> 00:05:04,039
calibration

117
00:05:04,039 --> 00:05:06,639
normalization and control algorithm in

118
00:05:06,639 --> 00:05:11,840
control logic

119
00:05:13,440 --> 00:05:16,560
also to effectively generate the attack

120
00:05:16,560 --> 00:05:17,520
scenarios

121
00:05:17,520 --> 00:05:20,160
we propose attack primitives based on

122
00:05:20,160 --> 00:05:20,720
process

123
00:05:20,720 --> 00:05:23,840
control left they are taking for

124
00:05:23,840 --> 00:05:26,800
a single control loop and combine to

125
00:05:26,800 --> 00:05:30,479
generating more complex attack scenarios

126
00:05:30,479 --> 00:05:32,720
implementing attack primitives we can

127
00:05:32,720 --> 00:05:35,039
choose three types of attack

128
00:05:35,039 --> 00:05:37,759
the first one is process value response

129
00:05:37,759 --> 00:05:39,039
prevention

130
00:05:39,039 --> 00:05:41,360
it can be used for hiding abnormal

131
00:05:41,360 --> 00:05:45,360
process battery response on hmi

132
00:05:45,360 --> 00:05:47,919
both of setpoint and control output

133
00:05:47,919 --> 00:05:50,160
attack can be used to maliciously

134
00:05:50,160 --> 00:05:51,360
manipulate the

135
00:05:51,360 --> 00:05:54,560
control output value these are text can

136
00:05:54,560 --> 00:05:57,120
be simultaneously proceed

137
00:05:57,120 --> 00:05:59,600
which makes generating browser attacks

138
00:05:59,600 --> 00:06:01,600
very easy

139
00:06:01,600 --> 00:06:03,919
for file process control loop of high

140
00:06:03,919 --> 00:06:04,960
test bet

141
00:06:04,960 --> 00:06:08,240
we comfort 14 attack primitive

142
00:06:08,240 --> 00:06:11,919
with high system impact

143
00:06:14,000 --> 00:06:16,639
in this page i will show you how to

144
00:06:16,639 --> 00:06:18,639
implement genotype primitive

145
00:06:18,639 --> 00:06:21,440
with response prevention and setpoint

146
00:06:21,440 --> 00:06:22,800
attack

147
00:06:22,800 --> 00:06:25,360
implementation procedure is divided into

148
00:06:25,360 --> 00:06:26,479
three steps

149
00:06:26,479 --> 00:06:29,759
pcr configuration attack configuration

150
00:06:29,759 --> 00:06:32,960
and attack scheduling first

151
00:06:32,960 --> 00:06:35,440
we have to configure pcl variables and

152
00:06:35,440 --> 00:06:37,840
their function block parameters

153
00:06:37,840 --> 00:06:40,400
this means that all remote access points

154
00:06:40,400 --> 00:06:42,400
are identified to

155
00:06:42,400 --> 00:06:46,239
force the function block parameters

156
00:06:46,800 --> 00:06:49,039
next we configure attack primitives with

157
00:06:49,039 --> 00:06:50,800
the response prevention and setpoint

158
00:06:50,800 --> 00:06:51,840
attack

159
00:06:51,840 --> 00:06:54,560
this will replay a normal snapshot of

160
00:06:54,560 --> 00:06:55,120
process

161
00:06:55,120 --> 00:06:58,400
value and the first set point into any

162
00:06:58,400 --> 00:07:00,800
value

163
00:07:00,800 --> 00:07:02,880
or attack primitives are automatically

164
00:07:02,880 --> 00:07:04,000
executed by

165
00:07:04,000 --> 00:07:07,520
scheduler at spec speed time

166
00:07:07,520 --> 00:07:10,800
finally a textual record or

167
00:07:10,800 --> 00:07:12,800
first change of the function block

168
00:07:12,800 --> 00:07:15,199
parameters so we can easily

169
00:07:15,199 --> 00:07:18,400
extract the precise attack interval

170
00:07:18,400 --> 00:07:22,639
and points in final figure

171
00:07:22,639 --> 00:07:24,960
human operator cannot aware abnormal

172
00:07:24,960 --> 00:07:25,919
situation on

173
00:07:25,919 --> 00:07:29,599
hmi because typically operate

174
00:07:29,599 --> 00:07:33,360
only monitor sense value

175
00:07:36,560 --> 00:07:39,199
being azure results we made a two data

176
00:07:39,199 --> 00:07:39,919
set with

177
00:07:39,919 --> 00:07:42,720
38 attack scenarios based on the 14

178
00:07:42,720 --> 00:07:44,720
attack primitives

179
00:07:44,720 --> 00:07:46,400
the first training data set was

180
00:07:46,400 --> 00:07:48,319
collected about the seven days

181
00:07:48,319 --> 00:07:51,360
and testing data set includes 28 attacks

182
00:07:51,360 --> 00:07:54,000
over four days the second training

183
00:07:54,000 --> 00:07:54,800
dataset was

184
00:07:54,800 --> 00:07:56,879
collected about the four days and

185
00:07:56,879 --> 00:07:58,879
testing data set consists of

186
00:07:58,879 --> 00:08:02,639
10 attacks over one and a half days

187
00:08:02,639 --> 00:08:05,680
each data set has its 63 columns

188
00:08:05,680 --> 00:08:08,080
the first column is the timestamp the

189
00:08:08,080 --> 00:08:11,440
next 58 columns are data points

190
00:08:11,440 --> 00:08:16,080
the last four columns are attack labels

191
00:08:18,319 --> 00:08:20,720
now hi dataset was later released at

192
00:08:20,720 --> 00:08:22,560
github and kaggle

193
00:08:22,560 --> 00:08:24,840
feel free to leave your message digital

194
00:08:24,840 --> 00:08:26,319
repositories

195
00:08:26,319 --> 00:08:28,720
also please refer to the technical

196
00:08:28,720 --> 00:08:32,960
manual for more details on dataset

197
00:08:35,760 --> 00:08:38,159
our feature flanger to improve the data

198
00:08:38,159 --> 00:08:39,360
labeling

199
00:08:39,360 --> 00:08:41,599
improving the data labeling allows more

200
00:08:41,599 --> 00:08:43,360
accurate validation of

201
00:08:43,360 --> 00:08:46,959
anomaly detection model we are trying to

202
00:08:46,959 --> 00:08:49,519
find the oral transient section

203
00:08:49,519 --> 00:08:50,560
according to the

204
00:08:50,560 --> 00:08:53,839
attacks because even in stealth attack

205
00:08:53,839 --> 00:08:54,320
we can

206
00:08:54,320 --> 00:08:56,880
identify transient state using the other

207
00:08:56,880 --> 00:08:58,240
correlate sensor or

208
00:08:58,240 --> 00:09:01,120
process value

209
00:09:03,040 --> 00:09:05,760
before we finish my talk i'll introduce

210
00:09:05,760 --> 00:09:06,560
the first

211
00:09:06,560 --> 00:09:09,120
anonymous detection contest with a new

212
00:09:09,120 --> 00:09:10,720
high data set

213
00:09:10,720 --> 00:09:13,760
it will be held from august 17th

214
00:09:13,760 --> 00:09:17,519
to september 29th please note that the

215
00:09:17,519 --> 00:09:18,880
foreign participants must

216
00:09:18,880 --> 00:09:22,080
team up with at least one korean and the

217
00:09:22,080 --> 00:09:24,000
website is not supported in

218
00:09:24,000 --> 00:09:27,760
english this is the end of my

219
00:09:27,760 --> 00:09:29,120
presentations

220
00:09:29,120 --> 00:09:31,440
if you want to ask any question please

221
00:09:31,440 --> 00:09:33,360
leave your message github

222
00:09:33,360 --> 00:09:38,320
or kaggle or email me thank you for

223
00:09:46,279 --> 00:09:49,279
listening

