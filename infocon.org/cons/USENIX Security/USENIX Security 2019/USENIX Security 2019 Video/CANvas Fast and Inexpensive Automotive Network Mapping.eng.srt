1
00:00:10,530 --> 00:00:15,329
hi everyone today in this talk I'll tell

2
00:00:13,200 --> 00:00:19,140
you about how we built an nmap for cars

3
00:00:15,330 --> 00:00:21,150
so I start off with the question do you

4
00:00:19,140 --> 00:00:23,630
know what's going on in your car well a

5
00:00:21,150 --> 00:00:26,729
modern car consists of a network of

6
00:00:23,630 --> 00:00:28,349
electronic control units or ECU's that

7
00:00:26,730 --> 00:00:30,359
talk to each other to handle everything

8
00:00:28,350 --> 00:00:30,900
from your engine and brakes to your

9
00:00:30,359 --> 00:00:32,910
headlights

10
00:00:30,900 --> 00:00:35,070
now as modern cars are starting to

11
00:00:32,910 --> 00:00:37,890
include more electronics more wireless

12
00:00:35,070 --> 00:00:39,510
systems it's starting to become more

13
00:00:37,890 --> 00:00:41,400
increasingly important to know what's

14
00:00:39,510 --> 00:00:44,010
going on in your car especially in the

15
00:00:41,400 --> 00:00:47,280
context of security let's look at a few

16
00:00:44,010 --> 00:00:49,649
scenarios so say you take your car to a

17
00:00:47,280 --> 00:00:52,379
shady mechanic and he installs an ECU

18
00:00:49,649 --> 00:00:54,809
without your permission in this case I

19
00:00:52,379 --> 00:00:58,890
would want to know what ECU's are

20
00:00:54,809 --> 00:01:00,870
currently in my car maybe you buy a

21
00:00:58,890 --> 00:01:04,289
aftermarket radio from some guy on

22
00:01:00,870 --> 00:01:06,420
Craigslist and that radio is actually

23
00:01:04,289 --> 00:01:09,030
transmitting new messages onto the

24
00:01:06,420 --> 00:01:11,100
network that you do not expect it to at

25
00:01:09,030 --> 00:01:14,030
this point I would want to know what

26
00:01:11,100 --> 00:01:18,030
devices are sending what messages and

27
00:01:14,030 --> 00:01:20,220
maybe this guy from Craigslist wanted to

28
00:01:18,030 --> 00:01:24,470
use that radio to shut down my engine

29
00:01:20,220 --> 00:01:27,539
ECU using recent work by Joe at all

30
00:01:24,470 --> 00:01:30,509
they've demonstrated they showed that a

31
00:01:27,540 --> 00:01:32,430
compromised ECU that was capable of

32
00:01:30,509 --> 00:01:34,619
receiving messages from its victim in

33
00:01:32,430 --> 00:01:37,290
this case the engine ECU could shut it

34
00:01:34,619 --> 00:01:39,750
down by simply sending messages in a

35
00:01:37,290 --> 00:01:41,970
particular manner causing errors in the

36
00:01:39,750 --> 00:01:45,540
engine's transmission and it will shut

37
00:01:41,970 --> 00:01:49,700
down so in this case we would also want

38
00:01:45,540 --> 00:01:52,409
to know what messages can an ECU receive

39
00:01:49,700 --> 00:01:56,189
so what we want to build an automotive

40
00:01:52,409 --> 00:01:58,890
network mapper using guided by our three

41
00:01:56,189 --> 00:02:00,898
scenarios we have three goals for our

42
00:01:58,890 --> 00:02:03,930
network mapper first we want to identify

43
00:02:00,899 --> 00:02:06,329
the ECU's in a network then we want to

44
00:02:03,930 --> 00:02:08,759
identify the message sender for each

45
00:02:06,329 --> 00:02:10,859
message and for each message we also

46
00:02:08,758 --> 00:02:16,350
want to know which devices are receiving

47
00:02:10,860 --> 00:02:18,770
these messages so because we're building

48
00:02:16,350 --> 00:02:22,200
a tool we have to focus on practicality

49
00:02:18,770 --> 00:02:23,879
our tool should not require your car to

50
00:02:22,200 --> 00:02:24,269
be on for several hours or days at a

51
00:02:23,879 --> 00:02:26,160
time

52
00:02:24,270 --> 00:02:29,040
we don't want to use expensive equipment

53
00:02:26,160 --> 00:02:30,600
like an oscilloscope or our method

54
00:02:29,040 --> 00:02:32,549
should work on the majority of vehicles

55
00:02:30,600 --> 00:02:34,290
that are out there and we shouldn't ask

56
00:02:32,550 --> 00:02:36,300
our users to cut directly into the wires

57
00:02:34,290 --> 00:02:37,799
of their car and last and most

58
00:02:36,300 --> 00:02:39,210
importantly we don't want to brick your

59
00:02:37,800 --> 00:02:40,430
car because that would be the worst

60
00:02:39,210 --> 00:02:44,370
thing ever

61
00:02:40,430 --> 00:02:47,280
so the obvious strawman here is why not

62
00:02:44,370 --> 00:02:50,430
ask the automaker right the automaker

63
00:02:47,280 --> 00:02:53,430
has this information in a database file

64
00:02:50,430 --> 00:02:55,710
of this message information however this

65
00:02:53,430 --> 00:02:57,420
is strictly confidential even companies

66
00:02:55,710 --> 00:02:59,040
that work with the automaker have a

67
00:02:57,420 --> 00:03:00,809
tough time getting this information and

68
00:02:59,040 --> 00:03:02,370
you might consider well maybe your

69
00:03:00,810 --> 00:03:04,410
mechanic might have this information you

70
00:03:02,370 --> 00:03:05,910
can go to an online mechanic

71
00:03:04,410 --> 00:03:08,520
subscription but that only tells you the

72
00:03:05,910 --> 00:03:10,260
wiring diagram of these ECU's and at

73
00:03:08,520 --> 00:03:13,770
most the information you'll get is the

74
00:03:10,260 --> 00:03:15,870
number of ECS in a car and the reality

75
00:03:13,770 --> 00:03:18,570
is is that the network inside a car is

76
00:03:15,870 --> 00:03:21,780
constantly changing and we've seen three

77
00:03:18,570 --> 00:03:25,230
scenarios as to how this can happen so

78
00:03:21,780 --> 00:03:26,580
in a nutshell we build canvas a network

79
00:03:25,230 --> 00:03:29,130
mapper for cars that leverages

80
00:03:26,580 --> 00:03:31,080
information from message timing and the

81
00:03:29,130 --> 00:03:33,600
error handling mechanism to generate a

82
00:03:31,080 --> 00:03:37,590
network map in under 30 minutes with

83
00:03:33,600 --> 00:03:39,600
less than $50 worth of hardware so now

84
00:03:37,590 --> 00:03:41,580
I'll give you some background about the

85
00:03:39,600 --> 00:03:45,750
protocol cars used and some challenges

86
00:03:41,580 --> 00:03:48,900
in mapping so the de facto standard for

87
00:03:45,750 --> 00:03:50,430
the internal automotive network is the

88
00:03:48,900 --> 00:03:53,160
controller area network or the can

89
00:03:50,430 --> 00:03:56,190
protocol a can protocol consists of a

90
00:03:53,160 --> 00:03:59,900
bus where each ECU is responsible for

91
00:03:56,190 --> 00:04:02,940
sending a set of ID's these IDs are

92
00:03:59,900 --> 00:04:05,880
basically labeled the data that an ECU

93
00:04:02,940 --> 00:04:09,120
is transmitting but the reso the actual

94
00:04:05,880 --> 00:04:11,220
purpose of each ID we don't know we an

95
00:04:09,120 --> 00:04:13,050
ID could mean engine timing or vehicle

96
00:04:11,220 --> 00:04:15,570
speed but only the automaker has that

97
00:04:13,050 --> 00:04:18,420
information and each in each of these

98
00:04:15,570 --> 00:04:20,760
IDs are sent periodically and each ID is

99
00:04:18,420 --> 00:04:23,790
only sent by a single ECU in the network

100
00:04:20,760 --> 00:04:27,360
so looking at a particular can message

101
00:04:23,790 --> 00:04:29,910
the ID at transmission time serves

102
00:04:27,360 --> 00:04:32,460
priority in the network and will decide

103
00:04:29,910 --> 00:04:34,650
which message is sent first and there's

104
00:04:32,460 --> 00:04:36,330
also a process of acknowledgment where

105
00:04:34,650 --> 00:04:37,568
after message is sent it will be

106
00:04:36,330 --> 00:04:41,219
acknowledged

107
00:04:37,569 --> 00:04:44,379
simultaneously by the receiving ECU's

108
00:04:41,219 --> 00:04:47,139
now unfortunately this makes the can

109
00:04:44,379 --> 00:04:49,479
protocol makes mapping hard if we look

110
00:04:47,139 --> 00:04:51,580
at the if we connect our tool to the

111
00:04:49,479 --> 00:04:54,339
network and this is the information that

112
00:04:51,580 --> 00:04:56,889
we get the ids and some time stamps of

113
00:04:54,339 --> 00:04:59,289
the transmission times now if we look at

114
00:04:56,889 --> 00:05:02,649
an individual message the challenges is

115
00:04:59,289 --> 00:05:04,719
that this ID only indicates priority not

116
00:05:02,649 --> 00:05:06,610
information about the message sender and

117
00:05:04,719 --> 00:05:09,429
because the AK bit is sent

118
00:05:06,610 --> 00:05:11,020
simultaneously we don't know who exactly

119
00:05:09,429 --> 00:05:13,149
sent them at who exactly receive the

120
00:05:11,020 --> 00:05:15,818
message it could be one it could be all

121
00:05:13,149 --> 00:05:17,289
of the ECU's in the car now for those of

122
00:05:15,819 --> 00:05:19,240
you familiar with the canned protocol

123
00:05:17,289 --> 00:05:22,360
you could define receiver differently

124
00:05:19,240 --> 00:05:23,319
and we talked about that at the end so

125
00:05:22,360 --> 00:05:27,459
now let's take a look at the canvas

126
00:05:23,319 --> 00:05:29,769
system so we combined our first two

127
00:05:27,459 --> 00:05:31,479
goals EC identification and message

128
00:05:29,769 --> 00:05:33,309
sender into a module called source

129
00:05:31,479 --> 00:05:34,568
mapping and our third goal becomes

130
00:05:33,309 --> 00:05:38,349
another module called destination

131
00:05:34,569 --> 00:05:41,740
mapping for source mapping we take an

132
00:05:38,349 --> 00:05:44,558
input the data log of timestamp traffic

133
00:05:41,740 --> 00:05:46,779
that we see from the car and our goal is

134
00:05:44,559 --> 00:05:49,959
to produce a source map where we have a

135
00:05:46,779 --> 00:05:52,209
table of the ECU's and the set of ID's

136
00:05:49,959 --> 00:05:54,909
that they strands MIT now the question

137
00:05:52,209 --> 00:05:59,319
here is how can we link these IDs to the

138
00:05:54,909 --> 00:06:01,569
source ECU let's borrow an insight from

139
00:05:59,319 --> 00:06:03,399
prior work prior work for purposes of

140
00:06:01,569 --> 00:06:06,879
building an intrusion detection system

141
00:06:03,399 --> 00:06:09,579
they identified a they identified clock

142
00:06:06,879 --> 00:06:12,699
offset as a unique characteristic that

143
00:06:09,579 --> 00:06:15,369
could identify ECU's in the car now

144
00:06:12,699 --> 00:06:17,019
clock offset is basically if your clock

145
00:06:15,369 --> 00:06:19,539
is one second behind mine that's a 1

146
00:06:17,019 --> 00:06:21,969
clock that's a 1 second clock offset and

147
00:06:19,539 --> 00:06:24,308
by tracking this clock offset per

148
00:06:21,969 --> 00:06:26,889
message ID and the network sharp changes

149
00:06:24,309 --> 00:06:29,229
could indicate an active attack now we

150
00:06:26,889 --> 00:06:32,110
thought well let's repurpose this

151
00:06:29,229 --> 00:06:35,289
insight and let's look at us let's look

152
00:06:32,110 --> 00:06:38,259
at a single ECU from a real vehicle this

153
00:06:35,289 --> 00:06:40,899
ECU has 3 IDs and all sent at the same

154
00:06:38,259 --> 00:06:43,300
period and by using a graph of clock

155
00:06:40,899 --> 00:06:45,789
offset versus the number of the messages

156
00:06:43,300 --> 00:06:47,620
in the in the car we can clearly see

157
00:06:45,789 --> 00:06:50,860
that we can associate and cluster these

158
00:06:47,620 --> 00:06:51,870
three IDs into a single source ECU make

159
00:06:50,860 --> 00:06:54,310
sense

160
00:06:51,870 --> 00:06:56,980
unfortunately we found that prior work

161
00:06:54,310 --> 00:06:58,870
is not sufficient the first problem is

162
00:06:56,980 --> 00:07:00,490
that it's not robust to noise in the

163
00:06:58,870 --> 00:07:02,830
period which we find an automotive

164
00:07:00,490 --> 00:07:05,200
networks and because it is period

165
00:07:02,830 --> 00:07:07,960
dependent so an example of this period

166
00:07:05,200 --> 00:07:10,810
dependency another real ECU from a real

167
00:07:07,960 --> 00:07:13,120
car these three IDs are transmitted at

168
00:07:10,810 --> 00:07:14,920
three different periods the only

169
00:07:13,120 --> 00:07:16,780
conclusion I could properly draw from

170
00:07:14,920 --> 00:07:18,760
this graph right here is that there are

171
00:07:16,780 --> 00:07:22,059
three different ECU's sending one

172
00:07:18,760 --> 00:07:25,539
message each which is not true so our

173
00:07:22,060 --> 00:07:27,790
solution here is let's figure out which

174
00:07:25,540 --> 00:07:30,070
messages could help us remove that

175
00:07:27,790 --> 00:07:32,170
period dependence and our insight here

176
00:07:30,070 --> 00:07:34,450
is let's choose messages at the hyper

177
00:07:32,170 --> 00:07:37,720
period or the least common multiple of

178
00:07:34,450 --> 00:07:40,599
the period for two different IDs so here

179
00:07:37,720 --> 00:07:42,850
for two IDs that transmit at 18 and 6

180
00:07:40,600 --> 00:07:45,280
we'll pick these particular least common

181
00:07:42,850 --> 00:07:49,000
multiples and by tracking this offset

182
00:07:45,280 --> 00:07:51,010
using these particular messages if the

183
00:07:49,000 --> 00:07:53,350
if the offset remains constant then we

184
00:07:51,010 --> 00:07:58,060
know that these two IDs originated from

185
00:07:53,350 --> 00:08:00,520
the same ECU so our approach here is we

186
00:07:58,060 --> 00:08:03,220
strip out the input log and just focus

187
00:08:00,520 --> 00:08:05,380
on these two IDs and we measure over

188
00:08:03,220 --> 00:08:08,800
time in order to reduce the effect of

189
00:08:05,380 --> 00:08:10,210
noise and we do some clustering by based

190
00:08:08,800 --> 00:08:13,210
off of these matches and we can group

191
00:08:10,210 --> 00:08:15,400
these IDs in two sets of ECU's we also

192
00:08:13,210 --> 00:08:17,710
see a lot of practical challenges where

193
00:08:15,400 --> 00:08:19,690
we face messages that have deadlines and

194
00:08:17,710 --> 00:08:21,250
messages that suddenly stop transmitting

195
00:08:19,690 --> 00:08:25,000
and we talk about how we solve those

196
00:08:21,250 --> 00:08:27,520
challenges in the paper so now going to

197
00:08:25,000 --> 00:08:29,320
destination mapping the input for

198
00:08:27,520 --> 00:08:31,570
destination mapping is the source map as

199
00:08:29,320 --> 00:08:34,090
well as the as well as access to the

200
00:08:31,570 --> 00:08:35,289
physical bus that all cars in the United

201
00:08:34,090 --> 00:08:38,140
States are required to have the

202
00:08:35,289 --> 00:08:40,419
diagnostics port the output we want to

203
00:08:38,140 --> 00:08:42,699
generate here is a destination map where

204
00:08:40,419 --> 00:08:44,410
we have for each ID the set of

205
00:08:42,700 --> 00:08:49,710
destination ECU's that are receiving

206
00:08:44,410 --> 00:08:53,439
that ID so if we go back and look at the

207
00:08:49,710 --> 00:08:55,390
unmodified can unmodified can bus when

208
00:08:53,440 --> 00:08:57,730
we transmit a message on to the network

209
00:08:55,390 --> 00:09:02,140
we done and we see an act we don't

210
00:08:57,730 --> 00:09:04,690
exactly know who act the message but

211
00:09:02,140 --> 00:09:07,060
what if we could isolate an ECU

212
00:09:04,690 --> 00:09:09,190
to guarantee that the sole device on the

213
00:09:07,060 --> 00:09:12,969
network is the only device that's

214
00:09:09,190 --> 00:09:14,649
transmitting that ACK at that point we

215
00:09:12,970 --> 00:09:17,829
could we could fill out our destination

216
00:09:14,649 --> 00:09:20,230
map so here we bar another insight from

217
00:09:17,829 --> 00:09:23,979
prior work that was thinking of that was

218
00:09:20,230 --> 00:09:25,810
using this error handling exploit to

219
00:09:23,980 --> 00:09:28,240
dupe to perform a denial of service

220
00:09:25,810 --> 00:09:30,459
attack what they found and pointed out

221
00:09:28,240 --> 00:09:31,839
was that in the cans error handling if

222
00:09:30,459 --> 00:09:34,660
you could cause a certain number of

223
00:09:31,839 --> 00:09:36,189
errors of ECU will voluntarily shut

224
00:09:34,660 --> 00:09:39,819
itself off to prevent itself from

225
00:09:36,189 --> 00:09:42,610
further harming the network the thing is

226
00:09:39,819 --> 00:09:44,889
is their method was not robust and it

227
00:09:42,610 --> 00:09:47,259
was designed to be an attack it only

228
00:09:44,889 --> 00:09:48,970
needed one success to be successful but

229
00:09:47,259 --> 00:09:51,220
because we are trying to perform this

230
00:09:48,970 --> 00:09:52,990
multiple times we had to come up with a

231
00:09:51,220 --> 00:09:55,029
different approach and we talked about

232
00:09:52,990 --> 00:09:57,399
this in the paper as long as real

233
00:09:55,029 --> 00:10:02,050
limitations including ECU's that

234
00:09:57,399 --> 00:10:05,529
autorecover and other examples so now we

235
00:10:02,050 --> 00:10:08,699
look at our evaluation so for our

236
00:10:05,529 --> 00:10:11,319
evaluation we have two different cars

237
00:10:08,699 --> 00:10:14,380
one is a hand-me-down that the

238
00:10:11,319 --> 00:10:18,040
university gave to us it's a 2009 Toyota

239
00:10:14,380 --> 00:10:20,800
Prius and B and we saw we thought okay

240
00:10:18,040 --> 00:10:23,620
well it's a Prius let's get a newer car

241
00:10:20,800 --> 00:10:26,170
right we went to a salvage yard and we

242
00:10:23,620 --> 00:10:29,259
got a really cheap 2017 Ford Focus all

243
00:10:26,170 --> 00:10:31,389
the electronics are still intact we also

244
00:10:29,259 --> 00:10:33,970
got some ECU so I'm ECU's from a

245
00:10:31,389 --> 00:10:36,250
junkyard and we did all we did a lot of

246
00:10:33,970 --> 00:10:39,310
testing on a synthetic topology using

247
00:10:36,250 --> 00:10:42,579
Arduino dues which is also where we run

248
00:10:39,310 --> 00:10:45,310
our canvas member so just some key

249
00:10:42,579 --> 00:10:47,439
takeaways we built the system that has

250
00:10:45,310 --> 00:10:49,779
that runs in under 30 minutes

251
00:10:47,439 --> 00:10:52,719
it has let it uses an Arduino Dewey for

252
00:10:49,779 --> 00:10:54,430
less than $50 it uses the standard Canon

253
00:10:52,720 --> 00:10:56,079
implementation and you connect to the

254
00:10:54,430 --> 00:10:58,089
on-board diagnostics port of your car

255
00:10:56,079 --> 00:11:00,459
and any of the methods that we do

256
00:10:58,089 --> 00:11:03,009
including isolating and ECU if you

257
00:11:00,459 --> 00:11:05,589
follow the steps in our paper you won't

258
00:11:03,009 --> 00:11:07,420
have any dash lights afterwards so now

259
00:11:05,589 --> 00:11:09,490
let's look at two interesting case

260
00:11:07,420 --> 00:11:12,040
studies where we actually could

261
00:11:09,490 --> 00:11:15,449
implement or we actually saw situations

262
00:11:12,040 --> 00:11:18,550
of the first three scenarios I gave you

263
00:11:15,449 --> 00:11:20,800
so in this example we

264
00:11:18,550 --> 00:11:24,250
are looking at the source map of the

265
00:11:20,800 --> 00:11:26,859
2009 Prius by looking at the online

266
00:11:24,250 --> 00:11:31,690
mechanic subscription we expect to find

267
00:11:26,860 --> 00:11:35,440
these ATC use in the car now when we ran

268
00:11:31,690 --> 00:11:36,730
our network map we found a ninth ECU at

269
00:11:35,440 --> 00:11:40,240
this point we thought something was

270
00:11:36,730 --> 00:11:42,279
wrong and what we but what we did we

271
00:11:40,240 --> 00:11:44,140
looked at the history of this car and we

272
00:11:42,279 --> 00:11:46,149
actually found that when the university

273
00:11:44,140 --> 00:11:49,630
first bought this car they converted it

274
00:11:46,149 --> 00:11:51,329
to an all-electric car and in the

275
00:11:49,630 --> 00:11:54,010
process of doing this they added another

276
00:11:51,329 --> 00:11:56,199
ECU that was now transmitting onto the

277
00:11:54,010 --> 00:11:58,540
network and we verified this by

278
00:11:56,200 --> 00:12:00,399
physically going into each ECU and

279
00:11:58,540 --> 00:12:02,110
tearing apart the car and unplugging it

280
00:12:00,399 --> 00:12:06,790
and we found that there was a ninth

281
00:12:02,110 --> 00:12:08,950
device transmitting on to the network so

282
00:12:06,790 --> 00:12:13,779
now looking at the destination mapping

283
00:12:08,950 --> 00:12:15,760
for a 2017 Ford Focus if you look at the

284
00:12:13,779 --> 00:12:18,339
on if you look at the mechanic

285
00:12:15,760 --> 00:12:19,660
subscription for this vehicle you'll see

286
00:12:18,339 --> 00:12:22,269
that there are certain functions that

287
00:12:19,660 --> 00:12:24,880
are supposed to operate between a subset

288
00:12:22,269 --> 00:12:26,200
of e C's for example these four ECU's

289
00:12:24,880 --> 00:12:29,829
talk to each other for purposes of

290
00:12:26,200 --> 00:12:31,810
engine function now with our destination

291
00:12:29,829 --> 00:12:35,709
map we found that these messages were

292
00:12:31,810 --> 00:12:38,170
also being received by the radio ECU now

293
00:12:35,709 --> 00:12:39,910
if you think back to that scenario I

294
00:12:38,170 --> 00:12:41,380
talked about theoretically if you had

295
00:12:39,910 --> 00:12:43,839
swapped out your after this radio with

296
00:12:41,380 --> 00:12:45,250
an aftermarket then someone could could

297
00:12:43,839 --> 00:12:49,450
use that radio to enable the shut down

298
00:12:45,250 --> 00:12:52,149
attack and in fact we found that both

299
00:12:49,450 --> 00:12:54,430
the Prius and the and the focus had no

300
00:12:52,149 --> 00:12:58,270
filter whatsoever on what messages and

301
00:12:54,430 --> 00:13:01,359
ECU could receive so here are a few

302
00:12:58,270 --> 00:13:05,829
limitations that I'll discuss I have

303
00:13:01,360 --> 00:13:07,990
time ok so so first we have adversarial

304
00:13:05,829 --> 00:13:11,199
evasion we've been asked us a lot we

305
00:13:07,990 --> 00:13:12,940
thought well an attacker could thou'rt

306
00:13:11,199 --> 00:13:14,050
our mapping right or even the automaker

307
00:13:12,940 --> 00:13:15,310
could thwart our mapping because they

308
00:13:14,050 --> 00:13:17,620
don't they want to keep that information

309
00:13:15,310 --> 00:13:19,540
secret so at this point we would just

310
00:13:17,620 --> 00:13:22,420
rather use an intrusion detection system

311
00:13:19,540 --> 00:13:24,849
if there is an active attack an IDs

312
00:13:22,420 --> 00:13:27,880
would be the best solution we are trying

313
00:13:24,850 --> 00:13:31,209
to perform we're trying to do defenses

314
00:13:27,880 --> 00:13:32,380
against passive attacks and people have

315
00:13:31,209 --> 00:13:34,660
also asked us well why do

316
00:13:32,380 --> 00:13:36,460
the automaker intentionally altered the

317
00:13:34,660 --> 00:13:39,250
timing to defeat your mechanisms

318
00:13:36,460 --> 00:13:41,260
well scheduling these messages for a

319
00:13:39,250 --> 00:13:43,210
vehicle in real time is already a

320
00:13:41,260 --> 00:13:45,610
challenging enough problem so that so

321
00:13:43,210 --> 00:13:47,740
they have no incentive to alter the

322
00:13:45,610 --> 00:13:52,420
timing and in the paper we talk about

323
00:13:47,740 --> 00:13:53,560
how we avoid permanent damage and we and

324
00:13:52,420 --> 00:13:55,660
we also talk about the method of

325
00:13:53,560 --> 00:13:58,420
resetting dash lights even as you're

326
00:13:55,660 --> 00:14:00,640
shutting off these ECU's these ECU's are

327
00:13:58,420 --> 00:14:02,290
built to handle that in case a rat bites

328
00:14:00,640 --> 00:14:04,000
through the wires or in case there's

329
00:14:02,290 --> 00:14:06,219
some kind of electrical flaw because

330
00:14:04,000 --> 00:14:07,870
this is not a permanent fault when you

331
00:14:06,220 --> 00:14:09,610
sucked for most cases when you simply

332
00:14:07,870 --> 00:14:11,860
turn off the car and turn it back on the

333
00:14:09,610 --> 00:14:14,470
dash lights disappear or if you drive

334
00:14:11,860 --> 00:14:17,020
around for a few for a little bit and

335
00:14:14,470 --> 00:14:18,730
these ECU's when they go into this mode

336
00:14:17,020 --> 00:14:20,020
where they can handle that failure it's

337
00:14:18,730 --> 00:14:21,730
called limp home mode

338
00:14:20,020 --> 00:14:24,160
so these eazy-e's are designed for that

339
00:14:21,730 --> 00:14:25,840
and in the case where especially modern

340
00:14:24,160 --> 00:14:30,160
cars they starting to have multiple can

341
00:14:25,840 --> 00:14:32,470
buses in order to get access to these

342
00:14:30,160 --> 00:14:34,150
unexposed buses we also talked about how

343
00:14:32,470 --> 00:14:36,700
you can gain access to these buses with

344
00:14:34,150 --> 00:14:39,459
minimal tearing up of the car by going

345
00:14:36,700 --> 00:14:41,530
through the doors so this is also

346
00:14:39,460 --> 00:14:44,110
another message acceptance filter is

347
00:14:41,530 --> 00:14:46,360
another way that you could define

348
00:14:44,110 --> 00:14:47,800
message reception and in the paper we

349
00:14:46,360 --> 00:14:49,990
talked about how this is a vendor

350
00:14:47,800 --> 00:14:51,969
specific approach and we give some ideas

351
00:14:49,990 --> 00:14:53,170
about how to achieve that but because

352
00:14:51,970 --> 00:14:55,630
we're trying to aim for a vehicle

353
00:14:53,170 --> 00:14:57,810
agnostic approach we chose to define

354
00:14:55,630 --> 00:15:00,730
message receive a different way and

355
00:14:57,810 --> 00:15:03,520
finally by doing this isolation

356
00:15:00,730 --> 00:15:05,740
mechanism we can actually detect non

357
00:15:03,520 --> 00:15:08,260
transmitting ECU's and we've talked to

358
00:15:05,740 --> 00:15:10,810
automakers and they said that this would

359
00:15:08,260 --> 00:15:15,250
be a very potential use case for them

360
00:15:10,810 --> 00:15:18,339
for using our tool so to conclude the

361
00:15:15,250 --> 00:15:20,650
network inside cars is no longer static

362
00:15:18,340 --> 00:15:22,870
we've seen three scenarios where that

363
00:15:20,650 --> 00:15:24,670
where that can change and we've built

364
00:15:22,870 --> 00:15:27,340
canvas a network mapper that'll tell you

365
00:15:24,670 --> 00:15:29,910
what's going on in your car and we've

366
00:15:27,340 --> 00:15:33,010
seen that can makes the mapping problem

367
00:15:29,910 --> 00:15:34,180
challenging and because due to the lack

368
00:15:33,010 --> 00:15:37,300
of source or destination information

369
00:15:34,180 --> 00:15:38,890
that you might see in other protocols we

370
00:15:37,300 --> 00:15:41,920
saw that prior work did not achieve

371
00:15:38,890 --> 00:15:44,589
these goals when applied to the purpose

372
00:15:41,920 --> 00:15:46,060
or the context of network mapping and we

373
00:15:44,589 --> 00:15:48,940
haven't fast and inexpensive

374
00:15:46,060 --> 00:15:51,339
with the focus on practicality we have

375
00:15:48,940 --> 00:15:54,520
we've seen too real blow to real world

376
00:15:51,340 --> 00:15:57,250
demonstrations in the security context

377
00:15:54,520 --> 00:15:58,930
and we hope that our tool canvas can

378
00:15:57,250 --> 00:16:09,580
serve as a basis for future security

379
00:15:58,930 --> 00:16:12,339
applications thank you okay questions to

380
00:16:09,580 --> 00:16:13,750
start up start us off it was curious how

381
00:16:12,340 --> 00:16:16,360
do you think we might communicate with

382
00:16:13,750 --> 00:16:18,670
vehicle owners about not installing and

383
00:16:16,360 --> 00:16:22,240
trusted devices or who you think should

384
00:16:18,670 --> 00:16:24,550
be making sure that doesn't happen

385
00:16:22,240 --> 00:16:26,110
could you repeat that again where who

386
00:16:24,550 --> 00:16:27,670
you think if it's not the vehicle owner

387
00:16:26,110 --> 00:16:29,740
who he should be telling not to install

388
00:16:27,670 --> 00:16:32,290
interested devices who might we talk to

389
00:16:29,740 --> 00:16:34,660
so I would probably say the mechanic

390
00:16:32,290 --> 00:16:37,230
should have a process of verifying

391
00:16:34,660 --> 00:16:40,120
whether these this information is secure

392
00:16:37,230 --> 00:16:42,130
or if you can like that potentially

393
00:16:40,120 --> 00:16:43,990
counterfeit ECU's as well that's also

394
00:16:42,130 --> 00:16:46,720
another issue that automakers have

395
00:16:43,990 --> 00:16:49,030
brought up with us but even if we could

396
00:16:46,720 --> 00:16:51,070
so if as a vehicle owner if we can make

397
00:16:49,030 --> 00:16:52,360
this tool simple to use then they could

398
00:16:51,070 --> 00:16:54,580
also use this as well they can buy

399
00:16:52,360 --> 00:16:57,430
aftermarket parts connected and check it

400
00:16:54,580 --> 00:17:00,730
especially as parts are now moving from

401
00:16:57,430 --> 00:17:02,319
mechanical to electronic and I would say

402
00:17:00,730 --> 00:17:06,610
1020 years from now the majority of

403
00:17:02,320 --> 00:17:10,240
parts will be electronic thanks so

404
00:17:06,609 --> 00:17:13,659
Justin campus NYU I know a lot of modern

405
00:17:10,240 --> 00:17:15,250
automakers are increasingly segmenting

406
00:17:13,660 --> 00:17:18,280
their can networks and adding gateways

407
00:17:15,250 --> 00:17:19,750
that are also meant as security

408
00:17:18,280 --> 00:17:22,960
deterrents and things like that I'm

409
00:17:19,750 --> 00:17:25,300
wondering if you can comment on if that

410
00:17:22,960 --> 00:17:27,250
trend continues what that means for your

411
00:17:25,300 --> 00:17:30,159
work in canvas sure that's an excellent

412
00:17:27,250 --> 00:17:32,800
question so in the paper we go into more

413
00:17:30,160 --> 00:17:35,350
detail but for for gateways in

414
00:17:32,800 --> 00:17:38,230
particular we the gateways are

415
00:17:35,350 --> 00:17:40,300
connecting multiple can buses so as long

416
00:17:38,230 --> 00:17:42,610
as you can access each individual can

417
00:17:40,300 --> 00:17:44,710
bus and that there are no methods trying

418
00:17:42,610 --> 00:17:47,969
to thwart our mapping capabilities then

419
00:17:44,710 --> 00:17:51,620
yes canvas can last less for the future

420
00:17:47,970 --> 00:17:56,550
great thanks I thank the speaker

421
00:17:51,620 --> 00:17:56,550
[Applause]

