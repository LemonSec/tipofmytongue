1
00:00:11,380 --> 00:00:16,470
thank you for the nice introduction good

2
00:00:13,900 --> 00:00:19,110
afternoon everyone it's bound to

3
00:00:16,470 --> 00:00:21,599
to present our paper my name is Leon Tom

4
00:00:19,110 --> 00:00:24,689
and I am a PhD student at Washington

5
00:00:21,600 --> 00:00:26,940
University in st. Louis first I would

6
00:00:24,690 --> 00:00:29,820
like to start with the background and

7
00:00:26,940 --> 00:00:31,740
motivation as we know that machinery has

8
00:00:29,820 --> 00:00:33,600
been widely used in security

9
00:00:31,740 --> 00:00:35,910
applications especially for detection

10
00:00:33,600 --> 00:00:38,730
for example we can use machinery in

11
00:00:35,910 --> 00:00:42,390
techniques to detect malware intrusion

12
00:00:38,730 --> 00:00:44,160
attack or span or fish and a general

13
00:00:42,390 --> 00:00:45,780
approach is that we start with the

14
00:00:44,160 --> 00:00:50,010
connection of training data which

15
00:00:45,780 --> 00:00:53,489
contains entities and the associate

16
00:00:50,010 --> 00:00:56,400
labels and we then carefully design a

17
00:00:53,489 --> 00:00:58,169
future work a feature extractor which

18
00:00:56,400 --> 00:01:00,930
can extract a numerical numerical

19
00:00:58,170 --> 00:01:03,510
features from the entities into features

20
00:01:00,930 --> 00:01:05,640
and those features actors together with

21
00:01:03,510 --> 00:01:08,100
the labels will be used a bio machinery

22
00:01:05,640 --> 00:01:09,750
aggregate to get a classifier and this

23
00:01:08,100 --> 00:01:12,780
classifier can be further used that to

24
00:01:09,750 --> 00:01:14,479
predict previously unseen entities at

25
00:01:12,780 --> 00:01:17,310
the test of time

26
00:01:14,479 --> 00:01:20,070
although machinery has has a lot of

27
00:01:17,310 --> 00:01:21,840
success in security applications recent

28
00:01:20,070 --> 00:01:24,779
research shows that they are actually

29
00:01:21,840 --> 00:01:26,100
vulnerable to evasion attack invasion

30
00:01:24,780 --> 00:01:29,280
tech happened the test time

31
00:01:26,100 --> 00:01:32,610
that is the attacker can manipulate an

32
00:01:29,280 --> 00:01:36,050
entity so that the resulting feature

33
00:01:32,610 --> 00:01:38,700
vector will be misclassified as benign

34
00:01:36,050 --> 00:01:40,500
we call these attacks realizable tax

35
00:01:38,700 --> 00:01:42,690
because they are realizable in actual

36
00:01:40,500 --> 00:01:45,030
entities for example the adversary

37
00:01:42,690 --> 00:01:48,539
examples produced by realizable tax can

38
00:01:45,030 --> 00:01:51,200
be real-world valid PDF file or the

39
00:01:48,540 --> 00:01:54,150
source code so source code of malware

40
00:01:51,200 --> 00:01:57,420
one of the most important aspects of

41
00:01:54,150 --> 00:02:00,510
realizable attacks is that those attacks

42
00:01:57,420 --> 00:02:04,140
work on entities before being translated

43
00:02:00,510 --> 00:02:07,459
into into features another important

44
00:02:04,140 --> 00:02:11,910
aspect about realizable attacks is that

45
00:02:07,459 --> 00:02:15,239
after being modified the attack should

46
00:02:11,910 --> 00:02:16,950
be verified with its effectiveness that

47
00:02:15,239 --> 00:02:19,620
is review the sandbox or other

48
00:02:16,950 --> 00:02:22,290
approaches to make sure that the

49
00:02:19,620 --> 00:02:25,500
adversary example still preserve the

50
00:02:22,290 --> 00:02:27,120
malicious functionality and sometimes

51
00:02:25,500 --> 00:02:28,770
realizable text is difficult to

52
00:02:27,120 --> 00:02:29,790
implement because we need the domain

53
00:02:28,770 --> 00:02:33,540
knowledge and the

54
00:02:29,790 --> 00:02:37,560
a lot of engineering work to implement

55
00:02:33,540 --> 00:02:40,429
them so this can be even be very harder

56
00:02:37,560 --> 00:02:43,680
and can be individual research project

57
00:02:40,430 --> 00:02:46,739
so since realizable taxi is very

58
00:02:43,680 --> 00:02:48,150
difficult to implement so it's natural

59
00:02:46,739 --> 00:02:51,720
to consider whether there are other ways

60
00:02:48,150 --> 00:02:54,599
to attack perhaps in a more abstract way

61
00:02:51,720 --> 00:02:57,150
or more simply more simply way so here

62
00:02:54,599 --> 00:03:00,390
is a future space attacks instead of

63
00:02:57,150 --> 00:03:04,049
working on entities the future space

64
00:03:00,390 --> 00:03:07,260
attacks work on features that is the

65
00:03:04,049 --> 00:03:10,349
attackers start with a feature vector of

66
00:03:07,260 --> 00:03:12,780
malicious instance and then directly

67
00:03:10,349 --> 00:03:15,480
modify those features and the turn

68
00:03:12,780 --> 00:03:17,879
generally the feature space attacks can

69
00:03:15,480 --> 00:03:19,858
be formulated as optimization problems

70
00:03:17,879 --> 00:03:22,920
where the feature of manuals can be

71
00:03:19,859 --> 00:03:25,260
arbitrarily modified please note that

72
00:03:22,920 --> 00:03:27,809
the feature space attacks is not always

73
00:03:25,260 --> 00:03:30,030
be realizable because when we solve an

74
00:03:27,810 --> 00:03:32,159
optimizing problem sometimes we ignore

75
00:03:30,030 --> 00:03:34,829
the feature in the interdependency

76
00:03:32,159 --> 00:03:37,230
between feature values so it's very

77
00:03:34,829 --> 00:03:39,419
difficult to evaluate the effectiveness

78
00:03:37,230 --> 00:03:42,388
of the other virtual example whether

79
00:03:39,419 --> 00:03:44,910
they preserve malicious functionality so

80
00:03:42,389 --> 00:03:48,030
to deal with this feature space attacks

81
00:03:44,910 --> 00:03:51,720
they use LP norm to measure the cost of

82
00:03:48,030 --> 00:03:54,750
modification and oftentimes the customer

83
00:03:51,720 --> 00:03:59,720
pays the cost of modification is bounded

84
00:03:54,750 --> 00:04:02,940
and as the feature space attack model is

85
00:03:59,720 --> 00:04:05,220
abstract and it is much easier to be

86
00:04:02,940 --> 00:04:08,579
analyzed compare the tools there are

87
00:04:05,220 --> 00:04:10,470
realizable counterpart actually most of

88
00:04:08,579 --> 00:04:12,750
the real robust machine learning

89
00:04:10,470 --> 00:04:15,569
techniques leverage feature space attack

90
00:04:12,750 --> 00:04:18,418
model for example those approaches using

91
00:04:15,569 --> 00:04:22,430
robust optimization at virtual training

92
00:04:18,418 --> 00:04:25,560
or even the approach you use game theory

93
00:04:22,430 --> 00:04:28,169
so this naturally raised a fundamental

94
00:04:25,560 --> 00:04:31,020
question which is at the very heart of

95
00:04:28,169 --> 00:04:33,389
our research is robust to machine

96
00:04:31,020 --> 00:04:36,090
learning really robust put it in another

97
00:04:33,389 --> 00:04:38,520
way suppose we have a robust machine

98
00:04:36,090 --> 00:04:41,609
learning against the future space attack

99
00:04:38,520 --> 00:04:43,639
model is it robust against to realize

100
00:04:41,610 --> 00:04:45,929
about attacks

101
00:04:43,639 --> 00:04:48,179
to answer this question were made

102
00:04:45,929 --> 00:04:50,429
several contributions our first

103
00:04:48,179 --> 00:04:53,179
contribution is a model validation in

104
00:04:50,429 --> 00:04:55,498
which we evaluate the efficacy of

105
00:04:53,179 --> 00:04:58,469
defensing using feature space attack

106
00:04:55,499 --> 00:05:01,619
model against the realizable attacks our

107
00:04:58,469 --> 00:05:03,299
experiments results show that robust

108
00:05:01,619 --> 00:05:06,029
machinery using feature space attack

109
00:05:03,299 --> 00:05:08,308
model may fail to provide adequate

110
00:05:06,029 --> 00:05:11,459
robustness against the realizable

111
00:05:08,309 --> 00:05:14,219
attacks our second contribution is model

112
00:05:11,459 --> 00:05:15,839
refinement in which we fix the features

113
00:05:14,219 --> 00:05:17,819
based attack models by using

114
00:05:15,839 --> 00:05:20,879
constructive features which will be

115
00:05:17,819 --> 00:05:23,579
detailed later our third contribution is

116
00:05:20,879 --> 00:05:26,550
generalize the robustness in which we

117
00:05:23,579 --> 00:05:28,739
explore the generalizability of defense

118
00:05:26,550 --> 00:05:32,309
when we use different kinds of a

119
00:05:28,739 --> 00:05:34,008
realizable attacks so now I would like

120
00:05:32,309 --> 00:05:39,389
to introduce our methodology and

121
00:05:34,009 --> 00:05:42,059
experiments we use a case study on PDF

122
00:05:39,389 --> 00:05:44,039
malware detection and which use PDF

123
00:05:42,059 --> 00:05:46,800
because PDF o files are highly

124
00:05:44,039 --> 00:05:49,739
structured and there have been a lot of

125
00:05:46,800 --> 00:05:51,959
existing work on this field for

126
00:05:49,739 --> 00:05:55,018
realizable attacks on PDF detectors and

127
00:05:51,959 --> 00:05:57,869
we choose the two most representative

128
00:05:55,019 --> 00:05:59,639
PDF detectors the first one is called

129
00:05:57,869 --> 00:06:01,889
counting the best detectors which use

130
00:05:59,639 --> 00:06:04,409
content information at the features for

131
00:06:01,889 --> 00:06:05,999
example the size of a PDF file or the

132
00:06:04,409 --> 00:06:08,879
number of pages or the number of

133
00:06:05,999 --> 00:06:11,069
keywords they use the other kinds of

134
00:06:08,879 --> 00:06:14,249
detectors are called structure based

135
00:06:11,069 --> 00:06:16,409
detectors in which they use information

136
00:06:14,249 --> 00:06:19,110
about the logical structure of PDF for

137
00:06:16,409 --> 00:06:22,979
example using the existence of some

138
00:06:19,110 --> 00:06:26,129
structural passes or PDF and to in

139
00:06:22,979 --> 00:06:29,248
venerate the robustness of a PDF malware

140
00:06:26,129 --> 00:06:31,829
detector or use invaded ml as the

141
00:06:29,249 --> 00:06:34,139
reliable attack we choose this because

142
00:06:31,829 --> 00:06:36,229
this one works posed for structure and

143
00:06:34,139 --> 00:06:40,050
accounting the base to classify and

144
00:06:36,229 --> 00:06:42,899
invade email can provide I can produce

145
00:06:40,050 --> 00:06:45,209
invasive a PDF file and by using

146
00:06:42,899 --> 00:06:48,029
genetical program programming of course

147
00:06:45,209 --> 00:06:50,159
the adverse examples they are verified

148
00:06:48,029 --> 00:06:53,519
by unison the Box about their malicious

149
00:06:50,159 --> 00:06:55,679
functionality and to invalidate the

150
00:06:53,519 --> 00:06:56,520
feature space attack model we use a

151
00:06:55,679 --> 00:06:58,559
formulation we

152
00:06:56,520 --> 00:07:01,919
formulate feature space attack model as

153
00:06:58,560 --> 00:07:04,080
a mounting objective optimization on the

154
00:07:01,919 --> 00:07:05,729
one hand we want to make sure that the

155
00:07:04,080 --> 00:07:08,550
modify the feature vector of the

156
00:07:05,729 --> 00:07:11,789
adversary' example can be predicted as

157
00:07:08,550 --> 00:07:13,800
benaiah as possible on the other hand we

158
00:07:11,789 --> 00:07:18,930
want to minimize the cost of function

159
00:07:13,800 --> 00:07:20,729
and to build a robust machinery we use a

160
00:07:18,930 --> 00:07:23,490
general defense approach which is called

161
00:07:20,729 --> 00:07:25,440
intuitive retraining the basic idea

162
00:07:23,490 --> 00:07:28,680
behind the iterative retraining is that

163
00:07:25,440 --> 00:07:30,750
we can intuitively use an attack to

164
00:07:28,680 --> 00:07:32,520
produce adverse for examples and then

165
00:07:30,750 --> 00:07:34,500
add in those adversary' examples back

166
00:07:32,520 --> 00:07:37,440
into the training data and then we train

167
00:07:34,500 --> 00:07:39,120
the classifier so iterative retraining

168
00:07:37,440 --> 00:07:41,250
is very general we can use both

169
00:07:39,120 --> 00:07:45,720
realizable attack or future spaced

170
00:07:41,250 --> 00:07:50,220
attacks to come by it with iterative

171
00:07:45,720 --> 00:07:52,740
retraining and based on the attacks and

172
00:07:50,220 --> 00:07:55,440
defense Messrs mentioned just a now

173
00:07:52,740 --> 00:07:58,500
we'll use them into our model validation

174
00:07:55,440 --> 00:08:01,440
so here is the framework we use three

175
00:07:58,500 --> 00:08:03,810
steps to validate the efficacy of future

176
00:08:01,440 --> 00:08:05,639
space models when we'll use that to

177
00:08:03,810 --> 00:08:08,849
defend against two realizable text

178
00:08:05,639 --> 00:08:11,130
our first step is that we swing an

179
00:08:08,849 --> 00:08:15,389
initial classifier or target the

180
00:08:11,130 --> 00:08:18,030
classifier on clean data and at this at

181
00:08:15,389 --> 00:08:20,430
the second step we retrain the targeted

182
00:08:18,030 --> 00:08:23,369
classifier by using embedded ml our

183
00:08:20,430 --> 00:08:26,759
primary realizable text and then we

184
00:08:23,370 --> 00:08:29,699
evaluate it with in ml as well so this

185
00:08:26,759 --> 00:08:31,919
sounds a little bit self-evident because

186
00:08:29,699 --> 00:08:34,829
we use the same attack to retrain a

187
00:08:31,919 --> 00:08:37,620
classifier and for evaluation we use

188
00:08:34,828 --> 00:08:40,289
this because we want to have a robust

189
00:08:37,620 --> 00:08:42,719
debate line in which which shows the

190
00:08:40,289 --> 00:08:44,970
upper bound of the defense so if it is

191
00:08:42,719 --> 00:08:47,399
impossible to use in Val the ml to

192
00:08:44,970 --> 00:08:50,130
defend in where the ml then the failure

193
00:08:47,399 --> 00:08:51,839
of other defense approaches is not due

194
00:08:50,130 --> 00:08:54,750
to the difficulty of the problem

195
00:08:51,839 --> 00:08:57,120
so in a certain step we retrain a

196
00:08:54,750 --> 00:09:00,270
classifier by using future space attack

197
00:08:57,120 --> 00:09:03,240
models and we want to see if there is

198
00:09:00,270 --> 00:09:05,370
any performance gap between the two to

199
00:09:03,240 --> 00:09:07,380
retrain the classifier why is retraining

200
00:09:05,370 --> 00:09:09,570
by realizable text and the other is

201
00:09:07,380 --> 00:09:10,110
retrained by the feature space attack

202
00:09:09,570 --> 00:09:13,230
model

203
00:09:10,110 --> 00:09:14,220
we invented those classifiers um both at

204
00:09:13,230 --> 00:09:16,740
the were store data and the now

205
00:09:14,220 --> 00:09:19,110
anniversary data from other virtual data

206
00:09:16,740 --> 00:09:22,080
or user robustness as a metric which

207
00:09:19,110 --> 00:09:23,970
which can be obtained by using one - the

208
00:09:22,080 --> 00:09:27,000
success rate of in Veda email our

209
00:09:23,970 --> 00:09:30,050
primary realizable attack and unclean

210
00:09:27,000 --> 00:09:34,200
data will use racket curve for Emanuel

211
00:09:30,050 --> 00:09:37,709
and today we'll use our model validation

212
00:09:34,200 --> 00:09:40,140
framework around the content based and

213
00:09:37,710 --> 00:09:41,730
the structure based classifiers so here

214
00:09:40,140 --> 00:09:43,860
is a relative without encountering the

215
00:09:41,730 --> 00:09:45,390
Bayes classifier so the left of figure

216
00:09:43,860 --> 00:09:48,300
shows their performance on

217
00:09:45,390 --> 00:09:50,910
adversary' data which was evaluated by

218
00:09:48,300 --> 00:09:53,130
using UML and the right figure shows

219
00:09:50,910 --> 00:09:55,620
that the performance in non other words

220
00:09:53,130 --> 00:09:58,560
or data and the figure shows that

221
00:09:55,620 --> 00:09:59,760
without any defense the content account

222
00:09:58,560 --> 00:10:01,739
in the basic classifier is very

223
00:09:59,760 --> 00:10:04,530
vulnerable to invade an L which shows

224
00:10:01,740 --> 00:10:07,710
only 2% of invasion robustness however

225
00:10:04,530 --> 00:10:09,480
when we use either invade ml or feature

226
00:10:07,710 --> 00:10:11,340
space attack model to retrain the

227
00:10:09,480 --> 00:10:14,970
classifier we can get almost a hundred

228
00:10:11,340 --> 00:10:17,490
percent of effectiveness that's using

229
00:10:14,970 --> 00:10:20,910
feature space attack model to get a

230
00:10:17,490 --> 00:10:22,320
robust ml it works however I'm not

231
00:10:20,910 --> 00:10:25,500
adverse to data we can see a

232
00:10:22,320 --> 00:10:27,750
non-negligible gap because that which

233
00:10:25,500 --> 00:10:30,570
means if we use feature space attack

234
00:10:27,750 --> 00:10:34,680
model to retrain classifier a lot of

235
00:10:30,570 --> 00:10:36,750
B'nai pdfs are classified as malicious

236
00:10:34,680 --> 00:10:41,099
so which means that the false positive

237
00:10:36,750 --> 00:10:44,700
rate is increased and here is a result

238
00:10:41,100 --> 00:10:46,830
for structure based detectors and just

239
00:10:44,700 --> 00:10:49,080
like the content-based detectors without

240
00:10:46,830 --> 00:10:50,640
any defense the target classifier is

241
00:10:49,080 --> 00:10:53,190
Myriam honorable showing only two

242
00:10:50,640 --> 00:10:56,490
percent of evasion robustness and when

243
00:10:53,190 --> 00:10:59,370
we use evade ml - defense and the

244
00:10:56,490 --> 00:11:03,780
robustness to invade the ml is not about

245
00:10:59,370 --> 00:11:06,690
98 98 percent and however if we retrain

246
00:11:03,780 --> 00:11:10,170
or if we defense by using feature space

247
00:11:06,690 --> 00:11:12,900
attack models the invasion robustness

248
00:11:10,170 --> 00:11:15,599
decrease from 98 percent to 70 percent

249
00:11:12,900 --> 00:11:18,300
and also we observe there is a

250
00:11:15,600 --> 00:11:20,400
degradation on clean data that that

251
00:11:18,300 --> 00:11:23,280
means robust machinery using feature

252
00:11:20,400 --> 00:11:23,970
space models is not perfect although it

253
00:11:23,280 --> 00:11:25,919
can

254
00:11:23,970 --> 00:11:28,349
the robustness compared to the targeted

255
00:11:25,919 --> 00:11:30,749
classifier however we see Santi

256
00:11:28,349 --> 00:11:33,989
gradation and also the robustness is not

257
00:11:30,749 --> 00:11:36,929
very adequate so here the question can

258
00:11:33,989 --> 00:11:41,399
we fix the feature space attack models

259
00:11:36,929 --> 00:11:44,819
by using some minimal modification our

260
00:11:41,399 --> 00:11:47,220
answer to this question is yes and we

261
00:11:44,819 --> 00:11:49,498
use conserve the features conserve the

262
00:11:47,220 --> 00:11:51,689
features are a subset of features which

263
00:11:49,499 --> 00:11:54,419
compromise the malicious punctuality if

264
00:11:51,689 --> 00:11:56,399
they are removed so there are two types

265
00:11:54,419 --> 00:11:58,649
of comforts of the features the first

266
00:11:56,399 --> 00:12:01,559
type is that if we move remove those

267
00:11:58,649 --> 00:12:04,229
features then the malicious codes or

268
00:12:01,559 --> 00:12:06,089
payload will be removed as well another

269
00:12:04,229 --> 00:12:08,849
type of cause of the features are those

270
00:12:06,089 --> 00:12:10,199
which will break the PDF if they are

271
00:12:08,849 --> 00:12:13,379
removed for example there are some

272
00:12:10,199 --> 00:12:15,598
features in the PDF if we remove the the

273
00:12:13,379 --> 00:12:18,299
PDF cannot be opened if it cannot be

274
00:12:15,599 --> 00:12:20,519
opened the malicious payload will not be

275
00:12:18,299 --> 00:12:22,889
executed so we have two types of cons of

276
00:12:20,519 --> 00:12:25,949
the features and we use a systematic way

277
00:12:22,889 --> 00:12:28,499
to identify these features by

278
00:12:25,949 --> 00:12:31,919
manipulating each object in a PDF file

279
00:12:28,499 --> 00:12:34,019
and in venerating the corresponding

280
00:12:31,919 --> 00:12:36,419
maliciousness with second sex

281
00:12:34,019 --> 00:12:38,369
successfully identified four to eight

282
00:12:36,419 --> 00:12:41,309
conserve the features for each of the

283
00:12:38,369 --> 00:12:43,829
detector reuse and after identification

284
00:12:41,309 --> 00:12:46,618
of the future of the council of the

285
00:12:43,829 --> 00:12:48,719
features were used in to modify the

286
00:12:46,619 --> 00:12:50,369
feature space attack models actually

287
00:12:48,720 --> 00:12:52,799
every since then the same will use

288
00:12:50,369 --> 00:12:54,809
iterative retraining and the only

289
00:12:52,799 --> 00:12:56,369
difference is that the value of the

290
00:12:54,809 --> 00:12:58,618
console of the features should be

291
00:12:56,369 --> 00:13:02,849
invariant or should be preserved in

292
00:12:58,619 --> 00:13:06,479
invasive instances so after using the

293
00:13:02,849 --> 00:13:08,159
cause of the features to anchor the

294
00:13:06,479 --> 00:13:11,069
feature space attack model here is a

295
00:13:08,159 --> 00:13:13,349
experimental result and first for the

296
00:13:11,069 --> 00:13:16,529
content-based attack model of container

297
00:13:13,349 --> 00:13:18,749
based detectors and we found that when

298
00:13:16,529 --> 00:13:20,789
we use feature space attack model

299
00:13:18,749 --> 00:13:23,789
anchored with cause of the features it

300
00:13:20,789 --> 00:13:26,039
has comparable with performance add

301
00:13:23,789 --> 00:13:29,879
virtual data compared to other baselines

302
00:13:26,039 --> 00:13:33,559
and also we see a significant

303
00:13:29,879 --> 00:13:37,540
improvement on the null adversary' data

304
00:13:33,559 --> 00:13:39,100
so it so the color of the features came

305
00:13:37,540 --> 00:13:42,209
the performance of future space attack

306
00:13:39,100 --> 00:13:45,610
model and the force structure based

307
00:13:42,209 --> 00:13:48,069
detectors we found that after being

308
00:13:45,610 --> 00:13:51,690
anchored with some of the features the

309
00:13:48,070 --> 00:13:54,160
robustness to the realizable tax of of

310
00:13:51,690 --> 00:13:58,480
robust email using feature space attack

311
00:13:54,160 --> 00:14:01,719
model can be improved from 70% to 98%

312
00:13:58,480 --> 00:14:04,110
and also we can see a significant

313
00:14:01,720 --> 00:14:07,959
improvement on the now adversary' data

314
00:14:04,110 --> 00:14:11,139
so therefore the gap between the

315
00:14:07,959 --> 00:14:13,839
realizable attack and the future space

316
00:14:11,139 --> 00:14:17,139
attack can be bridged by using cons of

317
00:14:13,839 --> 00:14:20,170
the features so our search contribution

318
00:14:17,139 --> 00:14:22,480
is generalized robustness so for our

319
00:14:20,170 --> 00:14:25,410
evaluation and the baseline defense

320
00:14:22,480 --> 00:14:28,810
using invade ml as our primary in

321
00:14:25,410 --> 00:14:31,120
realizable attacks so we have gained or

322
00:14:28,810 --> 00:14:32,619
have obtained two kinds of robust

323
00:14:31,120 --> 00:14:35,290
machine learning against the dis attack

324
00:14:32,620 --> 00:14:37,720
we can easily retrieve within read email

325
00:14:35,290 --> 00:14:40,389
and this classifier is robust with the

326
00:14:37,720 --> 00:14:43,360
ml is itself and also we can retrain

327
00:14:40,389 --> 00:14:45,459
classifier by using concept of features

328
00:14:43,360 --> 00:14:47,819
try unit features based attacks with

329
00:14:45,459 --> 00:14:50,319
conserve the features and so those two

330
00:14:47,819 --> 00:14:53,529
classifiers are comparable but which is

331
00:14:50,319 --> 00:14:56,979
better so we should we should invalid

332
00:14:53,529 --> 00:14:59,380
with other realizable attacks so we used

333
00:14:56,980 --> 00:15:01,360
a bunch of other realizable tags to

334
00:14:59,380 --> 00:15:03,550
explore the generalized robustness the

335
00:15:01,360 --> 00:15:06,490
first we used is miracle miracle plus

336
00:15:03,550 --> 00:15:09,639
which is an improvement of memory Korea

337
00:15:06,490 --> 00:15:13,510
attack and we found that if we defense

338
00:15:09,639 --> 00:15:15,639
with invade ml hour and one of the real

339
00:15:13,510 --> 00:15:17,740
asthma attacks it may be vulnerable to

340
00:15:15,639 --> 00:15:20,589
other kinds of realize about hack that

341
00:15:17,740 --> 00:15:22,689
is memory loss however if we it defends

342
00:15:20,589 --> 00:15:25,420
with feature space model it is still

343
00:15:22,689 --> 00:15:27,760
remained robustness to memory crypt plus

344
00:15:25,420 --> 00:15:30,370
we're also in managed with the reverse

345
00:15:27,760 --> 00:15:33,010
mimic array which is a reliable tack

346
00:15:30,370 --> 00:15:35,170
that requires zero knowledge of toggle

347
00:15:33,010 --> 00:15:38,079
clasp our that's it about work post for

348
00:15:35,170 --> 00:15:41,290
content and structure based classifiers

349
00:15:38,079 --> 00:15:44,769
and again we we observe consistent

350
00:15:41,290 --> 00:15:47,680
results with those using mimicry class

351
00:15:44,769 --> 00:15:50,199
that is if we retrieve a classifier who

352
00:15:47,680 --> 00:15:51,459
is invaded ml it may fail to be robust

353
00:15:50,199 --> 00:15:53,740
to other realize what

354
00:15:51,459 --> 00:15:56,138
tax however a free defense would feature

355
00:15:53,740 --> 00:15:59,889
Swiss model anchored with concept of

356
00:15:56,139 --> 00:16:02,709
features it is still robust and finally

357
00:15:59,889 --> 00:16:05,350
we evaluates the generalized robustness

358
00:16:02,709 --> 00:16:07,779
with a custom attack this attack

359
00:16:05,350 --> 00:16:09,869
exploits a features extraction bug of

360
00:16:07,779 --> 00:16:13,389
the content based classifiers and

361
00:16:09,869 --> 00:16:15,249
particularly we replace some entries of

362
00:16:13,389 --> 00:16:18,759
the PDF with their hex present a

363
00:16:15,249 --> 00:16:21,850
representation and our relapse shows

364
00:16:18,759 --> 00:16:23,889
that this attack can defeat the

365
00:16:21,850 --> 00:16:26,800
classifier we trained by beta ml and

366
00:16:23,889 --> 00:16:29,559
also for the binary lies the content

367
00:16:26,800 --> 00:16:31,959
based classifier and we train a

368
00:16:29,559 --> 00:16:33,790
classifier just to using the cons of the

369
00:16:31,959 --> 00:16:35,679
features we found that this classifier

370
00:16:33,790 --> 00:16:41,319
can be defeated by the customer tech as

371
00:16:35,679 --> 00:16:43,779
well thus using console use so the cost

372
00:16:41,319 --> 00:16:45,399
of the features can be defeated but the

373
00:16:43,779 --> 00:16:48,490
combination of a future space attack

374
00:16:45,399 --> 00:16:52,360
model together with consultant features

375
00:16:48,490 --> 00:16:55,389
remains still robust so finally I would

376
00:16:52,360 --> 00:16:57,850
like to summarize my talk shortly so

377
00:16:55,389 --> 00:17:00,189
first one is that robust machine

378
00:16:57,850 --> 00:17:02,889
learning methods which you use feature

379
00:17:00,189 --> 00:17:06,369
space attack model may fail to be

380
00:17:02,889 --> 00:17:08,289
robusta to reliable text secondly we can

381
00:17:06,369 --> 00:17:10,418
fix the future space attack model by

382
00:17:08,289 --> 00:17:12,730
using concert of the features and third

383
00:17:10,419 --> 00:17:16,329
robust machinery using feature space

384
00:17:12,730 --> 00:17:19,260
attack model together with kinds of the

385
00:17:16,329 --> 00:17:22,928
features show more general robustness

386
00:17:19,260 --> 00:17:25,510
then the measures which use a particular

387
00:17:22,929 --> 00:17:28,329
realizable attack I think that's all

388
00:17:25,510 --> 00:17:29,390
about it thanks any questions thank you

389
00:17:28,329 --> 00:17:32,899
thank you

390
00:17:29,390 --> 00:17:35,460
[Applause]

391
00:17:32,900 --> 00:17:36,330
great we have time for a question or two

392
00:17:35,460 --> 00:17:40,500
oh good

393
00:17:36,330 --> 00:17:42,899
please okay while you're thinking of

394
00:17:40,500 --> 00:17:46,170
your questions I'll ask a question Leon

395
00:17:42,900 --> 00:17:47,280
yeah so you have this no time right here

396
00:17:46,170 --> 00:17:49,290
okay

397
00:17:47,280 --> 00:17:51,990
you ask this you have this notion of

398
00:17:49,290 --> 00:17:53,730
conserved features you know which seems

399
00:17:51,990 --> 00:17:55,550
kind of binary so you say basically

400
00:17:53,730 --> 00:17:57,360
either it affects the malicious

401
00:17:55,550 --> 00:18:00,330
functionality or it doesn't

402
00:17:57,360 --> 00:18:01,889
yes but I could think of detection

403
00:18:00,330 --> 00:18:04,500
frameworks where there's a feature that

404
00:18:01,890 --> 00:18:06,510
you know it's it's not totally binary

405
00:18:04,500 --> 00:18:09,570
like in the case of you know spam or

406
00:18:06,510 --> 00:18:10,560
fishing or you know and so forth often

407
00:18:09,570 --> 00:18:12,270
it's like well you got to change your

408
00:18:10,560 --> 00:18:14,310
ISP or you need to come from a different

409
00:18:12,270 --> 00:18:16,710
address space or so they're they're

410
00:18:14,310 --> 00:18:19,050
scenarios where there are features that

411
00:18:16,710 --> 00:18:21,030
aren't quite conserved but maybe they're

412
00:18:19,050 --> 00:18:23,370
they're a little bit more rigid like

413
00:18:21,030 --> 00:18:24,810
does your model you know take into

414
00:18:23,370 --> 00:18:27,389
account that a conserved feature might

415
00:18:24,810 --> 00:18:31,169
not be just black or white yes or no but

416
00:18:27,390 --> 00:18:32,730
maybe sort of conserved yes that's a

417
00:18:31,170 --> 00:18:34,740
very good question so actually in our

418
00:18:32,730 --> 00:18:36,840
case study we just identified comes up

419
00:18:34,740 --> 00:18:39,030
with the features for the binary for the

420
00:18:36,840 --> 00:18:40,830
classifier using binary features so it

421
00:18:39,030 --> 00:18:42,960
is an open problem whether for the

422
00:18:40,830 --> 00:18:45,929
detectors using real random features

423
00:18:42,960 --> 00:18:51,060
because we are not very sure so how to

424
00:18:45,930 --> 00:18:53,550
identify of concert of the features for

425
00:18:51,060 --> 00:18:56,810
rio grande new features because the

426
00:18:53,550 --> 00:18:59,940
attacker can just do some minimal

427
00:18:56,810 --> 00:19:02,580
modification who is in some so range

428
00:18:59,940 --> 00:19:03,860
right and there so dissing diva is open

429
00:19:02,580 --> 00:19:06,860
problem our paper

430
00:19:03,860 --> 00:19:06,860
fantastic

431
00:19:13,559 --> 00:19:17,629
I just have a small question too

432
00:19:17,940 --> 00:19:24,270
that's fine sir so just a have a

433
00:19:21,460 --> 00:19:28,270
question to make sure I understand your

434
00:19:24,270 --> 00:19:30,940
methodology sure so pick up a conserving

435
00:19:28,270 --> 00:19:34,330
feature you basically fix it

436
00:19:30,940 --> 00:19:36,130
yes I speaks the manual bit okay so

437
00:19:34,330 --> 00:19:39,370
after the perturbation it cannot be

438
00:19:36,130 --> 00:19:41,950
changed that's the constraint yes okay

439
00:19:39,370 --> 00:19:44,260
okay I see thank you yes so so that

440
00:19:41,950 --> 00:19:46,990
means the future value is conserved or

441
00:19:44,260 --> 00:19:49,150
preserved during because in future space

442
00:19:46,990 --> 00:19:50,860
an attack Amado actually we're stopping

443
00:19:49,150 --> 00:19:52,809
an optimization problem right so we're

444
00:19:50,860 --> 00:19:55,270
making hard constraints on the onliest

445
00:19:52,809 --> 00:19:56,830
optimization that is the manual of the

446
00:19:55,270 --> 00:20:01,179
console the features should not be

447
00:19:56,830 --> 00:20:06,428
changed so basically you are shrinking

448
00:20:01,179 --> 00:20:08,740
the perturbation per turbo space yes and

449
00:20:06,429 --> 00:20:11,500
that's part of the reason that the

450
00:20:08,740 --> 00:20:15,059
robinus is kind of increased important

451
00:20:11,500 --> 00:20:18,100
so that's one of the reasons that the

452
00:20:15,059 --> 00:20:22,090
the robinus is increased because the

453
00:20:18,100 --> 00:20:23,830
perturbation space is smaller yes

454
00:20:22,090 --> 00:20:26,559
the participation is smaller doesn't

455
00:20:23,830 --> 00:20:29,740
mean it doesn't mean that the attack is

456
00:20:26,559 --> 00:20:32,740
weaker because as we mentioned that the

457
00:20:29,740 --> 00:20:34,780
feature special attack model it has a it

458
00:20:32,740 --> 00:20:36,480
has a cap between there is gap between

459
00:20:34,780 --> 00:20:40,110
future special attack model and

460
00:20:36,480 --> 00:20:42,940
realizable attacks our intuition is that

461
00:20:40,110 --> 00:20:45,370
future special attack model anchored

462
00:20:42,940 --> 00:20:50,679
with conserve the features make it more

463
00:20:45,370 --> 00:20:53,080
similar to realizable attacks okay this

464
00:20:50,679 --> 00:20:55,030
is an this is our circular problem with

465
00:20:53,080 --> 00:20:57,250
whether the attack mode is strong or a

466
00:20:55,030 --> 00:21:00,670
weak this is a problem is whether it's a

467
00:20:57,250 --> 00:21:04,870
similar to realize about hex okay okay

468
00:21:00,670 --> 00:21:06,880
thank you all right let's let's thank

469
00:21:04,870 --> 00:21:07,219
Leon for a great talk thank you thank

470
00:21:06,880 --> 00:21:10,700
you

471
00:21:07,220 --> 00:21:10,700
[Applause]

