1
00:00:10,599 --> 00:00:15,280
hi everyone I'm itchin this is a joint

2
00:00:13,599 --> 00:00:17,948
work of Indiana University Bloomington

3
00:00:15,280 --> 00:00:23,490
and institute of information engineering

4
00:00:17,949 --> 00:00:27,130
Chinese Academy of Sciences in general

5
00:00:23,490 --> 00:00:30,189
code analysis is one of the most widely

6
00:00:27,130 --> 00:00:32,890
used to discover software

7
00:00:30,189 --> 00:00:35,620
vulnerabilities but it is hard to find

8
00:00:32,890 --> 00:00:38,559
the logical manner abilities because a

9
00:00:35,620 --> 00:00:42,239
deep understanding of the systems logic

10
00:00:38,559 --> 00:00:44,620
is a prerequisite so at a code level

11
00:00:42,239 --> 00:00:48,820
absolutely it is too difficult to

12
00:00:44,620 --> 00:00:51,399
recover however a systems documentation

13
00:00:48,820 --> 00:00:54,219
is a great source some may already

14
00:00:51,399 --> 00:00:56,859
provide accounts of how a system is

15
00:00:54,219 --> 00:01:00,520
designed or how should be used at you

16
00:00:56,859 --> 00:01:02,710
remain a secure so in our work we wanna

17
00:01:00,520 --> 00:01:05,979
explore the full value of the

18
00:01:02,710 --> 00:01:08,830
documentation we wanna study whether the

19
00:01:05,979 --> 00:01:11,500
documentation already carry abundant

20
00:01:08,830 --> 00:01:12,220
information to help identify a logical

21
00:01:11,500 --> 00:01:15,640
venerability

22
00:01:12,220 --> 00:01:17,798
even without touching any code and in

23
00:01:15,640 --> 00:01:20,740
previous time discovering logical

24
00:01:17,799 --> 00:01:24,040
vanellope a vulnerability cost a lot of

25
00:01:20,740 --> 00:01:27,009
manual work so in our work we also wanna

26
00:01:24,040 --> 00:01:32,470
explore the direction to automate

27
00:01:27,009 --> 00:01:34,119
rediscover logic venerability our first

28
00:01:32,470 --> 00:01:36,939
step has been made under payment

29
00:01:34,119 --> 00:01:38,799
syndication service it encapsulates the

30
00:01:36,939 --> 00:01:41,529
various third-party payments and

31
00:01:38,799 --> 00:01:44,049
simplify the merchant develops workload

32
00:01:41,530 --> 00:01:48,399
as locator how the payment syndication

33
00:01:44,049 --> 00:01:50,890
works this is a comment impairment

34
00:01:48,399 --> 00:01:53,280
process when a buyer is going to open

35
00:01:50,890 --> 00:01:56,649
order at first

36
00:01:53,280 --> 00:01:59,079
the merchant will generate a third party

37
00:01:56,649 --> 00:02:01,840
payment credential to him wholly no

38
00:01:59,079 --> 00:02:04,539
credential the buyer has the order to a

39
00:02:01,840 --> 00:02:06,969
third party payment and then when he

40
00:02:04,540 --> 00:02:08,829
finishes up a the third party payment

41
00:02:06,969 --> 00:02:11,680
server will notify the merchant a

42
00:02:08,829 --> 00:02:13,750
payment result and to keep the payment

43
00:02:11,680 --> 00:02:15,880
process that you in a third party

44
00:02:13,750 --> 00:02:18,489
payments documentation there are some

45
00:02:15,880 --> 00:02:21,430
security requirements they ask merchant

46
00:02:18,489 --> 00:02:23,030
developers to do some security check at

47
00:02:21,430 --> 00:02:27,320
a specific

48
00:02:23,030 --> 00:02:30,290
status in a payment process such as

49
00:02:27,320 --> 00:02:32,540
people in its guidance it says when the

50
00:02:30,290 --> 00:02:35,179
merchant developers receives a

51
00:02:32,540 --> 00:02:37,489
notification message they must check

52
00:02:35,180 --> 00:02:41,240
whether the payment currency is a

53
00:02:37,490 --> 00:02:44,360
correct currency for the item if they do

54
00:02:41,240 --> 00:02:48,709
not if the merchant do not check it the

55
00:02:44,360 --> 00:02:51,700
adversary may pay what may pay a shopper

56
00:02:48,709 --> 00:02:55,430
product at him

57
00:02:51,700 --> 00:02:59,329
a pitcher or a lower valuable currency

58
00:02:55,430 --> 00:03:04,880
such as using such as using a Chinese

59
00:02:59,330 --> 00:03:07,550
RMB instead of other US dollars so to

60
00:03:04,880 --> 00:03:10,340
simplify the workload of the merchant

61
00:03:07,550 --> 00:03:12,709
developers thus imitation placing your

62
00:03:10,340 --> 00:03:14,660
party involved in a payment process to

63
00:03:12,709 --> 00:03:17,300
help the merchants to comply with the

64
00:03:14,660 --> 00:03:19,790
third-party payments for example instead

65
00:03:17,300 --> 00:03:22,580
of preparing a third-party payment or

66
00:03:19,790 --> 00:03:25,459
credential by the merchant the sync

67
00:03:22,580 --> 00:03:27,920
dictator replaces the merchant to do so

68
00:03:25,459 --> 00:03:30,380
or to help the merchant analyze

69
00:03:27,920 --> 00:03:32,929
different a structural notification for

70
00:03:30,380 --> 00:03:35,269
another pod payment the syndication is

71
00:03:32,930 --> 00:03:38,360
cool approaching payment server to send

72
00:03:35,269 --> 00:03:41,360
a love vacation to him directly and then

73
00:03:38,360 --> 00:03:44,600
after he interprets it he restructures a

74
00:03:41,360 --> 00:03:47,180
notification in a uniform and note

75
00:03:44,600 --> 00:03:50,269
feather merchant eventually and for the

76
00:03:47,180 --> 00:03:52,940
previous security requirement naturally

77
00:03:50,269 --> 00:03:55,579
when the syndication encapsulate the

78
00:03:52,940 --> 00:03:58,130
third-party payment and helps merchants

79
00:03:55,579 --> 00:04:02,140
to do their work of course they should

80
00:03:58,130 --> 00:04:05,470
be still fulfill right either by the

81
00:04:02,140 --> 00:04:08,929
merchant or by the syndicator

82
00:04:05,470 --> 00:04:11,600
but if both of them have no way to

83
00:04:08,930 --> 00:04:14,239
achieve the security requirements in the

84
00:04:11,600 --> 00:04:16,159
new payment process we think this would

85
00:04:14,239 --> 00:04:20,390
introduce the design neurologic

86
00:04:16,160 --> 00:04:22,729
variability in a payment syndication for

87
00:04:20,390 --> 00:04:26,120
example for the security requirement of

88
00:04:22,729 --> 00:04:29,750
the paper if in in a new payment process

89
00:04:26,120 --> 00:04:31,820
if both of the merchants indicator don't

90
00:04:29,750 --> 00:04:34,130
have the visibility of the security

91
00:04:31,820 --> 00:04:35,000
requirements or related data for

92
00:04:34,130 --> 00:04:38,360
instance the

93
00:04:35,000 --> 00:04:42,320
syndication don't another grant chose to

94
00:04:38,360 --> 00:04:45,830
check and the merchant doesn't receive

95
00:04:42,320 --> 00:04:48,290
the currency from the notification then

96
00:04:45,830 --> 00:04:51,380
there is no one else can fulfill the

97
00:04:48,290 --> 00:04:53,870
security requirement in attackers can

98
00:04:51,380 --> 00:04:57,200
shop the product at an obituary lower

99
00:04:53,870 --> 00:04:59,690
valuable currency like just mentioned

100
00:04:57,200 --> 00:05:03,349
her using Chinese RB instead of the US

101
00:04:59,690 --> 00:05:08,090
dollars so here are the information we

102
00:05:03,350 --> 00:05:10,820
just mentioned already is distributed in

103
00:05:08,090 --> 00:05:13,460
the payments indications guidance for

104
00:05:10,820 --> 00:05:15,200
example at the screenshots from the real

105
00:05:13,460 --> 00:05:18,710
world syndications development

106
00:05:15,200 --> 00:05:20,860
documentation it uses a diagram and test

107
00:05:18,710 --> 00:05:23,870
the description to describe each

108
00:05:20,860 --> 00:05:27,110
transmissions in us in syndications

109
00:05:23,870 --> 00:05:29,450
payment process for example here's a

110
00:05:27,110 --> 00:05:32,000
sentence syndication will send up

111
00:05:29,450 --> 00:05:34,190
payment result to a user server it

112
00:05:32,000 --> 00:05:36,350
exactly describes the notification

113
00:05:34,190 --> 00:05:38,510
transition from a syndication to a

114
00:05:36,350 --> 00:05:42,200
merchant as highlighting the left figure

115
00:05:38,510 --> 00:05:43,940
and in the implementer interface

116
00:05:42,200 --> 00:05:46,250
screenshot friendless indications

117
00:05:43,940 --> 00:05:48,800
documentation it explains every

118
00:05:46,250 --> 00:05:50,780
parameters the merchants were received

119
00:05:48,800 --> 00:05:53,810
in a notification from the syndication

120
00:05:50,780 --> 00:05:57,679
but after scanning them we find there is

121
00:05:53,810 --> 00:06:00,080
no current currency parameter in it that

122
00:05:57,680 --> 00:06:02,450
means the merchant doesn't receive the

123
00:06:00,080 --> 00:06:06,289
payment currency and so he can't achieve

124
00:06:02,450 --> 00:06:09,469
the security requirement in in a payment

125
00:06:06,290 --> 00:06:12,320
process a syndication Delta receive the

126
00:06:09,470 --> 00:06:16,250
ground shows too so it can't achieve the

127
00:06:12,320 --> 00:06:19,280
security requirement either so when a

128
00:06:16,250 --> 00:06:23,150
shopping app using use this payment

129
00:06:19,280 --> 00:06:25,729
syndication a man aspire could ship our

130
00:06:23,150 --> 00:06:29,690
products with lower value currency by

131
00:06:25,729 --> 00:06:31,849
paypal and furthermore even the

132
00:06:29,690 --> 00:06:34,729
merchants have the visibility of the

133
00:06:31,850 --> 00:06:37,070
security related data if they have not

134
00:06:34,729 --> 00:06:40,070
been informed do so by the syndication

135
00:06:37,070 --> 00:06:42,440
the misdeal means to implement a

136
00:06:40,070 --> 00:06:45,080
security check in their code in

137
00:06:42,440 --> 00:06:47,539
introducing implementation level logic

138
00:06:45,080 --> 00:06:48,190
vulnerability because while you is

139
00:06:47,539 --> 00:06:50,409
innocent

140
00:06:48,190 --> 00:06:52,510
in payment service his easily to

141
00:06:50,410 --> 00:06:55,090
understand that the merchant developers

142
00:06:52,510 --> 00:06:57,550
will develop only by following the

143
00:06:55,090 --> 00:07:00,190
syndications guidance so for the

144
00:06:57,550 --> 00:07:02,110
syndication a simple way to you for the

145
00:07:00,190 --> 00:07:04,840
merchant developers the security

146
00:07:02,110 --> 00:07:07,600
requirement is to document it in their

147
00:07:04,840 --> 00:07:09,640
developer guidance for example at the

148
00:07:07,600 --> 00:07:11,560
screenshot shows there is a security

149
00:07:09,640 --> 00:07:14,320
requirement description in us

150
00:07:11,560 --> 00:07:16,510
indications developer guides users need

151
00:07:14,320 --> 00:07:19,390
to verify whether the signature is

152
00:07:16,510 --> 00:07:21,969
correct and verify the payment amount

153
00:07:19,390 --> 00:07:25,060
equals the order pressed the to

154
00:07:21,970 --> 00:07:27,520
verification must be performed so for

155
00:07:25,060 --> 00:07:29,320
suppose the security requirement of a

156
00:07:27,520 --> 00:07:32,440
merchant in a syndications payment

157
00:07:29,320 --> 00:07:34,599
process if there is no a responding

158
00:07:32,440 --> 00:07:36,940
security rockland description in its

159
00:07:34,600 --> 00:07:40,630
development documentation this may

160
00:07:36,940 --> 00:07:44,890
introduce a likely implementation level

161
00:07:40,630 --> 00:07:46,990
logic vulnerability so next that

162
00:07:44,890 --> 00:07:49,900
technique challenges in our work comes

163
00:07:46,990 --> 00:07:53,530
to how to extract this information from

164
00:07:49,900 --> 00:07:56,109
the payments indications document in our

165
00:07:53,530 --> 00:07:59,469
work we come up an effective methods

166
00:07:56,110 --> 00:08:02,440
leverage current NLP techniques to

167
00:07:59,470 --> 00:08:04,930
extraction creatively and since the time

168
00:08:02,440 --> 00:08:07,390
limitation of the presentation so here

169
00:08:04,930 --> 00:08:09,940
are only introduced the first one how to

170
00:08:07,390 --> 00:08:13,719
extract the payment process here prizm

171
00:08:09,940 --> 00:08:16,900
worded technical details in our paper so

172
00:08:13,720 --> 00:08:19,390
for the payment process we use the FSM

173
00:08:16,900 --> 00:08:21,510
finance detonation to formalize it as

174
00:08:19,390 --> 00:08:26,849
shown in the figure each node represents

175
00:08:21,510 --> 00:08:30,250
a state of the party such as a buyer the

176
00:08:26,850 --> 00:08:33,450
merchant the payment a third party

177
00:08:30,250 --> 00:08:36,219
payment and this indicator and each age

178
00:08:33,450 --> 00:08:38,770
represents a transition that the party

179
00:08:36,219 --> 00:08:41,770
of the former status in the message to

180
00:08:38,770 --> 00:08:43,929
the party of the later one Caesars

181
00:08:41,770 --> 00:08:46,420
indication payment service is going to

182
00:08:43,929 --> 00:08:49,329
help merchants to do their work and we

183
00:08:46,420 --> 00:08:51,280
can view its FSM as an extension furnace

184
00:08:49,330 --> 00:08:54,340
or party payments as shown in the figure

185
00:08:51,280 --> 00:08:56,140
the syndication replaces the merchants

186
00:08:54,340 --> 00:08:58,540
to receive the notification from the

187
00:08:56,140 --> 00:09:01,699
third party payment directory and then

188
00:08:58,540 --> 00:09:04,670
send to a merchant after he and

189
00:09:01,700 --> 00:09:07,070
so a new stage to w2 has been added in

190
00:09:04,670 --> 00:09:10,790
the syndication surfacing we can view

191
00:09:07,070 --> 00:09:14,210
the blue sub FSM as an extension from

192
00:09:10,790 --> 00:09:16,699
the revs up FSM so to build the whole

193
00:09:14,210 --> 00:09:19,220
syndication service and our idea is to

194
00:09:16,700 --> 00:09:22,490
go is to come up all the extension

195
00:09:19,220 --> 00:09:25,670
structure first for each merchant state

196
00:09:22,490 --> 00:09:28,430
in a third party payments for instance

197
00:09:25,670 --> 00:09:31,010
here for the MF state we come up with

198
00:09:28,430 --> 00:09:33,439
three possible extension structure the

199
00:09:31,010 --> 00:09:35,810
first one the original keep the original

200
00:09:33,440 --> 00:09:39,020
process thus in syndication to nothing

201
00:09:35,810 --> 00:09:40,939
and the second the merchants are receive

202
00:09:39,020 --> 00:09:44,540
the notification and forward to the

203
00:09:40,940 --> 00:09:47,060
syndication to analyze in the third one

204
00:09:44,540 --> 00:09:49,880
the syndication receives a notification

205
00:09:47,060 --> 00:09:54,380
directly and then sent to the merchant

206
00:09:49,880 --> 00:09:56,150
after analyzing so next way is structure

207
00:09:54,380 --> 00:09:58,460
or the transmission sentences from the

208
00:09:56,150 --> 00:10:01,640
syndications documentation to determine

209
00:09:58,460 --> 00:10:05,270
which is transient structures MF state

210
00:10:01,640 --> 00:10:06,050
has been used because different as as we

211
00:10:05,270 --> 00:10:09,110
can see in the figure

212
00:10:06,050 --> 00:10:12,170
different extension have different ages

213
00:10:09,110 --> 00:10:14,270
here we extracted these transmission

214
00:10:12,170 --> 00:10:17,390
sentences by their predicate such as

215
00:10:14,270 --> 00:10:20,120
here the receive and then for every

216
00:10:17,390 --> 00:10:22,340
sentence discovered we need to find who

217
00:10:20,120 --> 00:10:24,950
is the sender the receiver and the

218
00:10:22,340 --> 00:10:28,190
content of the message so we use

219
00:10:24,950 --> 00:10:30,740
dependency NLP technique dependency

220
00:10:28,190 --> 00:10:32,480
parsing to determine ascetics for

221
00:10:30,740 --> 00:10:34,880
example here for the sentence the

222
00:10:32,480 --> 00:10:38,050
syndication receives the payment result

223
00:10:34,880 --> 00:10:40,640
from Alipay after an analysis dependency

224
00:10:38,050 --> 00:10:44,329
relationship we can determine for the

225
00:10:40,640 --> 00:10:47,630
predicate receive the subject hafiz is a

226
00:10:44,330 --> 00:10:50,870
receiver and direct object a payment

227
00:10:47,630 --> 00:10:53,920
result is a content in the indirect

228
00:10:50,870 --> 00:10:56,420
object Alipay is a sender

229
00:10:53,920 --> 00:10:58,939
that's exactly describes the

230
00:10:56,420 --> 00:11:01,040
notification transmission as the figure

231
00:10:58,940 --> 00:11:04,580
showing in a third third extension

232
00:11:01,040 --> 00:11:06,709
structure so we can determine estate MF

233
00:11:04,580 --> 00:11:09,340
has been extended by the surger

234
00:11:06,710 --> 00:11:11,800
structure by this way we can build

235
00:11:09,340 --> 00:11:19,199
payment as indications FS

236
00:11:11,800 --> 00:11:22,540
automatically ania our work away

237
00:11:19,199 --> 00:11:24,550
developer toolkit dilution we use it to

238
00:11:22,540 --> 00:11:26,679
analyze the nature real-world

239
00:11:24,550 --> 00:11:29,339
indications guides all over the map

240
00:11:26,679 --> 00:11:32,470
popular and with tens of thousands

241
00:11:29,339 --> 00:11:36,009
merchant developer users and hundreds of

242
00:11:32,470 --> 00:11:39,489
mini inspire users Archer reported to

243
00:11:36,009 --> 00:11:41,619
design level vulnerabilities and nine

244
00:11:39,489 --> 00:11:45,040
likely implementation member abilities

245
00:11:41,619 --> 00:11:47,699
for the design vulnerability possess

246
00:11:45,040 --> 00:11:50,920
indicator called for China and big cloud

247
00:11:47,699 --> 00:11:53,498
the they do not have the visibility of

248
00:11:50,920 --> 00:11:56,349
the third-party payments secretly so

249
00:11:53,499 --> 00:11:58,480
they can't verify the signature of the

250
00:11:56,350 --> 00:12:01,540
message from a third-party payment and

251
00:11:58,480 --> 00:12:03,730
in the meanwhile they do not forward the

252
00:12:01,540 --> 00:12:05,829
whole message to a merchant so the

253
00:12:03,730 --> 00:12:10,119
merchant cannot verify the signature

254
00:12:05,829 --> 00:12:12,998
leader so the adversary could have

255
00:12:10,119 --> 00:12:15,339
forged a fake third-party payment

256
00:12:12,999 --> 00:12:18,790
notification to cheat him order has been

257
00:12:15,339 --> 00:12:21,009
paid in our experiments we exploited his

258
00:12:18,790 --> 00:12:24,099
vulnerabilities in real-world herbs and

259
00:12:21,009 --> 00:12:27,339
achieve shopping product for free and

260
00:12:24,100 --> 00:12:29,799
for the implementation on orbit we find

261
00:12:27,339 --> 00:12:31,480
some syndication guidance to know him

262
00:12:29,799 --> 00:12:34,600
for merchants to check the payment

263
00:12:31,480 --> 00:12:36,699
amount or the payment currency as a

264
00:12:34,600 --> 00:12:39,519
third-party payments demands so we

265
00:12:36,699 --> 00:12:43,569
randomly choose apps to exploit in

266
00:12:39,519 --> 00:12:44,920
charset for us in in these apps we find

267
00:12:43,569 --> 00:12:47,799
the order merchant

268
00:12:44,920 --> 00:12:50,110
developers really don't miss to

269
00:12:47,799 --> 00:12:53,559
implement a security check in their code

270
00:12:50,110 --> 00:12:57,669
so we can achieve shopping a product and

271
00:12:53,559 --> 00:12:59,919
a bit for a lower price family nest

272
00:12:57,669 --> 00:13:03,790
summarize our contribution the first one

273
00:12:59,919 --> 00:13:06,160
we provide a new direction we explore

274
00:13:03,790 --> 00:13:08,139
potential to protect a logical

275
00:13:06,160 --> 00:13:10,959
vulnerability just from the

276
00:13:08,139 --> 00:13:12,939
documentation only our preliminary study

277
00:13:10,959 --> 00:13:14,949
and payment syndication service shows

278
00:13:12,939 --> 00:13:17,679
this is indeed feasible the

279
00:13:14,949 --> 00:13:20,740
documentation already contains enough

280
00:13:17,679 --> 00:13:23,139
information for us to help identify the

281
00:13:20,740 --> 00:13:25,480
logical vulnerability directory and we

282
00:13:23,139 --> 00:13:27,940
believe the research alone is now

283
00:13:25,480 --> 00:13:30,339
could bring your perspective to software

284
00:13:27,940 --> 00:13:32,980
where security analysis and we hope we

285
00:13:30,339 --> 00:13:35,110
will see more study and s-92 enabled a

286
00:13:32,980 --> 00:13:38,260
vulnerability detection more efficient

287
00:13:35,110 --> 00:13:40,720
and intelligent and second one we

288
00:13:38,260 --> 00:13:43,180
provide a new technique we developed a

289
00:13:40,720 --> 00:13:44,320
dilution the first assessment capacitor

290
00:13:43,180 --> 00:13:46,959
documentation and Iser

291
00:13:44,320 --> 00:13:49,180
it can automatically inspect a

292
00:13:46,959 --> 00:13:51,189
developer's guidance and in for logical

293
00:13:49,180 --> 00:13:53,500
manner abilities and our code has

294
00:13:51,190 --> 00:13:57,130
recently helped welcome everybody use it

295
00:13:53,500 --> 00:13:59,470
and finally we have some new findings in

296
00:13:57,130 --> 00:14:02,230
the system which has already will study

297
00:13:59,470 --> 00:14:05,709
for several years the payment process we

298
00:14:02,230 --> 00:14:08,110
find security critical vulnerability in

299
00:14:05,709 --> 00:14:10,239
a payment syndication process we can

300
00:14:08,110 --> 00:14:12,970
exploit them to achieve shopping a

301
00:14:10,240 --> 00:14:15,970
protector at betray lower price or even

302
00:14:12,970 --> 00:14:18,579
completely for free and we report all

303
00:14:15,970 --> 00:14:20,740
these vulnerability to the corresponding

304
00:14:18,579 --> 00:14:23,410
companies and all of them are Claridge

305
00:14:20,740 --> 00:14:27,000
them and test our thoughts the sultan's

306
00:14:23,410 --> 00:14:27,000
Perl is an alien question

307
00:14:30,470 --> 00:14:34,910
Thank You shant any questions again

308
00:14:33,470 --> 00:14:38,569
please step up to the microphone and

309
00:14:34,910 --> 00:14:44,149
state your name and affiliation so I

310
00:14:38,569 --> 00:14:47,089
think I'll start D you you who reviewed

311
00:14:44,149 --> 00:14:48,709
many different payment platforms yeah

312
00:14:47,089 --> 00:14:51,800
and they are all with their own

313
00:14:48,709 --> 00:14:53,268
documentations yes but they all came

314
00:14:51,800 --> 00:14:56,060
with the documentation which we analyzed

315
00:14:53,269 --> 00:14:59,709
but I was wondering if these payment

316
00:14:56,060 --> 00:15:02,779
platforms also came with sample apps or

317
00:14:59,709 --> 00:15:04,878
source code which shows how to use them

318
00:15:02,779 --> 00:15:10,100
and whether you analyze that code as

319
00:15:04,879 --> 00:15:12,589
well so when you analyze the

320
00:15:10,100 --> 00:15:15,379
documentation is there together with the

321
00:15:12,589 --> 00:15:18,050
documentation also some source code an

322
00:15:15,379 --> 00:15:20,329
example source code of using this

323
00:15:18,050 --> 00:15:23,319
payment platform did you analyze that

324
00:15:20,329 --> 00:15:26,989
source code as well yeah we have checked

325
00:15:23,319 --> 00:15:30,290
they have some example in yeah yeah in a

326
00:15:26,990 --> 00:15:32,600
syndication payment except for not only

327
00:15:30,290 --> 00:15:34,639
in the description will tell the

328
00:15:32,600 --> 00:15:38,000
developers how to use it and there are

329
00:15:34,639 --> 00:15:40,670
also some example the but we find there

330
00:15:38,000 --> 00:15:43,490
are still they don't explain it clearly

331
00:15:40,670 --> 00:15:46,339
in the example and there are code we

332
00:15:43,490 --> 00:15:48,439
even find some in a code they are indeed

333
00:15:46,339 --> 00:15:53,149
the logical repeat you will discover

334
00:15:48,439 --> 00:15:56,870
yeah okay thank you thank you for the

335
00:15:53,149 --> 00:16:01,100
talk I'm Justin from IIT Madras India so

336
00:15:56,870 --> 00:16:03,170
I was just trying to understand yeah I'm

337
00:16:01,100 --> 00:16:07,339
just trying to understand that your

338
00:16:03,170 --> 00:16:10,160
testing process so my question is were

339
00:16:07,339 --> 00:16:14,600
you did you test actually the back end

340
00:16:10,160 --> 00:16:18,230
of the third parties because is there

341
00:16:14,600 --> 00:16:21,920
any kind can you make a differentiation

342
00:16:18,230 --> 00:16:27,430
between the guidelines that are provided

343
00:16:21,920 --> 00:16:30,410
to the merchants from the documentation

344
00:16:27,430 --> 00:16:33,589
okay let me put it better way

345
00:16:30,410 --> 00:16:36,110
are you sure that these requirements are

346
00:16:33,589 --> 00:16:40,009
not tested at the back back end of the

347
00:16:36,110 --> 00:16:41,389
third party sorry idea for example if

348
00:16:40,009 --> 00:16:43,560
you are if you take the case of

349
00:16:41,389 --> 00:16:47,190
different currencies

350
00:16:43,560 --> 00:16:49,079
have you tested if these verifications

351
00:16:47,190 --> 00:16:51,780
are not ended the back end of d2 third

352
00:16:49,080 --> 00:16:54,260
party because the the develop and

353
00:16:51,780 --> 00:16:56,490
documentation of a third party could be

354
00:16:54,260 --> 00:16:58,700
confidential and may not be available to

355
00:16:56,490 --> 00:16:58,700
the public

356
00:17:01,910 --> 00:17:13,079
I'm sorry Kari so my question is so

357
00:17:07,050 --> 00:17:15,629
that's my mic oh yes we did

358
00:17:13,079 --> 00:17:19,109
so we performed an end to end test on

359
00:17:15,630 --> 00:17:23,370
total against a total one ability and we

360
00:17:19,109 --> 00:17:26,639
confirmed yes to the merchant did follow

361
00:17:23,369 --> 00:17:28,290
the in completely insecure documentation

362
00:17:26,640 --> 00:17:30,840
and they're back and are you indeed a

363
00:17:28,290 --> 00:17:32,220
vulnerable due to that yeah due to the

364
00:17:30,840 --> 00:17:34,260
problem yeah thank you

365
00:17:32,220 --> 00:17:37,280
okay so let's thank each and again for

366
00:17:34,260 --> 00:17:37,280
the talk

