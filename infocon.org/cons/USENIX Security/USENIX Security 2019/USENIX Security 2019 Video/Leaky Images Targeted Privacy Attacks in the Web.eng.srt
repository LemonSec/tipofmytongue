1
00:00:10,450 --> 00:00:14,229
thanks for the introduction and welcome

2
00:00:12,160 --> 00:00:16,420
to this talk on leaky images which is

3
00:00:14,230 --> 00:00:17,770
about targeted privacy detects in the

4
00:00:16,420 --> 00:00:19,750
web so this is joint work with my

5
00:00:17,770 --> 00:00:22,480
student Chris who cannot be here today

6
00:00:19,750 --> 00:00:25,750
for a very important personal matter so

7
00:00:22,480 --> 00:00:26,949
you have to just take me all credit for

8
00:00:25,750 --> 00:00:28,779
this work should go to him so if you

9
00:00:26,949 --> 00:00:30,369
like it it's all for him if you happen

10
00:00:28,779 --> 00:00:32,650
to not like this work you can just blame

11
00:00:30,369 --> 00:00:35,019
me because I'm here all right so this

12
00:00:32,650 --> 00:00:37,540
work is about a simple question and this

13
00:00:35,020 --> 00:00:41,260
question is has John visited my site my

14
00:00:37,540 --> 00:00:43,440
website John can be many many different

15
00:00:41,260 --> 00:00:46,150
people and your goal is to identify

16
00:00:43,440 --> 00:00:48,070
precisely that this person John has

17
00:00:46,150 --> 00:00:51,519
visited a website that is under your

18
00:00:48,070 --> 00:00:53,799
annuity attacker and Mike talk control

19
00:00:51,519 --> 00:00:55,600
so this question might be relevant in in

20
00:00:53,799 --> 00:00:58,690
many scenarios so for example John might

21
00:00:55,600 --> 00:01:00,220
be some politician or celebrity and you

22
00:00:58,690 --> 00:01:01,570
are hosting a questionable site and you

23
00:01:00,220 --> 00:01:04,000
want to know whether this celebrity is

24
00:01:01,570 --> 00:01:05,890
actually visiting your site it mailed to

25
00:01:04,000 --> 00:01:06,970
me that John is a suspected criminal and

26
00:01:05,890 --> 00:01:09,070
you're working for a law enforcement

27
00:01:06,970 --> 00:01:10,960
agency and you want to check that that

28
00:01:09,070 --> 00:01:13,089
Shawn is actually visiting some illegal

29
00:01:10,960 --> 00:01:15,250
site it may also be that you are working

30
00:01:13,090 --> 00:01:16,840
for some oppressive regime and John is a

31
00:01:15,250 --> 00:01:19,359
political dissident and you want to know

32
00:01:16,840 --> 00:01:21,369
whether John is accessing some content

33
00:01:19,359 --> 00:01:23,619
that is forbidden in your country or

34
00:01:21,369 --> 00:01:25,270
maybe you're just an author of a paper

35
00:01:23,619 --> 00:01:27,219
and you want to know which of all these

36
00:01:25,270 --> 00:01:29,170
PC members is actually accessing the

37
00:01:27,219 --> 00:01:31,869
additional additional material that is

38
00:01:29,170 --> 00:01:34,450
linked in your paper so in all of these

39
00:01:31,869 --> 00:01:36,250
cases you can use the attack that we are

40
00:01:34,450 --> 00:01:38,560
presenting in this in this presentation

41
00:01:36,250 --> 00:01:41,920
which is called leaky images so it's a

42
00:01:38,560 --> 00:01:43,329
targeted D anonymization attack which

43
00:01:41,920 --> 00:01:45,729
basically allows you to find out whether

44
00:01:43,329 --> 00:01:47,798
one specific individual or one out of a

45
00:01:45,729 --> 00:01:51,070
small group of individuals is visiting

46
00:01:47,799 --> 00:01:53,229
and at a website under the control of an

47
00:01:51,070 --> 00:01:56,648
attacker this is a rough outline of the

48
00:01:53,229 --> 00:01:58,509
talk so I'm going to start with a basic

49
00:01:56,649 --> 00:02:01,210
variant of the attack where I'm going to

50
00:01:58,509 --> 00:02:02,829
show how to attack a single person then

51
00:02:01,210 --> 00:02:05,288
I'll show how to extend this attack to a

52
00:02:02,829 --> 00:02:06,818
group of people so you can find out who

53
00:02:05,289 --> 00:02:08,830
out of a small group of people is

54
00:02:06,819 --> 00:02:10,300
actually visiting your site they're not

55
00:02:08,830 --> 00:02:12,340
sure how to use it for linking

56
00:02:10,300 --> 00:02:14,680
pseudonyms you can basically find out

57
00:02:12,340 --> 00:02:16,930
whether to user accounts belong to the

58
00:02:14,680 --> 00:02:19,030
same person and finally in case some on

59
00:02:16,930 --> 00:02:21,129
disabled JavaScript and maybe also CSS

60
00:02:19,030 --> 00:02:22,659
I'll show a script 'less variant of the

61
00:02:21,129 --> 00:02:23,760
attack that achieves the same things

62
00:02:22,659 --> 00:02:25,859
without the

63
00:02:23,760 --> 00:02:27,420
firing any scripts and then finally I

64
00:02:25,860 --> 00:02:30,030
talked a little bit about how feasible

65
00:02:27,420 --> 00:02:31,890
all of this is in in practice by showing

66
00:02:30,030 --> 00:02:34,200
that many of the top web sites including

67
00:02:31,890 --> 00:02:35,849
Facebook Google Twitter Dropbox and many

68
00:02:34,200 --> 00:02:38,040
others are affected by this attack

69
00:02:35,849 --> 00:02:40,859
because you can essentially abuse them

70
00:02:38,040 --> 00:02:42,989
to perform this attack alright so let's

71
00:02:40,860 --> 00:02:45,329
get started with the basic idea of the

72
00:02:42,989 --> 00:02:47,250
leaky images attack so the scenario is

73
00:02:45,329 --> 00:02:49,349
that we have an attacker who owns or

74
00:02:47,250 --> 00:02:51,599
operates a web site and then we have a

75
00:02:49,349 --> 00:02:52,170
victim and that's John and we're

76
00:02:51,599 --> 00:02:53,939
interested

77
00:02:52,170 --> 00:02:56,099
the attackers interested in whether this

78
00:02:53,939 --> 00:02:57,299
victim is visiting the web site and then

79
00:02:56,099 --> 00:02:59,369
of course there are also many many other

80
00:02:57,299 --> 00:03:00,450
users for which we do not really want to

81
00:02:59,370 --> 00:03:03,180
know whether they are visiting the web

82
00:03:00,450 --> 00:03:04,888
site we only care about this fiction so

83
00:03:03,180 --> 00:03:06,629
usually what happens when either the

84
00:03:04,889 --> 00:03:08,790
victim or some other user visits the

85
00:03:06,629 --> 00:03:10,888
website is that the attacker learns

86
00:03:08,790 --> 00:03:13,319
about the IP of the user and maybe also

87
00:03:10,889 --> 00:03:15,209
some kind of browser fingerprint this is

88
00:03:13,319 --> 00:03:17,399
valuable information but it's not enough

89
00:03:15,209 --> 00:03:18,870
to precisely identify that a specific

90
00:03:17,400 --> 00:03:20,519
person has visited site because

91
00:03:18,870 --> 00:03:22,680
different people may share the same IP

92
00:03:20,519 --> 00:03:24,480
and the browser fingerprint has some

93
00:03:22,680 --> 00:03:27,959
entropy but usually not enough to

94
00:03:24,480 --> 00:03:29,399
precisely identify who this person is so

95
00:03:27,959 --> 00:03:31,319
what are we doing here instead of just

96
00:03:29,400 --> 00:03:35,010
using the IP and browser fingerprints is

97
00:03:31,319 --> 00:03:36,540
to use an image sharing service image

98
00:03:35,010 --> 00:03:38,129
sharing service sounds like a fancy term

99
00:03:36,540 --> 00:03:40,500
but essentially what I mean by this is

100
00:03:38,129 --> 00:03:42,750
any web site that allows you to share

101
00:03:40,500 --> 00:03:44,340
images with specific users and if you

102
00:03:42,750 --> 00:03:46,769
think about it there many many such web

103
00:03:44,340 --> 00:03:49,049
sites including Facebook Twitter Google

104
00:03:46,769 --> 00:03:50,940
Dropbox and many others where you can

105
00:03:49,049 --> 00:03:52,799
somehow upload an image and then say I'm

106
00:03:50,940 --> 00:03:55,260
sharing this image with this specific

107
00:03:52,799 --> 00:03:58,079
user and user typically means a user

108
00:03:55,260 --> 00:04:00,358
name or an email address so what happens

109
00:03:58,079 --> 00:04:02,760
in the leaky images it attack is the

110
00:04:00,359 --> 00:04:04,590
attacker knows the username or email

111
00:04:02,760 --> 00:04:06,388
address of the victim and then shares an

112
00:04:04,590 --> 00:04:08,790
image through one of these image sharing

113
00:04:06,389 --> 00:04:10,769
services just with that victim so only

114
00:04:08,790 --> 00:04:13,560
the victim is able to access that image

115
00:04:10,769 --> 00:04:16,530
and then when the victim or some other

116
00:04:13,560 --> 00:04:19,440
user is visiting the website that is

117
00:04:16,529 --> 00:04:22,888
owned by the attacker this website will

118
00:04:19,440 --> 00:04:24,900
also issue requests for this privately

119
00:04:22,889 --> 00:04:26,669
shared image and now because this image

120
00:04:24,900 --> 00:04:28,969
has been shared only with the victim

121
00:04:26,669 --> 00:04:31,229
there are two possible outcomes one is

122
00:04:28,970 --> 00:04:33,450
it's actually the victim who's visiting

123
00:04:31,229 --> 00:04:35,430
this website and in this case this image

124
00:04:33,450 --> 00:04:37,229
can be loaded and the information that

125
00:04:35,430 --> 00:04:38,790
the image could be loaded can be

126
00:04:37,230 --> 00:04:40,680
and back to the server of the attacker

127
00:04:38,790 --> 00:04:43,170
and the attacker knows exactly that this

128
00:04:40,680 --> 00:04:45,270
person has visited the site the other

129
00:04:43,170 --> 00:04:47,490
case is that some other user is visiting

130
00:04:45,270 --> 00:04:51,090
this website in which case the image

131
00:04:47,490 --> 00:04:52,980
request will fail and then the attacker

132
00:04:51,090 --> 00:04:54,750
learns that some other user has visited

133
00:04:52,980 --> 00:04:57,390
so we know that this has not been

134
00:04:54,750 --> 00:05:00,170
individual to make all of this a little

135
00:04:57,390 --> 00:05:02,669
bit more concrete let's look at an

136
00:05:00,170 --> 00:05:03,870
implementation of this in JavaScript and

137
00:05:02,670 --> 00:05:05,460
as I said later on I'll show an

138
00:05:03,870 --> 00:05:07,890
implementation that does not require any

139
00:05:05,460 --> 00:05:09,750
JavaScript so what happens here is that

140
00:05:07,890 --> 00:05:11,880
we add a little bit of code to the

141
00:05:09,750 --> 00:05:14,550
website that is under the control of the

142
00:05:11,880 --> 00:05:18,570
attacker and this code executes some

143
00:05:14,550 --> 00:05:20,310
JavaScript when the page has loaded so

144
00:05:18,570 --> 00:05:23,040
specifically what the first two lines

145
00:05:20,310 --> 00:05:24,480
are doing here is to try to load this

146
00:05:23,040 --> 00:05:26,310
privately shared image so there

147
00:05:24,480 --> 00:05:28,260
typically is some URL that points to

148
00:05:26,310 --> 00:05:31,650
this image that we have shared with the

149
00:05:28,260 --> 00:05:33,360
victim and then we just installed to

150
00:05:31,650 --> 00:05:35,549
event handlers that check whether this

151
00:05:33,360 --> 00:05:36,900
image could actually be loaded and then

152
00:05:35,550 --> 00:05:38,520
depending on whether it could be loaded

153
00:05:36,900 --> 00:05:40,859
or not we are sending this information

154
00:05:38,520 --> 00:05:42,539
back to the attacker controlled server

155
00:05:40,860 --> 00:05:46,530
and then we know whether the victim was

156
00:05:42,540 --> 00:05:48,840
there or someone else all right so now

157
00:05:46,530 --> 00:05:50,849
all of this relies on image sharing in

158
00:05:48,840 --> 00:05:52,799
web so let's look a little bit more into

159
00:05:50,850 --> 00:05:54,780
into what this really means so when I

160
00:05:52,800 --> 00:05:56,670
say image sharing service I mean any of

161
00:05:54,780 --> 00:05:59,849
these various sites that allow you to

162
00:05:56,670 --> 00:06:01,680
share images with specific users you can

163
00:05:59,850 --> 00:06:04,200
do this for example on Google or Dropbox

164
00:06:01,680 --> 00:06:06,360
by sharing specific files with specific

165
00:06:04,200 --> 00:06:08,219
other users you can do it on Twitter by

166
00:06:06,360 --> 00:06:10,860
sending a private message to one user

167
00:06:08,220 --> 00:06:12,720
and have an image embedded in this in

168
00:06:10,860 --> 00:06:14,250
this private message or you can for

169
00:06:12,720 --> 00:06:16,260
example also do it on Facebook by

170
00:06:14,250 --> 00:06:18,570
posting something and make this post

171
00:06:16,260 --> 00:06:19,830
visible only to a specific user and then

172
00:06:18,570 --> 00:06:21,120
there are many other ways and many other

173
00:06:19,830 --> 00:06:23,240
sites where you can do the same so these

174
00:06:21,120 --> 00:06:26,790
are just some representative examples

175
00:06:23,240 --> 00:06:29,070
all of this image sharing services are

176
00:06:26,790 --> 00:06:31,890
implemented through basically two

177
00:06:29,070 --> 00:06:33,270
techniques and sometimes it's only one

178
00:06:31,890 --> 00:06:34,560
of them sometimes it's a combination of

179
00:06:33,270 --> 00:06:36,570
the two the first of them is

180
00:06:34,560 --> 00:06:38,610
authentication so the image sharing

181
00:06:36,570 --> 00:06:40,409
website authenticates the user that is

182
00:06:38,610 --> 00:06:42,950
requesting an image typically through

183
00:06:40,410 --> 00:06:45,750
cookies and then only shifts the image

184
00:06:42,950 --> 00:06:48,030
when the user has been authenticated or

185
00:06:45,750 --> 00:06:50,070
you can also implement image sharing

186
00:06:48,030 --> 00:06:50,909
through secret URLs so there are some

187
00:06:50,070 --> 00:06:53,159
longer

188
00:06:50,909 --> 00:06:55,830
that only the person you share an image

189
00:06:53,159 --> 00:06:58,669
with notes and only who knows this

190
00:06:55,830 --> 00:07:01,109
secret eol can actually access the image

191
00:06:58,669 --> 00:07:02,878
all right so now you know kind of the

192
00:07:01,110 --> 00:07:04,979
basic idea of the attack and you know

193
00:07:02,879 --> 00:07:07,469
that the general setup of image sharing

194
00:07:04,979 --> 00:07:08,758
in the map let's now have a look at the

195
00:07:07,469 --> 00:07:11,129
four conditions that need to be

196
00:07:08,759 --> 00:07:13,709
fulfilled in order to enable the sneaky

197
00:07:11,129 --> 00:07:15,659
images attack so condition number one is

198
00:07:13,709 --> 00:07:17,789
that the attacker and the victim are

199
00:07:15,659 --> 00:07:20,580
users of the same image sharing service

200
00:07:17,789 --> 00:07:22,529
so as I said I'm there many many sites

201
00:07:20,580 --> 00:07:24,300
that allow you to share images and many

202
00:07:22,529 --> 00:07:25,949
of them are really popular and have

203
00:07:24,300 --> 00:07:28,139
hundreds of millions or even billions of

204
00:07:25,949 --> 00:07:30,360
users so what an attack I can do is to

205
00:07:28,139 --> 00:07:31,919
basically create an account on some of

206
00:07:30,360 --> 00:07:33,959
these popular sites and then it sense

207
00:07:31,919 --> 00:07:36,289
that the victim also has an account with

208
00:07:33,959 --> 00:07:38,309
at least one of them it's pretty high

209
00:07:36,289 --> 00:07:39,899
condition number two is that the

210
00:07:38,309 --> 00:07:42,659
attacker can actually share an image

211
00:07:39,899 --> 00:07:44,610
with the victim in many cases for many

212
00:07:42,659 --> 00:07:46,469
of these image sharing sites all you

213
00:07:44,610 --> 00:07:48,629
need to know is the email address and/or

214
00:07:46,469 --> 00:07:50,669
the username of the person you want to

215
00:07:48,629 --> 00:07:52,709
share an image with so it's pretty easy

216
00:07:50,669 --> 00:07:54,209
to do this in some cases there's some

217
00:07:52,709 --> 00:07:55,409
other precondition for example on

218
00:07:54,209 --> 00:07:58,860
Facebook you need to be friends with

219
00:07:55,409 --> 00:08:00,990
that person condition number three is

220
00:07:58,860 --> 00:08:02,909
that the victim visits the site that is

221
00:08:00,990 --> 00:08:04,559
under the control of the attacker while

222
00:08:02,909 --> 00:08:06,180
being locked into the image sharing

223
00:08:04,559 --> 00:08:08,069
service so that basically means you need

224
00:08:06,180 --> 00:08:10,409
to be locked into Facebook or Google or

225
00:08:08,069 --> 00:08:11,969
something else which happens to be true

226
00:08:10,409 --> 00:08:13,919
for many users I don't know how many of

227
00:08:11,969 --> 00:08:16,259
you log out of all of these sites all

228
00:08:13,919 --> 00:08:18,149
the time I'm sure many average users

229
00:08:16,259 --> 00:08:20,459
don't do it so this condition is also

230
00:08:18,149 --> 00:08:21,990
true in many cases and the fourth

231
00:08:20,459 --> 00:08:24,149
condition is that the image sharing

232
00:08:21,990 --> 00:08:26,279
service uses cookie based authentication

233
00:08:24,149 --> 00:08:28,469
in order to check whether someone is

234
00:08:26,279 --> 00:08:30,329
really allowed to access an image so the

235
00:08:28,469 --> 00:08:31,979
reason why all of this works is the same

236
00:08:30,329 --> 00:08:34,438
thing that you've seen during lunch on

237
00:08:31,979 --> 00:08:36,929
your table it's these nice cookies that

238
00:08:34,438 --> 00:08:39,088
some websites install in your browser

239
00:08:36,929 --> 00:08:41,549
because these cookies are then sent to

240
00:08:39,089 --> 00:08:44,069
the image sharing service in order to

241
00:08:41,549 --> 00:08:45,540
check whether you or the person who is

242
00:08:44,068 --> 00:08:49,259
visiting the website is actually allowed

243
00:08:45,540 --> 00:08:51,599
to access the image alright so this was

244
00:08:49,259 --> 00:08:53,970
um the basic idea of leaky images let's

245
00:08:51,600 --> 00:08:55,589
now look at a couple of extensions of

246
00:08:53,970 --> 00:08:57,810
this basic attack so one of these

247
00:08:55,589 --> 00:08:59,910
extensions is to use it to not just

248
00:08:57,810 --> 00:09:02,459
attack a single user but to attack a

249
00:08:59,910 --> 00:09:04,780
group of users so wonder if a in which

250
00:09:02,459 --> 00:09:07,900
you could do this is to basically share

251
00:09:04,780 --> 00:09:09,130
one image with each user a scenario

252
00:09:07,900 --> 00:09:11,560
where this might be interesting is that

253
00:09:09,130 --> 00:09:13,630
you for example want to prepare a spear

254
00:09:11,560 --> 00:09:15,520
phishing attack on a small or midsize

255
00:09:13,630 --> 00:09:17,710
company and you want to find out who

256
00:09:15,520 --> 00:09:20,319
reacts to a specific email by actually

257
00:09:17,710 --> 00:09:22,300
visiting some web site so now if you

258
00:09:20,320 --> 00:09:25,260
would take this naive approach you would

259
00:09:22,300 --> 00:09:28,390
share one image with each user or each

260
00:09:25,260 --> 00:09:30,870
employee in this company but the

261
00:09:28,390 --> 00:09:34,180
downside is that this requires oh of n

262
00:09:30,870 --> 00:09:36,700
images and also o of n requests and a

263
00:09:34,180 --> 00:09:39,370
slightly more clever approach uses the

264
00:09:36,700 --> 00:09:41,050
fact that you can share an image with a

265
00:09:39,370 --> 00:09:43,980
subset of users on many of these sites

266
00:09:41,050 --> 00:09:47,740
by basically performing a binary search

267
00:09:43,980 --> 00:09:50,710
across the set of all users so this

268
00:09:47,740 --> 00:09:53,800
figure here illustrates this for a case

269
00:09:50,710 --> 00:09:55,690
of 7 users and what we need here are

270
00:09:53,800 --> 00:09:57,430
three shared images and we basically

271
00:09:55,690 --> 00:09:59,170
request image number one which has been

272
00:09:57,430 --> 00:10:01,209
shared only with half of the users and

273
00:09:59,170 --> 00:10:03,339
then depending on whether this request

274
00:10:01,210 --> 00:10:04,870
succeeds we know whether the user is in

275
00:10:03,340 --> 00:10:07,150
this half on that half and then we just

276
00:10:04,870 --> 00:10:11,220
do this again and again until we know

277
00:10:07,150 --> 00:10:14,709
exactly who has visited about the site

278
00:10:11,220 --> 00:10:15,910
another extension of this leaky images

279
00:10:14,710 --> 00:10:17,730
attack is to use it for linking

280
00:10:15,910 --> 00:10:20,170
pseudonyms so here the idea is that

281
00:10:17,730 --> 00:10:22,210
there are two accounts that belong to

282
00:10:20,170 --> 00:10:23,349
two different image sharing services and

283
00:10:22,210 --> 00:10:24,940
you want to know whether these two

284
00:10:23,350 --> 00:10:26,830
accounts belong to the same user and

285
00:10:24,940 --> 00:10:29,320
what you can do here is to basically

286
00:10:26,830 --> 00:10:31,690
perform to leaky images attacks in

287
00:10:29,320 --> 00:10:33,880
parallel so you share with each of these

288
00:10:31,690 --> 00:10:35,620
accounts one image and then request both

289
00:10:33,880 --> 00:10:37,900
of these images on your website and if

290
00:10:35,620 --> 00:10:40,210
you see that both of these requests

291
00:10:37,900 --> 00:10:42,069
succeed then you know that the person

292
00:10:40,210 --> 00:10:43,420
who has visited this website has

293
00:10:42,070 --> 00:10:45,060
actually bought accounts and you know

294
00:10:43,420 --> 00:10:47,110
that they belong to the same person a

295
00:10:45,060 --> 00:10:49,060
scenario where this could be interesting

296
00:10:47,110 --> 00:10:52,630
in practice is for example for some law

297
00:10:49,060 --> 00:10:54,130
enforcement agency that knows that some

298
00:10:52,630 --> 00:10:55,990
account has been involved in criminal

299
00:10:54,130 --> 00:10:57,970
activities and that some other account

300
00:10:55,990 --> 00:10:59,680
belongs to a known suspect and then you

301
00:10:57,970 --> 00:11:02,740
want to check whether these two counts

302
00:10:59,680 --> 00:11:04,900
actually belong to the same person all

303
00:11:02,740 --> 00:11:07,510
right finally I promised a script list

304
00:11:04,900 --> 00:11:09,280
version of the attacks so this is a

305
00:11:07,510 --> 00:11:10,930
simple example how this attack can be

306
00:11:09,280 --> 00:11:13,480
performed without any JavaScript and

307
00:11:10,930 --> 00:11:17,949
without any CSS and what we do here is

308
00:11:13,480 --> 00:11:20,679
to use this object tag in HTML which

309
00:11:17,949 --> 00:11:24,399
essentially provides an illogical if not

310
00:11:20,679 --> 00:11:26,679
so what object us is to try to load some

311
00:11:24,399 --> 00:11:30,249
data that is that is stored at some URL

312
00:11:26,679 --> 00:11:33,999
and if this data cannot be loaded the

313
00:11:30,249 --> 00:11:35,439
next object Tec is executed which may

314
00:11:33,999 --> 00:11:36,989
perform some other request so

315
00:11:35,439 --> 00:11:39,309
essentially essentially what these

316
00:11:36,989 --> 00:11:42,309
highlighted lines here are doing is to

317
00:11:39,309 --> 00:11:44,410
try to request the privately shared

318
00:11:42,309 --> 00:11:48,368
image and in case this request does not

319
00:11:44,410 --> 00:11:51,279
succeed we tell our server to attack a

320
00:11:48,369 --> 00:11:52,779
server that this was not the victim but

321
00:11:51,279 --> 00:11:54,220
just knowing that it was not a victim is

322
00:11:52,779 --> 00:11:55,869
not enough to know whether the victim

323
00:11:54,220 --> 00:11:57,669
visited what we also need to know is

324
00:11:55,869 --> 00:11:59,529
whether this whole page has actually

325
00:11:57,669 --> 00:12:02,980
loaded and this is why we have another

326
00:11:59,529 --> 00:12:04,929
of a set of other image requests which

327
00:12:02,980 --> 00:12:06,939
all point to invalid images so two

328
00:12:04,929 --> 00:12:08,499
images that do not exist and these

329
00:12:06,939 --> 00:12:11,290
requests will take some time and then

330
00:12:08,499 --> 00:12:14,619
eventually in the in the most deeply

331
00:12:11,290 --> 00:12:16,419
nested requests will send a message to

332
00:12:14,619 --> 00:12:18,309
the server telling us that the whole

333
00:12:16,419 --> 00:12:19,809
page has been loaded and then taking

334
00:12:18,309 --> 00:12:21,790
these two facts together knowing that

335
00:12:19,809 --> 00:12:25,089
the whole page has been loaded but it

336
00:12:21,790 --> 00:12:26,709
was not a victim then we can infer when

337
00:12:25,089 --> 00:12:30,790
and whether the victim has actually

338
00:12:26,709 --> 00:12:32,439
visited the page all right so now this

339
00:12:30,790 --> 00:12:34,118
was all the all the theory let's now

340
00:12:32,439 --> 00:12:35,910
have a look at how how well this

341
00:12:34,119 --> 00:12:39,459
actually works in practice so we have

342
00:12:35,910 --> 00:12:41,799
looked at 30 of the most popular image

343
00:12:39,459 --> 00:12:43,628
sharing services that exist today in the

344
00:12:41,799 --> 00:12:45,309
web and we have studied them so we

345
00:12:43,629 --> 00:12:47,429
looked at Facebook Twitter Google

346
00:12:45,309 --> 00:12:50,199
YouTube Instagram LinkedIn Pinterest and

347
00:12:47,429 --> 00:12:51,999
many others and what we did for each of

348
00:12:50,199 --> 00:12:54,579
these sites is to create multiple

349
00:12:51,999 --> 00:12:56,290
accounts then we tried to find ways to

350
00:12:54,579 --> 00:12:57,910
share images from one account to the

351
00:12:56,290 --> 00:12:59,379
other for many of these sites there's

352
00:12:57,910 --> 00:13:01,299
actually more than one way to do it and

353
00:12:59,379 --> 00:13:04,419
then be checked if any of these ways to

354
00:13:01,299 --> 00:13:07,360
share images if suitable for the litchi

355
00:13:04,419 --> 00:13:09,869
images attack here's what we found so we

356
00:13:07,360 --> 00:13:13,239
found that out of these 30 sites that we

357
00:13:09,869 --> 00:13:15,189
studied at least eight are vulnerable to

358
00:13:13,239 --> 00:13:16,749
the slicky images attack which means at

359
00:13:15,189 --> 00:13:20,049
least eight of those sites can be used

360
00:13:16,749 --> 00:13:22,359
to perform this attack this table shows

361
00:13:20,049 --> 00:13:25,899
a subset of these eight the full list is

362
00:13:22,359 --> 00:13:27,549
in the in the paper as you can see for

363
00:13:25,899 --> 00:13:28,899
some of them there's some prerequisite

364
00:13:27,549 --> 00:13:30,220
that needs to be fulfilled in order to

365
00:13:28,899 --> 00:13:31,780
perform the attack so for example on

366
00:13:30,220 --> 00:13:35,050
Facebook you need to be a friend

367
00:13:31,780 --> 00:13:36,490
with the with the victim but kind of

368
00:13:35,050 --> 00:13:38,380
surprisingly on many of these sites

369
00:13:36,490 --> 00:13:40,720
there's no prerequisite at all so for

370
00:13:38,380 --> 00:13:42,730
Google Drive and Dropbox and Microsoft

371
00:13:40,720 --> 00:13:44,590
onedrive for example you do not need to

372
00:13:42,730 --> 00:13:46,570
know anything except the email address

373
00:13:44,590 --> 00:13:48,640
or username of the of the person you

374
00:13:46,570 --> 00:13:51,910
want to you want to track and then you

375
00:13:48,640 --> 00:13:53,590
can just do it so now of course all of

376
00:13:51,910 --> 00:13:56,319
this is not good so what we did is to

377
00:13:53,590 --> 00:13:59,220
tell these image sharing services about

378
00:13:56,320 --> 00:14:03,280
this potential privacy problem and

379
00:13:59,220 --> 00:14:06,010
fortunately they reacted pretty quickly

380
00:14:03,280 --> 00:14:09,010
and and effectively so as of the time of

381
00:14:06,010 --> 00:14:10,630
writing the paper at least six out of

382
00:14:09,010 --> 00:14:12,700
the eight services have either either

383
00:14:10,630 --> 00:14:15,760
already fixed or decided to fix the

384
00:14:12,700 --> 00:14:17,290
issue and nicely three of them also gave

385
00:14:15,760 --> 00:14:20,740
us a bug bounty which we didn't expect

386
00:14:17,290 --> 00:14:24,219
but of course very nice to give you an

387
00:14:20,740 --> 00:14:24,580
example of how this fix looks like in

388
00:14:24,220 --> 00:14:26,590
practice

389
00:14:24,580 --> 00:14:29,260
let's have a look at Twitter so before

390
00:14:26,590 --> 00:14:31,030
we notify them every shared image on

391
00:14:29,260 --> 00:14:32,380
Twitter was Siddiqui image so every

392
00:14:31,030 --> 00:14:34,360
image that you shared with someone

393
00:14:32,380 --> 00:14:37,660
through some Twitter message could be

394
00:14:34,360 --> 00:14:40,720
abused for this attack and the only

395
00:14:37,660 --> 00:14:42,459
prerequisite for sharing and an image of

396
00:14:40,720 --> 00:14:44,290
someone was that the victim in the

397
00:14:42,460 --> 00:14:46,900
attacker are in a follower relationship

398
00:14:44,290 --> 00:14:49,319
or that the victim has accepted direct

399
00:14:46,900 --> 00:14:52,270
messages from the from the attacker

400
00:14:49,320 --> 00:14:54,850
after fixing the issue twitter has

401
00:14:52,270 --> 00:14:58,000
disabled cookie based authentication for

402
00:14:54,850 --> 00:15:01,360
images so they do not rely on cookies at

403
00:14:58,000 --> 00:15:03,990
all for deciding whom to send an image

404
00:15:01,360 --> 00:15:07,020
and instead they use secret image URLs

405
00:15:03,990 --> 00:15:09,970
and there's another fix they also added

406
00:15:07,020 --> 00:15:12,250
some dialog for users that basically

407
00:15:09,970 --> 00:15:13,780
asks the user before rendering an image

408
00:15:12,250 --> 00:15:15,460
that is sent from strangers so it's two

409
00:15:13,780 --> 00:15:17,920
fixes for the same thing and both of

410
00:15:15,460 --> 00:15:19,410
them are fine and and individually would

411
00:15:17,920 --> 00:15:21,880
address the issue

412
00:15:19,410 --> 00:15:25,089
more generally the a couple of

413
00:15:21,880 --> 00:15:26,530
mitigations that can be can be done in

414
00:15:25,089 --> 00:15:28,900
order to prevent leaky images attacks

415
00:15:26,530 --> 00:15:30,480
and they basically can be done on three

416
00:15:28,900 --> 00:15:32,650
levels the first is on the server-side

417
00:15:30,480 --> 00:15:34,410
one of them is what Twitter has done

418
00:15:32,650 --> 00:15:36,880
which is to completely disable

419
00:15:34,410 --> 00:15:40,620
authenticated image requests and then

420
00:15:36,880 --> 00:15:44,140
stage rely for example on situate URLs

421
00:15:40,620 --> 00:15:45,650
another idea is to use user specific

422
00:15:44,140 --> 00:15:47,300
links for shared image

423
00:15:45,650 --> 00:15:51,290
so basically if I'm an attacker and I'm

424
00:15:47,300 --> 00:15:53,750
sharing an image with the victim then I

425
00:15:51,290 --> 00:15:55,579
don't know the URL that the victim can

426
00:15:53,750 --> 00:15:57,680
use to access the image because that URL

427
00:15:55,580 --> 00:15:59,870
is only known to the truly victim and

428
00:15:57,680 --> 00:16:01,160
finally on the server side another

429
00:15:59,870 --> 00:16:02,570
option is to deploy some of the

430
00:16:01,160 --> 00:16:04,850
mitigations that have been proposed

431
00:16:02,570 --> 00:16:07,070
against CSS cross-site request forgery

432
00:16:04,850 --> 00:16:10,160
and there's a discussion of how exactly

433
00:16:07,070 --> 00:16:10,790
to do this in the paper on the

434
00:16:10,160 --> 00:16:14,060
client-side

435
00:16:10,790 --> 00:16:15,469
one possible mitigation is to do what

436
00:16:14,060 --> 00:16:18,020
the top browser is doing which is to

437
00:16:15,470 --> 00:16:19,520
send cookies only to the domain that the

438
00:16:18,020 --> 00:16:23,120
user has entered in the address bar and

439
00:16:19,520 --> 00:16:23,689
in this case the solid attack wouldn't

440
00:16:23,120 --> 00:16:27,440
work anymore

441
00:16:23,690 --> 00:16:28,730
and finally another option that helps to

442
00:16:27,440 --> 00:16:30,740
mitigate this problem is to give more

443
00:16:28,730 --> 00:16:32,960
privacy control to users by letting

444
00:16:30,740 --> 00:16:34,940
users see and control which access

445
00:16:32,960 --> 00:16:38,050
rights they have to particular files and

446
00:16:34,940 --> 00:16:40,339
in particular to particular images

447
00:16:38,050 --> 00:16:42,500
alright so in conclusion I've presented

448
00:16:40,339 --> 00:16:44,810
leaky images which is a targeted D

449
00:16:42,500 --> 00:16:46,220
anonymization attack in the web I've

450
00:16:44,810 --> 00:16:48,319
presented the basic variant of this

451
00:16:46,220 --> 00:16:50,360
attack which allows you to track whether

452
00:16:48,320 --> 00:16:53,089
a specific single user is visiting your

453
00:16:50,360 --> 00:16:55,339
website and also an extension that works

454
00:16:53,089 --> 00:16:56,959
for groups of users it can also be used

455
00:16:55,339 --> 00:16:58,790
to link pseudonyms to each other and

456
00:16:56,959 --> 00:17:00,229
finally all of this works in the script

457
00:16:58,790 --> 00:17:03,290
list way if you want without any

458
00:17:00,230 --> 00:17:05,120
JavaScript and without any CSS be

459
00:17:03,290 --> 00:17:08,059
empirically found that this attack

460
00:17:05,119 --> 00:17:09,879
effects many sites used by hundreds of

461
00:17:08,059 --> 00:17:12,530
millions and sometimes billions of users

462
00:17:09,880 --> 00:17:14,480
so I believe that website providers and

463
00:17:12,530 --> 00:17:17,149
browser vendors should be aware of it to

464
00:17:14,480 --> 00:17:18,530
protect the privacy of users and that's

465
00:17:17,150 --> 00:17:21,730
all I have to say thanks for attention

466
00:17:18,530 --> 00:17:21,730
and I'll be happy to take questions

467
00:17:24,010 --> 00:17:28,610
okay so we have two microphones in the

468
00:17:26,540 --> 00:17:30,050
room please come up to the mic state

469
00:17:28,610 --> 00:17:33,800
your name and affiliation and your

470
00:17:30,050 --> 00:17:36,260
question Stephen check away Oberlin

471
00:17:33,800 --> 00:17:38,870
College thanks for the talk I like the

472
00:17:36,260 --> 00:17:40,970
attack it's pretty neat have you thought

473
00:17:38,870 --> 00:17:43,479
about how you could detect this and the

474
00:17:40,970 --> 00:17:48,260
wild and did you try to do that oh

475
00:17:43,480 --> 00:17:49,430
that's an interesting idea we haven't

476
00:17:48,260 --> 00:17:53,120
really thought about it I think what you

477
00:17:49,430 --> 00:17:55,670
would probably do is to check for third

478
00:17:53,120 --> 00:17:57,110
party image requests on sites that you

479
00:17:55,670 --> 00:18:00,320
might suspect to do something like this

480
00:17:57,110 --> 00:18:01,969
and then see if you as a third party can

481
00:18:00,320 --> 00:18:04,010
also access the image and if not and

482
00:18:01,970 --> 00:18:05,929
this is a shared image and this is

483
00:18:04,010 --> 00:18:08,000
likely to be I mean this could be for

484
00:18:05,929 --> 00:18:09,559
this it could potentially also be

485
00:18:08,000 --> 00:18:10,910
further reasons but one one reason could

486
00:18:09,559 --> 00:18:12,230
be that someone is actually performing

487
00:18:10,910 --> 00:18:17,390
this attack way it's a great idea but we

488
00:18:12,230 --> 00:18:20,420
haven't done it Thanks I am Colton

489
00:18:17,390 --> 00:18:21,920
Carlson from Facebook really great good

490
00:18:20,420 --> 00:18:25,910
research and an awesome talk thank you

491
00:18:21,920 --> 00:18:27,500
very much for that I am wondering if do

492
00:18:25,910 --> 00:18:31,130
you know this can be used for other

493
00:18:27,500 --> 00:18:32,929
types of media like something instead of

494
00:18:31,130 --> 00:18:34,820
images could this be replicated with I

495
00:18:32,929 --> 00:18:37,610
don't know other pieces of data have you

496
00:18:34,820 --> 00:18:39,139
yeah good good good question so it it

497
00:18:37,610 --> 00:18:40,459
would also work for some other kinds of

498
00:18:39,140 --> 00:18:44,120
media essentially everything that is

499
00:18:40,460 --> 00:18:47,240
accepted from the oh my god what's the

500
00:18:44,120 --> 00:18:50,270
name sorry

501
00:18:47,240 --> 00:18:53,450
yeah same origin policy yeah

502
00:18:50,270 --> 00:19:02,629
which which I think also includes PDFs

503
00:18:53,450 --> 00:19:05,410
and some some other files thank you hi

504
00:19:02,630 --> 00:19:07,730
this is Zane from University of Illinois

505
00:19:05,410 --> 00:19:09,260
my question I don't know you might have

506
00:19:07,730 --> 00:19:10,910
touched on this earlier because I walked

507
00:19:09,260 --> 00:19:12,890
in a little bit late but does this

508
00:19:10,910 --> 00:19:14,990
attack reveal the identity of the

509
00:19:12,890 --> 00:19:17,450
attacker in the sense that when you

510
00:19:14,990 --> 00:19:19,490
share these images does the victim get

511
00:19:17,450 --> 00:19:21,860
notified hey this person shared an image

512
00:19:19,490 --> 00:19:23,840
with you yeah great question so in some

513
00:19:21,860 --> 00:19:25,399
cases it does in many cases it does not

514
00:19:23,840 --> 00:19:27,020
it depends on the image sharing service

515
00:19:25,400 --> 00:19:29,000
there are some sites where you can share

516
00:19:27,020 --> 00:19:31,879
an image with just anyone whose email

517
00:19:29,000 --> 00:19:34,280
address you know and in some cases that

518
00:19:31,880 --> 00:19:36,620
person does not get notified that's one

519
00:19:34,280 --> 00:19:38,210
of the reasons why I mentioned giving

520
00:19:36,620 --> 00:19:40,129
more privacy control to users as well

521
00:19:38,210 --> 00:19:41,960
possible mitigation which is in many of

522
00:19:40,130 --> 00:19:43,880
these sites or you don't even see who

523
00:19:41,960 --> 00:19:46,640
has shared an image of you so you have

524
00:19:43,880 --> 00:19:49,880
no idea who who might even be performing

525
00:19:46,640 --> 00:19:51,980
this attack thank you all right then

526
00:19:49,880 --> 00:19:58,480
let's think Michael again

527
00:19:51,980 --> 00:19:58,480
[Applause]

