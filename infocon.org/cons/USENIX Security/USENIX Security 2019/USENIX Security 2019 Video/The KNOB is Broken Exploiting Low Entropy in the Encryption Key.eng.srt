1
00:00:10,120 --> 00:00:14,139
all right so thank you David for the

2
00:00:12,160 --> 00:00:16,209
presentation my name is Daniel Antonio

3
00:00:14,139 --> 00:00:18,340
Lee and this presentation is about the

4
00:00:16,209 --> 00:00:21,160
knob is broken exploiting low entropy

5
00:00:18,340 --> 00:00:23,200
encryption key negotiation of Bluetooth

6
00:00:21,160 --> 00:00:25,240
this is a joint work witness step an

7
00:00:23,200 --> 00:00:28,360
hour from sista and Casper absent from

8
00:00:25,240 --> 00:00:30,250
the University of Oxford everyone is

9
00:00:28,360 --> 00:00:32,409
familiar with Bluetooth Bluetooth basic

10
00:00:30,250 --> 00:00:35,110
rate extended data rate also known as

11
00:00:32,409 --> 00:00:37,390
Bluetooth classic this is a wireless

12
00:00:35,110 --> 00:00:39,089
technology that is pervasive and it is

13
00:00:37,390 --> 00:00:42,520
the de facto standard for wireless

14
00:00:39,090 --> 00:00:44,890
low-power area networks it is used by

15
00:00:42,520 --> 00:00:48,489
all sorts of devices including mobile

16
00:00:44,890 --> 00:00:51,820
phones cars medical devices and even

17
00:00:48,489 --> 00:00:54,070
industrial ones and Bluetooth has a wide

18
00:00:51,820 --> 00:00:56,829
attack surface and it is providing some

19
00:00:54,070 --> 00:01:00,030
custom security mechanisms at the link

20
00:00:56,829 --> 00:01:03,449
layer these security mechanisms are

21
00:01:00,030 --> 00:01:06,250
specified in an open but rather complex

22
00:01:03,449 --> 00:01:09,070
specification that is 2,000 pages long

23
00:01:06,250 --> 00:01:11,680
and there is no public reference

24
00:01:09,070 --> 00:01:13,720
implementation of the of these security

25
00:01:11,680 --> 00:01:17,770
mechanisms and some of them are even

26
00:01:13,720 --> 00:01:20,200
implemented in a closed source wait so

27
00:01:17,770 --> 00:01:21,759
let's review the main security

28
00:01:20,200 --> 00:01:25,149
mechanisms of Bluetooth let's say that

29
00:01:21,759 --> 00:01:28,509
we have two devices Alice that is the

30
00:01:25,149 --> 00:01:31,479
master and Bob that is the slave these

31
00:01:28,509 --> 00:01:34,929
devices never meet before and what they

32
00:01:31,479 --> 00:01:37,330
do they do pairing pairing is a

33
00:01:34,929 --> 00:01:40,420
mechanism that is used to establish a

34
00:01:37,330 --> 00:01:43,030
long term secret that in Bluetooth terms

35
00:01:40,420 --> 00:01:46,240
is called blinky and indicated with KL

36
00:01:43,030 --> 00:01:48,759
and specifically the best way to perform

37
00:01:46,240 --> 00:01:50,649
pairing in Bluetooth is using secure

38
00:01:48,759 --> 00:01:52,720
simple pairing that is based on elliptic

39
00:01:50,649 --> 00:01:56,020
curve diffie-hellman and the long term

40
00:01:52,720 --> 00:01:57,420
secret can be optionally authenticated

41
00:01:56,020 --> 00:01:59,800
Peter challenged business response

42
00:01:57,420 --> 00:02:01,750
protocol and that it's why sometimes

43
00:01:59,800 --> 00:02:03,340
when you pair your phone with your

44
00:02:01,750 --> 00:02:09,009
laptop you see that you have to enter a

45
00:02:03,340 --> 00:02:10,300
numeric code on both devices then if two

46
00:02:09,008 --> 00:02:12,339
devices want to establish an encrypted

47
00:02:10,300 --> 00:02:14,319
session then they are an encryption key

48
00:02:12,340 --> 00:02:16,390
negotiation protocol that is used to

49
00:02:14,319 --> 00:02:18,399
establish a KC prime that is an

50
00:02:16,390 --> 00:02:21,640
encryption key you can think about it as

51
00:02:18,400 --> 00:02:22,190
a as a session key and this session key

52
00:02:21,640 --> 00:02:25,820
is you

53
00:02:22,190 --> 00:02:28,340
to encrypt and decrypt the packets

54
00:02:25,820 --> 00:02:30,049
either using is the easier of stream

55
00:02:28,340 --> 00:02:33,530
cipher in case you are using legacy

56
00:02:30,050 --> 00:02:35,600
security mode or AES CCM if both devices

57
00:02:33,530 --> 00:02:39,470
are supporting what is known as

58
00:02:35,600 --> 00:02:41,269
Bluetooth secure connections and in the

59
00:02:39,470 --> 00:02:43,670
rest of this presentation I'm going to

60
00:02:41,270 --> 00:02:46,370
present our attack the key negotiation

61
00:02:43,670 --> 00:02:48,380
of Bluetooth attack that is a map are

62
00:02:46,370 --> 00:02:51,380
capable of computing the encryption key

63
00:02:48,380 --> 00:02:53,930
of any Bluetooth link regardless the

64
00:02:51,380 --> 00:02:55,940
usage of the strongest Bluetooth

65
00:02:53,930 --> 00:02:58,250
security mode such as secure simple

66
00:02:55,940 --> 00:03:00,410
pairing and secure connections our

67
00:02:58,250 --> 00:03:02,990
attack completely breaks the security

68
00:03:00,410 --> 00:03:05,870
guarantees of Bluetooth an attacker is

69
00:03:02,990 --> 00:03:09,470
capable of decrypting all the packets

70
00:03:05,870 --> 00:03:12,320
and even injecting valid packets in the

71
00:03:09,470 --> 00:03:14,570
Bluetooth link so let's see what is the

72
00:03:12,320 --> 00:03:16,790
key negotiation of bluetooth about this

73
00:03:14,570 --> 00:03:20,810
is an high level scheme the goal of this

74
00:03:16,790 --> 00:03:23,239
protocol is to compute a session key

75
00:03:20,810 --> 00:03:25,730
starting from a long term shared secret

76
00:03:23,240 --> 00:03:26,780
if you if you start at the top of the

77
00:03:25,730 --> 00:03:29,090
figure we see that there is an

78
00:03:26,780 --> 00:03:33,350
encryption key generation function that

79
00:03:29,090 --> 00:03:35,840
takes as input the long-term secret a

80
00:03:33,350 --> 00:03:38,570
bunch of nancies and the Bluetooth

81
00:03:35,840 --> 00:03:41,780
address of the slave and it is computing

82
00:03:38,570 --> 00:03:45,350
KC that is a key with 16 bytes of

83
00:03:41,780 --> 00:03:47,239
entropy this key is not used as the as

84
00:03:45,350 --> 00:03:49,130
the session key but is processed by an

85
00:03:47,239 --> 00:03:51,380
entropy reduction function that is used

86
00:03:49,130 --> 00:03:57,709
to modify the entropy of the session key

87
00:03:51,380 --> 00:04:00,530
to n bytes and this M number is computed

88
00:03:57,709 --> 00:04:03,860
from an entropy negotiation phase that

89
00:04:00,530 --> 00:04:05,570
is performed by Alice and Bob the

90
00:04:03,860 --> 00:04:07,459
problem with the encryption key

91
00:04:05,570 --> 00:04:09,109
negotiation of Bluetooth is the fact

92
00:04:07,459 --> 00:04:12,320
that the Bluetooth specification allows

93
00:04:09,110 --> 00:04:16,489
to set entropy values as low as 1 byte

94
00:04:12,320 --> 00:04:20,269
and it does not authenticate the entropy

95
00:04:16,488 --> 00:04:22,880
negotiation phase and we are we found

96
00:04:20,269 --> 00:04:25,430
this vulnerability and we exploited it

97
00:04:22,880 --> 00:04:26,719
in our attack that is our main

98
00:04:25,430 --> 00:04:28,930
contribution the key negotiation of

99
00:04:26,720 --> 00:04:32,470
Bluetooth attack basically our attacks

100
00:04:28,930 --> 00:04:35,960
our attack is capable of setting the

101
00:04:32,470 --> 00:04:39,979
entropy of any encryption key to 1

102
00:04:35,960 --> 00:04:42,080
brute force it in real time the attack

103
00:04:39,979 --> 00:04:44,030
affect any standard compliant Bluetooth

104
00:04:42,080 --> 00:04:47,840
device regardless the Bluetooth version

105
00:04:44,030 --> 00:04:50,119
the manufacturer and the users of secure

106
00:04:47,840 --> 00:04:52,489
simple pairing and secure connection the

107
00:04:50,120 --> 00:04:54,500
consequence of the attack is that an

108
00:04:52,490 --> 00:04:57,080
attacker is capable of decrypting the

109
00:04:54,500 --> 00:05:00,440
packets or the packets exchanged by two

110
00:04:57,080 --> 00:05:03,650
victims and to introduce new packet in

111
00:05:00,440 --> 00:05:05,599
the Bluetooth link and this effect is a

112
00:05:03,650 --> 00:05:08,060
simple trial and can be mounted in

113
00:05:05,599 --> 00:05:10,460
parallel this means that their attacker

114
00:05:08,060 --> 00:05:12,770
can target multiple links even in

115
00:05:10,460 --> 00:05:18,049
multiple pika nets at the same at the

116
00:05:12,770 --> 00:05:21,409
same time the knob packs as four main

117
00:05:18,050 --> 00:05:24,710
stages in the first stage Alice and Bob

118
00:05:21,410 --> 00:05:26,449
are pairing in absence of Eve using the

119
00:05:24,710 --> 00:05:27,320
strongest security mechanisms so secure

120
00:05:26,449 --> 00:05:29,120
simple pairing

121
00:05:27,320 --> 00:05:31,759
they are establishing a long-term secret

122
00:05:29,120 --> 00:05:35,389
and the attacker is not there then in

123
00:05:31,759 --> 00:05:38,030
the second phase of the attack a Alice

124
00:05:35,389 --> 00:05:40,250
Bob wants to establish a a new session

125
00:05:38,030 --> 00:05:42,409
and encrypted session and Charlie is

126
00:05:40,250 --> 00:05:44,690
eating is in Bluetooth range with with

127
00:05:42,409 --> 00:05:47,449
editing then Charlie is able to

128
00:05:44,690 --> 00:05:50,210
manipulate the entropy negotiation phase

129
00:05:47,449 --> 00:05:52,340
of Bluetooth and let the two week Tina

130
00:05:50,210 --> 00:05:56,770
go she ate an encryption key with one

131
00:05:52,340 --> 00:05:59,750
byte of entropy and lately charlie is

132
00:05:56,770 --> 00:06:01,880
capable of eavesdropping ciphertext and

133
00:05:59,750 --> 00:06:04,400
using the cipher text as an Oracle to

134
00:06:01,880 --> 00:06:08,150
brute force the encryption key and the

135
00:06:04,400 --> 00:06:10,008
brute force is in real-time because if

136
00:06:08,150 --> 00:06:11,710
you use an encryption key with one byte

137
00:06:10,009 --> 00:06:19,310
of entropy then you have to brute-force

138
00:06:11,710 --> 00:06:21,830
one key out of 256 possibilities so now

139
00:06:19,310 --> 00:06:24,289
let's see how does the entropy

140
00:06:21,830 --> 00:06:27,169
negotiation of Bluetooth work this is

141
00:06:24,289 --> 00:06:30,349
the face that is targeted by the DEA

142
00:06:27,169 --> 00:06:31,060
Packer the entropy negotiation is

143
00:06:30,349 --> 00:06:34,190
neither

144
00:06:31,060 --> 00:06:37,580
integrity protected and nor encrypted it

145
00:06:34,190 --> 00:06:39,830
is run over the air by Alice and Bob

146
00:06:37,580 --> 00:06:42,320
using the link manager protocol and if

147
00:06:39,830 --> 00:06:44,448
we look at the central part of the

148
00:06:42,320 --> 00:06:46,219
picture we have three packets that are

149
00:06:44,449 --> 00:06:48,370
responsible for the negotiation of the

150
00:06:46,219 --> 00:06:51,500
entropy

151
00:06:48,370 --> 00:06:54,650
in in the first packet Alice is

152
00:06:51,500 --> 00:06:57,440
proposing a 16 bytes of entropy this is

153
00:06:54,650 --> 00:07:00,950
the maximum entropy there you allowed by

154
00:06:57,440 --> 00:07:03,800
the standard Bob is saying no why don't

155
00:07:00,950 --> 00:07:05,150
we use one byte of entropy because this

156
00:07:03,800 --> 00:07:06,890
is a standard compliant values the

157
00:07:05,150 --> 00:07:09,140
minimum what is the minimum value

158
00:07:06,890 --> 00:07:11,900
allowed by the standard and then Alice

159
00:07:09,140 --> 00:07:13,940
is accepting the the proposal Bob so as

160
00:07:11,900 --> 00:07:16,729
you can see the protocol is very simple

161
00:07:13,940 --> 00:07:18,620
and it is not integrity protected and at

162
00:07:16,730 --> 00:07:21,230
the end of this protocol the Alice and

163
00:07:18,620 --> 00:07:24,680
Bob will establish a session key with 1

164
00:07:21,230 --> 00:07:27,320
by 20 and this means that traveling that

165
00:07:24,680 --> 00:07:30,680
is a remote attacker that of course is

166
00:07:27,320 --> 00:07:32,599
in Bluetooth range with Alice and Bob

167
00:07:30,680 --> 00:07:36,410
with a man-in-the-middle attack with a

168
00:07:32,600 --> 00:07:39,350
simple-minded attack can lead to victim

169
00:07:36,410 --> 00:07:42,350
to victims negotiate any entropy value

170
00:07:39,350 --> 00:07:44,510
in this figure we are seeing an

171
00:07:42,350 --> 00:07:47,000
adversarial entropy negotiation that

172
00:07:44,510 --> 00:07:49,940
results in a session key with one byte

173
00:07:47,000 --> 00:07:51,980
of entropy alice is sending sixteen sub

174
00:07:49,940 --> 00:07:54,710
is intercepting the message is and it is

175
00:07:51,980 --> 00:07:56,450
changing it to a proposal of one Bob is

176
00:07:54,710 --> 00:07:59,750
happy about it because it is a standard

177
00:07:56,450 --> 00:08:01,969
complain value and Charlie intercept the

178
00:07:59,750 --> 00:08:05,410
accepting message from Bob and change it

179
00:08:01,970 --> 00:08:08,720
to entry proposal of one byte Alice

180
00:08:05,410 --> 00:08:12,260
accept it and Charlie then drops the

181
00:08:08,720 --> 00:08:13,130
acceptance message compromise and at the

182
00:08:12,260 --> 00:08:16,840
end of this session

183
00:08:13,130 --> 00:08:22,330
Charlie is able to establish a shared

184
00:08:16,840 --> 00:08:26,530
session key with one by two entered then

185
00:08:22,330 --> 00:08:30,770
Charlie has to brute-force the D key and

186
00:08:26,530 --> 00:08:33,679
the key is one byte of entropy if Alice

187
00:08:30,770 --> 00:08:36,980
and Bob are using secure connections

188
00:08:33,679 --> 00:08:40,510
then the site renews is a SCCM and the

189
00:08:36,980 --> 00:08:44,870
key is the number between 0 and 255

190
00:08:40,510 --> 00:08:48,040
instead if the victims are using legacy

191
00:08:44,870 --> 00:08:52,150
security mechanism the key is a number

192
00:08:48,040 --> 00:08:55,490
still a number between 0 and 255

193
00:08:52,150 --> 00:08:57,500
multiplied by a constant this is a

194
00:08:55,490 --> 00:09:01,090
multiplication in Galois field but in

195
00:08:57,500 --> 00:09:01,090
both cases the

196
00:09:01,130 --> 00:09:06,890
the tender appears as one bite and it is

197
00:09:04,880 --> 00:09:09,380
interesting to note that even if you

198
00:09:06,890 --> 00:09:11,449
reduce the entropy of the of the session

199
00:09:09,380 --> 00:09:16,160
key you are not changing the length of

200
00:09:11,450 --> 00:09:18,380
of the key and this means that even if -

201
00:09:16,160 --> 00:09:21,170
victim won't want to use the entropy

202
00:09:18,380 --> 00:09:23,480
value lower than then you know the

203
00:09:21,170 --> 00:09:25,010
maximum value allowed that is 16 bytes

204
00:09:23,480 --> 00:09:29,240
they are incurring in the same

205
00:09:25,010 --> 00:09:34,040
computational performance as the the

206
00:09:29,240 --> 00:09:36,650
best case we implemented the gnome

207
00:09:34,040 --> 00:09:39,410
attack and this is an example of an

208
00:09:36,650 --> 00:09:42,140
attack that we're on target even two

209
00:09:39,410 --> 00:09:44,360
victims a nexus 5 and the motorola g3

210
00:09:42,140 --> 00:09:47,240
and in this case the attacker is able to

211
00:09:44,360 --> 00:09:50,180
decrypt a file that was exchanged

212
00:09:47,240 --> 00:09:53,750
between the Nexus and the Motorola and

213
00:09:50,180 --> 00:09:57,560
the file was encrypted over a Bluetooth

214
00:09:53,750 --> 00:10:01,580
link and the attacker is using a laptop

215
00:09:57,560 --> 00:10:02,780
and an Innova tooth unfortunately I

216
00:10:01,580 --> 00:10:04,010
don't have time to explain the

217
00:10:02,780 --> 00:10:06,050
implementation details but our

218
00:10:04,010 --> 00:10:10,069
implementation is based on the internal

219
00:10:06,050 --> 00:10:15,140
blue that is a an open source project

220
00:10:10,070 --> 00:10:17,930
and we were able to implement obtain the

221
00:10:15,140 --> 00:10:19,760
same results of an attack of I mean the

222
00:10:17,930 --> 00:10:22,699
middle attack over there just by

223
00:10:19,760 --> 00:10:25,760
patching the filmer of the of the Nexus

224
00:10:22,700 --> 00:10:27,590
5 because the entropy negotiation is

225
00:10:25,760 --> 00:10:31,340
implemented in the fira

226
00:10:27,590 --> 00:10:35,150
and we were able to use this setup to

227
00:10:31,340 --> 00:10:36,920
evaluate many other devices and now I'm

228
00:10:35,150 --> 00:10:41,240
going to summarize our evaluation

229
00:10:36,920 --> 00:10:43,099
results in this table and in the first

230
00:10:41,240 --> 00:10:44,960
column we have the Bluetooth chip in the

231
00:10:43,100 --> 00:10:46,640
second column we have the device name

232
00:10:44,960 --> 00:10:49,910
and in the third column we have the

233
00:10:46,640 --> 00:10:52,460
vulnerable check mark if we see a check

234
00:10:49,910 --> 00:10:55,069
mark this means that the device accepts

235
00:10:52,460 --> 00:10:57,320
one byte of entropy and that means that

236
00:10:55,070 --> 00:10:59,480
the device is vulnerable to the no

237
00:10:57,320 --> 00:11:01,880
attack as we can see all the vices are

238
00:10:59,480 --> 00:11:03,890
goona vulnerable and our evaluation

239
00:11:01,880 --> 00:11:05,500
confirms the fact that the no attack is

240
00:11:03,890 --> 00:11:07,850
a serious threat and it is a

241
00:11:05,500 --> 00:11:10,220
architectural level because we have

242
00:11:07,850 --> 00:11:13,430
several manufacturers involved such as

243
00:11:10,220 --> 00:11:15,500
Qualcomm Intel apple and

244
00:11:13,430 --> 00:11:17,560
come and we have also different

245
00:11:15,500 --> 00:11:22,550
Bluetooth versions that are vulnerable

246
00:11:17,560 --> 00:11:24,829
5.0 Bluetooth version 4.2 and if if we

247
00:11:22,550 --> 00:11:27,529
we look at the second part of the table

248
00:11:24,830 --> 00:11:32,540
we have also devices using bluetooth

249
00:11:27,529 --> 00:11:37,209
version 4.1 and versions 4.0 and and

250
00:11:32,540 --> 00:11:40,459
lower than that interestingly the Apple

251
00:11:37,209 --> 00:11:44,089
w1 chip that is a proprietary chip used

252
00:11:40,459 --> 00:11:47,239
by using products such as airports is

253
00:11:44,089 --> 00:11:50,630
vulnerable to the attack but only to a

254
00:11:47,240 --> 00:11:52,670
partial key downgrade so the chip is

255
00:11:50,630 --> 00:11:56,480
accepting seven bytes of entropy but it

256
00:11:52,670 --> 00:11:59,479
is it is still vulnerable and if you

257
00:11:56,480 --> 00:12:00,800
look at the specification and if and if

258
00:11:59,480 --> 00:12:03,380
you look specifically at the entropy

259
00:12:00,800 --> 00:12:04,939
negotiation phase we we see that the

260
00:12:03,380 --> 00:12:08,209
specification is saying okay the key

261
00:12:04,940 --> 00:12:10,820
size might vary between 1 and 16 octet

262
00:12:08,209 --> 00:12:13,250
16 bytes and it is providing two main

263
00:12:10,820 --> 00:12:16,360
reasons why this feature is included the

264
00:12:13,250 --> 00:12:18,770
first one is to cope with different

265
00:12:16,360 --> 00:12:21,110
requirements for export cryptographic

266
00:12:18,770 --> 00:12:24,110
algorithm and the second one is to

267
00:12:21,110 --> 00:12:26,000
facilitate future upgrades it is also

268
00:12:24,110 --> 00:12:28,370
mentioning the fact that increasing the

269
00:12:26,000 --> 00:12:32,660
key size is the is the most effective

270
00:12:28,370 --> 00:12:34,760
way to face to combat the increased

271
00:12:32,660 --> 00:12:37,880
computational power of the opponent side

272
00:12:34,760 --> 00:12:39,439
but however it is not coping with the

273
00:12:37,880 --> 00:12:44,150
fact that an attacker can also decrease

274
00:12:39,440 --> 00:12:47,750
the entropy of the of the game so it is

275
00:12:44,150 --> 00:12:49,069
it is still unknown why this feature

276
00:12:47,750 --> 00:12:50,959
actually is parked the entropy

277
00:12:49,070 --> 00:12:56,870
negotiation feature is part of the of

278
00:12:50,959 --> 00:12:59,209
the specification and when we discovered

279
00:12:56,870 --> 00:13:00,500
the vulnerability we had to do

280
00:12:59,209 --> 00:13:02,000
responsible disclosure with the

281
00:13:00,500 --> 00:13:06,620
Bluetooth special interest group at wid

282
00:13:02,000 --> 00:13:08,690
cert the vulnerability was discovered in

283
00:13:06,620 --> 00:13:10,970
May last year and it was exploited the

284
00:13:08,690 --> 00:13:13,760
first time in October last year

285
00:13:10,970 --> 00:13:16,550
yesterday actually our embargo ended we

286
00:13:13,760 --> 00:13:21,020
got the CD and we got also bit of media

287
00:13:16,550 --> 00:13:22,599
coverage and many industry participated

288
00:13:21,020 --> 00:13:26,829
in the responsible disclosure because

289
00:13:22,600 --> 00:13:30,700
being a standard compliant attack

290
00:13:26,830 --> 00:13:32,530
all industry were affected by it and as

291
00:13:30,700 --> 00:13:34,720
part of our responsible disclosure we

292
00:13:32,530 --> 00:13:37,209
provided effective legacy compliant and

293
00:13:34,720 --> 00:13:39,220
non legacy complaint countermeasures the

294
00:13:37,210 --> 00:13:44,110
most straightforward legacy compliant

295
00:13:39,220 --> 00:13:48,910
countermeasure is to set the entropy to

296
00:13:44,110 --> 00:13:51,100
16 bytes in the femur otherwise an

297
00:13:48,910 --> 00:13:54,910
alternative countermeasure is to check

298
00:13:51,100 --> 00:13:57,130
the amount of entropy after the key

299
00:13:54,910 --> 00:13:59,800
negotiation phase of bluetooth is ended

300
00:13:57,130 --> 00:14:01,960
and eventually tear down the connection

301
00:13:59,800 --> 00:14:04,359
if n does not meet minimum requirements

302
00:14:01,960 --> 00:14:10,090
and this type of countermeasures is

303
00:14:04,360 --> 00:14:15,910
already employed by Microsoft Apple and

304
00:14:10,090 --> 00:14:17,830
other operating system vendors otherwise

305
00:14:15,910 --> 00:14:19,630
you can optionally think about this

306
00:14:17,830 --> 00:14:22,750
trusting the Bluetooth link layer ok you

307
00:14:19,630 --> 00:14:24,700
say I don't trust Bluetooth let let me

308
00:14:22,750 --> 00:14:26,500
implement something on top of it let me

309
00:14:24,700 --> 00:14:29,380
run TLS on top of Bluetooth and whatever

310
00:14:26,500 --> 00:14:30,940
right non legacy compliant

311
00:14:29,380 --> 00:14:33,910
countermeasure so we have to remember

312
00:14:30,940 --> 00:14:36,250
that when we run this encryption key

313
00:14:33,910 --> 00:14:38,709
negotiation protocol the master and the

314
00:14:36,250 --> 00:14:41,800
slave are already sharing the secret

315
00:14:38,710 --> 00:14:44,380
that is the link key and so they can use

316
00:14:41,800 --> 00:14:47,770
the link key to in a key derivation

317
00:14:44,380 --> 00:14:51,700
function to generate a new key that can

318
00:14:47,770 --> 00:14:53,380
be used to integrity protect the the

319
00:14:51,700 --> 00:14:56,590
protocol because Indian we don't care

320
00:14:53,380 --> 00:14:58,120
about encryption because encryption can

321
00:14:56,590 --> 00:15:00,130
be defeated by the attacker because if

322
00:14:58,120 --> 00:15:02,530
the cipher is malleable then the

323
00:15:00,130 --> 00:15:07,060
attacker can change the content of the

324
00:15:02,530 --> 00:15:08,500
ciphertext to lower the entropy of the

325
00:15:07,060 --> 00:15:12,099
key but what we want is integrity

326
00:15:08,500 --> 00:15:14,230
protection in this case otherwise we can

327
00:15:12,100 --> 00:15:17,200
completely get rid of the entropy

328
00:15:14,230 --> 00:15:21,340
negotiation protocol from the from the

329
00:15:17,200 --> 00:15:23,410
specification so in conclusion in the

330
00:15:21,340 --> 00:15:25,600
digital we we describe the key

331
00:15:23,410 --> 00:15:27,780
negotiation of bluetooth attack this

332
00:15:25,600 --> 00:15:31,270
attack is capable of reducing the

333
00:15:27,780 --> 00:15:33,550
entropy of any encryption key to one

334
00:15:31,270 --> 00:15:36,760
byte and to brute-force the key in

335
00:15:33,550 --> 00:15:38,530
real-time the no batac is that at the

336
00:15:36,760 --> 00:15:39,319
architectural level it is a standard

337
00:15:38,530 --> 00:15:42,290
compliant attack

338
00:15:39,320 --> 00:15:44,240
and it affects any standard compliant

339
00:15:42,290 --> 00:15:46,790
Bluetooth device regardless the

340
00:15:44,240 --> 00:15:49,010
manufacturer regardless the security

341
00:15:46,790 --> 00:15:52,099
modes that are used in regardless the

342
00:15:49,010 --> 00:15:54,020
Bluetooth version the attack completely

343
00:15:52,100 --> 00:15:55,820
breaks the security guarantees of

344
00:15:54,020 --> 00:15:57,920
Bluetooth that Bluetooth is providing at

345
00:15:55,820 --> 00:16:00,290
the link layer because it allows an

346
00:15:57,920 --> 00:16:02,120
attacker to decrypt all the packets that

347
00:16:00,290 --> 00:16:04,099
are exchanged by the victims and to

348
00:16:02,120 --> 00:16:05,630
inject valid packets in the in the

349
00:16:04,100 --> 00:16:08,420
network and the attacker can be mounted

350
00:16:05,630 --> 00:16:11,510
in parallel on multiple links even in

351
00:16:08,420 --> 00:16:15,290
different pika nets and we implemented

352
00:16:11,510 --> 00:16:20,390
the knowbut a can be evaluated on 14

353
00:16:15,290 --> 00:16:23,860
different chips all the chips were were

354
00:16:20,390 --> 00:16:27,800
vulnerable and we tested a total of 21

355
00:16:23,860 --> 00:16:29,510
devices using those chips and as part of

356
00:16:27,800 --> 00:16:31,569
our responsible disclosure we provided

357
00:16:29,510 --> 00:16:34,370
effective legacy on a legacy

358
00:16:31,570 --> 00:16:37,220
countermeasures and please if you want

359
00:16:34,370 --> 00:16:39,590
to obtain more information visit nob

360
00:16:37,220 --> 00:16:41,480
attack.com this website will contain the

361
00:16:39,590 --> 00:16:44,630
proof-of-concept code that I sent to

362
00:16:41,480 --> 00:16:46,880
cert and it is containing a link to our

363
00:16:44,630 --> 00:16:49,760
research paper where we are describing

364
00:16:46,880 --> 00:16:51,470
more in details how we implemented the

365
00:16:49,760 --> 00:16:54,140
attack I didn't have time to talk about

366
00:16:51,470 --> 00:16:57,010
it and I thank you for your time and I'm

367
00:16:54,140 --> 00:16:57,010
happy to take questions

368
00:16:57,100 --> 00:17:02,669
[Applause]

369
00:17:03,400 --> 00:17:08,960
hi thank you for the printed read this

370
00:17:07,280 --> 00:17:12,859
might be a knife question but how do you

371
00:17:08,960 --> 00:17:16,280
prevent initial messages from a list for

372
00:17:12,859 --> 00:17:18,649
instance to arrive to be received by

373
00:17:16,280 --> 00:17:21,379
Charlie Oh bye bye Bob during the

374
00:17:18,650 --> 00:17:23,210
entropy negotiation yeah you can you can

375
00:17:21,380 --> 00:17:25,220
gender son you can use signal

376
00:17:23,210 --> 00:17:28,700
manipulation technique at the physical

377
00:17:25,220 --> 00:17:30,260
layer and you can you can prevent you

378
00:17:28,700 --> 00:17:37,370
can change the content of the message

379
00:17:30,260 --> 00:17:40,490
you can okay okay thanks sure hi thank

380
00:17:37,370 --> 00:17:43,010
you for the talk um am I correct that

381
00:17:40,490 --> 00:17:45,260
this only works if I'm there for the

382
00:17:43,010 --> 00:17:47,870
initial communication that establishes

383
00:17:45,260 --> 00:17:50,210
the connection yes the attacker has to

384
00:17:47,870 --> 00:17:52,250
be present when the two devices are

385
00:17:50,210 --> 00:17:54,440
establish establishing a session but

386
00:17:52,250 --> 00:17:56,780
this happens all the times so you pair

387
00:17:54,440 --> 00:17:58,490
once but then every time you use your

388
00:17:56,780 --> 00:18:00,440
headset for example with your laptop you

389
00:17:58,490 --> 00:18:03,440
are you are doing this thing and the new

390
00:18:00,440 --> 00:18:05,990
session key is computed so the attacker

391
00:18:03,440 --> 00:18:08,990
has to be present it's there a way that

392
00:18:05,990 --> 00:18:11,540
I can force this renegotiation that I

393
00:18:08,990 --> 00:18:18,350
can force the new session to start yeah

394
00:18:11,540 --> 00:18:23,060
yeah that ways definitely thank you so

395
00:18:18,350 --> 00:18:27,290
you mentioned two reasons for why this

396
00:18:23,060 --> 00:18:29,540
feature exists the first one is clear

397
00:18:27,290 --> 00:18:33,080
and obvious the second one is not

398
00:18:29,540 --> 00:18:35,720
completely clear what is meant by that

399
00:18:33,080 --> 00:18:39,860
like how would you upgrade security by

400
00:18:35,720 --> 00:18:42,680
including a feature that reduces the the

401
00:18:39,860 --> 00:18:43,840
entropy of the key yeah I mean I don't

402
00:18:42,680 --> 00:18:46,780
know

403
00:18:43,840 --> 00:18:51,540
I don't know the truth right so I can

404
00:18:46,780 --> 00:18:56,129
give my opinion about it but yeah okay

405
00:18:51,540 --> 00:18:56,129
okay thanks sorry

406
00:18:56,140 --> 00:19:01,510
following your responsible disclosure

407
00:18:58,510 --> 00:19:03,490
did you see many of those legacy

408
00:19:01,510 --> 00:19:05,250
compliant countermeasures being adopted

409
00:19:03,490 --> 00:19:08,020
is this something that would be

410
00:19:05,250 --> 00:19:09,310
applicable on an apple piano today yeah

411
00:19:08,020 --> 00:19:11,860
yeah definitely yes there are some

412
00:19:09,310 --> 00:19:13,030
advisories that you can check online if

413
00:19:11,860 --> 00:19:15,909
you go to no attack.com

414
00:19:13,030 --> 00:19:17,860
then there is a link to the CD you and

415
00:19:15,910 --> 00:19:21,510
then you can see all the different

416
00:19:17,860 --> 00:19:25,030
advisories by Microsoft my android by

417
00:19:21,510 --> 00:19:26,920
iOS Mac OS okay and so like iOS for

418
00:19:25,030 --> 00:19:30,240
example has adopted some of those

419
00:19:26,920 --> 00:19:32,500
countermeasures yes excellent thank you

420
00:19:30,240 --> 00:19:33,540
another round of applause thank you very

421
00:19:32,500 --> 00:19:37,490
much for that

422
00:19:33,540 --> 00:19:37,490
[Applause]

