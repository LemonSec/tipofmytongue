1
00:00:10,790 --> 00:00:15,959
and for introduction thank you for

2
00:00:13,679 --> 00:00:18,450
coming I'm with Universal Chinese

3
00:00:15,960 --> 00:00:21,660
the mutants I will do presentation for

4
00:00:18,450 --> 00:00:23,130
hypo from packing University this is

5
00:00:21,660 --> 00:00:34,320
John Walker between packing University

6
00:00:23,130 --> 00:00:36,450
and the Penn State password-based

7
00:00:34,320 --> 00:00:39,630
encryption is a fundamental scheme in

8
00:00:36,450 --> 00:00:43,590
many rewards system of authentication or

9
00:00:39,630 --> 00:00:46,980
encryption we usually use passwords to

10
00:00:43,590 --> 00:00:49,980
unlock a mobile phone or login from the

11
00:00:46,980 --> 00:00:53,578
internet service we also use password

12
00:00:49,980 --> 00:00:57,690
for encryption to protect our private

13
00:00:53,579 --> 00:01:03,239
data in these cases PPE is the

14
00:00:57,690 --> 00:01:07,710
indispensable PBE has a fundamental

15
00:01:03,239 --> 00:01:12,450
defect the key is password as previous

16
00:01:07,710 --> 00:01:14,070
speaker said it is easy to be cracked to

17
00:01:12,450 --> 00:01:18,050
address this issue through common

18
00:01:14,070 --> 00:01:20,610
measures used the first one called Mary

19
00:01:18,050 --> 00:01:24,210
Mary's to increase the complexity of

20
00:01:20,610 --> 00:01:26,820
encryption for example so sorting can

21
00:01:24,210 --> 00:01:30,119
make attacker to the cracking for each

22
00:01:26,820 --> 00:01:33,329
user using special password hashing

23
00:01:30,119 --> 00:01:36,420
function can directly increase that time

24
00:01:33,329 --> 00:01:41,658
complexity but also increase the

25
00:01:36,420 --> 00:01:41,659
legitimate users cost by the same factor

26
00:01:42,770 --> 00:01:48,750
the second account measure is to harden

27
00:01:46,200 --> 00:01:51,509
passwords with other factors some

28
00:01:48,750 --> 00:01:55,229
typical factors are fingerprint iris

29
00:01:51,509 --> 00:01:58,259
smart car and a smart phone but it needs

30
00:01:55,229 --> 00:02:02,850
extra device to read these factors or be

31
00:01:58,259 --> 00:02:05,880
a factor this performs worse than single

32
00:02:02,850 --> 00:02:08,269
password and dependability in addition

33
00:02:05,880 --> 00:02:11,190
if the device factor gets stolen or lost

34
00:02:08,270 --> 00:02:13,520
the encrypted message cannot be

35
00:02:11,190 --> 00:02:13,520
recovered

36
00:02:15,830 --> 00:02:22,070
jurors and the Wriston part propose a

37
00:02:18,170 --> 00:02:26,059
normal count Mary on euro equipped 14

38
00:02:22,070 --> 00:02:28,040
named honey encryption this idea is to

39
00:02:26,060 --> 00:02:30,950
generate the decoy a message to confuse

40
00:02:28,040 --> 00:02:34,120
attackers this countermeasure does not

41
00:02:30,950 --> 00:02:37,940
increase the cost of legitimate user

42
00:02:34,120 --> 00:02:40,540
does not decline on deployability and a

43
00:02:37,940 --> 00:02:44,180
significant delay improved the security

44
00:02:40,540 --> 00:02:45,769
as shown in a rat figure honey

45
00:02:44,180 --> 00:02:47,750
encryption user distributing

46
00:02:45,770 --> 00:02:51,020
transforming coder to encode a message

47
00:02:47,750 --> 00:02:53,380
to a steal that includes the seed the

48
00:02:51,020 --> 00:02:57,410
steal the follows a uniform distribution

49
00:02:53,380 --> 00:03:00,370
if an attacker used a incorrect key to

50
00:02:57,410 --> 00:03:04,100
decrypt she will get a random seed

51
00:03:00,370 --> 00:03:06,910
decoding the seed she gets a plausible

52
00:03:04,100 --> 00:03:06,910
decoy message

53
00:03:11,130 --> 00:03:16,680
George and the Reston Park proposed the

54
00:03:13,530 --> 00:03:21,000
iced tea with honey encryption here I

55
00:03:16,680 --> 00:03:24,420
gave a simple example to show how the

56
00:03:21,000 --> 00:03:28,350
iced tea tea works this example is given

57
00:03:24,420 --> 00:03:30,959
in Joyce and written past paper see we

58
00:03:28,350 --> 00:03:34,500
have message of ice cream flavor the

59
00:03:30,960 --> 00:03:36,320
probability of strawberry is 1/4 vanilla

60
00:03:34,500 --> 00:03:38,880
1/2 and the chocolate also quarter

61
00:03:36,320 --> 00:03:41,160
according the message distribution with

62
00:03:38,880 --> 00:03:44,130
a sense to everyone seed vanilla to

63
00:03:41,160 --> 00:03:47,130
seize and chocolate rancid while

64
00:03:44,130 --> 00:03:51,420
encoding a message random pick a city no

65
00:03:47,130 --> 00:03:52,460
seeds of the message with as s DTE a non

66
00:03:51,420 --> 00:03:55,760
uniform

67
00:03:52,460 --> 00:03:58,550
message is encoded at a uniform still

68
00:03:55,760 --> 00:04:01,049
you know in the opposite direction

69
00:03:58,550 --> 00:04:04,650
decoding a uniform said here's a non

70
00:04:01,050 --> 00:04:08,520
uniform message as DT is good enough for

71
00:04:04,650 --> 00:04:12,710
simple distributions for example uniform

72
00:04:08,520 --> 00:04:12,710
distribution and normal distributions

73
00:04:14,510 --> 00:04:19,980
but it is a great challenge to design

74
00:04:16,980 --> 00:04:23,130
did his for message following intricate

75
00:04:19,980 --> 00:04:26,670
this distribution usually we need a

76
00:04:23,130 --> 00:04:29,520
probability model to characterize the

77
00:04:26,670 --> 00:04:32,520
message distribution then design a DG

78
00:04:29,520 --> 00:04:35,570
for the model when named such DT is

79
00:04:32,520 --> 00:04:39,419
probability model transforming colors a

80
00:04:35,570 --> 00:04:42,920
PMT is a secure if and only if the decoy

81
00:04:39,420 --> 00:04:46,340
message generated by the PMT

82
00:04:42,920 --> 00:04:49,890
indistinguishable from the real message

83
00:04:46,340 --> 00:04:53,330
this includes to us the message

84
00:04:49,890 --> 00:04:57,150
distribution and the probability model I

85
00:04:53,330 --> 00:05:01,140
indistinguishable and the model and the

86
00:04:57,150 --> 00:05:03,750
PMT are in distinguishable until now

87
00:05:01,140 --> 00:05:06,930
sorry honey encryption application has

88
00:05:03,750 --> 00:05:11,580
been proposed to for pass for password

89
00:05:06,930 --> 00:05:14,790
VARs 1 for genomic debt protection this

90
00:05:11,580 --> 00:05:17,300
application designs specific PMT's for

91
00:05:14,790 --> 00:05:17,300
their message

92
00:05:19,430 --> 00:05:24,840
however the security and analysis for

93
00:05:22,290 --> 00:05:27,810
existing PMT is not comprehensive

94
00:05:24,840 --> 00:05:30,060
in fact the genomic data research did

95
00:05:27,810 --> 00:05:31,940
not consider the difference between the

96
00:05:30,060 --> 00:05:36,450
message distribution and the probability

97
00:05:31,940 --> 00:05:38,370
model and the password without research

98
00:05:36,450 --> 00:05:46,260
did not consider a difference between

99
00:05:38,370 --> 00:05:49,110
the model and the PMT in addition this

100
00:05:46,260 --> 00:05:52,289
PMT is a designed for specific massive

101
00:05:49,110 --> 00:05:54,630
distribution of probability models there

102
00:05:52,290 --> 00:05:58,410
is still a lack of generic redesigning

103
00:05:54,630 --> 00:06:06,870
method these issues on PMT study hinder

104
00:05:58,410 --> 00:06:10,560
the widespread use of achieve we propose

105
00:06:06,870 --> 00:06:13,290
two kinds of attacks distribution

106
00:06:10,560 --> 00:06:14,880
difference attack exploit the difference

107
00:06:13,290 --> 00:06:17,430
between the message this distribution

108
00:06:14,880 --> 00:06:19,140
and the probability model encoding

109
00:06:17,430 --> 00:06:23,220
attack x4 the difference between the

110
00:06:19,140 --> 00:06:26,430
probability model the ole achieved high

111
00:06:23,220 --> 00:06:33,210
occurs to distinguish real and a decoy

112
00:06:26,430 --> 00:06:36,300
messages we also propose a generic

113
00:06:33,210 --> 00:06:40,349
design a method for PMT's and to prove

114
00:06:36,300 --> 00:06:42,200
and prove that our is PMT are

115
00:06:40,350 --> 00:06:46,080
indistinguishable from the corresponding

116
00:06:42,200 --> 00:06:50,700
probability models this means our is

117
00:06:46,080 --> 00:06:54,000
PMT's resist encoding attacks using our

118
00:06:50,700 --> 00:06:58,140
method for password words and no

119
00:06:54,000 --> 00:07:02,250
encoding attacks achieved more than 52

120
00:06:58,140 --> 00:07:06,770
accuracy it is slightly better than than

121
00:07:02,250 --> 00:07:06,770
they expected a value of 50%

122
00:07:09,210 --> 00:07:14,758
before expanding our attacks we first

123
00:07:12,030 --> 00:07:17,369
describe the attacker model for honey

124
00:07:14,759 --> 00:07:20,430
encryption we consider the attacker has

125
00:07:17,370 --> 00:07:21,570
stolen the storage storage file for

126
00:07:20,430 --> 00:07:24,810
example the ciphertext

127
00:07:21,570 --> 00:07:27,780
she knows the PBE and the DTE shikai

128
00:07:24,810 --> 00:07:30,120
numerate Oak is offline and she maybe

129
00:07:27,780 --> 00:07:32,669
know some statistics about the real

130
00:07:30,120 --> 00:07:36,240
message our encoding attacks does not

131
00:07:32,669 --> 00:07:38,940
need this she can perform a certain

132
00:07:36,240 --> 00:07:42,509
number of online verification and this

133
00:07:38,940 --> 00:07:44,789
is for possible vouch with above ability

134
00:07:42,509 --> 00:07:47,190
attackers want to distinguish the real

135
00:07:44,789 --> 00:07:53,969
message from a large number of decoy

136
00:07:47,190 --> 00:07:57,389
messages what attackers will do with the

137
00:07:53,970 --> 00:07:59,729
stolen several tests she first enumerate

138
00:07:57,389 --> 00:08:03,030
all keys to decrypt the ciphertext and

139
00:07:59,729 --> 00:08:05,909
guess a large number of message only one

140
00:08:03,030 --> 00:08:08,190
of the message is real for password

141
00:08:05,910 --> 00:08:12,000
valves she can sort them by some means

142
00:08:08,190 --> 00:08:13,770
and worship verify them online for

143
00:08:12,000 --> 00:08:19,010
genomic data she can only pick one

144
00:08:13,770 --> 00:08:23,639
offline we use a weight function to

145
00:08:19,010 --> 00:08:26,909
formalize the sorting means tacker sauce

146
00:08:23,639 --> 00:08:31,520
these messages in this decreasing order

147
00:08:26,909 --> 00:08:35,279
of their weights usually the weight PM

148
00:08:31,520 --> 00:08:38,010
reflects the probability that M is real

149
00:08:35,279 --> 00:08:42,599
in this paper we only consider the

150
00:08:38,010 --> 00:08:45,180
security of PMT's in fact a strength all

151
00:08:42,599 --> 00:08:48,330
passwords also influence the security of

152
00:08:45,180 --> 00:08:51,209
a honey encryption since this has been

153
00:08:48,330 --> 00:08:54,740
studied many by many researchers we

154
00:08:51,209 --> 00:08:54,739
don't all consider in this paper

155
00:08:57,760 --> 00:09:03,699
we use the same security metrics as

156
00:09:00,959 --> 00:09:07,268
previous walk the rank of the real

157
00:09:03,699 --> 00:09:11,410
message in related form for example in

158
00:09:07,269 --> 00:09:13,720
one style and decoy message 30 rank in

159
00:09:11,410 --> 00:09:19,269
front of the real one then the rank of

160
00:09:13,720 --> 00:09:21,310
the real one is their upholstery we used

161
00:09:19,269 --> 00:09:23,949
the rank cumulative distribution

162
00:09:21,310 --> 00:09:27,310
function the average rank and the

163
00:09:23,949 --> 00:09:30,069
accuracy as our security matrix the the

164
00:09:27,310 --> 00:09:32,138
accuracy is the probability the attacker

165
00:09:30,070 --> 00:09:35,079
distinguished the real message between

166
00:09:32,139 --> 00:09:37,810
one real and one decoy for example a

167
00:09:35,079 --> 00:09:41,739
real one ranking in front of the decoy

168
00:09:37,810 --> 00:09:44,260
one an interesting seeing is a sum of

169
00:09:41,740 --> 00:09:47,380
the average rank and accuracy is equal

170
00:09:44,260 --> 00:09:49,709
to one this is not noticed by previous

171
00:09:47,380 --> 00:09:49,709
work

172
00:09:50,160 --> 00:09:56,019
now let's we introduce our work the

173
00:09:54,579 --> 00:09:58,000
first one is a simple distribution

174
00:09:56,019 --> 00:10:01,389
difference attack against the gene oh

175
00:09:58,000 --> 00:10:03,750
god the genomic data part protected by G

176
00:10:01,389 --> 00:10:07,990
no guard is an individual single

177
00:10:03,750 --> 00:10:10,180
nucleotide variant a sequence this is

178
00:10:07,990 --> 00:10:13,480
the sequence is represented by a string

179
00:10:10,180 --> 00:10:15,370
with their 1/2 ever bad we uses more

180
00:10:13,480 --> 00:10:20,139
real dead set published with the code

181
00:10:15,370 --> 00:10:22,089
Geno guard on github it includes 165

182
00:10:20,139 --> 00:10:26,139
individual as a remaining sequence of

183
00:10:22,089 --> 00:10:28,569
lands 1000 the deccan decoy data can be

184
00:10:26,139 --> 00:10:32,199
generated by decoding random seized with

185
00:10:28,569 --> 00:10:35,790
a PMT our attack first uses a principal

186
00:10:32,199 --> 00:10:38,319
component analysis produced the

187
00:10:35,790 --> 00:10:41,860
dimensionality from one thousand to ten

188
00:10:38,319 --> 00:10:44,500
the uses for uses the support vector

189
00:10:41,860 --> 00:10:46,360
machine to classify the sequence we

190
00:10:44,500 --> 00:10:48,550
randomly pick half of the real sequence

191
00:10:46,360 --> 00:10:52,060
and a generator the same number of decoy

192
00:10:48,550 --> 00:10:56,279
sequence for training first the Tramp is

193
00:10:52,060 --> 00:10:56,279
a model and the same gender is VM

194
00:10:58,730 --> 00:11:06,089
after training we used the restroom

195
00:11:01,139 --> 00:11:08,670
sequence for tests we generates 999

196
00:11:06,089 --> 00:11:14,100
decoy sequence for each real one to

197
00:11:08,670 --> 00:11:16,620
calculate the ranks other metrics the

198
00:11:14,100 --> 00:11:19,559
wait for sequence is the probability

199
00:11:16,620 --> 00:11:22,889
that this the sequence is real the

200
00:11:19,559 --> 00:11:25,350
probabilities are estimated by SVM after

201
00:11:22,889 --> 00:11:29,779
dimension reduction phone with the PSP

202
00:11:25,350 --> 00:11:31,850
say the right table and figure shows the

203
00:11:29,779 --> 00:11:34,889
experimental results

204
00:11:31,850 --> 00:11:39,360
the combination model is recommended by

205
00:11:34,889 --> 00:11:42,959
Gino curve it performs best but our

206
00:11:39,360 --> 00:11:43,589
attack still achieved 76 percent

207
00:11:42,959 --> 00:11:46,800
accuracy

208
00:11:43,589 --> 00:11:50,639
in addition 47 percent the individuals

209
00:11:46,800 --> 00:11:53,430
real sequence ranked first these users

210
00:11:50,639 --> 00:11:58,459
cannot get security improvement by using

211
00:11:53,430 --> 00:11:58,459
Gino gap compared with traditional PvE

212
00:12:00,829 --> 00:12:06,300
our another work is attacking against

213
00:12:03,809 --> 00:12:08,540
the password routes schemes we now

214
00:12:06,300 --> 00:12:11,819
introduce a password about briefly a

215
00:12:08,540 --> 00:12:13,529
password while stalls one users multiple

216
00:12:11,819 --> 00:12:16,649
passwords on different websites or

217
00:12:13,529 --> 00:12:19,500
services these passwords are usually

218
00:12:16,649 --> 00:12:23,160
weak and similar here we take no crack

219
00:12:19,500 --> 00:12:26,009
as an example to describe our text no

220
00:12:23,160 --> 00:12:28,680
crack uses pcfg model to characterize

221
00:12:26,009 --> 00:12:32,370
the single password this distribution

222
00:12:28,680 --> 00:12:35,790
for example this model treats password 1

223
00:12:32,370 --> 00:12:38,430
as a combination of two paths one is an

224
00:12:35,790 --> 00:12:41,370
English word password the other is

225
00:12:38,430 --> 00:12:45,689
digital one therefore it can be

226
00:12:41,370 --> 00:12:48,389
generated by this reverse no crack used

227
00:12:45,689 --> 00:12:49,439
the sub grammar to characterize the path

228
00:12:48,389 --> 00:12:52,410
of similarity

229
00:12:49,439 --> 00:12:55,769
for example the vault contains two

230
00:12:52,410 --> 00:12:59,850
passwords password and password 1 the

231
00:12:55,769 --> 00:13:01,740
sure same path and the same rule then

232
00:12:59,850 --> 00:13:05,759
the sub grammar of the vault contains

233
00:13:01,740 --> 00:13:08,279
these four rules to enable about no

234
00:13:05,759 --> 00:13:10,180
crack the first passes is sub grammar

235
00:13:08,279 --> 00:13:13,000
and encodes the sub grammar

236
00:13:10,180 --> 00:13:15,640
that encodes each password involved face

237
00:13:13,000 --> 00:13:17,890
down ass up grammar and finally

238
00:13:15,640 --> 00:13:21,250
concatenate all STIs and outputs a

239
00:13:17,890 --> 00:13:23,380
concatenation at the seed of the vote it

240
00:13:21,250 --> 00:13:26,410
is an opposite direction to decoder

241
00:13:23,380 --> 00:13:29,920
Steve first decoded

242
00:13:26,410 --> 00:13:33,030
stop grammar then decode a password

243
00:13:29,920 --> 00:13:33,030
based on a sub grammar

244
00:13:35,220 --> 00:13:40,570
note that have sub grammar for real vote

245
00:13:38,170 --> 00:13:42,760
is a passed round part but a stop

246
00:13:40,570 --> 00:13:45,190
grammar for decoy vote is generated

247
00:13:42,760 --> 00:13:49,810
randomly this leads the following

248
00:13:45,190 --> 00:13:52,000
phenomenon but there definitely is no

249
00:13:49,810 --> 00:13:55,510
unused rules in sub grammar for real

250
00:13:52,000 --> 00:13:59,140
valves but may exist for decoy votes we

251
00:13:55,510 --> 00:14:01,090
named this feature feature you are there

252
00:13:59,140 --> 00:14:03,460
definitely exists and no duplicated

253
00:14:01,090 --> 00:14:05,890
rules in sub grammar for real valves but

254
00:14:03,460 --> 00:14:08,860
may exist for decoy BOTS we name this

255
00:14:05,890 --> 00:14:11,410
feature feature D are based on these two

256
00:14:08,860 --> 00:14:15,010
features we can exclude around half of

257
00:14:11,410 --> 00:14:20,380
decoy routes and achieve more than 70%

258
00:14:15,010 --> 00:14:25,230
accuracy to save time we don't go to

259
00:14:20,380 --> 00:14:25,230
into details here you can read our paper

260
00:14:28,740 --> 00:14:33,790
this features attacks do not need any

261
00:14:31,450 --> 00:14:37,930
statistics about the real distribution

262
00:14:33,790 --> 00:14:40,180
and only exploit the DTE PMT we name

263
00:14:37,930 --> 00:14:41,920
such attacks the encoding attacks the

264
00:14:40,180 --> 00:14:45,520
distribution difference that hack seems

265
00:14:41,920 --> 00:14:49,030
oblivious but the encoding attacks seems

266
00:14:45,520 --> 00:14:51,420
a little tricky why this password vault

267
00:14:49,030 --> 00:14:54,939
cannot reduce the encoding attacks

268
00:14:51,420 --> 00:14:58,540
either other features what is the

269
00:14:54,940 --> 00:15:00,550
principle for encoding attacks to answer

270
00:14:58,540 --> 00:15:03,760
these questions we first formalized the

271
00:15:00,550 --> 00:15:07,870
probability model into a uniform unified

272
00:15:03,760 --> 00:15:10,030
form intuitively a probability model

273
00:15:07,870 --> 00:15:12,820
designing a series of generating rule to

274
00:15:10,030 --> 00:15:14,410
assign messages probabilities the

275
00:15:12,820 --> 00:15:18,990
probability of a message is the

276
00:15:14,410 --> 00:15:18,990
probability it is generated by the rule

277
00:15:20,170 --> 00:15:27,050
based on this idea we give a generic

278
00:15:23,350 --> 00:15:29,920
conceptual probability model in formal

279
00:15:27,050 --> 00:15:29,920
definition

280
00:15:33,930 --> 00:15:41,280
it is natural to formalize a probability

281
00:15:36,960 --> 00:15:43,790
model to a GPM for pcfg model a

282
00:15:41,280 --> 00:15:47,510
generating rule is a production rule a

283
00:15:43,790 --> 00:15:51,270
generating sequence I is a user develop

284
00:15:47,510 --> 00:15:54,420
duration of stream here we only consider

285
00:15:51,270 --> 00:15:57,110
leftmost divisions other divisions can

286
00:15:54,420 --> 00:16:00,329
be converted to leftmost derivation

287
00:15:57,110 --> 00:16:02,550
equivalently the conditional probability

288
00:16:00,330 --> 00:16:07,200
of a rule only depends on itself

289
00:16:02,550 --> 00:16:10,260
this is pcfg model for sub grammar we

290
00:16:07,200 --> 00:16:13,800
give an example for explanation the

291
00:16:10,260 --> 00:16:16,950
first view of the sub grammar is s is

292
00:16:13,800 --> 00:16:19,020
equal to 2 this rule represents there

293
00:16:16,950 --> 00:16:23,160
are 2 loose with the left-hand side as

294
00:16:19,020 --> 00:16:30,240
in sub grammar immediately after the

295
00:16:23,160 --> 00:16:32,780
arturis s goes to D as goes to W the

296
00:16:30,240 --> 00:16:35,700
following rules have the similar form

297
00:16:32,780 --> 00:16:38,250
this sequence is also leftmost which

298
00:16:35,700 --> 00:16:41,880
means expanding the leftmost unexpanded

299
00:16:38,250 --> 00:16:45,870
a variable first as models also can be

300
00:16:41,880 --> 00:16:48,420
formalized naturally for Markov model a

301
00:16:45,870 --> 00:16:54,060
general team rule is a character a

302
00:16:48,420 --> 00:16:56,579
sequence in the string we use a

303
00:16:54,060 --> 00:16:59,069
generating graph to represent the GPM

304
00:16:56,580 --> 00:17:01,890
visually this graph is a directed

305
00:16:59,070 --> 00:17:04,470
acyclic graph who is a single source as

306
00:17:01,890 --> 00:17:07,109
represent a generative you a sink

307
00:17:04,470 --> 00:17:08,760
represent a message a path from source

308
00:17:07,109 --> 00:17:11,369
to sink represent the generating

309
00:17:08,760 --> 00:17:13,619
sequence called generating pass the rod

310
00:17:11,369 --> 00:17:16,589
figure is the generating graph or pcfg

311
00:17:13,619 --> 00:17:19,469
model there are two generating possible

312
00:17:16,589 --> 00:17:22,639
passwords the the red one and the blue

313
00:17:19,470 --> 00:17:25,829
textual therefore the model is ambiguous

314
00:17:22,640 --> 00:17:29,390
with the generating graph the defects of

315
00:17:25,829 --> 00:17:32,129
password valves PMT becomes oblivious

316
00:17:29,390 --> 00:17:35,730
the corresponding probability models are

317
00:17:32,130 --> 00:17:38,850
ambiguous as the PMT is only truth 1 the

318
00:17:35,730 --> 00:17:41,100
deterministic pass when encoding for

319
00:17:38,850 --> 00:17:42,699
example only choosing the red dashed one

320
00:17:41,100 --> 00:17:45,820
for encoding

321
00:17:42,700 --> 00:17:51,030
therefore a seed of another person is

322
00:17:45,820 --> 00:17:51,030
definitely relative a decoy state

323
00:17:52,230 --> 00:17:58,810
according to this Fanny will propose to

324
00:17:55,240 --> 00:18:01,720
generic encoding attacks weak encoding

325
00:17:58,810 --> 00:18:04,659
attack directly excludes the seeds whose

326
00:18:01,720 --> 00:18:06,400
past cannot be chosen by encoding this

327
00:18:04,660 --> 00:18:10,300
encoding attack seems oblivious

328
00:18:06,400 --> 00:18:12,580
unlike previous feature attacks which

329
00:18:10,300 --> 00:18:15,879
needed to abuse the Pacific analysis on

330
00:18:12,580 --> 00:18:19,419
specific PMT's strong encoding attacks

331
00:18:15,880 --> 00:18:23,110
also arrested by the reciprocal of P

332
00:18:19,420 --> 00:18:26,100
eyes here is the generating sequence of

333
00:18:23,110 --> 00:18:30,010
the state in the figure the purple line

334
00:18:26,100 --> 00:18:33,459
corresponds a strong encoding attack it

335
00:18:30,010 --> 00:18:42,640
performs well achieving more than 98%

336
00:18:33,460 --> 00:18:44,890
accuracy since the principle of encoding

337
00:18:42,640 --> 00:18:49,060
attacks becomes oblivious the

338
00:18:44,890 --> 00:18:51,250
countermeasure is also oblivious choose

339
00:18:49,060 --> 00:18:53,770
one generating sequence randomly when

340
00:18:51,250 --> 00:18:56,140
encoding based on the notion of a TPM

341
00:18:53,770 --> 00:18:59,520
will give a generic method for

342
00:18:56,140 --> 00:19:01,720
transforming a visual DBMS to PMT's

343
00:18:59,520 --> 00:19:04,660
firstly we introduce a notion of a

344
00:19:01,720 --> 00:19:06,910
conditional DTS conditional DT encodes a

345
00:19:04,660 --> 00:19:09,340
message according to our condition in

346
00:19:06,910 --> 00:19:12,850
other words the Contessa DTV for each

347
00:19:09,340 --> 00:19:15,820
condition we directly use is DDD to

348
00:19:12,850 --> 00:19:20,850
construct our eyes CDT they were

349
00:19:15,820 --> 00:19:23,740
proposed as PMT encodes em as follows

350
00:19:20,850 --> 00:19:27,100
first pass all generate sequence and

351
00:19:23,740 --> 00:19:28,360
choose one with its probability let's

352
00:19:27,100 --> 00:19:30,340
see the rad figure

353
00:19:28,360 --> 00:19:33,459
password has two generating sequence

354
00:19:30,340 --> 00:19:36,970
with different probability we take the

355
00:19:33,460 --> 00:19:40,360
second as an example the encode each

356
00:19:36,970 --> 00:19:42,720
rule in the sequence by using I acidity

357
00:19:40,360 --> 00:19:46,540
on the condition of previous rules

358
00:19:42,720 --> 00:19:48,430
because pcfg model the condition

359
00:19:46,540 --> 00:19:52,120
probability does not depend on the

360
00:19:48,430 --> 00:19:54,820
condition then the truth table code goes

361
00:19:52,120 --> 00:19:55,840
through path and W goes toward use the

362
00:19:54,820 --> 00:19:59,439
same table for

363
00:19:55,840 --> 00:20:01,928
according finally we concatenate this

364
00:19:59,440 --> 00:20:05,620
city's pair the concatenation to a fixed

365
00:20:01,929 --> 00:20:10,320
length and how to put it let's encourage

366
00:20:05,620 --> 00:20:12,549
people to go to the paper for the final

367
00:20:10,320 --> 00:20:14,740
conclusions do you have perhaps an email

368
00:20:12,549 --> 00:20:23,110
address on the concluding slide yeah

369
00:20:14,740 --> 00:20:25,179
yeah yeah our concluded it in summary we

370
00:20:23,110 --> 00:20:28,479
solved how to design a PMT for a

371
00:20:25,179 --> 00:20:30,640
probability model but a secure PMT still

372
00:20:28,480 --> 00:20:33,010
need an accurate probability model to

373
00:20:30,640 --> 00:20:34,840
characterize the message distribution

374
00:20:33,010 --> 00:20:37,840
this usually needs professional

375
00:20:34,840 --> 00:20:40,959
knowledge of the message distribution we

376
00:20:37,840 --> 00:20:44,100
leave it to expert experts in related

377
00:20:40,960 --> 00:20:44,100
fields for future work

