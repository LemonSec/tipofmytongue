1
00:00:07,400 --> 00:00:09,960
hello everybody today I will introduce

2
00:00:09,960 --> 00:00:12,019
our recent book which is about

3
00:00:12,019 --> 00:00:14,639
automatically reverse engineering the

4
00:00:14,639 --> 00:00:16,859
diagnostic approach course of modern

5
00:00:16,859 --> 00:00:20,820
vehicles I am Louis and I come from Hong

6
00:00:20,820 --> 00:00:23,340
Kong political University the ecu's

7
00:00:23,340 --> 00:00:25,619
contained in one vehicle can communicate

8
00:00:25,619 --> 00:00:28,140
with each other by following the young

9
00:00:28,140 --> 00:00:31,320
vehicle protocols so understanding the

10
00:00:31,320 --> 00:00:33,059
young vehicle protocols is very

11
00:00:33,059 --> 00:00:35,940
important to the security assessment and

12
00:00:35,940 --> 00:00:38,640
protection of modern vehicles we

13
00:00:38,640 --> 00:00:40,800
selected the vehicle diagnostic approach

14
00:00:40,800 --> 00:00:43,140
course as the target of this paper since

15
00:00:43,140 --> 00:00:45,239
they are very commonly used by the

16
00:00:45,239 --> 00:00:48,120
repairman to real sensor values or

17
00:00:48,120 --> 00:00:50,219
control is used through the OBD project

18
00:00:50,219 --> 00:00:53,280
of the vehicle for example we know that

19
00:00:53,280 --> 00:00:58,460
a keyword protocol 2000 kwp 2000 and

20
00:00:58,460 --> 00:01:02,520
unified diagnostic service the UDS are

21
00:01:02,520 --> 00:01:04,220
there are the two most popular

22
00:01:04,220 --> 00:01:06,540
diagnostic approach course

23
00:01:06,540 --> 00:01:09,060
however when we check the standards of

24
00:01:09,060 --> 00:01:12,060
these two protocols we find large as the

25
00:01:12,060 --> 00:01:14,280
standards only defines the low level

26
00:01:14,280 --> 00:01:16,020
message formats the vehicle

27
00:01:16,020 --> 00:01:18,960
manufacturers certifying the syntactic

28
00:01:18,960 --> 00:01:20,700
information the semantic meaning of

29
00:01:20,700 --> 00:01:23,520
messages and the formulas for encoding

30
00:01:23,520 --> 00:01:27,060
the return values kwp 2000 and UDS

31
00:01:27,060 --> 00:01:30,240
protocol are Preparatory protocols

32
00:01:30,240 --> 00:01:34,259
however some of the attackers has used

33
00:01:34,259 --> 00:01:35,540
the

34
00:01:35,540 --> 00:01:37,920
diagnostic protocols to launch some

35
00:01:37,920 --> 00:01:41,479
attacks on the vehicles for example in

36
00:01:41,479 --> 00:01:44,540
2013 the research

37
00:01:44,540 --> 00:01:47,460
diagnostic messages through the OBD

38
00:01:47,460 --> 00:01:50,820
project to the ecu's of the vehicle they

39
00:01:50,820 --> 00:01:53,040
can use these messages to clear the

40
00:01:53,040 --> 00:01:56,939
engine of the for the or Toyota vehicles

41
00:01:56,939 --> 00:02:00,240
some of the researchers has proposed a

42
00:02:00,240 --> 00:02:03,000
method to reverse engineering the in

43
00:02:03,000 --> 00:02:05,700
vehicle projects mostly some researchers

44
00:02:05,700 --> 00:02:09,179
are proposed to analyze the traffic

45
00:02:09,179 --> 00:02:11,640
generated by the ecu's reverse

46
00:02:11,640 --> 00:02:14,340
engineering the formats of the cam

47
00:02:14,340 --> 00:02:17,280
messages however they can only can

48
00:02:17,280 --> 00:02:19,739
handle the key messages transmitted

49
00:02:19,739 --> 00:02:22,379
between ecu's they cannot handle the no

50
00:02:22,379 --> 00:02:24,660
messages that are transmitted by using

51
00:02:24,660 --> 00:02:26,400
the transmission loyal protocols

52
00:02:26,400 --> 00:02:29,220
moreover they can they cannot recover

53
00:02:29,220 --> 00:02:32,239
the proprietary formats and formulas

54
00:02:32,239 --> 00:02:35,160
contained in the in the diagnostic

55
00:02:35,160 --> 00:02:36,540
messages

56
00:02:36,540 --> 00:02:39,239
some other researchers proposed to

57
00:02:39,239 --> 00:02:41,940
analyze the mobile apps connected to the

58
00:02:41,940 --> 00:02:44,340
vehicles to recover the possible

59
00:02:44,340 --> 00:02:47,160
requested messages they do not analyze

60
00:02:47,160 --> 00:02:49,860
the proprietary formats of these request

61
00:02:49,860 --> 00:02:53,400
messages moreover the mobile app can use

62
00:02:53,400 --> 00:02:55,980
some formulas to exactly the real sensor

63
00:02:55,980 --> 00:02:59,120
values however the APB analysis best

64
00:02:59,120 --> 00:03:02,640
method cannot recover the formulas used

65
00:03:02,640 --> 00:03:06,480
in analyzing the response messages

66
00:03:06,480 --> 00:03:09,780
this picture shows us the overall

67
00:03:09,780 --> 00:03:12,239
structure of a modern vehicle the

68
00:03:12,239 --> 00:03:15,000
vehicle contains many ecu's and this is

69
00:03:15,000 --> 00:03:17,459
used are connected by using the bus

70
00:03:17,459 --> 00:03:20,400
system and all of them are collected to

71
00:03:20,400 --> 00:03:23,640
the Gateway and one vehicle will also

72
00:03:23,640 --> 00:03:26,340
has one OBD project connected to the

73
00:03:26,340 --> 00:03:30,239
Central Gateway so that the repairman

74
00:03:30,239 --> 00:03:33,360
can use some professional diagnostic

75
00:03:33,360 --> 00:03:36,540
tools to communicate with the ecos

76
00:03:36,540 --> 00:03:38,760
called The Assumption of this paper is

77
00:03:38,760 --> 00:03:42,060
we only have the target vehicle and our

78
00:03:42,060 --> 00:03:43,980
diagnostic tool that can work for this

79
00:03:43,980 --> 00:03:46,680
build reverse engineering the diagnostic

80
00:03:46,680 --> 00:03:48,780
approach course are very useful in

81
00:03:48,780 --> 00:03:51,540
launching some attacks we used the

82
00:03:51,540 --> 00:03:54,480
professional diagnostic tools to send

83
00:03:54,480 --> 00:03:57,840
some messages to control the issues of

84
00:03:57,840 --> 00:04:01,379
4B across for example for the Toyota we

85
00:04:01,379 --> 00:04:03,599
can successfully use the account

86
00:04:03,599 --> 00:04:06,360
messages to unlock all the doors we can

87
00:04:06,360 --> 00:04:09,659
also modify some sensor values

88
00:04:09,659 --> 00:04:13,200
this feature shows the osm model of the

89
00:04:13,200 --> 00:04:15,599
most popular diagnostic approach course

90
00:04:15,599 --> 00:04:17,160
kwp2000

91
00:04:17,160 --> 00:04:20,040
UDS and OBD2 we can find that these

92
00:04:20,040 --> 00:04:22,400
three Protocols are based on some

93
00:04:22,400 --> 00:04:27,180
transposure or network lawyer protocols

94
00:04:27,180 --> 00:04:30,180
this picture shows the overview of our

95
00:04:30,180 --> 00:04:32,220
of our system design we can find that

96
00:04:32,220 --> 00:04:34,800
our system can be divided into two parts

97
00:04:34,800 --> 00:04:37,199
the first part is called the connection

98
00:04:37,199 --> 00:04:40,020
and we will use one professional

99
00:04:40,020 --> 00:04:42,720
diagnostic tool to read some sensor

100
00:04:42,720 --> 00:04:44,880
values or control some ecos of the

101
00:04:44,880 --> 00:04:47,460
vehicle during this procedure we will

102
00:04:47,460 --> 00:04:50,100
use one computer to record all the cam

103
00:04:50,100 --> 00:04:51,900
messages transmitted between the

104
00:04:51,900 --> 00:04:55,440
diagnostic tool and the vehicle we will

105
00:04:55,440 --> 00:04:59,699
also use one camera to record the GUI of

106
00:04:59,699 --> 00:05:01,680
the diagnostic tool so that we can

107
00:05:01,680 --> 00:05:04,020
analyze the test or since the values

108
00:05:04,020 --> 00:05:06,360
displayed on the GUI after the data

109
00:05:06,360 --> 00:05:07,860
connection we will analyze the

110
00:05:07,860 --> 00:05:11,040
diagnostic frames that will recover the

111
00:05:11,040 --> 00:05:13,620
raw payload of the camera request and

112
00:05:13,620 --> 00:05:16,680
response messages and we will also exact

113
00:05:16,680 --> 00:05:19,259
the field values content in the request

114
00:05:19,259 --> 00:05:21,960
messages we will also analyze the

115
00:05:21,960 --> 00:05:25,259
texture showing on the GUI of the

116
00:05:25,259 --> 00:05:28,560
diagnostic tool we will use some OCR to

117
00:05:28,560 --> 00:05:31,500
exact all the UI tests finally we

118
00:05:31,500 --> 00:05:34,500
combine the field values exerted from

119
00:05:34,500 --> 00:05:37,020
the request and response messages and

120
00:05:37,020 --> 00:05:41,460
the text executed from the GUI of the

121
00:05:41,460 --> 00:05:44,340
professional diagnostic tools to recover

122
00:05:44,340 --> 00:05:46,560
the semantic meaning of the customized

123
00:05:46,560 --> 00:05:49,080
fields in the request messages we will

124
00:05:49,080 --> 00:05:50,759
also use some genetic programming

125
00:05:50,759 --> 00:05:53,220
methods to recover the formulas use the

126
00:05:53,220 --> 00:05:55,100
wind processing the response messages

127
00:05:55,100 --> 00:05:59,160
this feature shows the steps contained

128
00:05:59,160 --> 00:06:01,320
in the data connections one vehicle can

129
00:06:01,320 --> 00:06:04,080
contain many of its use and each vco can

130
00:06:04,080 --> 00:06:06,660
contain a large number of the sensor

131
00:06:06,660 --> 00:06:08,699
values that should be connected during

132
00:06:08,699 --> 00:06:11,400
the data connection to speed up the data

133
00:06:11,400 --> 00:06:14,280
connection step and we use one robotic

134
00:06:14,280 --> 00:06:17,880
arm to click the GUI of the diagnostic

135
00:06:17,880 --> 00:06:20,220
tool automatically in detail we will use

136
00:06:20,220 --> 00:06:23,160
one camera to monitor the GUI of the

137
00:06:23,160 --> 00:06:25,800
diagnostic tool and after taking

138
00:06:25,800 --> 00:06:28,440
pictures of the GUI we will use some

139
00:06:28,440 --> 00:06:32,039
ocrs to analyze the text showing on the

140
00:06:32,039 --> 00:06:35,160
GUI and we will identify the target

141
00:06:35,160 --> 00:06:38,160
issues or ECU sensor values on the GUI

142
00:06:38,160 --> 00:06:41,699
finally we will guide the robotical arm

143
00:06:41,699 --> 00:06:45,600
to interact with the GUI of the

144
00:06:45,600 --> 00:06:48,240
diagnostic tool when recording the cam

145
00:06:48,240 --> 00:06:51,360
messages generated by the diagnostic

146
00:06:51,360 --> 00:06:54,539
tool and the vehicle we will add time

147
00:06:54,539 --> 00:06:58,020
steps to each connected Can message we

148
00:06:58,020 --> 00:07:00,960
will also add time steps to the video of

149
00:07:00,960 --> 00:07:03,900
the GUI after connecting the diagnostic

150
00:07:03,900 --> 00:07:06,780
frames we will need to recover the

151
00:07:06,780 --> 00:07:09,240
payload of the request and response

152
00:07:09,240 --> 00:07:12,300
messages and accept the field values

153
00:07:12,300 --> 00:07:15,180
contained in them we will post a filter

154
00:07:15,180 --> 00:07:18,240
out the frames that do not containing

155
00:07:18,240 --> 00:07:21,060
any parts of the request or response

156
00:07:21,060 --> 00:07:23,520
message in this feature we will figure

157
00:07:23,520 --> 00:07:26,160
out the flow control message since each

158
00:07:26,160 --> 00:07:28,620
do not contain any payload of the

159
00:07:28,620 --> 00:07:30,120
request message

160
00:07:30,120 --> 00:07:33,780
after that we will assemble the raw

161
00:07:33,780 --> 00:07:36,780
payload for example we will combine the

162
00:07:36,780 --> 00:07:39,180
data payload of the Foster frame with

163
00:07:39,180 --> 00:07:41,880
the data period of the continuous frames

164
00:07:41,880 --> 00:07:44,340
together to obtain the draw payload of

165
00:07:44,340 --> 00:07:47,039
the request or response message finally

166
00:07:47,039 --> 00:07:49,560
after obtaining the job payload we will

167
00:07:49,560 --> 00:07:53,340
accept the local ID the did the ECU as a

168
00:07:53,340 --> 00:07:55,680
value or ECU controller product

169
00:07:55,680 --> 00:07:59,039
after obtaining the video of the GUI of

170
00:07:59,039 --> 00:08:01,560
the professional diagnostic tools we

171
00:08:01,560 --> 00:08:04,740
will perform the screenshot analysis we

172
00:08:04,740 --> 00:08:07,500
will first use the M player to transform

173
00:08:07,500 --> 00:08:09,479
the video into a series of the messages

174
00:08:09,479 --> 00:08:15,360
and then we can use the OCR to adapt the

175
00:08:15,360 --> 00:08:18,479
test content in each message sometimes

176
00:08:18,479 --> 00:08:21,900
the UCR software will miss some points

177
00:08:21,900 --> 00:08:24,360
to avoid using the incorrect sensor

178
00:08:24,360 --> 00:08:27,419
values in the evaluation we will use

179
00:08:27,419 --> 00:08:30,599
some predefined ranges to filter out the

180
00:08:30,599 --> 00:08:32,940
incorrect the easy sensor value when

181
00:08:32,940 --> 00:08:35,339
reading the ECU Center value the request

182
00:08:35,339 --> 00:08:37,979
message includes the did or local

183
00:08:37,979 --> 00:08:41,099
identifiers that are customized by the

184
00:08:41,099 --> 00:08:43,979
manufacturers we associate this the IDE

185
00:08:43,979 --> 00:08:48,360
or local IDs with the test displayed on

186
00:08:48,360 --> 00:08:50,640
the GUI of the professional diagnostic

187
00:08:50,640 --> 00:08:54,300
tools so that we can use the UI test as

188
00:08:54,300 --> 00:08:56,399
the semantic meaning of this is the ID

189
00:08:56,399 --> 00:08:59,100
or local identifiers similarly when we

190
00:08:59,100 --> 00:09:01,980
use the diagnostic protocols to control

191
00:09:01,980 --> 00:09:05,580
the vehicle components we can also use

192
00:09:05,580 --> 00:09:09,480
the UI text to explain the semantic

193
00:09:09,480 --> 00:09:11,820
meaning of the dids containing the

194
00:09:11,820 --> 00:09:13,980
request messages after receiving the

195
00:09:13,980 --> 00:09:17,339
response message from the vehicle the

196
00:09:17,339 --> 00:09:19,380
professional diagnostic tools will

197
00:09:19,380 --> 00:09:22,740
recover the real sensor values by using

198
00:09:22,740 --> 00:09:24,060
some formulas

199
00:09:24,060 --> 00:09:27,120
to discover which which formula will be

200
00:09:27,120 --> 00:09:30,120
used we design and improve the genetic

201
00:09:30,120 --> 00:09:32,040
programming algorithm to include the

202
00:09:32,040 --> 00:09:34,560
formulas in the first step we will

203
00:09:34,560 --> 00:09:36,779
construct the mapping between the ECU

204
00:09:36,779 --> 00:09:38,580
sensor values contained in the

205
00:09:38,580 --> 00:09:41,160
diagnostic messages and the easier

206
00:09:41,160 --> 00:09:44,040
sensor values displayed on the GUI this

207
00:09:44,040 --> 00:09:45,899
is done by using the time steps

208
00:09:45,899 --> 00:09:48,420
contained in the recorded cam messages

209
00:09:48,420 --> 00:09:51,240
and the time steps contained in the

210
00:09:51,240 --> 00:09:54,660
video of the GUI and then we can use the

211
00:09:54,660 --> 00:09:56,940
Eco sensor value contained in the

212
00:09:56,940 --> 00:09:59,940
diagnostic messages as the variable X

213
00:09:59,940 --> 00:10:02,940
and we can use the easiest and the

214
00:10:02,940 --> 00:10:06,060
values design displayed on the GUI of

215
00:10:06,060 --> 00:10:09,779
diagnostic tools as the variable Y and

216
00:10:09,779 --> 00:10:11,760
we can apply genetical programming

217
00:10:11,760 --> 00:10:13,920
algorithm to infer the relation between

218
00:10:13,920 --> 00:10:16,620
the variable X and the variable one

219
00:10:16,620 --> 00:10:20,519
especially we find that if the values of

220
00:10:20,519 --> 00:10:23,459
X or variable y are very small for

221
00:10:23,459 --> 00:10:26,399
example most of them are very close to

222
00:10:26,399 --> 00:10:29,519
zero then the genetical programming

223
00:10:29,519 --> 00:10:32,339
algorithm cannot correctly infer the

224
00:10:32,339 --> 00:10:35,160
formulas to overcome this issue we

225
00:10:35,160 --> 00:10:37,800
customize the genetic programming by

226
00:10:37,800 --> 00:10:40,500
increasing or decreasing the values of

227
00:10:40,500 --> 00:10:43,800
the variable X or variable y in the

228
00:10:43,800 --> 00:10:45,120
pre-processing

229
00:10:45,120 --> 00:10:47,660
to evaluate the performance of our

230
00:10:47,660 --> 00:10:51,839
system we select the 18 wheelers and for

231
00:10:51,839 --> 00:10:54,620
real professional diagnostic tools

232
00:10:54,620 --> 00:10:58,200
firstly we measured the Precision of OCR

233
00:10:58,200 --> 00:11:00,959
software called the true diagnostic

234
00:11:00,959 --> 00:11:04,079
tools the Precision of the OCR software

235
00:11:04,079 --> 00:11:08,040
reaches at least 85 percent

236
00:11:08,040 --> 00:11:13,320
moreover we use the OBD2 protocol as the

237
00:11:13,320 --> 00:11:15,420
background tools to measure the

238
00:11:15,420 --> 00:11:17,339
performance of reverse engineering

239
00:11:17,339 --> 00:11:20,339
formulas and finally we find data for

240
00:11:20,339 --> 00:11:22,800
all the six sensors our system can

241
00:11:22,800 --> 00:11:25,620
obtain the formulas that are almost the

242
00:11:25,620 --> 00:11:28,620
same as the ground rules for the 18V of

243
00:11:28,620 --> 00:11:32,100
course we also used the four diagnostic

244
00:11:32,100 --> 00:11:34,820
tools to read

245
00:11:34,820 --> 00:11:38,700
290 sensor values from the vehicle and

246
00:11:38,700 --> 00:11:41,459
each sensor value contains one formula

247
00:11:41,459 --> 00:11:44,839
and our system can recover

248
00:11:44,839 --> 00:11:48,420
285 formulas containing them the

249
00:11:48,420 --> 00:11:52,800
Precision riches at least 1980 percent

250
00:11:52,800 --> 00:11:57,360
we compared our method with two existing

251
00:11:57,360 --> 00:12:00,120
formula inflowing algorithms one is

252
00:12:00,120 --> 00:12:02,579
called the linear regression and the

253
00:12:02,579 --> 00:12:05,399
other is called the polynomial Computing

254
00:12:05,399 --> 00:12:09,560
these two methods can only recover about

255
00:12:09,560 --> 00:12:14,940
127 formulas and 93 formulas for the 18

256
00:12:14,940 --> 00:12:17,399
Vehicles we successfully used the

257
00:12:17,399 --> 00:12:19,680
professional diagnostic tools to control

258
00:12:19,680 --> 00:12:24,480
the ECU components of 10 of them and for

259
00:12:24,480 --> 00:12:27,480
all of the controlled Eco components we

260
00:12:27,480 --> 00:12:29,700
can recover the symmetrical meaning of

261
00:12:29,700 --> 00:12:32,940
the requested messages successfully

262
00:12:32,940 --> 00:12:35,640
since some mobile apps are connected to

263
00:12:35,640 --> 00:12:38,640
the vehicles can also create a sensor

264
00:12:38,640 --> 00:12:41,459
values from the vehicle we also perform

265
00:12:41,459 --> 00:12:45,300
statical program analysis to recover the

266
00:12:45,300 --> 00:12:48,899
formulas from the mobile apps here we

267
00:12:48,899 --> 00:12:50,240
selected

268
00:12:50,240 --> 00:12:53,760
160 mobile apps finally we successfully

269
00:12:53,760 --> 00:12:57,660
exactly the formulas from 28 mobile apps

270
00:12:57,660 --> 00:13:00,300
successfully that's my presentation if

271
00:13:00,300 --> 00:13:02,220
you have any questions you can send an

272
00:13:02,220 --> 00:13:05,240
email to my mailbox

