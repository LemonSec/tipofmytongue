1
00:00:09,059 --> 00:00:10,019
um thank you for the kind of

2
00:00:10,019 --> 00:00:13,200
introduction and welcome to my talk of

3
00:00:13,200 --> 00:00:15,480
our work on attacking touch screens

4
00:00:15,480 --> 00:00:18,660
using electromagnetic interference this

5
00:00:18,660 --> 00:00:20,460
work was done in collaboration with our

6
00:00:20,460 --> 00:00:23,520
colleagues of the xiaang University

7
00:00:23,520 --> 00:00:26,820
so capacitive touch screens are getting

8
00:00:26,820 --> 00:00:28,920
more and more utilized as the primary

9
00:00:28,920 --> 00:00:31,500
input source of many devices used used

10
00:00:31,500 --> 00:00:34,680
by hundreds of millions of users from

11
00:00:34,680 --> 00:00:37,980
laptops and screens over iot devices and

12
00:00:37,980 --> 00:00:41,480
variables to even cause medical devices

13
00:00:41,480 --> 00:00:43,680
capacitive touch screens are getting

14
00:00:43,680 --> 00:00:45,840
used because of their High Precision low

15
00:00:45,840 --> 00:00:48,180
wear and multi-touch support

16
00:00:48,180 --> 00:00:51,480
and arguably as of today one of the

17
00:00:51,480 --> 00:00:52,800
largest group of touchscreen control

18
00:00:52,800 --> 00:00:55,739
devices are for sure

19
00:00:55,739 --> 00:00:59,280
um smartphones consisting of 100 screen

20
00:00:59,280 --> 00:01:01,079
basically

21
00:01:01,079 --> 00:01:04,199
but recently articles like this one

22
00:01:04,199 --> 00:01:06,659
emerged where a device under the

23
00:01:06,659 --> 00:01:09,659
influence of Emi was booking a

24
00:01:09,659 --> 00:01:11,580
presidential suite of a user without his

25
00:01:11,580 --> 00:01:14,400
knowledge while this may be a fun

26
00:01:14,400 --> 00:01:16,920
example also more serious examples exist

27
00:01:16,920 --> 00:01:19,500
for example this one a knowledge based

28
00:01:19,500 --> 00:01:22,200
article of Lenovo stating that some of

29
00:01:22,200 --> 00:01:24,240
their touch screens do not work

30
00:01:24,240 --> 00:01:27,119
correctly under fluorescent light which

31
00:01:27,119 --> 00:01:30,299
emits a large amount of Emi into the

32
00:01:30,299 --> 00:01:31,920
environment

33
00:01:31,920 --> 00:01:34,799
so how does this even happen

34
00:01:34,799 --> 00:01:37,740
here you see a touchscreen Pipeline on

35
00:01:37,740 --> 00:01:39,900
the left side the touch panel which

36
00:01:39,900 --> 00:01:42,180
which gets sent by the analog front and

37
00:01:42,180 --> 00:01:45,960
I see this senses changes in capacitance

38
00:01:45,960 --> 00:01:48,420
on the touch panel when touched which

39
00:01:48,420 --> 00:01:50,340
then forwards this measurements to the

40
00:01:50,340 --> 00:01:52,500
microcontroller unit which interprets

41
00:01:52,500 --> 00:01:55,079
these changes as touch points and

42
00:01:55,079 --> 00:01:56,579
forwards is to the operating system

43
00:01:56,579 --> 00:02:00,060
which is then interpreting it further

44
00:02:00,060 --> 00:02:03,439
for example swipes or multi-touch

45
00:02:03,439 --> 00:02:07,259
touches so you can see that interference

46
00:02:07,259 --> 00:02:08,940
on the left side on the physical side

47
00:02:08,940 --> 00:02:12,720
will lead to wrong output on the digital

48
00:02:12,720 --> 00:02:13,860
side

49
00:02:13,860 --> 00:02:17,340
so we already know that an OS depends on

50
00:02:17,340 --> 00:02:19,860
benign touch data for any task including

51
00:02:19,860 --> 00:02:22,620
security critical ones so that's also

52
00:02:22,620 --> 00:02:25,560
why manufacturers are designing these

53
00:02:25,560 --> 00:02:26,879
circuits to be resilient against

54
00:02:26,879 --> 00:02:31,200
unintentional environment Emi but what

55
00:02:31,200 --> 00:02:34,760
if an attacker uses Emi

56
00:02:34,800 --> 00:02:38,220
so since the touchscreen is the main

57
00:02:38,220 --> 00:02:41,040
user interface wrong input will lead to

58
00:02:41,040 --> 00:02:43,680
wrong output and initiate wrong actions

59
00:02:43,680 --> 00:02:45,800
for example with impactful consequences

60
00:02:45,800 --> 00:02:48,599
in many areas like banking voting and

61
00:02:48,599 --> 00:02:51,120
medical applications so therefore we

62
00:02:51,120 --> 00:02:53,400
conclude that the touchscreen may be a

63
00:02:53,400 --> 00:02:55,319
serious security and privacy threat when

64
00:02:55,319 --> 00:02:57,000
under attack

65
00:02:57,000 --> 00:03:00,660
and that's why we asked ourselves is it

66
00:03:00,660 --> 00:03:02,580
possible to control touch screens

67
00:03:02,580 --> 00:03:06,239
remotely and precisely using intended

68
00:03:06,239 --> 00:03:08,879
electromagnetic interference for as an

69
00:03:08,879 --> 00:03:09,780
attack

70
00:03:09,780 --> 00:03:13,080
but first some look about the related

71
00:03:13,080 --> 00:03:16,700
work Emi has already been used to attack

72
00:03:16,700 --> 00:03:19,920
various devices in different scenarios

73
00:03:19,920 --> 00:03:21,800
from

74
00:03:21,800 --> 00:03:24,360
degrading the functionality using a Dos

75
00:03:24,360 --> 00:03:26,099
attack on devices for example security

76
00:03:26,099 --> 00:03:29,099
systems to more targeted attacks such as

77
00:03:29,099 --> 00:03:31,920
fault injection in embedded devices to

78
00:03:31,920 --> 00:03:35,700
medical devices to even flipping bits in

79
00:03:35,700 --> 00:03:37,500
embedded devices manipulating

80
00:03:37,500 --> 00:03:40,019
temperature readings of sensors and

81
00:03:40,019 --> 00:03:42,180
injecting voice into microphone circuits

82
00:03:42,180 --> 00:03:45,900
but only very recently Emi is also used

83
00:03:45,900 --> 00:03:47,959
to attack touch screens

84
00:03:47,959 --> 00:03:49,799
unfortunately

85
00:03:49,799 --> 00:03:52,799
this most related work to ours has some

86
00:03:52,799 --> 00:03:55,500
shortcomings it needs user interaction

87
00:03:55,500 --> 00:03:57,299
so the user has to touch the screen

88
00:03:57,299 --> 00:04:00,000
while it is attacked it is not targeted

89
00:04:00,000 --> 00:04:01,620
it can only scatter touch points

90
00:04:01,620 --> 00:04:03,959
randomly and not inject new ones and it

91
00:04:03,959 --> 00:04:06,180
has limited attack capabilities it can

92
00:04:06,180 --> 00:04:07,799
only scatter touch points and not

93
00:04:07,799 --> 00:04:09,900
gestures like swipes

94
00:04:09,900 --> 00:04:12,060
so that's where we came up with our

95
00:04:12,060 --> 00:04:13,860
attack ghost touch

96
00:04:13,860 --> 00:04:16,620
which is the first work to use Emi to

97
00:04:16,620 --> 00:04:19,079
inject precise touch points without user

98
00:04:19,079 --> 00:04:20,279
interaction

99
00:04:20,279 --> 00:04:22,139
uh first some background about the

100
00:04:22,139 --> 00:04:24,120
touchscreen you can imagine a touch

101
00:04:24,120 --> 00:04:26,400
screen consisting of a mesh of

102
00:04:26,400 --> 00:04:28,740
horizontal transmitting lines and

103
00:04:28,740 --> 00:04:30,500
vertical receiving lines

104
00:04:30,500 --> 00:04:32,880
which do not touch itself because they

105
00:04:32,880 --> 00:04:34,740
are separated by a sheet of glass and

106
00:04:34,740 --> 00:04:36,360
then there is the sensing circuit which

107
00:04:36,360 --> 00:04:38,520
is connected to these receiving and

108
00:04:38,520 --> 00:04:40,940
transmitting lines and the most easiest

109
00:04:40,940 --> 00:04:43,800
case it uses the scan driving method

110
00:04:43,800 --> 00:04:46,560
which you sends an excitation signal

111
00:04:46,560 --> 00:04:49,259
basically putting charge on the

112
00:04:49,259 --> 00:04:51,600
transmitting lines

113
00:04:51,600 --> 00:04:53,820
uh one after another

114
00:04:53,820 --> 00:04:58,500
and for example at T time T2 it is also

115
00:04:58,500 --> 00:05:02,580
sending sensing the induced charge

116
00:05:02,580 --> 00:05:03,900
signal

117
00:05:03,900 --> 00:05:07,320
and for example if a finger will touch

118
00:05:07,320 --> 00:05:09,780
one of these intersections it will act

119
00:05:09,780 --> 00:05:12,240
as the third plate of a capacitor the

120
00:05:12,240 --> 00:05:13,800
first plate the receiving line the

121
00:05:13,800 --> 00:05:15,479
second plate the transmitting line and

122
00:05:15,479 --> 00:05:18,180
the third one your finger so it is for

123
00:05:18,180 --> 00:05:21,300
sure changing the induced current into

124
00:05:21,300 --> 00:05:23,759
uh in the receiving line which also

125
00:05:23,759 --> 00:05:25,740
changed the charge signal and this is

126
00:05:25,740 --> 00:05:27,780
detected as a touch point

127
00:05:27,780 --> 00:05:31,259
so our goal is now to achieve the same

128
00:05:31,259 --> 00:05:34,440
but without the finger and using Emi

129
00:05:34,440 --> 00:05:37,740
Emi will induce an AC current into the

130
00:05:37,740 --> 00:05:40,199
charge signal and will change the charge

131
00:05:40,199 --> 00:05:43,199
signal so assume an attacker wants to

132
00:05:43,199 --> 00:05:45,419
press the OK button to a security

133
00:05:45,419 --> 00:05:46,919
critical task

134
00:05:46,919 --> 00:05:49,680
he first has to generate a Broadband Emi

135
00:05:49,680 --> 00:05:51,900
signal to couple to the RX line because

136
00:05:51,900 --> 00:05:54,660
we don't know how long it is we use a

137
00:05:54,660 --> 00:05:56,100
Broadband one instead of the single

138
00:05:56,100 --> 00:05:57,419
frequency one

139
00:05:57,419 --> 00:06:00,240
he has to tweak the starting time when

140
00:06:00,240 --> 00:06:03,180
he injects this Emi signal to match the

141
00:06:03,180 --> 00:06:05,639
exciting line style timing to not click

142
00:06:05,639 --> 00:06:07,740
somewhere somewhere else but on only on

143
00:06:07,740 --> 00:06:09,720
this button

144
00:06:09,720 --> 00:06:11,580
um for example if the sensing circuit is

145
00:06:11,580 --> 00:06:14,580
sensing with 120 times per second the

146
00:06:14,580 --> 00:06:16,860
whole screen then we also have to inject

147
00:06:16,860 --> 00:06:20,160
with 120 pulses per second this is

148
00:06:20,160 --> 00:06:21,419
because

149
00:06:21,419 --> 00:06:23,460
um the Emi will inject an AC current

150
00:06:23,460 --> 00:06:26,880
into the receiving lines and sometimes

151
00:06:26,880 --> 00:06:30,419
it will lower or higher the amount which

152
00:06:30,419 --> 00:06:32,639
is measured by the sensing circuit so

153
00:06:32,639 --> 00:06:36,240
not every injected Emi will be detected

154
00:06:36,240 --> 00:06:40,319
as a touch but eventually uh some will

155
00:06:40,319 --> 00:06:43,259
be detected and the sensing circuit will

156
00:06:43,259 --> 00:06:45,840
interpret them as touch points

157
00:06:45,840 --> 00:06:48,720
so the scenario we evaluated is the

158
00:06:48,720 --> 00:06:50,340
following for example

159
00:06:50,340 --> 00:06:53,880
um Alice is putting a face is putting

160
00:06:53,880 --> 00:06:56,160
her phone face down on the table

161
00:06:56,160 --> 00:06:58,620
and the attack equipment is hidden under

162
00:06:58,620 --> 00:07:00,900
the table and the attacker is now able

163
00:07:00,900 --> 00:07:03,600
to inject touch points and control the

164
00:07:03,600 --> 00:07:06,300
device so what can the attacker do for

165
00:07:06,300 --> 00:07:08,400
example sending a message with a

166
00:07:08,400 --> 00:07:11,520
malicious link clicking on it unlocking

167
00:07:11,520 --> 00:07:14,520
the phone by inputting a PIN number and

168
00:07:14,520 --> 00:07:16,139
advancing its attack

169
00:07:16,139 --> 00:07:19,500
uh or even calling the phone injecting a

170
00:07:19,500 --> 00:07:22,560
swipe up action and accepting the phone

171
00:07:22,560 --> 00:07:25,199
to eavesdrop on Alice

172
00:07:25,199 --> 00:07:29,580
so for our evaluation we used the chip

173
00:07:29,580 --> 00:07:32,160
shelter device with 120

174
00:07:32,160 --> 00:07:34,380
um pulses per second and here on the

175
00:07:34,380 --> 00:07:36,960
left you'll see a smartphone in

176
00:07:36,960 --> 00:07:40,580
landscape mode where we injected some uh

177
00:07:40,580 --> 00:07:43,800
multiple hundreds of touch points always

178
00:07:43,800 --> 00:07:47,220
at the same area on two consecutive RX

179
00:07:47,220 --> 00:07:50,400
lines so by using beam forming or

180
00:07:50,400 --> 00:07:52,319
smaller and bigger antennas you can

181
00:07:52,319 --> 00:07:55,560
couple to only one RX line or two or

182
00:07:55,560 --> 00:07:58,080
even more so it's also possible to

183
00:07:58,080 --> 00:08:02,580
inject a multi-touch gestures

184
00:08:02,580 --> 00:08:06,660
and we are also able to inject swipes

185
00:08:06,660 --> 00:08:09,720
into the phone swipes up and down by

186
00:08:09,720 --> 00:08:12,300
tweaking the injection frequency a bit a

187
00:08:12,300 --> 00:08:14,520
bit higher than 120 hertz or a bit lower

188
00:08:14,520 --> 00:08:17,280
than 120 hertz because like you can see

189
00:08:17,280 --> 00:08:19,139
here they are distinctive touch points

190
00:08:19,139 --> 00:08:21,780
injected but two distinct touch points

191
00:08:21,780 --> 00:08:23,639
in the aerial And Timely vicinity to

192
00:08:23,639 --> 00:08:26,340
each other will be interpreted by the OS

193
00:08:26,340 --> 00:08:29,280
as a swipe up or down

194
00:08:29,280 --> 00:08:32,820
so we also evaluated many smartphones

195
00:08:32,820 --> 00:08:35,580
here you can see six smartphones where

196
00:08:35,580 --> 00:08:39,899
our precise attack was possible and for

197
00:08:39,899 --> 00:08:42,360
example when you look at the Nexus 5X

198
00:08:42,360 --> 00:08:44,580
you can see that we are able to inject

199
00:08:44,580 --> 00:08:48,779
up to 8.2 touch points per second with a

200
00:08:48,779 --> 00:08:52,380
standard deviation of only 14.6 and 90.2

201
00:08:52,380 --> 00:08:55,260
pixels on the X and Y axis so it's very

202
00:08:55,260 --> 00:08:58,500
precise contained we can inject exactly

203
00:08:58,500 --> 00:09:00,420
where we want

204
00:09:00,420 --> 00:09:04,140
the next three we were unfortunately not

205
00:09:04,140 --> 00:09:06,779
able to inject precise touch pawns but

206
00:09:06,779 --> 00:09:08,459
we were able to inject random touch

207
00:09:08,459 --> 00:09:11,760
points which can be used for like a Dos

208
00:09:11,760 --> 00:09:12,620
attack

209
00:09:12,620 --> 00:09:15,360
and the last two we were not able to

210
00:09:15,360 --> 00:09:17,580
inject any touches unfortunately

211
00:09:17,580 --> 00:09:20,220
um we think this is because of a heavy

212
00:09:20,220 --> 00:09:24,000
Emi shielding or the use of uh different

213
00:09:24,000 --> 00:09:26,220
driving methods such as frequency

214
00:09:26,220 --> 00:09:28,080
driving method where we have to change

215
00:09:28,080 --> 00:09:30,300
our approach to also attack these

216
00:09:30,300 --> 00:09:31,740
devices

217
00:09:31,740 --> 00:09:34,560
and with this I conclude my talk and I'm

218
00:09:34,560 --> 00:09:38,599
happy to take questions thank you

