1
00:00:08,179 --> 00:00:10,860
hello everyone my name is Jennifer Lee

2
00:00:10,860 --> 00:00:13,139
today I will give you an introduction

3
00:00:13,139 --> 00:00:16,680
about our work for buying grid open

4
00:00:16,680 --> 00:00:20,820
world enjoy the app fingerprinting

5
00:00:20,820 --> 00:00:24,000
nowadays mobile VBS will ship modern app

6
00:00:24,000 --> 00:00:27,000
Styles in different aspects on one hand

7
00:00:27,000 --> 00:00:30,119
mobile apbs provide convenience to our

8
00:00:30,119 --> 00:00:33,059
life on the other hand they may also

9
00:00:33,059 --> 00:00:36,840
leak user privacy despite the widespread

10
00:00:36,840 --> 00:00:39,000
adoption of encrypted communication

11
00:00:39,000 --> 00:00:42,300
mobile appears are still susceptible to

12
00:00:42,300 --> 00:00:44,940
ABB fingerprinting which is a kind of

13
00:00:44,940 --> 00:00:48,719
traffic analysis technique it infer user

14
00:00:48,719 --> 00:00:51,059
activity using features related to

15
00:00:51,059 --> 00:00:53,820
packet timing packet Direction and

16
00:00:53,820 --> 00:00:56,879
practical size without using packet

17
00:00:56,879 --> 00:00:59,760
payloads it is a double aged sword

18
00:00:59,760 --> 00:01:03,539
network administrator make use of it for

19
00:01:03,539 --> 00:01:04,739
sensitive

20
00:01:04,739 --> 00:01:08,780
malware detection and the user profiling

21
00:01:08,780 --> 00:01:12,840
attacks use it to spy on somebody or

22
00:01:12,840 --> 00:01:15,659
infer user privacy

23
00:01:15,659 --> 00:01:18,000
there are two major limitations of

24
00:01:18,000 --> 00:01:20,700
existing NPP fingerprinting methods

25
00:01:20,700 --> 00:01:23,400
number one the mainly work under the

26
00:01:23,400 --> 00:01:26,640
cluster World assumption the set of apbs

27
00:01:26,640 --> 00:01:30,060
in testing must be a subset of apbs for

28
00:01:30,060 --> 00:01:33,240
model training number two existing app

29
00:01:33,240 --> 00:01:36,659
fake printing can only recognize apps of

30
00:01:36,659 --> 00:01:40,259
Interest or Identify some selected user

31
00:01:40,259 --> 00:01:42,960
actions this user actions needed to

32
00:01:42,960 --> 00:01:45,000
being manually labeled when constructing

33
00:01:45,000 --> 00:01:46,680
trading data set

34
00:01:46,680 --> 00:01:49,560
in this work we want to solve these two

35
00:01:49,560 --> 00:01:52,920
limitations first we carry out APB

36
00:01:52,920 --> 00:01:54,899
fingerprinting in the open world setting

37
00:01:54,899 --> 00:01:58,680
the major challenge is how to reduce the

38
00:01:58,680 --> 00:02:00,840
risk of false positives

39
00:02:00,840 --> 00:02:03,720
caused by ABB and cylindering model

40
00:02:03,720 --> 00:02:05,040
training

41
00:02:05,040 --> 00:02:08,459
second we want to achieve fine grid user

42
00:02:08,459 --> 00:02:10,800
action identification the major

43
00:02:10,800 --> 00:02:13,260
challenge is how to automatically label

44
00:02:13,260 --> 00:02:16,500
user actions to create training data set

45
00:02:16,500 --> 00:02:19,440
here is the threat model let's assuming

46
00:02:19,440 --> 00:02:21,959
that the adversaries leaves Network

47
00:02:21,959 --> 00:02:25,680
traffic on a wireless AP and he can

48
00:02:25,680 --> 00:02:27,959
choose back all Network flows to

49
00:02:27,959 --> 00:02:30,180
different devices according to the

50
00:02:30,180 --> 00:02:32,040
source destinations

51
00:02:32,040 --> 00:02:35,280
the adversary wants to recognize user

52
00:02:35,280 --> 00:02:38,280
activities associated with app of

53
00:02:38,280 --> 00:02:40,920
interest but he cannot use packet

54
00:02:40,920 --> 00:02:43,680
payload and destination feature of

55
00:02:43,680 --> 00:02:46,760
network flows

56
00:02:49,200 --> 00:02:52,739
our solution is called fog next averages

57
00:02:52,739 --> 00:02:55,620
the design of folk

58
00:02:55,620 --> 00:02:58,440
here is the overall workflow Network

59
00:02:58,440 --> 00:03:00,660
traffic labeling module is used to

60
00:03:00,660 --> 00:03:03,120
create the training data set traffic

61
00:03:03,120 --> 00:03:06,239
segmentation traffic filtering and

62
00:03:06,239 --> 00:03:08,280
upload recognition module work together

63
00:03:08,280 --> 00:03:10,680
to conduct open world ABP traffic

64
00:03:10,680 --> 00:03:12,120
Recreation

65
00:03:12,120 --> 00:03:15,080
after that method level user action

66
00:03:15,080 --> 00:03:18,000
identification module where further

67
00:03:18,000 --> 00:03:20,420
carries out fighting with APB

68
00:03:20,420 --> 00:03:22,159
fingerprinting

69
00:03:22,159 --> 00:03:25,319
to achieve open world APB traffic

70
00:03:25,319 --> 00:03:29,099
recognition earlier 2 create course

71
00:03:29,099 --> 00:03:31,620
grids training data and the label

72
00:03:31,620 --> 00:03:34,459
Network flows with ABP packaging name

73
00:03:34,459 --> 00:03:37,319
server instruments circuit related

74
00:03:37,319 --> 00:03:41,760
functions of Android system and use PID

75
00:03:41,760 --> 00:03:45,840
to correlate the socket with EPB package

76
00:03:45,840 --> 00:03:49,560
name for each floor we extract a feature

77
00:03:49,560 --> 00:03:52,200
Vector from different angles associated

78
00:03:52,200 --> 00:03:55,799
with participating package Direction and

79
00:03:55,799 --> 00:03:58,700
the package size

80
00:03:58,920 --> 00:04:01,680
assuming that a is an ABP of interest

81
00:04:01,680 --> 00:04:04,500
and we want to infer user activities

82
00:04:04,500 --> 00:04:08,159
about a in the open word setting the

83
00:04:08,159 --> 00:04:11,340
core task is excluding Network workflows

84
00:04:11,340 --> 00:04:14,580
that are extremely similar to flows from

85
00:04:14,580 --> 00:04:18,238
a but not generated by a because they

86
00:04:18,238 --> 00:04:21,899
may become phosporatives to this and we

87
00:04:21,899 --> 00:04:24,600
first propose a lower metric local

88
00:04:24,600 --> 00:04:26,280
similarity

89
00:04:26,280 --> 00:04:29,639
it is used to quantify how a network

90
00:04:29,639 --> 00:04:31,740
flow is similar to network flows

91
00:04:31,740 --> 00:04:34,500
generated by a from the perspective of a

92
00:04:34,500 --> 00:04:36,000
single flow

93
00:04:36,000 --> 00:04:38,840
Network flows generated by a are

94
00:04:38,840 --> 00:04:41,940
expected to have a higher local

95
00:04:41,940 --> 00:04:44,699
similarity with a than those generated

96
00:04:44,699 --> 00:04:46,440
by other ebps

97
00:04:46,440 --> 00:04:49,259
so we can observe obvious difference

98
00:04:49,259 --> 00:04:52,500
between time periods dominated by a and

99
00:04:52,500 --> 00:04:55,139
as those dominated by other Epps

100
00:04:55,139 --> 00:04:58,139
based on this observation will conduct

101
00:04:58,139 --> 00:05:01,740
traffic segmentation in an unsupervised

102
00:05:01,740 --> 00:05:04,860
manner to divide network of traffic into

103
00:05:04,860 --> 00:05:08,600
different time periods such that the

104
00:05:08,600 --> 00:05:13,199
APPA is active during some time periods

105
00:05:13,199 --> 00:05:16,080
we formulated this problem as a

106
00:05:16,080 --> 00:05:18,900
combinational optimization and propose a

107
00:05:18,900 --> 00:05:22,758
three-based algorithm to solve it

108
00:05:24,120 --> 00:05:26,940
the second step is traffic filtering if

109
00:05:26,940 --> 00:05:29,520
the app of interest is active during a

110
00:05:29,520 --> 00:05:32,220
traffic segment we refer to it as a

111
00:05:32,220 --> 00:05:34,979
relevant traffic statement otherwise it

112
00:05:34,979 --> 00:05:37,560
is an irrelevant traffic segment and we

113
00:05:37,560 --> 00:05:40,620
want to filter out it to reduce false

114
00:05:40,620 --> 00:05:44,280
positive risk press down below pattern

115
00:05:44,280 --> 00:05:46,320
mining you quantify highlight the

116
00:05:46,320 --> 00:05:48,780
network flow matches a certain pattern

117
00:05:48,780 --> 00:05:52,380
of network flows generated by a next we

118
00:05:52,380 --> 00:05:54,419
compute the structural similarity for

119
00:05:54,419 --> 00:05:56,940
each traffic segment to judge weather

120
00:05:56,940 --> 00:05:59,520
flows in its mesh different patterns of

121
00:05:59,520 --> 00:06:02,220
the app of Interest a relevant traffic

122
00:06:02,220 --> 00:06:05,340
segments has high structural similarity

123
00:06:05,340 --> 00:06:08,160
with a because flows in each can match

124
00:06:08,160 --> 00:06:12,120
many different patterns just snack S1 on

125
00:06:12,120 --> 00:06:14,520
the contrary and is relevant to traffic

126
00:06:14,520 --> 00:06:16,740
statement has a low structural

127
00:06:16,740 --> 00:06:19,680
similarity with a it will be discarded

128
00:06:19,680 --> 00:06:23,100
without further analysis finally we

129
00:06:23,100 --> 00:06:26,160
construct a bi-level recognition model

130
00:06:26,160 --> 00:06:29,340
to recognize Network flows generated by

131
00:06:29,340 --> 00:06:32,479
a from S1

132
00:06:32,520 --> 00:06:36,539
next we further identify fine grids user

133
00:06:36,539 --> 00:06:38,819
actions from Network flows generated by

134
00:06:38,819 --> 00:06:41,400
the app of Interest we propose the

135
00:06:41,400 --> 00:06:43,919
Master Level labeling to construct fine

136
00:06:43,919 --> 00:06:46,740
grid training data generally speaking

137
00:06:46,740 --> 00:06:49,680
there are three mainstream ways for

138
00:06:49,680 --> 00:06:53,460
Android to implement network operations

139
00:06:53,460 --> 00:06:56,639
they are creating a new thread using

140
00:06:56,639 --> 00:07:00,539
message Handler and using thread pool

141
00:07:00,539 --> 00:07:03,300
we instrument different functions to map

142
00:07:03,300 --> 00:07:07,199
circuits to entry point methods or EP

143
00:07:07,199 --> 00:07:10,680
methods for short the EP method can be

144
00:07:10,680 --> 00:07:14,100
the component's life cycle or the UI

145
00:07:14,100 --> 00:07:17,639
Quebec this EP methods triggers the

146
00:07:17,639 --> 00:07:20,759
corresponding Network flows

147
00:07:20,759 --> 00:07:23,340
to achievement level user action

148
00:07:23,340 --> 00:07:26,039
identification we first extract and

149
00:07:26,039 --> 00:07:29,340
packaged bursts for Network flows it is

150
00:07:29,340 --> 00:07:31,620
because Network flows corresponding to

151
00:07:31,620 --> 00:07:34,199
processing connections often contain

152
00:07:34,199 --> 00:07:37,020
multiple packet packaged bursts

153
00:07:37,020 --> 00:07:39,000
they may be triggered by different EP

154
00:07:39,000 --> 00:07:43,020
methods we instruct a feature Vector for

155
00:07:43,020 --> 00:07:45,960
each breast just like what we do for

156
00:07:45,960 --> 00:07:49,560
Network flows next we construct a

157
00:07:49,560 --> 00:07:52,199
special temporal context model to

158
00:07:52,199 --> 00:07:54,419
characterize the correlation between

159
00:07:54,419 --> 00:07:57,960
bursts we infer entry point methods

160
00:07:57,960 --> 00:08:01,259
based on conditional random Fields model

161
00:08:01,259 --> 00:08:04,860
to identify fine-grid user actions such

162
00:08:04,860 --> 00:08:09,259
as clicking on a button

163
00:08:11,599 --> 00:08:14,880
next we evaluate the verb

164
00:08:14,880 --> 00:08:18,000
we first evaluate it in open world APB

165
00:08:18,000 --> 00:08:20,879
traffic recognition we download 1000

166
00:08:20,879 --> 00:08:23,400
popular Android apbs to construct the

167
00:08:23,400 --> 00:08:24,500
data set

168
00:08:24,500 --> 00:08:27,419
experimental results Shoe Club is

169
00:08:27,419 --> 00:08:30,720
reasonably accurate it's everyone's goal

170
00:08:30,720 --> 00:08:31,820
is up to

171
00:08:31,820 --> 00:08:36,120
0.911 it consistently outperforms based

172
00:08:36,120 --> 00:08:39,059
nightmare methods in terms of precision

173
00:08:39,059 --> 00:08:43,559
the core and F1 score we also shoot the

174
00:08:43,559 --> 00:08:46,440
effect of different modules of verb you

175
00:08:46,440 --> 00:08:48,899
can find the traffic filtering helps

176
00:08:48,899 --> 00:08:51,360
improve the Precision and by level

177
00:08:51,360 --> 00:08:54,420
recognition model helps improve the core

178
00:08:54,420 --> 00:08:58,380
we further evaluate the verb in a more

179
00:08:58,380 --> 00:09:01,260
generalized open world setting including

180
00:09:01,260 --> 00:09:05,399
web traffic iot traffic and PC traffic

181
00:09:05,399 --> 00:09:08,399
the first positive rate of verb is very

182
00:09:08,399 --> 00:09:09,779
low

183
00:09:09,779 --> 00:09:13,200
Bob also achieves a good accuracy in

184
00:09:13,200 --> 00:09:16,080
entry point method identification it's

185
00:09:16,080 --> 00:09:18,800
everyone's goal is up to

186
00:09:18,800 --> 00:09:20,640
0.885

187
00:09:20,640 --> 00:09:23,880
we also conduct cross data sets

188
00:09:23,880 --> 00:09:26,220
evaluation we find the fourth between

189
00:09:26,220 --> 00:09:28,860
the based on traffic generated by

190
00:09:28,860 --> 00:09:31,320
automatic testing tools can still

191
00:09:31,320 --> 00:09:33,660
recognize traffic generated by human

192
00:09:33,660 --> 00:09:37,140
users with a higher Precision but the

193
00:09:37,140 --> 00:09:40,620
record drops we also find adding some

194
00:09:40,620 --> 00:09:43,260
human generated samples to the Trinity

195
00:09:43,260 --> 00:09:46,140
data set where significantly improves

196
00:09:46,140 --> 00:09:48,800
subject core

197
00:09:51,240 --> 00:09:53,880
photo can be applied in fine with the

198
00:09:53,880 --> 00:09:56,700
user activity inference here is an

199
00:09:56,700 --> 00:09:59,519
example of Twitter we first recorded

200
00:09:59,519 --> 00:10:02,100
entry point methods with different user

201
00:10:02,100 --> 00:10:03,959
actions in Twitter

202
00:10:03,959 --> 00:10:06,839
we next identify this user actions by

203
00:10:06,839 --> 00:10:09,420
identifying their corresponding entry

204
00:10:09,420 --> 00:10:11,220
point methods

205
00:10:11,220 --> 00:10:14,820
Bob can also be used to analyze user

206
00:10:14,820 --> 00:10:18,360
privacy here we Show an example in this

207
00:10:18,360 --> 00:10:21,240
example the identify positive reporting

208
00:10:21,240 --> 00:10:25,980
in a combinating contact reducing app

209
00:10:25,980 --> 00:10:29,160
we evaluate how full performance in face

210
00:10:29,160 --> 00:10:31,920
of contaminer the different strategies

211
00:10:31,920 --> 00:10:36,300
include packet paddings and timing

212
00:10:36,300 --> 00:10:38,040
Target injection

213
00:10:38,040 --> 00:10:40,980
order the accuracy of verb drops it

214
00:10:40,980 --> 00:10:42,839
still works

215
00:10:42,839 --> 00:10:46,260
to summarize fog is the first approach

216
00:10:46,260 --> 00:10:49,200
to identifying measure level language

217
00:10:49,200 --> 00:10:54,779
user actions of Android apps

218
00:10:54,800 --> 00:10:58,440
is the first positive risks in the open

219
00:10:58,440 --> 00:11:01,440
world setting based on an Adaptive

220
00:11:01,440 --> 00:11:03,720
traffic filtering

221
00:11:03,720 --> 00:11:06,180
to achieve measure level user action

222
00:11:06,180 --> 00:11:09,740
identification but synthesizes traffic

223
00:11:09,740 --> 00:11:13,680
analysis and binary analysis our method

224
00:11:13,680 --> 00:11:15,720
can be applied in user activity

225
00:11:15,720 --> 00:11:20,339
influence and the user privacy analysis

226
00:11:20,339 --> 00:11:24,079
thanks so much for your recently

