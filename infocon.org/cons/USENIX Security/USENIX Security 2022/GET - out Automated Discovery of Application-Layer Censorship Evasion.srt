1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:07,859 --> 00:00:09,780
I'm Freddie

3
00:00:09,780 --> 00:00:11,940
and I'm excited to tell you about our

4
00:00:11,940 --> 00:00:14,099
work on automating the discovery of

5
00:00:14,099 --> 00:00:16,079
censorship evasion in the application

6
00:00:16,079 --> 00:00:17,160
layer

7
00:00:17,160 --> 00:00:18,840
and so as was just mentioned this is a

8
00:00:18,840 --> 00:00:21,359
collaboration with Michael Harrity Kevin

9
00:00:21,359 --> 00:00:24,000
Bach and our advisor Dave Levin

10
00:00:24,000 --> 00:00:25,680
so

11
00:00:25,680 --> 00:00:27,599
censorship is a pernicious threat

12
00:00:27,599 --> 00:00:29,400
against free and open Communication

13
00:00:29,400 --> 00:00:31,500
online and this work specifically

14
00:00:31,500 --> 00:00:34,079
focuses on in-network censorship

15
00:00:34,079 --> 00:00:36,719
and so what that looks like is we have a

16
00:00:36,719 --> 00:00:38,280
client and we have a server and the

17
00:00:38,280 --> 00:00:39,420
sensor is going to be a middle box

18
00:00:39,420 --> 00:00:41,640
somewhere between the two

19
00:00:41,640 --> 00:00:42,960
my client's going to send out the

20
00:00:42,960 --> 00:00:44,879
request to contact the Forbidden

21
00:00:44,879 --> 00:00:47,040
resource in this case Wikipedia

22
00:00:47,040 --> 00:00:49,739
the sensor is going to see hey this

23
00:00:49,739 --> 00:00:51,000
instance of chrome is trying to contact

24
00:00:51,000 --> 00:00:53,579
Wikipedia and block the connection this

25
00:00:53,579 --> 00:00:56,460
can mean inserting reset packets or

26
00:00:56,460 --> 00:00:59,640
sending the client an HTTP blog page

27
00:00:59,640 --> 00:01:01,500
in the case of DNS censorship it can

28
00:01:01,500 --> 00:01:03,480
mean sending back a lemon DNS response

29
00:01:03,480 --> 00:01:06,240
so a DNS response with an invalid IP

30
00:01:06,240 --> 00:01:08,460
unfortunately this is in place in

31
00:01:08,460 --> 00:01:10,080
countries around the world China

32
00:01:10,080 --> 00:01:11,880
Kazakhstan India

33
00:01:11,880 --> 00:01:15,119
Russia Iran Egypt and many more

34
00:01:15,119 --> 00:01:16,740
the good news is there's been a recent

35
00:01:16,740 --> 00:01:18,240
threat of research concerned with

36
00:01:18,240 --> 00:01:20,400
automating the process of finding

37
00:01:20,400 --> 00:01:22,560
censorship evasion strategies and these

38
00:01:22,560 --> 00:01:26,159
are Geneva alembic and Sim TCP

39
00:01:26,159 --> 00:01:28,140
an evasion strategy is some way of

40
00:01:28,140 --> 00:01:30,540
altering a packet such that when you

41
00:01:30,540 --> 00:01:32,280
send it over the wire

42
00:01:32,280 --> 00:01:34,619
a sensor won't trigger it either will

43
00:01:34,619 --> 00:01:35,880
throw up its hands and not know what to

44
00:01:35,880 --> 00:01:37,619
do with it or it will think the request

45
00:01:37,619 --> 00:01:40,140
is totally benign and the end server

46
00:01:40,140 --> 00:01:41,759
will interact with this packet normally

47
00:01:41,759 --> 00:01:44,159
and censorship is evaded

48
00:01:44,159 --> 00:01:46,320
so this is really great these are all

49
00:01:46,320 --> 00:01:48,479
these aren't just methods of these

50
00:01:48,479 --> 00:01:50,159
aren't just one-off methods for ways to

51
00:01:50,159 --> 00:01:51,600
manipulate packets to evade censorship

52
00:01:51,600 --> 00:01:53,220
these are ways to automatically find

53
00:01:53,220 --> 00:01:55,560
censorship of Asian strategies

54
00:01:55,560 --> 00:01:58,560
and they found over 100 strategies and

55
00:01:58,560 --> 00:02:00,360
have they've been enormously successful

56
00:02:00,360 --> 00:02:02,220
but there are of course room for

57
00:02:02,220 --> 00:02:03,840
improvement

58
00:02:03,840 --> 00:02:06,840
one of those is that they all three of

59
00:02:06,840 --> 00:02:08,758
these specifically manipulate the TCP

60
00:02:08,758 --> 00:02:10,440
and IP headers

61
00:02:10,440 --> 00:02:12,900
this raises challenge for the challenges

62
00:02:12,900 --> 00:02:14,400
for deployment since plenty of

63
00:02:14,400 --> 00:02:16,500
applications don't want to ask users for

64
00:02:16,500 --> 00:02:18,180
root level privileges

65
00:02:18,180 --> 00:02:20,099
mobile phone and mobile phones it's

66
00:02:20,099 --> 00:02:22,140
really hard to get root privileges it's

67
00:02:22,140 --> 00:02:23,819
really hard to manipulate these TCP IB

68
00:02:23,819 --> 00:02:24,840
headers

69
00:02:24,840 --> 00:02:27,300
so barrier for deployment there number

70
00:02:27,300 --> 00:02:30,360
two we just heard about DNS

71
00:02:30,360 --> 00:02:33,599
DNS over UDP

72
00:02:33,599 --> 00:02:35,580
when it comes to that protocol we don't

73
00:02:35,580 --> 00:02:39,180
have the processes for automatically

74
00:02:39,180 --> 00:02:42,540
finding strategies to find oh my bad we

75
00:02:42,540 --> 00:02:44,220
don't have we don't have techniques to

76
00:02:44,220 --> 00:02:46,019
automatically find strategies in this

77
00:02:46,019 --> 00:02:46,980
space

78
00:02:46,980 --> 00:02:49,500
because it runs on UDP so

79
00:02:49,500 --> 00:02:51,660
the idea is if we bring

80
00:02:51,660 --> 00:02:53,700
work to the application layer if we

81
00:02:53,700 --> 00:02:54,780
bring this existing work to the

82
00:02:54,780 --> 00:02:56,099
application layer

83
00:02:56,099 --> 00:02:58,260
we won't need heightened permissions to

84
00:02:58,260 --> 00:03:00,180
execute them applications can manipulate

85
00:03:00,180 --> 00:03:02,819
their own applications application data

86
00:03:02,819 --> 00:03:04,500
streams so no problem there and two

87
00:03:04,500 --> 00:03:06,120
focusing on the application layer means

88
00:03:06,120 --> 00:03:07,860
we can automatically find DNS strategies

89
00:03:07,860 --> 00:03:09,900
fantastic

90
00:03:09,900 --> 00:03:11,819
to achieve this we're going to expand

91
00:03:11,819 --> 00:03:14,580
upon Geneva in essence we need to fuzz

92
00:03:14,580 --> 00:03:17,040
in the application layer

93
00:03:17,040 --> 00:03:19,319
there's a subtlety here because most

94
00:03:19,319 --> 00:03:21,300
fuzzers are concerned with finding one

95
00:03:21,300 --> 00:03:24,120
input to break a server or maybe even

96
00:03:24,120 --> 00:03:26,099
evade censorship but we're concerned

97
00:03:26,099 --> 00:03:28,140
with finding ways to manipulate existing

98
00:03:28,140 --> 00:03:30,959
traffic to evade censorship and Geneva

99
00:03:30,959 --> 00:03:32,819
did that with the TCP IP layer and so

100
00:03:32,819 --> 00:03:34,980
we're expanding Geneva

101
00:03:34,980 --> 00:03:37,260
to work that way for the application

102
00:03:37,260 --> 00:03:38,280
layer we're going to do this in three

103
00:03:38,280 --> 00:03:39,780
steps number one Geneva has to

104
00:03:39,780 --> 00:03:42,180
understand the protocol

105
00:03:42,180 --> 00:03:45,060
so this is HTTP we have our request line

106
00:03:45,060 --> 00:03:47,220
made up of a method a path and a version

107
00:03:47,220 --> 00:03:48,720
and then we have arbitrarily many

108
00:03:48,720 --> 00:03:50,700
headers

109
00:03:50,700 --> 00:03:52,799
we tell give this information to Geneva

110
00:03:52,799 --> 00:03:54,420
so it knows and understands each of

111
00:03:54,420 --> 00:03:56,700
these fields and we define specific

112
00:03:56,700 --> 00:03:58,799
manipulation Primitives

113
00:03:58,799 --> 00:04:00,480
ways of altering some of these

114
00:04:00,480 --> 00:04:02,879
components of an HTTP request we have

115
00:04:02,879 --> 00:04:04,799
insert which can consider a field and

116
00:04:04,799 --> 00:04:06,900
insert text into it we have replace

117
00:04:06,900 --> 00:04:09,540
which same deal consider a field and you

118
00:04:09,540 --> 00:04:11,459
can replace the text in there and I'll

119
00:04:11,459 --> 00:04:12,799
show you an example of this soon

120
00:04:12,799 --> 00:04:15,480
duplicate we'll take a header and make

121
00:04:15,480 --> 00:04:16,620
two

122
00:04:16,620 --> 00:04:18,358
and finally change case will change the

123
00:04:18,358 --> 00:04:19,680
casing of

124
00:04:19,680 --> 00:04:22,320
a field so these are really simple but

125
00:04:22,320 --> 00:04:24,720
we can compose them together to form

126
00:04:24,720 --> 00:04:26,100
strategies

127
00:04:26,100 --> 00:04:28,500
and with just these four Primitives we

128
00:04:28,500 --> 00:04:30,840
can be actually quite expressive with

129
00:04:30,840 --> 00:04:33,960
the ways we can manipulate HTTP so

130
00:04:33,960 --> 00:04:35,880
here's a quick example first duplicate

131
00:04:35,880 --> 00:04:38,160
the host header

132
00:04:38,160 --> 00:04:40,680
run that primitive now we have two next

133
00:04:40,680 --> 00:04:42,479
the replace action is going to replace

134
00:04:42,479 --> 00:04:46,680
this the first the left child

135
00:04:46,680 --> 00:04:48,720
of the duplicate action

136
00:04:48,720 --> 00:04:51,800
in the following way

137
00:04:52,440 --> 00:04:55,500
and then we send out this request

138
00:04:55,500 --> 00:04:57,900
so believe it or not this evades

139
00:04:57,900 --> 00:05:00,419
censorship in China so a really simple

140
00:05:00,419 --> 00:05:01,919
strategy like this

141
00:05:01,919 --> 00:05:03,720
Works

142
00:05:03,720 --> 00:05:06,720
um and there we are so we have these

143
00:05:06,720 --> 00:05:08,220
manipulation Primitives we compose them

144
00:05:08,220 --> 00:05:10,620
to make strategies and a simple strategy

145
00:05:10,620 --> 00:05:13,199
like that can evade fantastic

146
00:05:13,199 --> 00:05:15,120
so how do we find these strategies this

147
00:05:15,120 --> 00:05:16,860
is where we hand these Primitives off to

148
00:05:16,860 --> 00:05:19,259
Geneva's AI Geneva originally written by

149
00:05:19,259 --> 00:05:21,180
Kevin Bach and our group at the

150
00:05:21,180 --> 00:05:23,220
University of Maryland

151
00:05:23,220 --> 00:05:25,320
which will search over the space of

152
00:05:25,320 --> 00:05:27,180
Primitives and find successful

153
00:05:27,180 --> 00:05:28,740
strategies it trains against Real World

154
00:05:28,740 --> 00:05:30,539
sensors I can't go into the depth of how

155
00:05:30,539 --> 00:05:32,699
that works right now I'd encourage you

156
00:05:32,699 --> 00:05:34,139
to read the paper to learn more about

157
00:05:34,139 --> 00:05:34,860
that

158
00:05:34,860 --> 00:05:36,360
to note these Primitives understand

159
00:05:36,360 --> 00:05:39,300
syntax and not semantics uh it can go oh

160
00:05:39,300 --> 00:05:41,639
hey here's the host header I can replace

161
00:05:41,639 --> 00:05:45,539
it with 64as but I don't know what that

162
00:05:45,539 --> 00:05:46,979
means or what that's going to do this

163
00:05:46,979 --> 00:05:49,560
keeps the AI blind it shouldn't know it

164
00:05:49,560 --> 00:05:50,820
shouldn't have an idea of what its

165
00:05:50,820 --> 00:05:52,199
changes will affect we want to be able

166
00:05:52,199 --> 00:05:54,000
to blindly explore that

167
00:05:54,000 --> 00:05:57,360
space so how do we evaluate this

168
00:05:57,360 --> 00:05:59,220
we train against Real World sensors in

169
00:05:59,220 --> 00:06:01,259
China India and Kazakhstan and remember

170
00:06:01,259 --> 00:06:03,900
the game is a Veda sensor make it think

171
00:06:03,900 --> 00:06:06,660
it's invalid HP http

172
00:06:06,660 --> 00:06:09,780
but have the end server treated as a

173
00:06:09,780 --> 00:06:11,280
valid request so we have to train

174
00:06:11,280 --> 00:06:13,560
against specific servers because

175
00:06:13,560 --> 00:06:14,759
different servers are going to accept

176
00:06:14,759 --> 00:06:16,860
different sorts of requests

177
00:06:16,860 --> 00:06:18,780
and so these are the servers we use and

178
00:06:18,780 --> 00:06:20,639
when it comes to DNS these are the open

179
00:06:20,639 --> 00:06:22,860
resolvers that we use

180
00:06:22,860 --> 00:06:25,080
we find a lot of results we train

181
00:06:25,080 --> 00:06:27,180
against the cross products so we from

182
00:06:27,180 --> 00:06:28,919
each country we train against each

183
00:06:28,919 --> 00:06:29,819
server

184
00:06:29,819 --> 00:06:31,680
and find a lot of strategies again I

185
00:06:31,680 --> 00:06:32,940
don't have time to go over all of them

186
00:06:32,940 --> 00:06:34,199
so I'd encourage you to look at the

187
00:06:34,199 --> 00:06:37,500
paper but 77 HTTP strategies nine DNS

188
00:06:37,500 --> 00:06:39,000
strategies I'll go over some of them

189
00:06:39,000 --> 00:06:40,319
with you now

190
00:06:40,319 --> 00:06:42,539
this cutie count field represents the

191
00:06:42,539 --> 00:06:44,639
number of queries in a DNS request in

192
00:06:44,639 --> 00:06:46,979
this case we only have one google.sm and

193
00:06:46,979 --> 00:06:49,800
QD account is set to one fantastic

194
00:06:49,800 --> 00:06:52,800
if we flip this to two

195
00:06:52,800 --> 00:06:55,560
China's DNS sensor will let this through

196
00:06:55,560 --> 00:06:58,440
and cloudflare responds with a valid IP

197
00:06:58,440 --> 00:07:00,900
okay

198
00:07:00,900 --> 00:07:03,060
oh that was only cloudflare let's also

199
00:07:03,060 --> 00:07:03,900
use

200
00:07:03,900 --> 00:07:06,479
let's also get Open DNS on this if you

201
00:07:06,479 --> 00:07:08,160
flip the answer count to one again there

202
00:07:08,160 --> 00:07:11,100
are no actual answers in this query

203
00:07:11,100 --> 00:07:13,440
again of AIDS China censor and both

204
00:07:13,440 --> 00:07:16,560
cloudflare and open DNS will respond

205
00:07:16,560 --> 00:07:19,380
with valid IPS so the point here is that

206
00:07:19,380 --> 00:07:22,319
this is a really simple strategy this is

207
00:07:22,319 --> 00:07:24,000
so simple and yet it worked against

208
00:07:24,000 --> 00:07:26,039
China's sensor

209
00:07:26,039 --> 00:07:30,000
how is that possible what we took away

210
00:07:30,000 --> 00:07:31,800
from this is that this space is largely

211
00:07:31,800 --> 00:07:33,060
unexplored

212
00:07:33,060 --> 00:07:34,500
and so hopefully this is just the

213
00:07:34,500 --> 00:07:36,000
beginning of a lot more work in

214
00:07:36,000 --> 00:07:37,800
automating the discovery of these sorts

215
00:07:37,800 --> 00:07:39,660
of strategies and exploring the the

216
00:07:39,660 --> 00:07:41,220
application layer as an option for

217
00:07:41,220 --> 00:07:43,620
censorship evasion this next takeaway is

218
00:07:43,620 --> 00:07:45,660
all really exciting this is now an HTTP

219
00:07:45,660 --> 00:07:47,880
strategy

220
00:07:47,880 --> 00:07:50,220
um we're gonna the band keyword here is

221
00:07:50,220 --> 00:07:53,580
youporn.com and

222
00:07:53,580 --> 00:07:55,080
all you have to do is change the version

223
00:07:55,080 --> 00:07:57,960
to be some invalid HTTP string sensors

224
00:07:57,960 --> 00:07:59,460
are going to look at that and not know

225
00:07:59,460 --> 00:08:00,840
what to do with it it's going to think

226
00:08:00,840 --> 00:08:04,080
it's invalid HTTP I'm not censoring

227
00:08:04,080 --> 00:08:07,979
Apache 2.4.6 and 2.4.18 you're good to

228
00:08:07,979 --> 00:08:09,720
go

229
00:08:09,720 --> 00:08:12,479
the key takeaway here is that a source

230
00:08:12,479 --> 00:08:14,520
of a lot of the strategies we find are

231
00:08:14,520 --> 00:08:16,160
things like this

232
00:08:16,160 --> 00:08:18,960
totally breaking the protocol in such a

233
00:08:18,960 --> 00:08:20,879
way that the sensor doesn't know how to

234
00:08:20,879 --> 00:08:22,440
handle it but

235
00:08:22,440 --> 00:08:26,160
real world servers that are in place in

236
00:08:26,160 --> 00:08:27,539
the wild do

237
00:08:27,539 --> 00:08:30,000
despite it not following the protocol so

238
00:08:30,000 --> 00:08:31,979
sensors following the protocol stricter

239
00:08:31,979 --> 00:08:34,559
than servers is a fantastic source for

240
00:08:34,559 --> 00:08:38,339
censorship evasion and that's a neat

241
00:08:38,339 --> 00:08:40,020
lesson

242
00:08:40,020 --> 00:08:42,240
another quick strategy is adding a bunch

243
00:08:42,240 --> 00:08:44,520
of slashes to the front of the path this

244
00:08:44,520 --> 00:08:47,040
is going to force the packet to exceed

245
00:08:47,040 --> 00:08:48,740
1500 bytes

246
00:08:48,740 --> 00:08:51,720
exceeding ethernet's MTU causing

247
00:08:51,720 --> 00:08:53,940
segmentation

248
00:08:53,940 --> 00:08:56,880
and this evades censorship in India

249
00:08:56,880 --> 00:08:58,500
the interesting thing here is that

250
00:08:58,500 --> 00:09:01,019
original Geneva found a strategy like

251
00:09:01,019 --> 00:09:02,220
this because remember it could

252
00:09:02,220 --> 00:09:05,100
manipulate the IP protocol

253
00:09:05,100 --> 00:09:06,899
it found the strategy so it's neat that

254
00:09:06,899 --> 00:09:09,120
we can manipulate

255
00:09:09,120 --> 00:09:11,640
we can affect Network level Network and

256
00:09:11,640 --> 00:09:13,500
transport layer effects from the

257
00:09:13,500 --> 00:09:15,300
application layer but the core takeaway

258
00:09:15,300 --> 00:09:17,160
here is a strategy like this is super

259
00:09:17,160 --> 00:09:19,019
easy to deploy to take this to the

260
00:09:19,019 --> 00:09:20,580
extreme a user could just enter a bunch

261
00:09:20,580 --> 00:09:22,380
of slashes in the browser obviously

262
00:09:22,380 --> 00:09:25,080
obviously that's an extreme case you

263
00:09:25,080 --> 00:09:27,180
don't want users to have to do that but

264
00:09:27,180 --> 00:09:28,860
the point is that these strategies are

265
00:09:28,860 --> 00:09:30,720
so easy to deploy

266
00:09:30,720 --> 00:09:31,800
I've shown you some really simple

267
00:09:31,800 --> 00:09:33,660
strategies Geneva is capable of finding

268
00:09:33,660 --> 00:09:35,399
some really complicated really involved

269
00:09:35,399 --> 00:09:38,640
stuff and I'll share that with you now

270
00:09:38,640 --> 00:09:42,360
if we add headers before and after a

271
00:09:42,360 --> 00:09:44,339
forbidden keyword so in this case

272
00:09:44,339 --> 00:09:46,560
host.youporn.com

273
00:09:46,560 --> 00:09:48,899
this evades censorship in China

274
00:09:48,899 --> 00:09:51,000
here's the interesting thing

275
00:09:51,000 --> 00:09:53,519
this Ultra surf keyword is also

276
00:09:53,519 --> 00:09:56,100
forbidden key word and it comes before

277
00:09:56,100 --> 00:09:58,560
any of our modifications this is really

278
00:09:58,560 --> 00:10:01,380
unintuitive and strange because you

279
00:10:01,380 --> 00:10:03,180
would assume that sensors look from

280
00:10:03,180 --> 00:10:04,560
starting from the beginning of the

281
00:10:04,560 --> 00:10:06,959
application by stream going to the end

282
00:10:06,959 --> 00:10:09,000
this suggests they don't

283
00:10:09,000 --> 00:10:10,380
so

284
00:10:10,380 --> 00:10:12,480
this automated approach means we find

285
00:10:12,480 --> 00:10:14,459
things that we wouldn't have thought to

286
00:10:14,459 --> 00:10:15,480
try

287
00:10:15,480 --> 00:10:17,339
and this can be a great jumping off

288
00:10:17,339 --> 00:10:19,980
point for asking further questions of

289
00:10:19,980 --> 00:10:21,120
these sensors and trying to understand

290
00:10:21,120 --> 00:10:22,640
this black box

291
00:10:22,640 --> 00:10:25,080
that is how they work

292
00:10:25,080 --> 00:10:27,660
we call this class of strategies the

293
00:10:27,660 --> 00:10:29,040
sandwich strategy because you'll notice

294
00:10:29,040 --> 00:10:31,920
we have our two unmodified

295
00:10:31,920 --> 00:10:35,399
field lines followed by the two lines we

296
00:10:35,399 --> 00:10:37,800
modify

297
00:10:37,800 --> 00:10:40,560
this is a class of strategies that we

298
00:10:40,560 --> 00:10:42,480
call the sandwich strategy like I said

299
00:10:42,480 --> 00:10:44,880
and I mentioned it's a more complicated

300
00:10:44,880 --> 00:10:47,399
involved strategy to get in the details

301
00:10:47,399 --> 00:10:49,920
I would be saying a lot of numbers and

302
00:10:49,920 --> 00:10:52,620
and it would be a headache it works in

303
00:10:52,620 --> 00:10:54,779
different servers according to different

304
00:10:54,779 --> 00:10:56,220
constraints it works against different

305
00:10:56,220 --> 00:10:57,240
countries according to different

306
00:10:57,240 --> 00:10:58,680
constraints according to the different

307
00:10:58,680 --> 00:11:00,360
characters you might insert in these two

308
00:11:00,360 --> 00:11:02,459
headers according to their lengths so

309
00:11:02,459 --> 00:11:03,600
again I'd encourage you to read the

310
00:11:03,600 --> 00:11:05,519
paper but the point is these are really

311
00:11:05,519 --> 00:11:08,160
complicated strategies that we needed

312
00:11:08,160 --> 00:11:09,779
automation to explore and this Geneva

313
00:11:09,779 --> 00:11:11,940
tool is a great way to do that

314
00:11:11,940 --> 00:11:14,339
so in conclusion the application layer

315
00:11:14,339 --> 00:11:15,959
is a great space to find evasion

316
00:11:15,959 --> 00:11:18,060
strategies and we've shown that

317
00:11:18,060 --> 00:11:19,980
application layer censorship evasion is

318
00:11:19,980 --> 00:11:22,140
possible effective and super easy to

319
00:11:22,140 --> 00:11:23,279
deploy

320
00:11:23,279 --> 00:11:24,899
we've seen that a great source of

321
00:11:24,899 --> 00:11:26,459
evasion strategies comes from sensors

322
00:11:26,459 --> 00:11:29,279
following the protocol stricter than end

323
00:11:29,279 --> 00:11:32,220
servers and that's really good news for

324
00:11:32,220 --> 00:11:34,500
censorship evasion

325
00:11:34,500 --> 00:11:36,660
and with that our code's there at the

326
00:11:36,660 --> 00:11:40,459
bottom and I'll take your questions

