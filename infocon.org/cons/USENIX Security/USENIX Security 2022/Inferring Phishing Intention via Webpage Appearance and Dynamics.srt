1
00:00:08,820 --> 00:00:10,440
um hi everyone I'm Yingling from

2
00:00:10,440 --> 00:00:12,780
National University of Singapore and in

3
00:00:12,780 --> 00:00:14,820
this talk I'm going to introduce our

4
00:00:14,820 --> 00:00:17,100
computer vision and intention-based

5
00:00:17,100 --> 00:00:19,260
vision detection approach

6
00:00:19,260 --> 00:00:21,480
while fishing attack is attacked to

7
00:00:21,480 --> 00:00:23,820
compromise juda's privacy with a set of

8
00:00:23,820 --> 00:00:26,100
social engineering tricks then tackers

9
00:00:26,100 --> 00:00:28,619
will create a faking website with a

10
00:00:28,619 --> 00:00:30,660
similar appearance with a legitimate

11
00:00:30,660 --> 00:00:33,420
website and then it will send the links

12
00:00:33,420 --> 00:00:35,219
to many people if the people are

13
00:00:35,219 --> 00:00:37,739
careless they were feeling information

14
00:00:37,739 --> 00:00:39,840
on the web page and sending their

15
00:00:39,840 --> 00:00:42,600
credentials back to the attackers if

16
00:00:42,600 --> 00:00:45,120
your information or privacy has been

17
00:00:45,120 --> 00:00:47,879
sent to the tackers on in such a way it

18
00:00:47,879 --> 00:00:50,340
will have a lot of consequence the

19
00:00:50,340 --> 00:00:52,440
attackers can transfer the money in your

20
00:00:52,440 --> 00:00:55,680
bank can can deliver misinformation in

21
00:00:55,680 --> 00:00:58,379
your name and start new attacks in your

22
00:00:58,379 --> 00:00:59,879
account

23
00:00:59,879 --> 00:01:01,800
so there's strong evidence showing that

24
00:01:01,800 --> 00:01:03,719
the fishing web page the fish and tank

25
00:01:03,719 --> 00:01:06,000
has caused has caused the loss of

26
00:01:06,000 --> 00:01:08,220
thousands or even millions of dollars in

27
00:01:08,220 --> 00:01:11,220
a month and even worse the data ensuing

28
00:01:11,220 --> 00:01:12,840
that efficient attack the number of

29
00:01:12,840 --> 00:01:15,240
efficient attackers is keep growing

30
00:01:15,240 --> 00:01:17,520
and for that as for a defense efficient

31
00:01:17,520 --> 00:01:19,380
attack so it has been a long run

32
00:01:19,380 --> 00:01:21,960
Catamount scans so the majority of

33
00:01:21,960 --> 00:01:24,540
Industry Solutions are Blacklist based

34
00:01:24,540 --> 00:01:27,659
let's take explosive browding as example

35
00:01:27,659 --> 00:01:30,540
so when attackers have created web pages

36
00:01:30,540 --> 00:01:33,060
uh fishing web pages the Google safe

37
00:01:33,060 --> 00:01:36,000
routings will take on average seven days

38
00:01:36,000 --> 00:01:38,700
to put that URL domains Into The

39
00:01:38,700 --> 00:01:39,600
Blacklist

40
00:01:39,600 --> 00:01:42,659
when attackers find that this list is

41
00:01:42,659 --> 00:01:45,479
URL has been blocked it will create a

42
00:01:45,479 --> 00:01:47,880
new one so it will take another seven

43
00:01:47,880 --> 00:01:50,280
days for the explosive browdings to take

44
00:01:50,280 --> 00:01:52,140
it into the Blacklist

45
00:01:52,140 --> 00:01:55,020
so unfortunately we can see that in this

46
00:01:55,020 --> 00:01:57,960
game the cat has a huge advantage over

47
00:01:57,960 --> 00:01:58,979
the mouse

48
00:01:58,979 --> 00:02:01,979
first the attacker can still have a

49
00:02:01,979 --> 00:02:04,259
sliding window of 7 days to run attack

50
00:02:04,259 --> 00:02:07,380
and a second we can find that the

51
00:02:07,380 --> 00:02:09,300
attackers can almost fully automated

52
00:02:09,300 --> 00:02:11,400
process there is there is strong

53
00:02:11,400 --> 00:02:12,959
evidence showing that automation has

54
00:02:12,959 --> 00:02:14,640
already happened which means that

55
00:02:14,640 --> 00:02:17,580
attackers can create a web page and a

56
00:02:17,580 --> 00:02:20,640
new domain every day with very little

57
00:02:20,640 --> 00:02:22,020
cost

58
00:02:22,020 --> 00:02:24,840
last but not least the attackers can

59
00:02:24,840 --> 00:02:27,900
change and update its HTML content from

60
00:02:27,900 --> 00:02:30,180
time to time which means that a lot of

61
00:02:30,180 --> 00:02:31,860
future engineering based approach

62
00:02:31,860 --> 00:02:33,840
machine learning based approach will get

63
00:02:33,840 --> 00:02:35,400
obsolete

64
00:02:35,400 --> 00:02:37,920
so in this work we propose our efficient

65
00:02:37,920 --> 00:02:41,400
intention solution so our idea is that

66
00:02:41,400 --> 00:02:44,400
we build a screenshot-based approach

67
00:02:44,400 --> 00:02:46,080
which allows us to get rid of

68
00:02:46,080 --> 00:02:49,500
complication of HTML code analysis

69
00:02:49,500 --> 00:02:52,019
and our fish intention agent will look

70
00:02:52,019 --> 00:02:55,260
into the screenshot as the users do and

71
00:02:55,260 --> 00:02:57,599
we orchestrate a set of computerization

72
00:02:57,599 --> 00:03:00,660
techniques to detect the brain intention

73
00:03:00,660 --> 00:03:03,000
and the credential taking attention on

74
00:03:03,000 --> 00:03:05,459
the screenshot and The Branding tension

75
00:03:05,459 --> 00:03:08,160
is used to check the consistency with

76
00:03:08,160 --> 00:03:10,680
the URL domain of the new web page for

77
00:03:10,680 --> 00:03:12,420
its malicious potential

78
00:03:12,420 --> 00:03:14,879
and the credential taking intention is

79
00:03:14,879 --> 00:03:16,739
used to confirm such a malicious

80
00:03:16,739 --> 00:03:17,940
intention

81
00:03:17,940 --> 00:03:20,580
in addition our fishing tension agent

82
00:03:20,580 --> 00:03:22,620
can also use computer vision technique

83
00:03:22,620 --> 00:03:25,140
to interact with the web page without

84
00:03:25,140 --> 00:03:27,360
take interactive web page not taking the

85
00:03:27,360 --> 00:03:29,760
credential to see whether any links and

86
00:03:29,760 --> 00:03:32,640
buttons on the web page can lead to a

87
00:03:32,640 --> 00:03:34,739
credential taking web page

88
00:03:34,739 --> 00:03:37,200
and our approach falls into a category

89
00:03:37,200 --> 00:03:39,840
of reference-based efficient detection

90
00:03:39,840 --> 00:03:41,879
the reference space efficient detections

91
00:03:41,879 --> 00:03:44,459
will keep a list of legitimate web page

92
00:03:44,459 --> 00:03:46,860
as a reference and for each reference

93
00:03:46,860 --> 00:03:49,980
items it describes what domain can be

94
00:03:49,980 --> 00:03:53,159
represented by what screenshot or what

95
00:03:53,159 --> 00:03:54,599
logos

96
00:03:54,599 --> 00:03:57,900
so when a new web page come in on it

97
00:03:57,900 --> 00:04:00,959
will see whether this web page can match

98
00:04:00,959 --> 00:04:04,080
can match a reference logo or a

99
00:04:04,080 --> 00:04:06,480
referenced or a reference a reference

100
00:04:06,480 --> 00:04:09,780
screenshot if the web page can match a

101
00:04:09,780 --> 00:04:12,060
reference can make such a match while

102
00:04:12,060 --> 00:04:15,180
cannot its domain cannot match the

103
00:04:15,180 --> 00:04:18,000
reference domain so we will raise a

104
00:04:18,000 --> 00:04:20,279
fashion alarm so this approach sounds

105
00:04:20,279 --> 00:04:22,079
very logical but it has a lot of

106
00:04:22,079 --> 00:04:23,639
technical issues

107
00:04:23,639 --> 00:04:25,860
if we take a screenshot as a

108
00:04:25,860 --> 00:04:28,919
representation we can see that different

109
00:04:28,919 --> 00:04:31,560
different brands may take may have

110
00:04:31,560 --> 00:04:33,360
similar screenshots web page screenshots

111
00:04:33,360 --> 00:04:36,000
in this case we may have false positive

112
00:04:36,000 --> 00:04:38,340
in practice

113
00:04:38,340 --> 00:04:42,180
yes and we can also see that on the send

114
00:04:42,180 --> 00:04:44,639
brand can have totally different

115
00:04:44,639 --> 00:04:47,340
screenshots which also means that we

116
00:04:47,340 --> 00:04:49,380
will have false negative in practice

117
00:04:49,380 --> 00:04:51,960
on the other hand if we take logo as a

118
00:04:51,960 --> 00:04:54,479
representation we can find many denial

119
00:04:54,479 --> 00:04:57,000
web pages we'll take we have the logo of

120
00:04:57,000 --> 00:04:59,160
big company and it will give us a lot of

121
00:04:59,160 --> 00:05:01,560
false bodies in practice

122
00:05:01,560 --> 00:05:03,419
therefore we can see that the screenshot

123
00:05:03,419 --> 00:05:06,300
and Logo can only convey very partial

124
00:05:06,300 --> 00:05:08,340
web page intention

125
00:05:08,340 --> 00:05:10,199
and in this work we propose fish

126
00:05:10,199 --> 00:05:13,199
intention Solutions first Our intention

127
00:05:13,199 --> 00:05:16,080
is very comprehensive it consists of The

128
00:05:16,080 --> 00:05:17,820
Branding tension and the credential

129
00:05:17,820 --> 00:05:20,639
taking intentions and technically we are

130
00:05:20,639 --> 00:05:22,080
using static and dynamic web page

131
00:05:22,080 --> 00:05:24,419
analysis to achieve and detect such

132
00:05:24,419 --> 00:05:25,740
intention

133
00:05:25,740 --> 00:05:28,860
and our approach Orchestra for deep

134
00:05:28,860 --> 00:05:31,020
learning computer vision technique to

135
00:05:31,020 --> 00:05:32,160
this end

136
00:05:32,160 --> 00:05:33,900
and for our first deep learning model

137
00:05:33,900 --> 00:05:36,419
we'll transfer a web page screenshot

138
00:05:36,419 --> 00:05:39,720
into an abstract layout in this abstract

139
00:05:39,720 --> 00:05:42,479
layout we only keep we only keep the

140
00:05:42,479 --> 00:05:44,639
shape and the location of the most

141
00:05:44,639 --> 00:05:47,520
Salient UI elements and the silent UI

142
00:05:47,520 --> 00:05:51,740
elements consists of logo button input

143
00:05:51,740 --> 00:05:54,120
label and block

144
00:05:54,120 --> 00:05:57,180
and once we get this object layout we

145
00:05:57,180 --> 00:05:59,160
further and technically we're using on

146
00:05:59,160 --> 00:06:01,500
object detection approach to do this and

147
00:06:01,500 --> 00:06:03,660
once we have the layout we can find that

148
00:06:03,660 --> 00:06:06,300
the logo is part of layout therefore we

149
00:06:06,300 --> 00:06:08,580
compare the logo with the reference

150
00:06:08,580 --> 00:06:10,259
logos to see whether there will be a

151
00:06:10,259 --> 00:06:10,979
match

152
00:06:10,979 --> 00:06:13,860
and technically we are building a simus

153
00:06:13,860 --> 00:06:16,080
model or a metrical learning approach to

154
00:06:16,080 --> 00:06:18,960
compare the similarity of two logos and

155
00:06:18,960 --> 00:06:21,660
we design a novel a model design for

156
00:06:21,660 --> 00:06:24,000
that and for more details please refer

157
00:06:24,000 --> 00:06:26,280
to a paper small details

158
00:06:26,280 --> 00:06:29,400
and if we can find the logo can be

159
00:06:29,400 --> 00:06:32,100
matched with a reference logo while the

160
00:06:32,100 --> 00:06:34,680
while the domains cannot match the

161
00:06:34,680 --> 00:06:36,900
reference domain so we find a malicious

162
00:06:36,900 --> 00:06:39,780
potential therefore we further proceed

163
00:06:39,780 --> 00:06:42,960
to see whether the web page still have

164
00:06:42,960 --> 00:06:45,539
the credential taking intention to this

165
00:06:45,539 --> 00:06:48,060
end we create a binary classification

166
00:06:48,060 --> 00:06:51,000
model to do this to do this and a zero

167
00:06:51,000 --> 00:06:52,979
for non-credentialed taking intention

168
00:06:52,979 --> 00:06:54,780
and a one for credential taking

169
00:06:54,780 --> 00:06:57,479
intention and as for the input we

170
00:06:57,479 --> 00:06:59,699
combine both a screenshot and Abstract

171
00:06:59,699 --> 00:07:02,759
layout and if we can't find that really

172
00:07:02,759 --> 00:07:05,400
a credential taking intentions we report

173
00:07:05,400 --> 00:07:08,400
efficient if not we further apply an

174
00:07:08,400 --> 00:07:10,319
object detection technique to detect

175
00:07:10,319 --> 00:07:13,020
which region on a screenshot might lead

176
00:07:13,020 --> 00:07:16,620
to another credential taking web page

177
00:07:16,620 --> 00:07:18,720
so when we have a new page we will

178
00:07:18,720 --> 00:07:20,280
extract the layout

179
00:07:20,280 --> 00:07:22,740
detect The Branding tensions and the

180
00:07:22,740 --> 00:07:24,479
creating the credential taking attention

181
00:07:24,479 --> 00:07:27,539
so on and so forth so our approach is an

182
00:07:27,539 --> 00:07:29,280
iterative approach

183
00:07:29,280 --> 00:07:31,979
in order to evaluate our performance we

184
00:07:31,979 --> 00:07:34,620
create five experiments so the efficient

185
00:07:34,620 --> 00:07:37,319
inefficient detection experiment and we

186
00:07:37,319 --> 00:07:39,840
compare the Precision record in a

187
00:07:39,840 --> 00:07:41,280
collected efficient webpage that they

188
00:07:41,280 --> 00:07:43,199
set and as for the CRP location

189
00:07:43,199 --> 00:07:45,780
experience we answer the question what

190
00:07:45,780 --> 00:07:48,780
is the performance to find a credential

191
00:07:48,780 --> 00:07:51,419
taking page from the non-credible taking

192
00:07:51,419 --> 00:07:52,380
page

193
00:07:52,380 --> 00:07:54,599
as for evaluating the model wise

194
00:07:54,599 --> 00:07:57,300
performance we design separate

195
00:07:57,300 --> 00:07:59,940
experiments for each deep learning model

196
00:07:59,940 --> 00:08:03,000
in addition our HD planning models were

197
00:08:03,000 --> 00:08:05,039
may have the diversary attacks so we

198
00:08:05,039 --> 00:08:07,020
also evaluated the robustness of our

199
00:08:07,020 --> 00:08:10,620
deployment models and finally we we run

200
00:08:10,620 --> 00:08:13,440
official our fishing tension project to

201
00:08:13,440 --> 00:08:15,780
detect how to detect it to evade the

202
00:08:15,780 --> 00:08:17,940
performance on whether it can have a

203
00:08:17,940 --> 00:08:19,500
where they can detect the zero day

204
00:08:19,500 --> 00:08:22,080
efficient webpages in the wild

205
00:08:22,080 --> 00:08:25,620
as for for the sake of times we um only

206
00:08:25,620 --> 00:08:28,139
reported the the fission Discovery

207
00:08:28,139 --> 00:08:31,020
experiment and in this experiment we

208
00:08:31,020 --> 00:08:33,179
first are using a search string service

209
00:08:33,179 --> 00:08:35,640
to find the newly created web pages

210
00:08:35,640 --> 00:08:37,979
every day so there are zero day web page

211
00:08:37,979 --> 00:08:41,339
so each web pages will be fitting to

212
00:08:41,339 --> 00:08:44,159
five reference based through reference

213
00:08:44,159 --> 00:08:46,080
space efficient detention Solutions and

214
00:08:46,080 --> 00:08:48,000
efficient intention is one of them

215
00:08:48,000 --> 00:08:51,300
so if any of the solutions has reported

216
00:08:51,300 --> 00:08:53,940
a fashion web page and we use a telegram

217
00:08:53,940 --> 00:08:57,000
service to push this information to to

218
00:08:57,000 --> 00:08:59,220
our participants and those participants

219
00:08:59,220 --> 00:09:01,620
will manually average whether it is a

220
00:09:01,620 --> 00:09:03,720
real vision and once we find a real

221
00:09:03,720 --> 00:09:07,019
vision and we were also to check the

222
00:09:07,019 --> 00:09:08,940
virus total to see what any of the

223
00:09:08,940 --> 00:09:11,100
engines were also report as efficient if

224
00:09:11,100 --> 00:09:13,140
not we believe we find a zero day Vision

225
00:09:13,140 --> 00:09:14,399
web page

226
00:09:14,399 --> 00:09:17,160
as we run this experiment for two months

227
00:09:17,160 --> 00:09:20,399
and as a result fish intention reports

228
00:09:20,399 --> 00:09:23,760
close to 2K real Vision web pages and

229
00:09:23,760 --> 00:09:26,940
among them about 1.3 case are zero

230
00:09:26,940 --> 00:09:29,160
deficients comparing to the zero day

231
00:09:29,160 --> 00:09:31,740
compared to other Baseline approach fish

232
00:09:31,740 --> 00:09:34,500
intention have the best performance

233
00:09:34,500 --> 00:09:37,440
and among the discovery we find that

234
00:09:37,440 --> 00:09:40,980
Microsoft Facebook HSBC Bank Amazons and

235
00:09:40,980 --> 00:09:43,920
Instagrams are the most on other brands

236
00:09:43,920 --> 00:09:45,839
with the most attack

237
00:09:45,839 --> 00:09:47,339
now let's discuss the limitation

238
00:09:47,339 --> 00:09:49,620
approach so we will have the fourth

239
00:09:49,620 --> 00:09:52,380
positive the reason is that we do not

240
00:09:52,380 --> 00:09:54,060
have the linkage between the detective

241
00:09:54,060 --> 00:09:55,680
brain intention and the credential

242
00:09:55,680 --> 00:09:57,660
taking information which means that the

243
00:09:57,660 --> 00:09:59,580
web page may take credentials but not

244
00:09:59,580 --> 00:10:01,680
the credentials for the brand so in this

245
00:10:01,680 --> 00:10:04,080
case we may have the false positive in

246
00:10:04,080 --> 00:10:06,060
addition we find that some fission web

247
00:10:06,060 --> 00:10:08,880
pages were using some special form of

248
00:10:08,880 --> 00:10:12,540
credential taking so we have this this

249
00:10:12,540 --> 00:10:15,180
QR code in this case our push does not

250
00:10:15,180 --> 00:10:17,399
work for the current stage

251
00:10:17,399 --> 00:10:20,399
now it's a takeaways so in this work we

252
00:10:20,399 --> 00:10:22,620
propose fishing tension a visual

253
00:10:22,620 --> 00:10:24,120
reference-based efficient detection

254
00:10:24,120 --> 00:10:26,640
Solutions we detect both the brand and

255
00:10:26,640 --> 00:10:28,740
the credential taking intentions and to

256
00:10:28,740 --> 00:10:30,720
support these intentions we designed

257
00:10:30,720 --> 00:10:33,540
both static and dynamic approach to lock

258
00:10:33,540 --> 00:10:35,820
and interact with the web pages and

259
00:10:35,820 --> 00:10:38,160
finally we deliver tool to effectively

260
00:10:38,160 --> 00:10:41,339
detect zero day efficient web pages and

261
00:10:41,339 --> 00:10:43,380
the Outsource code has been delivered in

262
00:10:43,380 --> 00:10:46,980
the GitHub link yeah that's all from my

263
00:10:46,980 --> 00:10:51,079
talk and and the question is welcome

