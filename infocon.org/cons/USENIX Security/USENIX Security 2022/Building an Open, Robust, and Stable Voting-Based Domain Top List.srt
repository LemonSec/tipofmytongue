1
00:00:08,000 --> 00:00:11,340
so my name is chinkosh from Georgia Tech

2
00:00:11,340 --> 00:00:14,099
today I'm going to talk about our work

3
00:00:14,099 --> 00:00:16,199
on building a domain top list

4
00:00:16,199 --> 00:00:18,600
now many of you here might have used so

5
00:00:18,600 --> 00:00:21,779
many topics before in your study so for

6
00:00:21,779 --> 00:00:23,760
those of you have not used the

7
00:00:23,760 --> 00:00:26,340
metabolist basically provide a set of

8
00:00:26,340 --> 00:00:28,460
commonly used domain to investigate

9
00:00:28,460 --> 00:00:31,800
popular examples include Alexa top 1

10
00:00:31,800 --> 00:00:35,040
million Cisco 1 million and Tranco

11
00:00:35,040 --> 00:00:37,260
there are actually not so many free

12
00:00:37,260 --> 00:00:39,780
lists available these days and

13
00:00:39,780 --> 00:00:42,780
unfortunately Alexa the one that most of

14
00:00:42,780 --> 00:00:44,640
us are working on has been recently

15
00:00:44,640 --> 00:00:47,520
retired which gives even fewer lists we

16
00:00:47,520 --> 00:00:49,440
can use them before

17
00:00:49,440 --> 00:00:52,800
so those lists are super important that

18
00:00:52,800 --> 00:00:54,840
hundreds of private studies actually

19
00:00:54,840 --> 00:00:57,059
rely on those top lists

20
00:00:57,059 --> 00:01:00,120
there is an example the surveys widely

21
00:01:00,120 --> 00:01:02,420
used of top list at

22
00:01:02,420 --> 00:01:04,500
2017's venue

23
00:01:04,500 --> 00:01:07,439
and on the industry side several

24
00:01:07,439 --> 00:01:10,200
security related Services also built on

25
00:01:10,200 --> 00:01:12,060
those top lists for their security

26
00:01:12,060 --> 00:01:14,100
offering

27
00:01:14,100 --> 00:01:17,460
so despite how important those lists are

28
00:01:17,460 --> 00:01:19,439
there are actually have several

29
00:01:19,439 --> 00:01:21,360
understandable properties

30
00:01:21,360 --> 00:01:24,299
first their data source and ranking

31
00:01:24,299 --> 00:01:27,000
method actually remain opaque we cannot

32
00:01:27,000 --> 00:01:29,580
really understand how those lists are

33
00:01:29,580 --> 00:01:31,140
constructed

34
00:01:31,140 --> 00:01:33,299
and several piles that they have

35
00:01:33,299 --> 00:01:35,579
identified ways to manipulate those top

36
00:01:35,579 --> 00:01:38,100
lists entering their target domain to

37
00:01:38,100 --> 00:01:42,240
those top lists for higher rankings and

38
00:01:42,240 --> 00:01:44,299
those lists are also pretty unstable

39
00:01:44,299 --> 00:01:47,780
especially for Alexa

40
00:01:48,299 --> 00:01:51,540
so in our work we consider about can we

41
00:01:51,540 --> 00:01:52,700
do better

42
00:01:52,700 --> 00:01:56,700
we aim for build a new top list that

43
00:01:56,700 --> 00:01:59,040
with those designable properties

44
00:01:59,040 --> 00:02:02,280
by doing so we need to consider two

45
00:02:02,280 --> 00:02:04,079
components here

46
00:02:04,079 --> 00:02:07,680
first what data source can we use that

47
00:02:07,680 --> 00:02:09,840
can reflect domain usage

48
00:02:09,840 --> 00:02:12,780
and second how do we rank domains from

49
00:02:12,780 --> 00:02:15,180
this data source

50
00:02:15,180 --> 00:02:18,480
so for the first component our approach

51
00:02:18,480 --> 00:02:21,300
is to analyze domain usage by IP

52
00:02:21,300 --> 00:02:24,300
addresses through passive DNS data or

53
00:02:24,300 --> 00:02:26,879
passive things data is the DNS traffic

54
00:02:26,879 --> 00:02:30,120
we collect from reclusive resolvers

55
00:02:30,120 --> 00:02:33,540
feeding us is known to be widely used in

56
00:02:33,540 --> 00:02:36,480
both Academia and Industry making it a

57
00:02:36,480 --> 00:02:38,879
more transparent and accessible topless

58
00:02:38,879 --> 00:02:41,940
data sort and umbrella also use feeding

59
00:02:41,940 --> 00:02:44,400
as for their top list construction so

60
00:02:44,400 --> 00:02:47,700
PDS can help us to better build our

61
00:02:47,700 --> 00:02:49,739
general ranking method for top list

62
00:02:49,739 --> 00:02:51,239
Construction

63
00:02:51,239 --> 00:02:54,720
so now we have this data source

64
00:02:54,720 --> 00:02:58,920
for our second component our exploration

65
00:02:58,920 --> 00:03:01,920
drive or Direction into a voting based

66
00:03:01,920 --> 00:03:04,080
domain ranking method

67
00:03:04,080 --> 00:03:07,500
whereas a basic idea is first each IP

68
00:03:07,500 --> 00:03:09,900
address will Express their individual

69
00:03:09,900 --> 00:03:12,239
domain preference as shown in this

70
00:03:12,239 --> 00:03:14,760
figure we will calculate our individual

71
00:03:14,760 --> 00:03:17,879
ranking for each IP address

72
00:03:17,879 --> 00:03:20,340
and then we aggregate domain preference

73
00:03:20,340 --> 00:03:23,159
across all IP address through a voting

74
00:03:23,159 --> 00:03:25,680
scheme here are voting scheme serves as

75
00:03:25,680 --> 00:03:28,500
a natural solution for such preference

76
00:03:28,500 --> 00:03:31,739
aggregation because it combines a domain

77
00:03:31,739 --> 00:03:34,140
preference from multiple voters where in

78
00:03:34,140 --> 00:03:37,739
our scenario from multiple IP address

79
00:03:37,739 --> 00:03:40,860
so I will describe each step of this

80
00:03:40,860 --> 00:03:44,360
ranking method next

81
00:03:44,459 --> 00:03:47,220
so for the first step as I mentioned

82
00:03:47,220 --> 00:03:49,879
earlier we will calculate individual

83
00:03:49,879 --> 00:03:52,680
preference for each IP address just as

84
00:03:52,680 --> 00:03:54,180
shown in the figure

85
00:03:54,180 --> 00:03:57,000
and we consider two ranking metrics here

86
00:03:57,000 --> 00:04:00,360
for calculate a domain IP preference

87
00:04:00,360 --> 00:04:02,640
first we consider the request volume

88
00:04:02,640 --> 00:04:05,640
that reflects the address preference for

89
00:04:05,640 --> 00:04:06,840
a domain

90
00:04:06,840 --> 00:04:09,659
and second is active duration the

91
00:04:09,659 --> 00:04:11,819
intuition that we consider active

92
00:04:11,819 --> 00:04:14,879
duration here is that popular domains

93
00:04:14,879 --> 00:04:18,418
are constantly queried over time so by

94
00:04:18,418 --> 00:04:20,760
using active duration we will rank

95
00:04:20,760 --> 00:04:22,860
domains higher that are regularly

96
00:04:22,860 --> 00:04:25,020
queried then we combine these two

97
00:04:25,020 --> 00:04:27,360
metrics to calculate individual eyepiece

98
00:04:27,360 --> 00:04:30,240
preference ranking you can also check

99
00:04:30,240 --> 00:04:32,880
detail in our paper that how we

100
00:04:32,880 --> 00:04:36,000
aggregate these two metrics

101
00:04:36,000 --> 00:04:38,639
and then before aggregating this

102
00:04:38,639 --> 00:04:41,340
individual IP preference let's consider

103
00:04:41,340 --> 00:04:44,639
another scenario here that multiple

104
00:04:44,639 --> 00:04:48,479
client devices May reside behind address

105
00:04:48,479 --> 00:04:51,479
so there is a question could we treat

106
00:04:51,479 --> 00:04:54,720
all those IP address the same but it may

107
00:04:54,720 --> 00:04:57,479
unfully represents the contribution of

108
00:04:57,479 --> 00:04:59,639
individual clients preference

109
00:04:59,639 --> 00:05:02,820
so we will consider activating here and

110
00:05:02,820 --> 00:05:05,460
the motivation behind here is to more

111
00:05:05,460 --> 00:05:09,900
realistically reflect IP characteristics

112
00:05:09,900 --> 00:05:12,840
so we also consider two features for

113
00:05:12,840 --> 00:05:16,860
calculating IP rating domain diversity

114
00:05:16,860 --> 00:05:19,919
and total request volume as these two

115
00:05:19,919 --> 00:05:22,860
metrics both positively correlated with

116
00:05:22,860 --> 00:05:25,320
the client population behind the IP

117
00:05:25,320 --> 00:05:27,660
address again we combine these two

118
00:05:27,660 --> 00:05:31,680
metrics to calculate waiting for each IP

119
00:05:31,680 --> 00:05:33,860
address

120
00:05:34,259 --> 00:05:36,900
so finally having established the

121
00:05:36,900 --> 00:05:39,419
individual IPS preference then we also

122
00:05:39,419 --> 00:05:42,479
consider IP waiting then we need a

123
00:05:42,479 --> 00:05:44,400
method that can aggregate those

124
00:05:44,400 --> 00:05:46,620
individual preference as I mentioned

125
00:05:46,620 --> 00:05:49,620
earlier we will use a voting scheme

126
00:05:49,620 --> 00:05:52,440
so I will mainly Focus On the Border

127
00:05:52,440 --> 00:05:54,720
voting scheme in this talk

128
00:05:54,720 --> 00:05:57,479
where each voters will rank the

129
00:05:57,479 --> 00:06:00,900
candidates in our scenario is domain and

130
00:06:00,900 --> 00:06:03,960
a candidates receive one point for every

131
00:06:03,960 --> 00:06:07,080
other candidates ranked below it and the

132
00:06:07,080 --> 00:06:09,120
domains are ranked in order by the sum

133
00:06:09,120 --> 00:06:13,020
of points across all IP address

134
00:06:13,020 --> 00:06:15,660
so in our work we also consider the

135
00:06:15,660 --> 00:06:17,940
truncated version of Border where each

136
00:06:17,940 --> 00:06:20,699
voters will rank a threshold number of

137
00:06:20,699 --> 00:06:24,660
candidates because different addresses

138
00:06:24,660 --> 00:06:27,060
actually can request different number of

139
00:06:27,060 --> 00:06:30,180
domains so authentication help us to

140
00:06:30,180 --> 00:06:32,160
better balance the difference between IP

141
00:06:32,160 --> 00:06:34,020
address

142
00:06:34,020 --> 00:06:36,539
in our paper we also evaluate the

143
00:06:36,539 --> 00:06:39,800
different ranking methods

144
00:06:40,860 --> 00:06:44,400
so let's we have a brief recap here so

145
00:06:44,400 --> 00:06:46,919
our ranking method first we determine

146
00:06:46,919 --> 00:06:49,620
the IP specific domain preference and

147
00:06:49,620 --> 00:06:51,660
then we consider applying IP address

148
00:06:51,660 --> 00:06:55,080
waiting finally we vote across all IP

149
00:06:55,080 --> 00:06:57,180
address to produce the final Global

150
00:06:57,180 --> 00:07:00,240
ranking so we have this ranking method

151
00:07:00,240 --> 00:07:04,440
now we have to evaluate evaluate in

152
00:07:04,440 --> 00:07:08,280
practice to see how well it works

153
00:07:08,280 --> 00:07:11,160
so here is our evaluation part

154
00:07:11,160 --> 00:07:15,300
we use the data source from 114 DNS from

155
00:07:15,300 --> 00:07:18,180
China which is the largest DNS services

156
00:07:18,180 --> 00:07:21,840
provider in Asia and using their

157
00:07:21,840 --> 00:07:24,300
large-scale passive thing as as input

158
00:07:24,300 --> 00:07:27,180
data set we build using our ranking

159
00:07:27,180 --> 00:07:30,180
method we build a top list for evaluate

160
00:07:30,180 --> 00:07:32,580
in practice

161
00:07:32,580 --> 00:07:36,060
so as I already openly uh described our

162
00:07:36,060 --> 00:07:38,900
ranking method as well as our data set

163
00:07:38,900 --> 00:07:41,160
we argue that we already have

164
00:07:41,160 --> 00:07:43,919
construction transparency so in this

165
00:07:43,919 --> 00:07:47,340
talk I will mainly focus on the rest of

166
00:07:47,340 --> 00:07:49,800
two properties manipulation resistance

167
00:07:49,800 --> 00:07:52,139
and ranking stability

168
00:07:52,139 --> 00:07:55,440
so we will evaluate these two metrics

169
00:07:55,440 --> 00:07:59,099
across different list parameters like we

170
00:07:59,099 --> 00:08:02,460
test IP waiting or not the trade-off and

171
00:08:02,460 --> 00:08:05,400
also test different voting method and

172
00:08:05,400 --> 00:08:07,620
also compare the list that construction

173
00:08:07,620 --> 00:08:11,099
by our method to existing lists like

174
00:08:11,099 --> 00:08:12,240
Alexa

175
00:08:12,240 --> 00:08:15,620
umbrella and trenco

176
00:08:16,080 --> 00:08:18,900
here is the first property manipulation

177
00:08:18,900 --> 00:08:21,599
resistance so when we say top list

178
00:08:21,599 --> 00:08:24,419
manipulation it basically means we

179
00:08:24,419 --> 00:08:26,759
manipulate the list to achieve High

180
00:08:26,759 --> 00:08:30,060
rankings for Target domains so now many

181
00:08:30,060 --> 00:08:32,399
websites actually offers published

182
00:08:32,399 --> 00:08:34,620
manipulation as a paid service for

183
00:08:34,620 --> 00:08:38,760
example this Alexa specialist website

184
00:08:38,760 --> 00:08:43,440
and this is their service details so it

185
00:08:43,440 --> 00:08:45,420
actually indicates that top list

186
00:08:45,420 --> 00:08:48,120
manipulation is not just theoretical

187
00:08:48,120 --> 00:08:50,399
threat but happens

188
00:08:50,399 --> 00:08:54,060
in practice so it's very important for a

189
00:08:54,060 --> 00:08:56,580
top list to have to be manipulation

190
00:08:56,580 --> 00:08:58,560
resistant

191
00:08:58,560 --> 00:09:00,899
then we manipulate Alexa

192
00:09:00,899 --> 00:09:03,660
umbrella and chunk of to compare our

193
00:09:03,660 --> 00:09:06,000
performance with theirs so the

194
00:09:06,000 --> 00:09:07,920
manipulation method you can check the

195
00:09:07,920 --> 00:09:10,500
details in our paper

196
00:09:10,500 --> 00:09:14,519
for Alexa we can easily get into Alexa's

197
00:09:14,519 --> 00:09:16,440
about 2000

198
00:09:16,440 --> 00:09:18,839
and similar for umbrella we can easily

199
00:09:18,839 --> 00:09:23,339
get a ranking in umbrellas 2.8 thousand

200
00:09:23,339 --> 00:09:26,160
for Tranco we use the daily version of

201
00:09:26,160 --> 00:09:28,740
Tranco that combines umbrella and Alexa

202
00:09:28,740 --> 00:09:33,000
and can get a ranking around 2000 so

203
00:09:33,000 --> 00:09:37,440
compare those lists our list using the

204
00:09:37,440 --> 00:09:40,980
same attack or list can the attackers

205
00:09:40,980 --> 00:09:44,459
can only get about 20 000 rankings in

206
00:09:44,459 --> 00:09:47,399
our list so our list actually to be more

207
00:09:47,399 --> 00:09:51,779
robust compared to those existing lists

208
00:09:51,779 --> 00:09:54,600
another important property is the

209
00:09:54,600 --> 00:09:55,640
stability

210
00:09:55,640 --> 00:09:58,980
here we quantify stability as a

211
00:09:58,980 --> 00:10:01,320
percentage of a top list for one day

212
00:10:01,320 --> 00:10:03,839
that remains on the list for the next

213
00:10:03,839 --> 00:10:05,820
day in other words is the list

214
00:10:05,820 --> 00:10:08,640
intersection between two days and

215
00:10:08,640 --> 00:10:11,760
stability is also very important we

216
00:10:11,760 --> 00:10:14,279
think the majority of top lists should

217
00:10:14,279 --> 00:10:17,100
not churn over a very short period of

218
00:10:17,100 --> 00:10:20,760
time otherwise using those top lists

219
00:10:20,760 --> 00:10:22,560
will lead to a completed different

220
00:10:22,560 --> 00:10:24,720
measurement results

221
00:10:24,720 --> 00:10:28,620
so here is our stability result of top

222
00:10:28,620 --> 00:10:31,380
10 000 and top one million for top ten

223
00:10:31,380 --> 00:10:32,700
thousand

224
00:10:32,700 --> 00:10:34,920
um maybe the rent that many of us are

225
00:10:34,920 --> 00:10:37,940
working on without perform

226
00:10:37,940 --> 00:10:42,660
and Alexa and for top 1 million our list

227
00:10:42,660 --> 00:10:46,019
are performed chunko and Alexa and is

228
00:10:46,019 --> 00:10:49,380
comparable with umbrella even though

229
00:10:49,380 --> 00:10:52,079
umbrella actually uses a two-day data

230
00:10:52,079 --> 00:10:55,740
window uh and our list is constructed

231
00:10:55,740 --> 00:10:59,399
using the daily snapshot of 114 DNS

232
00:10:59,399 --> 00:11:03,120
so by far our list can get good

233
00:11:03,120 --> 00:11:05,940
stability performance and manipulation

234
00:11:05,940 --> 00:11:08,880
performance so I will mainly introduce

235
00:11:08,880 --> 00:11:13,019
the evaluation part by far I do want to

236
00:11:13,019 --> 00:11:16,740
mention that we we release our daily

237
00:11:16,740 --> 00:11:20,640
update top list at second.cn and also

238
00:11:20,640 --> 00:11:22,800
open source our list implementation

239
00:11:22,800 --> 00:11:25,019
these two links are also in the paper

240
00:11:25,019 --> 00:11:28,200
maybe you can check later and we also

241
00:11:28,200 --> 00:11:32,160
recognize that our input data set may be

242
00:11:32,160 --> 00:11:34,680
Asia Centric so it's good for those

243
00:11:34,680 --> 00:11:37,980
users interested in study Asia Centric

244
00:11:37,980 --> 00:11:41,880
as other other top lists actually more

245
00:11:41,880 --> 00:11:44,899
Western Centric

246
00:11:45,120 --> 00:11:49,019
so just to wrap up today's talk today I

247
00:11:49,019 --> 00:11:51,300
mainly described that how we develop a

248
00:11:51,300 --> 00:11:53,519
top list ranking method has those

249
00:11:53,519 --> 00:11:56,640
designable properties and this list can

250
00:11:56,640 --> 00:11:59,760
serve to the security community that

251
00:11:59,760 --> 00:12:01,980
researchers can use our ranking method

252
00:12:01,980 --> 00:12:04,800
for similar ranking scenarios and today

253
00:12:04,800 --> 00:12:07,560
I didn't have a time to really talk

254
00:12:07,560 --> 00:12:10,620
about all the details in the paper and

255
00:12:10,620 --> 00:12:13,200
in our paper we actually systematically

256
00:12:13,200 --> 00:12:16,140
evaluate different topics topless design

257
00:12:16,140 --> 00:12:19,320
decisions and provide insight into

258
00:12:19,320 --> 00:12:22,019
published construction and published

259
00:12:22,019 --> 00:12:25,620
usage our work is truly an initial

260
00:12:25,620 --> 00:12:28,860
exploration of topless construction so

261
00:12:28,860 --> 00:12:31,500
we also hope that our work can drive

262
00:12:31,500 --> 00:12:35,399
further investigation into this space

263
00:12:35,399 --> 00:12:39,500
thank you I'll take any questions

