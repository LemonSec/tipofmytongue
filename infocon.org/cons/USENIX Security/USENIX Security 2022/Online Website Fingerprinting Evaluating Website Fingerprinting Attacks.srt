1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:08,900 --> 00:00:11,219
thanks for the introduction

3
00:00:11,219 --> 00:00:13,440
this is Joint work with my colleagues

4
00:00:13,440 --> 00:00:15,299
Giovanni who is now at Microsoft

5
00:00:15,299 --> 00:00:19,140
research and Carmela from epfl

6
00:00:19,140 --> 00:00:20,820
so Tor is an anonymous communication

7
00:00:20,820 --> 00:00:22,980
system that provides anonymity to its

8
00:00:22,980 --> 00:00:25,320
users to achieve anonymity

9
00:00:25,320 --> 00:00:27,660
users build circuits through the Tor

10
00:00:27,660 --> 00:00:29,760
Network that start with an entry relay

11
00:00:29,760 --> 00:00:32,640
and end with an exit relay once the

12
00:00:32,640 --> 00:00:34,760
circuit is built the client

13
00:00:34,760 --> 00:00:37,260
instructs the exit relay to connect to

14
00:00:37,260 --> 00:00:39,660
internet destinations

15
00:00:39,660 --> 00:00:41,340
one of the most devastating attacks

16
00:00:41,340 --> 00:00:43,620
against the Tor Network are those that

17
00:00:43,620 --> 00:00:46,020
de-anonymize tour users and in

18
00:00:46,020 --> 00:00:47,399
particular there's a website

19
00:00:47,399 --> 00:00:49,680
fingerprinting attack which can be

20
00:00:49,680 --> 00:00:52,140
anonymize users with only access to the

21
00:00:52,140 --> 00:00:54,539
entry Side by observing the patterns of

22
00:00:54,539 --> 00:00:57,239
traffic of encrypted traffic sent

23
00:00:57,239 --> 00:00:59,280
between the client and the Tor Network

24
00:00:59,280 --> 00:01:01,800
and predicting the website visited by

25
00:01:01,800 --> 00:01:03,420
the user

26
00:01:03,420 --> 00:01:06,780
in order to conduct this attack the

27
00:01:06,780 --> 00:01:08,939
adversary uses machine learning but

28
00:01:08,939 --> 00:01:10,979
needs to have the labels to train the

29
00:01:10,979 --> 00:01:12,659
machine learning classifiers for website

30
00:01:12,659 --> 00:01:14,220
prediction

31
00:01:14,220 --> 00:01:16,680
but because Tor encrypts traffic the

32
00:01:16,680 --> 00:01:18,299
adversary doesn't have access to the

33
00:01:18,299 --> 00:01:20,820
labels directly in the network

34
00:01:20,820 --> 00:01:23,880
because the genuine labels are encrypted

35
00:01:23,880 --> 00:01:26,460
so to get around this the adversary must

36
00:01:26,460 --> 00:01:28,500
obtain these labels some way

37
00:01:28,500 --> 00:01:29,759
so the traditional website

38
00:01:29,759 --> 00:01:31,640
fingerprinting threat model

39
00:01:31,640 --> 00:01:34,920
uh says the adversary will just crawl a

40
00:01:34,920 --> 00:01:36,360
bunch of websites through the Tor

41
00:01:36,360 --> 00:01:38,700
Network building its own circuits and

42
00:01:38,700 --> 00:01:40,500
then it has access to the labels because

43
00:01:40,500 --> 00:01:44,340
it it picks which URLs to crawl and so

44
00:01:44,340 --> 00:01:48,299
it can it can create labels and data

45
00:01:48,299 --> 00:01:50,520
sequences traffic patterns put those

46
00:01:50,520 --> 00:01:52,200
into a database

47
00:01:52,200 --> 00:01:54,060
and then it can train machine learning

48
00:01:54,060 --> 00:01:56,040
classifiers using these collected data

49
00:01:56,040 --> 00:01:57,659
and labels

50
00:01:57,659 --> 00:02:00,420
and then when it wants to use these

51
00:02:00,420 --> 00:02:03,240
against Real users it can observe users

52
00:02:03,240 --> 00:02:05,460
traffic query this model that was

53
00:02:05,460 --> 00:02:07,860
trained previously and predict the

54
00:02:07,860 --> 00:02:10,979
website that the users are visiting

55
00:02:10,979 --> 00:02:13,260
so in this paper we argue that this

56
00:02:13,260 --> 00:02:16,020
synthetic model is too simplistic and

57
00:02:16,020 --> 00:02:17,760
unrealistic for the real world this has

58
00:02:17,760 --> 00:02:20,340
also been shown in previous research

59
00:02:20,340 --> 00:02:22,319
uh the browser that they use that the

60
00:02:22,319 --> 00:02:24,420
adversary would use to crawl

61
00:02:24,420 --> 00:02:26,640
is pinned usually to a specific version

62
00:02:26,640 --> 00:02:29,879
or specific configuration or the crawl

63
00:02:29,879 --> 00:02:31,319
is conducted from a small set of

64
00:02:31,319 --> 00:02:34,379
locations uh geographically

65
00:02:34,379 --> 00:02:37,739
uh the the crawler doesn't reproduce the

66
00:02:37,739 --> 00:02:39,540
behavior that clients would in the real

67
00:02:39,540 --> 00:02:42,000
Network the choice of the URLs to crawl

68
00:02:42,000 --> 00:02:44,519
if they're using multiple tabs the order

69
00:02:44,519 --> 00:02:46,200
that they're browsing Pages those are

70
00:02:46,200 --> 00:02:48,420
all choices that would be made in the

71
00:02:48,420 --> 00:02:50,340
synthetic model and then the world

72
00:02:50,340 --> 00:02:52,319
that's considered under this threat

73
00:02:52,319 --> 00:02:54,599
model is usually static where the

74
00:02:54,599 --> 00:02:56,580
adversary crawls a bunch of websites and

75
00:02:56,580 --> 00:02:59,760
that considers that its world

76
00:02:59,760 --> 00:03:01,560
it's usually smaller than what we

77
00:03:01,560 --> 00:03:03,420
consider accessible in the real world

78
00:03:03,420 --> 00:03:08,040
and is often closed in these evaluations

79
00:03:08,040 --> 00:03:10,440
so nobody really knows if website

80
00:03:10,440 --> 00:03:11,760
fingerprinting

81
00:03:11,760 --> 00:03:13,860
is viable in the real world because it's

82
00:03:13,860 --> 00:03:15,659
never been done before

83
00:03:15,659 --> 00:03:18,840
so in this paper uh we're proposing to

84
00:03:18,840 --> 00:03:20,879
throw away the synthetic model and

85
00:03:20,879 --> 00:03:23,340
instead use a genuine model for website

86
00:03:23,340 --> 00:03:25,500
fingerprinting where we can consider

87
00:03:25,500 --> 00:03:28,200
genuine data and labels from a Tor exit

88
00:03:28,200 --> 00:03:29,580
relay

89
00:03:29,580 --> 00:03:31,140
and this will give us an understanding

90
00:03:31,140 --> 00:03:34,620
of the threat of the attack in the real

91
00:03:34,620 --> 00:03:36,060
world

92
00:03:36,060 --> 00:03:39,000
so the key Insight in this model is that

93
00:03:39,000 --> 00:03:41,819
an adversary can run an exit relay

94
00:03:41,819 --> 00:03:44,340
exit relays can be run by anyone it's a

95
00:03:44,340 --> 00:03:46,500
volunteer network so the adversary could

96
00:03:46,500 --> 00:03:47,519
run one

97
00:03:47,519 --> 00:03:50,879
and as regular clients on using the Tor

98
00:03:50,879 --> 00:03:52,379
Network build circuits they will

99
00:03:52,379 --> 00:03:54,120
occasionally choose the exit relay in

100
00:03:54,120 --> 00:03:55,440
their circuits

101
00:03:55,440 --> 00:03:58,379
the exit can observe this circuit and

102
00:03:58,379 --> 00:04:00,840
then it will observe a DNS lookup for

103
00:04:00,840 --> 00:04:02,940
whatever websites the adversaries are

104
00:04:02,940 --> 00:04:04,440
browsing

105
00:04:04,440 --> 00:04:07,260
and then it'll observe the website load

106
00:04:07,260 --> 00:04:09,620
so the DNS lookup the resolve domain

107
00:04:09,620 --> 00:04:12,120
provides a genuine label

108
00:04:12,120 --> 00:04:14,280
and the traffic patterns of the website

109
00:04:14,280 --> 00:04:16,260
load will provide the genuine data that

110
00:04:16,260 --> 00:04:19,380
the adversary can use then to train the

111
00:04:19,380 --> 00:04:22,019
machine learning classifiers as before

112
00:04:22,019 --> 00:04:24,960
and deploy them against users in a

113
00:04:24,960 --> 00:04:28,560
de-anonymization attack as before

114
00:04:28,560 --> 00:04:30,479
so this is the what I call the genuine

115
00:04:30,479 --> 00:04:33,479
model the benefits should be clear it

116
00:04:33,479 --> 00:04:35,280
captures the real world diversity of all

117
00:04:35,280 --> 00:04:37,440
the browsers the behavior of the users

118
00:04:37,440 --> 00:04:40,740
on the network the world size which URLs

119
00:04:40,740 --> 00:04:44,280
browsers users are are visiting if

120
00:04:44,280 --> 00:04:46,020
they're using tabs Etc

121
00:04:46,020 --> 00:04:47,880
it captures the natural diversity of

122
00:04:47,880 --> 00:04:49,800
this because we're measured the real

123
00:04:49,800 --> 00:04:51,180
work

124
00:04:51,180 --> 00:04:54,419
and it allows us researchers to stop

125
00:04:54,419 --> 00:04:56,400
trying to fix all the problems with the

126
00:04:56,400 --> 00:04:58,919
synthetic model and just focus on the

127
00:04:58,919 --> 00:05:01,860
actual threat in the real Network

128
00:05:01,860 --> 00:05:05,460
some caveats here uh the in this model

129
00:05:05,460 --> 00:05:08,400
the exit would be getting the data and

130
00:05:08,400 --> 00:05:10,440
the labels sorry the adversary would be

131
00:05:10,440 --> 00:05:12,060
getting the data and the labels from the

132
00:05:12,060 --> 00:05:13,820
exit relay

133
00:05:13,820 --> 00:05:16,320
deploying it on the opposite side of the

134
00:05:16,320 --> 00:05:18,479
circuit at the entry relay and so this

135
00:05:18,479 --> 00:05:21,419
will cause some noise in their machine

136
00:05:21,419 --> 00:05:22,979
learning problem

137
00:05:22,979 --> 00:05:26,759
that will have to quantify also they're

138
00:05:26,759 --> 00:05:28,740
getting the domain that was looked up

139
00:05:28,740 --> 00:05:31,320
when for each Different Page

140
00:05:31,320 --> 00:05:33,060
so this is this can be considered

141
00:05:33,060 --> 00:05:34,740
website fingerprinting or domain

142
00:05:34,740 --> 00:05:36,180
fingerprinting not web page

143
00:05:36,180 --> 00:05:38,000
fingerprinting if there's a difference

144
00:05:38,000 --> 00:05:40,860
and then this is not ethical to do this

145
00:05:40,860 --> 00:05:42,780
in a

146
00:05:42,780 --> 00:05:44,460
for researchers to do this so we need

147
00:05:44,460 --> 00:05:47,039
safe evaluation methods and so that's

148
00:05:47,039 --> 00:05:50,580
what we were focused on in this paper

149
00:05:50,580 --> 00:05:52,740
so we came up with a safe evaluation

150
00:05:52,740 --> 00:05:56,400
method and I'll go over this

151
00:05:56,400 --> 00:05:59,840
first we add code to tor

152
00:05:59,840 --> 00:06:02,759
to protect the websites that are being

153
00:06:02,759 --> 00:06:06,240
visited the domains using a keyed hmac

154
00:06:06,240 --> 00:06:09,419
so Tor will hmac the domain label before

155
00:06:09,419 --> 00:06:12,300
sending it out to our Scripts

156
00:06:12,300 --> 00:06:14,580
so when we receive the the website it's

157
00:06:14,580 --> 00:06:16,560
a pseudonym it's a random number not the

158
00:06:16,560 --> 00:06:19,320
actual domain so we never learned the

159
00:06:19,320 --> 00:06:21,000
true labels

160
00:06:21,000 --> 00:06:24,060
and then we get a sequence of plus ones

161
00:06:24,060 --> 00:06:26,880
minus ones where plus one means a packet

162
00:06:26,880 --> 00:06:29,340
or a torsell in One Direction minus one

163
00:06:29,340 --> 00:06:32,340
means a cell in the other direction so

164
00:06:32,340 --> 00:06:34,380
we're getting directionality and a

165
00:06:34,380 --> 00:06:36,479
pseudonym random number representing a

166
00:06:36,479 --> 00:06:39,180
specific web page

167
00:06:39,180 --> 00:06:42,660
then we adapted we use online learning

168
00:06:42,660 --> 00:06:45,360
by adapting the triplet fingerprinting

169
00:06:45,360 --> 00:06:48,300
attack from CCS 2019

170
00:06:48,300 --> 00:06:49,979
this attack is split into two parts

171
00:06:49,979 --> 00:06:52,440
there's a feature extractor which takes

172
00:06:52,440 --> 00:06:55,020
the raw data sequences and turns it into

173
00:06:55,020 --> 00:06:56,819
a feature vector

174
00:06:56,819 --> 00:06:58,979
and so we take that vector and then we

175
00:06:58,979 --> 00:07:01,800
do two things first we predict the label

176
00:07:01,800 --> 00:07:04,259
for that Vector using the k n model

177
00:07:04,259 --> 00:07:07,560
from the triplet fingerprinting work

178
00:07:07,560 --> 00:07:09,660
and then the output of that prediction

179
00:07:09,660 --> 00:07:12,060
we can use to evaluate how well our

180
00:07:12,060 --> 00:07:13,680
classifier is doing if it's correct or

181
00:07:13,680 --> 00:07:14,340
not

182
00:07:14,340 --> 00:07:16,020
and then second we take the feature

183
00:07:16,020 --> 00:07:17,520
vector and the label we have both of

184
00:07:17,520 --> 00:07:20,639
them and update our k n embedded vectors

185
00:07:20,639 --> 00:07:23,520
so that we can better predict future

186
00:07:23,520 --> 00:07:26,960
visits to that domain

187
00:07:27,000 --> 00:07:29,039
some other safety precautions we were

188
00:07:29,039 --> 00:07:30,419
doing this at the exit relay we have

189
00:07:30,419 --> 00:07:33,419
never never observed users directly so

190
00:07:33,419 --> 00:07:35,460
we never de-anonymize tour users this

191
00:07:35,460 --> 00:07:36,900
information

192
00:07:36,900 --> 00:07:38,039
accessible

193
00:07:38,039 --> 00:07:42,539
uh on relays so we're not doing anything

194
00:07:42,539 --> 00:07:44,639
beyond what an exit relay could do

195
00:07:44,639 --> 00:07:47,520
inside of tors threat model also we

196
00:07:47,520 --> 00:07:49,440
destroyed the models and the hmac key

197
00:07:49,440 --> 00:07:51,660
after our evaluation so we cannot

198
00:07:51,660 --> 00:07:54,599
reproduce these results directly and we

199
00:07:54,599 --> 00:07:57,060
have no way to reverse the pseudonyms or

200
00:07:57,060 --> 00:07:58,919
anything that we use in the evaluation

201
00:07:58,919 --> 00:08:01,800
we ran our evaluation plan past the tour

202
00:08:01,800 --> 00:08:03,840
safety board they gave us feedback

203
00:08:03,840 --> 00:08:06,240
please see the paper if you have if you

204
00:08:06,240 --> 00:08:09,960
want to see more about that interaction

205
00:08:09,960 --> 00:08:12,900
okay so for evaluation

206
00:08:12,900 --> 00:08:14,699
we have a couple of different components

207
00:08:14,699 --> 00:08:17,099
first we're going to train and evaluate

208
00:08:17,099 --> 00:08:21,000
this Approach at an exit relay under the

209
00:08:21,000 --> 00:08:22,620
model I just described

210
00:08:22,620 --> 00:08:25,199
so in this case there's no noise from

211
00:08:25,199 --> 00:08:27,120
transferring the model to the entry

212
00:08:27,120 --> 00:08:28,919
so this is can be considered an upper

213
00:08:28,919 --> 00:08:31,919
bound on the attack accuracy

214
00:08:31,919 --> 00:08:34,200
we conducted an evaluation for one week

215
00:08:34,200 --> 00:08:37,260
during which we measured 3.9 million

216
00:08:37,260 --> 00:08:39,059
data sequences

217
00:08:39,059 --> 00:08:43,200
across 671 000 unique sites

218
00:08:43,200 --> 00:08:44,880
we conducted a multi-class

219
00:08:44,880 --> 00:08:46,620
classification

220
00:08:46,620 --> 00:08:49,500
problem where we predict either one of a

221
00:08:49,500 --> 00:08:53,100
set of monitored sites or unmonitored

222
00:08:53,100 --> 00:08:54,959
and the performance metric we use here

223
00:08:54,959 --> 00:08:56,760
is instant accuracy which is somewhat

224
00:08:56,760 --> 00:08:58,560
like a moving average it's a number of

225
00:08:58,560 --> 00:09:01,380
correct guesses over the total number of

226
00:09:01,380 --> 00:09:04,200
guesses over a sliding window

227
00:09:04,200 --> 00:09:06,720
so here are the results the x-axis is

228
00:09:06,720 --> 00:09:08,399
the number of network traces that we are

229
00:09:08,399 --> 00:09:10,019
observing and that are informing our

230
00:09:10,019 --> 00:09:10,860
model

231
00:09:10,860 --> 00:09:12,779
so as you get to the right side of the

232
00:09:12,779 --> 00:09:16,200
x-axis we're seeing more and more traces

233
00:09:16,200 --> 00:09:19,080
the y-axis is the accuracy

234
00:09:19,080 --> 00:09:21,000
so the first point to make here is that

235
00:09:21,000 --> 00:09:22,740
when the adversary sorry the legend

236
00:09:22,740 --> 00:09:25,140
shows the size of the monitored set that

237
00:09:25,140 --> 00:09:27,480
the industries sites they're trying to

238
00:09:27,480 --> 00:09:28,980
predict

239
00:09:28,980 --> 00:09:32,580
so when the monitor site set is small

240
00:09:32,580 --> 00:09:35,339
we see accuracy is above 95 percent with

241
00:09:35,339 --> 00:09:37,440
five or fewer sites

242
00:09:37,440 --> 00:09:40,339
but when the monitored side set size

243
00:09:40,339 --> 00:09:43,560
increases accuracy quickly Falls below

244
00:09:43,560 --> 00:09:46,620
80 percent uh which does perform worse

245
00:09:46,620 --> 00:09:48,240
than what was shown in the traditional

246
00:09:48,240 --> 00:09:50,220
model in past work

247
00:09:50,220 --> 00:09:52,800
so we think this is a more reasonable

248
00:09:52,800 --> 00:09:55,380
representation of the the actual threat

249
00:09:55,380 --> 00:09:57,420
on the live Network

250
00:09:57,420 --> 00:09:59,519
okay the second thing we wanted to

251
00:09:59,519 --> 00:10:02,279
explore is how useful is genuine data

252
00:10:02,279 --> 00:10:04,860
compared to synthetic data in conducting

253
00:10:04,860 --> 00:10:05,820
this attack

254
00:10:05,820 --> 00:10:08,640
so this involves two phases first an

255
00:10:08,640 --> 00:10:10,980
offline phase where we crawl a list of

256
00:10:10,980 --> 00:10:14,160
URLs taken from previous research this

257
00:10:14,160 --> 00:10:17,339
is a synthetic list this is a synthetic

258
00:10:17,339 --> 00:10:20,220
model we use that those sequences to

259
00:10:20,220 --> 00:10:23,160
train a classifier as done in previous

260
00:10:23,160 --> 00:10:24,180
work

261
00:10:24,180 --> 00:10:26,880
and in an online phase we take a copy of

262
00:10:26,880 --> 00:10:29,220
that synthetic model and allow it to be

263
00:10:29,220 --> 00:10:31,980
updated with genuine data from the exit

264
00:10:31,980 --> 00:10:33,720
so that's the hybrid model

265
00:10:33,720 --> 00:10:35,580
and then the final model is a real model

266
00:10:35,580 --> 00:10:38,100
trained only on genuine data

267
00:10:38,100 --> 00:10:41,820
uh we conducted an evaluation here for

268
00:10:41,820 --> 00:10:44,579
one week we have we observed 1.2 million

269
00:10:44,579 --> 00:10:47,519
data sequences during the evaluation

270
00:10:47,519 --> 00:10:50,100
and in this case we were only interested

271
00:10:50,100 --> 00:10:51,380
in the

272
00:10:51,380 --> 00:10:54,060
domains from our synthetic crawl because

273
00:10:54,060 --> 00:10:55,380
those were the ones we were going to

274
00:10:55,380 --> 00:10:58,019
compare against and we observed 183 of

275
00:10:58,019 --> 00:11:00,540
those synthetic domains this is a binary

276
00:11:00,540 --> 00:11:02,820
classification where the monitor set

277
00:11:02,820 --> 00:11:04,680
contains five sites and we're predicting

278
00:11:04,680 --> 00:11:08,160
either monitored or unmonitored

279
00:11:08,160 --> 00:11:09,899
this graph shows a Precision recall

280
00:11:09,899 --> 00:11:12,300
curves for the three models uh the

281
00:11:12,300 --> 00:11:15,839
synthetic results are the green dashed

282
00:11:15,839 --> 00:11:18,180
line at the bottom we can see that the

283
00:11:18,180 --> 00:11:20,160
synthetic classifier trained only on

284
00:11:20,160 --> 00:11:22,620
synthetic data performs poorly when it's

285
00:11:22,620 --> 00:11:24,480
deployed against genuine data in the

286
00:11:24,480 --> 00:11:26,779
real world

287
00:11:26,940 --> 00:11:28,260
second

288
00:11:28,260 --> 00:11:30,959
the other two models the synthetic and

289
00:11:30,959 --> 00:11:32,579
the hybrid model sorry the real and the

290
00:11:32,579 --> 00:11:33,660
hybrid model

291
00:11:33,660 --> 00:11:36,420
show that synthetic data doesn't improve

292
00:11:36,420 --> 00:11:39,000
the model over genuine data so what we

293
00:11:39,000 --> 00:11:41,579
find here is if the adversary is going

294
00:11:41,579 --> 00:11:43,620
to deploy the model on genuine data in

295
00:11:43,620 --> 00:11:45,420
the real world then it should be trained

296
00:11:45,420 --> 00:11:48,600
on genuine data in the real world

297
00:11:48,600 --> 00:11:50,760
finally we're interested in what the

298
00:11:50,760 --> 00:11:52,740
loss and accuracy is from training on

299
00:11:52,740 --> 00:11:55,019
the exit and moving to the entry side so

300
00:11:55,019 --> 00:11:57,660
we evaluated this in order to do this

301
00:11:57,660 --> 00:12:00,600
and to be safe this has to be a fully

302
00:12:00,600 --> 00:12:02,160
synthetic evaluation because we're going

303
00:12:02,160 --> 00:12:03,720
to be doing predictions on the client

304
00:12:03,720 --> 00:12:04,860
side

305
00:12:04,860 --> 00:12:07,920
so we crawled a thousand URLs again from

306
00:12:07,920 --> 00:12:11,279
previous research 10 times each we

307
00:12:11,279 --> 00:12:13,440
pinned our entry and our exit on each

308
00:12:13,440 --> 00:12:15,959
circuit so that we have the same traffic

309
00:12:15,959 --> 00:12:17,940
patterns on the same circuit

310
00:12:17,940 --> 00:12:20,339
and we collected the data sequences from

311
00:12:20,339 --> 00:12:22,260
both positions and then this is a closed

312
00:12:22,260 --> 00:12:24,720
World batch classification problem with

313
00:12:24,720 --> 00:12:28,200
a 50 50 train test split the table shows

314
00:12:28,200 --> 00:12:30,839
the results you can focus on the bottom

315
00:12:30,839 --> 00:12:35,160
row and we find that for monitor set

316
00:12:35,160 --> 00:12:37,620
sizes that are

317
00:12:37,620 --> 00:12:40,560
um feasible in the real world so sets of

318
00:12:40,560 --> 00:12:44,339
size five we see a relatively low loss

319
00:12:44,339 --> 00:12:47,339
in accuracy about 4.8 percent and then

320
00:12:47,339 --> 00:12:48,899
as the size of the monitored set

321
00:12:48,899 --> 00:12:53,060
increases to 50 and 750 we see 11 and 18

322
00:12:53,060 --> 00:12:57,000
loss in accuracy by moving to the

323
00:12:57,000 --> 00:12:59,339
opposite side of the circuit

324
00:12:59,339 --> 00:13:01,560
so then I want to note that we didn't do

325
00:13:01,560 --> 00:13:03,300
any optimizations here we didn't try to

326
00:13:03,300 --> 00:13:04,800
account for any of these things we just

327
00:13:04,800 --> 00:13:06,240
took the triple fingerprinting work and

328
00:13:06,240 --> 00:13:09,000
pretty much applied it directly so

329
00:13:09,000 --> 00:13:11,760
future work is to try to make this

330
00:13:11,760 --> 00:13:13,800
attack see how accurate this attack can

331
00:13:13,800 --> 00:13:16,620
be made if we were focused exactly on

332
00:13:16,620 --> 00:13:20,100
improving the accuracy or increasing

333
00:13:20,100 --> 00:13:21,360
distortion

334
00:13:21,360 --> 00:13:24,120
another future area is how can we design

335
00:13:24,120 --> 00:13:27,000
defenses in this model and so that they

336
00:13:27,000 --> 00:13:28,620
work in the real world one of the

337
00:13:28,620 --> 00:13:30,120
insights I want to share is that I think

338
00:13:30,120 --> 00:13:32,160
simple defenses may be more effective

339
00:13:32,160 --> 00:13:34,079
than we thought because not only does

340
00:13:34,079 --> 00:13:37,079
the adversary have to defend uh or

341
00:13:37,079 --> 00:13:40,500
attack the defended traces so traces

342
00:13:40,500 --> 00:13:42,360
that are padded but it also has to

343
00:13:42,360 --> 00:13:44,579
simulate the defense on top of the data

344
00:13:44,579 --> 00:13:46,019
that it would collect at an exit relay

345
00:13:46,019 --> 00:13:47,940
which is an extra step and might be more

346
00:13:47,940 --> 00:13:48,959
difficult

347
00:13:48,959 --> 00:13:50,700
so that's all I have I'll stop there

348
00:13:50,700 --> 00:13:52,079
please read the paper there's a lot more

349
00:13:52,079 --> 00:13:53,760
details and otherwise I'll take

350
00:13:53,760 --> 00:13:56,060
questions

