1
00:00:08,058 --> 00:00:10,679
hello everyone my name is Wendy from

2
00:00:10,679 --> 00:00:12,780
Washington State University I hope you

3
00:00:12,780 --> 00:00:14,880
have been staying well and safe in this

4
00:00:14,880 --> 00:00:16,800
talk I will share a little work on Paul

5
00:00:16,800 --> 00:00:19,020
Cruise across language Dynamic

6
00:00:19,020 --> 00:00:21,359
information flow analysis

7
00:00:21,359 --> 00:00:24,119
currently most real world software are

8
00:00:24,119 --> 00:00:26,519
developed in multiple languages here we

9
00:00:26,519 --> 00:00:28,800
summarize the interfacing mechanism in

10
00:00:28,800 --> 00:00:30,599
these systems into two high-level

11
00:00:30,599 --> 00:00:32,700
categories uniform and the language

12
00:00:32,700 --> 00:00:35,700
specific mechanisms the former indicates

13
00:00:35,700 --> 00:00:37,800
different language theories interact

14
00:00:37,800 --> 00:00:40,680
through IPC for example obviously on the

15
00:00:40,680 --> 00:00:43,079
socket or share memory generator means

16
00:00:43,079 --> 00:00:45,540
languages interacts through foreign

17
00:00:45,540 --> 00:00:48,480
function interface for instance the gni

18
00:00:48,480 --> 00:00:51,059
for Java NSA python extension for python

19
00:00:51,059 --> 00:00:53,579
NC programs in those people will Target

20
00:00:53,579 --> 00:00:55,980
cross-language DFA and about detection

21
00:00:55,980 --> 00:00:58,440
in onboarding language programs

22
00:00:58,440 --> 00:01:00,000
constructed based on the foreign

23
00:01:00,000 --> 00:01:01,559
function interface

24
00:01:01,559 --> 00:01:03,420
when coming to the Maori language

25
00:01:03,420 --> 00:01:04,319
program

26
00:01:04,319 --> 00:01:07,520
traditional single language unless it is

27
00:01:07,520 --> 00:01:10,439
since insecure called behaviors may

28
00:01:10,439 --> 00:01:12,780
exist not only within individual

29
00:01:12,780 --> 00:01:15,900
languages but also Earth and across the

30
00:01:15,900 --> 00:01:18,479
interfaces between different languages

31
00:01:18,479 --> 00:01:21,000
hence holistic validation of Modern

32
00:01:21,000 --> 00:01:23,040
English programs against insecure

33
00:01:23,040 --> 00:01:25,860
property is essential however developing

34
00:01:25,860 --> 00:01:29,040
a holistic DFA information fits to Major

35
00:01:29,040 --> 00:01:32,040
challenges semantic disparity and the

36
00:01:32,040 --> 00:01:33,619
analysis cause Effectiveness

37
00:01:33,619 --> 00:01:36,659
specifically using DFS were stopped as

38
00:01:36,659 --> 00:01:38,040
the language boundaries and the

39
00:01:38,040 --> 00:01:40,020
similarization the results of single

40
00:01:40,020 --> 00:01:42,540
language DFAS can also cause semantic

41
00:01:42,540 --> 00:01:46,140
loss hence we will either moreover there

42
00:01:46,140 --> 00:01:48,780
is zero lack of effective approaches for

43
00:01:48,780 --> 00:01:50,820
instrumenting modeling language programs

44
00:01:50,820 --> 00:01:53,579
and efficiency issues will also become

45
00:01:53,579 --> 00:01:55,619
more prominent due to the more complex

46
00:01:55,619 --> 00:01:58,860
systems hence we do design part Cruise

47
00:01:58,860 --> 00:02:00,780
packaging to develop unified

48
00:02:00,780 --> 00:02:02,460
instrumentation guidance and the

49
00:02:02,460 --> 00:02:05,640
scalable DFA for multi-language programs

50
00:02:05,640 --> 00:02:07,140
here are two examples about

51
00:02:07,140 --> 00:02:09,119
vulnerabilities in Python silvergrounds

52
00:02:09,119 --> 00:02:12,239
and shown in example one the interfacing

53
00:02:12,239 --> 00:02:14,099
is realized via python extension

54
00:02:14,099 --> 00:02:17,340
essential data received at line P3 in

55
00:02:17,340 --> 00:02:19,560
mainic and line C line along the into

56
00:02:19,560 --> 00:02:21,420
language flow as shown with the real

57
00:02:21,420 --> 00:02:24,180
lines in this case the clockwise cannot

58
00:02:24,180 --> 00:02:28,580
be constructed by separated analyzing

59
00:02:29,239 --> 00:02:32,700
two two functions encode and decode are

60
00:02:32,700 --> 00:02:35,459
called implicitly during runtime hence

61
00:02:35,459 --> 00:02:37,500
the code graph is hard to be built with

62
00:02:37,500 --> 00:02:41,640
static known as the example motivate

63
00:02:41,640 --> 00:02:44,459
we develop across the language DFA for

64
00:02:44,459 --> 00:02:46,379
bug Discovery and multi-language

65
00:02:46,379 --> 00:02:47,700
programs

66
00:02:47,700 --> 00:02:50,099
in general calculus has two primary

67
00:02:50,099 --> 00:02:52,920
phases static analysis instrumentation

68
00:02:52,920 --> 00:02:55,980
and online Dynamic analysis the form of

69
00:02:55,980 --> 00:02:59,040
it is first runs symbolic dependencies

70
00:02:59,040 --> 00:03:01,620
based on a loan based on language

71
00:03:01,620 --> 00:03:03,959
intermediate implementation coronation

72
00:03:03,959 --> 00:03:06,239
here and generates instrumentation

73
00:03:06,239 --> 00:03:07,800
Gatherings according to the soothing

74
00:03:07,800 --> 00:03:10,920
criteria with this Guidance the specific

75
00:03:10,920 --> 00:03:13,500
language instrumental finishes the

76
00:03:13,500 --> 00:03:14,940
instrumentation on the market language

77
00:03:14,940 --> 00:03:17,819
programs in phase two Park Cruise runs

78
00:03:17,819 --> 00:03:20,280
the instrumental program and constructs

79
00:03:20,280 --> 00:03:21,780
Dynamic information flow graph

80
00:03:21,780 --> 00:03:24,780
accumulated based on the graph how

81
00:03:24,780 --> 00:03:26,940
recruits one block detection plugins for

82
00:03:26,940 --> 00:03:29,040
bulk discovery

83
00:03:29,040 --> 00:03:31,800
regarding efficiency study analysis

84
00:03:31,800 --> 00:03:35,099
phase aims to compute a subset or

85
00:03:35,099 --> 00:03:37,080
instructions over Target program with

86
00:03:37,080 --> 00:03:39,720
given Criterion however traditional data

87
00:03:39,720 --> 00:03:41,640
flow analysis based approaches targeted

88
00:03:41,640 --> 00:03:43,980
single language programs and will stop

89
00:03:43,980 --> 00:03:46,260
and language boundaries moreover the

90
00:03:46,260 --> 00:03:48,540
analysis is too heavy in terms of both

91
00:03:48,540 --> 00:03:51,299
memory usage and same cost and the

92
00:03:51,299 --> 00:03:53,040
independent analysis of different

93
00:03:53,040 --> 00:03:55,080
languages will work across data

94
00:03:55,080 --> 00:03:58,099
consistency problems

95
00:03:58,099 --> 00:04:01,379
language acrostic analysis each design

96
00:04:01,379 --> 00:04:04,500
is not with and can be easily extended

97
00:04:04,500 --> 00:04:07,760
to support new languages

98
00:04:09,680 --> 00:04:12,540
the middle is the form of corresponding

99
00:04:12,540 --> 00:04:14,819
install representation and the rest use

100
00:04:14,819 --> 00:04:16,279
the symbiotic

101
00:04:16,279 --> 00:04:19,079
definitions if we consider the statement

102
00:04:19,079 --> 00:04:23,100
as 9 with variable V as the Criterion we

103
00:04:23,100 --> 00:04:25,259
first run forward analysis along the

104
00:04:25,259 --> 00:04:28,080
diffusion and get as 11 symbolic

105
00:04:28,080 --> 00:04:30,600
dependent on Sni due to the lack of

106
00:04:30,600 --> 00:04:32,940
pointer analysis we will also run

107
00:04:32,940 --> 00:04:35,639
backward analysis to ensure the service

108
00:04:35,639 --> 00:04:38,460
and the get S8 also symbolic dependent

109
00:04:38,460 --> 00:04:41,580
on S9 and finally we can obtain the

110
00:04:41,580 --> 00:04:44,639
symbolic difference that os9 as sh and

111
00:04:44,639 --> 00:04:47,340
S11 and we can only need to instrument

112
00:04:47,340 --> 00:04:49,440
those three instruments for this program

113
00:04:49,440 --> 00:04:52,460
with the given Criterion

114
00:04:52,460 --> 00:04:55,380
another important phase is the online

115
00:04:55,380 --> 00:04:58,560
Dynamic analysis it is language acoustic

116
00:04:58,560 --> 00:05:00,360
and constructs the dynamic information

117
00:05:00,360 --> 00:05:02,580
photograph accumulated

118
00:05:02,580 --> 00:05:05,940
gfg contains four basic edges including

119
00:05:05,940 --> 00:05:08,220
industrial control data flow Edge and

120
00:05:08,220 --> 00:05:11,040
the interest rate control Edge the

121
00:05:11,040 --> 00:05:12,960
figure shows an example of the Effigy

122
00:05:12,960 --> 00:05:15,120
the example code recognizes the global

123
00:05:15,120 --> 00:05:18,000
variety for a Mainstreet and two

124
00:05:18,000 --> 00:05:21,180
substance we always assume the 31 Stars

125
00:05:21,180 --> 00:05:24,360
before T2 the DFG includes three some

126
00:05:24,360 --> 00:05:26,039
graphs corresponding to the three

127
00:05:26,039 --> 00:05:28,620
strands there are green noise represent

128
00:05:28,620 --> 00:05:31,440
the industrial control flow H where the

129
00:05:31,440 --> 00:05:33,419
drain line is the interest rate data

130
00:05:33,419 --> 00:05:37,020
flow H equals T2 risk G after the right

131
00:05:37,020 --> 00:05:40,740
of G in T1 the blue edge indicates an

132
00:05:40,740 --> 00:05:43,620
inter-procity flow Edge between T1 and

133
00:05:43,620 --> 00:05:45,300
the function set

134
00:05:45,300 --> 00:05:47,940
the remaining black lines represent

135
00:05:47,940 --> 00:05:51,660
control flow edges in individual strands

136
00:05:51,660 --> 00:05:54,240
to show the Practical usability or

137
00:05:54,240 --> 00:05:56,340
particles we focus on vulnerability

138
00:05:56,340 --> 00:05:59,220
detection based on the DFG according to

139
00:05:59,220 --> 00:06:01,020
the various sources and the things

140
00:06:01,020 --> 00:06:02,940
relevant to various information through

141
00:06:02,940 --> 00:06:05,460
security abilities different detectors

142
00:06:05,460 --> 00:06:07,979
plugins works by Computing the

143
00:06:07,979 --> 00:06:09,840
information flow passes between those

144
00:06:09,840 --> 00:06:12,660
sources and things through a traversal

145
00:06:12,660 --> 00:06:15,840
on the most recently updated TFG if the

146
00:06:15,840 --> 00:06:18,440
TFG is incrementally constructed

147
00:06:18,440 --> 00:06:21,000
vulnerabilities are also reported as

148
00:06:21,000 --> 00:06:24,419
well in an incremental manner

149
00:06:24,419 --> 00:06:27,660
to evaluate for Clues we consider three

150
00:06:27,660 --> 00:06:29,880
common metrics including event units

151
00:06:29,880 --> 00:06:33,240
efficiency and the capacity of bulk

152
00:06:33,240 --> 00:06:34,819
discovery on real world programs

153
00:06:34,819 --> 00:06:37,380
regarding the effectiveness evaluation

154
00:06:37,380 --> 00:06:41,400
we developed 46 macro hesitant

155
00:06:41,400 --> 00:06:43,560
benchmarks then a pyg bench by

156
00:06:43,560 --> 00:06:45,120
summarizing the patterns or

157
00:06:45,120 --> 00:06:47,280
vulnerabilities in reference to the

158
00:06:47,280 --> 00:06:48,900
corresponding civil heat distributions

159
00:06:48,900 --> 00:06:51,419
well for the later two metrics we

160
00:06:51,419 --> 00:06:54,360
evaluate particles on 12 real world

161
00:06:54,360 --> 00:06:57,479
presence programs or our experiments are

162
00:06:57,479 --> 00:07:01,319
done on the Ubuntu 18 of station

163
00:07:01,319 --> 00:07:04,800
for the 46 macro benchmarks covering

164
00:07:04,800 --> 00:07:06,720
seven common types or one Beauties

165
00:07:06,720 --> 00:07:10,800
particles achieved 93.5 precision and

166
00:07:10,800 --> 00:07:14,220
100 record on Purity bench although the

167
00:07:14,220 --> 00:07:16,500
micro benchmarks can door represent all

168
00:07:16,500 --> 00:07:19,080
real world applications scenarios common

169
00:07:19,080 --> 00:07:21,120
programs analysis features have been

170
00:07:21,120 --> 00:07:22,919
considered in the design of your

171
00:07:22,919 --> 00:07:25,500
experience to have access to necessary

172
00:07:25,500 --> 00:07:28,680
and accuracy thus these Embers are still

173
00:07:28,680 --> 00:07:30,840
encouraging for the matches or particles

174
00:07:30,840 --> 00:07:33,479
for class language analysis

175
00:07:33,479 --> 00:07:35,699
this table shows the efficiency results

176
00:07:35,699 --> 00:07:38,639
of particles overall although its term

177
00:07:38,639 --> 00:07:40,620
and memory cost increases with the

178
00:07:40,620 --> 00:07:42,660
greatest something sense the spa

179
00:07:42,660 --> 00:07:45,180
financial industry in minutes and moves

180
00:07:45,180 --> 00:07:48,419
on memory usage the SDA only took less

181
00:07:48,419 --> 00:07:51,240
than 100 million bands memory and Peak

182
00:07:51,240 --> 00:07:53,400
for most of each month to have this

183
00:07:53,400 --> 00:07:55,500
memory cost was saved by pure touch

184
00:07:55,500 --> 00:07:59,520
which was over 7.4 gigabytes however for

185
00:07:59,520 --> 00:08:02,759
system as this skill the peak memory is

186
00:08:02,759 --> 00:08:05,840
still reasonable

187
00:08:06,120 --> 00:08:08,880
we evaluate policroots by comparing two

188
00:08:08,880 --> 00:08:10,979
versions or Real World Range Mouse one

189
00:08:10,979 --> 00:08:12,960
is the SDA candidate instrumentation

190
00:08:12,960 --> 00:08:15,120
volume and the other is the whole system

191
00:08:15,120 --> 00:08:17,039
instrumentation version let's show

192
00:08:17,039 --> 00:08:19,680
interference the static analysis OST

193
00:08:19,680 --> 00:08:21,660
have to improve the efficiency of the

194
00:08:21,660 --> 00:08:24,419
dynamic analysis significantly

195
00:08:24,419 --> 00:08:27,060
regarding the bank discount Discovery

196
00:08:27,060 --> 00:08:29,099
particles identified 14 new

197
00:08:29,099 --> 00:08:31,139
vulnerabilities related to 6 over real

198
00:08:31,139 --> 00:08:33,120
world multi-language benchmarks that's

199
00:08:33,120 --> 00:08:35,880
listed in this table among which it

200
00:08:35,880 --> 00:08:38,880
bounds helping a sandwich series

201
00:08:38,880 --> 00:08:42,059
so particles enables cross-language DFA

202
00:08:42,059 --> 00:08:45,540
and implemented for python City programs

203
00:08:45,540 --> 00:08:47,820
one important question is about the

204
00:08:47,820 --> 00:08:49,920
extensibility for other languages

205
00:08:49,920 --> 00:08:52,800
according to the design of requests two

206
00:08:52,800 --> 00:08:55,380
primary implementation are necessary to

207
00:08:55,380 --> 00:08:57,660
add a new language support the first one

208
00:08:57,660 --> 00:09:00,240
is to add a initial translator for in

209
00:09:00,240 --> 00:09:02,940
the semantics the other implementation

210
00:09:02,940 --> 00:09:05,820
is to develop an instrument with the

211
00:09:05,820 --> 00:09:07,980
guidance or FDA results

212
00:09:07,980 --> 00:09:11,160
to deal with critical changes Focus also

213
00:09:11,160 --> 00:09:14,100
have some limitations firstly your

214
00:09:14,100 --> 00:09:15,959
current implementation is the field

215
00:09:15,959 --> 00:09:18,660
incentive as a result the DFA results

216
00:09:18,660 --> 00:09:21,920
can be first particles secondly foreign

217
00:09:21,920 --> 00:09:25,260
computes explicit information flow hence

218
00:09:25,260 --> 00:09:27,480
will miss the availabilities induced by

219
00:09:27,480 --> 00:09:29,820
implicit information flow moreover

220
00:09:29,820 --> 00:09:32,459
negative typical DFA particles only

221
00:09:32,459 --> 00:09:34,680
confused information for all accesses in

222
00:09:34,680 --> 00:09:37,620
the particular program executions thus

223
00:09:37,620 --> 00:09:40,320
isability to discover more Beauties is

224
00:09:40,320 --> 00:09:42,540
limited to those that are covered in the

225
00:09:42,540 --> 00:09:45,600
analyzed executions finally recruits

226
00:09:45,600 --> 00:09:47,760
only support ffi language Innovation

227
00:09:47,760 --> 00:09:49,800
which means executions of different

228
00:09:49,800 --> 00:09:51,120
languages

229
00:09:51,120 --> 00:09:55,080
uh in the same process

230
00:09:55,080 --> 00:09:58,320
so we present concludes a level Dynamic

231
00:09:58,320 --> 00:09:59,760
information flow analysis for

232
00:09:59,760 --> 00:10:01,860
multilingual systems unlike other

233
00:10:01,860 --> 00:10:04,019
approaches precludes even as an

234
00:10:04,019 --> 00:10:06,300
efficient and effective static analysis

235
00:10:06,300 --> 00:10:08,160
algorithm called SDA to get

236
00:10:08,160 --> 00:10:10,920
instrumentation and run TM recruits

237
00:10:10,920 --> 00:10:13,200
adopts online and incremental audiences

238
00:10:13,200 --> 00:10:15,899
it constructs the whole program DFG

239
00:10:15,899 --> 00:10:18,000
based on which applications can be

240
00:10:18,000 --> 00:10:20,839
developed for vulnerability detection

241
00:10:20,839 --> 00:10:23,580
zero evaluation results confirm the

242
00:10:23,580 --> 00:10:25,320
practice or progress

243
00:10:25,320 --> 00:10:28,500
it successfully found 14 bucks under six

244
00:10:28,500 --> 00:10:31,140
view World consensus on six real

245
00:10:31,140 --> 00:10:33,480
frequency programs and the code 87 years

246
00:10:33,480 --> 00:10:34,440
and

247
00:10:34,440 --> 00:10:38,360
that's all thank you for your attention

