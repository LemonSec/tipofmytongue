1
00:00:07,940 --> 00:00:11,219
hello and welcome to xtriotics and how

2
00:00:11,219 --> 00:00:12,780
to enhance resilience of residential

3
00:00:12,780 --> 00:00:14,940
routers I'm Philip yettner and I wrote

4
00:00:14,940 --> 00:00:16,440
this paper together with hayashuma and

5
00:00:16,440 --> 00:00:18,720
Lucas deichmann and Michael weitner

6
00:00:18,720 --> 00:00:20,820
so first to give you an overview over

7
00:00:20,820 --> 00:00:22,760
the common talk

8
00:00:22,760 --> 00:00:26,340
I'll just quickly go over the topics so

9
00:00:26,340 --> 00:00:27,779
first we will look at DNS and

10
00:00:27,779 --> 00:00:29,880
residential routers what it is and what

11
00:00:29,880 --> 00:00:31,740
they do then we will look at the

12
00:00:31,740 --> 00:00:33,840
attacker models which we considered for

13
00:00:33,840 --> 00:00:36,059
our attacks I present you the four

14
00:00:36,059 --> 00:00:38,460
attacks we evaluated in the routers we

15
00:00:38,460 --> 00:00:41,280
bought and then I will talk about the

16
00:00:41,280 --> 00:00:43,500
black box and white box Evolution we did

17
00:00:43,500 --> 00:00:44,940
against the routers

18
00:00:44,940 --> 00:00:47,460
we will talk about if we actually need

19
00:00:47,460 --> 00:00:49,500
those DNS implementations in the routers

20
00:00:49,500 --> 00:00:51,719
or if you maybe get rid of them for

21
00:00:51,719 --> 00:00:54,360
basically reduced attack surface and

22
00:00:54,360 --> 00:00:56,520
finally I present our disclosure efforts

23
00:00:56,520 --> 00:00:58,739
and some conclusion

24
00:00:58,739 --> 00:01:01,620
so first what is DNS in residential

25
00:01:01,620 --> 00:01:04,319
routers so the DNS is the domain name

26
00:01:04,319 --> 00:01:06,240
system which you've probably known for

27
00:01:06,240 --> 00:01:08,580
resolving domain names to IP addresses

28
00:01:08,580 --> 00:01:10,740
and in the context of residential

29
00:01:10,740 --> 00:01:13,140
routers essentially there are clients

30
00:01:13,140 --> 00:01:15,299
which send their DNS requests to routers

31
00:01:15,299 --> 00:01:17,700
the routers forward the requests to the

32
00:01:17,700 --> 00:01:20,100
isps or the public or server if you use

33
00:01:20,100 --> 00:01:23,159
those and those resolvers then query the

34
00:01:23,159 --> 00:01:25,080
authoritative name servers and provide

35
00:01:25,080 --> 00:01:26,759
the actual data

36
00:01:26,759 --> 00:01:28,979
and typically the router as well as the

37
00:01:28,979 --> 00:01:31,500
client are Auto configured the client's

38
00:01:31,500 --> 00:01:33,420
Auto configure via the hcp and the

39
00:01:33,420 --> 00:01:35,700
router is auto configured by the ISP

40
00:01:35,700 --> 00:01:37,680
depending on what protocol it uses to

41
00:01:37,680 --> 00:01:39,360
connect to the internet

42
00:01:39,360 --> 00:01:42,180
and if we talk about attacks against the

43
00:01:42,180 --> 00:01:44,939
DNS and routers we mostly consider cash

44
00:01:44,939 --> 00:01:47,159
poisoning attacks so these attacks are

45
00:01:47,159 --> 00:01:49,200
essentially the goal is to associate a

46
00:01:49,200 --> 00:01:51,180
victim domain with the attacker's

47
00:01:51,180 --> 00:01:52,500
address and this allows traffic

48
00:01:52,500 --> 00:01:54,960
hijacking because then the traffic which

49
00:01:54,960 --> 00:01:56,820
should go to the victim actually goes to

50
00:01:56,820 --> 00:01:59,040
the attacker and the attacker might do

51
00:01:59,040 --> 00:02:01,759
something with it

52
00:02:02,040 --> 00:02:04,560
um right so first considering attacker

53
00:02:04,560 --> 00:02:06,600
models we have two attacker models the

54
00:02:06,600 --> 00:02:08,280
first one is the model of a malicious

55
00:02:08,280 --> 00:02:10,739
script essentially a website controlled

56
00:02:10,739 --> 00:02:12,660
by the attacker which the victim visits

57
00:02:12,660 --> 00:02:15,180
on a laptop or something and this

58
00:02:15,180 --> 00:02:17,160
website can only trigger typically

59
00:02:17,160 --> 00:02:20,160
standard a queries via the browser maybe

60
00:02:20,160 --> 00:02:22,200
via JavaScript or just by embedding

61
00:02:22,200 --> 00:02:24,060
images Etc

62
00:02:24,060 --> 00:02:26,160
the second attacker model is that of a

63
00:02:26,160 --> 00:02:28,080
malicious client for example if you have

64
00:02:28,080 --> 00:02:29,819
a public Wi-Fi it might be a laptop

65
00:02:29,819 --> 00:02:32,040
which you can just join the network or

66
00:02:32,040 --> 00:02:33,540
if you have a bigger Network maybe like

67
00:02:33,540 --> 00:02:36,900
on a campus Network there are a lot of

68
00:02:36,900 --> 00:02:38,819
potentially malicious clients which

69
00:02:38,819 --> 00:02:41,220
could connect to the current Network

70
00:02:41,220 --> 00:02:43,560
and these malicious clients then can

71
00:02:43,560 --> 00:02:46,680
send arbitrary DNS messages including

72
00:02:46,680 --> 00:02:48,720
unusual queries which you couldn't do

73
00:02:48,720 --> 00:02:51,300
via a browser or even malformatted

74
00:02:51,300 --> 00:02:54,120
queries which aren't actually valid and

75
00:02:54,120 --> 00:02:57,620
might trigger problems in their servers

76
00:02:57,620 --> 00:03:00,000
for the attacks we considered

77
00:03:00,000 --> 00:03:02,340
essentially we evaluated four attacks

78
00:03:02,340 --> 00:03:04,080
and vulnerabilities in the routers we

79
00:03:04,080 --> 00:03:05,519
bought

80
00:03:05,519 --> 00:03:07,680
um different some of them are new some

81
00:03:07,680 --> 00:03:09,120
of them are improved and some of them

82
00:03:09,120 --> 00:03:11,700
are already known the first attack is

83
00:03:11,700 --> 00:03:13,980
Cash poisoning via character

84
00:03:13,980 --> 00:03:16,260
misinterpretation and in this attack

85
00:03:16,260 --> 00:03:18,360
essentially the goal of the attacker is

86
00:03:18,360 --> 00:03:21,180
to inject the poisonous query by

87
00:03:21,180 --> 00:03:23,659
providing a name in this case victim.com

88
00:03:23,659 --> 00:03:25,980
including a zero byte and then

89
00:03:25,980 --> 00:03:28,500
tanger.com and this might trigger a

90
00:03:28,500 --> 00:03:30,120
vulnerability in the router which

91
00:03:30,120 --> 00:03:31,980
essentially truncates this name which is

92
00:03:31,980 --> 00:03:34,440
owned by the attacker down to victim.com

93
00:03:34,440 --> 00:03:36,900
and then Associates victim.com with the

94
00:03:36,900 --> 00:03:38,879
IP address of the attacker

95
00:03:38,879 --> 00:03:41,519
the second attack we considered is a

96
00:03:41,519 --> 00:03:44,220
transaction ID forwarding and in this

97
00:03:44,220 --> 00:03:47,040
case which we found in some routers the

98
00:03:47,040 --> 00:03:48,780
routers essentially forward the

99
00:03:48,780 --> 00:03:51,480
transaction ID used by the client but

100
00:03:51,480 --> 00:03:53,879
still implement the cache so essentially

101
00:03:53,879 --> 00:03:55,980
this means that if the client is

102
00:03:55,980 --> 00:03:58,379
malicious he can essentially communicate

103
00:03:58,379 --> 00:04:00,599
the transaction ID which he uses to an

104
00:04:00,599 --> 00:04:02,760
outside attacker in the internet and

105
00:04:02,760 --> 00:04:04,739
then the outside attacker can basically

106
00:04:04,739 --> 00:04:05,959
inject

107
00:04:05,959 --> 00:04:08,640
DNS messages into the communication

108
00:04:08,640 --> 00:04:10,260
between the router and the Upstream

109
00:04:10,260 --> 00:04:11,819
resolver because he knows the

110
00:04:11,819 --> 00:04:13,739
transaction ID and the UDP service part

111
00:04:13,739 --> 00:04:15,019
is not enough to protect against

112
00:04:15,019 --> 00:04:17,339
injection attacks

113
00:04:17,339 --> 00:04:20,160
the same is essentially true of said UDP

114
00:04:20,160 --> 00:04:22,800
Source part which is probably the oldest

115
00:04:22,800 --> 00:04:25,020
known way of doing DNS cash poisoning

116
00:04:25,020 --> 00:04:27,419
practically where the router just uses a

117
00:04:27,419 --> 00:04:30,419
static UDP Source port and so the only

118
00:04:30,419 --> 00:04:32,100
thing which prevents off path injection

119
00:04:32,100 --> 00:04:33,780
as the transaction ID which doesn't

120
00:04:33,780 --> 00:04:35,300
provide enough

121
00:04:35,300 --> 00:04:38,040
entropy to actually protect against

122
00:04:38,040 --> 00:04:39,419
attacks

123
00:04:39,419 --> 00:04:42,240
and finally the four of attack which we

124
00:04:42,240 --> 00:04:44,940
considered is checking disabled

125
00:04:44,940 --> 00:04:47,699
forwarding which is the flag and the DNS

126
00:04:47,699 --> 00:04:49,620
header which essentially tells a

127
00:04:49,620 --> 00:04:51,360
resolver to disable the unisex

128
00:04:51,360 --> 00:04:55,680
processing and so for some routers do is

129
00:04:55,680 --> 00:04:57,540
essentially they forward queries which

130
00:04:57,540 --> 00:04:58,979
have this Flex set

131
00:04:58,979 --> 00:05:01,320
to the Upstream resolver which tells the

132
00:05:01,320 --> 00:05:03,600
Upstream resolver to disable DNS sect

133
00:05:03,600 --> 00:05:05,699
checking and then if the attacker

134
00:05:05,699 --> 00:05:07,800
manages to attack the communication

135
00:05:07,800 --> 00:05:10,139
between the upstream resolver and the

136
00:05:10,139 --> 00:05:12,900
names servers

137
00:05:12,900 --> 00:05:15,479
um essentially what happens is that the

138
00:05:15,479 --> 00:05:17,460
router gets the unchecked result because

139
00:05:17,460 --> 00:05:19,979
the attack doesn't basically trigger the

140
00:05:19,979 --> 00:05:21,540
validation because the validation was

141
00:05:21,540 --> 00:05:24,720
turned off by the bit and because the

142
00:05:24,720 --> 00:05:26,340
router doesn't understand what this flag

143
00:05:26,340 --> 00:05:28,740
means it caches the result and provides

144
00:05:28,740 --> 00:05:30,660
it even to clients which don't set the

145
00:05:30,660 --> 00:05:32,639
flag which then means that the cache

146
00:05:32,639 --> 00:05:34,860
becomes poisoned

147
00:05:34,860 --> 00:05:38,039
right so to evaluate these attacks we

148
00:05:38,039 --> 00:05:40,080
did Black Box evaluation tests and also

149
00:05:40,080 --> 00:05:42,300
internet scans and what we did is

150
00:05:42,300 --> 00:05:44,039
basically we started with an internet

151
00:05:44,039 --> 00:05:46,860
wide scan of 1.5 million reservers

152
00:05:46,860 --> 00:05:48,780
basically all the open reservers in the

153
00:05:48,780 --> 00:05:49,680
internet

154
00:05:49,680 --> 00:05:52,919
and in this scan we found that 8.1 of

155
00:05:52,919 --> 00:05:54,840
the open reservers in the internet were

156
00:05:54,840 --> 00:05:56,639
vulnerable to the misinterpretation

157
00:05:56,639 --> 00:05:58,560
attack which we found last year and

158
00:05:58,560 --> 00:06:01,259
presented it at usinex and our data

159
00:06:01,259 --> 00:06:04,680
suggested that the vulnerability was in

160
00:06:04,680 --> 00:06:07,440
forwarders so in in like DNS resolvers

161
00:06:07,440 --> 00:06:10,080
which don't directly send the requests

162
00:06:10,080 --> 00:06:12,240
to the name server because we can see

163
00:06:12,240 --> 00:06:13,800
that because we run the name server for

164
00:06:13,800 --> 00:06:14,639
the test

165
00:06:14,639 --> 00:06:17,160
but they ascended somewhere else and

166
00:06:17,160 --> 00:06:18,900
then this somewhere else often it's the

167
00:06:18,900 --> 00:06:20,639
Google public or server for example it

168
00:06:20,639 --> 00:06:22,319
sends the actual requests to the name

169
00:06:22,319 --> 00:06:25,620
servers and so this gave us the idea to

170
00:06:25,620 --> 00:06:29,160
basically take a look at less less known

171
00:06:29,160 --> 00:06:31,259
Guinness implementations and forwarders

172
00:06:31,259 --> 00:06:34,800
and one deployment of such typically

173
00:06:34,800 --> 00:06:38,160
such forwarders are in home routers and

174
00:06:38,160 --> 00:06:41,039
so essentially we designed a study and

175
00:06:41,039 --> 00:06:44,160
bought 36 physical devices and tested

176
00:06:44,160 --> 00:06:46,500
the forward text against them and found

177
00:06:46,500 --> 00:06:48,360
that actually 15 of them are vulnerable

178
00:06:48,360 --> 00:06:50,699
to one of those attacks you can see

179
00:06:50,699 --> 00:06:52,620
which one was vulnerable to which attack

180
00:06:52,620 --> 00:06:54,259
in the table

181
00:06:54,259 --> 00:06:57,780
and essentially this shows that the

182
00:06:57,780 --> 00:07:01,380
these vulnerabilities are kind of widely

183
00:07:01,380 --> 00:07:05,100
in these devices and to show that they

184
00:07:05,100 --> 00:07:07,139
are actually deployed and used in the

185
00:07:07,139 --> 00:07:09,360
internet we also did an adnet study

186
00:07:09,360 --> 00:07:11,699
which was aimed to fingerprint the

187
00:07:11,699 --> 00:07:13,259
administrative interface of those

188
00:07:13,259 --> 00:07:16,620
routers and essentially locate clients

189
00:07:16,620 --> 00:07:20,520
with adnet advertisements which actually

190
00:07:20,520 --> 00:07:23,400
use those those routers we found

191
00:07:23,400 --> 00:07:25,560
vulnerable in our lab study and we found

192
00:07:25,560 --> 00:07:28,020
actually layout of devices which or a

193
00:07:28,020 --> 00:07:29,880
lot of users which use those such

194
00:07:29,880 --> 00:07:32,639
devices which shows that these routers

195
00:07:32,639 --> 00:07:35,840
are actually widely used

196
00:07:36,539 --> 00:07:39,660
um right so to find out what causes the

197
00:07:39,660 --> 00:07:41,039
issue to

198
00:07:41,039 --> 00:07:43,919
get some more information about it we

199
00:07:43,919 --> 00:07:45,900
also do the white box evaluation where

200
00:07:45,900 --> 00:07:47,699
we essentially reverse engineered the

201
00:07:47,699 --> 00:07:50,220
firmware of the router and the goal here

202
00:07:50,220 --> 00:07:52,560
was to verify programming mistakes which

203
00:07:52,560 --> 00:07:55,440
causes the vulnerability and we found

204
00:07:55,440 --> 00:07:57,120
that basically many of those

205
00:07:57,120 --> 00:07:59,400
vulnerabilities are caused by somewhat

206
00:07:59,400 --> 00:08:01,979
naive programming mistakes so

207
00:08:01,979 --> 00:08:03,780
essentially if you just implement the

208
00:08:03,780 --> 00:08:06,060
basic DNS forward and you don't read a

209
00:08:06,060 --> 00:08:07,979
lot of security advisories or something

210
00:08:07,979 --> 00:08:10,740
then these vulnerabilities might

211
00:08:10,740 --> 00:08:12,599
something which you do because it's like

212
00:08:12,599 --> 00:08:14,880
it's just something you might not be

213
00:08:14,880 --> 00:08:16,139
aware of

214
00:08:16,139 --> 00:08:18,599
and we also found that many of the

215
00:08:18,599 --> 00:08:21,599
forwarders aren't as really written

216
00:08:21,599 --> 00:08:24,240
professionally so many of the routers

217
00:08:24,240 --> 00:08:26,220
used open source components which aren't

218
00:08:26,220 --> 00:08:28,979
maintained since like 2000 or something

219
00:08:28,979 --> 00:08:31,319
and we also found things like random

220
00:08:31,319 --> 00:08:33,360
number generators seeded with the device

221
00:08:33,360 --> 00:08:35,219
clock but the device clock isn't

222
00:08:35,219 --> 00:08:37,380
actually initialized at the point where

223
00:08:37,380 --> 00:08:39,659
the forwarders started so essentially

224
00:08:39,659 --> 00:08:41,820
the number generator always generates

225
00:08:41,820 --> 00:08:44,159
the same value so the source Port is

226
00:08:44,159 --> 00:08:45,860
always the same

227
00:08:45,860 --> 00:08:48,720
and finally

228
00:08:48,720 --> 00:08:51,360
we also did a study of GitHub forwarders

229
00:08:51,360 --> 00:08:54,300
so we basically scanned or searched

230
00:08:54,300 --> 00:08:56,160
GitHub for DNS forwarders which aren't

231
00:08:56,160 --> 00:08:57,779
like big implementations but small

232
00:08:57,779 --> 00:09:00,420
implementations uh some developers just

233
00:09:00,420 --> 00:09:02,220
wrote maybe to learn something or maybe

234
00:09:02,220 --> 00:09:04,320
they had some special application where

235
00:09:04,320 --> 00:09:06,899
they use it and we found that they

236
00:09:06,899 --> 00:09:09,060
contain the same vulnerabilities in

237
00:09:09,060 --> 00:09:12,600
eight of the 10 cases we tested and this

238
00:09:12,600 --> 00:09:14,519
essentially shows that this is not

239
00:09:14,519 --> 00:09:16,740
necessarily a problem of DNS

240
00:09:16,740 --> 00:09:19,200
implementations in routers but also it's

241
00:09:19,200 --> 00:09:22,080
like just a problem of less popular DNS

242
00:09:22,080 --> 00:09:23,779
implementations which maybe are

243
00:09:23,779 --> 00:09:25,980
implemented by developers which aren't

244
00:09:25,980 --> 00:09:28,860
really aware of the DNS ecosystem or

245
00:09:28,860 --> 00:09:31,019
they don't really know a lot about DNS

246
00:09:31,019 --> 00:09:33,080
security Etc

247
00:09:33,080 --> 00:09:36,600
and so essentially to cope with this

248
00:09:36,600 --> 00:09:38,519
problem that I mean okay now you can go

249
00:09:38,519 --> 00:09:40,080
to patch all these routers and that's

250
00:09:40,080 --> 00:09:41,880
also what we are pushing the developers

251
00:09:41,880 --> 00:09:43,200
but

252
00:09:43,200 --> 00:09:45,540
um we thought again about maybe it's a

253
00:09:45,540 --> 00:09:47,700
better idea to not trying to chase all

254
00:09:47,700 --> 00:09:50,399
these new vulnerabilities but to reduce

255
00:09:50,399 --> 00:09:52,140
the attack surface because we thought

256
00:09:52,140 --> 00:09:54,600
about do we really need the DNS in those

257
00:09:54,600 --> 00:09:56,399
or the DNS implementation in those

258
00:09:56,399 --> 00:09:57,480
routers

259
00:09:57,480 --> 00:10:00,300
and the cope with this essentially we

260
00:10:00,300 --> 00:10:02,940
had the DNS provides two functionalities

261
00:10:02,940 --> 00:10:05,399
the first one is caching and caching is

262
00:10:05,399 --> 00:10:07,160
typically used to improve performance

263
00:10:07,160 --> 00:10:09,839
however we found that caching is not

264
00:10:09,839 --> 00:10:12,240
really needed in routers anymore because

265
00:10:12,240 --> 00:10:15,060
most clients contain caches on their own

266
00:10:15,060 --> 00:10:17,820
so operating systems typically include

267
00:10:17,820 --> 00:10:20,399
in DNS cache and all browsers also

268
00:10:20,399 --> 00:10:23,640
contain DNS caches so to just speed up

269
00:10:23,640 --> 00:10:26,220
the DNS operations you don't really need

270
00:10:26,220 --> 00:10:27,899
the cache in the router because all it

271
00:10:27,899 --> 00:10:30,360
helps is basically if one client visits

272
00:10:30,360 --> 00:10:31,800
the website and then another client

273
00:10:31,800 --> 00:10:33,600
visits the same website in the same

274
00:10:33,600 --> 00:10:34,920
network

275
00:10:34,920 --> 00:10:37,500
in a rather short period of time then

276
00:10:37,500 --> 00:10:38,519
the

277
00:10:38,519 --> 00:10:40,440
you have a really small performance

278
00:10:40,440 --> 00:10:42,300
Improvement but otherwise all the other

279
00:10:42,300 --> 00:10:44,220
caches do the work anyway so you don't

280
00:10:44,220 --> 00:10:46,740
really need the cash on the router and

281
00:10:46,740 --> 00:10:49,860
the second problem the DNS and router

282
00:10:49,860 --> 00:10:51,839
actually dissolves is the problem of

283
00:10:51,839 --> 00:10:54,060
network management separation

284
00:10:54,060 --> 00:10:56,640
so essentially what we found is that

285
00:10:56,640 --> 00:10:58,500
typically you have a client and the

286
00:10:58,500 --> 00:11:01,500
client is configured via the HTTP and

287
00:11:01,500 --> 00:11:04,019
the client expects the DNS server IP in

288
00:11:04,019 --> 00:11:06,839
the DHCP offer and so what the router

289
00:11:06,839 --> 00:11:09,060
could do to basically not have to

290
00:11:09,060 --> 00:11:11,700
implement DNS is he could send the IP of

291
00:11:11,700 --> 00:11:14,279
the Upstream resolver however then if

292
00:11:14,279 --> 00:11:17,100
the internet connection changes this

293
00:11:17,100 --> 00:11:20,459
might lead to a problem where the router

294
00:11:20,459 --> 00:11:23,459
could not communicate the change network

295
00:11:23,459 --> 00:11:26,459
configuration and so basically our idea

296
00:11:26,459 --> 00:11:28,500
is to replace the error-prone caching

297
00:11:28,500 --> 00:11:30,300
forwarders with simple Network address

298
00:11:30,300 --> 00:11:33,060
translation rule to basically get rid of

299
00:11:33,060 --> 00:11:35,399
this error-prone cache

300
00:11:35,399 --> 00:11:38,519
and so finally for some information

301
00:11:38,519 --> 00:11:41,339
about disclosure and the conclusion we

302
00:11:41,339 --> 00:11:43,260
contacted all vendors prior to the

303
00:11:43,260 --> 00:11:45,899
publication and the open source

304
00:11:45,899 --> 00:11:48,360
components especially when

305
00:11:48,360 --> 00:11:49,980
unfortunately when patched because

306
00:11:49,980 --> 00:11:52,800
there's an old and basically our

307
00:11:52,800 --> 00:11:55,260
conclusion is that cash poisoning is

308
00:11:55,260 --> 00:11:57,300
still a problem in routers and that

309
00:11:57,300 --> 00:11:59,880
those vulnerabilities are widespread but

310
00:11:59,880 --> 00:12:02,160
however it might be a good idea to

311
00:12:02,160 --> 00:12:04,500
remove DNS instead of just trying to

312
00:12:04,500 --> 00:12:06,600
patch everything Etc

313
00:12:06,600 --> 00:12:10,760
this was my talk thank you and goodbye

