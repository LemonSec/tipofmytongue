1
00:00:08,660 --> 00:00:12,599
hello everyone this is rizvi I'm going

2
00:00:12,599 --> 00:00:14,400
to present our work titled anycast

3
00:00:14,400 --> 00:00:16,800
agility adaptive routing to manage

4
00:00:16,800 --> 00:00:18,060
titles

5
00:00:18,060 --> 00:00:20,340
this is a joint work from uscisi

6
00:00:20,340 --> 00:00:25,400
University of 20 and sidn labs

7
00:00:26,400 --> 00:00:28,740
dito's attack is increasing and it is

8
00:00:28,740 --> 00:00:30,900
getting worse day by day we can now see

9
00:00:30,900 --> 00:00:33,660
2.3 terabit per second attack and there

10
00:00:33,660 --> 00:00:36,719
are lots of Chip services that can make

11
00:00:36,719 --> 00:00:39,180
this attack events with a little cost

12
00:00:39,180 --> 00:00:41,579
malicious entities can make these attack

13
00:00:41,579 --> 00:00:43,860
events without requiring proper

14
00:00:43,860 --> 00:00:46,579
technical knowledge

15
00:00:47,820 --> 00:00:49,980
scrubbing systems are popular for DDOS

16
00:00:49,980 --> 00:00:51,980
defense using third party Services

17
00:00:51,980 --> 00:00:54,660
however these Services can be expensive

18
00:00:54,660 --> 00:00:57,660
and The Operators sacrifice some kind of

19
00:00:57,660 --> 00:00:59,520
control over the traffic

20
00:00:59,520 --> 00:01:02,100
in this work we focus on anycast network

21
00:01:02,100 --> 00:01:05,220
like CDN DNS where we want to utilize

22
00:01:05,220 --> 00:01:08,460
the capacities in other sites by

23
00:01:08,460 --> 00:01:10,020
spreading the traffic

24
00:01:10,020 --> 00:01:12,060
this is something that other third

25
00:01:12,060 --> 00:01:15,060
parties do but they haven't described it

26
00:01:15,060 --> 00:01:17,479
formally

27
00:01:19,560 --> 00:01:21,840
anycast divides the whole world into

28
00:01:21,840 --> 00:01:23,759
multiple catchments and the same

29
00:01:23,759 --> 00:01:25,740
Services provided from multiple

30
00:01:25,740 --> 00:01:28,259
geographic location you can see from the

31
00:01:28,259 --> 00:01:30,479
figure that the clients are distributed

32
00:01:30,479 --> 00:01:33,840
among three anycast sites distributed in

33
00:01:33,840 --> 00:01:36,860
three continents

34
00:01:37,140 --> 00:01:40,380
anycast is widely used by many syrians

35
00:01:40,380 --> 00:01:44,400
like Akamai cloudflare or Google but the

36
00:01:44,400 --> 00:01:46,619
only way to control traffic in anycast

37
00:01:46,619 --> 00:01:48,360
is bgp

38
00:01:48,360 --> 00:01:51,420
our goal is to utilize bgp when we are

39
00:01:51,420 --> 00:01:53,159
under attack to mitigate the attack

40
00:01:53,159 --> 00:01:55,460
event

41
00:01:56,640 --> 00:01:58,500
when there is an attack event at an

42
00:01:58,500 --> 00:02:00,960
anycast service it is possible that the

43
00:02:00,960 --> 00:02:03,960
attack overwhelms only one or few sites

44
00:02:03,960 --> 00:02:07,079
and keeps other sites unaffected as you

45
00:02:07,079 --> 00:02:09,239
can see from the figure that the red

46
00:02:09,239 --> 00:02:13,140
side gets affected and becomes unhappy

47
00:02:13,140 --> 00:02:15,180
when we have such an attack let us think

48
00:02:15,180 --> 00:02:17,280
about how the operators should respond

49
00:02:17,280 --> 00:02:19,680
to this attack

50
00:02:19,680 --> 00:02:22,080
first we can just absorb the whole

51
00:02:22,080 --> 00:02:23,940
attack into one side and keep other

52
00:02:23,940 --> 00:02:27,360
sides unaffected in that way only one

53
00:02:27,360 --> 00:02:29,940
side will be unhappy but the other sides

54
00:02:29,940 --> 00:02:32,640
are happy however when multiple sites

55
00:02:32,640 --> 00:02:34,680
are affected uh absorption based

56
00:02:34,680 --> 00:02:38,120
technique is not that much helpful

57
00:02:38,340 --> 00:02:40,560
second when other sites have extra

58
00:02:40,560 --> 00:02:43,140
capacity we can try to spread the load

59
00:02:43,140 --> 00:02:46,440
among other sites in this way we can

60
00:02:46,440 --> 00:02:49,080
make all the sites happy which is shown

61
00:02:49,080 --> 00:02:51,800
in the left figure

62
00:02:52,140 --> 00:02:55,920
lastly in a specific scenario when a

63
00:02:55,920 --> 00:02:58,920
specific site has excess capacity we can

64
00:02:58,920 --> 00:03:01,260
shift the maximum load towards that

65
00:03:01,260 --> 00:03:03,120
anycast site

66
00:03:03,120 --> 00:03:05,400
you can see such a scenario in the right

67
00:03:05,400 --> 00:03:07,920
figure where we push the traffic towards

68
00:03:07,920 --> 00:03:10,620
the bigger green side

69
00:03:10,620 --> 00:03:13,680
but how to absorb spread or shift we

70
00:03:13,680 --> 00:03:16,319
will see this soon

71
00:03:16,319 --> 00:03:19,560
to demonstrate how spreading works we

72
00:03:19,560 --> 00:03:21,780
are showing an animation here this

73
00:03:21,780 --> 00:03:25,700
animation is from our colleague Leandro

74
00:03:26,879 --> 00:03:29,700
we have three anycast sites in three

75
00:03:29,700 --> 00:03:31,319
continents

76
00:03:31,319 --> 00:03:34,620
now normal traffic is shown in the right

77
00:03:34,620 --> 00:03:37,040
panel

78
00:03:37,379 --> 00:03:39,239
now we can see an attack just get

79
00:03:39,239 --> 00:03:41,519
started

80
00:03:41,519 --> 00:03:44,340
right panel shows overloaded Amsterdam

81
00:03:44,340 --> 00:03:45,900
site

82
00:03:45,900 --> 00:03:49,500
now automated defense is triggered it

83
00:03:49,500 --> 00:03:52,019
unloads Amsterdam site

84
00:03:52,019 --> 00:03:53,420
an operator

85
00:03:53,420 --> 00:03:57,420
can control traffic in this way

86
00:03:57,420 --> 00:04:00,480
okay now how how do we uh know what to

87
00:04:00,480 --> 00:04:03,239
change to get this kind of outcome we

88
00:04:03,239 --> 00:04:07,760
will uh show this uh later

89
00:04:08,760 --> 00:04:10,799
before making any decision

90
00:04:10,799 --> 00:04:12,299
um like the operator made in the

91
00:04:12,299 --> 00:04:14,400
previous slide we need to know how much

92
00:04:14,400 --> 00:04:16,440
is the total traffic that is coming to

93
00:04:16,440 --> 00:04:17,639
our service

94
00:04:17,639 --> 00:04:20,100
this is useful uh to make any decision

95
00:04:20,100 --> 00:04:23,100
however it is hard to measure the true

96
00:04:23,100 --> 00:04:24,660
offered load because of the Upstream

97
00:04:24,660 --> 00:04:26,580
losses

98
00:04:26,580 --> 00:04:29,280
in this slide we are showing one such

99
00:04:29,280 --> 00:04:31,860
scenario here there are three unicast

100
00:04:31,860 --> 00:04:35,400
sites represented by three buckets where

101
00:04:35,400 --> 00:04:37,500
each anycast site has a capacity of four

102
00:04:37,500 --> 00:04:40,620
at first the incoming traffic is three

103
00:04:40,620 --> 00:04:43,500
unit and from the observation point we

104
00:04:43,500 --> 00:04:46,380
can see those three units

105
00:04:46,380 --> 00:04:49,080
then the attack starts attack intensity

106
00:04:49,080 --> 00:04:51,840
was 4 which makes seven total units of

107
00:04:51,840 --> 00:04:57,138
offered load but our capacity is 4.

108
00:04:57,479 --> 00:04:59,580
from the observation point we will be

109
00:04:59,580 --> 00:05:01,979
able to see four units which is equal to

110
00:05:01,979 --> 00:05:04,680
the capacity but we are still missing

111
00:05:04,680 --> 00:05:07,620
three other units which will be dropped

112
00:05:07,620 --> 00:05:10,560
in the Upstream so the observation Point

113
00:05:10,560 --> 00:05:12,840
gives us an underestimation of the

114
00:05:12,840 --> 00:05:14,160
attack

115
00:05:14,160 --> 00:05:16,080
in this work our contribution is to

116
00:05:16,080 --> 00:05:17,699
propose a way to estimate the true

117
00:05:17,699 --> 00:05:20,360
offered load

118
00:05:20,639 --> 00:05:23,039
after that when we know the true offered

119
00:05:23,039 --> 00:05:25,380
load our desired outcome is to utilize

120
00:05:25,380 --> 00:05:27,000
the traffic engineering techniques in a

121
00:05:27,000 --> 00:05:29,520
controlled manner so that no bucket is

122
00:05:29,520 --> 00:05:32,280
overloaded we show this in the right

123
00:05:32,280 --> 00:05:35,280
side where no bucket is overloaded

124
00:05:35,280 --> 00:05:37,740
can we achieve this desired outcome in

125
00:05:37,740 --> 00:05:39,780
real world events we will answer this

126
00:05:39,780 --> 00:05:42,900
question later in this presentation

127
00:05:42,900 --> 00:05:46,080
we need different bgp announcements for

128
00:05:46,080 --> 00:05:48,120
control traffic engineering the last

129
00:05:48,120 --> 00:05:50,160
challenge is to utilize bgp precisely

130
00:05:50,160 --> 00:05:53,940
since bgp is not predictable bgp is

131
00:05:53,940 --> 00:05:56,639
uncertain because catchments are the

132
00:05:56,639 --> 00:05:58,560
result of a distribution distributed

133
00:05:58,560 --> 00:06:00,360
computation of everyone's routing

134
00:06:00,360 --> 00:06:03,780
policies no single ISP knows it all

135
00:06:03,780 --> 00:06:06,300
if we select a random routing approach

136
00:06:06,300 --> 00:06:07,800
or select something based on our

137
00:06:07,800 --> 00:06:10,080
assumption then we might observe on

138
00:06:10,080 --> 00:06:13,080
wanted consequences and might overwhelm

139
00:06:13,080 --> 00:06:15,300
other sites so in this work we suggest

140
00:06:15,300 --> 00:06:17,699
to keep a bgp Playbook to know all the

141
00:06:17,699 --> 00:06:21,000
routing options and their consequences

142
00:06:21,000 --> 00:06:22,860
in this work our first contribution is

143
00:06:22,860 --> 00:06:24,960
to estimate the true offered load when

144
00:06:24,960 --> 00:06:27,720
we have lost in the Upstream providers

145
00:06:27,720 --> 00:06:29,880
our second contribution is to Define and

146
00:06:29,880 --> 00:06:32,280
design a bgp Playbook which will be

147
00:06:32,280 --> 00:06:34,620
which will help us to take decision

148
00:06:34,620 --> 00:06:36,840
during a reader's attack

149
00:06:36,840 --> 00:06:39,720
finally we show that a bgp Playbook can

150
00:06:39,720 --> 00:06:41,880
help us to mitigate real world details

151
00:06:41,880 --> 00:06:44,240
events

152
00:06:45,360 --> 00:06:47,160
so our first challenge was to estimate

153
00:06:47,160 --> 00:06:49,080
the true offered load um

154
00:06:49,080 --> 00:06:52,080
we utilize known good traffic like ripe

155
00:06:52,080 --> 00:06:54,539
built-in measurements during normal and

156
00:06:54,539 --> 00:06:56,460
attack time to infer the total offered

157
00:06:56,460 --> 00:06:58,680
load here we are showing an example

158
00:06:58,680 --> 00:07:01,080
about how we measured the true offered

159
00:07:01,080 --> 00:07:03,720
load at first we assume the capacity

160
00:07:03,720 --> 00:07:06,120
between the router and the server is 100

161
00:07:06,120 --> 00:07:09,240
megabits per second and 50 megabits per

162
00:07:09,240 --> 00:07:12,780
second is the normal legitimate traffic

163
00:07:12,780 --> 00:07:15,539
then we are getting an attack with the

164
00:07:15,539 --> 00:07:18,900
150 megabits per second so the total

165
00:07:18,900 --> 00:07:21,419
offered load is uh 200 megabits per

166
00:07:21,419 --> 00:07:24,180
second second the capacity ah since the

167
00:07:24,180 --> 00:07:26,580
capacity is 100 megabits per second

168
00:07:26,580 --> 00:07:30,840
we will see a 50 drop in both legitimate

169
00:07:30,840 --> 00:07:33,679
and attack traffic

170
00:07:34,440 --> 00:07:37,380
because of this loss we will now observe

171
00:07:37,380 --> 00:07:39,780
only 25 megabits per second legitimate

172
00:07:39,780 --> 00:07:42,180
traffic when we normally observe 50

173
00:07:42,180 --> 00:07:44,099
megabits per second legitimate traffic

174
00:07:44,099 --> 00:07:47,639
so we are observing around 50 percent of

175
00:07:47,639 --> 00:07:50,400
the total load as the server runs in

176
00:07:50,400 --> 00:07:52,319
capacity with 100 megabits per second

177
00:07:52,319 --> 00:07:54,720
during the overloaded condition we can

178
00:07:54,720 --> 00:07:57,000
estimate the true offered load doubles

179
00:07:57,000 --> 00:08:01,580
of it which is 200 megabits per second

180
00:08:01,800 --> 00:08:04,680
for manipulating bgp we used three

181
00:08:04,680 --> 00:08:06,300
traffic engineering techniques to change

182
00:08:06,300 --> 00:08:07,979
the catchment distribution

183
00:08:07,979 --> 00:08:10,080
we use a path prepending Community

184
00:08:10,080 --> 00:08:12,780
strings and path poisoning these

185
00:08:12,780 --> 00:08:14,520
techniques have different trade-offs in

186
00:08:14,520 --> 00:08:17,160
terms of availability and control we

187
00:08:17,160 --> 00:08:19,259
show more details about this trade-offs

188
00:08:19,259 --> 00:08:21,800
in our paper

189
00:08:21,960 --> 00:08:24,120
we built a bgp Playbook by combining

190
00:08:24,120 --> 00:08:26,639
combining all the possible traffic

191
00:08:26,639 --> 00:08:28,500
engineering techniques we built this

192
00:08:28,500 --> 00:08:30,960
Playbook prior to an attack event and we

193
00:08:30,960 --> 00:08:32,640
use this table to select the right

194
00:08:32,640 --> 00:08:34,919
routing approach we discovered traffic

195
00:08:34,919 --> 00:08:37,799
load using the existing tool for plotter

196
00:08:37,799 --> 00:08:40,740
that actively probes the network

197
00:08:40,740 --> 00:08:43,320
here you can see a sample bgp Playbook

198
00:08:43,320 --> 00:08:46,740
The Playbook was built with three sites

199
00:08:46,740 --> 00:08:49,800
anycast service each entry in this table

200
00:08:49,800 --> 00:08:52,620
indicates a specific bgp routing option

201
00:08:52,620 --> 00:08:54,120
and the corresponding traffic

202
00:08:54,120 --> 00:08:55,560
distribution

203
00:08:55,560 --> 00:08:57,480
since catchment distribution remains

204
00:08:57,480 --> 00:08:59,580
stable most of the time we can use this

205
00:08:59,580 --> 00:09:03,680
playbook for a week or even for a month

206
00:09:03,720 --> 00:09:06,120
we validate our validate and show

207
00:09:06,120 --> 00:09:07,920
different experimental results to prove

208
00:09:07,920 --> 00:09:10,680
our contribution due to time constraints

209
00:09:10,680 --> 00:09:14,700
we show the key results here

210
00:09:14,700 --> 00:09:17,760
we showed how losses cause

211
00:09:17,760 --> 00:09:20,339
underestimation and the Metrology to

212
00:09:20,339 --> 00:09:22,620
estimate the true offered load but does

213
00:09:22,620 --> 00:09:25,260
our estimation work uh to answer this

214
00:09:25,260 --> 00:09:28,140
question we evaluate an attack from

215
00:09:28,140 --> 00:09:31,080
November 2015 we estimate and compare

216
00:09:31,080 --> 00:09:33,260
the estimation with the reported rates

217
00:09:33,260 --> 00:09:36,420
November 2015 event was a huge attack

218
00:09:36,420 --> 00:09:39,899
event where we observed around 94

219
00:09:39,899 --> 00:09:42,959
percent loss in B root after the loss we

220
00:09:42,959 --> 00:09:46,200
could only observe 0.35 Mega queries per

221
00:09:46,200 --> 00:09:48,360
second traffic from the build capture

222
00:09:48,360 --> 00:09:49,380
traces

223
00:09:49,380 --> 00:09:52,019
using the comparison we then estimate

224
00:09:52,019 --> 00:09:55,080
around five to six Mega queries per

225
00:09:55,080 --> 00:09:57,360
second which is close to the reported

226
00:09:57,360 --> 00:10:00,060
rates uh from other root servers so yes

227
00:10:00,060 --> 00:10:01,740
for this event we could successfully

228
00:10:01,740 --> 00:10:04,320
estimate we show more such cases in our

229
00:10:04,320 --> 00:10:06,540
paper

230
00:10:06,540 --> 00:10:10,380
next we show uh how we used uh A

231
00:10:10,380 --> 00:10:12,420
playbook to defend a real world attack

232
00:10:12,420 --> 00:10:16,920
event from 2017. this event was had

233
00:10:16,920 --> 00:10:19,100
around 120 kilo queries per second rate

234
00:10:19,100 --> 00:10:22,019
started from zero second as you can see

235
00:10:22,019 --> 00:10:23,580
from the figure

236
00:10:23,580 --> 00:10:27,480
uh we assume each site can handle us

237
00:10:27,480 --> 00:10:29,700
around 60 kilo queries per day a second

238
00:10:29,700 --> 00:10:33,180
rate we use a artificial capacities here

239
00:10:33,180 --> 00:10:35,820
in this experiment but it is what would

240
00:10:35,820 --> 00:10:38,339
happen if the attack magnitude increases

241
00:10:38,339 --> 00:10:42,060
the hatched area shows the overwhelmed

242
00:10:42,060 --> 00:10:44,399
Amsterdam site next we will look into

243
00:10:44,399 --> 00:10:49,079
the Playbook to find routing approach

244
00:10:49,079 --> 00:10:51,000
so the problem is we are getting around

245
00:10:51,000 --> 00:10:53,279
120 kilo queries per second attack when

246
00:10:53,279 --> 00:10:56,160
our capacity is around 60 kilograms per

247
00:10:56,160 --> 00:10:58,620
second our goal is to keep around 50

248
00:10:58,620 --> 00:11:01,440
percent of the load at each side now

249
00:11:01,440 --> 00:11:04,620
let's consult with our Playbook we can

250
00:11:04,620 --> 00:11:06,600
see several routing approaches that

251
00:11:06,600 --> 00:11:09,060
should work marked by the ticks within

252
00:11:09,060 --> 00:11:10,500
the green circles

253
00:11:10,500 --> 00:11:12,899
ah several routing approaches will not

254
00:11:12,899 --> 00:11:16,320
work as well marked by the cross signs

255
00:11:16,320 --> 00:11:18,959
we select to announce only to Transit

256
00:11:18,959 --> 00:11:21,300
one ah so that the traffic gets

257
00:11:21,300 --> 00:11:24,779
redistributed next we show the impact of

258
00:11:24,779 --> 00:11:27,320
this selection

259
00:11:27,360 --> 00:11:31,140
so we use Community strings to announce

260
00:11:31,140 --> 00:11:32,940
only to Transit one

261
00:11:32,940 --> 00:11:35,220
we expect to get less traffic at

262
00:11:35,220 --> 00:11:37,320
Amsterdam site since we are using only

263
00:11:37,320 --> 00:11:40,920
one Transit provider the figure shows

264
00:11:40,920 --> 00:11:42,899
the outcome after the propagation of the

265
00:11:42,899 --> 00:11:44,880
announcement as you can see there is no

266
00:11:44,880 --> 00:11:48,899
hatched area after 300 300 second and no

267
00:11:48,899 --> 00:11:52,620
site is now overloaded so using

268
00:11:52,620 --> 00:11:55,320
Community strings from The Playbook we

269
00:11:55,320 --> 00:11:58,019
could mitigate the attack event our

270
00:11:58,019 --> 00:11:59,880
approach works for several other attack

271
00:11:59,880 --> 00:12:02,700
events as well and we describe those

272
00:12:02,700 --> 00:12:05,579
events in our paper

273
00:12:05,579 --> 00:12:08,760
in conclusion we suggest that the

274
00:12:08,760 --> 00:12:12,360
anycast operators to keep a bgp Playbook

275
00:12:12,360 --> 00:12:14,700
and we show the requirements of

276
00:12:14,700 --> 00:12:17,339
estimation and the possible impacts of a

277
00:12:17,339 --> 00:12:19,800
Playbook to mitigate a detours event

278
00:12:19,800 --> 00:12:21,540
our artifacts are publicly available

279
00:12:21,540 --> 00:12:24,660
online in the provided link thank you

280
00:12:24,660 --> 00:12:28,819
all and I'm ready to take questions

