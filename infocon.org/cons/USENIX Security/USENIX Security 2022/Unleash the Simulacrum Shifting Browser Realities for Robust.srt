1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:12,420 --> 00:00:15,780
and this work

3
00:00:15,780 --> 00:00:18,240
and this work is the system that we

4
00:00:18,240 --> 00:00:20,640
created for preventing extension

5
00:00:20,640 --> 00:00:22,439
fingerprinting and this is a

6
00:00:22,439 --> 00:00:24,300
collaboration between Arizona State

7
00:00:24,300 --> 00:00:26,100
University and the University of

8
00:00:26,100 --> 00:00:28,939
Illinois at Chicago

9
00:00:30,599 --> 00:00:33,239
browser extensions are small programs

10
00:00:33,239 --> 00:00:36,000
that user installed to add some new

11
00:00:36,000 --> 00:00:38,820
functionalities to their browser

12
00:00:38,820 --> 00:00:43,260
uh but uh websites might be able to find

13
00:00:43,260 --> 00:00:45,480
a way to

14
00:00:45,480 --> 00:00:48,120
detect the presence of these extensions

15
00:00:48,120 --> 00:00:50,039
in the browser

16
00:00:50,039 --> 00:00:52,800
and then they might be able to use the

17
00:00:52,800 --> 00:00:54,840
list of installed extensions to reveal

18
00:00:54,840 --> 00:00:57,000
some sensitive information for example

19
00:00:57,000 --> 00:00:59,340
the religion of the user or ethnicity of

20
00:00:59,340 --> 00:01:01,879
the user

21
00:01:02,039 --> 00:01:04,199
or multiple different approaches that

22
00:01:04,199 --> 00:01:07,020
websites can use one of them is Dom

23
00:01:07,020 --> 00:01:09,780
based approach in the Dom based approach

24
00:01:09,780 --> 00:01:12,119
extensions make some modification to the

25
00:01:12,119 --> 00:01:15,360
page for example LastPass injects an

26
00:01:15,360 --> 00:01:17,880
icon to the page so the website can

27
00:01:17,880 --> 00:01:20,040
observe that modification and based on

28
00:01:20,040 --> 00:01:24,240
that it can detect this installed

29
00:01:24,240 --> 00:01:26,580
extensions in this work we want to

30
00:01:26,580 --> 00:01:30,180
create a system that can prevent this

31
00:01:30,180 --> 00:01:34,100
type of extension fingerprinting

32
00:01:35,820 --> 00:01:38,100
extensions

33
00:01:38,100 --> 00:01:41,040
make some modification to the Dom tree

34
00:01:41,040 --> 00:01:44,520
so the websites might have some scripts

35
00:01:44,520 --> 00:01:47,220
that can observe those modifications so

36
00:01:47,220 --> 00:01:50,460
the root cause of this problem is the

37
00:01:50,460 --> 00:01:54,560
Dom object that is shared between

38
00:01:54,560 --> 00:01:59,100
extensions and websites so

39
00:01:59,100 --> 00:02:03,840
our solution is to kind of separate the

40
00:02:03,840 --> 00:02:06,360
Dom that is accessible by a website and

41
00:02:06,360 --> 00:02:09,598
the Dom which is uh observable by

42
00:02:09,598 --> 00:02:12,480
extensions so we create a parallel Dom

43
00:02:12,480 --> 00:02:16,200
and this parallel Dom uh can be accessed

44
00:02:16,200 --> 00:02:18,660
by the web scripts the web script can

45
00:02:18,660 --> 00:02:22,080
read uh everything from the parallel and

46
00:02:22,080 --> 00:02:23,700
the parallel Dom doesn't have the

47
00:02:23,700 --> 00:02:25,980
extension fingerprints the extension

48
00:02:25,980 --> 00:02:28,620
fingerprints the extension behaviors

49
00:02:28,620 --> 00:02:32,400
will be applied on the user Dom so

50
00:02:32,400 --> 00:02:36,120
uh uh so the website cannot observe

51
00:02:36,120 --> 00:02:38,520
those fingerprints in this scenario in

52
00:02:38,520 --> 00:02:39,840
this case

53
00:02:39,840 --> 00:02:43,400
to be more specific

54
00:02:43,760 --> 00:02:47,220
if there is a read function that read

55
00:02:47,220 --> 00:02:48,900
function will be executed on the

56
00:02:48,900 --> 00:02:50,160
parallel

57
00:02:50,160 --> 00:02:55,560
so if website wants to call an API which

58
00:02:55,560 --> 00:02:57,360
returns something that will be executed

59
00:02:57,360 --> 00:02:59,580
under parallel Dom and if the website

60
00:02:59,580 --> 00:03:02,760
wants to make a modification to the Dom

61
00:03:02,760 --> 00:03:05,099
that modification will be applied on

62
00:03:05,099 --> 00:03:07,860
both two Doms so we will have the same

63
00:03:07,860 --> 00:03:10,500
modification on those on both two downs

64
00:03:10,500 --> 00:03:13,379
to keep the the parallel lamps

65
00:03:13,379 --> 00:03:16,560
synchronized with the user though

66
00:03:16,560 --> 00:03:18,959
the design of this system has too many

67
00:03:18,959 --> 00:03:21,780
details I'm just going to provide some

68
00:03:21,780 --> 00:03:25,760
overview of the design of this system

69
00:03:25,800 --> 00:03:27,800
what we do in this system is

70
00:03:27,800 --> 00:03:31,739
intercepting uh the the Dom interacting

71
00:03:31,739 --> 00:03:34,400
apis and

72
00:03:34,400 --> 00:03:38,819
the brand those apis on the on the Dom

73
00:03:38,819 --> 00:03:42,180
that we want and using this approach we

74
00:03:42,180 --> 00:03:44,640
want to hide those fingerprints so we

75
00:03:44,640 --> 00:03:46,620
need to

76
00:03:46,620 --> 00:03:49,500
uh categorize the functions and based on

77
00:03:49,500 --> 00:03:51,480
the functionality of those functions we

78
00:03:51,480 --> 00:03:53,180
need to

79
00:03:53,180 --> 00:03:56,760
change the behavior that they need to

80
00:03:56,760 --> 00:03:57,720
have

81
00:03:57,720 --> 00:04:00,120
so let's see the first category of this

82
00:04:00,120 --> 00:04:03,599
function the first one is the this

83
00:04:03,599 --> 00:04:05,760
category is the list of functions that

84
00:04:05,760 --> 00:04:08,060
may that read something from the Dom

85
00:04:08,060 --> 00:04:11,340
let's see a scenario that there is an

86
00:04:11,340 --> 00:04:13,799
extension which makes a modification to

87
00:04:13,799 --> 00:04:17,220
the Dom if the website can call a

88
00:04:17,220 --> 00:04:21,120
function that can get access to this

89
00:04:21,120 --> 00:04:24,380
element the website can observe the

90
00:04:24,380 --> 00:04:27,180
extension fingerprint so

91
00:04:27,180 --> 00:04:29,280
we want to run that function on the

92
00:04:29,280 --> 00:04:31,139
parallel down so what we do is

93
00:04:31,139 --> 00:04:34,259
overriding this function and we change

94
00:04:34,259 --> 00:04:37,259
the receiver of that function so it will

95
00:04:37,259 --> 00:04:40,680
be executed on the parallel down and it

96
00:04:40,680 --> 00:04:42,720
can hide the fingerprint of this

97
00:04:42,720 --> 00:04:44,699
extension

98
00:04:44,699 --> 00:04:47,460
the second category of functions are the

99
00:04:47,460 --> 00:04:49,860
right function those functions that make

100
00:04:49,860 --> 00:04:52,740
a change in the Dom if a website wants

101
00:04:52,740 --> 00:04:58,139
to add a new element to the page or do

102
00:04:58,139 --> 00:05:01,020
modifications like that we have to apply

103
00:05:01,020 --> 00:05:04,440
this modification on both two Doms so

104
00:05:04,440 --> 00:05:07,199
first I execute that function on the

105
00:05:07,199 --> 00:05:08,580
parallel Dom

106
00:05:08,580 --> 00:05:10,860
and then we find the equivalent one on

107
00:05:10,860 --> 00:05:13,919
the user Dom to run the same thing

108
00:05:13,919 --> 00:05:16,620
here as well so we will have the same

109
00:05:16,620 --> 00:05:18,900
modification on both two Doms this was

110
00:05:18,900 --> 00:05:21,780
the second category the next category of

111
00:05:21,780 --> 00:05:23,880
functions are those functions that

112
00:05:23,880 --> 00:05:26,639
cannot be executed on the parallel Dom

113
00:05:26,639 --> 00:05:29,400
for example active element this is a

114
00:05:29,400 --> 00:05:30,919
function that

115
00:05:30,919 --> 00:05:34,020
retains the element that user has

116
00:05:34,020 --> 00:05:36,900
focused on the parallel Norm is out of

117
00:05:36,900 --> 00:05:40,080
focus it is on the background so

118
00:05:40,080 --> 00:05:42,060
we cannot run this function on the

119
00:05:42,060 --> 00:05:45,479
parallel though what we do in our system

120
00:05:45,479 --> 00:05:47,759
is running this function on the user Dom

121
00:05:47,759 --> 00:05:50,639
and then we return the equivalent of

122
00:05:50,639 --> 00:05:51,900
this element

123
00:05:51,900 --> 00:05:54,419
we retain the equivalent of the element

124
00:05:54,419 --> 00:05:58,740
that is active so we prevent

125
00:05:58,740 --> 00:06:01,259
um we hide the fingerprint of extensions

126
00:06:01,259 --> 00:06:02,940
in this way

127
00:06:02,940 --> 00:06:06,180
and the next the last category actually

128
00:06:06,180 --> 00:06:07,340
is

129
00:06:07,340 --> 00:06:10,620
the font is about the functions that

130
00:06:10,620 --> 00:06:13,560
don't return anything or don't change

131
00:06:13,560 --> 00:06:17,100
the for example we have a play function

132
00:06:17,100 --> 00:06:19,500
for video elements so using this

133
00:06:19,500 --> 00:06:21,840
function we can play a video but it

134
00:06:21,840 --> 00:06:23,880
doesn't change the Dom or it doesn't

135
00:06:23,880 --> 00:06:25,979
return anything for these type of

136
00:06:25,979 --> 00:06:27,960
functions we can just run those

137
00:06:27,960 --> 00:06:30,240
functions on the user

138
00:06:30,240 --> 00:06:32,639
so these functions are those functions

139
00:06:32,639 --> 00:06:37,080
that are dumb interacting apis there are

140
00:06:37,080 --> 00:06:39,120
some other functions like there are some

141
00:06:39,120 --> 00:06:41,340
other apis like performance API or

142
00:06:41,340 --> 00:06:43,560
paramevision API they don't have any Dom

143
00:06:43,560 --> 00:06:45,500
interactions we need to

144
00:06:45,500 --> 00:06:49,919
uh Escape we need to ignore those apis

145
00:06:49,919 --> 00:06:53,639
for finding those functions that are Dom

146
00:06:53,639 --> 00:06:56,340
interacting we created a system to

147
00:06:56,340 --> 00:06:58,620
automate the process so

148
00:06:58,620 --> 00:07:01,039
we intercept all

149
00:07:01,039 --> 00:07:05,039
all API calls and we look at the

150
00:07:05,039 --> 00:07:07,319
argument of those functions the receiver

151
00:07:07,319 --> 00:07:09,960
of those function and return values and

152
00:07:09,960 --> 00:07:12,900
if they are something Dom related then

153
00:07:12,900 --> 00:07:15,360
we flag that function as a

154
00:07:15,360 --> 00:07:19,020
Dom interacting API for example this is

155
00:07:19,020 --> 00:07:22,560
the results of our system on CNN.com the

156
00:07:22,560 --> 00:07:25,460
highlighted interfaces are those

157
00:07:25,460 --> 00:07:29,759
interfaces that are Dom interacting so

158
00:07:29,759 --> 00:07:32,639
we need to override these ones and we

159
00:07:32,639 --> 00:07:35,520
can escape the rest

160
00:07:35,520 --> 00:07:39,660
we use our system to analyze the top uh

161
00:07:39,660 --> 00:07:42,360
10 000 websites and we found that there

162
00:07:42,360 --> 00:07:45,720
are more than 1500 functions that we

163
00:07:45,720 --> 00:07:50,120
need to override to create this system

164
00:07:51,180 --> 00:07:54,539
uh for our idea we created a prototype

165
00:07:54,539 --> 00:07:56,880
which is an extension and we call it

166
00:07:56,880 --> 00:08:00,539
simulacro simulacrum starts at the

167
00:08:00,539 --> 00:08:03,479
beginning of a page and it overwrites

168
00:08:03,479 --> 00:08:05,099
all those functions that I mentioned

169
00:08:05,099 --> 00:08:08,419
before after the overriding process

170
00:08:08,419 --> 00:08:12,300
browser starts to parse the HTML code

171
00:08:12,300 --> 00:08:15,960
and generate the Dom so then the Dom

172
00:08:15,960 --> 00:08:18,560
generation was completed

173
00:08:18,560 --> 00:08:21,780
of simulacrum make a copy of the user

174
00:08:21,780 --> 00:08:23,699
dump to generate the parallel now from

175
00:08:23,699 --> 00:08:25,819
this point we can hide

176
00:08:25,819 --> 00:08:29,460
all those extension fingerprints

177
00:08:29,460 --> 00:08:31,740
and now let's see some evaluations of

178
00:08:31,740 --> 00:08:34,159
this work

179
00:08:34,200 --> 00:08:37,679
the first evaluation is about the

180
00:08:37,679 --> 00:08:40,380
effectiveness of this system so we used

181
00:08:40,380 --> 00:08:44,099
carness which was the state of art for

182
00:08:44,099 --> 00:08:48,720
detecting extensions uh based on the Dom

183
00:08:48,720 --> 00:08:51,000
modifications

184
00:08:51,000 --> 00:08:54,660
and by using simulacrum we were able to

185
00:08:54,660 --> 00:08:57,600
protect more than 95 percent of

186
00:08:57,600 --> 00:09:00,180
extensions and most of those extensions

187
00:09:00,180 --> 00:09:02,279
that we cannot protect are those

188
00:09:02,279 --> 00:09:05,640
extensions that make the modifications

189
00:09:05,640 --> 00:09:08,100
before we generate the parallel down so

190
00:09:08,100 --> 00:09:10,740
while the browser is parsing HTML code

191
00:09:10,740 --> 00:09:13,260
to generate a parallel to to generated

192
00:09:13,260 --> 00:09:16,680
Dom they make the modifications so we

193
00:09:16,680 --> 00:09:17,519
cannot

194
00:09:17,519 --> 00:09:21,420
hide those fingerprints

195
00:09:21,420 --> 00:09:24,720
and to evaluate the impact of our

196
00:09:24,720 --> 00:09:28,279
Solution on the user experience

197
00:09:28,279 --> 00:09:32,160
the manually analyzed 50 popular

198
00:09:32,160 --> 00:09:33,899
websites

199
00:09:33,899 --> 00:09:36,300
we decided to analyze the popular

200
00:09:36,300 --> 00:09:38,519
website because they are more

201
00:09:38,519 --> 00:09:40,500
complicated and they are using lots of

202
00:09:40,500 --> 00:09:44,240
different apis and we saw that

203
00:09:44,240 --> 00:09:49,380
there are 12 percent of websites that

204
00:09:49,380 --> 00:09:51,839
have at least one functionality that are

205
00:09:51,839 --> 00:09:55,920
broken and we also saw that our system

206
00:09:55,920 --> 00:10:02,060
has some minor issues for 10 of websites

207
00:10:02,760 --> 00:10:05,459
as a conclusion Dom base fingerprinting

208
00:10:05,459 --> 00:10:09,779
is a a very hard problem

209
00:10:09,779 --> 00:10:13,140
to find a solution for and we introduce

210
00:10:13,140 --> 00:10:16,019
Dom reality shifting idea

211
00:10:16,019 --> 00:10:18,420
to prevent this type of fingerprinting

212
00:10:18,420 --> 00:10:21,839
and we create a parallel down for this

213
00:10:21,839 --> 00:10:23,100
purpose

214
00:10:23,100 --> 00:10:26,640
for this idea we created a prototype and

215
00:10:26,640 --> 00:10:30,300
we saw that it can protect more than 95

216
00:10:30,300 --> 00:10:32,459
percent of extensions that are

217
00:10:32,459 --> 00:10:36,300
fingerprintable by karners and also we

218
00:10:36,300 --> 00:10:39,120
made our system open source and we hope

219
00:10:39,120 --> 00:10:41,580
that this system can be used in other

220
00:10:41,580 --> 00:10:46,200
projects for uh preventing other privacy

221
00:10:46,200 --> 00:10:47,220
issues

222
00:10:47,220 --> 00:10:48,959
thank you so much I would be happy to

223
00:10:48,959 --> 00:10:51,439
answer questions

