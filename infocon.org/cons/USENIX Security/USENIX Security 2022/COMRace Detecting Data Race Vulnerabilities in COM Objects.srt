1
00:00:07,519 --> 00:00:09,960
thank you for coming to my talk my name

2
00:00:09,960 --> 00:00:12,480
is I come from instance of impression

3
00:00:12,480 --> 00:00:14,280
engineering cats this is don't work with

4
00:00:14,280 --> 00:00:16,320
Institute of computing technology cash

5
00:00:16,320 --> 00:00:17,699
and it stands for Technologies

6
00:00:17,699 --> 00:00:19,800
Incorporation today I'm going to talk

7
00:00:19,800 --> 00:00:21,539
about detecting database multiplication

8
00:00:21,539 --> 00:00:23,220
common objects considering time

9
00:00:23,220 --> 00:00:25,619
limitation I will show the general idea

10
00:00:25,619 --> 00:00:27,240
of our research and you can find more

11
00:00:27,240 --> 00:00:30,139
details in our paper

12
00:00:30,240 --> 00:00:31,859
complete his thoughts for component

13
00:00:31,859 --> 00:00:33,360
object model is a binary interface

14
00:00:33,360 --> 00:00:34,680
standard for developing software

15
00:00:34,680 --> 00:00:36,540
components introduced by Microsoft in

16
00:00:36,540 --> 00:00:38,760
1993 with the rapid growth of the

17
00:00:38,760 --> 00:00:41,040
Microsoft ecosystem come becomes a

18
00:00:41,040 --> 00:00:42,660
foundation for many key members of

19
00:00:42,660 --> 00:00:44,340
Technologies come objects are now

20
00:00:44,340 --> 00:00:45,600
readily deployed in development

21
00:00:45,600 --> 00:00:48,180
operating systems user space from office

22
00:00:48,180 --> 00:00:50,340
to ActiveX objects in browsers to

23
00:00:50,340 --> 00:00:52,200
DirectX and the user mode to our

24
00:00:52,200 --> 00:00:54,420
Frameworks common objects are widely

25
00:00:54,420 --> 00:00:57,480
used in and windows from time and system

26
00:00:57,480 --> 00:00:59,460
service components providing service for

27
00:00:59,460 --> 00:01:02,520
user applications at high privileges

28
00:01:02,520 --> 00:01:04,559
come gives the power to activate and

29
00:01:04,559 --> 00:01:06,960
invoke objects measures where predefined

30
00:01:06,960 --> 00:01:08,400
interfaces through camera time and

31
00:01:08,400 --> 00:01:10,320
binary protocol in which breaks the

32
00:01:10,320 --> 00:01:11,640
limitations and the invoke current

33
00:01:11,640 --> 00:01:13,320
service provider need to stay in the

34
00:01:13,320 --> 00:01:14,760
same process

35
00:01:14,760 --> 00:01:16,820
com Prov provides threading features

36
00:01:16,820 --> 00:01:19,200
multi-spreading features that comes from

37
00:01:19,200 --> 00:01:21,119
different clients to the service object

38
00:01:21,119 --> 00:01:22,979
interface methods may run concurrently

39
00:01:22,979 --> 00:01:25,740
come objects use the threading model

40
00:01:25,740 --> 00:01:27,659
named Apartments which is which is a

41
00:01:27,659 --> 00:01:30,060
logical cap solution to specify thread

42
00:01:30,060 --> 00:01:32,340
sharing rules for com objects the left

43
00:01:32,340 --> 00:01:34,560
figure shows the threading mode of its

44
00:01:34,560 --> 00:01:36,000
process boundaries there are three types

45
00:01:36,000 --> 00:01:38,400
of ready most income first is single

46
00:01:38,400 --> 00:01:40,259
service apartment a single thread

47
00:01:40,259 --> 00:01:41,939
Department consists of exactly one

48
00:01:41,939 --> 00:01:44,280
thread the common update in your sta can

49
00:01:44,280 --> 00:01:46,020
receive interface methods of course from

50
00:01:46,020 --> 00:01:48,659
the only threatens and sta second is a

51
00:01:48,659 --> 00:01:49,860
multi-threading Department a

52
00:01:49,860 --> 00:01:51,899
multi-strate department consists of one

53
00:01:51,899 --> 00:01:53,820
or most race just in the top right

54
00:01:53,820 --> 00:01:55,619
corner of the picture shows each client

55
00:01:55,619 --> 00:01:57,360
request will be served with a new

56
00:01:57,360 --> 00:01:59,299
threading the privileged local process

57
00:01:59,299 --> 00:02:02,759
consequently databases May trigger if

58
00:02:02,759 --> 00:02:04,560
the interface methods are not received

59
00:02:04,560 --> 00:02:05,540
this

60
00:02:05,540 --> 00:02:07,740
strategies databases often lead to

61
00:02:07,740 --> 00:02:09,479
memory corruption bugs such as buffer

62
00:02:09,479 --> 00:02:11,459
workflows and the user have phrase the

63
00:02:11,459 --> 00:02:13,440
tankers can easily expose these bugs to

64
00:02:13,440 --> 00:02:15,180
gain excreted privilege or execute

65
00:02:15,180 --> 00:02:17,700
upgrade code third is a new short

66
00:02:17,700 --> 00:02:19,440
strategy Department the neutral strategy

67
00:02:19,440 --> 00:02:21,300
department is introduced for more

68
00:02:21,300 --> 00:02:23,040
efficient course and pattern course

69
00:02:23,040 --> 00:02:25,680
similar to MTA commonplace NTA need to

70
00:02:25,680 --> 00:02:27,720
gravity threat to save by themselves our

71
00:02:27,720 --> 00:02:29,700
research found out an empty and NTA come

72
00:02:29,700 --> 00:02:31,379
up with a prone to database taxes

73
00:02:31,379 --> 00:02:34,140
through our city is not guaranteed

74
00:02:34,140 --> 00:02:35,879
to demonstrate the real world data is

75
00:02:35,879 --> 00:02:37,379
manipulated geolocation combo

76
00:02:37,379 --> 00:02:39,660
objectivity is acting as a system

77
00:02:39,660 --> 00:02:41,400
service object money inside the service

78
00:02:41,400 --> 00:02:43,920
host process the left picture shows the

79
00:02:43,920 --> 00:02:45,780
decompletion code of two interface

80
00:02:45,780 --> 00:02:47,879
methods of the objects the interface

81
00:02:47,879 --> 00:02:49,920
method proxy and the projects introduced

82
00:02:49,920 --> 00:02:51,840
two high impact amount of bases of the

83
00:02:51,840 --> 00:02:54,360
objects as the right figure shows if the

84
00:02:54,360 --> 00:02:56,099
client evokes the message three and six

85
00:02:56,099 --> 00:02:58,620
concurrently since proxy and proxies are

86
00:02:58,620 --> 00:03:00,480
methods of the same object's geolocation

87
00:03:00,480 --> 00:03:03,900
lens 3 of prop 3 and 1120 or proxy

88
00:03:03,900 --> 00:03:06,180
operating system where variable the

89
00:03:06,180 --> 00:03:07,980
former is readout and the letter is

90
00:03:07,980 --> 00:03:10,080
right too in the meantime process

91
00:03:10,080 --> 00:03:13,739
phrases plus 104 Atlanta 18 which result

92
00:03:13,739 --> 00:03:15,659
in a possible use after free Mobility

93
00:03:15,659 --> 00:03:17,940
when invoking proxy and proxy

94
00:03:17,940 --> 00:03:20,459
concurrently similar things happen when

95
00:03:20,459 --> 00:03:23,819
clients invoke6 alone if one free

96
00:03:23,819 --> 00:03:25,739
operation at line 18 happens before

97
00:03:25,739 --> 00:03:27,780
another free operation

98
00:03:27,780 --> 00:03:29,879
here another service writer double frame

99
00:03:29,879 --> 00:03:32,400
will happen the two success those lead

100
00:03:32,400 --> 00:03:34,440
to privilege as stage in this scenario

101
00:03:34,440 --> 00:03:37,800
in order to effectively detect deterrous

102
00:03:37,800 --> 00:03:39,659
problems in the large size of companies

103
00:03:39,659 --> 00:03:41,819
in the underlying system will propose a

104
00:03:41,819 --> 00:03:44,580
static solution in the comrades comrade

105
00:03:44,580 --> 00:03:46,620
solves the problem in four steps extract

106
00:03:46,620 --> 00:03:48,299
come objects uncover interface

107
00:03:48,299 --> 00:03:50,819
information identify unsafe methods and

108
00:03:50,819 --> 00:03:53,580
the synthesize PLC exploits firstly we

109
00:03:53,580 --> 00:03:55,200
extract some of this information show

110
00:03:55,200 --> 00:03:56,940
them locally which is the basic step of

111
00:03:56,940 --> 00:03:59,580
the solution com object strategies tie

112
00:03:59,580 --> 00:04:01,140
themselves under the Windows registry

113
00:04:01,140 --> 00:04:04,440
pass HQ classes Roots class ID with a

114
00:04:04,440 --> 00:04:07,019
unique CRS ID so we can extract the

115
00:04:07,019 --> 00:04:08,519
information needed from the registry

116
00:04:08,519 --> 00:04:11,400
cameras extreme extract come class

117
00:04:11,400 --> 00:04:12,959
information including basic information

118
00:04:12,959 --> 00:04:15,840
then it transfers information and

119
00:04:15,840 --> 00:04:17,760
service information after this step

120
00:04:17,760 --> 00:04:20,779
Congress gets registered com

121
00:04:20,779 --> 00:04:24,300
comes class name thread model location

122
00:04:24,300 --> 00:04:26,820
service permissions and so on

123
00:04:26,820 --> 00:04:29,100
after extracting the information of car

124
00:04:29,100 --> 00:04:31,440
objects we dig into the com objects in

125
00:04:31,440 --> 00:04:33,360
implementation binary to uncover

126
00:04:33,360 --> 00:04:35,880
interface implementation

127
00:04:35,880 --> 00:04:38,360
com exposes interface

128
00:04:38,360 --> 00:04:40,979
implemented in its corresponding binary

129
00:04:40,979 --> 00:04:43,979
file the events in the implementation of

130
00:04:43,979 --> 00:04:46,500
an interface method has exactly the same

131
00:04:46,500 --> 00:04:48,120
type signature as the interface

132
00:04:48,120 --> 00:04:50,340
declaration firstly Commerce need to

133
00:04:50,340 --> 00:04:51,780
retrieve the interface definition from

134
00:04:51,780 --> 00:04:54,120
pattern files this process is completed

135
00:04:54,120 --> 00:04:56,340
with the help of oie built on X the

136
00:04:56,340 --> 00:04:58,139
decompiled geolocation interface is

137
00:04:58,139 --> 00:04:59,759
shown as the right

138
00:04:59,759 --> 00:05:02,699
picture secondly in order to locate the

139
00:05:02,699 --> 00:05:04,320
right implementation of the comma object

140
00:05:04,320 --> 00:05:05,940
we need to reconstruct variable

141
00:05:05,940 --> 00:05:08,160
information from the binary the vtable

142
00:05:08,160 --> 00:05:10,979
reconstruct procedure relies on three of

143
00:05:10,979 --> 00:05:12,840
key observations of the windows pen

144
00:05:12,840 --> 00:05:15,840
arrays we use observations and heuristic

145
00:05:15,840 --> 00:05:17,400
rules for guiding the table cluster

146
00:05:17,400 --> 00:05:19,620
reconstruction procedure after

147
00:05:19,620 --> 00:05:21,600
uncovering the vegetables and interface

148
00:05:21,600 --> 00:05:23,220
declarations we try to find the

149
00:05:23,220 --> 00:05:25,020
variables and implements or declare the

150
00:05:25,020 --> 00:05:26,280
interface methods this can be

151
00:05:26,280 --> 00:05:28,199
challenging since we lost method names

152
00:05:28,199 --> 00:05:29,699
and user-defense structure information

153
00:05:29,699 --> 00:05:32,100
for every visible candidate we firstly

154
00:05:32,100 --> 00:05:34,440
examine the parameter type and interface

155
00:05:34,440 --> 00:05:37,100
layout consistently after which

156
00:05:37,100 --> 00:05:39,120
candidate listed shrink to those

157
00:05:39,120 --> 00:05:41,520
interface as enhances relationships with

158
00:05:41,520 --> 00:05:44,160
the interface enhance check to select

159
00:05:44,160 --> 00:05:45,660
the corresponding variable which

160
00:05:45,660 --> 00:05:48,300
indicates the corresponding interface

161
00:05:48,300 --> 00:05:50,280
implementation

162
00:05:50,280 --> 00:05:51,900
now we have the corresponding

163
00:05:51,900 --> 00:05:54,720
implementation of each interface methods

164
00:05:54,720 --> 00:05:58,020
we can identify unsafe methods interface

165
00:05:58,020 --> 00:06:01,080
method is regarded as unsafe if it can

166
00:06:01,080 --> 00:06:02,639
access member Fields without its

167
00:06:02,639 --> 00:06:04,139
synchronization

168
00:06:04,139 --> 00:06:06,300
hence we examine every instruction in an

169
00:06:06,300 --> 00:06:08,400
interface method as well as its quality

170
00:06:08,400 --> 00:06:10,380
methods to check whether there exists an

171
00:06:10,380 --> 00:06:12,479
unguarded field access or nodes this is

172
00:06:12,479 --> 00:06:14,400
related by chunking the usage of this

173
00:06:14,400 --> 00:06:16,380
pointer since all member fields are

174
00:06:16,380 --> 00:06:18,180
accessed where this pointer with the

175
00:06:18,180 --> 00:06:20,400
constant offsides this module reports

176
00:06:20,400 --> 00:06:22,199
all unsafe methods the unguarded field

177
00:06:22,199 --> 00:06:24,319
offsets with six steps

178
00:06:24,319 --> 00:06:25,940
beautifies

179
00:06:25,940 --> 00:06:29,039
rights red free and free services an

180
00:06:29,039 --> 00:06:31,139
example of the analyzer field usage and

181
00:06:31,139 --> 00:06:34,259
the field tabs for interface method of

182
00:06:34,259 --> 00:06:35,940
geolocation is shown as the right

183
00:06:35,940 --> 00:06:36,780
picture

184
00:06:36,780 --> 00:06:39,120
the most important part of our algorithm

185
00:06:39,120 --> 00:06:41,280
is processing virtual method invocations

186
00:06:41,280 --> 00:06:43,800
we apply the top propagation method and

187
00:06:43,800 --> 00:06:46,740
track field usage to resolve a virtual

188
00:06:46,740 --> 00:06:49,620
core Target given the type of field and

189
00:06:49,620 --> 00:06:52,139
then we conducted case analysis for each

190
00:06:52,139 --> 00:06:55,860
instruction we Define a sync variable to

191
00:06:55,860 --> 00:06:57,180
count the number of synchronization

192
00:06:57,180 --> 00:06:59,220
operations to check if local and unlock

193
00:06:59,220 --> 00:07:01,440
operations are balanced we also apply

194
00:07:01,440 --> 00:07:03,180
the list of predefined free and

195
00:07:03,180 --> 00:07:04,800
synchronization accounts to train the

196
00:07:04,800 --> 00:07:07,560
sensitive 300 block unlock operations

197
00:07:07,560 --> 00:07:09,539
for more detailed space refer to our

198
00:07:09,539 --> 00:07:11,580
people

199
00:07:11,580 --> 00:07:13,620
in order to verify the output of

200
00:07:13,620 --> 00:07:16,139
identified unsafe methods Commerce opens

201
00:07:16,139 --> 00:07:18,240
a model to try to synthesize POC Express

202
00:07:18,240 --> 00:07:19,740
automatically

203
00:07:19,740 --> 00:07:22,319
the fuel system size are used on a

204
00:07:22,319 --> 00:07:24,720
predefined QC skeleton program this is

205
00:07:24,720 --> 00:07:26,580
because the POC programs share a

206
00:07:26,580 --> 00:07:29,160
similarity to a certain extent a manual

207
00:07:29,160 --> 00:07:32,639
program for the example cve is shown at

208
00:07:32,639 --> 00:07:34,919
the red picture the QC skeleton program

209
00:07:34,919 --> 00:07:37,139
uses three different generated hydrophil

210
00:07:37,139 --> 00:07:38,460
to complete the variable different

211
00:07:38,460 --> 00:07:41,940
definition part as the first Red Cube

212
00:07:41,940 --> 00:07:44,280
now the key problem is now how to

213
00:07:44,280 --> 00:07:45,300
prepare

214
00:07:45,300 --> 00:07:47,099
parameter values for the interface

215
00:07:47,099 --> 00:07:49,380
method for primitive values we set

216
00:07:49,380 --> 00:07:51,180
random chosen initial value for

217
00:07:51,180 --> 00:07:53,160
interface type the value which reverse

218
00:07:53,160 --> 00:07:55,440
interface dependency graph to generate a

219
00:07:55,440 --> 00:07:57,180
sequence or method of course to get the

220
00:07:57,180 --> 00:07:59,699
interface type argument instance then

221
00:07:59,699 --> 00:08:02,460
after the PLC program compiled the John

222
00:08:02,460 --> 00:08:04,380
PLC program concurrently with speech

223
00:08:04,380 --> 00:08:06,240
will be enabled and collect the runtime

224
00:08:06,240 --> 00:08:07,800
information

225
00:08:07,800 --> 00:08:10,139
evaluation wave value is the

226
00:08:10,139 --> 00:08:11,940
effectiveness of Commerce on Windows

227
00:08:11,940 --> 00:08:13,740
operating systems and the reactor system

228
00:08:13,740 --> 00:08:16,139
another design several experiments to

229
00:08:16,139 --> 00:08:18,120
answer the following questions first of

230
00:08:18,120 --> 00:08:20,520
all how effective can Congress analyze

231
00:08:20,520 --> 00:08:22,319
commercial off the shelf combinaries

232
00:08:22,319 --> 00:08:24,960
question two how effective can Commerce

233
00:08:24,960 --> 00:08:27,180
detect unsafe interface methods income

234
00:08:27,180 --> 00:08:30,300
binaries and are they product on the

235
00:08:30,300 --> 00:08:32,700
Windows platform accessory how dangerous

236
00:08:32,700 --> 00:08:35,520
are those database bugs and candidate

237
00:08:35,520 --> 00:08:38,099
for severe damages question 4 whole

238
00:08:38,099 --> 00:08:40,559
process is conversing detecting unsafe

239
00:08:40,559 --> 00:08:42,179
interface methods

240
00:08:42,179 --> 00:08:44,820
for the first question how effective can

241
00:08:44,820 --> 00:08:46,380
companies analyze commercial official

242
00:08:46,380 --> 00:08:49,140
boundaries among the total combo objects

243
00:08:49,140 --> 00:08:51,600
on Windows of term platform commonly

244
00:08:51,600 --> 00:08:55,320
successfully analyze 10420 of them is a

245
00:08:55,320 --> 00:08:59,959
success rate of 92.1 percent

246
00:09:00,420 --> 00:09:02,820
more than 80 000 of the analyzed come up

247
00:09:02,820 --> 00:09:06,320
with support MTA or MTA threading model

248
00:09:06,320 --> 00:09:09,000
463 among them are cross-process com

249
00:09:09,000 --> 00:09:10,800
objects which are prone to database

250
00:09:10,800 --> 00:09:13,140
attacks each comp class consists of

251
00:09:13,140 --> 00:09:15,420
eight member fields on average

252
00:09:15,420 --> 00:09:19,680
question two for question two uh how

253
00:09:19,680 --> 00:09:21,540
effective can Commerce detect unsafe

254
00:09:21,540 --> 00:09:23,580
interface methods and combinaries and

255
00:09:23,580 --> 00:09:25,920
are different on the Windows platform

256
00:09:25,920 --> 00:09:29,700
as far experimental results 62 percent

257
00:09:29,700 --> 00:09:31,740
of the valid QC programs can trigger

258
00:09:31,740 --> 00:09:33,959
memory question marks unsafe methods and

259
00:09:33,959 --> 00:09:37,519
unsafe compound objects are privileged

260
00:09:37,519 --> 00:09:40,800
18.4 percent of total methods and 38

261
00:09:40,800 --> 00:09:42,720
percent of

262
00:09:42,720 --> 00:09:45,240
total objects testing widely existing

263
00:09:45,240 --> 00:09:47,279
database box other experiment

264
00:09:47,279 --> 00:09:49,380
demonstrates that those unsafe methods

265
00:09:49,380 --> 00:09:50,940
are highly possible to trigger runtime

266
00:09:50,940 --> 00:09:53,100
bugs and some can result in serious

267
00:09:53,100 --> 00:09:56,220
security violations

268
00:09:56,220 --> 00:09:58,500
question three whole Dentures are those

269
00:09:58,500 --> 00:10:00,899
data respects and can see core severe

270
00:10:00,899 --> 00:10:03,480
damages all the 26 confirmed normal

271
00:10:03,480 --> 00:10:05,220
abilities can lead to privileged

272
00:10:05,220 --> 00:10:07,680
explanation so these three of them can

273
00:10:07,680 --> 00:10:09,959
be exploited to escape the sandbox

274
00:10:09,959 --> 00:10:12,480
security boundary imposed by the Windows

275
00:10:12,480 --> 00:10:14,820
application container more importantly

276
00:10:14,820 --> 00:10:18,480
in 20 vulnerabilities the sandbox the

277
00:10:18,480 --> 00:10:21,200
sandbox the privilege can be expected to

278
00:10:21,200 --> 00:10:23,760
anti-authority system this dress and

279
00:10:23,760 --> 00:10:26,339
attacker can be on limited privileges

280
00:10:26,339 --> 00:10:28,800
from those Security Experts posing

281
00:10:28,800 --> 00:10:31,260
serious security threats

282
00:10:31,260 --> 00:10:33,839
question four how process is comprising

283
00:10:33,839 --> 00:10:36,360
detecting unsafe interface methods we

284
00:10:36,360 --> 00:10:38,519
evaluates the Precision of companies on

285
00:10:38,519 --> 00:10:40,440
the open source reactor OS platform

286
00:10:40,440 --> 00:10:42,480
results show that companies can

287
00:10:42,480 --> 00:10:46,019
successfully extract or 147 MTA com

288
00:10:46,019 --> 00:10:48,380
objects Auto

289
00:10:48,380 --> 00:10:52,380
434 total com objects from 100 and

290
00:10:52,380 --> 00:10:54,920
binary fields and recover

291
00:10:54,920 --> 00:10:59,220
152 also 10072 interfaces the field to

292
00:10:59,220 --> 00:11:01,320
recover 20 interfaces because cameras

293
00:11:01,320 --> 00:11:02,700
cannot allocate the battery file

294
00:11:02,700 --> 00:11:05,160
implementing those interfaces associated

295
00:11:05,160 --> 00:11:07,560
with the ideal source files manual

296
00:11:07,560 --> 00:11:09,480
inspection indicates that they may not

297
00:11:09,480 --> 00:11:12,600
public accessible Commerce reports 19

298
00:11:12,600 --> 00:11:16,560
unsafe objects with 51 unsafe interface

299
00:11:16,560 --> 00:11:19,260
methods these are 16 Force positives

300
00:11:19,260 --> 00:11:22,160
with a positive rate of 31.4 percent

301
00:11:22,160 --> 00:11:25,079
conclusion a present come with the first

302
00:11:25,079 --> 00:11:27,120
database manipulated detection tool for

303
00:11:27,120 --> 00:11:28,980
com objects the solution applies

304
00:11:28,980 --> 00:11:31,440
standing binary assets to detect unsafe

305
00:11:31,440 --> 00:11:33,660
method or from the officer shell

306
00:11:33,660 --> 00:11:35,640
boundaries then very fast static analy

307
00:11:35,640 --> 00:11:37,160
results with seasonality process

308
00:11:37,160 --> 00:11:39,540
experiments shows an unsafe methods and

309
00:11:39,540 --> 00:11:41,160
unsafe Commodities are prevalented on

310
00:11:41,160 --> 00:11:44,000
Windows cameras automatic license has

311
00:11:44,000 --> 00:11:47,660
234 pulses for from 82 unsafe methods

312
00:11:47,660 --> 00:11:50,279
145 uses lead to critical economic

313
00:11:50,279 --> 00:11:54,120
options it's posing 26 Series this is

314
00:11:54,120 --> 00:11:55,680
for my talking thanks for listening

315
00:11:55,680 --> 00:11:58,760
questions are welcome

