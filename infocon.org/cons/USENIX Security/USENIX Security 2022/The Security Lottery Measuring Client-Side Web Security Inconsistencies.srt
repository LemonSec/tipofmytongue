1
00:00:09,440 --> 00:00:13,500
yeah thanks Manuel for the kind

2
00:00:13,500 --> 00:00:16,859
introduction and I'm very happy to be on

3
00:00:16,859 --> 00:00:18,600
stage again after all those virtual

4
00:00:18,600 --> 00:00:21,600
conferences in the last years and even

5
00:00:21,600 --> 00:00:23,880
happier to see so many people in here

6
00:00:23,880 --> 00:00:26,580
interested in our measurement on

7
00:00:26,580 --> 00:00:28,260
client-side web security and

8
00:00:28,260 --> 00:00:30,000
consistencies

9
00:00:30,000 --> 00:00:31,380
so

10
00:00:31,380 --> 00:00:33,480
I guess given that this is the web track

11
00:00:33,480 --> 00:00:38,360
we all know what the web is for right

12
00:00:38,460 --> 00:00:41,879
exactly cat pictures and due to the

13
00:00:41,879 --> 00:00:44,579
importance of cat pictures in our modern

14
00:00:44,579 --> 00:00:46,020
society

15
00:00:46,020 --> 00:00:48,420
they are threatened by a plethora of

16
00:00:48,420 --> 00:00:50,960
different attacks such as click checking

17
00:00:50,960 --> 00:00:53,760
request forgery attacks cross-head

18
00:00:53,760 --> 00:00:57,840
scripting or network based attacks

19
00:00:57,840 --> 00:01:01,680
luckily a website operator can defend a

20
00:01:01,680 --> 00:01:05,400
cat picture against those attacks by

21
00:01:05,400 --> 00:01:07,439
configuring response headers that enable

22
00:01:07,439 --> 00:01:11,419
defense mechanisms in the browser

23
00:01:11,760 --> 00:01:13,380
oh sorry

24
00:01:13,380 --> 00:01:16,260
we want all

25
00:01:16,260 --> 00:01:18,420
CAD lovers to get consistent protection

26
00:01:18,420 --> 00:01:21,299
here right but we asked ourselves do

27
00:01:21,299 --> 00:01:26,400
they all get do all cats have consistent

28
00:01:26,400 --> 00:01:29,400
protection

29
00:01:29,820 --> 00:01:32,280
but before deep diving into what we have

30
00:01:32,280 --> 00:01:35,640
actually done let's first clarify what

31
00:01:35,640 --> 00:01:38,340
we Define as consistent or inconsistent

32
00:01:38,340 --> 00:01:40,920
security response

33
00:01:40,920 --> 00:01:43,140
if you get a response with similar

34
00:01:43,140 --> 00:01:45,420
content but different security headers

35
00:01:45,420 --> 00:01:48,299
or security headers that offer different

36
00:01:48,299 --> 00:01:50,479
levels of security

37
00:01:50,479 --> 00:01:53,460
we have an inconsistent Behavior

38
00:01:53,460 --> 00:01:55,500
at the same time if we would have

39
00:01:55,500 --> 00:01:57,360
similar content with the same security

40
00:01:57,360 --> 00:02:00,780
level we would be consistent here

41
00:02:00,780 --> 00:02:03,240
however if the content differs

42
00:02:03,240 --> 00:02:06,119
for example because of an error page we

43
00:02:06,119 --> 00:02:08,160
should not draw incorrect conclusions

44
00:02:08,160 --> 00:02:11,340
about inconsistency here

45
00:02:11,340 --> 00:02:14,340
so now that we all know what an

46
00:02:14,340 --> 00:02:16,620
inconsistent security is

47
00:02:16,620 --> 00:02:18,840
let's talk about what we have actually

48
00:02:18,840 --> 00:02:21,180
done to measure the prevalence of

49
00:02:21,180 --> 00:02:23,160
client-side web security and

50
00:02:23,160 --> 00:02:24,540
consistencies

51
00:02:24,540 --> 00:02:28,040
first we defined several tests such as

52
00:02:28,040 --> 00:02:32,220
user agents VPN servers different tour

53
00:02:32,220 --> 00:02:34,620
endnodes and also different system

54
00:02:34,620 --> 00:02:38,280
language settings that we can test

55
00:02:38,280 --> 00:02:40,920
for every of those tests or test

56
00:02:40,920 --> 00:02:44,700
configurations we visited a domain page

57
00:02:44,700 --> 00:02:48,420
of each of the top 10K most visitors

58
00:02:48,420 --> 00:02:49,980
websites

59
00:02:49,980 --> 00:02:53,099
and notably we have done each of that

60
00:02:53,099 --> 00:02:55,379
test visits five times

61
00:02:55,379 --> 00:02:59,160
and based on the data that we gathered

62
00:02:59,160 --> 00:03:01,620
we distinguish now two kinds of

63
00:03:01,620 --> 00:03:04,500
inconsistencies so with this five

64
00:03:04,500 --> 00:03:07,980
requests that we have performed we can

65
00:03:07,980 --> 00:03:10,319
actually measure what we call intra test

66
00:03:10,319 --> 00:03:12,060
inconsistency

67
00:03:12,060 --> 00:03:14,459
in this case we get for example five

68
00:03:14,459 --> 00:03:16,920
different levels of security on the Tor

69
00:03:16,920 --> 00:03:20,400
us end node where three of them were

70
00:03:20,400 --> 00:03:23,900
secure but the other two not

71
00:03:24,599 --> 00:03:27,840
those seemingly random responses then

72
00:03:27,840 --> 00:03:30,180
play into the hands of opportunistic

73
00:03:30,180 --> 00:03:33,360
attackers that can just perform their

74
00:03:33,360 --> 00:03:36,959
attack until well until it succeeds

75
00:03:36,959 --> 00:03:40,940
and the other

76
00:03:40,980 --> 00:03:44,099
the other case that we have analyzed is

77
00:03:44,099 --> 00:03:46,260
intertest inconsistencies where we

78
00:03:46,260 --> 00:03:48,480
basically compared the results between

79
00:03:48,480 --> 00:03:52,200
the test cases so we have an inter test

80
00:03:52,200 --> 00:03:54,959
and consistency if one browser got

81
00:03:54,959 --> 00:03:57,480
proper security headers but the other

82
00:03:57,480 --> 00:03:59,519
problems are not

83
00:03:59,519 --> 00:04:03,120
so note that we are now know that we are

84
00:04:03,120 --> 00:04:06,000
all up to date what we have done let's

85
00:04:06,000 --> 00:04:09,180
take a look into our results

86
00:04:09,180 --> 00:04:11,580
we detected 37 inter-test

87
00:04:11,580 --> 00:04:13,980
inconsistencies for the xram options

88
00:04:13,980 --> 00:04:15,299
header

89
00:04:15,299 --> 00:04:18,839
in seven cases uh this occurred due to

90
00:04:18,839 --> 00:04:21,540
specific operating systems or browsers

91
00:04:21,540 --> 00:04:24,540
are getting different configurations

92
00:04:24,540 --> 00:04:28,199
some sites deploy xfo for desktop

93
00:04:28,199 --> 00:04:30,919
clients but not for mobile clients

94
00:04:30,919 --> 00:04:34,259
others have discriminated specific

95
00:04:34,259 --> 00:04:38,100
browsers for example not giving any xfo

96
00:04:38,100 --> 00:04:40,680
header to Opera clients While others

97
00:04:40,680 --> 00:04:42,960
excluded Firefox

98
00:04:42,960 --> 00:04:45,660
this Behavior was also present against

99
00:04:45,660 --> 00:04:48,540
specific operating systems for example

100
00:04:48,540 --> 00:04:51,300
we had a site that only gave xfo to

101
00:04:51,300 --> 00:04:54,120
non-ios clients

102
00:04:54,120 --> 00:04:57,360
in addition to that we had 13 sites for

103
00:04:57,360 --> 00:05:02,400
onion and 29 sites for VPN that decided

104
00:05:02,400 --> 00:05:05,460
to exclude specific geolocations from

105
00:05:05,460 --> 00:05:07,139
the protection against framing based

106
00:05:07,139 --> 00:05:08,580
attacks

107
00:05:08,580 --> 00:05:11,639
so as you can see the geolocation based

108
00:05:11,639 --> 00:05:15,740
inconsistencies are dominating here

109
00:05:15,900 --> 00:05:18,720
for HTTP strict Transport Security we

110
00:05:18,720 --> 00:05:22,620
detected 35 intertestine consistencies

111
00:05:22,620 --> 00:05:24,780
there are eight websites that handle

112
00:05:24,780 --> 00:05:26,820
browser differently for example we had

113
00:05:26,820 --> 00:05:30,300
one site that only gives enabled hsts to

114
00:05:30,300 --> 00:05:31,860
desktop clients but not to mobile

115
00:05:31,860 --> 00:05:34,680
clients which exposes parts of the

116
00:05:34,680 --> 00:05:37,080
website's user base to possible Network

117
00:05:37,080 --> 00:05:39,479
attacks

118
00:05:39,479 --> 00:05:42,720
in addition to that we had 30 sites

119
00:05:42,720 --> 00:05:46,080
deploying hsts inconsistently depending

120
00:05:46,080 --> 00:05:49,220
on the geolocation for example let's say

121
00:05:49,220 --> 00:05:53,460
deployed proper hsts header for every

122
00:05:53,460 --> 00:05:56,460
country except for clients that are

123
00:05:56,460 --> 00:05:59,639
requesting the page from India

124
00:05:59,639 --> 00:06:03,660
also again here we have more geolocation

125
00:06:03,660 --> 00:06:07,139
based inconsistencies than client based

126
00:06:07,139 --> 00:06:08,460
for cookies

127
00:06:08,460 --> 00:06:11,400
or for cookie security attributes we

128
00:06:11,400 --> 00:06:14,039
suddenly detected way more user agent

129
00:06:14,039 --> 00:06:16,139
based inconsistencies

130
00:06:16,139 --> 00:06:19,979
in fact we detected 167 sites with

131
00:06:19,979 --> 00:06:22,080
inconsistent Behavior here

132
00:06:22,080 --> 00:06:24,900
however the vast majority of those sites

133
00:06:24,900 --> 00:06:27,000
144

134
00:06:27,000 --> 00:06:29,639
are those that deterministically gave

135
00:06:29,639 --> 00:06:32,580
back cookies without the secure

136
00:06:32,580 --> 00:06:36,060
attribute to some user agents

137
00:06:36,060 --> 00:06:39,479
notably the cause of most of those

138
00:06:39,479 --> 00:06:44,340
inconsistencies is in 130 cases the

139
00:06:44,340 --> 00:06:46,380
special handling for the user agent for

140
00:06:46,380 --> 00:06:48,180
Firefox on iOS

141
00:06:48,180 --> 00:06:50,940
leaving all of those clients unprotected

142
00:06:50,940 --> 00:06:51,860
against

143
00:06:51,860 --> 00:06:55,380
network-based attacks on cookies

144
00:06:55,380 --> 00:06:59,100
also sites inconsistently deployed HTTP

145
00:06:59,100 --> 00:07:01,259
only cookies for the for their clients

146
00:07:01,259 --> 00:07:04,199
for example one side gave out HTTP only

147
00:07:04,199 --> 00:07:07,740
cookies to only to non-safari-based

148
00:07:07,740 --> 00:07:10,919
clients so an attacker can steal or

149
00:07:10,919 --> 00:07:13,440
manipulate cookies via for example a

150
00:07:13,440 --> 00:07:16,380
Crosshair scripting attack here

151
00:07:16,380 --> 00:07:20,460
for inconsistencies of the same side

152
00:07:20,460 --> 00:07:24,660
attribute we found 14 cases where sites

153
00:07:24,660 --> 00:07:27,660
either send cookies with the same side

154
00:07:27,660 --> 00:07:29,759
attribute or not

155
00:07:29,759 --> 00:07:33,060
uh one side for example only gave our

156
00:07:33,060 --> 00:07:35,280
proper same side cookies if they accept

157
00:07:35,280 --> 00:07:37,800
language header header so the system

158
00:07:37,800 --> 00:07:40,380
language was set to a non-english

159
00:07:40,380 --> 00:07:42,680
language

160
00:07:42,960 --> 00:07:45,660
still we also detected many geolocation

161
00:07:45,660 --> 00:07:49,020
based inconsistencies here which I will

162
00:07:49,020 --> 00:07:54,020
jump to over due to time reasons

163
00:07:54,020 --> 00:07:57,300
for inter-test inconsistencies in the

164
00:07:57,300 --> 00:08:00,360
content security policy we detected 47

165
00:08:00,360 --> 00:08:03,360
doing some Shenanigans with their

166
00:08:03,360 --> 00:08:06,380
security configurations

167
00:08:06,380 --> 00:08:09,180
croset scripting mitigation as original

168
00:08:09,180 --> 00:08:12,020
use case of CSP faced in the test

169
00:08:12,020 --> 00:08:14,880
inconsistencies in 10 cases

170
00:08:14,880 --> 00:08:18,780
many of those dropped strict dynamic or

171
00:08:18,780 --> 00:08:23,039
even the entire CSP for or the path that

172
00:08:23,039 --> 00:08:24,660
is responsible for cross-site scripting

173
00:08:24,660 --> 00:08:25,800
mitigation

174
00:08:25,800 --> 00:08:28,139
if a zafari client is requesting the

175
00:08:28,139 --> 00:08:30,060
page

176
00:08:30,060 --> 00:08:33,179
but we also had sites that discriminate

177
00:08:33,179 --> 00:08:36,958
Android users or that deployed xss

178
00:08:36,958 --> 00:08:39,659
mitigation to only to some countries

179
00:08:39,659 --> 00:08:42,240
like Spain Russia or Sweden but did not

180
00:08:42,240 --> 00:08:45,180
deploy it for others like South Africa

181
00:08:45,180 --> 00:08:49,040
the U.S or Pakistan

182
00:08:49,620 --> 00:08:52,320
for framing control and TLS enforcement

183
00:08:52,320 --> 00:08:55,260
the geolocation based inconsistencies

184
00:08:55,260 --> 00:08:59,339
are dominating again but we have also

185
00:08:59,339 --> 00:09:02,519
seen sites that do not send a CSP

186
00:09:02,519 --> 00:09:06,060
controlling from controlling framing via

187
00:09:06,060 --> 00:09:08,940
frame ancestors to all iOS clients

188
00:09:08,940 --> 00:09:10,560
leaving those clients then again

189
00:09:10,560 --> 00:09:12,600
unprotected against framing based

190
00:09:12,600 --> 00:09:15,019
attacks

191
00:09:15,180 --> 00:09:17,640
now let's take a look on to the results

192
00:09:17,640 --> 00:09:22,140
for intra testing consistencies and due

193
00:09:22,140 --> 00:09:24,600
to the seemingly random nature of this

194
00:09:24,600 --> 00:09:27,360
type of inconsistency I only show you

195
00:09:27,360 --> 00:09:29,640
the numbers here for each of the

196
00:09:29,640 --> 00:09:32,220
mechanisms because attributing them to a

197
00:09:32,220 --> 00:09:34,860
specific Factor might be just a

198
00:09:34,860 --> 00:09:36,540
coincidence

199
00:09:36,540 --> 00:09:40,500
so we had 36 sites that randomly

200
00:09:40,500 --> 00:09:43,260
responded with different CSP security

201
00:09:43,260 --> 00:09:46,980
levels 50 sites with random x-frame

202
00:09:46,980 --> 00:09:48,720
options headers

203
00:09:48,720 --> 00:09:51,300
16 with different security cookie

204
00:09:51,300 --> 00:09:56,160
security attributes and 38 for hsts

205
00:09:56,160 --> 00:09:59,640
in either case here an attacker can in

206
00:09:59,640 --> 00:10:01,500
case of random protection just

207
00:10:01,500 --> 00:10:04,080
opportunistically performance attack

208
00:10:04,080 --> 00:10:05,459
until

209
00:10:05,459 --> 00:10:07,920
the attack succeeds

210
00:10:07,920 --> 00:10:11,399
a special case here however is hsts

211
00:10:11,399 --> 00:10:12,660
preload

212
00:10:12,660 --> 00:10:13,940
because

213
00:10:13,940 --> 00:10:17,459
if hsts is enabled you can not only add

214
00:10:17,459 --> 00:10:19,380
your site to the preload list but you

215
00:10:19,380 --> 00:10:21,240
can also remove it

216
00:10:21,240 --> 00:10:23,580
and on submitting a URL to the

217
00:10:23,580 --> 00:10:27,019
corresponding form the preload list bot

218
00:10:27,019 --> 00:10:31,140
checks if the targeted URL have set a

219
00:10:31,140 --> 00:10:34,080
proper hsts header without the preload

220
00:10:34,080 --> 00:10:36,180
keyword and

221
00:10:36,180 --> 00:10:38,700
if this keyword is randomly missing as

222
00:10:38,700 --> 00:10:41,040
it happens for 10 sites

223
00:10:41,040 --> 00:10:43,519
you can an attacker could

224
00:10:43,519 --> 00:10:47,339
issue the removal from the list until it

225
00:10:47,339 --> 00:10:49,700
succeeds and

226
00:10:49,700 --> 00:10:52,860
the preload list even gives you feedback

227
00:10:52,860 --> 00:10:56,100
whether you are eligible for removal

228
00:10:56,100 --> 00:10:59,100
and well if then the bot hits a case

229
00:10:59,100 --> 00:11:02,700
where it is not present the it is the

230
00:11:02,700 --> 00:11:04,560
vulnerable side is permanently removed

231
00:11:04,560 --> 00:11:06,839
without notifying the site's operator

232
00:11:06,839 --> 00:11:09,660
about it

233
00:11:09,660 --> 00:11:11,940
after seeing all those numbers we of

234
00:11:11,940 --> 00:11:14,279
course notified the affected parties

235
00:11:14,279 --> 00:11:16,920
about the issue

236
00:11:16,920 --> 00:11:17,579
um

237
00:11:17,579 --> 00:11:20,220
at the same time we also asked them

238
00:11:20,220 --> 00:11:22,560
if they want to tell us what caused the

239
00:11:22,560 --> 00:11:23,880
inconsistency

240
00:11:23,880 --> 00:11:25,800
and based on the responses that we got

241
00:11:25,800 --> 00:11:28,800
here but also by analyzing caching

242
00:11:28,800 --> 00:11:31,079
headers and IP addresses we try to

243
00:11:31,079 --> 00:11:33,060
elaborate reasons for the different

244
00:11:33,060 --> 00:11:34,440
inconsistencies

245
00:11:34,440 --> 00:11:37,519
so due to time reasons I

246
00:11:37,519 --> 00:11:40,500
only mention a few of them so don't

247
00:11:40,500 --> 00:11:42,839
forget to read the paper the intra test

248
00:11:42,839 --> 00:11:44,820
inconsistencies might for example be

249
00:11:44,820 --> 00:11:46,920
caused by a misconfigured origin headers

250
00:11:46,920 --> 00:11:49,740
behind a load balancer or due to caching

251
00:11:49,740 --> 00:11:52,440
issues while the intertestine

252
00:11:52,440 --> 00:11:55,200
consistencies might be mostly because of

253
00:11:55,200 --> 00:11:57,480
faulty user agent parsing user agent

254
00:11:57,480 --> 00:11:58,440
traps

255
00:11:58,440 --> 00:11:59,340
but

256
00:11:59,340 --> 00:12:00,480
[Music]

257
00:12:00,480 --> 00:12:03,480
those user agent traps however

258
00:12:03,480 --> 00:12:07,260
are actually not necessary because most

259
00:12:07,260 --> 00:12:09,959
of the mechanisms or all that we took a

260
00:12:09,959 --> 00:12:13,740
look here are backwards compatible

261
00:12:13,740 --> 00:12:15,899
so to sum up what we have seen in the

262
00:12:15,899 --> 00:12:17,519
last couple of minutes client-side

263
00:12:17,519 --> 00:12:19,920
security is not equally delivered to all

264
00:12:19,920 --> 00:12:23,700
clients actually we had 321 sites that

265
00:12:23,700 --> 00:12:26,519
showed some security inconsistencies

266
00:12:26,519 --> 00:12:28,920
uh due to timely reasons we only showed

267
00:12:28,920 --> 00:12:30,779
you the high level number here so don't

268
00:12:30,779 --> 00:12:33,240
forget to read the paper

269
00:12:33,240 --> 00:12:35,339
misconfigured origin servers for

270
00:12:35,339 --> 00:12:38,399
specific countries and at unnecessary

271
00:12:38,399 --> 00:12:40,800
browser traps caused inter-test

272
00:12:40,800 --> 00:12:43,500
inconsistencies which enable targeted

273
00:12:43,500 --> 00:12:44,899
attacks

274
00:12:44,899 --> 00:12:47,339
non-deterministic so intra test

275
00:12:47,339 --> 00:12:49,920
inconsistencies plays into the hand of

276
00:12:49,920 --> 00:12:52,920
open opportunistic attackers and most

277
00:12:52,920 --> 00:12:55,200
importantly for you folks here it has

278
00:12:55,200 --> 00:12:57,839
impact on web measurements so if you're

279
00:12:57,839 --> 00:12:59,940
a researcher doing web measurements you

280
00:12:59,940 --> 00:13:01,500
should always load the page multiple

281
00:13:01,500 --> 00:13:06,060
times such that those inconsistencies

282
00:13:06,060 --> 00:13:08,820
have not a big impact on your

283
00:13:08,820 --> 00:13:10,680
measurement I

284
00:13:10,680 --> 00:13:12,720
we open sourced our crawling and

285
00:13:12,720 --> 00:13:15,360
Analysis scripts at GitHub so if you are

286
00:13:15,360 --> 00:13:17,519
interested in details take a look at the

287
00:13:17,519 --> 00:13:20,519
repository or approach me in the hallway

288
00:13:20,519 --> 00:13:22,860
that being said I'm looking forward to

289
00:13:22,860 --> 00:13:25,339
your questions

