1
00:00:07,340 --> 00:00:09,059
thank you

2
00:00:09,059 --> 00:00:11,040
I've had the pleasure of working with

3
00:00:11,040 --> 00:00:12,599
these amazing researchers on a project

4
00:00:12,599 --> 00:00:14,700
that we see as bringing new routing

5
00:00:14,700 --> 00:00:17,220
security to millions of users even while

6
00:00:17,220 --> 00:00:19,380
emerging routing security Technologies

7
00:00:19,380 --> 00:00:22,740
still have limited adoption

8
00:00:22,740 --> 00:00:24,900
and we call this paper creating a secure

9
00:00:24,900 --> 00:00:27,979
underlay for the internet

10
00:00:28,859 --> 00:00:30,900
so essentially the status quo of

11
00:00:30,900 --> 00:00:32,520
interdomain routing is it's rather

12
00:00:32,520 --> 00:00:35,100
insecure it's based on the border

13
00:00:35,100 --> 00:00:37,800
Gateway protocol or bgp which is used by

14
00:00:37,800 --> 00:00:39,600
independently operated networks on the

15
00:00:39,600 --> 00:00:41,399
internet known as autonomous systems to

16
00:00:41,399 --> 00:00:43,260
exchange routing information

17
00:00:43,260 --> 00:00:45,660
however bgp is highly vulnerable to

18
00:00:45,660 --> 00:00:46,980
routing attacks

19
00:00:46,980 --> 00:00:49,200
these routing attacks have consequences

20
00:00:49,200 --> 00:00:50,940
for real internet applications like

21
00:00:50,940 --> 00:00:54,539
https Bitcoin and tor

22
00:00:54,539 --> 00:00:56,699
thermore we actually see these rounding

23
00:00:56,699 --> 00:00:58,739
attacks in the real world all the time

24
00:00:58,739 --> 00:01:01,199
just to name a couple of examples in

25
00:01:01,199 --> 00:01:04,019
2018 a hijack of Amazon's DNS service

26
00:01:04,019 --> 00:01:06,119
was used to steal cryptocurrency

27
00:01:06,119 --> 00:01:09,240
2019 a public DNS resolver in Taiwan was

28
00:01:09,240 --> 00:01:11,820
the victim of a bgp hijack as recently

29
00:01:11,820 --> 00:01:13,020
as this year we saw a major

30
00:01:13,020 --> 00:01:15,600
cryptocurrency theft and just less than

31
00:01:15,600 --> 00:01:17,700
a month ago Apple network traffic went

32
00:01:17,700 --> 00:01:20,400
through Russia for 12 hours and this is

33
00:01:20,400 --> 00:01:22,200
just the tip of the iceberg there are so

34
00:01:22,200 --> 00:01:23,580
many more attacks I could be talking

35
00:01:23,580 --> 00:01:25,680
about and clearly this is not how we

36
00:01:25,680 --> 00:01:27,900
want the internet to operate

37
00:01:27,900 --> 00:01:29,880
there is a sliver of Hope though and

38
00:01:29,880 --> 00:01:32,159
that's in the form of new secure routing

39
00:01:32,159 --> 00:01:33,240
backbones

40
00:01:33,240 --> 00:01:35,640
particularly Scion and bgpsec

41
00:01:35,640 --> 00:01:37,799
fundamentally eliminate the threat of

42
00:01:37,799 --> 00:01:39,780
routing attacks by adding cryptographic

43
00:01:39,780 --> 00:01:42,000
signatures to routing messages

44
00:01:42,000 --> 00:01:44,040
even more Scion is actually offered

45
00:01:44,040 --> 00:01:46,079
today as a commercial service by some

46
00:01:46,079 --> 00:01:47,759
isps

47
00:01:47,759 --> 00:01:49,439
the catch is though both of these

48
00:01:49,439 --> 00:01:51,060
backbones still have rather limited

49
00:01:51,060 --> 00:01:52,399
deployment

50
00:01:52,399 --> 00:01:54,780
bgpstec is not deployed commercially at

51
00:01:54,780 --> 00:01:55,439
all

52
00:01:55,439 --> 00:01:57,899
and Scion is only offered by a couple of

53
00:01:57,899 --> 00:02:00,119
isps most of you in this room can

54
00:02:00,119 --> 00:02:02,280
probably not go to your local ISP and

55
00:02:02,280 --> 00:02:04,200
get a cyan connection

56
00:02:04,200 --> 00:02:06,060
and the real killer is that both of

57
00:02:06,060 --> 00:02:07,680
these Protocols are designed in a way

58
00:02:07,680 --> 00:02:09,720
that Legacy clients that aren't

59
00:02:09,720 --> 00:02:11,340
supporting these protocols don't really

60
00:02:11,340 --> 00:02:13,920
get any benefits from their existence so

61
00:02:13,920 --> 00:02:15,360
cyan works on a completely different

62
00:02:15,360 --> 00:02:18,120
addressing scheme than IP addresses so

63
00:02:18,120 --> 00:02:20,400
my IP enabled laptop cannot send a

64
00:02:20,400 --> 00:02:23,520
packet to a Scion host and bgpsec well

65
00:02:23,520 --> 00:02:26,280
if my ISP is not running secure bgp

66
00:02:26,280 --> 00:02:28,020
sessions it's running standard bgp

67
00:02:28,020 --> 00:02:30,120
sessions it can still be lied to with a

68
00:02:30,120 --> 00:02:32,220
malicious bgp message even if someone

69
00:02:32,220 --> 00:02:34,379
else is running bgp Tech somewhere else

70
00:02:34,379 --> 00:02:36,540
in the internet so this brings us to the

71
00:02:36,540 --> 00:02:38,340
question that really motivated this work

72
00:02:38,340 --> 00:02:41,160
and that's can we extend the benefits of

73
00:02:41,160 --> 00:02:43,319
these emerging secure backbones to the

74
00:02:43,319 --> 00:02:45,239
broader internet even while they still

75
00:02:45,239 --> 00:02:47,160
have a limited deployment

76
00:02:47,160 --> 00:02:49,440
so that brings me to this work that we

77
00:02:49,440 --> 00:02:52,860
call espas or the secure backbone as

78
00:02:52,860 --> 00:02:55,680
essentially sbas optimizes regular

79
00:02:55,680 --> 00:02:59,160
internet traffic using a secure backbone

80
00:02:59,160 --> 00:03:01,980
espec our current deployment is based on

81
00:03:01,980 --> 00:03:03,900
cyan we wanted to build this for real

82
00:03:03,900 --> 00:03:05,700
and since the Scion network has actual

83
00:03:05,700 --> 00:03:07,860
deployed nodes we use Scion as our

84
00:03:07,860 --> 00:03:09,780
secure backbone but our techniques are

85
00:03:09,780 --> 00:03:11,159
actually General and can be used with

86
00:03:11,159 --> 00:03:13,560
other secure backbones as well our

87
00:03:13,560 --> 00:03:15,300
primary motivation for doing this is to

88
00:03:15,300 --> 00:03:16,980
improve routing security

89
00:03:16,980 --> 00:03:19,319
and the whole system is transparent to

90
00:03:19,319 --> 00:03:21,000
internet hosts so neither the client nor

91
00:03:21,000 --> 00:03:22,800
the server has to know that their

92
00:03:22,800 --> 00:03:25,319
traffic is being optimized in this way

93
00:03:25,319 --> 00:03:27,239
we see this as a really promising system

94
00:03:27,239 --> 00:03:29,040
to get more traffic onto secure

95
00:03:29,040 --> 00:03:31,080
backbones even while adoption is still

96
00:03:31,080 --> 00:03:32,580
Limited

97
00:03:32,580 --> 00:03:34,680
and finally there is no upgrade required

98
00:03:34,680 --> 00:03:36,659
to either the client or the server or

99
00:03:36,659 --> 00:03:38,760
Source or destination

100
00:03:38,760 --> 00:03:40,080
so I want to talk a little bit more

101
00:03:40,080 --> 00:03:42,540
about how we do this let's start with in

102
00:03:42,540 --> 00:03:44,340
SBS how do we construct the network

103
00:03:44,340 --> 00:03:45,420
itself

104
00:03:45,420 --> 00:03:48,420
select as is on the secure backbone run

105
00:03:48,420 --> 00:03:52,019
what we call sbas Pops as bus pops can

106
00:03:52,019 --> 00:03:53,700
essentially be thought of as the bridge

107
00:03:53,700 --> 00:03:55,980
between the secure backbone and the

108
00:03:55,980 --> 00:03:57,420
outside world

109
00:03:57,420 --> 00:04:00,239
traffic between asbest pops is entirely

110
00:04:00,239 --> 00:04:02,340
routed over the secure backbone and is

111
00:04:02,340 --> 00:04:04,560
immune to bgp hijacks

112
00:04:04,560 --> 00:04:06,720
also the sbest pops connect to each

113
00:04:06,720 --> 00:04:09,599
other with a full ibbt mesh that they

114
00:04:09,599 --> 00:04:12,900
use to exchange routing information

115
00:04:12,900 --> 00:04:14,459
now I want to talk a little bit about

116
00:04:14,459 --> 00:04:16,798
how espas interfaces with the rest of

117
00:04:16,798 --> 00:04:18,060
the internet

118
00:04:18,060 --> 00:04:19,680
the first party that I want to talk

119
00:04:19,680 --> 00:04:21,600
about are sbas customers

120
00:04:21,600 --> 00:04:23,820
these are asts on the traditional

121
00:04:23,820 --> 00:04:25,860
internet that are aware of SBS and would

122
00:04:25,860 --> 00:04:27,540
like to use it to optimize their routes

123
00:04:27,540 --> 00:04:30,540
they connect to their nearest sbest top

124
00:04:30,540 --> 00:04:33,479
pop with an encrypted VPN tunnel

125
00:04:33,479 --> 00:04:36,120
and then they make bgp prefix

126
00:04:36,120 --> 00:04:38,759
announcements to that pop over a bgp

127
00:04:38,759 --> 00:04:41,220
session that's run over that bpn tunnel

128
00:04:41,220 --> 00:04:44,000
shown over here

129
00:04:44,639 --> 00:04:47,759
now asbest pops themselves take these

130
00:04:47,759 --> 00:04:49,560
customer bgp announcements and

131
00:04:49,560 --> 00:04:52,320
redistribute them over the ibgp mesh to

132
00:04:52,320 --> 00:04:54,479
all the other sbest pops

133
00:04:54,479 --> 00:04:57,000
these asbest pops then in turn announce

134
00:04:57,000 --> 00:04:58,560
these prefixes to the broader internet

135
00:04:58,560 --> 00:05:00,720
so one way to think about is a little

136
00:05:00,720 --> 00:05:02,880
bit like your customers prefix instead

137
00:05:02,880 --> 00:05:04,259
of just being announced by their own as

138
00:05:04,259 --> 00:05:06,840
being any cast by all the asbest pops

139
00:05:06,840 --> 00:05:08,100
around the world

140
00:05:08,100 --> 00:05:10,620
now non-participating clients that are

141
00:05:10,620 --> 00:05:12,419
not shown in this figure are just going

142
00:05:12,419 --> 00:05:13,740
to make a standard routing decision

143
00:05:13,740 --> 00:05:15,540
sending their traffic to their nearest

144
00:05:15,540 --> 00:05:18,000
asbest pop where it will then be routed

145
00:05:18,000 --> 00:05:20,580
securely over the secure backbone to the

146
00:05:20,580 --> 00:05:22,259
sbest pop connected to the customer

147
00:05:22,259 --> 00:05:25,259
where it's then sent out the VPN tunnel

148
00:05:25,259 --> 00:05:27,600
to the customer server

149
00:05:27,600 --> 00:05:29,280
and I want to remind everyone that even

150
00:05:29,280 --> 00:05:31,199
those customer is aware of aspass and

151
00:05:31,199 --> 00:05:32,400
participating with a billing

152
00:05:32,400 --> 00:05:34,800
relationship this customer does not

153
00:05:34,800 --> 00:05:36,479
actually need to be on the secure

154
00:05:36,479 --> 00:05:39,180
backbone to get these benefits

155
00:05:39,180 --> 00:05:40,860
now I want to talk a little bit about

156
00:05:40,860 --> 00:05:42,720
how this system offers improved routing

157
00:05:42,720 --> 00:05:43,620
security

158
00:05:43,620 --> 00:05:45,240
let's say that on the left side of the

159
00:05:45,240 --> 00:05:47,100
slide we have a high security service

160
00:05:47,100 --> 00:05:50,039
run out of Asa and hypothetically this

161
00:05:50,039 --> 00:05:52,020
could be like the web page of a bank

162
00:05:52,020 --> 00:05:54,120
this bank's objective is to make sure

163
00:05:54,120 --> 00:05:56,340
that even in the event of a bgp hijack

164
00:05:56,340 --> 00:05:59,160
traffic is still routed correctly from

165
00:05:59,160 --> 00:06:02,639
the client in ASC to the bank and not to

166
00:06:02,639 --> 00:06:04,139
the adversary

167
00:06:04,139 --> 00:06:07,500
however if this as announces its prefix

168
00:06:07,500 --> 00:06:10,259
over the traditional internet the entire

169
00:06:10,259 --> 00:06:13,080
path from the bank server to the client

170
00:06:13,080 --> 00:06:15,800
has to be learned over traditional bgp

171
00:06:15,800 --> 00:06:18,240
this long path is actually relatively

172
00:06:18,240 --> 00:06:20,580
easy for the adversary to hijack one of

173
00:06:20,580 --> 00:06:22,380
the metrics in deciding which path to

174
00:06:22,380 --> 00:06:24,720
use is path length and if an adversary

175
00:06:24,720 --> 00:06:27,720
is topologically closer to ASC then the

176
00:06:27,720 --> 00:06:30,600
actual bank is this as will send its

177
00:06:30,600 --> 00:06:32,639
traffic to the adversary instead of to

178
00:06:32,639 --> 00:06:34,199
this secure website

179
00:06:34,199 --> 00:06:35,819
so this is not optimal because it's

180
00:06:35,819 --> 00:06:38,100
vulnerable to bgp hijacks

181
00:06:38,100 --> 00:06:40,919
however if this Bank instead decides to

182
00:06:40,919 --> 00:06:43,199
announce this prefix over s pass it'll

183
00:06:43,199 --> 00:06:45,360
announce to its nearest sbath pop which

184
00:06:45,360 --> 00:06:47,280
will redistribute the prefix at all the

185
00:06:47,280 --> 00:06:49,620
pops around the world now the problems

186
00:06:49,620 --> 00:06:52,259
change significantly the client in ASC

187
00:06:52,259 --> 00:06:54,419
only has to send its traffic over the

188
00:06:54,419 --> 00:06:56,100
traditional internet to its nearest

189
00:06:56,100 --> 00:06:58,919
asbest pop once it reaches this it's

190
00:06:58,919 --> 00:07:02,160
routed securely over Scion to the bank's

191
00:07:02,160 --> 00:07:04,139
attached pop

192
00:07:04,139 --> 00:07:07,800
now this short path from the client to

193
00:07:07,800 --> 00:07:09,960
its nearest sbath pop is significantly

194
00:07:09,960 --> 00:07:12,180
harder to hijack than the original path

195
00:07:12,180 --> 00:07:13,979
that had to go all the way from the

196
00:07:13,979 --> 00:07:16,020
server to the client

197
00:07:16,020 --> 00:07:18,840
furthermore this client is completely

198
00:07:18,840 --> 00:07:21,060
unaware of the existence of either as

199
00:07:21,060 --> 00:07:23,460
fast or Scion it's simply a bgp speaking

200
00:07:23,460 --> 00:07:25,500
as that's making a standard internet

201
00:07:25,500 --> 00:07:27,780
routing decision

202
00:07:27,780 --> 00:07:29,759
so we wanted to quantify what the

203
00:07:29,759 --> 00:07:31,380
security looked like

204
00:07:31,380 --> 00:07:33,120
I first want to start talking a little

205
00:07:33,120 --> 00:07:34,979
bit about routes between customers

206
00:07:34,979 --> 00:07:37,979
Within asbest every customer has to be

207
00:07:37,979 --> 00:07:39,720
the Direct Customer of a pop you can't

208
00:07:39,720 --> 00:07:41,340
have a pop customer and then another

209
00:07:41,340 --> 00:07:43,380
customer below them so all of these

210
00:07:43,380 --> 00:07:45,120
routes are actually one hop long with

211
00:07:45,120 --> 00:07:47,520
just the customer's origin hop and this

212
00:07:47,520 --> 00:07:49,500
allows us to use a new emerging security

213
00:07:49,500 --> 00:07:52,500
technology known as rpki to verify these

214
00:07:52,500 --> 00:07:55,500
routes rpki lets routers verify the

215
00:07:55,500 --> 00:07:57,720
origins of bgp announcements and since

216
00:07:57,720 --> 00:07:59,400
all these announcements are simply one

217
00:07:59,400 --> 00:08:01,319
hop long we can actually verify the

218
00:08:01,319 --> 00:08:03,840
entire path with rpki this is really

219
00:08:03,840 --> 00:08:05,699
great because it stops customers from

220
00:08:05,699 --> 00:08:07,319
launching vgp hijacks that will

221
00:08:07,319 --> 00:08:09,900
propagate Within sbas

222
00:08:09,900 --> 00:08:12,900
additionally with all the sbas customer

223
00:08:12,900 --> 00:08:15,120
routes secured and validated we give

224
00:08:15,120 --> 00:08:17,340
priority to asbest customer routes over

225
00:08:17,340 --> 00:08:18,900
routes we learn from the traditional

226
00:08:18,900 --> 00:08:20,879
internet this has the effect that

227
00:08:20,879 --> 00:08:22,800
communication between two sbest

228
00:08:22,800 --> 00:08:24,419
customers cannot be hijacked by an

229
00:08:24,419 --> 00:08:26,520
outside party

230
00:08:26,520 --> 00:08:29,160
so we really wanted to zero in and focus

231
00:08:29,160 --> 00:08:30,840
then on the quantitative improvements

232
00:08:30,840 --> 00:08:33,179
for people that are not participating in

233
00:08:33,179 --> 00:08:36,179
SBS so these are clients like the client

234
00:08:36,179 --> 00:08:38,458
in ASC that are unaware of SBS are

235
00:08:38,458 --> 00:08:40,559
making a bgp routing decision and

236
00:08:40,559 --> 00:08:42,240
sending traffic to their nearest asbest

237
00:08:42,240 --> 00:08:44,520
pop there is a possibility that the

238
00:08:44,520 --> 00:08:47,040
adversary could hypothetically be closer

239
00:08:47,040 --> 00:08:49,440
to the client than the nearest asbest

240
00:08:49,440 --> 00:08:52,200
pop and hijack that traffic

241
00:08:52,200 --> 00:08:54,180
so to measure this we Define this

242
00:08:54,180 --> 00:08:56,820
quantity as called resilience that we

243
00:08:56,820 --> 00:08:58,680
Define as the probability that a

244
00:08:58,680 --> 00:09:00,779
client's traffic will be routed securely

245
00:09:00,779 --> 00:09:03,480
to the victim even in the event of a bgp

246
00:09:03,480 --> 00:09:05,459
hijack

247
00:09:05,459 --> 00:09:08,100
we used internet topology simulations to

248
00:09:08,100 --> 00:09:10,019
calculate this resilience and we

249
00:09:10,019 --> 00:09:12,420
measured the resilience of standard IP

250
00:09:12,420 --> 00:09:14,700
prefixes on the internet the way we saw

251
00:09:14,700 --> 00:09:18,060
them announced in bgp and IP prefixes

252
00:09:18,060 --> 00:09:20,399
announced from our five pop asbesta

253
00:09:20,399 --> 00:09:22,019
plant which is very limited and we're

254
00:09:22,019 --> 00:09:23,760
expecting to scale this system up to

255
00:09:23,760 --> 00:09:25,380
many many more Pops

256
00:09:25,380 --> 00:09:27,120
what we found is that the resilience

257
00:09:27,120 --> 00:09:29,040
improved significantly when we announced

258
00:09:29,040 --> 00:09:31,620
the prefixes through espas so this is a

259
00:09:31,620 --> 00:09:33,899
CDF of resilience of many different

260
00:09:33,899 --> 00:09:36,540
attacks modeled on the y-axis and the

261
00:09:36,540 --> 00:09:38,100
median of the y-axis kind of

262
00:09:38,100 --> 00:09:40,140
representing the average case attack so

263
00:09:40,140 --> 00:09:41,339
kind of how well would your average

264
00:09:41,339 --> 00:09:43,380
adversary do

265
00:09:43,380 --> 00:09:45,899
now what we found is that one prefixes

266
00:09:45,899 --> 00:09:47,700
were not announced through sbas against

267
00:09:47,700 --> 00:09:50,220
the average attack IP prefixes on the

268
00:09:50,220 --> 00:09:51,779
internet got a resilience of around 0.5

269
00:09:51,779 --> 00:09:54,660
but this is certainly not optimal so

270
00:09:54,660 --> 00:09:56,160
about half of the internet is actually

271
00:09:56,160 --> 00:09:58,380
routing traffic to the adversary and the

272
00:09:58,380 --> 00:10:00,540
event of these attacks when we announced

273
00:10:00,540 --> 00:10:02,519
those same prefixes over a five pop

274
00:10:02,519 --> 00:10:04,980
estas deployment we saw resilience shoot

275
00:10:04,980 --> 00:10:07,980
up to around 85 percent so now 85

276
00:10:07,980 --> 00:10:09,540
percent of the traffic is actually being

277
00:10:09,540 --> 00:10:11,700
routed securely to the victim even when

278
00:10:11,700 --> 00:10:14,580
a bgp hijack is being launched what's

279
00:10:14,580 --> 00:10:16,980
really interesting about sbas is that it

280
00:10:16,980 --> 00:10:18,779
actually plays very well with emerging

281
00:10:18,779 --> 00:10:21,360
routing security Technologies like rpki

282
00:10:21,360 --> 00:10:24,420
as I mentioned we use rpki within sbas

283
00:10:24,420 --> 00:10:27,060
to validate client routes we're also

284
00:10:27,060 --> 00:10:28,940
seeing major isps on the internet

285
00:10:28,940 --> 00:10:31,500
validating routes with rpki that they

286
00:10:31,500 --> 00:10:34,140
learn through standard bgp so in a world

287
00:10:34,140 --> 00:10:36,779
where we see more and more rpki adoption

288
00:10:36,779 --> 00:10:38,580
we wanted to model what would the same

289
00:10:38,580 --> 00:10:41,220
graph look like with deployed rpki which

290
00:10:41,220 --> 00:10:42,959
as I said we see at many of the top isps

291
00:10:42,959 --> 00:10:45,440
it gives a resilience boost to everybody

292
00:10:45,440 --> 00:10:47,940
rpki can be evaded but it kind of makes

293
00:10:47,940 --> 00:10:50,339
the adversary's job harder so now even

294
00:10:50,339 --> 00:10:52,680
traditional prefixes on the internet are

295
00:10:52,680 --> 00:10:54,839
slightly harder to hijack so it shifts

296
00:10:54,839 --> 00:10:57,000
resilience up to a little bit over 60

297
00:10:57,000 --> 00:10:59,100
percent for traditional prefixes but

298
00:10:59,100 --> 00:11:00,899
when we announced those prefixes through

299
00:11:00,899 --> 00:11:04,140
sbas we have well over 90 resilience

300
00:11:04,140 --> 00:11:06,540
meaning that even in the event of a bgp

301
00:11:06,540 --> 00:11:08,880
hijack the vast majority of traffic is

302
00:11:08,880 --> 00:11:11,160
still being routed to the true origin so

303
00:11:11,160 --> 00:11:13,440
in this manner sbas achieves improved

304
00:11:13,440 --> 00:11:15,420
bgp Jack resilience for its customer

305
00:11:15,420 --> 00:11:17,399
prefixes even when it's being

306
00:11:17,399 --> 00:11:20,100
communicated to by non-participating

307
00:11:20,100 --> 00:11:22,620
unaware clients

308
00:11:22,620 --> 00:11:24,240
really one of my favorite Parts about

309
00:11:24,240 --> 00:11:25,860
this project is that we actually made

310
00:11:25,860 --> 00:11:28,339
this if you visit this website

311
00:11:28,339 --> 00:11:31,079
sbasdemo.net you'll reach a web page

312
00:11:31,079 --> 00:11:33,660
that is being served over SBS and what I

313
00:11:33,660 --> 00:11:35,399
mean by that is that we have a web

314
00:11:35,399 --> 00:11:37,500
server in Zurich that's connected to the

315
00:11:37,500 --> 00:11:40,140
sbest pop in Frankfurt and then its

316
00:11:40,140 --> 00:11:41,940
prefix is being redistributed from the

317
00:11:41,940 --> 00:11:44,279
espas pops all around the world so when

318
00:11:44,279 --> 00:11:45,600
you visit this webpage your traffic

319
00:11:45,600 --> 00:11:47,339
doesn't have to go very far over to

320
00:11:47,339 --> 00:11:49,680
public internet it only hops up to your

321
00:11:49,680 --> 00:11:51,540
nearest asbest pop where it's then

322
00:11:51,540 --> 00:11:54,120
routed securely over Scion to the sbest

323
00:11:54,120 --> 00:11:55,920
pop in Frankfurt and then out to the web

324
00:11:55,920 --> 00:11:57,839
server in Zurich this is an example

325
00:11:57,839 --> 00:11:59,640
traced route from my node in New Jersey

326
00:11:59,640 --> 00:12:01,560
it simply goes to my local internet

327
00:12:01,560 --> 00:12:04,260
Exchange in New Jersey then oversigned a

328
00:12:04,260 --> 00:12:06,540
Frankfurt into Zurich

329
00:12:06,540 --> 00:12:08,640
so I want to thank all of you for your

330
00:12:08,640 --> 00:12:10,620
attention and attending this talk I'd

331
00:12:10,620 --> 00:12:12,480
like to end by taking any questions that

332
00:12:12,480 --> 00:12:14,899
you might have

