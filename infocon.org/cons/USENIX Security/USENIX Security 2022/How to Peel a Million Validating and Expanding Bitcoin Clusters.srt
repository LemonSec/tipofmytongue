1
00:00:07,940 --> 00:00:10,380
all right thanks everyone for bearing

2
00:00:10,380 --> 00:00:11,219
with us

3
00:00:11,219 --> 00:00:13,200
um and um yeah thanks for sticking

4
00:00:13,200 --> 00:00:16,020
around for my talk so I'm Sarah and I'm

5
00:00:16,020 --> 00:00:17,580
going to talk about some work done with

6
00:00:17,580 --> 00:00:19,980
my former PhD students George and Haroon

7
00:00:19,980 --> 00:00:22,080
and some of our collaborators Reiner

8
00:00:22,080 --> 00:00:24,240
Sophia and Bernard and the topic of this

9
00:00:24,240 --> 00:00:26,279
work is really about de-anonymizing

10
00:00:26,279 --> 00:00:27,359
Bitcoin

11
00:00:27,359 --> 00:00:30,840
so uh it's pretty echoey sorry um so

12
00:00:30,840 --> 00:00:32,880
yeah hopefully none of you need to be

13
00:00:32,880 --> 00:00:37,020
told uh that Bitcoin is not Anonymous

14
00:00:37,020 --> 00:00:38,700
um so you know there's been extensive

15
00:00:38,700 --> 00:00:40,800
academic work on this point

16
00:00:40,800 --> 00:00:42,840
um on it at this point a lot of these

17
00:00:42,840 --> 00:00:44,820
papers came out though really eight to

18
00:00:44,820 --> 00:00:46,739
ten years ago so you might say oh this

19
00:00:46,739 --> 00:00:49,440
is kind of who cares but to be honest in

20
00:00:49,440 --> 00:00:51,059
the past eight to ten years this has

21
00:00:51,059 --> 00:00:53,100
become far from a kind of academic

22
00:00:53,100 --> 00:00:54,960
research problem there are now many

23
00:00:54,960 --> 00:00:57,140
companies that do this kind of Bitcoin

24
00:00:57,140 --> 00:00:59,879
de-anonymization work for a living they

25
00:00:59,879 --> 00:01:02,039
work with governments Banks and law

26
00:01:02,039 --> 00:01:04,799
enforcement agencies and we can see here

27
00:01:04,799 --> 00:01:06,479
some of the really kind of high profile

28
00:01:06,479 --> 00:01:09,420
takedowns that have happened as a result

29
00:01:09,420 --> 00:01:11,340
of this work

30
00:01:11,340 --> 00:01:14,220
so again this is really like a global

31
00:01:14,220 --> 00:01:16,740
industry at this point and at its heart

32
00:01:16,740 --> 00:01:19,200
um are really a series of what we call

33
00:01:19,200 --> 00:01:21,420
kind of clustering heuristics so the

34
00:01:21,420 --> 00:01:23,340
idea is that in Bitcoin um an entity

35
00:01:23,340 --> 00:01:25,560
representing an individual user or a

36
00:01:25,560 --> 00:01:27,780
bigger service like an exchange can use

37
00:01:27,780 --> 00:01:30,119
many different addresses or pseudonyms

38
00:01:30,119 --> 00:01:32,340
and these clustering heuristics allow us

39
00:01:32,340 --> 00:01:34,439
to kind of collapse all that usage back

40
00:01:34,439 --> 00:01:36,840
to the same entity that initiated it so

41
00:01:36,840 --> 00:01:38,400
that we can talk about sort of their

42
00:01:38,400 --> 00:01:40,680
their behavior as again an individual

43
00:01:40,680 --> 00:01:42,600
rather than all of their individual

44
00:01:42,600 --> 00:01:44,640
addresses

45
00:01:44,640 --> 00:01:47,159
so one of the kind of biggest heuristics

46
00:01:47,159 --> 00:01:49,200
that we use or the one really that's the

47
00:01:49,200 --> 00:01:51,299
most established is often called the

48
00:01:51,299 --> 00:01:53,460
multi-input or the co-spend heuristic

49
00:01:53,460 --> 00:01:55,560
and this heuristic essentially says that

50
00:01:55,560 --> 00:01:57,540
in any Bitcoin transaction with multiple

51
00:01:57,540 --> 00:01:58,920
inputs

52
00:01:58,920 --> 00:02:00,659
um all of the inputs belong to the same

53
00:02:00,659 --> 00:02:02,820
entity so the same entity controls all

54
00:02:02,820 --> 00:02:04,439
of those addresses so I'm not going to

55
00:02:04,439 --> 00:02:06,360
say in this talk you know why that's a

56
00:02:06,360 --> 00:02:08,520
good heuristic or why we use it but

57
00:02:08,520 --> 00:02:10,380
suffice it to say that there is one type

58
00:02:10,380 --> 00:02:12,300
of behavior called a coin join or

59
00:02:12,300 --> 00:02:14,640
another type of mixing transaction that

60
00:02:14,640 --> 00:02:16,860
would invalidate this heuristic but in

61
00:02:16,860 --> 00:02:18,360
general this heuristic is very much

62
00:02:18,360 --> 00:02:20,400
believed to be safe and is very much

63
00:02:20,400 --> 00:02:22,800
used in practice today

64
00:02:22,800 --> 00:02:24,599
so this heuristic is really effective

65
00:02:24,599 --> 00:02:27,120
you know it applies far beyond a single

66
00:02:27,120 --> 00:02:29,520
transaction but it ignores a really

67
00:02:29,520 --> 00:02:31,980
important type of um a really prevalent

68
00:02:31,980 --> 00:02:34,319
type of behavior in Bitcoin um which is

69
00:02:34,319 --> 00:02:36,840
the idea of making change so making

70
00:02:36,840 --> 00:02:38,879
change in Bitcoin is a lot like making

71
00:02:38,879 --> 00:02:40,680
change in cash

72
00:02:40,680 --> 00:02:42,239
um and this is because Bitcoin operates

73
00:02:42,239 --> 00:02:44,879
in what's called a utxo based model

74
00:02:44,879 --> 00:02:47,160
and so we can see here you basically at

75
00:02:47,160 --> 00:02:49,560
any time you don't have the exact amount

76
00:02:49,560 --> 00:02:51,420
that you want to pay someone stored in

77
00:02:51,420 --> 00:02:53,280
one of your utxos or your addresses

78
00:02:53,280 --> 00:02:54,900
you're going to need to make change

79
00:02:54,900 --> 00:02:57,239
again just like you would with cash so

80
00:02:57,239 --> 00:02:59,519
here we can see Alice has 15 coins

81
00:02:59,519 --> 00:03:01,680
stored with one of her addresses and Bob

82
00:03:01,680 --> 00:03:04,500
is asking for 14 coins so what Alice

83
00:03:04,500 --> 00:03:06,660
does is she forms a transaction with two

84
00:03:06,660 --> 00:03:09,000
outputs uh one of them is Bob and he

85
00:03:09,000 --> 00:03:11,459
gets his 14 coins just like he asked and

86
00:03:11,459 --> 00:03:13,260
then the other one is Alice's change

87
00:03:13,260 --> 00:03:15,000
that she needs to make out of her 15

88
00:03:15,000 --> 00:03:17,580
coin input and so for that she creates

89
00:03:17,580 --> 00:03:19,319
another output which is called the

90
00:03:19,319 --> 00:03:21,060
change address and she sends the change

91
00:03:21,060 --> 00:03:23,940
the one coin to that

92
00:03:23,940 --> 00:03:26,220
so the idea is that you know one of

93
00:03:26,220 --> 00:03:27,900
these outputs money is actually changing

94
00:03:27,900 --> 00:03:30,120
hands it's going to Bob but the other

95
00:03:30,120 --> 00:03:32,340
one it's not and it's actually just

96
00:03:32,340 --> 00:03:34,680
staying with the same user so the change

97
00:03:34,680 --> 00:03:36,840
heuristic basically says that as long as

98
00:03:36,840 --> 00:03:39,000
we can identify the change address in a

99
00:03:39,000 --> 00:03:41,760
transaction we can assign that to the

100
00:03:41,760 --> 00:03:44,280
same entity as the input um as the input

101
00:03:44,280 --> 00:03:45,959
one right and if these live in larger

102
00:03:45,959 --> 00:03:47,819
clusters then we collapse those larger

103
00:03:47,819 --> 00:03:49,319
clusters down as well

104
00:03:49,319 --> 00:03:50,940
so we can see that this is sort of

105
00:03:50,940 --> 00:03:52,440
strictly more you know we can strictly

106
00:03:52,440 --> 00:03:54,540
build on top of the multi-input cluster

107
00:03:54,540 --> 00:03:56,819
using this change heuristic

108
00:03:56,819 --> 00:03:58,980
it's also quite powerful on its own

109
00:03:58,980 --> 00:04:01,560
though in following a certain type of

110
00:04:01,560 --> 00:04:03,180
pattern in the Bitcoin Network that's

111
00:04:03,180 --> 00:04:04,860
called appeal chain

112
00:04:04,860 --> 00:04:07,860
so the idea here is imagine we have one

113
00:04:07,860 --> 00:04:09,720
of these transactions with one input and

114
00:04:09,720 --> 00:04:11,819
two outputs and it's this sort of blue

115
00:04:11,819 --> 00:04:15,000
entity that's initiated the transaction

116
00:04:15,000 --> 00:04:16,738
well if we can identify the change

117
00:04:16,738 --> 00:04:19,320
address then we can also isolate the

118
00:04:19,320 --> 00:04:21,000
kind of meaningful recipient in this

119
00:04:21,000 --> 00:04:22,919
transaction and we can say oh the blue

120
00:04:22,919 --> 00:04:25,020
entity was interacting with that red

121
00:04:25,020 --> 00:04:26,280
entity

122
00:04:26,280 --> 00:04:28,740
and why stop here we we're still with

123
00:04:28,740 --> 00:04:30,479
the blue entity we've still identified

124
00:04:30,479 --> 00:04:33,060
one of their addresses so we may as well

125
00:04:33,060 --> 00:04:34,560
just continue following where that money

126
00:04:34,560 --> 00:04:36,600
goes right and so now we go to the next

127
00:04:36,600 --> 00:04:38,220
transaction where that change address

128
00:04:38,220 --> 00:04:40,199
spends its coins and now we've

129
00:04:40,199 --> 00:04:42,300
identified a new sort of counterparty

130
00:04:42,300 --> 00:04:44,460
for this blue entity

131
00:04:44,460 --> 00:04:46,320
so these peel trains typically in

132
00:04:46,320 --> 00:04:48,720
Bitcoin last hundreds or thousands of

133
00:04:48,720 --> 00:04:50,880
hops basically every transaction we can

134
00:04:50,880 --> 00:04:52,620
really think of as living within one of

135
00:04:52,620 --> 00:04:54,300
these kinds of Peel chains

136
00:04:54,300 --> 00:04:56,759
and the kind of hypothesis is that

137
00:04:56,759 --> 00:04:59,220
identifying recipients of these peels

138
00:04:59,220 --> 00:05:01,979
identifying this series of meaningful uh

139
00:05:01,979 --> 00:05:04,979
purchase recipients has a significant

140
00:05:04,979 --> 00:05:07,919
impact on the anonymity of not just one

141
00:05:07,919 --> 00:05:09,360
of the entities but the other one right

142
00:05:09,360 --> 00:05:11,160
so if I can identify one of your

143
00:05:11,160 --> 00:05:13,259
counterparties that has a significant

144
00:05:13,259 --> 00:05:16,199
effect on your anonymity as well

145
00:05:16,199 --> 00:05:17,699
so hopefully I've convinced you that

146
00:05:17,699 --> 00:05:19,080
this change heuristic is extremely

147
00:05:19,080 --> 00:05:21,300
powerful um and this really again forms

148
00:05:21,300 --> 00:05:22,979
the foundation of not just clustering

149
00:05:22,979 --> 00:05:25,979
but also tracking in the Bitcoin Network

150
00:05:25,979 --> 00:05:27,479
but of course I haven't actually told

151
00:05:27,479 --> 00:05:29,759
you how we identify the change address

152
00:05:29,759 --> 00:05:32,699
at all so that's really kind of uh what

153
00:05:32,699 --> 00:05:34,199
we've done in this research we're going

154
00:05:34,199 --> 00:05:36,180
to propose a really different change

155
00:05:36,180 --> 00:05:37,740
heuristic from the ones that were out

156
00:05:37,740 --> 00:05:40,259
there before those ones sort of relied

157
00:05:40,259 --> 00:05:42,960
on the freshness or the one-time use of

158
00:05:42,960 --> 00:05:44,520
the change address

159
00:05:44,520 --> 00:05:46,500
um and what we're going to do instead is

160
00:05:46,500 --> 00:05:48,240
we're going to really exploit the

161
00:05:48,240 --> 00:05:50,160
evolution that has happened in Bitcoin

162
00:05:50,160 --> 00:05:51,419
so you know those of you who are

163
00:05:51,419 --> 00:05:53,340
familiar with cryptocurrencies might

164
00:05:53,340 --> 00:05:54,900
think you know Bitcoin has no Evolution

165
00:05:54,900 --> 00:05:56,940
it's very you know difficult to move it

166
00:05:56,940 --> 00:05:58,380
forward compared to other

167
00:05:58,380 --> 00:06:00,600
cryptocurrencies but it has actually

168
00:06:00,600 --> 00:06:03,360
changed uh quite a lot um you know since

169
00:06:03,360 --> 00:06:05,100
these these earlier pieces of research

170
00:06:05,100 --> 00:06:06,960
were published and certainly since it

171
00:06:06,960 --> 00:06:08,340
was deployed

172
00:06:08,340 --> 00:06:10,340
so we're going to sort of characterize

173
00:06:10,340 --> 00:06:12,600
multi-input clusters in three different

174
00:06:12,600 --> 00:06:15,000
ways we're first going to consider the

175
00:06:15,000 --> 00:06:17,340
features of the transactions that this

176
00:06:17,340 --> 00:06:19,860
cluster forms so in this paper we pick

177
00:06:19,860 --> 00:06:21,900
four different features I should mention

178
00:06:21,900 --> 00:06:24,000
there was a work earlier this year by um

179
00:06:24,000 --> 00:06:26,580
Moser and Narayanan that picks more

180
00:06:26,580 --> 00:06:27,600
features

181
00:06:27,600 --> 00:06:29,220
um so there's there's more that are out

182
00:06:29,220 --> 00:06:31,259
there there's also many different

183
00:06:31,259 --> 00:06:34,020
address types in Bitcoin so the encoding

184
00:06:34,020 --> 00:06:36,240
of the the public key or the script that

185
00:06:36,240 --> 00:06:37,259
you're using

186
00:06:37,259 --> 00:06:39,840
um as your address and then finally

187
00:06:39,840 --> 00:06:41,280
there's this kind of like almost

188
00:06:41,280 --> 00:06:44,400
ridiculously simple uh change strategy

189
00:06:44,400 --> 00:06:47,240
which essentially says that in the

190
00:06:47,240 --> 00:06:50,520
transactions inside of this cluster at

191
00:06:50,520 --> 00:06:53,280
what index is the change address in the

192
00:06:53,280 --> 00:06:55,500
list of outputs okay and so we can

193
00:06:55,500 --> 00:06:57,600
basically say it's uh the change

194
00:06:57,600 --> 00:06:59,520
strategy is zero if the change address

195
00:06:59,520 --> 00:07:01,860
is always first in the list it's minus

196
00:07:01,860 --> 00:07:03,180
one if the change strategy is always

197
00:07:03,180 --> 00:07:06,720
last it's one if it's one of the two and

198
00:07:06,720 --> 00:07:08,280
then it's none if there's no discernible

199
00:07:08,280 --> 00:07:10,020
pattern you know if it just appears it's

200
00:07:10,020 --> 00:07:13,560
sort of random looking indices in that

201
00:07:13,560 --> 00:07:16,100
output list

202
00:07:16,139 --> 00:07:17,460
all right so here's kind of our

203
00:07:17,460 --> 00:07:19,740
heuristic in a nutshell so what we do is

204
00:07:19,740 --> 00:07:22,500
we first form these multi-input clusters

205
00:07:22,500 --> 00:07:24,539
okay so we sort of collapse all these

206
00:07:24,539 --> 00:07:26,520
addresses and transactions down and we

207
00:07:26,520 --> 00:07:29,160
say these all belong to the same entity

208
00:07:29,160 --> 00:07:30,599
and now what we're going to do is we're

209
00:07:30,599 --> 00:07:32,940
kind of going to use these features to

210
00:07:32,940 --> 00:07:34,680
characterize the sort of expected

211
00:07:34,680 --> 00:07:37,199
behavior of this cluster of this entity

212
00:07:37,199 --> 00:07:39,539
so again this is really just we go

213
00:07:39,539 --> 00:07:41,460
through all the transactions in this

214
00:07:41,460 --> 00:07:44,280
cluster and we sort of add them to a set

215
00:07:44,280 --> 00:07:47,280
of features all right we do the same

216
00:07:47,280 --> 00:07:48,720
thing with the address types so we go

217
00:07:48,720 --> 00:07:50,099
through the addresses in the cluster and

218
00:07:50,099 --> 00:07:51,660
we say you know what are the different

219
00:07:51,660 --> 00:07:53,400
types that are available and then

220
00:07:53,400 --> 00:07:55,380
finally we can assign a single change

221
00:07:55,380 --> 00:07:57,720
strategy to the entire cluster again

222
00:07:57,720 --> 00:08:01,139
according to um to its transactions

223
00:08:01,139 --> 00:08:03,120
so now we've sort of defined the

224
00:08:03,120 --> 00:08:05,099
expected behavior of the cluster

225
00:08:05,099 --> 00:08:07,319
and when we see um you know an address

226
00:08:07,319 --> 00:08:09,180
from this cluster initiate a new

227
00:08:09,180 --> 00:08:11,460
Transaction what we're essentially going

228
00:08:11,460 --> 00:08:13,319
to do is we're going to look at the

229
00:08:13,319 --> 00:08:15,720
outputs in that transaction and we're

230
00:08:15,720 --> 00:08:17,520
going to say which of these outputs

231
00:08:17,520 --> 00:08:20,340
matches the expected behavior of the

232
00:08:20,340 --> 00:08:21,360
cluster

233
00:08:21,360 --> 00:08:24,240
so for example with a change strategy

234
00:08:24,240 --> 00:08:26,039
um you know that might already eliminate

235
00:08:26,039 --> 00:08:27,840
a lot of the addresses in the outputs

236
00:08:27,840 --> 00:08:29,759
right if the change strategy is zero

237
00:08:29,759 --> 00:08:32,159
then we now consider as a candidate

238
00:08:32,159 --> 00:08:34,200
change address only the first address in

239
00:08:34,200 --> 00:08:36,000
the list and we completely ignore all of

240
00:08:36,000 --> 00:08:37,260
the other ones

241
00:08:37,260 --> 00:08:38,880
on the other hand if the change strategy

242
00:08:38,880 --> 00:08:40,799
is none we have to consider all of them

243
00:08:40,799 --> 00:08:41,760
still

244
00:08:41,760 --> 00:08:44,099
but what we do essentially is a you know

245
00:08:44,099 --> 00:08:45,360
we we come up with this list of

246
00:08:45,360 --> 00:08:47,339
candidate change addresses based on this

247
00:08:47,339 --> 00:08:50,220
change strategy and then we label as

248
00:08:50,220 --> 00:08:53,100
change the unique output address that

249
00:08:53,100 --> 00:08:54,600
matches the features that we're looking

250
00:08:54,600 --> 00:08:56,519
for for the from that cluster in terms

251
00:08:56,519 --> 00:08:58,920
of the address type of the type of the

252
00:08:58,920 --> 00:09:01,380
address and then the features of the

253
00:09:01,380 --> 00:09:03,660
transaction in which it then spends its

254
00:09:03,660 --> 00:09:05,519
contents so the kind of next top in the

255
00:09:05,519 --> 00:09:06,480
pl chain

256
00:09:06,480 --> 00:09:09,360
and we only label something has changed

257
00:09:09,360 --> 00:09:11,580
if there's a single output address that

258
00:09:11,580 --> 00:09:13,140
matches this this pattern right

259
00:09:13,140 --> 00:09:16,140
otherwise we don't know which it is

260
00:09:16,140 --> 00:09:18,540
so just consider for a second

261
00:09:18,540 --> 00:09:20,040
um you know if hopefully you've been

262
00:09:20,040 --> 00:09:22,140
following that the only way we can

263
00:09:22,140 --> 00:09:24,540
encounter the only way we can have a

264
00:09:24,540 --> 00:09:25,980
false positive here

265
00:09:25,980 --> 00:09:29,160
is if in this one transaction the

266
00:09:29,160 --> 00:09:31,200
cluster suddenly completely changes its

267
00:09:31,200 --> 00:09:32,940
Behavior it does something we've never

268
00:09:32,940 --> 00:09:34,560
seen it do before

269
00:09:34,560 --> 00:09:37,260
and in the meantime the counterparty and

270
00:09:37,260 --> 00:09:40,380
the transaction completely emulates what

271
00:09:40,380 --> 00:09:42,720
we expect from the cluster

272
00:09:42,720 --> 00:09:44,640
right that's the only way we could

273
00:09:44,640 --> 00:09:46,380
accidentally label the wrong thing is

274
00:09:46,380 --> 00:09:47,880
the change address

275
00:09:47,880 --> 00:09:49,980
so that's kind of the you know the

276
00:09:49,980 --> 00:09:53,220
theory behind why this is a safe

277
00:09:53,220 --> 00:09:54,600
um good heuristic

278
00:09:54,600 --> 00:09:57,300
uh luckily in this work we we had the

279
00:09:57,300 --> 00:09:58,680
chance to actually validate this

280
00:09:58,680 --> 00:10:00,839
heuristic um so we worked directly with

281
00:10:00,839 --> 00:10:02,459
chain analysis one of these blockchain

282
00:10:02,459 --> 00:10:04,500
analytic companies

283
00:10:04,500 --> 00:10:07,019
um and ended up from data that they gave

284
00:10:07,019 --> 00:10:08,519
us you know I'll leave the details in

285
00:10:08,519 --> 00:10:10,920
the paper we ended up being able to form

286
00:10:10,920 --> 00:10:13,800
60 uh true positive multi-input clusters

287
00:10:13,800 --> 00:10:16,320
and 60 false positive multi-input

288
00:10:16,320 --> 00:10:17,339
clusters

289
00:10:17,339 --> 00:10:21,180
okay so we had 120 clusters in total

290
00:10:21,180 --> 00:10:22,860
um and by the way I should say again

291
00:10:22,860 --> 00:10:24,540
details are in the paper but a lot of

292
00:10:24,540 --> 00:10:26,220
these clusters even the false positive

293
00:10:26,220 --> 00:10:28,920
ones were incredibly consistent in their

294
00:10:28,920 --> 00:10:31,019
behavior the majority of them had a

295
00:10:31,019 --> 00:10:33,839
transaction uh set size of one meaning

296
00:10:33,839 --> 00:10:35,399
there was one set of features that they

297
00:10:35,399 --> 00:10:36,899
ever used

298
00:10:36,899 --> 00:10:38,279
um and they were also relatively

299
00:10:38,279 --> 00:10:40,200
distinct in their behavior there wasn't

300
00:10:40,200 --> 00:10:43,260
a ton of overlap in these sets

301
00:10:43,260 --> 00:10:45,300
okay so what we did is we sought to

302
00:10:45,300 --> 00:10:46,980
validate this cluster by sort of

303
00:10:46,980 --> 00:10:48,959
following peel chains out of every

304
00:10:48,959 --> 00:10:50,279
transaction

305
00:10:50,279 --> 00:10:52,320
um inside of the cluster and we

306
00:10:52,320 --> 00:10:54,660
considered sort of two factors in terms

307
00:10:54,660 --> 00:10:56,100
of evaluating these clusters we

308
00:10:56,100 --> 00:10:58,260
considered how effective are they in

309
00:10:58,260 --> 00:11:00,600
expanding the cluster in terms of the

310
00:11:00,600 --> 00:11:03,060
ratio of new to Old transactions and

311
00:11:03,060 --> 00:11:05,459
then how safe are they in terms of what

312
00:11:05,459 --> 00:11:07,680
is the false Discovery rate so notably

313
00:11:07,680 --> 00:11:10,500
we couldn't identify true positives the

314
00:11:10,500 --> 00:11:12,360
best we could do was sort of unknown

315
00:11:12,360 --> 00:11:15,240
positives but we could identify false

316
00:11:15,240 --> 00:11:17,160
positives again drawing on data provided

317
00:11:17,160 --> 00:11:20,100
by Chain analysis essentially if the if

318
00:11:20,100 --> 00:11:22,079
we encountered in following these PL

319
00:11:22,079 --> 00:11:25,320
chains a tag for an address that was in

320
00:11:25,320 --> 00:11:28,019
conflict with the tag available for the

321
00:11:28,019 --> 00:11:29,220
cluster

322
00:11:29,220 --> 00:11:31,019
then we could say this is a false

323
00:11:31,019 --> 00:11:32,100
positive right so we're essentially

324
00:11:32,100 --> 00:11:34,079
taking chain analysis as tags as as

325
00:11:34,079 --> 00:11:35,459
ground truth

326
00:11:35,459 --> 00:11:38,399
okay so um that sort of gives us the uh

327
00:11:38,399 --> 00:11:40,500
false Discovery rate

328
00:11:40,500 --> 00:11:42,420
so in addition to evaluating our own

329
00:11:42,420 --> 00:11:44,459
heuristic that I've just presented

330
00:11:44,459 --> 00:11:46,740
um we of course wanted to also evaluate

331
00:11:46,740 --> 00:11:48,779
um the existing heuristics present in

332
00:11:48,779 --> 00:11:50,220
the literature

333
00:11:50,220 --> 00:11:51,660
um so there's um sort of the original

334
00:11:51,660 --> 00:11:54,000
ones from 2013 and then there's several

335
00:11:54,000 --> 00:11:56,640
uh sort of refined versions um from more

336
00:11:56,640 --> 00:11:58,320
recently

337
00:11:58,320 --> 00:12:00,720
um and basically we can see that for a

338
00:12:00,720 --> 00:12:03,000
lot of these old heuristics the false

339
00:12:03,000 --> 00:12:05,279
Discovery rate is incredibly high right

340
00:12:05,279 --> 00:12:07,500
so you know this one-time use Behavior

341
00:12:07,500 --> 00:12:10,320
while it may have been an indication

342
00:12:10,320 --> 00:12:12,839
um of a change address you know in

343
00:12:12,839 --> 00:12:14,519
Bitcoin as it existed eight to ten years

344
00:12:14,519 --> 00:12:16,620
ago this seems to be really problematic

345
00:12:16,620 --> 00:12:18,180
today and it seems you know very

346
00:12:18,180 --> 00:12:20,519
possible to create false positives um

347
00:12:20,519 --> 00:12:22,860
with this heuristic so the exception is

348
00:12:22,860 --> 00:12:24,899
like oh this last one due to ermiloff at

349
00:12:24,899 --> 00:12:26,940
all but there we can kind of see that at

350
00:12:26,940 --> 00:12:28,500
a you know they have a lower false

351
00:12:28,500 --> 00:12:30,720
Discovery rate but it also has really um

352
00:12:30,720 --> 00:12:32,700
hampered their effectiveness so the full

353
00:12:32,700 --> 00:12:34,800
the expansion factor is is significantly

354
00:12:34,800 --> 00:12:36,180
lower

355
00:12:36,180 --> 00:12:38,339
um our heuristic on the other hand uh

356
00:12:38,339 --> 00:12:40,140
did much better if I'm being honest than

357
00:12:40,140 --> 00:12:42,480
we expected it to do so not only is it

358
00:12:42,480 --> 00:12:44,339
incredibly safe achieving a false

359
00:12:44,339 --> 00:12:48,120
Discovery rate of 0.02 it's also the

360
00:12:48,120 --> 00:12:50,100
most effective one in terms of actually

361
00:12:50,100 --> 00:12:52,380
expanding the Clusters so it's the most

362
00:12:52,380 --> 00:12:54,600
effective and uh by several orders of

363
00:12:54,600 --> 00:12:57,600
magnitude uh the most safe

364
00:12:57,600 --> 00:12:59,880
so that's really it I hope I've at least

365
00:12:59,880 --> 00:13:02,100
piqued your interest in taking a look at

366
00:13:02,100 --> 00:13:04,740
the paper it does contain more results

367
00:13:04,740 --> 00:13:07,019
than I've presented and of course I

368
00:13:07,019 --> 00:13:08,519
should mention you know what I've

369
00:13:08,519 --> 00:13:10,620
presented is is of course limited we had

370
00:13:10,620 --> 00:13:13,399
120 clusters it's not you know that many

371
00:13:13,399 --> 00:13:16,380
but it does seem to be relatively

372
00:13:16,380 --> 00:13:18,360
effective at least based on this initial

373
00:13:18,360 --> 00:13:20,760
data I'll mention there's another result

374
00:13:20,760 --> 00:13:22,380
in the paper that you know I really like

375
00:13:22,380 --> 00:13:24,360
which is that we can also use this

376
00:13:24,360 --> 00:13:26,459
heuristic to actually validate the

377
00:13:26,459 --> 00:13:28,800
results of the multi-input heuristic so

378
00:13:28,800 --> 00:13:31,079
kind of treat it as an orthogonal way of

379
00:13:31,079 --> 00:13:32,579
clustering things together and then

380
00:13:32,579 --> 00:13:34,320
seeing if they agree on the results or

381
00:13:34,320 --> 00:13:36,300
not and of course I should mention you

382
00:13:36,300 --> 00:13:38,220
know if this concerns you

383
00:13:38,220 --> 00:13:40,200
um it is possible to evade this

384
00:13:40,200 --> 00:13:42,600
heuristic by just randomizing the I mean

385
00:13:42,600 --> 00:13:44,519
just by randomizing the features of your

386
00:13:44,519 --> 00:13:45,779
transactions

387
00:13:45,779 --> 00:13:46,860
um that would make it essentially

388
00:13:46,860 --> 00:13:49,079
impossible to continue following these

389
00:13:49,079 --> 00:13:51,120
PL chains so yeah if there's one

390
00:13:51,120 --> 00:13:53,700
takeaway from this talk I hope it's uh

391
00:13:53,700 --> 00:13:55,620
that Bitcoin is not Anonymous tell your

392
00:13:55,620 --> 00:13:58,560
friends and yeah I'd like to say a

393
00:13:58,560 --> 00:14:00,060
really big thank you to analysis for

394
00:14:00,060 --> 00:14:02,040
working with us on this getting us this

395
00:14:02,040 --> 00:14:04,380
data thank you to ic3 for funding it

396
00:14:04,380 --> 00:14:06,959
thanks to you for listening and uh yeah

397
00:14:06,959 --> 00:14:09,920
happy to take any questions

