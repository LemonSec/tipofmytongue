1
00:00:11,090 --> 00:00:16,350
<font color="#CCCCCC">thanks.thanks yeah</font>

2
00:00:13,250 --> 00:00:18,509
good afternoon<font color="#CCCCCC"> I'm Dave from University</font>

3
00:00:16,350 --> 00:00:20,760
of Florida<font color="#CCCCCC"> I'm here to present our paper</font>

4
00:00:18,510 --> 00:00:22,710
on Android security<font color="#CCCCCC"> this is a</font>

5
00:00:20,760 --> 00:00:26,640
collaboration<font color="#E5E5E5"> with some some research</font>

6
00:00:22,710 --> 00:00:35,760
<font color="#E5E5E5">America all right does anyone remember</font>

7
00:00:26,640 --> 00:00:39,090
this sound all<font color="#E5E5E5"> right you can tell you if</font>

8
00:00:35,760 --> 00:00:41,190
you have ever log into a BBS is probably

9
00:00:39,090 --> 00:00:43,559
that you own a<font color="#E5E5E5"> Hayes modem like this</font>

10
00:00:41,190 --> 00:00:46,140
<font color="#E5E5E5">that is the sound</font><font color="#CCCCCC"> when damadam trying to</font>

11
00:00:43,559 --> 00:00:48,300
get<font color="#CCCCCC"> connected to the BBS and</font><font color="#E5E5E5"> what</font>

12
00:00:46,140 --> 00:00:50,239
happens under the hood is<font color="#CCCCCC"> the computer</font>

13
00:00:48,300 --> 00:00:52,678
software issues<font color="#CCCCCC"> eighty command to</font>

14
00:00:50,239 --> 00:00:55,800
control<font color="#CCCCCC"> the bottom to establish a</font>

15
00:00:52,679 --> 00:00:59,550
<font color="#E5E5E5">establish this connection</font><font color="#CCCCCC"> in this case</font>

16
00:00:55,800 --> 00:01:01,260
for<font color="#E5E5E5"> example we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> two</font><font color="#CCCCCC"> Madame's</font><font color="#E5E5E5"> and the</font>

17
00:00:59,550 --> 00:01:05,518
computer software issues that a command

18
00:01:01,260 --> 00:01:08,880
called<font color="#E5E5E5"> a TD to instruct model</font><font color="#CCCCCC"> a a $2.00</font>

19
00:01:05,519 --> 00:01:10,950
<font color="#E5E5E5">and after ringing for a while the remote</font>

20
00:01:08,880 --> 00:01:13,979
computer software issues a command

21
00:01:10,950 --> 00:01:16,440
<font color="#E5E5E5">called a</font><font color="#CCCCCC"> ta instructing Molly B to</font>

22
00:01:13,980 --> 00:01:18,450
answer the call thus the two bottoms<font color="#E5E5E5"> got</font>

23
00:01:16,440 --> 00:01:21,120
connected<font color="#E5E5E5"> and thus the two computers</font><font color="#CCCCCC"> and</font>

24
00:01:18,450 --> 00:01:23,970
after while the remote computer might

25
00:01:21,120 --> 00:01:26,850
issue a th command which have to call

26
00:01:23,970 --> 00:01:29,160
thus closing the communication these

27
00:01:26,850 --> 00:01:32,850
<font color="#CCCCCC">eighty commands</font><font color="#E5E5E5"> are designed to consume</font>

28
00:01:29,160 --> 00:01:35,700
<font color="#CCCCCC">atoms</font><font color="#E5E5E5"> they are as out</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> BBS</font><font color="#CCCCCC"> but what</font>

29
00:01:32,850 --> 00:01:38,460
you<font color="#CCCCCC"> probably</font><font color="#E5E5E5"> haven't realized is we can</font>

30
00:01:35,700 --> 00:01:40,760
control<font color="#E5E5E5"> Android phones using</font><font color="#CCCCCC"> 80 commands</font>

31
00:01:38,460 --> 00:01:44,639
<font color="#E5E5E5">so in this talk I'm</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to talk about</font>

32
00:01:40,760 --> 00:01:48,170
the systematic study we have done of<font color="#E5E5E5"> 80</font>

33
00:01:44,640 --> 00:01:48,170
commands weaving the Android ecosystem

34
00:01:48,800 --> 00:01:53,670
<font color="#CCCCCC">for</font><font color="#E5E5E5"> some of you this might not be news</font>

35
00:01:51,420 --> 00:01:56,820
you might be familiar with<font color="#E5E5E5"> previous</font>

36
00:01:53,670 --> 00:01:59,160
works<font color="#E5E5E5"> discovering 80 commands in</font><font color="#CCCCCC"> smart</font>

37
00:01:56,820 --> 00:02:01,070
<font color="#CCCCCC">phones such as the 380 command</font>

38
00:01:59,160 --> 00:02:05,580
<font color="#E5E5E5">discovered on</font><font color="#CCCCCC"> Samsung phones including</font>

39
00:02:01,070 --> 00:02:08,848
enabling USB debugging<font color="#E5E5E5"> and Wi-Fi</font><font color="#CCCCCC"> a black</font>

40
00:02:05,580 --> 00:02:11,910
top<font color="#E5E5E5"> a black hat talk also reviewed how</font>

41
00:02:08,848 --> 00:02:15,869
<font color="#E5E5E5">to flash malicious firmware images using</font>

42
00:02:11,910 --> 00:02:19,100
a<font color="#E5E5E5"> TMS</font><font color="#CCCCCC"> and we can find a bunch of 80</font>

43
00:02:15,870 --> 00:02:21,900
commands listed on XDA forum as well

44
00:02:19,100 --> 00:02:23,920
unfortunately this<font color="#CCCCCC"> ad-hoc previous work</font>

45
00:02:21,900 --> 00:02:26,950
<font color="#E5E5E5">have only touched</font><font color="#CCCCCC"> the tip</font>

46
00:02:23,920 --> 00:02:29,260
<font color="#E5E5E5">to the iceberg as a result the</font>

47
00:02:26,950 --> 00:02:31,299
prevalence is still unclear<font color="#CCCCCC"> we still</font>

48
00:02:29,260 --> 00:02:34,840
have no idea<font color="#E5E5E5"> how many</font><font color="#CCCCCC"> 80 commands are</font>

49
00:02:31,300 --> 00:02:36,280
there inside the Android ecosystem<font color="#E5E5E5"> the</font>

50
00:02:34,840 --> 00:02:38,770
functionality is<font color="#CCCCCC"> too unclear</font>

51
00:02:36,280 --> 00:02:40,780
unlike the standardized<font color="#CCCCCC"> 80 commands</font><font color="#E5E5E5"> most</font>

52
00:02:38,770 --> 00:02:43,630
of<font color="#CCCCCC"> these commands are not documented at</font>

53
00:02:40,780 --> 00:02:46,750
all the security impact is<font color="#CCCCCC"> still unclear</font>

54
00:02:43,630 --> 00:02:48,430
<font color="#E5E5E5">by the time</font><font color="#CCCCCC"> of writing</font><font color="#E5E5E5"> only few</font><font color="#CCCCCC"> IT</font>

55
00:02:46,750 --> 00:02:51,850
commands are well known<font color="#CCCCCC"> to have security</font>

56
00:02:48,430 --> 00:02:54,690
impact<font color="#E5E5E5"> what we found was this 80 command</font>

57
00:02:51,850 --> 00:02:57,670
<font color="#E5E5E5">act as a largely</font><font color="#CCCCCC"> vendor specific API</font>

58
00:02:54,690 --> 00:03:00,310
<font color="#E5E5E5">exposing a vast array of functionalities</font>

59
00:02:57,670 --> 00:03:02,859
and this can be accessed<font color="#E5E5E5"> on certain</font>

60
00:03:00,310 --> 00:03:04,989
phones<font color="#E5E5E5"> simply by plugging a USB cable</font>

61
00:03:02,860 --> 00:03:08,080
<font color="#E5E5E5">eating often</font><font color="#CCCCCC"> without the user of the</font>

62
00:03:04,989 --> 00:03:10,209
owner<font color="#CCCCCC"> even noticing so in the rest of</font>

63
00:03:08,080 --> 00:03:13,269
<font color="#E5E5E5">the talk we're gonna show how we did</font>

64
00:03:10,209 --> 00:03:15,340
this<font color="#E5E5E5"> system Atticus study the first</font>

65
00:03:13,269 --> 00:03:18,640
question is how to find<font color="#CCCCCC"> these 80</font>

66
00:03:15,340 --> 00:03:20,950
commands<font color="#E5E5E5"> so</font><font color="#CCCCCC"> accept OSP and lineage</font><font color="#E5E5E5"> moose</font>

67
00:03:18,640 --> 00:03:22,750
of this<font color="#E5E5E5"> Android customizations are</font>

68
00:03:20,950 --> 00:03:24,730
closed source so<font color="#CCCCCC"> we need a way to</font>

69
00:03:22,750 --> 00:03:27,910
<font color="#CCCCCC">extract</font><font color="#E5E5E5"> 80 commands from</font><font color="#CCCCCC"> the firmware</font>

70
00:03:24,730 --> 00:03:30,429
<font color="#E5E5E5">images directly the second question is</font>

71
00:03:27,910 --> 00:03:32,470
how<font color="#E5E5E5"> to test them we need a framework to</font>

72
00:03:30,430 --> 00:03:35,320
send out<font color="#E5E5E5"> this 80 command and collect a</font>

73
00:03:32,470 --> 00:03:37,720
response from the phones<font color="#E5E5E5"> the last</font>

74
00:03:35,320 --> 00:03:39,489
<font color="#CCCCCC">question is how to abuse them so we</font>

75
00:03:37,720 --> 00:03:42,130
probably need<font color="#CCCCCC"> to combine</font><font color="#E5E5E5"> both static and</font>

76
00:03:39,489 --> 00:03:44,230
<font color="#E5E5E5">dynamic analysis tools to figure out how</font>

77
00:03:42,130 --> 00:03:47,220
this command flow within<font color="#E5E5E5"> the system and</font>

78
00:03:44,230 --> 00:03:52,030
how certain<font color="#E5E5E5"> commands are processed by</font>

79
00:03:47,220 --> 00:03:53,560
<font color="#E5E5E5">native demons or applications before we</font>

80
00:03:52,030 --> 00:03:55,570
start let's take<font color="#E5E5E5"> a look at this 80</font>

81
00:03:53,560 --> 00:03:58,030
commands again they were designed to

82
00:03:55,570 --> 00:04:00,670
consume atoms<font color="#E5E5E5"> the initial 80 command was</font>

83
00:03:58,030 --> 00:04:02,560
invented by<font color="#E5E5E5"> Dennis Hayes we have seen</font>

84
00:04:00,670 --> 00:04:05,920
the ATT command which is<font color="#CCCCCC"> used to</font><font color="#E5E5E5"> tower</font>

85
00:04:02,560 --> 00:04:09,579
<font color="#E5E5E5">number as the advancing of wireless</font>

86
00:04:05,920 --> 00:04:12,190
communications we have<font color="#E5E5E5"> itu-t</font><font color="#CCCCCC"> ETSI</font>

87
00:04:09,579 --> 00:04:15,700
defined<font color="#E5E5E5"> ET command sets which are used</font>

88
00:04:12,190 --> 00:04:17,738
<font color="#E5E5E5">to support gsm 3g 4g one example here is</font>

89
00:04:15,700 --> 00:04:20,260
this<font color="#CCCCCC"> et-plus cmgs</font>

90
00:04:17,738 --> 00:04:23,380
<font color="#E5E5E5">which is used to send out a SMS message</font>

91
00:04:20,260 --> 00:04:25,810
<font color="#E5E5E5">and then we have this Android specific</font>

92
00:04:23,380 --> 00:04:28,270
80 commands<font color="#E5E5E5"> this 80 commands are</font><font color="#CCCCCC"> not</font>

93
00:04:25,810 --> 00:04:30,180
standardized<font color="#CCCCCC"> and they were</font><font color="#E5E5E5"> created or</font>

94
00:04:28,270 --> 00:04:32,950
added mentally due to vendors

95
00:04:30,180 --> 00:04:34,539
customization<font color="#E5E5E5"> why exam here is this 80</font>

96
00:04:32,950 --> 00:04:36,680
plus USB debug

97
00:04:34,539 --> 00:04:39,139
which enables USB debugging and weaving

98
00:04:36,680 --> 00:04:42,020
the Android system<font color="#E5E5E5"> if you look into this</font>

99
00:04:39,139 --> 00:04:44,449
<font color="#CCCCCC">android-specific ad commands we'll</font><font color="#E5E5E5"> see</font>

100
00:04:42,020 --> 00:04:47,479
they basically follow this this<font color="#E5E5E5"> pattern</font>

101
00:04:44,449 --> 00:04:49,850
<font color="#E5E5E5">they always start with</font><font color="#CCCCCC"> 80</font><font color="#E5E5E5"> a short for</font>

102
00:04:47,479 --> 00:04:53,810
attention followed<font color="#CCCCCC"> by an expansion</font>

103
00:04:49,850 --> 00:04:56,180
symbol which could be<font color="#E5E5E5"> % +</font><font color="#CCCCCC"> + %</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> al</font>

104
00:04:53,810 --> 00:05:01,070
followed by the<font color="#E5E5E5"> actual command name as</font>

105
00:04:56,180 --> 00:05:03,800
well<font color="#CCCCCC"> as optional</font><font color="#E5E5E5"> parameters so let's</font>

106
00:05:01,070 --> 00:05:06,340
start our systematic by finding<font color="#E5E5E5"> these 80</font>

107
00:05:03,800 --> 00:05:08,060
commands within<font color="#E5E5E5"> the Android ecosystem</font>

108
00:05:06,340 --> 00:05:10,909
<font color="#E5E5E5">step 1</font>

109
00:05:08,060 --> 00:05:13,490
we crawled and downloaded over<font color="#CCCCCC"> 2000</font>

110
00:05:10,910 --> 00:05:16,430
former images across 11 different

111
00:05:13,490 --> 00:05:19,220
vendors<font color="#E5E5E5"> and surprisingly this step is</font>

112
00:05:16,430 --> 00:05:21,830
not as straightforward as one would

113
00:05:19,220 --> 00:05:23,750
expect<font color="#E5E5E5"> some vendors tried their best to</font>

114
00:05:21,830 --> 00:05:26,180
prevent us from downloading their stock

115
00:05:23,750 --> 00:05:28,190
from<font color="#E5E5E5"> her image either by making them</font>

116
00:05:26,180 --> 00:05:30,470
<font color="#CCCCCC">really hard</font><font color="#E5E5E5"> to find or by asking a lot</font>

117
00:05:28,190 --> 00:05:33,440
of<font color="#E5E5E5"> required information and third-party</font>

118
00:05:30,470 --> 00:05:34,910
websites<font color="#E5E5E5"> also often deploy traffic and</font>

119
00:05:33,440 --> 00:05:36,979
true because they<font color="#CCCCCC"> believed we were</font>

120
00:05:34,910 --> 00:05:41,020
launching<font color="#CCCCCC"> TOS attacks because each</font>

121
00:05:36,979 --> 00:05:45,050
former image is a is a<font color="#E5E5E5"> around 1 gigabyte</font>

122
00:05:41,020 --> 00:05:48,198
but finally we made<font color="#CCCCCC"> it and once we have</font>

123
00:05:45,050 --> 00:05:50,870
all<font color="#CCCCCC"> the former images we go to step</font><font color="#E5E5E5"> 2 we</font>

124
00:05:48,199 --> 00:05:53,780
try<font color="#E5E5E5"> to unzip or unpack this</font><font color="#CCCCCC"> firmer</font><font color="#E5E5E5"> image</font>

125
00:05:50,870 --> 00:05:56,030
and go through<font color="#CCCCCC"> each file</font><font color="#E5E5E5"> and this step</font>

126
00:05:53,780 --> 00:05:58,309
<font color="#CCCCCC">tends</font><font color="#E5E5E5"> to be more challenging</font><font color="#CCCCCC"> and</font>

127
00:05:56,030 --> 00:06:00,859
annoying<font color="#E5E5E5"> mainly due to the variance of</font>

128
00:05:58,310 --> 00:06:03,349
the image format<font color="#E5E5E5"> even</font><font color="#CCCCCC"> for the same</font>

129
00:06:00,860 --> 00:06:05,900
vendor<font color="#E5E5E5"> the image format keeps changing</font>

130
00:06:03,349 --> 00:06:08,840
<font color="#CCCCCC">in the worst case we need to find an</font>

131
00:06:05,900 --> 00:06:12,320
alpaca<font color="#E5E5E5"> per vendor per Android version</font>

132
00:06:08,840 --> 00:06:14,179
and<font color="#E5E5E5"> perform model once we're inside the</font>

133
00:06:12,320 --> 00:06:17,090
<font color="#E5E5E5">firmware image we go through</font><font color="#CCCCCC"> each file</font>

134
00:06:14,180 --> 00:06:19,789
if this is a zip file we<font color="#CCCCCC"> unzip it</font><font color="#E5E5E5"> if</font>

135
00:06:17,090 --> 00:06:22,698
this<font color="#E5E5E5"> is a file system file we mount we</font>

136
00:06:19,789 --> 00:06:24,919
mount it<font color="#E5E5E5"> if it is</font><font color="#CCCCCC"> a PP file we</font><font color="#E5E5E5"> to camp</font>

137
00:06:22,699 --> 00:06:26,180
out it if<font color="#E5E5E5"> it is a binary file we're a</font>

138
00:06:24,919 --> 00:06:28,190
string command<font color="#E5E5E5"> to extract all the</font>

139
00:06:26,180 --> 00:06:31,130
<font color="#E5E5E5">symbols and once we have all the files</font>

140
00:06:28,190 --> 00:06:34,490
<font color="#E5E5E5">we just grab the</font><font color="#CCCCCC"> 80 command based on</font><font color="#E5E5E5"> a</font>

141
00:06:31,130 --> 00:06:36,740
complex regex we designed<font color="#E5E5E5"> so in short we</font>

142
00:06:34,490 --> 00:06:39,020
<font color="#E5E5E5">want to find as many potential 80</font>

143
00:06:36,740 --> 00:06:43,370
commands as possible while keeping<font color="#E5E5E5"> the</font>

144
00:06:39,020 --> 00:06:45,650
false<font color="#E5E5E5"> positive low and then step 3 we</font>

145
00:06:43,370 --> 00:06:47,990
<font color="#E5E5E5">process and parse all these potential</font><font color="#CCCCCC"> 80</font>

146
00:06:45,650 --> 00:06:49,650
commands<font color="#E5E5E5"> to find those that are likely</font>

147
00:06:47,990 --> 00:06:52,110
to be<font color="#E5E5E5"> real</font><font color="#CCCCCC"> ET commands</font>

148
00:06:49,650 --> 00:06:55,650
and receive them<font color="#E5E5E5"> into a database so in</font>

149
00:06:52,110 --> 00:06:58,620
the end<font color="#E5E5E5"> we discovered</font><font color="#CCCCCC"> 3,500 unique ET</font>

150
00:06:55,650 --> 00:07:01,229
commands<font color="#E5E5E5"> we also crowd some</font>

151
00:06:58,620 --> 00:07:05,250
specifications and collected<font color="#E5E5E5"> over 200</font>

152
00:07:01,229 --> 00:07:07,469
<font color="#CCCCCC">standardized</font><font color="#E5E5E5"> ET commands if we look at</font>

153
00:07:05,250 --> 00:07:10,860
the Android<font color="#E5E5E5"> version distribution among</font>

154
00:07:07,470 --> 00:07:13,380
or<font color="#E5E5E5"> 2004 images we have covered Android</font>

155
00:07:10,860 --> 00:07:15,720
<font color="#E5E5E5">version version from</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> point</font><font color="#CCCCCC"> one to</font>

156
00:07:13,380 --> 00:07:19,770
<font color="#CCCCCC">seven point wine but time of crawling</font>

157
00:07:15,720 --> 00:07:23,070
<font color="#CCCCCC">Android eight was not widely</font><font color="#E5E5E5"> adopted</font><font color="#CCCCCC"> the</font>

158
00:07:19,770 --> 00:07:26,580
majority version of our firmware<font color="#E5E5E5"> images</font>

159
00:07:23,070 --> 00:07:29,729
are the newer versions starting<font color="#E5E5E5"> from</font>

160
00:07:26,580 --> 00:07:31,889
Android 4.4 to 7.1 if we compare<font color="#CCCCCC"> with</font>

161
00:07:29,729 --> 00:07:34,440
<font color="#CCCCCC">the platform</font><font color="#E5E5E5"> versions from the Google</font>

162
00:07:31,889 --> 00:07:36,330
<font color="#CCCCCC">Play Store</font><font color="#E5E5E5"> we'll see our data seems to</font>

163
00:07:34,440 --> 00:07:39,449
<font color="#E5E5E5">be well aligned with</font><font color="#CCCCCC"> a rewarder</font><font color="#E5E5E5"> usage</font>

164
00:07:36,330 --> 00:07:41,760
<font color="#E5E5E5">and then we look at the</font><font color="#CCCCCC"> 80 command</font>

165
00:07:39,449 --> 00:07:45,419
distribution per vendor<font color="#E5E5E5"> the right</font><font color="#CCCCCC"> figure</font>

166
00:07:41,760 --> 00:07:48,120
is<font color="#CCCCCC"> possible except some exceptions on</font>

167
00:07:45,419 --> 00:07:50,580
Android 4.0 X versions<font color="#E5E5E5"> the average</font>

168
00:07:48,120 --> 00:07:54,180
number of 80 commands<font color="#E5E5E5"> Weaving</font><font color="#CCCCCC"> Google is</font>

169
00:07:50,580 --> 00:07:57,120
around 100 note that half of them<font color="#E5E5E5"> are</font>

170
00:07:54,180 --> 00:08:00,419
not standardized<font color="#CCCCCC"> 80 commands</font><font color="#E5E5E5"> and then</font>

171
00:07:57,120 --> 00:08:02,250
the middle figure<font color="#E5E5E5"> is for Samsung as you</font>

172
00:08:00,419 --> 00:08:05,190
can see that the<font color="#E5E5E5"> the number of 80</font>

173
00:08:02,250 --> 00:08:08,610
commands<font color="#E5E5E5"> keeps increasing as the Android</font>

174
00:08:05,190 --> 00:08:10,380
<font color="#E5E5E5">version grows and after Android 4.3 the</font>

175
00:08:08,610 --> 00:08:13,590
average number of 80 commands for

176
00:08:10,380 --> 00:08:16,770
Samsung is around 400<font color="#E5E5E5"> the right figure</font>

177
00:08:13,590 --> 00:08:18,270
is for LG similar with Samsung<font color="#CCCCCC"> the</font>

178
00:08:16,770 --> 00:08:21,240
number of 80 commands keeps increasing

179
00:08:18,270 --> 00:08:24,270
and the average<font color="#CCCCCC"> number is around 300</font>

180
00:08:21,240 --> 00:08:28,590
as you can see<font color="#E5E5E5"> vendors do add more 80</font>

181
00:08:24,270 --> 00:08:31,049
commands<font color="#CCCCCC"> during their customizations so</font>

182
00:08:28,590 --> 00:08:33,179
once we have<font color="#E5E5E5"> all the 80 commands we need</font>

183
00:08:31,050 --> 00:08:36,200
to<font color="#E5E5E5"> test them besides the basic</font>

184
00:08:33,179 --> 00:08:39,359
functionality we also want to<font color="#E5E5E5"> know if</font>

185
00:08:36,200 --> 00:08:41,969
some command found<font color="#E5E5E5"> from one winter would</font>

186
00:08:39,360 --> 00:08:44,010
work for the other winter<font color="#E5E5E5"> or if there</font>

187
00:08:41,969 --> 00:08:46,770
<font color="#E5E5E5">exists some command which would behave</font>

188
00:08:44,010 --> 00:08:49,110
differently<font color="#E5E5E5"> across vendors the only</font>

189
00:08:46,770 --> 00:08:51,689
setup we need is a USB connection

190
00:08:49,110 --> 00:08:55,290
between an Android phone<font color="#E5E5E5"> and a host</font>

191
00:08:51,690 --> 00:08:58,440
computer<font color="#E5E5E5"> and we also require all these</font>

192
00:08:55,290 --> 00:09:00,870
phones<font color="#E5E5E5"> to expose</font><font color="#CCCCCC"> a USB</font><font color="#E5E5E5"> CDC ECM interface</font>

193
00:08:58,440 --> 00:09:03,480
which<font color="#E5E5E5"> is also known as the USB monami</font>

194
00:09:00,870 --> 00:09:06,360
interface and this interface would

195
00:09:03,480 --> 00:09:09,870
<font color="#CCCCCC">ac report on the host machine</font><font color="#E5E5E5"> for us to</font>

196
00:09:06,360 --> 00:09:12,300
<font color="#E5E5E5">send out the</font><font color="#CCCCCC"> ad commands note that in</font>

197
00:09:09,870 --> 00:09:15,810
most<font color="#E5E5E5"> cases this USB functionality is not</font>

198
00:09:12,300 --> 00:09:18,750
act is not active so<font color="#CCCCCC"> we use usb switcher</font>

199
00:09:15,810 --> 00:09:22,859
<font color="#E5E5E5">to</font><font color="#CCCCCC"> activate this interface by switching</font>

200
00:09:18,750 --> 00:09:25,260
the current the USB configurations<font color="#CCCCCC"> this</font>

201
00:09:22,860 --> 00:09:27,060
USB switcher was initially designed for

202
00:09:25,260 --> 00:09:29,700
<font color="#E5E5E5">Samsung phones and we extended to</font>

203
00:09:27,060 --> 00:09:32,670
support<font color="#E5E5E5"> other vendors and once we have</font>

204
00:09:29,700 --> 00:09:34,230
this<font color="#E5E5E5"> simple setup ready</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> implemented</font>

205
00:09:32,670 --> 00:09:35,939
automation script<font color="#E5E5E5"> who send out 80</font>

206
00:09:34,230 --> 00:09:37,550
commands and click the response from the

207
00:09:35,940 --> 00:09:41,220
<font color="#E5E5E5">phones</font>

208
00:09:37,550 --> 00:09:43,349
one of the most<font color="#E5E5E5"> questions here is how</font>

209
00:09:41,220 --> 00:09:46,230
many<font color="#CCCCCC"> phones to actually have this USB</font>

210
00:09:43,350 --> 00:09:48,830
modern interface to answer this<font color="#CCCCCC"> question</font>

211
00:09:46,230 --> 00:09:52,830
we examined<font color="#E5E5E5"> 14 different Android devices</font>

212
00:09:48,830 --> 00:09:56,130
it turns out six of<font color="#E5E5E5"> them exposed this</font>

213
00:09:52,830 --> 00:09:58,560
modern interface by default<font color="#CCCCCC"> four of them</font>

214
00:09:56,130 --> 00:10:01,530
can expose this USB functionality after

215
00:09:58,560 --> 00:10:03,979
<font color="#E5E5E5">being routed amount is 10 devices we</font>

216
00:10:01,530 --> 00:10:08,760
<font color="#E5E5E5">choose</font><font color="#CCCCCC"> eight to test against</font><font color="#E5E5E5"> 80 commands</font>

217
00:10:03,980 --> 00:10:14,550
including three Samsung<font color="#CCCCCC"> 2 LG 2 Asus and</font>

218
00:10:08,760 --> 00:10:18,090
<font color="#CCCCCC">wind access while some 80 command</font>

219
00:10:14,550 --> 00:10:21,270
response might<font color="#CCCCCC"> be fairly informative all</font>

220
00:10:18,090 --> 00:10:23,970
of them would just<font color="#E5E5E5"> return ok and in this</font>

221
00:10:21,270 --> 00:10:26,310
case we need<font color="#CCCCCC"> to combine</font><font color="#E5E5E5"> both static and</font>

222
00:10:23,970 --> 00:10:28,530
dynamic<font color="#E5E5E5"> analysis to have a better</font>

223
00:10:26,310 --> 00:10:31,920
<font color="#E5E5E5">understanding of this 80 command as well</font>

224
00:10:28,530 --> 00:10:34,230
<font color="#CCCCCC">as</font><font color="#E5E5E5"> finding vulnerabilities</font><font color="#CCCCCC"> so we</font><font color="#E5E5E5"> start</font>

225
00:10:31,920 --> 00:10:36,860
<font color="#E5E5E5">with finding the top 5 binaries which</font>

226
00:10:34,230 --> 00:10:39,750
contains the most number of 80 commands

227
00:10:36,860 --> 00:10:43,260
<font color="#E5E5E5">here we focus on the top</font><font color="#CCCCCC"> 1 binaries</font>

228
00:10:39,750 --> 00:10:45,540
which are the real library<font color="#E5E5E5"> for Google in</font>

229
00:10:43,260 --> 00:10:48,270
<font color="#E5E5E5">native demon called</font><font color="#CCCCCC"> 80 distributor for</font>

230
00:10:45,540 --> 00:10:51,360
Samsung and a native demon<font color="#E5E5E5"> called a TD</font>

231
00:10:48,270 --> 00:10:53,910
<font color="#E5E5E5">for LG and then we enable</font><font color="#CCCCCC"> adb debugging</font>

232
00:10:51,360 --> 00:10:56,730
and use lock ad to see how this command

233
00:10:53,910 --> 00:10:59,520
flow within<font color="#CCCCCC"> the system it turns out both</font>

234
00:10:56,730 --> 00:11:02,310
80 distributor and<font color="#E5E5E5"> a TD are the first</font>

235
00:10:59,520 --> 00:11:04,680
<font color="#CCCCCC">stores of 80 commands weaving</font><font color="#E5E5E5"> the system</font>

236
00:11:02,310 --> 00:11:06,719
and then we<font color="#E5E5E5"> use either Perl to see how</font>

237
00:11:04,680 --> 00:11:09,709
certain<font color="#E5E5E5"> commands are processed weaving</font>

238
00:11:06,720 --> 00:11:09,710
these native demons

239
00:11:10,780 --> 00:11:17,270
although we were<font color="#CCCCCC"> not able to closely</font>

240
00:11:13,430 --> 00:11:19,550
examine all of the<font color="#CCCCCC"> 3500 a unique 80</font>

241
00:11:17,270 --> 00:11:23,150
commands<font color="#E5E5E5"> we put some interesting ones</font>

242
00:11:19,550 --> 00:11:24,770
here in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> next few slides so this</font>

243
00:11:23,150 --> 00:11:27,880
command pulled the<font color="#E5E5E5"> phone into download</font>

244
00:11:24,770 --> 00:11:31,430
mode enabling firmware flashing directly

245
00:11:27,880 --> 00:11:34,310
this<font color="#E5E5E5"> command factory reset</font><font color="#CCCCCC"> the phone</font>

246
00:11:31,430 --> 00:11:36,650
does<font color="#E5E5E5"> using all these data and if you</font>

247
00:11:34,310 --> 00:11:39,199
accidentally<font color="#E5E5E5"> break your LG phone into</font>

248
00:11:36,650 --> 00:11:40,819
the blue screen on the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

249
00:11:39,200 --> 00:11:42,740
discovered<font color="#CCCCCC"> two command which can I'll</font>

250
00:11:40,820 --> 00:11:44,750
break your<font color="#CCCCCC"> LG phone</font><font color="#E5E5E5"> and we also</font>

251
00:11:42,740 --> 00:11:46,640
discovered one command which can break

252
00:11:44,750 --> 00:11:48,680
<font color="#E5E5E5">your LG phone and if you're interested</font>

253
00:11:46,640 --> 00:11:53,810
<font color="#E5E5E5">in free breaking service you can't DM</font><font color="#CCCCCC"> it</font>

254
00:11:48,680 --> 00:11:57,979
<font color="#E5E5E5">directly</font><font color="#CCCCCC"> command here bypass Android</font>

255
00:11:53,810 --> 00:12:00,650
<font color="#E5E5E5">security mechanism yes we can make a</font>

256
00:11:57,980 --> 00:12:03,260
call<font color="#E5E5E5"> helper call on circle just from a</font>

257
00:12:00,650 --> 00:12:05,439
USB cable<font color="#E5E5E5"> it does not matter whether or</font>

258
00:12:03,260 --> 00:12:08,660
<font color="#CCCCCC">not</font><font color="#E5E5E5"> the screen is locked</font>

259
00:12:05,440 --> 00:12:10,450
this command changes<font color="#E5E5E5"> the IMEI value</font>

260
00:12:08,660 --> 00:12:14,420
which is the unique identity of the

261
00:12:10,450 --> 00:12:17,270
mobile device<font color="#E5E5E5"> this command enables</font><font color="#CCCCCC"> ADB</font>

262
00:12:14,420 --> 00:12:19,670
debugging again this key lock command

263
00:12:17,270 --> 00:12:23,600
<font color="#E5E5E5">unlocks the the screen lock</font><font color="#CCCCCC"> even if a</font>

264
00:12:19,670 --> 00:12:27,500
<font color="#E5E5E5">TCP protected this command</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> allows us</font>

265
00:12:23,600 --> 00:12:30,560
<font color="#CCCCCC">to singing out keep as SMS messages and</font>

266
00:12:27,500 --> 00:12:32,930
even connecting to the internet<font color="#CCCCCC"> so again</font>

267
00:12:30,560 --> 00:12:35,000
all we need is a USB<font color="#E5E5E5"> connection then we</font>

268
00:12:32,930 --> 00:12:38,449
can send out these<font color="#CCCCCC"> key commands to to</font>

269
00:12:35,000 --> 00:12:40,490
the<font color="#CCCCCC"> phone's command is</font><font color="#E5E5E5"> showing here</font>

270
00:12:38,450 --> 00:12:45,590
<font color="#E5E5E5">either leave some</font><font color="#CCCCCC"> sense of information</font>

271
00:12:40,490 --> 00:12:50,290
or ease further exploit ation we found

272
00:12:45,590 --> 00:12:52,760
3480 commands falling into this category

273
00:12:50,290 --> 00:12:54,530
<font color="#CCCCCC">this command</font><font color="#E5E5E5"> provide a lot of</font>

274
00:12:52,760 --> 00:12:58,069
information about<font color="#E5E5E5"> the fallen a system</font>

275
00:12:54,530 --> 00:13:01,160
including<font color="#CCCCCC"> ma Y</font><font color="#E5E5E5"> or thousand usage</font><font color="#CCCCCC"> one</font>

276
00:12:58,070 --> 00:13:03,650
<font color="#E5E5E5">example here is this 80 plus they have</font>

277
00:13:01,160 --> 00:13:05,530
come in full as you can<font color="#E5E5E5"> see it gives you</font>

278
00:13:03,650 --> 00:13:10,280
a lot<font color="#CCCCCC"> of information about the phone I</font>

279
00:13:05,530 --> 00:13:12,620
including IMEI this to command lists all

280
00:13:10,280 --> 00:13:15,620
the<font color="#E5E5E5"> 80 commands supported</font><font color="#CCCCCC"> by the</font>

281
00:13:12,620 --> 00:13:17,450
baseband processor and we also use these

282
00:13:15,620 --> 00:13:19,970
<font color="#CCCCCC">to command to cross-check all the 80</font>

283
00:13:17,450 --> 00:13:22,570
commands we extracted from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> firmware</font>

284
00:13:19,970 --> 00:13:26,110
<font color="#E5E5E5">and found zero missing</font>

285
00:13:22,570 --> 00:13:29,290
these two commands read proc FS and<font color="#CCCCCC"> C's</font>

286
00:13:26,110 --> 00:13:31,030
FS on Linux as we will<font color="#E5E5E5"> show later</font><font color="#CCCCCC"> in the</font>

287
00:13:29,290 --> 00:13:34,360
<font color="#E5E5E5">demo we use this command to read</font>

288
00:13:31,030 --> 00:13:40,209
arbitrary data under the<font color="#E5E5E5"> SD card like</font>

289
00:13:34,360 --> 00:13:43,270
this we also discovered another category

290
00:13:40,210 --> 00:13:47,050
of<font color="#E5E5E5"> 80 commands enabling extra debugging</font>

291
00:13:43,270 --> 00:13:49,569
capabilities such as<font color="#CCCCCC"> cysts trees and a</font>

292
00:13:47,050 --> 00:13:52,630
<font color="#CCCCCC">seams this command are only available to</font>

293
00:13:49,570 --> 00:13:55,840
<font color="#CCCCCC">Infinium baseband processors and the</font>

294
00:13:52,630 --> 00:13:58,930
Intel Android USB<font color="#CCCCCC"> driver supports</font><font color="#E5E5E5"> this</font>

295
00:13:55,840 --> 00:14:02,530
functionality<font color="#E5E5E5"> naming it the</font><font color="#CCCCCC"> modem</font><font color="#E5E5E5"> 80</font>

296
00:13:58,930 --> 00:14:04,630
proxy although we're<font color="#CCCCCC"> not able to</font><font color="#E5E5E5"> enable</font>

297
00:14:02,530 --> 00:14:06,670
<font color="#E5E5E5">this functionality without</font><font color="#CCCCCC"> routing the</font>

298
00:14:04,630 --> 00:14:09,220
phone<font color="#E5E5E5"> this command have already mean</font>

299
00:14:06,670 --> 00:14:11,949
have already<font color="#E5E5E5"> being used to reverse</font>

300
00:14:09,220 --> 00:14:13,570
engineering the baseband processor<font color="#CCCCCC"> so</font>

301
00:14:11,950 --> 00:14:16,170
for more<font color="#E5E5E5"> information please check out</font>

302
00:14:13,570 --> 00:14:21,550
the link our slides will be available on

303
00:14:16,170 --> 00:14:24,550
using<font color="#CCCCCC"> x website</font><font color="#E5E5E5"> zone commands shown here</font>

304
00:14:21,550 --> 00:14:26,560
are related<font color="#CCCCCC"> with hayden menus these</font>

305
00:14:24,550 --> 00:14:29,260
hidden menus are mentally<font color="#CCCCCC"> designed for</font>

306
00:14:26,560 --> 00:14:32,079
debugging and<font color="#E5E5E5"> testing purpose at this</font>

307
00:14:29,260 --> 00:14:34,060
point it's<font color="#CCCCCC"> not clear</font><font color="#E5E5E5"> how an attacker</font>

308
00:14:32,080 --> 00:14:36,820
<font color="#E5E5E5">could use these</font><font color="#CCCCCC"> values</font><font color="#E5E5E5"> to exploit the</font>

309
00:14:34,060 --> 00:14:39,849
phone but they do impose some security

310
00:14:36,820 --> 00:14:43,030
<font color="#CCCCCC">concerns</font><font color="#E5E5E5"> and another</font><font color="#CCCCCC"> adopter notice here</font>

311
00:14:39,850 --> 00:14:46,000
is the commands containing stream VZW

312
00:14:43,030 --> 00:14:49,110
it seems like vendors<font color="#E5E5E5"> also add in</font><font color="#CCCCCC"> UAT</font>

313
00:14:46,000 --> 00:14:52,210
commands for carriers

314
00:14:49,110 --> 00:14:55,930
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> this demo time</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> demonstrate</font>

315
00:14:52,210 --> 00:14:58,480
two attacks the first attacks<font color="#CCCCCC"> unlock the</font>

316
00:14:55,930 --> 00:15:00,880
screen<font color="#E5E5E5"> and send out a touchscreen event</font>

317
00:14:58,480 --> 00:15:03,430
<font color="#E5E5E5">to operate the phone just like a real</font>

318
00:15:00,880 --> 00:15:06,870
<font color="#E5E5E5">human being</font><font color="#CCCCCC"> I'll play with the phone</font>

319
00:15:03,430 --> 00:15:10,420
the second attack<font color="#CCCCCC"> enables USB debugging</font>

320
00:15:06,870 --> 00:15:12,760
<font color="#E5E5E5">and leverages the praça FS read</font><font color="#CCCCCC"> 80</font>

321
00:15:10,420 --> 00:15:15,400
command<font color="#E5E5E5"> to launch it confuse deputy</font><font color="#CCCCCC"> pass</font>

322
00:15:12,760 --> 00:15:19,060
traversal reading arbitrary data under

323
00:15:15,400 --> 00:15:20,590
the<font color="#E5E5E5"> SD card this next attack will</font>

324
00:15:19,060 --> 00:15:23,229
demonstrate<font color="#E5E5E5"> from start to finish</font>

325
00:15:20,590 --> 00:15:25,990
the ability to<font color="#CCCCCC"> bypass the LG g4s lock</font>

326
00:15:23,230 --> 00:15:28,950
screen and enable USB developer options

327
00:15:25,990 --> 00:15:31,240
<font color="#E5E5E5">all without user interaction</font>

328
00:15:28,950 --> 00:15:33,850
notice that we typed in<font color="#E5E5E5"> a passcode and</font>

329
00:15:31,240 --> 00:15:36,040
<font color="#E5E5E5">it was incorrect but even if</font><font color="#CCCCCC"> we've</font>

330
00:15:33,850 --> 00:15:36,470
<font color="#CCCCCC">forgotten</font><font color="#E5E5E5"> the passcode if we have access</font>

331
00:15:36,040 --> 00:15:39,170
<font color="#E5E5E5">to the</font>

332
00:15:36,470 --> 00:15:42,290
human interface we<font color="#E5E5E5"> can issue a special</font>

333
00:15:39,170 --> 00:15:44,990
<font color="#E5E5E5">command that allows us to bypass the</font>

334
00:15:42,290 --> 00:15:47,319
<font color="#E5E5E5">lock screen additionally we can automate</font>

335
00:15:44,990 --> 00:15:51,170
touch events to reach the settings<font color="#E5E5E5"> menu</font>

336
00:15:47,320 --> 00:15:55,570
<font color="#E5E5E5">go to the developer</font><font color="#CCCCCC"> options</font><font color="#E5E5E5"> enable</font>

337
00:15:51,170 --> 00:15:57,800
developer options<font color="#E5E5E5"> bypass any prompts and</font>

338
00:15:55,570 --> 00:16:01,250
then finally enable USB debugging

339
00:15:57,800 --> 00:16:03,760
<font color="#CCCCCC">allowing us to get</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> ADB</font><font color="#E5E5E5"> shell from</font>

340
00:16:01,250 --> 00:16:06,050
this point it would be<font color="#E5E5E5"> able</font><font color="#CCCCCC"> to issue</font>

341
00:16:03,760 --> 00:16:08,780
arbitrary commands to<font color="#E5E5E5"> the phone with the</font>

342
00:16:06,050 --> 00:16:13,520
privilege of ADB but this includes the

343
00:16:08,780 --> 00:16:14,930
ability<font color="#E5E5E5"> to install applications for this</font>

344
00:16:13,520 --> 00:16:17,900
next demo<font color="#CCCCCC"> we will</font><font color="#E5E5E5"> be directly</font>

345
00:16:14,930 --> 00:16:21,290
<font color="#E5E5E5">interacting</font><font color="#CCCCCC"> with the LG g4</font><font color="#E5E5E5"> via the new</font>

346
00:16:17,900 --> 00:16:24,860
80 command interface first<font color="#E5E5E5"> we switch</font><font color="#CCCCCC"> the</font>

347
00:16:21,290 --> 00:16:27,680
phone into the 80 command mode and then

348
00:16:24,860 --> 00:16:29,810
<font color="#E5E5E5">we open an 80 interact prompt which</font>

349
00:16:27,680 --> 00:16:34,300
allows<font color="#E5E5E5"> us to interact an issue and</font>

350
00:16:29,810 --> 00:16:34,300
receive responses to 80 commands

351
00:16:40,320 --> 00:16:44,639
once the prompt<font color="#E5E5E5"> is established we issue</font>

352
00:16:42,990 --> 00:16:47,699
a simple command<font color="#E5E5E5"> to get some information</font>

353
00:16:44,639 --> 00:16:49,769
<font color="#CCCCCC">about the phone but</font><font color="#E5E5E5"> next we issue a</font>

354
00:16:47,699 --> 00:16:53,160
<font color="#CCCCCC">special command</font><font color="#E5E5E5"> found</font><font color="#CCCCCC"> out lg devices</font>

355
00:16:49,769 --> 00:16:56,070
which allows us to enable<font color="#E5E5E5"> ADB without</font>

356
00:16:53,160 --> 00:16:58,399
developer options notice on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> right</font>

357
00:16:56,070 --> 00:17:01,009
side we<font color="#CCCCCC"> are now</font><font color="#E5E5E5"> receiving logcat data</font>

358
00:16:58,399 --> 00:17:04,770
directly<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the phone without having</font>

359
00:17:01,009 --> 00:17:05,970
developer options<font color="#CCCCCC"> labelled this gives us</font>

360
00:17:04,770 --> 00:17:08,699
insight<font color="#CCCCCC"> into what's happening</font><font color="#E5E5E5"> in the</font>

361
00:17:05,970 --> 00:17:11,549
phone as we issue a<font color="#E5E5E5"> TV mat the next</font>

362
00:17:08,699 --> 00:17:13,559
<font color="#CCCCCC">command is the</font><font color="#E5E5E5"> 80</font><font color="#CCCCCC"> program</font><font color="#E5E5E5"> this was used</font>

363
00:17:11,549 --> 00:17:15,299
by developers<font color="#E5E5E5"> to view the proc file</font>

364
00:17:13,559 --> 00:17:17,459
system to get insight<font color="#CCCCCC"> into what</font>

365
00:17:15,299 --> 00:17:18,990
<font color="#E5E5E5">processes are running but we have</font><font color="#CCCCCC"> found</font>

366
00:17:17,459 --> 00:17:20,880
<font color="#CCCCCC">there</font><font color="#E5E5E5"> perhaps</font><font color="#CCCCCC"> reversal vulnerability in</font>

367
00:17:18,990 --> 00:17:23,069
this command<font color="#E5E5E5"> which allows</font><font color="#CCCCCC"> us to</font><font color="#E5E5E5"> read</font>

368
00:17:20,880 --> 00:17:24,839
arbitrary files from the phone as<font color="#E5E5E5"> long</font>

369
00:17:23,069 --> 00:17:32,370
as the<font color="#E5E5E5"> privilege of the</font><font color="#CCCCCC"> 80 command</font>

370
00:17:24,839 --> 00:17:34,500
distributor is sufficient cool I hope

371
00:17:32,370 --> 00:17:39,270
you enjoyed our demo<font color="#E5E5E5"> special thanks to</font>

372
00:17:34,500 --> 00:17:41,429
<font color="#E5E5E5">Grand who made this this</font><font color="#CCCCCC"> video demo now</font>

373
00:17:39,270 --> 00:17:45,629
it's time to<font color="#E5E5E5"> talk about medications and</font>

374
00:17:41,429 --> 00:17:48,240
and fixes so from vendors<font color="#E5E5E5"> perspective</font>

375
00:17:45,630 --> 00:17:50,309
<font color="#E5E5E5">the most straightforward fix would be</font><font color="#CCCCCC"> to</font>

376
00:17:48,240 --> 00:17:53,010
<font color="#E5E5E5">remove this USB modeling interface</font>

377
00:17:50,309 --> 00:17:55,799
<font color="#E5E5E5">because it seems unlikely that normal</font>

378
00:17:53,010 --> 00:17:57,990
users would need this<font color="#E5E5E5"> functionality but</font>

379
00:17:55,799 --> 00:18:01,260
just in case where it seems impossible

380
00:17:57,990 --> 00:18:03,480
<font color="#CCCCCC">to</font><font color="#E5E5E5"> remove this USB functionality we can</font>

381
00:18:01,260 --> 00:18:05,820
always restrict the access to this<font color="#E5E5E5"> USB</font>

382
00:18:03,480 --> 00:18:08,120
functionality<font color="#E5E5E5"> just as we need</font><font color="#CCCCCC"> to route</font>

383
00:18:05,820 --> 00:18:11,370
the phone to<font color="#E5E5E5"> access this functionality</font>

384
00:18:08,120 --> 00:18:14,070
<font color="#E5E5E5">another good security mechanism is to</font>

385
00:18:11,370 --> 00:18:16,139
you use whitelist<font color="#CCCCCC"> so by</font><font color="#E5E5E5"> default all</font>

386
00:18:14,070 --> 00:18:18,780
these 80 commands<font color="#E5E5E5"> should be blocked on</font>

387
00:18:16,140 --> 00:18:21,900
unless permitted within the whitelist

388
00:18:18,780 --> 00:18:24,840
from users perspective<font color="#CCCCCC"> the good news is</font>

389
00:18:21,900 --> 00:18:27,690
both Samsung<font color="#E5E5E5"> and LG have issued security</font>

390
00:18:24,840 --> 00:18:30,600
updates because we reported this

391
00:18:27,690 --> 00:18:32,429
vulnerability<font color="#E5E5E5"> earlier on February so if</font>

392
00:18:30,600 --> 00:18:37,980
you have Android phones<font color="#E5E5E5"> please update</font>

393
00:18:32,429 --> 00:18:41,400
<font color="#E5E5E5">your Android</font><font color="#CCCCCC"> shift out what are we down</font>

394
00:18:37,980 --> 00:18:44,070
here<font color="#E5E5E5"> well nope as we mentioned all these</font>

395
00:18:41,400 --> 00:18:46,620
Android specific specific<font color="#E5E5E5"> ad commands</font>

396
00:18:44,070 --> 00:18:49,230
are not<font color="#E5E5E5"> documented so we build an online</font>

397
00:18:46,620 --> 00:18:51,719
<font color="#E5E5E5">database to document their usages</font>

398
00:18:49,230 --> 00:18:53,290
parameters<font color="#E5E5E5"> and Android firmware you</font>

399
00:18:51,720 --> 00:18:55,570
firmware information

400
00:18:53,290 --> 00:18:57,760
containing<font color="#E5E5E5"> these</font><font color="#CCCCCC"> diss commands although</font>

401
00:18:55,570 --> 00:18:59,980
whilst you're working on<font color="#CCCCCC"> feeding up</font><font color="#E5E5E5"> more</font>

402
00:18:57,760 --> 00:19:02,170
information<font color="#E5E5E5"> for each for each</font><font color="#CCCCCC"> eighty</font>

403
00:18:59,980 --> 00:19:05,650
command<font color="#E5E5E5"> but the basic query interface is</font>

404
00:19:02,170 --> 00:19:10,000
there we also open source<font color="#E5E5E5"> our tools for</font>

405
00:19:05,650 --> 00:19:12,580
<font color="#CCCCCC">the 80</font><font color="#E5E5E5"> command testing</font><font color="#CCCCCC"> I will be on the</font>

406
00:19:10,000 --> 00:19:15,760
<font color="#E5E5E5">draw market next year</font><font color="#CCCCCC"> looking for</font>

407
00:19:12,580 --> 00:19:18,760
research positions in both industry and

408
00:19:15,760 --> 00:19:21,580
academia<font color="#CCCCCC"> if you are interested in my</font>

409
00:19:18,760 --> 00:19:23,350
<font color="#CCCCCC">research please</font><font color="#E5E5E5"> visit my personal</font>

410
00:19:21,580 --> 00:19:42,879
website for more information

411
00:19:23,350 --> 00:19:45,189
<font color="#CCCCCC">thanks I</font><font color="#E5E5E5"> can take questions now hi John</font>

412
00:19:42,880 --> 00:19:47,140
Criswell University of Rochester<font color="#CCCCCC"> so</font>

413
00:19:45,190 --> 00:19:48,490
forgive my ignorance but it wasn't<font color="#E5E5E5"> clear</font>

414
00:19:47,140 --> 00:19:51,190
to<font color="#E5E5E5"> me whether this is something that's</font>

415
00:19:48,490 --> 00:19:52,210
remotely<font color="#E5E5E5"> exploitable over cellular or</font>

416
00:19:51,190 --> 00:19:53,710
whether it's something<font color="#CCCCCC"> that's only</font>

417
00:19:52,210 --> 00:19:56,740
exploitable once you have physical

418
00:19:53,710 --> 00:19:59,650
<font color="#E5E5E5">access to the device</font><font color="#CCCCCC"> Inc and</font><font color="#E5E5E5"> again a USB</font>

419
00:19:56,740 --> 00:20:02,770
connection<font color="#E5E5E5"> to it</font><font color="#CCCCCC"> right now it requires</font><font color="#E5E5E5"> a</font>

420
00:19:59,650 --> 00:20:05,080
USB connection<font color="#CCCCCC"> although</font><font color="#E5E5E5"> we're working</font><font color="#CCCCCC"> on</font>

421
00:20:02,770 --> 00:20:06,910
something<font color="#E5E5E5"> else like</font><font color="#CCCCCC"> Bluetooth because</font><font color="#E5E5E5"> it</font>

422
00:20:05,080 --> 00:20:09,189
turns out<font color="#CCCCCC"> Bluetooth also contains 80</font>

423
00:20:06,910 --> 00:20:11,650
command so probably<font color="#E5E5E5"> in the future</font><font color="#CCCCCC"> we can</font>

424
00:20:09,190 --> 00:20:14,650
remotely exploit this from Bluetooth

425
00:20:11,650 --> 00:20:17,130
<font color="#E5E5E5">module we're still working on that</font><font color="#CCCCCC"> okay</font>

426
00:20:14,650 --> 00:20:17,130
<font color="#CCCCCC">thank you</font>

427
00:20:19,860 --> 00:20:25,899
<font color="#CCCCCC">Karl Koecher</font><font color="#E5E5E5"> University of Washington so</font>

428
00:20:23,800 --> 00:20:28,000
one of the<font color="#E5E5E5"> most surprising things that I</font>

429
00:20:25,900 --> 00:20:29,560
saw here is it looked like a lot<font color="#CCCCCC"> of</font>

430
00:20:28,000 --> 00:20:32,170
<font color="#E5E5E5">these</font><font color="#CCCCCC"> 80 commands were being processed</font>

431
00:20:29,560 --> 00:20:35,020
at like the<font color="#CCCCCC"> Android or</font><font color="#E5E5E5"> OS level</font><font color="#CCCCCC"> as</font>

432
00:20:32,170 --> 00:20:40,440
opposed to<font color="#CCCCCC"> the baseband level right</font><font color="#E5E5E5"> and</font>

433
00:20:35,020 --> 00:20:43,270
I was wondering if you found any issues

434
00:20:40,440 --> 00:20:45,880
like the baseband level<font color="#E5E5E5"> or if you</font>

435
00:20:43,270 --> 00:20:49,720
thought you might<font color="#CCCCCC"> be missing</font><font color="#E5E5E5"> certain 80</font>

436
00:20:45,880 --> 00:20:53,140
<font color="#E5E5E5">commands from that you can pull out</font><font color="#CCCCCC"> of</font>

437
00:20:49,720 --> 00:20:55,060
baseband images for example<font color="#CCCCCC"> so I guess</font>

438
00:20:53,140 --> 00:20:57,580
like<font color="#E5E5E5"> there are two questions the</font><font color="#CCCCCC"> first</font>

439
00:20:55,060 --> 00:21:00,129
question is we focused on the Android

440
00:20:57,580 --> 00:21:03,310
specific<font color="#CCCCCC"> ET commands</font><font color="#E5E5E5"> although we do find</font>

441
00:21:00,130 --> 00:21:08,280
some like<font color="#CCCCCC"> modern specific commands like</font>

442
00:21:03,310 --> 00:21:11,200
a TD<font color="#CCCCCC"> but right now we are</font><font color="#E5E5E5"> we focusing on</font>

443
00:21:08,280 --> 00:21:12,940
Android specific 80 commands<font color="#E5E5E5"> we also</font>

444
00:21:11,200 --> 00:21:17,020
find some commands<font color="#E5E5E5"> within</font><font color="#CCCCCC"> the modern</font>

445
00:21:12,940 --> 00:21:19,930
image<font color="#CCCCCC"> but again like that is not our</font>

446
00:21:17,020 --> 00:21:24,250
focus right now<font color="#CCCCCC"> I think the second</font>

447
00:21:19,930 --> 00:21:29,170
question<font color="#CCCCCC"> was sir</font>

448
00:21:24,250 --> 00:21:31,090
I was just wondering if so it sounds

449
00:21:29,170 --> 00:21:34,210
like<font color="#E5E5E5"> your focus</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> on the the OS level</font>

450
00:21:31,090 --> 00:21:36,370
<font color="#CCCCCC">8 yes yes</font><font color="#E5E5E5"> I was just</font><font color="#CCCCCC"> wondering if you</font>

451
00:21:34,210 --> 00:21:38,380
also<font color="#E5E5E5"> found anything with the the</font>

452
00:21:36,370 --> 00:21:43,719
baseband 80 commands<font color="#CCCCCC"> but it sounds like</font>

453
00:21:38,380 --> 00:21:45,070
<font color="#E5E5E5">that wasn't your focus right</font><font color="#CCCCCC"> um yes</font>

454
00:21:43,720 --> 00:21:50,260
<font color="#E5E5E5">basically yes</font><font color="#CCCCCC"> ok</font>

455
00:21:45,070 --> 00:21:53,580
thanks<font color="#E5E5E5"> thanks did you have any</font>

456
00:21:50,260 --> 00:21:56,530
opportunities<font color="#CCCCCC"> to fuzz the real interface</font>

457
00:21:53,580 --> 00:21:58,600
you know what like the first step we did

458
00:21:56,530 --> 00:22:02,170
<font color="#CCCCCC">it was</font><font color="#E5E5E5"> try to send out whatever garbage</font>

459
00:21:58,600 --> 00:22:05,290
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the to the e 2 command interface</font><font color="#E5E5E5"> but</font>

460
00:22:02,170 --> 00:22:08,080
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Saudis does not work that well then</font>

461
00:22:05,290 --> 00:22:10,240
we start to realize let's try to find

462
00:22:08,080 --> 00:22:13,720
all the 80 commands and try to use them

463
00:22:10,240 --> 00:22:14,970
to fuzz<font color="#E5E5E5"> the fall</font><font color="#CCCCCC"> rather</font><font color="#E5E5E5"> than just</font>

464
00:22:13,720 --> 00:22:17,650
<font color="#E5E5E5">sending out some garbage</font>

465
00:22:14,970 --> 00:22:19,570
<font color="#E5E5E5">so did you did you get any chance then</font>

466
00:22:17,650 --> 00:22:21,820
<font color="#CCCCCC">to see where</font><font color="#E5E5E5"> and this kind of ties into</font>

467
00:22:19,570 --> 00:22:24,550
<font color="#E5E5E5">the last question of where you might</font>

468
00:22:21,820 --> 00:22:26,260
<font color="#CCCCCC">have some way of</font><font color="#E5E5E5"> testing baseband</font>

469
00:22:24,550 --> 00:22:29,500
security<font color="#E5E5E5"> going through this interface</font>

470
00:22:26,260 --> 00:22:31,629
<font color="#E5E5E5">from</font><font color="#CCCCCC"> the software</font><font color="#E5E5E5"> OS side into the</font>

471
00:22:29,500 --> 00:22:34,530
sort of<font color="#E5E5E5"> that</font><font color="#CCCCCC"> point-to-point between the</font>

472
00:22:31,630 --> 00:22:37,210
<font color="#CCCCCC">base band modem and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> android drivers</font>

473
00:22:34,530 --> 00:22:39,129
<font color="#CCCCCC">you know what</font><font color="#E5E5E5"> this this reminds me</font>

474
00:22:37,210 --> 00:22:41,590
another<font color="#E5E5E5"> USB interface which</font><font color="#CCCCCC"> is called</font>

475
00:22:39,130 --> 00:22:44,500
diagnostic<font color="#E5E5E5"> interface and some somehow</font>

476
00:22:41,590 --> 00:22:47,770
like I've<font color="#E5E5E5"> seen a lot of Wacom</font>

477
00:22:44,500 --> 00:22:50,620
proprietary software<font color="#E5E5E5"> which can basically</font>

478
00:22:47,770 --> 00:22:53,950
use<font color="#CCCCCC"> that interface to connect with the</font>

479
00:22:50,620 --> 00:22:57,159
<font color="#E5E5E5">model and</font><font color="#CCCCCC"> to see like all of these air</font>

480
00:22:53,950 --> 00:22:59,530
packet in the<font color="#E5E5E5"> fly or</font><font color="#CCCCCC"> something but I</font>

481
00:22:57,160 --> 00:23:02,500
<font color="#E5E5E5">have no idea how to trigger this from a</font>

482
00:22:59,530 --> 00:23:05,700
normal<font color="#CCCCCC"> like USB</font><font color="#E5E5E5"> modem interface okay</font>

483
00:23:02,500 --> 00:23:05,700
cool thanks thanks

