1
00:00:10,160 --> 00:00:14,510
hello everyone I'm hung<font color="#E5E5E5"> out from</font>

2
00:00:12,440 --> 00:00:17,480
Princeton<font color="#CCCCCC"> University</font><font color="#E5E5E5"> and we're glad</font><font color="#CCCCCC"> to</font>

3
00:00:14,510 --> 00:00:19,580
<font color="#E5E5E5">be here to present our</font><font color="#CCCCCC"> work</font><font color="#E5E5E5"> on enabling</font>

4
00:00:17,480 --> 00:00:21,890
real-time<font color="#E5E5E5"> abnormal system different</font>

5
00:00:19,580 --> 00:00:24,439
direction<font color="#E5E5E5"> to enhance it to enhance</font>

6
00:00:21,890 --> 00:00:26,599
enterprise security<font color="#E5E5E5"> this work was done</font>

7
00:00:24,439 --> 00:00:28,099
<font color="#CCCCCC">in collaboration with</font><font color="#E5E5E5"> Professor Susan</font>

8
00:00:26,599 --> 00:00:30,140
Shaw from Case Western Reserve

9
00:00:28,099 --> 00:00:33,140
University and colleagues from

10
00:00:30,140 --> 00:00:35,510
<font color="#E5E5E5">insalubrious America my advisers are</font>

11
00:00:33,140 --> 00:00:39,649
professor<font color="#E5E5E5"> Sanjeev Kulkarni and professor</font>

12
00:00:35,510 --> 00:00:41,989
<font color="#CCCCCC">practicum Ito today we got</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> and more</font>

13
00:00:39,649 --> 00:00:43,820
<font color="#E5E5E5">breaking news about cyber attacks</font><font color="#CCCCCC"> for</font>

14
00:00:41,989 --> 00:00:46,339
example the Equifax data breach

15
00:00:43,820 --> 00:00:50,360
happening<font color="#E5E5E5"> in last</font><font color="#CCCCCC"> a year</font><font color="#E5E5E5"> has disclosed</font>

16
00:00:46,340 --> 00:00:54,500
the sensitive<font color="#E5E5E5"> information of Iran's 143</font>

17
00:00:50,360 --> 00:00:56,930
million<font color="#CCCCCC"> u.s. customers besides more and</font>

18
00:00:54,500 --> 00:00:59,180
more large<font color="#E5E5E5"> companies that</font><font color="#CCCCCC"> have well</font>

19
00:00:56,930 --> 00:01:01,340
protected businesses suffer from great

20
00:00:59,180 --> 00:01:03,680
financial losses due to<font color="#CCCCCC"> this attacks</font>

21
00:01:01,340 --> 00:01:06,250
<font color="#E5E5E5">this advanced the</font><font color="#CCCCCC"> persistent stress</font>

22
00:01:03,680 --> 00:01:08,630
attacks namely a<font color="#E5E5E5"> PT's</font><font color="#CCCCCC"> language</font>

23
00:01:06,250 --> 00:01:11,060
sophisticated techniques<font color="#E5E5E5"> to exploit</font>

24
00:01:08,630 --> 00:01:13,908
multiple vulnerabilities in the system

25
00:01:11,060 --> 00:01:16,640
besides due to strong<font color="#E5E5E5"> economical or</font>

26
00:01:13,909 --> 00:01:18,710
political motives adversary's<font color="#E5E5E5"> are</font>

27
00:01:16,640 --> 00:01:22,700
continuously monitoring the target and

28
00:01:18,710 --> 00:01:25,579
<font color="#E5E5E5">trying to steal valuable data here is a</font>

29
00:01:22,700 --> 00:01:27,770
<font color="#E5E5E5">typical setup for the AVG attack the</font>

30
00:01:25,579 --> 00:01:30,380
goal of the attack is to steal the data

31
00:01:27,770 --> 00:01:32,600
stored<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the database server in order</font>

32
00:01:30,380 --> 00:01:34,759
<font color="#CCCCCC">to achieve this goal the attack first</font>

33
00:01:32,600 --> 00:01:37,189
<font color="#E5E5E5">conduct an initial compromised by</font>

34
00:01:34,759 --> 00:01:40,670
sending a crafting email to the victim

35
00:01:37,189 --> 00:01:44,630
<font color="#E5E5E5">the email has a attachment which has a</font>

36
00:01:40,670 --> 00:01:46,039
malicious<font color="#CCCCCC"> Peck</font><font color="#E5E5E5"> micro embedded the victim</font>

37
00:01:44,630 --> 00:01:48,350
the opens the email

38
00:01:46,039 --> 00:01:51,200
clicks the attachment<font color="#CCCCCC"> and Reza macro</font>

39
00:01:48,350 --> 00:01:54,439
which downloads<font color="#CCCCCC"> and excuse</font><font color="#E5E5E5"> a malware to</font>

40
00:01:51,200 --> 00:01:55,159
create<font color="#E5E5E5"> a backdoor to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> attacker with</font>

41
00:01:54,439 --> 00:01:57,139
the backdoor

42
00:01:55,159 --> 00:01:59,689
the attacker<font color="#E5E5E5"> penetrates into</font><font color="#CCCCCC"> the</font>

43
00:01:57,139 --> 00:02:01,490
internal<font color="#CCCCCC"> host</font><font color="#E5E5E5"> and runs the database</font>

44
00:01:59,689 --> 00:02:04,969
<font color="#E5E5E5">Kraken choose to obtain database</font>

45
00:02:01,490 --> 00:02:07,219
credentials<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> credentials that</font>

46
00:02:04,969 --> 00:02:10,190
<font color="#E5E5E5">hacker</font><font color="#CCCCCC"> then penetrates into the database</font>

47
00:02:07,219 --> 00:02:13,640
server<font color="#E5E5E5"> and drops another malware to</font>

48
00:02:10,190 --> 00:02:15,590
create another backdoor<font color="#E5E5E5"> finally the</font>

49
00:02:13,640 --> 00:02:18,170
<font color="#E5E5E5">hacker runs the database</font><font color="#CCCCCC"> Duncan choose</font>

50
00:02:15,590 --> 00:02:19,940
to dump the database<font color="#E5E5E5"> content and send</font>

51
00:02:18,170 --> 00:02:21,950
the data back<font color="#CCCCCC"> to his hosts</font>

52
00:02:19,940 --> 00:02:23,870
through<font color="#E5E5E5"> the backdoor created in the</font>

53
00:02:21,950 --> 00:02:28,640
previous step this completes<font color="#E5E5E5"> the</font>

54
00:02:23,870 --> 00:02:30,590
<font color="#E5E5E5">her</font><font color="#CCCCCC"> apt sequence as we can see these apt</font>

55
00:02:28,640 --> 00:02:32,899
attacks are very<font color="#E5E5E5"> sophisticated</font>

56
00:02:30,590 --> 00:02:35,090
they involve multiple steps<font color="#E5E5E5"> exploiting</font>

57
00:02:32,900 --> 00:02:37,280
different types of vulnerabilities in

58
00:02:35,090 --> 00:02:41,120
the system which activates different

59
00:02:37,280 --> 00:02:44,930
abnormal system<font color="#CCCCCC"> behaviors for</font><font color="#E5E5E5"> example in</font>

60
00:02:41,120 --> 00:02:47,629
the steps<font color="#E5E5E5"> III the process the program</font><font color="#CCCCCC"> T</font>

61
00:02:44,930 --> 00:02:50,810
<font color="#CCCCCC">SEC Tom DeLay</font><font color="#E5E5E5"> XE was started by command</font>

62
00:02:47,629 --> 00:02:54,590
on exe may be known to some<font color="#E5E5E5"> security</font>

63
00:02:50,810 --> 00:02:56,480
<font color="#E5E5E5">analysts besides there</font><font color="#CCCCCC"> exist abnormally</font>

64
00:02:54,590 --> 00:03:00,890
large transfers on the database<font color="#E5E5E5"> server</font>

65
00:02:56,480 --> 00:03:05,899
and there exists some abnormal process

66
00:03:00,890 --> 00:03:08,569
creations<font color="#E5E5E5"> on the on the client for</font>

67
00:03:05,900 --> 00:03:11,569
<font color="#E5E5E5">example here this</font><font color="#CCCCCC"> excel dot exe star</font>

68
00:03:08,569 --> 00:03:14,119
traveled<font color="#E5E5E5"> exe which obviously is very</font>

69
00:03:11,569 --> 00:03:18,980
<font color="#E5E5E5">suspicious</font><font color="#CCCCCC"> because it</font><font color="#E5E5E5"> shall never Stasi</font>

70
00:03:14,120 --> 00:03:21,440
Allah since this suspicious or abnormal

71
00:03:18,980 --> 00:03:23,750
<font color="#E5E5E5">behaviour could happen on any host in</font>

72
00:03:21,440 --> 00:03:26,239
their<font color="#E5E5E5"> enterprise ranging from employ</font>

73
00:03:23,750 --> 00:03:28,340
stations to the<font color="#CCCCCC"> servers we need</font>

74
00:03:26,239 --> 00:03:31,639
solutions that can record all the

75
00:03:28,340 --> 00:03:34,400
<font color="#E5E5E5">underlying behaviour of the system this</font>

76
00:03:31,639 --> 00:03:37,549
leads to the idea of ubiquitous system

77
00:03:34,400 --> 00:03:39,470
monitoring system monitoring collects

78
00:03:37,549 --> 00:03:42,440
<font color="#CCCCCC">the information</font><font color="#E5E5E5"> about system calls from</font>

79
00:03:39,470 --> 00:03:45,230
dirt from<font color="#CCCCCC"> kernels</font><font color="#E5E5E5"> the audit logs</font>

80
00:03:42,440 --> 00:03:48,790
produced<font color="#E5E5E5"> has a unified structure which</font>

81
00:03:45,230 --> 00:03:53,149
is<font color="#E5E5E5"> not bound to specific applications</font>

82
00:03:48,790 --> 00:03:55,069
<font color="#E5E5E5">this logs records how I recall the</font>

83
00:03:53,150 --> 00:03:57,620
<font color="#CCCCCC">information about how</font><font color="#E5E5E5"> applications</font>

84
00:03:55,069 --> 00:03:59,750
interact with system resources such as

85
00:03:57,620 --> 00:04:03,549
sales processes and the network

86
00:03:59,750 --> 00:04:06,019
connections in the form of system<font color="#E5E5E5"> events</font>

87
00:04:03,549 --> 00:04:08,690
<font color="#CCCCCC">recognising the need for</font><font color="#E5E5E5"> a family</font>

88
00:04:06,019 --> 00:04:11,510
<font color="#E5E5E5">anomaly detection and the complexity for</font>

89
00:04:08,690 --> 00:04:13,940
the<font color="#CCCCCC"> apts hack we propose to</font><font color="#E5E5E5"> leverage</font>

90
00:04:11,510 --> 00:04:16,579
stream processing and continuous queries

91
00:04:13,940 --> 00:04:20,298
to enable the<font color="#E5E5E5"> real-time abnormal system</font>

92
00:04:16,579 --> 00:04:22,520
behavior detection building search

93
00:04:20,298 --> 00:04:25,250
system requires us to solve two major

94
00:04:22,520 --> 00:04:27,859
challenges<font color="#E5E5E5"> first the system has</font><font color="#CCCCCC"> to</font>

95
00:04:25,250 --> 00:04:31,000
provide a expressive and conscious

96
00:04:27,860 --> 00:04:33,979
interface<font color="#E5E5E5"> to express a broad set of</font>

97
00:04:31,000 --> 00:04:36,409
abnormal behaviors these behaviors

98
00:04:33,979 --> 00:04:37,310
<font color="#CCCCCC">involving clewd</font><font color="#E5E5E5"> the rule-based the</font>

99
00:04:36,409 --> 00:04:40,450
behaviors

100
00:04:37,310 --> 00:04:43,820
<font color="#CCCCCC">so as the advanced anomaly</font><font color="#E5E5E5"> behaviour</font>

101
00:04:40,450 --> 00:04:46,640
besides system<font color="#E5E5E5"> monitoring produces huge</font>

102
00:04:43,820 --> 00:04:48,980
<font color="#E5E5E5">amount of daily logs for example in</font><font color="#CCCCCC"> the</font>

103
00:04:46,640 --> 00:04:52,099
typical lab environments consisting of

104
00:04:48,980 --> 00:04:54,740
100<font color="#E5E5E5"> hosts the amount of logs produced</font>

105
00:04:52,100 --> 00:04:59,420
<font color="#E5E5E5">would be around 50 gigabytes with the</font>

106
00:04:54,740 --> 00:05:03,140
throughput<font color="#E5E5E5"> around 250 for 2005 handle</font>

107
00:04:59,420 --> 00:05:04,970
events per second besides the stream the

108
00:05:03,140 --> 00:05:07,640
streaming scenario may introduce

109
00:05:04,970 --> 00:05:10,330
<font color="#E5E5E5">multiple concurrent chorus in execution</font>

110
00:05:07,640 --> 00:05:13,610
which may incur considerable or had

111
00:05:10,330 --> 00:05:15,560
therefore<font color="#E5E5E5"> building a system that</font><font color="#CCCCCC"> enables</font>

112
00:05:13,610 --> 00:05:17,510
real-time analytics<font color="#CCCCCC"> over this</font>

113
00:05:15,560 --> 00:05:22,520
<font color="#CCCCCC">large-scale</font><font color="#E5E5E5"> stream data is quite</font>

114
00:05:17,510 --> 00:05:24,409
<font color="#E5E5E5">challenging</font><font color="#CCCCCC"> in the audit log and</font>

115
00:05:22,520 --> 00:05:26,870
forensics today's existing works

116
00:05:24,410 --> 00:05:29,660
primarily<font color="#E5E5E5"> work on</font><font color="#CCCCCC"> reducing the size of</font>

117
00:05:26,870 --> 00:05:32,870
<font color="#E5E5E5">the</font><font color="#CCCCCC"> data and improving the precision of</font>

118
00:05:29,660 --> 00:05:36,770
the<font color="#CCCCCC"> causality</font><font color="#E5E5E5"> analysis but there</font><font color="#CCCCCC"> exists</font>

119
00:05:32,870 --> 00:05:39,650
<font color="#CCCCCC">their legs</font><font color="#E5E5E5"> unified tool or platform to</font>

120
00:05:36,770 --> 00:05:42,140
query the data efficiently<font color="#E5E5E5"> recognizing</font>

121
00:05:39,650 --> 00:05:44,239
such<font color="#E5E5E5"> immunization in this work we build</font>

122
00:05:42,140 --> 00:05:47,090
a<font color="#E5E5E5"> normal stream query system for</font>

123
00:05:44,240 --> 00:05:49,160
abnormal system behavior detection<font color="#E5E5E5"> our</font>

124
00:05:47,090 --> 00:05:52,340
system was<font color="#E5E5E5"> built on</font><font color="#CCCCCC"> top of existing</font>

125
00:05:49,160 --> 00:05:54,860
<font color="#E5E5E5">tools and our system provides a</font>

126
00:05:52,340 --> 00:05:57,679
domain-specific query language<font color="#E5E5E5"> namely a</font>

127
00:05:54,860 --> 00:06:00,530
sequel<font color="#E5E5E5"> or stream anomaly stream based</font>

128
00:05:57,680 --> 00:06:04,010
anomaly query language<font color="#E5E5E5"> that can enable</font>

129
00:06:00,530 --> 00:06:05,900
users to<font color="#E5E5E5"> specify a broad set of attack</font>

130
00:06:04,010 --> 00:06:09,349
behaviors using<font color="#E5E5E5"> the specialized</font>

131
00:06:05,900 --> 00:06:12,049
<font color="#E5E5E5">constructs for security besides we build</font>

132
00:06:09,350 --> 00:06:16,340
our query execution engine<font color="#E5E5E5"> to enable the</font>

133
00:06:12,050 --> 00:06:18,500
<font color="#E5E5E5">fast execution of the stream queries we</font>

134
00:06:16,340 --> 00:06:21,440
deploy data monitoring<font color="#E5E5E5"> our data</font>

135
00:06:18,500 --> 00:06:25,130
collection agents on every<font color="#CCCCCC"> hosta in the</font>

136
00:06:21,440 --> 00:06:27,740
<font color="#E5E5E5">enterprise</font><font color="#CCCCCC"> our agents collect critical</font>

137
00:06:25,130 --> 00:06:33,350
<font color="#E5E5E5">attributes from system and</font><font color="#CCCCCC"> test and</font>

138
00:06:27,740 --> 00:06:36,410
system activities our language<font color="#E5E5E5"> supposed</font>

139
00:06:33,350 --> 00:06:39,560
roughly four types of<font color="#E5E5E5"> unknown</font><font color="#CCCCCC"> e anomaly</font>

140
00:06:36,410 --> 00:06:42,320
models this rule based<font color="#E5E5E5"> on only specify</font>

141
00:06:39,560 --> 00:06:44,720
the behavior rules of system activities

142
00:06:42,320 --> 00:06:46,969
<font color="#E5E5E5">for example in this single event query</font>

143
00:06:44,720 --> 00:06:49,970
we first define<font color="#CCCCCC"> the event pattern that</font>

144
00:06:46,970 --> 00:06:50,770
<font color="#E5E5E5">this process restore file and the file</font>

145
00:06:49,970 --> 00:06:54,789
name<font color="#E5E5E5"> could</font>

146
00:06:50,770 --> 00:06:57,039
either of<font color="#CCCCCC"> these history fails and then</font>

147
00:06:54,789 --> 00:07:00,150
in the return<font color="#CCCCCC"> calls</font><font color="#E5E5E5"> we return these are</font>

148
00:06:57,039 --> 00:07:03,759
<font color="#E5E5E5">the attributes from the</font><font color="#CCCCCC"> matched</font><font color="#E5E5E5"> events</font>

149
00:07:00,150 --> 00:07:05,948
besides<font color="#E5E5E5"> this is the</font><font color="#CCCCCC"> Rubies</font><font color="#E5E5E5"> the motive</font>

150
00:07:03,759 --> 00:07:09,910
<font color="#E5E5E5">and</font><font color="#CCCCCC"> curry which we defend multiple burn</font>

151
00:07:05,949 --> 00:07:13,120
patterns the<font color="#E5E5E5"> global</font><font color="#CCCCCC"> constraints enforces</font>

152
00:07:09,910 --> 00:07:17,050
the constraints which all of the event

153
00:07:13,120 --> 00:07:19,750
patterns food<font color="#E5E5E5"> satisfy and then we</font><font color="#CCCCCC"> defend</font>

154
00:07:17,050 --> 00:07:23,319
<font color="#E5E5E5">the event patterns successively in the</font>

155
00:07:19,750 --> 00:07:25,210
form of subtract operation<font color="#CCCCCC"> object with</font>

156
00:07:23,319 --> 00:07:29,110
certain attributes<font color="#CCCCCC"> to constrain the</font>

157
00:07:25,210 --> 00:07:31,568
<font color="#E5E5E5">search and then in this</font><font color="#CCCCCC"> whisk</font><font color="#E5E5E5"> house we</font>

158
00:07:29,110 --> 00:07:33,699
define the temporal relationships among

159
00:07:31,569 --> 00:07:35,770
<font color="#E5E5E5">this edge among these events basically</font>

160
00:07:33,699 --> 00:07:37,870
<font color="#E5E5E5">the event one should her happen first</font>

161
00:07:35,770 --> 00:07:42,340
<font color="#E5E5E5">then eventually the events leading event</font>

162
00:07:37,870 --> 00:07:44,310
for and we also<font color="#E5E5E5"> support the attribute</font>

163
00:07:42,340 --> 00:07:47,590
relationship specification other

164
00:07:44,310 --> 00:07:50,380
explicitly or implicitly<font color="#E5E5E5"> in this example</font>

165
00:07:47,590 --> 00:07:53,820
notice<font color="#E5E5E5"> that we</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> the same symbol</font><font color="#CCCCCC"> F 1</font>

166
00:07:50,380 --> 00:07:56,530
for both<font color="#E5E5E5"> of the two</font><font color="#CCCCCC"> events that</font>

167
00:07:53,820 --> 00:07:59,560
implicitly means<font color="#E5E5E5"> that the entities</font>

168
00:07:56,530 --> 00:08:02,320
referred by<font color="#CCCCCC"> this F 1 are the</font><font color="#E5E5E5"> same and</font>

169
00:07:59,560 --> 00:08:04,870
also<font color="#E5E5E5"> we support a</font><font color="#CCCCCC"> lot of syntax</font>

170
00:08:02,320 --> 00:08:07,479
shortcuts<font color="#E5E5E5"> so for example the context</font>

171
00:08:04,870 --> 00:08:11,400
aware attribute inference to make the

172
00:08:07,479 --> 00:08:13,900
curry more concepts and friendly to use

173
00:08:11,400 --> 00:08:16,299
besides<font color="#E5E5E5"> the simple rule</font><font color="#CCCCCC"> based the</font>

174
00:08:13,900 --> 00:08:18,130
<font color="#CCCCCC">anomalous</font><font color="#E5E5E5"> time-series anomalies are</font>

175
00:08:16,300 --> 00:08:22,509
useful to detect the things such as

176
00:08:18,130 --> 00:08:25,360
<font color="#CCCCCC">Network specs in the time series among</font>

177
00:08:22,509 --> 00:08:28,030
anomalies<font color="#E5E5E5"> we provide we proposed the</font>

178
00:08:25,360 --> 00:08:30,099
idea of sliding<font color="#E5E5E5"> windows in which we</font>

179
00:08:28,030 --> 00:08:34,539
partition the<font color="#E5E5E5"> stream into different</font>

180
00:08:30,099 --> 00:08:37,479
slides<font color="#E5E5E5"> and we know normally proposed the</font>

181
00:08:34,539 --> 00:08:40,539
idea of<font color="#E5E5E5"> stateful computation</font><font color="#CCCCCC"> over the</font>

182
00:08:37,479 --> 00:08:43,329
sliding windows<font color="#CCCCCC"> a</font><font color="#E5E5E5"> state is simply the</font>

183
00:08:40,539 --> 00:08:45,670
set of aggregation values and notice

184
00:08:43,328 --> 00:08:48,969
that<font color="#CCCCCC"> for different</font><font color="#E5E5E5"> windows the state may</font>

185
00:08:45,670 --> 00:08:51,069
change and then we<font color="#CCCCCC"> mentioned the poster</font>

186
00:08:48,970 --> 00:08:53,110
current state<font color="#E5E5E5"> namely the current values</font>

187
00:08:51,070 --> 00:08:55,829
in the current window<font color="#CCCCCC"> as well</font><font color="#E5E5E5"> as the</font>

188
00:08:53,110 --> 00:08:59,250
<font color="#E5E5E5">previous state or the history</font><font color="#CCCCCC"> States</font>

189
00:08:55,829 --> 00:09:03,010
using these<font color="#E5E5E5"> states we can compose or</font>

190
00:08:59,250 --> 00:09:04,149
complex time series anomaly models in

191
00:09:03,010 --> 00:09:06,520
this

192
00:09:04,149 --> 00:09:08,200
for example here<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is a simple moving</font>

193
00:09:06,520 --> 00:09:12,520
average model for the network

194
00:09:08,200 --> 00:09:14,290
speculation on the<font color="#CCCCCC"> cycle server we</font>

195
00:09:12,520 --> 00:09:17,319
further extend the stateful computation

196
00:09:14,290 --> 00:09:19,839
syntax to support the<font color="#CCCCCC"> invariant based on</font>

197
00:09:17,320 --> 00:09:21,540
<font color="#E5E5E5">omelets the idea is that we want</font><font color="#CCCCCC"> to</font>

198
00:09:19,839 --> 00:09:24,360
enable the specification of the

199
00:09:21,540 --> 00:09:26,709
<font color="#E5E5E5">violations for the system immigrants</font>

200
00:09:24,360 --> 00:09:29,770
notice that here we have an invariant

201
00:09:26,709 --> 00:09:32,890
<font color="#E5E5E5">block after</font><font color="#CCCCCC"> the state block in</font><font color="#E5E5E5"> which we</font>

202
00:09:29,770 --> 00:09:36,750
defended an environment<font color="#CCCCCC"> here is a set of</font>

203
00:09:32,890 --> 00:09:40,149
child process of the<font color="#CCCCCC"> Apache process</font>

204
00:09:36,750 --> 00:09:43,209
between the<font color="#E5E5E5"> variants for</font><font color="#CCCCCC"> ten windows and</font>

205
00:09:40,149 --> 00:09:45,760
<font color="#CCCCCC">the wage hike for the further windows</font><font color="#E5E5E5"> if</font>

206
00:09:43,209 --> 00:09:48,459
there exists a process that does<font color="#CCCCCC"> not</font>

207
00:09:45,760 --> 00:09:51,130
that is<font color="#CCCCCC"> not</font><font color="#E5E5E5"> included in the event namely</font>

208
00:09:48,459 --> 00:09:55,839
the<font color="#CCCCCC"> Urich in the environment namely</font><font color="#E5E5E5"> the</font>

209
00:09:51,130 --> 00:09:58,420
<font color="#CCCCCC">invariant violation using this query we</font>

210
00:09:55,839 --> 00:10:00,970
<font color="#E5E5E5">can check if a party starts some</font>

211
00:09:58,420 --> 00:10:03,189
unexpected<font color="#E5E5E5"> child process for example</font>

212
00:10:00,970 --> 00:10:05,649
batch<font color="#E5E5E5"> there is namely this is namely the</font>

213
00:10:03,190 --> 00:10:07,870
batch<font color="#E5E5E5"> bash shell shell command injection</font>

214
00:10:05,649 --> 00:10:09,300
attack<font color="#CCCCCC"> which we included</font><font color="#E5E5E5"> in the case</font>

215
00:10:07,870 --> 00:10:12,160
study

216
00:10:09,300 --> 00:10:14,740
<font color="#E5E5E5">besides the comparison to the history</font>

217
00:10:12,160 --> 00:10:17,020
<font color="#CCCCCC">states using the</font><font color="#E5E5E5"> ham series models we</font>

218
00:10:14,740 --> 00:10:19,720
also<font color="#E5E5E5"> support the comparison to peer</font>

219
00:10:17,020 --> 00:10:22,990
<font color="#CCCCCC">states</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> the outlier based on ami</font>

220
00:10:19,720 --> 00:10:25,240
models we<font color="#E5E5E5"> have the cluster definition we</font>

221
00:10:22,990 --> 00:10:26,950
define the points that makes this

222
00:10:25,240 --> 00:10:29,500
cluster<font color="#E5E5E5"> and we define the distance</font>

223
00:10:26,950 --> 00:10:31,990
measured we defend the classroom<font color="#E5E5E5"> method</font>

224
00:10:29,500 --> 00:10:34,690
and then we can use the classroom

225
00:10:31,990 --> 00:10:37,480
<font color="#E5E5E5">results</font><font color="#CCCCCC"> edits in the</font><font color="#E5E5E5"> alert class and</font>

226
00:10:34,690 --> 00:10:41,770
specify that<font color="#E5E5E5"> we only want to return the</font>

227
00:10:37,480 --> 00:10:43,810
outlier outlier<font color="#E5E5E5"> events namely this</font><font color="#CCCCCC"> is</font>

228
00:10:41,770 --> 00:10:45,790
still the<font color="#E5E5E5"> sinkhole this is still the</font>

229
00:10:43,810 --> 00:10:48,130
direction of the abnormally large data

230
00:10:45,790 --> 00:10:50,050
transfer on the<font color="#E5E5E5"> single server but here</font>

231
00:10:48,130 --> 00:10:54,579
we<font color="#CCCCCC"> compare with peer values now the</font>

232
00:10:50,050 --> 00:10:57,490
history<font color="#E5E5E5"> values the execution of a cycle</font>

233
00:10:54,579 --> 00:10:59,739
consists of four stages<font color="#CCCCCC"> in the first</font>

234
00:10:57,490 --> 00:11:02,020
stage we<font color="#E5E5E5"> match the stream against the</font>

235
00:10:59,740 --> 00:11:05,470
<font color="#CCCCCC">dimaggio</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> peasants defined with</font>

236
00:11:02,020 --> 00:11:07,990
certain attribute constraints then if

237
00:11:05,470 --> 00:11:10,149
there exists a stateful<font color="#CCCCCC"> computation</font>

238
00:11:07,990 --> 00:11:12,569
block<font color="#E5E5E5"> then we compute and</font><font color="#CCCCCC"> maintain the</font>

239
00:11:10,149 --> 00:11:15,430
<font color="#E5E5E5">states over sliding windows</font>

240
00:11:12,569 --> 00:11:17,469
next we compute the large boolean

241
00:11:15,430 --> 00:11:20,560
expression for the alert<font color="#CCCCCC"> condition and</font>

242
00:11:17,470 --> 00:11:24,550
check if the events<font color="#E5E5E5"> pass or fail this</font>

243
00:11:20,560 --> 00:11:27,099
expression<font color="#CCCCCC"> finally we return</font><font color="#E5E5E5"> the desired</font>

244
00:11:24,550 --> 00:11:32,008
<font color="#E5E5E5">attributes from the match the events and</font>

245
00:11:27,100 --> 00:11:34,899
<font color="#CCCCCC">enforced further filters</font><font color="#E5E5E5"> if necessary</font>

246
00:11:32,009 --> 00:11:36,630
previously we mentioned<font color="#E5E5E5"> that a challenge</font>

247
00:11:34,899 --> 00:11:39,220
for the streaming scenario is to

248
00:11:36,630 --> 00:11:39,910
<font color="#CCCCCC">efficiently handle the concurrent query</font>

249
00:11:39,220 --> 00:11:42,819
execution

250
00:11:39,910 --> 00:11:44,949
our idea<font color="#E5E5E5"> is that we</font><font color="#CCCCCC"> can share the</font>

251
00:11:42,819 --> 00:11:47,469
intermediate execution results among

252
00:11:44,949 --> 00:11:50,740
<font color="#E5E5E5">Chris so that we can avoid some</font>

253
00:11:47,470 --> 00:11:53,410
unnecessary danger caucus we<font color="#E5E5E5"> propose the</font>

254
00:11:50,740 --> 00:11:56,079
master<font color="#CCCCCC"> dependent chris game in which we</font>

255
00:11:53,410 --> 00:11:58,089
partition the<font color="#E5E5E5"> concurrent</font><font color="#CCCCCC"> chorus into</font>

256
00:11:56,079 --> 00:12:01,329
master<font color="#E5E5E5"> dependent groups based on their</font>

257
00:11:58,089 --> 00:12:03,399
similarities of semantics<font color="#CCCCCC"> and only the</font>

258
00:12:01,329 --> 00:12:06,099
master<font color="#CCCCCC"> Cree has</font><font color="#E5E5E5"> direct access</font><font color="#CCCCCC"> to the</font>

259
00:12:03,399 --> 00:12:08,350
stream<font color="#E5E5E5"> the execution of the dependent</font>

260
00:12:06,100 --> 00:12:10,930
queries depends on the execution<font color="#CCCCCC"> of the</font>

261
00:12:08,350 --> 00:12:13,209
<font color="#CCCCCC">master Cree and it will fetch</font><font color="#E5E5E5"> the</font>

262
00:12:10,930 --> 00:12:15,609
intermediate execution results from the

263
00:12:13,209 --> 00:12:18,609
master a pure master master<font color="#CCCCCC"> curry</font>

264
00:12:15,610 --> 00:12:20,649
<font color="#CCCCCC">exclusion pattern</font><font color="#E5E5E5"> to its own</font><font color="#CCCCCC"> pepin</font><font color="#E5E5E5"> right</font>

265
00:12:18,610 --> 00:12:23,620
now we<font color="#E5E5E5"> have done this</font><font color="#CCCCCC"> tearing up</font><font color="#E5E5E5"> to the</font>

266
00:12:20,649 --> 00:12:26,230
two stages<font color="#CCCCCC"> from</font><font color="#E5E5E5"> the event</font><font color="#CCCCCC"> mention stage</font>

267
00:12:23,620 --> 00:12:28,959
to the stateful computation stage and we

268
00:12:26,230 --> 00:12:31,870
will leave the sharing for further

269
00:12:28,959 --> 00:12:34,060
<font color="#E5E5E5">stages in the future work in this simple</font>

270
00:12:31,870 --> 00:12:36,399
<font color="#CCCCCC">example we have to depend</font><font color="#E5E5E5"> on queries</font>

271
00:12:34,060 --> 00:12:39,609
which we defend the state's<font color="#E5E5E5"> blog but</font>

272
00:12:36,399 --> 00:12:41,380
have different<font color="#E5E5E5"> state aggregations so the</font>

273
00:12:39,610 --> 00:12:43,120
query<font color="#E5E5E5"> one has the state for the</font>

274
00:12:41,380 --> 00:12:45,250
<font color="#E5E5E5">aggregation for the count and the</font>

275
00:12:43,120 --> 00:12:47,259
creature has the<font color="#CCCCCC"> stamp and in the</font>

276
00:12:45,250 --> 00:12:49,660
massacre<font color="#E5E5E5"> a way compute the poster</font>

277
00:12:47,259 --> 00:12:52,029
Kannada<font color="#CCCCCC"> sum therefore</font><font color="#E5E5E5"> we can leverage</font>

278
00:12:49,660 --> 00:12:54,730
the<font color="#E5E5E5"> intermediate execution results of</font>

279
00:12:52,029 --> 00:12:56,610
the master curry to execute the

280
00:12:54,730 --> 00:13:00,189
<font color="#E5E5E5">dependent Chris</font>

281
00:12:56,610 --> 00:13:03,839
so we<font color="#E5E5E5"> conduct a case study of a series</font>

282
00:13:00,189 --> 00:13:06,759
of major attack<font color="#E5E5E5"> major types of attacks</font>

283
00:13:03,839 --> 00:13:09,160
we<font color="#E5E5E5"> deploy our system in many</font>

284
00:13:06,759 --> 00:13:13,449
laboratories<font color="#E5E5E5"> America consisting of</font>

285
00:13:09,160 --> 00:13:19,089
<font color="#CCCCCC">around 150 host which and use the data</font>

286
00:13:13,449 --> 00:13:21,849
up to<font color="#E5E5E5"> 1.1 terabytes of data around 3.3</font>

287
00:13:19,089 --> 00:13:24,309
billion events<font color="#E5E5E5"> with events reporter on</font>

288
00:13:21,850 --> 00:13:26,710
<font color="#E5E5E5">three thousand</font><font color="#CCCCCC"> seven hundred</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> fifty</font>

289
00:13:24,309 --> 00:13:28,870
events<font color="#CCCCCC"> per say</font>

290
00:13:26,710 --> 00:13:32,470
in total we constructed seven queries

291
00:13:28,870 --> 00:13:35,530
and the way for four types of attack

292
00:13:32,470 --> 00:13:37,360
<font color="#CCCCCC">behaviors we have done the AP</font><font color="#E5E5E5"> attack and</font>

293
00:13:35,530 --> 00:13:39,699
then we have done<font color="#E5E5E5"> the sequel injection</font>

294
00:13:37,360 --> 00:13:41,440
attack<font color="#E5E5E5"> within the within the best</font>

295
00:13:39,700 --> 00:13:43,900
<font color="#CCCCCC">shellshock command injection attack as</font>

296
00:13:41,440 --> 00:13:48,490
well<font color="#E5E5E5"> as several suspicious system</font>

297
00:13:43,900 --> 00:13:50,800
<font color="#CCCCCC">behaviors such as the USB USB usage the</font>

298
00:13:48,490 --> 00:13:56,050
command history<font color="#E5E5E5"> probing or the password</font>

299
00:13:50,800 --> 00:14:00,280
file accesses this is<font color="#CCCCCC"> the execution</font>

300
00:13:56,050 --> 00:14:02,620
statistics for the photo queries and<font color="#E5E5E5"> we</font>

301
00:14:00,280 --> 00:14:04,959
married<font color="#CCCCCC"> basically</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> was all of the</font>

302
00:14:02,620 --> 00:14:07,360
<font color="#E5E5E5">latest courts include</font><font color="#CCCCCC"> poster rule based</font>

303
00:14:04,960 --> 00:14:09,760
<font color="#E5E5E5">queries</font><font color="#CCCCCC"> as far as the advanced</font><font color="#E5E5E5"> anomaly</font>

304
00:14:07,360 --> 00:14:12,610
Chris<font color="#E5E5E5"> and we measure several statistics</font>

305
00:14:09,760 --> 00:14:15,100
<font color="#E5E5E5">the general</font><font color="#CCCCCC"> highlight will kick take</font>

306
00:14:12,610 --> 00:14:17,860
away from this chart<font color="#E5E5E5"> is that all of</font>

307
00:14:15,100 --> 00:14:20,560
these queries<font color="#E5E5E5"> can finish within two</font>

308
00:14:17,860 --> 00:14:25,750
<font color="#E5E5E5">seconds which means that the system</font>

309
00:14:20,560 --> 00:14:28,060
latency is relatively small<font color="#CCCCCC"> besides we</font>

310
00:14:25,750 --> 00:14:30,820
did some pressure<font color="#E5E5E5"> test and we want to</font>

311
00:14:28,060 --> 00:14:34,089
understand<font color="#E5E5E5"> so we want to understand how</font>

312
00:14:30,820 --> 00:14:36,330
<font color="#CCCCCC">many enterprise</font><font color="#E5E5E5"> hosts can our</font><font color="#CCCCCC"> deploy</font><font color="#E5E5E5"> the</font>

313
00:14:34,090 --> 00:14:39,570
<font color="#E5E5E5">service of hot</font><font color="#CCCCCC"> basically we deploy</font><font color="#E5E5E5"> our</font>

314
00:14:36,330 --> 00:14:43,930
<font color="#E5E5E5">it's just a normal server with around</font>

315
00:14:39,570 --> 00:14:47,650
128 gigabytes of memory and tribe horse

316
00:14:43,930 --> 00:14:51,849
so we continuously increase the data

317
00:14:47,650 --> 00:14:54,670
input to the server<font color="#E5E5E5"> and so that the CPU</font>

318
00:14:51,850 --> 00:14:57,850
usage<font color="#E5E5E5"> will increase when we reach the</font>

319
00:14:54,670 --> 00:15:01,420
maximum CPU usage the<font color="#E5E5E5"> system's report</font>

320
00:14:57,850 --> 00:15:04,570
turns out to be<font color="#CCCCCC"> 110,000</font><font color="#E5E5E5"> events per</font>

321
00:15:01,420 --> 00:15:07,150
second<font color="#E5E5E5"> after</font><font color="#CCCCCC"> some simple mathematics</font>

322
00:15:04,570 --> 00:15:09,190
<font color="#E5E5E5">operations we can estimate that they</font>

323
00:15:07,150 --> 00:15:12,730
<font color="#CCCCCC">deploy the server can</font><font color="#E5E5E5"> support around</font>

324
00:15:09,190 --> 00:15:16,840
<font color="#CCCCCC">4,000 house for more</font><font color="#E5E5E5"> house we can either</font>

325
00:15:12,730 --> 00:15:18,940
<font color="#E5E5E5">skill skill up by using some high higher</font>

326
00:15:16,840 --> 00:15:21,670
performance servers<font color="#CCCCCC"> or we can</font><font color="#E5E5E5"> make our</font>

327
00:15:18,940 --> 00:15:26,080
system distributed notice that this

328
00:15:21,670 --> 00:15:29,010
dream career cycle is very very natural

329
00:15:26,080 --> 00:15:33,970
<font color="#E5E5E5">to the distributed in implementation and</font>

330
00:15:29,010 --> 00:15:37,240
we will limit for future work besides we

331
00:15:33,970 --> 00:15:38,420
have the<font color="#E5E5E5"> comprehensive</font><font color="#CCCCCC"> evaluation of the</font>

332
00:15:37,240 --> 00:15:40,760
performance of our

333
00:15:38,420 --> 00:15:43,399
concurrent<font color="#E5E5E5"> career execution namely we</font>

334
00:15:40,760 --> 00:15:46,040
want to understand the<font color="#E5E5E5"> efficiencies</font>

335
00:15:43,399 --> 00:15:49,630
efficiency speed up that our master

336
00:15:46,040 --> 00:15:53,569
dependent<font color="#CCCCCC"> Curie scheme can provide so we</font>

337
00:15:49,630 --> 00:15:55,639
we have proposed several<font color="#CCCCCC"> attacking every</font>

338
00:15:53,570 --> 00:15:58,399
<font color="#CCCCCC">waste and several evaluation categories</font>

339
00:15:55,639 --> 00:16:00,829
namely<font color="#E5E5E5"> we evaluate the</font><font color="#CCCCCC"> sensing file</font>

340
00:15:58,399 --> 00:16:03,529
accesses<font color="#E5E5E5"> we evaluate the browser access</font>

341
00:16:00,829 --> 00:16:06,829
<font color="#E5E5E5">files the processes access networks and</font>

342
00:16:03,529 --> 00:16:09,199
process is born<font color="#E5E5E5"> for the evaluations in</font>

343
00:16:06,829 --> 00:16:11,510
our detailed<font color="#CCCCCC"> algorithm design we have</font>

344
00:16:09,199 --> 00:16:14,149
different<font color="#CCCCCC"> evaluation dimensions for</font>

345
00:16:11,510 --> 00:16:16,579
<font color="#E5E5E5">example</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> we can optimize on the</font>

346
00:16:14,149 --> 00:16:18,500
attribute definition we can<font color="#E5E5E5"> optimize on</font>

347
00:16:16,579 --> 00:16:20,899
the<font color="#E5E5E5"> sliding window we can optimize on</font>

348
00:16:18,500 --> 00:16:23,240
the agent ID we<font color="#E5E5E5"> can optimize on the type</font>

349
00:16:20,899 --> 00:16:25,910
<font color="#E5E5E5">of state views</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> I interested</font><font color="#CCCCCC"> feel free</font>

350
00:16:23,240 --> 00:16:28,130
to look at our paper<font color="#E5E5E5"> basically we have</font>

351
00:16:25,910 --> 00:16:31,010
<font color="#CCCCCC">four attack territories and</font><font color="#E5E5E5"> we have full</font>

352
00:16:28,130 --> 00:16:32,810
evaluation categories and the we can

353
00:16:31,010 --> 00:16:35,480
<font color="#CCCCCC">host for queries for each drawing</font>

354
00:16:32,810 --> 00:16:37,729
category based certain variations so in

355
00:16:35,480 --> 00:16:41,510
total<font color="#E5E5E5"> we have four times four</font><font color="#CCCCCC"> times</font><font color="#E5E5E5"> four</font>

356
00:16:37,730 --> 00:16:45,500
equals 64 micro benchmark<font color="#CCCCCC"> rates to</font>

357
00:16:41,510 --> 00:16:48,680
evaluate our efficiency<font color="#E5E5E5"> here is a simple</font>

358
00:16:45,500 --> 00:16:51,079
example<font color="#E5E5E5"> micro benchmark query for the</font>

359
00:16:48,680 --> 00:16:55,219
<font color="#CCCCCC">drones category</font><font color="#E5E5E5"> sensitive file accesses</font>

360
00:16:51,079 --> 00:16:58,189
<font color="#E5E5E5">and state aggregation and the below</font><font color="#CCCCCC"> is</font>

361
00:16:55,220 --> 00:17:00,829
the execution results for this query

362
00:16:58,190 --> 00:17:04,130
<font color="#E5E5E5">namely we measure the memory usage on</font>

363
00:17:00,829 --> 00:17:07,159
our server<font color="#E5E5E5"> with the number of increasing</font>

364
00:17:04,130 --> 00:17:09,410
number of<font color="#E5E5E5"> concurrent</font><font color="#CCCCCC"> chris basically we</font>

365
00:17:07,160 --> 00:17:12,230
<font color="#E5E5E5">use this figure as a default and we</font>

366
00:17:09,410 --> 00:17:14,689
reduce<font color="#E5E5E5"> the state field definition as the</font>

367
00:17:12,230 --> 00:17:16,849
<font color="#E5E5E5">second Cree and we continuously</font>

368
00:17:14,689 --> 00:17:19,490
successively<font color="#CCCCCC"> add</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> courage to our</font>

369
00:17:16,849 --> 00:17:22,339
evaluation<font color="#CCCCCC"> as you can see</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> we have</font>

370
00:17:19,490 --> 00:17:25,579
more concurrent<font color="#CCCCCC"> Chris our system</font><font color="#E5E5E5"> has a</font>

371
00:17:22,339 --> 00:17:30,049
better memory<font color="#CCCCCC"> ceiling than the popular</font>

372
00:17:25,579 --> 00:17:33,230
complex event processing<font color="#E5E5E5"> engine CD</font><font color="#CCCCCC"> in</font>

373
00:17:30,049 --> 00:17:36,049
<font color="#E5E5E5">total for all of the 64 queries we can</font>

374
00:17:33,230 --> 00:17:40,130
achieve<font color="#E5E5E5"> around three thirty percent</font>

375
00:17:36,049 --> 00:17:43,190
average<font color="#E5E5E5"> memory city besides not all</font><font color="#CCCCCC"> of</font>

376
00:17:40,130 --> 00:17:45,620
the<font color="#E5E5E5"> Chris are supported by CD but we can</font>

377
00:17:43,190 --> 00:17:48,650
support it<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> for the advanced</font>

378
00:17:45,620 --> 00:17:50,129
<font color="#E5E5E5">anomalies such as the Panzers anomalies</font>

379
00:17:48,650 --> 00:17:54,300
<font color="#E5E5E5">environment based on normally</font>

380
00:17:50,130 --> 00:17:57,090
and automobiles anomalies so once the

381
00:17:54,300 --> 00:17:59,760
<font color="#CCCCCC">alerts are</font><font color="#E5E5E5"> deducted the next step to</font>

382
00:17:57,090 --> 00:18:04,429
counter<font color="#E5E5E5"> apt attack is to investigate</font>

383
00:17:59,760 --> 00:18:07,310
<font color="#E5E5E5">this alert</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> and but however the</font>

384
00:18:04,430 --> 00:18:10,890
challenge<font color="#E5E5E5"> for the investigation</font><font color="#CCCCCC"> is that</font>

385
00:18:07,310 --> 00:18:13,050
<font color="#E5E5E5">usually is that this psycho system on</font>

386
00:18:10,890 --> 00:18:15,720
the whole system<font color="#E5E5E5"> only works on the</font>

387
00:18:13,050 --> 00:18:18,659
<font color="#E5E5E5">streaming data but the investigation</font>

388
00:18:15,720 --> 00:18:20,540
requires<font color="#E5E5E5"> us to dive deep into the</font>

389
00:18:18,660 --> 00:18:25,080
<font color="#CCCCCC">massive historical data</font>

390
00:18:20,540 --> 00:18:27,149
<font color="#CCCCCC">recognizing such need</font><font color="#E5E5E5"> we have proposed</font>

391
00:18:25,080 --> 00:18:27,510
another work<font color="#E5E5E5"> that is published in this</font>

392
00:18:27,150 --> 00:18:30,030
year's

393
00:18:27,510 --> 00:18:32,310
<font color="#CCCCCC">usenix ATC in which we build another</font>

394
00:18:30,030 --> 00:18:35,670
<font color="#E5E5E5">query system that works on the</font>

395
00:18:32,310 --> 00:18:38,190
historical<font color="#E5E5E5"> data basically and the our</font>

396
00:18:35,670 --> 00:18:40,440
system also provides<font color="#E5E5E5"> a compatible query</font>

397
00:18:38,190 --> 00:18:42,750
language that<font color="#CCCCCC"> is very</font><font color="#E5E5E5"> compatible with</font>

398
00:18:40,440 --> 00:18:44,820
this psycho query language<font color="#E5E5E5"> and we</font>

399
00:18:42,750 --> 00:18:47,430
leverage the domain specifics<font color="#E5E5E5"> to speed</font>

400
00:18:44,820 --> 00:18:49,740
<font color="#CCCCCC">up the search of complex event patterns</font>

401
00:18:47,430 --> 00:18:52,290
<font color="#CCCCCC">over the</font><font color="#E5E5E5"> historical data and compare it</font>

402
00:18:49,740 --> 00:18:53,190
with popular databases such as<font color="#CCCCCC"> squares</font>

403
00:18:52,290 --> 00:18:55,770
ago and<font color="#E5E5E5"> neo4j</font>

404
00:18:53,190 --> 00:18:58,590
and we can achieve<font color="#E5E5E5"> around 100 percents</font>

405
00:18:55,770 --> 00:19:00,270
when 100<font color="#CCCCCC"> hands speed-up so if</font><font color="#E5E5E5"> you are</font>

406
00:18:58,590 --> 00:19:03,240
you interested<font color="#E5E5E5"> feel free to take a look</font>

407
00:19:00,270 --> 00:19:05,879
<font color="#CCCCCC">at</font><font color="#E5E5E5"> this paper in total together this two</font>

408
00:19:03,240 --> 00:19:08,910
<font color="#E5E5E5">system can work seamlessly for defending</font>

409
00:19:05,880 --> 00:19:11,550
against the<font color="#E5E5E5"> apts namely the</font><font color="#CCCCCC"> psycho curry</font>

410
00:19:08,910 --> 00:19:13,590
the psycho system launched a series of

411
00:19:11,550 --> 00:19:15,899
stream queries and continuously

412
00:19:13,590 --> 00:19:18,179
<font color="#CCCCCC">monitored the</font><font color="#E5E5E5"> data stream</font><font color="#CCCCCC"> once the</font>

413
00:19:15,900 --> 00:19:20,910
dollars are detected<font color="#E5E5E5"> this alerts will be</font>

414
00:19:18,180 --> 00:19:23,100
fed<font color="#CCCCCC"> into the a accurate system</font><font color="#E5E5E5"> we can</font>

415
00:19:20,910 --> 00:19:26,070
<font color="#E5E5E5">use the accurate system to investigate</font>

416
00:19:23,100 --> 00:19:28,469
such errors which may<font color="#E5E5E5"> help us</font><font color="#CCCCCC"> to</font>

417
00:19:26,070 --> 00:19:30,570
discover<font color="#CCCCCC"> the new attack patterns</font><font color="#E5E5E5"> this</font>

418
00:19:28,470 --> 00:19:33,660
new apply patterns can then be fed into

419
00:19:30,570 --> 00:19:37,710
the<font color="#E5E5E5"> psycho engine to create more Chris</font>

420
00:19:33,660 --> 00:19:40,020
<font color="#E5E5E5">this is the feedback loop so in</font>

421
00:19:37,710 --> 00:19:42,330
conclusion<font color="#E5E5E5"> in this work we have built</font>

422
00:19:40,020 --> 00:19:44,790
and we have<font color="#CCCCCC"> designed and</font><font color="#E5E5E5"> built a system</font>

423
00:19:42,330 --> 00:19:47,490
<font color="#E5E5E5">called psycho</font><font color="#CCCCCC"> stream based</font><font color="#E5E5E5"> on Omikron</font>

424
00:19:44,790 --> 00:19:49,409
language system our system works on the

425
00:19:47,490 --> 00:19:51,840
streaming<font color="#E5E5E5"> data of system</font><font color="#CCCCCC"> on chain data</font>

426
00:19:49,410 --> 00:19:53,420
which enables the<font color="#CCCCCC"> timely anomaly</font>

427
00:19:51,840 --> 00:19:56,310
detection

428
00:19:53,420 --> 00:19:59,280
our system provides<font color="#E5E5E5"> a concise and</font>

429
00:19:56,310 --> 00:20:02,580
expressive language<font color="#CCCCCC"> for four types of</font>

430
00:19:59,280 --> 00:20:04,250
anomaly models and we<font color="#E5E5E5"> have built our</font>

431
00:20:02,580 --> 00:20:06,230
query execution

432
00:20:04,250 --> 00:20:08,090
based on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Ottoman specifics of the</font>

433
00:20:06,230 --> 00:20:11,210
data and the<font color="#E5E5E5"> Chris to speed up the</font>

434
00:20:08,090 --> 00:20:14,539
execution<font color="#CCCCCC"> we have deployed</font><font color="#E5E5E5"> our system on</font>

435
00:20:11,210 --> 00:20:16,340
the in the<font color="#E5E5E5"> NEC</font><font color="#CCCCCC"> labs America and we'll</font>

436
00:20:14,539 --> 00:20:26,450
see how it goes

437
00:20:16,340 --> 00:20:32,559
thank you all right now we're now open

438
00:20:26,450 --> 00:20:32,559
up<font color="#E5E5E5"> for questions</font><font color="#CCCCCC"> here we go</font>

439
00:20:34,500 --> 00:20:40,510
hi<font color="#E5E5E5"> Toni Onley from Persian</font><font color="#CCCCCC"> I stopped</font><font color="#E5E5E5"> I</font>

440
00:20:37,440 --> 00:20:43,510
just wanted to know how this kind of

441
00:20:40,510 --> 00:20:44,950
<font color="#E5E5E5">like stream based processing security</font>

442
00:20:43,510 --> 00:20:47,200
analysis<font color="#E5E5E5"> framework is different from</font>

443
00:20:44,950 --> 00:20:50,650
more general as a complex event-driven

444
00:20:47,200 --> 00:20:52,870
processing system whether the difference

445
00:20:50,650 --> 00:20:54,880
is mainly you know<font color="#E5E5E5"> I say the languages</font>

446
00:20:52,870 --> 00:20:57,879
and<font color="#CCCCCC"> the quarry level or whether</font><font color="#E5E5E5"> there is</font>

447
00:20:54,880 --> 00:21:00,610
<font color="#E5E5E5">any architectural or like engine level</font>

448
00:20:57,880 --> 00:21:03,010
differences<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> thanks for the question</font>

449
00:21:00,610 --> 00:21:04,689
so basically we build our system on top

450
00:21:03,010 --> 00:21:07,990
<font color="#E5E5E5">of existing complex event processing</font>

451
00:21:04,690 --> 00:21:10,600
engine CD and the difference<font color="#CCCCCC"> merely</font>

452
00:21:07,990 --> 00:21:14,110
<font color="#E5E5E5">let's see in two aspects first of the</font>

453
00:21:10,600 --> 00:21:16,090
language<font color="#E5E5E5"> part the CD</font><font color="#CCCCCC"> CD Angie has</font>

454
00:21:14,110 --> 00:21:18,939
provided a language it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> the second</font>

455
00:21:16,090 --> 00:21:20,860
<font color="#E5E5E5">language it is rather low level so if</font>

456
00:21:18,940 --> 00:21:23,650
you want<font color="#E5E5E5"> to use it to express</font><font color="#CCCCCC"> the</font>

457
00:21:20,860 --> 00:21:26,020
complex complex events<font color="#E5E5E5"> with certain</font>

458
00:21:23,650 --> 00:21:26,740
<font color="#CCCCCC">attributes then the say the query will</font>

459
00:21:26,020 --> 00:21:28,930
be<font color="#E5E5E5"> very large</font>

460
00:21:26,740 --> 00:21:31,780
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> the consciousness part besides</font>

461
00:21:28,930 --> 00:21:34,720
we can support more types of anomaly

462
00:21:31,780 --> 00:21:37,510
<font color="#E5E5E5">Chris but city cannot support because we</font>

463
00:21:34,720 --> 00:21:39,910
<font color="#CCCCCC">have</font><font color="#E5E5E5"> explicitly provides the stateful</font>

464
00:21:37,510 --> 00:21:42,340
computation<font color="#E5E5E5"> block as far as the extended</font>

465
00:21:39,910 --> 00:21:45,400
<font color="#CCCCCC">emergent block</font><font color="#E5E5E5"> and the second difference</font>

466
00:21:42,340 --> 00:21:47,830
<font color="#CCCCCC">is</font><font color="#E5E5E5"> the execution part basically since</font>

467
00:21:45,400 --> 00:21:50,770
<font color="#E5E5E5">City is</font><font color="#CCCCCC"> a general complex</font><font color="#E5E5E5"> event</font>

468
00:21:47,830 --> 00:21:53,260
processing engine it<font color="#E5E5E5"> does not assume any</font>

469
00:21:50,770 --> 00:21:55,870
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Lion cartridges of the stream data</font>

470
00:21:53,260 --> 00:21:58,150
<font color="#E5E5E5">therefore which we mean that it does not</font>

471
00:21:55,870 --> 00:22:00,520
rely on the<font color="#E5E5E5"> they have persuasive stomach</font>

472
00:21:58,150 --> 00:22:03,100
<font color="#E5E5E5">hurts</font><font color="#CCCCCC"> physics right therefore it</font><font color="#E5E5E5"> has</font>

473
00:22:00,520 --> 00:22:06,160
multiple concurrent course in execution

474
00:22:03,100 --> 00:22:07,090
it will simply make thinner copies for

475
00:22:06,160 --> 00:22:10,180
each<font color="#E5E5E5"> correct</font>

476
00:22:07,090 --> 00:22:12,129
even though there would there<font color="#E5E5E5"> maybe have</font>

477
00:22:10,180 --> 00:22:14,350
some<font color="#CCCCCC"> quizzes that are</font><font color="#E5E5E5"> exactly the</font><font color="#CCCCCC"> same</font>

478
00:22:12,130 --> 00:22:16,750
or be very<font color="#E5E5E5"> similar but</font><font color="#CCCCCC"> they make data</font>

479
00:22:14,350 --> 00:22:19,149
copies<font color="#E5E5E5"> this will introduce the large</font>

480
00:22:16,750 --> 00:22:21,820
overhead for<font color="#E5E5E5"> the memory and we already</font>

481
00:22:19,150 --> 00:22:24,130
show it in our evaluation<font color="#CCCCCC"> but since we</font>

482
00:22:21,820 --> 00:22:26,169
are<font color="#CCCCCC"> domain-specific language we know our</font>

483
00:22:24,130 --> 00:22:28,240
data<font color="#E5E5E5"> we know our quick the we can</font>

484
00:22:26,170 --> 00:22:30,570
leverage<font color="#CCCCCC"> the</font><font color="#E5E5E5"> characteristics of</font><font color="#CCCCCC"> our data</font>

485
00:22:28,240 --> 00:22:33,730
<font color="#E5E5E5">and our okra to speed up the execution</font>

486
00:22:30,570 --> 00:22:34,389
thank you my<font color="#E5E5E5"> name</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> Chris I'm from</font>

487
00:22:33,730 --> 00:22:35,920
Google

488
00:22:34,390 --> 00:22:39,360
my question is mostly about<font color="#E5E5E5"> the</font>

489
00:22:35,920 --> 00:22:39,360
<font color="#E5E5E5">accumulation of state so</font>

490
00:22:40,050 --> 00:22:43,200
<font color="#E5E5E5">but the rules be stateful and</font><font color="#CCCCCC"> it</font>

491
00:22:41,700 --> 00:22:45,000
accumulate things<font color="#E5E5E5"> over time do you see</font>

492
00:22:43,200 --> 00:22:46,710
state kind<font color="#CCCCCC"> of explosions as different</font>

493
00:22:45,000 --> 00:22:48,780
kinds<font color="#E5E5E5"> of rules are</font><font color="#CCCCCC"> created you could</font>

494
00:22:46,710 --> 00:22:50,520
imagine some kind<font color="#CCCCCC"> of limitations from</font>

495
00:22:48,780 --> 00:22:52,860
<font color="#E5E5E5">the</font><font color="#CCCCCC"> dsl and I</font><font color="#E5E5E5"> didn't haven't read the</font>

496
00:22:50,520 --> 00:22:54,240
paper yet<font color="#E5E5E5"> so if the paper has some kind</font>

497
00:22:52,860 --> 00:22:55,889
<font color="#E5E5E5">of enforcement on the kind of</font>

498
00:22:54,240 --> 00:22:58,380
capabilities of state accumulation to

499
00:22:55,890 --> 00:22:59,610
avoid<font color="#E5E5E5"> explosions</font><font color="#CCCCCC"> over time yeah thanks</font>

500
00:22:58,380 --> 00:23:01,500
for<font color="#CCCCCC"> the question yeah this is a very</font>

501
00:22:59,610 --> 00:23:03,540
cool question<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> actually is so</font>

502
00:23:01,500 --> 00:23:06,120
because I mean the<font color="#CCCCCC"> the queries</font><font color="#E5E5E5"> in the</font>

503
00:23:03,540 --> 00:23:07,950
<font color="#E5E5E5">control</font><font color="#CCCCCC"> of the users right and the data</font>

504
00:23:06,120 --> 00:23:10,169
we all know that the<font color="#E5E5E5"> data is very huge</font>

505
00:23:07,950 --> 00:23:12,300
<font color="#E5E5E5">so if the users does not enforce any</font>

506
00:23:10,170 --> 00:23:14,400
constraints for the<font color="#CCCCCC"> create then it will</font>

507
00:23:12,300 --> 00:23:16,139
be your explosion<font color="#E5E5E5"> so</font><font color="#CCCCCC"> in our</font><font color="#E5E5E5"> current</font>

508
00:23:14,400 --> 00:23:18,120
implementation we do have some

509
00:23:16,140 --> 00:23:20,790
constraints<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have some rough</font>

510
00:23:18,120 --> 00:23:22,770
estimations if the if the<font color="#E5E5E5"> estimated data</font>

511
00:23:20,790 --> 00:23:25,500
is very huge then we will have a warning

512
00:23:22,770 --> 00:23:27,690
<font color="#CCCCCC">for</font><font color="#E5E5E5"> the user but in general for</font><font color="#CCCCCC"> example</font>

513
00:23:25,500 --> 00:23:29,790
for all<font color="#E5E5E5"> of the evaluations here we first</font>

514
00:23:27,690 --> 00:23:31,620
have to define<font color="#E5E5E5"> the</font><font color="#CCCCCC"> multiband patent</font>

515
00:23:29,790 --> 00:23:33,090
rights<font color="#E5E5E5"> with certain</font><font color="#CCCCCC"> attributes usually</font>

516
00:23:31,620 --> 00:23:34,709
you<font color="#CCCCCC"> should have some attributes you do</font>

517
00:23:33,090 --> 00:23:36,689
not want to search<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the things</font>

518
00:23:34,710 --> 00:23:38,430
unless<font color="#CCCCCC"> you have the attributes than the</font>

519
00:23:36,690 --> 00:23:41,850
attributes<font color="#E5E5E5"> will</font><font color="#CCCCCC"> fill to a significant</font>

520
00:23:38,430 --> 00:23:43,950
<font color="#E5E5E5">amount of other unrelated</font><font color="#CCCCCC"> events and for</font>

521
00:23:41,850 --> 00:23:46,290
the stateful<font color="#E5E5E5"> computation because we do</font>

522
00:23:43,950 --> 00:23:48,420
not maintain all<font color="#CCCCCC"> of the states we can we</font>

523
00:23:46,290 --> 00:23:50,520
we<font color="#E5E5E5"> have to explicitly</font><font color="#CCCCCC"> define how many</font>

524
00:23:48,420 --> 00:23:51,840
<font color="#CCCCCC">states</font><font color="#E5E5E5"> that we</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> want mention for</font>

525
00:23:50,520 --> 00:23:53,639
example<font color="#E5E5E5"> we can maintain the</font><font color="#CCCCCC"> current</font>

526
00:23:51,840 --> 00:23:56,520
state the previous state<font color="#E5E5E5"> the previous</font>

527
00:23:53,640 --> 00:23:59,700
previous<font color="#CCCCCC"> states and then once we follow</font>

528
00:23:56,520 --> 00:24:03,300
along the stream then the<font color="#E5E5E5"> data will be</font>

529
00:23:59,700 --> 00:24:05,750
<font color="#CCCCCC">in started will not be used</font><font color="#E5E5E5"> therefore we</font>

530
00:24:03,300 --> 00:24:12,120
<font color="#E5E5E5">can we</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> we can use this way to</font>

531
00:24:05,750 --> 00:24:13,760
<font color="#E5E5E5">mitigate the problem of explosion hi</font>

532
00:24:12,120 --> 00:24:19,350
there

533
00:24:13,760 --> 00:24:21,570
<font color="#CCCCCC">so you a comprehensive experiment on</font>

534
00:24:19,350 --> 00:24:24,719
neck but you<font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> really comment on</font>

535
00:24:21,570 --> 00:24:26,610
the accuracy<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> results so I</font>

536
00:24:24,720 --> 00:24:28,410
understand that<font color="#CCCCCC"> ultimately it boils down</font>

537
00:24:26,610 --> 00:24:31,590
to the<font color="#CCCCCC"> quality of the rules but do you</font>

538
00:24:28,410 --> 00:24:34,140
have any data on<font color="#CCCCCC"> false positives and</font>

539
00:24:31,590 --> 00:24:37,620
eventually<font color="#CCCCCC"> false negatives on the</font>

540
00:24:34,140 --> 00:24:39,510
experimental front yes so<font color="#E5E5E5"> basically for</font>

541
00:24:37,620 --> 00:24:41,669
<font color="#CCCCCC">all of the all of the</font><font color="#E5E5E5"> attacks that we</font>

542
00:24:39,510 --> 00:24:44,360
<font color="#E5E5E5">evaluated our</font><font color="#CCCCCC"> Crakehall</font>

543
00:24:41,670 --> 00:24:46,890
captured them but the problem<font color="#CCCCCC"> is that</font>

544
00:24:44,360 --> 00:24:49,290
<font color="#E5E5E5">usually in the in the real world site</font>

545
00:24:46,890 --> 00:24:51,270
and you do not if you<font color="#E5E5E5"> want to capture a</font>

546
00:24:49,290 --> 00:24:52,740
<font color="#CCCCCC">certain type of attacks you cannot</font>

547
00:24:51,270 --> 00:24:55,200
simply write one for<font color="#CCCCCC"> it</font>

548
00:24:52,740 --> 00:24:57,270
because<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> one creamy</font><font color="#E5E5E5"> may easily</font>

549
00:24:55,200 --> 00:24:58,679
miss this attack<font color="#E5E5E5"> usually you read</font>

550
00:24:57,270 --> 00:25:00,809
multiple queries and let them

551
00:24:58,679 --> 00:25:02,640
concurrently run it so at<font color="#E5E5E5"> least that you</font>

552
00:25:00,809 --> 00:25:06,149
will hope that run query will capture

553
00:25:02,640 --> 00:25:07,980
<font color="#E5E5E5">the alerts but in our</font><font color="#CCCCCC"> your evaluations</font>

554
00:25:06,149 --> 00:25:09,989
<font color="#E5E5E5">all of the queries can capture owners</font>

555
00:25:07,980 --> 00:25:13,020
<font color="#E5E5E5">therefore there will be no false</font>

556
00:25:09,990 --> 00:25:15,480
negatives<font color="#E5E5E5"> but depending on</font><font color="#CCCCCC"> the depending</font>

557
00:25:13,020 --> 00:25:17,700
<font color="#CCCCCC">on the constraints that was specified</font>

558
00:25:15,480 --> 00:25:20,809
<font color="#CCCCCC">there may be exists the false</font><font color="#E5E5E5"> pulses</font>

559
00:25:17,700 --> 00:25:24,480
this and<font color="#E5E5E5"> also based on this observation</font>

560
00:25:20,809 --> 00:25:26,220
<font color="#CCCCCC">we propose that we</font><font color="#E5E5E5"> shoot</font><font color="#CCCCCC"> to further</font>

561
00:25:24,480 --> 00:25:28,350
investigation<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the detection</font><font color="#CCCCCC"> errors</font>

562
00:25:26,220 --> 00:25:30,390
because you can never rely directly

563
00:25:28,350 --> 00:25:32,399
under alerts and the truth may be

564
00:25:30,390 --> 00:25:34,169
<font color="#E5E5E5">Sonny's we are productive you should do</font>

565
00:25:32,399 --> 00:25:36,559
some further investigation to confirm

566
00:25:34,169 --> 00:25:39,860
that your honor to<font color="#E5E5E5"> search for positive</font>

567
00:25:36,559 --> 00:25:39,860
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> thank you</font>

