1
00:00:10,360 --> 00:00:15,489
well thanks for<font color="#CCCCCC"> coming I know it's right</font>

2
00:00:12,850 --> 00:00:17,830
<font color="#CCCCCC">after</font><font color="#E5E5E5"> a lunch so I'll try</font><font color="#CCCCCC"> to keep</font><font color="#E5E5E5"> you</font>

3
00:00:15,490 --> 00:00:19,840
awake as best I can

4
00:00:17,830 --> 00:00:21,459
I'm gonna talk a little bit about<font color="#CCCCCC"> the</font>

5
00:00:19,840 --> 00:00:24,369
state<font color="#CCCCCC"> of the applications that you use</font>

6
00:00:21,460 --> 00:00:27,250
that use<font color="#CCCCCC"> TLS to access the</font><font color="#E5E5E5"> internet for</font>

7
00:00:24,369 --> 00:00:29,100
secure communications<font color="#CCCCCC"> the long</font><font color="#E5E5E5"> story</font>

8
00:00:27,250 --> 00:00:31,119
short of that<font color="#E5E5E5"> is that they're vulnerable</font>

9
00:00:29,100 --> 00:00:33,730
<font color="#E5E5E5">they're vulnerable for a variety of</font>

10
00:00:31,119 --> 00:00:36,309
reasons<font color="#CCCCCC"> three off the</font><font color="#E5E5E5"> top</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> my head is</font>

11
00:00:33,730 --> 00:00:38,230
<font color="#E5E5E5">like one is that they</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> always</font>

12
00:00:36,309 --> 00:00:39,940
necessarily validate certificates

13
00:00:38,230 --> 00:00:42,519
properly<font color="#CCCCCC"> leaving themselves</font><font color="#E5E5E5"> open to men</font>

14
00:00:39,940 --> 00:00:44,739
in the<font color="#E5E5E5"> middle attacks some do not use</font>

15
00:00:42,520 --> 00:00:46,390
<font color="#CCCCCC">up-to-date</font><font color="#E5E5E5"> Cypress</font><font color="#CCCCCC"> Suites and use weak</font>

16
00:00:44,739 --> 00:00:47,890
ones that are known to<font color="#CCCCCC"> be broken</font><font color="#E5E5E5"> and</font>

17
00:00:46,390 --> 00:00:51,219
<font color="#CCCCCC">then other times you'll see people</font>

18
00:00:47,890 --> 00:00:54,280
actually implement TLS using a modern

19
00:00:51,219 --> 00:00:56,770
<font color="#E5E5E5">library but have</font><font color="#CCCCCC"> habit</font><font color="#E5E5E5"> being using like</font>

20
00:00:54,280 --> 00:00:58,750
<font color="#E5E5E5">TLS 1.1 or even versions of SSL that are</font>

21
00:00:56,770 --> 00:01:00,040
all deprecated now and so they're

22
00:00:58,750 --> 00:01:01,899
<font color="#CCCCCC">vulnerable in a lot</font><font color="#E5E5E5"> of ways and I'm not</font>

23
00:01:00,040 --> 00:01:03,489
just<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about applications that are</font>

24
00:01:01,899 --> 00:01:05,410
written in someone's basement or from a

25
00:01:03,489 --> 00:01:07,170
no-name<font color="#E5E5E5"> company I'm also talking about</font>

26
00:01:05,410 --> 00:01:10,270
applications that have<font color="#E5E5E5"> been written by</font>

27
00:01:07,170 --> 00:01:11,560
<font color="#E5E5E5">PayPal and Amazon</font><font color="#CCCCCC"> and Chase Bank and all</font>

28
00:01:10,270 --> 00:01:13,119
of these companies<font color="#CCCCCC"> in the past</font><font color="#E5E5E5"> have</font>

29
00:01:11,560 --> 00:01:17,560
written things for the general public

30
00:01:13,119 --> 00:01:18,550
<font color="#E5E5E5">that have very very big TLS problems and</font>

31
00:01:17,560 --> 00:01:19,780
leave themselves open to

32
00:01:18,550 --> 00:01:22,869
man-in-the-middle attacks and other

33
00:01:19,780 --> 00:01:24,550
<font color="#CCCCCC">issues and if we look at the research</font>

34
00:01:22,869 --> 00:01:25,899
about this<font color="#E5E5E5"> area and there's a lot</font><font color="#CCCCCC"> of it</font>

35
00:01:24,550 --> 00:01:27,369
there's a<font color="#E5E5E5"> lot of different applications</font>

36
00:01:25,899 --> 00:01:28,810
<font color="#CCCCCC">out there that have been found to be</font>

37
00:01:27,369 --> 00:01:30,640
vulnerable there's lots of studies<font color="#E5E5E5"> and</font>

38
00:01:28,810 --> 00:01:32,020
measurement studies that have been<font color="#CCCCCC"> found</font>

39
00:01:30,640 --> 00:01:33,490
that finding you know hundreds<font color="#E5E5E5"> of</font>

40
00:01:32,020 --> 00:01:36,160
<font color="#E5E5E5">applications both on the</font><font color="#CCCCCC"> mobile</font><font color="#E5E5E5"> and</font>

41
00:01:33,490 --> 00:01:38,140
desktop spaces that have issues and and

42
00:01:36,160 --> 00:01:39,670
they're using of TLS<font color="#E5E5E5"> and so we have to</font>

43
00:01:38,140 --> 00:01:42,880
<font color="#E5E5E5">take a step back and ask ourselves why</font>

44
00:01:39,670 --> 00:01:46,209
now why is it<font color="#E5E5E5"> so difficult especially in</font>

45
00:01:42,880 --> 00:01:48,640
2018 so many years<font color="#E5E5E5"> after TLS has been</font>

46
00:01:46,209 --> 00:01:50,920
invented<font color="#CCCCCC"> and SSL before that why is it</font>

47
00:01:48,640 --> 00:01:52,270
<font color="#E5E5E5">so hard for developers to</font><font color="#CCCCCC"> make an</font>

48
00:01:50,920 --> 00:01:55,090
<font color="#CCCCCC">application that</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> connects to the</font>

49
00:01:52,270 --> 00:01:57,160
Internet securely<font color="#CCCCCC"> it's not entirely just</font>

50
00:01:55,090 --> 00:01:59,679
because you know there's algorithms<font color="#E5E5E5"> out</font>

51
00:01:57,160 --> 00:02:01,598
<font color="#CCCCCC">there that become outdated over time and</font>

52
00:01:59,679 --> 00:02:03,099
as one researcher<font color="#CCCCCC"> put it it's actually</font>

53
00:02:01,599 --> 00:02:04,899
the terrible design of the api's

54
00:02:03,099 --> 00:02:07,239
themselves<font color="#E5E5E5"> that</font><font color="#CCCCCC"> caused a lot of</font><font color="#E5E5E5"> these</font>

55
00:02:04,899 --> 00:02:09,369
mistakes<font color="#E5E5E5"> that developers make and</font>

56
00:02:07,239 --> 00:02:10,929
choosing<font color="#E5E5E5"> Cypress weeds or not doing</font>

57
00:02:09,369 --> 00:02:14,020
certificate validation properly and

58
00:02:10,929 --> 00:02:15,790
<font color="#E5E5E5">things like</font><font color="#CCCCCC"> that and it's really not</font>

59
00:02:14,020 --> 00:02:17,620
their fault in that<font color="#E5E5E5"> sense it's not it's</font>

60
00:02:15,790 --> 00:02:18,819
not the developers are idiots<font color="#E5E5E5"> developers</font>

61
00:02:17,620 --> 00:02:20,439
<font color="#E5E5E5">have to focus on a lot of different</font>

62
00:02:18,819 --> 00:02:21,819
<font color="#CCCCCC">things and security is only</font><font color="#E5E5E5"> one of them</font>

63
00:02:20,439 --> 00:02:23,609
and<font color="#CCCCCC"> it might not even</font><font color="#E5E5E5"> be the priority</font>

64
00:02:21,819 --> 00:02:25,109
<font color="#E5E5E5">and most developers aren't secured</font>

65
00:02:23,610 --> 00:02:26,460
experts and<font color="#E5E5E5"> we can't expect them</font><font color="#CCCCCC"> to be</font>

66
00:02:25,110 --> 00:02:29,100
and especially<font color="#CCCCCC"> in the day and age that</font>

67
00:02:26,460 --> 00:02:32,220
we<font color="#E5E5E5"> live</font><font color="#CCCCCC"> to give you an idea just how</font>

68
00:02:29,100 --> 00:02:36,810
hard it can<font color="#CCCCCC"> be on a developer just</font><font color="#E5E5E5"> the</font>

69
00:02:32,220 --> 00:02:38,490
<font color="#E5E5E5">lib</font><font color="#CCCCCC"> SSL portion of of open</font><font color="#E5E5E5"> SSL</font><font color="#CCCCCC"> so all of</font>

70
00:02:36,810 --> 00:02:42,000
the portion<font color="#CCCCCC"> I'll just apiece that</font><font color="#E5E5E5"> deals</font>

71
00:02:38,490 --> 00:02:44,790
with TLS<font color="#E5E5E5"> exports 504 different symbols</font>

72
00:02:42,000 --> 00:02:47,190
so functions and macros<font color="#E5E5E5"> to developers to</font>

73
00:02:44,790 --> 00:02:49,440
<font color="#CCCCCC">use and that's that's just</font><font color="#E5E5E5"> a ton I don't</font>

74
00:02:47,190 --> 00:02:51,030
know how many of you<font color="#E5E5E5"> used open SSL in</font>

75
00:02:49,440 --> 00:02:52,440
the past<font color="#E5E5E5"> but it can be a little</font>

76
00:02:51,030 --> 00:02:54,780
cumbersome and<font color="#E5E5E5"> a little overwhelming at</font>

77
00:02:52,440 --> 00:02:56,940
first<font color="#E5E5E5"> just to do something</font><font color="#CCCCCC"> as simple</font><font color="#E5E5E5"> as</font>

78
00:02:54,780 --> 00:02:58,260
<font color="#E5E5E5">just create a simple TCP or TLS</font>

79
00:02:56,940 --> 00:03:01,650
connection<font color="#CCCCCC"> and then you know download</font>

80
00:02:58,260 --> 00:03:04,200
somebody's<font color="#E5E5E5"> home page</font><font color="#CCCCCC"> so as an example</font><font color="#E5E5E5"> of</font>

81
00:03:01,650 --> 00:03:07,050
<font color="#CCCCCC">that exact</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> thing we created the</font>

82
00:03:04,200 --> 00:03:11,040
<font color="#E5E5E5">smallest program we could that just used</font>

83
00:03:07,050 --> 00:03:14,310
open<font color="#E5E5E5"> SSL with live SSL and connected to</font>

84
00:03:11,040 --> 00:03:16,769
<font color="#E5E5E5">a remote host of our choosing downloaded</font>

85
00:03:14,310 --> 00:03:18,840
<font color="#E5E5E5">just a few bytes from its home page over</font>

86
00:03:16,770 --> 00:03:20,730
TLS<font color="#E5E5E5"> and then made</font><font color="#CCCCCC"> sure that we did that</font>

87
00:03:18,840 --> 00:03:22,320
in a secure way so all the<font color="#E5E5E5"> different</font>

88
00:03:20,730 --> 00:03:24,149
proper checks for certificate validation

89
00:03:22,320 --> 00:03:25,890
and<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> hostname checks and</font>

90
00:03:24,150 --> 00:03:30,030
<font color="#E5E5E5">validity checks like that</font>

91
00:03:25,890 --> 00:03:32,130
we<font color="#E5E5E5"> targeted the older open</font><font color="#CCCCCC"> ssl api</font><font color="#E5E5E5"> 1.0.1</font>

92
00:03:30,030 --> 00:03:34,260
for this and we<font color="#CCCCCC"> had borrowed</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> code</font>

93
00:03:32,130 --> 00:03:36,470
<font color="#E5E5E5">the curl actually uses to do the</font>

94
00:03:34,260 --> 00:03:39,390
validation portion<font color="#E5E5E5"> and in total it was</font>

95
00:03:36,470 --> 00:03:41,519
<font color="#CCCCCC">317 lines of code just</font><font color="#E5E5E5"> to go</font><font color="#CCCCCC"> download a</font>

96
00:03:39,390 --> 00:03:44,100
few<font color="#E5E5E5"> bytes securely from the internet and</font>

97
00:03:41,519 --> 00:03:45,989
<font color="#E5E5E5">that's just unacceptable to us and so in</font>

98
00:03:44,100 --> 00:03:47,700
embarking on this research<font color="#CCCCCC"> we asked</font>

99
00:03:45,989 --> 00:03:49,950
ourselves a<font color="#E5E5E5"> question can we do better</font>

100
00:03:47,700 --> 00:03:51,540
<font color="#CCCCCC">and</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> we do better than 317 lines of</font>

101
00:03:49,950 --> 00:03:54,959
code just<font color="#E5E5E5"> to access a few</font><font color="#CCCCCC"> bytes on the</font>

102
00:03:51,540 --> 00:03:56,609
<font color="#E5E5E5">internet and it's more specifically we</font>

103
00:03:54,959 --> 00:03:59,459
were interested<font color="#E5E5E5"> in using the plastic</font>

104
00:03:56,610 --> 00:04:01,230
socket<font color="#E5E5E5"> API is a vehicle for this the</font>

105
00:03:59,459 --> 00:04:02,910
<font color="#CCCCCC">reason that that's important to us is</font>

106
00:04:01,230 --> 00:04:05,190
<font color="#E5E5E5">because the plastic</font><font color="#CCCCCC"> socket API is a</font>

107
00:04:02,910 --> 00:04:06,780
network API<font color="#E5E5E5"> that's very well</font><font color="#CCCCCC"> known very</font>

108
00:04:05,190 --> 00:04:08,340
<font color="#CCCCCC">well established it's supported</font><font color="#E5E5E5"> by every</font>

109
00:04:06,780 --> 00:04:09,900
major operating<font color="#E5E5E5"> system out</font><font color="#CCCCCC"> there and</font>

110
00:04:08,340 --> 00:04:11,820
most<font color="#E5E5E5"> network developers already or know</font>

111
00:04:09,900 --> 00:04:13,890
it very well<font color="#E5E5E5"> and so if we can leverage</font>

112
00:04:11,820 --> 00:04:16,918
this API<font color="#E5E5E5"> and just extend</font><font color="#CCCCCC"> it slightly to</font>

113
00:04:13,890 --> 00:04:18,839
support TLS<font color="#E5E5E5"> that would be the ideal as</font>

114
00:04:16,918 --> 00:04:21,000
an<font color="#E5E5E5"> example of how a developer currently</font>

115
00:04:18,839 --> 00:04:23,820
works with<font color="#E5E5E5"> the socket</font><font color="#CCCCCC"> or the plastic</font>

116
00:04:21,000 --> 00:04:26,880
<font color="#CCCCCC">socket API it really they only need to</font>

117
00:04:23,820 --> 00:04:28,380
<font color="#E5E5E5">perform this one call here to the</font>

118
00:04:26,880 --> 00:04:30,300
function called socket and it's the

119
00:04:28,380 --> 00:04:32,099
third parameter<font color="#E5E5E5"> this last one where they</font>

120
00:04:30,300 --> 00:04:34,169
can specify what protocol they'd like to

121
00:04:32,099 --> 00:04:36,180
<font color="#E5E5E5">use now developer doesn't need to</font><font color="#CCCCCC"> know</font>

122
00:04:34,169 --> 00:04:37,469
<font color="#E5E5E5">all of the in you know the internals of</font>

123
00:04:36,180 --> 00:04:39,530
TCP to do this they do

124
00:04:37,470 --> 00:04:41,460
they just request TCP and<font color="#E5E5E5"> then any</font>

125
00:04:39,530 --> 00:04:43,320
operation they perform on<font color="#CCCCCC"> that socket</font>

126
00:04:41,460 --> 00:04:44,909
<font color="#CCCCCC">afterward</font><font color="#E5E5E5"> just uses TCP behind the</font>

127
00:04:43,320 --> 00:04:46,469
scenes and does all the<font color="#E5E5E5"> segmentation and</font>

128
00:04:44,910 --> 00:04:49,440
out of<font color="#E5E5E5"> order processing for them and</font>

129
00:04:46,470 --> 00:04:52,200
we'd like<font color="#E5E5E5"> to do the same thing but for</font>

130
00:04:49,440 --> 00:04:55,170
TLS<font color="#E5E5E5"> so we've implemented a service that</font>

131
00:04:52,200 --> 00:04:57,150
<font color="#CCCCCC">just extends the existing plastic</font><font color="#E5E5E5"> socket</font>

132
00:04:55,170 --> 00:04:58,950
API<font color="#CCCCCC"> without changing any function</font>

133
00:04:57,150 --> 00:05:00,950
signatures and instead<font color="#CCCCCC"> just adding</font>

134
00:04:58,950 --> 00:05:03,719
different values for existing parameters

135
00:05:00,950 --> 00:05:05,190
<font color="#E5E5E5">and so one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these parameters is here</font>

136
00:05:03,720 --> 00:05:07,650
and shown<font color="#E5E5E5"> in red and that's just</font>

137
00:05:05,190 --> 00:05:09,240
<font color="#E5E5E5">allowing developers to specify the TLS</font>

138
00:05:07,650 --> 00:05:11,489
protocol when they create a socket<font color="#E5E5E5"> and</font>

139
00:05:09,240 --> 00:05:13,950
then use that<font color="#CCCCCC"> socket afterward to</font>

140
00:05:11,490 --> 00:05:16,470
perform TLS operations without<font color="#E5E5E5"> having to</font>

141
00:05:13,950 --> 00:05:19,080
know<font color="#E5E5E5"> anything about TLS we call this</font>

142
00:05:16,470 --> 00:05:22,080
<font color="#E5E5E5">effort the secure socket API or the SSA</font>

143
00:05:19,080 --> 00:05:24,930
for short<font color="#E5E5E5"> and at a high</font><font color="#CCCCCC"> level if you</font>

144
00:05:22,080 --> 00:05:28,080
call the connect<font color="#E5E5E5"> function for</font><font color="#CCCCCC"> instance</font>

145
00:05:24,930 --> 00:05:30,960
on a TLS TLS socket it will perform a

146
00:05:28,080 --> 00:05:32,789
TLS handshake<font color="#CCCCCC"> if you call send it will</font>

147
00:05:30,960 --> 00:05:34,320
encrypt and then send<font color="#E5E5E5"> that data if you</font>

148
00:05:32,790 --> 00:05:35,610
call receive it'll decrypt and<font color="#E5E5E5"> then give</font>

149
00:05:34,320 --> 00:05:37,260
your<font color="#E5E5E5"> application that data and if you</font>

150
00:05:35,610 --> 00:05:41,480
call<font color="#CCCCCC"> close it'll just terminate the TLS</font>

151
00:05:37,260 --> 00:05:43,940
<font color="#CCCCCC">connection in a nice way in a more</font>

152
00:05:41,480 --> 00:05:46,110
<font color="#CCCCCC">pictorial type of representation</font><font color="#E5E5E5"> we have</font>

153
00:05:43,940 --> 00:05:48,240
<font color="#E5E5E5">this is what we've</font><font color="#CCCCCC"> done so here on the</font>

154
00:05:46,110 --> 00:05:50,040
<font color="#CCCCCC">Left we have</font><font color="#E5E5E5"> a typical</font><font color="#CCCCCC"> situation these</font>

155
00:05:48,240 --> 00:05:52,020
<font color="#E5E5E5">days where you have some</font><font color="#CCCCCC"> Network</font>

156
00:05:50,040 --> 00:05:55,290
application interfacing with<font color="#CCCCCC"> some</font>

157
00:05:52,020 --> 00:05:57,570
security library<font color="#E5E5E5"> new TLS or open SSL or</font>

158
00:05:55,290 --> 00:06:00,330
some other one<font color="#E5E5E5"> and then the application</font>

159
00:05:57,570 --> 00:06:02,520
and that<font color="#E5E5E5"> library</font><font color="#CCCCCC"> and sometimes they</font>

160
00:06:00,330 --> 00:06:05,130
trade off on<font color="#E5E5E5"> this role but together</font>

161
00:06:02,520 --> 00:06:06,990
they're<font color="#CCCCCC"> accessing the existing plastic</font>

162
00:06:05,130 --> 00:06:08,430
<font color="#E5E5E5">socket API to do all their network</font>

163
00:06:06,990 --> 00:06:10,710
functionality<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they're crossing a</font>

164
00:06:08,430 --> 00:06:12,030
system<font color="#CCCCCC"> called barrier to do so and then</font>

165
00:06:10,710 --> 00:06:13,650
<font color="#E5E5E5">behind the</font><font color="#CCCCCC"> scenes it's usually the</font>

166
00:06:12,030 --> 00:06:16,289
kernel<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is implementing the actual</font>

167
00:06:13,650 --> 00:06:19,020
protocols for the the operations that

168
00:06:16,290 --> 00:06:20,669
<font color="#E5E5E5">are</font><font color="#CCCCCC"> being requested we want to flip this</font>

169
00:06:19,020 --> 00:06:22,080
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we have flipped</font><font color="#E5E5E5"> this so that the</font>

170
00:06:20,669 --> 00:06:23,909
network application doesn't<font color="#E5E5E5"> link with</font>

171
00:06:22,080 --> 00:06:26,370
any security library at all it<font color="#CCCCCC"> just uses</font>

172
00:06:23,910 --> 00:06:28,410
the<font color="#CCCCCC"> the socket API is it would</font><font color="#E5E5E5"> normally</font>

173
00:06:26,370 --> 00:06:30,240
and then that API interacts with the

174
00:06:28,410 --> 00:06:32,550
kernel<font color="#E5E5E5"> and then within</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> kernel you</font>

175
00:06:30,240 --> 00:06:37,410
have TLS functionality as if it were a

176
00:06:32,550 --> 00:06:38,910
native<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> in our implementation of</font>

177
00:06:37,410 --> 00:06:40,950
<font color="#CCCCCC">this</font><font color="#E5E5E5"> we didn't put everything in the</font>

178
00:06:38,910 --> 00:06:42,450
kernel<font color="#E5E5E5"> one because that's that's a large</font>

179
00:06:40,950 --> 00:06:45,870
undertaking and<font color="#CCCCCC"> we wanted the rest of</font>

180
00:06:42,450 --> 00:06:48,810
the community<font color="#CCCCCC"> to to take part</font><font color="#E5E5E5"> in that as</font>

181
00:06:45,870 --> 00:06:51,360
we move<font color="#E5E5E5"> in that direction</font><font color="#CCCCCC"> so right now</font>

182
00:06:48,810 --> 00:06:53,370
what we<font color="#CCCCCC"> have</font><font color="#E5E5E5"> is a you know</font>

183
00:06:51,360 --> 00:06:54,990
and where we have a small<font color="#CCCCCC"> lightweight</font>

184
00:06:53,370 --> 00:06:57,840
kernel module that just kind of exports

185
00:06:54,990 --> 00:06:59,969
<font color="#E5E5E5">an API to applications and then</font>

186
00:06:57,840 --> 00:07:02,669
applications can<font color="#CCCCCC"> use that API to request</font>

187
00:06:59,969 --> 00:07:04,520
TLS services<font color="#E5E5E5"> a TLS socket can be created</font>

188
00:07:02,669 --> 00:07:06,900
and then<font color="#E5E5E5"> the operating system actually</font>

189
00:07:04,520 --> 00:07:08,909
<font color="#E5E5E5">offloads all of the different encryption</font>

190
00:07:06,900 --> 00:07:11,698
<font color="#E5E5E5">and decryption tasks and certificate</font>

191
00:07:08,909 --> 00:07:14,129
validation tasks and TLS itself to a

192
00:07:11,699 --> 00:07:15,990
local<font color="#E5E5E5"> user space encryption daemon and</font>

193
00:07:14,129 --> 00:07:18,389
we actually<font color="#E5E5E5"> run a few of those</font><font color="#CCCCCC"> for load</font>

194
00:07:15,990 --> 00:07:20,639
balancing<font color="#CCCCCC"> purposes on a machine</font><font color="#E5E5E5"> and then</font>

195
00:07:18,389 --> 00:07:22,319
in turn<font color="#CCCCCC"> that when that</font><font color="#E5E5E5"> daemon actually</font>

196
00:07:20,639 --> 00:07:23,400
needs to<font color="#E5E5E5"> send information to the</font>

197
00:07:22,319 --> 00:07:25,680
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> to receive it from the internet</font>

198
00:07:23,400 --> 00:07:27,810
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> use the existing implementations</font>

199
00:07:25,680 --> 00:07:29,789
and the kernel<font color="#CCCCCC"> so if it's</font><font color="#E5E5E5"> using TLS it</font>

200
00:07:27,810 --> 00:07:32,460
can use TCP behind the scenes and<font color="#E5E5E5"> if</font>

201
00:07:29,789 --> 00:07:33,990
it's using<font color="#CCCCCC"> D TLS or the use EDP</font>

202
00:07:32,460 --> 00:07:35,250
one thing<font color="#E5E5E5"> I want to point out is</font><font color="#CCCCCC"> that</font>

203
00:07:33,990 --> 00:07:37,379
there's a little administrator

204
00:07:35,250 --> 00:07:39,449
configuration portion there of our

205
00:07:37,379 --> 00:07:43,199
encryption daemon<font color="#E5E5E5"> I'll get to that in</font><font color="#CCCCCC"> a</font>

206
00:07:39,449 --> 00:07:44,550
little<font color="#CCCCCC"> bit but</font><font color="#E5E5E5"> doing this kind of</font>

207
00:07:43,199 --> 00:07:47,340
architecture<font color="#E5E5E5"> allowed us</font><font color="#CCCCCC"> to effectively</font>

208
00:07:44,550 --> 00:07:49,889
<font color="#E5E5E5">reduce the 504 exported symbols that I</font>

209
00:07:47,340 --> 00:07:51,869
talked about<font color="#E5E5E5"> before</font><font color="#CCCCCC"> to just 14 because</font>

210
00:07:49,889 --> 00:07:53,759
that's how many socket or that's how

211
00:07:51,870 --> 00:07:56,159
many function calls are<font color="#E5E5E5"> in the plastic</font>

212
00:07:53,759 --> 00:07:59,009
socket<font color="#E5E5E5"> API which is of course a huge win</font>

213
00:07:56,159 --> 00:08:01,080
and if you<font color="#CCCCCC"> recall</font><font color="#E5E5E5"> the example I had in</font>

214
00:07:59,009 --> 00:08:02,279
the beginning<font color="#E5E5E5"> with the 317 lines of code</font>

215
00:08:01,080 --> 00:08:04,229
<font color="#CCCCCC">to just download a few</font><font color="#E5E5E5"> bytes of</font>

216
00:08:02,279 --> 00:08:08,699
<font color="#E5E5E5">somebody's home page well now we've</font>

217
00:08:04,229 --> 00:08:11,250
reduced<font color="#CCCCCC"> that</font><font color="#E5E5E5"> to 16 and as a side note</font><font color="#CCCCCC"> if</font>

218
00:08:08,699 --> 00:08:13,229
we were to do this without<font color="#E5E5E5"> using TLS</font><font color="#CCCCCC"> and</font>

219
00:08:11,250 --> 00:08:14,969
<font color="#CCCCCC">just using a TCP socket was actually 25</font>

220
00:08:13,229 --> 00:08:17,008
lines<font color="#E5E5E5"> of code and the reason we get a</font>

221
00:08:14,969 --> 00:08:19,080
<font color="#E5E5E5">little bit more reduction from 25 to 16</font>

222
00:08:17,009 --> 00:08:21,539
is because we've<font color="#E5E5E5"> added a new address</font>

223
00:08:19,080 --> 00:08:23,758
type which is a<font color="#CCCCCC"> hostname</font><font color="#E5E5E5"> type allowing</font>

224
00:08:21,539 --> 00:08:25,438
the<font color="#E5E5E5"> system to do a</font><font color="#CCCCCC"> dns lookup for the</font>

225
00:08:23,759 --> 00:08:27,029
user<font color="#E5E5E5"> rather than having them do the</font><font color="#CCCCCC"> DNS</font>

226
00:08:25,439 --> 00:08:31,020
lookup<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then connect</font><font color="#E5E5E5"> that IP</font><font color="#CCCCCC"> address</font>

227
00:08:27,029 --> 00:08:33,179
that<font color="#E5E5E5"> results from it before</font><font color="#CCCCCC"> we embarked</font>

228
00:08:31,020 --> 00:08:34,948
on this<font color="#E5E5E5"> little</font><font color="#CCCCCC"> journey of ours we did a</font>

229
00:08:33,179 --> 00:08:36,899
little<font color="#E5E5E5"> bit of recon</font><font color="#CCCCCC"> we wanted</font><font color="#E5E5E5"> to make</font>

230
00:08:34,948 --> 00:08:39,630
sure<font color="#CCCCCC"> that we had a</font><font color="#E5E5E5"> general idea of</font><font color="#CCCCCC"> how</font>

231
00:08:36,899 --> 00:08:41,490
TLS was already being<font color="#CCCCCC"> used</font><font color="#E5E5E5"> and in</font><font color="#CCCCCC"> the</font>

232
00:08:39,630 --> 00:08:42,599
practice<font color="#E5E5E5"> and we also wanted to take a</font>

233
00:08:41,490 --> 00:08:45,120
look at all of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> different mistakes</font>

234
00:08:42,599 --> 00:08:46,829
developers were making to help<font color="#E5E5E5"> guide</font><font color="#CCCCCC"> our</font>

235
00:08:45,120 --> 00:08:49,199
decision process as we were creating

236
00:08:46,829 --> 00:08:52,560
this API<font color="#E5E5E5"> so to do</font><font color="#CCCCCC"> that we actually</font>

237
00:08:49,199 --> 00:08:56,819
<font color="#E5E5E5">analyzed the top 410 a boon to packages</font>

238
00:08:52,560 --> 00:08:59,399
<font color="#E5E5E5">on a booting Ubuntu 1604</font><font color="#CCCCCC"> that used open</font>

239
00:08:56,820 --> 00:09:01,709
<font color="#E5E5E5">SSL for TLS connectivity and these were</font>

240
00:08:59,399 --> 00:09:03,420
both server and client applications<font color="#CCCCCC"> we</font>

241
00:09:01,709 --> 00:09:04,859
we then took all<font color="#CCCCCC"> of the different</font>

242
00:09:03,420 --> 00:09:06,120
symbols that were<font color="#E5E5E5"> exported</font>

243
00:09:04,860 --> 00:09:08,190
by<font color="#E5E5E5"> open ssl broke them down by</font>

244
00:09:06,120 --> 00:09:09,780
categories and looked to see<font color="#E5E5E5"> for each</font>

245
00:09:08,190 --> 00:09:11,430
<font color="#E5E5E5">category how all these</font><font color="#CCCCCC"> different</font>

246
00:09:09,780 --> 00:09:14,430
applications<font color="#E5E5E5"> were using and in some</font>

247
00:09:11,430 --> 00:09:16,620
cases abusing that that<font color="#CCCCCC"> api the results</font>

248
00:09:14,430 --> 00:09:17,939
of that particular<font color="#CCCCCC"> effort are too</font><font color="#E5E5E5"> much</font>

249
00:09:16,620 --> 00:09:19,410
to go<font color="#E5E5E5"> into for this talk but if you'd</font>

250
00:09:17,940 --> 00:09:21,330
<font color="#E5E5E5">like to check out our website</font><font color="#CCCCCC"> or our</font>

251
00:09:19,410 --> 00:09:24,300
<font color="#E5E5E5">paper that</font><font color="#CCCCCC"> has a lot more</font><font color="#E5E5E5"> details on</font>

252
00:09:21,330 --> 00:09:26,010
that<font color="#CCCCCC"> but these</font><font color="#E5E5E5"> efforts did help us</font>

253
00:09:24,300 --> 00:09:27,599
understand the kinds of<font color="#E5E5E5"> options that we</font>

254
00:09:26,010 --> 00:09:28,920
needed<font color="#E5E5E5"> to export to developers because</font>

255
00:09:27,600 --> 00:09:30,210
not every TLS<font color="#CCCCCC"> connection is going to be</font>

256
00:09:28,920 --> 00:09:32,790
the same and there are some variations

257
00:09:30,210 --> 00:09:34,740
<font color="#CCCCCC">in</font><font color="#E5E5E5"> the protocol</font><font color="#CCCCCC"> itself that are that</font>

258
00:09:32,790 --> 00:09:37,680
export options<font color="#CCCCCC"> to developers that they</font>

259
00:09:34,740 --> 00:09:39,060
<font color="#E5E5E5">might need and so we actually have a</font>

260
00:09:37,680 --> 00:09:41,430
very<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> vehicle for this in the</font>

261
00:09:39,060 --> 00:09:43,739
existing networking<font color="#CCCCCC"> API</font><font color="#E5E5E5"> using the set</font>

262
00:09:41,430 --> 00:09:47,219
socket<font color="#E5E5E5"> and</font><font color="#CCCCCC"> get sock opt options so under</font>

263
00:09:43,740 --> 00:09:49,320
TLS<font color="#E5E5E5"> you can create a TLS socket and then</font>

264
00:09:47,220 --> 00:09:51,750
and then use one of these<font color="#E5E5E5"> functions to</font>

265
00:09:49,320 --> 00:09:54,270
set various parameters<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you'd</font><font color="#E5E5E5"> need</font>

266
00:09:51,750 --> 00:09:55,860
<font color="#E5E5E5">for that connection</font><font color="#CCCCCC"> as an</font><font color="#E5E5E5"> example of</font>

267
00:09:54,270 --> 00:09:58,350
that we have two here shown on the

268
00:09:55,860 --> 00:10:01,050
<font color="#CCCCCC">screen this</font><font color="#E5E5E5"> is an example where a server</font>

269
00:09:58,350 --> 00:10:03,420
might want to<font color="#CCCCCC"> specify</font><font color="#E5E5E5"> its certificate</font>

270
00:10:01,050 --> 00:10:05,550
chain<font color="#E5E5E5"> where it's</font><font color="#CCCCCC"> located and then also</font>

271
00:10:03,420 --> 00:10:08,280
<font color="#CCCCCC">it's key to use so you</font><font color="#E5E5E5"> would do that</font>

272
00:10:05,550 --> 00:10:10,859
<font color="#E5E5E5">with a set socket operation and we've</font>

273
00:10:08,280 --> 00:10:12,870
actually<font color="#E5E5E5"> exported quite a few different</font>

274
00:10:10,860 --> 00:10:15,060
options<font color="#E5E5E5"> for developers based off the</font>

275
00:10:12,870 --> 00:10:16,260
<font color="#CCCCCC">Recon that we did on the apps and seeing</font>

276
00:10:15,060 --> 00:10:18,349
what kinds of options developers

277
00:10:16,260 --> 00:10:22,020
<font color="#CCCCCC">actually needed to</font><font color="#E5E5E5"> perform TLS</font>

278
00:10:18,350 --> 00:10:23,730
connections<font color="#E5E5E5"> and you can look at all</font><font color="#CCCCCC"> of</font>

279
00:10:22,020 --> 00:10:26,910
the<font color="#E5E5E5"> different definitions</font><font color="#CCCCCC"> for these in</font>

280
00:10:23,730 --> 00:10:28,620
our paper<font color="#CCCCCC"> I mentioned administrator</font>

281
00:10:26,910 --> 00:10:30,990
options<font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit earlier in the talk</font>

282
00:10:28,620 --> 00:10:33,150
<font color="#CCCCCC">this</font><font color="#E5E5E5"> was one</font><font color="#CCCCCC"> of the fundamental goals of</font>

283
00:10:30,990 --> 00:10:34,680
our project<font color="#CCCCCC"> it wasn't</font><font color="#E5E5E5"> just that</font>

284
00:10:33,150 --> 00:10:37,079
<font color="#E5E5E5">applications were</font><font color="#CCCCCC"> vulnerable because</font>

285
00:10:34,680 --> 00:10:38,609
<font color="#CCCCCC">they were being missed you know</font><font color="#E5E5E5"> SSL</font>

286
00:10:37,080 --> 00:10:40,620
libraries and things<font color="#CCCCCC"> weren't</font><font color="#E5E5E5"> being you</font>

287
00:10:38,610 --> 00:10:42,540
<font color="#E5E5E5">know misused by developers there was</font>

288
00:10:40,620 --> 00:10:45,150
also<font color="#E5E5E5"> some</font><font color="#CCCCCC"> issues with the</font><font color="#E5E5E5"> fact that an</font>

289
00:10:42,540 --> 00:10:48,150
application<font color="#E5E5E5"> that's fine and secure</font><font color="#CCCCCC"> today</font>

290
00:10:45,150 --> 00:10:49,860
<font color="#E5E5E5">might not</font><font color="#CCCCCC"> be secure tomorrow because</font>

291
00:10:48,150 --> 00:10:52,439
maybe somebody<font color="#E5E5E5"> finds an exploit in a</font>

292
00:10:49,860 --> 00:10:54,810
particular cipher<font color="#E5E5E5"> suite and right now</font>

293
00:10:52,440 --> 00:10:56,970
developers are administrators are kind

294
00:10:54,810 --> 00:10:58,079
of powerless to deal with that if they

295
00:10:56,970 --> 00:10:59,850
have an<font color="#CCCCCC"> application</font><font color="#E5E5E5"> that they really</font>

296
00:10:58,080 --> 00:11:02,190
want<font color="#E5E5E5"> to use that</font><font color="#CCCCCC"> is using an outdated</font>

297
00:10:59,850 --> 00:11:04,290
<font color="#E5E5E5">version</font><font color="#CCCCCC"> of TLS</font><font color="#E5E5E5"> there's not much they can</font>

298
00:11:02,190 --> 00:11:06,510
<font color="#E5E5E5">do and so we'd</font><font color="#CCCCCC"> like to provide them with</font>

299
00:11:04,290 --> 00:11:08,219
<font color="#CCCCCC">an opportunity</font><font color="#E5E5E5"> to maintain their you</font>

300
00:11:06,510 --> 00:11:10,140
know their own standards<font color="#CCCCCC"> for security</font>

301
00:11:08,220 --> 00:11:11,400
and you know<font color="#E5E5E5"> frankly the administrators</font>

302
00:11:10,140 --> 00:11:13,080
of<font color="#CCCCCC"> the system have a better idea</font><font color="#E5E5E5"> of that</font>

303
00:11:11,400 --> 00:11:15,569
than anybody<font color="#E5E5E5"> else and I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> mean just</font>

304
00:11:13,080 --> 00:11:17,160
administrators and power<font color="#E5E5E5"> users I'm for</font>

305
00:11:15,570 --> 00:11:19,209
the for the lay users<font color="#E5E5E5"> that we have out</font>

306
00:11:17,160 --> 00:11:20,740
there<font color="#E5E5E5"> you know we we expect</font>

307
00:11:19,209 --> 00:11:22,239
these<font color="#E5E5E5"> options can be exported to</font>

308
00:11:20,740 --> 00:11:24,220
operating system vendors who might be

309
00:11:22,240 --> 00:11:26,500
<font color="#E5E5E5">interested in pushing</font><font color="#CCCCCC"> updates is let's</font>

310
00:11:24,220 --> 00:11:28,209
say you know TLS 1.2 becomes deprecated

311
00:11:26,500 --> 00:11:29,529
tomorrow and you know if they want<font color="#E5E5E5"> to</font>

312
00:11:28,209 --> 00:11:31,149
upgrade<font color="#E5E5E5"> everyone out everyone to the</font>

313
00:11:29,529 --> 00:11:33,819
<font color="#CCCCCC">tailless 1.3 well we can do</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> using</font>

314
00:11:31,149 --> 00:11:35,829
this<font color="#CCCCCC"> system provided</font><font color="#E5E5E5"> providing these</font>

315
00:11:33,819 --> 00:11:37,959
administrator options to them so right

316
00:11:35,829 --> 00:11:40,660
now as it stands administrators have a

317
00:11:37,959 --> 00:11:45,219
few options<font color="#E5E5E5"> that they can use to</font><font color="#CCCCCC"> control</font>

318
00:11:40,660 --> 00:11:46,779
the<font color="#CCCCCC"> behavior</font><font color="#E5E5E5"> of all SSA TLS connections</font>

319
00:11:45,220 --> 00:11:48,279
<font color="#E5E5E5">from their machines they can specify</font>

320
00:11:46,779 --> 00:11:51,519
like what the minimum and maximum

321
00:11:48,279 --> 00:11:53,170
versions of<font color="#E5E5E5"> of TLS that they like to use</font>

322
00:11:51,519 --> 00:11:55,089
<font color="#E5E5E5">they can specify the cipher</font><font color="#CCCCCC"> suites</font>

323
00:11:53,170 --> 00:11:57,519
they'd like<font color="#CCCCCC"> to pick an</font><font color="#E5E5E5"> order of</font>

324
00:11:55,089 --> 00:11:59,319
preference and also get rid<font color="#CCCCCC"> of some if</font>

325
00:11:57,519 --> 00:12:00,970
they want to<font color="#CCCCCC"> ban them altogether</font><font color="#E5E5E5"> and in</font>

326
00:11:59,319 --> 00:12:02,620
this way<font color="#E5E5E5"> you can you can maybe see an</font>

327
00:12:00,970 --> 00:12:05,560
application being<font color="#E5E5E5"> able to become</font>

328
00:12:02,620 --> 00:12:07,779
<font color="#E5E5E5">fips-compliant</font><font color="#CCCCCC"> from this from</font><font color="#E5E5E5"> a case</font>

329
00:12:05,560 --> 00:12:08,949
where it wasn't<font color="#E5E5E5"> beforehand</font><font color="#CCCCCC"> and they can</font>

330
00:12:07,779 --> 00:12:10,329
settle<font color="#E5E5E5"> this globally for all</font>

331
00:12:08,949 --> 00:12:11,709
applications<font color="#CCCCCC"> on</font><font color="#E5E5E5"> their machines so they</font>

332
00:12:10,329 --> 00:12:13,300
can also set it<font color="#E5E5E5"> on a per application</font>

333
00:12:11,709 --> 00:12:16,170
basis if they want to<font color="#E5E5E5"> tailor individual</font>

334
00:12:13,300 --> 00:12:18,189
applications to specific<font color="#E5E5E5"> situations</font>

335
00:12:16,170 --> 00:12:19,750
another thing<font color="#E5E5E5"> that needs treatment here</font>

336
00:12:18,190 --> 00:12:22,420
is certificate validation since that's

337
00:12:19,750 --> 00:12:23,620
such a<font color="#CCCCCC"> complicated task</font><font color="#E5E5E5"> administrators</font>

338
00:12:22,420 --> 00:12:26,110
who actually<font color="#E5E5E5"> have two</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> options</font>

339
00:12:23,620 --> 00:12:28,240
when it<font color="#CCCCCC"> comes to validating certificates</font>

340
00:12:26,110 --> 00:12:30,189
<font color="#E5E5E5">under the SSA they can do standard</font>

341
00:12:28,240 --> 00:12:31,990
validation which just basically employs

342
00:12:30,189 --> 00:12:33,449
the default<font color="#E5E5E5"> open</font><font color="#CCCCCC"> SSL checks as well as</font>

343
00:12:31,990 --> 00:12:37,029
<font color="#E5E5E5">hostname checks and a few other things</font>

344
00:12:33,449 --> 00:12:39,699
or they can specify<font color="#E5E5E5"> trust base and trust</font>

345
00:12:37,029 --> 00:12:42,069
<font color="#CCCCCC">basis</font><font color="#E5E5E5"> a work that we</font><font color="#CCCCCC"> presented last year</font>

346
00:12:39,699 --> 00:12:44,079
<font color="#E5E5E5">is</font><font color="#CCCCCC"> Nix</font><font color="#E5E5E5"> and it's it's essentially</font><font color="#CCCCCC"> just an</font>

347
00:12:42,069 --> 00:12:46,630
operating system service that performs a

348
00:12:44,079 --> 00:12:48,089
certificate validation on behalf of all

349
00:12:46,630 --> 00:12:50,740
the applications on a machine<font color="#E5E5E5"> and</font>

350
00:12:48,089 --> 00:12:53,649
administrators<font color="#CCCCCC"> can customize exactly how</font>

351
00:12:50,740 --> 00:12:55,509
this<font color="#E5E5E5"> validation is</font><font color="#CCCCCC"> performed they can do</font>

352
00:12:53,649 --> 00:12:57,610
<font color="#CCCCCC">normal standard certificate</font><font color="#E5E5E5"> authority</font>

353
00:12:55,509 --> 00:12:59,889
validation everything like that<font color="#E5E5E5"> all the</font>

354
00:12:57,610 --> 00:13:02,110
<font color="#E5E5E5">way</font><font color="#CCCCCC"> up to more exotic methods like using</font>

355
00:12:59,889 --> 00:13:03,970
notary based service like perspectives

356
00:13:02,110 --> 00:13:05,980
or convergence<font color="#E5E5E5"> and everything in between</font>

357
00:13:03,970 --> 00:13:07,990
<font color="#CCCCCC">and if they want to add like OCSP</font>

358
00:13:05,980 --> 00:13:09,759
checking and stapling and you know<font color="#CCCCCC"> crl</font>

359
00:13:07,990 --> 00:13:11,800
<font color="#E5E5E5">set checking like that can be done and</font>

360
00:13:09,759 --> 00:13:13,930
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> run all of these independently</font>

361
00:13:11,800 --> 00:13:15,819
or in<font color="#E5E5E5"> tandem it's all up to the</font>

362
00:13:13,930 --> 00:13:17,469
administrator<font color="#CCCCCC"> and what he wants or</font><font color="#E5E5E5"> in</font>

363
00:13:15,819 --> 00:13:19,139
<font color="#E5E5E5">some cases the operating system vendors</font>

364
00:13:17,470 --> 00:13:23,050
if they have an interest<font color="#CCCCCC"> in</font><font color="#E5E5E5"> doing that</font>

365
00:13:19,139 --> 00:13:25,870
and evaluating the utility<font color="#CCCCCC"> of the SSA we</font>

366
00:13:23,050 --> 00:13:27,309
went ahead<font color="#CCCCCC"> and evaluated you know how</font>

367
00:13:25,870 --> 00:13:30,010
long it took<font color="#CCCCCC"> and how many lines of</font><font color="#E5E5E5"> code</font>

368
00:13:27,309 --> 00:13:32,050
<font color="#E5E5E5">they required to change applications</font>

369
00:13:30,010 --> 00:13:34,089
<font color="#E5E5E5">that didn't use the SSA and</font>

370
00:13:32,050 --> 00:13:35,800
<font color="#CCCCCC">two applications</font><font color="#E5E5E5"> that did so at first we</font>

371
00:13:34,089 --> 00:13:38,440
took<font color="#CCCCCC"> W get and lighty</font>

372
00:13:35,800 --> 00:13:40,990
which were an HTTP client<font color="#CCCCCC"> and an HTTP</font>

373
00:13:38,440 --> 00:13:42,850
server respectively<font color="#E5E5E5"> and these these are</font>

374
00:13:40,990 --> 00:13:45,610
<font color="#E5E5E5">applications that already use TLS and</font>

375
00:13:42,850 --> 00:13:47,140
<font color="#E5E5E5">they use open SSL for</font><font color="#CCCCCC"> their for their</font>

376
00:13:45,610 --> 00:13:49,540
TLS functionality and we brought in<font color="#E5E5E5"> to</font>

377
00:13:47,140 --> 00:13:52,510
developers who<font color="#E5E5E5"> had never touched TLS</font><font color="#CCCCCC"> and</font>

378
00:13:49,540 --> 00:13:54,519
never even<font color="#E5E5E5"> seen open SSL and obviously</font>

379
00:13:52,510 --> 00:13:56,709
<font color="#CCCCCC">they'd never</font><font color="#E5E5E5"> seen the SSA either and we</font>

380
00:13:54,519 --> 00:13:58,269
had them modify<font color="#E5E5E5"> these applications so</font>

381
00:13:56,709 --> 00:13:59,760
that<font color="#CCCCCC"> they would retain all of</font><font color="#E5E5E5"> their TLS</font>

382
00:13:58,269 --> 00:14:01,660
functionality to admit<font color="#E5E5E5"> and the</font>

383
00:13:59,760 --> 00:14:04,839
<font color="#E5E5E5">configuration</font><font color="#CCCCCC"> of control</font><font color="#E5E5E5"> over all these</font>

384
00:14:01,660 --> 00:14:07,180
<font color="#CCCCCC">things and</font><font color="#E5E5E5"> and use the SSA instead and</font>

385
00:14:04,839 --> 00:14:08,920
in both cases it<font color="#E5E5E5"> took these developers</font>

386
00:14:07,180 --> 00:14:10,839
less than<font color="#E5E5E5"> five hours most of which was</font>

387
00:14:08,920 --> 00:14:13,120
<font color="#E5E5E5">simply then learning the code bases of</font>

388
00:14:10,839 --> 00:14:14,350
these large projects and then the the

389
00:14:13,120 --> 00:14:16,060
coolest<font color="#CCCCCC"> thing I think is that they were</font>

390
00:14:14,350 --> 00:14:18,160
able<font color="#E5E5E5"> to remove thousands of lines of</font>

391
00:14:16,060 --> 00:14:19,899
<font color="#E5E5E5">code</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> replace them</font><font color="#CCCCCC"> with just you know</font>

392
00:14:18,160 --> 00:14:23,319
under<font color="#CCCCCC"> 20 lines of</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> to making</font><font color="#E5E5E5"> it much</font>

393
00:14:19,899 --> 00:14:25,240
<font color="#CCCCCC">more simple in a separate set of</font><font color="#E5E5E5"> tests</font>

394
00:14:23,320 --> 00:14:27,250
we took an in-house<font color="#E5E5E5"> web server we had</font>

395
00:14:25,240 --> 00:14:29,950
developed<font color="#CCCCCC"> that</font><font color="#E5E5E5"> had never been employing</font>

396
00:14:27,250 --> 00:14:32,320
<font color="#E5E5E5">TLS in any way and then netcat which</font>

397
00:14:29,950 --> 00:14:34,180
also has never employed TLS<font color="#CCCCCC"> and we had</font>

398
00:14:32,320 --> 00:14:37,060
different developers take these

399
00:14:34,180 --> 00:14:39,760
applications and upgrade them to<font color="#E5E5E5"> use TLS</font>

400
00:14:37,060 --> 00:14:42,369
using the SSA and in both cases it<font color="#E5E5E5"> took</font>

401
00:14:39,760 --> 00:14:44,970
about<font color="#E5E5E5"> five lines of code and under ten</font>

402
00:14:42,370 --> 00:14:48,160
<font color="#E5E5E5">minutes which we thought was really nice</font>

403
00:14:44,970 --> 00:14:50,980
in an<font color="#E5E5E5"> effort to extend the</font><font color="#CCCCCC"> support of</font>

404
00:14:48,160 --> 00:14:52,600
the SSA to other languages<font color="#CCCCCC"> we</font><font color="#E5E5E5"> wanted to</font>

405
00:14:50,980 --> 00:14:53,980
make sure<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we could you know easily</font>

406
00:14:52,600 --> 00:14:55,240
extend<font color="#E5E5E5"> language support so that all</font>

407
00:14:53,980 --> 00:14:57,220
<font color="#E5E5E5">languages on a machine could have a</font>

408
00:14:55,240 --> 00:15:00,670
centralized place where<font color="#CCCCCC"> administrators</font>

409
00:14:57,220 --> 00:15:01,990
could control TLS behavior so to do that

410
00:15:00,670 --> 00:15:04,479
we<font color="#E5E5E5"> actually had a we actually ate a lot</font>

411
00:15:01,990 --> 00:15:06,100
<font color="#E5E5E5">of</font><font color="#CCCCCC"> that for free being that we are a</font>

412
00:15:04,480 --> 00:15:08,230
kernel module sitting behind<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system</font>

413
00:15:06,100 --> 00:15:10,089
call layer any sort of<font color="#CCCCCC"> network call is</font>

414
00:15:08,230 --> 00:15:12,130
<font color="#E5E5E5">going to go straight to</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> and every</font>

415
00:15:10,089 --> 00:15:13,990
single<font color="#E5E5E5"> application or language that uses</font>

416
00:15:12,130 --> 00:15:16,720
the<font color="#E5E5E5"> internet must eventually be using a</font>

417
00:15:13,990 --> 00:15:18,970
<font color="#E5E5E5">network</font><font color="#CCCCCC"> system call at some point and so</font>

418
00:15:16,720 --> 00:15:21,940
our position<font color="#E5E5E5"> there allowed us to just</font>

419
00:15:18,970 --> 00:15:24,640
<font color="#E5E5E5">easily support any sort of language that</font>

420
00:15:21,940 --> 00:15:27,940
was<font color="#E5E5E5"> trying to use the</font><font color="#CCCCCC"> Internet as an</font>

421
00:15:24,640 --> 00:15:30,880
<font color="#E5E5E5">example of this we we added SSA support</font>

422
00:15:27,940 --> 00:15:32,560
to go Python and PHP Python and PHP were

423
00:15:30,880 --> 00:15:33,850
rather simple since the implementations

424
00:15:32,560 --> 00:15:35,469
we were using<font color="#E5E5E5"> of those their</font>

425
00:15:33,850 --> 00:15:37,060
interpreters both used<font color="#CCCCCC"> lib see behind</font>

426
00:15:35,470 --> 00:15:39,339
the scenes so all we had to do is make

427
00:15:37,060 --> 00:15:40,930
them aware<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the various constants like</font>

428
00:15:39,339 --> 00:15:42,690
the administrator or sorry the developer

429
00:15:40,930 --> 00:15:45,430
<font color="#CCCCCC">options I showed you before and</font><font color="#E5E5E5"> the IP</font>

430
00:15:42,690 --> 00:15:47,770
prototype for the socket call make

431
00:15:45,430 --> 00:15:49,300
I'm aware of<font color="#E5E5E5"> those constants fixed</font>

432
00:15:47,770 --> 00:15:51,880
<font color="#E5E5E5">everything and they were able to create</font>

433
00:15:49,300 --> 00:15:54,160
native<font color="#E5E5E5"> PHP and Python applications that</font>

434
00:15:51,880 --> 00:15:56,710
just use the SSA without any<font color="#E5E5E5"> more</font>

435
00:15:54,160 --> 00:15:58,270
<font color="#E5E5E5">modification than that go</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> slightly</font>

436
00:15:56,710 --> 00:16:00,190
<font color="#E5E5E5">different because they actually make</font>

437
00:15:58,270 --> 00:16:01,569
their own system call wrappers<font color="#CCCCCC"> so all we</font>

438
00:16:00,190 --> 00:16:03,760
had to do for<font color="#CCCCCC"> that was</font><font color="#E5E5E5"> just make the</font>

439
00:16:01,570 --> 00:16:05,350
<font color="#CCCCCC">corresponding TLS ones with less</font><font color="#E5E5E5"> than 50</font>

440
00:16:03,760 --> 00:16:08,020
lines of<font color="#E5E5E5"> code and then go applications</font>

441
00:16:05,350 --> 00:16:11,860
could also use<font color="#CCCCCC"> use TLS using the the</font>

442
00:16:08,020 --> 00:16:13,390
dialer interface in terms of<font color="#E5E5E5"> performance</font>

443
00:16:11,860 --> 00:16:14,620
versus open<font color="#E5E5E5"> SSL we wanted to make sure</font>

444
00:16:13,390 --> 00:16:18,130
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we weren't adding any undue</font>

445
00:16:14,620 --> 00:16:20,080
overhead<font color="#CCCCCC"> so what we did was we created</font><font color="#E5E5E5"> a</font>

446
00:16:18,130 --> 00:16:21,700
just a<font color="#E5E5E5"> simple stress test application</font>

447
00:16:20,080 --> 00:16:25,750
that went off and visited a remote<font color="#E5E5E5"> host</font>

448
00:16:21,700 --> 00:16:27,700
<font color="#E5E5E5">and then</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> local one and these and then</font>

449
00:16:25,750 --> 00:16:29,200
we created<font color="#E5E5E5"> that same exact program and</font>

450
00:16:27,700 --> 00:16:30,490
with the SSA and<font color="#E5E5E5"> then we just kind</font><font color="#CCCCCC"> of</font>

451
00:16:29,200 --> 00:16:32,800
ran<font color="#CCCCCC"> them against each</font><font color="#E5E5E5"> other to make sure</font>

452
00:16:30,490 --> 00:16:35,230
<font color="#E5E5E5">that they weren't you know that we</font>

453
00:16:32,800 --> 00:16:36,729
didn't add<font color="#CCCCCC"> any extra overhead</font><font color="#E5E5E5"> and we're</font>

454
00:16:35,230 --> 00:16:38,050
happy<font color="#E5E5E5"> to report</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we don't um it's</font>

455
00:16:36,730 --> 00:16:39,250
kind of hard to<font color="#E5E5E5"> see cuz there's actually</font>

456
00:16:38,050 --> 00:16:42,040
four lines<font color="#E5E5E5"> there but they're on top of</font>

457
00:16:39,250 --> 00:16:44,050
<font color="#E5E5E5">each other and in both the remote</font><font color="#CCCCCC"> and</font>

458
00:16:42,040 --> 00:16:45,219
local<font color="#E5E5E5"> cases we don't add any overhead in</font>

459
00:16:44,050 --> 00:16:46,959
fact in the remote case<font color="#CCCCCC"> we're a little</font>

460
00:16:45,220 --> 00:16:48,580
bit faster<font color="#CCCCCC"> we're</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> exactly sure</font><font color="#E5E5E5"> why</font>

461
00:16:46,959 --> 00:16:50,310
but<font color="#E5E5E5"> we suspect</font><font color="#CCCCCC"> that just caching</font>

462
00:16:48,580 --> 00:16:52,690
behaviors might account for<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> that</font>

463
00:16:50,310 --> 00:16:53,859
but yeah we ran you know<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> from</font>

464
00:16:52,690 --> 00:16:55,660
like<font color="#E5E5E5"> one to a hundred different</font>

465
00:16:53,860 --> 00:16:59,380
concurrent processes and didn't see any

466
00:16:55,660 --> 00:17:02,740
any major problems there<font color="#E5E5E5"> but that's kind</font>

467
00:16:59,380 --> 00:17:04,839
<font color="#E5E5E5">of ongoing benchmarking effort we also</font>

468
00:17:02,740 --> 00:17:08,380
wanted to<font color="#E5E5E5"> broaden the coverage of the</font>

469
00:17:04,839 --> 00:17:10,059
SSA<font color="#E5E5E5"> because there's a lot of admins out</font>

470
00:17:08,380 --> 00:17:12,040
there who perhaps<font color="#E5E5E5"> want to be using an</font>

471
00:17:10,059 --> 00:17:13,750
<font color="#CCCCCC">application that perhaps</font><font color="#E5E5E5"> won't be ported</font>

472
00:17:12,040 --> 00:17:15,639
to<font color="#E5E5E5"> the SSA</font><font color="#CCCCCC"> or maybe it's gonna</font><font color="#E5E5E5"> take a</font>

473
00:17:13,750 --> 00:17:17,619
while<font color="#CCCCCC"> and so we made a little tool that</font>

474
00:17:15,640 --> 00:17:19,959
<font color="#CCCCCC">allowed applications that are written</font>

475
00:17:17,619 --> 00:17:22,270
<font color="#E5E5E5">for open SSL convert their behavior to</font>

476
00:17:19,959 --> 00:17:24,429
using SSA behind the scenes so<font color="#E5E5E5"> we made a</font>

477
00:17:22,270 --> 00:17:26,500
<font color="#E5E5E5">little open SSL emulator that overrode</font>

478
00:17:24,429 --> 00:17:28,750
all of the different<font color="#CCCCCC"> functions that</font>

479
00:17:26,500 --> 00:17:30,880
<font color="#E5E5E5">people</font><font color="#CCCCCC"> are calling an open SSL to</font>

480
00:17:28,750 --> 00:17:33,130
configure their TLS parameters and to

481
00:17:30,880 --> 00:17:35,740
<font color="#E5E5E5">access the</font><font color="#CCCCCC"> network so any function that</font>

482
00:17:33,130 --> 00:17:36,820
called<font color="#E5E5E5"> a file descriptor</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> any function</font>

483
00:17:35,740 --> 00:17:39,220
that<font color="#E5E5E5"> you know touch the file descriptor</font>

484
00:17:36,820 --> 00:17:41,678
<font color="#E5E5E5">or socket descriptor we overrode that so</font>

485
00:17:39,220 --> 00:17:44,080
that it would<font color="#E5E5E5"> be using our socket calls</font>

486
00:17:41,679 --> 00:17:45,730
behind the scenes and<font color="#E5E5E5"> then we also did</font>

487
00:17:44,080 --> 00:17:47,980
<font color="#CCCCCC">some</font><font color="#E5E5E5"> open SSL emulation for error</font>

488
00:17:45,730 --> 00:17:49,480
reporting and things<font color="#CCCCCC"> like that and using</font>

489
00:17:47,980 --> 00:17:52,960
this tool we were able<font color="#CCCCCC"> to dynamically</font>

490
00:17:49,480 --> 00:17:55,510
port<font color="#CCCCCC"> and cut</font><font color="#E5E5E5"> delegate</font><font color="#CCCCCC"> lighty</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> RC all</font>

491
00:17:52,960 --> 00:17:57,820
over to use the SSA<font color="#CCCCCC"> obey administrator</font>

492
00:17:55,510 --> 00:17:58,410
preferences for TLS despite the fact

493
00:17:57,820 --> 00:18:00,240
that<font color="#E5E5E5"> they weren't</font><font color="#CCCCCC"> read</font>

494
00:17:58,410 --> 00:18:04,680
for that<font color="#E5E5E5"> and we didn't have to</font><font color="#CCCCCC"> mattify</font>

495
00:18:00,240 --> 00:18:05,790
<font color="#CCCCCC">their code at all so there's a lot</font><font color="#E5E5E5"> of</font>

496
00:18:04,680 --> 00:18:08,670
different outcomes<font color="#CCCCCC"> from</font><font color="#E5E5E5"> this work</font>

497
00:18:05,790 --> 00:18:10,260
<font color="#CCCCCC">they're kind of</font><font color="#E5E5E5"> two camps</font><font color="#CCCCCC"> one camp is</font>

498
00:18:08,670 --> 00:18:11,640
just<font color="#CCCCCC"> the API itself</font><font color="#E5E5E5"> the secure socket</font>

499
00:18:10,260 --> 00:18:14,670
API could have many<font color="#E5E5E5"> different</font>

500
00:18:11,640 --> 00:18:16,770
implementations but we've chosen one and

501
00:18:14,670 --> 00:18:19,110
<font color="#E5E5E5">these general benefits are that we can</font>

502
00:18:16,770 --> 00:18:20,760
now allow developers to<font color="#E5E5E5"> create TLS</font>

503
00:18:19,110 --> 00:18:23,490
connections very simply<font color="#CCCCCC"> using an API</font>

504
00:18:20,760 --> 00:18:25,470
they already know<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> - we allow</font>

505
00:18:23,490 --> 00:18:27,270
administrators to<font color="#E5E5E5"> control all of the</font>

506
00:18:25,470 --> 00:18:28,680
different TLS configuration settings<font color="#CCCCCC"> for</font>

507
00:18:27,270 --> 00:18:31,920
those<font color="#E5E5E5"> applications that are</font><font color="#CCCCCC"> using that</font>

508
00:18:28,680 --> 00:18:34,710
SSA<font color="#E5E5E5"> API and then on the implementation</font>

509
00:18:31,920 --> 00:18:37,440
<font color="#E5E5E5">side as you saw it's really really easy</font>

510
00:18:34,710 --> 00:18:38,910
<font color="#E5E5E5">for</font><font color="#CCCCCC"> us to add</font><font color="#E5E5E5"> language support all of</font>

511
00:18:37,440 --> 00:18:41,550
<font color="#E5E5E5">the different language modifications we</font>

512
00:18:38,910 --> 00:18:42,930
made<font color="#E5E5E5"> took less than a day and in many</font>

513
00:18:41,550 --> 00:18:44,220
<font color="#E5E5E5">cases are just like less than</font><font color="#CCCCCC"> 10 lines</font>

514
00:18:42,930 --> 00:18:47,640
of code because it was<font color="#E5E5E5"> just adding</font>

515
00:18:44,220 --> 00:18:49,650
constants definitions and things<font color="#CCCCCC"> we also</font>

516
00:18:47,640 --> 00:18:51,750
provide natural privilege separation

517
00:18:49,650 --> 00:18:53,510
this way so you<font color="#E5E5E5"> can imagine right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> an</font>

518
00:18:51,750 --> 00:18:55,650
<font color="#CCCCCC">application that has</font><font color="#E5E5E5"> some sort of bug</font>

519
00:18:53,510 --> 00:18:58,020
<font color="#CCCCCC">may</font><font color="#E5E5E5"> be a buffer overflow or something</font>

520
00:18:55,650 --> 00:19:00,000
that leaves it vulnerable<font color="#CCCCCC"> well right now</font>

521
00:18:58,020 --> 00:19:02,610
if it's linking with open SSL then

522
00:19:00,000 --> 00:19:04,260
things<font color="#E5E5E5"> like your master secrets and you</font>

523
00:19:02,610 --> 00:19:06,060
know<font color="#E5E5E5"> your private key data is in the</font>

524
00:19:04,260 --> 00:19:08,310
same<font color="#E5E5E5"> address space as that application</font>

525
00:19:06,060 --> 00:19:10,560
and so it's easily<font color="#E5E5E5"> exploited or at least</font>

526
00:19:08,310 --> 00:19:11,669
it can be<font color="#E5E5E5"> with the SSA we actually get</font>

527
00:19:10,560 --> 00:19:13,050
<font color="#CCCCCC">to leverage the fact that we're behind</font>

528
00:19:11,670 --> 00:19:15,090
<font color="#E5E5E5">the system called boundary and it's a</font>

529
00:19:13,050 --> 00:19:16,409
<font color="#E5E5E5">really nice long amount of work that's</font>

530
00:19:15,090 --> 00:19:19,080
gone into<font color="#E5E5E5"> making sure that that's a very</font>

531
00:19:16,410 --> 00:19:21,090
<font color="#E5E5E5">secure layer and you know all the</font>

532
00:19:19,080 --> 00:19:22,080
private key did is<font color="#E5E5E5"> actually in a totally</font>

533
00:19:21,090 --> 00:19:23,370
different<font color="#CCCCCC"> address base</font><font color="#E5E5E5"> so if your</font>

534
00:19:22,080 --> 00:19:25,350
application<font color="#CCCCCC"> gets compromised your key</font>

535
00:19:23,370 --> 00:19:28,500
<font color="#E5E5E5">data is not necessarily</font><font color="#CCCCCC"> at risk</font><font color="#E5E5E5"> or at</font>

536
00:19:25,350 --> 00:19:31,110
least not as<font color="#CCCCCC"> easily at risk we also</font>

537
00:19:28,500 --> 00:19:32,760
support various different alternative

538
00:19:31,110 --> 00:19:34,560
implementations if desired our kernel

539
00:19:32,760 --> 00:19:37,980
module doesn't necessarily<font color="#CCCCCC"> dictate how</font>

540
00:19:34,560 --> 00:19:40,440
the<font color="#E5E5E5"> encryption and TLS</font><font color="#CCCCCC"> configuration is</font>

541
00:19:37,980 --> 00:19:42,210
performed we just have export an API<font color="#CCCCCC"> and</font>

542
00:19:40,440 --> 00:19:43,470
then use<font color="#CCCCCC"> user space Damons and so it's</font>

543
00:19:42,210 --> 00:19:44,790
if someone wants to<font color="#E5E5E5"> create an</font>

544
00:19:43,470 --> 00:19:46,590
alternative implementation that's

545
00:19:44,790 --> 00:19:48,180
totally up to<font color="#E5E5E5"> them in fact there's lots</font>

546
00:19:46,590 --> 00:19:50,070
of different options<font color="#E5E5E5"> there like a total</font>

547
00:19:48,180 --> 00:19:53,160
user space<font color="#E5E5E5"> implementation - which would</font>

548
00:19:50,070 --> 00:19:56,310
have different<font color="#CCCCCC"> benefits but in</font>

549
00:19:53,160 --> 00:19:58,380
conclusion<font color="#E5E5E5"> the secure socket API is a</font>

550
00:19:56,310 --> 00:20:00,780
nice little API that enables<font color="#E5E5E5"> developers</font>

551
00:19:58,380 --> 00:20:03,510
to secure their their connections using

552
00:20:00,780 --> 00:20:05,879
<font color="#E5E5E5">TLS using an own API that every network</font>

553
00:20:03,510 --> 00:20:07,350
developer already understands<font color="#E5E5E5"> and in</font>

554
00:20:05,880 --> 00:20:10,530
ways that you<font color="#CCCCCC"> as a user or administrator</font>

555
00:20:07,350 --> 00:20:21,179
can control thank you

556
00:20:10,530 --> 00:20:23,460
<font color="#E5E5E5">a very interesting idea there</font><font color="#CCCCCC"> have you</font>

557
00:20:21,180 --> 00:20:25,860
<font color="#E5E5E5">considered the</font><font color="#CCCCCC"> possibility of</font><font color="#E5E5E5"> extending</font>

558
00:20:23,460 --> 00:20:28,950
the<font color="#CCCCCC"> kernel side support to</font><font color="#E5E5E5"> support</font>

559
00:20:25,860 --> 00:20:30,600
general redirection of new user space

560
00:20:28,950 --> 00:20:33,810
implementation of protocols kind of like

561
00:20:30,600 --> 00:20:35,610
fuse<font color="#E5E5E5"> I've considered that briefly I</font>

562
00:20:33,810 --> 00:20:37,169
think that<font color="#E5E5E5"> that's something that we I</font>

563
00:20:35,610 --> 00:20:38,429
<font color="#E5E5E5">would definitely be</font><font color="#CCCCCC"> interested in going</font>

564
00:20:37,170 --> 00:20:40,920
<font color="#E5E5E5">but we</font><font color="#CCCCCC"> haven't</font><font color="#E5E5E5"> done anything like</font><font color="#CCCCCC"> that</font>

565
00:20:38,430 --> 00:20:43,050
<font color="#E5E5E5">okay and I'm also wondering a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

566
00:20:40,920 --> 00:20:44,880
if there's any<font color="#E5E5E5"> additional risk</font><font color="#CCCCCC"> by</font>

567
00:20:43,050 --> 00:20:47,280
combining multiple<font color="#CCCCCC"> processes TLS</font>

568
00:20:44,880 --> 00:20:49,620
sessions<font color="#E5E5E5"> into one of Spectre gadgets and</font>

569
00:20:47,280 --> 00:20:51,899
other such<font color="#E5E5E5"> side-channel attacks leaking</font>

570
00:20:49,620 --> 00:20:54,300
<font color="#E5E5E5">information across that battery probably</font>

571
00:20:51,900 --> 00:20:56,400
<font color="#CCCCCC">I haven't looked</font><font color="#E5E5E5"> too much into that we</font>

572
00:20:54,300 --> 00:20:58,080
do<font color="#E5E5E5"> we're still working on making sure</font>

573
00:20:56,400 --> 00:21:00,870
<font color="#CCCCCC">that there are less</font><font color="#E5E5E5"> issues there like</font>

574
00:20:58,080 --> 00:21:02,699
obviously having one daemon that's well

575
00:21:00,870 --> 00:21:03,959
doing all of your TLS connections has

576
00:21:02,700 --> 00:21:06,120
some issues with<font color="#CCCCCC"> the centralization</font>

577
00:21:03,960 --> 00:21:08,370
aspect<font color="#E5E5E5"> and we do have</font><font color="#CCCCCC"> options currently</font>

578
00:21:06,120 --> 00:21:09,810
<font color="#E5E5E5">to just isolate those</font><font color="#CCCCCC"> you can have one</font>

579
00:21:08,370 --> 00:21:11,100
daemon for<font color="#E5E5E5"> applications so there's a</font>

580
00:21:09,810 --> 00:21:12,540
little<font color="#CCCCCC"> bit more isolation there but yeah</font>

581
00:21:11,100 --> 00:21:17,760
there are some additional security

582
00:21:12,540 --> 00:21:19,770
<font color="#CCCCCC">analysis to take place</font><font color="#E5E5E5"> thank you you</font>

583
00:21:17,760 --> 00:21:22,020
already<font color="#E5E5E5"> started touching on the question</font>

584
00:21:19,770 --> 00:21:24,680
<font color="#CCCCCC">that I was</font><font color="#E5E5E5"> about to ask do you foresee</font>

585
00:21:22,020 --> 00:21:27,950
<font color="#E5E5E5">any challenges that come</font><font color="#CCCCCC"> with the</font>

586
00:21:24,680 --> 00:21:30,960
developers using<font color="#E5E5E5"> your API</font><font color="#CCCCCC"> and</font>

587
00:21:27,950 --> 00:21:32,790
intentionally or not<font color="#CCCCCC"> reusing the keys</font>

588
00:21:30,960 --> 00:21:35,880
for multiple<font color="#CCCCCC"> applications and multiple</font>

589
00:21:32,790 --> 00:21:37,770
scenarios<font color="#E5E5E5"> so like session keys or</font><font color="#CCCCCC"> no</font>

590
00:21:35,880 --> 00:21:39,240
<font color="#CCCCCC">likes</font><font color="#E5E5E5"> just like actual like private keys</font>

591
00:21:37,770 --> 00:21:41,550
and probably<font color="#CCCCCC"> giving certificates yeah</font>

592
00:21:39,240 --> 00:21:43,650
<font color="#E5E5E5">well we do allow them to specify what</font>

593
00:21:41,550 --> 00:21:46,169
keys they're using but the administrator

594
00:21:43,650 --> 00:21:47,460
can override<font color="#E5E5E5"> that if you'd like we prove</font>

595
00:21:46,170 --> 00:21:49,440
every time there's a conflict<font color="#CCCCCC"> between a</font>

596
00:21:47,460 --> 00:21:51,990
<font color="#E5E5E5">developer's wishes and administrators we</font>

597
00:21:49,440 --> 00:21:53,190
change that so if<font color="#CCCCCC"> system administrators</font>

598
00:21:51,990 --> 00:21:54,840
<font color="#CCCCCC">and operating system vendors around</font><font color="#E5E5E5"> top</font>

599
00:21:53,190 --> 00:21:56,730
of that we could<font color="#CCCCCC"> probably for you know</font>

600
00:21:54,840 --> 00:21:58,050
<font color="#E5E5E5">avoid that a bit more but I don't have</font>

601
00:21:56,730 --> 00:21:59,280
<font color="#E5E5E5">any protections currently in there</font>

602
00:21:58,050 --> 00:22:00,600
that'll just say that<font color="#E5E5E5"> now you've</font><font color="#CCCCCC"> used</font>

603
00:21:59,280 --> 00:22:01,950
<font color="#CCCCCC">this</font><font color="#E5E5E5"> private key for too long</font>

604
00:22:00,600 --> 00:22:03,209
that's an interesting<font color="#CCCCCC"> idea that</font><font color="#E5E5E5"> we could</font>

605
00:22:01,950 --> 00:22:05,760
perhaps implement something like<font color="#E5E5E5"> that</font>

606
00:22:03,210 --> 00:22:07,500
<font color="#E5E5E5">and a second</font><font color="#CCCCCC"> question if I may um I</font>

607
00:22:05,760 --> 00:22:08,850
didn't<font color="#E5E5E5"> really see the list very</font>

608
00:22:07,500 --> 00:22:11,400
carefully I didn't look<font color="#E5E5E5"> at this very</font>

609
00:22:08,850 --> 00:22:14,639
<font color="#E5E5E5">carefully but one of the things that is</font>

610
00:22:11,400 --> 00:22:16,650
often handy is to use<font color="#CCCCCC"> selection poll in</font>

611
00:22:14,640 --> 00:22:19,320
the<font color="#CCCCCC"> more complicated servers yeah not</font>

612
00:22:16,650 --> 00:22:22,230
just<font color="#CCCCCC"> accept do you have any well how</font>

613
00:22:19,320 --> 00:22:24,090
<font color="#CCCCCC">does your code work with</font><font color="#E5E5E5"> that yeah so we</font>

614
00:22:22,230 --> 00:22:24,450
<font color="#E5E5E5">actually implement the user space daemon</font>

615
00:22:24,090 --> 00:22:26,790
almost like

616
00:22:24,450 --> 00:22:28,770
proxy internally<font color="#E5E5E5"> and so we</font><font color="#CCCCCC"> actually get</font>

617
00:22:26,790 --> 00:22:30,420
the<font color="#E5E5E5"> e pull and select and functionality</font>

618
00:22:28,770 --> 00:22:31,440
for<font color="#E5E5E5"> free</font><font color="#CCCCCC"> and we've tested</font><font color="#E5E5E5"> that we</font>

619
00:22:30,420 --> 00:22:32,640
actually<font color="#E5E5E5"> have a test file where it's</font>

620
00:22:31,440 --> 00:22:34,290
it's a web server this event driven

621
00:22:32,640 --> 00:22:40,650
<font color="#E5E5E5">using eople and it works just great with</font>

622
00:22:34,290 --> 00:22:42,870
the SSA<font color="#E5E5E5"> you</font><font color="#CCCCCC"> showed that your</font><font color="#E5E5E5"> API is very</font>

623
00:22:40,650 --> 00:22:46,410
easy to<font color="#CCCCCC"> use and very efficient</font>

624
00:22:42,870 --> 00:22:48,360
did you also look how how<font color="#CCCCCC"> people without</font>

625
00:22:46,410 --> 00:22:50,910
whether people use<font color="#E5E5E5"> your API in a secure</font>

626
00:22:48,360 --> 00:22:53,639
way you're citing the paper of such a

627
00:22:50,910 --> 00:22:57,450
file where they<font color="#CCCCCC"> analyzed the Android</font>

628
00:22:53,640 --> 00:22:59,880
apps and<font color="#E5E5E5"> found that people use it wrong</font>

629
00:22:57,450 --> 00:23:02,700
in the wrong way very very<font color="#CCCCCC"> often</font><font color="#E5E5E5"> did you</font>

630
00:22:59,880 --> 00:23:07,230
<font color="#CCCCCC">analyze this so it's your API</font><font color="#E5E5E5"> secure by</font>

631
00:23:02,700 --> 00:23:09,240
default<font color="#CCCCCC"> you know for</font><font color="#E5E5E5"> example certificate</font>

632
00:23:07,230 --> 00:23:11,160
validation do you have to<font color="#E5E5E5"> explicitly</font>

633
00:23:09,240 --> 00:23:13,350
switch it off and<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> don't use the</font>

634
00:23:11,160 --> 00:23:15,690
<font color="#E5E5E5">parameter it's on something like this</font>

635
00:23:13,350 --> 00:23:16,980
yeah so all that is<font color="#E5E5E5"> security like</font>

636
00:23:15,690 --> 00:23:19,080
certificate<font color="#E5E5E5"> validation is on by default</font>

637
00:23:16,980 --> 00:23:20,120
<font color="#CCCCCC">and then the administrator</font><font color="#E5E5E5"> can actually</font>

638
00:23:19,080 --> 00:23:22,530
<font color="#E5E5E5">configure that how they've</font><font color="#CCCCCC"> like</font>

639
00:23:20,120 --> 00:23:23,850
applications are<font color="#E5E5E5"> free to say like they</font>

640
00:23:22,530 --> 00:23:25,379
can<font color="#CCCCCC"> pend certificates if they like but</font>

641
00:23:23,850 --> 00:23:27,300
<font color="#CCCCCC">there's no way for them</font><font color="#E5E5E5"> to just say like</font>

642
00:23:25,380 --> 00:23:29,490
oh no I don't<font color="#E5E5E5"> want to do any validation</font>

643
00:23:27,300 --> 00:23:32,520
<font color="#E5E5E5">at all that's up to the administrator to</font>

644
00:23:29,490 --> 00:23:37,890
<font color="#E5E5E5">allow or not yes so does that answer</font>

645
00:23:32,520 --> 00:23:40,020
your<font color="#CCCCCC"> question okay</font><font color="#E5E5E5"> thank you yeah so</font>

646
00:23:37,890 --> 00:23:41,070
great research<font color="#CCCCCC"> thanks</font><font color="#E5E5E5"> some of us would</font>

647
00:23:40,020 --> 00:23:42,840
<font color="#E5E5E5">like</font><font color="#CCCCCC"> to start using it as soon as</font>

648
00:23:41,070 --> 00:23:45,030
<font color="#E5E5E5">possible</font><font color="#CCCCCC"> he's</font><font color="#E5E5E5"> already talking to POSIX</font>

649
00:23:42,840 --> 00:23:47,189
about actually implementing<font color="#E5E5E5"> this getting</font>

650
00:23:45,030 --> 00:23:48,840
this into<font color="#E5E5E5"> the POSIX</font><font color="#CCCCCC"> Tanner</font><font color="#E5E5E5"> I have not</font>

651
00:23:47,190 --> 00:23:50,310
and I'd love<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> that I don't know how</font>

652
00:23:48,840 --> 00:23:52,860
to<font color="#E5E5E5"> get in</font><font color="#CCCCCC"> contact</font><font color="#E5E5E5"> with but I'll be</font>

653
00:23:50,310 --> 00:23:55,050
looking into<font color="#E5E5E5"> that soon we do have here</font>

654
00:23:52,860 --> 00:23:56,699
<font color="#E5E5E5">our code is open</font><font color="#CCCCCC"> source and</font><font color="#E5E5E5"> free to</font>

655
00:23:55,050 --> 00:23:58,980
<font color="#E5E5E5">everybody of them I would like to get it</font>

656
00:23:56,700 --> 00:24:00,540
<font color="#E5E5E5">integrated and</font><font color="#CCCCCC"> standardized soon</font><font color="#E5E5E5"> there's</font>

657
00:23:58,980 --> 00:24:02,160
some we're still working things<font color="#E5E5E5"> out it</font>

658
00:24:00,540 --> 00:24:04,020
is<font color="#CCCCCC"> just like a research prototype</font><font color="#E5E5E5"> right</font>

659
00:24:02,160 --> 00:24:07,250
now but if there's opportunity to talk

660
00:24:04,020 --> 00:24:07,250
to<font color="#CCCCCC"> people about that I'm all ears</font>

661
00:24:08,210 --> 00:24:14,370
hi I'm channeling Twitter the question

662
00:24:11,310 --> 00:24:17,250
is have you<font color="#E5E5E5"> seen the POSIX tile api's in</font>

663
00:24:14,370 --> 00:24:18,540
the libre<font color="#CCCCCC"> SSL</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the s 2</font><font color="#E5E5E5"> n library from</font>

664
00:24:17,250 --> 00:24:20,430
from Amazon<font color="#E5E5E5"> and what are your</font><font color="#CCCCCC"> thoughts</font>

665
00:24:18,540 --> 00:24:21,600
<font color="#CCCCCC">in terms of comparisons</font><font color="#E5E5E5"> oh there's a</font>

666
00:24:20,430 --> 00:24:22,950
there's a lot there I mean I think<font color="#E5E5E5"> those</font>

667
00:24:21,600 --> 00:24:25,409
<font color="#CCCCCC">are</font><font color="#E5E5E5"> both steps in the right direction in</font>

668
00:24:22,950 --> 00:24:27,720
<font color="#CCCCCC">terms of API simplification I think they</font>

669
00:24:25,410 --> 00:24:29,730
help<font color="#E5E5E5"> developers avoid a lot of pitfalls</font>

670
00:24:27,720 --> 00:24:31,500
<font color="#CCCCCC">I do like the fact</font><font color="#E5E5E5"> that in this case</font>

671
00:24:29,730 --> 00:24:33,810
<font color="#E5E5E5">we're fully pastas compliant that we</font>

672
00:24:31,500 --> 00:24:35,850
didn't<font color="#E5E5E5"> change any signatures at all and</font>

673
00:24:33,810 --> 00:24:36,929
I<font color="#E5E5E5"> think</font><font color="#CCCCCC"> that the administrator control</font>

674
00:24:35,850 --> 00:24:38,509
part<font color="#E5E5E5"> of it is something</font><font color="#CCCCCC"> that's lacking</font>

675
00:24:36,930 --> 00:24:41,399
<font color="#E5E5E5">and those other two</font>

676
00:24:38,509 --> 00:24:45,119
<font color="#CCCCCC">I saw one</font><font color="#E5E5E5"> haven't you looked</font><font color="#CCCCCC"> into the</font>

677
00:24:41,399 --> 00:24:47,549
coat yet but that you used<font color="#E5E5E5"> the existing</font>

678
00:24:45,119 --> 00:24:51,269
<font color="#E5E5E5">TLS implementations or do you implement</font>

679
00:24:47,549 --> 00:24:52,950
it implemented it on your own<font color="#E5E5E5"> and if yes</font>

680
00:24:51,269 --> 00:24:55,320
<font color="#CCCCCC">so what would be the lessons learned</font>

681
00:24:52,950 --> 00:24:56,129
maybe watch what should we do<font color="#E5E5E5"> you have</font>

682
00:24:55,320 --> 00:24:57,899
<font color="#E5E5E5">anything like that</font>

683
00:24:56,129 --> 00:24:59,639
yeah<font color="#CCCCCC"> actually implement it</font><font color="#E5E5E5"> with a</font>

684
00:24:57,899 --> 00:25:01,468
magnetized<font color="#E5E5E5"> needle on a hard drive by</font>

685
00:24:59,639 --> 00:25:03,779
<font color="#CCCCCC">myself</font><font color="#E5E5E5"> no I'm sorry I'm just kidding</font><font color="#CCCCCC"> oh</font>

686
00:25:01,469 --> 00:25:09,899
no we<font color="#E5E5E5"> actually use open</font><font color="#CCCCCC"> ssl</font><font color="#E5E5E5"> behind the</font>

687
00:25:03,779 --> 00:25:11,190
<font color="#E5E5E5">scenes</font><font color="#CCCCCC"> yeah so we have so we didn't</font>

688
00:25:09,899 --> 00:25:13,580
<font color="#CCCCCC">implement open a</font><font color="#E5E5E5"> cell in the kernel</font>

689
00:25:11,190 --> 00:25:16,529
right<font color="#E5E5E5"> I would have taken some time but</font>

690
00:25:13,580 --> 00:25:18,418
<font color="#E5E5E5">so</font><font color="#CCCCCC"> right now the user space encryption</font>

691
00:25:16,529 --> 00:25:20,549
daemon<font color="#E5E5E5"> is using it's actually using a</font>

692
00:25:18,419 --> 00:25:21,619
live event<font color="#E5E5E5"> as well as open</font><font color="#CCCCCC"> ssl behind</font>

693
00:25:20,549 --> 00:25:26,158
the scenes to do all of<font color="#E5E5E5"> its operations</font>

694
00:25:21,619 --> 00:25:26,580
<font color="#CCCCCC">okay so we have</font><font color="#E5E5E5"> time for</font><font color="#CCCCCC"> only one quick</font>

695
00:25:26,159 --> 00:25:29,479
question

696
00:25:26,580 --> 00:25:32,249
<font color="#CCCCCC">yeah</font><font color="#E5E5E5"> cool work have you thought about</font>

697
00:25:29,479 --> 00:25:35,399
using a similar approach<font color="#E5E5E5"> for Intel SGX</font>

698
00:25:32,249 --> 00:25:36,809
and<font color="#E5E5E5"> caves</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> we haven't</font><font color="#CCCCCC"> done</font>

699
00:25:35,399 --> 00:25:39,658
anything with<font color="#CCCCCC"> that but that</font><font color="#E5E5E5"> there's I</font>

700
00:25:36,809 --> 00:25:42,349
think<font color="#CCCCCC"> there's options there too</font><font color="#E5E5E5"> yeah we</font>

701
00:25:39,659 --> 00:25:42,349
<font color="#E5E5E5">should talk</font><font color="#CCCCCC"> later actually</font>

