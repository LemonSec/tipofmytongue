1
00:00:00,539 --> 00:00:01,740
all right I'm gonna go I don't know if

2
00:00:01,740 --> 00:00:03,480
they do intros in this room I'll just do

3
00:00:03,480 --> 00:00:04,799
both

4
00:00:04,799 --> 00:00:06,180
hi

5
00:00:06,180 --> 00:00:08,160
welcome to uh

6
00:00:08,160 --> 00:00:10,679
security con Cloud kubecon this is my

7
00:00:10,679 --> 00:00:12,780
first time ever talking one of these so

8
00:00:12,780 --> 00:00:14,759
what could go wrong right I got a lot of

9
00:00:14,759 --> 00:00:16,920
moving Parts I'm trying to warm this

10
00:00:16,920 --> 00:00:19,020
room up for probably better things to

11
00:00:19,020 --> 00:00:21,198
come

12
00:00:21,240 --> 00:00:22,260
no

13
00:00:22,260 --> 00:00:24,240
okay you say so

14
00:00:24,240 --> 00:00:25,980
I have already learned that walking

15
00:00:25,980 --> 00:00:27,599
around on this stage may not be the

16
00:00:27,599 --> 00:00:30,500
safest thing I should do

17
00:00:31,140 --> 00:00:33,719
uh this is pulling the CI and I'll just

18
00:00:33,719 --> 00:00:36,600
dive straight to it

19
00:00:36,600 --> 00:00:38,660
uh the story behind this I was asked to

20
00:00:38,660 --> 00:00:41,460
research this because this happened to

21
00:00:41,460 --> 00:00:44,340
our open source project checkoff we got

22
00:00:44,340 --> 00:00:46,320
a pull request one day from this guy and

23
00:00:46,320 --> 00:00:48,239
I'm going to just highlight that

24
00:00:48,239 --> 00:00:50,219
because there's a little re return to

25
00:00:50,219 --> 00:00:51,840
that earlier because this this talk it's

26
00:00:51,840 --> 00:00:53,219
more interesting as time goes on because

27
00:00:53,219 --> 00:00:55,260
weird stuff keeps happening to us

28
00:00:55,260 --> 00:00:56,460
but you can see there's a name up there

29
00:00:56,460 --> 00:00:58,199
says am young 34 just remember that by

30
00:00:58,199 --> 00:00:59,699
the way if M young 34 is in this room

31
00:00:59,699 --> 00:01:01,620
I'm sorry

32
00:01:01,620 --> 00:01:03,120
because this is not going to reflect

33
00:01:03,120 --> 00:01:04,920
positively so this is what the pull

34
00:01:04,920 --> 00:01:06,360
request was

35
00:01:06,360 --> 00:01:08,820
it was delete everything useful in our

36
00:01:08,820 --> 00:01:13,439
build yaml and replace it with a PS and

37
00:01:13,439 --> 00:01:16,619
an m on our self-hosted runner

38
00:01:16,619 --> 00:01:19,439
so obviously we didn't accept this PR

39
00:01:19,439 --> 00:01:21,000
almost did

40
00:01:21,000 --> 00:01:23,280
but that would have been bad because our

41
00:01:23,280 --> 00:01:24,540
cell phone surrender has also some

42
00:01:24,540 --> 00:01:26,340
information on it both in terms of

43
00:01:26,340 --> 00:01:27,600
environment variables see my processes

44
00:01:27,600 --> 00:01:29,640
are running these are all bad things

45
00:01:29,640 --> 00:01:32,640
so I was then rcto BRAC said can you

46
00:01:32,640 --> 00:01:34,680
just like dive into this how bad could

47
00:01:34,680 --> 00:01:36,659
it have been for us

48
00:01:36,659 --> 00:01:38,640
so I did and that's this is kind of

49
00:01:38,640 --> 00:01:40,799
result the first thing of course was I

50
00:01:40,799 --> 00:01:41,939
had to break the news to him that

51
00:01:41,939 --> 00:01:43,439
generally running self-hosted Runners on

52
00:01:43,439 --> 00:01:47,059
open source project is considered bad

53
00:01:47,280 --> 00:01:49,020
um but of course if you look out in the

54
00:01:49,020 --> 00:01:49,860
world and see how many people actually

55
00:01:49,860 --> 00:01:51,180
use self-hosted Runners on public

56
00:01:51,180 --> 00:01:52,619
projects

57
00:01:52,619 --> 00:01:54,060
all right let's just forget what best

58
00:01:54,060 --> 00:01:55,439
practices are and just go with the

59
00:01:55,439 --> 00:01:56,579
actual reality of what's really

60
00:01:56,579 --> 00:01:58,079
happening

61
00:01:58,079 --> 00:02:00,240
uh and I have a link down there

62
00:02:00,240 --> 00:02:01,560
you don't have to take photos of Links

63
00:02:01,560 --> 00:02:03,420
at the very end I have one one slide

64
00:02:03,420 --> 00:02:04,979
that has every link that I use so if you

65
00:02:04,979 --> 00:02:06,719
just want to go click and

66
00:02:06,719 --> 00:02:09,179
look around then you can do that

67
00:02:09,179 --> 00:02:11,700
this is the obligatory me slide where I

68
00:02:11,700 --> 00:02:14,940
inflate my ego the cloud native security

69
00:02:14,940 --> 00:02:16,260
Advocate I work for bridge crew Bridge

70
00:02:16,260 --> 00:02:18,599
crew is bought by prismacloud which is

71
00:02:18,599 --> 00:02:20,580
Palo Alto networks it's like it's I'm

72
00:02:20,580 --> 00:02:22,560
not sure who I work for somebody I've

73
00:02:22,560 --> 00:02:25,739
been writing code since the 19th

74
00:02:25,739 --> 00:02:28,680
and doing a lot of security thingies if

75
00:02:28,680 --> 00:02:30,720
you're ever in London England

76
00:02:30,720 --> 00:02:32,879
uh ping me and come to our Meetup we run

77
00:02:32,879 --> 00:02:34,379
a meet up in London called devsecops

78
00:02:34,379 --> 00:02:35,940
London Gathering every month I have a

79
00:02:35,940 --> 00:02:37,560
lot of wonderful guests on there and if

80
00:02:37,560 --> 00:02:38,940
you ever want to kill an hour on a

81
00:02:38,940 --> 00:02:41,400
Friday around three three o'clock

82
00:02:41,400 --> 00:02:44,220
uh there's a show on Twitch called c9k

83
00:02:44,220 --> 00:02:45,780
it used to be called something quite

84
00:02:45,780 --> 00:02:47,459
profane turns out YouTube doesn't like

85
00:02:47,459 --> 00:02:48,239
that

86
00:02:48,239 --> 00:02:50,160
so we had to change the name

87
00:02:50,160 --> 00:02:52,080
there's a perfectly innocent QR code go

88
00:02:52,080 --> 00:02:55,019
ahead and scan that so

89
00:02:55,019 --> 00:02:56,580
get imagine workflows hands up if you

90
00:02:56,580 --> 00:02:58,800
use GitHub action workflows

91
00:02:58,800 --> 00:03:00,300
great

92
00:03:00,300 --> 00:03:03,060
so I can speed through this so I do a

93
00:03:03,060 --> 00:03:05,640
lot of grabbing the the actual text from

94
00:03:05,640 --> 00:03:08,220
GitHub because their own help

95
00:03:08,220 --> 00:03:10,140
I found kind of takes you down the wrong

96
00:03:10,140 --> 00:03:12,239
path sometimes uh but this is just what

97
00:03:12,239 --> 00:03:13,680
it says it says you can create workflows

98
00:03:13,680 --> 00:03:15,120
to do what three things build your

99
00:03:15,120 --> 00:03:17,220
application deploy your application or

100
00:03:17,220 --> 00:03:19,560
do just stop like add a label to an

101
00:03:19,560 --> 00:03:21,659
issue uh you can sanitize an issue Etc

102
00:03:21,659 --> 00:03:23,400
I'm going to be doing some of these

103
00:03:23,400 --> 00:03:25,440
things live so if it all blows up in my

104
00:03:25,440 --> 00:03:26,580
face

105
00:03:26,580 --> 00:03:28,680
that's what it's going to do today

106
00:03:28,680 --> 00:03:30,840
the fundamental problem generally is

107
00:03:30,840 --> 00:03:32,760
that if you submit a pull request like

108
00:03:32,760 --> 00:03:35,159
this person tried to do that is in the

109
00:03:35,159 --> 00:03:38,099
GitHub workflows path

110
00:03:38,099 --> 00:03:40,980
it will try and execute the workflow it

111
00:03:40,980 --> 00:03:42,060
doesn't know the difference between a

112
00:03:42,060 --> 00:03:43,920
pre-existing workflow and one that

113
00:03:43,920 --> 00:03:46,500
you're sending in is the commit which is

114
00:03:46,500 --> 00:03:48,739
weird

115
00:03:48,780 --> 00:03:51,599
the other thing is that a lot of the

116
00:03:51,599 --> 00:03:54,000
creation of workflows is generally done

117
00:03:54,000 --> 00:03:55,200
by people who weren't appsec

118
00:03:55,200 --> 00:03:57,540
professionals and they don't quite have

119
00:03:57,540 --> 00:03:59,519
the mentality of sanitizing your inputs

120
00:03:59,519 --> 00:04:01,440
yet so you've got things like issue name

121
00:04:01,440 --> 00:04:04,080
issue description the list of potential

122
00:04:04,080 --> 00:04:05,400
inputs is actually pretty big and

123
00:04:05,400 --> 00:04:06,480
particularly if you use things like

124
00:04:06,480 --> 00:04:08,099
workflow run triggers where you're

125
00:04:08,099 --> 00:04:09,720
feeding one workflow into another then

126
00:04:09,720 --> 00:04:11,459
it really complicates what is considered

127
00:04:11,459 --> 00:04:15,299
input our user controlled input so a lot

128
00:04:15,299 --> 00:04:16,858
of people aren't doing that and there's

129
00:04:16,858 --> 00:04:19,139
a lot of things that can happen as a

130
00:04:19,139 --> 00:04:20,699
result of that and the last one of

131
00:04:20,699 --> 00:04:22,860
course that workflow directory it

132
00:04:22,860 --> 00:04:24,540
doesn't have special permissions you can

133
00:04:24,540 --> 00:04:26,880
add permissions to it but by default

134
00:04:26,880 --> 00:04:29,100
anything anybody can submit anything to

135
00:04:29,100 --> 00:04:31,800
it so that's not great

136
00:04:31,800 --> 00:04:33,720
so as a result of that there's a few

137
00:04:33,720 --> 00:04:35,040
things that can happen across all of

138
00:04:35,040 --> 00:04:36,720
these so if you're not sanitizing inputs

139
00:04:36,720 --> 00:04:38,400
you can do some kind of command

140
00:04:38,400 --> 00:04:41,280
injection into there if I know that

141
00:04:41,280 --> 00:04:43,620
you're using something to build or even

142
00:04:43,620 --> 00:04:45,960
deploy then I'm assuming that you might

143
00:04:45,960 --> 00:04:47,759
have some access to credentials on your

144
00:04:47,759 --> 00:04:49,500
self-hosted Runner so what can I do to

145
00:04:49,500 --> 00:04:51,600
try and Achieve acquiring those

146
00:04:51,600 --> 00:04:53,820
credentials and execute some form of

147
00:04:53,820 --> 00:04:55,440
supply chain attack so this is this is

148
00:04:55,440 --> 00:04:57,300
what I was challenged with

149
00:04:57,300 --> 00:04:59,160
what I found kind of confusing down to

150
00:04:59,160 --> 00:05:01,680
the box is some of the reactions GitHub

151
00:05:01,680 --> 00:05:04,380
has when you are a new contributor like

152
00:05:04,380 --> 00:05:06,180
the first one up there let's just do

153
00:05:06,180 --> 00:05:08,040
this this is exactly what happened to us

154
00:05:08,040 --> 00:05:10,020
and actually

155
00:05:10,020 --> 00:05:12,300
if we uh

156
00:05:12,300 --> 00:05:13,979
go here you can see I've got two people

157
00:05:13,979 --> 00:05:16,320
here I've got this

158
00:05:16,320 --> 00:05:20,160
a malicious person called Loud Canadian

159
00:05:20,160 --> 00:05:22,740
and then I have

160
00:05:22,740 --> 00:05:24,840
this nice person over here called

161
00:05:24,840 --> 00:05:27,660
eurogig who's just trying to maintain

162
00:05:27,660 --> 00:05:29,580
this wonderful application

163
00:05:29,580 --> 00:05:31,440
and I've submitted a pull request and

164
00:05:31,440 --> 00:05:32,699
sure enough I have my approve and run

165
00:05:32,699 --> 00:05:34,320
and this is what happened we just didn't

166
00:05:34,320 --> 00:05:36,860
click this

167
00:05:37,979 --> 00:05:39,780
which actually I am going to click now

168
00:05:39,780 --> 00:05:41,759
because I don't mind just to kind of

169
00:05:41,759 --> 00:05:43,199
push things along I'm going to merge

170
00:05:43,199 --> 00:05:44,520
this pull request I'm going to confirm

171
00:05:44,520 --> 00:05:47,160
the marriage fabulous

172
00:05:47,160 --> 00:05:50,039
awesome so now this person

173
00:05:50,039 --> 00:05:51,960
is a wonderful contributor

174
00:05:51,960 --> 00:05:53,639
so what happens in GitHub is you don't

175
00:05:53,639 --> 00:05:55,080
get these instructions on the top you

176
00:05:55,080 --> 00:05:58,020
just weren't there this is from the help

177
00:05:58,020 --> 00:06:00,419
and that does warn you that if the

178
00:06:00,419 --> 00:06:02,940
contribution is in the GitHub workflows

179
00:06:02,940 --> 00:06:05,940
directory be alert

180
00:06:05,940 --> 00:06:07,199
fantastic

181
00:06:07,199 --> 00:06:09,180
what could go wrong if you have no

182
00:06:09,180 --> 00:06:11,340
workflows whatsoever

183
00:06:11,340 --> 00:06:13,860
it kind of scolds you and says hey why

184
00:06:13,860 --> 00:06:15,180
don't you have workflows come on man you

185
00:06:15,180 --> 00:06:17,220
can you could use this to catch bugs and

186
00:06:17,220 --> 00:06:19,560
enforce style workflows are a good thing

187
00:06:19,560 --> 00:06:21,060
for security

188
00:06:21,060 --> 00:06:22,319
okay

189
00:06:22,319 --> 00:06:25,380
the default for outside collaborators is

190
00:06:25,380 --> 00:06:27,240
that you only require approval for the

191
00:06:27,240 --> 00:06:28,680
first thing you do

192
00:06:28,680 --> 00:06:30,840
which I just did

193
00:06:30,840 --> 00:06:33,060
once you've done that

194
00:06:33,060 --> 00:06:36,120
you're an Insider awesome so it's far

195
00:06:36,120 --> 00:06:37,680
easier to become a malicious Insider

196
00:06:37,680 --> 00:06:40,020
just by changing a readme or going to

197
00:06:40,020 --> 00:06:42,060
the good first issues

198
00:06:42,060 --> 00:06:45,060
and doing something really simple and

199
00:06:45,060 --> 00:06:46,800
then you've bypassed this whole workflow

200
00:06:46,800 --> 00:06:48,600
conundrum

201
00:06:48,600 --> 00:06:50,940
sounds a little too good to be true

202
00:06:50,940 --> 00:06:52,080
so I have just submitted something

203
00:06:52,080 --> 00:06:53,759
here's the first thing I'm going to play

204
00:06:53,759 --> 00:06:56,699
with now which is unsanitized inputs to

205
00:06:56,699 --> 00:06:59,300
workflows

206
00:06:59,639 --> 00:07:01,680
here's an and this is me looking around

207
00:07:01,680 --> 00:07:04,020
for how do people do this in the real

208
00:07:04,020 --> 00:07:05,699
world so I look just look for GitHub

209
00:07:05,699 --> 00:07:08,039
event issue title I found this one which

210
00:07:08,039 --> 00:07:09,900
was pretty cool somebody's creating

211
00:07:09,900 --> 00:07:12,360
generating blog Pages based on issues

212
00:07:12,360 --> 00:07:14,039
that are submitted

213
00:07:14,039 --> 00:07:16,080
that's kind of neat so what if I create

214
00:07:16,080 --> 00:07:18,120
an issue with a title

215
00:07:18,120 --> 00:07:20,400
that has a bunch of HTML in it that

216
00:07:20,400 --> 00:07:22,199
might fish for information when someone

217
00:07:22,199 --> 00:07:24,419
goes to that blog page

218
00:07:24,419 --> 00:07:26,400
there isn't any real Auto sanitization

219
00:07:26,400 --> 00:07:29,220
of what the issue title can be

220
00:07:29,220 --> 00:07:32,039
that's kind of up to us

221
00:07:32,039 --> 00:07:33,419
the other more common one and this was

222
00:07:33,419 --> 00:07:35,580
like there were thousands of these just

223
00:07:35,580 --> 00:07:38,759
people logging issues or PR titles or

224
00:07:38,759 --> 00:07:40,560
anything that's like an input user

225
00:07:40,560 --> 00:07:42,240
controlled input as they're arriving so

226
00:07:42,240 --> 00:07:43,800
that there's more visibility again

227
00:07:43,800 --> 00:07:46,259
sounds like a good thing

228
00:07:46,259 --> 00:07:49,139
then when I just submitted a moment ago

229
00:07:49,139 --> 00:07:51,360
here

230
00:07:51,360 --> 00:07:54,900
we can take a look at the files changed

231
00:07:54,900 --> 00:07:57,240
is that one

232
00:07:57,240 --> 00:07:59,400
that is designed to look like a positive

233
00:07:59,400 --> 00:08:01,560
contribution I'm checking the input

234
00:08:01,560 --> 00:08:04,020
GitHub event issue title to make sure it

235
00:08:04,020 --> 00:08:06,660
formats to a certain way and I look like

236
00:08:06,660 --> 00:08:08,160
I'm contributing to the project in a

237
00:08:08,160 --> 00:08:10,639
positive way

238
00:08:11,039 --> 00:08:13,699
which is great

239
00:08:14,400 --> 00:08:16,020
and that's it there

240
00:08:16,020 --> 00:08:18,240
it's great unless

241
00:08:18,240 --> 00:08:19,800
if I create an issue and you probably

242
00:08:19,800 --> 00:08:22,020
would think surely GitHub won't let you

243
00:08:22,020 --> 00:08:23,400
create an issue

244
00:08:23,400 --> 00:08:26,699
with this weird title surely right there

245
00:08:26,699 --> 00:08:28,080
would be something that would stop that

246
00:08:28,080 --> 00:08:30,680
from happening

247
00:08:30,840 --> 00:08:32,940
so

248
00:08:32,940 --> 00:08:34,559
this is where you get to see all the

249
00:08:34,559 --> 00:08:36,179
funny things that I've got going on here

250
00:08:36,179 --> 00:08:37,620
so this is the this is the good area

251
00:08:37,620 --> 00:08:39,299
I've already merged this pull request I

252
00:08:39,299 --> 00:08:41,458
go to my code

253
00:08:41,458 --> 00:08:43,799
I've got workflows here and I've got my

254
00:08:43,799 --> 00:08:45,420
issue check

255
00:08:45,420 --> 00:08:46,980
which is cool it means anytime an issue

256
00:08:46,980 --> 00:08:49,260
is opened it should run this it should

257
00:08:49,260 --> 00:08:52,200
live in my actions world

258
00:08:52,200 --> 00:08:56,160
so what happens I go to my issues so

259
00:08:56,160 --> 00:08:57,480
here's my battery I would I'd probably

260
00:08:57,480 --> 00:08:59,100
get my friend to do this for me because

261
00:08:59,100 --> 00:09:00,300
I wouldn't mind doing myself right that

262
00:09:00,300 --> 00:09:01,140
would be

263
00:09:01,140 --> 00:09:04,260
too obvious I'm a hacker

264
00:09:04,260 --> 00:09:06,180
I'm not going to go to my ridiculously

265
00:09:06,180 --> 00:09:08,899
tiny notes

266
00:09:09,000 --> 00:09:10,920
here

267
00:09:10,920 --> 00:09:14,599
I'm gonna grab exactly what that said

268
00:09:15,959 --> 00:09:19,099
I don't use a back tick

269
00:09:19,620 --> 00:09:22,260
everybody knows what a back dick does

270
00:09:22,260 --> 00:09:23,880
fabulous

271
00:09:23,880 --> 00:09:26,940
because the even if I see equals or I

272
00:09:26,940 --> 00:09:28,680
assign the value or do anything and I

273
00:09:28,680 --> 00:09:30,000
get a workflow it happens in a batch

274
00:09:30,000 --> 00:09:33,480
script basket basket seeds a backtick

275
00:09:33,480 --> 00:09:35,640
and it's like cloud formation sees a

276
00:09:35,640 --> 00:09:37,800
dollar squiggle it tries to resolve the

277
00:09:37,800 --> 00:09:39,000
meaning of it before it does the

278
00:09:39,000 --> 00:09:40,740
assignment

279
00:09:40,740 --> 00:09:42,540
so I hadn't really screwed this up so if

280
00:09:42,540 --> 00:09:44,399
I create this issue

281
00:09:44,399 --> 00:09:47,120
issue

282
00:09:49,260 --> 00:09:51,779
seemed happy with it

283
00:09:51,779 --> 00:09:53,580
I go there and look

284
00:09:53,580 --> 00:09:57,380
it's oh hello

285
00:09:58,440 --> 00:10:02,660
go back to my web hook site

286
00:10:02,700 --> 00:10:04,260
and so I now have all the environment

287
00:10:04,260 --> 00:10:07,740
variables from that particular Runner

288
00:10:07,740 --> 00:10:09,360
by the way if you ever use webhook.site

289
00:10:09,360 --> 00:10:10,680
it's awesome just for testing things

290
00:10:10,680 --> 00:10:12,000
it's also good for messing with people

291
00:10:12,000 --> 00:10:13,740
but

292
00:10:13,740 --> 00:10:15,360
it was kind of that easy so that was

293
00:10:15,360 --> 00:10:16,860
like the first thing ever was like all

294
00:10:16,860 --> 00:10:19,080
right so any of these sites that are

295
00:10:19,080 --> 00:10:20,640
doing any kind of input sanitization I

296
00:10:20,640 --> 00:10:21,660
can now just

297
00:10:21,660 --> 00:10:23,220
vacuum out all of their environment

298
00:10:23,220 --> 00:10:24,779
variables in a much easier way than what

299
00:10:24,779 --> 00:10:27,360
was attempted on us

300
00:10:27,360 --> 00:10:30,720
so that was interesting thing number one

301
00:10:30,720 --> 00:10:31,920
but there's ways to protect yourself

302
00:10:31,920 --> 00:10:33,540
from this like there are Environmental

303
00:10:33,540 --> 00:10:34,800
Protection rules and environmental

304
00:10:34,800 --> 00:10:36,779
secret rules that already exist there's

305
00:10:36,779 --> 00:10:38,040
a link down the bottom so if something

306
00:10:38,040 --> 00:10:39,180
you're watching that you're going oh

307
00:10:39,180 --> 00:10:40,800
maybe I should only give certain

308
00:10:40,800 --> 00:10:42,300
workflows certain access to certain

309
00:10:42,300 --> 00:10:44,640
environment variables and secrets you

310
00:10:44,640 --> 00:10:46,760
should

311
00:10:46,860 --> 00:10:48,540
the link will be at the end it looks as

312
00:10:48,540 --> 00:10:49,740
simple as

313
00:10:49,740 --> 00:10:52,019
environment name the environment Etc so

314
00:10:52,019 --> 00:10:53,579
it's a really really simple things to

315
00:10:53,579 --> 00:10:54,959
implement

316
00:10:54,959 --> 00:10:56,640
generally I found that you should nearly

317
00:10:56,640 --> 00:10:58,380
never have like hard-coded credentials

318
00:10:58,380 --> 00:10:59,579
even if you think they're stored as

319
00:10:59,579 --> 00:11:01,200
Secrets you'll find out later why about

320
00:11:01,200 --> 00:11:03,060
that but it's not a good thing

321
00:11:03,060 --> 00:11:05,279
short-lived tokens are important if you

322
00:11:05,279 --> 00:11:06,779
use self-hosted Runners it can be an

323
00:11:06,779 --> 00:11:08,579
advantage because you can create lists

324
00:11:08,579 --> 00:11:10,160
that and

325
00:11:10,160 --> 00:11:12,660
make sure that your only certain IPS can

326
00:11:12,660 --> 00:11:14,459
talk to certain IPS so that cell phone

327
00:11:14,459 --> 00:11:16,800
supporters can be an advantage

328
00:11:16,800 --> 00:11:20,339
um in AWS reporting is important openid

329
00:11:20,339 --> 00:11:23,459
connect GitHub actions does use oidc it

330
00:11:23,459 --> 00:11:24,839
doesn't use spiffy Spire unfortunately

331
00:11:24,839 --> 00:11:27,420
yet but if you can make sure you use

332
00:11:27,420 --> 00:11:28,740
that to access any kind of cloud

333
00:11:28,740 --> 00:11:31,140
provider definitely do that instruction

334
00:11:31,140 --> 00:11:32,940
specific or Amazon are down there and

335
00:11:32,940 --> 00:11:35,399
also just generic ones for github.com so

336
00:11:35,399 --> 00:11:36,959
when this happened it was really

337
00:11:36,959 --> 00:11:39,480
fascinating because our own repo wasn't

338
00:11:39,480 --> 00:11:41,279
as secure as we really thought it should

339
00:11:41,279 --> 00:11:43,640
be

340
00:11:43,740 --> 00:11:45,180
number two

341
00:11:45,180 --> 00:11:46,620
I'm not going to show this one but I

342
00:11:46,620 --> 00:11:47,940
just find it fascinating maybe I will

343
00:11:47,940 --> 00:11:49,079
show it later

344
00:11:49,079 --> 00:11:50,820
so this brought me to Branch protection

345
00:11:50,820 --> 00:11:52,620
rules you should always have your branch

346
00:11:52,620 --> 00:11:54,240
production turned on what was amazing

347
00:11:54,240 --> 00:11:56,220
about when Chekhov first started we were

348
00:11:56,220 --> 00:11:57,720
a startup and we didn't know how popular

349
00:11:57,720 --> 00:11:59,160
it was going to get

350
00:11:59,160 --> 00:12:00,720
so it must have had a thousand stars

351
00:12:00,720 --> 00:12:02,160
before we had Branch protection turned

352
00:12:02,160 --> 00:12:04,500
on it seems crazy but we were and we

353
00:12:04,500 --> 00:12:06,120
were inviting collaborators like anybody

354
00:12:06,120 --> 00:12:08,220
help help and that when that turns into

355
00:12:08,220 --> 00:12:10,140
a SAS solution you become a startup and

356
00:12:10,140 --> 00:12:10,980
you're like

357
00:12:10,980 --> 00:12:12,660
maybe we've got to go back to the

358
00:12:12,660 --> 00:12:14,399
original effort that we could have

359
00:12:14,399 --> 00:12:16,560
quickly uh sped ahead on

360
00:12:16,560 --> 00:12:18,720
if you turn on Branch protection

361
00:12:18,720 --> 00:12:20,279
you should almost have everything ticked

362
00:12:20,279 --> 00:12:22,740
nobody ever does if you do tick by

363
00:12:22,740 --> 00:12:24,540
default the first thing require a pull

364
00:12:24,540 --> 00:12:26,519
request for emerging which you should

365
00:12:26,519 --> 00:12:28,920
you require approvals which you should

366
00:12:28,920 --> 00:12:31,620
a lot of people think they're done but

367
00:12:31,620 --> 00:12:34,320
the default down there of one is kind of

368
00:12:34,320 --> 00:12:36,600
where it gets a little dicey because

369
00:12:36,600 --> 00:12:39,860
you can approve yourself

370
00:12:40,200 --> 00:12:43,800
so over here this changed in April this

371
00:12:43,800 --> 00:12:46,139
year this year

372
00:12:46,139 --> 00:12:47,940
the default this is what you should have

373
00:12:47,940 --> 00:12:50,459
for workflow permissions this is the the

374
00:12:50,459 --> 00:12:52,860
good thing read repository content is

375
00:12:52,860 --> 00:12:54,240
permission in a workflow this is what

376
00:12:54,240 --> 00:12:56,639
the GitHub token should be able to do

377
00:12:56,639 --> 00:12:59,040
that's not the default though

378
00:12:59,040 --> 00:13:02,040
the default is that

379
00:13:02,040 --> 00:13:04,200
there was about a day or a week or

380
00:13:04,200 --> 00:13:05,820
something where the default was the

381
00:13:05,820 --> 00:13:08,279
correct default for new repos and

382
00:13:08,279 --> 00:13:09,779
everybody freaked out because they

383
00:13:09,779 --> 00:13:11,279
weren't expecting that to be the default

384
00:13:11,279 --> 00:13:13,680
and so they went back to that

385
00:13:13,680 --> 00:13:16,260
so just to know that's there so if you

386
00:13:16,260 --> 00:13:18,480
create a new repo the GitHub token if

387
00:13:18,480 --> 00:13:20,760
you will have a way more access than you

388
00:13:20,760 --> 00:13:22,980
think it's the difference between these

389
00:13:22,980 --> 00:13:25,320
that middle column that says read only

390
00:13:25,320 --> 00:13:28,079
and that column there which you probably

391
00:13:28,079 --> 00:13:30,180
is as far from least privileged as you

392
00:13:30,180 --> 00:13:32,420
can imagine

393
00:13:33,300 --> 00:13:36,000
so I hope it's not too small I'll show

394
00:13:36,000 --> 00:13:37,620
it again later but

395
00:13:37,620 --> 00:13:39,959
to do a curl but little workflow

396
00:13:39,959 --> 00:13:41,760
I was surprised to see and by the way if

397
00:13:41,760 --> 00:13:43,440
anybody from cider security is here this

398
00:13:43,440 --> 00:13:45,660
is their research not mine

399
00:13:45,660 --> 00:13:46,800
um

400
00:13:46,800 --> 00:13:48,240
you have everything you need to do a

401
00:13:48,240 --> 00:13:49,320
curl command you've got the GitHub

402
00:13:49,320 --> 00:13:50,700
repository you get the GitHub event

403
00:13:50,700 --> 00:13:52,260
number which is the pull request you've

404
00:13:52,260 --> 00:13:54,899
got the secret GitHub token like you can

405
00:13:54,899 --> 00:13:57,540
just assemble a command

406
00:13:57,540 --> 00:14:00,240
you can't approve a pull request

407
00:14:00,240 --> 00:14:02,700
so you can't merge a pull request but

408
00:14:02,700 --> 00:14:04,860
you can certainly do that and you can

409
00:14:04,860 --> 00:14:06,779
approve your own thing and so that whole

410
00:14:06,779 --> 00:14:08,100
thing you did to have approvals is

411
00:14:08,100 --> 00:14:10,500
suddenly irrelevant

412
00:14:10,500 --> 00:14:12,180
that's not all you can do there's a lot

413
00:14:12,180 --> 00:14:13,200
of things this is just going to get your

414
00:14:13,200 --> 00:14:15,779
imagination going

415
00:14:15,779 --> 00:14:18,060
all right so the last one

416
00:14:18,060 --> 00:14:20,100
fingers crossed the works this is the

417
00:14:20,100 --> 00:14:21,779
one that I tried to submit because I

418
00:14:21,779 --> 00:14:23,220
thought this is the how bad could it be

419
00:14:23,220 --> 00:14:24,899
section

420
00:14:24,899 --> 00:14:27,360
so zooming in on there

421
00:14:27,360 --> 00:14:28,620
I thought all right so I can get the

422
00:14:28,620 --> 00:14:30,120
environment variables how can I get the

423
00:14:30,120 --> 00:14:31,860
secrets I got to get the secrets in two

424
00:14:31,860 --> 00:14:33,600
lines by doing Echo sequence to a file

425
00:14:33,600 --> 00:14:34,800
because the secrets are only available

426
00:14:34,800 --> 00:14:36,240
in the workflow they're not environment

427
00:14:36,240 --> 00:14:38,399
variables but unless I push them out to

428
00:14:38,399 --> 00:14:39,420
a file

429
00:14:39,420 --> 00:14:41,220
and then curl that out to the same bad

430
00:14:41,220 --> 00:14:43,380
URL in which case now I have all the

431
00:14:43,380 --> 00:14:45,060
secrets they're not encrypted they're

432
00:14:45,060 --> 00:14:47,160
just there

433
00:14:47,160 --> 00:14:48,779
and then I want the GitHub token I'm

434
00:14:48,779 --> 00:14:50,160
like well how long can I the GitHub

435
00:14:50,160 --> 00:14:51,600
token be alive for

436
00:14:51,600 --> 00:14:53,339
the GitHub token dies at the moment the

437
00:14:53,339 --> 00:14:55,980
job dies so I stick a sleep in there and

438
00:14:55,980 --> 00:14:57,720
now I get a GitHub token as well and the

439
00:14:57,720 --> 00:14:59,760
secrets and the environment rows cool

440
00:14:59,760 --> 00:15:01,500
and then I was kind of feeling nasty so

441
00:15:01,500 --> 00:15:03,660
I did this version

442
00:15:03,660 --> 00:15:05,040
which I thought all right well what if I

443
00:15:05,040 --> 00:15:07,139
could do a reverse shell

444
00:15:07,139 --> 00:15:10,260
and then send that out to myself and

445
00:15:10,260 --> 00:15:12,420
then that would make everything persist

446
00:15:12,420 --> 00:15:14,639
for as long as I wanted

447
00:15:14,639 --> 00:15:17,459
so I thought yeah I'll do that one

448
00:15:17,459 --> 00:15:19,800
so let's do that one

449
00:15:19,800 --> 00:15:21,060
so there's a few things I still have

450
00:15:21,060 --> 00:15:22,440
this sitting here

451
00:15:22,440 --> 00:15:24,240
I still have this

452
00:15:24,240 --> 00:15:25,740
which is cool

453
00:15:25,740 --> 00:15:27,720
what I'm going to do now I'm going to

454
00:15:27,720 --> 00:15:28,920
make myself a contributor I'm going to

455
00:15:28,920 --> 00:15:30,600
do the all the things you shouldn't do

456
00:15:30,600 --> 00:15:32,220
this is a bad example of how to be

457
00:15:32,220 --> 00:15:33,660
secure

458
00:15:33,660 --> 00:15:35,399
I'm gonna do a collaborator I'm going to

459
00:15:35,399 --> 00:15:38,940
add me so I can commit Direct

460
00:15:38,940 --> 00:15:41,579
I've been such a good

461
00:15:41,579 --> 00:15:44,040
person in this project that there's no

462
00:15:44,040 --> 00:15:47,880
reason why I wouldn't add myself

463
00:15:47,880 --> 00:15:49,800
I just got an email telling me I'm at it

464
00:15:49,800 --> 00:15:50,820
yeah

465
00:15:50,820 --> 00:15:52,440
also

466
00:15:52,440 --> 00:15:55,740
add to main I'm going to turn this on

467
00:15:55,740 --> 00:15:57,300
there we go now I should have a lot of

468
00:15:57,300 --> 00:15:58,620
this stuff turned on but I don't know

469
00:15:58,620 --> 00:16:00,720
why anybody would turn on

470
00:16:00,720 --> 00:16:02,579
do not allow bypassing why is that even

471
00:16:02,579 --> 00:16:04,199
there there's some weird stuff in Branch

472
00:16:04,199 --> 00:16:06,120
protection

473
00:16:06,120 --> 00:16:08,100
nice so I'm all set up there I've got

474
00:16:08,100 --> 00:16:10,380
code

475
00:16:10,380 --> 00:16:12,360
I've got this running

476
00:16:12,360 --> 00:16:14,699
and oh yeah

477
00:16:14,699 --> 00:16:17,339
I've got that running

478
00:16:17,339 --> 00:16:20,160
okay it seems like it should work I've

479
00:16:20,160 --> 00:16:21,540
got everything going I'm going to go to

480
00:16:21,540 --> 00:16:23,220
code

481
00:16:23,220 --> 00:16:25,560
when my workflows

482
00:16:25,560 --> 00:16:27,300
and so now I'm not in my own Fork

483
00:16:27,300 --> 00:16:28,860
anymore I'm actually right here I'm

484
00:16:28,860 --> 00:16:32,420
going to add this file create a new file

485
00:16:33,300 --> 00:16:35,639
I if you're going to add something dodgy

486
00:16:35,639 --> 00:16:38,759
don't call it pone.aml

487
00:16:38,759 --> 00:16:40,800
that's that's a dead giveaway that's a

488
00:16:40,800 --> 00:16:42,120
little tip for you

489
00:16:42,120 --> 00:16:45,440
budding hackers out there

490
00:16:46,019 --> 00:16:47,820
is my file now the difference between

491
00:16:47,820 --> 00:16:48,959
this one the one I just showed you is

492
00:16:48,959 --> 00:16:50,220
this actually has the audio approvement

493
00:16:50,220 --> 00:16:53,459
as well just for kicks up here that's

494
00:16:53,459 --> 00:16:55,259
you probably need a telescope to read

495
00:16:55,259 --> 00:16:56,820
that but

496
00:16:56,820 --> 00:16:59,660
here we go

497
00:17:00,420 --> 00:17:02,279
okay

498
00:17:02,279 --> 00:17:03,660
so I have my little Auto approve in

499
00:17:03,660 --> 00:17:05,400
there which should

500
00:17:05,400 --> 00:17:08,179
in theory work

501
00:17:09,480 --> 00:17:10,980
I should be able to propose this new

502
00:17:10,980 --> 00:17:13,880
file which is fine

503
00:17:19,319 --> 00:17:22,520
I'm going to create a report request

504
00:17:28,500 --> 00:17:31,460
to merge back

505
00:17:36,200 --> 00:17:41,419
uh I need to fix able to merge

506
00:17:43,620 --> 00:17:47,539
oh I can't read it I know my class is on

507
00:17:51,299 --> 00:17:54,440
oh one second one second

508
00:17:59,280 --> 00:18:01,559
uh Canadian patch one hold on sorry

509
00:18:01,559 --> 00:18:04,039
about this

510
00:18:08,940 --> 00:18:12,140
I'm a little

511
00:18:20,460 --> 00:18:24,059
phone actions

512
00:18:24,059 --> 00:18:27,260
ah there we go

513
00:18:31,980 --> 00:18:33,960
so I have my GitHub token now that

514
00:18:33,960 --> 00:18:36,320
worked

515
00:18:39,480 --> 00:18:45,140
and I have a reversal which is not ideal

516
00:18:45,600 --> 00:18:47,220
and given the amount of time we have now

517
00:18:47,220 --> 00:18:49,260
this

518
00:18:49,260 --> 00:18:52,559
is unlikely to work because I got my

519
00:18:52,559 --> 00:18:55,559
naming around but there is another step

520
00:18:55,559 --> 00:18:58,399
here where

521
00:19:04,980 --> 00:19:06,660
because of the path I'll leave it up

522
00:19:06,660 --> 00:19:10,679
there there's there's a step there where

523
00:19:10,679 --> 00:19:13,080
I can start to change what I what I just

524
00:19:13,080 --> 00:19:15,600
did via the runner thus I can cancel the

525
00:19:15,600 --> 00:19:18,299
pull request delete what I've submitted

526
00:19:18,299 --> 00:19:20,820
and change the actual person who did it

527
00:19:20,820 --> 00:19:23,640
because I used an unsigned commit

528
00:19:23,640 --> 00:19:26,039
and so I

529
00:19:26,039 --> 00:19:28,400
so it's the things I can do while here

530
00:19:28,400 --> 00:19:30,720
are actually

531
00:19:30,720 --> 00:19:33,600
pretty terrible

532
00:19:33,600 --> 00:19:35,220
um I realized I'm

533
00:19:35,220 --> 00:19:37,679
a little short on time because by the

534
00:19:37,679 --> 00:19:42,260
way this is normally a 50-minute talk

535
00:19:44,760 --> 00:19:46,440
another thing I noticed on most Runners

536
00:19:46,440 --> 00:19:49,160
is that

537
00:19:52,020 --> 00:19:55,200
Docker is always installed by default

538
00:19:55,200 --> 00:19:57,840
so while I got access to the runner as

539
00:19:57,840 --> 00:20:00,740
the ID Runner

540
00:20:03,179 --> 00:20:05,880
you could use Docker just to create an

541
00:20:05,880 --> 00:20:08,100
auto pop-out shell and upgrade yourself

542
00:20:08,100 --> 00:20:09,900
to root so now I'm a root on the runner

543
00:20:09,900 --> 00:20:12,299
as well I'm kind of there as long as I

544
00:20:12,299 --> 00:20:13,080
want

545
00:20:13,080 --> 00:20:14,580
and of course I use that value everybody

546
00:20:14,580 --> 00:20:16,020
see the Falco talk

547
00:20:16,020 --> 00:20:17,880
I thought that was Brill so they should

548
00:20:17,880 --> 00:20:19,140
create rules to stop people from doing

549
00:20:19,140 --> 00:20:20,580
stuff like this

550
00:20:20,580 --> 00:20:22,440
so that's kind of like

551
00:20:22,440 --> 00:20:26,400
the idea behind why this is all bad

552
00:20:26,400 --> 00:20:28,980
the idea of getting a being able to run

553
00:20:28,980 --> 00:20:30,960
things in shells is one thing

554
00:20:30,960 --> 00:20:32,880
but to be able to destroy evidence of

555
00:20:32,880 --> 00:20:34,799
and be able to have full access to the

556
00:20:34,799 --> 00:20:36,960
repository that I just took over make

557
00:20:36,960 --> 00:20:38,820
changes to pretty much anything in the

558
00:20:38,820 --> 00:20:39,660
code

559
00:20:39,660 --> 00:20:41,520
change the adjacent code if it's a

560
00:20:41,520 --> 00:20:45,059
shared self-hosted Runner and even turn

561
00:20:45,059 --> 00:20:46,980
off the pull request remotely so that I

562
00:20:46,980 --> 00:20:48,539
can stay on the self-hosted runner

563
00:20:48,539 --> 00:20:51,679
independent of GitHub now

564
00:20:52,620 --> 00:20:54,960
so what can you do with this

565
00:20:54,960 --> 00:20:56,280
if you're in if you're taking part in

566
00:20:56,280 --> 00:20:58,140
the CTF

567
00:20:58,140 --> 00:20:59,520
pretty much all the things that you want

568
00:20:59,520 --> 00:21:01,679
to do on the CDF I can start looking for

569
00:21:01,679 --> 00:21:04,080
AWS information that might be still as

570
00:21:04,080 --> 00:21:05,280
environment variables I can change the

571
00:21:05,280 --> 00:21:07,260
logging level on the runner that I'm on

572
00:21:07,260 --> 00:21:09,179
right now I could get it to report back

573
00:21:09,179 --> 00:21:11,700
to me I can I can add my own SSH token

574
00:21:11,700 --> 00:21:13,260
so I can come back directly to the

575
00:21:13,260 --> 00:21:15,419
runner with all of this staff I can look

576
00:21:15,419 --> 00:21:17,340
with processes the network I can look

577
00:21:17,340 --> 00:21:19,679
for access to S3 buckets so much I can

578
00:21:19,679 --> 00:21:21,120
do

579
00:21:21,120 --> 00:21:25,100
now the next thing I want to say is

580
00:21:25,500 --> 00:21:27,960
important information

581
00:21:27,960 --> 00:21:29,940
I'm saying don't be a bif you recognize

582
00:21:29,940 --> 00:21:31,140
this from

583
00:21:31,140 --> 00:21:33,299
Back to the Future don't be a Biff with

584
00:21:33,299 --> 00:21:34,980
this information

585
00:21:34,980 --> 00:21:36,600
the thing that started all this this is

586
00:21:36,600 --> 00:21:38,220
where it changed a month ago

587
00:21:38,220 --> 00:21:40,320
this crossed my path in my mass network

588
00:21:40,320 --> 00:21:42,740
of information that comes to me via

589
00:21:42,740 --> 00:21:45,360
newsletters and whatever this came in

590
00:21:45,360 --> 00:21:47,039
and I was like oh Zucker punch abusing

591
00:21:47,039 --> 00:21:47,940
stuff was good I'm running to Facebook

592
00:21:47,940 --> 00:21:49,020
that's what my talks about that's pretty

593
00:21:49,020 --> 00:21:51,480
cool I'm gonna read this and I I hadn't

594
00:21:51,480 --> 00:21:53,640
even scrolled down yet and I went M

595
00:21:53,640 --> 00:21:55,260
Young

596
00:21:55,260 --> 00:21:57,480
that's interesting

597
00:21:57,480 --> 00:22:00,380
that's the guy

598
00:22:04,500 --> 00:22:07,320
I looked at what was happening here

599
00:22:07,320 --> 00:22:09,960
he says Facebook actually was Pi torch

600
00:22:09,960 --> 00:22:11,700
which is Facebook which is now Linux

601
00:22:11,700 --> 00:22:13,380
Foundation

602
00:22:13,380 --> 00:22:14,940
and he goes through all of his he's kind

603
00:22:14,940 --> 00:22:16,440
of bragging about everything that he did

604
00:22:16,440 --> 00:22:17,760
all the way through

605
00:22:17,760 --> 00:22:20,039
and really it turned out Ollie was was

606
00:22:20,039 --> 00:22:21,600
after money

607
00:22:21,600 --> 00:22:23,039
he's calling it a bug Bounty there was

608
00:22:23,039 --> 00:22:24,299
no bug Bounty but he just went through

609
00:22:24,299 --> 00:22:26,340
and was like using this thing but now I

610
00:22:26,340 --> 00:22:28,320
realized we were part of the whole

611
00:22:28,320 --> 00:22:30,659
scatter gun approach to trying to find

612
00:22:30,659 --> 00:22:32,900
people who had misconfigured GitHub or

613
00:22:32,900 --> 00:22:35,460
insecurely considered GitHub and I'm

614
00:22:35,460 --> 00:22:37,320
like you could have really messed with

615
00:22:37,320 --> 00:22:39,659
us like if we'd clicked that that would

616
00:22:39,659 --> 00:22:41,340
have really bad for our own because

617
00:22:41,340 --> 00:22:43,020
checkout is what powers our commercial

618
00:22:43,020 --> 00:22:44,940
solution and that would have been not

619
00:22:44,940 --> 00:22:46,679
cool

620
00:22:46,679 --> 00:22:48,360
and so

621
00:22:48,360 --> 00:22:51,539
my little comment on that is that

622
00:22:51,539 --> 00:22:52,919
I don't think it's pretty like I love

623
00:22:52,919 --> 00:22:54,720
bug bounties I think they're a great

624
00:22:54,720 --> 00:22:56,880
idea they make us more secure but if you

625
00:22:56,880 --> 00:22:58,860
know how to do things like this don't do

626
00:22:58,860 --> 00:23:00,419
it on Open Source projects that are a

627
00:23:00,419 --> 00:23:03,120
gift to the world like Pi torch

628
00:23:03,120 --> 00:23:05,760
um do it on actual bug bounties that

629
00:23:05,760 --> 00:23:07,020
just I just thought the behavior was

630
00:23:07,020 --> 00:23:07,860
terrible

631
00:23:07,860 --> 00:23:10,080
the good thing about his article is that

632
00:23:10,080 --> 00:23:11,640
because he was actually doing this to

633
00:23:11,640 --> 00:23:13,620
real people he got observations that I

634
00:23:13,620 --> 00:23:14,640
couldn't get

635
00:23:14,640 --> 00:23:16,860
he did find out that many self-hosted

636
00:23:16,860 --> 00:23:19,080
Runners did have access to S3 buckets he

637
00:23:19,080 --> 00:23:21,000
did find out that many had access to ECR

638
00:23:21,000 --> 00:23:22,980
without ecr's immutable tagging so he

639
00:23:22,980 --> 00:23:24,600
could change the images while

640
00:23:24,600 --> 00:23:27,240
maintaining the tag thus supply chain

641
00:23:27,240 --> 00:23:28,500
attack

642
00:23:28,500 --> 00:23:30,179
a lot of self-hosted Runners were

643
00:23:30,179 --> 00:23:32,820
internal and were not on a VPC so the

644
00:23:32,820 --> 00:23:34,799
efforts like I don't like what he did

645
00:23:34,799 --> 00:23:36,539
but I like the conclusions that he got

646
00:23:36,539 --> 00:23:40,580
so I added it to my presentation

647
00:23:41,520 --> 00:23:43,440
all right ounce of prevention

648
00:23:43,440 --> 00:23:45,000
well I'm just gonna blast through these

649
00:23:45,000 --> 00:23:47,220
because I got five minutes

650
00:23:47,220 --> 00:23:49,380
be careful when adding contributors even

651
00:23:49,380 --> 00:23:51,539
if you're a new startup it's bad because

652
00:23:51,539 --> 00:23:54,000
people like me might be added to your I

653
00:23:54,000 --> 00:23:55,200
mean I'm just a terrible programmer so

654
00:23:55,200 --> 00:23:57,179
that's bad either way

655
00:23:57,179 --> 00:23:58,380
self-hosted Runners and public

656
00:23:58,380 --> 00:24:00,780
repositories are being targeted I mean

657
00:24:00,780 --> 00:24:02,940
uh Branch protection is important more

658
00:24:02,940 --> 00:24:04,860
than one reviewer but there's lots of

659
00:24:04,860 --> 00:24:06,059
things inside Branch protection you

660
00:24:06,059 --> 00:24:07,440
really should read every single one and

661
00:24:07,440 --> 00:24:10,020
make sure you understand what they are

662
00:24:10,020 --> 00:24:11,520
um don't run workflows unless you're 100

663
00:24:11,520 --> 00:24:14,520
sure Environmental Protection

664
00:24:14,520 --> 00:24:16,380
um short lifespan tokens of any kind but

665
00:24:16,380 --> 00:24:17,760
preferably open ID connect if you're

666
00:24:17,760 --> 00:24:19,740
connected to the cloud

667
00:24:19,740 --> 00:24:21,780
GitHub event logging and code owners

668
00:24:21,780 --> 00:24:23,039
code owners is the thing I mentioned

669
00:24:23,039 --> 00:24:25,020
where you can add a code owners file put

670
00:24:25,020 --> 00:24:27,120
someone's ID in it add it to your GitHub

671
00:24:27,120 --> 00:24:28,380
directory and then that's the person

672
00:24:28,380 --> 00:24:30,240
that can review it doesn't end up just

673
00:24:30,240 --> 00:24:32,220
being any old person or yourself by a

674
00:24:32,220 --> 00:24:33,360
curl

675
00:24:33,360 --> 00:24:35,640
and then the last one which I didn't

676
00:24:35,640 --> 00:24:37,500
show you and I'm so sorry but I'm I'm

677
00:24:37,500 --> 00:24:39,720
running out of time sign commits

678
00:24:39,720 --> 00:24:42,780
that there was a bit in that script that

679
00:24:42,780 --> 00:24:44,700
just had me sitting my git config to an

680
00:24:44,700 --> 00:24:46,980
email address and it was Linus torval's

681
00:24:46,980 --> 00:24:47,940
email address

682
00:24:47,940 --> 00:24:50,039
if you do that try it on your own

683
00:24:50,039 --> 00:24:52,500
repository set it up yourself use his

684
00:24:52,500 --> 00:24:55,320
email address and do a commit

685
00:24:55,320 --> 00:24:58,260
GitHub goes and finds his Avatar

686
00:24:58,260 --> 00:25:00,240
and we'll pop it in as the author of The

687
00:25:00,240 --> 00:25:01,080
commit

688
00:25:01,080 --> 00:25:03,659
you can be anybody you want with Git

689
00:25:03,659 --> 00:25:05,039
unless

690
00:25:05,039 --> 00:25:07,020
you're not so you don't have to be you

691
00:25:07,020 --> 00:25:09,720
it's way too easy

692
00:25:09,720 --> 00:25:13,200
to be somebody else in this world

693
00:25:13,200 --> 00:25:15,120
awesome tools you should be using if

694
00:25:15,120 --> 00:25:17,600
you're not already

695
00:25:18,900 --> 00:25:21,360
open ssf scorecard anybody using that

696
00:25:21,360 --> 00:25:24,000
yes it rocks

697
00:25:24,000 --> 00:25:26,159
uh it'll check so many of the things

698
00:25:26,159 --> 00:25:27,539
that I just talked about Branch

699
00:25:27,539 --> 00:25:29,340
protection contributors from at least

700
00:25:29,340 --> 00:25:30,419
two different organizations which I

701
00:25:30,419 --> 00:25:31,620
thought was funny because I did that in

702
00:25:31,620 --> 00:25:34,200
order to become a bad contributor but I

703
00:25:34,200 --> 00:25:35,580
really like the avoid dangerous coding

704
00:25:35,580 --> 00:25:37,440
patterns I did a lot of playing with

705
00:25:37,440 --> 00:25:38,940
that to see what it would find and it

706
00:25:38,940 --> 00:25:40,980
was actually pretty good

707
00:25:40,980 --> 00:25:42,480
um declarative I mean that's not

708
00:25:42,480 --> 00:25:43,980
everything it does it does awesome all

709
00:25:43,980 --> 00:25:45,240
sorts of awesome things just checking

710
00:25:45,240 --> 00:25:47,039
the security of the repository and the

711
00:25:47,039 --> 00:25:49,260
way it is tested in general

712
00:25:49,260 --> 00:25:52,080
that's a definite use it

713
00:25:52,080 --> 00:25:53,880
the other one I would be remiss if I

714
00:25:53,880 --> 00:25:55,860
didn't plug the own project I work on

715
00:25:55,860 --> 00:25:58,260
but the reason we did this was to add

716
00:25:58,260 --> 00:26:00,000
rules to check off that look for the

717
00:26:00,000 --> 00:26:02,520
sort of same sort of things so we've got

718
00:26:02,520 --> 00:26:06,000
strange patterns that look for many uses

719
00:26:06,000 --> 00:26:08,100
of curl inside of workflow anything

720
00:26:08,100 --> 00:26:10,500
that's doing what I did with Secrets all

721
00:26:10,500 --> 00:26:11,820
the different possible reverse shell

722
00:26:11,820 --> 00:26:14,039
things like anything at all like that is

723
00:26:14,039 --> 00:26:16,200
in there and plus we have some of the we

724
00:26:16,200 --> 00:26:18,779
have some overlap with the open ssf um

725
00:26:18,779 --> 00:26:22,440
as well because we do scan the apis and

726
00:26:22,440 --> 00:26:24,000
we look at Branch production being

727
00:26:24,000 --> 00:26:25,200
enabled and they'll also things like

728
00:26:25,200 --> 00:26:27,299
that so there's a bit of a Venn diagram

729
00:26:27,299 --> 00:26:29,460
there but using both certainly would get

730
00:26:29,460 --> 00:26:31,320
you a long way to stopping me doing

731
00:26:31,320 --> 00:26:34,320
anything like I just did there

732
00:26:34,320 --> 00:26:36,360
and that is the end and these are all

733
00:26:36,360 --> 00:26:38,220
the links I used so if you're curious to

734
00:26:38,220 --> 00:26:40,559
read you can go for it

735
00:26:40,559 --> 00:26:43,039
question

736
00:26:44,940 --> 00:26:47,480
yes

737
00:26:47,779 --> 00:26:50,220
uh there'll be eventually a gitlab event

738
00:26:50,220 --> 00:26:53,220
edition of this bitbucket did not

739
00:26:53,220 --> 00:26:56,600
but I hated bitbucket

740
00:26:59,039 --> 00:27:01,919
so there we go uh that's the end any

741
00:27:01,919 --> 00:27:03,900
other questions I have three minutes you

742
00:27:03,900 --> 00:27:05,340
have a three minute sign that's an odd

743
00:27:05,340 --> 00:27:07,879
number to choose

744
00:27:15,059 --> 00:27:17,520
you can do

745
00:27:17,520 --> 00:27:19,559
dialysis

746
00:27:19,559 --> 00:27:21,840
in my organization apply this policy to

747
00:27:21,840 --> 00:27:24,659
them and then Auto fix or open issues if

748
00:27:24,659 --> 00:27:25,620
it doesn't provide

749
00:27:25,620 --> 00:27:28,679
cool All-Star everybody get that

750
00:27:28,679 --> 00:27:32,100
it's like open ssf but like huge

751
00:27:32,100 --> 00:27:34,799
yeah same makes sense

752
00:27:34,799 --> 00:27:36,720
awesome thanks for watching that if

753
00:27:36,720 --> 00:27:38,520
that's it

754
00:27:38,520 --> 00:27:40,380
great oh well again

755
00:27:40,380 --> 00:27:44,000
I mean thank you for asking questions

756
00:28:04,380 --> 00:28:06,419
I don't know it's a good question I'm

757
00:28:06,419 --> 00:28:09,000
looking at it asked me next year when I

758
00:28:09,000 --> 00:28:12,200
do the get lab version

759
00:28:13,220 --> 00:28:14,880
foreign

760
00:28:14,880 --> 00:28:17,600
cool

761
00:28:18,000 --> 00:28:21,320
thumbs up all right thanks

