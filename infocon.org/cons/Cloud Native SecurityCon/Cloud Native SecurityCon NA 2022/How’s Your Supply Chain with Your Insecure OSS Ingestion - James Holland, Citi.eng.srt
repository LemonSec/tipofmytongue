1
00:00:01,319 --> 00:00:03,300
um good afternoon my name is James

2
00:00:03,300 --> 00:00:06,240
Holland I'm as already mentioned I'm

3
00:00:06,240 --> 00:00:09,120
head of absec for city

4
00:00:09,120 --> 00:00:10,440
um my colleague

5
00:00:10,440 --> 00:00:12,420
from control plane we'll be joining us

6
00:00:12,420 --> 00:00:14,639
shortly there's no rush at the moment

7
00:00:14,639 --> 00:00:15,900
he's going to come in give us a

8
00:00:15,900 --> 00:00:16,980
demonstration of what we're doing at the

9
00:00:16,980 --> 00:00:18,000
moment

10
00:00:18,000 --> 00:00:18,720
um

11
00:00:18,720 --> 00:00:20,160
so

12
00:00:20,160 --> 00:00:22,500
a bit of a provocative title uh how is

13
00:00:22,500 --> 00:00:24,060
your supply chain with your insecure

14
00:00:24,060 --> 00:00:26,939
your OSS ingestion

15
00:00:26,939 --> 00:00:27,960
um

16
00:00:27,960 --> 00:00:30,060
so try and take you through what we're

17
00:00:30,060 --> 00:00:32,940
going to go on that so

18
00:00:32,940 --> 00:00:35,040
try and give you a bit of a overview of

19
00:00:35,040 --> 00:00:37,020
the landscape I'm not going to go into

20
00:00:37,020 --> 00:00:39,840
supply chain details there's a lot more

21
00:00:39,840 --> 00:00:41,460
bright people in the room than me who

22
00:00:41,460 --> 00:00:43,379
know a lot more about this than I do so

23
00:00:43,379 --> 00:00:45,300
I'm going to leave that to them but I'll

24
00:00:45,300 --> 00:00:47,340
try and say where we think the landscape

25
00:00:47,340 --> 00:00:50,399
is going okay I'll give you a background

26
00:00:50,399 --> 00:00:51,780
of the why

27
00:00:51,780 --> 00:00:53,760
a bit of a history of what I've been

28
00:00:53,760 --> 00:00:55,980
doing over the 20 years in supply chain

29
00:00:55,980 --> 00:00:58,500
with people like Department of Defense

30
00:00:58,500 --> 00:00:59,520
which is

31
00:00:59,520 --> 00:01:01,760
super interesting

32
00:01:01,760 --> 00:01:04,920
some of the tourings we've seen in the

33
00:01:04,920 --> 00:01:07,680
past and what we're hoping to open

34
00:01:07,680 --> 00:01:10,140
source to the community with with

35
00:01:10,140 --> 00:01:12,960
controlling and uh City okay and then

36
00:01:12,960 --> 00:01:14,100
wrap up

37
00:01:14,100 --> 00:01:16,020
so

38
00:01:16,020 --> 00:01:18,299
this is how we are looking at the

39
00:01:18,299 --> 00:01:20,400
landscape from

40
00:01:20,400 --> 00:01:24,979
the work we're doing in the marketplace

41
00:01:25,380 --> 00:01:27,119
we've got in Sydney we've got quite an

42
00:01:27,119 --> 00:01:29,159
extensive uh software supply chain

43
00:01:29,159 --> 00:01:31,439
program under John Meadows he heads up a

44
00:01:31,439 --> 00:01:33,119
few of the working groups and in working

45
00:01:33,119 --> 00:01:35,939
groups for cncf supply chain

46
00:01:35,939 --> 00:01:38,400
um also the ossf as well

47
00:01:38,400 --> 00:01:39,119
um

48
00:01:39,119 --> 00:01:42,479
but before I do get into this can I have

49
00:01:42,479 --> 00:01:45,180
a show of hands who here is using a

50
00:01:45,180 --> 00:01:47,280
package manager or something like

51
00:01:47,280 --> 00:01:50,579
artifactory in their organizations yeah

52
00:01:50,579 --> 00:01:53,820
okay and

53
00:01:53,820 --> 00:01:56,460
do you ingest software directly into

54
00:01:56,460 --> 00:02:00,860
your pipelines straight off GitHub

55
00:02:01,439 --> 00:02:03,420
some nervous looking people yeah

56
00:02:03,420 --> 00:02:05,040
hands up

57
00:02:05,040 --> 00:02:07,140
anybody else doing some straight into

58
00:02:07,140 --> 00:02:08,520
your pipelines without checking where

59
00:02:08,520 --> 00:02:10,440
it's coming from or whether you should

60
00:02:10,440 --> 00:02:11,879
use it or not

61
00:02:11,879 --> 00:02:14,340
any and another show hands how many

62
00:02:14,340 --> 00:02:15,780
people are actually doing an assessment

63
00:02:15,780 --> 00:02:17,160
of whether you should be using that

64
00:02:17,160 --> 00:02:19,739
library or not

65
00:02:19,739 --> 00:02:22,739
one excellent

66
00:02:22,739 --> 00:02:24,540
come speak to you later

67
00:02:24,540 --> 00:02:26,640
Okay so

68
00:02:26,640 --> 00:02:28,500
I think that's what I'm trying to

69
00:02:28,500 --> 00:02:32,459
emphasize is that the point is that you

70
00:02:32,459 --> 00:02:34,560
can use this library but should you

71
00:02:34,560 --> 00:02:38,040
is it fit for purpose is it what it's

72
00:02:38,040 --> 00:02:40,080
saying is doing is the right thing okay

73
00:02:40,080 --> 00:02:42,060
now

74
00:02:42,060 --> 00:02:44,400
as you can see in this landscape here

75
00:02:44,400 --> 00:02:46,440
you can't have a supply chain secure

76
00:02:46,440 --> 00:02:49,200
bills if you have no idea where you're

77
00:02:49,200 --> 00:02:50,819
getting your libraries from and you

78
00:02:50,819 --> 00:02:53,099
don't know the maturity levels and all

79
00:02:53,099 --> 00:02:54,360
the other signals that might go around

80
00:02:54,360 --> 00:02:56,400
that okay

81
00:02:56,400 --> 00:03:00,900
if we look at this tweet I think this

82
00:03:00,900 --> 00:03:04,440
sums up the problem pretty well actually

83
00:03:04,440 --> 00:03:06,959
look at all these package managers you

84
00:03:06,959 --> 00:03:10,260
know very flexible super helpful but a

85
00:03:10,260 --> 00:03:13,980
lot of them allow do you run pre and

86
00:03:13,980 --> 00:03:16,019
post install Scripts

87
00:03:16,019 --> 00:03:17,940
as soon as you installed it the piece of

88
00:03:17,940 --> 00:03:19,080
software into your development

89
00:03:19,080 --> 00:03:20,040
environment

90
00:03:20,040 --> 00:03:21,840
now

91
00:03:21,840 --> 00:03:25,200
we know from previous experience npm has

92
00:03:25,200 --> 00:03:27,780
got 2.2 percent of all the libraries

93
00:03:27,780 --> 00:03:30,720
have scripts that run

94
00:03:30,720 --> 00:03:33,540
and then if we look in further we've

95
00:03:33,540 --> 00:03:35,959
done some analysts and

96
00:03:35,959 --> 00:03:38,340
analyze some of these

97
00:03:38,340 --> 00:03:41,340
94 of them you say are pretty insecure

98
00:03:41,340 --> 00:03:42,840
or malicious

99
00:03:42,840 --> 00:03:45,360
it's quite a huge amount so if you're

100
00:03:45,360 --> 00:03:47,819
looking at npm alone two percent of the

101
00:03:47,819 --> 00:03:50,519
library is there are doing malicious

102
00:03:50,519 --> 00:03:51,780
activities

103
00:03:51,780 --> 00:03:53,879
now that's not great especially as

104
00:03:53,879 --> 00:03:56,940
you've got no way of checking that

105
00:03:56,940 --> 00:03:58,799
at installation time at the present

106
00:03:58,799 --> 00:04:01,200
moment in time okay so you might have

107
00:04:01,200 --> 00:04:02,940
software that does things there is some

108
00:04:02,940 --> 00:04:05,040
commercial software that does this okay

109
00:04:05,040 --> 00:04:06,720
but there's nothing really out there for

110
00:04:06,720 --> 00:04:09,540
anybody else okay

111
00:04:09,540 --> 00:04:11,700
um and thanks to Abby he gave me

112
00:04:11,700 --> 00:04:14,540
permission to show this

113
00:04:14,640 --> 00:04:15,959
um so if we start looking at what

114
00:04:15,959 --> 00:04:17,699
signals we want to look at

115
00:04:17,699 --> 00:04:19,199
is never

116
00:04:19,199 --> 00:04:22,079
green yet yes or no there's always a

117
00:04:22,079 --> 00:04:23,639
gray area in between

118
00:04:23,639 --> 00:04:25,020
so

119
00:04:25,020 --> 00:04:26,220
we're always going to take libraries

120
00:04:26,220 --> 00:04:29,699
from Google shut up and Source or Alpha

121
00:04:29,699 --> 00:04:32,699
Omega project from openssf

122
00:04:32,699 --> 00:04:33,900
because they've gone through a whole

123
00:04:33,900 --> 00:04:37,560
series of checks and we can rely on them

124
00:04:37,560 --> 00:04:38,340
um

125
00:04:38,340 --> 00:04:40,199
and you know that's the level of trust

126
00:04:40,199 --> 00:04:42,240
we have with those organizations but you

127
00:04:42,240 --> 00:04:43,440
still have to ingest them and you still

128
00:04:43,440 --> 00:04:44,880
have to then check the signatures they

129
00:04:44,880 --> 00:04:48,479
came in from there that Source okay and

130
00:04:48,479 --> 00:04:50,759
then there's the ones you can deny

131
00:04:50,759 --> 00:04:52,440
you know

132
00:04:52,440 --> 00:04:54,419
we're having a signal that we know this

133
00:04:54,419 --> 00:04:56,040
library has been worked on by somebody

134
00:04:56,040 --> 00:04:57,419
who's

135
00:04:57,419 --> 00:05:01,380
has a sort of dodgy background

136
00:05:01,380 --> 00:05:03,900
or you know it's coming from a

137
00:05:03,900 --> 00:05:05,400
sanctioned country

138
00:05:05,400 --> 00:05:09,000
we've seen this in the bank okay

139
00:05:09,000 --> 00:05:10,199
um

140
00:05:10,199 --> 00:05:11,940
the fact the package doesn't have a

141
00:05:11,940 --> 00:05:15,780
signature is not necessarily a bad sign

142
00:05:15,780 --> 00:05:18,000
but if a signature is failing

143
00:05:18,000 --> 00:05:20,580
it would suggest it is

144
00:05:20,580 --> 00:05:22,280
um

145
00:05:22,280 --> 00:05:24,539
I'm not going to go into Mrs code I

146
00:05:24,539 --> 00:05:26,639
think that's where the install Scripts I

147
00:05:26,639 --> 00:05:28,080
was saying the p and post in Source

148
00:05:28,080 --> 00:05:29,460
grips on the package manager comes into

149
00:05:29,460 --> 00:05:32,220
this red area and as a bank you've got

150
00:05:32,220 --> 00:05:33,479
to try and make a decision or

151
00:05:33,479 --> 00:05:34,800
organization Enterprise you've got to

152
00:05:34,800 --> 00:05:36,479
try to make a decision

153
00:05:36,479 --> 00:05:40,320
but then you get all the gray area

154
00:05:40,320 --> 00:05:43,199
should any one of those fail should you

155
00:05:43,199 --> 00:05:46,020
block the usage of that Library no

156
00:05:46,020 --> 00:05:48,720
except each individual individual

157
00:05:48,720 --> 00:05:49,800
Enterprise

158
00:05:49,800 --> 00:05:52,320
to make a risk decision based off this

159
00:05:52,320 --> 00:05:53,880
information and have their own policies

160
00:05:53,880 --> 00:05:56,220
around this okay

161
00:05:56,220 --> 00:05:57,720
um and there's a lot of information in

162
00:05:57,720 --> 00:06:00,240
there a lot of signals coming in that we

163
00:06:00,240 --> 00:06:01,919
see and a lot of different feeds coming

164
00:06:01,919 --> 00:06:02,699
in

165
00:06:02,699 --> 00:06:06,120
okay so we need a way of

166
00:06:06,120 --> 00:06:08,639
having a right in a very simple policy

167
00:06:08,639 --> 00:06:11,280
for Enterprises to

168
00:06:11,280 --> 00:06:13,440
check these signals and make a decision

169
00:06:13,440 --> 00:06:14,759
whether they should ingest this library

170
00:06:14,759 --> 00:06:15,720
or not

171
00:06:15,720 --> 00:06:18,199
okay

172
00:06:19,620 --> 00:06:21,000
um

173
00:06:21,000 --> 00:06:22,500
and then

174
00:06:22,500 --> 00:06:24,000
you're gonna have to start scaling this

175
00:06:24,000 --> 00:06:25,500
up if you're making the decision around

176
00:06:25,500 --> 00:06:27,960
this is it's okay to do it for one or

177
00:06:27,960 --> 00:06:30,060
two libraries or 50 libraries but what

178
00:06:30,060 --> 00:06:31,740
if you're starting to deal with three

179
00:06:31,740 --> 00:06:33,240
million libraries

180
00:06:33,240 --> 00:06:35,940
and you have to then do it continuously

181
00:06:35,940 --> 00:06:38,940
so it needs a bit of scale around this

182
00:06:38,940 --> 00:06:41,360
okay

183
00:06:41,819 --> 00:06:43,560
um

184
00:06:43,560 --> 00:06:45,120
so

185
00:06:45,120 --> 00:06:46,800
as I said before I've got a bit of

186
00:06:46,800 --> 00:06:47,940
history about this

187
00:06:47,940 --> 00:06:51,539
um uh I've done this for

188
00:06:51,539 --> 00:06:53,880
manually for a long time

189
00:06:53,880 --> 00:06:56,520
Department of Defense we used to do this

190
00:06:56,520 --> 00:06:58,199
they wanted everything built from source

191
00:06:58,199 --> 00:06:59,880
and if you brought a library and you had

192
00:06:59,880 --> 00:07:02,460
to justify its existence every single

193
00:07:02,460 --> 00:07:06,060
time so you're very careful on

194
00:07:06,060 --> 00:07:08,699
what is maturity of it was

195
00:07:08,699 --> 00:07:10,919
so we didn't have to replace it

196
00:07:10,919 --> 00:07:13,500
so just looking this is a spreadsheet

197
00:07:13,500 --> 00:07:16,800
that my colleague Francois Marsh used to

198
00:07:16,800 --> 00:07:19,380
come up with and we used to use this

199
00:07:19,380 --> 00:07:21,840
every time so any developer used to come

200
00:07:21,840 --> 00:07:23,639
in and ask for a library they had to go

201
00:07:23,639 --> 00:07:25,080
through this checklist

202
00:07:25,080 --> 00:07:28,979
and then we go like an Empire Emperor

203
00:07:28,979 --> 00:07:30,960
thumbs up or a thumbs down

204
00:07:30,960 --> 00:07:33,060
and that's including that was including

205
00:07:33,060 --> 00:07:35,099
Oracle database so we had to build

206
00:07:35,099 --> 00:07:38,580
Oracle database from source for DOD and

207
00:07:38,580 --> 00:07:41,280
put it into escrow which was quite

208
00:07:41,280 --> 00:07:44,599
um interesting

209
00:07:46,199 --> 00:07:47,639
so

210
00:07:47,639 --> 00:07:49,259
what I would like to say about this is

211
00:07:49,259 --> 00:07:51,500
that

212
00:07:51,680 --> 00:07:53,460
the process of building everything

213
00:07:53,460 --> 00:07:55,199
resource is not possible for most people

214
00:07:55,199 --> 00:07:57,000
okay there's only certain organizations

215
00:07:57,000 --> 00:07:59,280
of a certain scale can do that Google do

216
00:07:59,280 --> 00:08:00,660
it for their Borg

217
00:08:00,660 --> 00:08:04,620
DOD demand it of a lot of organizations

218
00:08:04,620 --> 00:08:07,560
but trying to do a reproducible build or

219
00:08:07,560 --> 00:08:09,419
build your source code is impossible

220
00:08:09,419 --> 00:08:11,039
because all of the environments are so

221
00:08:11,039 --> 00:08:14,580
different on all the install Scripts

222
00:08:14,580 --> 00:08:17,220
each Library requires something else to

223
00:08:17,220 --> 00:08:20,340
be done to for the bill to happen

224
00:08:20,340 --> 00:08:21,840
um so it's

225
00:08:21,840 --> 00:08:24,599
too difficult to do and too expensive to

226
00:08:24,599 --> 00:08:25,319
do

227
00:08:25,319 --> 00:08:27,800
okay

228
00:08:27,919 --> 00:08:31,099
what else

229
00:08:31,139 --> 00:08:32,458
so

230
00:08:32,458 --> 00:08:34,200
I think we mentioned this before I think

231
00:08:34,200 --> 00:08:36,000
the previous speaker mentioned this so

232
00:08:36,000 --> 00:08:37,860
there's a load of new tooling coming in

233
00:08:37,860 --> 00:08:40,020
this is allowing us to automate a lot of

234
00:08:40,020 --> 00:08:40,919
this

235
00:08:40,919 --> 00:08:44,820
so s-bomb salsa attestations that would

236
00:08:44,820 --> 00:08:46,800
be great if we could get that every time

237
00:08:46,800 --> 00:08:48,440
vex

238
00:08:48,440 --> 00:08:51,360
as mentioned there's also Kev

239
00:08:51,360 --> 00:08:53,820
another one which is known exploitable

240
00:08:53,820 --> 00:08:56,160
of vulnerabilities that's an interesting

241
00:08:56,160 --> 00:08:57,480
one to look at so you can say actually

242
00:08:57,480 --> 00:09:01,200
there is a proper exploit here

243
00:09:01,200 --> 00:09:02,760
um

244
00:09:02,760 --> 00:09:04,800
but these are never know and allowing us

245
00:09:04,800 --> 00:09:07,860
to automate and scale this automatically

246
00:09:07,860 --> 00:09:10,140
um and that's what we're hopefully

247
00:09:10,140 --> 00:09:11,279
trying to do

248
00:09:11,279 --> 00:09:14,760
but the tools do exist that have evolved

249
00:09:14,760 --> 00:09:16,440
a little bit we have scorecards and

250
00:09:16,440 --> 00:09:18,000
stuff like that

251
00:09:18,000 --> 00:09:18,720
um

252
00:09:18,720 --> 00:09:20,760
but they're limited normally proprietary

253
00:09:20,760 --> 00:09:22,260
systems so you have a lot of the vendors

254
00:09:22,260 --> 00:09:24,540
do have the intelligence but they don't

255
00:09:24,540 --> 00:09:27,180
actually allow you to make a decision on

256
00:09:27,180 --> 00:09:29,040
the gray area they'll just say yes no

257
00:09:29,040 --> 00:09:31,320
and that's it you might want to induce

258
00:09:31,320 --> 00:09:33,180
some further investigation and actually

259
00:09:33,180 --> 00:09:36,739
mixing policy decisions around that

260
00:09:37,440 --> 00:09:39,440
um

261
00:09:39,860 --> 00:09:42,959
so there's limited availability for uh

262
00:09:42,959 --> 00:09:45,120
the tools the current tooling we have to

263
00:09:45,120 --> 00:09:47,899
remove this toil

264
00:09:48,480 --> 00:09:50,760
so we're trying to if we've been working

265
00:09:50,760 --> 00:09:52,800
together with control plane at City to

266
00:09:52,800 --> 00:09:56,640
come up with a tool to uh

267
00:09:56,640 --> 00:09:59,160
allow us to ingest software

268
00:09:59,160 --> 00:10:01,920
to make the checks beforehand

269
00:10:01,920 --> 00:10:04,820
um and allow it to be groomed

270
00:10:04,820 --> 00:10:08,040
and remove a lot of the problems of toil

271
00:10:08,040 --> 00:10:09,300
as I mentioned before

272
00:10:09,300 --> 00:10:11,160
and then obviously using the best

273
00:10:11,160 --> 00:10:12,779
practices you're seeing around in salsa

274
00:10:12,779 --> 00:10:15,959
and a few other the uh Fresno areas

275
00:10:15,959 --> 00:10:19,019
about signing and putting making sure we

276
00:10:19,019 --> 00:10:22,019
bringing them as an incorrect way okay

277
00:10:22,019 --> 00:10:24,240
some of the use cases uh I'm going to

278
00:10:24,240 --> 00:10:27,080
scrape onto that

279
00:10:28,740 --> 00:10:30,360
um

280
00:10:30,360 --> 00:10:31,740
some of the use cases around this are

281
00:10:31,740 --> 00:10:33,600
getting a bit more complicated so at the

282
00:10:33,600 --> 00:10:35,040
moment we're focusing on the blue areas

283
00:10:35,040 --> 00:10:37,860
the top right about how we're ingesting

284
00:10:37,860 --> 00:10:40,440
the libraries in but we're doing a bit

285
00:10:40,440 --> 00:10:41,820
of a separation of the policy of what

286
00:10:41,820 --> 00:10:43,620
you ingest in and actually what the

287
00:10:43,620 --> 00:10:45,060
scanning policy might be or the test

288
00:10:45,060 --> 00:10:47,279
policy you do

289
00:10:47,279 --> 00:10:49,380
um so when we collect the evidence we

290
00:10:49,380 --> 00:10:51,600
don't make a decision within the

291
00:10:51,600 --> 00:10:53,459
container at that time we collect the

292
00:10:53,459 --> 00:10:55,140
evidence and story for later we sign it

293
00:10:55,140 --> 00:10:57,240
and store it for later and then make a

294
00:10:57,240 --> 00:10:59,100
policy decision at the end

295
00:10:59,100 --> 00:11:01,079
because the allow us then to rerun that

296
00:11:01,079 --> 00:11:02,940
in the future the next day or the day

297
00:11:02,940 --> 00:11:04,320
after the day after so if we collected

298
00:11:04,320 --> 00:11:05,579
the evidence

299
00:11:05,579 --> 00:11:07,560
we can then the policy changes we can

300
00:11:07,560 --> 00:11:10,620
then see it re-evaluate it and this

301
00:11:10,620 --> 00:11:14,279
allows us to groom the libraries daily

302
00:11:14,279 --> 00:11:17,339
uh uh what do I also want to say about

303
00:11:17,339 --> 00:11:18,600
this

304
00:11:18,600 --> 00:11:20,040
um

305
00:11:20,040 --> 00:11:21,540
I think it's

306
00:11:21,540 --> 00:11:23,820
very interesting to separate what the

307
00:11:23,820 --> 00:11:26,640
initial lookup is from the scan policy

308
00:11:26,640 --> 00:11:29,519
because an initial lookup policy

309
00:11:29,519 --> 00:11:31,800
of the PRL can do this particular scan

310
00:11:31,800 --> 00:11:34,200
or not or it can be coming in a

311
00:11:34,200 --> 00:11:36,600
particular way is okay

312
00:11:36,600 --> 00:11:38,579
but the scam policy can have a massive

313
00:11:38,579 --> 00:11:40,920
effect across all the scans and all the

314
00:11:40,920 --> 00:11:42,720
all the lowers you're using so if I

315
00:11:42,720 --> 00:11:44,339
change the policy on whether a signature

316
00:11:44,339 --> 00:11:46,260
is allowed or not I want to see what

317
00:11:46,260 --> 00:11:48,120
that effect is if I make that change

318
00:11:48,120 --> 00:11:49,740
across the organization if I've got

319
00:11:49,740 --> 00:11:51,300
three million libraries in I say

320
00:11:51,300 --> 00:11:53,100
everything must be signed

321
00:11:53,100 --> 00:11:55,380
you could lose 50 of your libraries from

322
00:11:55,380 --> 00:11:57,060
your organization so you need to test

323
00:11:57,060 --> 00:11:59,700
and show what the effect would be on

324
00:11:59,700 --> 00:12:03,079
that scan policy change

325
00:12:04,140 --> 00:12:05,760
um

326
00:12:05,760 --> 00:12:07,920
and also we want to be able to subscribe

327
00:12:07,920 --> 00:12:09,839
to feeds so we can bring these in

328
00:12:09,839 --> 00:12:11,220
earlier and I think that's the red

329
00:12:11,220 --> 00:12:14,700
section top left but individual

330
00:12:14,700 --> 00:12:15,899
libraries you've got to be able to give

331
00:12:15,899 --> 00:12:17,820
an override as well

332
00:12:17,820 --> 00:12:20,220
we see this a lot that this stuff is

333
00:12:20,220 --> 00:12:23,060
brought in that fails the policy uh very

334
00:12:23,060 --> 00:12:25,260
specific policy

335
00:12:25,260 --> 00:12:27,720
which Thomas will demonstrate later

336
00:12:27,720 --> 00:12:30,360
that you actually say for this Library

337
00:12:30,360 --> 00:12:32,339
it's going to be fine no problem at all

338
00:12:32,339 --> 00:12:33,300
you're going to let that in because we

339
00:12:33,300 --> 00:12:35,339
know we've done some backward tracks to

340
00:12:35,339 --> 00:12:37,380
allow it because it even though you have

341
00:12:37,380 --> 00:12:40,620
a core policy set you've set up

342
00:12:40,620 --> 00:12:42,660
it's going to blow it blow you away at

343
00:12:42,660 --> 00:12:44,579
the water with the failure

344
00:12:44,579 --> 00:12:46,200
okay

345
00:12:46,200 --> 00:12:47,399
um

346
00:12:47,399 --> 00:12:48,959
some flows I'm going to try and go a bit

347
00:12:48,959 --> 00:12:51,120
quicker so we can get more demo in

348
00:12:51,120 --> 00:12:52,800
um

349
00:12:52,800 --> 00:12:54,660
as I said there's a separation between

350
00:12:54,660 --> 00:12:59,639
Purl package URL is a universal lookup

351
00:12:59,639 --> 00:13:01,620
we make a policy decision there we can

352
00:13:01,620 --> 00:13:03,959
get feeds to make a instant decision or

353
00:13:03,959 --> 00:13:06,500
yes or no

354
00:13:07,320 --> 00:13:09,300
but then we can go into different flows

355
00:13:09,300 --> 00:13:11,519
the first is the Intel flow you know

356
00:13:11,519 --> 00:13:14,480
going to a scorecard or a chain guard

357
00:13:14,480 --> 00:13:18,600
skirt or other fees from other vendors

358
00:13:18,600 --> 00:13:19,260
um

359
00:13:19,260 --> 00:13:22,079
within the city we've got about four or

360
00:13:22,079 --> 00:13:24,360
five different feeds that we use

361
00:13:24,360 --> 00:13:27,420
giving us various information about even

362
00:13:27,420 --> 00:13:30,740
individual Developers

363
00:13:31,740 --> 00:13:33,740
um

364
00:13:34,019 --> 00:13:37,200
so then most things will go through the

365
00:13:37,200 --> 00:13:39,959
standard flow uh but you also think they

366
00:13:39,959 --> 00:13:42,180
might go on to things like okay this is

367
00:13:42,180 --> 00:13:45,480
a package npm do we want to actually run

368
00:13:45,480 --> 00:13:47,100
this in a sandbox

369
00:13:47,100 --> 00:13:49,079
see what it does on the install scripts

370
00:13:49,079 --> 00:13:52,800
run it in over a period of time with uh

371
00:13:52,800 --> 00:13:55,019
Linux timestamp so we can see what is

372
00:13:55,019 --> 00:13:56,399
going to happen over a two or three week

373
00:13:56,399 --> 00:13:58,500
period and accelerate that to see what

374
00:13:58,500 --> 00:14:00,360
it does because it might actually have

375
00:14:00,360 --> 00:14:01,980
you have some sleeper code in it that

376
00:14:01,980 --> 00:14:04,680
gets triggered in two weeks time

377
00:14:04,680 --> 00:14:07,920
so that's the sort of uh extensions

378
00:14:07,920 --> 00:14:10,680
we're looking to put into this

379
00:14:10,680 --> 00:14:13,260
okay and

380
00:14:13,260 --> 00:14:15,300
also getting from alternative sources I

381
00:14:15,300 --> 00:14:16,920
think I've mentioned that here I think

382
00:14:16,920 --> 00:14:19,500
that's um Google I've mentioned that in

383
00:14:19,500 --> 00:14:21,240
the first slide

384
00:14:21,240 --> 00:14:24,420
so without further Ado I'm gonna

385
00:14:24,420 --> 00:14:26,940
a lot of talking it's a very similar

386
00:14:26,940 --> 00:14:29,940
talk that we gave in Dublin but this

387
00:14:29,940 --> 00:14:31,139
time we want to give a demo of what

388
00:14:31,139 --> 00:14:32,160
we're doing

389
00:14:32,160 --> 00:14:34,079
we're in early Alpha but we'd like a bit

390
00:14:34,079 --> 00:14:36,000
of feedback off that if we could so

391
00:14:36,000 --> 00:14:39,860
hello ask Thomas to come up

392
00:14:42,000 --> 00:14:44,779
oops

393
00:14:47,040 --> 00:14:49,380
can I want to hear me all right

394
00:14:49,380 --> 00:14:51,920
okay

395
00:14:53,519 --> 00:14:56,720
all right wrong screen

396
00:15:01,380 --> 00:15:04,100
yep

397
00:15:08,459 --> 00:15:11,639
actually it's better

398
00:15:11,639 --> 00:15:13,680
all right

399
00:15:13,680 --> 00:15:16,199
um let me kick off with an example

400
00:15:16,199 --> 00:15:19,339
um so we are going to demo the npm

401
00:15:19,339 --> 00:15:21,420
ecosystem today

402
00:15:21,420 --> 00:15:25,139
and react everyone knows it I guess and

403
00:15:25,139 --> 00:15:29,399
yeah so if someone requests react

404
00:15:29,399 --> 00:15:32,100
um we always care also about the

405
00:15:32,100 --> 00:15:33,720
dependencies

406
00:15:33,720 --> 00:15:35,459
and in this one the direct one we have

407
00:15:35,459 --> 00:15:37,980
loose energy file and a transitive one

408
00:15:37,980 --> 00:15:41,160
with Chase tokens that we also need to

409
00:15:41,160 --> 00:15:44,699
ingest that we also need to check

410
00:15:44,699 --> 00:15:47,399
so we've built open source ingestion

411
00:15:47,399 --> 00:15:51,839
based on AWS eks and attacked on

412
00:15:51,839 --> 00:15:55,940
and so we have techno pipelines in place

413
00:15:56,040 --> 00:16:00,420
and yeah let's just kick it off

414
00:16:00,420 --> 00:16:02,459
those are the two PLS I'm going to send

415
00:16:02,459 --> 00:16:04,500
off so one is the mentioned react

416
00:16:04,500 --> 00:16:07,920
example and the other one is the shadow

417
00:16:07,920 --> 00:16:09,959
quote package I'll moderate that later

418
00:16:09,959 --> 00:16:12,120
why

419
00:16:12,120 --> 00:16:14,399
and this is just a test script to send

420
00:16:14,399 --> 00:16:16,440
it to our API

421
00:16:16,440 --> 00:16:18,959
and I send it off

422
00:16:18,959 --> 00:16:21,779
and right now the Techno dashboard is a

423
00:16:21,779 --> 00:16:25,380
good way to Showcase what's going on and

424
00:16:25,380 --> 00:16:27,779
I and we can see we have four pipeline

425
00:16:27,779 --> 00:16:30,480
runs running the reason of that is the

426
00:16:30,480 --> 00:16:32,519
first one is react then we have two sub

427
00:16:32,519 --> 00:16:34,079
dependencies for react and then we have

428
00:16:34,079 --> 00:16:35,760
to share code package

429
00:16:35,760 --> 00:16:38,100
so this one is going to be react

430
00:16:38,100 --> 00:16:40,199
running our different checks

431
00:16:40,199 --> 00:16:42,779
and we're almost halfway through here

432
00:16:42,779 --> 00:16:45,420
already and let's go a bit more deeper

433
00:16:45,420 --> 00:16:47,100
into the checks we are running at the

434
00:16:47,100 --> 00:16:47,880
moment

435
00:16:47,880 --> 00:16:50,880
and this is something that can expand

436
00:16:50,880 --> 00:16:53,040
quite a lot right like in the future we

437
00:16:53,040 --> 00:16:55,980
can we're gonna have the um pre and post

438
00:16:55,980 --> 00:16:58,620
install script uh checks in a different

439
00:16:58,620 --> 00:16:59,579
task

440
00:16:59,579 --> 00:17:04,140
and sales checks Etc all of all kinds of

441
00:17:04,140 --> 00:17:05,939
things we can run here

442
00:17:05,939 --> 00:17:07,619
so right now we have in the first stage

443
00:17:07,619 --> 00:17:11,040
the Intel scorecard check the scorecard

444
00:17:11,040 --> 00:17:12,839
check itself so we're going to look at

445
00:17:12,839 --> 00:17:15,299
the GitHub repository

446
00:17:15,299 --> 00:17:17,520
um of that dependency

447
00:17:17,520 --> 00:17:20,099
signature check lots of signatures

448
00:17:20,099 --> 00:17:23,939
everywhere nowadays but no point in if

449
00:17:23,939 --> 00:17:25,559
you don't verify them we are doing that

450
00:17:25,559 --> 00:17:27,119
here

451
00:17:27,119 --> 00:17:30,900
um most package managers or registries

452
00:17:30,900 --> 00:17:36,480
publish or Supply the signatures and we

453
00:17:36,480 --> 00:17:38,100
are checking the signature here against

454
00:17:38,100 --> 00:17:39,720
the public key that is publicly

455
00:17:39,720 --> 00:17:41,880
available

456
00:17:41,880 --> 00:17:44,340
and at the first stage you're running

457
00:17:44,340 --> 00:17:47,000
our vulnerability stage so we're doing

458
00:17:47,000 --> 00:17:50,660
running calling out to sneak here and

459
00:17:50,660 --> 00:17:52,380
checking if there are any

460
00:17:52,380 --> 00:17:54,360
vulnerabilities any CBE stuff like that

461
00:17:54,360 --> 00:17:55,740
in here

462
00:17:55,740 --> 00:17:59,960
and James mentioned before the policy

463
00:18:00,840 --> 00:18:03,780
and let's go inside the task one itself

464
00:18:03,780 --> 00:18:05,039
to see

465
00:18:05,039 --> 00:18:07,380
so in the policy decision stage we are

466
00:18:07,380 --> 00:18:09,120
fetching all the check results of the

467
00:18:09,120 --> 00:18:11,280
previous stages we're getting them back

468
00:18:11,280 --> 00:18:16,260
and we run a policy check against Opa

469
00:18:16,260 --> 00:18:18,720
um with a bit of policy we've written

470
00:18:18,720 --> 00:18:21,600
and in this case a bit of a spoiler here

471
00:18:21,600 --> 00:18:24,980
it's a pass

472
00:18:25,440 --> 00:18:28,559
so police policy passed and that means

473
00:18:28,559 --> 00:18:32,640
we can continue with ingestion and can

474
00:18:32,640 --> 00:18:35,100
put in our internal libraries

475
00:18:35,100 --> 00:18:38,700
now the last one Shell Code

476
00:18:38,700 --> 00:18:41,039
one second here

477
00:18:41,039 --> 00:18:42,480
um I got a kind of a bit of different

478
00:18:42,480 --> 00:18:43,860
message here

479
00:18:43,860 --> 00:18:46,620
um first I got a message from scorecard

480
00:18:46,620 --> 00:18:48,299
Appliance protection is not so great

481
00:18:48,299 --> 00:18:51,360
many GitHub repositories

482
00:18:51,360 --> 00:18:53,400
um I have that so

483
00:18:53,400 --> 00:18:54,960
um it could be a warning it could be

484
00:18:54,960 --> 00:18:57,240
failure depending on your policy so

485
00:18:57,240 --> 00:18:59,940
that's that's quite flexible but here in

486
00:18:59,940 --> 00:19:03,419
here we also have a high cve coming back

487
00:19:03,419 --> 00:19:06,299
from Snook and there's a remote code

488
00:19:06,299 --> 00:19:09,059
execution CV and we probably don't want

489
00:19:09,059 --> 00:19:11,820
that and to be ingested

490
00:19:11,820 --> 00:19:15,240
so in terms of ingestion what does that

491
00:19:15,240 --> 00:19:17,340
mean so

492
00:19:17,340 --> 00:19:18,840
we have

493
00:19:18,840 --> 00:19:21,360
let's go in here

494
00:19:21,360 --> 00:19:23,880
we have a e-chased stage we do a couple

495
00:19:23,880 --> 00:19:25,440
of things here so depending on the

496
00:19:25,440 --> 00:19:27,660
previous policy decision we go different

497
00:19:27,660 --> 00:19:30,299
paths so we can go to the internal

498
00:19:30,299 --> 00:19:33,600
registry and if everything passed and we

499
00:19:33,600 --> 00:19:37,140
are golden we can throw it to quarantine

500
00:19:37,140 --> 00:19:40,740
or we can straight up deny things or

501
00:19:40,740 --> 00:19:43,620
emit warnings at the same time not only

502
00:19:43,620 --> 00:19:47,039
putting a lot of Registries but also

503
00:19:47,039 --> 00:19:49,919
making sure that everyone knows about it

504
00:19:49,919 --> 00:19:52,380
that's that's another important thing to

505
00:19:52,380 --> 00:19:55,620
notify people so right now

506
00:19:55,620 --> 00:19:58,380
um simple emails we are sending out to

507
00:19:58,380 --> 00:20:01,640
SMS and here I can see what happened

508
00:20:01,640 --> 00:20:07,500
inside our tecton in summary so

509
00:20:07,500 --> 00:20:10,380
cord we already know why it failed let's

510
00:20:10,380 --> 00:20:12,600
look into Chase tokens

511
00:20:12,600 --> 00:20:15,080
and here here's the signature Jack

512
00:20:15,080 --> 00:20:18,240
reason being of that signature check

513
00:20:18,240 --> 00:20:19,650
is because

514
00:20:19,650 --> 00:20:20,900
[Music]

515
00:20:20,900 --> 00:20:23,940
npm does not enforce you to put

516
00:20:23,940 --> 00:20:25,679
signatures on your packages

517
00:20:25,679 --> 00:20:28,320
in Maven that is mandatory for example

518
00:20:28,320 --> 00:20:30,780
and so if a signature check fails in the

519
00:20:30,780 --> 00:20:32,280
maven system it gets much more

520
00:20:32,280 --> 00:20:34,140
interesting because then something is

521
00:20:34,140 --> 00:20:36,179
really going wrong

522
00:20:36,179 --> 00:20:39,120
um but in npm it's not mandatory and if

523
00:20:39,120 --> 00:20:40,559
it's not there we can't run a signature

524
00:20:40,559 --> 00:20:44,340
check and therefore it shows for us

525
00:20:44,340 --> 00:20:48,600
in terms of e-jest right now we are

526
00:20:48,600 --> 00:20:50,220
putting it into an S3 bucket that is

527
00:20:50,220 --> 00:20:53,520
kind of like our output store and you

528
00:20:53,520 --> 00:20:55,200
can see here we have the two packages

529
00:20:55,200 --> 00:20:57,720
that both got accepted along with their

530
00:20:57,720 --> 00:20:59,940
signature for further consumption if

531
00:20:59,940 --> 00:21:01,980
someone else wants to run signature

532
00:21:01,980 --> 00:21:04,559
checks again they can use that

533
00:21:04,559 --> 00:21:07,080
um but I want to failed packages of

534
00:21:07,080 --> 00:21:08,580
course are not

535
00:21:08,580 --> 00:21:10,799
um are not part of that going in here

536
00:21:10,799 --> 00:21:14,520
because we didn't allow them

537
00:21:14,520 --> 00:21:16,559
um there's a bit more going on

538
00:21:16,559 --> 00:21:18,299
so

539
00:21:18,299 --> 00:21:20,880
in terms of check results

540
00:21:20,880 --> 00:21:22,559
um and provenance

541
00:21:22,559 --> 00:21:25,080
we we are using tactone chains to create

542
00:21:25,080 --> 00:21:27,900
provenance for us so we are signing that

543
00:21:27,900 --> 00:21:30,780
before kmski and I'm putting in a Dyno

544
00:21:30,780 --> 00:21:35,159
DB for all of our provenance

545
00:21:35,159 --> 00:21:37,260
but um the provenance doesn't capture

546
00:21:37,260 --> 00:21:39,780
the actual result of the checks for us

547
00:21:39,780 --> 00:21:41,220
so for example

548
00:21:41,220 --> 00:21:44,520
the scorecard check Jason I get back is

549
00:21:44,520 --> 00:21:46,799
not part of the provenance by attacked

550
00:21:46,799 --> 00:21:49,380
on chains but we still very much care

551
00:21:49,380 --> 00:21:51,780
about those results and we still want to

552
00:21:51,780 --> 00:21:54,500
fetch them back

553
00:21:55,500 --> 00:21:58,679
which is why we've written a small

554
00:21:58,679 --> 00:22:01,520
database client

555
00:22:02,100 --> 00:22:05,580
um it's not noise scale so we have a

556
00:22:05,580 --> 00:22:09,000
document on mongodb running here

557
00:22:09,000 --> 00:22:11,700
and let's go into

558
00:22:11,700 --> 00:22:13,740
is that readable

559
00:22:13,740 --> 00:22:16,200
it's okay okay

560
00:22:16,200 --> 00:22:18,480
um so we have a bunch of information in

561
00:22:18,480 --> 00:22:19,980
here and there's going to be more in the

562
00:22:19,980 --> 00:22:22,740
future but all of that is metadata that

563
00:22:22,740 --> 00:22:24,720
we can use to reference data with each

564
00:22:24,720 --> 00:22:26,580
other to reference what other checks

565
00:22:26,580 --> 00:22:28,039
have been running

566
00:22:28,039 --> 00:22:32,159
and time of ingestion stuff like that to

567
00:22:32,159 --> 00:22:35,820
also trigger re-inchests uh things like

568
00:22:35,820 --> 00:22:36,539
that

569
00:22:36,539 --> 00:22:39,059
but we also have a payload and signature

570
00:22:39,059 --> 00:22:41,460
check is kind of easy right now we have

571
00:22:41,460 --> 00:22:43,620
either it passed or it failed so here we

572
00:22:43,620 --> 00:22:45,780
have our current example react

573
00:22:45,780 --> 00:22:48,960
that one passed and so we have signature

574
00:22:48,960 --> 00:22:51,559
verified through

575
00:22:51,659 --> 00:22:54,600
but we are outside of tecton chains and

576
00:22:54,600 --> 00:22:57,000
so we've taked on chains what it gives

577
00:22:57,000 --> 00:22:59,940
us we can verify our provenance but we

578
00:22:59,940 --> 00:23:01,200
also want to be able to verify our

579
00:23:01,200 --> 00:23:04,140
provenance from our check results which

580
00:23:04,140 --> 00:23:05,960
is why we have written

581
00:23:05,960 --> 00:23:11,039
with dsse envelopes a mechanism to also

582
00:23:11,039 --> 00:23:13,080
verify these documents so that

583
00:23:13,080 --> 00:23:14,400
signatures

584
00:23:14,400 --> 00:23:15,440
um

585
00:23:15,440 --> 00:23:18,900
part of that and as

586
00:23:18,900 --> 00:23:20,760
so anytime you pull back those check

587
00:23:20,760 --> 00:23:22,799
results we can always verify the

588
00:23:22,799 --> 00:23:24,780
signature of everything and can make

589
00:23:24,780 --> 00:23:25,799
sure

590
00:23:25,799 --> 00:23:27,720
that someone else didn't do something

591
00:23:27,720 --> 00:23:30,900
like this or

592
00:23:30,900 --> 00:23:33,679
you know like

593
00:23:34,320 --> 00:23:36,179
um mess with our check results to get

594
00:23:36,179 --> 00:23:38,820
something through so we can always do

595
00:23:38,820 --> 00:23:40,080
that

596
00:23:40,080 --> 00:23:42,320
yeah

597
00:23:42,780 --> 00:23:45,240
that is pretty much it for a technical

598
00:23:45,240 --> 00:23:47,400
demo there's a bit more to it but um

599
00:23:47,400 --> 00:23:49,140
that's all we have time for now and I

600
00:23:49,140 --> 00:23:50,940
think it's also a good time to have

601
00:23:50,940 --> 00:23:52,380
questions

602
00:23:52,380 --> 00:23:55,159
if there are any

603
00:24:05,580 --> 00:24:08,418
chat with a version

604
00:24:10,750 --> 00:24:11,340
[Music]

605
00:24:11,340 --> 00:24:12,780
um

606
00:24:12,780 --> 00:24:14,840
it does here at the pulse

607
00:24:14,840 --> 00:24:19,879
the UI where in Techron

608
00:24:20,940 --> 00:24:22,740
sorry the

609
00:24:22,740 --> 00:24:25,320
you had a screen drilled down

610
00:24:25,320 --> 00:24:29,240
you had the package information

611
00:24:31,620 --> 00:24:34,860
I think you just like two minutes ago

612
00:24:34,860 --> 00:24:36,600
yeah

613
00:24:36,600 --> 00:24:37,860
okay

614
00:24:37,860 --> 00:24:39,900
um your check didn't look like it had a

615
00:24:39,900 --> 00:24:40,740
version

616
00:24:40,740 --> 00:24:42,840
like you had an npm check for a

617
00:24:42,840 --> 00:24:44,940
signature yeah

618
00:24:44,940 --> 00:24:47,460
and that chat are you versioning your

619
00:24:47,460 --> 00:24:49,260
checks or no

620
00:24:49,260 --> 00:24:52,500
um yes kind of because the check itself

621
00:24:52,500 --> 00:24:55,860
is versioned because it's Unique in in

622
00:24:55,860 --> 00:24:59,159
the context of tecton chains as well

623
00:24:59,159 --> 00:25:01,440
um we have the taskran ID in our context

624
00:25:01,440 --> 00:25:04,500
with the database to make it unique and

625
00:25:04,500 --> 00:25:07,620
in terms of the versioning of the

626
00:25:07,620 --> 00:25:11,539
database we also have with that context

627
00:25:11,539 --> 00:25:14,700
with our versioning of the actual code

628
00:25:14,700 --> 00:25:17,760
we are running inside those checks those

629
00:25:17,760 --> 00:25:20,000
are at the end of the day

630
00:25:20,000 --> 00:25:23,159
Docker images that we can version

631
00:25:23,159 --> 00:25:25,260
accordingly and

632
00:25:25,260 --> 00:25:27,179
and that information is also part of

633
00:25:27,179 --> 00:25:28,799
tactone chain so someone could go back

634
00:25:28,799 --> 00:25:31,500
and check at what version was this check

635
00:25:31,500 --> 00:25:33,299
running

636
00:25:33,299 --> 00:25:36,059
yeah no I mean you're you're the example

637
00:25:36,059 --> 00:25:37,559
you had was you someone went in and

638
00:25:37,559 --> 00:25:40,620
edited it it made it super good uh but

639
00:25:40,620 --> 00:25:43,260
the the check itself

640
00:25:43,260 --> 00:25:44,640
it didn't look like you had enough

641
00:25:44,640 --> 00:25:46,020
information on the check you had a time

642
00:25:46,020 --> 00:25:47,820
stamp and you had the name of the track

643
00:25:47,820 --> 00:25:49,380
but you didn't have the version of it so

644
00:25:49,380 --> 00:25:51,779
that could itself yeah yeah you can you

645
00:25:51,779 --> 00:25:54,679
can put it on that yeah

646
00:25:56,940 --> 00:25:58,320
any other questions

647
00:25:58,320 --> 00:26:00,059
nope

648
00:26:00,059 --> 00:26:02,480
good

649
00:26:03,779 --> 00:26:05,940
well thank you thank you for listening

650
00:26:05,940 --> 00:26:07,860
cheers thank you

651
00:26:07,860 --> 00:26:12,740
[Applause]

