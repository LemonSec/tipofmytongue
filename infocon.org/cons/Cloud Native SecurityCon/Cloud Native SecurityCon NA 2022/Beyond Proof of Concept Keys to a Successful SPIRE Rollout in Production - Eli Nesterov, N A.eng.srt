1
00:00:00,299 --> 00:00:04,259
so thanks thanks everyone to come in for

2
00:00:04,259 --> 00:00:07,740
a session and for everyone who dial in

3
00:00:07,740 --> 00:00:11,040
in Via video we're going to talk today

4
00:00:11,040 --> 00:00:12,240
about

5
00:00:12,240 --> 00:00:16,020
spiffy and Spire I hope some of you

6
00:00:16,020 --> 00:00:19,140
heard about it if not I'll do a quick

7
00:00:19,140 --> 00:00:22,260
recap but the focus for this

8
00:00:22,260 --> 00:00:26,699
presentation is more around how to get

9
00:00:26,699 --> 00:00:29,160
Inspire from proof of concept to

10
00:00:29,160 --> 00:00:30,760
production expand

11
00:00:30,760 --> 00:00:32,340
[Music]

12
00:00:32,340 --> 00:00:34,320
around the last five years since like

13
00:00:34,320 --> 00:00:38,760
2017 2018 kind of barking on tree of uh

14
00:00:38,760 --> 00:00:42,300
zero trust ideas and then following

15
00:00:42,300 --> 00:00:44,040
spiffy Inspire project from the early

16
00:00:44,040 --> 00:00:45,059
days

17
00:00:45,059 --> 00:00:48,899
been building different systems and uh

18
00:00:48,899 --> 00:00:51,320
products around their trust

19
00:00:51,320 --> 00:00:54,239
using spiff Inspire underneath I've

20
00:00:54,239 --> 00:00:56,100
spent a couple of years at buy dance

21
00:00:56,100 --> 00:00:59,399
helping to rebuild Health indication and

22
00:00:59,399 --> 00:01:02,280
authorization system using inspire

23
00:01:02,280 --> 00:01:05,099
and this is the world's largest

24
00:01:05,099 --> 00:01:09,540
deployment today uh running and scaling

25
00:01:09,540 --> 00:01:12,619
it Beyond one million nodes

26
00:01:12,619 --> 00:01:15,180
since then I kind of started to think

27
00:01:15,180 --> 00:01:18,140
that's uh it's very powerful technology

28
00:01:18,140 --> 00:01:21,060
but it it is kind of you can think about

29
00:01:21,060 --> 00:01:23,520
set of building blocks you need to turn

30
00:01:23,520 --> 00:01:25,439
it into a product so I started thinking

31
00:01:25,439 --> 00:01:27,659
how to make this technology more

32
00:01:27,659 --> 00:01:31,259
accessible to uh people and in 2020 we

33
00:01:31,259 --> 00:01:34,100
brought with bunch of other smart Forks

34
00:01:34,100 --> 00:01:39,299
uh book holder solving the bottom turtle

35
00:01:39,299 --> 00:01:42,900
will have a species fire Booth this year

36
00:01:42,900 --> 00:01:45,960
downstairs uh it's a truly open source

37
00:01:45,960 --> 00:01:48,840
project Community Driven and thanks for

38
00:01:48,840 --> 00:01:53,460
cncf to sponsor innate uh will have

39
00:01:53,460 --> 00:01:56,880
a hard copies of the book so stop by and

40
00:01:56,880 --> 00:02:00,439
I have three of them obvious myself here

41
00:02:00,439 --> 00:02:03,720
if you have any questions come and chase

42
00:02:03,720 --> 00:02:07,079
me I'll give you a book and you can find

43
00:02:07,079 --> 00:02:10,258
probably five or six other co-opters for

44
00:02:10,258 --> 00:02:13,560
this book during cncf and get signatures

45
00:02:13,560 --> 00:02:17,819
if you want so uh what else people I I

46
00:02:17,819 --> 00:02:20,700
hope that everyone who came here is like

47
00:02:20,700 --> 00:02:22,680
heard about it or know but here's a

48
00:02:22,680 --> 00:02:26,220
quick recap it's basically a set of

49
00:02:26,220 --> 00:02:29,400
standards there are two projects beefy

50
00:02:29,400 --> 00:02:32,220
and aspires beef is basically a bunch of

51
00:02:32,220 --> 00:02:35,340
markdowns that describe what is what is

52
00:02:35,340 --> 00:02:37,500
a spiffy identity what a specifically

53
00:02:37,500 --> 00:02:39,599
verifiable identity document you can

54
00:02:39,599 --> 00:02:42,900
think about specific ideas basically URI

55
00:02:42,900 --> 00:02:46,200
string that's baked into identity that

56
00:02:46,200 --> 00:02:49,800
comes with the two formats one is x509

57
00:02:49,800 --> 00:02:51,959
and another one jode

58
00:02:51,959 --> 00:02:54,660
and it also describe things like what is

59
00:02:54,660 --> 00:02:56,819
the spiffy trust bundle and how do you

60
00:02:56,819 --> 00:02:59,780
get it and the biggest part of that is

61
00:02:59,780 --> 00:03:02,580
workload API workload API is just

62
00:03:02,580 --> 00:03:05,660
basically set off

63
00:03:06,200 --> 00:03:10,319
apis obviously how you can how workload

64
00:03:10,319 --> 00:03:12,560
or application can get an identity

65
00:03:12,560 --> 00:03:16,340
refresh identity verify that identity

66
00:03:16,340 --> 00:03:22,500
and yeah so this is just specification

67
00:03:22,500 --> 00:03:23,879
quick

68
00:03:23,879 --> 00:03:25,680
what is the specific ID and how it look

69
00:03:25,680 --> 00:03:27,659
like as I mentioned it's just a URI

70
00:03:27,659 --> 00:03:29,700
strain it has

71
00:03:29,700 --> 00:03:33,060
URI schema it has a trust domain part

72
00:03:33,060 --> 00:03:35,580
and it has a path it's like pretty

73
00:03:35,580 --> 00:03:39,060
similar to URL obviously but it's on

74
00:03:39,060 --> 00:03:42,180
allowed path doesn't come with like

75
00:03:42,180 --> 00:03:45,000
other things you can put anything into

76
00:03:45,000 --> 00:03:46,099
the

77
00:03:46,099 --> 00:03:51,180
uh path so it does need to be just one

78
00:03:51,180 --> 00:03:52,860
word as the name of your microservice

79
00:03:52,860 --> 00:03:55,019
you can build a different schemas for

80
00:03:55,019 --> 00:03:57,299
example that would incorporate

81
00:03:57,299 --> 00:04:00,299
information like your which region this

82
00:04:00,299 --> 00:04:02,519
workload is running or in which data

83
00:04:02,519 --> 00:04:05,459
center Etc so it could be flexible but

84
00:04:05,459 --> 00:04:07,440
there are certain limitations so because

85
00:04:07,440 --> 00:04:10,200
it's going into jawed for example right

86
00:04:10,200 --> 00:04:12,420
so it will have a certain limits on how

87
00:04:12,420 --> 00:04:13,980
much information you can put in there

88
00:04:13,980 --> 00:04:17,899
and the same for x509

89
00:04:18,060 --> 00:04:21,720
so uh what's Spire as I mentioned spiffy

90
00:04:21,720 --> 00:04:24,600
is just a standard and Aspire is a

91
00:04:24,600 --> 00:04:28,020
production ready implementation of the

92
00:04:28,020 --> 00:04:30,259
standard it is an open source project

93
00:04:30,259 --> 00:04:33,360
contains two main parts one is a server

94
00:04:33,360 --> 00:04:36,180
and another one is an agent so let's

95
00:04:36,180 --> 00:04:40,520
implement the whole specification

96
00:04:40,520 --> 00:04:43,440
and it contains a bunch of different

97
00:04:43,440 --> 00:04:46,100
plugins for

98
00:04:46,100 --> 00:04:49,919
attestation between agent to Aspire

99
00:04:49,919 --> 00:04:52,220
server and between

100
00:04:52,220 --> 00:04:55,919
workload to agent so basically how it

101
00:04:55,919 --> 00:05:00,180
works you put an agent or nodes then you

102
00:05:00,180 --> 00:05:02,699
agents connect to a server there is a

103
00:05:02,699 --> 00:05:05,340
certain attestation mechanism between

104
00:05:05,340 --> 00:05:07,740
age and Tennis server for example if

105
00:05:07,740 --> 00:05:10,560
you're running in a public Cloud you can

106
00:05:10,560 --> 00:05:12,900
use an identity documents for

107
00:05:12,900 --> 00:05:18,240
verification or firm agents and for that

108
00:05:18,240 --> 00:05:21,120
agent perform audio station for workload

109
00:05:21,120 --> 00:05:24,600
so on workload connect over workload API

110
00:05:24,600 --> 00:05:26,880
to an agent to get an identity basically

111
00:05:26,880 --> 00:05:29,580
it's process starts goes to workload API

112
00:05:29,580 --> 00:05:31,199
and asked like who am I

113
00:05:31,199 --> 00:05:34,380
and there is another station kick in and

114
00:05:34,380 --> 00:05:36,960
provide workload with identity that it

115
00:05:36,960 --> 00:05:40,320
can use to go anywhere because it's two

116
00:05:40,320 --> 00:05:42,000
different formats you can use it to

117
00:05:42,000 --> 00:05:44,880
build an mtls for example where you can

118
00:05:44,880 --> 00:05:47,580
use Jaws for authentication and then

119
00:05:47,580 --> 00:05:49,740
hook it up with authorization systems

120
00:05:49,740 --> 00:05:53,699
that you build on top of it so

121
00:05:53,699 --> 00:05:56,699
typically when you kick off this like I

122
00:05:56,699 --> 00:06:00,000
want to use Spire project it goes into

123
00:06:00,000 --> 00:06:02,460
several stages I kind of Define these

124
00:06:02,460 --> 00:06:04,020
five stages but it could be three

125
00:06:04,020 --> 00:06:06,539
because you squash like first three

126
00:06:06,539 --> 00:06:08,880
stages research visibility and proof of

127
00:06:08,880 --> 00:06:10,440
concept together

128
00:06:10,440 --> 00:06:14,639
uh but what it do during this first

129
00:06:14,639 --> 00:06:17,160
three or one stage is basically trying

130
00:06:17,160 --> 00:06:19,199
to answer on different questions like

131
00:06:19,199 --> 00:06:21,900
what are these do I really need it I

132
00:06:21,900 --> 00:06:23,580
have a bunch of problems in my

133
00:06:23,580 --> 00:06:26,819
infrastructure and why I want to solve

134
00:06:26,819 --> 00:06:29,400
them like some of them could be we need

135
00:06:29,400 --> 00:06:32,580
mtls where we need better

136
00:06:32,580 --> 00:06:34,860
kind of universal identity for

137
00:06:34,860 --> 00:06:36,419
everything so we can use it with

138
00:06:36,419 --> 00:06:39,360
authorization together

139
00:06:39,360 --> 00:06:40,400
um

140
00:06:40,400 --> 00:06:46,259
and the goal there is to basically

141
00:06:46,259 --> 00:06:49,800
sat figure out set of use cases and

142
00:06:49,800 --> 00:06:52,620
priorities for your

143
00:06:52,620 --> 00:06:56,639
spiral out is it mtls is important or

144
00:06:56,639 --> 00:07:00,240
you want to use PP identity for

145
00:07:00,240 --> 00:07:05,039
Federation and to get some credentials

146
00:07:05,039 --> 00:07:07,139
as you store or secrets that you store

147
00:07:07,139 --> 00:07:09,419
involved or you can use it for

148
00:07:09,419 --> 00:07:11,400
Federation between a different specific

149
00:07:11,400 --> 00:07:14,220
identity aware systems where you can

150
00:07:14,220 --> 00:07:17,340
completely replace your static Secrets

151
00:07:17,340 --> 00:07:20,160
like an API key is on or

152
00:07:20,160 --> 00:07:24,660
uh AWS gcp identity is doing this PVA

153
00:07:24,660 --> 00:07:27,900
identity exchange to your cloud service

154
00:07:27,900 --> 00:07:30,060
provider exchange or you can do this

155
00:07:30,060 --> 00:07:34,139
like within any third party as well

156
00:07:34,139 --> 00:07:37,139
um yeah so this is just to help you get

157
00:07:37,139 --> 00:07:38,960
started there's like lots of information

158
00:07:38,960 --> 00:07:42,479
you can find about use cases and how you

159
00:07:42,479 --> 00:07:47,479
can use spiffy on website you can go to

160
00:07:47,479 --> 00:07:51,780
and ask questions in spiffy slab and I

161
00:07:51,780 --> 00:07:54,300
also build in collection of kind of very

162
00:07:54,300 --> 00:07:57,000
opinionated about different use cases

163
00:07:57,000 --> 00:08:01,400
uh for spiffy Inspire as well

164
00:08:02,819 --> 00:08:04,139
so

165
00:08:04,139 --> 00:08:06,360
next stage is like when you define your

166
00:08:06,360 --> 00:08:10,560
priorities and you want to get an

167
00:08:10,560 --> 00:08:11,880
internal buy-in

168
00:08:11,880 --> 00:08:14,220
from different company from different

169
00:08:14,220 --> 00:08:16,319
parts of your companies like you need to

170
00:08:16,319 --> 00:08:20,520
talk to security SRE Etc and this is

171
00:08:20,520 --> 00:08:22,319
where you normally build some proof of

172
00:08:22,319 --> 00:08:24,360
concept to show like how it will be

173
00:08:24,360 --> 00:08:25,319
looking

174
00:08:25,319 --> 00:08:28,560
when we get closer in production and

175
00:08:28,560 --> 00:08:31,379
what we see lots of successful stories

176
00:08:31,379 --> 00:08:33,140
actually start with the kubernetes

177
00:08:33,140 --> 00:08:36,320
rather than this kind of long tail of

178
00:08:36,320 --> 00:08:40,440
Legacy or serverless it's not like I

179
00:08:40,440 --> 00:08:43,440
call Legacy it's not like a True Legacy

180
00:08:43,440 --> 00:08:45,360
it's more like applications that's

181
00:08:45,360 --> 00:08:49,080
running on dedicated notes it could be

182
00:08:49,080 --> 00:08:51,720
really modern applications but it's a

183
00:08:51,720 --> 00:08:54,540
different mechanism how you can

184
00:08:54,540 --> 00:08:58,019
do things like deployment registration

185
00:08:58,019 --> 00:09:00,899
and attestation of your agents and

186
00:09:00,899 --> 00:09:02,839
workloads so

187
00:09:02,839 --> 00:09:06,420
kubernetes is like really easy way to

188
00:09:06,420 --> 00:09:09,740
start and a really easy way to

189
00:09:09,740 --> 00:09:12,779
prove the different use cases and get

190
00:09:12,779 --> 00:09:14,820
internal buy-in

191
00:09:14,820 --> 00:09:16,920
but

192
00:09:16,920 --> 00:09:19,740
when you get to this stage you probably

193
00:09:19,740 --> 00:09:23,399
have lots of questions right we

194
00:09:23,399 --> 00:09:28,200
it seems right thing to do we love this

195
00:09:28,200 --> 00:09:30,180
use cases we write we love technology

196
00:09:30,180 --> 00:09:33,540
how do we run it in production now

197
00:09:33,540 --> 00:09:36,420
and running things in production means

198
00:09:36,420 --> 00:09:38,600
different things if you go to

199
00:09:38,600 --> 00:09:42,420
developers where you go to SRE or go to

200
00:09:42,420 --> 00:09:44,820
devops or go to security you'll hear

201
00:09:44,820 --> 00:09:47,519
different answers so if you go to SRE

202
00:09:47,519 --> 00:09:49,080
you probably think that they will ask

203
00:09:49,080 --> 00:09:50,760
because it's scalable

204
00:09:50,760 --> 00:09:53,760
like how do you

205
00:09:53,760 --> 00:09:57,180
uh prove that there is no downtime or

206
00:09:57,180 --> 00:10:01,260
what do you like do you even have 24 by

207
00:10:01,260 --> 00:10:05,120
7 rotation and on call because this is

208
00:10:05,120 --> 00:10:07,560
authentication system it will be kind of

209
00:10:07,560 --> 00:10:11,580
foundational for the rest of our

210
00:10:11,580 --> 00:10:13,260
applications to talk about and

211
00:10:13,260 --> 00:10:16,320
authenticate to each other so uh there

212
00:10:16,320 --> 00:10:18,800
are lots of questions but

213
00:10:18,800 --> 00:10:21,540
we'll go through some stages and my my

214
00:10:21,540 --> 00:10:24,120
goal is to not transfer to all questions

215
00:10:24,120 --> 00:10:27,240
by ghee but give you some mental

216
00:10:27,240 --> 00:10:30,060
framework how you can think about what I

217
00:10:30,060 --> 00:10:32,160
need to do or what I need to think about

218
00:10:32,160 --> 00:10:33,600
before

219
00:10:33,600 --> 00:10:35,580
putting this into production the first

220
00:10:35,580 --> 00:10:36,600
thing

221
00:10:36,600 --> 00:10:40,440
you start with an understanding words

222
00:10:40,440 --> 00:10:44,700
your trust boundaries and how they map

223
00:10:44,700 --> 00:10:47,700
into Spirit trust domains there's a

224
00:10:47,700 --> 00:10:49,800
different ways to think about it you can

225
00:10:49,800 --> 00:10:53,660
have like traditional

226
00:10:53,820 --> 00:10:56,220
per environment trust boundaries and

227
00:10:56,220 --> 00:10:58,620
Trust specific trust domain so you have

228
00:10:58,620 --> 00:11:01,200
production environment and that it will

229
00:11:01,200 --> 00:11:02,880
be your

230
00:11:02,880 --> 00:11:06,540
one spiffy trust domain and your staging

231
00:11:06,540 --> 00:11:08,160
will be different so they're kind of

232
00:11:08,160 --> 00:11:10,019
independent systems

233
00:11:10,019 --> 00:11:12,720
then the next thing you want to do is to

234
00:11:12,720 --> 00:11:15,959
think how this mapping to your pki so if

235
00:11:15,959 --> 00:11:19,860
you build in two independent systems one

236
00:11:19,860 --> 00:11:21,839
is for production one is for staging one

237
00:11:21,839 --> 00:11:24,180
is for development you probably want to

238
00:11:24,180 --> 00:11:27,180
have a different pki

239
00:11:27,180 --> 00:11:29,459
right root for that and then you need to

240
00:11:29,459 --> 00:11:31,440
think where like what is the shape of

241
00:11:31,440 --> 00:11:34,200
your pki where do you story key what's

242
00:11:34,200 --> 00:11:36,180
the TTL for all the cities how do you

243
00:11:36,180 --> 00:11:39,540
rotate them and how all this connected

244
00:11:39,540 --> 00:11:42,540
with Aspire servers

245
00:11:42,540 --> 00:11:44,399
Federation

246
00:11:44,399 --> 00:11:46,440
is another interesting thing because you

247
00:11:46,440 --> 00:11:48,000
can Federate

248
00:11:48,000 --> 00:11:51,120
two independent FIFA systems

249
00:11:51,120 --> 00:11:54,300
to each other and for example you can

250
00:11:54,300 --> 00:11:57,060
follow pattern like which kubernetes use

251
00:11:57,060 --> 00:12:00,140
where you have one

252
00:12:00,140 --> 00:12:03,680
pki for kubernetes cluster this is your

253
00:12:03,680 --> 00:12:06,540
blast radius this is your trust domain

254
00:12:06,540 --> 00:12:08,579
this is your SPF domain but if you have

255
00:12:08,579 --> 00:12:10,140
multiple

256
00:12:10,140 --> 00:12:13,620
power clusters and kubernetes cluster

257
00:12:13,620 --> 00:12:16,500
than you have too many entities to

258
00:12:16,500 --> 00:12:18,420
manage right in order for them to talk

259
00:12:18,420 --> 00:12:20,760
to each other like application deploy it

260
00:12:20,760 --> 00:12:22,800
on 10 different clusters you need to

261
00:12:22,800 --> 00:12:25,079
Federate specific identities between all

262
00:12:25,079 --> 00:12:28,820
of them and that would

263
00:12:28,820 --> 00:12:31,680
basically affect your bundle size right

264
00:12:31,680 --> 00:12:33,899
so you you will need to have a lot of

265
00:12:33,899 --> 00:12:36,839
root keys and that bundle the the size

266
00:12:36,839 --> 00:12:39,260
is growing if you use Jaws

267
00:12:39,260 --> 00:12:42,600
uh the number of keysers also will be

268
00:12:42,600 --> 00:12:45,240
growing so it's all all kind of can

269
00:12:45,240 --> 00:12:47,100
affect your performance and I think when

270
00:12:47,100 --> 00:12:49,380
you go in like Beyond

271
00:12:49,380 --> 00:12:52,680
tan entities maybe you should start

272
00:12:52,680 --> 00:12:54,360
thinking about a different shaper and

273
00:12:54,360 --> 00:12:57,420
different architecture for spire

274
00:12:57,420 --> 00:12:58,740
um

275
00:12:58,740 --> 00:13:00,300
trust model

276
00:13:00,300 --> 00:13:03,980
ulcer goes pretty close with

277
00:13:03,980 --> 00:13:07,800
investment into how many things you need

278
00:13:07,800 --> 00:13:10,320
to build on your own in order to run

279
00:13:10,320 --> 00:13:12,899
Spire this is kind of

280
00:13:12,899 --> 00:13:17,160
I'm trying to give an idea if you trust

281
00:13:17,160 --> 00:13:20,100
something this is

282
00:13:20,100 --> 00:13:22,620
how much less or more you need to build

283
00:13:22,620 --> 00:13:25,139
so for example if you're talking if you

284
00:13:25,139 --> 00:13:26,760
want to run

285
00:13:26,760 --> 00:13:30,660
Inspire with their kubernetes and your

286
00:13:30,660 --> 00:13:33,540
trust kubernetes control plane so you

287
00:13:33,540 --> 00:13:35,399
can use

288
00:13:35,399 --> 00:13:38,579
kubernetes Primitives like a demon's

289
00:13:38,579 --> 00:13:41,880
head for deployment of spiral agent you

290
00:13:41,880 --> 00:13:44,339
can use power controller manager for

291
00:13:44,339 --> 00:13:48,420
their registration of fire of your

292
00:13:48,420 --> 00:13:51,000
workloads and you can use a kubernetes

293
00:13:51,000 --> 00:13:53,820
pizza Friday station if you do not trust

294
00:13:53,820 --> 00:13:55,860
kubernetes control plane you'll need to

295
00:13:55,860 --> 00:13:58,320
build all this right and it's all depend

296
00:13:58,320 --> 00:14:00,600
on there

297
00:14:00,600 --> 00:14:03,360
uh how you deploy applications right

298
00:14:03,360 --> 00:14:04,920
whether it's like one cluster or

299
00:14:04,920 --> 00:14:07,200
multiple of them there are a couple more

300
00:14:07,200 --> 00:14:08,760
talks

301
00:14:08,760 --> 00:14:13,860
uh by Uber Tyler and Tyler how you can

302
00:14:13,860 --> 00:14:15,620
think about their

303
00:14:15,620 --> 00:14:19,040
scheduler integration with spire

304
00:14:19,040 --> 00:14:21,959
and as an example if you use a you

305
00:14:21,959 --> 00:14:23,820
deploy and cloud service provider like

306
00:14:23,820 --> 00:14:26,180
AWS gcp Azure

307
00:14:26,180 --> 00:14:30,300
and you do not trust it so this is

308
00:14:30,300 --> 00:14:32,519
probably pretty hard in terms of like

309
00:14:32,519 --> 00:14:35,519
how do you do attestation in this case

310
00:14:35,519 --> 00:14:37,680
if you do not trust your cloud service

311
00:14:37,680 --> 00:14:38,959
provider

312
00:14:38,959 --> 00:14:42,240
probably you can rely on something like

313
00:14:42,240 --> 00:14:46,620
a vtp for not idea station but you need

314
00:14:46,620 --> 00:14:48,480
to do research I I don't actually know

315
00:14:48,480 --> 00:14:51,180
if that's possible completely to do but

316
00:14:51,180 --> 00:14:53,940
that could be like one of the directions

317
00:14:53,940 --> 00:14:57,320
uh another thing you

318
00:14:57,320 --> 00:15:00,959
want to focus on is like what are the

319
00:15:00,959 --> 00:15:04,320
what will be the Spire architecture that

320
00:15:04,320 --> 00:15:07,279
you use for the deployment

321
00:15:08,899 --> 00:15:11,459
it's very big topic

322
00:15:11,459 --> 00:15:14,820
Ellen gave a pretty good overview I

323
00:15:14,820 --> 00:15:17,399
think it's like a 30 hour 40 minutes

324
00:15:17,399 --> 00:15:21,180
so here's the link I'll put a slice and

325
00:15:21,180 --> 00:15:22,980
so you can click and find it so don't

326
00:15:22,980 --> 00:15:25,079
worry about that but yeah basically

327
00:15:25,079 --> 00:15:26,459
there are a few models that Inspire

328
00:15:26,459 --> 00:15:28,500
support one is a single

329
00:15:28,500 --> 00:15:32,279
uh Spire server or a cluster obviously

330
00:15:32,279 --> 00:15:34,079
for a high availability you want to have

331
00:15:34,079 --> 00:15:38,339
a multiple version of spire running

332
00:15:38,339 --> 00:15:41,120
to make sure that there is no downtime

333
00:15:41,120 --> 00:15:44,699
NASDAQ model is pretty good in in cases

334
00:15:44,699 --> 00:15:46,380
when you

335
00:15:46,380 --> 00:15:49,920
want to run spire and use different

336
00:15:49,920 --> 00:15:52,380
attestation primitive let's say for

337
00:15:52,380 --> 00:15:54,720
different clouds and for your on-prem

338
00:15:54,720 --> 00:15:57,139
deployment

339
00:16:00,180 --> 00:16:03,180
uh you can you can have run multiple of

340
00:16:03,180 --> 00:16:04,260
them

341
00:16:04,260 --> 00:16:05,880
yeah

342
00:16:05,880 --> 00:16:08,519
and Federated is another model so you

343
00:16:08,519 --> 00:16:12,060
you might run one's prior deployment in

344
00:16:12,060 --> 00:16:13,980
your on-prem environment and another one

345
00:16:13,980 --> 00:16:15,720
in the cloud when you're migrating in

346
00:16:15,720 --> 00:16:18,180
there you can Federate these two systems

347
00:16:18,180 --> 00:16:20,600
whether mutually so your

348
00:16:20,600 --> 00:16:22,800
workloads running

349
00:16:22,800 --> 00:16:25,740
in public Cloud they can talk to your

350
00:16:25,740 --> 00:16:27,860
workloads on-prem

351
00:16:27,860 --> 00:16:30,560
or you can do

352
00:16:30,560 --> 00:16:33,600
directional right if your on-prem

353
00:16:33,600 --> 00:16:36,540
workloads would be able to talk to Cloud

354
00:16:36,540 --> 00:16:39,000
but not other way

355
00:16:39,000 --> 00:16:40,320
um again so there are more information

356
00:16:40,320 --> 00:16:43,079
on this link it's a great video so um

357
00:16:43,079 --> 00:16:46,740
the trade-offs that you'll be doing

358
00:16:46,740 --> 00:16:48,500
or like I want you to think about

359
00:16:48,500 --> 00:16:50,759
different trade-offs when you're

360
00:16:50,759 --> 00:16:52,759
thinking about architecture and how to

361
00:16:52,759 --> 00:16:56,399
deploy Aspire in production uh usually

362
00:16:56,399 --> 00:16:59,579
when you're talking about security

363
00:16:59,579 --> 00:17:02,160
and availability this kind of two

364
00:17:02,160 --> 00:17:03,779
trade-offs that's coming in

365
00:17:03,779 --> 00:17:07,020
manageabilities another one and a cost

366
00:17:07,020 --> 00:17:10,140
factor is another thing that's unique to

367
00:17:10,140 --> 00:17:12,179
think about

368
00:17:12,179 --> 00:17:16,140
um the good example for this could be we

369
00:17:16,140 --> 00:17:18,240
have 10 kubernetes clusters in

370
00:17:18,240 --> 00:17:20,839
production right

371
00:17:20,839 --> 00:17:25,980
we want to we run each cluster in

372
00:17:25,980 --> 00:17:28,079
different availability zones

373
00:17:28,079 --> 00:17:30,059
so to

374
00:17:30,059 --> 00:17:33,660
build and to house fire in highly

375
00:17:33,660 --> 00:17:36,600
available mode you want to run one Spire

376
00:17:36,600 --> 00:17:39,360
server at least per availability Zone

377
00:17:39,360 --> 00:17:42,360
so you ended up with at least three now

378
00:17:42,360 --> 00:17:44,940
multiply it by 10 clusters you'll get to

379
00:17:44,940 --> 00:17:49,020
like 30 instances at least and then

380
00:17:49,020 --> 00:17:51,179
that's for availability then you think

381
00:17:51,179 --> 00:17:55,020
about security I probably don't want my

382
00:17:55,020 --> 00:17:57,660
production workloads like an application

383
00:17:57,660 --> 00:17:59,820
running on the same node as a Spire

384
00:17:59,820 --> 00:18:02,880
server because if that workloads get

385
00:18:02,880 --> 00:18:06,360
compromised potentially that would be a

386
00:18:06,360 --> 00:18:08,700
way for an attacker to get into the

387
00:18:08,700 --> 00:18:10,919
Aspire server so we want to run them on

388
00:18:10,919 --> 00:18:13,380
dedicated node right and now you're

389
00:18:13,380 --> 00:18:17,220
talking about the cost right because now

390
00:18:17,220 --> 00:18:21,059
you have basically 13 nodes that only

391
00:18:21,059 --> 00:18:23,220
run an Inspire server you can't you

392
00:18:23,220 --> 00:18:26,340
can't run anything else in there at that

393
00:18:26,340 --> 00:18:28,380
that could be like pretty costly in this

394
00:18:28,380 --> 00:18:30,059
like if you find yourself in this

395
00:18:30,059 --> 00:18:32,220
situation probably you want to rethink

396
00:18:32,220 --> 00:18:35,600
your architecture and do not transpire

397
00:18:35,600 --> 00:18:38,880
inside the kubernetes Clusters and run

398
00:18:38,880 --> 00:18:42,120
dedicated clusters of aspire server and

399
00:18:42,120 --> 00:18:44,160
in this case if you talk about let's say

400
00:18:44,160 --> 00:18:46,980
east coast and the West Coast have a two

401
00:18:46,980 --> 00:18:50,340
clusters with n plus two availability

402
00:18:50,340 --> 00:18:52,440
you'll have a three service in each

403
00:18:52,440 --> 00:18:55,860
region and that would be six nodes

404
00:18:55,860 --> 00:18:59,280
compared to story so there's always kind

405
00:18:59,280 --> 00:19:02,660
of balance between things

406
00:19:03,660 --> 00:19:05,880
data store and when it's come to

407
00:19:05,880 --> 00:19:08,340
production is another interesting

408
00:19:08,340 --> 00:19:10,679
another interesting piece and it's kind

409
00:19:10,679 --> 00:19:12,559
of when we wrote a book about all this

410
00:19:12,559 --> 00:19:15,919
Turtles all the way all the way down

411
00:19:15,919 --> 00:19:20,160
basically Spire is your systems as

412
00:19:20,160 --> 00:19:22,140
provide identities to everything in your

413
00:19:22,140 --> 00:19:25,020
infrastructure but it needs a database

414
00:19:25,020 --> 00:19:27,600
so how do you authenticate a database so

415
00:19:27,600 --> 00:19:29,700
if you kind of getting into this

416
00:19:29,700 --> 00:19:32,720
secure self bootstrap mode

417
00:19:32,720 --> 00:19:35,400
one of the things that we've been doing

418
00:19:35,400 --> 00:19:37,559
is like you probably noticed there is

419
00:19:37,559 --> 00:19:41,520
like a meta meta pki because we've been

420
00:19:41,520 --> 00:19:44,280
building at by dance everything

421
00:19:44,280 --> 00:19:47,880
internally we had this kind of smaller

422
00:19:47,880 --> 00:19:50,640
charcoal smaller infrastructure that's

423
00:19:50,640 --> 00:19:54,000
been running and we used it for

424
00:19:54,000 --> 00:19:56,400
authentication between Inspire server

425
00:19:56,400 --> 00:19:58,620
and database

426
00:19:58,620 --> 00:20:01,500
they're the biggest challenges are is

427
00:20:01,500 --> 00:20:03,960
like if you use it if it's come to a

428
00:20:03,960 --> 00:20:07,140
database like a postgres or MySQL you

429
00:20:07,140 --> 00:20:09,059
normally people use like username and

430
00:20:09,059 --> 00:20:11,940
password how to irritate them right uh

431
00:20:11,940 --> 00:20:14,280
rotation Inspire server wall World

432
00:20:14,280 --> 00:20:17,400
requires server restart now you're

433
00:20:17,400 --> 00:20:19,380
talking about availability

434
00:20:19,380 --> 00:20:23,940
and then database is usually bottleneck

435
00:20:23,940 --> 00:20:25,980
if you have many many nodes and

436
00:20:25,980 --> 00:20:27,660
workloads like if you're talking about

437
00:20:27,660 --> 00:20:33,780
more than 10th of thousand of them

438
00:20:33,780 --> 00:20:37,740
my bottle bottom line would be if you

439
00:20:37,740 --> 00:20:39,360
run in a cloud service provider with

440
00:20:39,360 --> 00:20:42,299
it's better to use their Primitives for

441
00:20:42,299 --> 00:20:45,419
database authentication and use manage

442
00:20:45,419 --> 00:20:49,140
database if you run in it on Prem and

443
00:20:49,140 --> 00:20:50,820
you build in the database it's a little

444
00:20:50,820 --> 00:20:52,740
bit more challenging that this is where

445
00:20:52,740 --> 00:20:56,100
you need like a metapki I think it was a

446
00:20:56,100 --> 00:20:59,520
great talk by Matthew from

447
00:20:59,520 --> 00:21:03,720
Square about how they build and scale a

448
00:21:03,720 --> 00:21:06,539
database on-prem for their with much

449
00:21:06,539 --> 00:21:09,720
more details than I can package into

450
00:21:09,720 --> 00:21:12,020
25 minutes

451
00:21:12,020 --> 00:21:14,580
performance probably the question you

452
00:21:14,580 --> 00:21:17,820
will get often from SRE develops

453
00:21:17,820 --> 00:21:19,559
platform teams

454
00:21:19,559 --> 00:21:21,600
it

455
00:21:21,600 --> 00:21:24,179
basically boils down that things are

456
00:21:24,179 --> 00:21:25,980
much better now than it was two years

457
00:21:25,980 --> 00:21:28,260
ago if you're running if your scale is

458
00:21:28,260 --> 00:21:30,900
less than 10K notes and you don't have

459
00:21:30,900 --> 00:21:33,059
like I don't know hundreds of thousand

460
00:21:33,059 --> 00:21:35,159
microservices running you probably

461
00:21:35,159 --> 00:21:37,020
shouldn't worry about it you'll likely

462
00:21:37,020 --> 00:21:40,039
want run into any challenges in there

463
00:21:40,039 --> 00:21:42,720
but there will be some links for

464
00:21:42,720 --> 00:21:44,460
additional resources like how you can

465
00:21:44,460 --> 00:21:47,520
think about the sizing

466
00:21:47,520 --> 00:21:50,480
um of your aspire clusters and what's

467
00:21:50,480 --> 00:21:53,460
node types and what how much resources

468
00:21:53,460 --> 00:21:55,799
you need depends on how many workloads

469
00:21:55,799 --> 00:21:58,100
you have

470
00:21:58,280 --> 00:22:02,299
monitoring and alerting

471
00:22:03,600 --> 00:22:05,280
well here

472
00:22:05,280 --> 00:22:07,980
this award for Mastery team like how do

473
00:22:07,980 --> 00:22:09,840
you know it's working how do we know

474
00:22:09,840 --> 00:22:12,299
that it's not broken uh what's going to

475
00:22:12,299 --> 00:22:16,559
happen if it's down to have like on-call

476
00:22:16,559 --> 00:22:18,659
rotation for this

477
00:22:18,659 --> 00:22:21,780
so Aspire provides a lot of telemetry

478
00:22:21,780 --> 00:22:26,400
for both servers and agents

479
00:22:26,400 --> 00:22:28,380
though there is no dashboards it's kind

480
00:22:28,380 --> 00:22:30,059
of you need to build it you need to

481
00:22:30,059 --> 00:22:31,559
understand what's important for you

482
00:22:31,559 --> 00:22:33,120
because

483
00:22:33,120 --> 00:22:36,620
pyre is a lot of as I mentioned before

484
00:22:36,620 --> 00:22:39,840
built-in building blogs and for example

485
00:22:39,840 --> 00:22:42,240
anything related to data store it could

486
00:22:42,240 --> 00:22:43,919
be data store specific and you probably

487
00:22:43,919 --> 00:22:46,679
want to have more metrics from your data

488
00:22:46,679 --> 00:22:50,159
store but uh help wanted if you want to

489
00:22:50,159 --> 00:22:52,620
contribute and help with the community

490
00:22:52,620 --> 00:22:54,840
this is like one of the things

491
00:22:54,840 --> 00:22:58,740
that still looking help with

492
00:22:58,740 --> 00:23:01,020
and I want to quickly touch base about

493
00:23:01,020 --> 00:23:03,059
logging another chain this is kind of

494
00:23:03,059 --> 00:23:06,000
Two Face systems that's also kind of we

495
00:23:06,000 --> 00:23:08,900
always tend to think at the end

496
00:23:08,900 --> 00:23:12,120
there is one important thing though for

497
00:23:12,120 --> 00:23:14,400
you need to bring your own login and

498
00:23:14,400 --> 00:23:18,780
auditing systems and uh Spire can be

499
00:23:18,780 --> 00:23:22,080
plugged into that pretty easily but one

500
00:23:22,080 --> 00:23:23,880
thing I wanted to point out here is

501
00:23:23,880 --> 00:23:26,640
specifically to auditing

502
00:23:26,640 --> 00:23:29,520
Spire server log contains a lot of

503
00:23:29,520 --> 00:23:33,419
information about agent data station but

504
00:23:33,419 --> 00:23:35,760
agents contain information about

505
00:23:35,760 --> 00:23:38,400
workload attestation it's like basically

506
00:23:38,400 --> 00:23:41,700
based on what condition this workload

507
00:23:41,700 --> 00:23:45,179
been given some identity this

508
00:23:45,179 --> 00:23:46,980
information is like very useful for

509
00:23:46,980 --> 00:23:49,380
detection and Report response purposes

510
00:23:49,380 --> 00:23:53,280
it's very useful for like I don't know

511
00:23:53,280 --> 00:23:55,860
some incident response that's happened

512
00:23:55,860 --> 00:23:58,020
three months ago you probably want to

513
00:23:58,020 --> 00:24:00,960
preserve this information specific to

514
00:24:00,960 --> 00:24:04,080
audio station for longer time like one

515
00:24:04,080 --> 00:24:06,840
or two years probably but you'll need to

516
00:24:06,840 --> 00:24:08,580
kind of this is something that you'll

517
00:24:08,580 --> 00:24:10,500
need to build it's not like there is

518
00:24:10,500 --> 00:24:13,799
just log file basically in Aspire and

519
00:24:13,799 --> 00:24:16,260
the the last thing I want to quickly

520
00:24:16,260 --> 00:24:19,799
emphasize is on disasters and any other

521
00:24:19,799 --> 00:24:22,080
like different scenarios

522
00:24:22,080 --> 00:24:23,640
and

523
00:24:23,640 --> 00:24:26,700
your comfort level you probably want to

524
00:24:26,700 --> 00:24:30,299
start with a very high TTL for your

525
00:24:30,299 --> 00:24:32,940
identities I would recommend like 30

526
00:24:32,940 --> 00:24:35,240
days probably before you get comfortable

527
00:24:35,240 --> 00:24:38,400
and then build a plan how you lower it

528
00:24:38,400 --> 00:24:41,159
down the big issue is there is like if

529
00:24:41,159 --> 00:24:43,640
sparse server is down

530
00:24:43,640 --> 00:24:47,640
then your nothing is working right so

531
00:24:47,640 --> 00:24:49,320
everything that's already half

532
00:24:49,320 --> 00:24:52,500
identities will be able to use it but if

533
00:24:52,500 --> 00:24:55,799
they will expire then everything like

534
00:24:55,799 --> 00:24:57,600
you don't have authentication everything

535
00:24:57,600 --> 00:25:00,539
is broken so your level of comfort is

536
00:25:00,539 --> 00:25:02,039
just basically how quickly you can

537
00:25:02,039 --> 00:25:03,900
rebuild an infrastructure and the way we

538
00:25:03,900 --> 00:25:06,120
thought about it is like if you burn

539
00:25:06,120 --> 00:25:09,179
down the aspiring for right now if we

540
00:25:09,179 --> 00:25:12,059
can rebuild it in one hour so the double

541
00:25:12,059 --> 00:25:15,299
days is like how a level of comfort for

542
00:25:15,299 --> 00:25:18,179
how how long we want to issue this

543
00:25:18,179 --> 00:25:20,039
identity so it's like two hours in this

544
00:25:20,039 --> 00:25:20,820
case

545
00:25:20,820 --> 00:25:23,960
right they give us some room to breathe

546
00:25:23,960 --> 00:25:27,900
yeah automate everything from

547
00:25:27,900 --> 00:25:31,500
start to finish test everything do

548
00:25:31,500 --> 00:25:35,039
different game activities and house

549
00:25:35,039 --> 00:25:38,039
engineering the the big message here is

550
00:25:38,039 --> 00:25:40,799
just make sure you're comfortable to and

551
00:25:40,799 --> 00:25:43,200
you understand what's happening when you

552
00:25:43,200 --> 00:25:45,779
when something goes wrong like

553
00:25:45,779 --> 00:25:49,440
especially for monitoring and Allergy

554
00:25:49,440 --> 00:25:51,960
um yeah so there are some links for

555
00:25:51,960 --> 00:25:53,820
additional resources

556
00:25:53,820 --> 00:25:56,640
on this slide

557
00:25:56,640 --> 00:26:00,440
if you have any issues or have questions

558
00:26:00,440 --> 00:26:05,640
found me go to spiffy.io Slack

559
00:26:05,640 --> 00:26:08,820
and thank you everyone for coming in

560
00:26:08,820 --> 00:26:10,920
here today

561
00:26:10,920 --> 00:26:16,480
[Applause]

562
00:26:31,460 --> 00:26:35,159
okay the the question is whether Aspire

563
00:26:35,159 --> 00:26:39,779
is for workload a station or for

564
00:26:39,779 --> 00:26:43,440
software attestation right so uh the my

565
00:26:43,440 --> 00:26:46,500
the main goal of

566
00:26:46,500 --> 00:26:49,440
Spire is to provide identities to

567
00:26:49,440 --> 00:26:51,059
workloads

568
00:26:51,059 --> 00:26:54,059
and help to verify this identities and

569
00:26:54,059 --> 00:26:57,779
identity is came in two formats x509 and

570
00:26:57,779 --> 00:27:00,240
JWT tokens

571
00:27:00,240 --> 00:27:04,020
it doesn't do in a process of providing

572
00:27:04,020 --> 00:27:06,860
this identities

573
00:27:06,900 --> 00:27:09,360
prior agent

574
00:27:09,360 --> 00:27:12,840
does a measurement right so but you need

575
00:27:12,840 --> 00:27:15,000
to know

576
00:27:15,000 --> 00:27:18,659
in front of like before providing this

577
00:27:18,659 --> 00:27:21,240
identity so you need to know something

578
00:27:21,240 --> 00:27:24,179
about it right like what User it's

579
00:27:24,179 --> 00:27:26,460
running if it's you under if it's Unix

580
00:27:26,460 --> 00:27:28,860
process right where if you're running it

581
00:27:28,860 --> 00:27:31,860
on kubernetes what container image it's

582
00:27:31,860 --> 00:27:33,840
using for example so it does this

583
00:27:33,840 --> 00:27:36,720
measurement but it's different from like

584
00:27:36,720 --> 00:27:38,940
software supply chain for example right

585
00:27:38,940 --> 00:27:41,039
so

586
00:27:41,039 --> 00:27:43,760
thank you

587
00:27:43,919 --> 00:27:47,120
any other questions

588
00:27:52,380 --> 00:27:57,620
I would suggest to think from their

589
00:27:57,779 --> 00:28:01,320
yeah in in this way right so it's like I

590
00:28:01,320 --> 00:28:02,820
don't remember what's the default TTL

591
00:28:02,820 --> 00:28:05,940
probably one hour uh I think it's too

592
00:28:05,940 --> 00:28:09,539
low like because if something goes wrong

593
00:28:09,539 --> 00:28:12,120
you literally have a certain minutes to

594
00:28:12,120 --> 00:28:13,080
recover

595
00:28:13,080 --> 00:28:15,539
if that's your level of comfort this is

596
00:28:15,539 --> 00:28:17,820
great I think we started with like seven

597
00:28:17,820 --> 00:28:20,400
days or or something like this when we

598
00:28:20,400 --> 00:28:22,740
rolled out in production or maybe even

599
00:28:22,740 --> 00:28:25,260
like 30 days before you

600
00:28:25,260 --> 00:28:29,400
get comfortable and uh

601
00:28:29,400 --> 00:28:32,159
operational teams also trust you right

602
00:28:32,159 --> 00:28:34,559
because remember this is everything

603
00:28:34,559 --> 00:28:38,240
depends on it in your infrastructure

604
00:28:39,299 --> 00:28:43,279
cool any any other questions

605
00:28:46,080 --> 00:28:47,940
all right thank you thank you so much

606
00:28:47,940 --> 00:28:50,900
thank you for coming in

