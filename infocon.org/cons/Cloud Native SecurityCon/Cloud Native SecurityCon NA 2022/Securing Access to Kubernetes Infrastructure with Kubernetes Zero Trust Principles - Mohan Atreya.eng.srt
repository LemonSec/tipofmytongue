1
00:00:00,719 --> 00:00:03,419
thank you Jeremy for the keynote

2
00:00:03,419 --> 00:00:05,400
um I'd like to take a brief moment to

3
00:00:05,400 --> 00:00:08,099
thank our amazing sponsors without their

4
00:00:08,099 --> 00:00:10,200
support this security con would not be

5
00:00:10,200 --> 00:00:11,160
possible

6
00:00:11,160 --> 00:00:15,660
so thank you to Red Hat sisdig Optics

7
00:00:15,660 --> 00:00:18,779
and VMware tanzu for being our Diamond

8
00:00:18,779 --> 00:00:21,900
sponsors and also thank you to apiro for

9
00:00:21,900 --> 00:00:24,119
being a platinum sponsor

10
00:00:24,119 --> 00:00:26,340
with that we are ready to begin the

11
00:00:26,340 --> 00:00:28,800
General Sessions for the day and first

12
00:00:28,800 --> 00:00:32,520
here we have Mohan atriya from Rafael

13
00:00:32,520 --> 00:00:34,559
systems Mohan will be talking about

14
00:00:34,559 --> 00:00:36,660
securing the kubernetes infrastructure

15
00:00:36,660 --> 00:00:39,719
using kubernetes zero trust principles

16
00:00:39,719 --> 00:00:44,100
Mohan thank you um am I am I Audible

17
00:00:44,100 --> 00:00:46,980
thank you good morning everyone

18
00:00:46,980 --> 00:00:49,879
um great to see so many people here

19
00:00:49,879 --> 00:00:53,940
so I I'm going to talk about a pretty

20
00:00:53,940 --> 00:00:56,399
interesting area uh this is uh this has

21
00:00:56,399 --> 00:00:58,920
been something that we see a lot of

22
00:00:58,920 --> 00:01:01,140
users attempting now when it comes to

23
00:01:01,140 --> 00:01:04,680
kubernetes and I hope I hope at the end

24
00:01:04,680 --> 00:01:07,140
of it you'll walk out with some

25
00:01:07,140 --> 00:01:08,880
interesting insights and if you have

26
00:01:08,880 --> 00:01:10,740
some questions after the session I'll be

27
00:01:10,740 --> 00:01:13,080
around so just look me up and happy to

28
00:01:13,080 --> 00:01:15,420
chat more

29
00:01:15,420 --> 00:01:16,020
um

30
00:01:16,020 --> 00:01:19,560
so um why do we think we wanted to talk

31
00:01:19,560 --> 00:01:21,360
about this topic

32
00:01:21,360 --> 00:01:22,320
um

33
00:01:22,320 --> 00:01:25,460
a lot of you here are very technical

34
00:01:25,460 --> 00:01:28,200
but there's a vast majority of people

35
00:01:28,200 --> 00:01:30,600
out on the out in the world who use

36
00:01:30,600 --> 00:01:32,880
kubernetes a little differently

37
00:01:32,880 --> 00:01:33,600
um

38
00:01:33,600 --> 00:01:35,460
if you've seen some of the reports

39
00:01:35,460 --> 00:01:38,159
recently like from Shadow server there's

40
00:01:38,159 --> 00:01:41,579
nearly 380 000 kubernetes clusters open

41
00:01:41,579 --> 00:01:43,200
on the internet think about that open on

42
00:01:43,200 --> 00:01:46,920
the internet right that's not good and

43
00:01:46,920 --> 00:01:49,619
we kind of play in this space so we've

44
00:01:49,619 --> 00:01:51,000
been kind of talking to people why do

45
00:01:51,000 --> 00:01:53,220
you do this and a lot of people say it's

46
00:01:53,220 --> 00:01:55,020
just too hard if I have to go another

47
00:01:55,020 --> 00:01:57,360
way go through a secure tunnel or

48
00:01:57,360 --> 00:01:58,619
something like that

49
00:01:58,619 --> 00:02:02,100
so with this backdrop of why so many

50
00:02:02,100 --> 00:02:03,600
people are out there with open

51
00:02:03,600 --> 00:02:05,219
kubernetes clusters on the internet I

52
00:02:05,219 --> 00:02:06,899
mean think about it your API server is

53
00:02:06,899 --> 00:02:08,520
the way by which you interact with your

54
00:02:08,520 --> 00:02:10,739
clusters right like as a user it's open

55
00:02:10,739 --> 00:02:12,840
on the internet anyone can touch it not

56
00:02:12,840 --> 00:02:16,080
good right so we ask people what do you

57
00:02:16,080 --> 00:02:17,160
do

58
00:02:17,160 --> 00:02:18,900
um typically right and then maybe

59
00:02:18,900 --> 00:02:20,400
there's a better approach

60
00:02:20,400 --> 00:02:23,040
so what people are typically done and

61
00:02:23,040 --> 00:02:25,379
this must be very familiar for you uh if

62
00:02:25,379 --> 00:02:28,260
you've been in the in the uh industry

63
00:02:28,260 --> 00:02:31,260
for a while uh they put up a Bastion if

64
00:02:31,260 --> 00:02:32,520
you go to a security team they probably

65
00:02:32,520 --> 00:02:33,900
will say maybe you should use Sebastian

66
00:02:33,900 --> 00:02:36,420
right kubernetes is new to them

67
00:02:36,420 --> 00:02:38,400
so what did they do

68
00:02:38,400 --> 00:02:40,920
um they go set up a Bastion there's a

69
00:02:40,920 --> 00:02:44,400
um you know you'll end up doing um a cue

70
00:02:44,400 --> 00:02:47,400
cuddle right from uh the Bastion onto

71
00:02:47,400 --> 00:02:49,440
your clusters in in your VPC or

72
00:02:49,440 --> 00:02:51,180
something else and now you have a

73
00:02:51,180 --> 00:02:53,640
problem uh the problem is well there are

74
00:02:53,640 --> 00:02:55,440
two problems first is from that Bastion

75
00:02:55,440 --> 00:02:58,019
you can see everything in that VPC all

76
00:02:58,019 --> 00:03:00,180
right if I'm an attacker that's a juicy

77
00:03:00,180 --> 00:03:03,000
Target right and number two

78
00:03:03,000 --> 00:03:05,160
me and my colleague getting out of the

79
00:03:05,160 --> 00:03:07,019
Bastion using the same Cube config most

80
00:03:07,019 --> 00:03:08,819
likely right so that's not good now you

81
00:03:08,819 --> 00:03:11,280
can't tell who did what so this turns

82
00:03:11,280 --> 00:03:13,140
out to be a problem okay way to start

83
00:03:13,140 --> 00:03:15,599
you'll end up having problems

84
00:03:15,599 --> 00:03:18,420
the second thing that people do is they

85
00:03:18,420 --> 00:03:20,159
land up saying well this Bastion thing

86
00:03:20,159 --> 00:03:22,440
is not working for me maybe I'll put up

87
00:03:22,440 --> 00:03:25,080
a jump host in front of it right I put

88
00:03:25,080 --> 00:03:27,659
up a jump hose now the user or the

89
00:03:27,659 --> 00:03:30,060
developer in this case is really really

90
00:03:30,060 --> 00:03:32,280
ticked off because now you're asking the

91
00:03:32,280 --> 00:03:35,400
user to go through two jumps right now

92
00:03:35,400 --> 00:03:36,900
you may you may start thinking here at

93
00:03:36,900 --> 00:03:38,400
this point of time some you know gears

94
00:03:38,400 --> 00:03:39,420
are probably churning in your head

95
00:03:39,420 --> 00:03:41,459
you're thinking how is this any

96
00:03:41,459 --> 00:03:43,260
different from VMS you've done this for

97
00:03:43,260 --> 00:03:46,500
VMS for hundreds of years uh why is so

98
00:03:46,500 --> 00:03:48,720
painful the problem is in the old

99
00:03:48,720 --> 00:03:50,760
monolithic world the typically the only

100
00:03:50,760 --> 00:03:53,099
person doing this was the Ops person

101
00:03:53,099 --> 00:03:55,739
right in the kubernetes world is every

102
00:03:55,739 --> 00:03:57,120
developer when you have 100 micro

103
00:03:57,120 --> 00:03:59,159
Services the poor Ops guy doesn't know

104
00:03:59,159 --> 00:04:01,860
which broke what broke where so many

105
00:04:01,860 --> 00:04:04,739
developers access right to help out when

106
00:04:04,739 --> 00:04:07,500
you want to resolve issues ETC so when

107
00:04:07,500 --> 00:04:09,239
you have hundreds of users attempting to

108
00:04:09,239 --> 00:04:11,760
do this you're on a real real painful

109
00:04:11,760 --> 00:04:13,319
situation right this is what people

110
00:04:13,319 --> 00:04:16,260
encounter in real life

111
00:04:16,260 --> 00:04:18,478
the last thing that we see people do is

112
00:04:18,478 --> 00:04:21,358
they plonk a VPN in front

113
00:04:21,358 --> 00:04:24,660
um not bad right except if you can

114
00:04:24,660 --> 00:04:25,979
afford it

115
00:04:25,979 --> 00:04:28,680
um these vpns do cost a lot of money and

116
00:04:28,680 --> 00:04:31,139
if you have three four data centers I

117
00:04:31,139 --> 00:04:32,580
mean it's game over from a budget

118
00:04:32,580 --> 00:04:34,320
perspective right you have so many VPN

119
00:04:34,320 --> 00:04:37,320
concentrators but the good thing is now

120
00:04:37,320 --> 00:04:39,720
every user is using their own cubeconfig

121
00:04:39,720 --> 00:04:41,639
and they doing it right from their

122
00:04:41,639 --> 00:04:42,560
laptop

123
00:04:42,560 --> 00:04:44,639
life is a little better right more

124
00:04:44,639 --> 00:04:46,740
secure

125
00:04:46,740 --> 00:04:49,080
um the the primary thing is cost of

126
00:04:49,080 --> 00:04:51,540
course this does not remove the attack

127
00:04:51,540 --> 00:04:54,660
surface problem which means if I can VPN

128
00:04:54,660 --> 00:04:56,699
into my VPC I see everything inside the

129
00:04:56,699 --> 00:04:58,440
VPC right

130
00:04:58,440 --> 00:05:02,419
um not good right

131
00:05:06,960 --> 00:05:09,479
Audible

132
00:05:09,479 --> 00:05:11,340
now we talked about how can I access

133
00:05:11,340 --> 00:05:12,900
stuff

134
00:05:12,900 --> 00:05:13,919
um

135
00:05:13,919 --> 00:05:16,199
now let's talk about the second

136
00:05:16,199 --> 00:05:19,020
actually a very important aspect

137
00:05:19,020 --> 00:05:22,139
if I'm accessing kubernetes

138
00:05:22,139 --> 00:05:27,120
um not have some kind of operation

139
00:05:27,120 --> 00:05:30,060
a developer I have the same kind of

140
00:05:30,060 --> 00:05:33,539
access administered that's a no

141
00:05:33,539 --> 00:05:36,000
cluster-wide privilege every developer

142
00:05:36,000 --> 00:05:38,220
came over

143
00:05:38,220 --> 00:05:39,720
what people do

144
00:05:39,720 --> 00:05:43,199
end up having for example

145
00:05:43,199 --> 00:05:45,180
stand up saying that hey are all the

146
00:05:45,180 --> 00:05:46,500
Developers

147
00:05:46,500 --> 00:05:50,340
of this application an Acme name have to

148
00:05:50,340 --> 00:05:53,239
be in the Acme namespace

149
00:05:54,840 --> 00:05:57,120
stop the orange line

150
00:05:57,120 --> 00:05:58,860
tap

151
00:05:58,860 --> 00:06:02,580
you want to make sure that the developer

152
00:06:02,580 --> 00:06:04,380
um uh who doesn't need access to

153
00:06:04,380 --> 00:06:06,600
cluster-wide Privileges and only access

154
00:06:06,600 --> 00:06:09,120
things by the namespace but if I'm an

155
00:06:09,120 --> 00:06:12,479
operations person allow me Pastor wide

156
00:06:12,479 --> 00:06:15,840
privilege because I need that

157
00:06:15,840 --> 00:06:18,360
so you guys know this fundamental logic

158
00:06:18,360 --> 00:06:21,180
this hardback built into kubernetes

159
00:06:21,180 --> 00:06:23,520
after you use it the way by which you

160
00:06:23,520 --> 00:06:26,719
control your blast radius

161
00:06:27,300 --> 00:06:28,500
hello

162
00:06:28,500 --> 00:06:29,819
better

163
00:06:29,819 --> 00:06:32,280
all right sorry guys

164
00:06:32,280 --> 00:06:33,240
um

165
00:06:33,240 --> 00:06:35,160
so I'll just go back to that previous

166
00:06:35,160 --> 00:06:37,380
slide for like two seconds so the The

167
00:06:37,380 --> 00:06:39,300
quick summary there is there's something

168
00:06:39,300 --> 00:06:41,580
called rbac or role-based Access Control

169
00:06:41,580 --> 00:06:43,800
in kubernetes really important for you

170
00:06:43,800 --> 00:06:45,600
to understand that because you do not

171
00:06:45,600 --> 00:06:48,780
want every developer who does not need

172
00:06:48,780 --> 00:06:51,660
access to the entire cluster you want to

173
00:06:51,660 --> 00:06:54,000
make sure you use our back so that they

174
00:06:54,000 --> 00:06:55,560
can only see what they want to see

175
00:06:55,560 --> 00:06:58,199
really really important

176
00:06:58,199 --> 00:07:01,380
uh so uh now what happens at scale now

177
00:07:01,380 --> 00:07:04,259
we have one user or maybe one cluster

178
00:07:04,259 --> 00:07:06,780
not a big problem right you can do all

179
00:07:06,780 --> 00:07:07,919
of this manually

180
00:07:07,919 --> 00:07:10,680
what we see customers struggle with and

181
00:07:10,680 --> 00:07:12,900
users struggle with is when you have

182
00:07:12,900 --> 00:07:15,900
tens or hundreds of clusters

183
00:07:15,900 --> 00:07:18,120
and typically like when I talk about

184
00:07:18,120 --> 00:07:19,979
microservices when you have hundreds of

185
00:07:19,979 --> 00:07:21,479
micro Services you have hundreds of

186
00:07:21,479 --> 00:07:24,060
developers who constantly move from one

187
00:07:24,060 --> 00:07:25,259
theme to another

188
00:07:25,259 --> 00:07:28,020
now your problem is magnified you have

189
00:07:28,020 --> 00:07:30,440
hundreds of users hundreds of developers

190
00:07:30,440 --> 00:07:34,080
and you have many many clusters now how

191
00:07:34,080 --> 00:07:36,000
are you going to manage all these rbacs

192
00:07:36,000 --> 00:07:38,280
and even keep sense of them really hard

193
00:07:38,280 --> 00:07:41,039
right so essentially

194
00:07:41,039 --> 00:07:43,860
if you are looking into a model by which

195
00:07:43,860 --> 00:07:46,620
you're doing this manually you're now in

196
00:07:46,620 --> 00:07:48,660
an impractical zone right is this not

197
00:07:48,660 --> 00:07:50,699
possible to do this

198
00:07:50,699 --> 00:07:52,560
so this is where

199
00:07:52,560 --> 00:07:54,900
um uh the processes fall apart and you

200
00:07:54,900 --> 00:07:57,120
need some form of automation to make

201
00:07:57,120 --> 00:08:00,300
sure that the wrong people do not have

202
00:08:00,300 --> 00:08:02,220
access to the wrong things or the uh

203
00:08:02,220 --> 00:08:04,919
more things than what they need

204
00:08:04,919 --> 00:08:08,520
so now let's look at let's look at how

205
00:08:08,520 --> 00:08:10,440
can we solve this problem both of these

206
00:08:10,440 --> 00:08:13,560
problems in one Fell Swoop right

207
00:08:13,560 --> 00:08:16,380
so let's look at this from maybe a

208
00:08:16,380 --> 00:08:18,960
requirements perspective if I'm a if I'm

209
00:08:18,960 --> 00:08:21,000
an operations person and I have hundreds

210
00:08:21,000 --> 00:08:22,680
of developers that need to access stuff

211
00:08:22,680 --> 00:08:24,660
and I need

212
00:08:24,660 --> 00:08:26,520
um to support tens and hundreds of

213
00:08:26,520 --> 00:08:28,800
clusters running in data centers in many

214
00:08:28,800 --> 00:08:31,319
many regions in Amazon Etc the first

215
00:08:31,319 --> 00:08:33,958
thing I need to do is I cannot afford to

216
00:08:33,958 --> 00:08:35,760
put my clusters open on the internet

217
00:08:35,760 --> 00:08:37,500
that's I mean everyone agrees to that

218
00:08:37,500 --> 00:08:39,899
the next thing I need to do is make sure

219
00:08:39,899 --> 00:08:42,839
that I don't put my developers through

220
00:08:42,839 --> 00:08:45,660
this complicated Bastion or VPN based

221
00:08:45,660 --> 00:08:47,459
user experience which everyone hates

222
00:08:47,459 --> 00:08:50,339
right none of us like that experience

223
00:08:50,339 --> 00:08:53,399
so what you really really need is to

224
00:08:53,399 --> 00:08:55,260
leverage what's been out in the market

225
00:08:55,260 --> 00:08:58,380
for tens of years I mean if if folks

226
00:08:58,380 --> 00:09:00,720
have heard about companies like zscaler

227
00:09:00,720 --> 00:09:02,160
and all these companies they've been

228
00:09:02,160 --> 00:09:05,459
like very pervasive they all do this but

229
00:09:05,459 --> 00:09:08,760
for web applications why not for cube

230
00:09:08,760 --> 00:09:11,339
CTL why not for cube API after all runs

231
00:09:11,339 --> 00:09:14,700
on https right so the first thing you

232
00:09:14,700 --> 00:09:16,620
need is a way by which you can access

233
00:09:16,620 --> 00:09:18,240
these clusters

234
00:09:18,240 --> 00:09:20,160
even though the Clusters are cloaked

235
00:09:20,160 --> 00:09:22,260
behind a firewall can you do that yeah

236
00:09:22,260 --> 00:09:25,620
if you can do that with zscaler why not

237
00:09:25,620 --> 00:09:27,839
the next thing you want to do is you

238
00:09:27,839 --> 00:09:30,420
don't want this R back to be permanently

239
00:09:30,420 --> 00:09:32,700
injected inside the cluster you want to

240
00:09:32,700 --> 00:09:35,279
do that dynamically just in time why is

241
00:09:35,279 --> 00:09:37,260
that really important

242
00:09:37,260 --> 00:09:39,660
you don't want credentials to be

243
00:09:39,660 --> 00:09:42,000
permanently sitting on clusters right

244
00:09:42,000 --> 00:09:43,740
you want to remove them after the

245
00:09:43,740 --> 00:09:46,160
session is complete so the automated

246
00:09:46,160 --> 00:09:50,640
ephemeral are back really important

247
00:09:50,640 --> 00:09:52,500
all user access need to be strongly

248
00:09:52,500 --> 00:09:54,959
authenticated given right and then

249
00:09:54,959 --> 00:09:57,480
finally this is a question that people

250
00:09:57,480 --> 00:09:59,459
struggle with from a governance and

251
00:09:59,459 --> 00:10:00,839
compliance

252
00:10:00,839 --> 00:10:03,480
if I come and ask you hey what are the

253
00:10:03,480 --> 00:10:05,640
cube CTL commands are ran against my

254
00:10:05,640 --> 00:10:08,339
cluster or rather Johnny Ransom commands

255
00:10:08,339 --> 00:10:10,260
yesterday what did he run people have no

256
00:10:10,260 --> 00:10:12,839
idea right there's no way to reconstruct

257
00:10:12,839 --> 00:10:14,700
that what if there was

258
00:10:14,700 --> 00:10:16,980
right so these are the four things we

259
00:10:16,980 --> 00:10:20,640
see that organizations need to have a

260
00:10:20,640 --> 00:10:23,580
sensible practice around making sure

261
00:10:23,580 --> 00:10:26,100
that you run things at scale with your

262
00:10:26,100 --> 00:10:29,399
clusters where you open up access to

263
00:10:29,399 --> 00:10:31,019
your developers give them a fantastic

264
00:10:31,019 --> 00:10:34,260
experience and and make sure that you're

265
00:10:34,260 --> 00:10:37,339
not running insecure

266
00:10:37,339 --> 00:10:39,540
so um

267
00:10:39,540 --> 00:10:41,220
so what are we going to talk about now

268
00:10:41,220 --> 00:10:43,140
I'm going to for the remaining part of

269
00:10:43,140 --> 00:10:44,339
the session I'm going to do two things

270
00:10:44,339 --> 00:10:46,920
I'm going to talk about an open source

271
00:10:46,920 --> 00:10:49,500
project that that

272
00:10:49,500 --> 00:10:51,000
um that we announced sometime back

273
00:10:51,000 --> 00:10:52,980
called perilous

274
00:10:52,980 --> 00:10:55,680
um it's actually based on something we

275
00:10:55,680 --> 00:10:57,420
noticed about three years ago in the

276
00:10:57,420 --> 00:10:59,040
market you know about three years ago

277
00:10:59,040 --> 00:11:00,839
you know we all started working from

278
00:11:00,839 --> 00:11:03,779
home uh because if uh the pandemic right

279
00:11:03,779 --> 00:11:06,959
and we had coincidentally introduced a

280
00:11:06,959 --> 00:11:09,839
zero trust access uh capability in our

281
00:11:09,839 --> 00:11:13,079
platform and that took off like a rocket

282
00:11:13,079 --> 00:11:15,720
ship I don't have the charts here the

283
00:11:15,720 --> 00:11:17,880
show but you know it was almost like you

284
00:11:17,880 --> 00:11:20,040
know a curve like that and it's because

285
00:11:20,040 --> 00:11:21,660
people are working from home everyone

286
00:11:21,660 --> 00:11:24,240
hated vpns no one who wanted bastions

287
00:11:24,240 --> 00:11:26,579
and everyone wanted instant access to

288
00:11:26,579 --> 00:11:28,019
the Clusters so you're going to see that

289
00:11:28,019 --> 00:11:30,240
in action with this open source offering

290
00:11:30,240 --> 00:11:33,060
we open sourced it because we felt that

291
00:11:33,060 --> 00:11:35,880
it's really important for the industry

292
00:11:35,880 --> 00:11:38,640
to kind of move a couple of notches up

293
00:11:38,640 --> 00:11:40,320
from a security perspective right like

294
00:11:40,320 --> 00:11:42,720
everybody should be able to do this you

295
00:11:42,720 --> 00:11:43,980
should not be requiring a commercial

296
00:11:43,980 --> 00:11:47,820
offering to do this so let's let's talk

297
00:11:47,820 --> 00:11:49,980
a little bit about parallels is open

298
00:11:49,980 --> 00:11:52,560
source Apache license so you can pull it

299
00:11:52,560 --> 00:11:55,620
down and use it right and if you are

300
00:11:55,620 --> 00:11:57,420
using something like digitalocean you

301
00:11:57,420 --> 00:11:59,220
have a one-click experience just go

302
00:11:59,220 --> 00:12:01,440
there search for parallels click it

303
00:12:01,440 --> 00:12:04,500
install it use it please participate in

304
00:12:04,500 --> 00:12:06,420
the community right like we would love

305
00:12:06,420 --> 00:12:08,760
to see how we can improve this we love

306
00:12:08,760 --> 00:12:10,980
to have contributors and then like you

307
00:12:10,980 --> 00:12:12,660
guys are all you know pretty aware of

308
00:12:12,660 --> 00:12:15,000
how the community is so important to

309
00:12:15,000 --> 00:12:16,740
make sure this this projects are

310
00:12:16,740 --> 00:12:20,220
successful so help us out let's make the

311
00:12:20,220 --> 00:12:22,339
industry more secure

312
00:12:22,339 --> 00:12:26,040
try and participate in this project

313
00:12:26,040 --> 00:12:28,380
so how does this work now you kind of

314
00:12:28,380 --> 00:12:30,540
heard about the zero trust let me kind

315
00:12:30,540 --> 00:12:32,120
of show you

316
00:12:32,120 --> 00:12:34,980
architecturally then I'll show you a

317
00:12:34,980 --> 00:12:37,019
live demo I'm sure it'll blow your mind

318
00:12:37,019 --> 00:12:39,660
right so the first thing you have is you

319
00:12:39,660 --> 00:12:41,339
have the access manager panelist access

320
00:12:41,339 --> 00:12:44,399
manager this is a proxy it's a cube CTL

321
00:12:44,399 --> 00:12:46,680
proxy or cube API proxy on the internet

322
00:12:46,680 --> 00:12:47,880
right

323
00:12:47,880 --> 00:12:52,440
it's got these an agent running on every

324
00:12:52,440 --> 00:12:54,420
one of your clusters and notice the

325
00:12:54,420 --> 00:12:57,720
arrow is out outbound right the agent

326
00:12:57,720 --> 00:13:01,680
dials out on Port 443 from your clusters

327
00:13:01,680 --> 00:13:04,620
behind firewalls to the perilous access

328
00:13:04,620 --> 00:13:08,220
manager and runs a long running control

329
00:13:08,220 --> 00:13:09,899
plane session

330
00:13:09,899 --> 00:13:12,540
right it's a it's essentially keeping it

331
00:13:12,540 --> 00:13:14,399
alive the connection

332
00:13:14,399 --> 00:13:17,040
now when the developer who is sitting at

333
00:13:17,040 --> 00:13:18,180
home

334
00:13:18,180 --> 00:13:20,760
can access the perilous access server

335
00:13:20,760 --> 00:13:22,320
they don't know any different they get a

336
00:13:22,320 --> 00:13:24,899
cube config they say Cube CTL get

337
00:13:24,899 --> 00:13:26,639
namespace or something like that right

338
00:13:26,639 --> 00:13:28,320
they don't know if they're touching

339
00:13:28,320 --> 00:13:30,360
perilous or the end cluster they don't

340
00:13:30,360 --> 00:13:31,920
need to know they're hitting the proxy

341
00:13:31,920 --> 00:13:35,700
right and the proxy authenticates them

342
00:13:35,700 --> 00:13:38,040
it's a two-way Authentication

343
00:13:38,040 --> 00:13:40,019
with digital certificates is very

344
00:13:40,019 --> 00:13:41,160
strongly authenticated of course

345
00:13:41,160 --> 00:13:43,860
everything is encrypted it's https right

346
00:13:43,860 --> 00:13:45,779
and not only that

347
00:13:45,779 --> 00:13:49,620
anything the user types is now audited

348
00:13:49,620 --> 00:13:53,220
right so if I type some funky commands

349
00:13:53,220 --> 00:13:55,620
you can reconstruct the whole set of

350
00:13:55,620 --> 00:13:57,779
commands and from a compliance and

351
00:13:57,779 --> 00:13:59,220
governance perspective this is really

352
00:13:59,220 --> 00:14:00,839
important

353
00:14:00,839 --> 00:14:03,180
right and once that authentication is

354
00:14:03,180 --> 00:14:06,000
complete it's just basically on The Wire

355
00:14:06,000 --> 00:14:07,860
the commands are flying back and forth

356
00:14:07,860 --> 00:14:10,740
between the client and the server now

357
00:14:10,740 --> 00:14:12,300
before that

358
00:14:12,300 --> 00:14:16,200
the downstream APS server at this time

359
00:14:16,200 --> 00:14:19,440
has no idea who you are it has no R back

360
00:14:19,440 --> 00:14:22,320
for you on that cluster so remember at

361
00:14:22,320 --> 00:14:24,600
step two when the user authenticated

362
00:14:24,600 --> 00:14:27,540
with the perilous access manager

363
00:14:27,540 --> 00:14:29,339
they're also indicating I want to access

364
00:14:29,339 --> 00:14:31,800
the cluster on the top and our back is

365
00:14:31,800 --> 00:14:34,440
generated on the Fly and a service

366
00:14:34,440 --> 00:14:37,079
account is injected into that cluster

367
00:14:37,079 --> 00:14:39,240
right this is all happening in

368
00:14:39,240 --> 00:14:40,860
milliseconds right milliseconds or

369
00:14:40,860 --> 00:14:42,720
microseconds right

370
00:14:42,720 --> 00:14:46,260
so the API server is the one that's

371
00:14:46,260 --> 00:14:47,699
actually controlling everything behind

372
00:14:47,699 --> 00:14:50,220
the scenes perilous here is nothing more

373
00:14:50,220 --> 00:14:52,620
than the main gatekeeper it's just an

374
00:14:52,620 --> 00:14:54,959
access proxy that's pretty much it it's

375
00:14:54,959 --> 00:14:57,000
access proxy authenticating you

376
00:14:57,000 --> 00:15:00,600
generating the r back injecting the

377
00:15:00,600 --> 00:15:02,760
service account on that cluster

378
00:15:02,760 --> 00:15:05,160
sounds fascinating right I'm sure you

379
00:15:05,160 --> 00:15:06,779
guys want to see a very quick demo of

380
00:15:06,779 --> 00:15:09,480
that I'll I'll do that right now

381
00:15:09,480 --> 00:15:10,920
right

382
00:15:10,920 --> 00:15:12,660
um so let's see that

383
00:15:12,660 --> 00:15:14,820
so what what you're going to see here

384
00:15:14,820 --> 00:15:16,800
is uh

385
00:15:16,800 --> 00:15:19,079
um I have the perilous access manager

386
00:15:19,079 --> 00:15:21,779
setup it's running in New York in

387
00:15:21,779 --> 00:15:23,639
digitalocean

388
00:15:23,639 --> 00:15:27,180
right I'm now here in in Detroit

389
00:15:27,180 --> 00:15:29,399
and hopefully my internet will work and

390
00:15:29,399 --> 00:15:31,800
uh you'll see me

391
00:15:31,800 --> 00:15:35,160
attempt to run a cube CTL command and I

392
00:15:35,160 --> 00:15:37,860
can run this against three clusters what

393
00:15:37,860 --> 00:15:39,839
I've done is like I've simulated a

394
00:15:39,839 --> 00:15:42,060
typical environment any small company

395
00:15:42,060 --> 00:15:45,120
would have a Dev environment a staging

396
00:15:45,120 --> 00:15:48,540
cluster a production cluster right and

397
00:15:48,540 --> 00:15:50,519
what I'm going to do here is I'm going

398
00:15:50,519 --> 00:15:53,880
to show you if I log in as an Ops person

399
00:15:53,880 --> 00:15:56,639
I can see everything because that's what

400
00:15:56,639 --> 00:15:59,339
my access rules are

401
00:15:59,339 --> 00:16:01,380
and I'll have cluster white privileges

402
00:16:01,380 --> 00:16:04,380
but if a login as a developer

403
00:16:04,380 --> 00:16:06,300
I will not have access to production

404
00:16:06,300 --> 00:16:08,279
because that's the rule I set up here

405
00:16:08,279 --> 00:16:11,519
right now this should be like easy right

406
00:16:11,519 --> 00:16:13,320
like how do you do that

407
00:16:13,320 --> 00:16:16,920
um uh why not see it in action

408
00:16:16,920 --> 00:16:19,199
so let me

409
00:16:19,199 --> 00:16:22,459
um very quickly

410
00:16:23,399 --> 00:16:25,380
is going to be complicated because I'm

411
00:16:25,380 --> 00:16:27,240
holding the mic and doing this at the

412
00:16:27,240 --> 00:16:29,459
same time so this is a perilous access

413
00:16:29,459 --> 00:16:31,740
server so what you're seeing here are

414
00:16:31,740 --> 00:16:33,839
three projects I have a Dev project a

415
00:16:33,839 --> 00:16:35,399
prod project and a staging project

416
00:16:35,399 --> 00:16:37,500
inside that I have a cluster a Dev

417
00:16:37,500 --> 00:16:40,500
cluster and if I want a cube CTL do it I

418
00:16:40,500 --> 00:16:41,820
mean I don't know where it's running I

419
00:16:41,820 --> 00:16:44,300
don't need to know and I can say hey get

420
00:16:44,300 --> 00:16:47,820
namespace and I get the thing now the

421
00:16:47,820 --> 00:16:50,699
key thing here uh uh you know you don't

422
00:16:50,699 --> 00:16:54,320
even see the the service account being

423
00:16:54,320 --> 00:16:56,880
dynamically injected on the cluster so

424
00:16:56,880 --> 00:16:58,139
now what I'm going to do is I'm going to

425
00:16:58,139 --> 00:17:01,079
flip to another cluster Just for kicks

426
00:17:01,079 --> 00:17:04,260
and I'm going to show you live

427
00:17:04,260 --> 00:17:07,020
let's go inspect the service account so

428
00:17:07,020 --> 00:17:09,419
when I run this

429
00:17:09,419 --> 00:17:10,799
um

430
00:17:10,799 --> 00:17:12,839
let me type this out I can't talk and

431
00:17:12,839 --> 00:17:15,740
type at the same time

432
00:17:20,040 --> 00:17:22,980
yeah there's also autocomplete thank God

433
00:17:22,980 --> 00:17:26,459
so when you go look at that and if you

434
00:17:26,459 --> 00:17:28,740
look at this service account for this

435
00:17:28,740 --> 00:17:29,640
user

436
00:17:29,640 --> 00:17:31,820
it was generated about two hours ago

437
00:17:31,820 --> 00:17:34,320
when I was just practicing and

438
00:17:34,320 --> 00:17:35,640
rehearsing for this demo now what I'll

439
00:17:35,640 --> 00:17:37,559
do is I'll log in as an Ops version and

440
00:17:37,559 --> 00:17:39,360
we'll see this being generated live

441
00:17:39,360 --> 00:17:42,299
right so what I'm going to do now is

442
00:17:42,299 --> 00:17:45,539
going to log in as an Ops person

443
00:17:45,539 --> 00:17:48,840
I'm going to authenticate as John

444
00:17:48,840 --> 00:17:51,179
right and if you look at John

445
00:17:51,179 --> 00:17:53,460
the the company the Central Access

446
00:17:53,460 --> 00:17:56,520
manager said John has access because he

447
00:17:56,520 --> 00:17:58,799
belongs to the Ops group I have access

448
00:17:58,799 --> 00:18:01,320
to the dev prod and staging this mapping

449
00:18:01,320 --> 00:18:03,419
is done automatically based on my group

450
00:18:03,419 --> 00:18:05,460
membership right

451
00:18:05,460 --> 00:18:08,220
then I go into prod and I'll do the same

452
00:18:08,220 --> 00:18:10,039
thing

453
00:18:10,039 --> 00:18:13,500
and I'm hitting the same cluster and if

454
00:18:13,500 --> 00:18:14,880
I look for the same thing which is a

455
00:18:14,880 --> 00:18:17,600
secret service account minus n

456
00:18:17,600 --> 00:18:22,400
perilous system you'll see that Ops John

457
00:18:22,400 --> 00:18:26,400
this email just 10 seconds ago the

458
00:18:26,400 --> 00:18:28,679
service account was dynamically created

459
00:18:28,679 --> 00:18:30,780
on that cluster right just 10 seconds

460
00:18:30,780 --> 00:18:32,880
ago and when I log out that service

461
00:18:32,880 --> 00:18:35,039
account will be flushed which means

462
00:18:35,039 --> 00:18:36,960
nobody has keys to the kingdom all the

463
00:18:36,960 --> 00:18:39,419
time every time I access I need to

464
00:18:39,419 --> 00:18:41,460
authenticate really important so

465
00:18:41,460 --> 00:18:43,620
tomorrow I change my role today they

466
00:18:43,620 --> 00:18:46,140
move me from Ops to Dev

467
00:18:46,140 --> 00:18:48,000
I will not have this level of access

468
00:18:48,000 --> 00:18:52,020
anymore everything is automatic right so

469
00:18:52,020 --> 00:18:53,460
that level of federation really

470
00:18:53,460 --> 00:18:54,840
important

471
00:18:54,840 --> 00:18:57,000
now let's log in as the dev

472
00:18:57,000 --> 00:18:59,100
all right so I'm going to log in as

473
00:18:59,100 --> 00:19:00,059
Sally

474
00:19:00,059 --> 00:19:03,000
Sally is a Dev in this company

475
00:19:03,000 --> 00:19:06,660
and when Sally logs in remember Sally

476
00:19:06,660 --> 00:19:08,460
um because she belongs to the developer

477
00:19:08,460 --> 00:19:11,820
group the company had decided Sally and

478
00:19:11,820 --> 00:19:14,460
developers don't have access to

479
00:19:14,460 --> 00:19:17,640
um the production environment so as you

480
00:19:17,640 --> 00:19:19,559
can see here there's only Dev and

481
00:19:19,559 --> 00:19:23,460
staging clusters visible now Sally also

482
00:19:23,460 --> 00:19:25,919
Belongs to Only One namespace called

483
00:19:25,919 --> 00:19:26,880
Apple

484
00:19:26,880 --> 00:19:28,799
right there's a namespace called apple

485
00:19:28,799 --> 00:19:31,380
on the cluster she only has access to

486
00:19:31,380 --> 00:19:32,100
that

487
00:19:32,100 --> 00:19:34,860
let's see if Sally attempts something

488
00:19:34,860 --> 00:19:36,240
smart

489
00:19:36,240 --> 00:19:39,720
and attempts to see anything more what

490
00:19:39,720 --> 00:19:41,760
happens but before that let's see you

491
00:19:41,760 --> 00:19:43,860
know I'm just going to try

492
00:19:43,860 --> 00:19:46,699
typing in

493
00:19:47,280 --> 00:19:49,340
um you know

494
00:19:49,340 --> 00:19:52,020
I'm listing all my pods in my Apple

495
00:19:52,020 --> 00:19:54,179
namespace everything looks good now

496
00:19:54,179 --> 00:19:56,160
Sally says you know what I really am

497
00:19:56,160 --> 00:19:57,720
curious I want to see who else is

498
00:19:57,720 --> 00:19:59,940
running what on this cluster and I type

499
00:19:59,940 --> 00:20:03,000
A get namespace and you notice access is

500
00:20:03,000 --> 00:20:05,460
forbidden why is this forbidden because

501
00:20:05,460 --> 00:20:08,100
the r back for Sally that was injected

502
00:20:08,100 --> 00:20:10,620
under that cluster is constrained down

503
00:20:10,620 --> 00:20:12,360
to the Apple namespace so you can only

504
00:20:12,360 --> 00:20:14,280
see the Apple namespace nothing more

505
00:20:14,280 --> 00:20:17,520
right imagine doing this for hundreds of

506
00:20:17,520 --> 00:20:19,799
developers who are constantly moving

507
00:20:19,799 --> 00:20:22,679
from group to group or hundreds of

508
00:20:22,679 --> 00:20:23,940
operations people everything is

509
00:20:23,940 --> 00:20:25,080
automatic

510
00:20:25,080 --> 00:20:27,179
right you add people to the right group

511
00:20:27,179 --> 00:20:30,360
our back follows them right that's the

512
00:20:30,360 --> 00:20:33,000
power of Parallels for you

513
00:20:33,000 --> 00:20:34,500
so

514
00:20:34,500 --> 00:20:36,240
um the last thing I want to show you

515
00:20:36,240 --> 00:20:40,940
here is is the audit Trail

516
00:20:41,940 --> 00:20:44,400
so if you remember

517
00:20:44,400 --> 00:20:46,620
as a user I was typing a bunch of things

518
00:20:46,620 --> 00:20:48,360
[Music]

519
00:20:48,360 --> 00:20:51,660
as a company if I'm an auditor I can go

520
00:20:51,660 --> 00:20:54,240
in and look at every command that was

521
00:20:54,240 --> 00:20:58,200
run by without a Sally here or John here

522
00:20:58,200 --> 00:21:00,000
or the admin here whatever I did

523
00:21:00,000 --> 00:21:02,880
everything can be tracked right so from

524
00:21:02,880 --> 00:21:04,440
a governance perspective people can

525
00:21:04,440 --> 00:21:06,960
rewind back and say this person did this

526
00:21:06,960 --> 00:21:09,059
these are the sequencer commands what I

527
00:21:09,059 --> 00:21:11,400
see users tell me now on forums is

528
00:21:11,400 --> 00:21:13,559
fascinating we initially built this

529
00:21:13,559 --> 00:21:15,059
assuming they will use it for security

530
00:21:15,059 --> 00:21:17,280
purposes what people are saying is

531
00:21:17,280 --> 00:21:19,140
they're using this to automate run books

532
00:21:19,140 --> 00:21:21,660
now like you know this is really sharp

533
00:21:21,660 --> 00:21:23,640
engineer who knows how to run the cube

534
00:21:23,640 --> 00:21:25,140
cuddle commands in a certain sequence

535
00:21:25,140 --> 00:21:27,179
they capture that and say I'm going to

536
00:21:27,179 --> 00:21:30,059
bottle this up and I'm going to use have

537
00:21:30,059 --> 00:21:31,679
other people follow the same sequencer

538
00:21:31,679 --> 00:21:33,780
commands so very fascinating set of

539
00:21:33,780 --> 00:21:36,480
feedback from organizations

540
00:21:36,480 --> 00:21:39,320
so in summary

541
00:21:42,780 --> 00:21:45,720
we encourage everyone in the industry to

542
00:21:45,720 --> 00:21:47,760
do three things at least three things

543
00:21:47,760 --> 00:21:49,380
please do not put your kubernetes

544
00:21:49,380 --> 00:21:51,000
clusters on the internet

545
00:21:51,000 --> 00:21:52,919
cloak them

546
00:21:52,919 --> 00:21:56,220
make sure that people have zero trust

547
00:21:56,220 --> 00:21:58,740
access make sure your developers get

548
00:21:58,740 --> 00:22:00,539
access to your clusters from anywhere

549
00:22:00,539 --> 00:22:02,520
with the right R back

550
00:22:02,520 --> 00:22:05,520
make sure the rbac injection the service

551
00:22:05,520 --> 00:22:07,200
account injection is done dynamically

552
00:22:07,200 --> 00:22:10,380
which means only right level of access

553
00:22:10,380 --> 00:22:12,480
is given at the right time

554
00:22:12,480 --> 00:22:14,520
and make sure you have an audit trail of

555
00:22:14,520 --> 00:22:17,340
everything right this this in summary

556
00:22:17,340 --> 00:22:19,559
would get you to a point where you're

557
00:22:19,559 --> 00:22:22,559
running secure operations for your

558
00:22:22,559 --> 00:22:24,900
kubernetes environments I think that's

559
00:22:24,900 --> 00:22:27,240
all I had if there any questions I'll be

560
00:22:27,240 --> 00:22:29,760
around at the back or outside

561
00:22:29,760 --> 00:22:31,559
um I'll also be at the booth Raffia

562
00:22:31,559 --> 00:22:34,260
Booth later this week so stop by I think

563
00:22:34,260 --> 00:22:35,580
we'll have something about perilous

564
00:22:35,580 --> 00:22:38,299
there thank you

565
00:22:41,820 --> 00:22:44,720
do we have time

566
00:22:45,840 --> 00:22:50,299
go ahead yeah yeah we have the mic

567
00:22:50,520 --> 00:22:53,340
so what is the current stat state or

568
00:22:53,340 --> 00:22:55,380
status of parallels can it be used in

569
00:22:55,380 --> 00:22:58,200
production and second question is the

570
00:22:58,200 --> 00:23:00,120
performance hit like what kind of

571
00:23:00,120 --> 00:23:01,500
performance hits are we looking yeah

572
00:23:01,500 --> 00:23:03,659
yeah very good questions so two

573
00:23:03,659 --> 00:23:06,419
questions there what's the stage of the

574
00:23:06,419 --> 00:23:07,340
project

575
00:23:07,340 --> 00:23:10,320
as you all know at cncf there's a

576
00:23:10,320 --> 00:23:11,880
there's a pecking order right you

577
00:23:11,880 --> 00:23:13,440
eventually want to get to a graduated

578
00:23:13,440 --> 00:23:15,659
stage we are now in sandbox right we

579
00:23:15,659 --> 00:23:18,059
submit it for sandbox so we really have

580
00:23:18,059 --> 00:23:19,559
been looking for the community kind of

581
00:23:19,559 --> 00:23:21,600
help us you know we need the right kind

582
00:23:21,600 --> 00:23:23,640
of sponsorship from the community to

583
00:23:23,640 --> 00:23:25,919
move up the ladder right so help us out

584
00:23:25,919 --> 00:23:28,620
there we're right now in sandbox getting

585
00:23:28,620 --> 00:23:30,360
in the sandbox application for sandbox

586
00:23:30,360 --> 00:23:32,820
we had a we had to climb up that ladder

587
00:23:32,820 --> 00:23:34,919
right it takes sometimes years to climb

588
00:23:34,919 --> 00:23:37,500
up so that's the first question the

589
00:23:37,500 --> 00:23:39,059
second question is what's a performance

590
00:23:39,059 --> 00:23:40,980
hit so

591
00:23:40,980 --> 00:23:43,140
um there's typically a

592
00:23:43,140 --> 00:23:45,419
about a when you saw the whole thing in

593
00:23:45,419 --> 00:23:48,059
action right me typing in the command as

594
00:23:48,059 --> 00:23:50,100
a user is imperceptible but you can

595
00:23:50,100 --> 00:23:51,539
measure it it's typically in

596
00:23:51,539 --> 00:23:54,419
milliseconds it's in milliseconds for

597
00:23:54,419 --> 00:23:56,760
the first time when the user is

598
00:23:56,760 --> 00:23:57,960
authenticated

599
00:23:57,960 --> 00:24:00,840
and the service account is injected on

600
00:24:00,840 --> 00:24:02,580
the downstream cluster that's about a

601
00:24:02,580 --> 00:24:04,320
millisecond needed that is to

602
00:24:04,320 --> 00:24:06,900
disorchestrate that but typically the

603
00:24:06,900 --> 00:24:08,760
user never notices anything

604
00:24:08,760 --> 00:24:10,799
uh by the time you think about the

605
00:24:10,799 --> 00:24:12,059
command you're going to type it's all

606
00:24:12,059 --> 00:24:17,280
done right so and you can run these

607
00:24:17,280 --> 00:24:19,200
proxies anywhere in the world so what we

608
00:24:19,200 --> 00:24:21,000
see organizations do is say hey I'm

609
00:24:21,000 --> 00:24:23,240
going to run my perilous access server

610
00:24:23,240 --> 00:24:25,559
closer to my clusters because really

611
00:24:25,559 --> 00:24:28,320
comes down to distance you can't beat

612
00:24:28,320 --> 00:24:30,659
the loss of physics right so if you run

613
00:24:30,659 --> 00:24:32,640
the perilous access server closer to

614
00:24:32,640 --> 00:24:33,419
your

615
00:24:33,419 --> 00:24:36,299
clusters or closer to your users I think

616
00:24:36,299 --> 00:24:38,400
that's the decision you got to make

617
00:24:38,400 --> 00:24:40,860
yeah yes

618
00:24:40,860 --> 00:24:43,320
right thinking that perilous proxy node

619
00:24:43,320 --> 00:24:44,520
has to have

620
00:24:44,520 --> 00:24:46,559
admin credits to all clusters so that it

621
00:24:46,559 --> 00:24:49,260
can dynamically generate the buyback and

622
00:24:49,260 --> 00:24:53,120
if so is there any roadmap

623
00:24:55,440 --> 00:24:57,179
yes good question I'll repeat it because

624
00:24:57,179 --> 00:24:59,340
I'm sure others couldn't hear

625
00:24:59,340 --> 00:25:01,620
um so there are twofold questions one is

626
00:25:01,620 --> 00:25:04,740
uh does the perilous access manager need

627
00:25:04,740 --> 00:25:07,620
cluster right privileges to do its job

628
00:25:07,620 --> 00:25:10,020
and number two is is that a plan to do a

629
00:25:10,020 --> 00:25:11,940
third party pen test the answer is yes

630
00:25:11,940 --> 00:25:13,640
to both

631
00:25:13,640 --> 00:25:16,200
the the third party pen test kind of

632
00:25:16,200 --> 00:25:18,299
happens naturally as part of the cncf

633
00:25:18,299 --> 00:25:20,640
process every project is put through a

634
00:25:20,640 --> 00:25:23,460
microscope right as it happens I think

635
00:25:23,460 --> 00:25:26,279
that's why we encourage every project to

636
00:25:26,279 --> 00:25:29,220
go through the cncf you know governance

637
00:25:29,220 --> 00:25:30,120
model

638
00:25:30,120 --> 00:25:32,940
yeah yeah perfect thank you any other

639
00:25:32,940 --> 00:25:35,240
questions

640
00:25:35,460 --> 00:25:37,200
yeah reach out to us on slack we're

641
00:25:37,200 --> 00:25:38,820
pretty active on slack

642
00:25:38,820 --> 00:25:42,240
um uh I think I just look for parallels

643
00:25:42,240 --> 00:25:43,620
I'm sure you'll find it

644
00:25:43,620 --> 00:25:45,270
thank you

645
00:25:45,270 --> 00:25:49,329
[Applause]

