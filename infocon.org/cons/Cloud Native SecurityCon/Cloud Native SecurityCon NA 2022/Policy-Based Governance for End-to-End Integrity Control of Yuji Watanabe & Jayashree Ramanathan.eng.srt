1
00:00:00,719 --> 00:00:03,959
hi everyone can you hear me

2
00:00:03,959 --> 00:00:06,600
okay thank you very much for attending

3
00:00:06,600 --> 00:00:08,700
our session

4
00:00:08,700 --> 00:00:10,760
um

5
00:00:13,440 --> 00:00:15,780
uh today Yuji and I are going to talk

6
00:00:15,780 --> 00:00:18,240
about uh how to apply policy based

7
00:00:18,240 --> 00:00:20,400
governance and ensure the Integrity of

8
00:00:20,400 --> 00:00:22,560
policies so I'll be talking a little bit

9
00:00:22,560 --> 00:00:24,840
about what we mean by policy-based

10
00:00:24,840 --> 00:00:26,279
governance and the concepts and stuff

11
00:00:26,279 --> 00:00:29,039
and then ug will go into more details on

12
00:00:29,039 --> 00:00:30,900
what is the approach to enable integrity

13
00:00:30,900 --> 00:00:33,600
and also do a short demo

14
00:00:33,600 --> 00:00:35,780
foreign

15
00:00:41,879 --> 00:00:44,760
just to quickly introduce ourselves

16
00:00:44,760 --> 00:00:46,500
um I am a distinguished engineer at Red

17
00:00:46,500 --> 00:00:48,780
Hat and have been working in the

18
00:00:48,780 --> 00:00:50,399
security compliance and governance space

19
00:00:50,399 --> 00:00:54,480
for many years now and ug here is at IBM

20
00:00:54,480 --> 00:00:56,760
research in Tokyo and he has also been

21
00:00:56,760 --> 00:00:58,559
working in the security space for a long

22
00:00:58,559 --> 00:01:00,739
time

23
00:01:04,140 --> 00:01:06,600
okay let me um talk a little bit about

24
00:01:06,600 --> 00:01:08,400
what do we mean by policy-based

25
00:01:08,400 --> 00:01:10,140
governance and what are the various

26
00:01:10,140 --> 00:01:11,700
aspects about it

27
00:01:11,700 --> 00:01:13,740
so first of all you know why do we need

28
00:01:13,740 --> 00:01:15,680
it so if you think about

29
00:01:15,680 --> 00:01:18,780
kubernetes-based Cloud platform uh

30
00:01:18,780 --> 00:01:21,180
Enterprises that use it have to operate

31
00:01:21,180 --> 00:01:23,580
it to meet various controls uh

32
00:01:23,580 --> 00:01:25,259
Enterprise standards both internal

33
00:01:25,259 --> 00:01:28,619
standards that their CSO sets as well as

34
00:01:28,619 --> 00:01:30,540
external standards like Regulatory

35
00:01:30,540 --> 00:01:33,420
Compliance standards PCI HIPAA Etc

36
00:01:33,420 --> 00:01:34,740
so

37
00:01:34,740 --> 00:01:37,560
and you want to be able to accomplish uh

38
00:01:37,560 --> 00:01:39,560
Meeting those goals with minimal

39
00:01:39,560 --> 00:01:41,640
operational cost

40
00:01:41,640 --> 00:01:44,400
so applying the policy based governance

41
00:01:44,400 --> 00:01:46,619
approach enables you to do that because

42
00:01:46,619 --> 00:01:48,020
you are

43
00:01:48,020 --> 00:01:50,579
providing a more automated way of

44
00:01:50,579 --> 00:01:52,560
accomplishing these goals

45
00:01:52,560 --> 00:01:54,780
so what do we really mean by policy

46
00:01:54,780 --> 00:01:57,600
based governance what we mean is that if

47
00:01:57,600 --> 00:02:00,360
you look at a particular Cloud platform

48
00:02:00,360 --> 00:02:02,540
that is being managed whether it is

49
00:02:02,540 --> 00:02:04,799
on-prem or whether it is hosted in the

50
00:02:04,799 --> 00:02:06,840
cloud there are various personas

51
00:02:06,840 --> 00:02:09,598
involved in in using that platform you

52
00:02:09,598 --> 00:02:10,800
know there are application developers

53
00:02:10,800 --> 00:02:12,060
who are running workloads on that

54
00:02:12,060 --> 00:02:14,040
platform there are site reliability

55
00:02:14,040 --> 00:02:16,140
engineers and administrators who need to

56
00:02:16,140 --> 00:02:18,480
operate it to meet security resiliency

57
00:02:18,480 --> 00:02:20,819
and software engineering standards and

58
00:02:20,819 --> 00:02:22,860
there are secups for folks who are

59
00:02:22,860 --> 00:02:24,780
worried about the security aspects of

60
00:02:24,780 --> 00:02:26,400
the platform and there are compliance

61
00:02:26,400 --> 00:02:28,920
Engineers who have to produce evidence

62
00:02:28,920 --> 00:02:30,360
for Audits and they're dealing with

63
00:02:30,360 --> 00:02:32,459
Auditors for various Regulatory

64
00:02:32,459 --> 00:02:34,319
Compliance standards and then you also

65
00:02:34,319 --> 00:02:37,379
have the CSO who also sets their own

66
00:02:37,379 --> 00:02:39,120
standards as well so you have to deal

67
00:02:39,120 --> 00:02:41,879
with the CSO security Architects as well

68
00:02:41,879 --> 00:02:44,280
so you are you have all these different

69
00:02:44,280 --> 00:02:47,580
personas who are involved and and how do

70
00:02:47,580 --> 00:02:49,379
we ensure that those personas are

71
00:02:49,379 --> 00:02:51,900
collaborating on a more day-to-day basis

72
00:02:51,900 --> 00:02:53,640
as opposed to just scrambling during

73
00:02:53,640 --> 00:02:57,060
Audits and so on so that's really what

74
00:02:57,060 --> 00:02:59,220
um policy-based governance allows you to

75
00:02:59,220 --> 00:03:02,580
accomplish and let's talk about how the

76
00:03:02,580 --> 00:03:05,400
how is how do we do this is you

77
00:03:05,400 --> 00:03:08,220
represent best practices as policies

78
00:03:08,220 --> 00:03:11,400
and these policies are stored in a

79
00:03:11,400 --> 00:03:14,040
repository like git and they are managed

80
00:03:14,040 --> 00:03:15,720
just like source code and they are

81
00:03:15,720 --> 00:03:17,879
deployed using github's methodology

82
00:03:17,879 --> 00:03:21,180
and then uh any violations are detected

83
00:03:21,180 --> 00:03:23,459
and routed to you know instant

84
00:03:23,459 --> 00:03:25,680
management tools so that you can either

85
00:03:25,680 --> 00:03:27,360
automatically remediate those violations

86
00:03:27,360 --> 00:03:29,760
or you you at least have automated

87
00:03:29,760 --> 00:03:32,159
opening of service tickets and so on and

88
00:03:32,159 --> 00:03:33,959
then you can also fine-tune the policies

89
00:03:33,959 --> 00:03:37,860
to based on the day-to-day experience so

90
00:03:37,860 --> 00:03:39,659
that's really what we mean

91
00:03:39,659 --> 00:03:42,120
um in terms of how we want to do this

92
00:03:42,120 --> 00:03:44,519
and then what are the benefits of taking

93
00:03:44,519 --> 00:03:47,220
this approach one of the key benefits is

94
00:03:47,220 --> 00:03:48,900
Radio production of the operational cost

95
00:03:48,900 --> 00:03:51,360
because if you think about it

96
00:03:51,360 --> 00:03:53,040
um the people who are really managing

97
00:03:53,040 --> 00:03:54,900
the platform are necessarily not the

98
00:03:54,900 --> 00:03:57,420
experts in all aspects so they may not

99
00:03:57,420 --> 00:03:58,980
know you know exactly how to enable

100
00:03:58,980 --> 00:04:01,200
various security controls or resiliency

101
00:04:01,200 --> 00:04:03,060
controls and so on by actually

102
00:04:03,060 --> 00:04:05,340
representing those best practices as

103
00:04:05,340 --> 00:04:07,260
policies that are managed like source

104
00:04:07,260 --> 00:04:09,840
code now you can have the correct smes

105
00:04:09,840 --> 00:04:12,180
actually authoring those policies and

106
00:04:12,180 --> 00:04:14,299
reviewing them and approving them in git

107
00:04:14,299 --> 00:04:17,639
so that is how it the operational cost

108
00:04:17,639 --> 00:04:19,858
for the SRE and the admins are reduced

109
00:04:19,858 --> 00:04:22,139
and it also by taking this approach

110
00:04:22,139 --> 00:04:23,520
you're also

111
00:04:23,520 --> 00:04:27,360
doing this on a day-to-day basis so that

112
00:04:27,360 --> 00:04:30,300
you have a continuous view of how your

113
00:04:30,300 --> 00:04:31,740
security posture is how is your

114
00:04:31,740 --> 00:04:33,840
compliance posture by taking this

115
00:04:33,840 --> 00:04:35,639
Approach at least for the controls for

116
00:04:35,639 --> 00:04:37,440
which you have enabled this

117
00:04:37,440 --> 00:04:40,440
and um and as I mentioned earlier it's

118
00:04:40,440 --> 00:04:42,180
it's really important for the day-to-day

119
00:04:42,180 --> 00:04:43,560
collaboration to happen among the

120
00:04:43,560 --> 00:04:45,840
various personas because typically you

121
00:04:45,840 --> 00:04:48,300
know today what happens is the

122
00:04:48,300 --> 00:04:50,520
collaboration happens kind of

123
00:04:50,520 --> 00:04:52,080
when there is an audit you know and

124
00:04:52,080 --> 00:04:53,520
you're getting ready to prepare for the

125
00:04:53,520 --> 00:04:54,600
audit that's when you know everybody

126
00:04:54,600 --> 00:04:56,220
starts talking and you know trying to

127
00:04:56,220 --> 00:04:58,740
figure out what to do right but if you

128
00:04:58,740 --> 00:05:00,479
kind of had that collaboration happening

129
00:05:00,479 --> 00:05:02,520
through the github's methodology on a

130
00:05:02,520 --> 00:05:04,139
day-to-day basis then it becomes more

131
00:05:04,139 --> 00:05:05,820
efficient and you can really achieve the

132
00:05:05,820 --> 00:05:08,040
goal of continuous security and audit

133
00:05:08,040 --> 00:05:10,460
readiness

134
00:05:10,860 --> 00:05:13,440
so as part of the kubernetes policy work

135
00:05:13,440 --> 00:05:16,020
group uh we have we last year published

136
00:05:16,020 --> 00:05:18,180
a white paper on policy management which

137
00:05:18,180 --> 00:05:20,460
had this architecture that talks about

138
00:05:20,460 --> 00:05:23,460
the various uh building blocks that you

139
00:05:23,460 --> 00:05:25,259
need the policy Administration point is

140
00:05:25,259 --> 00:05:27,780
where the policies uh get pulled in and

141
00:05:27,780 --> 00:05:29,340
deployed across the various managed

142
00:05:29,340 --> 00:05:31,380
clusters and then on the managed

143
00:05:31,380 --> 00:05:33,840
clusters you have the policy decision

144
00:05:33,840 --> 00:05:35,699
Point as well as the various policy

145
00:05:35,699 --> 00:05:37,500
engines which act as policy enforcement

146
00:05:37,500 --> 00:05:39,660
points that can actually apply those

147
00:05:39,660 --> 00:05:42,000
various policies so you can look up our

148
00:05:42,000 --> 00:05:43,560
white paper there and we also did a

149
00:05:43,560 --> 00:05:46,259
panel session last year at kubecon and

150
00:05:46,259 --> 00:05:47,880
we're doing another session this year

151
00:05:47,880 --> 00:05:50,699
Anka here is in the room uh she's part

152
00:05:50,699 --> 00:05:53,160
of that activity and uh come and see us

153
00:05:53,160 --> 00:05:54,660
at kubecon we are going to have a

154
00:05:54,660 --> 00:05:57,240
follow-up panel session on this topic

155
00:05:57,240 --> 00:05:59,340
and then I also wanted to highlight that

156
00:05:59,340 --> 00:06:02,699
in terms of applying this approach we do

157
00:06:02,699 --> 00:06:04,979
have a open cluster management cncf

158
00:06:04,979 --> 00:06:07,560
sandbox project that has the building

159
00:06:07,560 --> 00:06:09,539
blocks needed to apply the policy-based

160
00:06:09,539 --> 00:06:12,240
governance approach and uh it has this

161
00:06:12,240 --> 00:06:14,280
policy add-on component that enables

162
00:06:14,280 --> 00:06:17,160
that capability and some key aspects

163
00:06:17,160 --> 00:06:18,960
there are the ability to have

164
00:06:18,960 --> 00:06:22,319
templatized policies so that you can for

165
00:06:22,319 --> 00:06:23,880
Edge scalability you don't have to

166
00:06:23,880 --> 00:06:25,800
deploy that many policies if you need to

167
00:06:25,800 --> 00:06:27,620
customize things on specific clusters

168
00:06:27,620 --> 00:06:30,360
and it also has this capability called

169
00:06:30,360 --> 00:06:33,000
policy generator that allows you to take

170
00:06:33,000 --> 00:06:37,740
existing policies whether it is oppa or

171
00:06:37,740 --> 00:06:40,440
um Cubano and so on and then and even

172
00:06:40,440 --> 00:06:42,300
just regular kubernetes configuration

173
00:06:42,300 --> 00:06:45,380
and convert them to apply

174
00:06:45,380 --> 00:06:48,900
compliance and other metadata to uh

175
00:06:48,900 --> 00:06:51,360
deploy them to the managed clusters and

176
00:06:51,360 --> 00:06:52,680
then we also have this concept called

177
00:06:52,680 --> 00:06:54,600
policy sets that allow you allows you to

178
00:06:54,600 --> 00:06:56,639
grow policies for ease of management

179
00:06:56,639 --> 00:06:58,919
whether you know you can group policies

180
00:06:58,919 --> 00:07:02,100
by peps or you can group policies based

181
00:07:02,100 --> 00:07:03,840
on specific aspects like security

182
00:07:03,840 --> 00:07:05,759
residency Etc

183
00:07:05,759 --> 00:07:07,979
we also have a policy collection repo

184
00:07:07,979 --> 00:07:10,139
where we invite Community collaboration

185
00:07:10,139 --> 00:07:13,080
to build out these policies and so take

186
00:07:13,080 --> 00:07:14,639
a look at that as well

187
00:07:14,639 --> 00:07:15,900
so

188
00:07:15,900 --> 00:07:18,900
with this approach the key is since now

189
00:07:18,900 --> 00:07:20,340
we are

190
00:07:20,340 --> 00:07:24,000
managing best practices as policies and

191
00:07:24,000 --> 00:07:25,500
you are driving the desired

192
00:07:25,500 --> 00:07:27,419
configuration State on your clusters

193
00:07:27,419 --> 00:07:30,000
using this policies based approach

194
00:07:30,000 --> 00:07:32,039
it then policies become very critical

195
00:07:32,039 --> 00:07:34,319
because now they can actually set how

196
00:07:34,319 --> 00:07:36,300
your clusters are operating so that is

197
00:07:36,300 --> 00:07:39,000
why the Integrity of policies is

198
00:07:39,000 --> 00:07:40,979
extremely important because it is a very

199
00:07:40,979 --> 00:07:42,780
powerful mechanism so I'm going to turn

200
00:07:42,780 --> 00:07:44,639
it over to ug so he can take us through

201
00:07:44,639 --> 00:07:47,099
the details of how do we apply Integrity

202
00:07:47,099 --> 00:07:47,880
Etc

203
00:07:47,880 --> 00:07:50,539
thank you

204
00:07:56,340 --> 00:07:59,639
okay hi I'm Yoji Watanabe from I am

205
00:07:59,639 --> 00:08:03,000
research so so the as Jay as I mentioned

206
00:08:03,000 --> 00:08:06,120
that polishi is really important piece

207
00:08:06,120 --> 00:08:08,580
so the Integrity of policy is really

208
00:08:08,580 --> 00:08:10,259
important if the pollution is

209
00:08:10,259 --> 00:08:13,620
compromised the total cluster hurts the

210
00:08:13,620 --> 00:08:17,639
damage so the approach to protects the

211
00:08:17,639 --> 00:08:21,300
policy is a signature so by using

212
00:08:21,300 --> 00:08:24,919
signature we can allow us to check the

213
00:08:24,919 --> 00:08:29,580
Polish Integrity uh and uh and uh

214
00:08:29,580 --> 00:08:33,599
control the the policy who can Define

215
00:08:33,599 --> 00:08:36,779
the policy but the question is the

216
00:08:36,779 --> 00:08:39,719
policy this is a policy for governing

217
00:08:39,719 --> 00:08:40,740
the

218
00:08:40,740 --> 00:08:44,520
total Kubota system so the question is

219
00:08:44,520 --> 00:08:48,180
how we can use this pollution content to

220
00:08:48,180 --> 00:08:51,060
enable the Integrity of the policy that

221
00:08:51,060 --> 00:08:53,700
is the question and covering I am trying

222
00:08:53,700 --> 00:08:55,740
to cover the English tool

223
00:08:55,740 --> 00:08:58,459
so that

224
00:08:59,459 --> 00:09:01,640
foreign

225
00:09:01,980 --> 00:09:05,360
okay I know

226
00:09:09,120 --> 00:09:11,700
so the approach is like this so the

227
00:09:11,700 --> 00:09:15,240
first policy is signed I will explain

228
00:09:15,240 --> 00:09:17,880
how the policy is signed as the policy

229
00:09:17,880 --> 00:09:20,640
basically signs then it's delivered but

230
00:09:20,640 --> 00:09:24,300
to the heart Hub cluster then it's

231
00:09:24,300 --> 00:09:27,180
deployed to the managed good stuff and

232
00:09:27,180 --> 00:09:29,760
on the manage cluster we put the

233
00:09:29,760 --> 00:09:32,120
admission controller to check the

234
00:09:32,120 --> 00:09:34,620
signature of the policy then if the

235
00:09:34,620 --> 00:09:38,220
policy is modified the admission of the

236
00:09:38,220 --> 00:09:39,660
policy is blocked

237
00:09:39,660 --> 00:09:42,720
and so this is a mechanism of the

238
00:09:42,720 --> 00:09:44,880
overall approach of the protecting the

239
00:09:44,880 --> 00:09:46,019
integrity

240
00:09:46,019 --> 00:09:48,680
so the

241
00:09:58,760 --> 00:10:01,800
okay so that this is policy signing so

242
00:10:01,800 --> 00:10:06,060
actually the uh how we can can we sign

243
00:10:06,060 --> 00:10:09,420
the parachute polish the tool is

244
00:10:09,420 --> 00:10:12,420
available on the sixth uh six structure

245
00:10:12,420 --> 00:10:16,860
that is called a k8s manifest62 this is

246
00:10:16,860 --> 00:10:20,580
a works as a program for the qctl

247
00:10:20,580 --> 00:10:24,060
command and by using this command some

248
00:10:24,060 --> 00:10:26,220
and if you run this command the

249
00:10:26,220 --> 00:10:28,760
signature annotation is attached on the

250
00:10:28,760 --> 00:10:33,200
policy so this is a encoded

251
00:10:33,200 --> 00:10:36,440
message message body and the signature

252
00:10:36,440 --> 00:10:40,260
encoded by a signature so this is a

253
00:10:40,260 --> 00:10:44,360
signing mechanism so same

254
00:10:51,480 --> 00:10:52,740
okay

255
00:10:52,740 --> 00:10:56,399
I I've attacked this okay

256
00:10:56,399 --> 00:11:00,600
okay so the enforcement site is uh we

257
00:11:00,600 --> 00:11:03,540
use admission controller the we actually

258
00:11:03,540 --> 00:11:05,880
uh published the project called

259
00:11:05,880 --> 00:11:07,980
Integrity Shield this is a admission

260
00:11:07,980 --> 00:11:11,880
contour for the signature in manifest

261
00:11:11,880 --> 00:11:14,519
signature and this works with Opa

262
00:11:14,519 --> 00:11:16,579
gatekeeper and

263
00:11:16,579 --> 00:11:19,140
provide it provides a web hack API

264
00:11:19,140 --> 00:11:23,339
background and also the recently in the

265
00:11:23,339 --> 00:11:24,440
latest release

266
00:11:24,440 --> 00:11:27,839
we worked with Cabernet team to enable

267
00:11:27,839 --> 00:11:30,480
this emo signing capab signature

268
00:11:30,480 --> 00:11:32,459
verification capability or keyboard

269
00:11:32,459 --> 00:11:35,940
so the by using the this yamuna manifest

270
00:11:35,940 --> 00:11:40,320
signature verification uh enforcement we

271
00:11:40,320 --> 00:11:42,740
can block the admission of the policy

272
00:11:42,740 --> 00:11:46,680
which is compromised or even after the

273
00:11:46,680 --> 00:11:50,220
admissions this tool can be used to

274
00:11:50,220 --> 00:11:55,200
check the the polishes in the cluster so

275
00:11:55,200 --> 00:11:58,260
it continuously so the

276
00:11:58,260 --> 00:12:01,620
this is a enforcement mechanism

277
00:12:01,620 --> 00:12:02,940
thank you

278
00:12:02,940 --> 00:12:07,320
and but uh by the question is how this

279
00:12:07,320 --> 00:12:10,980
mechanism can be deployed can be enabled

280
00:12:10,980 --> 00:12:12,500
on the

281
00:12:12,500 --> 00:12:16,019
right number of the managed cluster so

282
00:12:16,019 --> 00:12:18,240
for deploying the uh this admission

283
00:12:18,240 --> 00:12:22,200
control Integrity sheet we use policy so

284
00:12:22,200 --> 00:12:25,440
actually the Integrity Shield policy is

285
00:12:25,440 --> 00:12:27,420
used to deploy the Integrity Shield

286
00:12:27,420 --> 00:12:29,940
admission control on the managed request

287
00:12:29,940 --> 00:12:32,940
tab then and also we have the two

288
00:12:32,940 --> 00:12:36,060
different policy called one is for the

289
00:12:36,060 --> 00:12:38,700
detecting the uh

290
00:12:38,700 --> 00:12:42,300
uh deny admission events so we can

291
00:12:42,300 --> 00:12:44,040
detect the

292
00:12:44,040 --> 00:12:46,380
what kind of the admission request is

293
00:12:46,380 --> 00:12:48,779
actually blocked with uh

294
00:12:48,779 --> 00:12:53,820
by because of the bad signature

295
00:12:53,820 --> 00:12:56,459
and we have another mechanism called

296
00:12:56,459 --> 00:12:59,459
Observer policy so it works with it with

297
00:12:59,459 --> 00:13:03,060
Shield to check the existing or existing

298
00:13:03,060 --> 00:13:05,000
resources uh

299
00:13:05,000 --> 00:13:09,540
matching with a policy so so by using

300
00:13:09,540 --> 00:13:11,480
these three polishes

301
00:13:11,480 --> 00:13:15,120
these pushes are deployed by the ocean

302
00:13:15,120 --> 00:13:17,660
mechanism then the management

303
00:13:17,660 --> 00:13:20,279
Integrity of the policy is protected on

304
00:13:20,279 --> 00:13:22,860
the managed cost

305
00:13:22,860 --> 00:13:27,860
and this is a example so the first

306
00:13:27,860 --> 00:13:32,160
DC if the policy this is a command to

307
00:13:32,160 --> 00:13:34,380
check the

308
00:13:34,380 --> 00:13:37,440
policy on the cluster so our policy

309
00:13:37,440 --> 00:13:39,959
three purchase Integrity worksheet event

310
00:13:39,959 --> 00:13:43,860
purchase all the state is compliant then

311
00:13:43,860 --> 00:13:45,899
uh

312
00:13:45,899 --> 00:13:49,019
I think could you

313
00:13:49,019 --> 00:13:50,899
okay so then

314
00:13:50,899 --> 00:13:55,320
then let's assume the uh

315
00:13:55,320 --> 00:13:59,100
we create some sample policy so sample

316
00:13:59,100 --> 00:14:01,320
policy is a

317
00:14:01,320 --> 00:14:05,940
is not signed so in then I try to deploy

318
00:14:05,940 --> 00:14:07,980
this sample position to the Target first

319
00:14:07,980 --> 00:14:12,899
step I have but if it's lonely to have

320
00:14:12,899 --> 00:14:16,440
then have pushed that the zip policy to

321
00:14:16,440 --> 00:14:20,100
the managed cluster but protection at

322
00:14:20,100 --> 00:14:23,100
the managed to Cluster is interpretation

323
00:14:23,100 --> 00:14:25,279
it actually detects the

324
00:14:25,279 --> 00:14:30,200
signature vibration and reports a comp

325
00:14:30,200 --> 00:14:34,500
reports non-compliant so in this case so

326
00:14:34,500 --> 00:14:37,320
integration events policy reports the

327
00:14:37,320 --> 00:14:40,920
compliance non-components this means

328
00:14:40,920 --> 00:14:44,820
some deny event is coming to the cluster

329
00:14:44,820 --> 00:14:47,579
so this is what this is because the

330
00:14:47,579 --> 00:14:51,060
sample position is does not have the

331
00:14:51,060 --> 00:14:53,279
proper signature

332
00:14:53,279 --> 00:14:57,120
so if the signature is later if the

333
00:14:57,120 --> 00:14:59,180
signature is properly attached then

334
00:14:59,180 --> 00:15:01,860
admitted admission request coming again

335
00:15:01,860 --> 00:15:07,320
then the state becomes the compliance

336
00:15:09,540 --> 00:15:14,899
okay so so for that uh use uh

337
00:15:14,899 --> 00:15:20,220
six to a zero cubicity program to create

338
00:15:20,220 --> 00:15:25,740
the Emma signing them uprise the policy

339
00:15:25,740 --> 00:15:30,360
to the roster so the

340
00:15:30,360 --> 00:15:33,779
so these two could generate the

341
00:15:33,779 --> 00:15:37,279
or attach the adaptation to the original

342
00:15:37,279 --> 00:15:40,800
policy so that this is attached the

343
00:15:40,800 --> 00:15:44,880
adult new yamul file which which has

344
00:15:44,880 --> 00:15:47,100
annotated another signature and

345
00:15:47,100 --> 00:15:51,600
annotation then in this case it's coming

346
00:15:51,600 --> 00:15:55,139
to the cluster then it the policy

347
00:15:55,139 --> 00:15:57,600
becomes the compliant

348
00:15:57,600 --> 00:16:00,019
okay

349
00:16:00,600 --> 00:16:05,060
okay so this I talked about how the

350
00:16:05,060 --> 00:16:08,399
signature enforcement and the signature

351
00:16:08,399 --> 00:16:11,220
purification can be enabled by using the

352
00:16:11,220 --> 00:16:14,040
policy mechanism another question is

353
00:16:14,040 --> 00:16:17,279
that if the one first step has

354
00:16:17,279 --> 00:16:18,860
is is

355
00:16:18,860 --> 00:16:23,339
used for the signing uh something so for

356
00:16:23,339 --> 00:16:26,040
example actually this policy signing so

357
00:16:26,040 --> 00:16:27,959
in that case the signature must be

358
00:16:27,959 --> 00:16:30,720
delivered to that cluster so this

359
00:16:30,720 --> 00:16:33,240
approach this this is a proposal one

360
00:16:33,240 --> 00:16:37,199
proposed approach to use both connected

361
00:16:37,199 --> 00:16:42,000
to the hub cluster then the the series

362
00:16:42,000 --> 00:16:44,339
signing key is stored in the board then

363
00:16:44,339 --> 00:16:47,399
by using policy mechanism the key is

364
00:16:47,399 --> 00:16:50,040
delivered through the half by about this

365
00:16:50,040 --> 00:16:53,519
delivery is done by the encrypted

366
00:16:53,519 --> 00:16:57,300
inclusion so the key is securely

367
00:16:57,300 --> 00:17:01,079
delivered to the Target process so

368
00:17:01,079 --> 00:17:04,980
by using this the key is not stored in

369
00:17:04,980 --> 00:17:09,119
this cluster directory and no need to

370
00:17:09,119 --> 00:17:11,699
manage the direct connection between the

371
00:17:11,699 --> 00:17:14,939
bolt and the cluster so how can we use a

372
00:17:14,939 --> 00:17:17,520
kind of the secret delivery Distribution

373
00:17:17,520 --> 00:17:21,540
Hub for uh Distributing the

374
00:17:21,540 --> 00:17:23,579
the secret to the Target question like

375
00:17:23,579 --> 00:17:27,419
siding key so the for this we again we

376
00:17:27,419 --> 00:17:30,860
use the policy mechanism

377
00:17:31,740 --> 00:17:35,640
so the uh design is like this so the uh

378
00:17:35,640 --> 00:17:38,100
on the we use the external secret

379
00:17:38,100 --> 00:17:41,820
operator so which the enables us to

380
00:17:41,820 --> 00:17:45,559
bring the uh secret on the board to the

381
00:17:45,559 --> 00:17:49,919
cluster cluster secret automatically by

382
00:17:49,919 --> 00:17:52,440
using the uh that automation is provided

383
00:17:52,440 --> 00:17:56,480
by the external secret operator

384
00:17:57,799 --> 00:18:00,120
we use the Excel security for beta

385
00:18:00,120 --> 00:18:02,760
another building block is a policy

386
00:18:02,760 --> 00:18:06,780
template and it's uh we can Define the

387
00:18:06,780 --> 00:18:09,900
policy but the Polish has a template so

388
00:18:09,900 --> 00:18:12,200
some template can

389
00:18:12,200 --> 00:18:16,260
can increase some value in the policy

390
00:18:16,260 --> 00:18:19,080
and deliver to the Target we can deliver

391
00:18:19,080 --> 00:18:21,299
the value to the Target crosstalk

392
00:18:21,299 --> 00:18:23,700
securely so by combining these two

393
00:18:23,700 --> 00:18:26,100
approach we can enable the kind of

394
00:18:26,100 --> 00:18:29,700
circulated Distribution Hub idea so

395
00:18:29,700 --> 00:18:31,340
first ah

396
00:18:31,340 --> 00:18:34,140
two or two portions we use two polish

397
00:18:34,140 --> 00:18:36,900
first one is of course the policy

398
00:18:36,900 --> 00:18:40,260
template to deliver the secret on the

399
00:18:40,260 --> 00:18:42,600
Hub to the Target first step and then

400
00:18:42,600 --> 00:18:45,120
the second one is policy for the

401
00:18:45,120 --> 00:18:48,960
external Secrets uh the this is so this

402
00:18:48,960 --> 00:18:50,280
policy is

403
00:18:50,280 --> 00:18:52,440
used to create the external secret on

404
00:18:52,440 --> 00:18:55,679
the Hub cluster then uh secret District

405
00:18:55,679 --> 00:18:58,200
this this extra secret with custom

406
00:18:58,200 --> 00:19:01,679
resource is created the extra secret to

407
00:19:01,679 --> 00:19:05,160
Beta automatically rolls the key from

408
00:19:05,160 --> 00:19:07,679
from the board to the hub cross tab then

409
00:19:07,679 --> 00:19:10,559
this secret is loaded into the policy

410
00:19:10,559 --> 00:19:12,260
template then

411
00:19:12,260 --> 00:19:15,480
this is delivered in the encrypted home

412
00:19:15,480 --> 00:19:19,220
so the uh

413
00:19:20,400 --> 00:19:22,799
so the this is an example of the

414
00:19:22,799 --> 00:19:26,520
temporary policy template

415
00:19:26,520 --> 00:19:30,440
example so the this is a policy

416
00:19:30,440 --> 00:19:35,039
then here you can see the template or

417
00:19:35,039 --> 00:19:39,000
the this is have some secret on the half

418
00:19:39,000 --> 00:19:42,539
is loaded into here and but but it must

419
00:19:42,539 --> 00:19:47,160
be encrypted on the secret so it's so

420
00:19:47,160 --> 00:19:49,679
basically The Have and managed cluster

421
00:19:49,679 --> 00:19:53,160
has a common secret for encrypting the

422
00:19:53,160 --> 00:19:57,539
data so by so the template template

423
00:19:57,539 --> 00:20:00,660
engine on the Hub cluster actually loads

424
00:20:00,660 --> 00:20:03,900
the secret on the on the other half then

425
00:20:03,900 --> 00:20:07,260
encrypt the equipped and embed the value

426
00:20:07,260 --> 00:20:09,480
here so as you can see so this is

427
00:20:09,480 --> 00:20:14,220
encrypted so the value then the so

428
00:20:14,220 --> 00:20:16,740
basically this portion is delivered to

429
00:20:16,740 --> 00:20:20,780
the Target cluster so but uh

430
00:20:22,880 --> 00:20:27,240
secret because this is included then if

431
00:20:27,240 --> 00:20:29,880
this this policy encrypted policy goes

432
00:20:29,880 --> 00:20:32,220
to the manage cluster this part is

433
00:20:32,220 --> 00:20:36,600
decorative by using the common shared uh

434
00:20:36,600 --> 00:20:39,179
secret key on the on the managed cluster

435
00:20:39,179 --> 00:20:42,780
side so that's a mechanism of the point

436
00:20:42,780 --> 00:20:44,580
okay

437
00:20:44,580 --> 00:20:49,160
okay so this is a final page so we

438
00:20:49,160 --> 00:20:53,520
propose the the in the stocks as how we

439
00:20:53,520 --> 00:20:55,740
can it protect the Integrity of the

440
00:20:55,740 --> 00:21:00,120
policy uh by using the policy policy

441
00:21:00,120 --> 00:21:01,980
mechanism

442
00:21:01,980 --> 00:21:04,260
so the signing and the enforcement and

443
00:21:04,260 --> 00:21:07,799
monitoring and the key distribution is

444
00:21:07,799 --> 00:21:13,140
covered and so we have several talk

445
00:21:13,140 --> 00:21:16,020
related to the session the this this

446
00:21:16,020 --> 00:21:17,840
talk

447
00:21:17,840 --> 00:21:23,280
we in in this afternoon that we have uh

448
00:21:23,280 --> 00:21:26,840
another another session of the keyboard

449
00:21:26,840 --> 00:21:30,240
signing verification on the Cabernet

450
00:21:30,240 --> 00:21:33,179
this is a new release so this is the

451
00:21:33,179 --> 00:21:35,460
joint jointed presentation with Jim

452
00:21:35,460 --> 00:21:39,360
bargaria and the second one is a

453
00:21:39,360 --> 00:21:42,900
Jaya mentioned the policy governance

454
00:21:42,900 --> 00:21:47,159
talk is a main cubicle session and the

455
00:21:47,159 --> 00:21:49,919
last one is we are

456
00:21:49,919 --> 00:21:54,120
we talk about how this manifest signing

457
00:21:54,120 --> 00:21:56,880
and enforcement can be enabled in The

458
00:21:56,880 --> 00:21:59,700
Syndicate of scenario so that we have

459
00:21:59,700 --> 00:22:01,440
several soft so if you are interested

460
00:22:01,440 --> 00:22:04,260
please come join us

461
00:22:04,260 --> 00:22:06,919
thank you

462
00:22:16,799 --> 00:22:19,340
hi

463
00:22:19,799 --> 00:22:22,400
okay

464
00:22:29,220 --> 00:22:30,919
thank you

465
00:22:30,919 --> 00:22:33,240
I see that you are

466
00:22:33,240 --> 00:22:39,419
apply your basic technology now in

467
00:22:39,419 --> 00:22:42,419
a Synergy with other platforms that

468
00:22:42,419 --> 00:22:45,360
badly need this this capability I was

469
00:22:45,360 --> 00:22:46,679
wondering if you could share with us

470
00:22:46,679 --> 00:22:48,059
what you have next in the roadmap

471
00:22:48,059 --> 00:22:50,640
because looks fantastic

472
00:22:50,640 --> 00:22:52,820
foreign

473
00:22:53,240 --> 00:22:56,460
yeah so what we have in our roadmap so

474
00:22:56,460 --> 00:22:59,400
so what we talked about what ug talked

475
00:22:59,400 --> 00:23:01,980
in detail was how to protect policies

476
00:23:01,980 --> 00:23:04,740
with Integrity right but then the other

477
00:23:04,740 --> 00:23:08,220
talk also we expanded that work and we

478
00:23:08,220 --> 00:23:09,840
are applying it to any kubernetes

479
00:23:09,840 --> 00:23:12,059
resources so it could it could be

480
00:23:12,059 --> 00:23:15,120
application artifacts and such so so

481
00:23:15,120 --> 00:23:16,860
this is essentially a broader concept

482
00:23:16,860 --> 00:23:19,500
than that so now what we are also doing

483
00:23:19,500 --> 00:23:23,340
is to apply this for uh automation

484
00:23:23,340 --> 00:23:25,980
aspects right so you take you have

485
00:23:25,980 --> 00:23:28,620
ansible that is used for automation now

486
00:23:28,620 --> 00:23:31,620
we can also sign ansible playbooks

487
00:23:31,620 --> 00:23:33,780
because if you think about it when I

488
00:23:33,780 --> 00:23:35,159
talked about policy based governance

489
00:23:35,159 --> 00:23:37,500
when you detect a violation you want to

490
00:23:37,500 --> 00:23:39,240
be able to Auto remediate violations so

491
00:23:39,240 --> 00:23:40,919
you may kick off an automation to do it

492
00:23:40,919 --> 00:23:42,419
so how do you ensure that that

493
00:23:42,419 --> 00:23:45,059
automation is also has protected with

494
00:23:45,059 --> 00:23:48,120
Integrity so we have in fact there was a

495
00:23:48,120 --> 00:23:50,159
presentation last week I believe in

496
00:23:50,159 --> 00:23:52,460
ansible Fest where we talked about that

497
00:23:52,460 --> 00:23:55,140
protecting Integrity of ansible

498
00:23:55,140 --> 00:23:58,679
playbooks so we have we are basically

499
00:23:58,679 --> 00:24:00,659
applying this whole concept so that the

500
00:24:00,659 --> 00:24:03,120
full life cycle is protected right and

501
00:24:03,120 --> 00:24:04,500
and we want to have a consistent

502
00:24:04,500 --> 00:24:07,280
approach to do that

503
00:24:20,039 --> 00:24:22,440
okay am I correct and thank you not too

504
00:24:22,440 --> 00:24:23,820
familiar with these policies am I

505
00:24:23,820 --> 00:24:25,260
correct in thinking that say you didn't

506
00:24:25,260 --> 00:24:28,620
sign the policy you didn't protect it

507
00:24:28,620 --> 00:24:32,400
um and a person a hacker got in and uh

508
00:24:32,400 --> 00:24:34,860
modified that policy

509
00:24:34,860 --> 00:24:36,659
it's not that doing that would allow

510
00:24:36,659 --> 00:24:37,799
them to do things they otherwise

511
00:24:37,799 --> 00:24:39,720
couldn't do because our back and things

512
00:24:39,720 --> 00:24:41,940
like that would be in effect it's just

513
00:24:41,940 --> 00:24:44,640
that the management technical management

514
00:24:44,640 --> 00:24:46,799
wouldn't be notified that a policy had

515
00:24:46,799 --> 00:24:48,480
been violated so basically you'd be

516
00:24:48,480 --> 00:24:50,700
shutting down the warning system by

517
00:24:50,700 --> 00:24:52,740
changing the policy to allow something

518
00:24:52,740 --> 00:24:54,780
that management typically wouldn't let

519
00:24:54,780 --> 00:24:58,200
them do is that correct yeah okay

520
00:24:58,200 --> 00:25:01,260
yeah and I think to add to that right

521
00:25:01,260 --> 00:25:04,260
um You are essentially using policies to

522
00:25:04,260 --> 00:25:06,299
Define how your managed clusters are

523
00:25:06,299 --> 00:25:07,380
configured

524
00:25:07,380 --> 00:25:09,240
right and some of the configuration

525
00:25:09,240 --> 00:25:11,159
could be related to security and stuff

526
00:25:11,159 --> 00:25:13,380
right so

527
00:25:13,380 --> 00:25:15,900
I agree with you that you know on git

528
00:25:15,900 --> 00:25:17,880
itself where the policies are managed

529
00:25:17,880 --> 00:25:19,260
just close you still have those

530
00:25:19,260 --> 00:25:20,820
governance mechanisms around our back

531
00:25:20,820 --> 00:25:23,640
and such and this is adding another

532
00:25:23,640 --> 00:25:27,840
layer to it to ensure that by

533
00:25:27,840 --> 00:25:30,720
a mistake or you know incorrectly you

534
00:25:30,720 --> 00:25:32,100
know you're not changing some

535
00:25:32,100 --> 00:25:35,520
configuration that now results in your

536
00:25:35,520 --> 00:25:37,140
security controls not operating to the

537
00:25:37,140 --> 00:25:40,140
standards that you want right so that's

538
00:25:40,140 --> 00:25:42,380
right

539
00:25:42,900 --> 00:25:46,039
is there another question

540
00:25:52,799 --> 00:25:55,260
I guess not thank you very much for

541
00:25:55,260 --> 00:25:55,750
attending

542
00:25:55,750 --> 00:25:59,569
[Applause]

