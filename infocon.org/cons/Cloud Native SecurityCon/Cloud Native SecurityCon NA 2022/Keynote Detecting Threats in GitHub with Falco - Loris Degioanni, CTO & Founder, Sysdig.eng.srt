1
00:00:00,120 --> 00:00:02,100
good morning everyone my name is Loris

2
00:00:02,100 --> 00:00:06,000
de Gianni I'm a CTO and founder of

3
00:00:06,000 --> 00:00:10,500
sysdig sisdig is the leader in container

4
00:00:10,500 --> 00:00:14,179
kubernetes and Cloud security I'm also

5
00:00:14,179 --> 00:00:16,340
the original

6
00:00:16,340 --> 00:00:19,500
Creator and one of the maintainers of

7
00:00:19,500 --> 00:00:25,140
Falco Falco is the cncf runtime security

8
00:00:25,140 --> 00:00:27,480
tool and it's essentially the de facto

9
00:00:27,480 --> 00:00:28,800
component for runtime Security in

10
00:00:28,800 --> 00:00:30,779
kubernetes and for containers

11
00:00:30,779 --> 00:00:33,899
today we're going to talk about GitHub

12
00:00:33,899 --> 00:00:38,160
in general if I were to ask you the

13
00:00:38,160 --> 00:00:41,160
following question in in your job what

14
00:00:41,160 --> 00:00:43,980
is your most valuable asset other than

15
00:00:43,980 --> 00:00:46,579
people of course probably

16
00:00:46,579 --> 00:00:51,000
many of you would answer my source code

17
00:00:51,000 --> 00:00:52,460
and probably

18
00:00:52,460 --> 00:00:55,680
many of you I guess the majority of you

19
00:00:55,680 --> 00:00:59,399
have your source code in GitHub or in an

20
00:00:59,399 --> 00:01:01,140
in general in some kind of git

21
00:01:01,140 --> 00:01:04,260
repositories so my question at this

22
00:01:04,260 --> 00:01:08,340
point is are your repositories safe this

23
00:01:08,340 --> 00:01:10,560
is the place where your most important

24
00:01:10,560 --> 00:01:12,840
thing is this is also a prime target

25
00:01:12,840 --> 00:01:16,260
typically for attacks so there are

26
00:01:16,260 --> 00:01:18,200
several

27
00:01:18,200 --> 00:01:22,140
areas several categories of threats that

28
00:01:22,140 --> 00:01:25,020
your source code repositories are

29
00:01:25,020 --> 00:01:28,979
subject to examples pushing secrets in a

30
00:01:28,979 --> 00:01:31,320
GitHub repository this is something that

31
00:01:31,320 --> 00:01:35,240
happens routinely despite

32
00:01:35,240 --> 00:01:38,100
the checks that we put in place to to

33
00:01:38,100 --> 00:01:40,500
prevent it and countless

34
00:01:40,500 --> 00:01:44,640
uh major breaches including recent ones

35
00:01:44,640 --> 00:01:46,439
like there was a Toyota one like last

36
00:01:46,439 --> 00:01:49,439
week are caused by you know something

37
00:01:49,439 --> 00:01:52,619
members just committing a secret a

38
00:01:52,619 --> 00:01:55,259
password a key or something on a

39
00:01:55,259 --> 00:01:56,520
repository

40
00:01:56,520 --> 00:01:59,579
another example is a running GitHub

41
00:01:59,579 --> 00:02:01,439
actions with miners this is something

42
00:02:01,439 --> 00:02:04,439
that is becoming more and more of an

43
00:02:04,439 --> 00:02:07,320
issue GitHub is giving us more and more

44
00:02:07,320 --> 00:02:10,199
flexibility to complement our code

45
00:02:10,199 --> 00:02:12,720
repositories and the events that can

46
00:02:12,720 --> 00:02:14,340
happen on this code repositories with

47
00:02:14,340 --> 00:02:17,040
actions that are actually executed on a

48
00:02:17,040 --> 00:02:20,160
Computing pool that is uh of offered to

49
00:02:20,160 --> 00:02:22,379
us by by kitab of course whenever

50
00:02:22,379 --> 00:02:23,879
there's a Computing pool where you can

51
00:02:23,879 --> 00:02:27,540
execute arbitrary actions and code then

52
00:02:27,540 --> 00:02:30,780
there's a risk for somebody internal or

53
00:02:30,780 --> 00:02:35,459
external to abuse that and use it for

54
00:02:35,459 --> 00:02:38,520
things that it wasn't designed for like

55
00:02:38,520 --> 00:02:41,040
for example running GitHub miners which

56
00:02:41,040 --> 00:02:44,120
is something pretty common and it's been

57
00:02:44,120 --> 00:02:48,660
abused in a public visible way multiple

58
00:02:48,660 --> 00:02:51,900
times another example is mistakenly

59
00:02:51,900 --> 00:02:54,420
publishing a private repository you know

60
00:02:54,420 --> 00:02:56,640
that feeling when you discover that

61
00:02:56,640 --> 00:02:59,280
somebody published the wrong repository

62
00:02:59,280 --> 00:03:02,540
and your code maybe with Secrets inside

63
00:03:02,540 --> 00:03:06,140
is publicly available online

64
00:03:06,140 --> 00:03:10,019
yes GitHub asks you to confirm to type

65
00:03:10,019 --> 00:03:11,580
the name of the repository when you take

66
00:03:11,580 --> 00:03:14,040
an action like that and yes this still

67
00:03:14,040 --> 00:03:16,379
happens for example it happened to me a

68
00:03:16,379 --> 00:03:18,480
few years ago and I tell you it's not

69
00:03:18,480 --> 00:03:22,080
it's not a pleasant feeling so

70
00:03:22,080 --> 00:03:25,560
what is how can we detect

71
00:03:25,560 --> 00:03:29,840
and protect from threads like this

72
00:03:29,840 --> 00:03:33,360
one possible approach that I'm going to

73
00:03:33,360 --> 00:03:35,760
talk about in this few minutes that I

74
00:03:35,760 --> 00:03:37,739
have is using Falco as I was mentioning

75
00:03:37,739 --> 00:03:39,379
Falco is

76
00:03:39,379 --> 00:03:43,500
what I often describe as the security

77
00:03:43,500 --> 00:03:46,080
camera for modern applications Falco

78
00:03:46,080 --> 00:03:49,879
typically listens on your containerized

79
00:03:49,879 --> 00:03:52,760
kubernetes based endpoints

80
00:03:52,760 --> 00:03:55,440
it captures a bunch of signals for

81
00:03:55,440 --> 00:03:58,440
example system calls and it's a it's it

82
00:03:58,440 --> 00:04:00,720
has a detection engine that is able to

83
00:04:00,720 --> 00:04:03,480
give you alerts so it detects bad stuff

84
00:04:03,480 --> 00:04:06,299
and gives you alerts Falco traditionally

85
00:04:06,299 --> 00:04:09,239
has been designed to protect containers

86
00:04:09,239 --> 00:04:12,299
and pods and namespace and services on

87
00:04:12,299 --> 00:04:15,780
kubernetes but recently we have released

88
00:04:15,780 --> 00:04:17,760
a guitar plugin so that you can have the

89
00:04:17,760 --> 00:04:20,160
same type of real time runtime security

90
00:04:20,160 --> 00:04:23,180
that Falco is based on but for GitHub

91
00:04:23,180 --> 00:04:26,940
let's see how it works works so I

92
00:04:26,940 --> 00:04:29,460
actually have a virtual machine here

93
00:04:29,460 --> 00:04:31,919
where I'm just going to run you know my

94
00:04:31,919 --> 00:04:34,919
local copy of Falco and I run it

95
00:04:34,919 --> 00:04:37,080
configured essentially to connect to my

96
00:04:37,080 --> 00:04:39,479
test GitHub repository I can see that

97
00:04:39,479 --> 00:04:41,880
immediately Falco tells me you know that

98
00:04:41,880 --> 00:04:44,220
it's connected to the repository in fact

99
00:04:44,220 --> 00:04:48,180
if I go to my repository I can see that

100
00:04:48,180 --> 00:04:50,100
now falc automatically under the hood

101
00:04:50,100 --> 00:04:52,380
has created a webbook to collect data

102
00:04:52,380 --> 00:04:54,840
from this Repository now if I go in the

103
00:04:54,840 --> 00:04:57,180
repository and for example you know I

104
00:04:57,180 --> 00:05:00,380
have this minor action which

105
00:05:00,380 --> 00:05:04,560
uh is just you know running XM rig a

106
00:05:04,560 --> 00:05:06,840
well-known Miner and what I'm going to

107
00:05:06,840 --> 00:05:09,479
do is I'm just going to

108
00:05:09,479 --> 00:05:11,940
run this action manually in my

109
00:05:11,940 --> 00:05:14,220
repository they actually started and I

110
00:05:14,220 --> 00:05:16,740
can see that right away Falco was able

111
00:05:16,740 --> 00:05:18,660
to listen essentially to what was

112
00:05:18,660 --> 00:05:20,639
happening in that repository repository

113
00:05:20,639 --> 00:05:23,699
and tell me that a

114
00:05:23,699 --> 00:05:25,919
an action with crypto miners was

115
00:05:25,919 --> 00:05:28,139
executed and tell me the name of the

116
00:05:28,139 --> 00:05:29,820
repository the name of the file and all

117
00:05:29,820 --> 00:05:31,400
of the information that they need

118
00:05:31,400 --> 00:05:35,520
another example is uh I have you know a

119
00:05:35,520 --> 00:05:37,320
little little piece of source code in

120
00:05:37,320 --> 00:05:39,840
this repository so let me uncomment you

121
00:05:39,840 --> 00:05:42,300
know I'm

122
00:05:42,300 --> 00:05:47,400
at just committing a AWS hash in this

123
00:05:47,400 --> 00:05:49,979
repository and then let me just

124
00:05:49,979 --> 00:05:51,360
push it

125
00:05:51,360 --> 00:05:53,400
to the Repository

126
00:05:53,400 --> 00:05:56,400
and again here you see one or more

127
00:05:56,400 --> 00:05:58,380
secrets were pushed into private

128
00:05:58,380 --> 00:06:00,780
repository it's telling me the file is

129
00:06:00,780 --> 00:06:02,759
telling me the line I can you know even

130
00:06:02,759 --> 00:06:07,919
go and if I want you know browse and go

131
00:06:07,919 --> 00:06:10,860
take a look exactly where

132
00:06:10,860 --> 00:06:13,560
decline was committed in my repository

133
00:06:13,560 --> 00:06:15,419
so

134
00:06:15,419 --> 00:06:16,800
Falco

135
00:06:16,800 --> 00:06:20,880
is essentially able to dynamically do

136
00:06:20,880 --> 00:06:22,919
this for me and as you can see I get a

137
00:06:22,919 --> 00:06:25,620
reaction immediately in real time in a

138
00:06:25,620 --> 00:06:27,000
matter of few seconds so that's the

139
00:06:27,000 --> 00:06:28,979
beauty of a runtime security tool like

140
00:06:28,979 --> 00:06:31,020
Falco we are used to deploy this kind of

141
00:06:31,020 --> 00:06:33,180
runtime security tools to detect that

142
00:06:33,180 --> 00:06:35,699
somebody spawns a shell in inside one

143
00:06:35,699 --> 00:06:38,100
might pause in kubernetes but as you can

144
00:06:38,100 --> 00:06:40,979
see the process is applicable to other

145
00:06:40,979 --> 00:06:43,319
stuff as well and Falco has many plugins

146
00:06:43,319 --> 00:06:45,180
that can interface with with the

147
00:06:45,180 --> 00:06:46,740
different tools of your ecosystem to do

148
00:06:46,740 --> 00:06:49,139
this kind of detections falcos Bay is

149
00:06:49,139 --> 00:06:52,979
the only simple rule engine so I can

150
00:06:52,979 --> 00:06:54,300
actually you know these are the rules

151
00:06:54,300 --> 00:06:55,860
for example this was this is what's the

152
00:06:55,860 --> 00:06:59,100
rule uh that Falco used to detect miners

153
00:06:59,100 --> 00:07:01,199
so it's just a yaml file that they can

154
00:07:01,199 --> 00:07:03,720
go I can edit I can modify I can add my

155
00:07:03,720 --> 00:07:05,220
own rules for example here in this file

156
00:07:05,220 --> 00:07:07,860
I customized it with just a simple rule

157
00:07:07,860 --> 00:07:09,840
that uh you know the condition the text

158
00:07:09,840 --> 00:07:14,039
when a GitHub action of type star is

159
00:07:14,039 --> 00:07:15,600
being created so essentially this is

160
00:07:15,600 --> 00:07:17,280
when somebody

161
00:07:17,280 --> 00:07:19,680
started my repository so if I go here

162
00:07:19,680 --> 00:07:24,120
and I start my repository as you can see

163
00:07:24,120 --> 00:07:28,800
immediately Falco is able to detect that

164
00:07:28,800 --> 00:07:32,039
and show me in real time that I got to

165
00:07:32,039 --> 00:07:34,979
start from user El dejo so as you can

166
00:07:34,979 --> 00:07:37,080
see very easy very simple a rule is

167
00:07:37,080 --> 00:07:38,759
nothing else than a condition and the

168
00:07:38,759 --> 00:07:40,680
output that they want to see when that

169
00:07:40,680 --> 00:07:42,720
condition is met so creating GitHub

170
00:07:42,720 --> 00:07:45,180
rules for your needs is going to be very

171
00:07:45,180 --> 00:07:46,979
easy

172
00:07:46,979 --> 00:07:47,819
um

173
00:07:47,819 --> 00:07:49,280
in general

174
00:07:49,280 --> 00:07:54,620
Falco is free it's open source it's cncf

175
00:07:54,620 --> 00:07:57,900
we are looking hopefully to graduate the

176
00:07:57,900 --> 00:08:00,240
tool

177
00:08:00,240 --> 00:08:04,560
um in the next few months so I recommend

178
00:08:04,560 --> 00:08:06,599
that everybody takes the look takes a

179
00:08:06,599 --> 00:08:08,699
look it can really be helpful for this

180
00:08:08,699 --> 00:08:10,639
kind of scenario

181
00:08:10,639 --> 00:08:14,039
just one last thing we are having a

182
00:08:14,039 --> 00:08:18,660
Falco party tonight it's the fireball

183
00:08:18,660 --> 00:08:21,660
table not far from here so if you want

184
00:08:21,660 --> 00:08:24,479
to come meet Falco developers learn more

185
00:08:24,479 --> 00:08:28,080
or just socialize and have a nice drink

186
00:08:28,080 --> 00:08:31,800
with friends please join us tonight also

187
00:08:31,800 --> 00:08:35,820
this afternoon we'll have I think

188
00:08:35,820 --> 00:08:38,940
starting at 1pm a session with the Falco

189
00:08:38,940 --> 00:08:41,700
developers where you can go in these

190
00:08:41,700 --> 00:08:44,399
questions and ask your their help or

191
00:08:44,399 --> 00:08:46,560
learn the roadmap and so on so come see

192
00:08:46,560 --> 00:08:48,899
us come meet with us we're really here

193
00:08:48,899 --> 00:08:52,140
and we're really eager to meet with you

194
00:08:52,140 --> 00:08:57,260
thank you very much I have a great day

195
00:08:57,260 --> 00:09:00,480
and have a great kubecon and I will see

196
00:09:00,480 --> 00:09:02,720
you around

197
00:09:04,320 --> 00:09:06,600
there's there's one question

198
00:09:06,600 --> 00:09:09,740
1 p.m at 1pm where is the 1pm event

199
00:09:09,740 --> 00:09:12,120
which room

200
00:09:12,120 --> 00:09:14,899
I will

201
00:09:15,480 --> 00:09:19,019
everybody's looking I I I will let you

202
00:09:19,019 --> 00:09:21,500
know in a second

203
00:09:22,860 --> 00:09:25,700
thank you very much

