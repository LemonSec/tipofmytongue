1
00:00:00,240 --> 00:00:02,100
all right thank you um thanks everyone

2
00:00:02,100 --> 00:00:03,899
for coming so yeah uh what we're going

3
00:00:03,899 --> 00:00:05,640
to be talking about today uh lightning

4
00:00:05,640 --> 00:00:07,379
talk so super fast is source

5
00:00:07,379 --> 00:00:08,940
attestations with a project called get

6
00:00:08,940 --> 00:00:11,160
sign uh so a little bit about myself my

7
00:00:11,160 --> 00:00:12,540
name is Billy Lynch I'm a software

8
00:00:12,540 --> 00:00:14,580
engineer over at chingard I'm a

9
00:00:14,580 --> 00:00:16,199
maintainer for the get sign project as

10
00:00:16,199 --> 00:00:17,460
well as some other supply chain security

11
00:00:17,460 --> 00:00:19,800
projects tecton chains and I also make

12
00:00:19,800 --> 00:00:21,240
contributions to the rest of six store

13
00:00:21,240 --> 00:00:23,340
and tecton as well

14
00:00:23,340 --> 00:00:25,260
um so Source out of stations so the

15
00:00:25,260 --> 00:00:26,640
first thing we starting to talk about is

16
00:00:26,640 --> 00:00:28,800
what is an attestation you might also

17
00:00:28,800 --> 00:00:30,420
hear another word called Providence so

18
00:00:30,420 --> 00:00:32,820
what's the difference so the two terms

19
00:00:32,820 --> 00:00:34,140
here Providence we're really talking

20
00:00:34,140 --> 00:00:35,700
about sort of the who what where when

21
00:00:35,700 --> 00:00:37,860
why so these are metadata about the

22
00:00:37,860 --> 00:00:39,540
artifact where did it come from what's

23
00:00:39,540 --> 00:00:41,579
in it why is it here why do we care

24
00:00:41,579 --> 00:00:42,540
about it

25
00:00:42,540 --> 00:00:46,079
uh an attestation is the metadata itself

26
00:00:46,079 --> 00:00:48,300
isn't necessarily enough because that

27
00:00:48,300 --> 00:00:49,860
could be populated and produced by

28
00:00:49,860 --> 00:00:52,020
anyone so an attestation is really

29
00:00:52,020 --> 00:00:53,820
trying to say is it coming from someone

30
00:00:53,820 --> 00:00:55,500
that we trust is it from a trusted

31
00:00:55,500 --> 00:00:58,440
developer is it from our CI pipelines

32
00:00:58,440 --> 00:01:00,360
um so really the difference between the

33
00:01:00,360 --> 00:01:03,359
two is provenance plus some identity uh

34
00:01:03,359 --> 00:01:04,920
is is what really makes up an

35
00:01:04,920 --> 00:01:06,180
attestation and when we talk about

36
00:01:06,180 --> 00:01:08,340
identity uh usually this is where

37
00:01:08,340 --> 00:01:10,320
signatures come into play and if we're

38
00:01:10,320 --> 00:01:11,520
talking about signatures then we're

39
00:01:11,520 --> 00:01:12,780
going to be you know one of the things

40
00:01:12,780 --> 00:01:13,619
we're going to be talking about is

41
00:01:13,619 --> 00:01:16,500
sixstore so six store is a project under

42
00:01:16,500 --> 00:01:19,979
the open ssf it its goal is to make

43
00:01:19,979 --> 00:01:22,259
signing uh software artifacts easy

44
00:01:22,259 --> 00:01:24,600
whether this is images git commits

45
00:01:24,600 --> 00:01:26,640
anything part of your sort of software

46
00:01:26,640 --> 00:01:28,320
supply chain we want to make that

47
00:01:28,320 --> 00:01:30,540
signing easy and one of the really cool

48
00:01:30,540 --> 00:01:32,759
things about sigstore is it has this

49
00:01:32,759 --> 00:01:34,560
process what we call keyless signing

50
00:01:34,560 --> 00:01:36,240
which allows you to basically generate

51
00:01:36,240 --> 00:01:39,060
ephemeral keys to sign objects and

52
00:01:39,060 --> 00:01:41,520
artifacts using a certificate Authority

53
00:01:41,520 --> 00:01:43,259
called fulsio

54
00:01:43,259 --> 00:01:45,540
um and to produce signatures and

55
00:01:45,540 --> 00:01:47,040
attestations and put them into a

56
00:01:47,040 --> 00:01:49,439
transparency law called recore and what

57
00:01:49,439 --> 00:01:51,000
this lets you do is sort of offload the

58
00:01:51,000 --> 00:01:53,700
complexity of managing Keys uh to six

59
00:01:53,700 --> 00:01:55,259
door tooling

60
00:01:55,259 --> 00:01:56,520
um so that you know all you need to

61
00:01:56,520 --> 00:01:57,720
worry about is like making sure that

62
00:01:57,720 --> 00:01:58,860
those things are signed and not having

63
00:01:58,860 --> 00:02:00,899
to worry about managing gpg keys and

64
00:02:00,899 --> 00:02:03,000
rotation and stuff like that

65
00:02:03,000 --> 00:02:05,579
so one of the tools that people are sort

66
00:02:05,579 --> 00:02:06,899
of most familiar with just because it's

67
00:02:06,899 --> 00:02:08,459
been around for a little bit longer is a

68
00:02:08,459 --> 00:02:10,919
tool called cosine and cosine is really

69
00:02:10,919 --> 00:02:12,840
focused on container signing so making

70
00:02:12,840 --> 00:02:16,020
signing oci images it can also do blobs

71
00:02:16,020 --> 00:02:18,120
stuff like that very easy so cosine has

72
00:02:18,120 --> 00:02:20,280
a really Nifty command called cosine of

73
00:02:20,280 --> 00:02:22,879
test where you can actually attach

74
00:02:22,879 --> 00:02:25,560
provenance data to an image and sign it

75
00:02:25,560 --> 00:02:28,080
to make an attestation that about that

76
00:02:28,080 --> 00:02:30,000
image right so you can attach s-bombs

77
00:02:30,000 --> 00:02:32,640
you can attach hey like hey we ran this

78
00:02:32,640 --> 00:02:34,920
check on on this image and you can

79
00:02:34,920 --> 00:02:37,800
attach it in and upload it as in the

80
00:02:37,800 --> 00:02:40,140
same registry so you can see at the

81
00:02:40,140 --> 00:02:41,040
bottom here

82
00:02:41,040 --> 00:02:44,819
uh there's this dot ATT file that

83
00:02:44,819 --> 00:02:48,180
actually has the same sha within the tag

84
00:02:48,180 --> 00:02:49,680
that references the image that it's

85
00:02:49,680 --> 00:02:52,260
attesting to so this really Nifty trick

86
00:02:52,260 --> 00:02:54,060
What it lets you do is store the

87
00:02:54,060 --> 00:02:56,340
attestations in the same location right

88
00:02:56,340 --> 00:02:58,080
so if you have the ability to go fetch

89
00:02:58,080 --> 00:03:00,060
this image you also have the ability to

90
00:03:00,060 --> 00:03:01,800
go fetch this attestation

91
00:03:01,800 --> 00:03:03,780
so that's a really really useful tool

92
00:03:03,780 --> 00:03:06,180
really really powerful so one of the

93
00:03:06,180 --> 00:03:07,620
things that we were sort of thinking

94
00:03:07,620 --> 00:03:10,140
about for git sign is you know we have

95
00:03:10,140 --> 00:03:12,180
this Behavior with cosine we can add

96
00:03:12,180 --> 00:03:15,560
attestations to images but oci images

97
00:03:15,560 --> 00:03:18,420
are just one artifact one part of your

98
00:03:18,420 --> 00:03:20,879
software supply chain

99
00:03:20,879 --> 00:03:23,760
git commits are another part right the

100
00:03:23,760 --> 00:03:25,319
source that goes into your CI the source

101
00:03:25,319 --> 00:03:26,819
that goes into the images that you build

102
00:03:26,819 --> 00:03:28,800
are another artifact that you might want

103
00:03:28,800 --> 00:03:31,200
to add attestations to right

104
00:03:31,200 --> 00:03:33,480
um so the question is how what can we do

105
00:03:33,480 --> 00:03:35,159
there um you know how can we add

106
00:03:35,159 --> 00:03:37,080
attestations to repositories and make

107
00:03:37,080 --> 00:03:39,720
that easy for users

108
00:03:39,720 --> 00:03:40,860
um so as I mentioned in the beginning

109
00:03:40,860 --> 00:03:42,840
one of the projects I work on is called

110
00:03:42,840 --> 00:03:45,840
git sign so the original sort of goal

111
00:03:45,840 --> 00:03:47,459
for git sign was to make git commit

112
00:03:47,459 --> 00:03:49,680
signing easy so traditionally you'd use

113
00:03:49,680 --> 00:03:52,860
a gpg key or an SSH key to sign your

114
00:03:52,860 --> 00:03:54,540
commits but with Git sign you can

115
00:03:54,540 --> 00:03:56,459
actually use the full six store keyless

116
00:03:56,459 --> 00:03:59,400
flow and we were thinking hey can we

117
00:03:59,400 --> 00:04:01,620
apply the same sort of principle of

118
00:04:01,620 --> 00:04:04,500
cosine a test to git sign and that's

119
00:04:04,500 --> 00:04:06,180
what I sort of want to show off today so

120
00:04:06,180 --> 00:04:08,280
we have a really quick demo

121
00:04:08,280 --> 00:04:10,140
I'm just going to hop over to the GitHub

122
00:04:10,140 --> 00:04:12,120
repo here so this is just a sample repo

123
00:04:12,120 --> 00:04:14,099
that I put together so within the get

124
00:04:14,099 --> 00:04:17,040
sign repository we have um

125
00:04:17,040 --> 00:04:18,660
uh it's right now a separate binary

126
00:04:18,660 --> 00:04:20,459
we're working towards Upstream into the

127
00:04:20,459 --> 00:04:23,280
git sign binary itself a tool called git

128
00:04:23,280 --> 00:04:24,960
sign a test right so it's very much

129
00:04:24,960 --> 00:04:28,560
mirroring what cosine a test does and as

130
00:04:28,560 --> 00:04:30,300
an example here I have a few GitHub

131
00:04:30,300 --> 00:04:32,820
actions that are producing attestations

132
00:04:32,820 --> 00:04:34,740
some some things that you might want to

133
00:04:34,740 --> 00:04:37,020
attach to your Source commits right so

134
00:04:37,020 --> 00:04:38,880
this could be an s-bomb you know what

135
00:04:38,880 --> 00:04:40,380
are the transitive dependencies that are

136
00:04:40,380 --> 00:04:41,820
part of this repo that are going into my

137
00:04:41,820 --> 00:04:44,340
builds I'm going to hand wave a little

138
00:04:44,340 --> 00:04:47,460
bit here salsa source satisstation so I

139
00:04:47,460 --> 00:04:48,960
was talking right before this

140
00:04:48,960 --> 00:04:50,940
um one of the things that if you look at

141
00:04:50,940 --> 00:04:53,820
the in Todo docks the salsa docs sort of

142
00:04:53,820 --> 00:04:55,740
the concept of two-party review and have

143
00:04:55,740 --> 00:04:58,380
all my changes been reviewed by by

144
00:04:58,380 --> 00:05:00,120
someone I trust can we generate

145
00:05:00,120 --> 00:05:01,979
attestations for that and add that to

146
00:05:01,979 --> 00:05:04,259
the repository things like scorecard

147
00:05:04,259 --> 00:05:06,960
static analysis and you can extend this

148
00:05:06,960 --> 00:05:09,360
even further right fuzzing have CI tests

149
00:05:09,360 --> 00:05:10,800
ran against this what were the results

150
00:05:10,800 --> 00:05:13,199
of those CI tests these are all things

151
00:05:13,199 --> 00:05:14,820
that you might want to attach to these

152
00:05:14,820 --> 00:05:16,500
commits and put in a discoverable

153
00:05:16,500 --> 00:05:19,080
location so that other tooling knows how

154
00:05:19,080 --> 00:05:20,580
to find it and then can take advantage

155
00:05:20,580 --> 00:05:21,780
of it

156
00:05:21,780 --> 00:05:23,940
so as an example here here's the the

157
00:05:23,940 --> 00:05:27,300
s-bomb tool that ran so we're just using

158
00:05:27,300 --> 00:05:30,180
the kubernetes bomb tool so it's pretty

159
00:05:30,180 --> 00:05:31,560
simple pretty straightforward we're just

160
00:05:31,560 --> 00:05:33,180
checking out the code installing the

161
00:05:33,180 --> 00:05:35,759
bomb tool installing git sign a test uh

162
00:05:35,759 --> 00:05:38,100
we're generating the s-bomb and then all

163
00:05:38,100 --> 00:05:40,440
we're doing here is

164
00:05:40,440 --> 00:05:42,120
um adding this attestation making an

165
00:05:42,120 --> 00:05:44,340
attestation Associated commit so all

166
00:05:44,340 --> 00:05:45,780
we're doing here is we're running get

167
00:05:45,780 --> 00:05:48,060
signed a test we're giving it the file

168
00:05:48,060 --> 00:05:51,419
we're telling hey it's type spdx and

169
00:05:51,419 --> 00:05:52,860
what this is doing is it's actually

170
00:05:52,860 --> 00:05:54,960
storing the attestation in a special ref

171
00:05:54,960 --> 00:05:57,539
space within the repository itself right

172
00:05:57,539 --> 00:06:00,120
so just like branches and tags we can

173
00:06:00,120 --> 00:06:02,039
actually push and pull these custom refs

174
00:06:02,039 --> 00:06:03,960
if you're familiar with Git notes this

175
00:06:03,960 --> 00:06:05,340
actually works in a very very similar

176
00:06:05,340 --> 00:06:07,500
mechanism but this is sort of a

177
00:06:07,500 --> 00:06:10,259
different carved out space where you

178
00:06:10,259 --> 00:06:11,880
know our goal is to really make this a

179
00:06:11,880 --> 00:06:14,240
space for uh to put attestations into

180
00:06:14,240 --> 00:06:16,800
attestation data and so what we can do

181
00:06:16,800 --> 00:06:19,380
with this is just push the Repository

182
00:06:19,380 --> 00:06:21,900
and if we cut over to the repo here we

183
00:06:21,900 --> 00:06:24,479
just have you know simple repo we can

184
00:06:24,479 --> 00:06:27,660
actually go fetch the attestations this

185
00:06:27,660 --> 00:06:28,560
isn't actually going to do anything

186
00:06:28,560 --> 00:06:30,000
because I already have it cloned locally

187
00:06:30,000 --> 00:06:32,880
we can do full get things with it so we

188
00:06:32,880 --> 00:06:34,860
can actually check out uh arrest

189
00:06:34,860 --> 00:06:37,740
attestation's commits

190
00:06:37,740 --> 00:06:39,419
and so this is going to dump us into a

191
00:06:39,419 --> 00:06:41,759
folder that looks pretty gnarly but it's

192
00:06:41,759 --> 00:06:44,039
actually just structured

193
00:06:44,039 --> 00:06:44,639
um

194
00:06:44,639 --> 00:06:47,220
sort of format for hey here are all the

195
00:06:47,220 --> 00:06:48,720
commit Shaws that we have attestations

196
00:06:48,720 --> 00:06:51,840
for so if we do if we just get the

197
00:06:51,840 --> 00:06:53,400
commit Shaw for whatever's that means so

198
00:06:53,400 --> 00:06:55,139
we have this a4a

199
00:06:55,139 --> 00:06:58,860
uh so if he's CD into a4a

200
00:06:58,860 --> 00:07:00,960
here's where we see all the prominence

201
00:07:00,960 --> 00:07:02,639
data and all the attestations right so

202
00:07:02,639 --> 00:07:04,620
each one of these files they're sort of

203
00:07:04,620 --> 00:07:05,819
up here here

204
00:07:05,819 --> 00:07:07,620
um it's it's storing what is the

205
00:07:07,620 --> 00:07:09,960
prominence data that that we added uh so

206
00:07:09,960 --> 00:07:12,240
in the case of the s-bomb

207
00:07:12,240 --> 00:07:15,720
um this is just an spdx s-bomb uh and

208
00:07:15,720 --> 00:07:18,660
then the corresponding signature

209
00:07:18,660 --> 00:07:22,440
is the signed data of that s-bomb that

210
00:07:22,440 --> 00:07:25,259
we produced using this extra keyless

211
00:07:25,259 --> 00:07:27,240
flow so this looks pretty gnarly because

212
00:07:27,240 --> 00:07:30,060
it's a b64 blob of the the provenance

213
00:07:30,060 --> 00:07:31,979
data that we had before and we can do

214
00:07:31,979 --> 00:07:33,840
this for for the other things as well so

215
00:07:33,840 --> 00:07:36,539
like for the the review thing

216
00:07:36,539 --> 00:07:40,139
um here let me just pipe this into JQ so

217
00:07:40,139 --> 00:07:42,479
it's a little nicer to see so for this

218
00:07:42,479 --> 00:07:43,979
just for the demo I just sort of spat

219
00:07:43,979 --> 00:07:46,380
out the pull request data so for this

220
00:07:46,380 --> 00:07:48,780
pull request you know I I reviewed it I

221
00:07:48,780 --> 00:07:50,400
approved it and we can actually store

222
00:07:50,400 --> 00:07:52,620
this data in in the git repository

223
00:07:52,620 --> 00:07:54,960
itself only using git protocol so you

224
00:07:54,960 --> 00:07:57,120
don't need to you can do this in sort of

225
00:07:57,120 --> 00:07:59,699
a git repo agnostic way so it doesn't

226
00:07:59,699 --> 00:08:01,199
really matter if it's GitHub gitlab

227
00:08:01,199 --> 00:08:03,840
anything like that

228
00:08:03,840 --> 00:08:06,720
um and then the other thing is so here's

229
00:08:06,720 --> 00:08:08,940
a Nifty UI that we use for just

230
00:08:08,940 --> 00:08:12,060
inspecting recore log entries so this

231
00:08:12,060 --> 00:08:13,620
corresponds to the S bond that I

232
00:08:13,620 --> 00:08:15,599
produced before so you can see it was

233
00:08:15,599 --> 00:08:17,280
issued by six door it's a short-lived

234
00:08:17,280 --> 00:08:18,419
cert

235
00:08:18,419 --> 00:08:20,220
um I ran this three days ago and what's

236
00:08:20,220 --> 00:08:21,960
really cool about this is because the

237
00:08:21,960 --> 00:08:25,080
cert was issued to the oidc identity of

238
00:08:25,080 --> 00:08:28,919
my CIA my GitHub action CI you know we

239
00:08:28,919 --> 00:08:30,840
can use the certificate in in this

240
00:08:30,840 --> 00:08:33,000
attestation to say hey no this came from

241
00:08:33,000 --> 00:08:36,299
ICI it came from like a known Runner it

242
00:08:36,299 --> 00:08:38,099
wasn't just a random developer that sort

243
00:08:38,099 --> 00:08:39,659
of produced the status station uploaded

244
00:08:39,659 --> 00:08:41,880
it to the repo things like that so

245
00:08:41,880 --> 00:08:43,260
that's sort of the value that like Sig

246
00:08:43,260 --> 00:08:45,839
store can add to a process like this

247
00:08:45,839 --> 00:08:48,779
so this is a lightning talk so we

248
00:08:48,779 --> 00:08:50,100
unfortunately don't have that much time

249
00:08:50,100 --> 00:08:52,320
to go into the specifics

250
00:08:52,320 --> 00:08:53,940
um but yeah so I just wanted to show

251
00:08:53,940 --> 00:08:55,140
this off it's things that we're working

252
00:08:55,140 --> 00:08:56,339
on it's things that we're actively

253
00:08:56,339 --> 00:08:57,959
thinking about

254
00:08:57,959 --> 00:08:59,640
um you know the things that are on our

255
00:08:59,640 --> 00:09:01,800
mind is Source attestation data

256
00:09:01,800 --> 00:09:03,060
um like I mentioned before right it's

257
00:09:03,060 --> 00:09:04,740
another part it's another piece of the

258
00:09:04,740 --> 00:09:06,839
software supply chain uh we want to have

259
00:09:06,839 --> 00:09:09,240
attestations so things that I would like

260
00:09:09,240 --> 00:09:10,680
to hear from everyone from everyone if

261
00:09:10,680 --> 00:09:11,880
you want to grab me during lunch or

262
00:09:11,880 --> 00:09:13,140
something is like what kind of data

263
00:09:13,140 --> 00:09:15,480
would you like to see in attestations

264
00:09:15,480 --> 00:09:17,339
um you know obviously I think there's a

265
00:09:17,339 --> 00:09:19,200
lot of value in having this data present

266
00:09:19,200 --> 00:09:21,660
next to the commit

267
00:09:21,660 --> 00:09:22,980
um yeah so we want to see how we can

268
00:09:22,980 --> 00:09:24,839
grow this I am definitely interested in

269
00:09:24,839 --> 00:09:27,600
the like the in Toto salsa spec for like

270
00:09:27,600 --> 00:09:29,700
the two-parter review stuff like that

271
00:09:29,700 --> 00:09:31,260
um but yeah I think it would be really

272
00:09:31,260 --> 00:09:32,580
interesting to see how we can apply this

273
00:09:32,580 --> 00:09:34,200
for for other things

274
00:09:34,200 --> 00:09:37,080
um yeah so uh thank you that's all I

275
00:09:37,080 --> 00:09:38,760
have a really short talk if you're

276
00:09:38,760 --> 00:09:39,959
interested in get signed here's the link

277
00:09:39,959 --> 00:09:42,120
for the GitHub repo and if you want to

278
00:09:42,120 --> 00:09:43,860
come and chat laughter more than happy

279
00:09:43,860 --> 00:09:45,310
to so thank you

280
00:09:45,310 --> 00:09:49,949
[Applause]

