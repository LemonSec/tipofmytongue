1
00:00:00,780 --> 00:00:02,820
this is not this is going to be one of

2
00:00:02,820 --> 00:00:05,640
the more difficult talks that I have

3
00:00:05,640 --> 00:00:08,160
given not because of the things that I'm

4
00:00:08,160 --> 00:00:10,500
about to share but because of the things

5
00:00:10,500 --> 00:00:13,920
that I need to keep to myself

6
00:00:13,920 --> 00:00:16,320
and you might be asking like why what is

7
00:00:16,320 --> 00:00:18,660
she talking about right

8
00:00:18,660 --> 00:00:21,119
right so I'm a keynote speaker I'm

9
00:00:21,119 --> 00:00:24,000
kubecon stage in two days

10
00:00:24,000 --> 00:00:26,939
and my research team and I've been

11
00:00:26,939 --> 00:00:30,359
working relentlessly on this report this

12
00:00:30,359 --> 00:00:32,780
thought leadership article on top

13
00:00:32,780 --> 00:00:35,640
publicly available containers on Docker

14
00:00:35,640 --> 00:00:37,260
hub

15
00:00:37,260 --> 00:00:39,600
and in the last couple weeks we are

16
00:00:39,600 --> 00:00:41,820
burning the midnight oil and I'll be

17
00:00:41,820 --> 00:00:44,460
sharing those results right after we

18
00:00:44,460 --> 00:00:47,760
published the report online tomorrow on

19
00:00:47,760 --> 00:00:49,379
stage I'll be talking about the high

20
00:00:49,379 --> 00:00:52,079
level insights but I wish

21
00:00:52,079 --> 00:00:55,199
this conversation was a couple days

22
00:00:55,199 --> 00:00:58,680
after that point so that we do a first

23
00:00:58,680 --> 00:01:00,539
principle sleep dive into the findings

24
00:01:00,539 --> 00:01:03,239
and talk about what we found in that

25
00:01:03,239 --> 00:01:05,640
research but today is not going to be

26
00:01:05,640 --> 00:01:06,720
that day

27
00:01:06,720 --> 00:01:09,119
my growth team didn't allow me to share

28
00:01:09,119 --> 00:01:10,979
a lot of those insights

29
00:01:10,979 --> 00:01:13,020
the cool thing is that I would like to

30
00:01:13,020 --> 00:01:14,340
give you

31
00:01:14,340 --> 00:01:17,460
a an insight into the journeys that we

32
00:01:17,460 --> 00:01:19,560
embarked upon and we have published the

33
00:01:19,560 --> 00:01:21,420
same report last year so I'll talk about

34
00:01:21,420 --> 00:01:23,880
that a little bit and I'm going to share

35
00:01:23,880 --> 00:01:25,740
some insights so being a data scientist

36
00:01:25,740 --> 00:01:28,680
I did some sneaking into and and pulled

37
00:01:28,680 --> 00:01:30,960
some clusters in the data set some

38
00:01:30,960 --> 00:01:34,619
samples that will signal the findings so

39
00:01:34,619 --> 00:01:37,619
we will go into that so I I I know that

40
00:01:37,619 --> 00:01:40,140
I I might be able to get you excited

41
00:01:40,140 --> 00:01:42,060
about that but my hope is that you

42
00:01:42,060 --> 00:01:45,200
download that report and maybe come to

43
00:01:45,200 --> 00:01:48,960
the kubecon Keynotes so that you can

44
00:01:48,960 --> 00:01:51,240
hear the messenger I like my goal for

45
00:01:51,240 --> 00:01:54,000
for that speak is basically just get out

46
00:01:54,000 --> 00:01:56,159
of the way of the message because I

47
00:01:56,159 --> 00:01:57,899
think you know I don't say this very

48
00:01:57,899 --> 00:02:00,360
lightly but this time I think data

49
00:02:00,360 --> 00:02:03,180
speaks for itself

50
00:02:03,180 --> 00:02:06,659
before I go into any detail

51
00:02:06,659 --> 00:02:08,399
I would like to talk a little bit about

52
00:02:08,399 --> 00:02:11,400
myself and slim AI the company the

53
00:02:11,400 --> 00:02:13,920
startup that I work for

54
00:02:13,920 --> 00:02:17,040
before I do that Joe can I see a show of

55
00:02:17,040 --> 00:02:18,900
hands how many of you have heard about

56
00:02:18,900 --> 00:02:23,360
slim AI or Docker Slim

57
00:02:24,720 --> 00:02:28,020
wow impressive several people

58
00:02:28,020 --> 00:02:30,360
so slim AI

59
00:02:30,360 --> 00:02:32,520
or maybe I should start with darker slim

60
00:02:32,520 --> 00:02:34,680
because that's our open source Genesis

61
00:02:34,680 --> 00:02:38,360
our DNA is tagusulum is a popular

62
00:02:38,360 --> 00:02:42,120
GitHub project on container optimization

63
00:02:42,120 --> 00:02:44,819
it has been on GitHub for about seven

64
00:02:44,819 --> 00:02:46,379
years right now

65
00:02:46,379 --> 00:02:49,500
a lot of stars we have passed 15 000

66
00:02:49,500 --> 00:02:52,140
Stars a while ago and again it is our

67
00:02:52,140 --> 00:02:55,620
open source Genesis and DNA with slim AI

68
00:02:55,620 --> 00:02:57,599
we take this technology and we build

69
00:02:57,599 --> 00:03:00,060
upon it this is this core Foundation

70
00:03:00,060 --> 00:03:03,180
that we are extending making it simpler

71
00:03:03,180 --> 00:03:07,620
more um it's more secure layered and

72
00:03:07,620 --> 00:03:10,319
more efficient with slim AI rsas

73
00:03:10,319 --> 00:03:11,459
platform

74
00:03:11,459 --> 00:03:16,319
it's slim we are scanning hundreds of

75
00:03:16,319 --> 00:03:19,560
thousands of containers regularly this

76
00:03:19,560 --> 00:03:23,280
year alone we have seen more than 900

77
00:03:23,280 --> 00:03:25,260
000 unique containers in our SAS

78
00:03:25,260 --> 00:03:26,400
platform

79
00:03:26,400 --> 00:03:28,620
and as a data scientist working with

80
00:03:28,620 --> 00:03:31,140
this data and my resource team doing the

81
00:03:31,140 --> 00:03:33,540
same we observe these containers we

82
00:03:33,540 --> 00:03:35,580
deconstruct them we try to understand

83
00:03:35,580 --> 00:03:37,739
what makes these containers developer

84
00:03:37,739 --> 00:03:40,980
friendly and production ready

85
00:03:40,980 --> 00:03:44,340
so last year around this time we

86
00:03:44,340 --> 00:03:46,500
published this reports we may I tell

87
00:03:46,500 --> 00:03:50,040
public containers report 2021 and I will

88
00:03:50,040 --> 00:03:52,200
go into the details a little bit and

89
00:03:52,200 --> 00:03:54,180
again I'm going to talk about the Delta

90
00:03:54,180 --> 00:03:55,980
between then and now

91
00:03:55,980 --> 00:03:59,040
but before doing that I would like to

92
00:03:59,040 --> 00:04:01,920
say something about the data so this is

93
00:04:01,920 --> 00:04:04,920
the type of data that again as a data

94
00:04:04,920 --> 00:04:07,140
scientist I really enjoy because it's

95
00:04:07,140 --> 00:04:10,140
dry hard cold facts right I can go into

96
00:04:10,140 --> 00:04:11,939
the system pull the data look into the

97
00:04:11,939 --> 00:04:14,640
trends and whatnot but for me although

98
00:04:14,640 --> 00:04:16,820
data is beautiful it's decision

99
00:04:16,820 --> 00:04:20,399
intelligence that matters and for that

100
00:04:20,399 --> 00:04:23,280
you need to look into the people and the

101
00:04:23,280 --> 00:04:26,940
processes the data that data's impact on

102
00:04:26,940 --> 00:04:29,940
people to be able to do that this year

103
00:04:29,940 --> 00:04:32,000
we partnered with a research firm

104
00:04:32,000 --> 00:04:36,180
dimensional research and we carried out

105
00:04:36,180 --> 00:04:38,220
this survey it is global randomized

106
00:04:38,220 --> 00:04:40,199
survey asking questions to developers

107
00:04:40,199 --> 00:04:43,400
and devops engineers

108
00:04:43,740 --> 00:04:46,500
and being a data scientist looking at

109
00:04:46,500 --> 00:04:49,380
people I see data points

110
00:04:49,380 --> 00:04:51,300
I'm joking

111
00:04:51,300 --> 00:04:52,919
I would like to ask some of the

112
00:04:52,919 --> 00:04:54,360
questions that we asked to those

113
00:04:54,360 --> 00:04:56,940
developers to you and I would love to

114
00:04:56,940 --> 00:05:00,840
hear your opinions on that I would

115
00:05:00,840 --> 00:05:04,199
basically like to take that survey to a

116
00:05:04,199 --> 00:05:07,020
test drive before we go into the

117
00:05:07,020 --> 00:05:09,300
technical results so the first question

118
00:05:09,300 --> 00:05:11,460
that we asked there are multiple but I

119
00:05:11,460 --> 00:05:14,699
picked a few was this one and it's a

120
00:05:14,699 --> 00:05:17,220
simple soft one would you like to know

121
00:05:17,220 --> 00:05:20,040
more about containers than you drew

122
00:05:20,040 --> 00:05:22,979
today and it is more about you know it

123
00:05:22,979 --> 00:05:24,979
might it might start from a very simple

124
00:05:24,979 --> 00:05:27,600
conceptual understanding of containers

125
00:05:27,600 --> 00:05:30,060
but deeper understanding of containers

126
00:05:30,060 --> 00:05:31,680
slimming and hardening how

127
00:05:31,680 --> 00:05:34,580
containerization works at scale

128
00:05:34,580 --> 00:05:36,479
understanding these things we were we

129
00:05:36,479 --> 00:05:37,919
were looking for these things but I

130
00:05:37,919 --> 00:05:40,139
would love to hear your answer on this

131
00:05:40,139 --> 00:05:42,720
one so repeating the question would you

132
00:05:42,720 --> 00:05:44,940
like to know more about containers

133
00:05:44,940 --> 00:05:48,560
than you do today

134
00:05:48,840 --> 00:05:50,699
or you think your knowledge is pretty

135
00:05:50,699 --> 00:05:52,199
good already

136
00:05:52,199 --> 00:05:53,340
okay

137
00:05:53,340 --> 00:05:56,280
some some people want to learn more 92

138
00:05:56,280 --> 00:05:57,660
percent of the people that we asked

139
00:05:57,660 --> 00:05:58,919
admitted that they would like to learn

140
00:05:58,919 --> 00:06:00,720
more about containers

141
00:06:00,720 --> 00:06:03,000
and this one is the sequel to that

142
00:06:03,000 --> 00:06:05,880
question which was eye-opening to me

143
00:06:05,880 --> 00:06:08,880
because I realized that

144
00:06:08,880 --> 00:06:10,860
you know did a question that I I would

145
00:06:10,860 --> 00:06:12,360
like to read here right now it says

146
00:06:12,360 --> 00:06:14,100
which of the following do you fully

147
00:06:14,100 --> 00:06:16,020
understand about containers and you can

148
00:06:16,020 --> 00:06:18,300
see that most of the developers said

149
00:06:18,300 --> 00:06:20,400
they conceptually understand how

150
00:06:20,400 --> 00:06:22,039
containers work

151
00:06:22,039 --> 00:06:24,780
container deployment creating containers

152
00:06:24,780 --> 00:06:26,960
and whatnot but when it comes to more

153
00:06:26,960 --> 00:06:30,539
advanced topics like all the components

154
00:06:30,539 --> 00:06:33,479
within a container or container

155
00:06:33,479 --> 00:06:36,180
orchestration those percentages start

156
00:06:36,180 --> 00:06:38,639
dropping down and when it when you know

157
00:06:38,639 --> 00:06:40,259
we were asking about the hardening and

158
00:06:40,259 --> 00:06:43,440
slimming of containers only one in four

159
00:06:43,440 --> 00:06:46,199
developers said they understand these

160
00:06:46,199 --> 00:06:49,460
areas fully

161
00:06:50,580 --> 00:06:52,259
another question

162
00:06:52,259 --> 00:06:55,860
did your company ever use publicly

163
00:06:55,860 --> 00:06:58,380
available containers

164
00:06:58,380 --> 00:07:00,600
can I see a show offense

165
00:07:00,600 --> 00:07:04,319
publicly available containers okay

166
00:07:04,319 --> 00:07:07,620
less than what I saw in the data but 66

167
00:07:07,620 --> 00:07:09,539
percent of the developers that we asked

168
00:07:09,539 --> 00:07:12,419
said yes we still do

169
00:07:12,419 --> 00:07:16,500
15 said yes we don't use them anymore

170
00:07:16,500 --> 00:07:19,919
but we did use them in the past and only

171
00:07:19,919 --> 00:07:24,000
19 less than 20 said no we have deployed

172
00:07:24,000 --> 00:07:28,620
developed all of our containers in-house

173
00:07:28,620 --> 00:07:31,139
next one you're getting close

174
00:07:31,139 --> 00:07:33,180
in your experience

175
00:07:33,180 --> 00:07:35,220
is it challenging

176
00:07:35,220 --> 00:07:37,680
to ensure containerized applications are

177
00:07:37,680 --> 00:07:39,960
free from vulnerabilities

178
00:07:39,960 --> 00:07:42,080
what would you say removing

179
00:07:42,080 --> 00:07:46,520
vulnerabilities from containers

180
00:07:46,740 --> 00:07:49,500
okay some

181
00:07:49,500 --> 00:07:51,599
this was an overwhelming yes in the

182
00:07:51,599 --> 00:07:55,259
survey people said it's hard to remove

183
00:07:55,259 --> 00:07:58,919
these these uh these issues from the

184
00:07:58,919 --> 00:08:01,560
containers I will actually I want to

185
00:08:01,560 --> 00:08:04,080
fast forward to this this one

186
00:08:04,080 --> 00:08:06,479
people said the complexity of these

187
00:08:06,479 --> 00:08:08,400
containers the numerous components with

188
00:08:08,400 --> 00:08:11,400
dependencies in these containers was the

189
00:08:11,400 --> 00:08:13,860
number one contributing factor for why

190
00:08:13,860 --> 00:08:16,740
these vulnerabilities were hard to deal

191
00:08:16,740 --> 00:08:18,840
with you know others mentioned that it

192
00:08:18,840 --> 00:08:20,879
takes a lot of time other some people

193
00:08:20,879 --> 00:08:24,060
mentioned manual processes actually this

194
00:08:24,060 --> 00:08:25,680
one the manual processes one was

195
00:08:25,680 --> 00:08:28,319
interesting because more than 50 percent

196
00:08:28,319 --> 00:08:31,680
of the developers who answered said they

197
00:08:31,680 --> 00:08:34,740
are removing slimming hardening their

198
00:08:34,740 --> 00:08:36,000
containers

199
00:08:36,000 --> 00:08:39,779
via these manual processes and one last

200
00:08:39,779 --> 00:08:41,399
question this is this is something that

201
00:08:41,399 --> 00:08:43,320
I there's a lot of discussion in the

202
00:08:43,320 --> 00:08:45,120
industry about this one some people that

203
00:08:45,120 --> 00:08:48,120
it's uh it's a land that's out of fridge

204
00:08:48,120 --> 00:08:49,920
some others think that it should be

205
00:08:49,920 --> 00:08:52,320
enforced but I would like to ask you and

206
00:08:52,320 --> 00:08:54,959
get your opinion what are your customers

207
00:08:54,959 --> 00:08:57,600
or other end users demanding that your

208
00:08:57,600 --> 00:09:00,300
containers have zero vulnerabilities can

209
00:09:00,300 --> 00:09:03,060
I see a show of hands customers asking

210
00:09:03,060 --> 00:09:04,500
for zero vulnerabilities in their

211
00:09:04,500 --> 00:09:05,820
containers

212
00:09:05,820 --> 00:09:10,200
very few okay in the survey

213
00:09:10,200 --> 00:09:12,720
um it said like 70 of the people said

214
00:09:12,720 --> 00:09:13,980
yes

215
00:09:13,980 --> 00:09:17,820
people are end users whether it's other

216
00:09:17,820 --> 00:09:20,760
departments in our company or our

217
00:09:20,760 --> 00:09:23,459
customers they're asking for zero

218
00:09:23,459 --> 00:09:26,180
vulnerabilities

219
00:09:26,220 --> 00:09:29,700
so let's move forward to the research

220
00:09:29,700 --> 00:09:31,800
that we have done so this is more of the

221
00:09:31,800 --> 00:09:34,920
Heart Like heart core quantitative

222
00:09:34,920 --> 00:09:38,040
analysis part so what we did with this

223
00:09:38,040 --> 00:09:40,080
one before I go into the details and the

224
00:09:40,080 --> 00:09:41,399
results I would like to give you a quick

225
00:09:41,399 --> 00:09:44,519
overview of the methodology

226
00:09:44,519 --> 00:09:48,540
so we went into Docker Hub and pulled

227
00:09:48,540 --> 00:09:52,860
the top 165 containers

228
00:09:52,860 --> 00:09:55,740
and you might think that's a very small

229
00:09:55,740 --> 00:09:59,100
sample size after all in Docker Hub

230
00:09:59,100 --> 00:10:01,320
there are more than 10 million images

231
00:10:01,320 --> 00:10:03,500
with more than

232
00:10:03,500 --> 00:10:05,880
320 billion

233
00:10:05,880 --> 00:10:11,160
pool volume right so 165 may seem like a

234
00:10:11,160 --> 00:10:14,160
handful but these containers

235
00:10:14,160 --> 00:10:17,940
together are a huge sample size in terms

236
00:10:17,940 --> 00:10:19,980
of the pool count but because they

237
00:10:19,980 --> 00:10:22,380
account for more than 30 percent of the

238
00:10:22,380 --> 00:10:23,940
pool volume

239
00:10:23,940 --> 00:10:25,800
there are certain containers in the

240
00:10:25,800 --> 00:10:28,860
sample size in the sample set that has

241
00:10:28,860 --> 00:10:32,040
been pulled by five six seven billion

242
00:10:32,040 --> 00:10:34,279
times

243
00:10:35,100 --> 00:10:37,980
after we pulled them the latest versions

244
00:10:37,980 --> 00:10:41,160
of them we created them into nine

245
00:10:41,160 --> 00:10:42,899
different categories

246
00:10:42,899 --> 00:10:45,360
and you can see some of them in that

247
00:10:45,360 --> 00:10:48,000
circular diagram that are maybe too

248
00:10:48,000 --> 00:10:49,680
small but we have programming languages

249
00:10:49,680 --> 00:10:52,079
general purpose categories and the

250
00:10:52,079 --> 00:10:53,640
spatial purpose categories like local

251
00:10:53,640 --> 00:10:57,540
development infra and data science type

252
00:10:57,540 --> 00:11:00,180
like you know high level categories

253
00:11:00,180 --> 00:11:03,180
and this kind of using standards open

254
00:11:03,180 --> 00:11:05,399
source tools I have some of my favorites

255
00:11:05,399 --> 00:11:08,399
that Encore I'm a huge fan I use their

256
00:11:08,399 --> 00:11:11,519
Docker extension too the sift in the

257
00:11:11,519 --> 00:11:13,560
gripe tools for s-bomb and vulnerability

258
00:11:13,560 --> 00:11:16,740
analysis we used Docker Slim's x-ray

259
00:11:16,740 --> 00:11:18,899
tool and with the questions that we were

260
00:11:18,899 --> 00:11:21,899
trying to answer was that are these

261
00:11:21,899 --> 00:11:24,839
containers easy to use

262
00:11:24,839 --> 00:11:28,500
idea efficient and safe and will they

263
00:11:28,500 --> 00:11:31,260
cause any issues when we push them to

264
00:11:31,260 --> 00:11:34,200
production with our applications

265
00:11:34,200 --> 00:11:36,120
okay

266
00:11:36,120 --> 00:11:38,579
and you've been looking into these

267
00:11:38,579 --> 00:11:40,680
regularly scanning them every day

268
00:11:40,680 --> 00:11:42,959
looking into a Time series analysis how

269
00:11:42,959 --> 00:11:45,060
the vulnerabilities are evolving in

270
00:11:45,060 --> 00:11:47,640
these Credit in these containers uh

271
00:11:47,640 --> 00:11:49,860
regularly but at that time here were the

272
00:11:49,860 --> 00:11:52,500
high level findings okay

273
00:11:52,500 --> 00:11:54,779
okay this one was that that was this

274
00:11:54,779 --> 00:11:57,959
perfect correlation between the scan

275
00:11:57,959 --> 00:12:00,300
times of these containers and their

276
00:12:00,300 --> 00:12:02,040
sizes

277
00:12:02,040 --> 00:12:04,100
for every

278
00:12:04,100 --> 00:12:07,380
500 megabytes added to the system we

279
00:12:07,380 --> 00:12:10,019
were seeing 50 seconds longer scan times

280
00:12:10,019 --> 00:12:12,240
and if it is a few

281
00:12:12,240 --> 00:12:15,300
containers being shipped by a developer

282
00:12:15,300 --> 00:12:17,339
every now and then that's one thing but

283
00:12:17,339 --> 00:12:20,339
we know that scale changes everything

284
00:12:20,339 --> 00:12:22,920
right if I ask you to buy me a pinch of

285
00:12:22,920 --> 00:12:25,860
ice cream that's one thing if I ask you

286
00:12:25,860 --> 00:12:28,860
to buy me 20 million of them buy next

287
00:12:28,860 --> 00:12:31,440
Monday without letting any one of its

288
00:12:31,440 --> 00:12:34,019
work melt it's a different problem so at

289
00:12:34,019 --> 00:12:36,899
scale these things start matting

290
00:12:36,899 --> 00:12:39,240
the second finding was about the

291
00:12:39,240 --> 00:12:42,720
complexity in these containers

292
00:12:42,720 --> 00:12:45,720
okay so there are a few

293
00:12:45,720 --> 00:12:49,279
box plugs charts on the right hand side

294
00:12:49,279 --> 00:12:51,300
and we're looking into spatial

295
00:12:51,300 --> 00:12:53,639
permissions libraries packages in these

296
00:12:53,639 --> 00:12:55,980
containers let's do a deeper dive in one

297
00:12:55,980 --> 00:12:58,800
of them the packages so you can see on

298
00:12:58,800 --> 00:13:01,560
the x-axis here I'm showing programming

299
00:13:01,560 --> 00:13:04,500
languages web development all these

300
00:13:04,500 --> 00:13:07,100
different categories that we have on the

301
00:13:07,100 --> 00:13:09,720
y-axis you see the number of packages in

302
00:13:09,720 --> 00:13:11,480
these different

303
00:13:11,480 --> 00:13:14,220
container categories and you can see

304
00:13:14,220 --> 00:13:15,240
that

305
00:13:15,240 --> 00:13:17,700
it is not just the

306
00:13:17,700 --> 00:13:20,220
outliers but even the averages are

307
00:13:20,220 --> 00:13:22,139
surprisingly high and if you think about

308
00:13:22,139 --> 00:13:25,800
this right you know in programming

309
00:13:25,800 --> 00:13:27,839
languages category for example the

310
00:13:27,839 --> 00:13:28,680
average

311
00:13:28,680 --> 00:13:32,760
package size is about 350 right this

312
00:13:32,760 --> 00:13:36,360
number is supposed to be the tip of the

313
00:13:36,360 --> 00:13:38,279
iceberg

314
00:13:38,279 --> 00:13:40,079
because there are studies I'm sure you

315
00:13:40,079 --> 00:13:41,880
might remember there's this one but

316
00:13:41,880 --> 00:13:43,560
there are multiple studies like that

317
00:13:43,560 --> 00:13:46,200
this one is from the darmstadt

318
00:13:46,200 --> 00:13:49,019
University 2019 research where they

319
00:13:49,019 --> 00:13:51,480
looked into a specific ecosystem the npm

320
00:13:51,480 --> 00:13:54,420
ecosystem and they said the package

321
00:13:54,420 --> 00:13:56,899
reach of the top

322
00:13:56,899 --> 00:14:01,740
five packages was between 134

323
00:14:01,740 --> 00:14:05,220
000 and 166

324
00:14:05,220 --> 00:14:07,920
000 dependencies other packages so a

325
00:14:07,920 --> 00:14:10,560
single package it's one of the top

326
00:14:10,560 --> 00:14:14,040
obviously might have a hundred thousand

327
00:14:14,040 --> 00:14:17,880
other packages so a container having 400

328
00:14:17,880 --> 00:14:20,579
packages right each one having thousands

329
00:14:20,579 --> 00:14:22,800
in certain cases hundreds of thousands

330
00:14:22,800 --> 00:14:26,399
of dependencies you realize that

331
00:14:26,399 --> 00:14:30,360
the tip of the iceberg is an iceberg in

332
00:14:30,360 --> 00:14:32,639
this case

333
00:14:32,639 --> 00:14:35,220
and maybe one note to make here about

334
00:14:35,220 --> 00:14:38,880
the packages you might think that I am

335
00:14:38,880 --> 00:14:40,680
proposing that we should be removing

336
00:14:40,680 --> 00:14:42,779
these packages these tools from these

337
00:14:42,779 --> 00:14:45,300
containers I don't think in those terms

338
00:14:45,300 --> 00:14:48,480
I think they make the developers lives

339
00:14:48,480 --> 00:14:50,519
really easy it makes it very

340
00:14:50,519 --> 00:14:52,920
experimental fun to work with these

341
00:14:52,920 --> 00:14:56,940
containers you can test and deploy and

342
00:14:56,940 --> 00:15:00,420
build applications in more easier ways

343
00:15:00,420 --> 00:15:02,760
with these types of tooling but the

344
00:15:02,760 --> 00:15:04,500
problem is that

345
00:15:04,500 --> 00:15:07,019
they also represent an attack surface

346
00:15:07,019 --> 00:15:10,260
and it implies a need to automatically

347
00:15:10,260 --> 00:15:12,420
remove these things especially if they

348
00:15:12,420 --> 00:15:14,459
are redundant to the system

349
00:15:14,459 --> 00:15:16,260
otherwise they will make it to

350
00:15:16,260 --> 00:15:18,720
production okay so the points that I'm

351
00:15:18,720 --> 00:15:20,940
making here is that if you don't make

352
00:15:20,940 --> 00:15:23,339
the conscious effort to remove these

353
00:15:23,339 --> 00:15:26,579
unnecessary redundant packages we will

354
00:15:26,579 --> 00:15:30,739
be incuring Tech depth down the road

355
00:15:31,019 --> 00:15:34,139
the third learning was building upon the

356
00:15:34,139 --> 00:15:36,420
category this packages category is the

357
00:15:36,420 --> 00:15:37,740
vulnerabilities

358
00:15:37,740 --> 00:15:39,839
so I'm not going to talk about the

359
00:15:39,839 --> 00:15:42,540
vulnerability right away because you

360
00:15:42,540 --> 00:15:44,699
know that and there are Security Experts

361
00:15:44,699 --> 00:15:46,680
I'm sure I have spent a lot of my career

362
00:15:46,680 --> 00:15:49,019
in cyber security industry myself attack

363
00:15:49,019 --> 00:15:50,940
surface is more than a vulnerability

364
00:15:50,940 --> 00:15:53,880
challenge there are the the rule the

365
00:15:53,880 --> 00:15:55,860
user's permissions that we were just

366
00:15:55,860 --> 00:15:57,779
talking about right if the user is root

367
00:15:57,779 --> 00:16:00,540
that can create a ton of issues we

368
00:16:00,540 --> 00:16:02,279
talked about packages there might be a

369
00:16:02,279 --> 00:16:04,980
ton of other issues that are important

370
00:16:04,980 --> 00:16:07,380
for an attack surface but I'll say this

371
00:16:07,380 --> 00:16:09,959
even the average count of

372
00:16:09,959 --> 00:16:11,699
vulnerabilities and the outliers

373
00:16:11,699 --> 00:16:14,459
obviously were too high was concerning

374
00:16:14,459 --> 00:16:16,800
to me

375
00:16:16,800 --> 00:16:19,019
in fact

376
00:16:19,019 --> 00:16:21,839
you know some of these having

377
00:16:21,839 --> 00:16:23,940
two thousand vulnerable Tears like now

378
00:16:23,940 --> 00:16:26,579
is looking at these and I I thought if a

379
00:16:26,579 --> 00:16:28,380
devops engineer has to ship some of

380
00:16:28,380 --> 00:16:30,240
these containers why should they even

381
00:16:30,240 --> 00:16:32,880
start right so we looked into the

382
00:16:32,880 --> 00:16:34,920
severity categories of these

383
00:16:34,920 --> 00:16:38,160
vulnerabilities and realized that

384
00:16:38,160 --> 00:16:41,639
20 of the vulnerabilities were belonging

385
00:16:41,639 --> 00:16:45,000
to a high or critical severity category

386
00:16:45,000 --> 00:16:48,480
my expectation was not more than five

387
00:16:48,480 --> 00:16:52,320
and it was 20 and this year and I can't

388
00:16:52,320 --> 00:16:54,120
give you numbers but

389
00:16:54,120 --> 00:16:56,579
it's grew up

390
00:16:56,579 --> 00:16:58,259
it increased

391
00:16:58,259 --> 00:17:00,540
significantly but you can see that

392
00:17:00,540 --> 00:17:02,220
across all categories from web

393
00:17:02,220 --> 00:17:03,720
development to programming languages

394
00:17:03,720 --> 00:17:06,959
there are a lot of critical and high

395
00:17:06,959 --> 00:17:08,599
severity level

396
00:17:08,599 --> 00:17:11,520
high severity vulnerabilities except the

397
00:17:11,520 --> 00:17:15,179
base OS one which has you know some

398
00:17:15,179 --> 00:17:16,859
vulnerabilities but definitely not the

399
00:17:16,859 --> 00:17:19,500
critical and high categories that we had

400
00:17:19,500 --> 00:17:20,459
here

401
00:17:20,459 --> 00:17:23,220
so focusing on one of those categories

402
00:17:23,220 --> 00:17:26,579
the programming languages right this

403
00:17:26,579 --> 00:17:28,559
category seemed to be very much in line

404
00:17:28,559 --> 00:17:30,120
with the averages that we were seeing so

405
00:17:30,120 --> 00:17:32,520
not necessarily the most vulnerable you

406
00:17:32,520 --> 00:17:34,679
know high in terms of package counts and

407
00:17:34,679 --> 00:17:39,240
whatnot but also not innocent as well so

408
00:17:39,240 --> 00:17:41,160
let me pull a few things and start

409
00:17:41,160 --> 00:17:45,539
comparing 2020 to 2021 with respect to

410
00:17:45,539 --> 00:17:49,919
the the last year so

411
00:17:49,919 --> 00:17:54,840
I pulled golang nod python rust I could

412
00:17:54,840 --> 00:17:56,820
have pulled many more are these in line

413
00:17:56,820 --> 00:17:58,320
with like the things that you work with

414
00:17:58,320 --> 00:18:00,480
is there any other programming languages

415
00:18:00,480 --> 00:18:02,640
that you would love to see in such a

416
00:18:02,640 --> 00:18:04,919
comparison for example

417
00:18:04,919 --> 00:18:08,580
or are these interesting enough

418
00:18:08,580 --> 00:18:09,840
good

419
00:18:09,840 --> 00:18:10,919
okay

420
00:18:10,919 --> 00:18:14,340
so if you look into it like I I am um

421
00:18:14,340 --> 00:18:16,200
just showcasing the number of

422
00:18:16,200 --> 00:18:18,780
vulnerabilities year over year so 2021

423
00:18:18,780 --> 00:18:23,160
versus 2022 between golang not rust and

424
00:18:23,160 --> 00:18:26,160
python as I said as you can see the only

425
00:18:26,160 --> 00:18:28,380
one that seemed to have improved

426
00:18:28,380 --> 00:18:32,160
slightly is no not slightly it seems it

427
00:18:32,160 --> 00:18:34,500
seems substantial the other ones python

428
00:18:34,500 --> 00:18:38,120
has increased by about 50 percent

429
00:18:38,120 --> 00:18:41,700
rust increased by about 50 percent gold

430
00:18:41,700 --> 00:18:44,160
Lang increased by 20 so all of them have

431
00:18:44,160 --> 00:18:46,620
more vulnerabilities and it is not as if

432
00:18:46,620 --> 00:18:49,380
we haven't seen certain incidents cves

433
00:18:49,380 --> 00:18:51,960
result from the system so for each and

434
00:18:51,960 --> 00:18:53,940
every one of them we have seen that

435
00:18:53,940 --> 00:18:57,299
certain CVS were being removed but there

436
00:18:57,299 --> 00:18:59,220
were more CVS

437
00:18:59,220 --> 00:19:01,980
three four five times more in this

438
00:19:01,980 --> 00:19:04,380
subset three times more

439
00:19:04,380 --> 00:19:06,840
getting added into the system so our

440
00:19:06,840 --> 00:19:11,160
remediation rate is much slower than

441
00:19:11,160 --> 00:19:14,100
the one in that architecture detection

442
00:19:14,100 --> 00:19:17,520
rate for for these containers

443
00:19:17,520 --> 00:19:20,460
this is looking into the severity levels

444
00:19:20,460 --> 00:19:22,260
of that one and I would like us to focus

445
00:19:22,260 --> 00:19:23,940
on I hope you can see the details here

446
00:19:23,940 --> 00:19:26,039
but what we have is it's the same order

447
00:19:26,039 --> 00:19:28,980
what we have is goal line and node on

448
00:19:28,980 --> 00:19:31,799
top 2022

449
00:19:31,799 --> 00:19:32,940
um this time we are looking into the

450
00:19:32,940 --> 00:19:35,940
percentages of these vulnerabilities

451
00:19:35,940 --> 00:19:38,220
that we have seen and you can see for

452
00:19:38,220 --> 00:19:41,340
example we said node has less

453
00:19:41,340 --> 00:19:44,160
this year so look into the 2021

454
00:19:44,160 --> 00:19:47,160
vulnerability distribution for node and

455
00:19:47,160 --> 00:19:49,400
you will see that there are a lot of

456
00:19:49,400 --> 00:19:54,840
low and uh negligible category

457
00:19:54,840 --> 00:19:57,840
vulnerabilities and if you look at this

458
00:19:57,840 --> 00:19:59,460
year

459
00:19:59,460 --> 00:20:02,760
the high and critical level of Life of

460
00:20:02,760 --> 00:20:05,580
vulnerabilities has tripled so in a year

461
00:20:05,580 --> 00:20:08,940
yes node made progress in terms of

462
00:20:08,940 --> 00:20:10,799
removing a ton of the vulnerabilities

463
00:20:10,799 --> 00:20:15,000
but then we also added three times more

464
00:20:15,000 --> 00:20:18,780
high and critical vulnerabilities which

465
00:20:18,780 --> 00:20:19,980
you know

466
00:20:19,980 --> 00:20:22,320
puts a shadow on to the Improvement that

467
00:20:22,320 --> 00:20:24,299
being made others

468
00:20:24,299 --> 00:20:27,000
others were already you said they have

469
00:20:27,000 --> 00:20:28,620
seen more vulnerabilities some result

470
00:20:28,620 --> 00:20:31,919
but a lot more has been added and when

471
00:20:31,919 --> 00:20:34,620
you look into a you know python for

472
00:20:34,620 --> 00:20:36,780
example the percentages of these

473
00:20:36,780 --> 00:20:40,140
critical High incidence medium incidents

474
00:20:40,140 --> 00:20:43,860
they have also much higher than compared

475
00:20:43,860 --> 00:20:45,780
to last year

476
00:20:45,780 --> 00:20:47,700
so the main conclusion like I can give

477
00:20:47,700 --> 00:20:49,799
you a deeper dive later on when we

478
00:20:49,799 --> 00:20:52,620
publish that report but the main

479
00:20:52,620 --> 00:20:54,900
conclusion that I had here was that even

480
00:20:54,900 --> 00:20:57,539
when you look into specific categories

481
00:20:57,539 --> 00:21:00,419
with very strong communities sometimes

482
00:21:00,419 --> 00:21:03,059
um if a container that has a strong

483
00:21:03,059 --> 00:21:06,720
Enterprise behind them we do not see a

484
00:21:06,720 --> 00:21:08,520
lot of improvements especially for this

485
00:21:08,520 --> 00:21:10,320
category programming languages in

486
00:21:10,320 --> 00:21:12,919
general I can say that we are no more

487
00:21:12,919 --> 00:21:18,539
secure than we were in 2021 and this is

488
00:21:18,539 --> 00:21:21,120
in the aftermath of multiple security

489
00:21:21,120 --> 00:21:23,820
incidents last year

490
00:21:23,820 --> 00:21:26,460
and an intense focus on software supply

491
00:21:26,460 --> 00:21:30,780
chain security now I'm hopeful that as

492
00:21:30,780 --> 00:21:34,200
an industry we will be making the right

493
00:21:34,200 --> 00:21:36,900
decisions and the conversations have

494
00:21:36,900 --> 00:21:39,360
started and I do think that this

495
00:21:39,360 --> 00:21:42,360
container landscape is providing a ton

496
00:21:42,360 --> 00:21:45,000
of opportunities to the developers in

497
00:21:45,000 --> 00:21:47,460
terms of scale but you can see that it

498
00:21:47,460 --> 00:21:51,179
is also presenting certain risks

499
00:21:51,179 --> 00:21:54,059
was there a question

500
00:21:54,059 --> 00:21:55,320
okay

501
00:21:55,320 --> 00:21:57,720
and we will be doing more and deeper

502
00:21:57,720 --> 00:21:59,700
research hopefully leading to actionable

503
00:21:59,700 --> 00:22:03,840
research but I feel like we we need to

504
00:22:03,840 --> 00:22:05,640
start thinking a lot more about how to

505
00:22:05,640 --> 00:22:07,740
improve as an industry

506
00:22:07,740 --> 00:22:10,679
what do we want as an industry right our

507
00:22:10,679 --> 00:22:13,860
customers want zero vulnerabilities or

508
00:22:13,860 --> 00:22:16,260
get close to that Dreamland

509
00:22:16,260 --> 00:22:20,580
our developers want to enjoy and enjoy

510
00:22:20,580 --> 00:22:22,740
coding not to be overwhelmed by

511
00:22:22,740 --> 00:22:24,960
infrastructure they should not need a

512
00:22:24,960 --> 00:22:27,059
PhD in infrastructure and understand

513
00:22:27,059 --> 00:22:29,159
every little detail all the complexities

514
00:22:29,159 --> 00:22:32,700
of these containers but we also want to

515
00:22:32,700 --> 00:22:35,760
push production ready containers to

516
00:22:35,760 --> 00:22:37,200
production

517
00:22:37,200 --> 00:22:40,080
so to be able to do that for us it's

518
00:22:40,080 --> 00:22:42,840
slim we think you should know what's

519
00:22:42,840 --> 00:22:46,559
inside your containers and push only

520
00:22:46,559 --> 00:22:49,799
what's needed to production

521
00:22:49,799 --> 00:22:51,659
we believe in automation through

522
00:22:51,659 --> 00:22:53,700
intelligent optimization and we are

523
00:22:53,700 --> 00:22:56,280
seeking to solve this problem for all of

524
00:22:56,280 --> 00:22:57,900
the world's containers and there are

525
00:22:57,900 --> 00:23:00,059
other teams with different approaches

526
00:23:00,059 --> 00:23:03,120
and they're Relentless and Brilliant and

527
00:23:03,120 --> 00:23:05,100
they are putting they're losing their

528
00:23:05,100 --> 00:23:07,500
sleep over these problems and because of

529
00:23:07,500 --> 00:23:11,220
that I'm very hopeful about the future

530
00:23:11,220 --> 00:23:14,280
I'm hopeful but I'm concerned I think

531
00:23:14,280 --> 00:23:16,080
this is troubling that you know after

532
00:23:16,080 --> 00:23:19,980
this much conversation the direction is

533
00:23:19,980 --> 00:23:23,159
not heading in the right direction but

534
00:23:23,159 --> 00:23:25,980
again I do think that the more we talk

535
00:23:25,980 --> 00:23:27,900
about these especially with these

536
00:23:27,900 --> 00:23:30,299
decision intelligence points these

537
00:23:30,299 --> 00:23:33,419
analytical Insight we will be making

538
00:23:33,419 --> 00:23:37,559
better improvements so with that thank

539
00:23:37,559 --> 00:23:40,080
you so much for listening to me I would

540
00:23:40,080 --> 00:23:43,080
love to hear more of your comments

541
00:23:43,080 --> 00:23:46,080
um online on Twitter on LinkedIn let's

542
00:23:46,080 --> 00:23:47,640
connect and continue the conversation

543
00:23:47,640 --> 00:23:49,559
thank you so much for your time and

544
00:23:49,559 --> 00:23:51,960
looking forward to connect in the

545
00:23:51,960 --> 00:23:53,460
conference

546
00:23:53,460 --> 00:23:56,159
yes I think we have time

547
00:23:56,159 --> 00:23:58,880
thank you

548
00:24:05,940 --> 00:24:09,000
naturally the number is growing the

549
00:24:09,000 --> 00:24:11,100
growth is proportional do you have any

550
00:24:11,100 --> 00:24:13,980
data or guidance around exploitability

551
00:24:13,980 --> 00:24:16,919
and better understanding which ones

552
00:24:16,919 --> 00:24:18,539
would be exploitable which ones wouldn't

553
00:24:18,539 --> 00:24:21,240
be and and better

554
00:24:21,240 --> 00:24:23,640
understanding how to how to produce that

555
00:24:23,640 --> 00:24:26,280
as we get into the future

556
00:24:26,280 --> 00:24:28,679
that's a great point

557
00:24:28,679 --> 00:24:30,600
so

558
00:24:30,600 --> 00:24:32,880
not all vulnerabilities are created

559
00:24:32,880 --> 00:24:35,039
equal and some of them might not be even

560
00:24:35,039 --> 00:24:37,700
exploitable

561
00:24:38,940 --> 00:24:41,940
I definitely agree with this like I have

562
00:24:41,940 --> 00:24:43,799
seen certain vulnerabilities certain

563
00:24:43,799 --> 00:24:45,780
packages

564
00:24:45,780 --> 00:24:48,240
being in different paths in a container

565
00:24:48,240 --> 00:24:50,700
for example right the same package can

566
00:24:50,700 --> 00:24:53,220
be represented in the same container in

567
00:24:53,220 --> 00:24:56,159
40 different pathways and the same

568
00:24:56,159 --> 00:24:58,080
package might have like several

569
00:24:58,080 --> 00:25:00,240
different packages have the same cves

570
00:25:00,240 --> 00:25:03,120
that that same cve in a different

571
00:25:03,120 --> 00:25:06,360
package in a different runtime

572
00:25:06,360 --> 00:25:09,059
represent a whole different risk level

573
00:25:09,059 --> 00:25:12,480
so even that even the same cve even the

574
00:25:12,480 --> 00:25:14,520
same package might have a different

575
00:25:14,520 --> 00:25:17,340
security rating in a container itself so

576
00:25:17,340 --> 00:25:21,179
it's a very nuanced detailed problem

577
00:25:21,179 --> 00:25:22,919
but

578
00:25:22,919 --> 00:25:26,940
try selling that idea to a government a

579
00:25:26,940 --> 00:25:29,159
Department of Defense in any government

580
00:25:29,159 --> 00:25:31,799
saying hey you know what we have 1000

581
00:25:31,799 --> 00:25:34,200
vulnerabilities here but we don't think

582
00:25:34,200 --> 00:25:36,900
it's exploitable you we might not think

583
00:25:36,900 --> 00:25:38,580
it's exploitable but we know that

584
00:25:38,580 --> 00:25:40,200
they're there it's non-comfortable and

585
00:25:40,200 --> 00:25:41,580
that might be in the future certain

586
00:25:41,580 --> 00:25:44,039
issues so I know I have a feeling that

587
00:25:44,039 --> 00:25:46,559
customers governments will be demanding

588
00:25:46,559 --> 00:25:47,760
more of this

589
00:25:47,760 --> 00:25:49,620
but we need to have a nuanced

590
00:25:49,620 --> 00:25:52,200
understanding of what matters and

591
00:25:52,200 --> 00:25:54,539
especially we need to understand what's

592
00:25:54,539 --> 00:25:56,760
the highest priority so that we can make

593
00:25:56,760 --> 00:25:58,919
some progress right if you go into a

594
00:25:58,919 --> 00:26:00,720
container as a devops engineer and see

595
00:26:00,720 --> 00:26:02,940
2000 vulnerabilities

596
00:26:02,940 --> 00:26:06,299
40 high and critical where do you even

597
00:26:06,299 --> 00:26:09,059
start like which ones should I start

598
00:26:09,059 --> 00:26:11,159
removing and it is not the one container

599
00:26:11,159 --> 00:26:12,600
that you need to work with in a company

600
00:26:12,600 --> 00:26:14,820
there are you know in our survey we

601
00:26:14,820 --> 00:26:17,520
asked questions about the scale that can

602
00:26:17,520 --> 00:26:21,059
be 400 400

603
00:26:21,059 --> 00:26:23,100
000 containers in an environment right

604
00:26:23,100 --> 00:26:24,840
and everything is changing all the time

605
00:26:24,840 --> 00:26:27,539
software is a living organism so to be

606
00:26:27,539 --> 00:26:31,080
able to do that at scale becomes a huge

607
00:26:31,080 --> 00:26:33,960
issue without prioritization saying I'm

608
00:26:33,960 --> 00:26:35,220
going to have zero vulnerabilities

609
00:26:35,220 --> 00:26:37,860
period I don't think you can make any

610
00:26:37,860 --> 00:26:40,620
anything work for you but that's a great

611
00:26:40,620 --> 00:26:42,659
question

612
00:26:42,659 --> 00:26:45,480
can I take one more question maybe no

613
00:26:45,480 --> 00:26:49,740
one okay any other questions

614
00:26:49,740 --> 00:26:52,279
go ahead

615
00:27:08,640 --> 00:27:11,520
so the question is we have seen 20

616
00:27:11,520 --> 00:27:14,760
percent in the previous report critical

617
00:27:14,760 --> 00:27:17,100
and high category vulnerabilities in

618
00:27:17,100 --> 00:27:19,020
these containers how did we go about

619
00:27:19,020 --> 00:27:22,940
scanning and finding them labeling them

620
00:27:27,179 --> 00:27:29,820
depending on which scanner you use you

621
00:27:29,820 --> 00:27:32,700
get different results oh my God I have

622
00:27:32,700 --> 00:27:34,559
put my hair so many nice just like

623
00:27:34,559 --> 00:27:36,120
trying to figure that question out I'm

624
00:27:36,120 --> 00:27:37,740
so glad that you asked

625
00:27:37,740 --> 00:27:40,380
so many different so there are certain

626
00:27:40,380 --> 00:27:42,900
scanners that don't even

627
00:27:42,900 --> 00:27:47,640
reveal certain CVS some others do you

628
00:27:47,640 --> 00:27:48,960
know some people say like you know over

629
00:27:48,960 --> 00:27:51,600
counting things just like looking at the

630
00:27:51,600 --> 00:27:53,340
CV and the same package different path

631
00:27:53,340 --> 00:27:55,740
as a different incident count which I

632
00:27:55,740 --> 00:27:57,600
think shows the effort it's An

633
00:27:57,600 --> 00:27:59,700
Occurrence but it's not necessarily a

634
00:27:59,700 --> 00:28:03,480
unique cve so these scanners need to be

635
00:28:03,480 --> 00:28:06,960
standardized hopefully we will do that

636
00:28:06,960 --> 00:28:09,539
soon because I have again spent so much

637
00:28:09,539 --> 00:28:12,659
time to understand comparis we have used

638
00:28:12,659 --> 00:28:14,760
we are putting that into our slim AI

639
00:28:14,760 --> 00:28:17,340
platform so that you can easily dip

640
00:28:17,340 --> 00:28:19,860
these vulnerability scanners but you can

641
00:28:19,860 --> 00:28:22,200
see those diffs can be huge so same

642
00:28:22,200 --> 00:28:25,380
container might have you know 1000

643
00:28:25,380 --> 00:28:28,080
vulnerabilities in one and two thousand

644
00:28:28,080 --> 00:28:30,659
five hundred in another and they are

645
00:28:30,659 --> 00:28:33,000
both correct and sometimes you need to

646
00:28:33,000 --> 00:28:34,740
take a step back and understand but you

647
00:28:34,740 --> 00:28:36,600
don't have the time to do this because

648
00:28:36,600 --> 00:28:38,880
we just talked about the scale issue

649
00:28:38,880 --> 00:28:41,400
right we need to standardize these for

650
00:28:41,400 --> 00:28:43,679
sure I think I understand and have each

651
00:28:43,679 --> 00:28:45,960
and every scanner works from a design

652
00:28:45,960 --> 00:28:49,980
perspective so I used gripe 3B several

653
00:28:49,980 --> 00:28:52,620
tools like all the things that you know

654
00:28:52,620 --> 00:28:55,140
the usual suspects I understand their

655
00:28:55,140 --> 00:28:57,000
design principles but they are very

656
00:28:57,000 --> 00:28:58,799
different from each other and it's a

657
00:28:58,799 --> 00:29:01,799
headache that's my answer I guess thank

658
00:29:01,799 --> 00:29:04,039
you

