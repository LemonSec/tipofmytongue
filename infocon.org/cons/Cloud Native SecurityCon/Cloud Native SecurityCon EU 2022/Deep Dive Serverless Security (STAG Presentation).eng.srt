1
00:00:00,160 --> 00:00:02,800
hello and welcome to the panel for cncf

2
00:00:02,800 --> 00:00:05,440
today we are well we are an interesting

3
00:00:05,440 --> 00:00:06,879
bunch over here to talk to you about

4
00:00:06,879 --> 00:00:08,639
serverless and everything server

5
00:00:08,639 --> 00:00:09,760
security

6
00:00:09,760 --> 00:00:11,280
for to start off with we're going to do

7
00:00:11,280 --> 00:00:12,639
a basic introduction i'll just start

8
00:00:12,639 --> 00:00:14,639
with my introduction i love to have a

9
00:00:14,639 --> 00:00:16,079
few words from each one of the members

10
00:00:16,079 --> 00:00:18,560
over here on the panel my name is ashish

11
00:00:18,560 --> 00:00:20,480
i am the host of classification podcast

12
00:00:20,480 --> 00:00:23,279
i'm a cso on my925 and run a live stream

13
00:00:23,279 --> 00:00:24,880
on cloud security and cloud native

14
00:00:24,880 --> 00:00:26,800
security over the weekend that's my

15
00:00:26,800 --> 00:00:28,720
short intro over to you andrew for your

16
00:00:28,720 --> 00:00:31,199
quick introduction

17
00:00:31,199 --> 00:00:32,719
i'm andrew krug i'm a technical

18
00:00:32,719 --> 00:00:35,040
evangelist at datadog done a lot of work

19
00:00:35,040 --> 00:00:37,520
on serverless stuff in the past uh

20
00:00:37,520 --> 00:00:39,440
that's my short intro i'll go ahead and

21
00:00:39,440 --> 00:00:41,920
hand it over to ariel

22
00:00:41,920 --> 00:00:45,200
thank you andrews i'm ariel uh i'm a

23
00:00:45,200 --> 00:00:48,000
cloud security evangelist in cisco

24
00:00:48,000 --> 00:00:49,280
in the emerging technologies and

25
00:00:49,280 --> 00:00:51,280
innovation team uh it's a new team that

26
00:00:51,280 --> 00:00:53,600
cisco set up to tackle cloud

27
00:00:53,600 --> 00:00:55,120
technologies

28
00:00:55,120 --> 00:00:56,960
and security among others

29
00:00:56,960 --> 00:00:58,960
and add it over to

30
00:00:58,960 --> 00:01:00,559
roger

31
00:01:00,559 --> 00:01:03,359
thank you ariel i'm ravishri and i'm a

32
00:01:03,359 --> 00:01:05,438
cloud security specialist at nokia

33
00:01:05,438 --> 00:01:08,080
handling the cloud security for one of

34
00:01:08,080 --> 00:01:09,840
the largest private clouds called nokia

35
00:01:09,840 --> 00:01:12,080
enterprises services cloud happy to be

36
00:01:12,080 --> 00:01:13,360
here

37
00:01:13,360 --> 00:01:15,600
awesome thank you everyone for coming so

38
00:01:15,600 --> 00:01:16,640
i want to kick it off because

39
00:01:16,640 --> 00:01:18,720
considering that's a 40 minute panel uh

40
00:01:18,720 --> 00:01:20,159
i want to start off with the basic for a

41
00:01:20,159 --> 00:01:22,080
lot of people may not even know who we

42
00:01:22,080 --> 00:01:24,320
are what do we do so maybe the first

43
00:01:24,320 --> 00:01:26,400
question to ask is what is tag

44
00:01:26,400 --> 00:01:28,960
in the cncf and how does anyone become

45
00:01:28,960 --> 00:01:30,320
part of it

46
00:01:30,320 --> 00:01:31,600
andrew do you want to just kick it off

47
00:01:31,600 --> 00:01:33,600
man

48
00:01:33,600 --> 00:01:35,439
yeah so the the tag group or the

49
00:01:35,439 --> 00:01:38,320
security technology advisory group is a

50
00:01:38,320 --> 00:01:40,320
a group of folks who facilitate and

51
00:01:40,320 --> 00:01:43,200
collaborate on a variety of security

52
00:01:43,200 --> 00:01:46,079
topics across cncf right so

53
00:01:46,079 --> 00:01:47,680
um they do do everything from

54
00:01:47,680 --> 00:01:49,360
architecture patterns prescriptive

55
00:01:49,360 --> 00:01:50,640
guidance to

56
00:01:50,640 --> 00:01:53,439
white papers uh like the the one that

57
00:01:53,439 --> 00:01:54,720
we're going to talk about a little later

58
00:01:54,720 --> 00:01:57,280
on in the panel um but basically this is

59
00:01:57,280 --> 00:01:59,920
just an open group that really anyone

60
00:01:59,920 --> 00:02:01,439
can be a part of and i think that's one

61
00:02:01,439 --> 00:02:03,680
of the really cool things about all

62
00:02:03,680 --> 00:02:06,880
things cncf but also the stag is that

63
00:02:06,880 --> 00:02:08,720
it's really open to everybody so you

64
00:02:08,720 --> 00:02:11,440
don't have to be a security expert to

65
00:02:11,440 --> 00:02:12,560
show up and make a meaningful

66
00:02:12,560 --> 00:02:14,640
contribution

67
00:02:14,640 --> 00:02:16,319
is that only for serverless security or

68
00:02:16,319 --> 00:02:18,640
can people join any security project

69
00:02:18,640 --> 00:02:20,480
people can join any security project and

70
00:02:20,480 --> 00:02:23,360
there's there's a variety of uh security

71
00:02:23,360 --> 00:02:24,800
products going on everything from like

72
00:02:24,800 --> 00:02:27,040
serverless to software build materials

73
00:02:27,040 --> 00:02:28,560
projects to

74
00:02:28,560 --> 00:02:30,160
things like uh

75
00:02:30,160 --> 00:02:32,640
gatekeeper for kubernetes like all that

76
00:02:32,640 --> 00:02:35,040
lots lots and lots of great work so

77
00:02:35,040 --> 00:02:36,800
i'd encourage anybody who was interested

78
00:02:36,800 --> 00:02:38,959
in this panel you're probably the target

79
00:02:38,959 --> 00:02:42,879
demographic for the stack right

80
00:02:42,879 --> 00:02:45,200
cool uh well i guess the it's there's no

81
00:02:45,200 --> 00:02:46,720
surprises what is security one is the

82
00:02:46,720 --> 00:02:48,480
coolest panel that's why we're all here

83
00:02:48,480 --> 00:02:49,200
so

84
00:02:49,200 --> 00:02:50,720
we should definitely encourage you to

85
00:02:50,720 --> 00:02:52,959
join the serverless security one uh

86
00:02:52,959 --> 00:02:54,879
talking about serverless security uh

87
00:02:54,879 --> 00:02:57,519
maybe a good question to ask next or

88
00:02:57,519 --> 00:02:59,440
maybe is this for you ariel

89
00:02:59,440 --> 00:03:00,879
why was there a need for a serverless

90
00:03:00,879 --> 00:03:02,560
security white paper because is there

91
00:03:02,560 --> 00:03:04,000
like already a serverless white paper in

92
00:03:04,000 --> 00:03:05,599
cncf

93
00:03:05,599 --> 00:03:06,879
right so there is a serverless white

94
00:03:06,879 --> 00:03:08,400
paper and i think there was a great work

95
00:03:08,400 --> 00:03:10,080
which was done you know a few years ago

96
00:03:10,080 --> 00:03:11,840
to try to highlight what is the threat

97
00:03:11,840 --> 00:03:13,920
landscape uh but you know like

98
00:03:13,920 --> 00:03:15,360
everything in security things are

99
00:03:15,360 --> 00:03:17,040
changing you know serverless is changing

100
00:03:17,040 --> 00:03:19,280
there are more services there are more

101
00:03:19,280 --> 00:03:21,519
uh attack options more risks which are

102
00:03:21,519 --> 00:03:23,120
being discovered and i think it was a

103
00:03:23,120 --> 00:03:24,239
good time

104
00:03:24,239 --> 00:03:26,640
uh to refresh the previous work to take

105
00:03:26,640 --> 00:03:28,080
a more broader look

106
00:03:28,080 --> 00:03:30,239
both what the risk which exists or what

107
00:03:30,239 --> 00:03:33,360
new uh you know risk factors

108
00:03:33,360 --> 00:03:36,560
uh can serve this application face on

109
00:03:36,560 --> 00:03:38,000
the other side also to look at what are

110
00:03:38,000 --> 00:03:39,760
solutions what things which things were

111
00:03:39,760 --> 00:03:41,599
improved and there's a tremendous

112
00:03:41,599 --> 00:03:42,720
progress

113
00:03:42,720 --> 00:03:44,159
and a different cloud

114
00:03:44,159 --> 00:03:46,959
provider which was made that made uh

115
00:03:46,959 --> 00:03:49,519
this new area uh require some

116
00:03:49,519 --> 00:03:51,280
refreshment and that was i think part of

117
00:03:51,280 --> 00:03:52,560
the purposes

118
00:03:52,560 --> 00:03:55,200
uh behind this white paper

119
00:03:55,200 --> 00:03:57,360
so is it quite i mean i would have

120
00:03:57,360 --> 00:03:59,120
thought a lot of the security is usually

121
00:03:59,120 --> 00:04:01,920
covered already so what are some of the

122
00:04:01,920 --> 00:04:03,280
interesting threats you may have come

123
00:04:03,280 --> 00:04:05,280
across for serverless that kind of

124
00:04:05,280 --> 00:04:07,760
i mean makes it different and maybe

125
00:04:07,760 --> 00:04:09,200
drives the required requirement for a

126
00:04:09,200 --> 00:04:12,000
separate white paper

127
00:04:12,720 --> 00:04:14,159
second

128
00:04:14,159 --> 00:04:15,599
perspective sorry

129
00:04:15,599 --> 00:04:18,079
right so you know i think

130
00:04:18,079 --> 00:04:20,238
the in in serverless there are general

131
00:04:20,238 --> 00:04:22,240
there are you know different attack

132
00:04:22,240 --> 00:04:24,080
vectors you know the

133
00:04:24,080 --> 00:04:26,720
uh the threats coming you know from

134
00:04:26,720 --> 00:04:28,240
different space let me let me just kind

135
00:04:28,240 --> 00:04:30,240
of try to forget the passwords and talk

136
00:04:30,240 --> 00:04:32,000
about some some details

137
00:04:32,000 --> 00:04:33,280
um

138
00:04:33,280 --> 00:04:34,720
the serverless function is really

139
00:04:34,720 --> 00:04:36,400
tightly coupled with different cloud

140
00:04:36,400 --> 00:04:40,160
services and uh the way to see you know

141
00:04:40,160 --> 00:04:41,199
the full

142
00:04:41,199 --> 00:04:43,199
uh i would say the full

143
00:04:43,199 --> 00:04:45,120
um

144
00:04:45,120 --> 00:04:47,360
i would say the way you can visualize

145
00:04:47,360 --> 00:04:49,840
your entire uh environment or the

146
00:04:49,840 --> 00:04:51,520
permissions that you grant your

147
00:04:51,520 --> 00:04:53,280
entitlement and and different

148
00:04:53,280 --> 00:04:55,120
configurations that you do on different

149
00:04:55,120 --> 00:04:56,560
cloud services

150
00:04:56,560 --> 00:04:59,440
uh has a significant impact on uh the

151
00:04:59,440 --> 00:05:01,600
actual risk of the serverless function

152
00:05:01,600 --> 00:05:03,520
so i think in the beginning there was

153
00:05:03,520 --> 00:05:06,960
the motivation to try and to draft uh

154
00:05:06,960 --> 00:05:08,960
what would be the risk model what will

155
00:05:08,960 --> 00:05:10,800
be the different threats

156
00:05:10,800 --> 00:05:13,199
now we can see more and more services

157
00:05:13,199 --> 00:05:15,120
which are being used today together with

158
00:05:15,120 --> 00:05:17,520
serverless functions we can see you know

159
00:05:17,520 --> 00:05:20,479
uh even new type of thing that are going

160
00:05:20,479 --> 00:05:21,919
to be addressed like you know software

161
00:05:21,919 --> 00:05:24,639
bill of material like uh getting a

162
00:05:24,639 --> 00:05:26,000
better understanding of this different

163
00:05:26,000 --> 00:05:28,560
supply chain uh area of the different

164
00:05:28,560 --> 00:05:30,000
software packages

165
00:05:30,000 --> 00:05:32,400
uh in your serverless function so even

166
00:05:32,400 --> 00:05:34,560
if there are small pieces of code they

167
00:05:34,560 --> 00:05:36,080
still contain

168
00:05:36,080 --> 00:05:38,000
different packages or different you know

169
00:05:38,000 --> 00:05:40,320
they use different services

170
00:05:40,320 --> 00:05:42,880
that create a different risk on your uh

171
00:05:42,880 --> 00:05:44,560
application so i think

172
00:05:44,560 --> 00:05:47,120
all of it together nailed down to a need

173
00:05:47,120 --> 00:05:49,360
to both address uh the serverless

174
00:05:49,360 --> 00:05:52,320
security from you know an updated angle

175
00:05:52,320 --> 00:05:55,120
did i answer your question ashish

176
00:05:55,120 --> 00:05:57,600
yeah you did i kind of answered it was

177
00:05:57,600 --> 00:05:58,800
there any specific examples that you

178
00:05:58,800 --> 00:06:00,319
wanted to call out for attack vectors

179
00:06:00,319 --> 00:06:02,400
for serverless

180
00:06:02,400 --> 00:06:03,919
so i think you know

181
00:06:03,919 --> 00:06:05,600
um

182
00:06:05,600 --> 00:06:06,880
we can just take a look and i think you

183
00:06:06,880 --> 00:06:08,639
know we can discuss it more in lens you

184
00:06:08,639 --> 00:06:10,400
know later in you know in our panel

185
00:06:10,400 --> 00:06:13,759
about uh the new exposure of https uh

186
00:06:13,759 --> 00:06:16,000
http endpoint without passing through

187
00:06:16,000 --> 00:06:18,400
the api gateway uh to make it you know

188
00:06:18,400 --> 00:06:20,880
simpler and easy to to use those

189
00:06:20,880 --> 00:06:23,199
endpoints but eventually you know you

190
00:06:23,199 --> 00:06:26,080
you overlook i mean it's very easy and i

191
00:06:26,080 --> 00:06:28,080
understand the motivation why you know

192
00:06:28,080 --> 00:06:28,960
uh

193
00:06:28,960 --> 00:06:30,880
for example in aws they released this

194
00:06:30,880 --> 00:06:32,160
functionality but

195
00:06:32,160 --> 00:06:34,160
bypassing you know api gateway or

196
00:06:34,160 --> 00:06:37,600
bypassing you know load balancers um it

197
00:06:37,600 --> 00:06:39,840
avoids all of the security

198
00:06:39,840 --> 00:06:42,560
uh you know a lot of security mechanisms

199
00:06:42,560 --> 00:06:43,840
which are built into it you know to

200
00:06:43,840 --> 00:06:45,840
validate and to verify and to

201
00:06:45,840 --> 00:06:48,160
authenticate and authorize uh the

202
00:06:48,160 --> 00:06:50,720
requests which again for as an example

203
00:06:50,720 --> 00:06:52,639
give put the serverless function which

204
00:06:52,639 --> 00:06:55,039
is being invoked uh in a different risk

205
00:06:55,039 --> 00:06:56,720
so maybe this is like something specific

206
00:06:56,720 --> 00:06:59,120
to a new service they try to trade the

207
00:06:59,120 --> 00:07:00,240
business but usually you know when

208
00:07:00,240 --> 00:07:03,440
people ask me about it uh and before

209
00:07:03,440 --> 00:07:06,479
going diving into like a specific attack

210
00:07:06,479 --> 00:07:09,199
which were crafted for serverless uh i'm

211
00:07:09,199 --> 00:07:11,520
always trying to give an example like

212
00:07:11,520 --> 00:07:13,199
look at the look at like you know that

213
00:07:13,199 --> 00:07:14,960
the permissions the fact that every

214
00:07:14,960 --> 00:07:16,720
function require a different

215
00:07:16,720 --> 00:07:18,639
set of permissions you know well by

216
00:07:18,639 --> 00:07:19,680
default

217
00:07:19,680 --> 00:07:21,919
in especially in large scale environment

218
00:07:21,919 --> 00:07:25,280
uh reach the situation that you have uh

219
00:07:25,280 --> 00:07:27,039
you know permissions which are not

220
00:07:27,039 --> 00:07:29,520
clearly designed or tailored for this

221
00:07:29,520 --> 00:07:30,639
function and you're going to find

222
00:07:30,639 --> 00:07:32,960
yourself in uh granting application a

223
00:07:32,960 --> 00:07:35,599
lot of uh permissions to do or you know

224
00:07:35,599 --> 00:07:37,440
a lot of resources and to do many things

225
00:07:37,440 --> 00:07:39,360
on things which you're not supposed to

226
00:07:39,360 --> 00:07:41,680
not you know or at least didn't plan to

227
00:07:41,680 --> 00:07:43,840
and the result is that if a function is

228
00:07:43,840 --> 00:07:45,520
breached

229
00:07:45,520 --> 00:07:47,039
you know the impact which you know is is

230
00:07:47,039 --> 00:07:48,400
much larger

231
00:07:48,400 --> 00:07:49,680
now

232
00:07:49,680 --> 00:07:51,120
when you look at for example you know

233
00:07:51,120 --> 00:07:53,280
what uh all you know the different

234
00:07:53,280 --> 00:07:54,960
uh the functions and you know the

235
00:07:54,960 --> 00:07:56,560
different services or the buses you know

236
00:07:56,560 --> 00:07:58,960
that they are connected uh

237
00:07:58,960 --> 00:08:01,120
and again under the assumption that

238
00:08:01,120 --> 00:08:03,120
you want them to run free you want them

239
00:08:03,120 --> 00:08:04,879
to run in a very smooth way you want to

240
00:08:04,879 --> 00:08:07,599
avoid performance you know uh

241
00:08:07,599 --> 00:08:10,800
degradations the ability to secure them

242
00:08:10,800 --> 00:08:13,199
is of course you know much lower or much

243
00:08:13,199 --> 00:08:15,199
less and this is why you need to be much

244
00:08:15,199 --> 00:08:16,560
more sensitive

245
00:08:16,560 --> 00:08:18,080
to maybe aspect that you are less

246
00:08:18,080 --> 00:08:19,440
sensitive in

247
00:08:19,440 --> 00:08:22,080
more stateful applications

248
00:08:22,080 --> 00:08:24,080
sweet uh thank you for that uh andrew do

249
00:08:24,080 --> 00:08:26,319
you want to follow up on that as well i

250
00:08:26,319 --> 00:08:28,240
think the bottom line here when we think

251
00:08:28,240 --> 00:08:30,080
about the attacks and threats for

252
00:08:30,080 --> 00:08:31,599
serverless is really

253
00:08:31,599 --> 00:08:34,880
to to spin that and think about how the

254
00:08:34,880 --> 00:08:36,958
attack surface is increasing

255
00:08:36,958 --> 00:08:38,958
right so when i first started to look at

256
00:08:38,958 --> 00:08:41,360
this stuff in in 2017

257
00:08:41,360 --> 00:08:43,839
aws lambda for example was pretty new

258
00:08:43,839 --> 00:08:45,360
and you know there's like a couple of

259
00:08:45,360 --> 00:08:47,279
patterns for for getting events and

260
00:08:47,279 --> 00:08:49,519
doing invocations and now if you think

261
00:08:49,519 --> 00:08:51,120
about it you really have to kind of

262
00:08:51,120 --> 00:08:53,040
think about serverless security in like

263
00:08:53,040 --> 00:08:54,880
three different fronts you have the the

264
00:08:54,880 --> 00:08:57,040
runtime itself you have the network

265
00:08:57,040 --> 00:08:59,360
perimeter and you have identity

266
00:08:59,360 --> 00:09:01,680
right and maybe that identity now is

267
00:09:01,680 --> 00:09:03,760
multi-cloud so

268
00:09:03,760 --> 00:09:06,240
uh it's just more and more complicated

269
00:09:06,240 --> 00:09:08,160
and as different runtimes bolt on more

270
00:09:08,160 --> 00:09:10,480
functionality to extend the capability

271
00:09:10,480 --> 00:09:12,959
of the runtime like we have layers now

272
00:09:12,959 --> 00:09:15,040
and you can even bring your own docker

273
00:09:15,040 --> 00:09:17,279
container that suddenly can be run as a

274
00:09:17,279 --> 00:09:19,839
serverless function the more diversity

275
00:09:19,839 --> 00:09:21,200
that we get in those environments they

276
00:09:21,200 --> 00:09:22,880
become more and more challenging to

277
00:09:22,880 --> 00:09:24,480
defend right because that was always the

278
00:09:24,480 --> 00:09:26,480
sales pitch before is you have the

279
00:09:26,480 --> 00:09:28,880
shared responsibility model and then you

280
00:09:28,880 --> 00:09:32,320
have this very very small thing that

281
00:09:32,320 --> 00:09:34,480
that you can laser focus on and as that

282
00:09:34,480 --> 00:09:37,120
small thing becomes big you know we're

283
00:09:37,120 --> 00:09:39,600
increasingly challenged

284
00:09:39,600 --> 00:09:41,360
i thought that uh do you agree with that

285
00:09:41,360 --> 00:09:42,640
ariel

286
00:09:42,640 --> 00:09:44,240
yeah yeah and you know i definitely

287
00:09:44,240 --> 00:09:46,880
could i just wanted one you know sword

288
00:09:46,880 --> 00:09:48,399
and andrew said you know the attack

289
00:09:48,399 --> 00:09:50,560
victories increases but unlocking it

290
00:09:50,560 --> 00:09:52,640
from the defender side the ability to

291
00:09:52,640 --> 00:09:54,800
defend without you know creating you

292
00:09:54,800 --> 00:09:57,279
know friction or degradation or

293
00:09:57,279 --> 00:09:59,440
you know imposing some you know external

294
00:09:59,440 --> 00:10:01,680
binaries into your functions is really

295
00:10:01,680 --> 00:10:04,079
small this is why you know you need to

296
00:10:04,079 --> 00:10:05,279
be super careful and how do you

297
00:10:05,279 --> 00:10:08,079
configure the monitor

298
00:10:08,079 --> 00:10:10,320
yeah is actually true i was going to add

299
00:10:10,320 --> 00:10:12,320
a few more uh solid examples as well i

300
00:10:12,320 --> 00:10:14,000
think to what you said aerial as well

301
00:10:14,000 --> 00:10:15,600
about the api space i think it's

302
00:10:15,600 --> 00:10:17,440
definitely interesting because um and i

303
00:10:17,440 --> 00:10:18,720
think maybe this is a combination of

304
00:10:18,720 --> 00:10:20,800
what andrew and both you said as well

305
00:10:20,800 --> 00:10:23,040
with the apis being

306
00:10:23,040 --> 00:10:25,600
i guess the trigger for starting off an

307
00:10:25,600 --> 00:10:27,839
event or a serverless event

308
00:10:27,839 --> 00:10:29,839
not having control over the api that can

309
00:10:29,839 --> 00:10:31,360
send a request to your android be

310
00:10:31,360 --> 00:10:33,839
multi-cloud it could be an iot device

311
00:10:33,839 --> 00:10:35,760
and plus the fact that now there is no

312
00:10:35,760 --> 00:10:37,200
workload protection or there's no

313
00:10:37,200 --> 00:10:38,640
antivirus that you can actually deploy

314
00:10:38,640 --> 00:10:41,600
on a serverless machine the the

315
00:10:41,600 --> 00:10:43,519
i guess the monitoring aspect of it is

316
00:10:43,519 --> 00:10:45,040
like what are you really looking for in

317
00:10:45,040 --> 00:10:47,839
a real-time context is a lot more

318
00:10:47,839 --> 00:10:49,839
complex and i don't know how many people

319
00:10:49,839 --> 00:10:52,160
actually out there are thinking about

320
00:10:52,160 --> 00:10:54,160
hey we want to deploy serverless but

321
00:10:54,160 --> 00:10:56,240
then i don't have to work like you got

322
00:10:56,240 --> 00:10:57,920
andrew again shared responsibility how

323
00:10:57,920 --> 00:11:00,959
much is mine how much is uh the aws or

324
00:11:00,959 --> 00:11:02,079
an azure or a google cloud

325
00:11:02,079 --> 00:11:03,760
responsibility i think that's definitely

326
00:11:03,760 --> 00:11:05,120
another interesting aspect that kind of

327
00:11:05,120 --> 00:11:07,360
came out i think the threat that

328
00:11:07,360 --> 00:11:10,800
makes me always uh cringe is the the

329
00:11:10,800 --> 00:11:12,640
denial of wallet attack that people talk

330
00:11:12,640 --> 00:11:14,560
about where because you don't really

331
00:11:14,560 --> 00:11:16,079
control the number of

332
00:11:16,079 --> 00:11:18,240
servers serverless instances that can be

333
00:11:18,240 --> 00:11:20,160
created you could basically keep sending

334
00:11:20,160 --> 00:11:22,240
a request and it just keeps adding more

335
00:11:22,240 --> 00:11:24,880
lambda functions until we end up with a

336
00:11:24,880 --> 00:11:27,120
fat bill in the end and that stephanie

337
00:11:27,120 --> 00:11:28,800
was my favorite one that i was reading

338
00:11:28,800 --> 00:11:31,360
all about it so at least that's uh are

339
00:11:31,360 --> 00:11:32,720
there any attacks that you guys have

340
00:11:32,720 --> 00:11:34,640
found to be fascinating for yourself in

341
00:11:34,640 --> 00:11:36,000
the serverless space i know andre you're

342
00:11:36,000 --> 00:11:38,720
gonna go first

343
00:11:39,120 --> 00:11:41,680
i mean there's there's a variety right

344
00:11:41,680 --> 00:11:42,959
and i think that there's been a lot of

345
00:11:42,959 --> 00:11:45,920
attention lately on the uh crypto miners

346
00:11:45,920 --> 00:11:48,399
that have popped up um oh yeah there are

347
00:11:48,399 --> 00:11:50,639
our purpose built for lambda functions

348
00:11:50,639 --> 00:11:54,160
so this is kind of a interesting time

349
00:11:54,160 --> 00:11:55,920
right because we we have this thing now

350
00:11:55,920 --> 00:11:57,279
that is popular enough that people are

351
00:11:57,279 --> 00:11:59,040
making bespoke malware but that's really

352
00:11:59,040 --> 00:12:02,000
not the attack vector that's the the

353
00:12:02,000 --> 00:12:04,399
post exploitation you know sort of

354
00:12:04,399 --> 00:12:06,959
mechanism that the attacker is using i

355
00:12:06,959 --> 00:12:08,720
think the most important thing to to

356
00:12:08,720 --> 00:12:10,399
realize is that attack vectors for

357
00:12:10,399 --> 00:12:12,000
serverless are really just attack

358
00:12:12,000 --> 00:12:14,000
vectors like this they're the same ones

359
00:12:14,000 --> 00:12:16,320
that are prevalent in our owasp top 10

360
00:12:16,320 --> 00:12:18,959
model it's just that uh from a forensics

361
00:12:18,959 --> 00:12:20,880
perspective because the environment gets

362
00:12:20,880 --> 00:12:23,200
thrown away at the end it can be really

363
00:12:23,200 --> 00:12:25,200
really difficult to reverse what

364
00:12:25,200 --> 00:12:26,880
happened so if you think about something

365
00:12:26,880 --> 00:12:29,920
like deserialization vulnerabilities um

366
00:12:29,920 --> 00:12:33,120
really really basic right uh but the

367
00:12:33,120 --> 00:12:35,279
evidence that's left behind is only as

368
00:12:35,279 --> 00:12:37,519
good as the logging

369
00:12:37,519 --> 00:12:38,560
yeah

370
00:12:38,560 --> 00:12:40,079
yeah it's just very very fine do you

371
00:12:40,079 --> 00:12:42,079
have one as well ariel

372
00:12:42,079 --> 00:12:43,360
yeah i want you to know what you know

373
00:12:43,360 --> 00:12:45,040
andrew was saying it's really an

374
00:12:45,040 --> 00:12:46,480
important point you know how do you

375
00:12:46,480 --> 00:12:48,079
inspect them because

376
00:12:48,079 --> 00:12:49,519
in containers for example if you're on

377
00:12:49,519 --> 00:12:51,040
crypto miner campaign in your

378
00:12:51,040 --> 00:12:52,800
environment it's easy to see the new

379
00:12:52,800 --> 00:12:54,480
amount of containers in your search and

380
00:12:54,480 --> 00:12:56,560
say hey i'm not familiar with it but in

381
00:12:56,560 --> 00:12:58,800
functions you know which are ephemeral

382
00:12:58,800 --> 00:13:00,800
so they execute and decide

383
00:13:00,800 --> 00:13:02,560
and you only can see afterwards you know

384
00:13:02,560 --> 00:13:04,639
how much time or how many executions

385
00:13:04,639 --> 00:13:06,720
where and they try to think to record

386
00:13:06,720 --> 00:13:08,800
much harder to detect this type of uh

387
00:13:08,800 --> 00:13:11,600
campaigns or these type of uh attacks

388
00:13:11,600 --> 00:13:13,519
so as andrew said you know the attacks

389
00:13:13,519 --> 00:13:15,040
could be the same but you know the

390
00:13:15,040 --> 00:13:17,120
detection is much harder

391
00:13:17,120 --> 00:13:18,959
yeah i mean maybe it's a good segue into

392
00:13:18,959 --> 00:13:20,800
what's probably a good practice to have

393
00:13:20,800 --> 00:13:22,639
for

394
00:13:22,639 --> 00:13:24,160
managing or certainly starting off doing

395
00:13:24,160 --> 00:13:26,720
serverless security i think some of the

396
00:13:26,720 --> 00:13:28,560
initial points that come to mind is to

397
00:13:28,560 --> 00:13:31,600
have a control over your identity which

398
00:13:31,600 --> 00:13:33,279
again we've called out already maybe

399
00:13:33,279 --> 00:13:35,360
having some kind of a rollback role

400
00:13:35,360 --> 00:13:37,519
based access control for how much

401
00:13:37,519 --> 00:13:38,959
because i think the number of lambda

402
00:13:38,959 --> 00:13:41,839
functions you see with admin roles in

403
00:13:41,839 --> 00:13:43,600
aws and i'm sure

404
00:13:43,600 --> 00:13:45,440
the versions of this do exist in azure

405
00:13:45,440 --> 00:13:47,040
and google cloud as well

406
00:13:47,040 --> 00:13:48,399
the whole supply chain security has

407
00:13:48,399 --> 00:13:49,760
definitely become quite common as well

408
00:13:49,760 --> 00:13:51,600
they have a cicd pipeline that can at

409
00:13:51,600 --> 00:13:54,160
the end trigger a lambda or some other

410
00:13:54,160 --> 00:13:56,240
kind of a serverless function but isn't

411
00:13:56,240 --> 00:13:57,519
even doing a validation whether it's

412
00:13:57,519 --> 00:13:59,519
authenticated or if it's restricted to a

413
00:13:59,519 --> 00:14:01,279
certain function as well

414
00:14:01,279 --> 00:14:04,079
i think the one uh theme that i've taken

415
00:14:04,079 --> 00:14:06,399
away from what what you have ariel and

416
00:14:06,399 --> 00:14:09,040
andrew said is the the in the detection

417
00:14:09,040 --> 00:14:11,199
part and i know i think

418
00:14:11,199 --> 00:14:12,320
andrew you had some thoughts on the

419
00:14:12,320 --> 00:14:14,399
whole logging aspect of this as well in

420
00:14:14,399 --> 00:14:16,320
the serverless space what do people do

421
00:14:16,320 --> 00:14:17,680
for logging because it sounds like i

422
00:14:17,680 --> 00:14:19,680
mean i can build the most secure

423
00:14:19,680 --> 00:14:21,839
serverless function with identities

424
00:14:21,839 --> 00:14:24,160
covered of good i don't know my code is

425
00:14:24,160 --> 00:14:26,320
really secure i've got sas das running

426
00:14:26,320 --> 00:14:29,760
on it sca my libraries occur cleared but

427
00:14:29,760 --> 00:14:31,760
it would be pointless as ariel said if

428
00:14:31,760 --> 00:14:33,760
there is no detection so what are some

429
00:14:33,760 --> 00:14:35,120
thoughts on the logging in this

430
00:14:35,120 --> 00:14:37,760
serverless world

431
00:14:37,760 --> 00:14:39,360
yeah i think it's uh it's really

432
00:14:39,360 --> 00:14:41,040
interesting kind of right now what we're

433
00:14:41,040 --> 00:14:42,720
seeing evolve in the serverless space

434
00:14:42,720 --> 00:14:43,839
which is that

435
00:14:43,839 --> 00:14:45,600
observability that we used to use for

436
00:14:45,600 --> 00:14:47,600
performance monitoring

437
00:14:47,600 --> 00:14:49,680
and just generally determining if the

438
00:14:49,680 --> 00:14:52,079
system is healthy has become the very

439
00:14:52,079 --> 00:14:53,920
same facilities that we need to do

440
00:14:53,920 --> 00:14:57,040
security right and in some ways our need

441
00:14:57,040 --> 00:14:59,920
to use those same logs for security has

442
00:14:59,920 --> 00:15:02,240
enhanced the the way that we're doing

443
00:15:02,240 --> 00:15:03,760
logging right so

444
00:15:03,760 --> 00:15:06,399
simple things like the idea of having a

445
00:15:06,399 --> 00:15:08,079
a set of standard attributes or

446
00:15:08,079 --> 00:15:10,240
structured log that you're implementing

447
00:15:10,240 --> 00:15:11,760
in code itself

448
00:15:11,760 --> 00:15:14,320
really really critical and then

449
00:15:14,320 --> 00:15:15,920
things like on the cloud provider

450
00:15:15,920 --> 00:15:18,079
control plane side ensuring that you're

451
00:15:18,079 --> 00:15:20,560
following some kind of unified tagging

452
00:15:20,560 --> 00:15:22,800
standard so that you know which pieces

453
00:15:22,800 --> 00:15:24,399
of an application are associated with

454
00:15:24,399 --> 00:15:26,720
providing what service so when those

455
00:15:26,720 --> 00:15:28,240
attacks do come in

456
00:15:28,240 --> 00:15:30,560
and you do have a facility for detecting

457
00:15:30,560 --> 00:15:32,480
that that the attack has come into the

458
00:15:32,480 --> 00:15:34,480
service serverless environment you can

459
00:15:34,480 --> 00:15:36,800
immediately sort of create this

460
00:15:36,800 --> 00:15:38,880
graph and when i say graph i mean like

461
00:15:38,880 --> 00:15:40,959
graph like bloodhound makes like graph

462
00:15:40,959 --> 00:15:41,759
theory

463
00:15:41,759 --> 00:15:43,759
that of the potential path of the

464
00:15:43,759 --> 00:15:46,160
attacker through the system not not just

465
00:15:46,160 --> 00:15:48,800
like a like a dashboard graph but always

466
00:15:48,800 --> 00:15:51,680
be thinking in that sort of uh what what

467
00:15:51,680 --> 00:15:53,199
are the services that are associated

468
00:15:53,199 --> 00:15:54,800
with it what is the identity and then

469
00:15:54,800 --> 00:15:56,399
what are the potential lateral moves

470
00:15:56,399 --> 00:15:59,040
from from inside of that initial attack

471
00:15:59,040 --> 00:16:00,320
right

472
00:16:00,320 --> 00:16:01,839
oh something like a miter attack

473
00:16:01,839 --> 00:16:03,040
framework

474
00:16:03,040 --> 00:16:05,120
a little bit yeah

475
00:16:05,120 --> 00:16:07,120
okay that would be so to your point i

476
00:16:07,120 --> 00:16:08,560
mean i guess because what ariel pen

477
00:16:08,560 --> 00:16:09,680
mentioned was quite interesting because

478
00:16:09,680 --> 00:16:11,519
if it doesn't exist are there any

479
00:16:11,519 --> 00:16:12,720
specific things we're looking for

480
00:16:12,720 --> 00:16:14,160
logging then like i think

481
00:16:14,160 --> 00:16:16,560
are there from a security perspective

482
00:16:16,560 --> 00:16:18,480
what do you recommend uh how does this

483
00:16:18,480 --> 00:16:21,720
help it

484
00:16:22,160 --> 00:16:24,560
so i think it's important to divide uh

485
00:16:24,560 --> 00:16:26,000
divide this up into like kind of two

486
00:16:26,000 --> 00:16:27,759
efforts right it's like one

487
00:16:27,759 --> 00:16:29,199
effort number one is like how do you

488
00:16:29,199 --> 00:16:30,480
make the logs so that they're readable

489
00:16:30,480 --> 00:16:33,040
by machines and by humans right

490
00:16:33,040 --> 00:16:34,720
you'll hear people say like oh jason

491
00:16:34,720 --> 00:16:36,959
just jsonify all your logs and you're

492
00:16:36,959 --> 00:16:37,920
kind of done

493
00:16:37,920 --> 00:16:40,240
on json or even yaml for that matter as

494
00:16:40,240 --> 00:16:42,240
well oh my god

495
00:16:42,240 --> 00:16:44,399
is not super super human readable so

496
00:16:44,399 --> 00:16:45,839
when when i sit down and i make a brand

497
00:16:45,839 --> 00:16:47,519
new serverless app today you know i'm

498
00:16:47,519 --> 00:16:49,519
really thinking in like key value kind

499
00:16:49,519 --> 00:16:51,759
of like parsable single log lines that

500
00:16:51,759 --> 00:16:53,360
contain a set of standard attributes

501
00:16:53,360 --> 00:16:56,079
that then i can really easily use in a

502
00:16:56,079 --> 00:16:58,639
detection platform or something and

503
00:16:58,639 --> 00:17:01,680
maybe standardize those or or remap them

504
00:17:01,680 --> 00:17:03,199
to the same ones i use for the cloud

505
00:17:03,199 --> 00:17:05,280
providers control plane so all of a

506
00:17:05,280 --> 00:17:06,880
sudden we're able to do correlation

507
00:17:06,880 --> 00:17:09,760
between events in something like aws

508
00:17:09,760 --> 00:17:11,599
cloudtrail and what's happening inside

509
00:17:11,599 --> 00:17:13,439
of the application itself

510
00:17:13,439 --> 00:17:15,039
so sort of just thinking about what are

511
00:17:15,039 --> 00:17:17,760
the pieces of data for my business

512
00:17:17,760 --> 00:17:19,520
you know my use case and service that i

513
00:17:19,520 --> 00:17:22,079
want to bring together to perform uh

514
00:17:22,079 --> 00:17:25,439
detections on the application itself

515
00:17:25,439 --> 00:17:27,520
also you're saying we can correlate

516
00:17:27,520 --> 00:17:28,480
i guess

517
00:17:28,480 --> 00:17:30,320
provided functions by your whoever your

518
00:17:30,320 --> 00:17:32,160
service provider for serverless is and

519
00:17:32,160 --> 00:17:33,520
the application logs you kind of

520
00:17:33,520 --> 00:17:35,360
hopefully

521
00:17:35,360 --> 00:17:37,200
combine some kind of detection is that

522
00:17:37,200 --> 00:17:38,320
is that right is that how you thinking

523
00:17:38,320 --> 00:17:39,840
about this

524
00:17:39,840 --> 00:17:41,440
yeah so if you if you really think about

525
00:17:41,440 --> 00:17:43,520
it what what you want is you want this

526
00:17:43,520 --> 00:17:46,960
entire chain of custody of attribution

527
00:17:46,960 --> 00:17:49,120
from the invocation of the function to

528
00:17:49,120 --> 00:17:51,200
the time that that function exits

529
00:17:51,200 --> 00:17:53,440
right and and depending on the method by

530
00:17:53,440 --> 00:17:55,760
which you're you're invoking the run

531
00:17:55,760 --> 00:17:57,600
time that runs the code

532
00:17:57,600 --> 00:17:58,880
that that could be a bunch of different

533
00:17:58,880 --> 00:18:00,799
ways right so if it comes in through api

534
00:18:00,799 --> 00:18:03,840
gateway that's an event whose identity

535
00:18:03,840 --> 00:18:06,559
is api gateway if it's a user calling

536
00:18:06,559 --> 00:18:09,520
invoke function that's different if it's

537
00:18:09,520 --> 00:18:11,520
a cloudwatch event

538
00:18:11,520 --> 00:18:14,080
on eventbridge that's a different story

539
00:18:14,080 --> 00:18:16,240
too so being able to attribute those

540
00:18:16,240 --> 00:18:18,240
back to how did this thing even get

541
00:18:18,240 --> 00:18:20,000
started and then knowing what happened

542
00:18:20,000 --> 00:18:22,240
inside of it and knowing what happened

543
00:18:22,240 --> 00:18:24,080
afterwards potentially if somebody got

544
00:18:24,080 --> 00:18:26,840
an identity out that's telling the

545
00:18:26,840 --> 00:18:28,960
story yeah and i guess to your point if

546
00:18:28,960 --> 00:18:30,480
you can trace it back to what was the

547
00:18:30,480 --> 00:18:32,799
change in the function code itself maybe

548
00:18:32,799 --> 00:18:35,520
that could be one uh one more data point

549
00:18:35,520 --> 00:18:36,960
into that whole flow

550
00:18:36,960 --> 00:18:38,400
if there's a data point chain or if

551
00:18:38,400 --> 00:18:39,840
there's a change to the function which

552
00:18:39,840 --> 00:18:41,840
made the change and how did that travel

553
00:18:41,840 --> 00:18:45,199
across your production or whatever

554
00:18:45,520 --> 00:18:48,799
cool anything to add to this aerial or

555
00:18:48,799 --> 00:18:49,919
you're good

556
00:18:49,919 --> 00:18:51,360
i think you're good

557
00:18:51,360 --> 00:18:54,400
no i'm good i'm good oh perfect cool so

558
00:18:54,400 --> 00:18:56,080
because i think i was going to say maybe

559
00:18:56,080 --> 00:18:58,240
it's also a good segue into because i

560
00:18:58,240 --> 00:18:59,200
guess

561
00:18:59,200 --> 00:19:01,039
what we're also trying to cover is some

562
00:19:01,039 --> 00:19:02,799
of the interesting topics that came out

563
00:19:02,799 --> 00:19:04,080
of the whole server is security by

564
00:19:04,080 --> 00:19:06,000
papery road so i'll definitely encourage

565
00:19:06,000 --> 00:19:07,440
people to kind of check it out when we

566
00:19:07,440 --> 00:19:10,240
release it but um one thing that we were

567
00:19:10,240 --> 00:19:11,840
looking also was into the whole

568
00:19:11,840 --> 00:19:14,160
evolution and what does the future of

569
00:19:14,160 --> 00:19:15,600
serverless look like

570
00:19:15,600 --> 00:19:17,679
obviously everyone who's listening to

571
00:19:17,679 --> 00:19:19,039
the panel has obviously heard about the

572
00:19:19,039 --> 00:19:20,559
different kind of threats that exist

573
00:19:20,559 --> 00:19:23,120
they've also heard about how do you log

574
00:19:23,120 --> 00:19:25,840
it properly so if there is a change or

575
00:19:25,840 --> 00:19:27,360
there is a threat that needs to be

576
00:19:27,360 --> 00:19:29,520
picked up there is to andrew's point

577
00:19:29,520 --> 00:19:31,120
there's an end to end attack path that

578
00:19:31,120 --> 00:19:32,400
you can come up with maybe similar to

579
00:19:32,400 --> 00:19:34,880
attack miter maybe attack might may come

580
00:19:34,880 --> 00:19:37,360
up with a framework for this as well but

581
00:19:37,360 --> 00:19:38,720
uh one of the things that came up with

582
00:19:38,720 --> 00:19:40,640
the future thing was

583
00:19:40,640 --> 00:19:41,600
the

584
00:19:41,600 --> 00:19:43,679
the whole aspect of abstraction as we

585
00:19:43,679 --> 00:19:45,760
kind of keep going into more

586
00:19:45,760 --> 00:19:47,600
layers of i don't need to care about in

587
00:19:47,600 --> 00:19:49,280
my infrastructure anymore so that means

588
00:19:49,280 --> 00:19:51,280
i don't need to care about patching i

589
00:19:51,280 --> 00:19:53,200
don't care about my workload protection

590
00:19:53,200 --> 00:19:55,440
i don't care about antivirus then if i

591
00:19:55,440 --> 00:19:58,000
go into ci cd pipeline well as long my

592
00:19:58,000 --> 00:20:00,400
function probably covers the whole basic

593
00:20:00,400 --> 00:20:03,440
application security functions like your

594
00:20:03,440 --> 00:20:06,080
sca for vulnerable libraries or static

595
00:20:06,080 --> 00:20:08,960
analysis that code that is being

596
00:20:08,960 --> 00:20:11,120
maintained or code that is being pushed

597
00:20:11,120 --> 00:20:13,280
into as a function into a

598
00:20:13,280 --> 00:20:16,000
serverless function is clean from a

599
00:20:16,000 --> 00:20:17,919
security perspective has probably only

600
00:20:17,919 --> 00:20:20,159
lows hopefully like those kind of things

601
00:20:20,159 --> 00:20:22,240
are going to be the only things people

602
00:20:22,240 --> 00:20:24,240
would focus on and maybe identity as the

603
00:20:24,240 --> 00:20:26,480
other one because i think as long as the

604
00:20:26,480 --> 00:20:28,880
the orchestration and creation and

605
00:20:28,880 --> 00:20:30,559
generation is taken care of by

606
00:20:30,559 --> 00:20:32,480
quote-unquote shared responsibility by

607
00:20:32,480 --> 00:20:34,799
your serverless provider i think that

608
00:20:34,799 --> 00:20:36,960
that kind of cares takes care of what a

609
00:20:36,960 --> 00:20:38,640
future in this kind of world can look

610
00:20:38,640 --> 00:20:40,799
like there's a lot more abstraction but

611
00:20:40,799 --> 00:20:42,320
uh that's kind of what we won't have the

612
00:20:42,320 --> 00:20:44,480
future for but i i'm pretty sure

613
00:20:44,480 --> 00:20:46,400
as all of us are hinting towards white

614
00:20:46,400 --> 00:20:48,080
paper we kind of probably should go in

615
00:20:48,080 --> 00:20:50,720
through what went through into

616
00:20:50,720 --> 00:20:51,919
doing the whole white paper as well

617
00:20:51,919 --> 00:20:53,120
maybe raga you could just probably give

618
00:20:53,120 --> 00:20:55,039
us some intro into the whole was the

619
00:20:55,039 --> 00:20:56,480
process undertaken for the white paper

620
00:20:56,480 --> 00:20:58,080
since you were quite involved as well

621
00:20:58,080 --> 00:20:59,679
could you shed some light on that for

622
00:20:59,679 --> 00:21:01,360
everyone listening

623
00:21:01,360 --> 00:21:04,640
surely so the basic process itself is

624
00:21:04,640 --> 00:21:06,159
already stated in this call there was

625
00:21:06,159 --> 00:21:07,679
already a serverless white paper

626
00:21:07,679 --> 00:21:10,880
available so uh the first step for us is

627
00:21:10,880 --> 00:21:13,120
to identify what are the gaps

628
00:21:13,120 --> 00:21:14,880
that was in the white paper and how

629
00:21:14,880 --> 00:21:16,320
could we fill it from the security

630
00:21:16,320 --> 00:21:18,640
perspective itself so majority of the

631
00:21:18,640 --> 00:21:20,320
threads some of the myths we had to

632
00:21:20,320 --> 00:21:21,440
burst

633
00:21:21,440 --> 00:21:23,120
and some of the best practices we can

634
00:21:23,120 --> 00:21:25,280
share with the community to enlighten

635
00:21:25,280 --> 00:21:28,320
and support in the complete end-to-end

636
00:21:28,320 --> 00:21:30,240
life cycle of their securing the

637
00:21:30,240 --> 00:21:31,840
serverless itself

638
00:21:31,840 --> 00:21:34,480
so with this uh the first step itself

639
00:21:34,480 --> 00:21:36,320
was to jot down all the aspects we

640
00:21:36,320 --> 00:21:38,320
wanted to cover in the white paper and

641
00:21:38,320 --> 00:21:41,280
second is to trigger one issue in our

642
00:21:41,280 --> 00:21:44,480
stag github so with this uh

643
00:21:44,480 --> 00:21:45,919
we got a lot of interest from the

644
00:21:45,919 --> 00:21:47,679
community we assigned some of the

645
00:21:47,679 --> 00:21:50,320
project leaders and rolled out the plan

646
00:21:50,320 --> 00:21:53,200
and we had consistent meetings across a

647
00:21:53,200 --> 00:21:54,559
couple of um

648
00:21:54,559 --> 00:21:56,320
weeks we synced up i think once in a

649
00:21:56,320 --> 00:21:57,679
week and

650
00:21:57,679 --> 00:22:00,000
aligned with all of us took the projects

651
00:22:00,000 --> 00:22:02,400
and we worked on our content

652
00:22:02,400 --> 00:22:05,120
individually got the feedback and

653
00:22:05,120 --> 00:22:07,520
released the first set of version for

654
00:22:07,520 --> 00:22:09,600
the internal reviews as well

655
00:22:09,600 --> 00:22:11,919
and once we thought we are in good shape

656
00:22:11,919 --> 00:22:13,600
and we are okay to

657
00:22:13,600 --> 00:22:16,159
go ahead for a wider audience review the

658
00:22:16,159 --> 00:22:18,880
paper was released for the complete

659
00:22:18,880 --> 00:22:21,440
secure stack security team's mailing

660
00:22:21,440 --> 00:22:23,679
list and it is now in the review phase

661
00:22:23,679 --> 00:22:25,200
of the

662
00:22:25,200 --> 00:22:28,400
the community as well so we are here and

663
00:22:28,400 --> 00:22:30,320
it would help us greatly if you can

664
00:22:30,320 --> 00:22:32,400
chime in add your inputs and help us

665
00:22:32,400 --> 00:22:35,039
make this my paper even better

666
00:22:35,039 --> 00:22:37,120
it's really i i can definitely watch for

667
00:22:37,120 --> 00:22:38,000
there are definitely interesting

668
00:22:38,000 --> 00:22:40,159
conversations during the whole whether

669
00:22:40,159 --> 00:22:41,280
something is relevant for the white

670
00:22:41,280 --> 00:22:42,720
paper who's the audience what's the

671
00:22:42,720 --> 00:22:44,480
context for it as well so people who may

672
00:22:44,480 --> 00:22:45,840
be thinking about hey i want to

673
00:22:45,840 --> 00:22:47,760
contribute because i've heard these four

674
00:22:47,760 --> 00:22:49,440
awesome people on a panel

675
00:22:49,440 --> 00:22:51,280
and i wanna i don't know is there a

676
00:22:51,280 --> 00:22:52,799
mailing list or something or the other

677
00:22:52,799 --> 00:22:55,840
people can subscribe to you

678
00:22:57,360 --> 00:22:59,840
absolutely stacks github

679
00:22:59,840 --> 00:23:01,760
i think andrew has already pasted on the

680
00:23:01,760 --> 00:23:04,480
chat so stacks github you can subscribe

681
00:23:04,480 --> 00:23:06,400
to this repository there is a mailing

682
00:23:06,400 --> 00:23:08,400
list right in the stacks repo

683
00:23:08,400 --> 00:23:10,240
please subscribe to the mailing list you

684
00:23:10,240 --> 00:23:12,400
will get all the content up to date with

685
00:23:12,400 --> 00:23:14,320
whatever we are publishing there are

686
00:23:14,320 --> 00:23:17,120
several lots of projects available right

687
00:23:17,120 --> 00:23:19,919
from the policy s-bombs and serverless

688
00:23:19,919 --> 00:23:21,600
here and we also have an interesting

689
00:23:21,600 --> 00:23:24,080
topic of lexicon so whatever you want to

690
00:23:24,080 --> 00:23:26,000
contribute uh you can just pull up an

691
00:23:26,000 --> 00:23:29,280
issue and get the attention of our

692
00:23:29,280 --> 00:23:31,679
chairs and we're here to help you and we

693
00:23:31,679 --> 00:23:33,840
have a wonderful support system

694
00:23:33,840 --> 00:23:35,760
in terms of mentorship or anything you

695
00:23:35,760 --> 00:23:37,600
need to get started or if you're a

696
00:23:37,600 --> 00:23:39,840
seasoned professional we are seeking

697
00:23:39,840 --> 00:23:42,320
your inputs always so feel free to get

698
00:23:42,320 --> 00:23:44,880
in touch with us we have our stag

699
00:23:44,880 --> 00:23:46,640
security

700
00:23:46,640 --> 00:23:49,120
slack as well so feel free to dm us and

701
00:23:49,120 --> 00:23:51,200
we're happy to help

702
00:23:51,200 --> 00:23:53,039
sounds good and uh although as i said

703
00:23:53,039 --> 00:23:54,400
earlier serverless security probably the

704
00:23:54,400 --> 00:23:56,320
coolest group and they've been the batch

705
00:23:56,320 --> 00:23:57,279
but there's definitely a lot more

706
00:23:57,279 --> 00:23:59,279
projects in there i got already if you

707
00:23:59,279 --> 00:24:01,039
want to work on s bomb but software bill

708
00:24:01,039 --> 00:24:02,400
of material because it was a

709
00:24:02,400 --> 00:24:04,080
presidential order but you can totally

710
00:24:04,080 --> 00:24:05,600
do that as well there's a

711
00:24:05,600 --> 00:24:07,440
interesting group for that as well uh

712
00:24:07,440 --> 00:24:09,120
but that's pretty much what we had time

713
00:24:09,120 --> 00:24:11,279
for here and any last comments from

714
00:24:11,279 --> 00:24:12,960
anyone before we kind of close because i

715
00:24:12,960 --> 00:24:15,120
think we have an interesting bunch over

716
00:24:15,120 --> 00:24:16,720
here and i think if anyone has any

717
00:24:16,720 --> 00:24:18,159
questions as raga mentioned feel free to

718
00:24:18,159 --> 00:24:20,240
dms on slack or just head to the github

719
00:24:20,240 --> 00:24:24,000
security tag security github and uh open

720
00:24:24,000 --> 00:24:26,080
up an issue or just message on to the

721
00:24:26,080 --> 00:24:28,400
slack channels that is relevant for the

722
00:24:28,400 --> 00:24:30,080
project that you want to get involved in

723
00:24:30,080 --> 00:24:31,679
but that's pretty much what we had time

724
00:24:31,679 --> 00:24:33,200
for thank you everyone for joining the

725
00:24:33,200 --> 00:24:35,200
panel if you have questions as always

726
00:24:35,200 --> 00:24:37,120
reach us on our favorite slack and

727
00:24:37,120 --> 00:24:39,039
github channels otherwise we'll talk to

728
00:24:39,039 --> 00:24:41,039
you soon on the next panel maybe thank

729
00:24:41,039 --> 00:24:42,400
you

730
00:24:42,400 --> 00:24:43,440
thank you

731
00:24:43,440 --> 00:24:46,679
thanks everybody

