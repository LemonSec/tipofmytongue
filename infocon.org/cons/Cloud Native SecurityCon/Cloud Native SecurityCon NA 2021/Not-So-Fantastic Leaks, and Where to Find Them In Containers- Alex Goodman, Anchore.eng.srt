1
00:00:00,240 --> 00:00:01,040
well

2
00:00:01,040 --> 00:00:03,520
hi folks how's it going my name is alex

3
00:00:03,520 --> 00:00:04,400
goodman

4
00:00:04,400 --> 00:00:06,960
i'm a senior software engineer at encore

5
00:00:06,960 --> 00:00:08,880
and i'm here to talk about problems that

6
00:00:08,880 --> 00:00:10,400
you might find in containers and how

7
00:00:10,400 --> 00:00:12,080
they get hidden so

8
00:00:12,080 --> 00:00:14,320
so in this image here we have all the

9
00:00:14,320 --> 00:00:16,000
layers for this image and the layer

10
00:00:16,000 --> 00:00:18,160
that's selected right now is best most

11
00:00:18,160 --> 00:00:19,600
representative of the application

12
00:00:19,600 --> 00:00:22,480
payload and it's it's 13 megs in size

13
00:00:22,480 --> 00:00:25,840
but the whole image is 500 megs and so

14
00:00:25,840 --> 00:00:27,680
in another example here so the the

15
00:00:27,680 --> 00:00:29,199
application payload is about you know

16
00:00:29,199 --> 00:00:33,360
230 megs but the the image is 3.2 gigs

17
00:00:33,360 --> 00:00:34,559
the idea is that you're shipping a lot

18
00:00:34,559 --> 00:00:36,079
more than your application especially

19
00:00:36,079 --> 00:00:38,160
now that we bought into uh container

20
00:00:38,160 --> 00:00:40,000
technologies there's a lot more service

21
00:00:40,000 --> 00:00:41,920
area that you need to defend and there's

22
00:00:41,920 --> 00:00:44,399
a lot more places that stuff can hide

23
00:00:44,399 --> 00:00:45,920
so what are the kinds of things that can

24
00:00:45,920 --> 00:00:48,079
get hidden well you have the you know

25
00:00:48,079 --> 00:00:51,520
the typical you know secrets etc as well

26
00:00:51,520 --> 00:00:53,360
as unintended assets such as like you

27
00:00:53,360 --> 00:00:55,440
have development payloads

28
00:00:55,440 --> 00:00:57,840
or any blobs that may be sitting around

29
00:00:57,840 --> 00:00:59,760
or known vulnerabilities for your os

30
00:00:59,760 --> 00:01:01,520
packages or any of the language packages

31
00:01:01,520 --> 00:01:03,199
that you're bringing in

32
00:01:03,199 --> 00:01:04,559
so

33
00:01:04,559 --> 00:01:06,159
what are the common ways that the stuff

34
00:01:06,159 --> 00:01:08,720
gets hidden so these are the top three

35
00:01:08,720 --> 00:01:10,320
ways ish that you'll find most of the

36
00:01:10,320 --> 00:01:12,960
time is folks in their docker files

37
00:01:12,960 --> 00:01:14,640
going off and removing something with a

38
00:01:14,640 --> 00:01:15,920
remove command but it doesn't actually

39
00:01:15,920 --> 00:01:17,360
remove anything it's just adding a

40
00:01:17,360 --> 00:01:19,360
wide-out file and so if you were to push

41
00:01:19,360 --> 00:01:21,439
that image you still have that

42
00:01:21,439 --> 00:01:23,280
the payload that's being pushed up to

43
00:01:23,280 --> 00:01:27,119
your registry so not good uh also you

44
00:01:27,119 --> 00:01:29,119
have uh if you're just you know

45
00:01:29,119 --> 00:01:30,640
in bulk fashion adding you know

46
00:01:30,640 --> 00:01:31,840
everything that you can in your docker

47
00:01:31,840 --> 00:01:33,439
context and you don't have the proper

48
00:01:33,439 --> 00:01:36,079
docker ignore file in place uh you may

49
00:01:36,079 --> 00:01:37,600
be adding something that you just didn't

50
00:01:37,600 --> 00:01:40,079
intend whatsoever

51
00:01:40,079 --> 00:01:41,840
and the last one maybe you're just

52
00:01:41,840 --> 00:01:43,840
installing packages and this is probably

53
00:01:43,840 --> 00:01:46,079
everyone so when you install a package

54
00:01:46,079 --> 00:01:47,520
you know you may have a vast set of

55
00:01:47,520 --> 00:01:49,439
dependencies you know that are also

56
00:01:49,439 --> 00:01:51,680
coming along for the ride so do you you

57
00:01:51,680 --> 00:01:53,600
know are you are you up to date do you

58
00:01:53,600 --> 00:01:56,240
have all the patches et cetera

59
00:01:56,240 --> 00:01:57,119
so

60
00:01:57,119 --> 00:01:59,360
how do we surface these hidden problems

61
00:01:59,360 --> 00:02:00,880
well

62
00:02:00,880 --> 00:02:02,880
the best way is to

63
00:02:02,880 --> 00:02:05,280
try to describe what is in your image so

64
00:02:05,280 --> 00:02:06,640
the best way to do this is to generate

65
00:02:06,640 --> 00:02:07,840
an

66
00:02:07,840 --> 00:02:09,199
and then take that description and

67
00:02:09,199 --> 00:02:11,200
analyze it for either known problems or

68
00:02:11,200 --> 00:02:13,120
known expectations or at least an audit

69
00:02:13,120 --> 00:02:14,160
trail

70
00:02:14,160 --> 00:02:17,840
left behind for incident response

71
00:02:17,840 --> 00:02:18,640
so

72
00:02:18,640 --> 00:02:22,160
sift is a tool used to generate s-bombs

73
00:02:22,160 --> 00:02:26,480
it generates s-bombs in spdx 2.2 cyclone

74
00:02:26,480 --> 00:02:29,920
dx 1.2 it knows how to generate s-bombs

75
00:02:29,920 --> 00:02:33,599
for container images for file systems

76
00:02:33,599 --> 00:02:36,000
it knows how to catalog a wide variety

77
00:02:36,000 --> 00:02:38,080
of ecosystems and also beyond just

78
00:02:38,080 --> 00:02:40,160
packages

79
00:02:40,160 --> 00:02:42,319
and it outputs in both like a you know

80
00:02:42,319 --> 00:02:44,239
table summary as well as like rich json

81
00:02:44,239 --> 00:02:46,239
output so it'll go on forever so in that

82
00:02:46,239 --> 00:02:48,400
regard um

83
00:02:48,400 --> 00:02:50,400
yeah so when it comes for looking for

84
00:02:50,400 --> 00:02:52,239
problems we have gripe

85
00:02:52,239 --> 00:02:53,920
so gripe is a lightweight vulnerability

86
00:02:53,920 --> 00:02:55,599
scanner it knows how to look for

87
00:02:55,599 --> 00:02:57,680
vulnerabilities for in a list of

88
00:02:57,680 --> 00:02:59,200
packages whether that comes from a

89
00:02:59,200 --> 00:03:02,319
container image a file system or if you

90
00:03:02,319 --> 00:03:04,239
have an s-bom which is really useful

91
00:03:04,239 --> 00:03:05,760
because you don't need to bring all

92
00:03:05,760 --> 00:03:07,680
those bytes with you the entire image

93
00:03:07,680 --> 00:03:09,200
that you're scanning you really just

94
00:03:09,200 --> 00:03:11,040
need the s-bomb and that's a lot faster

95
00:03:11,040 --> 00:03:12,239
to scan

96
00:03:12,239 --> 00:03:13,599
and this supports you know several

97
00:03:13,599 --> 00:03:16,400
different ecosystems

98
00:03:16,400 --> 00:03:18,239
for scanning again for matching

99
00:03:18,239 --> 00:03:20,480
vulnerabilities

100
00:03:20,480 --> 00:03:21,599
so yeah

101
00:03:21,599 --> 00:03:23,040
so now we have these two tools we want

102
00:03:23,040 --> 00:03:24,959
to tie this together into a workflow and

103
00:03:24,959 --> 00:03:26,720
so the idea is that you build your image

104
00:03:26,720 --> 00:03:29,040
and you generate your s-bomb

105
00:03:29,040 --> 00:03:30,959
then you use that s-bomb to run quality

106
00:03:30,959 --> 00:03:33,040
gates against it so vulnerabilities

107
00:03:33,040 --> 00:03:35,040
secrets etcetera whatever it is that is

108
00:03:35,040 --> 00:03:36,799
important to your organization

109
00:03:36,799 --> 00:03:38,239
and then after all that's done you

110
00:03:38,239 --> 00:03:41,360
publish your image and your s-bomb

111
00:03:41,360 --> 00:03:43,440
a lot of people couple step one and

112
00:03:43,440 --> 00:03:45,280
three together they build and push their

113
00:03:45,280 --> 00:03:46,959
image and then they run tests against it

114
00:03:46,959 --> 00:03:48,239
which is something you don't want to do

115
00:03:48,239 --> 00:03:49,040
because if you have something like

116
00:03:49,040 --> 00:03:50,159
secrets then you're going to have to

117
00:03:50,159 --> 00:03:51,440
spend all day scrubbing that from your

118
00:03:51,440 --> 00:03:53,599
registry

119
00:03:53,599 --> 00:03:54,640
so

120
00:03:54,640 --> 00:03:56,959
so what we're going to do is use kaneko

121
00:03:56,959 --> 00:03:59,519
and sift for building an image and

122
00:03:59,519 --> 00:04:01,360
generating an s bomb

123
00:04:01,360 --> 00:04:03,680
gripe and a little bit of scripting for

124
00:04:03,680 --> 00:04:06,560
quality gates and scopio and cosine for

125
00:04:06,560 --> 00:04:09,760
publishing our image and our s-bomb

126
00:04:09,760 --> 00:04:11,120
we're going to tie this all together

127
00:04:11,120 --> 00:04:12,720
using tekton and

128
00:04:12,720 --> 00:04:16,478
kubernetes native ci solution

129
00:04:16,478 --> 00:04:18,560
so yeah all right

130
00:04:18,560 --> 00:04:21,040
it's demo time

131
00:04:21,040 --> 00:04:23,120
all right so we have an application

132
00:04:23,120 --> 00:04:26,000
called count goober uh it is

133
00:04:26,000 --> 00:04:28,720
an application you know given a number

134
00:04:28,720 --> 00:04:30,400
in a sentence it knows how to extract it

135
00:04:30,400 --> 00:04:32,240
and replace it with other numbers very

136
00:04:32,240 --> 00:04:33,199
useful

137
00:04:33,199 --> 00:04:34,880
uh so now we have this very useful

138
00:04:34,880 --> 00:04:38,000
application we want to build and

139
00:04:38,000 --> 00:04:39,759
you know validate the image so here we

140
00:04:39,759 --> 00:04:42,400
have a tactile pipeline made up of a set

141
00:04:42,400 --> 00:04:43,840
of tasks here

142
00:04:43,840 --> 00:04:46,000
for building and validating

143
00:04:46,000 --> 00:04:47,919
this image and so i've already got this

144
00:04:47,919 --> 00:04:49,840
loaded up locally so we

145
00:04:49,840 --> 00:04:52,400
and already run in a techton run so

146
00:04:52,400 --> 00:04:55,440
sorry in a tech time pipeline run

147
00:04:55,440 --> 00:04:59,520
so here's what this pipeline looks like

148
00:04:59,520 --> 00:05:00,880
so we're fetching our repo we're

149
00:05:00,880 --> 00:05:02,720
prepping some assets and we're building

150
00:05:02,720 --> 00:05:04,400
our image when we build this image with

151
00:05:04,400 --> 00:05:06,720
canaco it stays local we're not pushing

152
00:05:06,720 --> 00:05:08,800
it anywhere

153
00:05:08,800 --> 00:05:10,479
then with sift

154
00:05:10,479 --> 00:05:12,080
we are generating our s-bomb and this

155
00:05:12,080 --> 00:05:13,960
has spawn where you get we get an

156
00:05:13,960 --> 00:05:16,240
s-bomb.json output at the very end here

157
00:05:16,240 --> 00:05:17,759
which has all the information that we

158
00:05:17,759 --> 00:05:19,680
need and we you know we show a nice

159
00:05:19,680 --> 00:05:22,000
summary uh to show uh yep it looks like

160
00:05:22,000 --> 00:05:24,000
our account goober app is indeed there

161
00:05:24,000 --> 00:05:26,160
version010

162
00:05:26,160 --> 00:05:27,919
and once we get to the quality section

163
00:05:27,919 --> 00:05:29,199
of our pipeline it looks like we have a

164
00:05:29,199 --> 00:05:31,199
vulnerability scan and we're using the s

165
00:05:31,199 --> 00:05:34,400
bom as input and we've uh we will fail

166
00:05:34,400 --> 00:05:37,199
if there is a severity that is of higher

167
00:05:37,199 --> 00:05:38,800
greater and it looks like that's what's

168
00:05:38,800 --> 00:05:40,800
happened so quality gets failed here and

169
00:05:40,800 --> 00:05:43,919
yeah it looks like nltk has a few high

170
00:05:43,919 --> 00:05:45,280
high severity

171
00:05:45,280 --> 00:05:46,639
vulnerabilities that we need to

172
00:05:46,639 --> 00:05:48,639
remediate so

173
00:05:48,639 --> 00:05:50,880
okay that's one problem

174
00:05:50,880 --> 00:05:52,240
it looks like there's a secret here too

175
00:05:52,240 --> 00:05:53,680
and notice that we're using our s-bomb

176
00:05:53,680 --> 00:05:55,440
as input um

177
00:05:55,440 --> 00:05:57,360
and if i look at the details yeah it

178
00:05:57,360 --> 00:05:59,680
looks like assets config e and v has got

179
00:05:59,680 --> 00:06:02,080
a generic api key and we don't actually

180
00:06:02,080 --> 00:06:03,440
have the key value here in the logs

181
00:06:03,440 --> 00:06:04,880
because again we don't have to scrub

182
00:06:04,880 --> 00:06:08,000
stuff so you know no values are here

183
00:06:08,000 --> 00:06:10,080
okay so let's go and start remediating

184
00:06:10,080 --> 00:06:12,400
stuff

185
00:06:12,560 --> 00:06:14,560
so in our application

186
00:06:14,560 --> 00:06:17,600
we said nltk needs to get updated so it

187
00:06:17,600 --> 00:06:20,720
looks like if i were to head down to

188
00:06:20,720 --> 00:06:24,080
set three four four so

189
00:06:25,840 --> 00:06:28,000
all right so we're updating an ltk and

190
00:06:28,000 --> 00:06:29,680
our other problem was we had a secret

191
00:06:29,680 --> 00:06:32,319
laying around an assets config yep we

192
00:06:32,319 --> 00:06:34,400
have an api key and don't worry this is

193
00:06:34,400 --> 00:06:36,000
a fake one you can take as many pictures

194
00:06:36,000 --> 00:06:37,039
as you want

195
00:06:37,039 --> 00:06:38,240
um

196
00:06:38,240 --> 00:06:40,960
and yeah so let's go to uh what the uh

197
00:06:40,960 --> 00:06:42,560
the culprit of this is looks like we're

198
00:06:42,560 --> 00:06:45,600
prepping assets we have this config env

199
00:06:45,600 --> 00:06:47,600
that is capturing all of our environment

200
00:06:47,600 --> 00:06:49,039
variables we probably shouldn't be doing

201
00:06:49,039 --> 00:06:50,080
that so

202
00:06:50,080 --> 00:06:52,560
um and that's not in our git repo that's

203
00:06:52,560 --> 00:06:54,400
just in the pipeline so

204
00:06:54,400 --> 00:06:57,440
um so i commit and i push this so now

205
00:06:57,440 --> 00:07:00,160
i've remediated all my problems i think

206
00:07:00,160 --> 00:07:01,759
so i head back to our pipeline i kick

207
00:07:01,759 --> 00:07:04,319
off another run and just for time i've

208
00:07:04,319 --> 00:07:06,560
already done that run

209
00:07:06,560 --> 00:07:09,199
uh so yeah green all around looks like

210
00:07:09,199 --> 00:07:10,639
we've built our image generated our

211
00:07:10,639 --> 00:07:14,560
s-bomb our s-bomb shows that nltk has

212
00:07:14,560 --> 00:07:16,720
been updated indeed past our

213
00:07:16,720 --> 00:07:18,319
vulnerability scan

214
00:07:18,319 --> 00:07:19,680
and we have

215
00:07:19,680 --> 00:07:21,759
passed our secrets quality and we

216
00:07:21,759 --> 00:07:23,520
published our image so it's been pushed

217
00:07:23,520 --> 00:07:25,280
to our registry

218
00:07:25,280 --> 00:07:27,599
and we also have published out the s-bom

219
00:07:27,599 --> 00:07:30,160
it's also sitting in our registry

220
00:07:30,160 --> 00:07:32,400
so

221
00:07:34,160 --> 00:07:35,599
and i've already pulled down this image

222
00:07:35,599 --> 00:07:37,360
but it looks like indeed it is working

223
00:07:37,360 --> 00:07:39,280
a-okay and if i wanted to check out the

224
00:07:39,280 --> 00:07:41,360
s-bomb i can always do

225
00:07:41,360 --> 00:07:43,039
use cosine

226
00:07:43,039 --> 00:07:44,639
to pull down

227
00:07:44,639 --> 00:07:46,400
and take a look at specifically what the

228
00:07:46,400 --> 00:07:49,120
s-bom contents are so in this case

229
00:07:49,120 --> 00:07:51,199
lots of json

230
00:07:51,199 --> 00:07:54,560
so yeah that uh that's all i have let's

231
00:07:54,560 --> 00:07:56,080
see

232
00:07:56,080 --> 00:07:58,720
thanks um

233
00:07:58,720 --> 00:08:00,160
yeah if you're coming to find me if you

234
00:08:00,160 --> 00:08:02,560
want to talk about sift about gripe i'm

235
00:08:02,560 --> 00:08:05,360
happy to talk about anything whatsoever

236
00:08:05,360 --> 00:08:07,919
we'll be at tom's watchbar tonight for

237
00:08:07,919 --> 00:08:10,720
incor hosted a happy hour

238
00:08:10,720 --> 00:08:12,630
thank you

239
00:08:12,630 --> 00:08:19,060
[Applause]

