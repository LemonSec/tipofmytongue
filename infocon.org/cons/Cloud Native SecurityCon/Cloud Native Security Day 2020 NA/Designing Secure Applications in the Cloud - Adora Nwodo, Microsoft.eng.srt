1
00:00:00,320 --> 00:00:03,760
hello and welcome to cloud native

2
00:00:03,760 --> 00:00:05,600
security today

3
00:00:05,600 --> 00:00:08,639
my name is adora and i am so excited to

4
00:00:08,639 --> 00:00:10,480
be giving this talk to you today

5
00:00:10,480 --> 00:00:13,120
and the title of my talk is designing

6
00:00:13,120 --> 00:00:13,920
secure

7
00:00:13,920 --> 00:00:17,279
cloud applications it's 2020

8
00:00:17,279 --> 00:00:19,840
and we have moved or are currently

9
00:00:19,840 --> 00:00:20,480
moving

10
00:00:20,480 --> 00:00:22,720
all of our computing to the cloud in

11
00:00:22,720 --> 00:00:23,760
different forms

12
00:00:23,760 --> 00:00:27,840
and this comes with a few benefits

13
00:00:27,840 --> 00:00:31,439
you don't need um to download

14
00:00:31,439 --> 00:00:34,640
anything to any particular software

15
00:00:34,640 --> 00:00:35,680
anymore

16
00:00:35,680 --> 00:00:38,800
your applications and utilities are over

17
00:00:38,800 --> 00:00:39,760
the internet

18
00:00:39,760 --> 00:00:42,399
you can manipulate and configure your

19
00:00:42,399 --> 00:00:44,239
apps online

20
00:00:44,239 --> 00:00:46,800
and you have on-demand self-service and

21
00:00:46,800 --> 00:00:48,239
a lot of other

22
00:00:48,239 --> 00:00:51,280
benefits for moving to the cloud but the

23
00:00:51,280 --> 00:00:52,239
truth is

24
00:00:52,239 --> 00:00:55,280
with all of these benefits comes

25
00:00:55,280 --> 00:00:57,520
some kind of responsibility with all of

26
00:00:57,520 --> 00:00:59,039
these benefits

27
00:00:59,039 --> 00:01:02,239
also come some disadvantages that we

28
00:01:02,239 --> 00:01:04,239
need to be aware of so that we can

29
00:01:04,239 --> 00:01:05,040
control

30
00:01:05,040 --> 00:01:08,320
and to that effect i'm going to play

31
00:01:08,320 --> 00:01:11,439
a short video that describes this

32
00:01:11,439 --> 00:01:13,680
problem i'm about to talk about

33
00:01:13,680 --> 00:01:16,880
in layman's terms hey there i'm going to

34
00:01:16,880 --> 00:01:18,000
tell you a story

35
00:01:18,000 --> 00:01:19,600
about what happens when you do not

36
00:01:19,600 --> 00:01:22,400
protect public resources

37
00:01:22,400 --> 00:01:25,040
this house has water supply in form of a

38
00:01:25,040 --> 00:01:27,759
bucket at the compound

39
00:01:27,759 --> 00:01:30,159
this is a housemate who actually needs

40
00:01:30,159 --> 00:01:31,439
water

41
00:01:31,439 --> 00:01:33,920
he gets some into his bowl and goes back

42
00:01:33,920 --> 00:01:36,079
inside

43
00:01:36,079 --> 00:01:38,320
this second person who happens not to be

44
00:01:38,320 --> 00:01:39,759
a housemate

45
00:01:39,759 --> 00:01:41,759
comes to the public area where the water

46
00:01:41,759 --> 00:01:44,240
is and makes it unfit for everyone to

47
00:01:44,240 --> 00:01:44,799
use

48
00:01:44,799 --> 00:01:48,240
by washing her hands inside

49
00:01:48,240 --> 00:01:50,320
this housemate happened to be walking in

50
00:01:50,320 --> 00:01:52,399
the direction of the water

51
00:01:52,399 --> 00:01:55,360
and accidentally kicked it now all the

52
00:01:55,360 --> 00:01:57,600
water is gone

53
00:01:57,600 --> 00:02:00,000
why did this happen because access to

54
00:02:00,000 --> 00:02:02,560
the water wasn't properly regulated

55
00:02:02,560 --> 00:02:05,360
how do we fix this take the bucket away

56
00:02:05,360 --> 00:02:06,960
and keep it in a safe place

57
00:02:06,960 --> 00:02:10,399
secure the house to prevent outsiders

58
00:02:10,399 --> 00:02:13,280
walking by from tampering with resources

59
00:02:13,280 --> 00:02:15,599
only meant for housemates

60
00:02:15,599 --> 00:02:18,080
connect a tap so the housemates get

61
00:02:18,080 --> 00:02:18,879
water

62
00:02:18,879 --> 00:02:24,079
in a structured way end

63
00:02:24,879 --> 00:02:28,319
so as we can see from that story

64
00:02:28,319 --> 00:02:31,040
not properly securing our cloud

65
00:02:31,040 --> 00:02:32,239
resources

66
00:02:32,239 --> 00:02:34,560
can lead to things like human error

67
00:02:34,560 --> 00:02:36,959
where the actual developer is even the

68
00:02:36,959 --> 00:02:38,319
one that makes the mistake

69
00:02:38,319 --> 00:02:41,760
like a very random example here would be

70
00:02:41,760 --> 00:02:44,000
not properly securing your resources

71
00:02:44,000 --> 00:02:45,519
used in production

72
00:02:45,519 --> 00:02:48,239
and a developer on your team goes there

73
00:02:48,239 --> 00:02:50,720
and accidentally deletes it

74
00:02:50,720 --> 00:02:53,920
malicious attacks that's a very common

75
00:02:53,920 --> 00:02:55,440
example where you have

76
00:02:55,440 --> 00:02:58,000
people that are not supposed to have

77
00:02:58,000 --> 00:02:59,680
access to the system

78
00:02:59,680 --> 00:03:02,560
gain attack and do very ridiculous

79
00:03:02,560 --> 00:03:04,000
things to your application

80
00:03:04,000 --> 00:03:06,560
and to your data you can also fall into

81
00:03:06,560 --> 00:03:07,120
legal

82
00:03:07,120 --> 00:03:09,760
or compliance issues where you are

83
00:03:09,760 --> 00:03:10,400
having

84
00:03:10,400 --> 00:03:12,080
different lawsuits because your

85
00:03:12,080 --> 00:03:13,440
customers

86
00:03:13,440 --> 00:03:16,720
and your customers feel that their data

87
00:03:16,720 --> 00:03:18,560
is not secure and you're using their

88
00:03:18,560 --> 00:03:19,519
data

89
00:03:19,519 --> 00:03:21,760
for unspeakable things and it might just

90
00:03:21,760 --> 00:03:23,280
be the case that you're actually not

91
00:03:23,280 --> 00:03:24,480
using their data for

92
00:03:24,480 --> 00:03:27,440
unspeakable things but your application

93
00:03:27,440 --> 00:03:28,879
is not secure enough

94
00:03:28,879 --> 00:03:31,920
and their data is not secure so somehow

95
00:03:31,920 --> 00:03:33,360
some way

96
00:03:33,360 --> 00:03:35,760
things are just getting wrong and

97
00:03:35,760 --> 00:03:37,599
everything isn't going right

98
00:03:37,599 --> 00:03:40,080
and in this talk i'm going to be listing

99
00:03:40,080 --> 00:03:42,239
a few ways that you can

100
00:03:42,239 --> 00:03:44,480
secure your cloud applications i'll be

101
00:03:44,480 --> 00:03:45,599
talking about three

102
00:03:45,599 --> 00:03:48,319
security cloud patterns and i'll also be

103
00:03:48,319 --> 00:03:49,040
talking about

104
00:03:49,040 --> 00:03:52,080
a few things that you can do beyond

105
00:03:52,080 --> 00:03:55,360
these patterns when you are coding

106
00:03:55,360 --> 00:03:59,120
when you are designing and in other

107
00:03:59,120 --> 00:04:01,280
software engineering steps but before i

108
00:04:01,280 --> 00:04:03,200
start to do that i would want to quickly

109
00:04:03,200 --> 00:04:04,400
introduce

110
00:04:04,400 --> 00:04:07,519
myself my name is adora and i am a

111
00:04:07,519 --> 00:04:10,000
software engineer at the microsoft mixed

112
00:04:10,000 --> 00:04:11,280
reality team

113
00:04:11,280 --> 00:04:14,720
i'm a tech content creator at adora hack

114
00:04:14,720 --> 00:04:16,798
there a hack is a blog that i started

115
00:04:16,798 --> 00:04:18,000
myself

116
00:04:18,000 --> 00:04:21,358
i write articles and i also publish

117
00:04:21,358 --> 00:04:24,560
youtube videos under the brand adora

118
00:04:24,560 --> 00:04:25,360
hack

119
00:04:25,360 --> 00:04:29,280
i am the co-founder of unstock which is

120
00:04:29,280 --> 00:04:32,240
a community where we focus more on

121
00:04:32,240 --> 00:04:32,960
hands-on

122
00:04:32,960 --> 00:04:36,240
workshops as opposed to

123
00:04:36,240 --> 00:04:38,240
just normal talks because we feel that

124
00:04:38,240 --> 00:04:40,160
many people learn more

125
00:04:40,160 --> 00:04:42,880
by doing i'm also on the advisory board

126
00:04:42,880 --> 00:04:46,400
of vra nigeria which is

127
00:04:46,400 --> 00:04:50,080
a local chapter in nigerian chapter of

128
00:04:50,080 --> 00:04:52,000
the vr ar community and i believe this

129
00:04:52,000 --> 00:04:53,280
makes sense for me

130
00:04:53,280 --> 00:04:56,400
because as someone that is

131
00:04:56,400 --> 00:04:58,560
very excited about mixed reality and

132
00:04:58,560 --> 00:05:01,520
what we can do with that technology

133
00:05:01,520 --> 00:05:04,400
i would expect that personally myself i

134
00:05:04,400 --> 00:05:05,039
would be

135
00:05:05,039 --> 00:05:09,039
in a community of i would be running

136
00:05:09,039 --> 00:05:11,360
or at least be in a community where i

137
00:05:11,360 --> 00:05:12,400
have

138
00:05:12,400 --> 00:05:14,960
mixed reality developers and i am also

139
00:05:14,960 --> 00:05:17,120
surrounded by people enthusiastic about

140
00:05:17,120 --> 00:05:18,880
this technology and what we can do with

141
00:05:18,880 --> 00:05:20,160
it in the future

142
00:05:20,160 --> 00:05:22,080
i'm also popular in on twitter as a

143
00:05:22,080 --> 00:05:24,000
doran model you can check me

144
00:05:24,000 --> 00:05:26,960
out my twitter handle will be on the

145
00:05:26,960 --> 00:05:28,479
screen

146
00:05:28,479 --> 00:05:30,320
so before you start building your

147
00:05:30,320 --> 00:05:32,560
application you would think

148
00:05:32,560 --> 00:05:35,039
what kind of application am i building

149
00:05:35,039 --> 00:05:35,919
and

150
00:05:35,919 --> 00:05:38,479
you may need to run some kind of

151
00:05:38,479 --> 00:05:40,720
security checklist so that you can

152
00:05:40,720 --> 00:05:41,759
basically

153
00:05:41,759 --> 00:05:45,199
you know analyze and understand

154
00:05:45,199 --> 00:05:48,000
how your application needs to be secured

155
00:05:48,000 --> 00:05:50,080
if your application even needs to be

156
00:05:50,080 --> 00:05:50,960
secured

157
00:05:50,960 --> 00:05:52,320
and there are some questions that you

158
00:05:52,320 --> 00:05:54,320
might ask yourself which is

159
00:05:54,320 --> 00:05:56,720
will my app contain sensitive customer

160
00:05:56,720 --> 00:05:58,000
data

161
00:05:58,000 --> 00:06:00,479
where and how is my application's data

162
00:06:00,479 --> 00:06:01,360
stored

163
00:06:01,360 --> 00:06:03,520
will this application be available over

164
00:06:03,520 --> 00:06:05,600
the internet or just internally

165
00:06:05,600 --> 00:06:07,520
how do i plan to verify my user's

166
00:06:07,520 --> 00:06:10,080
identity what sensitive tasks

167
00:06:10,080 --> 00:06:12,639
are performed in my application does my

168
00:06:12,639 --> 00:06:13,840
application perform

169
00:06:13,840 --> 00:06:17,680
any risky software activities

170
00:06:17,680 --> 00:06:21,440
and these questions would help you

171
00:06:21,440 --> 00:06:24,160
you know understand what is actually

172
00:06:24,160 --> 00:06:26,080
what the security requirements of your

173
00:06:26,080 --> 00:06:28,560
application are asking yourself

174
00:06:28,560 --> 00:06:31,600
these six key questions and more

175
00:06:31,600 --> 00:06:33,680
if possible but these six key questions

176
00:06:33,680 --> 00:06:36,400
would actually help you understand what

177
00:06:36,400 --> 00:06:39,199
is required in your system in terms of

178
00:06:39,199 --> 00:06:41,199
in terms of security

179
00:06:41,199 --> 00:06:43,520
so when you say oh will my app contain

180
00:06:43,520 --> 00:06:44,960
sensitive data

181
00:06:44,960 --> 00:06:46,960
and if your app does contain sensitive

182
00:06:46,960 --> 00:06:49,120
data then you should be thinking about

183
00:06:49,120 --> 00:06:50,800
a data protection method for your

184
00:06:50,800 --> 00:06:53,280
application if sensitive tasks are going

185
00:06:53,280 --> 00:06:55,280
to be performed in your application

186
00:06:55,280 --> 00:06:57,199
you might be thinking about

187
00:06:57,199 --> 00:06:58,880
authentication and authorized

188
00:06:58,880 --> 00:07:00,720
authorization and you can you might also

189
00:07:00,720 --> 00:07:02,080
be thinking about

190
00:07:02,080 --> 00:07:04,960
multiple steps in the process which

191
00:07:04,960 --> 00:07:06,960
you'd have to do odd for example

192
00:07:06,960 --> 00:07:08,160
if you're going to be performing a

193
00:07:08,160 --> 00:07:11,440
sensitive task like transferring money

194
00:07:11,440 --> 00:07:14,840
yes you would want to authenticate the

195
00:07:14,840 --> 00:07:16,479
user i mean

196
00:07:16,479 --> 00:07:19,120
to the app itself but you might also

197
00:07:19,120 --> 00:07:20,319
want to do

198
00:07:20,319 --> 00:07:23,520
one kind of extra verification step

199
00:07:23,520 --> 00:07:26,319
before the money is transferred so these

200
00:07:26,319 --> 00:07:27,759
are a few things that you might want to

201
00:07:27,759 --> 00:07:28,880
think about

202
00:07:28,880 --> 00:07:30,720
and this would help you you know

203
00:07:30,720 --> 00:07:31,919
understand

204
00:07:31,919 --> 00:07:34,800
the level of security and based on these

205
00:07:34,800 --> 00:07:35,759
six questions

206
00:07:35,759 --> 00:07:38,000
i i went ahead to break down these

207
00:07:38,000 --> 00:07:38,800
questions

208
00:07:38,800 --> 00:07:41,759
and put them into you know different

209
00:07:41,759 --> 00:07:44,080
blocks that i felt were similar

210
00:07:44,080 --> 00:07:47,440
and these six questions

211
00:07:47,440 --> 00:07:50,240
come down into two different major

212
00:07:50,240 --> 00:07:51,199
umbrellas

213
00:07:51,199 --> 00:07:53,840
one being data protection and the other

214
00:07:53,840 --> 00:07:55,759
being identity management

215
00:07:55,759 --> 00:07:57,520
and based on that i'm going to be

216
00:07:57,520 --> 00:07:59,520
talking about like i said

217
00:07:59,520 --> 00:08:02,160
three security patterns in this talk the

218
00:08:02,160 --> 00:08:03,919
data protection pattern will be the

219
00:08:03,919 --> 00:08:05,440
gatekeeper pattern

220
00:08:05,440 --> 00:08:07,440
and the two identity management patterns

221
00:08:07,440 --> 00:08:08,960
i will be talking about would be

222
00:08:08,960 --> 00:08:11,280
the federated identity pattern and the

223
00:08:11,280 --> 00:08:12,000
valet key

224
00:08:12,000 --> 00:08:14,560
pattern so now let's talk about the

225
00:08:14,560 --> 00:08:16,319
gatekeeper pattern

226
00:08:16,319 --> 00:08:18,160
applications functionality are usually

227
00:08:18,160 --> 00:08:20,319
exposed when they accept

228
00:08:20,319 --> 00:08:23,520
and process a client's request if the

229
00:08:23,520 --> 00:08:24,960
system is compromised

230
00:08:24,960 --> 00:08:27,440
and a malicious user gains access or

231
00:08:27,440 --> 00:08:29,680
sensitive data will be exposed

232
00:08:29,680 --> 00:08:32,080
so in cases like this you might want to

233
00:08:32,080 --> 00:08:33,760
introduce

234
00:08:33,760 --> 00:08:37,120
a gatekeeper that helps with

235
00:08:37,120 --> 00:08:40,719
um request validation and what this

236
00:08:40,719 --> 00:08:43,919
gatekeeper does basically is that it's

237
00:08:43,919 --> 00:08:46,640
it's as the name implies the gateskeeper

238
00:08:46,640 --> 00:08:48,240
it's in the middle

239
00:08:48,240 --> 00:08:51,279
of the client and the actual host

240
00:08:51,279 --> 00:08:55,200
and the guest keeper exposes

241
00:08:55,200 --> 00:08:57,360
one endpoint to the client and that's

242
00:08:57,360 --> 00:08:59,440
the client that's the end point

243
00:08:59,440 --> 00:09:03,920
that the client would always call and

244
00:09:03,920 --> 00:09:06,480
when the client calls that endpoint the

245
00:09:06,480 --> 00:09:08,080
gatekeeper validates

246
00:09:08,080 --> 00:09:11,120
and just fantastic the request

247
00:09:11,120 --> 00:09:12,800
checks that based on all the

248
00:09:12,800 --> 00:09:14,640
requirements that i have

249
00:09:14,640 --> 00:09:19,279
based on what a same request should be

250
00:09:19,279 --> 00:09:21,760
i have validated this request and i have

251
00:09:21,760 --> 00:09:23,040
sanitized

252
00:09:23,040 --> 00:09:25,920
it's in case there's any you know web

253
00:09:25,920 --> 00:09:26,800
queries

254
00:09:26,800 --> 00:09:30,800
or anything funny or weird going on that

255
00:09:30,800 --> 00:09:32,640
shouldn't be going on and then based

256
00:09:32,640 --> 00:09:36,000
on that i can now come call the host

257
00:09:36,000 --> 00:09:39,360
and then i make that you know call

258
00:09:39,360 --> 00:09:41,279
and then the host goes ahead to access

259
00:09:41,279 --> 00:09:43,680
my data access the service

260
00:09:43,680 --> 00:09:45,920
and access all of that stuff and a real

261
00:09:45,920 --> 00:09:47,440
life example

262
00:09:47,440 --> 00:09:48,880
for that you can implement the

263
00:09:48,880 --> 00:09:51,120
gatekeeper in different ways

264
00:09:51,120 --> 00:09:54,080
you can have a gatekeeper role which

265
00:09:54,080 --> 00:09:56,240
would have like a limited privilege role

266
00:09:56,240 --> 00:09:58,320
and then you can also have a trusted

267
00:09:58,320 --> 00:09:58,880
role

268
00:09:58,880 --> 00:10:01,519
which ha which is like improved in full

269
00:10:01,519 --> 00:10:02,720
privileged mode

270
00:10:02,720 --> 00:10:06,079
and the gates keeper role exposes a

271
00:10:06,079 --> 00:10:08,480
public endpoint to the clients

272
00:10:08,480 --> 00:10:10,720
and the public endpoint is what the

273
00:10:10,720 --> 00:10:11,760
client calls

274
00:10:11,760 --> 00:10:14,480
and once the client calls that endpoint

275
00:10:14,480 --> 00:10:15,440
like we said

276
00:10:15,440 --> 00:10:17,279
the request is sanitized and the request

277
00:10:17,279 --> 00:10:18,560
is validated

278
00:10:18,560 --> 00:10:21,360
and then the internal endpoint is called

279
00:10:21,360 --> 00:10:23,600
and the internal endpoint

280
00:10:23,600 --> 00:10:27,200
is the end point that in turn

281
00:10:27,200 --> 00:10:30,079
makes you reach the service you know

282
00:10:30,079 --> 00:10:31,519
reach out to the service

283
00:10:31,519 --> 00:10:33,200
the next one for me will be the valet

284
00:10:33,200 --> 00:10:34,959
key pattern

285
00:10:34,959 --> 00:10:36,399
and this is an identity management

286
00:10:36,399 --> 00:10:38,480
scenario um the

287
00:10:38,480 --> 00:10:41,519
key pattern actually

288
00:10:41,519 --> 00:10:44,560
helps you securely control

289
00:10:44,560 --> 00:10:47,360
access to data by using a token that

290
00:10:47,360 --> 00:10:49,920
expires after a period of time

291
00:10:49,920 --> 00:10:52,440
so this qr token can be used for

292
00:10:52,440 --> 00:10:53,600
authentication

293
00:10:53,600 --> 00:10:56,880
and authorization and the steps

294
00:10:56,880 --> 00:11:00,240
the way this works is first of all

295
00:11:00,240 --> 00:11:04,240
the user makes a request

296
00:11:04,240 --> 00:11:06,240
to the application for a particular

297
00:11:06,240 --> 00:11:07,839
resource

298
00:11:07,839 --> 00:11:10,560
and once the user makes that resource

299
00:11:10,560 --> 00:11:10,959
the

300
00:11:10,959 --> 00:11:13,200
application you know validates the

301
00:11:13,200 --> 00:11:15,680
request and generates a token

302
00:11:15,680 --> 00:11:19,600
and returns that token back to the user

303
00:11:19,600 --> 00:11:23,200
and now the user can use that token to

304
00:11:23,200 --> 00:11:24,880
access that resource

305
00:11:24,880 --> 00:11:27,040
but after a period of time the token

306
00:11:27,040 --> 00:11:29,760
becomes invalid so the user will have to

307
00:11:29,760 --> 00:11:33,200
you know make another request

308
00:11:33,200 --> 00:11:36,480
again so an example of this would be

309
00:11:36,480 --> 00:11:38,560
you know requesting a particular

310
00:11:38,560 --> 00:11:40,640
resource and then getting sas tokens

311
00:11:40,640 --> 00:11:43,360
after a while your sas tokens become

312
00:11:43,360 --> 00:11:45,200
invalid and you'd have to request

313
00:11:45,200 --> 00:11:48,240
another token so that's basically you

314
00:11:48,240 --> 00:11:49,440
know how this works

315
00:11:49,440 --> 00:11:52,399
and these tokens would usually have some

316
00:11:52,399 --> 00:11:54,399
kind of access that you get so

317
00:11:54,399 --> 00:11:57,440
if you have read access to azure storage

318
00:11:57,440 --> 00:11:58,880
for example

319
00:11:58,880 --> 00:12:00,800
if you get token that gives you read

320
00:12:00,800 --> 00:12:02,320
access to azure storage

321
00:12:02,320 --> 00:12:05,440
you know that you can only read

322
00:12:05,440 --> 00:12:09,120
blobs read resources read data

323
00:12:09,120 --> 00:12:12,160
read anything from from azure storage

324
00:12:12,160 --> 00:12:14,560
but you cannot at any point

325
00:12:14,560 --> 00:12:16,639
write to that storage because you only

326
00:12:16,639 --> 00:12:18,560
have read permissions with the token

327
00:12:18,560 --> 00:12:19,839
that's available

328
00:12:19,839 --> 00:12:23,600
to you and i i got this code from the

329
00:12:23,600 --> 00:12:25,040
microsoft website

330
00:12:25,040 --> 00:12:28,160
the microsoft documentation and this

331
00:12:28,160 --> 00:12:31,360
code shows you a sample

332
00:12:31,360 --> 00:12:35,040
of how you can generate a

333
00:12:35,040 --> 00:12:38,240
token a sas token for

334
00:12:38,240 --> 00:12:41,680
a storage for azure storage so the first

335
00:12:41,680 --> 00:12:42,880
thing that happens

336
00:12:42,880 --> 00:12:45,839
is that you know yes you create your

337
00:12:45,839 --> 00:12:48,000
blog service client and your blog

338
00:12:48,000 --> 00:12:50,000
container the method is called get

339
00:12:50,000 --> 00:12:52,880
shared access reference for upload

340
00:12:52,880 --> 00:12:55,040
and then we've defined the structs which

341
00:12:55,040 --> 00:12:56,720
is a storage entity sas

342
00:12:56,720 --> 00:12:59,120
and that's what we we want to return at

343
00:12:59,120 --> 00:13:00,079
the end of the day

344
00:13:00,079 --> 00:13:03,440
our storage agency sas has our

345
00:13:03,440 --> 00:13:04,560
credentials

346
00:13:04,560 --> 00:13:07,760
which is uh you know token

347
00:13:07,760 --> 00:13:11,839
and the blob uri that we actually want

348
00:13:11,839 --> 00:13:15,440
the url to the blob that we want access

349
00:13:15,440 --> 00:13:17,200
to

350
00:13:17,200 --> 00:13:22,399
so we go ahead and we you know get the

351
00:13:22,399 --> 00:13:25,519
blogs and then we

352
00:13:25,519 --> 00:13:30,160
create a storage key credential

353
00:13:30,160 --> 00:13:32,160
we go ahead and specify a blobster

354
00:13:32,160 --> 00:13:33,519
builder

355
00:13:33,519 --> 00:13:37,360
we pass the name of the blob container

356
00:13:37,360 --> 00:13:39,279
we pass the name of the blob

357
00:13:39,279 --> 00:13:42,240
we specify the resource and we put a

358
00:13:42,240 --> 00:13:44,079
time constraint so

359
00:13:44,079 --> 00:13:47,279
this is when

360
00:13:47,279 --> 00:13:50,160
it should start and this is when you

361
00:13:50,160 --> 00:13:51,440
should get access and this is when your

362
00:13:51,440 --> 00:13:52,720
access should be revoked

363
00:13:52,720 --> 00:13:54,320
so for this particular example your

364
00:13:54,320 --> 00:13:56,399
access will be revoked

365
00:13:56,399 --> 00:13:59,760
after 10 minutes and

366
00:13:59,760 --> 00:14:03,680
the user has right access so we go ahead

367
00:14:03,680 --> 00:14:06,800
create the sas and then we return

368
00:14:06,800 --> 00:14:09,839
the sas and the uri

369
00:14:09,839 --> 00:14:12,480
of the blob and then in other parts of

370
00:14:12,480 --> 00:14:13,199
the code

371
00:14:13,199 --> 00:14:16,320
you can take that and get access to you

372
00:14:16,320 --> 00:14:17,680
know azure storage

373
00:14:17,680 --> 00:14:20,399
and write whatever you want to write to

374
00:14:20,399 --> 00:14:22,800
the storage because you were able to

375
00:14:22,800 --> 00:14:26,079
get right permissions

376
00:14:26,079 --> 00:14:29,040
the final pattern i will be talking

377
00:14:29,040 --> 00:14:29,519
about

378
00:14:29,519 --> 00:14:31,600
is the federated identity pattern which

379
00:14:31,600 --> 00:14:33,440
is also under the identity management

380
00:14:33,440 --> 00:14:34,480
scenario

381
00:14:34,480 --> 00:14:36,320
and this pattern allows you to separate

382
00:14:36,320 --> 00:14:38,480
user authentication from application

383
00:14:38,480 --> 00:14:39,440
source code

384
00:14:39,440 --> 00:14:41,600
and delegate authentication to an

385
00:14:41,600 --> 00:14:43,760
external provider

386
00:14:43,760 --> 00:14:46,720
so how this works is and this is sort of

387
00:14:46,720 --> 00:14:47,360
like

388
00:14:47,360 --> 00:14:50,079
claims based access control so how this

389
00:14:50,079 --> 00:14:50,639
works

390
00:14:50,639 --> 00:14:54,880
is um your service is using some kind of

391
00:14:54,880 --> 00:14:58,320
id provider or some kind of sts

392
00:14:58,320 --> 00:15:02,399
and a user authenticates

393
00:15:02,399 --> 00:15:06,399
and requests an sts token and the gay

394
00:15:06,399 --> 00:15:08,240
talking back from sts

395
00:15:08,240 --> 00:15:12,240
and then the user presents the token to

396
00:15:12,240 --> 00:15:15,600
the service and based on that the user

397
00:15:15,600 --> 00:15:16,480
is

398
00:15:16,480 --> 00:15:19,680
authenticated and based on you know

399
00:15:19,680 --> 00:15:23,120
what roles the user has

400
00:15:23,120 --> 00:15:26,800
and how you know you've implemented

401
00:15:26,800 --> 00:15:29,600
rule-based access control basically and

402
00:15:29,600 --> 00:15:30,560
what

403
00:15:30,560 --> 00:15:33,839
data is in each clean

404
00:15:33,839 --> 00:15:37,279
what the user is able to do is now

405
00:15:37,279 --> 00:15:41,600
controlled and this is helpful for you

406
00:15:41,600 --> 00:15:43,920
know like single enterprise sign on

407
00:15:43,920 --> 00:15:45,839
when you have multiple partners and when

408
00:15:45,839 --> 00:15:47,600
you have sas applications

409
00:15:47,600 --> 00:15:50,959
so you can decide to be like okay

410
00:15:50,959 --> 00:15:55,600
i'm going to provide this

411
00:15:55,600 --> 00:15:57,839
sort of i'm going to provide this sort

412
00:15:57,839 --> 00:15:59,440
of service

413
00:15:59,440 --> 00:16:03,920
to users in this particular tenant in

414
00:16:03,920 --> 00:16:05,839
this particular enterprise so

415
00:16:05,839 --> 00:16:09,680
if you try to access this thing and you

416
00:16:09,680 --> 00:16:12,320
you are not you are not under this

417
00:16:12,320 --> 00:16:14,240
tenant then

418
00:16:14,240 --> 00:16:17,680
i should kick you out basically um

419
00:16:17,680 --> 00:16:20,079
see so yeah this is what this means as

420
00:16:20,079 --> 00:16:21,199
well i have

421
00:16:21,199 --> 00:16:24,240
explained these three security patterns

422
00:16:24,240 --> 00:16:25,920
and now i want to move on to the other

423
00:16:25,920 --> 00:16:26,720
ways

424
00:16:26,720 --> 00:16:29,839
that you can enforce security the first

425
00:16:29,839 --> 00:16:32,880
way is using multi-factor authentication

426
00:16:32,880 --> 00:16:36,160
this is very important nowadays just one

427
00:16:36,160 --> 00:16:36,880
password

428
00:16:36,880 --> 00:16:40,560
is no longer enough we have people

429
00:16:40,560 --> 00:16:44,000
that want to always just constantly

430
00:16:44,000 --> 00:16:45,120
break into things

431
00:16:45,120 --> 00:16:47,680
and take as much data as much

432
00:16:47,680 --> 00:16:48,720
information

433
00:16:48,720 --> 00:16:52,480
as much things as they can take

434
00:16:52,480 --> 00:16:54,880
and for whatever reason if it's social

435
00:16:54,880 --> 00:16:55,680
media

436
00:16:55,680 --> 00:16:59,199
if it's finance applications whatever it

437
00:16:59,199 --> 00:17:03,360
is that that requires authentication

438
00:17:03,360 --> 00:17:07,039
um depending on the level

439
00:17:07,039 --> 00:17:09,280
of importance and the level of security

440
00:17:09,280 --> 00:17:10,640
that you're going for

441
00:17:10,640 --> 00:17:13,280
using multiple using multi-factor

442
00:17:13,280 --> 00:17:14,880
authentication is very

443
00:17:14,880 --> 00:17:18,720
important and this could be in form of

444
00:17:18,720 --> 00:17:22,000
you know a third-party authenticator app

445
00:17:22,000 --> 00:17:25,760
this could be in form of sending otps to

446
00:17:25,760 --> 00:17:27,439
a user

447
00:17:27,439 --> 00:17:30,880
this could be in form of some kind of

448
00:17:30,880 --> 00:17:33,440
security question this could be in form

449
00:17:33,440 --> 00:17:35,120
of different codes that you give the

450
00:17:35,120 --> 00:17:35,919
user

451
00:17:35,919 --> 00:17:38,799
and i like the user could only use one

452
00:17:38,799 --> 00:17:39,440
code

453
00:17:39,440 --> 00:17:42,640
once and then once that code is used

454
00:17:42,640 --> 00:17:45,039
in authentication the code is now

455
00:17:45,039 --> 00:17:46,799
invalid and when the user

456
00:17:46,799 --> 00:17:48,880
has exhausted all their i don't know 10

457
00:17:48,880 --> 00:17:50,000
codes for example

458
00:17:50,000 --> 00:17:52,160
they can always regenerate new ones

459
00:17:52,160 --> 00:17:53,200
different ways

460
00:17:53,200 --> 00:17:56,640
think of creative ways to just

461
00:17:56,640 --> 00:18:00,799
help secure the

462
00:18:00,799 --> 00:18:03,039
secure the user's data secure the user's

463
00:18:03,039 --> 00:18:04,799
profile secure the application a lot

464
00:18:04,799 --> 00:18:05,280
more

465
00:18:05,280 --> 00:18:07,679
another way is cons is that you should

466
00:18:07,679 --> 00:18:09,120
consider implementing

467
00:18:09,120 --> 00:18:12,160
jit access for resources um i talked

468
00:18:12,160 --> 00:18:13,520
about

469
00:18:13,520 --> 00:18:16,799
you know the developer being

470
00:18:16,799 --> 00:18:18,480
possibly being the one to make the

471
00:18:18,480 --> 00:18:20,640
mistake at the beginning of this talk

472
00:18:20,640 --> 00:18:23,919
and one way to prevent that is

473
00:18:23,919 --> 00:18:26,720
by enforcing it on production resources

474
00:18:26,720 --> 00:18:27,679
for example

475
00:18:27,679 --> 00:18:31,840
so if anybody for anyone to get

476
00:18:31,840 --> 00:18:34,880
access to production resources they

477
00:18:34,880 --> 00:18:38,960
need jit access everyone by default

478
00:18:38,960 --> 00:18:42,320
doesn't have access and that way you can

479
00:18:42,320 --> 00:18:45,760
at least minimize and control the amount

480
00:18:45,760 --> 00:18:47,440
of times that

481
00:18:47,440 --> 00:18:49,919
you know all your data is deleted or

482
00:18:49,919 --> 00:18:51,919
your whole service goes away

483
00:18:51,919 --> 00:18:56,799
or everything is missing because

484
00:18:56,799 --> 00:18:59,840
not everyone just has random access to

485
00:18:59,840 --> 00:19:00,559
production

486
00:19:00,559 --> 00:19:03,280
resources and can do what they like with

487
00:19:03,280 --> 00:19:04,080
it

488
00:19:04,080 --> 00:19:06,400
another thing that is very important is

489
00:19:06,400 --> 00:19:07,200
to use

490
00:19:07,200 --> 00:19:09,760
stable authentication and authorization

491
00:19:09,760 --> 00:19:10,799
platforms

492
00:19:10,799 --> 00:19:12,559
and this is one of the reasons why the

493
00:19:12,559 --> 00:19:14,640
federated identity pattern

494
00:19:14,640 --> 00:19:18,880
is is in existence um

495
00:19:18,880 --> 00:19:21,679
requiring reauthentication for some

496
00:19:21,679 --> 00:19:23,360
actions as well

497
00:19:23,360 --> 00:19:26,480
um for financial transactions you know

498
00:19:26,480 --> 00:19:28,720
once you've logged in

499
00:19:28,720 --> 00:19:32,000
find great but if you want to transfer

500
00:19:32,000 --> 00:19:35,120
i don't know one million pounds or

501
00:19:35,120 --> 00:19:36,720
something

502
00:19:36,720 --> 00:19:40,000
it's always it's always safe

503
00:19:40,000 --> 00:19:43,360
to re-authenticate the person

504
00:19:43,360 --> 00:19:47,039
before you go ahead with that you know

505
00:19:47,039 --> 00:19:50,080
transaction it's important to require it

506
00:19:50,080 --> 00:19:51,520
i think it's mostly financial

507
00:19:51,520 --> 00:19:54,160
transactions that do this

508
00:19:54,160 --> 00:19:57,280
um one other very important thing again

509
00:19:57,280 --> 00:19:57,600
is

510
00:19:57,600 --> 00:20:00,080
reducing your attack surface it could be

511
00:20:00,080 --> 00:20:01,760
something as small as just

512
00:20:01,760 --> 00:20:05,280
a machine that you are not using right

513
00:20:05,280 --> 00:20:08,720
if you don't need that vm

514
00:20:08,720 --> 00:20:11,679
remove it the bigger your attack surface

515
00:20:11,679 --> 00:20:12,480
is

516
00:20:12,480 --> 00:20:15,720
the easier it is for

517
00:20:15,720 --> 00:20:19,039
unauthorized for unauthorized

518
00:20:19,039 --> 00:20:22,799
users to gain access

519
00:20:22,799 --> 00:20:25,679
and do malicious things on your

520
00:20:25,679 --> 00:20:26,799
application

521
00:20:26,799 --> 00:20:28,799
because now they have different points

522
00:20:28,799 --> 00:20:31,120
to try out if they try to gain access to

523
00:20:31,120 --> 00:20:32,240
your system

524
00:20:32,240 --> 00:20:34,880
through one point and it did not work

525
00:20:34,880 --> 00:20:36,480
out they will go somewhere else to try

526
00:20:36,480 --> 00:20:37,679
and then they will go somewhere else to

527
00:20:37,679 --> 00:20:38,240
try

528
00:20:38,240 --> 00:20:40,240
so you should try and make your attack

529
00:20:40,240 --> 00:20:42,799
surface as small as possible

530
00:20:42,799 --> 00:20:45,200
if you are not using any vm if there's

531
00:20:45,200 --> 00:20:47,200
anything that is

532
00:20:47,200 --> 00:20:48,799
in the clouds that you're supposed to be

533
00:20:48,799 --> 00:20:50,159
using but for whatever reason you are

534
00:20:50,159 --> 00:20:51,200
not using

535
00:20:51,200 --> 00:20:53,679
remove it until you need it and then you

536
00:20:53,679 --> 00:20:54,960
can always bring it back

537
00:20:54,960 --> 00:20:56,960
probably handle errors and exceptions

538
00:20:56,960 --> 00:20:59,440
this this doesn't directly

539
00:20:59,440 --> 00:21:03,919
help with you know securing your system

540
00:21:03,919 --> 00:21:07,200
but it helps with telemetry helps with

541
00:21:07,200 --> 00:21:10,480
monitoring why something is not working

542
00:21:10,480 --> 00:21:12,080
as it should in your system it helps

543
00:21:12,080 --> 00:21:12,880
with

544
00:21:12,880 --> 00:21:15,200
you know if something happens for

545
00:21:15,200 --> 00:21:16,480
example

546
00:21:16,480 --> 00:21:19,200
and the whole system crashed you know

547
00:21:19,200 --> 00:21:21,280
why it crashed and

548
00:21:21,280 --> 00:21:24,080
it might be for a security reason it

549
00:21:24,080 --> 00:21:24,640
might be

550
00:21:24,640 --> 00:21:28,240
for other reasons it might be for other

551
00:21:28,240 --> 00:21:29,440
reasons i mean

552
00:21:29,440 --> 00:21:31,280
different software could crash for

553
00:21:31,280 --> 00:21:33,440
different reasons but you

554
00:21:33,440 --> 00:21:35,120
probably if you properly handle errors

555
00:21:35,120 --> 00:21:36,960
and you probably handle exceptions

556
00:21:36,960 --> 00:21:40,240
you know it would help your debugging

557
00:21:40,240 --> 00:21:42,320
process and this also turns into the

558
00:21:42,320 --> 00:21:44,000
next point which is you know probably

559
00:21:44,000 --> 00:21:46,159
monitor your service and trigger a lot

560
00:21:46,159 --> 00:21:47,919
about issues so

561
00:21:47,919 --> 00:21:50,000
if there are serious issues you want to

562
00:21:50,000 --> 00:21:51,120
trigger

563
00:21:51,120 --> 00:21:53,280
alert so that people can attend to them

564
00:21:53,280 --> 00:21:54,159
and fix them

565
00:21:54,159 --> 00:21:56,960
as fast as they can and your response

566
00:21:56,960 --> 00:21:58,000
time is pretty

567
00:21:58,000 --> 00:22:01,600
fast also encrypt sensitive data which i

568
00:22:01,600 --> 00:22:02,000
think

569
00:22:02,000 --> 00:22:04,960
is very important store sensitive things

570
00:22:04,960 --> 00:22:06,080
in a secret

571
00:22:06,080 --> 00:22:09,120
manager um you can use you know azure

572
00:22:09,120 --> 00:22:10,960
key vault for example or any other ones

573
00:22:10,960 --> 00:22:12,240
that you're interested in

574
00:22:12,240 --> 00:22:15,440
but do not for whatever reason

575
00:22:15,440 --> 00:22:19,679
had code important information don't

576
00:22:19,679 --> 00:22:21,280
have code sensitive data

577
00:22:21,280 --> 00:22:23,919
implement fail-safe measures if for

578
00:22:23,919 --> 00:22:25,200
whatever reason your app

579
00:22:25,200 --> 00:22:28,159
your application fails or crashes you

580
00:22:28,159 --> 00:22:29,840
wanted to go back

581
00:22:29,840 --> 00:22:33,280
you know to a state

582
00:22:33,280 --> 00:22:36,880
that is safe and then somebody can you

583
00:22:36,880 --> 00:22:37,600
know

584
00:22:37,600 --> 00:22:41,360
try again or retry another thing

585
00:22:41,360 --> 00:22:45,679
is that you should consider

586
00:22:45,679 --> 00:22:49,440
threat modelling um threat modelling

587
00:22:49,440 --> 00:22:53,039
is helpful especially in the initial

588
00:22:53,039 --> 00:22:55,520
process of trying to

589
00:22:55,520 --> 00:22:58,960
design your applications because

590
00:22:58,960 --> 00:23:02,320
it helps you understand the possible

591
00:23:02,320 --> 00:23:03,600
threats

592
00:23:03,600 --> 00:23:05,760
the same way initially i talked about

593
00:23:05,760 --> 00:23:08,159
you know asking yourself these questions

594
00:23:08,159 --> 00:23:09,679
that you can understand your security

595
00:23:09,679 --> 00:23:12,799
requirements with threat modeling

596
00:23:12,799 --> 00:23:16,080
you are analyzing your system and

597
00:23:16,080 --> 00:23:19,120
analyzing the flow of

598
00:23:19,120 --> 00:23:22,559
data the flow of oppressions

599
00:23:22,559 --> 00:23:24,400
in your system and understanding a

600
00:23:24,400 --> 00:23:25,760
possible

601
00:23:25,760 --> 00:23:28,640
area where you could get attacked a

602
00:23:28,640 --> 00:23:30,240
possible area where there could be a

603
00:23:30,240 --> 00:23:31,840
security breach

604
00:23:31,840 --> 00:23:36,159
and trying to mitigate

605
00:23:36,159 --> 00:23:39,600
that in your design before you start

606
00:23:39,600 --> 00:23:43,279
implementation and i'm going to be

607
00:23:43,279 --> 00:23:44,799
talking about

608
00:23:44,799 --> 00:23:48,080
the stride threat modeling and i'm going

609
00:23:48,080 --> 00:23:49,520
to be taking each threat

610
00:23:49,520 --> 00:23:51,200
and talking about it so let's talk about

611
00:23:51,200 --> 00:23:52,799
the first one if

612
00:23:52,799 --> 00:23:56,720
you if spoofing attacks would be the

613
00:23:56,720 --> 00:23:58,320
threat for example

614
00:23:58,320 --> 00:24:01,520
which means that it's an issue on

615
00:24:01,520 --> 00:24:03,520
authentication and one of the possible

616
00:24:03,520 --> 00:24:04,960
mitigations would be

617
00:24:04,960 --> 00:24:08,240
enforced you know http connections if

618
00:24:08,240 --> 00:24:11,600
is that somebody could possibly tamper

619
00:24:11,600 --> 00:24:13,360
with resources then it's

620
00:24:13,360 --> 00:24:16,720
a it's a problem it's a it's an

621
00:24:16,720 --> 00:24:19,120
integrity issue and then you should

622
00:24:19,120 --> 00:24:21,679
make sure that you're using valid ssl

623
00:24:21,679 --> 00:24:23,679
and tls certificates

624
00:24:23,679 --> 00:24:27,760
if reputation is a threat then

625
00:24:27,760 --> 00:24:30,080
you know you should consider enabling

626
00:24:30,080 --> 00:24:31,600
monitoring and

627
00:24:31,600 --> 00:24:33,440
doing proper instrumentation in your

628
00:24:33,440 --> 00:24:34,960
application if

629
00:24:34,960 --> 00:24:36,960
information disclosure is a threat then

630
00:24:36,960 --> 00:24:38,960
it's a serious threat

631
00:24:38,960 --> 00:24:41,039
and it's a confidentiality problem which

632
00:24:41,039 --> 00:24:42,000
you need to fix

633
00:24:42,000 --> 00:24:43,440
and one of the ways to fix that

634
00:24:43,440 --> 00:24:46,080
depending on how your application is set

635
00:24:46,080 --> 00:24:47,120
up is that

636
00:24:47,120 --> 00:24:49,760
you might decide to encrypt sensitive

637
00:24:49,760 --> 00:24:50,720
data

638
00:24:50,720 --> 00:24:53,919
or you might decide to implement data

639
00:24:53,919 --> 00:24:56,559
protection methods because you want to

640
00:24:56,559 --> 00:24:58,320
keep your data as

641
00:24:58,320 --> 00:25:00,799
you know confidential as possible if now

642
00:25:00,799 --> 00:25:02,880
of service is a threat then that's an

643
00:25:02,880 --> 00:25:04,559
availability problem

644
00:25:04,559 --> 00:25:06,559
and you might want to enable proper

645
00:25:06,559 --> 00:25:07,919
monitoring and proper

646
00:25:07,919 --> 00:25:10,559
instrumentation so that you so that you

647
00:25:10,559 --> 00:25:11,600
can look at

648
00:25:11,600 --> 00:25:13,360
the logs of your application you can

649
00:25:13,360 --> 00:25:15,360
look at the metrics and you should you

650
00:25:15,360 --> 00:25:16,400
can see

651
00:25:16,400 --> 00:25:19,919
how well your availability is doing

652
00:25:19,919 --> 00:25:24,880
and possibly try and improve on that

653
00:25:24,880 --> 00:25:26,720
and it will give you like a clear view

654
00:25:26,720 --> 00:25:28,799
of what you're looking at

655
00:25:28,799 --> 00:25:31,120
evaluation of privilege is the threat

656
00:25:31,120 --> 00:25:32,000
then

657
00:25:32,000 --> 00:25:35,039
authorization is the problem and

658
00:25:35,039 --> 00:25:38,400
one way that

659
00:25:38,400 --> 00:25:40,640
you can mitigate this issue is by using

660
00:25:40,640 --> 00:25:42,080
like really secure identity

661
00:25:42,080 --> 00:25:44,240
management and going back to that the

662
00:25:44,240 --> 00:25:45,600
federated

663
00:25:45,600 --> 00:25:49,919
identity pattern is a way to help

664
00:25:49,919 --> 00:25:53,279
with this particular problem

665
00:25:53,279 --> 00:25:55,760
so other ways that you can implement

666
00:25:55,760 --> 00:25:57,760
security is by using libraries that are

667
00:25:57,760 --> 00:25:59,360
secure

668
00:25:59,360 --> 00:26:01,919
if you have to use open source libraries

669
00:26:01,919 --> 00:26:03,520
make sure that these libraries are

670
00:26:03,520 --> 00:26:05,120
actively maintained

671
00:26:05,120 --> 00:26:06,799
and if you can contribute to them that

672
00:26:06,799 --> 00:26:08,640
would be very nice as well but make sure

673
00:26:08,640 --> 00:26:10,880
these libraries are actively maintained

674
00:26:10,880 --> 00:26:13,600
and also update your service

675
00:26:13,600 --> 00:26:15,840
dependencies you prefer vulnerabilities

676
00:26:15,840 --> 00:26:16,880
and

677
00:26:16,880 --> 00:26:18,960
avoid hard coding i've talked about this

678
00:26:18,960 --> 00:26:20,000
before

679
00:26:20,000 --> 00:26:23,520
if you have any important

680
00:26:23,520 --> 00:26:27,039
data any secrets any keys make sure you

681
00:26:27,039 --> 00:26:29,200
are referencing them from some kind of

682
00:26:29,200 --> 00:26:30,559
secrets manager

683
00:26:30,559 --> 00:26:33,760
if you want to learn more about security

684
00:26:33,760 --> 00:26:36,880
i would suggest that you look at

685
00:26:36,880 --> 00:26:39,840
any of these links on the screen they'll

686
00:26:39,840 --> 00:26:40,960
be really helpful

687
00:26:40,960 --> 00:26:43,760
to you thank you for watching this talk

688
00:26:43,760 --> 00:26:46,000
like i said earlier i am truly

689
00:26:46,000 --> 00:26:49,279
honored to be giving this talk today

690
00:26:49,279 --> 00:26:51,600
thank you for watching this talk and

691
00:26:51,600 --> 00:26:55,840
enjoy the rest of your day

