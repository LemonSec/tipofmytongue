1
00:00:00,030 --> 00:00:02,820
all right my name is or comm I am the

2
00:00:02,820 --> 00:00:05,819
founder of Jupiter 1 and C so fly for

3
00:00:05,819 --> 00:00:07,529
make so Jupiter 1 is a cloud native

4
00:00:07,529 --> 00:00:12,330
platform for security and compliance and

5
00:00:12,330 --> 00:00:13,889
more specifically asset identification

6
00:00:13,889 --> 00:00:16,139
in the cloud configuration aggregation

7
00:00:16,139 --> 00:00:19,740
and auditing and metrics reporting and

8
00:00:19,740 --> 00:00:23,820
so on so forth life omec is a healthcare

9
00:00:23,820 --> 00:00:26,550
cloud company that builds software in

10
00:00:26,550 --> 00:00:28,650
AWS that are completely cloud native

11
00:00:28,650 --> 00:00:31,410
that drives machine learning to analyze

12
00:00:31,410 --> 00:00:34,469
a huge amount of data or healthcare DNA

13
00:00:34,469 --> 00:00:36,690
data and patient data and so on and so

14
00:00:36,690 --> 00:00:39,600
forth now before I jump into this I got

15
00:00:39,600 --> 00:00:40,770
a couple questions for you guys

16
00:00:40,770 --> 00:00:43,890
all right who here by race of hand who

17
00:00:43,890 --> 00:00:48,780
here loves compliance we got a couple of

18
00:00:48,780 --> 00:00:51,030
takers all right very brave of you tell

19
00:00:51,030 --> 00:00:53,760
the compliance officers these are the

20
00:00:53,760 --> 00:00:58,289
auditors all right now who here had to

21
00:00:58,289 --> 00:01:00,180
deal with compliance but think it's a

22
00:01:00,180 --> 00:01:04,799
big pain in but all right more people

23
00:01:04,799 --> 00:01:07,260
that's that's great the the rest of you

24
00:01:07,260 --> 00:01:11,939
are either asleep or not quite honest

25
00:01:11,939 --> 00:01:16,530
with yourself I've done this for a long

26
00:01:16,530 --> 00:01:17,159
time

27
00:01:17,159 --> 00:01:21,210
in security and compliance and I first

28
00:01:21,210 --> 00:01:22,799
and foremost think compliance is a

29
00:01:22,799 --> 00:01:26,070
necessary evil is not a bad thing but

30
00:01:26,070 --> 00:01:28,080
it's not anything that anybody

31
00:01:28,080 --> 00:01:32,299
particularly enjoy I don't even as a

32
00:01:32,299 --> 00:01:34,200
person in charge of the compliance

33
00:01:34,200 --> 00:01:35,970
program for our organizations I don't

34
00:01:35,970 --> 00:01:38,340
particularly enjoy it now this is our

35
00:01:38,340 --> 00:01:41,310
compliance poor one which is probably

36
00:01:41,310 --> 00:01:44,280
similar to many people's right and it's

37
00:01:44,280 --> 00:01:46,409
not that different a lot of us

38
00:01:46,409 --> 00:01:48,479
organizations there's you know little

39
00:01:48,479 --> 00:01:51,930
details but overall it's similar and we

40
00:01:51,930 --> 00:01:55,020
started off having a set of policies and

41
00:01:55,020 --> 00:01:57,570
processes and risk assessments and use

42
00:01:57,570 --> 00:02:00,000
that to drive risk-based decisions on

43
00:02:00,000 --> 00:02:01,799
you know what control seems to implement

44
00:02:01,799 --> 00:02:04,920
so as a result we implemented about a

45
00:02:04,920 --> 00:02:07,829
hundred probably 130 or so conchos as

46
00:02:07,829 --> 00:02:09,869
part of our security and compliance

47
00:02:09,869 --> 00:02:13,740
program and then the fun begins

48
00:02:13,740 --> 00:02:16,500
so pick an Assessor get all of the gap

49
00:02:16,500 --> 00:02:18,750
assessment done remediations collect

50
00:02:18,750 --> 00:02:21,810
evidences and continuously monitor and

51
00:02:21,810 --> 00:02:24,510
manage those controls now what happens

52
00:02:24,510 --> 00:02:27,990
is this right so this is the thing that

53
00:02:27,990 --> 00:02:31,020
my team does right so every time an

54
00:02:31,020 --> 00:02:32,670
auditor comes in for those of you who

55
00:02:32,670 --> 00:02:34,800
loves compliance we have to entertain

56
00:02:34,800 --> 00:02:37,050
you guys and you know collect evidences

57
00:02:37,050 --> 00:02:40,950
for you to do the audit and but then

58
00:02:40,950 --> 00:02:42,990
going forward we still have to monitor

59
00:02:42,990 --> 00:02:44,310
and manage to make sure those controls

60
00:02:44,310 --> 00:02:48,000
still work after you leave so what is

61
00:02:48,000 --> 00:02:52,650
wrong with this picture anyone what do

62
00:02:52,650 --> 00:02:57,300
you think that's right that's one of

63
00:02:57,300 --> 00:03:00,270
them too many lines now I got focusing

64
00:03:00,270 --> 00:03:02,640
here right so doing the compliance work

65
00:03:02,640 --> 00:03:04,080
and I'm focusing here doing the security

66
00:03:04,080 --> 00:03:07,620
work nobody wants to be those guys to be

67
00:03:07,620 --> 00:03:09,480
honest there's just too much going on

68
00:03:09,480 --> 00:03:11,640
too overwhelming too much data

69
00:03:11,640 --> 00:03:14,730
too much repetitive work and it's just

70
00:03:14,730 --> 00:03:19,350
not fun so what can we do to make this

71
00:03:19,350 --> 00:03:21,510
better right so we're we're in cloud

72
00:03:21,510 --> 00:03:23,670
where everything is software-defined

73
00:03:23,670 --> 00:03:25,350
there's API for everything there's got

74
00:03:25,350 --> 00:03:27,390
to be a better way so here's what I

75
00:03:27,390 --> 00:03:31,290
asked myself and my folks and say well a

76
00:03:31,290 --> 00:03:33,030
couple questions all right all right

77
00:03:33,030 --> 00:03:34,740
number one is I really don't need more

78
00:03:34,740 --> 00:03:37,890
controls I already have enough now what

79
00:03:37,890 --> 00:03:41,850
can I do to prove to auditors and to

80
00:03:41,850 --> 00:03:44,460
ourselves and the executive teams and

81
00:03:44,460 --> 00:03:47,250
our customers that what we have that we

82
00:03:47,250 --> 00:03:49,230
can effectively manage and prove that

83
00:03:49,230 --> 00:03:51,600
they're working and secondly you know

84
00:03:51,600 --> 00:03:54,600
how can I make decisions all my

85
00:03:54,600 --> 00:03:56,880
day-to-day operations for security that

86
00:03:56,880 --> 00:03:59,040
I'm making those decisions with full

87
00:03:59,040 --> 00:04:01,770
visibility and full confidence right if

88
00:04:01,770 --> 00:04:03,780
I'm blocking an IP for example how do I

89
00:04:03,780 --> 00:04:06,330
know that I'm doing the right things if

90
00:04:06,330 --> 00:04:09,300
I'm going after a vulnerability how do I

91
00:04:09,300 --> 00:04:12,150
know that that is the time that I should

92
00:04:12,150 --> 00:04:13,650
be spending right now right at this

93
00:04:13,650 --> 00:04:15,240
moment to go after that

94
00:04:15,240 --> 00:04:17,970
so is this possible is this a hundred

95
00:04:17,970 --> 00:04:21,089
percent visibility to drive these goals

96
00:04:21,089 --> 00:04:24,930
possible so what I'll do is I'll walk

97
00:04:24,930 --> 00:04:26,940
out a little bit of our journey of how

98
00:04:26,940 --> 00:04:27,520
we do this

99
00:04:27,520 --> 00:04:29,340
how do we automate this with code and

100
00:04:29,340 --> 00:04:32,919
with automation and data so the idea is

101
00:04:32,919 --> 00:04:35,830
we want to have data driven compliance

102
00:04:35,830 --> 00:04:38,710
and data driven security using code with

103
00:04:38,710 --> 00:04:40,509
these steps with automation now with

104
00:04:40,509 --> 00:04:42,370
people now with an army of people who

105
00:04:42,370 --> 00:04:45,909
just don't like doing what I do so these

106
00:04:45,909 --> 00:04:48,849
are the things that we've done and we

107
00:04:48,849 --> 00:04:50,110
build this into a product at the end

108
00:04:50,110 --> 00:04:51,490
I'll talk a little bit more about that

109
00:04:51,490 --> 00:04:53,530
but these are fundamentally the things

110
00:04:53,530 --> 00:04:54,759
that we've done to achieve that number

111
00:04:54,759 --> 00:04:57,970
one we say you know everything in the

112
00:04:57,970 --> 00:04:59,919
cloud is software-defined already it's

113
00:04:59,919 --> 00:05:02,530
got API is is represented by you know

114
00:05:02,530 --> 00:05:04,419
JSON objects essentially and you can

115
00:05:04,419 --> 00:05:06,310
call the api's for those now can we do

116
00:05:06,310 --> 00:05:08,500
the same for compliance frameworks how

117
00:05:08,500 --> 00:05:10,270
about we turn the compliance frameworks

118
00:05:10,270 --> 00:05:12,460
into a JSON object now what about

119
00:05:12,460 --> 00:05:14,500
policies and procedures the return

120
00:05:14,500 --> 00:05:17,199
documentation is can we codify those as

121
00:05:17,199 --> 00:05:19,690
well and write them a markdown and can

122
00:05:19,690 --> 00:05:22,539
connect them and build them together as

123
00:05:22,539 --> 00:05:24,789
a code repository or code package and

124
00:05:24,789 --> 00:05:27,400
the third step is can we aggregate data

125
00:05:27,400 --> 00:05:30,370
from everywhere right so again this is a

126
00:05:30,370 --> 00:05:33,370
data-driven type of compliance effort so

127
00:05:33,370 --> 00:05:35,110
we want to collect data from everywhere

128
00:05:35,110 --> 00:05:37,810
not just the infrastructure but really

129
00:05:37,810 --> 00:05:39,159
everywhere that data that we can collect

130
00:05:39,159 --> 00:05:42,909
into one single source of truth and with

131
00:05:42,909 --> 00:05:45,550
that data then we can write queries to

132
00:05:45,550 --> 00:05:48,819
generate evidences for compliance now

133
00:05:48,819 --> 00:05:51,909
this is similar to you how log

134
00:05:51,909 --> 00:05:54,279
aggregation works or ISOs plunk and sumo

135
00:05:54,279 --> 00:05:57,909
logic and the presentation previously

136
00:05:57,909 --> 00:06:00,610
now if we can aggregate logs and maybe

137
00:06:00,610 --> 00:06:02,349
we can aggregate asset data

138
00:06:02,349 --> 00:06:04,210
configuration data in a similar way that

139
00:06:04,210 --> 00:06:06,729
we can query it and have one single

140
00:06:06,729 --> 00:06:10,029
place that we can gather evidence by

141
00:06:10,029 --> 00:06:12,130
mapping those to the compliance

142
00:06:12,130 --> 00:06:14,139
requirements so I'll show you how each

143
00:06:14,139 --> 00:06:18,699
one of these works so here are a couple

144
00:06:18,699 --> 00:06:21,310
of examples of our internal compliance

145
00:06:21,310 --> 00:06:23,349
efforts one is HIPAA and the other

146
00:06:23,349 --> 00:06:25,120
example I'll show is how it was so this

147
00:06:25,120 --> 00:06:28,240
is a JSON representation of a compliant

148
00:06:28,240 --> 00:06:30,699
standard it's aptly quite 3/4 is it's

149
00:06:30,699 --> 00:06:32,800
got the name the standard web version

150
00:06:32,800 --> 00:06:36,099
that is where you have the more details

151
00:06:36,099 --> 00:06:37,810
about that standard and these are just

152
00:06:37,810 --> 00:06:41,050
some metadata the the real

153
00:06:41,050 --> 00:06:43,539
value of this json representation is the

154
00:06:43,539 --> 00:06:45,220
actual requirement in different sections

155
00:06:45,220 --> 00:06:47,080
so in this case what you see here is

156
00:06:47,080 --> 00:06:48,849
just an array of different sections and

157
00:06:48,849 --> 00:06:50,650
the first section is animus trait of

158
00:06:50,650 --> 00:06:52,599
safeguards for HIPAA and within that

159
00:06:52,599 --> 00:06:54,190
it's got an array of requirements and

160
00:06:54,190 --> 00:06:57,310
each one has these you know two or three

161
00:06:57,310 --> 00:06:58,870
basic things it's got a reference number

162
00:06:58,870 --> 00:07:02,020
that points to that requirement and a

163
00:07:02,020 --> 00:07:04,180
title and a summary of that requirement

164
00:07:04,180 --> 00:07:06,960
itself so this is a exact reference

165
00:07:06,960 --> 00:07:09,430
representation of what help assess right

166
00:07:09,430 --> 00:07:12,870
so what the regular regulation says

167
00:07:12,870 --> 00:07:15,370
similarly you can do the same for say

168
00:07:15,370 --> 00:07:17,229
sock to write I think you know many

169
00:07:17,229 --> 00:07:20,319
organizations are sock to certified

170
00:07:20,319 --> 00:07:21,849
we're going after that right it's kind

171
00:07:21,849 --> 00:07:24,639
of like the ghost standard in security

172
00:07:24,639 --> 00:07:27,849
compliance auditing you can do the same

173
00:07:27,849 --> 00:07:30,099
thing and represent these controls in

174
00:07:30,099 --> 00:07:31,720
different domains in the very similar

175
00:07:31,720 --> 00:07:33,849
JSON structure now you see that here the

176
00:07:33,849 --> 00:07:35,229
only difference between this one and the

177
00:07:35,229 --> 00:07:37,449
previous one is that instead of sections

178
00:07:37,449 --> 00:07:39,280
and requirements we have domains and

179
00:07:39,280 --> 00:07:41,259
controls and you know in these sort of

180
00:07:41,259 --> 00:07:45,880
arrayed JSON representation and it also

181
00:07:45,880 --> 00:07:47,469
has each one of those has a reference

182
00:07:47,469 --> 00:07:49,780
number which will be later used to map

183
00:07:49,780 --> 00:07:53,620
to the policies and the evidence being

184
00:07:53,620 --> 00:07:55,659
collected so that's step one right so we

185
00:07:55,659 --> 00:07:57,909
have the frameworks defining JSON and

186
00:07:57,909 --> 00:07:58,990
keep in mind you can do this for

187
00:07:58,990 --> 00:08:00,789
anything you can do the same thing for

188
00:08:00,789 --> 00:08:03,250
NIST you can do the same thing for ISO

189
00:08:03,250 --> 00:08:07,150
and PCI and so on so forth the structure

190
00:08:07,150 --> 00:08:10,060
will remain the same now we have our

191
00:08:10,060 --> 00:08:12,490
policies and procedures this is from now

192
00:08:12,490 --> 00:08:16,569
returning markdown and out of your

193
00:08:16,569 --> 00:08:18,789
organization when was the last time

194
00:08:18,789 --> 00:08:20,889
you've read the whole damn thing your

195
00:08:20,889 --> 00:08:24,509
corporate policies and procedures

196
00:08:24,509 --> 00:08:27,430
probably never other than the person who

197
00:08:27,430 --> 00:08:28,840
wrote it to begin with you probably

198
00:08:28,840 --> 00:08:31,029
don't read it now so the way that we've

199
00:08:31,029 --> 00:08:33,490
structured this is we say well let's

200
00:08:33,490 --> 00:08:35,979
make this more like code okay so we're

201
00:08:35,979 --> 00:08:37,450
gonna write these documents in markdown

202
00:08:37,450 --> 00:08:41,559
and rather than in long to tuner page

203
00:08:41,559 --> 00:08:43,659
war documents well there anyways are

204
00:08:43,659 --> 00:08:46,480
maybe similar but the individual parts

205
00:08:46,480 --> 00:08:48,700
that are relevant to anybody's role is a

206
00:08:48,700 --> 00:08:50,800
lot simpler and smaller and easier to

207
00:08:50,800 --> 00:08:53,140
manage and update and we link them

208
00:08:53,140 --> 00:08:54,820
together like you know how you

209
00:08:54,820 --> 00:08:56,320
Michael services together I so they're

210
00:08:56,320 --> 00:08:58,810
loosely coupled and we do the same thing

211
00:08:58,810 --> 00:09:01,360
with the procedures and the policies and

212
00:09:01,360 --> 00:09:02,980
here's a configuration that you see here

213
00:09:02,980 --> 00:09:06,280
you as one example a policy that is says

214
00:09:06,280 --> 00:09:08,170
roles and responsibilities and training

215
00:09:08,170 --> 00:09:10,540
that's the overall policy and there are

216
00:09:10,540 --> 00:09:12,280
individual procedures in here that talks

217
00:09:12,280 --> 00:09:14,050
about a row assignment or training the

218
00:09:14,050 --> 00:09:16,450
awareness HIPPA communications and so on

219
00:09:16,450 --> 00:09:19,360
so forth and that is combined and each

220
00:09:19,360 --> 00:09:21,280
one of those is a very small markdown

221
00:09:21,280 --> 00:09:25,270
file by itself now that makes version II

222
00:09:25,270 --> 00:09:27,850
and so on a lot easier and we check them

223
00:09:27,850 --> 00:09:31,330
into you source code as we do other code

224
00:09:31,330 --> 00:09:33,820
that we develop and the review process

225
00:09:33,820 --> 00:09:37,000
of updating these policies are just PRS

226
00:09:37,000 --> 00:09:39,220
right so if you want to gather feedback

227
00:09:39,220 --> 00:09:41,050
or if you want to make sure people

228
00:09:41,050 --> 00:09:43,810
review these changes and the diffs are

229
00:09:43,810 --> 00:09:44,980
very nice then you can see the

230
00:09:44,980 --> 00:09:46,810
differences between one version another

231
00:09:46,810 --> 00:09:51,760
they're just PRS you can then publish

232
00:09:51,760 --> 00:09:54,940
them into you HTML site and this is our

233
00:09:54,940 --> 00:09:58,660
policy for life omics security we are

234
00:09:58,660 --> 00:10:00,160
very open and transparent about the

235
00:10:00,160 --> 00:10:02,950
things that we do down to the actual

236
00:10:02,950 --> 00:10:06,580
procedures that we that we we operate on

237
00:10:06,580 --> 00:10:09,280
and there are all public and you can or

238
00:10:09,280 --> 00:10:11,560
maybe you don't have to do it but the

239
00:10:11,560 --> 00:10:13,930
idea is once that you have these in

240
00:10:13,930 --> 00:10:15,040
markdown you can turn them into any

241
00:10:15,040 --> 00:10:17,860
format right you can turn them into HTML

242
00:10:17,860 --> 00:10:19,450
this is using make Docs and build the

243
00:10:19,450 --> 00:10:22,390
site or you can turn them into PDF or

244
00:10:22,390 --> 00:10:26,080
Word document and whatever you like so

245
00:10:26,080 --> 00:10:27,490
those are the policies and procedures

246
00:10:27,490 --> 00:10:29,830
and the third step is the data this is

247
00:10:29,830 --> 00:10:31,630
the fun part you know we have a lot of

248
00:10:31,630 --> 00:10:33,610
data right so those all those controls

249
00:10:33,610 --> 00:10:34,900
and not just the infrastructure

250
00:10:34,900 --> 00:10:36,880
themselves the configurations of those

251
00:10:36,880 --> 00:10:39,760
resources and the controls your security

252
00:10:39,760 --> 00:10:41,470
controls in place and other type of

253
00:10:41,470 --> 00:10:44,200
operating data in place needs to be all

254
00:10:44,200 --> 00:10:46,300
aggregated so that we can collect

255
00:10:46,300 --> 00:10:48,280
evidence from one single place right so

256
00:10:48,280 --> 00:10:50,290
without going to 20 or 30 different

257
00:10:50,290 --> 00:10:53,080
places every time there's an audit so

258
00:10:53,080 --> 00:10:54,580
this is what we do and here's some of

259
00:10:54,580 --> 00:10:56,920
the data sources that you can see the

260
00:10:56,920 --> 00:10:59,790
cloud service providers there's AWS or

261
00:10:59,790 --> 00:11:03,490
GCP and you know we use primarily AWS

262
00:11:03,490 --> 00:11:04,870
but there's still a lot of things in

263
00:11:04,870 --> 00:11:07,600
across these other places identity

264
00:11:07,600 --> 00:11:08,680
providers right so

265
00:11:08,680 --> 00:11:10,660
we happen to be all over the place a

266
00:11:10,660 --> 00:11:12,190
little bit right so we use octave for

267
00:11:12,190 --> 00:11:15,339
single sign-on for all of our sam'l

268
00:11:15,339 --> 00:11:18,520
applications but back office we we use

269
00:11:18,520 --> 00:11:21,520
office 365 which is you know add your ad

270
00:11:21,520 --> 00:11:23,950
managed and we have a little bit a few

271
00:11:23,950 --> 00:11:26,170
users who prefer Google Docs and so we

272
00:11:26,170 --> 00:11:28,810
have a set of G suite users as well and

273
00:11:28,810 --> 00:11:30,700
we also have a bunch of data in Co repos

274
00:11:30,700 --> 00:11:32,950
across you know github or our public

275
00:11:32,950 --> 00:11:34,630
open source repose and bitbucket

276
00:11:34,630 --> 00:11:38,290
borrowing eternal source repos and all

277
00:11:38,290 --> 00:11:39,430
these other things that you can see

278
00:11:39,430 --> 00:11:41,800
these are all pretty common names and

279
00:11:41,800 --> 00:11:43,779
you know sneak and Carbon blog and so on

280
00:11:43,779 --> 00:11:46,240
and so forth now all these are sources

281
00:11:46,240 --> 00:11:49,300
of data about your environment right and

282
00:11:49,300 --> 00:11:52,870
every every single provider holds a

283
00:11:52,870 --> 00:11:55,480
piece of the pie that describes of your

284
00:11:55,480 --> 00:11:58,450
operation and your security program now

285
00:11:58,450 --> 00:12:00,040
the idea is we can aggregate them

286
00:12:00,040 --> 00:12:02,740
together and build a common data model

287
00:12:02,740 --> 00:12:05,770
across the board so that it doesn't

288
00:12:05,770 --> 00:12:07,959
regardless of the source of the provider

289
00:12:07,959 --> 00:12:11,680
you can now have one place to query your

290
00:12:11,680 --> 00:12:13,620
information and provide that to auditors

291
00:12:13,620 --> 00:12:15,670
now what was the last time you had to

292
00:12:15,670 --> 00:12:17,160
explain to an auditor what is a

293
00:12:17,160 --> 00:12:21,040
kubernetes cluster and when was the last

294
00:12:21,040 --> 00:12:24,000
time you were successful with that

295
00:12:24,000 --> 00:12:28,029
probably never now with a higher level

296
00:12:28,029 --> 00:12:30,100
classification where I shouldn't say

297
00:12:30,100 --> 00:12:33,670
classification but a a schema for for

298
00:12:33,670 --> 00:12:35,230
building this data model which is what

299
00:12:35,230 --> 00:12:37,690
what this is now we can represent data

300
00:12:37,690 --> 00:12:39,520
in your environment or in our

301
00:12:39,520 --> 00:12:42,339
environment in a more generic and

302
00:12:42,339 --> 00:12:44,980
understandable way for both the security

303
00:12:44,980 --> 00:12:47,529
folks and the compliance people and this

304
00:12:47,529 --> 00:12:49,630
allows coring to be a lot more

305
00:12:49,630 --> 00:12:50,830
straightforward as well so you can

306
00:12:50,830 --> 00:12:52,750
quarry data at a higher level you can

307
00:12:52,750 --> 00:12:55,510
say hey find me all the data stores that

308
00:12:55,510 --> 00:12:56,860
are encrypted were not encrypted

309
00:12:56,860 --> 00:12:58,959
regardless of what that might be

310
00:12:58,959 --> 00:13:01,990
it may be an EBS volume or in s3 bucket

311
00:13:01,990 --> 00:13:05,230
or an RDS instance or cluster or

312
00:13:05,230 --> 00:13:06,880
dynamodb table whatever that might be

313
00:13:06,880 --> 00:13:08,829
you can just say give me all the data

314
00:13:08,829 --> 00:13:10,980
stores and show me if they're encrypted

315
00:13:10,980 --> 00:13:15,399
it's just a quick example here you go

316
00:13:15,399 --> 00:13:19,480
chlorine we Adly build a query language

317
00:13:19,480 --> 00:13:22,180
of our own that

318
00:13:22,180 --> 00:13:24,610
someone resembles natural language to

319
00:13:24,610 --> 00:13:26,110
some extent it's not that natural angry

320
00:13:26,110 --> 00:13:28,690
but it's very intuitive when you read it

321
00:13:28,690 --> 00:13:32,170
so here's a query that says let me take

322
00:13:32,170 --> 00:13:33,850
a step back where I sew so the idea is

323
00:13:33,850 --> 00:13:37,029
this the idea is once you have the data

324
00:13:37,029 --> 00:13:39,279
now you wanna you want to gain insight

325
00:13:39,279 --> 00:13:41,770
about that data right what questions can

326
00:13:41,770 --> 00:13:44,620
you ask of your data and get answers now

327
00:13:44,620 --> 00:13:47,920
can you operate security your security

328
00:13:47,920 --> 00:13:49,540
operations and your compliance program

329
00:13:49,540 --> 00:13:52,480
in such a way that's almost Google like

330
00:13:52,480 --> 00:13:54,790
or you know asking questions to elects

331
00:13:54,790 --> 00:13:57,010
that you know Kent can it can it

332
00:13:57,010 --> 00:13:58,540
possibly be that simple

333
00:13:58,540 --> 00:14:00,459
and this is our goal right so in order

334
00:14:00,459 --> 00:14:02,410
to build this so we build this core

335
00:14:02,410 --> 00:14:05,350
language to answer these questions now

336
00:14:05,350 --> 00:14:06,550
one of these are just some questions

337
00:14:06,550 --> 00:14:08,589
example questions right and and the core

338
00:14:08,589 --> 00:14:10,360
language itself is flexible enough you

339
00:14:10,360 --> 00:14:12,640
can ask anything now the first one says

340
00:14:12,640 --> 00:14:13,959
you know what is the inventory of my

341
00:14:13,959 --> 00:14:16,000
sensitive data store now assuming that

342
00:14:16,000 --> 00:14:17,830
you've tagged them correctly you can

343
00:14:17,830 --> 00:14:20,020
just do this you can say find in a store

344
00:14:20,020 --> 00:14:22,209
with classification that is sensitive or

345
00:14:22,209 --> 00:14:23,770
confidential we're critical or however

346
00:14:23,770 --> 00:14:25,720
you classify your data now whatever that

347
00:14:25,720 --> 00:14:27,730
label is that you've tagged your data

348
00:14:27,730 --> 00:14:31,150
store with again like I described the

349
00:14:31,150 --> 00:14:33,160
data store is a more generic higher

350
00:14:33,160 --> 00:14:35,140
level concept as the data is being

351
00:14:35,140 --> 00:14:38,770
aggregated those resources are labeled

352
00:14:38,770 --> 00:14:41,650
data store like an s3 bucket or a

353
00:14:41,650 --> 00:14:43,900
dynamodb table and so and so forth and

354
00:14:43,900 --> 00:14:46,870
that single Cori can find all them

355
00:14:46,870 --> 00:14:49,930
across the board here are some other

356
00:14:49,930 --> 00:14:51,940
examples are my end-user workstations

357
00:14:51,940 --> 00:14:53,589
protected by host-based firewalls right

358
00:14:53,589 --> 00:14:55,420
this what this does is to find some

359
00:14:55,420 --> 00:14:57,220
relationships now one thing that I

360
00:14:57,220 --> 00:14:59,380
didn't quite mention is that as we're

361
00:14:59,380 --> 00:15:01,209
building and aggregating that data and

362
00:15:01,209 --> 00:15:03,459
not only are we assigning them a higher

363
00:15:03,459 --> 00:15:05,920
level data model but we also analyze the

364
00:15:05,920 --> 00:15:07,740
relationships based on the configuration

365
00:15:07,740 --> 00:15:11,320
so that there are connections that are

366
00:15:11,320 --> 00:15:12,910
built behind the scenes is actually a

367
00:15:12,910 --> 00:15:15,610
graph that we've built to mapped out

368
00:15:15,610 --> 00:15:17,079
those relationships in the context

369
00:15:17,079 --> 00:15:19,120
across that data so there's here's an

370
00:15:19,120 --> 00:15:21,430
example of where that relationships

371
00:15:21,430 --> 00:15:23,800
comes into play so what we can do is we

372
00:15:23,800 --> 00:15:26,950
can say hey find a hos agent where the

373
00:15:26,950 --> 00:15:30,190
property that says farmer is on and this

374
00:15:30,190 --> 00:15:33,310
host agent could be any hose agent I so

375
00:15:33,310 --> 00:15:34,839
keep a carbon block it could be you know

376
00:15:34,839 --> 00:15:36,250
Oh Escorial

377
00:15:36,250 --> 00:15:38,350
something else that identifies that the

378
00:15:38,350 --> 00:15:41,530
host agent or the far wall on the house

379
00:15:41,530 --> 00:15:44,770
is on and and the host agent may be

380
00:15:44,770 --> 00:15:46,780
protecting or monitoring or managing the

381
00:15:46,780 --> 00:15:48,430
device right so the end user device and

382
00:15:48,430 --> 00:15:50,980
return some information about it now

383
00:15:50,980 --> 00:15:53,500
this can be further extended if you look

384
00:15:53,500 --> 00:15:55,510
at this score itself this can be further

385
00:15:55,510 --> 00:15:57,730
extended to find the owner of that

386
00:15:57,730 --> 00:15:59,590
resource you can find a user or the

387
00:15:59,590 --> 00:16:00,160
person

388
00:16:00,160 --> 00:16:01,840
assuming that relationship is already

389
00:16:01,840 --> 00:16:05,560
built in a graph so that's the second

390
00:16:05,560 --> 00:16:08,290
example the third example is actually an

391
00:16:08,290 --> 00:16:11,140
example about a a manual security

392
00:16:11,140 --> 00:16:14,140
assessment now there are manual data

393
00:16:14,140 --> 00:16:16,750
that you we can we also aggregate into

394
00:16:16,750 --> 00:16:19,120
the same platform and source of truth

395
00:16:19,120 --> 00:16:21,610
without having to call it provider API

396
00:16:21,610 --> 00:16:23,410
because you know you can use the

397
00:16:23,410 --> 00:16:26,280
platform api's to send this data as well

398
00:16:26,280 --> 00:16:29,380
so in this example it says hey who did

399
00:16:29,380 --> 00:16:31,660
my assessment of pasteurizer is a person

400
00:16:31,660 --> 00:16:33,700
or a vendor or an organization that

401
00:16:33,700 --> 00:16:35,350
performed the assessment within the last

402
00:16:35,350 --> 00:16:38,310
year with those basic time stamps and

403
00:16:38,310 --> 00:16:41,589
give me the Assessors name what type of

404
00:16:41,589 --> 00:16:43,540
Assessor they are and and so on and so

405
00:16:43,540 --> 00:16:46,000
forth so data about that so these

406
00:16:46,000 --> 00:16:48,250
quarries can then provide evidence for

407
00:16:48,250 --> 00:16:50,350
compliance or you know just from an

408
00:16:50,350 --> 00:16:55,330
operational standpoint as well now

409
00:16:55,330 --> 00:16:59,410
another interesting part is that now

410
00:16:59,410 --> 00:17:01,540
that you have the data right you can

411
00:17:01,540 --> 00:17:04,810
just like security people there are in

412
00:17:04,810 --> 00:17:06,250
positive use cases there are also

413
00:17:06,250 --> 00:17:08,470
negative use cases where abuse cases now

414
00:17:08,470 --> 00:17:10,569
what we're doing is we've constructed

415
00:17:10,569 --> 00:17:13,480
certain quarries to look for positive

416
00:17:13,480 --> 00:17:16,540
results as well as bad or negative and

417
00:17:16,540 --> 00:17:19,089
unknown results using the same quarry

418
00:17:19,089 --> 00:17:22,420
and using the same data set so what this

419
00:17:22,420 --> 00:17:24,339
provides is a complete picture of

420
00:17:24,339 --> 00:17:26,380
compliance right so you can say you know

421
00:17:26,380 --> 00:17:29,260
if the quarry returns me data store data

422
00:17:29,260 --> 00:17:30,820
encrypted that's great but how do I know

423
00:17:30,820 --> 00:17:34,030
that is that's everything you know is

424
00:17:34,030 --> 00:17:36,250
what percentage of that yes so we can

425
00:17:36,250 --> 00:17:38,950
construct a query that says or if I mean

426
00:17:38,950 --> 00:17:40,720
all the datastore that that's classified

427
00:17:40,720 --> 00:17:43,480
as such and then finding all the data

428
00:17:43,480 --> 00:17:45,370
stores the second one this is bad we

429
00:17:45,370 --> 00:17:47,530
don't want any of that to happen that

430
00:17:47,530 --> 00:17:50,549
are in production but unclassified

431
00:17:50,549 --> 00:17:53,619
that are not labeled and then the third

432
00:17:53,619 --> 00:17:55,840
one is just just broader maybe it's

433
00:17:55,840 --> 00:17:57,100
outside a production environment that

434
00:17:57,100 --> 00:17:58,809
are unclassified we just have certain

435
00:17:58,809 --> 00:18:02,440
unknown resources or data stores out

436
00:18:02,440 --> 00:18:05,649
there so this gives you a better picture

437
00:18:05,649 --> 00:18:08,289
of compliance and from both an internal

438
00:18:08,289 --> 00:18:11,169
operation standpoint and to give a

439
00:18:11,169 --> 00:18:13,090
complete picture to the auditor right if

440
00:18:13,090 --> 00:18:15,570
you provide this data and it says look I

441
00:18:15,570 --> 00:18:19,179
gave you the results and all the results

442
00:18:19,179 --> 00:18:20,769
100% of their results come in from that

443
00:18:20,769 --> 00:18:22,720
first quarry that means I am a hundred

444
00:18:22,720 --> 00:18:26,080
percent compliant right now well what I

445
00:18:26,080 --> 00:18:28,539
can show you is then or so I found

446
00:18:28,539 --> 00:18:30,399
nothing from the second or third quarry

447
00:18:30,399 --> 00:18:32,889
so you should have complete confidence

448
00:18:32,889 --> 00:18:34,179
in the data that I'm providing you

449
00:18:34,179 --> 00:18:36,340
rather than just trusting me providing a

450
00:18:36,340 --> 00:18:38,740
set of spreadsheet and you know hoping

451
00:18:38,740 --> 00:18:42,220
that that spreadsheet is complete the

452
00:18:42,220 --> 00:18:43,480
second example is the same right so

453
00:18:43,480 --> 00:18:45,850
finding all the data stores that are

454
00:18:45,850 --> 00:18:47,889
encrypted you know with those

455
00:18:47,889 --> 00:18:51,730
classifications and then a reverse of

456
00:18:51,730 --> 00:18:53,320
that right and say find me all the ones

457
00:18:53,320 --> 00:18:54,580
that are not encrypted with those

458
00:18:54,580 --> 00:18:56,769
classifications so I can identify the

459
00:18:56,769 --> 00:19:00,730
ones that are gaps right so we use this

460
00:19:00,730 --> 00:19:03,610
to perform gap analysis in a code driven

461
00:19:03,610 --> 00:19:05,559
automated way now this quarries can run

462
00:19:05,559 --> 00:19:08,049
on a regular basis daily or however that

463
00:19:08,049 --> 00:19:11,879
they need to run to identify those gaps

464
00:19:11,909 --> 00:19:14,950
all right so the last part you complete

465
00:19:14,950 --> 00:19:19,210
the picture is then we want to map those

466
00:19:19,210 --> 00:19:21,999
to the compliance frameworks right so

467
00:19:21,999 --> 00:19:24,220
remembering the previous step that we've

468
00:19:24,220 --> 00:19:26,440
build these compliance frameworks into

469
00:19:26,440 --> 00:19:29,080
JSON to represent them so each

470
00:19:29,080 --> 00:19:30,549
requirement or each concho has a

471
00:19:30,549 --> 00:19:32,889
reference number right and we have

472
00:19:32,889 --> 00:19:35,009
policies as code now and we have

473
00:19:35,009 --> 00:19:37,509
compliance evidence as code right as

474
00:19:37,509 --> 00:19:39,429
these quarries so by doing that we can

475
00:19:39,429 --> 00:19:41,559
then connect the dots right so map them

476
00:19:41,559 --> 00:19:45,369
together the policies are in this JSON

477
00:19:45,369 --> 00:19:48,730
format JSON yamo doesn't matter and you

478
00:19:48,730 --> 00:19:51,999
can see that we use the ID of the policy

479
00:19:51,999 --> 00:19:55,240
procedure and say well which requirement

480
00:19:55,240 --> 00:19:57,100
or which compliance framework in which

481
00:19:57,100 --> 00:20:00,009
we command control does that policy

482
00:20:00,009 --> 00:20:02,980
procedure implement or which requirement

483
00:20:02,980 --> 00:20:05,740
does meet so using that structure you

484
00:20:05,740 --> 00:20:08,019
can have a one-to-many relationship and

485
00:20:08,019 --> 00:20:09,999
say this is my policy procedures and

486
00:20:09,999 --> 00:20:11,379
these are all the different compliance

487
00:20:11,379 --> 00:20:13,179
frameworks and the requirements and

488
00:20:13,179 --> 00:20:17,470
controls that this one meets same thing

489
00:20:17,470 --> 00:20:20,609
with evidence collection so here's an

490
00:20:20,609 --> 00:20:23,649
example question and says you know

491
00:20:23,649 --> 00:20:26,649
question is you know which user group or

492
00:20:26,649 --> 00:20:28,600
network or host has access to data that

493
00:20:28,600 --> 00:20:31,809
contains pH I and we write a query for

494
00:20:31,809 --> 00:20:33,570
that and then that korie's map to

495
00:20:33,570 --> 00:20:36,129
various type of compliance requirement

496
00:20:36,129 --> 00:20:37,330
so you can have a collection of dos

497
00:20:37,330 --> 00:20:39,730
right and it doesn't have to be pH I

498
00:20:39,730 --> 00:20:41,649
could be PII or something like that

499
00:20:41,649 --> 00:20:44,379
right just write the query and map them

500
00:20:44,379 --> 00:20:46,119
to the appropriate compliance

501
00:20:46,119 --> 00:20:51,190
requirements or conchos so the result of

502
00:20:51,190 --> 00:20:56,919
this is a dashboard where we can have a

503
00:20:56,919 --> 00:21:00,159
complete picture of our compliance

504
00:21:00,159 --> 00:21:04,659
posture at all these levels right so do

505
00:21:04,659 --> 00:21:06,519
we have policies and procedures map to

506
00:21:06,519 --> 00:21:09,909
these compliance requirements do I have

507
00:21:09,909 --> 00:21:13,659
evidence being collected to show the

508
00:21:13,659 --> 00:21:18,129
implementation of these controls and do

509
00:21:18,129 --> 00:21:19,990
I have continuous monitoring and gap

510
00:21:19,990 --> 00:21:23,070
analysis for these controls to

511
00:21:23,070 --> 00:21:24,669
continuously detect

512
00:21:24,669 --> 00:21:27,700
gaps and alert the security team about

513
00:21:27,700 --> 00:21:31,929
these gaps so that's the dashboard for

514
00:21:31,929 --> 00:21:33,369
components that you can see all these in

515
00:21:33,369 --> 00:21:34,659
one shot and this particular one is

516
00:21:34,659 --> 00:21:36,999
HIPAA and again everything is just JSON

517
00:21:36,999 --> 00:21:38,529
right so you can replace this with any

518
00:21:38,529 --> 00:21:41,409
framework and any JSON and you will have

519
00:21:41,409 --> 00:21:45,039
a very similar view for those this is

520
00:21:45,039 --> 00:21:47,220
the end result the end result of our

521
00:21:47,220 --> 00:21:50,259
operations is now greatly simplified we

522
00:21:50,259 --> 00:21:51,940
don't have that many dots anymore or

523
00:21:51,940 --> 00:21:53,409
definite lines that we have to connect

524
00:21:53,409 --> 00:21:56,409
we have one aggregated system one

525
00:21:56,409 --> 00:21:58,480
aggregated platform where we just use

526
00:21:58,480 --> 00:22:00,159
automation to collect the data and we

527
00:22:00,159 --> 00:22:02,019
just have folks write queries and map

528
00:22:02,019 --> 00:22:04,359
them to it and do this once and maybe

529
00:22:04,359 --> 00:22:06,340
continue to tweak it a little bit but

530
00:22:06,340 --> 00:22:08,440
it's a it's a much simpler much more

531
00:22:08,440 --> 00:22:10,899
efficient effort and we gain continuous

532
00:22:10,899 --> 00:22:15,070
visibility to this as well now before I

533
00:22:15,070 --> 00:22:16,090
finish I

534
00:22:16,090 --> 00:22:18,370
a touch on this right so I talked a lot

535
00:22:18,370 --> 00:22:20,289
about compliance but this is not just

536
00:22:20,289 --> 00:22:23,080
compliance and there are a lot of use

537
00:22:23,080 --> 00:22:26,409
cases now we have this data then imagine

538
00:22:26,409 --> 00:22:28,059
what else you can do with this data

539
00:22:28,059 --> 00:22:31,299
what else you can do to gain asset or to

540
00:22:31,299 --> 00:22:34,659
gain insight into that data itself using

541
00:22:34,659 --> 00:22:37,960
the graph data model and a quarries on

542
00:22:37,960 --> 00:22:39,820
top of that we can do all those sorts of

543
00:22:39,820 --> 00:22:41,890
things all these things are possible and

544
00:22:41,890 --> 00:22:42,940
now I'll just show you a couple examples

545
00:22:42,940 --> 00:22:44,919
using those quarries and Cedars graphs

546
00:22:44,919 --> 00:22:49,480
and this one is a analysis of our a3

547
00:22:49,480 --> 00:22:51,490
environment it says a family already has

548
00:22:51,490 --> 00:22:52,899
three buckets right as a district or

549
00:22:52,899 --> 00:22:56,260
itself and that allows access to

550
00:22:56,260 --> 00:22:59,080
somebody and where the originating

551
00:22:59,080 --> 00:23:01,090
account name of the bucket is different

552
00:23:01,090 --> 00:23:05,260
than the principal or person that the

553
00:23:05,260 --> 00:23:07,450
access is granted to so this effectively

554
00:23:07,450 --> 00:23:11,320
shows me access to three buckets that

555
00:23:11,320 --> 00:23:13,360
are now withing the same account and

556
00:23:13,360 --> 00:23:15,700
here's an example of single single

557
00:23:15,700 --> 00:23:18,700
sign-on access between an octa user and

558
00:23:18,700 --> 00:23:22,419
IM role that that is returned by the

559
00:23:22,419 --> 00:23:23,909
query

560
00:23:23,909 --> 00:23:27,720
another example here shows you the

561
00:23:27,720 --> 00:23:30,010
vulnerability status or vehicle repo

562
00:23:30,010 --> 00:23:31,779
right if you have vulnerabilities from

563
00:23:31,779 --> 00:23:34,330
sneak or from you know very code or from

564
00:23:34,330 --> 00:23:36,909
somebody else and you can quickly

565
00:23:36,909 --> 00:23:39,220
determine by having this relationships

566
00:23:39,220 --> 00:23:42,220
build and show you now who which

567
00:23:42,220 --> 00:23:44,289
developer most likely contributed to

568
00:23:44,289 --> 00:23:47,169
that vulnerability now using the time

569
00:23:47,169 --> 00:23:49,750
stamp and correlate that to the recent

570
00:23:49,750 --> 00:23:52,630
PRS made by the developers you can kind

571
00:23:52,630 --> 00:23:55,419
of extend that correlation almost

572
00:23:55,419 --> 00:23:57,669
end-to-end so those are some of the

573
00:23:57,669 --> 00:23:59,080
examples right so these quarries can

574
00:23:59,080 --> 00:24:01,090
then be turning to alerts right so we

575
00:24:01,090 --> 00:24:03,610
have an alert dashboard that you can

576
00:24:03,610 --> 00:24:06,039
trigger emails or slack messages or JIRA

577
00:24:06,039 --> 00:24:08,860
issues and so on to be created and this

578
00:24:08,860 --> 00:24:10,210
is the product that we end up creating

579
00:24:10,210 --> 00:24:13,539
Jupiter one to show you this and last

580
00:24:13,539 --> 00:24:15,190
but not least is you can actually build

581
00:24:15,190 --> 00:24:17,500
metrics and charts and also using

582
00:24:17,500 --> 00:24:19,270
quarries so these are just some of the

583
00:24:19,270 --> 00:24:22,179
examples of use cases of what you can do

584
00:24:22,179 --> 00:24:25,750
with with that aggregated data and a

585
00:24:25,750 --> 00:24:28,940
graph and a quarries on top of that

586
00:24:28,940 --> 00:24:32,850
to us this has become our internal

587
00:24:32,850 --> 00:24:34,139
knowledge base for security and

588
00:24:34,139 --> 00:24:35,700
compliance right not just to generate

589
00:24:35,700 --> 00:24:38,279
compliance evidences in a code and

590
00:24:38,279 --> 00:24:40,860
automation friendly way in cloud native

591
00:24:40,860 --> 00:24:43,259
way but also it has become the core of

592
00:24:43,259 --> 00:24:45,629
our entire security program where we can

593
00:24:45,629 --> 00:24:46,799
just come in here and ask questions

594
00:24:46,799 --> 00:24:48,419
right if we need to find something about

595
00:24:48,419 --> 00:24:50,519
our environment whether is part of an

596
00:24:50,519 --> 00:24:53,039
incident response exercise or just part

597
00:24:53,039 --> 00:24:55,470
of a continuous configuration hygiene

598
00:24:55,470 --> 00:24:59,460
program now this is what we we have been

599
00:24:59,460 --> 00:25:02,190
using for ourselves this allows us to

600
00:25:02,190 --> 00:25:06,049
take actions with confidence much faster

601
00:25:06,049 --> 00:25:09,509
so that's it and I'll be around to

602
00:25:09,509 --> 00:25:11,970
answer questions or if you'd like to see

603
00:25:11,970 --> 00:25:13,860
a demo of the actual product I'd love to

604
00:25:13,860 --> 00:25:16,470
do that for you and my colleague David

605
00:25:16,470 --> 00:25:18,379
they're wearing the Tupelo one t-shirt

606
00:25:18,379 --> 00:25:20,639
is gonna be around as well if you guys

607
00:25:20,639 --> 00:25:23,700
have additional questions for us do we

608
00:25:23,700 --> 00:25:25,799
have time for questions yeah we do maybe

609
00:25:25,799 --> 00:25:29,519
one or two all right any questions you

610
00:25:29,519 --> 00:25:33,059
didn't get it ask one earlier sorry I

611
00:25:33,059 --> 00:25:35,220
think it's a great system I am part

612
00:25:35,220 --> 00:25:38,999
under couplings a lot of value one

613
00:25:38,999 --> 00:25:42,679
question I had we have put a middleman

614
00:25:42,679 --> 00:25:46,409
between the reality and auditor auditor

615
00:25:46,409 --> 00:25:48,299
is in stuck with a real system they can

616
00:25:48,299 --> 00:25:50,999
look into this is a man it all the

617
00:25:50,999 --> 00:25:54,509
answers but will the government auditor

618
00:25:54,509 --> 00:25:56,700
accept these but they will still insist

619
00:25:56,700 --> 00:25:58,919
on going to the actual system and

620
00:25:58,919 --> 00:26:01,619
finding out what is your experience yeah

621
00:26:01,619 --> 00:26:03,480
it's it's a level of trust right so you

622
00:26:03,480 --> 00:26:04,950
have to build that level of trust with

623
00:26:04,950 --> 00:26:07,470
the auditors and of course you have to

624
00:26:07,470 --> 00:26:10,110
educate the auditors one so keep in mind

625
00:26:10,110 --> 00:26:11,909
you have to educate them once this how

626
00:26:11,909 --> 00:26:14,249
this works and show them how the data is

627
00:26:14,249 --> 00:26:16,350
collected and how the core is run and

628
00:26:16,350 --> 00:26:19,830
this actually brings additional trust to

629
00:26:19,830 --> 00:26:21,990
the auditors so that instead of the

630
00:26:21,990 --> 00:26:23,460
auditor saying oh you're giving me a

631
00:26:23,460 --> 00:26:26,100
spreadsheet that I hope came from the

632
00:26:26,100 --> 00:26:28,769
source and that I hope is the complete

633
00:26:28,769 --> 00:26:31,110
picture right you can kind of see that

634
00:26:31,110 --> 00:26:33,600
the queries represent different aspect

635
00:26:33,600 --> 00:26:35,820
of that data and you can see that you

636
00:26:35,820 --> 00:26:37,169
know the system collects that data

637
00:26:37,169 --> 00:26:39,330
automatically without human intervention

638
00:26:39,330 --> 00:26:42,390
so as a result we actually build

639
00:26:42,390 --> 00:26:47,130
a stronger trust with our auditors with

640
00:26:47,130 --> 00:26:48,720
the data that we have and we can show

641
00:26:48,720 --> 00:27:00,750
them any other question yes when you're

642
00:27:00,750 --> 00:27:03,029
building that trust is there an auditor

643
00:27:03,029 --> 00:27:06,120
there verifying whatever the process is

644
00:27:06,120 --> 00:27:08,190
that you guys are automating to verify

645
00:27:08,190 --> 00:27:10,350
that it is correct or how do you get

646
00:27:10,350 --> 00:27:13,260
that trust yes

647
00:27:13,260 --> 00:27:15,600
so the auditors sometimes do ask that

648
00:27:15,600 --> 00:27:17,940
those type of questions so we show them

649
00:27:17,940 --> 00:27:21,269
how the system works and in some cases

650
00:27:21,269 --> 00:27:22,679
it depends on the auditor right so some

651
00:27:22,679 --> 00:27:24,210
sometimes the auditors are comfortable

652
00:27:24,210 --> 00:27:26,429
with technologies and sometimes you just

653
00:27:26,429 --> 00:27:28,440
show them a couple examples and say hey

654
00:27:28,440 --> 00:27:31,529
this is what this looks like by a direct

655
00:27:31,529 --> 00:27:34,440
Cori to the AWS API or this is what this

656
00:27:34,440 --> 00:27:36,809
looked like in the AWS console and this

657
00:27:36,809 --> 00:27:38,700
is the equivalent of what this looks

658
00:27:38,700 --> 00:27:41,370
like as the result of the query right

659
00:27:41,370 --> 00:27:42,929
you give them a couple of these examples

660
00:27:42,929 --> 00:27:44,490
and they see though yeah they're in sync

661
00:27:44,490 --> 00:27:46,799
and they're the same then they start

662
00:27:46,799 --> 00:27:48,750
your trust two Coreys and the aggregated

663
00:27:48,750 --> 00:27:50,549
data right and it's the same concept

664
00:27:50,549 --> 00:27:52,950
right do you do auditors trust outputs

665
00:27:52,950 --> 00:27:55,799
and so on from Splunk you know it's just

666
00:27:55,799 --> 00:27:57,840
a level of understanding that you have

667
00:27:57,840 --> 00:28:02,190
to build up to one or while we get John

668
00:28:02,190 --> 00:28:09,240
up to now all right another yes there is

669
00:28:09,240 --> 00:28:13,639
one Dustin Thank You Justin

670
00:28:15,820 --> 00:28:17,679
there are some other efforts around

671
00:28:17,679 --> 00:28:21,249
trying to standardize like a scowl which

672
00:28:21,249 --> 00:28:25,919
vacu me that if you kind of noted how to

673
00:28:25,919 --> 00:28:30,999
integrate these kinds of configuration

674
00:28:30,999 --> 00:28:34,450
descriptions what you're doing I mean I

675
00:28:34,450 --> 00:28:36,899
I it looks quite nice and simpler

676
00:28:36,899 --> 00:28:41,850
whereas a scowl is kind of xml-based

677
00:28:41,850 --> 00:28:45,789
so I am not quite following a question

678
00:28:45,789 --> 00:28:49,059
are you asking about other similar kind

679
00:28:49,059 --> 00:28:51,999
of asset aggregation solutions other

680
00:28:51,999 --> 00:28:54,899
sort of formalized policy description

681
00:28:54,899 --> 00:28:57,899
building

682
00:28:59,759 --> 00:29:02,200
maybe I'll follow up with you offline on

683
00:29:02,200 --> 00:29:03,580
that I I wasn't quite following the

684
00:29:03,580 --> 00:29:04,479
question I'm sorry about that

685
00:29:04,479 --> 00:29:06,519
no problem yep all right what think yes

686
00:29:06,519 --> 00:29:08,000
thank you so much yep

687
00:29:08,000 --> 00:29:14,259
[Applause]

