1
00:00:00,000 --> 00:00:02,760
hello everyone

2
00:00:02,760 --> 00:00:04,740
my name is Sarah Miller

3
00:00:04,740 --> 00:00:07,500
and my co-presenter here is Melissa

4
00:00:07,500 --> 00:00:10,040
Robertson and we're here to talk about

5
00:00:10,040 --> 00:00:12,780
container factories and Aerospace and

6
00:00:12,780 --> 00:00:13,679
defense

7
00:00:13,679 --> 00:00:15,540
so we both work for a company called

8
00:00:15,540 --> 00:00:17,820
Collins Aerospace it's actually not a

9
00:00:17,820 --> 00:00:19,440
company it's a brand

10
00:00:19,440 --> 00:00:21,180
we're branding a whole bunch of

11
00:00:21,180 --> 00:00:24,180
Aerospace and defense companies together

12
00:00:24,180 --> 00:00:26,580
as legal entities that have a long

13
00:00:26,580 --> 00:00:29,640
history in the providing of equipment

14
00:00:29,640 --> 00:00:33,000
for commercial and military aircraft

15
00:00:33,000 --> 00:00:34,800
but we're also part of a much larger

16
00:00:34,800 --> 00:00:36,480
organization called Raytheon

17
00:00:36,480 --> 00:00:38,820
technologies that produces the Pratt and

18
00:00:38,820 --> 00:00:41,520
Whitney engines produces raytheon's

19
00:00:41,520 --> 00:00:44,160
missiles you know helping us stay safe

20
00:00:44,160 --> 00:00:46,500
in our Corporation as well as Raytheon

21
00:00:46,500 --> 00:00:49,460
intelligence in space

22
00:00:49,559 --> 00:00:52,200
as part of Collins Aerospace we are in a

23
00:00:52,200 --> 00:00:54,180
division called mission systems in

24
00:00:54,180 --> 00:00:56,579
mission systems we provide all sorts of

25
00:00:56,579 --> 00:00:58,620
different

26
00:00:58,620 --> 00:01:01,440
material and products to our U.S

27
00:01:01,440 --> 00:01:03,979
military as well as to

28
00:01:03,979 --> 00:01:06,600
mystery of Defense agencies across the

29
00:01:06,600 --> 00:01:08,700
globe

30
00:01:08,700 --> 00:01:10,680
and today we're going to talk a little

31
00:01:10,680 --> 00:01:13,500
bit about our problems now

32
00:01:13,500 --> 00:01:15,000
if you're an aerospace and defense

33
00:01:15,000 --> 00:01:16,979
industry you may know that we maintain

34
00:01:16,979 --> 00:01:18,780
systems that have been delivered to our

35
00:01:18,780 --> 00:01:21,479
customers for over 30 years

36
00:01:21,479 --> 00:01:23,159
this equipment is expected to stay

37
00:01:23,159 --> 00:01:26,040
operational continue to run and get

38
00:01:26,040 --> 00:01:28,439
updates because of course they want to

39
00:01:28,439 --> 00:01:31,140
upgrade things but we're still using our

40
00:01:31,140 --> 00:01:33,180
Legacy Technologies we're kind of stuck

41
00:01:33,180 --> 00:01:35,820
in those early 90s with the CRT monitors

42
00:01:35,820 --> 00:01:37,439
those computers

43
00:01:37,439 --> 00:01:41,220
back in the day which you know

44
00:01:41,220 --> 00:01:44,400
I have trouble using them and I know my

45
00:01:44,400 --> 00:01:46,380
information technology organization that

46
00:01:46,380 --> 00:01:48,659
someone labeled digital Technologies at

47
00:01:48,659 --> 00:01:51,299
some point in my history here

48
00:01:51,299 --> 00:01:53,159
do not want running in their Network

49
00:01:53,159 --> 00:01:56,460
like Windows 95 and Windows NT

50
00:01:56,460 --> 00:01:58,799
and you know how do you continue to

51
00:01:58,799 --> 00:02:00,600
maintain these products that are 25 and

52
00:02:00,600 --> 00:02:02,460
30 years old we're trying to figure that

53
00:02:02,460 --> 00:02:04,320
out for our developers to really help

54
00:02:04,320 --> 00:02:06,360
them and our product Engineers to really

55
00:02:06,360 --> 00:02:08,280
help them sustain what we have as the

56
00:02:08,280 --> 00:02:10,440
old but also adapt and move to the new

57
00:02:10,440 --> 00:02:12,900
and so we have you know all of the same

58
00:02:12,900 --> 00:02:14,220
questions that I'm sure your

59
00:02:14,220 --> 00:02:16,200
organizations have encountered it's like

60
00:02:16,200 --> 00:02:18,840
it built on my system why isn't it built

61
00:02:18,840 --> 00:02:21,180
on yours or why doesn't it run there

62
00:02:21,180 --> 00:02:23,760
which package did I miss you know many

63
00:02:23,760 --> 00:02:26,640
of our services and setups have been

64
00:02:26,640 --> 00:02:29,640
servers that were maintained since the

65
00:02:29,640 --> 00:02:30,780
early 90s

66
00:02:30,780 --> 00:02:32,340
not something that we want to continue

67
00:02:32,340 --> 00:02:34,080
we don't really want to go buy Hardware

68
00:02:34,080 --> 00:02:36,360
on eBay we don't really want to go trade

69
00:02:36,360 --> 00:02:38,340
with the national computer museum for

70
00:02:38,340 --> 00:02:41,160
Hardware that's actually working

71
00:02:41,160 --> 00:02:42,900
we also don't want to keep our material

72
00:02:42,900 --> 00:02:45,060
on floppy disks especially when the new

73
00:02:45,060 --> 00:02:47,580
Engineers that I hire don't know what a

74
00:02:47,580 --> 00:02:49,319
floppy is they think it's the save icon

75
00:02:49,319 --> 00:02:50,819
you hand them one it's very funny

76
00:02:50,819 --> 00:02:54,000
actually but we have fun in trying to

77
00:02:54,000 --> 00:02:55,860
really upgrade our systems to really

78
00:02:55,860 --> 00:02:57,720
keep our material in a digital form

79
00:02:57,720 --> 00:02:59,400
where do we store it how do we archive

80
00:02:59,400 --> 00:03:01,019
it so it can be there for the Next

81
00:03:01,019 --> 00:03:02,819
Generation

82
00:03:02,819 --> 00:03:06,000
and you know the systems are old so if

83
00:03:06,000 --> 00:03:07,860
you remember your original Unix flavors

84
00:03:07,860 --> 00:03:09,780
bash was not a thing

85
00:03:09,780 --> 00:03:12,659
so we really need to to get to a state

86
00:03:12,659 --> 00:03:15,959
where we really want to have our systems

87
00:03:15,959 --> 00:03:18,599
be usable for the modern developer for

88
00:03:18,599 --> 00:03:21,180
the modern engineer and so we also want

89
00:03:21,180 --> 00:03:23,819
to prevent our environment disparity we

90
00:03:23,819 --> 00:03:25,200
want to make sure that our Engineers are

91
00:03:25,200 --> 00:03:27,300
all operating in the same parody of

92
00:03:27,300 --> 00:03:29,099
environments they have the same things

93
00:03:29,099 --> 00:03:30,540
as our hopefully our deployment

94
00:03:30,540 --> 00:03:33,120
environments but really what I want is

95
00:03:33,120 --> 00:03:35,220
my build servers to all match my build

96
00:03:35,220 --> 00:03:38,280
environments between the developer who's

97
00:03:38,280 --> 00:03:40,680
been there for 25 years to the new hire

98
00:03:40,680 --> 00:03:43,080
that started yesterday

99
00:03:43,080 --> 00:03:45,420
I also really want to you know I have

100
00:03:45,420 --> 00:03:47,580
all these Legacy Technologies I really

101
00:03:47,580 --> 00:03:49,200
want to enable my developers to start

102
00:03:49,200 --> 00:03:52,379
using something new to bring in that new

103
00:03:52,379 --> 00:03:54,480
technology that they can use to start

104
00:03:54,480 --> 00:03:56,760
using emulation so that we don't have to

105
00:03:56,760 --> 00:03:58,620
keep that Windows 95 computer still

106
00:03:58,620 --> 00:04:00,180
operational and replace that little

107
00:04:00,180 --> 00:04:02,700
lithium battery that runs the clock

108
00:04:02,700 --> 00:04:05,400
don't forget about that

109
00:04:05,400 --> 00:04:06,900
and then we really want to update our

110
00:04:06,900 --> 00:04:09,000
old practices the practice of storing

111
00:04:09,000 --> 00:04:10,980
our material on a floppy disk that we

112
00:04:10,980 --> 00:04:14,159
know has bit rot or on the CD that we

113
00:04:14,159 --> 00:04:16,440
know has bitrot if you've ever had to

114
00:04:16,440 --> 00:04:18,540
get an old Material off of a CD-ROM

115
00:04:18,540 --> 00:04:21,238
drive or CD-ROM disk that was created in

116
00:04:21,238 --> 00:04:23,520
the early 90s you may know something

117
00:04:23,520 --> 00:04:25,560
about bitrod and it just does not come

118
00:04:25,560 --> 00:04:26,400
out

119
00:04:26,400 --> 00:04:28,199
so you know we're trying to think

120
00:04:28,199 --> 00:04:31,020
transformatively for our engineers and

121
00:04:31,020 --> 00:04:33,780
our transformal thinking today is these

122
00:04:33,780 --> 00:04:35,520
declarative ephemeral build environments

123
00:04:35,520 --> 00:04:37,080
we want to have everything declarative

124
00:04:37,080 --> 00:04:38,880
so they can be recreated at a moment's

125
00:04:38,880 --> 00:04:40,740
notice and we want them to be ephemeral

126
00:04:40,740 --> 00:04:43,500
so we're not having a Windows 95 machine

127
00:04:43,500 --> 00:04:46,860
hang around for years on end where it

128
00:04:46,860 --> 00:04:48,600
could be exposing vulnerabilities all

129
00:04:48,600 --> 00:04:50,639
across the boards of the network

130
00:04:50,639 --> 00:04:52,380
we only want that running in a very

131
00:04:52,380 --> 00:04:53,820
short amount of time to create the

132
00:04:53,820 --> 00:04:56,040
application that still needs that silly

133
00:04:56,040 --> 00:04:59,340
Borland C plus plus compiler running

134
00:04:59,340 --> 00:05:01,320
and so

135
00:05:01,320 --> 00:05:03,860
um we've kind of come up with as a team

136
00:05:03,860 --> 00:05:06,180
Melissa and I work in an organization

137
00:05:06,180 --> 00:05:07,680
that I you could probably describe as

138
00:05:07,680 --> 00:05:09,720
platform engineering we don't think of

139
00:05:09,720 --> 00:05:11,040
ourselves as that we're just kind of

140
00:05:11,040 --> 00:05:13,199
that traditional organization keeping DT

141
00:05:13,199 --> 00:05:15,660
away from our engineers and our

142
00:05:15,660 --> 00:05:18,180
Engineers away from DT try to provide

143
00:05:18,180 --> 00:05:21,180
that you know interface and help our

144
00:05:21,180 --> 00:05:23,580
engineers get across so we have a lot of

145
00:05:23,580 --> 00:05:26,400
needs as we migrate to Containers our

146
00:05:26,400 --> 00:05:27,900
Engineers have a lot of requirements of

147
00:05:27,900 --> 00:05:29,460
what they want to do digital

148
00:05:29,460 --> 00:05:32,280
Technologies or I.T has things that they

149
00:05:32,280 --> 00:05:33,660
want to do and then we have our

150
00:05:33,660 --> 00:05:36,000
governance risk and compliance the you

151
00:05:36,000 --> 00:05:38,639
know we build things for safety critical

152
00:05:38,639 --> 00:05:40,680
so the FAA has a lot of say in how we

153
00:05:40,680 --> 00:05:43,080
build software NASA has a lot of say in

154
00:05:43,080 --> 00:05:44,880
how we build software the dod has a lot

155
00:05:44,880 --> 00:05:47,340
of say in how we build software

156
00:05:47,340 --> 00:05:48,660
and so we're starting with our

157
00:05:48,660 --> 00:05:51,180
infrastructure and my Engineers all they

158
00:05:51,180 --> 00:05:53,699
want is quick access to compute give me

159
00:05:53,699 --> 00:05:55,620
a machine let me run something I want

160
00:05:55,620 --> 00:05:58,800
SSH login do stuff

161
00:05:58,800 --> 00:06:00,539
digital Technologies I want to manage

162
00:06:00,539 --> 00:06:01,919
and control everything I want to make

163
00:06:01,919 --> 00:06:04,440
sure that what you're running is good

164
00:06:04,440 --> 00:06:06,780
and then the governance is I really you

165
00:06:06,780 --> 00:06:08,039
know I don't want anybody to have access

166
00:06:08,039 --> 00:06:09,300
to your machine we really have to

167
00:06:09,300 --> 00:06:11,940
control it and protect it and I really

168
00:06:11,940 --> 00:06:14,460
want to know how it's going to be used

169
00:06:14,460 --> 00:06:16,259
so a building upon or compute

170
00:06:16,259 --> 00:06:17,699
infrastructure is we really want to be

171
00:06:17,699 --> 00:06:19,860
using orchestration platforms

172
00:06:19,860 --> 00:06:22,740
our developers have a huge need to

173
00:06:22,740 --> 00:06:26,400
dynamically scale their build servers

174
00:06:26,400 --> 00:06:29,520
and their testing and so we run College

175
00:06:29,520 --> 00:06:32,819
Aerospace builds things like simulators

176
00:06:32,819 --> 00:06:34,500
for aircraft flights and these

177
00:06:34,500 --> 00:06:36,240
simulators use a tremendous amount of

178
00:06:36,240 --> 00:06:38,280
compute but we want to scale that

179
00:06:38,280 --> 00:06:40,259
dynamically in our cloud

180
00:06:40,259 --> 00:06:42,600
we also need to have policy enforcement

181
00:06:42,600 --> 00:06:43,979
for digital Technologies they really

182
00:06:43,979 --> 00:06:46,199
want to control access and really give

183
00:06:46,199 --> 00:06:48,479
us those guard rails and understand and

184
00:06:48,479 --> 00:06:50,340
prevent us from you know really

185
00:06:50,340 --> 00:06:52,620
destroying someone else's work the

186
00:06:52,620 --> 00:06:53,880
network we got to keep our developers

187
00:06:53,880 --> 00:06:54,840
honest

188
00:06:54,840 --> 00:06:56,639
and then our governance teams really

189
00:06:56,639 --> 00:06:58,139
want to be able to Monitor and audit

190
00:06:58,139 --> 00:07:00,660
what we're doing so we can say that yes

191
00:07:00,660 --> 00:07:03,720
no International person accessed our

192
00:07:03,720 --> 00:07:06,120
itar data

193
00:07:06,120 --> 00:07:07,680
and then we move to our container

194
00:07:07,680 --> 00:07:08,940
factories and this is what we're going

195
00:07:08,940 --> 00:07:10,620
to talk about today

196
00:07:10,620 --> 00:07:13,620
is this is how we're developing

197
00:07:13,620 --> 00:07:15,900
automated workflows to help our

198
00:07:15,900 --> 00:07:18,780
engineers build containers so they can

199
00:07:18,780 --> 00:07:20,639
build and test their software we're not

200
00:07:20,639 --> 00:07:22,139
yet to the point where we're putting

201
00:07:22,139 --> 00:07:24,419
containers in our aircraft equipment

202
00:07:24,419 --> 00:07:27,479
most of the time we have some systems

203
00:07:27,479 --> 00:07:28,740
that might want to do that and are

204
00:07:28,740 --> 00:07:30,479
trying to do that but really what we

205
00:07:30,479 --> 00:07:32,340
want to do is scale how we maintain our

206
00:07:32,340 --> 00:07:33,900
software and how we build and develop

207
00:07:33,900 --> 00:07:36,180
our software in our organization we want

208
00:07:36,180 --> 00:07:37,080
to make sure that we can get

209
00:07:37,080 --> 00:07:38,759
authorizations to run all the tools

210
00:07:38,759 --> 00:07:40,319
within our Network and we want to make

211
00:07:40,319 --> 00:07:42,060
sure that we're not going to break

212
00:07:42,060 --> 00:07:43,500
someone else's software that's out there

213
00:07:43,500 --> 00:07:45,300
running and we want to meet all of the

214
00:07:45,300 --> 00:07:47,340
guidance that our company has and the

215
00:07:47,340 --> 00:07:49,500
rules and as you can see that we were

216
00:07:49,500 --> 00:07:51,599
kind of a conglomeration

217
00:07:51,599 --> 00:07:55,139
of organizations through acquisition and

218
00:07:55,139 --> 00:07:57,479
so we've come from 16 000 employees to

219
00:07:57,479 --> 00:07:59,940
almost 200 000 employees and so there's

220
00:07:59,940 --> 00:08:03,539
a lot of rules that we have to follow

221
00:08:03,539 --> 00:08:05,759
and then we also need to have a layer

222
00:08:05,759 --> 00:08:07,680
for container visibility and

223
00:08:07,680 --> 00:08:10,199
observability we want to make sure that

224
00:08:10,199 --> 00:08:11,520
the containers we're building can

225
00:08:11,520 --> 00:08:13,020
operate in the network and we know what

226
00:08:13,020 --> 00:08:14,099
they're doing

227
00:08:14,099 --> 00:08:15,960
and so we also want our developers to be

228
00:08:15,960 --> 00:08:18,120
able to use these things

229
00:08:18,120 --> 00:08:19,860
so that they have little impact on

230
00:08:19,860 --> 00:08:22,080
performance they don't really need to do

231
00:08:22,080 --> 00:08:23,879
anything to their app

232
00:08:23,879 --> 00:08:26,580
or their build build system to be able

233
00:08:26,580 --> 00:08:28,560
to use these logging and it's all built

234
00:08:28,560 --> 00:08:32,458
into the images and we can test it

235
00:08:32,458 --> 00:08:34,620
and lastly we have the app

236
00:08:34,620 --> 00:08:37,020
and this is my stuff don't touch it this

237
00:08:37,020 --> 00:08:39,179
is what I'm building for you

238
00:08:39,179 --> 00:08:40,919
and we our digital Technologies

239
00:08:40,919 --> 00:08:42,240
organization really wants to understand

240
00:08:42,240 --> 00:08:44,159
the risk of what I'm building is going

241
00:08:44,159 --> 00:08:45,360
to have in the network it's very

242
00:08:45,360 --> 00:08:46,860
important especially when we start

243
00:08:46,860 --> 00:08:49,380
running tests and that we're running our

244
00:08:49,380 --> 00:08:51,000
like non-production software we're

245
00:08:51,000 --> 00:08:52,380
trying to test things that we're

246
00:08:52,380 --> 00:08:54,899
building in our networks and how does

247
00:08:54,899 --> 00:08:56,040
that affect and how can we understand

248
00:08:56,040 --> 00:08:57,480
the risk of those to limit the

249
00:08:57,480 --> 00:08:59,100
vulnerabilities that we might add to the

250
00:08:59,100 --> 00:08:59,940
network

251
00:08:59,940 --> 00:09:01,560
for our governance we really understand

252
00:09:01,560 --> 00:09:03,360
where did that code come from who wrote

253
00:09:03,360 --> 00:09:05,339
it I mean did you pull it from the

254
00:09:05,339 --> 00:09:06,779
internet did you generate that through

255
00:09:06,779 --> 00:09:10,260
chat gptp who owns the copyright so we

256
00:09:10,260 --> 00:09:11,580
really want to understand where that

257
00:09:11,580 --> 00:09:13,260
code came from from a governance

258
00:09:13,260 --> 00:09:14,940
perspective so we're trying to build on

259
00:09:14,940 --> 00:09:16,740
all of these things to give our

260
00:09:16,740 --> 00:09:19,740
developers a chance but as you can see

261
00:09:19,740 --> 00:09:22,740
what my developers want isn't

262
00:09:22,740 --> 00:09:25,260
necessarily what DT and our governance

263
00:09:25,260 --> 00:09:28,080
system will give them so

264
00:09:28,080 --> 00:09:30,180
we have a little bit of a conflict and

265
00:09:30,180 --> 00:09:31,980
this has been kind of ongoing as our

266
00:09:31,980 --> 00:09:34,920
organizations grow you know we end up

267
00:09:34,920 --> 00:09:37,920
with Shadow I.T Services you know things

268
00:09:37,920 --> 00:09:40,260
that just are not Kosher in the

269
00:09:40,260 --> 00:09:42,000
environment

270
00:09:42,000 --> 00:09:43,380
and so

271
00:09:43,380 --> 00:09:45,300
Melissa and I through our program is

272
00:09:45,300 --> 00:09:46,320
we're trying to create these

273
00:09:46,320 --> 00:09:47,640
self-service environments for our

274
00:09:47,640 --> 00:09:49,920
developer so they can get easy access to

275
00:09:49,920 --> 00:09:53,220
compute we really want to reduce our

276
00:09:53,220 --> 00:09:55,260
developers cognitive load through some

277
00:09:55,260 --> 00:09:57,000
automation for policies and procedures

278
00:09:57,000 --> 00:09:59,279
so they don't have to know the you know

279
00:09:59,279 --> 00:10:01,320
150 controls that they're going to have

280
00:10:01,320 --> 00:10:04,800
to meet for RMF or cmmc in their

281
00:10:04,800 --> 00:10:06,000
environment when they just want to

282
00:10:06,000 --> 00:10:07,500
launch this container to compile some

283
00:10:07,500 --> 00:10:08,640
software

284
00:10:08,640 --> 00:10:10,380
we also want to create all these

285
00:10:10,380 --> 00:10:12,839
immutable audit records so that we know

286
00:10:12,839 --> 00:10:14,519
who did what when

287
00:10:14,519 --> 00:10:16,500
and we want to provide them with some

288
00:10:16,500 --> 00:10:18,120
curated Pipelines

289
00:10:18,120 --> 00:10:20,160
so that we have these controls and

290
00:10:20,160 --> 00:10:22,320
stages so when we go to meet our FAA

291
00:10:22,320 --> 00:10:26,940
requirements our d10 d178

292
00:10:27,240 --> 00:10:29,519
system requirements and how we manage

293
00:10:29,519 --> 00:10:31,680
and build our software that we have all

294
00:10:31,680 --> 00:10:33,660
of these things and stages that teams

295
00:10:33,660 --> 00:10:35,459
can pull in or not pull into their jobs

296
00:10:35,459 --> 00:10:38,220
and their pipelines and we also want to

297
00:10:38,220 --> 00:10:39,600
have these standardized containers so

298
00:10:39,600 --> 00:10:41,519
teams can actually use containers within

299
00:10:41,519 --> 00:10:43,399
their networks we want to create these

300
00:10:43,399 --> 00:10:45,600
Pathways of least resistance for

301
00:10:45,600 --> 00:10:47,399
developers so that they stop doing

302
00:10:47,399 --> 00:10:49,980
Shadow I.T they stop putting secrets in

303
00:10:49,980 --> 00:10:52,019
their software so they can log into that

304
00:10:52,019 --> 00:10:53,820
service account over there to get access

305
00:10:53,820 --> 00:10:56,279
to the git repository or heaven forbid

306
00:10:56,279 --> 00:10:58,200
the subversion repository or that old

307
00:10:58,200 --> 00:11:01,079
clear case repository that's still out

308
00:11:01,079 --> 00:11:03,120
there so we're really trying to work

309
00:11:03,120 --> 00:11:05,459
toward you know bringing our teammates

310
00:11:05,459 --> 00:11:07,980
up getting them the experience we also

311
00:11:07,980 --> 00:11:09,360
want to hope that they get some good

312
00:11:09,360 --> 00:11:10,980
Cloud education they can spend their

313
00:11:10,980 --> 00:11:12,720
time learning about the cloud not

314
00:11:12,720 --> 00:11:15,779
learning about how to run through the

315
00:11:15,779 --> 00:11:18,959
policies at our organization

316
00:11:18,959 --> 00:11:20,760
and so now Melissa is going to tell us a

317
00:11:20,760 --> 00:11:22,380
little bit about our work that we've

318
00:11:22,380 --> 00:11:23,640
been doing to create some of these

319
00:11:23,640 --> 00:11:25,920
automated workflows for our developers

320
00:11:25,920 --> 00:11:27,420
and as we move forward with this

321
00:11:27,420 --> 00:11:29,399
discussion is we really bring together a

322
00:11:29,399 --> 00:11:31,200
team of not just our team but we've

323
00:11:31,200 --> 00:11:32,820
brought in our product engineering teams

324
00:11:32,820 --> 00:11:36,440
together to build this

325
00:11:38,579 --> 00:11:41,820
it was quick hi Melissa Robertson I have

326
00:11:41,820 --> 00:11:43,920
been working on our container workflow

327
00:11:43,920 --> 00:11:45,779
and trying to create a development

328
00:11:45,779 --> 00:11:49,200
workflow for our Engineers to use

329
00:11:49,200 --> 00:11:52,200
we have kind of just a generic these are

330
00:11:52,200 --> 00:11:53,700
the stages that we're trying to go

331
00:11:53,700 --> 00:11:55,560
through and we really need to separate

332
00:11:55,560 --> 00:11:57,720
out the controls based on the different

333
00:11:57,720 --> 00:11:59,339
customers we have and different

334
00:11:59,339 --> 00:12:01,800
requirements we have but we really need

335
00:12:01,800 --> 00:12:03,839
to onboard our teams and teach them how

336
00:12:03,839 --> 00:12:06,899
to use these requirements and have the

337
00:12:06,899 --> 00:12:09,180
thresholds for them for the different

338
00:12:09,180 --> 00:12:11,040
environments for the different networks

339
00:12:11,040 --> 00:12:13,440
agreed upon not only by the developers

340
00:12:13,440 --> 00:12:15,300
but the security and quality experts as

341
00:12:15,300 --> 00:12:17,479
well

342
00:12:19,320 --> 00:12:20,820
so

343
00:12:20,820 --> 00:12:22,800
we need to make sure that we choose

344
00:12:22,800 --> 00:12:23,880
tools

345
00:12:23,880 --> 00:12:27,480
we have multiple of them currently that

346
00:12:27,480 --> 00:12:31,140
meet the minimum requirements for these

347
00:12:31,140 --> 00:12:33,779
we need a record of review make sure

348
00:12:33,779 --> 00:12:35,220
that it's auditable

349
00:12:35,220 --> 00:12:37,680
to the quality standards immutable and

350
00:12:37,680 --> 00:12:41,839
per our company retained for 99 years

351
00:12:42,899 --> 00:12:45,540
we need controls around

352
00:12:45,540 --> 00:12:49,440
our source code and we really want to

353
00:12:49,440 --> 00:12:51,899
start to prevent the downloading of

354
00:12:51,899 --> 00:12:54,180
source code on local PCS and instead

355
00:12:54,180 --> 00:12:57,560
being able to develop in the cloud

356
00:13:00,240 --> 00:13:02,459
so we really want to pull dependencies

357
00:13:02,459 --> 00:13:04,440
managed within our organization so that

358
00:13:04,440 --> 00:13:06,060
we're not going out to the internet and

359
00:13:06,060 --> 00:13:09,360
we know exactly what we're pulling down

360
00:13:09,360 --> 00:13:11,700
we want to have this continual

361
00:13:11,700 --> 00:13:14,519
remediation of the dependencies

362
00:13:14,519 --> 00:13:17,040
and we want to also have the ability to

363
00:13:17,040 --> 00:13:19,139
pull pre-approved images

364
00:13:19,139 --> 00:13:22,200
from Registries such as iron bank or

365
00:13:22,200 --> 00:13:24,120
cncf containers that meet a security

366
00:13:24,120 --> 00:13:26,720
threshold

367
00:13:29,100 --> 00:13:31,019
so once we pull those dependencies we

368
00:13:31,019 --> 00:13:32,519
need to check the signatures and check

369
00:13:32,519 --> 00:13:33,959
the certificates that are assigned to

370
00:13:33,959 --> 00:13:34,740
them

371
00:13:34,740 --> 00:13:36,420
and then we need to lint the container

372
00:13:36,420 --> 00:13:39,540
and make sure that depending on the

373
00:13:39,540 --> 00:13:41,579
different customers that we don't open

374
00:13:41,579 --> 00:13:43,740
ports if we don't need to we don't have

375
00:13:43,740 --> 00:13:45,180
access to things we're not supposed to

376
00:13:45,180 --> 00:13:47,399
we don't give pseudo access to things

377
00:13:47,399 --> 00:13:50,040
that shouldn't happen

378
00:13:50,040 --> 00:13:51,959
currently we're using Hato lint for this

379
00:13:51,959 --> 00:13:55,279
in our build pipeline

380
00:13:56,700 --> 00:13:58,560
so then we have actually building the

381
00:13:58,560 --> 00:14:00,240
container we need to make sure our

382
00:14:00,240 --> 00:14:02,579
agents are running in an authorized

383
00:14:02,579 --> 00:14:04,500
environment we need to make sure it's a

384
00:14:04,500 --> 00:14:06,959
declarative and informal environment and

385
00:14:06,959 --> 00:14:09,540
that we reduce the

386
00:14:09,540 --> 00:14:11,839
we limit the amount of

387
00:14:11,839 --> 00:14:14,880
the effect of anything being compromised

388
00:14:14,880 --> 00:14:17,820
so that if you build one container and

389
00:14:17,820 --> 00:14:20,160
it messes up things you move on to the

390
00:14:20,160 --> 00:14:23,760
next one and none of that happens

391
00:14:23,760 --> 00:14:25,800
and then we need a audit log and

392
00:14:25,800 --> 00:14:27,839
monitoring the environment and make sure

393
00:14:27,839 --> 00:14:29,700
there's no unauthorized access and make

394
00:14:29,700 --> 00:14:33,620
sure the pipeline fails if that happens

395
00:14:35,820 --> 00:14:37,740
so then we need to scan the container at

396
00:14:37,740 --> 00:14:39,779
a noaa's level and make sure that we

397
00:14:39,779 --> 00:14:41,940
continue to have stick compliance

398
00:14:41,940 --> 00:14:44,699
and at least have two vulnerability

399
00:14:44,699 --> 00:14:47,100
scanners sometimes the customer requires

400
00:14:47,100 --> 00:14:49,560
a certain one but right now we use gripe

401
00:14:49,560 --> 00:14:52,260
and trivi built into gitlab

402
00:14:52,260 --> 00:14:54,120
but we must show that the container is

403
00:14:54,120 --> 00:14:55,680
secure enough to actually put our code

404
00:14:55,680 --> 00:14:57,899
to build

405
00:14:57,899 --> 00:14:59,760
the thresholds can be different but we

406
00:14:59,760 --> 00:15:01,920
really need a separation of Duty so that

407
00:15:01,920 --> 00:15:04,560
the developers can't change those

408
00:15:04,560 --> 00:15:06,899
requirements and it should be done by

409
00:15:06,899 --> 00:15:08,639
our quality and Security Experts for the

410
00:15:08,639 --> 00:15:10,820
program

411
00:15:13,980 --> 00:15:16,980
so we also need to test the container

412
00:15:16,980 --> 00:15:19,199
and we really need to have that Baseline

413
00:15:19,199 --> 00:15:21,660
test result so that we can do continuous

414
00:15:21,660 --> 00:15:23,220
remediation anytime there's a

415
00:15:23,220 --> 00:15:24,660
vulnerability

416
00:15:24,660 --> 00:15:28,079
and pull that in automatically

417
00:15:28,079 --> 00:15:30,899
uh it is a delicate balance between

418
00:15:30,899 --> 00:15:32,519
remediate quickly but sometimes

419
00:15:32,519 --> 00:15:34,560
exceptions are needed such as running

420
00:15:34,560 --> 00:15:38,719
python 2 and not upgrading to three

421
00:15:40,920 --> 00:15:43,380
and we need to generate the artifacts we

422
00:15:43,380 --> 00:15:45,660
have a lot of requirements for the

423
00:15:45,660 --> 00:15:47,100
documents we need before we release

424
00:15:47,100 --> 00:15:49,199
something

425
00:15:49,199 --> 00:15:51,180
some people want Excel sheets some

426
00:15:51,180 --> 00:15:53,760
people want a pretty website

427
00:15:53,760 --> 00:15:55,199
but we really need to work with our

428
00:15:55,199 --> 00:15:56,579
governance and compliance and risk

429
00:15:56,579 --> 00:15:59,100
management team to not only have the

430
00:15:59,100 --> 00:16:01,199
vulnerabilities at the point in time the

431
00:16:01,199 --> 00:16:03,480
container was built but continuous

432
00:16:03,480 --> 00:16:05,339
remediation and

433
00:16:05,339 --> 00:16:07,680
tracking of the vulnerabilities

434
00:16:07,680 --> 00:16:09,899
when people are running these containers

435
00:16:09,899 --> 00:16:11,339
and we need to automate it so that

436
00:16:11,339 --> 00:16:14,300
there's less mistakes

437
00:16:15,540 --> 00:16:17,160
and then we need to sign the containers

438
00:16:17,160 --> 00:16:18,839
and

439
00:16:18,839 --> 00:16:20,880
the generated artifacts that are within

440
00:16:20,880 --> 00:16:22,920
each container and then limit the length

441
00:16:22,920 --> 00:16:24,360
of

442
00:16:24,360 --> 00:16:26,160
the signature validation so that we're

443
00:16:26,160 --> 00:16:28,199
not running the same containers 20 years

444
00:16:28,199 --> 00:16:30,439
later

445
00:16:32,820 --> 00:16:33,899
so we have a bunch of different

446
00:16:33,899 --> 00:16:35,760
environments we have our corporate

447
00:16:35,760 --> 00:16:37,800
Network which allows

448
00:16:37,800 --> 00:16:40,440
some access to the internet packages

449
00:16:40,440 --> 00:16:42,300
developer Network which has a little

450
00:16:42,300 --> 00:16:44,279
more leeway and then our cloud and

451
00:16:44,279 --> 00:16:46,259
closed environments

452
00:16:46,259 --> 00:16:49,380
we need signatures to have the automated

453
00:16:49,380 --> 00:16:52,440
process to get approved to use in each

454
00:16:52,440 --> 00:16:55,639
of these different environments

455
00:16:57,240 --> 00:16:59,459
but we also need to continually scan for

456
00:16:59,459 --> 00:17:01,860
vulnerabilities based on what is running

457
00:17:01,860 --> 00:17:03,540
and have the ability to revoke the

458
00:17:03,540 --> 00:17:05,040
signature

459
00:17:05,040 --> 00:17:06,599
for any of the

460
00:17:06,599 --> 00:17:08,339
vulnerabilities that have been flagged

461
00:17:08,339 --> 00:17:10,079
above a certain threshold given the

462
00:17:10,079 --> 00:17:12,918
different environments

463
00:17:15,720 --> 00:17:18,540
and this is just a generic network with

464
00:17:18,540 --> 00:17:20,579
different clusters we really need to

465
00:17:20,579 --> 00:17:22,500
restrict signatures for each of the

466
00:17:22,500 --> 00:17:24,540
Clusters as well and make sure that

467
00:17:24,540 --> 00:17:26,699
we're not running something in Dev that

468
00:17:26,699 --> 00:17:29,220
has access to Broad data or a simulation

469
00:17:29,220 --> 00:17:31,679
that's running for a longer time has

470
00:17:31,679 --> 00:17:34,260
more restrictions on vulnerability

471
00:17:34,260 --> 00:17:36,419
thresholds

472
00:17:36,419 --> 00:17:38,340
and we really need to educate our

473
00:17:38,340 --> 00:17:40,320
developers so that we're not spending up

474
00:17:40,320 --> 00:17:44,039
2 000 containers in a cloud and ruining

475
00:17:44,039 --> 00:17:46,559
resources for other Developers

476
00:17:46,559 --> 00:17:49,260
or charging as you know four million

477
00:17:49,260 --> 00:17:51,299
dollars in the day

478
00:17:51,299 --> 00:17:54,000
and we really need to have the same

479
00:17:54,000 --> 00:17:56,400
environment across the board instead of

480
00:17:56,400 --> 00:17:59,340
having five different versions of our

481
00:17:59,340 --> 00:18:01,980
git repository and this is something

482
00:18:01,980 --> 00:18:05,100
we're leveraging is zarf from defense

483
00:18:05,100 --> 00:18:07,440
unicorns and trying to make it

484
00:18:07,440 --> 00:18:10,700
declarative across the board

485
00:18:12,480 --> 00:18:14,940
so yeah so we're building this uh and

486
00:18:14,940 --> 00:18:17,160
learning this week I've learned that

487
00:18:17,160 --> 00:18:18,600
we're doing some platform engineering

488
00:18:18,600 --> 00:18:20,580
new term for me I know I've read some

489
00:18:20,580 --> 00:18:22,679
articles on it but I didn't realize how

490
00:18:22,679 --> 00:18:24,720
much I was actually involved in this

491
00:18:24,720 --> 00:18:26,880
and we we're really trying to provide

492
00:18:26,880 --> 00:18:29,460
that developer experience to bring this

493
00:18:29,460 --> 00:18:31,260
environment parity we don't want our

494
00:18:31,260 --> 00:18:33,059
developers to be going into their secure

495
00:18:33,059 --> 00:18:34,620
lab and have to go back to use

496
00:18:34,620 --> 00:18:37,740
subversion or heaven forbid clear case

497
00:18:37,740 --> 00:18:39,480
and use all the old tools that they've

498
00:18:39,480 --> 00:18:41,400
been accustomed to maintain that Solaris

499
00:18:41,400 --> 00:18:43,320
server or Sonos server that's been

500
00:18:43,320 --> 00:18:45,539
around for many many years we really

501
00:18:45,539 --> 00:18:48,299
want to bring them up to a really new

502
00:18:48,299 --> 00:18:50,460
environment and we want them to be able

503
00:18:50,460 --> 00:18:51,720
to use the modern tools that they're

504
00:18:51,720 --> 00:18:53,640
expecting to use we want to be able to

505
00:18:53,640 --> 00:18:55,620
recruit new people who know how to use

506
00:18:55,620 --> 00:18:57,000
those tools and I don't have to train

507
00:18:57,000 --> 00:18:59,100
them all the time and I also want to be

508
00:18:59,100 --> 00:19:01,440
able to upskill my existing Engineers so

509
00:19:01,440 --> 00:19:02,580
the guys who have been running

510
00:19:02,580 --> 00:19:04,860
Borderland C plus plus still can learn

511
00:19:04,860 --> 00:19:06,840
how to use GCC and learn what those

512
00:19:06,840 --> 00:19:08,700
errors mean and say hey color coding is

513
00:19:08,700 --> 00:19:11,280
a thing so we really want to bring our

514
00:19:11,280 --> 00:19:14,220
teams together to grow together we're

515
00:19:14,220 --> 00:19:16,200
doing this in isolation with just this

516
00:19:16,200 --> 00:19:17,940
team we've involved our product teams

517
00:19:17,940 --> 00:19:19,860
with us we have experts from our

518
00:19:19,860 --> 00:19:21,960
security cyber security teams as well as

519
00:19:21,960 --> 00:19:23,820
experts from our digital Technologies

520
00:19:23,820 --> 00:19:26,220
organization working with us but we do

521
00:19:26,220 --> 00:19:28,500
face a tremendous amount of challenges

522
00:19:28,500 --> 00:19:30,360
as we go forward we're still trying to

523
00:19:30,360 --> 00:19:32,039
figure out the appropriate ways to run

524
00:19:32,039 --> 00:19:33,900
containers in our environments at

525
00:19:33,900 --> 00:19:36,059
Collins Aerospace we get pockets of

526
00:19:36,059 --> 00:19:38,760
people we do a lot of Shadow I.T so I am

527
00:19:38,760 --> 00:19:40,919
Docker installed I don't know she might

528
00:19:40,919 --> 00:19:42,539
have doctor and stuff I've Rancher

529
00:19:42,539 --> 00:19:45,780
installed on my desktop or laptop so we

530
00:19:45,780 --> 00:19:47,160
try and use these things but then you

531
00:19:47,160 --> 00:19:49,740
know every other day or so you know

532
00:19:49,740 --> 00:19:51,660
McAfee kicks off and says no you can't

533
00:19:51,660 --> 00:19:53,700
do that and then I go file my exception

534
00:19:53,700 --> 00:19:55,440
so we really want to make those things

535
00:19:55,440 --> 00:19:58,380
normal like maybe get the developer off

536
00:19:58,380 --> 00:19:59,700
their laptop so I don't have to carry

537
00:19:59,700 --> 00:20:02,100
around this nine pound laptop with you

538
00:20:02,100 --> 00:20:04,020
know an hour of battery life I can

539
00:20:04,020 --> 00:20:05,580
actually have a reasonable one

540
00:20:05,580 --> 00:20:09,240
and be able to do code spaces or some

541
00:20:09,240 --> 00:20:11,640
really cool get pods so I can just

542
00:20:11,640 --> 00:20:13,799
access my app in the cloud and go

543
00:20:13,799 --> 00:20:15,660
somewhere else and do it again

544
00:20:15,660 --> 00:20:17,460
so we're working hard to build those

545
00:20:17,460 --> 00:20:19,260
experiences to work with our developers

546
00:20:19,260 --> 00:20:20,700
to really understand what their needs

547
00:20:20,700 --> 00:20:23,039
are and to really look at how can we

548
00:20:23,039 --> 00:20:24,419
support some of the older Technologies

549
00:20:24,419 --> 00:20:27,120
and lift them up because we will have to

550
00:20:27,120 --> 00:20:28,799
continue to support our development

551
00:20:28,799 --> 00:20:30,480
systems that were built with custom

552
00:20:30,480 --> 00:20:33,559
tools that run on Windows NT Windows XP

553
00:20:33,559 --> 00:20:35,580
we're still trying to figure out how to

554
00:20:35,580 --> 00:20:37,200
get from code composer forward to code

555
00:20:37,200 --> 00:20:39,840
composer 6. for some of our DSP

556
00:20:39,840 --> 00:20:41,880
processing so it's going to be a long

557
00:20:41,880 --> 00:20:45,679
road but we're working on it

558
00:20:47,820 --> 00:20:51,020
yeah any questions

559
00:20:54,559 --> 00:20:58,080
it's everything uh we have I think

560
00:20:58,080 --> 00:21:00,179
there's the biggest issue I think we

561
00:21:00,179 --> 00:21:03,960
have is a misunderstanding between

562
00:21:03,960 --> 00:21:06,419
what our engineering product teams need

563
00:21:06,419 --> 00:21:08,520
and what our develop our digital

564
00:21:08,520 --> 00:21:11,220
Technologies team is expecting what does

565
00:21:11,220 --> 00:21:13,320
production mean to you

566
00:21:13,320 --> 00:21:16,980
so for me to put my source code that is

567
00:21:16,980 --> 00:21:19,500
generally owned by the government into a

568
00:21:19,500 --> 00:21:21,299
network it has to be a production

569
00:21:21,299 --> 00:21:22,919
Network

570
00:21:22,919 --> 00:21:25,740
and so but my it guys are like but

571
00:21:25,740 --> 00:21:26,820
that's source code You're Building

572
00:21:26,820 --> 00:21:28,140
source code in your production that's

573
00:21:28,140 --> 00:21:30,120
Dev I'm like no no I have to meet all

574
00:21:30,120 --> 00:21:32,520
the requirements for prod for me to get

575
00:21:32,520 --> 00:21:33,720
my source code there but then I'm going

576
00:21:33,720 --> 00:21:35,940
to have a Dev environment in prod so it

577
00:21:35,940 --> 00:21:38,400
just doesn't understand uh and we talk a

578
00:21:38,400 --> 00:21:40,320
different language and we continue to

579
00:21:40,320 --> 00:21:41,700
have the same discussions over and over

580
00:21:41,700 --> 00:21:43,820
again

581
00:21:49,100 --> 00:21:53,039
uh we are working toward through that

582
00:21:53,039 --> 00:21:54,960
um we do see the developers really want

583
00:21:54,960 --> 00:21:56,059
to be local

584
00:21:56,059 --> 00:21:59,400
they want to run local but they still

585
00:21:59,400 --> 00:22:02,460
are you know we've migrated many teams

586
00:22:02,460 --> 00:22:05,159
to servers so being able to access

587
00:22:05,159 --> 00:22:06,840
remotely from their computer without

588
00:22:06,840 --> 00:22:10,440
having to use the right VPN I would open

589
00:22:10,440 --> 00:22:13,260
them up to more stuff and to be able to

590
00:22:13,260 --> 00:22:15,539
have people from the different Heritage

591
00:22:15,539 --> 00:22:16,799
organizations to work on the same

592
00:22:16,799 --> 00:22:19,380
project so collaboration between

593
00:22:19,380 --> 00:22:21,840
RMV Raytheon missile defense and Collins

594
00:22:21,840 --> 00:22:23,400
Aerospace is a little difficult because

595
00:22:23,400 --> 00:22:24,780
we both don't have access to the same

596
00:22:24,780 --> 00:22:27,600
networks yet it's been three years

597
00:22:27,600 --> 00:22:30,299
in April that'll be four or no April

598
00:22:30,299 --> 00:22:31,320
it'll be three

599
00:22:31,320 --> 00:22:35,539
so it's just really hard yes sir

600
00:22:37,440 --> 00:22:40,100
uh we have tried some virtual machine

601
00:22:40,100 --> 00:22:45,080
for developers we do our uh

602
00:22:45,080 --> 00:22:48,240
that is part of our I.T policies they do

603
00:22:48,240 --> 00:22:49,440
not want us to run virtualized

604
00:22:49,440 --> 00:22:51,780
environments on our mobile devices or on

605
00:22:51,780 --> 00:22:54,360
our desktop devices that's uh apparently

606
00:22:54,360 --> 00:22:57,120
a defires violation for them because we

607
00:22:57,120 --> 00:22:59,880
don't want to de-farge the mobile image

608
00:22:59,880 --> 00:23:01,919
or the the image inside the VM that's

609
00:23:01,919 --> 00:23:03,360
mine that's because I'm building my app

610
00:23:03,360 --> 00:23:05,400
on that I want to control what compilers

611
00:23:05,400 --> 00:23:06,780
what tools everything that goes into

612
00:23:06,780 --> 00:23:08,100
that and that's why we're trying to

613
00:23:08,100 --> 00:23:09,960
build these container factories so that

614
00:23:09,960 --> 00:23:12,419
my teams can create all the tools they

615
00:23:12,419 --> 00:23:14,520
need and get them in the factory we have

616
00:23:14,520 --> 00:23:17,280
the process to for them to quickly

617
00:23:17,280 --> 00:23:19,200
iterate on that so when they're creating

618
00:23:19,200 --> 00:23:21,659
their environments at the beginning of a

619
00:23:21,659 --> 00:23:23,159
project or trying to reuse someone

620
00:23:23,159 --> 00:23:24,720
else's environment they can bring that

621
00:23:24,720 --> 00:23:27,299
through that pipeline we can get its

622
00:23:27,299 --> 00:23:30,120
initial certificate to field accredited

623
00:23:30,120 --> 00:23:32,100
and then they can iterate on it as they

624
00:23:32,100 --> 00:23:33,960
go forward

625
00:23:33,960 --> 00:23:35,580
yes sir

626
00:23:35,580 --> 00:23:37,699
um

627
00:23:40,919 --> 00:23:44,280
yeah ansible right now is what we're

628
00:23:44,280 --> 00:23:46,559
running our Cloud build

629
00:23:46,559 --> 00:23:49,140
and an ec2 instance

630
00:23:49,140 --> 00:23:51,200
okay

631
00:23:52,799 --> 00:23:54,059
yes

632
00:23:54,059 --> 00:23:56,340
yep yeah we're really trying to move to

633
00:23:56,340 --> 00:23:58,200
that declarative Baseline to make sure

634
00:23:58,200 --> 00:24:00,059
everything is declarative so we can

635
00:24:00,059 --> 00:24:02,600
recreate it in Cloud environments

636
00:24:02,600 --> 00:24:05,720
regardless of what our CSP provider is

637
00:24:05,720 --> 00:24:09,840
or our on-prem you know data center or

638
00:24:09,840 --> 00:24:11,340
in our classified environments because

639
00:24:11,340 --> 00:24:12,240
we really want to recreate those

640
00:24:12,240 --> 00:24:13,980
environments now none of us are

641
00:24:13,980 --> 00:24:16,260
kubernetes experts so we do not know how

642
00:24:16,260 --> 00:24:17,760
to manage kubernetes clusters so we're

643
00:24:17,760 --> 00:24:20,100
learning our security officers who

644
00:24:20,100 --> 00:24:22,260
maintain our classified systems are also

645
00:24:22,260 --> 00:24:23,580
learning what it means to be Cloud

646
00:24:23,580 --> 00:24:25,020
native and what it means to manage

647
00:24:25,020 --> 00:24:27,179
kubernetes clusters and how we bring

648
00:24:27,179 --> 00:24:29,659
those forward

649
00:24:30,120 --> 00:24:31,740
but I hope my developer doesn't have to

650
00:24:31,740 --> 00:24:33,360
understand all about a kubernetes

651
00:24:33,360 --> 00:24:35,159
cluster

652
00:24:35,159 --> 00:24:38,059
maybe a little bit

653
00:24:39,780 --> 00:24:41,520
no

654
00:24:41,520 --> 00:24:47,360
not really if I do it it's Shadow I.T

655
00:24:48,960 --> 00:24:51,539
um they might issue me a wind a Linux

656
00:24:51,539 --> 00:24:54,360
machine that I can use

657
00:24:54,360 --> 00:24:55,740
um and so that's one of the things that

658
00:24:55,740 --> 00:24:58,980
we talk about is the cost of having to

659
00:24:58,980 --> 00:25:00,960
issue me multiple machines to match the

660
00:25:00,960 --> 00:25:02,280
development environments that I work on

661
00:25:02,280 --> 00:25:03,960
so

662
00:25:03,960 --> 00:25:05,460
um I'm issued I have a number of

663
00:25:05,460 --> 00:25:07,740
machines that are in labs that I've been

664
00:25:07,740 --> 00:25:10,559
issued that only I use to build software

665
00:25:10,559 --> 00:25:12,480
a couple Linux machines a couple Windows

666
00:25:12,480 --> 00:25:15,480
machines that's a lot of money not only

667
00:25:15,480 --> 00:25:16,740
is it a lot of money just buying the

668
00:25:16,740 --> 00:25:18,360
computer hardware and it also takes a

669
00:25:18,360 --> 00:25:20,400
lot of time to procure it now it's a lot

670
00:25:20,400 --> 00:25:22,080
of money in managing those machines I

671
00:25:22,080 --> 00:25:24,000
I'm not good about doing my own updates

672
00:25:24,000 --> 00:25:27,000
for so I I know I haven't moved to 1404

673
00:25:27,000 --> 00:25:29,820
running out there somewhere maybe I have

674
00:25:29,820 --> 00:25:31,559
a lot of servers running 1404 I don't

675
00:25:31,559 --> 00:25:32,220
know

676
00:25:32,220 --> 00:25:34,500
so we we really I mean this is part of

677
00:25:34,500 --> 00:25:36,179
this management of when I added

678
00:25:36,179 --> 00:25:37,620
additional additional assets that are

679
00:25:37,620 --> 00:25:39,900
not ephemeral that don't get recreated

680
00:25:39,900 --> 00:25:42,299
at the time of need they stay in that

681
00:25:42,299 --> 00:25:44,520
legacy mode they continue to not get

682
00:25:44,520 --> 00:25:47,820
updated to not be

683
00:25:47,820 --> 00:25:50,340
sustainable and so and then they get off

684
00:25:50,340 --> 00:25:52,740
you know we have one couple servers 1404

685
00:25:52,740 --> 00:25:54,539
is like we want to migrate that's the

686
00:25:54,539 --> 00:25:56,820
data center and so they migrated them as

687
00:25:56,820 --> 00:25:59,039
they were you know kind of like you know

688
00:25:59,039 --> 00:26:00,360
just duplicate

689
00:26:00,360 --> 00:26:01,679
put them in the data center I'm like

690
00:26:01,679 --> 00:26:03,419
what were you guys doing

691
00:26:03,419 --> 00:26:04,919
you mean he didn't like switch to red

692
00:26:04,919 --> 00:26:07,500
hat and launch the Enterprise version of

693
00:26:07,500 --> 00:26:09,539
the base OS so it was all in compliance

694
00:26:09,539 --> 00:26:10,919
and then install the software on top of

695
00:26:10,919 --> 00:26:12,659
that and they're like well the compiler

696
00:26:12,659 --> 00:26:14,000
doesn't work because we need to use

697
00:26:14,000 --> 00:26:16,919
gcc49 I'm like well why do you have to

698
00:26:16,919 --> 00:26:18,900
use gcc49 well it doesn't compile it's

699
00:26:18,900 --> 00:26:21,980
like can you fix it

700
00:26:23,100 --> 00:26:24,960
uh yes

701
00:26:24,960 --> 00:26:28,200
we are using that to to yep to Baseline

702
00:26:28,200 --> 00:26:29,220
our images

703
00:26:29,220 --> 00:26:32,159
and to really uh we're also using it to

704
00:26:32,159 --> 00:26:33,360
audit our images so anything that's

705
00:26:33,360 --> 00:26:34,980
running out there in the cloud in our

706
00:26:34,980 --> 00:26:37,020
ec2 instances we're using that to audit

707
00:26:37,020 --> 00:26:38,880
we are Vanishing in a little bit with

708
00:26:38,880 --> 00:26:40,679
Azure it's kind of a new experience for

709
00:26:40,679 --> 00:26:43,740
both of us AWS is our heritage

710
00:26:43,740 --> 00:26:45,360
organization preferred cloud provider

711
00:26:45,360 --> 00:26:47,279
Azure seems to be the corporate

712
00:26:47,279 --> 00:26:49,620
preferred Cloud providers so we're kind

713
00:26:49,620 --> 00:26:51,120
of playing with both

714
00:26:51,120 --> 00:26:53,400
you know someone told me they were using

715
00:26:53,400 --> 00:26:54,779
Google but I don't know how many people

716
00:26:54,779 --> 00:26:56,820
these Google like Collins Aerospace

717
00:26:56,820 --> 00:26:59,000
anymore

718
00:27:04,559 --> 00:27:07,380
like the bill runtime

719
00:27:07,380 --> 00:27:09,779
like compliance with like an Enterprise

720
00:27:09,779 --> 00:27:13,020
standard versus also we're talking

721
00:27:13,020 --> 00:27:14,340
runtime

722
00:27:14,340 --> 00:27:15,779
there could be a lot of like

723
00:27:15,779 --> 00:27:17,640
differentiation between like what

724
00:27:17,640 --> 00:27:19,740
Enterprise says and what like if you

725
00:27:19,740 --> 00:27:21,720
have a standard you have to comply to

726
00:27:21,720 --> 00:27:24,659
there there has been some I would say

727
00:27:24,659 --> 00:27:26,940
conflicting requirements in that area

728
00:27:26,940 --> 00:27:28,679
especially when we're trying to use our

729
00:27:28,679 --> 00:27:30,299
build environments they they tend to be

730
00:27:30,299 --> 00:27:33,120
a lot more Dynamic and we when we're

731
00:27:33,120 --> 00:27:36,000
testing our software especially we want

732
00:27:36,000 --> 00:27:38,640
access to change priorities we write

733
00:27:38,640 --> 00:27:40,320
real-time embedded software so if we're

734
00:27:40,320 --> 00:27:42,059
running a unit test on a piece of

735
00:27:42,059 --> 00:27:43,740
software that's creating a thread we

736
00:27:43,740 --> 00:27:46,260
want that to have access to setting

737
00:27:46,260 --> 00:27:49,980
priority and my DT Department says no I

738
00:27:49,980 --> 00:27:51,659
can't do that so we really try and work

739
00:27:51,659 --> 00:27:53,700
on some of the SD Linux access controls

740
00:27:53,700 --> 00:27:55,559
to do that trying to figure out how can

741
00:27:55,559 --> 00:27:57,240
we do that with privileged containers or

742
00:27:57,240 --> 00:27:59,400
not privileged containers what happens

743
00:27:59,400 --> 00:28:01,020
if we don't set the priority and run the

744
00:28:01,020 --> 00:28:03,779
software does it operate how randomly

745
00:28:03,779 --> 00:28:06,659
does it operate and we also are looking

746
00:28:06,659 --> 00:28:08,460
at the emulation environments how can we

747
00:28:08,460 --> 00:28:10,860
run qemu within containers to really

748
00:28:10,860 --> 00:28:12,960
emulate our arm processors and can we

749
00:28:12,960 --> 00:28:15,299
distinctly separate that kernel from the

750
00:28:15,299 --> 00:28:17,100
underlying OS so we can set priorities

751
00:28:17,100 --> 00:28:18,779
in qemu and do what we need to do

752
00:28:18,779 --> 00:28:20,220
without having root access to the

753
00:28:20,220 --> 00:28:22,760
operating system

754
00:28:28,140 --> 00:28:30,000
right now it's very risk management

755
00:28:30,000 --> 00:28:32,159
focused so they look exactly what I'm

756
00:28:32,159 --> 00:28:34,679
doing today and then I can't change it

757
00:28:34,679 --> 00:28:36,960
tomorrow and so they'll prove it and

758
00:28:36,960 --> 00:28:39,120
then you know tomorrow I'll come say I I

759
00:28:39,120 --> 00:28:40,740
need to do this other thing like open

760
00:28:40,740 --> 00:28:42,779
this port or something so it it's really

761
00:28:42,779 --> 00:28:45,659
a very manual process so we end up with

762
00:28:45,659 --> 00:28:49,200
install my own server back in the lab

763
00:28:49,200 --> 00:28:52,559
my software on it don't update it and go

764
00:28:52,559 --> 00:28:54,900
be merry

765
00:28:54,900 --> 00:28:57,240
which we want to stop um I don't want my

766
00:28:57,240 --> 00:28:58,559
developers having to maintain their

767
00:28:58,559 --> 00:29:01,100
servers anymore

768
00:29:01,380 --> 00:29:04,020
I want them to use corporate ldap

769
00:29:04,020 --> 00:29:06,720
all that good stuff

770
00:29:06,720 --> 00:29:08,580
all right are we out of time are we a

771
00:29:08,580 --> 00:29:09,720
few more minutes

772
00:29:09,720 --> 00:29:12,260
10 minutes

773
00:29:13,919 --> 00:29:16,679
any more questions

774
00:29:16,679 --> 00:29:18,120
well thank you for attending we really

775
00:29:18,120 --> 00:29:21,379
appreciate it thank you

