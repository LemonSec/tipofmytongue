1
00:00:00,000 --> 00:00:02,639
my name is Arun Krishna Kumar and I'm

2
00:00:02,639 --> 00:00:05,580
from VMware and I want to just give a

3
00:00:05,580 --> 00:00:07,620
background about my team and where we

4
00:00:07,620 --> 00:00:09,179
are coming from so that the problem can

5
00:00:09,179 --> 00:00:12,179
be set in context so I am

6
00:00:12,179 --> 00:00:14,759
an engineer at a particular product

7
00:00:14,759 --> 00:00:17,220
called VMware Cloud director which is a

8
00:00:17,220 --> 00:00:19,320
multi-tenant cloud provider so people

9
00:00:19,320 --> 00:00:21,539
basically buy resources from VMware

10
00:00:21,539 --> 00:00:23,760
Cloud director and they create their own

11
00:00:23,760 --> 00:00:25,320
clouds and sell it to other internets

12
00:00:25,320 --> 00:00:28,260
and my team builds kubernetes clusters

13
00:00:28,260 --> 00:00:31,439
for those and one of the requirements

14
00:00:31,439 --> 00:00:33,899
which I have got in this team from my

15
00:00:33,899 --> 00:00:36,780
customers and also in earlier teams is

16
00:00:36,780 --> 00:00:40,500
about how do we actually let a user move

17
00:00:40,500 --> 00:00:43,020
to another leave the company or move to

18
00:00:43,020 --> 00:00:44,940
another team while still keeping their

19
00:00:44,940 --> 00:00:47,160
workloads active and while still keeping

20
00:00:47,160 --> 00:00:49,559
all of their

21
00:00:49,559 --> 00:00:54,000
um jobs intact and that is the overall

22
00:00:54,000 --> 00:00:56,399
aspect of this talk and it's not as the

23
00:00:56,399 --> 00:00:59,340
simple a problem I mean it's not easy to

24
00:00:59,340 --> 00:01:01,559
solve in general but we can actually

25
00:01:01,559 --> 00:01:03,480
look at some aspects of this so that's

26
00:01:03,480 --> 00:01:06,420
the part of the talk when she said means

27
00:01:06,420 --> 00:01:09,119
pretty much quit at that time how do you

28
00:01:09,119 --> 00:01:11,460
protect your kubernetes cluster and it's

29
00:01:11,460 --> 00:01:12,659
an interesting thing because you would

30
00:01:12,659 --> 00:01:14,220
think that it's a solid problem but it

31
00:01:14,220 --> 00:01:16,799
is not so yeah usually humans and

32
00:01:16,799 --> 00:01:18,780
operators are owners of clusters or

33
00:01:18,780 --> 00:01:21,180
applications in clusters and these

34
00:01:21,180 --> 00:01:24,479
humans change teams or companies so we

35
00:01:24,479 --> 00:01:26,220
will focus on one particular aspect of

36
00:01:26,220 --> 00:01:29,159
it which is um when a cluster owner

37
00:01:29,159 --> 00:01:32,159
leaves a team they have to ah so we need

38
00:01:32,159 --> 00:01:34,140
to the product needs to have a clear way

39
00:01:34,140 --> 00:01:36,360
of transferring ownership from this

40
00:01:36,360 --> 00:01:37,500
particular cluster owner to another

41
00:01:37,500 --> 00:01:41,460
particular cluster owner and so the

42
00:01:41,460 --> 00:01:43,740
thing is that there are multiple owners

43
00:01:43,740 --> 00:01:45,420
possible because it's a multi-tenant

44
00:01:45,420 --> 00:01:47,880
cloud and in this particular case we are

45
00:01:47,880 --> 00:01:49,740
discussing in in the context of

46
00:01:49,740 --> 00:01:51,479
kubernetes clusters created using Cube

47
00:01:51,479 --> 00:01:53,880
ADM which is a very common cluster

48
00:01:53,880 --> 00:01:55,860
creation mechanism nowadays

49
00:01:55,860 --> 00:01:57,840
um and unlike the rest of the talks we

50
00:01:57,840 --> 00:02:00,600
have seen here this is not very industry

51
00:02:00,600 --> 00:02:03,000
generic or what do you say it's not a

52
00:02:03,000 --> 00:02:04,920
very broad scope problem but it's a

53
00:02:04,920 --> 00:02:08,280
particular problem and there are

54
00:02:08,280 --> 00:02:10,619
solutions at least achievable so it's

55
00:02:10,619 --> 00:02:12,360
not like hey this is the industry and I

56
00:02:12,360 --> 00:02:14,099
don't know what's going on and these are

57
00:02:14,099 --> 00:02:16,020
all the tools available so this is more

58
00:02:16,020 --> 00:02:18,180
focused and we will actually see how we

59
00:02:18,180 --> 00:02:21,060
can actually solve this so as a solution

60
00:02:21,060 --> 00:02:23,400
The Simple Solution is you transfer

61
00:02:23,400 --> 00:02:25,680
cluster ownership to another user that

62
00:02:25,680 --> 00:02:27,420
is the sort of a most obvious thing to

63
00:02:27,420 --> 00:02:29,160
do and you revoke access from the old

64
00:02:29,160 --> 00:02:32,580
user however is it really feasible like

65
00:02:32,580 --> 00:02:35,459
the problem is very clear actually if

66
00:02:35,459 --> 00:02:38,220
you look at uh the products which build

67
00:02:38,220 --> 00:02:41,220
it this doing this is an afterthought I

68
00:02:41,220 --> 00:02:43,860
have been in multiple startups and also

69
00:02:43,860 --> 00:02:47,459
a semi non-startup companies and usually

70
00:02:47,459 --> 00:02:49,860
whenever somebody actually has to leave

71
00:02:49,860 --> 00:02:51,959
there's no UI based way or there's no

72
00:02:51,959 --> 00:02:53,640
simple click through saying that hey

73
00:02:53,640 --> 00:02:55,739
take all of the resources which this

74
00:02:55,739 --> 00:02:57,660
person has transfer it to another person

75
00:02:57,660 --> 00:03:00,660
and while also keeping all of the

76
00:03:00,660 --> 00:03:02,580
workloads active and running and so on

77
00:03:02,580 --> 00:03:05,040
so it is an afterthought and people

78
00:03:05,040 --> 00:03:07,500
actually whenever it happens uh

79
00:03:07,500 --> 00:03:09,000
developers scramble they sort of go

80
00:03:09,000 --> 00:03:11,099
behind to a database and they begin to

81
00:03:11,099 --> 00:03:12,599
run queries and go and update all of

82
00:03:12,599 --> 00:03:14,879
these users and so on so the solution is

83
00:03:14,879 --> 00:03:16,680
sort of simple to state but it is not

84
00:03:16,680 --> 00:03:18,900
necessarily easy to achieve

85
00:03:18,900 --> 00:03:21,180
and if you look at a kubernetes cluster

86
00:03:21,180 --> 00:03:24,659
you ah for example have the control

87
00:03:24,659 --> 00:03:26,580
plane which I mean the you typically

88
00:03:26,580 --> 00:03:28,980
there's a load balancer not sure if my

89
00:03:28,980 --> 00:03:30,659
cursor is available but yeah so there's

90
00:03:30,659 --> 00:03:32,400
a load balance of renting the whole

91
00:03:32,400 --> 00:03:34,080
cluster so in a kubernetes cluster

92
00:03:34,080 --> 00:03:35,700
pretty much the IP address and Port are

93
00:03:35,700 --> 00:03:37,140
the stable aspect there's a load

94
00:03:37,140 --> 00:03:38,640
balancer you have a series of nodes

95
00:03:38,640 --> 00:03:41,519
nodes could be connected to disks or

96
00:03:41,519 --> 00:03:43,920
volumes those are the PVS the persistent

97
00:03:43,920 --> 00:03:46,500
volume as mentioned in kubernetes you

98
00:03:46,500 --> 00:03:48,180
could have some gpos attached to nodes

99
00:03:48,180 --> 00:03:50,459
and so on and there are each node has

100
00:03:50,459 --> 00:03:52,560
the compute and storage and so on and we

101
00:03:52,560 --> 00:03:54,959
would ah in a multi-tenant cloud every

102
00:03:54,959 --> 00:03:57,540
single bit of this is owned by a user it

103
00:03:57,540 --> 00:03:59,159
is actually referring to a user idea at

104
00:03:59,159 --> 00:04:00,720
the back and when that user is

105
00:04:00,720 --> 00:04:02,459
deactivated all of these have to move to

106
00:04:02,459 --> 00:04:06,720
another user so we have other logical

107
00:04:06,720 --> 00:04:08,159
aspects apart from the infrastructure

108
00:04:08,159 --> 00:04:10,379
aspects ah there are military italics

109
00:04:10,379 --> 00:04:12,900
some set of Secrets there is root access

110
00:04:12,900 --> 00:04:15,120
to the node you will have to revoke and

111
00:04:15,120 --> 00:04:16,978
beyond all of this there are application

112
00:04:16,978 --> 00:04:19,199
related Secrets such as if there is a

113
00:04:19,199 --> 00:04:20,459
postgres database there may be a

114
00:04:20,459 --> 00:04:24,120
postgres admin password now if uh you

115
00:04:24,120 --> 00:04:25,139
cannot I mean you will have to

116
00:04:25,139 --> 00:04:26,520
essentially rotate that password or

117
00:04:26,520 --> 00:04:28,020
change it if there are a series of

118
00:04:28,020 --> 00:04:29,160
certificates which are used you will

119
00:04:29,160 --> 00:04:31,979
have to revoke those or change it so it

120
00:04:31,979 --> 00:04:34,320
actually just goes in a fractal manner I

121
00:04:34,320 --> 00:04:36,479
mean it just keeps going further and

122
00:04:36,479 --> 00:04:37,979
further depending on if you have a

123
00:04:37,979 --> 00:04:39,540
Apache web server then what is the

124
00:04:39,540 --> 00:04:42,780
essential route behind that and admin

125
00:04:42,780 --> 00:04:44,160
user behind that and you have to go and

126
00:04:44,160 --> 00:04:46,139
change this and so on so the scope is

127
00:04:46,139 --> 00:04:49,680
really very wide and people don't have a

128
00:04:49,680 --> 00:04:51,000
very clear system of saying that hey

129
00:04:51,000 --> 00:04:52,500
these are the things and this is how you

130
00:04:52,500 --> 00:04:53,880
transfer

131
00:04:53,880 --> 00:04:57,540
so ah just to recap on the cloud infra

132
00:04:57,540 --> 00:04:59,280
object level you have nodes which have

133
00:04:59,280 --> 00:05:00,900
to be transferred networking components

134
00:05:00,900 --> 00:05:02,820
so load balancer is a block but for

135
00:05:02,820 --> 00:05:04,740
example in VMware Cloud director you

136
00:05:04,740 --> 00:05:07,320
have a virtual service load balancer

137
00:05:07,320 --> 00:05:10,560
Pool Port related some details like

138
00:05:10,560 --> 00:05:12,720
application board profile and so on uh

139
00:05:12,720 --> 00:05:14,280
you have certificates which actually

140
00:05:14,280 --> 00:05:16,979
decrypt some of these load balancers if

141
00:05:16,979 --> 00:05:18,660
there are application based interests

142
00:05:18,660 --> 00:05:21,300
you have storage which has to be moved

143
00:05:21,300 --> 00:05:23,280
to the new user as well and VMware Cloud

144
00:05:23,280 --> 00:05:24,780
director had a bug wherein it could not

145
00:05:24,780 --> 00:05:26,520
move and we are looking at solving this

146
00:05:26,520 --> 00:05:28,919
so though we have done nearly everything

147
00:05:28,919 --> 00:05:31,380
there is still one bit hanging and this

148
00:05:31,380 --> 00:05:32,699
has been a product which has been in the

149
00:05:32,699 --> 00:05:34,380
industry for a while right so that is

150
00:05:34,380 --> 00:05:36,960
the sort of the complexity in general

151
00:05:36,960 --> 00:05:39,479
and there are other complexities so you

152
00:05:39,479 --> 00:05:40,919
take something from one user and you

153
00:05:40,919 --> 00:05:42,780
give it to another user this has to be

154
00:05:42,780 --> 00:05:44,639
done by an administrator who actually

155
00:05:44,639 --> 00:05:47,520
can perform this operation but now does

156
00:05:47,520 --> 00:05:49,979
the destination user have enough quota

157
00:05:49,979 --> 00:05:52,020
to accept these VMS suppose they have

158
00:05:52,020 --> 00:05:54,419
FICO VMS and they have their code is 5

159
00:05:54,419 --> 00:05:56,039
they may not be able to take a cluster

160
00:05:56,039 --> 00:05:58,380
which has another 100 VMS so those are

161
00:05:58,380 --> 00:05:59,699
some considerations which we will need

162
00:05:59,699 --> 00:06:01,320
to look at they need to have permissions

163
00:06:01,320 --> 00:06:03,360
to be able to do all of the operations

164
00:06:03,360 --> 00:06:04,860
which were done by the user in the

165
00:06:04,860 --> 00:06:07,320
previous case and so on so every your

166
00:06:07,320 --> 00:06:09,780
object of the user must be transferred

167
00:06:09,780 --> 00:06:11,880
to the new one logical and physical

168
00:06:11,880 --> 00:06:14,340
uh so yeah and administrator needs to

169
00:06:14,340 --> 00:06:15,780
have access to both objects and be able

170
00:06:15,780 --> 00:06:18,560
to transfer so that is the other one

171
00:06:18,560 --> 00:06:21,060
yeah and in the infra objects we have

172
00:06:21,060 --> 00:06:22,979
some logical and some physical logical

173
00:06:22,979 --> 00:06:25,440
ones are certificates root access to the

174
00:06:25,440 --> 00:06:27,419
nodes and the actual kubernetes user

175
00:06:27,419 --> 00:06:28,979
accounts user records cannot be

176
00:06:28,979 --> 00:06:30,060
transferred you have to delete and

177
00:06:30,060 --> 00:06:31,919
pretty much recreate then you have Port

178
00:06:31,919 --> 00:06:35,100
profiles and in VMware Cloud directory

179
00:06:35,100 --> 00:06:36,960
you have some other metadata like

180
00:06:36,960 --> 00:06:39,539
defined entities and VM based metadata

181
00:06:39,539 --> 00:06:41,340
and kubernetes objects are more standard

182
00:06:41,340 --> 00:06:43,740
you have user created secrets secrets on

183
00:06:43,740 --> 00:06:45,600
the cluster you have are back on the

184
00:06:45,600 --> 00:06:47,639
user and user accounts and Cube config

185
00:06:47,639 --> 00:06:49,620
and so on now we come to the actual

186
00:06:49,620 --> 00:06:50,460
problem

187
00:06:50,460 --> 00:06:52,139
so all of this can be transferred

188
00:06:52,139 --> 00:06:54,780
however the admin Cube config cannot be

189
00:06:54,780 --> 00:06:58,139
transferred so the admin Cube config is

190
00:06:58,139 --> 00:07:00,360
a break glass cube config

191
00:07:00,360 --> 00:07:03,360
so you once a person has access to that

192
00:07:03,360 --> 00:07:04,800
particular Cube config there is no

193
00:07:04,800 --> 00:07:06,600
kubernetes command or anything which

194
00:07:06,600 --> 00:07:09,180
just says hey go and just rotate this

195
00:07:09,180 --> 00:07:10,860
certificates or revoke this you cannot

196
00:07:10,860 --> 00:07:13,440
revoke a particular queue config and you

197
00:07:13,440 --> 00:07:15,780
cannot just say that

198
00:07:15,780 --> 00:07:17,580
um so there are some mitigations to this

199
00:07:17,580 --> 00:07:20,340
ah the admin Cube config will be on the

200
00:07:20,340 --> 00:07:22,740
control plane nodes so you can say I

201
00:07:22,740 --> 00:07:25,259
will revoke the control plane nodes root

202
00:07:25,259 --> 00:07:27,240
access right but an admin could have

203
00:07:27,240 --> 00:07:28,740
made a copy of this and kept it in his

204
00:07:28,740 --> 00:07:31,199
cache that will still work I mean if the

205
00:07:31,199 --> 00:07:32,639
admin is the malicious admin who is

206
00:07:32,639 --> 00:07:35,520
quitting the company or he is I mean

207
00:07:35,520 --> 00:07:37,560
basically we won't be able to access it

208
00:07:37,560 --> 00:07:39,900
so if the earlier and the other thing is

209
00:07:39,900 --> 00:07:42,419
suppose the admin you can suppose you

210
00:07:42,419 --> 00:07:44,160
say that okay I'll block the network all

211
00:07:44,160 --> 00:07:46,199
of my clusters are internal but if the

212
00:07:46,199 --> 00:07:48,960
admin moves to another team in then at

213
00:07:48,960 --> 00:07:50,940
that particular case also essentially

214
00:07:50,940 --> 00:07:52,680
you will not be able to block it because

215
00:07:52,680 --> 00:07:55,500
usually within the company all of the IP

216
00:07:55,500 --> 00:07:58,740
addresses are accessible through a VPN

217
00:07:58,740 --> 00:08:00,300
so yeah essentially you cannot access

218
00:08:00,300 --> 00:08:02,400
network unless there are Provisions from

219
00:08:02,400 --> 00:08:04,199
the infra you cannot change the cluster

220
00:08:04,199 --> 00:08:06,120
IP easily because the certificates and

221
00:08:06,120 --> 00:08:07,860
of kubernetes uses it

222
00:08:07,860 --> 00:08:10,560
so what is the solution revoking the

223
00:08:10,560 --> 00:08:12,000
admin Cube config

224
00:08:12,000 --> 00:08:14,160
so there are there are Open tickets in

225
00:08:14,160 --> 00:08:16,560
uh kubernetes in Cuban to actually

226
00:08:16,560 --> 00:08:18,900
handle this and there is no solution it

227
00:08:18,900 --> 00:08:21,419
cannot be revoked uh easily that's what

228
00:08:21,419 --> 00:08:22,620
I'm saying because the purpose of this

229
00:08:22,620 --> 00:08:25,620
talk is to actually revoke and the way

230
00:08:25,620 --> 00:08:28,080
to do that is the manual revocation

231
00:08:28,080 --> 00:08:30,259
it is definitely not a simple process

232
00:08:30,259 --> 00:08:32,820
there are some documents which hint at

233
00:08:32,820 --> 00:08:35,760
it there at very high level and there

234
00:08:35,760 --> 00:08:37,380
are some resources available but they

235
00:08:37,380 --> 00:08:39,120
are really Advanced and I couldn't

236
00:08:39,120 --> 00:08:42,179
really make a head or tail of it so that

237
00:08:42,179 --> 00:08:45,000
is the whole point of the talk so some

238
00:08:45,000 --> 00:08:46,200
of the things which helped me were

239
00:08:46,200 --> 00:08:48,540
essentially the last one Kelsey Heritage

240
00:08:48,540 --> 00:08:50,820
kubernetes the hard way wherein he says

241
00:08:50,820 --> 00:08:53,000
how to create search and so on and

242
00:08:53,000 --> 00:08:55,320
kubernetes also has some talks about

243
00:08:55,320 --> 00:08:57,779
manual rotation of CSS but that is also

244
00:08:57,779 --> 00:08:59,880
limited it just says where the cells are

245
00:08:59,880 --> 00:09:03,480
and what they must contain so the

246
00:09:03,480 --> 00:09:05,519
overall procedure essentially will be to

247
00:09:05,519 --> 00:09:07,500
create a root CA on your own you can

248
00:09:07,500 --> 00:09:10,260
have a self-centered CA then search for

249
00:09:10,260 --> 00:09:12,660
etcd cube controller manager I mean all

250
00:09:12,660 --> 00:09:14,820
of these the search for API server

251
00:09:14,820 --> 00:09:16,560
cubelet and Cube scheduler

252
00:09:16,560 --> 00:09:18,420
I copy these sets to all of the nodes

253
00:09:18,420 --> 00:09:21,300
create new Cube config files by using

254
00:09:21,300 --> 00:09:23,040
cubecutive commands for all of these

255
00:09:23,040 --> 00:09:25,800
node Cube proxy uh Cube control manager

256
00:09:25,800 --> 00:09:27,060
by node I mean they're pretty much

257
00:09:27,060 --> 00:09:29,399
cubelet and also for the admin

258
00:09:29,399 --> 00:09:31,980
and then copy all of these config files

259
00:09:31,980 --> 00:09:34,620
to the nodes and then there is the

260
00:09:34,620 --> 00:09:36,720
update of static manifest all of these

261
00:09:36,720 --> 00:09:39,660
manifests for cube controller manager

262
00:09:39,660 --> 00:09:41,339
Cube API server they all refer to these

263
00:09:41,339 --> 00:09:43,500
search and they refer to multiple search

264
00:09:43,500 --> 00:09:44,940
you know com I mean complex way

265
00:09:44,940 --> 00:09:47,580
essentially you have to do all of this

266
00:09:47,580 --> 00:09:49,860
then you create a new role in order to

267
00:09:49,860 --> 00:09:52,080
be able to access the cubelet and then

268
00:09:52,080 --> 00:09:54,180
update the cubelet service files so once

269
00:09:54,180 --> 00:09:55,440
you do all of those

270
00:09:55,440 --> 00:09:58,140
then you will be able to essentially get

271
00:09:58,140 --> 00:09:59,760
a new admin Cube config and the old

272
00:09:59,760 --> 00:10:01,860
admin Cube config will not be accessible

273
00:10:01,860 --> 00:10:03,540
so just to be clear rotation of the

274
00:10:03,540 --> 00:10:05,279
queue config does not touch admin I mean

275
00:10:05,279 --> 00:10:07,740
the old ones are still accessible

276
00:10:07,740 --> 00:10:09,600
so that is what I would like to demo

277
00:10:09,600 --> 00:10:10,620
here

278
00:10:10,620 --> 00:10:13,320
I have recorded a demo with kind via

279
00:10:13,320 --> 00:10:16,260
itself but we can potentially uh

280
00:10:16,260 --> 00:10:18,779
we could have run the demo here itself

281
00:10:18,779 --> 00:10:20,700
so

282
00:10:20,700 --> 00:10:23,339
that does work so no I have to

283
00:10:23,339 --> 00:10:28,160
stop the slideshow just give me a second

284
00:10:32,700 --> 00:10:35,180
all right

285
00:10:43,019 --> 00:10:45,860
so

286
00:10:48,959 --> 00:10:51,360
allows you to navigate this very easily

287
00:10:51,360 --> 00:10:53,600
right because

288
00:10:53,600 --> 00:10:55,740
you can manage but you cannot manually

289
00:10:55,740 --> 00:10:57,600
revoke and rotate the certificate you

290
00:10:57,600 --> 00:11:00,120
can refresh this certificate which is

291
00:11:00,120 --> 00:11:01,680
after the certificate expires after a

292
00:11:01,680 --> 00:11:03,360
year so you just refresh it it will you

293
00:11:03,360 --> 00:11:04,680
but the old ones will still be

294
00:11:04,680 --> 00:11:06,060
accessible because they have an overlap

295
00:11:06,060 --> 00:11:07,800
of the last interview

296
00:11:07,800 --> 00:11:09,839
yeah that will not handle the admin Cube

297
00:11:09,839 --> 00:11:11,760
config there are some tools from Google

298
00:11:11,760 --> 00:11:13,980
which do that yeah

299
00:11:13,980 --> 00:11:16,260
and anyway so this is what happens

300
00:11:16,260 --> 00:11:17,880
ultimately behind the scenes even if

301
00:11:17,880 --> 00:11:19,860
Google does this it is pretty much the

302
00:11:19,860 --> 00:11:20,700
same way

303
00:11:20,700 --> 00:11:22,800
so I have a kind based cluster and a

304
00:11:22,800 --> 00:11:25,860
demo based on kind over here so I mean

305
00:11:25,860 --> 00:11:28,200
basically this is the cluster it's uh

306
00:11:28,200 --> 00:11:30,779
one control plane and one worker this is

307
00:11:30,779 --> 00:11:32,339
this was simpler to use as compared to

308
00:11:32,339 --> 00:11:35,220
accessing something over GCE or AWS or

309
00:11:35,220 --> 00:11:36,779
other things so that we don't have any

310
00:11:36,779 --> 00:11:41,100
network issues and we can look at it so

311
00:11:41,100 --> 00:11:43,260
ah creation of the cluster is pretty

312
00:11:43,260 --> 00:11:45,540
quick I will just forward it some minute

313
00:11:45,540 --> 00:11:47,279
or so

314
00:11:47,279 --> 00:11:50,540
a bit of oops okay

315
00:11:50,880 --> 00:11:53,220
and uh please ask questions as these go

316
00:11:53,220 --> 00:11:56,339
go on I will pause at some aspects and

317
00:11:56,339 --> 00:12:00,560
also show how the files look like

318
00:12:19,560 --> 00:12:21,839
okay

319
00:12:21,839 --> 00:12:25,760
um what is the thing for going up

320
00:12:28,380 --> 00:12:31,700
so once this okay

321
00:12:35,940 --> 00:12:38,839
so yeah

322
00:12:44,639 --> 00:12:46,500
um so basically after that we can just

323
00:12:46,500 --> 00:12:48,959
copy the admin Cube config so that is

324
00:12:48,959 --> 00:12:49,920
called getting copied from ADC

325
00:12:49,920 --> 00:12:52,139
kubernetes admin.com and that is inside

326
00:12:52,139 --> 00:12:54,839
the thing so we can just um after

327
00:12:54,839 --> 00:12:57,120
copying it we can just see that we have

328
00:12:57,120 --> 00:13:01,320
access to the AE pods and so on so this

329
00:13:01,320 --> 00:13:03,180
one will say no host because the C

330
00:13:03,180 --> 00:13:06,600
actually this is a port mapped in the

331
00:13:06,600 --> 00:13:08,639
case of kubernetes in general in case of

332
00:13:08,639 --> 00:13:11,519
kind kind is kubernetes in Docker so we

333
00:13:11,519 --> 00:13:13,860
will have to just edit that in the

334
00:13:13,860 --> 00:13:16,200
report map so that we can

335
00:13:16,200 --> 00:13:19,160
very quickly do

336
00:13:22,440 --> 00:13:25,260
okay I should run this as at 2x the

337
00:13:25,260 --> 00:13:27,420
speed but you can see all of the things

338
00:13:27,420 --> 00:13:29,399
now so it has a kind it has a kind

339
00:13:29,399 --> 00:13:30,839
control plane and the current worker as

340
00:13:30,839 --> 00:13:34,459
nodes and multiple things

341
00:13:34,740 --> 00:13:38,040
so let me see if I can run it faster now

342
00:13:38,040 --> 00:13:40,200
play that speed let me just make it this

343
00:13:40,200 --> 00:13:41,760
1.05

344
00:13:41,760 --> 00:13:43,680
so I created a directory called mypki

345
00:13:43,680 --> 00:13:46,980
and I now begin to create search here so

346
00:13:46,980 --> 00:13:51,060
this is this Base called ca.pen I mean

347
00:13:51,060 --> 00:13:53,880
cr dot payment CA key.com so I use CF

348
00:13:53,880 --> 00:13:57,300
SSL that is cloud face SSL to create it

349
00:13:57,300 --> 00:14:02,279
it's just a simpler open SSL can be used

350
00:14:02,279 --> 00:14:06,779
likewise we need to create an admins uh

351
00:14:06,779 --> 00:14:08,820
I mean so yeah basically these are

352
00:14:08,820 --> 00:14:12,200
request and CFM is here

353
00:14:13,320 --> 00:14:15,720
so the ca key is called CA Dash key dot

354
00:14:15,720 --> 00:14:17,360
payment that's why it's not shown there

355
00:14:17,360 --> 00:14:20,279
and uh we need to create the cubelet

356
00:14:20,279 --> 00:14:21,480
search

357
00:14:21,480 --> 00:14:23,279
so one of the things is the internal IP

358
00:14:23,279 --> 00:14:25,260
over here so the internal IP is

359
00:14:25,260 --> 00:14:27,180
essentially obtained from the evm that's

360
00:14:27,180 --> 00:14:30,800
the that's not the um

361
00:14:32,240 --> 00:14:35,880
so that is what the internal nodes ipus

362
00:14:35,880 --> 00:14:37,380
and many of these will directly come

363
00:14:37,380 --> 00:14:39,000
from the node so

364
00:14:39,000 --> 00:14:41,220
that would have to be in the list of

365
00:14:41,220 --> 00:14:43,740
internal IPS so just you can add that

366
00:14:43,740 --> 00:14:45,779
the external is 127 that is where you

367
00:14:45,779 --> 00:14:47,339
actually look at

368
00:14:47,339 --> 00:14:49,199
so we are doing it for both the current

369
00:14:49,199 --> 00:14:50,940
control plane and kind worker so it's a

370
00:14:50,940 --> 00:14:52,199
loop so these are the cube letter

371
00:14:52,199 --> 00:14:54,660
related search

372
00:14:54,660 --> 00:14:57,380
and then

373
00:14:59,820 --> 00:15:01,320
so if you look at that there's the

374
00:15:01,320 --> 00:15:02,820
ignore the middle Cube config will

375
00:15:02,820 --> 00:15:05,540
generate that again

376
00:15:06,959 --> 00:15:10,440
and now the this one goes in a bit so

377
00:15:10,440 --> 00:15:12,360
there is the controller manager and then

378
00:15:12,360 --> 00:15:14,880
the cube proxy there are a bunch of

379
00:15:14,880 --> 00:15:16,920
these search which have to be created

380
00:15:16,920 --> 00:15:17,940
and used

381
00:15:17,940 --> 00:15:20,600
so

382
00:15:21,720 --> 00:15:23,519
let me skip to the end of it rather

383
00:15:23,519 --> 00:15:25,680
because this demo takes a little bit of

384
00:15:25,680 --> 00:15:27,839
time

385
00:15:27,839 --> 00:15:29,820
okay there is only one let it continue

386
00:15:29,820 --> 00:15:32,160
and then we can skip

387
00:15:32,160 --> 00:15:35,420
see a scheduler

388
00:15:38,399 --> 00:15:41,699
yeah this is the one which is uh sort of

389
00:15:41,699 --> 00:15:43,860
uh interesting in the sense that yeah

390
00:15:43,860 --> 00:15:45,300
these are just the host names so this is

391
00:15:45,300 --> 00:15:48,120
one used by etcd and so you need to have

392
00:15:48,120 --> 00:15:51,120
all of these default SVC default SPC dot

393
00:15:51,120 --> 00:15:52,800
cluster and so on so let it

394
00:15:52,800 --> 00:15:56,000
it begins to use it

395
00:16:04,320 --> 00:16:06,000
and uh

396
00:16:06,000 --> 00:16:08,940
yeah so this 10.96.0.1 is the cluster IP

397
00:16:08,940 --> 00:16:12,120
so that is what I wanted to just show so

398
00:16:12,120 --> 00:16:13,980
the admin dot Cube config is still

399
00:16:13,980 --> 00:16:16,500
accessible as you can see it's called

400
00:16:16,500 --> 00:16:18,959
dot orange uh yeah all those are

401
00:16:18,959 --> 00:16:20,220
accessible very soon it will become

402
00:16:20,220 --> 00:16:24,500
inaccessible once we change this

403
00:16:25,740 --> 00:16:26,880
so

404
00:16:26,880 --> 00:16:28,920
yeah this is the point where I'm copying

405
00:16:28,920 --> 00:16:30,360
the search I copy it to something called

406
00:16:30,360 --> 00:16:32,579
mypki so the kubernetes sets are

407
00:16:32,579 --> 00:16:34,260
actually underscore under

408
00:16:34,260 --> 00:16:36,240
Etc kubernetes speaker itself I've just

409
00:16:36,240 --> 00:16:39,600
put it under my pki so and uh

410
00:16:39,600 --> 00:16:41,639
research also need to be installed on

411
00:16:41,639 --> 00:16:43,019
that so there is this update Cas

412
00:16:43,019 --> 00:16:45,060
certificates because uh this is like a

413
00:16:45,060 --> 00:16:48,480
Ubuntu machine like equivalent

414
00:16:48,480 --> 00:16:50,699
in a kind VM say basically that Docker

415
00:16:50,699 --> 00:16:54,500
machine is like a Ruben to me yeah

416
00:16:56,100 --> 00:16:59,699
so that has installed the search we have

417
00:16:59,699 --> 00:17:02,339
still not changed anything

418
00:17:02,339 --> 00:17:04,740
uh in the sense that uh the next set is

419
00:17:04,740 --> 00:17:06,720
creation of cube configs so we can

420
00:17:06,720 --> 00:17:09,480
essentially skim through this

421
00:17:09,480 --> 00:17:11,640
so we need to create one

422
00:17:11,640 --> 00:17:14,040
for each worker node that is these are

423
00:17:14,040 --> 00:17:18,199
the cube layer related Cube configs

424
00:17:19,619 --> 00:17:22,919
then the next one is the cube proxy Cube

425
00:17:22,919 --> 00:17:25,140
config and so on so let me just go

426
00:17:25,140 --> 00:17:27,380
forward

427
00:17:28,559 --> 00:17:30,240
yeah you have the cube controller manage

428
00:17:30,240 --> 00:17:31,799
your Cube config Cube scheduler Cube

429
00:17:31,799 --> 00:17:34,140
config and

430
00:17:34,140 --> 00:17:36,059
then we essentially

431
00:17:36,059 --> 00:17:39,179
ultimately have the whole lot the admin

432
00:17:39,179 --> 00:17:40,620
Cube config also was created in the

433
00:17:40,620 --> 00:17:41,880
interview

434
00:17:41,880 --> 00:17:44,299
right

435
00:17:44,460 --> 00:17:45,600
okay

436
00:17:45,600 --> 00:17:48,600
and at this particular point we copy all

437
00:17:48,600 --> 00:17:49,559
of those

438
00:17:49,559 --> 00:17:52,940
into multiple nodes

439
00:17:55,380 --> 00:17:57,539
so

440
00:17:57,539 --> 00:17:59,880
now we have a set of manifests and these

441
00:17:59,880 --> 00:18:00,960
are the manifests which we'll be

442
00:18:00,960 --> 00:18:03,539
replacing I will let it replace and show

443
00:18:03,539 --> 00:18:05,039
the cry cutter but I want to actually go

444
00:18:05,039 --> 00:18:08,539
through the manifests individually

445
00:18:11,700 --> 00:18:14,700
so basically I want to show that it is

446
00:18:14,700 --> 00:18:16,260
getting restarted so if you look at it

447
00:18:16,260 --> 00:18:19,799
you can actually log into the machine

448
00:18:19,799 --> 00:18:22,740
and you can do a critical PS these are

449
00:18:22,740 --> 00:18:24,240
all Docker images so code DNS and

450
00:18:24,240 --> 00:18:25,980
everything is there this is under a

451
00:18:25,980 --> 00:18:28,620
window where I do the copy and as soon

452
00:18:28,620 --> 00:18:30,179
as you do the copy cubelet will start to

453
00:18:30,179 --> 00:18:32,640
restart it so

454
00:18:32,640 --> 00:18:34,440
I mean if you do a PS minus a you can

455
00:18:34,440 --> 00:18:35,760
see that some things have started to

456
00:18:35,760 --> 00:18:39,299
exit so it is immediately dies and then

457
00:18:39,299 --> 00:18:41,220
it will start to come up and until Etc

458
00:18:41,220 --> 00:18:43,799
data is the API server API server will

459
00:18:43,799 --> 00:18:45,720
also die it won't come up

460
00:18:45,720 --> 00:18:48,120
and the last to come up will be Cube

461
00:18:48,120 --> 00:18:50,899
controller manager

462
00:18:52,559 --> 00:18:56,660
so this just takes some

463
00:19:00,419 --> 00:19:03,620
cycles and it

464
00:19:08,100 --> 00:19:10,380
so yeah basically after a while it just

465
00:19:10,380 --> 00:19:12,720
comes back up it tried three times and

466
00:19:12,720 --> 00:19:14,039
basically you can look at the logs of

467
00:19:14,039 --> 00:19:16,080
cube controller manager in critical and

468
00:19:16,080 --> 00:19:18,120
it is working so this critically is like

469
00:19:18,120 --> 00:19:20,760
a internal Docker image logs this does

470
00:19:20,760 --> 00:19:21,960
not mean that we can actually access

471
00:19:21,960 --> 00:19:25,559
from outside so the things are out so

472
00:19:25,559 --> 00:19:28,440
now the interesting part is the ah so

473
00:19:28,440 --> 00:19:29,820
the next part is the creation of the

474
00:19:29,820 --> 00:19:31,980
admin tube config so basically now I am

475
00:19:31,980 --> 00:19:34,080
going to use the new Cube config which

476
00:19:34,080 --> 00:19:35,640
has been created and I want to install

477
00:19:35,640 --> 00:19:39,120
some roles into it ah so it could not

478
00:19:39,120 --> 00:19:40,500
find the right Port because we had to

479
00:19:40,500 --> 00:19:42,360
essentially change the iPad I mean the

480
00:19:42,360 --> 00:19:44,640
port number because it's mapped right so

481
00:19:44,640 --> 00:19:46,740
basically it's the same Docker PS and

482
00:19:46,740 --> 00:19:50,299
change the port number and

483
00:19:50,520 --> 00:19:52,620
this is the new admin Cube config and

484
00:19:52,620 --> 00:19:54,299
you can see that

485
00:19:54,299 --> 00:19:58,520
once that is changed it should just work

486
00:20:01,740 --> 00:20:03,900
so once you actually add this we can

487
00:20:03,900 --> 00:20:05,700
begin to see the pods from the new one

488
00:20:05,700 --> 00:20:07,860
and the old one is the world admin Cube

489
00:20:07,860 --> 00:20:11,100
config is unusable as of now

490
00:20:11,100 --> 00:20:13,760
so

491
00:20:18,299 --> 00:20:20,640
I will just so basically I will just

492
00:20:20,640 --> 00:20:23,520
show one thing so though the new Cube

493
00:20:23,520 --> 00:20:25,679
config is access I mean

494
00:20:25,679 --> 00:20:27,740
um

495
00:20:27,840 --> 00:20:29,640
before we do that we just need to

496
00:20:29,640 --> 00:20:31,919
actually see once uh the thing is the

497
00:20:31,919 --> 00:20:33,179
the nodes and other things are

498
00:20:33,179 --> 00:20:34,559
accessible but you won't be able to see

499
00:20:34,559 --> 00:20:36,600
the Pod logs yet because the cubelet has

500
00:20:36,600 --> 00:20:38,160
to be restarted in order to see the Pod

501
00:20:38,160 --> 00:20:40,620
logs and to do the cubelet it is again

502
00:20:40,620 --> 00:20:42,120
you have to put in the search for that

503
00:20:42,120 --> 00:20:43,919
and so on

504
00:20:43,919 --> 00:20:46,140
so you can actually see that you can see

505
00:20:46,140 --> 00:20:48,360
all of the pods however if you actually

506
00:20:48,360 --> 00:20:51,539
try to get the logs you actually get a

507
00:20:51,539 --> 00:20:53,640
access denied you can just uh I mean

508
00:20:53,640 --> 00:20:56,700
basically try something and

509
00:20:56,700 --> 00:20:59,340
so it says that you need to be logged in

510
00:20:59,340 --> 00:21:00,780
and so on

511
00:21:00,780 --> 00:21:03,660
so the next part is to set the cubelet

512
00:21:03,660 --> 00:21:07,380
service and to restart it so that one

513
00:21:07,380 --> 00:21:10,260
basically there are two large files many

514
00:21:10,260 --> 00:21:11,700
of these are I'll just go through the

515
00:21:11,700 --> 00:21:13,620
files right now because as you can see

516
00:21:13,620 --> 00:21:15,960
some of these the line number 525 and

517
00:21:15,960 --> 00:21:18,679
526 okay we can just come back to this

518
00:21:18,679 --> 00:21:22,380
so the line number 525 the CLS TLS third

519
00:21:22,380 --> 00:21:24,419
file for example it is referring to Mike

520
00:21:24,419 --> 00:21:26,220
 so these were things which we

521
00:21:26,220 --> 00:21:27,539
created just now

522
00:21:27,539 --> 00:21:32,179
so that is essentially the

523
00:21:37,500 --> 00:21:39,900
one thing is the ER to one gotcha sort

524
00:21:39,900 --> 00:21:44,340
of is that you need to sort of delete

525
00:21:44,340 --> 00:21:47,580
the existing Cube configs so actually

526
00:21:47,580 --> 00:21:50,340
here uh a few lines ago I removed the

527
00:21:50,340 --> 00:21:52,620
not the pickup comes the wear lip

528
00:21:52,620 --> 00:21:55,799
tubelet slash pki that is reused so if

529
00:21:55,799 --> 00:21:57,000
you don't delete that it will use the

530
00:21:57,000 --> 00:21:58,200
old shirts

531
00:21:58,200 --> 00:22:01,080
so you can I'm just looking at the

532
00:22:01,080 --> 00:22:02,700
cubelet cert and if you go to the bottom

533
00:22:02,700 --> 00:22:04,260
uh you can see that actually

534
00:22:04,260 --> 00:22:06,539
certificates have been rotated so it

535
00:22:06,539 --> 00:22:07,620
have it will shut down the client

536
00:22:07,620 --> 00:22:09,900
connections and restart with the new

537
00:22:09,900 --> 00:22:11,400
credentials

538
00:22:11,400 --> 00:22:14,299
so that is

539
00:22:15,600 --> 00:22:17,280
yeah it just wipes it out because the

540
00:22:17,280 --> 00:22:19,679
pki is new it just goes and gets rid of

541
00:22:19,679 --> 00:22:21,480
all of the old ones and cleanser print

542
00:22:21,480 --> 00:22:22,860
gets the new one so you can see that

543
00:22:22,860 --> 00:22:24,600
some of them are just created 29 seconds

544
00:22:24,600 --> 00:22:26,880
ago that is the local provisional and

545
00:22:26,880 --> 00:22:28,860
became FCI and so on the ones which are

546
00:22:28,860 --> 00:22:31,080
four minutes ago are still running those

547
00:22:31,080 --> 00:22:32,940
are the

548
00:22:32,940 --> 00:22:35,580
this comes in here but um

549
00:22:35,580 --> 00:22:37,440
yeah the ones which are running etcd and

550
00:22:37,440 --> 00:22:38,940
so on there don't get restarted because

551
00:22:38,940 --> 00:22:42,000
they have the right ticket so

552
00:22:42,000 --> 00:22:44,580
cubelet just restarts the others and now

553
00:22:44,580 --> 00:22:44,610
um

554
00:22:44,610 --> 00:22:46,020
[Music]

555
00:22:46,020 --> 00:22:48,659
I just uh yeah I mean basically I'm just

556
00:22:48,659 --> 00:22:50,280
showing that with the

557
00:22:50,280 --> 00:22:51,000
um

558
00:22:51,000 --> 00:22:52,500
with the new Cube config you can still

559
00:22:52,500 --> 00:22:54,120
access I mean you can look at all of the

560
00:22:54,120 --> 00:22:56,220
logs and so on

561
00:22:56,220 --> 00:22:58,380
so yeah the same command for looking at

562
00:22:58,380 --> 00:23:01,020
the logs now works and it has

563
00:23:01,020 --> 00:23:03,480
essentially created it

564
00:23:03,480 --> 00:23:05,880
so and the original Cube config is not

565
00:23:05,880 --> 00:23:07,980
usable anymore so this is what we set

566
00:23:07,980 --> 00:23:11,280
out to do to revoke this and

567
00:23:11,280 --> 00:23:13,820
if you actually do this

568
00:23:13,820 --> 00:23:16,440
admin.config whatever K get parts minus

569
00:23:16,440 --> 00:23:18,900
a you get that this certificate decide

570
00:23:18,900 --> 00:23:20,640
by a non Authority and this is what you

571
00:23:20,640 --> 00:23:22,860
intended to do however there is no

572
00:23:22,860 --> 00:23:24,360
automation of this from the kubernetes

573
00:23:24,360 --> 00:23:27,240
and just to be clear so we need to

574
00:23:27,240 --> 00:23:29,280
essentially manually revoke and let's

575
00:23:29,280 --> 00:23:31,380
get back to that's the end of this demo

576
00:23:31,380 --> 00:23:33,539
pretty much the new clipconfigure is

577
00:23:33,539 --> 00:23:36,299
accessible and it does it so is that the

578
00:23:36,299 --> 00:23:37,500
it

579
00:23:37,500 --> 00:23:40,500
uh yeah there's nothing else so one

580
00:23:40,500 --> 00:23:42,840
thing which I want to say is that uh the

581
00:23:42,840 --> 00:23:44,700
kind worker for example we didn't change

582
00:23:44,700 --> 00:23:47,039
the workers cubelets so the worker and

583
00:23:47,039 --> 00:23:48,360
we didn't change the asserts in the

584
00:23:48,360 --> 00:23:50,280
worker or update search in the worker so

585
00:23:50,280 --> 00:23:52,980
the worker is still not

586
00:23:52,980 --> 00:23:54,360
yeah they are they will need to be

587
00:23:54,360 --> 00:23:55,559
changed so if you want to access the

588
00:23:55,559 --> 00:23:57,360
logs of the worker it will not show

589
00:23:57,360 --> 00:24:00,840
anything and so on so that one has to be

590
00:24:00,840 --> 00:24:03,000
done so this has to be done in a loop so

591
00:24:03,000 --> 00:24:06,299
let's get back to the demo I mean the

592
00:24:06,299 --> 00:24:08,820
thing

593
00:24:08,820 --> 00:24:11,820
okay

594
00:24:12,960 --> 00:24:15,179
right so we still have

595
00:24:15,179 --> 00:24:17,520
quite a bit of time right

596
00:24:17,520 --> 00:24:20,880
so yeah the limitations are yeah there

597
00:24:20,880 --> 00:24:22,320
is a cluster downtime if you have a

598
00:24:22,320 --> 00:24:23,220
single node cluster if you have

599
00:24:23,220 --> 00:24:24,659
multi-node clusters then there is no

600
00:24:24,659 --> 00:24:27,000
downtime uh however all of these are

601
00:24:27,000 --> 00:24:29,460
restarted and a cubelet service has to

602
00:24:29,460 --> 00:24:31,500
be restarted on every node so those are

603
00:24:31,500 --> 00:24:33,360
all the limitations there is a general

604
00:24:33,360 --> 00:24:35,580
risk so once you start on this process

605
00:24:35,580 --> 00:24:37,919
you can retry and continue but you have

606
00:24:37,919 --> 00:24:39,600
to complete you cannot stop in the

607
00:24:39,600 --> 00:24:41,700
middle or anything like that and this

608
00:24:41,700 --> 00:24:42,840
has to be currently managed by custom

609
00:24:42,840 --> 00:24:45,840
scripts there is no sort of a operator

610
00:24:45,840 --> 00:24:47,640
or anything which actually goes and does

611
00:24:47,640 --> 00:24:50,100
that so that's it we know that this is

612
00:24:50,100 --> 00:24:53,159
the case now ah how do we ah going

613
00:24:53,159 --> 00:24:55,380
forward what do we do so there are some

614
00:24:55,380 --> 00:24:58,440
best practices which we can use so never

615
00:24:58,440 --> 00:25:00,179
have your root certificate in any of the

616
00:25:00,179 --> 00:25:02,220
nodes it is always good to have our own

617
00:25:02,220 --> 00:25:04,200
route certificate somewhere and create a

618
00:25:04,200 --> 00:25:05,940
series of intermediate search and give

619
00:25:05,940 --> 00:25:08,520
it what I demoed was actually uh like

620
00:25:08,520 --> 00:25:11,700
that we had a CA dot pem alone and CA

621
00:25:11,700 --> 00:25:13,860
dot payment zero key but however we can

622
00:25:13,860 --> 00:25:16,200
we could we created a lot of Etc results

623
00:25:16,200 --> 00:25:18,240
and so on as intermediate search Cube

624
00:25:18,240 --> 00:25:20,340
proxy certain controller manager and we

625
00:25:20,340 --> 00:25:21,299
push that

626
00:25:21,299 --> 00:25:24,120
and yeah so that will be used by

627
00:25:24,120 --> 00:25:26,159
kubernetes to sign some things so that

628
00:25:26,159 --> 00:25:28,919
is one which I found at least there is

629
00:25:28,919 --> 00:25:30,840
this a link wherein this person actually

630
00:25:30,840 --> 00:25:33,360
gave in some details though not the end

631
00:25:33,360 --> 00:25:35,279
ah so yeah the kubernetes best practices

632
00:25:35,279 --> 00:25:37,380
also says that uh do not send any Keys

633
00:25:37,380 --> 00:25:39,000
into the cluster so they say that

634
00:25:39,000 --> 00:25:40,919
generate every single thing and send it

635
00:25:40,919 --> 00:25:44,159
uh however yeah that has to be scripted

636
00:25:44,159 --> 00:25:45,900
quite a bit cuberium

637
00:25:45,900 --> 00:25:48,480
sort of allows it so it says that you

638
00:25:48,480 --> 00:25:50,400
can as long as you create it and push it

639
00:25:50,400 --> 00:25:52,620
you can skip the step in the unit phase

640
00:25:52,620 --> 00:25:55,559
however it's not very simple so to tie

641
00:25:55,559 --> 00:25:57,120
it all together one of the things is

642
00:25:57,120 --> 00:25:59,279
that this is on the kubernetes side

643
00:25:59,279 --> 00:26:01,320
however on the infra side it is a large

644
00:26:01,320 --> 00:26:03,299
problem again you have to be able ready

645
00:26:03,299 --> 00:26:06,779
to ah move every single resource object

646
00:26:06,779 --> 00:26:09,360
to another user and those are the things

647
00:26:09,360 --> 00:26:11,419
which has to be already planned and done

648
00:26:11,419 --> 00:26:14,460
ah use the external CA that is a simple

649
00:26:14,460 --> 00:26:17,159
thing and use an intermediate CA to keep

650
00:26:17,159 --> 00:26:18,600
the roots secure

651
00:26:18,600 --> 00:26:20,940
and if any intermediary is compromised

652
00:26:20,940 --> 00:26:22,799
just revoke the certain manually rotate

653
00:26:22,799 --> 00:26:25,140
search so the other thing which we have

654
00:26:25,140 --> 00:26:26,820
not covered is there can be a series of

655
00:26:26,820 --> 00:26:28,380
users which have been created by the old

656
00:26:28,380 --> 00:26:31,320
administrator those have to be deleted

657
00:26:31,320 --> 00:26:34,559
and recreated so that is also like a

658
00:26:34,559 --> 00:26:35,760
sort of a

659
00:26:35,760 --> 00:26:38,700
uh pain given it because if we don't

660
00:26:38,700 --> 00:26:40,320
know how many other applications that

661
00:26:40,320 --> 00:26:43,320
user is linked to and so on so this is a

662
00:26:43,320 --> 00:26:45,799
basically

663
00:26:45,799 --> 00:26:50,159
quite a large disruptive effect and this

664
00:26:50,159 --> 00:26:52,260
has to be made the Streamline in some

665
00:26:52,260 --> 00:26:54,419
way but all of this will have to do and

666
00:26:54,419 --> 00:26:55,860
we have still not got into what happens

667
00:26:55,860 --> 00:26:58,020
if the postgres administrator's password

668
00:26:58,020 --> 00:27:00,179
is lost right so that is another set or

669
00:27:00,179 --> 00:27:02,820
all of the other application related

670
00:27:02,820 --> 00:27:07,620
passwords so that is another adjusted so

671
00:27:07,620 --> 00:27:11,520
yeah q a or any particular thing

672
00:27:11,520 --> 00:27:13,320
yeah

673
00:27:13,320 --> 00:27:15,900
so this is a bit unlike the other talks

674
00:27:15,900 --> 00:27:18,120
mainly because yeah this is not as

675
00:27:18,120 --> 00:27:20,340
Global in scope as those and it's for a

676
00:27:20,340 --> 00:27:23,600
particular problem so

