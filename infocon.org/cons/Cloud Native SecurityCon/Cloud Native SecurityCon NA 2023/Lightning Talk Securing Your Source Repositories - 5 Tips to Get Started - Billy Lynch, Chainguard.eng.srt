1
00:00:00,060 --> 00:00:02,460
all right uh I forgot uh hi everyone my

2
00:00:02,460 --> 00:00:04,140
name is Billy Lynch and today we're

3
00:00:04,140 --> 00:00:05,700
going to be talking about uh things you

4
00:00:05,700 --> 00:00:07,200
can do to start securing your Source

5
00:00:07,200 --> 00:00:08,639
repositories

6
00:00:08,639 --> 00:00:10,620
so a little bit about myself I'm a

7
00:00:10,620 --> 00:00:12,780
software engineer over at chingard uh

8
00:00:12,780 --> 00:00:14,219
I'm a maintainer for a few open source

9
00:00:14,219 --> 00:00:16,500
projects like techton chains and uh six

10
00:00:16,500 --> 00:00:18,720
door git sign and I've worked on a bunch

11
00:00:18,720 --> 00:00:21,840
of different Source uh provider code in

12
00:00:21,840 --> 00:00:23,220
a different lifetime at Google so Google

13
00:00:23,220 --> 00:00:25,740
code class Source repositories

14
00:00:25,740 --> 00:00:28,019
um so yeah so what can you do sort of to

15
00:00:28,019 --> 00:00:30,060
take quick actions to help secure your

16
00:00:30,060 --> 00:00:32,460
repos so Number One enable two-factor

17
00:00:32,460 --> 00:00:35,040
authorization being able to protect your

18
00:00:35,040 --> 00:00:38,100
account is critical so enabling Google

19
00:00:38,100 --> 00:00:40,440
Authenticator backing it by UB key

20
00:00:40,440 --> 00:00:42,360
protecting your identity

21
00:00:42,360 --> 00:00:44,460
is super important because that sort of

22
00:00:44,460 --> 00:00:46,320
is what gives you access to all the

23
00:00:46,320 --> 00:00:47,640
different resources whether that's code

24
00:00:47,640 --> 00:00:50,340
repository CI artifacts stuff like that

25
00:00:50,340 --> 00:00:52,500
so locking that down is super super

26
00:00:52,500 --> 00:00:54,719
important uh if you haven't seen it yet

27
00:00:54,719 --> 00:00:56,820
GitHub actually put out a blog post a

28
00:00:56,820 --> 00:00:59,160
couple months ago or I forget when uh

29
00:00:59,160 --> 00:01:00,300
but they're going to start rolling out

30
00:01:00,300 --> 00:01:02,520
uh requiring two-factor off for your for

31
00:01:02,520 --> 00:01:04,559
your accounts I personally think that's

32
00:01:04,559 --> 00:01:06,720
a great thing but if you I think it's

33
00:01:06,720 --> 00:01:08,340
it's also good to start rolling that out

34
00:01:08,340 --> 00:01:10,920
uh proactively and also in other source

35
00:01:10,920 --> 00:01:12,540
providers as well

36
00:01:12,540 --> 00:01:15,180
uh number two protective branches uh so

37
00:01:15,180 --> 00:01:16,640
this can mean a few different things

38
00:01:16,640 --> 00:01:19,080
this is supported across a bunch of

39
00:01:19,080 --> 00:01:20,759
different Source providers so here's

40
00:01:20,759 --> 00:01:23,100
GitHub and gitlab right here so the main

41
00:01:23,100 --> 00:01:25,380
things we're looking for here is uh

42
00:01:25,380 --> 00:01:27,000
two-party review so making sure that

43
00:01:27,000 --> 00:01:28,439
there's a second pair of eyes on your

44
00:01:28,439 --> 00:01:30,479
code one because code reviews are just

45
00:01:30,479 --> 00:01:32,939
always good but also in the event that

46
00:01:32,939 --> 00:01:34,619
someone's account is compromised having

47
00:01:34,619 --> 00:01:36,479
that other check and balance there of

48
00:01:36,479 --> 00:01:38,159
someone else just saying hey this looks

49
00:01:38,159 --> 00:01:41,100
good also can help secure a repos stuff

50
00:01:41,100 --> 00:01:42,720
like that and you can also use this to

51
00:01:42,720 --> 00:01:44,579
say hey run these Security checks run

52
00:01:44,579 --> 00:01:48,240
the CI things like that

53
00:01:48,240 --> 00:01:50,100
uh number three we heard before about

54
00:01:50,100 --> 00:01:52,320
dependabots uh so this is also critical

55
00:01:52,320 --> 00:01:54,360
uh so I don't know how many projects

56
00:01:54,360 --> 00:01:55,500
I've seen

57
00:01:55,500 --> 00:01:57,659
um you know active Community stuff like

58
00:01:57,659 --> 00:01:59,100
that but if you run a scan or something

59
00:01:59,100 --> 00:02:01,979
on them you detect all these cves and

60
00:02:01,979 --> 00:02:02,759
most of the time they've actually

61
00:02:02,759 --> 00:02:05,040
already been solved and fixed Upstream

62
00:02:05,040 --> 00:02:06,780
but the dependencies haven't trickled

63
00:02:06,780 --> 00:02:09,119
their way down to the the underlying

64
00:02:09,119 --> 00:02:11,520
projects so using things like depend

65
00:02:11,520 --> 00:02:13,920
about things like renovate bot to help

66
00:02:13,920 --> 00:02:16,140
automate these workflows so you don't

67
00:02:16,140 --> 00:02:18,360
have to think about hey where is the

68
00:02:18,360 --> 00:02:19,739
latest dependency when do I have to

69
00:02:19,739 --> 00:02:21,599
check these being able to automate those

70
00:02:21,599 --> 00:02:23,819
flows will make you and your project you

71
00:02:23,819 --> 00:02:25,739
know much safer for that

72
00:02:25,739 --> 00:02:28,440
four uh I'm a bit biased here because I

73
00:02:28,440 --> 00:02:30,000
work on a project called get sign uh

74
00:02:30,000 --> 00:02:32,099
signing your commits uh so there's a few

75
00:02:32,099 --> 00:02:33,900
different ways you can sign your commits

76
00:02:33,900 --> 00:02:36,780
so traditionally it's been gpg uh in

77
00:02:36,780 --> 00:02:38,640
recent time there's also been SSH and X5

78
00:02:38,640 --> 00:02:40,680
and 9 that's been added uh and the

79
00:02:40,680 --> 00:02:42,480
project I work on git sign

80
00:02:42,480 --> 00:02:43,800
um is part of the six store project

81
00:02:43,800 --> 00:02:45,660
which is using your identity like your

82
00:02:45,660 --> 00:02:47,040
Google or your GitHub identity to sign

83
00:02:47,040 --> 00:02:49,500
your commits this is super important

84
00:02:49,500 --> 00:02:52,379
like there's been a big focus on signing

85
00:02:52,379 --> 00:02:54,800
artifacts release artifacts oci images

86
00:02:54,800 --> 00:02:58,019
but not so much on git commits and

87
00:02:58,019 --> 00:02:59,580
that's a little weird because these are

88
00:02:59,580 --> 00:03:00,720
the things that we're putting into our

89
00:03:00,720 --> 00:03:02,220
CI pipelines these are the things we're

90
00:03:02,220 --> 00:03:04,560
using for git Ops workflows we're using

91
00:03:04,560 --> 00:03:05,940
manifest deploying them to our

92
00:03:05,940 --> 00:03:07,980
kubernetes clusters so we should be

93
00:03:07,980 --> 00:03:09,720
using the same level of rigor for

94
00:03:09,720 --> 00:03:11,819
signing and verification for our source

95
00:03:11,819 --> 00:03:13,620
that we're also using for our binaries

96
00:03:13,620 --> 00:03:16,019
so if you know being able to start

97
00:03:16,019 --> 00:03:18,000
signing your commits is the great first

98
00:03:18,000 --> 00:03:19,500
step here

99
00:03:19,500 --> 00:03:21,360
uh and then finally using scope

100
00:03:21,360 --> 00:03:23,099
credentials so really just taking an

101
00:03:23,099 --> 00:03:25,379
audit of your repository

102
00:03:25,379 --> 00:03:27,060
um you know can you get away with a

103
00:03:27,060 --> 00:03:28,860
read-only token can you Scope a token

104
00:03:28,860 --> 00:03:30,959
down to just a particular repository can

105
00:03:30,959 --> 00:03:32,640
you go a step further there's uh there's

106
00:03:32,640 --> 00:03:35,519
been a lot of effort for CI providers uh

107
00:03:35,519 --> 00:03:37,739
for oidc credentials so these ephemeral

108
00:03:37,739 --> 00:03:39,480
credentials that you don't have to store

109
00:03:39,480 --> 00:03:41,340
and protect

110
00:03:41,340 --> 00:03:43,980
um and bind them to particular repos the

111
00:03:43,980 --> 00:03:46,379
more you can reduce that down in the

112
00:03:46,379 --> 00:03:48,299
event that you are compromised because

113
00:03:48,299 --> 00:03:51,420
it's more of a when not an if the lower

114
00:03:51,420 --> 00:03:54,959
uh the the less scope you're you're

115
00:03:54,959 --> 00:03:56,220
making yourself vulnerable to in the

116
00:03:56,220 --> 00:03:57,720
long run

117
00:03:57,720 --> 00:03:59,280
uh and I just want to make a special

118
00:03:59,280 --> 00:04:02,159
shout out for OSF uh open source uh open

119
00:04:02,159 --> 00:04:04,560
ssf scorecards uh so there's a talk

120
00:04:04,560 --> 00:04:06,659
later today I recommend checking out uh

121
00:04:06,659 --> 00:04:08,099
scorecards is meant to be a tool to help

122
00:04:08,099 --> 00:04:10,080
you automate to do some of these checks

123
00:04:10,080 --> 00:04:11,400
for your repositories to check for

124
00:04:11,400 --> 00:04:13,439
two-factor auth to check for protected

125
00:04:13,439 --> 00:04:15,360
branches and Naveen and Brian are going

126
00:04:15,360 --> 00:04:17,279
to talk later today that uh would

127
00:04:17,279 --> 00:04:19,199
definitely be interesting

128
00:04:19,199 --> 00:04:21,238
cool that's all I had lightning talk uh

129
00:04:21,238 --> 00:04:22,979
if you want to talk more uh happy to hit

130
00:04:22,979 --> 00:04:25,000
around after this but thank you

131
00:04:25,000 --> 00:04:30,199
[Applause]

