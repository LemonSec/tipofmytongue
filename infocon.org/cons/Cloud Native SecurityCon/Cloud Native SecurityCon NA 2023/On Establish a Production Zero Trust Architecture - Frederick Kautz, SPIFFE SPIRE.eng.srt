1
00:00:00,000 --> 00:00:01,800
so first I want to thank you all for

2
00:00:01,800 --> 00:00:02,959
coming

3
00:00:02,959 --> 00:00:05,040
there will be parts of this talk that

4
00:00:05,040 --> 00:00:07,440
have some technical portions but at the

5
00:00:07,440 --> 00:00:09,179
same time we're also want to dive into

6
00:00:09,179 --> 00:00:11,340
some of the organizational side as well

7
00:00:11,340 --> 00:00:13,080
so

8
00:00:13,080 --> 00:00:15,960
with that let's jump in

9
00:00:15,960 --> 00:00:17,279
um so first let's start a little bit of

10
00:00:17,279 --> 00:00:18,960
talk to talk a little bit about reality

11
00:00:18,960 --> 00:00:21,900
versus assumption so one of the problems

12
00:00:21,900 --> 00:00:25,500
that we have is that as the the industry

13
00:00:25,500 --> 00:00:26,880
tends to change over time our

14
00:00:26,880 --> 00:00:28,380
Technologies change

15
00:00:28,380 --> 00:00:32,119
and that creates a gap between the the

16
00:00:32,119 --> 00:00:35,160
assumptions that we made and in time the

17
00:00:35,160 --> 00:00:37,380
reality continues to shift away from

18
00:00:37,380 --> 00:00:39,840
those assumptions and many of the

19
00:00:39,840 --> 00:00:42,840
attackers actually find their uh their

20
00:00:42,840 --> 00:00:44,760
opportunities within that particular

21
00:00:44,760 --> 00:00:46,680
within those gaps

22
00:00:46,680 --> 00:00:48,660
and so of course there's different

23
00:00:48,660 --> 00:00:50,760
effects I don't have to jump into what

24
00:00:50,760 --> 00:00:52,200
the effects are here because we're all

25
00:00:52,200 --> 00:00:54,899
very familiar with it but uh

26
00:00:54,899 --> 00:00:56,820
also when part of the problem we have

27
00:00:56,820 --> 00:00:58,680
with organizations is that the the

28
00:00:58,680 --> 00:01:00,539
regulations and policies that we

29
00:01:00,539 --> 00:01:02,340
generate will often osify those

30
00:01:02,340 --> 00:01:03,960
particular decisions things that were

31
00:01:03,960 --> 00:01:05,580
valid at the time

32
00:01:05,580 --> 00:01:07,920
but those assumptions are not

33
00:01:07,920 --> 00:01:10,260
necessarily valid two or three years

34
00:01:10,260 --> 00:01:12,240
from now or further on

35
00:01:12,240 --> 00:01:14,100
and so a couple examples of things that

36
00:01:14,100 --> 00:01:15,420
we used to do in the past was we used to

37
00:01:15,420 --> 00:01:16,799
have like static Network architectures

38
00:01:16,799 --> 00:01:19,979
assume that they that they didn't move

39
00:01:19,979 --> 00:01:22,740
we put in uh various diagrams and so on

40
00:01:22,740 --> 00:01:24,720
and assume that that's exactly what it

41
00:01:24,720 --> 00:01:25,920
what it looks like

42
00:01:25,920 --> 00:01:28,680
uh we would track our our services and

43
00:01:28,680 --> 00:01:30,360
ports using things like IP address and

44
00:01:30,360 --> 00:01:32,640
ports uh rather than looking at a

45
00:01:32,640 --> 00:01:34,080
different type of identity

46
00:01:34,080 --> 00:01:36,900
things like Network segmentation were

47
00:01:36,900 --> 00:01:38,640
were mandated but they were mandated

48
00:01:38,640 --> 00:01:42,180
across across certain boundaries that if

49
00:01:42,180 --> 00:01:44,960
once you're inside then those boundaries

50
00:01:44,960 --> 00:01:47,460
don't protect you anymore because the

51
00:01:47,460 --> 00:01:49,020
the attacker has access to your

52
00:01:49,020 --> 00:01:51,780
sensitive to your sensitive systems

53
00:01:51,780 --> 00:01:53,340
and so

54
00:01:53,340 --> 00:01:55,860
as so part of the drivers of what we're

55
00:01:55,860 --> 00:01:57,360
looking at for things like zero trust is

56
00:01:57,360 --> 00:01:59,340
that we have things like uh the security

57
00:01:59,340 --> 00:02:01,680
posture is starting to shift where we're

58
00:02:01,680 --> 00:02:04,320
looking for more granular uh parameters

59
00:02:04,320 --> 00:02:05,579
we're looking to

60
00:02:05,579 --> 00:02:07,680
move away from reactive and move towards

61
00:02:07,680 --> 00:02:09,598
something that's actually proactive

62
00:02:09,598 --> 00:02:11,760
so we're not trying to just respond to

63
00:02:11,760 --> 00:02:13,319
the incidents but instead are trying to

64
00:02:13,319 --> 00:02:15,900
work out well what how what incidents

65
00:02:15,900 --> 00:02:17,700
are we seeing now and how can we

66
00:02:17,700 --> 00:02:20,599
actually adapt adapt to them

67
00:02:20,599 --> 00:02:22,379
and

68
00:02:22,379 --> 00:02:24,599
the reality is that slow adoption of key

69
00:02:24,599 --> 00:02:27,540
Technologies is becoming a risk not

70
00:02:27,540 --> 00:02:29,040
necessarily only to security but also

71
00:02:29,040 --> 00:02:31,140
becomes a business risk as people gain

72
00:02:31,140 --> 00:02:32,700
more capabilities over time they cannot

73
00:02:32,700 --> 00:02:34,220
perform your business so we have to

74
00:02:34,220 --> 00:02:36,720
balance this between

75
00:02:36,720 --> 00:02:39,180
what do we adopt and how do we secure it

76
00:02:39,180 --> 00:02:41,360
but do it in a way that over time

77
00:02:41,360 --> 00:02:44,340
we don't put ourselves in too much in

78
00:02:44,340 --> 00:02:46,940
too much risk

79
00:02:47,220 --> 00:02:50,099
and so with that change comes comes risk

80
00:02:50,099 --> 00:02:52,220
um just for a quick definition of risk

81
00:02:52,220 --> 00:02:54,840
usually we look at one definition

82
00:02:54,840 --> 00:02:56,280
there's multiple definitions of it but

83
00:02:56,280 --> 00:02:57,239
one definition is you look at the

84
00:02:57,239 --> 00:02:58,980
magnitude and look at the probability so

85
00:02:58,980 --> 00:03:00,239
what is the magnitude if something

86
00:03:00,239 --> 00:03:02,760
happens how bad is the how bad is that

87
00:03:02,760 --> 00:03:04,739
thing going to affect the uh the system

88
00:03:04,739 --> 00:03:06,360
or or your business

89
00:03:06,360 --> 00:03:08,700
what is the probability of it happening

90
00:03:08,700 --> 00:03:10,620
so you have to actually look at uh look

91
00:03:10,620 --> 00:03:12,720
at both and the question then becomes

92
00:03:12,720 --> 00:03:14,040
how do we actually start looking at the

93
00:03:14,040 --> 00:03:16,700
blast radius of a given failure

94
00:03:16,700 --> 00:03:19,860
or of a successful attack and if you

95
00:03:19,860 --> 00:03:20,940
start looking at things from a blast

96
00:03:20,940 --> 00:03:23,340
from a blast radius perspective uh that

97
00:03:23,340 --> 00:03:24,420
actually gets you a bit closer and

98
00:03:24,420 --> 00:03:26,519
you'll see a little bit more as as we as

99
00:03:26,519 --> 00:03:28,099
we move forward

100
00:03:28,099 --> 00:03:30,480
and but at the same time we also want to

101
00:03:30,480 --> 00:03:31,920
constrain the complexity because as we

102
00:03:31,920 --> 00:03:34,019
move towards the zero trust system the

103
00:03:34,019 --> 00:03:35,879
systems we bring in have a lot more

104
00:03:35,879 --> 00:03:37,140
complexity than they used to because

105
00:03:37,140 --> 00:03:38,519
they're a lot more granular so you have

106
00:03:38,519 --> 00:03:39,959
to make sure that what you're doing

107
00:03:39,959 --> 00:03:44,099
Works across across a wider a much more

108
00:03:44,099 --> 00:03:47,239
diverse set of systems so

109
00:03:47,239 --> 00:03:50,879
let's jump into a into a simplified

110
00:03:50,879 --> 00:03:53,099
definition of zero trust so this

111
00:03:53,099 --> 00:03:55,019
definition actually comes this is

112
00:03:55,019 --> 00:03:56,640
something I wrote up before the nist

113
00:03:56,640 --> 00:03:58,739
definition existed

114
00:03:58,739 --> 00:04:02,099
and so the uh the way that I would tell

115
00:04:02,099 --> 00:04:05,580
companies at the time uh before we even

116
00:04:05,580 --> 00:04:07,500
before we would call it zero trust or at

117
00:04:07,500 --> 00:04:10,260
least with this particular area is

118
00:04:10,260 --> 00:04:12,599
we want to establish an identity

119
00:04:12,599 --> 00:04:15,840
and when we talk about identity we

120
00:04:15,840 --> 00:04:17,699
specifically mean a cryptographic

121
00:04:17,699 --> 00:04:19,738
identity you can bind against

122
00:04:19,738 --> 00:04:22,979
so we already have this with users so

123
00:04:22,979 --> 00:04:24,720
users we every application used to have

124
00:04:24,720 --> 00:04:27,300
its own identity eventually we got a

125
00:04:27,300 --> 00:04:29,160
single sign-on so that we could conform

126
00:04:29,160 --> 00:04:30,780
all we can have all the identities

127
00:04:30,780 --> 00:04:32,880
managed to a single location

128
00:04:32,880 --> 00:04:34,919
and then eventually we got Federation of

129
00:04:34,919 --> 00:04:36,960
those identities so that you could have

130
00:04:36,960 --> 00:04:39,300
a single identity that manages your

131
00:04:39,300 --> 00:04:40,919
external third-party services so if you

132
00:04:40,919 --> 00:04:42,300
have to shut down an account or you have

133
00:04:42,300 --> 00:04:45,000
to change a password or add two-factor

134
00:04:45,000 --> 00:04:46,680
authentication it works across all of

135
00:04:46,680 --> 00:04:48,660
your services we want to do the same

136
00:04:48,660 --> 00:04:50,280
thing with with workload identities as

137
00:04:50,280 --> 00:04:52,139
well we want for the workloads to have

138
00:04:52,139 --> 00:04:53,580
cryptographic identities that are con

139
00:04:53,580 --> 00:04:56,220
that are continuously that are

140
00:04:56,220 --> 00:04:58,040
continuously

141
00:04:58,040 --> 00:04:59,780
read

142
00:04:59,780 --> 00:05:02,400
redeployed and reissued

143
00:05:02,400 --> 00:05:04,860
but also doing in a way that we can

144
00:05:04,860 --> 00:05:06,540
Federate across multiple multiple

145
00:05:06,540 --> 00:05:07,860
systems and once you have a

146
00:05:07,860 --> 00:05:09,600
comprehensive identity system for your

147
00:05:09,600 --> 00:05:11,639
workloads

148
00:05:11,639 --> 00:05:12,960
and they're able to identify each other

149
00:05:12,960 --> 00:05:14,580
using that then you can actually drive

150
00:05:14,580 --> 00:05:16,860
it towards policy and that policy allows

151
00:05:16,860 --> 00:05:19,979
you to consume the identity and you

152
00:05:19,979 --> 00:05:21,419
write your policy so that you say

153
00:05:21,419 --> 00:05:23,039
application a is allowed to send these

154
00:05:23,039 --> 00:05:24,660
type of messages to application B and

155
00:05:24,660 --> 00:05:27,660
there's labs and these type of responses

156
00:05:27,660 --> 00:05:29,100
so instead of looking at the IP address

157
00:05:29,100 --> 00:05:30,600
and port or similar you're actually

158
00:05:30,600 --> 00:05:32,100
tying it down to this cryptographic

159
00:05:32,100 --> 00:05:33,960
identity has these these capabilities

160
00:05:33,960 --> 00:05:36,240
and we also want to have control and by

161
00:05:36,240 --> 00:05:38,699
control we typically mean automation

162
00:05:38,699 --> 00:05:40,139
you want to have the automated

163
00:05:40,139 --> 00:05:41,880
deployment of these systems you don't

164
00:05:41,880 --> 00:05:43,320
want to make them you don't want to set

165
00:05:43,320 --> 00:05:45,360
it up so somebody has to manually do

166
00:05:45,360 --> 00:05:47,340
something you want to have

167
00:05:47,340 --> 00:05:50,100
not only automation of the deployment

168
00:05:50,100 --> 00:05:52,020
but you also want to have automation of

169
00:05:52,020 --> 00:05:54,780
the of the observability and up and

170
00:05:54,780 --> 00:05:58,820
automation of some of the responses

171
00:05:58,919 --> 00:06:00,180
and so

172
00:06:00,180 --> 00:06:01,740
but before we can really drive into we

173
00:06:01,740 --> 00:06:03,600
also want to look at contrast the

174
00:06:03,600 --> 00:06:04,680
difference between perimeter defense

175
00:06:04,680 --> 00:06:07,620
where we were at and in zero trust so

176
00:06:07,620 --> 00:06:09,660
the simplest definition of perimeter

177
00:06:09,660 --> 00:06:11,220
defense I can give you looks something

178
00:06:11,220 --> 00:06:13,259
like this something untrusted goes

179
00:06:13,259 --> 00:06:15,539
through a security control and is now is

180
00:06:15,539 --> 00:06:17,520
now connected to a trusted environment

181
00:06:17,520 --> 00:06:20,220
so everything on the left is untrusted

182
00:06:20,220 --> 00:06:21,720
goes through the security boundary and

183
00:06:21,720 --> 00:06:22,680
then once you've passed that security

184
00:06:22,680 --> 00:06:24,300
boundary you're now in a trusted

185
00:06:24,300 --> 00:06:26,039
environment

186
00:06:26,039 --> 00:06:27,539
and typically it looks something like

187
00:06:27,539 --> 00:06:29,520
this in practice where you end up with

188
00:06:29,520 --> 00:06:31,380
trusted networks and you have vpns in

189
00:06:31,380 --> 00:06:33,840
the center and you may put firewalls at

190
00:06:33,840 --> 00:06:35,639
the VPN level but generally once you're

191
00:06:35,639 --> 00:06:38,220
in the network uh not to say there's no

192
00:06:38,220 --> 00:06:40,020
controls but the controls are are

193
00:06:40,020 --> 00:06:42,500
limited

194
00:06:42,840 --> 00:06:44,819
and what we want to try to push towards

195
00:06:44,819 --> 00:06:46,440
is something that looks more like this

196
00:06:46,440 --> 00:06:48,780
where you have secure connections the

197
00:06:48,780 --> 00:06:51,060
the networks are untrusted it doesn't

198
00:06:51,060 --> 00:06:52,259
mean they're uncontrolled but they're

199
00:06:52,259 --> 00:06:54,479
untrusted and you want to create secure

200
00:06:54,479 --> 00:06:56,160
connections between the workloads where

201
00:06:56,160 --> 00:06:58,500
the workloads are validating their their

202
00:06:58,500 --> 00:07:00,539
respective identities

203
00:07:00,539 --> 00:07:03,180
so we want to shift from something that

204
00:07:03,180 --> 00:07:04,139
looks

205
00:07:04,139 --> 00:07:06,180
like this

206
00:07:06,180 --> 00:07:08,460
I'm sorry so this is the general census

207
00:07:08,460 --> 00:07:10,199
to as to what what it is so once an

208
00:07:10,199 --> 00:07:12,060
attacker comes in because they're in

209
00:07:12,060 --> 00:07:13,800
untrust untrusted network

210
00:07:13,800 --> 00:07:15,300
and then they don't necessarily have

211
00:07:15,300 --> 00:07:16,560
access to everything that's in there

212
00:07:16,560 --> 00:07:18,240
because they have to go through

213
00:07:18,240 --> 00:07:20,340
additional controls

214
00:07:20,340 --> 00:07:22,620
so we want to push away from something

215
00:07:22,620 --> 00:07:25,860
that looks purely like this

216
00:07:25,860 --> 00:07:28,740
towards something that looks more like

217
00:07:28,740 --> 00:07:30,419
this where the controls you have

218
00:07:30,419 --> 00:07:32,220
controls that are effective that are

219
00:07:32,220 --> 00:07:34,560
closer they have more context

220
00:07:34,560 --> 00:07:36,960
if you have something that is like an on

221
00:07:36,960 --> 00:07:38,400
the

222
00:07:38,400 --> 00:07:40,139
on the right you have uh that the

223
00:07:40,139 --> 00:07:42,180
attacker trying to connect into a system

224
00:07:42,180 --> 00:07:44,880
that they don't have access to

225
00:07:44,880 --> 00:07:47,039
the controls there have more context in

226
00:07:47,039 --> 00:07:48,240
terms of what it is they're trying to

227
00:07:48,240 --> 00:07:49,680
protect so you can actually put more

228
00:07:49,680 --> 00:07:52,080
fine-grained rules in terms of uh in in

229
00:07:52,080 --> 00:07:54,000
terms of what's allowed or not allowed

230
00:07:54,000 --> 00:07:56,580
on a per uh per service per

231
00:07:56,580 --> 00:07:58,259
communication basis

232
00:07:58,259 --> 00:08:00,660
there are some risks here as well one of

233
00:08:00,660 --> 00:08:02,639
the ones I'll call out immediately is

234
00:08:02,639 --> 00:08:04,319
that there's a first not just from the

235
00:08:04,319 --> 00:08:05,940
complexity side but there's also a lot

236
00:08:05,940 --> 00:08:07,440
more processing in here as well so you

237
00:08:07,440 --> 00:08:08,639
have to be careful not say hey we're

238
00:08:08,639 --> 00:08:10,080
gonna put Gates everywhere because

239
00:08:10,080 --> 00:08:12,000
that'll also that also fail you end up

240
00:08:12,000 --> 00:08:13,319
with a lot of latency and in some

241
00:08:13,319 --> 00:08:14,940
scenarios that latency is unacceptable

242
00:08:14,940 --> 00:08:17,819
to to the business context

243
00:08:17,819 --> 00:08:19,139
um there's techniques that can be used

244
00:08:19,139 --> 00:08:20,699
to to avoid that we'll get into some of

245
00:08:20,699 --> 00:08:22,500
them uh later on but I just want to

246
00:08:22,500 --> 00:08:24,180
point out that you want to find a

247
00:08:24,180 --> 00:08:25,800
balanced approach where you're checking

248
00:08:25,800 --> 00:08:27,060
things coming in and going out in

249
00:08:27,060 --> 00:08:28,500
effective locations but you don't

250
00:08:28,500 --> 00:08:30,000
necessarily have to do it in every

251
00:08:30,000 --> 00:08:31,319
single transition point of that where

252
00:08:31,319 --> 00:08:33,719
some or some bit comes in one spot and

253
00:08:33,719 --> 00:08:35,099
then you're you're running these really

254
00:08:35,099 --> 00:08:38,940
expensive rules so just as a heads up

255
00:08:38,940 --> 00:08:41,399
so again how do we achieve this going

256
00:08:41,399 --> 00:08:43,440
back to the identity policy and uh and

257
00:08:43,440 --> 00:08:44,940
control

258
00:08:44,940 --> 00:08:46,339
and so

259
00:08:46,339 --> 00:08:49,200
uh when we look we can use a previous

260
00:08:49,200 --> 00:08:52,519
example that we've had again with uh

261
00:08:52,519 --> 00:08:54,660
with user identity

262
00:08:54,660 --> 00:08:56,700
and so with user identity we mentioned

263
00:08:56,700 --> 00:08:59,040
about single sign-on does everything

264
00:08:59,040 --> 00:09:01,399
require a login that you to use that

265
00:09:01,399 --> 00:09:04,019
many third parties don't actually

266
00:09:04,019 --> 00:09:05,339
support single sign-on so that's

267
00:09:05,339 --> 00:09:07,980
actually ends up being a major gap for

268
00:09:07,980 --> 00:09:09,660
for them so this actually becomes really

269
00:09:09,660 --> 00:09:11,940
difficult with uh with major Enterprises

270
00:09:11,940 --> 00:09:14,220
that have controlled information where

271
00:09:14,220 --> 00:09:16,740
or very sensitive information where a

272
00:09:16,740 --> 00:09:19,140
developer or user might log into a

273
00:09:19,140 --> 00:09:20,760
third-party system to do their to do

274
00:09:20,760 --> 00:09:22,260
their work that is not in your

275
00:09:22,260 --> 00:09:24,240
necessarily inner control and if they

276
00:09:24,240 --> 00:09:26,220
leave the company how do you shut down

277
00:09:26,220 --> 00:09:27,839
those particular systems so there are

278
00:09:27,839 --> 00:09:29,519
gaps that exist there but for the most

279
00:09:29,519 --> 00:09:32,459
part these tend to work really well one

280
00:09:32,459 --> 00:09:33,720
of the things that we have been pushing

281
00:09:33,720 --> 00:09:35,399
for as an industry is to stick with the

282
00:09:35,399 --> 00:09:36,899
standards so there's a lot of custom

283
00:09:36,899 --> 00:09:39,120
standards that are out there but if as

284
00:09:39,120 --> 00:09:40,640
more people

285
00:09:40,640 --> 00:09:43,860
circle around JWT around saml and

286
00:09:43,860 --> 00:09:46,140
similar that that means that you have a

287
00:09:46,140 --> 00:09:49,380
single set of of or a smaller set of

288
00:09:49,380 --> 00:09:50,760
things you have to comply to and it

289
00:09:50,760 --> 00:09:53,339
allows for a lot more integration

290
00:09:53,339 --> 00:09:55,080
so we started talking about workloads

291
00:09:55,080 --> 00:09:56,519
and how do we establish workload

292
00:09:56,519 --> 00:09:58,399
identity in a zero trust environment

293
00:09:58,399 --> 00:10:01,080
these are the basic uh the basic steps

294
00:10:01,080 --> 00:10:02,580
so you have to establish what's called a

295
00:10:02,580 --> 00:10:05,160
trust domain so a trust domain is and

296
00:10:05,160 --> 00:10:06,779
you'll you'll see a an example of it

297
00:10:06,779 --> 00:10:08,459
soon but you think of a trust domain as

298
00:10:08,459 --> 00:10:10,760
a set of things that belong to the same

299
00:10:10,760 --> 00:10:13,980
uh family of of services like could be

300
00:10:13,980 --> 00:10:16,080
like an application or it could be a

301
00:10:16,080 --> 00:10:17,580
business unit or it depends on where you

302
00:10:17,580 --> 00:10:19,080
want to draw that scope

303
00:10:19,080 --> 00:10:20,580
uh you would test your workloads are

304
00:10:20,580 --> 00:10:22,380
inside of them you then establish policy

305
00:10:22,380 --> 00:10:23,760
in terms of how they can communicate

306
00:10:23,760 --> 00:10:24,899
with each other and then you establish

307
00:10:24,899 --> 00:10:26,580
the uh you can then Federate and

308
00:10:26,580 --> 00:10:30,180
establish trust across trust domains so

309
00:10:30,180 --> 00:10:32,279
in one scenario you could say let's

310
00:10:32,279 --> 00:10:34,080
establish a trust domain and we'll use

311
00:10:34,080 --> 00:10:35,880
standard so we'll use standard pki in a

312
00:10:35,880 --> 00:10:37,500
scenario so we'll set up a CA and that

313
00:10:37,500 --> 00:10:39,300
CA will represent AE trust domain so

314
00:10:39,300 --> 00:10:40,760
every CA you set up

315
00:10:40,760 --> 00:10:43,200
independently is uh is a separate trust

316
00:10:43,200 --> 00:10:45,060
domain

317
00:10:45,060 --> 00:10:46,920
the next thing you do is you then assign

318
00:10:46,920 --> 00:10:49,260
you then assign that pki you you

319
00:10:49,260 --> 00:10:51,959
register each workload and then workload

320
00:10:51,959 --> 00:10:54,600
results in the next 509 certificate

321
00:10:54,600 --> 00:10:56,519
and and that x519 certificate allows

322
00:10:56,519 --> 00:10:58,019
that is you're basically a testing

323
00:10:58,019 --> 00:10:59,640
you're saying this particular workload

324
00:10:59,640 --> 00:11:02,399
follows my process I have I have a

325
00:11:02,399 --> 00:11:04,079
tested that it meets my patch set that

326
00:11:04,079 --> 00:11:06,120
it's on a device that I that I own and

327
00:11:06,120 --> 00:11:08,459
control that the device meets the the

328
00:11:08,459 --> 00:11:11,700
set of requirements so uh so there's a

329
00:11:11,700 --> 00:11:12,660
lot that can go inside of the

330
00:11:12,660 --> 00:11:14,700
attestation here in the more advanced

331
00:11:14,700 --> 00:11:16,140
scenarios you actually tie them to

332
00:11:16,140 --> 00:11:17,940
things like that if you're on premise to

333
00:11:17,940 --> 00:11:19,320
the TPM so how would you get

334
00:11:19,320 --> 00:11:21,660
cryptographic uh at the station that

335
00:11:21,660 --> 00:11:23,100
that thing is what it is

336
00:11:23,100 --> 00:11:25,500
in the case of cloud you might tie it to

337
00:11:25,500 --> 00:11:28,260
like your AWS identity document or your

338
00:11:28,260 --> 00:11:30,180
gcp workload identity so you want to tie

339
00:11:30,180 --> 00:11:31,500
it to something that's cryptographically

340
00:11:31,500 --> 00:11:34,260
uh sound if when when you have the

341
00:11:34,260 --> 00:11:36,240
opportunity to do so

342
00:11:36,240 --> 00:11:38,820
not every system can do that but uh but

343
00:11:38,820 --> 00:11:41,640
many systems do have that capability

344
00:11:41,640 --> 00:11:44,220
and so once you have that in place you

345
00:11:44,220 --> 00:11:45,720
can then write your policy

346
00:11:45,720 --> 00:11:47,700
and your policy in this scenario you say

347
00:11:47,700 --> 00:11:50,040
this particular identity is allowed to

348
00:11:50,040 --> 00:11:52,019
perform these particular sets of actions

349
00:11:52,019 --> 00:11:53,339
so in other words this one's saying that

350
00:11:53,339 --> 00:11:54,720
some front-end service is allowed to

351
00:11:54,720 --> 00:11:56,339
make a request to some storage service

352
00:11:56,339 --> 00:11:58,440
you're pulling the information directly

353
00:11:58,440 --> 00:12:00,300
from x509 something that you've already

354
00:12:00,300 --> 00:12:02,760
validated and you're making a

355
00:12:02,760 --> 00:12:04,079
determination on what you want to do

356
00:12:04,079 --> 00:12:06,120
with it so now this one is an example

357
00:12:06,120 --> 00:12:08,220
from open policy agent but that's not

358
00:12:08,220 --> 00:12:09,360
the only one that's out there so you

359
00:12:09,360 --> 00:12:11,660
have things like kiverno you have uh

360
00:12:11,660 --> 00:12:14,760
there's a new one from uh I'll forget

361
00:12:14,760 --> 00:12:16,800
the name of the company but there's

362
00:12:16,800 --> 00:12:18,120
there's several there's several

363
00:12:18,120 --> 00:12:19,500
companies out there that are starting to

364
00:12:19,500 --> 00:12:22,019
produce uh both open source and

365
00:12:22,019 --> 00:12:23,940
proprietary that you can bind into it so

366
00:12:23,940 --> 00:12:26,100
the main point here is not to say go use

367
00:12:26,100 --> 00:12:28,200
Opa uh although that's not a bad choice

368
00:12:28,200 --> 00:12:29,880
the main the main thing here is that you

369
00:12:29,880 --> 00:12:31,019
have something that is declarative

370
00:12:31,019 --> 00:12:33,000
you're explicitly saying that this

371
00:12:33,000 --> 00:12:34,560
particular workload based upon its

372
00:12:34,560 --> 00:12:36,839
cryptographic identity of what's within

373
00:12:36,839 --> 00:12:38,600
the certificate is allowed to talk to

374
00:12:38,600 --> 00:12:41,100
what it's allowed to do and who is

375
00:12:41,100 --> 00:12:42,600
allowed to communicate with

376
00:12:42,600 --> 00:12:43,740
so

377
00:12:43,740 --> 00:12:46,440
once you have that in place

378
00:12:46,440 --> 00:12:48,180
you also you can add then establish

379
00:12:48,180 --> 00:12:49,740
trust between organizations as well so

380
00:12:49,740 --> 00:12:52,200
we have this scenario two Cas and so if

381
00:12:52,200 --> 00:12:54,779
I trade Cas between between each other

382
00:12:54,779 --> 00:12:56,339
that means that I might have something

383
00:12:56,339 --> 00:12:58,200
from one system uh workload on one

384
00:12:58,200 --> 00:12:59,940
system it can communicate to Something

385
00:12:59,940 --> 00:13:01,920
in another environment another

386
00:13:01,920 --> 00:13:04,440
might be a different application in your

387
00:13:04,440 --> 00:13:06,240
company or might literally be a third

388
00:13:06,240 --> 00:13:07,740
party organization that you're that

389
00:13:07,740 --> 00:13:09,180
you're integrating with so as long as

390
00:13:09,180 --> 00:13:10,740
you can share those Cas and you can make

391
00:13:10,740 --> 00:13:13,260
sure those Cas hit the workloads you can

392
00:13:13,260 --> 00:13:15,839
then vow you can then check the identity

393
00:13:15,839 --> 00:13:17,339
especially if you're using Mutual TLS

394
00:13:17,339 --> 00:13:18,779
you can actually lift the identity

395
00:13:18,779 --> 00:13:20,820
straight from the TLs transport so

396
00:13:20,820 --> 00:13:22,079
you're not asking for a long living

397
00:13:22,079 --> 00:13:23,100
token

398
00:13:23,100 --> 00:13:25,560
that can be stolen and reused instead

399
00:13:25,560 --> 00:13:27,360
you're saying I have this x509

400
00:13:27,360 --> 00:13:29,220
certificate and I am using it actively

401
00:13:29,220 --> 00:13:31,380
in this communication and eliminates a

402
00:13:31,380 --> 00:13:33,300
man in the middle attacks as long as TLS

403
00:13:33,300 --> 00:13:36,000
remains Unbroken

404
00:13:36,000 --> 00:13:38,760
and as long as your keys are strong

405
00:13:38,760 --> 00:13:39,839
enough

406
00:13:39,839 --> 00:13:41,220
and so

407
00:13:41,220 --> 00:13:44,100
uh and and in this particular scenario

408
00:13:44,100 --> 00:13:46,560
you can see I've actually have an

409
00:13:46,560 --> 00:13:49,019
example where the domain has been

410
00:13:49,019 --> 00:13:50,579
specifically set so I can say this

411
00:13:50,579 --> 00:13:54,420
specific domain for this identity is the

412
00:13:54,420 --> 00:13:56,040
uh is allowed to make these particular

413
00:13:56,040 --> 00:13:57,899
choices and what's really nice about

414
00:13:57,899 --> 00:13:59,040
this is that we have the previous

415
00:13:59,040 --> 00:14:00,420
example with the front end and the back

416
00:14:00,420 --> 00:14:01,500
end service

417
00:14:01,500 --> 00:14:04,500
this allows us to specify the exact name

418
00:14:04,500 --> 00:14:07,380
of the uh of the organization or group

419
00:14:07,380 --> 00:14:08,700
that I'm working with so I can actually

420
00:14:08,700 --> 00:14:10,440
treat it I'm not creating special

421
00:14:10,440 --> 00:14:12,000
tooling for a third-party organization

422
00:14:12,000 --> 00:14:14,040
I'm using exactly what I used before in

423
00:14:14,040 --> 00:14:17,040
order to in order to validate the

424
00:14:17,040 --> 00:14:20,000
third-party systems

425
00:14:21,000 --> 00:14:22,320
and

426
00:14:22,320 --> 00:14:23,760
so

427
00:14:23,760 --> 00:14:24,720
um

428
00:14:24,720 --> 00:14:26,579
it's so when you start taking a look at

429
00:14:26,579 --> 00:14:28,760
at applications

430
00:14:28,760 --> 00:14:31,200
the Assumption like all what all this is

431
00:14:31,200 --> 00:14:32,519
leading towards is that you're not

432
00:14:32,519 --> 00:14:34,260
assuming that the network is secure what

433
00:14:34,260 --> 00:14:35,220
you're doing is you're actually taking

434
00:14:35,220 --> 00:14:37,019
the control bringing it closer to the

435
00:14:37,019 --> 00:14:38,220
application

436
00:14:38,220 --> 00:14:39,720
there's some debate as to whether the

437
00:14:39,720 --> 00:14:41,820
application itself should do that should

438
00:14:41,820 --> 00:14:43,800
own the control or whether you should

439
00:14:43,800 --> 00:14:44,940
have something wrapped around it like

440
00:14:44,940 --> 00:14:46,680
maybe you stick Envoy or or something

441
00:14:46,680 --> 00:14:49,019
similar around it but in both cases

442
00:14:49,019 --> 00:14:51,060
you're still bringing the control closer

443
00:14:51,060 --> 00:14:52,860
to the to the application to the point

444
00:14:52,860 --> 00:14:54,180
where you can where you have that

445
00:14:54,180 --> 00:14:55,440
context of what the application is

446
00:14:55,440 --> 00:14:58,399
trying trying to do

447
00:14:58,920 --> 00:15:02,639
and so uh if you look at an advanced

448
00:15:02,639 --> 00:15:04,920
version of this uh this is actually

449
00:15:04,920 --> 00:15:07,019
where I think many of the systems are

450
00:15:07,019 --> 00:15:08,940
starting to head towards is not just a

451
00:15:08,940 --> 00:15:10,320
connecting to B

452
00:15:10,320 --> 00:15:12,720
in this scenario we have a multi-party

453
00:15:12,720 --> 00:15:16,139
edge compute and uh there's also several

454
00:15:16,139 --> 00:15:18,000
other examples of this as well you can

455
00:15:18,000 --> 00:15:19,740
pretend that the center part of this is

456
00:15:19,740 --> 00:15:22,440
a is connected to with uh with a 5G Edge

457
00:15:22,440 --> 00:15:24,620
environment

458
00:15:24,620 --> 00:15:26,399
that's a whole thing that's coming

459
00:15:26,399 --> 00:15:28,440
that's coming forward as as 5G

460
00:15:28,440 --> 00:15:29,699
infrastructure starts to roll out so

461
00:15:29,699 --> 00:15:31,079
they got the radios out but they still

462
00:15:31,079 --> 00:15:32,220
have the back-end infrastructure they're

463
00:15:32,220 --> 00:15:33,300
trying to deploy once they get the

464
00:15:33,300 --> 00:15:34,800
backend infrastructure you're going to

465
00:15:34,800 --> 00:15:36,899
see lots of edge data centers and inside

466
00:15:36,899 --> 00:15:38,699
of that edge data center you might see

467
00:15:38,699 --> 00:15:39,899
things like firewall as a service

468
00:15:39,899 --> 00:15:42,120
intrusion detection as a service data

469
00:15:42,120 --> 00:15:43,260
loss prevention as a service things

470
00:15:43,260 --> 00:15:45,360
various companies have put in that end

471
00:15:45,360 --> 00:15:47,639
up going through like Equinox or equinix

472
00:15:47,639 --> 00:15:49,260
or some other similar type of company

473
00:15:49,260 --> 00:15:52,380
the main point here is not is not to

474
00:15:52,380 --> 00:15:55,019
promote that but it's to point out that

475
00:15:55,019 --> 00:15:56,820
you that you have multiple things that

476
00:15:56,820 --> 00:15:58,500
your system has to Traverse to so it's

477
00:15:58,500 --> 00:16:01,620
not just my application uh talking or my

478
00:16:01,620 --> 00:16:03,120
workload talking to some kubernetes

479
00:16:03,120 --> 00:16:05,220
service in the cloud there's also things

480
00:16:05,220 --> 00:16:06,600
in the center that you have to consider

481
00:16:06,600 --> 00:16:08,399
the identity of as well like how do I

482
00:16:08,399 --> 00:16:09,540
prove that something went through a

483
00:16:09,540 --> 00:16:10,920
firewall how do I prove that something

484
00:16:10,920 --> 00:16:12,480
went through a data loss prevention or

485
00:16:12,480 --> 00:16:15,060
through or to other environments and in

486
00:16:15,060 --> 00:16:16,320
some scenarios some of those Services

487
00:16:16,320 --> 00:16:19,199
may be done as a service so how do you

488
00:16:19,199 --> 00:16:21,240
how do you demonstrate that

489
00:16:21,240 --> 00:16:24,000
so there are answers to this uh one one

490
00:16:24,000 --> 00:16:25,620
example is within spiffy I didn't write

491
00:16:25,620 --> 00:16:26,820
it in this particular slide but within

492
00:16:26,820 --> 00:16:29,279
spiffy there's work that's going on to

493
00:16:29,279 --> 00:16:31,079
look at that Transit of identity and

494
00:16:31,079 --> 00:16:33,420
it's a really good example of transitive

495
00:16:33,420 --> 00:16:35,940
identity missing from from Mutual TLS

496
00:16:35,940 --> 00:16:37,560
it's like you take three services in

497
00:16:37,560 --> 00:16:39,720
let's call them a b and c a connects to

498
00:16:39,720 --> 00:16:41,459
B with mutual TLS so they validate each

499
00:16:41,459 --> 00:16:43,199
other B connects to C and with mutual

500
00:16:43,199 --> 00:16:45,120
TLS and they validate each other how

501
00:16:45,120 --> 00:16:48,959
does a validate C there's no you have to

502
00:16:48,959 --> 00:16:50,759
trust B that it's doing that's doing the

503
00:16:50,759 --> 00:16:52,800
right thing there one of the things that

504
00:16:52,800 --> 00:16:55,740
we have is we're able to uh is there's

505
00:16:55,740 --> 00:16:58,800
ways to build up a miniature chain that

506
00:16:58,800 --> 00:17:00,360
basically says like what's the audience

507
00:17:00,360 --> 00:17:02,220
of the next thing I'm connecting to and

508
00:17:02,220 --> 00:17:03,899
has another thing that receives that

509
00:17:03,899 --> 00:17:05,880
validates that it that it received that

510
00:17:05,880 --> 00:17:07,679
particular token from that and you're

511
00:17:07,679 --> 00:17:08,939
able to like build up this miniature

512
00:17:08,939 --> 00:17:11,699
chain on the Fly for for a particular

513
00:17:11,699 --> 00:17:12,839
use case so you can prove that things

514
00:17:12,839 --> 00:17:14,040
have gone through so there's work being

515
00:17:14,040 --> 00:17:15,599
done in that in the community to solve

516
00:17:15,599 --> 00:17:16,919
that but I want to point out that is

517
00:17:16,919 --> 00:17:18,419
currently a gap that you'll see in many

518
00:17:18,419 --> 00:17:20,520
systems is that there's no way to to do

519
00:17:20,520 --> 00:17:23,959
the transit of identity an easy way

520
00:17:24,319 --> 00:17:26,699
so I mentioned about wanting to push it

521
00:17:26,699 --> 00:17:27,959
toward the identities towards the

522
00:17:27,959 --> 00:17:29,520
infrastructure and that also includes

523
00:17:29,520 --> 00:17:30,720
when you make those initial connections

524
00:17:30,720 --> 00:17:32,580
you want to make sure that in time we're

525
00:17:32,580 --> 00:17:33,720
going to start to see these identities

526
00:17:33,720 --> 00:17:35,820
permeate to things like the VPN Gateway

527
00:17:35,820 --> 00:17:37,559
and VPN concentrators

528
00:17:37,559 --> 00:17:40,020
and this actually produces a really

529
00:17:40,020 --> 00:17:43,140
interesting uh effect because if you

530
00:17:43,140 --> 00:17:44,820
listen to a lot of the proponents on

531
00:17:44,820 --> 00:17:46,799
zero trust you'll hear everything needs

532
00:17:46,799 --> 00:17:47,940
to be on the network

533
00:17:47,940 --> 00:17:49,980
everything needs to be collectible like

534
00:17:49,980 --> 00:17:51,000
we want to make sure everything can be

535
00:17:51,000 --> 00:17:52,679
connected with each other but the

536
00:17:52,679 --> 00:17:54,360
reality is that when you look at many of

537
00:17:54,360 --> 00:17:57,360
the regulatory systems many of the

538
00:17:57,360 --> 00:17:59,220
regulations say that you have to have

539
00:17:59,220 --> 00:18:00,780
certain additional controls you can't

540
00:18:00,780 --> 00:18:02,580
just throw everything on the network or

541
00:18:02,580 --> 00:18:04,740
publicly and also

542
00:18:04,740 --> 00:18:06,840
there are sometimes bugs we find in

543
00:18:06,840 --> 00:18:08,340
mutual TLS so we also want to have

544
00:18:08,340 --> 00:18:11,100
layered we also want to have a layer

545
00:18:11,100 --> 00:18:12,240
defense

546
00:18:12,240 --> 00:18:14,400
and so

547
00:18:14,400 --> 00:18:16,559
so you can't just make the assumption

548
00:18:16,559 --> 00:18:18,419
that your Mutual TLS is going to save

549
00:18:18,419 --> 00:18:20,520
you in every scenario so we're still

550
00:18:20,520 --> 00:18:22,020
going to have vpns we're still going to

551
00:18:22,020 --> 00:18:24,360
have these type of things that exist but

552
00:18:24,360 --> 00:18:26,340
I but I believe the best case scenario

553
00:18:26,340 --> 00:18:28,500
is that we work out paths to make to

554
00:18:28,500 --> 00:18:29,820
make these particular things work so

555
00:18:29,820 --> 00:18:31,140
that we have those initial connections

556
00:18:31,140 --> 00:18:32,400
come in we can establish those

557
00:18:32,400 --> 00:18:33,720
connections on the Fly there are

558
00:18:33,720 --> 00:18:36,660
testable they they can get built is when

559
00:18:36,660 --> 00:18:38,160
needed when you no longer need them to

560
00:18:38,160 --> 00:18:39,299
go away and everything has a

561
00:18:39,299 --> 00:18:41,340
cryptographic identity you can track

562
00:18:41,340 --> 00:18:43,260
which means that you end up with

563
00:18:43,260 --> 00:18:44,940
something that from an infrastructure

564
00:18:44,940 --> 00:18:46,080
looks like this

565
00:18:46,080 --> 00:18:48,059
you're driving something an identity

566
00:18:48,059 --> 00:18:49,200
that drives all the way from the

567
00:18:49,200 --> 00:18:50,940
hardware TPM up to the app but that same

568
00:18:50,940 --> 00:18:53,100
identity has become compatible with the

569
00:18:53,100 --> 00:18:55,440
infrastructure and similar

570
00:18:55,440 --> 00:18:57,720
I'll give a few moments for a couple

571
00:18:57,720 --> 00:19:00,020
photos

572
00:19:08,520 --> 00:19:10,260
so let's dive into the actual

573
00:19:10,260 --> 00:19:12,000
applications themselves and talk about

574
00:19:12,000 --> 00:19:13,679
how applications can move towards uh

575
00:19:13,679 --> 00:19:16,679
towards zero trust and so historically

576
00:19:16,679 --> 00:19:18,120
you have something that looks something

577
00:19:18,120 --> 00:19:19,860
like this and I should actually be a

578
00:19:19,860 --> 00:19:21,179
little bit careful on how I word this

579
00:19:21,179 --> 00:19:22,799
because I'm not saying that there's no

580
00:19:22,799 --> 00:19:24,240
authentication that occurs at all very

581
00:19:24,240 --> 00:19:26,100
often the client will have a user

582
00:19:26,100 --> 00:19:27,600
Identity or something similar that it

583
00:19:27,600 --> 00:19:29,640
uses to prove that who they are it goes

584
00:19:29,640 --> 00:19:31,500
over the firewall the application server

585
00:19:31,500 --> 00:19:33,120
is responsible for validating the the

586
00:19:33,120 --> 00:19:35,580
JWT to make sure that it that it can log

587
00:19:35,580 --> 00:19:36,419
in

588
00:19:36,419 --> 00:19:38,700
and assuming that's not broken that that

589
00:19:38,700 --> 00:19:41,280
gives you something that's defendable

590
00:19:41,280 --> 00:19:42,240
um but the problem is that what happens

591
00:19:42,240 --> 00:19:43,440
when this particular system has been

592
00:19:43,440 --> 00:19:45,840
compromised the application server can

593
00:19:45,840 --> 00:19:47,700
they do a scan of can they do a scan of

594
00:19:47,700 --> 00:19:50,760
the database can they do a horizontal

595
00:19:50,760 --> 00:19:53,340
attack on others and gain a foothold

596
00:19:53,340 --> 00:19:54,539
into other environments that might be

597
00:19:54,539 --> 00:19:56,280
more sensitive

598
00:19:56,280 --> 00:19:59,160
and so the question is how much again we

599
00:19:59,160 --> 00:20:00,600
mentioned before what is the blast

600
00:20:00,600 --> 00:20:01,980
radius you have to ask the question and

601
00:20:01,980 --> 00:20:03,240
when you're designing a system what is

602
00:20:03,240 --> 00:20:04,500
the blast radius of this particular

603
00:20:04,500 --> 00:20:05,820
component is compromised what is the

604
00:20:05,820 --> 00:20:08,880
blast radius of that compromise

605
00:20:08,880 --> 00:20:11,280
and so what if we were to tie in the

606
00:20:11,280 --> 00:20:12,900
same things that we mentioned before but

607
00:20:12,900 --> 00:20:14,520
tie them down to the application so a

608
00:20:14,520 --> 00:20:16,799
client comes in has a JWT we're able to

609
00:20:16,799 --> 00:20:18,840
say that a particular system has to have

610
00:20:18,840 --> 00:20:21,780
a JWT but also the application server

611
00:20:21,780 --> 00:20:24,020
and database server all have their own

612
00:20:24,020 --> 00:20:26,100
cryptographic identities as well so in

613
00:20:26,100 --> 00:20:28,320
this scenario in the database server

614
00:20:28,320 --> 00:20:31,860
I have a an identity and that identity

615
00:20:31,860 --> 00:20:33,660
is sorry so it's saying I will only

616
00:20:33,660 --> 00:20:35,100
receive things from the application

617
00:20:35,100 --> 00:20:36,840
server that has this specific identity

618
00:20:36,840 --> 00:20:39,360
and I will only process the request if

619
00:20:39,360 --> 00:20:42,000
the JWT of the user has been forwarded

620
00:20:42,000 --> 00:20:44,220
to me or an equivalent that is an

621
00:20:44,220 --> 00:20:45,539
equivalent token that's been swapped out

622
00:20:45,539 --> 00:20:48,360
through some third-party identifier

623
00:20:48,360 --> 00:20:49,380
so I have something that's

624
00:20:49,380 --> 00:20:51,840
cryptographically provable from the user

625
00:20:51,840 --> 00:20:53,460
before I process so that application

626
00:20:53,460 --> 00:20:55,860
server has been compromised if it tries

627
00:20:55,860 --> 00:20:57,720
to just arbitrarily access the database

628
00:20:57,720 --> 00:21:00,240
server and it doesn't have that external

629
00:21:00,240 --> 00:21:02,820
identity that's attached to it that

630
00:21:02,820 --> 00:21:03,900
should that should go to my

631
00:21:03,900 --> 00:21:05,400
observability platform and tell me I

632
00:21:05,400 --> 00:21:09,000
have a problem so it increases the the

633
00:21:09,000 --> 00:21:11,520
risk to the attacker and reduces the

634
00:21:11,520 --> 00:21:13,679
value of the attack to the to to the

635
00:21:13,679 --> 00:21:15,900
attacker again not saying that this is

636
00:21:15,900 --> 00:21:18,720
100 perfect and and impossible to break

637
00:21:18,720 --> 00:21:21,299
but it's a large part of security is

638
00:21:21,299 --> 00:21:23,280
about economics you want to try to

639
00:21:23,280 --> 00:21:26,039
increase the cost to the attacker while

640
00:21:26,039 --> 00:21:27,720
simultaneously keeping the constraint of

641
00:21:27,720 --> 00:21:30,059
the cost to you and you want to decrease

642
00:21:30,059 --> 00:21:32,880
the value so that it so if someone is

643
00:21:32,880 --> 00:21:34,799
successful they you minimize the value

644
00:21:34,799 --> 00:21:36,960
they get out of it and so it turns into

645
00:21:36,960 --> 00:21:38,159
an economics game it's like how

646
00:21:38,159 --> 00:21:42,140
expensive is it to break into a system

647
00:21:42,559 --> 00:21:46,320
so I'm tying it in this identity

648
00:21:46,320 --> 00:21:48,299
Provider from that JWT that we mentioned

649
00:21:48,299 --> 00:21:49,440
that's actually coming from a

650
00:21:49,440 --> 00:21:51,840
third-party environment and not not from

651
00:21:51,840 --> 00:21:53,340
your your system so your application

652
00:21:53,340 --> 00:21:54,900
should never be

653
00:21:54,900 --> 00:21:56,700
as much as possible you should not be an

654
00:21:56,700 --> 00:21:57,840
identity provider it should be an

655
00:21:57,840 --> 00:21:59,280
identity consumer that also goes for the

656
00:21:59,280 --> 00:22:00,720
workload identities

657
00:22:00,720 --> 00:22:02,039
the workload identity thing that

658
00:22:02,039 --> 00:22:03,299
actually issues out the certificates

659
00:22:03,299 --> 00:22:05,760
should not be in your application that

660
00:22:05,760 --> 00:22:06,600
should be something that your

661
00:22:06,600 --> 00:22:08,580
application works with presents evidence

662
00:22:08,580 --> 00:22:10,559
that hey I'm an application server I

663
00:22:10,559 --> 00:22:12,419
have this this image hash I have this

664
00:22:12,419 --> 00:22:14,940
TPM that I can prove et cetera et cetera

665
00:22:14,940 --> 00:22:16,380
and

666
00:22:16,380 --> 00:22:18,960
so that way that when something connects

667
00:22:18,960 --> 00:22:21,659
in you're like in this scenario you

668
00:22:21,659 --> 00:22:22,980
don't actually have a way to Mint the

669
00:22:22,980 --> 00:22:24,360
token yourself so it becomes difficult

670
00:22:24,360 --> 00:22:27,379
to to impersonate

671
00:22:29,460 --> 00:22:32,159
so one of the standards that I'm uh that

672
00:22:32,159 --> 00:22:35,159
I'm a promoter of is uh is spiffy and so

673
00:22:35,159 --> 00:22:37,620
spiffy provides a structured way of of

674
00:22:37,620 --> 00:22:39,360
providing an expire online certificate

675
00:22:39,360 --> 00:22:41,880
on how you structure that out

676
00:22:41,880 --> 00:22:44,580
and also allows you to generate JWT off

677
00:22:44,580 --> 00:22:46,980
of that so that you can then identify

678
00:22:46,980 --> 00:22:49,020
your applications either through either

679
00:22:49,020 --> 00:22:52,080
the x509 or the JWT path both of them

680
00:22:52,080 --> 00:22:53,940
are important you want to always have

681
00:22:53,940 --> 00:22:56,220
mutual TLS impossible using xyline

682
00:22:56,220 --> 00:22:57,299
certificate

683
00:22:57,299 --> 00:22:59,880
the JWT is useful for the transitive

684
00:22:59,880 --> 00:23:01,260
identity problem that I mentioned before

685
00:23:01,260 --> 00:23:03,179
again not a perfect solution but it

686
00:23:03,179 --> 00:23:04,440
gives you a little bit extra that you

687
00:23:04,440 --> 00:23:06,780
can bind against in order to say hey I

688
00:23:06,780 --> 00:23:08,340
have something here that proves that I

689
00:23:08,340 --> 00:23:10,020
at least spoke to the originator that

690
00:23:10,020 --> 00:23:13,700
that had access to that token

691
00:23:14,640 --> 00:23:16,260
um and so

692
00:23:16,260 --> 00:23:19,200
uh once so let's let's back up a little

693
00:23:19,200 --> 00:23:21,960
bit and uh now that we've given a

694
00:23:21,960 --> 00:23:23,760
definition for zero a definition for

695
00:23:23,760 --> 00:23:25,080
zero trust and of course this is not

696
00:23:25,080 --> 00:23:26,880
comprehensive there's a lot more if you

697
00:23:26,880 --> 00:23:28,260
Reacher than this definitions through

698
00:23:28,260 --> 00:23:29,700
the season definitions or they talk

699
00:23:29,700 --> 00:23:31,860
about how to get the devices actually

700
00:23:31,860 --> 00:23:33,539
provisioned how do you get the user

701
00:23:33,539 --> 00:23:35,400
smart cards or similar or they talk

702
00:23:35,400 --> 00:23:37,080
about data they're actually still trying

703
00:23:37,080 --> 00:23:38,640
to work out what to do with data yeah so

704
00:23:38,640 --> 00:23:39,780
it's like well something will happen in

705
00:23:39,780 --> 00:23:42,120
the future but like there's a lot there

706
00:23:42,120 --> 00:23:44,340
but when you're trying to establish a

707
00:23:44,340 --> 00:23:47,159
new paradigm that new paradigm is not

708
00:23:47,159 --> 00:23:48,240
going to you don't want to start with

709
00:23:48,240 --> 00:23:49,679
everything you want to start with one

710
00:23:49,679 --> 00:23:51,059
thing like started with Identity or

711
00:23:51,059 --> 00:23:53,100
start with policy you don't want to just

712
00:23:53,100 --> 00:23:56,520
jump and like jump all in and so the

713
00:23:56,520 --> 00:23:57,780
very first thing that I like to focus on

714
00:23:57,780 --> 00:23:59,220
is actually work is actually looking at

715
00:23:59,220 --> 00:24:00,659
the organization like you actually want

716
00:24:00,659 --> 00:24:01,740
to have a conversation with the

717
00:24:01,740 --> 00:24:04,140
executives too so you get that bio like

718
00:24:04,140 --> 00:24:05,159
nothing will happen without the

719
00:24:05,159 --> 00:24:08,340
executive buy-in uh actually if you ever

720
00:24:08,340 --> 00:24:10,679
take a cissp that's actually one of the

721
00:24:10,679 --> 00:24:12,179
big things that they talk about is you

722
00:24:12,179 --> 00:24:14,460
have to have executive buy-in

723
00:24:14,460 --> 00:24:16,919
and so when you're talking to a CSO what

724
00:24:16,919 --> 00:24:19,559
is the purpose of a of a CSO so granted

725
00:24:19,559 --> 00:24:20,940
we're at a security conference so I know

726
00:24:20,940 --> 00:24:22,380
many of you know the answer of that but

727
00:24:22,380 --> 00:24:24,000
at the end of the day it's not just

728
00:24:24,000 --> 00:24:25,440
about improving your information

729
00:24:25,440 --> 00:24:27,059
security it's also about constraining

730
00:24:27,059 --> 00:24:28,559
constraining the risk and making sure

731
00:24:28,559 --> 00:24:30,120
you constrain the cost of that risk so

732
00:24:30,120 --> 00:24:31,559
that the business can continue to do

733
00:24:31,559 --> 00:24:33,299
business

734
00:24:33,299 --> 00:24:36,000
so information security 101 I'm sure

735
00:24:36,000 --> 00:24:37,919
you'll see this slot this document

736
00:24:37,919 --> 00:24:40,080
everywhere the confidentiality integrity

737
00:24:40,080 --> 00:24:42,059
and availability confidentiality you

738
00:24:42,059 --> 00:24:42,960
want to keep your secret secret

739
00:24:42,960 --> 00:24:44,700
Integrity you want to make sure your

740
00:24:44,700 --> 00:24:47,700
data remains uh untampered with and

741
00:24:47,700 --> 00:24:49,320
availability that you can access it when

742
00:24:49,320 --> 00:24:50,280
you want

743
00:24:50,280 --> 00:24:53,700
uh which is conveniently CIA

744
00:24:53,700 --> 00:24:55,620
so if you if you have trouble

745
00:24:55,620 --> 00:24:57,539
remembering it just remember CIA it'll

746
00:24:57,539 --> 00:25:00,500
help lead you towards this

747
00:25:00,840 --> 00:25:02,580
um so the way that they tend to do this

748
00:25:02,580 --> 00:25:05,280
is they tend to push towards that setup

749
00:25:05,280 --> 00:25:07,919
policy uh there's also a term Overlord

750
00:25:07,919 --> 00:25:09,480
here so from now on when I mention

751
00:25:09,480 --> 00:25:11,460
policy unless I explicitly say it's like

752
00:25:11,460 --> 00:25:12,960
an open policy I explicitly mean

753
00:25:12,960 --> 00:25:15,480
organization policies at this point so

754
00:25:15,480 --> 00:25:18,960
policy are things like how do I all all

755
00:25:18,960 --> 00:25:22,080
devices on encrypted devices or sorry

756
00:25:22,080 --> 00:25:24,419
all data arrests must be encrypted like

757
00:25:24,419 --> 00:25:27,320
that that's a simple simple policy

758
00:25:27,320 --> 00:25:29,039
standards are like how do you do that

759
00:25:29,039 --> 00:25:30,720
well our standard is we use AES with

760
00:25:30,720 --> 00:25:33,779
this with a specific key size procedures

761
00:25:33,779 --> 00:25:35,640
here's how you do it in Linux here's how

762
00:25:35,640 --> 00:25:37,440
you do it in Windows here's how you do

763
00:25:37,440 --> 00:25:39,299
it in Mac OS these procedures must be

764
00:25:39,299 --> 00:25:41,700
followed guidelines are best practices

765
00:25:41,700 --> 00:25:44,159
like best practice might be something

766
00:25:44,159 --> 00:25:47,820
like if you if you're if you're

767
00:25:47,820 --> 00:25:49,679
resetting a password maybe you trim the

768
00:25:49,679 --> 00:25:51,620
the drive you don't really need to but

769
00:25:51,620 --> 00:25:54,539
maybe it's the best practice you do and

770
00:25:54,539 --> 00:25:56,720
so

771
00:25:58,320 --> 00:26:00,600
so once you get executive buy-in or once

772
00:26:00,600 --> 00:26:02,159
you're pushing towards that the next

773
00:26:02,159 --> 00:26:03,299
thing you want to do is you want to find

774
00:26:03,299 --> 00:26:05,159
out who all your who owns the policies

775
00:26:05,159 --> 00:26:06,720
and who and who and who wants the

776
00:26:06,720 --> 00:26:09,360
standards because the the reality is

777
00:26:09,360 --> 00:26:11,159
that if you're looking at a zero trust

778
00:26:11,159 --> 00:26:13,919
implementation it's very unlikely that

779
00:26:13,919 --> 00:26:16,500
you what you're implementing and not to

780
00:26:16,500 --> 00:26:18,120
say that it will meet the policies but

781
00:26:18,120 --> 00:26:19,980
you will almost certainly not meet the

782
00:26:19,980 --> 00:26:21,299
standards you will not meet the

783
00:26:21,299 --> 00:26:22,559
guidelines which means whatever you do

784
00:26:22,559 --> 00:26:23,760
is going to be outside of those

785
00:26:23,760 --> 00:26:24,960
standards and guidelines that have been

786
00:26:24,960 --> 00:26:26,880
established because it's a new paradigm

787
00:26:26,880 --> 00:26:29,100
so what you have to do is you have to

788
00:26:29,100 --> 00:26:31,380
enter into a conversation with the to

789
00:26:31,380 --> 00:26:33,000
work out what are the policies what are

790
00:26:33,000 --> 00:26:34,080
the current standards what are the

791
00:26:34,080 --> 00:26:35,640
current guidelines and again this goes

792
00:26:35,640 --> 00:26:37,080
back to the executive buy-ins that way

793
00:26:37,080 --> 00:26:38,520
that you can work out who do you need to

794
00:26:38,520 --> 00:26:39,779
talk with so you can learn what is

795
00:26:39,779 --> 00:26:41,880
necessary for your infrastructure

796
00:26:41,880 --> 00:26:43,980
and ideally you want to try to find a

797
00:26:43,980 --> 00:26:45,600
Greenfield application where it suits

798
00:26:45,600 --> 00:26:46,919
really well and where you want to

799
00:26:46,919 --> 00:26:49,320
experiment with it and get the green

800
00:26:49,320 --> 00:26:52,260
light from uh from the uh from your

801
00:26:52,260 --> 00:26:54,059
Executives of whoever's allowed to to

802
00:26:54,059 --> 00:26:56,220
make that final decision

803
00:26:56,220 --> 00:26:57,900
and before you write a single line of

804
00:26:57,900 --> 00:26:59,640
code you actually want to Loop in your

805
00:26:59,640 --> 00:27:00,840
security teams now this is something

806
00:27:00,840 --> 00:27:02,880
that I think is a good practice even if

807
00:27:02,880 --> 00:27:05,100
it's not zero trust

808
00:27:05,100 --> 00:27:07,080
you want to Loop in your security teams

809
00:27:07,080 --> 00:27:08,820
early on your application design because

810
00:27:08,820 --> 00:27:10,620
usually what happens with application

811
00:27:10,620 --> 00:27:12,120
teams is they'll start developing and

812
00:27:12,120 --> 00:27:13,320
then they'll hit a brick wall and it's

813
00:27:13,320 --> 00:27:14,279
like well you have to do all these

814
00:27:14,279 --> 00:27:15,720
additional things to comply and in the

815
00:27:15,720 --> 00:27:16,980
meantime your application security

816
00:27:16,980 --> 00:27:19,200
standards have actually suffered because

817
00:27:19,200 --> 00:27:20,520
you're not bothered to bring in the

818
00:27:20,520 --> 00:27:22,740
experts and so having those

819
00:27:22,740 --> 00:27:25,200
conversations early on means that the

820
00:27:25,200 --> 00:27:27,840
the cost of of implementing and getting

821
00:27:27,840 --> 00:27:29,460
to that to that secure place not only

822
00:27:29,460 --> 00:27:30,900
are you going to be more likely to hit

823
00:27:30,900 --> 00:27:32,640
the the standards and get that approval

824
00:27:32,640 --> 00:27:33,779
but you're also going to have a lower

825
00:27:33,779 --> 00:27:35,580
overall cost so it's important that you

826
00:27:35,580 --> 00:27:37,980
get that that you that you get into the

827
00:27:37,980 --> 00:27:39,179
habit of working with or if you're on

828
00:27:39,179 --> 00:27:41,400
the infosec side to be receptive to that

829
00:27:41,400 --> 00:27:42,720
as well so if you're on the other side

830
00:27:42,720 --> 00:27:44,760
of that like please if you have a

831
00:27:44,760 --> 00:27:46,020
developer comes around and they're

832
00:27:46,020 --> 00:27:47,940
trying to get to you to follow this

833
00:27:47,940 --> 00:27:49,020
pattern like please help them out

834
00:27:49,020 --> 00:27:50,700
because that's how you get that's how

835
00:27:50,700 --> 00:27:53,340
you get the transformational change

836
00:27:53,340 --> 00:27:54,659
um aren't you architect it you start

837
00:27:54,659 --> 00:27:56,700
something small I recommend identity and

838
00:27:56,700 --> 00:27:58,440
mutual TLS says initial starting point

839
00:27:58,440 --> 00:27:59,880
because even if you don't add the policy

840
00:27:59,880 --> 00:28:02,220
the fact that you have membership uh

841
00:28:02,220 --> 00:28:04,679
that is cryptographically verifiable uh

842
00:28:04,679 --> 00:28:06,059
improves your total security posture

843
00:28:06,059 --> 00:28:07,679
just flat out it just improves it just

844
00:28:07,679 --> 00:28:09,840
if that's all that you get out of it and

845
00:28:09,840 --> 00:28:12,240
then you iterate

846
00:28:12,240 --> 00:28:15,240
so once once you have that initial first

847
00:28:15,240 --> 00:28:17,220
thing you want to do and you've and

848
00:28:17,220 --> 00:28:18,179
you've worked towards getting an

849
00:28:18,179 --> 00:28:19,320
implementation you also want to make

850
00:28:19,320 --> 00:28:21,960
sure that you look at the observability

851
00:28:21,960 --> 00:28:23,940
every single action you do has to be

852
00:28:23,940 --> 00:28:25,980
something that's observed and that

853
00:28:25,980 --> 00:28:27,179
second line I put in there of a tree

854
00:28:27,179 --> 00:28:28,320
falls in the forest and you did not

855
00:28:28,320 --> 00:28:29,760
observe it did it really fall well you

856
00:28:29,760 --> 00:28:31,440
can add you can change that word to tree

857
00:28:31,440 --> 00:28:33,299
fall too if you had a security incident

858
00:28:33,299 --> 00:28:35,279
or security breach just because you

859
00:28:35,279 --> 00:28:36,299
don't know about it doesn't mean it

860
00:28:36,299 --> 00:28:37,140
didn't happen

861
00:28:37,140 --> 00:28:39,480
uh and the and so

862
00:28:39,480 --> 00:28:42,779
even worse if if it's discovered and you

863
00:28:42,779 --> 00:28:43,980
don't have information to show what the

864
00:28:43,980 --> 00:28:45,240
scope is you have to also assume the

865
00:28:45,240 --> 00:28:46,679
worst case scenario which it might be

866
00:28:46,679 --> 00:28:48,480
like oh everything is gone

867
00:28:48,480 --> 00:28:50,520
so

868
00:28:50,520 --> 00:28:53,039
and the uh you're actually part of the

869
00:28:53,039 --> 00:28:54,179
reason why I recommend you look at

870
00:28:54,179 --> 00:28:57,059
observability as a as a an or as a

871
00:28:57,059 --> 00:28:59,580
mandatory part of your first step is

872
00:28:59,580 --> 00:29:01,919
because it turns out that observability

873
00:29:01,919 --> 00:29:04,980
is often defined based upon the previous

874
00:29:04,980 --> 00:29:06,720
set of practices so the number of places

875
00:29:06,720 --> 00:29:08,159
that I've seen where

876
00:29:08,159 --> 00:29:09,840
the way they identify their service is

877
00:29:09,840 --> 00:29:12,120
actually IP address import so you come

878
00:29:12,120 --> 00:29:13,980
in with just use a simple example not

879
00:29:13,980 --> 00:29:15,539
even looking at the zero trust side I

880
00:29:15,539 --> 00:29:17,520
just come up with kubernetes that IP

881
00:29:17,520 --> 00:29:19,679
address is is going to be reused across

882
00:29:19,679 --> 00:29:21,480
so many different clusters so that iPad

883
00:29:21,480 --> 00:29:23,340
or support I'm not going to say is

884
00:29:23,340 --> 00:29:24,899
meaningless but it's pretty close to

885
00:29:24,899 --> 00:29:26,100
meaningless like you're not going to be

886
00:29:26,100 --> 00:29:27,179
able to you're going to have a lot of

887
00:29:27,179 --> 00:29:28,740
extra work to try to work out and if you

888
00:29:28,740 --> 00:29:30,659
look at what the Pod has access to

889
00:29:30,659 --> 00:29:32,820
the pods Network only sees its private

890
00:29:32,820 --> 00:29:34,080
IP address it doesn't know what its

891
00:29:34,080 --> 00:29:36,299
public IP addresses and so you just

892
00:29:36,299 --> 00:29:37,380
don't have the information as the

893
00:29:37,380 --> 00:29:39,299
application so this is why I recommend

894
00:29:39,299 --> 00:29:41,039
you if you focus on on adding that

895
00:29:41,039 --> 00:29:43,320
observability early on is because it's

896
00:29:43,320 --> 00:29:45,539
something that is crucial and you have

897
00:29:45,539 --> 00:29:47,100
to find out what those gaps are so that

898
00:29:47,100 --> 00:29:49,260
your so that your teams are able to

899
00:29:49,260 --> 00:29:51,299
build it into their into their sock and

900
00:29:51,299 --> 00:29:55,200
various other and various other systems

901
00:29:55,200 --> 00:29:56,460
and so

902
00:29:56,460 --> 00:29:58,200
uh you'll likely still need to capture

903
00:29:58,200 --> 00:29:59,820
the IB address and port to comply with

904
00:29:59,820 --> 00:30:02,760
the previous tooling but the way that

905
00:30:02,760 --> 00:30:04,740
you deal with that is you add the the

906
00:30:04,740 --> 00:30:06,120
cryptographic identity you had before

907
00:30:06,120 --> 00:30:09,659
you add it as a as a uh as a field

908
00:30:09,659 --> 00:30:12,120
within your within your observability so

909
00:30:12,120 --> 00:30:13,799
that way it gives you something to start

910
00:30:13,799 --> 00:30:15,720
with doesn't break your existing tooling

911
00:30:15,720 --> 00:30:16,919
but it gives you something you can bind

912
00:30:16,919 --> 00:30:18,480
against

913
00:30:18,480 --> 00:30:20,700
the third part is after you've

914
00:30:20,700 --> 00:30:23,820
implemented something as small as it is

915
00:30:23,820 --> 00:30:25,559
you want to document it and you want to

916
00:30:25,559 --> 00:30:28,260
talk with others about it generally what

917
00:30:28,260 --> 00:30:30,960
from an education perspective I I tend

918
00:30:30,960 --> 00:30:33,240
to recommend my teams do three things

919
00:30:33,240 --> 00:30:34,679
they design they have their initial

920
00:30:34,679 --> 00:30:36,120
architecture documents that they wrote

921
00:30:36,120 --> 00:30:37,440
and you have to be careful here because

922
00:30:37,440 --> 00:30:39,360
you don't want it to devolve into a uh

923
00:30:39,360 --> 00:30:41,279
into a waterfall method you want it to

924
00:30:41,279 --> 00:30:42,960
be iterative and so those documents need

925
00:30:42,960 --> 00:30:44,520
to change over time as you learn more as

926
00:30:44,520 --> 00:30:46,260
well but you want to make sure that you

927
00:30:46,260 --> 00:30:47,460
actually have something that you can say

928
00:30:47,460 --> 00:30:49,020
here's what we did

929
00:30:49,020 --> 00:30:51,419
and then the reason for the for the high

930
00:30:51,419 --> 00:30:52,620
level deck

931
00:30:52,620 --> 00:30:55,320
of slides is that especially on larger

932
00:30:55,320 --> 00:30:56,399
organizations when you're trying to

933
00:30:56,399 --> 00:30:58,380
convince others to to follow in the same

934
00:30:58,380 --> 00:30:59,940
path as you or you want to or how to

935
00:30:59,940 --> 00:31:01,860
integrate with your system

936
00:31:01,860 --> 00:31:04,140
your your Architects are not going to

937
00:31:04,140 --> 00:31:06,000
have time to read through a 50 or 100

938
00:31:06,000 --> 00:31:08,340
100 page document describing all the

939
00:31:08,340 --> 00:31:10,080
details so you want to have something

940
00:31:10,080 --> 00:31:11,940
that's that's short to the point that

941
00:31:11,940 --> 00:31:13,200
gets on the the high level information

942
00:31:13,200 --> 00:31:14,940
but also give them a pointer to where

943
00:31:14,940 --> 00:31:16,260
they can find the details when they need

944
00:31:16,260 --> 00:31:18,120
to

945
00:31:18,120 --> 00:31:20,399
the reason for the baseball cards

946
00:31:20,399 --> 00:31:21,899
um that may sound like a useless

947
00:31:21,899 --> 00:31:24,240
exercise but again executive buy-ins

948
00:31:24,240 --> 00:31:25,799
your if your Executives say you know

949
00:31:25,799 --> 00:31:26,820
what this is starting to look like a

950
00:31:26,820 --> 00:31:28,380
cost center we're going to back out well

951
00:31:28,380 --> 00:31:30,179
you're you're done so you want to have

952
00:31:30,179 --> 00:31:33,419
the the the cards there so that way that

953
00:31:33,419 --> 00:31:35,580
you're you're describing to your team to

954
00:31:35,580 --> 00:31:36,960
your executive teams you're managing up

955
00:31:36,960 --> 00:31:38,580
the chain giving them what they need to

956
00:31:38,580 --> 00:31:40,320
know in order to in order to continue

957
00:31:40,320 --> 00:31:42,380
green lighting you and at the same time

958
00:31:42,380 --> 00:31:45,600
making sure that you're enumerating the

959
00:31:45,600 --> 00:31:47,460
business value that you that you have in

960
00:31:47,460 --> 00:31:50,039
terms of like well we spend money to

961
00:31:50,039 --> 00:31:52,080
implement zero trust but these teams

962
00:31:52,080 --> 00:31:53,880
were able to accelerate because of these

963
00:31:53,880 --> 00:31:55,080
particular reasons we're able to get to

964
00:31:55,080 --> 00:31:56,580
Mark to Market faster or we're able to

965
00:31:56,580 --> 00:31:58,140
integrate faster because uh because of

966
00:31:58,140 --> 00:32:00,059
the score we were able to prevent and

967
00:32:00,059 --> 00:32:01,980
discover these additional attacks that

968
00:32:01,980 --> 00:32:04,260
uh if you're in a production environment

969
00:32:04,260 --> 00:32:05,880
so you can actually give numbers to say

970
00:32:05,880 --> 00:32:07,440
like here's here are things that we were

971
00:32:07,440 --> 00:32:09,000
able to mitigate simply by the design of

972
00:32:09,000 --> 00:32:10,799
it

973
00:32:10,799 --> 00:32:13,020
and also make sure to present to others

974
00:32:13,020 --> 00:32:14,520
not not only at conferences but also

975
00:32:14,520 --> 00:32:16,260
internally you set up time to to meet

976
00:32:16,260 --> 00:32:19,140
with others to to discuss

977
00:32:19,140 --> 00:32:21,720
um on the side the reality is a very

978
00:32:21,720 --> 00:32:25,020
large organizations will have uh we'll

979
00:32:25,020 --> 00:32:26,940
have Legacy infrastructure like if

980
00:32:26,940 --> 00:32:31,020
there's many up many systems will have

981
00:32:31,020 --> 00:32:33,299
many startups that grow into large

982
00:32:33,299 --> 00:32:34,860
companies will sometimes have a model

983
00:32:34,860 --> 00:32:36,360
platform that you can work on and you

984
00:32:36,360 --> 00:32:38,100
can make all your changes there

985
00:32:38,100 --> 00:32:40,559
but most Legacy systems actually have

986
00:32:40,559 --> 00:32:42,299
like you you pick the technology it's

987
00:32:42,299 --> 00:32:44,100
probably in there especially the older

988
00:32:44,100 --> 00:32:45,539
companies like they'll have mainframes

989
00:32:45,539 --> 00:32:47,940
they'll have very major supported

990
00:32:47,940 --> 00:32:50,100
version of Microsoft they'll have

991
00:32:50,100 --> 00:32:53,100
they'll have various Linux distros in

992
00:32:53,100 --> 00:32:53,940
there

993
00:32:53,940 --> 00:32:56,100
uh so it's like and you pick the

994
00:32:56,100 --> 00:32:58,260
database it's probably in there and so

995
00:32:58,260 --> 00:32:59,640
when you start looking at it from from

996
00:32:59,640 --> 00:33:01,380
that perspective you don't have a single

997
00:33:01,380 --> 00:33:03,059
thing that you have to to work on so you

998
00:33:03,059 --> 00:33:04,140
have to actually

999
00:33:04,140 --> 00:33:06,059
and not every system can be retrofitted

1000
00:33:06,059 --> 00:33:07,799
with with your trust and so in those

1001
00:33:07,799 --> 00:33:09,240
scenarios you don't want to just say oh

1002
00:33:09,240 --> 00:33:10,740
that's going to stay as perimeter

1003
00:33:10,740 --> 00:33:12,299
defense

1004
00:33:12,299 --> 00:33:13,679
what you want to do is you still want to

1005
00:33:13,679 --> 00:33:15,419
issue out an identity so you might have

1006
00:33:15,419 --> 00:33:16,919
a system that you can't like say it's a

1007
00:33:16,919 --> 00:33:18,840
Mainframe you can't modify the Mainframe

1008
00:33:18,840 --> 00:33:20,820
but you can give that that application

1009
00:33:20,820 --> 00:33:23,279
that the Mainframe is running on you can

1010
00:33:23,279 --> 00:33:25,080
wrap it around the proxy and give it an

1011
00:33:25,080 --> 00:33:26,820
identity and say this system this

1012
00:33:26,820 --> 00:33:28,440
Mainframe can only receive messages from

1013
00:33:28,440 --> 00:33:29,820
these systems and can only communicate

1014
00:33:29,820 --> 00:33:31,140
with these systems

1015
00:33:31,140 --> 00:33:32,940
so you now have something there again

1016
00:33:32,940 --> 00:33:34,980
it's not uh it's not to the level that

1017
00:33:34,980 --> 00:33:37,200
we would love to get to but it gets it

1018
00:33:37,200 --> 00:33:39,240
still is a compromise it gets you to to

1019
00:33:39,240 --> 00:33:41,340
a place where you can still reason about

1020
00:33:41,340 --> 00:33:45,139
it with within the broader environment

1021
00:33:45,240 --> 00:33:47,220
and one of the things that I found is

1022
00:33:47,220 --> 00:33:49,980
also useful is

1023
00:33:49,980 --> 00:33:52,260
I would just split the inter and in

1024
00:33:52,260 --> 00:33:54,299
intra communication uh and I'll use

1025
00:33:54,299 --> 00:33:56,880
kubernetes as an example uh just to

1026
00:33:56,880 --> 00:33:58,559
split those two into two different areas

1027
00:33:58,559 --> 00:34:01,019
so like intra service communication is

1028
00:34:01,019 --> 00:34:02,580
things like I have a pod that wants to

1029
00:34:02,580 --> 00:34:05,159
communicate with another pod uh how you

1030
00:34:05,159 --> 00:34:07,019
secure that you want to have some

1031
00:34:07,019 --> 00:34:09,719
flexibility because many applications

1032
00:34:09,719 --> 00:34:11,219
are actually bound to the infrastructure

1033
00:34:11,219 --> 00:34:12,960
that they run on like there's certain

1034
00:34:12,960 --> 00:34:15,418
applications that you must have istio to

1035
00:34:15,418 --> 00:34:17,760
run it will not run without istio same

1036
00:34:17,760 --> 00:34:19,918
thing might happen with with Kuma or

1037
00:34:19,918 --> 00:34:21,540
Linker D or similar so when you have a

1038
00:34:21,540 --> 00:34:22,739
vendor come in and they say well we're

1039
00:34:22,739 --> 00:34:23,940
using this specific service Mission

1040
00:34:23,940 --> 00:34:26,040
that's what it works with like you don't

1041
00:34:26,040 --> 00:34:28,379
have a choice at that point

1042
00:34:28,379 --> 00:34:30,719
um and by separating out the treatment

1043
00:34:30,719 --> 00:34:32,639
of inter where inter is like I have an

1044
00:34:32,639 --> 00:34:33,780
application communicating to another

1045
00:34:33,780 --> 00:34:35,760
application across boundaries

1046
00:34:35,760 --> 00:34:37,260
the reason you want to have that in

1047
00:34:37,260 --> 00:34:38,520
place is that it allows you to also

1048
00:34:38,520 --> 00:34:40,020
bring in the previous things that are

1049
00:34:40,020 --> 00:34:41,580
Legacy so that way that when you have an

1050
00:34:41,580 --> 00:34:43,320
application communicating

1051
00:34:43,320 --> 00:34:45,780
that application you can still reason

1052
00:34:45,780 --> 00:34:47,159
across those boundaries and it also

1053
00:34:47,159 --> 00:34:48,540
gives your infosec something to bind

1054
00:34:48,540 --> 00:34:50,099
against that is a little bit easier than

1055
00:34:50,099 --> 00:34:51,839
every single micro every single service

1056
00:34:51,839 --> 00:34:54,179
so you can say the developers will state

1057
00:34:54,179 --> 00:34:57,060
what the application is going to do

1058
00:34:57,060 --> 00:34:58,859
internally but once you start Crossing

1059
00:34:58,859 --> 00:35:01,320
those boundaries then you the

1060
00:35:01,320 --> 00:35:03,480
applications have to go through some

1061
00:35:03,480 --> 00:35:05,400
through some policy that is controlled

1062
00:35:05,400 --> 00:35:07,320
globally by infosec where the infosec

1063
00:35:07,320 --> 00:35:09,960
can say uh yes this communication is

1064
00:35:09,960 --> 00:35:11,520
allowed or not allowed you can actually

1065
00:35:11,520 --> 00:35:13,320
write those policies as pull requests so

1066
00:35:13,320 --> 00:35:14,460
the developers will say I want to

1067
00:35:14,460 --> 00:35:16,500
connect a to B and then the infosec

1068
00:35:16,500 --> 00:35:17,880
person is the person who reviews it in

1069
00:35:17,880 --> 00:35:19,560
approves or rejects it and if they

1070
00:35:19,560 --> 00:35:21,119
reject it they can give feedback as to

1071
00:35:21,119 --> 00:35:22,560
why I was rejected so they can iterate

1072
00:35:22,560 --> 00:35:25,560
on it which turns into the entire policy

1073
00:35:25,560 --> 00:35:27,000
as as code

1074
00:35:27,000 --> 00:35:28,859
how you do that is for another

1075
00:35:28,859 --> 00:35:30,180
presentation there's so many different

1076
00:35:30,180 --> 00:35:31,800
ways to do that but that's the pattern

1077
00:35:31,800 --> 00:35:35,820
to to uh tuning towards

1078
00:35:35,820 --> 00:35:37,380
um and then you want to you want again

1079
00:35:37,380 --> 00:35:38,640
going back to the automation so

1080
00:35:38,640 --> 00:35:40,079
automation is just a set of control

1081
00:35:40,079 --> 00:35:42,780
loops that that manipulate state in some

1082
00:35:42,780 --> 00:35:45,240
way so you observe the state perform an

1083
00:35:45,240 --> 00:35:47,520
action You observe the action you report

1084
00:35:47,520 --> 00:35:49,200
on the action and you repeat this over

1085
00:35:49,200 --> 00:35:50,760
and over again

1086
00:35:50,760 --> 00:35:53,099
uh so

1087
00:35:53,099 --> 00:35:54,780
part of the key here is that when you're

1088
00:35:54,780 --> 00:35:56,280
working on a larger environment if

1089
00:35:56,280 --> 00:35:57,900
possible you want to generalize what

1090
00:35:57,900 --> 00:35:59,280
you're doing so you don't want it to be

1091
00:35:59,280 --> 00:36:01,200
bound to your specific application and

1092
00:36:01,200 --> 00:36:02,640
every single application has a slightly

1093
00:36:02,640 --> 00:36:03,900
different way of doing the exact same

1094
00:36:03,900 --> 00:36:04,680
thing

1095
00:36:04,680 --> 00:36:06,839
so if you can generalize what you are

1096
00:36:06,839 --> 00:36:10,619
doing as part of the automation then the

1097
00:36:10,619 --> 00:36:12,480
initial time it's expensive the second

1098
00:36:12,480 --> 00:36:14,220
time it's still expensive but it's way

1099
00:36:14,220 --> 00:36:15,900
cheaper the third time you're basically

1100
00:36:15,900 --> 00:36:17,700
getting it for free at that point and

1101
00:36:17,700 --> 00:36:19,980
also gives a central place where when

1102
00:36:19,980 --> 00:36:21,480
you update the system you're not you're

1103
00:36:21,480 --> 00:36:22,980
not updating each one to spoke you're

1104
00:36:22,980 --> 00:36:24,780
updating one spot and then you have a

1105
00:36:24,780 --> 00:36:26,520
path towards updating everything across

1106
00:36:26,520 --> 00:36:28,680
the across the environment you do have

1107
00:36:28,680 --> 00:36:30,000
to be careful there because it also

1108
00:36:30,000 --> 00:36:33,000
allows you to uh to quickly roll out

1109
00:36:33,000 --> 00:36:35,060
your mistakes too

1110
00:36:35,060 --> 00:36:37,680
but that's part as part of the process

1111
00:36:37,680 --> 00:36:39,480
is you want to get into into good

1112
00:36:39,480 --> 00:36:41,160
cultural habits of like doing good code

1113
00:36:41,160 --> 00:36:45,420
reviews and testing and similar so

1114
00:36:45,420 --> 00:36:47,460
uh and then back to back to the

1115
00:36:47,460 --> 00:36:49,079
education after you've done that you

1116
00:36:49,079 --> 00:36:50,700
want to educate your your team because

1117
00:36:50,700 --> 00:36:52,859
at the end of the day uh Silo culture

1118
00:36:52,859 --> 00:36:56,220
will break you and I'm serious like the

1119
00:36:56,220 --> 00:36:58,560
fastest way to to destroy a as a zero

1120
00:36:58,560 --> 00:37:00,180
trust uh environment when you're trying

1121
00:37:00,180 --> 00:37:02,460
to roll it out early on is to is to

1122
00:37:02,460 --> 00:37:04,260
treat everything as a silo

1123
00:37:04,260 --> 00:37:06,920
and so

1124
00:37:06,960 --> 00:37:10,260
um again to reiterate you have this uh

1125
00:37:10,260 --> 00:37:11,820
this process of repeating that

1126
00:37:11,820 --> 00:37:13,320
information like of going through the

1127
00:37:13,320 --> 00:37:15,200
same process over and over again

1128
00:37:15,200 --> 00:37:18,540
and so at the end of the at the end of

1129
00:37:18,540 --> 00:37:20,400
the day though and this is really what I

1130
00:37:20,400 --> 00:37:21,540
want to drive the point towards like

1131
00:37:21,540 --> 00:37:23,760
I've shown you a lot of information uh

1132
00:37:23,760 --> 00:37:25,980
in terms of like what zero trust like

1133
00:37:25,980 --> 00:37:28,079
how can you get initial section how do

1134
00:37:28,079 --> 00:37:29,760
you how do you communicate how do you

1135
00:37:29,760 --> 00:37:32,220
set up some initial processes

1136
00:37:32,220 --> 00:37:34,440
but at the end of the day there's not a

1137
00:37:34,440 --> 00:37:36,480
single culture or single technique a

1138
00:37:36,480 --> 00:37:37,859
single thing you can bring in that's

1139
00:37:37,859 --> 00:37:39,540
that'll transform you because at the

1140
00:37:39,540 --> 00:37:41,640
because these are Paradigm changes

1141
00:37:41,640 --> 00:37:43,500
they're your Paradigm shifts that we're

1142
00:37:43,500 --> 00:37:44,700
seeing here

1143
00:37:44,700 --> 00:37:48,900
and without the so you need to focus on

1144
00:37:48,900 --> 00:37:50,460
the people you need to focus on the on

1145
00:37:50,460 --> 00:37:53,820
the processes and if as an organization

1146
00:37:53,820 --> 00:37:55,800
you sure if you're a vendor you can sell

1147
00:37:55,800 --> 00:37:57,780
tools to help this but it'll ultimately

1148
00:37:57,780 --> 00:38:00,660
up to the to the consuming organizations

1149
00:38:00,660 --> 00:38:02,700
to make these particular changes and

1150
00:38:02,700 --> 00:38:04,079
anything you do to help them in that

1151
00:38:04,079 --> 00:38:06,000
cultural shift is is really where you're

1152
00:38:06,000 --> 00:38:07,500
going to get that that value because it

1153
00:38:07,500 --> 00:38:09,780
is ultimately about the processes and

1154
00:38:09,780 --> 00:38:11,940
and about how do you people looking at

1155
00:38:11,940 --> 00:38:13,200
the blast radius when they're developing

1156
00:38:13,200 --> 00:38:16,020
people looking at at uh what is the cost

1157
00:38:16,020 --> 00:38:18,839
of what I'm doing what is what what are

1158
00:38:18,839 --> 00:38:20,160
what's the level of granularity

1159
00:38:20,160 --> 00:38:22,380
constantly asking these questions as

1160
00:38:22,380 --> 00:38:25,320
they're architecting

1161
00:38:25,320 --> 00:38:27,060
um and also driving that communication

1162
00:38:27,060 --> 00:38:29,280
with your peers so with that I want to

1163
00:38:29,280 --> 00:38:30,720
thank you and I don't know how much time

1164
00:38:30,720 --> 00:38:32,880
we have for questions so I don't think

1165
00:38:32,880 --> 00:38:35,099
we have time

1166
00:38:35,099 --> 00:38:36,570
um so thank you very much

1167
00:38:36,570 --> 00:38:40,570
[Applause]

