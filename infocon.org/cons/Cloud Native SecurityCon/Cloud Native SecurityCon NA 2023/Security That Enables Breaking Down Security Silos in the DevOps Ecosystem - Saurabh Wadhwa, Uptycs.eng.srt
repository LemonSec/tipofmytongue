1
00:00:00,359 --> 00:00:03,179
hi everyone uh welcome to one of the

2
00:00:03,179 --> 00:00:05,400
last sessions of the day

3
00:00:05,400 --> 00:00:07,919
I know you guys must be exhausted by now

4
00:00:07,919 --> 00:00:11,160
you know it's normal even

5
00:00:11,160 --> 00:00:14,940
two or two days of uh pretty I think for

6
00:00:14,940 --> 00:00:16,379
you like attending a lot of sessions

7
00:00:16,379 --> 00:00:17,880
right

8
00:00:17,880 --> 00:00:19,140
so uh

9
00:00:19,140 --> 00:00:21,840
I will try to keep this interesting and

10
00:00:21,840 --> 00:00:23,640
conversational right

11
00:00:23,640 --> 00:00:25,920
so the topic of my presentation like

12
00:00:25,920 --> 00:00:28,320
first a little bit about myself my name

13
00:00:28,320 --> 00:00:31,260
is saurabh badwa I'm a Senior Solutions

14
00:00:31,260 --> 00:00:34,020
engineer at Optics you might have seen

15
00:00:34,020 --> 00:00:36,600
me you know in one of the booths uh so

16
00:00:36,600 --> 00:00:39,180
the topic of my presentation is security

17
00:00:39,180 --> 00:00:42,059
that enables right uh breaking down

18
00:00:42,059 --> 00:00:44,760
security silos in the devops ecosystem

19
00:00:44,760 --> 00:00:46,500
so what do we mean by security that

20
00:00:46,500 --> 00:00:48,120
enables

21
00:00:48,120 --> 00:00:49,500
so

22
00:00:49,500 --> 00:00:52,320
any CI CD pipeline right or as I like to

23
00:00:52,320 --> 00:00:54,239
call it Innovation pipeline

24
00:00:54,239 --> 00:00:56,760
it consists consists of

25
00:00:56,760 --> 00:01:00,000
different components working together

26
00:01:00,000 --> 00:01:03,539
at in the end the developers aim is to

27
00:01:03,539 --> 00:01:06,600
release code at a really fast pace

28
00:01:06,600 --> 00:01:09,540
and you know they can Overlook security

29
00:01:09,540 --> 00:01:14,760
right but what the ultimate aim is

30
00:01:14,760 --> 00:01:16,439
to

31
00:01:16,439 --> 00:01:18,840
make sure that security does not hamper

32
00:01:18,840 --> 00:01:21,000
Innovation that's why the name security

33
00:01:21,000 --> 00:01:23,580
dot enables so it basically enables the

34
00:01:23,580 --> 00:01:25,740
developers to be successful it enables

35
00:01:25,740 --> 00:01:28,020
the security team to be successful as

36
00:01:28,020 --> 00:01:29,939
well as the operation stream there is

37
00:01:29,939 --> 00:01:31,619
there has always been friction between

38
00:01:31,619 --> 00:01:35,280
uh you know security and developers so

39
00:01:35,280 --> 00:01:37,020
we may we want to make sure that there

40
00:01:37,020 --> 00:01:40,020
is you know that goes away

41
00:01:40,020 --> 00:01:42,840
so here's the agenda of my presentation

42
00:01:42,840 --> 00:01:45,840
like first would be introduction uh

43
00:01:45,840 --> 00:01:49,320
second why are we seeing attacks

44
00:01:49,320 --> 00:01:51,780
on the cicd ecosystem right what do the

45
00:01:51,780 --> 00:01:53,579
attackers see when they look at your

46
00:01:53,579 --> 00:01:55,500
pipeline

47
00:01:55,500 --> 00:01:58,020
next would be security gaps in a

48
00:01:58,020 --> 00:02:00,659
traditional Pipeline with so many you

49
00:02:00,659 --> 00:02:02,939
know various with various tools working

50
00:02:02,939 --> 00:02:05,159
together you have your build tools you

51
00:02:05,159 --> 00:02:07,380
know repositories your containers

52
00:02:07,380 --> 00:02:10,860
it's it's only like logical that you

53
00:02:10,860 --> 00:02:14,220
know like security gaps can't creep in

54
00:02:14,220 --> 00:02:16,080
whether they are vulnerabilities whether

55
00:02:16,080 --> 00:02:17,040
they are

56
00:02:17,040 --> 00:02:20,280
the oversights so we will look at how

57
00:02:20,280 --> 00:02:25,099
and why like security gaps uh get uh

58
00:02:25,099 --> 00:02:28,500
become a part of the traditional cicd

59
00:02:28,500 --> 00:02:30,660
pipeline then I would like to go through

60
00:02:30,660 --> 00:02:33,000
the Dropbox breach right that's one of

61
00:02:33,000 --> 00:02:34,620
the latest ones that comes to mind you

62
00:02:34,620 --> 00:02:37,400
have like the circle CI as uh Ubuntu

63
00:02:37,400 --> 00:02:40,860
when we say when we talk about attacks

64
00:02:40,860 --> 00:02:43,440
on a developer ecosystem right on the

65
00:02:43,440 --> 00:02:44,879
left hand side you see one of the

66
00:02:44,879 --> 00:02:46,739
examples the last pass attack then you

67
00:02:46,739 --> 00:02:48,379
have the slack

68
00:02:48,379 --> 00:02:51,959
breach and the Dropbox breach so I'll

69
00:02:51,959 --> 00:02:53,180
break down

70
00:02:53,180 --> 00:02:55,680
what exactly happened and what are the

71
00:02:55,680 --> 00:02:58,440
lessons learned and in the last I would

72
00:02:58,440 --> 00:03:00,180
be covering enabling Dev and security

73
00:03:00,180 --> 00:03:02,760
teams to work together to create a

74
00:03:02,760 --> 00:03:06,420
successful uh working software in the

75
00:03:06,420 --> 00:03:09,180
cloud which is secure

76
00:03:09,180 --> 00:03:11,879
now I'll go through like why has there

77
00:03:11,879 --> 00:03:14,519
been a rise on the developer ecosystem

78
00:03:14,519 --> 00:03:17,720
cicd ecosystem

79
00:03:18,300 --> 00:03:20,879
the first one being lack of integrated

80
00:03:20,879 --> 00:03:25,220
and automated security testing tools

81
00:03:25,440 --> 00:03:28,440
you have when you see your cicd pipeline

82
00:03:28,440 --> 00:03:30,180
you see

83
00:03:30,180 --> 00:03:33,060
your developer's laptop you see code

84
00:03:33,060 --> 00:03:35,280
repositories then you have image

85
00:03:35,280 --> 00:03:37,739
repositories on your containers in

86
00:03:37,739 --> 00:03:38,940
production

87
00:03:38,940 --> 00:03:40,980
so many different

88
00:03:40,980 --> 00:03:43,860
components are working together right so

89
00:03:43,860 --> 00:03:46,019
there is overall a lack of integrated

90
00:03:46,019 --> 00:03:50,340
and automated security for these tools

91
00:03:50,340 --> 00:03:52,440
and

92
00:03:52,440 --> 00:03:54,599
all these different components make for

93
00:03:54,599 --> 00:03:57,599
a large attack surface so the attacker

94
00:03:57,599 --> 00:03:59,879
just needs to enter

95
00:03:59,879 --> 00:04:01,200
just

96
00:04:01,200 --> 00:04:04,379
in one particular stage right and then

97
00:04:04,379 --> 00:04:06,540
he can go like for example

98
00:04:06,540 --> 00:04:09,540
um if an if an attacker enters and gets

99
00:04:09,540 --> 00:04:12,299
hold off access Keys which which were

100
00:04:12,299 --> 00:04:14,040
exposed by the developer like the

101
00:04:14,040 --> 00:04:16,380
developer wants to be make you know a

102
00:04:16,380 --> 00:04:19,560
code of really fast he has admin access

103
00:04:19,560 --> 00:04:21,839
to systems just to make his life easier

104
00:04:21,839 --> 00:04:24,360
you know hard codes the keys the

105
00:04:24,360 --> 00:04:25,860
passwords

106
00:04:25,860 --> 00:04:27,960
if an attacker gets hold of those

107
00:04:27,960 --> 00:04:30,000
credentials they know like you know you

108
00:04:30,000 --> 00:04:31,680
have seen examples of um you know like

109
00:04:31,680 --> 00:04:33,900
Dropbox you know what exactly can happen

110
00:04:33,900 --> 00:04:36,300
he can get access to those crown jewels

111
00:04:36,300 --> 00:04:38,400
right in a chcd pipeline your code is

112
00:04:38,400 --> 00:04:40,380
getting built right it's it's something

113
00:04:40,380 --> 00:04:42,240
which

114
00:04:42,240 --> 00:04:45,000
is kind of a

115
00:04:45,000 --> 00:04:47,520
like a crown jewel for your organization

116
00:04:47,520 --> 00:04:51,840
right and then you have

117
00:04:51,840 --> 00:04:54,960
the Reliance on automation leads to

118
00:04:54,960 --> 00:04:57,540
complacency it's just human nature if

119
00:04:57,540 --> 00:04:59,460
anything is getting automated you know

120
00:04:59,460 --> 00:05:01,199
why care you have

121
00:05:01,199 --> 00:05:03,600
automated driving cars right now so

122
00:05:03,600 --> 00:05:06,419
Reliance on automation leads to

123
00:05:06,419 --> 00:05:07,500
oversight

124
00:05:07,500 --> 00:05:10,080
you know vulnerabilities that would have

125
00:05:10,080 --> 00:05:11,160
crept in

126
00:05:11,160 --> 00:05:14,400
no one even paid attention to them so we

127
00:05:14,400 --> 00:05:16,680
have to make sure that each and every

128
00:05:16,680 --> 00:05:19,139
stage of the cicd pipeline is actually

129
00:05:19,139 --> 00:05:21,720
being monitored audited and if something

130
00:05:21,720 --> 00:05:24,419
Creeps in right at the first which is

131
00:05:24,419 --> 00:05:26,220
shift left you know like the developers

132
00:05:26,220 --> 00:05:28,199
laptop we need to make sure that it's

133
00:05:28,199 --> 00:05:30,300
getting fixed as soon as we discover

134
00:05:30,300 --> 00:05:32,520
that

135
00:05:32,520 --> 00:05:33,900
so

136
00:05:33,900 --> 00:05:38,039
here you can I have just mentioned

137
00:05:38,039 --> 00:05:41,220
the developer breaches that happened

138
00:05:41,220 --> 00:05:42,960
recently you have the last pass attack

139
00:05:42,960 --> 00:05:46,020
the slack one where the employee GitHub

140
00:05:46,020 --> 00:05:48,180
tokens was stolen and the circle CI one

141
00:05:48,180 --> 00:05:49,740
where the authenticated session Keys was

142
00:05:49,740 --> 00:05:51,419
stolen so this is different from the

143
00:05:51,419 --> 00:05:53,280
Dropbox one so in Dropbox it was

144
00:05:53,280 --> 00:05:57,000
actually a circle CI imitation but in

145
00:05:57,000 --> 00:05:59,340
in this case it's actually that an

146
00:05:59,340 --> 00:06:01,039
attack that happened

147
00:06:01,039 --> 00:06:05,280
targeted Circle CI organization

148
00:06:05,280 --> 00:06:07,979
so what are the security gaps in the CI

149
00:06:07,979 --> 00:06:09,960
CD pipeline

150
00:06:09,960 --> 00:06:14,160
so why do the security gaps creep in

151
00:06:14,160 --> 00:06:16,440
your CI CD ecosystem

152
00:06:16,440 --> 00:06:19,320
so CI CD is a term which has become a

153
00:06:19,320 --> 00:06:20,699
household name

154
00:06:20,699 --> 00:06:22,020
but

155
00:06:22,020 --> 00:06:24,479
organizations

156
00:06:24,479 --> 00:06:28,500
like are still not an expert in CI CD

157
00:06:28,500 --> 00:06:30,300
right so probably like four to five

158
00:06:30,300 --> 00:06:32,759
percent mic claim okay we have got a

159
00:06:32,759 --> 00:06:35,340
hold of cicd but still there is

160
00:06:35,340 --> 00:06:38,940
unrealized potential for cicd adoption

161
00:06:38,940 --> 00:06:42,300
system as such the whole pipeline hinges

162
00:06:42,300 --> 00:06:43,500
on various dependencies and

163
00:06:43,500 --> 00:06:46,319
configurations so developers use a lot

164
00:06:46,319 --> 00:06:50,819
of third-party libraries right and

165
00:06:50,819 --> 00:06:53,880
so having such a diverse

166
00:06:53,880 --> 00:06:56,520
um set of tools working together right

167
00:06:56,520 --> 00:06:58,080
there are dependencies configurations

168
00:06:58,080 --> 00:07:00,300
and because of that vulnerabilities

169
00:07:00,300 --> 00:07:02,539
might creep in

170
00:07:02,539 --> 00:07:05,160
the last being haste and need for

171
00:07:05,160 --> 00:07:07,139
fast-paced delivery Cycles so in an

172
00:07:07,139 --> 00:07:09,780
agile environment the developers want to

173
00:07:09,780 --> 00:07:12,060
just write code commit it and release

174
00:07:12,060 --> 00:07:14,759
the application but then again as I

175
00:07:14,759 --> 00:07:17,819
mentioned they Overlook security

176
00:07:17,819 --> 00:07:20,000
foreign

177
00:07:21,440 --> 00:07:23,819
goal is having a working software but

178
00:07:23,819 --> 00:07:26,280
security is also important so because of

179
00:07:26,280 --> 00:07:28,440
the hastiness and the fast-paced nature

180
00:07:28,440 --> 00:07:32,280
of the Agile development developers tend

181
00:07:32,280 --> 00:07:34,740
to overlook security which you know

182
00:07:34,740 --> 00:07:36,840
comes on it which

183
00:07:36,840 --> 00:07:40,020
gets discovered what exactly was left

184
00:07:40,020 --> 00:07:42,300
unpashed when the workload is actually

185
00:07:42,300 --> 00:07:45,080
in production

186
00:07:45,419 --> 00:07:47,220
so

187
00:07:47,220 --> 00:07:50,639
this is a traditional securing uh like a

188
00:07:50,639 --> 00:07:52,800
CI CD pipeline right so just to recap

189
00:07:52,800 --> 00:07:55,199
what I have covered till now like I

190
00:07:55,199 --> 00:07:58,080
covered why are we seeing

191
00:07:58,080 --> 00:08:01,380
attacks on the developer ecosystem wide

192
00:08:01,380 --> 00:08:04,440
security gaps creep in right and this is

193
00:08:04,440 --> 00:08:07,199
like if you pay attention to this image

194
00:08:07,199 --> 00:08:09,780
right it's a lot of things are going on

195
00:08:09,780 --> 00:08:12,300
you have your development stage you know

196
00:08:12,300 --> 00:08:13,860
code is being developed it's being

197
00:08:13,860 --> 00:08:15,840
committed to a code repo like you know

198
00:08:15,840 --> 00:08:18,419
GitHub and then you have your building

199
00:08:18,419 --> 00:08:20,099
and testing tools

200
00:08:20,099 --> 00:08:22,020
um the images that are getting built are

201
00:08:22,020 --> 00:08:24,300
being uploaded to Registries right and

202
00:08:24,300 --> 00:08:25,319
then

203
00:08:25,319 --> 00:08:27,479
those containers are running in

204
00:08:27,479 --> 00:08:28,979
production having some kind of

205
00:08:28,979 --> 00:08:30,300
orchestration such as kubernetes

206
00:08:30,300 --> 00:08:33,059
openshift so I would like to call the

207
00:08:33,059 --> 00:08:35,520
development and SCI CD pipeline uh piece

208
00:08:35,520 --> 00:08:37,440
as pre-production and control plane and

209
00:08:37,440 --> 00:08:40,679
data plane as post-production

210
00:08:40,679 --> 00:08:43,080
so let's focus on

211
00:08:43,080 --> 00:08:45,360
post-production right when the workloads

212
00:08:45,360 --> 00:08:47,459
are actually running

213
00:08:47,459 --> 00:08:49,320
you will see that it consists of

214
00:08:49,320 --> 00:08:52,440
different services such as orchestration

215
00:08:52,440 --> 00:08:55,980
runtime such as Docker engine

216
00:08:55,980 --> 00:08:58,800
and then you have the actual worker

217
00:08:58,800 --> 00:09:02,580
nodes running those containers

218
00:09:02,580 --> 00:09:05,220
from a security perspective right this

219
00:09:05,220 --> 00:09:07,500
data is pretty siled

220
00:09:07,500 --> 00:09:10,080
right like take for example container

221
00:09:10,080 --> 00:09:11,820
Escape

222
00:09:11,820 --> 00:09:13,920
so containers when they are deployed

223
00:09:13,920 --> 00:09:16,380
they just widen the attack surface

224
00:09:16,380 --> 00:09:19,980
they share the same underlying IP space

225
00:09:19,980 --> 00:09:22,920
so even if an attacker escapes one

226
00:09:22,920 --> 00:09:24,360
container he will have access to the

227
00:09:24,360 --> 00:09:26,940
other underlying containers to the host

228
00:09:26,940 --> 00:09:30,120
itself and he can go deeper into your

229
00:09:30,120 --> 00:09:32,760
infrastructure

230
00:09:32,760 --> 00:09:35,220
now if you look at the pre-production

231
00:09:35,220 --> 00:09:38,220
stage

232
00:09:38,459 --> 00:09:41,220
we silo

233
00:09:41,220 --> 00:09:43,560
the development stage from the building

234
00:09:43,560 --> 00:09:46,320
and testing stage right we never focused

235
00:09:46,320 --> 00:09:49,140
on developer laptops right developers do

236
00:09:49,140 --> 00:09:51,420
the groundwork for the software

237
00:09:51,420 --> 00:09:54,180
development they you know they have

238
00:09:54,180 --> 00:09:57,500
admin access to different tools right

239
00:09:57,500 --> 00:10:00,899
but we never focus on developers laptop

240
00:10:00,899 --> 00:10:04,260
security and they don't even like that

241
00:10:04,260 --> 00:10:07,680
so again coming to us from a security

242
00:10:07,680 --> 00:10:09,420
perspective

243
00:10:09,420 --> 00:10:12,240
the data that's getting generated from

244
00:10:12,240 --> 00:10:13,800
the developer's laptop or even

245
00:10:13,800 --> 00:10:16,019
repositories it's pretty siled from what

246
00:10:16,019 --> 00:10:17,880
exactly is happening and the building

247
00:10:17,880 --> 00:10:22,640
and testing phase and the registry phase

248
00:10:23,279 --> 00:10:27,360
so let me cover what exactly happened

249
00:10:27,360 --> 00:10:31,019
at you know when the Dropbox be chuckled

250
00:10:31,019 --> 00:10:32,300
so

251
00:10:32,300 --> 00:10:36,199
this attack

252
00:10:36,240 --> 00:10:38,040
highlights the fact

253
00:10:38,040 --> 00:10:40,980
that there have been a rise

254
00:10:40,980 --> 00:10:43,740
of attacks on the developer ecosystem

255
00:10:43,740 --> 00:10:46,260
we all know the reason why they do the

256
00:10:46,260 --> 00:10:49,339
stuff they get the stuff done build code

257
00:10:49,339 --> 00:10:52,920
develop develop the application

258
00:10:52,920 --> 00:10:56,220
in case of Dropbox what happened was

259
00:10:56,220 --> 00:10:59,040
if I'm a developer I logged in

260
00:10:59,040 --> 00:11:01,579
I saw this email from Circle CI which is

261
00:11:01,579 --> 00:11:04,980
the tool they were using internally in

262
00:11:04,980 --> 00:11:06,000
Dropbox

263
00:11:06,000 --> 00:11:08,459
I clicked on the malicious link I had no

264
00:11:08,459 --> 00:11:11,760
idea that I was doing that it took me to

265
00:11:11,760 --> 00:11:14,760
the fake Circle CI page

266
00:11:14,760 --> 00:11:17,760
asked me my GitHub credentials and a

267
00:11:17,760 --> 00:11:20,220
one-time passcode

268
00:11:20,220 --> 00:11:22,019
once I entered the credentials and the

269
00:11:22,019 --> 00:11:23,160
OTP

270
00:11:23,160 --> 00:11:25,560
the attacker took those credentials

271
00:11:25,560 --> 00:11:28,079
logged into GitHub and as a result

272
00:11:28,079 --> 00:11:31,920
content 30 internal repos were cloned

273
00:11:31,920 --> 00:11:35,100
and this was no pre-efficient attack it

274
00:11:35,100 --> 00:11:37,920
was actually spear fishing because the

275
00:11:37,920 --> 00:11:40,019
developers were targeted

276
00:11:40,019 --> 00:11:42,959
the attackers actually knew that Circle

277
00:11:42,959 --> 00:11:46,220
CI was being used inside Dropbox so

278
00:11:46,220 --> 00:11:48,660
which shows that attackers are becoming

279
00:11:48,660 --> 00:11:52,819
sophisticated day by day right

280
00:11:53,640 --> 00:11:57,060
so on the screen like this is again what

281
00:11:57,060 --> 00:11:59,040
I said so basically you know what

282
00:11:59,040 --> 00:12:01,079
exactly happened was it was just a

283
00:12:01,079 --> 00:12:02,940
sophisticated attack that could not be

284
00:12:02,940 --> 00:12:04,019
prevented

285
00:12:04,019 --> 00:12:05,160
right

286
00:12:05,160 --> 00:12:08,160
log into an invitation page giving out

287
00:12:08,160 --> 00:12:10,680
your credentials and then the breach

288
00:12:10,680 --> 00:12:13,819
just happened

289
00:12:14,040 --> 00:12:16,680
so what are the lessons learned

290
00:12:16,680 --> 00:12:19,260
one thing I would like to point out

291
00:12:19,260 --> 00:12:22,140
which is not on the slide is user

292
00:12:22,140 --> 00:12:24,240
Education and Training is really

293
00:12:24,240 --> 00:12:25,920
important right

294
00:12:25,920 --> 00:12:28,680
especially developers who don't

295
00:12:28,680 --> 00:12:31,260
care about security much who don't

296
00:12:31,260 --> 00:12:34,740
are not involved with security so user

297
00:12:34,740 --> 00:12:36,660
Education and Training is of utmost

298
00:12:36,660 --> 00:12:37,740
importance

299
00:12:37,740 --> 00:12:41,100
they need to know if if they see

300
00:12:41,100 --> 00:12:43,980
something fishy they should reach out to

301
00:12:43,980 --> 00:12:46,320
the department right what exactly like

302
00:12:46,320 --> 00:12:48,899
we got this email but in this case they

303
00:12:48,899 --> 00:12:50,519
just clicked on the link so user

304
00:12:50,519 --> 00:12:52,200
Education and Training is really

305
00:12:52,200 --> 00:12:53,339
important

306
00:12:53,339 --> 00:12:57,240
and then this attack along with LastPass

307
00:12:57,240 --> 00:12:59,940
slack Circle CI it reinforces the trend

308
00:12:59,940 --> 00:13:03,060
that attackers are actually targeting

309
00:13:03,060 --> 00:13:05,459
the developer tools the cicd pipeline

310
00:13:05,459 --> 00:13:07,139
when they

311
00:13:07,139 --> 00:13:09,420
look from outside cicd pipeline is a

312
00:13:09,420 --> 00:13:11,779
gold mine right they know that okay

313
00:13:11,779 --> 00:13:14,160
somewhere some vulnerability will prop

314
00:13:14,160 --> 00:13:15,180
up

315
00:13:15,180 --> 00:13:16,200
so

316
00:13:16,200 --> 00:13:18,959
to avoid such scenarios right there was

317
00:13:18,959 --> 00:13:20,279
like some

318
00:13:20,279 --> 00:13:21,720
some of the lessons learned from the

319
00:13:21,720 --> 00:13:24,420
Dropbox breach just regularly rotate

320
00:13:24,420 --> 00:13:26,459
passwords and set up MFA right it's a

321
00:13:26,459 --> 00:13:28,279
simple thing

322
00:13:28,279 --> 00:13:31,560
and attackers knowing that Circle CI was

323
00:13:31,560 --> 00:13:33,180
using was being used internally

324
00:13:33,180 --> 00:13:34,560
attackers are becoming more

325
00:13:34,560 --> 00:13:36,600
sophisticated and more familiar with

326
00:13:36,600 --> 00:13:38,040
environments

327
00:13:38,040 --> 00:13:40,560
and it's really important to scan the

328
00:13:40,560 --> 00:13:42,959
source code repositories or even image

329
00:13:42,959 --> 00:13:44,700
repositories for

330
00:13:44,700 --> 00:13:47,160
any credentials right

331
00:13:47,160 --> 00:13:50,220
in the haste of just releasing an

332
00:13:50,220 --> 00:13:53,040
application making making code changes

333
00:13:53,040 --> 00:13:54,360
committing the code

334
00:13:54,360 --> 00:13:57,480
like even like I was a developer in past

335
00:13:57,480 --> 00:14:00,000
life I never cared of you know for not

336
00:14:00,000 --> 00:14:02,100
hard coding the credentials so it's

337
00:14:02,100 --> 00:14:03,480
really important to scan your code

338
00:14:03,480 --> 00:14:07,139
Repose as well as image repos

339
00:14:07,139 --> 00:14:09,779
and how do how can we enable Devan

340
00:14:09,779 --> 00:14:12,300
security teams to go hand in hand and

341
00:14:12,300 --> 00:14:14,459
have give you a secure running

342
00:14:14,459 --> 00:14:16,560
application in the cloud

343
00:14:16,560 --> 00:14:18,000
so first

344
00:14:18,000 --> 00:14:20,820
what's a good and what's a bad security

345
00:14:20,820 --> 00:14:22,980
culture in an organization and what are

346
00:14:22,980 --> 00:14:24,540
the characteristics

347
00:14:24,540 --> 00:14:27,060
so in a good security culture

348
00:14:27,060 --> 00:14:29,700
it builds trust it builds trust within

349
00:14:29,700 --> 00:14:32,519
the teams I am a developer

350
00:14:32,519 --> 00:14:34,980
I trust the security team not to hamper

351
00:14:34,980 --> 00:14:37,560
my Innovation I can code I can commit

352
00:14:37,560 --> 00:14:39,360
the code as I like

353
00:14:39,360 --> 00:14:42,120
right but still there is trust that okay

354
00:14:42,120 --> 00:14:43,920
you know it won't humble my Innovation

355
00:14:43,920 --> 00:14:47,820
it simplifies access and workflows so if

356
00:14:47,820 --> 00:14:48,959
I

357
00:14:48,959 --> 00:14:50,820
uh if I have zero trust for example

358
00:14:50,820 --> 00:14:53,820
right I my machine is you know my

359
00:14:53,820 --> 00:14:56,279
machine is protected I I want to access

360
00:14:56,279 --> 00:14:58,980
any critical applications So based on my

361
00:14:58,980 --> 00:15:00,600
zero trust code they was like okay this

362
00:15:00,600 --> 00:15:03,420
this machine is good you know let let

363
00:15:03,420 --> 00:15:04,920
the developer access the applications

364
00:15:04,920 --> 00:15:06,720
he's requesting access to

365
00:15:06,720 --> 00:15:09,480
it encourages people to speak up

366
00:15:09,480 --> 00:15:13,199
and then it enables users to be security

367
00:15:13,199 --> 00:15:16,079
minded as as we learned from the Dropbox

368
00:15:16,079 --> 00:15:19,440
breach users developers or any other

369
00:15:19,440 --> 00:15:22,500
person and organization should have that

370
00:15:22,500 --> 00:15:25,500
level of security awareness that he can

371
00:15:25,500 --> 00:15:29,820
judge what's wrong and what's not

372
00:15:29,820 --> 00:15:31,620
on the other hand what's a bad security

373
00:15:31,620 --> 00:15:34,199
culture like it erodes trust people

374
00:15:34,199 --> 00:15:36,360
different teams don't trust each other

375
00:15:36,360 --> 00:15:38,519
right I'm a developer I don't trust the

376
00:15:38,519 --> 00:15:39,839
security team I will always think okay

377
00:15:39,839 --> 00:15:43,740
it will hamper my speed you know let me

378
00:15:43,740 --> 00:15:45,959
just write code and commit it

379
00:15:45,959 --> 00:15:49,560
it complicates access and workflows and

380
00:15:49,560 --> 00:15:50,940
last

381
00:15:50,940 --> 00:15:54,060
it it encourages users to hide their

382
00:15:54,060 --> 00:15:57,300
mistakes right if I may I know I did

383
00:15:57,300 --> 00:15:59,160
something wrong like I left my

384
00:15:59,160 --> 00:16:01,199
credentials right but I don't care it's

385
00:16:01,199 --> 00:16:02,519
already committed the application is

386
00:16:02,519 --> 00:16:04,500
already running I won't even let the

387
00:16:04,500 --> 00:16:06,000
security team know like if there are no

388
00:16:06,000 --> 00:16:08,279
Tools in place you know it I won't even

389
00:16:08,279 --> 00:16:10,800
work with the security team to make sure

390
00:16:10,800 --> 00:16:14,220
that I'm releasing a secure software

391
00:16:14,220 --> 00:16:16,199
so what are the different Security

392
00:16:16,199 --> 00:16:18,600
Solutions that enable

393
00:16:18,600 --> 00:16:21,959
first zero trust Frameworks that's the

394
00:16:21,959 --> 00:16:24,660
latest buzzword it's it's a deviation

395
00:16:24,660 --> 00:16:26,459
from the traditional mindset of trust

396
00:16:26,459 --> 00:16:27,720
but verify

397
00:16:27,720 --> 00:16:30,660
always validate a user's Integrity when

398
00:16:30,660 --> 00:16:33,120
accessing internal resources

399
00:16:33,120 --> 00:16:34,560
it means

400
00:16:34,560 --> 00:16:36,839
like zero trust is like on every stage

401
00:16:36,839 --> 00:16:38,820
you have to authenticate and then you

402
00:16:38,820 --> 00:16:40,440
get authorized right

403
00:16:40,440 --> 00:16:42,980
and similarly having a zero trust score

404
00:16:42,980 --> 00:16:45,420
it will differentiate

405
00:16:45,420 --> 00:16:49,860
good from the bad and if I'm a good user

406
00:16:49,860 --> 00:16:52,079
I can easily get access to internal

407
00:16:52,079 --> 00:16:54,300
resources

408
00:16:54,300 --> 00:16:56,820
second one as I mentioned on the

409
00:16:56,820 --> 00:16:58,199
previous screen we should scan for

410
00:16:58,199 --> 00:17:00,320
vulnerabilities

411
00:17:00,320 --> 00:17:03,600
and that might have crept in in the CIA

412
00:17:03,600 --> 00:17:05,579
City pipeline maybe because of you know

413
00:17:05,579 --> 00:17:09,359
hastiness or user overlook then look for

414
00:17:09,359 --> 00:17:11,640
private Keys credentials other Secrets

415
00:17:11,640 --> 00:17:14,579
which can be stored in images which are

416
00:17:14,579 --> 00:17:17,520
already in registry such as jfrog

417
00:17:17,520 --> 00:17:20,280
artifactory ECR and also registry code

418
00:17:20,280 --> 00:17:22,619
so if you're committing the code to a

419
00:17:22,619 --> 00:17:24,359
repo like GitHub we should have the

420
00:17:24,359 --> 00:17:27,480
ability to also scan those up ah

421
00:17:27,480 --> 00:17:29,520
repositories because it reduces the

422
00:17:29,520 --> 00:17:32,240
attack surface

423
00:17:32,700 --> 00:17:35,840
so again zero trust builds builds trust

424
00:17:35,840 --> 00:17:38,580
if it's a good it tells us the

425
00:17:38,580 --> 00:17:40,320
difference between good and the bad it

426
00:17:40,320 --> 00:17:42,480
simplifies access and workflows it

427
00:17:42,480 --> 00:17:44,460
reduces ability for lateral movement

428
00:17:44,460 --> 00:17:46,740
because at every step you have to

429
00:17:46,740 --> 00:17:49,380
authenticate right and it empowers

430
00:17:49,380 --> 00:17:51,360
modern developer work culture it means

431
00:17:51,360 --> 00:17:54,179
like you have your BYOD policy or you

432
00:17:54,179 --> 00:17:56,700
know work from home remote today I'm

433
00:17:56,700 --> 00:17:58,440
working from Seattle tomorrow I can be

434
00:17:58,440 --> 00:18:02,760
in Canada right so having the zero trust

435
00:18:02,760 --> 00:18:04,620
score for a machine

436
00:18:04,620 --> 00:18:06,780
can tell you like even if this person is

437
00:18:06,780 --> 00:18:09,419
out of his geographic area this is still

438
00:18:09,419 --> 00:18:11,520
a good machine because we trust this

439
00:18:11,520 --> 00:18:14,700
machine right and similarly the second

440
00:18:14,700 --> 00:18:15,960
approach that we discussed about

441
00:18:15,960 --> 00:18:18,179
real-time scanning registry scanning

442
00:18:18,179 --> 00:18:20,280
first it reduces the attack surface

443
00:18:20,280 --> 00:18:22,080
because if something is already patched

444
00:18:22,080 --> 00:18:23,460
the

445
00:18:23,460 --> 00:18:26,760
the attackers have less chances to

446
00:18:26,760 --> 00:18:28,679
exploit that right

447
00:18:28,679 --> 00:18:31,440
then it simplifies workflows it enables

448
00:18:31,440 --> 00:18:33,419
team to release builds right I'm a

449
00:18:33,419 --> 00:18:36,120
developer I'm happy these uh these

450
00:18:36,120 --> 00:18:38,880
stages are secure and then it hardens

451
00:18:38,880 --> 00:18:41,100
the static code and the container image

452
00:18:41,100 --> 00:18:43,020
repose

453
00:18:43,020 --> 00:18:46,679
so for the conclusion right I would like

454
00:18:46,679 --> 00:18:48,720
to point out that whatever we have

455
00:18:48,720 --> 00:18:50,840
discussed in whatever I have presented

456
00:18:50,840 --> 00:18:54,000
that developers ecosystems are being

457
00:18:54,000 --> 00:18:56,039
targeted the attacks are becoming

458
00:18:56,039 --> 00:18:57,720
sophisticated day by day the attackers

459
00:18:57,720 --> 00:19:00,360
are becoming more aware of internal

460
00:19:00,360 --> 00:19:01,740
environments

461
00:19:01,740 --> 00:19:03,960
good security enables developers to work

462
00:19:03,960 --> 00:19:05,580
dynamically

463
00:19:05,580 --> 00:19:07,380
aren't shaped faster more secure it

464
00:19:07,380 --> 00:19:08,700
means

465
00:19:08,700 --> 00:19:11,940
security is no longer hampering

466
00:19:11,940 --> 00:19:13,440
Innovation it's actually driving

467
00:19:13,440 --> 00:19:15,600
Innovation so good security enables

468
00:19:15,600 --> 00:19:19,980
developers to develop a tool a product

469
00:19:19,980 --> 00:19:22,200
which is actually secure

470
00:19:22,200 --> 00:19:26,039
and we I can't you know stress just

471
00:19:26,039 --> 00:19:28,679
enough that their Dev and security teams

472
00:19:28,679 --> 00:19:31,620
should go hand in hand right and they

473
00:19:31,620 --> 00:19:34,559
should go hand in hand to fix those gaps

474
00:19:34,559 --> 00:19:36,120
in a cicd pipeline which might have

475
00:19:36,120 --> 00:19:37,500
crept in and there are like numerous

476
00:19:37,500 --> 00:19:40,559
reasons you have your diverse attacks or

477
00:19:40,559 --> 00:19:43,380
diverse tools user oversight you know

478
00:19:43,380 --> 00:19:46,500
probably like access levels like you

479
00:19:46,500 --> 00:19:48,179
have oh no

480
00:19:48,179 --> 00:19:50,340
admin access to tools we can you know

481
00:19:50,340 --> 00:19:52,980
protect this by tying down the access so

482
00:19:52,980 --> 00:19:55,919
Devin security teams should work hand in

483
00:19:55,919 --> 00:19:56,660
hand

484
00:19:56,660 --> 00:19:59,400
and a good security program should never

485
00:19:59,400 --> 00:20:01,380
hamper Innovation right your cicd

486
00:20:01,380 --> 00:20:03,179
pipeline as I like to call it is your

487
00:20:03,179 --> 00:20:04,980
Innovation pipeline that's where the

488
00:20:04,980 --> 00:20:07,320
stuff gets done so a good security

489
00:20:07,320 --> 00:20:10,679
program should never ever happen uh

490
00:20:10,679 --> 00:20:14,000
hamper that innovation

491
00:20:14,280 --> 00:20:19,760
so any questions I'm open for questions

492
00:20:22,140 --> 00:20:26,000
no questions I think I did well then

493
00:20:26,100 --> 00:20:28,860
yeah thank you

494
00:20:28,860 --> 00:20:31,860
foreign

