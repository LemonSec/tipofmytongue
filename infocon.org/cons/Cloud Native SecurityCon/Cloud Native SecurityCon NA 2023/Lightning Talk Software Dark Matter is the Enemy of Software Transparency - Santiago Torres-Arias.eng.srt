1
00:00:00,299 --> 00:00:02,399
great I'm going to kick start this uh

2
00:00:02,399 --> 00:00:04,259
five minute trip

3
00:00:04,259 --> 00:00:06,600
Journey talking about software

4
00:00:06,600 --> 00:00:09,720
transparency dark files and essentially

5
00:00:09,720 --> 00:00:10,920
uh

6
00:00:10,920 --> 00:00:12,420
the challenge of communicating

7
00:00:12,420 --> 00:00:13,799
trustworthy software supply chain

8
00:00:13,799 --> 00:00:15,839
information in the current state of the

9
00:00:15,839 --> 00:00:18,960
art this is work that I do in my lab and

10
00:00:18,960 --> 00:00:20,340
Purdue University the trustworthy

11
00:00:20,340 --> 00:00:22,080
software ecosystems lab but also with my

12
00:00:22,080 --> 00:00:24,500
colleagues chain guard

13
00:00:24,500 --> 00:00:28,439
John speed Meyers and Adolfo

14
00:00:28,439 --> 00:00:30,539
so the background is very simple if

15
00:00:30,539 --> 00:00:32,340
you're in Cloud native security con you

16
00:00:32,340 --> 00:00:34,920
probably agree that s-bombs are great

17
00:00:34,920 --> 00:00:36,600
by now everybody's thinking about

18
00:00:36,600 --> 00:00:38,399
producing s-bombs doing something with

19
00:00:38,399 --> 00:00:40,500
their s-bomb maybe just keep somebody

20
00:00:40,500 --> 00:00:42,420
happy down the line to say hey I have an

21
00:00:42,420 --> 00:00:44,219
s-bomb life is good

22
00:00:44,219 --> 00:00:46,440
now

23
00:00:46,440 --> 00:00:49,739
the problem is that producing an s-bomb

24
00:00:49,739 --> 00:00:52,440
is not so easy and I'm not talking about

25
00:00:52,440 --> 00:00:54,800
creating a file that has all of the

26
00:00:54,800 --> 00:00:58,020
schemas with spdx Fields where they go

27
00:00:58,020 --> 00:01:00,600
but rather an s-bomb that's accurate an

28
00:01:00,600 --> 00:01:02,340
s-bomb that communicates meaningful

29
00:01:02,340 --> 00:01:04,739
information to users

30
00:01:04,739 --> 00:01:07,260
now if you have produced in asthma

31
00:01:07,260 --> 00:01:09,780
before you probably could skip a couple

32
00:01:09,780 --> 00:01:10,860
of slides here but I want to get

33
00:01:10,860 --> 00:01:12,659
everybody in the same picture

34
00:01:12,659 --> 00:01:14,640
when you are creating an s-bomb say

35
00:01:14,640 --> 00:01:16,140
about a container that you're about to

36
00:01:16,140 --> 00:01:18,119
chip into the cloud you'll probably use

37
00:01:18,119 --> 00:01:19,799
a tool like say trivia

38
00:01:19,799 --> 00:01:23,220
and you want to ask Trevi hey

39
00:01:23,220 --> 00:01:25,140
what's the s-bomb that corresponds to

40
00:01:25,140 --> 00:01:26,700
the container that I have here right now

41
00:01:26,700 --> 00:01:28,799
so Trevi goes ahead and takes a

42
00:01:28,799 --> 00:01:31,619
magnifying glass it takes a little a

43
00:01:31,619 --> 00:01:33,479
look at your container and it spits out

44
00:01:33,479 --> 00:01:35,400
an spdx document

45
00:01:35,400 --> 00:01:38,640
do we agree with this

46
00:01:38,640 --> 00:01:42,119
yes okay so you may be asking yourself

47
00:01:42,119 --> 00:01:44,220
how those activity take a look at my

48
00:01:44,220 --> 00:01:45,960
container and concludes that I don't

49
00:01:45,960 --> 00:01:48,000
know gillib C is inside of this

50
00:01:48,000 --> 00:01:51,540
container that gpg or httpd are running

51
00:01:51,540 --> 00:01:53,579
inside of this container and they are of

52
00:01:53,579 --> 00:01:55,079
this particular version with this hashes

53
00:01:55,079 --> 00:01:57,780
with its licenses and so on so forth

54
00:01:57,780 --> 00:01:59,399
the one that trivia does say is it

55
00:01:59,399 --> 00:02:00,780
actually takes a look at the files in

56
00:02:00,780 --> 00:02:02,820
your container it takes a look at the

57
00:02:02,820 --> 00:02:04,439
package metadata from different package

58
00:02:04,439 --> 00:02:06,840
managers say you're using apt to install

59
00:02:06,840 --> 00:02:09,000
some dependencies you may be using npm

60
00:02:09,000 --> 00:02:11,940
you may be using nuget you may be using

61
00:02:11,940 --> 00:02:15,000
any tool that's helpful to essentially

62
00:02:15,000 --> 00:02:16,560
put the files where they're supposed to

63
00:02:16,560 --> 00:02:17,520
be going

64
00:02:17,520 --> 00:02:20,640
and maybe if it's feeling uh

65
00:02:20,640 --> 00:02:23,099
good it may even take a look at the

66
00:02:23,099 --> 00:02:25,140
container take a look at the from maybe

67
00:02:25,140 --> 00:02:27,000
trying to make connections between how

68
00:02:27,000 --> 00:02:29,340
the container was built and what does it

69
00:02:29,340 --> 00:02:31,560
what does it actually contain

70
00:02:31,560 --> 00:02:33,420
now we know that parsing this

71
00:02:33,420 --> 00:02:35,280
information gives us very trustworthy

72
00:02:35,280 --> 00:02:36,780
software supply chain information

73
00:02:36,780 --> 00:02:39,180
because this is usually information

74
00:02:39,180 --> 00:02:41,040
that's curated by the people that are

75
00:02:41,040 --> 00:02:42,239
developing

76
00:02:42,239 --> 00:02:44,640
the container or the packages that are

77
00:02:44,640 --> 00:02:46,319
inside of your container

78
00:02:46,319 --> 00:02:48,360
we also know that these files are often

79
00:02:48,360 --> 00:02:51,180
just very hard to understand

80
00:02:51,180 --> 00:02:52,739
files that are not being tracked by

81
00:02:52,739 --> 00:02:56,340
package managers files that are not

82
00:02:56,340 --> 00:02:58,560
carrying provenance information often

83
00:02:58,560 --> 00:02:59,580
just

84
00:02:59,580 --> 00:03:02,340
don't tell us a lot about how

85
00:03:02,340 --> 00:03:04,260
that this thing came to be or how to

86
00:03:04,260 --> 00:03:06,720
trust this particular container

87
00:03:06,720 --> 00:03:08,340
so we came up with this concept called

88
00:03:08,340 --> 00:03:10,980
Dark files dark files is a metaphor

89
00:03:10,980 --> 00:03:13,200
alluding to the Dark Matter dark matter

90
00:03:13,200 --> 00:03:15,480
is this matter that exists in the

91
00:03:15,480 --> 00:03:17,400
universe that we cannot see we know that

92
00:03:17,400 --> 00:03:19,739
it constitutes the universe but we have

93
00:03:19,739 --> 00:03:21,900
never seen dark matter

94
00:03:21,900 --> 00:03:24,780
the goal of a of this project is to

95
00:03:24,780 --> 00:03:28,200
understand how the dark files appear and

96
00:03:28,200 --> 00:03:30,180
what are the consequences for software

97
00:03:30,180 --> 00:03:33,180
supply chain security and transparency

98
00:03:33,180 --> 00:03:34,860
the problem with dark files is that well

99
00:03:34,860 --> 00:03:36,480
they can

100
00:03:36,480 --> 00:03:38,819
hurt us they can be binaries that we

101
00:03:38,819 --> 00:03:40,440
don't know if they are vulnerable or

102
00:03:40,440 --> 00:03:42,659
they have back doors or bad things in

103
00:03:42,659 --> 00:03:43,440
them

104
00:03:43,440 --> 00:03:45,480
we can we can see them so we cannot

105
00:03:45,480 --> 00:03:47,760
produce an esport on that

106
00:03:47,760 --> 00:03:50,640
that represents Faithfully what's inside

107
00:03:50,640 --> 00:03:52,019
of a container

108
00:03:52,019 --> 00:03:54,480
and we can't see them so we cannot do

109
00:03:54,480 --> 00:03:56,519
anything about them we don't have the

110
00:03:56,519 --> 00:03:58,140
tools to understand how these dark files

111
00:03:58,140 --> 00:03:59,700
affect the system and we cannot take the

112
00:03:59,700 --> 00:04:01,799
appropriate steps to fix them

113
00:04:01,799 --> 00:04:04,140
we went ahead and we measured how these

114
00:04:04,140 --> 00:04:06,840
dark files appear in the say the docker

115
00:04:06,840 --> 00:04:08,040
Hub ecosystem and we found that it's

116
00:04:08,040 --> 00:04:10,140
actually very widespread it's a it's a

117
00:04:10,140 --> 00:04:12,060
problem in the ecosystem and it affects

118
00:04:12,060 --> 00:04:14,519
software transparency

119
00:04:14,519 --> 00:04:17,760
now you may be tempted to say hey this

120
00:04:17,760 --> 00:04:19,079
is a problem with software composition

121
00:04:19,079 --> 00:04:22,500
analysis tools trivia is not good enough

122
00:04:22,500 --> 00:04:24,780
our argument is that actually that's not

123
00:04:24,780 --> 00:04:26,520
the problem the fundamental problem is

124
00:04:26,520 --> 00:04:27,840
that

125
00:04:27,840 --> 00:04:30,479
SCS can only do so much they can only

126
00:04:30,479 --> 00:04:32,759
guess so much they can only mine so much

127
00:04:32,759 --> 00:04:34,680
information what we need to be doing is

128
00:04:34,680 --> 00:04:36,419
thinking how can we communicate better

129
00:04:36,419 --> 00:04:38,820
information inside of software artifacts

130
00:04:38,820 --> 00:04:40,800
we must measure and reduce the dark

131
00:04:40,800 --> 00:04:43,020
files by seeing how they appear and

132
00:04:43,020 --> 00:04:45,000
taking steps to better communicate

133
00:04:45,000 --> 00:04:46,620
software's blockchain information

134
00:04:46,620 --> 00:04:49,740
and that is it thank you so much any

135
00:04:49,740 --> 00:04:50,759
questions

136
00:04:50,759 --> 00:04:53,720
I think we have a minute

137
00:04:57,070 --> 00:05:01,380
[Applause]

