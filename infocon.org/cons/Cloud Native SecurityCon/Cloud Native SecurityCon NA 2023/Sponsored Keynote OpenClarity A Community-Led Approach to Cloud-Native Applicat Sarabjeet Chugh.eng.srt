1
00:00:00,060 --> 00:00:03,240
good morning how's everyone doing

2
00:00:03,240 --> 00:00:04,980
great

3
00:00:04,980 --> 00:00:07,080
in the next few minutes we're going to

4
00:00:07,080 --> 00:00:10,200
talk about three main things one is I'm

5
00:00:10,200 --> 00:00:12,420
gonna let you in on Industries most

6
00:00:12,420 --> 00:00:15,660
well-kept secret in the open source area

7
00:00:15,660 --> 00:00:17,279
next we're going to play a little game

8
00:00:17,279 --> 00:00:19,980
whip out your phone phone cameras you

9
00:00:19,980 --> 00:00:22,320
you have a chance to win great prizes at

10
00:00:22,320 --> 00:00:24,660
our booth Booth D1

11
00:00:24,660 --> 00:00:26,400
and the third thing is we're going to

12
00:00:26,400 --> 00:00:28,199
learn about a cool new technology that

13
00:00:28,199 --> 00:00:30,900
I'm really proud of and hopefully you

14
00:00:30,900 --> 00:00:33,360
like it too that you use in your

15
00:00:33,360 --> 00:00:35,880
environments so let's get started my

16
00:00:35,880 --> 00:00:39,059
name is sarabjit and we are hiring I

17
00:00:39,059 --> 00:00:40,860
know times are tough if you or somebody

18
00:00:40,860 --> 00:00:42,780
you know is looking for a job we're

19
00:00:42,780 --> 00:00:45,780
hiring across the board at Cisco

20
00:00:45,780 --> 00:00:48,059
hit me up

21
00:00:48,059 --> 00:00:50,820
so the most well-kept secret in open

22
00:00:50,820 --> 00:00:52,860
source is Cisco loves open source we've

23
00:00:52,860 --> 00:00:54,960
been quietly innovating in the open

24
00:00:54,960 --> 00:00:57,180
source for a little over five years now

25
00:00:57,180 --> 00:01:00,600
and we have a lot of contributions that

26
00:01:00,600 --> 00:01:02,960
we made in the open source area

27
00:01:02,960 --> 00:01:04,760
the most

28
00:01:04,760 --> 00:01:07,500
prominent one being open Telemetry we

29
00:01:07,500 --> 00:01:09,420
are one of the major code contributors

30
00:01:09,420 --> 00:01:13,140
to open Telemetry we have people in the

31
00:01:13,140 --> 00:01:15,960
governing Boards of committees like

32
00:01:15,960 --> 00:01:19,140
kubernetes and and other areas and we've

33
00:01:19,140 --> 00:01:21,840
also come up with new open source

34
00:01:21,840 --> 00:01:24,119
project and incubated new projects a few

35
00:01:24,119 --> 00:01:25,560
of which which I'm going to talk about

36
00:01:25,560 --> 00:01:28,920
in this presentation

37
00:01:28,920 --> 00:01:32,159
next whip out your phone 30 seconds

38
00:01:32,159 --> 00:01:35,820
Point your camera to this QR code and

39
00:01:35,820 --> 00:01:37,740
give my project a star

40
00:01:37,740 --> 00:01:40,680
and show that at the booth

41
00:01:40,680 --> 00:01:44,900
your time let's let's start this timer

42
00:01:45,000 --> 00:01:46,799
thank you

43
00:01:46,799 --> 00:01:49,380
thanks everyone who's doing this

44
00:01:49,380 --> 00:01:52,380
these are the GitHub IDs of people who

45
00:01:52,380 --> 00:01:54,780
are signing up we have a function that

46
00:01:54,780 --> 00:01:57,540
is monitoring that starring thank you so

47
00:01:57,540 --> 00:01:58,680
much

48
00:01:58,680 --> 00:02:02,100
and you have other opportunities to look

49
00:02:02,100 --> 00:02:03,600
at this and I'm going to give a demo

50
00:02:03,600 --> 00:02:07,140
about this uh in in a few minutes

51
00:02:07,140 --> 00:02:09,899
so this is the Crux of uh that

52
00:02:09,899 --> 00:02:12,840
technology that we we are so proud of in

53
00:02:12,840 --> 00:02:15,420
the open source Cloud native uh security

54
00:02:15,420 --> 00:02:17,940
space it's called open Clarity it's a

55
00:02:17,940 --> 00:02:21,300
suite of Open Source projects that allow

56
00:02:21,300 --> 00:02:24,800
you to do API security using API Clarity

57
00:02:24,800 --> 00:02:27,840
kubernetes security both the static

58
00:02:27,840 --> 00:02:30,780
container image scans and securities as

59
00:02:30,780 --> 00:02:33,360
well as the runtime using Cube Clarity

60
00:02:33,360 --> 00:02:35,819
and then the function Clarity which is

61
00:02:35,819 --> 00:02:38,099
the latest Innovation which we've open

62
00:02:38,099 --> 00:02:40,940
sourced recently at kubecon in Detroit

63
00:02:40,940 --> 00:02:43,920
and we I'm going to give a quick live

64
00:02:43,920 --> 00:02:47,340
demo of that and we are so proud of this

65
00:02:47,340 --> 00:02:48,900
that we have deployed them in our

66
00:02:48,900 --> 00:02:51,360
production and in our commercial

67
00:02:51,360 --> 00:02:53,940
products panoptica which is that

68
00:02:53,940 --> 00:02:56,580
comprehensive secure security for your

69
00:02:56,580 --> 00:02:58,800
kubernetes apis and serverless functions

70
00:02:58,800 --> 00:03:01,260
and similarly on the right hand side we

71
00:03:01,260 --> 00:03:04,640
have operators ecosystem that you can

72
00:03:04,640 --> 00:03:09,440
make your life easier to use istio and

73
00:03:09,440 --> 00:03:12,900
Kafka using these operators and it's

74
00:03:12,900 --> 00:03:14,220
deployed in the commercial product

75
00:03:14,220 --> 00:03:16,140
kaliste

76
00:03:16,140 --> 00:03:18,720
so let's get started with the demo of

77
00:03:18,720 --> 00:03:21,900
function Clarity function Clarity is a

78
00:03:21,900 --> 00:03:24,659
keyless code Integrity solution for

79
00:03:24,659 --> 00:03:27,180
serverless functions Lambda Azure

80
00:03:27,180 --> 00:03:30,060
functions Google and I'm going to talk

81
00:03:30,060 --> 00:03:34,400
about the Lambda function security Now

82
00:03:36,659 --> 00:03:40,019
so this is an example if you can see the

83
00:03:40,019 --> 00:03:42,980
screen of a trivial Lambda function that

84
00:03:42,980 --> 00:03:46,560
we want to protect against you know at

85
00:03:46,560 --> 00:03:50,099
the CI CD level your code is is

86
00:03:50,099 --> 00:03:53,459
protected but now you run it it runs

87
00:03:53,459 --> 00:03:57,299
perfectly fine and you can see in in the

88
00:03:57,299 --> 00:03:59,879
configuration you can run up to 10

89
00:03:59,879 --> 00:04:01,340
concurrent

90
00:04:01,340 --> 00:04:03,840
Lambda functions

91
00:04:03,840 --> 00:04:06,000
and that's why it allows you to run this

92
00:04:06,000 --> 00:04:09,120
and you could run it and it it works now

93
00:04:09,120 --> 00:04:12,180
the way function security works is

94
00:04:12,180 --> 00:04:15,120
there's a verifier serverless function

95
00:04:15,120 --> 00:04:17,220
that is running uh in your environment

96
00:04:17,220 --> 00:04:20,160
in your Cloud environment that takes the

97
00:04:20,160 --> 00:04:22,800
signature the first time you you log in

98
00:04:22,800 --> 00:04:24,720
and send that deploy that serverless

99
00:04:24,720 --> 00:04:27,180
function after that any malicious code

100
00:04:27,180 --> 00:04:33,060
that gets sent to it it traps and and it

101
00:04:33,060 --> 00:04:34,919
disallows running those serverless

102
00:04:34,919 --> 00:04:38,040
functions so let's try hacking that

103
00:04:38,040 --> 00:04:42,360
serverless function and try running it

104
00:04:42,360 --> 00:04:44,460
so ah

105
00:04:44,460 --> 00:04:47,820
so I've already got this hacked at CNC

106
00:04:47,820 --> 00:04:49,620
so suppose somebody took control of your

107
00:04:49,620 --> 00:04:52,020
git repository and made this code change

108
00:04:52,020 --> 00:04:55,440
and is trying to test deploy this

109
00:04:55,440 --> 00:04:58,800
it won't be allowed rate exceeded is the

110
00:04:58,800 --> 00:05:01,380
message that comes out essentially what

111
00:05:01,380 --> 00:05:03,479
that means is that that can the

112
00:05:03,479 --> 00:05:06,120
concurrency ratio that that I showed you

113
00:05:06,120 --> 00:05:10,199
earlier that has been reset to zero as

114
00:05:10,199 --> 00:05:12,960
you can see it was 10 earlier and now

115
00:05:12,960 --> 00:05:15,540
you the function cannot be invoked while

116
00:05:15,540 --> 00:05:18,900
that is zero so that's that's what that

117
00:05:18,900 --> 00:05:21,540
function Clarity allows you to do easily

118
00:05:21,540 --> 00:05:23,520
and um

119
00:05:23,520 --> 00:05:25,020
the next

120
00:05:25,020 --> 00:05:29,659
step going back to my presentation

121
00:05:30,120 --> 00:05:32,720
so

122
00:05:34,139 --> 00:05:36,539
really I want to leave you with these

123
00:05:36,539 --> 00:05:38,039
three thoughts if you want to learn more

124
00:05:38,039 --> 00:05:40,440
about Open Clarity hit see us in the

125
00:05:40,440 --> 00:05:45,180
booth D1 and or make a note of this URL

126
00:05:45,180 --> 00:05:49,380
CSCO cloudsec and then give us a star on

127
00:05:49,380 --> 00:05:51,900
GitHub for this function Clarity I

128
00:05:51,900 --> 00:05:54,780
really appreciate that and see us in the

129
00:05:54,780 --> 00:05:56,450
booth thank you so much

130
00:05:56,450 --> 00:06:01,360
[Applause]

