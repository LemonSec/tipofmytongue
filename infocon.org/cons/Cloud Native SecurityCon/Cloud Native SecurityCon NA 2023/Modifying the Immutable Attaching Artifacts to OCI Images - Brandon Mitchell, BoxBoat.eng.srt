1
00:00:00,539 --> 00:00:02,879
all right you guys ready to get started

2
00:00:02,879 --> 00:00:04,920
chat about this stuff if I was to do a

3
00:00:04,920 --> 00:00:06,420
quick poll of the audience who here

4
00:00:06,420 --> 00:00:10,019
knows like the Json schemos of image

5
00:00:10,019 --> 00:00:11,639
manifest and that kind of stuff getting

6
00:00:11,639 --> 00:00:13,799
down to that low level details

7
00:00:13,799 --> 00:00:16,199
I know I know a few of you do okay we

8
00:00:16,199 --> 00:00:18,060
got about 50 50.

9
00:00:18,060 --> 00:00:19,619
I think everybody Rose their hand I'd

10
00:00:19,619 --> 00:00:21,000
probably know so that's probably the

11
00:00:21,000 --> 00:00:22,619
part of the challenge here so welcome

12
00:00:22,619 --> 00:00:24,660
this is going to be modifying the

13
00:00:24,660 --> 00:00:25,740
immutable and so we're going to talk

14
00:00:25,740 --> 00:00:27,960
about how you can attach artifacts oci

15
00:00:27,960 --> 00:00:30,119
images by that we're talking about

16
00:00:30,119 --> 00:00:31,560
everybody's been saying stuff like

17
00:00:31,560 --> 00:00:33,480
generating s-bombs and we're talking

18
00:00:33,480 --> 00:00:35,219
about how we create the s-bombs other

19
00:00:35,219 --> 00:00:36,239
people are saying how to consume the

20
00:00:36,239 --> 00:00:38,460
s-bombs this is saying how you can

21
00:00:38,460 --> 00:00:39,960
connect those to your image and start

22
00:00:39,960 --> 00:00:42,180
shipping them out to people who needed

23
00:00:42,180 --> 00:00:45,360
to blame later on and so let's chat

24
00:00:45,360 --> 00:00:46,680
the background of me I'm not going to go

25
00:00:46,680 --> 00:00:48,300
through the full details I do work for

26
00:00:48,300 --> 00:00:50,579
boxboat got other people here I'm sure

27
00:00:50,579 --> 00:00:52,379
someone's hiring all that good stuff but

28
00:00:52,379 --> 00:00:54,840
the important details from this one are

29
00:00:54,840 --> 00:00:57,180
that I'm an oci maintainer and a lot of

30
00:00:57,180 --> 00:00:58,920
this work comes out of the oci we've got

31
00:00:58,920 --> 00:01:00,539
a working group we were going through a

32
00:01:00,539 --> 00:01:02,820
lot of efforts on this stuff and on some

33
00:01:02,820 --> 00:01:03,960
of the slides and the demos you're going

34
00:01:03,960 --> 00:01:05,580
to see use a little tool called reg

35
00:01:05,580 --> 00:01:07,200
cuddle it comes out a reg client project

36
00:01:07,200 --> 00:01:09,299
and I'm the maintainer of that one so

37
00:01:09,299 --> 00:01:10,979
when you see that that's me just picking

38
00:01:10,979 --> 00:01:12,960
a tool because it's what I know

39
00:01:12,960 --> 00:01:15,360
all right so for the background for

40
00:01:15,360 --> 00:01:16,680
those that didn't raise your hand on the

41
00:01:16,680 --> 00:01:18,000
underlying stuff you probably already

42
00:01:18,000 --> 00:01:20,340
know the container images have like file

43
00:01:20,340 --> 00:01:21,960
system layers they've got their own

44
00:01:21,960 --> 00:01:23,040
config

45
00:01:23,040 --> 00:01:24,840
you've probably done like a Docker build

46
00:01:24,840 --> 00:01:26,400
at some point and then probably change

47
00:01:26,400 --> 00:01:27,720
to other build toy and trying different

48
00:01:27,720 --> 00:01:29,700
stuff out you've probably seen it

49
00:01:29,700 --> 00:01:32,340
there's a shot 256 checksum for like

50
00:01:32,340 --> 00:01:34,320
pinning an image to a specific digest

51
00:01:34,320 --> 00:01:35,759
and so someone can't change it in that

52
00:01:35,759 --> 00:01:37,140
way and you might have a rough idea

53
00:01:37,140 --> 00:01:38,900
what's going on but not quite

54
00:01:38,900 --> 00:01:41,520
and I'm sure at some point you've come

55
00:01:41,520 --> 00:01:43,380
across multi-platform images

56
00:01:43,380 --> 00:01:45,299
where someone's saying we need to start

57
00:01:45,299 --> 00:01:47,460
building for all these Mac m1s out there

58
00:01:47,460 --> 00:01:48,960
because everything else has been built

59
00:01:48,960 --> 00:01:51,840
for all the Intel machines and so

60
00:01:51,840 --> 00:01:53,280
under the covers there's a lot going on

61
00:01:53,280 --> 00:01:54,960
in oci so I want to hit a little bit and

62
00:01:54,960 --> 00:01:55,860
make sure you understand what's

63
00:01:55,860 --> 00:01:56,880
happening under the covers because

64
00:01:56,880 --> 00:01:58,079
that's going to apply for when we

65
00:01:58,079 --> 00:01:59,280
actually start talking about how we

66
00:01:59,280 --> 00:02:01,079
start to attach things together

67
00:02:01,079 --> 00:02:03,780
so under the covers the important detail

68
00:02:03,780 --> 00:02:05,219
here is that everything is happening in

69
00:02:05,219 --> 00:02:07,619
oci when you push it to a registry is a

70
00:02:07,619 --> 00:02:09,538
Content addressable store and so what

71
00:02:09,538 --> 00:02:10,739
that means on the first line is I'll

72
00:02:10,739 --> 00:02:12,959
take a digest and if I curl that digest

73
00:02:12,959 --> 00:02:15,060
the name of that digest from the red

74
00:02:15,060 --> 00:02:16,680
stream pull down that blob

75
00:02:16,680 --> 00:02:19,080
pipe that through a shot if it's a 256

76
00:02:19,080 --> 00:02:21,000
checksum it's going to Output that same

77
00:02:21,000 --> 00:02:23,340
value and so it's the digest of the

78
00:02:23,340 --> 00:02:24,840
content itself is the name of the

79
00:02:24,840 --> 00:02:26,099
content and that's how you do the

80
00:02:26,099 --> 00:02:27,540
content addressability

81
00:02:27,540 --> 00:02:29,879
fancy name there in this case I'm

82
00:02:29,879 --> 00:02:31,800
looking at a layer and so you see a

83
00:02:31,800 --> 00:02:33,060
whole bunch of the files in the layer so

84
00:02:33,060 --> 00:02:34,620
it's just a compressed tar file so

85
00:02:34,620 --> 00:02:37,140
that's like half the image right the

86
00:02:37,140 --> 00:02:38,640
other half of the image is going to be

87
00:02:38,640 --> 00:02:40,980
your Json config what user am I running

88
00:02:40,980 --> 00:02:43,260
it as what are the commands that I'm

89
00:02:43,260 --> 00:02:44,700
kicking off when I start this container

90
00:02:44,700 --> 00:02:46,500
up if there's a history in there you can

91
00:02:46,500 --> 00:02:48,660
see all the previous historical steps

92
00:02:48,660 --> 00:02:50,879
environment variables all that stuff

93
00:02:50,879 --> 00:02:53,640
that all gets passed as a Json blob same

94
00:02:53,640 --> 00:02:55,260
idea content addressable story you just

95
00:02:55,260 --> 00:02:57,840
serialize it into a byte array do the

96
00:02:57,840 --> 00:02:59,160
digest on that and now you have another

97
00:02:59,160 --> 00:03:01,500
address for that blob as well and these

98
00:03:01,500 --> 00:03:03,540
resources blobs registry doesn't care

99
00:03:03,540 --> 00:03:06,720
which Throne to blob so Json tar binary

100
00:03:06,720 --> 00:03:09,120
text whatever it takes whatever you want

101
00:03:09,120 --> 00:03:10,500
to throw in there as long as it just

102
00:03:10,500 --> 00:03:12,239
maps to the digest of the string you

103
00:03:12,239 --> 00:03:13,560
gave it

104
00:03:13,560 --> 00:03:15,120
so now you got these two pieces we need

105
00:03:15,120 --> 00:03:17,099
to put them together because an image

106
00:03:17,099 --> 00:03:18,599
not necessarily one layer might have

107
00:03:18,599 --> 00:03:20,159
multiple layers and it's got to config

108
00:03:20,159 --> 00:03:22,260
and so to assemble them together what we

109
00:03:22,260 --> 00:03:24,060
have is an image manifest yeah another

110
00:03:24,060 --> 00:03:26,700
piece of Json here we're looking at so I

111
00:03:26,700 --> 00:03:27,599
know this probably gets a little bit

112
00:03:27,599 --> 00:03:28,980
tedious but bear with me for a second

113
00:03:28,980 --> 00:03:31,440
where we've got the config descriptor

114
00:03:31,440 --> 00:03:33,659
and that descriptor has the digest we're

115
00:03:33,659 --> 00:03:35,879
talking to we've got the layers in there

116
00:03:35,879 --> 00:03:37,739
that we're referencing and so in this

117
00:03:37,739 --> 00:03:39,000
case I've got a single layer that we're

118
00:03:39,000 --> 00:03:41,099
talking to and you put those two things

119
00:03:41,099 --> 00:03:42,720
together you put them in the Json you

120
00:03:42,720 --> 00:03:44,640
serialize a Json you calculate the

121
00:03:44,640 --> 00:03:47,040
digest on a Json now you have the digest

122
00:03:47,040 --> 00:03:49,019
of your image Manifest this is the PIN

123
00:03:49,019 --> 00:03:50,340
digest whenever you say I want to pull

124
00:03:50,340 --> 00:03:52,080
an image by its digest this is what

125
00:03:52,080 --> 00:03:54,239
you're pulling if you ever change one of

126
00:03:54,239 --> 00:03:55,319
the layers you change the content of

127
00:03:55,319 --> 00:03:56,940
layer you change the layer digest and

128
00:03:56,940 --> 00:03:58,319
that changes this digest as well because

129
00:03:58,319 --> 00:04:00,000
it's all included in there

130
00:04:00,000 --> 00:04:02,099
so that's how you make that structure

131
00:04:02,099 --> 00:04:03,840
graphically it looks a lot like this

132
00:04:03,840 --> 00:04:06,780
where we've got a tag the tag think of

133
00:04:06,780 --> 00:04:08,519
it as like a symbolic link you can have

134
00:04:08,519 --> 00:04:09,780
multiple types when you have the same

135
00:04:09,780 --> 00:04:11,340
thing you can have a tag that used to

136
00:04:11,340 --> 00:04:13,140
point to one digest and the future

137
00:04:13,140 --> 00:04:15,060
points to a different Digest

138
00:04:15,060 --> 00:04:16,500
and then that points to your manifest

139
00:04:16,500 --> 00:04:17,940
that manifests is immutable because it's

140
00:04:17,940 --> 00:04:19,560
referenced by the digest all this

141
00:04:19,560 --> 00:04:21,358
content is referenced under there

142
00:04:21,358 --> 00:04:23,340
so pretty pictures I feel like that

143
00:04:23,340 --> 00:04:24,960
wakes some people up sometimes I know

144
00:04:24,960 --> 00:04:25,979
I'm holding you right before the coffee

145
00:04:25,979 --> 00:04:27,300
break and so it's going to be a little

146
00:04:27,300 --> 00:04:28,680
struggle here

147
00:04:28,680 --> 00:04:30,479
immutability is the nice feature we get

148
00:04:30,479 --> 00:04:32,880
out of all this so when you do this

149
00:04:32,880 --> 00:04:35,580
you've got a Merkle tree you've got a

150
00:04:35,580 --> 00:04:37,380
dag a directed Ace like the graph out

151
00:04:37,380 --> 00:04:40,380
there and you've got the the content

152
00:04:40,380 --> 00:04:41,460
addressable store we already talked

153
00:04:41,460 --> 00:04:42,600
about you put all those things together

154
00:04:42,600 --> 00:04:44,940
and you get this immutability so in case

155
00:04:44,940 --> 00:04:46,979
uh in case I'm going too far back into

156
00:04:46,979 --> 00:04:48,660
the college days the Merkle tree is when

157
00:04:48,660 --> 00:04:50,940
you have a data structure that has a

158
00:04:50,940 --> 00:04:52,620
hatch itself and his content all his

159
00:04:52,620 --> 00:04:54,060
child nodes are hashed and so when you

160
00:04:54,060 --> 00:04:55,199
already change it and so that was that

161
00:04:55,199 --> 00:04:56,940
structure we were just looking at there

162
00:04:56,940 --> 00:04:59,639
okay so far hopefully nod's in the room

163
00:04:59,639 --> 00:05:01,139
we probably got a little bit too deep in

164
00:05:01,139 --> 00:05:02,759
the weeds for some people but that's

165
00:05:02,759 --> 00:05:05,160
kind of where his talk is going

166
00:05:05,160 --> 00:05:06,960
another PC here that's important are the

167
00:05:06,960 --> 00:05:08,580
multi-platform images

168
00:05:08,580 --> 00:05:10,440
and so to do this we have a different

169
00:05:10,440 --> 00:05:12,060
kind of manifest

170
00:05:12,060 --> 00:05:13,680
that different kind of manifest just has

171
00:05:13,680 --> 00:05:15,960
multiple descriptors for each one of the

172
00:05:15,960 --> 00:05:17,699
different platform specific manifests

173
00:05:17,699 --> 00:05:19,979
and so it's a manifest of manifest

174
00:05:19,979 --> 00:05:21,479
so you have this hierarchical pointing

175
00:05:21,479 --> 00:05:23,220
and when you do this when you're looking

176
00:05:23,220 --> 00:05:24,660
through that array of descriptors there

177
00:05:24,660 --> 00:05:26,220
and you say okay which one do I want to

178
00:05:26,220 --> 00:05:27,360
pull you have to put something in there

179
00:05:27,360 --> 00:05:28,919
that can identify one versus the other

180
00:05:28,919 --> 00:05:30,180
and the way we're identifying it from

181
00:05:30,180 --> 00:05:31,560
the multi-platform Manifest is we put

182
00:05:31,560 --> 00:05:33,479
the platform in there and so you put

183
00:05:33,479 --> 00:05:34,680
that extra field in there you say this

184
00:05:34,680 --> 00:05:36,180
is the platform for arm the other one is

185
00:05:36,180 --> 00:05:38,220
a platform for AMD and then we're going

186
00:05:38,220 --> 00:05:39,479
through looking for your manifest you

187
00:05:39,479 --> 00:05:40,560
can pick it from the list and the

188
00:05:40,560 --> 00:05:41,580
runtime just does this for you

189
00:05:41,580 --> 00:05:43,560
transparently under the covers

190
00:05:43,560 --> 00:05:45,539
but importantly this has its own digest

191
00:05:45,539 --> 00:05:47,580
as well so you can serialize this one

192
00:05:47,580 --> 00:05:49,500
you'd send that digest in there and when

193
00:05:49,500 --> 00:05:50,820
you send this to your runtime the

194
00:05:50,820 --> 00:05:52,440
runtime knows how to figure out its own

195
00:05:52,440 --> 00:05:54,479
platform under the covers

196
00:05:54,479 --> 00:05:56,340
all right graphically we're now up to

197
00:05:56,340 --> 00:05:57,120
this

198
00:05:57,120 --> 00:05:58,500
where we've got our tag that's pointing

199
00:05:58,500 --> 00:06:00,840
to the multi-platform Manifest that no

200
00:06:00,840 --> 00:06:03,300
CI lamp is called an index and so you

201
00:06:03,300 --> 00:06:05,220
have a index just the terminology is how

202
00:06:05,220 --> 00:06:06,840
to pick that points to multiple

203
00:06:06,840 --> 00:06:08,039
manifests for each one of your platforms

204
00:06:08,039 --> 00:06:09,600
that points to each of the configs and

205
00:06:09,600 --> 00:06:11,520
all the layers out there so we built

206
00:06:11,520 --> 00:06:13,080
this nice big graph

207
00:06:13,080 --> 00:06:14,820
I know you put one last piece on this

208
00:06:14,820 --> 00:06:15,960
puzzle and then we can actually get into

209
00:06:15,960 --> 00:06:17,460
the fun part of the talk

210
00:06:17,460 --> 00:06:19,199
and the last piece is that for the

211
00:06:19,199 --> 00:06:20,160
longest while we've been able to push

212
00:06:20,160 --> 00:06:22,259
artifacts to a registry anybody ever

213
00:06:22,259 --> 00:06:23,940
hear about pushing a Helm chart to a

214
00:06:23,940 --> 00:06:25,740
registry or something like that if

215
00:06:25,740 --> 00:06:27,000
you're want to pushing Helm chart to a

216
00:06:27,000 --> 00:06:29,340
registry you just push a blob and their

217
00:06:29,340 --> 00:06:30,479
blob I think they actually happen to

218
00:06:30,479 --> 00:06:32,039
push a tar file out there a compressed

219
00:06:32,039 --> 00:06:33,180
tar file but it could have been anything

220
00:06:33,180 --> 00:06:36,240
they wanted to you push that blob and

221
00:06:36,240 --> 00:06:38,400
the thing they change is the media type

222
00:06:38,400 --> 00:06:40,919
that is on that config descriptor they

223
00:06:40,919 --> 00:06:42,900
change that media type on that one piece

224
00:06:42,900 --> 00:06:44,400
and that tells anybody running it that

225
00:06:44,400 --> 00:06:45,900
this no longer container image we're

226
00:06:45,900 --> 00:06:47,160
trying to run with a container image

227
00:06:47,160 --> 00:06:49,080
runtime but this is some other tool that

228
00:06:49,080 --> 00:06:50,699
should be looking at working it even

229
00:06:50,699 --> 00:06:52,139
though both of these are image manifest

230
00:06:52,139 --> 00:06:54,060
we just kind of overload that one tool

231
00:06:54,060 --> 00:06:55,199
out there just so we get that

232
00:06:55,199 --> 00:06:56,759
portability

233
00:06:56,759 --> 00:06:58,800
so we ever learned that but otherwise in

234
00:06:58,800 --> 00:07:00,300
this example here I made a little

235
00:07:00,300 --> 00:07:01,919
electron bill of materials and I just

236
00:07:01,919 --> 00:07:04,560
said that this does contain electrons

237
00:07:04,560 --> 00:07:06,180
ship that and I can attach that to any

238
00:07:06,180 --> 00:07:08,460
image I wanted to if I decided to

239
00:07:08,460 --> 00:07:10,800
okay so that's all the fundamentals this

240
00:07:10,800 --> 00:07:12,060
is stuff that already exists out there

241
00:07:12,060 --> 00:07:13,680
people are doing this today their Helm

242
00:07:13,680 --> 00:07:14,819
charts out there their container images

243
00:07:14,819 --> 00:07:16,560
their multi-platform images this is kind

244
00:07:16,560 --> 00:07:18,060
of the underlying Burns of what's going

245
00:07:18,060 --> 00:07:19,560
on under the covers

246
00:07:19,560 --> 00:07:22,020
the challenge oci faced was we're saying

247
00:07:22,020 --> 00:07:23,880
okay great we've got all these s-bombs

248
00:07:23,880 --> 00:07:25,259
out there we've got all these other

249
00:07:25,259 --> 00:07:27,360
tools how can we associate one to the

250
00:07:27,360 --> 00:07:28,979
other and if anybody was in here for

251
00:07:28,979 --> 00:07:31,380
Roses uh bit her conversation earlier

252
00:07:31,380 --> 00:07:33,539
the discussion went hey we're shipping

253
00:07:33,539 --> 00:07:35,340
the container images out there we really

254
00:07:35,340 --> 00:07:37,020
want to ship the s-bomb alongside of

255
00:07:37,020 --> 00:07:38,460
them and somehow associate the two

256
00:07:38,460 --> 00:07:39,479
together

257
00:07:39,479 --> 00:07:41,520
because it's not the best if you say

258
00:07:41,520 --> 00:07:42,300
we're going to have this since

259
00:07:42,300 --> 00:07:43,979
repository of all the s-bombs that some

260
00:07:43,979 --> 00:07:46,259
government agency manages for us I know

261
00:07:46,259 --> 00:07:47,880
I come out of the DC area trust us we

262
00:07:47,880 --> 00:07:48,840
work for the government might be a

263
00:07:48,840 --> 00:07:50,039
famous term out there but I'm sure a lot

264
00:07:50,039 --> 00:07:51,539
of people in here are like no no we're

265
00:07:51,539 --> 00:07:52,680
not going to trust them

266
00:07:52,680 --> 00:07:54,419
so trying to get a centralized entity

267
00:07:54,419 --> 00:07:56,099
isn't going to necessarily work trying

268
00:07:56,099 --> 00:07:57,360
to have every person go out to a

269
00:07:57,360 --> 00:07:58,380
different place to try to figure out

270
00:07:58,380 --> 00:07:59,520
where this s-bomb isn't going to work

271
00:07:59,520 --> 00:08:00,660
you don't want to like figure out okay

272
00:08:00,660 --> 00:08:03,840
it's under the released uh folder over

273
00:08:03,840 --> 00:08:05,280
on GitHub for this one project someone

274
00:08:05,280 --> 00:08:07,259
else put it on a website no we want to

275
00:08:07,259 --> 00:08:08,220
ship these things together we already

276
00:08:08,220 --> 00:08:09,599
have a way to ship an image

277
00:08:09,599 --> 00:08:11,340
we can already ship other artifacts

278
00:08:11,340 --> 00:08:13,139
within the container registry we just

279
00:08:13,139 --> 00:08:15,360
need to associate the two together

280
00:08:15,360 --> 00:08:17,280
so the challenge we faced was how do we

281
00:08:17,280 --> 00:08:19,139
modify this immutable thing

282
00:08:19,139 --> 00:08:20,639
because our container image is immutable

283
00:08:20,639 --> 00:08:22,020
it can't change

284
00:08:22,020 --> 00:08:23,460
but we want to be able to say for this

285
00:08:23,460 --> 00:08:25,560
container image what's the s-bomb what's

286
00:08:25,560 --> 00:08:26,940
the signature what's all this other data

287
00:08:26,940 --> 00:08:28,860
out there and we had a few requirements

288
00:08:28,860 --> 00:08:30,240
so the working group was spun up and

289
00:08:30,240 --> 00:08:31,620
said here here are your go-to

290
00:08:31,620 --> 00:08:32,940
requirements and some of those things we

291
00:08:32,940 --> 00:08:34,799
were looking at was efficiency we want

292
00:08:34,799 --> 00:08:35,760
to make sure we weren't making a whole

293
00:08:35,760 --> 00:08:37,440
lot of API calls

294
00:08:37,440 --> 00:08:39,240
other challenges we were looking at were

295
00:08:39,240 --> 00:08:42,000
how do we both attach and detach content

296
00:08:42,000 --> 00:08:44,099
if you start shipping out an image you

297
00:08:44,099 --> 00:08:46,200
might say the Upstream had it signed

298
00:08:46,200 --> 00:08:48,000
with their signature but when we brought

299
00:08:48,000 --> 00:08:49,800
this in-house and we brought to our own

300
00:08:49,800 --> 00:08:51,240
registry we wanted to sign up with our

301
00:08:51,240 --> 00:08:53,160
own ID we don't care about that Upstream

302
00:08:53,160 --> 00:08:54,899
signature so we just don't want to pull

303
00:08:54,899 --> 00:08:57,360
that in-house or maybe they had more

304
00:08:57,360 --> 00:08:58,800
metadata than you even wanted to include

305
00:08:58,800 --> 00:09:00,240
or you need to have added extra metadata

306
00:09:00,240 --> 00:09:01,500
it wasn't there

307
00:09:01,500 --> 00:09:03,300
so a lot of different challenges along

308
00:09:03,300 --> 00:09:05,519
those lines we also we couldn't predict

309
00:09:05,519 --> 00:09:07,019
what everybody was going to include you

310
00:09:07,019 --> 00:09:08,339
could start including cat pictures with

311
00:09:08,339 --> 00:09:09,660
all your container images you wanted to

312
00:09:09,660 --> 00:09:10,620
and we didn't want to try to write the

313
00:09:10,620 --> 00:09:12,300
spec for how to attach cat images to the

314
00:09:12,300 --> 00:09:14,220
image to container images

315
00:09:14,220 --> 00:09:15,959
gets a little complicated

316
00:09:15,959 --> 00:09:18,060
so the nice thing about this problem is

317
00:09:18,060 --> 00:09:19,440
that we weren't faced with the

318
00:09:19,440 --> 00:09:20,880
impossible we actually had multiple

319
00:09:20,880 --> 00:09:22,260
Solutions out there and some of them

320
00:09:22,260 --> 00:09:24,180
were already being used and so our

321
00:09:24,180 --> 00:09:25,620
challenge wasn't how to create this it

322
00:09:25,620 --> 00:09:27,660
was how to pick

323
00:09:27,660 --> 00:09:28,800
um and so the first option you're

324
00:09:28,800 --> 00:09:31,440
looking at was the auras team was out

325
00:09:31,440 --> 00:09:33,360
there and they said we're going to make

326
00:09:33,360 --> 00:09:35,220
a new artifact manifest we're going to

327
00:09:35,220 --> 00:09:37,200
push out to the registry and have a new

328
00:09:37,200 --> 00:09:39,060
definition that's not going to have this

329
00:09:39,060 --> 00:09:40,320
config blog because we don't need that

330
00:09:40,320 --> 00:09:42,000
but we just have our own little Blobs of

331
00:09:42,000 --> 00:09:43,080
whatever needs to go in the artifact

332
00:09:43,080 --> 00:09:44,700
we're going to have the subject here

333
00:09:44,700 --> 00:09:45,600
we're going to put in there and that

334
00:09:45,600 --> 00:09:47,100
subject field is just another descriptor

335
00:09:47,100 --> 00:09:48,660
has its digest and that's going to point

336
00:09:48,660 --> 00:09:50,700
back to them which we're extending but

337
00:09:50,700 --> 00:09:52,440
now from our manifest on the left hand

338
00:09:52,440 --> 00:09:53,640
side of the screen there's no way you

339
00:09:53,640 --> 00:09:55,320
can go from that Arrow back to the right

340
00:09:55,320 --> 00:09:58,200
so now we need to add a new API and so

341
00:09:58,200 --> 00:10:00,360
we add the new API this refers API that

342
00:10:00,360 --> 00:10:02,339
when you query that with our manifest

343
00:10:02,339 --> 00:10:05,100
digest on from the left hand side it'll

344
00:10:05,100 --> 00:10:07,800
spit back the list of descriptors for

345
00:10:07,800 --> 00:10:09,060
all the Manifest on the right hand side

346
00:10:09,060 --> 00:10:10,140
of this picture

347
00:10:10,140 --> 00:10:11,880
so that's how he made that mapping we

348
00:10:11,880 --> 00:10:12,779
were going to have to add something to

349
00:10:12,779 --> 00:10:14,700
the registry a couple pros and cons of

350
00:10:14,700 --> 00:10:15,660
this one I mean it was nice and

351
00:10:15,660 --> 00:10:17,040
efficient you had the API and the

352
00:10:17,040 --> 00:10:18,180
registry is going to do it all for you

353
00:10:18,180 --> 00:10:19,740
but none of this is going to work on

354
00:10:19,740 --> 00:10:21,779
existing registry a day any registry out

355
00:10:21,779 --> 00:10:22,860
there that doesn't know what that

356
00:10:22,860 --> 00:10:24,540
artifact manifests that blue box on the

357
00:10:24,540 --> 00:10:25,860
right looks like it's going to reject it

358
00:10:25,860 --> 00:10:27,779
because while they accept any blob at

359
00:10:27,779 --> 00:10:29,279
all all those green boxes they'll take

360
00:10:29,279 --> 00:10:31,019
whatever you throw at them they don't

361
00:10:31,019 --> 00:10:32,760
care about that part when you're a

362
00:10:32,760 --> 00:10:34,140
manifest the registry is parsing it

363
00:10:34,140 --> 00:10:35,100
because it's doing stuff like garbage

364
00:10:35,100 --> 00:10:36,540
collection it's doing all that

365
00:10:36,540 --> 00:10:38,160
Association cleanup is doing some

366
00:10:38,160 --> 00:10:39,300
validation in there so if you push

367
00:10:39,300 --> 00:10:40,440
something in there it doesn't recognize

368
00:10:40,440 --> 00:10:42,720
it just rejects it so that was one of

369
00:10:42,720 --> 00:10:44,579
the big challenges we looked at for this

370
00:10:44,579 --> 00:10:46,140
so he said well it's easy enough to

371
00:10:46,140 --> 00:10:48,600
change this a little bit oci has the

372
00:10:48,600 --> 00:10:50,339
model where we say you can extend any

373
00:10:50,339 --> 00:10:52,500
manifest out there you can take a

374
00:10:52,500 --> 00:10:54,240
manifest that has five Fields you can

375
00:10:54,240 --> 00:10:56,339
have six field into it that's got some

376
00:10:56,339 --> 00:10:59,040
extra structure in it and as long as you

377
00:10:59,040 --> 00:11:00,120
parse it and you see the field you

378
00:11:00,120 --> 00:11:01,620
recognize you can work with it and

379
00:11:01,620 --> 00:11:03,300
someone else's seat knows how to process

380
00:11:03,300 --> 00:11:04,740
the morph Fields they can do their thing

381
00:11:04,740 --> 00:11:07,200
and so we could add the subject field to

382
00:11:07,200 --> 00:11:08,640
an assisting manifest and so now we have

383
00:11:08,640 --> 00:11:10,920
another way to make this back reference

384
00:11:10,920 --> 00:11:13,079
so now we can push this thing that's got

385
00:11:13,079 --> 00:11:15,120
this back reference in it

386
00:11:15,120 --> 00:11:17,640
using an existing media type just extend

387
00:11:17,640 --> 00:11:19,260
it a little bit to a registry that means

388
00:11:19,260 --> 00:11:21,120
it's now portable we can push this exact

389
00:11:21,120 --> 00:11:23,760
same manifest to a new registry or an

390
00:11:23,760 --> 00:11:25,140
old registry and it moves from one side

391
00:11:25,140 --> 00:11:27,540
to the other and back and it's all

392
00:11:27,540 --> 00:11:30,000
nobody cares everybody just it passes

393
00:11:30,000 --> 00:11:31,620
from one to the other we still have the

394
00:11:31,620 --> 00:11:32,940
challenge we can't find this though

395
00:11:32,940 --> 00:11:35,100
without having this new API and this new

396
00:11:35,100 --> 00:11:36,600
API would be a new feature you have to

397
00:11:36,600 --> 00:11:38,100
add to the registry so we're halfway

398
00:11:38,100 --> 00:11:39,360
there we're not quite there but we're

399
00:11:39,360 --> 00:11:41,279
getting there

400
00:11:41,279 --> 00:11:42,959
and so the last thing we were looking at

401
00:11:42,959 --> 00:11:44,760
that I'll go over is that we were saying

402
00:11:44,760 --> 00:11:46,620
we could add a custom tag

403
00:11:46,620 --> 00:11:48,779
and this comes from the state store

404
00:11:48,779 --> 00:11:50,399
group if anybody's seen cosine I think

405
00:11:50,399 --> 00:11:51,480
there might be a few people maybe sign

406
00:11:51,480 --> 00:11:53,399
some images might have been up on stage

407
00:11:53,399 --> 00:11:54,779
earlier people talking about stuff that

408
00:11:54,779 --> 00:11:56,100
need to be signed

409
00:11:56,100 --> 00:11:57,600
so they came out and said we're just

410
00:11:57,600 --> 00:11:59,279
going to have a special tag that is the

411
00:11:59,279 --> 00:12:00,839
digest that manifest on the left again

412
00:12:00,839 --> 00:12:02,579
we like that digest it's a nice

413
00:12:02,579 --> 00:12:04,920
immutable thing we can always reference

414
00:12:04,920 --> 00:12:06,600
so we just make the tag with the value

415
00:12:06,600 --> 00:12:07,860
of the digest you had to change a little

416
00:12:07,860 --> 00:12:09,420
bit of the syntax a little bit so you

417
00:12:09,420 --> 00:12:11,459
change the colon to a dash so it gets

418
00:12:11,459 --> 00:12:13,079
parsed as a tag instead of as a

419
00:12:13,079 --> 00:12:16,860
reference or as a as a digest itself

420
00:12:16,860 --> 00:12:18,300
for you to change that one little bit

421
00:12:18,300 --> 00:12:19,500
there now you can reference it as a tag

422
00:12:19,500 --> 00:12:21,360
and now anybody can use that to look up

423
00:12:21,360 --> 00:12:23,519
some abstract thing whatever that tag

424
00:12:23,519 --> 00:12:25,380
points to and the thing with your point

425
00:12:25,380 --> 00:12:27,180
to would be maybe the Manifest in this

426
00:12:27,180 --> 00:12:29,279
case that we wanted to use maybe it's

427
00:12:29,279 --> 00:12:30,959
pointing to a list of manifests

428
00:12:30,959 --> 00:12:32,160
something like that but you could just

429
00:12:32,160 --> 00:12:34,140
make that pointer in there so we had a

430
00:12:34,140 --> 00:12:35,160
couple options

431
00:12:35,160 --> 00:12:37,260
different you know a b and c and the the

432
00:12:37,260 --> 00:12:38,459
question you might be saying is okay

433
00:12:38,459 --> 00:12:39,540
well you threw a whole bunch of options

434
00:12:39,540 --> 00:12:41,519
to ask which one do you pick and the

435
00:12:41,519 --> 00:12:43,019
answer that is yes

436
00:12:43,019 --> 00:12:45,660
and for we do have some people laughing

437
00:12:45,660 --> 00:12:46,860
out there and then the reasons yes

438
00:12:46,860 --> 00:12:48,360
because we we picked them all week we

439
00:12:48,360 --> 00:12:49,560
couldn't choose we're bad at making

440
00:12:49,560 --> 00:12:51,060
choices

441
00:12:51,060 --> 00:12:52,800
um we're bad a lot of things but making

442
00:12:52,800 --> 00:12:54,480
choices is definitely one that we're not

443
00:12:54,480 --> 00:12:55,620
experts at

444
00:12:55,620 --> 00:12:57,959
so at least as part of the release

445
00:12:57,959 --> 00:12:59,100
candidates and this is still up for

446
00:12:59,100 --> 00:13:01,200
debate on the first bullet point is that

447
00:13:01,200 --> 00:13:03,300
we did add the artifact manifest and so

448
00:13:03,300 --> 00:13:05,040
I'll put a big asterisk there we're back

449
00:13:05,040 --> 00:13:06,959
and forth right now it's it's probably

450
00:13:06,959 --> 00:13:08,279
going to get there eventually but if

451
00:13:08,279 --> 00:13:09,480
you're writing something new right now

452
00:13:09,480 --> 00:13:10,920
there's some disclaimers that I'll go

453
00:13:10,920 --> 00:13:12,060
through later on

454
00:13:12,060 --> 00:13:14,040
we add the subject field and not only

455
00:13:14,040 --> 00:13:15,180
the subject field to the new artifact

456
00:13:15,180 --> 00:13:16,380
manifest but we added to the image

457
00:13:16,380 --> 00:13:18,180
manifest and so you can extend things

458
00:13:18,180 --> 00:13:20,160
like we said so that went in there we

459
00:13:20,160 --> 00:13:22,380
add the new refers API so there is our

460
00:13:22,380 --> 00:13:23,880
API is going to go on a registry server

461
00:13:23,880 --> 00:13:24,899
but this is only going to be on new

462
00:13:24,899 --> 00:13:26,579
Registries to implement the new feature

463
00:13:26,579 --> 00:13:27,720
that we're talking about

464
00:13:27,720 --> 00:13:29,279
so for all the Registries that don't

465
00:13:29,279 --> 00:13:30,720
implement this if you're a client you're

466
00:13:30,720 --> 00:13:32,040
pushing this stuff up there the client

467
00:13:32,040 --> 00:13:33,600
is now responsible for maintaining that

468
00:13:33,600 --> 00:13:35,399
tag anytime they're talking to a

469
00:13:35,399 --> 00:13:37,260
registry doesn't have a new feature

470
00:13:37,260 --> 00:13:39,120
so with this we now have the full

471
00:13:39,120 --> 00:13:40,740
backward forward compatibility we've got

472
00:13:40,740 --> 00:13:42,420
a nice solution and graphically it gets

473
00:13:42,420 --> 00:13:44,579
a little busy a little bit busy and I

474
00:13:44,579 --> 00:13:45,959
actually had to take some of the arrows

475
00:13:45,959 --> 00:13:47,220
off here to make it flow a little better

476
00:13:47,220 --> 00:13:49,260
so those subject lines there will go all

477
00:13:49,260 --> 00:13:51,120
the way back to the Manifest on the left

478
00:13:51,120 --> 00:13:52,920
but what we have is you pull your

479
00:13:52,920 --> 00:13:55,019
manifest from the version three you go

480
00:13:55,019 --> 00:13:56,519
down you say here's my digest for the

481
00:13:56,519 --> 00:13:58,500
Manifest that B3 points to let me go out

482
00:13:58,500 --> 00:13:59,760
and see if there's anything that refers

483
00:13:59,760 --> 00:14:01,920
to it and so you go hit the repairs API

484
00:14:01,920 --> 00:14:03,180
and if that exists great it's going to

485
00:14:03,180 --> 00:14:05,160
come back out with this index nice thing

486
00:14:05,160 --> 00:14:07,500
about that index is that data data type

487
00:14:07,500 --> 00:14:09,480
structure that already exists right now

488
00:14:09,480 --> 00:14:11,459
and all the specs so we didn't have to

489
00:14:11,459 --> 00:14:13,440
invent anything new at index that's what

490
00:14:13,440 --> 00:14:14,820
you're talking about just a bit ago is a

491
00:14:14,820 --> 00:14:16,200
Manifesto manifest so you can just point

492
00:14:16,200 --> 00:14:18,120
to as many of these as you want to which

493
00:14:18,120 --> 00:14:19,440
means we can have a whole lot of

494
00:14:19,440 --> 00:14:20,940
artifacts we're all referencing at this

495
00:14:20,940 --> 00:14:22,440
point which is great

496
00:14:22,440 --> 00:14:24,240
and oh by the way if it doesn't work and

497
00:14:24,240 --> 00:14:26,040
we have to fall back we use this tag and

498
00:14:26,040 --> 00:14:28,200
the tagging point the exact same data

499
00:14:28,200 --> 00:14:30,300
structure so the clients don't care how

500
00:14:30,300 --> 00:14:31,200
they get the data structure they're

501
00:14:31,200 --> 00:14:32,579
getting the exact same data back from

502
00:14:32,579 --> 00:14:33,720
the registry whether they're talking the

503
00:14:33,720 --> 00:14:36,000
new stuff or the old stuff

504
00:14:36,000 --> 00:14:37,380
and the reason we want the new stuff is

505
00:14:37,380 --> 00:14:38,700
having the registry manage this for us

506
00:14:38,700 --> 00:14:40,380
is great but in case it doesn't the

507
00:14:40,380 --> 00:14:41,519
client can manage it we at least have

508
00:14:41,519 --> 00:14:43,560
something that's functional

509
00:14:43,560 --> 00:14:45,660
all right before I go too much farther I

510
00:14:45,660 --> 00:14:46,920
get a lot of questions on this next

511
00:14:46,920 --> 00:14:49,560
topic which is hey you talked about

512
00:14:49,560 --> 00:14:52,740
adding the subject field to the artifact

513
00:14:52,740 --> 00:14:54,300
manifest that you just added you talked

514
00:14:54,300 --> 00:14:57,240
about having the subject to the image

515
00:14:57,240 --> 00:14:59,279
manifest they'll refer to a single image

516
00:14:59,279 --> 00:15:02,160
but hey what about the multi-platform

517
00:15:02,160 --> 00:15:04,199
images right and people people keep

518
00:15:04,199 --> 00:15:05,279
asking that question can we have that

519
00:15:05,279 --> 00:15:06,600
subject over there so the multi-platform

520
00:15:06,600 --> 00:15:08,040
manager can point to things

521
00:15:08,040 --> 00:15:10,079
and the way I'm going to start that is

522
00:15:10,079 --> 00:15:12,120
to say the picture on the left exists

523
00:15:12,120 --> 00:15:13,620
where if you're saying I've got an

524
00:15:13,620 --> 00:15:14,760
artifact and I want to extend a

525
00:15:14,760 --> 00:15:16,440
multi-platform image with some metadata

526
00:15:16,440 --> 00:15:18,000
you want to sign a multi-platform image

527
00:15:18,000 --> 00:15:19,860
you want to add an S1 at that level you

528
00:15:19,860 --> 00:15:21,540
can do that you can sign at the top

529
00:15:21,540 --> 00:15:22,920
level or you can sign each individual

530
00:15:22,920 --> 00:15:24,839
manifest you probably want to do both

531
00:15:24,839 --> 00:15:26,160
but you can do that

532
00:15:26,160 --> 00:15:27,480
it's the picture on the right that we

533
00:15:27,480 --> 00:15:28,440
don't allow

534
00:15:28,440 --> 00:15:29,760
and the picture on the right that we

535
00:15:29,760 --> 00:15:31,079
don't allow the reason we don't have an

536
00:15:31,079 --> 00:15:32,639
index that points back to something else

537
00:15:32,639 --> 00:15:35,399
is because at that point you know from

538
00:15:35,399 --> 00:15:37,079
the index you're creating both the

539
00:15:37,079 --> 00:15:38,519
subject field and potentially all the

540
00:15:38,519 --> 00:15:40,019
child fields which means you can predict

541
00:15:40,019 --> 00:15:42,480
both of those descriptors or not predict

542
00:15:42,480 --> 00:15:43,500
you know exactly what both those

543
00:15:43,500 --> 00:15:45,959
descriptor values are and the way you

544
00:15:45,959 --> 00:15:47,820
walk this even though those things both

545
00:15:47,820 --> 00:15:49,860
point to the left the way you walk this

546
00:15:49,860 --> 00:15:51,300
is in a circle

547
00:15:51,300 --> 00:15:52,680
and we were talking about earlier we

548
00:15:52,680 --> 00:15:55,019
made this uh this dag structure the

549
00:15:55,019 --> 00:15:56,579
directed acyclic graph I didn't really

550
00:15:56,579 --> 00:15:58,139
go into the whole what that means but

551
00:15:58,139 --> 00:16:00,240
directly acyclic graph means is acyclic

552
00:16:00,240 --> 00:16:02,519
there's no Cycles you don't want loops

553
00:16:02,519 --> 00:16:04,680
loops are bad in the CI land

554
00:16:04,680 --> 00:16:06,480
so what's happening here is you have

555
00:16:06,480 --> 00:16:08,519
this V3 tag you have queer the V3 tag

556
00:16:08,519 --> 00:16:10,620
you pull the image manifest there and

557
00:16:10,620 --> 00:16:11,820
you say tell me everything that refers

558
00:16:11,820 --> 00:16:13,380
to this image manifests so logically you

559
00:16:13,380 --> 00:16:15,000
walk over to that index on the right

560
00:16:15,000 --> 00:16:16,740
then you say tell me all my child nodes

561
00:16:16,740 --> 00:16:18,060
from this index you go walking back to

562
00:16:18,060 --> 00:16:20,519
the known left repeating infinite and

563
00:16:20,519 --> 00:16:22,500
that's no good

564
00:16:22,500 --> 00:16:24,540
the other nice thing we try to focus on

565
00:16:24,540 --> 00:16:25,860
here with all the change we're making

566
00:16:25,860 --> 00:16:27,720
was to say hey Registries need to do

567
00:16:27,720 --> 00:16:29,100
some garbage collection even though we

568
00:16:29,100 --> 00:16:30,600
don't specify in the spec they still

569
00:16:30,600 --> 00:16:32,459
want it and so the logic we put out

570
00:16:32,459 --> 00:16:35,399
there was to say that as long as you

571
00:16:35,399 --> 00:16:37,680
have the Manifest exist that you're

572
00:16:37,680 --> 00:16:40,380
pointing to keep the artifact that's out

573
00:16:40,380 --> 00:16:41,820
there so even though the artifact itself

574
00:16:41,820 --> 00:16:43,139
isn't tagged

575
00:16:43,139 --> 00:16:44,820
the Manifest it points to us still

576
00:16:44,820 --> 00:16:46,500
exists so we can say don't garbage

577
00:16:46,500 --> 00:16:47,820
collect it we're still in use keep this

578
00:16:47,820 --> 00:16:50,160
artifact around and so that makes it a

579
00:16:50,160 --> 00:16:51,300
lot more efficient so when you have a

580
00:16:51,300 --> 00:16:52,440
registry out there and you've got all

581
00:16:52,440 --> 00:16:54,300
this stuff sitting up in your repository

582
00:16:54,300 --> 00:16:55,980
you don't have to tag every one of these

583
00:16:55,980 --> 00:16:57,120
individual artifacts keep them from

584
00:16:57,120 --> 00:16:59,160
being cleaned up later on it's nice to

585
00:16:59,160 --> 00:17:00,600
know as long as the image is there all

586
00:17:00,600 --> 00:17:02,940
the metadata is there with it

587
00:17:02,940 --> 00:17:05,220
so we made all his definitions a bunch

588
00:17:05,220 --> 00:17:06,780
of pictures if there are people back

589
00:17:06,780 --> 00:17:08,220
there like to see the code as well

590
00:17:08,220 --> 00:17:10,919
here's the low level Json and this the

591
00:17:10,919 --> 00:17:12,359
Json use in the fallback so I actually

592
00:17:12,359 --> 00:17:13,740
go through and show you if I pull an

593
00:17:13,740 --> 00:17:16,319
image I get the digest that image I

594
00:17:16,319 --> 00:17:18,240
Define that tag with that tie just in

595
00:17:18,240 --> 00:17:21,119
there and I go query this manifest API

596
00:17:21,119 --> 00:17:23,640
for that tag where I get back as an

597
00:17:23,640 --> 00:17:25,740
index and in that index the important

598
00:17:25,740 --> 00:17:26,819
thing here is note that we've got a

599
00:17:26,819 --> 00:17:29,520
descriptor that says here are the

600
00:17:29,520 --> 00:17:31,620
different entries in my manifest and

601
00:17:31,620 --> 00:17:33,780
I've got some metadata I pulled up so

602
00:17:33,780 --> 00:17:35,280
the metadata I pulled up is going to say

603
00:17:35,280 --> 00:17:36,660
here's the artifact type and the

604
00:17:36,660 --> 00:17:37,740
annotations

605
00:17:37,740 --> 00:17:39,179
and the reason we want to pull up the

606
00:17:39,179 --> 00:17:40,679
artifact type in the annotations is that

607
00:17:40,679 --> 00:17:42,360
when we get a list of all these manifest

608
00:17:42,360 --> 00:17:44,760
that extend our image you're going to

609
00:17:44,760 --> 00:17:47,100
have a signature you're going to have an

610
00:17:47,100 --> 00:17:49,260
s-bomb from Cyclone DX you're going to

611
00:17:49,260 --> 00:17:51,179
have an s-bomb from spdx you're going to

612
00:17:51,179 --> 00:17:54,360
have a attestation of the build process

613
00:17:54,360 --> 00:17:55,260
I went through you're gonna have a whole

614
00:17:55,260 --> 00:17:56,340
bunch of these manifests you don't want

615
00:17:56,340 --> 00:17:57,360
to pull each one of them figure out

616
00:17:57,360 --> 00:17:58,320
where it is

617
00:17:58,320 --> 00:18:00,660
and so we pull that metadata up and so

618
00:18:00,660 --> 00:18:02,880
this is the refers API is going to do

619
00:18:02,880 --> 00:18:04,260
this for you on the server or if you're

620
00:18:04,260 --> 00:18:05,640
a client you're managing this you're

621
00:18:05,640 --> 00:18:07,380
going to do it yourself and the place

622
00:18:07,380 --> 00:18:09,360
you pull it up from is from the Manifest

623
00:18:09,360 --> 00:18:11,520
of our actual artifact itself

624
00:18:11,520 --> 00:18:13,320
sense of artifact itself we mentioned

625
00:18:13,320 --> 00:18:14,940
earlier you change that media type on

626
00:18:14,940 --> 00:18:17,160
the config and that's how you know what

627
00:18:17,160 --> 00:18:19,020
this artifact is so we change that

628
00:18:19,020 --> 00:18:20,640
config a little bit you can put

629
00:18:20,640 --> 00:18:22,260
annotations over there you can put all

630
00:18:22,260 --> 00:18:23,460
kinds of other metadata and as long as

631
00:18:23,460 --> 00:18:24,840
that's subject is there that creates

632
00:18:24,840 --> 00:18:27,840
that association between the two

633
00:18:27,840 --> 00:18:29,760
so I'm sure I'll up here we're thinking

634
00:18:29,760 --> 00:18:31,679
this is you know fantastic you show me

635
00:18:31,679 --> 00:18:33,179
all this low level detail that I

636
00:18:33,179 --> 00:18:34,860
probably don't even care about I'll give

637
00:18:34,860 --> 00:18:36,120
you good news there's code that just

638
00:18:36,120 --> 00:18:37,320
does this for you all out of the box so

639
00:18:37,320 --> 00:18:38,100
you don't have to write any of this

640
00:18:38,100 --> 00:18:40,380
yourself right okay that's the good news

641
00:18:40,380 --> 00:18:42,660
hourly show it off and I did tell you

642
00:18:42,660 --> 00:18:44,460
that um some is going to have some of my

643
00:18:44,460 --> 00:18:46,080
code in here there are other options

644
00:18:46,080 --> 00:18:47,160
I'll show you some of the options as

645
00:18:47,160 --> 00:18:49,260
well but let me spin up two Registries

646
00:18:49,260 --> 00:18:50,820
I'm going to define a few variables here

647
00:18:50,820 --> 00:18:53,280
that are going to be used to reference

648
00:18:53,280 --> 00:18:55,320
these two Registries and one's going to

649
00:18:55,320 --> 00:18:57,240
be listed on Port 5001 the others can be

650
00:18:57,240 --> 00:18:59,940
listed on Port 50002 and I'm only going

651
00:18:59,940 --> 00:19:02,100
to use some oci media types for my stuff

652
00:19:02,100 --> 00:19:03,179
and so I went through a little bit of

653
00:19:03,179 --> 00:19:04,500
effort to make sure I didn't have to

654
00:19:04,500 --> 00:19:06,480
keep track of Docker media types or CI

655
00:19:06,480 --> 00:19:07,799
media types and other kinds of things I

656
00:19:07,799 --> 00:19:09,660
just kept it simple so I made two

657
00:19:09,660 --> 00:19:11,220
different media types there

658
00:19:11,220 --> 00:19:13,559
the first registry I'm spinning up is

659
00:19:13,559 --> 00:19:15,419
going to be the cncf distribution

660
00:19:15,419 --> 00:19:18,299
registry listing on Port 5001 that

661
00:19:18,299 --> 00:19:19,860
registry has not been updated so that is

662
00:19:19,860 --> 00:19:22,559
going to be an ociv 1.0 registry that

663
00:19:22,559 --> 00:19:23,760
doesn't have any of the new features yet

664
00:19:23,760 --> 00:19:25,679
so this is as is today if you want to

665
00:19:25,679 --> 00:19:26,880
talk into a registry out in the cloud

666
00:19:26,880 --> 00:19:28,200
today is probably what you'll be talking

667
00:19:28,200 --> 00:19:30,240
to something like this that doesn't have

668
00:19:30,240 --> 00:19:31,500
the new apis doesn't have the new

669
00:19:31,500 --> 00:19:32,580
artifact

670
00:19:32,580 --> 00:19:33,960
and so anytime I push something up to

671
00:19:33,960 --> 00:19:36,320
here I got to do it the old way

672
00:19:36,320 --> 00:19:38,520
the second registry I'm going to spin up

673
00:19:38,520 --> 00:19:40,080
is called zot so I'll come up in another

674
00:19:40,080 --> 00:19:42,240
line here the zot registry has been

675
00:19:42,240 --> 00:19:43,980
updated they jumped early on this

676
00:19:43,980 --> 00:19:45,179
release candidate and wanted to show off

677
00:19:45,179 --> 00:19:46,500
that they can do some new latest and

678
00:19:46,500 --> 00:19:48,059
greatest features so I'll show how that

679
00:19:48,059 --> 00:19:49,020
one works

680
00:19:49,020 --> 00:19:51,299
and like I say their registry supports

681
00:19:51,299 --> 00:19:53,520
the new artifact manifest their registry

682
00:19:53,520 --> 00:19:55,740
supports the new Reapers API and that is

683
00:19:55,740 --> 00:19:56,880
that latter one that we really care

684
00:19:56,880 --> 00:19:58,679
about and so that API is going to be

685
00:19:58,679 --> 00:20:01,020
interesting you also see me turn off TLS

686
00:20:01,020 --> 00:20:03,240
turning off TLS is fantastic for demos

687
00:20:03,240 --> 00:20:05,460
not great for production but just makes

688
00:20:05,460 --> 00:20:07,679
my life so much easier so I did that

689
00:20:07,679 --> 00:20:09,299
and lastly I need to put an image out

690
00:20:09,299 --> 00:20:10,620
there so I went and grabbed an image out

691
00:20:10,620 --> 00:20:12,299
from Docker Hub and I'm just kind of

692
00:20:12,299 --> 00:20:13,500
doing a little bit of self doggy

693
00:20:13,500 --> 00:20:14,580
fruiting I just kind of grabbed my own

694
00:20:14,580 --> 00:20:15,840
image because I knew that I had on the

695
00:20:15,840 --> 00:20:17,760
oci media type so I just wanted to keep

696
00:20:17,760 --> 00:20:19,799
it simple and I want to keep a single

697
00:20:19,799 --> 00:20:21,299
platform so I actually went through and

698
00:20:21,299 --> 00:20:22,980
found the descriptor for just a single

699
00:20:22,980 --> 00:20:24,179
platform Outlet so I didn't want to go

700
00:20:24,179 --> 00:20:25,620
through like a multi-platform index and

701
00:20:25,620 --> 00:20:27,900
get too complicated I like things to say

702
00:20:27,900 --> 00:20:29,340
you know as complicated as all this text

703
00:20:29,340 --> 00:20:31,020
is I wanted to keep it at least somewhat

704
00:20:31,020 --> 00:20:31,980
simple

705
00:20:31,980 --> 00:20:33,900
all right so I'm going to copy this

706
00:20:33,900 --> 00:20:35,820
manifest over from the internet back

707
00:20:35,820 --> 00:20:37,799
over to my local registry and then you

708
00:20:37,799 --> 00:20:39,240
can see the manifests up there in my

709
00:20:39,240 --> 00:20:41,160
local registry now and this is like I

710
00:20:41,160 --> 00:20:44,100
say single platform manifest oci image

711
00:20:44,100 --> 00:20:46,440
B1 all that good stuff all right that's

712
00:20:46,440 --> 00:20:47,580
just the setup so we haven't done

713
00:20:47,580 --> 00:20:49,140
anything fancy yet that's just the

714
00:20:49,140 --> 00:20:51,000
initial setup and this is the part that

715
00:20:51,000 --> 00:20:52,320
everybody's going to like is that the

716
00:20:52,320 --> 00:20:53,220
part you have to worry about if you're

717
00:20:53,220 --> 00:20:55,200
attaching stuff is a very short slide

718
00:20:55,200 --> 00:20:57,059
here I'm going to run a stiff command to

719
00:20:57,059 --> 00:20:58,500
generate an s-bomb so I want to have an

720
00:20:58,500 --> 00:21:01,260
example here and pick your tool I just

721
00:21:01,260 --> 00:21:02,400
happened to pick this one because it was

722
00:21:02,400 --> 00:21:04,740
very easy simple one-liner I'm generally

723
00:21:04,740 --> 00:21:07,260
a cyclone DXs bomb and this is again

724
00:21:07,260 --> 00:21:08,520
where I'm getting in my reg cuddle

725
00:21:08,520 --> 00:21:09,780
command where I say I want to do an

726
00:21:09,780 --> 00:21:11,280
artifact putting so I'm going to push an

727
00:21:11,280 --> 00:21:13,559
artifact up to the registry I'm setting

728
00:21:13,559 --> 00:21:14,940
the subject line and I'm also going to

729
00:21:14,940 --> 00:21:18,360
start setting some annotations some me

730
00:21:18,360 --> 00:21:20,100
types other things to say this is what

731
00:21:20,100 --> 00:21:21,840
this artifact is because otherwise it

732
00:21:21,840 --> 00:21:22,860
doesn't know it just kind of puts it up

733
00:21:22,860 --> 00:21:24,000
there a little abstractly and that's not

734
00:21:24,000 --> 00:21:24,900
any good

735
00:21:24,900 --> 00:21:26,700
so I push it up there with all those and

736
00:21:26,700 --> 00:21:27,840
I'm going to do a second one as well so

737
00:21:27,840 --> 00:21:28,980
we can see what two of them look like

738
00:21:28,980 --> 00:21:31,020
together and so the second example I'm

739
00:21:31,020 --> 00:21:31,860
going to push up there is going to be

740
00:21:31,860 --> 00:21:33,059
spdx because I don't want to pick

741
00:21:33,059 --> 00:21:34,440
favorites if you ever pick favorites in

742
00:21:34,440 --> 00:21:36,120
a room of security people with an s-bomb

743
00:21:36,120 --> 00:21:37,380
it's chaos

744
00:21:37,380 --> 00:21:40,260
so I don't like chaos like things nice

745
00:21:40,260 --> 00:21:42,000
and simple and peaceful

746
00:21:42,000 --> 00:21:43,380
so now we have two artifacts you're

747
00:21:43,380 --> 00:21:44,760
getting pushed up here and for anybody

748
00:21:44,760 --> 00:21:45,960
that's generating stuff that needs to

749
00:21:45,960 --> 00:21:47,880
start shipping your images this is it

750
00:21:47,880 --> 00:21:49,140
you're done

751
00:21:49,140 --> 00:21:50,940
that was all you had to do and your your

752
00:21:50,940 --> 00:21:52,679
job is out you know finished and

753
00:21:52,679 --> 00:21:53,640
complete

754
00:21:53,640 --> 00:21:55,320
and the nice thing is once you have done

755
00:21:55,320 --> 00:21:56,280
this

756
00:21:56,280 --> 00:21:58,620
from the end user side when they start

757
00:21:58,620 --> 00:22:00,480
pulling this stuff they don't know where

758
00:22:00,480 --> 00:22:01,260
to look

759
00:22:01,260 --> 00:22:02,580
all they have to know is they can list

760
00:22:02,580 --> 00:22:04,500
the artifacts on image and this will go

761
00:22:04,500 --> 00:22:06,000
out and hit that refers API the refers

762
00:22:06,000 --> 00:22:07,200
API isn't there it's going to look at

763
00:22:07,200 --> 00:22:09,179
that fallback tag and there's we have

764
00:22:09,179 --> 00:22:11,280
two manifest that lists so let me scroll

765
00:22:11,280 --> 00:22:12,600
back there a little bit you can see that

766
00:22:12,600 --> 00:22:15,539
it is an oci image manifest or sorry

767
00:22:15,539 --> 00:22:17,580
there is a descriptor in there with that

768
00:22:17,580 --> 00:22:18,840
this is an index

769
00:22:18,840 --> 00:22:21,179
of multiple images first one being the

770
00:22:21,179 --> 00:22:23,760
Cyclone DX and the second one down below

771
00:22:23,760 --> 00:22:25,679
is going to be the spdx you can see the

772
00:22:25,679 --> 00:22:27,539
annotations you can see the artifact

773
00:22:27,539 --> 00:22:29,520
type all that detail we need to be able

774
00:22:29,520 --> 00:22:30,860
to query this stuff later on

775
00:22:30,860 --> 00:22:32,760
programmatically query the stuff later

776
00:22:32,760 --> 00:22:33,780
on

777
00:22:33,780 --> 00:22:36,900
so again this was a tag because it was

778
00:22:36,900 --> 00:22:38,580
on the fallback registry so this tag

779
00:22:38,580 --> 00:22:40,080
does exist it looks a little ugly so

780
00:22:40,080 --> 00:22:41,159
this is why people don't like it they

781
00:22:41,159 --> 00:22:42,240
don't want to see all these tags out

782
00:22:42,240 --> 00:22:44,039
there the one nice thing is we only have

783
00:22:44,039 --> 00:22:46,559
one tag so there's not like a Sig tag an

784
00:22:46,559 --> 00:22:48,419
annotation tag you know all these other

785
00:22:48,419 --> 00:22:49,679
things we just have the one tag for

786
00:22:49,679 --> 00:22:51,120
everything

787
00:22:51,120 --> 00:22:53,039
and then if I go and query that tag with

788
00:22:53,039 --> 00:22:54,419
a manifest get you're going to see it

789
00:22:54,419 --> 00:22:56,520
this is going to look very familiar it's

790
00:22:56,520 --> 00:22:57,600
going to unless you had really

791
00:22:57,600 --> 00:22:58,919
short-term memory loss here it's going

792
00:22:58,919 --> 00:23:00,720
to look identical that's you know three

793
00:23:00,720 --> 00:23:03,360
lines up and in case that was like too

794
00:23:03,360 --> 00:23:04,860
fast to go by I'll even scroll up there

795
00:23:04,860 --> 00:23:06,539
and show you that there it was here with

796
00:23:06,539 --> 00:23:08,880
the Manifest list scroll up a little bit

797
00:23:08,880 --> 00:23:11,220
there was a previous one they're the

798
00:23:11,220 --> 00:23:11,880
same

799
00:23:11,880 --> 00:23:13,559
because that was exactly how we queried

800
00:23:13,559 --> 00:23:14,220
it

801
00:23:14,220 --> 00:23:16,559
all right so whether it's artifact list

802
00:23:16,559 --> 00:23:18,419
or the fallback tag we're getting the

803
00:23:18,419 --> 00:23:20,640
same thing with the Manifest kit as well

804
00:23:20,640 --> 00:23:23,700
so from that the big challenges that's

805
00:23:23,700 --> 00:23:26,159
great I want to actually fetch my

806
00:23:26,159 --> 00:23:28,440
Cyclone DXs boom SPX something like that

807
00:23:28,440 --> 00:23:30,120
so I've got the artifact get command

808
00:23:30,120 --> 00:23:32,700
here where I say get me an artifact that

809
00:23:32,700 --> 00:23:34,200
has this subject field that points to

810
00:23:34,200 --> 00:23:36,960
this image so I pass the subject and I

811
00:23:36,960 --> 00:23:38,760
pass that and I say filter and only show

812
00:23:38,760 --> 00:23:40,440
me the thing with this one media type

813
00:23:40,440 --> 00:23:41,820
for the artifact

814
00:23:41,820 --> 00:23:43,559
that's now as long as I keep these media

815
00:23:43,559 --> 00:23:45,659
types predictable I can do this and

816
00:23:45,659 --> 00:23:48,179
there's my S1 right just that easy

817
00:23:48,179 --> 00:23:49,740
so for the end user all I have to do is

818
00:23:49,740 --> 00:23:51,179
memorize that last command they have to

819
00:23:51,179 --> 00:23:52,860
know everything in between they just had

820
00:23:52,860 --> 00:23:54,419
no last command of when I see an image

821
00:23:54,419 --> 00:23:55,740
run this command I get the s bomb and

822
00:23:55,740 --> 00:23:58,039
I'm done

823
00:23:58,080 --> 00:24:00,299
so that's the nice part that's the easy

824
00:24:00,299 --> 00:24:02,039
part if you ever want to do this with

825
00:24:02,039 --> 00:24:03,780
curl I won't go through this entire

826
00:24:03,780 --> 00:24:05,280
slide but I will tell you that all this

827
00:24:05,280 --> 00:24:06,299
stuff if you don't turn on

828
00:24:06,299 --> 00:24:07,980
authentication on your registry server a

829
00:24:07,980 --> 00:24:09,360
lot of stuff gets easier if you know

830
00:24:09,360 --> 00:24:11,280
your media types and advances stuff gets

831
00:24:11,280 --> 00:24:13,500
a lot easier when you don't know all

832
00:24:13,500 --> 00:24:14,460
that and you try to implement that with

833
00:24:14,460 --> 00:24:15,900
curl it gets a little ugly so that's

834
00:24:15,900 --> 00:24:17,400
where the tools come in nice and so

835
00:24:17,400 --> 00:24:18,600
that's where people start writing tools

836
00:24:18,600 --> 00:24:20,640
on top of this but you can actually run

837
00:24:20,640 --> 00:24:23,100
these low-level queries get the Manifest

838
00:24:23,100 --> 00:24:24,840
pull the digest out of one of the

839
00:24:24,840 --> 00:24:26,159
entries and go through all that if

840
00:24:26,159 --> 00:24:27,840
you're curious I'll leave that for later

841
00:24:27,840 --> 00:24:29,220
on all these clouds are up online you

842
00:24:29,220 --> 00:24:30,659
can go replay all these presentations

843
00:24:30,659 --> 00:24:32,400
later on but I don't want to bore you

844
00:24:32,400 --> 00:24:34,799
too much with the curl details here

845
00:24:34,799 --> 00:24:37,140
I do want to show you though that we had

846
00:24:37,140 --> 00:24:38,760
two Registries right and I only showed

847
00:24:38,760 --> 00:24:40,559
you what was going on one registry let

848
00:24:40,559 --> 00:24:43,500
me copy this artifact from a V1 registry

849
00:24:43,500 --> 00:24:44,940
to the new registry of the new release

850
00:24:44,940 --> 00:24:47,580
canvas stuff that has the Reapers API

851
00:24:47,580 --> 00:24:49,980
and if I do that copy is quick because

852
00:24:49,980 --> 00:24:52,440
it's all local on the same machine I run

853
00:24:52,440 --> 00:24:54,000
the list command and you'll see I get

854
00:24:54,000 --> 00:24:55,500
the artifact list back

855
00:24:55,500 --> 00:24:57,600
so I'm able to query this listing of all

856
00:24:57,600 --> 00:24:59,100
the artifacts associated with my image I

857
00:24:59,100 --> 00:25:01,260
copied everything over in one unit if I

858
00:25:01,260 --> 00:25:03,419
do the tag listing I don't have that

859
00:25:03,419 --> 00:25:05,700
digest tag anymore I just have my one

860
00:25:05,700 --> 00:25:07,140
app tag

861
00:25:07,140 --> 00:25:08,880
and if I even try to go back and query

862
00:25:08,880 --> 00:25:10,980
that tag and try to pull it I'm going to

863
00:25:10,980 --> 00:25:12,720
get let's see do I go up on that one so

864
00:25:12,720 --> 00:25:14,220
yeah I'm going to hit the Manifest API

865
00:25:14,220 --> 00:25:16,440
and I'm going to hit that API for this

866
00:25:16,440 --> 00:25:18,360
one digest with that little fallback

867
00:25:18,360 --> 00:25:20,220
digest we had that's going to come up

868
00:25:20,220 --> 00:25:22,320
with say not found four four didn't even

869
00:25:22,320 --> 00:25:24,840
exist so manifest unknown right there on

870
00:25:24,840 --> 00:25:25,860
that line

871
00:25:25,860 --> 00:25:28,380
so without that you might be saying okay

872
00:25:28,380 --> 00:25:30,360
how that happened well you saw the big

873
00:25:30,360 --> 00:25:31,980
pretty picture earlier on I just had to

874
00:25:31,980 --> 00:25:33,960
hit this new API called refers

875
00:25:33,960 --> 00:25:37,260
I hit that query that API and suddenly

876
00:25:37,260 --> 00:25:39,059
what I'm getting out of this was that

877
00:25:39,059 --> 00:25:41,640
manifest list so now that's the same way

878
00:25:41,640 --> 00:25:42,720
you get the data two different

879
00:25:42,720 --> 00:25:44,279
Registries two different methods to get

880
00:25:44,279 --> 00:25:45,779
the data but the same data on both of

881
00:25:45,779 --> 00:25:46,559
them

882
00:25:46,559 --> 00:25:48,600
so that's the beauty of this

883
00:25:48,600 --> 00:25:50,700
all right one last bit of detail here

884
00:25:50,700 --> 00:25:52,679
for anybody in an air gap environment do

885
00:25:52,679 --> 00:25:54,179
I have anybody in like DOD air gap

886
00:25:54,179 --> 00:25:55,320
environment kind of stuff that has to

887
00:25:55,320 --> 00:25:57,720
worry about that one two three four okay

888
00:25:57,720 --> 00:26:00,720
handful if you're at the oci layout is a

889
00:26:00,720 --> 00:26:03,299
great method to move images around on a

890
00:26:03,299 --> 00:26:04,980
file system whenever you copy them so

891
00:26:04,980 --> 00:26:06,240
you can just copy an image from a

892
00:26:06,240 --> 00:26:08,580
registry into the structure it puts it

893
00:26:08,580 --> 00:26:10,080
into a directory on the disk you can zip

894
00:26:10,080 --> 00:26:12,179
it up ship it around and I can do the

895
00:26:12,179 --> 00:26:14,340
artifact list in there now it's just a

896
00:26:14,340 --> 00:26:16,679
directory so I do have the tag in there

897
00:26:16,679 --> 00:26:17,940
I don't have a registry server

898
00:26:17,940 --> 00:26:21,179
generating that API response but in that

899
00:26:21,179 --> 00:26:22,799
directory there is an index that

900
00:26:22,799 --> 00:26:24,419
basically represents all the tags inside

901
00:26:24,419 --> 00:26:26,159
the directory this is the equivalent of

902
00:26:26,159 --> 00:26:28,260
having a repository on a registry on

903
00:26:28,260 --> 00:26:30,240
your file system and you can just copy

904
00:26:30,240 --> 00:26:31,320
your stuff all around

905
00:26:31,320 --> 00:26:33,419
so if you're curious about that another

906
00:26:33,419 --> 00:26:34,860
good side to come back to later on if

907
00:26:34,860 --> 00:26:36,240
you want to look into that and see a

908
00:26:36,240 --> 00:26:37,799
little bit more details there

909
00:26:37,799 --> 00:26:39,360
all right I'm going to keep jumping

910
00:26:39,360 --> 00:26:40,200
ahead because I want to save a little

911
00:26:40,200 --> 00:26:41,100
bit of time in case people have

912
00:26:41,100 --> 00:26:42,600
questions or want to heck with me later

913
00:26:42,600 --> 00:26:43,500
on

914
00:26:43,500 --> 00:26:45,419
but there are other tools to do this

915
00:26:45,419 --> 00:26:46,860
because I think a lot of people say you

916
00:26:46,860 --> 00:26:48,299
know great you show me all the reg

917
00:26:48,299 --> 00:26:50,340
cuddle commands there's another tool out

918
00:26:50,340 --> 00:26:52,080
there called orus so if I said auras

919
00:26:52,080 --> 00:26:53,340
discover on this thing you're going to

920
00:26:53,340 --> 00:26:55,380
see all those manifests listed in there

921
00:26:55,380 --> 00:26:57,600
or all the different uh artifacts are

922
00:26:57,600 --> 00:26:59,880
associated with my image and same for

923
00:26:59,880 --> 00:27:02,100
both Registries whether I hit it on the

924
00:27:02,100 --> 00:27:04,200
new API or the old API it's able to find

925
00:27:04,200 --> 00:27:07,200
it so that's working great and also

926
00:27:07,200 --> 00:27:09,000
you're saying I did also my laptop well

927
00:27:09,000 --> 00:27:10,440
if I go hit the GitHub container

928
00:27:10,440 --> 00:27:12,240
registry in a production environment

929
00:27:12,240 --> 00:27:13,980
right now and an image that I've pushed

930
00:27:13,980 --> 00:27:15,900
they're all up there right now and so

931
00:27:15,900 --> 00:27:17,159
I'm doing this as part of my GitHub

932
00:27:17,159 --> 00:27:18,960
pipelines today right now on an image

933
00:27:18,960 --> 00:27:21,900
that's out there in in the real world

934
00:27:21,900 --> 00:27:24,840
and again I could also go through so let

935
00:27:24,840 --> 00:27:26,039
me show you real quick on what that

936
00:27:26,039 --> 00:27:28,260
artifact is it's um I've got three

937
00:27:28,260 --> 00:27:29,880
different things attached to it I picked

938
00:27:29,880 --> 00:27:31,320
out Docker star generating some of their

939
00:27:31,320 --> 00:27:33,600
attestations on things so I got that

940
00:27:33,600 --> 00:27:36,360
attached to this I've got the again the

941
00:27:36,360 --> 00:27:39,000
2s bombs as well so a couple of those so

942
00:27:39,000 --> 00:27:41,039
as many yes moms or as many artifacts

943
00:27:41,039 --> 00:27:42,299
whatever you want to attach attach

944
00:27:42,299 --> 00:27:43,799
everything you want to

945
00:27:43,799 --> 00:27:46,679
and also not just reg cuddle I could

946
00:27:46,679 --> 00:27:47,880
have also done the aorus Discover

947
00:27:47,880 --> 00:27:49,919
command again on GitHub container

948
00:27:49,919 --> 00:27:51,600
registry and it's going to say hey

949
00:27:51,600 --> 00:27:53,460
you've got all these different artifacts

950
00:27:53,460 --> 00:27:55,740
associated with this image

951
00:27:55,740 --> 00:27:58,380
cool so we've got a way to do this we

952
00:27:58,380 --> 00:27:59,940
got commands to do this we got tools out

953
00:27:59,940 --> 00:28:01,140
here

954
00:28:01,140 --> 00:28:03,000
um which we do what's the next steps

955
00:28:03,000 --> 00:28:05,700
where are we going to go so for registry

956
00:28:05,700 --> 00:28:07,260
servers this is all a lot of the stuff

957
00:28:07,260 --> 00:28:08,760
is still new we're still creating this

958
00:28:08,760 --> 00:28:11,220
stuff so if you are a registry and you

959
00:28:11,220 --> 00:28:13,140
don't filter on unknown Fields what I

960
00:28:13,140 --> 00:28:14,460
mean by that there's this new subject

961
00:28:14,460 --> 00:28:17,039
field we just added so some Registries

962
00:28:17,039 --> 00:28:18,779
are a little picky about what data comes

963
00:28:18,779 --> 00:28:20,760
in oci says you're not supposed to be

964
00:28:20,760 --> 00:28:22,020
but there there are a few people that

965
00:28:22,020 --> 00:28:24,059
are doing that so we're working with

966
00:28:24,059 --> 00:28:25,320
them we're getting really close I think

967
00:28:25,320 --> 00:28:27,360
unless they've already done it they may

968
00:28:27,360 --> 00:28:29,880
have and there's also

969
00:28:29,880 --> 00:28:31,980
um the new the config media types have

970
00:28:31,980 --> 00:28:33,240
changed there were some Registries that

971
00:28:33,240 --> 00:28:34,620
were saying if it's a config me you type

972
00:28:34,620 --> 00:28:35,880
this not a container image I don't want

973
00:28:35,880 --> 00:28:37,020
to allow it

974
00:28:37,020 --> 00:28:38,700
Docker Hub just recently turned that off

975
00:28:38,700 --> 00:28:39,960
and that was awesome for people who

976
00:28:39,960 --> 00:28:41,520
wanted to do like Helm charts pushed up

977
00:28:41,520 --> 00:28:43,260
there that kind of stuff we're finally

978
00:28:43,260 --> 00:28:45,480
able to use Docker hub for this stuff

979
00:28:45,480 --> 00:28:47,039
additionally

980
00:28:47,039 --> 00:28:48,600
um the new artifact manifest we'd like

981
00:28:48,600 --> 00:28:49,919
to see support for that but that comes

982
00:28:49,919 --> 00:28:51,600
with a big asterisk I'll get on that in

983
00:28:51,600 --> 00:28:54,480
just one second here and the enable the

984
00:28:54,480 --> 00:28:56,580
refers API so that's the thing that I

985
00:28:56,580 --> 00:28:57,720
think we're really pushing for right now

986
00:28:57,720 --> 00:28:59,400
is to get Registries to start adopting

987
00:28:59,400 --> 00:29:01,620
this like I say release camp this is

988
00:29:01,620 --> 00:29:03,179
just coming out the door from oci we've

989
00:29:03,179 --> 00:29:04,559
been having means and trying to get this

990
00:29:04,559 --> 00:29:07,260
stuff getting to a ga release we're

991
00:29:07,260 --> 00:29:08,640
still a little ways off from that but

992
00:29:08,640 --> 00:29:09,900
hopefully in the not too distant future

993
00:29:09,900 --> 00:29:12,179
so anybody's running a registry or

994
00:29:12,179 --> 00:29:13,740
saying let's let's get this stuff out

995
00:29:13,740 --> 00:29:15,179
there and standardized

996
00:29:15,179 --> 00:29:16,679
I think the more important part is for

997
00:29:16,679 --> 00:29:18,059
the people running clients right I think

998
00:29:18,059 --> 00:29:19,440
we probably got more client people in

999
00:29:19,440 --> 00:29:20,820
here than registered people

1000
00:29:20,820 --> 00:29:22,620
so if you're a client and you want

1001
00:29:22,620 --> 00:29:24,419
portability to go from one registry to

1002
00:29:24,419 --> 00:29:25,140
another

1003
00:29:25,140 --> 00:29:27,480
use that image manifest we did say

1004
00:29:27,480 --> 00:29:28,620
earlier on that slide there's this new

1005
00:29:28,620 --> 00:29:30,059
artifact manifest we created I keep

1006
00:29:30,059 --> 00:29:32,039
throwing asterisks on there part of the

1007
00:29:32,039 --> 00:29:33,659
asterisk is that we're not really quite

1008
00:29:33,659 --> 00:29:35,100
sure how and when we're going to

1009
00:29:35,100 --> 00:29:37,320
transition to that and so we're still

1010
00:29:37,320 --> 00:29:39,059
working through those details right now

1011
00:29:39,059 --> 00:29:41,220
and the the other part of that is that

1012
00:29:41,220 --> 00:29:42,720
any registry that hasn't been upgraded

1013
00:29:42,720 --> 00:29:44,700
couldn't accept this manifest and so for

1014
00:29:44,700 --> 00:29:46,919
portability use the old image manifest

1015
00:29:46,919 --> 00:29:48,659
for a long while to use this install

1016
00:29:48,659 --> 00:29:49,919
transparent you don't know when you're

1017
00:29:49,919 --> 00:29:51,120
pulling a Helm chart that this came with

1018
00:29:51,120 --> 00:29:52,559
an image manifest you just know you got

1019
00:29:52,559 --> 00:29:54,779
a Helm chart so who cares what manifest

1020
00:29:54,779 --> 00:29:56,640
it is for a good long while at some

1021
00:29:56,640 --> 00:29:57,779
point it'll be nice to have things or

1022
00:29:57,779 --> 00:29:59,520
artifacts look at like artifacts some

1023
00:29:59,520 --> 00:30:00,899
things their image look like images but

1024
00:30:00,899 --> 00:30:02,039
we're not there yet it's going to take

1025
00:30:02,039 --> 00:30:03,960
us a while to get everything upgraded

1026
00:30:03,960 --> 00:30:05,460
the other important thing that fallback

1027
00:30:05,460 --> 00:30:07,200
tag if you're writing a client of your

1028
00:30:07,200 --> 00:30:08,760
own you have to do that management if

1029
00:30:08,760 --> 00:30:09,720
you're using someone's written the

1030
00:30:09,720 --> 00:30:10,919
client they're going to do this all for

1031
00:30:10,919 --> 00:30:12,419
you and you know you just use their apis

1032
00:30:12,419 --> 00:30:13,740
and their tooling they'll they'll

1033
00:30:13,740 --> 00:30:15,720
implement this for you but when you have

1034
00:30:15,720 --> 00:30:16,980
this stuff that's being implemented on

1035
00:30:16,980 --> 00:30:18,059
the client side and not the registry

1036
00:30:18,059 --> 00:30:20,700
doing the refers API what they're doing

1037
00:30:20,700 --> 00:30:21,720
is they're going to have to go up to

1038
00:30:21,720 --> 00:30:22,919
that registry and manage that tag which

1039
00:30:22,919 --> 00:30:24,059
means if the tag is already there

1040
00:30:24,059 --> 00:30:25,620
someone's already pushed an artifact you

1041
00:30:25,620 --> 00:30:27,179
have to pull down the existing list of

1042
00:30:27,179 --> 00:30:29,520
all the artifacts add your new entry to

1043
00:30:29,520 --> 00:30:31,799
that list and then re-push the new list

1044
00:30:31,799 --> 00:30:33,779
if anybody's ever thought about systems

1045
00:30:33,779 --> 00:30:35,399
where you're doing like a whole lot of

1046
00:30:35,399 --> 00:30:36,720
things going on simultaneously you might

1047
00:30:36,720 --> 00:30:38,159
be thinking race conditions and that is

1048
00:30:38,159 --> 00:30:39,960
one of the downsides of this is that you

1049
00:30:39,960 --> 00:30:40,919
can have multiple clients out there

1050
00:30:40,919 --> 00:30:42,360
pushing this stuff and clobbering each

1051
00:30:42,360 --> 00:30:44,159
other in the process that's one of the

1052
00:30:44,159 --> 00:30:45,240
beauties of getting this done service

1053
00:30:45,240 --> 00:30:47,460
however is the client-side

1054
00:30:47,460 --> 00:30:49,919
the the other important part here is the

1055
00:30:49,919 --> 00:30:52,559
artifact type when you pick that if you

1056
00:30:52,559 --> 00:30:54,059
look to the artifact types I was picking

1057
00:30:54,059 --> 00:30:56,580
with the example with the exclusion of

1058
00:30:56,580 --> 00:30:59,220
my example early on I was picking some

1059
00:30:59,220 --> 00:31:01,260
media types that were well known they

1060
00:31:01,260 --> 00:31:03,059
came from Ayanna they're registered up

1061
00:31:03,059 --> 00:31:04,500
there so if you go and look at Cyclone

1062
00:31:04,500 --> 00:31:06,720
DX niana they've got their list of here

1063
00:31:06,720 --> 00:31:08,100
all the media types been registered with

1064
00:31:08,100 --> 00:31:09,840
us I picked those for all the media

1065
00:31:09,840 --> 00:31:11,399
types I used that way anybody else is

1066
00:31:11,399 --> 00:31:13,679
using the same queries can find this

1067
00:31:13,679 --> 00:31:16,860
same Cyclone DX s-bomb no matter what

1068
00:31:16,860 --> 00:31:18,779
image it is as long as every image uses

1069
00:31:18,779 --> 00:31:20,100
the same media type it's easy to find

1070
00:31:20,100 --> 00:31:21,480
from one image to the next image in the

1071
00:31:21,480 --> 00:31:23,580
next image so yes people use some very

1072
00:31:23,580 --> 00:31:25,080
predictable media types and hopefully

1073
00:31:25,080 --> 00:31:26,340
that comes from the project itself

1074
00:31:26,340 --> 00:31:28,200
saying this is our media type that we've

1075
00:31:28,200 --> 00:31:30,120
standardized everything on

1076
00:31:30,120 --> 00:31:32,580
additionally we asked to use annotations

1077
00:31:32,580 --> 00:31:34,559
very responsibly that's one of the

1078
00:31:34,559 --> 00:31:35,520
challenges we're pulling those

1079
00:31:35,520 --> 00:31:38,100
annotations up from the Manifest up into

1080
00:31:38,100 --> 00:31:40,380
our listing and there are people like to

1081
00:31:40,380 --> 00:31:42,600
put a lot of stuff in an annotation

1082
00:31:42,600 --> 00:31:43,919
um I'm sure people have been on the

1083
00:31:43,919 --> 00:31:45,659
kubernetes had has probably seen a lot

1084
00:31:45,659 --> 00:31:47,520
of abusive annotations before on on your

1085
00:31:47,520 --> 00:31:49,919
side as well and container image

1086
00:31:49,919 --> 00:31:52,260
manifest they're not overused too much

1087
00:31:52,260 --> 00:31:53,520
yet but I think they're going to get

1088
00:31:53,520 --> 00:31:54,960
there before too long and what we're

1089
00:31:54,960 --> 00:31:57,240
seeing from registry operators is saying

1090
00:31:57,240 --> 00:31:58,740
if we've got to index all this details

1091
00:31:58,740 --> 00:32:01,020
so we can generate this API response

1092
00:32:01,020 --> 00:32:02,399
we're just going to start rejecting

1093
00:32:02,399 --> 00:32:03,600
Manifesto they start cramming too much

1094
00:32:03,600 --> 00:32:05,159
data in there so if you want that

1095
00:32:05,159 --> 00:32:06,960
portability be responsible only put the

1096
00:32:06,960 --> 00:32:08,580
data in those annotations that you need

1097
00:32:08,580 --> 00:32:09,840
to be able to do these queries on

1098
00:32:09,840 --> 00:32:11,340
yourself don't put the whole world in

1099
00:32:11,340 --> 00:32:13,440
there be nice to the registry servers

1100
00:32:13,440 --> 00:32:15,000
they'll be nice to you

1101
00:32:15,000 --> 00:32:17,279
all right so the catches

1102
00:32:17,279 --> 00:32:18,720
um the big catch here is we're not done

1103
00:32:18,720 --> 00:32:21,179
we're still implementing this stuff and

1104
00:32:21,179 --> 00:32:22,980
so as it's still being implemented the

1105
00:32:22,980 --> 00:32:24,360
Registries the clients all this stuff is

1106
00:32:24,360 --> 00:32:25,740
at various stages

1107
00:32:25,740 --> 00:32:27,840
there's still some debate on if and how

1108
00:32:27,840 --> 00:32:29,340
we're going to do that artifact manifest

1109
00:32:29,340 --> 00:32:31,440
type we spent three hours of Glorious

1110
00:32:31,440 --> 00:32:34,080
fun meeting time yesterday back and

1111
00:32:34,080 --> 00:32:35,460
forth and we're still not quite to a

1112
00:32:35,460 --> 00:32:37,080
final solution we'll get there we're

1113
00:32:37,080 --> 00:32:38,940
going to work it out but uh it's just

1114
00:32:38,940 --> 00:32:39,960
going to take us a while to sort out how

1115
00:32:39,960 --> 00:32:42,240
we want to figure that out

1116
00:32:42,240 --> 00:32:43,380
um but for anybody that wants to do this

1117
00:32:43,380 --> 00:32:45,419
today like I say I'm doing this right

1118
00:32:45,419 --> 00:32:47,520
now in my own images I I trusted enough

1119
00:32:47,520 --> 00:32:49,860
that I'm putting it out there so you can

1120
00:32:49,860 --> 00:32:51,240
try it out you can at least do some

1121
00:32:51,240 --> 00:32:52,620
experiments see how the code works for

1122
00:32:52,620 --> 00:32:55,080
you and this is the nice way that I

1123
00:32:55,080 --> 00:32:56,220
think we're going to see for going

1124
00:32:56,220 --> 00:32:58,200
forward into the future of how you want

1125
00:32:58,200 --> 00:33:00,299
to have these things ported passed

1126
00:33:00,299 --> 00:33:02,460
around all these s-bombs signatures

1127
00:33:02,460 --> 00:33:04,679
other metadata passing out their image

1128
00:33:04,679 --> 00:33:06,240
in a way that we can now associate the

1129
00:33:06,240 --> 00:33:07,980
two together and ship them together and

1130
00:33:07,980 --> 00:33:09,240
transform so I hope we're going to get

1131
00:33:09,240 --> 00:33:10,559
to that point

1132
00:33:10,559 --> 00:33:12,240
and so with that I know that was a

1133
00:33:12,240 --> 00:33:13,320
little bit of Speed Run I know there's a

1134
00:33:13,320 --> 00:33:15,539
lot of little code but hopefully that

1135
00:33:15,539 --> 00:33:17,820
answer at least some questions that the

1136
00:33:17,820 --> 00:33:19,320
future is here for what we're doing and

1137
00:33:19,320 --> 00:33:20,880
it's been a long walk on the oci to get

1138
00:33:20,880 --> 00:33:22,080
to this point it's been a long painful

1139
00:33:22,080 --> 00:33:23,340
walk for some people in the back of the

1140
00:33:23,340 --> 00:33:24,539
room

1141
00:33:24,539 --> 00:33:25,799
um but we're getting there to the point

1142
00:33:25,799 --> 00:33:27,000
we're actually ready for I think end

1143
00:33:27,000 --> 00:33:29,519
users to start using this so I hope that

1144
00:33:29,519 --> 00:33:30,720
some people get a little bit of

1145
00:33:30,720 --> 00:33:31,980
inspiration from that

1146
00:33:31,980 --> 00:33:33,840
so with that throw it out there for any

1147
00:33:33,840 --> 00:33:35,850
questions

1148
00:33:35,850 --> 00:33:41,519
[Applause]

1149
00:33:41,519 --> 00:33:42,920
go ahead

1150
00:33:42,920 --> 00:33:46,029
[Music]

1151
00:33:49,399 --> 00:33:51,500
do I see it as distribution

1152
00:33:51,500 --> 00:33:54,120
discoverability or both and I would say

1153
00:33:54,120 --> 00:33:57,240
yeah both because not only can you ship

1154
00:33:57,240 --> 00:33:59,340
your s-bomb and move them around from

1155
00:33:59,340 --> 00:34:01,679
one place to the other and keep them

1156
00:34:01,679 --> 00:34:04,260
associated with the image itself but you

1157
00:34:04,260 --> 00:34:05,700
can query that image with a listing and

1158
00:34:05,700 --> 00:34:07,200
say show me everything is associated

1159
00:34:07,200 --> 00:34:09,719
with that image and you may not know in

1160
00:34:09,719 --> 00:34:10,879
advance what all these different

1161
00:34:10,879 --> 00:34:12,719
artifact types are they're going to be

1162
00:34:12,719 --> 00:34:13,918
associated with the image there can be

1163
00:34:13,918 --> 00:34:15,480
new stuff that appears the next day that

1164
00:34:15,480 --> 00:34:17,040
wasn't there before and so it gives you

1165
00:34:17,040 --> 00:34:19,699
that discoverability

1166
00:34:20,699 --> 00:34:23,960
yes have

1167
00:34:23,960 --> 00:34:26,399
I had the recursion discussion dig into

1168
00:34:26,399 --> 00:34:27,599
a little bit more where you're going

1169
00:34:27,599 --> 00:34:29,839
with that

1170
00:34:30,119 --> 00:34:31,918
you can do that absolutely and because

1171
00:34:31,918 --> 00:34:34,619
this is a directed acyclic graph there

1172
00:34:34,619 --> 00:34:36,418
is always an end there is always a

1173
00:34:36,418 --> 00:34:37,980
bottom to that path and so you can go

1174
00:34:37,980 --> 00:34:39,480
down as far as you want to go you can

1175
00:34:39,480 --> 00:34:42,300
have a signed s-bomb that's not signed

1176
00:34:42,300 --> 00:34:43,739
with s-bomb type but just an external

1177
00:34:43,739 --> 00:34:45,780
signature type if you want to and that

1178
00:34:45,780 --> 00:34:47,280
would be an external artifact associated

1179
00:34:47,280 --> 00:34:48,659
with the s bomb this and associate with

1180
00:34:48,659 --> 00:34:51,980
your image you can absolutely do that

1181
00:34:52,918 --> 00:34:55,918
any other questions

1182
00:34:55,918 --> 00:34:57,720
okay all you gotta do now is just turn

1183
00:34:57,720 --> 00:35:02,180
on you ready toddy go ahead

1184
00:35:03,480 --> 00:35:05,220
when can we start the spec for which

1185
00:35:05,220 --> 00:35:07,380
part

1186
00:35:07,380 --> 00:35:09,300
for the cats um

1187
00:35:09,300 --> 00:35:10,680
I keep putting cats in all my

1188
00:35:10,680 --> 00:35:12,660
presentations so I think yeah we're

1189
00:35:12,660 --> 00:35:14,099
right there we're ready to do it let's

1190
00:35:14,099 --> 00:35:15,900
let's knock that out next week

1191
00:35:15,900 --> 00:35:18,440
all right

1192
00:35:20,180 --> 00:35:23,280
it's got to have those and I need to

1193
00:35:23,280 --> 00:35:24,300
include those on every one of my images

1194
00:35:24,300 --> 00:35:26,700
from this point forward all right I saw

1195
00:35:26,700 --> 00:35:28,320
the stop sign I think my time is all up

1196
00:35:28,320 --> 00:35:29,579
if you've got any other questions for me

1197
00:35:29,579 --> 00:35:31,079
I think we're just at a coffee break now

1198
00:35:31,079 --> 00:35:32,520
so I don't want to hold you from coffee

1199
00:35:32,520 --> 00:35:33,780
or tea or anything like that but feel

1200
00:35:33,780 --> 00:35:35,940
free to ping me in we'll chat later on

1201
00:35:35,940 --> 00:35:37,500
thanks

1202
00:35:37,500 --> 00:35:40,400
foreign

